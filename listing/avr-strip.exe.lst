sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_4C1658 1 +
mov ds:dword_4C1654 1 +
mov ds:dword_4C1650 1 +
mov ds:dword_4C1660 1 +
jz loc_4010B0  +
mov ds:dword_4BD008 eax +
mov eax ds:dword_4C1664 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_48ADD0  +
mov edx ds:dword_4C1668 +
mov ds:dword_4C1A1C eax +
mov ds:dword_4C1A20 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_48B010  +
cmp dword_492FF0 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_48B080 +
call sub_48B070  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_4C166C +
mov dword ptr [esp+10h] offset dword_4BD000 +
mov dword ptr [esp+8] offset dword_4BD014 +
mov dword ptr [esp+4] offset dword_4BD018 +
mov ds:dword_4BD000 eax +
mov eax ds:dword_4C1670 +
mov dword ptr [esp] offset dword_4BD01C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_4BD010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_48BDD0  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_4C1664 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_4C1A24 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_4C1A28 +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_4C1A28 +
test eax eax +
jz loc_401481  +
mov ds:dword_4BD004 1 +
mov eax ds:dword_4C1A28 +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_4BB5E0 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_48B380  +
mov [esp+88h+var_88] offset sub_48AEC0 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_4C1674 eax +
mov [esp+88h+var_88] offset dword_401000 +
call loc_492FF8  +
call sub_48B650  +
mov eax ds:_acmdln +
mov ds:dword_4C1A0C 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_4C1A08 eax +
mov ebx ds:dword_4C1664 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_492000 eax +
mov eax ds:dword_4BD01C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_4BD018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_4BD018 esi +
call sub_48B6E0  +
mov edx ds:dword_4BD014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_4BD01C +
mov ecx ds:dword_4BD014 +
mov edx ds:dword_4BD018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_48D550  +
mov ecx ds:dword_4BD008 +
test ecx ecx +
mov ds:dword_4BD00C eax +
jz loc_4014AB  +
mov edx ds:dword_4BD004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_4BD00C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4C1A28 +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_4C1A28 +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_4C3008 +
mov [esp+88h+var_88] offset unk_4C3000 +
call _initterm  +
test ebx ebx +
mov ds:dword_4C1A28 2 +
jnz loc_401261  +
xchg ebx ds:dword_4C1A24 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_4C1A28 1 +
mov [esp+88h+var_84] offset unk_4C3018 +
mov [esp+88h+var_88] offset unk_4C300C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_4C1664 1 +
call sub_48B700  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_4C1664 0 +
call sub_48B700  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_493004 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_493004 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+14h] +
mov ebx [edx+14h] +
and eax 102h +
and ebx 102h +
cmp eax 102h +
jz loc_4015C0  +
cmp ebx 102h +
jz loc_4015D0  +
mov ebx [edx+20h] +
mov eax 1 +
cmp [ecx+20h] ebx +
ja loc_4015BD  +
jb loc_4015D0  +
mov ebx [edx+24h] +
cmp [ecx+24h] ebx +
mov edx [edx+24h] +
sbb ebx ebx +
cmp [ecx+24h] edx +
cmovbe eax ebx +
pop ebx  +
retn   +
cmp ebx 102h +
mov eax 1 +
jz loc_40159D  +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
sub esp 2Ch +
mov [esp+2Ch+var_18] offset free +
mov [esp+2Ch+var_1C] offset loc_474320 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] offset sub_401620 +
mov [esp+2Ch+var_28] offset dword_475020 +
mov [esp+2Ch+var_2C] 10h +
call sub_474870  +
add esp 2Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
push esi  +
mov edi offset aIa32 +
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+4] +
mov byte ptr [eax-4] 70h +
mov byte ptr [eax-3] 65h +
mov byte ptr [eax-2] 69h +
mov esi eax +
cmps   +
jz loc_401696  +
mov [esp+18h+var_14] offset aX86_64 +
mov [esp+18h+var_18] eax +
call strcmp  +
test eax eax +
jnz loc_40168F  +
mov byte ptr [ebx+7] 2Dh +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov byte ptr [ebx+5] 33h +
mov byte ptr [ebx+6] 38h +
mov byte ptr [ebx+7] 36h +
jmp loc_40168F  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
mov eax [eax] +
mov edx [ebx] +
cmp byte ptr [eax] 21h +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] edx +
jz loc_4016F0  +
mov [esp+18h+var_18] eax +
call sub_4752D0  +
test eax eax +
jz loc_4016E7  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov dword ptr [ebx+4] 1 +
jmp loc_4016DD  +
add eax 1 +
mov [esp+18h+var_18] eax +
call sub_4752D0  +
test eax eax +
jnz loc_4016DD  +
mov dword ptr [ebx+4] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax ds:dword_4C1A10 +
mov [esp+18h+var_14] offset aUsageSOptionSI +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 29h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aRemovesSymbols +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 12h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheOptionsAre +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 13Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIInputTargetBf +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0E4h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDEnableDetermi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 4A6h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aRRemoveSection +
call fwrite  +
mov eax ds:dword_4C1A10 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_41D7A0  +
test esi esi +
jz loc_40193F  +
mov [esp+18h+var_18] esi +
call exit  +
mov [esp+18h+var_10] offset aHttpWww_source +
mov [esp+18h+var_14] offset aReportBugsToS +
mov [esp+18h+var_18] ebx +
call fprintf  +
jmp loc_401937  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax ds:dword_4C1A10 +
mov [esp+18h+var_14] offset aUsageSOption_0 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCopiesABinaryF +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 12h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheOptionsAre +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1D5h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIInputTarget_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0E4h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDEnableDetermi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1A04h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aJOnlySectionNa +
call fwrite  +
mov eax ds:dword_4C1A10 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_41D7A0  +
test esi esi +
jz loc_401A3F  +
mov [esp+18h+var_18] esi +
call exit  +
mov [esp+18h+var_10] offset aHttpWww_source +
mov [esp+18h+var_14] offset aReportBugsToS +
mov [esp+18h+var_18] ebx +
call fprintf  +
jmp loc_401A37  +
***
push esi  +
push edi  +
push edi  +
push esi  +
xor edi edi +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
jmp loc_401ED9  +
or edi 1 +
test ebp ebp +
jz loc_401F2F  +
mov ebx ebp +
mov [esp+24h+var_20] 2Ch +
mov [esp+24h+var_24] ebx +
call strchr  +
test eax eax +
mov ebp eax +
jz loc_401F40  +
mov esi eax +
add ebp 1 +
sub esi ebx +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aAlloc +
call ds:_strnicmp  +
test eax eax +
jz loc_401ED0  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aLoad +
call ds:_strnicmp  +
test eax eax +
jnz loc_401F50  +
or edi 2 +
test ebp ebp +
jnz loc_401ED7  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+24h+var_24] ebx +
call strlen  +
mov esi eax +
jmp loc_401EF6  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aNoload +
call ds:_strnicmp  +
test eax eax +
jnz loc_401F74  +
or edi 200h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aReadonly +
call ds:_strnicmp  +
test eax eax +
jnz loc_401F95  +
or edi 8 +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aDebug +
call ds:_strnicmp  +
test eax eax +
jnz loc_401FB9  +
or edi 2000h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aCode +
call ds:_strnicmp  +
test eax eax +
jnz loc_401FDA  +
or edi 10h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aData +
call ds:_strnicmp  +
test eax eax +
jnz loc_401FFB  +
or edi 20h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aRom +
call ds:_strnicmp  +
test eax eax +
jnz loc_40201C  +
or edi 40h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aShare +
call ds:_strnicmp  +
test eax eax +
jnz loc_402040  +
or edi 8000000h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aContents +
call ds:_strnicmp  +
test eax eax +
jnz loc_402064  +
or edi 100h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aMerge +
call ds:_strnicmp  +
test eax eax +
jnz loc_402088  +
or edi 800000h +
jmp loc_401ED3  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset aStrings +
call ds:_strnicmp  +
test eax eax +
jnz loc_4020AC  +
or edi 1000000h +
jmp loc_401ED3  +
lea eax [esi+1] +
mov [esp+24h+var_24] eax +
call sub_4742F0  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] ebx +
mov edi eax +
mov [esp+24h+var_24] eax +
call strncpy  +
mov byte ptr [edi+esi] 0 +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] offset aUnrecognizedSe +
call sub_41D6C0  +
mov [esp+24h+var_20] offset aAllocLoadNoloa +
mov [esp+24h+var_24] offset aSupportedFlags +
call sub_41D690  +
jmp sub_402100  +
***
push edi  +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_402218  +
push edi  +
push esi  +
push ebx  +
mov edx [edx+0A0h] +
mov ebx [eax+1Ch] +
cmp ebx [edx+214h] +
jnb loc_402220  +
mov edx [edx+40h] +
mov edi [ecx+1B0h] +
xor ecx ecx +
mov edx [edx+ebx*4] +
cmp dword ptr [edx+4] 2 +
jnz loc_402212  +
mov esi [eax+20h] +
mov eax [edi+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [edx+18h] +
xor edx edx +
div  ebx +
cmp esi eax +
jnb loc_402212  +
mov eax ds:dword_4BD0E0 +
mov ecx [eax+esi*4-4] +
pop ebx  +
mov eax ecx +
pop esi  +
pop edi  +
retn   +
xor ecx ecx +
mov eax ecx +
retn   +
xor ecx ecx +
jmp loc_402212  +
***
mov ebx [eax+4] +
cmp dword ptr [ebx+4] 2 +
jz loc_402242  +
add esp 18h +
pop ebx  +
retn   +
cmp ecx 2 +
jz loc_402265  +
xor edx edx +
test ecx ecx +
setnz dl  +
mov ecx [ebx+1B0h] +
mov ecx [ecx+50h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call ecx  +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx] +
mov edx 1 +
cmp dword ptr [ecx+4] 2 +
jnz loc_40224E  +
mov edx [ecx+1B0h] +
mov edx [edx+4Ch] +
test edx edx +
setnz dl  +
movzx edx dl +
jmp loc_40224E  +
***
sub esp 14h +
mov ebx ds:dword_4BD084 +
test ebx ebx +
jz loc_4022BA  +
mov esi [eax] +
mov eax [ebx+4] +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_10] eax +
call strcmp  +
test eax eax +
jz loc_4022C2  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4022A1  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
sub esp 14h +
mov [esp+18h+var_18] eax +
call strlen  +
mov ecx 4 +
lea esi [edi+eax-4] +
mov edi offset a_dwo +
cmps   +
setz al  +
add esp 14h +
movzx eax al +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push esi  +
sub esp 2Ch +
mov ecx ds:dword_4BD068 +
test ecx ecx +
jnz loc_4024E5  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call sub_474C30  +
test eax eax +
setnz al  +
add esp 2Ch +
movzx eax al +
retn   +
mov [esp+2Ch+var_14] eax +
lea eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] offset sub_4016B0 +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] 0 +
call sub_474F90  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
***
jmp sub_402520  +
***
mov ebx eax +
sub esp 4 +
call sub_402300  +
test eax eax +
jnz loc_4025B5  +
test byte ptr [ebx+17h] 2 +
jz loc_40259E  +
mov edx [ebx+94h] +
mov eax [ebx+8Ch] +
call sub_4021C0  +
test eax eax +
jz loc_4025C0  +
mov esi [eax+4] +
cmp ds:dword_4BD0C8 7 +
jz loc_4025A4  +
mov edx ds:dword_4BD060 +
mov eax esi +
call sub_4024C0  +
test eax eax +
jnz loc_4025B5  +
mov eax [ebx+8Ch] +
mov esi [eax+7Ch] +
test esi esi +
jz loc_4025B5  +
mov ebx esi +
jmp loc_402591  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp esi ebx +
jz loc_4025B5  +
test ebx ebx +
jz loc_4025B5  +
mov eax ebx +
call sub_402300  +
test eax eax +
jnz loc_402580  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx ds:dword_4BD058 +
mov eax esi +
call sub_4024C0  +
test eax eax +
jnz loc_40255B  +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov esi [ebx] +
jmp loc_402552  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov eax ebx +
call sub_402520  +
test eax eax +
jz loc_4025F0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi ds:dword_4BD0E4 +
mov eax [ebx+14h] +
mov esi [ebx] +
test edi edi +
mov [esp+2Ch+var_14] eax +
jnz loc_402613  +
jmp loc_402762  +
mov edi [edi+0Ch] +
test edi edi +
jz loc_402762  +
mov [esp+2Ch+var_28] esi +
mov eax [edi] +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jnz loc_402608  +
mov ebp [edi+8] +
mov edi [edi+4] +
cmp ebp 0FFFFFFFFh +
cmovz ebp [esp+2Ch+var_14] +
mov edx ds:dword_4BD028 +
test edx edx +
jz loc_402644  +
test byte ptr [esp+2Ch+var_14] 1 +
jnz loc_402652  +
mov edx ds:dword_4BD02C +
test edx edx +
jz loc_402907  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strlen  +
mov [esp+2Ch+var_2C] edi +
mov esi eax +
call strlen  +
lea eax [esi+eax+1] +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] eax +
call sub_475790  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call strcpy  +
mov eax [ebx] +
xor edx edx +
mov ecx 40h +
call sub_401710  +
test eax eax +
jz loc_402888  +
and ebp 104h +
or ebp [eax+18h] +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
call sub_41EAF0  +
test eax eax +
mov esi eax +
jz loc_402963  +
mov eax [ebx+24h] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_421C20  +
mov ecx dword_4927C0 +
test ecx ecx +
js loc_402860  +
mov ecx ds:dword_4BD0D8 +
xor edx edx +
lea eax [eax+ecx-1] +
div  ecx +
imul eax dword_4927BC +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_41EDE0  +
mov edx offset aFailedToSetSiz +
test eax eax +
jnz loc_402770  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_28] eax +
mov ds:dword_4BD0CC 1 +
call sub_41E1E0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+2Ch+var_14] +
mov edi esi +
jmp loc_402633  +
mov eax [ebx] +
xor edx edx +
mov ecx 0Ch +
mov edi [ebx+1Ch] +
call sub_401710  +
test eax eax +
jz loc_40291D  +
test byte ptr [eax+0Ch] 4 +
jnz loc_402875  +
add edi [eax+10h] +
or byte ptr [esi+18h] 1 +
xor edx edx +
mov eax [ebx] +
mov ecx 30h +
mov [esi+20h] edi +
mov [esi+1Ch] edi +
mov edi [ebx+20h] +
call sub_401710  +
test eax eax +
jz loc_402912  +
test byte ptr [eax+0Ch] 20h +
jz loc_402880  +
add edi [eax+14h] +
mov eax [ebx+40h] +
mov [esi+20h] edi +
mov [esi+40h] eax +
mov eax [ebx+78h] +
mov [esi+78h] eax +
movzx eax byte ptr [esi+18h] +
movzx edx byte ptr [ebx+18h] +
and eax 0FFFFFFCFh +
and edx 30h +
or eax edx +
test byte ptr [ebx+17h] 2 +
mov [esi+18h] al +
mov [ebx+3Ch] esi +
mov dword ptr [ebx+38h] 0 +
jz loc_402824  +
mov edi [ebx+8Ch] +
mov edx [ebx+94h] +
mov eax edi +
call sub_4021C0  +
test eax eax +
jz loc_402824  +
mov ecx [esp+2Ch+arg_0] +
or dword ptr [eax+0Ch] 20h +
mov edx [ecx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_402928  +
mov eax [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+0B4h] +
mov [esp+2Ch+var_24] ecx +
mov ecx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ecx +
call eax  +
mov edx offset aFailedToCopyPr +
test eax eax +
jnz loc_4025E6  +
jmp loc_402734  +
mov edx ds:dword_4BD024 +
test edx edx +
mov edx 0 +
cmovnz eax edx +
jmp loc_402717  +
mov edi [eax+10h] +
jmp loc_402796  +
mov edi [eax+14h] +
jmp loc_4027C6  +
cmp ds:dword_4BD0C8 4 +
jnz loc_4026B3  +
test ebp 2000001h +
jz loc_4026B3  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+4] +
cmp eax 5 +
jz loc_402951  +
cmp eax 2 +
jz loc_402930  +
mov eax [esp+2Ch+arg_8] +
and ebp 0FDFFFEFDh +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4026B3  +
mov eax [esp+2Ch+var_10] +
and dword ptr [ebx+14h] 0FDFFFEFDh +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
call sub_41EAF0  +
test eax eax +
mov esi eax +
jz loc_402963  +
mov eax [eax+8Ch] +
mov dword ptr [eax+4] 8 +
jmp loc_4026D5  +
mov eax esi +
mov [esp+2Ch+var_10] edi +
jmp loc_402696  +
add edi ds:dword_4BD0A8 +
jmp loc_4027C6  +
add edi ds:dword_4BD0A8 +
jmp loc_402796  +
mov [edi+74h] eax +
jmp loc_402824  +
mov esi [ebx] +
mov edi offset a_buildid +
mov ecx 9 +
cmps   +
setz al  +
movzx eax al +
test eax eax +
jnz loc_4026B3  +
jmp loc_4028B9  +
mov eax [ebx+8Ch] +
cmp dword ptr [eax+4] 7 +
setz al  +
movzx eax al +
jmp loc_402944  +
mov edx offset aFailedToCreate +
jmp loc_402734  +
***
mov edx ds:dword_4BD0CC +
test edx edx +
jnz loc_402984  +
mov ecx ds:dword_4BD024 +
test ecx ecx +
jz loc_402990  +
mov eax 1 +
retn   +
push ebx  +
mov ebx eax +
sub esp 8 +
call sub_402520  +
test eax eax +
jz loc_4029B0  +
mov eax 1 +
add esp 8 +
pop ebx  +
retn   +
mov eax ebx +
call sub_402290  +
test eax eax +
jnz loc_40299F  +
test byte ptr [ebx+17h] 2 +
jnz loc_40299F  +
mov eax [ebx+3Ch] +
mov edx [ebx+24h] +
test eax eax +
setz al  +
test edx edx +
setz dl  +
or eax edx +
movzx eax al +
jmp loc_4029A4  +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax ebx +
call sub_402970  +
test eax eax +
jnz loc_402DFB  +
movzx eax byte ptr [esi+28h] +
mov edi [ebx+3Ch] +
and eax 7 +
cmp al 3 +
jz loc_402E12  +
cmp ds:dword_4BD0C8 6 +
jz loc_402E12  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_420CA0  +
test eax eax +
js loc_402E03  +
jz loc_402E12  +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] eax +
call sub_4742F0  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
mov ecx eax +
mov [esp+2Ch+var_1C] eax +
mov eax ds:dword_4BD0E0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_20] eax +
call sub_420CE0  +
mov edx [esp+2Ch+var_18] +
test eax eax +
mov ecx eax +
js loc_402EF4  +
cmp ds:dword_4BD0C8 7 +
jz loc_402E68  +
mov ebx eax +
test ecx ecx +
mov [esp+2Ch+var_20] ebx +
jnz loc_402DE7  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] 0 +
call sub_420B80  +
mov eax [esp+2Ch+var_1C] +
and dword ptr [edi+14h] 0FFFFFFFBh +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
call sub_420B80  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0FFFFFFFFh +
jnz loc_402E40  +
call sub_420A00  +
cmp eax 5 +
jnz loc_402E40  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
call sub_420B80  +
and dword ptr [edi+14h] 0FFFFFFFBh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] 0 +
mov ds:dword_4BD0CC 1 +
call sub_41E1E0  +
jmp loc_402DFB  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] eax +
call sub_4742F0  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_18] eax +
jz loc_402F1F  +
mov [esp+2Ch+var_10] esi +
mov esi [esp+2Ch+var_1C] +
xor ebp ebp +
mov [esp+2Ch+var_14] edi +
xor ebx ebx +
mov edi ecx +
mov eax [esi+ebx*4] +
mov eax [eax] +
test eax eax +
jz loc_402EC0  +
mov eax [eax] +
mov edx ds:dword_4BD058 +
mov eax [eax+4] +
call sub_4024C0  +
test eax eax +
jz loc_402EC0  +
mov eax [esi+ebx*4] +
mov edx [esp+2Ch+var_18] +
mov [edx+ebp*4] eax +
add ebp 1 +
add ebx 1 +
cmp ebx edi +
jnz loc_402E96  +
mov edi [esp+2Ch+var_14] +
mov ecx ebp +
mov ebx ebp +
mov esi [esp+2Ch+var_10] +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
mov [esp+2Ch+var_1C] eax +
jmp loc_402DB3  +
mov [esp+2Ch+var_20] offset aRelocationCoun +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] 0 +
mov ds:dword_4BD0CC 1 +
call sub_41E1E0  +
jmp loc_402DFB  +
xor ebx ebx +
jmp loc_402ED3  +
***
push edi  +
mov edi ecx +
mov eax [esp+28h+arg_4] +
mov ebx [esp+28h+arg_0] +
mov edx [eax+20h] +
mov eax [eax+24h] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_10] edx +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
call _utime  +
test eax eax +
jz loc_4054F2  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+0] eax +
call strerror  +
mov [esp+4] ebx +
mov dword ptr [esp+0] offset aSCannotSetTime +
mov [esp+8] eax +
call sub_41D6C0  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_4] +
lea eax [esp+40h+var_30] +
mov edi [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call ds:_stati64  +
test eax eax +
jz loc_405570  +
mov [esp+40h+var_3C] ebx +
mov [esp+40h+var_40] edi +
call rename  +
test eax eax +
mov esi eax +
jz loc_405561  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+0] eax +
call strerror  +
mov [esp+4] ebx +
mov dword ptr [esp+0] offset aUnableToRename +
mov [esp+8] eax +
call sub_41D6C0  +
mov [esp+0] edi +
call _unlink  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] ebx +
call remove  +
jmp loc_405523  +
***
sub esp 18h +
lea esi [esi+0] +
mov eax [ebx] +
test eax eax +
jz loc_4055A4  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx] 0 +
add ebx 10h +
cmp ebx offset dword_4BD22C +
jnz loc_405590  +
mov ds:dword_4BD100 0 +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_4BD100 +
mov eax esi +
shl eax 4 +
mov ebx ds:dword_4BD12C[eax] +
test ebx ebx +
jz loc_4055F0  +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_1C] ecx +
call free  +
mov ecx [esp+28h+var_1C] +
mov eax [esp+28h+arg_0] +
shl esi 4 +
mov ds:dword_4BD120[esi] edi +
mov ds:dword_4BD124[esi] ebp +
mov ds:dword_4BD128[esi] ecx +
mov [esp+28h+var_28] eax +
call sub_476140  +
mov ds:dword_4BD12C[esi] eax +
mov eax ds:dword_4BD100 +
add eax 1 +
cdq   +
shr edx 1Ch +
add eax edx +
and eax 0Fh +
sub eax edx +
mov ds:dword_4BD100 eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax ds:_iob +
mov [esp+10h+var_8] 21h +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset aLastStabsEntri +
add eax 40h +
mov [esp+10h+var_4] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+10h+var_8] 1Eh +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset aN_typeN_descN_ +
add eax 40h +
mov [esp+10h+var_4] eax +
call fwrite  +
mov ebx ds:dword_4BD100 +
jmp loc_40573F  +
mov [esp+10h+var_8] eax +
mov eax ds:_iob +
mov [esp+10h+var_C] offset a6s +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
mov eax [edi+4] +
mov [esp+10h+var_C] offset a6d +
mov [esp+10h+var_8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
mov eax [edi+8] +
mov [esp+10h+var_C] offset a08lx_0 +
mov [esp+10h+var_8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
mov eax ds:dword_4BD120[esi] +
test eax eax +
jnz loc_4057A0  +
mov eax ds:_iob +
mov [esp+10h+var_10] 0Ah +
add eax 40h +
mov [esp+10h+var_C] eax +
call fputc  +
add ebx 1 +
mov eax ebx +
sar eax 1Fh +
shr eax 1Ch +
add ebx eax +
and ebx 0Fh +
sub ebx eax +
cmp ebx ds:dword_4BD100 +
jz loc_4057E5  +
mov esi ebx +
shl esi 4 +
lea edi dword_4BD120[esi] +
mov edx [edi+0Ch] +
test edx edx +
jz loc_405721  +
mov eax ds:dword_4BD120[esi] +
mov [esp+10h+var_10] eax +
call sub_42A180  +
test eax eax +
jnz loc_4056A1  +
mov eax ds:dword_4BD120[esi] +
test eax eax +
jnz loc_4057C4  +
mov eax ds:_iob +
mov [esp+10h+var_8] 6 +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset aHdrsym +
add eax 40h +
mov [esp+10h+var_4] eax +
call fwrite  +
jmp loc_4056BD  +
mov eax [edi+0Ch] +
mov [esp+10h+var_C] offset aS_3 +
mov [esp+10h+var_8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
jmp loc_405709  +
mov [esp+10h+var_8] eax +
mov eax ds:_iob +
mov [esp+10h+var_C] offset a6d_0 +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
jmp loc_4056BD  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 8Ch +
mov ebp [esp+8Ch+arg_0] +
call sub_407AE0  +
mov [esp+8Ch+var_38] 0 +
mov [esp+8Ch+var_40] 0 +
test eax eax +
mov [esp+8Ch+var_3C] eax +
jz loc_4058BC  +
mov edi [esp+8Ch+var_40] +
mov [esp+8Ch+var_8C] ebp +
mov eax ds:off_498430[edi*8] +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_34] eax +
call sub_41E710  +
mov edi ds:off_498434[edi*8] +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_88] edi +
mov esi eax +
call sub_41E710  +
test eax eax +
jnz loc_4058D0  +
add [esp+8Ch+var_40] 1 +
cmp [esp+8Ch+var_40] 3 +
jnz loc_405824  +
mov eax [esp+8Ch+var_38] +
test eax eax +
jz loc_405880  +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_8C] eax +
call sub_40E900  +
test eax eax +
jz loc_4058BC  +
mov eax [ebp+4] +
mov edx [eax+4] +
cmp edx 1 +
jz loc_405C8F  +
cmp edx 6 +
jz loc_405BDE  +
test ebx ebx +
jnz loc_405C60  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 2 +
jz loc_405DE5  +
mov eax [esp+8Ch+arg_C] +
test eax eax +
jz loc_405C6F  +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jz loc_405858  +
mov ebx [esi+24h] +
mov [esp+8Ch+var_68] eax +
mov [esp+8Ch+var_8C] ebx +
call sub_4742F0  +
mov [esp+8Ch+var_78] ebx +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] 0 +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_30] eax +
call sub_41EF20  +
mov edx [esp+8Ch+var_68] +
test eax eax +
jz loc_405EE3  +
mov eax [edx+24h] +
mov [esp+8Ch+var_68] edx +
mov esi eax +
mov [esp+8Ch+var_60] eax +
add eax 1 +
mov [esp+8Ch+var_8C] eax +
call sub_4742F0  +
mov edx [esp+8Ch+var_68] +
mov [esp+8Ch+var_78] esi +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] 0 +
mov [esp+8Ch+var_88] edx +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_5C] eax +
call sub_41EF20  +
test eax eax +
jz loc_405F25  +
mov esi [esp+8Ch+var_38] +
mov eax [esp+8Ch+var_5C] +
mov ecx [esp+8Ch+var_60] +
test esi esi +
mov byte ptr [eax+ecx] 0 +
jz loc_405EA4  +
mov eax [esp+8Ch+var_30] +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_48] 0 +
lea ecx [eax+ebx-0Ch] +
add ebx eax +
cmp eax ecx +
mov edi eax +
mov [esp+8Ch+var_44] ecx +
mov [esp+8Ch+var_58] ebx +
jbe loc_4059C7  +
jmp loc_405B68  +
mov eax [esp+8Ch+var_48] +
mov ecx [esp+8Ch+var_50] +
mov [esp+8Ch+var_64] eax +
add eax ecx +
mov [esp+8Ch+var_48] eax +
add edi 0Ch +
cmp edi [esp+8Ch+var_44] +
ja loc_405B68  +
mov eax [ebp+4] +
mov eax [eax+28h] +
mov [esp+8Ch+var_8C] edi +
call eax  +
lea edx [edi+6] +
mov esi eax +
movzx eax byte ptr [edi+4] +
mov ebx eax +
mov [esp+8Ch+var_54] eax +
mov eax [ebp+4] +
mov eax [eax+34h] +
mov [esp+8Ch+var_8C] edx +
call eax  +
lea edx [edi+8] +
mov [esp+8Ch+var_4C] eax +
mov eax [ebp+4] +
mov eax [eax+28h] +
mov [esp+8Ch+var_8C] edx +
call eax  +
test ebx ebx +
mov [esp+8Ch+var_50] eax +
jz loc_4059A8  +
mov eax [esp+8Ch+var_64] +
mov ecx [esp+8Ch+var_5C] +
add eax esi +
lea ebx [ecx+eax] +
xor ecx ecx +
cmp [esp+8Ch+var_60] eax +
jbe loc_405B10  +
mov [esp+8Ch+var_68] edi +
mov edi ecx +
mov [esp+8Ch+arg_0] ebp +
jmp loc_405A9F  +
lea ebp [ebx+eax-1] +
cmp byte ptr [ebp+0] 5Ch +
jnz loc_405AAB  +
mov eax [esp+8Ch+var_68] +
lea esi [eax+0Ch] +
cmp esi [esp+8Ch+var_58] +
jnb loc_405B83  +
mov eax [esp+8Ch+arg_0] +
mov byte ptr [ebp+0] 0 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+8Ch+var_8C] esi +
call eax  +
add eax [esp+8Ch+var_64] +
cmp [esp+8Ch+var_60] eax +
jbe loc_405B91  +
add eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
call sub_4758B0  +
test edi edi +
mov byte ptr [ebp+0] 5Ch +
mov ebx eax +
jz loc_405A99  +
mov [esp+8Ch+var_8C] edi +
call free  +
mov edi ebx +
mov [esp+8Ch+var_68] esi +
mov [esp+8Ch+var_8C] ebx +
call strlen  +
test eax eax +
jnz loc_405A30  +
mov edi [esp+8Ch+var_68] +
mov ebp [esp+8Ch+arg_0] +
mov esi [esp+8Ch+var_50] +
mov edx [esp+8Ch+var_4C] +
mov eax [esp+8Ch+var_54] +
mov [esp+8Ch+var_8C] ebx +
mov ecx esi +
call sub_4055C0  +
mov eax [esp+8Ch+var_4C] +
mov [esp+8Ch+var_78] ebx +
mov [esp+8Ch+var_7C] esi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_54] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_8C] eax +
call sub_40E9A0  +
test eax eax +
jnz loc_4059BA  +
call sub_405640  +
call sub_405580  +
jmp loc_4058BC  +
mov eax [esp+8Ch+var_54] +
mov ecx edi +
add edi 0Ch +
sub ecx [esp+8Ch+var_30] +
mov ebx [ebp+0] +
mov [esp+8Ch+var_78] esi +
mov [esp+8Ch+var_74] eax +
mov eax 2AAAAAABh +
imul  ecx +
mov eax [esp+8Ch+var_34] +
sar ecx 1Fh +
mov [esp+8Ch+var_84] ebx +
mov [esp+8Ch+var_88] offset aSSStabEntryLdI +
mov [esp+8Ch+var_80] eax +
mov eax ds:_iob +
sar edx 1 +
sub edx ecx +
mov [esp+8Ch+var_7C] edx +
add eax 40h +
mov [esp+8Ch+var_8C] eax +
call fprintf  +
cmp edi [esp+8Ch+var_44] +
jbe loc_4059C7  +
call sub_405580  +
mov eax [esp+8Ch+var_30] +
mov ebx 1 +
mov [esp+8Ch+var_8C] eax +
call free  +
jmp loc_405858  +
mov edi eax +
mov ebp [esp+8Ch+arg_0] +
jmp loc_405AB6  +
mov ecx esi +
mov eax 2AAAAAABh +
mov ebp [esp+8Ch+arg_0] +
sub ecx [esp+8Ch+var_30] +
imul  ecx +
mov eax [esp+8Ch+var_34] +
mov edi [ebp+0] +
sar ecx 1Fh +
mov [esp+8Ch+var_88] offset aSSStabEntryL_0 +
mov [esp+8Ch+var_80] eax +
mov eax ds:_iob +
sar edx 1 +
sub edx ecx +
mov [esp+8Ch+var_84] edi +
mov edi esi +
mov [esp+8Ch+var_7C] edx +
add eax 40h +
mov [esp+8Ch+var_8C] eax +
call fprintf  +
jmp loc_405AB6  +
mov [esp+8Ch+var_88] offset a_debug +
mov [esp+8Ch+var_8C] ebp +
call sub_41E710  +
test eax eax +
mov esi eax +
jz loc_405898  +
mov ebx [eax+24h] +
mov [esp+8Ch+var_8C] ebx +
call sub_4742F0  +
mov [esp+8Ch+var_78] ebx +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] 0 +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_84] eax +
mov edi eax +
call sub_41EF20  +
test eax eax +
jz loc_4058BC  +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_80] ebx +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_416140  +
test eax eax +
jz loc_4058BC  +
mov [esp+8Ch+var_8C] edi +
call free  +
lea esi [esi+0] +
mov eax [esp+8Ch+var_3C] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov [esp+8Ch+var_8C] offset aSNoRecognizedD +
mov [esp+8Ch+var_88] eax +
call sub_41D6C0  +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+8Ch+arg_4] +
mov edx [esp+8Ch+arg_8] +
lea ecx [ecx+edx*4] +
cmp [esp+8Ch+arg_4] ecx +
mov [esp+8Ch+var_64] ecx +
jnb loc_405F42  +
mov esi [esp+8Ch+arg_4] +
mov [esp+8Ch+var_60] 0 +
mov [esp+8Ch+arg_0] ebp +
jmp loc_405CE7  +
add esi 4 +
cmp [esp+8Ch+var_64] esi +
jbe loc_405E27  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+4] +
lea ecx [esp+8Ch+var_20] +
mov eax [eax+114h] +
mov edx [esi] +
mov [esp+8Ch+var_84] ecx +
mov ecx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] edx +
mov [esp+8Ch+var_8C] ecx +
call eax  +
cmp [esp+8Ch+var_1C] 2Dh +
jnz loc_405CD0  +
mov ecx [esp+8Ch+var_60] +
test ecx ecx +
jz loc_405E5E  +
mov ebx [esp+8Ch+var_18] +
xor ebp ebp +
jmp loc_405D7C  +
lea eax [esi+4] +
cmp [esp+8Ch+var_64] eax +
mov [esp+8Ch+var_68] eax +
jbe loc_405D8B  +
mov [esp+8Ch+var_8C] ebx +
call sub_476140  +
mov [esp+8Ch+var_8C] eax +
mov edi eax +
call strlen  +
mov byte ptr [edi+eax-1] 0 +
mov eax [esi+4] +
mov eax [eax+4] +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] eax +
call sub_4758B0  +
mov [esp+8Ch+var_8C] edi +
mov ebx eax +
call free  +
test ebp ebp +
jz loc_405D76  +
mov [esp+8Ch+var_8C] ebp +
call free  +
mov esi [esp+8Ch+var_68] +
mov ebp ebx +
mov [esp+8Ch+var_8C] ebx +
call strlen  +
cmp byte ptr [ebx+eax-1] 5Ch +
jz loc_405D22  +
movsx edx [esp+8Ch+var_12] +
movzx eax [esp+8Ch+var_14] +
mov ecx [esp+8Ch+var_20] +
mov [esp+8Ch+var_8C] ebx +
call sub_4055C0  +
mov eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_78] ebx +
mov [esp+8Ch+var_7C] eax +
movsx eax [esp+8Ch+var_12] +
mov [esp+8Ch+var_80] eax +
movzx eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_60] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_8C] eax +
call sub_40E9A0  +
test eax eax +
jz loc_405B00  +
mov ebx 1 +
jmp loc_405CD0  +
mov edx [esp+8Ch+arg_8] +
test edx edx +
jle loc_4058AD  +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_88] eax +
call sub_419CD0  +
test eax eax +
jnz loc_405C60  +
jmp loc_4058BC  +
mov ebp [esp+8Ch+arg_0] +
call sub_405580  +
mov eax [esp+8Ch+var_60] +
test eax eax +
jz loc_405E53  +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_8C] eax +
call sub_40E900  +
test eax eax +
jz loc_4058BC  +
mov eax [ebp+4] +
mov edx [eax+4] +
jmp loc_40588F  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_8C] eax +
call sub_40E840  +
test eax eax +
mov [esp+8Ch+var_60] eax +
jnz loc_405D1A  +
jmp loc_4058BC  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_3C] +
mov [esp+8Ch+var_8C] eax +
call sub_40E840  +
test eax eax +
mov [esp+8Ch+var_38] eax +
jnz loc_40597B  +
jmp loc_4058BC  +
call sub_420A00  +
mov [esp+8Ch+var_8C] eax +
nop   +
lea esi [esi+0] +
call sub_420A10  +
mov edx [ebp+0] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+var_34] +
mov [esp+8Ch+var_80] eax +
mov eax ds:_iob +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_88] offset aSSS +
add eax 40h +
mov [esp+8Ch+var_8C] eax +
call fprintf  +
jmp loc_4058BC  +
call sub_420A00  +
mov [esp+8Ch+var_8C] eax +
lea esi [esi+0] +
call sub_420A10  +
mov edx [ebp+0] +
mov [esp+8Ch+var_80] edi +
mov [esp+8Ch+var_7C] eax +
jmp loc_405F04  +
call sub_405580  +
jmp loc_405E53  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [edx] +
lea ecx [edi-1] +
cmp ecx 16h +
ja loc_405FC0  +
mov ebx 1 +
shl ebx cl +
and ebx 600001h +
jz loc_405FC0  +
test ebp ebp +
jz loc_405F98  +
cmp [ebp+4] edx +
jz loc_405FDD  +
mov ebx [ebp+0] +
cmp ebp ebx +
jnz loc_405F94  +
jmp loc_405FDD  +
cmp [ebx+4] edx +
jz loc_405FDD  +
mov esi [ebx] +
cmp esi ebx +
lea esi [esi+0] +
jz loc_405FDD  +
mov ebx esi +
test ebx ebx +
jnz loc_405F84  +
sub edi 16h +
cmp edi 1 +
mov [esp+38h+var_20] ebp +
mov [esp+38h+var_1C] edx +
jbe loc_40601C  +
mov ecx [edx+0Ch] +
mov ecx [ecx] +
mov ebx [ecx] +
test ebx ebx +
jz loc_405FC0  +
lea ecx [esp+38h+var_20] +
mov edx ebx +
call sub_405F50  +
jmp loc_405FC2  +
mov eax edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+0Ch] +
mov edx [eax] +
mov edx [edx] +
test edx edx +
jz loc_406017  +
mov edi [edx] +
cmp edi 1 +
jz loc_405FD0  +
sub edi 16h +
xor eax eax +
cmp edi 1 +
jbe loc_406012  +
mov [esp-4+arg_4] eax +
mov eax ds:_iob +
mov [esp-4+arg_0] offset aDebug_get_real +
add eax 40h +
mov [esp+0] eax +
call fprintf  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+0Ch] +
mov eax [eax] +
mov eax [eax+4] +
jmp loc_405FEC  +
mov edx [edx+0Ch] +
lea ecx [esp+38h+var_20] +
mov edx [edx+4] +
call sub_405F50  +
jmp loc_405FC2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [eax] +
mov [esp+2Ch+var_10] eax +
test esi esi +
jz loc_4060C6  +
mov eax [edx] +
mov ebp edx +
mov edi ecx +
cmp eax 9 +
ja loc_4060B1  +
lea edx [esi+eax*4] +
mov eax [edx+8] +
cmp eax 0FFFFFFFFh +
jz loc_4060B1  +
mov ebx [edx+30h] +
cmp [esp+2Ch+arg_4] ebx +
ja loc_406088  +
jmp loc_4060C6  +
mov eax [ebp+0] +
add eax 1 +
cmp eax 9 +
mov [ebp+0] eax +
ja loc_4060B1  +
lea ecx [esi+eax*4] +
mov eax [ecx+8] +
cmp eax 0FFFFFFFFh +
jz loc_4060B1  +
mov ebx [ecx+30h] +
cmp ebx [esp+2Ch+arg_4] +
jnb loc_4060C6  +
mov ecx [esi+4] +
mov ecx [ecx+4] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call dword ptr [edi]  +
test eax eax +
jnz loc_406066  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esi] +
mov eax [esp+2Ch+var_10] +
mov [eax] esi +
xor eax eax +
test esi esi +
mov dword ptr [ebp+0] 0 +
jnz loc_406050  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+24h+var_24] 20h +
mov [esp+24h+var_18] ecx +
call sub_4742F0  +
mov edx 20h +
mov ebx eax +
test bl 1 +
jnz loc_406178  +
test al 2 +
jnz loc_406184  +
mov ebp edx +
xor ecx ecx +
and ebp 0FFFFFFFCh +
mov dword ptr [eax+ecx] 0 +
add ecx 4 +
cmp ecx ebp +
jb loc_406112  +
add eax ecx +
test dl 2 +
jz loc_406130  +
xor ecx ecx +
add eax 2 +
mov [eax-2] cx +
and edx 1 +
jz loc_406138  +
mov byte ptr [eax] 0 +
mov eax [esp+24h+var_18] +
mov [ebx+4] edi +
mov [ebx+0Ch] eax +
mov eax [esp+24h+arg_0] +
mov [ebx+10h] eax +
mov eax [esi] +
test eax eax +
jnz loc_406166  +
mov [esp+24h+var_24] 8 +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov [eax+4] eax +
mov [esi] eax +
mov edx [eax+4] +
mov [edx] ebx +
mov [eax+4] ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebx+1] +
mov dl 1Fh +
test al 2 +
mov byte ptr [ebx] 0 +
jz loc_40610B  +
xor ebp ebp +
add eax 2 +
mov [eax-2] bp +
sub edx 2 +
jmp loc_40610B  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov [esp+18h+var_18] 10h +
call sub_4742F0  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov [eax] ebx +
mov [eax+4] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 3Ch +
test edx edx +
jz loc_406271  +
test ecx ecx +
mov ebp eax +
jnz loc_4061FB  +
jmp loc_406267  +
mov eax [ebx+0Ch] +
mov eax [eax] +
mov ebx [eax] +
test ebx ebx +
jz loc_406267  +
mov ecx [ebx] +
cmp ecx 1 +
jz loc_4061F0  +
jmp loc_40620F  +
mov eax [esi+0Ch] +
mov eax [eax] +
mov esi [eax] +
test esi esi +
jz loc_406267  +
mov edx [esi] +
cmp edx 1 +
jz loc_406204  +
cmp ebx esi +
jz loc_406260  +
cmp ecx 16h +
jz loc_406280  +
cmp ecx 17h +
jz loc_406296  +
xor eax eax +
cmp ecx edx +
jnz loc_406269  +
mov edi [esi+4] +
cmp [ebx+4] edi +
jnz loc_406269  +
cmp ecx 3 +
jz loc_4062B3  +
jbe loc_4062AC  +
cmp ecx 6 +
lea esi [esi+0] +
jbe loc_406260  +
mov edx [ebp+30h] +
test edx edx +
jz loc_4062C1  +
mov eax edx +
jmp loc_406256  +
mov eax [eax] +
test eax eax +
jz loc_4062C1  +
cmp ebx [eax+4] +
jnz loc_406250  +
cmp esi [eax+8] +
jnz loc_406250  +
mov eax 1 +
jmp loc_406269  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
test ecx ecx +
setz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 17h +
jnz loc_406224  +
mov eax [ebx+0Ch] +
mov ecx esi +
mov edx [eax+4] +
mov eax ebp +
call sub_4061D0  +
jmp loc_406269  +
cmp edx 16h +
jnz loc_406224  +
mov eax [esi+0Ch] +
mov edx ebx +
mov ecx [eax+4] +
mov eax ebp +
call sub_4061D0  +
jmp loc_406269  +
cmp ecx 2 +
jz loc_406260  +
jmp loc_406242  +
mov eax [esi+0Ch] +
cmp [ebx+0Ch] eax +
setz al  +
movzx eax al +
jmp loc_406269  +
sub ecx 7 +
lea eax [esp+40h+var_1C] +
cmp ecx 10h +
mov [esp+40h+var_18] ebx +
mov [esp+40h+var_14] esi +
mov [esp+40h+var_1C] edx +
mov [ebp+30h] eax +
ja loc_4066F3  +
jmp ds:off_498480[ecx*4]  +
mov ecx [esi+0Ch] +
mov eax ebp +
mov edx [ebx+0Ch] +
call sub_4061D0  +
mov edi [esp+40h+var_1C] +
mov [esp+40h+var_34] edi +
mov edi [esp+40h+var_34] +
mov [ebp+30h] edi +
jmp loc_406269  +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_40672D  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_40638D  +
mov esi [eax] +
mov edi [ecx] +
mov eax [eax+4] +
mov ebx esi +
mov [esp+40h+var_34] esi +
mov esi [ecx+4] +
mov [esp+40h+var_30] eax +
mov eax [edi] +
test eax eax +
jz loc_40673F  +
mov ecx [ebx] +
test ecx ecx +
jnz loc_406386  +
jmp loc_40638D  +
mov ebx [esp+40h+var_30] +
mov ebx [ebx] +
cmp [esi] ebx +
jnz loc_40638D  +
mov [esp+40h+var_3C] ecx +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_2C] edx +
call strcmp  +
mov edx [esp+40h+var_2C] +
test eax eax +
jnz loc_40638D  +
add edi 4 +
mov eax [edi] +
add esi 4 +
add [esp+40h+var_34] 4 +
add [esp+40h+var_30] 4 +
test eax eax +
jz loc_40673F  +
mov ecx [esp+40h+var_34] +
mov ecx [ecx] +
test ecx ecx +
jz loc_40638D  +
movzx ebx byte ptr [ecx] +
cmp [eax] bl +
jz loc_406340  +
mov [esp+40h+var_34] edx +
xor eax eax +
jmp loc_4062FC  +
mov eax [ebx+0Ch] +
test eax eax +
mov [esp+40h+var_34] eax +
jz loc_40672D  +
mov ebx [esi+0Ch] +
test ebx ebx +
jz loc_40638D  +
mov eax [esp+40h+var_34] +
mov eax [eax+8] +
cmp eax [ebp+20h] +
jbe loc_4063C3  +
cmp eax [ebx+8] +
jz loc_406755  +
mov eax [esp+40h+var_34] +
mov edi [ebx] +
mov eax [eax] +
test edi edi +
setz dl  +
mov [esp+40h+var_30] edi +
test eax eax +
mov [esp+40h+var_2C] eax +
setz al  +
cmp dl al +
jnz loc_406777  +
mov edi [esp+40h+var_34] +
cmp dword ptr [ebx+0Ch] 0 +
setz dl  +
cmp dword ptr [edi+0Ch] 0 +
setz al  +
cmp dl al +
jnz loc_406777  +
cmp dword ptr [ebx+10h] 0 +
setz dl  +
cmp dword ptr [edi+10h] 0 +
setz al  +
cmp dl al +
jnz loc_406777  +
cmp dword ptr [ebx+14h] 0 +
setz dl  +
cmp dword ptr [edi+14h] 0 +
setz al  +
cmp dl al +
jnz loc_406777  +
cmp [esp+40h+var_2C] 0 +
jz loc_406783  +
mov eax [esp+40h+var_2C] +
mov esi [eax] +
mov eax [esp+40h+var_30] +
test esi esi +
jz loc_40677E  +
mov edi [eax] +
test edi edi +
jz loc_406777  +
mov ecx [edi] +
mov edx [esi] +
movzx eax byte ptr [ecx] +
cmp [edx] al +
jnz loc_406777  +
mov eax [edi+8] +
cmp [esi+8] eax +
jnz loc_406777  +
mov eax [esi+0Ch] +
cmp eax [edi+0Ch] +
jnz loc_406777  +
test eax eax +
jz loc_406763  +
mov eax [edi+10h] +
mov [esp+40h+var_24] ecx +
mov [esp+40h+var_28] edx +
mov [esp+40h+var_3C] eax +
mov eax [esi+10h] +
mov [esp+40h+var_40] eax +
call strcmp  +
mov edx [esp+40h+var_28] +
mov ecx [esp+40h+var_24] +
test eax eax +
jnz loc_406777  +
mov [esp+40h+var_3C] ecx +
mov [esp+40h+var_40] edx +
call strcmp  +
test eax eax +
jnz loc_406777  +
mov edx [edi+4] +
xor ecx ecx +
mov eax ebp +
call sub_405F50  +
mov edx [esi+4] +
xor ecx ecx +
mov edi eax +
mov eax ebp +
call sub_405F50  +
mov ecx edi +
mov edx eax +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jz loc_406777  +
add [esp+40h+var_2C] 4 +
add [esp+40h+var_30] 4 +
jmp loc_406436  +
mov esi [esi+0Ch] +
mov ebx [ebx+0Ch] +
mov [esp+40h+var_34] edx +
mov eax [esi] +
mov eax [eax+4] +
mov [esp+40h+var_3C] eax +
mov eax [ebx] +
mov eax [eax+4] +
mov [esp+40h+var_40] eax +
call strcmp  +
mov ecx eax +
xor eax eax +
test ecx ecx +
jnz loc_4062FC  +
mov ecx [esi+4] +
mov edx [ebx+4] +
mov eax ebp +
call sub_4061D0  +
mov edi [esp+40h+var_1C] +
mov [esp+40h+var_34] edi +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4062FC  +
mov eax [esi+0Ch] +
mov ecx [eax] +
mov eax [ebx+0Ch] +
mov edx [eax] +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jnz loc_40671C  +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_34] eax +
xor eax eax +
jmp loc_4062FC  +
mov ecx [esi+0Ch] +
xor eax eax +
mov ebx [ebx+0Ch] +
mov [esp+40h+var_34] edx +
mov edi [ecx+4] +
cmp [ebx+4] edi +
jnz loc_4062FC  +
mov ecx [ecx] +
mov edx [ebx] +
jmp loc_406532  +
mov ecx [esi+0Ch] +
xor eax eax +
mov ebx [ebx+0Ch] +
mov [esp+40h+var_34] edx +
mov edi [ecx+8] +
cmp [ebx+8] edi +
jnz loc_4062FC  +
mov edi [ecx+0Ch] +
cmp [ebx+0Ch] edi +
jnz loc_4062FC  +
mov edi [ecx+10h] +
cmp [ebx+10h] edi +
jnz loc_4062FC  +
jmp loc_406590  +
mov ecx [esi+0Ch] +
xor eax eax +
mov ebx [ebx+0Ch] +
mov [esp+40h+var_34] edx +
mov edi [ecx+4] +
cmp [ebx+4] edi +
jnz loc_4062FC  +
mov edi [ecx+8] +
cmp [ebx+8] edi +
jnz loc_4062FC  +
jmp loc_406590  +
mov ecx [esi+0Ch] +
xor eax eax +
mov edi [ebx+0Ch] +
mov [esp+40h+var_34] edx +
mov edx [ecx+0Ch] +
cmp [edi+0Ch] edx +
jnz loc_4062FC  +
mov ecx [ecx] +
mov eax ebp +
mov edx [edi] +
call sub_4061D0  +
test eax eax +
jz loc_406569  +
mov eax [esi+0Ch] +
mov ecx [eax+4] +
mov eax [ebx+0Ch] +
mov edx [eax+4] +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jz loc_406569  +
mov eax [ebx+0Ch] +
mov edx [esi+0Ch] +
mov edi [eax+8] +
mov ebx [edx+8] +
test edi edi +
setz al  +
test ebx ebx +
setz dl  +
cmp dl al +
jnz loc_406569  +
test al al +
jnz loc_40670A  +
mov edx [edi] +
test edx edx +
jz loc_406701  +
mov ecx [ebx] +
test ecx ecx +
jz loc_406569  +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jz loc_4066F8  +
add edi 4 +
add ebx 4 +
jmp loc_40665C  +
mov ecx [esi+0Ch] +
xor eax eax +
mov edi [ebx+0Ch] +
mov [esp+40h+var_34] edx +
mov edx [ecx+8] +
cmp [edi+8] edx +
jnz loc_4062FC  +
mov ecx [ecx] +
mov eax ebp +
mov edx [edi] +
call sub_4061D0  +
test eax eax +
jz loc_406569  +
mov eax [ebx+0Ch] +
mov edx [esi+0Ch] +
mov edi [eax+4] +
mov ebx [edx+4] +
test edi edi +
setz al  +
test ebx ebx +
setz dl  +
cmp dl al +
jnz loc_406569  +
test al al +
jnz loc_40670A  +
mov edx [edi] +
test edx edx +
jz loc_406701  +
mov ecx [ebx] +
test ecx ecx +
jz loc_406569  +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jz loc_4066F8  +
add edi 4 +
add ebx 4 +
jmp loc_4066D0  +
call abort  +
cmp dword ptr [edi] 0 +
jnz loc_406569  +
cmp dword ptr [ebx] 0 +
jnz loc_406569  +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_34] eax +
mov eax 1 +
jmp loc_4062FC  +
mov eax [esi+0Ch] +
mov ecx [eax+4] +
mov eax [ebx+0Ch] +
mov edx [eax+4] +
jmp loc_406532  +
xor eax eax +
cmp dword ptr [esi+0Ch] 0 +
mov [esp+40h+var_34] edx +
setz al  +
jmp loc_4062FC  +
mov eax [esp+40h+var_34] +
mov [esp+40h+var_34] edx +
cmp dword ptr [eax] 0 +
setz al  +
movzx eax al +
jmp loc_4062FC  +
mov [esp+40h+var_34] edx +
mov eax 1 +
jmp loc_4062FC  +
mov eax [edi+10h] +
cmp [esi+10h] eax +
jnz loc_406777  +
mov eax [edi+14h] +
cmp [esi+14h] eax +
jz loc_4064AB  +
xor eax eax +
jmp loc_4062F4  +
cmp dword ptr [eax] 0 +
jnz loc_406777  +
mov eax [esp+40h+var_34] +
mov edx [eax+14h] +
test edx edx +
jz loc_40679C  +
mov ecx [ebx+14h] +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jz loc_406777  +
mov eax [esp+40h+var_34] +
mov edi [eax+0Ch] +
test edi edi +
jz loc_4067EA  +
mov esi [ebx+0Ch] +
mov edx [edi] +
test edx edx +
jz loc_4067E5  +
mov eax [esi] +
test eax eax +
jz loc_406777  +
mov ecx [eax+4] +
cmp [edx+4] ecx +
jnz loc_406777  +
mov ecx [eax+8] +
cmp [edx+8] ecx +
jnz loc_406777  +
mov ecx [eax+0Ch] +
cmp [edx+0Ch] ecx +
jnz loc_406777  +
mov ecx [eax] +
mov eax ebp +
mov edx [edx] +
call sub_4061D0  +
test eax eax +
jz loc_406777  +
add edi 4 +
add esi 4 +
jmp loc_4067AA  +
cmp dword ptr [esi] 0 +
jnz loc_406777  +
mov eax [esp+40h+var_34] +
mov eax [eax+10h] +
test eax eax +
mov [esp+40h+var_30] eax +
jz loc_406866  +
mov eax [ebx+10h] +
mov [esp+40h+var_34] eax +
mov eax [esp+40h+var_30] +
mov esi [eax] +
mov eax [esp+40h+var_34] +
test esi esi +
jz loc_406945  +
mov ebx [eax] +
test ebx ebx +
jz loc_406777  +
mov edx [ebx] +
mov eax [esi] +
movzx ecx byte ptr [edx] +
cmp [eax] cl +
jnz loc_406777  +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call strcmp  +
test eax eax +
jnz loc_406777  +
mov edi [ebx+4] +
cmp dword ptr [esi+4] 0 +
setz al  +
test edi edi +
setz dl  +
cmp dl al +
jnz loc_406777  +
test al al +
jnz loc_406870  +
add [esp+40h+var_30] 4 +
add [esp+40h+var_34] 4 +
jmp loc_406800  +
mov eax 1 +
jmp loc_4062F4  +
mov eax edi +
neg eax  +
mov [esp+40h+var_28] eax +
mov eax [esp+40h+var_28] +
mov esi [edi+eax] +
test esi esi +
jz loc_406934  +
mov ebx [edi] +
test ebx ebx +
jz loc_406777  +
mov edx [ebx] +
mov eax [esi] +
movzx ecx byte ptr [edx] +
cmp [eax] cl +
jnz loc_406777  +
mov ecx [ebx+8] +
cmp [esi+8] ecx +
jnz loc_406777  +
mov ecx [ebx+0Ch] +
cmp [esi+0Ch] ecx +
jnz loc_406777  +
mov ecx [ebx+10h] +
cmp [esi+10h] ecx +
jnz loc_406777  +
mov ecx [ebx+14h] +
cmp [esi+14h] ecx +
jnz loc_406777  +
cmp dword ptr [ebx+18h] 0 +
setz byte ptr [esp+40h+var_2C]  +
cmp dword ptr [esi+18h] 0 +
setz cl  +
cmp byte ptr [esp+40h+var_2C] cl +
jnz loc_406777  +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call strcmp  +
test eax eax +
jnz loc_406777  +
mov ecx [ebx+4] +
mov eax ebp +
mov edx [esi+4] +
call sub_4061D0  +
test eax eax +
jz loc_406777  +
mov edx [esi+18h] +
test edx edx +
jz loc_40692C  +
mov ecx [ebx+18h] +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jz loc_406777  +
add edi 4 +
jmp loc_406878  +
cmp dword ptr [edi] 0 +
jz loc_40685A  +
lea esi [esi+0] +
jmp loc_406777  +
cmp dword ptr [eax] 0 +
setz al  +
movzx eax al +
jmp loc_4062F4  +
***
push edi  +
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
mov eax [ecx] +
sub eax 7 +
cmp eax 3 +
ja loc_406A50  +
mov eax [esi+0Ch] +
mov ecx [ebp+20h] +
cmp [eax+8] ecx +
mov [esp+38h+var_20] eax +
ja loc_4069F0  +
mov ebx [ebp+2Ch] +
test ebx ebx +
jnz loc_406999  +
jmp loc_406A00  +
mov ebx [ebx] +
test ebx ebx +
jz loc_406A00  +
mov edx [ebx+4] +
mov eax [esi] +
cmp [edx] eax +
jnz loc_406993  +
test edi edi +
jz loc_406A40  +
mov eax [ebx+8] +
test eax eax +
jz loc_406993  +
movzx ecx byte ptr [edi] +
cmp [eax] cl +
jnz loc_406993  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
mov [esp+38h+var_1C] edx +
call strcmp  +
mov edx [esp+38h+var_1C] +
test eax eax +
jnz loc_406993  +
mov ecx esi +
mov eax ebp +
call sub_4061D0  +
test eax eax +
jz loc_406993  +
mov eax [ebx+4] +
mov ecx [esp+38h+var_20] +
mov eax [eax+0Ch] +
mov eax [eax+8] +
mov [ecx+8] eax +
lea esi [esi+0] +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov ecx [esp+38h+var_20] +
add eax 1 +
mov [ebp+1Ch] eax +
mov [ecx+8] eax +
mov [esp+38h+var_38] 0Ch +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov edx [ebp+2Ch] +
mov [eax+4] esi +
mov [eax+8] edi +
mov [eax] edx +
mov [ebp+2Ch] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
test eax eax +
jnz loc_406993  +
jmp loc_4069D0  +
mov [esp+38h+var_30] 0B80h +
mov [esp+38h+var_34] offset a____BinutilsBi +
mov [esp+38h+var_38] offset aTypeKindDebug_ +
call sub_48C4C0  +
jmp loc_40697B  +
***
jmp sub_406A80  +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+54h+arg_0] +
mov esi [esp+54h+arg_4] +
mov [esp+54h+var_34] edx +
mov [esp+54h+var_30] ecx +
mov eax [ebp+0] +
lea edx [eax-16h] +
cmp edx 1 +
jbe loc_406AF0  +
test esi esi +
jz loc_406B20  +
mov ecx [edi+18h] +
xor ebx ebx +
cmp edx 1 +
mov [esi+8] ecx +
jbe loc_406ADD  +
cmp dword ptr [esi+0Ch] 1 +
jz loc_406ADA  +
mov [esp+54h+var_4C] 9AAh +
mov [esp+54h+var_50] offset a____BinutilsBi +
mov [esp+54h+var_54] offset aNameKindDebug_ +
call sub_48C4C0  +
mov eax [ebp+0] +
mov ebx [esi+4] +
cmp eax 17h +
ja loc_4071C8  +
jmp ds:off_4985E4[eax*4]  +
mov ecx [ebp+0Ch] +
mov ebx [edi+18h] +
mov ecx [ecx] +
cmp [ecx+8] ebx +
jz loc_4074A3  +
cmp eax 17h +
jnz loc_406AA4  +
cmp ecx esi +
jnz loc_407440  +
mov [esi+8] ebx +
mov eax [ebp+0Ch] +
mov esi [eax] +
mov ebp [eax+4] +
jmp loc_406A99  +
xor ebx ebx +
jmp loc_406ADD  +
mov eax ds:_iob +
mov [esp+54h+var_4C] offset aDebug_write_ty +
mov [esp+54h+var_50] offset aS_4 +
add eax 40h +
mov [esp+54h+var_54] eax +
call fprintf  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0Ch] +
xor esi esi +
mov ebp [eax+4] +
jmp loc_406A99  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jnz loc_4071B4  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_34] +
mov ecx [esp+54h+var_30] +
mov eax [eax+44h] +
mov [esp+54h+arg_0] ecx +
jmp loc_40705F  +
mov eax [ebp+0Ch] +
mov esi [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax] +
mov ecx esi +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov edx [ebp+0Ch] +
mov eax [edx+8] +
test eax eax +
jz loc_4071CD  +
mov eax [eax] +
xor ebx ebx +
test eax eax +
jnz loc_406C19  +
jmp loc_4071D2  +
mov edx [ebp+0Ch] +
add ebx 1 +
mov eax [edx+8] +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_4071D2  +
mov edx [esp+54h+var_34] +
mov ecx esi +
mov [esp+54h+var_54] eax +
mov eax edi +
mov [esp+54h+var_50] 0 +
call sub_406A80  +
test eax eax +
jnz loc_406C05  +
xor eax eax +
jmp loc_406B87  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax+4] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_34] +
mov ecx [esp+54h+var_30] +
mov eax [eax+3Ch] +
mov [esp+54h+arg_0] ecx +
jmp loc_40705F  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov edx [ebp+0Ch] +
mov eax [esp+54h+var_34] +
mov edi [esp+54h+var_30] +
mov edx [edx+4] +
mov eax [eax+38h] +
mov [esp+54h+arg_0] edi +
mov [esp+54h+arg_4] edx +
jmp loc_406F68  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_4074C3  +
mov esi [edx+8] +
cmp esi [edi+20h] +
jbe loc_407255  +
mov eax [edi+18h] +
cmp eax [edx+4] +
jz loc_40728E  +
mov [edx+4] eax +
mov eax [edx+14h] +
test eax eax +
setnz cl  +
cmp ebp eax +
mov [esp+54h+var_2C] eax +
jnz loc_407328  +
mov eax [ebp+0] +
movzx ecx cl +
mov edx [esp+54h+var_34] +
mov edx [edx+58h] +
mov [esp+54h+var_28] edx +
mov edx [ebp+4] +
mov [esp+54h+var_40] ecx +
mov [esp+54h+var_4C] esi +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_24] edx +
xor edx edx +
mov ecx [esp+54h+var_24] +
cmp ebp [esp+54h+var_2C] +
setz dl  +
cmp eax 9 +
setz al  +
movzx eax al +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+var_30] +
mov [esp+54h+var_3C] edx +
mov edx [esp+54h+var_28] +
mov [esp+54h+var_44] ecx +
mov [esp+54h+var_54] eax +
call edx  +
test eax eax +
jz loc_406B85  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_40765D  +
mov edx [eax] +
test edx edx +
jz loc_4073AE  +
mov ebx [edx] +
test ebx ebx +
jz loc_4073AE  +
mov [esp+54h+var_2C] edi +
mov esi 4 +
mov edi [esp+54h+var_34] +
mov [esp+54h+var_28] ebp +
mov ebp [esp+54h+var_30] +
jmp loc_406DE9  +
mov edx [ebx+10h] +
mov eax [ebx] +
mov [esp+54h+var_48] ecx +
mov [esp+54h+var_54] ebp +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] eax +
call dword ptr [edi+5Ch]  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_28] +
mov eax [eax+0Ch] +
mov edx [eax] +
mov ebx [edx+esi] +
add esi 4 +
test ebx ebx +
jz loc_4073A6  +
mov eax [ebx+4] +
mov ecx ebp +
mov edx edi +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax [esp+54h+var_2C] +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [ebx+0Ch] +
mov ecx [ebx+8] +
test eax eax +
jnz loc_406DB3  +
mov edx [ebx+14h] +
mov eax [ebx+10h] +
mov ebx [ebx] +
mov [esp+54h+var_44] ecx +
mov [esp+54h+var_48] edx +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] ebp +
call dword ptr [edi+50h]  +
test eax eax +
jnz loc_406DD2  +
xor eax eax +
jmp loc_406B87  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_34] +
mov eax [eax+2Ch] +
jmp loc_4071BB  +
mov eax [ebp+0Ch] +
mov esi [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax] +
mov ecx esi +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov edx [ebp+0Ch] +
mov eax [edx+4] +
test eax eax +
jz loc_407230  +
mov eax [eax] +
xor ebx ebx +
test eax eax +
jnz loc_406EC9  +
jmp loc_407235  +
mov edx [ebp+0Ch] +
add ebx 1 +
mov eax [edx+4] +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_407235  +
mov edx [esp+54h+var_34] +
mov ecx esi +
mov [esp+54h+var_54] eax +
mov eax edi +
mov [esp+54h+var_50] 0 +
call sub_406A80  +
test eax eax +
jnz loc_406EB5  +
xor eax eax +
jmp loc_406B87  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_34] +
mov eax [eax+24h] +
jmp loc_4071BB  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_40737D  +
mov ecx [esp+54h+var_34] +
mov edx [ecx+20h] +
mov ecx [eax+4] +
mov eax [eax] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+var_30] +
mov [esp+54h+var_48] ecx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] eax +
call edx  +
jmp loc_406B46  +
mov eax [esp+54h+var_34] +
mov eax [eax+14h] +
mov edx [ebp+4] +
mov ecx [esp+54h+var_30] +
mov [esp+54h+arg_4] edx +
mov [esp+54h+arg_0] ecx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax+4] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_34] +
mov edx [eax+34h] +
mov eax [ebp+0Ch] +
mov ebx [eax+10h] +
mov ecx [eax+0Ch] +
mov eax [eax+8] +
mov [esp+54h+var_48] ebx +
mov [esp+54h+var_4C] ecx +
mov [esp+54h+var_50] eax +
mov eax [esp+54h+var_30] +
mov [esp+54h+var_54] eax +
call edx  +
jmp loc_406B46  +
mov eax [ebp+0Ch] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov eax [eax] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_34] +
mov edx [eax+30h] +
mov eax [ebp+0Ch] +
mov ecx [eax+8] +
mov eax [eax+4] +
mov [esp+54h+var_4C] ecx +
mov [esp+54h+var_50] eax +
mov eax [esp+54h+var_30] +
mov [esp+54h+var_54] eax +
call edx  +
jmp loc_406B46  +
mov eax [esp+54h+var_34] +
mov eax [eax+1Ch] +
jmp loc_406F59  +
mov eax [esp+54h+var_34] +
mov ecx [esp+54h+var_30] +
mov eax [eax+0Ch] +
mov [esp+54h+arg_0] ecx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov eax [ebp+0Ch] +
mov eax [eax] +
mov ebp [eax] +
test ebp ebp +
jnz loc_406A99  +
mov eax [esp+54h+var_34] +
mov ecx [esp+54h+var_30] +
mov eax [eax+8] +
mov [esp+54h+arg_0] ecx +
jmp loc_40705F  +
mov ecx [ebp+0Ch] +
mov eax [esp+54h+var_34] +
mov edx [ebp+4] +
mov eax [eax+10h] +
mov [esp+54h+var_4C] ecx +
mov ecx [esp+54h+var_30] +
mov [esp+54h+var_50] edx +
mov [esp+54h+var_54] ecx +
call eax  +
jmp loc_406B46  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_407363  +
mov eax [edi+20h] +
cmp [edx+8] eax +
jbe loc_407273  +
mov eax [edi+18h] +
cmp eax [edx+4] +
jz loc_4072DB  +
mov [edx+4] eax +
mov eax [esp+54h+var_34] +
mov ecx [ebp+4] +
mov edx [edx+8] +
mov esi [eax+4Ch] +
xor eax eax +
cmp dword ptr [ebp+0] 7 +
setz al  +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+var_30] +
mov [esp+54h+var_44] ecx +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] eax +
call esi  +
test eax eax +
jz loc_406B85  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_407314  +
mov eax [eax] +
test eax eax +
jz loc_407314  +
mov ebx [eax] +
test ebx ebx +
jz loc_407314  +
mov [esp+54h+var_2C] edi +
mov esi 4 +
mov edi [esp+54h+var_34] +
jmp loc_407180  +
mov eax [ebx+10h] +
mov ecx [ebx+8] +
mov edx [ebx+14h] +
mov ebx [ebx] +
mov [esp+54h+var_4C] eax +
mov eax [esp+54h+var_30] +
mov [esp+54h+var_44] ecx +
mov [esp+54h+var_48] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] eax +
call dword ptr [edi+50h]  +
test eax eax +
jz loc_406B85  +
mov eax [ebp+0Ch] +
mov eax [eax] +
mov ebx [eax+esi] +
add esi 4 +
test ebx ebx +
jz loc_407314  +
mov eax [ebx+4] +
mov edx edi +
mov ecx [esp+54h+var_30] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax [esp+54h+var_2C] +
call sub_406A80  +
test eax eax +
jnz loc_407140  +
xor eax eax +
jmp loc_406B87  +
mov eax [esp+54h+var_34] +
mov eax [eax+18h] +
jmp loc_406F59  +
mov eax [esp+54h+var_34] +
mov eax [eax+48h] +
mov edi [esp+54h+var_30] +
mov [esp+54h+arg_0] edi +
jmp loc_40705F  +
call abort  +
mov ebx 0FFFFFFFFh +
mov eax [edx+4] +
test eax eax +
jz loc_407624  +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov [esp+54h+var_54] eax +
mov eax edi +
mov [esp+54h+var_50] 0 +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov edx [ebp+0Ch] +
mov ecx [edx+4] +
mov edx [edx+0Ch] +
mov eax [esp+54h+var_34] +
mov edi [esp+54h+var_30] +
mov eax [eax+40h] +
mov [esp+54h+var_48] edx +
xor edx edx +
test ecx ecx +
setnz dl  +
mov [esp+54h+var_4C] ebx +
mov [esp+54h+var_50] edx +
mov [esp+54h+var_54] edi +
call eax  +
jmp loc_406B46  +
mov ebx 0FFFFFFFFh +
mov eax [esp+54h+var_34] +
mov edx [edx+8] +
mov edi [esp+54h+var_30] +
mov eax [eax+28h] +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] edi +
call eax  +
jmp loc_406B46  +
mov ecx ebp +
mov edx ebx +
mov eax edi +
call sub_406960  +
test eax eax +
jz loc_406B85  +
mov edx [ebp+0Ch] +
mov esi [edx+8] +
jmp loc_406CFF  +
mov ecx ebp +
mov edx ebx +
mov eax edi +
call sub_406960  +
test eax eax +
jz loc_406B85  +
mov edx [ebp+0Ch] +
jmp loc_4070C7  +
cmp [edi+20h] esi +
mov edx esi +
jb loc_4072B7  +
mov [esp+54h+var_4C] 0A7Dh +
mov [esp+54h+var_50] offset a____BinutilsBi +
mov [esp+54h+var_54] offset aTypeU_kclassId +
call sub_48C4C0  +
mov eax [ebp+0Ch] +
mov edx [eax+8] +
mov ecx [ebp+0] +
mov eax [esp+54h+var_34] +
mov eax [eax+7Ch] +
mov [esp+54h+var_48] ecx +
mov ecx [esp+54h+var_30] +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] ecx +
call eax  +
jmp loc_406B46  +
mov eax [edx+8] +
cmp eax [edi+20h] +
ja loc_407305  +
mov [esp+54h+var_4C] 9D1h +
mov [esp+54h+var_50] offset a____BinutilsBi +
mov [esp+54h+var_54] offset aTypeU_kclassId +
call sub_48C4C0  +
mov eax [ebp+0Ch] +
mov eax [eax+8] +
mov edi [esp+54h+var_34] +
mov ecx [ebp+0] +
mov edx [edi+7Ch] +
jmp loc_406F38  +
mov eax [esp+54h+var_34] +
mov ecx [esp+54h+var_30] +
mov eax [eax+54h] +
mov [esp+54h+arg_0] ecx +
jmp loc_40705F  +
test cl cl +
jz loc_406D22  +
mov eax [esp+54h+var_2C] +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_34] +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax edi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [ebp+0] +
mov ecx 1 +
jmp loc_406D28  +
mov ecx [esp+54h+var_34] +
cmp eax 7 +
setz al  +
xor edx edx +
movzx eax al +
mov esi [ecx+4Ch] +
mov ecx [ebp+4] +
jmp loc_4070EC  +
mov eax [esp+54h+var_34] +
mov ecx [esp+54h+var_30] +
mov eax [eax+20h] +
mov [esp+54h+var_48] 0 +
mov [esp+54h+var_4C] 0 +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] ecx +
call eax  +
jmp loc_406B46  +
mov edi [esp+54h+var_2C] +
mov ebp [esp+54h+var_28] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4074DC  +
mov ebx [edx] +
test ebx ebx +
jz loc_4074DC  +
mov [esp+54h+var_2C] edi +
mov esi 4 +
mov edi [esp+54h+var_34] +
mov [esp+54h+var_28] ebp +
mov ebp [esp+54h+var_30] +
jmp loc_40741B  +
mov ecx [ebx+0Ch] +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov [esp+54h+var_54] ebp +
mov [esp+54h+var_48] ecx +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] eax +
call dword ptr [edi+60h]  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_28] +
mov eax [eax+0Ch] +
mov edx [eax+0Ch] +
mov ebx [edx+esi] +
add esi 4 +
test ebx ebx +
jz loc_4074D4  +
mov eax [ebx] +
mov ecx ebp +
mov edx edi +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax [esp+54h+var_2C] +
call sub_406A80  +
test eax eax +
jnz loc_4073E0  +
xor eax eax +
jmp loc_406B87  +
xor ecx ecx +
mov edx ebp +
mov eax edi +
call sub_405F50  +
test eax eax +
mov ebx eax +
jz loc_407696  +
mov eax [eax] +
lea edx [eax-7] +
cmp edx 3 +
ja loc_407669  +
mov edx [ebx+0Ch] +
test edx edx +
jz loc_407669  +
mov edx [edx+8] +
cmp edx [edi+20h] +
jbe loc_407670  +
mov ebx [ebp+0Ch] +
mov edi [esp+54h+var_34] +
mov ebx [ebx] +
mov ecx [edi+7Ch] +
mov ebx [ebx+4] +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+var_30] +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] eax +
call ecx  +
jmp loc_406B46  +
cmp eax 16h +
jnz loc_407440  +
mov edx [ecx+4] +
mov eax [esp+54h+var_34] +
mov edi [esp+54h+var_30] +
mov eax [eax+78h] +
mov [esp+54h+arg_4] edx +
mov [esp+54h+arg_0] edi +
jmp loc_406F68  +
xor ecx ecx +
xor esi esi +
mov [esp+54h+var_2C] 0 +
jmp loc_406D28  +
mov edi [esp+54h+var_2C] +
mov ebp [esp+54h+var_28] +
mov eax [eax+10h] +
test eax eax +
jz loc_40765D  +
mov eax [eax] +
test eax eax +
mov [esp+54h+var_20] eax +
jz loc_40765D  +
mov [esp+54h+var_18] ebp +
mov esi [esp+54h+var_34] +
mov ebp [esp+54h+var_30] +
mov [esp+54h+var_1C] 4 +
mov [esp+54h+var_2C] edi +
mov edi [esp+54h+var_20] +
mov eax [esi+64h] +
mov edx [edi] +
mov [esp+54h+var_54] ebp +
mov [esp+54h+var_50] edx +
call eax  +
test eax eax +
jz loc_406B85  +
mov eax [edi+4] +
mov ebx [eax] +
test ebx ebx +
jz loc_40762B  +
mov edi 4 +
jmp loc_40759E  +
mov edx [ebx+0Ch] +
mov [esp+54h+var_28] ecx +
mov ecx [ebx+8] +
mov [esp+54h+var_24] edx +
mov edx [ebx] +
mov ebx [ebx+18h] +
mov [esp+54h+var_40] eax +
mov eax [esp+54h+var_28] +
mov [esp+54h+var_4C] ecx +
mov [esp+54h+var_50] edx +
test ebx ebx +
mov [esp+54h+var_44] eax +
mov eax [esp+54h+var_24] +
setnz bl  +
movzx ebx bl +
mov [esp+54h+var_3C] ebx +
mov [esp+54h+var_54] ebp +
mov [esp+54h+var_48] eax +
call dword ptr [esi+68h]  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_20] +
mov eax [eax+4] +
mov ebx [eax+edi] +
add edi 4 +
test ebx ebx +
jz loc_40762B  +
mov eax [ebx+18h] +
test eax eax +
jz loc_4075C5  +
mov [esp+54h+var_54] eax +
mov eax [esp+54h+var_2C] +
mov ecx ebp +
mov [esp+54h+var_50] 0 +
mov edx esi +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [ebx+4] +
mov ecx ebp +
mov edx esi +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
mov eax [esp+54h+var_2C] +
call sub_406A80  +
test eax eax +
jz loc_406B85  +
mov eax [ebx+14h] +
mov ecx [ebx+10h] +
cmp eax 0FFFFFFFFh +
jnz loc_407540  +
mov edx [ebx+0Ch] +
mov eax [ebx+8] +
mov ebx [ebx] +
mov [esp+54h+var_44] ecx +
mov [esp+54h+var_48] edx +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] ebp +
call dword ptr [esi+6Ch]  +
test eax eax +
jnz loc_407589  +
xor eax eax +
jmp loc_406B87  +
xor ecx ecx +
jmp loc_407205  +
mov eax [esi+70h] +
mov [esp+54h+var_54] ebp +
call eax  +
test eax eax +
jz loc_406B85  +
mov eax [esp+54h+var_18] +
mov ecx [esp+54h+var_1C] +
add [esp+54h+var_1C] 4 +
mov eax [eax+0Ch] +
mov eax [eax+10h] +
mov eax [eax+ecx] +
test eax eax +
mov [esp+54h+var_20] eax +
jnz loc_40750D  +
mov eax [esp+54h+var_34] +
mov eax [eax+74h] +
jmp loc_4071BB  +
xor edx edx +
jmp loc_40747A  +
mov eax [ebp+0Ch] +
mov ecx ebx +
mov eax [eax] +
mov edx [eax+4] +
mov eax edi +
call sub_406960  +
test eax eax +
jz loc_406B85  +
mov edx [ebx+0Ch] +
mov eax [ebx] +
mov edx [edx+8] +
jmp loc_40747A  +
mov eax [esp+54h+var_34] +
mov eax [eax+8] +
jmp loc_4071BB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp dword ptr [ebx+0Ch] 6 +
ja loc_4078E1  +
mov ebp eax +
mov eax [ebx+0Ch] +
mov edi edx +
mov esi ecx +
jmp ds:off_498644[eax*4]  +
mov eax [edx+8Ch] +
mov edx [ebx+4] +
fld  qword ptr [ebx+18h] +
fstp  [esp+2Ch+var_24] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edx +
call eax  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+18h] +
mov eax [eax] +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_406A80  +
test eax eax +
jnz loc_4078E6  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+18h] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_406A80  +
test eax eax +
jz loc_407715  +
mov edx [ebx+4] +
mov eax [edi+80h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edx +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4076EE  +
mov eax [ebx+18h] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_406A80  +
test eax eax +
jz loc_407715  +
mov edx [ebx+4] +
mov eax [edi+84h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edx +
call eax  +
jmp loc_4076EE  +
mov eax [ebx+18h] +
mov eax [eax+4] +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_406A80  +
test eax eax +
jz loc_407715  +
mov eax [ebx+18h] +
mov edx [edi+94h] +
mov ecx [eax] +
mov edi [eax+8] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] esi +
mov dword ptr [esp+2Ch+var_24] ecx +
mov dword ptr [esp+2Ch+var_24+4] edi +
mov [esp+2Ch+var_28] eax +
call edx  +
jmp loc_4076EE  +
mov eax [ebx+18h] +
mov ecx [ebx+10h] +
mov [esp+2Ch+var_14] eax +
mov eax [eax+8] +
mov [esp+2Ch+var_18] ecx +
mov ecx [ebx+4] +
lea ebx [ebp+24h] +
mov eax [eax+0Ch] +
mov [esp+2Ch+var_10] ecx +
lea ecx [edx+0ACh] +
mov [esp+2Ch+var_2C] esi +
lea edx [ebp+28h] +
mov [esp+2Ch+var_28] eax +
mov eax ebx +
call sub_406030  +
test eax eax +
jz loc_407715  +
mov eax [esp+2Ch+var_14] +
mov ecx esi +
mov edx edi +
mov eax [eax] +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_406A80  +
test eax eax +
jz loc_407715  +
xor edx edx +
mov ecx [esp+2Ch+var_10] +
cmp [esp+2Ch+var_18] 2 +
mov eax [edi+98h] +
mov [esp+2Ch+var_2C] esi +
setz dl  +
mov dword ptr [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
test eax eax +
jz loc_407715  +
mov eax [esp+2Ch+var_14] +
mov ebx [eax+4] +
test ebx ebx +
jnz loc_407897  +
jmp loc_4078F4  +
mov eax [edi+9Ch] +
mov ecx [ebx+0Ch] +
mov edx [ebx+4] +
mov [esp+2Ch+var_18] eax +
mov eax [ebx+10h] +
mov dword ptr [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] esi +
mov dword ptr [esp+2Ch+var_24+4] eax +
mov eax [esp+2Ch+var_18] +
call eax  +
test eax eax +
jz loc_407715  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4078F4  +
mov eax [ebx+8] +
mov ecx esi +
mov edx edi +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_406A80  +
test eax eax +
jnz loc_407861  +
xor eax eax +
jmp loc_407717  +
mov eax [edx+88h] +
mov ecx [ebx+18h] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] esi +
mov dword ptr [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
call eax  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
mov edx [ebx+18h] +
mov eax [edi+90h] +
mov ecx [edx+4] +
jmp loc_4078C9  +
mov eax [esp+2Ch+var_14] +
mov ebx [eax+8] +
test ebx ebx +
jnz loc_407907  +
jmp loc_407920  +
mov ebx [ebx] +
test ebx ebx +
jz loc_407920  +
mov [esp+2Ch+var_2C] ebx +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_407940  +
test eax eax +
jnz loc_407901  +
xor eax eax +
jmp loc_407717  +
mov eax [edi+0A8h] +
mov [esp+2Ch+arg_0] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
lea ecx [esi+24h] +
mov ebx ecx +
mov [esp+38h+var_24] ecx +
lea edx [esi+28h] +
lea ecx [ebp+0ACh] +
mov eax [eax+0Ch] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_20] edx +
mov [esp+38h+var_1C] ecx +
mov [esp+38h+var_34] eax +
mov eax ebx +
call sub_406030  +
test eax eax +
jz loc_4079D0  +
mov eax [esp+38h+arg_0] +
mov edx [eax+14h] +
test edx edx +
jz loc_4079E0  +
mov edx [esp+38h+arg_0] +
mov eax [ebp+0A0h] +
mov edx [edx+0Ch] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] edx +
call eax  +
test eax eax +
jz loc_4079D0  +
mov eax [esp+38h+arg_0] +
mov eax [eax+14h] +
test eax eax +
jz loc_4079E7  +
mov ebx [eax] +
test ebx ebx +
jnz loc_4079BE  +
jmp loc_4079E7  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4079E7  +
mov [esp+38h+var_38] ebx +
mov ecx edi +
mov edx ebp +
mov eax esi +
call sub_4076B0  +
test eax eax +
jnz loc_4079B8  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [eax+4] +
test ebx ebx +
jz loc_40798B  +
mov eax [esp+38h+arg_0] +
mov ebx [eax+8] +
test ebx ebx +
jnz loc_4079FA  +
jmp loc_407A10  +
mov ebx [ebx] +
test ebx ebx +
jz loc_407A10  +
mov [esp+38h+var_38] ebx +
mov ecx edi +
mov edx ebp +
mov eax esi +
call sub_407940  +
test eax eax +
jnz loc_4079F4  +
jmp loc_4079D0  +
mov eax [esp+38h+arg_0] +
mov ecx [esp+38h+var_1C] +
mov edx [esp+38h+var_20] +
mov eax [eax+10h] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+var_24] +
call sub_406030  +
test eax eax +
jz loc_4079D0  +
mov eax [esp+38h+arg_0] +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_407A61  +
mov esi [esp+38h+arg_0] +
mov eax [ebp+0A4h] +
mov edx [esi+10h] +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] edx +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4079D2  +
mov esi [esp+38h+arg_0] +
mov eax 1 +
mov edx [esi+4] +
test edx edx +
jnz loc_4079D2  +
jmp loc_407A3E  +
***
sub esp 14h +
mov ebx [eax+4] +
test ebx ebx +
jz loc_407AB3  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_407AB3  +
mov esi [eax+10h] +
add ebx 8 +
mov [esp+14h+var_14] 3 +
lea eax [esi+14h] +
test esi esi +
cmovz eax ebx +
call sub_4060E0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:_iob +
mov [esp+14h+var_C] offset aDebug_add_to_c +
mov [esp+14h+var_10] offset aS_4 +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
xor eax eax +
jmp loc_407AAD  +
***
sub esp 14h +
mov [esp+14h+var_14] 34h +
call sub_4742F0  +
mov edx 34h +
test al 1 +
mov ebx eax +
mov edi eax +
jnz loc_407B30  +
test edi 2 +
jnz loc_407B40  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_407B1D  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_407B25  +
mov byte ptr [edi] 0 +
add esp 14h +
mov eax ebx +
pop ebx  +
pop edi  +
retn   +
lea edi [eax+1] +
mov dl 33h +
test edi 2 +
mov byte ptr [eax] 0 +
jz loc_407B06  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_407B06  +
***
push esi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_0] +
test esi esi +
cmovz esi eax +
mov eax [edi+4] +
test eax eax +
jz loc_407C94  +
mov ebx [eax+4] +
test ebx ebx +
jnz loc_407C2E  +
jmp loc_407C50  +
mov ebx [ebx] +
test ebx ebx +
jz loc_407C50  +
mov eax [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call sub_476180  +
test eax eax +
jnz loc_407C28  +
mov [edi+8] ebx +
mov al 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 0Ch +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov edx [edi+8] +
mov [eax+4] esi +
mov ecx [edx] +
test ecx ecx +
jnz loc_407C79  +
jmp loc_407C90  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_407C77  +
mov [ecx] eax +
mov [edi+8] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx edx +
jmp loc_407C7F  +
mov eax ds:_iob +
mov [esp+10h+var_8] offset aDebug_start_so +
mov [esp+10h+var_C] offset aS_4 +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
xor eax eax +
jmp loc_407C46  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
test esi esi +
cmovz esi eax +
test edi edi +
jz loc_407DD0  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+4] +
test eax eax +
jz loc_407DB0  +
mov [esp+1Ch+var_1C] 0Ch +
call sub_4742F0  +
mov [eax] edi +
mov ebx eax +
mov edi 18h +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov [esp+1Ch+var_1C] 18h +
call sub_4742F0  +
test al 1 +
mov edx eax +
jnz loc_407DE0  +
test dl 2 +
jnz loc_407DF0  +
mov ebp edi +
xor ecx ecx +
and ebp 0FFFFFFFCh +
mov dword ptr [edx+ecx] 0 +
add ecx 4 +
cmp ecx ebp +
jb loc_407D39  +
add edx ecx +
test edi 2 +
jz loc_407D5A  +
xor ecx ecx +
add edx 2 +
mov [edx-2] cx +
and edi 1 +
jz loc_407D62  +
mov byte ptr [edx] 0 +
mov ecx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_10] +
cmp [esp+1Ch+arg_C] 1 +
mov dword ptr [eax+10h] 0FFFFFFFFh +
mov [ebx+8] eax +
mov [eax+0Ch] edx +
sbb edx edx +
mov [ecx+10h] eax +
mov eax [ecx+8] +
add edx 2 +
mov [ecx+0Ch] ebx +
mov ecx 3 +
mov [esp+1Ch+var_1C] edx +
mov edx esi +
add eax 8 +
call sub_4060E0  +
test eax eax +
jz loc_407DD0  +
mov [eax+18h] ebx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+1Ch+var_14] offset aDebug_record_f +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [eax] 0 +
lea edx [eax+1] +
mov di 17h +
jmp loc_407D29  +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
sub edi 2 +
jmp loc_407D32  +
***
jmp sub_407E10  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_0] +
mov edi [esp+10h+arg_8] +
test esi esi +
jz loc_407E86  +
test edi edi +
jz loc_407E86  +
mov edx [ebx+4] +
test edx edx +
jz loc_407E90  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_407E90  +
mov [esp+10h+var_10] 14h +
call sub_4742F0  +
mov edx [esp+10h+arg_C] +
mov [eax+0Ch] edx +
mov edx [esp+10h+arg_10] +
mov dword ptr [eax] 0 +
mov [eax+4] esi +
mov [eax+8] edi +
mov [eax+10h] edx +
mov edx [ebx+0Ch] +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_407E72  +
jmp loc_407EB9  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_407E70  +
mov [ecx] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:_iob +
mov [esp+10h+var_8] offset aDebug_record_p +
mov [esp+10h+var_C] offset aS_4 +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea ecx [edx+4] +
jmp loc_407E78  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+4] +
test edx edx +
jz loc_407F30  +
mov edx [eax+10h] +
test edx edx +
jz loc_407F30  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_407F30  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_407F10  +
mov [esp+1Ch+var_14] offset aDebug_end_func +
mov eax ds:_iob +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
xor eax eax +
add esp 1Ch +
retn   +
mov ecx [esp+1Ch+arg_4] +
mov [edx+10h] ecx +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aDebug_end_fu_0 +
jmp loc_407EEB  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [ebx+4] +
test eax eax +
jz loc_407FF0  +
mov eax [ebx+10h] +
test eax eax +
jz loc_407FF0  +
mov [esp+10h+var_10] 18h +
mov esi 18h +
call sub_4742F0  +
test al 1 +
mov ecx eax +
jnz loc_408019  +
test cl 2 +
jnz loc_408028  +
mov edi esi +
xor edx edx +
and edi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx edi +
jb loc_407F8B  +
add ecx edx +
test esi 2 +
jz loc_407FAC  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and esi 1 +
jz loc_407FB4  +
mov byte ptr [ecx] 0 +
mov edx [ebx+10h] +
mov ecx [esp+10h+arg_4] +
mov dword ptr [eax+10h] 0FFFFFFFFh +
mov [eax+4] edx +
mov [eax+0Ch] ecx +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_407FD3  +
jmp loc_408039  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_407FD1  +
mov [ecx] eax +
mov [ebx+10h] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ds:_iob +
mov [esp+10h+var_8] offset aDebug_start_bl +
mov [esp+10h+var_C] offset aS_4 +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov byte ptr [eax] 0 +
lea ecx [eax+1] +
mov si 17h +
jmp loc_407F7B  +
xor edi edi +
add ecx 2 +
mov [ecx-2] di +
sub esi 2 +
jmp loc_407F84  +
lea ecx [edx+8] +
jmp loc_407FD9  +
***
mov eax [esp+18h+arg_0] +
mov edx [eax+4] +
test edx edx +
jz loc_408071  +
mov edx [eax+10h] +
test edx edx +
jz loc_408071  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_408098  +
mov ebx [esp+18h+arg_4] +
mov [edx+10h] ebx +
mov [eax+10h] ecx +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov [esp+18h+var_10] offset aDebug_end_bloc +
mov eax ds:_iob +
mov [esp+18h+var_14] offset aS_4 +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_10] offset aDebug_end_bl_0 +
jmp loc_408079  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [ebx+4] +
test esi esi +
jz loc_4081D1  +
mov eax [ebx+14h] +
test eax eax +
jz loc_4080D8  +
mov esi [ebx+8] +
cmp [eax+4] esi +
jz loc_408178  +
mov [esp+10h+var_10] 58h +
mov esi 58h +
call sub_4742F0  +
test al 1 +
mov edx eax +
mov edi eax +
jnz loc_4081B0  +
test edi 2 +
jnz loc_4081C0  +
mov ecx esi +
xor eax eax +
shr ecx 2 +
test esi 2 +
stos   +
jnz loc_408160  +
and esi 1 +
jnz loc_408158  +
mov eax [ebx+8] +
mov [edx+4] eax +
mov eax [esp+10h+arg_4] +
mov [edx+8] eax +
mov eax [esp+10h+arg_8] +
mov [edx+30h] eax +
mov eax 1 +
mov dword ptr [edx+eax*4+8] 0FFFFFFFFh +
add eax 1 +
cmp eax 0Ah +
jnz loc_408130  +
mov eax [ebx+14h] +
test eax eax +
jz loc_408170  +
mov [eax] edx +
mov [ebx+14h] edx +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov byte ptr [edi] 0 +
jmp loc_408117  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and esi 1 +
jz loc_408117  +
jmp loc_408158  +
mov eax [ebx+4] +
mov [eax+8] edx +
jmp loc_408149  +
xor edx edx +
jmp loc_40818C  +
add edx 1 +
cmp edx 0Ah +
jz loc_4080D8  +
cmp dword ptr [eax+edx*4+8] 0FFFFFFFFh +
jnz loc_408180  +
mov edi [esp+10h+arg_4] +
lea eax [eax+edx*4] +
mov [eax+8] edi +
mov edi [esp+10h+arg_8] +
mov [eax+30h] edi +
mov eax 1 +
jmp loc_408151  +
mov byte ptr [eax] 0 +
lea edi [eax+1] +
mov si 57h +
jmp loc_4080F5  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub esi 2 +
jmp loc_408101  +
mov eax ds:_iob +
mov [esp+10h+var_8] offset aDebug_record_l +
mov [esp+10h+var_C] offset aS_4 +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
xor eax eax +
jmp loc_408151  +
***
sub esp 1Ch +
mov eax ds:_iob +
mov [esp+1Ch+var_14] offset aDebug_start_co +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax ds:_iob +
mov [esp+1Ch+var_14] offset aDebug_end_comm +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 0Ch +
mov edx [esp+0Ch+arg_4] +
test edx edx +
jz loc_408290  +
mov eax [esp+0Ch+arg_0] +
mov ecx 4 +
call sub_407A80  +
test eax eax +
jz loc_408290  +
mov edx [esp+0Ch+arg_8] +
mov [eax+18h] edx +
mov eax 1 +
add esp 0Ch +
retn   +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
fld  [esp+1Ch+arg_8] +
test edx edx +
jz loc_4082D5  +
mov eax [esp+1Ch+arg_0] +
mov ecx 5 +
fstp  [esp+1Ch+var_14] +
call sub_407A80  +
test eax eax +
jz loc_4082D7  +
fld  [esp+1Ch+var_14] +
fstp  qword ptr [eax+18h] +
mov eax 1 +
add esp 1Ch +
retn   +
fstp  st +
xor eax eax +
add esp 1Ch +
retn   +
***
mov edx [esp+18h+arg_4] +
test edx edx +
jnz loc_4082F3  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov eax [esp+18h+arg_8] +
test eax eax +
jz loc_4082EC  +
mov eax [esp+18h+arg_0] +
mov ecx 6 +
call sub_407A80  +
test eax eax +
mov ebx eax +
jz loc_4082EC  +
mov [esp+18h+var_18] 8 +
call sub_4742F0  +
mov ecx [esp+18h+arg_8] +
mov edx [esp+18h+arg_C] +
mov [eax] ecx +
mov [eax+4] edx +
mov [ebx+18h] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax ds:_iob +
mov [esp+1Ch+var_14] offset aDebug_record_0 +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_8] +
mov ebp [esp+1Ch+arg_C] +
test edx edx +
jz loc_408418  +
test esi esi +
jz loc_408418  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_4083F8  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_4083F8  +
lea edi [ebp-1] +
cmp edi 1 +
jbe loc_408422  +
mov edi [eax+10h] +
add ecx 8 +
xor ebx ebx +
lea eax [edi+14h] +
test edi edi +
cmovz eax ecx +
mov [esp+1Ch+var_1C] ebx +
mov ecx 2 +
call sub_4060E0  +
test eax eax +
mov edi eax +
jz loc_408418  +
mov [esp+1Ch+var_1C] 0Ch +
call sub_4742F0  +
mov edx [esp+1Ch+arg_10] +
mov [eax] ebp +
mov [eax+4] esi +
mov [eax+8] edx +
mov [edi+18h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+1Ch+var_14] offset aDebug_record_v +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
cmp ebp 1 +
setz bl  +
lea eax [ecx+8] +
add ebx 1 +
jmp loc_4083BD  +
***
sub esp 18h +
mov eax 1 +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_408472  +
mov [esp+18h+var_18] 8 +
call sub_4742F0  +
mov edx [esp+18h+arg_4] +
mov [eax] edx +
mov edx [esp+18h+arg_8] +
mov [eax+4] edx +
mov [ebx+0Ch] eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
xor edx edx +
mov eax 2 +
jmp sub_4061A0  +
***
sub esp 0Ch +
mov edx [esp+arg_4] +
mov eax 4 +
jmp sub_4061A0  +
***
mov edx [esp+arg_4] +
mov eax 6 +
jmp sub_4061A0  +
***
mov edx [esp+arg_4] +
mov eax 5 +
jmp sub_4061A0  +
***
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_4] 1 +
mov edx [esp+10h+arg_8] +
sbb eax eax +
not eax  +
add eax 8 +
call sub_4061A0  +
test eax eax +
mov esi eax +
jz loc_408554  +
mov [esp+10h+var_10] 18h +
call sub_4742F0  +
mov ebx eax +
mov ecx eax +
test bl 1 +
mov eax 18h +
jnz loc_408560  +
test cl 2 +
jnz loc_408570  +
mov edi eax +
xor edx edx +
and edi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx edi +
jb loc_408527  +
add ecx edx +
test al 2 +
jz loc_408544  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
test al 1 +
jz loc_40854B  +
mov byte ptr [ecx] 0 +
mov eax [esp+10h+arg_C] +
mov [ebx] eax +
mov [esi+0Ch] ebx +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov byte ptr [ebx] 0 +
lea ecx [ebx+1] +
mov al 17h +
jmp loc_40851B  +
xor edi edi +
add ecx 2 +
mov [ecx-2] di +
sub eax 2 +
jmp loc_408520  +
***
push ebx  +
sub esp 10h +
cmp [esp+10h+arg_4] 1 +
mov edx [esp+10h+arg_8] +
sbb eax eax +
not eax  +
add eax 0Ah +
call sub_4061A0  +
test eax eax +
mov edi eax +
jz loc_408640  +
mov [esp+10h+var_10] 18h +
mov esi 18h +
call sub_4742F0  +
test al 1 +
mov ebx eax +
mov ecx eax +
jnz loc_408623  +
test cl 2 +
jnz loc_408630  +
mov eax esi +
xor edx edx +
and eax 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx eax +
jb loc_4085CA  +
add ecx edx +
test esi 2 +
jz loc_4085EB  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and esi 1 +
jz loc_4085F3  +
mov byte ptr [ecx] 0 +
mov eax [esp+10h+arg_C] +
mov [ebx] eax +
mov eax [esp+10h+arg_10] +
mov [ebx+0Ch] eax +
mov eax [esp+10h+arg_14] +
mov [ebx+10h] eax +
mov eax [esp+10h+arg_1C] +
test eax eax +
mov eax edi +
cmovz eax [esp+10h+arg_18] +
mov [ebx+14h] eax +
mov eax edi +
mov [edi+0Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov byte ptr [eax] 0 +
lea ecx [eax+1] +
mov si 17h +
jmp loc_4085BE  +
xor eax eax +
add ecx 2 +
mov [ecx-2] ax +
sub esi 2 +
jmp loc_4085C3  +
xor eax eax +
jmp loc_40861C  +
***
sub esp 18h +
mov eax 0Bh +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_408682  +
mov [esp+18h+var_18] 8 +
call sub_4742F0  +
mov edx [esp+18h+arg_4] +
mov [eax] edx +
mov edx [esp+18h+arg_8] +
mov [eax+4] edx +
mov [ebx+0Ch] eax +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 4 +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jz loc_4086D0  +
mov esi [ebx+8] +
test esi esi +
jz loc_4086B0  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
mov eax 0Ch +
call sub_4061A0  +
test eax eax +
jz loc_4086A4  +
mov [eax+0Ch] ebx +
mov esi eax +
mov [ebx+8] eax +
jmp loc_4086A4  +
xor esi esi +
jmp loc_4086A4  +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
test esi esi +
jz loc_408726  +
xor edx edx +
mov eax 0Dh +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_408726  +
mov [esp+14h+var_14] 0Ch +
call sub_4742F0  +
mov edx [esp+14h+arg_8] +
mov [eax+4] edx +
mov edx [esp+14h+arg_C] +
mov [eax] esi +
mov [eax+8] edx +
mov [ebx+0Ch] eax +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_408720  +
***
mov ebx [esp+8+arg_4] +
test ebx ebx +
jz loc_408754  +
xor edx edx +
mov eax 0Eh +
call sub_4061A0  +
test eax eax +
jz loc_408754  +
mov [eax+0Ch] ebx +
add esp 8 +
pop ebx  +
retn   +
xor eax eax +
jmp loc_40874F  +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
test esi esi +
jz loc_4087A6  +
xor edx edx +
mov eax 0Fh +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_4087A6  +
mov [esp+14h+var_14] 0Ch +
call sub_4742F0  +
mov edx [esp+14h+arg_8] +
mov [eax+4] edx +
mov edx [esp+14h+arg_C] +
mov [eax] esi +
mov [eax+8] edx +
mov [ebx+0Ch] eax +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_4087A0  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
test esi esi +
jz loc_408810  +
test edi edi +
jz loc_408810  +
xor edx edx +
mov eax 10h +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_408810  +
mov [esp+10h+var_10] 14h +
call sub_4742F0  +
mov edx [esp+10h+arg_C] +
mov [eax+8] edx +
mov edx [esp+10h+arg_10] +
mov [eax] esi +
mov [eax+4] edi +
mov [eax+0Ch] edx +
mov edx [esp+10h+arg_14] +
mov [eax+10h] edx +
mov [ebx+0Ch] eax +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
test esi esi +
jz loc_408860  +
xor edx edx +
mov eax 11h +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_408860  +
mov [esp+14h+var_14] 8 +
call sub_4742F0  +
mov edx [esp+14h+arg_8] +
mov [eax] esi +
mov [eax+4] edx +
mov [ebx+0Ch] eax +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_408859  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
test esi esi +
jz loc_4088B5  +
test edi edi +
jz loc_4088B5  +
xor edx edx +
mov eax 12h +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_4088B5  +
mov [esp+10h+var_10] 8 +
call sub_4742F0  +
mov [eax] esi +
mov [eax+4] edi +
mov [ebx+0Ch] eax +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
test esi esi +
jz loc_408910  +
xor edx edx +
mov eax 13h +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_408910  +
mov [esp+14h+var_14] 10h +
call sub_4742F0  +
mov edx [esp+14h+arg_8] +
mov [eax+4] edx +
mov edx [esp+14h+arg_C] +
mov [eax] esi +
mov [eax+8] edx +
mov edx [esp+14h+arg_10] +
mov [eax+0Ch] edx +
mov [ebx+0Ch] eax +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_408907  +
***
mov ebx [esp+8+arg_4] +
test ebx ebx +
jz loc_408944  +
xor edx edx +
mov eax 14h +
call sub_4061A0  +
test eax eax +
jz loc_408944  +
mov [eax+0Ch] ebx +
add esp 8 +
pop ebx  +
retn   +
xor eax eax +
jmp loc_40893F  +
***
mov ebx [esp+8+arg_4] +
test ebx ebx +
jz loc_408974  +
xor edx edx +
mov eax 15h +
call sub_4061A0  +
test eax eax +
jz loc_408974  +
mov [eax+0Ch] ebx +
add esp 8 +
pop ebx  +
retn   +
xor eax eax +
jmp loc_40896F  +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] 10h +
call sub_4742F0  +
mov edx [esp+1Ch+arg_4] +
mov [eax] edx +
mov edx [esp+1Ch+arg_8] +
mov [eax+4] edx +
mov edx [esp+1Ch+arg_C] +
mov [eax+8] edx +
mov edx [esp+1Ch+arg_10] +
mov [eax+0Ch] edx +
add esp 1Ch +
retn   +
***
mov ebx 18h +
sub esp 14h +
mov [esp+14h+var_14] 18h +
call sub_4742F0  +
test al 1 +
mov ecx eax +
jnz loc_408A30  +
test cl 2 +
jnz loc_408A40  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_4089D8  +
add ecx edx +
test bl 2 +
jz loc_4089F6  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_4089FE  +
mov byte ptr [ecx] 0 +
mov edx [esp+14h+arg_4] +
mov dword ptr [eax+0Ch] 0 +
mov [eax] edx +
mov edx [esp+14h+arg_8] +
mov [eax+4] edx +
mov edx [esp+14h+arg_C] +
mov [eax+10h] edx +
mov edx [esp+14h+arg_10] +
mov [eax+14h] edx +
mov edx [esp+14h+arg_14] +
mov [eax+8] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ecx [eax+1] +
mov bl 17h +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_4089D1  +
lea esi [esi+0] +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_4089D1  +
***
mov ebx 18h +
sub esp 14h +
mov [esp+14h+var_14] 18h +
call sub_4742F0  +
test al 1 +
mov ecx eax +
jnz loc_408AC6  +
test cl 2 +
jnz loc_408AD3  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_408A78  +
add ecx edx +
test bl 2 +
jz loc_408A96  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_408A9E  +
mov byte ptr [ecx] 0 +
mov edx [esp+14h+arg_4] +
mov dword ptr [eax+0Ch] 1 +
mov [eax] edx +
mov edx [esp+14h+arg_8] +
mov [eax+4] edx +
mov edx [esp+14h+arg_C] +
mov [eax+10h] edx +
mov edx [esp+14h+arg_10] +
mov [eax+8] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ecx [eax+1] +
mov bl 17h +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_408A71  +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_408A71  +
***
jmp sub_408AF0  +
***
sub esp 1Ch +
mov ebx 1Ch +
sub esp 14h +
mov [esp+14h+var_14] 1Ch +
call sub_4742F0  +
test al 1 +
mov ecx eax +
jnz loc_408B94  +
test cl 2 +
jnz loc_408BA1  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_408B38  +
add ecx edx +
test bl 2 +
jz loc_408B56  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_408B5E  +
mov byte ptr [ecx] 0 +
mov edx [esp+14h+arg_4] +
mov [eax] edx +
mov edx [esp+14h+arg_8] +
mov [eax+4] edx +
mov edx [esp+14h+arg_C] +
mov [eax+8] edx +
mov edx [esp+14h+arg_10] +
mov [eax+0Ch] edx +
mov edx [esp+14h+arg_14] +
mov [eax+10h] edx +
mov edx [esp+14h+arg_18] +
mov [eax+14h] edx +
mov edx [esp+14h+arg_1C] +
mov [eax+18h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ecx [eax+1] +
mov bl 1Bh +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_408B31  +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_408B31  +
***
mov ebx 1Ch +
sub esp 14h +
mov [esp+14h+var_14] 1Ch +
call sub_4742F0  +
test al 1 +
mov ecx eax +
jnz loc_408C30  +
test cl 2 +
jnz loc_408C40  +
mov esi ebx +
xor edx edx +
and esi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx esi +
jb loc_408BD8  +
add ecx edx +
test bl 2 +
jz loc_408BF6  +
xor edx edx +
add ecx 2 +
mov [ecx-2] dx +
and ebx 1 +
jz loc_408BFE  +
mov byte ptr [ecx] 0 +
mov edx [esp+14h+arg_4] +
mov dword ptr [eax+14h] 0FFFFFFFFh +
mov [eax] edx +
mov edx [esp+14h+arg_8] +
mov [eax+4] edx +
mov edx [esp+14h+arg_C] +
mov [eax+8] edx +
mov edx [esp+14h+arg_10] +
mov [eax+0Ch] edx +
mov edx [esp+14h+arg_14] +
mov [eax+10h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ecx [eax+1] +
mov bl 1Bh +
test cl 2 +
mov byte ptr [eax] 0 +
jz loc_408BD1  +
lea esi [esi+0] +
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_408BD1  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_8] +
test ecx ecx +
jz loc_408CF8  +
test ebp ebp +
jz loc_408CF8  +
mov edx [edi+4] +
test edx edx +
jz loc_408CD8  +
mov eax [edi+8] +
test eax eax +
jz loc_408CD8  +
xor edx edx +
mov eax 16h +
call sub_4061A0  +
test eax eax +
mov ebx eax +
jz loc_408CF8  +
mov [esp+1Ch+var_1C] 8 +
call sub_4742F0  +
mov edx [esp+1Ch+arg_4] +
xor ecx ecx +
mov dword ptr [eax] 0 +
mov esi eax +
mov [eax+4] ebp +
mov [ebx+0Ch] eax +
mov eax [edi+8] +
mov [esp+1Ch+var_1C] 3 +
add eax 8 +
call sub_4060E0  +
test eax eax +
jz loc_408CF8  +
mov [eax+18h] ebx +
mov [esi] eax +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+1Ch+var_14] offset aDebug_name_typ +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_8] +
test esi esi +
jz loc_408DE0  +
test ebx ebx +
jz loc_408DE0  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
test eax eax +
jz loc_408DEC  +
cmp dword ptr [ebx] 17h +
jz loc_408DA6  +
xor edx edx +
mov eax 17h +
call sub_4061A0  +
test eax eax +
mov edi eax +
jz loc_408DE0  +
mov [esp+1Ch+var_1C] 8 +
call sub_4742F0  +
mov ecx 1 +
mov edx esi +
mov dword ptr [eax] 0 +
mov ebp eax +
mov [eax+4] ebx +
mov [edi+0Ch] eax +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
mov [esp+1Ch+var_1C] 3 +
add eax 8 +
call sub_4060E0  +
test eax eax +
jz loc_408DE0  +
mov [eax+18h] edi +
mov ebx edi +
mov [ebp+0] eax +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] esi +
mov eax [ebx+0Ch] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jz loc_408D9C  +
mov [esp+1Ch+var_14] offset aDebug_tag_type +
mov eax ds:_iob +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
nop   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aDebug_tag_ty_0 +
jmp loc_408DC6  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov eax [esp+14h+arg_8] +
test ebx ebx +
jz loc_408E60  +
lea edx [eax-7] +
cmp edx 4 +
ja loc_408E40  +
xor edx edx +
call sub_4061A0  +
test eax eax +
jz loc_408E60  +
mov [esp+14h+arg_4] ebx +
mov [esp+14h+arg_0] esi +
mov [esp+14h+arg_8] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_408D10  +
mov eax ds:_iob +
mov [esp+14h+var_C] offset aDebug_make_und +
mov [esp+14h+var_10] offset aS_4 +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_8] +
mov eax [ebx+4] +
test eax eax +
jz loc_408EA8  +
cmp eax esi +
jz loc_408EA8  +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_10] offset aWarningChangin +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
mov [ebx+4] esi +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [eax+4] +
test edi edi +
jz loc_408F80  +
mov esi [eax+10h] +
test esi esi +
jz loc_408F2C  +
mov eax [esi+14h] +
test eax eax +
jz loc_408F25  +
mov ebx [eax] +
test ebx ebx +
jnz loc_408EF8  +
nop   +
jmp loc_408F25  +
mov ebx [ebx] +
test ebx ebx +
jz loc_408F25  +
mov edx [ebx+0Ch] +
test edx edx +
jnz loc_408EF2  +
mov eax [ebx+4] +
movzx edx byte ptr [ebp+0] +
cmp [eax] dl +
jnz loc_408EF2  +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_408EF2  +
mov eax [ebx+18h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esi+4] +
test esi esi +
jnz loc_408EE1  +
mov esi [edi+4] +
test esi esi +
jz loc_408F76  +
mov eax [esi+8] +
test eax eax +
jz loc_408F70  +
mov ebx [eax] +
test ebx ebx +
jnz loc_408F48  +
jmp loc_408F70  +
mov ebx [ebx] +
test ebx ebx +
jz loc_408F70  +
mov eax [ebx+0Ch] +
test eax eax +
jnz loc_408F42  +
mov eax [ebx+4] +
movzx ecx byte ptr [ebp+0] +
cmp [eax] cl +
jnz loc_408F42  +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jz loc_408F1A  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_408F48  +
mov esi [esi] +
test esi esi +
jnz loc_408F33  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+1Ch+var_14] offset aDebug_find_nam +
mov [esp+1Ch+var_18] offset aS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
xor eax eax +
jmp loc_408F1D  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_8] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_409038  +
mov eax [esp+1Ch+var_10] +
mov ebp [eax+4] +
test ebp ebp +
jz loc_40902A  +
mov eax [ebp+8] +
test eax eax +
jz loc_409023  +
mov ebx [eax] +
test ebx ebx +
jnz loc_408FED  +
jmp loc_409023  +
mov ebx [ebx] +
test ebx ebx +
jz loc_409023  +
cmp dword ptr [ebx+0Ch] 1 +
jnz loc_408FE7  +
test esi esi +
jz loc_408FFE  +
mov eax [ebx+18h] +
cmp [eax] esi +
jnz loc_408FE7  +
mov eax [ebx+4] +
movzx edx byte ptr [edi] +
cmp [eax] dl +
jnz loc_408FE7  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_408FE7  +
mov eax [ebx+18h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_408FD8  +
mov eax [esp+1Ch+var_10] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch+var_10] eax +
jnz loc_408FCD  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov edx [esp+0Ch+arg_4] +
test edx edx +
jz loc_409070  +
mov eax [esp+0Ch+arg_0] +
xor ecx ecx +
call sub_405F50  +
test eax eax +
jz loc_409070  +
mov eax [eax] +
add esp 0Ch +
retn   +
xor eax eax +
add esp 0Ch +
retn   +
***
mov edx [esp+arg_4] +
jmp loc_409091  +
mov eax [edx+0Ch] +
mov edx [eax] +
mov edx [edx] +
test edx edx +
jz loc_4090A7  +
mov eax [edx] +
cmp eax 1 +
jz loc_409086  +
lea ecx [eax-16h] +
xor eax eax +
cmp ecx 1 +
ja locret_4090AA  +
mov eax [edx+0Ch] +
mov eax [eax] +
mov eax [eax+4] +
retn   +
***
mov edx [esp+arg_4] +
test edx edx +
jz loc_4090F0  +
mov eax [edx+4] +
test eax eax +
jnz locret_4090F3  +
mov eax [edx] +
cmp eax 1 +
jz loc_4090E3  +
jb loc_4090F0  +
sub eax 16h +
cmp eax 1 +
ja loc_4090F0  +
mov eax [edx+0Ch] +
mov edx [eax+4] +
test edx edx +
jz loc_4090F0  +
mov eax [edx+4] +
test eax eax +
jz loc_4090BF  +
retn   +
mov eax [edx+0Ch] +
mov eax [eax] +
mov edx [eax] +
test edx edx +
jnz loc_4090DA  +
nop   +
xor eax eax +
retn   +
retn   +
***
sub esp 0Ch +
mov edx [esp+0Ch+arg_4] +
test edx edx +
jz loc_409130  +
mov eax [esp+0Ch+arg_0] +
xor ecx ecx +
call sub_405F50  +
test eax eax +
jz loc_409130  +
mov edx [eax] +
cmp edx 0Dh +
jz loc_409126  +
cmp edx 13h +
jnz loc_409130  +
mov eax [eax+0Ch] +
mov eax [eax] +
add esp 0Ch +
retn   +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
mov edx [esp+0Ch+arg_4] +
test edx edx +
jz loc_409166  +
mov eax [esp+0Ch+arg_0] +
xor ecx ecx +
call sub_405F50  +
test eax eax +
jz loc_409166  +
mov edx [eax] +
cmp edx 0Dh +
jz loc_409186  +
cmp edx 13h +
jz loc_409170  +
xor eax eax +
add esp 0Ch +
retn   +
mov edx [eax+0Ch] +
mov ecx [esp+0Ch+arg_8] +
mov edx [edx+0Ch] +
mov [ecx] edx +
mov eax [eax+0Ch] +
mov eax [eax+8] +
add esp 0Ch +
retn   +
mov edx [eax+0Ch] +
mov ecx [esp+0Ch+arg_8] +
mov edx [edx+8] +
mov [ecx] edx +
mov eax [eax+0Ch] +
mov eax [eax+4] +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
mov edx [esp+0Ch+arg_4] +
test edx edx +
jz loc_4091E5  +
mov eax [esp+0Ch+arg_0] +
xor ecx ecx +
call sub_405F50  +
test eax eax +
jz loc_4091E5  +
mov edx [eax] +
cmp edx 0Eh +
jz loc_4091D2  +
jbe loc_4091E0  +
cmp edx 14h +
jz loc_4091D2  +
cmp edx 15h +
nop   +
lea esi [esi+0] +
jnz loc_4091E5  +
mov eax [eax+0Ch] +
add esp 0Ch +
retn   +
cmp edx 0Ch +
jz loc_4091D2  +
xor eax eax +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
mov edx [esp+0Ch+arg_4] +
test edx edx +
jz loc_409220  +
mov eax [esp+0Ch+arg_0] +
xor ecx ecx +
call sub_405F50  +
test eax eax +
jz loc_409220  +
mov ecx [eax] +
lea edx [ecx-7] +
cmp edx 3 +
ja loc_409220  +
mov eax [eax+0Ch] +
mov eax [eax] +
add esp 0Ch +
retn   +
xor eax eax +
add esp 0Ch +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jz loc_409240  +
mov eax [eax+4] +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jz loc_409260  +
mov eax [eax] +
retn   +
xor eax eax +
retn   +
***
mov edx [esp+arg_4] +
mov eax 0FFFFFFFFh +
test edx edx +
jz locret_409284  +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_409286  +
retn   +
mov eax [edx+10h] +
retn   +
***
mov edx [esp+arg_4] +
mov eax 0FFFFFFFFh +
test edx edx +
jz locret_4092A4  +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_4092A6  +
retn   +
mov eax [edx+14h] +
retn   +
***
mov eax [esp+8] +
test eax eax +
jz loc_4092E3  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4092E3  +
mov eax [eax+10h] +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ebp [esp+2Ch+arg_8] +
mov eax [esi+1Ch] +
add dword ptr [esi+18h] 1 +
mov dword ptr [esi+2Ch] 0 +
mov [esi+20h] eax +
mov eax [esi] +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_4093FA  +
lea eax [edi+0ACh] +
mov [esp+2Ch+var_14] eax +
lea eax [esi+28h] +
mov [esp+2Ch+var_10] eax +
mov ecx [esp+2Ch+var_18] +
mov edx [ecx+4] +
mov eax [ecx+8] +
mov dword ptr [esi+28h] 0 +
mov edx [edx+4] +
mov [esi+24h] eax +
mov eax [edi] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edx +
call eax  +
test eax eax +
jz loc_409398  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
test eax eax +
mov [esp+2Ch+var_1C] eax +
jz loc_4093C9  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+8] +
test eax eax +
jz loc_4093A2  +
mov ebx [eax] +
test ebx ebx +
jnz loc_409386  +
jmp loc_4093A2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4093A2  +
mov [esp+2Ch+var_2C] ebx +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_4076B0  +
test eax eax +
jnz loc_409380  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_1C] +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+var_1C] eax +
jz loc_4093C9  +
mov ecx [esp+2Ch+var_1C] +
mov eax [edi+4] +
mov edx [ecx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edx +
call eax  +
test eax eax +
jnz loc_409368  +
jmp loc_409398  +
mov ecx [esp+2Ch+var_14] +
lea eax [esi+24h] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] 0FFFFFFFFh +
mov [esp+2Ch+var_2C] ebp +
call sub_406030  +
test eax eax +
jz loc_409398  +
mov eax [esp+2Ch+var_18] +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+var_18] eax +
jnz loc_409333  +
mov eax 1 +
jmp loc_40939A  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_409480  +
sub ecx 30h +
lea ebx [eax+1] +
mov [ebp+0] ecx +
mov [edi] ebx +
movsx edx byte ptr [eax+1] +
mov eax 1 +
movzx esi dl +
test ds:byte_4B8120[esi+esi] 4 +
jz loc_409474  +
nop   +
lea esi [esi+0] +
add ebx 1 +
lea eax [ecx+ecx*4] +
lea ecx [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx esi dl +
test ds:byte_4B8120[esi+esi] 4 +
jnz loc_409450  +
cmp dl 5Fh +
mov eax 1 +
jz loc_409487  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov [edi] ebx +
mov [ebp+0] ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+14h] +
mov eax [eax+18h] +
cmp esi eax +
jnb loc_4094D5  +
mov eax [ebx+10h] +
lea eax [eax+esi*8] +
add esi 1 +
mov [eax] edi +
mov [eax+4] ebp +
mov eax 1 +
mov [ebx+14h] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10h] +
add eax 0Ah +
mov [ebx+18h] eax +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_474370  +
mov esi [ebx+14h] +
mov [ebx+10h] eax +
jmp loc_4094BA  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call sub_4742F0  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
test edx edx +
jz loc_409555  +
mov dword ptr [edx] 0 +
mov ebp ds:__imp__errno +
mov edi [ebx] +
call ebp  +
mov dword ptr [eax] 0 +
mov eax [ebx] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 0 +
mov [esp+0] eax +
call strtoul  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_409590  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ebp  +
mov eax [eax] +
test eax eax +
jz loc_409582  +
test esi esi +
jz loc_4095B0  +
mov dword ptr [esi] 1 +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
xor ebx ebx +
mov [esp+0Ch] edi +
mov dword ptr [esp+8] offset aNumericOverflo +
mov dword ptr [esp+4] offset aWarningSS +
add eax 40h +
mov [esp+0] eax +
call fprintf  +
jmp loc_409582  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov edi [eax] +
cmp byte ptr [edi] 28h +
jz loc_409610  +
mov dword ptr [edx] 0 +
xor edx edx +
call sub_409540  +
mov [esi+4] eax +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [edi+1] +
xor edx edx +
mov [ebx] eax +
mov eax ebx +
call sub_409540  +
mov [esi] eax +
mov eax [ebx] +
cmp byte ptr [eax] 2Ch +
jz loc_409650  +
mov eax ds:_iob +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] offset aBadStabS +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
xor edx edx +
mov [ebx] eax +
mov eax ebx +
call sub_409540  +
mov [esi+4] eax +
mov eax [ebx] +
cmp byte ptr [eax] 29h +
jnz loc_409627  +
add eax 1 +
mov [ebx] eax +
mov eax 1 +
jmp loc_409606  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 20h +
mov esi [esp+28h+arg_4] +
lea edx [esi-1] +
cmp edx 1 +
jbe loc_409701  +
mov edx [ebx+34h] +
test edx edx +
jz loc_409701  +
mov ecx [ebx+20h] +
test ecx ecx +
jnz loc_4096AB  +
mov edx [ebx+24h] +
test edx edx +
jnz loc_409701  +
mov [esp+28h+var_28] 14h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov edx [ebx+40h] +
mov [eax+4] edi +
mov edi [esp+28h+arg_0] +
mov [eax+0Ch] esi +
mov [eax] edx +
mov [eax+8] edi +
mov edi [esp+28h+arg_8] +
mov [eax+10h] edi +
mov [ebx+40h] eax +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [esp+28h+arg_8] +
mov [esp+28h+var_1C] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_18] ecx +
mov ecx [esp+28h+arg_0] +
mov [esp+28h+var_20] ecx +
call sub_408370  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [edx] +
test ebx ebx +
jnz loc_409753  +
jmp loc_409785  +
mov esi [ebx] +
mov [esp+38h+var_38] ebx +
call free  +
test esi esi +
jz loc_409785  +
mov ebx esi +
mov esi [ebx+10h] +
mov ecx [ebx+0Ch] +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov [esp+38h+var_28] esi +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
call sub_408370  +
test eax eax +
jnz loc_409743  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 0 +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [ecx] +
mov ebp [ecx+4] +
test ebx ebx +
js loc_409850  +
cmp ebx [eax] +
jnb loc_409850  +
test ebp ebp +
js loc_4098DE  +
mov eax [edx] +
cmp ebp 0Fh +
lea esi [eax+ebx*4] +
jle loc_4097E3  +
mov ebx ebp +
mov eax [esi] +
test eax eax +
jz loc_409800  +
sub ebx 10h +
mov esi eax +
cmp ebx 0Fh +
jg loc_4097D0  +
and ebp 0Fh +
mov eax [esi] +
test eax eax +
jz loc_40988E  +
add esp 1Ch +
pop ebx  +
lea eax [eax+ebp*4+4] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 44h +
call sub_4742F0  +
mov edx 44h +
test al 1 +
mov edi eax +
mov [esi] eax +
jnz loc_409876  +
test edi 2 +
jnz loc_409880  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_409840  +
and edx 1 +
jnz loc_409838  +
mov eax [esi] +
jmp loc_4097D6  +
mov byte ptr [edi] 0 +
mov eax [esi] +
jmp loc_4097D6  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_409834  +
jmp loc_409838  +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] offset aTypeFileNumber +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [eax] 0 +
add edi 1 +
mov dl 43h +
jmp loc_409819  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
sub edx 2 +
jmp loc_409821  +
mov [esp+1Ch+var_1C] 44h +
call sub_4742F0  +
mov edx 44h +
test al 1 +
mov edi eax +
mov [esi] eax +
jnz loc_4098FD  +
test edi 2 +
jnz loc_4098EF  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_4098D3  +
and edx 1 +
jnz loc_4098C9  +
mov eax [esi] +
jmp loc_4097ED  +
mov byte ptr [edi] 0 +
mov eax [esi] +
jmp loc_4097ED  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
jmp loc_4098BD  +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] offset aTypeIndexNumbe +
jmp loc_40985C  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_4098AF  +
mov byte ptr [eax] 0 +
add edi 1 +
mov dl 43h +
jmp loc_4098A7  +
***
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax [ecx] +
test eax eax +
jnz loc_409926  +
mov eax [ecx+4] +
test eax eax +
js loc_409960  +
lea edx [ebx+48h] +
lea eax [ebx+44h] +
call sub_4097A0  +
test eax eax +
jz loc_409D83  +
mov edx [eax] +
test edx edx +
jz loc_409947  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] esi +
call sub_408440  +
mov edx eax +
jmp loc_40993F  +
lea edx [eax+22h] +
cmp edx 21h +
ja loc_409D8A  +
neg eax  +
lea ebx [ebx+eax*4] +
mov edx [ebx+4Ch] +
test edx edx +
jnz loc_40993F  +
cmp eax 22h +
ja loc_409ABF  +
jmp ds:off_498B94[eax*4]  +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aUnsignedLong +
lea esi [esi+0] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_10] eax +
mov [esp+18h+var_18] esi +
call sub_408C50  +
mov [ebx+4Ch] eax +
mov edx eax +
jmp loc_40993F  +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aUnsignedInt +
jmp loc_4099C0  +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] 2 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aUnsignedShort +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aSignedChar_0 +
jmp loc_4099C0  +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aUnsignedChar +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aLong +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 2 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aShort +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aChar +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aInt +
jmp loc_4099C0  +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_4084C0  +
mov edx offset aLogical8 +
jmp loc_4099C0  +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aUnsignedLongLo +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aLongLong +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 2 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aWchar +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aInteger4 +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 2 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aInteger2 +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aInteger1 +
jmp loc_4099C0  +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] esi +
call sub_4084D0  +
mov edx offset aDoubleComplex +
jmp loc_4099C0  +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_4084D0  +
mov edx offset aComplex_0 +
jmp loc_4099C0  +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_4084C0  +
mov edx offset aLogical +
jmp loc_4099C0  +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_4084C0  +
mov edx offset aLogical4 +
jmp loc_4099C0  +
mov [esp+18h+var_14] 2 +
mov [esp+18h+var_18] esi +
call sub_4084C0  +
mov edx offset aLogical2 +
jmp loc_4099C0  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] esi +
call sub_4084C0  +
mov edx offset aLogical1 +
jmp loc_4099C0  +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aCharacter +
jmp loc_4099C0  +
mov edx offset aStringptr +
xor eax eax +
jmp loc_4099C0  +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_4084B0  +
mov edx offset aReal +
jmp loc_4099C0  +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_4084B0  +
mov edx offset aShortReal +
jmp loc_4099C0  +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_4084C0  +
mov edx offset aBoolean +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aInteger +
jmp loc_4099C0  +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_4084B0  +
mov edx offset aLongDouble +
jmp loc_4099C0  +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_4084B0  +
mov edx offset aDouble +
jmp loc_4099C0  +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] esi +
call sub_4084B0  +
mov edx offset aFloat +
jmp loc_4099C0  +
mov [esp+18h+var_18] esi +
call sub_408480  +
mov edx offset aVoid +
jmp loc_4099C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] esi +
call sub_408490  +
mov edx offset aInteger8 +
jmp loc_4099C0  +
xor edx edx +
jmp loc_40993F  +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
mov [esp+18h+var_14] offset aUnrecognizedXc +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
xor edx edx +
jmp loc_40993F  +
***
push edi  +
mov edi eax +
push esi  +
mov eax ecx +
push ebx  +
sub esp 1Ch +
mov edx [esp+28h+arg_0] +
call sub_409500  +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_28] edi +
mov [esp+28h+var_24] eax +
mov esi eax +
call sub_408FB0  +
test eax eax +
mov ebx eax +
jz loc_409DF4  +
mov [esp+28h+var_28] esi +
call free  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebp+0] +
test ebx ebx +
jz loc_409E40  +
movzx edx byte ptr [esi] +
jmp loc_409E06  +
mov ebx [ebx] +
test ebx ebx +
jz loc_409E40  +
mov eax [ebx+4] +
cmp [eax] dl +
jnz loc_409E00  +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_1C] edx +
call strcmp  +
mov edx [esp+28h+var_1C] +
test eax eax +
jnz loc_409E00  +
mov eax [ebx+8] +
test eax eax +
jnz loc_409E33  +
mov eax [esp+28h+arg_4] +
mov [ebx+8] eax +
mov [esp+28h+var_28] esi +
call free  +
jmp loc_409E98  +
mov [esp+28h+var_28] 14h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov ebx eax +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov eax [ebp+0] +
mov [ebx+4] esi +
mov [ebx] eax +
mov eax [esp+28h+arg_4] +
mov [ebx+8] eax +
lea eax [ebx+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edi +
call sub_408440  +
mov [ebx+10h] eax +
mov [ebp+0] ebx +
mov eax [ebx+10h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov ebp [esp+40h+arg_4] +
mov [esp+40h+var_24] edx +
test ebp ebp +
jz loc_409ECE  +
mov dword ptr [ebp+0] 0 +
mov eax [esi] +
cmp eax 29h +
ja loc_40A327  +
jmp ds:off_498D0C[eax*4]  +
mov eax [esi+8] +
mov edx [esp+40h+var_24] +
mov ecx [esi+4] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] eax +
mov eax ebx +
add edx 0D4h +
call sub_409DB0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esi+4] +
mov eax ebx +
mov edx [esp+40h+var_24] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] 0 +
call sub_409EB0  +
test eax eax +
jz loc_40A3B0  +
mov edx [esi] +
sub edx 19h +
cmp edx 0Ah +
ja loc_40A404  +
jmp ds:off_498DB4[edx*4]  +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_34] eax +
mov [esp+40h+var_38] 14h +
mov [esp+40h+var_3C] esi +
mov [esp+40h+var_40] 3 +
call sub_481E90  +
test eax eax +
mov edx eax +
jz loc_40A384  +
mov edi offset aSignedChar_0 +
mov ecx 0Ch +
mov esi eax +
cmps   +
jz loc_40A350  +
mov edi offset aBool +
mov ecx 5 +
mov esi eax +
cmps   +
jz loc_40A410  +
mov edi offset aChar +
mov ecx 5 +
mov esi eax +
cmps   +
jz loc_40A350  +
mov edi offset aDouble +
mov ecx 7 +
mov esi eax +
cmps   +
jz loc_40A430  +
mov edi offset aLongDouble +
mov ecx 0Ch +
mov esi eax +
cmps   +
jz loc_40A430  +
mov edi offset aFloat +
mov ecx 6 +
mov esi eax +
cmps   +
jz loc_40A48F  +
mov edi offset a__float128 +
mov ecx 0Bh +
mov esi eax +
cmps   +
jz loc_40A4AE  +
mov edi offset aUnsignedChar +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_40A4F4  +
mov edi offset aInt +
mov ecx 4 +
mov esi eax +
cmps   +
jz loc_40A4CD  +
mov edi offset aUnsignedInt +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_40A505  +
mov edi offset aLong +
mov ecx 5 +
mov esi eax +
cmps   +
jz loc_40A4CD  +
mov edi offset aUnsignedLong +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_40A505  +
mov edi offset a__int128 +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_40A513  +
mov edi offset aUnsigned__int1 +
mov ecx 12h +
mov esi eax +
cmps   +
jz loc_40A53A  +
mov edi offset aShort +
mov ecx 6 +
mov esi eax +
cmps   +
jz loc_40A548  +
mov [esp+40h+var_3C] offset aUnsignedShort +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_28] eax +
call strcmp  +
mov edx [esp+40h+var_28] +
test eax eax +
jz loc_40A56F  +
mov [esp+40h+var_40] edx +
mov [esp+40h+var_3C] offset aVoid +
mov [esp+40h+var_28] edx +
call strcmp  +
mov edx [esp+40h+var_28] +
test eax eax +
jz loc_40A579  +
mov [esp+40h+var_40] edx +
mov [esp+40h+var_3C] offset aWchar_t +
mov [esp+40h+var_28] edx +
call strcmp  +
mov edx [esp+40h+var_28] +
test eax eax +
jz loc_40A505  +
mov [esp+40h+var_40] edx +
mov [esp+40h+var_3C] offset aLongLong +
call strcmp  +
mov edx [esp+40h+var_28] +
test eax eax +
jz loc_40A5BD  +
mov [esp+40h+var_40] edx +
mov [esp+40h+var_3C] offset aUnsignedLongLo +
mov [esp+40h+var_28] edx +
call strcmp  +
mov edx [esp+40h+var_28] +
test eax eax +
jz loc_40A617  +
mov [esp+40h+var_40] edx +
mov [esp+40h+var_3C] offset a____0 +
mov [esp+40h+var_28] edx +
call strcmp  +
mov edx [esp+40h+var_28] +
test eax eax +
jnz loc_40A5E0  +
test ebp ebp +
jz loc_40A58C  +
mov dword ptr [ebp+0] 1 +
xor ebp ebp +
jmp loc_40A372  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40A480  +
mov edx [esp+40h+var_24] +
mov eax ebx +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] 0 +
call sub_409EB0  +
mov edi eax +
test edi edi +
jz loc_40A3B0  +
mov ecx [esi+8] +
lea eax [esp+40h+var_14] +
mov edx [esp+40h+var_24] +
mov [esp+40h+var_40] eax +
mov eax ebx +
call sub_40A630  +
test eax eax +
jz loc_40A3B0  +
mov edx [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_34] edx +
call sub_4086E0  +
jmp loc_409F02  +
mov eax [esp+40h+arg_0] +
mov edi [esp+40h+var_24] +
mov ecx [esi+4] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] eax +
mov eax ebx +
mov edx edi +
call sub_409EB0  +
test eax eax +
jz loc_40A3B0  +
mov ecx [esi+8] +
mov edx edi +
mov [esp+40h+var_40] eax +
mov eax ebx +
mov [esp+40h+var_3C] 0 +
call sub_409EB0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_3C] esi +
mov [esp+40h+var_34] eax +
mov [esp+40h+var_38] 14h +
mov [esp+40h+var_40] 3 +
call sub_481E90  +
test eax eax +
mov esi eax +
jz loc_40A450  +
mov [esp+40h+var_40] eax +
call strlen  +
mov edx [esp+40h+var_24] +
mov ecx esi +
mov [esp+40h+var_3C] 9 +
add edx 0D4h +
mov [esp+40h+var_40] eax +
mov eax ebx +
call sub_409DB0  +
mov [esp+40h+var_40] esi +
mov ebp eax +
call free  +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+40h+arg_0] +
test eax eax +
jz loc_409EE0  +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_3C] eax +
call sub_4091F0  +
test eax eax +
mov edi eax +
jz loc_409EE0  +
mov eax [eax] +
test eax eax +
jnz loc_40A2CE  +
jmp loc_409EE0  +
add edi 4 +
mov eax [edi] +
test eax eax +
jz loc_409EE0  +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call sub_409230  +
test eax eax +
mov ebp eax +
jz loc_40A3B0  +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call sub_409080  +
test eax eax +
jz loc_40A2C1  +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_28] eax +
call strlen  +
mov edx [esp+40h+var_28] +
cmp eax [esi+8] +
jnz loc_40A2C1  +
mov [esp+40h+var_38] eax +
mov eax [esi+4] +
mov [esp+40h+var_40] edx +
mov [esp+40h+var_3C] eax +
call strncmp  +
test eax eax +
jnz loc_40A2C1  +
mov eax ebp +
jmp loc_409F02  +
mov [esp+40h+var_38] eax +
mov eax ds:_iob +
mov [esp+40h+var_3C] offset aUnrecognizedDe +
add eax 40h +
mov [esp+40h+var_40] eax +
call fprintf  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_28] edx +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] ebx +
call sub_408490  +
mov edx [esp+40h+var_28] +
mov ebp eax +
mov [esp+40h+var_40] edx +
call free  +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+40h+var_38] 24h +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] offset aCouldnTGetDema +
add eax 40h +
mov [esp+40h+var_34] eax +
call fwrite  +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call sub_408730  +
jmp loc_409F02  +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call sub_408920  +
jmp loc_409F02  +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call sub_408950  +
jmp loc_409F02  +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call sub_408690  +
jmp loc_409F02  +
call abort  +
lea esi [esi+0] +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_28] eax +
call sub_4084C0  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_28] edx +
call sub_4084B0  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov eax ds:_iob +
mov [esp+40h+var_38] 23h +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] offset aFailedToPrintD +
add eax 40h +
mov [esp+40h+var_34] eax +
call fwrite  +
xor eax eax +
jmp loc_409F02  +
mov [esp+40h+var_40] ebx +
call sub_408480  +
mov edi eax +
jmp loc_40A19F  +
mov [esp+40h+var_3C] 4 +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_28] eax +
call sub_4084B0  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov [esp+40h+var_3C] 10h +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_28] eax +
call sub_4084B0  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov [esp+40h+var_28] edx +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] 4 +
mov [esp+40h+var_40] ebx +
call sub_408490  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov [esp+40h+var_28] eax +
mov [esp+40h+var_38] 1 +
jmp loc_40A35C  +
mov [esp+40h+var_28] edx +
mov [esp+40h+var_38] 1 +
jmp loc_40A4D9  +
mov [esp+40h+var_28] eax +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] 10h +
mov [esp+40h+var_40] ebx +
call sub_408490  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov [esp+40h+var_28] eax +
mov [esp+40h+var_38] 1 +
jmp loc_40A51F  +
mov [esp+40h+var_28] eax +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] 2 +
mov [esp+40h+var_40] ebx +
call sub_408490  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov [esp+40h+var_38] 1 +
jmp loc_40A554  +
mov [esp+40h+var_40] ebx +
call sub_408480  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov eax ds:_iob +
mov [esp+40h+var_38] 1Dh +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] offset aUnexpectedDema +
add eax 40h +
mov [esp+40h+var_34] eax +
call fwrite  +
mov edx [esp+40h+var_28] +
jmp loc_40A372  +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] ebx +
call sub_408490  +
mov edx [esp+40h+var_28] +
mov ebp eax +
jmp loc_40A372  +
mov eax ds:_iob +
xor ebp ebp +
mov [esp+40h+var_38] 24h +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] offset aUnrecognized_0 +
add eax 40h +
mov [esp+40h+var_34] eax +
mov [esp+40h+var_28] edx +
call fwrite  +
mov edx [esp+40h+var_28] +
jmp loc_40A372  +
mov [esp+40h+var_38] 1 +
jmp loc_40A5C5  +
***
jmp sub_40A630  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov [esp+3Ch+var_3C] 28h +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_28] edx +
call sub_4742F0  +
test ebx ebx +
mov ebp eax +
mov eax [esp+3Ch+arg_0] +
mov dword ptr [eax] 0 +
jz loc_40A76B  +
cmp dword ptr [ebx] 2Eh +
jnz loc_40A725  +
mov ecx [ebx+4] +
xor esi esi +
test ecx ecx +
jz loc_40A713  +
mov edi 0Ah +
jmp loc_40A6A1  +
mov [ebp+esi*4+0] edx +
mov ebx [ebx+8] +
mov esi ecx +
test ebx ebx +
jz loc_40A710  +
cmp dword ptr [ebx] 2Eh +
jnz loc_40A725  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_40A710  +
lea eax [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_28] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_2C] +
mov [esp+3Ch+var_3C] 0 +
call sub_409EB0  +
test eax eax +
mov edx eax +
jz loc_40A6F4  +
lea ecx [esi+1] +
cmp ecx edi +
jb loc_40A680  +
add edi 0Ah +
mov [esp+3Ch+var_24] eax +
lea eax ds:0[edi*4] +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_20] ecx +
call sub_474370  +
mov ecx [esp+3Ch+var_20] +
mov edx [esp+3Ch+var_24] +
mov ebp eax +
jmp loc_40A680  +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_40A75F  +
mov eax [esp+3Ch+arg_0] +
mov dword ptr [eax] 1 +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_40A691  +
lea esi [esi+0] +
shl esi 2 +
mov dword ptr [ebp+esi+0] 0 +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+3Ch+var_34] 29h +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] offset aUnexpectedType +
add eax 40h +
mov [esp+3Ch+var_30] eax +
call fwrite  +
mov [esp+3Ch+var_3C] ebp +
call free  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] ebp +
call free  +
xor eax eax +
jmp loc_40A757  +
xor esi esi +
jmp loc_40A713  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov ebp [eax] +
mov [esp+20h+var_14] edx +
movsx ecx byte ptr [ebp+0] +
movzx eax cl +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_40A7FE  +
lea edx [ebp+1] +
xor ebx ebx +
lea eax [ebx+ebx*4] +
mov edi edx +
lea ebx [ecx+eax*2-30h] +
mov [esi] edx +
movsx ecx byte ptr [edx] +
add edx 1 +
movzx eax cl +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_40A795  +
mov [esp+20h+var_20] edi +
call strlen  +
cmp eax ebx +
jb loc_40A7D8  +
mov eax [esp+20h+var_14] +
test eax eax +
jz loc_40A7C9  +
mov [eax] edi +
add [esi] ebx +
add esp 1Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+20h+var_18] ebp +
mov [esp+20h+var_1C] offset aBadMangledName +
add eax 40h +
mov [esp+20h+var_20] eax +
call fprintf  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi ebp +
xor ebx ebx +
jmp loc_40A7BF  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov esi [edx] +
mov [esp+58h+var_38] eax +
movzx eax byte ptr [esi] +
lea edx [eax-41h] +
cmp dl 2Fh +
ja loc_40AC00  +
movzx edx dl +
jmp ds:off_498E88[edx*4]  +
lea eax [esi+1] +
mov [ebx] eax +
lea edx [esp+58h+var_20] +
mov eax ebx +
call sub_409410  +
test eax eax +
jz loc_40A865  +
mov edi [esp+58h+var_38] +
mov eax [esp+58h+var_20] +
cmp [edi+14h] eax +
ja loc_40B0F7  +
mov eax ds:_iob +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] offset aBadMangledName +
add eax 40h +
mov [esp+58h+var_58] eax +
call fprintf  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esi+1] +
mov [ebx] ecx +
movsx eax byte ptr [esi+1] +
test al al +
jz loc_40B1ED  +
cmp al 5Fh +
jz loc_40B1ED  +
movzx ecx al +
xor edi edi +
test ds:byte_4B8120[ecx+ecx] 4 +
lea edx [esi+2] +
jnz loc_40A8D4  +
jmp loc_40A8EE  +
test al al +
jz loc_40A8E6  +
movzx ecx al +
add edx 1 +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_40A8EE  +
lea ecx [edi+edi*4] +
lea edi [eax+ecx*2-30h] +
mov ecx edx +
mov [ebx] edx +
movsx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_40A8C0  +
cmp al 5Fh +
jz loc_40B121  +
mov eax ds:_iob +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] offset aBadMangledName +
add eax 40h +
mov [esp+58h+var_58] eax +
call fprintf  +
xor eax eax +
jmp loc_40AB5D  +
mov [esp+58h+var_24] 0 +
movzx eax byte ptr [esi] +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov byte ptr [esp+58h+var_34] al +
lea eax [esi+1] +
mov [ebx] eax +
movsx edx byte ptr [esi+1] +
movzx eax dl +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_40AC80  +
lea eax [esi+2] +
xor edi edi +
mov [esp+58h+var_30] esi +
lea ecx [edi+edi*4] +
mov esi eax +
lea edi [edx+ecx*2-30h] +
mov [ebx] eax +
movsx edx byte ptr [eax] +
add eax 1 +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_40A953  +
mov eax esi +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_2C] esi +
mov esi [esp+58h+var_30] +
call strlen  +
cmp eax edi +
jb loc_40A865  +
mov ecx [esp+58h+var_2C] +
mov eax ecx +
add eax edi +
test ebp ebp +
mov [ebx] eax +
jz loc_40A9CA  +
mov edx [esp+58h+var_38] +
mov eax [edx] +
mov edx [edx+4] +
mov [esp+58h+var_54] 9 +
mov [esp+58h+var_58] edi +
mov [esp+58h+var_30] edx +
add edx 0D4h +
call sub_409DB0  +
test eax eax +
mov [esp+58h+var_24] eax +
jz loc_40A881  +
mov eax [ebx] +
xor ecx ecx +
cmp byte ptr [esp+58h+var_34] 4Dh +
setz cl  +
mov edi ecx +
jnz loc_40AA23  +
movzx edx byte ptr [eax] +
cmp dl 43h +
jz loc_40B1DD  +
cmp dl 56h +
jz loc_40B1DD  +
cmp dl 46h +
jnz loc_40A865  +
add eax 1 +
test ebp ebp +
mov [ebx] eax +
jz loc_40B220  +
lea eax [esp+58h+var_1C] +
lea ecx [esp+58h+var_20] +
mov [esp+58h+var_58] eax +
mov eax [esp+58h+var_38] +
mov edx ebx +
call sub_40BBB0  +
test eax eax +
jz loc_40A881  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_40A865  +
add eax 1 +
mov ecx ebp +
mov [ebx] eax +
mov eax [esp+58h+var_38] +
mov edx ebx +
call sub_40A810  +
test eax eax +
jz loc_40A881  +
test ebp ebp +
jz loc_40AA72  +
mov eax [esp+58h+var_38] +
test edi edi +
mov edx [ebp+0] +
mov eax [eax] +
jnz loc_40B1F4  +
mov [esp+58h+var_50] edx +
mov edx [esp+58h+var_24] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_54] edx +
call sub_408870  +
mov [ebp+0] eax +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_38] +
add esi 1 +
mov edx ebx +
mov [ebx] esi +
call sub_40A810  +
test eax eax +
jz loc_40A881  +
test ebp ebp +
jz loc_40AA72  +
mov eax [esp+58h+var_38] +
mov edx [ebp+0] +
mov eax [eax] +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call sub_408690  +
mov [ebp+0] eax +
mov eax 1 +
jmp loc_40AB5D  +
lea eax [esi+1] +
xor edx edx +
mov [ebx] eax +
test ebp ebp +
lea eax [esp+58h+var_1C] +
cmovz eax edx +
mov [esp+58h+var_58] eax +
mov eax [esp+58h+var_38] +
lea ecx [esp+58h+var_20] +
cmovz ecx edx +
mov edx ebx +
call sub_40BBB0  +
test eax eax +
jz loc_40A881  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_40A865  +
mov esi [esp+58h+var_38] +
add eax 1 +
mov ecx ebp +
mov [ebx] eax +
mov edx ebx +
mov eax esi +
call sub_40A810  +
test eax eax +
jz loc_40A881  +
test ebp ebp +
jz loc_40AA72  +
mov ecx [esp+58h+var_1C] +
mov edx [ebp+0] +
mov eax [esi] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+var_20] +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_50] ecx +
call sub_4086E0  +
mov [ebp+0] eax +
jmp loc_40AA72  +
mov eax [esp+58h+var_38] +
add esi 1 +
mov edx ebx +
mov [ebx] esi +
call sub_40A810  +
test eax eax +
setnz al  +
movzx eax al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_38] +
mov edx ebx +
call sub_40B7B0  +
test eax eax +
setnz al  +
add esp 4Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+58h+var_38] +
add esi 1 +
mov edx ebx +
mov [ebx] esi +
mov eax edi +
call sub_40A810  +
test eax eax +
jz loc_40A881  +
test ebp ebp +
jz loc_40AA72  +
mov edx [ebp+0] +
mov eax [edi] +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call sub_408730  +
mov [ebp+0] eax +
mov eax 1 +
jmp loc_40AB5D  +
mov edi [esp+58h+var_38] +
add esi 1 +
mov edx ebx +
mov [ebx] esi +
mov eax edi +
call sub_40A810  +
test eax eax +
jz loc_40A881  +
test ebp ebp +
jz loc_40AA72  +
mov edx [ebp+0] +
mov eax [edi] +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call sub_408920  +
mov [ebp+0] eax +
mov eax 1 +
jmp loc_40AB5D  +
mov edx esi +
xor ecx ecx +
mov [esp+58h+var_30] 0 +
xor edi edi +
mov [esp+58h+var_34] 0 +
jmp loc_40AC30  +
cmp al 55h +
jz loc_40AC70  +
cmp al 56h +
jnz loc_40AC60  +
lea eax [edx+1] +
mov edi 1 +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
mov edx [ebx] +
cmp al 53h +
jz loc_40AC50  +
jg loc_40AC18  +
cmp al 43h +
jnz loc_40AC60  +
lea eax [edx+1] +
mov [ebx] eax +
mov [esp+58h+var_34] 1 +
jmp loc_40AC2A  +
lea eax [edx+1] +
mov ecx 1 +
mov [ebx] eax +
jmp loc_40AC2A  +
cmp al 78h +
ja loc_40A865  +
jmp ds:off_498F48[eax*4]  +
lea eax [edx+1] +
mov [ebx] eax +
mov [esp+58h+var_30] 1 +
jmp loc_40AC2A  +
cmp dl 51h +
jnz loc_40A865  +
lea eax [esp+58h+var_24] +
xor ecx ecx +
test ebp ebp +
mov edx ebx +
cmovnz ecx eax +
mov eax [esp+58h+var_38] +
call sub_40B7B0  +
test eax eax +
jnz loc_40A9C8  +
xor eax eax +
jmp loc_40A883  +
lea eax [edx+1] +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_40A865  +
lea edx [esp+58h+var_1C] +
mov eax ebx +
call sub_40A770  +
test eax eax +
jz loc_40A881  +
test ebp ebp +
jz loc_40AA72  +
mov eax [esp+58h+var_1C] +
mov edx [ebx] +
sub edx eax +
call sub_409500  +
mov esi eax +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
mov [ebp+0] eax +
mov [esp+58h+var_58] esi +
call free  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_40B24C  +
lea esi [esi+0] +
test ebp ebp +
jz loc_40AA72  +
mov eax [esp+58h+var_34] +
test eax eax +
jnz loc_40B1C0  +
test edi edi +
jz loc_40AA72  +
mov eax [esp+58h+var_38] +
mov edx [ebp+0] +
mov eax [eax] +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call sub_408950  +
mov [ebp+0] eax +
jmp loc_40AA72  +
mov eax ds:_iob +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] offset aBadMangledName +
add eax 40h +
mov [esp+58h+var_58] eax +
call fprintf  +
jmp loc_40AD20  +
test ebp ebp +
jz loc_40ADB6  +
mov edx [esp+58h+var_30] +
mov eax offset aLongLongUnsign +
mov esi [esp+58h+var_38] +
test edx edx +
mov edx offset aLongLongInt +
cmovz eax edx +
mov edx [esi] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] edx +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jz loc_40B199  +
mov edx [ebx] +
add edx 1 +
mov [ebx] edx +
jmp loc_40AD20  +
test ebp ebp +
jz loc_40ADB6  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] offset a__wchar_t +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_50] 1 +
mov [esp+58h+var_54] 2 +
mov [esp+58h+var_58] eax +
call sub_408490  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
test ebp ebp +
jz loc_40B28F  +
mov eax [esp+58h+var_38] +
lea ecx [esp+58h+var_1C] +
mov edx ebx +
call sub_40B2B0  +
test eax eax +
jz loc_40A881  +
mov ebx [esp+58h+var_1C] +
mov [esp+58h+var_58] ebx +
call strlen  +
mov esi [esp+58h+var_38] +
mov ecx [esi] +
mov esi [esi+4] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_54] 9 +
mov [esp+58h+var_30] ecx +
mov eax [esp+58h+var_30] +
mov ecx ebx +
lea edx [esi+0D4h] +
mov [esp+58h+var_2C] esi +
call sub_409DB0  +
mov [ebp+0] eax +
mov eax [esp+58h+var_1C] +
mov [esp+58h+var_58] eax +
call free  +
mov edx [ebp+0] +
test edx edx +
jnz loc_40AD20  +
xor eax eax +
jmp loc_40A883  +
test ebp ebp +
jz loc_40ADB6  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] offset aVoid +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_58] eax +
call sub_408480  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
test ebp ebp +
jz loc_40ADB6  +
mov edx [esp+58h+var_30] +
mov eax offset aShortUnsignedI +
mov esi [esp+58h+var_38] +
test edx edx +
mov edx offset aShortInt +
cmovz eax edx +
mov edx [esi] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] edx +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov esi [esp+58h+var_30] +
mov eax [eax] +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] 2 +
mov [esp+58h+var_58] eax +
call sub_408490  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
test ebp ebp +
jz loc_40ADB6  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] offset aLongDouble +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] 8 +
mov [esp+58h+var_58] eax +
call sub_4084B0  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
test ebp ebp +
jz loc_40ADB6  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] offset aDouble +
jmp loc_40AF36  +
test ebp ebp +
jz loc_40ADB6  +
mov ecx [esp+58h+var_30] +
mov eax offset aUnsignedInt +
mov edx offset aInt +
test ecx ecx +
mov esi [esp+58h+var_38] +
cmovz eax edx +
mov edx [esi] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] edx +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov esi [esp+58h+var_30] +
mov eax [eax] +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] 4 +
mov [esp+58h+var_58] eax +
call sub_408490  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
test ebp ebp +
jz loc_40ADB6  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] offset aFloat +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] 4 +
mov [esp+58h+var_58] eax +
call sub_4084B0  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
test ebp ebp +
jz loc_40ADB6  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] offset aBool +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_54] 4 +
mov [esp+58h+var_58] eax +
call sub_4084C0  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
test ebp ebp +
jz loc_40ADB6  +
mov esi [esp+58h+var_30] +
mov eax offset aLongUnsignedIn +
mov edx offset aLongInt +
test esi esi +
jmp loc_40AF98  +
test ebp ebp +
jz loc_40ADB6  +
mov esi [esp+58h+var_30] +
mov eax offset aUnsignedChar +
test esi esi +
jnz loc_40B0B4  +
mov eax offset aSignedChar_0 +
test ecx ecx +
mov edx offset aChar +
cmovz eax edx +
mov esi [esp+58h+var_38] +
mov edx [esi] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] edx +
call sub_408EC0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov esi [esp+58h+var_30] +
mov eax [eax] +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] 1 +
mov [esp+58h+var_58] eax +
call sub_408490  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
mov esi [esp+58h+var_38] +
mov ecx ebp +
mov edx [esi+10h] +
mov eax [edx+eax*8] +
lea edx [esp+58h+var_1C] +
mov [esp+58h+var_1C] eax +
mov eax esi +
call sub_40A810  +
test eax eax +
jnz loc_40AA72  +
xor eax eax +
jmp loc_40A883  +
mov esi [esp+58h+var_38] +
add ecx 1 +
mov edx ebx +
mov [ebx] ecx +
mov ecx ebp +
mov eax esi +
call sub_40A810  +
test eax eax +
jz loc_40A881  +
test ebp ebp +
jz loc_40AA72  +
mov eax [esi] +
mov [esp+58h+var_54] offset aInt +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
test eax eax +
jz loc_40B229  +
mov esi [esp+58h+var_38] +
mov ecx [ebp+0] +
mov edx [esi] +
mov [esp+58h+var_44] 0 +
mov [esp+58h+var_48] edi +
mov [esp+58h+var_4C] 0 +
mov [esp+58h+var_50] eax +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] edx +
call sub_4087B0  +
mov [ebp+0] eax +
mov eax 1 +
jmp loc_40AB5D  +
mov eax [esp+58h+var_38] +
mov esi [esp+58h+var_30] +
mov eax [eax] +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] 8 +
mov [esp+58h+var_58] eax +
call sub_408490  +
mov [ebp+0] eax +
jmp loc_40ADB4  +
mov eax [esp+58h+var_38] +
mov edx [ebp+0] +
mov eax [eax] +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call sub_408920  +
mov [ebp+0] eax +
jmp loc_40AD34  +
lea ecx [eax+1] +
mov [ebx] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_40A9ED  +
xor edi edi +
jmp loc_40A8E6  +
mov ecx [esp+58h+var_1C] +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_48] ecx +
mov ecx [esp+58h+var_20] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+var_24] +
mov [esp+58h+var_50] ecx +
call sub_4088C0  +
mov [ebp+0] eax +
jmp loc_40AA72  +
xor eax eax +
xor ecx ecx +
jmp loc_40AA0B  +
mov eax [esp+58h+var_38] +
mov eax [eax] +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] 4 +
mov [esp+58h+var_58] eax +
call sub_408490  +
jmp loc_40B15F  +
mov eax [esp+58h+var_38] +
mov ecx [esp+58h+var_1C] +
mov esi [eax] +
mov edx [eax+4] +
mov [esp+58h+var_54] 0 +
mov eax [ebx] +
mov [esp+58h+var_30] esi +
mov [esp+58h+var_2C] edx +
add edx 0D4h +
sub eax ecx +
mov [esp+58h+var_58] eax +
mov eax esi +
call sub_409DB0  +
test eax eax +
mov [ebp+0] eax +
jnz loc_40AD20  +
xor eax eax +
jmp loc_40A883  +
mov eax [esp+58h+var_38] +
xor ecx ecx +
mov edx ebx +
call sub_40B2B0  +
test eax eax +
jnz loc_40AA72  +
jmp loc_40A881  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [edx] +
mov [esp+58h+var_44] eax +
mov [esp+58h+var_40] ecx +
lea eax [edi+1] +
mov [edx] eax +
movsx edx byte ptr [edi+1] +
movzx eax dl +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_40B562  +
lea eax [edi+2] +
xor ebx ebx +
lea ecx [ebx+ebx*4] +
mov esi eax +
lea ebx [edx+ecx*2-30h] +
mov [ebp+0] eax +
movsx edx byte ptr [eax] +
add eax 1 +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_40B2E2  +
test ebx ebx +
mov [esp+58h+var_1C] ebx +
jz loc_40B315  +
mov [esp+58h+var_58] esi +
call strlen  +
cmp eax ebx +
jnb loc_40B340  +
mov eax ds:_iob +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] offset aBadMangledName +
add eax 40h +
mov [esp+58h+var_58] eax +
call fprintf  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx esi +
mov eax ebp +
mov [ebp+0] ebx +
lea edx [esp+58h+var_1C] +
call sub_409410  +
test eax eax +
jz loc_40B315  +
mov eax [esp+58h+var_1C] +
test eax eax +
jz loc_40B4B2  +
xor esi esi +
mov [esp+58h+var_2C] edi +
mov ebx [ebp+0] +
cmp byte ptr [ebx] 5Ah +
jz loc_40B486  +
mov eax [esp+58h+var_44] +
xor ecx ecx +
mov edx ebp +
call sub_40A810  +
test eax eax +
jz loc_40B331  +
movzx edx byte ptr [ebx] +
xor ecx ecx +
xor edi edi +
mov [esp+58h+var_34] 0 +
mov [esp+58h+var_30] 0 +
mov [esp+58h+var_38] 0 +
mov [esp+58h+var_3C] 0 +
test dl dl +
jz loc_40B3E8  +
test ecx ecx +
jnz loc_40B3E8  +
lea eax [edx-43h] +
cmp al 33h +
ja loc_40B453  +
movzx eax al +
jmp ds:off_49914C[eax*4]  +
call abort  +
lea esi [esi+0] +
mov ecx 1 +
mov [esp+58h+var_38] 1 +
jmp loc_40B3AA  +
mov [esp+58h+var_3C] 1 +
test edi edi +
jnz loc_40B56F  +
mov ebx [esp+58h+var_30] +
test ebx ebx +
jz loc_40B5AA  +
mov eax [ebp+0] +
movsx ecx byte ptr [eax] +
cmp cl 6Dh +
jz loc_40B725  +
movzx edx cl +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_40B43E  +
add eax 1 +
xor edx edx +
lea edx [edx+edx*4] +
mov [ebp+0] eax +
lea edx [ecx+edx*2-30h] +
movsx ecx byte ptr [eax] +
add eax 1 +
movzx ebx cl +
test ds:byte_4B8120[ebx+ebx] 4 +
jnz loc_40B41D  +
test edx edx +
jnz loc_40B4A1  +
mov edi [esp+58h+var_2C] +
jmp loc_40B315  +
movzx edx byte ptr [ebx+1] +
add ebx 1 +
jmp loc_40B3AA  +
mov ecx 1 +
mov edi 1 +
jmp loc_40B3AA  +
mov ecx 1 +
mov [esp+58h+var_30] 1 +
jmp loc_40B3AA  +
mov ecx 1 +
mov [esp+58h+var_34] 1 +
jmp loc_40B3AA  +
mov eax [esp+58h+var_44] +
add ebx 1 +
xor ecx ecx +
mov [ebp+0] ebx +
mov edx ebp +
call sub_40A810  +
test eax eax +
jz loc_40B331  +
add esi 1 +
cmp [esp+58h+var_1C] esi +
ja loc_40B366  +
mov edi [esp+58h+var_2C] +
mov esi [esp+58h+var_40] +
test esi esi +
jz loc_40B619  +
mov edx [ebp+0] +
mov eax edi +
sub edx edi +
call sub_409500  +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_58] offset aNosuchstring__ +
mov [esp+58h+var_54] eax +
mov ebx eax +
call sub_4758B0  +
mov [esp+58h+var_58] ebx +
mov esi eax +
call free  +
mov [esp+58h+var_54] 2 +
mov [esp+58h+var_58] esi +
call sub_4831E0  +
mov [esp+58h+var_58] esi +
mov ebx eax +
call free  +
test ebx ebx +
jz loc_40B315  +
mov [esp+58h+var_54] offset aNosuchstring +
mov [esp+58h+var_58] ebx +
call strstr  +
test eax eax +
mov esi eax +
jz loc_40B736  +
cmp ebx eax +
jz loc_40B79C  +
mov ecx ebx +
mov edx ebx +
jmp loc_40B548  +
mov [ecx] al +
add ecx 1 +
add edx 1 +
cmp edx esi +
jz loc_40B600  +
movzx eax byte ptr [edx] +
cmp al 20h +
jnz loc_40B538  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_40B53D  +
cmp ebx edx +
jnb loc_40B53D  +
cmp byte ptr [edx-1] 3Eh +
jnz loc_40B53D  +
nop   +
jmp loc_40B538  +
mov [esp+58h+var_1C] 0 +
jmp loc_40B315  +
mov eax [ebp+0] +
movzx edx byte ptr [eax] +
cmp dl 6Dh +
jz loc_40B623  +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_40B4A1  +
add eax 1 +
nop   +
mov edx eax +
mov [ebp+0] eax +
movzx edx byte ptr [edx] +
add eax 1 +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_40B590  +
jmp loc_40B4A1  +
mov ecx [esp+58h+var_34] +
test ecx ecx +
jz loc_40B634  +
mov eax [ebp+0] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_40B4A1  +
add eax 1 +
xor edx edx +
lea edx [edx+edx*4] +
mov [ebp+0] eax +
lea edx [ecx+edx*2-30h] +
movsx ecx byte ptr [eax] +
add eax 1 +
movzx ebx cl +
test ds:byte_4B8120[ebx+ebx] 4 +
jnz loc_40B5D2  +
cmp edx 1 +
jbe loc_40B4A1  +
jmp loc_40B43E  +
sub ecx ebx +
mov edx ecx +
mov eax ebx +
call sub_409500  +
mov edi [esp+58h+var_40] +
mov [edi] eax +
mov [esp+58h+var_58] ebx +
call free  +
mov eax 1 +
jmp loc_40B333  +
lea ecx [eax+1] +
mov [ebp+0] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_40B57E  +
mov edx [esp+58h+var_38] +
test edx edx +
jz loc_40B6CC  +
mov edx [ebp+0] +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jnz loc_40B657  +
lea eax [edx+1] +
mov [ebp+0] eax +
movzx ecx byte ptr [edx+1] +
mov edx eax +
movzx eax cl +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_40B67F  +
lea eax [edx+1] +
mov [ebp+0] eax +
movzx ecx byte ptr [eax] +
mov edx eax +
add eax 1 +
movzx ebx cl +
test ds:byte_4B8120[ebx+ebx] 4 +
jnz loc_40B667  +
cmp cl 2Eh +
jz loc_40B761  +
mov eax [ebp+0] +
movzx ecx byte ptr [eax] +
cmp cl 65h +
jnz loc_40B4A1  +
lea edx [eax+1] +
mov [ebp+0] edx +
movzx edx byte ptr [eax+1] +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_40B4A1  +
add eax 2 +
mov edx eax +
mov [ebp+0] eax +
movzx edx byte ptr [edx] +
add eax 1 +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_40B6B2  +
jmp loc_40B4A1  +
mov eax [esp+58h+var_3C] +
test eax eax +
jz loc_40B4A1  +
mov edx [ebp+0] +
movsx ecx byte ptr [edx] +
movzx eax cl +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_40B43E  +
add edx 1 +
xor eax eax +
lea eax [eax+eax*4] +
mov edi edx +
mov [ebp+0] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
movzx ebx cl +
test ds:byte_4B8120[ebx+ebx] 4 +
jnz loc_40B6F4  +
test eax eax +
jz loc_40B43E  +
add eax edi +
mov [ebp+0] eax +
jmp loc_40B4A1  +
lea edx [eax+1] +
mov [ebp+0] edx +
movsx ecx byte ptr [eax+1] +
mov eax edx +
jmp loc_40B40B  +
mov eax ds:_iob +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] offset aBadMangledName +
add eax 40h +
mov [esp+58h+var_58] eax +
call fprintf  +
mov [esp+58h+var_58] ebx +
call free  +
xor eax eax +
jmp loc_40B333  +
lea eax [edx+1] +
mov [ebp+0] eax +
movzx ecx byte ptr [edx+1] +
movzx ebx cl +
test ds:byte_4B8120[ebx+ebx] 4 +
jz loc_40B68E  +
add edx 2 +
mov [ebp+0] edx +
movzx ecx byte ptr [edx] +
mov eax edx +
lea edx [edx+1] +
movzx ebx cl +
test ds:byte_4B8120[ebx+ebx] 4 +
jnz loc_40B77F  +
jmp loc_40B68E  +
xor edx edx +
jmp loc_40B604  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [edx] +
mov [esp+58h+var_40] edx +
mov [esp+58h+var_38] ecx +
mov edi eax +
mov [esp+58h+var_30] eax +
movsx eax byte ptr [eax+1] +
cmp al 31h +
jl loc_40B835  +
cmp al 39h +
jle loc_40B860  +
cmp al 5Fh +
jnz loc_40B835  +
movzx eax byte ptr [edi+2] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_40B835  +
cmp al 30h +
jz loc_40B835  +
mov edi [esp+58h+var_30] +
lea ebx [edi+2] +
mov [esp+58h+var_58] ebx +
call atoi  +
movzx edx byte ptr [edi+2] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_40B825  +
add ebx 1 +
movzx edx byte ptr [ebx] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_40B812  +
cmp dl 5Fh +
jnz loc_40B835  +
mov edi [esp+58h+var_40] +
add ebx 1 +
mov [edi] ebx +
jmp loc_40B87A  +
mov eax [esp+58h+var_30] +
mov [esp+58h+var_54] offset aBadMangledName +
mov [esp+58h+var_50] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+58h+var_58] eax +
call fprintf  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+58h+var_30] +
xor edx edx +
sub eax 30h +
cmp byte ptr [edi+2] 5Fh +
setz dl  +
lea edx [edi+edx+2] +
mov edi [esp+58h+var_40] +
mov [edi] edx +
sub eax 1 +
xor esi esi +
mov [esp+58h+var_3C] eax +
cmp [esp+58h+var_3C] 0FFFFFFFFh +
jz loc_40BA84  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_40BA24  +
cmp dl 74h +
jz loc_40B9C2  +
movzx ecx dl +
add eax 1 +
xor ebx ebx +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_40B8F5  +
mov [esp+58h+var_34] esi +
mov esi [esp+58h+var_40] +
lea ecx [ebx+ebx*4] +
mov edi eax +
lea ebx [edx+ecx*2-30h] +
mov [esi] eax +
movsx edx byte ptr [eax] +
add eax 1 +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_40B8C3  +
mov [esp+58h+var_58] edi +
mov esi [esp+58h+var_34] +
call strlen  +
cmp eax ebx +
jb loc_40B835  +
mov edx [esp+58h+var_38] +
test edx edx +
jz loc_40B9B2  +
test esi esi +
jz loc_40BA48  +
mov eax [ebp+0] +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_58] eax +
call sub_4091F0  +
test eax eax +
mov edi eax +
jz loc_40BA48  +
mov eax [esp+58h+var_40] +
mov edx ebx +
mov eax [eax] +
call sub_409500  +
mov esi eax +
mov [esp+58h+var_34] eax +
mov eax [edi] +
test eax eax +
jz loc_40BA3C  +
mov [esp+58h+var_2C] ebx +
mov ebx esi +
jmp loc_40B977  +
mov eax [ebp+0] +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_58] eax +
call sub_409080  +
test eax eax +
jz loc_40B96A  +
mov [esp+58h+var_54] ebx +
mov [esp+58h+var_58] eax +
call strcmp  +
test eax eax +
jz loc_40B9A2  +
add edi 4 +
mov eax [edi] +
test eax eax +
jz loc_40BA38  +
mov edx [ebp+0] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] edx +
call sub_409230  +
test eax eax +
mov esi eax +
jnz loc_40B947  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_58] eax +
call free  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_34] +
mov ebx [esp+58h+var_2C] +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_40] +
add [eax] ebx +
sub [esp+58h+var_3C] 1 +
jmp loc_40B883  +
mov ecx [esp+58h+var_38] +
test ecx ecx +
jz loc_40BAA2  +
mov edx [esp+58h+var_40] +
lea ecx [esp+58h+var_1C] +
mov eax ebp +
call sub_40B2B0  +
test eax eax +
jz loc_40BA1D  +
mov ebx [esp+58h+var_1C] +
mov [esp+58h+var_58] ebx +
call strlen  +
mov edi [ebp+4] +
mov ecx ebx +
mov [esp+58h+var_54] 9 +
lea edx [edi+0D4h] +
mov [esp+58h+var_58] eax +
mov eax [ebp+0] +
call sub_409DB0  +
mov esi eax +
mov eax [esp+58h+var_1C] +
mov [esp+58h+var_58] eax +
call free  +
test esi esi +
jnz loc_40B9B8  +
xor eax eax +
jmp loc_40B857  +
mov edi [esp+58h+var_40] +
lea ecx [eax+1] +
mov [edi] ecx +
movsx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_40B8A0  +
mov ebx [esp+58h+var_2C] +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_3C] +
test eax eax +
jz loc_40BABE  +
mov eax 9 +
mov edi [esp+58h+var_40] +
mov ecx [edi] +
mov edi [ebp+4] +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] ebx +
mov eax [ebp+0] +
lea edx [edi+0D4h] +
call sub_409DB0  +
test eax eax +
mov esi eax +
jnz loc_40B9B2  +
xor eax eax +
jmp loc_40B857  +
mov eax [esp+58h+var_38] +
test eax eax +
jz loc_40BA98  +
mov [eax] esi +
mov eax 1 +
jmp loc_40B857  +
mov eax 1 +
jmp loc_40B857  +
mov edx [esp+58h+var_40] +
xor ecx ecx +
mov eax ebp +
call sub_40B2B0  +
test eax eax +
jnz loc_40B9B8  +
xor eax eax +
jmp loc_40B857  +
mov eax [esp+58h+var_40] +
mov edx ebx +
mov eax [eax] +
call sub_409500  +
mov edi eax +
mov eax [ebp+0] +
mov [esp+58h+var_54] edi +
mov [esp+58h+var_58] eax +
call sub_408EC0  +
mov [esp+58h+var_58] edi +
mov esi eax +
call free  +
test esi esi +
jnz loc_40B9B2  +
xor eax eax +
jmp loc_40BA55  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
xor ecx ecx +
sub esp 2Ch +
test esi esi +
mov ebp [edx] +
lea eax [esp+34h+var_18] +
mov ebx edx +
cmovnz ecx eax +
mov eax edi +
call sub_40A810  +
test eax eax +
jnz loc_40BB30  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx] +
mov edx ebp +
mov eax edi +
sub ecx ebp +
call sub_4094A0  +
test eax eax +
jz loc_40BB25  +
test esi esi +
jz loc_40BBA3  +
mov ebx [esp+34h+var_18] +
test ebx ebx +
jz loc_40BB25  +
mov eax [esp+34h+arg_0] +
mov edx [eax] +
mov eax [esp+34h+arg_4] +
lea ecx [edx+1] +
mov eax [eax] +
cmp ecx eax +
jnb loc_40BB78  +
mov eax [esi] +
mov [eax+edx*4] ebx +
mov eax [esp+34h+arg_0] +
mov [eax] ecx +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+34h+arg_4] +
add eax 0Ah +
mov edx [esi] +
mov [edi] eax +
shl eax 2 +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_30] eax +
call sub_474370  +
mov ebx [esp+34h+var_18] +
mov [esi] eax +
mov esi [esp+34h+arg_0] +
mov edx [esi] +
lea ecx [edx+1] +
jmp loc_40BB62  +
mov eax 1 +
jmp loc_40BB27  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [edx] +
test ecx ecx +
mov [esp+54h+var_3C] edx +
mov [esp+54h+var_28] 0Ah +
mov [esp+54h+var_38] eax +
mov edx eax +
jz loc_40BBEF  +
mov [esp+54h+var_54] 28h +
call sub_4742F0  +
mov [esi] eax +
mov eax [esp+54h+arg_0] +
mov edx [edi] +
mov dword ptr [eax] 0 +
mov [esp+54h+var_24] 0 +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_40BD1A  +
test al al +
jz loc_40BD1A  +
cmp al 65h +
jz loc_40BD40  +
cmp al 54h +
setz cl  +
jnz loc_40BCB0  +
mov eax [esp+54h+var_3C] +
add edx 1 +
test cl cl +
mov [eax] edx +
jz loc_40BCE3  +
mov [esp+54h+var_20] 1 +
mov eax [esp+54h+var_3C] +
lea edx [esp+54h+var_1C] +
call sub_409410  +
test eax eax +
jz loc_40BCF8  +
mov eax [esp+54h+var_1C] +
cmp [ebx+14h] eax +
jbe loc_40BCF8  +
mov edx [esp+54h+var_20] +
lea ebp [esp+54h+var_28] +
lea edi [esp+54h+var_24] +
lea ecx [edx-1] +
test edx edx +
mov [esp+54h+var_20] ecx +
jnz loc_40BC84  +
jmp loc_40BCD8  +
mov eax [esp+54h+var_20] +
lea edx [eax-1] +
test eax eax +
mov [esp+54h+var_20] edx +
jz loc_40BCD8  +
mov eax [esp+54h+var_1C] +
mov edx [ebx+10h] +
mov ecx esi +
mov eax [edx+eax*8] +
lea edx [esp+54h+var_18] +
mov [esp+54h+var_50] ebp +
mov [esp+54h+var_54] edi +
mov [esp+54h+var_18] eax +
mov eax ebx +
call sub_40BB00  +
test eax eax +
jnz loc_40BC71  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jz loc_40BC1D  +
mov edx [esp+54h+var_3C] +
lea ebp [esp+54h+var_28] +
mov ecx esi +
lea edi [esp+54h+var_24] +
mov eax ebx +
mov [esp+54h+var_50] ebp +
mov [esp+54h+var_54] edi +
call sub_40BB00  +
test eax eax +
jz loc_40BCA6  +
mov eax [esp+54h+var_3C] +
mov edx [eax] +
jmp loc_40BBF7  +
mov eax [esp+54h+var_3C] +
lea edx [esp+54h+var_20] +
call sub_409410  +
test eax eax +
jnz loc_40BC36  +
mov eax [esp+54h+var_38] +
mov [esp+54h+var_50] offset aBadMangledName +
mov [esp+54h+var_4C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+54h+var_54] eax +
call fprintf  +
jmp loc_40BCA6  +
test esi esi +
jz loc_40BD5B  +
mov eax [esi] +
mov edx [esp+54h+var_24] +
mov dword ptr [eax+edx*4] 0 +
mov eax [esp+54h+var_3C] +
mov edx [eax] +
cmp byte ptr [edx] 65h +
jz loc_40BD4F  +
mov eax 1 +
jmp loc_40BCA8  +
test esi esi +
jnz loc_40BD1E  +
mov eax [esp+54h+var_3C] +
add edx 1 +
mov [eax] edx +
jmp loc_40BD36  +
mov eax [esp+54h+arg_0] +
mov dword ptr [eax] 1 +
jmp loc_40BD44  +
cmp al 65h +
jnz loc_40BD36  +
jmp loc_40BD44  +
***
jmp sub_40BD70  +
***
push edi  +
mov ebp eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
mov [edx] ecx +
sub ecx ebx +
cmp ecx 4 +
jle loc_40BD97  +
mov edi offset aType +
mov ecx 4 +
mov esi ebx +
cmps   +
jz loc_40BDB0  +
cmp byte ptr [ebx] 5Fh +
mov eax 1 +
jz loc_40BDE0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+4] +
cmp al 2Eh +
jz loc_40BDBC  +
cmp al 24h +
jnz loc_40BD97  +
add ebx 5 +
xor ecx ecx +
mov eax ebp +
lea edx [esp+28h+var_1C] +
mov [esp+28h+var_1C] ebx +
call sub_40A810  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_40BDA1  +
cmp byte ptr [ebx+1] 5Fh +
jnz loc_40BDA1  +
cmp byte ptr [ebx+2] 6Fh +
jnz loc_40BDA1  +
cmp byte ptr [ebx+3] 70h +
jnz loc_40BDA1  +
add ebx 4 +
jmp loc_40BDBF  +
***
push esi  +
push ebx  +
sub esp 0DCh +
mov esi [esp+0DCh+arg_4] +
mov [esp+0DCh+var_B4] eax +
mov ebp [esp+0DCh+arg_0] +
mov [esp+0DCh+var_B8] edx +
mov [esp+0DCh+var_AC] ecx +
test esi esi +
jz loc_40BE2E  +
mov dword ptr [esi] 0 +
mov ebx [ebp+0] +
mov eax [esp+0DCh+var_B8] +
mov dword ptr [eax+0D8h] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_40BEA4  +
cmp al 28h +
jz loc_40BEA4  +
cmp al 2Dh +
jz loc_40BEA4  +
mov [esp+0DCh+var_2C] 0FFFFFFFFh +
mov edi ebx +
xor esi esi +
mov [esp+0DCh+var_30] 0FFFFFFFFh +
movzx eax byte ptr [ebx] +
mov [esp+0DCh+var_B0] 0FFFFFFFFh +
mov byte ptr [esp+0DCh+var_A8] al +
lea eax [edi+1] +
mov [esp+0DCh+var_A4] eax +
mov [ebp+0] eax +
movzx eax byte ptr [esp+0DCh+var_A8] +
sub eax 23h +
cmp al 55h +
ja loc_40BFC7  +
movzx eax al +
jmp ds:off_49943C[eax*4]  +
lea edx [esp+0DCh+var_30] +
mov eax ebp +
call sub_4095E0  +
test eax eax +
jz loc_40BFE3  +
mov edi [ebp+0] +
cmp byte ptr [edi] 3Dh +
jnz loc_40BFA0  +
test esi esi +
jz loc_40BEFB  +
mov eax [esp+0DCh+var_30] +
test eax eax +
js loc_40BEFB  +
mov ecx [esp+0DCh+var_2C] +
test ecx ecx +
js loc_40BEFB  +
mov eax [esp+0DCh+var_B8] +
lea ecx [esp+0DCh+var_30] +
lea edx [eax+48h] +
add eax 44h +
call sub_4097A0  +
mov [esi] eax +
mov edi [ebp+0] +
add edi 1 +
xor esi esi +
mov [ebp+0] edi +
mov [esp+0DCh+var_B0] 0FFFFFFFFh +
movzx eax byte ptr [edi] +
cmp al 40h +
jnz loc_40CBB9  +
movzx edx byte ptr [edi+1] +
lea eax [edi+1] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_40CA9D  +
cmp dl 28h +
jz loc_40CA9D  +
cmp dl 2Dh +
jnz loc_40BF4F  +
lea esi [esi+0] +
jmp loc_40CA9D  +
test dl dl +
jz loc_40BFC7  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 3Bh +
jnz loc_40BF45  +
add eax 1 +
mov [ebp+0] eax +
movzx edx byte ptr [edi+1] +
cmp dl 53h +
jz loc_40BFF2  +
cmp dl 73h +
jnz loc_40BF93  +
add edi 2 +
mov [esp+0DCh+var_DC] edi +
call atoi  +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
mov [esp+0DCh+var_B0] eax +
mov eax [ebp+0] +
sar [esp+0DCh+var_B0] 3 +
mov edx [esp+0DCh+var_B0] +
test edx edx +
jle loc_40BFFE  +
mov edi eax +
jmp loc_40BF0B  +
mov edx [esp+0DCh+var_B8] +
lea ecx [esp+0DCh+var_30] +
mov eax [esp+0DCh+var_B4] +
call sub_409910  +
mov ebx eax +
add esp 0DCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp-10h+arg_38] +
mov [esp-10h+arg_4] ebx +
mov eax ds:_iob +
mov [esp-10h+arg_0] offset aBadStabS +
add eax 40h +
mov [esp+0] eax +
call fprintf  +
xor ebx ebx +
add esp 0DCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi 1 +
mov edi eax +
jmp loc_40BF0B  +
mov [esp+0DCh+var_B0] 0FFFFFFFFh +
mov edi eax +
jmp loc_40BF0B  +
mov edi [esp+0DCh+var_B4] +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D8] eax +
call sub_408950  +
mov ebx eax +
test ebx ebx +
jz loc_40BFE3  +
cmp [esp+0DCh+var_30] 0FFFFFFFFh +
jz loc_40C065  +
mov eax [esp+0DCh+var_B8] +
lea ecx [esp+0DCh+var_30] +
lea edx [eax+48h] +
add eax 44h +
call sub_4097A0  +
test eax eax +
jz loc_40BFE3  +
mov [eax] ebx +
mov eax [esp+0DCh+var_B0] +
cmp eax 0FFFFFFFFh +
jz loc_40BFB6  +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_DC] eax +
call sub_408E70  +
test eax eax +
jz loc_40BFE3  +
add esp 0DCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edx edx +
mov eax ebp +
call sub_409540  +
mov edx [ebp+0] +
cmp byte ptr [edx] 3Bh +
mov ebx eax +
jnz loc_40CB11  +
xor edx edx +
mov eax ebp +
call sub_409540  +
mov edx [ebp+0] +
cmp byte ptr [edx] 3Bh +
jnz loc_40CB11  +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
sub ebx 3 +
cmp ebx 2 +
mov [esp+0DCh+var_DC] eax +
jbe loc_40CD85  +
call sub_4084B0  +
mov ebx eax +
jmp loc_40C037  +
mov edi [esp+0DCh+var_B4] +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
mov [esp+0DCh+var_D4] esi +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D8] eax +
call sub_408820  +
mov ebx eax +
jmp loc_40C037  +
cmp byte ptr [edi+1] 23h +
jz loc_40CD91  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov [esp+0DCh+var_A8] eax +
jz loc_40BFE3  +
mov eax [ebp+0] +
cmp byte ptr [eax] 2Ch +
jnz loc_40BFC7  +
add eax 1 +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov [ebp+0] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov [esp+0DCh+var_A4] eax +
jz loc_40BFE3  +
mov [esp+0DCh+var_DC] 28h +
xor edi edi +
call sub_4742F0  +
mov esi edi +
mov [esp+0DCh+var_AC] 0Ah +
mov [esp+0DCh+var_A0] ebx +
mov edi eax +
jmp loc_40C1CE  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
lea esi [edi+esi*4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov [esi] eax +
jz loc_40BFE3  +
mov esi ebx +
mov eax [ebp+0] +
movzx edx byte ptr [eax] +
cmp dl 3Bh +
jz loc_40CF91  +
cmp dl 2Ch +
jnz loc_40BFC3  +
add eax 1 +
lea ebx [esi+1] +
cmp [esp+0DCh+var_AC] ebx +
mov [ebp+0] eax +
ja loc_40C1A5  +
add [esp+0DCh+var_AC] 0Ah +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_DC] edi +
shl eax 2 +
mov [esp+0DCh+var_D8] eax +
call sub_474370  +
mov edi eax +
jmp loc_40C1A5  +
mov edi [esp+0DCh+var_B4] +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D8] eax +
call sub_408730  +
mov ebx eax +
jmp loc_40C037  +
mov [ebp+0] edi +
lea edx [esp+0DCh+var_28] +
mov eax ebp +
call sub_4095E0  +
test eax eax +
jz loc_40BFE3  +
mov eax [esp+0DCh+var_28] +
cmp [esp+0DCh+var_30] eax +
jnz loc_40C27D  +
mov eax [esp+0DCh+var_24] +
cmp [esp+0DCh+var_2C] eax +
jz loc_40DD97  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [ebp+0] edi +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov ebx eax +
jz loc_40BFE3  +
cmp [esp+0DCh+var_30] 0FFFFFFFFh +
jz loc_40C037  +
mov eax [esp+0DCh+var_B8] +
lea ecx [esp+0DCh+var_30] +
lea edx [eax+48h] +
add eax 44h +
call sub_4097A0  +
test eax eax +
jz loc_40BFE3  +
mov [eax] ebx +
jmp loc_40C037  +
mov edi [esp+0DCh+var_B4] +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D8] eax +
call sub_408690  +
mov ebx eax +
jmp loc_40C037  +
mov edi [esp+0DCh+var_B4] +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D8] eax +
call sub_408920  +
mov ebx eax +
jmp loc_40C037  +
lea eax [esp+0DCh+var_28] +
mov [esp+0DCh+var_94] eax +
mov edx eax +
mov eax ebp +
call sub_4095E0  +
test eax eax +
jz loc_40BFE3  +
mov eax [esp+0DCh+var_30] +
cmp [esp+0DCh+var_28] eax +
mov [esp+0DCh+var_9C] 0 +
jz loc_40CF36  +
mov esi [ebp+0] +
mov [esp+0DCh+var_A0] 0 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jz loc_40D0A0  +
cmp al 3Bh +
jz loc_40CF53  +
lea edx [esp+0DCh+var_38] +
mov eax ebp +
call sub_409540  +
mov [esp+0DCh+var_A8] eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jnz loc_40CB11  +
add eax 1 +
mov [esp+0DCh+var_98] eax +
lea edx [esp+0DCh+var_34] +
mov [ebp+0] eax +
mov eax ebp +
call sub_409540  +
mov ebx eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jnz loc_40CB11  +
add eax 1 +
mov [ebp+0] eax +
mov eax [esp+0DCh+var_38] +
test eax eax +
jnz loc_40C3EB  +
mov ecx [esp+0DCh+var_34] +
test ecx ecx +
jz loc_40C41F  +
mov edx [esp+0DCh+var_A0] +
test edx edx +
jz loc_40CFE3  +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_D4] offset aNumericOverflo +
mov [esp+0DCh+var_D8] offset aWarningSS +
mov [esp+0DCh+var_D0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [esp+0DCh+var_A0] +
test eax eax +
jz loc_40D0D8  +
mov esi [esp+0DCh+var_9C] +
test esi esi +
jnz loc_40CB11  +
mov ecx [esp+0DCh+var_94] +
mov edx [esp+0DCh+var_B8] +
mov eax [esp+0DCh+var_B4] +
call sub_409910  +
test eax eax +
jz loc_40DE5C  +
mov ecx [esp+0DCh+var_A8] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D0] ebx +
mov [esp+0DCh+var_D4] ecx +
mov [esp+0DCh+var_DC] eax +
call sub_408760  +
mov ebx eax +
jmp loc_40C037  +
cmp byte ptr [edi+1] 72h +
jnz loc_40BFC7  +
add edi 2 +
mov [ebp+0] edi +
lea edx [esp+0DCh+var_28] +
lea eax [esp+0DCh+var_34] +
mov [esp+0DCh+var_34] edi +
call sub_4095E0  +
test eax eax +
jz loc_40BFE3  +
mov eax [esp+0DCh+var_28] +
test eax eax +
jnz loc_40CB95  +
mov eax [esp+0DCh+var_24] +
test eax eax +
jnz loc_40CB95  +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Dh +
jz loc_40CB95  +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] offset aInt +
mov [esp+0DCh+var_DC] eax +
call sub_408EC0  +
test eax eax +
mov ebx eax +
jz loc_40E744  +
mov eax [esp+0DCh+var_34] +
mov [ebp+0] eax +
cmp byte ptr [eax] 3Bh +
jnz loc_40CD7B  +
lea edx [eax+1] +
mov [ebp+0] edx +
movzx edx byte ptr [eax+1] +
mov [esp+0DCh+var_AC] 0 +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_40C532  +
cmp dl 2Dh +
jz loc_40C532  +
add eax 2 +
mov [ebp+0] eax +
mov [esp+0DCh+var_AC] 1 +
xor edx edx +
mov eax ebp +
call sub_409540  +
mov [esp+0DCh+var_A8] eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jnz loc_40CD7B  +
lea edx [eax+1] +
mov [ebp+0] edx +
movzx edx byte ptr [eax+1] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_40C575  +
cmp dl 2Dh +
jz loc_40C575  +
add eax 2 +
mov [ebp+0] eax +
mov [esp+0DCh+var_AC] 1 +
xor edx edx +
mov eax ebp +
call sub_409540  +
mov [esp+0DCh+var_A4] eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jnz loc_40CD7B  +
mov edi [esp+0DCh+var_B4] +
add eax 1 +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [ebp+0] eax +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
test eax eax +
jz loc_40BFE3  +
mov ebp [esp+0DCh+var_AC] +
xor edx edx +
mov ecx 0FFFFFFFFh +
mov [esp+0DCh+var_D4] ebx +
mov [esp+0DCh+var_C8] esi +
mov [esp+0DCh+var_D8] eax +
test ebp ebp +
cmovz edx [esp+0DCh+var_A8] +
cmovz ecx [esp+0DCh+var_A4] +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D0] edx +
mov [esp+0DCh+var_CC] ecx +
call sub_4087B0  +
mov ebx eax +
jmp loc_40C037  +
movzx eax byte ptr [edi+1] +
cmp al 73h +
jz loc_40CD74  +
cmp al 75h +
jnz loc_40CB11  +
mov ebx 1 +
lea eax [edi+2] +
mov [ebp+0] eax +
movzx eax byte ptr [edi+2] +
lea edx [eax-62h] +
cmp dl 1 +
jbe loc_40C621  +
cmp al 76h +
jnz loc_40C627  +
add edi 3 +
mov [ebp+0] edi +
xor edx edx +
mov eax ebp +
call sub_409540  +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jnz loc_40CB11  +
add eax 1 +
xor edx edx +
mov [ebp+0] eax +
mov eax ebp +
call sub_409540  +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jnz loc_40CB11  +
add eax 1 +
xor edx edx +
mov [ebp+0] eax +
mov eax ebp +
call sub_409540  +
mov edx [ebp+0] +
cmp byte ptr [edx] 3Bh +
jz loc_40D095  +
test eax eax +
jz loc_40CFD0  +
mov [esp+0DCh+var_D4] ebx +
shr eax 3 +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
mov ebx eax +
jmp loc_40C037  +
xor edx edx +
mov eax ebp +
call sub_409540  +
mov esi [ebp+0] +
mov [esp+0DCh+var_78] 0 +
cmp byte ptr [esi] 21h +
mov [esp+0DCh+var_90] esi +
mov [esp+0DCh+var_58] eax +
jz loc_40CF5E  +
mov [esp+0DCh+var_DC] 28h +
xor esi esi +
call sub_4742F0  +
mov [esp+0DCh+var_5C] 0 +
mov [esp+0DCh+var_A0] 0Ah +
mov [esp+0DCh+var_A4] eax +
mov edi [ebp+0] +
movzx eax byte ptr [edi] +
cmp al 3Bh +
jz loc_40D19E  +
lea ebx [esi+1] +
cmp [esp+0DCh+var_A0] ebx +
jbe loc_40CB25  +
cmp al 2Eh +
jz loc_40C70C  +
cmp al 24h +
jnz loc_40C9DD  +
cmp byte ptr [edi+1] 5Fh +
jz loc_40C9DD  +
mov eax [esp+0DCh+var_A4] +
add dword ptr [ebp+0] 1 +
lea esi [eax+esi*4] +
mov dword ptr [esi] 0 +
mov edi [ebp+0] +
cmp byte ptr [edi] 76h +
jz loc_40CDFA  +
mov eax ds:_iob +
mov [esp+0DCh+var_D4] edi +
mov [esp+0DCh+var_D8] offset aBadStabS +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_DC] eax +
xor ebx ebx +
call free  +
jmp loc_40BFE5  +
movzx eax byte ptr [edi+1] +
mov [esp+0DCh+var_A8] 7 +
cmp al 73h +
jz loc_40C7BD  +
cmp al 75h +
mov [esp+0DCh+var_A8] 8 +
jz loc_40C7BD  +
cmp al 65h +
mov [esp+0DCh+var_A8] 0Bh +
jz loc_40C7BD  +
mov eax ds:_iob +
mov [esp+0DCh+var_D0] ebx +
mov [esp+0DCh+var_D4] offset aUnrecognizedCr +
mov [esp+0DCh+var_D8] offset aWarningSS +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [ebp+0] +
mov [esp+0DCh+var_A8] 7 +
mov [esp+0DCh+var_A4] eax +
mov edi [esp+0DCh+var_A4] +
add edi 1 +
mov [ebp+0] edi +
mov [esp+0DCh+var_D8] 3Ch +
mov [esp+0DCh+var_DC] edi +
call strchr  +
mov [esp+0DCh+var_D8] 3Ah +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_A4] eax +
call strchr  +
mov ecx [esp+0DCh+var_A4] +
test eax eax +
mov esi eax +
jz loc_40BFC7  +
cmp eax ecx +
jbe loc_40C80B  +
test ecx ecx +
jz loc_40C80B  +
cmp byte ptr [eax+1] 3Ah +
jz loc_40D054  +
mov eax [esp+0DCh+var_AC] +
mov ebx esi +
sub ebx edi +
test eax eax +
jz loc_40C847  +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_D4] ebx +
mov [esp+0DCh+var_D8] edi +
mov [esp+0DCh+var_DC] eax +
call strncmp  +
test eax eax +
jnz loc_40C847  +
mov eax [esp+0DCh+var_AC] +
cmp byte ptr [eax+ebx] 0 +
jnz loc_40C847  +
mov eax [esp+0DCh+var_B8] +
mov dword ptr [eax+0D8h] 1 +
mov eax [esp+0DCh+var_B8] +
mov ecx edi +
add esi 1 +
mov [esp+0DCh+var_DC] ebx +
lea edx [eax+0D4h] +
mov eax [esp+0DCh+var_A8] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
call sub_409DB0  +
mov [ebp+0] esi +
mov ebx eax +
jmp loc_40C037  +
cmp byte ptr [edi+1] 2Dh +
jz loc_40CF17  +
mov [esp+0DCh+var_DC] 28h +
call sub_4742F0  +
mov [esp+0DCh+var_DC] 28h +
mov [esp+0DCh+var_A8] eax +
call sub_4742F0  +
mov [esp+0DCh+var_AC] eax +
mov eax [ebp+0] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_40DD90  +
cmp dl 3Bh +
jz loc_40DD90  +
cmp dl 2Ch +
jz loc_40DD90  +
mov [esp+0DCh+var_A0] 0Ah +
xor ebx ebx +
cmp dl 3Ah +
mov esi eax +
jz loc_40CB1E  +
add esi 1 +
cmp byte ptr [esi] 3Ah +
jnz loc_40C8D3  +
mov edx esi +
sub edx eax +
call sub_409500  +
add esi 1 +
xor edx edx +
mov [ebp+0] esi +
mov edi eax +
mov eax ebp +
call sub_409540  +
mov edx eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 2Ch +
jnz loc_40CD2D  +
add eax 1 +
lea esi [ebx+1] +
cmp [esp+0DCh+var_A0] esi +
mov [ebp+0] eax +
jbe loc_40C990  +
mov eax [esp+0DCh+var_A8] +
add ebx 40000000h +
mov [eax+ebx*4] edi +
mov eax [esp+0DCh+var_AC] +
mov [eax+ebx*4] edx +
mov eax [ebp+0] +
movzx edx byte ptr [eax] +
cmp dl 3Bh +
jz loc_40CB4D  +
test dl dl +
jz loc_40CB4D  +
cmp dl 2Ch +
jz loc_40CB4D  +
mov ebx esi +
jmp loc_40C8C8  +
mov edi [esp+0DCh+var_B4] +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
mov [esp+0DCh+var_D0] 0 +
mov [esp+0DCh+var_D4] 0 +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D8] eax +
call sub_4086E0  +
mov ebx eax +
jmp loc_40C037  +
add [esp+0DCh+var_A0] 0Ah +
mov eax [esp+0DCh+var_A0] +
mov [esp+0DCh+var_98] edx +
lea ecx ds:0[eax*4] +
mov eax [esp+0DCh+var_A8] +
mov [esp+0DCh+var_D8] ecx +
mov [esp+0DCh+var_9C] ecx +
mov [esp+0DCh+var_DC] eax +
call sub_474370  +
mov ecx [esp+0DCh+var_9C] +
mov [esp+0DCh+var_D8] ecx +
mov [esp+0DCh+var_A8] eax +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_DC] eax +
call sub_474370  +
mov edx [esp+0DCh+var_98] +
mov [esp+0DCh+var_AC] eax +
jmp loc_40C912  +
mov [esp+0DCh+var_D8] 3Ah +
mov [esp+0DCh+var_DC] edi +
call strchr  +
test eax eax +
mov ecx eax +
jz loc_40DF13  +
cmp byte ptr [eax+1] 3Ah +
jz loc_40D19E  +
mov eax [esp+0DCh+var_A4] +
mov edx ecx +
xor edi edi +
mov [esp+0DCh+var_98] ecx +
lea eax [eax+esi*4] +
mov esi [ebp+0] +
mov [esp+0DCh+var_94] eax +
sub edx esi +
mov eax esi +
call sub_409500  +
mov ecx [esp+0DCh+var_98] +
mov [esp+0DCh+var_9C] eax +
lea eax [ecx+1] +
mov [ebp+0] eax +
cmp byte ptr [ecx+1] 2Fh +
jz loc_40CBC2  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov ecx eax +
jz loc_40CA8A  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 3Ah +
jz loc_40CCAC  +
cmp al 2Ch +
jz loc_40CC1B  +
mov eax ds:_iob +
mov [esp+0DCh+var_D4] esi +
mov [esp+0DCh+var_D8] offset aBadStabS +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [esp+0DCh+var_9C] +
xor ebx ebx +
mov [esp+0DCh+var_DC] eax +
call free  +
jmp loc_40BFE5  +
mov [ebp+0] eax +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov esi eax +
jz loc_40BFE3  +
mov eax [ebp+0] +
cmp byte ptr [eax] 2Ch +
jnz loc_40BFC7  +
mov edi [esp+0DCh+var_B4] +
add eax 1 +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [ebp+0] eax +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
mov eax edi +
call sub_40BE00  +
test eax eax +
jz loc_40BFE3  +
mov [esp+0DCh+var_D4] eax +
mov [esp+0DCh+var_D8] esi +
mov [esp+0DCh+var_DC] edi +
call sub_408870  +
mov ebx eax +
jmp loc_40C037  +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_D4] eax +
jmp loc_40BFCB  +
xor edx edx +
jmp loc_40C8DF  +
add [esp+0DCh+var_A0] 0Ah +
mov eax [esp+0DCh+var_A0] +
shl eax 2 +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_DC] eax +
call sub_474370  +
mov [esp+0DCh+var_A4] eax +
movzx eax byte ptr [edi] +
jmp loc_40C700  +
shl esi 2 +
mov eax [esp+0DCh+var_A8] +
mov dword ptr [eax+esi] 0 +
mov eax [esp+0DCh+var_AC] +
mov dword ptr [eax+esi] 0 +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jz loc_40CF86  +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_A8] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408650  +
mov ebx eax +
jmp loc_40C037  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
mov ebx eax +
mov eax [ebp+0] +
jmp loc_40C4F7  +
mov byte ptr [esp+0DCh+var_A8] al +
jmp loc_40BE80  +
lea eax [ecx+2] +
mov di 1 +
mov [ebp+0] eax +
movzx edx byte ptr [ecx+2] +
cmp dl 31h +
jz loc_40CC10  +
xor di di +
cmp dl 32h +
jz loc_40CC10  +
cmp dl 30h +
mov di 2 +
jz loc_40CC10  +
mov eax ds:_iob +
xor di di +
mov [esp+0DCh+var_D0] esi +
mov [esp+0DCh+var_D4] offset aUnknownVisibil +
mov [esp+0DCh+var_D8] offset aWarningSS +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [ebp+0] +
add eax 1 +
mov [ebp+0] eax +
jmp loc_40CA38  +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
xor edx edx +
mov [esp+0DCh+var_8C] ecx +
call sub_409540  +
mov ecx [esp+0DCh+var_8C] +
mov [esp+0DCh+var_98] eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 2Ch +
jnz loc_40CA6E  +
add eax 1 +
xor edx edx +
mov [ebp+0] eax +
mov eax ebp +
mov [esp+0DCh+var_8C] ecx +
call sub_409540  +
mov edx [ebp+0] +
mov ecx [esp+0DCh+var_8C] +
cmp byte ptr [edx] 3Bh +
jnz loc_40CA6E  +
add edx 1 +
mov [ebp+0] edx +
mov edx [esp+0DCh+var_98] +
mov [esp+0DCh+var_CC] eax +
mov [esp+0DCh+var_D4] ecx +
mov esi edx +
or esi eax +
mov eax [esp+0DCh+var_9C] +
mov esi 3 +
cmovz edi esi +
mov esi ebx +
mov [esp+0DCh+var_C8] edi +
mov [esp+0DCh+var_D0] edx +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_4089B0  +
mov ecx [esp+0DCh+var_94] +
mov [ecx] eax +
jmp loc_40C6E5  +
lea eax [edx+1] +
mov [ebp+0] eax +
mov [esp+0DCh+var_D8] 3Bh +
mov [esp+0DCh+var_DC] eax +
mov [esp+0DCh+var_8C] ecx +
mov [esp+0DCh+var_98] eax +
call strchr  +
mov ecx [esp+0DCh+var_8C] +
test eax eax +
jz loc_40CA6E  +
mov esi eax +
mov edx eax +
mov eax [esp+0DCh+var_98] +
mov [esp+0DCh+var_8C] ecx +
sub edx eax +
call sub_409500  +
mov edx esi +
mov ecx [esp+0DCh+var_8C] +
add edx 1 +
mov esi ebx +
mov [ebp+0] edx +
mov [esp+0DCh+var_CC] edi +
mov [esp+0DCh+var_D4] ecx +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408A50  +
mov ecx [esp+0DCh+var_94] +
mov [esp+0DCh+var_5C] 1 +
mov [ecx] eax +
jmp loc_40C6E5  +
mov eax [esp+0DCh+var_A4] +
xor ebx ebx +
mov [esp+0DCh+var_D8] offset aBadStabS +
mov [esp+0DCh+var_D4] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov [esp+0DCh+var_DC] edi +
call free  +
mov eax [esp+0DCh+var_A8] +
mov [esp+0DCh+var_DC] eax +
call free  +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_DC] eax +
call free  +
jmp loc_40BFE5  +
xor ebx ebx +
jmp loc_40C60B  +
mov [esp+0DCh+var_D4] edi +
nop   +
jmp loc_40BFCB  +
call sub_4084D0  +
mov ebx eax +
jmp loc_40C037  +
mov edx [esp+0DCh+var_B8] +
add edi 2 +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [ebp+0] edi +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
jz loc_40BFE3  +
mov edx [ebp+0] +
cmp byte ptr [edx] 3Bh +
jnz loc_40BFC7  +
add edx 1 +
mov [ebp+0] edx +
mov [esp+0DCh+var_CC] 0 +
mov [esp+0DCh+var_D0] 0 +
mov [esp+0DCh+var_D4] 0 +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_4088C0  +
mov ebx eax +
jmp loc_40C037  +
lea eax [edi+1] +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov [ebp+0] eax +
movzx eax byte ptr [edi+1] +
mov byte ptr [esp+0DCh+var_9C] al +
lea eax [edi+2] +
mov [ebp+0] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
jz loc_40C74F  +
movzx ecx byte ptr [esp+0DCh+var_9C] +
cmp cl 62h +
jz loc_40DA78  +
cmp cl 66h +
mov [esp+0DCh+var_9C] offset a_vptr +
jz loc_40CE77  +
mov eax ds:_iob +
mov [esp+0DCh+var_D0] edi +
mov [esp+0DCh+var_D4] offset aUnrecognizedCA +
mov [esp+0DCh+var_D8] offset aWarningSS +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov [esp+0DCh+var_9C] offset aInvalid_cplusp +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Ah +
jnz loc_40C733  +
add eax 1 +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov [ebp+0] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
mov ecx eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 2Ch +
jnz loc_40C733  +
add eax 1 +
xor edx edx +
mov [ebp+0] eax +
mov eax ebp +
mov [esp+0DCh+var_98] ecx +
call sub_409540  +
mov edx [ebp+0] +
mov ecx [esp+0DCh+var_98] +
cmp byte ptr [edx] 3Bh +
jnz loc_40C733  +
add edx 1 +
mov [ebp+0] edx +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_C8] 2 +
mov [esp+0DCh+var_CC] 0 +
mov [esp+0DCh+var_D4] ecx +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_4089B0  +
test eax eax +
mov [esi] eax +
jz loc_40C74F  +
mov esi ebx +
jmp loc_40C6E5  +
mov eax [esp+0DCh+var_A4] +
nop   +
lea esi [esi+0] +
add eax 1 +
mov [ebp+0] eax +
cmp byte ptr [eax] 3Ah +
jnz loc_40CF20  +
add eax 1 +
mov [ebp+0] eax +
jmp loc_40C87E  +
mov eax [esp+0DCh+var_2C] +
cmp [esp+0DCh+var_24] eax +
setz al  +
movzx eax al +
mov [esp+0DCh+var_9C] eax +
jmp loc_40C36D  +
add esi 1 +
mov [ebp+0] esi +
jmp loc_40C38B  +
lea eax [esi+1] +
xor edx edx +
mov [ebp+0] eax +
mov eax ebp +
call sub_409540  +
mov [esp+0DCh+var_A4] eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 2Ch +
jz loc_40DAB1  +
mov [esp+0DCh+var_D4] esi +
jmp loc_40BFCB  +
add eax 1 +
mov [ebp+0] eax +
jmp loc_40CB72  +
add eax 1 +
mov ebx 1 +
mov [ebp+0] eax +
xor eax eax +
test esi esi +
mov [esp+0DCh+var_AC] edi +
mov edi esi +
jnz loc_40DDDB  +
mov ecx [esp+0DCh+var_AC] +
mov dword ptr [ecx+eax] 0 +
mov eax [esp+0DCh+var_A8] +
mov [esp+0DCh+var_CC] ebx +
mov [esp+0DCh+var_D0] ecx +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_A4] +
jmp loc_40CDE3  +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408480  +
mov ebx eax +
jmp loc_40C037  +
mov edi offset a01000000000000 +
mov ecx 18h +
cmps   +
jnz loc_40D007  +
mov esi [esp+0DCh+var_98] +
mov edi offset a07777777777777 +
mov ecx 17h +
cmps   +
jz loc_40DF06  +
test eax eax +
jnz loc_40C3F7  +
mov eax [esp+0DCh+var_A8] +
test eax eax +
jnz loc_40C3F7  +
mov esi [esp+0DCh+var_98] +
mov edi offset a01777777777777 +
mov ecx 18h +
cmps   +
jnz loc_40C3F7  +
mov [esp+0DCh+var_D4] 1 +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 8 +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
mov ebx eax +
jmp loc_40C037  +
movzx eax byte ptr [ecx] +
test al al +
jz loc_40BFC7  +
xor edx edx +
jmp loc_40D079  +
cmp al 3Eh +
jz loc_40D082  +
cmp al 3Ah +
jz loc_40D087  +
add ecx 1 +
movzx eax byte ptr [ecx] +
test al al +
jz loc_40BFC7  +
cmp al 3Ch +
jnz loc_40D063  +
add edx 1 +
jmp loc_40D06B  +
sub edx 1 +
jmp loc_40D06B  +
test edx edx +
jnz loc_40D06B  +
mov esi ecx +
lea esi [esi+0] +
jmp loc_40C80B  +
add edx 1 +
mov [ebp+0] edx +
jmp loc_40C672  +
mov eax [esp+0DCh+var_A4] +
xor ecx ecx +
mov edx [esp+0DCh+var_B8] +
mov [ebp+0] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov [esp+0DCh+var_A0] eax +
jz loc_40BFE3  +
mov esi [ebp+0] +
movzx eax byte ptr [esi] +
jmp loc_40C383  +
mov eax [esp+0DCh+var_A8] +
movzx edx byte ptr [esp+0DCh+var_9C] +
and edx 1 +
test eax eax +
setz al  +
mov edi eax +
jz loc_40DD21  +
test ebx ebx +
setz al  +
mov ecx eax +
and cl dl +
jz loc_40E444  +
mov ebp [esp+0DCh+var_A8] +
mov eax ecx +
test ebp ebp +
jg loc_40DEEB  +
cmp ebx 0FFFFFFFFh +
mov ecx edi +
jnz loc_40DEDE  +
test cl cl +
jnz loc_40DEA5  +
test al al +
jz loc_40D143  +
mov eax [esp+0DCh+var_A8] +
shr eax 1Fh +
test al al +
jz loc_40D143  +
cmp [esp+0DCh+var_A8] 0FFFFFFF8h +
jz loc_40E7F0  +
test dl dl +
jnz loc_40E7F0  +
mov ecx [esp+0DCh+var_A8] +
mov eax ebx +
not eax  +
cmp ecx eax +
jz loc_40D15A  +
lea eax [ebx+1] +
cmp ecx eax +
jnz loc_40C42B  +
cmp ebx 7Fh +
jz loc_40E721  +
cmp ebx 7FFFh +
jz loc_40E714  +
cmp ebx 7FFFFFFFh +
jnz loc_40C42B  +
mov [esp+0DCh+var_D4] 0 +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 4 +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
mov ebx eax +
jmp loc_40C037  +
mov eax [esp+0DCh+var_A4] +
mov dword ptr [eax+esi*4] 0 +
mov ebx [ebp+0] +
movzx edx byte ptr [ebx] +
mov [esp+0DCh+var_74] ebx +
cmp dl 3Bh +
jz loc_40E3FB  +
mov [esp+0DCh+var_84] 0 +
mov edi edx +
mov [esp+0DCh+var_9C] 0 +
mov [esp+0DCh+var_A0] 0 +
mov [esp+0DCh+var_70] 0 +
mov [esp+0DCh+var_50] 0 +
mov [esp+0DCh+var_64] 0 +
mov [esp+0DCh+var_D8] 3Ah +
mov [esp+0DCh+var_DC] ebx +
call strchr  +
test eax eax +
mov esi eax +
jz loc_40E084  +
cmp byte ptr [eax+1] 3Ah +
jnz loc_40E084  +
mov eax edi +
cmp al 6Fh +
jnz loc_40D225  +
cmp byte ptr [ebx+1] 70h +
jz loc_40E79F  +
mov edx esi +
mov eax ebx +
sub edx ebx +
add esi 2 +
call sub_409500  +
mov [ebp+0] esi +
mov [esp+0DCh+var_9C] eax +
mov [esp+0DCh+var_DC] 28h +
xor edi edi +
call sub_4742F0  +
mov [esp+0DCh+var_98] 0 +
mov [esp+0DCh+var_6C] 0Ah +
mov [esp+0DCh+var_84] eax +
test edi edi +
jz loc_40DC88  +
mov eax [ebp+0] +
add eax 1 +
mov [ebp+0] eax +
mov [esp+0DCh+var_D8] 3Bh +
mov [esp+0DCh+var_DC] eax +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_40DCB8  +
mov eax [esp+0DCh+var_B4] +
xor esi esi +
mov [esp+0DCh+var_D8] edi +
mov [esp+0DCh+var_DC] eax +
call sub_409050  +
cmp eax 13h +
jz loc_40D95C  +
mov eax [ebp+0] +
mov edx ebx +
sub edx eax +
call sub_409500  +
mov [esp+0DCh+var_7C] 2 +
mov [esp+0DCh+var_A0] eax +
lea eax [ebx+1] +
mov [ebp+0] eax +
movzx eax byte ptr [ebx+1] +
cmp al 30h +
jz loc_40D2D4  +
cmp al 31h +
setz al  +
movzx eax al +
mov [esp+0DCh+var_7C] eax +
lea eax [ebx+2] +
mov [ebp+0] eax +
movzx ecx byte ptr [ebx+2] +
lea edx [ecx-2Ah] +
cmp dl 1Ah +
ja loc_40D488  +
movzx edx dl +
jmp ds:off_499594[edx*4]  +
mov [esp+0DCh+var_88] 0 +
mov [esp+0DCh+var_8C] 0 +
cmp cl 2Eh +
jz loc_40D8E7  +
cmp cl 3Fh +
jz loc_40D894  +
cmp cl 2Ah +
jz loc_40D807  +
mov eax [esp+0DCh+var_74] +
mov [esp+0DCh+var_D4] offset aMemberFunction +
mov [esp+0DCh+var_D8] offset aWarningSS +
mov [esp+0DCh+var_D0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov [esp+0DCh+var_80] 0 +
mov [esp+0DCh+var_68] 0 +
mov [esp+0DCh+var_94] 0 +
mov [esp+0DCh+var_90] 0 +
test esi esi +
mov ebx [esp+0DCh+var_A0] +
jnz loc_40D547  +
mov eax [esp+0DCh+var_98] +
lea esi [eax+1] +
cmp [esp+0DCh+var_6C] esi +
jbe loc_40D502  +
mov eax [esp+0DCh+var_84] +
mov ecx [esp+0DCh+var_98] +
lea edx [eax+ecx*4] +
mov eax [esp+0DCh+var_94] +
mov [esp+0DCh+var_98] edx +
test eax eax +
jnz loc_40D4CB  +
mov eax [esp+0DCh+var_80] +
mov [esp+0DCh+var_D4] edi +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_C0] eax +
mov eax [esp+0DCh+var_68] +
mov [esp+0DCh+var_C4] eax +
mov eax [esp+0DCh+var_88] +
mov [esp+0DCh+var_C8] eax +
mov eax [esp+0DCh+var_8C] +
mov [esp+0DCh+var_CC] eax +
mov eax [esp+0DCh+var_7C] +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408B10  +
mov edx [esp+0DCh+var_98] +
mov [edx] eax +
test eax eax +
jz loc_40D7C4  +
mov eax [ebp+0] +
movzx eax byte ptr [eax] +
test al al +
jz loc_40E01A  +
cmp al 3Bh +
jz loc_40E01A  +
mov [esp+0DCh+var_98] esi +
mov edi [esp+0DCh+var_90] +
jmp loc_40D25C  +
lea eax [ebx+3] +
mov [ebp+0] eax +
movzx ecx byte ptr [ebx+3] +
mov [esp+0DCh+var_88] 1 +
mov [esp+0DCh+var_8C] 1 +
jmp loc_40D304  +
lea eax [ebx+3] +
mov [ebp+0] eax +
movzx ecx byte ptr [ebx+3] +
mov [esp+0DCh+var_88] 1 +
mov [esp+0DCh+var_8C] 0 +
jmp loc_40D304  +
lea eax [ebx+3] +
mov [ebp+0] eax +
movzx ecx byte ptr [ebx+3] +
mov [esp+0DCh+var_88] 0 +
mov [esp+0DCh+var_8C] 1 +
jmp loc_40D304  +
lea eax [ebx+3] +
mov [ebp+0] eax +
movzx ecx byte ptr [ebx+3] +
mov [esp+0DCh+var_88] 0 +
mov [esp+0DCh+var_8C] 0 +
jmp loc_40D304  +
mov eax [esp+0DCh+var_74] +
mov [esp+0DCh+var_D4] offset aConstVolatileI +
mov [esp+0DCh+var_D8] offset aWarningSS +
mov [esp+0DCh+var_D0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [ebp+0] +
mov [esp+0DCh+var_88] 0 +
mov [esp+0DCh+var_8C] 0 +
movzx ecx byte ptr [eax] +
jmp loc_40D304  +
mov eax [esp+0DCh+var_88] +
mov [esp+0DCh+var_D4] edi +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_C8] eax +
mov eax [esp+0DCh+var_8C] +
mov [esp+0DCh+var_CC] eax +
mov eax [esp+0DCh+var_7C] +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408BB0  +
mov edx [esp+0DCh+var_98] +
mov [edx] eax +
jmp loc_40D3E1  +
add [esp+0DCh+var_6C] 0Ah +
mov eax [esp+0DCh+var_6C] +
shl eax 2 +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_84] +
mov [esp+0DCh+var_DC] eax +
call sub_474370  +
mov [esp+0DCh+var_84] eax +
jmp loc_40D384  +
mov [esp+0DCh+var_90] 0 +
mov [esp+0DCh+var_80] 0 +
mov [esp+0DCh+var_68] 0 +
mov [esp+0DCh+var_94] 1 +
mov ebx [esp+0DCh+var_B4] +
lea ecx [esp+0DCh+var_30] +
mov edx [esp+0DCh+var_B8] +
mov eax ebx +
call sub_409910  +
test eax eax +
mov [esp+0DCh+var_48] eax +
jz loc_40D7C4  +
mov [esp+0DCh+var_D8] edi +
mov [esp+0DCh+var_DC] ebx +
call sub_409100  +
test eax eax +
mov [esp+0DCh+var_44] eax +
jz loc_40DCB8  +
mov eax [esp+0DCh+var_A0] +
movzx eax byte ptr [eax] +
cmp al 5Fh +
mov byte ptr [esp+0DCh+var_4C] al +
jz loc_40DC0C  +
mov esi [esp+0DCh+var_A0] +
mov edi offset a__ct +
mov ecx 4 +
cmps   +
jnz loc_40D925  +
mov eax 1 +
mov [esp+0DCh+var_60] 1 +
cmp byte ptr [esp+0DCh+var_4C] 5Fh +
jz loc_40DCDD  +
mov esi [esp+0DCh+var_A0] +
mov ecx 4 +
mov edi offset a__dt +
cmps   +
setz cl  +
movzx ecx cl +
mov [esp+0DCh+var_54] ecx +
xor ecx ecx +
or ecx [esp+0DCh+var_54] +
or ecx eax +
jnz loc_40D912  +
mov eax [esp+0DCh+var_AC] +
test eax eax +
jz loc_40DF46  +
mov [esp+0DCh+var_DC] eax +
call strlen  +
mov ebx eax +
mov edx [esp+0DCh+var_8C] +
mov eax offset unk_499247 +
mov esi offset aC +
mov ecx [esp+0DCh+var_88] +
mov edi offset aV +
test edx edx +
cmovz esi eax +
test ecx ecx +
cmovz edi eax +
test ebx ebx +
jz loc_40DDAA  +
mov eax [esp+0DCh+var_AC] +
test eax eax +
jz loc_40DF4D  +
mov [esp+0DCh+var_D8] 3Ch +
mov [esp+0DCh+var_DC] eax +
call strchr  +
test eax eax +
jz loc_40DF4D  +
mov [esp+0DCh+var_D4] esi +
lea esi [esp+0DCh+var_28] +
mov ebx 1 +
mov [esp+0DCh+var_D0] edi +
mov [esp+0DCh+var_D8] offset a__SS +
mov [esp+0DCh+var_DC] esi +
call sprintf  +
mov [esp+0DCh+var_4C] 0 +
mov eax [esp+0DCh+var_60] +
xor ecx ecx +
test eax eax +
jnz loc_40D6A6  +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_DC] eax +
call strlen  +
mov ecx eax +
mov edi esi +
mov edx [edi] +
add edi 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_40D6A8  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [edi+2] +
cmovz edi edx +
add al al +
mov eax [esp+0DCh+var_A0] +
sbb edi 3 +
mov [esp+0DCh+var_40] ecx +
sub edi esi +
mov [esp+0DCh+var_DC] eax +
call strlen  +
mov ecx [esp+0DCh+var_40] +
add ecx edi +
add ebx ecx +
add ebx eax +
mov eax [esp+0DCh+var_9C] +
cmp byte ptr [eax] 6Fh +
jnz loc_40D70B  +
cmp byte ptr [eax+1] 70h +
jz loc_40DF83  +
mov [esp+0DCh+var_DC] ebx +
call sub_4742F0  +
mov edi [esp+0DCh+var_60] +
test edi edi +
mov ebx eax +
jz loc_40DD0C  +
mov byte ptr [eax] 0 +
mov [esp+0DCh+var_DC] ebx +
call strlen  +
mov [esp+0DCh+var_D8] esi +
mov edi eax +
lea eax [ebx+eax] +
mov [esp+0DCh+var_DC] eax +
call sub_475790  +
mov ecx [esp+0DCh+var_4C] +
test ecx ecx +
jz loc_40D754  +
mov [esp+0DCh+var_D8] ecx +
mov [esp+0DCh+var_DC] eax +
call strcpy  +
mov esi [esp+0DCh+var_A0] +
mov [esp+0DCh+var_DC] ebx +
mov [esp+0DCh+var_D8] esi +
call strcat  +
movzx eax byte ptr [esi] +
test al al +
jz loc_40D77A  +
mov ecx [esp+0DCh+var_54] +
test ecx ecx +
jz loc_40D9A3  +
mov [esp+0DCh+var_DC] 4 +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov [esp+0DCh+var_CC] 0 +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+var_48] +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_44] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_4088C0  +
test eax eax +
mov edi eax +
jnz loc_40D373  +
mov eax [esp+0DCh+var_9C] +
test eax eax +
jz loc_40D7D4  +
mov [esp+0DCh+var_DC] eax +
call free  +
mov eax [esp+0DCh+var_84] +
test eax eax +
jz loc_40D7E4  +
mov [esp+0DCh+var_DC] eax +
call free  +
mov eax [esp+0DCh+var_A0] +
test eax eax +
jz loc_40D7F4  +
mov [esp+0DCh+var_DC] eax +
call free  +
mov eax [esp+0DCh+var_A4] +
test eax eax +
jnz loc_40C753  +
xor ebx ebx +
jmp loc_40BFE5  +
add eax 1 +
xor edx edx +
mov [ebp+0] eax +
mov eax ebp +
call sub_409540  +
mov edx [ebp+0] +
cmp byte ptr [edx] 3Bh +
jnz loc_40DCB8  +
lea ecx [edx+1] +
and eax 7FFFFFFFh +
mov [ebp+0] ecx +
cmp byte ptr [edx+1] 3Bh +
mov [esp+0DCh+var_68] eax +
jz loc_40D986  +
test ecx ecx +
jz loc_40D986  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
mov [esp+0DCh+var_80] eax +
mov eax [ebp+0] +
movzx edx byte ptr [eax] +
cmp dl 3Ah +
jz loc_40E3D0  +
cmp dl 3Bh +
jnz loc_40DCB8  +
add eax 1 +
mov [ebp+0] eax +
mov [esp+0DCh+var_94] 0 +
mov [esp+0DCh+var_90] 0 +
jmp loc_40D367  +
mov ebx [esp+0DCh+var_9C] +
add eax 1 +
mov [ebp+0] eax +
mov [esp+0DCh+var_DC] ebx +
call strlen  +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_A0] +
mov [esp+0DCh+var_DC] eax +
call strncmp  +
test eax eax +
jnz loc_40D527  +
mov [esp+0DCh+var_80] 0 +
mov [esp+0DCh+var_68] 0 +
mov [esp+0DCh+var_94] 1 +
mov [esp+0DCh+var_90] 0 +
jmp loc_40D367  +
add eax 1 +
mov [ebp+0] eax +
mov [esp+0DCh+var_80] 0 +
mov [esp+0DCh+var_68] 0 +
mov [esp+0DCh+var_94] 0 +
mov [esp+0DCh+var_90] 0 +
jmp loc_40D367  +
movzx eax byte ptr [esp+0DCh+var_4C] +
xor edi edi +
mov ebx [esp+0DCh+var_A0] +
jmp loc_40D767  +
mov esi [esp+0DCh+var_AC] +
test esi esi +
jz loc_40DA69  +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_DC] eax +
call strcmp  +
test eax eax +
jnz loc_40DA69  +
xor eax eax +
mov [esp+0DCh+var_60] 1 +
jmp loc_40D5C0  +
lea eax [esp+0DCh+var_3C] +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] edi +
mov [esp+0DCh+var_DC] eax +
call sub_409140  +
test eax eax +
setz al  +
movzx eax al +
mov esi eax +
jmp loc_40D2A2  +
mov [esp+0DCh+var_80] 0 +
mov [esp+0DCh+var_94] 0 +
mov [esp+0DCh+var_90] 0 +
jmp loc_40D367  +
mov [esp+0DCh+var_34] ebx +
cmp byte ptr [ebx] 5Fh +
jnz loc_40D9B9  +
cmp byte ptr [ebx+1] 5Ah +
jz loc_40E46F  +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] 50h +
mov [esp+0DCh+var_20] 0 +
mov [esp+0DCh+var_1C] 0 +
mov [esp+0DCh+var_28] eax +
mov eax [esp+0DCh+var_B8] +
mov [esp+0DCh+var_10] 0Ah +
mov [esp+0DCh+var_24] eax +
call sub_4742F0  +
test edi edi +
mov esi [esp+0DCh+var_34] +
mov [esp+0DCh+var_14] 0 +
mov [esp+0DCh+var_18] eax +
jz loc_40DE10  +
add edi esi +
cmp edi esi +
jz loc_40E114  +
cmp byte ptr [edi+2] 0 +
jnz loc_40E17A  +
mov [esp+0DCh+var_D4] esi +
mov eax ds:_iob +
mov [esp+0DCh+var_D8] offset aBadMangledName +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [esp+0DCh+var_18] +
test eax eax +
jz loc_40D7C4  +
mov [esp+0DCh+var_DC] eax +
call free  +
jmp loc_40D7C4  +
xor eax eax +
mov [esp+0DCh+var_60] 0 +
jmp loc_40D5C0  +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_409080  +
test eax eax +
jz loc_40E771  +
mov [esp+0DCh+var_D4] 0 +
mov [esp+0DCh+var_D8] eax +
mov [esp+0DCh+var_DC] offset a_vb +
call sub_4758B0  +
mov [esp+0DCh+var_9C] eax +
jmp loc_40CE77  +
mov edi [esp+0DCh+var_A4] +
add eax 1 +
mov [ebp+0] eax +
lea eax ds:4[edi*4] +
mov [esp+0DCh+var_DC] eax +
call sub_4742F0  +
test edi edi +
mov [esp+0DCh+var_78] eax +
jz loc_40E001  +
mov eax [ebp+0] +
xor edi edi +
mov [esp+0DCh+var_9C] esi +
jmp loc_40DB57  +
add eax 1 +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov [ebp+0] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
jz loc_40BFE3  +
mov ecx [esp+0DCh+var_A0] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_CC] ebx +
mov [esp+0DCh+var_D0] esi +
mov [esp+0DCh+var_D4] ecx +
mov [esp+0DCh+var_DC] eax +
call sub_408980  +
mov ecx [esp+0DCh+var_78] +
test eax eax +
mov [ecx+edi*4] eax +
jz loc_40BFE3  +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Bh +
jnz loc_40BFE3  +
add eax 1 +
add edi 1 +
cmp edi [esp+0DCh+var_A4] +
mov [ebp+0] eax +
jz loc_40E003  +
movzx edx byte ptr [eax] +
xor esi esi +
cmp dl 30h +
jz loc_40DB98  +
cmp dl 31h +
mov si 1 +
jz loc_40DB98  +
mov eax [esp+0DCh+var_9C] +
xor si si +
mov [esp+0DCh+var_D4] offset aUnknownVirtual +
mov [esp+0DCh+var_D8] offset aWarningSS +
mov [esp+0DCh+var_D0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [ebp+0] +
lea edx [eax+1] +
mov ebx 1 +
mov [ebp+0] edx +
movzx eax byte ptr [eax+1] +
cmp al 31h +
jz loc_40DBE4  +
xor bl bl +
cmp al 32h +
jz loc_40DBE4  +
cmp al 30h +
mov bl 2 +
jz loc_40DBE4  +
mov eax [esp+0DCh+var_9C] +
xor bl bl +
mov [esp+0DCh+var_D4] offset aUnknownVisib_0 +
mov [esp+0DCh+var_D8] offset aWarningSS +
mov [esp+0DCh+var_D0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov edx [ebp+0] +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
xor edx edx +
call sub_409540  +
mov [esp+0DCh+var_A0] eax +
mov eax [ebp+0] +
cmp byte ptr [eax] 2Ch +
jz loc_40DAE1  +
mov esi [esp+0DCh+var_9C] +
jmp loc_40CF7D  +
mov eax [esp+0DCh+var_A0] +
cmp byte ptr [eax+1] 5Fh +
jnz loc_40D59D  +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_40DC37  +
cmp al 51h +
jz loc_40DC37  +
cmp al 74h +
jnz loc_40D59D  +
mov eax [esp+0DCh+var_A0] +
mov [esp+0DCh+var_60] 1 +
movzx edx byte ptr [eax+1] +
mov eax 1 +
mov esi [esp+0DCh+var_A0] +
mov ecx 4 +
mov edi offset a__dt +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
setz cl  +
movzx ecx cl +
mov [esp+0DCh+var_54] ecx +
cmp dl 5Ah +
mov ecx 1 +
jnz loc_40D5EB  +
jmp loc_40D5ED  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
test eax eax +
mov edi eax +
jz loc_40D7C4  +
mov eax [ebp+0] +
cmp byte ptr [eax] 3Ah +
jz loc_40D267  +
mov eax [esp+0DCh+var_74] +
mov [esp+0DCh+var_D8] offset aBadStabS +
mov [esp+0DCh+var_D4] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
jmp loc_40D7C4  +
mov ecx [esp+0DCh+var_A0] +
movzx edx byte ptr [ecx+1] +
cmp dl 2Eh +
jnz loc_40E3ED  +
mov ecx [esp+0DCh+var_A0] +
cmp byte ptr [ecx+2] 5Fh +
jnz loc_40DC4C  +
mov [esp+0DCh+var_54] 1 +
jmp loc_40DC75  +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_DC] ebx +
mov [esp+0DCh+var_D8] eax +
call strcpy  +
jmp loc_40D724  +
test dl dl +
jz loc_40D0F1  +
test ebx ebx +
nop   +
lea esi [esi+0] +
jz loc_40CFD0  +
cmp ebx 0FFFFFFFFh +
jz loc_40DEA5  +
cmp ebx 7Fh +
jz loc_40E721  +
test ebx ebx +
js loc_40E810  +
cmp ebx 0FFh +
jz loc_40E803  +
cmp ebx 0FFFFh +
jnz loc_40C42B  +
mov [esp+0DCh+var_D4] 1 +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 2 +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
mov ebx eax +
jmp loc_40C037  +
xor esi esi +
jmp loc_40CB50  +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408480  +
mov ebx eax +
jmp loc_40C2A4  +
mov [esp+0DCh+var_D4] esi +
lea esi [esp+0DCh+var_28] +
mov bl 1 +
mov [esp+0DCh+var_D0] edi +
mov [esp+0DCh+var_D8] offset a__SS +
mov [esp+0DCh+var_DC] esi +
call sprintf  +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_4C] eax +
jmp loc_40D68E  +
mov eax [esp+0DCh+var_AC] +
add edi 3FFFFFFFh +
lea esi ds:0[edi*4] +
mov eax [eax+edi*4] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_409050  +
cmp eax 2 +
jz loc_40E171  +
lea eax [esi+4] +
jmp loc_40CFAC  +
mov eax esi +
mov [esp+0DCh+var_D8] 5Fh +
mov [esp+0DCh+var_DC] eax +
call strchr  +
test eax eax +
mov edi eax +
jz loc_40DA31  +
cmp byte ptr [edi+1] 5Fh +
lea eax [eax+1] +
jnz loc_40DE12  +
test eax eax +
jz loc_40DA31  +
mov [esp+0DCh+var_DC] edi +
mov [esp+0DCh+var_D8] offset a__1 +
call strspn  +
lea edx [edi+eax-2] +
cmp eax 3 +
cmovnb edi edx +
jmp loc_40DA1F  +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_D4] offset aMissingIndexTy +
mov [esp+0DCh+var_D8] offset aWarningSS +
mov [esp+0DCh+var_D0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D4] 0 +
mov [esp+0DCh+var_D8] 4 +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
jmp loc_40C450  +
mov esi [esp+0DCh+var_AC] +
test esi esi +
jz loc_40DED1  +
mov edi offset aLongLongInt +
mov ecx 0Eh +
cmps   +
jz loc_40DF06  +
mov esi [esp+0DCh+var_AC] +
mov edi offset aLongLongUnsign +
mov ecx 17h +
cmps   +
jz loc_40D031  +
mov [esp+0DCh+var_D4] 1 +
jmp loc_40D183  +
test cl cl +
jz loc_40D121  +
jmp loc_40DD48  +
mov eax [esp+0DCh+var_A8] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_4084D0  +
mov ebx eax +
jmp loc_40C037  +
mov [esp+0DCh+var_D4] 0 +
jmp loc_40D039  +
mov eax [esp+0DCh+var_90] +
xor ebx ebx +
mov [esp+0DCh+var_D8] offset aBadStabS +
mov [esp+0DCh+var_D4] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_DC] eax +
call free  +
jmp loc_40BFE5  +
xor ebx ebx +
jmp loc_40D612  +
mov [esp+0DCh+var_D4] esi +
lea esi [esp+0DCh+var_28] +
mov [esp+0DCh+var_CC] ebx +
add ebx 1 +
mov [esp+0DCh+var_D0] edi +
mov [esp+0DCh+var_D8] offset a__SSD +
mov [esp+0DCh+var_DC] esi +
call sprintf  +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_4C] eax +
jmp loc_40D68E  +
movzx eax byte ptr [eax+2] +
cmp al 2Eh +
jz loc_40DF93  +
cmp al 24h +
jnz loc_40D70B  +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_D8] 0 +
add eax 3 +
mov [esp+0DCh+var_DC] eax +
call sub_482BA0  +
test eax eax +
mov edx eax +
jz loc_40E4D1  +
mov edi edx +
xor eax eax +
mov [esp+0DCh+var_60] edx +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
lea eax [ebx+ecx-1] +
mov [esp+0DCh+var_DC] eax +
call sub_4742F0  +
mov [esp+0DCh+var_D4] 3 +
mov ebx eax +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_DC] ebx +
mov [esp+0DCh+var_D8] eax +
call strncpy  +
mov edx [esp+0DCh+var_60] +
lea eax [ebx+3] +
mov [esp+0DCh+var_DC] eax +
mov [esp+0DCh+var_D8] edx +
call strcpy  +
jmp loc_40D724  +
xor edi edi +
mov eax [esp+0DCh+var_78] +
mov dword ptr [eax+edi*4] 0 +
mov eax [ebp+0] +
mov [esp+0DCh+var_90] eax +
jmp loc_40C6C0  +
mov eax [esp+0DCh+var_84] +
mov dword ptr [eax+esi*4] 0 +
mov eax [ebp+0] +
cmp byte ptr [eax] 0 +
jz loc_40E033  +
add eax 1 +
mov [ebp+0] eax +
mov eax [esp+0DCh+var_64] +
lea esi [eax+1] +
cmp esi [esp+0DCh+var_50] +
jnb loc_40E670  +
mov eax [esp+0DCh+var_70] +
mov ecx [esp+0DCh+var_64] +
lea ebx [eax+ecx*4] +
mov eax [esp+0DCh+var_84] +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408AF0  +
mov [esp+0DCh+var_64] esi +
mov [ebx] eax +
mov ebx [ebp+0] +
movzx edi byte ptr [ebx] +
mov eax edi +
cmp al 3Bh +
jnz loc_40D1F1  +
mov eax [esp+0DCh+var_70] +
test eax eax +
jz loc_40E09A  +
mov ecx [esp+0DCh+var_64] +
mov dword ptr [eax+ecx*4] 0 +
mov ebx [ebp+0] +
cmp byte ptr [ebx] 3Bh +
mov esi ebx +
jz loc_40E405  +
cmp byte ptr [ebx] 7Eh +
jz loc_40E57E  +
xor edx edx +
xor eax eax +
mov ebx [esp+0DCh+var_5C] +
xor ecx ecx +
cmp byte ptr [esp+0DCh+var_A8] 73h +
setz cl  +
test ebx ebx +
jnz loc_40E0D2  +
cmp [esp+0DCh+var_78] 0 +
jz loc_40E69B  +
mov [esp+0DCh+var_C4] eax +
mov eax [esp+0DCh+var_70] +
mov [esp+0DCh+var_C0] edx +
mov [esp+0DCh+var_D8] ecx +
mov [esp+0DCh+var_C8] eax +
mov eax [esp+0DCh+var_78] +
mov [esp+0DCh+var_CC] eax +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+var_58] +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_408580  +
mov ebx eax +
jmp loc_40C037  +
movzx eax byte ptr [edi+2] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_40E553  +
cmp al 51h +
jz loc_40E553  +
cmp al 74h +
jz loc_40E553  +
cmp byte ptr [edi] 5Fh +
mov eax edi +
nop   +
jnz loc_40E14A  +
add eax 1 +
cmp byte ptr [eax] 5Fh +
jz loc_40E142  +
mov [esp+0DCh+var_D8] offset a__ +
mov [esp+0DCh+var_DC] eax +
call strstr  +
test eax eax +
jz loc_40E168  +
cmp byte ptr [eax+2] 0 +
jnz loc_40E562  +
mov [esp+0DCh+var_D4] edi +
jmp loc_40DA35  +
mov eax esi +
xor ebx ebx +
jmp loc_40CFAC  +
lea esi [esp+0DCh+var_28] +
mov ecx edi +
lea edx [esp+0DCh+var_34] +
mov eax esi +
call sub_40BD70  +
test eax eax +
jz loc_40DA4D  +
mov eax [esp+0DCh+var_34] +
movzx edx byte ptr [eax] +
mov [esp+0DCh+var_54] eax +
test dl dl +
jz loc_40E224  +
mov esi [esp+0DCh+var_54] +
xor eax eax +
xor edi edi +
mov [esp+0DCh+var_60] 0 +
mov [esp+0DCh+var_4C] ebx +
mov [esp+0DCh+arg_0] ebp +
sub edx 30h +
cmp dl 44h +
ja loc_40E396  +
movzx edx dl +
jmp ds:off_499600[edx*4]  +
test edi edi +
cmovz edi esi +
add esi 1 +
mov [esp+0DCh+var_34] esi +
mov edx [esp+0DCh+var_60] +
test edx edx +
jnz loc_40E6E0  +
mov esi [esp+0DCh+var_34] +
movzx edx byte ptr [esi] +
test dl dl +
jnz loc_40E1CF  +
test eax eax +
mov ebx [esp+0DCh+var_4C] +
mov ebp [esp+0DCh+arg_0] +
jz loc_40E63D  +
mov eax [esp+0DCh+var_18] +
mov [esp+0DCh+var_DC] eax +
call free  +
mov eax [esp+0DCh+var_20] +
mov [esp+0DCh+var_18] 0 +
test eax eax +
jz loc_40E410  +
mov edx [esp+0DCh+var_1C] +
mov [esp+0DCh+var_38] edx +
test eax eax +
jz loc_40D7C4  +
mov edx [esp+0DCh+var_38] +
mov [esp+0DCh+var_CC] edx +
jmp loc_40D794  +
test edi edi +
lea ebp [esp+0DCh+var_34] +
cmovnz esi edi +
mov eax ebp +
xor edx edx +
call sub_40A770  +
test eax eax +
jz loc_40DA4D  +
mov ecx [esp+0DCh+var_34] +
lea ebx [esp+0DCh+var_28] +
sub ecx esi +
mov edx esi +
mov eax ebx +
call sub_4094A0  +
test eax eax +
jz loc_40DA4D  +
xor edi edi +
lea eax [esp+0DCh+var_1C] +
mov edx ebp +
mov [esp+0DCh+var_DC] eax +
lea ecx [esp+0DCh+var_20] +
mov eax ebx +
call sub_40BBB0  +
test eax eax +
jz loc_40DA4D  +
mov eax 1 +
mov [esp+0DCh+var_60] 1 +
jmp loc_40E200  +
mov eax [esp+0DCh+var_54] +
mov [esp+0DCh+var_D4] eax +
jmp loc_40DA35  +
test edi edi +
lea ebp [esp+0DCh+var_34] +
cmovnz esi edi +
lea ebx [esp+0DCh+var_28] +
xor ecx ecx +
mov edx ebp +
mov eax ebx +
call sub_40B2B0  +
test eax eax +
jz loc_40DA4D  +
mov ecx [esp+0DCh+var_34] +
sub ecx esi +
jmp loc_40E2A0  +
lea ebp [esp+0DCh+var_34] +
xor ecx ecx +
lea ebx [esp+0DCh+var_28] +
mov edx ebp +
mov eax ebx +
call sub_40B7B0  +
test eax eax +
jnz loc_40E31D  +
jmp loc_40DA4D  +
lea eax [esp+0DCh+var_1C] +
add esi 1 +
lea ebx [esp+0DCh+var_28] +
lea ebp [esp+0DCh+var_34] +
mov [esp+0DCh+var_DC] eax +
lea ecx [esp+0DCh+var_20] +
mov edx ebp +
mov eax ebx +
mov [esp+0DCh+var_34] esi +
call sub_40BBB0  +
test eax eax +
jz loc_40DA4D  +
xor edi edi +
mov eax 1 +
jmp loc_40E1F4  +
lea eax [esp+0DCh+var_1C] +
lea ebx [esp+0DCh+var_28] +
lea ebp [esp+0DCh+var_34] +
mov [esp+0DCh+var_DC] eax +
lea ecx [esp+0DCh+var_20] +
mov edx ebp +
mov eax ebx +
call sub_40BBB0  +
test eax eax +
jz loc_40DA4D  +
mov eax 1 +
jmp loc_40E1F4  +
mov eax [esp+0DCh+var_80] +
mov [esp+0DCh+var_94] 0 +
mov [esp+0DCh+var_80] 0 +
mov [esp+0DCh+var_90] eax +
jmp loc_40D367  +
cmp dl 24h +
jz loc_40DCEE  +
jmp loc_40DC4C  +
mov esi ebx +
mov [esp+0DCh+var_70] 0 +
add ebx 1 +
mov [ebp+0] ebx +
jmp loc_40E0A5  +
mov eax ds:_iob +
mov [esp+0DCh+var_D4] 24h +
mov [esp+0DCh+var_D8] 1 +
mov [esp+0DCh+var_DC] offset aNoArgumentType +
add eax 40h +
mov [esp+0DCh+var_D0] eax +
call fwrite  +
mov eax [esp+0DCh+var_20] +
jmp loc_40E24D  +
test al al +
jz loc_40D10E  +
mov ecx [esp+0DCh+var_A8] +
test ecx ecx +
jle loc_40D10E  +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] ecx +
mov [esp+0DCh+var_DC] eax +
call sub_4084B0  +
mov ebx eax +
jmp loc_40C037  +
lea esi [esp+0DCh+var_28] +
mov [esp+0DCh+var_D4] esi +
mov [esp+0DCh+var_D8] 3 +
mov [esp+0DCh+var_DC] ebx +
call sub_487E90  +
test eax eax +
jz loc_40E532  +
cmp dword ptr [eax] 3 +
jnz loc_40E4F6  +
mov eax [eax+8] +
cmp dword ptr [eax] 29h +
jnz loc_40E4F6  +
mov ecx [eax+8] +
lea eax [esp+0DCh+var_38] +
mov [esp+0DCh+var_DC] eax +
mov edx [esp+0DCh+var_B8] +
mov eax [esp+0DCh+var_B4] +
call sub_40A630  +
mov esi eax +
mov eax [esp+0DCh+var_28] +
mov [esp+0DCh+var_DC] eax +
call free  +
mov eax esi +
jmp loc_40E25B  +
mov eax [esp+0DCh+var_9C] +
mov [esp+0DCh+var_D8] offset aNoManglingForS +
mov [esp+0DCh+var_D4] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
jmp loc_40D7C4  +
mov eax ds:_iob +
mov [esp+0DCh+var_D4] 21h +
mov [esp+0DCh+var_D8] 1 +
mov [esp+0DCh+var_DC] offset aDemangledNameI +
add eax 40h +
mov [esp+0DCh+var_D0] eax +
call fwrite  +
mov eax [esp+0DCh+var_28] +
mov [esp+0DCh+var_DC] eax +
call free  +
jmp loc_40D7C4  +
mov eax ds:_iob +
mov [esp+0DCh+var_D4] ebx +
mov [esp+0DCh+var_D8] offset aBadMangledName +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
jmp loc_40D7C4  +
add edi 2 +
mov [esp+0DCh+var_34] edi +
jmp loc_40E199  +
lea esi [esp+0DCh+var_28] +
mov ecx eax +
lea edx [esp+0DCh+var_34] +
mov eax esi +
call sub_40BD70  +
jmp loc_40E191  +
lea eax [ebx+1] +
mov [ebp+0] eax +
movzx eax byte ptr [ebx+1] +
cmp al 2Bh +
jz loc_40E610  +
and eax 0FFFFFFEFh +
cmp al 2Dh +
jz loc_40E610  +
mov ebx [ebp+0] +
cmp byte ptr [ebx] 25h +
jnz loc_40E0AE  +
add ebx 1 +
mov eax ebp +
mov [ebp+0] ebx +
lea edx [esp+0DCh+var_28] +
call sub_4095E0  +
test eax eax +
jz loc_40D7F4  +
mov eax [esp+0DCh+var_30] +
cmp [esp+0DCh+var_28] eax +
jnz loc_40E5DF  +
mov eax [esp+0DCh+var_2C] +
cmp [esp+0DCh+var_24] eax +
jz loc_40E61B  +
mov edx [esp+0DCh+var_B8] +
xor ecx ecx +
mov eax [esp+0DCh+var_B4] +
mov [ebp+0] ebx +
mov [esp+0DCh+var_D8] 0 +
mov [esp+0DCh+var_DC] ebp +
call sub_40BE00  +
mov edx [ebp+0] +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_40E627  +
cmp cl 3Bh +
jz loc_40E627  +
add edx 1 +
jmp loc_40E5FF  +
add ebx 2 +
mov [ebp+0] ebx +
jmp loc_40E597  +
mov edx 1 +
xor eax eax +
jmp loc_40E0B2  +
cmp cl 3Bh +
jnz loc_40E6F3  +
add edx 1 +
mov [ebp+0] edx +
xor edx edx +
jmp loc_40E0B2  +
lea eax [esp+0DCh+var_1C] +
lea esi [esp+0DCh+var_28] +
mov [esp+0DCh+var_DC] eax +
lea edx [esp+0DCh+var_34] +
mov eax esi +
lea ecx [esp+0DCh+var_20] +
call sub_40BBB0  +
test eax eax +
jnz loc_40E224  +
jmp loc_40DA4D  +
add [esp+0DCh+var_50] 0Ah +
mov eax [esp+0DCh+var_50] +
shl eax 2 +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+var_70] +
mov [esp+0DCh+var_DC] eax +
call sub_474370  +
mov [esp+0DCh+var_70] eax +
jmp loc_40E047  +
cmp [esp+0DCh+var_70] 0 +
jnz loc_40E0D2  +
test eax eax +
jnz loc_40E0D2  +
test edx edx +
jnz loc_40E0D2  +
mov eax [esp+0DCh+var_A4] +
mov [esp+0DCh+var_D8] ecx +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+var_58] +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_DC] eax +
call sub_4084E0  +
mov ebx eax +
jmp loc_40C037  +
lea ebx [esp+0DCh+var_28] +
lea ebp [esp+0DCh+var_34] +
jmp loc_40E2B3  +
mov eax ds:_iob +
mov [esp+0DCh+var_D4] esi +
mov [esp+0DCh+var_D8] offset aBadStabS +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
jmp loc_40D7F4  +
mov [esp+0DCh+var_D4] 0 +
jmp loc_40DD70  +
mov [esp+0DCh+var_D4] 0 +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D8] 1 +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
mov ebx eax +
jmp loc_40C037  +
mov eax [esp+0DCh+var_B4] +
mov [esp+0DCh+var_D4] 0 +
mov [esp+0DCh+var_D8] 4 +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
test eax eax +
mov ebx eax +
jnz loc_40C4ED  +
xor ebx ebx +
jmp loc_40BFE5  +
mov eax ds:_iob +
mov [esp+0DCh+var_D0] edi +
mov [esp+0DCh+var_D4] offset aUnnamedVbType +
mov [esp+0DCh+var_D8] offset aWarningSS +
add eax 40h +
mov [esp+0DCh+var_DC] eax +
call fprintf  +
mov eax offset aFoo +
jmp loc_40DA90  +
cmp byte ptr [ebx+2] 24h +
jnz loc_40D225  +
lea eax [esi+2] +
mov [ebp+0] eax +
movzx edx byte ptr [esi+2] +
mov ebx eax +
test dl dl +
jnz loc_40E7CA  +
jmp loc_40E7CF  +
add ebx 1 +
movzx edx byte ptr [ebx] +
test dl dl +
jz loc_40E7CF  +
cmp dl 2Eh +
jnz loc_40E7C0  +
cmp dl 2Eh +
jnz loc_40DCB8  +
mov edx ebx +
add ebx 1 +
sub edx eax +
call sub_409500  +
mov [ebp+0] ebx +
mov [esp+0DCh+var_9C] eax +
jmp loc_40D23A  +
mov eax [esp+0DCh+var_A8] +
mov [esp+0DCh+var_D4] 1 +
neg eax  +
jmp loc_40C681  +
mov [esp+0DCh+var_D4] 1 +
jmp loc_40E729  +
mov eax [esp+0DCh+var_B4] +
neg ebx  +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_D4] 1 +
mov [esp+0DCh+var_DC] eax +
call sub_408490  +
mov ebx eax +
jmp loc_40C037  +
***
jmp sub_40E840  +
***
sub esp 14h +
mov [esp+14h+var_14] 0DCh +
call sub_4742F0  +
mov edx 0DCh +
test al 1 +
mov ebx eax +
mov edi eax +
jnz loc_40E8D0  +
test edi 2 +
jnz loc_40E8E0  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_40E87D  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_40E885  +
mov byte ptr [edi] 0 +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] 4 +
mov dword ptr [ebx+44h] 1 +
mov [ebx] eax +
mov eax [esp+14h+arg_8] +
mov [ebx+4] eax +
mov eax [esp+14h+arg_C] +
mov [ebx+8] eax +
mov eax [esp+14h+arg_10] +
mov [ebx+0Ch] eax +
call sub_4742F0  +
mov dword ptr [ebx+38h] 0FFFFFFFFh +
mov dword ptr [eax] 0 +
mov [ebx+48h] eax +
add esp 14h +
mov eax ebx +
pop ebx  +
pop edi  +
retn   +
lea edi [eax+1] +
mov dl 0DBh +
test edi 2 +
mov byte ptr [eax] 0 +
jz loc_40E866  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_40E866  +
***
jmp sub_40E900  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov eax [ebx+34h] +
test eax eax +
jnz loc_40E963  +
mov ebx [ebx+0D4h] +
mov edi 7 +
test ebx ebx +
jnz loc_40E92C  +
jmp loc_40E957  +
mov ebx [ebx] +
test ebx ebx +
jz loc_40E957  +
mov edx [ebx+8] +
mov eax [ebx+4] +
mov [esp+10h+var_10] esi +
test edx edx +
cmovz edx edi +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call sub_408E00  +
test eax eax +
mov [ebx+0Ch] eax +
jnz loc_40E926  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [ebx+40h] +
mov eax esi +
call sub_409730  +
test eax eax +
jz loc_40E94E  +
mov eax [ebx+38h] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_407EC0  +
test eax eax +
jz loc_40E94E  +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 0FFFFFFFFh +
jmp loc_40E915  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
mov edi [esp+4Ch+arg_10] +
mov ebp [esp+4Ch+arg_14] +
mov edx [ebx+10h] +
test edx edx +
jz loc_40EA23  +
cmp esi 64h +
jz loc_40EA90  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_4C] eax +
call sub_407B50  +
test eax eax +
jz loc_40EB80  +
mov eax [ebx+10h] +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov [ebx+28h] eax +
mov eax [ebx+4] +
test eax eax +
jnz loc_40EA00  +
mov eax [ebx+14h] +
mov [ebx+18h] eax +
mov dword ptr [ebx+44h] 1 +
mov [esp+4Ch+var_4C] 4 +
call sub_4742F0  +
mov [ebx+48h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [ebx+10h] 0 +
cmp esi 62h +
jz loc_40ECC0  +
jle loc_40EB90  +
cmp esi 0C0h +
jz loc_40F021  +
nop   +
jle loc_40ECD0  +
cmp esi 0E0h +
jz loc_40EE20  +
jle loc_40EDA0  +
cmp esi 0E2h +
jz loc_40F080  +
cmp esi 0E4h +
jnz loc_40EC10  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_408230  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_40EB82  +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_40E9C7  +
cmp [ebx+14h] edi +
jnz loc_40E9C7  +
cmp dword ptr [ebx+34h] 0 +
jz loc_40EB05  +
mov eax [ebx+38h] +
mov esi edi +
cmp eax 0FFFFFFFFh +
jz loc_40EABC  +
cmp edi eax +
cmovbe eax edi +
mov esi eax +
mov eax [esp+4Ch+arg_0] +
lea edx [ebx+40h] +
call sub_409730  +
test eax eax +
jz loc_40EB80  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call sub_407EC0  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 0FFFFFFFFh +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_40ECC0  +
mov edx [ebx+10h] +
test edx edx +
jz loc_40F7C2  +
cmp al 5Ch +
jz loc_40F76B  +
cmp al 2Fh +
jz loc_40F76B  +
cmp byte ptr [ebp+1] 3Ah +
jz loc_40F76B  +
mov [esp+4Ch+var_4C] edx +
mov dword ptr [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_2C] edx +
call sub_4758B0  +
mov edx [esp+4Ch+var_2C] +
mov [ebx+10h] eax +
mov [esp+4Ch+var_4C] edx +
call free  +
mov [ebx+14h] edi +
mov eax 1 +
jmp loc_40EB82  +
mov eax ds:_iob +
mov dword ptr [esp+4Ch+var_44] 1Ch +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aN_lbracNotWith +
add eax 40h +
mov dword ptr [esp+4Ch+var_44+4] eax +
call fwrite  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi 24h +
jz loc_40EEA0  +
jle loc_40F0E0  +
cmp esi 38h +
jz loc_40ECC0  +
nop   +
lea esi [esi+0] +
jle loc_40F148  +
cmp esi 3Ch +
jz loc_40EFE0  +
cmp esi 44h +
jnz loc_40EC10  +
mov edx [ebx+34h] +
xor eax eax +
test edx edx +
jz loc_40EBD0  +
mov eax [ebx+1Ch] +
add eax edi +
mov dword ptr [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_C] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_4080B0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_40EB82  +
mov ecx [ebx+34h] +
test ecx ecx +
jz loc_40EC10  +
mov eax [ebx+38h] +
cmp eax 0FFFFFFFFh +
jz loc_40EC07  +
cmp edi eax +
jnb loc_40EC10  +
mov [ebx+38h] edi +
lea esi [esi+0] +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] ebp +
call strchr  +
test eax eax +
jz loc_40ECC0  +
movzx edx byte ptr [eax+1] +
and edx 0FFFFFFDFh +
cmp dl 46h +
jnz loc_40EF03  +
mov edx [ebx+34h] +
test edx edx +
jz loc_40EC90  +
mov eax [ebx+38h] +
mov ecx edi +
cmp eax 0FFFFFFFFh +
jz loc_40EC50  +
cmp edi eax +
cmovbe eax edi +
mov ecx eax +
mov eax [esp+4Ch+arg_0] +
lea edx [ebx+40h] +
mov [esp+4Ch+var_2C] ecx +
call sub_409730  +
mov ecx [esp+4Ch+var_2C] +
test eax eax +
jz loc_40EB80  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_4C] eax +
call sub_407EC0  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [ebx+38h] 0FFFFFFFFh +
nop   +
lea esi [esi+0] +
mov eax [ebx+4] +
test eax eax +
jz loc_40EC9A  +
mov [ebx+1Ch] edi +
mov dword ptr [ebx+34h] 1 +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] ebp +
call strchr  +
test eax eax +
mov [esp+4Ch+var_14] eax +
jnz loc_40EF33  +
lea esi [esi+0] +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi 82h +
jz loc_40ED24  +
jle loc_40F783  +
cmp esi 84h +
jz loc_40ED7B  +
cmp esi 0A2h +
jnz loc_40EC10  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_40F706  +
mov edx [eax+4] +
mov ecx [ebx+48h] +
mov esi [eax+10h] +
mov [ebx+2Ch] edx +
test edx edx +
mov ecx [ecx+esi*4] +
mov [eax+14h] ecx +
jz loc_40F706  +
mov eax [edx+8] +
mov [esp+4Ch+var_48] eax +
jmp loc_40ED7F  +
mov [esp+4Ch+var_4C] 18h +
call sub_4742F0  +
mov edx [ebx+48h] +
mov esi eax +
mov eax [ebx+30h] +
mov [esi] eax +
mov eax [ebx+2Ch] +
mov [esi+8] ebp +
mov [esi+0Ch] edi +
mov [esi+4] eax +
mov eax [ebx+44h] +
mov dword ptr [esi+14h] 0 +
mov [esi+10h] eax +
add eax 1 +
mov [ebx+44h] eax +
shl eax 2 +
mov [ebx+30h] esi +
mov [ebx+2Ch] esi +
mov [esp+4Ch+var_4C] edx +
mov [esp+4Ch+var_48] eax +
call sub_474370  +
mov edx [esi+10h] +
mov [ebx+48h] eax +
mov dword ptr [eax+edx*4] 0 +
mov [esp+4Ch+var_48] ebp +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407C00  +
test eax eax +
setnz al  +
add esp 4Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi 0C2h +
jnz loc_40EC10  +
mov eax [ebx+44h] +
mov edx [ebx+48h] +
add eax 1 +
mov [ebx+44h] eax +
shl eax 2 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] edx +
call sub_474370  +
mov esi [ebx+30h] +
test esi esi +
mov [esp+4Ch+var_2C] eax +
mov [ebx+48h] eax +
jnz loc_40EDEA  +
jmp loc_40F0A0  +
mov esi [esi] +
test esi esi +
jz loc_40F0A0  +
cmp edi [esi+0Ch] +
lea esi [esi+0] +
jnz loc_40EDE0  +
mov [esp+4Ch+var_48] ebp +
mov eax [esi+8] +
mov [esp+4Ch+var_4C] eax +
call strcmp  +
test eax eax +
jnz loc_40EDE0  +
mov eax [ebx+44h] +
mov edx [esi+14h] +
mov ecx [esp+4Ch+var_2C] +
mov [ecx+eax*4-4] edx +
mov eax 1 +
jmp loc_40EB82  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_40EE32  +
cmp [esp+4Ch+arg_C] 1 +
jz loc_40ECC0  +
mov eax [esp+4Ch+arg_0] +
lea edx [ebx+40h] +
call sub_409730  +
test eax eax +
jz loc_40EB80  +
mov eax [esp+4Ch+arg_0] +
add edi [ebx+1Ch] +
add edi [ebx+18h] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edi +
call sub_408040  +
test eax eax +
jz loc_40EB80  +
sub dword ptr [ebx+3Ch] 1 +
jns loc_40ECC0  +
mov eax ds:_iob +
mov dword ptr [esp+4Ch+var_44] 12h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aTooManyN_rbrac +
add eax 40h +
mov dword ptr [esp+4Ch+var_44+4] eax +
call fwrite  +
xor eax eax +
jmp loc_40EB82  +
cmp byte ptr [ebp+0] 0 +
jnz loc_40EBF4  +
mov ebp [ebx+34h] +
test ebp ebp +
jz loc_40ECC0  +
mov esi [ebx+4] +
test esi esi +
jz loc_40EEBF  +
add edi [ebx+1Ch] +
mov eax [esp+4Ch+arg_0] +
lea edx [ebx+40h] +
call sub_409730  +
test eax eax +
jz loc_40EB80  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_407EC0  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [ebx+34h] 0 +
mov eax 1 +
mov dword ptr [ebx+38h] 0FFFFFFFFh +
jmp loc_40EB82  +
mov [esp+4Ch+var_14] eax +
jmp loc_40EF33  +
add eax 2 +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_14] eax +
call strchr  +
test eax eax +
mov [esp+4Ch+var_14] eax +
jz loc_40F105  +
cmp byte ptr [eax+1] 3Ah +
jz loc_40EF10  +
cmp byte ptr [ebp+0] 24h +
jz loc_40F70E  +
cmp eax ebp +
jz loc_40F7A9  +
cmp byte ptr [ebp+0] 20h +
jnz loc_40EF5C  +
lea edx [ebp+1] +
cmp eax edx +
jz loc_40F7A9  +
sub eax ebp +
mov edx eax +
mov eax ebp +
call sub_409500  +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+var_14] +
lea edx [eax+1] +
mov [esp+4Ch+var_14] edx +
movzx edx byte ptr [eax+1] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_40F156  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] 4 +
mov [esp+4Ch+var_4C] eax +
mov ecx [esp+4Ch+var_2C] +
mov edx ebx +
mov eax [esp+4Ch+arg_0] +
call sub_409680  +
test eax eax +
jz loc_40EB80  +
jmp loc_40ECC0  +
test ebp ebp +
jz loc_40F126  +
mov edi offset aGcc2_compiled_ +
mov ecx 0Fh +
mov esi ebp +
cmps   +
jz loc_40F137  +
mov edi offset aGcc_compiled_ +
mov ecx 0Eh +
mov esi ebp +
cmps   +
jnz loc_40F126  +
mov dword ptr [ebx+20h] 1 +
mov eax 1 +
jmp loc_40EB82  +
mov ebp [ebx+24h] +
test ebp ebp +
jz loc_40F033  +
cmp [esp+4Ch+arg_C] 1 +
jz loc_40ECC0  +
mov esi [ebx+34h] +
test esi esi +
jz loc_40EB58  +
mov eax [esp+4Ch+arg_0] +
add edi [ebx+1Ch] +
add edi [ebx+18h] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edi +
call sub_407F40  +
test eax eax +
jz loc_40EB80  +
mov eax [esp+4Ch+arg_0] +
lea edx [ebx+40h] +
call sub_409730  +
test eax eax +
jz loc_40EB80  +
add dword ptr [ebx+3Ch] 1 +
mov eax 1 +
jmp loc_40EB82  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_408200  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_40EB82  +
mov eax ds:_iob +
mov dword ptr [esp+4Ch+var_44+4] ebp +
mov dword ptr [esp+4Ch+var_44] offset aUndefinedN_exc +
mov [esp+4Ch+var_48] offset aWarningSS +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [ebx+48h] +
mov edx [ebx+44h] +
mov dword ptr [eax+edx*4-4] 0 +
mov eax 1 +
jmp loc_40EB82  +
cmp esi 0Ch +
jz loc_40ECC0  +
jl loc_40EC10  +
lea eax [esi-1Eh] +
cmp eax 1 +
jbe loc_40ECC0  +
nop   +
lea esi [esi+0] +
jmp loc_40EC10  +
mov eax ds:_iob +
mov dword ptr [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_48] offset aBadStabS +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_40EB80  +
mov dword ptr [ebx+24h] 1 +
mov eax 1 +
jmp loc_40EB82  +
mov dword ptr [ebx+20h] 2 +
mov eax 1 +
jmp loc_40EB82  +
cmp esi 2Ah +
jz loc_40ECC0  +
jmp loc_40EC10  +
cmp dl 28h +
jz loc_40EF8B  +
cmp dl 2Dh +
jz loc_40EF8B  +
lea edx [eax+2] +
mov [esp+4Ch+var_14] edx +
movzx ecx byte ptr [eax+1] +
lea edx [ecx-43h] +
cmp dl 33h +
mov byte ptr [esp+4Ch+var_28] cl +
ja loc_40F105  +
movzx edx dl +
jmp ds:off_49979C[edx*4]  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov [esp+4Ch+var_3C] edi +
mov dword ptr [esp+4Ch+var_44+4] 2 +
mov dword ptr [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407E10  +
test eax eax +
jz loc_40EB80  +
jmp loc_40ECC0  +
cmp esi 24h +
jnz loc_40F189  +
lea esi [esp+4Ch+var_14] +
mov edi [esp+4Ch+arg_0] +
jmp loc_40F215  +
add ecx 1 +
mov edx ebx +
mov [esp+4Ch+var_14] ecx +
mov eax edi +
xor ecx ecx +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] esi +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov ecx [esp+4Ch+var_14] +
cmp byte ptr [ecx] 3Bh +
jz loc_40F1F0  +
nop   +
jmp loc_40ECC0  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
mov [esp+4Ch+var_20] eax +
jz loc_40EB80  +
mov ebp [esp+4Ch+var_2C] +
test ebp ebp +
jz loc_40F2CB  +
mov eax [ebx] +
mov ecx [ebx+0Ch] +
mov esi [ebx+8] +
mov eax [eax+4] +
test ecx ecx +
movzx eax byte ptr [eax+18h] +
jle loc_40F2CB  +
movzx edx byte ptr [ebp+0] +
mov [esp+4Ch+arg_4] ebx +
mov ebx ecx +
mov [esp+4Ch+arg_10] edi +
mov edi ebp +
mov byte ptr [esp+4Ch+var_28] dl +
mov edx eax +
jmp loc_40F28C  +
add esi 4 +
sub ebx 1 +
jz loc_40F7D2  +
mov ebp [esi] +
test dl dl +
mov eax [ebp+4] +
movzx ecx byte ptr [eax] +
jz loc_40F2A0  +
cmp dl cl +
jz loc_40F7B6  +
cmp byte ptr [esp+4Ch+var_28] cl +
jnz loc_40F280  +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_24] edx +
call strcmp  +
mov edx [esp+4Ch+var_24] +
test eax eax +
jnz loc_40F280  +
mov eax [ebp+10h] +
mov edi [ebp+8] +
mov ebx [esp+4Ch+arg_4] +
add edi [eax+1Ch] +
mov dword ptr [esp+4Ch+var_44] edi +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] 1 +
jmp loc_40EFBB  +
mov eax [esp+4Ch+arg_0] +
lea esi [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_48] 0 +
mov edx ebx +
mov [esp+4Ch+var_4C] esi +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_2C] +
xor edx edx +
cmp byte ptr [esp+4Ch+var_28] 46h +
mov [esp+4Ch+var_3C] edi +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
setz dl  +
mov dword ptr [esp+4Ch+var_44+4] edx +
mov [esp+4Ch+var_4C] eax +
call sub_407CC0  +
test eax eax +
jz loc_40EB80  +
mov edi [esp+4Ch+arg_0] +
jmp loc_40F365  +
add ecx 1 +
mov edx ebx +
mov [esp+4Ch+var_14] ecx +
mov eax edi +
xor ecx ecx +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] esi +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov ecx [esp+4Ch+var_14] +
cmp byte ptr [ecx] 3Bh +
jz loc_40F340  +
nop   +
jmp loc_40ECC0  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_2C] +
mov dword ptr [esp+4Ch+var_44+4] edi +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_408340  +
test eax eax +
jnz loc_40ECC0  +
jmp loc_40EB80  +
lea eax [esp+4Ch+var_10] +
mov edi [esp+4Ch+var_2C] +
mov edx ebx +
mov [esp+4Ch+var_48] eax +
lea eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov ecx edi +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
test edi edi +
jz loc_40ECC0  +
mov dword ptr [esp+4Ch+var_44] eax +
mov eax edi +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_408C50  +
test eax eax +
jz loc_40EB80  +
mov edx [esp+4Ch+var_10] +
test edx edx +
jz loc_40ECC0  +
mov [edx] eax +
jmp loc_40ECC0  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] 5 +
jmp loc_40EFBB  +
cmp byte ptr [eax+2] 46h +
jz loc_40F7EF  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov [esp+4Ch+var_3C] edi +
mov dword ptr [esp+4Ch+var_44+4] 1 +
jmp loc_40F1B9  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov [esp+4Ch+var_3C] edi +
mov dword ptr [esp+4Ch+var_44+4] 3 +
jmp loc_40F1B9  +
cmp byte ptr [eax+2] 3Dh +
jnz loc_40F105  +
lea edx [eax+4] +
mov [esp+4Ch+var_14] edx +
movzx eax byte ptr [eax+3] +
cmp al 69h +
jz loc_40F87C  +
cmp al 72h +
jz loc_40F84F  +
cmp al 65h +
jnz loc_40F105  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
mov ebx eax +
jz loc_40EB80  +
mov eax [esp+4Ch+var_14] +
cmp byte ptr [eax] 2Ch +
jnz loc_40F105  +
mov [esp+4Ch+var_4C] eax +
call atoi  +
mov dword ptr [esp+4Ch+var_44] ebx +
mov dword ptr [esp+4Ch+var_44+4] eax +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_4082E0  +
test eax eax +
jz loc_40EB80  +
jmp loc_40ECC0  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov [esp+4Ch+var_3C] edi +
mov dword ptr [esp+4Ch+var_44+4] 4 +
jmp loc_40F1B9  +
lea edx [eax+3] +
mov [esp+4Ch+var_14] edx +
cmp byte ptr [eax+3] 6Eh +
jnz loc_40F105  +
cmp byte ptr [eax+4] 30h +
lea edx [eax+4] +
mov [esp+4Ch+var_14] edx +
jnz loc_40F105  +
add eax 5 +
mov [esp+4Ch+var_14] eax +
add eax 1 +
cmp byte ptr [eax-1] 3Bh +
jnz loc_40F5BA  +
jmp loc_40ECC0  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] 3 +
jmp loc_40EFBB  +
xor ebp ebp +
cmp byte ptr [eax+2] 74h +
jz loc_40F7DF  +
lea eax [esp+4Ch+var_10] +
mov edi [esp+4Ch+var_2C] +
mov edx ebx +
mov [esp+4Ch+var_48] eax +
lea eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov ecx edi +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
test edi edi +
jz loc_40ECC0  +
mov esi [ebx+0D8h] +
mov dword ptr [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_408D10  +
test eax eax +
mov edi eax +
jz loc_40EB80  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_40F66B  +
mov [eax] edi +
test esi esi +
jnz loc_40F6BC  +
lea esi [ebx+0D4h] +
mov ebx [ebx+0D4h] +
test ebx ebx +
jz loc_40F6BC  +
mov eax [esp+4Ch+var_2C] +
movzx edx byte ptr [eax] +
jmp loc_40F690  +
mov esi ebx +
mov ebx [ebx] +
test ebx ebx +
jz loc_40F6BC  +
mov eax [ebx+4] +
cmp [eax] dl +
jnz loc_40F688  +
mov ecx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_48] ecx +
call strcmp  +
mov edx [esp+4Ch+var_28] +
test eax eax +
jnz loc_40F688  +
mov [ebx+0Ch] edi +
mov eax [esi] +
mov eax [eax] +
mov [esi] eax +
test ebp ebp +
jz loc_40ECC0  +
mov dword ptr [esp+4Ch+var_44] edi +
mov eax [esp+4Ch+var_2C] +
jmp loc_40F3F8  +
lea eax [esp+4Ch+var_14] +
xor ecx ecx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov edx ebx +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov dword ptr [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] 2 +
jmp loc_40EFBB  +
mov eax [ebx+28h] +
jmp loc_40ED1E  +
movzx ecx byte ptr [ebp+1] +
lea edx [ecx-58h] +
cmp dl 1Eh +
ja loc_40F73E  +
movzx edx dl +
jmp ds:off_49986C[edx*4]  +
mov [esp+4Ch+var_2C] offset aEh_throw +
jmp loc_40EF6F  +
mov [esp+4Ch+var_2C] offset aThis_0 +
jmp loc_40EF6F  +
mov eax ds:_iob +
mov dword ptr [esp+4Ch+var_44+4] ebp +
mov dword ptr [esp+4Ch+var_44] offset aUnknownCEncode +
mov [esp+4Ch+var_48] offset aWarningSS +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+var_14] +
jmp loc_40EF43  +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_2C] edx +
call sub_476140  +
mov edx [esp+4Ch+var_2C] +
mov [ebx+10h] eax +
jmp loc_40EB46  +
cmp esi 64h +
jnz loc_40EC10  +
cmp dword ptr [ebx+34h] 0 +
movzx eax byte ptr [ebp+0] +
jz loc_40EAFA  +
test al al +
mov esi edi +
jz loc_40EABC  +
jmp loc_40EAAB  +
mov [esp+4Ch+var_2C] 0 +
jmp loc_40EF6F  +
movzx ecx byte ptr [eax+1] +
add eax 1 +
jmp loc_40F2A0  +
mov [esp+4Ch+var_4C] ebp +
call sub_476140  +
mov [ebx+10h] eax +
jmp loc_40EB4E  +
mov ebx [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_10] +
jmp loc_40F2CB  +
add eax 3 +
mov bp 1 +
mov [esp+4Ch+var_14] eax +
jmp loc_40F60D  +
add eax 3 +
xor ecx ecx +
mov [esp+4Ch+var_14] eax +
lea eax [esp+4Ch+var_14] +
mov edx ebx +
mov [esp+4Ch+var_4C] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 0 +
call sub_40BE00  +
test eax eax +
jz loc_40EB80  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov dword ptr [esp+4Ch+var_44+4] 0 +
mov dword ptr [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_4086E0  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_408690  +
jmp loc_40F47E  +
mov [esp+4Ch+var_4C] edx +
call atof  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
fstp  [esp+4Ch+var_44] +
mov [esp+4Ch+var_4C] eax +
call sub_4082A0  +
test eax eax +
jz loc_40EB80  +
jmp loc_40ECC0  +
mov [esp+4Ch+var_4C] edx +
nop   +
call atoi  +
mov dword ptr [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_408260  +
test eax eax +
jz loc_40EB80  +
jmp loc_40ECC0  +
***
retn   +
***
retn   +
***
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call sub_4742F0  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+54h] +
test eax eax +
jz loc_40F950  +
mov eax [eax+20h] +
test eax eax +
jz loc_40F950  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_40F950  +
mov dword ptr [eax+1Ch] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov [esp+18h+var_10] 18F9h +
mov [esp+18h+var_14] offset a____Binutils_1 +
mov [esp+18h+var_18] offset aInfoType_stack +
call sub_48C4C0  +
mov eax [ebx+54h] +
mov eax [eax+20h] +
jmp loc_40F93D  +
***
mov ebx [esp+18h+arg_0] +
push edi  +
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [eax+124h] +
cmp ebx edx +
ja loc_40FA83  +
test ebx ebx +
jnz loc_40FA00  +
cmp edx 3 +
mov bl 4 +
jbe loc_40FADD  +
lea esi [esi+0] +
add ebx ebx +
cmp esi ebx +
jnb loc_40FA00  +
mov eax ebx +
shl eax 4 +
mov [esp+28h+var_1C] eax +
mov ecx [esp+28h+var_1C] +
mov eax [edi+128h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call sub_474370  +
mov ecx [edi+124h] +
mov edx ebx +
mov [esp+28h+var_24] 0 +
sub edx ecx +
shl ecx 4 +
shl edx 4 +
mov [edi+128h] eax +
add eax ecx +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] eax +
call memset  +
mov eax [edi+128h] +
mov ecx [esp+28h+var_1C] +
lea edx [eax+ecx] +
mov ecx [edi+124h] +
shl ecx 4 +
add eax ecx +
cmp edx eax +
jbe loc_40FA7D  +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 10h +
cmp edx eax +
ja loc_40FA70  +
mov [edi+124h] ebx +
test ebp ebp +
mov eax 1 +
jz loc_40FA9B  +
shl esi 4 +
add esi [edi+128h] +
mov edx [esi] +
test edx edx +
jz loc_40FAA3  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] 4 +
call sub_4742F0  +
mov [esi+4] eax +
mov dword ptr [eax] 0 +
mov edx [esi+4] +
mov eax [edi] +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] eax +
call sub_408440  +
test eax eax +
mov [esi] eax +
setnz al  +
movzx eax al +
jmp loc_40FA9B  +
mov [esp+28h+var_1C] 40h +
jmp loc_40FA0F  +
***
cmp eax 1 +
jz loc_40FB13  +
jb loc_40FB10  +
cmp eax 2 +
jnz loc_40FB02  +
mov eax 1 +
retn   +
sub esp 0Ch +
call abort  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax 2 +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_40FB60  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_42A800  +
test eax eax +
jz loc_40FB54  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40FB4F  +
jmp loc_40FB30  +
***
push ebx  +
mov ebx edx +
sub esp 10h +
mov esi [edx] +
mov edx [esi+4] +
cmp edx 1E9h +
ja loc_40FBB0  +
mov [esi+edx+8] cl +
mov eax [ebx] +
add dword ptr [eax+4] 1 +
add esp 10h +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 1F4h +
mov edi eax +
mov [esp+10h+var_4] ecx +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov edx [edi] +
mov dword ptr [eax+4] 0 +
mov ecx [edx] +
test ecx ecx +
mov ecx [esp+10h+var_4] +
jz loc_40FBF0  +
mov esi [edx+4] +
mov [esi] eax +
mov [edx+4] eax +
mov esi eax +
xor edx edx +
mov [ebx] eax +
jmp loc_40FB95  +
mov [edx] eax +
jmp loc_40FBE0  +
***
push esi  +
push ebx  +
mov esi [eax+0Ch] +
mov ebx eax +
mov eax [esi+4] +
cmp eax 1E9h +
ja loc_40FC61  +
lea edx [eax+1] +
mov [esi+4] edx +
mov edx edi +
sar edx 8 +
mov [esi+eax+8] dl +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_40FC45  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov ecx edi +
mov [edx+eax+8] cl +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax edi +
movzx ecx al +
lea edx [ebx+0Ch] +
lea eax [ebx+8] +
call sub_40FB80  +
pop ebx  +
pop esi  +
pop edi  +
test eax eax +
setnz al  +
movzx eax al +
retn   +
mov ecx edx +
sar ecx 8 +
lea edx [ebx+0Ch] +
lea eax [ebx+8] +
call sub_40FB80  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_40FC23  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov [esp+20h+var_20] edx +
call strlen  +
cmp eax 7Fh +
mov edi eax +
ja loc_40FD10  +
mov edx [esi+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_40FDB0  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov ecx edi +
mov [edx+eax+8] cl +
movsx ecx byte ptr [ebx] +
lea ebp [esi+0Ch] +
lea edi [esi+8] +
test cl cl +
jnz loc_40FCEB  +
jmp loc_40FDA0  +
lea ecx [eax+1] +
mov [edx+4] ecx +
movzx ecx byte ptr [ebx] +
mov [edx+eax+8] cl +
add ebx 1 +
movsx ecx byte ptr [ebx] +
test cl cl +
jz loc_40FDA0  +
mov edx [esi+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
jbe loc_40FCD0  +
mov edx ebp +
mov eax edi +
call sub_40FB80  +
test eax eax +
jnz loc_40FCDD  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0FFh +
ja loc_40FD60  +
mov edx [esi+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_40FDD0  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0DEh +
mov edx [esi+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
jbe loc_40FCAB  +
lea edx [esi+0Ch] +
mov ecx edi +
lea eax [esi+8] +
call sub_40FB80  +
test eax eax +
jnz loc_40FCB7  +
jmp loc_40FD05  +
cmp eax 0FFFFh +
ja loc_40FDED  +
mov edx [esi+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_40FE0E  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0DFh +
mov edx edi +
mov eax esi +
call sub_40FC00  +
test eax eax +
jnz loc_40FCB7  +
jmp loc_40FD05  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esi+0Ch] +
mov ecx edi +
lea eax [esi+8] +
call sub_40FB80  +
test eax eax +
jz loc_40FD05  +
jmp loc_40FCB7  +
lea edx [esi+0Ch] +
mov ecx 0DEh +
lea eax [esi+8] +
call sub_40FB80  +
test eax eax +
jnz loc_40FD33  +
jmp loc_40FD05  +
mov [esp+20h+var_18] eax +
mov eax ds:_iob +
mov [esp+20h+var_1C] offset aIeeeStringLeng +
add eax 40h +
mov [esp+20h+var_20] eax +
call fprintf  +
jmp loc_40FD05  +
lea edx [esi+0Ch] +
mov ecx 0DFh +
lea eax [esi+8] +
call sub_40FB80  +
test eax eax +
jnz loc_40FD87  +
jmp loc_40FD05  +
***
push ebx  +
sub esp 10h +
cmp ecx 0FFFFFFFFh +
mov esi [esp+10h+arg_0] +
jz loc_40FEB1  +
cmp esi 0FFFFFFFFh +
jz loc_40FEB1  +
cmp ecx esi +
jz loc_40FEB1  +
lea edi [eax+4Ch] +
add eax 48h +
test edx edx +
cmovz edi eax +
mov ebx [edi] +
test ebx ebx +
jz loc_40FE74  +
lea esi [esi+0] +
mov eax [ebx+4] +
cmp esi eax +
jb loc_40FE6E  +
mov edx [ebx+8] +
cmp ecx edx +
jbe loc_40FEC0  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_40FE60  +
mov [esp+10h+var_10] 0Ch +
mov [esp+10h+var_4] ecx +
call sub_4742F0  +
mov ecx [esp+10h+var_4] +
mov dword ptr [eax] 0 +
mov edx [edi] +
mov [eax+4] ecx +
mov [eax+8] esi +
test edx edx +
jnz loc_40FEA8  +
jmp loc_40FEAD  +
mov edi edx +
mov edx [edx] +
test edx edx +
jz loc_40FEAD  +
cmp esi [edx+4] +
jnb loc_40FEA0  +
mov [eax] edx +
mov [edi] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp ecx eax +
jnb loc_40FEC7  +
mov [ebx+4] ecx +
cmp esi edx +
jbe loc_40FECE  +
mov [ebx+8] esi +
mov eax [ebx] +
test eax eax +
jz loc_40FEB1  +
mov edx [ebx+8] +
cmp edx [eax+4] +
jnb loc_40FEEA  +
jmp loc_40FEB1  +
mov edx [ebx+8] +
cmp edx [esi+4] +
jb loc_40FEB1  +
mov eax esi +
mov ecx [eax+8] +
cmp ecx edx +
jbe loc_40FEF4  +
mov [ebx+8] ecx +
mov esi [eax] +
mov [esp+10h+var_10] eax +
call free  +
test esi esi +
mov [ebx] esi +
jnz loc_40FEE0  +
jmp loc_40FEB1  +
***
push edi  +
sub esp 1Ch +
xor ecx ecx +
mov eax [esp+1Ch+arg_0] +
mov edx 1 +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
add eax 54h +
call sub_40FF10  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
xor ecx ecx +
mov eax [esp+1Ch+arg_0] +
xor edx edx +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
add eax 54h +
call sub_40FF10  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov eax [esp+20h+arg_4] +
mov esi [esp+20h+arg_0] +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] eax +
lea eax [esi+60h] +
mov [esp+20h+var_20] eax +
call sub_42A4E0  +
test eax eax +
jz loc_4100D0  +
mov ebx [eax+0Ch] +
lea edi [esi+54h] +
movzx eax byte ptr [ebx+28h] +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
shr al 2 +
and eax 1 +
mov [esp+20h+var_1C] eax +
movzx eax byte ptr [ebx+28h] +
and eax 1 +
mov [esp+20h+var_20] eax +
mov eax edi +
call sub_40FF10  +
xor edx edx +
test eax eax +
jz loc_4100C0  +
mov edx [ebx+8] +
mov eax [esi+54h] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax+8] edx +
mov edx [ebx+10h] +
mov [eax+0Ch] edx +
mov edx [ebx+14h] +
mov [eax+10h] edx +
mov edx [ebx+18h] +
mov [eax+14h] edx +
mov edx [ebx+1Ch] +
mov [eax+18h] edx +
mov edx [ebx+20h] +
mov [eax+1Ch] edx +
mov edx [ebx+24h] +
mov [eax+20h] edx +
mov edx [ebx+28h] +
mov [eax+24h] edx +
mov edx 1 +
add esp 20h +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_18] 195Ah +
mov [esp+20h+var_1C] offset a____Binutils_1 +
mov [esp+20h+var_20] offset aHNull +
mov [esp+20h+var_4] eax +
call sub_48C4C0  +
mov eax [esp+20h+var_4] +
jmp loc_410051  +
***
push esi  +
push ebx  +
sub esp 4Ch +
cmp [esp+4Ch+arg_C] 0Bh +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
jz loc_410290  +
xor eax eax +
test ebx ebx +
jz loc_4103E8  +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 1 +
mov [esp+4Ch+var_48] ebx +
add eax 7Ch +
mov [esp+4Ch+var_4C] eax +
call sub_42A4E0  +
test eax eax +
mov ebp eax +
jz loc_410285  +
mov edi [eax+0Ch] +
test edi edi +
jz loc_410430  +
xor ebx ebx +
mov eax 1 +
cmp [edi+4] esi +
jnz loc_410179  +
jmp loc_410253  +
cmp [edi+4] esi +
jz loc_410253  +
test byte ptr [edi+28h] 4 +
mov edi [edi] +
cmovz ebx eax +
test edi edi +
jnz loc_410170  +
mov eax ebx +
and eax 1 +
mov [esp+4Ch+var_2D] al +
mov [esp+4Ch+var_4C] 30h +
call sub_4742F0  +
mov [esp+4Ch+var_34] 30h +
test al 1 +
mov edx eax +
mov edi eax +
jnz loc_41041D  +
test edi 2 +
jnz loc_41040A  +
mov ecx [esp+4Ch+var_34] +
xor eax eax +
shr ecx 2 +
stos   +
test byte ptr [esp+4Ch+var_34] 2 +
jnz loc_410358  +
test byte ptr [esp+4Ch+var_34] 1 +
jnz loc_410350  +
mov eax [ebp+4] +
mov [edx+4] esi +
movzx ecx [esp+4Ch+var_2D] +
mov [edx+10h] eax +
mov eax [esp+4Ch+arg_0] +
shl ecx 2 +
mov esi [eax+58h] +
movzx eax byte ptr [edx+28h] +
mov [edx+8] esi +
and eax 0FFFFFFFBh +
or eax ecx +
mov ecx [esp+4Ch+arg_0] +
mov [edx+28h] al +
lea eax [esi+1] +
mov [ecx+58h] eax +
mov eax [esp+4Ch+arg_C] +
mov [edx+2Ch] eax +
mov eax [ebp+0Ch] +
mov [edx] eax +
mov eax ecx +
xor ecx ecx +
mov [ebp+0Ch] edx +
add eax 54h +
mov edx esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] 0 +
call sub_40FF10  +
test eax eax +
jz loc_410285  +
mov eax [esp+4Ch+arg_0] +
mov edx [ebp+4] +
mov eax [eax+54h] +
mov [eax+0Ch] edx +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebx byte ptr [edi+28h] +
mov ecx [edi+0Ch] +
mov edx [edi+8] +
mov eax [esp+4Ch+arg_0] +
shr bl 2 +
and ebx 1 +
mov [esp+4Ch+var_48] ebx +
movzx ebx byte ptr [edi+28h] +
add eax 54h +
and ebx 1 +
mov [esp+4Ch+var_4C] ebx +
call sub_40FF10  +
test eax eax +
jnz loc_410370  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
jz loc_41045C  +
mov eax [esp+4Ch+arg_0] +
mov esi [eax+98h] +
test esi esi +
jz loc_4102C7  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4102C1  +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] eax +
call strcmp  +
test eax eax +
jz loc_4103C0  +
mov esi [esi] +
test esi esi +
jnz loc_4102A6  +
mov [esp+4Ch+var_4C] 18h +
mov esi 18h +
call sub_4742F0  +
test al 1 +
mov ecx eax +
jnz loc_41044D  +
test cl 2 +
jnz loc_41043C  +
mov edi esi +
xor edx edx +
and edi 0FFFFFFFCh +
mov dword ptr [ecx+edx] 0 +
add edx 4 +
cmp edx edi +
jb loc_4102F2  +
add ecx edx +
test esi 2 +
jz loc_410313  +
xor edi edi +
add ecx 2 +
mov [ecx-2] di +
and esi 1 +
jz loc_41031B  +
mov byte ptr [ecx] 0 +
mov ecx [esp+4Ch+arg_0] +
mov esi [esp+4Ch+arg_0] +
mov edx [ecx+58h] +
lea ecx [edx+1] +
mov [eax+4] edx +
mov [esi+58h] ecx +
mov ecx [esi+98h] +
mov [eax+0Ch] ebx +
mov dword ptr [eax+8] 0 +
mov [eax] ecx +
mov [esi+98h] eax +
mov eax esi +
jmp loc_4103C7  +
mov byte ptr [edi] 0 +
jmp loc_4101DC  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
test byte ptr [esp+4Ch+var_34] 1 +
jz loc_4101DC  +
jmp loc_410350  +
mov eax [esp+4Ch+arg_0] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [eax+4] edx +
mov edx [edi+0Ch] +
mov [eax+8] edx +
mov edx [edi+10h] +
mov [eax+0Ch] edx +
mov edx [edi+14h] +
mov [eax+10h] edx +
mov edx [edi+18h] +
mov [eax+14h] edx +
mov edx [edi+1Ch] +
mov [eax+18h] edx +
mov edx [edi+20h] +
mov [eax+1Ch] edx +
mov edx [edi+24h] +
mov [eax+20h] edx +
mov edx [edi+28h] +
mov [eax+24h] edx +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+4] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 0 +
add eax 54h +
xor ecx ecx +
mov [esp+4Ch+var_4C] 1 +
call sub_40FF10  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [esp+4Ch+var_20] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] offset a__anonU +
mov [esp+4Ch+var_4C] ebx +
call sprintf  +
mov eax 1 +
jmp loc_410124  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub [esp+4Ch+var_34] 2 +
jmp loc_4101BB  +
mov byte ptr [eax] 0 +
lea edi [eax+1] +
mov [esp+4Ch+var_34] 2Fh +
jmp loc_4101AF  +
mov [esp+4Ch+var_2D] 0 +
xor ebx ebx +
jmp loc_41018F  +
xor ebp ebp +
add ecx 2 +
mov [ecx-2] bp +
sub esi 2 +
jmp loc_4102EB  +
mov byte ptr [eax] 0 +
lea ecx [eax+1] +
mov si 17h +
jmp loc_4102E2  +
call abort  +
jmp sub_410470  +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
cmp ebx ecx +
ja loc_4104D9  +
test ebx ebx +
jnz loc_410493  +
cmp ecx 0Fh +
mov bl 10h +
mov edx 140h +
jbe loc_41049F  +
add ebx ebx +
cmp esi ebx +
jnb loc_410493  +
lea edx [ebx+ebx*4] +
shl edx 2 +
mov eax [edi] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] eax +
call sub_474370  +
mov edx [ebp+0] +
mov ecx ebx +
mov [esp+28h+var_24] 0 +
sub ecx edx +
lea ecx [ecx+ecx*4] +
lea edx [edx+edx*4] +
mov [edi] eax +
shl ecx 2 +
lea eax [eax+edx*4] +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call memset  +
mov [ebp+0] ebx +
mov eax [edi] +
lea edx [esi+esi*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
lea eax [eax+edx*4] +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [eax] +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_18] offset aSS_1 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
add esp 1Ch +
retn   +
***
sub esp 24h +
test ecx ecx +
mov ebx [esp+24h+arg_0] +
jz loc_410562  +
movzx esi byte ptr [ecx] +
mov eax [eax] +
mov [esp+24h+var_14] ebx +
mov [esp+24h+var_10] esi +
sub ecx [edx] +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
mov [esp+24h+var_20] offset aS0xLxS0xX +
mov [esp+24h+var_18] ecx +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
mov edx ebx +
pop ebx  +
pop esi  +
jmp sub_4104F0  +
***
sub esp 1Ch +
mov ecx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
cmp ecx 8 +
jz loc_4105E3  +
jbe loc_4105B7  +
cmp ecx 0Ch +
jz loc_4105B0  +
cmp ecx 10h +
mov edx 0Dh +
jnz loc_4105C1  +
mov [esp+1Ch+arg_4] 0 +
add eax 54h +
mov [esp+1Ch+arg_0] 0 +
add esp 1Ch +
jmp sub_40FF10  +
mov edx 0Ch +
jmp loc_410591  +
cmp ecx 4 +
mov edx 0Ah +
jz loc_410591  +
mov eax ds:_iob +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] offset aIeeeUnsupporte +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
xor eax eax +
add esp 1Ch +
retn   +
mov edx 0Bh +
jmp loc_410591  +
***
mov ecx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_8] +
cmp ecx 2 +
jz loc_410670  +
jbe loc_410640  +
cmp ecx 4 +
jz loc_410634  +
cmp ecx 8 +
mov edx 8 +
jnz loc_41064A  +
cmp ebx 1 +
sbb edx 0FFFFFFFFh +
add eax 54h +
mov [esp+18h+arg_0] ebx +
mov [esp+18h+arg_4] 0 +
add esp 18h +
pop ebx  +
jmp sub_40FF10  +
mov edx 6 +
jmp loc_410616  +
cmp ecx 1 +
mov edx 2 +
jz loc_410616  +
mov eax ds:_iob +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_14] offset aIeeeUnsuppor_0 +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov edx 4 +
jmp loc_410616  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] eax +
call sub_4105F0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4105F0  +
add esp 1Ch +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_410977  +
lea eax [ebx+8] +
lea ebp [ebx+0Ch] +
mov [esp+1Ch+var_10] eax +
mov edx [esi+2Ch] +
test edx edx +
jz loc_41096D  +
mov eax [ebx+18h] +
test eax eax +
jz loc_410A05  +
lea eax [ebx+18h] +
mov [ebx+8] eax +
mov eax [ebx+1Ch] +
mov [ebx+0Ch] eax +
mov edi [ebx+5Ch] +
lea edx [edi+1] +
mov [ebx+5Ch] edx +
mov edx [eax+4] +
cmp edx 1E9h +
ja loc_410997  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4109B0  +
mov edx [esi+10h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4109B0  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_4109C1  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F2h +
mov edx [esi+8] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4109B0  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_4109E0  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0CEh +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4109B0  +
mov eax [esi+2Ch] +
sub eax 7 +
cmp eax 4 +
ja loc_410A00  +
jmp ds:off_499AD4[eax*4]  +
mov edx 55h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4109B0  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4109B0  +
mov esi [esi] +
test esi esi +
jnz loc_410874  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 45h +
jmp loc_410955  +
mov edx 53h +
jmp loc_410955  +
mov eax [esp+1Ch+var_10] +
mov ecx 0F0h +
mov edx ebp +
call sub_40FB80  +
test eax eax +
jnz loc_4108B9  +
nop   +
mov dword ptr [ebx+4] 1 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+var_10] +
mov ecx 0F2h +
mov edx ebp +
call sub_40FB80  +
test eax eax +
jnz loc_4108F8  +
jmp loc_4109B0  +
mov eax [esp+1Ch+var_10] +
mov ecx 0CEh +
mov edx ebp +
call sub_40FB80  +
test eax eax +
jnz loc_410926  +
jmp loc_4109B0  +
call abort  +
mov [esp+1Ch+var_1C] 1F4h +
call sub_4742F0  +
lea edx [ebx+18h] +
mov dword ptr [eax] 0 +
mov [ebx+18h] eax +
mov [ebx+1Ch] eax +
mov [ebx+8] edx +
xor edx edx +
mov [ebx+0Ch] eax +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 2 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4109B0  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4109B0  +
mov eax [ebx+0Ch] +
jmp loc_410896  +
***
mov esi eax +
push ebx  +
sub esp 10h +
mov ebx [eax+54h] +
test ebx ebx +
jz loc_410AE0  +
test edx edx +
jz loc_410AAF  +
mov eax [ebx+10h] +
test eax eax +
jz loc_410AAF  +
test byte ptr [ebx+24h] 4 +
jnz loc_410AC8  +
mov edi [esi+18h] +
test edi edi +
jz loc_410B10  +
lea edx [esi+18h] +
test eax eax +
jz loc_410AAF  +
mov ecx [edx] +
test ecx ecx +
jz loc_410AD8  +
mov ecx [edx+4] +
mov [ecx] eax +
mov eax [ebx+14h] +
mov [edx+4] eax +
mov eax [ebx] +
mov edi [ebx+4] +
mov [esp+14h+var_14] ebx +
mov [esi+54h] eax +
call free  +
mov eax edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+28h] +
test edx edx +
jz loc_410B70  +
lea edx [esi+28h] +
jmp loc_410A9A  +
mov [edx] eax +
jmp loc_410AA9  +
mov [esp+14h+var_C] 10C6h +
mov [esp+14h+var_10] offset a____Binutils_1 +
mov [esp+14h+var_14] offset aTsNull +
mov [esp+14h+var_8] edx +
call sub_48C4C0  +
mov edx [esp+14h+var_8] +
jmp loc_410A7F  +
mov [esp+14h+var_14] 1F4h +
lea edi [esi+18h] +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+0Ch] eax +
mov [esi+8] edi +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 2 +
mov eax esi +
call sub_4106E0  +
test eax eax +
jnz loc_410B54  +
xor eax eax +
jmp loc_410AC1  +
mov edx offset unk_499AD3 +
mov eax esi +
call sub_40FC80  +
test eax eax +
jz loc_410B4D  +
mov eax [ebx+10h] +
mov edx edi +
jmp loc_410A9A  +
mov [esp+14h+var_14] 1F4h +
lea edi [esi+28h] +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov [esi+0Ch] eax +
mov [esi+8] edi +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 1 +
mov eax esi +
call sub_4106E0  +
test eax eax +
jz loc_410B4D  +
mov edx [esi+14h] +
mov eax esi +
call sub_40FC80  +
test eax eax +
jnz loc_410B64  +
xor eax eax +
jmp loc_410AC1  +
***
sub esp 0Ch +
mov edx 1 +
mov eax [esp+0Ch+arg_0] +
call sub_410A70  +
mov eax 1 +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
xor edx edx +
mov eax [esp+0Ch+arg_0] +
call sub_410A70  +
mov eax 1 +
add esp 0Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
cmp dword ptr [esi+0ACh] 1 +
jz loc_410C3F  +
mov [esp+10h+var_8] 1BB4h +
mov [esp+10h+var_C] offset a____Binutils_1 +
mov [esp+10h+var_10] offset aInfoBlock_dept +
call sub_48C4C0  +
mov [esp+10h+var_10] 18h +
call sub_4742F0  +
mov ecx 18h +
test al 1 +
mov edi eax +
mov edx eax +
jnz loc_410D25  +
test dl 2 +
jnz loc_410D36  +
mov ebx ecx +
xor eax eax +
and ebx 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax ebx +
jb loc_410C6C  +
add edx eax +
test cl 2 +
jz loc_410C8A  +
xor ebx ebx +
add edx 2 +
mov [edx-2] bx +
and ecx 1 +
jz loc_410C92  +
mov byte ptr [edx] 0 +
mov eax [esp+10h+arg_4] +
mov edx 1 +
mov dword ptr [edi] 0 +
mov [edi+4] eax +
mov eax [esi+54h] +
movzx eax byte ptr [eax+24h] +
shr al 1 +
and eax 1 +
mov [edi+0Ch] eax +
mov eax esi +
call sub_410A70  +
mov ebx [esi+0C8h] +
test ebx ebx +
mov edx eax +
mov [edi+8] eax +
mov eax [esp+10h+arg_8] +
mov [edi+10h] eax +
mov eax [esp+10h+arg_C] +
mov [edi+14h] eax +
jnz loc_410CE2  +
jmp loc_410D47  +
mov ebx ecx +
mov ecx [ebx] +
test ecx ecx +
jnz loc_410CE0  +
mov [ebx] edi +
mov eax [esi+0BCh] +
lea ebx [esi+0BCh] +
test eax eax +
jz loc_410D4F  +
mov ecx [esi+0C0h] +
mov [esi+8] ebx +
mov eax esi +
mov [esi+0Ch] ecx +
call sub_4106E0  +
xor edx edx +
test eax eax +
jz loc_410D1C  +
add dword ptr [esi+0C4h] 1 +
mov dl 1 +
add esp 10h +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov cl 17h +
test dl 2 +
mov byte ptr [eax] 0 +
jz loc_410C65  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_410C65  +
lea ebx [esi+0C8h] +
jmp loc_410CE8  +
mov [esp+10h+var_10] 1F4h +
call sub_4742F0  +
mov edx [edi+8] +
mov dword ptr [eax] 0 +
mov ecx eax +
mov dword ptr [eax+4] 0 +
mov [esi+0BCh] eax +
mov [esi+0C0h] eax +
jmp loc_410D00  +
***
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
cmp ecx 0FFFFFFFFh +
mov edx [esp+24h+arg_C] +
jz loc_410E14  +
mov ebp [ebx+5Ch] +
test esi esi +
lea eax [ebp+1] +
mov [ebx+5Ch] eax +
mov eax offset unk_499AD3 +
cmovz esi eax +
test edx edx +
jz loc_410EA4  +
mov eax [edx] +
test eax eax +
jz loc_410EE0  +
mov [ebx+8] edx +
mov eax [edx+4] +
mov [ebx+0Ch] eax +
mov ecx [esp+24h+arg_8] +
lea eax [ebx+54h] +
mov edx [esp+24h+arg_4] +
mov [esp+24h+var_20] ecx +
mov ecx [esp+24h+arg_0] +
mov [esp+24h+var_24] edx +
mov edx edi +
call sub_40FF10  +
test eax eax +
jz loc_410E0A  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_410E22  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F0h +
mov edx ebp +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_410E38  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [eax+58h] +
lea eax [edi+1] +
mov [ebx+58h] eax +
jmp loc_410D96  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_410E0A  +
jmp loc_410DFD  +
mov edx esi +
mov eax ebx +
lea esi [esi+0] +
call sub_40FC80  +
test eax eax +
jz loc_410E0A  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_410F10  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F2h +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_410E0A  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_410FE8  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0CEh +
mov edx ebp +
mov eax ebx +
call sub_4106E0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_410E0C  +
mov ecx [esp+24h+arg_8] +
test ecx ecx +
jz loc_410EC8  +
mov edx [ebx+28h] +
test edx edx +
jz loc_410F90  +
lea eax [ebx+28h] +
mov [ebx+8] eax +
mov eax [ebx+2Ch] +
mov [ebx+0Ch] eax +
jmp loc_410DC4  +
mov eax [ebx+18h] +
test eax eax +
jz loc_410F30  +
lea eax [ebx+18h] +
mov [ebx+8] eax +
mov eax [ebx+1Ch] +
mov [ebx+0Ch] eax +
jmp loc_410DC4  +
mov [esp+24h+var_24] 1F4h +
mov [esp+24h+var_18] edx +
call sub_4742F0  +
mov edx [esp+24h+var_18] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [edx] eax +
mov [edx+4] eax +
jmp loc_410DBB  +
lea edx [ebx+0Ch] +
mov ecx 0F2h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_410E0A  +
jmp loc_410E65  +
mov [esp+24h+var_24] 1F4h +
call sub_4742F0  +
lea edx [ebx+18h] +
mov dword ptr [eax] 0 +
mov [ebx+18h] eax +
mov [ebx+1Ch] eax +
mov [ebx+8] edx +
xor edx edx +
mov [ebx+0Ch] eax +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 2 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_410E0A  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jnz loc_410DC4  +
jmp loc_410E0A  +
mov [esp+24h+var_24] 1F4h +
call sub_4742F0  +
lea edx [ebx+28h] +
mov dword ptr [eax] 0 +
mov [ebx+28h] eax +
mov [ebx+2Ch] eax +
mov [ebx+8] edx +
xor edx edx +
mov [ebx+0Ch] eax +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 1 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_410E0A  +
mov edx [ebx+14h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jnz loc_410DC4  +
jmp loc_410E0A  +
lea edx [ebx+0Ch] +
mov ecx 0CEh +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_410E0A  +
jmp loc_410E8E  +
***
push esi  +
mov edi offset aLongLongDouble +
mov [esp+arg_1C] 0 +
jmp loc_4110B4  +
***
mov edi offset aVoid_0 +
mov esi [esp+arg_60] +
mov edi offset aUnsignedChar_0 +
mov esi [esp+arg_60] +
mov edi offset aSignedShortInt +
mov ecx 11h +
cmps   +
jz loc_411511  +
mov esi [esp+arg_60] +
mov edi offset aShort_0 +
mov ecx 6 +
cmps   +
jz loc_411539  +
mov esi [esp+arg_60] +
mov edi offset aShortInt_0 +
mov ecx 0Ah +
cmps   +
jz loc_41154D  +
mov esi [esp+arg_60] +
mov edi offset aSignedShort +
mov ecx 0Dh +
cmps   +
jnz sub_411296  +
mov ebp 18h +
jmp loc_4110AC  +
***
mov esi [esp+arg_60] +
mov esi [esp+arg_60] +
mov edi offset aUnsignedLong_1 +
mov ecx 0Eh +
cmps   +
jz loc_4114FD  +
mov esi [esp+arg_60] +
mov edi offset aLongUnsigned_0 +
mov ecx 12h +
cmps   +
jz loc_4114FD  +
mov esi [esp+arg_60] +
mov edi offset aUnsigned +
mov ecx 9 +
cmps   +
jz loc_411543  +
mov esi [esp+arg_60] +
mov edi offset aUnsignedInt_0 +
mov ecx 0Dh +
cmps   +
jnz sub_411296  +
mov ebp 12h +
jmp loc_4110AC  +
***
mov esi [esp+arg_60] +
mov esi [esp+arg_60] +
mov edi offset aFloat_0 +
mov edi offset aDouble_0 +
mov edi offset aLongDouble_0 +
mov esi [esp+arg_60] +
mov edi offset aSignedLong +
mov ecx 0Ch +
cmps   +
jz loc_411525  +
mov esi [esp+arg_60] +
mov edi offset aInt_3 +
mov ecx 4 +
cmps   +
jz loc_41152F  +
mov esi [esp+arg_60] +
mov edi offset aLong_0 +
mov ecx 5 +
cmps   +
jz loc_4114F3  +
mov esi [esp+arg_60] +
mov edi offset aLongInt_0 +
mov ecx 9 +
cmps   +
jnz sub_411296  +
mov ebp 14h +
jmp loc_4110AC  +
mov ebp 7 +
jmp loc_4110AC  +
mov ebp 5 +
jmp loc_4110AC  +
mov ebp 4 +
jmp loc_4110AC  +
mov ebp 2 +
jmp loc_4110AC  +
mov ebp 6 +
jmp loc_4110AC  +
mov ebp 10h +
jmp loc_4110AC  +
***
mov ebp 15h +
jmp loc_4110AC  +
***
mov ebp 11h +
jmp loc_4110AC  +
***
mov ebp 17h +
jmp loc_4110AC  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov edx [ebx+54h] +
test edx edx +
jz loc_4115D5  +
mov eax [edx+18h] +
test eax eax +
jz loc_4115D5  +
movzx ecx byte ptr [edx+24h] +
mov eax 1 +
test cl 8 +
jnz loc_4115BF  +
and ecx 4 +
jz loc_4115C5  +
mov esi [ebx+28h] +
test esi esi +
jz loc_411600  +
add ebx 28h +
mov eax [edx+18h] +
test eax eax +
jz loc_4115AC  +
mov ecx [ebx] +
test ecx ecx +
jz loc_4115F6  +
mov ecx [ebx+4] +
mov [ecx] eax +
mov eax [edx+1Ch] +
mov [ebx+4] eax +
mov dword ptr [edx+18h] 0 +
mov eax 1 +
mov dword ptr [edx+1Ch] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+18h] +
test eax eax +
jz loc_411660  +
add ebx 18h +
jmp loc_411594  +
mov [esp+14h+var_C] 1799h +
mov [esp+14h+var_10] offset a____Binutils_1 +
mov [esp+14h+var_14] offset aInfoType_sta_1 +
call sub_48C4C0  +
mov edx [ebx+54h] +
jmp loc_411577  +
mov [ebx] eax +
jmp loc_4115A6  +
mov [esp+14h+var_14] 1F4h +
lea esi [ebx+28h] +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov [ebx+28h] eax +
mov [ebx+2Ch] eax +
mov [ebx+0Ch] eax +
mov [ebx+8] esi +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 1 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_411644  +
xor eax eax +
jmp loc_4115BF  +
mov edx [ebx+14h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_41163D  +
mov edx [ebx+54h] +
mov ebx esi +
jmp loc_411594  +
mov [esp+14h+var_14] 1F4h +
lea esi [ebx+18h] +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov [ebx+18h] eax +
mov [ebx+1Ch] eax +
mov [ebx+0Ch] eax +
mov [ebx+8] esi +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 2 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41163D  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jnz loc_411652  +
xor eax eax +
jmp loc_4115BF  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+58h+arg_4] +
mov esi [esp+58h+arg_8] +
test eax eax +
jz loc_4118C8  +
mov [esp+58h+var_54] eax +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_4C] edx +
mov [esp+58h+var_50] 1 +
add eax 7Ch +
mov [esp+58h+var_58] eax +
call sub_42A4E0  +
test eax eax +
mov [esp+58h+var_3C] eax +
jz loc_411830  +
mov eax [esp+58h+var_3C] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_411851  +
xor ebp ebp +
xor ebx ebx +
mov edx 1 +
jmp loc_41172D  +
test byte ptr [eax+28h] 4 +
mov eax [eax] +
cmovz ebx edx +
test eax eax +
jz loc_41173A  +
cmp [eax+4] esi +
jnz loc_411720  +
mov ebp eax +
mov eax [eax] +
test eax eax +
jnz loc_41172D  +
test ebp ebp +
jz loc_411853  +
movzx eax byte ptr [ebp+28h] +
shr al 2 +
and eax 1 +
cmp ebx eax +
jz loc_41176C  +
mov [esp+58h+var_50] 16F4h +
mov [esp+58h+var_54] offset a____Binutils_1 +
mov [esp+58h+var_58] offset aLocalpNtType_l +
call sub_48C4C0  +
mov esi [ebp+2Ch] +
test esi esi +
jz loc_411840  +
mov ecx [ebp+8] +
xor esi esi +
lea eax [esp+58h+var_34] +
mov edx [esp+58h+arg_4] +
mov dword ptr [ebp+2Ch] 0 +
mov [esp+58h+var_4C] eax +
mov eax [esp+58h+arg_10] +
mov [esp+58h+var_50] ebx +
mov [esp+58h+var_54] 1 +
mov [esp+58h+var_34] 0 +
mov [esp+58h+var_58] eax +
mov eax [esp+58h+arg_0] +
mov [esp+58h+var_30] 0 +
call sub_410D80  +
test eax eax +
jz loc_411830  +
cmp [esp+58h+arg_C] 1 +
mov eax [esp+58h+arg_0] +
sbb edx edx +
and edx 2 +
add edx 53h +
call sub_4106E0  +
test eax eax +
jz loc_411830  +
mov edx [esp+58h+arg_10] +
mov eax [esp+58h+arg_0] +
call sub_4106E0  +
test eax eax +
jz loc_411830  +
test esi esi +
jz loc_4118EC  +
mov eax [esp+58h+arg_0] +
mov ecx [eax+54h] +
mov eax [esp+58h+arg_4] +
shl esi 3 +
mov edx [esp+58h+var_30] +
mov [ecx+0Ch] eax +
mov eax [esp+58h+var_34] +
mov [ecx+1Ch] edx +
mov [ecx+18h] eax +
movzx eax byte ptr [ecx+24h] +
and eax 0FFFFFFF7h +
or eax esi +
mov [ecx+24h] al +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
test ebx ebx +
mov ecx [ebp+8] +
setz al  +
mov esi eax +
jmp loc_41177C  +
xor ebx ebx +
mov [esp+58h+var_58] 30h +
call sub_4742F0  +
mov edx 30h +
test al 1 +
mov ebp eax +
mov edi eax +
jnz loc_41194F  +
test edi 2 +
jnz loc_41193E  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_411930  +
and edx 1 +
jnz loc_411928  +
mov edi [esp+58h+var_3C] +
mov [ebp+4] esi +
xor esi esi +
mov eax [edi+4] +
mov [ebp+10h] eax +
mov eax [edi+0Ch] +
mov [ebp+0] eax +
mov eax [esp+58h+arg_0] +
mov [edi+0Ch] ebp +
mov edi [esp+58h+arg_0] +
mov ecx [eax+58h] +
lea eax [ecx+1] +
mov [ebp+8] ecx +
mov [edi+58h] eax +
jmp loc_41177C  +
lea ebx [esp+58h+var_2C] +
mov [esp+58h+var_50] esi +
mov [esp+58h+var_54] offset a__anonU +
mov [esp+58h+var_58] ebx +
call sprintf  +
mov eax ebx +
mov edx 1 +
jmp loc_4116D9  +
mov edi [esp+58h+arg_0] +
mov ecx [edi+54h] +
mov edx [ecx+4] +
mov [ebp+8] edx +
mov edx [ecx+8] +
mov [ebp+0Ch] edx +
mov edx [ecx+10h] +
mov [ebp+14h] edx +
mov edx [ecx+14h] +
mov [ebp+18h] edx +
mov edx [ecx+18h] +
mov [ebp+1Ch] edx +
mov edx [ecx+1Ch] +
mov [ebp+20h] edx +
mov edx [ecx+20h] +
mov [ebp+24h] edx +
mov edx [ecx+24h] +
mov [ebp+28h] edx +
jmp loc_4117F9  +
mov byte ptr [edi] 0 +
jmp loc_411897  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
jmp loc_41188E  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_41187C  +
mov byte ptr [eax] 0 +
lea edi [eax+1] +
mov dl 2Fh +
jmp loc_411870  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_0] +
mov eax [ebx+54h] +
mov ebp [eax+8] +
movzx eax byte ptr [eax+24h] +
mov ecx eax +
shr al 2 +
and ecx 1 +
mov esi eax +
mov eax ebx +
mov [esp+38h+var_20] ecx +
and esi 1 +
call sub_410A70  +
test esi esi +
mov [esp+38h+var_1C] eax +
jnz loc_4119D7  +
mov ecx [esp+38h+var_1C] +
lea edx [ebx+0A0h] +
lea eax [ebx+9Ch] +
call sub_410470  +
test eax eax +
mov edi eax +
jz loc_411A02  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4119D9  +
mov edi [esp+38h+var_20] +
lea eax [ebx+54h] +
mov ecx ebp +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] edi +
call sub_40FF10  +
jmp loc_411A04  +
xor edi edi +
mov eax [esp+38h+var_20] +
xor edx edx +
mov ecx 0FFFFFFFFh +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] eax +
mov eax ebx +
call sub_410D80  +
test eax eax +
jnz loc_411A10  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 6Eh +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411A02  +
mov edx 2 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411A02  +
mov edx [esp+38h+var_1C] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411A02  +
test esi esi +
mov eax 1 +
jnz loc_411A04  +
mov edx [ebx+54h] +
mov edx [edx+4] +
mov [edi+0Ch] edx +
jmp loc_411A04  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_0] +
mov eax [ebx+54h] +
mov ebp [eax+8] +
movzx eax byte ptr [eax+24h] +
mov ecx eax +
shr al 2 +
and ecx 1 +
mov esi eax +
mov eax ebx +
mov [esp+38h+var_20] ecx +
and esi 1 +
call sub_410A70  +
test esi esi +
mov [esp+38h+var_1C] eax +
jnz loc_411AD7  +
mov ecx [esp+38h+var_1C] +
lea edx [ebx+0A0h] +
lea eax [ebx+9Ch] +
call sub_410470  +
test eax eax +
mov edi eax +
jz loc_411B02  +
mov edx [eax+8] +
test edx edx +
jz loc_411AD9  +
mov edi [esp+38h+var_20] +
lea eax [ebx+54h] +
mov ecx ebp +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] edi +
call sub_40FF10  +
jmp loc_411B04  +
xor edi edi +
mov eax [esp+38h+var_20] +
xor edx edx +
mov ecx 0FFFFFFFFh +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] eax +
mov eax ebx +
call sub_410D80  +
test eax eax +
jnz loc_411B10  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 6Eh +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411B02  +
mov edx 1 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411B02  +
mov edx [esp+38h+var_1C] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411B02  +
test esi esi +
mov eax 1 +
jnz loc_411B04  +
mov edx [ebx+54h] +
mov edx [edx+4] +
mov [edi+8] edx +
jmp loc_411B04  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+18h+arg_0] +
mov eax [ebx+54h] +
movzx eax byte ptr [eax+24h] +
shr al 2 +
mov esi eax +
mov eax ebx +
call sub_410A70  +
and esi 1 +
xor edx edx +
mov [esp+18h+var_C] 0 +
mov ecx 0FFFFFFFFh +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0 +
mov edi eax +
mov eax ebx +
call sub_410D80  +
test eax eax +
jnz loc_411BC0  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx 73h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411BB4  +
mov edx 4 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411BB4  +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_411BB6  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+38h+arg_0] +
mov ebx [esp+38h+arg_4] +
mov edi [esp+38h+arg_8] +
mov eax esi +
call sub_410A70  +
mov edx [esi+54h] +
movzx eax byte ptr [edx+24h] +
mov ebp [edx+8] +
mov edx 1 +
shr al 2 +
and eax 1 +
mov [esp+38h+var_24] eax +
mov eax esi +
call sub_410A70  +
cmp ebx edi +
mov [esp+38h+var_20] eax +
jge loc_411C4E  +
mov eax edi +
sub eax ebx +
add eax 1 +
imul ebp eax +
mov edx [esp+38h+var_24] +
test edx edx +
jnz loc_411CC0  +
mov ecx [esp+38h+var_20] +
lea edx [esi+0A0h] +
lea eax [esi+9Ch] +
call sub_410470  +
test eax eax +
mov [esp+38h+var_1C] eax +
jz loc_411D0B  +
mov eax [esp+38h+var_1C] +
mov eax [eax+10h] +
test eax eax +
jnz loc_411C8A  +
jmp loc_411CC8  +
mov eax [eax] +
test eax eax +
jz loc_411CC8  +
cmp [eax+8] ebx +
lea esi [esi+0] +
jnz loc_411C84  +
cmp [eax+0Ch] edi +
jnz loc_411C84  +
mov edx [eax+4] +
mov ecx ebp +
mov [esp+38h+arg_4] 0 +
lea eax [esi+54h] +
mov [esp+38h+arg_0] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_40FF10  +
mov [esp+38h+var_1C] 0 +
mov eax [esp+38h+var_24] +
xor edx edx +
mov ecx 0FFFFFFFFh +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_30] eax +
mov eax esi +
call sub_410D80  +
test eax eax +
jz loc_411D0B  +
cmp ebx 1 +
mov eax esi +
sbb edx edx +
and edx 17h +
add edx 43h +
call sub_4106E0  +
test eax eax +
jnz loc_411D17  +
xor ebp ebp +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+38h+var_20] +
mov eax esi +
call sub_4106E0  +
test eax eax +
jz loc_411D0B  +
test ebx ebx +
jz loc_411D37  +
mov edx ebx +
mov eax esi +
call sub_4106E0  +
test eax eax +
jz loc_411D0B  +
lea edx [edi+1] +
mov eax esi +
call sub_4106E0  +
test eax eax +
jz loc_411D0B  +
mov eax [esp+38h+var_24] +
mov ebp 1 +
test eax eax +
jnz loc_411D0D  +
mov [esp+38h+var_38] 10h +
call sub_4742F0  +
mov ecx [esp+38h+var_1C] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov edx [esi+54h] +
mov edx [edx+4] +
mov [eax+8] ebx +
mov [eax+0Ch] edi +
mov [eax+4] edx +
mov edx [ecx+10h] +
mov [eax] edx +
mov [ecx+10h] eax +
jmp loc_411D0D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov eax [ebx+54h] +
mov esi [eax+8] +
movzx eax byte ptr [eax+24h] +
mov edi eax +
shr al 2 +
and edi 1 +
mov ebp eax +
mov eax ebx +
call sub_410A70  +
mov eax edi +
and ebp 1 +
movzx eax al +
xor edx edx +
mov [esp+28h+var_24] eax +
mov ecx 0FFFFFFFFh +
mov eax ebx +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] ebp +
mov [esp+28h+var_28] esi +
call sub_410D80  +
test eax eax +
jnz loc_411E00  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 52h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411DF5  +
mov edx [esp+28h+arg_4] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411DF5  +
mov edx [esp+28h+arg_8] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411DF5  +
mov edx edi +
mov eax ebx +
xor edx 1 +
movzx edx dl +
call sub_4106E0  +
test eax eax +
jz loc_411DF5  +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_411DF7  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
test esi esi +
jle loc_412020  +
mov eax [esp+3Ch+arg_4] +
xor esi esi +
shl eax 2 +
mov [esp+3Ch+var_3C] eax +
call sub_4742F0  +
mov edi eax +
mov eax [esp+3Ch+arg_4] +
lea ebp [eax-1] +
mov eax [ebx+54h] +
mov edx 1 +
test byte ptr [eax+24h] 4 +
mov eax 1 +
cmovnz esi eax +
mov eax ebx +
call sub_410A70  +
mov [edi+ebp*4] eax +
sub ebp 1 +
cmp ebp 0FFFFFFFFh +
jnz loc_411E91  +
mov eax [ebx+54h] +
mov edx 1 +
test byte ptr [eax+24h] 4 +
mov eax ebx +
jnz loc_411F30  +
call sub_410A70  +
test esi 1 +
mov ecx eax +
mov [esp+3Ch+var_20] eax +
jnz loc_41203A  +
mov eax [esp+3Ch+arg_4] +
shr eax 1Fh +
test al al +
jz loc_41203A  +
lea edx [ebx+0A0h] +
lea eax [ebx+9Ch] +
call sub_410470  +
test eax eax +
mov ebp eax +
jz loc_411F95  +
mov edx [eax+4] +
test edx edx +
jz loc_411F40  +
lea eax [ebx+54h] +
xor ecx ecx +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] 1 +
call sub_40FF10  +
jmp loc_411F97  +
call sub_410A70  +
mov esi 1 +
xor ebp ebp +
mov [esp+3Ch+var_20] eax +
lea eax [esp+3Ch+var_14] +
xor edx edx +
mov [esp+3Ch+var_30] eax +
mov ecx 0FFFFFFFFh +
mov eax ebx +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_3C] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_10] 0 +
call sub_410D80  +
test eax eax +
jz loc_411F8D  +
mov edx 78h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_411FA0  +
mov [esp+3Ch+var_3C] edi +
call free  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 41h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411F8D  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411F8D  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411F8D  +
mov edx [esp+3Ch+var_20] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411F8D  +
mov edx [esp+3Ch+arg_8] +
test edx edx +
setnz al  +
movzx edx al +
add edx [esp+3Ch+arg_4] +
mov byte ptr [esp+3Ch+var_20] al +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411F8D  +
mov eax [esp+3Ch+arg_4] +
test eax eax +
jle loc_412049  +
xor esi esi +
jmp loc_41200D  +
add esi 1 +
cmp esi [esp+3Ch+arg_4] +
jz loc_412041  +
mov edx [edi+esi*4] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_412004  +
jmp loc_411F95  +
mov ecx [esp+3Ch+arg_4] +
xor edi edi +
xor esi esi +
mov eax edi +
test ecx ecx +
cmovz eax [esp+3Ch+arg_8] +
mov [esp+3Ch+arg_8] eax +
jmp loc_411EB7  +
xor ebp ebp +
jmp loc_411F40  +
mov [esp+3Ch+var_3C] edi +
call free  +
cmp byte ptr [esp+3Ch+var_20] 0 +
jz loc_412064  +
mov edx 21h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411F95  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_411F95  +
mov ecx [ebx+54h] +
test ebp ebp +
mov eax [esp+3Ch+var_14] +
mov edx [esp+3Ch+var_10] +
mov [ecx+10h] eax +
mov [ecx+14h] edx +
jz loc_41209A  +
mov eax [ecx+4] +
mov [ebp+4] eax +
mov eax 1 +
jmp loc_411F97  +
mov eax 1 +
jmp loc_411F97  +
***
push ebx  +
mov eax [esp+arg_4] +
mov ebx [esp+arg_0] +
mov esi [esp+arg_8] +
mov edi [esp+arg_C] +
test eax eax +
jz loc_4120D0  +
xor edx edx +
mov eax ebx +
call sub_410A70  +
mov [esp+arg_8] edi +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_411E60  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov eax [ebx+54h] +
movzx eax byte ptr [eax+24h] +
shr al 2 +
mov edi eax +
mov eax ebx +
call sub_410A70  +
and edi 1 +
cmp eax 1Fh +
mov esi eax +
jbe loc_4121D1  +
test edi edi +
jnz loc_412162  +
lea edx [ebx+0A0h] +
mov ecx esi +
lea eax [ebx+9Ch] +
call sub_410470  +
test eax eax +
mov ebp eax +
jz loc_412191  +
mov edx [eax] +
test edx edx +
jz loc_412164  +
lea eax [ebx+54h] +
mov ecx 4 +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] 1 +
call sub_40FF10  +
jmp loc_412193  +
xor ebp ebp +
xor edx edx +
mov ecx 0FFFFFFFFh +
mov [esp+28h+var_1C] 0 +
mov eax ebx +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] 4 +
call sub_410D80  +
test eax eax +
jnz loc_4121A0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 50h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412191  +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412191  +
test edi edi +
mov eax 1 +
jnz loc_412193  +
mov edx [ebx+54h] +
mov edx [edx+4] +
mov [ebp+0] edx +
jmp loc_412193  +
lea edx [eax+20h] +
xor ecx ecx +
lea eax [ebx+54h] +
mov [esp+28h+var_24] 0 +
mov [esp+28h+var_28] 1 +
call sub_40FF10  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_4120F0  +
xor edx edx +
test eax eax +
jz loc_41221F  +
mov eax [ebx+54h] +
mov dl 1 +
or byte ptr [eax+24h] 2 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_C] +
mov esi [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_8] +
mov ebx [eax+98h] +
mov [esp+3Ch+var_18] eax +
mov [esp+3Ch+var_24] ecx +
test ebx ebx +
jz loc_4123A9  +
mov [esp+3Ch+var_1C] ebp +
jmp loc_41226D  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4123A5  +
test esi esi +
jz loc_412390  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_412263  +
movzx edx byte ptr [eax] +
cmp [esi] dl +
jnz loc_412263  +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] esi +
call strcmp  +
test eax eax +
jnz loc_412263  +
mov eax [ebx+8] +
test eax eax +
jz loc_412527  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
jz loc_4124D0  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_412370  +
mov eax [eax] +
test eax eax +
jz loc_41253F  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_412520  +
movzx edx byte ptr [ecx] +
cmp [eax] dl +
jnz loc_412520  +
mov edi [ebx+14h] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] edi +
mov edi [edi] +
cmp [edx] edi +
jnz loc_412520  +
mov [esp+3Ch+var_14] ebx +
mov ebx [esp+3Ch+var_1C] +
xor edi edi +
mov [esp+3Ch+var_10] esi +
mov esi [esp+3Ch+var_20] +
mov [esp+3Ch+var_20] ebx +
jmp loc_412342  +
mov eax [esp+3Ch+var_20] +
add edi 1 +
lea ecx ds:0[edi*4] +
mov eax [eax+edi*4] +
test eax eax +
jz loc_412503  +
mov ecx [ebp+edi*4+0] +
test ecx ecx +
jz loc_4124C0  +
movzx edx byte ptr [ecx] +
cmp [eax] dl +
jnz loc_4124C0  +
mov edx [esp+3Ch+var_24] +
mov ebx [esi+edi*4] +
cmp [edx+edi*4] ebx +
jnz loc_4124C0  +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jz loc_412302  +
mov eax [esp+3Ch+var_1C] +
lea ecx ds:0[edi*4] +
mov ebx [esp+3Ch+var_14] +
mov esi [esp+3Ch+var_10] +
mov eax [eax+edi*4] +
test eax eax +
jz loc_41250B  +
test esi esi +
jz loc_412263  +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_20] 1 +
mov [esp+3Ch+var_1C] 0FFFFFFFFh +
jmp loc_4123B9  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_412293  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_41226D  +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_1C] 0FFFFFFFFh +
mov [esp+3Ch+var_20] 0 +
test ebp ebp +
jz loc_4123EE  +
mov edi [ebp+0] +
test edi edi +
jz loc_4123EE  +
mov eax [esp+3Ch+var_24] +
mov ecx [eax] +
test ecx ecx +
jnz loc_412600  +
xor edx edx +
mov ecx eax +
jmp loc_4123E3  +
mov edx [ecx+eax*4] +
cmp edx eax +
jnz loc_412600  +
lea eax [edx+1] +
mov edx [ebp+eax*4+0] +
test edx edx +
jnz loc_4123D8  +
mov eax [esp+3Ch+var_20] +
mov edx esi +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] 0 +
call sub_410D80  +
test eax eax +
jz loc_4124AF  +
mov eax [esp+3Ch+var_18] +
mov edx 45h +
call sub_4106E0  +
test eax eax +
jz loc_4124AF  +
mov eax [esp+3Ch+var_18] +
mov edx 4 +
call sub_4106E0  +
test eax eax +
jz loc_4124AF  +
test ebp ebp +
mov ecx 1 +
jz loc_41254B  +
mov edx [ebp+0] +
test edx edx +
jz loc_41254B  +
mov edi 4 +
xor eax eax +
mov [esp+3Ch+var_14] ebx +
mov ebx edi +
mov edi ecx +
mov [esp+3Ch+var_10] esi +
mov esi eax +
jmp loc_41248A  +
lea eax [ebx+4] +
mov edx [ebp+eax-4] +
test edx edx +
jz loc_412543  +
mov esi ebx +
mov ebx eax +
mov eax [esp+3Ch+var_18] +
call sub_40FC80  +
test eax eax +
jz loc_4124AF  +
test edi edi +
jnz loc_412477  +
mov eax [esp+3Ch+var_24] +
mov edx [eax+esi] +
mov eax [esp+3Ch+var_18] +
call sub_4106E0  +
test eax eax +
jnz loc_412477  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+3Ch+var_14] +
mov esi [esp+3Ch+var_10] +
jmp loc_412370  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_412370  +
mov eax [esp+3Ch+var_18] +
xor ecx ecx +
mov edx [ebx+4] +
mov [esp+3Ch+arg_4] 0 +
mov [esp+3Ch+arg_0] 1 +
add esp 3Ch +
pop ebx  +
add eax 54h +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_40FF10  +
mov ebx [esp+3Ch+var_14] +
mov esi [esp+3Ch+var_10] +
mov ebp [ebp+ecx+0] +
test ebp ebp +
jnz loc_412370  +
jmp loc_4124DB  +
xor ecx ecx +
jmp loc_412368  +
mov eax [ebx+4] +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_1C] eax +
jmp loc_4123B9  +
xor ecx ecx +
jmp loc_41250B  +
mov ebx [esp+3Ch+var_14] +
mov esi [esp+3Ch+var_10] +
mov eax [esp+3Ch+var_20] +
test eax eax +
jnz loc_41256B  +
cmp [esp+3Ch+var_1C] 0FFFFFFFFh +
jz loc_412578  +
mov eax [esp+3Ch+var_24] +
mov [ebx+10h] ebp +
mov dword ptr [ebx+8] 1 +
mov [ebx+14h] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_3C] 18h +
call sub_4742F0  +
mov edx 18h +
mov ebx eax +
test bl 1 +
jnz loc_4125F2  +
test al 2 +
jnz loc_4125E4  +
mov edi edx +
xor ecx ecx +
and edi 0FFFFFFFCh +
mov dword ptr [eax+ecx] 0 +
add ecx 4 +
cmp ecx edi +
jb loc_41259B  +
add eax ecx +
test dl 2 +
jz loc_4125B9  +
xor ecx ecx +
add eax 2 +
mov [eax-2] cx +
and edx 1 +
jz loc_4125C1  +
mov byte ptr [eax] 0 +
mov ecx [esp+3Ch+var_18] +
mov eax [ecx+54h] +
mov eax [eax+4] +
mov [ebx+0Ch] esi +
mov [ebx+4] eax +
mov eax [ecx+98h] +
mov [ebx] eax +
mov [ecx+98h] ebx +
jmp loc_41255A  +
xor edi edi +
add eax 2 +
mov [eax-2] di +
sub edx 2 +
jmp loc_412594  +
mov byte ptr [ebx] 0 +
lea eax [ebx+1] +
mov dl 17h +
jmp loc_412590  +
mov eax [esp+3Ch+var_20] +
mov edx esi +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] 0 +
call sub_410D80  +
test eax eax +
jz loc_4124AF  +
mov eax [esp+3Ch+var_18] +
mov edx 4Eh +
call sub_4106E0  +
xor ecx ecx +
test eax eax +
jnz loc_412455  +
jmp loc_4124AF  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
cmp ebx 8 +
jz loc_412740  +
ja loc_412710  +
cmp ebx 4 +
jnz loc_41271A  +
mov edx [esi+0A4h] +
mov edi 63h +
test edx edx +
jnz loc_412774  +
lea eax [ebx+ebx] +
xor edx edx +
mov [esp+10h+var_10] eax +
mov ecx 0FFFFFFFFh +
mov eax esi +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_8] 0 +
mov [esp+10h+var_C] 0 +
call sub_410D80  +
test eax eax +
jnz loc_4126D2  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax edi +
movsx edx al +
mov eax esi +
call sub_4106E0  +
test eax eax +
jz loc_4126C9  +
mov edx offset unk_499AD3 +
mov eax esi +
call sub_40FC80  +
test eax eax +
jz loc_4126C9  +
mov eax [esi+54h] +
cmp ebx 4 +
mov eax [eax+4] +
jz loc_41278E  +
mov [esi+0A8h] eax +
mov eax 1 +
jmp loc_4126CB  +
cmp ebx 0Ch +
jz loc_412740  +
cmp ebx 10h +
jz loc_412740  +
mov eax ds:_iob +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] offset aIeeeUnsuppor_1 +
add eax 40h +
mov [esp+10h+var_10] eax +
call fprintf  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0A8h] +
mov edi 64h +
test edx edx +
jz loc_412699  +
lea ecx [ebx+ebx] +
lea eax [esi+54h] +
mov [esp+10h+arg_4] 0 +
mov [esp+10h+arg_0] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_40FF10  +
lea eax [esi+54h] +
mov ecx 8 +
mov [esp+10h+arg_4] 0 +
mov [esp+10h+arg_0] 0 +
jmp loc_412769  +
mov [esi+0A4h] eax +
mov eax 1 +
jmp loc_4126CB  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+30h] +
test edx edx +
jz loc_4128F1  +
lea eax [eax+30h] +
mov [ebx+8] eax +
mov eax [ebx+34h] +
mov [ebx+0Ch] eax +
mov edx [esi] +
mov esi 1 +
test dl 10h +
jz loc_412815  +
mov edx [eax+4] +
cmp edx 1E9h +
ja loc_41282B  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F8h +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412850  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0Bh +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_412871  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
and edx 8 +
cmp edx 1 +
mov edx [eax+4] +
sbb esi esi +
add esi 3 +
cmp edx 1E9h +
jbe loc_4127DB  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_41280B  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
jbe loc_4127F3  +
lea esi [esi+0] +
lea edx [ebx+0Ch] +
mov ecx 0Bh +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_41280B  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41280B  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_41280B  +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41280B  +
mov edx [edi] +
mov eax ebx +
add edx 1 +
call sub_4106E0  +
test eax eax +
jz loc_41280B  +
mov edx [esp+24h+arg_0] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41280B  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412AB4  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F9h +
mov edx [esp+24h+arg_4] +
mov eax ebx +
sub edx [esp+24h+arg_0] +
call sub_4106E0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41280D  +
mov eax [eax] +
mov ebp [eax] +
mov [esp+24h+var_20] 2Fh +
mov [esp+24h+var_24] ebp +
call strrchr  +
mov [esp+24h+var_20] 5Ch +
mov [esp+24h+var_24] ebp +
mov [esp+24h+var_18] eax +
call strrchr  +
mov edx [esp+24h+var_18] +
test edx edx +
jz loc_4129C1  +
cmp edx eax +
jnb loc_412931  +
test eax eax +
jnz loc_4129C1  +
lea ebp [edx+1] +
mov [esp+24h+var_24] ebp +
call sub_476140  +
mov [esp+24h+var_20] 2Eh +
mov [esp+24h+var_24] eax +
mov ebp eax +
call strrchr  +
test eax eax +
jz loc_412955  +
mov byte ptr [eax] 0 +
mov eax [ebx+30h] +
lea edx [ebx+30h] +
test eax eax +
jz loc_412A80  +
mov eax [ebx+34h] +
mov ecx [eax+4] +
mov [ebx+8] edx +
mov [ebx+0Ch] eax +
cmp ecx 1E9h +
ja loc_412A20  +
lea edx [ecx+1] +
mov [eax+4] edx +
mov byte ptr [eax+ecx+8] 0F8h +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412A40  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0Ah +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_4129D0  +
mov [esp+24h+var_24] ebp +
call free  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jz loc_412A60  +
mov edx eax +
jmp loc_412931  +
mov edx ebp +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4129AF  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4129AF  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4129AF  +
mov edx offset aGnuObjcopy +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4129AF  +
mov [esp+24h+var_24] ebp +
call free  +
mov eax [ebx+0Ch] +
jmp loc_4127C4  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_412986  +
jmp loc_4129AF  +
lea edx [ebx+0Ch] +
mov ecx 0Ah +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4129A2  +
jmp loc_4129AF  +
cmp byte ptr [ebp+0] 0 +
jz loc_412934  +
cmp byte ptr [ebp+1] 3Ah +
lea eax [ebp+2] +
cmovz ebp eax +
jmp loc_412934  +
mov [esp+24h+var_24] 1F4h +
mov [esp+24h+var_18] edx +
call sub_4742F0  +
mov edx [esp+24h+var_18] +
xor ecx ecx +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
mov [ebx+8] edx +
mov [ebx+0Ch] eax +
jmp loc_41297B  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4128D5  +
jmp loc_41280B  +
***
jmp sub_412AE0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_4] +
mov ecx [esp+1Ch+arg_8] +
mov eax [edi+1Ch] +
mov esi [edi+24h] +
mov ebx [ecx+4Ch] +
add esi eax +
test ebx ebx +
jnz loc_412B06  +
jmp loc_412B73  +
mov ebx [ebx] +
test ebx ebx +
jz loc_412B73  +
cmp eax [ebx+8] +
jnb loc_412B00  +
cmp eax esi +
jnb loc_412B6B  +
mov edx [ebx+4] +
cmp esi edx +
jbe loc_412B77  +
lea ecx [edi+8] +
lea ebp [edi+14h] +
mov [esp+1Ch+var_10] ecx +
jmp loc_412B36  +
mov eax [ebx+8] +
mov ebx [ebx] +
cmp esi eax +
jbe loc_412B6B  +
test ebx ebx +
jz loc_412B77  +
mov edx [ebx+4] +
cmp esi edx +
jbe loc_412B77  +
cmp edx eax +
jbe loc_412B22  +
mov ecx edx +
sub ecx eax +
cmp ecx 100h +
jbe loc_412B22  +
mov [esp+1Ch+var_18] edx +
mov edx [esp+1Ch+var_10] +
mov ecx ebp +
mov [esp+1Ch+var_1C] eax +
mov eax [esp+1Ch+arg_8] +
call sub_4127A0  +
test eax eax +
jnz loc_412B22  +
mov eax [esp+1Ch+arg_8] +
mov dword ptr [eax+4] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax esi +
jnb loc_412B6B  +
mov [esp+1Ch+var_1C] eax +
mov eax [esp+1Ch+arg_8] +
lea ecx [edi+14h] +
lea edx [edi+8] +
mov [esp+1Ch+var_18] esi +
call sub_4127A0  +
test eax eax +
jz loc_412B60  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov edx 0E2CEh +
mov ebx eax +
call sub_40FC00  +
test eax eax +
jnz loc_412BC0  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412BB7  +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
pop ebx  +
pop esi  +
pop edi  +
test eax eax +
setnz al  +
movzx eax al +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_C] +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_412F30  +
mov eax [ebx+0D4h] +
test eax eax +
jz loc_412E50  +
cmp [ebx+0DCh] esi +
jz loc_412E50  +
mov edx [ebx+40h] +
test edx edx +
jz loc_412E75  +
lea edx [ebx+40h] +
mov [ebx+8] edx +
mov edx [ebx+44h] +
mov [ebx+0Ch] edx +
mov edx [ebx+0CCh] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_476180  +
test eax eax +
jz loc_412DD0  +
mov edx [ebx+0CCh] +
mov eax [ebx+10h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_476180  +
test eax eax +
jz loc_412D00  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412F51  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F9h +
mov edx [ebx+0D4h] +
mov eax [ebx+10h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_476180  +
test eax eax +
jnz loc_412D00  +
mov eax [ebx+5Ch] +
mov edx [ebx+0Ch] +
mov [ebx+0D0h] eax +
add eax 1 +
mov [ebx+5Ch] eax +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412FB0  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F0h +
mov edx [ebx+0D0h] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_412DE0  +
lea esi [esi+0] +
mov edx [ebx+0D4h] +
mov eax [ebx+10h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_476180  +
test eax eax +
jz loc_412DC0  +
mov eax [ebx+5Ch] +
mov edx [ebx+0Ch] +
mov [ebx+0D0h] eax +
add eax 1 +
mov [ebx+5Ch] eax +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412F70  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F8h +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412F90  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 5 +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov edx [ebx+0D4h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_412DE0  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412FEA  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F0h +
mov edx [ebx+0D0h] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_412DE0  +
nop   +
mov eax [ebx+0D4h] +
mov [ebx+0CCh] eax +
lea esi [esi+0] +
mov edx 0F1CEh +
mov eax ebx +
call sub_40FC00  +
test eax eax +
jnz loc_412DE8  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+0D0h] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov edx 7 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov edx [ebx+0D8h] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov ecx [ebx+0DCh] +
mov eax ebx +
mov edx [ebx+0D0h] +
call sub_412BA0  +
test eax eax +
jz loc_412DE0  +
nop   +
lea esi [esi+0] +
mov eax [esp+14h+arg_4] +
mov [ebx+0DCh] esi +
mov [ebx+0D4h] eax +
mov eax [esp+14h+arg_8] +
mov [ebx+0D8h] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx+5Ch] +
mov [ebx+0D0h] eax +
add eax 1 +
mov [ebx+5Ch] eax +
mov [esp+14h+var_14] 1F4h +
call sub_4742F0  +
lea edx [ebx+40h] +
mov dword ptr [eax] 0 +
mov [ebx+40h] eax +
mov [ebx+44h] eax +
mov [ebx+8] edx +
xor edx edx +
mov [ebx+0Ch] eax +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 5 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov edx [ebx+10h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_412DE0  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_412FCD  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F0h +
mov edx [ebx+0D0h] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_412DE0  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_412DE0  +
mov edx [ebx+10h] +
mov eax [ebx+0D4h] +
mov [ebx+0CCh] edx +
jmp loc_412C3F  +
mov [esp+14h+var_C] 1C9Ah +
mov [esp+14h+var_10] offset a____Binutils_1 +
mov [esp+14h+var_14] offset aInfoFilenameNu +
call sub_48C4C0  +
jmp loc_412C08  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_412DE0  +
jmp loc_412C8C  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_412D48  +
jmp loc_412DE0  +
lea edx [ebx+0Ch] +
mov ecx 5 +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_412D64  +
jmp loc_412DE0  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_412CD0  +
jmp loc_412DE0  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_412EF3  +
jmp loc_412DE0  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_412D9E  +
jmp loc_412DE0  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+28h] +
test eax eax +
jz loc_413046  +
lea eax [ebx+28h] +
mov [ebx+8] eax +
mov eax [ebx+2Ch] +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_4133F0  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F9h +
mov eax [ebx+38h] +
test eax eax +
jz loc_413160  +
mov eax [ebx+30h] +
lea esi [ebx+30h] +
test eax eax +
jz loc_413410  +
mov eax [ebx+34h] +
mov edx [eax+4] +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_4133A0  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F8h +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_4133D0  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 6 +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_4130B5  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset a__xrycpp +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4130AB  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov eax [ebx+0E0h] +
lea edx [eax-1] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov eax [ebx+38h] +
test eax eax +
jz loc_4136A8  +
mov edi [ebx+30h] +
test edi edi +
jz loc_413712  +
mov edx [ebx+34h] +
mov [edx] eax +
mov eax [ebx+30h] +
mov edx [ebx+3Ch] +
mov [ebx+34h] edx +
test eax eax +
jz loc_41371A  +
mov eax [ebx+34h] +
mov [ebx+8] esi +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_41354D  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F9h +
mov eax [ebx+0E0h] +
lea edx [eax-1] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
lea esi [esi+0] +
mov eax [ebx+30h] +
test eax eax +
jz loc_41318D  +
lea eax [ebx+30h] +
mov [ebx+8] eax +
mov eax [ebx+34h] +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_4134A5  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F9h +
mov esi [ebx+0D4h] +
test esi esi +
jz loc_4131BF  +
mov [esp+2Ch+var_20] 0FFFFFFFFh +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] ebx +
call sub_412BF0  +
test eax eax +
jz loc_4130AB  +
mov edx [ebx+40h] +
test edx edx +
jz loc_413228  +
lea eax [ebx+40h] +
mov [ebx+8] eax +
mov eax [ebx+44h] +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_4134C2  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F9h +
mov edx [ebx+0CCh] +
mov eax [ebx+10h] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_476180  +
test eax eax +
jz loc_413480  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_413463  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F9h +
mov edx [ebx+40h] +
mov eax [ebx+28h] +
test eax eax +
jz loc_4134FC  +
mov ecx [ebx+20h] +
test ecx ecx +
jz loc_413505  +
mov ecx [ebx+24h] +
mov [ecx] eax +
mov eax [ebx+20h] +
mov ecx [ebx+2Ch] +
mov [ebx+24h] ecx +
mov ecx [ebx+30h] +
test ecx ecx +
jz loc_413269  +
test eax eax +
jz loc_413517  +
mov eax [ebx+24h] +
mov [eax] ecx +
mov eax [ebx+20h] +
mov ecx [ebx+34h] +
mov [ebx+24h] ecx +
test edx edx +
jz loc_413283  +
test eax eax +
jz loc_41350D  +
mov eax [ebx+24h] +
mov [eax] edx +
mov eax [ebx+20h] +
mov edx [ebx+44h] +
mov [ebx+24h] edx +
test eax eax +
lea esi [ebx+20h] +
jz loc_413521  +
mov eax [ebx+24h] +
mov edx [eax+4] +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_413488  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F8h +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_4134DF  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0Ah +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov edx [ebx+14h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4130AB  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4130AB  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov edx offset aGnuObjcopy +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4130AB  +
mov ebp [ebx+48h] +
lea eax [ebx+0Ch] +
mov [esp+2Ch+var_14] eax +
lea eax [ebx+8] +
mov [esp+2Ch+var_10] eax +
test ebp ebp +
jz loc_413379  +
mov [esp+2Ch+var_1C] ebx +
mov eax [esp+2Ch+var_1C] +
mov edi [ebp+4] +
mov esi [ebp+8] +
mov eax [eax] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_41336E  +
mov eax [ebx+1Ch] +
cmp edi eax +
jb loc_413367  +
add eax [ebx+24h] +
cmp esi eax +
jbe loc_41356A  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_413355  +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_413342  +
mov ebx [esp+2Ch+var_1C] +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_41373E  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F9h +
mov eax 1 +
jmp loc_4130AD  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_4130AB  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
jbe loc_413093  +
lea esi [esi+0] +
lea edx [ebx+0Ch] +
mov ecx 6 +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_41309E  +
jmp loc_4130AB  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_413046  +
jmp loc_4130AB  +
mov [esp+2Ch+var_24] 1326h +
mov [esp+2Ch+var_28] offset a____Binutils_1 +
mov [esp+2Ch+var_2C] offset aIeee_buffer_em +
call sub_48C4C0  +
mov ebp [ebx+30h] +
test ebp ebp +
jnz loc_41305F  +
mov [esp+2Ch+var_2C] 1F4h +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
jmp loc_413077  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_4130AB  +
nop   +
lea esi [esi+0] +
mov edx [ebx+40h] +
jmp loc_413228  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4132B1  +
jmp loc_4130AB  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_41318D  +
jmp loc_4130AB  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4131EC  +
jmp loc_4130AB  +
lea edx [ebx+0Ch] +
mov ecx 0Ah +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4132CD  +
jmp loc_4130AB  +
mov eax [ebx+20h] +
nop   +
jmp loc_41324C  +
mov [ebx+20h] eax +
jmp loc_413246  +
mov [ebx+20h] edx +
mov eax edx +
jmp loc_41327D  +
mov [ebx+20h] ecx +
mov eax ecx +
jmp loc_413263  +
mov [esp+2Ch+var_2C] 1F4h +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+20h] eax +
mov [ebx+24h] eax +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
jmp loc_4132A6  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_413142  +
jmp loc_4130AB  +
mov ecx eax +
lea esi [esi+0] +
jmp loc_413588  +
lea edx [esi+1000h] +
cmp edx [eax+4] +
jb loc_41358F  +
mov edx [eax+8] +
cmp ecx edx +
jb loc_41358F  +
mov ebp eax +
mov esi edx +
mov eax [ebp+0] +
test eax eax +
jnz loc_413572  +
mov eax [ebx+14h] +
mov [esp+2Ch+var_18] 1 +
test al 10h +
jnz loc_4135AF  +
and eax 8 +
cmp eax 1 +
sbb eax eax +
mov [esp+2Ch+var_18] eax +
add [esp+2Ch+var_18] 3 +
mov eax [esp+2Ch+var_1C] +
mov edx [eax+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_4136D4  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F8h +
mov eax [esp+2Ch+var_1C] +
mov edx [eax+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_4136B5  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0Bh +
mov eax [esp+2Ch+var_1C] +
xor edx edx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov eax [esp+2Ch+var_1C] +
mov edx offset unk_499AD3 +
call sub_40FC80  +
test eax eax +
jz loc_4130AB  +
mov edx [esp+2Ch+var_18] +
mov eax [esp+2Ch+var_1C] +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov edx [ebx+8] +
mov ebx [esp+2Ch+var_1C] +
add edx 1 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_4136F3  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F9h +
mov ebx [esp+2Ch+var_1C] +
mov edx esi +
sub edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4130AB  +
mov [esp+2Ch+var_2C] esi +
mov ecx edi +
mov edx 1 +
mov eax ebx +
call sub_40FE30  +
test eax eax +
jnz loc_41336E  +
jmp loc_4130AB  +
mov eax [ebx+30h] +
nop   +
lea esi [esi+0] +
jmp loc_413117  +
mov edx [esp+2Ch+var_14] +
mov ecx 0Bh +
mov eax [esp+2Ch+var_10] +
call sub_40FB80  +
test eax eax +
jnz loc_4135EF  +
jmp loc_4130AB  +
mov edx [esp+2Ch+var_14] +
mov ecx 0F8h +
mov eax [esp+2Ch+var_10] +
call sub_40FB80  +
test eax eax +
jnz loc_4135CF  +
jmp loc_4130AB  +
mov edx [esp+2Ch+var_14] +
mov ecx 0F9h +
mov eax [esp+2Ch+var_10] +
call sub_40FB80  +
test eax eax +
jnz loc_413673  +
jmp loc_4130AB  +
mov [ebx+30h] eax +
jmp loc_413111  +
mov [esp+2Ch+var_2C] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
jmp loc_41311F  +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_4130AB  +
jmp loc_413395  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov edx [ebx+10h] +
test edx edx +
jz loc_413784  +
mov eax ebx +
call sub_413010  +
test eax eax +
jz loc_41385C  +
mov [ebx+10h] esi +
mov [esp+10h+var_C] 2Fh +
mov [esp+10h+var_10] esi +
call strrchr  +
mov [esp+10h+var_C] 5Ch +
mov [esp+10h+var_10] esi +
mov edi eax +
call strrchr  +
test edi edi +
jz loc_41386D  +
cmp eax edi +
ja loc_413865  +
lea esi [edi+1] +
mov [esp+10h+var_10] esi +
call sub_476140  +
mov [esp+10h+var_C] 2Eh +
mov [esp+10h+var_10] eax +
mov esi eax +
call strrchr  +
test eax eax +
jz loc_4137DD  +
mov byte ptr [eax] 0 +
mov [ebx+14h] esi +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov dword ptr [ebx+40h] 0 +
mov dword ptr [ebx+44h] 0 +
mov dword ptr [ebx+48h] 0 +
mov [esp+10h+var_10] 1F4h +
call sub_4742F0  +
lea edx [ebx+28h] +
mov dword ptr [eax] 0 +
mov [ebx+28h] eax +
mov [ebx+2Ch] eax +
mov [ebx+8] edx +
xor edx edx +
mov [ebx+0Ch] eax +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 1 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_413880  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_4137B9  +
test eax eax +
jz loc_413900  +
mov edi eax +
jmp loc_4137B9  +
mov edx [ebx+14h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_41385C  +
mov eax [ebx+30h] +
lea esi [ebx+30h] +
add dword ptr [ebx+5Ch] 1 +
test eax eax +
jz loc_41394A  +
mov eax [ebx+34h] +
mov edx [eax+4] +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_413918  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F8h +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_413931  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 3 +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41385C  +
mov edx [ebx+14h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41385E  +
cmp byte ptr [esi] 0 +
jz loc_4137BC  +
cmp byte ptr [esi+1] 3Ah +
lea eax [esi+2] +
cmovz esi eax +
jmp loc_4137BC  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4138BF  +
jmp loc_41385C  +
lea edx [ebx+0Ch] +
mov ecx 3 +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4138D7  +
jmp loc_41385C  +
mov [esp+10h+var_10] 1F4h +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
jmp loc_4138B4  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov eax [ebx+0ACh] +
cmp eax 1 +
jz loc_4139B6  +
mov [esp+14h+var_C] 1C6Bh +
mov [esp+14h+var_10] offset a____Binutils_1 +
mov [esp+14h+var_14] offset aInfoBlock_dept +
call sub_48C4C0  +
mov eax [ebx+0ACh] +
sub eax 1 +
mov [ebx+0ACh] eax +
mov eax [ebx+0B4h] +
lea esi [ebx+0B4h] +
test eax eax +
jz loc_413B10  +
mov eax [ebx+0B8h] +
mov edx [ebx+0C4h] +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [ebx+8] esi +
call sub_4106E0  +
xor edx edx +
test eax eax +
jz loc_413AB9  +
mov eax [ebx+0BCh] +
lea esi [ebx+0BCh] +
test eax eax +
jz loc_413B68  +
mov eax [ebx+0C0h] +
mov [ebx+0Ch] eax +
xor edx edx +
mov eax ebx +
mov [ebx+8] esi +
call sub_4106E0  +
test eax eax +
jz loc_413B00  +
mov esi [ebx+28h] +
test esi esi +
jz loc_413AC1  +
mov eax [ebx+0B4h] +
test eax eax +
jz loc_413A55  +
mov ecx [ebx+28h] +
test ecx ecx +
jz loc_413B56  +
mov edx [ebx+2Ch] +
mov [edx] eax +
mov eax [ebx+0B8h] +
mov [ebx+2Ch] eax +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_413A78  +
mov edx [ebx+28h] +
test edx edx +
jz loc_413B60  +
mov edx [ebx+2Ch] +
mov [edx] eax +
mov eax [ebx+0C0h] +
mov [ebx+2Ch] eax +
mov dword ptr [ebx+0B0h] 0 +
mov edx 1 +
mov dword ptr [ebx+0B4h] 0 +
mov dword ptr [ebx+0B8h] 0 +
mov dword ptr [ebx+0BCh] 0 +
mov dword ptr [ebx+0C0h] 0 +
mov dword ptr [ebx+0C4h] 0 +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] 1F4h +
call sub_4742F0  +
lea edx [ebx+28h] +
mov dword ptr [eax] 0 +
mov [ebx+28h] eax +
mov [ebx+2Ch] eax +
mov [ebx+8] edx +
xor edx edx +
mov [ebx+0Ch] eax +
mov byte ptr [eax+8] 0F8h +
mov dword ptr [eax+4] 2 +
mov byte ptr [eax+9] 1 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_413B40  +
nop   +
xor edx edx +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+0B4h] eax +
mov [ebx+0B8h] eax +
jmp loc_4139D9  +
mov edx [ebx+14h] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jnz loc_413A32  +
xor edx edx +
jmp loc_413B02  +
mov [ebx+28h] eax +
jmp loc_413A4C  +
mov [ebx+28h] eax +
jmp loc_413A6F  +
mov [esp+14h+var_14] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+0BCh] eax +
mov [ebx+0C0h] eax +
jmp loc_413A10  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov eax [ebx+30h] +
lea edi [ebx+30h] +
test eax eax +
jz loc_413C56  +
mov eax [ebx+34h] +
mov edx [eax+4] +
mov [ebx+8] edi +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_413C40  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F9h +
lea edx [esi-1] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_413BF2  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+50h] +
test eax eax +
jz loc_413C82  +
mov edx [eax] +
mov edi [eax+4] +
mov [ebx+50h] edx +
mov [esp+10h+var_10] eax +
call free  +
xor edx edx +
mov ecx edi +
mov [esp+10h+var_10] esi +
mov eax ebx +
call sub_40FE30  +
test eax eax +
jz loc_413BEB  +
sub dword ptr [ebx+0ACh] 1 +
mov eax 1 +
cmp esi [ebx+0E0h] +
jbe loc_413BEB  +
mov [ebx+0E0h] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [ebx+0Ch] +
mov ecx 0F9h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_413BDB  +
jmp loc_413BE9  +
mov [esp+10h+var_10] 1F4h +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
mov [ebx+8] edi +
mov [ebx+0Ch] eax +
jmp loc_413BD0  +
mov [esp+10h+var_8] 1144h +
mov [esp+10h+var_C] offset a____Binutils_1 +
mov [esp+10h+var_10] offset aInfoPending_ra +
call sub_48C4C0  +
mov eax [ebx+50h] +
jmp loc_413BFD  +
***
push esi  +
mov esi edx +
push ebx  +
mov edx 0F1CEh +
mov ebx eax +
call sub_40FC00  +
test eax eax +
jnz loc_413CD0  +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_413CC7  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_413CC7  +
mov edx 41h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_413CC7  +
mov edx edi +
mov eax ebx +
call sub_40FC80  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_413CC9  +
***
push esi  +
mov ebx [esp+arg_C] +
mov esi [esp+arg_10] +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov [esp+arg_10] 0 +
mov [esp+arg_C] 0 +
mov [esp+arg_8] esi +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 1 +
pop ebx  +
pop esi  +
jmp sub_413D10  +
***
push ebx  +
mov edi [esp+arg_18] +
mov ebx [esp+arg_C] +
mov esi [esp+arg_10] +
mov eax [esp+arg_0] +
mov [esp+arg_10] edi +
mov edi [esp+arg_14] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov [esp+arg_4] ebx +
mov [esp+arg_C] edi +
mov [esp+arg_8] esi +
mov [esp+arg_0] 0 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_413D10  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov eax ebx +
call sub_410A70  +
mov eax [ebx+54h] +
test eax eax +
jz loc_414015  +
mov esi [eax+20h] +
test esi esi +
jz loc_414015  +
mov eax [esp+28h+arg_C] +
call sub_40FAF0  +
mov edi [esi] +
lea edx [esi+4] +
mov ebp eax +
mov eax [esi+4] +
test eax eax +
jz loc_414040  +
mov [ebx+8] edx +
mov eax [esi+8] +
mov ecx 64h +
mov edx edi +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jnz loc_413FD0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebp +
mov edx edi +
or ecx 4 +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_413FC0  +
mov ecx [esp+28h+arg_4] +
mov edx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_413FC0  +
mov ecx [esp+28h+arg_8] +
mov edx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_413FC0  +
mov eax [ebx+54h] +
mov eax [eax+20h] +
add dword ptr [eax+0Ch] 4 +
mov eax 1 +
jmp loc_413FC2  +
mov [esp+28h+var_20] 1822h +
mov [esp+28h+var_24] offset a____Binutils_1 +
mov [esp+28h+var_28] offset aInfoType_sta_2 +
call sub_48C4C0  +
mov eax [ebx+54h] +
mov esi [eax+20h] +
jmp loc_413F8A  +
mov [esp+28h+var_28] 1F4h +
mov [esp+28h+var_1C] edx +
call sub_4742F0  +
mov edx [esp+28h+var_1C] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [esi+4] eax +
mov [esi+8] eax +
jmp loc_413FA5  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov eax [ebx+54h] +
movzx esi byte ptr [eax+24h] +
mov eax esi +
shr al 1 +
mov esi eax +
mov eax ebx +
call sub_410A70  +
mov ecx [ebx+0B4h] +
and esi 1 +
test ecx ecx +
jnz loc_414390  +
mov ebp eax +
mov ecx 0FFFFFFFFh +
lea eax [ebx+0B4h] +
mov edx edi +
mov [ebx+0B0h] edi +
mov [esp+38h+var_2C] eax +
mov eax ebx +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] 0 +
call sub_410D80  +
test eax eax +
jnz loc_4140F0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 78h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx 40h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx ebp +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx 1 +
mov eax ebx +
call sub_410A70  +
mov dword ptr [ebx+0BCh] 0 +
mov dword ptr [ebx+0C0h] 0 +
mov dword ptr [ebx+0C4h] 0 +
mov ebp eax +
mov eax esi +
test al al +
jnz loc_414217  +
mov edx [ebx+30h] +
lea esi [ebx+30h] +
test edx edx +
jz loc_4143C1  +
mov eax [ebx+34h] +
add dword ptr [ebx+0ACh] 1 +
mov [ebx+8] esi +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_414356  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F8h +
mov ecx [ebx+0Ch] +
mov edx [ecx+4] +
cmp edx 1E9h +
ja loc_414331  +
cmp [esp+38h+arg_8] 1 +
lea eax [edx+1] +
mov [ecx+4] eax +
sbb eax eax +
and eax 2 +
add eax 4 +
mov [ecx+edx+8] al +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx edi +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4140E4  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx ebp +
mov eax ebx +
call sub_4106E0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4140E6  +
mov esi [ebx+5Ch] +
lea edx [ebx+38h] +
lea eax [esi+1] +
mov [ebx+5Ch] eax +
mov eax [ebx+38h] +
test eax eax +
jz loc_414395  +
mov eax [ebx+3Ch] +
mov [ebx+8] edx +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_414373  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4140E4  +
mov edx 0F1CEh +
mov eax ebx +
call sub_40FC00  +
test eax eax +
jz loc_4140E4  +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx 3Eh +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx 50h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov edx 3 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4140E4  +
mov ecx 52h +
mov edx esi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_4140E4  +
xor ecx ecx +
mov edx esi +
cmp [esp+38h+arg_8] 0 +
mov eax ebx +
setz cl  +
call sub_412BA0  +
test eax eax +
jz loc_4140E4  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jnz loc_41416D  +
jmp loc_4140E4  +
cmp [esp+38h+arg_8] 1 +
lea edx [ebx+0Ch] +
lea eax [ebx+8] +
sbb ecx ecx +
and ecx 2 +
add ecx 4 +
call sub_40FB80  +
test eax eax +
jz loc_4140E4  +
jmp loc_4141CE  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_4140E4  +
jmp loc_4141A5  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_414251  +
jmp loc_4140E4  +
call abort  +
mov [esp+38h+var_38] 1F4h +
mov [esp+38h+var_1C] edx +
call sub_4742F0  +
mov edx [esp+38h+var_1C] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+38h] eax +
mov [ebx+3Ch] eax +
jmp loc_41422E  +
mov [esp+38h+var_30] 1B9Ah +
mov [esp+38h+var_34] offset a____Binutils_1 +
mov [esp+38h+var_38] offset aIeee_buffer_em +
call sub_48C4C0  +
cmp dword ptr [ebx+30h] 0 +
jnz loc_41417B  +
mov [esp+38h+var_38] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
jmp loc_41417B  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+28h+arg_0] +
mov eax [ebx+54h] +
lea edi [ebx+30h] +
movzx esi byte ptr [eax+24h] +
mov ecx [eax+8] +
mov eax esi +
shr al 1 +
mov esi eax +
mov eax ebx +
mov [esp+28h+var_1C] ecx +
and esi 1 +
call sub_410A70  +
mov ecx [ebx+30h] +
test ecx ecx +
mov ebp eax +
jz loc_414500  +
mov eax [ebx+34h] +
mov edx [eax+4] +
mov [ebx+8] edi +
mov edi [ebx+5Ch] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
lea ecx [edi+1] +
mov [ebx+5Ch] ecx +
ja loc_4144E0  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_414490  +
***
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+28h+arg_4] +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_414483  +
mov edx 0F1CEh +
mov eax ebx +
call sub_40FC00  +
test eax eax +
jz loc_414483  +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414483  +
mov edx ebp +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414483  +
cmp [esp+28h+arg_8] 5 +
ja sub_4147C4  +
mov eax [esp+28h+arg_8] +
jmp ds:off_499E04[eax*4]  +
***
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_414476  +
jmp loc_414483  +
***
mov edx 2 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414483  +
mov eax [ebx] +
mov [esp+0] eax +
call sub_423700  +
cmp eax 2 +
jz loc_4147EE  +
mov edi [esp+arg_38] +
cmp eax 4 +
lea edx [edi+1] +
cmovnz edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414483  +
***
mov ebp 2 +
***
mov ecx esi +
mov eax 1 +
test cl cl +
jz loc_414485  +
mov esi [ebx+5Ch] +
cmp ebp 2 +
lea eax [esi+1] +
mov [ebx+5Ch] eax +
jz loc_4147E6  +
mov eax [ebx+38h] +
lea edi [ebx+38h] +
test eax eax +
jz loc_414800  +
mov eax [ebx+3Ch] +
mov [ebx+8] edi +
mov [ebx+0Ch] eax +
mov edx [eax+4] +
cmp edx 1E9h +
ja loc_4147C9  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
***
mov edx 1 +
mov edx 3 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414483  +
mov eax [esp+arg_8] +
xor edx edx +
mov ebp 2 +
add eax [esp+arg_38] +
mov ecx [esp+arg_38] +
mov [esp+0] eax +
mov eax ebx +
call sub_40FE30  +
test eax eax +
jz loc_414483  +
***
mov edx 3 +
mov edx 8 +
call abort  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_4145F6  +
jmp loc_414483  +
***
mov eax [ebx+0Ch] +
jmp loc_4145DC  +
***
mov eax [esp+arg_38] +
lea edx [eax-2] +
cmp eax 12h +
cmovl edx eax +
jmp loc_414590  +
***
mov dword ptr [esp+0] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+38h] eax +
mov [ebx+3Ch] eax +
jmp loc_4145D3  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov ecx [ebx+30h] +
lea esi [ebx+30h] +
test ecx ecx +
jz loc_414B80  +
mov eax [ebx+34h] +
cmp dword ptr [ebx+0ACh] 1 +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
jz loc_414970  +
mov edx [eax+4] +
cmp edx 1E9h +
ja loc_414920  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F8h +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_414950  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 6 +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_4148B0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4148A2  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov edx [esp+2Ch+arg_4] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov [esp+2Ch+var_2C] 0Ch +
call sub_4742F0  +
mov edi [esp+2Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov edx [ebx+50h] +
mov [eax+4] edi +
mov [eax] edx +
mov [ebx+50h] eax +
mov eax 1 +
add dword ptr [ebx+0ACh] 1 +
jmp loc_4148A4  +
lea edx [ebx+0Ch] +
mov ecx 0F8h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jz loc_4148A2  +
mov edx [ebx+0Ch] +
mov eax [edx+4] +
cmp eax 1E9h +
jbe loc_41488A  +
lea esi [esi+0] +
lea edx [ebx+0Ch] +
mov ecx 6 +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_414895  +
jmp loc_4148A2  +
mov edx [esp+2Ch+arg_4] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov edi [ebx+0C8h] +
test edi edi +
jz loc_414BD4  +
lea eax [ebx+54h] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] esi +
mov eax [edi+10h] +
cmp eax 2 +
jz loc_4149C6  +
jbe loc_414BA4  +
cmp eax 3 +
jz loc_414BA9  +
cmp eax 4 +
nop   +
jnz loc_414BB3  +
mov esi 5 +
mov edx [edi+8] +
xor ecx ecx +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_40FF10  +
test eax eax +
jz loc_4148A2  +
mov ecx [ebx+54h] +
mov edx [edi+0Ch] +
movzx eax byte ptr [ecx+24h] +
mov ebp edx +
and ebp 1 +
add ebp ebp +
and eax 0FFFFFFFDh +
or eax ebp +
cmp edx 1 +
mov edx [edi+14h] +
mov [ecx+24h] al +
mov eax [edi+4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
sbb [esp+2Ch+var_18] 0FFFFFFFFh +
call sub_414410  +
test eax eax +
jz loc_4148A2  +
mov edi [edi] +
test edi edi +
jnz loc_4149A4  +
mov edx [esp+2Ch+var_18] +
mov esi [esp+2Ch+var_10] +
test edx edx +
jz loc_414BB8  +
mov edi [ebx+5Ch] +
lea eax [edi+1] +
mov [ebx+5Ch] eax +
mov eax [ebx+30h] +
test eax eax +
jz loc_414C00  +
mov eax [ebx+34h] +
mov [ebx+8] esi +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_414BE3  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_4148A2  +
mov edx 0F1CEh +
mov eax ebx +
call sub_40FC00  +
test eax eax +
jz loc_4148A2  +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov edx 3Eh +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov edx 50h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov edx [esp+2Ch+var_18] +
mov eax ebx +
add edx 3 +
call sub_4106E0  +
test eax eax +
jz loc_4148A2  +
mov ecx 42h +
mov edx edi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_4148A2  +
mov ecx [ebx+0B0h] +
mov edx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_4148A2  +
xor ecx ecx +
mov edx edi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_4148A2  +
mov esi [ebx+0C8h] +
mov ebp 1 +
test esi esi +
jz loc_414BB8  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_414C24  +
mov esi [esi] +
add ebp 1 +
jmp loc_414B68  +
mov [esp+2Ch+var_2C] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
jmp loc_41484C  +
cmp eax 1 +
jnz loc_414BB3  +
mov esi 4 +
jmp loc_4149CB  +
call abort  +
mov eax [ebx+0C8h] +
test eax eax +
jnz loc_414BC6  +
jmp loc_414BD4  +
mov eax esi +
mov esi [eax] +
mov [esp+2Ch+var_2C] eax +
call free  +
test esi esi +
jnz loc_414BC4  +
mov dword ptr [ebx+0C8h] 0 +
jmp loc_4148E9  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_414A84  +
jmp loc_4148A2  +
mov [esp+2Ch+var_2C] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+30h] eax +
mov [ebx+34h] eax +
jmp loc_414A61  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jnz loc_414B76  +
jmp loc_4148A2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov eax [ebx+54h] +
test eax eax +
jz loc_414D26  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_414D26  +
mov edx [eax] +
test edx edx +
jz loc_414D26  +
mov ecx [edx+20h] +
test ecx ecx +
jz loc_414D26  +
mov edx [edx+18h] +
test edx edx +
jz loc_414D26  +
movzx edi byte ptr [eax+24h] +
mov edx 1 +
mov eax edi +
shr al 2 +
mov edi eax +
mov eax ebx +
call sub_410A70  +
and edi 1 +
mov ebp eax +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jnz loc_414D60  +
mov eax edi +
test al al +
jnz loc_414D50  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
add eax 4 +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset a_bS +
mov [esp+2Ch+var_2C] eax +
mov edi eax +
call sprintf  +
mov edx [ebx+54h] +
mov eax [edx+18h] +
lea ecx [edx+18h] +
test eax eax +
jz loc_414E63  +
mov [ebx+8] ecx +
mov eax [edx+1Ch] +
mov edx edi +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_414D14  +
mov edx ebp +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jnz loc_414E46  +
mov [esp+2Ch+var_2C] edi +
call free  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] 1846h +
mov [esp+2Ch+var_28] offset a____Binutils_1 +
mov [esp+2Ch+var_2C] offset aInfoType_sta_3 +
call sub_48C4C0  +
mov eax [ebx+54h] +
mov esi [eax+0Ch] +
jmp loc_414C81  +
mov eax [ebx+54h] +
or byte ptr [eax+24h] 4 +
jmp loc_414CB3  +
mov [esp+2Ch+var_2C] esi +
mov ebp 2 +
call strlen  +
add eax 5 +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset a_vbS +
mov [esp+2Ch+var_2C] eax +
mov edi eax +
call sprintf  +
mov eax ebp +
or eax 1 +
cmp [esp+2Ch+arg_C] 2 +
cmovz ebp eax +
mov eax [ebx+54h] +
mov edx [eax+20h] +
mov eax [edx] +
lea ecx [edx+4] +
mov [esp+2Ch+var_18] eax +
mov eax [edx+4] +
test eax eax +
jz loc_414E97  +
mov [ebx+8] ecx +
mov eax [edx+8] +
mov ecx 62h +
mov edx [esp+2Ch+var_18] +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_414D14  +
mov edx [esp+2Ch+var_18] +
mov ecx ebp +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_414D14  +
mov edx [esp+2Ch+var_18] +
mov ecx esi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_414D14  +
mov edx [esp+2Ch+var_18] +
xor ecx ecx +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_414D14  +
mov edx [esp+2Ch+var_18] +
mov ecx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_414D14  +
mov eax [ebx+54h] +
mov eax [eax+20h] +
add dword ptr [eax+0Ch] 5 +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax 1 +
jmp loc_414D1E  +
mov edx [esp+2Ch+arg_4] +
mov eax ebx +
shr edx 3 +
call sub_4106E0  +
test eax eax +
jz loc_414D14  +
xor ebp ebp +
jmp loc_414D8E  +
mov [esp+2Ch+var_2C] 1F4h +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_18] edx +
call sub_4742F0  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [edx+18h] eax +
mov [edx+1Ch] eax +
jmp loc_414CED  +
mov [esp+2Ch+var_2C] 1F4h +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_14] edx +
call sub_4742F0  +
mov edx [esp+2Ch+var_14] +
mov ecx [esp+2Ch+var_10] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [edx+4] eax +
mov [edx+8] eax +
jmp loc_414DB5  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov eax [ebx+54h] +
test eax eax +
jz loc_4150D0  +
mov edx [eax+20h] +
test edx edx +
jz loc_4150D0  +
test byte ptr [eax+24h] 8 +
jnz loc_4150C0  +
mov esi [eax+20h] +
mov eax [esi+10h] +
mov edi [esi] +
test eax eax +
jz loc_4150F4  +
mov ecx [esi+4] +
lea ebp [esi+4] +
test ecx ecx +
jz loc_415122  +
mov [ebx+8] ebp +
mov eax [esi+8] +
mov ecx 7Ah +
mov edx edi +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jnz loc_414F40  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx offset unk_499AD3 +
mov edx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_414F34  +
mov eax [ebx+54h] +
mov edx edi +
mov eax [eax+20h] +
mov ecx [eax+18h] +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_414F34  +
mov eax [ebx+54h] +
mov ecx offset unk_499AD3 +
mov eax [eax+20h] +
mov edx [eax+14h] +
test edx edx +
jnz loc_414F7D  +
mov ecx [eax+10h] +
mov edx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_414F34  +
xor ecx ecx +
mov edx edi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_414F34  +
mov eax [ebx+54h] +
mov eax [eax+20h] +
add dword ptr [eax+0Ch] 5 +
mov eax [ebx+38h] +
lea esi [ebx+38h] +
test eax eax +
jz loc_415146  +
mov eax [ebx+3Ch] +
mov edx [eax+4] +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_415105  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414F34  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_414F34  +
mov edx 0F1CEh +
mov eax ebx +
call sub_40FC00  +
test eax eax +
jz loc_414F34  +
mov edx edi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414F34  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414F34  +
mov edx 3Eh +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414F34  +
mov edx 50h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414F34  +
mov eax [ebx+54h] +
mov eax [eax+20h] +
mov edx [eax+0Ch] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_414F34  +
mov eax [ebx+54h] +
mov eax [eax+20h] +
mov edx [eax+4] +
test edx edx +
jz loc_415091  +
cmp dword ptr [ebx+38h] 0 +
jz loc_41517A  +
mov ecx [ebx+3Ch] +
mov [ecx] edx +
mov edx [eax+8] +
mov [ebx+3Ch] edx +
mov edx [eax+20h] +
test edx edx +
jz loc_4150AD  +
cmp dword ptr [ebx+38h] 0 +
jz loc_415172  +
mov ecx [ebx+3Ch] +
mov [ecx] edx +
mov eax [eax+24h] +
mov [ebx+3Ch] eax +
mov [esp+1Ch+arg_0] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_411560  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] 1909h +
mov [esp+1Ch+var_18] offset a____Binutils_1 +
mov [esp+1Ch+var_1C] offset aInfoType_sta_2 +
call sub_48C4C0  +
mov eax [ebx+54h] +
jmp loc_414EF1  +
mov ebp [esi+14h] +
test ebp ebp +
jz loc_414FA3  +
nop   +
jmp loc_414F0B  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_414FD4  +
jmp loc_414F34  +
mov [esp+1Ch+var_1C] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [esi+4] eax +
mov [esi+8] eax +
jmp loc_414F19  +
mov [esp+1Ch+var_1C] 1F4h +
call sub_4742F0  +
xor edx edx +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebx+38h] eax +
mov [ebx+3Ch] eax +
mov [ebx+8] esi +
mov [ebx+0Ch] eax +
jmp loc_414FC9  +
mov [ebx+38h] edx +
jmp loc_4150A7  +
mov [ebx+38h] edx +
jmp loc_41508B  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov eax [ebx+54h] +
test eax eax +
jz loc_415270  +
mov edx [eax] +
test edx edx +
jz loc_415270  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_415270  +
test byte ptr [edx+24h] 8 +
jnz loc_415255  +
mov esi [eax+8] +
mov edx 1 +
movzx eax byte ptr [eax+24h] +
mov [esp+3Ch+var_20] esi +
mov ecx eax +
and ecx 1 +
mov [esp+3Ch+var_19] cl +
mov ecx eax +
shr al 2 +
shr cl 1 +
mov edi eax +
mov eax ebx +
mov esi ecx +
call sub_410A70  +
and edi 1 +
and esi 1 +
mov [esp+3Ch+var_18] eax +
mov eax edi +
mov edi [ebx+54h] +
test al al +
jz loc_415207  +
or byte ptr [edi+24h] 4 +
mov ebp [edi+20h] +
test ebp ebp +
jz loc_415410  +
mov eax [esp+3Ch+arg_10] +
call sub_40FAF0  +
mov edi [ebp+0] +
lea ecx [ebp+4] +
mov [esp+3Ch+var_14] eax +
mov eax [ebp+4] +
test eax eax +
jz loc_415535  +
mov [ebx+8] ecx +
mov eax [ebp+8] +
mov ecx 64h +
mov edx edi +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jnz loc_415296  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
xor edx edx +
call sub_410A70  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] 1734h +
mov [esp+3Ch+var_38] offset a____Binutils_1 +
mov [esp+3Ch+var_3C] offset aInfoType_sta_4 +
call sub_48C4C0  +
mov eax [ebx+54h] +
mov edx [eax] +
jmp loc_4151BB  +
mov ecx [esp+3Ch+var_14] +
mov edx edi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_41524B  +
mov ecx [esp+3Ch+arg_4] +
mov edx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_41524B  +
mov ecx [esp+3Ch+arg_4] +
mov edx edi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_41524B  +
mov edi [ebx+54h] +
mov eax esi +
mov ebp [edi+20h] +
add dword ptr [ebp+0Ch] 4 +
test al al +
jz loc_415410  +
mov esi [ebx+5Ch] +
lea edi [ebp+20h] +
lea eax [esi+1] +
mov [ebx+5Ch] eax +
mov eax [ebp+20h] +
test eax eax +
jz loc_4155A2  +
mov [ebx+8] edi +
mov eax [ebp+24h] +
mov edx [eax+4] +
mov [ebx+0Ch] eax +
cmp edx 1E9h +
ja loc_415585  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx offset unk_499AD3 +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_41524B  +
mov edx 0F1CEh +
mov eax ebx +
call sub_40FC00  +
test eax eax +
jz loc_41524B  +
mov edx esi +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
xor edx edx +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx 3Eh +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx 50h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx 4 +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov ecx 52h +
mov edx esi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_41524B  +
mov ecx 3 +
mov edx esi +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_41524B  +
mov eax [ebx+54h] +
mov edx esi +
mov ecx [eax+0Ch] +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_41524B  +
mov ecx [esp+3Ch+arg_4] +
mov edx esi +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_41524B  +
mov edi [ebx+54h] +
lea esi [esi+0] +
mov ecx [esp+3Ch+var_20] +
test ecx ecx +
jz loc_415420  +
mov edx [esp+3Ch+arg_C] +
test edx edx +
jnz loc_415480  +
shr [esp+3Ch+arg_8] 3 +
mov eax [edi+18h] +
lea esi [edi+18h] +
test eax eax +
jz loc_415561  +
mov [ebx+8] esi +
mov eax [edi+1Ch] +
mov edx [esp+3Ch+arg_4] +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_40FC80  +
test eax eax +
jz loc_41524B  +
mov edx [esp+3Ch+var_18] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx [esp+3Ch+arg_8] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41524D  +
mov eax [esp+3Ch+var_20] +
shl eax 3 +
cmp eax [esp+3Ch+arg_C] +
jz loc_415420  +
mov [esp+3Ch+var_30] 0 +
movzx eax byte ptr [edi+24h] +
xor edx edx +
mov [esp+3Ch+var_3C] 0 +
mov ecx 0FFFFFFFFh +
shr al 2 +
and eax 1 +
mov [esp+3Ch+var_34] eax +
movzx eax [esp+3Ch+var_19] +
mov [esp+3Ch+var_38] eax +
mov eax ebx +
call sub_410D80  +
test eax eax +
jz loc_41524B  +
mov edx 67h +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
movzx edx [esp+3Ch+var_19] +
mov eax ebx +
xor edx 1 +
movzx edx dl +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx [esp+3Ch+arg_C] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx [esp+3Ch+var_18] +
mov eax ebx +
call sub_4106E0  +
test eax eax +
jz loc_41524B  +
mov edx 1 +
mov eax ebx +
call sub_410A70  +
mov edi [ebx+54h] +
mov [esp+3Ch+var_18] eax +
jmp loc_415425  +
mov [esp+3Ch+var_3C] 1F4h +
mov [esp+3Ch+var_10] ecx +
call sub_4742F0  +
mov ecx [esp+3Ch+var_10] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebp+4] eax +
mov [ebp+8] eax +
jmp loc_415230  +
mov [esp+3Ch+var_3C] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [edi+18h] eax +
mov [edi+1Ch] eax +
jmp loc_415433  +
lea edx [ebx+0Ch] +
mov ecx 0F0h +
lea eax [ebx+8] +
call sub_40FB80  +
test eax eax +
jnz loc_415317  +
jmp loc_41524B  +
mov [esp+3Ch+var_3C] 1F4h +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [ebp+20h] eax +
mov [ebp+24h] eax +
jmp loc_4152F4  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_8] +
test edi edi +
jz loc_415760  +
mov eax [esp+3Ch+arg_14] +
test eax eax +
jz loc_4155FB  +
mov esi [esp+3Ch+arg_18] +
test esi esi +
jz loc_415630  +
xor esi esi +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] eax +
call sub_4116C0  +
test eax eax +
jnz loc_415650  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+54h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_415787  +
mov edx 1 +
mov eax ebx +
call sub_410A70  +
jmp loc_4155FD  +
mov ebp [ebx+5Ch] +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_10] 0 +
lea eax [ebp+1] +
mov [ebx+5Ch] eax +
mov [esp+3Ch+var_3C] 1F4h +
call sub_4742F0  +
lea edx [esp+3Ch+var_14] +
mov ecx 54h +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [esp+3Ch+var_14] eax +
mov [esp+3Ch+var_10] eax +
mov [ebx+8] edx +
mov edx ebp +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_412BA0  +
test eax eax +
jz loc_415621  +
cmp [esp+3Ch+arg_C] 1 +
mov edx ebp +
mov eax ebx +
sbb ecx ecx +
and ecx 6 +
add ecx 6Fh +
call sub_412BA0  +
test eax eax +
jz loc_415621  +
mov ecx edi +
mov edx ebp +
mov eax ebx +
call sub_413CB0  +
test eax eax +
jz loc_415621  +
mov [esp+3Ch+var_3C] 28h +
call sub_4742F0  +
mov [esp+3Ch+var_20] 28h +
test al 1 +
mov edx eax +
mov edi eax +
jnz loc_4157BB  +
test edi 2 +
jnz loc_4157A8  +
mov ecx [esp+3Ch+var_20] +
xor eax eax +
shr ecx 2 +
stos   +
test byte ptr [esp+3Ch+var_20] 2 +
jz loc_415722  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
test byte ptr [esp+3Ch+var_20] 1 +
jz loc_41572C  +
mov byte ptr [edi] 0 +
mov eax [esp+3Ch+arg_18] +
mov [edx] ebp +
mov edi [esp+3Ch+var_14] +
mov ebp [esp+3Ch+var_10] +
mov dword ptr [edx+0Ch] 3 +
mov [edx+14h] eax +
mov eax [ebx+54h] +
mov [edx+4] edi +
mov [edx+8] ebp +
mov [edx+10h] esi +
mov [eax+20h] edx +
mov eax 1 +
jmp loc_415623  +
mov [esp+3Ch+var_3C] 14h +
call sub_4742F0  +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] offset a__anonU +
mov [esp+3Ch+var_3C] eax +
mov edi eax +
call sprintf  +
jmp loc_4155EB  +
mov [esp+3Ch+var_34] 17EEh +
mov [esp+3Ch+var_38] offset a____Binutils_1 +
mov [esp+3Ch+var_3C] offset aVclassNull +
call sub_48C4C0  +
jmp loc_41563E  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub [esp+3Ch+var_20] 2 +
jmp loc_415707  +
mov byte ptr [eax] 0 +
lea edi [eax+1] +
mov [esp+3Ch+var_20] 27h +
jmp loc_4156FB  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
cmp ebx [eax+0Ch] +
mov [esp+1Ch+var_10] ecx +
mov ebp [esp+1Ch+arg_4] +
jnb loc_415826  +
movzx edi byte ptr [ebx] +
lea esi [ebx+1] +
mov [edx] esi +
mov ecx edi +
test cl cl +
js loc_415840  +
movzx edi cl +
mov ebx [eax+0Ch] +
sub ebx esi +
cmp edi ebx +
ja loc_415826  +
mov eax [esp+1Ch+var_10] +
mov [eax] esi +
mov eax [esp+1Ch+arg_0] +
mov [eax] edi +
add [edx] edi +
test ebp ebp +
jz loc_415873  +
mov dword ptr [ebp+0] 1 +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
mov edx offset aUnexpectedEndO +
call sub_4104F0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx edi +
cmp cl 0DEh +
jz loc_415868  +
mov ecx edi +
cmp cl 0DFh +
jz loc_415880  +
test ebp ebp +
jz loc_415897  +
mov [edx] ebx +
mov eax 1 +
mov dword ptr [ebp+0] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea esi [ebx+2] +
movzx edi byte ptr [ebx+1] +
mov [edx] esi +
jmp loc_4157F7  +
mov eax 1 +
jmp loc_41581E  +
movzx esi byte ptr [ebx+1] +
movzx edi byte ptr [ebx+2] +
shl esi 8 +
add edi esi +
lea esi [ebx+3] +
mov [edx] esi +
jmp loc_4157F7  +
mov esi [eax+4] +
lea edx [eax+8] +
mov ecx ebx +
mov [esp+1Ch+var_1C] offset aInvalidStringL +
mov eax esi +
call sub_410520  +
xor eax eax +
jmp loc_41581E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [edx] +
cmp esi [eax+0Ch] +
mov edi [esp+1Ch+arg_0] +
jb loc_4158F0  +
test edi edi +
jz loc_415980  +
mov dword ptr [edi] 0 +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebp byte ptr [esi] +
lea ebx [esi+1] +
mov [esp+1Ch+var_10] ebx +
mov [edx] ebx +
cmp ebp 7Fh +
ja loc_415920  +
test edi edi +
mov [ecx] ebp +
jz loc_4158E0  +
mov dword ptr [edi] 1 +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [ebp-80h] +
cmp ebx 8 +
ja loc_415971  +
mov esi ebx +
mov ebx [esp+1Ch+var_10] +
lea ebp [ebx+ebp-81h] +
cmp [eax+0Ch] ebp +
jbe loc_415980  +
xor eax eax +
test esi esi +
mov ebp [esp+1Ch+var_10] +
mov dword ptr [ecx] 0 +
mov ebx [esp+1Ch+var_10] +
jz loc_415968  +
nop   +
shl eax 8 +
mov [ecx] eax +
movzx ebx byte ptr [ebx] +
add eax ebx +
sub esi 1 +
lea ebx [ebp+1] +
mov [ecx] eax +
mov ebp ebx +
mov [edx] ebx +
jnz loc_415950  +
test edi edi +
jnz loc_415907  +
jmp loc_4158E0  +
test edi edi +
jz loc_415994  +
mov [edx] esi +
jmp loc_4158DA  +
mov eax [eax+4] +
mov edx offset aUnexpectedEndO +
call sub_4104F0  +
xor eax eax +
jmp loc_4158E5  +
mov ebx [eax+4] +
lea edx [eax+8] +
mov ecx esi +
mov [esp+1Ch+var_1C] offset aInvalidNumber +
mov eax ebx +
call sub_410520  +
xor eax eax +
jmp loc_4158E5  +
***
jmp sub_4159C0  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 6Ch +
mov eax [edx] +
mov [esp+74h+var_58] ecx +
lea ebx [esp+74h+var_3C] +
mov [esp+74h+var_5C] eax +
mov ebp eax +
lea eax [edi+8] +
mov [esp+74h+var_60] eax +
lea eax [esp+74h+var_44] +
mov edx esi +
mov [esp+74h+var_74] eax +
lea ecx [esp+74h+var_48] +
mov eax edi +
call sub_4158C0  +
test eax eax +
jz loc_415AC2  +
mov eax [esp+74h+var_44] +
test eax eax +
jz loc_415A27  +
mov eax ebx +
lea ecx [esp+74h+var_3C] +
sub eax ecx +
cmp eax 27h +
jg loc_415B10  +
mov eax [esp+74h+var_48] +
add ebx 4 +
mov [ebx-4] eax +
mov eax [esi] +
mov ebp eax +
jmp loc_4159E2  +
mov eax [esi] +
movzx edx byte ptr [eax] +
movzx ecx dl +
cmp ecx 0DFh +
ja loc_415B50  +
add eax 1 +
cmp ecx 90h +
mov [esi] eax +
jz loc_415B50  +
cmp dl 0A5h +
jb loc_415AF1  +
cmp dl 0A6h +
jbe loc_415AD0  +
cmp dl 0D2h +
jnz loc_415AF1  +
mov [esp+74h+var_74] 0 +
lea ecx [esp+74h+var_40] +
mov edx esi +
mov eax edi +
call sub_4158C0  +
test eax eax +
jz loc_415AC2  +
mov eax [edi+4] +
mov edx [eax+64h] +
mov [esp+74h+var_64] eax +
test edx edx +
jz loc_415B89  +
mov ecx [esp+74h+var_40] +
cmp [edx+88h] ecx +
mov eax [esp+74h+var_64] +
jnz loc_415AAA  +
jmp loc_415B2A  +
cmp [edx+88h] ecx +
jz loc_415B26  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_415AA2  +
lea edx [edi+8] +
mov ecx ebp +
mov [esp+74h+var_74] offset aUnknownSection +
call sub_410520  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebx +
lea ecx [esp+74h+var_3C] +
sub edx ecx +
cmp edx 7 +
jle loc_415B92  +
mov edx [ebx-4] +
mov ebp eax +
add [ebx-8] edx +
sub ebx 4 +
jmp loc_4159E2  +
mov eax [edi+4] +
mov ecx ebp +
mov edx [esp+74h+var_60] +
mov [esp+74h+var_74] offset aUnsupportedIee +
call sub_410520  +
mov eax [esi] +
mov ebp eax +
jmp loc_4159E2  +
mov eax [edi+4] +
lea edx [edi+8] +
mov ecx ebp +
mov [esp+74h+var_74] offset aExpressionStac +
call sub_410520  +
jmp loc_415AC2  +
mov [esp+74h+var_64] eax +
mov ecx ebx +
lea eax [esp+74h+var_3C] +
sub ecx eax +
cmp ecx 27h +
jg loc_415BAB  +
mov eax [edx+1Ch] +
add ebx 4 +
mov [ebx-4] eax +
mov eax [esi] +
mov ebp eax +
jmp loc_4159E2  +
lea eax [ebx-4] +
lea esi [esp+74h+var_3C] +
cmp eax esi +
jz loc_415B76  +
mov eax [edi+4] +
lea edx [edi+8] +
mov ecx [esp+74h+var_5C] +
mov [esp+74h+var_74] offset aExpressionSt_0 +
call sub_410520  +
jmp loc_415AC2  +
mov eax [ebx-4] +
mov edi [esp+74h+var_58] +
mov [edi] eax +
mov eax 1 +
jmp loc_415AC4  +
mov eax [esp+74h+var_64] +
jmp loc_415AB1  +
mov eax [edi+4] +
lea edx [edi+8] +
mov ecx ebp +
mov [esp+74h+var_74] offset aExpressionSt_1 +
call sub_410520  +
jmp loc_415AC2  +
mov eax [esp+74h+var_64] +
lea edx [edi+8] +
mov ecx ebp +
mov [esp+74h+var_74] offset aExpressionStac +
call sub_410520  +
jmp loc_415AC2  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 20h +
mov ecx [edx] +
cmp byte ptr [ecx] 0E2h +
jnz loc_415BF6  +
lea eax [ecx+1] +
mov [edx] eax +
movzx eax byte ptr [ecx+1] +
or ah 0E2h +
cmp eax 0E2CEh +
jz loc_415C11  +
mov eax [esi+4] +
lea edx [esi+8] +
mov [esp+28h+var_28] offset aMissingRequire +
call sub_410520  +
xor eax eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add ecx 2 +
mov eax esi +
mov [edx] ecx +
lea ecx [esp+28h+var_C] +
mov [esp+28h+var_28] 0 +
call sub_4158C0  +
test eax eax +
jz loc_415C0A  +
mov ecx edi +
mov edx ebx +
mov eax esi +
call sub_4159C0  +
jmp loc_415C0A  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
lea ecx [ecx-20h] +
sub esp 2Ch +
mov edi [eax] +
cmp ecx 1Fh +
jbe loc_415C67  +
cmp ebx 19h +
ja loc_416050  +
jmp ds:off_49A108[ebx*4]  +
mov eax [eax+ebx*4+0ACh] +
test eax eax +
jnz loc_415C79  +
mov eax esi +
call sub_415C40  +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] eax +
call sub_408690  +
cmp ebx 3Bh +
mov edi eax +
jbe loc_415CA8  +
mov [esp+38h+var_30] 25Ch +
mov [esp+38h+var_34] offset a____Binutils_1 +
mov [esp+38h+var_38] offset aIndxBuiltin_ty +
call sub_48C4C0  +
mov [esi+ebx*4+12Ch] edi +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aSignedShort +
lea esi [esi+0] +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] edx +
mov [esp+38h+var_38] edi +
call sub_408C50  +
mov [esi+ebx*4+12Ch] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aShortInt_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aUnsignedShor_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aShort_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aLong_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aChar_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aUnsignedInt_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aUnsigned +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aInt_3 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aInstructionAdd +
jmp loc_415CE0  +
mov eax [eax+16Ch] +
test eax eax +
mov [esp+38h+var_1C] eax +
jz loc_41607E  +
mov eax [esi+178h] +
test eax eax +
jz loc_41606B  +
mov edx [esp+38h+var_1C] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_28] 0FFFFFFFFh +
mov [esp+38h+var_2C] 0 +
mov [esp+38h+var_30] edx +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
call sub_4087B0  +
mov edx offset aQuotedString +
jmp loc_415CE0  +
mov [esp+38h+var_34] 10h +
mov [esp+38h+var_38] edi +
call sub_4084B0  +
mov edx offset aLongLongDouble +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aSignedLong +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aUnsignedShortI +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 2 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aSignedShortInt +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aUnsignedChar_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aSignedChar_1 +
jmp loc_415CE0  +
mov [esp+38h+var_38] edi +
call sub_408480  +
mov edx offset aVoid_0 +
jmp loc_415CE0  +
mov [esp+38h+var_38] edi +
call sub_408480  +
jmp loc_415CF0  +
mov eax [eax+4] +
lea edx [esi+8] +
mov ecx ebp +
mov [esp+38h+var_38] offset aBcdFloatTypeNo +
call sub_410520  +
xor eax eax +
jmp loc_415CB1  +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_4084B0  +
mov edx offset aFloat_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aUnsignedLong_0 +
jmp loc_415CE0  +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aSignedLongLong +
jmp loc_415CE0  +
mov [esp+38h+var_30] 1 +
mov [esp+38h+var_34] 4 +
mov [esp+38h+var_38] edi +
call sub_408490  +
mov edx offset aUnsignedLong_1 +
jmp loc_415CE0  +
mov [esp+38h+var_34] 0Ch +
mov [esp+38h+var_38] edi +
call sub_4084B0  +
mov edx offset aLongDouble_0 +
jmp loc_415CE0  +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] edi +
call sub_4084B0  +
mov edx offset aDouble_0 +
jmp loc_415CE0  +
mov eax [eax+4] +
lea edx [esi+8] +
mov ecx ebp +
mov [esp+38h+var_38] offset aUnknownBuiltin +
call sub_410520  +
xor eax eax +
jmp loc_415CB1  +
mov ecx 13h +
mov edx ebp +
mov eax esi +
call sub_415C40  +
jmp loc_415E52  +
mov ecx 10h +
mov eax esi +
call sub_415C40  +
mov [esp+38h+var_1C] eax +
jmp loc_415E44  +
***
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 20h +
mov edi [edx] +
lea ecx [esp+24h+var_8] +
mov [esp+24h+var_24] 0 +
call sub_4158C0  +
test eax eax +
jz loc_416100  +
mov ecx [esp+24h+var_8] +
cmp ecx 0FFh +
ja loc_416110  +
cmp ecx 3Bh +
ja loc_4160F0  +
mov eax [ebx+ecx*4+12Ch] +
test eax eax +
jz loc_4160F0  +
mov [esi] eax +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx edi +
mov eax ebx +
call sub_415C40  +
test eax eax +
mov [esi] eax +
jnz loc_4160DE  +
nop   +
add esp 20h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [ecx-100h] +
mov eax ebx +
mov ecx 1 +
mov [esp+24h+var_8] edx +
call sub_40F9D0  +
test eax eax +
jz loc_416100  +
mov eax [esp+24h+var_8] +
shl eax 4 +
add eax [ebx+128h] +
mov eax [eax] +
jmp loc_4160DC  +
***
push esi  +
push ebx  +
sub esp 2ACh +
mov eax [esp+2ACh+arg_0] +
lea edx [esp+2ACh+var_14] +
mov ecx [esp+2ACh+arg_8] +
mov [esp+2ACh+var_11C] 0 +
mov [esp+2ACh+var_118] 0 +
mov [esp+2ACh+var_230] eax +
mov eax [esp+2ACh+arg_4] +
mov [esp+2ACh+var_228] ecx +
mov [esp+2ACh+var_114] 0 +
mov [esp+2ACh+var_110] 0 +
mov [esp+2ACh+var_22C] eax +
mov eax [esp+2ACh+arg_C] +
mov [esp+2ACh+var_10C] 0 +
mov [esp+2ACh+var_108] 0 +
mov [esp+2ACh+var_14] 0 +
add eax ecx +
mov [esp+2ACh+var_294] eax +
mov [esp+2ACh+var_224] eax +
lea eax [esp+2ACh+var_21C] +
mov [esp+2ACh+var_220] eax +
lea eax [esp+2ACh+var_104] +
mov [esp+2ACh+var_10] 0 +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp eax edx +
jnz loc_416200  +
mov [esp+2ACh+var_264] ecx +
cmp [esp+2ACh+var_294] ecx +
jbe loc_4167DB  +
lea eax [ecx+1] +
mov [esp+2ACh+var_264] eax +
movzx eax byte ptr [ecx] +
cmp eax 0F1h +
jz loc_416383  +
cmp eax 88h +
jbe loc_41680C  +
cmp eax 0F8h +
jz loc_41639C  +
ja loc_4162E0  +
cmp eax 0F0h +
jz loc_416437  +
cmp eax 0F2h +
jnz loc_416410  +
lea ebp [esp+2ACh+var_230] +
mov edi [esp+2ACh+var_264] +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_260] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_260] +
cmp eax 0FFh +
jbe loc_416779  +
lea edx [eax-100h] +
xor ecx ecx +
mov eax ebp +
mov [esp+2ACh+var_260] edx +
call sub_40F9D0  +
test eax eax +
jz loc_4162D1  +
mov ecx [esp+2ACh+var_264] +
cmp byte ptr [ecx] 0CEh +
jz loc_41682D  +
mov eax [esp+2ACh+var_22C] +
lea edx [esp+2ACh+var_228] +
mov [esp+2ACh+var_2AC] offset aUnknownTyCode +
call sub_410520  +
xor eax eax +
add esp 2ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0F9h +
jz loc_4164D0  +
cmp eax 0F1CEh +
jnz loc_416410  +
lea ebp [esp+2ACh+var_230] +
mov edi [esp+2ACh+var_264] +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_25C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea ecx [esp+2ACh+var_258] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_264] +
lea ecx [esp+2ACh+var_254] +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_290] eax +
mov eax ebp +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_25C] +
test eax eax +
jnz loc_4168CF  +
mov ebx [esp+2ACh+var_230] +
xor edi edi +
mov eax [esp+2ACh+var_254] +
mov [esp+2ACh+var_23C] offset unk_499AD3 +
mov [esp+2ACh+var_238] 0 +
cmp eax 40h +
ja loc_41765A  +
jmp ds:off_49A5A8[eax*4]  +
lea eax [ecx+2] +
mov [esp+2ACh+var_264] eax +
movzx eax byte ptr [ecx+1] +
or ah 0F1h +
cmp eax 0F8h +
jnz loc_416246  +
mov ebx [esp+2ACh+var_264] +
lea ebp [esp+2ACh+var_230] +
lea ecx [esp+2ACh+var_258] +
lea edx [esp+2ACh+var_264] +
movzx eax byte ptr [ebx] +
mov [esp+2ACh+var_2AC] 0 +
mov byte ptr [esp+2ACh+var_290] al +
lea eax [ebx+1] +
mov [esp+2ACh+var_264] eax +
mov eax ebp +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_250] +
mov [esp+2ACh+var_2AC] eax +
lea ecx [esp+2ACh+var_254] +
mov eax ebp +
mov [esp+2ACh+var_2A8] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
movzx eax byte ptr [esp+2ACh+var_290] +
cmp al 0Bh +
ja loc_416E56  +
jmp ds:off_49A6AC[eax*4]  +
mov eax [esp+2ACh+var_22C] +
lea edx [esp+2ACh+var_228] +
mov [esp+2ACh+var_2AC] offset aUnexpectedReco +
call sub_410520  +
add esp 2ACh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esp+2ACh+var_23C] +
mov ebx [esp+2ACh+var_264] +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
lea eax [esp+2ACh+var_230] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
lea esi [esp+2ACh+var_234] +
mov ecx eax +
mov [esp+2ACh+var_2A8] 0 +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_2AC] esi +
lea eax [esp+2ACh+var_230] +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_23C] +
cmp eax 1Fh +
jbe loc_4174B0  +
mov ebx [esp+2ACh+var_118] +
sub eax 20h +
mov [esp+2ACh+var_23C] eax +
mov edx eax +
cmp eax ebx +
jb loc_4166BC  +
test ebx ebx +
jnz loc_416660  +
cmp eax 3 +
mov bl 4 +
ja loc_416660  +
mov eax 50h +
jmp loc_41666C  +
mov edx [esp+2ACh+var_220] +
lea eax [esp+2ACh+var_21C] +
lea ebp [esp+2ACh+var_230] +
cmp edx eax +
jbe loc_41679A  +
lea eax [edx-10h] +
mov edx [edx-10h] +
mov [esp+2ACh+var_220] eax +
cmp edx 5 +
jz loc_416739  +
jle loc_416554  +
cmp edx 0Bh +
jz loc_4167BD  +
cmp edx 86h +
jnz loc_4166DF  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4159C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
add eax 1 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_408040  +
test eax eax +
jz loc_4162D1  +
jmp loc_4166E4  +
cmp edx 2 +
jnz loc_4166ED  +
mov [esp+2ACh+var_2AC] 8 +
call sub_4742F0  +
mov ebx eax +
mov [esp+2ACh+var_110] eax +
mov eax [esp+2ACh+var_118] +
mov [ebx] eax +
lea eax [eax+eax*4] +
shl eax 2 +
mov [esp+2ACh+var_2AC] eax +
call sub_4742F0  +
mov [ebx+4] eax +
mov eax [esp+2ACh+var_110] +
mov edx [eax+4] +
mov eax [esp+2ACh+var_118] +
mov [esp+2ACh+var_2AC] edx +
lea eax [eax+eax*4] +
shl eax 2 +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_114] +
mov [esp+2ACh+var_2A8] eax +
call memcpy  +
mov [esp+2ACh+var_2AC] 0F8h +
call sub_4742F0  +
mov ebx eax +
mov [esp+2ACh+var_14] eax +
mov eax [esp+2ACh+var_10C] +
mov [ebx] eax +
shl eax 4 +
mov [esp+2ACh+var_2AC] eax +
call sub_4742F0  +
mov [ebx+4] eax +
mov eax [esp+2ACh+var_14] +
mov edx [eax+4] +
mov eax [esp+2ACh+var_10C] +
mov [esp+2ACh+var_2AC] edx +
shl eax 4 +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_108] +
mov [esp+2ACh+var_2A8] eax +
call memcpy  +
mov eax [esp+2ACh+var_14] +
mov edx 0F0h +
lea edi [eax+8] +
test edi 1 +
jnz loc_417548  +
test edi 2 +
jnz loc_417537  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_41664F  +
xor esi esi +
add edi 2 +
mov [edi-2] si +
and edx 1 +
jz loc_4166E4  +
mov byte ptr [edi] 0 +
jmp loc_4166E4  +
add ebx ebx +
cmp eax ebx +
jnb loc_416660  +
lea eax [ebx+ebx*4] +
shl eax 2 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_114] +
mov [esp+2ACh+var_2AC] eax +
call sub_474370  +
mov edx [esp+2ACh+var_118] +
mov ecx ebx +
mov [esp+2ACh+var_2A8] 0 +
sub ecx edx +
lea ecx [ecx+ecx*4] +
lea edx [edx+edx*4] +
mov [esp+2ACh+var_114] eax +
shl ecx 2 +
lea eax [eax+edx*4] +
mov [esp+2ACh+var_2A4] ecx +
mov [esp+2ACh+var_2AC] eax +
call memset  +
mov edx [esp+2ACh+var_23C] +
mov [esp+2ACh+var_118] ebx +
mov eax [esp+2ACh+var_114] +
lea edx [edx+edx*4] +
mov ecx [esp+2ACh+var_264] +
lea eax [eax+edx*4] +
mov edx [esp+2ACh+var_238] +
mov [eax] edx +
mov edx [esp+2ACh+var_234] +
mov [eax+4] edx +
jmp loc_416211  +
cmp edx 6 +
jz loc_4166F2  +
mov ecx [esp+2ACh+var_264] +
jmp loc_416211  +
cmp edx 4 +
jnz loc_4166E4  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4159C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_220] +
mov ebx [eax+0Ch] +
test ebx ebx +
jnz loc_4166E4  +
mov eax [esp+2ACh+var_234] +
add eax 1 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_407EC0  +
test eax eax +
jnz loc_4166E4  +
jmp loc_4162D1  +
lea edi [esp+2ACh+var_21C] +
cmp eax edi +
ja loc_416751  +
jmp loc_4166E4  +
lea esi [esp+2ACh+var_21C] +
cmp eax esi +
jz loc_4166E4  +
sub eax 10h +
cmp dword ptr [eax] 5 +
jnz loc_416746  +
mov eax [eax+4] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_407C00  +
test eax eax +
jz loc_4162D1  +
jmp loc_4166E4  +
mov eax [esp+2ACh+var_22C] +
mov ecx edi +
mov [esp+2ACh+var_2AC] offset aIllegalTypeInd +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
mov ecx [esp+2ACh+var_264] +
lea edx [esp+2ACh+var_228] +
mov eax [esp+2ACh+var_22C] +
mov [esp+2ACh+var_2AC] offset aStackUnderflow +
call sub_410520  +
jmp loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4159C0  +
test eax eax +
jz loc_4162D1  +
jmp loc_4166E4  +
lea esi [esp+2ACh+var_21C] +
mov eax 1 +
cmp [esp+2ACh+var_220] esi +
jz loc_4162D3  +
mov eax [esp+2ACh+var_22C] +
mov edx offset aBlocksLeftOnSt +
call sub_4104F0  +
xor eax eax +
jmp loc_4162D3  +
mov eax [esp+2ACh+var_22C] +
lea edx [esp+2ACh+var_228] +
mov [esp+2ACh+var_2AC] offset aUnexpectedNumb +
call sub_410520  +
xor eax eax +
jmp loc_4162D3  +
lea esi [ecx+1] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_25C] +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_264] esi +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_25C] +
cmp eax 1Fh +
jbe loc_417592  +
sub eax 20h +
cmp eax [esp+2ACh+var_118] +
mov [esp+2ACh+var_25C] eax +
jnb loc_417556  +
mov edx [esp+2ACh+var_114] +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
mov ecx [eax] +
test ecx ecx +
jz loc_417556  +
mov eax [esp+2ACh+var_264] +
lea ecx [esp+2ACh+var_258] +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_28C] eax +
mov eax ebp +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_290] eax +
mov eax [esp+2ACh+var_258] +
sub eax 21h +
cmp eax 57h +
ja loc_418067  +
jmp ds:off_49A6DC[eax*4]  +
cmp eax 1Fh +
ja loc_4174D1  +
cmp [esp+2ACh+var_254] 9 +
lea esi [esi+0] +
jz loc_417577  +
mov eax [esp+2ACh+var_22C] +
mov ecx edi +
mov [esp+2ACh+var_2AC] offset aIllegalVariabl +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
mov eax [esp+2ACh+var_11C] +
test eax eax +
jnz loc_417512  +
mov edx [esp+2ACh+var_250] +
mov eax [esp+2ACh+var_254] +
call sub_40F8E0  +
test eax eax +
mov ebx eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_407B50  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_11C] 1 +
lea eax [esp+2ACh+var_244] +
mov [esp+2ACh+var_2AC] eax +
lea ecx [esp+2ACh+var_24C] +
mov eax ebp +
mov [esp+2ACh+var_2A8] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
mov [esp+2ACh+var_28C] eax +
lea edi [esp+2ACh+var_248] +
mov [esp+2ACh+var_2A8] eax +
lea eax [esp+2ACh+var_240] +
mov ecx edi +
mov [esp+2ACh+var_2AC] eax +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
mov edi 6 +
lea esi [esp+2ACh+var_234] +
jmp loc_4169E5  +
mov eax [esp+2ACh+var_238] +
test eax eax +
jz loc_416CB1  +
sub edi 1 +
jz loc_416CB1  +
mov eax [esp+2ACh+var_28C] +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_2AC] eax +
mov eax ebp +
call sub_4158C0  +
test eax eax +
jnz loc_4169D0  +
jmp loc_4162D1  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4159C0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_250] +
test edx edx +
jz loc_417F0F  +
mov eax [esp+2ACh+var_254] +
cmp edx 9 +
mov ecx 9 +
cmovle ecx edx +
mov edi offset a__xrycpp +
cmp ecx ecx +
mov esi eax +
cmps   +
mov [esp+2ACh+var_28C] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_417EFE  +
mov ecx [esp+2ACh+var_238] +
cmp ecx 0FFh +
ja loc_417F3E  +
cmp ecx 3Bh +
ja loc_417CE7  +
mov esi [esp+ecx*4+2ACh+var_104] +
test esi esi +
jz loc_417CE7  +
mov eax [esp+2ACh+var_28C] +
mov edi 0FFFFFFFFh +
call sub_40F8E0  +
test eax eax +
mov ebx eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A0] 0 +
mov [esp+2ACh+var_29C] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2A4] esi +
mov [esp+2ACh+var_2A8] ebx +
mov [esp+2ACh+var_2AC] eax +
call sub_407CC0  +
test eax eax +
jz loc_4162D1  +
xor eax eax +
mov edx [esp+2ACh+var_220] +
lea ecx [esp+2ACh+var_11C] +
cmp edx ecx +
jnb loc_417521  +
movzx esi byte ptr [esp+2ACh+var_290] +
mov ecx esi +
movzx ecx cl +
mov [edx] ecx +
mov ecx esi +
cmp cl 5 +
jz loc_417519  +
mov [edx+8] edi +
add edx 10h +
mov ecx [esp+2ACh+var_264] +
mov [edx-4] eax +
mov [esp+2ACh+var_220] edx +
jmp loc_416211  +
lea eax [esp+2ACh+var_244] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_240] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4159C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
lea esi [esp+2ACh+var_234] +
mov ecx eax +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
xor eax eax +
mov edi 0FFFFFFFFh +
xor ebx ebx +
jmp loc_416B05  +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2A8] offset aGlobal +
mov [esp+2ACh+var_2AC] eax +
call sub_407B50  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_11C] 1 +
xor eax eax +
mov edi 0FFFFFFFFh +
xor ebx ebx +
jmp loc_416B05  +
lea eax [esp+2ACh+var_238] +
mov ebx 6 +
mov [esp+2ACh+var_28C] eax +
lea esi [esp+2ACh+var_234] +
mov ecx [esp+2ACh+var_28C] +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
test eax eax +
jz loc_416C3F  +
sub ebx 1 +
jnz loc_416C18  +
mov eax [esp+2ACh+var_11C] +
test eax eax +
jnz loc_416C82  +
mov edx [esp+2ACh+var_250] +
mov eax [esp+2ACh+var_254] +
call sub_40F8E0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_407B50  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_11C] 1 +
mov edx [esp+2ACh+var_250] +
mov eax [esp+2ACh+var_254] +
call sub_40F8E0  +
test eax eax +
mov ebx eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_407C00  +
test eax eax +
jz loc_4162D1  +
xor eax eax +
mov edi 0FFFFFFFFh +
jmp loc_416B05  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4159C0  +
test eax eax +
jz loc_4162D1  +
mov ecx [esp+2ACh+var_238] +
cmp ecx 0FFh +
ja loc_4177A2  +
cmp ecx 3Bh +
ja loc_417785  +
mov esi [esp+ecx*4+2ACh+var_104] +
mov edi 0FFFFFFFFh +
test esi esi +
jz loc_417785  +
mov edx [esp+2ACh+var_250] +
mov eax [esp+2ACh+var_254] +
call sub_40F8E0  +
test eax eax +
mov ebx eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A0] 1 +
mov [esp+2ACh+var_29C] eax +
jmp loc_416AE7  +
mov edx [esp+2ACh+var_250] +
mov eax [esp+2ACh+var_254] +
call sub_40F8E0  +
test eax eax +
mov ebx eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_407B50  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_114] +
mov [esp+2ACh+var_11C] 1 +
test eax eax +
jz loc_416DBD  +
mov [esp+2ACh+var_2AC] eax +
call free  +
mov eax [esp+2ACh+var_108] +
mov [esp+2ACh+var_114] 0 +
mov [esp+2ACh+var_118] 0 +
test eax eax +
jz loc_416DE6  +
mov [esp+2ACh+var_2AC] eax +
call free  +
mov eax [esp+2ACh+var_14] +
mov [esp+2ACh+var_108] 0 +
mov [esp+2ACh+var_10C] 0 +
test eax eax +
jz loc_416CB1  +
mov eax [eax] +
mov edi 0FFFFFFFFh +
mov [esp+2ACh+var_10C] eax +
shl eax 4 +
mov [esp+2ACh+var_2AC] eax +
call sub_4742F0  +
mov edx [esp+2ACh+var_14] +
mov [esp+2ACh+var_108] eax +
mov ecx [edx+4] +
mov edx [esp+2ACh+var_10C] +
mov [esp+2ACh+var_2AC] eax +
mov [esp+2ACh+var_2A8] ecx +
shl edx 4 +
mov [esp+2ACh+var_2A4] edx +
call memcpy  +
xor eax eax +
jmp loc_416B05  +
mov eax [esp+2ACh+var_22C] +
mov ecx ebx +
mov [esp+2ACh+var_2AC] offset aUnknownBbType +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
test edi edi +
jz loc_4166E4  +
mov dword ptr [edi+10h] 1 +
mov ecx [esp+2ACh+var_264] +
jmp loc_416211  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_24C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
lea edi [esp+2ACh+var_23C] +
lea esi [esp+2ACh+var_234] +
mov ecx edi +
mov [esp+2ACh+var_28C] eax +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_2AC] eax +
mov eax ebp +
mov [esp+2ACh+var_2A8] esi +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
cmp [esp+2ACh+var_254] 3Eh +
jz loc_41781E  +
mov edx [esp+2ACh+var_24C] +
test edx edx +
jz loc_4166E4  +
mov ecx [esp+2ACh+var_264] +
movzx edx byte ptr [ecx] +
cmp dl 0E2h +
jz loc_417802  +
cmp dl 0F1h +
jz loc_417723  +
mov eax [esp+2ACh+var_22C] +
lea edx [esp+2ACh+var_228] +
mov [esp+2ACh+var_2AC] offset aBadMiscRecord +
call sub_410520  +
jmp loc_4162D1  +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_415BD0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_238] +
mov eax [esp+2ACh+var_23C] +
call sub_40F8E0  +
mov edx [esp+2ACh+var_258] +
test edx edx +
mov esi eax +
jnz loc_416F83  +
mov [esp+2ACh+var_2AC] ebx +
call sub_408480  +
mov [esp+2ACh+var_258] eax +
mov edx eax +
test edi edi +
jz loc_416F8E  +
mov dword ptr [edi+10h] 2 +
mov eax [esp+2ACh+var_250] +
mov [esp+2ACh+var_2A0] 1 +
mov [esp+2ACh+var_2A4] edx +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_29C] eax +
mov [esp+2ACh+var_2AC] ebx +
call sub_408370  +
test eax eax +
jz loc_4162D3  +
jmp loc_4166E4  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_248] 0 +
mov [esp+2ACh+var_244] 80h +
mov [esp+2ACh+var_240] 0 +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_24C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_248] +
mov eax ebp +
lea esi [esp+2ACh+var_234] +
mov ecx edi +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
test eax eax +
jz loc_417064  +
lea eax [esp+2ACh+var_244] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov edi [esp+2ACh+var_234] +
test edi edi +
jnz loc_417A47  +
mov [esp+2ACh+var_2AC] offset aUnsupportedAtn +
mov ecx [esp+2ACh+var_290] +
lea edx [esp+2ACh+var_228] +
mov eax [esp+2ACh+var_22C] +
call sub_410520  +
mov ecx [esp+2ACh+var_264] +
jmp loc_416211  +
mov [esp+2ACh+var_2AC] offset aUnsupportedA_0 +
jmp loc_41706B  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
lea ecx [esp+2ACh+var_24C] +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_238] +
mov eax [esp+2ACh+var_23C] +
call sub_40F8E0  +
mov edx [esp+2ACh+var_258] +
test edx edx +
mov esi eax +
jnz loc_4170F5  +
mov [esp+2ACh+var_2AC] ebx +
call sub_408480  +
mov [esp+2ACh+var_258] eax +
mov edx eax +
test edi edi +
jz loc_417100  +
mov dword ptr [edi+10h] 4 +
mov eax [esp+2ACh+var_250] +
mov [esp+2ACh+var_2A0] 5 +
mov [esp+2ACh+var_2A4] edx +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_29C] eax +
mov [esp+2ACh+var_2AC] ebx +
call sub_408370  +
jmp loc_416FAE  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
jmp loc_4166E4  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_24C] 0 +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
lea ecx [esp+2ACh+var_24C] +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_248] +
mov eax ebp +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_415BD0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_238] +
mov eax [esp+2ACh+var_23C] +
call sub_40F8E0  +
mov ebp [esp+2ACh+var_248] +
cmp [esp+2ACh+var_24C] 1 +
mov [esp+2ACh+var_2AC] ebx +
sbb esi esi +
not esi  +
mov edi eax +
add esi 2 +
call sub_408480  +
mov [esp+2ACh+var_29C] ebp +
mov [esp+2ACh+var_2A0] esi +
mov [esp+2ACh+var_2A8] edi +
mov [esp+2ACh+var_2AC] ebx +
mov [esp+2ACh+var_2A4] eax +
call sub_408370  +
jmp loc_416FAE  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
lea ecx [esp+2ACh+var_24C] +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov ebx [esp+2ACh+var_234] +
test ebx ebx +
jnz loc_417FB6  +
mov ecx [esp+2ACh+var_264] +
cmp byte ptr [ecx] 0E2h +
jnz loc_416211  +
lea edi [esp+2ACh+var_248] +
mov eax ebp +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_415BD0  +
test eax eax +
jz loc_4162D1  +
jmp loc_4166E4  +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_415BD0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_238] +
mov eax [esp+2ACh+var_23C] +
call sub_40F8E0  +
mov ecx [esp+2ACh+var_258] +
test ecx ecx +
mov esi eax +
jnz loc_41729F  +
mov [esp+2ACh+var_2AC] ebx +
call sub_408480  +
mov [esp+2ACh+var_258] eax +
mov ecx eax +
mov eax [esp+2ACh+var_220] +
lea edx [esp+2ACh+var_21C] +
cmp eax edx +
jbe loc_417757  +
mov edx [eax-10h] +
and edx 0FFFFFFFDh +
test edi edi +
jz loc_417772  +
cmp edx 4 +
jnz loc_41775D  +
mov dword ptr [edi+10h] 4 +
mov edi [esp+2ACh+var_250] +
mov eax 3 +
mov [esp+2ACh+var_29C] edi +
mov [esp+2ACh+var_2A0] eax +
mov [esp+2ACh+var_2A4] ecx +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_2AC] ebx +
call sub_408370  +
jmp loc_416FAE  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_24C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_248] +
mov eax ebp +
lea esi [esp+2ACh+var_234] +
mov ecx edi +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
test eax eax +
jnz loc_41767D  +
mov ecx edi +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_415BD0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_248] +
mov [esp+2ACh+var_2AC] ebx +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_250] +
mov [esp+2ACh+var_2A8] eax +
call sub_4080B0  +
jmp loc_416FAE  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_238] +
mov eax [esp+2ACh+var_23C] +
call sub_40F8E0  +
mov edx [esp+2ACh+var_258] +
test edx edx +
mov esi eax +
jnz loc_4173E3  +
mov [esp+2ACh+var_2AC] ebx +
call sub_408480  +
mov [esp+2ACh+var_258] eax +
mov edx eax +
test edi edi +
jz loc_4173EE  +
mov dword ptr [edi+10h] 4 +
mov eax [esp+2ACh+var_250] +
mov [esp+2ACh+var_2A0] 4 +
mov [esp+2ACh+var_2A4] edx +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_29C] eax +
mov [esp+2ACh+var_2AC] ebx +
call sub_408370  +
jmp loc_416FAE  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_238] +
mov eax [esp+2ACh+var_23C] +
call sub_40F8E0  +
mov esi eax +
mov eax [esp+2ACh+var_258] +
test eax eax +
jnz loc_417454  +
mov [esp+2ACh+var_2AC] ebx +
call sub_408480  +
mov [esp+2ACh+var_258] eax +
test edi edi +
jz loc_41745F  +
mov dword ptr [edi+10h] 4 +
mov eax [esp+2ACh+var_22C] +
mov edi [esp+2ACh+var_250] +
mov [esp+2ACh+var_2AC] eax +
call sub_423700  +
cmp eax 2 +
jz loc_417A68  +
cmp eax 4 +
setz al  +
movzx eax al +
sub edi eax +
mov eax [esp+2ACh+var_258] +
mov [esp+2ACh+var_29C] edi +
mov [esp+2ACh+var_2A0] 5 +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_2A4] eax +
mov [esp+2ACh+var_2AC] ebx +
call sub_408370  +
jmp loc_416FAE  +
mov eax [esp+2ACh+var_22C] +
mov ecx ebx +
mov [esp+2ACh+var_2AC] offset aIllegalVariabl +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
mov ebx [esp+2ACh+var_118] +
sub eax 20h +
mov [esp+2ACh+var_25C] eax +
cmp eax ebx +
jb loc_4175B3  +
cmp [esp+2ACh+var_254] 3Eh +
jnz loc_418005  +
test ebx ebx +
jnz loc_417501  +
cmp eax 3 +
mov bl 4 +
jbe loc_4176C4  +
add ebx ebx +
cmp eax ebx +
jnb loc_417501  +
lea eax [ebx+ebx*4] +
shl eax 2 +
jmp loc_4176C9  +
xor ebx ebx +
jmp loc_416950  +
mov [edx+4] ebx +
jmp loc_416B32  +
mov eax [esp+2ACh+var_22C] +
mov edx offset aStackOverflow +
call sub_4104F0  +
jmp loc_4162D1  +
xor ebp ebp +
add edi 2 +
mov [edi-2] bp +
sub edx 2 +
jmp loc_416638  +
mov byte ptr [eax+8] 0 +
lea edi [eax+9] +
mov dl 0EFh +
jmp loc_41662C  +
mov eax [esp+2ACh+var_22C] +
mov ecx esi +
mov [esp+2ACh+var_2AC] offset aUndefinedVaria +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_250] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
jmp loc_416FAE  +
mov eax [esp+2ACh+var_22C] +
mov ecx esi +
mov [esp+2ACh+var_2AC] offset aIllegalVariabl +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
lea edx [eax+eax*4] +
mov eax [esp+2ACh+var_114] +
lea esi [eax+edx*4] +
mov edx [esi] +
test edx edx +
jz loc_41769E  +
mov ecx [esi+4] +
mov edi esi +
mov eax [esp+2ACh+var_258] +
mov ebx [esp+2ACh+var_230] +
test eax eax +
mov [esi+8] eax +
mov [esp+2ACh+var_23C] edx +
mov [esp+2ACh+var_238] ecx +
jz loc_417651  +
mov [esp+2ACh+var_2A8] eax +
mov [esp+2ACh+var_2AC] ebx +
call sub_409050  +
cmp eax 0Ch +
mov eax [esp+2ACh+var_254] +
jnz loc_416373  +
lea ecx [eax-1] +
cmp ecx 9 +
ja loc_416373  +
mov edx 1 +
shl edx cl +
and edx 297h +
jz loc_416373  +
mov [esp+2ACh+var_2AC] 4 +
call sub_4742F0  +
mov [esi+0Ch] eax +
mov edx [esp+2ACh+var_258] +
mov [eax] edx +
mov eax [esi+0Ch] +
mov [esp+2ACh+var_2A4] 0 +
mov [esp+2ACh+var_2AC] ebx +
mov [esp+2ACh+var_2A8] eax +
call sub_408440  +
mov [esp+2ACh+var_258] eax +
mov [esi+8] eax +
mov eax [esp+2ACh+var_254] +
jmp loc_416373  +
mov ecx [esp+2ACh+var_290] +
lea edx [esp+2ACh+var_228] +
mov eax [esp+2ACh+var_22C] +
mov [esp+2ACh+var_2AC] offset aUnknownAtnType +
call sub_410520  +
jmp loc_4162D1  +
lea eax [esp+2ACh+var_244] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jnz loc_417368  +
jmp loc_4162D1  +
cmp [esp+2ACh+var_254] 3Eh +
jnz loc_418005  +
mov dword ptr [esi] offset unk_499AD3 +
mov edi esi +
xor ecx ecx +
mov dword ptr [esi+4] 0 +
mov edx offset unk_499AD3 +
jmp loc_4175CF  +
mov eax 50h +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_114] +
mov [esp+2ACh+var_2AC] eax +
call sub_474370  +
mov edx ebx +
mov [esp+2ACh+var_2A8] 0 +
mov esi eax +
mov [esp+2ACh+var_114] eax +
mov eax [esp+2ACh+var_118] +
sub edx eax +
lea edx [edx+edx*4] +
lea eax [eax+eax*4] +
lea eax [esi+eax*4] +
shl edx 2 +
mov [esp+2ACh+var_2A4] edx +
mov [esp+2ACh+var_2AC] eax +
call memset  +
mov eax [esp+2ACh+var_25C] +
mov [esp+2ACh+var_118] ebx +
lea eax [eax+eax*4] +
lea esi [esi+eax*4] +
jmp loc_4176A9  +
mov eax [esp+2ACh+var_28C] +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_2AC] eax +
mov eax ebp +
call sub_48FAD0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_24C] +
lea edx [eax-1] +
test edx edx +
mov [esp+2ACh+var_24C] edx +
jnz loc_416F0F  +
jmp loc_4166E4  +
xor edx edx +
test edi edi +
jz loc_417772  +
mov dword ptr [edi+10h] 3 +
mov edi [esp+2ACh+var_250] +
mov eax 2 +
jmp loc_4172DC  +
cmp edx 4 +
mov edi [esp+2ACh+var_250] +
mov eax 3 +
jnz loc_417768  +
jmp loc_4172DC  +
mov edx ebx +
mov eax ebp +
call sub_415C40  +
test eax eax +
mov esi eax +
jz loc_4162D1  +
mov edi 0FFFFFFFFh +
jmp loc_416D43  +
lea edx [ecx-100h] +
mov eax ebp +
mov ecx 1 +
mov [esp+2ACh+var_238] edx +
call sub_40F9D0  +
test eax eax +
jz loc_4162D1  +
mov edi [esp+2ACh+var_238] +
mov eax edi +
shl eax 4 +
add eax [esp+2ACh+var_108] +
mov esi [eax] +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_2AC] eax +
call sub_409050  +
cmp eax 0Dh +
jnz loc_416D43  +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_2AC] eax +
call sub_409100  +
mov esi eax +
jmp loc_416D43  +
lea ecx [esp+2ACh+var_248] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_415BD0  +
test eax eax +
jnz loc_41773F  +
jmp loc_4162D1  +
cmp [esp+2ACh+var_250] 50h +
jnz loc_416F03  +
mov eax [esp+2ACh+var_234] +
test eax eax +
jz loc_417A76  +
mov ecx [esp+2ACh+var_290] +
lea edx [esp+2ACh+var_228] +
mov eax [esp+2ACh+var_22C] +
mov [esp+2ACh+var_2AC] offset aUnexpectedStri +
call sub_410520  +
jmp loc_4162D1  +
mov eax [esp+2ACh+var_25C] +
lea ecx [esp+2ACh+var_250] +
mov [esp+2ACh+var_2AC] 0 +
lea edx [eax+eax*4] +
mov eax [esp+2ACh+var_114] +
lea eax [eax+edx*4] +
mov [esp+2ACh+var_284] eax +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_24C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_248] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_244] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_244] +
cmp eax 0FFFFFFFFh +
jz loc_417B12  +
lea eax ds:4[eax*4] +
mov [esp+2ACh+var_2AC] eax +
call sub_4742F0  +
mov edx [esp+2ACh+var_244] +
test edx edx +
mov [esp+2ACh+var_28C] eax +
jz loc_417959  +
mov ebx eax +
xor esi esi +
mov ecx ebx +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_244] +
add esi 1 +
add ebx 4 +
cmp esi eax +
jb loc_41792E  +
test eax eax +
jnz loc_417B29  +
mov [esp+2ACh+var_288] 0 +
xor eax eax +
xor ebx ebx +
mov edi [esp+2ACh+var_28C] +
mov dword ptr [edi+eax*4] 0 +
lea eax [esp+2ACh+var_240] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
lea esi [esp+2ACh+var_234] +
mov ecx edi +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_284] +
mov dword ptr [eax+10h] 5 +
mov eax [eax+4] +
test eax eax +
mov eax [esp+2ACh+var_238] +
jnz loc_417A8A  +
mov edi [esp+2ACh+var_288] +
xor ebp ebp +
xor esi esi +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2A0] edi +
mov edi [esp+2ACh+var_28C] +
mov [esp+2ACh+var_2AC] eax +
mov [esp+2ACh+var_2A4] edi +
call sub_4086E0  +
xor edx edx +
mov [esp+2ACh+var_254] eax +
test eax eax +
jz loc_4162D1  +
mov ecx [esp+2ACh+var_25C] +
or edx esi +
lea edi [ecx+ecx*4] +
mov ecx [esp+2ACh+var_114] +
lea ecx [ecx+edi*4] +
mov [ecx+8] eax +
jz loc_417A1F  +
mov edx [ecx+4] +
test edx edx +
jnz loc_417AAC  +
mov edx [esp+2ACh+var_260] +
shl edx 4 +
add edx [esp+2ACh+var_108] +
mov [edx] eax +
mov [edx+8] ebx +
mov [edx+0Ch] ebp +
mov edx [edx+4] +
test edx edx +
jz loc_4166E4  +
mov [edx] eax +
jmp loc_4166E4  +
lea eax [esp+2ACh+var_240] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
jmp loc_417064  +
lea eax [edi+2] +
cmp edi 10h +
cmovge edi eax +
jmp loc_417486  +
mov ecx [esp+2ACh+var_24C] +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
call sub_48FBA5  +
jmp loc_416FAE  +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_409050  +
cmp eax 0Ch +
jz loc_417BA3  +
mov eax [esp+2ACh+var_238] +
jmp loc_4179CA  +
mov eax [ecx] +
call sub_40F8E0  +
test esi esi +
mov edi eax +
jnz loc_417AF4  +
mov eax [esp+2ACh+var_258] +
cmp eax 4Eh +
jz loc_417ACB  +
cmp eax 45h +
jnz loc_417BE0  +
mov eax [esp+2ACh+var_254] +
mov [esp+2ACh+var_2A8] edi +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408D10  +
mov [esp+2ACh+var_254] eax +
test eax eax +
jnz loc_417A1F  +
jmp loc_4162D1  +
mov eax [esp+2ACh+var_254] +
mov [esp+2ACh+var_2A8] edi +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408C50  +
mov [esp+2ACh+var_254] eax +
jmp loc_417AE7  +
mov [esp+2ACh+var_288] 0 +
xor ebx ebx +
mov [esp+2ACh+var_28C] 0 +
jmp loc_417970  +
mov edi [esp+2ACh+var_28C] +
mov ebx [edi+eax*4-4] +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2A8] ebx +
mov [esp+2ACh+var_2AC] eax +
call sub_409050  +
cmp eax 0Ch +
jz loc_417CB1  +
mov eax [esp+2ACh+var_244] +
mov [esp+2ACh+var_288] 0 +
test eax eax +
jz loc_417CA8  +
mov esi [esp+2ACh+var_28C] +
xor edi edi +
xor ebx ebx +
mov [esp+2ACh+var_280] ebp +
mov ebp edi +
mov eax [esi+ebp*4] +
lea edi ds:0[ebp*4] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_409050  +
cmp eax 0Ch +
jz loc_417C51  +
mov eax [esp+2ACh+var_244] +
add ebp 1 +
cmp ebp eax +
jb loc_417B6C  +
mov ebp [esp+2ACh+var_280] +
jmp loc_417965  +
mov [esp+2ACh+var_2AC] 4 +
call sub_4742F0  +
mov esi [esp+2ACh+var_284] +
mov [esi+0Ch] eax +
mov edx [esp+2ACh+var_238] +
mov [eax] edx +
mov eax [esi+0Ch] +
mov [esp+2ACh+var_2A4] 0 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408440  +
mov [esp+2ACh+var_238] eax +
jmp loc_4179CA  +
mov [esp+2ACh+var_2AC] 14h +
call sub_4742F0  +
mov dword ptr [eax+8] 0 +
mov esi eax +
mov dword ptr [eax+10h] 0 +
mov eax [esp+2ACh+var_10] +
mov [esi+4] edi +
mov [esp+2ACh+var_10] esi +
mov [esi] eax +
mov eax [esp+2ACh+var_254] +
mov [esi+0Ch] eax +
lea eax [esi+0Ch] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2A4] edi +
mov [esp+2ACh+var_2AC] eax +
call sub_408440  +
mov [esp+2ACh+var_2A8] edi +
mov [esp+2ACh+var_254] eax +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408D10  +
mov [esp+2ACh+var_254] eax +
mov [esi+8] eax +
jmp loc_417AE7  +
test ebx ebx +
jnz loc_417C81  +
mov eax [esp+2ACh+var_244] +
shl eax 2 +
mov [esp+2ACh+var_2AC] eax +
call sub_4742F0  +
mov [esp+2ACh+var_2A8] 0 +
mov ebx eax +
mov eax [esp+2ACh+var_244] +
mov [esp+2ACh+var_2AC] ebx +
shl eax 2 +
mov [esp+2ACh+var_2A4] eax +
call memset  +
mov eax [esi+ebp*4] +
add edi ebx +
mov [edi] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2A4] 0 +
mov [esp+2ACh+var_2A8] edi +
mov [esp+2ACh+var_2AC] eax +
call sub_408440  +
mov [esi+ebp*4] eax +
jmp loc_417B8F  +
xor eax eax +
xor ebx ebx +
jmp loc_417965  +
mov edi [esp+2ACh+var_290] +
mov [esp+2ACh+var_2A8] ebx +
mov [esp+2ACh+var_2AC] edi +
call sub_4091A0  +
mov [esp+2ACh+var_2AC] edi +
mov [esp+2ACh+var_2A8] eax +
call sub_409050  +
cmp eax 2 +
mov eax [esp+2ACh+var_244] +
jz loc_417FA2  +
mov [esp+2ACh+var_288] 0 +
jmp loc_417B56  +
mov edx ebx +
mov eax ebp +
call sub_415C40  +
test eax eax +
mov esi eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_250] +
mov edi 0FFFFFFFFh +
mov eax [esp+2ACh+var_254] +
jmp loc_416AC8  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A4] 0 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408820  +
mov [esp+2ACh+var_254] eax +
xor ebp ebp +
xor ebx ebx +
xor esi esi +
xor edx edx +
jmp loc_4179F4  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_238] +
cmp eax 1 +
jz loc_417EE1  +
cmp eax 2 +
jz loc_417EC8  +
mov eax [esp+2ACh+var_22C] +
mov ecx edi +
mov [esp+2ACh+var_2AC] offset aUnsupportedQua +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
lea eax [esp+2ACh+var_240] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
mov ebx [esp+2ACh+var_264] +
lea esi [esp+2ACh+var_234] +
mov ecx eax +
mov [esp+2ACh+var_2AC] esi +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov esi [esp+2ACh+var_234] +
test esi esi +
jnz loc_417EA7  +
mov ecx [esp+2ACh+var_240] +
xor eax eax +
mov [esp+2ACh+var_2A8] 4 +
test ecx ecx +
setz al  +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408490  +
mov [esp+2ACh+var_254] eax +
mov ebp [esp+2ACh+var_23C] +
xor ebx ebx +
xor esi esi +
xor edx edx +
jmp loc_4179F4  +
mov ecx [esp+2ACh+var_28C] +
lea edx [esp+2ACh+var_228] +
mov eax [esp+2ACh+var_22C] +
mov [esp+2ACh+var_2AC] offset aPascalFileName +
call sub_410520  +
jmp loc_4162D1  +
lea ecx [esp+2ACh+var_254] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_264] ebx +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_254] +
jmp loc_417E75  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408950  +
jmp loc_417D61  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408920  +
mov [esp+2ACh+var_254] eax +
jmp loc_417D65  +
mov eax 1 +
mov edi 0FFFFFFFFh +
xor ebx ebx +
jmp loc_416B05  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2AC] eax +
call sub_407F40  +
test eax eax +
jz loc_4162D1  +
xor eax eax +
mov edi 0FFFFFFFFh +
xor ebx ebx +
mov byte ptr [esp+2ACh+var_290] 86h +
jmp loc_416B05  +
lea edx [ecx-100h] +
mov eax ebp +
mov ecx 1 +
mov [esp+2ACh+var_238] edx +
call sub_40F9D0  +
test eax eax +
jz loc_4162D1  +
mov edi [esp+2ACh+var_238] +
mov eax edi +
shl eax 4 +
add eax [esp+2ACh+var_108] +
mov esi [eax] +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_2AC] eax +
call sub_409050  +
cmp eax 0Dh +
jnz loc_417F95  +
mov eax [esp+2ACh+var_230] +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_2AC] eax +
call sub_409100  +
mov esi eax +
mov edx [esp+2ACh+var_250] +
mov eax [esp+2ACh+var_254] +
jmp loc_416AC8  +
sub eax 1 +
mov [esp+2ACh+var_244] eax +
mov [esp+2ACh+var_288] 1 +
jmp loc_417B56  +
mov [esp+2ACh+var_2AC] esi +
lea ecx [esp+2ACh+var_24C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov ecx [esp+2ACh+var_234] +
test ecx ecx +
jz loc_417238  +
lea eax [esp+2ACh+var_238] +
lea edi [esp+2ACh+var_23C] +
mov [esp+2ACh+var_2AC] eax +
mov ecx edi +
mov eax ebp +
mov [esp+2ACh+var_2A8] esi +
lea edx [esp+2ACh+var_264] +
call sub_4157D0  +
test eax eax +
jnz loc_417238  +
jmp loc_4162D1  +
mov eax [esp+2ACh+var_22C] +
mov ecx edi +
mov [esp+2ACh+var_2AC] offset aUndefinedVar_0 +
lea edx [esp+2ACh+var_228] +
call sub_410520  +
jmp loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A4] 0 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408490  +
jmp loc_417D61  +
mov ecx [esp+2ACh+var_28C] +
lea edx [esp+2ACh+var_228] +
mov eax [esp+2ACh+var_22C] +
mov [esp+2ACh+var_2AC] offset aUnknownTyCode +
call sub_410520  +
jmp loc_4162D1  +
mov [esp+2ACh+var_2AC] 28h +
lea edi [esp+2ACh+var_23C] +
call sub_4742F0  +
mov [esp+2ACh+var_2AC] 28h +
mov ebx eax +
call sub_4742F0  +
mov [esp+2ACh+var_284] 0 +
mov [esp+2ACh+var_27C] 0Ah +
mov [esp+2ACh+var_280] eax +
lea eax [esp+2ACh+var_238] +
mov [esp+2ACh+var_28C] eax +
lea eax [esp+2ACh+var_240] +
mov [esp+2ACh+var_288] eax +
jmp loc_41813C  +
mov ecx [esp+2ACh+var_238] +
test ecx ecx +
jz loc_418340  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_234] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_23C] +
test edx edx +
jz loc_41813C  +
mov eax [esp+2ACh+var_284] +
lea esi [eax+1] +
cmp esi [esp+2ACh+var_27C] +
jnb loc_4182FD  +
mov eax [esp+2ACh+var_240] +
call sub_40F8E0  +
mov ecx [esp+2ACh+var_284] +
lea edx [ebx+ecx*4] +
test eax eax +
mov [edx] eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
mov edx [esp+2ACh+var_280] +
mov [esp+2ACh+var_284] esi +
mov [edx+ecx*4] eax +
mov eax [esp+2ACh+var_28C] +
lea edx [esp+2ACh+var_264] +
mov ecx [esp+2ACh+var_288] +
mov [esp+2ACh+var_2AC] edi +
mov [esp+2ACh+var_2A8] eax +
mov eax ebp +
call sub_4157D0  +
test eax eax +
jnz loc_4180D0  +
jmp loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_24C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 28h +
xor esi esi +
call sub_4742F0  +
lea edi [esp+2ACh+var_248] +
mov [esp+2ACh+var_28C] 0Ah +
mov ebx eax +
lea eax [esp+2ACh+var_244] +
mov [esp+2ACh+var_27C] eax +
lea eax [esp+2ACh+var_240] +
mov [esp+2ACh+var_288] eax +
mov eax [esp+2ACh+var_288] +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_27C] +
mov [esp+2ACh+var_2AC] eax +
mov eax ebp +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_240] +
test eax eax +
jz loc_4182C2  +
lea ecx [esp+2ACh+var_23C] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_238] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea ecx [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esi+1] +
cmp eax [esp+2ACh+var_28C] +
mov [esp+2ACh+var_284] eax +
jb loc_418257  +
add [esp+2ACh+var_28C] 0Ah +
mov eax [esp+2ACh+var_28C] +
mov [esp+2ACh+var_2AC] ebx +
shl eax 2 +
mov [esp+2ACh+var_2A8] eax +
call sub_474370  +
mov ebx eax +
mov ecx [esp+2ACh+var_238] +
lea eax [ebx+esi*4] +
mov [esp+2ACh+var_280] eax +
mov edx [esp+2ACh+var_244] +
mov eax [esp+2ACh+var_248] +
mov esi [esp+2ACh+var_234] +
mov [esp+2ACh+var_274] ecx +
mov ecx [esp+2ACh+var_23C] +
mov [esp+2ACh+var_278] ecx +
call sub_40F8E0  +
mov ecx [esp+2ACh+var_274] +
mov [esp+2ACh+var_29C] esi +
mov [esp+2ACh+var_298] 0 +
mov [esp+2ACh+var_2A0] ecx +
mov ecx [esp+2ACh+var_278] +
mov [esp+2ACh+var_2A8] eax +
mov [esp+2ACh+var_2A4] ecx +
mov ecx [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] ecx +
call sub_4089B0  +
mov esi [esp+2ACh+var_280] +
test eax eax +
mov [esi] eax +
jz loc_4162D1  +
mov esi [esp+2ACh+var_284] +
jmp loc_4181AD  +
mov eax [esp+2ACh+var_24C] +
mov dword ptr [ebx+esi*4] 0 +
mov [esp+2ACh+var_2A0] ebx +
mov [esp+2ACh+var_2A8] 1 +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_4084E0  +
mov [esp+2ACh+var_254] eax +
xor ebp ebp +
xor ebx ebx +
xor esi esi +
mov edx 1 +
jmp loc_4179F4  +
add [esp+2ACh+var_27C] 0Ah +
mov eax [esp+2ACh+var_27C] +
mov [esp+2ACh+var_2AC] ebx +
lea edx ds:0[eax*4] +
mov [esp+2ACh+var_2A8] edx +
mov [esp+2ACh+var_278] edx +
call sub_474370  +
mov edx [esp+2ACh+var_278] +
mov [esp+2ACh+var_2A8] edx +
mov ebx eax +
mov eax [esp+2ACh+var_280] +
mov [esp+2ACh+var_2AC] eax +
call sub_474370  +
mov edx [esp+2ACh+var_23C] +
mov [esp+2ACh+var_280] eax +
jmp loc_418113  +
mov eax [esp+2ACh+var_284] +
mov dword ptr [ebx+eax*4] 0 +
mov eax [esp+2ACh+var_280] +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2A8] ebx +
mov [esp+2ACh+var_2AC] eax +
call sub_408650  +
jmp loc_4182E9  +
lea eax [esp+2ACh+var_240] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 28h +
call sub_4742F0  +
mov edx 28h +
test al 1 +
mov ebx eax +
mov edi eax +
jz loc_4183A6  +
mov byte ptr [eax] 0 +
lea edi [eax+1] +
mov dl 27h +
test edi 2 +
jz loc_4183BA  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
sub edx 2 +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_4183D1  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_4183D9  +
mov byte ptr [edi] 0 +
lea edi [esp+2ACh+var_23C] +
xor ecx ecx +
lea eax [esp+2ACh+var_238] +
mov [esp+2ACh+var_280] edi +
lea esi [esp+2ACh+var_234] +
mov edi ecx +
mov [esp+2ACh+var_288] 0Ah +
mov [esp+2ACh+var_28C] eax +
mov eax [esp+2ACh+var_28C] +
lea edx [esp+2ACh+var_264] +
mov ecx [esp+2ACh+var_280] +
mov [esp+2ACh+var_2A8] esi +
mov [esp+2ACh+var_2AC] eax +
mov eax ebp +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
test eax eax +
jz loc_41846A  +
lea eax [edi+1] +
cmp eax [esp+2ACh+var_288] +
mov [esp+2ACh+var_284] eax +
jb loc_41844A  +
add [esp+2ACh+var_288] 0Ah +
mov eax [esp+2ACh+var_288] +
mov [esp+2ACh+var_2AC] ebx +
shl eax 2 +
mov [esp+2ACh+var_2A8] eax +
call sub_474370  +
mov ebx eax +
mov edx [esp+2ACh+var_238] +
lea edi [ebx+edi*4] +
mov eax [esp+2ACh+var_23C] +
call sub_40F8E0  +
test eax eax +
mov [edi] eax +
jz loc_4162D1  +
mov edi [esp+2ACh+var_284] +
jmp loc_4183F9  +
mov esi edi +
mov eax esi +
shl eax 2 +
mov dword ptr [ebx+esi*4] 0 +
mov [esp+2ACh+var_2AC] eax +
call sub_4742F0  +
xor edx edx +
test esi esi +
jz loc_41834F  +
mov [eax+edx*4] edx +
add edx 1 +
cmp edx edi +
jnz loc_41848A  +
jmp loc_41834F  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_C4] +
mov ebx [esp+2ACh+var_234] +
mov esi [esp+2ACh+var_238] +
test eax eax +
jnz loc_418515  +
mov edx [esp+2ACh+var_28C] +
mov ecx 10h +
mov eax ebp +
call sub_415C40  +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_23C] +
mov [esp+2ACh+var_298] 0 +
mov [esp+2ACh+var_29C] ebx +
mov [esp+2ACh+var_2A0] esi +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_4087B0  +
jmp loc_417D61  +
lea eax [esp+2ACh+var_238] +
lea esi [esp+2ACh+var_234] +
mov ecx eax +
mov [esp+2ACh+var_2A8] 0 +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
mov [esp+2ACh+var_2AC] esi +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
xor eax eax +
cmp [esp+2ACh+var_258] 63h +
setnz al  +
lea eax ds:4[eax*4] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_4084D0  +
jmp loc_417D61  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_C4] +
mov ebx [esp+2ACh+var_234] +
test eax eax +
jnz loc_4185E8  +
mov edx [esp+2ACh+var_28C] +
mov ecx 10h +
mov eax ebp +
call sub_415C40  +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_238] +
mov [esp+2ACh+var_298] 0 +
mov [esp+2ACh+var_29C] ebx +
mov [esp+2ACh+var_2A0] 0 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_4087B0  +
jmp loc_417D61  +
lea edi [esp+2ACh+var_248] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_244] +
mov ecx eax +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_240] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
lea edi [esp+2ACh+var_23C] +
mov [esp+2ACh+var_28C] eax +
lea esi [esp+2ACh+var_234] +
mov ecx [esp+2ACh+var_28C] +
lea edx [esp+2ACh+var_264] +
mov eax ebp +
mov [esp+2ACh+var_2A8] edi +
mov [esp+2ACh+var_2AC] esi +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_23C] +
test eax eax +
jnz loc_418682  +
mov eax [esp+2ACh+var_25C] +
lea edx [eax+eax*4] +
mov eax [esp+2ACh+var_114] +
lea ebx [eax+edx*4] +
mov eax [esp+2ACh+var_244] +
mov edi [ebx+4] +
mov dword ptr [ebx+10h] 1 +
test edi edi +
jnz loc_418A26  +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2A0] 0 +
mov [esp+2ACh+var_2A4] 0 +
mov [esp+2ACh+var_2AC] eax +
call sub_4086E0  +
jmp loc_417D61  +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408480  +
jmp loc_417D61  +
lea ecx [esp+2ACh+var_254] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_254] +
xor ebp ebp +
xor ebx ebx +
mov esi 1 +
xor edx edx +
jmp loc_4179F4  +
lea eax [esp+2ACh+var_240] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea edi [esp+2ACh+var_23C] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea eax [esp+2ACh+var_238] +
mov ecx eax +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov edx [esp+2ACh+var_238] +
xor eax eax +
mov edi [esp+2ACh+var_290] +
mov esi [esp+2ACh+var_23C] +
mov ebx [esp+2ACh+var_240] +
test edx edx +
setz al  +
mov [esp+2ACh+var_2A4] eax +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2AC] edi +
mov [esp+2ACh+var_2A8] eax +
call sub_408490  +
mov [esp+2ACh+var_2A0] esi +
mov [esp+2ACh+var_2A4] ebx +
mov [esp+2ACh+var_2AC] edi +
mov [esp+2ACh+var_2A8] eax +
call sub_408760  +
jmp loc_417D61  +
lea esi [esp+2ACh+var_234] +
mov eax ebp +
mov ecx esi +
lea edx [esp+2ACh+var_264] +
call sub_4160A0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_234] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408690  +
jmp loc_417D61  +
lea edi [esp+2ACh+var_248] +
mov eax ebp +
mov [esp+2ACh+var_2AC] 0 +
mov ecx edi +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 28h +
lea edi [esp+2ACh+var_23C] +
call sub_4742F0  +
mov [esp+2ACh+var_284] 0 +
mov [esp+2ACh+var_280] 0Ah +
mov [esp+2ACh+var_270] edi +
mov esi eax +
lea eax [esp+2ACh+var_244] +
mov [esp+2ACh+var_27C] eax +
lea eax [esp+2ACh+var_240] +
mov [esp+2ACh+var_288] eax +
mov eax [esp+2ACh+var_270] +
lea edx [esp+2ACh+var_264] +
mov ecx [esp+2ACh+var_27C] +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_288] +
mov [esp+2ACh+var_2AC] eax +
mov eax ebp +
call sub_4157D0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_23C] +
test eax eax +
jz loc_4189FC  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_238] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov [esp+2ACh+var_2AC] 0 +
lea ecx [esp+2ACh+var_234] +
mov eax ebp +
lea edx [esp+2ACh+var_264] +
call sub_4158C0  +
test eax eax +
jz loc_4162D1  +
mov ecx [esp+2ACh+var_238] +
cmp ecx 0FFh +
ja loc_4189B9  +
cmp ecx 3Bh +
ja loc_4189A7  +
mov ebx [esp+ecx*4+2ACh+var_104] +
test ebx ebx +
jz loc_4189A7  +
shl [esp+2ACh+var_234] 3 +
xor edi edi +
mov eax [esp+2ACh+var_284] +
add eax 1 +
cmp eax [esp+2ACh+var_280] +
mov [esp+2ACh+var_278] eax +
jb loc_418944  +
add [esp+2ACh+var_280] 0Ah +
mov eax [esp+2ACh+var_280] +
mov [esp+2ACh+var_2AC] esi +
shl eax 2 +
mov [esp+2ACh+var_2A8] eax +
call sub_474370  +
mov esi eax +
mov eax [esp+2ACh+var_284] +
mov ecx [esp+2ACh+var_234] +
mov edx [esp+2ACh+var_240] +
lea eax [esi+eax*4] +
mov [esp+2ACh+var_284] eax +
mov eax [esp+2ACh+var_244] +
mov [esp+2ACh+var_274] ecx +
call sub_40F8E0  +
mov ecx [esp+2ACh+var_274] +
mov [esp+2ACh+var_2A4] ebx +
mov ebx [esp+2ACh+var_290] +
mov [esp+2ACh+var_29C] edi +
mov [esp+2ACh+var_298] 0 +
mov [esp+2ACh+var_2A0] ecx +
mov [esp+2ACh+var_2AC] ebx +
mov [esp+2ACh+var_2A8] eax +
call sub_4089B0  +
mov edi [esp+2ACh+var_284] +
test eax eax +
mov [edi] eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_278] +
mov [esp+2ACh+var_284] eax +
jmp loc_41887C  +
mov edx [esp+2ACh+var_28C] +
mov eax ebp +
call sub_415C40  +
mov ebx eax +
jmp loc_418912  +
lea edx [ecx-100h] +
mov eax ebp +
mov ecx 1 +
mov [esp+2ACh+var_238] edx +
call sub_40F9D0  +
test eax eax +
jz loc_4162D1  +
mov eax [esp+2ACh+var_238] +
shl eax 4 +
add eax [esp+2ACh+var_108] +
mov edi [eax+0Ch] +
mov ebx [eax] +
test edi edi +
jnz loc_418919  +
shl [esp+2ACh+var_234] 3 +
jmp loc_418919  +
mov eax [esp+2ACh+var_284] +
mov dword ptr [esi+eax*4] 0 +
mov eax [esp+2ACh+var_248] +
mov [esp+2ACh+var_2A0] esi +
mov [esp+2ACh+var_2A4] eax +
xor eax eax +
cmp [esp+2ACh+var_258] 53h +
setz al  +
mov [esp+2ACh+var_2A8] eax +
jmp loc_4182DD  +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_409050  +
cmp eax 0Ch +
jz loc_418A44  +
mov eax [esp+2ACh+var_244] +
jmp loc_4186CF  +
mov [esp+2ACh+var_2AC] 4 +
call sub_4742F0  +
mov [ebx+0Ch] eax +
mov edx [esp+2ACh+var_244] +
mov [eax] edx +
mov eax [ebx+0Ch] +
mov [esp+2ACh+var_2A4] 0 +
mov [esp+2ACh+var_2A8] eax +
mov eax [esp+2ACh+var_290] +
mov [esp+2ACh+var_2AC] eax +
call sub_408440  +
mov [esp+2ACh+var_244] eax +
jmp loc_4186CF  +
***
push edi  +
mov ecx 39h +
push esi  +
push ebx  +
sub esp 11Ch +
lea ebp [esp+128h+var_FC] +
mov edi ebp +
stos   +
mov eax [esp+128h+arg_0] +
lea ebx [esp+128h+var_9C] +
mov [esp+128h+var_120] 10h +
mov [esp+128h+var_124] offset sub_40FB20 +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_FC] eax +
mov [esp+128h+var_A4] 100h +
mov [esp+128h+var_A0] 20h +
call sub_42A280  +
test eax eax +
jnz loc_418AF0  +
xor eax eax +
add esp 11Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea esi [esp+128h+var_80] +
mov [esp+128h+var_120] 10h +
mov [esp+128h+var_124] offset sub_40FB20 +
mov [esp+128h+var_128] esi +
call sub_42A280  +
test eax eax +
jz loc_418ADD  +
mov eax [esp+128h+arg_4] +
mov [esp+128h+var_120] ebp +
mov [esp+128h+var_124] offset off_49A8A0 +
mov [esp+128h+var_E4] 0 +
mov [esp+128h+var_128] eax +
mov [esp+128h+var_E0] 0 +
mov [esp+128h+var_DC] 0 +
mov [esp+128h+var_D8] 0 +
mov [esp+128h+var_D4] 0 +
mov [esp+128h+var_D0] 0 +
mov [esp+128h+var_CC] 0 +
mov [esp+128h+var_C8] 0 +
mov [esp+128h+var_C4] 0 +
mov [esp+128h+var_C0] 0 +
mov [esp+128h+var_BC] 0 +
mov [esp+128h+var_B8] 0 +
mov [esp+128h+var_48] 0 +
mov [esp+128h+var_44] 0 +
mov [esp+128h+var_40] 0 +
mov [esp+128h+var_3C] 0 +
call sub_4092F0  +
test eax eax +
jz loc_418ADD  +
mov eax [esp+128h+var_EC] +
test eax eax +
jz loc_418BD9  +
mov eax ebp +
call sub_413010  +
test eax eax +
jz loc_418ADD  +
mov [esp+128h+var_120] ebp +
mov [esp+128h+var_124] offset sub_410850 +
mov [esp+128h+var_128] esi +
mov [esp+128h+var_F8] 0 +
call sub_42A830  +
mov eax [esp+128h+var_F8] +
test eax eax +
jnz loc_418ADD  +
mov eax [esp+128h+var_E4] +
test eax eax +
jz loc_418D3D  +
lea eax [esp+128h+var_E4] +
mov [esp+128h+var_F4] eax +
mov eax [esp+128h+var_E0] +
mov edx [eax+4] +
mov [esp+128h+var_F0] eax +
cmp edx 1E9h +
ja loc_418E78  +
lea ecx [edx+1] +
mov [eax+4] ecx +
mov byte ptr [eax+edx+8] 0F0h +
mov edx [esp+128h+var_A0] +
mov eax ebp +
call sub_4106E0  +
test eax eax +
jz loc_418ADD  +
mov edx offset unk_499AD3 +
mov eax ebp +
call sub_40FC80  +
test eax eax +
jz loc_418ADD  +
mov edx [esp+128h+var_F0] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_418E97  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F2h +
mov edx [esp+128h+var_A4] +
mov eax ebp +
call sub_4106E0  +
test eax eax +
jz loc_418ADD  +
mov edx [esp+128h+var_F0] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_418EB6  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0CEh +
mov edx [esp+128h+var_A0] +
mov eax ebp +
call sub_4106E0  +
test eax eax +
jz loc_418ADD  +
mov edx 50h +
mov eax ebp +
call sub_4106E0  +
test eax eax +
jz loc_418ADD  +
mov edx 21h +
mov eax ebp +
call sub_4106E0  +
test eax eax +
jz loc_418ADD  +
mov edx [esp+128h+var_F0] +
mov eax [edx+4] +
cmp eax 1E9h +
ja loc_418F9D  +
lea ecx [eax+1] +
mov [edx+4] ecx +
mov byte ptr [edx+eax+8] 0F9h +
mov eax [esp+128h+var_DC] +
test eax eax +
jz loc_418D2D  +
cmp [esp+128h+var_E4] 0 +
jz loc_418FBC  +
mov edx [esp+128h+var_E0] +
mov [edx] eax +
mov eax [esp+128h+var_D8] +
mov [esp+128h+var_E0] eax +
mov eax [esp+128h+var_E4] +
mov edx [esp+128h+var_E0] +
mov [esp+128h+var_DC] eax +
mov [esp+128h+var_D8] edx +
mov eax [esp+128h+arg_0] +
mov [esp+128h+var_120] ebp +
mov [esp+128h+var_124] offset sub_412AE0 +
mov [esp+128h+var_F8] 0 +
mov [esp+128h+var_128] eax +
mov [esp+128h+var_CC] 0 +
mov [esp+128h+var_C8] 0 +
call sub_41ED30  +
mov edi [esp+128h+var_F8] +
test edi edi +
jnz loc_418ADD  +
mov eax [esp+128h+var_CC] +
test eax eax +
jz loc_418DC8  +
lea edx [esp+128h+var_CC] +
mov [esp+128h+var_F4] edx +
mov edx [esp+128h+var_C8] +
mov ecx [edx+4] +
mov [esp+128h+var_F0] edx +
cmp ecx 1E9h +
ja loc_418ED5  +
lea edi [ecx+1] +
mov [edx+4] edi +
mov byte ptr [edx+ecx+8] 0F9h +
mov ecx [esp+128h+var_DC] +
test ecx ecx +
jz loc_418F00  +
mov edx [esp+128h+var_D8] +
mov [edx] eax +
mov eax [esp+128h+var_C8] +
mov [esp+128h+var_D8] eax +
mov edx [esp+128h+var_DC] +
mov eax 1 +
test edx edx +
jz loc_418ADF  +
mov eax [esp+128h+arg_0] +
mov [esp+128h+var_120] 2100h +
mov [esp+128h+var_124] offset a_debug_0 +
mov [esp+128h+var_128] eax +
call sub_41EBD0  +
test eax eax +
mov edi eax +
jz loc_418F09  +
mov eax [esp+128h+var_DC] +
xor edx edx +
test eax eax +
jz loc_418E15  +
add edx [eax+4] +
mov eax [eax] +
test eax eax +
jnz loc_418E0C  +
mov eax [esp+128h+arg_0] +
mov [esp+128h+var_120] edx +
mov [esp+128h+var_124] edi +
mov [esp+128h+var_128] eax +
call sub_41EDE0  +
test eax eax +
jnz loc_418F15  +
mov ebx offset aBfd_set_sectio +
call sub_420A00  +
mov [esp+128h+var_128] eax +
call sub_420A10  +
mov edx [esp+128h+arg_0] +
mov edx [edx] +
mov [esp+128h+var_11C] ebx +
mov [esp+128h+var_118] eax +
mov eax ds:_iob +
mov [esp+128h+var_124] offset aSSS_0 +
mov [esp+128h+var_120] edx +
add eax 40h +
mov [esp+128h+var_128] eax +
call fprintf  +
jmp loc_418ADD  +
mov ecx 0F0h +
lea edx [esp+128h+var_F0] +
lea eax [esp+128h+var_F4] +
call sub_40FB80  +
test eax eax +
jnz loc_418C37  +
jmp loc_418ADD  +
mov ecx 0F2h +
lea edx [esp+128h+var_F0] +
lea eax [esp+128h+var_F4] +
call sub_40FB80  +
test eax eax +
jnz loc_418C7E  +
jmp loc_418ADD  +
mov ecx 0CEh +
lea edx [esp+128h+var_F0] +
lea eax [esp+128h+var_F4] +
call sub_40FB80  +
test eax eax +
jnz loc_418CB1  +
jmp loc_418ADD  +
mov ecx 0F9h +
lea edx [esp+128h+var_F0] +
lea eax [esp+128h+var_F4] +
call sub_40FB80  +
test eax eax +
jz loc_418ADD  +
mov eax [esp+128h+var_CC] +
test eax eax +
jz loc_418DC8  +
jmp loc_418DAE  +
mov [esp+128h+var_DC] eax +
jmp loc_418DC0  +
mov ebx offset aBfd_make_secti +
nop   +
jmp loc_418E39  +
mov ebp [esp+128h+var_DC] +
test ebp ebp +
jz loc_418F83  +
mov [esp+128h+var_110] 0 +
mov [esp+128h+var_10C] 0 +
jmp loc_418F44  +
mov eax [ebp+4] +
xor edx edx +
mov ebp [ebp+0] +
add [esp+128h+var_110] eax +
adc [esp+128h+var_10C] edx +
test ebp ebp +
jz loc_418F83  +
mov eax [ebp+4] +
mov edx [esp+128h+var_10C] +
mov [esp+128h+var_124] edi +
mov [esp+128h+var_114] eax +
mov eax [esp+128h+var_110] +
mov [esp+128h+var_118] edx +
mov [esp+128h+var_11C] eax +
lea eax [ebp+8] +
mov [esp+128h+var_120] eax +
mov eax [esp+128h+arg_0] +
mov [esp+128h+var_128] eax +
call sub_41EE20  +
test eax eax +
jnz loc_418F30  +
mov ebx offset aBfd_set_sect_0 +
jmp loc_418E39  +
mov [esp+128h+var_128] ebx +
call sub_42A2B0  +
mov [esp+128h+var_128] esi +
call sub_42A2B0  +
mov eax 1 +
jmp loc_418ADF  +
mov ecx 0F9h +
lea edx [esp+128h+var_F0] +
lea eax [esp+128h+var_F4] +
call sub_40FB80  +
test eax eax +
jnz loc_418D0C  +
jmp loc_418ADD  +
mov [esp+128h+var_E4] eax +
jmp loc_418D25  +
***
push edi  +
push ebx  +
sub esp 24h +
movzx ebx [esp+28h+arg_0] +
cmp bl 0Ah +
jz loc_419290  +
ja loc_419162  +
cmp bl 3 +
jz loc_419230  +
jbe loc_419260  +
cmp bl 4 +
jz loc_4191F0  +
cmp bl 9 +
jnz loc_419285  +
mov ebx [edx+10h] +
mov eax [edx+8] +
mov ecx [edx+4] +
add eax [ebx+1Ch] +
mov [esp+28h+var_1C] 1 +
mov [esp+28h+var_18] eax +
jmp loc_41918E  +
cmp bl 0Fh +
jz loc_419290  +
jbe loc_4191B4  +
cmp bl 11h +
jnz loc_419280  +
mov ebx [edx+10h] +
mov eax [edx+8] +
mov ecx [edx+4] +
add eax [ebx+1Ch] +
mov [esp+28h+var_1C] 2 +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_8] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_20] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_28] eax +
call sub_407E10  +
test eax eax +
setnz al  +
movzx eax al +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
cmp bl 0Ch +
jz loc_419290  +
cmp bl 0Dh +
jnz loc_419285  +
mov eax [edx+4] +
mov esi [esp+28h+arg_8] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
call sub_408C50  +
test eax eax +
setnz al  +
add esp 24h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov ebx [edx+10h] +
mov eax [edx+8] +
mov ecx [edx+4] +
add eax [ebx+1Ch] +
mov [esp+28h+var_1C] 5 +
mov [esp+28h+var_18] eax +
mov eax [esp+28h+arg_8] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_20] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_28] eax +
call sub_408370  +
test eax eax +
setnz al  +
add esp 24h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
mov eax [edx+10h] +
mov ecx [edx+8] +
mov edx [edx+4] +
add ecx [eax+1Ch] +
cmp [esp+28h+arg_C] 1 +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_18] ecx +
sbb eax eax +
add eax 3 +
mov [esp+28h+var_1C] eax +
mov eax [esp+28h+arg_8] +
mov [esp+28h+var_20] eax +
jmp loc_419214  +
cmp bl 1 +
jnz loc_4192D4  +
mov ebx [edx+10h] +
mov eax [edx+8] +
mov ecx [edx+4] +
add eax [ebx+1Ch] +
mov [esp+28h+var_1C] 4 +
mov [esp+28h+var_18] eax +
jmp loc_419208  +
cmp bl 7Fh +
jz loc_4192D9  +
add esp 24h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax [edx+4] +
mov [esp+28h+var_C] ecx +
mov ecx [esp+28h+arg_8] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call sub_408D10  +
mov ebx eax +
xor eax eax +
test ebx ebx +
jz loc_4191AE  +
mov ecx [esp+28h+var_C] +
mov eax esi +
mov edx ecx +
call sub_418FD0  +
mov [eax] ebx +
mov eax 1 +
jmp loc_4191AE  +
cmp bl 2 +
jnz loc_419285  +
mov ebx [edx+10h] +
mov eax [edx+8] +
mov ecx [edx+4] +
add eax [ebx+1Ch] +
mov [esp+28h+var_1C] 1 +
mov [esp+28h+var_18] eax +
jmp loc_419208  +
***
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [eax+0A0h] +
mov [esp+78h+var_54] edx +
mov esi [esp+78h+arg_8] +
mov [esp+78h+var_58] ecx +
mov edi [eax+24h] +
mov ebx edi +
not ebx  +
test [esp+78h+arg_4] ebx +
jz loc_419430  +
mov ecx [eax+30h] +
mov edx [esp+78h+arg_4] +
and edi [esp+78h+arg_4] +
sar edx cl +
mov ecx [eax+28h] +
and edx ebx +
or edx edi +
mov edi [esp+78h+arg_4] +
and edi [eax+2Ch] +
mov eax 1 +
shl eax cl +
cmp edi eax +
jz loc_4194A1  +
mov eax 2 +
shl eax cl +
cmp edi eax +
jz loc_4194F0  +
mov eax 3 +
shl eax cl +
cmp edi eax +
jnz loc_4198B0  +
test esi esi +
jz loc_419550  +
movzx ecx word ptr [esi+8] +
lea eax [esi+8] +
test cx cx +
movzx ebx cx +
jz loc_4193B1  +
lea ecx [esi+0Eh] +
movzx edi word ptr [eax+2] +
add eax 2 +
mov [eax-2] di +
test di di +
jz loc_4193B1  +
cmp eax ecx +
jnz loc_41939D  +
xor ecx ecx +
sub ebx 1 +
mov [eax] cx +
mov eax [esp+78h+arg_10] +
mov edi [esp+78h+var_58] +
mov [esp+78h+var_74] edx +
mov edx [esp+78h+var_54] +
mov [esp+78h+var_70] esi +
mov [esp+78h+var_68] eax +
mov eax [esp+78h+arg_0] +
mov [esp+78h+var_6C] 0 +
mov ecx edi +
mov [esp+78h+var_78] eax +
mov eax ebp +
call sub_419300  +
mov edx [edi+14h] +
test edx edx +
mov esi eax +
jz loc_4198D0  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_68] ebx +
mov [esp+78h+var_74] esi +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_6C] 0 +
mov [esp+78h+var_70] edx +
mov [esp+78h+var_78] eax +
call sub_4087B0  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jz loc_419457  +
mov edx [esi] +
test edx edx +
jle loc_419457  +
mov eax [esp+78h+var_58] +
call sub_418FD0  +
mov edx eax +
mov eax [eax] +
test eax eax +
jz loc_419945  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+arg_C] +
test eax eax +
mov eax 0 +
cmovz esi eax +
cmp [esp+78h+arg_4] 10h +
ja loc_419485  +
mov eax [esp+78h+var_58] +
mov ecx [esp+78h+arg_4] +
mov eax [eax+ecx*4+4] +
test eax eax +
jnz loc_41944F  +
cmp [esp+78h+arg_4] 10h +
ja loc_41989A  +
mov eax [esp+78h+arg_4] +
jmp ds:off_49AA30[eax*4]  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_74] edx +
mov ecx [esp+78h+var_58] +
mov edx [esp+78h+var_54] +
mov [esp+78h+var_70] esi +
mov [esp+78h+var_68] eax +
mov eax [esp+78h+arg_C] +
mov [esp+78h+var_6C] eax +
mov eax [esp+78h+arg_0] +
mov [esp+78h+var_78] eax +
mov eax ebp +
call sub_419300  +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_78] eax +
call sub_408690  +
jmp loc_41944F  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_74] edx +
mov ecx [esp+78h+var_58] +
mov edx [esp+78h+var_54] +
mov [esp+78h+var_70] esi +
mov [esp+78h+var_68] eax +
mov eax [esp+78h+arg_C] +
mov [esp+78h+var_6C] eax +
mov eax [esp+78h+arg_0] +
mov [esp+78h+var_78] eax +
mov eax ebp +
call sub_419300  +
mov [esp+78h+var_6C] 0 +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_78] eax +
call sub_4086E0  +
jmp loc_41944F  +
mov ebx 0FFFFFFFFh +
jmp loc_4193B9  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_74] 0Ch +
mov [esp+78h+var_78] eax +
call sub_4084B0  +
mov edx offset aLongDouble_1 +
mov [esp+78h+var_70] eax +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_74] edx +
mov [esp+78h+var_78] eax +
call sub_408C50  +
mov esi eax +
cmp [esp+78h+arg_4] 10h +
ja loc_4195A8  +
mov eax [esp+78h+var_58] +
mov ecx [esp+78h+arg_4] +
mov [eax+ecx*4+4] esi +
mov eax esi +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 4 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aUnsignedLong_2 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 4 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aUnsignedInt_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 2 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aUnsignedShor_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aUnsignedChar_1 +
jmp loc_419576  +
test esi esi +
jz loc_419A04  +
mov eax [esi+0Ch] +
xor edi edi +
mov [esp+78h+var_78] 28h +
lea esi [esp+78h+var_2C] +
mov [esp+78h+var_50] eax +
call sub_4742F0  +
mov [esp+78h+var_78] 28h +
mov [esp+78h+var_4C] eax +
call sub_4742F0  +
mov ebx [esp+78h+var_54] +
mov [esp+78h+var_44] 0Ah +
mov [esp+78h+var_54] ebp +
mov [esp+78h+var_48] eax +
mov eax [ebx+0Ch] +
nop   +
lea esi [esi+0] +
cmp eax [esp+78h+var_50] +
jge loc_4196F5  +
mov eax [ebx+8] +
cmp eax [ebx+4] +
jge loc_4196F5  +
mov ecx [ebx] +
mov ebp [ecx+eax*4] +
mov eax [esp+78h+var_54] +
mov [esp+78h+var_70] esi +
mov [esp+78h+var_74] ebp +
mov [esp+78h+var_78] eax +
call sub_42AB80  +
test eax eax +
jz loc_4199B2  +
movzx ecx [esp+78h+var_19] +
mov eax [ebx+0Ch] +
add dword ptr [ebx+8] 1 +
lea eax [ecx+eax+1] +
movzx ecx [esp+78h+var_1A] +
mov [ebx+0Ch] eax +
cmp cl 10h +
jz loc_419918  +
cmp cl 66h +
jnz loc_4196A0  +
mov eax [esp+78h+var_4C] +
mov esi [esp+78h+var_48] +
mov dword ptr [eax+edi*4] 0 +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] esi +
mov [esp+78h+var_78] eax +
call sub_408650  +
mov esi eax +
mov edx [esp+78h+arg_0] +
mov eax [esp+78h+var_58] +
call sub_418FD0  +
mov [eax] esi +
mov eax esi +
jmp loc_4195AA  +
test esi esi +
jz loc_419A2A  +
mov eax [esi+0Ch] +
add esi 6 +
mov ecx [esp+78h+arg_10] +
mov [esp+78h+var_74] esi +
mov [esp+78h+var_78] 9 +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_6C] ecx +
mov ecx [esp+78h+var_58] +
mov eax ebp +
mov edx [esp+78h+var_54] +
call sub_419A60  +
mov esi eax +
jmp loc_41971D  +
test esi esi +
jz loc_4199D6  +
mov eax [esi+0Ch] +
add esi 6 +
mov ecx [esp+78h+arg_10] +
mov [esp+78h+var_74] esi +
mov [esp+78h+var_78] 8 +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_6C] ecx +
jmp loc_41975E  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_74] 4 +
mov [esp+78h+var_78] eax +
call sub_4084B0  +
mov edx offset aFloat_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_74] 8 +
mov [esp+78h+var_78] eax +
call sub_4084B0  +
mov edx offset aDouble_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 4 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aLong_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 4 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aInt_0 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 2 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aShort_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov edx offset aChar_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_78] eax +
call sub_408480  +
mov edx offset aVoid_1 +
jmp loc_419576  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_78] eax +
call sub_408480  +
mov esi eax +
jmp loc_41958F  +
mov eax [esp+78h+arg_4] +
mov [esp+78h+var_78] offset aParse_coff_typ +
mov [esp+78h+var_74] eax +
call sub_41D6C0  +
xor eax eax +
jmp loc_41944F  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 4 +
mov [esp+78h+var_78] eax +
call sub_408490  +
mov [esp+78h+var_74] offset aInt_0 +
mov [esp+78h+var_70] eax +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_78] eax +
call sub_408C50  +
mov ecx [esp+78h+var_58] +
mov edx eax +
mov [ecx+14h] eax +
jmp loc_4193FC  +
lea edx [edi+1] +
cmp [esp+78h+var_44] edx +
jle loc_419965  +
mov eax [ebp+4] +
mov ecx [esp+78h+var_4C] +
mov [ecx+edi*4] eax +
mov eax [ebp+10h] +
mov ecx [ebp+8] +
add ecx [eax+1Ch] +
mov eax [esp+78h+var_48] +
mov [eax+edi*4] ecx +
mov edi edx +
mov eax [ebx+0Ch] +
jmp loc_4196A0  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] edx +
mov [esp+78h+var_78] eax +
call sub_408440  +
jmp loc_41944F  +
add [esp+78h+var_44] 0Ah +
mov eax [esp+78h+var_44] +
mov [esp+78h+var_3C] edx +
lea ecx ds:0[eax*4] +
mov eax [esp+78h+var_4C] +
mov [esp+78h+var_74] ecx +
mov [esp+78h+var_40] ecx +
mov [esp+78h+var_78] eax +
call sub_474370  +
mov ecx [esp+78h+var_40] +
mov [esp+78h+var_74] ecx +
mov [esp+78h+var_4C] eax +
mov eax [esp+78h+var_48] +
mov [esp+78h+var_78] eax +
call sub_474370  +
mov edx [esp+78h+var_3C] +
mov [esp+78h+var_48] eax +
jmp loc_419921  +
call sub_420A00  +
xor esi esi +
mov [esp+78h+var_78] eax +
call sub_420A10  +
mov [esp+78h+var_78] offset aBfd_coff_get_s +
mov [esp+78h+var_74] eax +
call sub_41D6C0  +
jmp loc_41971D  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_6C] 0 +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_4084E0  +
mov esi eax +
jmp loc_41971D  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] eax +
call sub_408650  +
mov esi eax +
jmp loc_41971D  +
mov eax [esp+78h+arg_10] +
mov [esp+78h+var_6C] 0 +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] eax +
call sub_4084E0  +
mov esi eax +
jmp loc_41971D  +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov [esp+78h+var_78] 28h +
mov [esp+78h+var_54] ecx +
call sub_4742F0  +
mov [esp+78h+var_4C] 0Ah +
mov [esp+78h+var_58] 0 +
mov [esp+78h+var_50] eax +
mov eax [esp+78h+arg_8] +
cmp [ebx+0Ch] eax +
jge loc_419B06  +
mov eax [ebx+8] +
cmp eax [ebx+4] +
jge loc_419B06  +
mov edx [ebx] +
mov esi [edx+eax*4] +
lea eax [esp+78h+var_44] +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_78] ebp +
mov [esp+78h+var_74] esi +
call sub_42AB80  +
test eax eax +
jz loc_419CA0  +
movzx ecx [esp+78h+var_31] +
mov edx [ebx+0Ch] +
add dword ptr [ebx+8] 1 +
movzx eax cl +
lea eax [edx+eax+1] +
mov [ebx+0Ch] eax +
xor eax eax +
test cl cl +
jnz loc_419B50  +
movzx ecx [esp+78h+var_32] +
cmp cl 0Bh +
jz loc_419B90  +
jbe loc_419BA6  +
cmp cl 12h +
jz loc_419C40  +
cmp cl 66h +
jnz loc_419BAB  +
mov eax [esp+78h+var_50] +
mov edi [esp+78h+var_58] +
mov dword ptr [eax+edi*4] 0 +
mov [esp+78h+var_6C] eax +
mov eax [esp+78h+arg_4] +
movzx eax word ptr [eax] +
mov [esp+78h+var_70] eax +
xor eax eax +
cmp [esp+78h+arg_0] 8 +
setz al  +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+arg_C] +
mov [esp+78h+var_78] eax +
call sub_4084E0  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+78h+var_30] +
mov [esp+78h+var_6C] eax +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] esi +
mov [esp+78h+var_78] ebp +
mov [esp+78h+var_5C] edx +
call sub_42AC10  +
mov edx [esp+78h+var_5C] +
test eax eax +
jz loc_419C79  +
movzx ecx [esp+78h+var_32] +
lea eax [esp+78h+var_30] +
cmp cl 0Bh +
jnz loc_419AEE  +
nop   +
mov ecx [esi+10h] +
mov edi [esi+8] +
mov [esp+78h+var_5C] 0 +
add edi [ecx+1Ch] +
shl edi 3 +
jmp loc_419BB5  +
cmp cl 8 +
jz loc_419B90  +
mov [esp+78h+var_5C] 0 +
xor edi edi +
mov ecx [esp+78h+arg_C] +
mov [esp+78h+var_70] eax +
movzx eax [esp+78h+var_34] +
mov [esp+78h+var_78] edx +
mov edx ebx +
mov [esp+78h+var_6C] 1 +
mov [esp+78h+var_68] ecx +
mov ecx [esp+78h+var_54] +
mov [esp+78h+var_74] eax +
mov eax ebp +
call sub_419300  +
mov edx [esi+4] +
mov esi [esp+78h+var_5C] +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_6C] edi +
mov [esp+78h+var_74] edx +
mov [esp+78h+var_68] esi +
mov [esp+78h+var_70] eax +
mov eax [esp+78h+arg_C] +
mov [esp+78h+var_78] eax +
call sub_4089B0  +
test eax eax +
mov esi eax +
jz loc_419C96  +
add [esp+78h+var_58] 1 +
mov eax [esp+78h+var_4C] +
cmp [esp+78h+var_58] eax +
jge loc_419C57  +
mov eax [esp+78h+var_50] +
mov edi [esp+78h+var_58] +
mov [eax+edi*4-4] esi +
jmp loc_419A8F  +
mov ecx [esi+10h] +
mov edi [esi+8] +
add edi [ecx+1Ch] +
movzx ecx [esp+78h+var_2A] +
mov [esp+78h+var_5C] ecx +
jmp loc_419BB5  +
add [esp+78h+var_4C] 0Ah +
mov eax [esp+78h+var_4C] +
shl eax 2 +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+var_50] +
mov [esp+78h+var_78] eax +
call sub_474370  +
mov [esp+78h+var_50] eax +
jmp loc_419C28  +
call sub_420A00  +
mov [esp+78h+var_78] eax +
call sub_420A10  +
mov [esp+78h+var_78] offset aBfd_coff_get_a +
mov [esp+78h+var_74] eax +
call sub_41D6C0  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_420A00  +
mov [esp+78h+var_78] eax +
call sub_420A10  +
mov [esp+78h+var_78] offset aBfd_coff_get_s +
mov [esp+78h+var_74] eax +
call sub_41D6C0  +
xor eax eax +
jmp loc_419C98  +
***
jmp sub_419CD0  +
***
push esi  +
push ebx  +
sub esp 0DCh +
mov eax [esp+0DCh+arg_4] +
lea edx [esp+0DCh+var_C] +
mov [esp+0DCh+var_88] 0 +
mov [esp+0DCh+var_84] 0 +
mov [esp+0DCh+var_54] 0 +
mov [esp+0DCh+var_90] eax +
mov eax [esp+0DCh+arg_8] +
mov [esp+0DCh+var_8C] eax +
lea eax [esp+0DCh+var_50] +
lea esi [esi+0] +
mov dword ptr [eax] 0 +
add eax 4 +
cmp eax edx +
jnz loc_419D20  +
mov ebx [esp+0DCh+arg_8] +
test ebx ebx +
jle loc_41A0E5  +
xor eax eax +
mov [esp+0DCh+var_B8] 0 +
mov [esp+0DCh+var_A8] 0 +
mov [esp+0DCh+var_B0] 0 +
mov [esp+0DCh+var_A0] 0 +
mov [esp+0DCh+var_A4] 0 +
mov [esp+0DCh+var_AC] 0 +
mov [esp+0DCh+var_BC] 0FFFFFFFFh +
jmp loc_419E43  +
cmp al 5 +
jz loc_419E32  +
ja loc_41A220  +
cmp al 2 +
jz loc_41A1C4  +
cmp al 3 +
jnz loc_41A146  +
movzx esi [esp+0DCh+var_70] +
test si si +
jz loc_419E32  +
mov ecx [esp+0DCh+arg_0] +
mov ecx [ecx+0A0h] +
mov edi [ecx+2Ch] +
mov ecx [ecx+28h] +
and edi esi +
mov [esp+0DCh+var_B4] edi +
mov edi 2 +
shl edi cl +
cmp [esp+0DCh+var_B4] edi +
jnz loc_41A1D0  +
cmp [esp+0DCh+var_6D] 0 +
mov [esp+0DCh+var_A4] eax +
mov [esp+0DCh+var_A0] esi +
mov [esp+0DCh+var_B0] 0 +
jz loc_419E06  +
mov eax [ebx+10h] +
mov edi [ebx+8] +
mov eax [eax+1Ch] +
mov [esp+0DCh+var_B0] edi +
add [esp+0DCh+var_B0] eax +
mov eax [esp+0DCh+var_68] +
add [esp+0DCh+var_B0] eax +
mov eax [esp+0DCh+arg_0] +
mov edi [esp+0DCh+arg_0] +
mov eax [eax+4] +
mov eax [eax+124h] +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_DC] edi +
call eax  +
mov [esp+0DCh+var_A8] eax +
mov eax [esp+0DCh+var_C0] +
mov [esp+0DCh+var_AC] eax +
mov eax [esp+0DCh+var_88] +
cmp [esp+0DCh+arg_8] eax +
jle loc_41A0E5  +
mov esi [esp+0DCh+arg_4] +
mov ebx [esi+eax*4] +
lea eax [esp+0DCh+var_80] +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+arg_0] +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_DC] eax +
call sub_42AB80  +
test eax eax +
jz loc_41A320  +
mov eax [ebx+4] +
mov ebp [esp+0DCh+var_84] +
add [esp+0DCh+var_88] 1 +
mov [esp+0DCh+var_C0] eax +
movzx eax [esp+0DCh+var_6D] +
movzx edx al +
lea edx [ebp+edx+1] +
mov [esp+0DCh+var_84] edx +
xor edx edx +
test al al +
jnz loc_41A010  +
cmp ebp [esp+0DCh+var_BC] +
jz loc_41A049  +
movzx eax [esp+0DCh+var_6E] +
cmp al 64h +
jz loc_41A084  +
jbe loc_419D80  +
cmp al 6Ah +
ja loc_41A130  +
cmp al 68h +
jnb loc_419E32  +
cmp al 65h +
jnz loc_41A0F5  +
mov esi [esp+0DCh+var_C0] +
mov edi offset a_bf +
mov ecx 4 +
cmps   +
jnz loc_41A235  +
mov ecx [esp+0DCh+var_AC] +
test ecx ecx +
jz loc_41A389  +
mov eax [esp+0DCh+arg_0] +
mov edi [esp+0DCh+arg_C] +
mov eax [eax+0A0h] +
mov esi [eax+24h] +
mov [esp+0DCh+var_D4] edx +
mov edx [esp+0DCh+var_A0] +
mov [esp+0DCh+var_CC] edi +
mov [esp+0DCh+var_D0] 0 +
mov ecx [eax+30h] +
mov [esp+0DCh+var_DC] ebp +
mov eax edx +
and edx esi +
sar eax cl +
mov ecx esi +
not ecx  +
and eax ecx +
or eax edx +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+arg_0] +
lea ecx [esp+0DCh+var_54] +
lea edx [esp+0DCh+var_90] +
call sub_419300  +
test eax eax +
jz loc_419FFD  +
mov ecx [ebx+10h] +
mov edi [esp+0DCh+var_A4] +
mov edx [ebx+8] +
add edx [ecx+1Ch] +
cmp edi 2 +
jz loc_41A2B0  +
xor ecx ecx +
cmp edi 7Fh +
jz loc_41A2B0  +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+var_AC] +
mov [esp+0DCh+var_CC] edx +
mov [esp+0DCh+var_D0] ecx +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+arg_C] +
mov [esp+0DCh+var_DC] eax +
call sub_407CC0  +
test eax eax +
jz loc_419FFD  +
mov edx [esp+0DCh+var_A8] +
test edx edx +
jz loc_41A342  +
xor esi esi +
cmp [esp+0DCh+var_6D] 0 +
jnz loc_41A2A0  +
mov eax [ebx+10h] +
mov ebx [eax+1Ch] +
mov eax [esp+0DCh+var_A8] +
lea edi [eax+8] +
mov eax [eax+8] +
test eax eax +
jz loc_41A2F0  +
mov ebp [esp+0DCh+arg_C] +
jmp loc_419FE2  +
add edi 8 +
mov eax [edi] +
test eax eax +
jz loc_41A2F0  +
mov edx [edi+4] +
add eax esi +
mov [esp+0DCh+var_D8] eax +
mov [esp+0DCh+var_DC] ebp +
add edx ebx +
mov [esp+0DCh+var_D4] edx +
call sub_4080B0  +
test eax eax +
jnz loc_419FD5  +
add esp 0DCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+0DCh+var_6C] +
mov [esp+0DCh+var_D0] eax +
mov eax [esp+0DCh+arg_0] +
mov [esp+0DCh+var_D4] 0 +
mov [esp+0DCh+var_D8] ebx +
mov [esp+0DCh+var_DC] eax +
call sub_42AC10  +
test eax eax +
jz loc_41A367  +
cmp ebp [esp+0DCh+var_BC] +
lea edx [esp+0DCh+var_6C] +
jnz loc_419EA4  +
cmp [esp+0DCh+var_6E] 67h +
mov [esp+0DCh+var_B4] edx +
jz loc_41A100  +
mov eax [esp+0DCh+arg_C] +
mov [esp+0DCh+var_D8] offset aGlobals +
mov [esp+0DCh+var_DC] eax +
call sub_407B50  +
mov edx [esp+0DCh+var_B4] +
test eax eax +
jz loc_419FFD  +
movzx eax [esp+0DCh+var_6E] +
cmp al 64h +
jnz loc_419EB1  +
mov esi [esp+0DCh+var_C0] +
mov edi offset a_bb +
mov ecx 4 +
cmps   +
jz loc_41A2C0  +
mov esi [esp+0DCh+var_C0] +
mov edi offset a_eb +
mov ecx 4 +
cmps   +
jnz loc_419E32  +
mov edx [ebx+10h] +
mov eax [ebx+8] +
add eax [edx+1Ch] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+arg_C] +
mov [esp+0DCh+var_DC] eax +
call sub_408040  +
test eax eax +
jz loc_419FFD  +
mov eax [esp+0DCh+var_88] +
cmp [esp+0DCh+arg_8] eax +
jg loc_419E43  +
add esp 0DCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 67h +
jnz loc_41A146  +
lea esi [esi+0] +
mov eax [esp+0DCh+var_78] +
mov [esp+0DCh+var_BC] eax +
mov eax [esp+0DCh+var_C0] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+arg_C] +
mov [esp+0DCh+var_DC] eax +
call sub_407B50  +
test eax eax +
jnz loc_419E32  +
jmp loc_419FFD  +
cmp al 7Fh +
jz loc_41A1C4  +
cmp al 0FFh +
lea esi [esi+0] +
jz loc_419E32  +
mov eax [esp+0DCh+arg_C] +
lea ecx [esp+0DCh+var_54] +
mov [esp+0DCh+var_D4] edx +
lea edx [esp+0DCh+var_90] +
mov [esp+0DCh+var_D0] 1 +
mov [esp+0DCh+var_DC] ebp +
mov [esp+0DCh+var_CC] eax +
movzx eax [esp+0DCh+var_70] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+arg_0] +
call sub_419300  +
test eax eax +
jz loc_419FFD  +
mov ecx [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D0] ecx +
mov [esp+0DCh+var_D4] eax +
mov eax [esp+0DCh+arg_C] +
mov ecx ebp +
mov edx ebx +
mov [esp+0DCh+var_D8] eax +
movzx eax [esp+0DCh+var_6E] +
mov byte ptr [esp+0DCh+var_DC] al +
lea eax [esp+0DCh+var_54] +
call sub_419110  +
test eax eax +
jnz loc_419E32  +
jmp loc_419FFD  +
movzx esi [esp+0DCh+var_70] +
jmp loc_419DAC  +
mov eax [esp+0DCh+arg_C] +
lea ecx [esp+0DCh+var_54] +
mov [esp+0DCh+var_D4] edx +
lea edx [esp+0DCh+var_90] +
mov [esp+0DCh+var_D0] 1 +
mov [esp+0DCh+var_D8] esi +
mov [esp+0DCh+var_CC] eax +
mov eax [esp+0DCh+arg_0] +
mov [esp+0DCh+var_DC] ebp +
call sub_419300  +
test eax eax +
jz loc_419FFD  +
mov edi [esp+0DCh+var_B8] +
mov [esp+0DCh+var_D0] edi +
jmp loc_41A190  +
cmp al 7 +
jz loc_419E32  +
cmp al 0Eh +
jnz loc_41A146  +
jmp loc_419E32  +
mov esi [esp+0DCh+var_C0] +
mov edi offset a_ef +
mov ecx 4 +
cmps   +
jnz loc_419E32  +
mov eax [esp+0DCh+var_B8] +
test eax eax +
jz loc_41A39E  +
mov edx [ebx+10h] +
mov eax [ebx+8] +
mov ecx [esp+0DCh+var_B0] +
add eax [edx+1Ch] +
cmp ecx eax +
cmovnb eax ecx +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+arg_C] +
mov [esp+0DCh+var_DC] eax +
call sub_407EC0  +
test eax eax +
jz loc_419FFD  +
mov [esp+0DCh+var_B8] 0 +
mov [esp+0DCh+var_B0] 0 +
jmp loc_419E32  +
movzx esi word ptr [esp+0DCh+var_68] +
sub esi 1 +
jmp loc_419FB4  +
mov ecx 1 +
jmp loc_419F74  +
mov edx [ebx+10h] +
mov eax [ebx+8] +
add eax [edx+1Ch] +
mov [esp+0DCh+var_D8] eax +
mov eax [esp+0DCh+arg_C] +
mov [esp+0DCh+var_DC] eax +
call sub_407F40  +
test eax eax +
jnz loc_419E32  +
jmp loc_419FFD  +
mov [esp+0DCh+var_B8] 1 +
mov [esp+0DCh+var_A8] 0 +
mov [esp+0DCh+var_A0] 0 +
mov [esp+0DCh+var_A4] 0 +
mov [esp+0DCh+var_AC] 0 +
jmp loc_419E32  +
call sub_420A00  +
mov [esp+0DCh+var_DC] eax +
call sub_420A10  +
mov [esp+0DCh+var_DC] offset aBfd_coff_get_s +
mov [esp+0DCh+var_D8] eax +
call sub_41D6C0  +
jmp loc_419FFD  +
mov [esp+0DCh+var_B8] 1 +
mov [esp+0DCh+var_A0] 0 +
mov [esp+0DCh+var_A4] 0 +
mov [esp+0DCh+var_AC] 0 +
jmp loc_419E32  +
call sub_420A00  +
mov [esp+0DCh+var_DC] eax +
call sub_420A10  +
mov [esp+0DCh+var_DC] offset aBfd_coff_get_a +
mov [esp+0DCh+var_D8] eax +
call sub_41D6C0  +
jmp loc_419FFD  +
mov [esp+0DCh+var_D8] ebp +
mov [esp+0DCh+var_DC] offset aLd_bfWithoutPr +
call sub_41D6C0  +
jmp loc_419FFD  +
mov [esp+0DCh+var_D8] ebp +
mov [esp+0DCh+var_DC] offset aLdUnexpected_e +
call sub_41D6C0  +
jmp loc_419FFD  +
***
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
mov ebx [eax+0E0h] +
cmp ebx ecx +
ja loc_41A446  +
test ebx ebx +
jnz loc_41A3F7  +
cmp ecx 9 +
mov bl 0Ah +
mov eax 0A0h +
jbe loc_41A402  +
add ebx ebx +
cmp esi ebx +
jnb loc_41A3F7  +
mov eax ebx +
shl eax 4 +
mov edx [edi+0DCh] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_474370  +
mov edx [edi+0E0h] +
mov ecx ebx +
mov [esp+28h+var_24] 0 +
sub ecx edx +
shl edx 4 +
mov [edi+0DCh] eax +
shl ecx 4 +
add eax edx +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call memset  +
mov [edi+0E0h] ebx +
shl esi 4 +
add esi [edi+0DCh] +
mov edx [esi] +
test edx edx +
jnz loc_41A46A  +
mov eax [edi+3Ch] +
mov [esi] eax +
add eax 1 +
mov [edi+3Ch] eax +
mov eax [esp+28h+arg_0] +
mov [esi+4] ebp +
mov [esi+8] eax +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_41A485  +
mov eax [esi+0Ch] +
mov ecx [esp+28h+arg_4] +
mov [ecx] eax +
mov eax [esi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+28h+arg_4] +
mov dword ptr [esi+8] 0 +
mov eax [eax] +
mov [esi+0Ch] eax +
mov eax [esi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov esi [esp+48h+arg_4] +
test esi esi +
jz loc_41A680  +
lea eax [eax+1Ch] +
mov [esp+48h+var_3C] 1 +
mov [esp+48h+var_40] 1 +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call sub_42A4E0  +
test eax eax +
jz loc_41A690  +
mov edx [eax+10h] +
cmp edx 0FFFFFFFFh +
jz loc_41A650  +
mov eax [ebx] +
lea ecx [esp+48h+var_24] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] edx +
call eax  +
mov eax ebp +
mov [esp+48h+var_20] al +
mov eax [ebx] +
lea edx [esp+48h+var_1E] +
mov byte ptr [esp+29h] 0 +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] edi +
call eax  +
mov eax [ebx] +
lea edx [esp+48h+var_1E+2] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+48h+var_44] edx +
mov edx [esp+48h+arg_0] +
mov [esp+48h+var_48] edx +
call eax  +
mov edx [ebx+8] +
mov eax [ebx+0Ch] +
lea ecx [edx+0Ch] +
cmp ecx eax +
ja loc_41A632  +
mov eax [ebx+4] +
mov ecx [esp+48h+var_24] +
mov [eax+edx] ecx +
mov ecx dword ptr [esp+48h+var_20] +
mov [eax+edx+4] ecx +
mov ecx [esp+48h+var_1E+2] +
mov [eax+edx+8] ecx +
mov eax 1 +
add dword ptr [ebx+8] 0Ch +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+4] +
add eax eax +
mov [ebx+0Ch] eax +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edx +
call sub_474370  +
mov edx [ebx+8] +
mov [ebx+4] eax +
jmp loc_41A60A  +
mov ecx [ebx+14h] +
mov edx [ebx+18h] +
test ecx ecx +
mov [eax+10h] edx +
jz loc_41A687  +
mov [ecx+0Ch] eax +
mov [ebx+14h] eax +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_2C] edx +
call strlen  +
mov edx [esp+48h+var_2C] +
lea eax [edx+eax+1] +
mov [ebx+18h] eax +
jmp loc_41A5AC  +
xor edx edx +
jmp loc_41A5AC  +
mov [ebx+10h] eax +
jmp loc_41A660  +
call sub_420A00  +
mov [esp+48h+var_48] eax +
call sub_420A10  +
mov [esp+48h+var_48] offset aString_hash_lo +
mov [esp+48h+var_44] eax +
call sub_41D6C0  +
xor eax eax +
jmp loc_41A62A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_8] +
mov esi [esp+1Ch+arg_C] +
mov eax [ebx+118h] +
test eax eax +
jz loc_41A750  +
cmp [ebx+108h] esi +
jnb loc_41A6EF  +
mov [ebx+108h] esi +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edi +
call sub_476180  +
test eax eax +
jz loc_41A71E  +
xor ecx ecx +
mov edx 84h +
mov [esp+1Ch+var_18] edi +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_41A560  +
test eax eax +
jz loc_41A745  +
mov [ebx+118h] edi +
mov [esp+1Ch+arg_4] 0 +
mov ecx ebp +
mov eax ebx +
sub esi [ebx+110h] +
mov edx 44h +
mov [esp+1Ch+arg_0] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_41A560  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] 8D1h +
mov [esp+1Ch+var_18] offset a____Binutils_2 +
mov [esp+1Ch+var_1C] offset aInfoLineno_fil +
call sub_48C4C0  +
mov eax [ebx+118h] +
jmp loc_41A6E1  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
mov eax [ebx+100h] +
cmp eax 0FFFFFFFFh +
jz loc_41A7BA  +
mov edx [ebx] +
mov ecx [ebx+4] +
mov edx [edx+4] +
lea eax [ecx+eax+8] +
mov edx [edx+30h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call edx  +
mov dword ptr [ebx+100h] 0FFFFFFFFh +
mov eax [ebx+104h] +
cmp eax 0FFFFFFFFh +
jz loc_41A7E7  +
mov edx [ebx] +
mov ecx [ebx+4] +
mov edx [edx+4] +
lea eax [ecx+eax+8] +
mov edx [edx+30h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call edx  +
mov dword ptr [ebx+104h] 0FFFFFFFFh +
mov eax [ebx+10Ch] +
add eax 1 +
cmp eax 1 +
mov [ebx+10Ch] eax +
jz loc_41A840  +
mov eax [ebx+114h] +
cmp eax 0FFFFFFFFh +
jz loc_41A823  +
mov [esp+14h+var_14] eax +
xor ecx ecx +
mov edx 0C0h +
mov [esp+14h+var_10] 0 +
mov eax ebx +
call sub_41A560  +
test eax eax +
jz loc_41A834  +
sub esi [ebx+110h] +
mov eax 1 +
mov [ebx+114h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+110h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 24h +
mov esi [esp+24h+arg_4] +
fld  [esp+24h+arg_8] +
fstp  [esp+24h+var_C] +
mov [esp+24h+var_24] esi +
call strlen  +
add eax 14h +
mov [esp+24h+var_24] eax +
call sub_4742F0  +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] offset aSCFG +
fld  [esp+24h+var_C] +
mov ebx eax +
fstp  [esp+24h+var_18] +
mov [esp+24h+var_24] eax +
call sprintf  +
mov eax [esp+24h+arg_0] +
xor ecx ecx +
mov edx 80h +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] 0 +
call sub_41A560  +
xor edx edx +
test eax eax +
jz loc_41A8C0  +
mov [esp+24h+var_24] ebx +
call free  +
mov edx 1 +
add esp 24h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+arg_0] +
xor ecx ecx +
mov edx [esp+arg_4] +
mov [eax+118h] edx +
mov edx 84h +
mov [esp+arg_0] 0 +
jmp sub_41A560  +
***
mov eax [esp+arg_0] +
xor ecx ecx +
mov edx [esp+arg_4] +
mov [eax+118h] edx +
mov edx 84h +
mov [esp+arg_0] 0 +
jmp sub_41A560  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov eax [esi+38h] +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_41AB76  +
mov edi [eax+14h] +
test edi edi +
jz loc_41AB76  +
mov ebp [esp+1Ch+var_10] +
mov eax [ebp+4] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov [esp+1Ch+var_1C] edi +
mov ebx eax +
call strlen  +
mov edi [ebp+18h] +
add ebx eax +
test edi edi +
jz loc_41ABA1  +
mov eax [edi] +
add ebx 1Eh +
xor ebp ebp +
test eax eax +
jz loc_41AA0A  +
mov [esp+1Ch+var_1C] eax +
add ebp 1 +
call strlen  +
add ebx eax +
mov eax [edi+ebp*4] +
test eax eax +
jnz loc_41A9F6  +
mov eax [esp+1Ch+var_10] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_41AA1F  +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add ebx eax +
mov eax [esp+1Ch+var_10] +
mov eax [eax+20h] +
test eax eax +
jz loc_41AA34  +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add ebx eax +
mov [esp+1Ch+var_1C] ebx +
call sub_4742F0  +
mov edi eax +
mov eax [esi+38h] +
mov eax [eax+4] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_475790  +
mov ecx [esi+38h] +
mov ebx [ecx+18h] +
test ebx ebx +
jz loc_41AAC6  +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] offset aU_1 +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
mov eax [esi+38h] +
mov edx [eax+18h] +
mov eax [edx] +
test eax eax +
jz loc_41AAB4  +
mov ebx 4 +
xor ebp ebp +
jmp loc_41AA87  +
mov ebp ebx +
mov ebx ecx +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edi +
call strcat  +
mov eax [esi+38h] +
mov eax [eax+18h] +
mov eax [eax+ebp] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esi+38h] +
lea ecx [ebx+4] +
mov edx [eax+18h] +
mov eax [edx+ebx] +
test eax eax +
jnz loc_41AA83  +
mov [esp+1Ch+var_1C] edx +
call free  +
mov ecx [esi+38h] +
mov dword ptr [ecx+18h] 0 +
mov eax [ecx+14h] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call strcat  +
mov eax [esi+38h] +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebx [esi+38h] +
mov eax [ebx+1Ch] +
mov dword ptr [ebx+14h] 0 +
test eax eax +
jz loc_41AB18  +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] edi +
call strcat  +
mov eax [esi+38h] +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebx [esi+38h] +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+1Ch+var_1C] edi +
call strlen  +
mov edx 3Bh +
mov [edi+eax] dx +
mov edx [ebx+20h] +
test edx edx +
jz loc_41AB58  +
lea eax [edi+eax+1] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call strcpy  +
mov eax [esi+38h] +
mov eax [eax+20h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebx [esi+38h] +
mov dword ptr [ebx+20h] 0 +
mov eax [ebx+4] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esi+38h] +
mov [eax+4] edi +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] 6F7h +
mov [esp+1Ch+var_18] offset a____Binutils_2 +
mov [esp+1Ch+var_1C] offset aInfoType_sta_5 +
call sub_48C4C0  +
mov eax [esi+38h] +
mov [esp+1Ch+var_10] eax +
mov edi [eax+14h] +
jmp loc_41A9C5  +
add ebx 0Ah +
xor ebp ebp +
jmp loc_41AA0A  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov eax [esi+38h] +
test eax eax +
jz loc_41ABE3  +
mov ebx [eax+1Ch] +
test ebx ebx +
jz loc_41ABE3  +
mov [esp+14h+var_14] ebx +
call strlen  +
mov edx 3Bh +
mov [ebx+eax] dx +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 6E4h +
mov [esp+14h+var_10] offset a____Binutils_2 +
mov [esp+14h+var_14] offset aInfoType_sta_6 +
call sub_48C4C0  +
mov eax [esi+38h] +
mov ebx [eax+1Ch] +
jmp loc_41ABC7  +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_41AC60  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_42A800  +
test eax eax +
jz loc_41AC52  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0FFFFFFFFh +
mov dword ptr [eax+14h] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41AC4D  +
jmp loc_41AC20  +
***
sub esp 14h +
mov ebx [eax] +
test ebx ebx +
jz loc_41ACA2  +
mov edx [ebx] +
mov [eax] edx +
mov esi [ebx+4] +
mov [esp+14h+var_14] ebx +
call free  +
add esp 14h +
pop ebx  +
mov eax esi +
pop esi  +
retn   +
mov [esp+14h+var_C] 1B8h +
mov [esp+14h+var_10] offset a____Binutils_2 +
mov [esp+14h+var_14] offset aSNull +
mov [esp+14h+var_8] eax +
call sub_48C4C0  +
mov eax [esp+14h+var_8] +
jmp loc_41AC8B  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov eax [ebx+38h] +
mov eax [eax+10h] +
mov [esp+3Ch+var_10] eax +
lea eax [ebx+38h] +
call sub_41AC80  +
mov esi eax +
mov eax [ebx+38h] +
mov eax [eax+14h] +
test eax eax +
jz loc_41ADD7  +
mov [esp+3Ch+var_3C] eax +
call strlen  +
mov ebp eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov edi eax +
call strlen  +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_14] eax +
call strlen  +
lea edx [ebp+edi+0Ah] +
mov edi [esp+3Ch+var_14] +
add edi edx +
add eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_4742F0  +
cmp [esp+3Ch+arg_C] 1 +
mov edi eax +
jz loc_41ADD0  +
jb loc_41ADC5  +
cmp [esp+3Ch+arg_C] 2 +
jnz loc_41ADC0  +
mov eax offset a0_0 +
mov edx [ebx+38h] +
mov ecx [esp+3Ch+arg_8] +
mov edx [edx+14h] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_28] esi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_38] offset aSSSSS +
mov [esp+3Ch+var_3C] edi +
call sprintf  +
mov eax [ebx+38h] +
mov eax [eax+14h] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov edx [esp+3Ch+var_10] +
mov eax [ebx+38h] +
test edx edx +
mov [eax+14h] edi +
jz loc_41ADB1  +
mov dword ptr [eax+10h] 1 +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
mov eax offset unk_49AC04 +
jmp loc_41AD5C  +
mov eax offset a1 +
jmp loc_41AD5C  +
mov [esp+3Ch+var_34] 5E2h +
mov [esp+3Ch+var_38] offset a____Binutils_2 +
mov [esp+3Ch+var_3C] offset aInfoType_sta_7 +
call sub_48C4C0  +
mov eax [ebx+38h] +
mov eax [eax+14h] +
jmp loc_41ACFD  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov eax [ebx+38h] +
mov edi [eax+10h] +
mov eax [eax+0Ch] +
mov [esp+3Ch+var_14] edi +
mov [esp+3Ch+var_10] eax +
lea eax [ebx+38h] +
call sub_41AC80  +
mov esi eax +
mov eax [ebx+38h] +
mov eax [eax+14h] +
test eax eax +
jz loc_41AF60  +
mov [esp+3Ch+var_3C] eax +
call strlen  +
mov edi eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
mov [esp+3Ch+var_3C] esi +
mov ebp eax +
call strlen  +
lea edx [edi+ebp+32h] +
add eax edx +
mov [esp+3Ch+var_3C] eax +
call sub_4742F0  +
cmp [esp+3Ch+arg_10] 1 +
mov ebp eax +
jz loc_41AF20  +
jb loc_41AF15  +
cmp [esp+3Ch+arg_10] 2 +
jnz loc_41AF10  +
mov eax offset a0_0 +
mov ecx [esp+3Ch+arg_C] +
test ecx ecx +
jnz loc_41AEA0  +
mov edx [esp+3Ch+var_10] +
shl edx 3 +
test edx edx +
mov [esp+3Ch+arg_C] edx +
jz loc_41AF30  +
mov ecx [ebx+38h] +
mov edx [ecx+14h] +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_28] esi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_20] ecx +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_38] offset aSSSSLdLd +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_24] ecx +
call sprintf  +
mov eax [ebx+38h] +
mov eax [eax+14h] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov edx [esp+3Ch+var_14] +
mov eax [ebx+38h] +
test edx edx +
mov [eax+14h] ebp +
jz loc_41AEFD  +
mov dword ptr [eax+10h] 1 +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
mov eax offset unk_49AC04 +
jmp loc_41AE85  +
mov eax offset a1 +
jmp loc_41AE85  +
mov ecx [ebx] +
mov [esp+3Ch+var_10] eax +
mov eax [esp+3Ch+arg_4] +
mov ecx [ecx] +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] offset aSWarningUnknow +
mov [esp+3Ch+var_38] ecx +
call sub_41D6C0  +
mov eax [esp+3Ch+var_10] +
jmp loc_41AEA0  +
mov [esp+3Ch+var_34] 554h +
mov [esp+3Ch+var_38] offset a____Binutils_2 +
mov [esp+3Ch+var_3C] offset aInfoType_sta_7 +
call sub_48C4C0  +
mov eax [ebx+38h] +
mov eax [eax+14h] +
jmp loc_41AE34  +
***
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [eax+38h] +
lea edi [ebx+38h] +
mov [esp+50h+var_24] edx +
mov eax [eax+10h] +
mov [esp+50h+var_2C] eax +
mov eax edi +
call sub_41AC80  +
mov [esp+50h+var_20] 0 +
mov [esp+50h+var_28] eax +
mov eax [esp+50h+arg_10] +
test eax eax +
jz loc_41AFF0  +
mov eax [esp+50h+var_2C] +
test eax eax +
jnz loc_41B120  +
mov eax [ebx+38h] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+50h+var_2C] eax +
mov eax edi +
call sub_41AC80  +
mov [esp+50h+var_20] eax +
mov eax [ebx+38h] +
test eax eax +
jz loc_41B252  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_41B252  +
cmp esi 1 +
jz loc_41B245  +
nop   +
jb loc_41B238  +
cmp esi 2 +
jnz loc_41B114  +
mov [esp+50h+var_1C] 30h +
cmp [esp+50h+arg_8] 1 +
mov ebp [esp+50h+arg_4] +
sbb esi esi +
and esi 0FFFFFFFEh +
test ebp ebp +
jz loc_41B230  +
add esi 44h +
mov edi [esp+50h+arg_0] +
test edi edi +
jnz loc_41B130  +
mov ecx [esp+50h+arg_10] +
test ecx ecx +
jnz loc_41B273  +
mov eax [ebx+38h] +
mov edx [eax+1Ch] +
mov [esp+50h+var_18] eax +
mov [esp+50h+var_50] edx +
mov [esp+50h+var_20] edx +
call strlen  +
mov edi eax +
mov eax [esp+50h+var_28] +
mov [esp+50h+var_50] eax +
call strlen  +
mov ebp eax +
mov eax [esp+50h+var_24] +
add ebp edi +
mov edi 2Eh +
mov [esp+50h+var_50] eax +
call strlen  +
mov edx [esp+50h+var_20] +
add ebp eax +
add ebp 28h +
mov [esp+50h+var_4C] ebp +
mov [esp+50h+var_50] edx +
call sub_474370  +
mov edx [esp+50h+var_18] +
mov [edx+1Ch] eax +
mov eax [ebx+38h] +
mov ebp [eax+1Ch] +
mov [esp+50h+var_50] ebp +
call strlen  +
mov ecx [esp+50h+var_1C] +
mov [esp+50h+var_38] edi +
mov edx [esp+50h+var_24] +
mov edi [esp+50h+var_28] +
mov [esp+50h+var_3C] esi +
mov [esp+50h+var_40] ecx +
mov [esp+50h+var_44] edx +
add ebp eax +
mov [esp+50h+var_48] edi +
mov [esp+50h+var_4C] offset aSSCCC +
mov [esp+50h+var_50] ebp +
call sprintf  +
mov [esp+50h+var_50] edi +
call free  +
mov eax [esp+50h+var_2C] +
test eax eax +
jz loc_41B107  +
mov eax [ebx+38h] +
mov dword ptr [eax+10h] 1 +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
mov [esp+50h+var_2C] 1 +
jmp loc_41AFE5  +
mov eax [ebx+38h] +
mov edx [eax+1Ch] +
mov [esp+50h+var_18] eax +
mov [esp+50h+var_50] edx +
mov [esp+50h+var_14] edx +
call strlen  +
mov edi eax +
mov eax [esp+50h+var_28] +
mov [esp+50h+var_50] eax +
call strlen  +
mov ebp eax +
mov eax [esp+50h+var_24] +
add ebp edi +
mov edi 3Fh +
mov [esp+50h+var_50] eax +
call strlen  +
mov edx [esp+50h+arg_10] +
add ebp eax +
test edx edx +
mov edx [esp+50h+var_14] +
jz loc_41B097  +
mov eax [esp+50h+var_20] +
mov [esp+50h+var_14] edx +
mov [esp+50h+var_50] eax +
call strlen  +
mov edx [esp+50h+var_14] +
mov [esp+50h+var_50] edx +
lea eax [ebp+eax+28h] +
mov [esp+50h+var_4C] eax +
call sub_474370  +
mov ecx [esp+50h+var_18] +
mov [ecx+1Ch] eax +
mov eax [ebx+38h] +
mov ebp [eax+1Ch] +
mov [esp+50h+var_50] ebp +
call strlen  +
mov edx [esp+50h+var_1C] +
mov ecx [esp+50h+var_24] +
mov [esp+50h+var_3C] esi +
mov esi [esp+50h+var_28] +
mov [esp+50h+var_38] edi +
mov [esp+50h+var_40] edx +
mov [esp+50h+var_44] ecx +
add ebp eax +
mov [esp+50h+var_48] esi +
mov [esp+50h+var_4C] offset aSSCCC +
mov [esp+50h+var_50] ebp +
call sprintf  +
mov [esp+50h+var_50] esi +
call free  +
mov eax [ebx+38h] +
mov esi [eax+1Ch] +
mov [esp+50h+var_50] esi +
call strlen  +
mov edi [esp+50h+var_20] +
mov edx [esp+50h+arg_C] +
mov [esp+50h+var_4C] offset aLdS +
mov [esp+50h+var_44] edi +
mov [esp+50h+var_48] edx +
add esi eax +
mov [esp+50h+var_50] esi +
call sprintf  +
mov [esp+50h+var_50] edi +
call free  +
jmp loc_41B0F5  +
add esi 43h +
jmp loc_41B040  +
mov [esp+50h+var_1C] 32h +
jmp loc_41B027  +
mov [esp+50h+var_1C] 31h +
jmp loc_41B027  +
mov [esp+50h+var_48] 67Fh +
mov [esp+50h+var_4C] offset a____Binutils_2 +
mov [esp+50h+var_50] offset aInfoType_sta_6 +
call sub_48C4C0  +
jmp loc_41B006  +
mov eax [ebx+38h] +
mov edx [eax+1Ch] +
mov [esp+50h+var_18] eax +
mov [esp+50h+var_50] edx +
mov [esp+50h+var_14] edx +
call strlen  +
mov ebp eax +
mov eax [esp+50h+var_28] +
mov [esp+50h+var_50] eax +
call strlen  +
mov edi eax +
mov eax [esp+50h+var_24] +
mov [esp+50h+var_50] eax +
call strlen  +
mov edx [esp+50h+var_14] +
add edi eax +
add ebp edi +
mov edi 2Ah +
jmp loc_41B17B  +
***
mov ebx [esp+arg_C] +
mov esi [esp+arg_10] +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov [esp+arg_10] 0 +
mov [esp+arg_C] 0 +
mov [esp+arg_8] esi +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 1 +
pop ebx  +
pop esi  +
jmp sub_41AF90  +
***
push ebx  +
mov edi [esp+arg_18] +
mov ebx [esp+arg_C] +
mov esi [esp+arg_10] +
mov eax [esp+arg_0] +
mov [esp+arg_10] edi +
mov edi [esp+arg_14] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov [esp+arg_4] ebx +
mov [esp+arg_C] edi +
mov [esp+arg_8] esi +
mov [esp+arg_0] 0 +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_41AF90  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_C] +
mov eax [esi+38h] +
mov eax [eax+10h] +
mov [esp+2Ch+var_10] eax +
lea eax [esi+38h] +
call sub_41AC80  +
mov [esp+2Ch+var_2C] eax +
mov ebp eax +
call strlen  +
add eax 19h +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
cmp [esp+2Ch+arg_8] 1 +
sbb edx edx +
add edx 31h +
cmp ebx 1 +
mov edi eax +
mov [eax] dl +
jz loc_41B451  +
jb loc_41B448  +
cmp ebx 2 +
jnz loc_41B443  +
mov byte ptr [eax+1] 30h +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_28] offset aLdS_0 +
mov [esp+2Ch+var_24] eax +
lea eax [edi+2] +
mov [esp+2Ch+var_2C] eax +
call sprintf  +
mov [esp+2Ch+var_2C] ebp +
call free  +
mov eax [esi+38h] +
test eax eax +
jz loc_41B470  +
mov ebp [eax+14h] +
test ebp ebp +
jz loc_41B470  +
mov eax [eax+18h] +
test eax eax +
jz loc_41B460  +
mov ebx [eax] +
test ebx ebx +
jz loc_41B460  +
xor edx edx +
lea esi [esi+0] +
add edx 1 +
mov ecx [eax+edx*4] +
lea ebx ds:0[edx*4] +
test ecx ecx +
jnz loc_41B3F0  +
lea edx ds:8[edx*4] +
lea ebp [edx-4] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_474370  +
mov [eax+ebx] edi +
mov dword ptr [eax+ebp] 0 +
mov edx [esi+38h] +
mov [edx+18h] eax +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_41B436  +
mov dword ptr [edx+10h] 1 +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
mov byte ptr [eax+1] 32h +
jmp loc_41B3A0  +
mov byte ptr [eax+1] 31h +
jmp loc_41B3A0  +
mov ebp 4 +
xor ebx ebx +
mov edx 8 +
jmp loc_41B40B  +
mov [esp+2Ch+var_24] 632h +
mov [esp+2Ch+var_28] offset a____Binutils_2 +
mov [esp+2Ch+var_2C] offset aInfoType_sta_5 +
call sub_48C4C0  +
mov eax [esi+38h] +
jmp loc_41B3DD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
add eax 38h +
call sub_41AC80  +
cmp esi 2 +
mov ebx eax +
jz loc_41B590  +
jbe loc_41B574  +
cmp esi 3 +
jz loc_41B565  +
cmp esi 4 +
mov ebp 61h +
mov edi 40h +
jnz loc_41B587  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov esi eax +
call strlen  +
lea eax [esi+eax+3] +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_1C] ebx +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_28] offset aSCS +
mov esi eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
call sprintf  +
mov [esp+2Ch+var_2C] ebx +
call free  +
mov eax [esp+2Ch+arg_C] +
xor ecx ecx +
mov edx edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+arg_0] +
call sub_41A560  +
xor edx edx +
test eax eax +
jz loc_41B55B  +
mov [esp+2Ch+var_2C] esi +
call free  +
mov edx 1 +
add esp 2Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp 76h +
mov edi 0A0h +
jmp loc_41B4E4  +
cmp esi 1 +
mov ebp 70h +
mov edi 0A0h +
jz loc_41B4E4  +
call abort  +
lea esi [esi+0] +
mov ebp 50h +
mov edi 40h +
jmp loc_41B4E4  +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_8] +
add eax 38h +
call sub_41AC80  +
cmp edi 5 +
ja sub_41B7D0  +
mov ebx eax +
jmp ds:off_49ACEC[edi*4]  +
***
mov ebp offset aS_14 +
mov esi 26h +
***
mov eax [esp+arg_40] +
mov [esp+0] eax +
call strlen  +
mov [esp+0] ebx +
mov edi eax +
call strlen  +
lea eax [edi+eax+3] +
mov [esp+0] eax +
call sub_4742F0  +
mov [esp+arg_C] ebx +
mov [esp+arg_8] ebp +
mov [esp+arg_0] offset aSSS_2 +
mov edi eax +
mov eax [esp+arg_40] +
mov [esp+0] edi +
mov [esp+arg_4] eax +
call sprintf  +
mov [esp+0] ebx +
call free  +
mov eax [esp+arg_48] +
xor ecx ecx +
mov edx esi +
mov [esp+arg_0] edi +
mov [esp+0] eax +
mov eax [esp+arg_3C] +
call sub_41A560  +
xor edx edx +
test eax eax +
jz loc_41B721  +
mov [esp+0] edi +
call free  +
mov edx 1 +
add esp 2Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp offset aV_0 +
mov esi 26h +
jmp loc_41B6AA  +
***
movzx eax byte ptr [eax] +
mov ebp offset unk_49AC04 +
mov esi 80h +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_41B6AA  +
mov eax [esp+arg_3C] +
mov ecx [esp+arg_3C] +
mov edi [eax+3Ch] +
lea eax [edi+1] +
mov [ecx+3Ch] eax +
mov [esp+0] ebx +
call strlen  +
add eax 14h +
mov [esp+0] eax +
call sub_4742F0  +
mov [esp+arg_8] ebx +
mov [esp+arg_4] edi +
mov [esp+arg_0] offset aLdS_1 +
mov [esp+0] eax +
mov [esp+arg_18] eax +
call sprintf  +
mov [esp+0] ebx +
call free  +
mov ecx [esp+arg_18] +
mov ebx ecx +
jmp loc_41B6AA  +
***
mov ebp offset aR_1 +
mov esi 40h +
jmp loc_41B6AA  +
***
mov ebp offset aG +
mov esi 20h +
jmp loc_41B6AA  +
***
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+3Ch+arg_0] +
mov ebp [esp+3Ch+arg_4] +
lea eax [edi+38h] +
call sub_41AC80  +
mov [esp+3Ch+var_3C] ebp +
mov ebx eax +
call strlen  +
mov [esp+3Ch+var_3C] ebx +
mov esi eax +
call strlen  +
lea eax [esi+eax+14h] +
mov [esp+3Ch+var_3C] eax +
call sub_4742F0  +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] offset aSCESLd +
mov esi eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_2C] eax +
call sprintf  +
mov [esp+3Ch+var_3C] ebx +
call free  +
xor ecx ecx +
mov edx 80h +
mov [esp+3Ch+var_38] esi +
mov eax edi +
mov [esp+3Ch+var_3C] 0 +
call sub_41A560  +
xor edx edx +
test eax eax +
jz loc_41B86D  +
mov [esp+3Ch+var_3C] esi +
call free  +
mov edx 1 +
add esp 2Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
lea eax [edi+38h] +
call sub_41AC80  +
mov [esp+1Ch+var_1C] ebp +
mov ebx eax +
call strlen  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call strlen  +
lea eax [esi+eax+3] +
mov [esp+1Ch+var_1C] eax +
call sub_4742F0  +
mov [esp+1Ch+var_10] ebx +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] offset aSTS +
mov [esp+1Ch+var_1C] eax +
mov esi eax +
call sprintf  +
mov [esp+1Ch+var_1C] ebx +
call free  +
xor ecx ecx +
mov edx 80h +
mov [esp+1Ch+var_18] esi +
mov eax edi +
mov [esp+1Ch+var_1C] 0 +
call sub_41A560  +
xor edx edx +
test eax eax +
jz loc_41B905  +
mov [esp+1Ch+var_1C] esi +
call free  +
mov edx 1 +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov eax [ebx+38h] +
mov ebp [eax+8] +
mov eax [eax+0Ch] +
mov [esp+2Ch+var_10] eax +
lea eax [ebx+38h] +
call sub_41AC80  +
mov esi eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_2C] esi +
mov edi eax +
call strlen  +
lea eax [edi+eax+14h] +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
test ebp ebp +
mov edi eax +
jle loc_41BA00  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_28] offset aSTS_0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] eax +
call sprintf  +
mov [esp+2Ch+var_2C] esi +
xor esi esi +
call free  +
xor ecx ecx +
mov edx 80h +
mov [esp+2Ch+var_28] edi +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_41A560  +
test eax eax +
jnz loc_41B9B0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] edi +
add ebx 0E4h +
call free  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_42A4E0  +
test eax eax +
jz loc_41BA30  +
mov edx [esp+2Ch+var_10] +
mov esi 1 +
mov [eax+10h] ebp +
mov [eax+14h] edx +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+3Ch] +
lea eax [ebp+1] +
mov [ebx+3Ch] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_1C] esi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_28] offset aSTLdS +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] edi +
call sprintf  +
jmp loc_41B97A  +
call sub_420A00  +
mov [esp+2Ch+var_2C] eax +
call sub_420A10  +
mov [esp+2Ch+var_2C] offset aString_hash_lo +
mov [esp+2Ch+var_28] eax +
call sub_41D6C0  +
jmp loc_41B9A1  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
cmp [ebx+108h] esi +
jnb loc_41BA7B  +
mov [ebx+108h] esi +
mov eax [ebx+114h] +
cmp eax 0FFFFFFFFh +
jz loc_41BAAD  +
mov [esp+14h+var_14] eax +
xor ecx ecx +
mov edx 0C0h +
mov [esp+14h+var_10] 0 +
mov eax ebx +
call sub_41A560  +
test eax eax +
jz loc_41BB20  +
mov dword ptr [ebx+114h] 0FFFFFFFFh +
mov eax [ebx+10Ch] +
test eax eax +
jz loc_41BAF5  +
lea edx [eax-1] +
mov eax 1 +
test edx edx +
mov [ebx+10Ch] edx +
jnz loc_41BAD0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+arg_4] 0 +
mov eax ebx +
xor ecx ecx +
sub esi [ebx+110h] +
mov edx 0E0h +
mov [esp+14h+arg_0] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41A560  +
mov [esp+14h+var_C] 8B6h +
mov [esp+14h+var_10] offset a____Binutils_2 +
mov [esp+14h+var_14] offset aInfoNesting0 +
call sub_48C4C0  +
mov eax [ebx+10Ch] +
jmp loc_41BAB7  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] 24h +
call sub_4742F0  +
mov [esp+28h+var_28] edi +
mov ebx eax +
call sub_476140  +
mov [ebx+8] ebp +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
mov dword ptr [ebx+20h] 0 +
mov [ebx+4] eax +
mov eax [esp+28h+arg_0] +
mov [ebx+10h] eax +
mov eax [esp+28h+arg_4] +
mov [ebx+0Ch] eax +
mov eax [esi] +
mov [esi] ebx +
mov [ebx] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 3Ch +
lea ebx [esp+48h+var_2C] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] offset aLd +
call sprintf  +
lea eax [edi+38h] +
mov ecx esi +
mov [esp+48h+var_44] ebp +
mov edx ebx +
mov [esp+48h+var_48] 0 +
call sub_41BB30  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+28h+var_C] +
mov ebx [esp+28h+arg_0] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_C] +
mov edx [esp+28h+arg_4] +
mov ecx [esp+28h+arg_8] +
mov [esp+28h+var_C] 0 +
mov [esp+28h+var_28] eax +
mov eax ebx +
call sub_41A3D0  +
mov edx eax +
xor eax eax +
test edx edx +
js loc_41BC31  +
mov ecx [esp+28h+var_C] +
mov eax ebx +
call sub_41BBA0  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] eax +
lea eax [esi+0E4h] +
mov [esp+14h+var_14] eax +
call sub_42A4E0  +
test eax eax +
mov ebx eax +
jz loc_41BC90  +
mov edx [eax+10h] +
test edx edx +
jle loc_41BC90  +
mov ecx [ebx+14h] +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
jmp sub_41BBA0  +
mov [esp+14h+var_C] 740h +
mov [esp+14h+var_10] offset a____Binutils_2 +
mov [esp+14h+var_14] offset aHNullHIndex0 +
call sub_48C4C0  +
mov edx [ebx+10h] +
mov eax esi +
mov ecx [ebx+14h] +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_41BBA0  +
***
mov edx 0FFFFFFF0h +
mov eax [esp+arg_0] +
lea ebx [ecx-1] +
cmp ebx 7 +
ja loc_41BCDD  +
mov edx ds:dword_49AEC0[ebx*4] +
pop ebx  +
jmp sub_41BBA0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov eax [ebp+38h] +
test eax eax +
jz loc_41BDB3  +
mov ebx [eax+14h] +
test ebx ebx +
jz loc_41BDB3  +
mov edx [eax+10h] +
add ebp 38h +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
mov [esp+2Ch+var_10] edx +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_18] eax +
mov eax ebp +
call sub_41AC80  +
mov [esp+2Ch+var_2C] eax +
mov esi eax +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call strlen  +
lea eax [edi+eax+2] +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset aSS_5 +
mov [esp+2Ch+var_2C] eax +
mov edi eax +
call sprintf  +
mov [esp+2Ch+var_2C] esi +
call free  +
mov [esp+2Ch+var_2C] ebx +
call free  +
mov eax [esp+2Ch+var_18] +
mov edx [esp+2Ch+var_10] +
mov ecx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
mov eax ebp +
mov [esp+2Ch+var_2C] edx +
mov edx edi +
call sub_41BB30  +
xor edx edx +
test eax eax +
jz loc_41BDA9  +
mov [esp+2Ch+var_2C] edi +
call free  +
mov edx 1 +
add esp 2Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] 58Bh +
mov [esp+2Ch+var_28] offset a____Binutils_2 +
mov [esp+2Ch+var_2C] offset aInfoType_sta_5 +
call sub_48C4C0  +
mov eax [ebp+38h] +
mov ebx [eax+14h] +
jmp loc_41BD11  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ecx [esp+5Ch+arg_8] +
test ecx ecx +
jnz loc_41BED0  +
mov byte ptr [esp+5Ch+var_34] 0 +
lea edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_48] 0 +
cmp [esp+5Ch+arg_C] 1 +
mov esi edx +
mov eax [esp+5Ch+arg_10] +
sbb edi edi +
and edi 2 +
add edi 73h +
mov ebp [esi] +
add esi 4 +
lea ebx [ebp-1010101h] +
not ebp  +
and ebx ebp +
and ebx 80808080h +
jz loc_41BE1A  +
mov ebp ebx +
shr ebp 10h +
test ebx 8080h +
cmovz ebx ebp +
lea ebp [esi+2] +
cmovz esi ebp +
add bl bl +
sbb esi 3 +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_50] eax +
mov [esp+5Ch+var_58] offset aCU +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_40] ecx +
mov [esp+5Ch+var_44] edx +
call sprintf  +
mov eax [esp+5Ch+arg_0] +
mov ebx [esp+5Ch+arg_10] +
mov edi [esp+5Ch+var_48] +
mov ecx [esp+5Ch+var_40] +
mov edx [esp+5Ch+var_44] +
add eax 38h +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] edi +
call sub_41BB30  +
test eax eax +
jnz loc_41BEA0  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+5Ch+arg_0] +
mov ebx [eax+38h] +
mov [esp+5Ch+var_5C] 1 +
call sub_4742F0  +
mov [ebx+14h] eax +
mov eax [esp+5Ch+arg_0] +
mov eax [eax+38h] +
mov eax [eax+14h] +
mov byte ptr [eax] 0 +
add esp 5Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+5Ch+arg_10] +
mov edx [esp+5Ch+arg_4] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] 0 +
call sub_41A3D0  +
test eax eax +
js loc_41BE94  +
lea edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] edx +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_58] offset aLd_0 +
mov [esp+5Ch+var_44] edx +
mov [esp+5Ch+var_40] eax +
call sprintf  +
mov ecx [esp+5Ch+var_40] +
mov [esp+5Ch+var_48] 1 +
mov edx [esp+5Ch+var_44] +
jmp loc_41BE04  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_18] +
mov edi [esp+2Ch+arg_14] +
mov ebx [esp+2Ch+arg_0] +
test edx edx +
setnz [esp+2Ch+var_D]  +
test edi edi +
jnz loc_41BFE8  +
xor ebp ebp +
xor esi esi +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
call sub_41BDE0  +
xor edx edx +
test eax eax +
jz loc_41BFDE  +
test edi edi +
jz loc_41BFCB  +
cmp [esp+2Ch+var_D] 0 +
jz loc_41C008  +
mov eax [ebx+38h] +
mov eax [eax+8] +
test eax eax +
jle loc_41C040  +
mov [esp+2Ch+var_2C] 14h +
call sub_4742F0  +
mov edi eax +
mov eax [ebx+38h] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aLd_1 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] eax +
call sprintf  +
mov eax [ebx+38h] +
mov [eax+20h] edi +
test esi esi +
mov edx 1 +
jz loc_41BFDE  +
mov eax [ebx+38h] +
mov dword ptr [eax+10h] 1 +
add esp 2Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+2Ch+var_D] 0 +
jnz loc_41BF52  +
mov eax [ebx+38h] +
mov esi [eax+10h] +
lea eax [ebx+38h] +
call sub_41AC80  +
mov ebp eax +
jmp loc_41BF56  +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
add eax 3 +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] offset aS_15 +
mov [esp+2Ch+var_2C] eax +
mov edi eax +
call sprintf  +
mov [esp+2Ch+var_2C] ebp +
call free  +
jmp loc_41BFC5  +
mov [esp+2Ch+var_24] 5BDh +
mov [esp+2Ch+var_28] offset a____Binutils_2 +
mov [esp+2Ch+var_2C] offset aInfoType_sta_8 +
call sub_48C4C0  +
jmp loc_41BF9D  +
***
jmp sub_41C070  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov eax [eax+38h] +
mov [esp+40h+var_1C] edx +
mov edi [esp+40h+arg_0] +
mov [esp+40h+var_20] ecx +
test eax eax +
jz loc_41C280  +
test edi edi +
mov ebx [eax+8] +
jz loc_41C1B1  +
test ebx ebx +
jle loc_41C1B1  +
mov eax [esp+40h+arg_4] +
mov ebp [eax] +
cmp ebx ebp +
jnb loc_41C153  +
mov eax [edi] +
mov ebp [eax+ebx*4] +
test ebp ebp +
jz loc_41C0C8  +
mov eax [esi+38h] +
mov eax [eax+10h] +
test eax eax +
jz loc_41C250  +
mov ebp [esi+3Ch] +
lea eax [ebp+1] +
mov [esi+3Ch] eax +
lea eax [esi+38h] +
mov [esp+40h+var_14] eax +
call sub_41AC80  +
mov [esp+40h+var_40] eax +
mov esi eax +
call strlen  +
add eax 14h +
mov [esp+40h+var_40] eax +
call sub_4742F0  +
mov edx [esp+40h+var_1C] +
mov [esp+40h+var_30] esi +
mov [esp+40h+var_38] ebp +
mov [esp+40h+var_3C] offset aLdCS +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_18] eax +
call sprintf  +
mov [esp+40h+var_40] esi +
call free  +
mov eax [edi] +
mov ecx ebp +
mov edi [esp+40h+var_20] +
mov edx [esp+40h+var_18] +
mov [eax+ebx*4] ebp +
mov eax [esp+40h+var_14] +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] 1 +
call sub_41BB30  +
test eax eax +
jnz loc_41C230  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jnz loc_41C165  +
cmp ebx 9 +
mov bp 0Ah +
mov eax 28h +
jbe loc_41C172  +
add ebp ebp +
cmp ebx ebp +
jnb loc_41C165  +
lea eax ds:0[ebp*4] +
mov edx [edi] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call sub_474370  +
mov ecx [esp+40h+arg_4] +
mov edx ebp +
mov ecx [ecx] +
mov [edi] eax +
mov [esp+40h+var_3C] 0 +
sub edx ecx +
shl edx 2 +
lea eax [eax+ecx*4] +
mov [esp+40h+var_38] edx +
mov [esp+40h+var_40] eax +
call memset  +
mov eax [esp+40h+arg_4] +
mov [eax] ebp +
jmp loc_41C0B1  +
add esi 38h +
mov edi [eax+10h] +
mov eax esi +
call sub_41AC80  +
mov [esp+40h+var_40] eax +
mov ebp eax +
call strlen  +
add eax 2 +
mov [esp+40h+var_40] eax +
call sub_4742F0  +
mov [esp+40h+var_34] ebp +
mov [esp+40h+var_3C] offset aCS +
mov ebx eax +
mov eax [esp+40h+var_1C] +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_38] eax +
call sprintf  +
mov [esp+40h+var_40] ebp +
call free  +
mov eax [esp+40h+var_20] +
xor ecx ecx +
mov [esp+40h+var_40] edi +
mov edx ebx +
mov [esp+40h+var_3C] eax +
mov eax esi +
call sub_41BB30  +
test eax eax +
jz loc_41C149  +
mov [esp+40h+var_40] ebx +
call free  +
mov eax 1 +
jmp loc_41C14B  +
mov eax [esp+40h+var_18] +
mov [esp+40h+var_40] eax +
call free  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esi+38h] +
call sub_41AC80  +
mov [esp+40h+var_40] eax +
call free  +
mov ecx [esp+40h+var_20] +
mov edx ebp +
mov eax esi +
call sub_41BBA0  +
test eax eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_38] 355h +
mov [esp+40h+var_3C] offset a____Binutils_2 +
mov [esp+40h+var_40] offset aInfoType_sta_9 +
call sub_48C4C0  +
mov eax [esi+38h] +
jmp loc_41C090  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+38h] +
mov ecx [edx+0Ch] +
mov edx 42h +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
call sub_41C070  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+38h] +
mov ecx [edx+0Ch] +
mov edx 6Bh +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
call sub_41C070  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov ecx 4 +
mov eax [esp+1Ch+arg_0] +
lea edx [eax+0D8h] +
mov [esp+1Ch+var_18] edx +
lea edx [eax+0D4h] +
mov [esp+1Ch+var_1C] edx +
mov edx 26h +
call sub_41C070  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
test eax eax +
lea edx [edi+38h] +
mov [esp+2Ch+var_10] eax +
mov [esp+2Ch+var_14] edx +
jg loc_41C37B  +
jmp loc_41C3EF  +
call sub_41AC80  +
add ebx 1 +
mov [esp+2Ch+var_2C] eax +
call free  +
cmp ebx [esp+2Ch+var_10] +
jz loc_41C3EF  +
mov eax [edi+38h] +
mov eax [eax+10h] +
test eax eax +
mov eax [esp+2Ch+var_14] +
jz loc_41C365  +
call sub_41AC80  +
mov [esp+2Ch+var_2C] eax +
mov ebp eax +
call strlen  +
add eax 3 +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] offset aTS +
mov [esp+2Ch+var_2C] eax +
mov esi eax +
call sprintf  +
mov [esp+2Ch+var_2C] ebp +
call free  +
xor ecx ecx +
mov edx 80h +
mov [esp+2Ch+var_28] esi +
mov eax edi +
mov [esp+2Ch+var_2C] 0 +
call sub_41A560  +
test eax eax +
jz loc_41C418  +
mov [esp+2Ch+var_2C] esi +
add ebx 1 +
call free  +
cmp ebx [esp+2Ch+var_10] +
jnz loc_41C37B  +
lea eax [edi+0D0h] +
xor ecx ecx +
mov [esp+2Ch+arg_4] eax +
lea eax [edi+0CCh] +
mov edx 66h +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_41C070  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov ecx 4 +
mov eax [esp+1Ch+arg_0] +
lea edx [eax+0C8h] +
mov [esp+1Ch+var_18] edx +
lea edx [eax+0C4h] +
mov [esp+1Ch+var_1C] edx +
mov edx 2Ah +
call sub_41C070  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [edi+38h] +
lea ebx [edi+38h] +
mov ebp [eax+10h] +
mov eax ebx +
call sub_41AC80  +
mov edx 1 +
test ebp ebp +
mov esi eax +
jnz loc_41C493  +
mov eax [edi+38h] +
xor edx edx +
mov eax [eax+10h] +
test eax eax +
setnz dl  +
mov eax ebx +
mov [esp+2Ch+var_10] edx +
call sub_41AC80  +
mov [esp+2Ch+var_2C] esi +
mov edi eax +
call strlen  +
mov [esp+2Ch+var_2C] edi +
mov ebp eax +
call strlen  +
lea eax [ebp+eax+3] +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a@SS +
mov [esp+2Ch+var_2C] eax +
mov ebp eax +
call sprintf  +
mov [esp+2Ch+var_2C] edi +
call free  +
mov [esp+2Ch+var_2C] esi +
call free  +
mov edx [esp+2Ch+var_10] +
xor ecx ecx +
mov [esp+2Ch+var_28] 0 +
mov eax ebx +
mov [esp+2Ch+var_2C] edx +
mov edx ebp +
call sub_41BB30  +
xor edx edx +
test eax eax +
jz loc_41C515  +
mov [esp+2Ch+var_2C] ebp +
call free  +
mov edx 1 +
add esp 2Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov eax [edx+38h] +
lea edi [edx+38h] +
mov [esp+1Ch+var_10] edx +
mov ebp [eax+10h] +
mov eax edi +
call sub_41AC80  +
mov [esp+1Ch+var_1C] eax +
mov esi eax +
call strlen  +
add eax 1Eh +
mov [esp+1Ch+var_1C] eax +
call sub_4742F0  +
mov edx [esp+1Ch+var_10] +
mov ebx eax +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jnz loc_41C5C6  +
mov byte ptr [ebx] 0 +
xor ecx ecx +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] ecx +
call strlen  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] offset aSS_6 +
add eax ebx +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
mov [esp+1Ch+var_1C] esi +
call free  +
mov ecx [esp+1Ch+var_10] +
mov edx ebx +
mov [esp+1Ch+var_18] 0 +
mov eax edi +
mov [esp+1Ch+var_1C] ebp +
call sub_41BB30  +
xor edx edx +
test eax eax +
jz loc_41C5BC  +
mov [esp+1Ch+var_1C] ebx +
call free  +
mov edx 1 +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [edx+3Ch] +
mov ebp 1 +
lea eax [ecx+1] +
mov [edx+3Ch] eax +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] offset aLd@s +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] ecx +
call sprintf  +
mov ecx [esp+1Ch+var_10] +
jmp loc_41C567  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_0] +
mov eax [esi+38h] +
mov ebx [eax+10h] +
lea eax [esi+38h] +
mov [esp+3Ch+var_1C] eax +
call sub_41AC80  +
test ebx ebx +
mov ebp eax +
mov eax [esi+38h] +
jz loc_41C710  +
mov [esp+3Ch+var_18] 1 +
mov eax [eax+0Ch] +
mov [esp+3Ch+var_10] eax +
mov eax [esp+3Ch+var_1C] +
call sub_41AC80  +
mov [esp+3Ch+var_3C] ebp +
mov edi eax +
call strlen  +
mov [esp+3Ch+var_3C] edi +
mov ebx eax +
call strlen  +
lea eax [ebx+eax+64h] +
mov [esp+3Ch+var_3C] eax +
call sub_4742F0  +
mov ebx eax +
mov eax [esp+3Ch+arg_C] +
test eax eax +
jnz loc_41C723  +
mov byte ptr [ebx] 0 +
xor ecx ecx +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_14] ecx +
call strlen  +
mov edx [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_28] edi +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_30] esi +
add eax ebx +
mov [esp+3Ch+var_38] offset aArSLdLdS +
mov [esp+3Ch+var_3C] eax +
call sprintf  +
mov [esp+3Ch+var_3C] ebp +
call free  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov edi [esp+3Ch+arg_8] +
xor eax eax +
cmp [esp+3Ch+arg_4] edi +
mov ecx [esp+3Ch+var_14] +
jg loc_41C6D9  +
mov eax edi +
sub eax [esp+3Ch+arg_4] +
add eax 1 +
imul eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_18] +
mov edx ebx +
mov [esp+3Ch+var_3C] eax +
mov eax [esp+3Ch+var_1C] +
call sub_41BB30  +
xor edx edx +
test eax eax +
jz loc_41C702  +
mov [esp+3Ch+var_3C] ebx +
call free  +
mov edx 1 +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [eax+10h] +
xor edx edx +
test ecx ecx +
setnz dl  +
mov [esp+3Ch+var_18] edx +
jmp loc_41C632  +
mov ecx [esi+3Ch] +
lea eax [ecx+1] +
mov [esi+3Ch] eax +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] offset aLd@s +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_14] ecx +
call sprintf  +
mov ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_18] 1 +
jmp loc_41C675  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [edi+38h] +
add edi 38h +
mov edx [eax+0Ch] +
mov ebp [eax+10h] +
mov eax edi +
mov [esp+2Ch+var_10] edx +
call sub_41AC80  +
mov [esp+2Ch+var_2C] eax +
mov ebx eax +
call strlen  +
add eax 64h +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] offset aRSLdLd +
mov esi eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] eax +
call sprintf  +
mov [esp+2Ch+var_2C] ebx +
call free  +
mov edx [esp+2Ch+var_10] +
xor ecx ecx +
mov [esp+2Ch+var_2C] ebp +
mov eax edi +
mov [esp+2Ch+var_28] edx +
mov edx esi +
call sub_41BB30  +
xor edx edx +
test eax eax +
jz loc_41C7EE  +
mov [esp+2Ch+var_2C] esi +
call free  +
mov edx 1 +
add esp 2Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov esi [esp+6Ch+arg_0] +
lea ebp [esp+6Ch+var_3E] +
mov edi [esp+6Ch+arg_4] +
mov ebx [esi+3Ch] +
lea eax [ebx+1] +
mov [esi+3Ch] eax +
mov [esp+6Ch+var_5C] edi +
add edi edi +
mov [esp+6Ch+var_60] ebx +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_6C] ebp +
mov [esp+6Ch+var_68] offset aLdRLdU0 +
call sprintf  +
lea eax [esi+38h] +
mov ecx ebx +
mov [esp+6Ch+var_68] edi +
mov edx ebp +
mov [esp+6Ch+var_6C] 1 +
call sub_41BB30  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_C] +
test ebx ebx +
jz loc_41C9C0  +
mov eax [esp+2Ch+arg_4] +
test eax eax +
jz loc_41CA80  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
lea ebp [eax+0Ah] +
mov eax [ebx] +
test eax eax +
jz loc_41C8B5  +
mov edi ebx +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] eax +
add edi 4 +
call strlen  +
lea ebp [ebp+eax+14h] +
mov eax [edi] +
test eax eax +
jnz loc_41C8A0  +
mov [esp+2Ch+var_2C] ebp +
call sub_4742F0  +
mov edi eax +
mov eax [esp+2Ch+arg_4] +
test eax eax +
jz loc_41CA36  +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+arg_0] +
mov eax [eax+3Ch] +
mov edx eax +
mov [esp+2Ch+var_10] eax +
add eax 1 +
mov [ecx+3Ch] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] offset aSTLdE +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_24] eax +
call sprintf  +
mov ebp [ebx] +
test ebp ebp +
jz loc_41C943  +
mov [esp+2Ch+var_14] edi +
mov eax [esp+2Ch+var_14] +
add ebx 4 +
add esi 4 +
mov edi [esi-4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_20] edi +
add eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aSLd +
mov [esp+2Ch+var_2C] eax +
call sprintf  +
mov ebp [ebx] +
test ebp ebp +
jnz loc_41C908  +
mov edi [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov ecx [esp+2Ch+arg_4] +
mov edx 3Bh +
test ecx ecx +
mov [edi+eax] dx +
jz loc_41CA50  +
mov eax [esp+2Ch+arg_0] +
xor ecx ecx +
mov edx 80h +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] 0 +
call sub_41A560  +
test eax eax +
jnz loc_41C990  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+2Ch+var_10] +
mov ecx 4 +
mov eax [esp+2Ch+arg_0] +
call sub_41BBA0  +
test eax eax +
jz loc_41C97F  +
mov [esp+2Ch+var_2C] edi +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_4] +
test eax eax +
jz loc_41CA8A  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
add eax 0Ah +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_28] offset aXeS +
mov ebx eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sprintf  +
mov eax [esp+2Ch+arg_0] +
xor ecx ecx +
mov [esp+2Ch+var_28] 4 +
mov edx ebx +
mov [esp+2Ch+var_2C] 0 +
add eax 38h +
call sub_41BB30  +
test eax eax +
jz loc_41C97F  +
mov [esp+2Ch+var_2C] ebx +
call free  +
mov eax 1 +
jmp loc_41C981  +
mov ebp 65h +
mov [edi] bp +
mov [esp+2Ch+var_10] 0 +
jmp loc_41C8FE  +
mov eax [esp+2Ch+arg_0] +
xor ecx ecx +
mov edx edi +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] 0 +
add eax 38h +
call sub_41BB30  +
test eax eax +
jnz loc_41C9A6  +
jmp loc_41C97F  +
mov ebp 0Ah +
jmp loc_41C892  +
mov [esp+2Ch+var_24] 317h +
mov [esp+2Ch+var_28] offset a____Binutils_2 +
mov [esp+2Ch+var_2C] offset aTagNull +
call sub_48C4C0  +
jmp loc_41C9CC  +
***
push ebx  +
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
mov edx [ebx+40h] +
test edx edx +
jnz loc_41CB78  +
mov esi [ebx+3Ch] +
lea edi [esp+40h+var_28] +
lea eax [esi+1] +
mov [ebx+3Ch] eax +
mov [esp+40h+var_34] esi +
mov [esp+40h+var_38] esi +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] offset aLdLd +
call sprintf  +
lea eax [ebx+38h] +
mov ecx esi +
mov [esp+40h+var_3C] 0 +
mov edx edi +
mov [esp+40h+var_40] 0 +
call sub_41BB30  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ebx +
xor ecx ecx +
call sub_41BBA0  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
test edx edx +
jnz loc_41CBB3  +
mov [esp+2Ch+var_2C] edi +
call sub_41CB20  +
test eax eax +
jz loc_41CD40  +
mov eax [edi+38h] +
mov ebx [eax+10h] +
lea eax [edi+38h] +
mov [esp+2Ch+var_1C] eax +
call sub_41AC80  +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
test eax eax +
js loc_41CD50  +
jnz loc_41CD60  +
mov eax [esp+2Ch+arg_C] +
xor esi esi +
test eax eax +
jz loc_41CDB5  +
test ebx ebx +
mov [esp+2Ch+var_14] 1 +
jnz loc_41CC06  +
mov eax [edi+38h] +
mov ebp [eax+10h] +
xor eax eax +
test ebp ebp +
setnz al  +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_1C] +
call sub_41AC80  +
mov edi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_2C] edi +
mov ebx eax +
call strlen  +
mov edi [esp+2Ch+arg_8] +
test edi edi +
lea ebx [ebx+eax+0Ah] +
jz loc_41CDFC  +
mov eax [esp+2Ch+arg_8] +
mov ebp esi +
lea edi [esi+eax*4] +
mov eax [ebp+0] +
add ebp 4 +
mov [esp+2Ch+var_2C] eax +
call strlen  +
add ebx eax +
cmp ebp edi +
jnz loc_41CC44  +
mov [esp+2Ch+var_2C] ebx +
call sub_4742F0  +
mov edi [esp+2Ch+var_10] +
mov ebp [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] offset aSS_7 +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] ebp +
mov ebx eax +
mov [esp+2Ch+var_2C] ebx +
call sprintf  +
mov [esp+2Ch+var_2C] ebp +
call free  +
mov [esp+2Ch+var_2C] edi +
xor edi edi +
call free  +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
mov ebp [esi+edi*4] +
mov ecx 2Ch +
add edi 1 +
mov [ebx+eax] cx +
lea eax [ebx+eax+1] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call strcpy  +
mov [esp+2Ch+var_2C] ebp +
call free  +
cmp edi [esp+2Ch+arg_8] +
jnz loc_41CC94  +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
mov edx 3Bh +
test esi esi +
mov [ebx+eax] dx +
jz loc_41CCE6  +
mov [esp+2Ch+var_2C] esi +
call free  +
mov eax [esp+2Ch+var_14] +
xor ecx ecx +
mov edx ebx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_1C] +
call sub_41BB30  +
test eax eax +
jz loc_41CD40  +
mov [esp+2Ch+var_2C] ebx +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-10h+arg_48] +
test eax eax +
jnz loc_41CBE9  +
mov [esp+0] edi +
call sub_41CB20  +
test eax eax +
jnz loc_41CE42  +
lea esi [esi+0] +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
mov [esp+2Ch+arg_8] 0 +
jmp loc_41CBE9  +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_14] eax +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] eax +
call sub_4742F0  +
mov esi eax +
mov eax [esp+2Ch+arg_8] +
lea ebp [eax-1] +
jmp loc_41CDAA  +
mov eax [edi+38h] +
xor ebx ebx +
mov eax [eax+10h] +
test eax eax +
setnz bl  +
mov eax [esp+2Ch+var_1C] +
call sub_41AC80  +
mov [esi+ebp*4] eax +
sub ebp 1 +
cmp ebp 0FFFFFFFFh +
jz loc_41CD20  +
test ebx ebx +
jz loc_41CD85  +
mov ebx 1 +
jmp loc_41CD92  +
mov [esp+2Ch+var_2C] 4 +
call sub_4742F0  +
mov [esp+2Ch+var_2C] edi +
mov esi eax +
call sub_41CB20  +
test eax eax +
jz loc_41CD40  +
test ebx ebx +
jnz loc_41CE3B  +
mov eax [edi+38h] +
xor ebx ebx +
mov eax [eax+10h] +
test eax eax +
setnz bl  +
mov eax [esp+2Ch+var_1C] +
call sub_41AC80  +
mov [esp+2Ch+arg_8] 1 +
mov [esi] eax +
jmp loc_41CBE9  +
mov [esp+2Ch+var_2C] ebx +
call sub_4742F0  +
mov edi [esp+2Ch+var_10] +
mov ebp [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] offset aSS_7 +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] ebp +
mov ebx eax +
mov [esp+2Ch+var_2C] ebx +
call sprintf  +
mov [esp+2Ch+var_2C] ebp +
call free  +
mov [esp+2Ch+var_2C] edi +
call free  +
jmp loc_41CCC9  +
mov ebx 1 +
jmp loc_41CDE4  +
test ebx ebx +
jnz loc_41CE74  +
mov eax [edi+38h] +
xor ebx ebx +
mov eax [eax+10h] +
test eax eax +
setnz bl  +
mov eax [esp-10h+arg_18] +
lea ebp [esi+eax-4] +
mov eax [esp-10h+arg_C] +
call sub_41AC80  +
mov [ebp+0] eax +
mov eax [esp-10h+arg_14] +
mov [esp-10h+arg_44] eax +
jmp loc_41CBE9  +
mov ebx 1 +
jmp loc_41CE53  +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_4] +
mov esi [esp+9Ch+arg_0] +
test ebx ebx +
jz loc_41CFBF  +
cmp ebx 8 +
jnz loc_41CFB6  +
mov ecx [esp+9Ch+arg_8] +
lea edx [esi+64h] +
lea eax [esi+44h] +
test ecx ecx +
cmovz eax edx +
lea eax [eax+ebx*4-4] +
mov edx [eax] +
test edx edx +
jnz loc_41D050  +
mov edi [esi+3Ch] +
lea ebp [esp+9Ch+var_70] +
lea edx [edi+1] +
mov [esi+3Ch] edx +
mov [eax] edi +
mov [esp+9Ch+var_90] edi +
mov [esp+9Ch+var_94] edi +
mov [esp+9Ch+var_98] offset aLdRLd +
mov [esp+9Ch+var_9C] ebp +
call sprintf  +
mov eax [esp+9Ch+arg_8] +
test eax eax +
jnz loc_41D064  +
cmp ebx 4 +
jbe loc_41CFE0  +
cmp ebx 8 +
jnz loc_41D12B  +
mov edx ebp +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CF13  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov dword ptr [edx] 30303130h +
mov dword ptr [edx+4] 30303030h +
mov dword ptr [edx+8] 30303030h +
mov dword ptr [edx+0Ch] 30303030h +
mov dword ptr [edx+10h] 30303030h +
mov dword ptr [edx+14h] 3B303030h +
mov dword ptr [edx+18h] 37373730h +
mov dword ptr [edx+1Ch] 37373737h +
mov dword ptr [edx+20h] 37373737h +
mov dword ptr [edx+24h] 37373737h +
mov dword ptr [edx+28h] 37373737h +
mov dword ptr [edx+2Ch] 3B3737h +
mov [esp+9Ch+var_98] ebx +
lea eax [esi+38h] +
mov ecx edi +
mov [esp+9Ch+var_9C] 1 +
mov edx ebp +
call sub_41BB30  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 4 +
jbe loc_41CEA9  +
mov [esp+9Ch+var_98] ebx +
mov [esp+9Ch+var_9C] offset aStab_int_typeB +
call sub_41D6C0  +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx ds:0FFFFFFFFh[ebx*8] +
mov edx ebp +
mov [esp+9Ch+var_80] 1 +
shl [esp+9Ch+var_80] cl +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CFF5  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
mov ecx [esp+9Ch+var_80] +
add al al +
sbb edx 3 +
mov [esp+9Ch+var_98] offset aLdLd_0 +
mov [esp+9Ch+var_9C] edx +
mov eax ecx +
sub eax 1 +
mov [esp+9Ch+var_90] eax +
mov eax ecx +
neg eax  +
mov [esp+9Ch+var_94] eax +
call sprintf  +
jmp loc_41CF94  +
mov ecx ebx +
mov eax esi +
call sub_41BBA0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ebp +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D066  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 3B30h +
sub edx ebp +
cmp ebx 3 +
lea eax [ebp+edx+0] +
mov [eax] cx +
mov byte ptr [eax+2] 0 +
jbe loc_41D0F0  +
cmp ebx 4 +
jz loc_41D11E  +
cmp ebx 8 +
jnz loc_41D12B  +
lea eax [ebp+edx+2] +
mov dword ptr [eax] 37373130h +
mov dword ptr [eax+4] 37373737h +
mov dword ptr [eax+8] 37373737h +
mov dword ptr [eax+0Ch] 37373737h +
mov dword ptr [eax+10h] 37373737h +
mov dword ptr [eax+14h] 3B373737h +
mov byte ptr [eax+18h] 0 +
jmp loc_41CF94  +
lea ecx ds:0[ebx*8] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+9Ch+var_94] eax +
lea eax [ebp+edx+2] +
mov [esp+9Ch+var_98] offset aLd_2 +
mov [esp+9Ch+var_9C] eax +
call sprintf  +
jmp loc_41CF94  +
mov dword ptr [ebp+edx+2] 3B312Dh +
jmp loc_41CF94  +
call abort  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov esi [esp+118h+var_94] +
mov ebx [esp+118h+var_98] +
lea edi [esi-1] +
cmp edi 0Fh +
ja loc_41D15C  +
mov edx [ebx+esi*4+80h] +
test edx edx +
jnz loc_41D200  +
mov [esp+118h+var_110] 0 +
mov [esp+118h+var_114] 4 +
mov [esp+118h+var_118] ebx +
call sub_41CE80  +
xor edx edx +
test eax eax +
jnz loc_41D184  +
add esp 6Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [ebx+38h] +
mov eax ebp +
call sub_41AC80  +
mov ecx [ebx+3Ch] +
cmp edi 0Fh +
mov edx eax +
lea eax [ecx+1] +
mov [ebx+3Ch] eax +
ja loc_41D1A5  +
mov [ebx+edi*4+84h] ecx +
lea ebx [esp+118h+var_EA] +
mov [esp+118h+var_110] ecx +
mov [esp+118h+var_108] esi +
mov [esp+118h+var_10C] edx +
mov [esp+118h+var_118] ebx +
mov [esp+118h+var_114] offset aLdRSU0 +
mov [esp+118h+var_100] ecx +
mov [esp+118h+var_FC] edx +
call sprintf  +
mov edx [esp+118h+var_FC] +
mov [esp+118h+var_118] edx +
call free  +
mov ecx [esp+118h+var_100] +
mov edx ebx +
mov [esp+118h+var_114] esi +
mov eax ebp +
mov [esp+118h+var_118] 1 +
call sub_41BB30  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
mov edx eax +
mov eax edx +
retn   +
mov ecx esi +
mov eax ebx +
call sub_41BBA0  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
mov edx eax +
mov eax edx +
retn   +
***
sub esp 134h +
mov ebx [esp+134h+arg_0] +
mov [esp+134h+var_134] 1F4h +
mov [esp+134h+var_118] 0 +
mov [esp+134h+var_114] 1F4h +
mov [esp+134h+var_120] ebx +
call sub_4742F0  +
mov [esp+134h+var_12C] 18h +
mov [esp+134h+var_130] offset sub_41AC10 +
mov [esp+134h+var_110] 0 +
mov [esp+134h+var_10C] 0 +
mov [esp+134h+var_108] 1 +
mov [esp+134h+var_11C] eax +
lea eax [esp+134h+var_104] +
mov [esp+134h+var_134] eax +
call sub_42A280  +
test eax eax +
jz loc_41D2AE  +
lea eax [esp+134h+var_3C] +
mov [esp+134h+var_12C] 18h +
mov [esp+134h+var_130] offset sub_41AC10 +
mov [esp+134h+var_134] eax +
call sub_42A280  +
test eax eax +
jnz loc_41D2D6  +
call sub_420A00  +
mov [esp+134h+var_134] eax +
call sub_420A10  +
mov [esp+134h+var_134] offset aBfd_hash_table +
mov [esp+134h+var_130] eax +
call sub_41D6C0  +
xor eax eax +
add esp 134h +
pop ebx  +
pop edi  +
retn   +
lea edx [esp+134h+var_E0] +
xor eax eax +
mov edi edx +
mov ecx 29h +
stos   +
xor edx edx +
mov [esp+134h+var_130] 0 +
lea eax [esp+134h+var_120] +
mov [esp+134h+var_134] 0 +
mov [esp+134h+var_E8] 0 +
mov [esp+134h+var_E4] 1 +
mov [esp+134h+var_20] 0FFFFFFFFh +
mov [esp+134h+var_1C] 0FFFFFFFFh +
mov [esp+134h+var_18] 0 +
mov [esp+134h+var_14] 0 +
mov [esp+134h+var_10] 0 +
mov [esp+134h+var_C] 0FFFFFFFFh +
call sub_41A560  +
test eax eax +
jnz loc_41D360  +
add esp 134h +
xor eax eax +
pop ebx  +
pop edi  +
retn   +
mov eax [esp+134h+var_118] +
xor ecx ecx +
mov edx 64h +
mov [esp+134h+var_20] eax +
mov eax [ebx] +
mov [esp+134h+var_134] 0 +
mov [esp+134h+var_130] eax +
lea eax [esp+134h+var_120] +
call sub_41A560  +
test eax eax +
jz loc_41D355  +
lea eax [esp+134h+var_120] +
mov [esp+134h+var_12C] eax +
mov eax [esp+134h+arg_4] +
mov [esp+134h+var_130] offset off_49AEE0 +
mov [esp+134h+var_134] eax +
call sub_4092F0  +
test eax eax +
jz loc_41D355  +
cmp [esp+134h+var_C] 0FFFFFFFFh +
jz loc_41D3D5  +
mov [esp+134h+var_12C] 202h +
mov [esp+134h+var_130] offset a____Binutils_2 +
mov [esp+134h+var_134] offset aInfo_pending_l +
call sub_48C4C0  +
mov eax [esp+134h+var_18] +
xor ecx ecx +
mov edx 64h +
mov [esp+134h+var_130] 0 +
mov [esp+134h+var_134] eax +
lea eax [esp+134h+var_120] +
call sub_41A560  +
test eax eax +
jz loc_41D355  +
mov edi [esp+134h+var_11C] +
mov eax [ebx+4] +
lea edx [edi+8] +
mov eax [eax+30h] +
mov [esp+134h+var_130] edx +
mov edx [esp+134h+var_108] +
mov [esp+134h+var_134] edx +
call eax  +
mov edx [esp+134h+var_11C] +
mov eax [esp+134h+arg_8] +
mov [eax] edx +
mov edx [esp+134h+var_118] +
mov eax [esp+134h+arg_C] +
mov [eax] edx +
mov eax [esp+134h+var_108] +
mov edx [esp+134h+arg_14] +
mov [edx] eax +
mov [esp+134h+var_134] eax +
call sub_4742F0  +
mov ebx [esp+134h+var_110] +
mov edx [esp+134h+arg_10] +
test ebx ebx +
mov [edx] eax +
lea edx [eax+1] +
mov byte ptr [eax] 0 +
jz loc_41D479  +
nop   +
mov eax [ebx+4] +
mov [esp+134h+var_134] edx +
mov [esp+134h+var_130] eax +
call sub_475790  +
mov ebx [ebx+0Ch] +
test ebx ebx +
lea edx [eax+1] +
jnz loc_41D460  +
mov eax 1 +
jmp loc_41D2CD  +
***
mov esi eax +
push ebx  +
sub esp 10h +
mov [esp+14h+var_10] 2Fh +
mov [esp+14h+var_14] eax +
call strrchr  +
mov [esp+14h+var_10] 5Ch +
mov [esp+14h+var_14] esi +
mov edi eax +
call strrchr  +
test edi edi +
jz loc_41D514  +
cmp eax edi +
ja loc_41D510  +
sub edi esi +
lea eax [edi+0Bh] +
mov [esp+14h+var_14] eax +
call sub_4742F0  +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
mov ebx eax +
call memcpy  +
cmp edi 2 +
lea eax [edi+1] +
jz loc_41D537  +
mov byte ptr [ebx+edi] 2Fh +
add eax ebx +
mov dword ptr [eax] 58587473h +
mov dword ptr [eax+4] 58585858h +
mov byte ptr [eax+8] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_41D4C2  +
test eax eax +
mov edi eax +
jnz loc_41D4C2  +
cmp byte ptr [esi] 0 +
jz loc_41D525  +
cmp byte ptr [esi+1] 3Ah +
jz loc_41D550  +
mov [esp+14h+var_14] 9 +
call sub_4742F0  +
mov ebx eax +
xor eax eax +
jmp loc_41D4ED  +
cmp byte ptr [ebx+1] 3Ah +
mov eax 3 +
jnz loc_41D4E9  +
mov byte ptr [ebx+2] 2Eh +
mov al 4 +
mov edi 3 +
jmp loc_41D4E9  +
mov edi esi +
add edi 1 +
jz loc_41D525  +
jmp loc_41D4C2  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
call sub_420A00  +
mov [esp+24h+var_24] eax +
call sub_420A10  +
mov esi eax +
mov eax ds:_iob +
lea edx [eax+20h] +
mov [esp+24h+var_24] edx +
call fflush  +
test ebx ebx +
jz loc_41D5C0  +
mov eax ds:dword_4C1A10 +
mov [esp+24h+var_14] esi +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_20] offset aSSS_1 +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:dword_4C1A10 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_20] offset aSS_2 +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
sub esp 14h +
mov eax ds:_iob +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
add eax 20h +
mov [esp+14h+var_14] eax +
call fflush  +
mov eax ds:dword_4C1A10 +
mov [esp+14h+var_10] offset aS_1 +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
mov eax ds:_iob +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
add eax 40h +
mov [esp+14h+var_14] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+14h+arg_0] 0Ah +
add eax 40h +
mov [esp+14h+arg_4] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp putc  +
***
sub esp 1Ch +
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_41D610  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
mov eax ds:dword_4C1A10 +
mov [esp+18h+var_14] offset aSMatchingForma +
mov [esp+18h+var_10] eax +
jmp loc_41D75F  +
add ebx 4 +
mov [esp+18h+var_10] eax +
mov [esp+18h+var_14] offset aS_2 +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax [ebx] +
test eax eax +
jnz loc_41D750  +
mov eax ds:_iob +
mov [esp+18h+var_18] 0Ah +
add eax 40h +
mov [esp+18h+var_14] eax +
call fputc  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
test eax eax +
jz loc_41D813  +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset aSSupportedTarg +
mov [esp+10h+var_10] esi +
call fprintf  +
call sub_42B080  +
mov edx [eax] +
mov edi eax +
lea ebx [eax+4] +
test edx edx +
jz loc_41D7F4  +
mov [esp+10h+var_8] edx +
add ebx 4 +
mov [esp+10h+var_C] offset aS_2 +
mov [esp+10h+var_10] esi +
call fprintf  +
mov edx [ebx-4] +
test edx edx +
jnz loc_41D7D6  +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 0Ah +
call fputc  +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_8] 12h +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset aSupportedTarge +
call fwrite  +
jmp loc_41D7C6  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
test eax eax +
jz loc_41D8B1  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aSSupportedArch +
mov [esp] esi +
call fprintf  +
call sub_423600  +
mov edx [eax] +
mov edi eax +
mov ebx eax +
test edx edx +
jz loc_41D892  +
mov [esp+8] edx +
add ebx 4 +
mov dword ptr [esp+4] offset aS_2 +
mov [esp] esi +
call fprintf  +
mov edx [ebx] +
test edx edx +
jnz loc_41D875  +
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
mov [esp+20h] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aSupportedArchi +
call fwrite  +
jmp loc_41D866  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+4Ch+var_48] offset aGnuBinutils2_1 +
mov [esp+4Ch+var_4C] offset aBfdHeaderFileV +
call printf  +
mov [esp+4Ch+var_4C] 0 +
call sub_488080  +
mov edi eax +
mov eax off_492AFC +
mov esi [eax] +
test esi esi +
jz loc_41DA74  +
mov [esp+4Ch+var_2C] 4 +
mov [esp+4Ch+var_30] 1 +
mov eax [esi] +
mov [esp+4Ch+var_4C] edi +
mov [esp+4Ch+var_48] eax +
call sub_425450  +
mov edx offset aBigEndian +
mov ebx eax +
mov eax [esi+8] +
test eax eax +
jz loc_41D954  +
cmp eax 1 +
mov edx offset aEndiannessUnkn +
mov eax offset aLittleEndian +
cmovz edx eax +
mov ecx [esi+0Ch] +
mov eax offset aBigEndian +
test ecx ecx +
jz loc_41D970  +
cmp ecx 1 +
mov eax offset aEndiannessUnkn +
mov ecx offset aLittleEndian +
cmovz eax ecx +
mov ecx [esi] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_4C] offset aSHeaderSDataS +
mov [esp+4Ch+var_48] ecx +
call printf  +
test ebx ebx +
jz loc_41DA62  +
mov [esp+4Ch+var_48] 1 +
mov ebp 2 +
mov [esp+4Ch+var_4C] ebx +
call sub_4230B0  +
test eax eax +
jnz loc_41D9B8  +
jmp loc_41DA44  +
add ebp 1 +
cmp ebp 5Ch +
jz loc_41D9FE  +
mov eax [ebx+4] +
mov eax [eax+150h] +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
jz loc_41D9B0  +
mov [esp+4Ch+var_4C] ebp +
add ebp 1 +
mov [esp+4Ch+var_48] 0 +
call sub_4237F0  +
mov [esp+4Ch+var_4C] offset aS_8 +
mov [esp+4Ch+var_48] eax +
call printf  +
cmp ebp 5Ch +
jnz loc_41D9B8  +
mov [esp+4Ch+var_4C] ebx +
call sub_4255B0  +
mov ecx [esp+4Ch+var_2C] +
mov eax off_492AFC +
add [esp+4Ch+var_2C] 4 +
mov esi [eax+ecx] +
test esi esi +
jnz loc_41D928  +
mov [esp+4Ch+var_4C] edi +
call _unlink  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov ebx [esp+4Ch+var_30] +
mov eax 1 +
test ebx ebx +
jnz loc_41DA84  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_420A00  +
cmp eax 5 +
jz loc_41D9FE  +
mov eax [esi] +
mov [esp+4Ch+var_4C] eax +
call sub_41D560  +
mov [esp+4Ch+var_30] 0 +
jmp loc_41D9FE  +
mov [esp+4Ch+var_4C] edi +
call sub_41D560  +
mov [esp+4Ch+var_30] 0 +
jmp loc_41DA06  +
mov [esp+4Ch+var_4C] edi +
call _unlink  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov [esp+4Ch+var_4C] offset aColumns +
call getenv  +
test eax eax +
jz loc_41DDD8  +
mov [esp+4Ch+var_4C] eax +
call atoi  +
test eax eax +
mov [esp+4Ch+var_10] eax +
jz loc_41DDD8  +
mov [esp+4Ch+var_14] 1 +
mov [esp+4Ch+var_24] 0 +
mov eax [esp+4Ch+var_24] +
mov esi off_492AFC +
lea ecx ds:0[eax*4] +
mov eax [esi+eax*4] +
mov [esp+4Ch+var_20] ecx +
test eax eax +
jz loc_41DDC5  +
mov eax [eax] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov ebp [esp+4Ch+var_10] +
lea ebx [eax+10h] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
cmp ebx ebp +
mov edi eax +
mov [esp+4Ch+var_2C] eax +
jge loc_41DB30  +
mov eax [esp+4Ch+var_20] +
mov eax [esi+eax+4] +
test eax eax +
jnz loc_41DB1A  +
jmp loc_41DB30  +
add edi 1 +
mov eax [esi+edi*4] +
test eax eax +
jz loc_41DB2C  +
mov eax [eax] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
lea ebx [ebx+eax+1] +
cmp ebx ebp +
jl loc_41DB10  +
mov [esp+4Ch+var_2C] edi +
mov [esp+4Ch+var_44] offset asc_49B0FC +
mov [esp+4Ch+var_48] 0Fh +
mov [esp+4Ch+var_4C] offset aS_9 +
call printf  +
mov eax [esp+4Ch+var_24] +
cmp [esp+4Ch+var_2C] eax +
jle loc_41DDB5  +
mov eax off_492AFC +
mov ecx [esp+4Ch+var_20] +
mov eax [eax+ecx] +
test eax eax +
jz loc_41DDA7  +
mov ecx [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_24] +
mov edi [esp+4Ch+var_2C] +
add ecx 4 +
mov [esp+4Ch+var_18] ecx +
mov esi ecx +
jmp loc_41DB94  +
mov eax off_492AFC +
mov eax [eax+esi] +
add esi 4 +
test eax eax +
jz loc_41DBAD  +
mov eax [eax] +
add ebx 1 +
mov [esp+4Ch+var_4C] offset aS_10 +
mov [esp+4Ch+var_48] eax +
call printf  +
cmp ebx edi +
jnz loc_41DB85  +
mov [esp+4Ch+var_4C] 0Ah +
call putchar  +
mov [esp+4Ch+var_4C] 0 +
call sub_488080  +
mov [esp+4Ch+var_1C] 1 +
mov [esp+4Ch+var_30] 2 +
mov [esp+4Ch+var_28] eax +
jmp loc_41DBF0  +
add [esp+4Ch+var_30] 1 +
cmp [esp+4Ch+var_30] 5Ch +
jz loc_41DD72  +
mov eax [esp+4Ch+var_30] +
mov edi offset aUnknown_1 +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_4237F0  +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_41DBE0  +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_4237F0  +
mov [esp+4Ch+var_48] 0Eh +
mov [esp+4Ch+var_4C] offset aS_11 +
mov [esp+4Ch+var_44] eax +
call printf  +
mov edi [esp+4Ch+var_24] +
cmp [esp+4Ch+var_2C] edi +
jle loc_41DD56  +
mov eax off_492AFC +
mov ecx [esp+4Ch+var_20] +
mov ebx [eax+ecx] +
test ebx ebx +
jz loc_41DD56  +
mov ebp [esp+4Ch+var_18] +
jmp loc_41DCC8  +
mov eax [esi+4] +
mov edx [esp+4Ch+var_30] +
mov eax [eax+150h] +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_4C] esi +
call eax  +
test eax eax +
jz loc_41DD14  +
mov eax [ebx] +
mov [esp+4Ch+var_4C] offset aS_10 +
mov [esp+4Ch+var_48] eax +
call printf  +
mov [esp+4Ch+var_4C] esi +
add edi 1 +
call sub_4255B0  +
cmp edi [esp+4Ch+var_2C] +
jz loc_41DD56  +
mov eax off_492AFC +
mov ebx [eax+ebp] +
add ebp 4 +
test ebx ebx +
jz loc_41DD56  +
mov eax [ebx] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
call sub_425450  +
test eax eax +
mov esi eax +
jz loc_41DD02  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_4230B0  +
test eax eax +
jnz loc_41DC68  +
call sub_420A00  +
cmp eax 5 +
jz loc_41DD14  +
mov eax [ebx] +
mov [esp+4Ch+var_4C] eax +
call sub_41D560  +
mov [esp+4Ch+var_1C] 0 +
mov eax [ebx] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
test eax eax +
jz loc_41DD35  +
mov ebx eax +
mov [esp+4Ch+var_4C] 2Dh +
call putchar  +
sub ebx 1 +
jnz loc_41DD24  +
mov [esp+4Ch+var_4C] 20h +
call putchar  +
test esi esi +
jnz loc_41DCA0  +
add edi 1 +
cmp edi [esp+4Ch+var_2C] +
jnz loc_41DCB5  +
mov [esp+4Ch+var_4C] 0Ah +
call putchar  +
add [esp+4Ch+var_30] 1 +
cmp [esp+4Ch+var_30] 5Ch +
jnz loc_41DBF0  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] edi +
call _unlink  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov ecx [esp+4Ch+var_1C] +
mov eax 0 +
test ecx ecx +
cmovnz eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_14] eax +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_24] eax +
jmp loc_41DABC  +
mov eax ecx +
add eax 4 +
mov [esp+4Ch+var_18] eax +
jmp loc_41DBAD  +
mov eax [esp+4Ch+var_20] +
add eax 4 +
mov [esp+4Ch+var_18] eax +
jmp loc_41DBAD  +
mov edx [esp+4Ch+var_14] +
xor eax eax +
test edx edx +
setz al  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_10] 50h +
jmp loc_41DAAC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 90h +
mov eax [esp+0A8h] +
mov esi [esp+0A0h] +
mov ebx [esp+0A4h] +
test eax eax +
jnz loc_41DE32  +
mov eax [ebx] +
mov [esp] esi +
mov dword ptr [esp+4] offset aS_16 +
mov [esp+8] eax +
call fprintf  +
add esp 90h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
lea edx [esp+60h] +
mov eax [eax+0FCh] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_41DE12  +
mov eax [esp+84h] +
mov [esp+28h] eax +
lea eax [esp+28h] +
mov [esp] eax +
call ctime  +
test eax eax +
jz loc_41DEE0  +
lea edx [eax+14h] +
add eax 4 +
lea edi [esp+38h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a_12s_4s +
mov [esp] edi +
call sprintf  +
lea eax [esp+2Dh] +
mov [esp+4] eax +
movzx eax word ptr [esp+66h] +
mov [esp] eax +
call loc_41E430  +
mov eax [esp+78h] +
mov [esp+18h] edi +
mov dword ptr [esp+4] offset aSLdLd6luS +
mov [esp] esi +
mov [esp+14h] eax +
movsx eax word ptr [esp+6Ch] +
mov byte ptr [esp+37h] 0 +
mov [esp+10h] eax +
movsx eax word ptr [esp+6Ah] +
mov [esp+0Ch] eax +
lea eax [esp+2Eh] +
mov [esp+8] eax +
call fprintf  +
jmp loc_41DE12  +
***
mov dword ptr [esp+38h] 6D69743Ch +
lea edi [esp+38h] +
mov dword ptr [esp+3Ch] 61642065h +
mov dword ptr [esp+40h] 63206174h +
mov dword ptr [esp+44h] 7572726Fh +
mov dword ptr [esp+48h] 3E7470h +
jmp loc_41DE89  +
***
jmp sub_41DF20  +
***
mov eax [esp+18h+arg_0] +
call sub_41D490  +
mov [esp+18h+var_18] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_41DF67  +
mov [esp+18h+var_10] 180h +
mov [esp+18h+var_14] 502h +
mov [esp+18h+var_18] eax +
call _open  +
cmp eax 0FFFFFFFFh +
jz loc_41DF70  +
mov [esp+18h+var_18] eax +
call _close  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_41DF62  +
mov [esp+18h+var_18] ebx +
call free  +
xor eax eax +
jmp loc_41DF62  +
***
mov eax [esp+18h+arg_0] +
call sub_41D490  +
mov [esp+18h+var_18] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_41DFB0  +
mov [esp+18h+var_18] eax +
call _mkdir  +
test eax eax +
jnz loc_41DFB0  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+28h+arg_0] +
sub esp 44h +
mov ebx [esp+44h+arg_0] +
lea eax [esp+44h+var_34] +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] ebx +
call ds:_stati64  +
test eax eax +
js loc_41E053  +
movzx eax [esp+44h+var_2E] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_41E0B0  +
mov edx [esp+44h+var_18] +
mov eax [esp+44h+var_1C] +
test edx edx +
js loc_41E0CF  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 2 +
jz loc_41E090  +
call esi  +
mov eax [eax] +
mov [esp+0] eax +
call strerror  +
mov [esp+4] ebx +
mov dword ptr [esp+0] offset aWarningCouldNo +
mov [esp+8] eax +
call sub_41D6C0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_41E04D  +
mov [esp+4] ebx +
mov dword ptr [esp+0] offset aSNoSuchFile +
call sub_41D6C0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_41E04D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningSIsNotA +
call sub_41D6C0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_41E04D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningSHasNeg +
call sub_41D6C0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_41E04D  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_41E1B4  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_41E1AA  +
mov esi [eax] +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebp [ebx] +
mov [esp+1Ch+var_1C] ebp +
mov edi eax +
call strlen  +
lea edi [edi+eax+3] +
mov eax ds:dword_4BD224 +
cmp edi eax +
jbe loc_41E184  +
test eax eax +
jnz loc_41E190  +
mov eax edi +
shr eax 1 +
add edi eax +
mov [esp+1Ch+var_1C] edi +
mov ds:dword_4BD224 edi +
call sub_42B400  +
test eax eax +
mov ds:dword_4BD220 eax +
jz loc_41E1A0  +
mov edx [ebx+8Ch] +
mov ebp [ebx] +
mov esi [edx] +
mov [esp+1Ch+var_10] ebp +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] offset aSS_3 +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
mov eax ds:dword_4BD220 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4BD220 +
jmp loc_41E15F  +
mov eax ds:dword_4BD220 +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_41E138  +
mov ds:dword_4BD224 0 +
mov eax [ebx] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] 25Eh +
mov [esp+1Ch+var_18] offset a____Binutils_3 +
mov [esp+1Ch+var_1C] offset aAbfdNull +
call sub_48C4C0  +
jmp loc_41E103  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_8] +
mov esi [esp+1Ch+arg_C] +
call sub_420A00  +
mov [esp+1Ch+var_1C] eax +
call sub_420A10  +
mov ebp eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+1Ch+var_1C] eax +
call fflush  +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_4C1A10 +
mov [esp+1Ch+var_1C] eax +
call fputs  +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_41E2E0  +
test ebx ebx +
jz loc_41E301  +
test edi edi +
jz loc_41E2E0  +
mov eax [edi] +
test eax eax +
jz loc_41E2E0  +
mov [esp+1Ch+var_10] eax +
mov eax ds:_iob +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] offset aSS_4 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
test esi esi +
jz loc_41E2B9  +
mov eax ds:_iob +
mov [esp+1Ch+var_14] 2 +
mov [esp+1Ch+var_18] 1 +
mov [esp+1Ch+var_1C] offset asc_49B231 +
add eax 40h +
mov [esp+1Ch+var_10] eax +
call fwrite  +
lea eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
mov [esp+1Ch+var_18] esi +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_18] offset aS_5 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:_iob +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] offset aS_6 +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
jmp loc_41E271  +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call sub_41E0F0  +
mov ebx eax +
jmp loc_41E23F  +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_41E376  +
cmp dl 2Fh +
jz loc_41E376  +
test dl dl +
jnz loc_41E370  +
test dl dl +
jz loc_41E366  +
cmp dl 2Eh +
lea esi [esi+0] +
jz loc_41E397  +
cmp dl 2Fh +
jz loc_41E379  +
cmp dl 5Ch +
jnz loc_41E35C  +
lea esi [esi+0] +
jmp loc_41E379  +
cmp dl 5Ch +
jz loc_41E380  +
cmp dl 2Fh +
jz loc_41E380  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_41E352  +
mov eax 1 +
retn   +
cmp byte ptr [eax+1] 3Ah +
jnz loc_41E335  +
xor eax eax +
retn   +
movzx edx byte ptr [eax] +
lea esi [esi+0] +
cmp dl 2Fh +
jnz loc_41E3C9  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_41E385  +
cmp dl 2Fh +
jz loc_41E385  +
jmp loc_41E335  +
movzx edx byte ptr [eax+1] +
cmp dl 2Eh +
jz loc_41E3AD  +
add eax 1 +
test dl dl +
jnz loc_41E342  +
mov eax 1 +
retn   +
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
test dl dl +
jz loc_41E376  +
cmp dl 2Fh +
jz loc_41E376  +
cmp dl 5Ch +
jz loc_41E376  +
mov eax ecx +
jmp loc_41E342  +
cmp dl 5Ch +
jz loc_41E385  +
nop   +
jmp loc_41E335  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aGnuBinutils2_0 +
mov [esp+1Ch+var_1C] offset aGnuSS +
mov [esp+1Ch+var_18] eax +
call printf  +
mov [esp+1Ch+var_1C] offset aCopyrightC2015 +
call puts  +
mov [esp+1Ch+var_1C] offset aThisProgramIsF +
call puts  +
mov [esp+1Ch+var_1C] 0 +
call exit  +
push ebx  +
mov edx [esp+8] +
mov ecx 64h +
mov eax [esp+0Ch] +
mov ebx edx +
and ebx 0F000h +
cmp ebx 4000h +
jz loc_41E47B  +
cmp ebx 3000h +
mov ecx 62h +
jz loc_41E47B  +
cmp ebx 2000h +
mov ecx 63h +
jz loc_41E47B  +
cmp ebx 1000h +
mov ecx 70h +
mov ebx 2Dh +
cmovnz ecx ebx +
mov [eax] cl +
mov ecx edx +
and ecx 100h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+1] cl +
mov ecx edx +
and ecx 80h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+2] cl +
mov ecx edx +
and ecx 40h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+3] cl +
mov ecx edx +
and ecx 20h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+4] cl +
mov ecx edx +
and ecx 10h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+5] cl +
mov ecx edx +
and ecx 8 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+6] cl +
mov ecx edx +
and ecx 4 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+7] cl +
mov ecx edx +
and ecx 2 +
cmp ecx 1 +
sbb ecx ecx +
and edx 1 +
and ecx 0FFFFFFB6h +
add ecx 77h +
cmp edx 1 +
sbb edx edx +
and edx 0FFFFFFB5h +
add edx 78h +
mov [eax+8] cl +
mov [eax+9] dl +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax dword_492820 +
mov [edx+4] eax +
mov eax [esi+6Ch] +
mov [edx+94h] esi +
mov [edx+8] eax +
mov eax [esi+4] +
mov eax [eax+9Ch] +
mov [esp+0Ch+var_8] edx +
mov [esp+0Ch+var_C] esi +
call eax  +
test eax eax +
jz loc_41E5A0  +
mov eax [esi+68h] +
add dword ptr [esi+6Ch] 1 +
add dword_492820 1 +
test eax eax +
mov dword ptr [ebx+0Ch] 0 +
jz loc_41E590  +
mov [ebx+10h] eax +
mov [eax+0Ch] ebx +
mov [esi+68h] ebx +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ebx+10h] 0 +
mov [esi+64h] ebx +
jmp loc_41E582  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
test eax eax +
jz loc_41E625  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_C] edx +
call sub_42A800  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41E60A  +
lea edi [edx+10h] +
mov ebx 0A8h +
test edi 1 +
jnz loc_41E640  +
test edi 2 +
jnz loc_41E650  +
mov ecx ebx +
xor eax eax +
shr ecx 2 +
test bl 2 +
stos   +
jnz loc_41E615  +
and ebx 1 +
jnz loc_41E610  +
mov eax edx +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
mov byte ptr [edi] 0 +
jmp loc_41E608  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and ebx 1 +
jz loc_41E608  +
jmp loc_41E610  +
mov [esp+14h+var_10] 0B8h +
mov [esp+14h+var_14] ebx +
call sub_42A750  +
test eax eax +
jnz loc_41E5C1  +
xor eax eax +
jmp loc_41E60A  +
mov byte ptr [edx+10h] 0 +
lea edi [edx+11h] +
mov bl 0A7h +
jmp loc_41E5ED  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub ebx 2 +
jmp loc_41E5F5  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ebx [esp+24h] +
mov edx [eax+4] +
mov edx [edx+10Ch] +
mov [esp] eax +
call edx  +
test eax eax +
mov [ebx+98h] eax +
jz loc_41E6B0  +
mov edx [ebx] +
mov dword ptr [eax+8] 0 +
mov [eax+10h] ebx +
mov dword ptr [eax+0Ch] 100h +
mov [eax+4] edx +
lea eax [ebx+98h] +
mov [ebx+9Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+54h] +
mov eax [ebx+48h] +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
lea edx ds:0[ecx*4] +
mov dword ptr [ebx+6Ch] 0 +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call memset  +
mov dword ptr [ebx+58h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_42A4E0  +
test eax eax +
jz loc_41E745  +
add eax 10h +
add esp 1Ch +
retn   +
xor eax eax +
jmp loc_41E741  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
mov ebx [eax-10h] +
mov ebp [eax-8] +
mov edi [eax] +
test ebx ebx +
jnz loc_41E776  +
jmp loc_41E7A0  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41E7A0  +
cmp [ebx+8] ebp +
jnz loc_41E770  +
mov [esp+1Ch+var_18] edi +
mov eax [ebx+4] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_41E770  +
add esp 1Ch +
lea eax [ebx+10h] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jz loc_41E7E0  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_41E7E0  +
lea eax [esi+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_42A4E0  +
test eax eax +
jz loc_41E7A4  +
add esp 1Ch +
add eax 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_42A4E0  +
test eax eax +
mov edx eax +
jz loc_41E84A  +
test byte ptr [edx+26h] 10h +
lea eax [eax+10h] +
jz loc_41E836  +
jmp loc_41E84C  +
test byte ptr [eax+16h] 10h +
jnz loc_41E84C  +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_41E750  +
test eax eax +
jnz loc_41E830  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov esi [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
add eax 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_42A4E0  +
test eax eax +
mov ebx eax +
jz loc_41E8D8  +
mov edi [eax+8] +
mov eax edi +
jmp loc_41E899  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41E8D8  +
mov eax [ebx+8] +
cmp eax edi +
jnz loc_41E890  +
mov [esp+4] esi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_41E890  +
mov eax [esp+3Ch] +
lea ebp [ebx+10h] +
mov [esp+4] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
test eax eax +
jz loc_41E890  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor ebp ebp +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
mov [esp+8] edx +
lea ebp [edx+1] +
mov dword ptr [esp+4] offset a_D +
mov [esp] edi +
call sprintf  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] esi +
call sub_42A4E0  +
test eax eax +
jnz loc_41E950  +
mov eax [esp+38h] +
test eax eax +
jz loc_41E9B0  +
mov eax [esp+38h] +
mov [eax] ebp +
mov eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 1 +
jmp loc_41E940  +
***
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
jmp loc_41E9A1  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
test byte ptr [ebx+2Bh] 10h +
jnz loc_41EAD0  +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_41EA60  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_41EA42  +
mov edi offset off_492840 +
mov eax [ebx+4] +
mov eax [eax+9Ch] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_41EAC6  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_41EA67  +
mov edi offset off_4928E8 +
jmp loc_41EA1E  +
mov edi offset off_492990 +
jmp loc_41EA1E  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebp +
cmps   +
mov edi offset off_492A38 +
setnbe dl  +
setb al  +
cmp dl al +
jz loc_41EA1E  +
lea eax [ebx+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_42A4E0  +
test eax eax +
mov ecx eax +
jz loc_41EAC6  +
mov esi [ecx+10h] +
lea edx [eax+10h] +
mov eax edx +
test esi esi +
jnz loc_41EA3A  +
mov [ecx+10h] ebp +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_41E530  +
xor eax eax +
jmp loc_41EA3A  +
mov [esp+1Ch+var_1C] 5 +
call sub_420C50  +
xor eax eax +
jmp loc_41EA3A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
test byte ptr [esi+2Bh] 10h +
jnz loc_41EB85  +
lea edx [esi+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] edx +
call sub_42A4E0  +
test eax eax +
mov ebx eax +
jz loc_41EB91  +
mov eax [eax+10h] +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_41EB80  +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] 0 +
call sub_41E5B0  +
test eax eax +
jz loc_41EB91  +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
lea edx [eax+10h] +
mov [ebx] eax +
mov [edx+14h] edi +
mov eax esi +
mov [edx] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_41E530  +
lea edx [ebx+10h] +
jmp loc_41EB6A  +
mov [esp+2Ch+var_2C] 5 +
call sub_420C50  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_41EAF0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_8] +
test byte ptr [ebp+2Bh] 10h +
jnz loc_41EC87  +
mov [esp+2Ch+var_10] edx +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_41EC5F  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_41EC5F  +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_41EC5F  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_41EC5F  +
lea eax [ebp+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call sub_42A4E0  +
test eax eax +
jz loc_41EC5F  +
mov edx [eax+10h] +
test edx edx +
mov edx [esp+2Ch+var_10] +
jz loc_41EC70  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [eax+24h] edx +
lea edx [eax+10h] +
mov [eax+10h] ebx +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_41E530  +
mov [esp+2Ch+var_2C] 5 +
call sub_420C50  +
jmp loc_41EC5F  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_41EBD0  +
add esp 1Ch +
retn   +
***
mov eax dword_492820 +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
mov [eax+14h] edx +
mov eax 1 +
retn   +
***
jmp sub_41ED00  +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov [edx] eax +
sub edx 10h +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov [esp+arg_8] edx +
add eax 48h +
mov [esp+arg_0] eax +
jmp sub_42A630  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_8] +
mov edi [esi+64h] +
test edi edi +
jz loc_41ED61  +
mov [esp+1Ch+var_18] edi +
add ebx 1 +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] esi +
call [esp+1Ch+arg_4]  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_41ED48  +
cmp [esi+6Ch] ebx +
jnz loc_41ED6E  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aBfd_map_over_s +
mov [esp+1Ch+var_18] 573h +
mov [esp+1Ch+var_1C] offset a____Binutils_4 +
call sub_420BD0  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+48h+var_18] +
mov ebp [esp+48h+var_14] +
mov edi [esp+48h+var_10] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_41EDB7  +
jmp loc_41EDD2  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_41EDD2  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] esi +
call ebp  +
test eax eax +
jz loc_41EDB0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
test byte ptr [eax+2Bh] 10h +
jnz loc_41EE01  +
mov eax [esp+1Ch+arg_4] +
mov edx [esp+1Ch+arg_8] +
mov [eax+24h] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_C] +
mov edi [esp+2Ch+arg_10] +
mov ebx [esp+2Ch+arg_14] +
test byte ptr [ebp+15h] 1 +
jz loc_41EEF2  +
mov ecx [ebp+24h] +
cmp ecx esi +
jb loc_41EE60  +
cmp ecx ebx +
jb loc_41EE60  +
mov eax ebx +
xor edx edx +
add eax esi +
adc edx edi +
cmp edx 0 +
jl loc_41EE76  +
jg loc_41EE60  +
cmp eax ecx +
jbe loc_41EE76  +
nop   +
mov [esp+2Ch+var_2C] 11h +
call sub_420C50  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
test byte ptr [eax+28h] 10h +
jz loc_41EF08  +
mov eax [ebp+6Ch] +
test eax eax +
jz loc_41EEA7  +
add eax esi +
cmp eax [esp+2Ch+arg_8] +
jz loc_41EEA7  +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx [esp+2Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+154h] +
mov [esp+2Ch+var_1C] edi +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_18] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41EE6E  +
mov eax [esp+2Ch+arg_0] +
or byte ptr [eax+2Bh] 10h +
add esp 2Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0Eh +
call sub_420C50  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 5 +
call sub_420C50  +
xor eax eax +
jmp loc_41EE6E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_4] +
mov eax [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_C] +
mov ebx [edx+14h] +
mov [esp+2Ch+var_20] eax +
mov ebp [esp+2Ch+arg_10] +
mov ecx [esp+2Ch+arg_14] +
test bl 80h +
jnz loc_41EFF2  +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 10h +
jz loc_41EFB6  +
mov eax [edx+28h] +
test eax eax +
jz loc_41EFB6  +
cmp eax edi +
jb loc_41EFA0  +
cmp eax ecx +
jb loc_41EFA0  +
mov [esp+2Ch+var_1C] ecx +
add [esp+2Ch+var_1C] edi +
mov [esp+2Ch+var_18] 0 +
adc [esp+2Ch+var_18] ebp +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] 0 +
jl loc_41EFC0  +
jg loc_41EFA0  +
mov eax [esp+2Ch+var_14] +
cmp [esp+2Ch+var_1C] eax +
jbe loc_41EFC0  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] 11h +
call sub_420C50  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+24h] +
jmp loc_41EF61  +
test ecx ecx +
jz loc_41F017  +
test bh 1 +
jz loc_41EFF2  +
test bh 40h +
jz loc_41F020  +
mov eax [edx+6Ch] +
test eax eax +
jz loc_41F050  +
add eax edi +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] eax +
call memmove  +
mov eax 1 +
jmp loc_41EFAE  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
jmp loc_41EFAE  +
mov eax [esi+4] +
mov eax [eax+0A0h] +
mov [esp+2Ch+arg_C] edi +
mov edi [esp+2Ch+var_20] +
mov [esp+2Ch+arg_10] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_14] ecx +
mov [esp+2Ch+arg_8] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
and bh 0BFh +
mov [edx+14h] ebx +
mov [esp+2Ch+var_2C] 5 +
call sub_420C50  +
xor eax eax +
jmp loc_41EFAE  +
***
mov eax [esp+arg_8] +
mov dword ptr [eax] 0 +
jmp sub_421F90  +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [edi+7Ch] +
mov eax [edi+0A0h] +
test esi esi +
mov eax [eax+14h] +
jnz loc_41F0F0  +
mov dword ptr [ebx] 0 +
mov eax esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_41F10C  +
xor edx edx +
jmp loc_41F0FA  +
mov eax ecx +
add edx 1 +
add ebx 4 +
cmp esi edx +
lea ecx [eax+18h] +
mov [ebx-4] eax +
ja loc_41F0F8  +
jmp loc_41F0DF  +
***
lea eax [esi+esi*2] +
shl eax 3 +
mov [esp+4] eax +
mov [esp] edi +
call sub_425850  +
test eax eax +
jz loc_41F163  +
mov edx [edi+0A0h] +
mov ecx [edx+0Ch] +
mov [edx+14h] eax +
test ecx ecx +
jz loc_41F0F4  +
mov edx eax +
mov ebp [ecx+4] +
add edx 18h +
mov [edx-18h] edi +
mov [edx-14h] ebp +
mov ebp [ecx+8] +
mov ecx [ecx] +
mov dword ptr [edx-0Ch] 2 +
mov dword ptr [edx-8] offset off_492990 +
mov [edx-10h] ebp +
mov dword ptr [edx-4] 0 +
test ecx ecx +
jnz loc_41F134  +
jmp loc_41F0F4  +
***
mov eax 0FFFFFFFFh +
jmp loc_41F0E7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
mov edx [esp+60h] +
mov eax [esp+5Ch] +
mov [esp] ebx +
mov [esp+14h] edx +
mov [esp+10h] eax +
call sub_423820  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
mov ebp eax +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_41F303  +
mov ecx [esp+64h] +
test ecx ecx +
jz loc_41F1CC  +
mov eax [esp+54h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_41F1E0  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+64h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425850  +
test eax eax +
mov ecx eax +
mov [esp+20h] eax +
jz loc_41F303  +
mov eax [esp+64h] +
mov [esp] ecx +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp+4] eax +
call memcpy  +
mov edx ds:dword_4BD228 +
test edx edx +
jnz loc_41F310  +
mov eax [esp+54h] +
xor ebx ebx +
mov [esp+18h] ebp +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+20h] +
mov [esp+8] ebp +
mov ecx eax +
mov [esp+24h] eax +
mov eax ebp +
mov [esp+28h] ecx +
mov ecx [esp+64h] +
cdq   +
add ecx [esp+10h] +
adc ebx [esp+14h] +
mov [esp+0Ch] edx +
mov [esp] ecx +
mov [esp+4] ebx +
mov [esp+1Ch] edx +
call sub_48BE00  +
add eax [esp+28h] +
adc edx [esp+2Ch] +
cmp edx 0 +
jl loc_41F345  +
jle loc_41F34E  +
mov ebx [esp+24h] +
mov dword ptr [esi+8] 3 +
lea esi [esi+0] +
mov eax [esp+20h] +
mov edx [esp+1Ch] +
mov [edi+4] eax +
mov eax [esp+18h] +
mov [esp+0Ch] edx +
mov edx [esp+14h] +
mov [esp+8] eax +
mov eax [esp+10h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_48BE00  +
add ebx eax +
mov eax [esp+64h] +
mov [edi+8] ebx +
mov [edi+0Ch] eax +
mov eax [esi+4] +
test eax eax +
jz loc_41F2D3  +
cmp ebx [eax+8] +
jnb loc_41F330  +
mov edx [esi] +
mov eax esi +
test edx edx +
jnz loc_41F2E8  +
jmp loc_41F2ED  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_41F2ED  +
cmp ebx [edx+8] +
ja loc_41F2E0  +
mov [edi] edx +
mov [eax] edi +
mov eax [edi] +
test eax eax +
jnz loc_41F1CC  +
mov [esi+4] edi +
jmp loc_41F1CC  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov [esp+18h] ebp +
sar ebp 1Fh +
mov dword ptr [esi+8] 3 +
mov [esp+1Ch] ebp +
mov ebx [eax+20h] +
jmp loc_41F290  +
***
mov [eax] edi +
mov eax 1 +
mov dword ptr [edi] 0 +
mov [esi+4] edi +
jmp loc_41F1D1  +
***
mov ebx [esp+24h] +
jmp loc_41F290  +
***
cmp eax 10000h +
jbe loc_41F345  +
cmp edx 0 +
jg loc_41F281  +
nop   +
jl loc_41F36D  +
cmp eax 1000000h +
ja loc_41F281  +
cmp dword ptr [esi+8] 2 +
ja loc_41F281  +
mov dword ptr [esi+8] 2 +
mov ebx [esp+24h] +
jmp loc_41F290  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_41F3B0  +
mov dword ptr [edx+84h] offset asc_49BE80 +
mov eax 1 +
retn   +
***
jmp sub_4237A0  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_423C80  +
***
push esi  +
push ebx  +
sub esp 23Ch +
cmp edx 9 +
mov [esp+23Ch+var_220] eax +
mov eax ecx +
mov edi [esp+23Ch+arg_4] +
lea ecx [edx+30h] +
mov byte ptr [esp+23Ch+var_210] 53h +
mov byte ptr [esp+23Ch+var_210+1] cl +
ja loc_41F480  +
mov ebx 1 +
mov ecx edx +
shl ebx cl +
test ebx 203h +
jz loc_41F575  +
lea ebp [esp+23Ch+var_20C] +
xor esi esi +
mov ecx eax +
movzx ebx al +
shr ecx 8 +
add ebp 4 +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
add ebx ecx +
movzx edx ds:byte_49B8B4[edx] +
add ebx esi +
mov [ebp-3] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_49B8B4[edx] +
mov [ebp-4] dl +
mov edx eax +
and edx 0Fh +
movzx edx ds:byte_49B8B4[edx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 4 +
and edx 0Fh +
movzx edx ds:byte_49B8B4[edx] +
mov [ebp-2] dl +
jmp loc_41F486  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
cmp [esp+23Ch+arg_0] edi +
jnb loc_41F4E1  +
mov eax [esp+23Ch+arg_0] +
mov edx ebp +
mov [esp+23Ch+var_224] ebx +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
add eax 1 +
add edx 2 +
add [esp+23Ch+var_224] ecx +
mov esi ecx +
and esi 0Fh +
movzx ebx ds:byte_49B8B4[esi] +
mov [edx-1] bl +
mov ebx ecx +
shr bl 4 +
movzx esi bl +
movzx ebx ds:byte_49B8B4[esi] +
mov [edx-2] bl +
cmp eax edi +
jnz loc_41F4A0  +
sub eax [esp+23Ch+arg_0] +
mov ebx [esp+23Ch+var_224] +
lea ebp [ebp+eax*2+0] +
lea eax [esp+2Eh] +
mov edi ebp +
sub edi eax +
add ebp 4 +
mov esi edi +
shr esi 1Fh +
add esi edi +
mov ecx esi +
sar ecx 1 +
mov eax ecx +
movzx ecx cl +
and eax 0Fh +
add ebx ecx +
movzx eax ds:byte_49B8B4[eax] +
not ebx  +
movzx ebx bl +
lea edx [esp+23Ch+var_210] +
mov byte ptr [esp+23Ch+var_210+3] al +
mov eax esi +
sar eax 5 +
and eax 0Fh +
movzx eax ds:byte_49B8B4[eax] +
mov byte ptr [ebp-1] 0Ah +
mov byte ptr [esp+23Ch+var_210+2] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_49B8B4[eax] +
shr ebx 4 +
mov byte ptr [ebp-2] 0Dh +
mov [ebp-3] al +
movzx eax ds:byte_49B8B4[ebx] +
mov [ebp-4] al +
mov eax [esp+23Ch+var_220] +
sub ebp edx +
mov [esp+23Ch+var_238] ebp +
mov [esp+23Ch+var_23C] edx +
mov [esp+23Ch+var_234] eax +
call sub_429DA0  +
cmp eax ebp +
setz al  +
add esp 23Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx 104h +
jnz loc_41F5B4  +
and ebx 88h +
jz loc_41F480  +
mov ebx eax +
shr ebx 18h +
mov edx ebx +
and edx 0Fh +
movzx edx ds:byte_49B8B4[edx] +
lea ebp [esp+23Ch+var_20C+2] +
mov byte ptr [esp+23Ch+var_20C+1] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_49B8B4[edx] +
mov byte ptr [esp+23Ch+var_20C] dl +
jmp loc_41F5BA  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
mov ecx eax +
add ebp 2 +
shr ecx 10h +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
movzx edx ds:byte_49B8B4[edx] +
lea esi [ebx+ecx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_49B8B4[edx] +
mov [ebp-2] dl +
jmp loc_41F423  +
***
mov eax ds:dword_4BD22C +
mov ebx [esp+18h+arg_0] +
test eax eax +
jz loc_41F650  +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_425850  +
test eax eax +
jz loc_41F661  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+8] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov ds:dword_4BD22C 1 +
call locret_488170  +
jmp loc_41F601  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+2Ch] +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test edx edx +
jz loc_41F6C0  +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] eax +
call sub_423940  +
mov eax [ebx+10h] +
mov edx [ebx+4] +
mov eax [eax] +
mov [esp+20h] esi +
mov [esp+2Ch] edx +
mov dword ptr [esp+24h] offset a5sS +
mov [esp+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fprintf  +
***
mov eax [ebx+4] +
mov [esp+20h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fputs  +
***
jmp sub_41F6E0  +
***
sub esp 28h +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_9] +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] eax +
call sub_429CF0  +
cmp eax 1 +
jz loc_41F720  +
call sub_420A00  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 12h +
jz loc_41F71A  +
mov dword ptr [ebx] 1 +
add esp 28h +
pop ebx  +
retn   +
movzx eax byte ptr [esp+28h+var_9] +
add esp 28h +
pop ebx  +
retn   +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+74h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
test ebp ebp +
jz loc_41F768  +
mov eax esi +
xor ebx ebx +
mov edx edi +
add eax ebp +
adc edx ebx +
cmp ebx edx +
jle loc_41F770  +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jge loc_41F7B5  +
mov ebx [esp+64h] +
cmp edx 0 +
mov ecx [ebx+24h] +
jl loc_41F784  +
jg loc_41F75A  +
cmp eax ecx +
ja loc_41F75A  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_41F7C0  +
add eax esi +
mov [esp+4] eax +
mov eax [esp+68h] +
mov [esp+8] ebp +
mov [esp] eax +
call memcpy  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp eax +
ja loc_41F75A  +
jmp loc_41F772  +
***
mov eax [esp+60h] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_425850  +
mov edx [esp+64h] +
mov ebx eax +
mov [esp+24h] eax +
mov [edx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_41F768  +
mov eax edx +
mov edx [edx+54h] +
mov eax [eax+50h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+8] edx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_429F00  +
test eax eax +
jnz loc_41F992  +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp+74h] ebp +
nop   +
mov eax [esp+60h] +
lea edx [esp+3Ch] +
call sub_41F6E0  +
cmp eax 0FFFFFFFFh +
jz loc_41FAD2  +
cmp eax 0Ah +
jz loc_41F840  +
cmp eax 0Dh +
nop   +
jz loc_41F840  +
cmp eax 53h +
jz loc_41F87B  +
mov dword ptr [esp+4] 2E3h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_420BA0  +
mov eax [esp+60h] +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
lea eax [esp+39h] +
mov [esp] eax +
call sub_429CF0  +
cmp eax 3 +
jnz loc_41F982  +
movzx eax byte ptr [esp+3Ah] +
movzx eax ds:byte_4BAE60[eax] +
cmp al 63h +
jz loc_41F9A0  +
movzx edx byte ptr [esp+3Bh] +
movzx edx ds:byte_4BAE60[edx] +
cmp dl 63h +
jz loc_41F9A0  +
shl eax 4 +
lea ebp [eax+edx] +
lea ebx [ebp+ebp+0] +
cmp ebx [esp+20h] +
jbe loc_41F901  +
mov eax [esp+18h] +
test eax eax +
jz loc_41F8E9  +
mov [esp] eax +
call free  +
mov [esp] ebx +
call sub_42B400  +
test eax eax +
mov [esp+18h] eax +
jz loc_41F992  +
mov [esp+20h] ebx +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp] eax +
call sub_429CF0  +
cmp ebx eax +
jnz loc_41F982  +
movzx eax byte ptr [esp+39h] +
cmp al 32h +
jz loc_41FABC  +
cmp al 33h +
jz loc_41F9D1  +
cmp al 31h +
jz loc_41FAC7  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp [eax+24h] ebx +
jz loc_41F963  +
mov dword ptr [esp+4] 2FEh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_420BA0  +
mov eax [esp+18h] +
test eax eax +
jz loc_41F973  +
mov [esp] eax +
call free  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
jmp loc_41F792  +
***
mov eax [esp+18h] +
test eax eax +
jz loc_41F992  +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_41F768  +
***
mov dword ptr [esp+4] 2E8h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_420BA0  +
movzx eax byte ptr [esp+3Ah] +
movzx edx byte ptr [esp+3Bh] +
movzx eax ds:byte_4BAE60[eax] +
movzx edx ds:byte_4BAE60[edx] +
jmp loc_41F8C9  +
***
mov edi [esp+18h] +
sub ebp 1 +
movzx eax byte ptr [edi] +
lea edx [edi+2] +
movzx ecx byte ptr [edi+1] +
movzx eax ds:byte_4BAE60[eax] +
movzx ebx ds:byte_4BAE60[ecx] +
shl eax 4 +
add ebx eax +
shl ebx 8 +
movzx eax byte ptr [edx] +
lea ecx [edx+2] +
sub ebp 1 +
movzx edx byte ptr [edx+1] +
movzx eax ds:byte_4BAE60[eax] +
movzx edx ds:byte_4BAE60[edx] +
shl eax 4 +
add edx eax +
or edx ebx +
shl edx 8 +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
mov edi [esp+64h] +
movzx eax ds:byte_4BAE60[eax] +
movzx ebx ds:byte_4BAE60[ebx] +
shl eax 4 +
add eax ebx +
movzx ebx byte ptr [ecx+2] +
or eax edx +
lea edx [ecx+4] +
movzx ecx byte ptr [ecx+3] +
shl eax 8 +
movzx ebx ds:byte_4BAE60[ebx] +
movzx ecx ds:byte_4BAE60[ecx] +
shl ebx 4 +
add ecx ebx +
or eax ecx +
mov ecx [esp+1Ch] +
add ecx [edi+1Ch] +
cmp eax ecx +
jnz loc_41FB10  +
cmp ebp 3 +
jz loc_41F840  +
mov eax [esp+24h] +
lea edi [ebp-3] +
xor ecx ecx +
mov esi [esp+1Ch] +
add esi eax +
movzx eax byte ptr [edx] +
add edx 2 +
movzx ebx byte ptr [edx-1] +
movzx eax ds:byte_4BAE60[eax] +
shl eax 4 +
add al ds:byte_4BAE60[ebx] +
mov [esi+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_41FA87  +
mov eax [esp+1Ch] +
lea eax [ebp+eax-3] +
mov [esp+1Ch] eax +
jmp loc_41F840  +
***
mov edx [esp+18h] +
xor ebx ebx +
jmp loc_41F9F8  +
***
mov ecx [esp+18h] +
xor edx edx +
jmp loc_41FA1D  +
***
mov eax [esp+3Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
test eax eax +
jnz loc_41F982  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
cmp ebx [eax+24h] +
jz loc_41F963  +
mov dword ptr [esp+4] 32Eh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_420BA0  +
jmp loc_41F963  +
***
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp ebx [eax+24h] +
jz loc_41F963  +
mov dword ptr [esp+4] 317h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_420BA0  +
jmp loc_41F963  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
test edx edx +
mov [esp+10h] eax +
mov eax [eax+0A0h] +
mov [esp+1Ch] eax +
jz loc_41FB78  +
mov eax [esp+10h] +
mov ebx [eax+7Ch] +
test ebx ebx +
jnz loc_41FCC4  +
mov esi [esp+10h] +
mov ebx [esi] +
mov [esp] ebx +
call strlen  +
mov edx 28h +
mov [esp] ebx +
cmp eax 28h +
cmovbe edx eax +
xor ecx ecx +
add edx ebx +
mov eax esi +
mov [esp+4] edx +
xor edx edx +
call sub_41F3E0  +
test eax eax +
jz loc_41FC5A  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_41FC76  +
nop   +
mov eax [esp+0Ch] +
mov edi [eax+4] +
mov eax dword_492AE0 +
test eax eax +
jnz loc_41FCA5  +
mov dword_492AE0 1 +
mov eax [esp+0Ch] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_41FC64  +
xor ebp ebp +
mov eax ebp +
mov ebp edi +
mov edi eax +
jmp loc_41FC02  +
mov eax [esp+0Ch] +
add edi ebx +
mov ebx [eax+0Ch] +
cmp ebx edi +
jbe loc_41FC64  +
mov ebp esi +
mov eax dword_492AE0 +
sub ebx edi +
cmp ebx eax +
cmova ebx eax +
mov eax [esp+0Ch] +
lea esi [ebp+ebx+0] +
mov edx [eax+8] +
mov eax [esp+10h] +
mov [esp+14h] edx +
mov [esp] eax +
call sub_423820  +
mov edx [esp+1Ch] +
mov edx [edx+8] +
mov [esp+4] esi +
mov ecx eax +
mov eax edi +
mov [esp] ebp +
mov [esp+18h] edx +
xor edx edx +
div  ecx +
mov ecx [esp+14h] +
mov edx [esp+18h] +
add ecx eax +
mov eax [esp+10h] +
call sub_41F3E0  +
test eax eax +
jnz loc_41FBF3  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jnz loc_41FBC0  +
mov eax [esp+10h] +
mov edx 0Ah +
mov esi [esp+1Ch] +
mov ecx [eax+74h] +
sub edx [esi+8] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_41F3E0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov edx 0FDh +
sub edx [esi+8] +
cmp eax edx +
jbe loc_41FBDE  +
mov dword_492AE0 edx +
jmp loc_41FBDE  +
***
mov esi [eax+78h] +
mov edi eax +
mov eax [eax] +
mov [esp+0Ch] esi +
mov [esp] eax +
call strlen  +
mov [esp+8] edi +
mov dword ptr [esp+4] 3 +
mov dword ptr [esp] offset asc_49B463 +
mov esi eax +
call sub_429DA0  +
cmp eax 3 +
jnz loc_41FC5A  +
mov edi [esp+10h] +
mov eax [edi] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_429DA0  +
cmp esi eax +
jnz loc_41FC5A  +
mov eax [esp+10h] +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_49B467 +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 2 +
jnz loc_41FC5A  +
xor edi edi +
test ebx ebx +
lea ebp [esp+27h] +
jle loc_41FE62  +
mov [esp+14h] ebx +
jmp loc_41FD5E  +
add edi 1 +
cmp [esp+14h] edi +
jz loc_41FE62  +
mov eax [esp+0Ch] +
mov ebx [eax+edi*4] +
mov eax [esp+10h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4238C0  +
test eax eax +
jnz loc_41FD51  +
test byte ptr [ebx+0Ch] 4 +
jnz loc_41FD51  +
mov eax [ebx+4] +
mov [esp] eax +
call strlen  +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_49B470 +
mov esi eax +
mov eax [esp+10h] +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 2 +
jnz loc_41FC5A  +
mov eax [ebx+4] +
mov ecx [esp+10h] +
mov [esp+4] esi +
mov [esp] eax +
mov [esp+8] ecx +
call sub_429DA0  +
cmp esi eax +
jnz loc_41FC5A  +
mov ecx [ebx+10h] +
mov eax [ecx+3Ch] +
mov eax [eax+20h] +
add eax [ebx+8] +
add eax [ecx+38h] +
mov dword ptr [esp+4] offset a08lx_3 +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
cmp byte ptr [esp+27h] 30h +
jnz loc_41FE5E  +
movzx eax byte ptr [esp+28h] +
mov esi ebp +
test al al +
jnz loc_41FE0F  +
jmp loc_41FE16  +
movzx eax byte ptr [esi+1] +
test al al +
jz loc_41FE16  +
add esi 1 +
cmp al 30h +
jz loc_41FE07  +
mov [esp] esi +
sub esi 2 +
call strlen  +
mov byte ptr [esi+eax+2] 0Dh +
lea edx [eax+4] +
mov byte ptr [esi+eax+3] 0Ah +
mov eax [esp+10h] +
mov byte ptr [esi+1] 24h +
mov byte ptr [esi] 20h +
mov [esp+4] edx +
mov [esp+8] eax +
mov [esp] esi +
mov [esp+18h] edx +
call sub_429DA0  +
mov edx [esp+18h] +
cmp edx eax +
jz loc_41FD51  +
jmp loc_41FC5A  +
***
mov esi ebp +
jmp loc_41FE16  +
***
mov eax [esp+10h] +
mov dword ptr [esp+4] 5 +
mov dword ptr [esp] offset asc_49B46A +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 5 +
jnz loc_41FC5A  +
jmp loc_41FB78  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_41FB50  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_41FB50  +
***
sub esp 54h +
cmp ecx 0FFFFFFFFh +
jz loc_41FF01  +
mov ebx eax +
movzx eax cl +
test ds:byte_4B8120[eax+eax] 10h +
jz loc_41FF17  +
mov byte ptr [esp+54h+var_2C] cl +
lea esi [esp+54h+var_2C] +
mov byte ptr [esp+54h+var_2C+1] 0 +
mov [esp+54h+var_48] esi +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] offset aBDUnexpectedCh +
call off_492AE8  +
mov [esp+54h+var_54] 11h +
call sub_420C50  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+54h+arg_0] +
test eax eax +
jnz loc_41FEFB  +
mov [esp+54h+var_54] 12h +
call sub_420C50  +
jmp loc_41FEFB  +
lea esi [esp+54h+var_2C] +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_50] offset a03o +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
jmp loc_41FED6  +
***
push edi  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41F6E0  +
cmp eax 0FFFFFFFFh +
jz loc_42062E  +
cmp eax 0Dh +
jz loc_41FFBB  +
cmp eax 53h +
jnz loc_4200E0  +
cmp eax 20h +
nop   +
jz loc_420100  +
jle loc_4201E5  +
cmp eax 24h +
nop   +
jz loc_4201CB  +
cmp eax 53h +
jnz loc_4201F3  +
mov [esp+0] ebp +
call sub_429E20  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 3 +
mov [esp+arg_2C] eax +
lea eax [esp+arg_41] +
mov [esp+0] eax +
mov [esp+arg_30] edx +
call sub_429CF0  +
cmp eax 3 +
jnz loc_420274  +
movzx ecx byte ptr [esp+46h] +
movzx eax ds:byte_4BAE60[ecx] +
cmp al 63h +
jz loc_420721  +
movzx ecx [esp+arg_43] +
movzx edx ds:byte_4BAE60[ecx] +
cmp dl 63h +
jz loc_420721  +
shl eax 4 +
lea esi [eax+edx] +
movzx eax [esp+arg_41] +
mov ebx esi +
cmp al 38h +
jz loc_420292  +
cmp al 32h +
jz loc_420292  +
and eax 0FFFFFFFBh +
cmp al 33h +
setz al  +
movzx eax al +
lea eax [eax+eax+3] +
cmp eax esi +
ja loc_420738  +
lea edi [esi+esi] +
cmp [esp+arg_34] edi +
jnb loc_42009E  +
mov eax [esp+arg_20] +
test eax eax +
jz loc_420086  +
mov [esp+0] eax +
call free  +
mov [esp+0] edi +
call sub_42B400  +
test eax eax +
mov [esp+arg_20] eax +
jz loc_4201B8  +
mov [esp+arg_34] edi +
mov eax [esp+arg_20] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] edi +
mov [esp+0] eax +
call sub_429CF0  +
cmp edi eax +
jnz loc_420274  +
lea eax [esi-1] +
mov [esp+arg_18] eax +
movzx eax [esp+arg_41] +
sub eax 30h +
cmp al 9 +
ja sub_41FF99  +
movzx eax al +
jmp ds:off_49B504[eax*4]  +
***
cmp eax 0Ah +
jz loc_4201DB  +
cmp eax 20h +
mov [esp+arg_28] 0 +
jnz loc_41FFC6  +
lea esi [esi+0] +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41F6E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_42025D  +
cmp eax 9 +
jz loc_420100  +
cmp eax 20h +
jz loc_420100  +
cmp eax 0Ah +
jz loc_42070D  +
cmp eax 0Dh +
jz loc_42070D  +
mov dword ptr [esp+0] 0Bh +
call sub_42B400  +
test eax eax +
mov esi eax +
jz loc_420274  +
mov [eax] bl +
lea edi [eax+1] +
mov ebx 0Ah +
jmp loc_420159  +
mov [edi] dl +
add edi 1 +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41F6E0  +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_420766  +
movzx eax al +
test ds:byte_4B8120[eax+eax] 40h +
jnz loc_420210  +
mov ecx edi +
sub ecx esi +
cmp ebx ecx +
ja loc_420154  +
add ebx ebx +
lea eax [ebx+1] +
mov [esp+arg_0] eax +
mov [esp+0] esi +
mov [esp+arg_1C] ecx +
mov [esp+arg_18] edx +
call sub_42B490  +
test eax eax +
jz loc_42077D  +
mov ecx [esp+arg_1C] +
mov esi eax +
mov edx [esp+arg_18] +
lea edi [eax+ecx] +
jmp loc_420154  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0FFFFFFFFh +
jz loc_42025D  +
lea edx [esp-7Ch+arg_C0] +
mov eax ebp +
call sub_41F6E0  +
cmp eax 0Ah +
jnz loc_4201C2  +
add [esp-7Ch+arg_A0] 1 +
jmp sub_41FF99  +
cmp eax 0Ah +
jz loc_4201DB  +
cmp eax 0Dh +
jz sub_41FF99  +
mov edx [esp+arg_44] +
mov ecx eax +
mov eax ebp +
mov [esp+0] edx +
mov edx [esp+arg_24] +
call sub_41FEB0  +
jmp loc_420274  +
***
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov [esp+arg_28] 0 +
mov edi ebx +
mov edi [esp+arg_20] +
movzx eax byte ptr [edi] +
movzx edx ds:byte_4BAE60[eax] +
movzx eax byte ptr [edi+1] +
movzx ecx ds:byte_4BAE60[eax] +
mov eax edx +
shl eax 4 +
shl edx 4 +
lea ebx [ecx+esi] +
add ecx edx +
add ebx eax +
mov eax edi +
lea edi [esi-2] +
add eax 2 +
mov [esp+arg_18] edi +
shl ecx 8 +
jmp loc_42039B  +
***
mov eax [esp+arg_20] +
test eax eax +
jz loc_420624  +
mov [esp+0] eax +
call free  +
mov eax 1 +
jmp loc_4201BA  +
mov eax [esp+arg_44] +
test eax eax +
jnz loc_420274  +
mov ebx [esp+arg_20] +
mov eax 1 +
test ebx ebx +
jz loc_4201BA  +
mov [esp+0] ebx +
mov [esp+arg_18] eax +
call free  +
mov eax [esp+arg_18] +
jmp loc_4201BA  +
***
add eax edi +
mov [ecx+24h] eax +
jmp loc_420514  +
***
cmp eax 20h +
jz loc_42024D  +
cmp eax 24h +
mov ebx eax +
jz loc_42078A  +
xor esi esi +
mov eax ebx +
jmp loc_4206A9  +
***
shl esi 4 +
mov eax ebp +
add esi edx +
lea edx [esp+arg_44] +
call sub_41F6E0  +
cmp eax 0FFFFFFFFh +
jz loc_42025D  +
movzx edx al +
movzx edx ds:byte_4BAE60[edx] +
cmp dl 63h +
jnz loc_420690  +
mov [esp+arg_0] 0Ch +
mov ebx eax +
mov [esp+0] ebp +
call sub_425850  +
test eax eax +
jz loc_420274  +
mov [eax+4] edi +
mov [eax+8] esi +
mov edx [ebp+0A0h] +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_4207A5  +
mov ecx [edx+10h] +
mov [ecx] eax +
mov [edx+10h] eax +
mov dword ptr [eax] 0 +
add dword ptr [ebp+7Ch] 1 +
cmp ebx 9 +
jz loc_420100  +
cmp ebx 20h +
jz loc_420100  +
cmp ebx 0Ah +
jz loc_4201DB  +
cmp ebx 0Dh +
jz sub_41FF99  +
mov ecx ebx +
mov eax [esp+arg_44] +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_41FEB0  +
jmp loc_420274  +
mov eax [esp+arg_24] +
mov [esp+arg_8] esi +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBDByteCountDTo +
mov [esp+arg_4] eax +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
jmp loc_420274  +
mov eax [esp+arg_44] +
mov ecx 0FFFFFFFFh +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_41FEB0  +
mov [esp+0] esi +
call free  +
jmp loc_420274  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41F6E0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_420684  +
jmp loc_42025D  +
mov [edx+0Ch] eax +
jmp loc_4206EE  +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_4BD22C +
mov ebx [esp+30h] +
test edx edx +
jz loc_420885  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_42087D  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_429CF0  +
cmp eax 4 +
jnz loc_42087D  +
cmp byte ptr [esp+1Ch] 53h +
jnz loc_420871  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4BAE60[eax] 63h +
jz loc_420871  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4BAE60[eax] 63h +
jz loc_420871  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4BAE60[eax] 63h +
jz loc_420871  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_41F5F0  +
test eax eax +
jz loc_4208A0  +
mov eax ebx +
call sub_41FF40  +
test eax eax +
jz loc_4208A0  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_420868  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_420C50  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_4BD22C 1 +
call locret_488170  +
jmp loc_4207C7  +
***
mov eax [ebx+0A0h] +
cmp eax esi +
jz loc_4208BA  +
test eax eax +
jz loc_4208BA  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_425AA0  +
mov [ebx+0A0h] esi +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_4BD22C +
mov ebx [esp+30h] +
test edx edx +
jz loc_420984  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_42097C  +
lea eax [esp+1Eh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 2 +
mov [esp] eax +
call sub_429CF0  +
cmp eax 2 +
jnz loc_42097C  +
cmp byte ptr [esp+1Eh] 24h +
jnz loc_420970  +
cmp byte ptr [esp+1Fh] 24h +
jnz loc_420970  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_41F5F0  +
test eax eax +
jz loc_420998  +
mov eax ebx +
call sub_41FF40  +
test eax eax +
jz loc_420998  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_420961  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_420C50  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_4BD22C 1 +
call locret_488170  +
jmp loc_4208E7  +
***
mov eax [ebx+0A0h] +
cmp esi eax +
jz loc_4209B2  +
test eax eax +
jz loc_4209B2  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_425AA0  +
mov [ebx+0A0h] esi +
xor eax eax +
jmp loc_42097E  +
***
mov eax off_492AE8 +
jmp eax  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
retn   +
***
mov eax [esp+28h+arg_0] +
cmp eax 14h +
jz loc_420A40  +
cmp eax 1 +
jz loc_420A81  +
cmp eax 15h +
mov edx 15h +
cmovbe edx eax +
mov eax ds:off_49BCA0[edx*4] +
add esp 28h +
pop ebx  +
retn   +
mov eax ds:dword_4BD234 +
mov [esp+28h+var_28] eax +
call sub_420A10  +
mov ebx eax +
mov eax ds:dword_4BD238 +
mov eax [eax] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] offset aErrorReadingSS +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_48C5A0  +
cmp eax 0FFFFFFFFh +
mov eax ebx +
cmovnz eax [esp+28h+var_C] +
add esp 28h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+0] eax +
call sub_488180  +
jmp loc_420A34  +
***
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
test ebx ebx +
mov eax ds:dword_4BD23C +
jz loc_420AC6  +
cmp byte ptr [ebx] 0 +
jnz loc_420B00  +
mov [esp+18h+var_18] eax +
call sub_420A10  +
mov [esp+18h+var_14] offset aS_17 +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
mov [esp+18h+var_18] eax +
call sub_420A10  +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aSS_8 +
mov [esp+18h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
jmp loc_420AEA  +
***
mov eax [esp+arg_0] +
mov ds:dword_4BD230 eax +
retn   +
***
mov eax off_492AE8 +
retn   +
***
mov edx [esp+4] +
mov eax off_492AE4 +
mov off_492AE4 edx +
retn   +
***
mov eax off_492AE4 +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
mov [eax+48h] edx +
mov edx [esp+arg_C] +
mov [eax+4Ch] edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] offset aGnuBinutils2_2 +
mov [esp+1Ch+var_1C] offset aBfdSAssertionF +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] eax +
call off_492AE4  +
add esp 1Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_420C1D  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternalEr +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_492AE8  +
mov [esp+2Ch+var_2C] offset aPleaseReportTh +
call off_492AE8  +
mov [esp+2Ch+var_2C] 1 +
call _exit  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternal_0 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_492AE8  +
jmp loc_420C04  +
***
sub esp 1Ch +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_420CC0  +
mov eax [edx+4] +
mov eax [eax+140h] +
add esp 1Ch +
jmp eax  +
mov [esp+1Ch+var_1C] 5 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov edx [esp+14h+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_420D04  +
mov eax [edx+4] +
mov eax [eax+144h] +
add esp 14h +
pop ebx  +
pop esi  +
jmp eax  +
mov [esp+14h+var_14] 5 +
call sub_420C50  +
add esp 14h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ecx [esp+18h+arg_4] +
movzx edx byte ptr [eax+28h] +
mov ebx edx +
and ebx 7 +
cmp bl 1 +
jnz loc_420D77  +
and edx 8 +
jnz loc_420D64  +
mov edx [eax+28h] +
mov ebx ecx +
and ebx 3FFFFh +
shl ebx 5 +
and edx 0FF80001Fh +
or edx ebx +
mov [eax+28h] edx +
mov eax [eax+4] +
mov edx [eax+10h] +
and edx ecx +
cmp edx ecx +
jz loc_420D90  +
mov [esp+18h+var_18] 5 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_18] 3 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 41Ch +
mov eax ds:_iob +
mov edi [esp+41Ch+arg_0] +
add eax 20h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
mov eax ds:dword_4BD230 +
test eax eax +
jz loc_42108C  +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
mov [esp+41Ch+var_418] offset aS +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fprintf  +
lea eax [esp+41Ch+arg_4] +
mov ebp 3E7h +
mov [esp+41Ch+var_41C] edi +
mov [esp+41Ch+var_400] eax +
call strlen  +
sub ebp eax +
cmp ebp 3E8h +
ja loc_4210F9  +
lea eax [esp+41Ch+var_3F4] +
mov ecx edi +
mov esi edi +
mov [esp+41Ch+var_408] eax +
lea esi [esi+0] +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] ecx +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_420F6A  +
movzx eax byte ptr [eax+1] +
test al al +
jz loc_420F6A  +
sub eax 41h +
cmp al 1 +
lea ecx [ebx+2] +
ja loc_420E20  +
mov esi ebx +
sub esi edi +
mov [esp+41Ch+var_418] edi +
mov edi [esp+41Ch+var_408] +
mov [esp+41Ch+var_414] esi +
mov [esp+41Ch+var_404] ecx +
mov [esp+41Ch+var_41C] edi +
call memcpy  +
mov ecx [esp+41Ch+var_404] +
test ebp ebp +
lea edx [edi+esi] +
mov edi ecx +
jnz loc_420E91  +
lea eax [edx+2] +
mov byte ptr [edx] 2Ah +
lea esi [esp+41Ch+var_3F4] +
mov [esp+41Ch+var_408] eax +
mov byte ptr [edx+1] 2Ah +
mov byte ptr [edx+2] 0 +
jmp loc_420E20  +
mov eax [esp+41Ch+var_400] +
cmp byte ptr [ebx+1] 42h +
lea ebx [eax+4] +
mov eax [eax] +
jz loc_420FEE  +
test eax eax +
jz loc_421105  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_420ECE  +
mov ecx [ecx+4] +
mov ecx [ecx+4] +
cmp ecx 5 +
jz loc_421035  +
cmp ecx 2 +
jz loc_421055  +
mov eax [eax] +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_414] offset aS_12 +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_408] edx +
call sub_4209D0  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
mov [esp+41Ch+var_41C] edx +
add ebp 2 +
xor esi esi +
mov [esp+41Ch+var_408] edx +
call strlen  +
mov edx [esp+41Ch+var_408] +
sub ebp eax +
lea ebx [edx+eax] +
mov eax edx +
jmp loc_420F18  +
add eax 1 +
add esi 1 +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] eax +
call strchr  +
test eax eax +
jnz loc_420F12  +
lea eax [ebx+esi] +
cmp ebp esi +
mov [esp+41Ch+var_408] eax +
jb loc_420FC5  +
sub ebp esi +
test esi esi +
jnz loc_420F46  +
jmp loc_420F5F  +
sub ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 25h +
mov [ebx+esi] al +
jnz loc_420F43  +
sub esi 1 +
sub ebx 1 +
mov byte ptr [ebx+esi+1] 25h +
test esi esi +
jnz loc_420F46  +
mov ecx edi +
lea esi [esp+41Ch+var_3F4] +
jmp loc_420E20  +
lea eax [esp+41Ch+var_3F4] +
cmp esi eax +
jz loc_4210B9  +
mov eax [esp+41Ch+var_400] +
mov [esp+41Ch+var_418] esi +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+41Ch+var_41C] 0Ah +
add eax 40h +
mov [esp+41Ch+var_418] eax +
call fputc  +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
add esp 41Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
sub eax ebp +
mov edx eax +
neg edx  +
add [esp+41Ch+var_408] edx +
add ebx edx +
xor edx edx +
cmp byte ptr [ebx+eax-1] 25h +
setz dl  +
sub esi edx +
sub eax 1 +
jnz loc_420FD3  +
mov byte ptr [ebx] 0 +
xor ebp ebp +
jmp loc_420F3D  +
test eax eax +
jz loc_4210DD  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_420ECE  +
mov esi [eax] +
mov eax [ecx] +
mov [esp+41Ch+var_414] offset aSS +
mov [esp+41Ch+var_40C] esi +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_408] edx +
call sub_4209D0  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
jmp loc_420EF4  +
mov ecx [eax+8Ch] +
mov esi [ecx+7Ch] +
test esi esi +
jz loc_420ECE  +
test byte ptr [eax+17h] 2 +
jnz loc_420ECE  +
mov ecx [ecx+74h] +
jmp loc_421070  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_420ECE  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jz loc_420ECE  +
mov ecx [ecx] +
test ecx ecx +
jz loc_420ECE  +
mov eax [eax] +
mov [esp+41Ch+var_40C] ecx +
mov [esp+41Ch+var_414] offset aSS_0 +
mov [esp+41Ch+var_410] eax +
jmp loc_421018  +
mov eax ds:_iob +
mov [esp+41Ch+var_414] 5 +
mov [esp+41Ch+var_418] 1 +
mov [esp+41Ch+var_41C] offset aBfd +
add eax 40h +
mov [esp+41Ch+var_410] eax +
call fwrite  +
jmp loc_420DEA  +
mov [esp+41Ch+var_41C] edi +
call strlen  +
mov [esp+41Ch+var_418] edi +
add eax 1 +
mov [esp+41Ch+var_414] eax +
mov eax [esp+41Ch+var_408] +
mov [esp+41Ch+var_41C] eax +
call memcpy  +
jmp loc_420F76  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2BAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_420BD0  +
mov [esp+41Ch+var_41C] 1 +
call _exit  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2CAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_420BD0  +
jmp loc_421130  +
sub esp 1Ch +
mov eax [esp+438h+var_418] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_421157  +
mov [esp+438h+var_438] eax +
call sub_423730  +
cmp eax 21h +
sbb eax eax +
add esp 1Ch +
and eax 0FFFFFFE0h +
add eax 40h +
retn   +
mov eax [edx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_421257  +
mov edx [eax] +
mov ecx 9 +
mov edi offset aCoffGo32 +
mov eax 1 +
mov esi edx +
cmps   +
setnbe bl  +
setb cl  +
cmp bl cl +
jz loc_421250  +
mov edi offset aPeI386 +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_421250  +
mov edi offset aPeiI386 +
mov ecx 9 +
mov esi edx +
cmps   +
jz loc_421250  +
mov edi offset aPeX8664 +
mov ecx 0Ah +
mov esi edx +
cmps   +
jz loc_421250  +
mov edi offset aPeiX8664 +
mov ecx 0Bh +
mov esi edx +
cmps   +
jz loc_421250  +
mov edi offset aPeArmWinceLitt +
mov ecx 14h +
mov esi edx +
cmps   +
jz loc_421250  +
mov edi offset aPeiArmWinceLit +
mov ecx 15h +
mov esi edx +
cmps   +
jz loc_421250  +
mov edi offset aAixcoffRs6000 +
mov ecx 0Fh +
mov esi edx +
cmps   +
jz loc_421250  +
mov esi edx +
mov edi offset aMachO +
mov ecx 6 +
cmps   +
setnbe al  +
setb dl  +
sub eax edx +
movsx eax al +
test eax eax +
jz loc_421250  +
mov dword ptr [esp] 3 +
call sub_420C50  +
or eax 0FFFFFFFFh +
nop   +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
shr al 7 +
movzx eax al +
retn   +
***
jmp sub_421280  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov [eax+74h] edx +
mov eax 1 +
retn   +
***
jmp loc_4212A0  +
mov ecx [esp+4] +
xor eax eax +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 1 +
jz loc_4212B4  +
retn   +
***
mov edx [ecx+4] +
mov edx [edx+4] +
cmp edx 3 +
jz loc_4212D1  +
cmp edx 5 +
jnz locret_4212B2  +
mov eax [ecx+0A0h] +
mov eax [eax+210h] +
retn   +
***
mov eax [ecx+0A0h] +
mov eax [eax+1Ch] +
retn   +
***
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jz loc_421390  +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+4] +
cmp eax 3 +
jz loc_4213B4  +
cmp eax 5 +
jnz loc_421386  +
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+20Ch] ecx +
add esp 1Ch +
retn   +
***
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+18h] ecx +
jmp loc_421386  +
***
push esi  +
push ebx  +
mov ecx [esp+arg_8] +
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
mov esi [esp+arg_C] +
cmp dword ptr [ecx+4] 1 +
mov edi [esp+arg_10] +
mov eax edx +
mov ebp [esp+arg_14] +
jnz loc_421422  +
mov eax [ecx+10h] +
mov eax [eax+94h] +
test eax eax +
cmovz eax edx +
mov eax [eax+4] +
mov eax [eax+15Ch] +
mov [esp+arg_14] ebp +
mov [esp+arg_10] edi +
mov [esp+arg_C] esi +
mov [esp+arg_8] ecx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_421470  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+40h] +
mov [esp] ebx +
lea edi ds:0FFFFFFFCh[eax*4] +
lea eax [edi+2Ch] +
mov [esp+4] eax +
call sub_425930  +
test eax eax +
mov esi eax +
jz loc_421540  +
mov eax [esp+24h] +
movzx edx byte ptr [esi+20h] +
movzx ecx byte ptr [esp+28h] +
mov [esi+4] eax +
mov eax [esp+2Ch] +
and edx 0FFFFFFFCh +
and ecx 1 +
or edx ecx +
movzx ecx byte ptr [esp+38h] +
mov [esi+8] eax +
mov eax [esp+34h] +
and ecx 1 +
mov [esi+0Ch] eax +
movzx eax byte ptr [esp+30h] +
shl ecx 4 +
and eax 1 +
add eax eax +
or edx eax +
movzx eax byte ptr [esp+3Ch] +
and edx 0FFFFFFCFh +
or edx ecx +
and eax 1 +
shl eax 5 +
or edx eax +
mov eax [esp+40h] +
mov [esi+20h] dl +
test eax eax +
mov [esi+24h] eax +
jnz loc_421520  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov ecx [eax] +
test ecx ecx +
jnz loc_421507  +
jmp loc_421547  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_421505  +
mov [ecx] esi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+44h] +
lea eax [esi+28h] +
add edi 4 +
mov [esp+8] edi +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
jmp loc_4214F1  +
***
xor eax eax +
jmp loc_421468  +
***
mov ecx eax +
lea esi [esi+0] +
jmp loc_42150D  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx_2 +
mov [esp+arg_0] eax +
jmp sprintf  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx_2 +
mov [esp+arg_0] eax +
jmp fprintf  +
***
mov ecx [esp+arg_0] +
xor eax eax +
mov edx [ecx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_4215B1  +
retn   +
cmp [esp+arg_4] 1 +
jz loc_4215F2  +
cmp [esp+arg_4] 2 +
jz loc_4215E0  +
cmp [esp+arg_4] 0 +
jnz locret_4215AF  +
mov eax [edx+1B0h] +
mov edx [eax+8] +
mov eax [ecx+0A0h] +
mov [eax+26h] dx +
mov eax 1 +
retn   +
mov edx [edx+1B0h] +
mov edx [edx+170h] +
test edx edx +
jnz loc_4215CF  +
retn   +
mov edx [edx+1B0h] +
mov edx [edx+16Ch] +
test edx edx +
jnz loc_4215CF  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_42AEB0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_42163E  +
cmp dword ptr [edx+4] 5 +
jnz loc_42163E  +
mov eax [edx+1B0h] +
mov eax [eax+10h] +
add esp 1Ch +
retn   +
***
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_42AEB0  +
test eax eax +
mov edx eax +
jnz loc_421682  +
jmp loc_4216A0  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_4216A0  +
cmp edx eax +
jz loc_4216A0  +
cmp dword ptr [edx+4] 5 +
jnz loc_421674  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+10h] ebx +
test edx edx +
jnz loc_42167E  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_42AEB0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4216DE  +
cmp dword ptr [edx+4] 5 +
jnz loc_4216DE  +
mov eax [edx+1B0h] +
mov eax [eax+18h] +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov ebx [esp+24h] +
mov [esp] eax +
call sub_42AEB0  +
test eax eax +
mov edx eax +
jnz loc_421722  +
jmp loc_421740  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_421740  +
cmp edx eax +
jz loc_421740  +
cmp dword ptr [edx+4] 5 +
jnz loc_421714  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+18h] ebx +
test edx edx +
jnz loc_42171E  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
test eax eax +
jz loc_421943  +
mov ecx [esp+44h] +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_4218C3  +
mov eax [eax+4] +
cmp dl [eax+18h] +
jz loc_421957  +
mov dword ptr [esp+18h] 0 +
cmp dl 2Eh +
jnz loc_42197A  +
mov ebp [esp+44h] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
cmp al 24h +
jz loc_421793  +
cmp al 2Eh +
jz loc_421793  +
mov eax ebp +
mov edi ebp +
sub eax [esp+44h] +
mov [esp+14h] eax +
mov dword ptr [esp+4] 40h +
mov [esp] ebp +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_4218E0  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov esi eax +
jz loc_421973  +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] eax +
call memcpy  +
mov eax [esp+48h] +
mov byte ptr [esi+edi] 0 +
mov [esp] esi +
mov [esp+4] eax +
call sub_4831E0  +
mov [esp] esi +
mov edi eax +
call free  +
test edi edi +
jz loc_421900  +
test ebx ebx +
jnz loc_421829  +
mov edx [esp+14h] +
mov eax edi +
test edx edx +
jz loc_4218BB  +
mov [esp] edi +
call strlen  +
mov esi eax +
add eax edi +
test ebx ebx +
cmovz ebx eax +
mov [esp] ebx +
call strlen  +
mov ecx [esp+14h] +
mov [esp+1Ch] esi +
add ecx esi +
mov esi ecx +
add eax 1 +
mov [esp+18h] eax +
add eax ecx +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_4218B1  +
mov edx [esp+14h] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call memcpy  +
mov edx [esp+14h] +
mov [esp+4] edi +
lea eax [ebp+edx+0] +
mov edx [esp+1Ch] +
mov [esp] eax +
mov [esp+8] edx +
call memcpy  +
mov ecx [esp+18h] +
mov eax esi +
add eax ebp +
mov [esp+4] ebx +
mov [esp] eax +
mov [esp+8] ecx +
call memcpy  +
mov [esp] edi +
call free  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+18h] 0 +
mov edi [esp+44h] +
mov dword ptr [esp+14h] 0 +
mov ebp edi +
jmp loc_4217AE  +
***
mov eax [esp+48h] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_4831E0  +
mov edi eax +
test edi edi +
jnz loc_421817  +
lea esi [esi+0] +
mov ecx [esp+18h] +
test ecx ecx +
jz loc_421973  +
mov eax [esp+44h] +
mov [esp] eax +
call strlen  +
lea ebx [eax+1] +
mov [esp] ebx +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_421973  +
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp] ebp +
mov [esp+4] eax +
call memcpy  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
movzx edx byte ptr [eax] +
jmp loc_421786  +
***
mov eax [esp+44h] +
mov dword ptr [esp+18h] 1 +
movzx edx byte ptr [eax+1] +
add eax 1 +
mov [esp+44h] eax +
jmp loc_421786  +
***
xor eax eax +
jmp loc_4218BB  +
***
cmp dl 24h +
jz loc_42178F  +
jmp loc_4218CB  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
test ah 40h +
jz loc_421AD5  +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_4219C6  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax 20000h +
jz loc_421AA0  +
mov ecx [edx+1B0h] +
mov eax [edi+8Ch] +
or dword ptr [eax+8] 800h +
mov eax [ecx+174h] +
cmp byte ptr [eax+0Ch] 1 +
mov eax [edx+30h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 1 +
jz loc_421A60  +
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
mov eax [eax+30h] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] 0 +
call eax  +
mov eax [ebx+4] +
lea edx [esi+8] +
add esi 10h +
mov eax [eax+24h] +
mov [esp+10h+var_8] edx +
mov ecx [edi+24h] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] ecx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+24h] +
mov eax 1 +
mov [esp+10h+arg_8] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
sar eax 1Fh +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
call eax  +
mov eax [ebx+4] +
lea ecx [esi+4] +
mov edx [edi+24h] +
add esi 8 +
mov eax [eax+30h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+30h] +
mov eax 1 +
mov [esp+10h+arg_4] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
mov eax [edi+8Ch] +
add esi 4 +
and dword ptr [eax+8] 0FFFFF7FFh +
mov dword ptr [esi-4] 42494C5Ah +
mov [esp+10h+arg_8] esi +
mov eax [edi+24h] +
mov [esp+10h+arg_4] 0 +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_42BA70  +
mov [esp+10h+var_8] offset aBfd_update_com +
mov [esp+10h+var_C] 7E8h +
mov [esp+10h+var_10] offset a____BinutilsBf +
call sub_420BD0  +
jmp sub_421B00  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_421B20  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [esp+10h+arg_8] +
mov edx [ecx+8Ch] +
test byte ptr [edx+9] 8 +
jz loc_421B13  +
mov edx [eax+1B0h] +
mov eax [eax+28h] +
mov edx [edx+174h] +
cmp byte ptr [edx+0Ch] 1 +
jz loc_421B95  +
mov edi [esp+10h+arg_4] +
mov [esp+10h+var_10] edi +
call eax  +
mov edi [esp+10h+arg_4] +
lea edx [edi+8] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov edi eax +
mov eax [ebx+4] +
mov edx [eax+1Ch] +
mov eax [esp+10h+arg_4] +
add eax 10h +
mov [esp+10h+var_10] eax +
call edx  +
cmp esi 1 +
jnz loc_421B13  +
mov ecx [esp+10h+arg_8] +
mov ecx [ecx+40h] +
shl esi cl +
cmp eax esi +
jnz loc_421B13  +
mov eax [esp+10h+arg_C] +
mov [eax] edi +
mov eax 1 +
jmp loc_421B15  +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+4] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+8] +
mov edi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
jmp loc_421B76  +
***
mov ecx [esp+arg_0] +
xor eax eax +
mov edx [ecx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_421BE1  +
retn   +
cmp [esp+arg_4] 0 +
jz loc_421C16  +
mov ecx [esp+arg_4] +
mov ecx [ecx+8Ch] +
test byte ptr [ecx+9] 8 +
jz locret_421BDF  +
mov eax [edx+1B0h] +
mov edx [eax+174h] +
mov eax 0Ch +
cmp byte ptr [edx+0Ch] 1 +
mov edx 18h +
cmovnz eax edx +
retn   +
test byte ptr [ecx+2Ah] 40h +
jnz loc_421BF8  +
retn   +
***
sub esp 8 +
mov edx [esp+8+arg_0] +
mov ebx [esp+8+arg_C] +
test byte ptr [edx+2Ah] 10h +
jnz loc_421C3C  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_421C44  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov ecx [esp+8+arg_8] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_421C3C  +
mov eax [eax+1B0h] +
mov esi [eax+174h] +
mov eax [ecx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [esi+0Ch] al +
jz loc_421C3C  +
mov eax [esp+8+arg_4] +
mov [esp+8+var_8] edx +
mov [esp+8+var_4] eax +
call sub_421BD0  +
test eax eax +
jz loc_421C3C  +
lea edx [ebx+0Ch] +
sub ebx 0Ch +
cmp eax 0Ch +
cmovz ebx edx +
jmp loc_421C3C  +
***
push esi  +
mov esi 1 +
push ebx  +
sub esp 2Ch +
mov ebx [esp+30h+arg_0] +
test byte ptr [ebx+2Ah] 10h +
jnz loc_421CBF  +
mov ebp [ebx+4] +
cmp dword ptr [ebp+4] 5 +
jz loc_421CD0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+30h+arg_8] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_421CBF  +
mov eax [eax+1B0h] +
mov edx [ebp+1B0h] +
mov eax [eax+174h] +
mov edx [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+0Ch] al +
jz loc_421CBF  +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_30] ebx +
mov [esp+30h+var_2C] eax +
call sub_421BD0  +
test eax eax +
mov edi eax +
jz loc_421CBF  +
mov eax [esp+30h+arg_C] +
cmp edi 0Ch +
mov esi [eax] +
mov eax [ebp+28h] +
mov [esp+30h+var_30] esi +
jz loc_421DD4  +
call eax  +
mov eax [ebx+4] +
lea ebp [esi+8] +
mov eax [eax+1Ch] +
mov [esp+30h+var_30] ebp +
call eax  +
lea edx [esi+10h] +
mov [esp+30h+var_14] eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp+30h+var_30] edx +
call eax  +
mov ecx [esp+30h+arg_4] +
mov ebx [ecx+24h] +
mov [esp+30h+var_18] eax +
sub ebx edi +
lea ecx [ebx+0Ch] +
mov [esp+30h+var_1C] ecx +
mov ecx [esp+30h+arg_8] +
mov eax [ecx+4] +
mov eax [eax+30h] +
mov [esp+30h+var_2C] esi +
mov [esp+30h+var_30] 1 +
call eax  +
mov ecx [esp+30h+arg_8] +
lea edx [esi+4] +
add esi 0Ch +
mov eax [ecx+4] +
mov ecx [esp+30h+var_14] +
mov eax [eax+30h] +
mov [esp+30h+var_2C] edx +
mov [esp+30h+var_30] ecx +
call eax  +
mov ecx [esp+30h+arg_8] +
mov eax [ecx+4] +
mov ecx [esp+30h+var_18] +
mov eax [eax+30h] +
mov [esp+30h+var_2C] ebp +
mov [esp+30h+var_30] ecx +
call eax  +
mov eax [esp+30h+arg_C] +
mov [esp+30h+var_28] ebx +
add edi [eax] +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_2C] edi +
call memmove  +
mov eax [esp+30h+arg_10] +
mov esi 1 +
mov ecx [esp+30h+var_1C] +
mov [eax] ecx +
jmp loc_421CBF  +
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
add esi 8 +
mov eax [eax+28h] +
mov [esp+30h+var_30] edx +
call eax  +
mov ebp eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+30h+var_30] esi +
call eax  +
mov edi eax +
mov eax [esp+30h+arg_4] +
mov eax [eax+24h] +
lea esi [eax-0Ch] +
add eax 0Ch +
mov [esp+30h+var_30] eax +
mov [esp+30h+var_1C] eax +
call sub_42B400  +
test eax eax +
mov ebx eax +
jz loc_421EBF  +
mov eax [esp+30h+arg_8] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] 1 +
call eax  +
mov eax [esp+30h+arg_8] +
lea edx [ebx+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+30h+var_2C] edx +
mov [esp+30h+var_30] 0 +
call eax  +
mov eax [esp+30h+arg_8] +
lea edx [ebx+8] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_30] ebp +
mov [esp+30h+var_2C] 0 +
call eax  +
mov eax [esp+30h+arg_8] +
lea edx [ebx+10h] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_30] edi +
mov [esp+30h+var_2C] 0 +
call eax  +
mov edi [esp+30h+arg_C] +
lea eax [ebx+18h] +
mov edi [edi] +
mov [esp+30h+var_28] esi +
mov [esp+30h+var_30] eax +
lea edx [edi+0Ch] +
mov [esp+30h+var_2C] edx +
mov [esp+30h+var_18] edi +
call memcpy  +
mov eax [esp+30h+arg_C] +
mov eax [eax] +
mov [esp+30h+var_30] eax +
call free  +
mov eax [esp+30h+arg_C] +
mov [eax] ebx +
jmp loc_421DC0  +
xor esi esi +
jmp loc_421CBF  +
***
push edi  +
mov ecx 0Eh +
push esi  +
push ebx  +
sub esp 5Ch +
lea ebx [esp+68h+var_50] +
mov esi [esp+68h+arg_0] +
mov [esp+68h+var_5C] eax +
mov edi ebx +
xor eax eax +
stos   +
mov eax [esp+68h+var_5C] +
mov [esp+68h+var_60] 38h +
mov [esp+68h+var_64] offset a1_2_7 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_4C] edx +
mov [esp+68h+var_50] eax +
mov [esp+68h+var_40] esi +
call sub_46B060  +
mov ecx [esp+68h+var_4C] +
test ecx ecx +
mov edi eax +
jnz loc_421F5D  +
jmp loc_421F65  +
test edi edi +
jnz loc_421F65  +
mov ecx esi +
sub ecx eax +
mov eax ecx +
add eax ebp +
mov [esp+68h+var_64] 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_44] eax +
call sub_46B100  +
cmp eax 1 +
mov edi eax +
jnz loc_421F65  +
mov [esp+68h+var_68] ebx +
call sub_46AE80  +
mov edx [esp+68h+var_4C] +
test edx edx +
mov edi eax +
jz loc_421F65  +
mov eax [esp+68h+var_40] +
test eax eax +
jnz loc_421F24  +
mov [esp+68h+var_68] ebx +
call sub_46CF10  +
xor edx edx +
or eax edi +
jnz loc_421F7E  +
mov eax [esp+68h+var_40] +
xor edx edx +
test eax eax +
setz dl  +
add esp 5Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov ebx [esp+3Ch+arg_4] +
movzx eax byte ptr [eax+28h] +
mov edi [esi] +
and eax 18h +
cmp al 10h +
jz loc_421FF0  +
mov ebp [ebx+28h] +
test ebp ebp +
jz loc_421FF0  +
movzx eax byte ptr [ebx+18h] +
shr al 4 +
and eax 3 +
cmp eax 1 +
jz loc_422010  +
cmp eax 2 +
jz loc_422090  +
test eax eax +
jz loc_422040  +
mov [esp+3Ch+var_34] offset aBfd_get_full_s +
mov [esp+3Ch+var_38] 145h +
mov [esp+3Ch+var_3C] offset a____Binutils_5 +
call sub_420BD0  +
nop   +
mov ebp [ebx+24h] +
test ebp ebp +
jnz loc_421FB7  +
mov dword ptr [esi] 0 +
mov ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_4221A2  +
test edi edi +
jz loc_4221A9  +
cmp edi eax +
mov ebx 1 +
jz loc_422002  +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call memcpy  +
jmp loc_422002  +
test edi edi +
jz loc_422190  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_41EF20  +
test eax eax +
jnz loc_42217D  +
cmp [esi] edi +
jz loc_4221A2  +
mov [esp+3Ch+var_3C] edi +
xor ebx ebx +
call free  +
jmp loc_422002  +
mov eax [ebx+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_42B400  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_18] eax +
jz loc_4221A2  +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+3Ch+var_10] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+28h] 0 +
mov [ebx+24h] eax +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] ebx +
call sub_41EF20  +
mov edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
mov [ebx+28h] edx +
movzx edx byte ptr [ebx+18h] +
mov [ebx+24h] ecx +
and edx 0FFFFFFCFh +
or edx 20h +
test eax eax +
mov [ebx+18h] dl +
jz loc_42215E  +
test edi edi +
jz loc_4221C1  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_421BD0  +
mov edx 0Ch +
mov ecx edi +
test eax eax +
cmovz eax edx +
mov edx [ebx+2Ch] +
add eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_421ED0  +
test eax eax +
jnz loc_422171  +
mov [esp+3Ch+var_3C] 11h +
call sub_420C50  +
cmp [esi] edi +
jz loc_42215E  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov eax [esp+3Ch+var_18] +
xor ebx ebx +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_422002  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov [esi] edi +
mov ebx 1 +
jmp loc_422002  +
mov [esp+3Ch+var_3C] ebp +
call sub_42B400  +
test eax eax +
mov edi eax +
jnz loc_422048  +
xor ebx ebx +
jmp loc_422002  +
mov [esp+3Ch+var_3C] ebp +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_4221A2  +
mov [esi] eax +
mov eax [ebx+6Ch] +
jmp loc_422023  +
mov [esp+3Ch+var_3C] ebp +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_42215E  +
jmp loc_422117  +
***
mov eax [esp+4] +
movzx edx byte ptr [eax+18h] +
mov ecx edx +
and ecx 30h +
cmp cl 20h +
jnz loc_4221FB  +
and edx 0FFFFFFCFh +
or edx 10h +
mov [eax+18h] dl +
mov edx [esp+8] +
or dword ptr [eax+14h] 4000h +
mov [eax+6Ch] edx +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
movzx ebp byte ptr [ebx+18h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
mov eax ebp +
shr al 4 +
mov ebp eax +
call sub_421BD0  +
and ebp 3 +
cmp eax 18h +
mov [esp+4Ch+var_30] eax +
jg loc_422386  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_4222B5  +
and byte ptr [ebx+18h] 0CFh +
lea esi [esp+4Ch+var_24] +
mov [esp+4Ch+var_38] 0Ch +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_41EF20  +
test eax eax +
jnz loc_422322  +
mov eax [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
xor eax eax +
movzx edx byte ptr [ebx+18h] +
and ebp 3 +
shl ebp 4 +
mov ecx [esp+4Ch+var_30] +
and edx 0FFFFFFCFh +
or edx ebp +
mov [ebx+18h] dl +
mov edx [esp+4Ch+arg_8] +
mov [edx] ecx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_30] +
lea esi [esp+4Ch+var_24] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_38] eax +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_41EF20  +
test eax eax +
jz loc_422286  +
mov eax [ebx+24h] +
mov ecx [esp+4Ch+arg_C] +
mov [ecx] eax +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] edi +
call sub_421B00  +
mov edx eax +
mov eax 1 +
test edx edx +
mov edx 0FFFFFFFFh +
cmovnz edx [esp+4Ch+var_30] +
mov [esp+4Ch+var_30] edx +
jmp loc_422291  +
mov ecx 4 +
mov edi offset aZlib_0 +
cmps   +
mov ecx [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] ecx +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_42228F  +
mov esi [ebx] +
mov edi offset a_debug_str +
mov ecx 0Bh +
cmps   +
jnz loc_42236A  +
movzx edx byte ptr [esp+4Ch+var_20] +
xor eax eax +
test ds:byte_4B8120[edx+edx] 10h +
jnz loc_422291  +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] eax +
call sub_42B7F0  +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
mov eax 1 +
jmp loc_422291  +
mov [esp+4Ch+var_44] offset aBfd_is_section +
mov [esp+4Ch+var_48] 17Eh +
mov [esp+4Ch+var_4C] offset a____Binutils_5 +
call sub_420BD0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] ecx +
call sub_421BD0  +
mov [esp+98h+var_94] ebx +
mov [esp+98h+var_98] esi +
mov ebp eax +
lea eax [esp+98h+var_6C] +
mov [esp+98h+var_8C] eax +
lea eax [esp+98h+var_70] +
mov [esp+98h+var_90] eax +
call sub_422210  +
test ebp ebp +
mov edx 0Ch +
cmovz ebp edx +
test eax eax +
jz loc_4224A0  +
mov eax [esp+98h+var_70] +
test eax eax +
js loc_422603  +
mov edx [esp+98h+var_48] +
sub edx eax +
test eax eax +
jnz loc_422424  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_70] 0Ch +
lea edx [eax-0Ch] +
mov ecx [esp+98h+var_6C] +
lea eax [edx+ebp] +
mov [esp+98h+var_74] eax +
cmp eax ecx +
jbe loc_422582  +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_7C] edx +
mov [esp+98h+var_80] ecx +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_422578  +
mov eax [esp+98h+var_6C] +
mov ecx [esp+98h+var_80] +
mov edx [esp+98h+var_7C] +
mov [ebx+24h] eax +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov ecx edi +
call sub_421ED0  +
test eax eax +
jnz loc_4225DB  +
mov [esp+98h+var_98] 11h +
call sub_420C50  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_425AA0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_98] eax +
call sub_46D580  +
mov [esp+98h+var_98] esi +
add eax ebp +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_74] eax +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_422578  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_74] +
mov [esp+98h+var_94] eax +
lea eax [edi+ebp] +
mov [esp+98h+var_98] eax +
call sub_46D540  +
test eax eax +
jnz loc_422560  +
mov ecx [esp+98h+var_74] +
add ecx ebp +
cmp [esp+98h+var_48] ecx +
mov [esp+98h+var_74] ecx +
jbe loc_422540  +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_421990  +
nop   +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
mov eax [esp+98h+var_74] +
mov [ebx+6Ch] edi +
mov [ebx+24h] eax +
movzx eax byte ptr [ebx+18h] +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_48] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_425AA0  +
mov eax [esp+98h+var_84] +
and byte ptr [ebx+18h] 0CFh +
mov [ebx+6Ch] eax +
mov eax [esp+98h+var_48] +
jmp loc_422537  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_425AA0  +
mov [esp+98h+var_98] 11h +
call sub_420C50  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_80] edx +
call sub_425850  +
mov edx [esp+98h+var_80] +
test eax eax +
mov edi eax +
jz loc_422578  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
mov [ebx+24h] eax +
mov [esp+98h+var_80] edx +
call sub_421990  +
mov edx [esp+98h+var_80] +
lea ecx [edi+ebp] +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] eax +
call memmove  +
jmp loc_422510  +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
movzx eax byte ptr [ebx+18h] +
mov [ebx+6Ch] edi +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_6C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aBfd_compress_s +
mov [esp+98h+var_94] 66h +
mov [esp+98h+var_98] offset a____Binutils_5 +
call sub_420BD0  +
nop   +
sub esp 2Ch +
lea eax [esp+0C4h+var_A8] +
mov [esp+0C4h+var_B8] eax +
lea eax [esp+0C4h+var_AC] +
mov [esp+0C4h+var_BC] eax +
mov eax [esp+0C4h+var_90] +
mov [esp+0C4h+var_C0] eax +
mov eax [esp+0C4h+var_94] +
mov [esp+0C4h+var_C4] eax +
call sub_422210  +
xor edx edx +
test eax eax +
jz loc_422660  +
mov ecx [esp+0C4h+var_AC] +
test ecx ecx +
js loc_422660  +
mov eax [esp+0C4h+var_A8] +
xor edx edx +
test eax eax +
setnz dl  +
mov eax edx +
add esp 2Ch +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx ecx byte ptr [esi+28h] +
and ecx 18h +
cmp cl 8 +
jnz loc_4227C0  +
mov edi [ebx+24h] +
test edi edi +
jz loc_4227C0  +
mov edx [ebx+28h] +
test edx edx +
jnz loc_4227C0  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_4227D6  +
mov [esp+2Ch+var_2C] 5 +
call sub_420C50  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+18h] 30h +
jnz loc_4227C0  +
mov [esp+2Ch+var_2C] edi +
call sub_42B400  +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov ebp eax +
call sub_41EF20  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4227CE  +
mov [esp+2Ch+var_2C] edi +
mov ecx ebp +
mov edx ebx +
mov eax esi +
call loc_4223B0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4227CE  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
movzx ecx byte ptr [eax+28h] +
mov ebx [edx+24h] +
and ecx 18h +
cmp cl 10h +
jnz loc_42285E  +
test ebx ebx +
jz loc_42285E  +
mov ecx [esp+18h+arg_8] +
test ecx ecx +
jz loc_42285E  +
mov ecx [edx+6Ch] +
test ecx ecx +
jz loc_422871  +
mov [esp+18h+var_18] 5 +
call sub_420C50  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx+2Ch] +
test ecx ecx +
jnz loc_42285E  +
test byte ptr [edx+18h] 30h +
jnz loc_42285E  +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ebx +
call loc_4223B0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_42286C  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+8Ch+arg_8] +
mov ebx [esp+8Ch+arg_0] +
test eax eax +
jz loc_4228C9  +
mov eax [esp+8Ch+arg_8] +
mov dword ptr [eax] 0 +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_422CC0  +
and eax 7 +
cmp al 3 +
ja loc_422CC0  +
test al al +
jnz loc_422E20  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_422E4B  +
mov eax ds:dword_49CE90 +
shl eax 3 +
mov [esp+8Ch+var_8C] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_422DB3  +
movzx eax byte ptr [ebx+28h] +
movzx edx byte ptr [esp+8Ch+arg_4] +
mov [esp+8Ch+var_44] 0 +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
mov [ebx+28h] al +
mov eax [ebx+4] +
test byte ptr [ebx+2Bh] 1 +
mov [esp+8Ch+var_70] eax +
jz loc_422CD9  +
mov eax ds:dword_49CE90 +
mov edi off_492AFC +
mov [esp+8Ch+var_50] eax +
mov eax [edi] +
test eax eax +
jz loc_423038  +
xor esi esi +
mov ecx 100h +
lea edx [ebx+48h] +
mov [esp+8Ch+var_60] esi +
mov esi ecx +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_6C] 0 +
mov [esp+8Ch+var_5C] 0 +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_58] edx +
mov [esp+8Ch+var_68] ebp +
jmp loc_4229A1  +
add edi 4 +
mov eax [edi] +
test eax eax +
jz loc_422B4F  +
cmp eax offset off_4AD4A0 +
jz loc_422994  +
test byte ptr [ebx+2Bh] 1 +
jnz loc_4229B4  +
cmp [esp+8Ch+var_70] eax +
jz loc_422994  +
movzx eax byte ptr [eax+1Bh] +
cmp eax esi +
jg loc_422994  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_49BE80 +
mov [esp+8Ch+var_8C] ebx +
call sub_41E6C0  +
mov eax [edi] +
mov [ebx+4] eax +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_429F00  +
test eax eax +
jnz loc_422E11  +
mov [esp+8Ch+var_8C] 3 +
call sub_420C50  +
movzx eax byte ptr [ebx+28h] +
mov ecx [ebx+4] +
and eax 7 +
mov eax [ecx+eax*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_422E03  +
mov eax [esp+8Ch+var_44] +
test eax eax +
jz loc_422A51  +
lea eax [esp+8Ch+var_28] +
mov [esp+8Ch+var_8C] eax +
call sub_42A2B0  +
mov [esp+8Ch+var_44] 0 +
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 2 +
jz loc_422DD0  +
cmp off_492AF4 ebp +
jz loc_423015  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jz loc_422A7B  +
mov ecx [esp+8Ch+var_6C] +
mov [eax+ecx*4] ebp +
movzx eax byte ptr [ebp+1Bh] +
add [esp+8Ch+var_6C] 1 +
cmp eax esi +
jl loc_422DC0  +
add [esp+8Ch+var_64] 1 +
mov [esp+8Ch+var_60] ebp +
mov eax [ebx+0A0h] +
mov [esp+8Ch+var_40] eax +
mov eax [ebx+84h] +
mov [esp+8Ch+var_38] eax +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
mov [esp+8Ch+var_3C] eax +
mov eax [ebx+64h] +
mov [esp+8Ch+var_34] eax +
mov eax [ebx+68h] +
mov [esp+8Ch+var_30] eax +
mov eax [ebx+6Ch] +
mov [esp+8Ch+var_2C] eax +
mov eax [ebx+48h] +
mov [esp+8Ch+var_28] eax +
mov eax [ebx+4Ch] +
mov [esp+8Ch+var_24] eax +
mov eax [ebx+50h] +
mov [esp+8Ch+var_20] eax +
mov eax [ebx+54h] +
mov [esp+8Ch+var_1C] eax +
mov eax [ebx+58h] +
mov [esp+8Ch+var_18] eax +
mov eax [ebx+5Ch] +
mov [esp+8Ch+var_14] eax +
mov eax [ebx+60h] +
mov [esp+8Ch+var_88] 1 +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_10] eax +
call sub_425850  +
test eax eax +
mov [esp+8Ch+var_44] eax +
jz loc_422E11  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_84] 0B8h +
mov [esp+8Ch+var_88] offset sub_41E5B0 +
mov [esp+8Ch+var_8C] eax +
call sub_42A280  +
test eax eax +
jz loc_422E11  +
add edi 4 +
mov eax [edi] +
mov [esp+8Ch+var_5C] ebp +
test eax eax +
jnz loc_4229A1  +
cmp [esp+8Ch+var_64] 1 +
mov ebp [esp+8Ch+var_68] +
mov [esp+8Ch+var_68] esi +
mov esi [esp+8Ch+var_60] +
jz loc_422E99  +
mov eax [esp+8Ch+var_6C] +
test eax eax +
jnz loc_422FD0  +
mov eax [esp+8Ch+var_54] +
cmp eax off_492AF4 +
jz loc_423027  +
mov eax [esp+8Ch+var_50] +
sub eax ds:dword_49CE90 +
cmp eax 1 +
mov [esp+8Ch+var_6C] eax +
jg loc_422EA6  +
cmp [esp+8Ch+var_6C] 1 +
jle loc_423076  +
mov [esp+8Ch+arg_0] ebx +
mov ecx off_492AF0 +
mov edi [esp+8Ch+var_6C] +
mov ebx [esp+8Ch+var_68] +
lea esi [esi+0] +
add ecx 4 +
mov esi [ecx-4] +
test esi esi +
jz loc_422E61  +
mov eax edi +
sub eax 1 +
js loc_422BC0  +
cmp [ebp+eax*4+0] esi +
jnz loc_422BD0  +
movzx edx byte ptr [esi+1Bh] +
cmp ebx edx +
jl loc_422BD0  +
mov ebx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_6C] 1 +
mov edi [esp+8Ch+var_44] +
test edi edi +
jz loc_422C95  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_42A2B0  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_425AA0  +
mov [esp+8Ch+var_44] 0 +
cmp [esp+8Ch+var_6C] 1 +
jz loc_422ED3  +
mov ecx [esp+8Ch+var_6C] +
test ecx ecx +
jnz loc_422F73  +
mov [esp+8Ch+var_8C] 0Ch +
call sub_420C50  +
jmp loc_422D01  +
mov [esp+8Ch+var_8C] 5 +
call sub_420C50  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_429F00  +
test eax eax +
jz loc_422FD9  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
test ebp ebp +
mov [ebx+4] eax +
jz loc_422D18  +
mov [esp+8Ch+var_8C] ebp +
call free  +
mov edx [esp+8Ch+var_44] +
test edx edx +
jz loc_422DB3  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_42A2B0  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_425AA0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi eax +
mov [esp+8Ch+var_64] 1 +
jmp loc_422A91  +
test byte ptr [ebx+2Bh] 20h +
jnz loc_422E3B  +
mov eax [esp+8Ch+var_54] +
cmp off_492AF4 eax +
jz loc_422DE8  +
mov eax [edi] +
mov [esp+8Ch+var_54] eax +
mov edx [esp+8Ch+var_68] +
test edx edx +
jz loc_422DF9  +
mov eax [edi] +
mov ecx [esp+8Ch+var_50] +
mov [edx+ecx*4] eax +
add [esp+8Ch+var_50] 1 +
jmp loc_422A95  +
call sub_420A00  +
cmp eax 3 +
jz loc_422994  +
mov ebp [esp+8Ch+var_68] +
jmp loc_422D01  +
movzx eax al +
cmp eax [esp+8Ch+arg_4] +
setz al  +
add esp 8Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_420A00  +
cmp eax 4 +
jnz loc_422A60  +
jmp loc_422DD6  +
mov eax off_492AF0 +
mov eax [eax] +
test eax eax +
jnz loc_4228F7  +
xor ebp ebp +
jmp loc_422911  +
test ebp ebp +
mov ebx [esp+8Ch+arg_0] +
jz loc_422BF2  +
mov eax [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_6C] +
cmp edi eax +
jz loc_422BF2  +
mov ecx [esp+8Ch+var_68] +
xor eax eax +
mov esi [ebp+eax*4+0] +
movzx edx byte ptr [esi+1Bh] +
cmp ecx edx +
jge loc_422E99  +
add eax 1 +
cmp eax edi +
jl loc_422E86  +
mov [esp+8Ch+var_6C] 1 +
jmp loc_422BF2  +
test ebp ebp +
jz loc_422B99  +
lea edx ds:0[eax*4] +
mov eax ds:dword_49CE90 +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] ebp +
lea eax [ebp+eax*4+0] +
mov [esp+8Ch+var_88] eax +
call memcpy  +
jmp loc_422BA4  +
cmp [esp+8Ch+var_5C] esi +
mov [ebx+4] esi +
jz loc_422F42  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_49BE80 +
mov [esp+8Ch+var_8C] ebx +
call sub_41E6C0  +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_429F00  +
test eax eax +
jnz loc_422D01  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jz loc_42305D  +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 18h +
jz loc_42301E  +
test ebp ebp +
mov eax 1 +
jz loc_422CCE  +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_70] eax +
call free  +
mov eax [esp+8Ch+var_70] +
jmp loc_422CCE  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
mov [ebx+4] eax +
mov [esp+8Ch+var_8C] 0Dh +
call sub_420C50  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_422DB3  +
mov eax [esp+8Ch+arg_8] +
mov [eax] ebp +
mov eax [esp+8Ch+var_6C] +
mov dword ptr [ebp+eax*4+0] 0 +
sub eax 1 +
js loc_422DB3  +
mov edx [ebp+eax*4+0] +
mov edx [edx] +
mov [ebp+eax*4+0] edx +
sub eax 1 +
cmp eax 0FFFFFFFFh +
jnz loc_422FB7  +
xor eax eax +
jmp loc_422DB5  +
mov [esp+8Ch+var_54] esi +
jmp loc_422B99  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jnz loc_422F42  +
cmp [esp+8Ch+arg_4] 2 +
jnz loc_422941  +
cmp [esp+8Ch+var_70] offset off_4AD4A0 +
jnz loc_422941  +
jmp loc_422CAC  +
mov ebp [esp+8Ch+var_68] +
jmp loc_422F42  +
or byte ptr [ebx+2Bh] 10h +
jmp loc_422F51  +
mov esi [esp+8Ch+var_54] +
mov [esp+8Ch+var_6C] 1 +
jmp loc_422BF2  +
mov [esp+8Ch+var_68] 100h +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_5C] 0 +
jmp loc_422B72  +
mov [esp+8Ch+var_88] 1B5h +
mov [esp+8Ch+var_8C] offset a____Binutils_6 +
call sub_420BA0  +
jmp loc_422F42  +
mov esi [esp+8Ch+var_54] +
jmp loc_422BF2  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4228A0  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jnz loc_4230E0  +
mov edx eax +
and edx 7 +
cmp dl 3 +
ja loc_4230E0  +
test dl dl +
jz loc_4230F3  +
xor eax eax +
movzx edx dl +
cmp edx [esp+18h+arg_4] +
setz al  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 5 +
call sub_420C50  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
movzx edx byte ptr [esp+18h+arg_4] +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
movzx edx dl +
mov [ebx+28h] al +
mov eax [ebx+4] +
mov eax [eax+edx*4+74h] +
mov [esp+18h+var_18] ebx +
call eax  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_4230EE  +
and byte ptr [ebx+28h] 0F8h +
add esp 18h +
xor al al +
pop ebx  +
retn   +
***
push ebx  +
mov edx [esp+0Ch] +
xor eax eax +
mov ecx [esp+8] +
mov ebx [edx+0Ch] +
cmp [ecx+0Ch] ebx +
jnz loc_4231C9  +
mov ebx [edx] +
cmp [ecx] ebx +
jnz loc_4231C9  +
mov ebx [edx+10h] +
mov eax ecx +
cmp [ecx+10h] ebx +
mov ecx edx +
cmovnb ecx eax +
cmovbe eax ecx +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:_stricmp +
mov esi [esp+30h] +
mov ebx [esp+34h] +
mov eax [esi+14h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jnz loc_423200  +
mov eax [esi+20h] +
test eax eax +
jnz loc_423368  +
mov eax [esi+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jz loc_423368  +
mov ebp [esi+18h] +
mov dword ptr [esp+4] 3Ah +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_42331C  +
sub eax ebp +
mov [esp+8] eax +
mov [esp+0Ch] eax +
mov [esp+4] ebp +
mov [esp] ebx +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jz loc_4233D4  +
movzx eax byte ptr [ebx] +
mov edx [esi+14h] +
test al al +
jnz loc_423276  +
jmp loc_423381  +
cmp al cl +
jnz loc_42327D  +
add ebx 1 +
movzx eax byte ptr [ebx] +
add edx 1 +
test al al +
jz loc_423381  +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_423261  +
cmp al 3Ah +
jz loc_423375  +
movsx edx byte ptr [ebx] +
test dl dl +
jz loc_423381  +
movzx ecx dl +
xor eax eax +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_42336D  +
add ebx 1 +
lea eax [eax+eax*4] +
lea eax [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_4232A3  +
cmp eax 1CF2h +
mov edx eax +
jz loc_4234E3  +
jbe loc_423390  +
cmp eax 109AAh +
jz loc_4234FC  +
nop   +
lea esi [esi+0] +
ja loc_4233F3  +
cmp eax 1E46h +
jz loc_423452  +
ja loc_4234C2  +
cmp eax 1E1Ch +
jz loc_423538  +
cmp eax 1E31h +
jnz loc_423589  +
mov ecx 25h +
mov edx 3Dh +
jmp loc_423422  +
mov ebp [esi+14h] +
mov [esp] ebp +
call strlen  +
mov [esp+4] ebp +
mov [esp] ebx +
mov [esp+8] eax +
mov [esp+0Ch] eax +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jnz loc_423252  +
lea eax [ebx+edx] +
cmp byte ptr [eax] 3Ah +
jz loc_42356C  +
mov edx [esi+18h] +
mov [esp] eax +
mov [esp+4] edx +
call edi  +
test eax eax +
jnz loc_423252  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movsx edx byte ptr [ebx+1] +
add ebx 1 +
jmp loc_423288  +
***
mov eax [esi+20h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 1450h +
jz loc_42351A  +
jbe loc_42345E  +
cmp eax 14BBh +
jz loc_42343A  +
lea esi [esi+0] +
ja loc_4234A2  +
cmp eax 1456h +
jz loc_42343A  +
cmp eax 14A2h +
jnz loc_423589  +
mov ecx 2 +
mov edx 10h +
jmp loc_423422  +
mov eax [esi+18h] +
lea eax [eax+edx+1] +
add edx ebx +
mov [esp+4] eax +
mov [esp] edx +
call edi  +
test eax eax +
jnz loc_423252  +
jmp loc_423368  +
***
cmp eax 109C8h +
jz loc_423446  +
lea esi [esi+0] +
ja loc_423480  +
cmp eax 109B4h +
jz loc_42350B  +
cmp eax 109BEh +
jnz loc_423589  +
mov ecx 2 +
mov edx 5 +
xor eax eax +
cmp [esi+0Ch] ecx +
jnz loc_42336D  +
xor eax eax +
cmp [esi+10h] edx +
setz al  +
jmp loc_42336D  +
***
mov ecx 2 +
mov edx 0Ch +
jmp loc_423422  +
***
mov ecx 2 +
mov edx 6 +
jmp loc_423422  +
***
mov ecx 25h +
mov edx 40h +
jmp loc_423422  +
***
cmp eax 8 +
jbe loc_423556  +
cmp eax 0BB8h +
jz loc_423479  +
cmp eax 0FA0h +
jnz loc_423589  +
mov ecx 8 +
jmp loc_423422  +
***
cmp eax 109DCh +
jz loc_423529  +
cmp eax 10AECh +
jnz loc_423589  +
mov ecx 2 +
mov edx 8 +
jmp loc_423422  +
***
cmp eax 151Fh +
jz loc_423547  +
cmp eax 1770h +
jnz loc_423589  +
mov ecx 1Ah +
jmp loc_423422  +
***
cmp eax 7D00h +
jz loc_4234F2  +
cmp eax 109A0h +
jnz loc_423589  +
mov ecx 2 +
mov edx 1 +
jmp loc_423422  +
***
mov ecx 25h +
mov edx 2Dh +
jmp loc_423422  +
***
mov ecx 0Dh +
jmp loc_423422  +
***
mov ecx 2 +
mov edx 3 +
jmp loc_423422  +
***
mov ecx 2 +
mov edx 4 +
jmp loc_423422  +
***
mov ecx 2 +
mov edx 0Ah +
jmp loc_423422  +
***
mov ecx 2 +
mov edx 7 +
jmp loc_423422  +
***
mov ecx 25h +
mov edx 30h +
jmp loc_423422  +
***
mov ecx 2 +
mov edx 12h +
jmp loc_423422  +
***
cmp eax 3 +
jnb loc_423560  +
cmp eax 1 +
jnz loc_423589  +
mov edx eax +
mov ecx 2 +
jmp loc_423422  +
***
mov eax [esi+18h] +
mov [esp+4] eax +
lea eax [ebx+edx+1] +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_423252  +
jmp loc_423368  +
***
xor eax eax +
nop   +
lea esi [esi+0] +
jmp loc_42336D  +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+18h] +
retn   +
***
push esi  +
push ebx  +
mov ebx offset unk_4AD680 +
sub esp 10h +
mov esi [esp+18h+arg_0] +
mov eax [ebx+28h] +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
call eax  +
test eax eax +
jnz loc_4235E8  +
mov ebx [ebx+30h] +
test ebx ebx +
jnz loc_4235C4  +
add edi 4 +
mov ebx [edi] +
test ebx ebx +
jnz loc_4235C4  +
xor eax eax +
jmp loc_4235EA  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_423600  +
***
push ebx  +
xor edx edx +
sub esp 14h +
mov eax [eax+30h] +
mov ebx offset off_49BEB4 +
lea ecx [edx+1] +
test eax eax +
jz loc_42362C  +
nop   +
lea esi [esi+0] +
mov eax [eax+30h] +
mov edx ecx +
lea ecx [edx+1] +
test eax eax +
jnz loc_423620  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_423620  +
lea eax ds:8[edx*4] +
mov [esp+14h+var_14] eax +
call sub_42B400  +
test eax eax +
jz loc_423679  +
mov ecx eax +
mov ebx offset off_49BEB4 +
mov edx offset unk_4AD680 +
mov esi [edx+18h] +
add ecx 4 +
mov [ecx-4] esi +
mov edx [edx+30h] +
test edx edx +
jnz loc_423654  +
add ebx 4 +
mov edx [ebx] +
test edx edx +
jnz loc_423654  +
mov dword ptr [ecx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_423673  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [esp+18h] +
mov ecx [eax+84h] +
mov edi [ecx+0Ch] +
test edi edi +
jz loc_4236AF  +
mov edi [edx+84h] +
mov esi [edi+0Ch] +
test esi esi +
jnz loc_4236D7  +
mov ecx eax +
mov eax edx +
mov edx ecx +
test ebx ebx +
jz loc_4236C0  +
mov eax [edx+84h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4] +
mov edi offset aBinary_0 +
mov ecx 7 +
mov esi [eax] +
cmps   +
jz loc_4236B3  +
xor eax eax +
jmp loc_4236B9  +
***
mov eax [ecx+24h] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+84h] edx +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+8] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx offset off_49BEB4 +
jmp loc_42376C  +
mov eax [eax+30h] +
test eax eax +
jz loc_423784  +
cmp [eax+0Ch] edx +
jnz loc_423765  +
cmp [eax+10h] ecx +
jz loc_423782  +
test ecx ecx +
jnz loc_423765  +
cmp dword ptr [eax+20h] 0 +
nop   +
jz loc_423765  +
pop ebx  +
retn   +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_42376C  +
xor eax eax +
pop ebx  +
retn   +
***
jmp sub_4237A0  +
***
mov eax [esp+18h+arg_8] +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_423750  +
mov edx eax +
test edx edx +
mov [ebx+84h] eax +
mov eax 1 +
jz loc_4237D2  +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [ebx+84h] offset asc_49BE80 +
mov [esp+18h+var_18] 11h +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_4] +
mov [esp+8+var_4] eax +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] eax +
call sub_423750  +
test eax eax +
jz loc_423812  +
mov eax [eax+18h] +
add esp 8 +
retn   +
mov eax offset aUnknown_0 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
mov eax [eax+84h] +
mov edx [eax+10h] +
mov [esp+8+var_4] edx +
mov eax [eax+0Ch] +
mov [esp+8+var_8] eax +
call sub_423750  +
test eax eax +
jz loc_423855  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_423750  +
test eax eax +
jz loc_423890  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
***
mov eax 1 +
add esp 8 +
retn   +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
test dword ptr [eax+0Ch] 4182h +
jnz loc_4238E7  +
mov eax [eax+4] +
test eax eax +
jz loc_4238E7  +
mov ecx [edx+4] +
mov ecx [ecx+11Ch] +
mov [esp+arg_4] eax +
jmp ecx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 1 +
jnz loc_423921  +
and edx 8 +
jnz loc_423921  +
mov edx [esp+1Ch+arg_4] +
mov [eax+78h] edx +
mov edx [esp+1Ch+arg_8] +
mov [eax+7Ch] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
mov edx [eax+10h] +
mov ebx [eax+0Ch] +
test edx edx +
jz loc_423A90  +
mov edx [edx+1Ch] +
add edx [eax+8] +
mov [esp+3Ch+var_34] edx +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_421580  +
test bl 8 +
mov [esp+3Ch+var_10] 46h +
jnz loc_423995  +
test bh 40h +
mov [esp+3Ch+var_10] 66h +
jz loc_423A70  +
test bl 4 +
mov ebp 64h +
jnz loc_4239B1  +
mov eax ebx +
and eax 8000h +
cmp eax 1 +
sbb ebp ebp +
and ebp 0FFFFFFDCh +
add ebp 44h +
test bh 20h +
mov edi 49h +
jnz loc_4239CD  +
mov eax ebx +
and eax 400000h +
cmp eax 1 +
sbb edi edi +
and edi 0FFFFFFB7h +
add edi 69h +
mov eax ebx +
and eax 1000h +
cmp eax 1 +
mov eax ebx +
sbb ecx ecx +
and eax 800h +
and ecx 0FFFFFFC9h +
add ecx 57h +
cmp eax 1 +
sbb edx edx +
mov eax ebx +
and edx 0FFFFFFDDh +
and eax 80h +
add edx 43h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFA9h +
add eax 77h +
test bl 1 +
jz loc_423A52  +
and ebx 2 +
cmp ebx 1 +
sbb esi esi +
and esi 4Bh +
add esi 21h +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_20] ebp +
mov [esp+3Ch+var_24] edi +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aCCCCCCC +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 2 +
mov esi 67h +
jnz loc_423A16  +
and ebx 800000h +
cmp ebx 1 +
sbb esi esi +
and esi 0FFFFFFABh +
add esi 75h +
jmp loc_423A16  +
mov eax ebx +
and eax 10000h +
cmp eax 1 +
sbb eax eax +
mov [esp+3Ch+var_10] eax +
and [esp+3Ch+var_10] 0FFFFFFD1h +
add [esp+3Ch+var_10] 4Fh +
jmp loc_423995  +
mov eax [eax+8] +
mov [esp+3Ch+var_34] eax +
jmp loc_423963  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_425930  +
test eax eax +
jz loc_423ABE  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov ebx [edx+10h] +
test ebx ebx +
jz loc_423B0E  +
test byte ptr [ebx+15h] 10h +
mov eax 43h +
jz loc_423AF5  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx offset off_4928E8 +
jz loc_423BB0  +
cmp ebx offset off_492A38 +
mov eax 49h +
jz loc_423AED  +
mov esi [edx+0Ch] +
mov eax 69h +
test esi 400000h +
jnz loc_423AED  +
test esi 80h +
jnz loc_423BD0  +
test esi 800000h +
mov eax 75h +
jnz loc_423AED  +
test esi 3 +
mov al 3Fh +
jz loc_423AED  +
cmp ebx offset off_492990 +
jz loc_423BE0  +
test ebx ebx +
jz loc_423AED  +
mov eax [ebx] +
mov edi offset off_49BFA0 +
mov ebp offset a_bss +
mov [esp+1Ch+var_10] eax +
mov eax 4 +
jmp loc_423B79  +
add edi 8 +
mov ebp [edi] +
test ebp ebp +
jz loc_423BE7  +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call strncmp  +
test eax eax +
jnz loc_423B68  +
movzx eax byte ptr [edi+4] +
cmp al 3Fh +
jz loc_423BE7  +
and esi 2 +
jz loc_423BA8  +
movzx eax al +
movzx eax ds:byte_4B7F20[eax] +
movsx eax al +
jmp loc_423AED  +
mov edx [edx+0Ch] +
mov al 55h +
test dl 80h +
jz loc_423AED  +
mov eax edx +
shl eax 0Fh +
sar eax 1Fh +
add eax 77h +
jmp loc_423AED  +
mov eax esi +
shl eax 0Fh +
sar eax 1Fh +
add eax 57h +
jmp loc_423AED  +
mov eax 61h +
jmp loc_423B99  +
mov edx [ebx+14h] +
mov eax 74h +
test dl 10h +
jnz loc_423B99  +
test dl 20h +
jz loc_423C16  +
test dl 8 +
mov eax 72h +
jnz loc_423B99  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 67h +
jmp loc_423B99  +
test dh 1 +
jnz loc_423C31  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFEFh +
add eax 73h +
jmp loc_423B99  +
test dh 20h +
mov eax 4Eh +
jnz loc_423B99  +
and edx 108h +
mov eax 6Eh +
cmp edx 108h +
mov edx 3Fh +
cmovnz eax edx +
jmp loc_423B99  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov [esp] esi +
call sub_423AD0  +
cmp al 55h +
mov [ebx+4] al +
jz loc_423CC0  +
sub eax 76h +
cmp al 1 +
jbe loc_423CC0  +
mov eax [esi+10h] +
mov eax [eax+1Ch] +
add eax [esi+8] +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+4] +
mov dword ptr [ebx] 0 +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+24h] +
mov ebx [esp+20h] +
test esi esi +
mov eax [ebx+4] +
jz loc_423D14  +
mov eax [eax+198h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
js loc_423D25  +
mov eax 0 +
jnz loc_423D40  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+104h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
jns loc_423D06  +
mov dword ptr [esp] 7 +
call sub_420C50  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] edx +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_423D25  +
test esi esi +
mov eax [ebx+4] +
jnz loc_423D80  +
mov eax [eax+108h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_423D93  +
mov edx [esp+28h] +
mov [edx] edi +
mov edx [esp+2Ch] +
mov dword ptr [edx] 4 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+19Ch] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jns loc_423D68  +
mov dword ptr [esp] 7 +
call sub_420C50  +
mov [esp] edi +
call free  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov edi [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax] +
mov [edi] eax +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_20] +
mov eax [eax] +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_4241B2  +
mov esi [eax] +
test esi esi +
jz loc_424068  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+4] +
test eax eax +
jz loc_424068  +
mov edi [eax+28h] +
test edi edi +
mov [esp+4Ch+var_20] edi +
jz loc_424075  +
mov eax [esp+4Ch+arg_8] +
mov edx [esp+4Ch+arg_C] +
add edx [eax+1Ch] +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_2C] edx +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_423E5D  +
cmp edx [eax+1Ch] +
jnb loc_423ED0  +
mov eax [esp+4Ch+var_30] +
xor ecx ecx +
mov ebp [esp+4Ch+var_2C] +
mov eax [eax+14h] +
mov [esp+4Ch+var_34] eax +
lea edx [eax-1] +
jmp loc_423E87  +
lea eax [eax+eax*2+3] +
cmp ebp [esi+eax*8] +
jb loc_4241A0  +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
cmp ecx edx +
jz loc_424068  +
mov edi [esp+4Ch+var_30] +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
mov esi [edi+10h] +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
lea ebx [eax+eax*2] +
lea ebx [esi+ebx*8] +
cmp ebp [ebx] +
jnb loc_423E73  +
cmp ecx eax +
mov edx eax +
jz loc_424068  +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
jmp loc_423EA6  +
cmp edx [ebx+18h] +
jnb loc_423E5D  +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+20h] +
mov eax [eax+24h] +
mov [esp+4Ch+var_28] eax +
mov eax [ebx+0Ch] +
cmp ebp [ebx+1Ch] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+8] +
mov [esp+4Ch+var_1C] eax +
jnb loc_423F58  +
mov edi [esp+4Ch+arg_0] +
xor esi esi +
mov [esp+4Ch+var_34] esi +
mov esi ebx +
mov [esp+4Ch+var_24] 0 +
lea esi [esi+0] +
movzx eax byte ptr [ebp+4] +
cmp al 46h +
jz loc_42408D  +
jbe loc_424081  +
cmp al 64h +
jz loc_4240D3  +
cmp al 84h +
lea esi [esi+0] +
jnz loc_4240F6  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
cmp [esp+4Ch+var_2C] eax +
jnb loc_424110  +
add ebp 0Ch +
cmp [esi+1Ch] ebp +
ja loc_423F10  +
mov ebx esi +
mov eax [esp+4Ch+arg_10] +
mov dword ptr [eax] 1 +
mov eax [esp+4Ch+var_28] +
test eax eax +
jz loc_424180  +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_424180  +
cmp al 2Fh +
jz loc_424180  +
test al al +
jz loc_423F93  +
mov eax [esp+4Ch+var_28] +
cmp byte ptr [eax+1] 3Ah +
jz loc_424180  +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_424180  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov edi eax +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_423FD4  +
mov esi [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] esi +
call sub_4761D0  +
test eax eax +
jz loc_42443A  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
lea esi [eax+1] +
lea eax [esi+edi] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
mov edx [esp+4Ch+var_30] +
test eax eax +
mov [edx+28h] eax +
jz loc_424430  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call memcpy  +
mov eax [esp+4Ch+var_30] +
add edi [eax+28h] +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] edi +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+arg_14] +
mov eax [eax+28h] +
mov [edi] eax +
mov esi [ebx+14h] +
test esi esi +
jz loc_424068  +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] esi +
call strchr  +
test eax eax +
jz loc_424062  +
mov byte ptr [eax] 0 +
mov esi [ebx+14h] +
mov eax [esp+4Ch+arg_18] +
mov [eax] esi +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+24h] +
mov [esp+4Ch+var_20] eax +
jmp loc_423E3E  +
cmp al 24h +
jz loc_4240D3  +
cmp al 44h +
jnz loc_423F4E  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_424105  +
mov ebx [esi] +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
add ebx eax +
cmp ebx [esp+4Ch+var_2C] +
jbe loc_424153  +
mov edx [esp+4Ch+var_34] +
test edx edx +
jz loc_424153  +
cmp [esp+4Ch+var_2C] ebx +
jb loc_423F56  +
mov [esp+4Ch+var_34] 1 +
jmp loc_423F4E  +
mov eax [esp+4Ch+var_34] +
or eax [esp+4Ch+var_24] +
jnz loc_423F56  +
mov [esp+4Ch+var_24] 1 +
mov [esp+4Ch+var_34] 0 +
jmp loc_423F4E  +
cmp al 48h +
jnz loc_423F4E  +
mov ecx [esi+14h] +
test ecx ecx +
jnz loc_424094  +
xor ebx ebx +
jmp loc_424096  +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov ecx [esp+4Ch+var_30] +
add eax [esp+4Ch+var_1C] +
mov edx eax +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_424190  +
cmp [esp+4Ch+var_1C] edx +
mov eax 0 +
cmovbe eax edx +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
jmp loc_423F4E  +
mov eax [edi+4] +
lea ecx [ebp+6] +
mov eax [eax+34h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+arg_1C] +
mov [edx] eax +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+var_28] +
mov [eax+20h] ebp +
mov [eax+1Ch] ebx +
mov [eax+24h] edx +
mov [eax+18h] esi +
jmp loc_4240BC  +
mov eax [esp+4Ch+arg_14] +
mov edi [esp+4Ch+var_28] +
mov [eax] edi +
jmp loc_424041  +
mov [esp+4Ch+var_28] 0 +
jmp loc_424144  +
mov eax [ebx+4] +
lea ebp [eax+0Ch] +
mov eax [ebx+10h] +
mov [esp+4Ch+var_28] eax +
jmp loc_423EE3  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 2Ch +
mov [esp+4Ch+var_4C] eax +
call sub_425930  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_424430  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stab_1 +
mov [esp+4Ch+var_4C] eax +
call sub_41E710  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stabstr_1 +
mov [esp+4Ch+var_4C] eax +
call sub_41E710  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_424460  +
test eax eax +
jz loc_424460  +
mov eax [edx+28h] +
test eax eax +
jnz loc_424221  +
mov eax [edx+24h] +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
mov [esp+4Ch+var_34] eax +
mov eax [ecx+28h] +
test eax eax +
mov [esp+4Ch+var_20] eax +
jnz loc_424247  +
mov eax [ecx+24h] +
mov [esp+4Ch+var_20] eax +
mov esi [esp+4Ch+var_34] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
mov edi [esp+4Ch+var_30] +
mov [edi+8] eax +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
mov edx [edi+8] +
test edx edx +
mov [edi+0Ch] eax +
jz loc_424430  +
test eax eax +
jz loc_424430  +
mov eax [edi] +
mov [esp+4Ch+var_38] esi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_41EF20  +
test eax eax +
jz loc_424430  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+var_20] +
mov edx [eax+0Ch] +
mov eax [eax+4] +
mov [esp+4Ch+var_38] edi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_41EF20  +
test eax eax +
jz loc_424430  +
mov eax [esp+4Ch+var_30] +
mov eax [eax] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_420CA0  +
test eax eax +
mov ebx eax +
js loc_424430  +
mov [esp+4Ch+var_4C] eax +
call sub_42B400  +
test eax eax +
mov edi eax +
jnz loc_424332  +
test ebx ebx +
jnz loc_424430  +
mov eax [esp+4Ch+var_30] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_420CE0  +
test eax eax +
js loc_4246DC  +
jz loc_4244B8  +
mov esi [edi] +
test esi esi +
jz loc_4244BC  +
mov ebp edi +
nop   +
jmp loc_4243F8  +
cmp dword ptr [eax+8] 2 +
jnz loc_42440D  +
cmp dword ptr [eax+0Ch] 20h +
jnz loc_42440D  +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_42440D  +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_42440D  +
cmp edx 0FFFFFFFFh +
jnz loc_42440D  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax [esp+4Ch+var_30] +
mov eax [eax+8] +
add eax [esi+4] +
mov [esp+4Ch+var_4C] eax +
call edx  +
mov edx [esi+0Ch] +
mov ebx [esp+4Ch+arg_0] +
and eax [edx+28h] +
mov edx [esi] +
mov ecx [edx] +
mov edx [ebx+4] +
mov ebx [edx+30h] +
mov edx [esp+4Ch+var_30] +
mov edx [edx+8] +
add edx [esi+4] +
mov [esp+4Ch+var_48] edx +
mov edx [ecx+10h] +
mov edx [edx+1Ch] +
add edx [ecx+8] +
add edx [esi+8] +
add eax edx +
mov [esp+4Ch+var_4C] eax +
call ebx  +
add ebp 4 +
mov esi [ebp+0] +
test esi esi +
jz loc_4244BC  +
mov eax [esi+0Ch] +
mov edx [eax+2Ch] +
test edx edx +
jz loc_4243EA  +
mov ebx [eax+4] +
test ebx ebx +
jz loc_424375  +
mov [esp+4Ch+var_4C] offset aUnsupported_st +
call off_492AE8  +
mov [esp+4Ch+var_4C] 5 +
call sub_420C50  +
mov [esp+4Ch+var_4C] edi +
call free  +
nop   +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] eax +
mov eax [esi+28h] +
add eax edi +
mov [esp+4Ch+var_4C] eax +
call sub_476180  +
test eax eax +
jnz loc_423FD4  +
jmp loc_424034  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_symbols +
mov [esp+4Ch+var_4C] eax +
call sub_41E710  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_strings +
mov [esp+4Ch+var_4C] eax +
call sub_41E710  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_4244A1  +
test eax eax +
jnz loc_424217  +
mov eax [esp+4Ch+arg_20] +
mov edi [esp+4Ch+var_30] +
mov [eax] edi +
mov eax 1 +
jmp loc_42406D  +
test edi edi +
jz loc_4244C4  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov edi [esp+4Ch+var_30] +
xor esi esi +
mov ebp [esp+4Ch+var_34] +
mov ecx [edi+8] +
mov eax ebp +
mov dword ptr [edi+14h] 0 +
add eax ecx +
mov ebx ecx +
cmp ecx eax +
jb loc_4244F6  +
jmp loc_424543  +
cmp al 24h +
jz loc_424671  +
lea eax [ecx+ebp] +
add ebx 0Ch +
cmp eax ebx +
jbe loc_424537  +
movzx eax byte ptr [ebx+4] +
cmp al 64h +
jnz loc_4244E4  +
test esi esi +
jz loc_424506  +
add dword ptr [edi+14h] 1 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov ecx [edi+8] +
test eax eax +
lea eax [ecx+ebp] +
jz loc_42468E  +
lea edx [ebx+10h] +
mov esi ebx +
cmp eax edx +
jbe loc_4244EF  +
cmp byte ptr [ebx+10h] 64h +
jnz loc_4244EF  +
add ebx 0Ch +
jmp loc_4244EF  +
test esi esi +
jz loc_424543  +
mov eax [esp+4Ch+var_30] +
add dword ptr [eax+14h] 1 +
mov eax [esp+4Ch+var_30] +
mov eax [eax+14h] +
test eax eax +
jz loc_424068  +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
imul eax eax +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
mov [edi+10h] eax +
jz loc_424430  +
mov ebp [edi+8] +
cmp dword ptr [edi+14h] 0 +
mov esi [edi+0Ch] +
mov ecx ebp +
jle loc_424858  +
mov eax [esp+4Ch+var_34] +
add eax ebp +
cmp ebp eax +
jnb loc_424858  +
xor edi edi +
xor ecx ecx +
mov edx edi +
mov ebx ecx +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 0 +
jmp loc_42462C  +
cmp al 64h +
jz loc_4246ED  +
cmp al 84h +
jnz loc_424605  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_30] +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx [esp+4Ch+var_18] +
cmp ebx eax +
jnb loc_4246D5  +
cmp ebx esi +
mov eax 0 +
cmovb ebx eax +
mov eax [esp+4Ch+var_30] +
add ebp 0Ch +
mov ecx [esp+4Ch+var_28] +
cmp ecx [eax+14h] +
jge loc_4248C6  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp ebp eax +
jnb loc_4248C6  +
movzx eax byte ptr [ebp+4] +
cmp al 24h +
jz loc_4247CF  +
ja loc_4245C6  +
test al al +
jnz loc_424605  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
sub eax esi +
cmp eax [esp+4Ch+var_1C] +
jb loc_424605  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov [esp+4Ch+var_18] edx +
add esi [esp+4Ch+var_1C] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_1C] eax +
jmp loc_424605  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
jz loc_424695  +
mov ecx [edi+8] +
add dword ptr [edi+14h] 1 +
lea eax [ecx+ebp] +
xor esi esi +
jmp loc_4244EF  +
mov ecx [edi+8] +
jmp loc_4244EC  +
mov eax [edi+4] +
lea ecx [ebp+0Ch] +
mov [esp+4Ch+var_24] ecx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_24] esi +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx ebp +
mov ebp ecx +
cmp ebx eax +
jnb loc_4246D5  +
cmp ebx esi +
jnb loc_424605  +
xor ebx ebx +
jmp loc_424605  +
test edi edi +
nop   +
jnz loc_424426  +
xor eax eax +
jmp loc_424432  +
test edx edx +
nop   +
jz loc_42474D  +
imul eax [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_30] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
add eax [ecx+10h] +
lea ecx [edx+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_30] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_10] +
mov eax [esp+4Ch+var_18] +
add eax [ecx+10h] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+10h] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edx +
mov edx [esp+4Ch+var_2C] +
mov [eax+0Ch] edx +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
add eax esi +
cmp eax esi +
mov edx eax +
mov [esp+4Ch+var_2C] eax +
jz loc_4247BE  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_4247B4  +
cmp edx esi +
mov eax 0 +
cmovnb eax edx +
mov [esp+4Ch+var_2C] eax +
mov ecx [esp+4Ch+var_30] +
lea edx [ebp+10h] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp edx eax +
jnb loc_42479D  +
cmp byte ptr [ebp+10h] 64h +
jz loc_42469D  +
mov ebx [esp+4Ch+var_2C] +
mov edx ebp +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_424605  +
mov [esp+4Ch+var_2C] 0 +
jmp loc_424781  +
mov [esp+4Ch+var_2C] 0 +
xor ebx ebx +
xor edx edx +
jmp loc_424605  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_18] +
lea ecx [esi+eax] +
cmp ecx esi +
jz loc_424605  +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
cmp ecx eax +
mov eax 0 +
cmovnb ecx eax +
imul eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_10] ecx +
mov [esp+4Ch+var_18] eax +
add eax [edx+10h] +
lea edx [ebp+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_10] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_18] +
add eax [edx+10h] +
mov edx [esp+4Ch+var_2C] +
mov [eax+4] ebp +
mov [eax+8] esi +
mov [eax+0Ch] edx +
xor edx edx +
mov [eax+10h] ebx +
mov [eax+14h] ecx +
jmp loc_424605  +
mov [esp+4Ch+var_28] 0 +
mov edi [esp+4Ch+var_28] +
mov edx [esp+4Ch+var_34] +
imul eax edi +
add edx ecx +
add eax ebx +
mov dword ptr [eax] 0FFFFFFFFh +
mov [eax+4] edx +
mov [eax+8] esi +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax edi +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_40] offset sub_4238A0 +
mov [esp+4Ch+var_44] 18h +
mov [esp+4Ch+var_4C] ebx +
call qsort  +
mov eax [esp+4Ch+arg_20] +
mov [eax] edi +
jmp loc_423E3E  +
test edx edx +
mov edi edx +
jz loc_424928  +
mov eax [esp+4Ch+var_30] +
lea edx [edx+8] +
mov ecx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_1C] ebx +
imul ebp [esp+4Ch+var_28] +
mov ebx [eax+10h] +
mov eax [ecx+4] +
add ebx ebp +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_1C] +
add [esp+4Ch+var_28] 1 +
mov [ebx] eax +
mov ebx [edx+10h] +
lea eax [ebx+ebp] +
mov [eax+4] edi +
mov edi [esp+4Ch+var_24] +
mov [eax+10h] ecx +
mov ecx [edx+8] +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edi +
mov edi [esp+4Ch+var_2C] +
mov [eax+0Ch] edi +
jmp loc_424860  +
mov eax [esp+4Ch+var_30] +
mov ecx [eax+8] +
mov ebx [eax+10h] +
jmp loc_424860  +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov edx [eax+14h] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_C] +
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx [esp+arg_8] +
cmp edx 1 +
mov esi [eax+8] +
jz loc_424990  +
cmp edx 2 +
mov eax 0FFFFFFFFh +
jz loc_42497A  +
xor eax eax +
test edx edx +
jz loc_424980  +
pop ebx  +
pop esi  +
retn   +
mov [esi+10h] ecx +
xor eax eax +
mov [esi+14h] ebx +
pop ebx  +
pop esi  +
retn   +
add [esi+10h] ecx +
adc [esi+14h] ebx +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 20h +
mov ecx [esp+20h+arg_0] +
mov ebx [ecx+8] +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov esi [ebx+4] +
mov edi [ebx] +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_8] +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_C] +
mov [esp+20h+var_20] ecx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] eax +
mov eax [esp+20h+arg_4] +
mov [esp+20h+var_10] edx +
mov [esp+20h+var_18] eax +
call esi  +
test edx edx +
js loc_4249EB  +
add [ebx+10h] eax +
adc [ebx+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
retn   +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+8] +
mov edx [ecx+8] +
test edx edx +
jz loc_424A2F  +
mov eax [ecx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call edx  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_4] +
mov ebp [esp+28h+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [ebp+8] +
jnz loc_424AC8  +
test edi 2 +
jnz loc_424AD8  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_424AA0  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_424AA8  +
mov byte ptr [edi] 0 +
mov edx [ebx+0Ch] +
xor eax eax +
test edx edx +
jz loc_424AC0  +
mov eax [ebx] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_424A89  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_424A89  +
***
sub esp 18h +
mov eax [eax+0A8h] +
test eax eax +
jz loc_424B19  +
lea eax [ebx+48h] +
mov [esp+18h+var_18] eax +
call sub_42A2B0  +
mov eax [ebx+0A8h] +
mov [esp+18h+var_18] eax +
call sub_488340  +
mov eax [ebx] +
test eax eax +
jz loc_424B27  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+88h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_424C10  +
test edi edi +
jz loc_424BF0  +
mov [esp+2Ch+var_28] offset a_gnu_debugli_0 +
mov [esp+2Ch+var_2C] ebx +
call sub_41E710  +
test eax eax +
mov esi eax +
jz loc_424BAD  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_41F070  +
test eax eax +
jnz loc_424BB7  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_424BAD  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebp [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebp +
call sub_48C620  +
add eax 4 +
and eax 0FFFFFFFCh +
cmp eax [esi+24h] +
jnb loc_424BAD  +
mov edx [ebx+4] +
add eax [esp+2Ch+var_10] +
mov edx [edx+28h] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov [edi] eax +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 49Fh +
mov [esp+2Ch+var_2C] offset a____Binutil_11 +
call sub_420BA0  +
jmp loc_424B6F  +
mov [esp+2Ch+var_28] 49Eh +
mov [esp+2Ch+var_2C] offset a____Binutil_11 +
call sub_420BA0  +
jmp loc_424B67  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_424C66  +
mov [esp+18h+var_14] offset aRb_1 +
mov [esp+18h+var_18] ebx +
call j_j_fopen  +
xor edx edx +
test eax eax +
jz loc_424C5F  +
mov [esp+18h+var_18] eax +
call fclose  +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [esp+18h+var_14] 529h +
mov [esp+18h+var_18] offset a____Binutil_11 +
call sub_420BA0  +
jmp loc_424C3C  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_424D2E  +
mov [esp+14h+var_10] offset aRb_1 +
mov [esp+14h+var_14] ebx +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_424D26  +
xor ebx ebx +
lea esi [esi+0] +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_C] 2000h +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] offset unk_4BF260 +
call fread  +
test eax eax +
jz loc_424D0F  +
add eax offset unk_4BF260 +
mov edx ebx +
cmp eax offset unk_4BF260 +
not edx  +
jbe loc_424D09  +
mov ecx offset unk_4BF260 +
lea esi [esi+0] +
mov ebx edx +
add ecx 1 +
xor bl [ecx-1] +
shr edx 8 +
movzx ebx bl +
xor edx ds:dword_49C0A0[ebx*4] +
cmp ecx eax +
jnz loc_424CF0  +
not edx  +
mov ebx edx +
jmp loc_424CB0  +
mov [esp+14h+var_14] esi +
call fclose  +
xor eax eax +
cmp ebx [esp+14h+arg_4] +
setz al  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 508h +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_420BA0  +
jmp loc_424C91  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
test eax eax +
mov [esp+48h+var_34] edx +
jz loc_424FD3  +
mov esi [esp+48h+var_34] +
mov eax offset a__2 +
mov edx [ebp+0] +
test esi esi +
cmovnz eax esi +
test edx edx +
mov [esp+48h+var_34] eax +
jz loc_425035  +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebp +
call ecx  +
test eax eax +
mov esi eax +
jz loc_42502E  +
cmp byte ptr [eax] 0 +
jz loc_424FFB  +
mov edi [ebp+0] +
mov [esp+48h+var_48] edi +
call strlen  +
test eax eax +
jz loc_424FF4  +
movzx edx byte ptr [edi+eax-1] +
lea ebx [eax-1] +
cmp dl 5Ch +
jz loc_42501D  +
cmp dl 2Fh +
jnz loc_424DEA  +
jmp loc_42501D  +
movzx eax byte ptr [edi+ebx-1] +
lea edx [ebx-1] +
cmp al 5Ch +
jz loc_424F04  +
cmp al 2Fh +
jz loc_424F04  +
mov ebx edx +
test ebx ebx +
jnz loc_424DD0  +
mov edx 1 +
mov [esp+48h+var_48] edx +
call sub_42B400  +
test eax eax +
mov [esp+48h+var_30] eax +
jz loc_425048  +
mov eax [ebp+0] +
mov edi [esp+48h+var_30] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edi +
call memcpy  +
mov byte ptr [edi+ebx] 0 +
mov eax [ebp+0] +
mov [esp+48h+var_48] eax +
call sub_4884B0  +
mov [esp+48h+var_48] eax +
mov edi eax +
call strlen  +
test eax eax +
jz loc_425016  +
movzx ecx byte ptr [edi+eax-1] +
lea ebp [eax-1] +
cmp cl 2Fh +
jz loc_425027  +
cmp cl 5Ch +
jnz loc_424E72  +
jmp loc_425027  +
movzx eax byte ptr [edi+ebp-1] +
lea edx [ebp-1] +
cmp al 5Ch +
jz loc_424E76  +
cmp al 2Fh +
jz loc_424E76  +
mov ebp edx +
test ebp ebp +
jnz loc_424E60  +
mov eax [esp+48h+var_34] +
mov byte ptr [edi+ebp] 0 +
mov [esp+48h+var_48] eax +
call strlen  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_2C] eax +
call strlen  +
mov ecx [esp+48h+var_2C] +
cmp ebp ebx +
cmovnb ebx ebp +
lea eax [ecx+eax+9] +
add ebx eax +
mov [esp+48h+var_48] ebx +
call sub_42B400  +
test eax eax +
mov ebx eax +
jz loc_424EDE  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_475790  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jz loc_424F10  +
mov [esp+48h+var_48] esi +
call free  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] edi +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [ebx+1] +
jmp loc_424DF3  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_475790  +
mov dword ptr [eax] 6265642Eh +
add eax 7 +
mov dword ptr [eax-3] 2F6775h +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_424EDE  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_475790  +
mov ebp eax +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] eax +
call strlen  +
cmp eax 1 +
jz loc_424F8B  +
mov ecx [esp+48h+var_34] +
cmp byte ptr [ecx+eax-1] 2Fh +
jz loc_424F8B  +
cmp byte ptr [edi] 2Fh +
jz loc_424F8B  +
mov eax 2Fh +
mov [ebp+0] ax +
mov [esp+48h+var_48] ebx +
call strlen  +
mov [esp+48h+var_44] edi +
add eax ebx +
mov [esp+48h+var_48] eax +
call sub_475790  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_424EDE  +
mov [esp+48h+var_48] ebx +
xor ebx ebx +
call free  +
jmp loc_424EDE  +
mov [esp+48h+var_44] 559h +
mov [esp+48h+var_48] offset a____Binutil_11 +
mov [esp+48h+var_30] ecx +
call sub_420BA0  +
mov ecx [esp+48h+var_30] +
jmp loc_424D65  +
xor ebx ebx +
jmp loc_424DEE  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] 10h +
call sub_420C50  +
xor eax eax +
jmp loc_424EFC  +
xor ebp ebp +
jmp loc_424E76  +
lea edx [eax+1] +
mov ebx eax +
jmp loc_424DF3  +
mov ebp eax +
jmp loc_424E76  +
xor eax eax +
jmp loc_424EFC  +
mov [esp+48h+var_48] 5 +
call sub_420C50  +
xor eax eax +
jmp loc_424EFC  +
mov [esp+48h+var_48] esi +
call free  +
xor eax eax +
jmp loc_424EFC  +
***
mov [esp+18h+var_18] 0B0h +
call sub_42B590  +
test eax eax +
mov ebx eax +
jz loc_425110  +
mov eax ds:dword_4BD240 +
test eax eax +
jnz loc_4250E0  +
mov eax ds:dword_4C1264 +
lea edx [eax+1] +
mov ds:dword_4C1264 edx +
mov [ebx+24h] eax +
call sub_4881D0  +
test eax eax +
mov [ebx+0A8h] eax +
jz loc_425114  +
lea eax [ebx+48h] +
mov dword ptr [ebx+84h] offset asc_49BE80 +
mov [esp+18h+var_C] 0Dh +
mov [esp+18h+var_10] 0B8h +
mov [esp+18h+var_14] offset sub_41E5B0 +
mov [esp+18h+var_18] eax +
call sub_42A1A0  +
test eax eax +
jz loc_425100  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov ecx ds:dword_4C1260 +
sub eax 1 +
mov ds:dword_4BD240 eax +
lea edx [ecx-1] +
mov ds:dword_4C1260 edx +
mov [ebx+24h] edx +
jmp loc_425094  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_4250D4  +
xor ebx ebx +
jmp loc_4250D4  +
mov [esp+18h+var_18] 6 +
call sub_420C50  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_4250D4  +
***
sub esp 4 +
mov ebx [esp+4+arg_0] +
call sub_425060  +
test eax eax +
jz loc_4251B0  +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
cmp dword ptr [ebx+0Ch] offset off_49C4A0 +
jz loc_4251A5  +
movzx edx byte ptr [eax+28h] +
mov [eax+8Ch] ebx +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFE7h +
or edx 8 +
and ecx 1 +
mov [eax+28h] dl +
movzx edx byte ptr [eax+2Bh] +
and edx 0FFFFFFFEh +
or edx ecx +
movzx ecx byte ptr [eax+2Ch] +
mov [eax+2Bh] dl +
movzx esi byte ptr [ebx+2Ch] +
and edx 0FFFFFFF7h +
and ecx 0FFFFFFEFh +
and esi 10h +
or ecx esi +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+8] +
mov [eax+8] edx +
jmp loc_425157  +
xor eax eax +
jmp loc_42519F  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_42521E  +
lea eax [ebx+48h] +
mov [esp] eax +
call sub_42A2B0  +
mov eax [ebx+0A8h] +
mov [esp] eax +
call sub_488340  +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+0A8h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov esi [esp+10h+arg_C] +
call sub_425060  +
test eax eax +
mov ebx eax +
jz loc_425300  +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_42AEB0  +
test eax eax +
jz loc_425350  +
cmp esi 0FFFFFFFFh +
mov [esp+10h+var_C] edi +
jz loc_425316  +
mov [esp+10h+var_10] esi +
call _fdopen  +
mov [ebx+8] eax +
test eax eax +
jz loc_42536E  +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_476140  +
mov [ebx] eax +
movzx eax byte ptr [edi] +
cmp al 72h +
setz dl  +
cmp al 77h +
jz loc_4252E0  +
test dl dl +
jnz loc_4252E0  +
cmp al 61h +
jz loc_42533D  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+10h+var_10] ebx +
call sub_430F80  +
test eax eax +
jz loc_425360  +
or byte ptr [ebx+2Bh] 2 +
cmp esi 0FFFFFFFFh +
jz loc_425330  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jz loc_425347  +
test dl dl +
jz loc_4252AB  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
jmp loc_4252B8  +
cmp esi 0FFFFFFFFh +
jz loc_4252D1  +
mov [esp+10h+var_10] esi +
call _close  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_42527D  +
or byte ptr [ebx+2Ah] 80h +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jnz loc_4252AB  +
or byte ptr [ebx+28h] 18h +
jmp loc_4252B8  +
cmp esi 0FFFFFFFFh +
jz loc_425360  +
mov [esp+10h+var_10] esi +
call _close  +
lea esi [esi+0] +
mov eax ebx +
xor ebx ebx +
call sub_424AF0  +
jmp loc_4252D1  +
mov [esp+10h+var_10] 1 +
call sub_420C50  +
jmp loc_425360  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0FFFFFFFFh +
mov [esp+1Ch+var_14] offset aRb_1 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_425230  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
mov dword ptr [esp+8] offset aRB_0 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_425230  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
call sub_425060  +
test eax eax +
mov ebx eax +
jz loc_425443  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_42AEB0  +
test eax eax +
jz loc_425438  +
mov eax [esp+28h] +
mov [ebx+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_476140  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov [esp] ebx +
call sub_430F80  +
test eax eax +
jz loc_425438  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax ebx +
xor ebx ebx +
call sub_424AF0  +
jmp loc_425431  +
***
xor ebx ebx +
jmp loc_425431  +
***
call sub_425060  +
test eax eax +
mov ebx eax +
jz loc_4254B4  +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_42AEB0  +
test eax eax +
jz loc_4254AD  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_476140  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+18h+var_18] ebx +
call sub_4310B0  +
test eax eax +
jz loc_4254A1  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 1 +
call sub_420C50  +
mov eax ebx +
call sub_424AF0  +
xor eax eax +
jmp loc_42549C  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 10h +
jz loc_4254E8  +
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jz loc_4254FA  +
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jnz loc_425503  +
add esp 40h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+0Ch] +
mov eax [eax+10h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
setz al  +
movzx eax al +
mov esi eax +
jz loc_425530  +
mov eax ebx +
call sub_424AF0  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_42551A  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_42551A  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_42551A  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_42551A  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_42551A  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
mov [esp+40h+var_40] ebx +
call sub_431040  +
test eax eax +
mov esi eax +
jnz loc_4255D8  +
mov eax ebx +
call sub_424AF0  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_4255C8  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_4255C8  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_4255C8  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_4255C8  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_4255C8  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
call sub_425060  +
test eax eax +
mov ebx eax +
jz loc_425698  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_476140  +
test esi esi +
mov [ebx] eax +
jz loc_42567C  +
mov eax [esi+4] +
mov [ebx+4] eax +
and byte ptr [ebx+28h] 0E7h +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_4230B0  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_425692  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
test byte ptr [ebx+28h] 18h +
jnz loc_425710  +
mov dword ptr [esp] 8 +
call sub_42B400  +
test eax eax +
jz loc_425723  +
mov [ebx+8] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+0Ch] offset off_49C6E0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov eax 1 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_42570A  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov edx eax +
and edx 18h +
cmp dl 10h +
jnz loc_42574C  +
test byte ptr [ebx+2Ah] 1 +
jnz loc_425760  +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_425780  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_425776  +
and byte ptr [ebx+28h] 0F8h +
and byte ptr [ebx+2Bh] 0EDh +
and byte ptr [ebx+2Ah] 7Fh +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+2Bh] +
mov dword ptr [ebx+84h] offset asc_49BE80 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
and eax 0FFFFFFFBh +
or eax 1 +
mov [ebx+2Bh] al +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+8Ch] 0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+7Ch] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov [esp] ebx +
call sub_41E6C0  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_423080  +
mov eax 1 +
jmp loc_42575A  +
***
jmp sub_425850  +
***
mov ecx [esp+18h+arg_4] +
test ecx ecx +
js loc_4258B6  +
mov eax [esp+18h+arg_0] +
mov edx [eax+0A8h] +
jz loc_425885  +
add ecx 7 +
and ecx 0FFFFFFF8h +
jnz loc_42588A  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call sub_488230  +
test eax eax +
jz loc_4258A0  +
add esp 18h +
pop ebx  +
retn   +
mov ecx 8 +
mov ebx [edx+4] +
cmp ebx ecx +
jb loc_425870  +
mov eax [edx] +
sub ebx ecx +
mov [edx+4] ebx +
add eax ecx +
mov [edx] eax +
sub eax ecx +
jmp loc_42587C  +
mov [esp+18h+var_18] 6 +
mov [esp+18h+var_C] eax +
call sub_420C50  +
mov eax [esp+18h+var_C] +
jmp loc_425880  +
mov [esp+18h+var_18] 6 +
call sub_420C50  +
xor eax eax +
jmp loc_425880  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov esi [esp+14h+arg_0] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_4258FD  +
test ecx ecx +
jz loc_4258FD  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_425912  +
imul ecx ebx +
mov [esp+14h+arg_0] esi +
mov [esp+14h+arg_4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_425850  +
mov [esp+14h+var_14] 6 +
call sub_420C50  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_425963  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
call sub_425060  +
test eax eax +
mov ebx eax +
jz loc_425A01  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_42AEB0  +
test eax eax +
jz loc_425A05  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_476140  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+4] eax +
call dword ptr [esp+28h]  +
test eax eax +
mov esi eax +
jz loc_425A05  +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_425930  +
mov edx [esp+30h] +
mov [eax+4] edx +
mov edx [esp+34h] +
mov [eax] esi +
mov [eax+8] edx +
mov edx [esp+38h] +
mov [eax+0Ch] edx +
mov [ebx+8] eax +
mov eax ebx +
mov dword ptr [ebx+0Ch] offset off_49C4A0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_4259FB  +
***
mov eax ebx +
call sub_424AF0  +
xor eax eax +
nop   +
jmp loc_4259FB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_425A3C  +
test ecx ecx +
jnz loc_425A75  +
mov esi ebx +
mov eax [esp+14h+arg_0] +
imul esi ecx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] esi +
call sub_425850  +
mov ebx eax +
xor eax eax +
test ebx ebx +
jz loc_425A6F  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] ebx +
call memset  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
jbe loc_425A3C  +
mov [esp+14h+var_14] 6 +
call sub_420C50  +
xor eax eax +
jmp loc_425A6F  +
***
mov eax [esp+arg_0] +
mov eax [eax+0A8h] +
mov [esp+arg_0] eax +
jmp sub_488370  +
***
push ebx  +
mov edx [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [esp+8] +
add ebx edx +
cmp edx ebx +
not eax  +
jnb loc_425AEE  +
mov ecx eax +
add edx 1 +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_49C0A0[ecx*4] +
cmp edx ebx +
jnz loc_425AD5  +
not eax  +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_425BE0  +
test edi edi +
jz loc_425C00  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_425BC4  +
mov [esp+2Ch+var_28] offset a_gnu_debugaltl +
mov [esp+2Ch+var_2C] ebx +
call sub_41E710  +
test eax eax +
mov esi eax +
jz loc_425B69  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_41F070  +
test eax eax +
jnz loc_425B73  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_425B69  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_48C620  +
lea ebp [eax+1] +
mov eax [esi+24h] +
cmp ebp eax +
jnb loc_425B69  +
sub eax ebp +
mov [edi] eax +
mov [esp+2Ch+var_2C] eax +
call sub_42B400  +
mov ecx [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_10] +
add edx ebp +
mov [ecx] eax +
mov ecx [edi] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] ecx +
call memcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 4D8h +
mov [esp+2Ch+var_2C] offset a____Binutil_11 +
call sub_420BA0  +
jmp loc_425B2B  +
mov [esp+2Ch+var_28] 4D6h +
mov [esp+2Ch+var_2C] offset a____Binutil_11 +
call sub_420BA0  +
jmp loc_425B17  +
mov [esp+2Ch+var_28] 4D7h +
mov [esp+2Ch+var_2C] offset a____Binutil_11 +
call sub_420BA0  +
jmp loc_425B1F  +
***
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_C] 0 +
mov [esp+28h+var_28] eax +
call sub_425B00  +
mov ebx eax +
mov eax [esp+28h+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call free  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx offset sub_424B50 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_424C80 +
jmp sub_424D50  +
***
mov eax [esp+arg_0] +
mov ecx offset sub_425C20 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_424C30 +
jmp sub_424D50  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
test ebx ebx +
jz loc_425D30  +
test eax eax +
jz loc_425D30  +
mov [esp+10h+var_10] eax +
call sub_4885A0  +
mov [esp+10h+var_C] offset a_gnu_debugli_0 +
mov [esp+10h+var_10] ebx +
mov edi eax +
call sub_41E710  +
test eax eax +
jnz loc_425D30  +
mov [esp+10h+var_8] 2108h +
mov [esp+10h+var_C] offset a_gnu_debugli_0 +
mov [esp+10h+var_10] ebx +
call sub_41EBD0  +
test eax eax +
mov esi eax +
jz loc_425D45  +
mov [esp+10h+var_10] edi +
call strlen  +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] ebx +
add eax 4 +
and eax 0FFFFFFFCh +
add eax 4 +
mov [esp+10h+var_8] eax +
call sub_41EDE0  +
test eax eax +
jz loc_425D45  +
mov eax esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 5 +
call sub_420C50  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_425D29  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_8] +
test edx edx +
jz loc_425EB5  +
mov eax [esp+2Ch+arg_4] +
test eax eax +
jz loc_425EB5  +
test edi edi +
jz loc_425EB5  +
mov [esp+2Ch+var_28] offset aRb_1 +
mov [esp+2Ch+var_2C] edi +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_425EDD  +
xor ebx ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] 2000h +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] offset unk_4BD260 +
call fread  +
test eax eax +
jz loc_425DED  +
add eax offset unk_4BD260 +
not ebx  +
cmp eax offset unk_4BD260 +
jbe loc_425DE9  +
mov edx offset unk_4BD260 +
nop   +
mov ecx ebx +
add edx 1 +
xor cl [edx-1] +
shr ebx 8 +
movzx ecx cl +
xor ebx ds:dword_49C0A0[ecx*4] +
cmp edx eax +
jnz loc_425DD0  +
not ebx  +
jmp loc_425D97  +
mov [esp+2Ch+var_2C] esi +
call fclose  +
mov [esp+2Ch+var_2C] edi +
call sub_4885A0  +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] eax +
call strlen  +
lea edi [eax+4] +
mov ebp eax +
and edi 0FFFFFFFCh +
lea eax [edi+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_14] eax +
call sub_42B400  +
mov esi eax +
xor eax eax +
test esi esi +
jz loc_425EAD  +
mov ecx [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] ecx +
call memcpy  +
mov edx edi +
add edi esi +
sub edx ebp +
mov eax edx +
lea edx [esi+ebp] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] 0 +
call memset  +
mov edx [esp+2Ch+arg_0] +
mov eax [edx+4] +
mov eax [eax+30h] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_41EE20  +
mov edx eax +
mov eax 1 +
test edx edx +
jz loc_425ECB  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 5 +
call sub_420C50  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] esi +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 1 +
call sub_420C50  +
xor eax eax +
jmp loc_425EAD  +
***
mov eax [esp+arg_0] +
mov eax [eax] +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov edx [eax] +
mov eax [eax+4] +
xor eax [ecx+4] +
xor edx [ecx] +
or edx eax +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
sub esp 18h +
xor edx edx +
test byte ptr [ebx+2Bh] 1 +
jnz loc_425F73  +
mov edx [ebx+4] +
mov edx [edx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_425380  +
test eax eax +
jz loc_425FA9  +
movzx edx byte ptr [ebx+2Ch] +
movzx ecx byte ptr [eax+2Ch] +
and edx 10h +
and ecx 0FFFFFFEFh +
or ecx edx +
movzx edx byte ptr [eax+2Bh] +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFF7h +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov ebp [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+0ECh] +
mov [esp+30h+var_30] esi +
call eax  +
test eax eax +
jz loc_425FE1  +
mov ebx [eax+4] +
mov [esp+30h+var_30] eax +
call free  +
cmp ebx 3 +
ja loc_425FF0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_425930  +
test eax eax +
mov edi eax +
jz loc_425FE1  +
mov [esp+30h+var_28] esi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_429CF0  +
cmp eax ebx +
jz loc_426040  +
call sub_420A00  +
cmp eax 1 +
nop   +
jz loc_42602E  +
mov [esp+30h+var_30] 0Ah +
call sub_420C50  +
mov [esp+30h+var_2C] edi +
mov [esp+30h+var_30] esi +
call sub_425AA0  +
jmp loc_425FE1  +
mov [esp+30h+var_20] eax +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
mov ecx [esp+30h+var_20] +
sub ecx 4 +
shr eax 3 +
lea edx ds:0[eax*8] +
cmp edx ecx +
mov [ebp+14h] eax +
ja loc_426153  +
shl eax 4 +
add edi 4 +
mov dword ptr [ebp+8] 0 +
lea edx [edi+edx+4] +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_18] edx +
call sub_425850  +
test eax eax +
mov ebx eax +
mov [ebp+10h] eax +
jz loc_425FE1  +
mov eax [ebp+14h] +
xor edx edx +
test eax eax +
jz loc_4260F0  +
mov [esp+30h+var_20] ebp +
mov ebp esi +
mov esi edx +
lea esi [esi+0] +
mov eax [ebp+4] +
add esi 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
lea ecx [edi+4] +
add edi 8 +
add eax [esp+30h+var_18] +
mov [ebx-10h] eax +
mov eax [ebp+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+30h+var_20] +
cmp [eax+14h] esi +
ja loc_4260B0  +
mov esi ebp +
mov ebp eax +
mov [esp+30h+var_30] esi +
call sub_429E20  +
mov [esp+30h+var_1C] edx +
mov edi [esp+30h+var_1C] +
mov [esp+30h+var_20] eax +
sar edi 1Fh +
mov eax edi +
sar eax 1Fh +
mov [esp+30h+var_14] eax +
mov eax [esp+30h+var_20] +
mov [esp+30h+var_18] edi +
mov edx [esp+30h+var_14] +
xor eax edi +
mov ecx eax +
mov ebx edx +
sub ecx [esp+30h+var_18] +
and ecx 1 +
mov eax ecx +
xor eax edi +
mov ecx eax +
mov eax [esp+30h+var_18] +
sub ecx eax +
mov eax 1 +
sbb ebx edx +
add ecx [esp+30h+var_20] +
adc ebx [esp+30h+var_1C] +
mov [ebp+0] ecx +
mov [ebp+4] ebx +
or byte ptr [esi+2Bh] 20h +
jmp loc_425FE3  +
mov [esp+30h+var_30] 3 +
call sub_420C50  +
jmp loc_42602E  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
mov [esp+48h+var_20] edx +
call sub_4885B0  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_1C] eax +
call sub_4884B0  +
mov [esp+48h+var_48] edi +
test eax eax +
cmovnz ebp eax +
mov [esp+48h+var_28] eax +
call sub_4884B0  +
test eax eax +
mov [esp+48h+var_24] eax +
cmovnz edi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+0] +
mov ebx ebp +
test al al +
jnz loc_4261CE  +
jmp loc_4261D2  +
cmp al 2Fh +
jz loc_4261D2  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4261D2  +
cmp al 5Ch +
jnz loc_4261C0  +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_42631D  +
cmp cl 5Ch +
jz loc_426399  +
cmp cl 2Fh +
mov esi edi +
jnz loc_426207  +
lea esi [esi+0] +
jmp loc_426399  +
cmp dl 5Ch +
jz loc_4263A0  +
cmp dl 2Fh +
jz loc_4263A0  +
add esi 1 +
movzx edx byte ptr [esi] +
test dl dl +
jnz loc_4261F5  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_2C] ecx +
call strlen  +
mov ecx [esp+48h+var_2C] +
lea esi [eax+1] +
mov eax [esp+48h+var_20] +
xor edx edx +
xor ebx ebx +
add eax 1 +
nop   +
cmp cl 5Ch +
jz loc_42623A  +
cmp cl 2Fh +
jnz loc_42624B  +
cmp edi eax +
jbe loc_426248  +
cmp byte ptr [edi-1] 2Eh +
jz loc_42630B  +
add ebx 1 +
add edi 1 +
movzx ecx byte ptr [edi] +
test cl cl +
jnz loc_426230  +
lea eax [ebx+ebx*2] +
add esi eax +
test edx edx +
mov [esp+48h+var_2C] edx +
jz loc_4263F4  +
mov edi [esp+48h+var_1C] +
mov [esp+48h+var_48] edi +
call strlen  +
mov edx [esp+48h+var_2C] +
mov ecx edi +
lea edi [edi+eax-1] +
cmp ecx edi +
setb cl  +
test edx edx +
jz loc_42629F  +
test cl cl +
jz loc_42629F  +
movzx eax byte ptr [edi] +
jmp loc_426294  +
cmp al 2Fh +
jz loc_426298  +
cmp al 5Ch +
jnz loc_426290  +
sub edx 1 +
test edx edx +
jnz loc_426285  +
test edx edx +
jnz loc_4263DB  +
mov [esp+48h+var_48] edi +
call strlen  +
lea esi [esi+eax+1] +
cmp esi ds:dword_4C1284 +
jbe loc_426334  +
mov eax ds:dword_4C1280 +
test eax eax +
jz loc_4262CC  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] esi +
mov ds:dword_4C1284 0 +
call sub_42B400  +
test eax eax +
mov ds:dword_4C1280 eax +
jz loc_4263D7  +
test ebx ebx +
mov ds:dword_4C1284 esi +
mov esi eax +
jnz loc_42633E  +
test edi edi +
mov eax esi +
jnz loc_426359  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] eax +
call strcpy  +
jmp loc_426377  +
cmp byte ptr [edi-2] 2Eh +
jnz loc_426248  +
add edx 1 +
jmp loc_42624B  +
mov [esp+48h+var_48] ebp +
call strlen  +
lea esi [eax+1] +
xor ebx ebx +
xor edi edi +
cmp esi ds:dword_4C1284 +
ja loc_4262BB  +
test ebx ebx +
mov esi ds:dword_4C1280 +
jz loc_4262F7  +
mov edx ebx +
mov eax esi +
mov dword ptr [eax] 2F2E2Eh +
add eax 3 +
sub edx 1 +
jnz loc_426342  +
lea eax [ebx+ebx*2] +
add eax esi +
test edi edi +
jz loc_4262FD  +
mov [esp+48h+var_3C] ebp +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] offset aSS_9 +
mov [esp+48h+var_48] eax +
call sprintf  +
mov esi ds:dword_4C1280 +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [esp+48h+var_24] +
mov [esp+48h+var_48] eax +
call free  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edi +
nop   +
lea esi [esi+0] +
test al al +
jz loc_426211  +
mov eax ebx +
mov edx esi +
sub eax ebp +
sub edx edi +
cmp eax edx +
jnz loc_426211  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call sub_4761D0  +
test eax eax +
jnz loc_4263FB  +
lea ebp [ebx+1] +
lea edi [esi+1] +
jmp loc_4261B0  +
xor esi esi +
jmp loc_426377  +
mov [esp+48h+var_44] 5F3h +
mov [esp+48h+var_48] offset a____Binutil_12 +
call sub_420BA0  +
jmp loc_4262A7  +
xor edi edi +
jmp loc_42632C  +
mov [esp+48h+var_48] ebp +
nop   +
call strlen  +
movzx ecx byte ptr [edi] +
test cl cl +
lea esi [eax+1] +
jz loc_426328  +
jmp loc_426224  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov eax [eax+8] +
mov [esp+1Ch+var_1C] eax +
call sub_4255B0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_C] +
mov [esp+10h+var_C] 14h +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] offset unk_4C129D +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_4] eax +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
call sub_425F20  +
mov [esp+10h+var_10] offset unk_4C129D +
call strlen  +
cmp eax esi +
mov ebx eax +
jb loc_4264A0  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] edi +
mov [esp+10h+arg_4] offset unk_4C129D +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memcpy  +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_4C129D +
call memcpy  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] 20h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memset  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] offset a10lu +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_C] 15h +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_10] offset unk_4C1288 +
mov [esp+10h+var_4] eax +
call sub_425F20  +
mov [esp+10h+var_10] offset unk_4C1288 +
call strlen  +
cmp eax esi +
mov ebx eax +
ja loc_426580  +
jb loc_426546  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] offset unk_4C1288 +
call memcpy  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_4C1288 +
call memcpy  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] 20h +
call memset  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 13h +
call sub_420C50  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_425930  +
test eax eax +
mov [ebx+0A0h] eax +
setnz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
test byte ptr [eax+2Bh] 20h +
jz loc_426602  +
mov edx [esp+24h] +
lea ecx [edx+1] +
xor edx edx +
cmp dword ptr [esp+24h] 0FFFFFFFFh +
cmovnz edx ecx +
mov ecx [eax+0A0h] +
mov eax 0FFFFFFFFh +
cmp edx [ecx+14h] +
jb loc_426617  +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax edx +
shl eax 4 +
add eax [ecx+10h] +
mov ecx [esp+28h] +
mov [ecx] eax +
mov eax edx +
add esp 1Ch +
retn   +
***
jmp sub_425130  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax+94h] edx +
mov eax 1 +
retn   +
***
mov ebx [esp+28h+arg_0] +
mov edx [esp+28h+arg_8] +
mov eax [ebx+0A0h] +
mov ecx [eax+8] +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_14] edx +
test ecx ecx +
mov [esp+28h+var_18] eax +
jz loc_4266B4  +
lea eax [esp+28h+var_18] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ecx +
call sub_474C30  +
test eax eax +
jz loc_4266B4  +
mov eax [eax+8] +
movzx ecx byte ptr [ebx+2Bh] +
movzx edx byte ptr [eax+2Bh] +
and ecx 8 +
and edx 0FFFFFFF7h +
or edx ecx +
mov [eax+2Bh] dl +
add esp 28h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_4266AF  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov eax [ebx+0A0h] +
mov ebp [eax+8] +
test ebp ebp +
jz loc_426734  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 10h +
call sub_425930  +
mov [eax] esi +
mov ebx eax +
mov [eax+4] edi +
mov eax [esp+2Ch+arg_C] +
mov [ebx+8] eax +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_474E30  +
mov [eax] ebx +
mov eax [esp+2Ch+arg_C] +
mov eax [eax+88h] +
mov [eax+18h] ebp +
mov [eax+20h] esi +
mov [eax+24h] edi +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_18] offset free +
mov [esp+2Ch+var_1C] offset j_calloc +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] offset sub_425F00 +
mov [esp+2Ch+var_28] offset sub_425EF0 +
mov [esp+2Ch+var_2C] 10h +
call sub_474870  +
test eax eax +
mov ebp eax +
jz loc_426780  +
mov eax [ebx+0A0h] +
mov [eax+8] ebp +
jmp loc_4266E0  +
xor eax eax +
jmp loc_42672C  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+8Ch+arg_0] +
lea ebp [esp+34h] +
mov dword ptr [esp+4] 3Ch +
mov [esp+0] ebp +
mov [esp+8] ebx +
call sub_429CF0  +
cmp eax 3Ch +
jz loc_4267F6  +
call sub_420A00  +
cmp eax 1 +
jz loc_4267EC  +
mov dword ptr [esp+0] 9 +
call sub_420C50  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ah +
call sub_420C50  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+8Ch+var_20+2] +
mov edi offset asc_49C4EA +
mov ecx 2 +
mov esi eax +
cmps   +
jz loc_426834  +
mov esi [esp+8Ch+arg_4] +
test esi esi +
jz loc_4267E0  +
mov edi [esp+8Ch+arg_4] +
mov dword ptr [esp+8] 2 +
mov [esp+0] eax +
mov [esp+4] edi +
call strncmp  +
test eax eax +
jnz loc_4267E0  +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+50h+var_24] +
movzx edi [esp+50h+arg_1A] +
mov [esp+50h+var_48] eax +
lea eax [esp+50h+arg_10] +
mov [esp+50h+var_4C] offset aLu +
mov [esp+50h+var_50] eax +
mov [esp+50h+arg_1A] 0 +
call sscanf  +
mov ecx edi +
mov [esp+50h+arg_1A] cl +
cmp eax 1 +
jnz loc_4267E0  +
movzx edx byte ptr [esp+34h] +
cmp dl 2Fh +
jz loc_426A50  +
cmp dl 20h +
jz loc_426A22  +
cmp dl 23h +
jz loc_426990  +
mov eax [ebx+4] +
movzx edi byte ptr [eax+1Ah] +
mov [esp+50h+var_48] edi +
mov [esp+50h+var_4C] 0 +
mov [esp+50h+var_50] ebp +
call memchr  +
test eax eax +
jz loc_426B55  +
sub eax ebp +
mov edi eax +
lea eax [edi+65h] +
xor edx edx +
mov [esp+50h+var_40] 0 +
mov [esp+50h+var_3C] 0 +
mov [esp+50h+var_50] eax +
mov [esp+50h+var_34] edx +
call sub_42B590  +
test eax eax +
mov esi eax +
jz loc_4267EC  +
mov edx [esp+50h+var_34] +
xor ecx ecx +
lea eax [esi+28h] +
test edx edx +
mov [esi] eax +
mov eax [esp+34h] +
mov [esi+28h] eax +
mov eax [esp+50h+var_19+1] +
mov [esi+2Ch] eax +
mov eax [esp+50h+var_14] +
mov [esi+30h] eax +
mov eax [esp+40h] +
mov [esi+34h] eax +
mov eax [esp+50h+var_E+2] +
mov [esi+38h] eax +
mov eax [esp+50h+var_8] +
mov [esi+3Ch] eax +
mov eax [esp+50h+var_4] +
mov [esi+40h] eax +
mov eax [esp+50h] +
mov [esi+44h] eax +
mov eax [esp+50h+arg_0] +
mov [esi+48h] eax +
mov eax [esp+50h+arg_4] +
mov [esi+4Ch] eax +
mov eax [esp+50h+arg_8] +
mov [esi+50h] eax +
mov eax [esp+50h+arg_C] +
mov [esi+54h] eax +
mov eax [esp+50h+arg_10] +
mov [esi+58h] eax +
mov eax [esp+50h+arg_14] +
mov [esi+5Ch] eax +
mov eax [esp+6Ch] +
mov [esi+60h] eax +
mov eax [esp+50h+var_24] +
mov [esi+4] eax +
mov [esi+8] ecx +
mov ecx [esp+50h+var_40] +
mov ebx [esp+50h+var_3C] +
mov [esi+10h] ecx +
mov [esi+14h] ebx +
jz loc_426B00  +
mov [esi+0Ch] edx +
add esp 7Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+50h+var_1B] 31h +
jnz loc_426897  +
cmp byte ptr [esp+36h] 2Fh +
jnz loc_426897  +
movzx eax byte ptr [esp+50h+var_19] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_426897  +
lea eax [esp+50h+var_19] +
mov [esp+50h+var_50] eax +
call atoi  +
sub [esp+50h+var_24] eax +
mov ecx eax +
lea eax [eax+65h] +
mov [esp+50h+var_50] eax +
mov [esp+50h+var_40] ecx +
call sub_42B590  +
test eax eax +
mov esi eax +
jz loc_4267EC  +
mov ecx [esp+50h+var_40] +
lea edx [eax+64h] +
mov [esp+50h+var_50] edx +
mov [esp+50h+var_48] ebx +
mov [esp+50h+var_40] edx +
mov [esp+50h+var_4C] ecx +
mov [esp+50h+var_34] ecx +
call sub_429CF0  +
mov ecx [esp+50h+var_34] +
mov edx [esp+50h+var_40] +
cmp eax ecx +
mov edi eax +
jz loc_426B92  +
mov [esp+50h+var_50] esi +
call free  +
jmp loc_4267BB  +
mov eax [ebx+4] +
mov [esp+50h+var_40] edx +
movzx edi byte ptr [eax+1Ah] +
mov [esp+50h+var_4C] 2Fh +
mov [esp+50h+var_50] ebp +
mov [esp+50h+var_48] edi +
call memchr  +
mov edx [esp+50h+var_40] +
test eax eax +
jnz loc_42689E  +
lea esi [esi+0] +
mov eax [ebx+0A0h] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_42688E  +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+50h+var_20] +
mov [esp+50h+var_4C] eax +
lea eax [esp+50h+var_1B] +
mov [esp+50h+var_48] 0Ah +
mov [esp+50h+var_50] eax +
call strtol  +
mov edi eax +
call esi  +
mov edx [eax] +
test edx edx +
jnz loc_4267E0  +
mov eax [ebx+0A0h] +
cmp edi [eax+1Ch] +
jnb loc_4267E0  +
test byte ptr [ebx+2Bh] 40h +
jz loc_426B15  +
mov edx [esp+50h+var_20] +
mov [esp+50h+var_40] 0 +
mov [esp+50h+var_3C] 0 +
test edx edx +
jz loc_426B25  +
cmp byte ptr [edx] 3Ah +
jnz loc_426B25  +
add edx 1 +
mov [esp+50h+var_50] edx +
mov [esp+50h+var_48] 0Ah +
mov [esp+50h+var_4C] 0 +
call strtol  +
mov [esp+50h+var_40] eax +
sar eax 1Fh +
mov [esp+50h+var_3C] eax +
call esi  +
mov eax [eax] +
test eax eax +
jnz loc_4267E0  +
mov eax [ebx+0A0h] +
jmp loc_426B25  +
lea eax [esi+64h] +
test edi edi +
mov [esi+0Ch] eax +
jnz loc_426B40  +
mov byte ptr [eax+edi] 0 +
mov eax esi +
jmp loc_4267D3  +
mov [esp+50h+var_40] 0 +
mov [esp+50h+var_3C] 0 +
mov edx edi +
add edx [eax+18h] +
jz loc_4267EC  +
mov eax 64h +
xor edi edi +
jmp loc_4268D3  +
mov [esp+50h+var_48] edi +
mov [esp+50h+var_4C] ebp +
mov [esp+50h+var_50] eax +
call memcpy  +
mov eax [esi+0Ch] +
jmp loc_426B0A  +
mov [esp+50h+var_48] edi +
mov [esp+50h+var_4C] 2Fh +
mov [esp+50h+var_50] ebp +
call memchr  +
test eax eax +
jnz loc_4268BA  +
mov [esp+50h+var_48] edi +
mov [esp+50h+var_4C] 20h +
mov [esp+50h+var_50] ebp +
call memchr  +
test eax eax +
jz loc_4268BE  +
jmp loc_4268BA  +
mov byte ptr [esi+eax+64h] 0 +
mov ecx eax +
mov [esp+50h+var_40] 0 +
mov [esp+50h+var_3C] 0 +
jmp loc_4268EF  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_426790  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi] +
mov [esp+1Ch+var_1C] ebx +
call sub_4885A0  +
mov esi [esp+1Ch+arg_4] +
cmp eax ebx +
jz loc_426C2F  +
sub eax ebx +
mov [esp+1Ch+var_1C] esi +
mov ebp eax +
call strlen  +
mov [esp+1Ch+var_1C] edi +
lea eax [ebp+eax+1] +
mov [esp+1Ch+var_18] eax +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_426C40  +
mov [esp+1Ch+var_14] ebp +
add ebp edi +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call strncpy  +
mov [esp+1Ch+var_18] esi +
mov esi edi +
mov [esp+1Ch+var_1C] ebp +
call strcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_426C2F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
call sub_426660  +
test eax eax +
mov ebx eax +
jz loc_426C83  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
call sub_429F00  +
test eax eax +
js loc_426C79  +
mov eax [ebp+4] +
mov eax [eax+0ECh] +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_426C79  +
test byte ptr [ebp+2Bh] 40h +
mov ebx [eax+0Ch] +
jz loc_426E75  +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_426CF8  +
cmp al 2Fh +
jz loc_426CF8  +
test al al +
nop   +
jz loc_426CD8  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_426CF8  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_426BD0  +
test eax eax +
mov ebx eax +
jnz loc_426CF8  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_426C79  +
mov eax [esp+2Ch+var_14] +
cmp dword ptr [eax+14h] 0 +
jl loc_426DAB  +
jle loc_426DA1  +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_476180  +
test eax eax +
jz loc_426EE3  +
mov esi [ebp+98h] +
test esi esi +
jnz loc_426D40  +
jmp loc_426EA0  +
mov esi [esi+90h] +
test esi esi +
jz loc_426EA0  +
mov eax [esi] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_476180  +
test eax eax +
jnz loc_426D32  +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] esi +
call sub_423080  +
test eax eax +
jz loc_426E87  +
mov eax [esp+2Ch+var_14] +
mov ebx [eax+14h] +
mov ecx [eax+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ecx +
call sub_426C50  +
test eax eax +
mov ebx eax +
jz loc_426CEA  +
mov [esp+2Ch+var_2C] ebp +
call sub_429E20  +
mov [ebx+40h] eax +
mov [ebx+44h] edx +
jmp loc_426C79  +
cmp dword ptr [eax+10h] 0 +
ja loc_426D0C  +
mov edx ebp +
mov eax ebx +
call sub_425F60  +
test eax eax +
mov ecx eax +
jz loc_426EE3  +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_429E20  +
mov ecx [esp+2Ch+var_10] +
mov [ecx+40h] eax +
mov [ecx+44h] edx +
test byte ptr [ebp+2Bh] 40h +
jz loc_426EC6  +
mov dword ptr [ecx+38h] 0 +
mov dword ptr [ecx+3Ch] 0 +
mov eax [esp+2Ch+var_14] +
mov ebx [ecx+28h] +
mov [ecx+88h] eax +
mov eax [ebp+28h] +
mov edx ebx +
and ebx 0FF80001Fh +
shr edx 5 +
and edx 3FFFFh +
shr eax 5 +
and eax 2C000h +
or eax edx +
shl eax 5 +
or ebx eax +
movzx eax byte ptr [ecx+2Ch] +
mov [ecx+28h] ebx +
movzx edx byte ptr [ebp+2Ch] +
and eax 0FFFFFFFDh +
and edx 2 +
or eax edx +
mov [ecx+2Ch] al +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_4266C0  +
mov ecx [esp+2Ch+var_10] +
mov ebx ecx +
test eax eax +
jnz loc_426C79  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov dword ptr [ebx+88h] 0 +
xor ebx ebx +
jmp loc_426C79  +
mov [esp+2Ch+var_2C] ebp +
call sub_425130  +
test eax eax +
mov ecx eax +
jnz loc_426DBE  +
mov eax [esp+2Ch+var_14] +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_426C79  +
mov edx ebp +
mov eax ebx +
call sub_425F60  +
test eax eax +
jz loc_426E87  +
mov edx [ebp+98h] +
mov esi eax +
mov [eax+90h] edx +
mov [ebp+98h] eax +
jmp loc_426D52  +
mov [ecx+38h] eax +
mov [ecx+3Ch] edx +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_476140  +
mov ecx [esp+2Ch+var_10] +
mov [ecx] eax +
jmp loc_426DEC  +
mov [esp+2Ch+var_2C] 0Ah +
call sub_420C50  +
jmp loc_426E87  +
***
jmp loc_426F00  +
sub esp 1Ch +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [ecx+0A0h] +
shl eax 4 +
add eax [edx+10h] +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp] ecx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_426C50  +
add esp 1Ch +
retn   +
***
jmp sub_426F40  +
***
mov eax [esp+18h+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 2 +
jnz loc_426F70  +
and edx 18h +
cmp dl 10h +
jz loc_426F70  +
mov edx [eax+4] +
mov edx [edx+0F4h] +
add esp 18h +
pop ebx  +
jmp edx  +
mov [esp+18h+var_18] 5 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+34h] +
test ecx ecx +
jz loc_427003  +
mov ebx [esp+30h] +
mov eax [ecx+40h] +
mov edx [ecx+44h] +
test byte ptr [ebx+2Bh] 40h +
jnz loc_426FE7  +
mov ecx [ecx+88h] +
xor ebx ebx +
mov ecx [ecx+4] +
add ecx eax +
mov ebp ecx +
adc ebx edx +
and ebp 1 +
xor edi edi +
add ecx ebp +
adc ebx edi +
cmp edx ebx +
jb loc_426FE3  +
ja loc_426FD3  +
cmp eax ecx +
jb loc_426FE3  +
mov dword ptr [esp] 0Ah +
call sub_420C50  +
xor eax eax +
jmp loc_426FFB  +
mov eax ecx +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_426C50  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov eax [eax+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
jmp loc_426FE7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
lea ebp [esp+17h] +
mov dword ptr [esp+4] 8 +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_429CF0  +
cmp eax 8 +
jz loc_427068  +
call sub_420A00  +
cmp eax 1 +
jz loc_42705E  +
mov dword ptr [esp] 3 +
call sub_420C50  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi offset aThin +
mov ecx 8 +
movzx eax byte ptr [ebx+2Bh] +
mov esi ebp +
cmps   +
mov edi offset aArch +
mov ecx 8 +
mov esi ebp +
setz dl  +
and eax 0FFFFFFBFh +
shl edx 6 +
or eax edx +
mov [ebx+2Bh] al +
cmps   +
jz loc_4270A8  +
mov edi offset aBout +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_427113  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_425930  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_4271A4  +
mov dword ptr [eax] 8 +
mov dword ptr [eax+4] 0 +
mov eax [ebx+4] +
mov eax [eax+0D8h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_427120  +
mov eax [ebx+4] +
mov eax [eax+0DCh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_427120  +
movzx eax byte ptr [ebx+2Bh] +
and eax 21h +
cmp al 21h +
jz loc_427155  +
mov eax [ebx+4] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 40h +
jnz loc_4270A8  +
jmp loc_42705E  +
***
call sub_420A00  +
cmp eax 1 +
jz loc_427136  +
mov dword ptr [esp] 3 +
call sub_420C50  +
mov eax [ebx+0A0h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425AA0  +
xor eax eax +
mov [ebx+0A0h] esi +
jmp loc_427060  +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_426F40  +
test eax eax +
mov esi eax +
jz loc_427108  +
and byte ptr [eax+2Bh] 0FEh +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_423080  +
test eax eax +
mov eax [ebx+4] +
jz loc_427060  +
cmp [esi+4] eax +
jz loc_427060  +
mov dword ptr [esp] 4 +
call sub_420C50  +
jmp loc_427108  +
***
mov [ebx+0A0h] esi +
jmp loc_427060  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0C0h] +
lea ebp [esp+3Eh] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_429CF0  +
mov edx 1 +
test eax eax +
jz loc_4271E9  +
cmp eax 10h +
jz loc_4271F6  +
xor edx edx +
add esp 0ACh +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_4271E7  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_427333  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_427333  +
mov edi offset asc_49C52E +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_427341  +
mov edi offset aSym64 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4273A6  +
mov edi offset a120 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_427288  +
and byte ptr [ebx+2Bh] 0DFh +
mov edx 1 +
jmp loc_4271E9  +
***
lea eax [esp+64h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_429CF0  +
cmp eax 3Ch +
jnz loc_4271E7  +
lea esi [esp+4Fh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 14h +
mov [esp] esi +
call sub_429CF0  +
cmp eax 14h +
jnz loc_4271E7  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFB0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_4271E7  +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset a___symdefSorte +
mov [esp] esi +
mov byte ptr [esp+63h] 0 +
call strncmp  +
test eax eax +
jz loc_427333  +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] offset a___symdef_1 +
mov [esp] esi +
call strncmp  +
test eax eax +
jnz loc_42727A  +
mov eax ebx +
call sub_425FB0  +
mov edx eax +
jmp loc_4271E9  +
***
mov eax [ebx+4] +
mov ebp [ebx+0A0h] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_4271E7  +
mov edi [eax+4] +
lea esi [esp+64h] +
mov [esp] eax +
call free  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] esi +
call sub_429CF0  +
cmp eax 4 +
jz loc_4273B7  +
call sub_420A00  +
cmp eax 1 +
jz loc_4271E7  +
mov dword ptr [esp] 0Ah +
call sub_420C50  +
xor edx edx +
jmp loc_4271E9  +
***
mov dword ptr [esp] 3 +
call sub_420C50  +
jmp loc_4271E7  +
***
mov [esp] esi +
sub edi 4 +
call sub_42B730  +
mov ecx edi +
mov dword ptr [esp+28h] offset sub_42B730 +
mov [esp+18h] eax +
shl eax 2 +
sub ecx eax +
cmp ecx 0FFFFFh +
mov [esp+20h] ecx +
ja loc_427499  +
mov eax [esp+18h] +
cmp eax 0FFFFFFFh +
ja loc_4271E7  +
mov edi [esp+20h] +
shl eax 4 +
mov ecx eax +
mov [esp+2Ch] eax +
lea eax [edi+eax+1] +
cmp ecx eax +
jnb loc_4271E7  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_425930  +
test eax eax +
mov esi eax +
mov [ebp+10h] eax +
jz loc_4271E7  +
mov eax [esp+18h] +
mov [esp] ebx +
lea edi ds:0[eax*4] +
mov [esp+4] edi +
call sub_425850  +
test eax eax +
mov [esp+24h] eax +
jz loc_427483  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_429CF0  +
cmp edi eax +
jz loc_4274E1  +
call sub_420A00  +
sub eax 1 +
jz loc_427473  +
mov dword ptr [esp] 0Ah +
call sub_420C50  +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425AA0  +
mov eax [ebp+10h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425AA0  +
xor edx edx +
jmp loc_4271E9  +
***
mov [esp] ebx +
call sub_423700  +
cmp eax 4 +
jnz loc_4273E5  +
mov eax [ebx+4] +
mov dword ptr [esp+28h] offset sub_42B730 +
cmp dword ptr [eax+4] 2 +
jnz loc_4273E5  +
mov [esp] esi +
call sub_42B760  +
mov dword ptr [esp+28h] offset sub_42B760 +
mov [esp+18h] eax +
shl eax 2 +
sub edi eax +
mov [esp+20h] edi +
jmp loc_4273E5  +
***
mov edi [esp+2Ch] +
mov eax [esp+20h] +
mov [esp+8] ebx +
add edi esi +
mov [esp+4] eax +
mov [esp] edi +
call sub_429CF0  +
cmp [esp+20h] eax +
jnz loc_42745D  +
mov [esp+0C0h] ebx +
xor edx edx +
mov ebx [esp+20h] +
jmp loc_427559  +
cmp [esp+18h] edx +
jbe loc_42755D  +
mov eax [esp+24h] +
mov [esp+20h] edx +
lea eax [eax+edx*4] +
mov [esp] eax +
mov eax [esp+28h] +
call eax  +
mov [esi] edi +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov [esp+4] ebx +
mov [esp] edi +
call sub_48C620  +
mov edx [esp+20h] +
cmp eax ebx +
adc eax 0 +
add esi 10h +
add edi eax +
sub ebx eax +
add edx 1 +
test ebx ebx +
jnz loc_427514  +
mov ebx [esp+0C0h] +
mov eax [esp+18h] +
mov byte ptr [edi] 0 +
mov [ebp+14h] eax +
mov [esp] ebx +
call sub_429E20  +
mov ecx eax +
and ecx 1 +
mov esi ecx +
mov ecx edx +
and ecx 80000000h +
test ecx ecx +
mov edi ecx +
jns loc_4275AD  +
add esi 0FFFFFFFFh +
mov ecx esi +
or ecx 0FFFFFFFEh +
mov [esp+18h] ecx +
mov esi [esp+18h] +
mov dword ptr [esp+1Ch] 0FFFFFFFFh +
mov edi [esp+1Ch] +
add esi 1 +
adc edi 0 +
add eax esi +
adc edx edi +
mov [ebp+0] eax +
mov [ebp+4] edx +
or byte ptr [ebx+2Bh] 20h +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425AA0  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_429F00  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_42727E  +
mov edx [eax] +
cmp byte ptr [edx] 2Fh +
jz loc_427618  +
mov [esp] eax +
call free  +
mov edx 1 +
jmp loc_4271E9  +
***
cmp byte ptr [edx+1] 20h +
jnz loc_427606  +
mov ecx [eax+4] +
xor ebx ebx +
add ecx 3Dh +
and ecx 0FFFFFFFEh +
add [ebp+0] ecx +
adc [ebp+4] ebx +
jmp loc_427606  +
***
jmp loc_427640  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 4Ch +
mov eax [esp+60h] +
lea ebp [esp+2Fh] +
mov eax [eax+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+18h] eax +
mov eax [esp+60h] +
mov [esp+8] eax +
call sub_429CF0  +
test eax eax +
jz loc_427681  +
cmp eax 10h +
jz loc_427690  +
xor ebx ebx +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+60h] +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] eax +
call sub_429F00  +
test eax eax +
jnz loc_42767F  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4276F2  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4276F2  +
mov edi offset asc_49C52E +
mov ecx 10h +
mov eax [esp+60h] +
mov esi ebp +
cmps   +
jz loc_427700  +
and byte ptr [eax+2Bh] 0DFh +
jmp loc_427681  +
***
mov eax [esp+60h] +
call sub_425FB0  +
mov ebx eax +
jmp loc_427681  +
***
mov eax [eax+4] +
mov edx [esp+60h] +
mov eax [eax+0ECh] +
mov [esp] edx +
call eax  +
test eax eax +
jz loc_42767F  +
mov ebx [eax+4] +
mov [esp] eax +
cmp ebx 5 +
ja loc_42773B  +
call free  +
mov dword ptr [esp] 3 +
call sub_420C50  +
jmp loc_42767F  +
***
call free  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_425930  +
test eax eax +
mov ebp eax +
jz loc_42767F  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+8] eax +
call sub_429CF0  +
cmp ebx eax +
jz loc_427793  +
call sub_420A00  +
cmp eax 1 +
jz loc_42767F  +
mov dword ptr [esp] 0Ah +
xor ebx ebx +
call sub_420C50  +
jmp loc_427681  +
***
mov eax [esp+60h] +
sub ebx 6 +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp] ebp +
call eax  +
mov edi [esp+18h] +
lea edx [ebp+2] +
mov dword ptr [edi+8] 0 +
mov [edi+14h] eax +
mov eax [esp+60h] +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
cmp ebx eax +
mov esi eax +
jb loc_42772A  +
mov eax [edi+14h] +
sub ebx esi +
mov [esp+1Ch] eax +
shl eax 3 +
cmp ebx eax +
jb loc_42772A  +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_425850  +
mov ebx eax +
mov eax [esp+18h] +
test ebx ebx +
mov [eax+10h] ebx +
jz loc_42767F  +
cmp dword ptr [eax+14h] 0 +
jz loc_427857  +
add ebp 6 +
xor edi edi +
add esi ebp +
mov [esp+1Ch] ebp +
mov ebp edi +
mov edi [esp+60h] +
mov eax [edi+4] +
add ebp 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
lea ecx [esi+4] +
add esi 8 +
add eax [esp+1Ch] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+18h] +
cmp [eax+14h] ebp +
ja loc_42781B  +
mov eax [esp+60h] +
mov [esp] eax +
call sub_429E20  +
mov edi edx +
mov esi eax +
and edi 80000000h +
and esi 1 +
test edi edi +
mov ecx esi +
mov ebx edi +
jns loc_427889  +
add ecx 0FFFFFFFFh +
or edi 0FFFFFFFFh +
or ecx 0FFFFFFFEh +
mov ebx edi +
add ecx 1 +
adc ebx 0 +
add eax ecx +
mov ecx [esp+18h] +
adc edx ebx +
mov ebx 1 +
mov [ecx] eax +
mov eax [esp+60h] +
mov [ecx+4] edx +
or byte ptr [eax+2Bh] 20h +
jmp loc_427681  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov eax [ebx+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_429F00  +
test eax eax +
jz loc_4278F0  +
xor ebp ebp +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+2Fh] +
mov ebp 1 +
mov [esp+8] ebx +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_429CF0  +
cmp eax 10h +
jnz loc_4278E4  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_4278E2  +
mov edi offset aArfilenames +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jz loc_42795E  +
mov edi offset asc_49C58D +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jnz loc_427A13  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
mov esi eax +
jz loc_4278E2  +
mov edi [eax+4] +
cmp edi 0FFFFFFFFh +
jz loc_4279F2  +
mov ebp [ebx+0A0h] +
lea eax [edi+1] +
mov [ebp+1Ch] edi +
mov [esp+4] eax +
mov [esp] ebx +
call sub_425930  +
mov [ebp+18h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
test eax eax +
jz loc_4279F2  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_429CF0  +
cmp eax edi +
jz loc_427A2C  +
call sub_420A00  +
cmp eax 1 +
jz loc_4279D0  +
mov dword ptr [esp] 0Ah +
call sub_420C50  +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425AA0  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov [esp] esi +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_4278E2  +
***
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_4278E4  +
***
mov eax [ebx+0A0h] +
mov ecx [esi+4] +
mov edi [eax+18h] +
add ecx edi +
mov eax edi +
cmp edi ecx +
jb loc_427A4E  +
jmp loc_427A77  +
cmp dl 5Ch +
jz loc_427A72  +
add eax 1 +
cmp eax ecx +
jz loc_427A77  +
movzx edx byte ptr [eax] +
cmp dl 0Ah +
jnz loc_427A42  +
cmp edi eax +
jnb loc_427AE1  +
xor edx edx +
cmp byte ptr [eax-1] 2Fh +
setz dl  +
neg edx  +
mov byte ptr [eax+edx] 0 +
movzx edx byte ptr [eax] +
jmp loc_427A42  +
***
mov byte ptr [eax] 2Fh +
jmp loc_427A47  +
***
mov byte ptr [ecx] 0 +
mov edi [ebx+0A0h] +
mov [esp] ebx +
call sub_429E20  +
mov [edi] eax +
mov [edi+4] edx +
mov ebx [ebx+0A0h] +
mov ecx [ebx+4] +
mov edi [ebx] +
sar ecx 1Fh +
xor edi ecx +
mov eax ecx +
cdq   +
mov eax edi +
mov [esp+18h] ecx +
sub eax [esp+18h] +
mov [esp+1Ch] edx +
mov ebp [esp+1Ch] +
and eax 1 +
mov edi eax +
xor edi ecx +
mov edx ebp +
mov eax edi +
mov edi [esp+18h] +
sub eax edi +
sbb edx ebp +
mov ebp 1 +
add eax [ebx] +
adc edx [ebx+4] +
mov [ebx] eax +
mov [ebx+4] edx +
mov [esp] esi +
call free  +
jmp loc_4278E4  +
***
xor edx edx +
jmp loc_427A69  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
xor esi esi +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov eax [eax+4] +
movzx eax byte ptr [eax+1Ah] +
mov [esp+20h] eax +
mov eax [esp+5Ch] +
mov dword ptr [eax] 0 +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jnz loc_427BC9  +
jmp loc_427C2E  +
mov eax [ebx+8Ch] +
mov ebp [ebx] +
test eax eax +
jz loc_427B44  +
test byte ptr [eax+2Bh] 40h +
jnz loc_427B44  +
mov ebp [eax] +
test esi esi +
jz loc_427B58  +
mov [esp+4] ebp +
mov [esp] esi +
call sub_476180  +
test eax eax +
jz loc_427BBF  +
movzx eax byte ptr [ebp+0] +
cmp al 5Ch +
jz loc_427C40  +
cmp al 2Fh +
jz loc_427C40  +
test al al +
jz loc_427B78  +
cmp byte ptr [ebp+1] 3Ah +
mov eax ebp +
jz loc_427BA4  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_427C40  +
cmp al 2Fh +
jz loc_427C40  +
test al al +
jz loc_427B9D  +
cmp byte ptr [edx+1] 3Ah +
mov eax ebp +
jz loc_427BA4  +
mov eax ebp +
call sub_426170  +
mov [esp] eax +
call strlen  +
mov esi [esp+54h] +
add edi eax +
test esi esi +
jnz loc_427C47  +
add edi 1 +
mov esi ebp +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_427C26  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_427B30  +
mov eax [ebx] +
mov [esp] eax +
call sub_4885A0  +
test eax eax +
jz loc_427EC0  +
mov [esp] eax +
mov [esp+18h] eax +
call strlen  +
mov edx [esp+18h] +
cmp [esp+20h] eax +
mov ebp eax +
jnb loc_427C55  +
mov eax [esp+50h] +
test byte ptr [eax+29h] 80h +
jnz loc_427C51  +
mov ecx [esp+54h] +
add ebp edi +
mov ebx [ebx+90h] +
lea edi [ebp+1] +
add ebp 2 +
test ecx ecx +
cmovnz edi ebp +
test ebx ebx +
jnz loc_427BC9  +
test edi edi +
jnz loc_427CE0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ebp +
jmp loc_427BA4  +
***
add edi 2 +
mov esi ebp +
jmp loc_427BBF  +
***
mov ebp [esp+20h] +
mov eax [ebx+88h] +
mov [esp+18h] edx +
mov ecx [eax] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] ecx +
mov [esp+1Ch] ecx +
call sub_4761D0  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
test eax eax +
jnz loc_427C9A  +
cmp ebp 0Fh +
ja loc_427BBF  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
cmp [ecx+ebp] al +
jz loc_427BBF  +
mov [esp] ecx +
mov [esp+8] ebp +
mov [esp+4] edx +
mov [esp+18h] ecx +
call memcpy  +
mov ecx [esp+18h] +
cmp [esp+20h] ebp +
jbe loc_427CC7  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [ecx+ebp] al +
jmp loc_427BBF  +
***
cmp ebp 0Fh +
ja loc_427BBF  +
cmp [esp+20h] ebp +
jnz loc_427BBF  +
jmp loc_427CB8  +
***
mov eax [esp+50h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_425930  +
mov ebp eax +
mov eax [esp+58h] +
test ebp ebp +
mov [eax] ebp +
jz loc_427EC0  +
mov eax [esp+5Ch] +
mov [eax] edi +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jz loc_427C2E  +
mov eax [esp+20h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+1Ch] 0 +
sub eax 1 +
mov [esp+28h] eax +
jmp loc_427E95  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_427D4E  +
test byte ptr [eax+2Bh] 40h +
jnz loc_427D4E  +
mov eax [eax] +
mov [esp+18h] eax +
mov edx [esp+1Ch] +
test edx edx +
jz loc_427D6E  +
mov eax [esp+18h] +
mov esi [esp+1Ch] +
mov [esp+4] eax +
mov [esp] esi +
call sub_476180  +
test eax eax +
jz loc_427DC7  +
mov eax [esp+18h] +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_427ED0  +
cmp al 2Fh +
jz loc_427ED0  +
test al al +
jz loc_427D95  +
mov eax [esp+18h] +
cmp byte ptr [eax+1] 3Ah +
mov esi eax +
jz loc_427DC7  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_427ED0  +
cmp al 2Fh +
jz loc_427ED0  +
test al al +
jz loc_427DBC  +
cmp byte ptr [edx+1] 3Ah +
mov esi [esp+18h] +
jz loc_427DC7  +
mov eax [esp+18h] +
call sub_426170  +
mov esi eax +
mov [esp] esi +
call strlen  +
cmp [esp+20h] eax +
mov edi eax +
jb loc_427DE5  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_427E87  +
mov eax [ebx+88h] +
cmp esi [esp+1Ch] +
mov edx [eax] +
jz loc_427E2B  +
lea eax [edi+1] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebp +
mov [esp+24h] edx +
call memcpy  +
mov eax [esp+54h] +
mov edx [esp+24h] +
test eax eax +
jnz loc_427EE0  +
mov byte ptr [ebp+edi+0] 0Ah +
mov ecx [esp+58h] +
mov eax ebp +
sub eax [ecx] +
mov [esp+24h] eax +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edx] al +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_427E4A  +
mov eax [ebx+3Ch] +
or eax [ebx+38h] +
jnz loc_427EF0  +
mov eax [esp+24h] +
add edx 1 +
mov dword ptr [esp+8] offset aLd_3 +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
call sub_426440  +
cmp esi [esp+1Ch] +
jz loc_427E87  +
mov eax [esp+18h] +
lea ebp [ebp+edi+1] +
cmp dword ptr [esp+54h] 1 +
mov [esp+1Ch] eax +
sbb ebp 0FFFFFFFFh +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_427C2E  +
mov eax [ebx] +
mov [esp+18h] eax +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_427D38  +
mov eax [esp+18h] +
mov [esp] eax +
call sub_4885A0  +
test eax eax +
mov esi eax +
jnz loc_427DC7  +
nop   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+18h] +
jmp loc_427DC7  +
***
mov byte ptr [ebp+edi+0] 2Fh +
mov byte ptr [ebp+edi+1] 0Ah +
jmp loc_427E1F  +
***
mov eax [esp+24h] +
mov dword ptr [esp+8] offset aLd_4 +
mov [esp+2Ch] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
lea eax [edx+1] +
mov [esp] eax +
call sub_425F20  +
mov edx [ebx+38h] +
mov dword ptr [esp+8] offset aLd_3 +
lea ecx [edx-3Ch] +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov ecx [esp+28h] +
sub ecx eax +
lea eax [edx+eax+1] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_426440  +
jmp loc_427E6D  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset aArfilenames_0 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] eax +
jmp loc_427AF0  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset asc_49C5B6 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
jmp loc_427AF0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov edx [eax+4] +
movzx edi byte ptr [edx+1Ah] +
mov edx [esp+48h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov dword ptr [edx] 0 +
mov edx [esp+44h] +
mov dword ptr [edx] 0 +
mov edx [esp+4Ch] +
mov dword ptr [edx] 0 +
mov ebp [eax+94h] +
test ebp ebp +
jz loc_428039  +
mov eax [ebp+0] +
mov [esp] eax +
call sub_4885A0  +
test eax eax +
jz loc_428075  +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_42802F  +
xor ecx ecx +
xor ebx ebx +
jmp loc_428012  +
mov ecx esi +
cmp dl 20h +
movzx edx byte ptr [eax+ecx+1] +
cmovz ebx edi +
lea esi [ecx+1] +
test dl dl +
jnz loc_428010  +
and ebx 1 +
jnz loc_428046  +
cmp [esp+1Ch] esi +
jb loc_428046  +
mov ebp [ebp+90h] +
test ebp ebp +
jnz loc_427FF3  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+88h] +
add ecx 4 +
and ecx 0FFFFFFFCh +
mov edx [eax] +
mov [eax+8] ecx +
mov eax [esp+1Ch] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset a1Lu +
mov [esp] edx +
mov [esp+4] eax +
call sub_426440  +
jmp loc_42802F  +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+88h] +
mov eax [eax] +
mov [esp+8] edx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_429DA0  +
cmp eax 3Ch +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov eax [esi+88h] +
mov ebx [eax] +
cmp byte ptr [ebx] 23h +
jz loc_428101  +
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 3Ch +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [ebx+1] 31h +
jnz loc_4280D8  +
cmp byte ptr [ebx+2] 2Fh +
jnz loc_4280D8  +
movzx eax byte ptr [ebx+3] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_4280D8  +
mov eax [esi] +
mov [esp] eax +
call sub_4885A0  +
mov [esp] eax +
mov ebp eax +
call strlen  +
mov edx [esi+88h] +
mov edi eax +
lea eax [eax+3] +
and eax 0FFFFFFFCh +
cmp [edx+8] eax +
jz loc_428164  +
mov dword ptr [esp+4] 73Dh +
mov dword ptr [esp] offset a____Binutil_12 +
mov [esp+0Ch] eax +
call sub_420BA0  +
mov edx [esi+88h] +
mov eax [esp+0Ch] +
add eax [edx+4] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [ebx+30h] +
mov [esp] eax +
call sub_4264E0  +
test eax eax +
jnz loc_428189  +
xor eax eax +
jmp loc_4280F9  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 3Ch +
jnz loc_428182  +
mov eax [esp+30h] +
mov [esp+4] edi +
mov [esp] ebp +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax edi +
jnz loc_428182  +
and edi 3 +
mov eax 1 +
jz loc_4280F9  +
mov eax [esp+30h] +
mov ebx 4 +
sub ebx edi +
mov [esp+4] ebx +
mov dword ptr [esp] offset unk_49C6A7 +
mov [esp+8] eax +
call sub_429DA0  +
cmp ebx eax +
setz al  +
movzx eax al +
jmp loc_4280F9  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov esi [esp+44h] +
mov eax [eax+88h] +
test eax eax +
jz loc_4282DA  +
mov ebx [eax] +
test ebx ebx +
jz loc_4282D3  +
lea ebp [ebx+10h] +
lea edi [esp+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+24h] eax +
jz loc_4282D3  +
lea ebp [ebx+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ah] ax +
jz loc_4282D3  +
lea ebp [ebx+22h] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ch] ax +
jz loc_4282D3  +
add ebx 28h +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strtol  +
cmp ebx [esp+1Ch] +
mov [esi+6] ax +
jz loc_4282D3  +
mov eax [esp+40h] +
mov eax [eax+88h] +
mov eax [eax+4] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_4282CB  +
***
mov dword ptr [esp] 5 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
jmp loc_4282CB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edi [esp+38h] +
mov [esp] eax +
call sub_4885A0  +
mov edx eax +
mov eax [ebp+4] +
mov [esp+0Ch] edx +
movzx esi byte ptr [eax+1Ah] +
mov [esp] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp esi eax +
mov ebx eax +
jb loc_428350  +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp esi ebx +
jbe loc_428348  +
mov eax [ebp+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+38h] esi +
mov [esp+30h] edi +
mov [esp+34h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov edi [esp+38h] +
mov edx [ebx+4] +
test byte ptr [ebx+29h] 80h +
movzx ebp byte ptr [edx+1Ah] +
jnz loc_4283D4  +
mov [esp] eax +
call sub_4885A0  +
test eax eax +
mov edx eax +
jz loc_4283F6  +
mov eax ebp +
mov [esp] edx +
movzx ebp al +
mov [esp+0Ch] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp ebp eax +
mov esi eax +
jnb loc_4283E0  +
cmp esi 0Fh +
ja loc_4283CC  +
cmp esi ebp +
jnz loc_4283CC  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+esi] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_4282F0  +
***
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp ebp esi +
ja loc_4283C2  +
jmp loc_4283B9  +
***
mov dword ptr [esp+8] offset aBfd_dont_trunc +
mov dword ptr [esp+4] 818h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_420BD0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov [esp] eax +
call sub_4885A0  +
mov edi eax +
mov eax [ebp+4] +
movzx ebx byte ptr [eax+1Ah] +
mov [esp] edi +
call strlen  +
cmp ebx eax +
mov esi eax +
jb loc_428480  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov ebx esi +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp ebx 0Fh +
ja loc_428477  +
mov eax [ebp+4] +
mov edx [esp+38h] +
movzx eax byte ptr [eax+19h] +
mov [edx+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp byte ptr [edi+esi-2] 2Eh +
jnz loc_428464  +
cmp byte ptr [edi+esi-1] 6Fh +
jnz loc_428464  +
mov eax [esp+38h] +
mov byte ptr [eax+ebx-2] 2Eh +
mov byte ptr [eax+ebx-1] 6Fh +
jmp loc_428464  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_14] 0 +
test eax eax +
jz loc_4284E4  +
mov edx eax +
and edx 1 +
lea eax [edx+eax+3Ch] +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_4C] 6000h +
call sub_42B400  +
mov edi eax +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edi edi +
jz loc_42878A  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
test eax eax +
mov [esp+4Ch+var_10] eax +
jz loc_428760  +
mov eax [esp+4Ch+arg_0] +
mov edx offset a___symdef_1 +
mov ebp [eax+94h] +
mov eax 0Ah +
test ebp ebp +
jnz loc_428558  +
jmp loc_4287C4  +
mov ebp [ebp+90h] +
mov edi [esp+4Ch+arg_0] +
test ebp ebp +
mov [edi+94h] ebp +
jz loc_4287C4  +
mov esi [ebp+0] +
mov edi edx +
mov ecx eax +
cmps   +
jz loc_428540  +
xor ebx ebx +
xor esi esi +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 400h +
jmp loc_42858F  +
mov ebp [ebp+90h] +
test ebp ebp +
jz loc_428836  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] ebp +
call sub_423080  +
test eax eax +
jz loc_428581  +
test byte ptr [ebp+29h] 2 +
jz loc_428581  +
mov eax [ebp+4] +
mov eax [eax+104h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_18] eax +
js loc_428750  +
jz loc_42873A  +
cmp eax ebx +
jle loc_428826  +
test ebx ebx +
jz loc_4285E1  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call sub_42B400  +
test eax eax +
mov [esp+4Ch+var_34] eax +
jz loc_428754  +
mov eax [ebp+4] +
mov ebx [esp+4Ch+var_34] +
mov eax [eax+108h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_28] eax +
js loc_428754  +
jz loc_428736  +
mov [esp+4Ch+var_20] ebp +
xor ebx ebx +
mov ebp esi +
jmp loc_4286C4  +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_48] 4 +
mov edi eax +
lea eax [ebp+ebp*2+0] +
lea esi [ecx+eax*8] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
test eax eax +
mov [esi] eax +
mov [esp+4Ch+var_30] eax +
jz loc_428754  +
lea eax [edi+1] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
mov edx [esp+4Ch+var_30] +
mov [edx] eax +
mov eax [esi] +
mov eax [eax] +
test eax eax +
jz loc_428754  +
mov ecx [esp+4Ch+var_34] +
add ebp 1 +
mov edx [ecx+ebx*4] +
mov edx [edx+4] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call strcpy  +
mov eax [esp+4Ch+var_20] +
mov [esi+8] eax +
mov eax [esp+4Ch+var_2C] +
mov [esi+10h] eax +
lea eax [eax+edi+1] +
mov [esp+4Ch+var_2C] eax +
add ebx 1 +
cmp ebx [esp+4Ch+var_28] +
jz loc_428730  +
mov eax [esp+4Ch+var_34] +
mov edx [eax+ebx*4] +
test dword ptr [edx+0Ch] 802082h +
mov eax [edx+10h] +
jnz loc_4286DD  +
test byte ptr [eax+15h] 10h +
jz loc_4286BB  +
cmp eax offset off_4928E8 +
jz loc_4286BB  +
cmp ebp [esp+4Ch+var_1C] +
jz loc_428792  +
mov eax [edx+4] +
mov edi offset a__gnu_lto_slim +
mov ecx 0Fh +
mov esi eax +
cmps   +
jnz loc_428630  +
mov eax [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset aSPluginNeededT +
mov [esp+4Ch+var_48] eax +
call off_492AE8  +
mov eax [esp+4Ch+var_34] +
mov eax [eax+ebx*4] +
mov eax [eax+4] +
jmp loc_428630  +
mov esi ebp +
mov ebp [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_18] +
mov eax [ebp+4] +
mov eax [eax+98h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
jnz loc_428581  +
test ebx ebx +
jz loc_428760  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_42882F  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_425AA0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+ebp+0] +
mov [esp+4Ch+var_1C] eax +
lea eax [eax+ebp*4] +
shl eax 3 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call sub_42B490  +
test eax eax +
jz loc_428754  +
mov edi [esp+4Ch+var_34] +
mov [esp+4Ch+var_24] eax +
mov edx [edi+ebx*4] +
jmp loc_4286EE  +
mov eax [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+var_24] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_44] ebx +
mov ebx [esp+4Ch+var_14] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] ebx +
mov ebx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov esi eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_425AA0  +
add esp 4Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_18] ebx +
jmp loc_4285F9  +
xor eax eax +
jmp loc_42878A  +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_2C] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_3C] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] edi +
call eax  +
test ebx ebx +
mov esi eax +
jz loc_4287FC  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
jmp loc_4287FC  +
***
push ebp  +
mov eax 203Ch +
push edi  +
push esi  +
push ebx  +
call sub_48BDD0  +
sub esp eax +
mov eax [esp+2050h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+2Ch] 0 +
movzx eax byte ptr [eax+2Bh] +
mov [esp+1Bh] al +
mov eax [esp+2050h] +
shr byte ptr [esp+1Bh] 5 +
and byte ptr [esp+1Bh] 1 +
mov edi [eax+94h] +
test edi edi +
jz loc_428D9A  +
test byte ptr [edi+28h] 10h +
jnz loc_428B41  +
xor esi esi +
mov ebp [esp+2050h] +
mov ebx esi +
jmp loc_428904  +
mov edi [edi+90h] +
test edi edi +
jz loc_42893A  +
test byte ptr [edi+28h] 10h +
jnz loc_428B41  +
mov eax [edi+88h] +
test eax eax +
jz loc_428985  +
test ebx ebx +
jnz loc_4288F0  +
cmp byte ptr [esp+1Bh] 0 +
jz loc_4288F0  +
mov [esp] edi +
xor ebx ebx +
mov dword ptr [esp+4] 1 +
call sub_423080  +
mov edi [edi+90h] +
test eax eax +
setnz bl  +
test edi edi +
jnz loc_4288FA  +
mov esi ebx +
mov eax [esp+2050h] +
lea edx [esp+2Ch] +
mov ecx [esp+2050h] +
mov eax [eax+4] +
mov eax [eax+0E0h] +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
lea edx [esp+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
test eax eax +
jnz loc_428BB0  +
xor eax eax +
add esp 203Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test byte ptr [edi+2Ah] 1 +
mov eax [edi] +
jnz loc_428B70  +
lea ecx [esp+30h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
jnz loc_428CC3  +
test byte ptr [ebp+2Ah] 4 +
jz loc_4289D0  +
xor eax eax +
xor esi esi +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov dword ptr [esp+54h] 0 +
mov [esp+3Ah] si +
mov [esp+36h] ax +
mov dword ptr [esp] 64h +
call sub_42B590  +
test eax eax +
mov esi eax +
jz loc_428CD0  +
lea edx [eax+28h] +
mov dword ptr [eax+28h] 20202020h +
mov dword ptr [eax+2Ch] 20202020h +
mov dword ptr [eax+30h] 20202020h +
mov dword ptr [eax+34h] 20202020h +
mov dword ptr [eax+38h] 20202020h +
mov dword ptr [eax+3Ch] 20202020h +
mov dword ptr [eax+40h] 20202020h +
mov dword ptr [eax+44h] 20202020h +
mov dword ptr [eax+48h] 20202020h +
mov dword ptr [eax+4Ch] 20202020h +
mov dword ptr [eax+50h] 20202020h +
mov dword ptr [eax+54h] 20202020h +
mov dword ptr [eax+58h] 20202020h +
mov dword ptr [eax+5Ch] 20202020h +
mov dword ptr [eax+60h] 20202020h +
mov eax [esp+54h] +
mov dword ptr [esp+8] offset a12ld +
mov dword ptr [esp+4] 0Ch +
mov [esp+1Ch] edx +
mov [esp+0Ch] eax +
lea eax [esi+38h] +
mov [esp] eax +
call sub_426440  +
movsx eax word ptr [esp+3Ah] +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+44h] +
mov [esp] eax +
call sub_426440  +
movsx eax word ptr [esp+3Ch] +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+4Ah] +
mov [esp] eax +
call sub_426440  +
movzx eax word ptr [esp+36h] +
mov dword ptr [esp+8] offset a8lo +
mov dword ptr [esp+4] 8 +
mov [esp+0Ch] eax +
lea eax [esi+50h] +
mov [esp] eax +
call sub_426440  +
mov eax [esp+48h] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [esi+58h] +
mov [esp] eax +
call sub_4264E0  +
mov edx [esp+1Ch] +
test eax eax +
jz loc_428CDF  +
mov ecx 0A60h +
mov [esi+62h] cx +
mov eax [esp+48h] +
mov ecx [edi] +
mov [esi] edx +
mov [esi+4] eax +
mov eax [ebp+4] +
mov [edi+88h] esi +
mov eax [eax+0E4h] +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] ebp +
call eax  +
jmp loc_42890E  +
***
mov dword ptr [esp] 5 +
call sub_420C50  +
call sub_420A00  +
mov [esp+4] edi +
mov dword ptr [esp] 14h +
mov [esp+8] eax +
call sub_420C50  +
jmp loc_428978  +
***
lea eax [esp+54h] +
mov esi [edi+8] +
mov [esp] eax +
call time  +
xor eax eax +
mov [esp+3Ah] ax +
xor eax eax +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov [esp+36h] ax +
mov eax [esi] +
mov dword ptr [esp+4Ch] 0 +
mov [esp+48h] eax +
jmp loc_4289AA  +
***
mov eax [esp+2050h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_429F00  +
test eax eax +
jnz loc_428978  +
mov ecx [esp+2050h] +
mov edx offset aThin +
mov eax offset aArch +
test byte ptr [ecx+2Bh] 40h +
mov [esp+8] ecx +
mov dword ptr [esp+4] 8 +
cmovnz eax edx +
mov [esp] eax +
call sub_429DA0  +
cmp eax 8 +
jnz loc_428978  +
mov eax esi +
and al [esp+1Bh] +
mov [esp+1Bh] al +
jnz loc_428DE0  +
mov esi [esp+28h] +
test esi esi +
jnz loc_428E04  +
mov eax [esp+2050h] +
mov edi [eax+94h] +
test edi edi +
jz loc_428C82  +
mov eax [edi+88h] +
mov ecx [esp+2050h] +
mov ebx [eax+4] +
mov eax [edi+4] +
mov eax [eax+0F0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_428978  +
mov eax [esp+2050h] +
test byte ptr [eax+2Bh] 40h +
jz loc_428CE9  +
mov edi [edi+90h] +
test edi edi +
jnz loc_428C41  +
cmp byte ptr [esp+1Bh] 0 +
mov esi 5 +
mov ebx [esp+2050h] +
jz loc_428CB9  +
mov eax [ebx+4] +
mov eax [eax+100h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_428CB9  +
mov dword ptr [esp] offset aWarningWriting +
call off_492AE8  +
sub esi 1 +
jnz loc_428C95  +
mov eax 1 +
jmp loc_42897A  +
***
mov dword ptr [esp] 1 +
call sub_420C50  +
nop   +
mov dword ptr [edi+88h] 0 +
jmp loc_428B4D  +
***
mov [esp] esi +
call free  +
jmp loc_428CD0  +
***
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] edi +
call sub_429F00  +
test eax eax +
jnz loc_428B4D  +
test ebx ebx +
jnz loc_428D47  +
jmp loc_428DA1  +
mov eax [esp+2050h] +
mov [esp+4] ebp +
mov [esp+8] eax +
lea eax [esp+30h] +
mov [esp] eax +
call sub_429DA0  +
cmp ebp eax +
jnz loc_428978  +
sub ebx ebp +
jz loc_428DA1  +
cmp ebx 2000h +
mov esi 2000h +
cmovb esi ebx +
call ds:__imp__errno  +
mov dword ptr [eax] 0 +
lea eax [esp+30h] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_429CF0  +
cmp eax esi +
mov ebp eax +
jz loc_428D20  +
call sub_420A00  +
cmp eax 1 +
jz loc_428B4D  +
mov dword ptr [esp] 12h +
call sub_420C50  +
jmp loc_428B4D  +
***
xor esi esi +
jmp loc_42893C  +
***
mov eax [edi+88h] +
test byte ptr [eax+4] 1 +
jz loc_428C78  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 49C4EBh +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 1 +
jz loc_428C78  +
jmp loc_428978  +
***
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+2050h] +
mov [esp] eax +
call sub_4284C0  +
test eax eax +
jnz loc_428C24  +
jmp loc_428978  +
***
mov ebp [esp+2Ch] +
lea edi [esp+30h] +
add esi 1 +
mov dword ptr [esp+30h] 20202020h +
and esi 0FFFFFFFEh +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
mov [esp] ebp +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
call strlen  +
mov [esp+4] ebp +
mov [esp] edi +
mov [esp+8] eax +
call memcpy  +
lea eax [esp+60h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_4264E0  +
test eax eax +
jz loc_428978  +
mov eax 0A60h +
mov [esp+6Ah] ax +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 3Ch +
jnz loc_428978  +
mov eax [esp+2050h] +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_429DA0  +
cmp eax [esp+28h] +
jnz loc_428978  +
test al 1 +
jz loc_428C30  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 49C4EBh +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax 1 +
jnz loc_428978  +
jmp loc_428C30  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+0B0h] +
mov ecx [esp+0ACh] +
mov ebx [esp+0A0h] +
mov edi eax +
and edi 1 +
add eax edi +
mov ebp [ebx+94h] +
lea esi ds:0[ecx*8] +
mov [esp+24h] edi +
lea edi [esi+eax+8] +
mov [esp+20h] eax +
mov eax [ebx+0A0h] +
test byte ptr [ebx+2Ah] 4 +
mov dword ptr [eax+20h] 0 +
jz loc_4292E0  +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov dword ptr [esp+70h] 20202020h +
mov dword ptr [esp+74h] 20202020h +
mov dword ptr [esp+78h] 20202020h +
mov dword ptr [esp+40h] 532E5F5Fh +
mov dword ptr [esp+44h] 45444D59h +
mov byte ptr [esp+48h] 46h +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov eax [eax+20h] +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 0Ch +
mov [esp+0Ch] eax +
lea eax [esp+50h] +
mov [esp] eax +
call sub_426440  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 6 +
call sub_426440  +
lea eax [esp+62h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 6 +
call sub_426440  +
lea eax [esp+70h] +
mov [esp+8] edi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_4264E0  +
test eax eax +
jnz loc_4290D0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+40h] +
mov ecx 0A60h +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
mov [esp+7Ah] cx +
call sub_429DA0  +
cmp eax 3Ch +
jnz loc_4290BC  +
mov eax [ebx+4] +
lea ecx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] esi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_429DA0  +
cmp eax 4 +
jnz loc_4290BC  +
mov edx [esp+0ACh] +
test edx edx +
jz loc_429360  +
mov eax [esp+0A4h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+0A0h] ebx +
lea eax [edi+eax+44h] +
mov [esp+18h] eax +
mov eax [esp+0A8h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
mov ecx [esp+18h] +
mov ebx [esp+1Ch] +
mov eax [eax+8] +
cmp eax ebp +
mov [esp+10h] eax +
jz loc_4291B0  +
nop   +
mov edx [ebp+88h] +
mov ebp [ebp+90h] +
mov eax [edx+4] +
add eax [edx+8] +
xor edx edx +
add eax 3Ch +
add eax ecx +
adc edx ebx +
mov ebx eax +
and ebx 1 +
xor edi edi +
add eax ebx +
adc edx edi +
mov ecx eax +
cmp [esp+10h] ebp +
mov ebx edx +
jnz loc_429180  +
mov [esp+18h] ecx +
mov eax ebx +
xor ecx ecx +
or eax ecx +
mov dword ptr [esp+1Ch] 0 +
jnz loc_429310  +
mov eax [esp+0A0h] +
lea ecx [esp+38h] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+28h] +
mov edx [ecx+10h] +
mov [esp] edx +
call eax  +
mov eax [esp+0A0h] +
lea ecx [esp+3Ch] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp] ecx +
call eax  +
mov eax [esp+0A0h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+38h] +
mov [esp] eax +
call sub_429DA0  +
cmp eax 8 +
jnz loc_4290BC  +
add dword ptr [esp+2Ch] 1 +
mov eax [esp+2Ch] +
add dword ptr [esp+28h] 18h +
cmp eax [esp+0ACh] +
jnz loc_429167  +
mov ebx [esp+0A0h] +
lea edi [esp+34h] +
mov eax [ebx+4] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_429DA0  +
cmp eax 4 +
jnz loc_4290BC  +
xor edx edx +
mov ebp [esp+0A8h] +
mov [esp+0A0h] ebx +
mov ebx edx +
jmp loc_4292AF  +
add ebx 1 +
add ebp 18h +
cmp ebx [esp+0ACh] +
jz loc_429321  +
mov eax [ebp+0] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea esi [eax+1] +
mov eax [esp+0A0h] +
mov [esp+4] esi +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax esi +
jz loc_4292A0  +
jmp loc_4290BC  +
***
mov eax [ebx] +
lea ecx [esp+40h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
mov eax [ebx+0A0h] +
jnz loc_428FA6  +
mov ecx [esp+64h] +
lea edx [ecx+3Ch] +
mov [eax+20h] edx +
jmp loc_428FA6  +
***
mov dword ptr [esp] 12h +
call sub_420C50  +
jmp loc_4290BC  +
***
mov ebx [esp+0A0h] +
mov eax [esp+24h] +
test eax eax +
jnz loc_42933A  +
mov eax 1 +
jmp loc_4290BE  +
***
mov [esp+8] ebx +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_49C640 +
call sub_429DA0  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_4290BE  +
***
mov eax [ebx+4] +
lea edi [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_429DA0  +
cmp eax 4 +
jnz loc_4290BC  +
jmp loc_429328  +
***
push esi  +
push ebx  +
sub esp 84h +
mov ebx [esp+90h] +
test byte ptr [ebx+2Ah] 4 +
jz loc_4293C3  +
mov eax 1 +
add esp 84h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] ebx +
call sub_429E90  +
lea eax [esp+10h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_429EB0  +
cmp eax 0FFFFFFFFh +
jz loc_4294A0  +
mov eax [ebx+0A0h] +
mov edx [esp+34h] +
cmp edx [eax+20h] +
jle loc_4293B5  +
add edx 3Ch +
lea esi [esp+54h] +
mov [eax+20h] edx +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
call sub_426440  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 18h +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_429482  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
call sub_429DA0  +
cmp eax 0Ch +
jz loc_4294B1  +
mov dword ptr [esp] offset aWritingUpdated +
call sub_420AA0  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] offset aReadingArchive +
call sub_420AA0  +
jmp loc_4293B5  +
***
xor al al +
jmp loc_4293BA  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebp [esp+9Ch] +
mov dword ptr [esp+4] 0Ah +
mov esi [esp+90h] +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
lea ebx ds:4[ebp*4] +
add ebx [esp+0A0h] +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov eax ebx +
and eax 1 +
cmp eax 1 +
sbb ebx 0FFFFFFFFh +
mov [esp+20h] eax +
lea eax [esp+64h] +
mov [esp+8] ebx +
mov [esp] eax +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov byte ptr [esp+34h] 2Fh +
call sub_4264E0  +
test eax eax +
jz loc_429652  +
xor eax eax +
test byte ptr [esi+2Ah] 4 +
jz loc_429660  +
mov [esp+0Ch] eax +
lea eax [esp+44h] +
mov [esp] eax +
lea edi [esp+34h] +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 0Ch +
call sub_426440  +
lea eax [esp+50h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 6 +
call sub_426440  +
lea eax [esp+56h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_5 +
mov dword ptr [esp+4] 6 +
call sub_426440  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset a7lo +
mov dword ptr [esp+4] 8 +
call sub_426440  +
mov edx 0A60h +
mov [esp+8] esi +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+6Eh] dx +
call sub_429DA0  +
cmp eax 3Ch +
jz loc_429671  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 0 +
call time  +
jmp loc_42959B  +
***
mov [esp+4] ebp +
mov [esp] esi +
call sub_42B620  +
test eax eax +
jz loc_429652  +
mov eax [esi+94h] +
test ebp ebp +
mov edx eax +
mov [esp+24h] eax +
jz loc_4297FA  +
mov eax [esp+94h] +
mov dword ptr [esp+1Ch] 0 +
lea eax [ebx+eax+44h] +
xor ebx ebx +
test edx edx +
mov [esp+18h] eax +
jz loc_42974A  +
cmp ebp ebx +
jbe loc_429720  +
mov edx [esp+98h] +
lea eax [ebx+ebx*2] +
lea edx [edx+eax*8] +
mov eax [edx+8] +
cmp eax [esp+24h] +
mov [esp+10h] eax +
jnz loc_429720  +
mov ecx [esp+1Ch] +
mov eax [esp+18h] +
test ecx ecx +
mov [esp+14h] eax +
jnz loc_4297E2  +
mov edi edx +
add ebx 1 +
jmp loc_429709  +
cmp ebx ebp +
jz loc_429720  +
mov eax [edi+20h] +
add edi 18h +
cmp eax [esp+10h] +
lea ecx [ebx+1] +
jnz loc_429720  +
mov eax [esp+14h] +
mov ebx ecx +
mov [esp+4] eax +
mov [esp] esi +
call sub_42B620  +
test eax eax +
jnz loc_4296F0  +
jmp loc_429652  +
***
add dword ptr [esp+18h] 3Ch +
adc dword ptr [esp+1Ch] 0 +
test byte ptr [esi+2Bh] 40h +
jz loc_4297A5  +
mov eax [esp+24h] +
cmp ebp ebx +
mov eax [eax+90h] +
mov [esp+24h] eax +
jbe loc_42974A  +
test eax eax +
jnz loc_4296B6  +
mov ecx [esp+98h] +
xor edx edx +
mov [esp+90h] esi +
mov [esp+9Ch] ebp +
mov ebp edx +
mov esi ecx +
jmp loc_429776  +
add ebp 1 +
add esi 18h +
cmp [esp+9Ch] ebp +
jbe loc_4297F3  +
mov eax [esi] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea ebx [eax+1] +
mov eax [esp+90h] +
mov [esp+4] ebx +
mov [esp+8] eax +
call sub_429DA0  +
cmp eax ebx +
jz loc_429767  +
jmp loc_429652  +
***
mov eax [esp+24h] +
xor edx edx +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+88h] +
mov eax [eax+4] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
mov ecx eax +
and ecx 1 +
mov [esp+28h] ecx +
add eax [esp+28h] +
adc edx [esp+2Ch] +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
jmp loc_429730  +
***
mov dword ptr [esp] 12h +
call sub_420C50  +
jmp loc_429652  +
***
mov esi [esp+90h] +
mov eax [esp+20h] +
test eax eax +
jnz loc_42980C  +
mov eax 1 +
jmp loc_429654  +
***
mov [esp+8] esi +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_49C640 +
call sub_429DA0  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_429654  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_42985D  +
and eax 7 +
cmp al 2 +
jz loc_4298E1  +
mov eax [ebx+88h] +
test eax eax +
jz loc_4298C1  +
mov esi [eax+18h] +
test esi esi +
jz loc_4298C1  +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov dword ptr [esp+8] 0 +
mov [esp] esi +
mov [esp+14h] edx +
mov [esp+10h] eax +
lea eax [esp+10h] +
mov [esp+4] eax +
call sub_474E30  +
test eax eax +
mov edi eax +
jz loc_4298C1  +
mov eax [eax] +
cmp [eax+8] ebx +
jz loc_4298B5  +
mov dword ptr [esp+4] 0AEDh +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_420BA0  +
mov [esp+4] edi +
mov [esp] esi +
call sub_474EF0  +
test byte ptr [ebx+2Ch] 1 +
jz loc_4298D5  +
mov eax [ebx+9Ch] +
mov eax [eax+24h] +
mov [esp] ebx +
call eax  +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+98h] +
test eax eax +
jnz loc_4298F2  +
jmp loc_429904  +
mov eax esi +
mov esi [eax+90h] +
mov [esp] eax +
call sub_4254C0  +
test esi esi +
jnz loc_4298F0  +
mov eax [ebx+0A0h] +
mov esi [eax+8] +
test esi esi +
jz loc_42985D  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_426420 +
mov [esp] esi +
call sub_474F40  +
mov [esp] esi +
call sub_474980  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+8] 0 +
jmp loc_42985D  +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
retn   +
***
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov esi [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [eax+8] +
jnz loc_4299D6  +
test edi 2 +
jnz loc_4299E6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_4299BC  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_4299C4  +
mov byte ptr [edi] 0 +
mov eax [ebx] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_4299A5  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_4299A5  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+8] +
mov eax [esi+4] +
test eax eax +
jz loc_429A1B  +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+var_14] esi +
call free  +
xor eax eax +
mov dword ptr [ebx+8] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_C] +
mov ecx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
test esi esi +
mov ebx [ecx+8] +
jz loc_429A63  +
add eax [ecx+18h] +
adc edx [ecx+1Ch] +
test edx edx +
js loc_429AED  +
mov edi [ebx] +
mov esi eax +
cmp eax edi +
jbe loc_429A8B  +
test byte ptr [ecx+28h] 10h +
jz loc_429AC4  +
add edi 7Fh +
add esi 7Fh +
and edi 0FFFFFF80h +
and esi 0FFFFFF80h +
cmp edi esi +
mov [ebx] eax +
jb loc_429A94  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call sub_42B550  +
test eax eax +
mov [ebx+4] eax +
jz loc_429B11  +
sub esi edi +
add edi eax +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
call memset  +
jmp loc_429A8B  +
mov [ecx+18h] edi +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov [esp-2Ch+arg_1C] 12h +
call sub_420C50  +
mov eax 0FFFFFFFFh +
jmp loc_429A8D  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_429A8D  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
mov dword ptr [ebx] 0 +
jmp loc_429A8D  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ecx [esp+38h+arg_8] +
mov edi [eax+18h] +
mov ebp [eax+1Ch] +
mov ebx [eax+8] +
mov eax ecx +
add eax edi +
adc edx ebp +
cmp edx 0 +
mov esi [ebx] +
ja loc_429C3B  +
cmp eax esi +
jbe loc_429CA0  +
cmp esi edi +
jb loc_429C87  +
sub esi edi +
mov [esp+38h+var_20] esi +
mov [esp+38h+var_1C] 0 +
mov [esp+38h+var_38] 12h +
call sub_420C50  +
mov eax [esp+38h+arg_0] +
mov eax [eax+18h] +
add eax [ebx+4] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_38] eax +
call memcpy  +
mov eax [esp+38h+var_20] +
mov edx [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_20] 0 +
xor esi esi +
mov [esp+38h+var_1C] 0 +
jmp loc_429C4D  +
mov esi ecx +
mov eax edi +
mov [esp+38h+var_20] ecx +
mov [esp+38h+var_1C] 0 +
jmp loc_429C60  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+88h] +
test eax eax +
jz loc_429D38  +
mov ecx [esi+18h] +
xor edx edx +
mov ebx [esi+1Ch] +
mov ebp [eax+4] +
mov eax edi +
add eax ecx +
adc edx ebx +
cmp edx 0 +
jbe loc_429D80  +
cmp ebx 0 +
jbe loc_429D30  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx ebp +
jnb loc_429D24  +
mov edi ebp +
sub edi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_429D90  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_429D26  +
mov ecx edx +
xor ebx ebx +
add [esi+18h] ecx +
mov eax edx +
adc [esi+1Ch] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax ebp +
ja loc_429D1F  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_429D3F  +
nop   +
lea esi [esi+0] +
xor ecx ecx +
xor ebx ebx +
xor edx edx +
jmp loc_429D6A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_429E10  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_429DE3  +
mov ecx eax +
xor ebx ebx +
add [esi+18h] ecx +
adc [esi+1Ch] ebx +
cmp ebp edi +
jz loc_429DFF  +
call ds:__imp__errno  +
mov dword ptr [eax] 1Ch +
mov dword ptr [esp+0] 1 +
call sub_420C50  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor ebx ebx +
xor ebp ebp +
jmp loc_429DDD  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_429E70  +
mov eax [eax+8] +
mov edi esi +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esi+8Ch] +
test ecx ecx +
jnz loc_429E4B  +
jmp loc_429E5B  +
mov edi ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
sub eax [edi+38h] +
sbb edx [edi+3Ch] +
test ebx ebx +
jnz loc_429E47  +
mov ebx edx +
mov ecx eax +
mov [esi+18h] ecx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor ebx ebx +
xor ecx ecx +
mov [esi+18h] ecx +
xor eax eax +
xor edx edx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_429EA0  +
mov edx [edx+14h] +
jmp edx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_429ED6  +
mov ecx [esp+1Ch+arg_4] +
mov edx [edx+18h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] ecx +
call edx  +
test eax eax +
js loc_429EE0  +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
nop   +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_420C50  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_C] 1 +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jbe loc_429F2A  +
mov [esp+1Ch+var_18] 11Fh +
mov [esp+1Ch+var_1C] offset a____Binutils_7 +
call sub_420BA0  +
cmp [esp+1Ch+arg_C] 1 +
jz loc_42A020  +
mov eax [esp+1Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 2 +
jz loc_429F56  +
mov eax [esp+1Ch+arg_0] +
mov ebp [eax+8Ch] +
test ebp ebp +
jz loc_42A044  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jnz loc_429FD3  +
mov eax [esp+1Ch+arg_0] +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_429FD3  +
mov ebp [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
jmp loc_429F7A  +
mov ebp ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
add eax [ebp+38h] +
adc edx [ebp+3Ch] +
test ebx ebx +
jnz loc_429F76  +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_429FE2  +
mov ecx [ecx+0Ch] +
mov ebx [esp+1Ch+arg_C] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_10] ebx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
test eax eax +
mov ebx eax +
jnz loc_429FE7  +
mov edx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_42A034  +
mov [eax+18h] esi +
mov [eax+1Ch] edi +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
mov ecx [ebx+0Ch] +
test ecx ecx +
jnz loc_429F95  +
mov ebx 0FFFFFFFFh +
mov ebp ds:__imp__errno +
call ebp  +
mov edi [eax] +
mov eax [esp+30h] +
mov [esp-20h+arg_C] eax +
call sub_429E20  +
cmp edi 16h +
jz loc_42A070  +
mov [esp-20h+arg_C] 1 +
call sub_420C50  +
call ebp  +
mov [eax] edi +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
xor eax eax +
or edx edi +
jnz loc_429F35  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [eax+18h] esi +
adc [eax+1Ch] edi +
add esp 1Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_C] +
mov eax esi +
test ebx ebx +
jnz loc_42A065  +
mov edx [esp+1Ch+arg_0] +
xor eax [edx+18h] +
or eax [edx+1Ch] +
jnz loc_429FD3  +
xor eax eax +
jmp loc_429FCB  +
mov edx edi +
jmp loc_429F8A  +
mov [esp-20h+arg_C] 12h +
call sub_420C50  +
mov eax ebx +
jmp loc_429FCB  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 4 +
jnz loc_42A0D0  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_42A0C5  +
mov eax [eax+18h] +
lea edx [esp+10h] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_42A0C5  +
mov eax [esp+34h] +
mov [ebx+20h] eax +
add esp 48h +
pop ebx  +
retn   +
***
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+20h] +
add esp 48h +
pop ebx  +
retn   +
***
sub esp 4Ch +
mov eax [esp+50h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_42A110  +
mov edx [edx+18h] +
lea ecx [esp+10h] +
mov [esp+4] ecx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_42A110  +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
add esp 4Ch +
retn   +
***
xor eax eax +
xor edx edx +
add esp 4Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 18h +
mov eax [esp+2Ch] +
mov ecx [esp+30h] +
mov edi [esp+40h] +
mov ebp [esp+44h] +
mov edx [eax+0Ch] +
mov [esp] ecx +
mov [esp+4] edi +
mov [esp+8] ebp +
test edx edx +
jz loc_42A155  +
mov edx [edx+1Ch] +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
add esp 18h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_0] +
lea edx [eax-0Ah] +
xor eax eax +
cmp edx 0F4h +
ja locret_42A198  +
mov eax ds:off_49C840[edx*4] +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_0] +
lea esi ds:0[eax*4] +
mov edi esi +
shr edi 2 +
cmp edi eax +
jz loc_42A1D5  +
mov [esp+1Ch+var_1C] 6 +
call sub_420C50  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4881D0  +
test eax eax +
mov [ebx+8] eax +
jz loc_42A1BF  +
test esi esi +
jnz loc_42A243  +
mov edx 8 +
mov ecx [eax+4] +
cmp ecx edx +
jb loc_42A24B  +
mov ebp [eax] +
sub ecx edx +
mov [eax+4] ecx +
add ebp edx +
mov [eax] ebp +
mov eax ebp +
sub eax edx +
test eax eax +
mov [ebx] eax +
jz loc_42A260  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [esp+1Ch+arg_8] +
mov [ebx+0Ch] edi +
mov dword ptr [ebx+10h] 0 +
and byte ptr [ebx+18h] 0FEh +
mov [ebx+14h] eax +
mov eax [esp+1Ch+arg_4] +
mov [ebx+4] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esi+7] +
and edx 0FFFFFFF8h +
jnz loc_42A1EA  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call sub_488230  +
jmp loc_42A200  +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_488340  +
mov dword ptr [ebx+8] 0 +
jmp loc_42A1BF  +
***
sub esp 1Ch +
mov eax dword_492AEC +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_42A1A0  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_488340  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_8] +
mov eax [edi+4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] 0 +
call eax  +
test eax eax +
mov ebp eax +
jz loc_42A4D2  +
mov ecx [edi+0Ch] +
xor edx edx +
mov [eax+4] esi +
mov [eax+8] ebx +
mov eax ebx +
div  ecx +
mov eax [edi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebp+0] edx +
mov [eax] ebp +
mov eax [edi+10h] +
test byte ptr [edi+18h] 1 +
lea edx [eax+1] +
mov eax ebp +
mov [edi+10h] edx +
jnz loc_42A480  +
lea ebx [ecx+ecx*2] +
shr ebx 2 +
cmp edx ebx +
jbe loc_42A480  +
mov esi offset unk_49CD10 +
mov edx offset unk_49CCA0 +
mov eax esi +
sub eax edx +
sar eax 2 +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
lea ebx [edx+eax*4] +
cmp ecx [ebx] +
jb loc_42A382  +
jmp loc_42A496  +
mov eax ebx +
sub eax edx +
sar eax 2 +
mov esi eax +
shr esi 1Fh +
add eax esi +
sar eax 1 +
lea eax [edx+eax*4] +
cmp ecx [eax] +
jnb loc_42A49A  +
mov ebx eax +
cmp edx ebx +
jnz loc_42A365  +
mov eax [edx] +
cmp ecx eax +
jnb loc_42A488  +
test eax eax +
lea ebx ds:0[eax*4] +
jz loc_42A488  +
mov esi ebx +
shr esi 2 +
cmp esi eax +
mov [esp+2Ch+var_1C] esi +
jnz loc_42A488  +
test ebx ebx +
mov edx [edi+8] +
jz loc_42A4AC  +
lea eax [ebx+7] +
and eax 0FFFFFFF8h +
jnz loc_42A4B1  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call sub_488230  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_42A488  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov eax [edi+0Ch] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_42A470  +
mov eax [edi] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_10] ebp +
mov esi [esp+2Ch+var_18] +
lea ebp ds:0[esi*4] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jz loc_42A45D  +
mov eax [esi+8] +
mov ebx esi +
jmp loc_42A437  +
cmp [ecx+8] eax +
jnz loc_42A43D  +
mov ebx ecx +
mov ecx [ebx] +
test ecx ecx +
jnz loc_42A430  +
mov [edx] ecx +
xor edx edx +
div  [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_20] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebx] edx +
mov [eax] esi +
mov eax [edi] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jnz loc_42A428  +
add [esp+2Ch+var_18] 1 +
mov esi [esp+2Ch+var_14] +
cmp [esp+2Ch+var_18] esi +
jnz loc_42A414  +
mov ebp [esp+2Ch+var_10] +
mov eax [esp+2Ch+var_20] +
mov [edi] eax +
mov eax [esp+2Ch+var_1C] +
mov [edi+0Ch] eax +
mov eax ebp +
nop   +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or byte ptr [edi+18h] 1 +
add esp 2Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx esi +
lea edx [eax+4] +
cmp edx ebx +
jz loc_42A386  +
mov esi ebx +
jmp loc_42A349  +
mov eax 8 +
mov ecx [edx+4] +
cmp ecx eax +
jb loc_42A3C7  +
mov esi [edx] +
sub ecx eax +
mov [edx+4] ecx +
add esi eax +
mov [edx] esi +
sub esi eax +
mov [esp+2Ch+var_20] esi +
jmp loc_42A3D7  +
xor eax eax +
jmp loc_42A480  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ebx [esp+38h+arg_4] +
mov [esp+38h+var_24] eax +
mov eax [esp+38h+arg_8] +
lea ebp [ebx+1] +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_C] +
mov [esp+38h+var_1C] eax +
movzx eax byte ptr [ebx] +
test eax eax +
jz loc_42A52B  +
nop   +
mov ecx eax +
add ebp 1 +
shl ecx 11h +
add eax ecx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ebp-1] +
test eax eax +
jnz loc_42A510  +
sub ebp ebx +
mov ecx [esp+38h+var_24] +
sub ebp 1 +
mov eax ebp +
add edx ebp +
shl eax 11h +
add edx eax +
mov esi edx +
shr esi 2 +
xor esi edx +
xor edx edx +
mov eax esi +
div  dword ptr [ecx+0Ch] +
mov eax [ecx] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_42A55C  +
jmp loc_42A580  +
mov edi [edi] +
test edi edi +
jz loc_42A580  +
cmp [edi+8] esi +
nop   +
jnz loc_42A556  +
mov [esp+38h+var_34] ebx +
mov eax [edi+4] +
mov [esp+38h+var_38] eax +
call strcmp  +
test eax eax +
jnz loc_42A556  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+38h+var_20] +
test edx edx +
jz loc_42A614  +
mov eax [esp+38h+var_1C] +
test eax eax +
jz loc_42A610  +
mov eax [esp+38h+var_24] +
mov edi ebp +
add edi 1 +
mov eax [eax+8] +
jnz loc_42A5F0  +
mov edx [eax+4] +
mov ebp 8 +
cmp edx ebp +
jnb loc_42A5FF  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] eax +
call sub_488230  +
mov ebp eax +
test ebp ebp +
jz loc_42A61B  +
mov [esp+38h+var_30] edi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ebp +
call memcpy  +
mov eax [esp+38h+var_24] +
mov [esp+38h+arg_8] esi +
mov [esp+38h+arg_4] ebp +
mov [esp+38h+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_42A2D0  +
add ebp 8 +
and ebp 0FFFFFFF8h +
jz loc_42A5AE  +
mov edx [eax+4] +
cmp edx ebp +
jb loc_42A5AE  +
mov ecx [eax] +
sub edx ebp +
mov [eax+4] edx +
add ecx ebp +
mov [eax] ecx +
sub ecx ebp +
mov ebp ecx +
jmp loc_42A5BC  +
mov ebp ebx +
jmp loc_42A5D0  +
xor eax eax +
jmp loc_42A577  +
mov [esp+38h+var_38] 6 +
call sub_420C50  +
xor eax eax +
jmp loc_42A577  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov ecx [esp+28h+arg_8] +
mov ebx [esi+0Ch] +
mov eax [ecx+8] +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
test edx edx +
jz loc_42A66C  +
cmp ecx edx +
jnz loc_42A666  +
jmp loc_42A68A  +
cmp ecx eax +
jz loc_42A688  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_42A660  +
mov [esp+28h+var_20] offset aBfd_hash_renam +
mov [esp+28h+var_24] 243h +
mov [esp+28h+var_28] offset a____Binutils_9 +
call sub_420BD0  +
mov eax edx +
mov edx [ecx] +
mov [eax] edx +
mov eax [esp+28h+arg_4] +
mov [ecx+4] eax +
movzx edx byte ptr [eax] +
lea edi [eax+1] +
xor eax eax +
test edx edx +
jz loc_42A6BC  +
mov ebp edx +
add edi 1 +
shl ebp 11h +
add edx ebp +
add edx eax +
mov eax edx +
shr eax 2 +
xor eax edx +
movzx edx byte ptr [edi-1] +
test edx edx +
jnz loc_42A6A1  +
sub edi [esp+28h+arg_4] +
sub edi 1 +
add eax edi +
shl edi 11h +
lea edx [eax+edi] +
mov eax edx +
shr eax 2 +
xor eax edx +
xor edx edx +
mov [ecx+8] eax +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ecx] edx +
mov [eax] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
test ebx ebx +
mov edx [eax+8] +
jz loc_42A782  +
lea ecx [ebx+7] +
and ecx 0FFFFFFF8h +
jnz loc_42A787  +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] edx +
call sub_488230  +
test eax eax +
jz loc_42A79F  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx 8 +
mov esi [edx+4] +
cmp esi ecx +
jb loc_42A76C  +
mov eax [edx] +
sub esi ecx +
mov [edx+4] esi +
add eax ecx +
mov [edx] eax +
sub eax ecx +
test eax eax +
jnz loc_42A77C  +
test ebx ebx +
jz loc_42A77C  +
mov [esp+14h+var_14] 6 +
mov [esp+14h+var_8] eax +
call sub_420C50  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
test edx edx +
jz loc_42A7E0  +
mov dword ptr [edx+0Ch] 0FFFFFFFFh +
mov eax edx +
mov dword ptr [edx+10h] 0 +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] eax +
call sub_42A750  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_42A7CB  +
jmp loc_42A7DB  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test eax eax +
jz loc_42A810  +
retn   +
mov [esp+arg_4] 0Ch +
mov [esp+arg_0] edx +
jmp sub_42A750  +
***
jmp sub_42A830  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi+18h] +
mov edx [edi+0Ch] +
or eax 1 +
test edx edx +
mov [edi+18h] al +
jz loc_42A888  +
mov eax [edi] +
mov edx [esp+1Ch+var_10] +
mov ebp [eax+edx*4] +
test ebp ebp +
jnz loc_42A877  +
jmp loc_42A896  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_42A896  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call esi  +
test eax eax +
jnz loc_42A870  +
movzx eax byte ptr [edi+18h] +
and eax 0FFFFFFFEh +
mov [edi+18h] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [esp+1Ch+var_10] 1 +
mov eax [esp+1Ch+var_10] +
cmp [edi+0Ch] eax +
ja loc_42A85C  +
jmp loc_42A884  +
***
mov ecx [esp+4] +
xor edx edx +
mov eax ds:dword_49CC40[edx*4] +
cmp eax ecx +
jnb loc_42A8CE  +
add edx 1 +
cmp edx 0Bh +
jnz loc_42A8B6  +
mov eax 10001h +
mov dword_492AEC eax +
retn   +
***
mov [esp+18h+var_18] 2Ch +
call sub_42B400  +
test eax eax +
mov ebx eax +
jz loc_42A940  +
mov eax dword_492AEC +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] offset sub_42A7C0 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_42A1A0  +
test eax eax +
jz loc_42A944  +
mov dword ptr [ebx+1Ch] 0 +
mov eax ebx +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_42A939  +
mov [esp+18h+var_18] ebx +
call free  +
xor eax eax +
jmp loc_42A939  +
***
sub esp 0Ch +
call sub_42A8E0  +
test eax eax +
jz loc_42A963  +
mov dword ptr [eax+28h] 1 +
add esp 0Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_488340  +
mov dword ptr [ebx+8] 0 +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov esi [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_42A9F0  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
call sub_42A4E0  +
test eax eax +
mov ebx eax +
jz loc_42AA60  +
mov eax [eax+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_42AA23  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] esi +
call sub_42A750  +
test eax eax +
mov ebx eax +
jz loc_42AA60  +
mov ecx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_4] +
test ecx ecx +
jnz loc_42AA80  +
mov [ebx+4] eax +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov dword ptr [ebx+10h] 0 +
mov ebp [esi+1Ch] +
mov eax [esp+1Ch+arg_4] +
mov [ebx+0Ch] ebp +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add eax ebp +
lea edx [eax+1] +
mov [esi+1Ch] edx +
mov edx [esi+28h] +
test edx edx +
jnz loc_42AA70  +
mov eax [esi+20h] +
test eax eax +
jz loc_42AAC0  +
mov eax [esi+24h] +
mov [eax+10h] ebx +
mov [esi+24h] ebx +
mov eax [ebx+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebp 2 +
add eax 3 +
mov [ebx+0Ch] ebp +
mov [esi+1Ch] eax +
jmp loc_42AA44  +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov [esp+1Ch+var_1C] esi +
lea edi [eax+1] +
mov [esp+1Ch+var_18] edi +
call sub_42A750  +
test eax eax +
mov ebp eax +
jz loc_42AA60  +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov [ebx+4] ebp +
jmp loc_42AA15  +
mov [esi+20h] ebx +
jmp loc_42AA51  +
***
mov eax [esp+arg_0] +
mov eax [eax+1Ch] +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [eax+20h] +
mov ecx [eax+28h] +
test ebx ebx +
mov [esp+2Ch+var_20] ecx +
jnz loc_42AB07  +
jmp loc_42AB70  +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_42AB70  +
mov esi [ebx+4] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_42AB4D  +
mov eax [edi+4] +
lea edx [esp+2Ch+var_E] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebp +
call eax  +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_429DA0  +
cmp eax 2 +
jnz loc_42AB61  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_429DA0  +
cmp eax ebp +
jz loc_42AB00  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+18h+arg_4] +
mov edx [esp+18h+arg_8] +
mov eax [ecx] +
mov ebx [eax+4] +
mov ebx [ebx+4] +
cmp ebx 4 +
jz loc_42ABB1  +
cmp ebx 2 +
jz loc_42ABB1  +
mov [esp+18h+var_18] 5 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov eax [eax+0A0h] +
test eax eax +
jz loc_42AB9E  +
mov eax [ecx+18h] +
test eax eax +
jz loc_42AB9E  +
mov ebx [eax+20h] +
test ebx ebx +
jz loc_42AB9E  +
mov ebx [eax+8] +
mov [edx] ebx +
mov ebx [eax+0Ch] +
mov [edx+4] ebx +
mov ebx [eax+10h] +
mov [edx+8] ebx +
mov ebx [eax+14h] +
mov [edx+0Ch] ebx +
mov eax [eax+18h] +
mov [edx+10h] eax +
mov ecx [ecx+18h] +
mov eax 1 +
test byte ptr [ecx+4] 1 +
jz loc_42AC04  +
mov ecx [esp+18h+arg_0] +
mov ecx [ecx+0A0h] +
mov ecx [ecx+18h] +
sub [edx+8] ecx +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ecx [esp+14h+arg_4] +
mov esi [esp+14h+arg_8] +
mov ebx [esp+14h+arg_C] +
mov eax [ecx] +
mov edx [eax+4] +
mov edx [edx+4] +
cmp edx 4 +
jz loc_42AC47  +
cmp edx 2 +
jz loc_42AC47  +
mov [esp+14h+var_14] 5 +
call sub_420C50  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [eax+0A0h] +
test eax eax +
jz loc_42AC33  +
mov eax [ecx+18h] +
test eax eax +
jz loc_42AC33  +
mov edx [eax+20h] +
test edx edx +
jz loc_42AC33  +
movzx edx byte ptr [eax+1Bh] +
cmp edx esi +
jle loc_42AC33  +
lea edx [esi+esi*8+9] +
lea esi [eax+edx*4] +
mov eax [esi+20h] +
test eax eax +
jnz loc_42AD14  +
mov eax [esi+8] +
mov [ebx] eax +
mov edx [esi+0Ch] +
mov [ebx+4] edx +
mov edx [esi+10h] +
mov [ebx+8] edx +
mov edx [esi+14h] +
mov [ebx+0Ch] edx +
mov edx [esi+18h] +
mov [ebx+10h] edx +
mov edx [esi+1Ch] +
mov [ebx+14h] edx +
movzx edx byte ptr [esi+4] +
test dl 2 +
jz loc_42ACC1  +
mov ecx [esp+14h+arg_0] +
mov edx [ecx+0A0h] +
sub eax [edx+18h] +
sar eax 2 +
imul eax eax +
mov [ebx] eax +
movzx edx byte ptr [esi+4] +
test dl 4 +
jz loc_42ACE6  +
mov eax [esp+14h+arg_0] +
mov edx [eax+0A0h] +
mov eax [ebx+0Ch] +
sub eax [edx+18h] +
sar eax 2 +
imul eax eax +
mov [ebx+0Ch] eax +
movzx edx byte ptr [esi+4] +
and edx 8 +
mov eax 1 +
jz loc_42AC41  +
mov ecx [esp+14h+arg_0] +
mov edx [ebx] +
mov ecx [ecx+0A0h] +
sub edx [ecx+18h] +
sar edx 2 +
imul edx edx +
mov [ebx] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 50h +
mov [esp+14h+var_14] offset a____Binutils_8 +
call sub_420BA0  +
jmp loc_42AC79  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+20h+var_14] ecx +
jz loc_42ADA0  +
mov ebx [edx] +
mov edi eax +
test ebx ebx +
jnz loc_42AD59  +
jmp loc_42ADA0  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_42ADA0  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] ebx +
call strstr  +
test eax eax +
mov ebp eax +
jz loc_42AD50  +
mov [esp+20h+var_20] edi +
call strlen  +
cmp ebx ebp +
movzx eax byte ptr [ebp+eax+0] +
jz loc_42AD82  +
cmp byte ptr [ebp-1] 3Ah +
jnz loc_42AD50  +
test al al +
jnz loc_42AD50  +
mov eax [esp+20h+var_14] +
mov [eax] ebx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi off_492AFC +
mov ebx [esi] +
test ebx ebx +
jnz loc_42ADCF  +
jmp loc_42ADF0  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_42ADF0  +
mov eax [ebx] +
mov [esp+18h+var_18] edi +
mov [esp+18h+var_14] eax +
call strcmp  +
test eax eax +
jnz loc_42ADC6  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi offset off_49CE80 +
mov eax offset aAvr +
jmp loc_42AE09  +
add esi 8 +
mov eax [esi] +
test eax eax +
jz loc_42AE40  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call sub_4752D0  +
test eax eax +
jnz loc_42AE00  +
mov ebx [esi+4] +
test ebx ebx +
jnz loc_42ADE1  +
add esi 8 +
mov ebx [esi+4] +
test ebx ebx +
jz loc_42AE28  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_18] 2 +
xor ebx ebx +
call sub_420C50  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx off_492AF4 +
mov ebx [esp+18h+arg_0] +
test edx edx +
jz loc_42AE89  +
mov eax [edx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_42AE9E  +
mov eax ebx +
call sub_42ADB0  +
test eax eax +
jz loc_42AEA5  +
mov off_492AF4 eax +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
xor edx edx +
jmp loc_42AE9E  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
test eax eax +
jz loc_42AF30  +
mov edi offset aDefault +
mov ecx 8 +
mov esi eax +
cmps   +
jnz loc_42AEF0  +
mov eax off_492AF4 +
test eax eax +
jz loc_42AF20  +
test ebx ebx +
jz loc_42AEE6  +
or byte ptr [ebx+2Bh] 1 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test ebx ebx +
jz loc_42AF10  +
and byte ptr [ebx+2Bh] 0FEh +
call sub_42ADB0  +
test eax eax +
jz loc_42AF19  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_42ADB0  +
test eax eax +
jnz loc_42AEE6  +
xor eax eax +
jmp loc_42AEE6  +
mov eax off_492AFC +
mov eax [eax] +
jmp loc_42AEDB  +
mov [esp+10h+var_10] offset aGnutarget +
call getenv  +
test eax eax +
jz loc_42AED2  +
jmp loc_42AEC2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+78h] +
mov edi [esp+7Ch] +
mov esi [esp+80h] +
test ebp ebp +
jz loc_42AF71  +
mov dword ptr [ebp+0] 0 +
test edi edi +
jz loc_42AF7B  +
mov dword ptr [edi] 0FFFFFFFFh +
test esi esi +
jz loc_42AF85  +
mov dword ptr [esi] 0 +
mov eax [esp+74h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_42AEB0  +
test eax eax +
mov ebx eax +
jz loc_42B070  +
test ebp ebp +
jz loc_42AFB4  +
mov edx [ebx+8] +
xor eax eax +
test edx edx +
setz al  +
mov [ebp+0] eax +
test edi edi +
jz loc_42AFBE  +
movzx eax byte ptr [ebx+18h] +
mov [edi] eax +
test esi esi +
mov eax ebx +
jz loc_42AFD3  +
mov ebp [ebx] +
call sub_423600  +
mov edi eax +
mov eax ebx +
test edi edi +
jnz loc_42AFE0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test ebp ebp +
jz loc_42B00A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_42B060  +
lea ebp [eax+1] +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_42AD30  +
test eax eax +
jz loc_42B020  +
mov [esp] edi +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] ebp +
lea ebp [esp+1Eh] +
mov [esp] ebp +
call strcpy  +
jmp loc_42B044  +
mov byte ptr [eax] 0 +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_42AD30  +
test eax eax +
jnz loc_42B00A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strrchr  +
test eax eax +
jnz loc_42B032  +
jmp loc_42B00A  +
***
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_42AD30  +
jmp loc_42B00A  +
***
xor eax eax +
jmp loc_42AFD3  +
***
sub esp 14h +
mov edx off_492AFC +
mov ebx [edx] +
test ebx ebx +
jz loc_42B0ED  +
xor eax eax +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_42B093  +
lea eax ds:4[eax*4] +
mov [esp+14h+var_14] eax +
call sub_42B400  +
test eax eax +
jz loc_42B0F8  +
mov edx off_492AFC +
mov ecx [edx] +
test ecx ecx +
jz loc_42B0F4  +
mov ebx edx +
mov esi eax +
jmp loc_42B0C8  +
mov ebx off_492AFC +
cmp edx ebx +
jz loc_42B0D0  +
cmp ecx [ebx] +
jz loc_42B0D8  +
mov ecx [ecx] +
add esi 4 +
mov [esi-4] ecx +
add edx 4 +
mov ecx [edx] +
test ecx ecx +
jnz loc_42B0C2  +
mov dword ptr [esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax 4 +
jmp loc_42B0A4  +
mov esi eax +
jmp loc_42B0E1  +
xor eax eax +
jmp loc_42B0E7  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx off_492AFC +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jnz loc_42B129  +
jmp loc_42B140  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jz loc_42B140  +
mov [esp+4] esi +
mov [esp] eax +
call edi  +
test eax eax +
jz loc_42B120  +
mov eax [ebx] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax offset aA_out +
mov eax offset aUnknownFileFor +
jmp loc_42B170  +
***
mov eax offset aSym +
mov eax offset aPef_xlib +
jmp loc_42B170  +
***
mov eax offset off_49CDDE +
mov eax offset aMach_o +
jmp loc_42B170  +
***
mov eax offset aMmo +
mov eax offset aEvax +
jmp loc_42B170  +
***
mov eax offset aOvax +
mov eax offset aMsdos +
jmp loc_42B170  +
***
mov eax offset aVersados +
mov eax offset aOs9k +
jmp loc_42B170  +
***
mov eax offset aSom +
mov eax offset aIhex +
jmp loc_42B170  +
***
mov eax offset aVerilog +
mov eax offset aSrec +
jmp loc_42B170  +
***
mov eax offset aTekhex +
jmp loc_42B170  +
***
mov eax offset aOasys +
jmp loc_42B170  +
***
mov eax offset aNlm +
jmp loc_42B170  +
***
mov eax offset aIeee +
jmp loc_42B170  +
***
mov eax offset off_49CD85 +
jmp loc_42B170  +
***
mov eax offset aXcoff +
jmp loc_42B170  +
***
mov eax offset aEcoff +
jmp loc_42B170  +
***
mov eax offset aCoff +
jmp loc_42B170  +
***
mov dword ptr [esp+8] offset aBfd_flavour_na +
mov dword ptr [esp+4] 75Ah +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_420BD0  +
nop   +
nop   +
nop   +
nop   +
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax 4 +
retn   +
***
mov eax [esp+0Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 3 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
js loc_42B424  +
mov [esp+18h+var_18] ebx +
call malloc  +
test eax eax +
jz loc_42B420  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_42B418  +
mov [esp+18h+var_18] 6 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_4] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_42B468  +
test ecx ecx +
jz loc_42B468  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_42B475  +
imul ecx ebx +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp sub_42B400  +
mov [esp+18h+var_18] 6 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_42B4D7  +
test ebx ebx +
js loc_42B4C4  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_42B4C0  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_42B4B4  +
mov [esp+18h+var_18] 6 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_42B400  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov ecx [esp+28h] +
mov esi [esp+20h] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_42B51D  +
test ecx ecx +
jz loc_42B51D  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_42B532  +
imul ecx ebx +
mov [esp+20h] esi +
mov [esp+24h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_42B490  +
***
mov dword ptr [esp] 6 +
call sub_420C50  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_42B490  +
test eax eax +
jz loc_42B571  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_42B56C  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call free  +
mov eax [esp+18h+var_C] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] esi +
call sub_42B400  +
test eax eax +
mov ebx eax +
jnz loc_42B5B0  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_42B5A7  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
mov [esp+4] esi +
call sub_42B440  +
test eax eax +
mov ebx eax +
jz loc_42B60B  +
imul esi edi +
test esi esi +
jz loc_42B60B  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] 4 +
mov edx eax +
shr edx 18h +
mov [esp+2Ch+var_10] dl +
mov edx eax +
shr edx 10h +
mov [esp+1Dh] dl +
mov edx eax +
mov [esp+2Ch+var_D] al +
mov eax [esp+2Ch+arg_0] +
shr edx 8 +
mov [esp+2Ch+var_E] dl +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call sub_429DA0  +
cmp eax 4 +
setz al  +
add esp 2Ch +
movzx eax al +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_42B690  +
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_42B6B0  +
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax] cl +
mov [eax+1] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov [eax] dl +
shr edx 8 +
mov [eax+1] dl +
retn   +
***
jmp sub_42B730  +
***
mov edx [esp+arg_0] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
push ebx  +
mov edx [esp+8] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ecx [esp+8+arg_0] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
movzx ecx byte ptr [ecx+7] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
movzx ecx byte ptr [ecx] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx+7] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 18h +
mov [eax] cl +
mov ecx edx +
shr ecx 10h +
mov [eax+1] cl +
mov ecx edx +
shr ecx 8 +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax+1] cl +
mov ecx edx +
mov [eax] dl +
shr ecx 10h +
shr edx 18h +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
jmp loc_42BA70  +
***
push esi  +
push ebx  +
mov edx [esp-4+arg_4] +
mov esi [esp-4+arg_8] +
mov eax [esp-4+arg_0] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+1] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+2] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+4] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+5] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+3] dl +
mov [esi+6] cl +
mov [esi+7] al +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
mov esi [esp+14h] +
mov eax [esp+0Ch] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi+7] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+6] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+5] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+3] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+2] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+4] dl +
mov [esi+1] cl +
mov [esi] al +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+3Ch] +
mov eax [esp+30h] +
mov edx [esp+34h] +
mov ebp [esp+38h] +
test cl 7 +
mov esi [esp+40h] +
jnz loc_42BB6D  +
test ecx ecx +
lea edi [ecx+7] +
cmovns edi ecx +
xor ecx ecx +
sar edi 3 +
lea ebx [edi-1] +
test edi edi +
mov [esp+0Ch] ebx +
jle loc_42BB65  +
mov ebx [esp+0Ch] +
sub ebx ecx +
test esi esi +
cmovz ebx ecx +
add ecx 1 +
mov [ebp+ebx+0] al +
shrd eax edx +
shr edx 8 +
cmp ecx edi +
jnz loc_42BB48  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aBfd_put_bits +
mov dword ptr [esp+4] 2E2h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_420BD0  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov ebp [esp+48h] +
test al 7 +
jnz loc_42BC10  +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
mov [esp+18h] eax +
sar dword ptr [esp+18h] 3 +
mov ebx [esp+18h] +
test ebx ebx +
jle loc_42BC0A  +
sub ebx 1 +
xor esi esi +
xor eax eax +
xor edx edx +
mov [esp+1Ch] ebx +
mov [esp+48h] ebp +
lea esi [esi+0] +
mov ecx [esp+48h] +
mov ebx edx +
mov edi [esp+1Ch] +
mov ebp [esp+40h] +
sub edi esi +
test ecx ecx +
cmovnz edi esi +
mov ecx eax +
movzx edi byte ptr [ebp+edi+0] +
shl ecx 8 +
add esi 1 +
shld ebx eax +
mov edx ebx +
or edi ecx +
cmp esi [esp+18h] +
mov eax edi +
jnz loc_42BBD0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor edx edx +
jmp loc_42BC02  +
***
mov dword ptr [esp+8] offset aBfd_get_bits +
mov dword ptr [esp+4] 2F7h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_420BD0  +
lea esi [esi+0] +
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+44h] +
mov ecx [esp+3Ch] +
mov ebx [esp+40h] +
test edx edx +
jz loc_42BCF5  +
mov eax [esp+34h] +
test byte ptr [eax+18h] 30h +
jnz loc_42BD30  +
mov eax [esp+30h] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_42BD00  +
mov eax [esp+34h] +
mov ebp [eax+28h] +
test ebp ebp +
jz loc_42BD00  +
mov eax [esp+44h] +
xor edx edx +
mov edi edx +
mov esi eax +
add esi ecx +
adc edi ebx +
cmp edx edi +
jg loc_42BD16  +
jge loc_42BD60  +
cmp edi 0 +
jge loc_42BD10  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+30h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_429F00  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_42BCF5  +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_429CF0  +
cmp [esp+44h] eax +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebp [eax+24h] +
jmp loc_42BC80  +
***
jg loc_42BD16  +
cmp esi ebp +
jbe loc_42BCA1  +
mov dword ptr [esp] 5 +
call sub_420C50  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+30h] +
mov dword ptr [esp] offset aBUnableToGetDe +
mov [esp+4] eax +
call off_492AE8  +
mov dword ptr [esp] 5 +
call sub_420C50  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp [esp+44h] esi +
ja loc_42BD16  +
jmp loc_42BC9C  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_generic_g +
mov dword ptr [esp+4] 362h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_420BD0  +
nop   +
push esi  +
mov eax 1 +
push ebx  +
sub esp 14h +
mov esi [esp+34h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test esi esi +
jnz loc_42BDB0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+20h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_429F00  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_42BDAA  +
mov eax [esp+20h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_429DA0  +
cmp esi eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
cmp edx 1 +
jbe loc_42BE30  +
sub edx 1 +
xor eax eax +
nop   +
add eax 1 +
shr edx 1 +
jnz loc_42BE20  +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax 4Ch +
cmp byte ptr [edx+18h] 5Fh +
mov edx 2Eh +
cmovnz eax edx +
mov edx [esp+8] +
cmp al [edx] +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov ecx [esp+20h] +
mov edx [esp+24h] +
mov eax [ecx+4] +
mov edx [edx+4] +
mov eax [eax+8] +
mov edx [edx+8] +
cmp eax edx +
jz loc_42BEC3  +
cmp eax 2 +
jz loc_42BEC3  +
cmp edx 2 +
jz loc_42BEC3  +
test eax eax +
mov edx offset aBCompiledForAB +
mov eax offset aBCompiledForAL +
cmovnz edx eax +
mov [esp+4] ecx +
mov [esp] edx +
call off_492AE8  +
mov dword ptr [esp] 3 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_4C12B8 +
mov ebx [esp+3Ch] +
or eax ebx +
cmp eax 0FFFFFFFFh +
jz loc_42BF44  +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
test ebx ebx +
jz loc_42BF50  +
mov eax [esp+38h] +
mov [esp+14h] ebx +
mov dword ptr [esp+4] offset aDeprecatedSCal +
mov [esp+10h] eax +
mov eax [esp+34h] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
mov eax ds:_iob +
not ebx  +
add eax 40h +
mov [esp] eax +
call fflush  +
or ds:dword_4C12B8 ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aDeprecatedSC_0 +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_42BF2C  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_42BF90  +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov edi [esp+arg_4] +
mov ebp [esp+arg_10] +
cmp edi ebp +
jnb loc_42C03F  +
movzx eax byte ptr [edi] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_42C04E  +
sub ebp edi +
mov ecx 7 +
mov edx 1 +
jmp loc_42C007  +
movzx eax byte ptr [edi+edx] +
add edx 1 +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or esi ebx +
test al al +
jns loc_42C00B  +
cmp edx ebp +
jnz loc_42BFF0  +
cmp ecx 1Fh +
setbe bl  +
mov edi [esp+arg_8] +
test edi edi +
jz loc_42C01F  +
mov edi [esp+arg_8] +
mov [edi] edx +
mov edx [esp+arg_C] +
test edx edx +
jz loc_42C038  +
test bl bl +
jz loc_42C038  +
test al 40h +
jz loc_42C038  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 1 +
xor eax eax +
xor ecx ecx +
xor edx edx +
xor esi esi +
jmp loc_42C011  +
mov ebx 1 +
mov ecx 7 +
mov edx 1 +
jmp loc_42C011  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_42C070  +
cmp ecx 1Fh +
ja loc_42C099  +
test al 40h +
jz loc_42C099  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
add eax 2 +
cmp eax 0Ah +
ja loc_42C130  +
jmp ds:off_49D07C[eax*4]  +
mov eax 2 +
add esp 1Ch +
retn   +
mov eax 4 +
add esp 1Ch +
retn   +
mov eax 1 +
add esp 1Ch +
retn   +
mov eax 8 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
mov eax 10h +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aBfd_get_reloc_ +
mov [esp+1Ch+var_18] 1BAh +
mov [esp+1Ch+var_1C] offset a____Binutil_16 +
call sub_420BD0  +
lea esi [esi+0] +
push ebp  +
mov edx 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+48h+var_14] +
mov ebx [esp+48h+var_C] +
mov esi [esp+48h+var_10] +
mov edi [esp+48h+var_18] +
lea ecx [eax-1] +
mov eax edx +
shl eax cl +
lea eax [eax+eax-2] +
lea ecx [ebx-1] +
or eax 1 +
shl edx cl +
mov ebx eax +
mov ecx esi +
mov ebp eax +
lea edx [edx+edx-2] +
not ebp  +
shl ebx cl +
or edx 1 +
or edx ebx +
mov ebx [esp+48h+var_8] +
mov ecx esi +
and ebx edx +
shr ebx cl +
cmp edi 1 +
jz loc_42C1C7  +
jb loc_42C200  +
cmp edi 2 +
jz loc_42C1C1  +
cmp edi 3 +
nop   +
lea esi [esi+0] +
jnz loc_42C1E2  +
xor eax eax +
test ebp ebx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shr eax 1 +
mov ebp eax +
not ebp  +
xor eax eax +
and ebx ebp +
jz loc_42C1B9  +
mov ecx esi +
xor eax eax +
shr edx cl +
and edx ebp +
cmp ebx edx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_40] offset aBfd_check_over +
mov [esp+48h+var_44] 217h +
mov [esp+48h+var_48] offset a____Binutil_16 +
call sub_420BD0  +
nop   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
mov eax [esi+10h] +
cmp eax offset off_492990 +
jz loc_42C3F5  +
test ebp ebp +
jz loc_42C3B0  +
cmp eax offset off_4928E8 +
mov [esp+3Ch+var_1C] 0 +
jz loc_42C415  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_42C290  +
mov edx [esp+3Ch+arg_14] +
mov edi [esp+3Ch+arg_10] +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] edi +
call eax  +
cmp eax 3 +
jz loc_42C290  +
***
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+3Ch+arg_0] +
mov edi [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_423820  +
mov [esp+3Ch+var_3C] ebp +
mov edx eax +
imul edx edi +
mov [esp+3Ch+var_18] edx +
call sub_42C0C0  +
mov edx [esp+3Ch+var_18] +
lea edi [edx+eax] +
mov eax [esp+3Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_42C3C0  +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+28h] +
test ecx ecx +
jz loc_42C3C0  +
cmp ecx edi +
mov eax 2 +
jb loc_42C288  +
mov eax [esi+10h] +
xor ecx ecx +
test byte ptr [eax+15h] 10h +
jnz loc_42C2F0  +
mov ecx [esi+8] +
mov esi [esp+3Ch+arg_10] +
mov edi [eax+3Ch] +
test esi esi +
jz loc_42C3E0  +
xor esi esi +
cmp dword ptr [ebp+24h] 0 +
jnz loc_42C3E0  +
mov edi [ebx+8] +
mov [esp+3Ch+var_14] edi +
add edi [eax+38h] +
add ecx edi +
lea eax [ecx+esi] +
mov [esp+3Ch+var_18] eax +
mov eax [ebp+10h] +
test eax eax +
jz loc_42C349  +
mov eax [esp+3Ch+arg_C] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+3Ch] +
mov ecx [ecx+38h] +
sub [esp+3Ch+var_18] ecx +
mov eax [eax+1Ch] +
sub [esp+3Ch+var_18] eax +
mov eax [ebp+30h] +
test eax eax +
jnz loc_42C484  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_42C37E  +
mov esi [ebp+24h] +
test esi esi +
jz loc_42C620  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+arg_0] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_42C490  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov ecx [ebp+18h] +
test ecx ecx +
jnz loc_42C434  +
mov ecx [ebp+4] +
mov ebx [esp+3Ch+var_18] +
mov eax [ebp+8] +
shr ebx cl +
mov ecx [ebp+14h] +
add eax 2 +
shl ebx cl +
cmp eax 6 +
ja loc_42C63A  +
jmp ds:off_49D0CC[eax*4]  +
***
add esp 3Ch +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_42C288  +
jmp loc_42C2E2  +
***
mov eax [esp+arg_4C] +
mov eax [esp+20h] +
mov eax [esp+arg_4C] +
mov [esp+arg_4] offset aBfd_perform_re +
mov eax [esp+arg_4C] +
add edx [esp+arg_54] +
mov eax [esp+arg_4C] +
mov esi [esp+arg_54] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
jmp loc_42C509  +
***
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+var_1C] +
jmp loc_42C288  +
mov eax 5 +
jmp loc_42C288  +
test ebp ebp +
jz loc_42C3B0  +
mov [esp+3Ch+var_1C] 0 +
jmp loc_42C24B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+54h] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
cmp dword ptr [esi+10h] offset off_492990 +
jz loc_42C800  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_42C6C4  +
mov edx [esp+64h] +
mov edi [esp+50h] +
mov ecx [esp+60h] +
mov [esp+8] esi +
mov [esp+18h] edx +
mov edx [esp+58h] +
sub edx [esp+5Ch] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
cmp eax 3 +
jz loc_42C6C4  +
***
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test esi esi +
jz loc_42C814  +
mov ecx [ebx+4] +
add eax ecx +
mov [ebx+4] eax +
mov eax [esp+50h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_42C9B2  +
mov eax [esp+24h] +
mov [ebx+8] eax +
mov eax [ebp+18h] +
test eax eax +
jnz loc_42C970  +
mov ecx [ebp+4] +
xor ebx ebx +
mov edi [esp+24h] +
mov eax [ebp+8] +
mov esi [esp+58h] +
sub edx [esp+5Ch] +
shr edi cl +
mov ecx [ebp+14h] +
add eax 2 +
add esi edx +
shl edi cl +
cmp eax 6 +
ja sub_42C960  +
jmp ds:off_49D0F4[eax*4]  +
***
mov eax [esp+60h] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_42C6BC  +
jmp loc_42C716  +
***
mov eax [esp+60h] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+24h] +
add [ebx+4] eax +
xor eax eax +
mov [ebx+8] esi +
jmp loc_42C6BC  +
***
mov eax ebx +
jmp loc_42C6BC  +
***
mov eax [esp+arg_4C] +
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_42C6BC  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+arg_0] esi +
mov esi eax +
and si [ebp+28h] +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
movsx edi di +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_42C6BC  +
***
movzx eax byte ptr [esi] +
mov ecx [ebp+2Ch] +
mov edx eax +
and dl [ebp+28h] +
add edx edi +
and edx ecx +
not ecx  +
and ecx eax +
mov eax ebx +
or edx ecx +
mov [esi] dl +
jmp loc_42C6BC  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi edi +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+0] esi +
call ecx  +
mov eax ebx +
jmp loc_42C6BC  +
***
mov eax 5 +
jmp loc_42C6BC  +
***
mov eax [esp+50h] +
mov [esp+28h] edx +
mov [esp] eax +
call sub_423730  +
mov esi [ebp+4] +
mov ebx [esp+24h] +
mov [esp+8] esi +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
mov eax [ebp+18h] +
mov [esp] eax +
call loc_42C150  +
mov ecx esi +
mov edx [esp+28h] +
mov ebx eax +
jmp loc_42C7B6  +
***
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+2Ch] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_42C79F  +
mov esi [esp+2Ch] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_42C79F  +
mov eax [esp+28h] +
mov edi offset aCoffZ8k +
mov ecx 9 +
sub [esp+24h] eax +
mov esi [esp+2Ch] +
cmps   +
jz loc_42C7A6  +
mov dword ptr [ebx+8] 0 +
jmp loc_42C7A6  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+3Ch+var_30] eax +
mov eax [ebx+14h] +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_2C] eax +
mov eax esi +
neg eax  +
test edx edx +
cmovs esi eax +
call sub_42C0C0  +
cmp eax 8 +
mov edi eax +
ja loc_42CC10  +
jmp ds:off_49D110[eax*4]  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_C] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_42CB14  +
mov ebp [esp+3Ch+var_28] +
and ebp [ebx+28h] +
mov [esp+3Ch+var_24] 0 +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [ebx+2Ch] +
shr esi cl +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
and eax [esp+3Ch+var_28] +
shl esi cl +
lea ecx [esi+ebp] +
and ecx edx +
or ecx eax +
cmp edi 2 +
jz loc_42CD03  +
jle loc_42CCB0  +
cmp edi 4 +
jz loc_42CCC4  +
cmp edi 8 +
jnz loc_42CCE7  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 60Bh +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
call sub_420BD0  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jz loc_42CA86  +
mov eax [ebx+0Ch] +
mov ebp 1 +
lea ecx [eax-1] +
mov eax ebp +
shl eax cl +
mov ecx [esp+3Ch+arg_4] +
lea eax [eax+eax-2] +
mov [esp+3Ch+var_24] eax +
or [esp+3Ch+var_24] 1 +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] ecx +
not eax  +
mov [esp+3Ch+var_1C] eax +
call sub_423730  +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [esp+3Ch+var_24] +
shl edx cl +
lea ecx [eax-1] +
or edx 1 +
shl ebp cl +
lea eax [ebp+ebp-2] +
mov ebp [esp+3Ch+var_28] +
or edx eax +
mov eax [esp+3Ch+var_30] +
mov ecx edx +
and ecx esi +
mov [esp+3Ch+var_20] ecx +
mov ecx eax +
shr [esp+3Ch+var_20] cl +
mov ecx [ebx+28h] +
and ebp ecx +
mov [esp+3Ch+var_10] ecx +
mov ecx edx +
and ecx ebp +
mov [esp+3Ch+var_18] ecx +
movzx ecx byte ptr [esp+3Ch+var_2C] +
shr [esp+3Ch+var_18] cl +
mov ecx eax +
mov eax [ebx+18h] +
shr edx cl +
mov [esp+3Ch+var_14] edx +
cmp eax 2 +
jz loc_42CC30  +
cmp eax 3 +
jz loc_42CD10  +
cmp eax 1 +
jz loc_42CC3E  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5EDh +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
call sub_420BD0  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
jmp loc_42CA7B  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 58Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
call sub_420BD0  +
lea esi [esi+0] +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 57Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
call sub_420BD0  +
lea esi [esi+0] +
mov eax [esp+3Ch+var_24] +
shr eax 1 +
mov [esp+3Ch+var_1C] eax +
not [esp+3Ch+var_1C]  +
mov eax [esp+3Ch+var_1C] +
and eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_24] 0 +
jz loc_42CC64  +
mov edx [esp+3Ch+var_1C] +
and edx [esp+3Ch+var_14] +
cmp eax edx +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_10] +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
shr eax 1 +
and eax edx +
mov edx [esp+3Ch+var_18] +
shr eax cl +
mov ecx [esp+3Ch+var_20] +
xor edx eax +
sub edx eax +
mov eax ecx +
xor eax edx +
add edx ecx +
xor edx ecx +
not eax  +
and eax edx +
and eax [esp+3Ch+var_14] +
test [esp+3Ch+var_1C] eax +
mov eax 1 +
cmovz eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_24] eax +
jmp loc_42CA95  +
cmp edi 1 +
jnz loc_42CCE7  +
mov eax [esp+3Ch+arg_C] +
mov [eax] cl +
mov eax [esp+3Ch+var_24] +
jmp loc_42CA65  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov edi [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] edi +
call eax  +
mov eax [esp+3Ch+var_24] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5FDh +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
call sub_420BD0  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
jmp loc_42CCCE  +
mov edx [esp+3Ch+var_18] +
mov ecx [esp+3Ch+var_20] +
mov eax edx +
add edx ecx +
or eax ecx +
and edx [esp+3Ch+var_14] +
or eax edx +
test [esp+3Ch+var_1C] eax +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
jmp loc_42CA95  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
mov [esp+2Ch+var_2C] edx +
mov edi [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] ecx +
mov ebp [esp+2Ch+arg_14] +
mov [esp+2Ch+var_1C] edx +
mov [esp+2Ch+var_10] eax +
call sub_423820  +
mov [esp+2Ch+var_2C] esi +
mov ebx eax +
call sub_42C0C0  +
imul ebx edi +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
add ebx eax +
movzx eax byte ptr [edx+28h] +
and eax 18h +
cmp al 10h +
jz loc_42CDB5  +
mov eax [ecx+28h] +
test eax eax +
jz loc_42CDB5  +
cmp eax ebx +
jnb loc_42CDBC  +
add esp 2Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+24h] +
cmp eax ebx +
jb loc_42CDA8  +
mov ebx [esi+10h] +
add ebp [esp+2Ch+var_10] +
test ebx ebx +
jz loc_42CDDC  +
mov eax [ecx+3Ch] +
sub ebp [eax+1Ch] +
sub ebp [ecx+38h] +
mov ecx [esi+30h] +
mov eax ebp +
sub eax edi +
test ecx ecx +
cmovnz ebp eax +
add edi [esp+2Ch+var_14] +
mov [esp+2Ch+arg_8] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_C] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_42CA20  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_14] eax +
call sub_42C0C0  +
cmp eax 8 +
mov ebx eax +
ja loc_42CEF2  +
jmp ds:off_49D144[eax*4]  +
***
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+arg_4] offset a_bfd_clear_con +
mov eax [esp+arg_14] +
movzx eax byte ptr [eax] +
mov edx [edi+2Ch] +
mov ecx 0Eh +
mov edi offset a_debug_ranges +
mov esi [esi] +
mov [esp+arg_18] edx +
not edx  +
and edx eax +
cmps   +
jnz loc_42CE9F  +
mov eax edx +
or eax 1 +
test byte ptr [esp+arg_18] 1 +
cmovnz edx eax +
cmp ebx 2 +
jz loc_42CF10  +
jle loc_42CE35  +
cmp ebx 4 +
jz loc_42CF50  +
cmp ebx 8 +
jnz loc_42CF30  +
mov [esp+arg_4] offset a_bfd_clear_con +
mov [esp+arg_0] 658h +
mov dword ptr [esp+0] offset a____Binutil_16 +
call sub_420BD0  +
mov eax [ebp+4] +
mov ecx [esp+arg_14] +
mov eax [eax+34h] +
mov [esp+0] ecx +
call eax  +
jmp loc_42CE77  +
mov eax [ebp+4] +
mov ecx [esp+arg_14] +
mov eax [eax+28h] +
mov [esp+0] ecx +
call eax  +
jmp loc_42CE77  +
mov [esp+arg_4] offset a_bfd_clear_con +
mov [esp+arg_0] 626h +
mov dword ptr [esp+0] offset a____Binutil_16 +
call sub_420BD0  +
nop   +
mov eax [ebp+4] +
mov eax [eax+3Ch] +
mov ecx [esp+arg_14] +
mov [esp+arg_3C] edx +
mov [esp+arg_40] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+arg_4] offset a_bfd_clear_con +
mov [esp+arg_0] 64Ah +
mov dword ptr [esp+0] offset a____Binutil_16 +
call sub_420BD0  +
lea esi [esi+0] +
mov eax [ebp+4] +
mov eax [eax+30h] +
jmp loc_42CF16  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov edx [edx+148h] +
jmp edx  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+14Ch] +
jmp edx  +
***
sub esp 1Ch +
cmp dword ptr [esp+24h] 225h +
jnz loc_42CFD7  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_423730  +
mov edx eax +
mov eax offset unk_49D360 +
cmp edx 20h +
jz loc_42CFED  +
cmp edx 40h +
jz loc_42CFF1  +
cmp edx 10h +
jnz loc_42CFC3  +
mov dword ptr [esp+4] 1E30h +
mov dword ptr [esp] offset a____Binutil_16 +
call sub_420BA0  +
mov dword ptr [esp+4] 1E32h +
mov dword ptr [esp] offset a____Binutil_16 +
call sub_420BA0  +
mov dword ptr [esp+4] 1E35h +
mov dword ptr [esp] offset a____Binutil_16 +
call sub_420BA0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+4] 1E2Ch +
mov dword ptr [esp] offset a____Binutil_16 +
mov [esp+0Ch] eax +
call sub_420BA0  +
mov eax [esp+0Ch] +
add esp 1Ch +
retn   +
***
jmp loc_42D020  +
mov eax [esp+4] +
cmp eax 87Ah +
ja loc_42D033  +
mov eax ds:off_4AADE0[eax*4] +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov edx [esp+28h] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_42D064  +
mov eax [esp+2Ch] +
mov dword ptr [eax] 0 +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [edx+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRMay +
call eax  +
jmp loc_42D051  +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov eax 1 +
mov edx [esp+24h] +
test edx edx +
jz loc_42D0AF  +
mov dword ptr [esp] offset aInput_section_ +
call off_492AE8  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+68h] +
mov edi [esp+70h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_420CA0  +
test eax eax +
mov esi eax +
js loc_42D291  +
lea eax [esp+6Ch] +
mov [esp+8] eax +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_421F90  +
test eax eax +
jz loc_42D291  +
test esi esi +
jnz loc_42D130  +
***
mov eax [esp+arg_68] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call sub_42B400  +
test eax eax +
mov esi eax +
mov [esp+2Ch] eax +
jz loc_42D291  +
mov eax [esp+74h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_420CE0  +
test eax eax +
js loc_42D285  +
jz loc_42D24D  +
mov eax [esi] +
test eax eax +
jz loc_42D24D  +
mov [esp+28h] ebp +
mov [esp+70h] edi +
nop   +
***
mov dword ptr [esp+3Ch] 0 +
mov edx [esi] +
mov eax [edx] +
mov eax [eax] +
mov eax [eax+10h] +
test eax eax +
jz loc_42D1A9  +
cmp eax offset off_492990 +
jz loc_42D1A9  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_42D3F0  +
mov ecx [esp+70h] +
xor eax eax +
mov [esp-5Ch+arg_64] ebx +
mov [esp-5Ch+arg_5C] edx +
test ecx ecx +
cmovnz eax [esp+60h] +
lea ecx [esp+3Ch] +
mov [esp-5Ch+arg_6C] ecx +
mov [esp-5Ch+arg_68] eax +
mov eax [esp-5Ch+arg_C4] +
mov [esp-5Ch+arg_60] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_42C210  +
mov edx [esp+70h] +
test edx edx +
jz loc_42D1FB  +
mov edx [ebx+3Ch] +
mov edi [esi] +
mov ecx [edx+4Ch] +
mov ebp [edx+48h] +
mov [ebp+ecx*4+0] edi +
add ecx 1 +
mov [edx+4Ch] ecx +
test eax eax +
jz loc_42D240  +
cmp eax 7 +
ja sub_42D210  +
jmp ds:off_49D264[eax*4]  +
***
mov edi [esp+64h] +
mov ecx [esi] +
mov edx [edi+18h] +
mov edx [edx+2Ch] +
mov [esp-5Ch+arg_68] eax +
mov eax [esp+60h] +
mov [esp-5Ch+arg_64] ecx +
mov [esp-5Ch+arg_60] ebx +
mov [esp-5Ch+arg_58] offset aXPBARelocation +
mov [esp-5Ch+arg_5C] eax +
call edx  +
lea esi [esi+0] +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_42D180  +
mov eax [esp+2Ch] +
mov [esp-5Ch+arg_58] eax +
call free  +
jmp loc_42D11E  +
***
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_0 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_38] +
test eax eax +
jz loc_42D466  +
mov edi [esp+arg_60] +
mov ecx [esi] +
mov edx [edi+18h] +
mov ecx [ecx+4] +
mov edi [esp+arg_24] +
mov edx [edx+20h] +
mov [esp+arg_0] eax +
mov eax [esp+arg_60] +
mov [esp+arg_C] ecx +
mov [esp+arg_8] ebx +
mov [esp+arg_4] edi +
mov [esp+0] eax +
call edx  +
test eax eax +
jz loc_42D285  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_42D180  +
jmp loc_42D24D  +
***
mov eax [esp+arg_60] +
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_1 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
jmp loc_42D291  +
***
mov eax [esp+arg_60] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov edi eax +
mov eax [esi] +
mov edx [eax+8] +
mov ecx [eax+4] +
mov ebp edx +
mov edx [eax+0Ch] +
mov eax [eax] +
mov edx [edx+20h] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp+arg_18] ecx +
mov ecx [esp+arg_24] +
mov [esp+arg_14] ebx +
mov [esp+arg_C] ebp +
mov [esp+arg_4] eax +
mov eax [esp+arg_60] +
mov [esp+arg_10] ecx +
mov [esp+arg_8] edx +
mov [esp+arg_0] 0 +
mov [esp+0] eax +
call edi  +
test eax eax +
jz loc_42D285  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_42D180  +
jmp loc_42D24D  +
***
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42D1A9  +
cmp ax 200h +
jz loc_42D1A9  +
mov eax [esp-5Ch+arg_C4] +
mov edi eax +
mov eax [edx+4] +
mov ebp eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_423820  +
mov edx [esi] +
mov edx [edx+0Ch] +
mov [esp-5Ch+arg_60] ebx +
imul eax ebp +
mov [esp-5Ch+arg_58] edx +
add eax edi +
mov [esp-5Ch+arg_64] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_5C] eax +
call sub_42CE00  +
mov eax [esi] +
mov edx off_492A2C +
mov [eax] edx +
mov eax [esi] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] offset unk_49D2A0 +
xor eax eax +
jmp loc_42D1DE  +
***
mov [esp+arg_0] 1F1Ch +
mov dword ptr [esp+0] offset a____Binutil_16 +
call sub_420BA0  +
mov eax [esp+arg_38] +
jmp loc_42D2AC  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 10h +
mov [esp+1Ch+var_1C] eax +
call sub_42A750  +
test eax eax +
jz loc_42D4B2  +
mov dword ptr [eax+0Ch] 0 +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test byte ptr [ebx+2Ch] 1 +
jz loc_42D500  +
mov esi [ebx+9Ch] +
test esi esi +
jz loc_42D500  +
mov [esp+14h+var_14] esi +
call sub_42A2B0  +
mov [esp+14h+var_14] esi +
call free  +
mov dword ptr [ebx+9Ch] 0 +
and byte ptr [ebx+2Ch] 0FEh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 30Ch +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_420BA0  +
mov esi [ebx+9Ch] +
jmp loc_42D4D9  +
***
sub esp 1Ch +
mov edx [edx+18h] +
retn   +
***
or dword ptr [eax+0Ch] 80h +
***
mov ecx [edx+14h] +
mov dword ptr [eax+10h] offset off_4928E8 +
mov edx [eax+10h] +
test edx edx +
jz loc_42D601  +
test byte ptr [eax+0Dh] 8 +
jnz sub_42D576  +
mov dword ptr [esp+4] 8E9h +
mov dword ptr [esp+0] offset a____Binutil_15 +
call sub_420BA0  +
jmp sub_42D576  +
mov dword ptr [eax+10h] offset off_4928E8 +
mov dword ptr [eax+8] 0 +
add esp 1Ch +
retn   +
mov dword ptr [esp+8] offset aSet_symbol_fro +
mov [esp-1Ch+arg_1C] 8E2h +
mov [esp-1Ch+arg_18] offset a____Binutil_15 +
call sub_420BD0  +
or dword ptr [eax+0Ch] 800h +
mov dword ptr [eax+10h] offset off_492990 +
mov dword ptr [eax+8] 0 +
jmp sub_42D576  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
mov eax [ecx] +
mov edi [esp+28h+arg_0] +
cmp ebx eax +
jnb loc_42D653  +
mov eax [ebp+0] +
test edi edi +
mov [eax+ebx*4] edi +
jz loc_42D690  +
add ebx 1 +
mov eax 1 +
mov [esi] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jz loc_42D680  +
lea edx [eax+eax] +
mov [ecx] edx +
shl eax 3 +
mov edx [ebp+0] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_42B490  +
test eax eax +
jz loc_42D697  +
mov [ebp+0] eax +
mov ebx [esi] +
jmp loc_42D63A  +
mov dword ptr [ecx] 7Ch +
mov ax 1F0h +
jmp loc_42D65F  +
mov eax 1 +
jmp loc_42D64B  +
xor eax eax +
jmp loc_42D64B  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
mov esi [esp+24h+arg_4] +
mov eax [edx+1Ch] +
test eax eax +
jnz loc_42D6F6  +
mov ecx [esi] +
mov dword ptr [edx+1Ch] 1 +
movzx eax byte ptr [ecx+1] +
and eax 18h +
cmp al 18h +
jz loc_42D6F6  +
cmp al 10h +
jz loc_42D730  +
mov ebx [edx+20h] +
test ebx ebx +
jz loc_42D701  +
mov eax ebx +
call sub_42D520  +
mov eax [esi+4] +
or dword ptr [ebx+0Ch] 2 +
mov ecx [esi+8] +
mov [esp+24h+var_24] ebx +
lea edx [eax+7Ch] +
add eax 78h +
call sub_42D620  +
test eax eax +
jz loc_42D764  +
mov eax 1 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+4] +
mov [esp+24h+var_8] edx +
mov ecx [eax+4] +
mov ecx [ecx+10Ch] +
mov [esp+24h+var_24] eax +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_42D780  +
mov edx [esp+24h+var_8] +
mov eax [edx+4] +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+4] eax +
jmp loc_42D6D3  +
mov ebx [edx+4] +
mov eax [ecx+20h] +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_8] edx +
call sub_42A4E0  +
mov edx [esp+24h+var_8] +
test eax eax +
jnz loc_42D6CC  +
jmp loc_42D6F6  +
mov [esp+24h+var_1C] offset a_bfd_generic_1 +
mov [esp+24h+var_20] 93Fh +
mov [esp+24h+var_24] offset a____Binutil_15 +
call sub_420BD0  +
xor eax eax +
jmp loc_42D6FB  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
mov eax [eax+104h] +
mov [esp+14h+var_14] ebx +
call eax  +
test eax eax +
mov esi eax +
js loc_42D7E6  +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call sub_425850  +
test eax eax +
mov [ebx+78h] eax +
jz loc_42D7E2  +
mov edx [ebx+4] +
mov edx [edx+108h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call edx  +
test eax eax +
js loc_42D7E6  +
mov [ebx+7Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_42D7BE  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_42D840  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_42A800  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_42D83A  +
mov dword ptr [edx+0Ch] 0 +
mov eax edx +
mov dword ptr [edx+10h] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 1Ch +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
test eax eax +
jnz loc_42D800  +
xor eax eax +
jmp loc_42D83A  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_42D8A0  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_42D7F0  +
test eax eax +
jz loc_42D8B4  +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+20h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 24h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
test eax eax +
jnz loc_42D870  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
test byte ptr [esi+2Ch] 1 +
jnz loc_42D8DD  +
mov eax [esi+9Ch] +
test eax eax +
jz loc_42D8F1  +
mov [esp+14h+var_10] 1DEh +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [esp+14h+arg_C] +
mov dword ptr [ebx+1Ch] 0 +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+28h] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_42A280  +
test eax eax +
jz loc_42D933  +
mov dword ptr [ebx+24h] offset sub_42D4C0 +
or byte ptr [esi+2Ch] 1 +
mov [esi+9Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_42A4E0  +
test eax eax +
jz loc_42D973  +
mov edx [esp+1Ch+arg_10] +
test edx edx +
jnz loc_42D97A  +
add esp 1Ch +
retn   +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_42D977  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_C] +
mov ebx [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_10] +
mov edi [ebx+28h] +
mov [esp+3Ch+var_10] eax +
mov eax [esp+3Ch+arg_14] +
test edi edi +
mov [esp+3Ch+var_18] eax +
jz loc_42DAAE  +
mov ecx [ecx+4] +
movzx eax byte ptr [edx] +
cmp al [ecx+18h] +
mov [esp+3Ch+var_1D] al +
jz loc_42DAA0  +
cmp al [ebx+8] +
jz loc_42DAA0  +
mov ebp edx +
mov [esp+3Ch+var_1D] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_14] edx +
call sub_42A4E0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_42DAA8  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 9 +
mov [esp+3Ch+var_3C] eax +
call sub_42B400  +
test eax eax +
mov esi eax +
jz loc_42DB70  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea edx [esi+eax] +
lea eax [esi+eax+7] +
mov dword ptr [edx] 72775F5Fh +
mov dword ptr [edx+4] 5F7061h +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_42D940  +
mov [esp+3Ch+var_3C] esi +
mov ebx eax +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [edx+1] +
jmp loc_42D9E9  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_42DAE0  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+arg_4] edx +
mov [esp+3Ch+arg_10] edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+arg_0] eax +
mov [esp+3Ch+arg_C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+arg_8] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_42D940  +
mov edi offset a__real_ +
mov ecx 7 +
mov esi ebp +
cmps   +
jnz loc_42DAAE  +
mov eax [ebx+28h] +
add ebp 7 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call sub_42A4E0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_42DAAE  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 2 +
mov [esp+3Ch+var_3C] eax +
call sub_42B400  +
test eax eax +
mov esi eax +
jz loc_42DB70  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
call strcat  +
mov ecx [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] ecx +
jmp loc_42DA80  +
xor eax eax +
jmp loc_42DA98  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
test byte ptr [ecx+15h] 1 +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_24] edx +
jz loc_42DDF0  +
mov eax [esp+44h+arg_0] +
mov ebp [eax+10h] +
mov eax [ebp+94h] +
mov [esp+44h+var_1C] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_42DDE0  +
cmp [ebp+3Ch] edi +
jz loc_42DBD0  +
mov [esp+44h+var_40] 0A32h +
mov [esp+44h+var_44] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [esp+44h+arg_0] +
mov eax [eax+8] +
cmp [ebp+38h] eax +
jz loc_42DBF0  +
mov [esp+44h+var_40] 0A33h +
mov [esp+44h+var_44] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
cmp [ebp+24h] eax +
jz loc_42DC10  +
mov [esp+44h+var_40] 0A34h +
mov [esp+44h+var_44] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [esp+44h+var_24] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_42DE52  +
mov ecx [esp+44h+arg_4] +
test ecx ecx +
jnz loc_42DC97  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_42DF63  +
mov eax [esp+44h+var_1C] +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
jbe loc_42DC97  +
mov [esp+44h+var_18] edi +
mov edi ebx +
mov ebx eax +
jmp loc_42DC6F  +
mov eax [esi+10h] +
cmp eax offset off_4928E8 +
jz loc_42DC7A  +
test byte ptr [eax+15h] 10h +
jnz loc_42DC7A  +
cmp eax offset off_492A38 +
jz loc_42DC7A  +
add edi 4 +
cmp ebx edi +
jbe loc_42DC93  +
mov esi [edi] +
test dword ptr [esi+0Ch] 3882h +
jz loc_42DC51  +
mov edx [esi+14h] +
test edx edx +
jz loc_42DEB0  +
mov eax esi +
add edi 4 +
call sub_42D520  +
cmp ebx edi +
ja loc_42DC6F  +
mov edi [esp+44h+var_18] +
mov eax [edi+14h] +
and eax 2100000h +
cmp eax 2000000h +
jnz loc_42DD20  +
mov edx [ebp+24h] +
test edx edx +
jz loc_42DEA2  +
mov eax [esp+44h+var_20] +
test byte ptr [eax+2Bh] 10h +
jz loc_42DE10  +
mov ebx [edi+6Ch] +
test ebx ebx +
jz loc_42DF80  +
mov eax [ebp+38h] +
xor esi esi +
test eax eax +
jnz loc_42DF47  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_423820  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_30] edx +
imul esi eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_44] eax +
call sub_41EE20  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_42DDE5  +
mov esi [ebp+24h] +
mov eax [ebp+28h] +
cmp esi eax +
cmovb esi eax +
mov [esp+44h+var_44] esi +
call sub_42B400  +
test esi esi +
mov ebx eax +
jz loc_42DD41  +
test eax eax +
jz loc_42DE48  +
mov eax [esp+44h+var_1C] +
mov ecx [esp+44h+var_24] +
mov eax [eax+78h] +
mov [esp+44h+var_30] eax +
movzx eax byte ptr [ecx] +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_40] ecx +
and eax 3 +
cmp al 2 +
setz al  +
movzx eax al +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+arg_0] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4213F0  +
test eax eax +
mov esi eax +
jz loc_42DEF6  +
mov eax [esp+44h+var_20] +
mov ecx [ebp+38h] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_24] ecx +
call sub_423820  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] esi +
imul eax [esp+44h+var_24] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_41EE20  +
test eax eax +
jz loc_42DEF6  +
test ebx ebx +
jz loc_42DDE0  +
mov [esp+44h+var_44] ebx +
call free  +
nop   +
lea esi [esi+0] +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_40] 0A2Bh +
mov [esp+44h+var_44] offset a____Binutil_15 +
call sub_420BA0  +
jmp loc_42DB9B  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] offset unk_4AD05F +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_41EE20  +
test eax eax +
jnz loc_42DCBF  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4Ch] +
test esi esi +
jz loc_42DC22  +
mov ebx [edi+48h] +
test ebx ebx +
jnz loc_42DC22  +
mov eax [esp+44h+var_20] +
mov eax [eax+4] +
mov edx [eax] +
mov eax [esp+44h+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
mov [esp+44h+var_3C] edx +
mov [esp+44h+var_44] offset aAttemptToDoRel +
mov [esp+44h+var_40] eax +
call off_492AE8  +
mov [esp+44h+var_44] 3 +
call sub_420C50  +
xor eax eax +
jmp loc_42DDE5  +
xor esi esi +
jmp loc_42DD23  +
cmp dword ptr [esi+10h] offset off_4928E8 +
jz loc_42DF10  +
mov eax [esp+44h+var_24] +
mov edx [esi+4] +
mov eax [eax+1Ch] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_44] eax +
call sub_42D940  +
mov edx eax +
test edx edx +
jz loc_42DC68  +
jmp loc_42DC85  +
test ebx ebx +
jz loc_42DE48  +
mov [esp+44h+var_44] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_42D990  +
mov edx eax +
jmp loc_42DEE9  +
mov [esp+44h+var_40] 0A87h +
mov [esp+44h+var_44] offset a____Binutil_15 +
call sub_420BA0  +
mov esi [ebp+38h] +
jmp loc_42DCD7  +
call sub_42D790  +
test eax eax +
jz loc_42DE48  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
jmp loc_42DC39  +
mov [esp+44h+var_40] 0A86h +
mov [esp+44h+var_44] offset a____Binutil_15 +
call sub_420BA0  +
jmp loc_42DCCA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_0] +
mov ebx [ebp+4] +
mov ecx [ecx+4] +
movzx eax byte ptr [ebx] +
cmp al [ecx+18h] +
jz loc_42DFE0  +
cmp al [edx+8] +
jz loc_42DFE0  +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_42DFF3  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_42DFD6  +
mov eax [edx+28h] +
lea esi [ebx+7] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] edx +
call sub_42A4E0  +
test eax eax +
jz loc_42DFD6  +
mov eax [ebp+4] +
mov edx [esp+2Ch+var_10] +
cmp ebx eax +
jz loc_42E075  +
movzx eax byte ptr [eax] +
movzx esi byte ptr [ebx+6] +
mov [ebx+6] al +
mov eax [edx+1Ch] +
lea edx [ebx+6] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_42D940  +
mov ebp eax +
mov eax esi +
test al al +
jz loc_42DFD6  +
mov [ebx+6] al +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+1Ch] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_42D940  +
mov ebp eax +
jmp loc_42DFD6  +
***
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
mov edx [esi+10h] +
test edx edx +
jz loc_42E168  +
mov [esp+14h+var_10] 2A3h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [ebx+20h] +
test eax eax +
jz loc_42E172  +
mov [eax+10h] esi +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_42E182  +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+1Ch] esi +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+arg_0] +
lea esi [ebx+1Ch] +
mov edx esi +
nop   +
lea esi [esi+0] +
mov eax [edx] +
test eax eax +
jz loc_42E1C7  +
test byte ptr [eax+0Ch] 0FDh +
jnz loc_42E1D0  +
mov ecx [eax+10h] +
mov [edx] ecx +
mov dword ptr [eax+10h] 0 +
cmp eax [ebx+20h] +
jnz loc_42E1A0  +
cmp edx esi +
jz loc_42E1D5  +
sub edx 10h +
mov [ebx+20h] edx +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+10h] +
jmp loc_42E1A0  +
mov dword ptr [ebx+20h] 0 +
jmp loc_42E1C7  +
***
mov [esp+18h+var_18] 2Ch +
call sub_42B400  +
test eax eax +
jz loc_42E221  +
mov ebx eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_C] 24h +
mov [esp+18h+var_10] offset sub_42D860 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_42D8C0  +
test eax eax +
jz loc_42E225  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_42E21A  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_42E21A  +
***
jmp sub_42E240  +
***
mov eax [esp+arg_0] +
mov edx [eax+78h] +
test edx edx +
jz loc_42E251  +
mov eax 1 +
retn   +
jmp sub_42D790  +
***
mov eax [esp+4] +
movzx edx word ptr [eax+18h] +
mov dword ptr [eax+3Ch] offset off_492990 +
and dx 0FC7Fh +
or dh 2 +
mov [eax+18h] dx +
mov edx [eax+1Ch] +
mov [eax+38h] edx +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+3Ch+arg_10] +
mov ebp [esp+3Ch+arg_0] +
test edx edx +
jz loc_42EEF4  +
cmp [esp+3Ch+arg_10] offset off_492A38 +
jz loc_42E650  +
test [esp+3Ch+arg_C] 2000h +
jnz loc_42E650  +
test [esp+3Ch+arg_C] 1000h +
jnz loc_42EDB0  +
test [esp+3Ch+arg_C] 800h +
jnz loc_42EDE0  +
cmp [esp+3Ch+arg_10] offset off_4928E8 +
jz loc_42EF6A  +
test byte ptr [esp+3Ch+arg_C] 80h +
jnz loc_42EF0D  +
mov eax [esp+3Ch+arg_10] +
test byte ptr [eax+15h] 10h +
jz loc_42EF20  +
mov esi [esp+3Ch+arg_8] +
mov edi offset a__gnu_lto_sl_0 +
mov ecx 0Fh +
cmps   +
mov esi 4 +
setnbe dl  +
setb al  +
xor edi edi +
cmp dl al +
jnz loc_42E68F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov [esp+3Ch+var_3C] offset aSPluginNeede_0 +
mov [esp+3Ch+var_38] eax +
call off_492AE8  +
jmp loc_42E68F  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_42D990  +
test eax eax +
mov edi eax +
jz loc_42E880  +
mov esi 5 +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_42ED50  +
mov eax [esp+3Ch+arg_24] +
mov ebx [eax] +
test ebx ebx +
jz loc_42ED50  +
cmp byte ptr [ebp+0] 0 +
js loc_42E6DA  +
mov eax [ebp+24h] +
test eax eax +
jz loc_42E715  +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_42A4E0  +
test eax eax +
jz loc_42E715  +
mov eax [ebp+18h] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+28h] +
mov [esp+3Ch+var_24] ecx +
mov ecx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] ecx +
call eax  +
test eax eax +
jz loc_42E880  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_42E723  +
mov eax [esp+3Ch+arg_24] +
mov [eax] ebx +
movzx edx byte ptr [ebx+0Ch] +
movzx eax dl +
lea eax [eax+esi*8] +
mov eax ds:dword_4AD360[eax*4] +
cmp eax 14h +
ja loc_42E990  +
jmp ds:off_4AD0E4[eax*4]  +
cmp dl 5 +
jz loc_42E75D  +
mov [esp+3Ch+var_38] 609h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 3 +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_42E880  +
movzx edx byte ptr [ebx+0Ch] +
mov byte ptr [ebx+0Ch] 3 +
mov eax [esp+3Ch+arg_10] +
mov [ebx+14h] eax +
mov eax [esp+3Ch+arg_14] +
and byte ptr [ebx+0Dh] 0FDh +
mov [ebx+18h] eax +
mov eax [esp+3Ch+arg_20] +
test eax eax +
jz loc_42E990  +
mov eax [esp+3Ch+arg_8] +
cmp byte ptr [eax] 5Fh +
jnz loc_42E990  +
add eax 1 +
mov esi eax +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_8] +
movzx ecx byte ptr [eax+1] +
cmp cl 5Fh +
jnz loc_42E7E6  +
mov eax esi +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 5Fh +
jz loc_42E7D7  +
mov [esp+3Ch+var_20] eax +
cmp cl 47h +
jnz loc_42E990  +
mov esi [esp+3Ch+var_20] +
mov ecx 7 +
mov edi offset aGlobal_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_42E990  +
mov eax [esp+3Ch+var_20] +
cmp byte ptr [eax+8] 49h +
setz cl  +
cmp byte ptr [eax+8] 44h +
jnz loc_42EF2C  +
mov edi [esp+3Ch+var_20] +
movzx eax byte ptr [edi+9] +
cmp [edi+7] al +
jnz loc_42E990  +
cmp dl 4 +
jz loc_42EF7B  +
mov eax [ebp+18h] +
movzx esi cl +
mov edi [esp+3Ch+arg_14] +
mov edx [ebx+4] +
mov eax [eax+10h] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] edi +
call eax  +
test eax eax +
jnz loc_42E990  +
lea esi [esi+0] +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+10h] +
test eax eax +
jnz loc_42E8A2  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_42E8A2  +
mov [ebx+10h] ebx +
mov ebx [ebx+14h] +
jmp loc_42E723  +
cmp dl 5 +
jz loc_42E8C9  +
mov [esp+3Ch+var_38] 6C9h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [ebp+18h] +
mov esi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 6 +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_42E880  +
movzx eax byte ptr [edi+0Ch] +
cmp al 6 +
jz loc_42EE98  +
test al al +
jnz loc_42E91E  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [edi+0Ch] 1 +
mov [edi+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call sub_42E140  +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_42ED40  +
mov byte ptr [ebx+0Ch] 6 +
mov edx 6 +
xor esi esi +
mov [ebx+14h] edi +
jmp loc_42E727  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_38] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jz loc_42E990  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+3Ch+var_30] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_34] edi +
call eax  +
test eax eax +
jz loc_42E880  +
lea esi [esi+0] +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov ecx [ebx+4] +
mov edx [eax+4] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
call edx  +
test eax eax +
mov esi eax +
jz loc_42E880  +
mov eax [ebx] +
mov edx [esp+3Ch+arg_1C] +
mov [esi] eax +
mov eax [ebx+4] +
test edx edx +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+0Ch] +
mov [esi+0Ch] eax +
mov eax [ebx+10h] +
mov [esi+10h] eax +
mov eax [ebx+14h] +
mov [esi+14h] eax +
mov eax [ebx+18h] +
mov byte ptr [esi+0Ch] 7 +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov eax [esp+3Ch+arg_18] +
jz loc_42EF40  +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [eax+1] +
mov [esp+3Ch+var_38] edx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_20] edx +
mov [esp+3Ch+var_3C] eax +
call sub_42A750  +
test eax eax +
mov edi eax +
jz loc_42E880  +
mov edx [esp+3Ch+var_20] +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov [esi+18h] edi +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_38] ebx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_42A6F0  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_42E990  +
mov eax [esp+3Ch+arg_24] +
mov [eax] esi +
jmp loc_42E990  +
test byte ptr [ebp+1] 1 +
mov eax ebx +
jz loc_42EDC0  +
test byte ptr [ebx+0Dh] 1 +
jz loc_42E9A0  +
mov ecx [ebp+18h] +
cmp dl 7 +
mov ecx [ecx+14h] +
jnz loc_42EA9D  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
cmp dl 7 +
jz loc_42EA91  +
cmp dl 5 +
ja loc_42EF19  +
jmp ds:off_4AD138[edx*4]  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_30] 5 +
jmp loc_42E970  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_42E990  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_42E990  +
mov [ebx+10h] ebx +
jmp loc_42E990  +
test dl dl +
jz loc_42EEE0  +
mov byte ptr [ebx+0Ch] 5 +
mov [esp+3Ch+var_38] 8 +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_42A750  +
test eax eax +
mov [ebx+14h] eax +
jz loc_42E880  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call sub_42BE10  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_492840 +
mov [esi] edx +
jz loc_42EF48  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_42EDF0  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_41E9E0  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
and byte ptr [ebx+0Dh] 0FDh +
jmp loc_42E990  +
cmp eax 4 +
jnz loc_42E790  +
mov byte ptr [ebx+0Ch] 4 +
jmp loc_42E794  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 2 +
mov [ebx+14h] eax +
jmp loc_42E990  +
mov [esp+3Ch+var_34] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 5F3h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BD0  +
nop   +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_42E140  +
jmp loc_42E990  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+0Ch] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+3Ch+var_34] 225h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] edi +
call eax  +
test eax eax +
jnz loc_42E990  +
jmp loc_42E880  +
mov eax [ebx+18h] +
test eax eax +
jz loc_42E8A2  +
mov ecx [esp+3Ch+arg_4] +
test byte ptr [ecx+2Ah] 20h +
jnz loc_42E8A2  +
mov ecx [ebx+4] +
mov edx [ebp+18h] +
mov [esp+3Ch+var_20] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [edx+14h] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] ecx +
mov ecx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_34] ecx +
call edx  +
test eax eax +
jz loc_42E880  +
mov dword ptr [ebx+18h] 0 +
jmp loc_42E8A2  +
cmp dl 5 +
jz loc_42EC9C  +
mov [esp+3Ch+var_38] 68Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_30] 5 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_34] edi +
call eax  +
test eax eax +
jz loc_42E880  +
mov eax [ebx+18h] +
cmp [esp+3Ch+arg_14] eax +
jbe loc_42E990  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call sub_42BE10  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_492840 +
mov [esi] edx +
jz loc_42EF59  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_42EE00  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_41E9E0  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
jmp loc_42E990  +
mov byte ptr [ebx+0Ch] 6 +
mov [ebx+14h] edi +
jmp loc_42E990  +
cmp esi 1 +
jbe loc_42EE10  +
mov ecx [esp+3Ch+arg_1C] +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_30] ecx +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_42D940  +
mov ebx eax +
test ebx ebx +
jnz loc_42E6A9  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_42E880  +
mov eax [esp+3Ch+arg_24] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_42E882  +
xor edi edi +
mov esi 6 +
jmp loc_42E68F  +
mov ecx [ebx+10h] +
test ecx ecx +
jnz loc_42EA86  +
mov ecx [ebp+1Ch] +
cmp [ecx+20h] ebx +
jnz loc_42EA7C  +
jmp loc_42EA86  +
xor edi edi +
mov esi 7 +
jmp loc_42E68F  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_42EB78  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_42E990  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_42D990  +
mov ebx eax +
jmp loc_42ED86  +
mov edx [ebx+14h] +
mov edx [edx+4] +
mov edx [edx+94h] +
mov eax [eax+4] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_38] eax +
call ecx  +
test eax eax +
jnz loc_42E990  +
jmp loc_42E880  +
mov edx [ebx+14h] +
mov edx [edx+94h] +
jmp loc_42EE53  +
mov edx [ebx+14h] +
jmp loc_42EE53  +
cmp [edi+14h] ebx +
jnz loc_42E91E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] offset aBIndirectSymbo +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call off_492AE8  +
mov [esp+3Ch+var_3C] 5 +
call sub_420C50  +
xor eax eax +
jmp loc_42E882  +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_42E140  +
jmp loc_42EAF8  +
mov [esp+3Ch+var_38] 5A8h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BA0  +
jmp loc_42E5C5  +
xor edi edi +
mov esi 3 +
jmp loc_42E68F  +
xor edx edx +
jmp loc_42EE53  +
xor edi edi +
mov esi 2 +
jmp loc_42E68F  +
test cl cl +
jnz loc_42E826  +
jmp loc_42E990  +
mov [esi+18h] eax +
jmp loc_42EA46  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_42EB63  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_42ED21  +
mov esi [esp+3Ch+arg_C] +
xor edi edi +
shr esi 7 +
and esi 1 +
jmp loc_42E68F  +
mov [esp+3Ch+var_34] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 643h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BD0  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [eax+78h] +
mov [esp+0A8h+var_74] eax +
mov [esp+0A8h+var_6C] ecx +
test esi esi +
jz loc_42F150  +
mov eax [esp+0A8h+var_74] +
mov eax [eax+7Ch] +
lea eax [esi+eax*4] +
cmp eax esi +
mov [esp+0A8h+var_78] eax +
jbe loc_42F0CD  +
mov [esp+0A8h+var_70] ebp +
jmp loc_42F003  +
cmp edx offset off_4928E8 +
jz loc_42F18A  +
test byte ptr [edx+15h] 10h +
jnz loc_42F012  +
cmp edx offset off_492A38 +
jz loc_42F0FB  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
jbe loc_42F0CD  +
mov ebx [esi] +
mov eax [ebx+0Ch] +
mov edx [ebx+10h] +
test eax 3882h +
jz loc_42EFD8  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_42F102  +
cmp edx offset off_492A38 +
jz loc_42F102  +
test ah 10h +
mov edi [esp+0A8h+var_7C] +
jz loc_42F050  +
lea edi [esi+4] +
mov ecx edi +
mov edi [esp+0A8h+var_7C] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_42F050  +
mov esi [esi+4] +
mov edi [esi+4] +
mov esi ecx +
nop   +
lea ecx [esp+0A8h+var_5C] +
mov ebp [ebx+8] +
mov [esp+0A8h+var_84] ecx +
mov ecx [esp+0A8h+var_6C] +
mov [esp+0Ch] eax +
mov eax [esp+0A8h+var_74] +
mov [esp+0A8h+var_8C] 0 +
mov [esp+0A8h+var_94] ebp +
mov [esp+0A8h+var_88] ecx +
mov ecx [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] eax +
mov eax [esp+0A8h+var_70] +
mov [esp+0A8h+var_98] edx +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_90] ecx +
mov [esp+0] eax +
mov [esp+0A8h+var_5C] 0 +
call sub_42E5A0  +
test eax eax +
jz loc_42F0D2  +
mov edx [ebx+0Ch] +
mov eax [esp+0A8h+var_5C] +
test dh 8 +
jz loc_42F0E0  +
test eax eax +
jz loc_42F0B9  +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_42F0E0  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
mov dword ptr [ebx+14h] 0 +
ja loc_42F003  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0A8h+var_70] +
mov ecx [edi+30h] +
mov edi [esp+0A8h+var_74] +
mov edi [edi+4] +
cmp [ecx+4] edi +
jz loc_42F124  +
mov [ebx+14h] eax +
jmp loc_42EFF6  +
mov edi [ebx+4] +
mov [esp+0A8h+var_7C] edi +
lea ecx [esi+4] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_42F02E  +
mov esi [esi+4] +
mov edi [esp+0A8h+var_7C] +
mov esi [esi+4] +
mov [esp+0A8h+var_7C] esi +
mov esi ecx +
jmp loc_42F050  +
mov edi [eax+20h] +
mov ecx [ebx+10h] +
test edi edi +
jz loc_42F170  +
cmp ecx offset off_4928E8 +
jz loc_42F0F3  +
test byte ptr [ecx+15h] 10h +
jnz loc_42F141  +
mov [eax+20h] ebx +
jmp loc_42F0F3  +
cmp dword ptr [edi+10h] offset off_4928E8 +
jnz loc_42F0F3  +
mov [eax+20h] ebx +
jmp loc_42F17F  +
call sub_42D790  +
test eax eax +
jz loc_42F0D2  +
mov eax [esp+0A8h+var_74] +
mov esi [eax+78h] +
jmp loc_42EFBC  +
mov ecx [ecx+14h] +
mov [eax+20h] ebx +
and ch 10h +
jz loc_42F0F3  +
or dh 2 +
mov [ebx+0Ch] edx +
jmp loc_42F0F3  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_42F102  +
jmp loc_42F02E  +
***
movzx ebx byte ptr [eax+28h] +
and ebx 7 +
cmp ebx 1 +
jz loc_42F1F0  +
cmp ebx 2 +
jz loc_42F1C8  +
mov [esp+18h+var_18] 3 +
call sub_420C50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ecx ecx +
mov ebx offset loc_42F430 +
mov ecx offset loc_42F410 +
cmovz ebx ecx +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_42E2A0  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
pop ebx  +
jmp loc_42EFA0  +
***
mov edx [esp+arg_4] +
xor ecx ecx +
mov eax [esp+arg_0] +
jmp sub_42F1A0  +
***
mov edx [esp+8] +
mov ecx 1 +
mov eax [esp+4] +
jmp sub_42F1A0  +
***
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+2Ch] eax +
mov eax ebx +
mov ebx [ebx+78h] +
mov [esp+28h] ecx +
mov dword ptr [ecx] 0 +
test ebx ebx +
jz loc_42F38D  +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
mov edi eax +
ja loc_42F270  +
jmp loc_42F380  +
mov eax [esi+8] +
add eax [ecx+1Ch] +
cmp eax [edx+18h] +
jbe loc_42F265  +
mov [edx+18h] eax +
add ebx 4 +
cmp edi ebx +
jbe loc_42F380  +
mov esi [ebx] +
mov eax [esi+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_42F284  +
test dword ptr [esi+0Ch] 2082h +
jz loc_42F265  +
mov edx [esi+4] +
mov eax [ebp+1Ch] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_42D940  +
test eax eax +
mov edx eax +
jz loc_42F265  +
movzx eax byte ptr [eax+0Ch] +
mov ecx eax +
and ecx 0FFFFFFFBh +
cmp cl 1 +
jnz loc_42F265  +
mov ecx [esi+10h] +
test byte ptr [ecx+15h] 10h +
jz loc_42F3A0  +
cmp al 1 +
jnz loc_42F257  +
mov ecx [edx+14h] +
test ecx ecx +
jz loc_42F3A0  +
mov byte ptr [edx+0Ch] 5 +
mov dword ptr [esp+4] 8 +
mov eax [ebp+1Ch] +
mov [esp+20h] edx +
mov [esp+24h] ecx +
mov [esp] eax +
call sub_42A750  +
mov edx [esp+20h] +
test eax eax +
mov [edx+14h] eax +
jz loc_42F396  +
mov ecx [esi+10h] +
mov eax [esi+8] +
add eax [ecx+1Ch] +
mov [edx+18h] eax +
mov [esp] eax +
call sub_42BE10  +
mov edx [esp+20h] +
mov ecx [edx+14h] +
cmp eax 4 +
mov [esp+20h] ecx +
mov ecx 4 +
cmova eax ecx +
mov ecx [esp+20h] +
mov [ecx] eax +
mov eax [esi+10h] +
mov ecx [esp+24h] +
mov [esp+24h] edx +
cmp eax offset off_492840 +
jz loc_42F3E0  +
mov eax [eax] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_41E9E0  +
mov esi [esp+20h] +
mov edx [esp+24h] +
mov [esi+4] eax +
mov eax [edx+14h] +
add ebx 4 +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
cmp edi ebx +
ja loc_42F270  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
call sub_42D790  +
test eax eax +
jnz loc_42F400  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+28h] +
lea ecx [esp+2Ch] +
mov edx [esi+4] +
mov dword ptr [eax] 1 +
mov eax [ebp+18h] +
mov eax [eax] +
mov [esp+8] edx +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
test eax eax +
jz loc_42F396  +
mov ecx [esp+50h] +
mov edx ebp +
mov eax [esp+2Ch] +
call loc_42EFA0  +
jmp loc_42F385  +
***
mov dword ptr [esp+4] offset aCommon +
mov [esp] ecx +
call sub_41E9E0  +
mov edx [esp+20h] +
mov [edx+4] eax +
mov edx [esp+24h] +
jmp loc_42F36B  +
***
mov eax [esp+2Ch] +
mov ebx [eax+78h] +
jmp loc_42F246  +
***
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp loc_42F220  +
***
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 1 +
jmp loc_42F220  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_8] +
mov eax [eax+78h] +
test eax eax +
jz loc_42F870  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_42F480  +
mov edi [esp+3Ch+arg_4] +
mov ebx [edi+64h] +
test ebx ebx +
jnz loc_42F5B0  +
mov eax [esp+3Ch+arg_4] +
mov edi [eax+78h] +
mov eax [eax+7Ch] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+3Ch+var_1C] eax +
jnb loc_42F860  +
mov eax [esp+3Ch+arg_0] +
add eax 7Ch +
mov [esp+3Ch+var_18] eax +
mov eax [esp+3Ch+arg_0] +
add eax 78h +
mov [esp+3Ch+var_14] eax +
jmp loc_42F562  +
***
movzx eax byte ptr [ebp+1] +
and eax 18h +
cmp al 18h +
jz loc_42F506  +
cmp al 10h +
jz loc_42F7D8  +
mov edx [ebx+0Ch] +
test dl 82h +
jz loc_42F6B0  +
mov eax [esp+arg_50] +
cmp [ebx] eax +
jz loc_42F850  +
mov eax [ebx+10h] +
xor ecx ecx +
cmp eax offset off_492990 +
jz loc_42F52A  +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_42F7B5  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_42F555  +
test ecx ecx +
jz loc_42F555  +
mov ecx [esp+arg_58] +
mov edx [esp+arg_20] +
mov eax [esp+arg_24] +
mov [esp+0] ebx +
call sub_42D620  +
test eax eax +
jz loc_42F609  +
test esi esi +
jz loc_42F555  +
mov dword ptr [esi+1Ch] 1 +
add edi 4 +
cmp [esp+arg_1C] edi +
jbe loc_42F860  +
mov ebx [edi] +
mov eax [ebx+0Ch] +
test eax 3882h +
jz loc_42F4B4  +
mov esi [ebx+14h] +
test esi esi +
jz loc_42F766  +
mov ecx [esp+arg_50] +
mov eax [ebp+30h] +
mov ecx [ecx+4] +
cmp [eax+4] ecx +
jz loc_42F7C4  +
cmp byte ptr [esi+0Ch] 6 +
ja sub_42F690  +
movzx eax byte ptr [esi+0Ch] +
jmp ds:off_4AD150[eax*4]  +
***
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_42F480  +
cmp eax [ebx+3Ch] +
jnz loc_42F5A5  +
mov eax [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+10Ch] +
mov [esp+3Ch+var_3C] edi +
call eax  +
test eax eax +
mov ecx eax +
jz loc_42F609  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 4001h +
mov [ecx+10h] ebx +
mov [ecx+4] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] ecx +
mov ecx [esp+3Ch+arg_C] +
lea edx [eax+7Ch] +
add eax 78h +
call sub_42D620  +
test eax eax +
jnz loc_42F480  +
***
mov eax [ebx+0Ch] +
or dword ptr [ebx+0Ch] 80h +
mov eax [esi+18h] +
or dword ptr [ebx+0Ch] 2 +
mov [ebx+8] eax +
mov eax [ebx+10h] +
test byte ptr [eax+15h] 10h +
jnz sub_42F4DB  +
cmp eax offset off_4928E8 +
jz loc_42F673  +
mov [esp+arg_0] 86Ah +
mov dword ptr [esp+0] offset a____Binutil_15 +
call sub_420BA0  +
mov dword ptr [ebx+10h] offset off_492840 +
jmp sub_42F4DB  +
***
mov eax [ebx+0Ch] +
and ah 0F7h +
or al 80h +
jmp loc_42F621  +
***
mov [esp-4Ch+arg_50] offset a_bfd_generic_0 +
mov [esp-4Ch+arg_4C] 850h +
mov [esp-4Ch+arg_48] offset a____Binutil_15 +
call sub_420BD0  +
lea esi [esi+0] +
mov eax [ebx+10h] +
cmp eax offset off_492A38 +
jz loc_42F830  +
test dl 4 +
jz loc_42F6D1  +
xor ecx ecx +
test byte ptr [ebp+1] 18h +
setz cl  +
jmp loc_42F50B  +
cmp eax offset off_4928E8 +
jz loc_42F830  +
mov ecx [eax+14h] +
mov [esp-4Ch+arg_74] ecx +
and ch 10h +
jnz loc_42F826  +
test dl 1 +
jz loc_42F837  +
xor ecx ecx +
and dh 10h +
jnz loc_42F50B  +
movzx edx byte ptr [ebp+1] +
mov cl 1 +
shr dl 5 +
and edx 3 +
cmp edx 1 +
jz loc_42F50B  +
cmp edx 2 +
jz loc_42F747  +
xor cl cl +
test edx edx +
jnz loc_42F50B  +
movzx edx byte ptr [ebp+0] +
mov ecx 1 +
and edx 3 +
cmp dl 2 +
jz loc_42F50B  +
test [esp-4Ch+arg_74] 800000h +
jz loc_42F50B  +
mov eax [esp-4Ch+arg_9C] +
mov [esp-4Ch+arg_4C] ebx +
mov [esp-4Ch+arg_48] eax +
call sub_4238C0  +
xor ecx ecx +
test eax eax +
mov eax [ebx+10h] +
setz cl  +
jmp loc_42F50B  +
test ah 8 +
jnz sub_42F4DB  +
cmp dword ptr [ebx+10h] offset off_4928E8 +
mov eax [ebx+4] +
jz loc_42F886  +
mov [esp+arg_C] 1 +
mov [esp+arg_8] 0 +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov eax [ebp+1Ch] +
mov [esp+0] eax +
call sub_42D940  +
mov esi eax +
test esi esi +
jz sub_42F4DB  +
jmp loc_42F57D  +
mov edx [esp+arg_4C] +
cmp eax [edx+68h] +
setnz al  +
jmp loc_42F526  +
mov eax [esi+20h] +
test eax eax +
jz loc_42F590  +
mov [edi] eax +
mov ebx eax +
jmp loc_42F590  +
mov edx [ebx+4] +
mov eax [ebp+20h] +
mov [esp+arg_8] 0 +
mov [esp+arg_4] 0 +
mov [esp+arg_0] edx +
mov [esp+0] eax +
call sub_42A4E0  +
test eax eax +
jnz loc_42F4EE  +
jmp loc_42F506  +
test edx edx +
lea esi [esi+0] +
jnz loc_42F8B9  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_42F8B9  +
xor ecx ecx +
jmp loc_42F50B  +
***
xor ecx ecx +
jmp loc_42F512  +
test dh 8 +
jz loc_42F807  +
movzx edx byte ptr [ebp+1] +
xor ecx ecx +
and edx 18h +
cmp dl 18h +
setnz cl  +
jmp loc_42F50B  +
mov ecx edx +
mov eax [ebx+10h] +
shr ecx 0Ah +
and ecx 1 +
jmp loc_42F50B  +
mov eax 1 +
jmp loc_42F60B  +
***
mov eax [esp+3Ch+arg_4] +
call sub_42D790  +
test eax eax +
jz loc_42F609  +
jmp loc_42F46A  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov esi [esp+3Ch+arg_8] +
mov ebx [esp+3Ch+arg_C] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jnz loc_42FBB4  +
mov edi [esi+48h] +
test edi edi +
jz loc_42FB98  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] 10h +
mov [esp+3Ch+var_3C] eax +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_42F9DC  +
mov eax [ebx+8] +
mov [edi+4] eax +
mov eax [ebx+10h] +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_42CF60  +
test eax eax +
mov [edi+0Ch] eax +
jz loc_42FAA0  +
cmp dword ptr [ebx+4] 3 +
jz loc_42F9E6  +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov [esp+3Ch+var_28] 1 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_42D990  +
test eax eax +
jz loc_42F99F  +
mov ecx [eax+1Ch] +
test ecx ecx +
jnz loc_42FA20  +
mov eax [esp+3Ch+arg_4] +
mov edx [ebx+10h] +
mov ecx [esp+3Ch+arg_4] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jnz loc_42FAA0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+10h] +
mov edx [eax+24h] +
mov ebp [ebp+4] +
test edx edx +
mov ebp [ebp+9Ch] +
mov [edi] ebp +
jnz loc_42FA2F  +
mov eax [ebx+10h] +
mov eax [eax+8] +
mov [edi+8] eax +
mov eax [esi+4Ch] +
mov ecx [esi+48h] +
mov [ecx+eax*4] edi +
add eax 1 +
mov [esi+4Ch] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 20h +
mov [edi] eax +
mov eax [edi+0Ch] +
mov edx [eax+24h] +
test edx edx +
jz loc_42F9FB  +
mov [esp+3Ch+var_3C] eax +
call sub_42C0C0  +
mov [esp+3Ch+var_3C] eax +
mov ebp eax +
call sub_42B590  +
test ebp ebp +
mov edx eax +
jz loc_42FA4B  +
test eax eax +
jz loc_42F9DC  +
mov eax [ebx+10h] +
mov ecx [edi+0Ch] +
mov [esp+3Ch+var_18] edx +
mov eax [eax+8] +
mov [esp+3Ch+var_30] edx +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] eax +
call sub_42CA20  +
mov edx [esp+3Ch+var_18] +
test eax eax +
jz loc_42FAB1  +
cmp eax 1 +
jz loc_42FB11  +
mov [esp+3Ch+var_34] offset a_bfd_generic_r +
mov [esp+3Ch+var_38] 990h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BD0  +
lea esi [esi+0] +
mov [esp+3Ch+var_3C] 11h +
call sub_420C50  +
jmp loc_42F9DC  +
mov eax [esp+3Ch+arg_0] +
mov ebx [ebx+8] +
mov [esp+3Ch+var_18] edx +
mov [esp+3Ch+var_3C] eax +
call sub_423820  +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_34] edx +
imul eax ebx +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41EE20  +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] edx +
mov ebx eax +
call free  +
test ebx ebx +
jz loc_42F9DC  +
mov dword ptr [edi+8] 0 +
jmp loc_42FA04  +
mov eax [esp+3Ch+arg_4] +
cmp dword ptr [ebx+4] 3 +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+3Ch+var_18] eax +
mov eax [ebx+10h] +
mov ecx [eax+8] +
mov [esp+3Ch+var_14] ecx +
mov ecx [edi+0Ch] +
mov eax [eax+4] +
mov ecx [ecx+20h] +
jz loc_42FB94  +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] edx +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_3C] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_38] 0 +
call eax  +
mov edx [esp+2Ch] +
test eax eax +
jnz loc_42FAB1  +
mov [esp+0] edx +
call free  +
xor eax eax +
jmp loc_42F9DE  +
mov eax [eax] +
jmp loc_42FB38  +
mov [esp+3Ch+var_34] offset a_bfd_generic_r +
mov [esp+3Ch+var_38] 952h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BD0  +
mov [esp+3Ch+var_34] offset a_bfd_generic_r +
mov [esp+3Ch+var_38] 950h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BD0  +
push ebx  +
sub esp 18h +
mov eax [esp+58h+var_38] +
mov [esp+58h+var_54] 18h +
mov ebx [esp+58h+var_34] +
mov [esp+58h+var_58] eax +
call sub_425930  +
test eax eax +
jz loc_42FC18  +
mov dword ptr [eax+4] 0 +
mov edx [ebx+0A4h] +
test edx edx +
jz loc_42FC10  +
mov [edx] eax +
mov [ebx+0A4h] eax +
add esp 18h +
pop ebx  +
retn   +
***
mov [ebx+0A0h] eax +
jmp loc_42FC03  +
xor eax eax +
jmp loc_42FC09  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_C] +
mov esi [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
cmp eax 1 +
jz loc_42FCF0  +
cmp eax 2 +
jnz loc_42FCD3  +
test byte ptr [edi+15h] 1 +
jz loc_42FD58  +
mov edx [ebx+0Ch] +
mov eax 1 +
test edx edx +
jz loc_42FCCB  +
mov ebp [ebx+10h] +
mov eax [ebx+14h] +
test ebp ebp +
mov [esp+3Ch+var_1C] eax +
jz loc_42FD10  +
cmp edx ebp +
ja loc_42FD71  +
mov ebp [ebx+8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_18] edx +
call sub_423820  +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_28] edx +
imul eax ebp +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] ebp +
call sub_41EE20  +
cmp ebp [ebx+14h] +
jz loc_42FCCB  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_1C] eax +
call free  +
mov eax [esp+3Ch+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_default_l +
mov [esp+3Ch+var_38] 9D5h +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BD0  +
nop   +
mov [esp+3Ch+arg_0] ebx +
mov ecx edi +
mov eax esi +
mov [esp+3Ch+arg_4] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_42DB80  +
mov eax [esi+84h] +
mov [esp+3Ch+var_18] edx +
mov ecx [eax+2Ch] +
mov eax [edi+14h] +
shr eax 4 +
and eax 1 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+4] +
mov eax [eax+8] +
mov [esp+3Ch+var_3C] edx +
test eax eax +
setz al  +
movzx eax al +
mov [esp+3Ch+var_38] eax +
call ecx  +
mov edx [esp+3Ch+var_18] +
test eax eax +
mov [esp+3Ch+var_1C] eax +
jnz loc_42FC7C  +
xor eax eax +
jmp loc_42FCCB  +
mov [esp+3Ch+var_38] 9ECh +
mov [esp+3Ch+var_3C] offset a____Binutil_15 +
call sub_420BA0  +
jmp loc_42FC56  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_18] edx +
call sub_42B400  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
jz loc_42FD51  +
mov edx [esp+3Ch+var_18] +
mov eax edx +
sub eax ebp +
cmp ebp 1 +
mov [esp+3Ch+var_18] eax +
jz loc_42FE06  +
mov [esp+3Ch+var_14] esi +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] edi +
mov edi ebx +
mov ebx ecx +
jmp loc_42FDB2  +
mov esi eax +
mov eax [edi+14h] +
mov [esp+3Ch+var_3C] ebx +
add ebx ebp +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax esi +
sub eax ebp +
cmp ebp esi +
jbe loc_42FDB0  +
mov eax esi +
mov ecx ebx +
test eax eax +
mov ebx edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+var_18] esi +
mov esi [esp+3Ch+var_14] +
jnz loc_42FDED  +
mov edx [ebx+0Ch] +
jmp loc_42FC7C  +
mov eax [ebx+14h] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call memcpy  +
jmp loc_42FDE5  +
mov [esp+3Ch+var_34] edx +
mov eax [ebx+14h] +
mov [esp+3Ch+var_18] edx +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
call memset  +
mov edx [esp+3Ch+var_18] +
jmp loc_42FC7C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+50h] +
mov ebp [esp+54h] +
mov dword ptr [esp+20h] 0 +
mov ecx [esi+64h] +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 0 +
test ecx ecx +
jz loc_42FE90  +
lea esi [esi+0] +
mov eax [ecx+0A0h] +
test eax eax +
jnz loc_42FE76  +
jmp loc_42FE89  +
mov eax [eax] +
test eax eax +
jz loc_42FE89  +
cmp dword ptr [eax+4] 1 +
jnz loc_42FE70  +
mov edx [eax+10h] +
mov eax [eax] +
or byte ptr [edx+18h] 2 +
test eax eax +
jnz loc_42FE76  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jnz loc_42FE60  +
mov ebx [ebp+34h] +
lea edi [esp+20h] +
test ebx ebx +
jnz loc_42FEAA  +
jmp loc_42FECC  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_42FECC  +
mov [esp+0Ch] edi +
mov [esp+8] ebp +
mov [esp+4] ebx +
mov [esp] esi +
call sub_42F450  +
test eax eax +
jnz loc_42FEA0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+24h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_42D6A0 +
mov eax [ebp+1Ch] +
mov [esp+24h] ebp +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp] eax +
call sub_42E0B0  +
lea edx [esi+7Ch] +
mov ecx edi +
lea eax [esi+78h] +
mov dword ptr [esp] 0 +
call sub_42D620  +
test eax eax +
jz loc_42FEC2  +
movzx eax byte ptr [ebp+0] +
and eax 3 +
cmp al 2 +
jz loc_42FFAE  +
mov edi [esi+64h] +
test edi edi +
jz loc_42FF8F  +
mov ebx [edi+0A0h] +
test ebx ebx +
jnz loc_42FF5C  +
jmp loc_42FF88  +
mov [esp+0Ch] ebx +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] esi +
jb loc_42FFA0  +
sub eax 3 +
cmp eax 1 +
ja loc_42FFA0  +
call sub_42F8E0  +
test eax eax +
jz loc_42FEC2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42FF88  +
mov eax [ebx+4] +
cmp eax 1 +
jnz loc_42FF30  +
mov dword ptr [esp+4] 1 +
mov ecx edi +
mov edx ebp +
mov [esp] ebx +
mov eax esi +
call sub_42DB80  +
test eax eax +
jz loc_42FEC2  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_42FF5C  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_42FF21  +
mov eax 1 +
jmp loc_42FEC4  +
***
call sub_42FC20  +
test eax eax +
jnz loc_42FF56  +
jmp loc_42FEC2  +
***
mov edi [esi+64h] +
test edi edi +
jz loc_42FF8F  +
mov [esp+50h] esi +
mov [esp+54h] ebp +
mov ebx [edi+0A0h] +
mov dword ptr [edi+4Ch] 0 +
test ebx ebx +
jnz loc_42FFDB  +
jmp loc_430020  +
cmp eax 1 +
jz loc_430034  +
mov ebx [ebx] +
test ebx ebx +
jz loc_42FFF0  +
mov eax [ebx+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_42FFD0  +
mov ebx [ebx] +
add dword ptr [edi+4Ch] 1 +
test ebx ebx +
jnz loc_42FFDB  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_430020  +
shl eax 2 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_425850  +
test eax eax +
mov [edi+48h] eax +
jz loc_42FEC2  +
or dword ptr [edi+14h] 4 +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_42FFBD  +
mov esi [esp+50h] +
mov ebp [esp+54h] +
jmp loc_42FF1A  +
***
mov esi [ebx+10h] +
mov edx [esi+94h] +
mov [esp+4] esi +
mov [esp] edx +
mov [esp+1Ch] edx +
call sub_420CA0  +
test eax eax +
js loc_42FEC2  +
mov [esp] eax +
mov [esp+18h] eax +
call sub_42B400  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
test eax eax +
mov ebp eax +
jz loc_4300C3  +
mov eax [edx+78h] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp+0Ch] eax +
call sub_420CE0  +
mov [esp] ebp +
mov [esp+18h] eax +
call free  +
mov eax [esp+18h] +
test eax eax +
js loc_42FEC2  +
cmp eax [esi+4Ch] +
jz loc_4300BB  +
mov dword ptr [esp+4] 79Bh +
mov dword ptr [esp] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [esp+18h] +
add [edi+4Ch] eax +
jmp loc_42FFD5  +
***
test ecx ecx +
jz loc_43006F  +
jmp loc_42FEC2  +
***
mov ecx [edx+4] +
mov edx [edx] +
sub ecx 3 +
cmp ecx 2 +
adc eax 0 +
test edx edx +
jnz loc_4300E0  +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov dword ptr [esp] offset unk_4C12BC +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] eax +
call sub_42A830  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] offset unk_4C12BC +
mov [esp+1Ch+var_18] eax +
call sub_42A4E0  +
add esp 1Ch +
retn   +
***
mov [esp+18h+var_14] 8 +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] offset unk_4C12BC +
call sub_42A750  +
test eax eax +
jz loc_4301B0  +
mov edx [esp+18h+arg_4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax] edx +
mov [ebx+0Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+0Ch] 2Ah +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset sub_42D490 +
mov dword ptr [esp] offset unk_4C12BC +
call sub_42A1A0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] offset unk_4C12BC +
call sub_42A2B0  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+14h] +
and eax 0C0000h +
cmp eax 40000h +
jz loc_430311  +
jbe loc_4302C0  +
cmp eax 80000h +
jz loc_430275  +
cmp eax 0C0000h +
jnz loc_4302F5  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_430340  +
nop   +
lea esi [esi+0] +
mov [ebx+7Ch] eax +
mov eax 1 +
mov dword ptr [ebx+3Ch] offset off_492990 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jnz loc_430260  +
mov esi [eax+24h] +
cmp [ebx+24h] esi +
jz loc_430260  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBDuplicateSect +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_430260  +
test eax eax +
jnz loc_4302F5  +
mov eax [ebx+94h] +
test byte ptr [eax+2Ch] 10h +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jz loc_430260  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_430260  +
mov eax [esp+24h+arg_4] +
mov [eax+4] ebx +
xor eax eax +
jmp loc_43026F  +
mov [esp+24h+var_1C] offset a_bfd_handle_al +
mov [esp+24h+var_20] 0B4Ah +
mov [esp+24h+var_24] offset a____Binutil_15 +
call sub_420BD0  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBIgnoringDupli +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_430260  +
mov edx [ebx+24h] +
cmp edx [eax+24h] +
jnz loc_430290  +
test edx edx +
jz loc_430260  +
mov eax [ebx+94h] +
lea edx [esp+24h+var_C] +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_8] 0 +
mov [esp+24h+var_24] eax +
call sub_41F070  +
test eax eax +
jnz loc_4303C7  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBCouldNotReadC +
call eax  +
mov edx [esp+24h+var_C] +
test edx edx +
jz loc_4303AB  +
mov [esp+24h+var_24] edx +
call free  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_4303BB  +
mov [esp+24h+var_24] eax +
call free  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_430260  +
mov eax [esp+24h+arg_4] +
lea ecx [esp+24h+var_8] +
mov eax [eax+4] +
mov edx [eax+94h] +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] edx +
call sub_41F070  +
test eax eax +
jz loc_430437  +
mov eax [ebx+24h] +
mov esi [esp+24h+var_C] +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+var_8] +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcmp  +
mov edx esi +
test eax eax +
jz loc_43039F  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBDuplicateSe_0 +
call eax  +
mov edx [esp+24h+var_C] +
jmp loc_43039F  +
mov eax [esp+24h+arg_8] +
mov eax [eax+18h] +
mov edx [eax+2Ch] +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov ecx [eax+94h] +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] offset aBCouldNotReadC +
mov [esp+24h+var_20] ecx +
call edx  +
mov edx [esp+24h+var_C] +
jmp loc_43039F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
test eax 20000h +
jz loc_43048F  +
test eax 2000000h +
jz loc_430498  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp] offset unk_4C12BC +
mov [esp+4] eax +
call sub_42A4E0  +
mov edx [eax+0Ch] +
mov edi eax +
test edx edx +
jz loc_4304E0  +
mov [esp+28h] esi +
mov [esp+20h] ebx +
mov [esp+24h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_430210  +
***
mov dword ptr [esp+4] 8 +
mov dword ptr [esp] offset unk_4C12BC +
call sub_42A750  +
test eax eax +
jz loc_430505  +
mov edx [edi+0Ch] +
mov [eax+4] ebx +
mov [eax] edx +
mov [edi+0Ch] eax +
jmp loc_43048F  +
***
mov eax [esi+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_link +
call eax  +
jmp loc_43048F  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_43062F  +
mov eax ecx +
jmp loc_430551  +
cmp [edx+10h] eax +
setz dl  +
test dl dl +
jnz loc_430568  +
mov eax [eax+10h] +
test eax eax +
jz loc_430568  +
test byte ptr [eax+15h] 80h +
jnz loc_43054A  +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_430540  +
cmp [esi+68h] eax +
setz dl  +
test dl dl +
jz loc_43054A  +
mov edx [ecx+0Ch] +
nop   +
lea esi [esi+0] +
test edx edx +
jz loc_430583  +
mov ecx [edx+14h] +
test ch 80h +
jz loc_430590  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_430574  +
test eax eax +
mov edx offset off_492990 +
cmovz eax edx +
jmp loc_43060A  +
mov ebx [edx+0Ch] +
test ebx ebx +
mov [esp+4+var_4] ebx +
jz loc_4305B0  +
mov ebx [esp+4+var_4] +
cmp [ebx+10h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jnz loc_4305C0  +
mov edx [esp+4+var_4] +
jmp loc_430570  +
cmp [esi+68h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jz loc_4305AB  +
nop   +
test eax eax +
jz loc_430608  +
mov esi [eax+14h] +
mov ebx ecx +
xor ebx esi +
test ebx 403h +
jz loc_4305F3  +
mov ebx [edi+14h] +
xor ebx ecx +
and ebx 401h +
jnz loc_43060A  +
and esi 2 +
jz loc_430608  +
and ecx 2 +
cmovnz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 8 +
jnz loc_430612  +
and ebx 10h +
jz loc_430623  +
xor ecx [edi+14h] +
and ecx 10h +
cmovz eax edx +
jmp loc_43060A  +
mov eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx [edi+14h] +
and ecx 8 +
cmovz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+4+arg_8] +
cmp [edx+1Ch] edi +
cmovbe eax edx +
jmp loc_43060A  +
mov eax [edi+94h] +
mov edx [eax+64h] +
xor eax eax +
jmp loc_430570  +
***
sub esp 0Ch +
mov ebx [esp+0Ch+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_430660  +
add esp 0Ch +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+14h] +
test edx edx +
jz loc_430654  +
mov eax [edx+3Ch] +
test eax eax +
jz loc_430654  +
test byte ptr [eax+15h] 80h +
jz loc_430654  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_4306B0  +
cmp eax [ecx+10h] +
setnz cl  +
test cl cl +
jz loc_430654  +
mov esi [edx+38h] +
add esi [ebx+18h] +
add esi [eax+1Ch] +
mov [ebx+18h] esi +
mov [esp+0Ch+var_8] eax +
mov eax [esp+0Ch+arg_4] +
mov [esp+0Ch+var_4] esi +
mov [esp+0Ch+var_C] eax +
call sub_430520  +
sub esi [eax+1Ch] +
mov [ebx+14h] eax +
mov [ebx+18h] esi +
jmp loc_430654  +
mov esi [esp+0Ch+arg_4] +
cmp eax [esi+68h] +
setnz cl  +
jmp loc_430681  +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_430640 +
mov [esp] eax +
call sub_42E0B0  +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+38h] +
test esi esi +
jz loc_430705  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_430719  +
mov dword ptr [esp+4] 0C49h +
mov dword ptr [esp] offset a____Binutil_15 +
call sub_420BA0  +
mov eax [esi+18h] +
mov [esp+8] eax +
mov eax [esi+14h] +
mov ebp [eax] +
mov ebx [eax+4] +
mov eax [esp+30h] +
mov [esp] eax +
call sub_423820  +
mov ecx ebp +
mov edi eax +
shl edi cl +
test edi edi +
jz loc_4307A6  +
mov edx edi +
neg edx  +
mov eax edx +
and eax edi +
cmp eax edi +
jz loc_430766  +
mov dword ptr [esp+4] 0C52h +
mov dword ptr [esp] offset a____Binutil_15 +
mov [esp+0Ch] edx +
call sub_420BA0  +
mov edx [esp+0Ch] +
mov eax [ebx+24h] +
lea eax [edi+eax-1] +
and eax edx +
cmp ebp [ebx+40h] +
mov [ebx+24h] eax +
jbe loc_43077A  +
mov [ebx+40h] ebp +
mov ebp [esp+8] +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov byte ptr [esi+0Ch] 3 +
add ebp eax +
mov eax [ebx+14h] +
mov [ebx+24h] ebp +
and ah 0EFh +
or eax 1 +
mov [ebx+14h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edx edx +
jmp loc_43074A  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
test ebp ebp +
jz loc_43095F  +
mov [esp+3Ch+var_1C] 0 +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_14] 0 +
nop   +
lea esi [esi+0] +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_430884  +
lea ebx [ebp+0Ch] +
xor eax eax +
mov [esp+3Ch+var_18] ebx +
jmp loc_430859  +
mov esi [eax+4] +
mov edi offset asc_4AD248 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_1C] +
setb cl  +
setnbe bl  +
sub ebx ecx +
movsx ecx bl +
mov ebx [esp+3Ch+var_24] +
test ecx ecx +
cmovz edi ebp +
mov [esp+3Ch+var_1C] edi +
cmovnz ebx ebp +
mov [esp+3Ch+var_24] ebx +
and edx 2 +
mov ebx [esp+3Ch+var_20] +
movzx edx byte ptr [eax+8] +
cmovnz ebx ebp +
or edx 4 +
mov [eax+8] dl +
and edx 1 +
mov [esp+3Ch+var_20] ebx +
jnz loc_430933  +
mov edx [ebp+38h] +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
test eax eax +
jz loc_430884  +
movzx edx byte ptr [eax+8] +
test dl 1 +
jz loc_430806  +
mov [esp+3Ch+var_24] ebp +
jmp loc_430838  +
mov ecx [ebp+1Ch] +
xor eax eax +
lea ebx [ebp+1Ch] +
test ecx ecx +
jz loc_430928  +
mov esi [esp+3Ch+arg_4] +
mov edx [ebp+38h] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] esi +
call edx  +
test eax eax +
jz loc_430928  +
test byte ptr [eax+8] 1 +
jnz loc_4308E6  +
mov esi [eax+4] +
mov edi offset asc_4AD248 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_10] +
setb cl  +
setnbe dl  +
sub edx ecx +
mov ecx [esp+3Ch+var_14] +
movsx edx dl +
test edx edx +
cmovz edi ebp +
cmovnz ecx ebp +
mov [esp+3Ch+var_10] edi +
mov [esp+3Ch+var_14] ecx +
jmp loc_430894  +
test ebp ebp +
mov eax 1 +
mov [esp+3Ch+var_1C] 0 +
setz dl  +
mov [esp+3Ch+var_24] 0 +
jz loc_430947  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_430963  +
mov ebx [esp+3Ch+var_24] +
cmp [esp+3Ch+var_20] ebx +
mov esi [esp+3Ch+arg_8] +
setz al  +
movzx eax al +
mov [esi] eax +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_4307F0  +
mov edx [esp+3Ch+var_24] +
mov ebp [esp+3Ch+var_14] +
test edx edx +
setz al  +
test ebp ebp +
setz dl  +
jnz loc_430902  +
test al al +
jz loc_430902  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
mov [esp+3Ch+var_24] eax +
jnz loc_43090A  +
mov ebp [esp+3Ch+var_10] +
test ebp ebp +
jnz loc_430967  +
xor eax eax +
jmp loc_430920  +
test dl dl +
jnz loc_430957  +
mov eax [esp+3Ch+arg_8] +
mov dword ptr [eax] 1 +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4307B0  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 10h +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_423C80  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call strlen  +
mov [esp+18h+var_18] edi +
mov ebx eax +
call strlen  +
mov [esp+18h+var_18] esi +
lea eax [ebx+eax+0Ah] +
mov [esp+18h+var_14] eax +
call sub_425850  +
mov ebx eax +
mov eax offset unk_4AD460 +
test ebx ebx +
jz loc_430A79  +
mov eax [esi] +
mov [esp+18h+var_C] edi +
mov [esp+18h+var_14] offset a_binary_S_S +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sprintf  +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_430A77  +
mov edx ebx +
lea esi [esi+0] +
test ds:byte_4B8120[ecx+ecx] 8Ch +
jnz loc_430A6D  +
mov byte ptr [edx] 5Fh +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_430A60  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebp [esi+0A0h] +
mov dword ptr [esp+4] 48h +
mov [esp] esi +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_430B50  +
mov [eax] esi +
mov edx offset aStart +
mov eax esi +
call sub_430A00  +
mov edx offset aEnd +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 2 +
mov [ebx+10h] ebp +
mov dword ptr [ebx+14h] 0 +
mov [ebx+18h] esi +
mov [ebx+4] eax +
mov eax esi +
call sub_430A00  +
mov edx offset aSize +
mov [ebx+1Ch] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+24h] 2 +
mov [ebx+28h] ebp +
mov dword ptr [ebx+2Ch] 0 +
mov [ebx+20h] eax +
mov eax esi +
mov [ebx+30h] esi +
call sub_430A00  +
mov [ebx+34h] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+3Ch] 2 +
mov dword ptr [ebx+40h] offset off_492990 +
mov dword ptr [ebx+44h] 0 +
mov [ebx+38h] eax +
lea eax [ebx+18h] +
mov [edi] ebx +
add ebx 30h +
mov [edi+4] eax +
mov eax 3 +
mov [edi+8] ebx +
mov dword ptr [edi+0Ch] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_430B48  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 1 +
jnz loc_430BD0  +
lea eax [esp+10h] +
mov dword ptr [ebx+7Ch] 3 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_429EB0  +
test eax eax +
js loc_430BE3  +
mov dword ptr [esp+8] 123h +
mov dword ptr [esp+4] offset a_data +
mov [esp] ebx +
call sub_41EBD0  +
test eax eax +
jz loc_430BF3  +
mov edx [esp+28h] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+50h] 0 +
mov dword ptr [eax+54h] 0 +
mov [eax+24h] edx +
mov [ebx+0A0h] eax +
mov eax [ebx+4] +
add esp 48h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_420C50  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_420C50  +
xor eax eax +
jmp loc_430BCA  +
***
xor eax eax +
jmp loc_430BCA  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+38h] +
mov edi [esp+44h] +
mov edx [esp+40h] +
mov esi [esp+30h] +
mov [esp+4] eax +
mov eax [esp+3Ch] +
test edi edi +
mov ebp [esp+34h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
jz loc_430CAD  +
test byte ptr [esi+2Bh] 10h +
jnz loc_430CA1  +
mov eax [esi+64h] +
xor ebx ebx +
mov dword ptr [esp] 0 +
test eax eax +
mov edx eax +
jnz loc_430C57  +
jmp loc_430C9D  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_430C87  +
mov ecx [edx+14h] +
and ecx 303h +
cmp ecx 103h +
jnz loc_430C50  +
mov ecx [edx+24h] +
test ecx ecx +
jz loc_430C50  +
mov ecx [esp] +
test ecx ecx +
jnz loc_430CC0  +
mov ebx [edx+20h] +
mov edx [edx+0Ch] +
mov dword ptr [esp] 1 +
test edx edx +
jnz loc_430C57  +
mov edx [eax+20h] +
mov dword ptr [eax+54h] 0 +
sub edx ebx +
mov [eax+50h] edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_430C87  +
or byte ptr [esi+2Bh] 10h +
mov eax [ebp+14h] +
test al 3 +
jz loc_430CAD  +
test ah 2 +
jz loc_430CD2  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [edx+20h] +
mov dword ptr [esp] 1 +
cmp ecx ebx +
jnb loc_430C50  +
mov ebx ecx +
jmp loc_430C79  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+44h] edi +
mov [esp+34h] ebp +
mov [esp+3Ch] eax +
mov eax [esp+4] +
mov [esp+30h] esi +
mov [esp+40h] edx +
mov [esp+38h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_42BD90  +
***
push ebx  +
sub esp 18h +
mov edx [esp+30h] +
mov ebx [esp+20h] +
mov eax [esp+2Ch] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_429F00  +
xor edx edx +
test eax eax +
jnz loc_430D5F  +
mov eax [esp+34h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_429CF0  +
xor edx edx +
cmp [esp+34h] eax +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push ebx  +
mov ebx [esp+0Ch] +
mov eax [esp+8] +
mov ecx [ebx+0Ch] +
cmp [eax+0Ch] ecx +
jnz loc_430DD0  +
mov edx [eax+10h] +
mov ecx [ebx+10h] +
cmp edx ecx +
jz loc_430DB2  +
cmp edx 6 +
jz loc_430DD0  +
cmp ecx 6 +
jz loc_430DD0  +
cmp edx 5 +
ja loc_430DB4  +
cmp ecx 5 +
ja loc_430DD4  +
cmp edx 3 +
jz loc_430E22  +
cmp edx 4 +
jz loc_430E30  +
cmp edx ecx +
nop   +
jbe loc_430DE7  +
pop ebx  +
retn   +
***
cmp edx 19h +
jz loc_430DE2  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_430DF0  +
cmp ecx 1Fh +
jz loc_430DB2  +
cmp ecx 23h +
jz loc_430DB2  +
lea esi [esi+0] +
xor eax eax +
pop ebx  +
retn   +
***
cmp edx 2 +
jnz loc_430DB9  +
cmp ecx 19h +
jz loc_430DB2  +
xor eax eax +
jmp loc_430DD2  +
***
cmp ecx 2 +
jnz loc_430DD0  +
mov eax ebx +
pop ebx  +
retn   +
***
cmp edx 1Fh +
jnz loc_430DFE  +
cmp ecx 3 +
jz loc_430DE7  +
xor eax eax +
jmp loc_430DD2  +
***
cmp edx 23h +
jz loc_430DF5  +
cmp edx 5 +
jnz loc_430E12  +
cmp ecx 33h +
jz loc_430DB2  +
xor eax eax +
nop   +
jmp loc_430DD2  +
***
cmp edx 33h +
jnz loc_430DD0  +
cmp ecx 5 +
jnz loc_430DD0  +
mov eax ebx +
nop   +
jmp loc_430DE9  +
***
cmp ecx 4 +
jnz loc_430DAD  +
xor eax eax +
jmp loc_430DD2  +
***
cmp ecx 3 +
jnz loc_430DAD  +
xor eax eax +
jmp loc_430DD2  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax+8] +
mov [esp+18h+var_18] eax +
call fclose  +
test eax eax +
jnz loc_430E88  +
mov edx [ebx+10h] +
mov eax [ebx+14h] +
cmp ebx ds:dword_4C12D8 +
mov [edx+14h] eax +
mov ecx [ebx+14h] +
mov [ecx+10h] edx +
jz loc_430EA0  +
mov dword ptr [ebx+8] 0 +
mov eax esi +
sub ds:dword_4C12DC 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] 1 +
xor si si +
call sub_420C50  +
jmp loc_430E5B  +
***
xor eax eax +
cmp ebx ecx +
cmovnz eax ecx +
mov ds:dword_4C12D8 eax +
jmp loc_430E72  +
***
mov eax ds:dword_4C12D8 +
test eax eax +
jz loc_430F00  +
push ebx  +
sub esp 18h +
mov ebx [eax+10h] +
cmp byte ptr [ebx+2Ah] 0 +
jns loc_430ED1  +
jmp loc_430EE0  +
mov ebx [ebx+10h] +
cmp byte ptr [ebx+2Ah] 0 +
js loc_430EE0  +
cmp eax ebx +
jnz loc_430EC8  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_429CC0  +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx+1Ch] edx +
add esp 18h +
pop ebx  +
jmp sub_430E40  +
mov eax 1 +
retn   +
***
sub esp 1Ch +
sub esp 0Ch +
xor eax eax +
mov edx [esp+0Ch+arg_0] +
cmp dword ptr [edx+0Ch] offset off_4ADBC0 +
jz loc_430F66  +
add esp 0Ch +
retn   +
mov ecx [edx+8] +
test ecx ecx +
jz loc_430F62  +
mov eax edx +
call sub_430E40  +
sub eax 1 +
jmp loc_430F62  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_431018  +
mov eax ds:dword_4C12E0 +
test eax eax +
jnz loc_430FA8  +
mov ds:dword_4C12E0 0Ah +
mov al 0Ah +
cmp ds:dword_4C12DC eax +
jge loc_430FF0  +
mov eax ds:dword_4C12D8 +
mov dword ptr [ebx+0Ch] offset off_4ADBC0 +
test eax eax +
jz loc_431010  +
mov [ebx+14h] eax +
mov eax [eax+10h] +
mov [ebx+10h] eax +
mov [eax+14h] ebx +
mov eax [ebx+14h] +
mov [eax+10h] ebx +
add ds:dword_4C12DC 1 +
mov eax 1 +
mov ds:dword_4C12D8 ebx +
add esp 18h +
pop ebx  +
retn   +
call sub_430EB0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_430FE4  +
mov eax ds:dword_4C12D8 +
mov dword ptr [ebx+0Ch] offset off_4ADBC0 +
test eax eax +
jnz loc_430FC0  +
lea esi [esi+0] +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_430FD2  +
mov [esp+18h+var_14] 1FFh +
mov [esp+18h+var_18] offset a____Binutils_0 +
call sub_420BA0  +
jmp loc_430F93  +
***
jmp sub_431040  +
***
mov eax [esp+arg_0] +
cmp dword ptr [eax+0Ch] offset off_4ADBC0 +
jz loc_431053  +
mov eax 1 +
retn   +
mov edx [eax+8] +
test edx edx +
jz loc_43104D  +
jmp sub_430E40  +
***
push ebx  +
mov ebx 1 +
sub esp 8 +
mov edx ds:dword_4C12D8 +
test edx edx +
jz loc_431087  +
cmp dword ptr [edx+0Ch] offset off_4ADBC0 +
mov eax 1 +
jz loc_431090  +
and ebx eax +
test edx edx +
jnz loc_431073  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
mov ecx [edx+8] +
test ecx ecx +
jz loc_431081  +
mov eax edx +
call sub_430E40  +
mov edx ds:dword_4C12D8 +
jmp loc_431081  +
***
mov ebx [esp+48h+arg_0] +
or byte ptr [ebx+2Ah] 80h +
mov eax ds:dword_4C12E0 +
test eax eax +
jnz loc_4310D1  +
mov ds:dword_4C12E0 0Ah +
mov al 0Ah +
cmp ds:dword_4C12DC eax +
jge loc_431190  +
movzx eax byte ptr [ebx+28h] +
shr al 3 +
and eax 3 +
sub eax 2 +
cmp eax 1 +
ja loc_4311A4  +
test byte ptr [ebx+2Bh] 2 +
mov eax [ebx] +
jz loc_431130  +
mov [esp+48h+var_44] offset aRB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
test eax eax +
mov [ebx+8] eax +
jz loc_4311C0  +
mov [esp+48h+var_48] ebx +
call sub_430F80  +
test eax eax +
jz loc_43119D  +
mov eax [ebx+8] +
add esp 48h +
pop ebx  +
retn   +
lea edx [esp+48h+var_38] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call ds:_stati64  +
test eax eax +
jnz loc_431160  +
mov eax [esp+48h+var_1C] +
or eax [esp+48h+var_20] +
jz loc_431160  +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_476310  +
lea esi [esi+0] +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
or byte ptr [ebx+2Bh] 2 +
mov [ebx+8] eax +
test eax eax +
jnz loc_431116  +
mov [esp+48h+var_48] 1 +
call sub_420C50  +
jmp loc_431122  +
call sub_430EB0  +
test eax eax +
jnz loc_4310DD  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx] +
mov [esp+48h+var_44] offset aRb +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_431179  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_431179  +
***
push ebx  +
sub esp 24h +
test byte ptr [eax+2Ah] 1 +
jnz loc_4312D9  +
mov ebx eax +
jmp loc_4311F7  +
mov ebx ecx +
mov ecx [ebx+8Ch] +
test ecx ecx +
jnz loc_4311F5  +
mov eax [ebx+8] +
test eax eax +
jz loc_431243  +
mov edx ds:dword_4C12D8 +
cmp ebx edx +
jz loc_43123D  +
mov esi [ebx+14h] +
test edx edx +
mov ecx [ebx+10h] +
mov [ecx+14h] esi +
mov esi [ebx+14h] +
mov [esi+10h] ecx +
jz loc_43126C  +
mov [ebx+14h] edx +
mov edx [edx+10h] +
mov [ebx+10h] edx +
mov [edx+14h] ebx +
mov edx [ebx+14h] +
mov [edx+10h] ebx +
mov ds:dword_4C12D8 ebx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
test dl 1 +
mov [esp+28h+var_C] edx +
jnz loc_43123D  +
mov [esp+28h+var_28] ebx +
call sub_4310B0  +
test eax eax +
jz loc_4312AE  +
mov edx [esp+28h+var_C] +
and edx 2 +
jz loc_431274  +
mov eax [ebx+8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_431237  +
mov eax [ebx+8] +
mov [esp+28h+var_1C] 0 +
mov edx [ebx+18h] +
mov ecx [ebx+1Ch] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_20] ecx +
call sub_429CD0  +
test eax eax +
jz loc_431263  +
mov edx [esp+28h+var_C] +
and edx 4 +
jnz loc_431263  +
mov [esp+28h+var_28] 1 +
call sub_420C50  +
mov ebx off_492AE8 +
call sub_420A00  +
mov [esp+28h+var_28] eax +
call sub_420A10  +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] offset aReopeningBS +
mov [esp+28h+var_20] eax +
call ebx  +
xor eax eax +
jmp loc_43123D  +
mov [esp+28h+var_20] offset aBfd_cache_look +
mov [esp+28h+var_24] 0F2h +
mov [esp+28h+var_28] offset a____Binutils_0 +
call sub_420BD0  +
lea esi [esi+0] +
lea edi [edi+0] +
sub esp 1Ch +
mov eax [esp+44h+var_24] +
cmp eax ds:dword_4C12D8 +
jz loc_431340  +
mov edx 4 +
call sub_4311E0  +
test eax eax +
jz loc_431360  +
mov [esp+44h+var_44] eax +
call _fileno_0  +
mov edx [esp+44h+var_20] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_44] eax +
call ds:_fstati64  +
test eax eax +
js loc_431345  +
add esp 1Ch +
retn   +
mov eax [eax+8] +
jmp loc_431319  +
mov [esp+44h+var_44] 1 +
mov [esp+44h+var_38] eax +
call sub_420C50  +
mov eax [esp+44h+var_38] +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_43133A  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ds:dword_4C12D8 +
jz loc_4313A1  +
mov edx 1 +
call sub_4311E0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_43139D  +
mov [esp+1Ch+var_1C] edx +
call fflush  +
test eax eax +
js loc_4313A6  +
add esp 1Ch +
retn   +
mov edx [eax+8] +
jmp loc_43138B  +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_420C50  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push ebx  +
mov eax [esp+arg_0] +
cmp eax ds:dword_4C12D8 +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov ebx [esp+arg_C] +
jz loc_431406  +
xor edx edx +
cmp ebx 1 +
setnz dl  +
add edx edx +
call sub_4311E0  +
test eax eax +
jz loc_431410  +
mov [esp+arg_C] ebx +
mov [esp+arg_4] esi +
mov [esp+arg_8] edi +
mov [esp+arg_0] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_429CD0  +
mov eax [eax+8] +
jmp loc_4313EA  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+8+arg_0] +
cmp ebx ds:dword_4C12D8 +
jz loc_431450  +
mov edx 1 +
mov eax ebx +
call sub_4311E0  +
test eax eax +
jz loc_431457  +
mov [esp+8+arg_0] eax +
add esp 8 +
pop ebx  +
jmp sub_429CC0  +
mov eax [ebx+8] +
test eax eax +
jnz loc_431440  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+arg_C] +
cmp eax ds:dword_4C12D8 +
mov ebx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] ecx +
jz loc_431500  +
xor edx edx +
call sub_4311E0  +
mov ebp eax +
xor eax eax +
xor edx edx +
test ebp ebp +
jz loc_4314CB  +
mov eax [esp+2Ch+arg_4] +
xor edi edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
cmp [esp+2Ch+var_10] 0 +
mov esi eax +
jge loc_4314D3  +
mov eax esi +
mov edx edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jle loc_431505  +
mov [esp+2Ch+var_2C] ebp +
call ferror  +
test eax eax +
nop   +
jz loc_4314C7  +
mov [esp+2Ch+var_2C] 1 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4314CB  +
mov ebp [eax+8] +
jmp loc_431498  +
cmp ebx eax +
jbe loc_4314C7  +
jmp loc_4314D5  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_C] +
mov eax [esp+3Ch+arg_8] +
cmp edx 0 +
mov [esp+3Ch+var_1C] eax +
mov [esp+3Ch+var_18] edx +
jl loc_43170B  +
jle loc_431700  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
mov ecx [esp+3Ch+var_1C] +
mov ebx [esp+3Ch+var_18] +
sub ecx [esp+3Ch+var_24] +
sbb ebx [esp+3Ch+var_20] +
cmp ebx 0 +
jle loc_4316A3  +
mov esi [esp+3Ch+var_24] +
xor ebx ebx +
mov ecx 800000h +
mov eax ds:dword_4C12D8 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jz loc_4316D6  +
mov eax [esp+3Ch+arg_0] +
xor edx edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call sub_4311E0  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
mov ebp eax +
test ebp ebp +
jz loc_4316E5  +
mov [esp+3Ch+var_34] ecx +
xor edi edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call fread  +
mov ebx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
cmp edi ebx +
mov esi eax +
jge loc_431684  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call ferror  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
test eax eax +
jnz loc_4316F0  +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_3C] 12h +
call sub_420C50  +
mov eax esi +
mov edx edi +
neg eax  +
mov ecx [esp+3Ch+var_14] +
adc edx 0 +
mov ebx [esp+3Ch+var_10] +
neg edx  +
mov eax edx +
shr eax 1Fh +
test al al +
jnz loc_431634  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
mov ebp eax +
or ebp edx +
jnz loc_43163C  +
add [esp+3Ch+var_24] esi +
adc [esp+3Ch+var_20] edi +
cmp edi ebx +
jge loc_431650  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_431656  +
cmp esi ecx +
jb loc_431640  +
mov eax [esp+3Ch+var_18] +
cmp [esp+3Ch+var_20] eax +
jg loc_431640  +
jl loc_431546  +
mov eax [esp+3Ch+var_1C] +
cmp [esp+3Ch+var_24] eax +
jb loc_431546  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_43168E  +
cmp eax ecx +
jb loc_4315D6  +
mov eax esi +
mov edx edi +
neg eax  +
adc edx 0 +
neg edx  +
mov eax edx +
shr eax 1Fh +
jmp loc_431622  +
jl loc_4316B1  +
cmp ecx 800000h +
ja loc_43155F  +
mov eax ebx +
xor esi esi +
xor edi edi +
or eax ecx +
jz loc_431626  +
mov esi [esp+3Ch+var_24] +
mov eax ds:dword_4C12D8 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jnz loc_43157D  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+8] +
test ebp ebp +
jnz loc_4315A2  +
xor esi esi +
xor edi edi +
jmp loc_431626  +
mov [esp+3Ch+var_3C] 1 +
jmp loc_431605  +
cmp [esp+3Ch+var_1C] 0 +
ja loc_431536  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
jmp loc_431640  +
***
mov edx [esp+8] +
xor eax eax +
jmp loc_431730  +
add eax 1 +
cmp eax 25h +
jz loc_431747  +
cmp ds:dword_4AE680[eax*8] edx +
jnz loc_431728  +
imul eax ds:dword_4AE684[eax*8] +
add eax offset dword_4AE9C0 +
retn   +
***
xor al al +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
movzx eax byte ptr [eax+4] +
cmp eax 24h +
jbe loc_43177B  +
mov [esp+8] eax +
mov eax [esp+20h] +
mov dword ptr [esp] offset aBInvalidAvrRel +
mov [esp+4] eax +
call off_492AE8  +
xor eax eax +
imul eax eax +
mov edx [esp+24h] +
add eax offset dword_4AE9C0 +
mov [edx+0Ch] eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov ecx [edx+120h] +
mov ebx [ecx+3Ch] +
mov ebp [ecx+38h] +
mov edi [ebx+1Ch] +
mov ebx [edx+13Ch] +
mov [esp+4+var_4] edi +
test ebx ebx +
jz loc_4317D4  +
mov esi [edx+144h] +
xor ecx ecx +
cmp [esi] eax +
jnz loc_4317CD  +
jmp loc_4317E1  +
cmp [esi+ecx*4] eax +
lea edi ds:0[ecx*4] +
jz loc_4317E3  +
add ecx 1 +
cmp ecx ebx +
jnz loc_4317C1  +
add esp 4 +
mov eax 20000h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov eax [esp+4+var_4] +
mov edx [edx+140h] +
add eax ebp +
add eax [edx+edi] +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+14h] 0 +
mov eax 1 +
retn   +
***
jmp loc_431830  +
mov eax [esp+4] +
mov edx [esp+8] +
cmp dword ptr [eax+14h] 1 +
mov edx [edx+120h] +
sbb eax eax +
not eax  +
and eax 4 +
add [edx+24h] eax +
mov eax 1 +
retn   +
***
mov ebx [eax+0A0h] +
mov ecx [ebx+68h] +
mov edx [ebx+78h] +
test ecx ecx +
jnz loc_431887  +
test edx edx +
jz loc_431880  +
cmp [ebx+78h] edx +
jz loc_431880  +
mov [ebx+78h] edx +
add esp 28h +
mov eax edx +
pop ebx  +
retn   +
test edx edx +
jnz loc_431874  +
lea edx [ebx+48h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call sub_43CC60  +
mov edx eax +
jmp loc_431874  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_423710  +
mov edx 2 +
lea ecx [eax-1] +
cmp ecx 6Ah +
ja loc_4318F4  +
movzx edx ds:byte_4AE41F[eax] +
mov eax [ebx+0A0h] +
mov ecx 53h +
mov [eax+26h] cx +
mov eax [ebx+0A0h] +
and dword ptr [eax+20h] 0FFFFFF80h +
mov eax [ebx+0A0h] +
or [eax+20h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+0A0h] +
movzx ecx word ptr [edx+26h] +
cmp cx 1057h +
jnz loc_431970  +
mov edx [edx+20h] +
mov ebx 2 +
and edx 7Fh +
lea ecx [edx-1] +
cmp ecx 6Ah +
ja loc_431953  +
movzx ebx ds:byte_4AE39F[edx] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 44h +
mov [esp] eax +
call sub_4237A0  +
add esp 18h +
pop ebx  +
retn   +
***
cmp cx 53h +
mov ebx 2 +
jz loc_431939  +
jmp loc_431953  +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 148h +
call sub_42B590  +
test eax eax +
mov ebx eax +
jz loc_431A00  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_431AD0 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4579A0  +
test eax eax +
jz loc_4319F2  +
lea eax [ebx+0FCh] +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] offset sub_431A70 +
mov [esp] eax +
call sub_42A280  +
test eax eax +
jz loc_431A04  +
mov dword ptr [ebx+24h] offset loc_431A20 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_4319ED  +
***
xor eax eax +
jmp loc_4319ED  +
***
mov eax [esp+30h] +
mov [esp] eax +
call sub_44B1B0  +
xor eax eax +
jmp loc_4319ED  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esi+9Ch] +
mov eax [ebx+140h] +
test eax eax +
jz loc_431A41  +
mov [esp] eax +
call free  +
mov eax [ebx+144h] +
test eax eax +
jz loc_431A53  +
mov [esp] eax +
call free  +
add ebx 0FCh +
mov [esp] ebx +
call sub_42A2B0  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_44B1B0  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_431AB0  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_42A800  +
test eax eax +
jz loc_431AC4  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
test eax eax +
jnz loc_431A80  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
jmp loc_44B0E0  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 6Ch +
mov edi [eax+0A0h] +
mov [esp+70h+var_40] ecx +
mov ecx eax +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
mov [esp+70h+var_50] edx +
mov [esp+70h+var_48] eax +
call sub_440BE0  +
mov [esp+70h+var_2C] eax +
mov eax [esi+8Ch] +
mov ecx [eax+30h] +
lea edx [eax+90h] +
mov [esp+70h+var_54] ecx +
xor ecx ecx +
cmp esi [esi+3Ch] +
mov esi [esi+24h] +
cmovnz ecx edx +
mov edx [ecx] +
mov [esp+70h+var_4C] esi +
test edx edx +
jz loc_432025  +
mov eax [esp+70h+arg_0] +
xor ebx ebx +
mov esi [esp+70h+var_40] +
lea ebp [eax+esi] +
mov eax ebp +
mov ebp edi +
mov edi eax +
nop   +
mov eax [ecx+8] +
lea esi [ebx+ebx*2] +
lea esi [eax+esi*8] +
mov eax [esi+4] +
cmp eax [esp+70h+var_40] +
jbe loc_432002  +
cmp eax edi +
jb loc_432030  +
mov [esp+70h+var_3C] eax +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov eax [eax+8Ch] +
mov eax [eax+68h] +
xor ebx ebx +
mov ecx [esp+70h+var_40] +
mov [esp+70h+var_4C] eax +
mov eax [esp+70h+var_50] +
mov ebp [eax+4Ch] +
mov eax [esp+70h+var_3C] +
sub eax ecx +
cmp eax [esp+70h+arg_0] +
jz loc_431BD0  +
sub eax [esp+70h+arg_0] +
mov ebx [esp+70h+var_54] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+arg_0] +
add eax ecx +
add eax ebx +
mov [esp+70h+var_6C] eax +
mov eax ebx +
mov ebx 1 +
add eax ecx +
mov [esp+70h+var_70] eax +
call memmove  +
test esi esi +
jz loc_43237B  +
mov eax [esi+8] +
cmp eax 2 +
jz loc_432245  +
cmp eax 3 +
jz loc_43204E  +
cmp eax 1 +
jz loc_43223D  +
xor eax eax +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_3C] +
mov [esp+70h+var_68] esi +
sub eax esi +
add eax [esp+70h+var_54] +
mov [esp+70h+var_70] eax +
call memset  +
test ebx ebx +
mov [esp+70h+var_30] 1 +
jz loc_432150  +
mov esi [esp+70h+var_4C] +
lea eax [ebp+ebp*2+0] +
lea esi [esi+eax*4] +
mov eax [esp+70h+var_50] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
cmp esi ebx +
jbe loc_431C8B  +
mov [esp+70h+var_4C] edi +
mov ebp [esp+70h+var_40] +
mov edi [esp+70h+var_50] +
mov eax [edi+3Ch] +
mov ecx [ebx] +
mov edx [edi+38h] +
mov eax [eax+1Ch] +
cmp ebp ecx +
mov [esp+70h+var_54] eax +
jnb loc_431C80  +
cmp [esp+70h+var_3C] ecx +
jbe loc_431C80  +
mov eax ds:dword_4C12F0 +
test eax eax +
jnz loc_4321BD  +
sub ecx [esp+70h+arg_0] +
mov [ebx] ecx +
add ebx 0Ch +
cmp esi ebx +
ja loc_431C51  +
mov edi [esp+70h+var_4C] +
mov eax [esp+70h+var_48] +
xor ecx ecx +
lea esi [edi+48h] +
mov [esp+70h+var_28] esi +
mov eax [eax+64h] +
test eax eax +
mov [esp+70h+var_4C] eax +
jz loc_431E25  +
mov ebp edi +
mov edi ecx +
nop   +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_431E10  +
mov ecx [esp+70h+var_50] +
mov esi [esp+70h+var_40] +
mov ebx [esp+70h+arg_4] +
mov edx [ecx+3Ch] +
add esi [ecx+38h] +
mov ecx [edx+1Ch] +
mov [esp+70h+var_44] esi +
add [esp+70h+var_44] ecx +
mov ecx [esp+70h+var_44] +
mov edx ecx +
sub edx [esp+70h+arg_0] +
test ebx ebx +
cmovz edx ecx +
mov ecx [esp+70h+var_4C] +
mov [esp+70h+var_44] edx +
mov edx [ecx+8Ch] +
mov ebx [edx+68h] +
test ebx ebx +
jz loc_4321FB  +
lea eax [eax+eax*2] +
lea ecx [ebx+eax*4] +
cmp ebx ecx +
jnb loc_431E10  +
mov esi ecx +
jmp loc_431D2B  +
add ebx 0Ch +
cmp esi ebx +
jbe loc_431E10  +
test edi edi +
mov edx [ebp+68h] +
jz loc_432060  +
mov eax [ebx+4] +
shr eax 8 +
cmp eax edx +
jnb loc_431D20  +
lea eax [eax+eax*4] +
lea edx [edi+eax*4] +
mov eax [edx+10h] +
mov [esp+70h+var_54] edx +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_70] eax +
call sub_43F6C0  +
mov edx [esp+70h+var_54] +
cmp eax [esp+70h+var_50] +
mov ecx [edx] +
jnz loc_431D20  +
mov edx [esp+70h+var_50] +
mov eax [edx+3Ch] +
mov edx [edx+38h] +
mov eax [eax+1Ch] +
mov [esp+70h+var_38] eax +
add ecx [esp+70h+var_38] +
lea eax [ecx+edx] +
mov [esp+70h+var_54] eax +
mov eax ds:dword_4C12F0 +
test eax eax +
jnz loc_4320C0  +
movzx eax byte ptr [ebx+4] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
jbe loc_4320FD  +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
add ecx eax +
mov [esp+70h+var_34] ecx +
mov ecx [esp+70h+var_54] +
cmp [esp+70h+var_44] ecx +
jb loc_431D20  +
mov ecx [esp+70h+var_34] +
cmp [esp+70h+var_44] ecx +
jnb loc_431D20  +
add edx [esp+70h+var_38] +
add edx [esp+70h+var_3C] +
cmp edx ecx +
jb loc_431D20  +
mov ecx ds:dword_4C12F0 +
sub eax [esp+70h+arg_0] +
test ecx ecx +
mov [ebx+8] eax +
jz loc_431D20  +
mov [esp+70h+var_70] offset aRelocationSAdd +
add ebx 0Ch +
call puts  +
cmp esi ebx +
ja loc_431D2B  +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+70h+var_4C] eax +
jnz loc_431CB0  +
mov edi ebp +
mov esi [edi+78h] +
test esi esi +
jz loc_431F05  +
mov eax [edi+68h] +
lea edx [eax+eax*4] +
lea ebp [esi+edx*4] +
cmp esi ebp +
jnb loc_431F08  +
movzx eax byte ptr [esp+70h+var_30] +
mov [esp+70h+var_4C] edi +
mov edi [esp+70h+var_2C] +
and eax 1 +
mov byte ptr [esp+70h+var_44] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_38] eax +
jmp loc_431E71  +
add esi 14h +
cmp ebp esi +
jbe loc_431F01  +
cmp [esi+10h] edi +
jnz loc_431E66  +
mov eax [esi+4] +
mov ebx [esi] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_54] eax +
add eax ebx +
test edx edx +
jz loc_4321ED  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnbe dl  +
cmp [esp+70h+var_40] ebx +
jb loc_432160  +
cmp [esp+70h+var_40] eax +
jnb loc_432160  +
test edx edx +
jz loc_432160  +
cmp eax [esp+70h+var_38] +
jb loc_432255  +
mov ecx [esp+70h+var_54] +
sub ecx [esp+70h+arg_0] +
xor edx edx +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jz loc_4321AF  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnbe al  +
test eax eax +
jz loc_431E66  +
test dl dl +
jz loc_431E66  +
mov eax [esp+70h+arg_0] +
sub [esi] eax +
add esi 14h +
cmp ebp esi +
ja loc_431E71  +
mov edi [esp+70h+var_4C] +
mov eax [edi+68h] +
mov esi [esp+70h+var_48] +
mov edx [esi+0A0h] +
mov ebp [edx+218h] +
mov edx [edi+60h] +
shr edx 4 +
sub edx eax +
lea eax [ebp+edx*4+0] +
cmp ebp eax +
mov esi eax +
jnb loc_432150  +
movzx eax byte ptr [esp+70h+var_30] +
mov ecx [esp+70h+var_50] +
and eax 1 +
mov byte ptr [esp+70h+var_4C] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_48] eax +
jmp loc_431F5B  +
add ebp 4 +
cmp esi ebp +
jbe loc_432150  +
mov ebx [ebp+0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_431F50  +
cmp [ebx+14h] ecx +
jnz loc_431F50  +
mov eax [ebx+2Ch] +
mov edi [ebx+18h] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_50] eax +
add eax edi +
test edx edx +
mov [esp+70h+var_54] eax +
jz loc_4323F2  +
cmp [esp+70h+var_3C] eax +
setnbe al  +
movzx eax al +
cmp [esp+70h+var_40] edi +
jb loc_431FA8  +
mov edx [esp+70h+var_54] +
cmp [esp+70h+var_40] edx +
jb loc_432271  +
mov eax [esp+70h+var_30] +
test eax eax +
jz loc_432457  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnbe al  +
mov edx eax +
cmp [esp+70h+var_40] edi +
setb al  +
and dl al +
jnz loc_43243F  +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_4323E4  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnbe dl  +
test edx edx +
jz loc_431F50  +
test al al +
jz loc_431F50  +
mov eax [esp+70h+arg_0] +
sub [ebx+18h] eax +
jmp loc_431F50  +
cmp eax edi +
jnb loc_431B6E  +
add ebx 1 +
cmp [ecx] ebx +
ja loc_431B50  +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov esi [esp+70h+var_4C] +
mov eax [eax+8Ch] +
mov [esp+70h+var_3C] esi +
xor esi esi +
jmp loc_431B7E  +
mov [esp+70h+var_6C] 7A2h +
mov [esp+70h+var_70] offset a____Binutil_19 +
mov [esp+70h+var_44] ecx +
call sub_420BA0  +
mov ecx [esp+70h+var_44] +
jmp loc_43200A  +
mov eax [esi+10h] +
mov ecx [esp+70h+arg_0] +
add [esi+14h] ecx +
jmp loc_431BF8  +
test edx edx +
jz loc_431D20  +
mov edi [ebp+78h] +
test edi edi +
jnz loc_431D36  +
mov eax [esp+70h+var_28] +
mov [esp+70h+var_58] 0 +
mov [esp+70h+var_5C] 0 +
mov [esp+70h+var_60] 0 +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] edx +
mov [esp+70h+var_70] eax +
call sub_43CC60  +
test eax eax +
mov edi eax +
jnz loc_432396  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+70h+var_44] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_34] edx +
mov [esp+70h+var_64] eax +
mov eax [ebx+8] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] offset aCheckingIfTheR +
add eax ecx +
mov [esp+70h+var_68] eax +
call printf  +
movzx eax byte ptr [ebx+4] +
mov edx [esp+70h+var_34] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
ja loc_431DA2  +
mov ecx [esp+70h+var_4C] +
mov edx [ecx+8Ch] +
mov edx [edx+30h] +
test edx edx +
mov [esp+70h+var_14] edx +
jz loc_432405  +
add edx [ebx] +
cmp eax 1Fh +
mov [esp+70h+var_34] edx +
jz loc_43235F  +
cmp eax 20h +
jz loc_432343  +
cmp eax 1Eh +
jz loc_43229C  +
mov [esp+70h+var_6C] 6F0h +
mov [esp+70h+var_70] offset a____Binutil_19 +
call sub_420BA0  +
jmp loc_431D20  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_43222F  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnbe cl  +
cmp [esp+70h+var_40] ebx +
setb dl  +
and cl dl +
jz loc_431ECC  +
cmp [esp+70h+var_3C] eax +
setbe dl  +
and dl byte ptr [esp+70h+var_44] +
jz loc_43224C  +
mov ecx [esp+70h+var_54] +
add ecx [esp+70h+arg_0] +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jnz loc_431ED8  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnb al  +
jmp loc_431EE1  +
mov eax ecx +
sub eax [esp+70h+arg_0] +
mov [esp+70h+var_68] ecx +
mov [esp+70h+var_70] offset aRelocationAtAd +
mov [esp+70h+var_64] eax +
mov eax [esp+70h+var_54] +
add eax edx +
add eax ecx +
mov [esp+70h+var_6C] eax +
call printf  +
mov ecx [ebx] +
jmp loc_431C77  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnb dl  +
jmp loc_431E96  +
mov eax [esp+70h+var_48] +
mov esi ecx +
mov [esp+70h+var_60] 1 +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] 0 +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_450E60  +
mov ebx eax +
mov eax [esi+4Ch] +
jmp loc_431D0A  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnb cl  +
jmp loc_432175  +
mov eax [esi+0Ch] +
jmp loc_431BF8  +
xor eax eax +
jmp loc_432051  +
mov edx ecx +
nop   +
jmp loc_431ECC  +
mov [esp+70h+var_6C] 864h +
mov [esp+70h+var_70] offset a____Binutil_19 +
call sub_420BA0  +
mov ecx [esi+4] +
jmp loc_431EC0  +
test eax eax +
jz loc_431FA8  +
mov eax [esp+70h+var_48] +
cmp [esp+70h+var_54] eax +
jb loc_432467  +
mov eax [esp+70h+var_50] +
sub eax [esp+70h+arg_0] +
mov [ebx+2Ch] eax +
xor eax eax +
jmp loc_431FCE  +
movzx eax byte ptr [edx] +
add eax 0FFFFFF80h +
movzx eax al +
add eax 0FFFFFF80h +
mov [esp+70h+var_38] eax +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_24] eax +
add ecx eax +
mov edx ecx +
mov eax ecx +
sub edx [esp+70h+var_38] +
cmp edx ecx +
cmovnb ecx edx +
cmp [esp+70h+var_44] ecx +
jnb loc_431D20  +
cmp edx eax +
cmova edx eax +
cmp [esp+70h+var_44] edx +
jb loc_431D20  +
mov edx [esp+70h+var_38] +
mov ecx [esp+70h+arg_0] +
add ecx edx +
sub edx [esp+70h+arg_0] +
cmp [esp+70h+var_38] 0 +
cmovns ecx edx +
cmp [esp+70h+var_44] eax +
jnb loc_43230F  +
mov eax [esp+70h+var_24] +
sub eax [esp+70h+arg_0] +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+4] +
cmp eax 1Fh +
jz loc_4323C5  +
cmp eax 20h +
jz loc_4323A9  +
cmp eax 1Eh +
jz loc_43239E  +
mov [esp+70h+var_6C] 723h +
mov [esp+70h+var_70] offset a____Binutil_19 +
call sub_420BA0  +
jmp loc_431D20  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_4322AC  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+38h] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_4322AC  +
mov eax [esp+70h+var_50] +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_30] 0 +
sub [eax+24h] esi +
jmp loc_431C29  +
mov edx [ebp+68h] +
jmp loc_431D36  +
mov eax [esp+70h+var_34] +
mov [eax] cl +
jmp loc_431D20  +
mov eax [esp+70h+var_48] +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_431D20  +
mov eax [esp+70h+var_48] +
movzx ecx cx +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_431D20  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnb dl  +
jmp loc_431FE3  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setnb al  +
movzx eax al +
jmp loc_431F94  +
lea eax [esp+70h+var_14] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_41F070  +
test eax eax +
jz loc_431D20  +
mov eax [esp+70h+var_4C] +
mov edx [esp+70h+var_14] +
mov eax [eax+8Ch] +
mov [eax+30h] edx +
movzx eax byte ptr [ebx+4] +
jmp loc_432116  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setbe al  +
and al byte ptr [esp+70h+var_4C] +
jnz loc_43248B  +
mov eax edx +
jmp loc_431FCE  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnb al  +
mov edx eax +
jmp loc_431FBF  +
mov [esp+70h+var_6C] 886h +
mov [esp+70h+var_70] offset a____Binutil_19 +
mov [esp+70h+var_54] ecx +
call sub_420BA0  +
mov eax [ebx+2Ch] +
mov ecx [esp+70h+var_54] +
jmp loc_43228B  +
mov edx [esp+70h+var_50] +
add edx [esp+70h+arg_0] +
mov [ebx+2Ch] edx +
jmp loc_431FCE  +
***
push ebp  +
push edi  +
push esi  +
mov esi offset off_4AE9E0 +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov edi ds:_stricmp +
mov ebp [esp+34h] +
jmp loc_4324CB  +
add ebx 1 +
add esi 34h +
cmp ebx 25h +
jz loc_4324F0  +
mov eax [esi] +
test eax eax +
jz loc_4324C0  +
mov [esp+4] ebp +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_4324C0  +
imul eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax offset dword_4AE9C0 +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_432530  +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_43F860  +
***
mov dword ptr [esp+4] 0A0h +
mov [esp] esi +
call sub_425930  +
test eax eax +
jz loc_432550  +
mov [ebx+8Ch] eax +
jmp loc_432517  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jz loc_432577  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_432587  +
mov eax [eax+1Ch] +
sub eax [edx+1Ch] +
pop ebx  +
retn   +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_4325A5  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jnz loc_4325A1  +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov edx [eax+4] +
test edx edx +
jz loc_4325D0  +
pop ebx  +
retn   +
mov edx [esp+arg_4] +
test byte ptr [edx+14h] 11h +
jz loc_4325CC  +
mov ecx [esp+arg_4] +
mov edx [eax] +
mov ecx [ecx+1Ch] +
cmp edx ecx +
jb loc_4325CC  +
mov ebx [esp+arg_4] +
add ecx [ebx+24h] +
cmp edx ecx +
jnb loc_4325CC  +
mov [eax+4] ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edx [esi+14h] +
test edx edx +
jz loc_432626  +
mov eax [esp+1Ch+arg_4] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_432630  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_0] +
mov esi [eax+10h] +
mov eax [ebx+120h] +
mov edx [eax+24h] +
mov edi [eax+6Ch] +
mov ebp [eax+94h] +
mov eax ds:dword_4C12EC +
mov [ecx+0Ch] edx +
add edi edx +
mov [esp+1Ch+var_10] edi +
test eax eax +
jz loc_432673  +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset aBuildingOneStu +
call printf  +
test esi 1 +
jnz loc_432624  +
mov eax [ebp+4] +
mov edi esi +
shr edi 1 +
mov ecx edi +
and ecx 10000h +
mov edx [eax+3Ch] +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] eax +
lea eax ds:0[edi*8] +
movzx edi di +
and eax 1F00000h +
or eax ecx +
shr eax 10h +
or eax 940Ch +
mov [esp+1Ch+var_1C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax+3Ch] +
lea edx [ecx+2] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edi +
call eax  +
mov eax [ebx+120h] +
mov edx [ebx+138h] +
add dword ptr [eax+24h] 4 +
mov eax 1 +
lea ecx [edx+1] +
cmp ecx [ebx+13Ch] +
ja loc_432626  +
mov edi [esp+1Ch+arg_0] +
add edx 40000000h +
mov [ebx+138h] ecx +
mov ecx [ebx+140h] +
mov edi [edi+0Ch] +
mov [ecx+edx*4] edi +
mov ecx [ebx+144h] +
mov [ecx+edx*4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov edi [esp+6Ch+arg_4] +
mov ebp [esp+6Ch+arg_14] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+2Ch] 4 +
mov [esp+6Ch+var_2C] eax +
jz loc_43274C  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+6Ch+arg_8] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_40] eax +
mov eax [eax+218h] +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_C] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebp+eax*4+0] +
cmp ebp eax +
mov [esp+6Ch+var_34] eax +
jnb loc_43295D  +
***
mov edx [ebp+4] +
mov [esp+arg_58] 0 +
movzx esi dl +
mov eax edx +
imul esi esi +
shr eax 8 +
lea ecx dword_4AE9C0[esi] +
mov [esp+arg_30] ecx +
mov ecx [esp+arg_28] +
mov edx [ecx+68h] +
cmp eax edx +
jb loc_4331F0  +
mov ecx [esp+arg_38] +
test ecx ecx +
jz loc_432742  +
sub eax edx +
mov ebx [ecx+eax*4] +
mov eax [edi+28h] +
test eax eax +
jz loc_4327E3  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_4327E3  +
jmp loc_433286  +
***
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-6] +
cmp dl 1 +
jbe loc_4327E0  +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_433266  +
cmp al 2 +
jz loc_432875  +
movzx edx byte ptr [edi+2] +
and edx 6 +
cmp dl 2 +
jz loc_4332A4  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_432875  +
cmp dl 6 +
mov eax 1 +
jz loc_432832  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
setnz al  +
movzx eax al +
mov edx [edi+18h] +
mov ecx [edx+18h] +
mov edx [ebx+4] +
mov [esp+arg_24] ecx +
mov ecx [ebp+0] +
mov [esp+arg_10] eax +
mov eax [esp+arg_88] +
mov [esp+arg_0] edx +
mov [esp+0] edi +
mov [esp+arg_C] ecx +
mov [esp+arg_8] eax +
mov eax [esp+arg_84] +
mov [esp+arg_4] eax +
mov eax [esp+arg_24] +
call eax  +
test eax eax +
jz loc_432742  +
mov eax [esp+arg_58] +
xor edx edx +
mov ecx [ebx+4] +
mov [esp+arg_2C] ecx +
test eax eax +
jz loc_432896  +
cmp eax offset off_492990 +
jz loc_432896  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_4328F0  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz sub_432950  +
mov eax [ebp+0] +
mov [esp+arg_24] eax +
mov eax [esp+arg_3C] +
mov eax [eax+124h] +
mov [esp+arg_40] eax +
mov eax [esp+arg_88] +
mov ecx [eax+3Ch] +
mov eax [eax+38h] +
add eax [ecx+1Ch] +
mov ecx [esp+arg_24] +
add ecx eax +
cmp ds:dword_4AE9C0[esi] 23h +
ja sub_432A71  +
mov esi ds:dword_4AE9C0[esi] +
jmp ds:off_4ADE68[esi*4]  +
***
add ebp 0Ch +
add edx [ebp+8] +
mov eax 2 +
mov esi [esp+arg_24] +
movzx ecx dx +
cmp ecx 1Fh +
mov [esp+arg_40] edx +
jbe loc_433367  +
***
mov edx offset aInternalErrorO +
mov eax [edi+18h] +
mov edx offset aInternalErrorD +
mov eax [edi+18h] +
mov edx offset aInternalErrorU +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov ecx [ebp+8] +
mov eax [esp+arg_24] +
mov eax [esp+arg_24] +
mov ebx [ebp+8] +
mov ebx [ebp+8] +
mov esi [ebp+8] +
mov esi [ebp+8] +
add esi edx +
movzx eax si +
cmp eax 3Fh +
jg loc_4331E0  +
test esi esi +
js loc_4331E0  +
mov eax [esp+arg_84] +
add ebp 0Ch +
mov ebx [esp+arg_24] +
add ebx [esp+arg_8C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov edx esi +
and edx 20h +
shl edx 8 +
mov ecx eax +
mov eax [esp+arg_84] +
and ecx 0D3F8h +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+arg_24] eax +
mov eax esi +
and esi 7 +
and eax 18h +
shl eax 7 +
or eax edx +
or eax esi +
or ecx eax +
mov eax [esp+arg_24] +
mov [esp+0] ecx +
call eax  +
cmp [esp+arg_34] ebp +
ja loc_432784  +
jmp loc_43295D  +
***
mov esi [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_24] +
add edx [ebp+8] +
add edx [ebp+8] +
mov ebx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_3C] +
mov esi [esp-7Ch+arg_A0] +
mov esi [esp+arg_24] +
sub edx esi +
add edx [ebp+8] +
lea ecx [edx-2] +
sub ecx eax +
mov eax 2 +
test cl 1 +
jnz loc_432986  +
lea edx [ecx+80h] +
mov al 1 +
cmp edx 0FFh +
ja loc_432986  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov [esp+arg_2C] ecx +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_2C] +
mov edx [esi+4] +
shl ecx 2 +
and eax 0FC07h +
and ecx 3F8h +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_432950  +
***
jz loc_432DDC  +
mov eax esi +
neg eax  +
movzx eax ax +
add eax 0FFFFFF80h +
jle loc_432DDC  +
***
mov esi [esp+28h] +
mov eax 1 +
jmp loc_432986  +
***
mov ecx [esp-7Ch+arg_110] +
lea edx [eax+eax*4] +
lea ebx [ecx+edx*4] +
mov ecx [esp-7Ch+arg_114] +
mov eax [ecx+eax*4] +
mov [esp-7Ch+arg_84] ebp +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_D4] eax +
lea eax [esp-7Ch+arg_D4] +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_F8] +
mov [esp-7Ch+arg_78] eax +
call sub_44A150  +
mov ecx [esp-7Ch+arg_A4] +
mov ecx [ecx+64h] +
mov [esp-7Ch+arg_A0] eax +
mov eax [ebx+8] +
mov [esp-7Ch+arg_7C] ecx +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_100] +
mov [esp-7Ch+arg_78] eax +
call sub_43CA60  +
mov edx [esp-7Ch+arg_A0] +
test eax eax +
mov [esp-7Ch+arg_A8] eax +
mov eax [esp-7Ch+arg_D4] +
jz loc_4332C5  +
xor ebx ebx +
jmp loc_432882  +
mov eax [ebx+14h] +
test eax eax +
mov [esp+arg_58] eax +
jz loc_4332D2  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_4332DB  +
mov edx [edx+1Ch] +
add edx [ebx+18h] +
add edx [eax+38h] +
jmp loc_43287B  +
mov eax [esp+arg_84] +
mov [esp+arg_4] ebx +
mov [esp+0] edi +
mov [esp+arg_0] eax +
call sub_42DFA0  +
mov ebx eax +
jmp loc_4327E3  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_432875  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jnz loc_43282A  +
jmp loc_432875  +
mov ecx [eax] +
xor ebx ebx +
mov [esp-7Ch+arg_A8] ecx +
jmp loc_432886  +
xor eax eax +
xor edx edx +
jmp loc_43287B  +
xor edx edx +
jmp loc_43287B  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_432942  +
mov eax [eax+3Ch] +
mov [esp+0] eax +
call sub_43FE50  +
mov ecx [eax+18h] +
mov edx [eax+28h] +
cmp ecx edx +
jbe loc_432942  +
sub ecx edx +
mov [eax+18h] ecx +
mov eax [esp+arg_88] +
mov [esp+0] eax +
call sub_43FE50  +
mov edx [eax+28h] +
sub [eax+18h] edx +
mov eax [esp+arg_34] +
mov [esp+0] ebp +
sub eax ebp +
sar eax 2 +
imul eax eax +
lea eax [eax+eax*2-3] +
shl eax 2 +
mov [esp+arg_4] eax +
lea eax [ebp+0Ch] +
sub ebp 0Ch +
mov [esp+arg_0] eax +
call memmove  +
mov eax [esp+arg_88] +
sub [esp+arg_34] 0Ch +
sub dword ptr [eax+4Ch] 1 +
jmp sub_432950  +
***
mov edx 1 +
shl edx cl +
test ds:dword_4C12E8 edx +
jnz loc_432986  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_40] +
mov edx [esi+4] +
shl ecx 3 +
and eax 0FF07h +
movzx ecx cl +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_432950  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_431790  +
mov ecx [esp+4Ch] +
mov esi eax +
mov eax ds:dword_4C12EC +
test eax eax +
jz loc_4333FB  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_432BFA  +
jmp loc_432C3E  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_431790  +
mov ecx ds:dword_4C12EC +
test ecx ecx +
mov ecx [esp+4Ch] +
mov esi eax +
jz loc_43344C  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_432BFA  +
jmp loc_432BEE  +
***
mov eax [esp-7Ch+arg_100] +
and esi 0FFFh +
mov ebx [esp-7Ch+arg_A0] +
add ebx [esp-7Ch+arg_108] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp-7Ch+arg_78] ebx +
call eax  +
mov ecx [esp-7Ch+arg_100] +
mov edx [ecx+4] +
and eax 0F000h +
or eax esi +
mov edx [edx+3Ch] +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_78] eax +
call edx  +
jmp sub_432950  +
***
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
jmp loc_433087  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov edx [esp+70h] +
mov esi [esp+6Ch] +
mov edi [esp+74h] +
mov [esp+20h] eax +
mov eax [esp+64h] +
test edx edx +
mov [esp+24h] eax +
mov eax [esp+68h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
jnz loc_433545  +
mov ecx [ebx+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_433545  +
mov eax [ebp+0A0h] +
mov [esp+28h] eax +
mov eax [ebx+24h] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+8] eax +
call memcpy  +
test byte ptr [ebx+14h] 4 +
jz loc_43353B  +
mov eax [ebx+4Ch] +
test eax eax +
jnz loc_433571  +
mov eax esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+68h] eax +
mov eax [esp+24h] +
mov [esp+74h] edi +
mov [esp+6Ch] esi +
mov [esp+70h] edx +
mov [esp+64h] eax +
mov eax [esp+20h] +
mov [esp+60h] eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_42D0D0  +
***
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_450E60  +
test eax eax +
mov [esp+30h] eax +
jz loc_433798  +
mov eax [esp+28h] +
mov edi [eax+68h] +
test edi edi +
jz loc_433620  +
mov eax [eax+78h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_433749  +
shl edi 2 +
mov [esp] edi +
call sub_42B400  +
test edi edi +
mov [esp+34h] eax +
jz loc_433638  +
test eax eax +
jnz loc_433638  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_4335EB  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_4335EB  +
mov [esp] eax +
call free  +
mov esi [esp+30h] +
test esi esi +
jz loc_433798  +
mov edx [ebx+8Ch] +
xor eax eax +
cmp [edx+68h] esi +
jz loc_43353D  +
mov [esp] esi +
mov [esp+20h] eax +
call free  +
mov eax [esp+20h] +
jmp loc_43353D  +
***
mov dword ptr [esp] 0 +
call sub_42B400  +
mov dword ptr [esp+2Ch] 0 +
mov [esp+34h] eax +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
mov eax [eax+68h] +
mov edi edx +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
mov ecx eax +
mov eax edx +
mov edx [esp+34h] +
cmp ecx eax +
jbe loc_4336A5  +
mov [esp+38h] ebx +
mov ebx edx +
mov [esp+3Ch] esi +
mov esi ecx +
mov ecx [edi+10h] +
mov eax offset off_4928E8 +
test ecx ecx +
jz loc_433690  +
cmp ecx 0FFFFFFF1h +
mov eax offset off_492990 +
jz loc_433690  +
cmp ecx 0FFFFFFF2h +
mov eax offset off_492840 +
jz loc_433690  +
mov [esp+4] ecx +
mov [esp] ebp +
call sub_43F6C0  +
nop   +
add edi 14h +
add ebx 4 +
mov [ebx-4] eax +
cmp esi edi +
ja loc_433663  +
mov ebx [esp+38h] +
mov esi [esp+3Ch] +
mov eax [esp+34h] +
mov [esp+10h] esi +
mov [esp+0Ch] ebx +
mov [esp+8] ebp +
mov [esp+1Ch] eax +
mov eax [esp+2Ch] +
mov [esp+18h] eax +
mov eax [esp+30h] +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_432720  +
test eax eax +
jz loc_433730  +
mov eax [esp+34h] +
test eax eax +
jz loc_4336F1  +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_43370A  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_43370A  +
mov [esp] eax +
call free  +
mov eax [ebx+8Ch] +
mov edx [esp+30h] +
cmp [eax+68h] edx +
jz loc_43353B  +
mov [esp] edx +
call free  +
jmp loc_43353B  +
***
mov eax [esp+34h] +
test eax eax +
jz loc_4335D2  +
mov [esp] eax +
call free  +
jmp loc_4335D2  +
***
mov eax [esp+28h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
add eax 48h +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_43CC60  +
test eax eax +
mov [esp+2Ch] eax +
jz loc_4335EB  +
mov eax [esp+28h] +
mov edi [eax+68h] +
jmp loc_4335BB  +
***
xor eax eax +
jmp loc_43353D  +
***
mov dword ptr [edx] offset off_492990 +
sub edx 4 +
cmp edx ecx +
jnz loc_4338A0  +
mov esi [esp+20h] +
mov edx [esi+64h] +
test edx edx +
jz loc_4338CF  +
test byte ptr [edx+14h] 10h +
jz loc_4338C8  +
mov ecx [edx+8] +
mov dword ptr [eax+ecx*4] 0 +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_4338B8  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov [esp] esi +
call sub_450E60  +
test eax eax +
mov ebx eax +
mov [esp+4Ch] eax +
jz loc_433DC7  +
mov eax [edi+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+20h] eax +
jnb loc_433D1B  +
mov [esp+44h] edi +
mov edi esi +
jmp loc_433C3B  +
mov esi [esp+38h] +
lea eax [eax+eax*4] +
xor ecx ecx +
lea edx [esi+eax*4] +
movzx eax byte ptr [edx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_433B69  +
mov ecx [edx] +
mov eax [edx+10h] +
mov edx [edi+0A0h] +
cmp eax [edx+214h] +
jnb loc_433CD0  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov edx [eax+2Ch] +
mov eax [edx+3Ch] +
mov esi [eax+1Ch] +
add esi [edx+38h] +
add esi [ebx+8] +
add esi ecx +
mov ebp [esp+24h] +
mov eax esi +
sub eax [ebp+124h] +
cmp eax 1FFFFh +
ja loc_433BB0  +
mov eax [esp+78h] +
test eax eax +
jz loc_433C2E  +
mov dword ptr [esp] 13h +
mov [esp+30h] ecx +
mov [esp+2Ch] edx +
call sub_42B400  +
mov edx [esp+2Ch] +
mov ecx [esp+30h] +
add ecx [ebx+8] +
mov ebp eax +
mov eax [edx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a08x08x +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
test ebp ebp +
jz loc_433E04  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_42A4E0  +
test eax eax +
jz loc_433D40  +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
mov [esp] ebp +
call free  +
add ebx 0Ch +
cmp [esp+20h] ebx +
jbe loc_433D17  +
mov eax [ebx+4] +
movzx edx al +
lea ecx [edx-18h] +
cmp ecx 1 +
jbe loc_433C4E  +
cmp edx 5 +
jnz loc_433C2E  +
mov esi [esp+28h] +
shr eax 8 +
mov edx [esi+68h] +
cmp eax edx +
jb loc_433B50  +
mov ecx [edi+0A0h] +
sub eax edx +
mov edx [ecx+218h] +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_433C8F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_433C80  +
lea ecx [edx-3] +
cmp cl 1 +
jbe loc_433CE0  +
cmp dl 2 +
jz loc_433D01  +
cmp dl 1 +
jnz loc_433E30  +
mov esi [esp+74h] +
movzx edx byte ptr [esi+2] +
and edx 6 +
cmp dl 2 +
jnz loc_433C2E  +
test byte ptr [eax+31h] 3 +
jnz loc_433C2E  +
xor esi esi +
xor ecx ecx +
xor edx edx +
jmp loc_433B95  +
***
xor esi esi +
xor edx edx +
jmp loc_433B95  +
***
mov edx [eax+14h] +
mov ecx [eax+18h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_433D90  +
mov esi [edx+38h] +
add esi ecx +
add esi [eax+1Ch] +
add esi [ebx+8] +
jmp loc_433B95  +
***
mov eax [esp+74h] +
test byte ptr [eax] 1 +
jnz loc_433CC3  +
add ebx 0Ch +
cmp [esp+20h] ebx +
ja loc_433C3B  +
mov edi [esp+44h] +
mov eax [edi+8Ch] +
mov edx [eax+68h] +
test edx edx +
jnz near ptr dword_4338DC+144h  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
jmp near ptr dword_4338DC+144h  +
***
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_42A4E0  +
test eax eax +
jz loc_433E42  +
mov ebp ds:dword_4C12EC +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
test ebp ebp +
jnz loc_433D97  +
mov dword ptr [esp+48h] 1 +
jmp loc_433C2E  +
***
xor esi esi +
jmp loc_433B95  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aAddingStubWith +
call printf  +
mov ecx ds:dword_4C12EC +
test ecx ecx +
jz loc_433D83  +
mov eax [esp+78h] +
mov dword ptr [esp] offset aPreAllocRunI +
mov [esp+4] eax +
call printf  +
jmp loc_433D83  +
***
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_4338DC+204h  +
***
mov ebp [esp+44h] +
mov eax [ebp+8Ch] +
mov eax [eax+68h] +
test eax eax +
jnz loc_433DC7  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_4338DC+204h  +
***
mov dword ptr [esp] 11h +
mov ebp [esp+44h] +
call sub_420C50  +
jmp loc_433E08  +
***
mov esi ebp +
mov ebp [esp+44h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset aBCannotCreateS +
call off_492AE8  +
mov [esp] esi +
call free  +
jmp loc_433E08  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [eax+1Ch] +
cmp dword ptr [edi+2Ch] 4 +
jz loc_433E90  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+11Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_433F98  +
xor esi esi +
jmp loc_433EB9  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_433EE3  +
mov eax [edi+11Ch] +
mov ebp [ebx+24h] +
mov [esp] eax +
mov [esp+4] ebp +
add esi ebp +
call sub_425930  +
test eax eax +
mov [ebx+6Ch] eax +
jnz loc_433EA5  +
test ebp ebp +
jnz loc_433E84  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_433EB3  +
shr esi 2 +
lea eax ds:0[esi*4] +
mov dword ptr [edi+138h] 0 +
mov [edi+13Ch] esi +
mov [esp] eax +
call sub_42B400  +
mov [edi+140h] eax +
mov eax [edi+13Ch] +
shl eax 2 +
mov [esp] eax +
call sub_42B400  +
mov edx ds:dword_4C12EC +
test edx edx +
mov [edi+144h] eax +
jnz loc_433F80  +
mov eax [esp+30h] +
mov ebx 1 +
mov dword ptr [esp+4] offset sub_432600 +
mov [esp+8] eax +
lea eax [edi+0FCh] +
mov [esp] eax +
call sub_42A830  +
mov eax ds:dword_4C12EC +
test eax eax +
jz loc_433E86  +
mov eax [edi+120h] +
mov eax [eax+24h] +
mov dword ptr [esp] offset aFinalStubSecti +
mov [esp+4] eax +
call printf  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+13Ch] +
mov dword ptr [esp] offset aAllocatingIEnt +
mov [esp+4] eax +
call printf  +
jmp loc_433F2C  +
***
xor eax eax +
xor esi esi +
jmp loc_433EED  +
***
jmp sub_433FB0  +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_avr_prop +
mov [esp+6Ch+var_6C] eax +
call sub_41E710  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_34] eax +
jz loc_43457F  +
mov ebx [eax+24h] +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] ebx +
call sub_42B400  +
mov [esp+6Ch+var_58] ebx +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_40] eax +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_41EF20  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_64] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_450E60  +
test eax eax +
mov ecx eax +
mov [esp+6Ch+var_38] eax +
jz loc_434072  +
mov eax [edi+4Ch] +
mov [esp+6Ch+var_60] offset sub_432590 +
mov [esp+6Ch+var_64] 0Ch +
mov [esp+6Ch+var_6C] ecx +
mov [esp+6Ch+var_68] eax +
call qsort  +
cmp ebx 3 +
jbe loc_434510  +
mov eax [esp+6Ch+var_40] +
movzx ecx byte ptr [eax] +
lea esi [eax+4] +
movzx edx byte ptr [eax+1] +
mov [esp+6Ch+var_3C] ecx +
movzx ecx word ptr [eax+2] +
mov [esp+6Ch+var_48] edx +
movzx ebp cx +
lea eax [ebp+ebp*2+0] +
lea eax ds:10h[eax*8] +
mov [esp+6Ch+var_6C] eax +
mov word ptr [esp+6Ch+var_44] cx +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_434510  +
mov edx [esp+6Ch+var_48] +
sub ebx 4 +
mov ecx [esp+6Ch+var_3C] +
mov [esp+6Ch+var_48] ebx +
mov [eax+1] dl +
mov edx [esp+6Ch+var_34] +
mov [eax] cl +
cmp cl 1 +
lea eax [edi+10h] +
mov [edi+4] ebp +
mov [edi+8] edx +
mov [edi+0Ch] eax +
jnz loc_434242  +
mov edx [edx+4Ch] +
mov ebx [esp+6Ch+var_38] +
cmp word ptr [esp+6Ch+var_44] 0 +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
jz loc_434528  +
cmp [esp+6Ch+var_48] 4 +
jbe loc_434242  +
movzx edx word ptr [esp+6Ch+var_44] +
mov ebp [esp+6Ch+var_38] +
mov [esp+6Ch+var_44] edi +
sub edx 1 +
movzx edx dx +
lea edx [edx+edx*2] +
lea ecx ds:0[edx*8] +
xor edx edx +
mov [esp+6Ch+var_30] ecx +
mov ecx esi +
mov edi edx +
mov esi ebx +
mov ebx ecx +
add eax edi +
test ebp ebp +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
jz loc_434176  +
mov eax ebx +
sub eax [esp+6Ch+var_40] +
cmp esi ebp +
ja loc_43415C  +
jmp loc_434162  +
add ebp 0Ch +
cmp esi ebp +
jbe loc_434162  +
cmp eax [ebp+0] +
nop   +
ja loc_434155  +
cmp esi ebp +
jz loc_434362  +
cmp eax [ebp+0] +
lea esi [esi+0] +
jz loc_434370  +
mov eax [esp+6Ch+var_44] +
mov edx [eax+0Ch] +
mov eax [ebx] +
mov [esp+6Ch+var_3C] eax +
lea eax [edx+edi] +
mov ecx [eax] +
test ecx ecx +
jz loc_4342D8  +
movzx edx byte ptr [ebx+4] +
movzx ecx dl +
mov [eax+8] ecx +
mov ecx [esp+6Ch+var_48] +
sub ecx 5 +
cmp dl 1 +
jz loc_4342C0  +
jb loc_4342B0  +
cmp dl 2 +
jz loc_434286  +
cmp dl 3 +
lea esi [esi+0] +
jnz loc_434280  +
cmp ecx 7 +
jbe loc_434280  +
mov edx [ebx+5] +
add ebx 0Dh +
mov ecx [esp+6Ch+var_44] +
sub [esp+6Ch+var_48] 0Dh +
mov [eax+0Ch] edx +
mov edx [ebx-4] +
mov eax [ecx+0Ch] +
mov [eax+edi+10h] edx +
mov eax [ecx+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
cmp edi [esp+6Ch+var_30] +
jz loc_434524  +
add edi 18h +
cmp [esp+6Ch+var_48] 4 +
jbe loc_434280  +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
jmp loc_434136  +
mov eax ds:_iob +
mov [esp+6Ch+var_64] 21h +
mov edi [esp+6Ch+var_44] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] offset aFailedToFindMa +
add eax 40h +
mov [esp+6Ch+var_60] eax +
call fwrite  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_43425D  +
mov [esp+6Ch+var_6C] ebx +
call free  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov [esp+6Ch+var_6C] edi +
call free  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+6Ch+var_44] +
jmp loc_434242  +
cmp ecx 3 +
jbe loc_434280  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
jmp loc_4341F6  +
add ebx 5 +
mov [esp+6Ch+var_48] ecx +
jmp loc_4341F6  +
cmp ecx 3 +
jbe loc_434280  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
jmp loc_4341F6  +
mov ecx [esp+6Ch+var_10] +
test ecx ecx +
mov [esp+6Ch+var_2C] ecx +
jz loc_4342FD  +
mov ecx [ecx+1Ch] +
cmp [esp+6Ch+var_3C] ecx +
mov [esp+6Ch+var_28] ecx +
jnb loc_43446F  +
mov [esp+6Ch+var_10] 0 +
mov eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] offset sub_4325C0 +
mov [esp+6Ch+var_14] eax +
lea eax [esp+6Ch+var_14] +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_41ED30  +
mov eax [esp+6Ch+var_10] +
test eax eax +
mov [esp+6Ch+var_2C] eax +
jz loc_434216  +
mov eax [esp+6Ch+var_44] +
mov ecx [esp+6Ch+var_2C] +
mov edx [eax+0Ch] +
mov ecx [ecx+1Ch] +
lea eax [edx+edi] +
mov [esp+6Ch+var_28] ecx +
mov ecx [esp+6Ch+var_2C] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
sub ecx [esp+6Ch+var_28] +
mov [eax+4] ecx +
lea eax [edx+edi] +
jmp loc_434190  +
xor ebp ebp +
jmp loc_434176  +
mov eax [ebp+4] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
shr [esp+6Ch+var_3C] 8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_28] eax +
jb loc_434495  +
mov edx [esp+6Ch+var_2C] +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
mov edx [edx+218h] +
lea ecx ds:0[eax*4] +
mov [esp+6Ch+var_20] ecx +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_4343DF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_4343D0  +
cmp dl 3 +
jb loc_434517  +
cmp dl 4 +
jbe loc_434586  +
cmp dl 5 +
mov [esp+6Ch+var_24] offset off_492840 +
jnz loc_434517  +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
shl eax 2 +
mov [esp+6Ch+var_20] eax +
mov eax [esp+6Ch+var_2C] +
mov edx [esp+6Ch+var_20] +
mov eax [eax+218h] +
mov eax [eax+edx] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_43443F  +
nop   +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_434430  +
sub edx 3 +
xor ecx ecx +
cmp dl 1 +
ja loc_43444C  +
mov ecx [eax+18h] +
mov eax [esp+6Ch+var_44] +
add ecx [ebp+8] +
mov edx [eax+0Ch] +
mov [esp+6Ch+var_3C] ecx +
mov ecx [esp+6Ch+var_24] +
lea eax [edx+edi] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
mov [eax+4] ecx +
jmp loc_43417D  +
mov [esp+6Ch+var_24] edx +
mov edx [esp+6Ch+var_2C] +
mov ecx eax +
mov eax [esp+6Ch+var_28] +
add eax [edx+24h] +
cmp [esp+6Ch+var_3C] eax +
mov eax ecx +
mov edx [esp+6Ch+var_24] +
jnb loc_4342F5  +
jmp loc_434349  +
mov eax [esp+6Ch+arg_0] +
call sub_431860  +
mov ecx [esp+6Ch+var_3C] +
lea edx [ecx+ecx*4] +
mov eax [eax+edx*4+10h] +
test eax eax +
jz loc_43455A  +
cmp eax 0FFFFFFF1h +
jz loc_4345CE  +
cmp eax 0FFFFFFF2h +
jnz loc_434592  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_492840 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_28] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_20] edx +
jnb loc_434402  +
mov eax [esp+6Ch+arg_0] +
call sub_431860  +
mov edx [esp+6Ch+var_20] +
mov ecx [eax+edx*4] +
jmp loc_43444C  +
xor edi edi +
jmp loc_434242  +
mov [esp+6Ch+var_24] offset off_4928E8 +
jmp loc_434411  +
mov edi [esp+6Ch+var_44] +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_434553  +
mov eax [esp+6Ch+var_38] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax edi +
jmp loc_434273  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_4928E8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_4344E6  +
xor eax eax +
jmp loc_434273  +
mov eax [eax+14h] +
mov [esp+6Ch+var_24] eax +
jmp loc_434411  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_20] edx +
mov [esp+6Ch+var_6C] eax +
call sub_43F6C0  +
mov edx [esp+6Ch+var_20] +
mov [esp+6Ch+var_24] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_4344E6  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_492990 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_4344E6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_4C12E4 +
mov dword ptr [esp+5Ch] 0 +
test eax eax +
jz loc_4349C4  +
mov eax [esp+84h] +
mov ecx 9 +
mov edi offset a_vectors +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax] +
mov esi eax +
cmps   +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_43465D  +
mov esi eax +
mov edi offset a_jumptables +
mov ecx 0Ch +
cmps   +
setnz al  +
movzx eax al +
mov [esp+2Ch] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_434ED6  +
mov eax [esp+88h] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_43468C  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8Ch] +
mov dword ptr [eax] 0 +
mov eax [ebx+118h] +
test eax eax +
jz loc_434940  +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4349B7  +
mov eax [esp+84h] +
mov eax [eax+14h] +
test al 4 +
jz loc_4349B7  +
mov edi [esp+84h] +
mov edx [edi+4Ch] +
test edx edx +
jz loc_4349B7  +
test al 10h +
jz loc_4349B7  +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
test byte ptr [eax+20h] 80h +
mov [esp+24h] eax +
jz loc_4349B7  +
add eax 48h +
mov [esp+44h] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax+2] +
mov [esp+4] edi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_450E60  +
test eax eax +
mov edi eax +
mov [esp+40h] eax +
jz loc_43541D  +
mov eax [esp+84h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_434F6C  +
mov ebp [esp+40h] +
xor esi esi +
jmp loc_4347B0  +
mov edi [esp+80h] +
sub eax edx +
mov ecx [edi+0A0h] +
mov edx [ecx+218h] +
mov ebx [edx+eax*4] +
test ebx ebx +
jz loc_434F53  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_434C64  +
add ebp 0Ch +
cmp [esp+20h] ebp +
jbe loc_434F6C  +
movzx eax byte ptr [ebp+4] +
lea edx [eax-2] +
cmp edx 1 +
jbe loc_4347C1  +
cmp eax 12h +
jnz loc_4347A3  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_434D00  +
mov eax [esp+24h] +
test esi esi +
mov edx [eax+68h] +
jz loc_434C95  +
mov eax [ebp+4] +
shr eax 8 +
cmp eax edx +
jnb loc_434774  +
lea eax [eax+eax*4] +
lea ebx [esi+eax*4] +
mov eax [ebx+10h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_43F6C0  +
mov ecx [ebx] +
test eax eax +
jz loc_434811  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
cmp byte ptr [ebp+4] 12h +
jnz loc_434BE1  +
mov eax [esp+84h] +
mov ebx [ebp+0] +
mov eax [eax+3Ch] +
mov [esp+30h] ebx +
mov eax [eax+1Ch] +
mov edi eax +
mov [esp+34h] eax +
mov eax [esp+84h] +
mov eax [eax+38h] +
mov [esp+38h] eax +
add eax edi +
add eax ebx +
sub ecx eax +
mov [esp+3Ch] eax +
mov eax [esp+2Ch] +
add ecx [ebp+8] +
test eax eax +
jz loc_434EB5  +
cmp ecx 1001h +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF002h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
mov edx dword_492CB4 +
cmp edx 4001h +
sbb ebx ebx +
and ebx 0FFFFFDA8h +
sub ebx 8F4h +
cmp edx 4001h +
lea eax [edx-1] +
sbb edi edi +
and eax ecx +
mov ecx edx +
shr ecx 1 +
and edi 0FFFFFDA8h +
mov [esp+28h] ecx +
mov ecx eax +
add edi 708h +
sub ecx edx +
cmp eax [esp+28h] +
cmovg eax ecx +
cmp eax ebx +
jl loc_434C78  +
mov edx 0FFEh +
sub edx edi +
cmp edx eax +
jl loc_434C78  +
mov eax ds:dword_4C12F0 +
mov edx [esp+30h] +
test eax eax +
jnz loc_4350DB  +
mov eax [esp+84h] +
mov ebx [esp+5Ch] +
mov edi [esp+40h] +
mov eax [eax+8Ch] +
lea ecx [ebx+edx] +
mov [eax+68h] edi +
mov [eax+30h] ebx +
mov eax [esp+24h] +
mov [eax+78h] esi +
movzx edx byte ptr [ebx+edx+1] +
movzx eax byte ptr [ecx] +
and edx 0FFFFFF94h +
and eax 0Eh +
cmp dl 94h +
jz loc_434B9B  +
mov dword ptr [esp+8] offset aElf32_avr_rela +
mov dword ptr [esp+4] 0AA6h +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_420BD0  +
nop   +
mov eax [ebx+120h] +
cmp eax [esp+84h] +
jnz loc_4346A7  +
mov edi [esp+84h] +
mov esi [edi+24h] +
mov edi ds:dword_4C12F0 +
test edi edi +
jnz loc_4354BB  +
mov eax [eax+3Ch] +
mov edi [esp+88h] +
mov eax [eax+94h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp] eax +
call near ptr dword_4338DC+14h  +
mov eax [ebx+120h] +
mov eax [eax+24h] +
cmp eax esi +
jz loc_4349A9  +
mov edi [esp+8Ch] +
mov dword ptr [edi] 1 +
mov ecx ds:dword_4C12F0 +
test ecx ecx +
jnz loc_4350AA  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+88h] +
mov ds:dword_4C12E4 1 +
mov edi [eax+34h] +
test edi edi +
jz loc_43461C  +
mov ecx edi +
mov eax [ecx+64h] +
test eax eax +
jnz loc_434A17  +
jmp loc_434A20  +
mov esi [eax+8Ch] +
lea edx [esi+90h] +
mov eax [eax+0Ch] +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 0 +
test eax eax +
jz loc_434A20  +
cmp eax [eax+3Ch] +
jnz loc_4349F0  +
xor edx edx +
jmp loc_4349FC  +
***
mov ecx [ecx+9Ch] +
test ecx ecx +
jnz loc_4349E2  +
lea esi [esi+0] +
mov [esp] edi +
call sub_433FB0  +
test eax eax +
mov ebp eax +
jz loc_434B09  +
mov eax [eax+4] +
test eax eax +
jz loc_434B09  +
xor ecx ecx +
xor esi esi +
mov [esp+1Ch] edi +
mov edi ecx +
jmp loc_434AB8  +
cmp eax [eax+3Ch] +
jz loc_434AC2  +
mov ebx [eax+8Ch] +
add ebx 90h +
jz loc_434AC2  +
mov edx [ebx] +
cmp edx [ebx+4] +
jz loc_434AE0  +
mov eax [ebx+8] +
lea edx [edx+edx*2] +
add edi 1 +
lea eax [eax+edx*8] +
mov edx [ebp+0Ch] +
add edx esi +
add esi 18h +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov ecx [edx+0Ch] +
mov [eax+0Ch] ecx +
mov ecx [edx+10h] +
mov [eax+10h] ecx +
mov edx [edx+14h] +
mov [eax+14h] edx +
add dword ptr [ebx] 1 +
cmp edi [ebp+4] +
jnb loc_434B05  +
mov eax [ebp+0Ch] +
mov eax [eax+esi] +
test eax eax +
jnz loc_434A60  +
xor ebx ebx +
mov dword ptr [esp+4] 913h +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_420BA0  +
mov edx [ebx] +
cmp edx [ebx+4] +
jnz loc_434A7A  +
nop   +
mov eax [ebx+8] +
add edx 0Ah +
mov [ebx+4] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_42B490  +
mov edx [ebx] +
mov [ebx+8] eax +
jmp loc_434A7D  +
***
mov edi [esp+1Ch] +
mov [esp] ebp +
call free  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_434A30  +
mov eax [esp+88h] +
mov esi [eax+34h] +
test esi esi +
jz loc_43461C  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_434B47  +
jmp loc_434B8C  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_434B8C  +
cmp ebx [ebx+3Ch] +
jz loc_434B40  +
mov eax [ebx+8Ch] +
cmp eax 0FFFFFF70h +
jz loc_434B40  +
mov edx [eax+90h] +
test edx edx +
jz loc_434B40  +
mov eax [eax+98h] +
mov dword ptr [esp+0Ch] offset sub_432560 +
mov dword ptr [esp+8] 18h +
mov [esp+4] edx +
mov [esp] eax +
call qsort  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_434B47  +
mov esi [esi+9Ch] +
test esi esi +
jnz loc_434B31  +
jmp loc_43461C  +
***
cmp al 0Eh +
jnz loc_43508E  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0D0h +
mov eax [ebp+4] +
mov edi [esp+2Ch] +
xor al al +
add eax 3 +
test edi edi +
mov [ebp+4] eax +
mov eax [ebp+0] +
jnz loc_435104  +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+2] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+3] 0 +
mov eax [esp+84h] +
mov edi [ebp+0] +
mov eax [eax+3Ch] +
mov ebx [eax+1Ch] +
mov eax [esp+84h] +
mov ecx [eax+38h] +
mov edx [esp+5Ch] +
add ebx edi +
lea eax [edx+edi+1] +
mov [esp+34h] eax +
movzx eax byte ptr [eax] +
mov [esp+1Ch] al +
lea eax [edx+edi] +
mov [esp+38h] eax +
movzx eax byte ptr [eax] +
mov [esp+28h] al +
lea eax [ebx+ecx] +
movzx ecx byte ptr [esp+1Ch] +
mov [esp+30h] eax +
and ecx 0FFFFFFF0h +
cmp cl 0D0h +
jz loc_434D21  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jz loc_434D3F  +
cmp cl 0C0h +
jnz loc_4347A3  +
mov dword ptr [esp+3Ch] 2 +
mov dword ptr [esp+34h] 2 +
jmp loc_434D70  +
mov eax [ebx+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+1Ch] +
add ecx [ebx+18h] +
add ecx [eax+38h] +
jmp loc_434811  +
***
mov eax [esp+1Ch] +
test eax eax +
jnz loc_4348D5  +
mov ecx [esp+38h] +
mov ebx [esp+34h] +
mov edi [esp+30h] +
jmp loc_434BFB  +
***
test edx edx +
jz loc_434EF1  +
mov esi [eax+78h] +
test esi esi +
jnz loc_4347DC  +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] eax +
call sub_43CC60  +
test eax eax +
mov esi eax +
jz loc_43541D  +
mov eax [esp+24h] +
mov edx [eax+68h] +
jmp loc_4347DC  +
***
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_435539  +
mov [esp+5Ch] eax +
jmp loc_4347CD  +
***
mov ebx dword_492CB0 +
test ebx ebx +
jnz loc_434EFC  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jnz loc_4347A3  +
movzx eax byte ptr [esp+28h] +
and eax 0Eh +
cmp al 0Eh +
jz loc_435143  +
cmp cl 0C0h +
jz loc_434C4F  +
cmp al 0Ch +
jnz loc_4347A3  +
mov dword ptr [esp+3Ch] 4 +
mov dword ptr [esp+34h] 4 +
mov eax [esp+3Ch] +
mov ebx [esp+84h] +
add eax edi +
lea ecx [eax+1] +
cmp ecx [ebx+24h] +
jnb loc_4347A3  +
cmp byte ptr [edx+eax+1] 95h +
jnz loc_4347A3  +
cmp byte ptr [edx+eax] 8 +
jnz loc_4347A3  +
mov eax ds:dword_4C12F0 +
test eax eax +
jz loc_434DBD  +
cmp dword ptr [esp+34h] 2 +
jz loc_435584  +
cmp dword ptr [esp+34h] 4 +
jz loc_435568  +
cmp edi 1 +
jbe loc_4347A3  +
mov edx [esp+5Ch] +
movzx eax byte ptr [edx+edi-1] +
movzx edx byte ptr [edx+edi-2] +
cmp al 99h +
jz loc_43550C  +
cmp al 9Bh +
jz loc_435485  +
mov ebx eax +
and ebx 0FFFFFFFEh +
cmp bl 0FCh +
jnz loc_43546E  +
shr dl 3 +
mov ecx edx +
and ecx 1 +
and eax 0FFFFFFFCh +
cmp al 10h +
jz loc_435485  +
test ecx ecx +
jz loc_435485  +
mov eax [esp+84h] +
add edi [esp+3Ch] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov [esp] eax +
call sub_440BE0  +
mov ecx eax +
mov eax [esp+24h] +
mov ebx [eax+78h] +
mov eax [eax+68h] +
lea edx [eax+eax*4] +
lea edx [ebx+edx*4] +
cmp ebx edx +
jnb loc_4351BA  +
test ebx ebx +
jz loc_4351BA  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_434E77  +
add ebx 14h +
cmp edx ebx +
jbe loc_4351B3  +
test ebx ebx +
jz loc_4351B3  +
mov eax [esp+1Ch] +
cmp [ebx] eax +
jnz loc_434E64  +
cmp [ebx+10h] ecx +
jnz loc_434E64  +
mov eax ds:dword_4C12F0 +
xor edi edi +
test eax eax +
jz loc_434E64  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aLocalLabelPrev +
mov [esp+48h] edx +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov edx [esp+48h] +
mov ecx [esp+38h] +
jmp loc_434E64  +
***
cmp ecx 0FFFh +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF000h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
jmp loc_434878  +
***
mov eax [esp+88h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRM_0 +
call eax  +
jmp loc_434672  +
***
mov eax [ebp+4] +
shr eax 8 +
jmp loc_434774  +
***
mov eax [esp+84h] +
lea ecx [edi+3] +
cmp ecx [eax+24h] +
jnb loc_4347A3  +
cmp byte ptr [edx+edi+2] 8 +
jnz loc_4347A3  +
cmp byte ptr [edx+edi+3] 95h +
jnz loc_4347A3  +
movzx eax byte ptr [esp+1Ch] +
mov edx ds:dword_4C12F0 +
mov edi [esp+34h] +
and eax 0FFFFFFEFh +
test edx edx +
mov [edi] al +
jnz loc_435513  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_4347A3  +
***
mov dword ptr [esp+4] 0A34h +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_420BA0  +
jmp loc_434794  +
***
mov eax [esp+8Ch] +
mov eax [eax] +
test eax eax +
jnz loc_43504A  +
mov eax [esp+84h] +
mov eax [eax+3Ch] +
cmp [esp+84h] eax +
jz loc_4355A0  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov [esp+1Ch] eax +
lea ebp [eax+90h] +
mov edx [ebp+0] +
test edx edx +
jz loc_43504A  +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+1Ch] +
lea edx [eax+eax*2] +
mov eax [ebp+8] +
lea esi [eax+edx*8] +
mov eax [esi+8] +
sub eax 2 +
cmp eax 1 +
ja loc_435038  +
mov ecx [esi+0Ch] +
mov eax 1 +
mov ebx [esi+14h] +
shl eax cl +
mov edx ebx +
mov ecx eax +
sub edx eax +
cmp eax ebx +
jbe loc_434FF2  +
jmp loc_435038  +
mov edx ebx +
mov ebx edx +
mov edi ecx +
sub ebx eax +
add ecx eax +
cmp edx eax +
jnb loc_434FF0  +
test edi edi +
mov [esi+14h] edx +
jle loc_435038  +
mov ecx [esi+4] +
mov edx [esp+84h] +
mov eax [esp+80h] +
sub ecx edi +
mov [esi+4] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call sub_431AE0  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
add dword ptr [esp+1Ch] 1 +
mov eax [esp+1Ch] +
cmp [ebp+0] eax +
ja loc_434FBE  +
mov edx [esp+5Ch] +
test edx edx +
jz loc_4350CC  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp edx [eax+30h] +
jz loc_435074  +
mov edi [esp+88h] +
test byte ptr [edi+2] 40h +
jz loc_4350C4  +
mov [eax+30h] edx +
mov edi [esp+40h] +
cmp [eax+68h] edi +
jz loc_4349B7  +
mov [esp] edi +
call free  +
jmp loc_4349B7  +
***
cmp al 0Ch +
jnz loc_434922  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0C0h +
jmp loc_434BB2  +
***
mov [esp+4] eax +
mov dword ptr [esp] offset aSizeOfStubSect +
call printf  +
mov eax 1 +
jmp loc_434684  +
***
mov [esp] edx +
call free  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
jmp loc_435074  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aShrinkingJumpC +
mov [esp+8] eax +
mov eax [esp+3Ch] +
mov [esp+4] eax +
call printf  +
mov edx [ebp+0] +
jmp loc_4348E6  +
***
lea ecx [eax+2] +
mov edx [esp+84h] +
mov eax [esp+80h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_431AE0  +
test eax eax +
jz loc_435408  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_434BE1  +
***
mov eax dword_492CB0 +
test eax eax +
jz loc_434C46  +
mov ecx [esp+84h] +
lea eax [edi+5] +
cmp eax [ecx+24h] +
jnb loc_4347A3  +
cmp byte ptr [edx+edi+4] 8 +
jnz loc_4347A3  +
cmp byte ptr [edx+edi+5] 95h +
jnz loc_4347A3  +
movzx eax byte ptr [esp+28h] +
mov edi [esp+38h] +
and eax 0FFFFFFFDh +
mov [edi] al +
mov eax ds:dword_4C12F0 +
test eax eax +
jz loc_434F41  +
mov eax [ecx] +
mov dword ptr [esp] offset aConvertedCallR +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_434F41  +
***
mov eax [esp+24h] +
mov eax [eax+68h] +
mov ecx [esp+80h] +
mov edx [ecx+0A0h] +
mov ecx [esp+24h] +
mov ebx [edx+218h] +
mov edx [ecx+60h] +
shr edx 4 +
sub edx eax +
lea ecx [ebx+edx*4] +
cmp ebx ecx +
jnb loc_435241  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_4351F5  +
add ebx 4 +
cmp ecx ebx +
jbe loc_435241  +
mov eax [ebx] +
movzx edx byte ptr [eax+0Ch] +
sub edx 3 +
cmp dl 1 +
ja loc_4351EE  +
mov edx [esp+84h] +
cmp [eax+14h] edx +
jnz loc_4351EE  +
mov edx [esp+1Ch] +
cmp [eax+18h] edx +
jnz loc_4351EE  +
mov eax ds:dword_4C12F0 +
xor edi edi +
test eax eax +
jz loc_4351EE  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aGlobalLabelPre +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov ecx [esp+38h] +
jmp loc_4351EE  +
***
mov eax [esp+80h] +
mov eax [eax+64h] +
mov ecx eax +
mov [esp+38h] eax +
mov eax edi +
test al al +
mov [esp+4Fh] al +
jz loc_4347A3  +
test ecx ecx +
jz loc_4353BE  +
mov eax [esp+3Ch] +
add eax [esp+30h] +
mov edi [esp+24h] +
mov [esp+48h] ebp +
mov [esp+1Ch] eax +
mov eax [esp+38h] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
test ebx ebx +
jz loc_4354D6  +
mov eax [esp+38h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea ebp [ebx+eax*4] +
cmp ebx ebp +
jb loc_4352B7  +
jmp loc_4353A7  +
cmp [esp+1Ch] ecx +
jz loc_435312  +
add ebx 0Ch +
cmp ebp ebx +
jbe loc_4353A7  +
test ebx ebx +
jz loc_4353A7  +
test esi esi +
mov eax [edi+68h] +
jz loc_435340  +
mov edx [ebx+4] +
xor ecx ecx +
shr edx 8 +
cmp edx eax +
jnb loc_4352A6  +
lea eax [edx+edx*4] +
lea edx [esi+eax*4] +
mov eax [edx+10h] +
mov [esp+28h] edx +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_43F6C0  +
mov edx [esp+28h] +
mov ecx [edx] +
test eax eax +
jz loc_43539F  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
add ecx [ebx+8] +
cmp [esp+1Ch] ecx +
jnz loc_4352AC  +
mov ebx ds:dword_4C12F0 +
mov ebp [esp+48h] +
test ebx ebx +
jz loc_4347A3  +
mov eax [esp+1Ch] +
mov dword ptr [esp] offset aRetFromRjmpJmp +
mov [esp+4] eax +
call printf  +
jmp loc_4347A3  +
***
test eax eax +
jz loc_435398  +
mov esi [edi+78h] +
test esi esi +
jnz loc_4352C6  +
mov [esp+8] eax +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
call sub_43CC60  +
test eax eax +
mov esi eax +
jz loc_4353A7  +
mov eax [edi+68h] +
jmp loc_4352C6  +
***
xor ecx ecx +
jmp loc_4352A6  +
***
add ecx [ebx+8] +
jmp loc_4352A6  +
***
mov eax [esp+38h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+38h] eax +
jnz loc_43527B  +
mov ebp [esp+48h] +
cmp byte ptr [esp+4Fh] 0 +
jz loc_4347A3  +
mov ecx ds:dword_4C12F0 +
test ecx ecx +
jnz loc_4355A7  +
mov ecx [esp+3Ch] +
mov edx [esp+84h] +
mov eax [esp+80h] +
add ecx [ebp+0] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_431AE0  +
test eax eax +
jnz loc_434F41  +
test esi esi +
jz loc_43541D  +
mov eax [esp+24h] +
cmp [eax+78h] esi +
jz loc_43541D  +
mov [esp] esi +
call free  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_43543F  +
mov edi [esp+84h] +
mov edx [edi+8Ch] +
cmp eax [edx+30h] +
jz loc_43543F  +
mov [esp] eax +
call free  +
mov edi [esp+40h] +
test edi edi +
jz loc_434682  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp [eax+68h] edi +
jz loc_434682  +
mov [esp] edi +
call free  +
jmp loc_434682  +
***
cmp bl 0FEh +
mov ecx 1 +
jnz loc_434DFA  +
and edx 8 +
jnz loc_434DFA  +
mov eax ds:dword_4C12F0 +
test eax eax +
jz loc_4347A3  +
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aPrecedingSkipI +
mov [esp+8] eax +
mov eax [esp+30h] +
add eax 2 +
mov [esp+4] eax +
call printf  +
jmp loc_4347A3  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aRelaxingTheStu +
call printf  +
mov eax [ebx+120h] +
jmp loc_43496B  +
***
mov eax [esp+38h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_450E60  +
mov ebx eax +
jmp loc_435290  +
***
xor ecx ecx +
jmp loc_434DFA  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aConvertedRcall +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_434F41  +
***
lea eax [esp+5Ch] +
mov [esp+8] eax +
mov eax [esp+84h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_41F070  +
test eax eax +
jnz loc_4347CD  +
jmp loc_435408  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundJmpRetSeq +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_434DBD  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundRjmpRetSe +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_434DBD  +
***
xor ebp ebp +
jmp loc_434FAB  +
***
mov eax [esp+30h] +
add eax [esp+34h] +
mov dword ptr [esp] offset aUnreachableRet +
mov [esp+4] eax +
call printf  +
jmp loc_4353D7  +
***
mov [esp] ebx +
call sub_41ED30  +
mov edx [esp+1Ch] +
xor eax eax +
test edx edx +
jnz loc_435652  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_451C00  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
test byte ptr [eax+14h] 4 +
jz loc_4356A6  +
mov eax [edx+0A0h] +
movzx eax word ptr [eax+26h] +
mov [esp+4] edx +
mov dword ptr [esp] offset aBRelocationsIn +
mov [esp+8] eax +
call off_492AE8  +
mov dword ptr [esp] 3 +
call sub_420C50  +
mov eax [esp+28h] +
mov dword ptr [eax] 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov ds:dword_4C1474 eax +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 227h +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+8] 20Ch +
mov dword ptr [esp+4] offset a____Binutil_24 +
jmp sub_420BA0  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov eax [eax+0A0h] +
mov ebx [eax] +
test ebx ebx +
js loc_435720  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
mov dword ptr [esp+4] 1BDh +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1B3h +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1ACh +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1A5h +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 19Eh +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 197h +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 18Ah +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 17Dh +
mov dword ptr [esp] offset a____Binutil_24 +
call sub_420BA0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_423C80  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_425930  +
test eax eax +
jz loc_43585E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 8 +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_425850  +
mov edx [esp+28h] +
test esi esi +
mov [eax] esi +
mov [eax+4] edx +
jz loc_4358A1  +
or dword ptr [ebx+28h] 200h +
mov [ebx+0A0h] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+18h+var_18] offset aBfdPlugin +
lea ebx [esp+18h+arg_8] +
call printf  +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call vprintf  +
mov [esp+18h+var_18] 0Ah +
call putchar  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 9Ch +
mov dword ptr [ecx] 0 +
mov [esp+0A8h+var_A8] eax +
call ds:LoadLibraryA  +
sub esp 4 +
test eax eax +
jz loc_435AA0  +
mov [esp+0A8h+var_A4] offset aOnload +
mov [esp+0A8h+var_A8] eax +
call ds:GetProcAddress  +
sub esp 8 +
test eax eax +
jz loc_435A93  +
lea edx [ebp+var_68] +
mov [ebp+var_68] 0Bh +
mov [ebp+var_64] offset sub_4358B0 +
mov [ebp+var_60] 5 +
mov [ebp+var_5C] offset loc_4356B0 +
mov [ebp+var_58] 8 +
mov [ebp+var_54] offset loc_435870 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [esp+0A8h+var_A8] edx +
call eax  +
test eax eax +
jnz loc_435A93  +
mov dword ptr [esi] 1 +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 8 +
mov [ebx+2Ch] al +
mov ecx ds:dword_4C1474 +
test ecx ecx +
jz loc_435A93  +
mov esi [ebx+8Ch] +
mov eax [ebx] +
mov [ebp+var_8C] 0 +
test esi esi +
mov [ebp+var_88] eax +
jz loc_435AC0  +
mov eax [ebx+38h] +
mov edx [ebx+3Ch] +
mov [ebp+var_80] eax +
mov eax [ebx+88h] +
mov [ebp+var_7C] edx +
mov eax [eax+4] +
mov [ebp+var_74] 0 +
mov [ebp+var_78] eax +
mov eax [esi+8] +
test eax eax +
jz loc_435A87  +
mov [esp+0A8h+var_A8] eax +
call _fileno_0  +
mov edx [ebx+8Ch] +
test edx edx +
mov [ebp+var_84] eax +
jz loc_435AF0  +
mov [esp+0A8h+var_9C] 1 +
mov [esp+0A8h+var_A4] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A8] eax +
mov [ebp+var_70] ebx +
call j__lseeki64  +
mov esi eax +
mov edi edx +
lea eax [ebp+var_8C] +
mov [esp+0A8h+var_A4] eax +
lea eax [ebp+var_88] +
mov [esp+0A8h+var_A8] eax +
call ds:dword_4C1474  +
mov eax [ebp+var_84] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] esi +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_A8] eax +
call j__lseeki64  +
mov eax [ebp+var_8C] +
test eax eax +
jz loc_435A93  +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 4 +
mov [ebx+2Ch] al +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A8] esi +
call sub_4310B0  +
test eax eax +
jnz loc_435AE3  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A4] offset aUnableToLoadDl +
mov [esp+0A8h+var_A8] offset aS_0 +
call off_492AE8  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_80] 0 +
mov esi ebx +
mov [ebp+var_7C] 0 +
mov [ebp+var_78] 0 +
mov [ebp+var_74] 0 +
jmp loc_4359DE  +
mov eax [esi+8] +
jmp loc_4359E9  +
lea edx [ebp+var_48] +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call ds:_fstati64  +
test eax eax +
jnz loc_435A93  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
mov [ebp+var_78] eax +
mov eax [ebp+var_84] +
mov [ebp+var_74] edx +
jmp loc_435A05  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+30h] +
mov eax [ebp+0A0h] +
mov edx [eax] +
mov esi [eax+4] +
mov ds:dword_4C13C0 offset a_text +
mov ds:dword_4C1314 1000h +
test edx edx +
mov [esp+0Ch] edx +
jle loc_435BC6  +
***
mov [esp+arg_0] 18h +
mov [esp+0] ebp +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_435C30  +
mov eax [esp+arg_30] +
mov [eax+edi*4] ebx +
mov ecx [esi+8] +
mov eax [esi] +
mov [ebx] ebp +
mov dword ptr [ebx+8] 0 +
cmp ecx 4 +
mov [ebx+4] eax +
ja loc_435BF7  +
mov edx 1 +
mov eax 2 +
shl edx cl +
test dl 15h +
jz loc_435BF0  +
cmp ecx 4 +
mov [ebx+0Ch] eax +
ja loc_435C18  +
jmp ds:off_4AF5B0[ecx*4]  +
***
mov dword ptr [ebx+10h] offset off_4928E8 +
mov dword ptr [ebx+10h] offset dword_4C13C0 +
jmp loc_435BB7  +
***
mov dword ptr [ebx+10h] offset unk_4C1300 +
jmp loc_435BB7  +
***
and edx 0Ah +
mov al 82h +
jnz loc_435B9C  +
mov [esp-2Ch+arg_2C] 1D1h +
mov [esp-2Ch+arg_28] offset a____Binutil_24 +
call sub_420BA0  +
mov ecx [esi+8] +
xor eax eax +
mov [ebx+0Ch] eax +
cmp ecx 4 +
jbe loc_435BA4  +
mov [esp-2Ch+arg_2C] 1FDh +
mov [esp-2Ch+arg_28] offset a____Binutil_24 +
call sub_420BA0  +
jmp loc_435BB7  +
***
mov [esp+arg_0] 1E8h +
mov dword ptr [esp+0] offset a____Binutil_24 +
call sub_420BA0  +
jmp loc_435B6E  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_4C146C +
mov ebx [esp+80h] +
test eax eax +
jz loc_435C74  +
mov [esp] ebx +
call eax  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jz loc_435C90  +
xor eax eax +
cmp dl 4 +
jnz loc_435C6C  +
mov eax [ebx+4] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx dword_492E80 +
test ecx ecx +
jz loc_435CC8  +
mov eax ds:dword_4C1468 +
test eax eax +
jz loc_435CD0  +
mov ecx offset dword_492E80 +
mov edx ebx +
call sub_4358F0  +
test eax eax +
jz loc_435CC8  +
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jmp loc_435C7D  +
***
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_435C6C  +
***
mov edx ds:dword_4C1470 +
test edx edx +
jz loc_435CC8  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset a__LibBfdPlugin +
mov dword ptr [esp] offset aHomeJenkinsM_0 +
call sub_4758B0  +
mov dword ptr [esp+4] offset aHomeJenkinsM_0 +
mov esi eax +
mov [esp+8] eax +
mov eax ds:dword_4C1470 +
mov [esp] eax +
call sub_488CB0  +
mov [esp] esi +
mov edi eax +
mov [esp+1Ch] eax +
call free  +
mov [esp] edi +
call sub_48CC00  +
test eax eax +
mov ebp eax +
jz loc_435CBC  +
mov esi [esp+1Ch] +
mov [esp+80h] ebx +
jmp loc_435D50  +
mov [esp] edi +
call free  +
test ebx ebx +
jnz loc_435DF1  +
mov [esp] ebp +
call sub_48CDC0  +
test eax eax +
jz loc_435DCD  +
add eax 8 +
xor ebx ebx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset asc_4AF630 +
mov [esp] esi +
call sub_4758B0  +
mov edi eax +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
call ds:_stati64  +
test eax eax +
jnz loc_435DA3  +
movzx eax word ptr [esp+36h] +
and ax 0F000h +
cmp ax 8000h +
jz loc_435DB7  +
mov eax dword_492E80 +
test eax eax +
jg loc_435D40  +
mov eax [esp+2Ch] +
mov dword_492E80 eax +
jmp loc_435D40  +
***
mov edx [esp+80h] +
lea ecx [esp+2Ch] +
mov eax edi +
call sub_4358F0  +
mov ebx eax +
jmp loc_435DA3  +
***
mov ebx [esp+80h] +
xor edi edi +
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call sub_48CEE0  +
mov eax edi +
jmp loc_435CAF  +
***
mov edi ebx +
mov ebx [esp+80h] +
jmp loc_435DD6  +
***
mov eax [esp+4] +
mov ds:dword_4C1470 eax +
retn   +
***
mov eax [esp+4] +
test eax eax +
mov ds:dword_4C1468 eax +
setnz al  +
movzx eax al +
mov dword_492E80 eax +
retn   +
***
mov edx dword_492E80 +
xor eax eax +
test edx edx +
setnle al  +
retn   +
***
xor eax eax +
cmp dword ptr [esp+4] offset off_4AF640 +
setz al  +
retn   +
***
mov eax [esp+4] +
mov ds:dword_4C146C eax +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov ebp [esp+3Ch] +
mov edi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_435F33  +
mov edx [esp+44h] +
test edx edx +
jz loc_435EA6  +
mov eax [esp+34h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_435EB3  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_435F33  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov [esi+4] ebx +
add ebp [eax+20h] +
mov eax [esp+44h] +
mov [esi+8] ebp +
mov [esi+0Ch] eax +
mov eax [edi+4] +
test eax eax +
jz loc_435F01  +
cmp ebp [eax+8] +
jnb loc_435F40  +
mov edx [edi] +
mov eax edi +
test edx edx +
jnz loc_435F18  +
jmp loc_435F1D  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_435F1D  +
cmp ebp [edx+8] +
ja loc_435F10  +
mov [esi] edx +
mov [eax] esi +
mov eax [esi] +
test eax eax +
jnz loc_435EA6  +
mov [edi+4] esi +
jmp loc_435EA6  +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [eax] esi +
mov eax 1 +
mov dword ptr [esi] 0 +
mov [edi+4] esi +
jmp loc_435EAB  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_435F80  +
mov dword ptr [edx+84h] offset asc_49BE80 +
mov eax 1 +
retn   +
***
jmp sub_4237A0  +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_4C1480 +
mov ebx [esp+20h] +
test eax eax +
jz loc_435FD2  +
mov dword ptr [esp+4] 8 +
mov [esp] ebx +
call sub_425850  +
test eax eax +
jz loc_435FE3  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
mov ds:dword_4C1480 1 +
call locret_488170  +
jmp loc_435FA1  +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4361AA  +
lea edi [esp+2Eh] +
mov ebx [esp+1Ch] +
mov eax [ebx+8] +
mov esi [ebx+4] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov edx eax +
shr edx 18h +
mov ebp esi +
and edx 0Fh +
movzx edx ds:byte_4AF9D4[edx] +
mov byte ptr [esp+2Eh] 40h +
mov byte ptr [esp+37h] 0Dh +
mov byte ptr [esp+38h] 0Ah +
mov [esp+30h] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_4AF9D4[edx] +
mov [esp+2Fh] dl +
mov edx eax +
shr edx 10h +
and edx 0Fh +
movzx edx ds:byte_4AF9D4[edx] +
mov [esp+32h] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_4AF9D4[edx] +
mov [esp+31h] dl +
mov edx eax +
shr edx 8 +
and edx 0Fh +
movzx edx ds:byte_4AF9D4[edx] +
mov [esp+34h] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_4AF9D4[edx] +
mov [esp+33h] dl +
mov edx eax +
shr eax 4 +
and edx 0Fh +
and eax 0Fh +
movzx edx ds:byte_4AF9D4[edx] +
movzx eax ds:byte_4AF9D4[eax] +
mov [esp+36h] dl +
mov [esp+35h] al +
mov eax [esp+80h] +
mov [esp+8] eax +
call sub_429DA0  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_436198  +
mov dword ptr [esp+14h] 0 +
mov eax esi +
sub eax [esp+14h] +
mov edx 10h +
mov esi ebp +
cmp eax 10h +
cmova eax edx +
lea ebp [ebp+eax+0] +
cmp ebp esi +
mov [esp+18h] eax +
jbe loc_4361B7  +
mov edx esi +
mov eax edi +
movzx ebx byte ptr [edx] +
add edx 1 +
add eax 3 +
mov ecx ebx +
and ecx 0Fh +
movzx ecx ds:byte_4AF9D4[ecx] +
shr bl 4 +
movzx ebx bl +
mov [eax-2] cl +
movzx ecx ds:byte_4AF9D4[ebx] +
mov [eax-3] cl +
cmp edx ebp +
mov byte ptr [eax-1] 20h +
jnz loc_436116  +
add esi 1 +
mov eax 1 +
sub eax esi +
add eax ebp +
lea ebx [eax+eax*2] +
add ebx edi +
mov eax [esp+80h] +
add ebx 2 +
mov byte ptr [ebx-2] 0Dh +
mov byte ptr [ebx-1] 0Ah +
sub ebx edi +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_429DA0  +
cmp ebx eax +
jnz loc_4361BB  +
mov eax [esp+18h] +
add [esp+14h] eax +
mov eax [esp+1Ch] +
mov eax [eax+0Ch] +
cmp eax [esp+14h] +
ja loc_4360F1  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_436016  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
jmp loc_436157  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 4 +
mov eax [eax] +
mov [esp+0Ch+var_C] edx +
movzx edx byte ptr [eax] +
movzx ebx ds:byte_4BAE60[edx] +
cmp bl 63h +
jz loc_436252  +
test ebx ebx +
mov esi 0Fh +
lea edx [eax+1] +
lea ebp [ebx-1] +
cmovnz esi ebp +
cmp edx ecx +
jnb loc_436264  +
movzx eax byte ptr [eax+1] +
movzx eax ds:byte_4BAE60[eax] +
cmp al 63h +
jz loc_436252  +
sub esi 1 +
xor ebx ebx +
jmp loc_43622C  +
cmp edx ecx +
jz loc_436260  +
movzx eax byte ptr [edx] +
sub esi 1 +
movzx eax ds:byte_4BAE60[eax] +
cmp al 63h +
jz loc_436252  +
shl ebx 4 +
add edx 1 +
mov ebp ebx +
movzx ebx al +
or ebx ebp +
cmp esi 0FFFFFFFFh +
jnz loc_436217  +
mov eax 1 +
mov [edi] edx +
mov edi [esp+0Ch+var_C] +
mov [edi] ebx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_436243  +
xor eax eax +
xor ebx ebx +
jmp loc_436243  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [edx] +
movzx ebx byte ptr [edi] +
movzx ebx ds:byte_4BAE60[ebx] +
cmp bl 63h +
jz loc_4362D0  +
movzx esi bl +
mov ebx 10h +
test esi esi +
lea ebp [edi+1] +
cmovz esi ebx +
cmp ebp [esp+4+arg_0] +
jnb loc_4362DA  +
xor bl bl +
mov [esp+4+var_4] edx +
movzx edx byte ptr [edi+ebx+1] +
mov [eax+ebx] dl +
add ebx 1 +
cmp esi ebx +
ja loc_4362A3  +
mov edx [esp+4+var_4] +
mov byte ptr [eax+ebx] 0 +
add ebp ebx +
xor eax eax +
cmp ebx esi +
mov [edx] ebp +
setz al  +
mov [ecx] esi +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_4362B5  +
***
mov [ecx-4] edx +
mov edx [edx+18h] +
sub ecx 4 +
test edx edx +
jnz loc_436305  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx 8 +
sub esp 0Ch +
mov esi [eax] +
mov [esp+18h+var_18] edx +
mov edi edx +
shr edi cl +
and edi 0Fh +
jnz loc_436370  +
sub ebx 1 +
sub ecx 4 +
cmp ebx 1 +
jnz loc_436346  +
mov byte ptr [esi] 31h +
add esi 2 +
mov byte ptr [esi-1] 30h +
mov [eax] esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+18h+var_18] edx +
lea edi [ebx+30h] +
lea edx [esi+1] +
mov ebp edx +
mov [esp+18h+var_14] edx +
mov edx edi +
mov [esi] dl +
mov edx [esp+18h+var_18] +
lea edi [esi+ebx+1] +
mov [esp+18h+var_10] eax +
mov esi ebp +
mov ebp edx +
add esi 1 +
shr ebp cl +
sub ecx 4 +
and ebp 0Fh +
cmp esi edi +
movzx eax ss:byte_4AFCF4[ebp] +
mov [esi-1] al +
jnz loc_436390  +
mov eax [esp+18h+var_10] +
add ebx [esp+18h+var_14] +
mov [eax] ebx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
push ebx  +
and edx 0FFFFE000h +
sub esp 14h +
mov eax [eax+0A0h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jnz loc_4363FA  +
jmp loc_436410  +
mov ebx [ebx+2104h] +
test ebx ebx +
jz loc_436410  +
cmp [ebx+2100h] edx +
jnz loc_4363F0  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
xor ebx ebx +
test ecx ecx +
mov [esp+18h+var_C] edx +
jz loc_436402  +
mov [esp+18h+var_14] 2108h +
mov [esp+18h+var_18] esi +
call sub_425930  +
test eax eax +
jz loc_436402  +
mov ecx [esi+0A0h] +
mov ebx eax +
mov edx [esp+18h+var_C] +
mov ecx [ecx+0Ch] +
mov [eax+2100h] edx +
mov [eax+2104h] ecx +
mov edx [esi+0A0h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 1Ch +
mov [esp] ebx +
call sub_425930  +
test eax eax +
jz loc_436485  +
mov [eax] ebx +
mov dword ptr [eax+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4237A0  +
mov edx 1 +
test eax eax +
jnz loc_4364C0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_423C80  +
***
push edi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 10h +
test edx edx +
mov edi [eax] +
jz loc_436695  +
mov [esp+14h+var_14] edx +
call strlen  +
cmp eax 0Fh +
jle loc_436680  +
lea edx [edi+1] +
mov eax 0Fh +
mov byte ptr [edi] 30h +
lea edi [eax+1] +
xor ecx ecx +
lea esi [esi+0] +
movzx eax byte ptr [ebx+ecx] +
mov [edx+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_436660  +
add ecx edx +
mov [esi] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_436695  +
movzx ecx ds:byte_4AFCF4[eax] +
lea edx [edi+1] +
sub eax 1 +
mov [edi] cl +
jmp loc_436658  +
lea edx [edi+1] +
xor eax eax +
mov byte ptr [edi] 31h +
mov ebx offset asc_4AFA1C +
jmp loc_436658  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_425850  +
test eax eax +
jz loc_4366F7  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+arg_C] +
cmp eax 33h +
jz loc_4367D0  +
cmp eax 36h +
jnz loc_4367C1  +
lea edx [esp+4Ch+var_20] +
mov ecx ebx +
lea eax [esp+4Ch+arg_8] +
call sub_4361D0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4367C6  +
mov eax [esp+4Ch+arg_8] +
movzx edx byte ptr [eax] +
mov ecx eax +
test dl dl +
jz loc_4367C1  +
lea edi [ebx-1] +
cmp eax edi +
jnb loc_4367C1  +
mov esi [esp+4Ch+var_20] +
jmp loc_436766  +
cmp eax edi +
jnb loc_4367C1  +
mov ecx eax +
movzx ecx byte ptr [ecx+1] +
movzx edx ds:byte_4BAE60[edx] +
movzx ebx ds:byte_4BAE60[ecx] +
shl edx 4 +
add ebx edx +
jz loc_4367A9  +
mov edx esi +
mov ecx 1 +
mov eax ebp +
and esi 1FFFh +
call sub_4363D0  +
mov [eax+esi] bl +
shr esi 5 +
mov byte ptr [eax+esi+2000h] 1 +
mov eax [esp+4Ch+arg_8] +
mov esi [esp+4Ch+var_20] +
mov edx eax +
add esi 1 +
add eax 2 +
mov [esp+4Ch+arg_8] eax +
mov [esp+4Ch+var_20] esi +
movzx edx byte ptr [edx+2] +
test dl dl +
jnz loc_436760  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebx +
lea ecx [esp+4Ch+var_28] +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_436270  +
test eax eax +
jnz loc_4367F2  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] ebp +
call sub_41E710  +
test eax eax +
mov esi eax +
jz loc_436A32  +
lea eax [esi+1Ch] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_38] eax +
mov edx [esp+4Ch+arg_8] +
cmp ebx edx +
jbe loc_4367C1  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_4367C1  +
sub ecx 30h +
cmp cl 8 +
ja loc_4367E8  +
mov eax 1 +
shl eax cl +
test eax 1DDh +
jnz loc_4368B0  +
test al 2 +
jz loc_4367E8  +
add edx 1 +
mov ecx ebx +
mov [esp+4Ch+arg_8] edx +
mov edx [esp+4Ch+var_38] +
lea eax [esp+4Ch+arg_8] +
call sub_4361D0  +
test eax eax +
jz loc_4367E8  +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_4361D0  +
test eax eax +
jz loc_4367E8  +
mov eax [esi+1Ch] +
mov edx [esp+4Ch+var_24] +
cmp eax edx +
jbe loc_4368A0  +
mov [esp+4Ch+var_24] eax +
mov dword ptr [esi+24h] 0 +
mov edx [esp+4Ch+arg_8] +
mov dword ptr [esi+14h] 103h +
cmp ebx edx +
ja loc_436823  +
jmp loc_4367C1  +
sub edx eax +
test edx edx +
mov [esi+24h] edx +
jns loc_43688B  +
xor eax eax +
jmp loc_4367EA  +
mov [esp+4Ch+var_48] 1Ch +
mov [esp+4Ch+var_4C] ebp +
call sub_425850  +
mov edi eax +
mov eax [esp+4Ch+arg_8] +
test edi edi +
movzx ecx byte ptr [eax] +
mov [esp+4Ch+var_31] cl +
jz loc_4367E8  +
add eax 1 +
mov [edi] ebp +
mov [esp+4Ch+arg_8] eax +
mov eax [ebp+0A0h] +
or dword ptr [ebp+28h] 200h +
add dword ptr [ebp+7Ch] 1 +
mov edx [eax+8] +
mov [edi+18h] edx +
lea edx [esp+4Ch+var_28] +
mov [eax+8] edi +
mov ecx edx +
mov [esp+4Ch+var_4C] ebx +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_436270  +
test eax eax +
jz loc_4367E8  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
lea eax [edx+1] +
mov [esp+4Ch+var_48] eax +
call sub_425850  +
test eax eax +
mov [edi+4] eax +
jz loc_4367E8  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
add edx 1 +
mov [esp+4Ch+var_44] edx +
lea edx [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] edx +
call memcpy  +
movzx ecx [esp+4Ch+var_31] +
xor eax eax +
mov [edi+10h] esi +
cmp cl 34h +
setle al  +
add eax 1 +
mov [edi+0Ch] eax +
mov eax ecx +
and eax 0FFFFFFFBh +
cmp al 32h +
jnz loc_4369A0  +
mov dword ptr [edi+10h] offset off_492990 +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_4361D0  +
test eax eax +
jz loc_4367E8  +
mov eax [esp+4Ch+var_24] +
sub eax [esi+1Ch] +
mov [edi+8] eax +
jmp loc_43681B  +
cmp al 33h +
jnz loc_4369C0  +
mov eax [esi+14h] +
test al 20h +
jz loc_4369E0  +
mov edx [esp+4Ch+var_30] +
test edx edx +
jz loc_436A87  +
mov eax [esp+4Ch+var_30] +
mov [edi+10h] eax +
jmp loc_436975  +
cmp [esp+4Ch+var_31] 38h +
jz loc_4369CE  +
cmp [esp+4Ch+var_31] 34h +
jnz loc_436975  +
mov eax [esi+14h] +
test al 10h +
jnz loc_4369E8  +
or eax 20h +
mov [esi+14h] eax +
jmp loc_436975  +
or eax 10h +
mov [esi+14h] eax +
jmp loc_436975  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_4369B7  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_41E750  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_4369B7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 20h +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_4C] ebp +
call sub_41EAF0  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_4369B7  +
xor eax eax +
jmp loc_4367EA  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
add eax 1 +
mov [esp+4Ch+var_48] eax +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_4367E8  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] esi +
add eax 1 +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] ebp +
call sub_41ECA0  +
test eax eax +
mov esi eax +
jnz loc_43680C  +
xor eax eax +
jmp loc_4367EA  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_41E750  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_4369B7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 10h +
jmp loc_436A13  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
or eax [esp+2Ch+arg_0] +
jnz loc_436B98  +
mov eax [edx] +
mov ebx ecx +
mov edx 1 +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
xor eax eax +
sub [esp+2Ch+var_18] ecx +
test esi esi +
jnz loc_436B1A  +
jmp loc_436B84  +
test eax eax +
jz loc_436B90  +
movzx edx byte ptr [eax+ebp] +
mov [ebx] dl +
add ebx 1 +
sub [esp+2Ch+arg_8] 1 +
jz loc_436B84  +
mov edx esi +
mov ecx [esp+2Ch+var_18] +
xor edi edi +
lea ebp [ebx+ecx] +
mov ecx [esp+2Ch+arg_C] +
mov esi ebp +
and ebp 1FFFh +
and esi 0FFFFE000h +
test ecx ecx +
jnz loc_436B43  +
xor ecx ecx +
cmp byte ptr [ebx] 0 +
setnz cl  +
mov edi ecx +
cmp esi edx +
jnz loc_436B50  +
test edi edi +
jz loc_436B5D  +
test eax eax +
jnz loc_436B5D  +
nop   +
mov eax [esp+2Ch+var_14] +
mov ecx edi +
mov edx esi +
call sub_4363D0  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jnz loc_436B00  +
test edi edi +
jz loc_436B0E  +
movzx edx byte ptr [ebx] +
add ebx 1 +
mov [eax+ebp] dl +
shr ebp 5 +
sub [esp+2Ch+arg_8] 1 +
mov byte ptr [eax+ebp+2000h] 1 +
jnz loc_436B18  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx] 0 +
jmp loc_436B0E  +
mov [esp+2Ch+var_28] 27Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_25 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_18] edx +
call sub_420BA0  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_18] +
jmp loc_436AD9  +
***
jmp loc_436BD0  +
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_436C14  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_436AC0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_436C64  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_436AC0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edx [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test eax eax +
jz loc_436CD0  +
cmp eax 2 +
jnz loc_436CC6  +
mov eax [ebx+10h] +
mov edi [eax] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call sub_423940  +
mov eax [ebx+4] +
mov [esp+28h] edi +
mov [esp+20h] esi +
mov dword ptr [esp+24h] offset a5sS_0 +
mov [esp+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fprintf  +
***
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
mov [esp+24h] esi +
mov [esp+20h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fputs  +
***
sub esp 0Ch +
mov ds:dword_4C14A0 1 +
call locret_488170  +
xor eax eax +
mov ds:byte_4C14F0[eax] al +
add eax 1 +
cmp eax 0Ah +
jnz loc_436D04  +
mov ds:byte_4C14F7[eax] al +
add eax 1 +
cmp eax 24h +
jnz loc_436D12  +
mov ds:byte_4C14E4 24h +
mov al 28h +
mov ds:byte_4C14E5 25h +
mov ds:byte_4C14EE 26h +
mov ds:byte_4C151F 27h +
nop   +
mov ds:byte_4C14F9[eax] al +
add eax 1 +
cmp eax 42h +
jnz loc_436D40  +
add esp 0Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax ds:dword_4C14A0 +
test eax eax +
jz loc_436FFF  +
mov eax [esp+0A0h] +
lea edi [esp+1Ch] +
mov eax [eax+0A0h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_436E42  +
xor ebp ebp +
jmp loc_436DA6  +
add ebp 20h +
cmp ebp 2000h +
jz loc_436E34  +
mov eax ebp +
sar eax 5 +
cmp byte ptr [esi+eax+2000h] 0 +
jz loc_436D97  +
mov edx [esi+2100h] +
lea eax [esp+18h] +
mov [esp+18h] edi +
add edx ebp +
call sub_436330  +
mov edx [esp+18h] +
mov eax ebp +
lea ecx [esi+ebp+20h] +
add eax esi +
movzx ebx byte ptr [eax] +
add eax 1 +
and ebx 0Fh +
movzx ebx ds:byte_4AFCF4[ebx] +
mov [edx+1] bl +
movzx edx byte ptr [eax-1] +
shr dl 4 +
cmp eax ecx +
movzx edx dl +
movzx ebx ds:byte_4AFCF4[edx] +
mov edx [esp+18h] +
mov [edx] bl +
mov ebx [esp+18h] +
lea edx [ebx+2] +
mov [esp+18h] edx +
jnz loc_436DD6  +
mov eax [esp+0A0h] +
mov ecx edi +
add ebp 20h +
mov [esp] edx +
mov edx 36h +
call sub_4364F0  +
cmp ebp 2000h +
jnz loc_436DA6  +
mov esi [esi+2104h] +
test esi esi +
jnz loc_436D93  +
mov eax [esp+0A0h] +
lea esi [esp+1Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_436EAD  +
mov [esp+18h] esi +
mov edx [ebx] +
lea eax [esp+18h] +
call sub_436630  +
mov eax [esp+18h] +
lea edx [eax+1] +
mov [esp+18h] edx +
mov byte ptr [eax] 31h +
mov edx [ebx+1Ch] +
lea eax [esp+18h] +
call sub_436330  +
mov edx [ebx+24h] +
lea eax [esp+18h] +
add edx [ebx+1Ch] +
call sub_436330  +
mov eax [esp+18h] +
mov ecx esi +
mov edx 33h +
mov [esp] eax +
mov eax [esp+0A0h] +
call sub_4364F0  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_436E54  +
mov eax [esp+0A0h] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_436F52  +
mov eax [ebx] +
test eax eax +
jz loc_436F52  +
lea edi [esp+1Ch] +
***
mov eax [esp+arg_14] +
mov edx [esi+4] +
mov eax [esp+arg_14] +
mov dword ptr [esp+0] 3 +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
lea edx [eax+1] +
mov [esp+arg_14] edx +
mov byte ptr [eax] 36h +
jmp sub_436F0D  +
***
call sub_436CF0  +
jmp loc_436D77  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 11Ch +
mov [esp+120h+var_114] 0 +
mov [esp+120h+var_11C] 0 +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_120] eax +
call sub_429F00  +
test eax eax +
jnz loc_437130  +
lea ebx [esp+120h+var_10F] +
jmp loc_437078  +
***
test edx edx +
jnz loc_437140  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 1 +
mov [esp-9Ch+arg_98] ebx +
call sub_429CF0  +
xor edx edx +
cmp eax 1 +
setnz dl  +
cmp byte ptr [esp+11h] 25h +
mov eax edx +
jnz loc_437070  +
test eax eax +
jnz loc_437140  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 5 +
mov [esp-9Ch+arg_98] ebx +
call sub_429CF0  +
cmp eax 5 +
jnz loc_437130  +
movzx eax byte ptr [esp+11h] +
movzx ebp byte ptr [esp+13h] +
movzx eax ds:byte_4BAE60[eax] +
cmp al 63h +
jz loc_437140  +
movzx edx byte ptr [esp+12h] +
movzx edx ds:byte_4BAE60[edx] +
cmp dl 63h +
jz loc_437140  +
shl eax 4 +
lea edi [edx+eax-5] +
cmp edi 0FEh +
ja loc_437130  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] edi +
mov [esp-9Ch+arg_98] ebx +
call sub_429CF0  +
cmp edi eax +
jnz loc_437130  +
mov eax ebp +
mov byte ptr [esp+edi+11h] 0 +
movsx ebp al +
add edi ebx +
mov [esp+0Ch] edi +
mov [esp-9Ch+arg_A0] ebx +
mov [esp-9Ch+arg_9C] ebp +
mov [esp-9Ch+arg_98] esi +
call sub_436700  +
test eax eax +
jnz loc_437078  +
nop   +
add esp 11Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 11Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_4C14A0 +
mov ebx [esp+30h] +
test eax eax +
jz loc_437200  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_4371F2  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_429CF0  +
cmp eax 4 +
jnz loc_4371F2  +
cmp byte ptr [esp+1Ch] 25h +
jnz loc_4371F2  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4BAE60[eax] 63h +
jz loc_4371F2  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4BAE60[eax] 63h +
jz loc_4371F2  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4BAE60[eax] 63h +
jz loc_4371F2  +
mov [esp] ebx +
call sub_4366B0  +
mov eax ebx +
call sub_437030  +
test eax eax +
jz loc_4371F2  +
mov eax [ebx+4] +
add esp 28h +
pop ebx  +
retn   +
***
add esp 28h +
xor eax eax +
pop ebx  +
retn   +
***
call sub_436CF0  +
jmp loc_437165  +
***
xor eax eax +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] ebx +
call sub_425850  +
test eax eax +
jz loc_437260  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4237A0  +
mov edx 1 +
test eax eax +
jnz loc_4372A0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 5Ch +
mov [esp+5Ch+var_40] eax +
mov eax edx +
mov esi [esp+5Ch+arg_0] +
shr eax 4 +
mov ebp [esp+5Ch+arg_4] +
and eax 0Fh +
movzx eax ds:byte_4AFF94[eax] +
shr ebx 8 +
mov [esp+5Ch+var_39] 3Ah +
mov [esp+24h] al +
mov eax edx +
and eax 0Fh +
movzx eax ds:byte_4AFF94[eax] +
mov [esp+25h] al +
movzx eax bl +
shr eax 4 +
movzx eax ds:byte_4AFF94[eax] +
mov [esp+5Ch+var_36] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_4AFF94[eax] +
mov [esp+5Ch+var_35] al +
movzx eax cl +
shr eax 4 +
movzx eax ds:byte_4AFF94[eax] +
mov [esp+5Ch+var_34] al +
mov eax ecx +
add ecx esi +
and eax 0Fh +
add ecx edx +
movzx eax ds:byte_4AFF94[eax] +
add ebx ecx +
mov [esp+5Ch+var_33] al +
mov eax esi +
shr eax 4 +
and eax 0Fh +
movzx eax ds:byte_4AFF94[eax] +
mov [esp+5Ch+var_32] al +
mov eax esi +
and eax 0Fh +
test edx edx +
movzx eax ds:byte_4AFF94[eax] +
mov [esp+5Ch+var_31] al +
jz loc_4373F9  +
xor eax eax +
lea esi [esp+5Ch+var_39] +
mov [esp+5Ch+var_44] edx +
lea esi [esi+0] +
movzx ecx byte ptr [ebp+eax+0] +
mov edx ecx +
add ebx ecx +
shr dl 4 +
movzx edi dl +
movzx edx ds:byte_4AFF94[edi] +
mov edi ecx +
and edi 0Fh +
mov [esi+eax*2+9] dl +
movzx edx ds:byte_4AFF94[edi] +
mov [esi+eax*2+0Ah] dl +
add eax 1 +
cmp eax [esp+5Ch+var_44] +
jnz loc_437370  +
mov edx [esp+5Ch+var_44] +
lea ecx [esp+edx*2+5Ch+var_30] +
neg ebx  +
movzx eax bl +
and ebx 0Fh +
shr eax 4 +
movzx eax ds:byte_4AFF94[eax] +
mov byte ptr [ecx+2] 0Dh +
mov byte ptr [ecx+3] 0Ah +
mov [ecx] al +
movzx eax ds:byte_4AFF94[ebx] +
lea ebx [edx+edx+0Dh] +
mov [ecx+1] al +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_54] eax +
call sub_429DA0  +
cmp ebx eax +
setz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+5Ch+var_30] +
lea esi [esp+5Ch+var_39] +
jmp loc_4373AB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4375F2  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov eax [esp+1Ch] +
mov esi [eax+0Ch] +
mov ebp [eax+8] +
mov edi [eax+4] +
test esi esi +
jz loc_4375E0  +
mov eax [esp+14h] +
mov edx [esp+18h] +
add eax edx +
mov [esp+10h] eax +
jmp loc_4374FE  +
mov edx [esp+14h] +
test edx edx +
jnz loc_437586  +
mov eax ebp +
xor ecx ecx +
and eax 0F0000h +
mov edx 2 +
mov [esp+18h] eax +
shr eax 0Ch +
mov [esp+2Ah] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Bh] 0 +
call sub_4372B0  +
test eax eax +
jz loc_4375D1  +
mov eax [esp+14h] +
add eax [esp+18h] +
mov [esp+10h] eax +
mov ecx ebp +
sub ecx [esp+10h] +
lea eax [ecx+ebx] +
cmp eax 0FFFFh +
jbe loc_4374D4  +
mov ebx 10000h +
sub ebx ecx +
mov eax [esp+60h] +
mov edx ebx +
mov [esp+4] edi +
mov dword ptr [esp] 0 +
call sub_4372B0  +
test eax eax +
jz loc_4375D1  +
add ebp ebx +
add edi ebx +
sub esi ebx +
jz loc_4375E0  +
mov eax [esp+10h] +
cmp esi 10h +
mov ebx 10h +
cmovbe ebx esi +
add eax 0FFFFh +
cmp eax ebp +
jnb loc_4374BD  +
cmp ebp 0FFFFFh +
jbe loc_437467  +
mov eax [esp+18h] +
test eax eax +
jnz loc_4375A0  +
mov eax ebp +
xor ax ax +
mov [esp+14h] eax +
add eax 0FFFFh +
cmp eax ebp +
jb loc_437675  +
mov edx [esp+14h] +
xor ecx ecx +
mov dword ptr [esp] 4 +
mov eax edx +
shr eax 18h +
mov [esp+2Ah] al +
mov eax edx +
mov edx 2 +
shr eax 10h +
mov [esp+2Bh] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
call sub_4372B0  +
test eax eax +
jz loc_4375D1  +
mov dword ptr [esp+18h] 0 +
jmp loc_4374B1  +
***
mov dword ptr [esp+4] 319h +
mov dword ptr [esp] offset a____Binutil_26 +
call sub_420BA0  +
jmp loc_437473  +
***
lea eax [esp+2Ah] +
xor ecx ecx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov edx 2 +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Ah] 0 +
mov byte ptr [esp+2Bh] 0 +
call sub_4372B0  +
test eax eax +
jnz loc_43752A  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_43743F  +
mov eax [esp+60h] +
mov eax [eax+74h] +
test eax eax +
jz loc_43764C  +
cmp eax 0FFFFFh +
mov edx eax +
ja loc_4376B9  +
and edx 0F0000h +
shr edx 0Ch +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov byte ptr [esp+2Dh] 0 +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 3 +
mov eax [esp+60h] +
xor ecx ecx +
mov edx 4 +
call sub_4372B0  +
test eax eax +
jz loc_4375D1  +
mov eax [esp+60h] +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 1 +
call sub_4372B0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4375D3  +
***
lea ebx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset a08lx_4 +
mov [esp] ebx +
call sprintf  +
mov eax [esp+60h] +
mov eax [eax] +
mov [esp+8] ebx +
mov dword ptr [esp] offset aSAddress0xSOut +
mov [esp+4] eax +
call off_492AE8  +
mov dword ptr [esp] 11h +
call sub_420C50  +
jmp loc_4375D1  +
***
shr edx 18h +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 10h +
mov [esp+2Dh] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 5 +
jmp loc_437638  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 1Ch +
mov ebx [esp+44h] +
mov edi [esp+3Ch] +
test ebx ebx +
jz loc_437717  +
mov eax [esp+34h] +
mov edx [eax+14h] +
and edx 3 +
cmp edx 3 +
jz loc_437721  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_425850  +
test eax eax +
mov ebp eax +
jz loc_4377E1  +
mov eax [esp+30h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_425850  +
test eax eax +
mov edx eax +
jz loc_4377E1  +
mov eax [esp+38h] +
mov [esp] edx +
mov [esp+8] ebx +
mov [esp+0Ch] edx +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov edx [esp+0Ch] +
add edi [eax+20h] +
mov eax [esp+30h] +
mov [ebp+4] edx +
mov [ebp+8] edi +
mov [ebp+0Ch] ebx +
mov ecx [eax+0A0h] +
mov eax [ecx+4] +
test eax eax +
jz loc_43779B  +
cmp edi [eax+8] +
jnb loc_4377D0  +
mov edx [ecx] +
mov eax ecx +
test edx edx +
jnz loc_4377AD  +
jmp loc_4377B2  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_4377B2  +
cmp edi [edx+8] +
ja loc_4377A5  +
mov [ebp+0] edx +
mov esi 1 +
mov [eax] ebp +
mov eax [ebp+0] +
test eax eax +
jnz loc_437717  +
mov [ecx+4] ebp +
jmp loc_437717  +
***
mov [eax] ebp +
mov dword ptr [ebp+0] 0 +
mov [ecx+4] ebp +
jmp loc_437717  +
***
xor esi esi +
jmp loc_437717  +
***
sub esp 34h +
cmp ecx 0FFFFFFFFh +
jz loc_437841  +
mov ebx eax +
movzx eax cl +
test ds:byte_4B8120[eax+eax] 10h +
jz loc_437857  +
mov byte ptr [esp+34h+var_E] cl +
lea esi [esp+34h+var_E] +
mov byte ptr [esp+34h+var_E+1] 0 +
mov [esp+34h+var_28] esi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset aBDUnexpected_0 +
call off_492AE8  +
mov [esp+34h+var_34] 11h +
call sub_420C50  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+34h+arg_0] +
test eax eax +
jnz loc_43783B  +
mov [esp+34h+var_34] 12h +
call sub_420C50  +
jmp loc_43783B  +
lea esi [esp+34h+var_E] +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] offset a03o_0 +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_18] edx +
call sprintf  +
mov edx [esp+34h+var_18] +
jmp loc_437816  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx ds:dword_4C15C0 +
mov ebp [esp+0A0h] +
test ebx ebx +
jz loc_4379C4  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_429F00  +
test eax eax +
jnz loc_4378EE  +
lea edi [esp+63h] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 9 +
mov [esp] edi +
call sub_429CF0  +
cmp eax 9 +
jz loc_437900  +
call sub_420A00  +
cmp eax 12h +
jz loc_4379B3  +
xor eax eax +
***
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+63h] 3Ah +
jnz loc_4379B3  +
lea eax [esp+64h] +
lea ebx [esp+6Ch] +
movzx edx byte ptr [eax] +
cmp ds:byte_4BAE60[edx] 63h +
jz loc_4379B3  +
add eax 1 +
cmp eax ebx +
jnz loc_437913  +
movzx eax byte ptr [esp+6Ah] +
movzx edx byte ptr [esp+6Bh] +
movzx eax ds:byte_4BAE60[eax] +
movzx edx ds:byte_4BAE60[edx] +
shl eax 4 +
add eax edx +
cmp eax 5 +
ja loc_4379B3  +
mov eax [ebp+0A0h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
call sub_437220  +
test eax eax +
jz loc_437986  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_429F00  +
test eax eax +
jz loc_4379D8  +
***
mov eax [ebp+0A0h] +
cmp eax [esp+arg_18] +
jz loc_4379A2  +
test eax eax +
jz loc_4379A2  +
mov [esp+arg_0] eax +
mov [esp+0] ebp +
call sub_425AA0  +
mov eax [esp+arg_18] +
mov [ebp+0A0h] eax +
xor eax eax +
jmp loc_4378F0  +
***
mov dword ptr [esp] 3 +
call sub_420C50  +
jmp loc_4378EE  +
***
mov ds:dword_4C15C0 1 +
call locret_488170  +
jmp loc_43789F  +
***
mov dword ptr [ebp+74h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+20h] 1 +
mov dword ptr [esp+3Ch] 0 +
mov dword ptr [esp+48h] 0 +
mov dword ptr [esp+4Ch] 0 +
***
mov [esp+arg_4] ebp +
mov [esp+arg_0] 1 +
mov [esp+0] ebx +
call sub_429CF0  +
cmp eax 1 +
jz loc_437A50  +
call sub_420A00  +
cmp eax 12h +
jz loc_437FD0  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_437986  +
mov [esp+0] eax +
call free  +
jmp loc_437986  +
***
movzx ecx [esp+arg_68] +
cmp ecx 0Dh +
jz loc_437A0F  +
cmp ecx 0Ah +
jz loc_437FC5  +
cmp ecx 3Ah +
jnz loc_437C68  +
mov [esp+0] ebp +
call sub_429E20  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 8 +
mov [esp+arg_3C] eax +
lea eax [esp+arg_57] +
mov [esp+0] eax +
mov [esp+arg_40] edx +
call sub_429CF0  +
cmp eax 8 +
jnz loc_437A36  +
lea eax [esp+arg_57] +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
cmp ds:byte_4BAE60[ecx] 63h +
jz loc_437C68  +
add eax 1 +
cmp eax edi +
jnz loc_437AA0  +
movzx eax byte ptr [esp+arg_57] +
movzx edx byte ptr [esp+arg_57+1] +
movzx eax ds:byte_4BAE60[eax] +
movzx edx ds:byte_4BAE60[edx] +
shl eax 4 +
add eax edx +
mov esi eax +
mov [esp+arg_24] eax +
movzx eax byte ptr [esp+arg_57+2] +
lea esi [esi+esi+2] +
cmp esi [esp+arg_20] +
movzx eax ds:byte_4BAE60[eax] +
mov byte ptr [esp+arg_28] al +
movzx eax byte ptr [esp+arg_57+3] +
movzx eax ds:byte_4BAE60[eax] +
mov byte ptr [esp+arg_2C] al +
movzx eax [esp+arg_5B] +
movzx eax ds:byte_4BAE60[eax] +
mov byte ptr [esp+arg_30] al +
movzx eax [esp+arg_5C] +
movzx eax ds:byte_4BAE60[eax] +
mov [esp+arg_35] al +
movzx eax [esp+arg_5D] +
movzx eax ds:byte_4BAE60[eax] +
mov [esp+arg_36] al +
movzx eax [esp+arg_5E] +
movzx eax ds:byte_4BAE60[eax] +
mov [esp+arg_37] al +
jnb loc_437C80  +
mov eax [esp+arg_14] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] esi +
mov [esp+0] eax +
call sub_429CF0  +
cmp esi eax +
jnz loc_437A36  +
mov edx [esp+arg_14] +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
cmp ds:byte_4BAE60[ecx] 63h +
jz loc_437C68  +
add eax 1 +
cmp esi eax +
ja loc_437B70  +
movzx edx byte ptr [esp+arg_30] +
movzx eax [esp+arg_35] +
shl edx 4 +
lea ecx [edx+eax] +
movzx eax byte ptr [esp+arg_28] +
movzx edx byte ptr [esp+arg_2C] +
shl eax 4 +
add eax edx +
movzx edx [esp+arg_37] +
shl eax 8 +
add eax ecx +
mov [esp+arg_28] eax +
movzx eax [esp+arg_36] +
shl eax 4 +
lea ecx [eax+edx] +
mov edx [esp+arg_24] +
mov eax [esp+arg_28] +
mov [esp+arg_2C] ecx +
add ecx edx +
add ecx eax +
shr eax 8 +
add ecx eax +
test edx edx +
jz loc_438017  +
mov edx [esp+arg_14] +
sub esi 2 +
mov [esp+arg_30] esi +
mov [esp+arg_9C] ebp +
add esi edx +
mov eax edx +
mov ebp esi +
movzx edx byte ptr [eax] +
add eax 2 +
movzx esi byte ptr [eax-1] +
movzx edx ds:byte_4BAE60[edx] +
movzx esi ds:byte_4BAE60[esi] +
shl edx 4 +
add edx esi +
add ecx edx +
cmp eax ebp +
jnz loc_437BF5  +
mov edx [esp+arg_30] +
mov ebp [esp+arg_9C] +
mov eax edx +
add eax 1 +
mov esi [esp+arg_14] +
neg ecx  +
movzx ecx cl +
movzx edx byte ptr [esi+edx] +
movzx eax byte ptr [esi+eax] +
movzx edx ds:byte_4BAE60[edx] +
movzx eax ds:byte_4BAE60[eax] +
shl edx 4 +
add eax edx +
cmp ecx eax +
jnz loc_438084  +
mov eax [esp+arg_2C] +
cmp eax 5 +
ja loc_437FE5  +
jmp ds:off_4AFF28[eax*4]  +
mov edx [esp+arg_1C] +
mov eax ebp +
mov dword ptr [esp+0] 0 +
call sub_4377F0  +
jmp loc_437A36  +
***
cmp [esp+arg_24] 2 +
cmp [esp+arg_24] 4 +
cmp [esp+arg_24] 2 +
mov edx [ebp+74h] +
cmp [esp+arg_24] 4 +
mov eax [esp+arg_38] +
test eax eax +
jz loc_437EF2  +
mov ecx [eax+24h] +
mov edx [eax+1Ch] +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
add edx ecx +
cmp edx eax +
jz loc_438074  +
mov ecx [esp+arg_24] +
test ecx ecx +
jz loc_437A0F  +
mov eax [ebp+6Ch] +
mov [esp+arg_0] offset a_secD_0 +
mov [esp+0] ebx +
add eax 1 +
mov [esp+arg_4] eax +
call sprintf  +
mov edx ebx +
mov eax [edx] +
add edx 4 +
lea ecx [eax-1010101h] +
not eax  +
and ecx eax +
and ecx 80808080h +
jz loc_437F1A  +
mov eax ecx +
shr eax 10h +
test ecx 8080h +
cmovz ecx eax +
lea eax [edx+2] +
cmovz edx eax +
add cl cl +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+arg_0] edx +
mov [esp+0] ebp +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_437A36  +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call strcpy  +
mov [esp+arg_0] esi +
mov [esp+arg_4] 103h +
mov [esp+0] ebp +
call sub_41EBD0  +
test eax eax +
mov esi eax +
mov [esp+arg_38] eax +
jz loc_437A36  +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
mov edx [esp+arg_40] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [esp+arg_24] +
mov [esi+24h] eax +
mov eax [esp+arg_3C] +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
mov [esi+50h] eax +
mov [esi+54h] edx +
jmp loc_437A0F  +
add [esp+arg_1C] 1 +
jmp loc_437A0F  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_437E22  +
mov eax [esp+arg_14] +
jmp loc_437E1A  +
mov eax [esp+arg_2C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUUnrecognized +
mov [esp+arg_8] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_4] eax +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
jmp loc_437A36  +
mov eax 1 +
xor edx edx +
jmp loc_437C28  +
mov esi [esp+arg_14] +
mov [esp+arg_38] 0 +
movzx eax byte ptr [esi+2] +
movzx edx byte ptr [esi+3] +
movzx eax ds:byte_4BAE60[eax] +
movzx ecx ds:byte_4BAE60[edx] +
shl eax 4 +
add ecx eax +
movzx eax byte ptr [esi] +
movzx edx ds:byte_4BAE60[eax] +
movzx eax byte ptr [esi+1] +
shl edx 4 +
movzx eax ds:byte_4BAE60[eax] +
add eax edx +
shl eax 8 +
add eax ecx +
shl eax 10h +
add [ebp+74h] eax +
jmp loc_437A0F  +
mov eax [esp+arg_38] +
add ecx [esp+arg_24] +
mov [eax+24h] ecx +
jmp loc_437A0F  +
***
mov [esp+arg_C] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_8] ecx +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadChecksumI +
mov [esp+arg_4] eax +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
jmp loc_437A36  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedA +
mov [esp+arg_4] eax +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
jmp loc_437A36  +
***
cmp [esp+arg_24] 2 +
jz loc_437E35  +
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedL +
mov [esp+arg_4] eax +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
jmp loc_437A36  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtende_0 +
mov [esp+arg_4] eax +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
jmp loc_437A36  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedS +
mov [esp+arg_4] eax +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
jmp loc_437A36  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov esi [esp+5Ch] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_4381B0  +
add esi eax +
mov eax [esp+64h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp] eax +
call memcpy  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov eax [eax+24h] +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_425850  +
mov ecx [esp+54h] +
mov ebx eax +
mov [esp+14h] eax +
mov [ecx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_4381A8  +
mov eax [ecx+50h] +
mov edx [ecx+54h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_429F00  +
test eax eax +
jnz loc_4383AB  +
mov ebx [esp+14h] +
xor edi edi +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+50h] +
mov dword ptr [esp+4] 1 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_429CF0  +
cmp eax 1 +
jz loc_438267  +
call sub_420A00  +
mov eax [esp+54h] +
sub ebx [esp+14h] +
cmp ebx [eax+24h] +
jb loc_4383D8  +
test edi edi +
jz loc_438258  +
mov [esp] edi +
call free  +
mov eax [esp+54h] +
mov eax [eax+8Ch] +
jmp loc_438189  +
***
movzx eax byte ptr [esp+28h] +
cmp eax 0Ah +
jz loc_438215  +
cmp eax 0Dh +
jz loc_438215  +
cmp eax 3Ah +
jz loc_43828F  +
mov dword ptr [esp+4] 236h +
mov dword ptr [esp] offset a____Binutil_26 +
call sub_420BA0  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_429CF0  +
cmp eax 8 +
jnz loc_43839F  +
movzx eax byte ptr [esp+28h] +
movzx edx byte ptr [esp+29h] +
movzx eax ds:byte_4BAE60[eax] +
movzx ebp ds:byte_4BAE60[edx] +
movzx edx byte ptr [esp+2Fh] +
shl eax 4 +
add ebp eax +
movzx eax byte ptr [esp+2Eh] +
movzx edx ds:byte_4BAE60[edx] +
movzx eax ds:byte_4BAE60[eax] +
shl eax 4 +
add eax edx +
jnz loc_4383B5  +
lea edx [ebp+ebp+0] +
cmp edx [esp+1Ch] +
jbe loc_438320  +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+18h] edx +
call sub_42B490  +
test eax eax +
mov edi eax +
jz loc_4383AB  +
mov edx [esp+18h] +
mov [esp+1Ch] edx +
mov eax [esp+50h] +
mov [esp+4] edx +
mov [esp] edi +
mov [esp+18h] edx +
mov [esp+8] eax +
call sub_429CF0  +
mov edx [esp+18h] +
cmp edx eax +
jnz loc_43839F  +
test ebp ebp +
jz loc_43836B  +
xor edx edx +
movzx eax byte ptr [edi+edx*2] +
movzx ecx byte ptr [edi+edx*2+1] +
movzx eax ds:byte_4BAE60[eax] +
shl eax 4 +
add al ds:byte_4BAE60[ecx] +
mov [ebx+edx] al +
add edx 1 +
cmp edx ebp +
jnz loc_438346  +
add ebx edx +
mov ecx [esp+54h] +
mov eax ebx +
sub eax [esp+14h] +
cmp eax [ecx+24h] +
jnb loc_43824C  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 2 +
mov [esp] edi +
mov [esp+8] eax +
call sub_429CF0  +
cmp eax 2 +
jz loc_438215  +
test edi edi +
jz loc_4383AB  +
mov [esp] edi +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBInternalError +
mov [esp+4] eax +
call off_492AE8  +
mov dword ptr [esp] 11h +
call sub_420C50  +
jmp loc_43839F  +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBBadSectionLen +
mov [esp+4] eax +
call off_492AE8  +
mov dword ptr [esp] 11h +
call sub_420C50  +
jmp loc_43839F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+2Ch] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp] esi +
shr dl 7 +
mov [esp+0Ch] edx +
call eax  +
mov edx [esp+0Ch] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jz loc_4384A0  +
mov eax [eax+50h] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
lea edx [esi+8] +
add esi 0Eh +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [ebx+4] eax +
movzx eax byte ptr [esi-2] +
mov [ebx+0Ch] al +
movzx eax byte ptr [esi-1] +
mov [ebx+0Dh] al +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp] esi +
call eax  +
cmp eax 0FFFFh +
mov [ebx+10h] eax +
jz loc_4384C0  +
cmp eax 0FEFFh +
ja loc_4384B0  +
mov byte ptr [ebx+0Eh] 0 +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4Ch] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
jmp loc_43844C  +
***
sub eax 10000h +
mov [ebx+10h] eax +
jmp loc_43848A  +
***
mov edx [esp+28h] +
xor ax ax +
test edx edx +
jz loc_438493  +
mov eax [edi+4] +
mov ecx [esp+28h] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov [ebx+10h] eax +
jmp loc_43848A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
add esi 8 +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+4] +
mov edx [esi+4] +
add ebx 8 +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+4] ebx +
add ebx 4 +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+24h] ebx +
mov [esp+20h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [esp+38h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] esi +
call eax  +
mov eax [edi+4] +
lea ecx [esi+4] +
mov edx [ebx] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
lea ecx [esi+8] +
mov edx [ebx+4] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] ecx +
call eax  +
movzx eax byte ptr [ebx+0Ch] +
mov [esi+0Ch] al +
movzx eax byte ptr [ebx+0Dh] +
mov [esi+0Dh] al +
mov eax [ebx+10h] +
lea edx [eax-0FF00h] +
cmp edx 0FFFEFFFFh +
ja loc_438719  +
test ebp ebp +
jz loc_438733  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp] eax +
mov [esp+4] ebp +
call edx  +
mov eax 0FFFFh +
mov edx [edi+4] +
add esi 0Eh +
mov edx [edx+60h] +
mov [esp+34h] esi +
mov [esp+30h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
mov dword ptr [esp+8] offset aBfd_elf32_swap +
mov dword ptr [esp+4] 0E0h +
mov dword ptr [esp] offset a____Binutil_27 +
call sub_420BD0  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edx [esp+78h] +
mov ebp [esp+70h] +
test edx edx +
mov eax [ebp+0A0h] +
jnz loc_438840  +
add eax 48h +
xor ebx ebx +
mov [esp+24h] eax +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+18h] +
mov [esp+28h] eax +
shr dword ptr [esp+28h] 4 +
mov esi [esp+28h] +
test esi esi +
jnz loc_4388C0  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
***
mov eax [esp+arg_28] +
mov eax [eax+38h] +
test eax eax +
jz loc_4387CF  +
mov edx [esp+arg_24] +
mov [esp+arg_0] edi +
mov [esp+0] ebp +
mov [esp+arg_4] edx +
call eax  +
mov eax [esp+arg_70] +
test eax eax +
jz loc_438808  +
test ebx ebx +
lea eax [ebx-1] +
jle loc_4387FE  +
mov edx [esp+arg_70] +
add edx 4 +
sub eax 1 +
mov [edx-4] edi +
add edi 34h +
cmp eax 0FFFFFFFFh +
jnz loc_4387E2  +
mov eax [esp+arg_70] +
lea eax [eax+ebx*4] +
mov [esp+arg_70] eax +
mov eax [esp+arg_70] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_34] +
test eax eax +
jz loc_438818  +
mov [esp+0] eax +
call free  +
mov eax [esp+arg_2C] +
test eax eax +
jz loc_438831  +
mov edx [esp+arg_20] +
cmp [edx+30h] eax +
jz loc_438831  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [eax+914h] +
xor ebx ebx +
mov edi [eax+918h] +
lea ecx [eax+160h] +
lea edx [eax+0F0h] +
mov [esp+24h] edx +
test esi esi +
cmovnz ebx ecx +
test edi edi +
jnz loc_4388B0  +
mov edx [eax+91Ch] +
test edx edx +
jz loc_438776  +
mov edi [eax+244h] +
test edi edi +
jnz loc_438776  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_4463E0  +
test eax eax +
jnz loc_438776  +
nop   +
lea esi [esi+0] +
***
mov ebx 0FFFFFFFFh +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+240h] +
test ecx ecx +
jnz loc_438867  +
jmp loc_438883  +
***
mov esi [esp+28h] +
mov eax [esp+24h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_43CC60  +
test eax eax +
mov [esp+30h] eax +
jz loc_4388A0  +
imul eax esi +
mov [esp] ebp +
mov [esp+4] eax +
call sub_425930  +
test eax eax +
mov edi eax +
jz loc_438A8C  +
test ebx ebx +
jz loc_438946  +
mov eax [ebx+18h] +
shr eax 1 +
cmp eax esi +
jz loc_438A25  +
mov ecx [ebp+0] +
mov [esp+0Ch] esi +
mov [esp+8] eax +
mov dword ptr [esp] offset aSVersionCountL +
mov [esp+4] ecx +
call off_492AE8  +
mov dword ptr [esp+38h] 0 +
xor ecx ecx +
mov eax [esp+28h] +
mov edx [esp+30h] +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
lea esi [edx+14h] +
cmp eax esi +
mov [esp+34h] eax +
jbe loc_438CA1  +
mov ebx edi +
mov [esp+3Ch] edi +
mov edi ecx +
***
mov ecx [esi] +
mov eax [esp+24h] +
mov [ebx+18h] ecx +
mov ecx [esi+4] +
mov [ebx+1Ch] ecx +
mov ecx [esi+8] +
mov [ebx+20h] ecx +
mov ecx [esi+0Ch] +
mov [ebx+24h] ecx +
mov ecx [esi+10h] +
mov [ebx] ebp +
mov [ebx+28h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_43CFB0  +
mov [ebx+4] eax +
mov eax [esi] +
mov [ebx+8] eax +
mov eax [esi+10h] +
test eax eax +
jnz loc_438B90  +
mov dword ptr [ebx+10h] offset off_4928E8 +
mov eax [ebp+28h] +
shr eax 5 +
test al 42h +
jz loc_4389DD  +
mov eax [ebx+10h] +
mov eax [eax+1Ch] +
sub [ebx+8] eax +
movzx eax byte ptr [esi+0Ch] +
mov ecx eax +
shr cl 4 +
cmp cl 1 +
jz loc_438BB2  +
jb loc_438BE3  +
cmp cl 2 +
jz loc_438BD3  +
cmp cl 0Ah +
jnz loc_438A10  +
or dword ptr [ebx+0Ch] 800000h +
movzx eax byte ptr [esi+0Ch] +
nop   +
and eax 0Fh +
cmp al 0Ah +
ja sub_438AB7  +
movzx eax al +
jmp ds:off_4B01E4[eax*4]  +
***
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_429F00  +
test eax eax +
jnz loc_438A8C  +
mov eax [ebx+18h] +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov edx eax +
mov [esp+38h] eax +
jz loc_438C4A  +
mov eax [ebx+18h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call sub_429CF0  +
cmp eax [ebx+18h] +
jz loc_438C3C  +
***
mov eax [esp+38h] +
test eax eax +
jz loc_438A8C  +
mov [esp-0D8h+arg_D4] eax +
call free  +
mov edx [esp+24h] +
mov eax [esp+30h] +
cmp [edx+30h] eax +
jz loc_4388A0  +
mov [esp-0D8h+arg_D4] eax +
mov ebx 0FFFFFFFFh +
call free  +
jmp loc_4388A5  +
***
or dword ptr [ebx+0Ch] 400000h +
***
mov edx [esp+78h] +
or dword ptr [ebx+0Ch] 100000h +
jmp sub_438AB7  +
***
or dword ptr [ebx+0Ch] 80000h +
jmp sub_438AB7  +
***
or dword ptr [ebx+0Ch] 10000h +
jmp sub_438AB7  +
***
or dword ptr [ebx+0Ch] 40000h +
jmp sub_438AB7  +
***
or dword ptr [ebx+0Ch] 4004h +
jmp sub_438AB7  +
***
or dword ptr [ebx+0Ch] 104h +
jmp sub_438AB7  +
***
or dword ptr [ebx+0Ch] 8 +
jmp sub_438AB7  +
***
cmp eax 0FFFFFFF1h +
jz loc_438C10  +
cmp eax 0FFFFFFF2h +
jnz loc_438BF0  +
mov dword ptr [ebx+10h] offset off_492840 +
test byte ptr [ebp+2Ah] 20h +
jnz loc_438C20  +
mov eax [esi+4] +
mov [ebx+8] eax +
jmp loc_4389CA  +
mov ecx [esi+10h] +
cmp ecx 0FFFFFFF2h +
jz loc_438A10  +
test ecx ecx +
jz loc_438A10  +
or dword ptr [ebx+0Ch] 2 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_438A10  +
or dword ptr [ebx+0Ch] 80h +
movzx eax byte ptr [esi+0Ch] +
jmp loc_438A10  +
or dword ptr [ebx+0Ch] 1 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_438A10  +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_43F6C0  +
mov edx offset off_492990 +
test eax eax +
cmovz eax edx +
mov [ebx+10h] eax +
jmp loc_4389CA  +
***
mov dword ptr [ebx+10h] offset off_492990 +
jmp loc_4389CA  +
***
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_41E710  +
test eax eax +
jz loc_438C80  +
mov [ebx+10h] eax +
jmp loc_438BA7  +
***
mov eax [esp+38h] +
add eax 2 +
mov ecx eax +
jmp loc_438950  +
***
mov ecx [ebx+18h] +
test ecx ecx +
jnz loc_438A8C  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_429CF0  +
xor ecx ecx +
cmp eax [ebx+18h] +
jnz loc_438A8C  +
jmp loc_438950  +
***
mov dword ptr [esp+8] 209001h +
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_41EBD0  +
test eax eax +
jnz loc_438C34  +
jmp loc_438A7C  +
***
xor ebx ebx +
jmp loc_4387B3  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+18h+var_18] esi +
shr dl 7 +
mov [esp+18h+var_C] edx +
call eax  +
lea ecx [esi+4] +
mov [ebx] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+8] +
mov [ebx+4] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi] +
jnz loc_438D94  +
mov eax [eax+4Ch] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
mov eax [edi] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+14h] +
mov dword ptr [ebx+14h] 0 +
mov [ebx+10h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+18h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
add esi 24h +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+24h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] esi +
call eax  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
jmp loc_438D18  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+4] +
mov edx [edi+4] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+8] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+0Ch] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea edx [ebx+10h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] edx +
mov edx [edi+10h] +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+18h] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+1Ch] +
mov edx [edi+20h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+20h] +
mov edx [edi+24h] +
add ebx 24h +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
mov edx [edi+28h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov eax [eax+1B0h] +
movzx edx byte ptr [eax+1ACh] +
mov eax [esi] +
shr dl 7 +
mov [ecx] eax +
mov eax [esi+4] +
mov [esp+18h+var_C] edx +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [edi] +
lea ecx [esi+10h] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+12h] +
mov [ebx+24h] ax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+14h] +
mov [ebx+26h] ax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+1Ch] eax +
mov eax [edi] +
jnz loc_438FB0  +
mov eax [eax+4Ch] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi] +
lea edx [esi+1Ch] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
mov [ebx+14h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+24h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+28h] +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ah] +
mov [ebx+28h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Eh] +
mov [ebx+30h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+30h] +
add esi 32h +
mov [ebx+34h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+38h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] esi +
call eax  +
mov [ebx+3Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_438F16  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov eax [eax] +
mov edx [edx] +
lea ecx [ecx+10h] +
lea ebp [ebx+14h] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov [ecx-10h] edx +
mov edx [esi+4] +
shr al 7 +
mov [ecx-0Ch] edx +
mov edx [esi+8] +
mov [esp+24h+var_18] eax +
mov [ecx-8] edx +
mov edx [esi+0Ch] +
mov [ecx-4] edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+24h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
lea ecx [ebx+12h] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+26h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
mov ecx [esi+1Ch] +
mov edx [edx+54h] +
mov [esp+24h+var_20] ebp +
mov ebp 0FFFFh +
mov [esp+24h+var_24] ecx +
call edx  +
mov eax [edi] +
lea ecx [ebx+18h] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+1Ch] +
mov edx [esi+14h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+20h] +
mov edx [esi+18h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+24h] +
mov edx [esi+20h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+28h] +
mov edx [esi+28h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+2Ah] +
mov edx [esi+2Ch] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+30h] +
lea ecx [ebx+2Ch] +
mov edx [edi] +
cmp eax 0FFFFh +
cmova eax ebp +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [edi] +
lea ecx [ebx+2Eh] +
mov edx [esi+34h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+38h] +
mov edx 0 +
lea ecx [ebx+30h] +
cmp eax 0FF00h +
cmovnb eax edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [esi+3Ch] +
mov edx [edi] +
cmp eax 0FF00h +
cmovnb eax ebp +
mov edx [edx+60h] +
add ebx 32h +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
lea ecx [esp+2Ch] +
mov esi [eax+0A0h] +
add eax 4 +
mov [esp+14h] eax +
mov edx esi +
mov ebp [esi+40h] +
call sub_438FD0  +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_429F00  +
test eax eax +
jz loc_4391A0  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+80h] +
mov dword ptr [esp+4] 34h +
mov [esp+8] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
call sub_429DA0  +
cmp eax 34h +
jnz loc_439194  +
mov eax [esi+30h] +
cmp eax 0FFFEh +
jbe loc_4391D4  +
mov edx [ebp+0] +
mov [edx+20h] eax +
mov eax [esi+38h] +
cmp eax 0FEFFh +
jbe loc_4391E4  +
mov edx [ebp+0] +
mov [edx+18h] eax +
mov edx [esi+3Ch] +
cmp edx 0FEFFh +
jbe loc_4391F5  +
mov ecx [ebp+0] +
mov [ecx+1Ch] edx +
lea eax [eax+eax*4] +
shl eax 3 +
mov [esp+1Ch] eax +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_425850  +
test eax eax +
mov [esp+18h] eax +
jz loc_439194  +
mov edi eax +
mov eax [esi+38h] +
xor ebx ebx +
test eax eax +
jz loc_43924A  +
lea esi [esi+0] +
mov edx [ebp+ebx*4+0] +
mov ecx edi +
add ebx 1 +
mov eax [esp+14h] +
add edi 28h +
call sub_438DB0  +
cmp [esi+38h] ebx +
ja loc_439230  +
mov dword ptr [esp+0Ch] 0 +
mov eax [esi+18h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_429F00  +
test eax eax +
jnz loc_439194  +
mov eax [esp+80h] +
mov edi [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_429DA0  +
cmp edi eax +
setz al  +
movzx eax al +
jmp loc_439196  +
***
mov dword ptr [esp+28h] 8 +
mov dword ptr [esp+24h] offset sub_438570 +
mov eax [edi+28h] +
mov dword ptr [esp+20h] 0 +
shr eax 5 +
test al 42h +
jz loc_43935E  +
mov eax [ebp+1Ch] +
mov [esp+20h] eax +
mov ebx [ebp+4Ch] +
test ebx ebx +
jz loc_439460  +
mov dword ptr [esp+2Ch] 0 +
xor esi esi +
mov dword ptr [esp+18h] 0 +
jmp loc_43941A  +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
mov [esp+18h] edx +
call sub_444220  +
test eax eax +
mov ecx eax +
js loc_439450  +
mov eax [ebx] +
mov [esp+2Ch] ecx +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_4393D0  +
mov edx [edi+4] +
cmp [eax+4] edx +
jz loc_4393D0  +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+1Ch] ecx +
call sub_447CD0  +
mov ecx [esp+1Ch] +
test eax eax +
jz loc_439450  +
mov eax [esp+20h] +
shl ecx 8 +
add esi 1 +
add eax [ebx+4] +
mov [esp+34h] eax +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
add ecx eax +
mov eax [ebx+8] +
mov [esp+38h] ecx +
mov [esp] edi +
mov [esp+3Ch] eax +
mov eax [esp+14h] +
mov [esp+8] eax +
lea eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+24h] +
call eax  +
mov eax [esp+28h] +
add [esp+14h] eax +
cmp esi [ebp+4Ch] +
jnb loc_439460  +
mov eax [ebp+48h] +
mov ebx [eax+esi*4] +
mov eax [ebx] +
mov edx [eax] +
cmp edx [esp+18h] +
mov [esp+30h] edx +
jz loc_439468  +
cmp dword ptr [edx+10h] offset off_492990 +
jnz loc_439380  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_439380  +
xor ecx ecx +
jmp loc_4393A4  +
***
mov eax [esp+68h] +
mov dword ptr [eax] 1 +
lea esi [esi+0] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+2Ch] +
jmp loc_4393A4  +
***
mov dword ptr [esp+28h] 0Ch +
mov dword ptr [esp+24h] offset sub_4385B0 +
jmp loc_439345  +
***
mov ebx [edx+3Ch] +
jmp loc_4392FE  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [eax+4] +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_28] edx +
mov esi [esp+4Ch+arg_8] +
mov [esp+4Ch+var_2C] ecx +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_30] eax +
mov eax [edi+18h] +
mov [esp+4Ch+var_4C] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_439511  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] edx +
call sub_429F00  +
test eax eax +
jz loc_439520  +
mov [esp+4Ch+var_4C] ebp +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+18h] +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call sub_429CF0  +
cmp eax [edi+18h] +
jnz loc_439509  +
mov eax [edi+28h] +
mov [esp+4Ch+var_34] eax +
and eax 0FFFFFFFBh +
cmp eax 8 +
jnz loc_4396D6  +
mov ecx [esp+4Ch+arg_10] +
mov edi ebp +
mov eax [ebx+80h] +
mov edx [esp+4Ch+arg_4] +
test ecx ecx +
cmovz eax [ebx+7Ch] +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edx edx +
jz loc_4396C4  +
mov [esp+4Ch+var_20] ebp +
mov ebp eax +
jmp loc_4395D1  +
cmp eax [esp+4Ch+var_24] +
ja loc_439690  +
mov edx [esp+4Ch+arg_C] +
cmp [esp+4Ch+var_34] 0Ch +
lea eax [edx+eax*4-4] +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jz loc_439649  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_439680  +
lea edx [esp+4Ch+var_18] +
add ebp 1 +
mov [esp+4Ch+var_48] esi +
add esi 10h +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] ebx +
call eax  +
add edi [esp+4Ch+var_34] +
cmp ebp [esp+4Ch+arg_4] +
jz loc_4396C0  +
cmp [esp+4Ch+var_34] 0Ch +
jz loc_439660  +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] edi +
call eax  +
lea ecx [edi+4] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] eax +
mov ecx [ebx+28h] +
shr ecx 5 +
and ecx 42h +
mov ecx [esp+4Ch+var_18] +
jz loc_439622  +
mov edx [esp+4Ch+arg_10] +
test edx edx +
jnz loc_439622  +
mov edx [esp+4Ch+var_2C] +
sub ecx [edx] +
shr eax 8 +
test eax eax +
mov [esi+4] ecx +
jnz loc_439577  +
mov eax off_492A2C +
cmp [esp+4Ch+var_34] 0Ch +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jnz loc_43959D  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
test eax eax +
jnz loc_4395AC  +
jmp loc_43959D  +
lea eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] ebx +
call sub_438520  +
mov eax [esp+4Ch+var_14] +
jmp loc_439605  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
jmp loc_4395AC  +
mov edx [esp+4Ch+var_28] +
mov ecx [edx] +
mov [esp+4Ch+var_3C] eax +
mov eax [ebx] +
mov [esp+4Ch+var_40] ebp +
mov [esp+4Ch+var_4C] offset aSSRelocationDH +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] eax +
call off_492AE8  +
jmp loc_439630  +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax 1 +
jmp loc_439513  +
mov [esp+4Ch+var_48] 582h +
mov [esp+4Ch+var_4C] offset a____Binutil_27 +
call sub_420BA0  +
jmp loc_43954B  +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov edi [ebx+44h] +
mov esi [ebx+8Ch] +
test edi edi +
jz loc_439715  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4Ch] +
test ecx ecx +
jnz loc_439790  +
test byte ptr [ebx+14h] 4 +
jz loc_43970D  +
mov edi [ebx+4Ch] +
test edi edi +
jz loc_43970D  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_4398CC  +
mov eax [ecx+28h] +
xor ebp ebp +
test eax eax +
mov [esp+18h] eax +
jz loc_43974D  +
mov eax [ecx+18h] +
xor edx edx +
div  dword ptr [esp+18h] +
mov ebp eax +
mov esi [esi+4Ch] +
test esi esi +
jz loc_4398BF  +
mov eax [esi+28h] +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov [esp+1Ch] eax +
jz loc_439778  +
mov eax [esi+18h] +
xor edx edx +
div  dword ptr [esp+1Ch] +
mov [esp+18h] eax +
mov eax [esp+18h] +
add eax ebp +
cmp edi eax +
jz loc_439871  +
xor eax eax +
jmp loc_43970D  +
***
mov edx [ebx+24h] +
test edx edx +
jz loc_43970D  +
mov ecx esi +
mov esi [esi+28h] +
test esi esi +
jnz loc_439856  +
xor eax eax +
xor ebp ebp +
mov dword ptr [esp+18h] 0 +
xor esi esi +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_439786  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_43980B  +
mov edx [esp+4Ch] +
lea eax [ebx+1Ch] +
mov [esp] ecx +
mov ecx eax +
mov eax [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp+10h] edx +
mov edx [esp+48h] +
mov [esp+0Ch] edx +
mov edx ebx +
call sub_4394B0  +
test eax eax +
jz loc_439786  +
test esi esi +
jz loc_439849  +
mov eax [esp+4Ch] +
shl ebp 4 +
mov edx ebx +
add ebp edi +
lea ecx [ebx+1Ch] +
mov [esp+8] ebp +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp] esi +
mov [esp+0Ch] eax +
mov eax [esp+18h] +
mov [esp+4] eax +
mov eax [esp+40h] +
call sub_4394B0  +
test eax eax +
jz loc_439786  +
mov [ebx+44h] edi +
mov eax 1 +
jmp loc_43970D  +
***
mov eax [ecx+18h] +
xor edx edx +
mov dword ptr [esp+18h] 0 +
div  esi +
xor esi esi +
mov ebp eax +
shl eax 4 +
jmp loc_4397B6  +
***
test ecx ecx +
jz loc_439885  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [ecx+14h] +
xor eax [ecx+10h] +
or edx eax +
jz loc_4398DD  +
test esi esi +
jz loc_439899  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [esi+14h] +
xor eax [esi+10h] +
or edx eax +
jz loc_4398D3  +
mov dword ptr [esp+4] 5E6h +
mov dword ptr [esp] offset a____Binutil_27 +
mov [esp+1Ch] ecx +
call sub_420BA0  +
mov eax edi +
mov ecx [esp+1Ch] +
shl eax 4 +
jmp loc_4397B6  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_439778  +
***
xor ebp ebp +
jmp loc_43974D  +
***
mov eax edi +
shl eax 4 +
jmp loc_4397B6  +
***
mov eax edi +
shl eax 4 +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_425850  +
mov ecx [esp+1Ch] +
test eax eax +
mov edi eax +
jnz loc_4397D8  +
xor eax eax +
jmp loc_43970D  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+10h+var_10] esi +
shr dl 7 +
mov [esp+10h+var_4] edx +
call eax  +
lea ecx [esi+18h] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
lea ecx [esi+4] +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
mov edx [esp+10h+var_4] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jnz loc_4399D0  +
lea edx [esi+8] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi+4] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+14h] +
add esi 1Ch +
mov [ebx+14h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+18h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+1Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [esi+8] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_43998F  +
***
jmp sub_439A00  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [esi+4] +
mov edx [eax+1B0h] +
test byte ptr [edx+1AEh] 10h +
jnz loc_439A2A  +
mov ebp [edi+10h] +
mov edx [edi] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+4] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+8] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] ebp +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+10h] +
mov edx [edi+14h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+18h] +
mov edx [edi+4] +
add ebx 1Ch +
mov eax [eax+54h] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ecx +
call eax  +
mov eax [esi+4] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+28h+arg_4] ebx +
mov [esp+28h+arg_0] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+58h] +
lea edi [esp+10h] +
mov ebp [esp+50h] +
mov esi [esp+54h] +
test ebx ebx +
jnz loc_439AF8  +
jmp loc_439B30  +
add esi 20h +
sub ebx 1 +
jz loc_439B30  +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebp +
call sub_439A00  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_429DA0  +
cmp eax 20h +
jz loc_439AF0  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C0h] +
lea esi [esp+60h] +
mov edi [esp+0C4h] +
mov edx esi +
mov ebp [esp+0C8h] +
mov ebx [eax+0A0h] +
mov eax [ebx+40h] +
mov [esp+10h] eax +
mov eax [ebx+44h] +
mov [esp+1Ch] eax +
mov eax [ebx] +
mov [esp+60h] eax +
mov eax [ebx+4] +
mov [esp+64h] eax +
mov eax [ebx+8] +
mov [esp+68h] eax +
mov eax [ebx+0Ch] +
mov [esp+6Ch] eax +
mov eax [ebx+10h] +
mov [esp+70h] eax +
mov eax [ebx+14h] +
mov [esp+74h] eax +
mov eax [ebx+18h] +
mov [esp+78h] eax +
mov eax [ebx+1Ch] +
mov [esp+7Ch] eax +
mov eax [ebx+20h] +
mov [esp+80h] eax +
mov eax [ebx+24h] +
mov [esp+84h] eax +
mov eax [ebx+28h] +
mov [esp+88h] eax +
mov eax [ebx+2Ch] +
mov ecx [esp+0C0h] +
mov [esp+8Ch] eax +
mov eax [ebx+30h] +
mov [esp+90h] eax +
mov eax [ebx+34h] +
mov [esp+94h] eax +
mov eax [ebx+38h] +
mov [esp+98h] eax +
mov eax [ebx+3Ch] +
mov dword ptr [esp+78h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+9Ch] eax +
lea eax [ecx+4] +
lea ecx [esp+2Ch] +
mov [esp+14h] eax +
call sub_438FD0  +
lea ecx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 34h +
mov [esp] ecx +
call edi  +
mov eax [ebx+30h] +
xor ebx ebx +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_439CA0  +
mov [esp+0C4h] edi +
mov edi edx +
lea esi [esi+0] +
mov eax [esp+0C0h] +
add ebx 1 +
mov [esp+4] edi +
add edi 20h +
mov [esp+8] esi +
mov [esp] eax +
call sub_439A00  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] esi +
call dword ptr [esp+0C4h]  +
cmp ebx [esp+18h] +
jnz loc_439C60  +
mov edi [esp+0C4h] +
mov eax [esp+0C0h] +
xor ebx ebx +
mov eax [eax+0A0h] +
mov eax [eax+214h] +
test eax eax +
mov [esp+18h] eax +
jz loc_439DB7  +
mov eax [esp+10h] +
lea ecx [esp+2Ch] +
mov eax [eax+ebx*4] +
mov edx [eax] +
mov [esp+60h] edx +
mov edx [eax+4] +
mov [esp+64h] edx +
mov edx [eax+8] +
mov [esp+68h] edx +
mov edx [eax+0Ch] +
mov [esp+6Ch] edx +
mov edx [eax+10h] +
mov [esp+70h] edx +
mov edx [eax+14h] +
mov [esp+74h] edx +
mov edx [eax+18h] +
mov [esp+78h] edx +
mov edx [eax+1Ch] +
mov [esp+7Ch] edx +
mov edx [eax+20h] +
mov [esp+80h] edx +
mov edx [eax+24h] +
mov [esp+84h] edx +
mov edx [eax+28h] +
mov [esp+88h] edx +
mov edx [eax+2Ch] +
mov [esp+8Ch] edx +
mov edx [eax+30h] +
mov [esp+90h] edx +
mov eax [eax+34h] +
mov edx esi +
mov dword ptr [esp+70h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+94h] eax +
mov eax [esp+14h] +
call sub_438DB0  +
lea eax [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 28h +
mov [esp] eax +
call edi  +
cmp dword ptr [esp+64h] 8 +
jz loc_439DAA  +
mov edx [esp+90h] +
mov dword ptr [esp+28h] 0 +
test edx edx +
jz loc_439DC7  +
mov eax [esp+78h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call edi  +
mov eax [esp+28h] +
test eax eax +
jz loc_439DAA  +
mov [esp] eax +
call free  +
add ebx 1 +
cmp ebx [esp+18h] +
jnz loc_439CC1  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_43F6C0  +
test eax eax +
jz loc_439DAA  +
mov edx [eax+6Ch] +
test edx edx +
jnz loc_439D89  +
and dword ptr [eax+14h] 0FFFFBFFFh +
lea ecx [esp+28h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ecx +
mov [esp] eax +
call sub_41F070  +
test eax eax +
jz loc_439DAA  +
mov edx [esp+28h] +
test edx edx +
jz loc_439DAA  +
jmp loc_439D89  +
***
mov dword ptr [esp+0] 3 +
call sub_420C50  +
xor eax eax +
add esp 0FCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+84h] 7Fh +
jnz sub_439E5B  +
cmp byte ptr [esp+85h] 45h +
jnz sub_439E5B  +
cmp byte ptr [esp+86h] 4Ch +
jnz sub_439E5B  +
cmp byte ptr [esp+87h] 46h +
jnz sub_439E5B  +
cmp byte ptr [esp+8Ah] 1 +
jnz sub_439E5B  +
cmp byte ptr [esp+88h] 1 +
jnz sub_439E5B  +
movzx eax byte ptr [esp+89h] +
cmp al 1 +
jz loc_43A2C5  +
cmp al 2 +
jnz sub_439E5B  +
mov eax [ebx+4] +
mov edi [eax+0Ch] +
mov [esp+24h] eax +
test edi edi +
jnz sub_439E5B  +
***
mov eax [esp+arg_20] +
mov eax [eax+78h] +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz loc_439E67  +
mov ebp [ebx+0A0h] +
lea eax [ebx+4] +
mov edx esi +
mov [esp+arg_1C] eax +
mov ecx ebp +
call sub_438E90  +
movzx eax word ptr [ebp+24h] +
cmp ax 4 +
jz sub_439E5B  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_439F17  +
cmp ax 1 +
jz sub_439E5B  +
cmp dword ptr [ebp+34h] 28h +
jz loc_439F28  +
mov ecx [ebp+38h] +
test ecx ecx +
jnz sub_439E5B  +
test edx edx +
jnz loc_439F37  +
mov edi [ebp+38h] +
test edi edi +
jnz sub_439E5B  +
mov edx [ebx+4] +
mov ecx [edx+1B0h] +
mov edx [ecx+174h] +
mov edi ecx +
mov [esp+arg_24] ecx +
cmp byte ptr [edx+0Ah] 20h +
jnz sub_439E5B  +
mov ecx [ecx+8] +
movzx edx word ptr [ebp+26h] +
cmp ecx edx +
jz loc_439F89  +
mov esi [edi+16Ch] +
test esi esi +
jz loc_439F6F  +
cmp edx esi +
jz loc_439F89  +
mov edi [esp+arg_24] +
mov esi [edi+170h] +
test esi esi +
jz loc_439F81  +
cmp edx esi +
jz loc_439F89  +
test ecx ecx +
jnz sub_439E5B  +
cmp ax 2 +
lea esi [esi+0] +
jz loc_43A31B  +
cmp ax 3 +
jz loc_43A4E9  +
mov esi [ebp+30h] +
test esi esi +
jz loc_439FAE  +
or dword ptr [ebx+28h] 2000h +
mov eax [esp+arg_24] +
mov eax [eax] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_4237A0  +
test eax eax +
mov eax [esp+arg_24] +
jnz loc_43A2E0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_439E67  +
mov esi [ebp+18h] +
test esi esi +
jnz loc_43A325  +
mov eax [ebp+38h] +
test eax eax +
jz loc_43A307  +
cmp eax 4924924h +
ja sub_439E5B  +
imul eax eax +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_439E67  +
mov eax [ebp+38h] +
mov ecx eax +
mov [esp+arg_18] eax +
mov eax [ebx+0A0h] +
mov [eax+214h] ecx +
mov eax ecx +
mov edi [ebx+0A0h] +
shl eax 2 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_425850  +
mov [edi+40h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+40h] +
test eax eax +
jz loc_439E67  +
mov eax [esp+arg_B4] +
xor edx edx +
mov ecx esi +
mov edi [esp+arg_18] +
mov [esi] eax +
mov eax [esp+arg_B8] +
test edi edi +
mov [esi+4] eax +
mov eax [esp+arg_BC] +
mov [esi+8] eax +
mov eax [esp+arg_C0] +
mov [esi+0Ch] eax +
mov eax [esp+arg_C4] +
mov [esi+10h] eax +
mov eax [esp+arg_C8] +
mov [esi+14h] eax +
mov eax [esp+arg_CC] +
mov [esi+18h] eax +
mov eax [esp+arg_D0] +
mov [esi+1Ch] eax +
mov eax [esp+arg_D4] +
mov [esi+20h] eax +
mov eax [esp+arg_D8] +
mov [esi+24h] eax +
mov eax [esp+arg_DC] +
mov [esi+28h] eax +
mov eax [esp+arg_E0] +
mov [esi+2Ch] eax +
mov eax [esp+arg_E4] +
mov [esi+30h] eax +
mov eax [esp+arg_E8] +
mov [esi+34h] eax +
jz loc_43A11C  +
mov [esp+arg_28] ebp +
mov ebp [esp+arg_18] +
jmp loc_43A102  +
***
sub eax 0FF00h +
cmp eax 1 +
ja sub_439E5B  +
mov eax [esi+8] +
test al 40h +
jnz loc_43A2B0  +
mov edx [esi+4] +
cmp edx 4 +
jz loc_43A2B0  +
cmp edx 9 +
jz loc_43A2B0  +
mov edx [esi+18h] +
test edx edx +
jz loc_43A208  +
test al 2 +
jz loc_43A208  +
cmp dword ptr [esi+4] 8 +
jz loc_43A208  +
mov eax [esi+0Ch] +
xor edx edx +
mov ecx [ebp+14h] +
sub eax [esi+10h] +
sbb edx [esi+14h] +
mov [esp+arg_8] 0 +
mov [esp+arg_4] ecx +
mov [esp+0] eax +
mov [esp+arg_0] edx +
call sub_48BF60  +
or edx eax +
jz loc_43A208  +
mov eax [esp+arg_10C] +
and dword ptr [eax+28h] 0FFFFDFFFh +
mov eax [esp+arg_28] +
add edi 1 +
add esi 38h +
cmp [eax+38h] edi +
ja loc_43A143  +
mov ebx [esp+arg_10C] +
mov ebp eax +
mov ecx [ebp+38h] +
test ecx ecx +
jz loc_43A307  +
mov eax [ebx+0A0h] +
mov eax [eax+214h] +
cmp [ebp+3Ch] eax +
jnb loc_43A5AD  +
mov eax [ebp+30h] +
test eax eax +
jnz loc_43A4F5  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+44h] 0 +
mov edx [ebp+3Ch] +
test edx edx +
jz loc_43A46D  +
mov eax [ebp+18h] +
test eax eax +
jz loc_43A46D  +
mov eax [ebx+0A0h] +
mov edi 1 +
mov esi [eax+214h] +
cmp esi 1 +
ja loc_43A29B  +
jmp loc_43A457  +
add edi 1 +
cmp edi esi +
jz loc_43A457  +
mov [esp+arg_0] edi +
mov [esp+0] ebx +
call sub_43D7C0  +
test eax eax +
jnz loc_43A290  +
jmp loc_439E67  +
mov ecx [esp+arg_18] +
cmp ecx [esi+20h] +
ja loc_43A1BF  +
lea esi [esi+0] +
jmp sub_439E5B  +
mov eax [ebx+4] +
cmp dword ptr [eax+0Ch] 1 +
mov [esp+arg_20] eax +
jz loc_439ED2  +
jmp sub_439E5B  +
mov edx [eax+8] +
test edx edx +
jz loc_439FDF  +
mov eax [eax+0Ch] +
movzx edx byte ptr [ebp+7] +
cmp edx eax +
jz loc_439FDF  +
test eax eax +
jz loc_439FDF  +
jmp sub_439E5B  +
mov edi [ebp+3Ch] +
test edi edi +
lea esi [esi+0] +
jz loc_43A244  +
jmp sub_439E5B  +
or dword ptr [ebx+28h] 40h +
nop   +
jmp loc_439FA0  +
xor edi edi +
mov [esp+arg_8] 0 +
mov [esp+arg_0] esi +
mov [esp+arg_4] edi +
mov [esp+0] ebx +
call sub_429F00  +
test eax eax +
jnz loc_439E67  +
lea eax [esp+arg_58] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
mov [esp+arg_18] eax +
call sub_429CF0  +
cmp eax 28h +
jnz loc_439E67  +
mov eax [esp+arg_1C] +
lea ecx [esp+arg_B4] +
mov edx [esp+arg_18] +
call sub_438CB0  +
mov eax [ebp+38h] +
test eax eax +
jnz loc_43A3A0  +
mov eax [esp+arg_CC] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
mov [ebp+38h] eax +
ja sub_439E5B  +
cmp dword ptr [ebp+3Ch] 0FFFFh +
jz loc_43A5E3  +
cmp dword ptr [ebp+30h] 0FFFFh +
jz loc_43A5CC  +
cmp eax 1 +
jz loc_43A000  +
cmp eax 4924924h +
ja sub_439E5B  +
lea eax [eax+eax*4] +
xor edx edx +
lea eax ds:0FFFFFFD8h[eax*8] +
add eax esi +
adc edx edi +
cmp [ebp+18h] eax +
jnb sub_439E5B  +
mov [esp+arg_8] 0 +
mov [esp+arg_0] eax +
mov [esp+arg_4] edx +
mov [esp+0] ebx +
call sub_429F00  +
test eax eax +
jnz loc_439E67  +
mov eax [esp+arg_18] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
call sub_429CF0  +
cmp eax 28h +
jnz loc_439E67  +
mov [esp+arg_8] 0 +
mov eax [ebp+18h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
add eax 28h +
mov [esp+arg_0] eax +
call sub_429F00  +
test eax eax +
jz loc_439FEA  +
jmp loc_439E67  +
mov [esp+0] ebx +
lea esi [esi+0] +
call sub_43D030  +
test eax eax +
jz sub_439E5B  +
mov eax [esp+arg_24] +
mov eax [eax+30h] +
test eax eax +
jz loc_43A485  +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz sub_439E5B  +
mov eax [ebp+10h] +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_421280  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_43A4A7  +
jmp loc_43A4E0  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43A4E0  +
mov eax [esi+8Ch] +
mov edx [eax+4] +
cmp edx 4 +
jz loc_43A4BA  +
cmp edx 9 +
jnz loc_43A4A0  +
mov eax [eax+20h] +
test eax eax +
jz loc_43A4A0  +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_43F6C0  +
test eax eax +
jz loc_43A4A0  +
test byte ptr [eax+15h] 20h +
jz loc_43A4A0  +
or dword ptr [esi+14h] 2000h +
jmp loc_43A4A0  +
mov eax [esp+arg_20] +
jmp loc_439E69  +
or dword ptr [ebx+28h] 800h +
jmp loc_439FA0  +
cmp eax 7FFFFFFh +
ja sub_439E5B  +
shl eax 5 +
mov esi [ebx+0A0h] +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_425850  +
mov [esi+44h] eax +
mov eax [ebx+0A0h] +
mov esi [eax+44h] +
test esi esi +
jz loc_439E67  +
mov [esp+arg_8] 0 +
mov eax [ebp+14h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_429F00  +
test eax eax +
jnz loc_439E67  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov edi [eax+44h] +
jz loc_43A25C  +
xor esi esi +
jmp loc_43A58B  +
lea eax [esp+arg_38] +
add esi 1 +
mov [esp+arg_4] edi +
add edi 20h +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_439910  +
cmp [ebp+30h] esi +
jbe loc_43A25C  +
lea eax [esp+arg_38] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 20h +
mov [esp+0] eax +
call sub_429CF0  +
cmp eax 20h +
jz loc_43A568  +
jmp loc_439E67  +
mov eax [ebx] +
mov dword ptr [ebp+3Ch] 0 +
mov dword ptr [esp+0] offset aWarningSHasACo +
mov [esp+arg_0] eax +
call off_492AE8  +
jmp loc_43A244  +
***
mov edx [esp+arg_D4] +
test edx edx +
jz loc_43A3BA  +
mov [ebp+30h] edx +
jmp loc_43A3BA  +
mov edx [esp+arg_D0] +
mov [ebp+3Ch] edx +
jmp loc_43A3AD  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [esp+0D4h] +
lea ebx [esp+3Ch] +
mov edi [esp+0D0h] +
mov dword ptr [esp+8] 34h +
mov [esp+4] ebx +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov esi eax +
jnz loc_43AA40  +
cmp byte ptr [esp+3Ch] 7Fh +
jz loc_43A660  +
mov dword ptr [esp] 3 +
call sub_420C50  +
xor eax eax +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+3Dh] 45h +
jnz loc_43A643  +
cmp byte ptr [esp+3Eh] 4Ch +
jnz loc_43A643  +
cmp byte ptr [esp+3Fh] 46h +
jnz loc_43A643  +
cmp byte ptr [esp+42h] 1 +
jnz loc_43A643  +
cmp byte ptr [esp+40h] 1 +
jnz loc_43A643  +
movzx eax byte ptr [esp+41h] +
cmp al 1 +
jz loc_43A8D6  +
cmp al 2 +
jnz loc_43A643  +
mov eax [edi+4] +
mov ecx [eax+0Ch] +
test ecx ecx +
jnz loc_43A643  +
lea eax [edi+4] +
mov edx ebx +
lea ecx [esp+70h] +
call sub_438E90  +
cmp dword ptr [esp+9Ch] 20h +
jnz loc_43A643  +
mov eax [esp+0A0h] +
test eax eax +
jz loc_43A643  +
shl eax 6 +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov ecx eax +
mov [esp+24h] eax +
jz loc_43A64F  +
mov eax [esp+0A0h] +
mov [esp+4] ecx +
shl eax 5 +
mov [esp+8] eax +
mov eax [esp+0D4h] +
add eax [esp+84h] +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov ebx eax +
jnz loc_43AA73  +
mov eax [esp+0A0h] +
mov ebx eax +
shl ebx 5 +
add ebx [esp+24h] +
test eax eax +
mov [esp+28h] ebx +
jz loc_43AA62  +
mov ebp [esp+24h] +
xor esi esi +
mov ebx [esp+28h] +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
jmp loc_43A768  +
add esi 1 +
add ebp 20h +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_43A7C3  +
mov [esp+8] ebx +
mov [esp+4] ebp +
mov [esp] edi +
call sub_439910  +
cmp dword ptr [ebx] 1 +
jnz loc_43A756  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
add edx eax +
cmp edx [esp+14h] +
jbe loc_43A793  +
mov [esp+14h] edx +
mov [esp+1Ch] ebx +
mov edx [esp+18h] +
test edx edx +
jnz loc_43A756  +
mov ecx [ebx+1Ch] +
mov edx [ebx+0Ch] +
cmp ecx 1 +
jbe loc_43A7AC  +
neg ecx  +
and eax ecx +
and edx ecx +
test eax eax +
jnz loc_43A756  +
mov eax [esp+0D4h] +
mov [esp+18h] ebx +
sub eax edx +
mov [esp+20h] eax +
jmp loc_43A756  +
***
mov eax [esp+14h] +
test eax eax +
jz loc_43AA62  +
mov eax [esp+88h] +
mov dword ptr [esp+2Ch] 0 +
test eax eax +
jz loc_43A811  +
mov edx [esp+0A8h] +
test edx edx +
jz loc_43A811  +
mov ecx [esp+0A4h] +
test ecx ecx +
jz loc_43A811  +
imul edx ecx +
mov ecx [esp+1Ch] +
add eax edx +
mov [esp+2Ch] eax +
mov eax [ecx+14h] +
cmp eax [ecx+18h] +
jz loc_43AA9A  +
mov eax [esp+14h] +
mov [esp] eax +
call sub_42B590  +
test eax eax +
mov ebp eax +
jz loc_43AB10  +
mov eax [esp+0A0h] +
xor esi esi +
mov ebx [esp+28h] +
test eax eax +
jz loc_43A8EF  +
mov [esp+0D0h] edi +
mov edi [esp+0E0h] +
jmp loc_43A863  +
add esi 1 +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_43A8E8  +
cmp dword ptr [ebx] 1 +
jnz loc_43A850  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
mov ecx [ebx+0Ch] +
add edx eax +
cmp ebx [esp+18h] +
jz loc_43AA10  +
cmp [esp+1Ch] ebx +
cmovz edx [esp+14h] +
add ecx [esp+20h] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] ecx +
call edi  +
test eax eax +
jz loc_43A850  +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call free  +
mov dword ptr [esp] 1 +
call sub_420C50  +
call ds:__imp__errno  +
mov edx [esp+14h] +
mov [eax] edx +
xor eax eax +
jmp loc_43A651  +
***
mov eax [edi+4] +
cmp dword ptr [eax+0Ch] 1 +
jz loc_43A69E  +
jmp loc_43A643  +
***
mov edi [esp+0D0h] +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
cmp [esp+14h] eax +
jb loc_43AA20  +
mov eax [esp+3Ch] +
mov [ebp+0] eax +
mov eax [esp+40h] +
mov [ebp+4] eax +
mov eax [esp+44h] +
mov [ebp+8] eax +
mov eax [esp+48h] +
mov [ebp+0Ch] eax +
mov eax [esp+4Ch] +
mov [ebp+10h] eax +
mov eax [esp+50h] +
mov [ebp+14h] eax +
mov eax [esp+54h] +
mov [ebp+18h] eax +
mov eax [esp+58h] +
mov [ebp+1Ch] eax +
mov eax [esp+5Ch] +
mov [ebp+20h] eax +
mov eax [esp+60h] +
mov [ebp+24h] eax +
mov eax [esp+64h] +
mov [ebp+28h] eax +
mov eax [esp+68h] +
mov [ebp+2Ch] eax +
mov eax [esp+6Ch] +
mov [ebp+30h] eax +
mov dword ptr [esp] 8 +
call sub_42B400  +
test eax eax +
mov esi eax +
jz loc_43AAF3  +
call sub_425060  +
test eax eax +
mov ebx eax +
jz loc_43AAEB  +
mov dword ptr [esp] offset aInMemory +
call sub_476140  +
mov [ebx] eax +
mov eax [edi+4] +
mov [ebx+4] eax +
mov eax [esp+14h] +
mov [esi+4] ebp +
mov [esi] eax +
mov eax [ebx+28h] +
mov [ebx+8] esi +
mov dword ptr [ebx+0Ch] offset off_49C6E0 +
mov dword ptr [ebx+38h] 0 +
and eax 0FF80001Fh +
or eax 10000h +
mov [ebx+28h] eax +
and eax 7 +
or eax 8 +
mov dword ptr [ebx+3Ch] 0 +
mov [ebx+28h] al +
mov dword ptr [esp] 0 +
call time  +
or byte ptr [ebx+2Bh] 4 +
mov [ebx+20h] eax +
mov eax [esp+0DCh] +
test eax eax +
jz loc_43AA5B  +
mov eax [esp+0DCh] +
mov ecx [esp+20h] +
mov [eax] ecx +
add esp 0BCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub ecx eax +
xor eax eax +
jmp loc_43A87D  +
***
xor edx edx +
xor ecx ecx +
mov dword ptr [esp+5Ch] 0 +
mov [esp+6Ch] dx +
mov [esp+6Eh] cx +
jmp loc_43A909  +
***
mov dword ptr [esp] 1 +
call sub_420C50  +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_43A651  +
***
mov eax ebx +
jmp loc_43A651  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_43A643  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov dword ptr [esp] 1 +
call sub_420C50  +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_43A651  +
***
mov ecx [esp+2Ch] +
cmp ecx [esp+0D8h] +
jbe loc_43AB00  +
mov edx [edi+4] +
mov ecx [esp+1Ch] +
mov edx [edx+1B0h] +
add eax [ecx+8] +
cmp [esp+2Ch] eax +
mov edx [edx+14h] +
jbe loc_43A811  +
cmp edx 1 +
jbe loc_43A811  +
mov ecx [esp+2Ch] +
lea eax [edx+eax-1] +
neg edx  +
and eax edx +
cmp ecx eax +
mov eax [esp+14h] +
cmovbe eax ecx +
mov [esp+14h] eax +
jmp loc_43A811  +
***
mov [esp] esi +
call free  +
mov [esp] ebp +
call free  +
jmp loc_43A64F  +
***
mov eax [esp+0D8h] +
mov [esp+14h] eax +
jmp loc_43A811  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_43A651  +
***
mov eax [esp+4] +
movzx edx byte ptr [esp+8] +
shl eax 8 +
add eax edx +
retn   +
***
mov eax [esp+4] +
shr eax 8 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+4] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+24h] +
mov eax [esp+20h] +
mov ecx [edx+4] +
cmp [eax+4] ecx +
jz loc_43ABE0  +
mov dword ptr [esp] 1 +
call sub_420C50  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_43AC27  +
mov ebx [edx] +
mov dword ptr [esp+4] 2Fh +
mov [esp] ebx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call strcmp  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
jmp loc_43ABD3  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0CCh +
mov ebx [esp+0E0h] +
lea esi [esp+54h] +
mov dword ptr [esp+4] 34h +
mov [esp] esi +
mov [esp+8] ebx +
call sub_429CF0  +
cmp eax 34h +
jz loc_43AC81  +
call sub_420A00  +
cmp eax 1 +
jz loc_43AC74  +
mov dword ptr [esp] 3 +
call sub_420C50  +
xor eax eax +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+54h] 7Fh +
jnz loc_43AC68  +
cmp byte ptr [esp+55h] 45h +
jnz loc_43AC68  +
cmp byte ptr [esp+56h] 4Ch +
jnz loc_43AC68  +
cmp byte ptr [esp+57h] 46h +
jnz loc_43AC68  +
cmp byte ptr [esp+58h] 1 +
jnz loc_43AC68  +
movzx eax byte ptr [esp+59h] +
cmp al 1 +
jz loc_43AED0  +
cmp al 2 +
jnz loc_43AC68  +
mov eax [ebx+4] +
mov edi [eax+8] +
test edi edi +
jnz loc_43AC68  +
mov eax [eax+80h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_43AC74  +
mov ebp [ebx+0A0h] +
lea edi [ebx+4] +
mov edx esi +
mov eax edi +
mov ecx ebp +
call sub_438E90  +
mov eax [ebx+4] +
movzx esi word ptr [ebp+26h] +
mov eax [eax+1B0h] +
mov ecx eax +
mov [esp+18h] eax +
mov eax [eax+8] +
cmp eax esi +
jz loc_43AD84  +
mov edx [ecx+16Ch] +
test edx edx +
jz loc_43AD0E  +
cmp esi edx +
jz loc_43AD84  +
mov ecx [esp+18h] +
mov edx [ecx+170h] +
test edx edx +
jz loc_43AD20  +
cmp esi edx +
jz loc_43AD84  +
test eax eax +
jnz loc_43AC68  +
mov eax off_492AFC +
mov edx [eax] +
test edx edx +
jnz loc_43AD3E  +
jmp loc_43AD84  +
add eax 4 +
mov edx [eax] +
test edx edx +
jz loc_43AD84  +
cmp dword ptr [edx+4] 5 +
jnz loc_43AD35  +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
cmp byte ptr [ecx+0Ah] 20h +
jnz loc_43AD35  +
cmp esi [edx+8] +
jz loc_43AC68  +
mov ecx [edx+16Ch] +
test ecx ecx +
jz loc_43AD71  +
cmp esi ecx +
jz loc_43AC68  +
mov edx [edx+170h] +
test edx edx +
jz loc_43AD35  +
cmp esi edx +
jnz loc_43AD35  +
jmp loc_43AC68  +
***
mov esi [ebp+14h] +
test esi esi +
jz loc_43AC68  +
cmp word ptr [ebp+24h] 4 +
jnz loc_43AC68  +
cmp dword ptr [ebp+2Ch] 20h +
jnz loc_43AC68  +
mov edx [ebp+18h] +
mov eax [ebp+30h] +
test edx edx +
jz loc_43ADB9  +
cmp eax 0FFFFh +
jz loc_43AFDF  +
cmp eax 1 +
jbe loc_43AE25  +
cmp eax 7FFFFFFh +
ja loc_43AC68  +
mov ecx [ebp+14h] +
add eax 7FFFFFFh +
xor edx edx +
shl eax 5 +
lea esi [eax+ecx] +
cmp ecx esi +
jnb loc_43AC68  +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edx +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_43AC74  +
lea eax [esp+88h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call sub_429CF0  +
cmp eax 20h +
jnz loc_43AC74  +
mov dword ptr [esp+0Ch] 0 +
mov eax [ebp+14h] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_429F00  +
test eax eax +
jnz loc_43AC68  +
mov eax [ebp+30h] +
mov [esp] ebx +
shl eax 5 +
mov [esp+4] eax +
call sub_425850  +
test eax eax +
mov edi eax +
mov [esp+1Ch] eax +
jz loc_43AC74  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov [eax+44h] edi +
jz loc_43AEE7  +
lea eax [esp+88h] +
xor esi esi +
mov [esp+14h] ebp +
mov ebp eax +
jmp loc_43AEAF  +
mov [esp+8] edi +
add esi 1 +
add edi 20h +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_439910  +
mov eax [esp+14h] +
cmp [eax+30h] esi +
jbe loc_43AEE5  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] ebp +
call sub_429CF0  +
cmp eax 20h +
jz loc_43AE90  +
jmp loc_43AC74  +
***
mov eax [ebx+4] +
cmp dword ptr [eax+8] 1 +
jz loc_43ACBF  +
lea esi [esi+0] +
jmp loc_43AC68  +
***
mov ebp eax +
mov eax [esp+18h] +
mov eax [eax] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4237A0  +
test eax eax +
jnz loc_43AF14  +
mov eax [esp+18h] +
mov edx [eax+8] +
test edx edx +
jnz loc_43AC74  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_43AF2C  +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_43AC68  +
mov eax [ebp+30h] +
xor esi esi +
mov edi [esp+1Ch] +
test eax eax +
jnz loc_43AF4D  +
jmp loc_43B051  +
mov eax [ebp+30h] +
add esi 1 +
add edi 20h +
cmp eax esi +
jbe loc_43AF66  +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call sub_43FC40  +
test eax eax +
jnz loc_43AF40  +
jmp loc_43AC74  +
***
test eax eax +
jz loc_43B051  +
mov edi [esp+1Ch] +
shl eax 5 +
xor esi esi +
lea ecx [edi+eax] +
mov eax edi +
lea esi [esi+0] +
mov edx [eax+14h] +
test edx edx +
jz loc_43AF8F  +
add edx [eax+8] +
cmp esi edx +
cmovb esi edx +
add eax 20h +
cmp eax ecx +
jnz loc_43AF80  +
lea eax [esp+88h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_429EB0  +
test eax eax +
jnz loc_43AFD1  +
mov eax [esp+0A0h] +
cmp eax esi +
jnb loc_43AFD1  +
mov [esp+0Ch] eax +
mov [esp+8] esi +
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningBIsTrun +
call off_492AE8  +
mov eax [ebp+10h] +
mov [ebx+74h] eax +
mov eax [ebx+4] +
jmp loc_43AC76  +
***
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jnz loc_43AC74  +
lea esi [esp+2Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 28h +
mov [esp] esi +
call sub_429CF0  +
cmp eax 28h +
jnz loc_43AC74  +
lea eax [esp+88h] +
mov edx esi +
mov ecx eax +
mov eax edi +
call sub_438CB0  +
mov eax [esp+0A8h] +
test eax eax +
jnz loc_43B049  +
mov eax [ebp+30h] +
jmp loc_43ADB9  +
***
mov [ebp+30h] eax +
jmp loc_43ADB9  +
***
xor esi esi +
jmp loc_43AF96  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
mov ebx esi +
sub ebx ecx +
lea edx ds:28h[ebx*4] +
mov [esp+28h+var_24] edx +
call sub_425930  +
test eax eax +
jz loc_43B21A  +
xor edx edx +
cmp esi edi +
mov dword ptr [eax] 0 +
lea ecx [ebp+edi*4+0] +
mov dword ptr [eax+4] 1 +
jbe loc_43B1FF  +
mov esi [ecx+edx*4] +
mov [eax+edx*4+28h] esi +
add edx 1 +
cmp edx ebx +
jnz loc_43B1F1  +
test edi edi +
mov [eax+24h] ebx +
jnz loc_43B212  +
mov edx [esp+28h+arg_4] +
test edx edx +
jz loc_43B212  +
or byte ptr [eax+20h] 30h +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_43B212  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] edi +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_43B2A0  +
mov eax [esi+0Ch] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov byte ptr [ebx+edi-1] 0 +
mov [esp+1Ch+var_14] 100h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_43B2A0  +
mov edx [esi+4] +
mov ecx [esi+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 1 +
mov [eax+24h] edx +
mov [eax+50h] ecx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
mov edi eax +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_43B2F2  +
mov byte ptr [eax] 2Eh +
sub edi 1 +
add esi 2 +
lea eax [eax+1] +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov [esp+18h+var_18] ebx +
mov esi eax +
lea eax [eax+2] +
mov [esp+18h+var_14] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_43B346  +
mov byte ptr [eax] 2Eh +
add edi 1 +
mov byte ptr [eax+1] 7Ah +
lea eax [eax+2] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_28] offset a_interp_0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_14] edx +
call sub_41E710  +
test eax eax +
jz loc_43B37D  +
test byte ptr [eax+14h] 2 +
jnz loc_43B4C8  +
mov [esp+2Ch+var_1C] 2 +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] offset a_dynamic_1 +
mov [esp+2Ch+var_2C] eax +
call sub_41E710  +
cmp eax 1 +
mov eax [esp+2Ch+var_14] +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test eax eax +
jz loc_43B3B7  +
movzx eax byte ptr [eax+3] +
and eax 1 +
cmp al 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
mov edi [esp+2Ch+var_18] +
mov eax [edi+0A0h] +
mov ebp [edi+64h] +
mov eax [eax+934h] +
cmp dword ptr [eax+0Ch] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
cmp dword ptr [eax+34h] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test ebp ebp +
jz loc_43B442  +
mov eax [ebp+14h] +
mov ebx ebp +
mov [esp+2Ch+var_10] eax +
mov edx eax +
jmp loc_43B3F3  +
mov edx [ebx+14h] +
and edx 2 +
jz loc_43B417  +
mov esi [ebx] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_43B417  +
add [esp+2Ch+var_1C] 1 +
cmp dword ptr [ebx+40h] 2 +
jz loc_43B4BC  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43B3F0  +
test [esp+2Ch+var_10] 400h +
jz loc_43B43A  +
jmp loc_43B4D5  +
test byte ptr [ebp+15h] 4 +
jnz loc_43B4D5  +
mov ebp [ebp+0Ch] +
test ebp ebp +
nop   +
jnz loc_43B430  +
mov edi [esp+2Ch+var_18] +
mov eax [edi+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_43B46F  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] edx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_43B4DF  +
add [esp+10h] eax +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+1] +
imul eax [esp+10h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+40h] 2 +
jnz loc_43B3F0  +
mov edx [ebx+14h] +
test dl 2 +
jz loc_43B3F3  +
mov esi [ebx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_43B3F3  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43B486  +
jmp loc_43B41E  +
mov [esp+2Ch+var_1C] 4 +
jmp loc_43B385  +
add [esp+2Ch+var_1C] 1 +
jmp loc_43B442  +
mov dword ptr [esp+8] offset aGet_program_he +
mov dword ptr [esp+4] 0FD2h +
mov dword ptr [esp+0] offset a____Binutil_18 +
call sub_420BD0  +
nop   +
lea esi [esi+0] +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_43B521  +
sub esp 1Ch +
mov [esp+4] edx +
mov [esp+0] eax +
call ecx  +
add esp 1Ch +
retn   +
test dword ptr [edx+0Ch] 800082h +
mov eax 1 +
jnz locret_43B51F  +
mov edx [edx+10h] +
cmp edx offset off_4928E8 +
jz locret_43B51F  +
mov eax [edx+14h] +
shr eax 0Ch +
and eax 1 +
retn   +
***
mov ebx [ecx+4] +
cmp dword ptr [ebx+4] 5 +
jz loc_43B590  +
mov edx [edx+10h] +
cmp [edx+94h] eax +
jz loc_43B588  +
mov ecx [edx+3Ch] +
cmp eax [ecx+94h] +
jz loc_43B581  +
cmp edx offset off_492990 +
jz loc_43B588  +
mov eax 1 +
pop ebx  +
retn   +
mov ebx [edx+38h] +
test ebx ebx +
jnz loc_43B572  +
xor eax eax +
pop ebx  +
retn   +
mov ecx [ecx+0A0h] +
test ecx ecx +
jz loc_43B55C  +
mov ecx [edx+28h] +
test ecx ecx +
jz loc_43B55C  +
mov edx [edx+10h] +
cmp edx offset off_492990 +
jnz loc_43B55F  +
jmp loc_43B57A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_8] +
mov eax [ebp+14h] +
and eax 2100000h +
cmp eax 2000000h +
jz loc_43B5E0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
test eax eax +
jnz loc_43B5D2  +
mov ecx [ebp+8Ch] +
mov eax [ecx+20h] +
test eax eax +
jz loc_43B674  +
cmp eax 0FFFFFFFEh +
jz loc_43B6E8  +
mov eax [ebp+6Ch] +
mov edx 1 +
test eax eax +
jz loc_43B747  +
mov ecx [ecx+7Ch] +
mov esi [ebp+24h] +
mov [esp+2Ch+var_14] ecx +
add esi eax +
test ecx ecx +
jz loc_43B69B  +
mov [esp+2Ch+var_10] ebp +
mov ebx ecx +
mov ebp edi +
mov edi esi +
mov esi edx +
jmp loc_43B66C  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_43B659  +
cmp eax offset off_492990 +
jz loc_43B659  +
mov edx [ebp+4] +
sub edi 4 +
mov edx [edx+54h] +
mov [esp+2Ch+var_28] edi +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp [esp+2Ch+var_14] ebx +
jz loc_43B690  +
test ebx ebx +
jz loc_43B690  +
test esi esi +
jz loc_43B630  +
mov eax ebx +
jmp loc_43B637  +
mov eax [ecx+74h] +
test eax eax +
jz loc_43B6C6  +
mov eax [eax+14h] +
test eax eax +
jz loc_43B6C6  +
mov [ecx+20h] eax +
jmp loc_43B600  +
mov esi edi +
mov edi ebp +
mov ebp [esp+2Ch+var_10] +
mov eax [ebp+6Ch] +
sub esi 4 +
cmp esi eax +
jnz loc_43B7A5  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp+2Ch+arg_4] eax +
mov eax [ebp+14h] +
shr eax 11h +
and eax 1 +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+8] +
test eax eax +
jz loc_43B777  +
mov esi [ebp+8] +
mov eax [eax+esi*4] +
mov eax [eax+14h] +
jmp loc_43B682  +
mov eax [ecx+7Ch] +
xor edx edx +
mov eax [eax+8Ch] +
mov eax [eax+78h] +
mov esi [eax+8Ch] +
mov eax [eax+94h] +
mov esi [esi+20h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+928h] 0 +
jnz loc_43B717  +
mov edx [eax+68h] +
mov eax [eax+218h] +
sub esi edx +
mov eax [eax+esi*4] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
ja loc_43B73F  +
nop   +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
jbe loc_43B730  +
mov eax [eax+1Ch] +
jmp loc_43B682  +
mov eax [ebp+24h] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
call sub_425850  +
mov ecx [ebp+8Ch] +
xor edx edx +
test eax eax +
mov [ebp+6Ch] eax +
mov [ecx+30h] eax +
jnz loc_43B610  +
mov dword ptr [ebx] 1 +
jmp loc_43B5D2  +
mov [esp+2Ch+var_28] 0C8Bh +
mov [esp+2Ch+var_2C] offset a____Binutil_18 +
call sub_420BA0  +
mov eax [edi+0A0h] +
mov ecx [ebp+8Ch] +
mov eax [eax+934h] +
mov eax [eax+8] +
jmp loc_43B6DD  +
mov [esp+2Ch+var_24] offset aBfd_elf_set_gr +
mov [esp+2Ch+var_28] 0CDAh +
mov [esp+2Ch+var_2C] offset a____Binutil_18 +
call sub_420BD0  +
jmp sub_43B7D0  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_41E710  +
test eax eax +
jz loc_43BB38  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edi+14h] +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_41EBD0  +
test eax eax +
jz loc_43BB70  +
mov edx [edi+24h] +
mov ecx [edi+50h] +
mov ebx [edi+54h] +
mov [eax+24h] edx +
mov edx [edi+40h] +
mov [eax+50h] ecx +
mov [eax+54h] ebx +
mov [eax+40h] edx +
mov eax 1 +
jmp loc_43BB31  +
xor eax eax +
jmp loc_43BB31  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 9Ch +
mov eax [esp+0A8h+arg_0] +
lea edi [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] offset aSLd_0 +
mov [esp+0A8h+var_A8] edi +
mov [esp+0A8h+var_8C] ecx +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+arg_4] +
mov [esp+0A8h+var_A0] eax +
call sprintf  +
mov eax edi +
mov edx [eax] +
add eax 4 +
lea ebx [edx-1010101h] +
not edx  +
and ebx edx +
and ebx 80808080h +
jz loc_43BBBE  +
mov ecx ebx +
shr ecx 10h +
test ebx 8080h +
cmovz ebx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add bl bl +
sbb eax 3 +
sub eax edi +
add eax 1 +
mov [esp+0A8h+var_A4] eax +
mov [esp+0A8h+var_A8] esi +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_43BC70  +
mov [esp+0A8h+var_A4] edi +
mov [esp+0A8h+var_A8] eax +
call strcpy  +
mov [esp+0A8h+var_A0] 100h +
mov [esp+0A8h+var_A4] ebx +
mov [esp+0A8h+var_A8] esi +
call sub_41EAF0  +
test eax eax +
mov ecx eax +
jz loc_43BC70  +
mov eax [ebp+0] +
mov [ecx+24h] eax +
mov eax [esp+0A8h+var_8C] +
mov eax [eax] +
mov dword ptr [ecx+54h] 0 +
mov dword ptr [ecx+40h] 2 +
mov [ecx+50h] eax +
mov eax [esi+0A0h] +
mov edx [eax+930h] +
mov eax 1 +
mov edi [edx+8] +
cmp [esp+0A8h+arg_0] edi +
jz loc_43BC80  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+0A8h+arg_4] +
mov eax esi +
call sub_43BB10  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_1C] ecx +
call strlen  +
mov [esp+38h+var_38] edi +
add eax 6 +
mov [esp+38h+var_34] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_43BD32  +
mov eax [esp+38h+arg_0] +
mov esi offset a_rela +
mov ecx [esp+38h+var_1C] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aSS_11 +
test eax eax +
mov eax offset a_rel +
cmovz esi eax +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_30] esi +
call sprintf  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
mov [ebp+0] eax +
setnz al  +
add esp 2Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+4] +
mov [esp+28h+var_1C] ecx +
mov ecx [edx] +
mov edi [eax+1B0h] +
test ecx ecx +
jz loc_43BD72  +
mov [esp+28h+var_24] 0B19h +
mov [esp+28h+var_28] offset a____Binutil_18 +
call sub_420BA0  +
mov [esp+28h+var_24] 38h +
mov [esp+28h+var_28] esi +
call sub_425930  +
mov edx [esp+28h+arg_4] +
test edx edx +
mov ebx eax +
mov [ebp+0] eax +
jz loc_43BE03  +
mov dword ptr [eax] 0FFFFFFFFh +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_43BDF0  +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 4 +
movzx edx byte ptr [eax+4] +
mov [ebx+28h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+18h] 0 +
shl eax cl +
mov [ebx+24h] eax +
mov eax 1 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 9 +
movzx edx byte ptr [eax+3] +
jmp loc_43BDAE  +
mov eax [esp+28h+arg_0] +
mov edx ebx +
mov ecx [esp+28h+var_1C] +
mov [esp+28h+var_28] eax +
mov eax esi +
call sub_43BCA0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_43BD95  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [edi+4] +
mov ebx [esi+8Ch] +
mov ebp [esi] +
mov eax [eax+1B0h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+4] +
test edx edx +
jnz loc_43C100  +
mov eax [eax] +
test eax eax +
jz loc_43C270  +
test byte ptr [eax+0Ch] 1 +
jz loc_43BE85  +
mov edx [esi+14h] +
test dh 20h +
jz loc_43BE85  +
cmp byte ptr [ebp+1] 64h +
jz loc_43C320  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
mov [ebx] eax +
jz loc_43C227  +
mov edx [esi+14h] +
mov [esp+2Ch+var_10] 0 +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
jnz loc_43BED3  +
test byte ptr [esi+18h] 1 +
jz loc_43C1B2  +
mov eax [esi+1Ch] +
mov [ebx+0Ch] eax +
mov ecx [esi+40h] +
mov eax [esi+24h] +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp ecx 1Eh +
mov [ebx+18h] eax +
mov dword ptr [ebx+1Ch] 0 +
ja loc_43C243  +
mov eax 1 +
shl eax cl +
mov ecx edx +
and ecx 2000000h +
mov [ebx+24h] eax +
mov eax 11h +
mov [ebx+2Ch] esi +
mov dword ptr [ebx+30h] 0 +
mov [esp+2Ch+var_14] ecx +
jnz loc_43BF3C  +
mov ecx edx +
mov al 8 +
and ecx 103h +
cmp ecx 1 +
mov ecx 1 +
cmovnz eax ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_43C108  +
mov [ebx+4] eax +
mov ecx eax +
cmp ecx 0Bh +
jz loc_43C386  +
jbe loc_43C160  +
cmp ecx 6FFFFFFDh +
jz loc_43C360  +
ja loc_43C2B0  +
cmp ecx 11h +
jz loc_43C2F6  +
cmp ecx 6FFFFFF6h +
jnz loc_43BF98  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 40h +
setnz al  +
movzx eax al +
shl eax 2 +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_43BFA4  +
or dword ptr [ebx+8] 2 +
test dl 8 +
jnz loc_43BFAD  +
or dword ptr [ebx+8] 1 +
test dl 10h +
jz loc_43BFB6  +
or dword ptr [ebx+8] 4 +
test edx 800000h +
jz loc_43BFDD  +
mov eax [ebx+8] +
mov ecx eax +
or ecx 10h +
test edx 1000000h +
mov [ebx+8] ecx +
mov ecx [esi+78h] +
mov [ebx+28h] ecx +
jz loc_43BFDD  +
or eax 30h +
mov [ebx+8] eax +
mov eax [esp+2Ch+var_14] +
test eax eax +
jnz loc_43BFF9  +
mov eax [esi+8Ch] +
mov eax [eax+74h] +
test eax eax +
jz loc_43BFF9  +
or dword ptr [ebx+8] 200h +
test dh 4 +
jz loc_43C036  +
mov eax [esi+24h] +
or dword ptr [ebx+8] 400h +
test eax eax +
jnz loc_43C036  +
test dh 1 +
jnz loc_43C036  +
mov ecx [esi+0A4h] +
mov dword ptr [ebx+18h] 0 +
test ecx ecx +
jz loc_43C036  +
mov eax [ecx+0Ch] +
add eax [ecx+8] +
test eax eax +
mov [ebx+18h] eax +
jz loc_43C036  +
mov dword ptr [ebx+4] 8 +
mov eax edx +
and eax 2008000h +
cmp eax 8000h +
jz loc_43C237  +
and edx 4 +
jz loc_43C0C0  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
jz loc_43C080  +
mov ecx [ebx+40h] +
mov edx [ebx+50h] +
mov [esp+2Ch+var_18] ecx +
add ecx edx +
test ecx ecx +
jz loc_43C080  +
movzx ecx byte ptr [eax] +
and ecx 3 +
cmp cl 2 +
jz loc_43C1C0  +
cmp byte ptr [eax+2] 0 +
js loc_43C1C0  +
movzx ecx byte ptr [esi+19h] +
lea eax [ebx+3Ch] +
lea edx [ebx+4Ch] +
shr cl 2 +
and ecx 1 +
test byte ptr [esi+19h] 4 +
mov [esp+2Ch+var_2C] ecx +
mov ecx ebp +
cmovz edx eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_43BD40  +
test eax eax +
jnz loc_43C0C0  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
lea esi [esi+0] +
mov eax [esp+2Ch+var_1C] +
mov ebp [ebx+4] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_43C0EA  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] edi +
call eax  +
test eax eax +
jnz loc_43C0EA  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
cmp ebp 8 +
jnz loc_43C100  +
mov eax [esi+24h] +
test eax eax +
jz loc_43C100  +
mov dword ptr [ebx+4] 8 +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 8 +
jnz loc_43BF4C  +
cmp eax 1 +
jnz loc_43BF98  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_43BFA4  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset aWarningSection +
call off_492AE8  +
mov dword ptr [ebx+4] 1 +
mov edx [esi+14h] +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax edx +
and eax 2000000h +
mov [esp+2Ch+var_14] eax +
jmp loc_43BF98  +
cmp ecx 5 +
jz loc_43C346  +
jbe loc_43C3A0  +
cmp ecx 6 +
jz loc_43C2E0  +
cmp ecx 9 +
nop   +
lea esi [esi+0] +
jnz loc_43BF98  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 4 +
jz loc_43BF98  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+3] +
mov [ebx+28h] eax +
jmp loc_43BF98  +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_43BED9  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_43C1F1  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jnz loc_43C1F1  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+3Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_43BD40  +
test eax eax +
jz loc_43C227  +
mov edx [ebx+50h] +
test edx edx +
jz loc_43C0C0  +
mov edx [ebx+4Ch] +
test edx edx +
jnz loc_43C0C0  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+4Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 1 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_43BD40  +
test eax eax +
jnz loc_43C0C0  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
jmp loc_43C100  +
or dword ptr [ebx+8] 80000000h +
jmp loc_43C048  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] offset aBErrorAlignmen +
call off_492AE8  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+17h] 10h +
jz loc_43BE85  +
mov eax [edi+28h] +
shr eax 5 +
test eax 28000h +
jz loc_43C3D5  +
cmp byte ptr [ebp+1] 7Ah +
jnz loc_43BE85  +
mov edx ebp +
mov eax edi +
call sub_43B2B0  +
test eax eax +
mov ebp eax +
jnz loc_43BE85  +
jmp loc_43C227  +
cmp ecx 6FFFFFFEh +
jnz loc_43C302  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_43C405  +
mov eax [edi+0A0h] +
mov eax [eax+23Ch] +
mov [ebx+20h] eax +
jmp loc_43BF98  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+6] +
mov [ebx+28h] eax +
jmp loc_43BF98  +
mov dword ptr [ebx+28h] 4 +
jmp loc_43BF98  +
cmp ecx 6FFFFFFFh +
jnz loc_43BF98  +
mov dword ptr [ebx+28h] 2 +
jmp loc_43BF98  +
cmp byte ptr [ebp+6] 5Fh +
jnz loc_43BE85  +
or edx 8000000h +
mov [esi+14h] edx +
mov [esp+2Ch+var_10] 1 +
mov dword ptr [ebx] 0FFFFFFFFh +
jmp loc_43BEBE  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
mov [ebx+28h] eax +
jmp loc_43BF98  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_43C440  +
mov eax [edi+0A0h] +
mov eax [eax+238h] +
mov [ebx+20h] eax +
jmp loc_43BF98  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [ebx+28h] eax +
jmp loc_43BF98  +
cmp ecx 4 +
jnz loc_43BF98  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 8 +
jz loc_43BF98  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+4] +
mov [ebx+28h] eax +
jmp loc_43BF98  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jnz loc_43BE85  +
mov edx ebp +
mov eax edi +
call sub_43B300  +
test eax eax +
jz loc_43C227  +
cmp byte ptr [ebp+1] 7Ah +
jz loc_43C466  +
mov ebp eax +
lea esi [esi+0] +
jmp loc_43BE85  +
mov ecx [edi+0A0h] +
mov ecx [ecx+23Ch] +
test ecx ecx +
jz loc_43BF98  +
cmp eax ecx +
jz loc_43BF98  +
mov [esp+2Ch+var_28] 0C08h +
mov [esp+2Ch+var_2C] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_43C13E  +
mov ecx [edi+0A0h] +
mov ecx [ecx+238h] +
test ecx ecx +
jz loc_43BF98  +
cmp eax ecx +
jz loc_43BF98  +
mov [esp+2Ch+var_28] 0BFCh +
jmp loc_43C429  +
mov [esp+2Ch+var_28] 0B87h +
mov [esp+2Ch+var_2C] offset a____Binutil_18 +
mov [esp+2Ch+var_18] eax +
call sub_420BA0  +
mov eax [esp+2Ch+var_18] +
mov ebp eax +
jmp loc_43BE85  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset a8_8x +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] ebx +
movzx edx word ptr [esi] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+2] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+2] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+4] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+6] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+6] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+8] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+0Ch] +
mov edx [esi+0Ch] +
add ebx 10h +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+2] +
mov [ebx] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+4] +
mov [ebx+2] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+6] +
mov [ebx+4] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+6] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edx [esp+1Ch+arg_8] +
mov [edx] ax +
add esp 1Ch +
retn   +
***
jmp sub_43C890  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov eax [eax+4] +
mov eax [eax+60h] +
mov [esp+arg_4] ecx +
movzx edx word ptr [edx] +
mov [esp+arg_0] edx +
jmp eax  +
***
xor eax eax +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test cl cl +
jz locret_43C8E2  +
shl eax 4 +
add eax ecx +
mov ecx eax +
and ecx 0F0000000h +
jz loc_43C8B6  +
xor eax ecx +
add edx 1 +
shr ecx 18h +
xor eax ecx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jnz loc_43C8C1  +
retn   +
***
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
mov eax 1505h +
test dl dl +
jz loc_43C918  +
mov ebx eax +
add ecx 1 +
shl ebx 5 +
add edx ebx +
add eax edx +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_43C904  +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
cmp esi 937h +
jbe loc_43C9A1  +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
call sub_425930  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_43C9C0  +
mov edx [esp+14h+arg_8] +
mov esi 1 +
mov [eax+920h] edx +
movzx edx byte ptr [ebx+28h] +
and edx 18h +
cmp dl 8 +
jz loc_43C999  +
mov [esp+14h+var_10] 40h +
mov [esp+14h+var_14] ebx +
call sub_425930  +
test eax eax +
jz loc_43C9C0  +
mov edx [ebx+0A0h] +
mov [edx+934h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+1Ch] 0FFFFFFFFh +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0F0h +
mov [esp+14h+var_14] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_43C935  +
xor esi esi +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+4] +
mov dword ptr [esp+4] 938h +
mov [esp] eax +
mov [esp+8] edx +
call sub_43C920  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov eax [ebx+4] +
mov eax [eax+78h] +
mov [esp] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_43CA49  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 14h +
mov [esp] ebx +
call sub_425930  +
xor edx edx +
mov [esi+930h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+930h] +
test eax eax +
setnz dl  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_43CA60  +
***
mov ecx [esp+arg_8] +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test ecx ecx +
jz loc_43CA72  +
jmp loc_43CA80  +
mov eax offset unk_4B04D2 +
retn   +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov eax [eax+0A0h] +
mov ebx [eax+40h] +
test ebx ebx +
jz loc_43CBB7  +
cmp [eax+214h] edx +
jbe loc_43CBB7  +
lea edi [ebx+edx*4] +
mov ebx [edi] +
mov eax [ebx+30h] +
test eax eax +
jz loc_43CAD0  +
mov eax [ebx+18h] +
cmp eax ecx +
jbe loc_43CBC1  +
mov eax [ebx+30h] +
add eax ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
cmp eax 5FFFFFFFh +
jbe loc_43CC22  +
mov ebp [ebx+18h] +
mov [esp+4Ch+var_28] ecx +
mov eax [ebx+10h] +
mov [esp+4Ch+var_2C] edx +
mov edx [ebx+14h] +
lea ecx [ebp+1] +
cmp ecx 1 +
mov [esp+4Ch+var_24] ecx +
jbe loc_43CBB0  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_429F00  +
mov edx [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+var_28] +
test eax eax +
jnz loc_43CC1E  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_20] ecx +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_48] eax +
call sub_425850  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_20] +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_43CC1E  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_24] ecx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
call sub_429CF0  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_24] +
cmp ebp eax +
jz loc_43CC47  +
call sub_420A00  +
sub eax 1 +
jz loc_43CB95  +
mov [esp+4Ch+var_4C] 12h +
call sub_420C50  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call sub_425AA0  +
mov ebx [edi] +
mov dword ptr [ebx+18h] 0 +
nop   +
mov dword ptr [ebx+30h] 0 +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov ebp [edi+3Ch] +
mov edi off_492AE8 +
cmp edx ebp +
mov edx [ebx] +
jz loc_43CC11  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_2C] ecx +
call sub_43CA60  +
mov edx [ebx+18h] +
mov ecx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBInvalidString +
call edi  +
xor eax eax +
jmp loc_43CAC2  +
cmp ecx edx +
jnz loc_43CBD6  +
mov edx eax +
mov eax offset a_shstrtab +
jmp loc_43CBF1  +
mov ebx [edi] +
jmp loc_43CBB0  +
cmp eax 3 +
jz loc_43CADE  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBAttemptToLoad +
call off_492AE8  +
xor eax eax +
jmp loc_43CAC2  +
mov eax [esp+4Ch+var_2C] +
mov byte ptr [eax+ebp] 0 +
mov eax [edi] +
mov edi [esp+4Ch+var_2C] +
mov [eax+30h] edi +
jmp loc_43CAB2  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov esi [eax+4] +
cmp dword ptr [esi+4] 5 +
jnz loc_43CF80  +
mov ebx [esp+3Ch+arg_8] +
test ebx ebx +
jz loc_43CD39  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+0A0h] +
mov edi [ebp+208h] +
test edi edi +
jz loc_43CDE0  +
mov ebx [ebp+40h] +
mov eax edi +
mov edx [eax+1Ch] +
cmp [ebx+edx*4] ecx +
jz loc_43CCBC  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_43CCA5  +
add ebp 48h +
cmp ecx ebp +
cmovz eax edi +
mov [esp+3Ch+var_24] eax +
mov ebp [esi+1B0h] +
xor ebx ebx +
mov edx [esp+3Ch+arg_14] +
mov esi [ecx+10h] +
mov edi [ecx+14h] +
mov eax [ebp+174h] +
test edx edx +
movzx eax byte ptr [eax+5] +
mov [esp+3Ch+var_1C] eax +
jz loc_43CDED  +
mov eax [esp+3Ch+var_1C] +
xor edx edx +
imul eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
add eax esi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
adc edx edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_429F00  +
test eax eax +
jz loc_43CD45  +
xor esi esi +
mov [esp+3Ch+arg_10] 0 +
test ebx ebx +
jz loc_43CD2D  +
mov [esp+3Ch+var_3C] ebx +
call free  +
test esi esi +
jz loc_43CD39  +
mov [esp+3Ch+var_3C] esi +
call free  +
mov eax [esp+3Ch+arg_10] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+var_1C] +
imul esi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_429CF0  +
cmp eax esi +
jnz loc_43CD17  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_43CE16  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_43CE16  +
mov edx [eax+14h] +
xor esi esi +
mov eax [eax+10h] +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_24] eax +
test edx edx +
jz loc_43CF53  +
mov eax [esp+3Ch+arg_C] +
xor edx edx +
mov [esp+3Ch+var_30] 0 +
shl eax 2 +
add eax [esp+3Ch+var_24] +
adc edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_429F00  +
test eax eax +
jz loc_43CEFA  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_43CD21  +
mov [esp+3Ch+var_24] 0 +
jmp loc_43CCC0  +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
call sub_42B440  +
test eax eax +
mov [esp+3Ch+arg_14] eax +
jnz loc_43CF9C  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_43CD39  +
xor esi esi +
mov [esp+3Ch+arg_18] 0 +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_18] 0 +
test eax eax +
jz loc_43CF2A  +
mov eax [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*4] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+3Ch+var_24] eax +
jnb loc_43CD21  +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_14] esi +
mov esi ebp +
mov [esp+3Ch+var_10] ebx +
mov ebx [esp+3Ch+arg_18] +
mov ebp edx +
jmp loc_43CE79  +
add edi 14h +
add ebp [esp+3Ch+var_1C] +
test ebx ebx +
lea eax [ebx+4] +
cmovnz ebx eax +
cmp [esp+3Ch+var_24] edi +
jbe loc_43CEED  +
mov eax [esi+174h] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+20h] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jnz loc_43CE64  +
mov eax ebp +
xor edx edx +
mov esi [esp+3Ch+var_14] +
sub eax [esp+3Ch+arg_14] +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] offset aBSymbolNumberL +
div  [esp+3Ch+var_1C] +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] eax +
call off_492AE8  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+arg_10] 0 +
test eax eax +
jz loc_43CD21  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_43CD21  +
mov esi [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
jmp loc_43CD21  +
mov eax [esp+3Ch+arg_8] +
lea edi ds:0[eax*4] +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] eax +
call sub_429CF0  +
cmp eax edi +
jnz loc_43CDD2  +
jmp loc_43CE20  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] eax +
call sub_42B440  +
test eax eax +
mov [esp+3Ch+arg_10] eax +
jz loc_43CD21  +
mov [esp+3Ch+var_18] eax +
jmp loc_43CE34  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call sub_42B440  +
test eax eax +
mov esi eax +
jz loc_43CDD2  +
mov [esp+3Ch+arg_18] eax +
jmp loc_43CD9D  +
mov [esp+3Ch+var_34] offset aBfd_elf_get_el +
mov [esp+3Ch+var_38] 18Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_18 +
call sub_420BD0  +
mov ebx eax +
jmp loc_43CCE8  +
***
sub esp 4 +
mov ebx [esp+4+arg_8] +
mov eax [esp+4+arg_4] +
mov esi [esp+4+arg_C] +
mov ecx [ebx+8] +
mov edx [eax+1Ch] +
test ecx ecx +
jz loc_43CFF0  +
mov eax [esp+4+arg_0] +
call loc_43CA80  +
test eax eax +
jz loc_43D027  +
test esi esi +
jz loc_43CFE4  +
cmp byte ptr [eax] 0 +
nop   +
jnz loc_43CFE4  +
mov eax [esi] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
movzx edx byte ptr [ebx+0Ch] +
mov eax offset unk_4B04D2 +
and edx 0Fh +
cmp dl 3 +
jnz loc_43CFD8  +
mov ecx [ebx+10h] +
mov ebx [esp+4+arg_0] +
mov edx [ebx+0A0h] +
cmp ecx [edx+214h] +
jnb loc_43CFD8  +
mov ebx [edx+40h] +
mov edx [edx+3Ch] +
mov ecx [ebx+ecx*4] +
mov ecx [ecx] +
test ecx ecx +
jz loc_43CFD8  +
jmp loc_43CFCB  +
mov eax offset aNull_0 +
jmp loc_43CFE4  +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+44h+arg_0] +
mov eax [ebp+0A0h] +
mov ebx [ebp+64h] +
mov eax [eax+908h] +
test ebx ebx +
mov [esp+44h+var_24] eax +
jnz loc_43D08B  +
jmp loc_43D0E7  +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_43D084  +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBWarningSh_lin +
call eax  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43D0E7  +
mov eax [ebx+8Ch] +
test byte ptr [eax+8] 80h +
jz loc_43D084  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_43D060  +
mov ecx [ebp+0A0h] +
cmp edx [ecx+214h] +
jb loc_43D170  +
mov eax [ebx+94h] +
xor edi edi +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aBSh_linkDInSec +
mov [esp+44h+var_40] eax +
call off_492AE8  +
mov eax [ebx+8Ch] +
xor ecx ecx +
mov [eax+64h] ecx +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43D08B  +
mov eax [esp+44h+var_24] +
cmp eax 0FFFFFFFFh +
jz loc_43D1C0  +
test eax eax +
jz loc_43D1C0  +
mov [esp+44h+var_28] 0 +
mov edx edi +
mov eax [ebp+0A0h] +
mov edi [esp+44h+var_28] +
mov eax [eax+904h] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_43D190  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_43D190  +
mov eax [ebx+30h] +
test eax eax +
jz loc_43D190  +
mov edi [ebx+18h] +
lea esi [eax+4] +
shr edi 2 +
jmp loc_43D145  +
mov eax [eax+8Ch] +
mov ecx [ebx+2Ch] +
mov [eax+78h] ecx +
add esi 4 +
sub edi 1 +
jz loc_43D1AB  +
mov ecx [esi] +
mov eax [ecx+2Ch] +
test eax eax +
jnz loc_43D136  +
mov eax [ecx+4] +
cmp eax 9 +
jz loc_43D160  +
cmp eax 4 +
jnz loc_43D1D0  +
mov eax [ebx+2Ch] +
sub dword ptr [eax+24h] 4 +
jmp loc_43D142  +
mov ecx [ecx+40h] +
mov ecx [ecx+edx*4] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_43D0B0  +
mov [eax+64h] ecx +
jmp loc_43D0E0  +
mov eax [esp+44h+var_28] +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBSectionGroupE +
mov [esp+44h+var_3C] eax +
call off_492AE8  +
xor edx edx +
add [esp+44h+var_28] 1 +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_24] eax +
jnz loc_43D106  +
mov edi edx +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx off_492AE8 +
mov ecx [ecx] +
mov [esp+44h+var_20] edx +
mov edx [ebx+2Ch] +
test ecx ecx +
mov edx [edx] +
mov [esp+44h+var_1C] edx +
mov edx [ebp+0A0h] +
mov edx [edx+3Ch] +
mov [esp+44h+var_18] edx +
mov edx offset unk_4B04D2 +
jnz loc_43D223  +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_44] offset aBUnknownDSecti +
call eax  +
xor edx edx +
jmp loc_43D142  +
mov edx [esp+44h+var_18] +
mov eax ebp +
call loc_43CA80  +
mov edx eax +
mov eax [esi] +
mov eax [eax+4] +
jmp loc_43D1FB  +
***
mov eax [esp+8] +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
setnz al  +
movzx eax al +
retn   +
***
mov ecx [esp+8] +
mov edx [ecx+0Ch] +
mov edx [edx+24h] +
test edx edx +
jnz loc_43D2A0  +
mov eax [esp+14h] +
mov ecx [esp+8] +
mov eax [eax+38h] +
add [ecx+4] eax +
xor eax eax +
retn   +
***
mov edx [ecx+8] +
test edx edx +
jz loc_43D28E  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43D2D5  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43D2C8  +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_43D310  +
mov edx [ebx+0A0h] +
mov edx [edx+20h] +
mov [eax+20h] edx +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov dword ptr [edx+3Ch] 1 +
mov edx [ebx+0A0h] +
mov edx [edx+20Ch] +
mov [eax+20Ch] edx +
mov edx [ebx+0A0h] +
mov eax [esi+0A0h] +
movzx edx byte ptr [edx+7] +
mov [eax+7] dl +
mov [esp+4] esi +
mov [esp] ebx +
call sub_467B30  +
mov eax [ebx+0A0h] +
mov [esp+10h] eax +
mov ebp [eax+40h] +
mov eax [esi+0A0h] +
mov edx [eax+40h] +
test edx edx +
jz loc_43D2C8  +
test ebp ebp +
jz loc_43D2C8  +
mov eax [eax+214h] +
test eax eax +
jz loc_43D2C8  +
lea eax [edx+eax*4] +
mov edi edx +
mov [esp+8] eax +
jmp loc_43D38D  +
add edi 4 +
cmp edi [esp+8] +
jz loc_43D2C8  +
mov ecx [edi] +
test ecx ecx +
jz loc_43D380  +
cmp dword ptr [ecx+4] 8 +
jnz loc_43D380  +
mov eax [ecx+18h] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_43D380  +
mov eax [ecx+20h] +
test eax eax +
mov [esp+18h] eax +
jz loc_43D3B6  +
mov eax [ecx+1Ch] +
test eax eax +
jnz loc_43D380  +
mov eax [esp+10h] +
mov ebx [eax+214h] +
test ebx ebx +
jz loc_43D380  +
mov esi [ecx+8] +
xor eax eax +
mov [esp+14h] edi +
jmp loc_43D3D7  +
add eax 1 +
cmp eax ebx +
jz loc_43D445  +
mov edx [ebp+eax*4+0] +
cmp [edx+8] esi +
jnz loc_43D3D0  +
mov edi [ecx+24h] +
cmp [edx+24h] edi +
jnz loc_43D3D0  +
mov edi [ecx+28h] +
cmp [edx+28h] edi +
jnz loc_43D3D0  +
mov edi [esp+0Ch] +
cmp edi [edx+18h] +
jnz loc_43D3D0  +
mov edi [ecx+0Ch] +
cmp [edx+0Ch] edi +
jnz loc_43D3D0  +
mov edi [edx+20h] +
cmp [esp+18h] edi +
mov [esp+1Ch] edi +
jnz loc_43D44E  +
mov edi [ecx+1Ch] +
cmp [edx+1Ch] edi +
jz loc_43D3D0  +
mov eax [esp+18h] +
mov edi [esp+14h] +
mov [esp+1Ch] eax +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_43D42E  +
mov eax [edx+1Ch] +
mov [ecx+1Ch] eax +
cmp dword ptr [esp+18h] 0 +
jnz loc_43D380  +
mov eax [esp+1Ch] +
mov [ecx+20h] eax +
jmp loc_43D380  +
***
mov edi [esp+14h] +
jmp loc_43D380  +
***
mov edi [esp+14h] +
jmp loc_43D422  +
***
mov edx [esp+arg_0] +
mov eax [edx+0A0h] +
mov ecx [eax+914h] +
test ecx ecx +
jz loc_43D4FA  +
mov esi [eax+918h] +
test esi esi +
jz loc_43D4F0  +
mov eax [esp+arg_4] +
mov ecx [esp+arg_8] +
movzx ebx word ptr [eax+30h] +
movsx eax bx +
shr eax 1Fh +
and ebx 7FFFh +
mov [ecx] eax +
mov eax offset unk_4B04D2 +
jz loc_43D4E9  +
cmp ebx 1 +
jz loc_43D4FF  +
mov edx [edx+0A0h] +
cmp ebx [edx+238h] +
jbe loc_43D507  +
mov esi [edx+244h] +
test esi esi +
jz loc_43D4E9  +
mov edx [esi+18h] +
test edx edx +
jnz loc_43D4D7  +
jmp loc_43D4E2  +
mov edx [edx+14h] +
test edx edx +
jz loc_43D4E2  +
movzx ecx word ptr [edx+6] +
cmp ecx ebx +
jnz loc_43D4D0  +
mov eax [edx+10h] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_43D4C2  +
pop ebx  +
pop esi  +
retn   +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_43D484  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax offset aBase +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+240h] +
lea eax [ebx+ebx*4] +
pop ebx  +
pop esi  +
lea eax [ecx+eax*8] +
mov eax [eax-10h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+4Ch] +
mov ebx [esp+44h] +
mov edi [esp+48h] +
cmp eax 1 +
jz loc_43D680  +
jb loc_43D666  +
cmp eax 2 +
jnz loc_43D65E  +
mov eax [edi+10h] +
test eax eax +
jz loc_43D7B0  +
mov esi [eax] +
mov eax [esp+40h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0CCh] +
test eax eax +
jz loc_43D6D6  +
mov edx [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_43D6D6  +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aS_18 +
mov [esp] ebx +
call fprintf  +
mov eax [edi+10h] +
test eax eax +
jz loc_43D6F2  +
test byte ptr [eax+15h] 10h +
jz loc_43D6F2  +
mov eax [edi+18h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_421580  +
lea eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_43D460  +
test eax eax +
mov esi eax +
jz loc_43D60C  +
mov eax [esp+1Ch] +
mov [esp+8] esi +
test eax eax +
jnz loc_43D700  +
mov dword ptr [esp+4] offset a11s +
mov [esp] ebx +
call fprintf  +
movzx eax byte ptr [edi+25h] +
cmp al 1 +
jz loc_43D785  +
jb loc_43D64A  +
cmp al 2 +
jz loc_43D760  +
cmp al 3 +
jnz loc_43D741  +
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_protected +
call fwrite  +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_20 +
mov [esp] ebx +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call fputs  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aElf +
call fwrite  +
mov eax [edi+8] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_421580  +
mov eax [edi+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+4] offset aLx +
mov [esp+8] eax +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov ebp [edi+4] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_423940  +
jmp loc_43D58E  +
***
mov eax [edi+1Ch] +
jmp loc_43D5BA  +
***
mov dword ptr [esp+4] offset aS_19 +
mov [esp] ebx +
call fprintf  +
mov [esp] esi +
mov esi 0Ah +
call strlen  +
sub esi eax +
test esi esi +
jle loc_43D60C  +
mov [esp+4] ebx +
mov dword ptr [esp] 20h +
call putc  +
sub esi 1 +
jnz loc_43D727  +
jmp loc_43D60C  +
***
mov [esp+8] eax +
mov dword ptr [esp+4] offset a0x02x +
mov [esp] ebx +
call fprintf  +
jmp loc_43D64A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 8 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_hidden +
call fwrite  +
jmp loc_43D64A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Ah +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_internal +
call fwrite  +
jmp loc_43D64A  +
***
mov esi offset aNone_1 +
jmp loc_43D558  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+48h+arg_0] +
mov esi [ebx+0A0h] +
mov edx [esi+214h] +
cmp edx [esp+48h+arg_4] +
jbe loc_43D96B  +
mov eax ds:dword_4C15CC +
add eax 1 +
cmp eax 3 +
mov ds:dword_4C15CC eax +
ja loc_43D973  +
mov eax [esp+48h+arg_4] +
shl eax 2 +
mov [esp+48h+var_30] eax +
mov eax [esi+40h] +
mov edx offset unk_4B04D2 +
mov edi [esp+48h+var_30] +
mov ebp [eax+edi] +
mov eax [esi+3Ch] +
mov ecx [ebp+0] +
test ecx ecx +
jnz loc_43DBC4  +
mov eax [ebx+4] +
mov ecx [eax+1B0h] +
mov eax [ebp+4] +
cmp eax 0Ah +
jz loc_43DC94  +
jbe loc_43D9D0  +
cmp eax 12h +
jz loc_43E253  +
jbe loc_43DB40  +
cmp eax 6FFFFFFDh +
jz loc_43E1B8  +
jbe loc_43E112  +
cmp eax 6FFFFFFEh +
jz loc_43DE38  +
cmp eax 6FFFFFFFh +
jnz loc_43E120  +
cmp dword ptr [ebp+28h] 2 +
jnz loc_43D930  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+914h] edi +
mov eax [ebx+0A0h] +
mov [eax+160h] ecx +
mov ecx [ebp+4] +
mov [eax+164h] ecx +
mov ecx [ebp+8] +
mov [eax+168h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+16Ch] ecx +
mov ecx [ebp+10h] +
mov [eax+170h] ecx +
mov ecx [ebp+14h] +
mov [eax+174h] ecx +
mov ecx [ebp+18h] +
mov [eax+178h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+17Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+180h] ecx +
mov ecx [ebp+24h] +
mov [eax+184h] ecx +
mov ecx [ebp+28h] +
mov [eax+188h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+18Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+190h] ecx +
mov ecx [ebp+34h] +
mov [eax+194h] ecx +
mov eax edi +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_43E7E0  +
jmp loc_43D932  +
mov ebx ebp +
lea esi [esi+0] +
xor eax eax +
mov edx ds:dword_4C15C4 +
test edx edx +
jz loc_43D948  +
cmp ds:dword_4C15C8 ebx +
jz loc_43DCA0  +
mov edi ds:dword_4C15CC +
lea edx [edi-1] +
test edx edx +
mov ds:dword_4C15CC edx +
jnz loc_43D96B  +
mov ds:dword_4C15C4 0 +
mov ds:dword_4C15C8 ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ds:dword_4C15C8 ebx +
jz loc_43E100  +
mov ds:dword_4C15C4 0 +
shl edx 2 +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
call sub_425930  +
mov ds:dword_4C15C8 ebx +
mov ds:dword_4C15C4 eax +
mov esi [esp+48h+arg_4] +
lea edi ds:0[esi*4] +
add eax edi +
mov ebp [eax] +
mov [esp+48h+var_30] edi +
test ebp ebp +
jnz loc_43DCB0  +
mov dword ptr [eax] 1 +
mov esi [ebx+0A0h] +
jmp loc_43D804  +
cmp eax 4 +
jz loc_43DED3  +
ja loc_43DBE0  +
cmp eax 1 +
jz loc_43E0F0  +
nop   +
lea esi [esi+0] +
jb loc_43DC94  +
cmp eax 2 +
jz loc_43DCC8  +
cmp eax 3 +
jnz loc_43E120  +
mov edi [ebp+2Ch] +
test edi edi +
jnz loc_43DC94  +
mov eax [esp+48h+arg_4] +
cmp [esi+3Ch] eax +
jz loc_43E5E2  +
mov edi [ebx+0A0h] +
mov ecx [esp+48h+arg_4] +
mov esi [edi+90Ch] +
mov eax [edi+40h] +
mov [esp+48h+var_2C] esi +
mov esi [eax+esi*4] +
cmp [esi+1Ch] ecx +
jz loc_43E68B  +
mov esi [edi+910h] +
mov ecx [eax+esi*4] +
mov [esp+48h+var_28] esi +
mov esi [esp+48h+arg_4] +
cmp [ecx+1Ch] esi +
jz loc_43DAF8  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_43DA71  +
mov ecx [esp+48h+var_28] +
test ecx ecx +
jnz loc_43E0F0  +
mov ecx [edi+214h] +
cmp ecx 1 +
jbe loc_43E0F0  +
mov [esp+48h+var_28] edx +
mov edx edi +
mov esi 1 +
mov [esp+48h+var_2C] ebp +
mov edi ecx +
mov ebp ebx +
mov ecx edx +
mov ebx [esp+48h+arg_4] +
jmp loc_43DAAE  +
add esi 1 +
cmp esi edi +
jz loc_43E0E6  +
mov eax [ecx+40h] +
mov eax [eax+esi*4] +
cmp [eax+1Ch] ebx +
jnz loc_43DAA0  +
cmp esi ebx +
jz loc_43D928  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebp +
call sub_43D7C0  +
test eax eax +
jz loc_43D928  +
mov ecx [ebp+0A0h] +
cmp [ecx+90Ch] esi +
jz loc_43E683  +
cmp [ecx+910h] esi +
jnz loc_43DAA0  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov edi ecx +
mov ebp [esp+48h+var_2C] +
add edi 128h +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov ecx [ebx+0A0h] +
lea eax [ecx+128h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
mov edi [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] edi +
call sub_43E7E0  +
jmp loc_43D932  +
cmp eax 10h +
ja loc_43E365  +
cmp eax 0Eh +
lea esi [esi+0] +
jnb loc_43E0F0  +
cmp eax 0Bh +
jnz loc_43E120  +
mov esi [ebx+0A0h] +
mov eax [esi+910h] +
cmp eax [esp+48h+arg_4] +
jz loc_43DC94  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_43D930  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_43E408  +
test eax eax +
mov eax [esp+48h+arg_4] +
jz loc_43E516  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMultip +
call off_492AE8  +
mov eax 1 +
jmp loc_43D932  +
mov edx eax +
mov eax ebx +
call loc_43CA80  +
test eax eax +
mov edx eax +
jz loc_43D930  +
jmp loc_43D821  +
cmp eax 8 +
ja loc_43DED3  +
cmp eax 7 +
lea esi [esi+0] +
jnb loc_43E0F0  +
cmp eax 5 +
jz loc_43E0F0  +
cmp eax 6 +
jnz loc_43E120  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_43E7E0  +
test eax eax +
jz loc_43D930  +
mov eax [ebx+0A0h] +
mov edx [ebp+1Ch] +
mov ecx [eax+214h] +
cmp edx ecx +
ja loc_43E421  +
mov esi [eax+40h] +
mov edx [esi+edx*4] +
test edx edx +
jz loc_43D930  +
cmp dword ptr [edx+4] 3 +
jz loc_43DC94  +
mov eax [eax+910h] +
test eax eax +
jnz loc_43E44D  +
cmp ecx 1 +
jbe loc_43DC94  +
mov edx [esi+4] +
mov eax 1 +
cmp dword ptr [edx+4] 0Bh +
jnz loc_43DC8D  +
jmp loc_43E506  +
mov edx [esi+eax*4] +
cmp dword ptr [edx+4] 0Bh +
jz loc_43E506  +
add eax 1 +
cmp eax ecx +
jnz loc_43DC80  +
mov eax 1 +
jmp loc_43D932  +
mov edi [esp+48h+var_30] +
mov dword ptr [edx+edi] 0 +
jmp loc_43D948  +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningLoopIn +
call off_492AE8  +
xor eax eax +
jmp loc_43D96B  +
mov esi [ebx+0A0h] +
mov eax [esi+90Ch] +
cmp eax [esp+48h+arg_4] +
jz loc_43DC94  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_43D930  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_43E408  +
test eax eax +
mov eax [esp+48h+arg_4] +
jnz loc_43E748  +
mov [esi+90Ch] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+48h] ecx +
mov ecx [ebp+4] +
mov [eax+4Ch] ecx +
mov ecx [ebp+8] +
mov [eax+50h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+54h] ecx +
mov ecx [ebp+10h] +
mov [eax+58h] ecx +
mov ecx [ebp+14h] +
mov [eax+5Ch] ecx +
mov ecx [ebp+18h] +
mov [eax+60h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+64h] ecx +
mov ecx [ebp+20h] +
mov [eax+68h] ecx +
mov ecx [ebp+24h] +
mov [eax+6Ch] ecx +
mov ecx [ebp+28h] +
mov [eax+70h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+74h] ecx +
mov ecx [ebp+30h] +
mov [eax+78h] ecx +
mov ecx [ebp+34h] +
mov [eax+7Ch] ecx +
mov ecx [ebx+0A0h] +
mov eax [ecx+40h] +
lea ebp [ecx+48h] +
mov [eax+edi] ebp +
mov esi [ebx+28h] +
mov eax esi +
and esi 0FF80001Fh +
shr eax 5 +
and eax 3FFFFh +
mov edi eax +
or edi 10h +
shl edi 5 +
or esi edi +
mov [ebx+28h] esi +
test byte ptr [ecx+50h] 2 +
jz loc_43DDAB  +
test al 40h +
jnz loc_43E7AE  +
mov esi [ebx+0A0h] +
mov eax [esi+208h] +
test eax eax +
jz loc_43DDE2  +
mov edi [esp+48h+arg_4] +
cmp [eax+1Ch] edi +
mov edx [esp+48h+arg_4] +
jnz loc_43DDD9  +
jmp loc_43DC94  +
cmp [eax+1Ch] edx +
jz loc_43DC94  +
mov eax [eax+3Ch] +
test eax eax +
nop   +
jnz loc_43DDD0  +
mov eax [esp+48h+arg_4] +
mov ecx [esi+214h] +
add eax 1 +
cmp ecx eax +
jbe loc_43DE15  +
mov edi [esi+40h] +
mov ebp [esp+48h+arg_4] +
jmp loc_43DE07  +
add eax 1 +
cmp ecx eax +
jbe loc_43DE15  +
mov edx [edi+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_43DE00  +
cmp [edx+1Ch] ebp +
jnz loc_43DE00  +
cmp eax ecx +
jz loc_43E774  +
cmp eax [esp+48h+arg_4] +
jz loc_43DC94  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_43D7C0  +
jmp loc_43D932  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+91Ch] edi +
mov eax [ebx+0A0h] +
mov [eax+198h] ecx +
mov ecx [ebp+4] +
mov [eax+19Ch] ecx +
mov ecx [ebp+8] +
mov [eax+1A0h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1A4h] ecx +
mov ecx [ebp+10h] +
mov [eax+1A8h] ecx +
mov ecx [ebp+14h] +
mov [eax+1ACh] ecx +
mov ecx [ebp+18h] +
mov [eax+1B0h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1B4h] ecx +
mov ecx [ebp+20h] +
mov [eax+1B8h] ecx +
mov ecx [ebp+24h] +
mov [eax+1BCh] ecx +
mov ecx [ebp+28h] +
mov [eax+1C0h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1C4h] ecx +
mov ecx [ebp+30h] +
mov [eax+1C8h] ecx +
mov ecx [ebp+34h] +
mov [eax+1CCh] ecx +
mov eax edi +
jmp loc_43D912  +
mov edi [ebx+0A0h] +
cmp eax 9 +
mov eax [ecx+174h] +
mov esi [edi+214h] +
mov [esp+48h+var_2C] esi +
mov esi [ebp+28h] +
jz loc_43E35C  +
movzx eax byte ptr [eax+4] +
cmp esi eax +
jnz loc_43D930  +
mov eax [ebp+1Ch] +
cmp [esp+48h+var_2C] eax +
mov [esp+48h+var_28] eax +
jbe loc_43E460  +
mov eax [ebx+28h] +
mov esi [edi+40h] +
shr eax 5 +
test al 42h +
jnz loc_43DF96  +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 2 +
jz loc_43E4AA  +
cmp eax 0Bh +
jz loc_43E4AA  +
mov ecx [esp+48h+var_2C] +
cmp ecx 1 +
jbe loc_43DFB2  +
mov [esp+48h+var_24] ebp +
mov eax 1 +
mov ebp ecx +
mov [esp+48h+var_20] edi +
xor edi edi +
mov [esp+48h+var_1C] 0 +
lea esi [esi+0] +
mov ecx [esi+eax*4] +
mov ecx [ecx+4] +
cmp ecx 0Bh +
jz loc_43DF70  +
cmp ecx 2 +
jnz loc_43DF7A  +
test edi edi +
jnz loc_43E767  +
mov edi eax +
add eax 1 +
cmp eax ebp +
jnz loc_43DF60  +
mov eax edi +
mov ebp [esp+48h+var_24] +
test eax eax +
mov edi [esp+48h+var_20] +
jz loc_43DFB2  +
mov [ebp+1Ch] eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 0Bh +
jz loc_43E4AA  +
cmp eax 2 +
jz loc_43E4AA  +
mov eax [esp+48h+var_28] +
cmp [edi+90Ch] eax +
jnz loc_43E0F0  +
test eax eax +
jz loc_43E0F0  +
mov eax [ebp+20h] +
test eax eax +
jz loc_43E0F0  +
cmp [esp+48h+var_2C] eax +
jbe loc_43E0F0  +
mov ecx [edi+40h] +
mov ecx [ecx+eax*4] +
mov ecx [ecx+4] +
cmp ecx 9 +
jz loc_43E0F0  +
cmp ecx 4 +
jz loc_43E0F0  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_43D7C0  +
test eax eax +
jz loc_43D930  +
mov edx [ebx+0A0h] +
mov eax [ebp+20h] +
cmp eax [edx+214h] +
jnb loc_43D930  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
test eax eax +
mov [esp+48h+var_2C] eax +
jz loc_43D930  +
mov eax [eax+8Ch] +
lea edx [eax+4Ch] +
add eax 3Ch +
cmp dword ptr [ebp+4] 4 +
cmovnz edx eax +
cmp dword ptr [edx] 0 +
jnz loc_43D930  +
mov [esp+48h+var_44] 38h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_28] edx +
call sub_425850  +
test eax eax +
jz loc_43D930  +
mov edx [esp+48h+var_28] +
mov edi eax +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov [edx] eax +
mov edx [ebx+0A0h] +
mov ecx [ebp+28h] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax [esp+48h+var_2C] +
mov esi [eax+4Ch] +
xor eax eax +
test ecx ecx +
jz loc_43E0A8  +
mov eax [ebp+18h] +
xor edx edx +
div  ecx +
mov edi [esp+48h+var_2C] +
add eax esi +
mov edx [ebp+14h] +
mov [edi+4Ch] eax +
mov eax [ebp+10h] +
or dword ptr [edi+14h] 4 +
cmp dword ptr [ebp+18h] 0 +
mov dword ptr [edi+44h] 0 +
mov [edi+58h] eax +
mov [edi+5Ch] edx +
jz loc_43E0D8  +
cmp dword ptr [ebp+4] 4 +
jnz loc_43E0D8  +
or byte ptr [edi+19h] 4 +
or dword ptr [ebx+28h] 20h +
mov eax 1 +
jmp loc_43D932  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov ebp [esp+48h+var_2C] +
mov eax [esp+48h+arg_4] +
jmp loc_43D912  +
mov eax ds:dword_4C15C4 +
test eax eax +
jnz loc_43D9A3  +
jmp loc_43D989  +
lea esi [eax-6FFFFFF6h] +
cmp esi 1 +
jbe loc_43E0F0  +
lea esi [esi+0] +
cmp eax 6FFFFFF5h +
jz loc_43E326  +
cmp eax [ecx+190h] +
jz loc_43E326  +
mov edi [esp+48h+arg_4] +
mov eax [ecx+4Ch] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call eax  +
mov edx [esp+48h+var_2C] +
test eax eax +
jnz loc_43DC94  +
mov eax [ebp+4] +
test eax eax +
js loc_43E4DC  +
lea ecx [eax-70000000h] +
cmp ecx 0FFFFFFFh +
jbe loc_43E5C2  +
lea ecx [eax-60000000h] +
cmp ecx 0FFFFFFFh +
ja loc_43E728  +
test byte ptr [ebp+9] 1 +
jz loc_43E0F0  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHowTo +
call off_492AE8  +
xor eax eax +
jmp loc_43D932  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+918h] edi +
mov eax [ebx+0A0h] +
mov [eax+1D0h] ecx +
mov ecx [ebp+4] +
mov [eax+1D4h] ecx +
mov ecx [ebp+8] +
mov [eax+1D8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1DCh] ecx +
mov ecx [ebp+10h] +
mov [eax+1E0h] ecx +
mov ecx [ebp+14h] +
mov [eax+1E4h] ecx +
mov ecx [ebp+18h] +
mov [eax+1E8h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1ECh] ecx +
mov ecx [ebp+20h] +
mov [eax+1F0h] ecx +
mov ecx [ebp+24h] +
mov [eax+1F4h] ecx +
mov ecx [ebp+28h] +
mov [eax+1F8h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1FCh] ecx +
mov ecx [ebp+30h] +
mov [eax+200h] ecx +
mov ecx [ebp+34h] +
mov [eax+204h] ecx +
mov eax edi +
jmp loc_43D912  +
mov eax [ebx+0A0h] +
mov eax [eax+208h] +
test eax eax +
jz loc_43E285  +
mov edi [esp+48h+arg_4] +
cmp [eax+38h] edi +
mov edx [esp+48h+arg_4] +
jnz loc_43E27E  +
jmp loc_43DC94  +
cmp [eax+38h] edx +
jz loc_43DC94  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_43E275  +
mov [esp+48h+var_44] 40h +
mov [esp+48h+var_48] ebx +
call sub_425850  +
test eax eax +
jz loc_43D930  +
mov edx [ebp+0] +
mov edi [esp+48h+arg_4] +
mov [eax] edx +
mov edx [ebp+4] +
mov [eax+38h] edi +
mov [eax+4] edx +
mov edx [ebp+8] +
mov [eax+8] edx +
mov edx [ebp+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebp+10h] +
mov [eax+10h] edx +
mov edx [ebp+14h] +
mov [eax+14h] edx +
mov edx [ebp+18h] +
mov [eax+18h] edx +
mov edx [ebp+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebp+20h] +
mov [eax+20h] edx +
mov edx [ebp+24h] +
mov [eax+24h] edx +
mov edx [ebp+28h] +
mov [eax+28h] edx +
mov edx [ebp+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebp+30h] +
mov [eax+30h] edx +
mov edx [ebp+34h] +
mov [eax+34h] edx +
mov edx [ebx+0A0h] +
mov ecx [edx+208h] +
mov [eax+3Ch] ecx +
mov [edx+208h] eax +
mov edx [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_43D932  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_43E7E0  +
test eax eax +
jz loc_43D930  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_467CA0  +
mov eax 1 +
jmp loc_43D932  +
movzx eax byte ptr [eax+3] +
jmp loc_43DEF9  +
mov eax [ebp+18h] +
cmp eax 3 +
jbe loc_43D930  +
cmp dword ptr [ebp+28h] 4 +
jnz loc_43D930  +
test al 3 +
jnz loc_43D930  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_43E7E0  +
test eax eax +
jz loc_43D930  +
mov edx [ebp+30h] +
test edx edx +
jz loc_43DC94  +
mov eax [ebp+18h] +
shr eax 2 +
test eax eax +
jz loc_43D930  +
test byte ptr [edx] 1 +
jz loc_43E3CB  +
mov ecx [ebp+2Ch] +
or dword ptr [ecx+14h] 20000h +
lea esi [edx-4] +
sub eax 1 +
jz loc_43DC94  +
mov edx [esi+eax*4+4] +
test edx edx +
jz loc_43E3CE  +
mov edx [edx+2Ch] +
test edx edx +
jz loc_43E3CE  +
mov ecx [edx+8Ch] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_43E3CE  +
mov eax [ebp+2Ch] +
mov eax [eax+8Ch] +
mov [eax+7Ch] edx +
mov eax 1 +
jmp loc_43D932  +
test ecx ecx +
jnz loc_43D930  +
mov dword ptr [ebp+20h] 0 +
mov eax 1 +
jmp loc_43D932  +
mov [esp+48h+var_48] ebx +
call sub_423700  +
cmp eax 6 +
jz loc_43E437  +
cmp eax 9 +
jnz loc_43D930  +
mov eax [ebp+1Ch] +
sub eax 0FF00h +
cmp eax 1 +
setbe al  +
movzx eax al +
jmp loc_43D932  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_43D932  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_38] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] offset aBInvalidLinkLu +
mov [esp+48h+var_40] eax +
call off_492AE8  +
mov eax [esp+48h+arg_4] +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
call sub_43E7E0  +
jmp loc_43D932  +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_24] edx +
mov [esp+48h+var_44] eax +
call sub_43D7C0  +
mov edx [esp+48h+var_24] +
test eax eax +
jz loc_43D930  +
mov eax [ebp+1Ch] +
mov edi [ebx+0A0h] +
mov [esp+48h+var_28] eax +
jmp loc_43DFB2  +
test byte ptr [ebp+8] 2 +
jz loc_43E0F0  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_0 +
call off_492AE8  +
xor eax eax +
jmp loc_43D932  +
mov eax [edx+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_43D932  +
mov [esi+910h] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+0F0h] ecx +
mov ecx [ebp+4] +
mov [eax+0F4h] ecx +
mov ecx [ebp+8] +
mov [eax+0F8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+0FCh] ecx +
mov ecx [ebp+10h] +
mov [eax+100h] ecx +
mov ecx [ebp+14h] +
mov [eax+104h] ecx +
mov ecx [ebp+18h] +
mov [eax+108h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+10Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+110h] ecx +
mov ecx [ebp+24h] +
mov [eax+114h] ecx +
mov ecx [ebp+28h] +
mov [eax+118h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+11Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+120h] ecx +
mov ecx [ebp+34h] +
mov [eax+124h] ecx +
mov ecx [ebx+0A0h] +
lea eax [ecx+0F0h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
or dword ptr [ebx+28h] 200h +
jmp loc_43DB1D  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_1 +
call off_492AE8  +
xor eax eax +
jmp loc_43D932  +
mov eax [ebx+0A0h] +
mov edx [ebp+0] +
mov edi [esp+48h+var_30] +
mov [eax+80h] edx +
mov edx [ebp+4] +
mov [eax+84h] edx +
mov edx [ebp+8] +
mov [eax+88h] edx +
mov edx [ebp+0Ch] +
mov [eax+8Ch] edx +
mov edx [ebp+10h] +
mov [eax+90h] edx +
mov edx [ebp+14h] +
mov [eax+94h] edx +
mov edx [ebp+18h] +
mov [eax+98h] edx +
mov edx [ebp+1Ch] +
mov [eax+9Ch] edx +
mov edx [ebp+20h] +
mov [eax+0A0h] edx +
mov edx [ebp+24h] +
mov [eax+0A4h] edx +
mov edx [ebp+28h] +
mov [eax+0A8h] edx +
mov edx [ebp+2Ch] +
mov [eax+0ACh] edx +
mov edx [ebp+30h] +
mov [eax+0B0h] edx +
mov edx [ebp+34h] +
mov [eax+0B4h] edx +
mov eax [ebx+0A0h] +
mov edx [eax+40h] +
sub eax 0FFFFFF80h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_43D932  +
mov ebx ebp +
mov ebp [esp+48h+var_2C] +
mov edi ecx +
mov eax [ebp+0] +
mov [edi+0B8h] eax +
mov eax [ebp+4] +
mov [edi+0BCh] eax +
mov eax [ebp+8] +
mov [edi+0C0h] eax +
mov eax [ebp+0Ch] +
mov [edi+0C4h] eax +
mov eax [ebp+10h] +
mov [edi+0C8h] eax +
mov eax [ebp+14h] +
mov [edi+0CCh] eax +
mov eax [ebp+18h] +
mov [edi+0D0h] eax +
mov eax [ebp+1Ch] +
mov [edi+0D4h] eax +
mov eax [ebp+20h] +
mov [edi+0D8h] eax +
mov eax [ebp+24h] +
mov [edi+0DCh] eax +
mov eax [ebp+28h] +
mov [edi+0E0h] eax +
mov eax [ebp+2Ch] +
mov [edi+0E4h] eax +
mov eax [ebp+30h] +
mov [edi+0E8h] eax +
mov eax [ebp+34h] +
mov [edi+0ECh] eax +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [eax+40h] +
add eax 0B8h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_43D932  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_2 +
call off_492AE8  +
xor eax eax +
jmp loc_43D932  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMult_0 +
call off_492AE8  +
mov eax 1 +
jmp loc_43D932  +
mov ebp [esp+48h+var_24] +
mov edi [esp+48h+var_20] +
jmp loc_43DFB2  +
cmp [esp+48h+arg_4] 1 +
jbe loc_43E7D3  +
mov ecx [esi+40h] +
mov eax 1 +
mov esi [esp+48h+arg_4] +
jmp loc_43E79B  +
add eax 1 +
cmp eax esi +
jz loc_43DC94  +
mov edx [ecx+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_43E790  +
cmp [edx+1Ch] esi +
jnz loc_43E790  +
jmp loc_43DE1D  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_43E7E0  +
test eax eax +
jz loc_43D930  +
jmp loc_43DDAB  +
mov eax 1 +
jmp loc_43DE1D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [esp+8Ch+arg_4] +
mov edx [ebx+2Ch] +
test edx edx +
jz loc_43E808  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_41EBA0  +
test eax eax +
mov ebp eax +
jz loc_43E8D8  +
mov [ebx+2Ch] eax +
mov edx [ebx] +
mov eax [eax+8Ch] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [ebx+14h] +
mov [eax+14h] edx +
mov edx [ebx+18h] +
mov [eax+18h] edx +
mov edx [ebx+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebx+20h] +
mov [eax+20h] edx +
mov edx [ebx+24h] +
mov [eax+24h] edx +
mov edx [ebx+28h] +
mov [eax+28h] edx +
mov edx [ebx+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebx+30h] +
mov [eax+30h] edx +
mov edx [ebx+34h] +
mov [eax+34h] edx +
mov edx [esp+8Ch+arg_C] +
mov [eax+5Ch] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov [ebp+50h] eax +
mov eax [ebx+0Ch] +
mov [ebp+54h] edx +
or byte ptr [ebp+18h] 1 +
mov [ebp+20h] eax +
mov [ebp+1Ch] eax +
mov eax [ebx+18h] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_41EDE0  +
test eax eax +
jnz loc_43E8E0  +
xor eax eax +
jmp loc_43E7FD  +
mov eax [ebx+24h] +
mov [esp+8Ch+var_8C] eax +
call sub_42BE10  +
mov [esp+8Ch+var_40] 0 +
mov [ebp+40h] eax +
mov eax [ebx+4] +
cmp eax 8 +
jz loc_43F471  +
cmp eax 11h +
jz loc_43EB1E  +
mov [esp+8Ch+var_40] 100h +
mov edx 100h +
mov eax [ebx+8] +
test al 2 +
jz loc_43E926  +
or edx 3 +
mov [esp+8Ch+var_40] edx +
test al 1 +
jnz loc_43E931  +
or edx 8 +
mov [esp+8Ch+var_40] edx +
test al 4 +
jz loc_43EA86  +
or edx 10h +
mov [esp+8Ch+var_40] edx +
test al 10h +
jz loc_43E968  +
mov edx [esp+8Ch+var_40] +
mov ecx edx +
or ecx 800000h +
test al 20h +
mov [esp+8Ch+var_40] ecx +
mov ecx [ebx+28h] +
mov [ebp+78h] ecx +
jz loc_43E968  +
or edx 1800000h +
mov [esp+8Ch+var_40] edx +
test ah 2 +
jnz loc_43EAAD  +
test ah 4 +
jnz loc_43EA9B  +
mov esi [esp+8Ch+var_40] +
test eax eax +
js loc_43ECE6  +
test esi 1 +
jnz loc_43E99E  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax] 2Eh +
jz loc_43EEAF  +
mov esi [esp+8Ch+arg_8] +
mov edi offset a_gnu_linkonce +
mov ecx 0Dh +
cmps   +
jnz loc_43E9C4  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_43EF15  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+50h] +
test eax eax +
jz loc_43E9F0  +
lea edx [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_8C] edx +
call eax  +
test eax eax +
jz loc_43E8D8  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_41ECE0  +
test eax eax +
jz loc_43E8D8  +
cmp dword ptr [ebx+4] 7 +
jz loc_43EF22  +
mov eax [esp+8Ch+var_40] +
test al 1 +
mov [esp+8Ch+var_60] eax +
jz loc_43ECAA  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+30h] +
mov esi [eax+44h] +
test edi edi +
jz loc_43ECAA  +
mov eax [esi+10h] +
test eax eax +
jnz loc_43EB41  +
mov eax esi +
xor edx edx +
xor ecx ecx +
jmp loc_43EA78  +
add edx 1 +
add eax 20h +
cmp edx edi +
jz loc_43EB30  +
cmp dword ptr [eax+10h] 0 +
jnz loc_43EB41  +
cmp dword ptr [eax] 1 +
jnz loc_43EA60  +
cmp dword ptr [eax+18h] 1 +
sbb ecx 0FFFFFFFFh +
jmp loc_43EA60  +
test dl 2 +
jz loc_43E940  +
or edx 20h +
mov [esp+8Ch+var_40] edx +
jmp loc_43E940  +
mov edx [esp+8Ch+var_40] +
or dh 4 +
mov [esp+8Ch+var_40] edx +
mov esi edx +
jmp loc_43E97E  +
mov eax [esp+8Ch+arg_0] +
mov edi [eax+0A0h] +
mov eax [edi+908h] +
test eax eax +
mov [esp+8Ch+var_64] eax +
jnz loc_43ECF6  +
mov eax [edi+214h] +
test eax eax +
mov ecx eax +
mov [esp+8Ch+var_60] eax +
jz loc_43EEA0  +
mov eax [edi+40h] +
mov [esp+8Ch+var_68] 0 +
lea ecx [eax+ecx*4] +
jmp loc_43EAFB  +
add eax 4 +
cmp eax ecx +
jz loc_43EE94  +
mov edx [eax] +
cmp dword ptr [edx+4] 11h +
jnz loc_43EAF0  +
mov esi [edx+18h] +
cmp esi 7 +
jbe loc_43EAF0  +
cmp dword ptr [edx+28h] 4 +
jnz loc_43EAF0  +
and esi 3 +
cmp esi 1 +
adc [esp+8Ch+var_68] 0 +
jmp loc_43EAF0  +
mov [esp+8Ch+var_40] 2008100h +
mov edx 2008100h +
jmp loc_43E918  +
cmp ecx 1 +
ja loc_43ECDC  +
test edi edi +
jz loc_43ECAA  +
mov eax [esp+8Ch+var_60] +
xor edx edx +
mov [esp+8Ch+arg_4] ebx +
mov ebx edx +
mov [esp+8Ch+var_54] ebp +
mov [esp+8Ch+var_68] edi +
and eax 2 +
mov [esp+8Ch+var_50] eax +
jmp loc_43EB7A  +
cmp ecx 7 +
jz loc_43F450  +
add ebx 1 +
add esi 20h +
cmp ebx [esp+8Ch+var_68] +
jnb loc_43ECA6  +
mov ecx [esi] +
cmp ecx 1 +
jnz loc_43EB61  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_43EB6A  +
and eax 2 +
mov [esp+8Ch+var_5C] eax +
jnz loc_43EBB5  +
lea eax [ecx-6474E550h] +
cmp eax 2 +
jbe loc_43EB6A  +
lea eax [ecx-1] +
cmp eax 1 +
jbe loc_43EB6A  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+4] +
cmp eax 8 +
mov [esp+8Ch+var_58] eax +
jz loc_43EC10  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
ja loc_43EB6A  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+8Ch+arg_4] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
mov edi [edi+18h] +
add eax edi +
mov edi [esi+14h] +
adc edx ebp +
cmp edx 0 +
jg loc_43EB6A  +
jl loc_43EC10  +
cmp eax edi +
ja loc_43EB6A  +
mov ebp [esp+8Ch+var_5C] +
test ebp ebp +
jz loc_43EC59  +
mov eax [esp+8Ch+arg_4] +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
cmp eax edx +
jb loc_43EB6A  +
mov edi [esp+8Ch+var_64] +
sub eax edx +
mov edx eax +
test edi edi +
jz loc_43EC44  +
cmp [esp+8Ch+var_58] 8 +
jz loc_43F440  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+18h] +
add eax edx +
cmp eax [esi+18h] +
ja loc_43EB6A  +
cmp ecx 2 +
mov eax [esp+8Ch+arg_4] +
jz loc_43F34A  +
mov eax [eax+0Ch] +
mov edx [esi+0Ch] +
mov ecx [esp+8Ch+var_50] +
test ecx ecx +
jnz loc_43F1D7  +
mov ecx [esi+10h] +
mov edi [esp+8Ch+var_54] +
add ecx eax +
sub ecx edx +
mov [edi+20h] ecx +
cmp edx eax +
ja loc_43EB6A  +
mov edi [esp+8Ch+arg_4] +
add edx [esi+18h] +
add eax [edi+18h] +
cmp eax edx +
ja loc_43EB6A  +
mov ebp [esp+8Ch+var_54] +
test [esp+8Ch+var_60] 2000h +
jz loc_43ECDC  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_43EF78  +
cmp al 7Ah +
jnz loc_43ECDC  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+7] 5Fh +
jz loc_43EF89  +
mov eax 1 +
jmp loc_43E7FD  +
mov eax esi +
or ah 80h +
mov [esp+8Ch+var_40] eax +
mov esi eax +
jmp loc_43E986  +
mov eax [esp+8Ch+var_64] +
xor edi edi +
sub eax 1 +
cmp eax 0FFFFFFFDh +
mov [esp+8Ch+var_5C] eax +
ja loc_43ED59  +
mov [esp+8Ch+var_60] ebp +
lea esi [esi+0] +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
mov eax [eax+904h] +
mov ebp [eax+edi*4] +
mov ecx [ebp+18h] +
mov esi [ebp+30h] +
shr ecx 2 +
mov eax ecx +
mov edx esi +
jmp loc_43ED47  +
add edx 4 +
cmp ebx [edx] +
jz loc_43ED72  +
sub eax 1 +
jnz loc_43ED40  +
add edi 1 +
cmp [esp+8Ch+var_64] edi +
ja loc_43ED10  +
mov ebp [esp+8Ch+var_60] +
mov eax [ebp+8Ch] +
mov ecx [eax+74h] +
test ecx ecx +
jz loc_43F327  +
mov eax [ebx+8] +
jmp loc_43E971  +
sub ecx 1 +
jz loc_43EDC0  +
add esi 4 +
mov eax [esi] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_43ED72  +
mov eax [eax+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_43ED72  +
mov edi [esp+8Ch+var_60] +
mov esi [eax+74h] +
mov ecx [edi+8Ch] +
mov [ecx+74h] esi +
mov [ecx+7Ch] edx +
mov [eax+7Ch] edi +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_43EDBA  +
mov eax [eax+8Ch] +
mov edi [esp+8Ch+var_60] +
mov [eax+7Ch] edi +
mov edi [esp+8Ch+var_5C] +
jmp loc_43ED4C  +
mov edi [esp+8Ch+var_68] +
mov eax [ebp+1Ch] +
cmp eax [edi+214h] +
jnb loc_43E8D8  +
mov edi [esp+8Ch+var_68] +
mov edx [edi+40h] +
mov edx [edx+eax*4] +
cmp dword ptr [edx+4] 2 +
jnz loc_43E8D8  +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_43D7C0  +
test eax eax +
jz loc_43E8D8  +
mov eax [esp+8Ch+arg_0] +
lea edi [esp+8Ch+var_3C] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
lea esi [eax+48h] +
mov eax [ebp+20h] +
mov [esp+8Ch+var_74] edi +
lea edi [esp+8Ch+var_24] +
mov [esp+8Ch+var_78] edi +
lea edi [esp+8Ch+var_38] +
mov [esp+8Ch+var_7C] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_43CC60  +
test eax eax +
jz loc_43E8D8  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_43CFB0  +
test eax eax +
jz loc_43E8D8  +
mov edi [esp+8Ch+var_60] +
mov edx [edi+8Ch] +
mov [edx+74h] eax +
mov [edx+7Ch] edi +
jmp loc_43EDA6  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jnz loc_43F056  +
mov dword ptr [edi+908h] 0FFFFFFFFh +
jmp loc_43ED59  +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_43F1F3  +
cmp al 67h +
jz loc_43F282  +
cmp al 6Ch +
jz loc_43F3D1  +
cmp al 73h +
lea esi [esi+0] +
jz loc_43F3E0  +
cmp al 7Ah +
jnz loc_43E99E  +
mov edx 7 +
mov eax offset a_zdebug +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call strncmp  +
test eax eax +
jnz loc_43E99E  +
mov eax esi +
or ah 20h +
mov [esp+8Ch+var_40] eax +
jmp loc_43E99E  +
or [esp+8Ch+var_40] 20000h +
jmp loc_43E9C4  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_41F070  +
test eax eax +
jz loc_43E7FD  +
mov ecx [ebx+18h] +
mov edx [esp+8Ch+var_24] +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] 0FFFFFFFFh +
mov [esp+8Ch+var_88] 0FFFFFFFFh +
call sub_43B7D0  +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
call free  +
jmp loc_43EA1D  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+6] 5Fh +
jnz loc_43ECDC  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_80] eax +
lea eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_422210  +
test eax eax +
mov ecx eax +
jz loc_43F2AC  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 10h +
jz loc_43F2AC  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_422670  +
test eax eax +
jz loc_43F416  +
mov eax 2 +
mov edi [esp+8Ch+arg_0] +
test byte ptr [edi+2Ch] 2 +
jz loc_43F3FB  +
mov edi [esp+8Ch+arg_8] +
cmp byte ptr [edi+1] 7Ah +
jnz loc_43ECDC  +
cmp eax 2 +
jz loc_43F01F  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 40h +
jz loc_43ECDC  +
mov edx [esp+8Ch+arg_8] +
mov eax [esp+8Ch+arg_0] +
call sub_43B2B0  +
test eax eax +
jz loc_43E8D8  +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_41ED00  +
jmp loc_43ECDC  +
mov eax [esp+8Ch+var_68] +
mov [edi+908h] eax +
mov edi [esp+8Ch+arg_0] +
mov esi [edi+0A0h] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
call sub_4258D0  +
mov [esi+904h] eax +
mov eax [esp+8Ch+arg_0] +
xor esi esi +
mov edx [eax+0A0h] +
mov edi [edx+904h] +
test edi edi +
jz loc_43E8D8  +
mov [esp+8Ch+arg_4] ebx +
mov ebx [esp+8Ch+var_60] +
mov [esp+8Ch+var_5C] ebp +
jmp loc_43F0C0  +
add esi 1 +
cmp esi ebx +
jz loc_43F202  +
mov eax [edx+40h] +
mov edi [eax+esi*4] +
cmp dword ptr [edi+4] 11h +
jnz loc_43F0B5  +
mov eax [edi+18h] +
cmp eax 7 +
jbe loc_43F0B5  +
cmp dword ptr [edi+28h] 4 +
jnz loc_43F0B5  +
test al 3 +
jnz loc_43F0B5  +
mov edx [edx+904h] +
mov ebp eax +
mov ecx [esp+8Ch+var_64] +
and ebp 3FFFFFFFh +
mov [edx+ecx*4] edi +
add ecx 1 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_68] ecx +
mov [esp+8Ch+var_8C] eax +
call sub_4258D0  +
test eax eax +
mov [edi+30h] eax +
jz loc_43F4BA  +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call sub_429F00  +
test eax eax +
jnz loc_43F183  +
mov eax [edi+18h] +
mov edx [edi+30h] +
mov ecx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] edx +
mov [esp+8Ch+var_84] ecx +
call sub_429CF0  +
cmp eax [edi+18h] +
jz loc_43F4F7  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBInvalidSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
mov eax [edi+30h] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_43F0B5  +
mov edi [esp+8Ch+arg_4] +
mov ecx [esi+10h] +
add ecx [edi+10h] +
mov edi [esp+8Ch+var_54] +
sub ecx [esi+8] +
mov [edi+20h] ecx +
jmp loc_43EC89  +
mov edx 6 +
mov eax offset a_debug_1 +
jmp loc_43EEE8  +
mov eax [esp+8Ch+var_64] +
cmp [edx+908h] eax +
mov ebp [esp+8Ch+var_5C] +
mov ebx [esp+8Ch+arg_4] +
jz loc_43ECF6  +
test eax eax +
mov [edx+908h] eax +
jnz loc_43ECF6  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+904h] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+908h] 0FFFFFFFFh +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBNoValidGroupS +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
jmp loc_43ED59  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+2] +
cmp al 6Eh +
jz loc_43F407  +
cmp al 64h +
jnz loc_43E99E  +
mov edx 0Bh +
mov eax offset a_gdb_index +
jmp loc_43EEE8  +
cmp dword ptr [ebp+24h] 0 +
jz loc_43ECDC  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax 1 +
shr edx 5 +
and edx 3FFFFh +
test dh 40h +
jz loc_43E7FD  +
mov ebx [esp+8Ch+var_38] +
test ebx ebx +
js loc_43E7FD  +
cmp [esp+8Ch+var_24] 0 +
jz loc_43E7FD  +
test ecx ecx +
jz loc_43F302  +
shr edx 11h +
test ebx ebx +
setnle cl  +
cmp dl cl +
jz loc_43E7FD  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_422790  +
test eax eax +
jz loc_43F490  +
mov eax 1 +
jmp loc_43EFE7  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_8C] offset aBNoGroupInfoFo +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
xor eax eax +
jmp loc_43E7FD  +
cmp dword ptr [eax+18h] 0 +
jnz loc_43EC69  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_43F3EF  +
cmp [esp+8Ch+var_58] 8 +
jz loc_43F3A0  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
jnb loc_43EB6A  +
xor edx edx +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edi [esi+14h] +
cmp ebp 0 +
jg loc_43EB6A  +
jl loc_43F3A0  +
cmp eax edi +
jnb loc_43EB6A  +
mov eax [esp+8Ch+arg_4] +
cmp [esp+8Ch+var_5C] 0 +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
jz loc_43EC6F  +
cmp eax edx +
jbe loc_43EB6A  +
mov edi eax +
sub edi edx +
cmp ecx edi +
jbe loc_43EB6A  +
jmp loc_43EC6F  +
mov edx 5 +
mov eax offset a_line +
jmp loc_43EEE8  +
mov edx 5 +
mov eax offset a_stab_3 +
jmp loc_43EEE8  +
mov eax [esp+8Ch+arg_4] +
jmp loc_43EC69  +
or dword ptr [ebp+14h] 10000000h +
jmp loc_43ECDC  +
mov edx 11h +
mov eax offset a_gnu_linkonce_ +
jmp loc_43EEE8  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIniti +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
xor eax eax +
jmp loc_43E7FD  +
xor eax eax +
cmp ecx 7 +
jnz loc_43EC4E  +
jmp loc_43EC44  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_43EB99  +
jmp loc_43EB6A  +
mov eax [ebx+8] +
xor edx edx +
test al 2 +
jz loc_43E926  +
mov [esp+8Ch+var_40] 1 +
mov edx 1 +
jmp loc_43E926  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIni_0 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
xor eax eax +
jmp loc_43E7FD  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBCorruptSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_43F0B5  +
mov ecx [edi+30h] +
mov [esp+8Ch+var_64] esi +
mov esi ebx +
lea edx [ecx+eax] +
add ebp ecx +
mov ebx edx +
jmp loc_43F523  +
cmp esi eax +
jbe loc_43F575  +
mov ecx [esp+8Ch+arg_0] +
mov ecx [ecx+0A0h] +
mov ecx [ecx+40h] +
mov eax [ecx+eax*4] +
mov [ebp+0] eax +
mov eax [esp+8Ch+arg_0] +
sub ebx 4 +
sub ebp 4 +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
cmp ebx [edi+30h] +
jnz loc_43F509  +
mov [ebp+0] eax +
mov edx [edi+2Ch] +
mov ebx esi +
mov esi [esp+8Ch+var_64] +
test edx edx +
jz loc_43F55B  +
test al 1 +
jz loc_43F55B  +
or dword ptr [edx+14h] 20000h +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
mov eax [esp+8Ch+var_68] +
mov [esp+8Ch+var_64] eax +
jmp loc_43F0B5  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBInvalidSht_gr +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
xor eax eax +
jmp loc_43F50D  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov ebp [esp+68h] +
mov esi [esp+64h] +
and ebp 1Fh +
cmp [ebx] esi +
jz loc_43F673  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [esp+24h] +
mov [esp+18h] eax +
lea eax [esp+28h] +
mov [esp+14h] eax +
mov eax [esp+68h] +
mov [esp+10h] ecx +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
mov eax [esi+0A0h] +
mov [esp] esi +
add eax 48h +
mov [esp+4] eax +
call sub_43CC60  +
test eax eax +
jz loc_43F6B4  +
cmp [ebx] esi +
jz loc_43F644  +
lea edi [ebx+4] +
mov edx 80h +
test edi 1 +
jnz loc_43F692  +
test edi 2 +
jnz loc_43F6A0  +
mov ecx edx +
mov eax 0FFFFFFFFh +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_43F660  +
and edx 1 +
jnz loc_43F658  +
mov [ebx] esi +
mov eax [esp+68h] +
mov [ebx+ebp*4+4] eax +
mov eax [esp+1Ch] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov byte ptr [edi] 0FFh +
jmp loc_43F642  +
***
mov eax 0FFFFFFFFh +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_43F642  +
jmp loc_43F658  +
***
mov eax [esp+68h] +
cmp [ebx+ebp*4+4] eax +
jnz loc_43F5BE  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov [esp+1Ch] eax +
jmp loc_43F64C  +
***
mov byte ptr [ebx+4] 0FFh +
lea edi [ebx+5] +
mov dl 7Fh +
jmp loc_43F624  +
***
mov ecx 0FFFFFFFFh +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_43F62C  +
***
mov dword ptr [esp+1Ch] 0 +
jmp loc_43F64C  +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx+0A0h] +
cmp [edx+214h] eax +
jbe loc_43F6E0  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov edx [ebx] +
test edx edx +
jz loc_43F7B2  +
mov ebp eax +
mov edi edx +
lea esi [ebx+14h] +
jmp loc_43F752  +
lea edx [ecx+eax] +
cmp ebp edx +
jl loc_43F747  +
mov edx ebp +
add ecx edi +
sub edx eax +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] ecx +
add eax edx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
test eax eax +
jz loc_43F7A8  +
mov ebx esi +
mov edi [esi] +
lea esi [esi+14h] +
test edi edi +
jz loc_43F7B2  +
mov ecx [ebx+4] +
cmp ebp ecx +
jl loc_43F747  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
jnz loc_43F747  +
mov eax [ebx+8] +
test eax eax +
jg loc_43F720  +
mov edx [esp+1Ch+arg_0] +
movzx edx byte ptr [edx+ecx] +
test dl dl +
jz loc_43F7A8  +
test eax eax +
jz loc_43F747  +
cmp dl 2Eh +
jz loc_43F7A8  +
cmp eax 0FFFFFFFEh +
jz loc_43F747  +
mov eax [esp+1Ch+arg_8] +
test eax eax +
jz loc_43F7A8  +
cmp dword ptr [ebx+0Ch] 9 +
jz loc_43F747  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov ebx [esi] +
test ebx ebx +
jz loc_43F850  +
mov eax [esp+20h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov edx [eax+178h] +
test edx edx +
jz loc_43F810  +
movzx eax byte ptr [esi+19h] +
mov [esp+4] edx +
mov [esp] ebx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_43F6F0  +
test eax eax +
jz loc_43F810  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
cmp byte ptr [ebx] 2Eh +
jnz loc_43F808  +
movsx edx byte ptr [ebx+1] +
sub edx 62h +
cmp edx 18h +
ja loc_43F808  +
mov edx ds:off_4B17E0[edx*4] +
test edx edx +
jz loc_43F808  +
movzx eax byte ptr [esi+19h] +
mov [esp] ebx +
mov [esp+4] edx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_43F6F0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_43F808  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_43F902  +
mov eax [esi+4] +
mov ecx [eax+1B0h] +
movzx eax byte ptr [ebx+19h] +
movzx edx byte ptr [ecx+1ACh] +
and eax 0FFFFFFFBh +
shr dl 2 +
and edx 4 +
or eax edx +
mov [ebx+19h] al +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 8 +
jz loc_43F8F5  +
mov eax [ecx+54h] +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_43F8D1  +
mov edx [ebx+14h] +
mov ecx [eax+0Ch] +
test edx edx +
jnz loc_43F8E3  +
mov edx [ebx+8Ch] +
mov eax [eax+10h] +
mov [edx+4] ecx +
mov [edx+8] eax +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_41E660  +
***
and edx 100000h +
jnz loc_43F8C2  +
lea edx [ecx-0Eh] +
cmp edx 1 +
ja loc_43F8D1  +
jmp loc_43F8C2  +
***
test byte ptr [ebx+16h] 10h +
jz loc_43F8D1  +
nop   +
lea esi [esi+0] +
jmp loc_43F8A8  +
***
mov dword ptr [esp+4] 90h +
mov [esp] esi +
call sub_425930  +
test eax eax +
jz loc_43F921  +
mov [ebx+8Ch] eax +
jmp loc_43F87B  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx [esp+6Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_43F960  +
cmp dword ptr [ebx+14h] 0 +
jnz loc_43FC2A  +
nop   +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+14h] +
lea esi [esp+6Ch+var_4C] +
test edx edx +
jnz loc_43FA81  +
mov eax offset unk_4B04D2 +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_8] +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_43F9A0  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
lea edi [edx+1] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_425850  +
test eax eax +
mov ebp eax +
jz loc_43FBA8  +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_64] edi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] ebp +
mov [esp+6Ch+var_6C] eax +
call sub_41ECA0  +
test eax eax +
mov esi eax +
jz loc_43FBA8  +
mov edx [ebx+14h] +
mov ecx [ebx+10h] +
mov eax [ebx+0Ch] +
add ecx edx +
mov [esi+20h] ecx +
mov ecx [ebx+18h] +
add eax edx +
mov [esi+1Ch] eax +
sub ecx edx +
add edx [ebx+8] +
mov [esi+24h] ecx +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] edx +
mov edx eax +
neg edx  +
and eax edx +
jz loc_43FBB2  +
mov edx [ebx+1Ch] +
cmp eax edx +
cmova eax edx +
mov [esp+6Ch+var_6C] eax +
call sub_42BE10  +
cmp dword ptr [ebx] 1 +
mov [esi+40h] eax +
jz loc_43FBC6  +
mov eax [ebx+4] +
test al 2 +
jnz loc_43F950  +
or dword ptr [esi+14h] 8 +
jmp loc_43F950  +
xor ecx ecx +
cmp edx eax +
setb cl  +
cmp eax edx +
mov ebp ecx +
mov eax offset unk_4B04D2 +
mov ecx offset aA +
cmovbe ecx eax +
mov eax [esp+6Ch+arg_8] +
lea esi [esp+6Ch+var_4C] +
mov [esp+6Ch+var_5C] ecx +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_43FAC9  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
add edx 1 +
mov [esp+6Ch+var_68] edx +
mov [esp+6Ch+var_6C] eax +
mov [esp+6Ch+var_50] edx +
call sub_425850  +
mov edx [esp+6Ch+var_50] +
test eax eax +
mov edi eax +
jz loc_43FBA8  +
mov [esp+6Ch+var_64] edx +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_41ECA0  +
test eax eax +
mov edi eax +
jz loc_43FBA8  +
mov eax [ebx+0Ch] +
mov [edi+1Ch] eax +
mov eax [ebx+10h] +
mov [edi+20h] eax +
mov eax [ebx+14h] +
mov [edi+24h] eax +
mov eax [ebx+8] +
or dword ptr [edi+14h] 100h +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov eax [ebx+1Ch] +
mov [esp+6Ch+var_6C] eax +
call sub_42BE10  +
cmp dword ptr [ebx] 1 +
mov [edi+40h] eax +
jz loc_43FC00  +
mov eax [ebx+4] +
test al 2 +
jz loc_43FBC0  +
mov eax [ebx+14h] +
cmp [ebx+18h] eax +
jbe loc_43F950  +
test ebp ebp +
mov eax offset aB +
jnz loc_43F974  +
jmp loc_43F96F  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+1Ch] +
jmp loc_43FA59  +
or dword ptr [edi+14h] 8 +
jmp loc_43FB8A  +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_43FC21  +
mov edx [esi+14h] +
mov eax edx +
or eax 1 +
mov [esi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_43FA70  +
or edx 11h +
mov [esi+14h] edx +
jmp loc_43FA70  +
mov ecx [edi+14h] +
mov eax ecx +
or eax 3 +
mov [edi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_43FB86  +
or ecx 13h +
mov [edi+14h] ecx +
jmp loc_43FB86  +
mov dword ptr [esi+24h] 0 +
jmp loc_43FBD8  +
xor ebp ebp +
mov ecx offset unk_4B04D2 +
jmp loc_43FA99  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov edx [esi] +
cmp edx 4 +
jz loc_43FD60  +
jbe loc_43FC86  +
cmp edx 6474E550h +
jz loc_43FD50  +
ja loc_43FCD0  +
cmp edx 5 +
jz loc_43FD10  +
cmp edx 6 +
jnz loc_43FD20  +
mov [esp+2Ch+var_20] offset aPhdr +
jmp loc_43FCB0  +
cmp edx 1 +
jz loc_43FDB0  +
jb loc_43FDA0  +
cmp edx 2 +
jz loc_43FCF0  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_43FD20  +
mov [esp+2Ch+var_20] offset aInterp +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_43F930  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 6474E551h +
jz loc_43FD00  +
cmp edx 6474E552h +
jnz loc_43FD20  +
mov [esp+2Ch+var_20] offset aRelro +
jmp loc_43FCB0  +
mov [esp+2Ch+var_20] offset aDynamic +
jmp loc_43FCB0  +
mov [esp+2Ch+var_20] offset aStack +
jmp loc_43FCB0  +
mov [esp+2Ch+var_20] offset aShlib +
jmp loc_43FCB0  +
mov eax [ebx+4] +
mov edi [esp+2Ch+arg_8] +
mov eax [eax+1B0h] +
mov eax [eax+58h] +
mov [esp+2Ch+var_20] offset aProc +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call eax  +
jmp loc_43FCC4  +
mov [esp+2Ch+var_20] offset aEh_frame_hdr +
jmp loc_43FCB0  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_20] offset aNote +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_43F930  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_43FCC4  +
mov ebp [esi+14h] +
mov esi [esi+8] +
test ebp ebp +
jnz loc_43FDBD  +
mov eax 1 +
jmp loc_43FCC4  +
mov [esp+2Ch+var_20] offset aNull_1 +
jmp loc_43FCB0  +
mov [esp+2Ch+var_20] offset aLoad_0 +
jmp loc_43FCB0  +
xor edi edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_429F00  +
test eax eax +
jz loc_43FDE2  +
xor eax eax +
jmp loc_43FCC4  +
lea eax [ebp+1] +
mov [esp+2Ch+var_2C] eax +
call sub_42B400  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_43FDDB  +
mov byte ptr [eax+ebp] 0 +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_429CF0  +
cmp ebp eax +
jz loc_43FE20  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
xor eax eax +
jmp loc_43FCC4  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_43B7D0  +
test eax eax +
jz loc_43FE0D  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_43FD92  +
***
mov ebx [esp+18h+arg_0] +
mov edx [ebx+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_43FE90  +
mov edx [edx+4Ch] +
test edx edx +
jz loc_43FE89  +
mov [esp+18h+var_14] 0AECh +
mov [esp+18h+var_18] offset a____Binutil_18 +
call sub_420BA0  +
mov eax [ebx+8Ch] +
mov eax [eax+3Ch] +
add esp 18h +
pop ebx  +
retn   +
mov eax [edx+4Ch] +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+4] +
mov eax 8 +
and edx 103h +
cmp edx 1 +
mov edx 1 +
cmovnz eax edx +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
test eax eax +
jz loc_43FF45  +
mov edx [eax+8Ch] +
mov ecx [edx+4] +
cmp ecx 4 +
jnz loc_43FF40  +
mov ebx [eax] +
lea edx [ebx+4] +
add ebx 5 +
cmp ecx 9 +
cmovnz edx ebx +
mov ebx [eax+94h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ADh] 1 +
jz loc_43FF12  +
mov edi offset a_plt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_43FF25  +
mov [esp+4] edx +
mov [esp] ebx +
call sub_41E710  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+4] offset a_got_plt +
mov [esp] ebx +
call sub_41E710  +
test eax eax +
jnz loc_43FF1E  +
mov edx offset a_got +
jmp loc_43FF12  +
***
cmp ecx 9 +
jz loc_43FEDC  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+arg_C] +
mov ecx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
test ebx ebx +
jz loc_43FF80  +
mov ebx [ecx+24h] +
cmp ebx 1 +
jbe loc_43FF80  +
mov esi eax +
xor edx edx +
lea edi [ebx+eax-1] +
mov eax 0FFFFFFFFh +
cmp esi edi +
jbe loc_43FFA6  +
mov ebx [ecx+2Ch] +
mov [ecx+10h] eax +
mov [ecx+14h] edx +
test ebx ebx +
jz loc_43FF93  +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
cmp dword ptr [ecx+4] 8 +
jz loc_43FFA2  +
mov ecx [ecx+18h] +
xor ebx ebx +
add eax ecx +
adc edx ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ebx +
xor edx edx +
neg eax  +
and eax edi +
jmp loc_43FF80  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov eax [eax+44h] +
mov ecx [edx] +
test ecx ecx +
jz loc_43FFF8  +
mov esi [ecx+24h] +
mov edx esi +
sub edx 1 +
js loc_43FFEF  +
cmp [ecx+esi*4+24h] ebx +
jnz loc_43FFE7  +
jmp loc_440000  +
cmp [ecx+edx*4+28h] ebx +
jz loc_440000  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jnz loc_43FFE1  +
mov ecx [ecx] +
add eax 20h +
test ecx ecx +
jnz loc_43FFCF  +
xor eax eax +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] 2Ch +
mov [esp+1Ch+var_1C] eax +
call sub_425930  +
test eax eax +
jz loc_440046  +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 2 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
setz dl  +
movzx eax dl +
mov [esp+6Ch+var_58] eax +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_4400B7  +
mov eax [esp+6Ch+arg_4] +
xor edx 1 +
mov edi [esp+6Ch+arg_4] +
shl edx 6 +
movzx eax byte ptr [eax+5] +
and eax 0FFFFFFBFh +
or eax edx +
mov [edi+5] al +
mov eax [esp+6Ch+var_58] +
test eax eax +
jz loc_4400D1  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_4401E1  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+934h] +
mov eax [edi] +
test eax eax +
jz loc_440145  +
lea esi [esi+0] +
mov edx [eax+24h] +
xor esi esi +
test edx edx +
jz loc_440128  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov ebx [eax+edx*4+28h] +
mov ecx [ebx+14h] +
test ch 80h +
jnz loc_44011E  +
and ecx 1 +
jnz loc_440117  +
cmp dword ptr [eax+4] 1 +
jz loc_44011E  +
mov [eax+esi*4+28h] ebx +
add esi 1 +
mov eax [edi] +
add edx 1 +
cmp edx [eax+24h] +
jb loc_440100  +
mov ecx [esp+6Ch+var_58] +
mov [eax+24h] esi +
test ecx ecx +
jz loc_44013D  +
cmp dword ptr [eax+4] 1 +
jz loc_4401D0  +
mov edi eax +
mov eax [eax] +
test eax eax +
jnz loc_4400F0  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0ACh] +
test eax eax +
jz loc_44017E  +
mov edi [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] esi +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4401C2  +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov eax [eax+0A0h] +
mov ecx [eax+934h] +
mov eax [ecx] +
test eax eax +
jz loc_4401A9  +
lea esi [esi+0] +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_4401A0  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+1] +
imul edx eax +
mov eax 1 +
mov [ecx+1Ch] edx +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_44013D  +
mov eax [eax] +
mov [edi] eax +
jmp loc_4400E6  +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_6C] eax +
call sub_42B440  +
mov ebp eax +
mov [esp+6Ch+var_4C] eax +
xor eax eax +
test ebp ebp +
jz loc_4401C2  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] eax +
call sub_423730  +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea esi [eax+eax-1] +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+64h] +
test eax eax +
jz loc_440BC9  +
xor ecx ecx +
test byte ptr [eax+14h] 1 +
jz loc_44024E  +
mov edi [eax+20h] +
mov edx [eax+24h] +
mov [ebp+ecx*4+0] eax +
add ecx 1 +
add edx edi +
and edi esi +
and edx esi +
cmp edx edi +
cmovb ebx edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_440230  +
mov edi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_40] ecx +
cmp [edi+6Ch] ecx +
jb loc_440B96  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_60] 43B100h +
mov [esp+6Ch+var_64] 4 +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call qsort  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_interp_0 +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_41E710  +
mov ebp eax +
test ebp ebp +
lea eax [esp+6Ch+var_10] +
mov [esp+6Ch+var_48] eax +
jz loc_4402C4  +
test byte ptr [ebp+14h] 2 +
jnz loc_440B18  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+10h] +
mov [esp+6Ch+var_68] offset a_dynamic_1 +
test eax eax +
mov edi eax +
mov eax 1 +
cmovnz eax edi +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_41E710  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_28] eax +
jz loc_44030C  +
test byte ptr [eax+14h] 2 +
mov eax 0 +
cmovnz eax edi +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_40] +
test eax eax +
jz loc_440511  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov edx [eax+1Ch] +
cmp edx 0FFFFFFFFh +
jz loc_440BAF  +
mov eax [esp+6Ch+var_3C] +
mov edi [esp+6Ch+arg_0] +
mov eax [eax+174h] +
test byte ptr [edi+29h] 20h +
movzx eax byte ptr [eax] +
jnz loc_44092A  +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
mov [esp+6Ch+var_34] 0 +
mov eax [esp+6Ch+var_30] +
mov ebx ecx +
xor esi esi +
xor edi edi +
xor edx edx +
mov [esp+6Ch+var_38] 0 +
mov ebp esi +
mov [esp+6Ch+var_54] 0 +
lea ecx [eax-1] +
neg eax  +
mov [esp+6Ch+var_20] ecx +
mov [esp+6Ch+var_2C] eax +
mov [esp+6Ch+var_50] edi +
jmp loc_4403D2  +
mov eax [ebx+14h] +
mov edx 1 +
mov [esp+6Ch+var_50] 0 +
test al 8 +
cmovz ebp edx +
and eax 402h +
cmp eax 400h +
jz loc_4403BC  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_50] eax +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
jz loc_4404BA  +
mov eax [esp+6Ch+var_4C] +
mov edx ebx +
mov ebx [eax+esi*4] +
test edx edx +
jz loc_440394  +
mov eax [ebx+20h] +
mov ecx [edx+20h] +
mov [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_44] eax +
mov edi ecx +
sub eax [ebx+1Ch] +
sub edi [edx+1Ch] +
cmp edi eax +
jz loc_440A04  +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_44043F  +
mov eax [esp+6Ch+arg_4] +
mov ecx [eax+18h] +
mov ecx [ecx+38h] +
test ecx ecx +
jz loc_44043F  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_60] edx +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_4] +
mov [esp+6Ch+var_6C] eax +
call ecx  +
mov [esp+6Ch+var_54] eax +
mov eax [esp+6Ch+var_54] +
test eax eax +
jz loc_440394  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
call sub_43B1B0  +
test eax eax +
jz loc_44086C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [ebx+14h] +
mov ebp eax +
and eax 402h +
shr ebp 3 +
xor ebp 1 +
and ebp 1 +
cmp eax 400h +
jz loc_440AC0  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_38] esi +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] eax +
jnz loc_4403C9  +
test ebx ebx +
mov eax esi +
mov [esp+6Ch+var_54] esi +
jz loc_440511  +
sub eax [esp+6Ch+var_38] +
cmp eax 1 +
jnz loc_4404DC  +
mov eax [ebx+14h] +
and eax 402h +
cmp eax 400h +
jz loc_440511  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
call sub_43B1B0  +
test eax eax +
jz loc_44086C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+var_28] +
test eax eax +
jz loc_44053E  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_440010  +
test eax eax +
jz loc_44086C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_440717  +
mov [esp+6Ch+var_50] 0 +
mov [esp+6Ch+var_54] 0 +
mov eax [ebp+14h] +
test al 2 +
jz loc_440628  +
mov esi [ebp+0] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_440628  +
cmp dword ptr [ebp+40h] 2 +
mov eax 2Ch +
mov ebx 1 +
jz loc_440882  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_425930  +
test eax eax +
mov edi eax +
jz loc_44086C  +
cmp ebx 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 4 +
mov [eax+24h] ebx +
mov eax ebx +
ja loc_4405DA  +
jmp loc_44060A  +
cmp esi 1 +
mov ebp [ebp+0Ch] +
jz loc_44060A  +
mov ebx esi +
mov edx eax +
sub edx ebx +
test byte ptr [ebp+15h] 4 +
lea esi [ebx-1] +
mov [edi+edx*4+28h] ebp +
jz loc_4405D0  +
mov [esp+6Ch+var_68] 11A6h +
mov [esp+6Ch+var_6C] offset a____Binutil_18 +
call sub_420BA0  +
cmp esi 1 +
mov eax [edi+24h] +
mov ebp [ebp+0Ch] +
jnz loc_4405D8  +
mov [edi+eax*4+24h] ebp +
mov eax [ebp+14h] +
and eax 400h +
jnz loc_440909  +
mov esi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] edi +
mov [esi] edi +
jmp loc_44062D  +
and eax 400h +
test eax eax +
jz loc_440647  +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+var_50] +
test edi edi +
cmovz eax ebp +
add [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_50] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_440560  +
mov ebx [esp+6Ch+var_54] +
test ebx ebx +
jz loc_440717  +
lea eax ds:28h[ebx*4] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_425930  +
test eax eax +
jz loc_44086C  +
mov dword ptr [eax] 0 +
mov ecx [esp+6Ch+var_50] +
xor edx edx +
mov dword ptr [eax+4] 7 +
mov [eax+24h] ebx +
mov dword ptr [eax+8] 4 +
or byte ptr [eax+20h] 1 +
jmp loc_4406B1  +
mov [eax+edx*4+28h] ecx +
add edx 1 +
mov ecx [ecx+0Ch] +
cmp ebx edx +
jz loc_44070D  +
test byte ptr [ecx+15h] 4 +
jnz loc_4406A3  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] offset aBTlsSectionsAr +
mov [esp+6Ch+var_68] eax +
call off_492AE8  +
mov esi [esp+6Ch+var_50] +
jmp loc_4406F4  +
mov [esp+6Ch+var_6C] offset aTlsA +
add ebx 1 +
call off_492AE8  +
cmp ebx [esp+6Ch+var_54] +
mov esi [esi+0Ch] +
jnb loc_440860  +
test byte ptr [esi+15h] 4 +
mov [esp+6Ch+var_68] esi +
jnz loc_4406D7  +
mov [esp+6Ch+var_6C] offset aNonTlsA +
call off_492AE8  +
jmp loc_4406E7  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_440790  +
mov edx [ebx+3Ch] +
test byte ptr [edx+14h] 2 +
jz loc_440790  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_425930  +
test eax eax +
jz loc_44086C  +
mov edx [ebx+3Ch] +
mov edi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E550h +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov esi [eax+34h] +
test esi esi +
jnz loc_440975  +
mov ebx [esp+6Ch+arg_4] +
test ebx ebx +
jz loc_440836  +
mov eax [esp+6Ch+arg_4] +
test byte ptr [eax+3] 1 +
jz loc_440836  +
mov eax [esp+6Ch+var_10] +
test eax eax +
jz loc_440836  +
mov ebx [esp+6Ch+arg_4] +
jmp loc_4407CE  +
mov eax [eax] +
test eax eax +
jz loc_440836  +
cmp dword ptr [eax+4] 1 +
jnz loc_4407C8  +
mov edx [eax+24h] +
test edx edx +
jz loc_4407C8  +
mov ecx [eax+28h] +
mov ecx [ecx+1Ch] +
cmp ecx [ebx+70h] +
jb loc_4407C8  +
cmp ecx [ebx+74h] +
jnb loc_4407C8  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_4407C8  +
mov ecx [eax+edx*4+28h] +
mov ecx [ecx+14h] +
and ecx 102h +
cmp ecx 102h +
jnz loc_4407EB  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_425930  +
test eax eax +
jz loc_44086C  +
mov esi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E552h +
mov [esi] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_10] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov [edx] ecx +
jmp loc_4400DE  +
mov [esp+6Ch+var_6C] 11h +
call sub_420C50  +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_440594  +
cmp dword ptr [edx+40h] 2 +
jnz loc_440594  +
test byte ptr [edx+14h] 2 +
jz loc_440594  +
mov eax ebp +
mov [esp+6Ch+var_44] ebx +
jmp loc_4408DD  +
mov ecx [eax+20h] +
add ecx [eax+24h] +
lea eax [ecx+3] +
and eax 0FFFFFFFCh +
cmp eax [edx+20h] +
jnz loc_4408F9  +
mov ecx [edx+0Ch] +
add [esp+6Ch+var_44] 1 +
test ecx ecx +
jz loc_4408F9  +
cmp dword ptr [ecx+40h] 2 +
jnz loc_4408F9  +
test byte ptr [ecx+14h] 2 +
jz loc_4408F9  +
mov eax edx +
mov edx ecx +
mov esi [edx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_4408B0  +
mov ebx [esp+6Ch+var_44] +
lea eax ds:28h[ebx*4] +
jmp loc_440594  +
mov [esp+6Ch+var_68] 11AAh +
mov [esp+6Ch+var_6C] offset a____Binutil_18 +
call sub_420BA0  +
mov eax [ebp+14h] +
and eax 400h +
jmp loc_44061C  +
lea edi [edx+eax] +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
and esi [ecx+20h] +
cmp edi esi +
ja loc_44035B  +
xor edx edx +
mov eax esi +
div  [esp+6Ch+var_30] +
mov eax edi +
mov ebp edx +
xor edx edx +
div  [esp+6Ch+var_30] +
cmp ebp edx +
jb loc_44035B  +
mov eax [esp+6Ch+var_30] +
mov [esp+6Ch+var_34] 1 +
neg eax  +
and eax esi +
cmp ebx eax +
jbe loc_440363  +
jmp loc_44035B  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_425930  +
test eax eax +
jz loc_44086C  +
mov esi [esp+6Ch+arg_0] +
mov dword ptr [eax] 0 +
mov edi [esp+6Ch+var_3C] +
mov dword ptr [eax+4] 6474E551h +
mov edx [esi+0A0h] +
mov ecx [edi+1A8h] +
mov esi [esp+6Ch+arg_4] +
mov edx [edx+934h] +
mov edx [edx+34h] +
mov [eax+14h] ecx +
mov [eax+8] edx +
movzx edx byte ptr [eax+20h] +
or edx 1 +
test ecx ecx +
setnz cl  +
and edx 0FFFFFFFBh +
shl ecx 2 +
or edx ecx +
mov ecx [esi+10h] +
mov [eax+20h] dl +
test ecx ecx +
jle loc_4409F5  +
or edx 8 +
mov [eax+18h] ecx +
mov [eax+20h] dl +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_4407AA  +
mov eax [esp+6Ch+var_50] +
add eax ecx +
cmp [esp+6Ch+var_44] eax +
mov [esp+6Ch+var_50] eax +
jb loc_4403F8  +
cmp ecx eax +
ja loc_4403F8  +
mov edi [esp+6Ch+var_30] +
sub eax 1 +
mov [esp+6Ch+var_24] eax +
add edi eax +
cmp [esp+6Ch+var_50] edi +
mov eax edi +
jbe loc_440AD9  +
mov eax [esp+6Ch+var_20] +
cmp eax ecx +
mov edi eax +
jbe loc_440A55  +
cmp [esp+6Ch+var_44] edi +
mov [esp+6Ch+var_54] 1 +
jnb loc_4403F8  +
test dword ptr [edx+14h] 402h +
jnz loc_440AF0  +
test dword ptr [ebx+14h] 402h +
jz loc_440AF0  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 1 +
test byte ptr [eax+29h] 20h +
jz loc_4403F8  +
mov ecx [esp+6Ch+var_24] +
xor ecx [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] ecx +
jnz loc_4403F8  +
test ebp ebp +
jnz loc_440B0B  +
test byte ptr [ebx+14h] 8 +
jnz loc_440B0B  +
mov eax [esp+6Ch+var_24] +
xor eax [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] eax +
jz loc_440B0B  +
mov [esp+6Ch+var_54] 1 +
jmp loc_4403F8  +
mov [esp+6Ch+var_38] esi +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] 0 +
jmp loc_4403BC  +
mov edi [esp+6Ch+var_30] +
and eax [esp+6Ch+var_2C] +
add edi eax +
cmp edi ecx +
jbe loc_440A55  +
jmp loc_440A43  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 0 +
test byte ptr [eax+29h] 20h +
jz loc_4403F8  +
jmp loc_440A9A  +
mov [esp+6Ch+var_54] 0 +
jmp loc_4403F8  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_425930  +
test eax eax +
mov edi eax +
jz loc_44086C  +
mov dword ptr [eax] 0 +
or byte ptr [eax+20h] 21h +
mov dword ptr [eax+4] 6 +
mov dword ptr [eax+8] 5 +
mov [esp+6Ch+var_10] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_425930  +
test eax eax +
jz loc_44086C  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 3 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] ebp +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_4402C4  +
mov [esp+6Ch+var_68] 1092h +
mov [esp+6Ch+var_6C] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_440269  +
mov edx [esp+6Ch+arg_4] +
mov eax [esp+6Ch+arg_0] +
call sub_43B350  +
mov edx eax +
jmp loc_440337  +
mov [esp+6Ch+var_40] 0 +
jmp loc_440269  +
***
sub esp 24h +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_0] +
mov eax [edx+8Ch] +
test eax eax +
jz loc_440BFE  +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_440C4D  +
cmp edx offset off_492990 +
jz loc_440C92  +
mov esi [edx+14h] +
mov ebx 0FFFFFFF2h +
and esi 1000h +
jz loc_440C53  +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jz loc_440C43  +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] ebx +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] ecx +
call eax  +
test eax eax +
jnz loc_440C88  +
cmp ebx 0FFFFFEFFh +
mov eax ebx +
jz loc_440C72  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
cmp edx offset off_4928E8 +
mov bx 0FEFFh +
cmovz ebx esi +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_440C2A  +
jmp loc_440C43  +
mov [esp+24h+var_24] 0Fh +
mov [esp+24h+var_18] ebx +
call sub_420C50  +
mov eax [esp+24h+var_18] +
jmp loc_440C4D  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
mov ebx 0FFFFFFF1h +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_440C2A  +
jmp loc_440C43  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebp [esp+0ACh+arg_0] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov esi [eax+1B0h] +
jnz loc_440EC2  +
mov eax [esi+0A0h] +
mov edx esi +
test eax eax +
jz loc_440CF9  +
mov edi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] edi +
call eax  +
mov eax [ebp+4] +
mov edx [eax+1B0h] +
mov [esp+0ACh+var_94] edx +
mov ebx [ebp+0A0h] +
call sub_466DA0  +
test eax eax +
mov edi eax +
jz loc_440E9E  +
mov eax [ebp+0A0h] +
mov edx [esp+0ACh+var_94] +
mov eax [eax+934h] +
mov [eax+4] edi +
mov byte ptr [ebx] 7Fh +
mov byte ptr [ebx+1] 45h +
mov byte ptr [ebx+2] 4Ch +
mov byte ptr [ebx+3] 46h +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
mov [ebx+4] al +
mov eax [ebp+4] +
cmp dword ptr [eax+8] 1 +
sbb eax eax +
not eax  +
add eax 2 +
mov [ebx+5] al +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Dh] +
mov [ebx+6] al +
mov eax [ebp+28h] +
shr eax 5 +
and eax 3FFFFh +
test al 40h +
jz loc_440EB0  +
mov eax 3 +
mov [ebx+24h] ax +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_94] edx +
call sub_423700  +
mov edx [esp+0ACh+var_94] +
test eax eax +
jnz loc_440ED2  +
xor eax eax +
mov [ebx+26h] ax +
mov eax [edx+174h] +
movzx edx byte ptr [eax+0Dh] +
mov [ebx+1Ch] edx +
movzx edx byte ptr [eax] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] edx +
mov edx [ebp+74h] +
mov [ebx+10h] edx +
movzx eax byte ptr [eax+2] +
mov [ebx+34h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab +
mov [esp+0ACh+var_AC] edi +
call sub_466E50  +
mov [ebx+48h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_strtab +
mov [esp+0ACh+var_AC] edi +
call sub_466E50  +
mov [ebx+0B8h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_shstrtab +
mov [esp+0ACh+var_AC] edi +
call sub_466E50  +
mov [ebx+80h] eax +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+48h] 0FFFFFFFFh +
jz loc_440E9E  +
cmp dword ptr [eax+0B8h] 0FFFFFFFFh +
jz loc_440E9E  +
cmp dword ptr [eax+80h] 0FFFFFFFFh +
jz loc_440E9E  +
mov eax [esi+0C8h] +
mov esi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] offset sub_43BE30 +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_34] eax +
lea eax [esp+0ACh+var_34] +
mov [esp+0ACh+var_A4] eax +
call sub_41ED30  +
mov ecx [esp+0ACh+var_30] +
test ecx ecx +
jz loc_440F00  +
***
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 2 +
jz loc_440EE0  +
mov eax 2 +
mov [ebx+24h] ax +
jmp loc_440D7B  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+8] +
mov [ebx+26h] ax +
jmp loc_440D99  +
***
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
setz al  +
movzx eax al +
lea eax [eax+eax*2+1] +
mov [ebx+24h] ax +
jmp loc_440D7B  +
***
mov eax [ebp+0A0h] +
mov [esp+0ACh+var_8C] eax +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_AC] eax +
call sub_467060  +
mov esi [esp+0ACh+arg_4] +
test esi esi +
jz loc_441820  +
mov eax [esp+0ACh+arg_4] +
mov edi 2 +
mov esi 1 +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_441820  +
mov eax [ebp+64h] +
test eax eax +
jz loc_441049  +
mov ecx esi +
mov edx ebp +
mov esi eax +
jmp loc_440FDA  +
***
mov eax [eax] +
lea ebp [edi+1] +
mov [ebx+44h] edi +
cmp eax 0FFFFFFFFh +
jz loc_440F90  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_466F30  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_441037  +
mov eax [eax] +
lea ecx [ebp+1] +
mov [ebx+54h] ebp +
cmp eax 0FFFFFFFFh +
jz loc_440FD3  +
mov ebx [edx+0A0h] +
mov [esp+0ACh+var_84] ecx +
mov [esp+0ACh+var_94] edx +
mov ebx [ebx+934h] +
mov ebx [ebx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ebx +
call sub_466F30  +
mov edx [esp+0ACh+var_94] +
mov ecx [esp+0ACh+var_84] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_441042  +
mov ebx [esi+8Ch] +
mov edi ecx +
cmp dword ptr [ebx+4] 11h +
jz loc_440FEE  +
add edi 1 +
mov [ebx+5Ch] ecx +
mov eax [ebx] +
cmp eax 0FFFFFFFFh +
jz loc_441018  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_466F30  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+3Ch] +
test eax eax +
jnz loc_440F60  +
mov eax [ebx+4Ch] +
mov ebp edi +
mov dword ptr [ebx+44h] 0 +
test eax eax +
jnz loc_440F9B  +
mov dword ptr [ebx+54h] 0 +
mov ecx ebp +
jmp loc_440FD3  +
mov esi ecx +
mov ebp edx +
lea edi [ecx+1] +
mov eax [ebp+0A0h] +
mov ecx [esp+0ACh+var_8C] +
mov eax [eax+934h] +
mov edx [ecx+80h] +
mov [eax+2Ch] esi +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_466F30  +
mov eax [ebp+0A0h] +
mov ebx [ebp+7Ch] +
mov edx [eax+934h] +
test ebx ebx +
mov edx [edx+2Ch] +
mov [eax+3Ch] edx +
jz loc_441412  +
mov eax [ebp+0A0h] +
lea ebx [esi+2] +
mov [eax+90Ch] edi +
mov eax [esp+0ACh+var_8C] +
mov edx [eax+48h] +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_466F30  +
cmp ebx 0FEFEh +
jbe loc_442934  +
mov eax [ebp+0A0h] +
mov edx [eax+208h] +
test edx edx +
jz loc_4410EF  +
mov [esp+0ACh+var_A8] 0D5Ch +
mov [esp+0ACh+var_AC] offset a____Binutil_18 +
call sub_420BA0  +
mov [esp+0ACh+var_A8] 40h +
add esi 3 +
mov [esp+0ACh+var_AC] ebp +
call sub_425930  +
mov [eax+38h] ebx +
mov edi eax +
mov eax [ebp+0A0h] +
mov [eax+208h] edi +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab_shndx +
mov [esp+0ACh+var_AC] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
mov [edi] eax +
jz loc_440E9E  +
mov eax [ebp+0A0h] +
lea edi [esi+1] +
mov ebx 1 +
mov eax [eax+934h] +
mov [eax+30h] esi +
mov esi [esp+0ACh+var_8C] +
mov eax [eax+4] +
mov edx [esi+0B8h] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
call sub_466F30  +
cmp edi 0FFFFFEFFh +
ja loc_441880  +
mov eax [ebp+0A0h] +
mov [eax+214h] edi +
mov eax [ebp+0A0h] +
mov [eax+38h] edi +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] edi +
mov [esp+0ACh+var_AC] ebp +
call sub_425A20  +
test eax eax +
mov esi eax +
mov [esp+0ACh+var_94] eax +
jz loc_440E9E  +
mov [esp+0ACh+var_A8] 38h +
mov [esp+0ACh+var_AC] ebp +
call sub_425930  +
test eax eax +
mov [esi] eax +
jz loc_4432BB  +
mov eax [ebp+0A0h] +
test ebx ebx +
mov esi [esp+0ACh+var_94] +
mov edi [esp+0ACh+var_8C] +
mov [eax+40h] esi +
mov eax [ebp+0A0h] +
lea edx [edi+80h] +
mov eax [eax+934h] +
mov eax [eax+2Ch] +
mov [esi+eax*4] edx +
jz loc_44127A  +
mov eax [ebp+0A0h] +
lea edx [edi+48h] +
mov esi [esp+0ACh+var_94] +
mov eax [eax+90Ch] +
mov [esi+eax*4] edx +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+214h] 0FF00h +
jbe loc_44124E  +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_443CC3  +
mov eax [ebx+38h] +
mov esi [esp+0ACh+var_94] +
mov [esi+eax*4] ebx +
mov eax [ebp+0A0h] +
mov edx [eax+90Ch] +
mov [ebx+1Ch] edx +
mov eax [eax+934h] +
mov esi [esp+0ACh+var_8C] +
mov edi [esp+0ACh+var_94] +
mov eax [eax+30h] +
lea edx [esi+0B8h] +
mov [edi+eax*4] edx +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+30h] +
mov [esi+64h] eax +
mov edx [ebp+64h] +
test edx edx +
jz loc_44169C  +
mov [esp+0ACh+arg_0] ebp +
jmp loc_4412FB  +
***
cmp eax 5 +
jz loc_441515  +
ja loc_441441  +
cmp eax 3 +
jnz loc_441540  +
mov esi [edx] +
mov edi offset a_stab_3 +
mov ecx 5 +
mov ebp esi +
cmps   +
jnz loc_4412F0  +
mov [esp+0ACh+var_AC] ebp +
mov edi ebp +
mov [esp+0ACh+var_84] edx +
mov esi edi +
mov edi offset aStr +
call strlen  +
mov ecx 4 +
mov edx [esp+0ACh+var_84] +
mov ebp eax +
sub eax 3 +
mov [esp+0ACh+var_8C] eax +
add esi eax +
cmps   +
jz loc_4418A0  +
nop   +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jz loc_441695  +
mov ebx [edx+8Ch] +
mov eax [esp+0ACh+var_94] +
mov ecx [ebx+44h] +
mov esi [ebx+5Ch] +
test ecx ecx +
mov [eax+esi*4] ebx +
jz loc_44131C  +
mov eax [ebx+3Ch] +
mov edi [esp+0ACh+var_94] +
mov [edi+ecx*4] eax +
mov eax [ebx+54h] +
test eax eax +
jz loc_44132E  +
mov edi [ebx+4Ch] +
mov ebp [esp+0ACh+var_94] +
mov [ebp+eax*4+0] edi +
test ecx ecx +
jz loc_441352  +
mov edi [esp+0ACh+arg_0] +
mov ecx [ebx+3Ch] +
mov edi [edi+0A0h] +
mov edi [edi+90Ch] +
or dword ptr [ecx+8] 40h +
mov [ecx+20h] esi +
mov [ecx+1Ch] edi +
test eax eax +
jz loc_441376  +
mov edi [esp+0ACh+arg_0] +
mov eax [ebx+4Ch] +
mov ecx [edi+0A0h] +
mov ecx [ecx+90Ch] +
or dword ptr [eax+8] 40h +
mov [eax+20h] esi +
mov [eax+1Ch] ecx +
test byte ptr [ebx+8] 80h +
jz loc_4413CB  +
mov eax [edx+8Ch] +
mov edi [eax+64h] +
test edi edi +
jz loc_441560  +
mov eax [esp+0ACh+arg_4] +
test eax eax +
jz loc_4415A3  +
cmp edi offset off_492990 +
jz loc_4415F0  +
mov esi [edi+3Ch] +
cmp esi offset off_492990 +
jz loc_441600  +
test esi esi +
jz loc_441674  +
mov eax [esi+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [ebx+4] +
cmp eax 0Bh +
jz loc_4414C0  +
jbe loc_441290  +
cmp eax 6FFFFFF7h +
jz loc_441523  +
ja loc_4414F8  +
cmp eax 11h +
jnz loc_441550  +
mov eax [esp+0ACh+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+90Ch] +
mov [ebx+1Ch] eax +
jmp loc_4412F0  +
mov ecx [esp+0ACh+arg_4] +
xor ebx ebx +
test ecx ecx +
jnz loc_441175  +
mov eax [ebp+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_44108E  +
mov ebx [esp+0ACh+arg_4] +
jmp loc_441175  +
cmp eax 6 +
jz loc_4414C0  +
cmp eax 9 +
jnz loc_4412F0  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_dynsym_0 +
mov [esp+28h] edx +
mov [esp] eax +
call sub_41E710  +
mov edx [esp+28h] +
test eax eax +
jz loc_44147E  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [esp+0C0h] +
mov [esp+28h] edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+160h] +
mov [esp] edx +
call eax  +
mov edx [esp+28h] +
test eax eax +
jz loc_4412F0  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
or dword ptr [ebx+8] 40h +
mov [ebx+20h] eax +
jmp loc_4412F0  +
***
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynstr_0 +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call sub_41E710  +
mov edx [esp+0ACh+var_84] +
test eax eax +
jz loc_4412F0  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
jmp loc_4412F0  +
cmp eax 6FFFFFFDh +
jb loc_4412F0  +
cmp eax 6FFFFFFEh +
jbe loc_4414C0  +
cmp eax 6FFFFFFFh +
jnz loc_4412F0  +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynsym_0 +
jmp loc_4414CC  +
test byte ptr [edx+14h] 1 +
mov eax offset a_dynstr_0 +
mov esi offset a_gnu_libstr +
mov [esp+0ACh+var_84] edx +
cmovz eax esi +
mov [esp+0ACh+var_A8] eax +
jmp loc_4414CC  +
***
cmp eax 4 +
jz loc_44144F  +
jmp loc_4412F0  +
***
cmp eax 6FFFFFF6h +
jz loc_441515  +
jmp loc_4412F0  +
***
mov eax [esp+0ACh+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_4413CB  +
mov esi [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_AC] offset aBWarningSh_lin +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov edx [esp+0ACh+var_84] +
jmp loc_4413CB  +
mov esi [edi+3Ch] +
test esi esi +
jnz loc_4413BF  +
mov edx [edi+94h] +
mov eax [ebx+2Ch] +
mov ebp [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_9C] edx +
mov [esp+0ACh+var_A4] eax +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSect +
call off_492AE8  +
mov [esp+0ACh+var_AC] 11h +
call sub_420C50  +
jmp loc_440E9E  +
***
mov esi off_4929CC +
jmp loc_4413B7  +
***
movzx eax word ptr [edi+18h] +
and ax 380h +
cmp ax 100h +
jz loc_4413BF  +
cmp ax 200h +
jz loc_4413BF  +
mov eax [ebx+2Ch] +
mov ecx [edi+94h] +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_9C] ecx +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSe_0 +
mov [esp+0ACh+var_A8] eax +
call off_492AE8  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A8] eax +
call sub_458090  +
test eax eax +
jz loc_443315  +
mov esi [eax+3Ch] +
mov edx [esp+0ACh+var_84] +
jmp loc_4413B7  +
mov [esp+0ACh+var_A8] 0DD0h +
mov [esp+0ACh+var_AC] offset a____Binutil_18 +
mov [esp+0ACh+var_84] edx +
call sub_420BA0  +
mov edx [esp+0ACh+var_84] +
jmp loc_4413BF  +
mov ebp [esp+0ACh+arg_0] +
mov edx [esp+0ACh+arg_4] +
test edx edx +
jz loc_442A8E  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
mov eax [ebp+4] +
mov esi [ebp+0A0h] +
mov eax [eax+1B0h] +
mov [esp-0BCh+arg_114] esi +
mov dword ptr [esi+84h] 3 +
mov dword ptr [esi+88h] 0 +
mov [esp-0BCh+arg_104] eax +
mov eax [ebp+28h] +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+9Ch] 0 +
shr eax 5 +
test al 42h +
mov dword ptr [esi+0A0h] 0 +
mov dword ptr [esi+0A4h] 1 +
jnz loc_441948  +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
jz loc_441948  +
mov eax esi +
xor edx edx +
mov esi [esi+40h] +
mov edi [eax+214h] +
mov eax [eax+28h] +
cmp edi 1 +
mov [esp-0BCh+arg_D0] edi +
jbe loc_443267  +
mov edi [esp-0BCh+arg_114] +
mov ebx 1 +
mov [esp-0BCh+arg_178] ebp +
mov ecx [edi+934h] +
mov ebp edi +
mov [esp-0BCh+arg_E0] ecx +
jmp loc_4417DD  +
cmp [ebp+90Ch] ebx +
jz loc_4417FE  +
mov edi [ebp+208h] +
test edi edi +
jz loc_441792  +
mov edi [edi+38h] +
cmp ecx [esi+edi*4] +
jz loc_4417FE  +
mov edi [esp-0BCh+arg_E0] +
cmp ebx [edi+30h] +
jz loc_4417FE  +
cmp ebx [edi+2Ch] +
jz loc_4417FE  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_43FF50  +
mov edi [esp-0BCh+arg_178] +
mov ebp [edi+0A0h] +
mov edi [ebp+934h] +
mov [esp-0BCh+arg_E0] edi +
nop   +
add ebx 1 +
cmp ebx [esp-0BCh+arg_D0] +
jz loc_442899  +
mov ecx [esi+ebx*4] +
mov edi [ecx+4] +
cmp edi 4 +
jz loc_4417ED  +
cmp edi 9 +
jnz loc_441810  +
mov edi [ecx+2Ch] +
test edi edi +
jz loc_4417FE  +
test byte ptr [edi+17h] 8 +
jz loc_441778  +
mov dword ptr [ecx+10h] 0FFFFFFFFh +
mov dword ptr [ecx+14h] 0FFFFFFFFh +
jmp loc_4417D0  +
***
mov edi [ecx+2Ch] +
test edi edi +
jnz loc_4417F4  +
jmp loc_441778  +
***
mov eax [ebp+64h] +
test eax eax +
jz loc_443199  +
mov esi 1 +
jmp loc_44183F  +
mov edx [eax+0Ch] +
test edx edx +
mov eax edx +
jz loc_441940  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 11h +
jnz loc_441832  +
test byte ptr [eax+16h] 10h +
jz loc_441878  +
mov ecx [eax+10h] +
mov edx [eax+0Ch] +
test ecx ecx +
mov ebx edx +
jz loc_442FC6  +
mov [ecx+0Ch] edx +
mov edx [eax+0Ch] +
test ebx ebx +
jz loc_442FBE  +
mov [ebx+10h] ecx +
sub dword ptr [ebp+6Ch] 1 +
jmp loc_441835  +
mov [edx+5Ch] esi +
add esi 1 +
jmp loc_441832  +
mov [esp+0ACh+var_A4] edi +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBTooManySectio +
call off_492AE8  +
jmp loc_440E9E  +
***
lea eax [ebp-2] +
mov [esp+0ACh+var_AC] eax +
call sub_42B400  +
test eax eax +
mov esi eax +
jz loc_440E9E  +
mov edx [esp+0ACh+var_84] +
mov ecx [esp+0ACh+var_8C] +
mov eax [edx] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_AC] esi +
mov [esp+0ACh+var_A8] eax +
call memcpy  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [esi+ebp-3] 0 +
mov [esp+0ACh+var_A8] esi +
mov [esp+0ACh+var_AC] eax +
call sub_41E710  +
mov [esp+0ACh+var_AC] esi +
mov edi eax +
call free  +
test edi edi +
mov edx [esp+0ACh+var_84] +
jz loc_4412F0  +
mov esi [edi+8Ch] +
mov eax [ebx+5Ch] +
mov [esi+1Ch] eax +
mov eax [esi+28h] +
test eax eax +
jnz loc_4412F0  +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call loc_421130  +
mov edx [esp+0ACh+var_84] +
test eax eax +
lea ecx [eax+3] +
cmovs eax ecx +
sar eax 2 +
add eax 4 +
mov [esi+28h] eax +
jmp loc_4412F0  +
***
lea edi [esi+1] +
jmp loc_440F49  +
***
mov edi [esp-0BCh+arg_17C] +
mov esi [esp-0BCh+arg_114] +
test edi edi +
jz loc_4432DA  +
mov eax [esi+934h] +
xor edi edi +
mov eax [eax] +
test eax eax +
jz loc_442948  +
xor ecx ecx +
nop   +
mov edx [eax+1Ch] +
add ecx 1 +
mov eax [eax] +
test edx edx +
cmovnz edi edx +
test eax eax +
jnz loc_441970  +
test ecx ecx +
mov [esp-0BCh+arg_108] ecx +
jz loc_442948  +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
movzx eax byte ptr [ecx] +
mov [esi+14h] eax +
mov eax [ebp+0A0h] +
movzx edx byte ptr [ecx+1] +
mov [eax+2Ch] edx +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_108] +
mov [eax+30h] esi +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [edx+1Ch] +
cmp esi 0FFFFFFFFh +
jz loc_442FF5  +
movzx ebx byte ptr [ecx+1] +
imul ebx [esp-0BCh+arg_108] +
cmp esi ebx +
jb loc_443134  +
mov ebx [esp-0BCh+arg_108] +
test ebx ebx +
jz loc_442A76  +
mov esi [edx+1Ch] +
xor edx edx +
movzx ecx byte ptr [ecx+1] +
mov eax esi +
div  ecx +
mov eax esi +
test edx edx +
jnz loc_443163  +
xor edx edx +
div  ecx +
mov [esp-0BCh+arg_C0] 20h +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_425A20  +
mov ebx eax +
mov eax [ebp+0A0h] +
test ebx ebx +
mov [eax+44h] ebx +
jz loc_440E9E  +
test byte ptr [ebp+29h] 20h +
mov [esp-0BCh+arg_11C] 1 +
jz loc_441A47  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+10h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov [esp-0BCh+arg_D4] 0 +
mov eax [eax+174h] +
movzx esi byte ptr [eax] +
movzx eax byte ptr [eax+1] +
imul eax [esp-0BCh+arg_108] +
mov [esp-0BCh+arg_D0] esi +
add [esp-0BCh+arg_D0] eax +
mov eax [esp-0BCh+arg_D0] +
adc [esp-0BCh+arg_D4] edx +
cmp eax edi +
ja loc_443006  +
sub edi eax +
xor edx edx +
mov [esp-0BCh+arg_120] edi +
mov eax edi +
add eax [esp-0BCh+arg_D0] +
adc edx [esp-0BCh+arg_D4] +
mov [esp-0BCh+arg_E8] eax +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_EC] edx +
mov edx [eax+934h] +
mov esi [edx] +
test esi esi +
mov [esp-0BCh+arg_E0] esi +
jz loc_442078  +
mov [esp-0BCh+arg_178] ebp +
mov ebp ebx +
mov [esp-0BCh+arg_100] 0 +
mov eax [esp-0BCh+arg_E0] +
mov ebx [eax+24h] +
cmp ebx 1 +
jbe loc_4423C7  +
mov eax [esp-0BCh+arg_178] +
mov eax [eax+0A0h] +
cmp word ptr [eax+24h] 4 +
jnz loc_441AFC  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+4] +
cmp eax 4 +
mov [esp-0BCh+arg_D0] eax +
jz loc_442200  +
mov esi [esp-0BCh+arg_E0] +
mov [esp-0BCh+arg_BC] ebx +
mov [esp-0BCh+arg_C4] 43B100h +
mov [esp-0BCh+arg_C0] 4 +
lea eax [esi+28h] +
mov [esp-0BCh+arg_B8] eax +
call qsort  +
mov eax esi +
mov esi [esi+4] +
mov ebx [eax+24h] +
mov [esp-0BCh+arg_D0] esi +
mov eax [esp-0BCh+arg_D0] +
test ebx ebx +
mov esi [esp-0BCh+arg_E0] +
mov [ebp+0] eax +
mov eax [esi+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
jnz loc_442215  +
movzx eax byte ptr [esi+20h] +
mov dword ptr [ebp+0Ch] 0 +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_4421F1  +
mov dword ptr [ebp+10h] 0 +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_4422A0  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_442245  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [ebp+1Ch] eax +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_4422CA  +
cmp [esp-0BCh+arg_D0] 2 +
jz loc_442762  +
xor esi esi +
cmp [esp-0BCh+arg_D0] 4 +
mov [esp-0BCh+arg_F8] 0 +
jz loc_442390  +
movzx eax byte ptr [esp-0BCh+arg_D8] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+14h] 0 +
mov dword ptr [ebp+18h] 0 +
and eax 10h +
jz loc_441C20  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_441BE6  +
mov edx [esp-0BCh+arg_F0] +
or edx 4 +
mov [ebp+4] edx +
mov edi [esp-0BCh+arg_104] +
test ebx ebx +
mov edx [edi+174h] +
movzx ecx byte ptr [edx] +
mov [ebp+14h] ecx +
movzx edx byte ptr [edx] +
mov [ebp+18h] edx +
jz loc_441C20  +
mov ecx [ebp+0Ch] +
mov edx [esp-0BCh+arg_E8] +
cmp ecx edx +
jb loc_4432FD  +
sub ecx edx +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
mov [ebp+0Ch] ecx +
jnz loc_441C20  +
sub [ebp+10h] edx +
nop   +
test byte ptr [esp-0BCh+arg_D8] 20h +
jz loc_441C8C  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_441C32  +
or dword ptr [ebp+4] 4 +
test al al +
mov eax [esp-0BCh+arg_104] +
mov edx [eax+174h] +
jnz loc_442737  +
movzx eax byte ptr [edx] +
test ebx ebx +
mov [ebp+8] eax +
jz loc_442917  +
sub eax [esp-0BCh+arg_E8] +
add [ebp+0Ch] eax +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
jnz loc_441C63  +
add [ebp+10h] eax +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
mov edi [esp-0BCh+arg_120] +
add eax edi +
add edx edi +
mov [ebp+14h] eax +
mov [ebp+18h] edx +
mov eax [esp-0BCh+arg_D0] +
cmp eax 1 +
jz loc_442286  +
cmp eax 4 +
jz loc_442270  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+24h] +
lea esi [eax+28h] +
mov [esp-0BCh+arg_F0] esi +
test ecx ecx +
jz loc_443128  +
mov edi [ebp+0] +
mov esi ebp +
mov [esp-0BCh+arg_D0] 0 +
mov [esp-0BCh+arg_E4] edi +
jmp loc_441D59  +
***
cmp edi 1 +
jz loc_441E60  +
cmp dword ptr [ebp+4] 8 +
jz loc_441E90  +
mov ecx [ebp+18h] +
add [esi+14h] ecx +
test byte ptr [ebp+8] 2 +
jz loc_441CF2  +
add [esi+18h] ecx +
mov eax [esp-0BCh+arg_D8] +
cmp eax [esi+1Ch] +
mov eax [esp-0BCh+arg_E0] +
movzx eax byte ptr [eax+20h] +
jbe loc_441D19  +
test al 4 +
jnz loc_441D19  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_441FE0  +
mov ecx [esp-0BCh+arg_D8] +
mov [esi+1Ch] ecx +
test al 1 +
jnz loc_441D3F  +
mov eax [esi+4] +
mov edx eax +
or edx 4 +
mov [esi+4] edx +
mov edx [ebp+8] +
test dl 4 +
jz loc_441D36  +
or eax 5 +
mov [esi+4] eax +
and edx 1 +
jz loc_441D3F  +
or dword ptr [esi+4] 2 +
mov [esp-0BCh+arg_E4] edi +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_D0] 1 +
mov ecx [eax+24h] +
cmp [esp-0BCh+arg_D0] ecx +
jnb loc_442036  +
mov eax [esp-0BCh+arg_F0] +
mov ecx [esp-0BCh+arg_D0] +
mov ebx [eax+ecx*4] +
mov eax 1 +
mov ecx [ebx+40h] +
mov ebp [ebx+8Ch] +
shl eax cl +
cmp edi 7 +
mov [esp-0BCh+arg_D8] eax +
setz dl  +
jz loc_441D85  +
cmp edi 1 +
jnz loc_441DEF  +
mov eax [ebp+4] +
cmp eax 8 +
jz loc_441F23  +
mov edi [esi+18h] +
mov edx [esi+10h] +
mov ecx [ebx+20h] +
mov [esp-0BCh+arg_E4] edi +
mov [esp-0BCh+arg_F4] edx +
add edx edi +
mov edi ecx +
sub edi edx +
jz loc_441DBC  +
cmp [esp-0BCh+arg_F4] edx +
ja loc_441FF6  +
cmp edx ecx +
ja loc_441FF6  +
mov edx [esp-0BCh+arg_E4] +
add edx edi +
cmp eax 8 +
mov [esi+18h] edx +
jz loc_441DE9  +
mov eax [esi+14h] +
lea ecx [edi+eax] +
cmp edx ecx +
mov [esp-0BCh+arg_E4] eax +
ja loc_441F45  +
xor edx edx +
add [esp-0BCh+arg_E8] edi +
adc [esp-0BCh+arg_EC] edx +
mov [esi+14h] ecx +
mov edi [esi] +
mov [esp-0BCh+arg_E4] edi +
cmp edi 4 +
jnz loc_441CD0  +
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_441CD9  +
mov eax [esp-0BCh+arg_D0] +
test eax eax +
jnz loc_4421D0  +
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
mov ecx [ebp+18h] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax [esp-0BCh+arg_E0] +
mov [ebp+14h] edx +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
movzx eax byte ptr [eax+20h] +
mov [esi+14h] ecx +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 1 +
jmp loc_441D19  +
***
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
cmp dword ptr [ebp+4] 8 +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov [ebp+14h] edx +
jz loc_441FD5  +
mov ecx [ebp+18h] +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
jmp loc_441CE6  +
mov ecx [ebp+8] +
test ch 4 +
mov eax ecx +
jz loc_441F00  +
mov edx [ebp+14h] +
or edx [ebp+10h] +
jnz loc_441F00  +
mov eax [ebp+0Ch] +
xor edx edx +
mov [esp-0BCh+arg_F4] eax +
xor eax eax +
cmp [esp-0BCh+arg_D8] 0 +
jz loc_441EE8  +
mov edi [esp-0BCh+arg_D8] +
xor edx edx +
mov eax [esp-0BCh+arg_F4] +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] edi +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
mov [esp-0BCh+arg_110] ecx +
call sub_48C100  +
mov edi [esi] +
mov ecx [esp-0BCh+arg_110] +
add eax [esp-0BCh+arg_E8] +
adc edx [esp-0BCh+arg_EC] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax ecx +
mov [ebp+14h] edx +
nop   +
test al 2 +
jz loc_441CF2  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_441F18  +
test ah 4 +
jnz loc_441CF2  +
mov eax [ebp+18h] +
add [esi+18h] eax +
jmp loc_441CF2  +
mov ecx [ebp+8] +
test cl 2 +
jz loc_441DEF  +
and ch 4 +
jz loc_441D91  +
test dl dl +
jz loc_441DEF  +
jmp loc_441D91  +
mov eax [esp-0BCh+arg_E8] +
mov [esp-0BCh+arg_F4] edx +
mov edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_429F00  +
mov edx [esp-0BCh+arg_F4] +
test eax eax +
jnz loc_440E9E  +
mov edi edx +
sub edi [esp-0BCh+arg_E4] +
mov [esp-0BCh+arg_B8] edi +
call sub_42B590  +
test eax eax +
mov edx eax +
jz loc_440E9E  +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_F4] edx +
mov [esp-0BCh+arg_C0] eax +
call sub_429DA0  +
mov edx [esp-0BCh+arg_F4] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_E4] eax +
call free  +
mov eax [esp-0BCh+arg_E4] +
cmp edi eax +
jnz loc_440E9E  +
mov ecx [esi+14h] +
add ecx edi +
jmp loc_441DDC  +
mov eax [ebp+8] +
jmp loc_441F00  +
***
mov ecx [esp-0BCh+arg_178] +
test byte ptr [ecx+29h] 20h +
jnz loc_441D19  +
jmp loc_441D12  +
mov eax [esp-0BCh+arg_178] +
xor edi edi +
mov [esp-0BCh+arg_C8] edx +
mov [esp-0BCh+arg_E4] edx +
mov [esp-0BCh+arg_C4] ecx +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] ebx +
mov [esp-0BCh+arg_B8] offset aBSectionALmaLx +
call off_492AE8  +
mov edx [esp-0BCh+arg_E4] +
mov eax [esi+18h] +
mov [ebx+20h] edx +
mov [esp-0BCh+arg_E4] eax +
mov eax [ebp+4] +
jmp loc_441DBC  +
mov ebp esi +
mov eax [esp-0BCh+arg_F8] +
xor edx edx +
sub [esp-0BCh+arg_E8] eax +
sbb [esp-0BCh+arg_EC] edx +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_4423D3  +
mov eax [esp-0BCh+arg_E0] +
add ebp 20h +
add [esp-0BCh+arg_100] 1 +
mov eax [eax] +
test eax eax +
mov [esp-0BCh+arg_E0] eax +
jnz loc_441AC4  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_E8] +
mov edi [esp-0BCh+arg_EC] +
mov [edx+20h] esi +
mov [edx+24h] edi +
mov [esp-0BCh+arg_D8] esi +
mov [esp-0BCh+arg_DC] edi +
mov ecx [ebp+4] +
mov esi [ecx+1B0h] +
mov ecx [eax+214h] +
mov [esp-0BCh+arg_E0] esi +
mov esi [eax+40h] +
lea edi [esi+ecx*4] +
mov [esp-0BCh+arg_D0] esi +
add esi 4 +
cmp edi esi +
jbe loc_442996  +
mov [esp-0BCh+arg_178] ebp +
jmp loc_442192  +
cmp dword ptr [ebx+4] 8 +
jz loc_442973  +
test byte ptr [ebx+8] 2 +
jz loc_4427B0  +
mov edx [ebx+18h] +
test edx edx +
jz loc_44210B  +
test eax eax +
mov edx off_492AE8 +
jz loc_4432D0  +
mov eax [eax] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningAlloca +
mov [esp-0BCh+arg_BC] eax +
call edx  +
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_44290F  +
mov ebp [ebx+18h] +
test ebp ebp +
jz loc_44290F  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+10h] +
mov eax [ebx+0Ch] +
xor edx edx +
mov ebp eax +
xor eax eax +
test ecx ecx +
jz loc_44215F  +
xor edx edx +
mov eax ebp +
sub eax [esp-0BCh+arg_D8] +
sbb edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_48C100  +
add eax [esp-0BCh+arg_D8] +
adc edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ebx +
call sub_43FF50  +
mov [esp-0BCh+arg_D8] eax +
mov [esp-0BCh+arg_DC] edx +
add esi 4 +
cmp edi esi +
jbe loc_442983  +
mov ebx [esi] +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_4420D2  +
mov ecx [eax+54h] +
mov edx [eax+50h] +
mov ebp ecx +
or ebp edx +
jz loc_4420C8  +
xor ecx [ebx+14h] +
xor edx [ebx+10h] +
or ecx edx +
jz loc_442187  +
mov [esp-0BCh+arg_BC] 14BEh +
mov [esp-0BCh+arg_B8] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_442187  +
***
mov dword ptr [ebx+50h] 0 +
mov dword ptr [ebx+54h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_441D43  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+0Ch] +
mov [ebp+10h] eax +
jmp loc_441B6B  +
mov eax [esp-0BCh+arg_E0] +
mov dword ptr [ebp+0] 4 +
mov eax [eax+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
mov edi [esp-0BCh+arg_E0] +
mov ecx [edi+28h] +
mov edx [edi+10h] +
mov eax [ecx+1Ch] +
sub eax edx +
mov [ebp+0Ch] eax +
movzx eax byte ptr [edi+20h] +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_4421F1  +
mov eax [ecx+20h] +
sub eax edx +
mov [ebp+10h] eax +
jmp loc_441B6B  +
test ebx ebx +
jnz loc_442840  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
mov [ebp+1Ch] eax +
jmp loc_441B8B  +
***
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_441CA2  +
test byte ptr [esp-0BCh+arg_D8] 30h +
jnz loc_4428E0  +
mov eax [esp-0BCh+arg_E8] +
mov [ebp+8] eax +
jmp loc_441CA2  +
***
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_441B76  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_4422C3  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_11C] +
mov [ebp+1Ch] eax +
test ebx ebx +
jz loc_4423B8  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_442F6B  +
mov ecx [ebp+1Ch] +
mov esi [esp-0BCh+arg_E0] +
xor eax eax +
mov edx [esi+eax*4+28h] +
test dword ptr [edx+14h] 102h +
jnz loc_442300  +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 8 +
add eax 1 +
cmp eax ebx +
jnz loc_4422E6  +
mov esi [esp-0BCh+arg_E0] +
mov eax [esi+28h] +
mov eax [eax+8Ch] +
cmp dword ptr [eax+4] 8 +
jnz loc_442F9F  +
xor eax eax +
jmp loc_442336  +
mov edx [esi+eax*4+28h] +
mov edx [edx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_442F9F  +
add eax 1 +
cmp eax ebx +
jnz loc_442322  +
mov esi 1 +
test ecx ecx +
mov eax [ebp+0Ch] +
jz loc_442B02  +
xor edx edx +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_48C100  +
mov edi edx +
mov edx eax +
mov ecx edi +
mov [esp-0BCh+arg_F8] eax +
add [esp-0BCh+arg_E8] edx +
adc [esp-0BCh+arg_EC] ecx +
test esi esi +
jz loc_4423BA  +
mov esi 1 +
jmp loc_441BB6  +
***
test ebx ebx +
jz loc_44325C  +
mov ecx [esp-0BCh+arg_E0] +
xor eax eax +
nop   +
mov edx [ecx+eax*4+28h] +
add eax 1 +
cmp eax ebx +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 7 +
jnz loc_4423A0  +
xor esi esi +
mov [esp-0BCh+arg_F8] 0 +
jmp loc_441BB6  +
mov eax [eax+4] +
mov [esp-0BCh+arg_D0] eax +
jmp loc_441B2B  +
mov eax [esp+0C0h] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_442051  +
cmp ecx 1 +
jbe loc_442902  +
mov eax 1 +
mov esi [esp+28h] +
jmp loc_44240B  +
***
add eax 1 +
cmp eax ecx +
jz loc_442902  +
mov ebx [esi+eax*4+24h] +
mov edx [esi+eax*4+28h] +
mov edi [ebx+1Ch] +
cmp [edx+1Ch] edi +
jnz loc_442400  +
mov edx [edx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_44242D  +
cmp dword ptr [edx+4] 8 +
jz loc_442400  +
mov edi [edx+18h] +
test edi edi +
jz loc_442400  +
mov edx [ebx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_442446  +
cmp dword ptr [edx+4] 8 +
jz loc_442400  +
mov ebx [edx+18h] +
test ebx ebx +
jz loc_442400  +
mov dword ptr [esp+58h] 0 +
***
mov esi [esp-0BCh+arg_E0] +
mov edx [esi+24h] +
test edx edx +
jz loc_442051  +
xor edi edi +
mov [esp-0BCh+arg_D8] ebp +
mov ebp edi +
jmp loc_442576  +
mov ecx [esp-0BCh+arg_E4] +
lea edx [ecx-6] +
cmp edx 1 +
jbe loc_4425C7  +
and eax 2 +
mov [esp-0BCh+arg_F4] eax +
jnz loc_4424AC  +
mov eax [esp-0BCh+arg_E4] +
sub eax 1 +
cmp eax 1 +
jbe loc_442716  +
mov eax [esp-0BCh+arg_E4] +
sub eax 6474E550h +
cmp eax 2 +
jbe loc_442716  +
mov eax [edi+4] +
cmp eax 8 +
mov [esp-0BCh+arg_F8] eax +
jz loc_442500  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov ecx [ecx+8] +
cmp ecx eax +
ja loc_442716  +
xor ebx ebx +
sub eax ecx +
mov ecx eax +
mov eax [edi+18h] +
sbb edx ebx +
mov ebx edx +
xor edx edx +
add ecx eax +
mov eax [esp-0BCh+arg_D8] +
adc ebx edx +
cmp ebx 0 +
mov eax [eax+14h] +
jg loc_442716  +
jl loc_442500  +
cmp ecx eax +
ja loc_442716  +
lea esi [esi+0] +
mov eax [esp-0BCh+arg_110] +
test eax eax +
jz loc_442550  +
mov eax [esp-0BCh+arg_F4] +
test eax eax +
jz loc_442550  +
mov eax [esp-0BCh+arg_D8] +
mov edx [edi+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_442716  +
sub edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_442537  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_443D22  +
mov eax [edi+18h] +
mov ecx [esp-0BCh+arg_D8] +
add eax edx +
cmp eax [ecx+18h] +
ja loc_442716  +
lea esi [esi+0] +
cmp [esp-0BCh+arg_E4] 2 +
jz loc_44268F  +
nop   +
lea esi [esi+0] +
add ebp 1 +
cmp ebp [esi+24h] +
jnb loc_4428C4  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax] +
mov [esp-0BCh+arg_E4] eax +
mov eax [esi+ebp*4+28h] +
mov edi [eax+8Ch] +
mov [esp-0BCh+arg_D0] eax +
mov eax [edi+8] +
mov ecx eax +
and ecx 400h +
mov [esp-0BCh+arg_F0] ecx +
jz loc_442471  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_442481  +
cmp [esp-0BCh+arg_E4] 6474E552h +
jz loc_442481  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_442481  +
cmp dword ptr [edi+4] 8 +
jz loc_442727  +
mov eax [esp-0BCh+arg_100] +
mov [esp-0BCh+arg_B8] offset aBSectionACanTB +
mov [esp-0BCh+arg_C4] eax +
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_BC] eax +
call off_492AE8  +
mov edi [esi+4] +
mov eax edi +
call near ptr dword_43B060  +
test eax eax +
mov ebx eax +
jz loc_442850  +
mov eax ds:_iob +
add eax 20h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
mov eax ds:_iob +
mov [esp-0BCh+arg_C0] ebx +
xor ebx ebx +
mov [esp-0BCh+arg_BC] offset aS_21 +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
mov eax [esi+24h] +
test eax eax +
jz loc_442662  +
mov eax [esi+ebx*4+28h] +
add ebx 1 +
mov eax [eax] +
mov [esp-0BCh+arg_BC] offset aS_20 +
mov [esp-0BCh+arg_C0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
cmp ebx [esi+24h] +
jb loc_442638  +
mov eax ds:_iob +
mov [esp-0BCh+arg_B8] 0Ah +
add eax 40h +
mov [esp-0BCh+arg_BC] eax +
call putc  +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
jmp loc_442560  +
mov eax [edi+18h] +
test eax eax +
jnz loc_442560  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax+18h] +
test eax eax +
mov [esp-0BCh+arg_124] eax +
jz loc_442560  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_4426F1  +
mov eax [edi+10h] +
mov ecx [esp-0BCh+arg_D8] +
mov edx [edi+14h] +
mov [esp-0BCh+arg_F8] eax +
mov eax [ecx+8] +
cmp eax [esp-0BCh+arg_F8] +
mov [esp-0BCh+arg_FC] edx +
jnb loc_442716  +
mov ecx [esp-0BCh+arg_F8] +
xor edx edx +
mov ebx [esp-0BCh+arg_FC] +
sub ecx eax +
mov eax ecx +
mov ecx [esp-0BCh+arg_D8] +
sbb ebx edx +
cmp ebx 0 +
mov ecx [ecx+14h] +
jg loc_442716  +
jl loc_4426F1  +
cmp eax ecx +
jnb loc_442716  +
cmp [esp-0BCh+arg_F4] 0 +
jz loc_442560  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+0Ch] +
mov edx [ecx+0Ch] +
cmp eax edx +
jbe loc_442716  +
sub eax edx +
cmp [esp-0BCh+arg_124] eax +
ja loc_442560  +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jnz loc_4425BD  +
jmp loc_4425C7  +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_442560  +
jmp loc_4425C7  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
test ebx ebx +
mov [ebp+18h] edx +
jnz loc_441C7E  +
jmp loc_441C8C  +
cmp ebx 1 +
jbe loc_4423B8  +
mov eax [esp-0BCh+arg_E0] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
mov eax [eax+28h] +
mov esi [eax] +
cmps   +
jz loc_4423B8  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBTheFirstSecti +
mov [esp-0BCh+arg_BC] ebp +
call off_492AE8  +
mov [esp-0BCh+arg_B8] 11h +
call sub_420C50  +
jmp loc_440E9E  +
***
mov edx [ebx+4] +
cmp edx 4 +
jz loc_4427C1  +
cmp edx 9 +
jnz loc_44293B  +
test eax eax +
jz loc_4428CD  +
test byte ptr [eax+17h] 8 +
jnz loc_4428CD  +
mov eax [esp-0BCh+arg_178] +
mov ecx [esp-0BCh+arg_D0] +
mov eax [eax+0A0h] +
mov edx [eax+90Ch] +
cmp ebx [ecx+edx*4] +
jz loc_4428CD  +
mov edx [eax+208h] +
test edx edx +
jz loc_442809  +
mov edx [edx+38h] +
cmp ebx [ecx+edx*4] +
jz loc_4428CD  +
mov eax [eax+934h] +
mov ecx [esp-0BCh+arg_D0] +
mov edx [eax+30h] +
cmp ebx [ecx+edx*4] +
jz loc_4428CD  +
mov eax [eax+2Ch] +
cmp ebx [ecx+eax*4] +
jz loc_4428CD  +
mov [esp-0BCh+arg_C4] 1 +
mov eax [esp-0BCh+arg_D8] +
mov edx [esp-0BCh+arg_DC] +
jmp loc_44216F  +
mov dword ptr [ebp+1Ch] 0 +
jmp loc_441B8B  +
***
lea eax [edi-70000000h] +
cmp eax 0FFFFFFFh +
jbe loc_442FCE  +
lea eax [edi-60000000h] +
cmp eax 0FFFFFFFh +
ja loc_442A47  +
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoos7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_442603  +
mov ebp [esp-0BCh+arg_178] +
mov esi [esp-0BCh+arg_E0] +
mov [esi+20h] eax +
mov [esi+24h] edx +
mov eax [esp-0BCh+arg_118] +
test eax eax +
jnz loc_442E9E  +
or byte ptr [ebp+2Bh] 10h +
mov eax 1 +
jmp loc_440EA0  +
mov ebp [esp-0BCh+arg_D8] +
jmp loc_442051  +
mov dword ptr [ebx+10h] 0FFFFFFFFh +
mov dword ptr [ebx+14h] 0FFFFFFFFh +
jmp loc_442187  +
mov edi [ebp+14h] +
mov eax [ebp+8] +
mov ecx [esp-0BCh+arg_E8] +
add eax edi +
sub ecx eax +
test esi esi +
mov eax ecx +
jnz loc_4428FA  +
lea ecx [edi+ecx] +
mov [ebp+14h] ecx +
add [ebp+18h] eax +
jmp loc_441CA2  +
mov [esp-0BCh+arg_110] 1 +
jmp loc_442455  +
mov ecx [ebx+24h] +
jmp loc_44212E  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add [ebp+14h] eax +
movzx eax byte ptr [edx+1] +
imul eax edi +
add [ebp+18h] eax +
jmp loc_441C8C  +
***
mov esi ebx +
jmp loc_441145  +
***
test eax eax +
jnz loc_4427C9  +
jmp loc_4427D3  +
mov dword ptr [esi+14h] 0 +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_108] 0 +
mov dword ptr [eax+2Ch] 0 +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
jmp loc_4419AA  +
mov ebp [ebx+30h] +
test ebp ebp +
jnz loc_4420D2  +
jmp loc_4421AF  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov edi [esp-0BCh+arg_E0] +
mov eax [eax+44h] +
mov ecx [edi+174h] +
mov [esp-0BCh+arg_E4] eax +
movzx esi byte ptr [ecx] +
mov [esp-0BCh+arg_F8] esi +
add esi [edi+10h] +
mov edi [edx] +
mov [esp-0BCh+arg_F0] esi +
test edi edi +
jz loc_443CF9  +
mov edx edi +
xor esi esi +
mov [esp-0BCh+arg_100] 0 +
mov [esp-0BCh+arg_F4] 0 +
mov [esp-0BCh+arg_E8] 0 +
mov [esp-0BCh+arg_E0] 0 +
mov [esp-0BCh+arg_D0] edi +
jmp loc_4429FD  +
***
mov edx [edx] +
add eax 20h +
test edx edx +
jz loc_442B13  +
add esi 1 +
cmp dword ptr [eax] 1 +
jnz loc_4429F0  +
movzx ecx byte ptr [edx+20h] +
mov ebx ecx +
and ebx 10h +
jz loc_442A1E  +
mov edi [eax+0Ch] +
mov [esp-0BCh+arg_E8] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_F4] edi +
and ecx 20h +
jz loc_4429F0  +
mov edi [eax+0Ch] +
test bl bl +
mov [esp-0BCh+arg_F0] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_100] edi +
jz loc_4429F0  +
mov ecx [esp-0BCh+arg_F8] +
add [esp-0BCh+arg_F0] ecx +
add [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_E0] edx +
jmp loc_4429F0  +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C4] edi +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C0] offset a8_8x +
mov [esp-0BCh+arg_BC] 20h +
mov [esp-0BCh+arg_B8] eax +
call sub_43C490  +
jmp loc_442603  +
movzx ecx byte ptr [ecx] +
xor ebx ebx +
mov [edx+24h] ebx +
mov [esp-0BCh+arg_DC] ebx +
mov [edx+20h] ecx +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_442094  +
***
mov eax [ebp+7Ch] +
mov [esp+0ACh+var_94] eax +
test eax eax +
mov eax [ebp+28h] +
mov [esp+0ACh+var_64] eax +
jnz loc_443017  +
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [esp+0ACh+var_64] +
and eax 43h +
cmp eax 1 +
jz loc_443024  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
lea eax [esp+74h] +
mov [esp-0BCh+arg_C0] eax +
mov [esp-0BCh+arg_BC] offset sub_43B5B0 +
mov [esp-0BCh+arg_B8] ebp +
call sub_41ED30  +
mov eax [esp+74h] +
test eax eax +
jz loc_4416C3  +
jmp loc_440E9E  +
mov dword ptr [esp+40h] 0 +
xor edx edx +
xor ecx ecx +
jmp loc_442379  +
mov ecx [esp-0BCh+arg_17C] +
mov ebx [esp-0BCh+arg_E0] +
mov edi [esp-0BCh+arg_D0] +
test ecx ecx +
setnz cl  +
test ebx ebx +
setnz al  +
mov ebx edi +
and al cl +
mov byte ptr [esp-0BCh+arg_D0] cl +
mov edi eax +
jnz loc_4431A8  +
mov eax [esp-0BCh+arg_E4] +
shl esi 5 +
mov edi [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_178] ebp +
add esi eax +
mov [esp-0BCh+arg_E0] esi +
mov esi eax +
lea esi [esi+0] +
mov edx [esi] +
cmp edx 6474E552h +
jz loc_442CB5  +
cmp edx 6474E551h +
jz loc_442DB0  +
mov eax [ebx+24h] +
test eax eax +
jz loc_442D68  +
cmp edx 1 +
jz loc_442BD0  +
cmp edx 4 +
jz loc_442E4C  +
test byte ptr [ebx+20h] 30h +
jnz loc_443C56  +
mov edx [ebx+28h] +
mov dword ptr [esi+14h] 0 +
mov ebp [edx+50h] +
mov [esi+8] ebp +
lea esi [esi+0] +
mov ecx [ebx+eax*4+24h] +
mov edx [ecx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_442E3C  +
sub eax 1 +
jnz loc_442BB0  +
lea esi [esi+0] +
mov ebx [ebx] +
add esi 20h +
test ebx ebx +
jnz loc_442B60  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_D8] +
mov edi [esp-0BCh+arg_DC] +
mov [edx+20h] esi +
mov esi [esp-0BCh+arg_104] +
mov [edx+24h] edi +
mov edx [esi+0B0h] +
test edx edx +
jz loc_442C26  +
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call edx  +
test eax eax +
jz loc_440E9E  +
mov eax [ebp+0A0h] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_442C43  +
mov esi [esp-0BCh+arg_17C] +
movzx edx byte ptr [esi] +
and edx 3 +
cmp dl 1 +
jz loc_443C73  +
mov eax [eax+934h] +
mov esi [eax+1Ch] +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+1] +
mov [esp-0BCh+arg_C4] 0 +
movzx eax byte ptr [eax] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_429F00  +
test eax eax +
jnz loc_440E9E  +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov eax [eax+174h] +
mov ecx [eax+10h] +
mov eax [esp-0BCh+arg_114] +
mov edi [eax+44h] +
mov eax esi +
div  ebx +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_C0] eax +
call ecx  +
test eax eax +
jnz loc_440E9E  +
jmp loc_4428AA  +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_442E68  +
mov eax [esp-0BCh+arg_178] +
mov ebp [esp-0BCh+arg_E4] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jnz loc_442CEF  +
jmp loc_442D90  +
mov eax [eax] +
add ebp 20h +
test eax eax +
jz loc_442D90  +
cmp dword ptr [ebp+0] 1 +
jnz loc_442CE2  +
mov ecx [edi+74h] +
cmp [ebp+0Ch] ecx +
jnb loc_442CE2  +
mov edx [eax+24h] +
test edx edx +
jz loc_442CE2  +
mov edx [eax+28h] +
mov ecx [edi+70h] +
cmp [edx+1Ch] ecx +
jb loc_442CE2  +
nop   +
cmp ebp [esp-0BCh+arg_E0] +
jnb loc_442DE8  +
mov eax [ebp+0Ch] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
mov [esi+0Ch] eax +
mov eax [ebp+10h] +
mov [esi+10h] eax +
mov eax [ebp+8] +
mov [esi+8] eax +
jz loc_442FA6  +
mov eax [edi+74h] +
sub eax [ebp+0Ch] +
movzx edx byte ptr [ebx+20h] +
mov [esi+14h] eax +
test dl 4 +
mov [esi+18h] eax +
jnz loc_442D53  +
mov dword ptr [esi+1Ch] 1 +
and edx 1 +
jnz loc_442BD0  +
mov dword ptr [esi+4] 4 +
jmp loc_442BD0  +
movzx eax byte ptr [ebx+20h] +
test al 10h +
jz loc_442DC5  +
mov ecx [esp-0BCh+arg_E8] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_442BD0  +
mov eax [esp-0BCh+arg_F4] +
mov [esi+10h] eax +
jmp loc_442BD0  +
***
mov [esp-0BCh+arg_BC] 1546h +
mov [esp-0BCh+arg_B8] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_442D10  +
***
test byte ptr [ebx+20h] 8 +
jz loc_442BD0  +
mov eax [ebx+18h] +
mov [esi+18h] eax +
jmp loc_442BD0  +
test al 20h +
jz loc_442BD0  +
mov ecx [esp-0BCh+arg_F0] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_442BD0  +
mov eax [esp-0BCh+arg_100] +
mov [esi+10h] eax +
jmp loc_442BD0  +
test esi 1 +
mov edx esi +
mov ecx 20h +
jnz loc_4432AE  +
test dl 2 +
jnz loc_44329D  +
mov ebp ecx +
xor eax eax +
and ebp 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax ebp +
jb loc_442E0B  +
add edx eax +
test cl 2 +
jz loc_442E29  +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
and ecx 1 +
jz loc_442E31  +
mov byte ptr [edx] 0 +
mov dword ptr [esi] 0 +
jmp loc_442BD0  +
mov eax [ecx+50h] +
add eax [edx+18h] +
sub eax ebp +
mov [esi+14h] eax +
jmp loc_442BD0  +
mov ecx [esp-0BCh+arg_178] +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 3 +
jnz loc_442B93  +
jmp loc_442BD0  +
mov eax [esp-0BCh+arg_E4] +
mov ecx [esp-0BCh+arg_E0] +
mov ebp eax +
cmp eax ecx +
jnb loc_442DE8  +
mov eax [esp-0BCh+arg_E0] +
jmp loc_442E8B  +
add ebp 20h +
cmp ebp eax +
jnb loc_442DE8  +
cmp dword ptr [ebp+0] 1 +
jnz loc_442E80  +
mov ecx [esi+10h] +
cmp [ebp+10h] ecx +
jnz loc_442E80  +
jmp loc_442D10  +
mov ecx [ebp+0A0h] +
mov eax [ecx+934h] +
add ecx 48h +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp-0BCh+arg_B8] ecx +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_BC] eax +
call sub_43FF50  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+208h] +
test ecx ecx +
jz loc_442EE6  +
mov esi [ecx+18h] +
test esi esi +
jnz loc_44327A  +
mov [esp-0BCh+arg_BC] eax +
lea eax [ebx+0B8h] +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_43FF50  +
mov ecx [ebp+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [ebx+0C8h] +
mov [ecx+24h] edx +
mov edx [ebx+0CCh] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
call sub_429F00  +
test eax eax +
jnz loc_440E9E  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_4671C0  +
test eax eax +
jz loc_440E9E  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_466E20  +
jmp loc_4428B6  +
mov eax [esp-0BCh+arg_E0] +
xor ecx ecx +
lea esi [eax+28h] +
xor eax eax +
mov edx [esi+eax*4] +
mov edx [edx+40h] +
cmp ecx edx +
cmovb ecx edx +
add eax 1 +
cmp eax ebx +
jnz loc_442F76  +
mov esi [esp-0BCh+arg_11C] +
mov eax 1 +
shl eax cl +
cmp eax esi +
cmovb eax esi +
mov ecx eax +
jmp loc_4422E0  +
xor esi esi +
jmp loc_442342  +
movzx edx byte ptr [ebx+20h] +
test dl 8 +
jz loc_443D3F  +
mov eax [ebx+18h] +
mov [esi+14h] eax +
jmp loc_442D44  +
***
mov [ebp+68h] ecx +
jmp loc_441872  +
mov [ebp+64h] edx +
jmp loc_441867  +
***
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoproc7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_442603  +
movzx esi byte ptr [ecx+1] +
imul esi [esp-0BCh+arg_108] +
mov [edx+1Ch] esi +
jmp loc_4419E0  +
xor eax eax +
xor edx edx +
mov [esp-0BCh+arg_120] 0 +
jmp loc_441A89  +
***
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [ebp+64h] +
xor edx edx +
mov esi [ebp+78h] +
test eax eax +
jz loc_44303F  +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
cmp edx ecx +
cmovb edx ecx +
test eax eax +
jnz loc_443030  +
lea ebx [edx+1] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] ebx +
mov [esp+0ACh+var_AC] ebp +
call sub_425A20  +
test eax eax +
mov edi eax +
mov [esp+0ACh+var_74] eax +
jz loc_440E9E  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov [eax+8] edi +
mov [eax+28h] ebx +
mov eax [esp+0ACh+var_94] +
test eax eax +
jz loc_443326  +
lea eax [esi+eax*4] +
mov edi esi +
mov [esp+0ACh+var_84] eax +
mov ebx [edi] +
test byte ptr [ebx+0Dh] 1 +
jnz loc_4430F0  +
add edi 4 +
cmp edi [esp+0ACh+var_84] +
jnz loc_44308B  +
xor ebx ebx +
xor edi edi +
mov eax ebx +
mov ebx esi +
mov [esp+0ACh+var_8C] 0 +
mov esi eax +
jmp loc_4430C0  +
add esi 1 +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_443D66  +
mov edx [ebx+edi*4] +
mov eax ebp +
call loc_43B500  +
test eax eax +
jnz loc_4430B0  +
mov edx [ebx+edi*4] +
test byte ptr [edx+0Dh] 1 +
jz loc_4430E2  +
mov eax ebp +
call sub_43B550  +
test eax eax +
jnz loc_4430B3  +
add [esp+0ACh+var_8C] 1 +
jmp loc_4430B3  +
***
mov eax [ebx+8] +
test eax eax +
jnz loc_443093  +
mov edx ebx +
mov eax ebp +
call sub_43B550  +
test eax eax +
jnz loc_443093  +
mov eax [ebx+10h] +
cmp eax offset off_492990 +
jz loc_443093  +
cmp ebp [eax+94h] +
jz loc_443119  +
mov eax [eax+3Ch] +
mov eax [eax+8] +
mov ecx [esp+0ACh+var_74] +
mov [ecx+eax*4] ebx +
jmp loc_443093  +
***
mov eax [ebp+0] +
mov [esp-0BCh+arg_E4] eax +
jmp loc_442038  +
mov [esp-0BCh+arg_BC] 12F7h +
mov [esp-0BCh+arg_B8] offset a____Binutil_18 +
call sub_420BA0  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov edx [eax+934h] +
mov ecx [esi+174h] +
jmp loc_4419E0  +
mov [esp-0BCh+arg_BC] 1309h +
mov [esp-0BCh+arg_B8] offset a____Binutil_18 +
call sub_420BA0  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov eax [eax+934h] +
mov edx [esi+174h] +
mov eax [eax+1Ch] +
movzx ecx byte ptr [edx+1] +
jmp loc_441A03  +
***
mov edi 2 +
mov esi 1 +
jmp loc_441049  +
***
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_C8] 1 +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] offset a__ehdr_start +
mov eax [eax+1Ch] +
mov [esp-0BCh+arg_B8] eax +
call sub_42D940  +
test eax eax +
mov ecx eax +
jz loc_44323B  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_4431EC  +
cmp al 2 +
ja loc_44323B  +
mov eax [esp-0BCh+arg_E0] +
mov edx [eax+24h] +
test edx edx +
jnz loc_443CDC  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
jmp loc_44321B  +
***
mov ebx [eax+24h] +
test ebx ebx +
jnz loc_443CDC  +
mov eax [eax] +
test eax eax +
jnz loc_443210  +
mov eax [esp-0BCh+arg_E8] +
mov dword ptr [ecx+14h] offset off_492990 +
mov [ecx+18h] eax +
or byte ptr [ecx+33h] 2 +
and byte ptr [ecx+34h] 0FEh +
mov byte ptr [ecx+0Ch] 3 +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ebx [edx] +
test ebx ebx +
jz loc_443D5B  +
mov eax edi +
mov byte ptr [esp-0BCh+arg_D0] al +
jmp loc_442B3C  +
mov esi ebx +
mov [esp-0BCh+arg_F8] ebx +
jmp loc_441BB6  +
mov esi [esp-0BCh+arg_114] +
mov esi [esi+934h] +
mov [esp-0BCh+arg_E0] esi +
jmp loc_4428A0  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_43FF50  +
mov ebx [ebp+0A0h] +
jmp loc_442EE6  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_442E04  +
mov byte ptr [esi] 0 +
lea edx [esi+1] +
mov cl 1Fh +
jmp loc_442DFB  +
***
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] eax +
call sub_425AA0  +
jmp loc_440E9E  +
***
mov eax offset aUnknown_5 +
jmp loc_4420F3  +
mov [esp-0BCh+arg_BC] 0 +
mov [esp-0BCh+arg_B8] ebp +
call sub_440050  +
test eax eax +
jz loc_440E9E  +
mov esi [ebp+0A0h] +
jmp loc_44195B  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBNotEnoughRoom +
mov [esp-0BCh+arg_BC] ebp +
call off_492AE8  +
mov [esp-0BCh+arg_B8] 11h +
call sub_420C50  +
jmp loc_440E9E  +
***
mov [esp+0ACh+var_8C] 0 +
xor ebx ebx +
mov edi [ebp+64h] +
test edi edi +
jz loc_44335C  +
mov [esp+0ACh+var_84] esi +
mov esi ebx +
mov ebx [esp+0ACh+var_74] +
mov eax [edi+8] +
mov eax [ebx+eax*4] +
test eax eax +
jz loc_4439AC  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_443341  +
mov ebx esi +
mov esi [esp+0ACh+var_84] +
mov eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_AC] ebp +
add eax ebx +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_70] eax +
call sub_4258D0  +
test eax eax +
mov [esp+0ACh+var_80] eax +
jz loc_440E9E  +
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_7C] 0 +
test eax eax +
jz loc_443BC8  +
xor eax eax +
xor edi edi +
mov [esp+0ACh+var_84] esi +
mov esi eax +
jmp loc_4433C5  +
mov eax [esp+0ACh+var_8C] +
add eax esi +
add esi 1 +
lea edx [eax+1] +
mov ecx [esp+0ACh+var_80] +
mov [ecx+eax*4] ebx +
mov [ebx+14h] edx +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_4433FD  +
mov eax [esp+0ACh+var_84] +
mov ebx [eax+edi*4] +
mov eax ebp +
mov edx ebx +
call loc_43B500  +
test eax eax +
jnz loc_4433A6  +
test byte ptr [ebx+0Dh] 1 +
jz loc_4433F0  +
mov edx ebx +
mov eax ebp +
call sub_43B550  +
test eax eax +
jnz loc_4433BC  +
lea esi [esi+0] +
mov eax [esp+0ACh+var_7C] +
lea edx [eax+1] +
mov [esp+0ACh+var_7C] edx +
jmp loc_4433B2  +
mov [esp+18h] esi +
mov ebx [ebp+64h] +
mov esi [esp+38h] +
test ebx ebx +
jz loc_443427  +
lea esi [esi+0] +
mov edx [ebx+8] +
lea ecx [esi+edx*4] +
mov eax [ecx] +
test eax eax +
jz loc_4439CB  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_443410  +
mov eax [esp+3Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+2Ch] +
mov [esp+4] eax +
call sub_4238F0  +
call sub_466DA0  +
test eax eax +
mov [esp+54h] eax +
jz loc_440E9E  +
mov eax [ebp+4] +
mov esi [ebp+7Ch] +
mov eax [eax+1B0h] +
mov edi esi +
mov [esp+5Ch] esi +
mov esi [ebp+0A0h] +
add edi 1 +
mov [esp+40h] edi +
mov [esp+3Ch] eax +
mov eax [eax+174h] +
mov dword ptr [esi+4Ch] 2 +
mov [esp+68h] esi +
movzx edx byte ptr [eax+5] +
mov [esi+70h] edx +
imul edx edi +
mov [esi+60h] edx +
mov edx [esp+20h] +
add edx 1 +
mov [esi+68h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [esi+0BCh] 3 +
shl eax cl +
mov [esi+6Ch] eax +
mov eax edi +
shl eax 5 +
lea esi ds:0[edi*4] +
sub eax esi +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov [esp+64h] eax +
jz loc_443D11  +
mov eax [esp+3Ch] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
call sub_4258D0  +
test eax eax +
mov [esp+60h] eax +
jz loc_443BAB  +
mov eax [esp+68h] +
mov edi [esp+60h] +
mov [eax+78h] edi +
mov eax [ebp+0A0h] +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_443528  +
mov edi [ebx] +
test edi edi +
jnz loc_443BD5  +
mov eax [esp+64h] +
mov dword ptr [esp+4Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
mov eax [esp+3Ch] +
mov dword ptr [esp+50h] 0 +
mov eax [eax+44h] +
test eax eax +
jz loc_443595  +
mov [esp] ebp +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+50h] eax +
mov ecx [esp+5Ch] +
mov eax [ebp+78h] +
test ecx ecx +
jle loc_443AE5  +
mov edi eax +
mov eax [esp+64h] +
mov dword ptr [esp+28h] 1 +
mov [esp+0C0h] ebp +
lea esi [eax+1Ch] +
mov eax [esp+48h] +
and eax 42h +
mov [esp+58h] eax +
***
mov eax [edi] +
mov edx [esp-0BCh+arg_108] +
mov ecx [eax+8] +
test edx edx +
mov ebp [eax+0Ch] +
mov [esp-0BCh+arg_D0] ecx +
jnz loc_4435EF  +
mov edx ebp +
and edx 102h +
cmp edx 100h +
jz loc_4438EC  +
mov eax [eax+4] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
mov [esp-0BCh+arg_E8] eax +
jz loc_443BAB  +
mov eax [edi] +
mov edx [eax] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_4437F4  +
xor ebx ebx +
mov ecx ebp +
mov eax [eax+10h] +
and ecx 100h +
mov [esp-0BCh+arg_F0] ecx +
jnz loc_443810  +
test byte ptr [eax+15h] 10h +
jz loc_443810  +
test ebx ebx +
jz loc_443658  +
mov ecx [ebx+18h] +
test ecx ecx +
mov [esp-0BCh+arg_D8] ecx +
jnz loc_44366B  +
cmp [esp-0BCh+arg_D0] 0Fh +
mov [esp-0BCh+arg_D8] 10h +
jbe loc_443AA8  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_440BE0  +
mov ecx eax +
mov eax [edi] +
mov eax [eax+10h] +
test ebp 40000h +
mov edx 6 +
jnz loc_4436C5  +
test ebp 400000h +
mov dl 0Ah +
jnz loc_4436C5  +
test ebp 8 +
mov dl 2 +
jnz loc_4436C5  +
test ebp 10000h +
mov dl 1 +
jnz loc_4436C5  +
test ebp 80000h +
mov dl 8 +
jnz loc_4436C5  +
mov edx ebp +
shl edx 0Bh +
sar edx 1Fh +
and edx 9 +
test byte ptr [eax+15h] 4 +
mov eax 6 +
cmovnz edx eax +
test ebx ebx +
jz loc_4436F6  +
mov eax [esp-0BCh+arg_F4] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_4436F6  +
mov [esp-0BCh+arg_BC] edx +
lea edx [ebx+18h] +
mov [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_B8] edx +
call eax  +
mov ecx [esp-0BCh+arg_100] +
mov edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_443882  +
and ebp 2 +
cmp ebp 1 +
sbb eax eax +
and eax 0FFFFFFF0h +
add eax 13h +
test ebx ebx +
jz loc_4439A3  +
movzx edx byte ptr [ebx+25h] +
movzx ebx byte ptr [ebx+26h] +
mov ebp [esp-0BCh+arg_D8] +
mov [esi+0Ch] al +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_E0] 1 +
cmp [esp-0BCh+arg_104] 1 +
mov [esi] ebp +
mov ebp [esp-0BCh+arg_D0] +
mov [esi+14h] eax +
mov eax [esp-0BCh+arg_E4] +
mov [esi+0Dh] dl +
sbb [esp-0BCh+arg_E4] 0FFFFFFFFh +
add edi 4 +
add esi 1Ch +
mov [esi-18h] ebp +
mov ebp [esp-0BCh+arg_E8] +
mov [esi-4] eax +
mov eax [esp-0BCh+arg_E0] +
mov [esi-0Eh] bl +
mov [esi-0Ch] ecx +
mov [esi-14h] ebp +
cmp eax [esp-0BCh+arg_F8] +
jnz loc_4435C7  +
mov eax [esp-0BCh+arg_10C] +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_467290  +
mov ebx [esp-0BCh+arg_11C] +
xor esi esi +
mov edi [esp-0BCh+arg_104] +
jmp loc_4437D7  +
mov dword ptr [ebx+8] 0 +
mov eax [esp-0BCh+arg_F4] +
add esi 1 +
mov ecx [ebx+18h] +
mov eax [eax+174h] +
lea ecx [edi+ecx*4] +
mov edx [eax+24h] +
mov [esp-0BCh+arg_C4] ecx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
add eax [esp-0BCh+arg_118] +
mov [esp-0BCh+arg_BC] ebx +
add ebx 1Ch +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_C0] eax +
call edx  +
cmp [esp-0BCh+arg_114] esi +
jl loc_443AFC  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_443790  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_467120  +
mov [ebx+8] eax +
jmp loc_443797  +
mov ebx [edx+0A0h] +
test ebx ebx +
jz loc_443628  +
mov ebx eax +
jmp loc_44362A  +
***
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov edx [esp-0BCh+arg_178] +
mov edx [edx+0A0h] +
mov edx [edx+208h] +
test edx edx +
jz loc_443685  +
mov ecx [edx+38h] +
jmp loc_443685  +
***
xor ebx ebx +
xor edx edx +
jmp loc_443720  +
***
mov edx [edi+98h] +
mov eax ebp +
call loc_43B500  +
test eax eax +
jnz loc_443A87  +
add [esp+0ACh+var_8C] 1 +
jmp loc_44334F  +
***
mov edi [ebx+98h] +
mov eax ebp +
mov [ecx] edi +
mov edx edi +
call loc_43B500  +
test eax eax +
jnz loc_443A8F  +
mov edx [esp+30h] +
mov eax edx +
add eax 1 +
mov [esp+30h] eax +
mov ecx [esp+2Ch] +
mov [ecx+edx*4] edi +
mov [edi+14h] eax +
jmp loc_443420  +
***
mov [esp-0BCh+arg_D0] 0 +
jmp loc_443850  +
mov ecx [esp-0BCh+arg_D0] +
mov edx eax +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_443826  +
mov eax [edx] +
mov [esp-0BCh+arg_100] edx +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_41E710  +
mov edx [esp-0BCh+arg_100] +
test eax eax +
jz loc_443B79  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
mov ecx eax +
jnz loc_443878  +
mov [esp-0BCh+arg_BC] 1D04h +
mov [esp-0BCh+arg_B8] offset a____Binutil_18 +
mov [esp-0BCh+arg_100] eax +
call sub_420BA0  +
mov eax [edi] +
mov ecx [esp-0BCh+arg_100] +
mov eax [eax+10h] +
jmp loc_443685  +
***
add esi 1 +
jmp loc_44334F  +
***
mov ecx [esp+18h] +
mov edx [esp+20h] +
add edx ecx +
add ecx 1 +
lea eax [edx+1] +
mov [esp+18h] ecx +
jmp loc_4439F1  +
***
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_B8] eax +
call sub_42BE10  +
mov edx 1 +
mov ecx eax +
mov eax [edi] +
shl edx cl +
mov [esp-0BCh+arg_D8] edx +
mov eax [eax+10h] +
jmp loc_44366B  +
and ebp 80h +
cmp ebp 1 +
sbb eax eax +
and edx 0Fh +
and eax 0FFFFFFF0h +
lea eax [eax+edx+20h] +
jmp loc_443710  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_467290  +
cmp dword ptr [esp+5Ch] 0 +
jz loc_443784  +
***
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_467110  +
mov esi [esp-0BCh+arg_120] +
mov dword ptr [esp+74h] 0 +
mov [esp-0BCh+arg_118] 1 +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov [esi+0D0h] eax +
mov dword ptr [esi+0C4h] 0 +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
jmp loc_442AD9  +
mov eax [edi] +
mov ecx [edx] +
mov edx [eax+4] +
mov eax offset aLocalSym +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_B8] offset aUnableToFindEq +
test edx edx +
cmovnz eax edx +
mov [esp-0BCh+arg_BC] eax +
call off_492AE8  +
mov [esp-0BCh+arg_B8] 5 +
call sub_420C50  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_466E20  +
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
jmp loc_440E9E  +
***
mov [esp+0ACh+var_94] 0 +
jmp loc_443401  +
***
mov eax [esp+40h] +
mov dword ptr [esp+8] 4 +
mov [esp] ebp +
mov [esp+4] eax +
call sub_425A20  +
test eax eax +
mov [esp+4Ch] eax +
jz loc_443BAB  +
mov [ebx+30h] eax +
mov eax [esp+64h] +
mov dword ptr [ebx+4] 12h +
mov [ebx+18h] esi +
mov dword ptr [ebx+24h] 4 +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [esp+2Ch] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
jmp loc_443571  +
***
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningNonLoa +
mov [esp-0BCh+arg_BC] ebp +
call off_492AE8  +
jmp loc_440E9E  +
mov ecx [eax+30h] +
mov edx [eax+44h] +
shl ecx 5 +
lea ebx [edx+ecx] +
cmp edx ebx +
jnb loc_443CAE  +
mov esi 0FFFFFFFFh +
jmp loc_443C97  +
***
add edx 20h +
cmp ebx edx +
jbe loc_443CA6  +
cmp dword ptr [edx] 1 +
jnz loc_443C90  +
mov ecx [edx+0Ch] +
cmp esi ecx +
cmova esi ecx +
jmp loc_443C90  +
test esi esi +
jz loc_442C43  +
mov eax [esp-0BCh+arg_114] +
mov word ptr [eax+24h] 2 +
mov eax [ebp+0A0h] +
jmp loc_442C43  +
***
mov [esp+0ACh+var_A8] 0D8Dh +
mov [esp+0ACh+var_AC] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_441235  +
***
mov eax [eax+28h] +
test eax eax +
jz loc_443221  +
mov edx [esp-0BCh+arg_E8] +
sub edx [eax+1Ch] +
mov [ecx+14h] eax +
mov [ecx+18h] edx +
jmp loc_44322F  +
cmp [esp-0BCh+arg_17C] 0 +
mov eax [ebp+0A0h] +
setnz byte ptr [esp-0BCh+arg_D0]  +
jmp loc_442BE6  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_466E20  +
jmp loc_440E9E  +
***
xor eax eax +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_44253A  +
nop   +
jmp loc_442537  +
mov ecx 0FFFFFFF1h +
jmp loc_443685  +
mov dword ptr [esp+8] offset aAssign_file_po +
mov dword ptr [esp+4] 155Eh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_420BD0  +
mov ecx edi +
mov [esp+18h] cl +
jmp loc_442BE6  +
***
mov eax esi +
mov esi ebx +
mov ebx eax +
jmp loc_443330  +
***
jmp loc_443D80  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov eax [eax+1B0h] +
mov [esp+20h] eax +
jnz loc_443DB2  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_440CB0  +
test eax eax +
jz loc_443DF0  +
mov eax [ebp+0A0h] +
lea edx [esp+3Ch] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+40h] +
mov [esp+2Ch] eax +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov [esp] ebp +
mov [esp+4] eax +
call sub_41ED30  +
mov ecx [esp+3Ch] +
test ecx ecx +
jz loc_443E00  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ecx [edx+20h] +
mov ebx [edx+24h] +
mov [esp+18h] ecx +
mov ecx [eax+40h] +
mov eax [eax+214h] +
mov [esp+1Ch] ebx +
lea edi [ecx+4] +
lea eax [ecx+eax*4] +
cmp eax edi +
jbe loc_443F91  +
mov [esp+60h] ebp +
mov ebp eax +
jmp loc_443E4B  +
add edi 4 +
cmp ebp edi +
jbe loc_443F81  +
mov ebx [edi] +
mov eax [ebx+10h] +
and eax [ebx+14h] +
cmp eax 0FFFFFFFFh +
jnz loc_443E40  +
mov eax [ebx+4] +
mov esi [ebx+2Ch] +
cmp eax 4 +
jz loc_443F4E  +
cmp eax 9 +
jz loc_443F4E  +
test esi esi +
jz loc_443E40  +
test byte ptr [esi+17h] 8 +
jz loc_443E40  +
mov eax [esi] +
mov [esp+24h] eax +
mov eax [ebx+30h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_422830  +
test eax eax +
jz loc_443DF0  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jz loc_4441C0  +
cmp dword ptr [ebx] 0FFFFFFFFh +
jnz loc_4441E8  +
mov eax [esp+60h] +
mov ecx [esp+24h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_466E50  +
mov [ebx] eax +
mov eax [esi+8Ch] +
mov edx [eax+3Ch] +
mov [esp+28h] eax +
test edx edx +
jz loc_443F11  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 0 +
call sub_43BCA0  +
test eax eax +
jz loc_443DF0  +
mov eax [esp+28h] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_443F38  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 1 +
call sub_43BCA0  +
test eax eax +
jz loc_443DF0  +
mov eax [esi+24h] +
mov [ebx+18h] eax +
mov eax [esi+6Ch] +
mov [ebx+30h] eax +
mov eax [ebx+2Ch] +
mov dword ptr [eax+6Ch] 0 +
mov eax [esp+18h] +
add edi 4 +
mov edx [esp+1Ch] +
mov dword ptr [esp+0Ch] 1 +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_43FF50  +
cmp ebp edi +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
ja loc_443E4B  +
mov ebp [esp+60h] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov eax [edx+4] +
mov esi 1 +
mov [esp] eax +
call sub_467290  +
mov ebx [ebp+0A0h] +
mov eax [ebx+934h] +
sub ebx 0FFFFFF80h +
mov eax [eax+4] +
mov [esp] eax +
call sub_467110  +
mov edx [esp+1Ch] +
mov [ebx+18h] eax +
mov eax [esp+18h] +
mov [esp] ebx +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_43FF50  +
mov ecx [ebp+4] +
mov edi [ebp+0A0h] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
shl esi cl +
mov ebx esi +
sar ebx 1Fh +
add eax esi +
adc edx ebx +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
neg esi  +
mov ebx esi +
and esi eax +
sar ebx 1Fh +
mov eax edx +
and eax ebx +
xor edx edx +
mov [edi+18h] esi +
mov ebx [ebp+0A0h] +
mov [esp+18h] esi +
mov [esp+1Ch] eax +
mov eax [edi+34h] +
imul eax [edi+38h] +
mov esi [ebx+214h] +
mov ecx [ebx+934h] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
cmp esi 1 +
mov [ecx+20h] eax +
mov [ecx+24h] edx +
jbe loc_444104  +
mov edi 1 +
mov ebx [esp+2Ch] +
mov [esp+18h] esi +
jmp loc_44406D  +
mov eax [ebp+0A0h] +
mov ecx [eax+934h] +
mov esi [ebx+edi*4] +
mov eax [ecx+4] +
mov ecx [esi] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_467120  +
mov [esi] eax +
mov eax [esp+20h] +
mov eax [eax+48h] +
test eax eax +
jz loc_44409A  +
mov ecx [ebx+edi*4] +
mov [esp] ebp +
mov [esp+4] ecx +
call eax  +
mov eax [ebx+edi*4] +
mov edx [eax+30h] +
test edx edx +
jz loc_4440EB  +
mov esi [eax+18h] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_429F00  +
test eax eax +
jnz loc_443DF0  +
mov eax [ebx+edi*4] +
mov eax [eax+30h] +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp] eax +
call sub_429DA0  +
cmp eax esi +
jnz loc_443DF0  +
add edi 1 +
cmp edi [esp+18h] +
jnz loc_444061  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+934h] +
mov eax [ecx+4] +
test eax eax +
jz loc_44415A  +
mov eax [ebx+90h] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_429F00  +
test eax eax +
jnz loc_443DF0  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_4671C0  +
test eax eax +
jz loc_443DF0  +
mov eax [esp+20h] +
mov eax [eax+0A4h] +
test eax eax +
jz loc_444180  +
mov edx [ebp+0A0h] +
mov edx [edx+934h] +
mov edx [edx+38h] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+14h] +
mov [esp] ebp +
call eax  +
test eax eax +
jz loc_443DF0  +
mov eax [ebx+934h] +
mov edx [eax+10h] +
mov eax 1 +
test edx edx +
jz loc_443DF2  +
mov [esp] ebp +
call edx  +
jmp loc_443DF2  +
***
mov eax [esp+60h] +
test byte ptr [eax+2Ah] 40h +
jnz loc_443EAE  +
mov edx [esp+24h] +
call sub_43B300  +
test eax eax +
mov [esp+24h] eax +
jnz loc_443EAE  +
jmp loc_443DF0  +
***
mov dword ptr [esp+8] offset a_bfd_elf_assig +
mov dword ptr [esp+4] 16A7h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_420BD0  +
lea esi [esi+0] +
lea edi [edi+0] +
jmp loc_443D80  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov edx [eax] +
mov eax [edx+14h] +
mov ecx [edx+0Ch] +
test eax eax +
jnz loc_4442B7  +
and ch 1 +
jz loc_444262  +
mov eax [edx+10h] +
test eax eax +
jz loc_444262  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_444293  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_444262  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_444293  +
mov eax [edx+4] +
mov [esp+1Ch+var_1C] offset aBSymbolSRequir +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call off_492AE8  +
mov [esp+1Ch+var_1C] 7 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
mov ecx [ecx+0A0h] +
mov eax [eax+8] +
mov ecx [ecx+934h] +
cmp eax [ecx+28h] +
jge loc_444262  +
mov ecx [ecx+8] +
mov eax [ecx+eax*4] +
test eax eax +
jz loc_444262  +
mov eax [eax+14h] +
mov [edx+14h] eax +
test eax eax +
jz loc_444262  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_10] +
mov ebx [esp+14h+arg_0] +
test eax eax +
jz loc_444380  +
movzx eax byte ptr [eax] +
xor edx edx +
and eax 3 +
cmp al 2 +
setnz dl  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4442F6  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+14h+arg_8] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4442EB  +
mov eax [esp+14h+arg_C] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_444445  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_444387  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
test edx edx +
mov [eax+8] ecx +
jz loc_4443BA  +
mov edx [esi+8] +
and edx 80h +
jz loc_444355  +
mov edx [esi+64h] +
or dword ptr [eax+8] 80h +
mov [eax+64h] edx +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_C] +
movzx edx byte ptr [eax+19h] +
mov eax [esp+14h+arg_C] +
and edx 4 +
movzx eax byte ptr [eax+19h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+19h] al +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
jmp loc_4442E2  +
mov ecx [esp+14h+arg_C] +
mov esi [esp+14h+arg_4] +
mov ecx [ecx+14h] +
mov esi [esi+14h] +
cmp ecx esi +
jz loc_444430  +
test edx edx +
jnz loc_444405  +
mov esi [esp+14h+arg_4] +
mov esi [esi+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
mov [eax+8] ecx +
mov edx [esi+78h] +
test edx edx +
jz loc_4443C7  +
test byte ptr [edx+16h] 10h +
jnz loc_444400  +
mov edx [esi+8] +
test dh 2 +
jz loc_4443D8  +
or ch 2 +
mov [eax+8] ecx +
mov edx [esi+8] +
mov ecx [esi+7Ch] +
mov [eax+7Ch] ecx +
mov ecx [esi+74h] +
mov [eax+74h] ecx +
test byte ptr [ebx+2Ah] 10h +
jnz loc_444340  +
and edx 800h +
or [eax+8] edx +
jmp loc_44433D  +
mov edx [esi+8] +
jmp loc_4443E4  +
xor ecx esi +
and ecx 0FFF1FFFBh +
jz loc_444430  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov edx [esi+8] +
and edx 0FFF00000h +
or [eax+8] edx +
mov edx [esi+8] +
jmp loc_444340  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+4] +
mov [eax+4] ecx +
jmp loc_444326  +
mov [esp+14h+var_10] 1B41h +
mov [esp+14h+var_14] offset a____Binutil_18 +
mov [esp+14h+var_8] edx +
call sub_420BA0  +
mov eax [esp+14h+arg_C] +
mov edx [esp+14h+var_8] +
mov eax [eax+8Ch] +
jmp loc_444315  +
***
push ebx  +
mov eax 1 +
sub esp 28h +
mov edx [esp+30h] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_444490  +
add esp 28h +
pop ebx  +
retn   +
***
mov ebx [esp+38h] +
mov ecx [ebx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_444486  +
mov eax [esp+34h] +
mov ebx [esp+3Ch] +
mov eax [eax+8Ch] +
mov ebx [ebx+8Ch] +
mov ecx [eax+28h] +
mov [ebx+28h] ecx +
mov ecx [eax+4] +
cmp ecx 2 +
jz loc_4444C4  +
cmp ecx 0Bh +
jnz loc_4444F7  +
mov eax [eax+20h] +
mov [ebx+20h] eax +
mov eax [esp+3Ch] +
mov dword ptr [esp+10h] 0 +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
call sub_4442C0  +
add esp 28h +
pop ebx  +
retn   +
***
sub ecx 6FFFFFFDh +
cmp ecx 1 +
ja loc_4444CA  +
jmp loc_4444C4  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ebx [esp+arg_4] +
mov edx [eax+64h] +
test edx edx +
jnz loc_44452B  +
jmp loc_444598  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_444598  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 11h +
jnz loc_444524  +
mov esi [eax+7Ch] +
test esi esi +
jz loc_444524  +
mov eax esi +
xor edi edi +
jmp loc_44455A  +
cmp [edx+3Ch] ebx +
jz loc_4445A1  +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax esi +
jz loc_444577  +
test eax eax +
jz loc_444577  +
mov ecx [eax+3Ch] +
cmp ecx ebx +
jnz loc_444544  +
mov eax [eax+8Ch] +
lea ecx [edi+4] +
cmp [edx+3Ch] ebx +
mov eax [eax+7Ch] +
cmovnz edi ecx +
cmp eax esi +
jnz loc_444556  +
test edi edi +
jz loc_444524  +
test ebx ebx +
jz loc_4445B7  +
mov eax [edx+28h] +
test eax eax +
jnz loc_44458C  +
mov eax [edx+24h] +
mov [edx+28h] eax +
sub eax edi +
mov [edx+24h] eax +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_44452B  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
mov ecx [ecx+8Ch] +
and dword ptr [ecx+8] 0FFFFFDFFh +
mov dword ptr [ecx+74h] 0 +
jmp loc_444549  +
mov eax [edx+3Ch] +
sub [eax+24h] edi +
jmp loc_444524  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax 1 +
cmp dword ptr [edx+4] 5 +
jz loc_444600  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+0B4h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
mov ecx edi +
jnz loc_4445EF  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jz loc_444646  +
mov eax [esp+0B0h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_444510  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0B0h] +
mov eax [eax+0A0h] +
mov ebp [eax+44h] +
mov [esp+48h] eax +
test ebp ebp +
jz loc_444624  +
cmp edx edi +
jz loc_4454F8  +
mov eax [edx+1B0h] +
mov dword ptr [esp+8Ch] 0 +
mov [esp+68h] eax +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+58h] eax +
mov eax [ecx+1B0h] +
mov eax [eax+10h] +
mov [esp+3Ch] eax +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+34h] eax +
jz loc_4446B0  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4446A5  +
mov eax [esp+48h] +
mov ebp [eax+44h] +
mov eax [esp+58h] +
test eax eax +
jz loc_4458F2  +
mov eax [ebp+10h] +
test eax eax +
jnz loc_44544A  +
mov edx ebp +
xor eax eax +
mov ecx [esp+58h] +
jmp loc_4446E3  +
mov edi [edx+10h] +
test edi edi +
jnz loc_44544A  +
add eax 1 +
add edx 20h +
cmp eax ecx +
jnz loc_4446D8  +
mov dword ptr [esp+64h] 0 +
xor esi esi +
mov edi ebp +
mov [esp+30h] ebp +
mov ebp esi +
jmp loc_444723  +
cmp eax 1 +
jz loc_444784  +
cmp eax 6474E552h +
jnz loc_444713  +
mov dword ptr [edi] 0 +
add ebp 1 +
add edi 20h +
cmp [esp+58h] ebp +
jbe loc_444839  +
mov eax [edi] +
cmp eax 3 +
jnz loc_444701  +
mov eax [esp+34h] +
test eax eax +
jz loc_444713  +
mov edx [edi+0Ch] +
jmp loc_44473E  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_444713  +
test edx edx +
jnz loc_444737  +
mov esi [edi+10h] +
test esi esi +
jnz loc_444737  +
mov ebx [edi+18h] +
test ebx ebx +
jnz loc_444737  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_444737  +
test byte ptr [eax+15h] 1 +
jz loc_444737  +
mov esi [eax+24h] +
test esi esi +
mov [esp+10h] esi +
jz loc_444737  +
mov esi [eax+50h] +
mov ebx [edi+8] +
cmp esi ebx +
jb loc_444737  +
add esi [esp+10h] +
add ecx ebx +
cmp esi ecx +
ja loc_444737  +
mov eax [eax+1Ch] +
mov [edi+0Ch] eax +
jmp loc_444713  +
***
test ebp ebp +
jz loc_444713  +
mov ebx [esp+30h] +
xor edx edx +
jmp loc_44479E  +
add edx 1 +
add ebx 20h +
cmp edx ebp +
jz loc_444713  +
cmp dword ptr [ebx] 1 +
jnz loc_444790  +
mov eax [edi+0Ch] +
mov esi [ebx+18h] +
mov ecx [ebx+14h] +
mov [esp+10h] eax +
mov eax [ebx+0Ch] +
cmp esi ecx +
cmovnb ecx esi +
mov [esp+14h] ecx +
add ecx eax +
cmp [esp+10h] ecx +
mov [esp+18h] ecx +
jnb loc_444790  +
mov ecx [edi+18h] +
cmp ecx [edi+14h] +
mov [esp+28h] ecx +
cmovb ecx [edi+14h] +
mov [esp+1Ch] ecx +
add ecx [esp+10h] +
cmp eax ecx +
mov [esp+20h] ecx +
jnb loc_444790  +
mov ecx [edi+10h] +
mov [esp+24h] ecx +
mov ecx [ebx+10h] +
mov [esp+2Ch] ecx +
add ecx [esp+14h] +
cmp [esp+24h] ecx +
jnb loc_444790  +
mov ecx [esp+1Ch] +
add ecx [esp+24h] +
cmp [esp+2Ch] ecx +
jnb loc_444790  +
cmp [esp+10h] eax +
ja loc_445910  +
mov eax [esp+18h] +
sub eax [esp+20h] +
test eax eax +
jle loc_44482E  +
mov ecx [esp+28h] +
add [edi+14h] eax +
add ecx eax +
mov [edi+18h] ecx +
mov dword ptr [ebx] 0 +
jmp loc_444790  +
***
lea eax [esp+8Ch] +
mov ebp [esp+30h] +
mov [esp+4Ch] eax +
movzx eax byte ptr [esp+64h] +
mov dword ptr [esp+74h] 0 +
mov dword ptr [esp+6Ch] 0 +
mov dword ptr [esp+50h] 0 +
add eax eax +
mov dword ptr [esp+60h] 0 +
mov [esp+5Ch] al +
mov eax [ebp+0] +
test eax eax +
mov [esp+10h] eax +
jz loc_444AD0  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
jz loc_4453B9  +
mov edx [ebp+10h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_444947  +
mov ebx [eax+20h] +
cmp ebx edx +
jb loc_444990  +
mov ecx [eax+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_444B43  +
mov esi [eax+24h] +
add ebx esi +
mov esi [ebp+14h] +
cmp [ebp+18h] esi +
cmovnb esi [ebp+18h] +
add esi edx +
cmp ebx esi +
ja loc_444990  +
test cl 1 +
jz loc_444990  +
mov esi [esp+10h] +
cmp esi 6474E551h +
jz loc_444940  +
cmp esi 7 +
jz loc_444B69  +
cmp dword ptr [esp+10h] 1 +
jz loc_444915  +
test ch 4 +
jnz loc_444940  +
cmp dword ptr [esp+10h] 2 +
jz loc_444B77  +
test byte ptr [eax+18h] 40h +
jnz loc_444940  +
mov edi [esp+18h] +
test edi edi +
cmovz edi eax +
cmp dword ptr [eax+3Ch] 1 +
sbb dword ptr [esp+1Ch] 0FFFFFFFFh +
mov [esp+18h] edi +
lea esi [esi+0] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4449BF  +
test edx edx +
jnz loc_4448B0  +
mov esi [eax+1Ch] +
mov ebx [ebp+0Ch] +
cmp esi ebx +
jb loc_444990  +
mov ecx [eax+14h] +
mov edi ecx +
and edi 500h +
cmp edi 400h +
jz loc_444B56  +
mov edi [eax+24h] +
add esi edi +
mov edi [ebp+14h] +
cmp [ebp+18h] edi +
cmovnb edi [ebp+18h] +
add edi ebx +
cmp esi edi +
jbe loc_4448EB  +
lea esi [esi+0] +
cmp dword ptr [esp+10h] 4 +
jnz loc_444940  +
mov ecx [eax+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_444940  +
mov ebx [eax+50h] +
mov ecx [ebp+8] +
cmp ebx ecx +
jb loc_444940  +
add ebx [eax+24h] +
add ecx [ebp+14h] +
cmp ebx ecx +
ja loc_444940  +
mov ecx [eax+14h] +
jmp loc_444910  +
***
mov eax [esp+1Ch] +
lea eax ds:28h[eax*4] +
mov [esp+54h] eax +
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_425930  +
test eax eax +
mov [esp+10h] eax +
jz loc_4453E2  +
mov edi [esp+10h] +
mov eax [ebp+4] +
mov edx [ebp+0] +
or byte ptr [edi+20h] 1 +
mov [edi+8] eax +
mov eax [esp+18h] +
mov dword ptr [edi] 0 +
mov [edi+4] edx +
test eax eax +
jz loc_444A1A  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_444A32  +
mov eax [ebp+10h] +
mov esi [esp+10h] +
mov [esi+0Ch] eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFFDh +
or al [esp+5Ch] +
mov [esi+20h] al +
mov ecx [ebp+8] +
xor eax eax +
test ecx ecx +
jnz loc_444A48  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [ebp+14h] eax +
setnb al  +
mov edi [esp+10h] +
shl eax 4 +
mov ebx eax +
movzx eax byte ptr [edi+20h] +
and eax 0FFFFFFCFh +
or eax ebx +
mov [edi+20h] al +
mov eax [esp+60h] +
test eax eax +
jz loc_444A6E  +
cmp edx 1 +
jz loc_444FD1  +
mov eax [esp+48h] +
mov ebx [eax+14h] +
xor eax eax +
cmp ecx ebx +
ja loc_444A90  +
mov esi [esp+48h] +
add ecx [ebp+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax ebx +
cmp ecx eax +
setnb al  +
mov esi [esp+10h] +
shl eax 5 +
mov ecx eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFDFh +
or eax ecx +
cmp edx 1 +
mov [esi+20h] al +
jz loc_444FC6  +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_444BBA  +
mov eax [esp+10h] +
mov ebx [esp+4Ch] +
mov dword ptr [eax+24h] 0 +
mov [esp+4Ch] eax +
mov [ebx] eax +
nop   +
add dword ptr [esp+50h] 1 +
add ebp 20h +
mov eax [esp+58h] +
cmp [esp+50h] eax +
jnz loc_444873  +
mov edi [esp+0B4h] +
mov eax [esp+8Ch] +
mov edx [edi+0A0h] +
mov edx [edx+934h] +
mov [edx] eax +
mov edx [esp+6Ch] +
test edx edx +
jz loc_444624  +
test eax eax +
jz loc_444624  +
xor edx edx +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_444B18  +
mov eax [esp+74h] +
cmp eax edx +
jnb loc_444624  +
sub edx eax +
mov eax [esp+48h] +
imul edx [eax+2Ch] +
mov eax [esp+6Ch] +
sub [eax+0Ch] edx +
jmp loc_444624  +
***
xor si si +
cmp dword ptr [esp+10h] 7 +
jnz loc_4448D5  +
jmp loc_4448D2  +
***
xor di di +
cmp dword ptr [esp+10h] 7 +
jnz loc_444973  +
jmp loc_444970  +
***
and ch 4 +
jnz loc_444920  +
jmp loc_444940  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_444B90  +
mov ecx [eax+24h] +
test ecx ecx +
jnz loc_444920  +
test edx edx +
jz loc_4453A8  +
cmp [eax+20h] edx +
jnz loc_444920  +
mov esi [eax] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_444940  +
jmp loc_444920  +
***
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_42B440  +
test eax eax +
mov [esp+14h] eax +
jz loc_4453E2  +
mov eax [esp+0B0h] +
mov edx [eax+64h] +
test edx edx +
jz loc_444C06  +
cmp [esp+18h] edx +
mov eax [esp+18h] +
jnz loc_444BFF  +
jmp loc_444FF9  +
cmp eax edx +
jz loc_444FF9  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_444BF7  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+4] 192Dh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_420BA0  +
mov eax [esp+24h] +
cmp [esp+1Ch] eax +
jz loc_4453E9  +
mov ebx [esp+30h] +
mov eax [esp+10h] +
mov edx [esp+28h] +
test ebx ebx +
cmovnz edx [esp+34h] +
mov [eax+0Ch] edx +
movzx eax byte ptr [eax+20h] +
test al 10h +
jz loc_444C7E  +
mov edi [esp+48h] +
mov ecx [edi+28h] +
cmp edx ecx +
jb loc_4454C5  +
mov edi [esp+10h] +
sub edx ecx +
mov [edi+0Ch] edx +
test al 20h +
jz loc_444CAF  +
mov eax [esp+10h] +
mov edi [esp+48h] +
mov ecx [eax+0Ch] +
mov edx [edi+2Ch] +
mov eax [edi+30h] +
imul edx eax +
cmp ecx edx +
jb loc_4454D4  +
mov edi [esp+10h] +
sub ecx edx +
mov [esp+74h] eax +
mov [edi+0Ch] ecx +
mov [esp+6Ch] edi +
mov dword ptr [esp+38h] 0 +
mov eax [esp+10h] +
xor ecx ecx +
mov dword ptr [esp+24h] 0 +
mov ebx ecx +
mov dword ptr [esp+18h] 1 +
mov dword ptr [eax+24h] 0 +
mov eax [esp+3Ch] +
lea esi [eax-1] +
neg eax  +
mov [esp+40h] esi +
mov [esp+34h] eax +
jmp loc_444DB4  +
mov ecx [esi+14h] +
and ecx 500h +
cmp ecx 400h +
jz loc_444EB0  +
mov ecx [esi+24h] +
add ecx eax +
mov [esp+20h] ecx +
mov ecx [ebp+14h] +
cmp [ebp+18h] ecx +
cmovnb ecx [ebp+18h] +
add ecx edx +
cmp [esp+20h] ecx +
ja loc_444DDC  +
mov ecx [esp+10h] +
mov ecx [ecx+24h] +
test ecx ecx +
mov [esp+20h] ecx +
mov ecx [esp+10h] +
jnz loc_444EC5  +
movzx ecx byte ptr [ecx+20h] +
mov dword ptr [esp+28h] 0 +
mov [esp+2Ch] cl +
and ecx 10h +
jz loc_444D5B  +
mov ecx [esp+48h] +
mov ecx [ecx+28h] +
mov [esp+28h] ecx +
add edx [esp+28h] +
mov [esp+28h] edx +
xor edx edx +
test byte ptr [esp+2Ch] 20h +
jz loc_444D77  +
mov ecx [esp+48h] +
mov edx [ecx+2Ch] +
imul edx [ecx+30h] +
add edx [esp+28h] +
cmp eax edx +
jnz loc_4458D6  +
mov ecx [esp+20h] +
mov edx [esp+10h] +
add dword ptr [esp+38h] 1 +
mov eax ecx +
add eax 1 +
mov [edx+24h] eax +
mov eax [esp+14h] +
mov [edx+ecx*4+28h] esi +
mov dword ptr [eax+ebx*4] 0 +
or byte ptr [edi+18h] 40h +
add ebx 1 +
cmp [esp+1Ch] ebx +
jbe loc_444DFF  +
mov eax [esp+14h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_444DAB  +
mov esi [edi+3Ch] +
test esi esi +
jz loc_444F30  +
mov edx [esp+10h] +
mov eax [esi+20h] +
mov edx [edx+0Ch] +
cmp eax edx +
jnb loc_444CF0  +
cmp dword ptr [ebp+0] 4 +
jz loc_444E40  +
mov esi [esp+18h] +
test esi esi +
jz loc_444DAB  +
add ebx 1 +
cmp [esp+1Ch] ebx +
mov [esp+24h] eax +
mov dword ptr [esp+18h] 0 +
ja loc_444DB4  +
mov eax [esp+10h] +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_444F50  +
mov eax [esp+10h] +
mov edi [esp+4Ch] +
mov [esp+4Ch] eax +
mov [edi] eax +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
ja loc_444F70  +
mov eax [esp+14h] +
mov [esp] eax +
call free  +
jmp loc_444AD0  +
***
mov ecx [edi+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_444DE2  +
mov ecx [edi+50h] +
mov [esp+20h] ecx +
mov ecx [ebp+8] +
cmp [esp+20h] ecx +
mov [esp+28h] ecx +
jb loc_444DE2  +
mov ecx [esp+20h] +
add ecx [edi+24h] +
mov [esp+20h] ecx +
mov ecx [esp+28h] +
add ecx [ebp+14h] +
cmp [esp+20h] ecx +
ja loc_444DE2  +
mov ecx [esp+0B0h] +
movzx ecx byte ptr [ecx+28h] +
and ecx 7 +
cmp cl 3 +
jnz loc_444DE2  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_444DE2  +
mov ecx [edi+20h] +
test ecx ecx +
jnz loc_444DE2  +
jmp loc_444D24  +
***
xor cx cx +
cmp dword ptr [ebp+0] 7 +
jnz loc_444D08  +
lea esi [esi+0] +
jmp loc_444D05  +
***
mov edx [esp+20h] +
mov dword ptr [esp+2Ch] 0FFFFFFFFh +
mov edx [ecx+edx*4+24h] +
mov ecx [edx+24h] +
mov edx [edx+20h] +
mov [esp+28h] ecx +
add [esp+28h] edx +
mov edx [esp+40h] +
add edx [esp+28h] +
jb loc_444EF5  +
and edx [esp+34h] +
mov [esp+2Ch] edx +
mov edx [esp+3Ch] +
mov ecx [esp+34h] +
lea edx [edx+eax-1] +
and ecx edx +
mov [esp+30h] edx +
mov edx 0FFFFFFFFh +
cmp eax [esp+30h] +
cmovbe edx ecx +
cmp [esp+2Ch] edx +
jb loc_444DE2  +
cmp eax [esp+28h] +
jnb loc_444D83  +
jmp loc_444DE2  +
***
mov dword ptr [esp+4] 1991h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_444DCA  +
***
mov dword ptr [esp+4] 19C8h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_420BA0  +
jmp loc_444E0E  +
***
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_425930  +
test eax eax +
mov [esp+10h] eax +
jz loc_4453D6  +
mov ebx [esp+10h] +
mov eax [ebp+0] +
mov edi [esp+24h] +
mov dword ptr [ebx] 0 +
mov [ebx+4] eax +
mov eax [ebp+4] +
mov [ebx+0Ch] edi +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+20h] +
or eax 1 +
and eax 0FFFFFFCDh +
or al [esp+5Ch] +
mov [ebx+20h] al +
jmp loc_444CB7  +
***
test al 20h +
cmovz edx [esp+60h] +
mov [esp+60h] edx +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_444BBA  +
mov eax [esp+0B0h] +
mov dword ptr [esp] offset aBWarningEmptyL +
mov [esp+4] eax +
call off_492AE8  +
jmp loc_444AB9  +
***
mov eax [ebp+10h] +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+70h] 1 +
mov dword ptr [esp+28h] 0 +
mov [esp+18h] eax +
mov eax [ebp+0] +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+20h] eax +
mov eax [esp+18h] +
test eax eax +
jz loc_445280  +
mov eax [edx+20h] +
cmp [esp+18h] eax +
ja loc_4452B8  +
mov ecx [edx+14h] +
mov ebx ecx +
and ebx 500h +
cmp ebx 400h +
jz loc_4452FB  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx [esp+18h] +
cmp esi ebx +
ja loc_4452B8  +
test cl 1 +
jz loc_4452B8  +
mov esi [esp+20h] +
cmp esi 6474E551h +
jz loc_445210  +
cmp esi 7 +
jz loc_445319  +
cmp dword ptr [esp+20h] 1 +
jz loc_4450C1  +
test ch 4 +
jnz loc_445210  +
cmp dword ptr [esp+20h] 2 +
jz loc_445230  +
xor edi edi +
test byte ptr [edx+18h] 40h +
jnz loc_445210  +
mov ecx [edx+3Ch] +
test ecx ecx +
jz loc_445210  +
mov ebx [esp+2Ch] +
lea esi [ebx+1] +
mov [esp+38h] esi +
mov esi [esp+14h] +
mov [esi+ebx*4] edx +
mov ebx [esp+64h] +
test ebx ebx +
jnz loc_445166  +
mov ebx [ebp+0Ch] +
test ebx ebx +
mov [esp+2Ch] ebx +
jz loc_445166  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jnz loc_445166  +
mov esi [esp+24h] +
test esi esi +
jnz loc_445166  +
mov ebx [ecx+20h] +
test ebx ebx +
jz loc_445166  +
mov ebx [esp+10h] +
mov esi [ecx+1Ch] +
movzx ebx byte ptr [ebx+20h] +
mov [esp+78h] esi +
mov [esp+40h] bl +
xor ebx ebx +
test byte ptr [esp+40h] 10h +
jz loc_44513C  +
mov esi [esp+48h] +
mov ebx [esi+28h] +
add ebx [esp+2Ch] +
mov [esp+7Ch] ebx +
xor ebx ebx +
test byte ptr [esp+40h] 20h +
jz loc_445158  +
mov esi [esp+48h] +
mov ebx [esi+2Ch] +
imul ebx [esi+30h] +
add ebx [esp+7Ch] +
cmp [esp+78h] ebx +
jz loc_445936  +
mov esi [ecx+20h] +
mov ebx esi +
mov [esp+2Ch] esi +
mov esi [esp+10h] +
mov esi [esi+0Ch] +
cmp ebx esi +
jb loc_44532C  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_4454E1  +
mov ebx [ecx+24h] +
mov [esp+40h] ebx +
mov ebx [esp+40h] +
add ebx [esp+2Ch] +
cmp [ebp+18h] eax +
mov [esp+40h] ebx +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx esi +
cmp [esp+40h] ebx +
ja loc_44532C  +
mov eax [esp+30h] +
test eax eax +
jnz loc_4451D4  +
mov edi [esp+2Ch] +
mov eax [esp+28h] +
cmp edi eax +
cmovbe eax edi +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov edi [esp+10h] +
mov dword ptr [esp+30h] 0 +
mov [edi+eax*4+28h] ecx +
mov edi [esp+2Ch] +
add eax 1 +
mov [esp+24h] eax +
mov [esp+28h] edi +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
jz loc_444C3A  +
mov [esp+2Ch] eax +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_445037  +
mov eax [esp+2Ch] +
cmp [esp+1Ch] eax +
jz loc_444C3A  +
jmp loc_444C26  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_445249  +
mov edi [edx+24h] +
test edi edi +
jnz loc_4450C1  +
mov esi [esp+18h] +
xor edi edi +
test esi esi +
jz loc_445457  +
mov esi [esp+18h] +
cmp esi [edx+20h] +
jnz loc_4450C3  +
mov esi [edx] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_445210  +
jmp loc_4450C1  +
***
mov eax [edx+1Ch] +
mov ebx [ebp+0Ch] +
cmp eax ebx +
jb loc_4452B8  +
mov ecx [edx+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_44530D  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov edi eax +
cmovnb edi [ebp+18h] +
add ebx edi +
cmp esi ebx +
jbe loc_445084  +
cmp dword ptr [esp+20h] 4 +
jnz loc_445210  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 7 +
jnz loc_445210  +
mov eax [edx+50h] +
mov ecx [ebp+8] +
cmp eax ecx +
jb loc_445210  +
add eax [edx+24h] +
mov ebx eax +
mov eax [ebp+14h] +
add ecx eax +
cmp ebx ecx +
ja loc_445210  +
mov ecx [edx+14h] +
jmp loc_4450AD  +
***
xor esi esi +
cmp dword ptr [esp+20h] 7 +
jnz loc_44506A  +
jmp loc_445067  +
***
xor si si +
cmp dword ptr [esp+20h] 7 +
jnz loc_4452A0  +
jmp loc_44529D  +
***
and ch 4 +
jz loc_445210  +
mov edi 1 +
jmp loc_4450C3  +
***
cmp dword ptr [esp+20h] 4 +
jz loc_445468  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jz loc_445387  +
mov ebx [ebp+0Ch] +
mov esi [ecx+1Ch] +
mov [esp+78h] ebx +
cmp esi ebx +
jb loc_445387  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_445821  +
mov edi [ecx+24h] +
mov [esp+40h] edi +
mov ebx [esp+40h] +
add ebx esi +
cmp [ebp+18h] eax +
cmovnb eax [ebp+18h] +
add eax [esp+78h] +
cmp ebx eax +
jbe loc_4451BB  +
mov edi [esp+70h] +
test edi edi +
jz loc_4451F7  +
mov eax [esp+2Ch] +
mov dword ptr [esp+70h] 0 +
mov [esp+34h] eax +
jmp loc_4451F7  +
***
mov edi [eax+1Ch] +
cmp [ebp+0Ch] edi +
jnz loc_444920  +
jmp loc_444BA1  +
***
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+54h] 28h +
mov dword ptr [esp+1Ch] 0 +
jmp loc_4449CE  +
***
mov eax [esp+14h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_4445EF  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov esi [esp+64h] +
mov [eax+24h] edi +
mov edi [esp+4Ch] +
test esi esi +
mov [esp+4Ch] eax +
mov [edi] eax +
jz loc_444E2A  +
mov eax [esp+68h] +
test byte ptr [eax+1AEh] 10h +
jnz loc_444E2A  +
mov edi [esp+4Ch] +
mov eax [edi+0Ch] +
cmp eax [esp+28h] +
jz loc_444E2A  +
test byte ptr [edi+20h] 30h +
jnz loc_444E2A  +
mov edi [esp+28h] +
sub edi eax +
mov eax edi +
mov edi [esp+4Ch] +
mov [edi+10h] eax +
jmp loc_444E2A  +
***
mov dword ptr [esp+64h] 1 +
jmp loc_4446F5  +
***
mov esi [edx+1Ch] +
cmp [ebp+0Ch] esi +
jnz loc_4450C3  +
jmp loc_445264  +
***
mov ebx [edx+8Ch] +
cmp dword ptr [ebx+4] 7 +
jnz loc_445337  +
mov esi [edx+50h] +
mov ebx [ebp+8] +
cmp esi ebx +
jb loc_445337  +
add esi [edx+24h] +
add ebx eax +
cmp esi ebx +
ja loc_445337  +
mov ebx [esp+0B0h] +
movzx ebx byte ptr [ebx+28h] +
and ebx 7 +
cmp bl 3 +
jnz loc_445337  +
cmp dword ptr [edx+1Ch] 0 +
jnz loc_445337  +
cmp dword ptr [edx+20h] 0 +
jz loc_4451BB  +
nop   +
jmp loc_445337  +
***
mov edi [esp+10h] +
and eax 0FFFFFFCFh +
mov [edi+20h] al +
jmp loc_444C7E  +
***
mov eax [esp+10h] +
and byte ptr [eax+20h] 0DFh +
jmp loc_444CAF  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_44519A  +
jmp loc_445193  +
***
mov eax [edi+1B0h] +
test byte ptr [eax+1AEh] 10h +
jz loc_44554F  +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+20h] eax +
cmp dword ptr [esp+20h] 0 +
jz loc_44596C  +
xor esi esi +
xor ebx ebx +
jmp loc_445533  +
add esi 1 +
add ebp 20h +
cmp esi [esp+20h] +
jz loc_445838  +
cmp dword ptr [ebp+0] 1 +
jnz loc_445523  +
mov eax [ebp+1Ch] +
cmp eax ebx +
jbe loc_445523  +
cmp eax 40000000h +
ja loc_445868  +
mov ebx eax +
jmp loc_445523  +
***
mov eax [esp+0B4h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+30h] eax +
jz loc_44556C  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_445561  +
mov eax [esp+48h] +
mov dword ptr [esp+34h] 0 +
mov eax [eax+30h] +
test eax eax +
mov [esp+20h] eax +
jz loc_4457FD  +
mov [esp+18h] edi +
mov edi ebp +
mov [esp+14h] ebp +
mov eax [edi+10h] +
test eax eax +
jnz loc_4455AC  +
cmp dword ptr [edi+18h] 0 +
jnz loc_4455AC  +
mov eax [edi] +
sub eax 2 +
cmp eax 1 +
jbe loc_445973  +
mov eax [esp+0B0h] +
mov esi [eax+64h] +
test esi esi +
jz loc_4457DF  +
mov eax [edi] +
mov [esp+10h] edi +
lea ebx [eax-6474E550h] +
mov [esp+24h] eax +
mov [esp+3Ch] ebx +
lea ebx [eax-1] +
sub eax 6 +
mov [esp+40h] ebx +
mov [esp+38h] eax +
jmp loc_445706  +
cmp dword ptr [esp+38h] 1 +
jbe loc_4456FB  +
and eax 2 +
mov [esp+28h] eax +
jnz loc_44560F  +
cmp dword ptr [esp+3Ch] 2 +
jbe loc_4456FB  +
cmp dword ptr [esp+40h] 1 +
jbe loc_4456FB  +
mov eax [ebx+4] +
cmp eax 8 +
mov [esp+2Ch] eax +
jz loc_445661  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
ja loc_4456FB  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [ebx+18h] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
add eax edi +
mov edi [esp+10h] +
adc edx ebp +
cmp edx 0 +
mov edi [edi+14h] +
jg loc_4456FB  +
jl loc_445661  +
cmp eax edi +
ja loc_4456FB  +
mov ebp [esp+28h] +
test ebp ebp +
jz loc_44569E  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_4456FB  +
mov edi [esp+1Ch] +
sub edx eax +
test edi edi +
jz loc_445690  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_4458C2  +
mov eax [ebx+18h] +
mov edi [esp+10h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_4456FB  +
mov eax [esp+10h] +
cmp dword ptr [eax] 2 +
jz loc_445751  +
test ecx ecx +
jz loc_445973  +
mov eax [ecx+14h] +
cmp [esi+14h] eax +
jnz loc_445973  +
mov eax [ecx+20h] +
cmp [esi+20h] eax +
jnz loc_445973  +
mov eax [ecx+1Ch] +
cmp [esi+1Ch] eax +
jnz loc_445973  +
mov eax [ecx+24h] +
cmp [esi+24h] eax +
jnz loc_445973  +
mov eax [ecx+28h] +
cmp [esi+28h] eax +
jnz loc_445973  +
mov eax [ecx+40h] +
cmp [esi+40h] eax +
jnz loc_445973  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_4457DB  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_445711  +
or byte ptr [ecx+18h] 40h +
mov ebx [esi+8Ch] +
mov eax [ebx+8] +
mov ebp eax +
and ebp 400h +
mov [esp+1Ch] ebp +
jz loc_4455E5  +
cmp dword ptr [esp+24h] 7 +
jz loc_4455F0  +
cmp dword ptr [esp+24h] 6474E552h +
jz loc_4455F0  +
cmp dword ptr [esp+24h] 1 +
jnz loc_4456FB  +
jmp loc_4455F0  +
***
mov edx [ebx+18h] +
test edx edx +
jnz loc_4456AB  +
mov eax [eax+18h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4456AB  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_4457AD  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
jnb loc_4456FB  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+10h] +
sbb ebp edx +
cmp ebp 0 +
mov edi [edi+14h] +
jg loc_4456FB  +
jl loc_4457AD  +
cmp eax edi +
jnb loc_4456FB  +
cmp dword ptr [esp+28h] 0 +
jz loc_4456AB  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_4456FB  +
sub edx eax +
cmp [esp+1Ch] edx +
jbe loc_4456FB  +
jmp loc_4456AB  +
***
mov edi [esp+10h] +
add dword ptr [esp+34h] 1 +
add edi 20h +
mov eax [esp+20h] +
cmp [esp+34h] eax +
jnz loc_445591  +
mov ebp [esp+14h] +
mov edi [esp+18h] +
mov eax [esp+30h] +
test eax eax +
jz loc_445946  +
movzx edx byte ptr [eax+18h] +
test dl 40h +
jz loc_445512  +
and edx 0FFFFFFBFh +
mov [eax+18h] dl +
mov eax [eax+0Ch] +
jmp loc_445801  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_44536E  +
jmp loc_445367  +
***
mov eax [esp+0B4h] +
mov edi [eax+4] +
mov eax [edi+1B0h] +
mov ecx edi +
cmp ebx [eax+10h] +
jnz loc_445891  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
jmp loc_444666  +
***
mov [esp+8] eax +
mov eax [esp+0B0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp] offset aBWarningSegmen +
mov [esp+4] eax +
call off_492AE8  +
jmp loc_445523  +
***
mov eax [edi] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_421650  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
mov eax [esp+0B4h] +
mov ecx [eax+4] +
jmp loc_444666  +
***
mov edi [esp+10h] +
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_445693  +
jmp loc_445690  +
***
mov dword ptr [esp+8] offset aRewrite_elf_pr +
mov dword ptr [esp+4] 19A1h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_420BD0  +
mov eax [esp+0B4h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax] 0 +
jmp loc_444624  +
***
mov eax [esp+20h] +
sub eax [esp+18h] +
test eax eax +
jle loc_445925  +
add [ebx+14h] eax +
lea edx [eax+esi] +
mov [ebx+18h] edx +
mov dword ptr [edi] 0 +
xor ebp ebp +
mov edi [esp+30h] +
jmp loc_444713  +
***
mov esi [esp+10h] +
mov ebx [esp+2Ch] +
mov [esi+0Ch] ebx +
jmp loc_445166  +
***
mov dword ptr [esp+8Ch] 0 +
cmp eax [esp+20h] +
jz loc_445E9D  +
mov edx eax +
shl edx 5 +
cmp dword ptr [ebp+edx+10h] 0 +
jnz loc_445980  +
add eax 1 +
jmp loc_445951  +
***
xor ebx ebx +
jmp loc_445842  +
***
mov ebp [esp+14h] +
mov edi [esp+18h] +
jmp loc_445512  +
***
mov eax 1 +
lea edi [esp+8Ch] +
add eax eax +
mov [esp+38h] edi +
mov edi ebp +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+60h] al +
mov eax [esp+20h] +
cmp [esp+3Ch] eax +
jz loc_445E7C  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+14h] eax +
jz loc_445B61  +
mov ebp [edi] +
mov [esp+10h] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+14h] 0 +
lea eax [ebp-6474E550h] +
mov [esp+30h] eax +
lea eax [ebp-1] +
mov [esp+34h] eax +
lea eax [ebp-6] +
mov [esp+40h] eax +
jmp loc_445A21  +
cmp ebp 7 +
jz loc_445A43  +
cmp ebp 6474E552h +
jz loc_445A43  +
cmp ebp 1 +
jz loc_445A43  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+10h] eax +
jz loc_445EA4  +
mov eax [esp+10h] +
mov esi [eax+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+2Ch] ebx +
jnz loc_4459FC  +
cmp dword ptr [esp+40h] 1 +
jbe loc_445A0E  +
and eax 2 +
mov [esp+18h] eax +
jnz loc_445A5A  +
cmp dword ptr [esp+30h] 2 +
jbe loc_445A0E  +
cmp dword ptr [esp+34h] 1 +
jbe loc_445A0E  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+24h] eax +
jz loc_445A98  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
ja loc_445A0E  +
xor edx edx +
sub ecx eax +
mov eax ecx +
mov ecx [esi+18h] +
sbb ebx edx +
mov edx ebx +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_445A0E  +
jl loc_445A98  +
cmp eax ecx +
ja loc_445A0E  +
cmp dword ptr [esp+18h] 0 +
lea esi [esi+0] +
jz loc_445ACE  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_445A0E  +
sub edx eax +
cmp dword ptr [esp+2Ch] 0 +
jz loc_445AC0  +
cmp dword ptr [esp+24h] 8 +
jz loc_445AEC  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_445A0E  +
cmp dword ptr [edi] 2 +
jz loc_445AF5  +
mov eax [esp+14h] +
test eax eax +
cmovz eax [esp+10h] +
add dword ptr [esp+28h] 1 +
mov [esp+14h] eax +
jmp loc_445A0E  +
***
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_445AC3  +
jmp loc_445AC0  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_445AD3  +
mov eax [edi+18h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_445AD3  +
cmp dword ptr [esp+24h] 8 +
jz loc_445B3A  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
jnb loc_445A0E  +
xor edx edx +
sub ecx eax +
mov eax [edi+14h] +
sbb ebx edx +
cmp ebx 0 +
jg loc_445A0E  +
jl loc_445B3A  +
cmp ecx eax +
jnb loc_445A0E  +
cmp dword ptr [esp+18h] 0 +
nop   +
jz loc_445AD3  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_445A0E  +
sub edx eax +
cmp [esp+2Ch] edx +
jbe loc_445A0E  +
jmp loc_445AD3  +
***
mov dword ptr [esp+24h] 0 +
mov eax 2Ch +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_425930  +
test eax eax +
mov ebp eax +
jz loc_4453E2  +
mov ebx [edi] +
mov dword ptr [eax] 0 +
mov edx [edi+1Ch] +
mov esi [edi+10h] +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [ebp+14h] edx +
mov [esp+2Ch] esi +
mov [ebp+0Ch] esi +
mov [ebp+8] eax +
movzx eax byte ptr [ebp+20h] +
mov dword ptr [ebp+10h] 0 +
or eax 1 +
and eax 0FFFFFFFDh +
or eax [esp+60h] +
mov edx eax +
or edx 4 +
mov [ebp+20h] dl +
lea edx [ebx-6474E551h] +
cmp edx 1 +
ja loc_445BE0  +
mov edx [edi+18h] +
or eax 0Ch +
mov [ebp+20h] al +
mov [ebp+18h] edx +
mov eax [edi+8] +
mov esi eax +
mov [esp+10h] eax +
xor eax eax +
test esi esi +
jnz loc_445BFF  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [edi+14h] eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 4 +
and eax 0FFFFFFCFh +
or eax edx +
cmp dword ptr [esp+1Ch] 0 +
mov [ebp+20h] al +
jz loc_445C20  +
cmp ebx 1 +
jz loc_445EC4  +
mov eax [esp+48h] +
mov edx [eax+14h] +
xor eax eax +
cmp [esp+10h] edx +
ja loc_445C4B  +
mov esi [esp+48h] +
mov ecx [esp+10h] +
add ecx [edi+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax edx +
cmp ecx eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 5 +
and eax 0FFFFFFDFh +
or eax edx +
cmp ebx 1 +
mov [ebp+20h] al +
jnz loc_445C6E  +
test al 20h +
mov eax [esp+1Ch] +
cmovnz eax ebx +
mov [esp+1Ch] eax +
cmp dword ptr [esp+24h] 0 +
jz loc_445ED1  +
mov eax [esp+14h] +
test eax eax +
jz loc_445ED1  +
mov esi [esp+10h] +
xor ecx ecx +
mov [esp+28h] ebp +
mov ebp eax +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+44h] 0 +
mov [esp+40h] esi +
lea esi [ebx-6474E550h] +
mov [esp+54h] esi +
lea esi [ebx-1] +
mov [esp+58h] esi +
lea esi [ebx-6] +
mov [esp+5Ch] esi +
mov [esp+18h] ebx +
mov [esp+4Ch] ecx +
jmp loc_445CEA  +
cmp dword ptr [esp+18h] 7 +
jz loc_445D08  +
cmp dword ptr [esp+18h] 6474E552h +
jz loc_445D08  +
cmp dword ptr [esp+18h] 1 +
jz loc_445D08  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_445EFA  +
mov esi [ebp+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+50h] ebx +
jnz loc_445CC7  +
cmp dword ptr [esp+5Ch] 1 +
jbe loc_445CDF  +
and eax 2 +
mov [esp+30h] eax +
jnz loc_445D1F  +
cmp dword ptr [esp+54h] 2 +
jbe loc_445CDF  +
cmp dword ptr [esp+58h] 1 +
jbe loc_445CDF  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+34h] eax +
jz loc_445D56  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
ja loc_445CDF  +
mov ecx [esi+18h] +
sub eax [esp+40h] +
sbb edx [esp+44h] +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_445CDF  +
jl loc_445D56  +
cmp eax ecx +
ja loc_445CDF  +
cmp dword ptr [esp+30h] 0 +
jz loc_445D8D  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_445CDF  +
sub edx eax +
cmp dword ptr [esp+50h] 0 +
jz loc_445D7F  +
cmp dword ptr [esp+34h] 8 +
jz loc_445E6A  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_445CDF  +
cmp dword ptr [esp+18h] 2 +
jz loc_445DFA  +
mov ebx [esp+4Ch] +
mov edx [esp+28h] +
mov eax [ebp+3Ch] +
lea ecx [ebx+1] +
mov [edx+ebx*4+28h] eax +
mov edx [ebp+14h] +
test dl 1 +
jz loc_445DE7  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_445F54  +
mov eax [ebp+20h] +
cmp eax [ebx+20h] +
cmovb ebx ebp +
mov [esp+14h] ebx +
and dl 2 +
jz loc_445F49  +
mov edx [esi+10h] +
sub edx [esp+10h] +
sub eax [esp+2Ch] +
cmp eax edx +
jz loc_445DE7  +
mov eax [esp+28h] +
and byte ptr [eax+20h] 0FDh +
cmp [esp+24h] ecx +
jz loc_445EFA  +
mov [esp+4Ch] ecx +
jmp loc_445CDF  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_445D94  +
mov eax [edi+18h] +
test eax eax +
mov [esp+50h] eax +
jz loc_445D94  +
cmp dword ptr [esp+34h] 8 +
jz loc_445E40  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
jnb loc_445CDF  +
sub eax [esp+40h] +
sbb edx [esp+44h] +
mov ecx [edi+14h] +
cmp edx 0 +
jg loc_445CDF  +
jl loc_445E40  +
cmp eax ecx +
jnb loc_445CDF  +
cmp dword ptr [esp+30h] 0 +
jz loc_445D94  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_445CDF  +
sub edx eax +
cmp [esp+50h] edx +
jbe loc_445CDF  +
jmp loc_445D94  +
***
xor eax eax +
cmp dword ptr [esp+18h] 7 +
jnz loc_445D82  +
jmp loc_445D7F  +
***
mov eax [esp+0B4h] +
mov edx [esp+8Ch] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax] edx +
jmp loc_444624  +
***
xor eax eax +
jmp loc_445985  +
***
mov eax [esp+28h] +
mov esi eax +
mov [esp+24h] eax +
test esi esi +
mov eax 2Ch +
lea edx ds:28h[esi*4] +
cmovnz eax edx +
jmp loc_445B6E  +
***
mov dword ptr [esp+1Ch] 1 +
jmp loc_445C6E  +
***
movzx eax byte ptr [ebp+20h] +
and eax 32h +
cmp al 2 +
jz loc_445F35  +
mov eax [esp+24h] +
add edi 20h +
add dword ptr [esp+3Ch] 1 +
mov [ebp+24h] eax +
mov eax [esp+38h] +
mov [esp+38h] ebp +
mov [eax] ebp +
jmp loc_4459A8  +
***
mov ebp [esp+28h] +
movzx eax byte ptr [ebp+20h] +
test al 10h +
jz loc_445F39  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_445F2E  +
mov edx [ebx+1Ch] +
and eax 32h +
sub edx [edi+0Ch] +
cmp al 2 +
mov [ebp+1Ch] edx +
jnz loc_445EDC  +
mov eax [esp+14h] +
mov eax [eax+20h] +
sub eax [esp+2Ch] +
mov [ebp+10h] eax +
jmp loc_445EDC  +
***
and eax 32h +
cmp al 2 +
jnz loc_445EDC  +
xor eax eax +
jmp loc_445F25  +
***
and eax 32h +
cmp al 2 +
jnz loc_445EDC  +
cmp dword ptr [esp+14h] 0 +
jnz loc_445F1E  +
jmp loc_445F35  +
***
mov edx [esi+0Ch] +
sub edx [edi+0Ch] +
jmp loc_445DD7  +
***
mov [esp+14h] ebp +
mov eax [ebp+20h] +
jmp loc_445DC7  +
***
mov eax [esp+4] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_445F73  +
mov eax 1 +
retn   +
***
mov edx [esp+0Ch] +
mov edx [edx+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_445F6D  +
mov ecx [esp+8] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_446033  +
mov dword ptr [esp+8] 0 +
mov ecx [esp+10h] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_446024  +
mov dword ptr [esp+10h] 0 +
mov edx [esp+8] +
test edx edx +
jz loc_445F6D  +
mov ecx [esp+8] +
mov edx [ecx+28h] +
test edx edx +
jz loc_445F6D  +
cmp dword ptr [esp+10h] 0 +
jz loc_445F6D  +
cmp dword ptr [ecx+10h] offset off_492990 +
jnz loc_445F6D  +
mov eax [eax+0A0h] +
cmp edx [eax+90Ch] +
jz loc_446046  +
cmp edx [eax+910h] +
jz loc_44604D  +
mov ecx [eax+934h] +
cmp edx [ecx+30h] +
jz loc_446054  +
cmp edx [ecx+2Ch] +
jz loc_44605B  +
mov eax [eax+208h] +
test eax eax +
jnz loc_44600E  +
jmp loc_446018  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_446018  +
cmp edx [eax+38h] +
jnz loc_446007  +
mov edx 0FFFFFF44h +
mov eax [esp+10h] +
mov [eax+28h] edx +
jmp loc_445F6D  +
***
mov ecx [edx+0A0h] +
test ecx ecx +
jnz loc_445FB2  +
jmp loc_445FAA  +
***
mov edx [edx+0A0h] +
test edx edx +
jnz loc_445F9B  +
jmp loc_445F93  +
***
mov edx 0FFFFFF40h +
jmp loc_446018  +
***
mov edx 0FFFFFF41h +
jmp loc_446018  +
***
mov edx 0FFFFFF42h +
jmp loc_446018  +
***
mov edx 0FFFFFF43h +
jmp loc_446018  +
***
mov eax [esp+4] +
mov edx [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [edx+60h] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
mov eax edx +
cmovg eax ecx +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov eax [edx+0A0h] +
mov ecx [eax+910h] +
test ecx ecx +
jz loc_446100  +
mov edx [edx+4] +
mov eax [eax+108h] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+5] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
cmovle ecx edx +
mov eax ecx +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_420C50  +
mov ecx 0FFFFFFFFh +
jmp loc_4460F3  +
***
mov eax [esp+8] +
mov eax [eax+4Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ecx [esp+2Ch] +
mov edi [esp+28h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
mov edx [edx+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] ecx +
mov [esp+4] esi +
mov [esp] eax +
call edx  +
test eax eax +
jz loc_4461A3  +
mov eax [esi+4Ch] +
mov ebx [esi+44h] +
test eax eax +
jz loc_446196  +
mov ecx edi +
xor edx edx +
jmp loc_446183  +
mov ebx esi +
add edx 1 +
add ecx 4 +
cmp edx eax +
lea esi [ebx+10h] +
mov [ecx-4] ebx +
jnz loc_446181  +
lea edi [edi+eax*4] +
mov dword ptr [edi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_44619C  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_4461E6  +
mov [ebx+7Ch] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_446229  +
mov [ebx+80h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edx [eax+0A0h] +
mov ebx [edx+910h] +
test ebx ebx +
jz loc_4462A2  +
mov ecx [eax+64h] +
test ecx ecx +
jz loc_44629B  +
mov edi 4 +
jmp loc_446267  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_446291  +
mov ebp [ecx+8Ch] +
cmp ebx [ebp+1Ch] +
jnz loc_446260  +
mov esi [ebp+4] +
cmp esi 4 +
jz loc_44627F  +
cmp esi 9 +
jnz loc_446260  +
mov eax [ecx+24h] +
xor edx edx +
mov ecx [ecx+0Ch] +
div  dword ptr [ebp+28h] +
test ecx ecx +
lea edi [edi+eax*4] +
jnz loc_446267  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 4 +
jmp loc_446293  +
***
mov dword ptr [esp] 5 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
jmp loc_446293  +
***
mov eax [edi+4] +
mov ebx [edi+64h] +
mov dword ptr [esp+18h] 0 +
mov eax [eax+1B0h] +
test ebx ebx +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov [esp+1Ch] eax +
jnz loc_446327  +
jmp loc_4463B0  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4463B0  +
mov eax [edi+0A0h] +
mov edx [eax+910h] +
mov eax [ebx+8Ch] +
cmp [eax+1Ch] edx +
jnz loc_446310  +
mov eax [eax+4] +
cmp eax 4 +
jz loc_44633F  +
cmp eax 9 +
jnz loc_446310  +
mov eax [esp+48h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+8] eax +
mov eax [esp+1Ch] +
call eax  +
test eax eax +
jz loc_4463C6  +
mov ecx [ebx+8Ch] +
xor edx edx +
mov eax [ebx+24h] +
mov ebp [ebx+44h] +
div  dword ptr [ecx+28h] +
test eax eax +
jle loc_44639D  +
mov esi [esp+44h] +
xor ecx ecx +
jmp loc_446382  +
mov ebp edx +
add ecx 1 +
add esi 4 +
cmp eax ecx +
lea edx [ebp+10h] +
mov [esi-4] ebp +
jnz loc_446380  +
mov ecx [esp+44h] +
lea esi [ecx+eax*4] +
mov [esp+44h] esi +
mov ebx [ebx+0Ch] +
add [esp+18h] eax +
test ebx ebx +
jnz loc_44631B  +
lea esi [esi+0] +
mov eax [esp+44h] +
mov dword ptr [eax] 0 +
mov eax [esp+18h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_4463BE  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_0] +
mov ebx [edi+0A0h] +
mov esi [ebx+91Ch] +
test esi esi +
jz loc_446470  +
mov ecx [ebx+1B8h] +
test ecx ecx +
jz loc_446417  +
mov eax [ebx+1B0h] +
cmp eax 0Fh +
ja loc_4465A2  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_version_ +
call off_492AE8  +
mov [esp+7Ch+var_7C] 11h +
call sub_420C50  +
mov eax [edi+0A0h] +
mov dword ptr [eax+244h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+23Ch] 0 +
test ebp ebp +
jz loc_446462  +
mov [esp+7Ch+var_7C] ebp +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
mov eax [ebx+918h] +
test eax eax +
jz loc_4464D6  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_446495  +
mov eax [ebx+1E8h] +
cmp eax 13h +
ja loc_4467B0  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_versio_0 +
call off_492AE8  +
mov [esp+7Ch+var_7C] 11h +
call sub_420C50  +
mov eax [edi+0A0h] +
mov dword ptr [eax+240h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+238h] 0 +
jmp loc_446456  +
mov ebp [esp+7Ch+arg_4] +
test ebp ebp +
jz loc_446595  +
cmp esi 3 +
mov eax 3 +
lea edx [esi+1] +
cmovnb eax edx +
mov [esp+7Ch+var_74] 28h +
mov esi eax +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_425A20  +
mov [ebx+240h] eax +
mov eax [edi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_446462  +
mov [eax+238h] esi +
mov eax [edi+0A0h] +
lea edx [esi+esi*4] +
mov ecx 1 +
mov eax [eax+240h] +
lea ebx [eax+edx*8-28h] +
xor edx edx +
mov eax 1 +
mov [ebx] ax +
mov [ebx+2] dx +
mov [ebx+4] si +
mov [ebx+6] cx +
mov [ebx+14h] edi +
mov [esp+7Ch+var_7C] edi +
call sub_457B40  +
test eax eax +
mov [ebx+18h] eax +
jz loc_4468B0  +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] edi +
call sub_425930  +
test eax eax +
mov [ebx+20h] eax +
jz loc_4468B0  +
mov edx [ebx+18h] +
mov [eax+8] edx +
add esp 7Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_446436  +
mov eax [ebx+1A8h] +
mov edx [ebx+1ACh] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_429F00  +
test eax eax +
jnz loc_446436  +
mov eax [ebx+1B0h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_429CF0  +
cmp eax [ebx+1B0h] +
jnz loc_446436  +
mov eax [ebx+1B8h] +
mov esi [edi+0A0h] +
mov [esp+7Ch+var_74] 20h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
call sub_425A20  +
mov [esi+244h] eax +
mov eax [edi+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
mov [esp+7Ch+var_68] ecx +
jz loc_44643C  +
mov edx [ebx+1B0h] +
lea edx [ebp+edx-10h] +
mov [esp+7Ch+var_60] edx +
mov edx [ebx+1B8h] +
test edx edx +
jz loc_446C73  +
mov [esp+7Ch+var_5C] ebp +
xor esi esi +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_64] ebx +
mov [esp+7Ch+arg_0] edi +
mov eax [esp+7Ch+var_5C] +
mov edi [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] eax +
call sub_43C680  +
mov ecx [esp+7Ch+arg_0] +
mov eax [esp+7Ch+var_64] +
mov [edi+10h] ecx +
mov ecx [edi+4] +
mov edx [eax+1B4h] +
test ecx ecx +
jnz loc_446943  +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+14h] offset unk_4B04D2 +
mov ecx [esp+7Ch+var_68] +
movzx eax word ptr [ecx+2] +
test ax ax +
jnz loc_446963  +
mov dword ptr [ecx+18h] 0 +
mov eax [esp+7Ch+var_68] +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_5C] +
mov ebp [eax+8] +
sub ecx edx +
mov [esp+7Ch+var_50] ecx +
cmp ebp ecx +
ja loc_44679D  +
add ebp edx +
mov ebx [eax+18h] +
cmp word ptr [eax+2] 0 +
jz loc_4468C5  +
xor edi edi +
jmp loc_44675E  +
mov dword ptr [ebx+10h] offset unk_4B04D2 +
movzx eax word ptr [ebx+6] +
mov dword ptr [ebx+14h] 0 +
cmp esi eax +
cmovb esi eax +
mov eax [ebx+0Ch] +
add edi 1 +
test eax eax +
jz loc_4468BD  +
mov ecx [esp+7Ch+var_68] +
movzx edx word ptr [ecx+2] +
cmp edi edx +
jnb loc_446747  +
lea ecx [ebx+18h] +
mov [ebx+14h] ecx +
mov ecx [esp+7Ch+var_60] +
sub ecx ebp +
cmp eax ecx +
ja loc_44679D  +
add ebp eax +
add ebx 18h +
cmp edi edx +
jnb loc_4468C5  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_43C770  +
mov ecx [ebx+8] +
mov eax [esp+7Ch+var_64] +
test ecx ecx +
mov edx [eax+1B4h] +
jz loc_446710  +
mov eax [esp+7Ch+arg_0] +
call loc_43CA80  +
test eax eax +
mov [ebx+10h] eax +
jnz loc_446717  +
mov ebp [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
jmp loc_446419  +
mov [esp+7Ch+var_7C] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_4468B0  +
mov eax [ebx+1E0h] +
mov edx [ebx+1E4h] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_429F00  +
test eax eax +
jnz loc_4464B4  +
mov eax [ebx+1E8h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_429CF0  +
cmp eax [ebx+1E8h] +
mov [esp+7Ch+var_5C] eax +
jnz loc_4464B4  +
mov eax [esp+7Ch+var_5C] +
lea eax [ebp+eax-14h] +
mov [esp+7Ch+var_60] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_446C66  +
xor edx edx +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_50] esi +
mov esi ebp +
xor ebp ebp +
mov [esp+7Ch+var_64] ebx +
mov ebx edx +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_68] eax +
jmp loc_446887  +
movzx eax ax +
cmp ebp eax +
cmovb ebp eax +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_446C1F  +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp eax ecx +
ja loc_4468A6  +
add esi eax +
mov eax [esp+7Ch+var_64] +
add ebx 1 +
cmp [eax+1F0h] ebx +
jbe loc_4469A3  +
mov eax [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] eax +
call sub_43C4C0  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jnz loc_446854  +
mov ebp [esp+7Ch+var_54] +
jmp loc_446497  +
xor ebp ebp +
mov eax [edi+0A0h] +
jmp loc_4464BA  +
mov eax [esp+7Ch+var_68] +
mov [eax+2] di +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+1Ch] 0 +
mov eax [eax+0Ch] +
test eax eax +
jz loc_446915  +
mov ecx [esp+7Ch+var_64] +
add [esp+7Ch+var_58] 1 +
mov edx [ecx+1B8h] +
cmp [esp+7Ch+var_58] edx +
jnb loc_4468F8  +
mov edi [esp+7Ch+var_68] +
mov ecx edi +
add ecx 20h +
mov [edi+1Ch] ecx +
cmp [esp+7Ch+var_50] eax +
jb loc_44679D  +
add [esp+7Ch+var_5C] eax +
add [esp+7Ch+var_68] 20h +
cmp [esp+7Ch+var_58] edx +
jb loc_446679  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
mov edx [esp+7Ch+var_58] +
mov [eax+23Ch] edx +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebx [edi+0A0h] +
jmp loc_446472  +
mov eax [esp+7Ch+arg_0] +
call loc_43CA80  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+14h] eax +
jnz loc_4466C2  +
jmp loc_44679D  +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 18h +
mov [esp+7Ch+var_7C] eax +
call sub_4258D0  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+18h] eax +
jnz loc_4466DA  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_44643C  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx eax +
mov ebp [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_4] +
test ecx ecx +
jz loc_4469CD  +
cmp esi [esp+7Ch+var_58] +
ja loc_4469C6  +
mov esi [esp+7Ch+var_58] +
add esi 1 +
mov [esp+7Ch+var_58] esi +
mov eax [esp+7Ch+var_58] +
mov edx [edi+0A0h] +
mov [esp+7Ch+var_74] 28h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_68] edx +
call sub_425A20  +
mov edx [esp+7Ch+var_68] +
mov [edx+240h] eax +
mov eax [edi+0A0h] +
mov edx [eax+240h] +
test edx edx +
jz loc_4464BA  +
mov ecx [esp+7Ch+var_58] +
mov [eax+238h] ecx +
mov eax [edi+0A0h] +
mov eax [eax+240h] +
mov [esp+7Ch+var_4C] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_446C04  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_68] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_50] ebp +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_54] ebp +
lea eax [ebp+eax-8] +
mov [esp+7Ch+var_60] eax +
mov [esp+7Ch+var_40] esi +
mov [esp+7Ch+var_5C] ebx +
mov eax [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] esi +
call sub_43C4C0  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jz loc_4468A6  +
mov edx [esp+7Ch+var_4C] +
movzx eax ax +
lea eax [eax+eax*4] +
lea eax [edx+eax*8-28h] +
mov ecx eax +
mov [esp+7Ch+var_64] eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [esi+10h] +
mov [ecx+14h] edi +
mov [ecx+10h] eax +
movzx eax word ptr [ecx+6] +
test ax ax +
jnz loc_446C34  +
mov dword ptr [ecx+20h] 0 +
mov ecx [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_50] +
mov esi [ecx+0Ch] +
sub eax edx +
cmp esi eax +
ja loc_4468A6  +
mov eax ecx +
mov ecx [ecx+20h] +
add esi edx +
xor ebp ebp +
cmp word ptr [eax+6] 0 +
mov [esp+7Ch+var_48] ecx +
lea ebx [ecx+10h] +
jnz loc_446B3F  +
jmp loc_446B8E  +
mov dword ptr [ebx-8] offset unk_4B04D2 +
add ebp 1 +
test eax eax +
mov dword ptr [ebx-4] 0 +
jz loc_446B86  +
mov ecx [esp+7Ch+var_64] +
movzx edx word ptr [ecx+6] +
cmp ebp edx +
jnb loc_446B28  +
mov [ebx-4] ebx +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp ecx eax +
jb loc_4468A6  +
add esi eax +
add ebx 10h +
cmp ebp edx +
jnb loc_446B8E  +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] esi +
call eax  +
lea edx [esi+4] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [ebx-10h] +
mov edx [esp+7Ch+var_5C] +
test ecx ecx +
mov edx [edx+1ECh] +
mov [ebx-0Ch] eax +
jz loc_446B04  +
mov eax edi +
call loc_43CA80  +
test eax eax +
mov [ebx-8] eax +
jz loc_4468A6  +
mov eax [ebx-0Ch] +
jmp loc_446B0B  +
mov eax [esp+7Ch+var_64] +
mov [eax+6] bp +
mov eax [esp+7Ch+var_64] +
cmp word ptr [eax+6] 0 +
mov dword ptr [eax+18h] 0 +
jz loc_446BAB  +
mov ecx eax +
mov eax [eax+20h] +
mov eax [eax+8] +
mov [ecx+18h] eax +
mov eax [esp+7Ch+var_64] +
mov edx [eax+10h] +
mov dword ptr [eax+1Ch] 0 +
test edx edx +
jz loc_446BFC  +
sub eax [esp+7Ch+var_4C] +
sar eax 3 +
imul eax eax +
add eax 1 +
cmp [esp+7Ch+var_58] eax +
jbe loc_446BDF  +
mov ecx [esp+7Ch+var_64] +
mov eax ecx +
add eax 28h +
mov [ecx+1Ch] eax +
mov eax [esp+7Ch+var_5C] +
add [esp+7Ch+var_44] 1 +
mov ecx [esp+7Ch+var_44] +
add [esp+7Ch+var_50] edx +
cmp [eax+1F0h] ecx +
ja loc_446A61  +
mov ebp [esp+7Ch+var_54] +
mov esi [esp+7Ch+var_40] +
mov [esp+7Ch+var_7C] ebp +
call free  +
cmp [esp+7Ch+arg_4] 0 +
jz loc_446595  +
jmp loc_446529  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_64] +
mov ebp [esp+7Ch+var_54] +
jmp loc_4469B1  +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_4258D0  +
mov edx [esp+7Ch+var_64] +
test eax eax +
mov [edx+20h] eax +
jnz loc_446ACF  +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_4464BA  +
mov [esp+7Ch+var_58] 0 +
jmp loc_4469B1  +
mov [esp+7Ch+var_58] 0 +
xor esi esi +
jmp loc_446926  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov ebp [esp+74h] +
mov dword ptr [esp+30h] 0 +
mov eax [esi+0A0h] +
mov ebx [eax+44h] +
test ebx ebx +
jz loc_446EA8  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 11h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aProgramHeader +
call fwrite  +
mov eax [esi+0A0h] +
mov eax [eax+30h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_446EA8  +
xor edi edi +
jmp loc_446D11  +
mov [esp+4] ebp +
add edi 1 +
add ebx 20h +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp edi [esp+1Ch] +
jz loc_446EA8  +
mov eax [ebx] +
mov [esp+20h] eax +
call near ptr dword_43B060  +
test eax eax +
jz loc_447006  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a8sOff0x +
mov [esp] ebp +
call fprintf  +
mov eax [ebx+8] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_421580  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVaddr0x +
call fwrite  +
mov eax [ebx+0Ch] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_421580  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aPaddr0x +
call fwrite  +
mov eax [ebx+10h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_421580  +
mov eax [ebx+1Ch] +
mov [esp] eax +
call sub_42BE10  +
mov dword ptr [esp+4] offset aAlign2U +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aFilesz0x +
call fwrite  +
mov eax [ebx+14h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_421580  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMemsz0x +
call fwrite  +
mov eax [ebx+18h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_421580  +
mov eax [ebx+4] +
mov dword ptr [esp+4] offset aFlagsCCC +
mov [esp] ebp +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFB5h +
add ecx 78h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFB6h +
add edx 77h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFBBh +
add eax 72h +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+4] +
and eax 0FFFFFFF8h +
jz loc_446CF1  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aLx +
mov [esp] ebp +
call fprintf  +
jmp loc_446CF1  +
***
mov dword ptr [esp+4] offset a_dynamic_1 +
mov [esp] esi +
call sub_41E710  +
test eax eax +
mov edi eax +
jz loc_447040  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aDynamicSection +
call fwrite  +
lea eax [esp+30h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] esi +
call sub_41F070  +
mov ebx [esp+30h] +
test eax eax +
jnz loc_446F14  +
test ebx ebx +
jz loc_446F0A  +
mov [esp] ebx +
call free  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] edi +
mov [esp] esi +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
jz loc_4470CA  +
mov edx [esi+0A0h] +
mov ebx [esp+30h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+2Ch] eax +
mov eax [esi+4] +
mov edx [eax+1B0h] +
mov eax [edx+174h] +
movzx ecx byte ptr [eax+6] +
mov eax [eax+30h] +
mov [esp+1Ch] ecx +
mov [esp+24h] eax +
mov eax [edi+24h] +
cmp ecx eax +
ja loc_446EFE  +
add eax ebx +
mov [esp+20h] eax +
sub [esp+20h] ecx +
cmp ebx [esp+20h] +
ja loc_44702F  +
mov [esp+28h] edx +
lea edi [esp+34h] +
mov eax [esp+24h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
mov edx [esp+34h] +
test edx edx +
jz loc_44702B  +
cmp edx 1Dh +
jz loc_447658  +
ja loc_4470D3  +
cmp edx 0Eh +
jz loc_44764E  +
nop   +
lea esi [esi+0] +
ja loc_447130  +
cmp edx 7 +
jz loc_447694  +
nop   +
ja loc_44734E  +
cmp edx 3 +
jz loc_44768A  +
nop   +
jbe loc_4475F8  +
cmp edx 5 +
mov eax offset aStrtab +
jz loc_447374  +
mov eax offset aHash +
mov edx offset aSymtab +
cmova eax edx +
jmp loc_447374  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_446D24  +
***
mov ebx [esp+30h] +
mov [esp] ebx +
call free  +
mov dword ptr [esp+30h] 0 +
nop   +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
test edx edx +
jz loc_44705A  +
mov edi [eax+240h] +
test edi edi +
jz loc_447091  +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_447087  +
test edx edx +
jnz loc_447265  +
mov eax [eax+91Ch] +
test eax eax +
jnz loc_4471BD  +
add esp 5Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+244h] +
test ecx ecx +
jnz loc_447064  +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_4463E0  +
test eax eax +
jz loc_446F0A  +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
jmp loc_447064  +
***
mov edx [esp+2Ch] +
mov eax esi +
call loc_43CA80  +
test eax eax +
jnz loc_447579  +
mov ebx [esp+30h] +
jmp loc_446EFE  +
***
cmp edx 6FFFFEFCh +
jz loc_447662  +
ja loc_447176  +
cmp edx 6FFFFDFBh +
jz loc_447680  +
jbe loc_447430  +
cmp edx 6FFFFDFFh +
jz loc_447676  +
ja loc_4474C6  +
cmp edx 6FFFFDFDh +
mov eax offset aPosflag_1 +
jz loc_447374  +
mov eax offset aFeature +
mov edx offset aSyminsz +
cmova eax edx +
jmp loc_447374  +
cmp edx 15h +
jz loc_4476A8  +
jbe loc_447475  +
cmp edx 19h +
jz loc_44769E  +
nop   +
lea esi [esi+0] +
ja loc_4474A6  +
cmp edx 17h +
mov eax offset aJmprel +
jz loc_447374  +
mov eax offset aTextrel +
mov edx offset aBind_now +
cmova eax edx +
jmp loc_447374  +
cmp edx 6FFFFFFBh +
jz loc_4476D0  +
jbe loc_4473EC  +
cmp edx 6FFFFFFFh +
jz loc_4476C6  +
ja loc_44752F  +
cmp edx 6FFFFFFDh +
mov eax offset aVerdefnum +
jz loc_447374  +
mov eax offset aVerdef +
mov ecx offset aVerneed +
cmova eax ecx +
jmp loc_447374  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 15h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionReferen +
call fwrite  +
mov eax [esi+0A0h] +
mov edi [eax+244h] +
test edi edi +
jz loc_44707A  +
mov esi offset aCorrupt +
mov eax [edi+14h] +
mov dword ptr [esp+4] offset aRequiredFromS +
mov [esp] ebp +
test eax eax +
cmovz eax esi +
mov [esp+8] eax +
call fprintf  +
mov ebx [edi+18h] +
test ebx ebx +
jz loc_447259  +
lea esi [esi+0] +
mov eax [ebx+10h] +
mov edx [ebx] +
test eax eax +
cmovz eax esi +
mov [esp+14h] eax +
movzx eax word ptr [ebx+6] +
mov [esp+10h] eax +
movzx eax word ptr [ebx+4] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset a0x8_8lx0x2_2x2 +
mov [esp] ebp +
mov [esp+0Ch] eax +
call fprintf  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_447220  +
mov edi [edi+1Ch] +
test edi edi +
jnz loc_4471F6  +
jmp loc_44707A  +
***
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 16h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionDefinit +
call fwrite  +
mov eax [esi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_44706C  +
lea esi [esi+0] +
mov eax [ebx+18h] +
mov ecx offset aCorrupt +
mov edx [ebx+8] +
test eax eax +
cmovz eax ecx +
mov [esp+14h] eax +
mov [esp+10h] edx +
movzx eax word ptr [ebx+2] +
mov [esp+0Ch] eax +
movzx eax word ptr [ebx+4] +
mov dword ptr [esp+4] offset aD0x2_2x0x8_8lx +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+20h] +
test eax eax +
jz loc_447338  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_447338  +
mov [esp+4] ebp +
mov dword ptr [esp] 9 +
call fputc  +
mov eax [ebx+20h] +
mov edi [eax+0Ch] +
test edi edi +
jz loc_447328  +
mov eax [edi+8] +
mov ecx offset aCorrupt +
mov dword ptr [esp+4] offset aS_22 +
mov [esp] ebp +
test eax eax +
cmovz eax ecx +
mov [esp+8] eax +
call fprintf  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_447300  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_4472A0  +
mov eax [esi+0A0h] +
jmp loc_44706C  +
***
cmp edx 0Ah +
jz loc_4476BC  +
jbe loc_4475D7  +
cmp edx 0Ch +
mov eax offset aInit_0 +
jz loc_447374  +
mov eax offset aSyment +
mov edx offset aFini +
cmova eax edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a0x +
call fwrite  +
mov eax [esp+38h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_421580  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
add ebx [esp+1Ch] +
cmp ebx [esp+20h] +
ja loc_44702B  +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov [esp+28h] eax +
jmp loc_446F83  +
***
cmp edx 6FFFFEFFh +
jz loc_447644  +
jbe loc_4475B0  +
cmp edx 6FFFFFF9h +
mov eax offset aRelacount +
jz loc_447374  +
mov eax offset aRelcount +
ja loc_447374  +
cmp edx 6FFFFFF0h +
mov eax offset aVersym +
jz loc_447374  +
jmp loc_4474E9  +
cmp edx 21h +
jz loc_44763A  +
lea esi [esi+0] +
jbe loc_44758A  +
cmp edx 6FFFFDF9h +
mov eax offset aPltpadsz +
jz loc_447374  +
mov eax offset aMoveent +
ja loc_447374  +
cmp edx 6FFFFDF8h +
mov eax offset aChecksum +
jz loc_447374  +
jmp loc_4474E9  +
cmp edx 11h +
jz loc_44766C  +
nop   +
jbe loc_447614  +
cmp edx 13h +
mov eax offset aRelent +
jz loc_447374  +
mov eax offset aRelsz +
mov edx offset aPltrel +
cmova eax edx +
jmp loc_447374  +
***
cmp edx 1Bh +
mov eax offset aInit_arraysz +
jz loc_447374  +
mov eax offset aFini_array +
mov edx offset aFini_arraysz +
cmova eax edx +
jmp loc_447374  +
***
cmp edx 6FFFFEFAh +
jz loc_447630  +
ja loc_4476B2  +
cmp edx 6FFFFEF5h +
mov eax offset aGnu_hash +
jz loc_447374  +
mov eax [esp+28h] +
mov ecx [eax+0E8h] +
mov eax offset unk_4B04D2 +
test ecx ecx +
jz loc_447501  +
mov [esp] edx +
call ecx  +
cmp byte ptr [eax] 0 +
jnz loc_447374  +
mov eax [esp+34h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_447374  +
***
cmp edx 7FFFFFFEh +
jz loc_4476E4  +
cmp edx 7FFFFFFFh +
jz loc_4476DA  +
cmp edx 7FFFFFFDh +
jnz loc_4474E9  +
mov eax offset aAuxiliary +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov ecx [esp+38h] +
mov eax offset unk_4B04D2 +
test ecx ecx +
jnz loc_4470B7  +
mov [esp+4] ebp +
mov [esp] eax +
call fputs  +
jmp loc_4473BC  +
***
cmp edx 1Eh +
mov eax offset aFlags +
jz loc_447374  +
cmp edx 20h +
mov eax offset aPreinit_array +
jz loc_447374  +
jmp loc_4474E9  +
***
cmp edx 6FFFFEFDh +
mov eax offset aPltpad +
jz loc_447374  +
cmp edx 6FFFFEFEh +
mov eax offset aMovetab +
jz loc_447374  +
jmp loc_4474E9  +
***
cmp edx 8 +
mov eax offset aRelasz +
jz loc_447374  +
cmp edx 9 +
mov eax offset aRelaent +
jz loc_447374  +
jmp loc_4474E9  +
***
cmp edx 1 +
jz loc_4476EE  +
cmp edx 2 +
mov eax offset aPltrelsz +
jz loc_447374  +
jmp loc_4474E9  +
***
cmp edx 0Fh +
jz loc_4476F8  +
cmp edx 10h +
mov eax offset aSymbolic +
jz loc_447374  +
jmp loc_4474E9  +
***
mov eax offset aConfig +
jmp loc_447554  +
***
mov eax offset aPreinit_arrays +
jmp loc_447374  +
***
mov eax offset aSyminfo +
jmp loc_447374  +
***
mov eax offset aSoname +
jmp loc_447554  +
***
mov eax offset aRunpath +
jmp loc_447554  +
***
mov eax offset aAudit +
jmp loc_447554  +
***
mov eax offset aRel +
jmp loc_447374  +
***
mov eax offset aSyminent +
jmp loc_447374  +
***
mov eax offset aMovesz +
jmp loc_447374  +
***
mov eax offset aPltgot +
jmp loc_447374  +
***
mov eax offset aRela +
jmp loc_447374  +
***
mov eax offset aInit_array +
jmp loc_447374  +
***
mov eax offset aDebug_0 +
jmp loc_447374  +
***
mov eax offset aDepaudit +
jmp loc_447554  +
***
mov eax offset aStrsz +
jmp loc_447374  +
***
mov eax offset aVerneednum +
jmp loc_447374  +
***
mov eax offset aFlags_1 +
jmp loc_447374  +
***
mov eax offset aFilter +
jmp loc_447554  +
***
mov eax offset aUsed +
jmp loc_447374  +
***
mov eax offset aNeeded +
jmp loc_447554  +
***
mov eax offset aRpath +
jmp loc_447554  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 34h +
mov [esp] ebx +
call sub_425930  +
test eax eax +
jz loc_44772E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_423C80  +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_4477D3  +
cmp cl 5Fh +
jz loc_4477C8  +
xor eax eax +
cmp cl 4Ch +
jnz loc_4477D0  +
movzx ecx byte ptr [edx+1] +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_4477D0  +
lea esi [edx+2] +
movzx edx byte ptr [edx+2] +
test dl dl +
jz loc_4477D0  +
mov ecx esi +
jmp loc_4477AB  +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_4477CE  +
add ecx 1 +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_4477D0  +
lea ebx [edx-1] +
cmp bl 1 +
ja loc_447797  +
cmp dl 1 +
mov eax 1 +
jnz loc_447797  +
cmp ecx esi +
jnz loc_447797  +
mov eax 1 +
jmp loc_4477D0  +
cmp byte ptr [edx+1] 2Eh +
jz loc_4477E6  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
movzx eax byte ptr [edx+1] +
cmp al 4Ch +
jz loc_4477C1  +
cmp al 2Eh +
setz al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
cmp byte ptr [edx+2] 4Ch +
jnz loc_4477CE  +
cmp byte ptr [edx+3] 5Fh +
jnz loc_4477CE  +
jmp loc_4477C1  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_elf_get_l +
mov dword ptr [esp+4] 1FE5h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_420BD0  +
nop   +
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx] +
cmp ecx eax +
jz loc_447844  +
test eax eax +
jz loc_447844  +
test ecx ecx +
jnz loc_447856  +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov [esp+8] edx +
pop ebx  +
jmp sub_4237A0  +
***
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov edi [esp+64h] +
mov esi [esp+70h] +
mov ebx [esp+74h] +
mov eax [ebp+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_4B3E80 +
mov [esp+18h] ebx +
add eax 230h +
mov [esp+2Ch] eax +
mov eax [esp+7Ch] +
mov [esp+14h] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
mov eax [esp+6Ch] +
mov [esp+10h] eax +
mov eax [esp+68h] +
mov [esp+0Ch] eax +
call sub_465C10  +
test eax eax +
jz loc_4478F0  +
mov ecx [ebx] +
test ecx ecx +
jz loc_4479B2  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+78h] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+18h] eax +
mov eax [esp+6Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_4687D0  +
test eax eax +
jnz loc_4478D6  +
mov eax [ebp+0A0h] +
mov [esp+18h] ebx +
mov [esp+14h] esi +
mov [esp+4] edi +
add eax 228h +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
lea eax [esp+3Ch] +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_423DD0  +
test eax eax +
jz loc_447A10  +
mov ecx [esp+3Ch] +
test ecx ecx +
jnz loc_4479F0  +
test edi edi +
jz loc_447A10  +
mov eax [esp+6Ch] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp] ebp +
mov [esp+8] eax +
call sub_465A00  +
test eax eax +
jz loc_447A10  +
mov eax [esp+78h] +
mov dword ptr [eax] 0 +
jmp loc_4478E0  +
***
mov edx [esi] +
xor eax eax +
mov [esp+14h] ebx +
mov [esp+4] edi +
mov [esp] ebp +
test edx edx +
cmovz eax esi +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_465A00  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
test edx edx +
jnz loc_4478E0  +
mov eax [esp+78h] +
mov eax [eax] +
test eax eax +
jz loc_447973  +
jmp loc_4478E0  +
***
xor eax eax +
jmp loc_4478E5  +
***
sub esp 3Ch +
mov eax [esp+40h] +
mov ecx [eax+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_4B3E80 +
mov dword ptr [esp+20h] 0 +
lea edx [ecx+230h] +
mov [esp+2Ch] edx +
mov edx [esp+50h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+1Ch] edx +
mov edx [esp+4Ch] +
mov [esp] eax +
mov [esp+14h] edx +
mov edx [esp+48h] +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call sub_465C10  +
add esp 3Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+30h] +
mov ecx [eax+0A0h] +
mov [esp] eax +
lea edx [ecx+230h] +
mov [esp+10h] edx +
mov edx [esp+3Ch] +
mov [esp+0Ch] edx +
mov edx [esp+38h] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+4] edx +
call sub_465170  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
movzx ecx byte ptr [edx] +
mov eax [eax+1B0h] +
and ecx 3 +
cmp cl 2 +
mov edi [eax+174h] +
movzx esi byte ptr [edi] +
mov eax esi +
movzx eax al +
jz loc_447B2F  +
mov eax [ebx+0A0h] +
mov ebp [eax+934h] +
mov eax [ebp+1Ch] +
cmp eax 0FFFFFFFFh +
jz loc_447B37  +
mov edx esi +
movzx esi dl +
mov [ebp+1Ch] eax +
add eax esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [ebp+0] +
test ecx ecx +
jz loc_447B50  +
movzx edi byte ptr [edi+1] +
xor eax eax +
mov ecx [ecx] +
add eax edi +
test ecx ecx +
jnz loc_447B44  +
test eax eax +
jnz loc_447B25  +
mov eax ebx +
call sub_43B350  +
mov edx [ebx+0A0h] +
mov ebp [edx+934h] +
jmp loc_447B25  +
***
add esi eax +
adc edi edx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] ebx +
call sub_429F00  +
test eax eax +
jz loc_447C62  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
add esi ebp +
mov [esp] esi +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_440CB0  +
test eax eax +
jnz loc_447B8D  +
jmp loc_447BD6  +
***
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_429DA0  +
cmp [esp+44h] eax +
setz al  +
add esp 1Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov eax [ebx] +
mov ecx [esi+4] +
mov eax [eax] +
mov eax [eax] +
cmp [eax+4] ecx +
jz loc_447E48  +
mov eax [ebx+0Ch] +
mov edx [eax+10h] +
mov ecx [eax+0Ch] +
test edx edx +
lea edx [ecx-8] +
jz loc_447D10  +
cmp edx 38h +
ja loc_447D38  +
jmp ds:off_4B12AC[edx*4]  +
cmp edx 38h +
ja loc_447D38  +
jmp ds:off_4B1390[edx*4]  +
mov eax 6 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_42CF60  +
test eax eax +
jnz loc_447D95  +
mov eax [ebx+0Ch] +
mov eax [eax+20h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] offset aBUnsupportedRe +
mov [esp+14h+var_C] eax +
call off_492AE8  +
mov [esp+14h+var_14] 11h +
call sub_420C50  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax 0Ch +
lea esi [esi+0] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_42CF60  +
mov ecx [ebx+0Ch] +
mov edx [eax+30h] +
cmp [ecx+30h] edx +
jz loc_447D95  +
test edx edx +
mov edx [ebx+4] +
jz loc_447E40  +
add [ebx+8] edx +
mov [ebx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax 0Dh +
jmp loc_447D70  +
mov eax 1 +
jmp loc_447D25  +
mov eax 2 +
jmp loc_447D25  +
mov eax 3 +
jmp loc_447D25  +
mov eax 5 +
jmp loc_447D25  +
mov eax 7 +
jmp loc_447D25  +
mov eax 8 +
jmp loc_447D70  +
mov eax 9 +
jmp loc_447D70  +
mov eax 0Ah +
jmp loc_447D70  +
mov eax 0Bh +
jmp loc_447D70  +
sub [ebx+8] edx +
jmp loc_447D95  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov esi [ebx+0A0h] +
and eax 7 +
cmp al 1 +
jz loc_447E88  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_429840  +
***
test esi esi +
jz loc_447E7A  +
mov eax [esi+934h] +
test eax eax +
jz loc_447EA5  +
mov eax [eax+4] +
test eax eax +
jz loc_447EA5  +
mov [esp] eax +
call sub_466E20  +
add esi 230h +
mov [esp+4] esi +
mov [esp] ebx +
call sub_4651C0  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_429840  +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_0] +
mov esi [esp+9Ch+arg_C] +
mov edi [esp+9Ch+arg_10] +
mov eax [ebx+0A0h] +
mov edx [eax+930h] +
mov eax [edx+8] +
test eax eax +
jnz loc_447F15  +
mov eax [edx+4] +
mov [esp+9Ch+var_90] eax +
mov eax [esp+9Ch+arg_4] +
lea ebp [esp+9Ch+var_70] +
mov [esp+9Ch+var_98] offset aSD +
mov [esp+9Ch+var_9C] ebp +
mov [esp+9Ch+var_94] eax +
call sprintf  +
mov eax ebp +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_447F3A  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
sub eax ebp +
lea ecx [eax+1] +
mov [esp+9Ch+var_98] ecx +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_80] ecx +
call sub_425850  +
mov ecx [esp+9Ch+var_80] +
test eax eax +
jz loc_447FF0  +
mov [esp+9Ch+var_94] ecx +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] eax +
mov [esp+9Ch+var_80] eax +
call memcpy  +
mov edx [esp+9Ch+var_80] +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_98] edx +
call sub_41EAF0  +
test eax eax +
jz loc_447FF0  +
mov edx [esp+9Ch+arg_8] +
mov ecx eax +
mov [eax+50h] esi +
mov [eax+54h] edi +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx [esp+9Ch+arg_4] +
mov eax ebx +
call sub_43BB10  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_4] +
mov esi [esp+9Ch+arg_0] +
mov eax [ebx+8] +
cmp eax 8 +
jz loc_4480D0  +
jbe loc_448088  +
cmp eax 9 +
jz loc_448060  +
cmp eax 0Ah +
nop   +
jnz loc_4480C0  +
mov eax dword_492EA0 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg2 +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_43BB80  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_492EA0 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_43BB80  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 7 +
jnz loc_4480C0  +
mov edi [ebx+14h] +
mov eax [ebx+4] +
mov [esp+9Ch+var_9C] esi +
mov [esp+9Ch+var_8C] 0 +
mov [esp+9Ch+var_90] edi +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_info +
call sub_447EE0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+0A0h] +
mov edi [ebx+10h] +
mov ebp [eax+930h] +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
lea edx [edi+4] +
mov [ebp+4] eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
lea edx [edi+8] +
add edi 0Eh +
mov dword_492EA0 eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
mov ebp eax +
mov eax [esi+4] +
mov eax [eax+34h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
test ax ax +
jle loc_448210  +
mov edx [esi+0A0h] +
cwde   +
mov edx [edx+930h] +
mov [edx] eax +
mov eax dword_492EA0 +
mov [edx+8] eax +
and ebp 80h +
jz loc_448155  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
lea edi [esp+9Ch+var_70] +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_stat +
mov [esp+9Ch+var_9C] edi +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_44816F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx edi +
add edx 1 +
mov [esp+9Ch+var_98] edx +
mov [esp+9Ch+var_9C] esi +
call sub_425850  +
test eax eax +
mov ebp eax +
jz loc_448220  +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] eax +
call strcpy  +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] esi +
call sub_41EAF0  +
test eax eax +
jz loc_448220  +
mov edx [ebx+4] +
mov ecx eax +
mov edi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx offset a_qnx_core_st_0 +
mov [eax+50h] edi +
mov eax esi +
call sub_43BB10  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_492EA0 +
jmp loc_44813E  +
xor eax eax +
jmp loc_448053  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov eax [esp+4Ch+arg_0] +
mov edx [ebx+8] +
mov eax [eax+4] +
cmp edx 304h +
mov ecx [eax+1B0h] +
jz loc_448B30  +
jbe loc_4482F8  +
cmp edx 400h +
jz loc_448651  +
ja loc_448382  +
cmp edx 307h +
jz loc_448855  +
nop   +
lea esi [esi+0] +
jbe loc_448500  +
cmp edx 309h +
jz loc_448A30  +
jb loc_448958  +
cmp edx 30Ah +
jnz loc_448411  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsHi +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp edx 100h +
jz loc_448B84  +
jbe loc_4483E7  +
cmp edx 300h +
jz loc_4488B0  +
jbe loc_448488  +
cmp edx 302h +
jz loc_448A84  +
ja loc_448724  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Timer +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp edx 403h +
jz loc_448904  +
nop   +
jbe loc_448420  +
cmp edx 46E62B7Fh +
jz loc_448AD8  +
cmp edx 53494749h +
jz loc_448824  +
cmp edx 46494C45h +
jnz loc_448411  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxcor +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp edx 3 +
jz loc_448A11  +
jbe loc_448565  +
cmp edx 0Dh +
jz loc_448A11  +
cmp edx 12h +
jz loc_4485B0  +
cmp edx 6 +
jz loc_4489B0  +
mov ebp 1 +
jmp loc_4485A3  +
cmp edx 401h +
jz loc_4486D0  +
cmp edx 402h +
jnz loc_448411  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwBre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp edx 102h +
jz loc_4487D0  +
cmp edx 202h +
jnz loc_448411  +
mov eax [ebx] +
cmp eax 6 +
jz loc_448BD8  +
cmp eax 8 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aFreebsd +
mov ecx 8 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXstate +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp edx 305h +
jz loc_448778  +
cmp edx 306h +
jnz loc_448411  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390LastBr +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp edx 1 +
jz loc_4486A5  +
cmp edx 2 +
jnz loc_448411  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_reg2 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+4] 2D7h +
jbe loc_448411  +
mov esi [ebx+0Ch] +
mov edi offset aWin32 +
mov ecx 5 +
cmps   +
jnz loc_448411  +
mov edx [ebx+10h] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
cmp eax 2 +
jz loc_448CA5  +
cmp eax 3 +
jz loc_448BFF  +
cmp eax 1 +
jnz loc_448411  +
mov eax [esp+4Ch+arg_0] +
mov ebp 1 +
mov edi [ebx+10h] +
mov eax [eax+0A0h] +
lea edx [edi+8] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [ebx+10h] +
add edx 0Ch +
mov [esi+4] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+0A0h] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esi] eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regArmVfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
mov eax [ecx+0FCh] +
mov ebp 1 +
test eax eax +
jz loc_4485A3  +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call eax  +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchTls +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todpre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Prefix +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVsx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxc_0 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390System +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390HighGp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov esi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwWat +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Tdb +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
mov eax [esp+4Ch+arg_0] +
xor ebp ebp +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] offset a_auxv +
mov [esp+4Ch+var_4C] eax +
call sub_41EAF0  +
test eax eax +
mov esi eax +
jz loc_4485A3  +
mov eax [ebx+4] +
mov bp 1 +
mov [esi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_421130  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [esi+40h] eax +
jmp loc_4485A3  +
mov eax [ecx+100h] +
mov ebp 1 +
test eax eax +
jnz loc_4486B8  +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsLo +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todcmp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Ctrs +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4485A3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVmx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_447EE0  +
mov ebp eax +
jmp loc_4485A3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
mov ebp 1 +
cmps   +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_4485A3  +
jmp loc_4484CE  +
mov eax [esp+4Ch+arg_0] +
lea esi [esp+4Ch+var_2A] +
mov edi [ebx+10h] +
mov eax [eax+4] +
lea edx [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_module08lx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_448D7F  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_41EAF0  +
test eax eax +
jz loc_448D7F  +
mov edx [ebx+4] +
mov ebp 1 +
mov esi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov [eax+50h] esi +
jmp loc_4485A3  +
mov eax [esp+4Ch+arg_0] +
mov esi [ebx+10h] +
mov eax [eax+4] +
lea edx [esi+8] +
lea esi [esp+4Ch+var_2A] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_regLd +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_425850  +
test eax eax +
mov edi eax +
jz loc_448D7F  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_41EAF0  +
test eax eax +
mov esi eax +
jz loc_448D7F  +
mov dword ptr [eax+24h] 2CCh +
mov eax [ebx+14h] +
mov edx [ebx+10h] +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+40h] 2 +
add eax 0Ch +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
add edx 8 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
test eax eax +
jz loc_448411  +
mov eax [esp+4Ch+arg_0] +
mov ecx esi +
mov edx offset a_reg +
call sub_43BB10  +
test eax eax +
setnz al  +
movzx eax al +
mov ebp eax +
jmp loc_4485A3  +
xor ebp ebp +
jmp loc_4485A3  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_8] ebx +
call memchr  +
mov edx eax +
sub edx edi +
test eax eax +
cmovnz ebx edx +
lea eax [ebx+1] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_448DE8  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call memcpy  +
mov byte ptr [esi+ebx] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_448E00  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov edx [ebx+8] +
cmp edx 0Ah +
jz loc_448EF8  +
cmp edx 14h +
jz loc_448F70  +
cmp edx 15h +
jz loc_448FA0  +
cmp edx 16h +
jz loc_448FD0  +
cmp edx 0Bh +
jz loc_448EA0  +
cmp edx 17h +
mov edi 1 +
jz loc_448E50  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_wcookie +
mov [esp+2Ch+var_2C] esi +
call sub_41EAF0  +
test eax eax +
mov ebp eax +
jz loc_449000  +
mov eax [ebx+4] +
mov [ebp+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [ebp+54h] 0 +
mov [ebp+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_421130  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [ebp+40h] eax +
jmp loc_448E45  +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_auxv +
mov [esp+2Ch+var_2C] esi +
call sub_41EAF0  +
test eax eax +
mov edi eax +
jz loc_449000  +
mov eax [ebx+4] +
mov [edi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_421130  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [edi+40h] eax +
mov edi 1 +
jmp loc_448E45  +
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+20h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov [esp+2Ch+var_24] 1Fh +
mov eax [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
add eax 48h +
mov [esp+2Ch+var_28] eax +
call sub_448D90  +
mov [edi+10h] eax +
mov edi 1 +
jmp loc_448E45  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_447EE0  +
mov edi eax +
jmp loc_448E45  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_447EE0  +
mov edi eax +
jmp loc_448E45  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_regXfp +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_447EE0  +
mov edi eax +
jmp loc_448E45  +
xor edi edi +
jmp loc_448E45  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov dword ptr [esp+4] 40h +
mov esi [esp+30h] +
mov eax [ebx+0Ch] +
mov [esp] eax +
call strchr  +
test eax eax +
jz loc_44904F  +
add eax 1 +
mov [esp] eax +
call atoi  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
mov edx [ebx+8] +
cmp edx 1 +
jz loc_449105  +
cmp edx 1Fh +
mov edi 1 +
ja loc_449070  +
add esp 20h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] esi +
call sub_423700  +
cmp eax 6 +
jz loc_4490C0  +
cmp eax 26h +
jz loc_4490C0  +
mov eax [ebx+8] +
cmp eax 21h +
jz loc_4490D4  +
cmp eax 23h +
jnz loc_449065  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg2 +
call sub_447EE0  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [ebx+8] +
cmp eax 20h +
jz loc_4490D4  +
cmp eax 22h +
jz loc_44908F  +
mov edi 1 +
jmp loc_449065  +
***
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg +
call sub_447EE0  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+50h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov dword ptr [esp+8] 1Fh +
mov eax [ebx+10h] +
mov [esp] esi +
add eax 7Ch +
mov [esp+4] eax +
call sub_448D90  +
mov ecx [ebx+14h] +
mov [edi+10h] eax +
mov eax [ebx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+4] offset a_note_netbsdco +
mov [esp+8] eax +
mov [esp] esi +
call sub_447EE0  +
mov edi eax +
jmp loc_449065  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_18] +
test edx edx +
jz loc_4492C6  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea esi [eax+1] +
add eax 4 +
and eax 0FFFFFFFCh +
lea edx [ebx+3] +
and edx 0FFFFFFFCh +
lea ecx [eax+edx+0Ch] +
mov edx [esp+1Ch+arg_8] +
mov eax ecx +
mov [esp+1Ch+var_10] ecx +
add eax [edx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call realloc  +
test eax eax +
mov ebp eax +
jz loc_4492BC  +
mov eax [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax] +
lea edi [ebp+eax+0] +
add ecx eax +
mov eax [esp+1Ch+arg_8] +
mov [eax] ecx +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+4] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+8] +
add edi 0Ch +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov ecx [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] ecx +
call eax  +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_449291  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] eax +
call memcpy  +
lea ecx [edi+esi] +
test esi 3 +
mov edi ecx +
jz loc_449291  +
add edi 1 +
lea eax [edi+esi] +
sub eax ecx +
test al 3 +
mov byte ptr [edi-1] 0 +
jnz loc_449281  +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] edi +
add edi ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test bl 3 +
jz loc_4492BC  +
sub edi ebx +
nop   +
mov byte ptr [edi+ebx] 0 +
add ebx 1 +
test bl 3 +
jnz loc_4492B0  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor esi esi +
jmp loc_4491CC  +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_449321  +
mov ecx [esp+40h] +
mov dword ptr [esp+0Ch] 3 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_449321  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_44931C  +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 1Fh +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0CCh] +
lea ebp [esp+24h] +
mov edi ebp +
mov esi [esp+0C0h] +
stos   +
lea ecx [esp+28h] +
movzx eax byte ptr [ebx] +
mov edx [ebx+4] +
mov [esp+24h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+25h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+26h] al +
movzx eax byte ptr [ebx+3] +
mov [esp+27h] al +
mov eax [esi+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Ch] +
mov edx [ebx+8] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Eh] +
mov edx [ebx+0Ch] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+30h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+38h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+3Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+40h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0C8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 7Ch +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_4491A0  +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 22h +
push esi  +
push ebx  +
sub esp 0BCh +
mov ebx [esp+0DCh] +
lea ebp [esp+28h] +
mov edi ebp +
mov esi [esp+0D0h] +
stos   +
lea edx [esp+2Ch] +
movzx eax byte ptr [ebx] +
mov [esp+28h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+29h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+2Ah] al +
movzx eax byte ptr [ebx+3] +
mov [esp+2Bh] al +
mov eax [esi+4] +
mov eax [eax+48h] +
mov [esp+8] edx +
mov edi [ebx+4] +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call eax  +
mov eax [esi+4] +
lea ecx [esp+38h] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+3Ch] +
mov edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+40h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+44h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+48h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+4Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+50h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+60h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0D8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 88h +
mov [esp+8] eax +
mov eax [esp+0D4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_4491A0  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_449660  +
mov ecx [esp+44h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+18h] ecx +
mov ecx [esp+40h] +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_449660  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_449654  +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 46E62B7Fh +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov edx [esp+30h] +
mov eax [edx+4] +
mov ecx [eax+1B0h] +
mov eax offset aFreebsd +
cmp dword ptr [ecx+0Ch] 9 +
mov ecx offset aLinux +
mov dword ptr [esp+10h] 202h +
mov [esp] edx +
cmovnz eax ecx +
mov ecx [esp+40h] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+18h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+14h] ecx +
mov [esp+4] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 100h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 102h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 301h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 302h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 303h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 304h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 305h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 306h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 307h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 308h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 309h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 30Ah +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 400h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 401h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 402h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 403h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4491A0  +
add esp 2Ch +
retn   +
***
push ebp  +
mov ecx 6 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov edi [esp+64h] +
mov ebp [esp+58h] +
mov ebx [esp+60h] +
mov [esp+24h] eax +
mov eax [esp+54h] +
mov [esp+2Ch] edi +
mov edi offset a_reg2 +
mov [esp+28h] eax +
mov eax [esp+5Ch] +
mov esi eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_449E57  +
mov edi offset a_regXfp +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_449EE0  +
mov edi offset a_regXstate +
mov ecx 0Ch +
mov esi eax +
cmps   +
jz loc_449E93  +
mov edi offset a_regPpcVmx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_449EF6  +
mov edi offset a_regPpcVsx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_449F10  +
mov edi offset a_regS390HighGp +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_449F26  +
mov edi offset a_regS390Timer +
mov ecx 10h +
mov esi eax +
cmps   +
jz loc_449EC0  +
mov edi offset a_regS390Todcmp +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_449F60  +
mov edi offset a_regS390Todpre +
mov ecx 12h +
mov esi eax +
cmps   +
jz loc_449F80  +
mov edi offset a_regS390Ctrs +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_449FA0  +
mov edi offset a_regS390Prefix +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_449FC0  +
mov edi offset a_regS390LastBr +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_449FE0  +
mov edi offset a_regS390System +
mov ecx 16h +
mov esi eax +
cmps   +
jz loc_449F40  +
mov edi offset a_regS390Tdb +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_44A000  +
mov edi offset a_regS390VxrsLo +
mov ecx 13h +
mov esi eax +
cmps   +
jz loc_44A019  +
mov edi offset a_regS390VxrsHi +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_44A032  +
mov edi offset a_regArmVfp +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_44A04B  +
mov edi offset a_regAarchTls +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_44A064  +
mov edi offset a_regAarchHwBre +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_44A07D  +
mov esi eax +
mov ecx 14h +
mov edi offset a_regAarchHwWat +
cmps   +
setnbe al  +
setb cl  +
mov esi eax +
xor eax eax +
mov edx esi +
cmp dl cl +
jnz loc_449E8B  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 403h +
mov [esp+18h] eax +
jmp loc_449ED4  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+28h] +
mov [esp+8] ebp +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_4491A0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+2Ch] +
mov [esp+5Ch] ebx +
mov [esp+58h] ebp +
mov [esp+60h] eax +
mov eax [esp+28h] +
mov [esp+54h] eax +
mov eax [esp+24h] +
mov [esp+50h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_449710  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 301h +
mov [esp+18h] eax +
mov dword ptr [esp+0Ch] offset aLinux +
jmp loc_449E73  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 46E62B7Fh +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 100h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 102h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 300h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 307h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 302h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 303h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 304h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 305h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 306h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 308h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 309h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 30Ah +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 400h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 401h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 402h +
mov [esp+18h] eax +
jmp loc_449ED4  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_44A0C0  +
mov eax [eax+0A0h] +
mov eax [eax+30h] +
shl eax 5 +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 3 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
jmp loc_44A0BC  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_44A120  +
mov eax [eax+0A0h] +
mov ebx [eax+30h] +
mov eax [eax+44h] +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+24h] +
shl edx 5 +
mov [esp+8] edx +
mov [esp] eax +
call memcpy  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_420C50  +
mov eax 0FFFFFFFFh +
jmp loc_44A118  +
***
xor eax eax +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov eax [esp+10h+arg_4] +
mov ebx [edi] +
mov edx [eax] +
mov ecx [ebx+3Ch] +
mov esi [ebx+38h] +
add esi edx +
add esi [ecx+1Ch] +
test byte ptr [ebx+16h] 80h +
jz loc_44A17E  +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_44A187  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jnz loc_44A17E  +
mov eax [ebx+8Ch] +
mov ecx [esp+10h+arg_C] +
mov eax [eax+88h] +
add edx [ecx+8] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] edx +
mov [esp+10h+var_10] eax +
call sub_4697B0  +
mov edx [edi] +
mov ecx [esp+10h+arg_C] +
cmp edx ebx +
mov [ecx+8] eax +
jz loc_44A1D8  +
test byte ptr [ebx+15h] 80h +
jz loc_44A1F0  +
mov [ebx+7Ch] edx +
mov ebx [edi] +
mov ecx [ebx+3Ch] +
mov edx [ebx+38h] +
mov edi [esp+10h+arg_C] +
add edx [ecx+1Ch] +
sub edx esi +
add eax edx +
mov [edi+8] eax +
jmp loc_44A17E  +
mov ebx edx +
jmp loc_44A1D8  +
***
push ebx  +
mov ecx [esp+arg_8] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
mov ebx [ecx] +
movzx edx word ptr [ebx+18h] +
and dx 380h +
cmp dx 100h +
jz loc_44A227  +
add eax [esi] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+8Ch] +
add eax [esi] +
mov edx [edx+88h] +
mov [esp+arg_C] eax +
mov [esp+arg_4] ecx +
mov [esp+arg_8] edx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4697B0  +
***
mov ecx [esp+arg_8] +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
movzx edx word ptr [ecx+18h] +
shr dx 7 +
and edx 7 +
cmp edx 1 +
jz loc_44A2C0  +
cmp edx 3 +
jnz loc_44A290  +
mov [esp+arg_C] eax +
mov [esp+arg_8] ecx +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
jmp sub_4603E0  +
test byte ptr [ecx+17h] 4 +
jz loc_44A2B8  +
mov edx [ecx+24h] +
sub edx eax +
mov eax edx +
mov edx [ebx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx edx byte ptr [edx+0Ah] +
shr dl 3 +
movzx edx dl +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
mov edx [ecx+8Ch] +
mov edx [edx+88h] +
mov [esp+arg_8] eax +
mov [esp+arg_0] ecx +
mov [esp+arg_4] edx +
pop ebx  +
pop esi  +
jmp loc_46A810  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+13Ch] +
jmp edx  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov eax [esi+4] +
mov edi [eax+1B0h] +
mov eax [esp+84h] +
mov dword ptr [eax] 0 +
mov eax [esi+28h] +
shr eax 5 +
test al 42h +
jz loc_44A374  +
mov ebx [esp+7Ch] +
test ebx ebx +
jle loc_44A374  +
mov ecx [edi+140h] +
test ecx ecx +
jz loc_44A374  +
mov eax [edi+168h] +
test eax eax +
jz loc_44A600  +
mov [esp+4] eax +
mov [esp] esi +
call sub_41E710  +
test eax eax +
mov ebp eax +
jz loc_44A374  +
mov ebx [eax+8Ch] +
mov eax [esi+0A0h] +
mov eax [eax+910h] +
cmp [ebx+1Ch] eax +
jz loc_44A380  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+4] +
cmp eax 4 +
jz loc_44A38D  +
cmp eax 9 +
jnz loc_44A374  +
mov dword ptr [esp+4] offset a_plt +
mov [esp] esi +
call sub_41E710  +
test eax eax +
mov [esp+24h] eax +
jz loc_44A374  +
mov eax [esi+4] +
mov edx [esp+80h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] ebp +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_44A632  +
mov eax [ebp+24h] +
xor edx edx +
div  dword ptr [ebx+28h] +
mov edx [ebp+44h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [eax+eax*2] +
shl eax 3 +
test ecx ecx +
mov ebx eax +
mov [esp+18h] eax +
jle loc_44A629  +
mov eax [edi+174h] +
xor ecx ecx +
mov [esp+20h] edi +
mov [esp+28h] ebp +
mov ebp edx +
mov [esp+70h] esi +
mov esi ecx +
movzx eax byte ptr [eax+9] +
shl eax 4 +
mov edi eax +
mov eax [ebp+0] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp] eax +
call strlen  +
mov edx [ebp+8] +
add eax ebx +
lea ebx [eax+5] +
add eax 10h +
test edx edx +
cmovnz ebx eax +
add esi 1 +
add ebp edi +
cmp [esp+1Ch] esi +
jnz loc_44A421  +
mov edi [esp+20h] +
mov ebp [esp+28h] +
mov esi [esp+70h] +
mov [esp] ebx +
call sub_42B400  +
mov ebx eax +
mov eax [esp+84h] +
test ebx ebx +
mov [eax] ebx +
jz loc_44A632  +
mov eax [esp+18h] +
mov ecx [ebp+44h] +
mov ebp [esp+1Ch] +
add eax ebx +
test ebp ebp +
jle loc_44A374  +
mov [esp+20h] edi +
mov edi eax +
mov [esp+70h] esi +
mov esi ecx +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_44A4E2  +
add dword ptr [esp+2Ch] 1 +
add edi 5 +
add ebx 18h +
mov dword ptr [edi-5] 746C7040h +
mov byte ptr [edi-1] 0 +
mov eax [esp+20h] +
add dword ptr [esp+18h] 1 +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
shl eax 4 +
add esi eax +
mov eax [esp+18h] +
cmp [esp+1Ch] eax +
jz loc_44A620  +
mov ecx [esp+24h] +
mov eax [esp+20h] +
mov eax [eax+140h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp+8] esi +
mov [esp] ecx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_44A4BC  +
mov ecx [esi] +
mov edx [ecx] +
mov [esp+28h] ecx +
mov ebp [edx] +
mov [ebx] ebp +
mov ebp [edx+4] +
mov [ebx+4] ebp +
mov ebp [edx+8] +
mov [ebx+8] ebp +
mov ebp [edx+0Ch] +
mov [ebx+0Ch] ebp +
mov ecx [edx+10h] +
test ebp 1 +
mov [ebx+10h] ecx +
mov edx [edx+14h] +
mov [ebx+14h] edx +
jnz loc_44A53B  +
or ebp 2 +
mov edx [esp+24h] +
or ebp 200000h +
mov [ebx+0Ch] ebp +
sub eax [edx+1Ch] +
mov [ebx+10h] edx +
mov [ebx+4] edi +
mov [ebx+8] eax +
mov eax [esp+28h] +
mov dword ptr [ebx+14h] 0 +
mov eax [eax] +
mov edx [eax+4] +
mov [esp] edx +
mov [esp+28h] edx +
call strlen  +
mov edx [esp+28h] +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov edx [esi+8] +
add edi ebp +
test edx edx +
jz loc_44A4A6  +
mov eax 302Bh +
mov [edi] ax +
lea eax [edi+3] +
mov byte ptr [edi+2] 78h +
lea edi [esp+32h] +
mov [esp+28h] eax +
mov eax [esi+8] +
mov [esp+8] eax +
lea eax [esp+32h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_421560  +
cmp byte ptr [esp+32h] 30h +
jnz loc_44A5D8  +
lea esi [esi+0] +
add edi 1 +
cmp byte ptr [edi] 30h +
jz loc_44A5D0  +
mov [esp] edi +
call strlen  +
mov [esp+4] edi +
mov edi [esp+28h] +
mov [esp] edi +
mov ebp eax +
mov [esp+8] eax +
lea edi [edi+ebp] +
call memcpy  +
jmp loc_44A4A6  +
***
test byte ptr [edi+1ACh] 20h +
mov eax offset a_rela_plt +
mov edx offset a_rel_plt +
cmovz eax edx +
jmp loc_44A34B  +
***
mov eax [esp+2Ch] +
jmp loc_44A376  +
***
mov ebx [esp+18h] +
jmp loc_44A458  +
***
mov eax 0FFFFFFFFh +
jmp loc_44A376  +
***
mov eax [esp+4] +
and eax 0FFFFFFF7h +
cmp eax 2 +
setz al  +
movzx eax al +
retn   +
***
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [eax+78h] +
test byte ptr [edx+34h] 10h +
jnz loc_44A71E  +
movzx ebx byte ptr [eax] +
and ebx 3 +
cmp bl 2 +
jz loc_44A71E  +
test byte ptr [eax+1] 4 +
jz loc_44A714  +
cmp byte ptr [edx+30h] 1 +
jz loc_44A747  +
test ecx ecx +
jz loc_44A714  +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 1 +
jz loc_44A747  +
test esi esi +
jz loc_44A71E  +
cmp byte ptr [edx+0Ch] 0 +
jz loc_44A724  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+4] +
mov eax [esi+10h] +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_14] esi +
call eax  +
mov edx [esp+14h+var_8] +
test eax eax +
jz loc_44A71E  +
or byte ptr [edx+34h] 10h +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_44A760  +
***
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+18h] +
sub eax [edx+18h] +
cmp eax 0 +
jz loc_44A786  +
mov eax 0FFFFFFFFh +
jle loc_44A784  +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ecx+14h] +
mov ebx [edx+14h] +
mov eax [eax+4] +
sub eax [ebx+4] +
cmp eax 0 +
jz loc_44A7A0  +
jg loc_44A77F  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
mov ecx [ecx+2Ch] +
xor eax eax +
sub ecx [edx+2Ch] +
cmp ecx 0 +
jz loc_44A784  +
jg loc_44A77F  +
jmp loc_44A799  +
***
jmp loc_44A7C0  +
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+10h] +
sub eax [edx+10h] +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
or eax ecx +
shl edx 18h +
or eax edx +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
mov eax [esp+arg_0] +
movzx ecx byte ptr [eax+1] +
movzx edx byte ptr [eax+2] +
shl ecx 8 +
shl edx 10h +
or edx ecx +
movzx ecx byte ptr [eax] +
movzx eax byte ptr [eax+3] +
or edx ecx +
shl eax 18h +
or eax edx +
retn   +
***
mov ecx [esp+arg_0] +
movzx eax byte ptr [ecx+4] +
movzx edx byte ptr [ecx+7] +
shl eax 18h +
or eax edx +
movzx edx byte ptr [ecx+5] +
shl edx 10h +
or edx eax +
movzx eax byte ptr [ecx+6] +
shl eax 8 +
or eax edx +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+44h] +
test eax eax +
jz loc_44A938  +
mov edx [eax+8] +
test edx edx +
jz loc_44A938  +
cmp edx 0FFFFFFFFh +
jz loc_44A938  +
mov eax [eax+4] +
test eax eax +
jz loc_44A8CF  +
mov ebx [eax-4] +
test ebx ebx +
jnz loc_44A938  +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
call sub_44A8A0  +
mov eax [edi+44h] +
mov esi [eax+4] +
test esi esi +
jz loc_44A944  +
mov eax [eax+8] +
mov dword ptr [esi-4] 1 +
mov eax [eax+44h] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_44A938  +
mov edx [edi+14h] +
mov edx [edx+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+0Bh] +
mov edx [eax] +
shr edx cl +
test edx edx +
jz loc_44A938  +
xor eax eax +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_44A931  +
mov dword ptr [esi+eax*4] 1 +
add eax 1 +
cmp eax edx +
jnz loc_44A923  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [eax+8] +
mov edx [edx+44h] +
mov ecx [edx+4] +
mov edx [edx] +
mov [eax+4] ecx +
mov [eax] edx +
jmp loc_44A938  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_4] +
mov edx [esp+20h+arg_0] +
mov eax [ebx+4] +
mov ecx [eax+30h] +
mov edi [ecx+4] +
mov esi [edi+1B0h] +
mov edi [edx+24h] +
test edi edi +
jg loc_44A997  +
mov dword ptr [edx+24h] 0FFFFFFFFh +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi [ebx] +
mov [edx+24h] edi +
mov esi [esi+180h] +
mov [esp+20h+var_10] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ecx +
call esi  +
add edi eax +
mov eax 1 +
mov [ebx] edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov ebx [esp+10h+arg_0] +
mov esi [edx+24h] +
mov ecx [edx] +
mov eax [edx+4] +
test esi esi +
jz loc_44A9EF  +
mov [edx+4] ecx +
mov eax ecx +
mov edi [edx+8] +
cmp eax edi +
jnb loc_44AA10  +
test esi esi +
mov ecx [eax] +
jnz loc_44AA00  +
cmp ecx ebx +
ja loc_44AA10  +
cmp ebx ecx +
jz loc_44AA20  +
add eax 0Ch +
cmp eax edi +
mov [edx+4] eax +
jb loc_44A9F6  +
nop   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jz loc_44AA6B  +
cmp eax [edx+14h] +
jb loc_44AA77  +
mov ecx [edx+1Ch] +
sub eax [edx+18h] +
mov eax [ecx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
ja loc_44AA55  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
jbe loc_44AA46  +
sub ecx 3 +
cmp cl 1 +
ja loc_44AA10  +
mov eax [eax+14h] +
mov edi [edx+10h] +
cmp [eax+94h] edi +
jz loc_44AAA5  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+0Ch] +
lea ebx [eax+eax*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_44AA31  +
mov ecx [ebx+10h] +
mov eax [edx+10h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_43F6C0  +
test eax eax +
jz loc_44AA10  +
mov edx [eax+7Ch] +
test edx edx +
jnz loc_44AA6B  +
cmp eax offset off_492990 +
jz loc_44AA10  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jnz loc_44AA10  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_44AA10  +
cmp ax 200h +
setnz al  +
movzx eax al +
jmp loc_44AA70  +
***
push edi  +
push ebx  +
mov ebx eax +
sub esp 14h +
mov ecx [eax] +
test ecx ecx +
jz loc_44AC02  +
mov eax [edx+8Ch] +
cmp ecx [eax+68h] +
jz loc_44AC02  +
mov [esp+18h+var_18] ecx +
call free  +
mov eax [ebx+0Ch] +
mov edx [esi+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_44AC22  +
cmp eax [edx+78h] +
jz loc_44AC22  +
mov [esp+18h+var_18] eax +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_4] +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_44AC5A  +
mov [esp+18h+var_14] 1AA1h +
mov [esp+18h+var_18] offset a____Binutil_21 +
call sub_420BA0  +
and word ptr [ebx+18h] 0FC7Fh +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
test byte ptr [eax+5] 8 +
mov [esp+4Ch+var_24] edx +
mov [esp+4Ch+var_30] ecx +
jz loc_44AE50  +
mov eax [eax+1Ch] +
mov ebx [eax+4Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_20] eax +
mov eax ecx +
shr eax 2 +
test eax eax +
mov edi eax +
jnz loc_44AE1B  +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+arg_0] +
add eax eax +
test edx edx +
mov [esp+4Ch+var_14] eax +
jnz loc_44AEA9  +
mov [esp+4Ch+var_34] eax +
mov edi 1 +
lea esi [esi+0] +
mov esi [esp+4Ch+var_34] +
mov eax esi +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_44AEB8  +
cmp edi esi +
jnb loc_44AE07  +
lea edx ds:0[edi*4] +
mov esi [esp+4Ch+var_30] +
add ebx 2 +
mov [esp+4Ch+var_3C] edx +
mov edx [esp+4Ch+var_24] +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_10] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0FFFFFFFFh +
lea edx [edx+esi*4] +
mov esi edi +
mov [esp+4Ch+var_18] edx +
mov [esp+4Ch+var_1C] ebx +
nop   +
mov edi [esp+4Ch+arg_0] +
test edi edi +
jz loc_44AD44  +
test esi 1Fh +
jz loc_44ADF5  +
mov eax [esp+4Ch+var_3C] +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_44] eax +
call memset  +
mov ebx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
test ebx ebx +
jz loc_44AD82  +
mov ebx [esp+4Ch+var_18] +
lea esi [esi+0] +
mov eax [ecx] +
xor edx edx +
add ecx 4 +
div  esi +
add dword ptr [ebp+edx*4+0] 1 +
cmp ecx ebx +
jnz loc_44AD70  +
mov eax [esp+4Ch+var_20] +
xor ebx ebx +
xor edi edi +
mov ecx [esp+4Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
imul ecx eax +
mov [esp+4Ch+var_38] eax +
nop   +
mov eax [ebp+edi*4+0] +
xor edx edx +
imul eax eax +
add ecx eax +
adc ebx edx +
add edi 1 +
cmp edi esi +
jb loc_44ADA0  +
mov eax 1000h +
cdq   +
idiv  [esp+4Ch+var_38] +
xor edx edx +
mov edi eax +
mov eax esi +
div  edi +
add eax 1 +
imul eax eax +
imul ebx eax +
mul  ecx +
add edx ebx +
cmp edx [esp+4Ch+var_28] +
jb loc_44AE90  +
ja loc_44ADE9  +
cmp eax [esp+4Ch+var_10] +
jb loc_44AE90  +
add [esp+4Ch+var_2C] 1 +
cmp [esp+4Ch+var_2C] 64h +
jz loc_44AE07  +
add esi 1 +
add [esp+4Ch+var_3C] 4 +
cmp [esp+4Ch+var_34] esi +
ja loc_44AD30  +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax [esp+4Ch+var_14] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+4Ch+arg_0] +
mov eax ecx +
add eax eax +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_34] eax +
test ebp ebp +
jz loc_44ACD0  +
cmp edi 1 +
jz loc_44AEA9  +
mov eax [esp+4Ch+var_14] +
and eax 1Fh +
cmp eax 1 +
adc [esp+4Ch+var_14] 0 +
jmp loc_44ACD0  +
mov eax 1 +
xor ecx ecx +
mov ebx [esp+4Ch+var_30] +
jmp loc_44AE62  +
mov eax edx +
add ecx 1 +
mov edx ds:dword_4B3060[ecx*4] +
cmp ebx edx +
jb loc_44AE74  +
test edx edx +
jnz loc_44AE60  +
cmp eax 1 +
ja loc_44AE13  +
mov ecx [esp+4Ch+arg_0] +
test ecx ecx +
jz loc_44AE13  +
add esp 4Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_10] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_14] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_44ADF5  +
mov eax [esp+4Ch+var_14] +
mov edi 2 +
mov [esp+4Ch+var_34] eax +
jmp loc_44AE38  +
xor eax eax +
jmp loc_44AE13  +
***
mov eax [esp+8] +
mov eax [eax+4] +
mov [esp+8] eax +
mov eax [esp+4] +
mov eax [eax+4] +
mov [esp+4] eax +
jmp strcmp  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
test byte ptr [edx] 1 +
mov [esp+34h+var_18] 0 +
jnz loc_44AF04  +
mov eax [edx+1Ch] +
xor edx edx +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_44AF7F  +
mov ebx [edi+64h] +
mov eax [edi+4] +
test ebx ebx +
mov ebp [eax+1B0h] +
jnz loc_44AF34  +
jmp loc_44AFF2  +
mov eax [ebx+8Ch] +
mov ebx [ebx+0Ch] +
mov dword ptr [eax+60h] 0 +
test ebx ebx +
jz loc_44AF78  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_44AF20  +
mov eax [ebp+70h] +
mov [esp+34h+var_28] ecx +
mov [esp+34h+var_2C] ebx +
mov [esp+34h+var_30] esi +
mov [esp+34h+var_34] edi +
call eax  +
mov ecx [esp+34h+var_28] +
test eax eax +
jnz loc_44AF20  +
mov edx [ebx+8Ch] +
mov eax [esp+34h+var_18] +
mov ebx [ebx+0Ch] +
add eax 1 +
test ebx ebx +
mov [esp+34h+var_18] eax +
mov [edx+60h] eax +
jnz loc_44AF34  +
mov edx [esp+34h+var_18] +
mov eax [esi+1Ch] +
lea edi [esp+34h+var_18] +
mov [ecx] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] offset loc_44B970 +
call sub_42E0B0  +
mov ebx [esi+1Ch] +
mov eax [ebx+0C0h] +
test eax eax +
jz loc_44AFC2  +
mov ecx [esp+34h+var_18] +
lea edx [ecx+1] +
jmp loc_44AFB2  +
mov edx ecx +
mov [eax+0Ch] edx +
mov eax [eax] +
lea ecx [edx+1] +
test eax eax +
jnz loc_44AFB0  +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_30] offset sub_44B940 +
call sub_42E0B0  +
mov edx [esp+34h+var_18] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
mov edx [esi+1Ch] +
cmovnz eax ecx +
mov [edx+4Ch] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
xor edx edx +
jmp loc_44AF7F  +
***
mov eax [esp+34h] +
mov dword ptr [eax+4] 1 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and ebx 1 +
jnz loc_44B1A0  +
or byte ptr [edx+34h] 1 +
mov eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+4] 48h +
mov [esp] ebx +
call sub_42A750  +
test eax eax +
jnz loc_44B0F1  +
xor eax eax +
jmp loc_44B160  +
***
mov byte ptr [edx+2Ch] 0 +
lea ecx [edx+2Dh] +
mov bl 1Bh +
jmp loc_44B134  +
***
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_44B139  +
***
mov byte ptr [ecx] 0 +
jmp loc_44B15A  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+9Ch] +
mov eax [esi+50h] +
test eax eax +
jz loc_44B1CE  +
mov [esp+14h+var_14] eax +
call sub_466E20  +
mov eax [esi+7Ch] +
mov [esp+14h+var_14] eax +
call sub_469990  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_42D4C0  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [eax+94h] +
mov esi [edx+94h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
jz loc_44B216  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+4] +
cmp dword ptr [edi+4] 5 +
jnz loc_44B20C  +
mov edi [edx+8Ch] +
mov ebp [eax+8Ch] +
mov edi [edi+4] +
cmp [ebp+4] edi +
jnz loc_44B20C  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_30] ecx +
mov [esp+5Ch+var_34] edx +
call sub_440BE0  +
mov edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] edx +
mov edi eax +
mov [esp+5Ch+var_2C] eax +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
mov [esp+5Ch+var_28] eax +
jz loc_44B20C  +
cmp edi 0FFFFFEFFh +
jz loc_44B20C  +
mov eax [ebx+0A0h] +
xor edx edx +
mov ecx eax +
mov [esp+5Ch+var_34] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
mov ecx [esi+0A0h] +
div  edi +
xor edx edx +
mov [esp+5Ch+var_18] ecx +
mov [esp+5Ch+var_20] eax +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
div  edi +
test eax eax +
mov ebp eax +
jz loc_44B20C  +
mov eax [esp+5Ch+var_20] +
test eax eax +
jz loc_44B20C  +
mov eax [esp+5Ch+var_34] +
lea edx [ecx+48h] +
mov [esp+5Ch+var_14] edx +
mov [esp+5Ch+var_1C] 0 +
mov edi [eax+24Ch] +
mov eax [ecx+24Ch] +
mov ecx [esp+5Ch+var_30] +
test edi edi +
mov [esp+5Ch+var_24] eax +
jz loc_44B4A8  +
test edi edi +
jz loc_44B42C  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_30] 0 +
test eax eax +
jz loc_44B42C  +
mov ecx [esp+5Ch+var_24] +
test ecx ecx +
jz loc_44B53D  +
test edi edi +
jz loc_44B53D  +
mov [esp+5Ch+var_20] ebx +
mov ebp [edi+4] +
lea eax [edi+0Ch] +
mov ebx [esp+5Ch+var_2C] +
xor edx edx +
mov [esp+5Ch+var_14] esi +
mov esi eax +
mov [esp+5Ch+var_10] eax +
lea esi [esi+0] +
cmp edx ebp +
jnb loc_44B38B  +
lea eax [ebp+edx+0] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_44B37E  +
cmp edx eax +
mov ebp eax +
jnb loc_44B38B  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_44B367  +
cmp ebx ecx +
jbe loc_44B599  +
lea edx [eax+1] +
jmp loc_44B350  +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_2C] 0 +
mov eax [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_24] ebx +
mov ebx [esp+5Ch+var_28] +
mov [esp+5Ch+var_20] esi +
mov ebp [eax+4] +
add eax 0Ch +
mov esi eax +
cmp ebp edx +
jbe loc_44B3F7  +
lea eax [edx+ebp] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_44B3E2  +
cmp edx eax +
mov ebp eax +
jnb loc_44B3F7  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_44B3CB  +
cmp ebx ecx +
jbe loc_44B5B1  +
lea edx [eax+1] +
jmp loc_44B3B5  +
mov [esp+5Ch+var_30] 0 +
xor edi edi +
mov eax [esp+5Ch+var_1C] +
test eax eax +
jz loc_44B409  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov esi [esp+5Ch+var_30] +
mov eax edi +
test esi esi +
jz loc_44B20E  +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_34] edi +
call free  +
mov eax [esp+5Ch+var_34] +
jmp loc_44B20E  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_10] ecx +
call sub_43CC60  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_44B3F7  +
test edi edi +
jz loc_44B53D  +
mov ecx [esp+5Ch+var_10] +
cmp byte ptr [ecx+3] 0 +
js loc_44B31F  +
mov ecx [esi+0A0h] +
mov edx eax +
mov eax ebp +
mov [esp+5Ch+var_14] ecx +
call sub_491148  +
mov ecx [esp+5Ch+var_14] +
mov [esp+5Ch+var_24] eax +
mov [ecx+24Ch] eax +
jmp loc_44B31F  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebx +
add eax 48h +
mov [esp+5Ch+var_58] eax +
call sub_43CC60  +
test eax eax +
mov [esp+5Ch+var_1C] eax +
jz loc_44B3EF  +
mov ecx [esp+5Ch+var_30] +
cmp byte ptr [ecx+3] 0 +
jns loc_44B905  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call sub_43CC60  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_44B3F7  +
mov eax [esp+5Ch+var_20] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
call sub_42B400  +
mov [esp+5Ch+var_24] eax +
lea eax ds:0[ebp*8] +
mov [esp+5Ch+var_5C] eax +
call sub_42B400  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jnz loc_44B743  +
xor edi edi +
cmp [esp+5Ch+var_24] 0 +
jz loc_44B580  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_14] +
test eax eax +
jz loc_44B3F9  +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_44B3F9  +
mov eax [edi+4] +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_10] edi +
mov [esp+5Ch+var_2C] eax +
jmp loc_44B39B  +
mov edx [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov esi [esp+5Ch+var_20] +
mov eax [edi+4] +
test edx edx +
jz loc_44B3F7  +
test eax eax +
jz loc_44B3F7  +
cmp [esp+5Ch+var_2C] eax +
jnz loc_44B3F7  +
mov eax [esp+5Ch+var_2C] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
mov ebp eax +
mov [esp+5Ch+var_28] eax +
call sub_42B400  +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_24] eax +
call sub_42B400  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jz loc_44B56B  +
cmp [esp+5Ch+var_24] 0 +
jz loc_44B56B  +
mov eax [esp+5Ch+var_10] +
mov edx [esp+5Ch+var_24] +
mov ebp [eax] +
mov eax [esp+5Ch+var_28] +
add eax ebp +
cmp ebp eax +
mov [esp+5Ch+var_20] eax +
jnb loc_44B662  +
mov [esp+5Ch+var_10] esi +
mov esi ebx +
mov ebx edx +
mov eax [esp+5Ch+var_34] +
add ebx 8 +
mov [ebx-8] ebp +
mov ecx [ebp+0] +
add ebp 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_43CA60  +
mov [ebx-4] eax +
cmp [esp+5Ch+var_20] ebp +
ja loc_44B632  +
mov esi [esp+5Ch+var_10] +
mov ebx [edi] +
mov ebp [esp+5Ch+var_28] +
mov edi [esp+5Ch+var_14] +
add ebp ebx +
cmp ebx ebp +
jnb loc_44B69B  +
mov eax [esp+5Ch+var_18] +
add edi 8 +
mov [edi-8] ebx +
mov edx [ebx] +
add ebx 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_43CA60  +
mov [edi-4] eax +
cmp ebp ebx +
ja loc_44B672  +
mov esi [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_44AEC0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov [esp+5Ch+var_58] esi +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_44AEC0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov eax [esi] +
mov edx [ebx] +
movzx eax word ptr [eax+4] +
cmp [edx+4] ax +
jnz loc_44B73C  +
mov ebx [esp+5Ch+var_14] +
xor ebp ebp +
mov eax [esp+5Ch+var_24] +
lea edi [ebx+8] +
mov edx ebx +
lea esi [eax+8] +
jmp loc_44B726  +
add ebp 1 +
cmp ebp [esp+5Ch+var_2C] +
jz loc_44B8FA  +
mov edx edi +
mov eax esi +
mov ecx [edx] +
add esi 8 +
add edi 8 +
mov ebx [eax] +
movzx ecx word ptr [ecx+4] +
cmp [ebx+4] cx +
jnz loc_44B73C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_44B701  +
xor edi edi +
jmp loc_44B574  +
mov eax [esp+5Ch+var_24] +
test eax eax +
jz loc_44B56B  +
mov eax [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_1C] +
lea eax [eax+eax*4] +
lea edx [ecx+eax*4] +
cmp edx ecx +
jbe loc_44B935  +
mov eax ecx +
mov edi ebx +
mov ebx [esp+5Ch+var_2C] +
xor ecx ecx +
mov [esp+5Ch+var_20] esi +
jmp loc_44B77C  +
add eax 14h +
cmp edx eax +
jbe loc_44B78D  +
cmp [eax+10h] ebx +
jnz loc_44B775  +
mov esi [esp+5Ch+var_24] +
mov [esi+ecx*8] eax +
add ecx 1 +
jmp loc_44B775  +
mov esi [esp+5Ch+var_20] +
mov ebx edi +
mov edi [esp+5Ch+var_30] +
lea eax [ebp+ebp*4+0] +
lea edx [edi+eax*4] +
cmp edx edi +
jbe loc_44B73C  +
mov eax edi +
xor ebp ebp +
mov edi ecx +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_2C] ebx +
jmp loc_44B7B9  +
add eax 14h +
cmp edx eax +
jbe loc_44B7CA  +
cmp [eax+10h] ecx +
jnz loc_44B7B2  +
mov ebx [esp+5Ch+var_14] +
mov [ebx+ebp*8] eax +
add ebp 1 +
jmp loc_44B7B2  +
mov ecx edi +
xor edi edi +
mov ebx [esp+5Ch+var_2C] +
test ecx ecx +
jz loc_44B574  +
test ebp ebp +
jz loc_44B574  +
cmp ebp ecx +
jnz loc_44B574  +
mov edi [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_2C] esi +
mov esi ebx +
mov ebx edx +
mov eax [edi] +
add ebx 1 +
add edi 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_34] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_43CA60  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_44B7F8  +
mov esi [esp+5Ch+var_2C] +
xor edi edi +
mov ebx [esp+5Ch+var_14] +
mov eax [ebx] +
add edi 1 +
add ebx 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_18] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_43CA60  +
mov [ebx-4] eax +
cmp edi ebp +
jnz loc_44B82B  +
mov esi [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_44AEC0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov ebx [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_44AEC0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov eax [ebx] +
mov edx [esi] +
movzx eax word ptr [eax+0Ch] +
cmp [edx+0Ch] ax +
jnz loc_44B73C  +
mov eax esi +
mov edx ebx +
lea edi [ebx+8] +
xor ebx ebx +
lea esi [esi+8] +
mov [esp+5Ch+var_34] ebp +
jmp loc_44B8DD  +
add ebx 1 +
cmp ebx [esp+5Ch+var_34] +
jz loc_44B8FA  +
mov edx edi +
mov eax esi +
mov ebp [edx] +
add esi 8 +
add edi 8 +
mov ecx [eax] +
movzx ebp word ptr [ebp+0Ch] +
cmp [ecx+0Ch] bp +
jnz loc_44B73C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_44B8B8  +
xor edi edi +
jmp loc_44B574  +
mov edi 1 +
nop   +
jmp loc_44B574  +
mov eax [ebx+0A0h] +
mov edx [esp+5Ch+var_1C] +
mov [esp+5Ch+var_10] ecx +
mov [esp+5Ch+var_30] eax +
mov eax [esp+5Ch+var_20] +
call sub_491148  +
mov ecx [esp+5Ch+var_10] +
mov edi eax +
mov eax [esp+5Ch+var_30] +
mov [eax+24Ch] edi +
jmp loc_44B303  +
xor ecx ecx +
jmp loc_44B793  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test byte ptr [eax+34h] 8 +
jnz loc_44B95E  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_44B95E  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
test byte ptr [eax+34h] 8 +
jz loc_44B98E  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_44B98E  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1B0h] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [eax+0E4h] +
test eax eax +
jz loc_44B9D4  +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
test ebx ebx +
jnz loc_44BA05  +
movzx eax byte ptr [ebp+0Dh] +
movzx edx byte ptr [esi+31h] +
and eax 3 +
mov ecx edx +
movzx ebx al +
and ecx 3 +
sub ebx 1 +
sub ecx 1 +
cmp ebx ecx +
jnb loc_44B9FD  +
and edx 0FFFFFFFCh +
or edx eax +
mov [esi+31h] dl +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_44B9FD  +
test byte ptr [ebp+0Dh] 3 +
jz loc_44B9FD  +
mov eax [esp+28h+arg_0] +
test byte ptr [eax] 8 +
jnz loc_44B9FD  +
or byte ptr [esi+35h] 8 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_44BA6B  +
mov eax [ebx+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] esi +
call eax  +
test eax eax +
jnz loc_44BA78  +
mov eax [ebx+28h] +
cmp [esi+20h] eax +
jl loc_44BA6B  +
mov eax [ebx+34h] +
lea edx [eax+1] +
mov [ebx+34h] edx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+14h] +
xor edx edx +
mov eax [esi+20h] +
mov ecx [ebx+38h] +
mov ebp [edi+eax*4] +
mov eax ebp +
div  dword ptr [ebx+2Ch] +
mov eax ebp +
shr eax cl +
mov [esp+1Ch+var_10] edx +
mov edx [ebx+0Ch] +
shr edx cl +
mov ecx [ebx+40h] +
sub edx 1 +
and eax edx +
mov edx [ebx+20h] +
and ecx ebp +
mov ebp 1 +
shl ebp cl +
lea eax [edx+eax*4] +
or ebp [eax] +
mov [esp+1Ch+var_14] eax +
mov [eax] ebp +
mov edx [esi+20h] +
mov eax 1 +
mov ecx [ebx+3Ch] +
mov edx [edi+edx*4] +
shr edx cl +
and edx [ebx+40h] +
mov ecx edx +
shl eax cl +
mov ecx [ebx+1Ch] +
mov edx eax +
mov eax [esp+1Ch+var_14] +
or edx ebp +
mov ebp [esp+1Ch+var_10] +
mov [eax] edx +
mov eax [esi+20h] +
mov eax [edi+eax*4] +
lea edi ds:0[ebp*4] +
and eax 0FFFFFFFEh +
mov edx eax +
or edx 1 +
cmp dword ptr [ecx+ebp*4] 1 +
cmovz eax edx +
mov edx [ebx] +
mov edx [edx+4] +
mov ecx [edx+30h] +
mov edx [ebx+18h] +
mov edx [edx+ebp*4] +
mov ebp [ebx+24h] +
sub edx [ebx+30h] +
mov [esp+1Ch+var_1C] eax +
lea edx [ebp+edx*4+0] +
mov [esp+1Ch+var_18] edx +
call ecx  +
mov eax [ebx+1Ch] +
add eax edi +
add edi [ebx+18h] +
sub dword ptr [eax] 1 +
mov eax [edi] +
lea ecx [eax+1] +
mov [edi] ecx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ecx [esp+4+arg_0] +
mov edx [esp+4+arg_4] +
cmp dword ptr [ecx+4] 1 +
setz al  +
xor ebx ebx +
cmp dword ptr [edx+4] 1 +
mov esi eax +
mov eax 1 +
setz bl  +
cmp esi ebx +
jl loc_44BB8C  +
jg loc_44BB90  +
mov esi [ecx] +
mov ebx [edx] +
and esi [ecx+0Ch] +
and ebx [edx+0Ch] +
cmp esi ebx +
jb loc_44BB90  +
ja loc_44BB8C  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_44BB8C  +
***
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
jb loc_44BBD7  +
mov eax 1 +
ja loc_44BBD5  +
mov ebx [edx] +
cmp [ecx] ebx +
jb loc_44BBD7  +
nop   +
ja loc_44BBD5  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
test byte ptr [ebx+34h] 20h +
jnz loc_44BC06  +
movzx eax byte ptr [ebx+0Ch] +
lea ecx [eax-3] +
cmp cl 1 +
jbe loc_44BC10  +
cmp al 1 +
jz loc_44BC22  +
cmp al 2 +
jz loc_44BC22  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
movzx ecx byte ptr [ebx+33h] +
test cl 2 +
jnz loc_44BC46  +
and ecx 0Ah +
jnz loc_44BC22  +
cmp al 3 +
jz loc_44BC46  +
mov eax [edx+4] +
mov edx [edx] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_18] edx +
call eax  +
mov eax 1 +
and byte ptr [ebx+33h] 0ECh +
add esp 18h +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+18h] 8 +
jz loc_44BC22  +
jmp loc_44BC06  +
***
jmp sub_44BC60  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ecx+18h] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_40] ebp +
mov esi [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_429CF0  +
mov ecx eax +
xor eax eax +
cmp ecx [edi+18h] +
jz loc_44BCA0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0A0h] +
mov [esp+48h+var_1C] 0 +
mov edx [eax+70h] +
test edx edx +
mov [esp+48h+var_30] edx +
jnz loc_44BDB0  +
mov eax [ebp+4] +
mov edx [edi+28h] +
mov eax [eax+1B0h] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_30] eax +
mov eax [eax+174h] +
movzx edx byte ptr [eax+3] +
cmp [esp+48h+var_2C] edx +
jz loc_44BDE5  +
movzx edx byte ptr [eax+4] +
cmp [esp+48h+var_2C] edx +
jnz loc_44BDC2  +
mov eax [eax+40h] +
mov [esp+48h+var_2C] eax +
lea eax [ebx+ecx] +
cmp ebx eax +
mov [esp+48h+var_28] eax +
jnb loc_44BDD8  +
mov [esp+48h+var_24] edi +
mov edi ebx +
mov ebx [esp+48h+var_1C] +
jmp loc_44BD38  +
cmp eax ebx +
jnb loc_44BDF1  +
movzx eax byte ptr [ecx+9] +
lea eax [eax+eax*2] +
lea esi [esi+eax*4] +
mov eax [esp+48h+var_24] +
add edi [eax+28h] +
cmp [esp+48h+var_28] edi +
jbe loc_44BDD8  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call eax  +
mov edx [esp+48h+var_30] +
mov eax [esi+4] +
mov ecx [edx+174h] +
shr eax 8 +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_44BE2F  +
test ebx ebx +
jnz loc_44BD15  +
test eax eax +
jz loc_44BD1D  +
mov edx [esi] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBNonZeroSymbol +
call off_492AE8  +
mov [esp+48h+var_48] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_44BC93  +
mov eax [eax+60h] +
xor edx edx +
div  [esp+48h+var_30] +
mov [esp+48h+var_1C] eax +
jmp loc_44BCBD  +
mov [esp+48h+var_48] 3 +
call sub_420C50  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+38h] +
mov [esp+48h+var_2C] eax +
jmp loc_44BCFA  +
mov edx [esi] +
mov ebx [esp+48h+var_1C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBBadRelocSymbo +
call off_492AE8  +
mov [esp+48h+var_48] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_44BC93  +
test ebx ebx +
jz loc_44BD1D  +
xor eax eax +
jmp loc_44BD15  +
***
sub esp 1Ch +
mov edx [eax+6Ch] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_10] 0FF00h +
mov [esp+1Ch+var_1C] offset aBTooManySect_0 +
mov [esp+1Ch+var_14] edx +
call off_492AE8  +
mov [esp+1Ch+var_1C] 0Fh +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov ebx [esp+20h+arg_8] +
mov eax [esi+4] +
mov edx [eax+0A0h] +
mov edx [edx+90Ch] +
test edx edx +
jz loc_44BF73  +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+68h] +
test eax eax +
jz loc_44BEE4  +
mov ecx [esp+20h+arg_10] +
mov edx [esi] +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_10] ecx +
mov ecx [esp+20h+arg_C] +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_14] ecx +
call eax  +
cmp eax 1 +
jz loc_44BEE4  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_44BEFB  +
cmp byte ptr [edi] 0 +
jz loc_44BEFB  +
mov eax [esp+20h+arg_C] +
test byte ptr [eax+15h] 80h +
jz loc_44BF90  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov eax [esi] +
mov edi [eax+1Ch] +
mov eax [edi+58h] +
mov edx [edi+54h] +
cmp eax edx +
jbe loc_44BFC0  +
mov eax [edi+5Ch] +
imul edx edx +
add eax edx +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [edi+54h] +
mov ecx [esi+34h] +
imul eax edx +
add eax [edi+5Ch] +
test ecx ecx +
mov ecx [esi+4] +
mov [eax+14h] edx +
jz loc_44BFE7  +
mov ebx [ecx+7Ch] +
mov esi ebx +
mov [eax+18h] ebx +
add edx 1 +
lea eax [esi+1] +
mov [ecx+7Ch] eax +
mov eax 1 +
mov [edi+54h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_1C] 2213h +
mov [esp+20h+var_20] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esi+4] +
jmp loc_44BEA9  +
mov eax [esi+8] +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
mov [ebx+8] eax +
jnz loc_44BF02  +
xor eax eax +
jmp loc_44BEDD  +
lea edx [eax+eax] +
mov [edi+58h] edx +
imul eax eax +
mov edx [edi+5Ch] +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] edx +
call sub_42B490  +
test eax eax +
mov [edi+5Ch] eax +
jz loc_44BFB3  +
mov edx [edi+54h] +
jmp loc_44BF18  +
mov esi [ecx+7Ch] +
xor ebx ebx +
jmp loc_44BF58  +
***
jmp sub_44C000  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+94h] +
mov edx [eax+0A0h] +
mov esi [edx+40h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call sub_440BE0  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_44C066  +
mov ecx [ebx+94h] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov edx [eax+164h] +
xor eax eax +
test edx edx +
jz loc_44C060  +
mov [esp+14h+var_8] eax +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] offset aBWarningSh_l_0 +
call edx  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+eax*4] +
mov eax [eax+2Ch] +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
add eax [edx+1Ch] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+8+arg_0] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_44C000  +
mov ebx eax +
mov eax [esp+8+arg_4] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_44C000  +
xor ecx ecx +
mov edx 0FFFFFFFFh +
cmp ebx eax +
setnbe cl  +
cmovnb edx ecx +
add esp 8 +
mov eax edx +
pop ebx  +
retn   +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
movzx edx byte ptr [esi+33h] +
and edx 0Ah +
cmp dl 8 +
jz loc_44C0E2  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_44C0DB  +
mov ecx [esi+40h] +
test ecx ecx +
jz loc_44C0DB  +
mov edx [ecx+14h] +
mov ebx [edx+0A0h] +
test byte ptr [ebx+924h] 0Bh +
jnz loc_44C0DB  +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov ebx [eax+244h] +
test ebx ebx +
jnz loc_44C12B  +
jmp loc_44C1B0  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_44C1B0  +
cmp edx [ebx+10h] +
nop   +
jnz loc_44C120  +
mov edx [ebx+18h] +
test edx edx +
jz loc_44C152  +
mov eax [ecx+18h] +
cmp [edx+10h] eax +
jnz loc_44C148  +
jmp loc_44C1A5  +
cmp [edx+10h] eax +
jz loc_44C1A5  +
mov edx [edx+14h] +
test edx edx +
lea esi [esi+0] +
jnz loc_44C143  +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_425930  +
test eax eax +
jz loc_44C1F2  +
mov ecx [esi+40h] +
mov edi [esp+24h] +
mov edx [ecx+18h] +
mov [eax+10h] edx +
movzx edx word ptr [ecx+2] +
mov [eax+4] dx +
mov edx [ebx+18h] +
mov [eax+14h] edx +
mov edx [edi+4] +
mov [ecx+24h] edx +
lea ecx [edx+1] +
add edx 1 +
mov [edi+4] ecx +
mov [eax+6] dx +
mov [ebx+18h] eax +
mov eax 1 +
jmp loc_44C0DB  +
***
mov eax 1 +
jmp loc_44C0DB  +
***
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_425930  +
test eax eax +
mov ebx eax +
jz loc_44C1F2  +
mov eax [esi+40h] +
mov eax [eax+14h] +
mov [ebx+10h] eax +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov edx [eax+244h] +
mov [ebx+1Ch] edx +
mov [eax+244h] ebx +
jmp loc_44C152  +
***
mov eax [esp+24h] +
mov dword ptr [eax+8] 1 +
xor eax eax +
jmp loc_44C0DB  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov [esp+5Ch+var_30] edx +
movzx edx byte ptr [ecx+0Ch] +
mov [esp+5Ch+var_24] ecx +
cmp dl 6 +
jnz loc_44C238  +
mov ecx [ecx+14h] +
movzx edx byte ptr [ecx+0Ch] +
cmp dl 6 +
jz loc_44C228  +
mov [esp+5Ch+var_24] ecx +
cmp dl 5 +
ja loc_44C513  +
jmp ds:off_4B2130[edx*4]  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov edx [edx+4] +
mov esi [edx+94h] +
mov [esp+5Ch+var_3C] esi +
mov edi [esp+5Ch+var_3C] +
test edi edi +
jz loc_44C513  +
mov eax [eax] +
mov edi [eax+0D0h] +
test edi edi +
jnz loc_44C28A  +
jmp loc_44C4E8  +
mov edi [edi] +
test edi edi +
jz loc_44C4E8  +
mov ebp [edi+4] +
cmp [esp+5Ch+var_3C] ebp +
jz loc_44C280  +
test byte ptr [ebp+29h] 8 +
jz loc_44C280  +
mov ecx [ebp+0A0h] +
mov esi [ecx+914h] +
test esi esi +
jz loc_44C280  +
mov eax [esp+5Ch+var_30] +
xor edx edx +
xor esi esi +
mov eax [eax] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+108h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
mov [esp+5Ch+var_38] eax +
jnz loc_44C2D7  +
mov esi [ecx+110h] +
sub [esp+5Ch+var_38] esi +
mov edx [esp+5Ch+var_38] +
test edx edx +
jz loc_44C280  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
lea eax [ecx+0F0h] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_34] ecx +
call sub_43CC60  +
test eax eax +
mov [esp+5Ch+var_28] eax +
jz loc_44C4E8  +
mov edx [ebp+0A0h] +
mov eax [edx+178h] +
mov [esp+5Ch+var_20] edx +
mov [esp+5Ch+var_5C] eax +
call sub_42B400  +
test eax eax +
mov [esp+5Ch+var_2C] eax +
jz loc_44C548  +
mov edx [esp+5Ch+var_20] +
mov ecx [edx+170h] +
mov ebx [edx+174h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_54] ebx +
call sub_429F00  +
mov edx [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_34] +
test eax eax +
jnz loc_44C53C  +
mov eax [edx+178h] +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_20] ecx +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call sub_429CF0  +
mov edx [esp+5Ch+var_34] +
mov ecx [esp+5Ch+var_20] +
cmp eax [edx+178h] +
jnz loc_44C53C  +
mov eax [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_28] +
lea esi [eax+esi*2] +
mov eax [esp+5Ch+var_38] +
lea eax [eax+eax*4] +
lea edx [ebx+eax*4] +
cmp ebx edx +
jnb loc_44C4F6  +
mov [esp+5Ch+var_38] ebp +
mov ebp esi +
mov esi edx +
mov [esp+5Ch+var_20] edi +
mov edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_34] ecx +
jmp loc_44C3FE  +
add ebx 14h +
add ebp 2 +
cmp esi ebx +
jbe loc_44C4F2  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_44C3F0  +
mov eax [ebx+10h] +
test eax eax +
jz loc_44C3F0  +
mov eax [esp+5Ch+var_34] +
mov edx [ebx+8] +
mov eax [eax+10Ch] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_5C] eax +
call sub_43CA60  +
mov edx [edi+4] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jnz loc_44C3F0  +
lea eax [esp+5Ch+var_E] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_43C860  +
movzx eax word ptr [esp+5Ch+var_E] +
test ax ax +
js loc_44C47A  +
test byte ptr [edi+33h] 2 +
jz loc_44C556  +
test byte ptr [edi+34h] 8 +
jz loc_44C556  +
and ax 7FFFh +
sub eax 1 +
cmp ax 1 +
ja loc_44C3F0  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax 1 +
jmp loc_44C4EA  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov ecx [edx+94h] +
mov [esp+5Ch+var_3C] ecx +
jmp loc_44C25C  +
mov ecx [esp+5Ch+var_24] +
mov esi [ecx+14h] +
test byte ptr [esi+29h] 8 +
mov [esp+5Ch+var_3C] esi +
jz loc_44C4E8  +
mov ecx [esp+5Ch+var_3C] +
mov edx [ecx+0A0h] +
test byte ptr [edx+924h] 2 +
jnz loc_44C268  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+5Ch+var_20] +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_44C280  +
mov [esp+5Ch+var_58] 22D0h +
mov [esp+5Ch+var_5C] offset a____Binutil_21 +
mov [esp+5Ch+var_38] eax +
call sub_420BA0  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_3C] 0 +
jmp loc_44C268  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_44C4E8  +
mov [esp+5Ch+var_54] offset aElf_link_check +
mov [esp+5Ch+var_58] 232Ch +
mov [esp+5Ch+var_5C] offset a____Binutil_21 +
call sub_420BD0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+0E8h+var_58] +
mov ebp [esp+0E8h+var_54] +
movzx eax byte ptr [ebx+34h] +
mov esi [ebp+0Ch] +
test al 8 +
jnz loc_44C5BA  +
mov edx [esi] +
movzx edx byte ptr [edx] +
mov ecx edx +
and ecx 3 +
cmp cl 1 +
jbe loc_44C7E0  +
xor edi edi +
cmp byte ptr [ebx+0Ch] 7 +
jz loc_44C6E5  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_44C680  +
test edi edi +
jnz loc_44C688  +
mov eax [esi+4] +
cmp byte ptr [ebx+0Ch] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_C4] eax +
jz loc_44C714  +
mov eax [esi] +
movzx edx byte ptr [eax] +
and edx 3 +
cmp dl 1 +
jbe loc_44CD60  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jz loc_44CD50  +
movzx eax byte ptr [ebx+33h] +
test al 0Ch +
jz loc_44C695  +
test al 3 +
jnz loc_44C69F  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
movzx ecx byte ptr [ebx+30h] +
jz loc_44CCF0  +
movzx eax byte ptr [ebx+0Ch] +
mov [esp+0E8h+var_BC] 1 +
mov edx [ebx+2Ch] +
and ecx 0Fh +
test edi edi +
mov [esp+0E8h+var_A0] 0 +
mov [esp+0E8h+var_9C] edx +
movzx edx byte ptr [ebx+31h] +
mov [esp+0E8h+var_93] dl +
jz loc_44C6F4  +
and edx 0FFFFFFFCh +
mov [esp+0E8h+var_94] cl +
mov [esp+0E8h+var_93] dl +
movzx edx byte ptr [ebx+32h] +
cmp al 6 +
mov [esp+0E8h+var_92] dl +
ja loc_44CD08  +
jmp ds:off_4B22D0[eax*4]  +
test edi edi +
jnz loc_44C5D7  +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_44C618  +
mov edx [esi] +
movzx eax byte ptr [edx+1] +
and eax 18h +
cmp al 18h +
jz loc_44C620  +
cmp al 10h +
jz loc_44CF30  +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_44CEC0  +
lea edx [eax-1] +
cmp dl 1 +
jbe loc_44CF07  +
movzx ecx byte ptr [ebx+30h] +
mov [esp+0E8h+var_BC] 0 +
jmp loc_44C63A  +
mov ebx [ebx+14h] +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_44C5C4  +
jmp loc_44C688  +
test byte ptr [ebx+35h] 4 +
jz loc_44C810  +
test byte ptr [ebx+33h] 2 +
jz loc_44C810  +
sub ecx 60h +
mov [esp+0E8h+var_94] cl +
jmp loc_44C667  +
mov eax [eax+0ECh] +
test eax eax +
jz loc_44C72B  +
mov [esp+0E8h+var_E8] ebx +
call eax  +
test eax eax +
jnz loc_44C5F1  +
movzx eax byte ptr [ebx+33h] +
test al 4 +
jz loc_44C5F1  +
test al 1 +
mov eax [esi] +
jz loc_44C749  +
movzx edx byte ptr [eax] +
test dl 40h +
jz loc_44C5F6  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_44D0A5  +
movzx edx byte ptr [eax+2] +
and edx 18h +
cmp dl 8 +
jz loc_44C5F3  +
mov ecx [eax+18h] +
mov ecx [ecx+18h] +
mov [esp+0E8h+var_C0] ecx +
xor ecx ecx +
cmp dl 18h +
setz cl  +
xor edx edx +
test byte ptr [ebx+33h] 1 +
mov [esp+0E8h+var_BC] ecx +
jnz loc_44C787  +
mov edx [ebx+14h] +
mov ecx [ebx+4] +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_C0] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_B8] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ecx +
mov ecx [esp+0E8h+var_B8] +
mov [esp+0E8h+var_E4] ecx +
call eax  +
test eax eax +
jnz loc_44C5F1  +
mov [esp+0E8h+var_E8] 11h +
call sub_420C50  +
nop   +
mov dword ptr [ebp+0] 1 +
xor eax eax +
jmp loc_44C68D  +
or edx eax +
and edx 10h +
jnz loc_44C5B8  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 2 +
jnz loc_44C5B8  +
and eax 6 +
cmp al 6 +
jz loc_44C5BA  +
xor edi edi +
jmp loc_44C5BA  +
cmp al 4 +
jz loc_44CD24  +
cmp al 2 +
jz loc_44CD24  +
add ecx 10h +
mov [esp+0E8h+var_94] cl +
jmp loc_44C667  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+94h] +
test eax eax +
jz loc_44C858  +
test byte ptr [eax+29h] 8 +
jnz loc_44C858  +
mov [esp+0E8h+var_E4] 2429h +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esi] +
mov [esp+0E8h+var_90] 0 +
movzx ecx byte ptr [eax] +
mov [esp+0E8h+var_B8] offset off_4928E8 +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [ebx+30h] +
and edx 20000FFh +
cmp edx 200000Ah +
jz loc_44CE01  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_44CE17  +
test byte ptr [esp+0E8h+var_C0] 1 +
jz loc_44CD30  +
test byte ptr [ebx+31h] 3 +
jz loc_44C8AB  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_44CD30  +
mov edx [eax+1Ch] +
mov edx [edx+30h] +
test edx edx +
jz loc_44C8F0  +
mov ecx [esp+0E8h+var_C4] +
mov edx [ecx+98h] +
mov ecx [esi+4] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_C0] ecx +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_C0] +
mov [esp+0E8h+var_E8] ecx +
call edx  +
test eax eax +
jz loc_44C7D0  +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [esp+0E8h+var_90] +
test edx edx +
mov [esp+0E8h+var_B4] edx +
jnz loc_44C92C  +
movzx edx byte ptr [ebx+33h] +
test dl 1 +
jz loc_44C920  +
mov ecx eax +
movzx eax [esp+0E8h+var_94] +
mov byte ptr [esp+0E8h+var_B0] al +
shr al 4 +
sub eax 1 +
cmp al 1 +
mov eax ecx +
jbe loc_44CE7A  +
and edx 0Ah +
cmp dl 8 +
jz loc_44CF21  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
and ecx 3 +
cmp cl 2 +
mov byte ptr [esp+0E8h+var_C0] cl +
jz loc_44C960  +
movzx ecx [esp+0E8h+var_93] +
and ecx 3 +
mov edx ecx +
jz loc_44C960  +
movzx ecx [esp+0E8h+var_94] +
shr cl 4 +
cmp cl 2 +
jz loc_44C960  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_44CE26  +
mov eax [eax+1Ch] +
mov ecx [eax+0F8h] +
test ecx ecx +
jz loc_44CB30  +
mov edx [ebx+20h] +
cmp edx 0FFFFFFFFh +
mov [esp+0E8h+var_B0] edx +
jz loc_44CB30  +
mov eax [eax+30h] +
test eax eax +
jz loc_44CB30  +
mov eax [ebx+40h] +
test eax eax +
jz loc_44CF87  +
mov eax [ebx+38h] +
mov edi [esp+0E8h+var_B4] +
mov [esp+0E8h+var_98] eax +
mov eax [ecx+6Ch] +
sub edi 0FF00h +
cmp edi 0FFFEFFFFh +
mov [esp+0E8h+var_C0] eax +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
movzx ecx byte ptr [edx+5] +
jbe loc_44CF60  +
movzx edi cl +
mov edx [edx+24h] +
imul edi [esp+0E8h+var_B0] +
add edi [esp+0E8h+var_C0] +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_44CAB8  +
mov eax [esi] +
xor edx edx +
mov eax [eax+1Ch] +
mov eax [eax+60h] +
mov edi eax +
mov [esp+0E8h+var_C0] eax +
mov eax [ecx+8Ch] +
mov eax [eax+28h] +
mov [esp+0E8h+var_C4] eax +
mov eax [ebx+3Ch] +
div  edi +
mov eax [esp+0E8h+var_C4] +
lea edi [edx+2] +
imul edi eax +
shl eax 3 +
add edi [ecx+6Ch] +
cmp eax 8 +
jz loc_44D021  +
cmp eax 10h +
jz loc_44D0EC  +
cmp eax 20h +
jz loc_44D144  +
cmp eax 40h +
nop   +
jnz loc_44D1CB  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E0] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
sar edx 1Fh +
mov [esp+0E8h+var_E4] edx +
call eax  +
mov eax [esi+4] +
mov edx [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [eax+4] +
lea edx [edi+edx+2] +
mov edi [esp+0E8h+var_B4] +
imul edx [esp+0E8h+var_C4] +
add edx [ecx+6Ch] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
call eax  +
mov eax [esi+10h] +
test eax eax +
jz loc_44CB30  +
mov eax [eax+6Ch] +
test eax eax +
jz loc_44CB30  +
movzx edi byte ptr [ebx+33h] +
mov edx [ebx+40h] +
test edi 2 +
jnz loc_44CFF0  +
test edx edx +
jz loc_44D084  +
mov ecx [edx+14h] +
mov ecx [ecx+0A0h] +
test byte ptr [ecx+924h] 0Bh +
jnz loc_44D084  +
mov edx [edx+24h] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
movzx edx byte ptr [ebx+34h] +
and edx 6 +
cmp dl 6 +
jz loc_44D090  +
mov ecx [ebx+20h] +
mov edx [esi+4] +
lea eax [eax+ecx*2] +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_8C] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_43C890  +
nop   +
mov eax [esp+0E8h+var_BC] +
test eax eax +
jnz loc_44C688  +
mov eax [esp+0E8h+var_B8] +
test byte ptr [eax+15h] 80h +
jnz loc_44C688  +
mov edi [ebp+4] +
test edi edi +
jz loc_44CBC6  +
mov ecx [ebp+8] +
test ecx ecx +
jnz loc_44CBC6  +
mov eax [ebp+0Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_44CBC6  +
lea edx [esp+0E8h+var_8C] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_4928E8 +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_80] 0 +
mov [esp+0E8h+var_8C] 0 +
mov [esp+0E8h+var_88] 0 +
mov [esp+0E8h+var_84] 0 +
mov byte ptr [esp+0E8h+var_80] 4 +
mov [esp+0E8h+var_7C] 0FFFFFFF1h +
call sub_44BE80  +
test eax eax +
jz loc_44C68D  +
mov dword ptr [ebp+8] 1 +
mov eax [esi+4] +
lea edx [esp+0E8h+var_A0] +
mov ecx [esp+0E8h+var_B8] +
mov edi [eax+7Ch] +
mov eax [ebx+4] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] esi +
call sub_44BE80  +
test eax eax +
jz loc_44CD40  +
cmp eax 1 +
jz loc_44D019  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jnz loc_44C688  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 251Bh +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BD0  +
mov eax [ebx+14h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+3Ch] +
test eax eax +
jz loc_44C830  +
mov edx [esi+4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_90] eax +
jz loc_44D047  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+38h] +
mov ecx eax +
mov eax [ebx+18h] +
add ecx eax +
mov eax [esi] +
mov [esp+0E8h+var_A0] ecx +
movzx edx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] dl +
and edx 3 +
cmp dl 2 +
jz loc_44C871  +
mov edx [esp+0E8h+var_B8] +
mov edx [edx+3Ch] +
add ecx [edx+1Ch] +
cmp byte ptr [ebx+30h] 6 +
mov [esp+0E8h+var_A0] ecx +
jnz loc_44C871  +
mov edx [eax+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_44C871  +
sub ecx [edx+1Ch] +
mov [esp+0E8h+var_A0] ecx +
jmp loc_44C871  +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov ecx eax +
mov [esp+0E8h+var_B8] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+148h] +
mov [esp+0E8h+var_E8] ecx +
call eax  +
mov [esp+0E8h+var_90] eax +
mov eax [ebx+14h] +
mov ecx [eax] +
mov eax 1 +
shl eax cl +
mov [esp+0E8h+var_A0] eax +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
jmp loc_44C871  +
cmp cl 0Ah +
jz loc_44C62E  +
test byte ptr [ebx+34h] 8 +
jnz loc_44C62E  +
jmp loc_44C688  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 23FBh +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BD0  +
add ecx 20h +
mov [esp+0E8h+var_94] cl +
jmp loc_44C667  +
test byte ptr [ebx+34h] 8 +
jnz loc_44C8F0  +
jmp loc_44C8AB  +
mov dword ptr [ebp+0] 1 +
jmp loc_44C68D  +
movzx eax byte ptr [ebx+0Ch] +
jmp loc_44C6D4  +
test byte ptr [ebx+34h] 8 +
jz loc_44C602  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 6 +
jnz loc_44C602  +
movzx edx word ptr [ebx+34h] +
and dx 180h +
cmp dx 100h +
jnz loc_44C602  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_44D1A3  +
cmp byte ptr [ebx+0Ch] 6 +
mov eax ebx +
jnz loc_44CDAC  +
mov eax [eax+14h] +
cmp byte ptr [eax+0Ch] 6 +
jz loc_44CDA3  +
movzx ecx byte ptr [ebx+31h] +
mov edx offset aBInternalSymbo +
and ecx 3 +
cmp cl 1 +
jz loc_44CDCD  +
cmp cl 2 +
mov edx offset aBHiddenSymbolS +
mov ecx offset aBLocalSymbolSI +
cmovnz edx ecx +
mov eax [eax+14h] +
mov ecx [esi+4] +
cmp eax offset off_492990 +
jz loc_44D1C4  +
mov eax [eax+94h] +
mov ebx [ebx+4] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_DC] ebx +
call off_492AE8  +
jmp loc_44C7C3  +
movzx edx byte ptr [esp+0E8h+var_C0] +
and edx 3 +
cmp dl 2 +
jnz loc_44C8B5  +
jmp loc_44C886  +
test byte ptr [ebx+34h] 8 +
jz loc_44C8F0  +
jmp loc_44C890  +
test byte ptr [ebx+33h] 2 +
jnz loc_44C960  +
cmp dl 3 +
jz loc_44D176  +
cmp dl 1 +
mov eax offset aBInternalSym_0 +
mov edx offset aBHiddenSymbo_0 +
cmovnz eax edx +
mov ecx [ebx+4] +
mov edx [esi+4] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
call off_492AE8  +
mov [esp+0E8h+var_E8] 11h +
call sub_420C50  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_44C68D  +
movzx eax byte ptr [esp+0E8h+var_B0] +
mov [esp+0E8h+var_AC] ecx +
mov ecx edx +
and eax 0Fh +
movzx edx al +
cmp edx 0Ah +
mov edx 2 +
cmovz eax edx +
mov byte ptr [esp+0E8h+var_B0] al +
mov eax ecx +
and eax 10h +
cmp al 1 +
sbb eax eax +
mov edx eax +
movzx eax byte ptr [esp+0E8h+var_B0] +
and edx 10h +
lea eax [eax+edx+10h] +
mov edx ecx +
mov [esp+0E8h+var_94] al +
mov eax [esp+0E8h+var_AC] +
jmp loc_44C920  +
mov edx [esi] +
test byte ptr [edx+1] 2 +
mov edx [ebx+14h] +
jz loc_44CEE0  +
cmp edx offset off_492990 +
jz loc_44CEE0  +
cmp dword ptr [edx+3Ch] offset off_492990 +
jz loc_44D0C8  +
test byte ptr [edx+16h] 10h +
jnz loc_44C6C8  +
mov edx [edx+94h] +
test edx edx +
jz loc_44C6C8  +
test byte ptr [edx+2Ah] 20h +
jnz loc_44C620  +
jmp loc_44C6C8  +
mov edx [ebx+14h] +
test edx edx +
jz loc_44C6D4  +
test byte ptr [edx+2Ah] 20h +
jnz loc_44C620  +
jmp loc_44C6D4  +
mov [esp+0E8h+var_9C] 0 +
jmp loc_44C92C  +
mov ecx [ebx+4] +
mov eax [edx+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_42A4E0  +
test eax eax +
jnz loc_44C6B8  +
jmp loc_44C620  +
mov [esp+0E8h+var_B4] ecx +
call sub_44BE40  +
mov ecx [esp+0E8h+var_B4] +
test eax eax +
jz loc_44CD40  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
jmp loc_44C9CC  +
test edi edi +
jnz loc_44C997  +
cmp byte ptr [esp+0E8h+var_C0] 1 +
jbe loc_44D180  +
mov edi [ebx+4] +
mov [esp+0E8h+var_E4] 40h +
mov [esp+0E8h+var_C0] ecx +
mov [esp+0E8h+var_E8] edi +
call strrchr  +
mov ecx [esp+0E8h+var_C0] +
test eax eax +
jz loc_44C997  +
cmp byte ptr [eax+1] 0 +
jz loc_44C997  +
mov eax [esi+4] +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] offset aBNoSymbolVersi +
mov [esp+0E8h+var_E4] eax +
call off_492AE8  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_44C68D  +
test edx edx +
jz loc_44D194  +
mov edx [edx+8] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
mov edx [esi] +
test byte ptr [edx] 20h +
jz loc_44CB02  +
add word ptr [esp+0E8h+var_8C] 1 +
jmp loc_44CB02  +
mov [ebx+1Ch] edi +
jmp loc_44C68D  +
mov eax [ebx+20h] +
movzx edx byte ptr [edi] +
mov [edi] al +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [ebx+20h] +
mov ecx [ecx+6Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
mov [ecx+eax] dl +
jmp loc_44CAB8  +
mov edi [esp+0E8h+var_B8] +
mov eax [esi+4] +
mov edx [edi+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_DC] edi +
mov [esp+0E8h+var_E8] offset aBCouldNotFindO +
mov [esp+0E8h+var_E0] edx +
call off_492AE8  +
mov [esp+0E8h+var_E8] 0Fh +
call sub_420C50  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_44C68D  +
xor ecx ecx +
mov word ptr [esp+0E8h+var_8C] cx +
jmp loc_44CB02  +
and edi 2 +
jz loc_44CB12  +
or word ptr [esp+0E8h+var_8C] 8000h +
jmp loc_44CB12  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_44C210  +
test eax eax +
mov eax [esi] +
jnz loc_44C5F3  +
jmp loc_44C756  +
movzx ecx word ptr [edx+18h] +
and cx 380h +
cmp cx 100h +
jz loc_44CEE0  +
cmp cx 200h +
jnz loc_44C620  +
jmp loc_44CEE0  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+3Ch] +
mov eax [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
add eax [ecx+6Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E8] eax +
call edx  +
jmp loc_44CAB8  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+30h] +
jmp loc_44D11C  +
mov eax offset aBProtectedSymb +
jmp loc_44CE49  +
movzx eax byte ptr [ebx+33h] +
and eax 6 +
cmp al 2 +
jnz loc_44CF9A  +
jmp loc_44C997  +
mov edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
jmp loc_44D003  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_44C210  +
test eax eax +
jnz loc_44C602  +
jmp loc_44CD9B  +
mov eax ecx +
jmp loc_44CDE4  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 24C9h +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BD0  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
mov [esp+124h+var_108] ecx +
jz loc_44D27F  +
mov ebp eax +
mov esi edx +
jmp loc_44D20E  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_44D236  +
mov [esp+124h+var_120] ebp +
mov eax [esi] +
mov [esp+124h+var_124] eax +
call strcmp  +
test eax eax +
jnz loc_44D207  +
mov eax [esi+1Ch] +
mov edx [esp+124h+var_108] +
mov [edx] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+124h+var_124] ebp +
call strlen  +
mov [esp+124h+var_10C] eax +
mov esi [ebx] +
mov [esp+124h+var_124] esi +
call strlen  +
cmp eax [esp+124h+var_10C] +
mov edi eax +
ja loc_44D278  +
mov [esp+124h+var_11C] eax +
mov [esp+124h+var_120] ebp +
mov [esp+124h+var_124] esi +
call strncmp  +
test eax eax +
jnz loc_44D278  +
add edi ebp +
mov esi offset a_end +
mov ecx 4 +
cmps   +
jz loc_44D289  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_44D242  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
mov ecx [esp+124h+var_108] +
add eax [ebx+1Ch] +
mov [ecx] eax +
mov eax 1 +
jmp loc_44D22E  +
***
push ebx  +
mov ebx edx +
sub esp 10h +
mov esi [edx] +
mov ecx [edx+4] +
imul ecx [esi+28h] +
mov [esi+18h] ecx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_425930  +
test eax eax +
mov [esi+30h] eax +
jz loc_44D300  +
mov eax [ebx+0Ch] +
mov edi 1 +
test eax eax +
jz loc_44D2E0  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_44D2D3  +
shl eax 2 +
mov [esp+10h+var_10] eax +
call sub_42B590  +
test eax eax +
jz loc_44D30B  +
mov [ebx+0Ch] eax +
jmp loc_44D2D3  +
mov edx [esi+18h] +
xor edi edi +
test edx edx +
jz loc_44D2C7  +
jmp loc_44D2D3  +
xor edi edi +
jmp loc_44D2D3  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_44D3F5  +
mov eax [esi+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_44D3F5  +
movzx eax byte ptr [ebx+34h] +
mov ebp [ebx+4] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_44D402  +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
jz loc_44D402  +
sub eax ebp +
mov [esp+1Ch+var_10] eax +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_44D406  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov ebp edi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] eax +
call memcpy  +
mov eax [esp+1Ch+var_10] +
mov byte ptr [edi+eax] 0 +
mov [esp+1Ch+var_1C] ebp +
call sub_43C8F0  +
mov ecx [esi+8] +
mov edx [esi+10h] +
mov [edx+ecx*4] eax +
mov edx [esi+14h] +
mov ecx [ebx+20h] +
mov [edx+ecx*4] eax +
mov eax [esi+28h] +
add dword ptr [esi+8] 1 +
mov edx [ebx+20h] +
test eax eax +
js loc_44D3D1  +
cmp eax edx +
jle loc_44D3D4  +
mov [esi+28h] edx +
test edi edi +
mov eax 1 +
jz loc_44D3FA  +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_44D3A5  +
mov dword ptr [esi+44h] 1 +
xor eax eax +
jmp loc_44D3FA  +
***
jmp sub_44D420  +
***
mov ebx [esp+18h+arg_0] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_44D444  +
mov eax [ebx+38h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_467120  +
mov [ebx+38h] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax [edx+8] +
test eax eax +
jz loc_44D468  +
mov [esp+18h+var_18] eax +
call sub_466E20  +
mov eax [ebx+14h] +
test eax eax +
jz loc_44D477  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_44D486  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44D495  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+20h] +
test eax eax +
jz loc_44D4A4  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+24h] +
test eax eax +
jz loc_44D4B3  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+28h] +
test eax eax +
jz loc_44D4C2  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_44D4D1  +
mov [esp+18h+var_18] eax +
call free  +
mov edx [ebx+30h] +
test edx edx +
jz loc_44D4E0  +
mov [esp+18h+var_18] edx +
call free  +
mov edx [ebx+34h] +
test edx edx +
jz loc_44D4EF  +
mov [esp+18h+var_18] edx +
call free  +
mov ebx [esi] +
test ebx ebx +
jz loc_44D52C  +
test byte ptr [ebx+14h] 4 +
mov esi [ebx+8Ch] +
jz loc_44D525  +
mov eax [esi+48h] +
test eax eax +
jz loc_44D516  +
mov [esp+18h+var_18] eax +
call free  +
test byte ptr [ebx+14h] 4 +
jz loc_44D525  +
mov eax [esi+58h] +
test eax eax +
jz loc_44D525  +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_44D4F5  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_44D560  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+16h] 80h +
jz loc_44D553  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jnz loc_44D553  +
mov eax [eax+8Ch] +
mov edx [ebx+18h] +
mov eax [eax+88h] +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_10] eax +
lea eax [ebx+14h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_4697B0  +
mov [ebx+18h] eax +
jmp loc_44D553  +
***
push esi  +
mov esi edx +
push ebx  +
mov edx offset a_rel_0 +
sub esp 1Ch +
mov ebx offset a_rela_0 +
test ecx ecx +
cmovz ebx edx +
test esi esi +
jz loc_44D614  +
mov [esp+20h+var_20] ebx +
mov edi eax +
call strlen  +
mov [esp+20h+var_20] esi +
mov ebp eax +
call strlen  +
mov [esp+20h+var_20] edi +
lea eax [ebp+eax+1] +
mov [esp+20h+var_1C] eax +
call sub_425850  +
mov [esp+20h+var_14] esi +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] offset aSS_12 +
mov edi eax +
mov [esp+20h+var_20] eax +
call sprintf  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_44D60C  +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+44h+arg_C] +
mov [esp+44h+var_30] eax +
mov eax [edx+0A0h] +
mov [esp+44h+var_28] ecx +
mov ebp [esp+44h+arg_8] +
test ebx ebx +
mov [esp+44h+var_2C] eax +
jz loc_44D6F1  +
mov esi ebp +
mov ebp edi +
mov edi edx +
jmp loc_44D661  +
add ebp 1 +
add esi 14h +
cmp ebp ebx +
jz loc_44D6F1  +
movzx eax byte ptr [esi+0Ch] +
shr al 4 +
test al al +
jnz loc_44D653  +
mov eax [esp+44h+var_2C] +
mov ecx [esi+8] +
mov eax [eax+64h] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_43CA60  +
test eax eax +
jz loc_44D653  +
mov edx [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_40] edx +
call strcmp  +
test eax eax +
jnz loc_44D653  +
mov eax edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
mov eax [eax+edi*4] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_18] eax +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_3C] eax +
call sub_44A200  +
mov edx [esp+44h+var_18] +
mov edi [esp+44h+arg_4] +
mov ecx [edx+3Ch] +
mov [edi] eax +
add eax [ecx+1Ch] +
add eax [edx+38h] +
mov [edi] eax +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_28] +
mov edi [esp+44h+var_30] +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_42D940  +
test eax eax +
mov edx eax +
jz loc_44D758  +
movzx eax byte ptr [eax+0Ch] +
lea ecx [eax-3] +
xor eax eax +
cmp cl 1 +
ja loc_44D6E9  +
mov ecx [edx+14h] +
mov edi [esp+44h+arg_4] +
mov eax [ecx+3Ch] +
mov eax [eax+1Ch] +
add eax [edx+18h] +
add eax [ecx+38h] +
mov [edi] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_44D6E9  +
***
push esi  +
push ebx  +
push eax  +
mov eax 1048h +
call sub_48BDD0  +
sub esp eax +
mov ebx [edx] +
mov ebp edx +
mov eax [esp+14h+arg_1030] +
mov [esp+14h+arg_C] ecx +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_8] eax +
call strlen  +
mov ecx eax +
lea eax [eax-1] +
cmp eax 0FFFh +
ja loc_44D7F7  +
movzx edx byte ptr [ebx] +
cmp dl 2Eh +
jz loc_44D980  +
jle loc_44D810  +
cmp dl 53h +
jz loc_44D9A3  +
cmp dl 73h +
mov [esp+14h+arg_14] 0 +
jnz loc_44D8F5  +
lea eax [ebx+1] +
mov [esp+14h+var_C] 0Ah +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] eax +
mov [esp+14h+arg_10] ecx +
call strtol  +
mov ecx [esp+14h+arg_10] +
add ebx ecx +
mov esi eax +
mov eax [ebp+0] +
lea edi [eax+1] +
cmp edi ebx +
ja loc_44D7F7  +
lea eax [esi+1] +
cmp eax 1000h +
jbe loc_44D846  +
mov [esp+14h+var_14] 5 +
call sub_420C50  +
xor eax eax +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dl 23h +
jnz loc_44D8F5  +
add ebx 1 +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_C] 10h +
call strtoul  +
mov esi [esp+14h+arg_8] +
mov [esi] eax +
add esp 104Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [esp+14h+arg_28] +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] ebx +
call memcpy  +
mov byte ptr [esp+esi+14h+arg_28] 0 +
add esi edi +
mov [ebp+0] esi +
mov esi [esp+14h+arg_14] +
test esi esi +
jz loc_44DAB0  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_44D1F0  +
test eax eax +
jnz loc_44DAF5  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_44D620  +
test eax eax +
jnz loc_44DAF5  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSection_0 +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_492AE8  +
xor eax eax +
jmp loc_44D805  +
mov edi offset a0_1 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_44D9B0  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
neg eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov eax [esp+14h+arg_8] +
add ebx 1 +
mov edi [esp+14h+arg_104C] +
mov [eax] edi +
mov eax 1 +
mov [ebp+0] ebx +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+14h+arg_14] 1 +
jmp loc_44D7C0  +
mov edi offset asc_4B2343 +
mov ecx 2 +
mov esi ebx +
cmps   +
jz loc_44DB00  +
mov edi offset asc_4B2346 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_44DBC8  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov edx [esp+14h+arg_1058] +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
test edx edx +
jz loc_44DF94  +
mov edi [esp+14h+arg_8] +
sar eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_44D620  +
test eax eax +
jz loc_44DCA3  +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
shl eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov edi offset asc_4B2349 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_44DCE3  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setz al  +
movzx eax al +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
jmp loc_44DAF5  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_44D1F0  +
test eax eax +
jnz loc_44DAF5  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSymbol +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_492AE8  +
xor eax eax +
jmp loc_44D805  +
mov edi offset asc_4B234C +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_44DDB8  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setnz al  +
movzx eax al +
jmp loc_44DC98  +
mov edi offset asc_4B234F +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_44DEA6  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_44E16A  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov edi offset asc_4B2352 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_44DFA6  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_44E2CB  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov edi [esp+14h+arg_8] +
shr eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov edi offset asc_4B2355 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_44E07F  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
xor eax eax +
cmp [esp+14h+arg_24] 0 +
jz loc_44DC98  +
cmp [esp+14h+arg_28] 0 +
jmp loc_44DDAD  +
mov [esp+14h+var_C] 2 +
mov [esp+14h+var_10] offset asc_4B2358 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_10] edx +
call strncmp  +
mov edx [esp+14h+arg_10] +
test eax eax +
jnz loc_44E184  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_24] 0 +
mov eax 1 +
jz loc_44E075  +
jmp loc_44DC98  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp dl 7Eh +
jz loc_44E34C  +
cmp dl 21h +
jz loc_44E2E5  +
cmp dl 2Ah +
jz loc_44E4A3  +
cmp dl 2Fh +
jz loc_44E3D9  +
cmp dl 25h +
jz loc_44EA9A  +
cmp dl 5Eh +
jz loc_44E9D4  +
cmp dl 7Ch +
jz loc_44E90E  +
cmp dl 26h +
jz loc_44E848  +
cmp dl 2Bh +
nop   +
jz loc_44E751  +
cmp dl 2Dh +
jz loc_44E68B  +
cmp dl 3Ch +
jz loc_44E5B1  +
cmp dl 3Eh +
jnz loc_44E598  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_44E3BF  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_24] 0 +
jmp loc_44DC92  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
not eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_44E569  +
cdq   +
idiv  [esp+14h+arg_28] +
jmp loc_44DC98  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
jz loc_44E57F  +
mov eax [esp+14h+arg_24] +
imul eax [esp+14h+arg_28] +
jmp loc_44DC98  +
xor edx edx +
mov edi [esp+14h+arg_8] +
div  [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov eax [esp+14h+arg_28] +
imul eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
movsx edx dl +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] offset aUnknownOperato +
call off_492AE8  +
jmp loc_44D7F7  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_44E816  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
sub eax [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
jz loc_44E830  +
mov eax [esp+14h+arg_24] +
add eax [esp+14h+arg_28] +
jmp loc_44DC98  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
add eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
and eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
or eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
xor eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_44D805  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_44D760  +
test eax eax +
jz loc_44D803  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_44EB66  +
cdq   +
idiv  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
jmp loc_44DAF5  +
xor edx edx +
div  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_44D805  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
cmp [eax+14h] edx +
jbe loc_44EBA5  +
mov ecx [eax+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jz loc_44EC08  +
sub edx [eax+18h] +
mov eax [eax+1Ch] +
mov eax [eax+edx*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_44EBCF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_44EBC0  +
sub edx 3 +
cmp dl 1 +
ja loc_44EC01  +
mov eax [eax+14h] +
cmp eax offset off_492990 +
jz loc_44EC01  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jnz loc_44EC01  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_44EC01  +
cmp dx 200h +
jnz loc_44EC03  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov edx [ebx+10h] +
mov eax [eax+10h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_43F6C0  +
test eax eax +
jz loc_44EC03  +
mov edx [esp+18h+arg_8] +
test edx edx +
jz loc_44EC03  +
cmp eax offset off_492990 +
jnz loc_44EBE1  +
jmp loc_44EC01  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_4] +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_3C] 0 +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] ebx +
mov eax [esi+1Ch] +
mov [esp+4Ch+var_4C] eax +
call sub_42D940  +
test eax eax +
jz loc_44EC72  +
mov byte ptr [eax+0Ch] 0 +
mov [esp+4Ch+var_10] eax +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_28] eax +
movzx eax byte ptr [ebp+1ACh] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_38] 0 +
and eax 1 +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+arg_8] +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_4C] esi +
call sub_42E5A0  +
test eax eax +
jz loc_44ED20  +
mov ebx [esp+4Ch+var_10] +
movzx eax byte ptr [ebx+31h] +
or byte ptr [ebx+33h] 2 +
and byte ptr [ebx+34h] 0FEh +
or byte ptr [ebx+0Dh] 2 +
mov edx eax +
and edx 3 +
cmp dl 1 +
mov byte ptr [ebx+30h] 1 +
jz loc_44ECFC  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+31h] al +
mov eax [ebp+0DCh] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] 1 +
call eax  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esi+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_44EE90  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+30h] +
mov eax 1 +
test ecx ecx +
jnz loc_44EE86  +
mov edx [ebx+38h] +
test edx edx +
jz loc_44F058  +
mov eax [ebx+50h] +
test eax eax +
jz loc_44F065  +
mov ebp [ebx+38h] +
mov eax [ebp+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+1Ch] +
mov edi eax +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [esi] +
or edi 8 +
and eax 3 +
cmp al 1 +
ja loc_44EEE5  +
mov edi [esp+2Ch+var_10] +
or edi 8 +
test byte ptr [esi+6] 1 +
jz loc_44F037  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_d +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov dword ptr [eax+40h] 1 +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_r +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynsym +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov ecx [esi+1Ch] +
mov [ecx+0F8h] eax +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynstr +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] eax +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_20] offset a_dynamic_0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call sub_44EC30  +
mov ecx [esi+1Ch] +
test eax eax +
mov [ecx+78h] eax +
jz loc_44EE84  +
movzx eax byte ptr [esi+3] +
test al 20h +
jnz loc_44F07D  +
test al 40h +
jnz loc_44F0BC  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_44EE84  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
jz loc_44EE84  +
mov eax [esi+1Ch] +
mov dword ptr [eax+30h] 1 +
mov eax 1 +
jmp loc_44EE86  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_interp +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jnz loc_44EEE5  +
jmp loc_44EE84  +
mov eax [esp+2Ch+arg_0] +
mov [ebx+38h] eax +
nop   +
jmp loc_44EEA7  +
call sub_466DA0  +
test eax eax +
mov [ebx+50h] eax +
jz loc_44EE84  +
mov ebx [esi+1Ch] +
jmp loc_44EEB2  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov ecx [ebx+174h] +
movzx edx byte ptr [ecx+0Bh] +
mov [eax+40h] edx +
mov eax [eax+8Ch] +
movzx ecx byte ptr [ecx+8] +
mov [eax+28h] ecx +
movzx eax byte ptr [esi+3] +
jmp loc_44EFFF  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_41EAF0  +
test eax eax +
jz loc_44EE84  +
mov ecx [ebx+174h] +
movzx edi byte ptr [ecx+0Bh] +
mov [eax+40h] edi +
mov eax [eax+8Ch] +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_44F0FD  +
mov dword ptr [eax+28h] 4 +
jmp loc_44F007  +
mov dword ptr [eax+28h] 0 +
jmp loc_44F007  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [ebx+4] +
mov esi [eax+1B0h] +
mov eax [esp+34h] +
mov ebp [esi+1Ch] +
movzx edx byte ptr [esi+1ADh] +
mov edi [eax+1Ch] +
mov dword ptr [esp+4] offset a_plt_0 +
mov eax ebp +
mov ecx ebp +
or ecx 13h +
and eax 0FFFFFEEDh +
test dl 8 +
cmovz eax ecx +
mov ecx eax +
or ecx 8 +
and edx 2 +
cmovnz eax ecx +
mov [esp+8] eax +
mov [esp] ebx +
call sub_41EAF0  +
test eax eax +
jz loc_44F223  +
movzx ecx byte ptr [esi+1ADh] +
shr cl 4 +
movzx ecx cl +
mov [eax+40h] ecx +
test byte ptr [esi+1ADh] 4 +
mov [edi+0E0h] eax +
jnz loc_44F1F5  +
or ebp 8 +
mov ecx offset a_rela_plt_0 +
test byte ptr [esi+1ACh] 20h +
mov eax offset a_rel_plt_0 +
mov [esp+8] ebp +
mov [esp] ebx +
cmovnz eax ecx +
mov [esp+4] eax +
call sub_41EAF0  +
test eax eax +
jz loc_44F223  +
mov ecx [esi+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [edi+0E4h] eax +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_44ED30  +
test eax eax +
jz loc_44F223  +
test byte ptr [esi+1AEh] 8 +
jnz loc_44F230  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] offset a_procedure_lin +
mov [esp] ebx +
mov [esp+4] eax +
call sub_44EC30  +
mov edx [esp+34h] +
mov ecx [edx+1Ch] +
test eax eax +
mov [ecx+74h] eax +
jnz loc_44F18D  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] 100001h +
mov dword ptr [esp+4] offset a_dynbss +
mov [esp] ebx +
call sub_41EAF0  +
test eax eax +
jz loc_44F223  +
mov eax [esp+34h] +
test byte ptr [eax] 1 +
jnz loc_44F1E8  +
test byte ptr [esi+1ACh] 20h +
mov ecx offset a_rel_bss +
mov eax offset a_rela_bss +
mov [esp+8] ebp +
cmovz eax ecx +
mov [esp+4] eax +
mov [esp] ebx +
call sub_41EAF0  +
test eax eax +
jz loc_44F223  +
mov edx [esi+174h] +
movzx edx byte ptr [edx+0Bh] +
mov [eax+40h] edx +
jmp loc_44F1E8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_44F2B0  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_44F315  +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+4Ch] +
mov edi [esi+50h] +
mov [ebx+20h] eax +
add eax 1 +
test edi edi +
mov [esi+4Ch] eax +
jz loc_44F337  +
mov ebp [ebx+4] +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
mov esi eax +
jz loc_44F350  +
mov byte ptr [eax] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_466E50  +
mov byte ptr [esi] 40h +
cmp eax 0FFFFFFFFh +
jz loc_44F345  +
mov [ebx+38h] eax +
jmp loc_44F2A1  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 1 +
cmp al 1 +
jbe loc_44F2BE  +
or byte ptr [ebx+34h] 8 +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+34h] +
test eax eax +
jnz loc_44F2C5  +
jmp loc_44F2A1  +
call sub_466DA0  +
test eax eax +
mov edi eax +
mov [esi+50h] eax +
jnz loc_44F2D8  +
xor eax eax +
jmp loc_44F2A6  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_466E50  +
jmp loc_44F30B  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov esi [esp+94h+arg_8] +
mov edx [esp+94h+arg_10] +
mov ecx [esp+94h+arg_4] +
mov ebp [esp+94h+arg_20] +
mov [esp+94h+var_38] esi +
mov esi [esp+94h+arg_C] +
mov [esp+94h+var_64] edx +
mov edx [esp+94h+arg_14] +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+arg_0] +
mov [esp+94h+var_44] ecx +
mov ecx [ecx] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+arg_24] +
mov [esp+94h+var_5C] edx +
mov edx [esp+94h+arg_18] +
mov [esp+94h+var_58] eax +
mov [esp+94h+var_34] ebp +
mov [esp+94h+var_48] esi +
mov esi [esp+94h+arg_28] +
mov [esp+94h+var_50] edx +
mov edx [esp+94h+arg_1C] +
mov [esp+94h+var_40] esi +
mov esi [esp+94h+arg_2C] +
mov dword ptr [edx] 0 +
mov [esp+94h+var_3C] edx +
mov dword ptr [ebp+0] 0 +
mov [esp+94h+var_6C] esi +
mov [esp+94h+var_54] ecx +
movzx eax byte ptr [eax+0Ch] +
shr al 4 +
cmp ecx offset off_4928E8 +
movzx eax al +
mov [esp+94h+var_60] eax +
jz loc_44FEA0  +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 0 +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov eax [edi+1Ch] +
mov [esp+94h+var_94] eax +
call sub_42D940  +
mov ebp eax +
test ebp ebp +
jz loc_44F940  +
mov eax [esp+94h+var_74] +
xor esi esi +
mov [eax] ebp +
mov eax [esp+94h+var_70] +
movzx edx byte ptr [ebp+34h] +
mov ecx [eax+4] +
and edx 6 +
cmp dl 2 +
mov [esp+94h+var_74] edx +
mov eax [ecx+1B0h] +
mov [esp+94h+var_68] eax +
jz loc_44F4CA  +
mov [esp+94h+var_90] 40h +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_4C] ecx +
call strrchr  +
mov ecx [esp+94h+var_4C] +
test eax eax +
mov esi eax +
jz loc_44FF00  +
mov edx [esp+94h+var_74] +
test dl dl +
jz loc_44F5A7  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov esi 0 +
cmovnz esi eax +
movzx eax byte ptr [ebp+0Ch] +
mov byte ptr [esp+94h+var_74] al +
sub eax 6 +
cmp al 1 +
ja loc_44F684  +
mov ebx ebp +
nop   +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea eax [edx-6] +
cmp al 1 +
jbe loc_44F4E0  +
mov eax [esp+94h+var_6C] +
mov byte ptr [esp+94h+var_74] dl +
mov eax [eax] +
test eax eax +
jnz loc_44F590  +
cmp ebp ebx +
jz loc_44F693  +
test dl dl +
jz loc_44F693  +
movzx eax byte ptr [ebp+34h] +
and eax 6 +
cmp al 6 +
movzx eax byte ptr [ebx+34h] +
jz loc_44F52D  +
mov edx eax +
and edx 6 +
cmp dl 6 +
jnz loc_44F693  +
shr al 1 +
and eax 3 +
mov edx eax +
xor eax eax +
cmp edx 1 +
jle loc_44F559  +
mov [esp+94h+var_90] 40h +
mov eax [ebx+4] +
mov [esp+94h+var_4C] ecx +
mov [esp+94h+var_94] eax +
call strrchr  +
mov ecx [esp+94h+var_4C] +
add eax 1 +
cmp eax esi +
jz loc_450062  +
test eax eax +
jz loc_44F585  +
test esi esi +
jz loc_44F585  +
mov [esp+94h+var_90] esi +
mov [esp+94h+var_94] eax +
mov [esp+94h+var_4C] ecx +
call strcmp  +
mov ecx [esp+94h+var_4C] +
test eax eax +
jnz loc_44F585  +
mov al 1 +
jmp loc_44F587  +
xor eax eax +
mov esi [esp+94h+var_6C] +
mov [esi] eax +
lea esi [esi+0] +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
ja loc_44F6B0  +
movzx edx al +
jmp ds:off_4B2590[edx*4]  +
cmp ebx eax +
jnb loc_44F851  +
cmp byte ptr [eax-1] 40h +
jz loc_44F851  +
or byte ptr [ebp+34h] 6 +
jmp loc_44F4BB  +
mov eax [ebx+14h] +
mov esi [eax+4] +
mov [esp+94h+var_30] esi +
mov esi [esi+94h] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+var_50] +
test esi esi +
jz loc_44F5F5  +
mov eax [eax] +
mov [esi] eax +
jmp loc_44F5F5  +
mov eax [ebx+14h] +
mov [esp+94h+var_30] eax +
mov eax [eax+94h] +
mov [esp+94h+var_74] eax +
mov eax [esp+94h+var_64] +
test eax eax +
jz loc_44F607  +
mov edx [eax] +
test edx edx +
jz loc_44FEE7  +
cmp [esp+94h+var_60] 2 +
setz al  +
mov byte ptr [esp+94h+var_2C] al +
movzx eax al +
mov [esp+94h+var_64] eax +
movzx eax byte ptr [ebx+0Ch] +
cmp al 2 +
setz dl  +
cmp al 4 +
mov esi edx +
mov edx [esp+94h+var_5C] +
setz al  +
or esi eax +
mov eax esi +
movzx eax al +
test edx edx +
mov [esp+94h+var_4C] eax +
jz loc_44F63F  +
mov [edx] eax +
mov edx [edi+30h] +
mov eax [esp+94h+var_68] +
mov edx [edx+4] +
mov eax [eax+74h] +
mov [esp+94h+var_94] ecx +
mov [esp+94h+var_90] edx +
call eax  +
test eax eax +
jnz loc_44F6C5  +
mov eax 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+14h] +
mov [esp+94h+var_30] 0 +
mov [esp+94h+var_74] eax +
jmp loc_44F5F5  +
mov eax [esp+94h+var_6C] +
mov ebx ebp +
cmp dword ptr [eax] 0 +
jnz loc_44F590  +
mov eax [esp+94h+var_6C] +
mov dword ptr [eax] 1 +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
jbe loc_44F59D  +
lea esi [esi+0] +
mov [esp+94h+var_74] 0 +
mov [esp+94h+var_30] 0 +
jmp loc_44F5F5  +
mov ecx [esp+94h+var_58] +
mov edx ebx +
mov eax edi +
call sub_44A6E0  +
mov eax [esp+94h+var_70] +
mov eax [eax+28h] +
shr eax 5 +
and eax 40h +
mov edx eax +
setnz al  +
mov byte ptr [esp+94h+var_5C] al +
movzx eax al +
test eax eax +
mov [esp+94h+var_28] eax +
jz loc_44F713  +
cmp [esp+94h+var_54] offset off_4928E8 +
jz loc_45004A  +
mov eax [esp+94h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_44F70F  +
or byte ptr [ebx+34h] 80h +
or byte ptr [ebp+34h] 80h +
movzx eax byte ptr [ebx+0Ch] +
test al al +
jz loc_44FED3  +
mov ecx [esp+94h+var_74] +
cmp [esp+94h+var_70] ecx +
jz loc_44FFAA  +
mov ecx [esp+94h+var_74] +
test ecx ecx +
jz loc_450017  +
mov ecx [esp+94h+var_74] +
mov ecx [ecx+28h] +
shr ecx 0Bh +
and ecx 1 +
mov esi [esp+94h+var_54] +
cmp esi offset off_4928E8 +
jz loc_450010  +
mov esi [esi+14h] +
shr esi 0Ch +
xor esi 1 +
and esi 1 +
lea edx [eax-1] +
cmp dl 1 +
setnbe byte ptr [esp+94h+var_6C]  +
cmp al 5 +
setnz al  +
and byte ptr [esp+94h+var_6C] al +
movzx eax byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_24] 0 +
mov [esp+94h+var_60] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Ch] +
mov byte ptr [esp+94h+var_2C] al +
and eax 0Fh +
jnz loc_44FF3A  +
movzx eax byte ptr [ebx+30h] +
mov [esp+94h+var_2C] 0 +
test al al +
jnz loc_44FF12  +
mov edx [esp+94h+var_50] +
test edx edx +
setz byte ptr [esp+94h+var_20]  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_44F870  +
cmp byte ptr [esp+94h+var_20] 0 +
jz loc_44F870  +
mov eax ecx +
mov edx esi +
xor eax 1 +
test al dl +
jz loc_44F870  +
mov eax [esp+94h+var_60] +
test eax eax +
jz loc_44F863  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [eax+0Ch] +
movzx eax byte ptr [ebx+30h] +
and edx 0Fh +
cmp al dl +
jz loc_44F827  +
test dl dl +
jz loc_44F827  +
test al al +
jz loc_44F827  +
mov [esp+94h+var_16] dl +
mov edx [esp+94h+var_24] +
mov byte ptr [esp+94h+var_1C] al +
mov eax [esp+94h+var_2C] +
xor edx 1 +
xor eax 1 +
or al dl +
movzx eax byte ptr [esp+94h+var_1C] +
movzx edx [esp+94h+var_16] +
jnz loc_44F83D  +
cmp [esp+94h+var_60] 0 +
jz loc_44F870  +
cmp dl 0Ah +
setz dl  +
cmp al 0Ah +
setz al  +
cmp dl al +
jz loc_44F870  +
mov eax [esp+94h+var_3C] +
mov dword ptr [eax] 1 +
mov eax 1 +
jmp loc_44F65E  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [ebp+34h] al +
jmp loc_44F4BB  +
cmp byte ptr [ebx+0Ch] 5 +
jz loc_44F7E8  +
lea esi [esi+0] +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_44F950  +
test byte ptr [eax+2Ah] 20h +
jnz loc_44F950  +
mov eax [esp+94h+var_70] +
test byte ptr [eax+2Ah] 20h +
jnz loc_44F950  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [ebx+30h] +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al dl +
jz loc_44F950  +
cmp al 6 +
jz loc_45007B  +
cmp dl 6 +
jnz loc_44F950  +
mov eax [esp+94h+var_30] +
mov edi [esp+94h+var_54] +
mov [esp+94h+var_54] eax +
mov eax [esp+94h+var_60] +
mov [esp+94h+var_30] edi +
mov edi [esp+94h+var_70] +
mov [esp+94h+var_60] esi +
mov esi eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_74] edi +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+var_60] +
and eax esi +
test al 1 +
jnz loc_4500B5  +
mov eax [esp+94h+var_60] +
or eax esi +
mov eax [ebx+4] +
jz loc_450134  +
test esi esi +
mov [esp+94h+var_84] eax +
jz loc_4500EE  +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsDefinition +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_492AE8  +
mov [esp+94h+var_94] 11h +
call sub_420C50  +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_44F9ED  +
mov eax [esp+94h+var_58] +
test byte ptr [eax+0Dh] 3 +
jz loc_44F9FA  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_44F9FA  +
cmp byte ptr [ebp+0Ch] 6 +
jz loc_45009F  +
mov eax [ebx+10h] +
test eax eax +
jz loc_450118  +
mov eax [esp+94h+var_70] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_45006C  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov eax 1 +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
jmp loc_44F65E  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jnz loc_44FF65  +
mov edx esi +
and edx 1 +
jz loc_44FA0C  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_44FBE4  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_44FA26  +
cmp byte ptr [esp+94h+var_5C] 0 +
mov eax 0 +
cmovz eax [esp+94h+var_4C] +
mov [esp+94h+var_4C] eax +
movzx eax byte ptr [esp+94h+var_24] +
test byte ptr [esp+94h+var_2C] al +
jz loc_44FA3B  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_64] +
jnz loc_44FC60  +
test esi esi +
jnz loc_44FC56  +
mov eax [esp+94h+var_48] +
mov eax [eax] +
test eax eax +
jnz loc_44FC6A  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_44FC6A  +
and dl byte ptr [esp+94h+var_5C] +
mov [esp+94h+var_1C] 0 +
mov [esp+94h+var_16] dl +
jz loc_44FAB5  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_44FAB5  +
mov eax [esp+94h+var_54] +
mov edx [esp+94h+var_64] +
mov eax [eax+14h] +
mov [esp+94h+var_1C] edx +
and eax 3 +
cmp eax 1 +
jnz loc_44FAB5  +
mov eax [esp+94h+var_58] +
mov edx [esp+94h+var_24] +
mov eax [eax+4] +
xor edx 1 +
test eax eax +
mov eax edx +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_1C] eax +
mov eax ecx +
and al byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_5C] 0 +
mov [esp+94h+var_15] al +
jz loc_44FAD3  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_44FFD5  +
mov eax [esp+94h+var_68] +
mov eax [eax+150h] +
test eax eax +
jz loc_44FB24  +
mov ecx [esp+94h+var_30] +
mov edx [esp+94h+var_58] +
mov [esp+94h+var_88] esi +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_7C] ecx +
mov ecx [esp+94h+var_74] +
mov [esp+94h+var_90] edx +
mov [esp+94h+var_80] ecx +
mov ecx [esp+94h+var_60] +
mov [esp+94h+var_84] ecx +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_8C] ecx +
call eax  +
test eax eax +
jz loc_44F940  +
mov ecx [esp+94h+var_44] +
mov eax [ecx] +
mov [esp+94h+var_54] eax +
movzx eax byte ptr [esp+94h+var_1C] +
test byte ptr [esp+94h+var_5C] al +
jz loc_44FB7F  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jz loc_44FB7F  +
mov edx [edi+18h] +
mov ecx [esp+94h+var_70] +
mov edx [edx+8] +
mov [esp+94h+var_84] eax +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call edx  +
test eax eax +
jz loc_44F940  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jbe loc_44FB75  +
mov [ebx+2Ch] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
cmp [esp+94h+var_16] 0 +
jz loc_44FBF9  +
mov eax [esp+94h+var_60] +
test eax eax +
jnz loc_44FBA3  +
cmp byte ptr [ebx+0Ch] 5 +
mov esi 1 +
jnz loc_44FBF9  +
mov eax [esp+94h+var_24] +
or eax [esp+94h+var_64] +
jz loc_44FBF9  +
mov eax [esp+94h+var_34] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_44] +
mov dword ptr [eax] offset off_4928E8 +
mov eax [esp+94h+var_40] +
cmp byte ptr [ebx+0Ch] 5 +
mov dword ptr [eax] 1 +
jz loc_450090  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_44F659  +
mov [esp+94h+var_54] offset off_4928E8 +
jmp loc_44FDEA  +
test ecx ecx +
mov eax 0 +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_64] eax +
jmp loc_44FA0C  +
mov eax [esp+94h+var_1C] +
test eax eax +
jz loc_44FC79  +
cmp byte ptr [ebx+0Ch] 5 +
jnz loc_44FC79  +
mov eax [esp+94h+var_34] +
mov ecx [esp+94h+var_38] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
mov [ecx] eax +
mov eax [esp+94h+var_68] +
mov ecx [esp+94h+var_30] +
mov eax [eax+14Ch] +
mov [esp+94h+var_94] ecx +
call eax  +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_54] eax +
mov [ecx] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_28] +
test eax eax +
jz loc_44FDEA  +
jmp loc_44F659  +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_44FA51  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
jmp loc_44FA69  +
test esi 1 +
jz loc_44FDD6  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_44FDD6  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_44FD56  +
cmp [esp+94h+var_28] 0 +
jnz loc_44F659  +
cmp [esp+94h+var_15] 0 +
jz loc_450037  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_450037  +
mov edx [ebx+14h] +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov edx [edx+94h] +
mov [ebx+14h] edx +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_54] +
test byte ptr [ecx+15h] 10h +
jz loc_44FCFE  +
mov ecx [esp+94h+var_2C] +
test ecx ecx +
jz loc_44FCF4  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov byte ptr [ebx+30h] 0 +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
cmp byte ptr [ebp+0Ch] 6 +
jnz loc_44FE93  +
test ebp ebp +
jz loc_44F659  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [ebx+14h] +
mov [ebp+14h] eax +
mov eax [esp+94h+var_68] +
mov [ebp+0Ch] dl +
mov [ebx+14h] ebp +
mov byte ptr [ebx+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_44F659  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
or byte ptr [ebp+33h] 4 +
jmp loc_44F659  +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_44FD73  +
test byte ptr [eax+2Ah] 20h +
jz loc_44FD73  +
mov eax [esp+94h+var_70] +
mov esi 1 +
test byte ptr [eax+2Ah] 20h +
jz loc_44FD7F  +
mov eax [esp+94h+var_3C] +
xor esi esi +
mov dword ptr [eax] 1 +
mov ecx [esp+94h+var_28] +
mov eax [esp+94h+var_70] +
mov eax [eax+4] +
mov [esp+94h+var_8C] ecx +
mov ecx [esp+94h+var_54] +
mov [esp+94h+var_90] esi +
lea edx [ecx+14h] +
mov ecx [esp+94h+var_58] +
mov [esp+94h+var_94] edx +
mov edx ebx +
call sub_44B9A0  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_44FDD6  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
ja loc_44FDD6  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_44F659  +
test esi esi +
jnz loc_44FCA7  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jz loc_44F659  +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_2C] +
jnz loc_44FCA7  +
mov edx [esp+94h+var_5C] +
test edx edx +
jz loc_44F659  +
mov ecx [esp+94h+var_58] +
mov eax [edi+18h] +
mov edx [ecx+4] +
mov ecx [esp+94h+var_70] +
mov eax [eax+8] +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_84] edx +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
test eax eax +
jz loc_44F940  +
mov ecx [esp+94h+var_38] +
mov eax [ebx+2Ch] +
cmp eax [ecx] +
jbe loc_44FE51  +
mov [ecx] eax +
cmp byte ptr [esp+94h+var_20] 0 +
jnz loc_4501E1  +
mov eax [ebx+14h] +
mov ecx [esp+94h+var_50] +
mov edx [eax+40h] +
mov eax [eax+94h] +
mov [ecx] edx +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
cmp byte ptr [ebp+0Ch] 6 +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_48] +
mov dword ptr [ecx] 1 +
jz loc_45015A  +
mov dword ptr [ebx+40h] 0 +
jmp loc_44F659  +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_80] 0 +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 1 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] edi +
mov [esp+94h+var_94] eax +
call sub_42D990  +
mov ebp eax +
jmp loc_44F45C  +
and byte ptr [ebx+34h] 0FEh +
add esp 8Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+94h+var_74] +
mov [eax] ecx +
mov eax [esp+94h+var_70] +
mov ecx [eax+4] +
jmp loc_44F607  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [ebp+34h] al +
jmp loc_44F4CA  +
mov [esp+94h+var_20] ecx +
mov ecx [esp+94h+var_68] +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_20] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_2C] eax +
jmp loc_44F7B0  +
mov [esp+94h+var_2C] ecx +
mov ecx [esp+94h+var_68] +
movzx eax al +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_2C] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_24] eax +
jmp loc_44F79C  +
cmp [esp+94h+var_54] offset off_4928E8 +
jz loc_44F9FA  +
mov ecx [esp+94h+var_3C] +
mov dword ptr [ecx] 1 +
or byte ptr [ebx+33h] 4 +
or byte ptr [ebp+33h] 4 +
cmp al 3 +
jnz loc_44F659  +
mov [esp+94h+arg_4] ebx +
mov [esp+94h+arg_0] edi +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_44F290  +
cmp byte ptr [esp+94h+var_2C] 0 +
jnz loc_44FFBB  +
mov ecx esi +
test cl cl +
jz loc_44F739  +
test edx edx +
jz loc_44F659  +
test byte ptr [ebx+33h] 2 +
jnz loc_44F739  +
lea esi [esi+0] +
jmp loc_44F659  +
test byte ptr [ebx+33h] 8 +
jz loc_44FAD3  +
mov eax [ebx+14h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 1 +
jnz loc_44FAD3  +
mov eax [esp+94h+var_2C] +
mov edx [ebx+2Ch] +
xor eax 1 +
test edx edx +
cmovz eax [esp+94h+var_5C] +
mov [esp+94h+var_5C] eax +
jmp loc_44FAD3  +
xor esi esi +
jmp loc_44F762  +
mov ecx [esp+94h+var_30] +
test ecx ecx +
jz loc_4500AE  +
mov edx [ecx+98h] +
mov ecx [edx+0Ch] +
shr ecx 0Fh +
and ecx 1 +
jmp loc_44F746  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jnz loc_44FE06  +
jmp loc_44F659  +
cmp [esp+94h+var_60] 2 +
jz loc_44F713  +
or byte ptr [ebx+35h] 1 +
or byte ptr [ebp+35h] 1 +
jmp loc_44F713  +
mov eax 1 +
jmp loc_44F587  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_44F9D2  +
cmp dl 6 +
jnz loc_44F8E6  +
jmp loc_44F8BC  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
jmp loc_44FBCB  +
test al 1 +
jnz loc_450164  +
mov ebx ebp +
jmp loc_44F980  +
xor ecx ecx +
jmp loc_44F746  +
mov eax [ebx+4] +
mov [esp+94h+var_94] offset aSTlsDefiniti_0 +
mov [esp+94h+var_80] eax +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_84] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_492AE8  +
jmp loc_44F934  +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_94] offset aSTlsReferenceI +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_492AE8  +
jmp loc_44F934  +
mov eax [edi+1Ch] +
cmp [eax+20h] ebx +
jz loc_44F98B  +
mov byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_44F996  +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsReferenc_0 +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_492AE8  +
jmp loc_44F934  +
mov edx 1 +
jmp loc_44FD17  +
movzx eax byte ptr [ebx+0Ch] +
mov esi [esp+94h+var_68] +
mov [ebp+0Ch] al +
mov eax [esi+0D8h] +
mov byte ptr [ebx+0Ch] 6 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_58] +
mov [ebx+14h] ebp +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_4501D5  +
mov eax [esi+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
mov ebx ebp +
jmp loc_44F980  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_4501BD  +
mov [esp+94h+var_90] 657h +
mov [esp+94h+var_94] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_44FE5C  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
test byte ptr [eax+34h] 1 +
movzx eax byte ptr [eax+0Ch] +
jnz loc_4502AB  +
sub eax 3 +
cmp al 1 +
jbe loc_450420  +
mov edx [ebp+0] +
mov eax [edx+1Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [edi+0E0h] +
test eax eax +
jz loc_45024F  +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_45029A  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_4503C0  +
movzx edx byte ptr [ebx+33h] +
test dl dl +
js loc_450370  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
jz loc_45027A  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_45047B  +
mov esi [ebx+3Ch] +
test esi esi +
jz loc_450471  +
movzx edx byte ptr [esi+33h] +
test dl 2 +
jz loc_4502F7  +
mov dword ptr [ebx+3Ch] 0 +
mov edx 1 +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_4502A4  +
sub eax 3 +
cmp al 1 +
jbe loc_4503F6  +
or byte ptr [ebx+33h] 11h +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_450224  +
test byte ptr [ebx+33h] 0Ch +
jz loc_450224  +
mov eax [ebp+0] +
mov [esp-4+arg_0] ebx +
mov [esp+0] eax +
call sub_44F290  +
test eax eax +
jnz loc_450224  +
mov dword ptr [ebp+4] 1 +
xor edx edx +
jmp loc_45029A  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_4502F4  +
sub eax 3 +
cmp al 1 +
jbe loc_45031E  +
mov [esp-4+arg_0] 0A4Ah +
mov dword ptr [esp+0] offset a____Binutil_21 +
call sub_420BA0  +
movzx edx byte ptr [esi+33h] +
and edx 8 +
jz loc_450458  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_450346  +
mov [esp-4+arg_0] 0A4Dh +
mov dword ptr [esp+0] offset a____Binutil_21 +
call sub_420BA0  +
mov edx [ebp+0] +
mov eax [edi+0D8h] +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] esi +
mov [esp+0] edx +
call eax  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+0] +
movzx eax byte ptr [ecx] +
test al 1 +
jz loc_450265  +
mov esi [ecx+1Ch] +
cmp dword ptr [esi+28h] 1 +
jnz loc_450265  +
test byte ptr [ebx+35h] 4 +
jnz loc_45049A  +
test al 4 +
jnz loc_4503AD  +
test byte ptr [ecx+5] 1 +
jz loc_45049A  +
test byte ptr [ebx+34h] 10h +
jnz loc_45049A  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jmp loc_4504A7  +
movzx edx byte ptr [ebx+33h] +
mov eax edx +
and eax 0Bh +
cmp al 1 +
jnz loc_45025D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
mov eax [eax+28h] +
shr eax 5 +
test eax 10040h +
jnz loc_45025D  +
or edx 2 +
mov [ebx+33h] dl +
jmp loc_45025D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
test eax eax +
jz loc_450410  +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4502BA  +
or byte ptr [ebx+33h] 2 +
jmp loc_4502BE  +
movzx eax byte ptr [ebx+33h] +
test al 2 +
jnz loc_450224  +
mov ecx [ebx+14h] +
mov edx [ecx+94h] +
test edx edx +
jz loc_4504D7  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
setnz al  +
test al al +
jz loc_450224  +
or byte ptr [ebx+33h] 2 +
jmp loc_450224  +
mov [esp-4+arg_0] 0A4Bh +
mov dword ptr [esp+0] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_450327  +
mov edx 1 +
jmp loc_45029A  +
mov edx [ebp+0] +
mov eax [edi+0DCh] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
jmp loc_45027A  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_45027A  +
and edx 2 +
jz loc_45026C  +
movzx eax al +
mov edx [edi+0DCh] +
sub eax 1 +
cmp eax 1 +
setbe al  +
movzx eax al +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] ecx +
call edx  +
jmp loc_450265  +
xor edx edx +
cmp ecx offset off_492990 +
jz loc_4504E8  +
mov eax edx +
jmp loc_450447  +
shr al 3 +
mov edx eax +
xor edx 1 +
and edx 1 +
mov eax edx +
jmp loc_450447  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
lea edx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov esi [eax] +
mov eax ebx +
mov [esp+3Ch+var_14] esi +
call sub_450200  +
test eax eax +
jnz loc_450647  +
mov ecx [esp+3Ch+var_10] +
test ecx ecx +
jz loc_45063F  +
mov ecx [esp+3Ch+arg_4] +
mov dword ptr [ecx+4] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+33h] 2 +
jz loc_45067F  +
mov ebp [esi+30h] +
mov edi [ebx+4] +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_38] 40h +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_28] eax +
call strchr  +
test eax eax +
jz loc_450785  +
mov edx [ebx+40h] +
test edx edx +
jz loc_450690  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+1] +
cmp dl 40h +
jz loc_450838  +
add eax 1 +
mov [esp+3Ch+var_24] eax +
test dl dl +
jz loc_45067F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_4507F7  +
mov [esp+3Ch+var_20] ebp +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+arg_0] ebx +
mov ebx edx +
jmp loc_4506DA  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4507EF  +
mov [esp+3Ch+var_38] ebp +
mov eax [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jnz loc_4506D0  +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+arg_0] +
sub ebp edi +
mov [esp+3Ch+var_3C] ebp +
call sub_42B400  +
mov edx [esp+3Ch+var_20] +
test eax eax +
mov edi eax +
jz loc_450826  +
mov ecx [ebx+4] +
lea eax [ebp-1] +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] ecx +
call memcpy  +
lea eax [edi+ebp-2] +
mov edx [esp+3Ch+var_24] +
mov byte ptr [edi+ebp-1] 0 +
cmp byte ptr [eax] 40h +
jz loc_4508A6  +
mov [ebx+40h] edx +
mov ebp [edx+0Ch] +
mov dword ptr [edx+34h] 1 +
test ebp ebp +
jz loc_450848  +
mov eax [edx+38h] +
lea ecx [edx+0Ch] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] ecx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_450848  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov edx [ebx+40h] +
test edx edx +
jnz loc_45067F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_45067F  +
mov edx [ebx+4] +
lea ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_4307B0  +
test eax eax +
mov [ebx+40h] eax +
jz loc_45067F  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_45067F  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_45067F  +
mov ebp [esp+3Ch+var_20] +
mov ebx [esp+3Ch+arg_0] +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 1 +
jbe loc_4508AE  +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] offset aBVersionNodeNo +
call off_492AE8  +
mov [esp+3Ch+var_3C] 11h +
call sub_420C50  +
mov eax [esp+3Ch+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_45063F  +
lea ecx [eax+2] +
movzx edx byte ptr [eax+2] +
mov [esp+3Ch+var_24] ecx +
jmp loc_4506A4  +
mov ecx [edx+1Ch] +
test ecx ecx +
jz loc_45077D  +
mov eax [edx+38h] +
add edx 1Ch +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_45077D  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_45077D  +
test byte ptr [esi] 10h +
nop   +
jnz loc_45077D  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_45077D  +
mov byte ptr [eax] 0 +
jmp loc_450741  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_45067F  +
mov [esp+3Ch+var_38] 3Ch +
mov [esp+3Ch+var_3C] ebp +
call sub_425930  +
test eax eax +
jz loc_450826  +
mov ecx [esp+3Ch+var_24] +
mov dword ptr [eax+30h] 0FFFFFFFFh +
mov dword ptr [eax+34h] 1 +
mov [eax+4] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [ecx] +
mov ecx [edx+7Ch] +
test ecx ecx +
jz loc_450922  +
cmp dword ptr [ecx+8] 0 +
setnz cl  +
movzx ecx cl +
mov esi [edx+7Ch] +
add edx 7Ch +
test esi esi +
jnz loc_45090A  +
jmp loc_450915  +
mov esi edx +
mov edx [esi] +
add ecx 1 +
test edx edx +
jnz loc_450908  +
mov edx esi +
mov [eax+8] ecx +
mov [edx] eax +
mov [ebx+40h] eax +
jmp loc_45067F  +
mov ecx 1 +
jmp loc_4508FC  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ch] 6 +
jz loc_450955  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
test byte ptr [eax] 10h +
jnz loc_45094F  +
test byte ptr [ebx+34h] 10h +
jz loc_450955  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_450960  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
test byte ptr [ebx+33h] 3 +
jz loc_450955  +
mov edx [ebx+4] +
mov eax [eax+7Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_430980  +
test eax eax +
jnz loc_450955  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_44F290  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_45095A  +
mov eax [esp+18h+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_45095A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov edi [ebx+1Ch] +
cmp dword ptr [edi+28h] 1 +
jz loc_4509D0  +
***
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+3Ch] +
xor eax eax +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp] edi +
test edx edx +
setz al  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call sub_42D940  +
test eax eax +
mov esi eax +
jz loc_450BB5  +
cmp byte ptr [eax+0Ch] 7 +
ja sub_450A37  +
movzx eax byte ptr [eax+0Ch] +
jmp ds:off_4B2614[eax*4]  +
***
mov eax [esi+10h] +
movzx eax byte ptr [esi+33h] +
mov eax [esp+arg_2C] +
mov [esp+arg_4] offset aBfd_elf_record +
xor ecx ecx +
mov edx esi +
mov eax ebx +
call sub_44A6E0  +
and byte ptr [esi+34h] 0FEh +
jmp sub_450A37  +
***
mov eax [esp+3Ch] +
jmp loc_4509C8  +
***
or byte ptr [esi+34h] 8 +
jmp loc_450ABC  +
***
mov byte ptr [esi+0Ch] 1 +
jmp loc_450A52  +
***
cmp [edi+20h] esi +
jnz sub_450A37  +
jmp loc_450A2F  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [esp+70h] +
mov ebx [esp+74h] +
mov esi [esp+78h] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_450C16  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+0C0h] +
test eax eax +
jnz loc_450C28  +
jmp loc_450C40  +
mov eax [eax] +
test eax eax +
jz loc_450C40  +
cmp [eax+4] ebx +
jnz loc_450C22  +
cmp [eax+8] esi +
jnz loc_450C22  +
mov eax 1 +
jmp loc_450C0E  +
***
mov dword ptr [esp+4] 24h +
mov [esp] ebx +
call sub_425850  +
test eax eax +
mov ebp eax +
jz loc_450C0C  +
lea eax [esp+34h] +
mov [esp+18h] eax +
lea eax [esp+38h] +
mov [esp+14h] eax +
lea eax [ebp+10h] +
mov [esp+10h] eax +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 1 +
mov eax [ebx+0A0h] +
mov [esp] ebx +
add eax 48h +
mov [esp+4] eax +
call sub_43CC60  +
test eax eax +
jz loc_450D76  +
mov eax [ebp+20h] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
ja loc_450CC5  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43F6C0  +
test eax eax +
jz loc_450D60  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_450D60  +
mov eax [ebx+0A0h] +
mov edx [ebp+18h] +
mov eax [eax+64h] +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_43CA60  +
mov edx [edi+1Ch] +
mov ecx eax +
mov eax [edx+50h] +
test eax eax +
jz loc_450D3A  +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jz loc_450C0C  +
mov [ebp+18h] eax +
mov eax [edi+1Ch] +
mov edx [eax+0C0h] +
mov [ebp+0] edx +
mov [eax+0C0h] ebp +
mov [ebp+4] ebx +
mov [ebp+8] esi +
add dword ptr [eax+4Ch] 1 +
mov eax 1 +
and byte ptr [ebp+1Ch] 0Fh +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+2Ch] edx +
mov [esp+28h] ecx +
call sub_466DA0  +
mov edx [esp+2Ch] +
mov ecx [esp+28h] +
test eax eax +
mov [edx+50h] eax +
jnz loc_450CED  +
jmp loc_450C0C  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_425AA0  +
mov eax 2 +
jmp loc_450C0E  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_425AA0  +
jmp loc_450C0C  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [esp+0Ch] +
mov eax [eax+1Ch] +
mov eax [eax+0C0h] +
test eax eax +
jnz loc_450DB6  +
jmp loc_450DC4  +
mov eax [eax] +
test eax eax +
jz loc_450DC4  +
cmp [eax+4] edx +
jnz loc_450DB0  +
cmp [eax+8] ecx +
jnz loc_450DB0  +
mov eax [eax+0Ch] +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ebx [esp+18h+arg_8] +
mov eax [ebx+8Ch] +
mov ecx [eax+4] +
mov eax 1 +
cmp ecx 8 +
ja loc_450E20  +
mov edx eax +
shl edx cl +
mov ecx edx +
and ecx 103h +
jz loc_450E20  +
mov eax [esp+18h+arg_4] +
mov eax [eax+1Ch] +
cmp ebx [eax+0C8h] +
jz loc_450E25  +
mov edx [eax+68h] +
test edx edx +
jz loc_450E30  +
cmp ebx edx +
jz loc_450E25  +
cmp ebx [eax+6Ch] +
setnz al  +
movzx eax al +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_450E20  +
mov eax [eax+38h] +
test eax eax +
jz loc_450E25  +
mov edx [ebx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_41E7F0  +
test eax eax +
jz loc_450E25  +
cmp ebx [eax+3Ch] +
setz al  +
movzx eax al +
jmp loc_450E20  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
mov eax [esp+2Ch+arg_4] +
mov esi [eax+8Ch] +
mov ebx [esi+68h] +
test ebx ebx +
jz loc_450E90  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4Ch] +
test eax eax +
jz loc_450E85  +
mov ecx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
test ecx ecx +
jz loc_451012  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_14] 0 +
test eax eax +
jz loc_451052  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_450F31  +
mov eax [ecx+10h] +
mov edx [ecx+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_10] ecx +
call sub_429F00  +
mov ecx [esp+2Ch+var_10] +
test eax eax +
jz loc_450FB7  +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_450F04  +
mov [esp+2Ch+var_2C] eax +
call free  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
jz loc_450E85  +
mov edx [esp+2Ch+arg_10] +
mov eax [esp+2Ch+var_18] +
test edx edx +
jz loc_450FA5  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_425AA0  +
jmp loc_450E85  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] eax +
mov ebp [esi+4Ch] +
test ebp ebp +
jz loc_450F86  +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
call sub_429F00  +
test eax eax +
jnz loc_450EF4  +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_44BC60  +
test eax eax +
jz loc_450EF4  +
mov ebx [esp+2Ch+arg_10] +
test ebx ebx +
jz loc_450F95  +
mov eax [esp+2Ch+arg_C] +
mov [esi+68h] eax +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_450E85  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_44BC60  +
test eax eax +
jz loc_450EF4  +
mov eax [esi+3Ch] +
mov ecx [eax+28h] +
mov edx [eax+18h] +
xor eax eax +
add [esp+2Ch+arg_8] edx +
test ecx ecx +
jz loc_450FF2  +
mov eax edx +
xor edx edx +
div  ecx +
mov edx [ebp+174h] +
movzx edx byte ptr [edx+9] +
lea ebp [edx+edx*2] +
shl ebp 2 +
imul ebp eax +
add ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] ebp +
jmp loc_450F39  +
mov edx [ebp+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
movzx edx byte ptr [edx+9] +
imul eax edx +
mov edx [esp+2Ch+arg_10] +
test edx edx +
jz loc_45107F  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_425850  +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
test eax eax +
jz loc_451095  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_450EAB  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_4510A2  +
mov eax [eax+18h] +
mov edx [esi+4Ch] +
test edx edx +
jz loc_451066  +
add eax [edx+18h] +
mov [esp+2Ch+var_2C] eax +
call sub_42B400  +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jz loc_45108D  +
mov [esp+2Ch+var_14] eax +
jmp loc_450EBF  +
mov [esp+2Ch+var_2C] eax +
call sub_42B400  +
mov [esp+2Ch+arg_C] eax +
jmp loc_45103D  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_450F04  +
xor eax eax +
jmp loc_45105C  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov eax [esi+4Ch] +
test eax eax +
jnz loc_4510E1  +
mov dword ptr [ebx] 0 +
xor eax eax +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+4] +
mov edi [eax+1B0h] +
movzx eax byte ptr [edx+2] +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] esi +
shr al 6 +
and eax 1 +
mov [esp+20h+var_10] eax +
mov [esp+20h+var_20] ecx +
call sub_450E60  +
test eax eax +
mov [ebx] eax +
jz loc_451140  +
mov ecx [edi+174h] +
mov edx [esi+4Ch] +
mov [ebx+4] eax +
movzx ecx byte ptr [ecx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
mov [ebx+8] edx +
jmp loc_4510D2  +
xor eax eax +
jmp loc_4510DA  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov ecx [ecx+94h] +
call sub_44AAF0  +
test eax eax +
jnz loc_451174  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+94h] +
mov edx edi +
mov eax esi +
mov [esp+18h+var_18] ebx +
call sub_4510B0  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_45116D  +
mov eax [esi+0Ch] +
mov edx [ebx+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_45116B  +
cmp eax [edx+78h] +
jz loc_45116B  +
mov [esp+18h+var_18] eax +
call free  +
jmp loc_45116B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov eax [esi+44h] +
test eax eax +
jz loc_4512A7  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_4512A7  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_451200  +
mov [esp+2Ch+var_28] 3125h +
mov [esp+2Ch+var_2C] offset a____Binutil_21 +
call sub_420BA0  +
mov ebx [esi+18h] +
mov eax [esi+2Ch] +
mov edi [esi+14h] +
add eax ebx +
mov [esp+2Ch+var_14] eax +
mov eax [edi+94h] +
mov [esp+2Ch+var_1C] 1 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_450E60  +
test eax eax +
jz loc_4512D2  +
mov edx [edi+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
movzx edx byte ptr [ecx+0Bh] +
movzx ecx byte ptr [ecx+9] +
mov [esp+2Ch+var_D] dl +
mov edx [edi+4Ch] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
cmp eax edx +
jnb loc_4512A7  +
mov ebp [eax] +
cmp ebx ebp +
ja loc_4512A0  +
cmp [esp+2Ch+var_14] ebp +
jbe loc_4512A0  +
mov ecx [esi+44h] +
mov edi [ecx+4] +
test edi edi +
jz loc_4512B4  +
sub ebp ebx +
cmp ebp [ecx] +
jnb loc_4512B4  +
movzx ecx [esp+2Ch+var_D] +
shr ebp cl +
mov ecx [edi+ebp*4] +
test ecx ecx +
jz loc_4512B4  +
nop   +
add eax 0Ch +
cmp edx eax +
ja loc_451274  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [eax+8] 0 +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-0Ch] 0 +
cmp edx eax +
ja loc_451274  +
jmp loc_4512A7  +
mov eax [esp+2Ch+arg_4] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_4512AC  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+50h] +
mov ecx [esp+54h] +
mov eax [ebp+4] +
mov esi [eax+1B0h] +
mov eax [ecx+3Ch] +
mov edx [eax+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_451318  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_451438  +
mov eax [edx+4Ch] +
test eax eax +
jz loc_45132B  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_451360  +
mov eax [ecx+94h] +
mov [esp+0Ch] ecx +
mov [esp+4] ebp +
mov dword ptr [esp] offset aBRelocationSiz +
mov [esp+8] eax +
call off_492AE8  +
mov dword ptr [esp] 3 +
call sub_420C50  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+4Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+44h] +
mov [esp+1Ch] ecx +
mov ecx edi +
mov eax [eax+30h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+4] +
mov ebx eax +
xor eax eax +
test ecx ecx +
jz loc_451422  +
movzx eax byte ptr [edx+9] +
xor edx edx +
lea edi [eax+eax*2] +
mov eax [esp+58h] +
shl edi 2 +
mov eax [eax+18h] +
mov [esp+28h] eax +
div  ecx +
imul edi eax +
add edi [esp+5Ch] +
cmp [esp+5Ch] edi +
mov [esp+20h] edi +
jnb loc_45141A  +
mov eax ebx +
mov edi [esp+2Ch] +
imul eax ecx +
mov ebx [esp+5Ch] +
add edi eax +
mov eax edi +
mov edi esi +
mov esi eax +
nop   +
mov eax [esp+1Ch] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
call eax  +
mov edx [edi+174h] +
mov eax [esp+58h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
mov edx [eax+28h] +
add esi edx +
cmp [esp+20h] ebx +
ja loc_4513D0  +
mov eax [esp+24h] +
test edx edx +
mov eax [eax+4] +
mov ebx eax +
jz loc_451453  +
mov eax [esp+58h] +
mov ecx edx +
mov eax [eax+18h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
xor edx edx +
div  ecx +
mov ecx [esp+24h] +
add eax ebx +
mov [ecx+4] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+3Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+3Ch] +
mov [esp+1Ch] ecx +
mov ecx edi +
jmp loc_451376  +
***
xor eax eax +
jmp loc_451422  +
***
mov edx [esp+4] +
mov ecx [esp+8] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 1 +
jz loc_451478  +
mov eax 1 +
retn   +
***
cmp dword ptr [ecx+20h] 0FFFFFFFFh +
jnz loc_451472  +
cmp byte ptr [ecx+0Ch] 2 +
jnz loc_451472  +
jmp sub_44F290  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
mov edx [ebx+18h] +
mov ecx [eax+40h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test edx eax +
jz loc_4514BD  +
shr eax 1 +
sub ecx 1 +
test eax edx +
jnz loc_4514B4  +
cmp [esi+40h] ecx +
jnb loc_4514C5  +
mov [esi+40h] ecx +
mov ecx eax +
mov edx 0FFFFFFFFh +
add ecx [esi+24h] +
jb loc_4514D7  +
not eax  +
mov edx eax +
and edx ecx +
mov [ebx+18h] edx +
add edx [ebx+2Ch] +
test byte ptr [ebx+35h] 8 +
mov [ebx+14h] esi +
mov [esi+24h] edx +
jz loc_4514F6  +
mov eax [esp+20h] +
mov eax [eax+58h] +
test eax eax +
jz loc_451519  +
js loc_451501  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
cmp byte ptr [eax+1AEh] 0 +
js loc_4514F6  +
mov eax [esp+20h] +
mov edx [ebx+4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] edx +
mov dword ptr [esp] offset aPCopyRelocAgai +
call eax  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jnz loc_451555  +
jmp loc_4515F6  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_451552  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4515F6  +
movzx edx byte ptr [ebx+34h] +
xor eax eax +
test dl 8 +
jnz loc_4515F0  +
mov eax [esp+24h] +
mov esi 1 +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 3 +
cmp cl 1 +
jbe loc_451594  +
xor si si +
test byte ptr [ebx+35h] 4 +
jz loc_451600  +
movzx edx byte ptr [ebx+31h] +
and edx 3 +
jz loc_4515D0  +
xor eax eax +
cmp dl 2 +
jbe loc_4515F0  +
cmp dl 3 +
jnz loc_4515D0  +
mov ecx [esp+24h] +
mov edx [ecx+1Ch] +
cmp dword ptr [edx+28h] 1 +
jnz loc_4515F0  +
mov eax [edx+38h] +
mov edx [esp+28h] +
mov eax [eax+4] +
test edx edx +
mov eax [eax+1B0h] +
jnz loc_45163E  +
mov esi 1 +
nop   +
movzx edx byte ptr [ebx+33h] +
test dl 2 +
jnz loc_451630  +
and edx 0Ah +
mov eax 1 +
jnz loc_4515F0  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_451630  +
lea esi [esi+0] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
test al 4 +
mov si 1 +
jnz loc_451594  +
mov eax [esp+24h] +
xor si si +
test byte ptr [eax+5] 1 +
jz loc_451594  +
shr dl 4 +
xor edx 1 +
mov esi edx +
and esi 1 +
jmp loc_451594  +
***
mov eax esi +
add esp 14h +
xor eax 1 +
and eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+30h] +
mov eax [eax+158h] +
mov [esp] edx +
call eax  +
test eax eax +
mov eax 1 +
cmovz esi eax +
jmp loc_4515D0  +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_0] +
test edx edx +
jz loc_4516E0  +
movzx ecx byte ptr [edx+31h] +
and ecx 3 +
movzx eax cl +
sub eax 1 +
cmp eax 1 +
jbe loc_4516E0  +
movzx ebx byte ptr [edx+33h] +
test bl 0Ah +
jnz loc_45168F  +
cmp byte ptr [edx+0Ch] 3 +
jz loc_451696  +
xor eax eax +
and ebx 2 +
jz loc_4516E5  +
movzx eax byte ptr [edx+34h] +
test al 8 +
jnz loc_4516E0  +
cmp dword ptr [edx+20h] 0FFFFFFFFh +
jz loc_4516E0  +
mov esi [esp+10h+arg_4] +
movzx edi byte ptr [esi] +
mov esi edi +
and esi 3 +
mov ebx esi +
cmp bl 1 +
jbe loc_4516E0  +
test byte ptr [edx+35h] 4 +
jnz loc_4516CC  +
and edi 4 +
jnz loc_4516E0  +
mov esi [esp+10h+arg_4] +
test byte ptr [esi+5] 1 +
jnz loc_451730  +
xor eax eax +
test cl cl +
jz loc_4516E5  +
mov eax [esp+10h+arg_4] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4516F0  +
nop   +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+38h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov eax [esp+10h+arg_4] +
mov eax [eax+58h] +
test eax eax +
jz loc_451716  +
mov eax [esp+10h+arg_8] +
jns loc_4516E5  +
cmp byte ptr [ecx+1AEh] 0 +
js loc_4516E5  +
movzx edx byte ptr [edx+30h] +
mov eax [ecx+158h] +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
jz loc_4516E0  +
mov eax [esp+10h+arg_8] +
jmp loc_4516E5  +
test al 10h +
jnz loc_4516CC  +
jmp loc_4516E0  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
mov eax [eax+64h] +
test eax eax +
jnz loc_45175A  +
jmp loc_451790  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_451790  +
test byte ptr [eax+15h] 4 +
nop   +
jz loc_451753  +
mov edx eax +
xor ecx ecx +
jmp loc_45176E  +
test byte ptr [edx+15h] 4 +
jz loc_45177D  +
mov ebx [edx+40h] +
mov edx [edx+0Ch] +
cmp ecx ebx +
cmovb ecx ebx +
test edx edx +
jnz loc_451768  +
mov edx [esi+1Ch] +
mov [edx+0C8h] eax +
mov [eax+40h] ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+1Ch] +
mov dword ptr [eax+0C8h] 0 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_4517D0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+38h] +
mov edx [eax+4] +
mov ebp [edx+1B0h] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] eax +
call sub_41E7F0  +
test eax eax +
mov esi eax +
jz loc_451860  +
mov eax [ebp+174h] +
movzx edi byte ptr [eax+6] +
mov eax [esi+6Ch] +
add edi [esi+24h] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_42B490  +
test eax eax +
jz loc_4517C4  +
mov edx [esp+2Ch+arg_4] +
mov ecx [ebx+38h] +
mov ebx eax +
add ebx [esi+24h] +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_14] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] edx +
mov edx [ebp+174h] +
mov edx [edx+34h] +
mov [esp+2Ch+var_24] ebx +
lea ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ecx +
call edx  +
mov eax [esp+2Ch+var_20] +
mov [esi+24h] edi +
mov [esi+6Ch] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 0C51h +
mov [esp+2Ch+var_2C] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_4517F2  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [edx+1Ch] +
mov [esp+3Ch+var_20] edx +
mov esi [ebx+38h] +
test esi esi +
jz loc_4519F0  +
mov edx [ebx+50h] +
test edx edx +
jz loc_451A00  +
mov eax [esp+3Ch+var_20] +
mov ebp [eax+1Ch] +
mov eax [ebp+50h] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
mov [esp+3Ch+var_24] eax +
jz loc_451A18  +
mov eax [ebp+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_467040  +
cmp eax 1 +
jz loc_451982  +
mov eax [ebp+38h] +
mov edx [eax+4] +
mov esi [edx+1B0h] +
mov [esp+3Ch+var_38] offset a_dynamic +
mov [esp+3Ch+var_3C] eax +
call sub_41E7F0  +
test eax eax +
jz loc_451982  +
mov ebx [eax+6Ch] +
mov edx [eax+24h] +
add edx ebx +
cmp ebx edx +
jnb loc_451982  +
mov edi ebp +
mov ecx [esi+174h] +
mov ebp eax +
jmp loc_451939  +
mov ecx [esi+174h] +
movzx eax byte ptr [ecx+6] +
add ebx eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp ebx eax +
jnb loc_451980  +
mov eax [ecx+30h] +
lea edx [esp+3Ch+var_14] +
mov ecx [edi+38h] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ecx +
call eax  +
cmp [esp+3Ch+var_14] 1 +
jnz loc_451923  +
mov eax [esp+3Ch+var_24] +
cmp [esp+3Ch+var_10] eax +
jnz loc_451923  +
mov eax [edi+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_466FA0  +
mov eax 1 +
jmp loc_4519E5  +
mov ebp edi +
mov eax [esp+3Ch+arg_0] +
test eax eax +
jz loc_4519D0  +
mov eax [ebp+38h] +
mov edi [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_44EE70  +
test eax eax +
jz loc_451A18  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
call sub_4517B0  +
test eax eax +
setz al  +
add esp 3Ch +
movzx eax al +
pop ebx  +
neg eax  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+50h] +
mov esi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] esi +
call sub_466FA0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+50h] +
mov [ebx+38h] eax +
test edx edx +
jnz loc_4518A4  +
nop   +
mov [esp+3Ch+var_24] ecx +
call sub_466DA0  +
mov ecx [esp+3Ch+var_24] +
test eax eax +
mov [ebx+50h] eax +
jnz loc_4518A4  +
mov eax 0FFFFFFFFh +
jmp loc_4519E5  +
***
mov eax [esp+8] +
cmp [esp+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
cmp edx eax +
jz loc_451A61  +
mov ecx [edx+1B0h] +
mov edx [eax+1B0h] +
xor eax eax +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_451A53  +
pop ebx  +
retn   +
***
mov eax [edx+74h] +
cmp [ecx+74h] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
mov eax 1 +
pop ebx  +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov ecx [esp+38h] +
mov edx [eax+18h] +
mov edx [edx+28h] +
mov [esp+14h] ecx +
mov ecx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call edx  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+44h] +
mov esi [esp+48h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42D940  +
test eax eax +
mov ebx eax +
jz loc_451B06  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 40h +
mov [esp] esi +
call strchr  +
test eax eax +
jz loc_451AFC  +
cmp byte ptr [eax+1] 40h +
jnz loc_451AFC  +
mov [esp] esi +
mov ebx 0FFFFFFB8h +
mov [esp+1Ch] eax +
call strlen  +
mov ecx [esp+40h] +
mov [esp] ecx +
mov [esp+4] eax +
mov [esp+18h] eax +
call sub_425850  +
test eax eax +
mov ebp eax +
jz loc_451AFC  +
mov ecx [esp+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
sub ecx esi +
lea ebx [ecx+1] +
mov [esp+8] ebx +
mov [esp+1Ch] ecx +
call memcpy  +
mov edx [esp+18h] +
lea eax [ebp+ebx+0] +
mov ecx [esp+1Ch] +
mov [esp] eax +
sub edx ebx +
lea ecx [esi+ecx+2] +
mov [esp+8] edx +
mov [esp+4] ecx +
call memcpy  +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42D940  +
test eax eax +
mov esi eax +
jz loc_451BCE  +
mov eax [esp+40h] +
mov ebx esi +
mov [esp+4] ebp +
mov [esp] eax +
call sub_425AA0  +
jmp loc_451AFC  +
***
mov byte ptr [ebp+ebx-1] 0 +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42D940  +
mov esi eax +
jmp loc_451BB7  +
***
push esi  +
push ebx  +
sub esp 13Ch +
mov ebp [esp+13Ch+arg_0] +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp eax 1 +
jz loc_451C50  +
cmp eax 2 +
jnz loc_451C95  +
test byte ptr [ebp+2Bh] 20h +
jz loc_4520A0  +
mov eax [ebp+0A0h] +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_451E52  +
add esp 13Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+13Ch+arg_4] +
test byte ptr [ebp+29h] 8 +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_FC] eax +
mov eax [ebp+4] +
mov edi [eax+1B0h] +
mov [esp+13Ch+var_104] edi +
jz loc_451CB0  +
mov edi [esp+13Ch+arg_4] +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jz loc_452500  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jz loc_4522C6  +
mov [esp+13Ch+var_13C] 3 +
call sub_420C50  +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_100] 0 +
mov edi [esp+13Ch+arg_4] +
mov eax [ebp+0A0h] +
test byte ptr [edi+5] 20h +
jz loc_451D12  +
mov edi [esp+13Ch+var_104] +
movzx eax word ptr [eax+26h] +
mov edx [edi+8] +
cmp edx eax +
jz loc_451D12  +
mov ecx [edi+16Ch] +
test ecx ecx +
jz loc_452060  +
cmp eax ecx +
jnz loc_452060  +
mov edi [esp+13Ch+arg_4] +
mov ecx [edi+18h] +
mov ecx [ecx+2Ch] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] offset aPAlternateElfM +
call ecx  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_451D2B  +
jmp loc_4520E9  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4520D0  +
mov eax [ebx] +
mov edi offset a_gnu_warning_ +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_451D20  +
mov ecx [esp+13Ch+var_100] +
lea edi [eax+0Dh] +
test ecx ecx +
jz loc_451D7F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_12C] 1 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_42D940  +
test eax eax +
jz loc_451D7F  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_451D20  +
mov esi [ebx+24h] +
mov [esp+13Ch+var_13C] ebp +
lea eax [esi+1] +
mov [esp+13Ch+var_138] eax +
call sub_425850  +
test eax eax +
jz loc_452090  +
mov [esp+13Ch+var_128] esi +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_108] eax +
call sub_41EF20  +
test eax eax +
jz loc_452090  +
mov edx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_104] +
mov byte ptr [edx+esi] 0 +
mov [esp+13Ch+var_118] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] edx +
mov [esp+13Ch+var_128] 0 +
and eax 1 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_12C] ebx +
mov [esp+13Ch+var_130] 1000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_42E5A0  +
test eax eax +
jz loc_452090  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 1 +
ja loc_451D20  +
mov dword ptr [ebx+24h] 0 +
or dword ptr [ebx+14h] 8000h +
jmp loc_451D20  +
mov [esp+13Ch+var_13C] ebx +
call sub_42B590  +
mov edi eax +
mov [esp+13Ch+var_F8] eax +
xor eax eax +
test edi edi +
jz loc_451CA3  +
mov eax [ebp+0A0h] +
shl ebx 4 +
mov eax [eax+10h] +
mov edi eax +
mov [esp+13Ch+var_EC] eax +
mov eax [ebp+4] +
add ebx edi +
cmp edi ebx +
mov [esp+13Ch+var_108] ebx +
mov eax [eax+1B0h] +
mov eax [eax+40h] +
mov [esp+13Ch+var_100] eax +
jnb loc_45355C  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_F8] +
mov ecx [esp+13Ch+var_EC] +
xor edi edi +
mov ebx 0FFFFFFFFh +
mov eax edi +
mov esi 0FFFFFFFFh +
mov edi ebp +
mov ebp eax +
mov [esp+13Ch+var_104] ebx +
mov [esp+13Ch+var_FC] 0 +
mov ebx ecx +
jmp loc_451EE8  +
cmp al 2 +
jz loc_451ED8  +
mov byte ptr [edi+ebp] 1 +
add ebx 10h +
add ebp 1 +
cmp ebx [esp+13Ch+var_108] +
jnb loc_45354E  +
cmp byte ptr [edi+ebp] 0 +
jnz loc_451ED8  +
mov edx [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
xor eax [ebx+8] +
xor edx esi +
or edx eax +
jz loc_451ED4  +
mov eax [ebx] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_13C] eax +
mov eax [esp+13Ch+var_100] +
call eax  +
cmp eax 0FFFFFFB8h +
jz loc_45207F  +
test eax eax +
jz loc_451ED8  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_452528  +
cmp al 1 +
jnz loc_451ED0  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_426C50  +
test eax eax +
mov [esp+13Ch+var_14] eax +
jz loc_45207F  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_423080  +
test eax eax +
jz loc_45207F  +
mov eax [esp+13Ch+arg_4] +
lea ecx [esp+13Ch+var_14] +
mov edx [ebx] +
mov eax [eax+1Ch] +
mov esi [eax+20h] +
mov eax [esp+13Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax] +
mov [esp+13Ch+var_130] ecx +
mov ecx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_134] edx +
mov edx [esp+13Ch+var_14] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] edx +
call eax  +
test eax eax +
jz loc_45207F  +
mov eax [esp+13Ch+var_14] +
mov ecx [esp+13Ch+arg_4] +
mov edx [eax+4] +
mov edx [edx+168h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
test eax eax +
jz loc_45207F  +
mov eax [esp+13Ch+arg_4] +
lea edx [ebx-8] +
mov [esp+13Ch+var_104] edi +
mov [esp+13Ch+var_F4] ebp +
mov eax [eax+1Ch] +
cmp esi [eax+20h] +
mov eax 1 +
cmovz eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_FC] eax +
mov eax ebp +
jmp loc_45203D  +
mov ecx [edx] +
sub eax 1 +
sub edx 10h +
mov esi [edx+14h] +
mov edi [ebx+8] +
mov ebp [ebx+0Ch] +
xor ecx edi +
xor esi ebp +
or esi ecx +
jnz loc_452513  +
mov edi [esp+13Ch+var_104] +
test eax eax +
mov byte ptr [edi+eax] 1 +
jnz loc_452020  +
mov eax [ebx+8] +
mov ebp [esp+13Ch+var_F4] +
mov esi [ebx+0Ch] +
mov [esp+13Ch+var_104] eax +
jmp loc_451ED8  +
mov edi [esp+13Ch+var_104] +
mov ecx [edi+170h] +
test ecx ecx +
jz loc_451D12  +
cmp eax ecx +
jnz loc_451D12  +
jmp loc_451CF0  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_138] 0 +
mov [esp+13Ch+var_13C] ebp +
call sub_426F40  +
test eax eax +
jz loc_451C3D  +
mov [esp+13Ch+var_13C] 8 +
call sub_420C50  +
xor eax eax +
jmp loc_451CA3  +
mov eax [ebp+64h] +
test eax eax +
jz loc_4520E9  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jz loc_4522E6  +
mov edx [esp+13Ch+var_100] +
xor eax eax +
test edx edx +
jnz loc_4522F6  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_452111  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_4540D3  +
mov ecx [ebp+0A0h] +
mov [esp+13Ch+var_AC] 1 +
lea eax [ecx+48h] +
mov [esp+13Ch+var_E4] eax +
mov eax [esp+13Ch+var_104] +
xor edx edx +
mov [esp+13Ch+var_108] 0 +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+18h] +
div  ebx +
mov [esp+13Ch+var_D0] eax +
mov eax [ecx+928h] +
test eax eax +
jnz loc_452167  +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+20h] +
sub [esp+13Ch+var_D0] eax +
mov [esp+13Ch+var_108] eax +
mov eax [ecx+218h] +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_D0] +
test eax eax +
jnz loc_45385A  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_4538E0  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
test byte ptr [ebx+924h] 1 +
jz loc_4526AA  +
mov ecx [esp+13Ch+var_FC] +
mov edi [ecx+0Ch] +
test edi edi +
mov [esp+13Ch+var_F8] edi +
jz loc_454290  +
mov esi [ecx] +
xor eax eax +
mov [esp+13Ch+arg_0] ebp +
mov ebp ecx +
lea edi [esi+edi*4] +
nop   +
mov edx [esi] +
test edx edx +
jz loc_4521F2  +
mov ecx [ebp+14h] +
lea esi [esi+0] +
add eax ecx +
cmp byte ptr [edx+0Ch] 7 +
mov edx [edx] +
lea ebx [eax+ecx] +
cmovz eax ebx +
test edx edx +
jnz loc_4521E0  +
add esi 4 +
cmp esi edi +
jnz loc_4521D0  +
mov ebp [esp+13Ch+arg_0] +
mov edi [esp+13Ch+var_F8] +
shl edi 2 +
add eax edi +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_A8] edi +
call sub_42B400  +
test eax eax +
mov [esp+13Ch+var_B8] eax +
jz loc_452297  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_42A750  +
test eax eax +
mov [esp+13Ch+var_A4] eax +
jz loc_453C9A  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_C8] 0 +
test eax eax +
jnz loc_454120  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_452297  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_4522A7  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov ebx [esp+13Ch+var_D4] +
test ebx ebx +
jz loc_452090  +
mov eax [esp+13Ch+var_D4] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_451CA3  +
mov edi [esp+13Ch+arg_4] +
mov edx [edi+30h] +
cmp eax [edx+4] +
jnz loc_451C95  +
mov [esp+13Ch+var_100] 1 +
jmp loc_451CB8  +
cmp [esp+13Ch+var_100] 0 +
mov eax 1 +
jz loc_452111  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jnz loc_452090  +
test eax eax +
mov [esp+13Ch+var_20] 0 +
mov [esp+13Ch+var_1C] 0 +
jnz loc_454C4C  +
mov eax [ebp+0A0h] +
mov eax [eax+924h] +
mov [esp+13Ch+var_138] offset a_dynamic +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_E4] eax +
call sub_41E710  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_108] eax +
jz loc_453AD7  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call sub_41F070  +
test eax eax +
jz loc_453A40  +
mov esi [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] esi +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
jz loc_453A40  +
mov edx [ebp+0A0h] +
mov edi [esp+13Ch+var_18] +
mov ecx [esi+24h] +
mov edx [edx+40h] +
add ecx edi +
cmp edi ecx +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_F8] eax +
jnb loc_45420F  +
mov eax [esp+13Ch+var_104] +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov eax [eax+174h] +
jmp loc_452403  +
cmp eax 6FFFFEFCh +
jz loc_453709  +
mov eax [esp+13Ch+var_104] +
mov esi [esp+13Ch+var_108] +
mov eax [eax+174h] +
mov ecx [esi+24h] +
movzx edx byte ptr [eax+6] +
add edi edx +
mov edx [esp+13Ch+var_18] +
add ecx edx +
cmp edi ecx +
jnb loc_454221  +
mov eax [eax+30h] +
lea ecx [esp+13Ch+var_14] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov eax [esp+13Ch+var_14] +
cmp eax 0Eh +
jz loc_4536D6  +
cmp eax 1 +
jz loc_453626  +
cmp eax 1Dh +
jz loc_453570  +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_4523D0  +
cmp eax 0Fh +
jnz loc_4523D0  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_425850  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_43CA60  +
test eax eax +
jz loc_453A40  +
test ebx ebx +
jz loc_453A40  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_453A40  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_20] +
test edx edx +
jnz loc_4524E8  +
jmp loc_454B1D  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4524E6  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_4523D0  +
mov [esp+13Ch+var_13C] 5 +
call sub_420C50  +
xor eax eax +
jmp loc_451CA3  +
mov eax edi +
mov esi ebp +
mov edi [esp+13Ch+var_104] +
mov ebp [esp+13Ch+var_F4] +
mov [esp+13Ch+var_104] eax +
jmp loc_451ED8  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_426C50  +
test eax eax +
mov ecx eax +
jz loc_451ED8  +
movzx eax byte ptr [eax+2Ch] +
and eax 0Ch +
cmp al 4 +
jz loc_451ED8  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] ecx +
call sub_423080  +
test eax eax +
jz loc_451ED8  +
mov eax [esp+13Ch+var_F4] +
test byte ptr [eax+29h] 8 +
jnz loc_453BED  +
mov eax [eax+0A0h] +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_F0] +
add eax 48h +
mov [esp+13Ch+var_E8] eax +
mov eax [esp+13Ch+var_F4] +
xor edx edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+18h] +
div  ecx +
mov edx [esp+13Ch+var_F0] +
mov edx [edx+928h] +
mov ecx eax +
xor eax eax +
test edx edx +
jnz loc_4525DA  +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+20h] +
sub ecx eax +
test ecx ecx +
jz loc_451ED8  +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_F0] ecx +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_43CC60  +
test eax eax +
mov edx eax +
mov [esp+13Ch+var_E4] eax +
jz loc_451ED8  +
mov ecx [esp+13Ch+var_F0] +
lea eax [ecx+ecx*4] +
mov ecx edx +
lea edx [edx+eax*4] +
cmp ecx edx +
mov [esp+13Ch+var_F0] edx +
jnb loc_452699  +
mov [esp+13Ch+var_E0] edi +
mov edi [esp+13Ch+var_F4] +
mov [esp+13Ch+var_DC] ebp +
mov ebp [esp+13Ch+var_E8] +
mov [esp+13Ch+var_E8] esi +
mov esi ecx +
jmp loc_452673  +
mov edx [ebx] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
call strcmp  +
test eax eax +
jz loc_454858  +
add esi 14h +
cmp [esp+13Ch+var_F0] esi +
jbe loc_45268D  +
mov edx [esi+8] +
mov eax [ebp+1Ch] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] eax +
call sub_43CA60  +
test eax eax +
jnz loc_452654  +
mov edi [esp+13Ch+var_E0] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_451ED8  +
mov [esp+13Ch+var_A8] 0 +
mov [esp+13Ch+var_BC] 0 +
mov [esp+13Ch+var_D8] 0 +
mov [esp+13Ch+var_98] 0 +
mov [esp+13Ch+var_9C] 0 +
mov [esp+13Ch+var_B8] 0 +
mov [esp+13Ch+var_8C] 0 +
mov [esp+13Ch+var_90] 0 +
mov [esp+13Ch+var_94] 0 +
mov [esp+13Ch+var_A4] 0 +
mov edi [esp+13Ch+var_C0] +
mov ecx [esp+13Ch+var_108] +
mov ebx [esp+13Ch+var_D4] +
mov [esp+13Ch+var_B0] 0 +
test edi edi +
lea eax [edi+ecx*2] +
mov ecx 0 +
cmovz eax ecx +
mov [esp+13Ch+var_EC] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_C8] 0 +
mov [esp+13Ch+var_CC] 0 +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+13Ch+var_E0] eax +
jnb loc_452D12  +
mov eax [esp+13Ch+var_100] +
xor eax 1 +
mov [esp+13Ch+var_A0] eax +
mov eax [ebx] +
mov [esp+13Ch+var_44] 0 +
mov [esp+13Ch+var_58] 0 +
mov [esp+13Ch+var_5C] 0 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_104] +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ebx +
call eax  +
mov [esp+13Ch+var_E8] eax +
movzx eax byte ptr [ebx+0Ch] +
mov byte ptr [esp+13Ch+var_F8] al +
shr byte ptr [esp+13Ch+var_F8] 4 +
movzx eax byte ptr [esp+13Ch+var_F8] +
cmp al 1 +
jz loc_452F50  +
jb loc_452CEE  +
cmp al 2 +
jz loc_452F38  +
cmp al 0Ah +
jnz loc_4527E5  +
mov [esp+13Ch+var_58] 800000h +
mov eax [ebx+10h] +
test eax eax +
jz loc_452E87  +
cmp eax 0FFFFFFF1h +
jz loc_452FDB  +
cmp eax 0FFFFFFF2h +
jnz loc_452F92  +
mov eax [ebx+4] +
mov [esp+13Ch+var_5C] offset off_492840 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_E4] +
mov edx [ebx+8] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_43CA60  +
test eax eax +
mov [esp+13Ch+var_54] eax +
jz loc_4534B3  +
cmp dword ptr [ebx+10h] 0FFFFFFF2h +
jz loc_452ED2  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+64h] +
test eax eax +
jz loc_452F28  +
lea edx [esp+13Ch+var_60] +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] edx +
lea edx [esp+13Ch+var_5C] +
mov [esp+13Ch+var_128] edx +
lea edx [esp+13Ch+var_58] +
mov [esp+13Ch+var_12C] edx +
lea edx [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
test eax eax +
jz loc_4534B3  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_54] +
test eax eax +
jz loc_452CEE  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_453AC6  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jz loc_452F77  +
mov eax [esp+13Ch+var_F4] +
cmp eax offset off_4928E8 +
jz loc_453515  +
mov eax [eax+14h] +
mov [esp+13Ch+var_108] eax +
shr [esp+13Ch+var_108] 0Ch +
xor [esp+13Ch+var_108] 1 +
and [esp+13Ch+var_108] 1 +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+var_FC] +
mov [esp+13Ch+var_50] 0 +
mov [esp+13Ch+var_48] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_38] 0 +
mov [esp+13Ch+var_40] 0 +
mov [esp+13Ch+var_3C] 0 +
shr al 1 +
and eax 1 +
cmp dword ptr [edi+28h] 1 +
mov [esp+13Ch+var_4C] eax +
mov eax [esp+13Ch+var_F4] +
jnz loc_452C01  +
mov eax [esp+13Ch+var_EC] +
test eax eax +
jz loc_453522  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_43C860  +
movzx eax word ptr [esp+13Ch+var_18] +
mov esi eax +
and esi 7FFFh +
test ax ax +
js loc_4529B1  +
cmp esi 1 +
jbe loc_45374B  +
cmp [esp+13Ch+var_5C] offset off_492990 +
jz loc_45372D  +
mov eax [ebx+10h] +
test eax eax +
jz loc_453410  +
mov eax [ebp+0A0h] +
mov ecx [eax+238h] +
cmp esi ecx +
ja loc_453AA2  +
cmp esi 1 +
jbe loc_453A7E  +
mov edi [eax+240h] +
lea edx [esi+esi*4] +
lea edx [edi+edx*8] +
mov edx [edx-10h] +
test edx edx +
jz loc_453AA2  +
mov [esp+13Ch+var_13C] edx +
mov [esp+13Ch+var_DC] edx +
call strlen  +
mov edx [esp+13Ch+var_DC] +
mov [esp+13Ch+var_B4] eax +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov eax ecx +
mov ecx [esp+13Ch+var_B4] +
not eax  +
sub eax 1 +
mov [esp+13Ch+var_DC] eax +
add ecx eax +
lea eax [ecx+3] +
add ecx 2 +
cmp word ptr [esp+13Ch+var_18] 0 +
cmovs eax ecx +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_C4] edx +
mov [esp+13Ch+var_13C] eax +
call sub_42A750  +
test eax eax +
mov edi eax +
jz loc_4534B3  +
mov eax [esp+13Ch+var_DC] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_DC] +
mov edx [esp+13Ch+var_C4] +
lea ecx [edi+eax] +
mov byte ptr [ecx] 40h +
lea eax [ecx+1] +
cmp word ptr [esp+13Ch+var_18] 0 +
js loc_452A9D  +
cmp dword ptr [ebx+10h] 0 +
jz loc_452A9D  +
lea eax [ecx+2] +
mov byte ptr [ecx+1] 40h +
mov ecx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_13C] eax +
add ecx 1 +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_5C] +
mov ecx edi +
mov [esp+13Ch+var_54] edi +
cmp eax offset off_4928E8 +
jz loc_452AF3  +
mov eax [esp+13Ch+var_100] +
test eax eax +
jnz loc_452AF3  +
test byte ptr [ebp+2Bh] 8 +
jz loc_452AF3  +
movzx eax byte ptr [ebx+0Dh] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jz loc_452AF3  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+0Dh] al +
lea eax [esp+13Ch+var_38] +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_50] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_4C] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_44] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_40] +
mov [esp+13Ch+var_124] eax +
lea eax [esp+13Ch+var_48] +
mov [esp+13Ch+var_128] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
call sub_44F370  +
test eax eax +
jz loc_4534B3  +
mov eax [esp+13Ch+var_14] +
test eax eax +
jnz loc_452CEE  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jz loc_452BB3  +
mov eax [esp+13Ch+var_38] +
test eax eax +
mov eax 0 +
cmovz eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_108] eax +
mov eax [esp+13Ch+var_F0] +
mov eax [eax] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
ja loc_452BD4  +
mov eax [eax+14h] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
jbe loc_452BC5  +
mov edx [ebp+0A0h] +
mov edx [edx+240h] +
test edx edx +
jz loc_452BFA  +
cmp esi 1 +
jbe loc_452BFA  +
test byte ptr [esp+13Ch+var_108] 1 +
jz loc_452BFA  +
lea ecx [esi+esi*4] +
lea edx [edx+ecx*8-28h] +
mov [eax+40h] edx +
mov eax [esp+13Ch+var_5C] +
mov edi [esp+13Ch+var_F0] +
mov ecx [esp+13Ch+var_104] +
mov [esp+13Ch+var_118] edi +
movzx edx byte ptr [ecx+1ACh] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_58] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] 0 +
and edx 1 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_11C] edx +
mov edx [esp+13Ch+var_60] +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_128] edx +
mov [esp+13Ch+var_13C] eax +
call sub_42E5A0  +
test eax eax +
jz loc_4534B3  +
mov edi [edi] +
movzx eax byte ptr [edi+0Ch] +
mov esi edi +
sub eax 6 +
cmp al 1 +
ja loc_452C8E  +
lea esi [esi+0] +
mov esi [esi+14h] +
movzx eax byte ptr [esi+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_452C80  +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_C4] 0 +
mov [eax] esi +
mov eax [esp+13Ch+var_58] +
shr eax 7 +
and eax 1 +
mov byte ptr [esp+13Ch+var_DC] al +
movzx eax byte ptr [esp+13Ch+var_100] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_452CC3  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jnz loc_45375E  +
mov eax [esp+13Ch+var_E8] +
test eax eax +
jz loc_452E97  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_453A93  +
lea esi [esi+0] +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_452FEB  +
mov edi [esp+13Ch+var_EC] +
add ebx 14h +
add [esp+13Ch+var_F0] 4 +
mov eax edi +
add eax 2 +
test edi edi +
cmovz eax edi +
cmp [esp+13Ch+var_E0] ebx +
mov [esp+13Ch+var_EC] eax +
ja loc_452771  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_452D22  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_D4] +
test eax eax +
jz loc_452D32  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [ebp+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_45440F  +
mov eax [esp+13Ch+var_B8] +
test eax eax +
jz loc_452D99  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 2 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_452278  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4542AA  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_4542AA  +
mov eax [esp+13Ch+var_B0] +
xor esi esi +
test eax eax +
jz loc_45429E  +
mov [esp+13Ch+arg_0] ebp +
jmp loc_452DE4  +
add esi 1 +
cmp esi [esp+13Ch+var_B0] +
jz loc_454297  +
mov eax [esp+13Ch+var_C8] +
mov ebx [eax+esi*4] +
mov edi [ebx+4] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] edi +
call strchr  +
test eax eax +
jz loc_452DD4  +
movzx ecx byte ptr [ebx+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_452DD4  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp+13Ch+var_13C] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_454C37  +
mov eax [ebx+4] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov byte ptr [ebp+edi+0] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_42D940  +
test eax eax +
mov edi eax +
jz loc_452E7A  +
movzx eax byte ptr [ebx+0Ch] +
cmp [edi+0Ch] al +
jz loc_454A54  +
mov [esp+13Ch+var_13C] ebp +
call free  +
jmp loc_452DD4  +
mov [esp+13Ch+var_5C] offset off_4928E8 +
jmp loc_452817  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 10h +
jz loc_452CE0  +
cmp byte ptr [esi+0Ch] 5 +
jnz loc_452CE0  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+40h] +
mov edx [esp+13Ch+var_40] +
cmp edx eax +
jnb loc_453A1A  +
mov edx [esi+14h] +
mov [edx] eax +
jmp loc_452CE0  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_4537B0  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jnz loc_45284A  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_45284A  +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_41E710  +
test eax eax +
jz loc_454AF8  +
mov [esp+13Ch+var_5C] eax +
mov [esp+13Ch+var_F4] eax +
jmp loc_4528C7  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
jmp loc_4528BB  +
mov [esp+13Ch+var_58] 80h +
mov eax [ebx+10h] +
jmp loc_4527E8  +
mov eax [ebx+10h] +
test eax eax +
jz loc_452E87  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jnz loc_4527F0  +
mov [esp+13Ch+var_58] 2 +
jmp loc_4527F0  +
mov eax [esp+13Ch+var_F4] +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jnz loc_4528D6  +
jmp loc_452CEE  +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_43F6C0  +
test eax eax +
mov [esp+13Ch+var_5C] eax +
jz loc_452FDB  +
cmp eax offset off_492990 +
jz loc_452FBD  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_453CC3  +
mov edx [ebp+28h] +
shr edx 5 +
and edx 42h +
jz loc_452817  +
mov eax [eax+1Ch] +
sub [esp+13Ch+var_60] eax +
jmp loc_452817  +
mov [esp+13Ch+var_5C] offset off_492990 +
jmp loc_452817  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_453508  +
mov ecx [esp+13Ch+var_100] +
test ecx ecx +
jnz loc_4534C7  +
mov edx [esp+13Ch+var_108] +
movzx eax byte ptr [esi+33h] +
test edx edx +
jnz loc_453CA7  +
mov edx eax +
or edx 1 +
mov [esi+33h] dl +
cmp byte ptr [esp+13Ch+var_F8] 2 +
jz loc_453026  +
or eax 11h +
mov [esi+33h] al +
cmp edi esi +
jz loc_453034  +
test byte ptr [edi+34h] 8 +
jnz loc_453508  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 3 +
jz loc_45304F  +
test byte ptr [esi+33h] 0Ch +
jz loc_453508  +
mov [esp+13Ch+var_F8] 1 +
mov eax [esp+13Ch+var_108] +
test eax eax +
jnz loc_453994  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jnz loc_453078  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_453994  +
mov eax [esp+13Ch+var_40] +
test eax eax +
jnz loc_45308F  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jz loc_453156  +
movzx edx byte ptr [esi+0Ch] +
cmp dl 5 +
jz loc_453156  +
sub edx 3 +
cmp dl 1 +
jbe loc_4530BF  +
mov [esp+13Ch+var_138] 1135h +
mov [esp+13Ch+var_13C] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esp+13Ch+var_40] +
bsf edx [esi+18h] +
mov ecx 0FFFFFFFFh +
cmovz edx ecx +
mov ecx [esi+14h] +
mov [esp+13Ch+var_F4] edx +
mov edx [ecx+94h] +
test edx edx +
jz loc_4530F2  +
test byte ptr [edx+29h] 8 +
jnz loc_4530F2  +
mov edi [esp+13Ch+var_F4] +
mov edx [ecx+40h] +
cmp edi edx +
cmovbe edx edi +
mov [esp+13Ch+var_F4] edx +
test eax eax +
jz loc_453BAC  +
mov ecx [esp+13Ch+var_3C] +
mov edx ebp +
mov [esp+13Ch+var_E8] ecx +
cmp [esp+13Ch+var_F4] eax +
jnb loc_453156  +
test edx edx +
jz loc_4547B0  +
mov ecx eax +
mov edi 1 +
mov eax [esp+13Ch+var_54] +
shl edi cl +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_128] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_12C] eax +
mov eax 1 +
shl eax cl +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_13C] offset aWarningAlignme +
mov [esp+13Ch+var_134] eax +
call off_492AE8  +
mov eax [ebx+4] +
test eax eax +
jz loc_45317A  +
mov edi [ebx+10h] +
test edi edi +
jz loc_45317A  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_453C41  +
mov edx [esi+2Ch] +
test edx edx +
jnz loc_45317A  +
mov [esi+2Ch] eax +
movzx eax byte ptr [esi+0Ch] +
cmp al 5 +
jz loc_453A5F  +
movzx ecx byte ptr [esp+13Ch+var_108] +
movzx edx byte ptr [ebx+0Ch] +
and ecx 1 +
and edx 0Fh +
mov byte ptr [esp+13Ch+var_F4] cl +
jz loc_4531EE  +
test cl cl +
jz loc_4531AA  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jz loc_453A56  +
mov ecx [esp+13Ch+var_48] +
test ecx ecx +
jz loc_4531BD  +
cmp al 5 +
jz loc_453A56  +
movzx eax byte ptr [esi+30h] +
test al al +
jnz loc_4531EE  +
movzx ecx dl +
cmp ecx 0Ah +
jz loc_453D06  +
movzx edx al +
cmp edx ecx +
jz loc_4531EE  +
test al al +
jz loc_4531EB  +
mov eax [esp+13Ch+var_4C] +
test eax eax +
jz loc_454827  +
mov [esi+30h] cl +
mov edx [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_100] +
mov edi [esp+13Ch+var_108] +
mov eax [ebp+4] +
add edx 14h +
mov [esp+13Ch+var_134] ecx +
mov ecx ebx +
mov [esp+13Ch+var_13C] edx +
mov edx esi +
mov [esp+13Ch+var_138] edi +
call sub_44B9A0  +
test edi edi +
jz loc_453245  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 20h +
jz loc_453245  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
test byte ptr [ebp+2Ah] 20h +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
mov eax [esp+13Ch+var_108] +
test eax eax +
jz loc_4532D9  +
movzx eax byte ptr [ebx+0Eh] +
mov [esi+32h] al +
mov eax [esp+13Ch+var_58] +
shr eax 17h +
and eax 1 +
lea edx ds:0[eax*4] +
movzx eax byte ptr [esi+35h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+35h] al +
movzx eax byte ptr [esp+13Ch+var_A0] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_4532D9  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] eax +
call strchr  +
test eax eax +
jz loc_4532D9  +
cmp byte ptr [eax+1] 40h +
jz loc_4532D9  +
mov edi [esp+13Ch+var_C8] +
test edi edi +
jz loc_454A25  +
mov eax [esp+13Ch+var_B0] +
mov ecx [esp+13Ch+var_C8] +
mov [ecx+eax*4] esi +
add eax 1 +
mov [esp+13Ch+var_B0] eax +
mov ecx [esp+13Ch+var_F8] +
test ecx ecx +
jnz loc_4537F0  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_452CEE  +
cmp [esp+13Ch+var_AC] 0 +
jnz loc_452CEE  +
test byte ptr [esi+35h] 1 +
jz loc_453A6E  +
mov eax [ebp+0A0h] +
mov [esp+13Ch+var_AC] 0 +
test byte ptr [eax+924h] 1 +
jz loc_452CEE  +
mov edi [esp+13Ch+var_FC] +
mov edx [edi+64h] +
mov edi [eax+220h] +
test edx edx +
jz loc_453370  +
mov [esp+13Ch+var_108] ebx +
mov ebx edx +
mov eax [ebx+4] +
mov eax [eax+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_453366  +
mov eax [ebx+8] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call strcmp  +
test eax eax +
jz loc_453A6A  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_45333D  +
mov ebx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_3C] +
mov ecx [esp+13Ch+arg_4] +
mov edx [ecx+18h] +
mov ecx [esi+4] +
mov edx [edx+34h] +
mov [esp+13Ch+var_130] ecx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] offset asc_4B28AD +
call edx  +
mov ecx [esp+13Ch+var_3C] +
mov eax [ebp+0A0h] +
test ecx ecx +
mov edx [eax+924h] +
jz loc_4533BC  +
test dl 8 +
jnz loc_454C0A  +
and edx 0FFFFFFFEh +
mov ecx edi +
mov [eax+924h] edx +
mov edx [esp+13Ch+arg_4] +
mov eax ebp +
mov [esp+13Ch+var_13C] 1 +
call sub_451880  +
test eax eax +
js loc_4534B3  +
mov [esp+13Ch+var_AC] 1 +
jz loc_452CEE  +
mov [esp+13Ch+var_138] 11FDh +
mov [esp+13Ch+var_13C] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_452CEE  +
mov eax [ebp+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_453487  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_453437  +
jmp loc_453480  +
mov eax [eax+14h] +
test eax eax +
jz loc_453480  +
movzx edx word ptr [eax+6] +
cmp esi edx +
jnz loc_453430  +
mov edx [eax+10h] +
test edx edx +
jz loc_453487  +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
lea edi [ecx-1] +
or ecx 0FFFFFFFFh +
mov [esp+13Ch+var_DC] edi +
mov edi edx +
scas   +
mov edi [esp+13Ch+var_DC] +
not ecx  +
lea eax [ecx-1] +
mov [esp+13Ch+var_B4] eax +
lea eax [eax+edi+2] +
jmp loc_452A3B  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_453420  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBSInvalidNeede +
mov [esp+13Ch+var_134] eax +
call off_492AE8  +
mov [esp+13Ch+var_13C] 11h +
call sub_420C50  +
mov esi [esp+13Ch+var_B8] +
test esi esi +
jnz loc_452278  +
jmp loc_452287  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_453CF9  +
or byte ptr [esi+33h] 4 +
or byte ptr [edi+33h] 4 +
cmp edi esi +
jz loc_4534E5  +
test byte ptr [edi+34h] 8 +
jnz loc_453508  +
test byte ptr [esi+33h] 3 +
jnz loc_45304F  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_453508  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_453508  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_45304F  +
mov [esp+13Ch+var_F8] 0 +
jmp loc_453057  +
mov [esp+13Ch+var_108] 0 +
jmp loc_4528FB  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 4 +
jz loc_453A24  +
mov eax [ebp+0A0h] +
mov edx [eax+238h] +
mov eax edx +
mov word ptr [esp+13Ch+var_18] dx +
jmp loc_45298A  +
mov ecx [esp+13Ch+var_FC] +
mov ebp edi +
test ecx ecx +
jnz loc_451EA5  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_451C3D  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_425850  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_43CA60  +
test eax eax +
jz loc_453A40  +
test ebx ebx +
jz loc_453A40  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_453A40  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_453612  +
jmp loc_454403  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_453610  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_45243C  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_425850  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_43CA60  +
test eax eax +
jz loc_453A40  +
test ebx ebx +
jz loc_453A40  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_425850  +
test eax eax +
mov esi eax +
jz loc_453A40  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [eax+64h] +
test edx edx +
jnz loc_4536C2  +
jmp loc_4543FB  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4536C0  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_452433  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_43CA60  +
test eax eax +
mov [esp+13Ch+var_F4] eax +
jz loc_453A40  +
mov eax [esp+13Ch+var_14] +
jmp loc_45242A  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_43CA60  +
mov [esp+13Ch+var_F0] eax +
jmp loc_4523DB  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_4529B1  +
mov eax [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_54] +
jmp loc_452AC7  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_452CC3  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_452CC3  +
mov eax [esi+3Ch] +
test eax eax +
jnz loc_452CC3  +
mov eax [esp+13Ch+var_CC] +
mov [esp+13Ch+var_C4] 1 +
mov [esp+13Ch+var_CC] esi +
mov [esi+3Ch] eax +
jmp loc_452CC3  +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_41E710  +
test eax eax +
jnz loc_452F18  +
mov [esp+13Ch+var_134] 209001h +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_41EBD0  +
test eax eax +
jnz loc_452F18  +
jmp loc_4534B3  +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_45422E  +
movzx eax byte ptr [esi+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_453BC6  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_452CEE  +
mov eax [esp+13Ch+var_AC] +
test eax eax +
jnz loc_452CEE  +
test byte ptr [esi+33h] 10h +
jz loc_4532FE  +
mov eax [esp+13Ch+var_3C] +
test eax eax +
jz loc_454902  +
test byte ptr [eax+2Ah] 20h +
jnz loc_4532FE  +
mov edx [ebp+0A0h] +
mov edi [edx+220h] +
jmp loc_453377  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_138] eax +
call sub_43CC60  +
test eax eax +
mov [esp+13Ch+var_D4] eax +
jz loc_452090  +
mov eax [esp+13Ch+var_F0] +
test eax eax +
jnz loc_452185  +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
shl eax 2 +
mov [esp+13Ch+var_138] eax +
call sub_425930  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_F0] eax +
jz loc_4522B3  +
mov eax [ebp+0A0h] +
mov [eax+218h] edi +
jmp loc_452185  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+4] +
mov [esp+13Ch+var_13C] ebp +
shr al 2 +
and eax 1 +
mov [esp+13Ch+var_138] eax +
call sub_4463E0  +
test eax eax +
jz loc_4522A7  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
mov esi [ebx+914h] +
test esi esi +
jz loc_45219F  +
mov eax [ebx+178h] +
mov [esp+13Ch+var_13C] eax +
call sub_42B400  +
test eax eax +
mov [esp+13Ch+var_C0] eax +
jz loc_4522A7  +
mov eax [ebx+170h] +
mov edx [ebx+174h] +
mov esi [ebx+178h] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
call sub_429F00  +
test eax eax +
jnz loc_452297  +
mov eax [esp+13Ch+var_C0] +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_429CF0  +
cmp esi eax +
jnz loc_452297  +
mov ebx [ebp+0A0h] +
jmp loc_45219F  +
mov eax [esp+13Ch+var_5C] +
movzx edx byte ptr [esi+34h] +
mov [esp+13Ch+var_88] eax +
mov eax [esp+13Ch+var_54] +
test dl 2 +
mov [esp+13Ch+var_84] edx +
mov ecx eax +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_34] eax +
jnz loc_453078  +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] ecx +
call strchr  +
mov edx [esp+13Ch+var_84] +
and edx 6 +
mov [esp+13Ch+var_B4] eax +
jnz loc_453D17  +
test eax eax +
jz loc_454B29  +
mov eax [esp+13Ch+var_B4] +
cmp byte ptr [eax+1] 40h +
jz loc_454815  +
or byte ptr [esi+34h] 6 +
jmp loc_453078  +
mov eax [esi+14h] +
mov [eax] edx +
jmp loc_452CE0  +
xor eax eax +
mov ecx [esp+13Ch+var_54] +
xor esi esi +
mov word ptr [esp+13Ch+var_18] ax +
mov eax [esp+13Ch+var_F4] +
jmp loc_452AC7  +
mov eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_452092  +
movzx eax byte ptr [esi+30h] +
jmp loc_4531C5  +
mov edx [esi+18h] +
mov [esi+2Ch] edx +
jmp loc_453186  +
mov ebx [esp+13Ch+var_108] +
mov [esp+13Ch+var_AC] 0 +
jmp loc_452CEE  +
mov [esp+13Ch+var_B4] 0 +
mov edx offset unk_4B2698 +
jmp loc_452A07  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call sub_42BE10  +
jmp loc_452EB9  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_13C] offset aBSInvalidVersi +
call off_492AE8  +
mov [esp+13Ch+var_13C] 11h +
call sub_420C50  +
jmp loc_4534B3  +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov ecx [esp+13Ch+var_1C] +
test ecx ecx +
jz loc_454801  +
mov [esp+13Ch+var_20] ecx +
mov eax [esp+13Ch+var_FC] +
mov edx [eax+0C4h] +
test edx edx +
jnz loc_453B12  +
jmp loc_454AED  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_453B10  +
mov [edx] ecx +
mov [esp+13Ch+var_13C] ebp +
call sub_41E6C0  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_453C18  +
cmp byte ptr [eax] 0 +
jz loc_453C18  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F4] +
xor ecx ecx +
test byte ptr [esp+13Ch+var_E4] 0Bh +
mov edx [esp+13Ch+arg_4] +
setz cl  +
mov [eax+220h] edi +
mov eax ebp +
mov [esp+13Ch+var_AC] ecx +
mov [esp+13Ch+var_13C] ecx +
mov ecx edi +
call sub_451880  +
test eax eax +
js loc_452090  +
jnz loc_451C3D  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F0] +
mov [eax+224h] edi +
mov ecx [ebp+0A0h] +
mov eax [ecx+910h] +
test eax eax +
jz loc_452122  +
lea eax [ecx+0F0h] +
mov [esp+13Ch+var_E4] eax +
jmp loc_452129  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call sub_42BE10  +
mov edx [esp+13Ch+var_3C] +
mov [esp+13Ch+var_E8] ebp +
jmp loc_453107  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] edi +
call eax  +
jmp loc_4532E5  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+0A0h] +
lea ecx [eax+0F0h] +
mov [esp+13Ch+var_E8] ecx +
mov ecx [eax+910h] +
mov [esp+13Ch+var_F0] eax +
test ecx ecx +
jnz loc_45259D  +
jmp loc_452592  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
test edi edi +
mov [esp+13Ch+var_F4] edi +
jz loc_453C35  +
cmp byte ptr [edi] 0 +
jnz loc_453B3D  +
mov edi [ebp+0] +
mov [esp+13Ch+var_F4] edi +
jmp loc_453B3D  +
mov edx [esi+2Ch] +
test edx edx +
jz loc_453177  +
cmp eax edx +
jz loc_453177  +
mov edi [esp+13Ch+var_50] +
test edi edi +
jnz loc_453177  +
mov [esp+13Ch+var_128] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_13C] offset aWarningSizeOfS +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_138] eax +
call off_492AE8  +
mov eax [ebx+4] +
jmp loc_453177  +
mov [esp+13Ch+var_C8] 0 +
jmp loc_452278  +
or eax 2 +
test al 8 +
mov [esi+33h] al +
jz loc_453026  +
and eax 0FFFFFFF7h +
or eax 4 +
mov [esi+33h] al +
jmp loc_453026  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_452FBD  +
cmp dx 200h +
jz loc_452FBD  +
mov [esp+13Ch+var_5C] offset off_4928E8 +
mov dword ptr [ebx+10h] 0 +
jmp loc_452817  +
or byte ptr [esi+33h] 8 +
or byte ptr [edi+33h] 8 +
jmp loc_4534DB  +
test byte ptr [ebp+29h] 8 +
mov edx 2 +
cmovnz ecx edx +
jmp loc_4531D1  +
mov eax [esp+13Ch+var_B4] +
test eax eax +
jz loc_453078  +
mov eax [ebp+4] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_7C] eax +
movzx eax byte ptr [eax+1ACh] +
mov byte ptr [esp+13Ch+var_78] al +
mov eax [ebp+28h] +
and byte ptr [esp+13Ch+var_78] 1 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_B4] +
sub eax [esp+13Ch+var_F4] +
shr [esp+13Ch+var_80] 5 +
and [esp+13Ch+var_80] 3FFFFh +
mov [esp+13Ch+var_84] eax +
add eax 1 +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_42A750  +
test eax eax +
mov edi eax +
jz loc_4534B3  +
mov edx [esp+13Ch+var_F4] +
mov eax [esp+13Ch+var_84] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax [esp+13Ch+var_84] +
mov ecx edi +
mov edx [esp+13Ch+arg_4] +
mov byte ptr [edi+eax] 0 +
mov eax [esp+13Ch+var_88] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_18] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
lea eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov [esp+13Ch+var_14] 1 +
call sub_44F370  +
test eax eax +
jz loc_4534B3  +
movzx eax byte ptr [esp+13Ch+var_78] +
mov [esp+13Ch+var_78] eax +
mov eax [esp+13Ch+var_80] +
shr eax 6 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_28] +
and [esp+13Ch+var_80] 1 +
test eax eax +
jnz loc_453F4A  +
mov eax [esp+13Ch+var_1C] +
test eax eax +
jz loc_454992  +
mov eax [esp+13Ch+var_24] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
mov edi [esp+13Ch+var_F8] +
cmp dl 1 +
ja loc_453EF8  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_453EDE  +
mov [esp+13Ch+var_F8] edi +
mov [esp+13Ch+var_24] eax +
movzx edx byte ptr [esi+33h] +
mov byte ptr [esi+0Ch] 6 +
mov [esi+14h] eax +
test dl 8 +
jz loc_453F21  +
and edx 0FFFFFFF7h +
mov [esi+33h] dl +
movzx edx byte ptr [eax+33h] +
or edx 4 +
mov [eax+33h] dl +
and dl 3 +
jnz loc_454EA3  +
mov [esp+13Ch+var_24] esi +
mov eax esi +
movzx edx byte ptr [eax+0Ch] +
cmp dl 7 +
jnz loc_453F41  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
mov [esp+13Ch+var_24] eax +
cmp dl 6 +
jz loc_454B3B  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
call strlen  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_70] eax +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_42A750  +
test eax eax +
mov edi eax +
jz loc_4534B3  +
mov edx [esp+13Ch+var_84] +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] ecx +
call memcpy  +
mov edx [esp+13Ch+var_84] +
mov eax edi +
mov ecx [esp+13Ch+var_70] +
mov [esp+13Ch+var_74] edi +
add eax edx +
sub ecx edx +
mov edx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_13C] eax +
add edx 1 +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov edi [esp+13Ch+var_88] +
mov eax ebp +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_18] edi +
lea edi [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] edi +
lea edi [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] edi +
lea edi [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] edi +
lea edi [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] edi +
lea edi [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] edi +
lea edi [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] edi +
lea edi [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] edi +
lea edi [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] edi +
lea edi [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] edi +
mov edi [esp+13Ch+var_74] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov ecx edi +
call sub_44F370  +
test eax eax +
jz loc_4534B3  +
mov ecx [esp+13Ch+var_28] +
test ecx ecx +
jnz loc_453078  +
cmp [esp+13Ch+var_1C] 0 +
mov eax [esp+13Ch+var_24] +
jz loc_454D6D  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_453078  +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBUnexpectedRed +
call off_492AE8  +
jmp loc_453078  +
mov eax [esp+13Ch+arg_4] +
mov edi [ebp+4] +
mov eax [eax+30h] +
cmp [eax+4] edi +
jnz loc_452111  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+30h] 0 +
jnz loc_452111  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_44EE70  +
test eax eax +
jnz loc_452111  +
xor eax eax +
jmp loc_452092  +
mov esi [esp+13Ch+var_FC] +
mov ecx [esp+13Ch+var_B8] +
mov ebx [esp+13Ch+var_A8] +
mov eax [esi] +
mov [esp+13Ch+var_13C] ecx +
mov edi ecx +
mov [esp+13Ch+var_134] ebx +
add edi ebx +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov ecx [esi+1Ch] +
mov eax [esi+50h] +
mov [esp+13Ch+var_9C] ecx +
mov ecx [esi+20h] +
mov [esp+13Ch+var_98] ecx +
mov ecx [esi] +
mov [esp+13Ch+var_94] ecx +
mov ecx [esi+0Ch] +
mov [esp+13Ch+var_90] ecx +
mov ecx [esi+10h] +
mov [esp+13Ch+var_8C] ecx +
mov ecx [esi+4Ch] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_D8] ecx +
call sub_467110  +
mov ecx [esi+0Ch] +
test ecx ecx +
mov [esp+13Ch+var_BC] eax +
jz loc_452715  +
xor ebx ebx +
mov [esp+13Ch+arg_0] ebp +
mov ebp edi +
mov edi ebx +
mov ebx esi +
mov eax [ebx] +
mov esi [eax+edi*4] +
test esi esi +
jz loc_4541FB  +
mov eax [ebx+14h] +
jmp loc_4541C6  +
mov esi [esi] +
test esi esi +
jz loc_4541FB  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] esi +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
cmp byte ptr [esi+0Ch] 7 +
jnz loc_4541C0  +
mov edx [esi+14h] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
jmp loc_4541C0  +
add edi 1 +
cmp edi [ebx+0Ch] +
jb loc_4541AC  +
mov ebp [esp+13Ch+arg_0] +
jmp loc_452715  +
mov edx edi +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov [esp+13Ch+var_13C] edx +
call free  +
jmp loc_453AE7  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_44F290  +
test eax eax +
jz loc_4534B3  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_45380C  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_45380C  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_45380C  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_44F290  +
test eax eax +
jnz loc_45380C  +
jmp loc_4534B3  +
xor eax eax +
jmp loc_452200  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_CC] +
test eax eax +
jz loc_454349  +
mov ebx [esp+13Ch+var_D0] +
shl ebx 2 +
mov [esp+13Ch+var_13C] ebx +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_452090  +
mov eax [ebp+0A0h] +
mov esi [eax+218h] +
lea eax [esi+ebx] +
cmp esi eax +
mov [esp+13Ch+var_108] eax +
jnb loc_45463D  +
mov ecx edi +
mov [esp+13Ch+var_F4] 0 +
jmp loc_454303  +
add esi 4 +
cmp [esp+13Ch+var_108] esi +
jbe loc_454645  +
mov ebx [esi] +
test ebx ebx +
jz loc_4542F6  +
cmp byte ptr [ebx+0Ch] 3 +
jnz loc_4542F6  +
mov eax [esp+13Ch+var_104] +
movzx edx byte ptr [ebx+30h] +
mov [esp+13Ch+var_F8] ecx +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
mov ecx [esp+13Ch+var_F8] +
test eax eax +
jnz loc_4542F6  +
mov [ecx] ebx +
add ecx 4 +
add [esp+13Ch+var_F4] 1 +
jmp loc_4542F6  +
mov [esp+13Ch+var_13C] edi +
mov ebp [esp+13Ch+arg_0] +
call free  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_45436C  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] edi +
call eax  +
test eax eax +
jz loc_452090  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_45497F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_454C68  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 1 +
jnz loc_45497F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_451C3D  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+1] 8 +
jz loc_454915  +
cmp [esp+13Ch+var_AC] 0 +
jz loc_451C3D  +
mov [esp+13Ch+var_138] 8 +
mov [esp+13Ch+var_13C] ebp +
call sub_425850  +
test eax eax +
jz loc_452090  +
mov edi [esp+13Ch+var_FC] +
mov [eax+4] ebp +
mov edx [edi+0D0h] +
mov [eax] edx +
mov [edi+0D0h] eax +
mov eax 1 +
jmp loc_451CA3  +
lea edx [eax+64h] +
jmp loc_4536C8  +
lea edx [esp+13Ch+var_1C] +
jmp loc_453618  +
mov edx [eax+218h] +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_138] 0 +
mov ebx [esp+13Ch+var_B8] +
mov esi [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] edx +
shl eax 2 +
mov [esp+13Ch+var_134] eax +
call memset  +
mov eax [esp+13Ch+var_FC] +
add esi ebx +
mov ecx [esp+13Ch+var_94] +
mov edi [esp+13Ch+var_90] +
mov edx [esp+13Ch+var_8C] +
mov [eax] ecx +
mov [eax+0Ch] edi +
mov edi eax +
mov [eax+10h] edx +
mov eax [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax edi +
mov edi [esp+13Ch+var_9C] +
mov ecx [esp+13Ch+var_BC] +
mov [eax+1Ch] edi +
mov edi [esp+13Ch+var_98] +
mov [eax+20h] edi +
mov edi eax +
mov eax [eax+50h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call sub_467090  +
mov eax [edi+0Ch] +
mov [esp+13Ch+var_100] 0 +
test eax eax +
jz loc_4545B9  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_FC] +
mov eax [ebp+0] +
mov edi [esp+13Ch+var_100] +
mov ebx [eax+edi*4] +
test ebx ebx +
jnz loc_454531  +
jmp loc_4545A0  +
mov edi [esp+13Ch+var_D8] +
cmp [eax+20h] edi +
jl loc_4544F5  +
mov edx [eax+38h] +
cmp [esp+13Ch+var_BC] edx +
ja loc_454565  +
xor edi edi +
cmp byte ptr [eax+0Ch] 5 +
mov [esp+13Ch+var_108] 0 +
jz loc_454557  +
mov eax [ebp+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov edx [ebp+14h] +
mov ecx ebx +
movzx eax byte ptr [ebx+0Ch] +
add esi edx +
cmp al 7 +
jz loc_454581  +
cmp al 5 +
jz loc_454540  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4545A0  +
cmp byte ptr [ebx+0Ch] 7 +
mov eax ebx +
jnz loc_4544E0  +
mov eax [ebx+14h] +
jmp loc_4544E0  +
cmp [ecx+18h] edi +
jnb loc_454548  +
mov [ecx+18h] edi +
mov eax [ecx+14h] +
mov edi [esp+13Ch+var_108] +
cmp [eax] edi +
jnb loc_45452B  +
mov [eax] edi +
jmp loc_45452B  +
mov edi [eax+18h] +
mov eax [eax+14h] +
mov eax [eax] +
mov [esp+13Ch+var_108] eax +
jmp loc_454505  +
mov ecx [ebp+50h] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_108] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_466FA0  +
mov eax [esp+13Ch+var_108] +
jmp loc_4544F5  +
mov eax [ebx+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call memcpy  +
mov ecx [ebx+14h] +
add esi [ebp+14h] +
movzx eax byte ptr [ecx+0Ch] +
jmp loc_454527  +
add [esp+13Ch+var_100] 1 +
mov eax [esp+13Ch+var_100] +
cmp eax [ebp+0Ch] +
jb loc_4544C6  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_4534B3  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_FC] +
mov edi [esp+13Ch+var_A4] +
mov eax [eax+8] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_488370  +
cmp [esp+13Ch+var_C8] 0 +
jz loc_451C3D  +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax 1 +
jmp loc_451CA3  +
mov [esp+13Ch+var_F4] 0 +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] offset sub_44A760 +
mov [esp+13Ch+var_134] 4 +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call qsort  +
mov [esp+13Ch+arg_0] ebp +
mov eax [esp+13Ch+var_CC] +
mov ecx [eax+3Ch] +
mov dword ptr [eax+3Ch] 0 +
movzx eax byte ptr [eax+0Ch] +
mov [esp+13Ch+var_108] ecx +
mov byte ptr [esp+13Ch+var_F8] al +
sub eax 3 +
cmp al 3 +
ja loc_454731  +
mov eax [esp+13Ch+var_CC] +
xor ecx ecx +
mov ebp [eax+14h] +
mov esi [eax+18h] +
mov eax [esp+13Ch+var_F4] +
test eax eax +
mov edx eax +
jnz loc_4546B9  +
jmp loc_454718  +
jz loc_4546D0  +
lea ecx [eax+1] +
cmp ecx edx +
jz loc_454718  +
lea eax [edx+ecx] +
shr eax 1 +
mov ebx [edi+eax*4] +
cmp esi [ebx+18h] +
jns loc_4546B0  +
mov edx eax +
jmp loc_4546B5  +
mov ebx [ebx+14h] +
mov ebx [ebx+4] +
cmp [ebp+4] ebx +
js loc_4546C6  +
jnz loc_4546B2  +
jmp loc_4546ED  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_4546F4  +
cmp esi [ebx+18h] +
jnz loc_4546F4  +
add eax 1 +
cmp eax edx +
jnz loc_4546E0  +
sub eax 1 +
sub ecx 1 +
mov edx [esp+13Ch+var_CC] +
jmp loc_454714  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_454718  +
cmp esi [ebx+18h] +
jnz loc_454718  +
sub eax 1 +
cmp edx ebx +
jnz loc_45474A  +
cmp eax ecx +
jnz loc_454700  +
mov ebp [esp+13Ch+var_108] +
test ebp ebp +
jz loc_45433A  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_CC] eax +
jmp loc_45466C  +
mov [esp+13Ch+var_138] 12D6h +
mov [esp+13Ch+var_13C] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_454691  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
mov [eax+3Ch] ebx +
jz loc_454774  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_454718  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] eax +
call sub_44F290  +
test eax eax +
jz loc_4547A1  +
mov eax [ebx+20h] +
cmp eax 0FFFFFFFFh +
jz loc_454718  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_454718  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_44F290  +
test eax eax +
jnz loc_454718  +
mov [esp+13Ch+var_13C] edi +
call free  +
xor eax eax +
jmp loc_451CA3  +
mov edi [esi+14h] +
mov dl 1 +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] offset aWarningAlign_0 +
mov [esp+13Ch+var_B4] edi +
mov edi edx +
shl edi cl +
mov ecx [esp+13Ch+var_54] +
mov [esp+13Ch+var_128] edi +
mov edi [esp+13Ch+var_B4] +
mov [esp+13Ch+var_12C] ecx +
mov ecx eax +
mov eax [esp+13Ch+var_E8] +
shl edx cl +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] eax +
call off_492AE8  +
jmp loc_453156  +
mov ecx [esp+13Ch+var_20] +
test ecx ecx +
jz loc_453B1A  +
jmp loc_453AFD  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [esi+34h] al +
jmp loc_453D26  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_E8] ecx +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aWarningTypeOfS +
call off_492AE8  +
mov ecx [esp+13Ch+var_E8] +
jmp loc_4531EB  +
mov ecx esi +
mov edi [esp+13Ch+var_E0] +
movzx edx byte ptr [ecx+0Ch] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax edx +
shr al 4 +
cmp al 9 +
ja loc_45487B  +
sub al 1 +
jnz loc_452699  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F0] ecx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_F4] eax +
mov eax [eax+158h] +
mov ecx eax +
mov eax edx +
and eax 0Fh +
mov [esp+13Ch+var_13C] eax +
call ecx  +
test eax eax +
jnz loc_452699  +
mov ecx [esp+13Ch+var_F0] +
cmp dword ptr [ecx+10h] 0 +
jz loc_452699  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F4] ecx +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ecx +
call eax  +
test eax eax +
jnz loc_452699  +
mov ecx [esp+13Ch+var_F4] +
mov eax [ecx+10h] +
mov ecx [esp+13Ch+var_E4] +
add eax 100h +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] eax +
call free  +
cmp [esp+13Ch+var_F4] 0F0h +
ja loc_451F3C  +
jmp loc_451ED8  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
xor eax eax +
jmp loc_453377  +
mov [esp+13Ch+var_138] offset a_stabstr_2 +
mov [esp+13Ch+var_13C] ebp +
call sub_41E710  +
test eax eax +
mov ebx eax +
jz loc_45497F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_14] 0 +
mov esi [ebp+64h] +
sub eax 0FFFFFF80h +
mov [esp+13Ch+var_108] eax +
jmp loc_45497B  +
mov edi [esi] +
mov [esp+13Ch+var_134] 5 +
mov [esp+13Ch+var_138] offset a_stab_2 +
mov [esp+13Ch+var_13C] edi +
call strncmp  +
test eax eax +
jnz loc_454978  +
movzx eax byte ptr [edi+5] +
test al al +
jz loc_454ED5  +
cmp al 2Eh +
jz loc_454EC3  +
mov esi [esi+0Ch] +
test esi esi +
jnz loc_454946  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_4543B6  +
jmp loc_451C3D  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax [esp+13Ch+var_24] +
jz loc_453F2A  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_492A38 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_42E5A0  +
test eax eax +
jz loc_4534B3  +
mov eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_24] eax +
jmp loc_453F2A  +
mov eax [esp+13Ch+var_E0] +
sub eax ebx +
sar eax 2 +
imul eax eax +
lea eax ds:4[eax*4] +
mov [esp+13Ch+var_13C] eax +
call sub_42B400  +
test eax eax +
mov [esp+13Ch+var_C8] eax +
jnz loc_4532C1  +
jmp loc_4534B3  +
mov eax [ebx+18h] +
cmp [edi+18h] eax +
jnz loc_452E7A  +
mov eax [ebx+14h] +
cmp [edi+14h] eax +
jnz loc_452E7A  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
call eax  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov [edi+14h] ebx +
mov byte ptr [edi+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ecx +
call eax  +
mov eax [esp+13Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
test eax eax +
jz loc_452E7A  +
xor ecx ecx +
cmp ecx [esp+13Ch+var_D0] +
jz loc_452E7A  +
mov edx eax +
add eax 4 +
cmp edi [eax-4] +
jz loc_454BE4  +
add ecx 1 +
jmp loc_454AD0  +
lea edx [eax+0C4h] +
jmp loc_453B18  +
mov [esp+13Ch+var_134] 101401h +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_41EBD0  +
test eax eax +
jnz loc_452F18  +
jmp loc_4534B3  +
lea edx [esp+13Ch+var_20] +
jmp loc_4524EE  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [esi+34h] al +
jmp loc_453078  +
mov edi [eax+14h] +
mov ecx edi +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov edi ecx +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
movzx edx byte ptr [edi+35h] +
mov eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_74] edi +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
mov edi ecx +
and edi 1 +
or edx edi +
mov edi [esp+13Ch+var_74] +
mov [edi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [edi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_454BFD  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_454BEB  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_453F4A  +
test byte ptr [eax+33h] 0Ch +
setnz al  +
movzx eax al +
mov [esp+13Ch+var_F8] eax +
jmp loc_453F4A  +
mov [edx] ebx +
jmp loc_452E7A  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_453F4A  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_453F4A  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] offset aBUndefinedRefe +
mov [esp+13Ch+var_134] eax +
call off_492AE8  +
mov [esp+13Ch+var_13C] 0Bh +
call sub_420C50  +
jmp loc_4534B3  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
jmp loc_452287  +
mov [esp+13Ch+var_134] offset aElf_link_add_o +
mov [esp+13Ch+var_138] 0E2Ah +
mov [esp+13Ch+var_13C] offset a____Binutil_21 +
call sub_420BD0  +
mov eax [esp+13Ch+var_104] +
cmp dword ptr [eax+78h] 0 +
jz loc_454386  +
mov edi [esp+13Ch+var_FC] +
mov eax [ebp+0A0h] +
mov edi [edi+2Ch] +
cmp [eax+920h] edi +
jnz loc_454386  +
mov edi [esp+13Ch+arg_4] +
mov eax [esp+13Ch+var_104] +
mov edx [edi+30h] +
mov eax [eax+74h] +
mov ecx [edx+4] +
mov edx [ebp+4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jz loc_454386  +
mov ebx [ebp+64h] +
jmp loc_454CFB  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+78h] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov edx [ebx+8Ch] +
cmp esi [edx+68h] +
mov edi eax +
jz loc_454CF0  +
mov [esp+13Ch+var_13C] esi +
call free  +
test edi edi +
jz loc_452090  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_454386  +
mov eax [ebx+14h] +
test al 4 +
jz loc_454CF8  +
cmp dword ptr [ebx+4Ch] 0 +
jz loc_454CF8  +
mov edi [esp+13Ch+arg_4] +
test byte ptr [edi+1] 8 +
jz loc_454D22  +
test ah 20h +
jnz loc_454CF8  +
cmp dword ptr [ebx+3Ch] offset off_492990 +
jz loc_454CF8  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+2] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebx +
shr al 6 +
and eax 1 +
mov [esp+13Ch+var_12C] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_450E60  +
test eax eax +
mov esi eax +
jnz loc_454CBC  +
xor eax eax +
jmp loc_452092  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_492A38 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+var_74] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_42E5A0  +
test eax eax +
jz loc_4534B3  +
mov eax [esp+13Ch+var_20] +
cmp byte ptr [eax+0Ch] 6 +
mov [esp+13Ch+var_24] eax +
jnz loc_453078  +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call edx  +
mov eax [esp+13Ch+var_24] +
movzx edx byte ptr [esi+35h] +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
and ecx 1 +
or edx ecx +
mov [esi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [esi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_454E96  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_454E84  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_453078  +
movzx eax byte ptr [eax+33h] +
shr al 2 +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_453078  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_453078  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_453078  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_44F290  +
test eax eax +
jnz loc_453F21  +
jmp loc_4534B3  +
movzx eax byte ptr [edi+6] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_454978  +
test byte ptr [esi+16h] 80h +
jnz loc_454978  +
cmp dword ptr [esi+3Ch] offset off_492990 +
jz loc_454978  +
mov edi [esi+8Ch] +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_128] eax +
mov [esp+13Ch+var_130] ebx +
mov [esp+13Ch+var_134] esi +
lea eax [edi+88h] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_469A30  +
test eax eax +
jz loc_452090  +
cmp dword ptr [edi+88h] 0 +
jz loc_454978  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or al 80h +
mov [esi+18h] ax +
jmp loc_454978  +
***
push ebx  +
mov edx [esp+8] +
xor eax eax +
test byte ptr [edx+34h] 8 +
jnz loc_454F76  +
movzx ecx byte ptr [edx+0Ch] +
lea ebx [ecx-1] +
cmp bl 1 +
jbe loc_454F76  +
sub ecx 3 +
cmp cl 1 +
jbe loc_454F78  +
mov eax 1 +
pop ebx  +
retn   +
***
mov edx [edx+14h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_454F71  +
jmp loc_454F76  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_454FAB  +
jmp loc_454FD0  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_454FD0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_454FA1  +
mov [esp+18h+var_14] offset off_492990 +
mov [esp+18h+var_18] ebx +
call sub_444510  +
test eax eax +
jnz loc_454FA1  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 40h +
mov esi [esp+58h] +
mov ebx [esp+54h] +
test esi esi +
jz loc_455058  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [ebx+1Ch] +
mov [esp] eax +
call sub_42D940  +
test eax eax +
jz loc_455029  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_455060  +
mov edx [ebx+10h] +
test edx edx +
jnz loc_455037  +
mov edx [esp+5Ch] +
mov [ebx+10h] edx +
test eax eax +
jz loc_455138  +
movzx eax byte ptr [eax+0Ch] +
mov edi 1 +
sub eax 1 +
cmp al 1 +
jbe loc_4550B1  +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [ebx+10h] +
xor eax eax +
jmp loc_45502C  +
***
test byte ptr [eax+33h] 2 +
jz loc_455029  +
cmp byte ptr [eax+30h] 1 +
ja loc_455029  +
mov ecx [ebx+10h] +
mov byte ptr [eax+30h] 1 +
test ecx ecx +
jnz loc_45514E  +
cmp dword ptr [eax+14h] offset off_492990 +
jz loc_455177  +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBSNotAbsolute +
mov [esp+4] eax +
call off_492AE8  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_45502C  +
***
lea eax [esp+3Ch] +
mov [esp+24h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov edx [ebx+10h] +
xor eax eax +
test edx edx +
cmovns eax [ebx+10h] +
mov dword ptr [esp+10h] offset off_492990 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] eax +
call sub_42E5A0  +
test eax eax +
jz loc_455146  +
mov eax [esp+3Ch] +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 40h +
mov edi 1 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor di di +
jmp loc_45504F  +
***
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBStackSizeSpec +
mov [esp+4] eax +
call off_492AE8  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_45502C  +
***
mov edx [eax+18h] +
mov [ebx+10h] edx +
jmp loc_45502C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0E0h] +
mov edi [esp+0DCh] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4551C7  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0C0h] +
mov edx [ecx+4] +
mov esi [edx+1B0h] +
mov edx [eax+44h] +
mov [eax+3Ch] edx +
mov edx [eax+48h] +
mov [eax+40h] edx +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_455A40  +
mov eax [esi+88h] +
test eax eax +
jz loc_455213  +
mov ebx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_455785  +
movzx eax byte ptr [edi+5] +
test al 2 +
jnz loc_455792  +
test al 4 +
jz loc_455980  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 6 +
mov eax [edi+1Ch] +
mov ebx [eax+38h] +
test ebx ebx +
mov [esp+30h] ebx +
jz loc_4557B1  +
mov eax [eax+30h] +
mov ebx 0FFFFFFFFh +
test eax eax +
jnz loc_4557C5  +
mov [esp] edi +
call sub_460290  +
test eax eax +
jz loc_455785  +
mov eax [esi+8Ch] +
test eax eax +
jz loc_455295  +
mov ecx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_455785  +
mov eax [edi+1Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_4551B7  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_41E7F0  +
test eax eax +
mov ebp eax +
jz loc_456207  +
mov esi [edi+7Ch] +
test esi esi +
jz loc_4561D0  +
mov eax [esi+8] +
test eax eax +
jnz loc_4552DD  +
mov esi [esi] +
test esi esi +
jz loc_4561D0  +
test byte ptr [edi] 20h +
mov edx 1Ch +
mov dword ptr [esp+3Ch] 1 +
jnz loc_455D85  +
mov [esp+34h] ebx +
mov ebx [esp+3Ch] +
mov ecx esi +
lea esi [esi+0] +
mov eax [ecx+8] +
test eax eax +
jz loc_45531D  +
mov eax [ecx+2Ch] +
add edx 1Ch +
add ebx 1 +
test eax eax +
jz loc_45531D  +
mov eax [eax] +
add edx 8 +
test eax eax +
jnz loc_455314  +
mov ecx [ecx] +
test ecx ecx +
jnz loc_455300  +
mov [esp+3Ch] ebx +
mov ebx [esp+34h] +
mov eax [esp+0C0h] +
mov [ebp+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_425850  +
test eax eax +
mov edx eax +
mov [ebp+6Ch] eax +
jz loc_4561E1  +
mov eax 1 +
mov ebp 1 +
test byte ptr [edi] 20h +
mov [esp+7Ah] ax +
mov eax 1 +
mov [esp+7Ch] ax +
mov eax 1 +
mov [esp+78h] bp +
mov [esp+7Eh] ax +
jz loc_455D9F  +
mov dword ptr [esp+84h] 28h +
mov dword ptr [esp+88h] 14h +
cmp ebx 0FFFFFFFFh +
mov [esp+34h] edx +
jz loc_455E41  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_466F30  +
mov eax [esp+0C4h] +
mov [esp] eax +
call near ptr dword_43C8B0  +
mov edx [esp+34h] +
mov [esp+68h] ebx +
mov [esp+80h] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp+34h] edx +
mov dword ptr [esp+6Ch] 0 +
mov [esp] eax +
call sub_43C550  +
mov edx [esp+34h] +
test byte ptr [edi] 20h +
lea ebx [edx+14h] +
jz loc_4554F9  +
mov ecx [esp+30h] +
lea eax [esp+5Ch] +
mov [esp+24h] eax +
mov dword ptr [esp+5Ch] 0 +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] offset off_492990 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+4] ecx +
mov [esp+8] eax +
mov [esp] edi +
call sub_42E5A0  +
test eax eax +
jz loc_455785  +
mov eax [esp+5Ch] +
and byte ptr [eax+34h] 0FEh +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
mov dword ptr [eax+40h] 0 +
mov [esp+4] eax +
mov [esp] edi +
call sub_44F290  +
test eax eax +
jz loc_455785  +
xor edx edx +
cmp esi 1 +
sbb eax eax +
mov ecx 2 +
not eax  +
and eax 1Ch +
mov [esp+88h] eax +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+7Ah] dx +
mov [esp+7Ch] cx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov dword ptr [esp+84h] 14h +
mov [esp] eax +
call sub_43C550  +
mov edx [esp+34h] +
lea ebx [edx+28h] +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 8 +
mov [esp] eax +
call sub_43C640  +
test esi esi +
jz loc_455A6F  +
nop   +
mov eax [esi+8] +
test eax eax +
jz loc_455A65  +
mov eax [esi+2Ch] +
xor edx edx +
test eax eax +
jz loc_45553D  +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_455534  +
mov [esp+34h] edx +
mov edx [esp+30h] +
lea ecx [esp+5Ch] +
mov eax [esi+4] +
mov [esp+24h] ecx +
mov dword ptr [esp+5Ch] 0 +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
movzx ecx byte ptr [ecx+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and ecx 1 +
mov [esp+20h] ecx +
mov dword ptr [esp+10h] offset off_492990 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call sub_42E5A0  +
test eax eax +
jz loc_455785  +
mov ebp [esp+5Ch] +
and byte ptr [ebp+34h] 0FEh +
or byte ptr [ebp+33h] 2 +
mov byte ptr [ebp+30h] 1 +
mov [ebp+40h] esi +
mov [esp+4] ebp +
mov [esp] edi +
call sub_44F290  +
test eax eax +
jz loc_455785  +
mov eax 1 +
mov edx [esp+34h] +
mov [esp+78h] ax +
xor eax eax +
mov [esp+7Ah] ax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_455D60  +
movzx eax byte ptr [edi] +
mov [esp+34h] edx +
and eax 20h +
cmp al 1 +
sbb eax eax +
add eax 2 +
add ax [esi+8] +
mov [esp+7Ch] ax +
lea eax [edx+1] +
mov [esp+7Eh] ax +
mov eax [esi+4] +
mov [esp] eax +
call near ptr dword_43C8B0  +
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 0 +
mov [esp+80h] eax +
mov eax [esi] +
test eax eax +
jz loc_455684  +
mov edx [eax+8] +
test edx edx +
mov edx [esp+34h] +
jnz loc_455D34  +
mov eax [eax] +
test eax eax +
jz loc_455684  +
mov dword ptr [esp+4] 1877h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esi] +
test eax eax +
jz loc_455684  +
mov eax [eax+8] +
mov edx [esp+34h] +
test eax eax +
jnz loc_455D34  +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp] eax +
call sub_43C550  +
mov ecx [edi+1Ch] +
lea edx [ebx+14h] +
mov eax [ebp+38h] +
mov [esp+34h] edx +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_466F30  +
mov ebp [esi+2Ch] +
mov dword ptr [esp+6Ch] 0 +
mov edx [esp+34h] +
test ebp ebp +
jz loc_4556DA  +
mov dword ptr [esp+6Ch] 8 +
mov eax [esp+68h] +
add ebx 1Ch +
mov [esi+30h] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_43C640  +
mov ebp [esi+2Ch] +
test ebp ebp +
jz loc_455A65  +
mov [esp+34h] esi +
mov esi ebp +
mov ebp [esp+0C0h] +
jmp loc_455768  +
mov ecx [edi+1Ch] +
mov eax [eax+30h] +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_466F30  +
cmp dword ptr [esi] 1 +
mov [esp+8] ebx +
mov [esp] ebp +
sbb eax eax +
add ebx 8 +
not eax  +
and eax 8 +
mov [esp+6Ch] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
call sub_43C640  +
mov esi [esi] +
test esi esi +
jz loc_455A61  +
mov eax [esi+4] +
test eax eax +
jnz loc_455720  +
mov dword ptr [esp+68h] 0 +
jmp loc_455739  +
***
mov dword ptr [esp] 11h +
call sub_420C50  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 7 +
jmp loc_455241  +
***
mov [esp] edi +
call sub_460290  +
test eax eax +
jnz loc_4551B7  +
xor eax eax +
jmp loc_455787  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_interp +
mov [esp] eax +
call sub_41E7F0  +
mov ebx [esp+0E0h] +
test eax eax +
mov [ebx] eax +
jz loc_455DE3  +
mov eax [esp+0C4h] +
test eax eax +
jz loc_455A57  +
mov eax [edi+1Ch] +
mov ebx [esp+0C4h] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_455785  +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Eh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
test byte ptr [edi] 4 +
jnz loc_455DBA  +
mov eax [esp+0C8h] +
test eax eax +
jz loc_4558A9  +
mov eax [edi+1Ch] +
mov ecx [esp+0C8h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jz loc_455785  +
movzx edx byte ptr [edi+4] +
mov [esp+8] eax +
mov [esp] edi +
and edx 8 +
cmp dl 1 +
sbb edx edx +
and edx 0FFFFFFF2h +
add edx 1Dh +
mov [esp+4] edx +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [esp+0CCh] +
test eax eax +
jz loc_4558FA  +
mov eax [edi+1Ch] +
mov ecx [esp+0CCh] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jz loc_455785  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFFh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov ebp [esp+0D8h] +
test ebp ebp +
jz loc_455E9F  +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jnz loc_455955  +
jmp loc_455E9F  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFDh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
add dword ptr [esp+0D8h] 4 +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jz loc_455E9F  +
mov edx [edi+1Ch] +
mov edx [edx+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] edx +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jnz loc_455920  +
xor eax eax +
jmp loc_455787  +
***
mov ebx [edi+34h] +
test ebx ebx +
jz loc_455E14  +
xor eax eax +
xor ecx ecx +
mov [esp+30h] esi +
mov ebp 1 +
mov esi ebx +
mov [esp+0DCh] edi +
mov ebx eax +
mov edi ecx +
jmp loc_4559B1  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_4559E1  +
mov eax [esi+28h] +
shr eax 5 +
test eax 11042h +
jnz loc_4559A7  +
mov dword ptr [esp+4] offset a_note_gnuStack +
mov [esp] esi +
call sub_41E710  +
test eax eax +
jz loc_455D47  +
test byte ptr [eax+14h] 10h +
mov edi eax +
cmovnz ebx ebp +
jmp loc_4559A7  +
***
mov ecx edi +
mov esi [esp+30h] +
test ecx ecx +
mov edi [esp+0DCh] +
jz loc_455E16  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
and ebx 1 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jz loc_455241  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jnz loc_455241  +
mov eax [ecx+3Ch] +
cmp eax offset off_492990 +
jz loc_455241  +
or dword ptr [eax+14h] 10h +
jmp loc_455241  +
***
mov [esp] edi +
call sub_454F90  +
test eax eax +
jnz loc_4551F1  +
xor eax eax +
jmp loc_455787  +
***
mov ebx 0FFFFFFFFh +
jmp loc_455841  +
***
mov esi [esp+34h] +
mov esi [esi] +
test esi esi +
jnz loc_455520  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFCh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [esp+3Ch] +
mov dword ptr [esp+4] 6FFFFFFDh +
mov [esp] edi +
mov [esp+8] eax +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [esp+0C0h] +
mov ebx [esp+3Ch] +
mov eax [eax+0A0h] +
mov [eax+238h] ebx +
test byte ptr [edi+4] 8 +
mov eax [edi+68h] +
jz loc_456356  +
test eax eax +
jz loc_455AF3  +
mov [esp+8] eax +
mov dword ptr [esp+4] 1Eh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [edi+6Ch] +
test eax eax +
jz loc_455B25  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
jbe loc_45646D  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFFFBh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_41E7F0  +
test eax eax +
mov esi eax +
jz loc_45648D  +
mov eax [esp+0C0h] +
mov [esp+78h] edi +
mov eax [eax+0A0h] +
mov edx [eax+238h] +
mov eax 1 +
mov dword ptr [esp+4] offset loc_44C0C0 +
mov dword ptr [esp+80h] 0 +
test edx edx +
cmovnz eax edx +
mov [esp+7Ch] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42E0B0  +
mov ebx [esp+80h] +
test ebx ebx +
jnz loc_455785  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_456484  +
xor ebp ebp +
xor edx edx +
mov eax [ecx+18h] +
add edx 10h +
add ebp 1 +
test eax eax +
jz loc_455BDA  +
lea esi [esi+0] +
mov eax [eax+14h] +
add edx 10h +
test eax eax +
jnz loc_455BD0  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_455BC0  +
mov eax [esp+0C0h] +
mov [esi+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
mov [esi+6Ch] eax +
jz loc_455785  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+244h] +
test eax eax +
jz loc_4563D7  +
mov [esp+34h] ebp +
mov esi eax +
mov eax [esi+18h] +
xor ebp ebp +
test eax eax +
jz loc_455C38  +
mov eax [eax+14h] +
add ebp 1 +
test eax eax +
jnz loc_455C2E  +
mov ecx 1 +
mov [esi] cx +
mov ecx [esi+10h] +
mov [esi+2] bp +
mov eax [ecx+0A0h] +
mov eax [eax+220h] +
test eax eax +
jz loc_4566D9  +
mov ecx [edi+1Ch] +
mov ecx [ecx+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jz loc_455785  +
mov edx [esi+1Ch] +
mov [esi+4] eax +
mov dword ptr [esi+8] 10h +
test edx edx +
jz loc_456478  +
lea edx [ebp+1] +
shl edx 4 +
mov [esi+0Ch] edx +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] esi +
mov [esp] eax +
call sub_43C6F0  +
mov ebp [esi+18h] +
test ebp ebp +
jz loc_4563C8  +
mov [esp+3Ch] esi +
mov esi [esp+0C0h] +
jmp loc_455CFD  +
cmp dword ptr [ebp+14h] 1 +
mov [ebp+8] eax +
sbb eax eax +
not eax  +
and eax 10h +
mov [ebp+0Ch] eax +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
call sub_43C7E0  +
mov ebp [ebp+14h] +
test ebp ebp +
jz loc_4563C4  +
mov eax [ebp+10h] +
mov [esp] eax +
call near ptr dword_43C8B0  +
mov ecx [ebp+10h] +
mov [ebp+0] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jnz loc_455CCE  +
xor eax eax +
jmp loc_455787  +
***
lea eax ds:1Ch[edx*8] +
mov [esp+88h] eax +
jmp loc_455684  +
***
mov eax [esp+30h] +
test byte ptr [eax+1AEh] 20h +
cmovnz ebx ebp +
jmp loc_4559A7  +
***
mov eax [esi+1Ch] +
test eax eax +
jnz loc_4555F6  +
mov eax [esi+34h] +
test eax eax +
jnz loc_4555F6  +
mov ecx 2 +
mov [esp+7Ah] cx +
jmp loc_4555F6  +
***
test esi esi +
jz loc_4561F5  +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_4552F3  +
***
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 1Ch +
jmp loc_455395  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 10h +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
or dword ptr [edi+68h] 2 +
jmp loc_45584A  +
***
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
ja loc_4557EA  +
test byte ptr [edi+6] 1 +
jnz loc_4557EA  +
mov dword ptr [esp+4] 168Dh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_4557EA  +
***
xor ebx ebx +
mov eax [edi+10h] +
test eax eax +
jle loc_455241  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jmp loc_455241  +
***
mov eax [esp+0C0h] +
mov eax [eax] +
mov [esp] eax +
call sub_4885A0  +
mov [esp] eax +
mov [esp+0C4h] eax +
call near ptr dword_43C8B0  +
mov ebx [esp+0C4h] +
mov [esp+80h] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jz loc_455785  +
mov [esp+68h] eax +
mov edx [esp+34h] +
jmp loc_4553D2  +
***
mov ecx [esp+0D0h] +
test ecx ecx +
jz loc_455EF0  +
mov eax [edi+1Ch] +
mov ecx [esp+0D0h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jz loc_455785  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFCh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov edx [esp+0D4h] +
test edx edx +
jz loc_455F41  +
mov eax [edi+1Ch] +
mov ecx [esp+0D4h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_466E50  +
cmp eax 0FFFFFFFFh +
jz loc_455785  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFBh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
movzx eax byte ptr [edi] +
mov [esp+78h] edi +
mov dword ptr [esp+7Ch] 0 +
test al 10h +
jnz loc_456397  +
and eax 3 +
cmp al 1 +
jbe loc_45638D  +
mov eax [edi+7Ch] +
test eax eax +
mov [esp+3Ch] eax +
jz loc_45612E  +
mov [esp+48h] ebx +
mov [esp+4Ch] esi +
mov [esp+0DCh] edi +
mov eax [esp+3Ch] +
mov edi [eax+0Ch] +
test edi edi +
mov ebp edi +
jnz loc_455F9E  +
jmp loc_45610D  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_45610D  +
movzx eax byte ptr [ebp+8] +
and eax 3 +
cmp al 1 +
jnz loc_455F93  +
mov eax [esp+0C0h] +
mov edx [ebp+4] +
mov eax [eax+4] +
mov [esp+44h] edx +
movzx eax byte ptr [eax+18h] +
mov [esp] edx +
mov ebx eax +
call strlen  +
mov edi [esp+3Ch] +
xor ecx ecx +
test bl bl +
setnz cl  +
mov [esp+38h] bl +
mov edi [edi+4] +
mov [esp+40h] ecx +
lea esi [eax+ecx] +
mov [esp] edi +
mov [esp+34h] edi +
call strlen  +
mov edi eax +
lea eax [esi+eax+3] +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov ebx eax +
jz loc_455785  +
mov ecx [esp+40h] +
mov edx [esp+44h] +
movzx eax byte ptr [esp+38h] +
add ecx ebx +
mov [ebx] al +
mov [esp] ecx +
mov [esp+8] esi +
add esi ebx +
mov [esp+4] edx +
call memcpy  +
lea edx [edi+1] +
mov edi [esp+34h] +
lea eax [esi+1] +
mov byte ptr [esi] 40h +
mov [esp+8] edx +
mov [esp+4] edi +
mov [esp] eax +
mov [esp+38h] edx +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_42D940  +
mov edx [esp+38h] +
test eax eax +
mov edi eax +
jz loc_456090  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4561C3  +
mov eax [esp+34h] +
add esi 2 +
mov byte ptr [esi-1] 40h +
mov [esp+8] edx +
mov [esp] esi +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_42D940  +
mov [esp] ebx +
mov edi eax +
call free  +
test edi edi +
jz loc_455F93  +
test byte ptr [edi+33h] 8 +
jnz loc_455F93  +
movzx eax byte ptr [edi+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_455F93  +
or byte ptr [ebp+8] 2 +
jmp loc_455F93  +
***
mov eax [esp+3Ch] +
mov eax [eax] +
test eax eax +
mov [esp+3Ch] eax +
jnz loc_455F81  +
mov ebx [esp+48h] +
mov esi [esp+4Ch] +
mov edi [esp+0DCh] +
lea eax [esp+60h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_450600 +
mov eax [edi+1Ch] +
mov [esp+60h] edi +
mov dword ptr [esp+64h] 0 +
mov [esp] eax +
call sub_42E0B0  +
cmp dword ptr [esp+64h] 0 +
jnz loc_455785  +
cmp byte ptr [edi+4] 0 +
js loc_456236  +
mov ecx [edi+7Ch] +
test ecx ecx +
jz loc_456236  +
mov edx 1 +
mov ebp [ecx+0Ch] +
test ebp ebp +
jnz loc_456191  +
jmp loc_456220  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_456220  +
movzx eax byte ptr [ebp+8] +
and eax 7 +
cmp al 1 +
jnz loc_456186  +
mov edx [ecx+4] +
mov eax [ebp+4] +
mov [esp+34h] ecx +
mov dword ptr [esp] offset aSUndefinedVers +
mov [esp+8] edx +
mov [esp+4] eax +
call off_492AE8  +
xor edx edx +
mov ecx [esp+34h] +
jmp loc_456186  +
***
mov [esp] ebx +
call free  +
jmp loc_4560EB  +
***
test byte ptr [edi] 20h +
jnz loc_4561F3  +
or dword ptr [ebp+14h] 8000h +
jmp loc_455AC6  +
***
mov eax [ebp+24h] +
test eax eax +
jz loc_45534E  +
xor eax eax +
jmp loc_455787  +
***
xor esi esi +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_45532B  +
***
mov dword ptr [esp+4] 17BEh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_4552C1  +
***
mov ecx [ecx] +
test ecx ecx +
jnz loc_45617A  +
test edx edx +
lea esi [esi+0] +
jz loc_455779  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_450500 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42E0B0  +
cmp dword ptr [esp+7Ch] 0 +
jnz loc_455785  +
mov eax [edi+48h] +
test eax eax +
jz loc_456298  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42D940  +
test eax eax +
jz loc_456298  +
test byte ptr [eax+33h] 3 +
jnz loc_456722  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_4562D4  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42D940  +
test eax eax +
jz loc_4562D4  +
test byte ptr [eax+33h] 3 +
jnz loc_4566E8  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_preinit_array +
mov [esp] eax +
call sub_41E710  +
test eax eax +
jz loc_4564E6  +
test byte ptr [eax+18h] 4 +
jz loc_4564E6  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
jbe loc_4564A6  +
mov ebx [edi+34h] +
jmp loc_456316  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_45670F  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_456310  +
mov eax [ebx+64h] +
test eax eax +
jnz loc_456337  +
jmp loc_456310  +
***
mov eax [eax+0Ch] +
test eax eax +
jz loc_456310  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 10h +
jnz loc_456330  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aB_preinit_arra +
call off_492AE8  +
jmp loc_456310  +
***
test al 10h +
jnz loc_455AD7  +
test al 8 +
jz loc_455AF3  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jnz loc_455AF3  +
xor eax eax +
jmp loc_455787  +
***
test byte ptr [edi+5] 1 +
jz loc_455F63  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_450930 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42E0B0  +
cmp dword ptr [esp+7Ch] 0 +
jz loc_455F63  +
xor eax eax +
jmp loc_455787  +
***
mov esi [esp+3Ch] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_455C25  +
mov ebp [esp+34h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFEh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 6FFFFFFFh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov [eax+23Ch] ebp +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+23Ch] 0 +
jnz loc_456749  +
cmp dword ptr [eax+238h] 0 +
jnz loc_456749  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version +
mov [esp] eax +
call sub_41E7F0  +
or dword ptr [eax+14h] 8000h +
jmp loc_4551B7  +
***
and eax 0FFFFFF97h +
mov [edi+6Ch] eax +
jmp loc_455B09  +
***
mov dword ptr [esi+0Ch] 0 +
jmp loc_455C9C  +
***
or dword ptr [esi+14h] 8000h +
jmp loc_456426  +
***
mov dword ptr [esp+4] 18C5h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_455B43  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 21h +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_init_array +
mov [esp] eax +
call sub_41E710  +
test eax eax +
jz loc_45650B  +
test byte ptr [eax+18h] 4 +
jnz loc_45664B  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_fini_array +
mov [esp] eax +
call sub_41E710  +
test eax eax +
jz loc_456530  +
test byte ptr [eax+18h] 4 +
jnz loc_456692  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_41E7F0  +
test eax eax +
jz loc_455263  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_455263  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_467110  +
mov ebp eax +
movzx eax byte ptr [edi+3] +
test al 20h +
jnz loc_456622  +
test al 40h +
jz loc_456599  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFEF5h +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 5 +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6 +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0Ah +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov [esp+8] eax +
call sub_4517B0  +
test eax eax +
jnz loc_455263  +
xor eax eax +
jmp loc_455787  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
movzx eax byte ptr [edi+3] +
jmp loc_456575  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 19h +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Bh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jnz loc_45650B  +
xor eax eax +
jmp loc_455787  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ah +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jz loc_455785  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ch +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jnz loc_456530  +
xor eax eax +
jmp loc_455787  +
***
mov eax [ecx] +
mov [esp] eax +
call sub_4885A0  +
jmp loc_455C5B  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Dh +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jnz loc_4562D4  +
xor eax eax +
jmp loc_455787  +
***
mov dword ptr [esp] 0Fh +
call sub_420C50  +
xor eax eax +
jmp loc_455787  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_4517B0  +
test eax eax +
jnz loc_456298  +
xor eax eax +
jmp loc_455787  +
***
mov ecx [esp+38h] +
mov edx edi +
mov eax [esp+0C0h] +
call sub_44AEE0  +
test eax eax +
jz loc_45644D  +
jmp loc_4551B7  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_45678E  +
jmp loc_4567B5  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4567B5  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_456787  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_450DD0  +
test eax eax +
jnz loc_456787  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_4567DE  +
jmp loc_456852  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_456805  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 1 +
jnz loc_4567D7  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_450DD0  +
test eax eax +
jnz loc_4567D7  +
mov eax [edi+1Ch] +
mov [eax+6Ch] ebx +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_456817  +
jmp loc_456852  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_456852  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 9 +
jnz loc_456810  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_450DD0  +
test eax eax +
jnz loc_456810  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
mov edx [eax+68h] +
test edx edx +
jnz loc_45685C  +
mov edx [eax+6Ch] +
mov [eax+68h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [edi+1Ch] +
mov edx [eax+68h] +
test edx edx +
jz loc_456845  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C4h] +
mov esi [esp+0C0h] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4568A1  +
mov eax 1 +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
mov edx [esp+0C4h] +
mov ebx [eax+1B0h] +
mov eax [ebx+90h] +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+30h] +
test edi edi +
jz loc_456891  +
mov eax [eax+38h] +
lea ecx [esp+3Ch] +
mov edx [esp+0C4h] +
mov edi eax +
mov [esp+14h] eax +
mov eax esi +
call sub_44AEE0  +
mov [esp] edi +
mov dword ptr [esp+4] offset a_gnu_version +
mov ebp eax +
call sub_41E7F0  +
test eax eax +
mov edi eax +
jz loc_457131  +
test ebp ebp +
jz loc_456957  +
test byte ptr [edi+15h] 80h +
jnz loc_456957  +
lea eax [ebp+ebp+0] +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_425930  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_456D34  +
mov eax [esp+0C4h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFF0h +
mov [esp] eax +
call sub_4517B0  +
test eax eax +
jz loc_456D34  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+0F8h] +
test edi edi +
jz loc_45714A  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+5] +
imul eax ebp +
test ebp ebp +
mov [edi+24h] eax +
jnz loc_456F0F  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov dword ptr [eax+60h] 0 +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
test al 20h +
jnz loc_456CDD  +
test al 40h +
jz loc_456BA0  +
xor eax eax +
mov ecx 12h +
lea edi [esp+58h] +
mov [esp+1Ch] edi +
stos   +
lea eax ds:0[ebp*8] +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov [esp+68h] eax +
jz loc_456D34  +
lea eax [eax+ebp*4] +
mov edi [esp+1Ch] +
mov [esp+6Ch] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset sub_44D310 +
mov dword ptr [esp+80h] 0FFFFFFFFh +
mov [esp+8] edi +
mov eax [eax+1Ch] +
mov [esp+58h] esi +
mov [esp+5Ch] ebx +
mov [esp] eax +
call sub_42E0B0  +
mov edx [esp+9Ch] +
test edx edx +
jnz loc_456F63  +
mov ecx [esp+60h] +
mov edx [esp+68h] +
mov eax [esp+0C4h] +
mov dword ptr [esp] 1 +
call sub_44AC70  +
test eax eax +
mov [esp+18h] eax +
jz loc_456F63  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_gnu_hash +
mov [esp] eax +
call sub_41E7F0  +
test eax eax +
mov [esp+24h] eax +
jz loc_4575B3  +
mov edi [esp+60h] +
test edi edi +
jnz loc_457163  +
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_456A9B  +
mov dword ptr [esp+4] 1A12h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
mov eax [ebx+174h] +
mov ebp [esp+24h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
add eax 14h +
mov [ebp+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_425930  +
test eax eax +
mov edi eax +
jz loc_456D34  +
mov ecx ebp +
mov [ecx+6Ch] eax +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
cmp al 8 +
jz loc_45758F  +
cmp al 10h +
jz loc_457598  +
cmp al 20h +
jz loc_4576B1  +
cmp al 40h +
jnz loc_45765C  +
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov dword ptr [esp] 0 +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esi+4] +
mov edx [eax+30h] +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
mov dword ptr [esp] 0 +
shr al 3 +
movzx eax al +
lea eax [edi+eax+10h] +
mov [esp+4] eax +
call edx  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_41E7F0  +
test eax eax +
mov [esp+24h] eax +
jz loc_457400  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edx [eax+50h] +
mov [esp+20h] eax +
mov eax [eax+38h] +
mov edi edx +
mov [esp] edx +
mov ebx eax +
mov [esp+14h] edx +
mov [esp+18h] eax +
call sub_467290  +
mov [esp] edi +
call sub_467110  +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov edi [eax+1B0h] +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_41E7F0  +
test eax eax +
mov ebp eax +
jz loc_4573E7  +
mov ebx [ebp+6Ch] +
mov eax [ebp+24h] +
add eax ebx +
cmp ebx eax +
jnb loc_456D7D  +
lea eax [esp+58h] +
mov ecx [edi+174h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx eax +
jmp loc_456C85  +
cmp eax 0Ah +
jnz loc_456D40  +
mov eax [esp+1Ch] +
mov [esp+5Ch] eax +
mov eax [edi+174h] +
mov edx [esp+18h] +
mov eax [eax+34h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
mov ecx [edi+174h] +
movzx eax byte ptr [ecx+6] +
add esi eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp esi eax +
jnb loc_456D76  +
mov edx [esp+18h] +
mov eax [ecx+30h] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
mov eax [esp+58h] +
cmp eax 1Dh +
jz loc_456CC0  +
jbe loc_456C40  +
cmp eax 7FFFFFFDh +
jz loc_456CC0  +
nop   +
lea esi [esi+0] +
ja loc_456D55  +
sub eax 6FFFFEFBh +
cmp eax 1 +
ja loc_456C6B  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_467120  +
mov [esp+5Ch] eax +
jmp loc_456C51  +
***
lea eax ds:0[ebp*4] +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_456D34  +
mov [esp+58h] eax +
lea eax [esp+58h] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset dword_44B000 +
mov dword ptr [esp+5Ch] 0 +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_42E0B0  +
mov ecx [esp+5Ch] +
test ecx ecx +
jz loc_457024  +
mov [esp] edi +
call free  +
xor eax eax +
jmp loc_456896  +
***
ja loc_456D65  +
cmp eax 1 +
jnz loc_456C6B  +
nop   +
lea esi [esi+0] +
jmp loc_456CC0  +
***
cmp eax 7FFFFFFFh +
jnz loc_456C6B  +
jmp loc_456CC0  +
***
sub eax 0Eh +
cmp eax 1 +
ja loc_456C6B  +
jmp loc_456CC0  +
***
mov esi [esp+0C0h] +
mov eax [esp+20h] +
mov edi [esp+14h] +
mov ebx [eax+0C0h] +
test ebx ebx +
jz loc_456DA8  +
nop   +
mov eax [ebx+18h] +
mov [esp] edi +
mov [esp+4] eax +
call sub_467120  +
mov [ebx+18h] eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_456D90  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset sub_44D420 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_42E0B0  +
mov eax [esi+0A0h] +
mov ebx [eax+238h] +
test ebx ebx +
jnz loc_456F76  +
mov edx [eax+244h] +
test edx edx +
jz loc_456EB3  +
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_41E7F0  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
lea esi [esi+0] +
mov ebp [esp+1Ch] +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] ebp +
call sub_43C680  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_467120  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+5Ch] eax +
call sub_43C6F0  +
cmp word ptr [esp+5Ah] 0 +
jz loc_456EA7  +
xor ebp ebp +
lea esi [esi+0] +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_43C770  +
mov eax [esp+48h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_467120  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+48h] eax +
call sub_43C7E0  +
movzx eax word ptr [esp+5Ah] +
cmp ebp eax +
jb loc_456E60  +
mov eax [esp+64h] +
test eax eax +
jnz loc_456E10  +
mov eax [esp+0C4h] +
xor ebx ebx +
mov eax [eax+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_467110  +
mov ecx [esp+24h] +
mov esi [esp+0C4h] +
mov [ecx+24h] eax +
jmp loc_456EEC  +
add ebx 1 +
cmp [esi+64h] ebx +
jb loc_456891  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_4517B0  +
test eax eax +
jnz loc_456EE0  +
xor eax eax +
jmp loc_456896  +
***
mov [esp+4] eax +
mov [esp] esi +
call sub_425850  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_456D34  +
mov edx [ebx+174h] +
mov ecx [esp+3Ch] +
movzx edx byte ptr [edx+5] +
add ecx 1 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
imul edx ecx +
mov [esp+3Ch] ecx +
mov [esp+8] edx +
call memset  +
jmp loc_456987  +
***
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_456896  +
***
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_41E7F0  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
jmp loc_456FA8  +
mov ecx [esp+68h] +
test ecx ecx +
jz loc_457019  +
mov eax [esp+1Ch] +
mov [esp+4] ebx +
add ebx 14h +
mov [esp] esi +
mov [esp+8] eax +
call sub_43C4C0  +
cmp dword ptr [esp+64h] 14h +
jnz loc_456FA0  +
cmp word ptr [esp+5Eh] 0 +
jz loc_456FA0  +
xor ebp ebp +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_43C600  +
mov eax [esp+40h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_467120  +
mov [esp+8] ebx +
add ebx 8 +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+40h] eax +
call sub_43C640  +
movzx eax word ptr [esp+5Eh] +
cmp ebp eax +
jb loc_456FD0  +
jmp loc_456FA0  +
***
mov eax [esi+0A0h] +
jmp loc_456DD8  +
***
mov ecx [esp+58h] +
mov edx edi +
mov eax [esp+0C4h] +
mov dword ptr [esp] 0 +
sub ecx edi +
sar ecx 2 +
call sub_44AC70  +
mov [esp] edi +
mov [esp+18h] eax +
call free  +
mov edx [esp+18h] +
test edx edx +
jz loc_456D34  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [eax+60h] edx +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_hash +
mov [esp] eax +
call sub_41E7F0  +
mov edx [esp+18h] +
test eax eax +
mov edi eax +
jz loc_457694  +
mov eax [edi+8Ch] +
mov [esp+1Ch] edx +
mov eax [eax+28h] +
mov ecx eax +
mov [esp+18h] eax +
lea eax [ebp+edx+2] +
imul eax ecx +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_425930  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_456D34  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
shl ecx 3 +
cmp ecx 8 +
jz loc_457541  +
cmp ecx 10h +
jz loc_4575F6  +
cmp ecx 20h +
jz loc_4575CC  +
cmp ecx 40h +
jnz loc_45762A  +
mov ecx [esi+4] +
mov ecx [ecx+24h] +
mov [esp+8] eax +
mov [esp] edx +
mov dword ptr [esp+4] 0 +
call ecx  +
mov eax [esi+4] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
jmp loc_4569AB  +
***
mov dword ptr [esp+4] 1989h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_456908  +
***
mov dword ptr [esp+4] 199Dh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_45696F  +
***
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_45760D  +
mov eax edi +
shr eax 1 +
jz loc_457646  +
mov edx 1 +
jmp loc_457184  +
mov edx ecx +
shr eax 1 +
lea ecx [edx+1] +
jnz loc_457182  +
cmp ecx 2 +
jbe loc_457646  +
lea eax [edx-1] +
bt edi eax +
jnb loc_457554  +
mov eax [ebx+174h] +
add edx 4 +
cmp byte ptr [eax+0Ah] 40h +
jz loc_457572  +
mov dword ptr [esp+90h] 5 +
mov eax 1Fh +
mov dword ptr [esp+20h] 5 +
mov [esp+98h] eax +
mov eax 1 +
mov ecx edx +
mov edi eax +
shl edi cl +
mov ecx edx +
sub ecx [esp+20h] +
mov [esp+64h] edi +
mov [esp+94h] edx +
shl eax cl +
mov [esp+20h] eax +
lea edi ds:0[eax*4] +
mov eax [esp+18h] +
lea eax [edi+eax*8] +
mov [esp] eax +
call sub_42B400  +
test eax eax +
mov [esp+78h] eax +
jz loc_456F63  +
mov edx [esp+18h] +
lea ecx [eax+edi] +
mov [esp+74h] ecx +
mov [esp+2Ch] ecx +
mov [esp+8] edi +
shl edx 2 +
mov [esp+28h] edx +
add edx ecx +
mov ecx ebp +
sub ecx [esp+60h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
mov [esp+70h] edx +
mov [esp+88h] ecx +
call memset  +
mov edx [esp+28h] +
mov ecx [esp+2Ch] +
mov dword ptr [esp+4] 0 +
mov [esp+8] edx +
mov [esp] ecx +
call memset  +
mov eax [esp+60h] +
mov edi [esp+74h] +
test eax eax +
jz loc_4572A1  +
mov eax [esp+68h] +
xor ecx ecx +
mov [esp+2Ch] ebx +
mov ebx eax +
mov eax [ebx+ecx*4] +
xor edx edx +
add ecx 1 +
div  dword ptr [esp+18h] +
add dword ptr [edi+edx*4] 1 +
cmp [esp+60h] ecx +
ja loc_457287  +
mov ebx [esp+2Ch] +
mov edx [esp+88h] +
xor eax eax +
mov ecx [esp+70h] +
cmp dword ptr [edi+eax*4] 0 +
jz loc_4572BA  +
mov [ecx+eax*4] edx +
add edx [edi+eax*4] +
add eax 1 +
cmp eax [esp+18h] +
jnz loc_4572AE  +
cmp edx ebp +
jz loc_4572DB  +
mov dword ptr [esp+4] 1A5Bh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esp+80h] +
mov ecx [esp+18h] +
mov [esp+8Ch] eax +
mov eax [esp+60h] +
mov [esp+84h] ecx +
add eax ecx +
mov ecx [esp+24h] +
mov edx eax +
mov eax [esp+64h] +
shr eax 3 +
lea eax [eax+edx*4+10h] +
mov [ecx+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_425930  +
test eax eax +
mov edi eax +
jz loc_456F57  +
mov eax [esp+24h] +
mov ecx [esp+18h] +
mov [eax+6Ch] edi +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp] ecx +
mov [esp+4] edi +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+88h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov ecx [esp+20h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+94h] +
mov [esp] edx +
call eax  +
mov eax [esp+64h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx [esp+0C0h] +
shr eax 3 +
lea eax [edi+eax+10h] +
xor edi edi +
mov [esp+2Ch] eax +
mov ebp eax +
jmp loc_4573C4  +
mov [esp+4] ebp +
mov dword ptr [esp] 0 +
call eax  +
add ebp 4 +
add edi 1 +
cmp edi [esp+18h] +
jz loc_457419  +
mov eax [esp+74h] +
mov eax [eax+edi*4] +
test eax eax +
mov eax [ebx+4] +
mov eax [eax+30h] +
jz loc_4573AB  +
mov ecx [esp+70h] +
mov ecx [ecx+edi*4] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
jmp loc_4573B8  +
***
mov dword ptr [esp+4] 0CE2h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_456C17  +
***
mov dword ptr [esp+4] 1A8Dh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_456BC0  +
***
mov eax [esp+2Ch] +
add eax [esp+28h] +
mov dword ptr [esp+4] offset sub_44BA30 +
mov [esp+0C0h] ebx +
mov ebx esi +
mov esi [esp+0C0h] +
mov [esp+7Ch] eax +
mov eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_42E0B0  +
mov eax [esp+24h] +
mov edi [esp+20h] +
mov ebp [eax+6Ch] +
add ebp 10h +
test edi edi +
jz loc_457524  +
mov eax [ebx+174h] +
xor ecx ecx +
xor edi edi +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx ecx +
mov ecx [esp+0C0h] +
movzx eax byte ptr [eax+0Ah] +
jmp loc_4574E6  +
cmp al 10h +
jz loc_4574F6  +
cmp al 20h +
jz loc_457516  +
cmp al 40h +
jnz loc_457678  +
mov eax [ecx+4] +
mov edx [esp+78h] +
mov [esp+18h] ecx +
mov eax [eax+24h] +
mov [esp+8] ebp +
mov ecx [edx+edi] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
call eax  +
mov ecx [esp+18h] +
mov eax [esi+174h] +
add ebx 1 +
add edi 4 +
movzx eax byte ptr [eax+0Ah] +
mov edx eax +
shr dl 3 +
movzx edx dl +
add ebp edx +
cmp [esp+20h] ebx +
jz loc_457522  +
cmp al 8 +
jnz loc_457490  +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [ebp+0] al +
jmp loc_4574C6  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+3Ch] +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [esp+4] ebp +
mov [esp] eax +
call edx  +
mov ecx [esp+18h] +
jmp loc_4574C6  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+30h] +
jmp loc_457500  +
***
mov esi ecx +
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
jmp loc_456BA0  +
***
mov [eax] dl +
mov ecx [esp+18h] +
mov edx ebp +
mov eax [edi+6Ch] +
mov [eax+ecx] dl +
jmp loc_457121  +
***
mov eax [ebx+174h] +
add edx 3 +
cmp byte ptr [eax+0Ah] 40h +
jnz loc_4571B3  +
cmp edx 5 +
mov eax 6 +
cmovz edx eax +
mov dword ptr [esp+90h] 6 +
mov eax 3Fh +
mov dword ptr [esp+20h] 6 +
jmp loc_4571CB  +
***
mov byte ptr [edi+10h] 0 +
jmp loc_456B79  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+3Ch] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_456B79  +
***
mov dword ptr [esp+4] 1A0Dh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_456A71  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+30h] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
jmp loc_457121  +
***
mov ecx [esi+4] +
mov ecx [ecx+3Ch] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+3Ch] +
jmp loc_4575E1  +
***
mov dword ptr [esp+4] 1A2Ah +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
mov edi [esp+60h] +
jmp loc_457171  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 19DEh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BD0  +
mov eax [ebx+174h] +
cmp byte ptr [eax+0Ah] 40h +
jz loc_4576CC  +
mov edx 5 +
jmp loc_4571B3  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A22h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BD0  +
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A83h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BD0  +
mov dword ptr [esp+4] 19D7h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
mov edx [esp+18h] +
jmp loc_457089  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_456B79  +
***
mov edx 6 +
jmp loc_457572  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_457704  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_457722  +
jmp loc_4577C0  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_4577C0  +
test byte ptr [ebx+29h] 8 +
jnz loc_457714  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_457714  +
mov eax [ebp+4] +
mov ecx [ebx+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_457714  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_45777F  +
jmp loc_457714  +
***
mov eax [edi+88h] +
test eax eax +
jz loc_457771  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or ah 1 +
mov [esi+18h] ax +
mov eax [esp+34h] +
mov edx [eax+1Ch] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_457714  +
test byte ptr [esi+16h] 80h +
jz loc_457778  +
cmp dword ptr [esi+3Ch] offset off_492990 +
jz loc_457778  +
mov edi [esi+8Ch] +
add edx 7Ch +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebp +
lea eax [edi+88h] +
mov [esp+0Ch] eax +
call sub_468DB0  +
test eax eax +
jnz loc_457758  +
jmp loc_4576F8  +
***
mov eax [edx+7Ch] +
mov ebx 1 +
test eax eax +
jz loc_4576FA  +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp] ebp +
mov dword ptr [esp+0Ch] offset sub_44AC30 +
mov [esp+4] eax +
call sub_469030  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
movzx edx byte ptr [ebx+34h] +
mov eax edx +
and eax 6 +
cmp al 6 +
jz loc_457883  +
movzx eax byte ptr [ebx+33h] +
mov ecx eax +
and eax 0FFFFFFFBh +
or cl [esi+33h] +
and ecx 4 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFFEh +
or cl [esi+33h] +
and ecx 1 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFEFh +
or cl [esi+33h] +
and ecx 10h +
or eax ecx +
mov ecx edx +
mov [ebx+33h] al +
and edx 0FFFFFFBFh +
or cl [esi+34h] +
and ecx 40h +
or edx ecx +
mov [ebx+34h] dl +
mov edx eax +
and eax 7Fh +
or dl [esi+33h] +
and edx 0FFFFFF80h +
or eax edx +
mov [ebx+33h] al +
movzx eax byte ptr [ebx+35h] +
mov edx eax +
and eax 0FFFFFFFDh +
or dl [esi+35h] +
and edx 2 +
or eax edx +
mov [ebx+35h] al +
cmp byte ptr [esi+0Ch] 6 +
jz loc_457890  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+20h] +
mov ecx [esi+24h] +
mov eax [eax+1Ch] +
mov edx [eax+3Ch] +
cmp ecx edx +
jle loc_4578B0  +
mov edi [ebx+24h] +
test edi edi +
js loc_457920  +
add ecx edi +
mov [ebx+24h] ecx +
mov [esi+24h] edx +
mov ecx [esi+28h] +
mov edx [eax+40h] +
cmp ecx edx +
jle loc_4578C9  +
mov edi [ebx+28h] +
test edi edi +
js loc_457910  +
add ecx edi +
mov [ebx+28h] ecx +
mov [esi+28h] edx +
mov edx [esi+20h] +
cmp edx 0FFFFFFFFh +
jz loc_457889  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4578EC  +
mov edx [ebx+38h] +
mov eax [eax+50h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_466FA0  +
mov edx [esi+20h] +
mov eax [esi+38h] +
mov [ebx+20h] edx +
mov [ebx+38h] eax +
mov dword ptr [esi+20h] 0FFFFFFFFh +
mov dword ptr [esi+38h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [ebx+28h] 0 +
xor edi edi +
mov ecx [esi+28h] +
jmp loc_4578C1  +
***
mov dword ptr [ebx+24h] 0 +
xor edi edi +
mov ecx [esi+24h] +
jmp loc_4578A8  +
***
jmp loc_457940  +
push ebx  +
mov eax [esp+0Ch] +
mov edx [esp+8] +
mov ecx [esp+10h] +
cmp byte ptr [eax+30h] 0Ah +
jz loc_457960  +
mov ebx [edx+1Ch] +
mov ebx [ebx+48h] +
and byte ptr [eax+33h] 7Fh +
mov [eax+28h] ebx +
test ecx ecx +
jz loc_457990  +
or byte ptr [eax+34h] 8 +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_457990  +
mov dword ptr [eax+20h] 0FFFFFFFFh +
mov ecx [eax+38h] +
mov eax [edx+1Ch] +
mov eax [eax+50h] +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
pop ebx  +
jmp sub_466FA0  +
***
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1AEh] +
mov dword ptr [ebx+44h] 0FFFFFFFFh +
mov dword ptr [ebx+48h] 0FFFFFFFFh +
mov dword ptr [ebx+4Ch] 1 +
shr al 1 +
and eax 1 +
sub eax 1 +
mov [ebx+3Ch] eax +
mov [ebx+40h] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] eax +
call sub_42D8C0  +
mov edx [esp+18h+arg_10] +
mov dword ptr [ebx+28h] 1 +
mov [ebx+2Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 0FCh +
call sub_42B590  +
test eax eax +
mov ebx eax +
jz loc_457A60  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 23h +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_44B0E0 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4579A0  +
test eax eax +
jz loc_457A64  +
mov dword ptr [ebx+24h] offset sub_44B1B0 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_457A5B  +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_457A5B  +
***
mov edx [esp+arg_0] +
xor eax eax +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_457B67  +
movzx ecx byte ptr [edx+28h] +
and ecx 7 +
cmp cl 1 +
jnz locret_457B67  +
mov eax [edx+0A0h] +
mov eax [eax+220h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebx [esp+50h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [eax] 0 +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_457BA3  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_457B96  +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_41E710  +
test eax eax +
mov esi eax +
jz loc_457B96  +
mov eax [eax+24h] +
test eax eax +
jz loc_457B96  +
lea eax [esp+24h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_41F070  +
test eax eax +
jnz loc_457BFF  +
mov edx [esp+24h] +
xor eax eax +
test edx edx +
jz loc_457B9B  +
mov [esp] edx +
mov [esp+14h] eax +
call free  +
mov eax [esp+14h] +
jmp loc_457B9B  +
***
mov [esp+4] esi +
mov [esp] ebx +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
jz loc_457BE3  +
mov edx [ebx+0A0h] +
mov edi [esp+24h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
mov ebp [eax+30h] +
mov eax edi +
mov [esp+14h] edx +
mov edx [esi+24h] +
add edx edi +
cmp edi edx +
jnb loc_457CD4  +
mov esi edi +
mov edi edx +
jmp loc_457C60  +
add esi [esp+14h] +
cmp esi edi +
jnb loc_457CD0  +
lea eax [esp+28h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call ebp  +
mov eax [esp+28h] +
test eax eax +
jz loc_457CD0  +
cmp eax 1 +
jnz loc_457C58  +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call sub_43CA60  +
test eax eax +
mov [esp+18h] eax +
jz loc_457BE3  +
mov dword ptr [esp+4] 0Ch +
mov [esp] ebx +
call sub_425850  +
test eax eax +
jz loc_457BE3  +
mov ecx [esp+18h] +
mov edx [esp+54h] +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jmp loc_457C58  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_457B96  +
***
jmp loc_457CF0  +
mov edx [esp+8] +
test edx edx +
jz loc_457D14  +
mov eax [esp+10h] +
test eax eax +
jz loc_457D14  +
mov eax [esp+4] +
mov ecx [eax+4] +
mov eax 1 +
cmp dword ptr [ecx+4] 5 +
jz loc_457D20  +
retn   +
***
mov eax 1 +
retn   +
***
mov ecx [esp+0Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_457D12  +
mov eax [esp+10h] +
mov edx [edx+8Ch] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp [edx+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+5Ch] +
mov eax [eax+8] +
mov esi eax +
mov edx eax +
shr esi 6 +
mov edi eax +
mov [esp+18h] esi +
mov ebx eax +
mov esi eax +
and dword ptr [esp+18h] 3Fh +
and edx 3Fh +
shr edi 12h +
mov [esp+28h] eax +
mov eax [esp+18h] +
shr ebx 16h +
and edi 0Fh +
and ebx 0Fh +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea eax [eax+eax-2] +
mov [esp+20h] eax +
or dword ptr [esp+20h] 1 +
and esi 8000000h +
jz loc_457F65  +
lea eax [edx+1] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
mov eax [esp+5Ch] +
mov esi [esp+58h] +
add esi [eax] +
cmp edi ebx +
jb loc_457DD7  +
lea eax [ebx-1] +
cmp eax 3 +
jbe loc_457F81  +
mov dword ptr [esp+4] 1F35h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
cmp ebx 4 +
lea ecx ds:0[ebx*8] +
jz loc_457FA8  +
xor ebp ebp +
test edi edi +
jz loc_457E7A  +
mov edx edi +
xor eax eax +
sub edx ebx +
mov [esp+2Ch] edi +
cmp ebx 2 +
mov edi edx +
jz loc_457E40  +
cmp ebx 4 +
jz loc_457F43  +
cmp ebx 1 +
jz loc_457F35  +
mov dword ptr [esp+8] offset aGet_value +
mov dword ptr [esp+4] 1F56h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BD0  +
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
mov edx edi +
add esi ebx +
sub edx ebx +
test edi edi +
jnz loc_457E0B  +
mov ebp [esp+20h] +
movzx ecx byte ptr [esp+1Ch] +
mov edi [esp+2Ch] +
shl ebp cl +
not ebp  +
and ebp eax +
mov ecx [esp+28h] +
xor eax eax +
test ecx 20000000h +
jnz loc_457EBE  +
mov eax ecx +
mov ecx [esp+60h] +
shl eax 3 +
sar eax 1Fh +
lea edx ds:0[edi*8] +
add eax 3 +
mov [esp+10h] ecx +
mov ecx [esp+18h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
mov [esp+4] ecx +
call loc_42C150  +
movzx ecx byte ptr [esp+1Ch] +
mov esi [esp+20h] +
and esi [esp+60h] +
mov edx [esp+58h] +
shl esi cl +
mov ecx edi +
or esi ebp +
mov ebp [esp+5Ch] +
sub ecx ebx +
add edx [ebp+0] +
mov ebp ebx +
neg ebp  +
mov [esp+18h] ebp +
mov ebp ecx +
add edx ecx +
test edi edi +
jz loc_457FDB  +
cmp ebx 2 +
mov edi edx +
mov [esp+20h] eax +
mov edx esi +
mov esi [esp+50h] +
jz loc_457FFF  +
cmp ebx 4 +
jz loc_458020  +
cmp ebx 1 +
jz loc_457FE3  +
mov dword ptr [esp+8] offset aPut_value +
mov dword ptr [esp+4] 1F20h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BD0  +
shl eax cl +
mov edx eax +
movzx eax byte ptr [esi] +
or eax edx +
jmp loc_457E5D  +
***
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
jmp loc_457E5D  +
***
lea eax ds:0[edi*8] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
sub [esp+1Ch] edx +
jmp loc_457DBD  +
***
xor edx edx +
mov eax edi +
div  ebx +
test edx edx +
jnz loc_457DD7  +
mov eax [esp+50h] +
test eax eax +
jz loc_457DD7  +
test esi esi +
jnz loc_457DEB  +
jmp loc_457DD7  +
***
cmp edi 4 +
nop   +
lea esi [esi+0] +
jz loc_457FD0  +
mov dword ptr [esp+4] 1F39h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
xor ecx ecx +
jmp loc_457DFB  +
***
xor ecx ecx +
jmp loc_457E01  +
***
mov eax [esp+20h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [edi] dl +
shr edx 8 +
mov ecx ebp +
add edi [esp+18h] +
sub ecx ebx +
test ebp ebp +
jz loc_457FD7  +
cmp ebx 2 +
mov ebp ecx +
jnz loc_457F07  +
mov ecx [esi+4] +
mov [esp+1Ch] edx +
mov ecx [ecx+3Ch] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
mov edx [esp+1Ch] +
shr edx 10h +
jmp loc_457FE8  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
xor edx edx +
jmp loc_457FE8  +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [edx+14h] +
and eax 2000h +
jz loc_458060  +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [edx] +
mov esi offset a_eh_frame_0 +
mov ecx 0Ah +
mov edi edx +
cmps   +
jz loc_458056  +
mov edi edx +
mov esi offset a_gcc_except_ta +
mov ecx 12h +
mov edx 3 +
cmps   +
pop ebx  +
pop esi  +
pop edi  +
cmovnz eax edx +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov esi [esp+0Ch+arg_0] +
mov edi [esp+0Ch+arg_4] +
mov ebx [esi+7Ch] +
test ebx ebx +
jz loc_4580C3  +
test byte ptr [ebx+17h] 2 +
jnz loc_4580F0  +
mov edx [esi+28h] +
test edx edx +
jz loc_4580E0  +
mov eax [ebx+28h] +
test eax eax +
jz loc_4580D0  +
cmp edx eax +
jz loc_4580C0  +
xor ebx ebx +
mov [esi+7Ch] ebx +
add esp 0Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
cmp edx eax +
jnz loc_4580BE  +
jmp loc_4580C0  +
mov eax [ebx+28h] +
mov edx [esi+24h] +
test eax eax +
jnz loc_4580BA  +
jmp loc_4580D0  +
mov eax [ebx+8Ch] +
mov ebp [eax+7Ch] +
test ebp ebp +
jz loc_4580BE  +
mov ebx ebp +
jmp loc_458112  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp ebp ebx +
jz loc_4580BE  +
test ebx ebx +
jz loc_4580BE  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_44B1F0  +
test eax eax +
jz loc_458101  +
test ebx ebx +
jnz loc_4580AC  +
jmp loc_4580C0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov eax [eax+4] +
test byte ptr [edx+29h] 8 +
mov [esp+0E8h+var_B0] edx +
mov [esp+0E8h+var_BC] eax +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+94h] +
mov [esp+0E8h+var_84] eax +
jnz loc_45866B  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
lea edi [eax+48h] +
mov [esp+0E8h+var_AC] eax +
mov [esp+0E8h+var_88] edi +
test ecx ecx +
jnz loc_458680  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+68h] +
mov [esp+0E8h+var_A8] eax +
mov [esp+0E8h+var_94] eax +
mov eax [esp+0E8h+var_AC] +
mov edx [esp+0E8h+var_A8] +
mov eax [eax+78h] +
test edx edx +
mov [esp+0E8h+var_A0] eax +
jnz loc_458CB9  +
mov eax [esp+0E8h+var_A8] +
mov ebx [esp+0E8h+var_A0] +
mov esi [ebp+2Ch] +
mov edi [ebp+30h] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+0E8h+var_C0] eax +
jnb loc_4584D5  +
mov [esp+0E8h+var_C4] ebp +
mov ebx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_9C] 0 +
mov ebp [esp+0E8h+var_B0] +
jmp loc_45820B  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_458221  +
mov dword ptr [edi] 0 +
add ebx 14h +
add esi 4 +
add edi 4 +
cmp [esp+0E8h+var_C0] ebx +
jbe loc_4584D1  +
mov dword ptr [esi] 0FFFFFFFFh +
mov eax [ebp+0A0h] +
mov eax [eax+928h] +
test eax eax +
jnz loc_4581E7  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_4586B0  +
mov [esp+0E8h+var_3C] offset off_4928E8 +
mov edx offset off_4928E8 +
mov ecx [esp+0E8h+var_C4] +
mov [edi] edx +
cmp [ecx+30h] edi +
jz loc_4581F8  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_4581F8  +
mov eax [ecx] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 18h +
cmp dl 18h +
jz loc_4581F8  +
and eax 60h +
cmp al 60h +
jz loc_4581F8  +
mov eax [ebx+10h] +
sub eax 1 +
cmp eax 0FFFFFEFEh +
ja loc_458299  +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4587A0  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_4581F8  +
mov eax [esp+0E8h+var_AC] +
mov edx [ebx+8] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] ebp +
mov [esp+0E8h+var_E4] eax +
call sub_43CA60  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_4588A0  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
mov ecx eax +
and ecx 18h +
cmp cl 10h +
jz loc_458840  +
and eax 60h +
jnz loc_458765  +
mov eax [esp+0E8h+var_3C] +
test byte ptr [eax+16h] 80h +
jz loc_458315  +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_458315  +
mov eax [ebp+4] +
mov ecx [esp+0E8h+var_B4] +
mov eax [eax+11Ch] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_4581F8  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jz loc_45877C  +
mov eax [esp+0E8h+var_9C] +
test eax eax +
jnz loc_4583BD  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_2C] 0 +
mov [esp+0E8h+var_38] 0 +
mov [esp+0E8h+var_34] 0 +
add dword ptr [eax+38h] 1 +
xor eax eax +
test byte ptr [ebp+2Ch] 10h +
mov [esp+0E8h+var_30] 0 +
mov byte ptr [esp+0E8h+var_2C] 4 +
mov [esp+0E8h+var_28] 0FFFFFFF1h +
jnz loc_458382  +
mov eax [ebp+0] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
lea ecx [esp+0E8h+var_38] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_492990 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_44BE80  +
test eax eax +
jz loc_4588A0  +
mov [esp+0E8h+var_9C] 1 +
mov eax [ebx] +
mov [esp+0E8h+var_38] eax +
mov eax [ebx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ebx+8] +
mov [esp+0E8h+var_30] eax +
mov eax [ebx+0Ch] +
mov [esp+0E8h+var_2C] eax +
mov eax [ebx+10h] +
mov [esp+0E8h+var_28] eax +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_4588A0  +
mov ecx [esp+0E8h+var_3C] +
mov edx [esp+0E8h+var_C4] +
mov eax [ecx+38h] +
mov edx [edx] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_A4] ecx +
mov [esp+0E8h+var_38] eax +
mov [esp+0E8h+var_98] edx +
movzx edx byte ptr [edx] +
and edx 3 +
cmp dl 2 +
jz loc_45846C  +
mov edx [ecx+3Ch] +
add eax [edx+1Ch] +
movzx edx byte ptr [esp+0E8h+var_2C] +
mov [esp+0E8h+var_38] eax +
and edx 0Fh +
cmp dl 6 +
jz loc_4588B0  +
mov eax [esp+0E8h+var_BC] +
mov eax [eax+7Ch] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_98] eax +
mov eax [esp+0E8h+var_A4] +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_E8] eax +
call sub_44BE80  +
test eax eax +
jz loc_4588A0  +
cmp eax 1 +
jnz loc_4581F8  +
mov eax [esp+0E8h+var_98] +
add ebx 14h +
add esi 4 +
add edi 4 +
mov [esi-4] eax +
cmp [esp+0E8h+var_C0] ebx +
ja loc_45820B  +
mov ebp [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_B8] +
mov edi 20h +
mov edx 8 +
mov esi 0FFFFFFFFh +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovnz edx edi +
mov edi [esp+0E8h+var_B0] +
setnz al  +
movzx eax al +
lea eax ds:4[eax*4] +
mov [esp+0E8h+var_98] eax +
mov eax [edi+0A0h] +
mov ebx [edi+64h] +
mov [esp+0E8h+var_C0] edx +
mov edx 0FFh +
cmovnz edx esi +
mov eax [eax+218h] +
test ebx ebx +
mov [esp+0E8h+var_74] edx +
mov [esp+0E8h+var_8C] eax +
jz loc_45866B  +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_C4] ebp +
mov ebp ebx +
mov [esp+0E8h+var_6C] 0 +
mov [esp+0E8h+var_70] eax +
nop   +
lea esi [esi+0] +
test byte ptr [ebp+18h] 2 +
jz loc_458660  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4587B0  +
mov eax [ebp+14h] +
test ah 1 +
jz loc_458660  +
mov edx [ebp+24h] +
test edx edx +
jnz loc_458589  +
test al 4 +
jz loc_458660  +
test eax 100000h +
jnz loc_458660  +
mov ecx [ebp+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_459394  +
mov edi [esp+0E8h+var_B8] +
mov [esp+0E8h+var_40] ecx +
test byte ptr [edi+1AEh] 40h +
jz loc_4585C8  +
mov ebx [ebp+28h] +
test ebx ebx +
jz loc_4585C8  +
cmp edx ebx +
ja loc_458C90  +
test al 4 +
jnz loc_4588D4  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+12Ch] +
test eax eax +
jz loc_458604  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esp+0E8h+var_40] +
mov edi [esp+0E8h+var_BC] +
mov edx [esi] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E4] edx +
call eax  +
test eax eax +
jnz loc_458660  +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
cmp eax 2 +
jz loc_458DC3  +
jle loc_458D0D  +
cmp eax 3 +
jz loc_458C5A  +
cmp eax 6 +
jnz loc_458DF0  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_4605D0  +
test eax eax +
jz loc_4588A0  +
lea esi [esi+0] +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_458550  +
add esp 0DCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0E8h+var_B8] +
xor edx edx +
mov [esp+0E8h+var_94] 0 +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+60h] +
div  ecx +
mov [esp+0E8h+var_A8] eax +
jmp loc_45819A  +
cmp eax 0FFFFFFF1h +
jz loc_458750  +
cmp eax 0FFFFFFF2h +
jnz loc_4586D3  +
mov [esp+0E8h+var_3C] offset off_492840 +
mov edx offset off_492840 +
jmp loc_45823C  +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] ebp +
call sub_43F6C0  +
test eax eax +
mov [esp+0E8h+var_3C] eax +
jz loc_4581F2  +
movzx ecx word ptr [eax+18h] +
mov edx eax +
and cx 380h +
cmp cx 100h +
jnz loc_45823C  +
movzx ecx byte ptr [ebx+0Ch] +
and ecx 0Fh +
cmp cl 3 +
jz loc_45823C  +
mov eax [eax+8Ch] +
mov edx [ebx] +
mov eax [eax+88h] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_3C] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_4697B0  +
mov [ebx] eax +
mov edx [esp+0E8h+var_3C] +
jmp loc_45823C  +
mov [esp+0E8h+var_3C] offset off_492990 +
mov edx offset off_492990 +
jmp loc_45823C  +
cmp al 40h +
jz loc_4582F7  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jnz loc_458324  +
test byte ptr [ebp+2Ch] 10h +
jnz loc_4581F8  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_9C] 1 +
add dword ptr [eax+38h] 1 +
jmp loc_4583BD  +
mov ecx [esp+0E8h+var_BC] +
cmp eax [ecx+68h] +
setnz al  +
jmp loc_458291  +
mov edx [ebp+14h] +
mov ecx edx +
mov eax edx +
and ecx 2100000h +
cmp ecx 2000000h +
jnz loc_458571  +
mov eax [ebp+8Ch] +
mov ebx [ebp+3Ch] +
mov eax [eax+20h] +
cmp [esp+0E8h+var_A8] eax +
jbe loc_458C12  +
mov edi [esp+0E8h+var_B0] +
mov ecx [edi+0A0h] +
lea edi ds:0[eax*4] +
mov esi [ecx+928h] +
test esi esi +
jnz loc_458C00  +
mov esi [esp+0E8h+var_A0] +
lea eax [eax+eax*4] +
lea ecx [esi+eax*4] +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_459440  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+2Ch] +
mov esi [eax+edi] +
mov eax edx +
cmp esi 0FFFFFFFFh +
jz loc_459653  +
mov edx [ebx+8Ch] +
mov [edx+20h] esi +
jmp loc_458571  +
mov eax [edx+20h] +
mov ecx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] ecx +
call sub_42A4E0  +
test eax eax +
jz loc_4581F8  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
jmp loc_4582D7  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] offset aErrorBSizeOfSe +
mov [esp+0E8h+var_E4] eax +
call off_492AE8  +
mov [esp+0E8h+var_E8] 14h +
call sub_420C50  +
nop   +
xor eax eax +
add esp 0DCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0E8h+var_98] +
mov edx [ecx+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_459578  +
sub eax [edx+1Ch] +
mov [esp+0E8h+var_38] eax +
jmp loc_45846C  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_450E60  +
test eax eax +
mov [esp+0E8h+var_7C] eax +
jz loc_45955E  +
mov edx [ebp+24h] +
cmp [esp+0E8h+var_98] edx +
jnb loc_458964  +
mov eax [ebp+0] +
mov edi offset a_ctors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_458D60  +
mov ecx [ebp+3Ch] +
mov edi offset a_init_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_458D60  +
movzx eax byte ptr [eax+6] +
cmp al 2Eh +
jz loc_45894D  +
test al al +
jnz loc_458964  +
mov eax [esp+0E8h+var_98] +
imul eax [ebp+4Ch] +
cmp edx eax +
jnz loc_45887A  +
or dword ptr [ebp+14h] 4000000h +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
lea ecx [eax-1] +
cmp ecx 5 +
ja loc_458990  +
mov eax 1 +
shl eax cl +
test al 25h +
jz loc_458990  +
mov [esp+0E8h+var_A4] 0FFFFFFFFh +
jmp loc_4589C5  +
mov eax [ebp+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+114h] +
test eax eax +
jz loc_4589B2  +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_458982  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+118h] +
mov [esp+0E8h+var_E8] ebp +
call eax  +
mov [esp+0E8h+var_A4] eax +
mov edi [esp+0E8h+var_B8] +
mov eax [ebp+4Ch] +
mov ecx [esp+0E8h+var_7C] +
mov esi [esp+0E8h+var_A4] +
mov edx [edi+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
mov edi ecx +
movzx edx byte ptr [edx+9] +
imul eax edx +
add eax ecx +
mov ebx eax +
mov [esp+0E8h+var_B4] eax +
mov eax esi +
and eax 1 +
mov [esp+0E8h+var_90] eax +
mov eax esi +
and eax 2 +
cmp ecx ebx +
mov [esp+0E8h+var_80] eax +
jnb loc_458E75  +
mov [esp+0E8h+var_9C] ebp +
jmp loc_458AB1  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov esi [eax+928h] +
mov eax [esp+0E8h+var_C4] +
test esi esi +
mov eax [eax+30h] +
lea esi [eax+ebx*4] +
mov eax [esi] +
jz loc_458A3C  +
test eax eax +
jz loc_458ACB  +
mov ecx [esp+0E8h+var_A0] +
lea edx [ebx+ebx*4] +
lea edx [ecx+edx*4] +
movzx ecx byte ptr [edx+0Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E0] edx +
mov ebp ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
and ebp 0Fh +
mov [esp+0E8h+var_E8] eax +
call sub_43CFB0  +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
jbe loc_458B2E  +
test esi esi +
jz loc_458AA4  +
cmp [esp+0E8h+var_A4] 0FFFFFFFFh +
jz loc_458AA4  +
mov ebx [esi] +
test ebx ebx +
jz loc_458AA4  +
cmp ebx offset off_492990 +
jz loc_458AA4  +
cmp dword ptr [ebx+3Ch] offset off_492990 +
jz loc_459202  +
add edi 0Ch +
cmp [esp+0E8h+var_B4] edi +
jbe loc_458E71  +
mov edx [edi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
mov ebx edx +
shr ebx cl +
test ebx ebx +
jz loc_458AA4  +
cmp [esp+0E8h+var_A8] ebx +
ja loc_458A14  +
mov esi [esp+0E8h+var_8C] +
mov eax ebx +
sub eax [esp+0E8h+var_94] +
mov eax [esi+eax*4] +
test eax eax +
jnz loc_458AE4  +
jmp loc_4595D9  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_458AE1  +
test byte ptr [eax+0Dh] 1 +
movzx ebp byte ptr [eax+30h] +
jz loc_458B06  +
sub edx 3 +
cmp dl 1 +
jbe loc_458D90  +
movzx esi byte ptr [eax+0Ch] +
lea edx [eax+14h] +
lea ecx [esi-3] +
xor esi esi +
cmp cl 1 +
cmovbe esi edx +
mov eax [eax+4] +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
ja loc_458A7E  +
mov ecx [esp+0E8h+var_C4] +
mov eax [ecx] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_458A7E  +
xor eax eax +
cmp ebp 9 +
mov esi [esp+0E8h+var_9C] +
setz al  +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
lea edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E0] eax +
mov eax [esi+3Ch] +
mov eax [eax+1Ch] +
add eax [esi+38h] +
add eax [edi] +
mov [esp+0E8h+var_E8] ecx +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E4] eax +
lea eax [esp+0E8h+var_38] +
call sub_44D760  +
test eax eax +
jz loc_4588A0  +
cmp [esp+0E8h+var_A8] ebx +
mov esi [esp+0E8h+var_38] +
jbe loc_459463  +
mov ecx [esp+0E8h+var_A0] +
lea eax [ebx+ebx*4] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
shr dl 4 +
test dl dl +
jz loc_45973B  +
mov eax [esp+0E8h+var_B0] +
xor ebp ebp +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
test ecx ecx +
jnz loc_459471  +
mov [esp+0E8h+var_E4] 1DE1h +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
jmp loc_459471  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esi+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jnz loc_4587FE  +
mov edi [esp+0E8h+var_8C] +
sub eax [esp+0E8h+var_94] +
mov eax [edi+eax*4] +
movzx edi byte ptr [eax+0Ch] +
lea ecx [edi-6] +
cmp cl 1 +
ja loc_458C3F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea ecx [esi-6] +
cmp cl 1 +
jbe loc_458C30  +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov eax [ebx+8Ch] +
mov dword ptr [eax+20h] 0FFFFFFFEh +
mov eax edx +
jmp loc_458571  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_460850  +
test eax eax +
jnz loc_458660  +
jmp loc_4588A0  +
mov edi [esp+0E8h+var_C4] +
mov eax [edi+14h] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [edi+14h] +
mov [esp+0E8h+var_40] eax +
mov eax [ebp+14h] +
jmp loc_4585C8  +
test eax eax +
jnz loc_4581B1  +
mov eax [ebp+28h] +
mov ecx [ebp+24h] +
mov edx [ebp+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
mov [esp+0E8h+var_D0] ecx +
mov [esp+0E8h+var_D4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_43CC60  +
test eax eax +
mov [esp+0E8h+var_A0] eax +
jnz loc_4581B1  +
xor eax eax +
jmp loc_4588A2  +
cmp eax 1 +
jnz loc_458DF0  +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_D8] eax +
mov eax [ebp+8Ch] +
mov [esp+0E8h+var_E0] ebp +
add eax 88h +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov eax [eax+1Ch] +
sub eax 0FFFFFF80h +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_46A570  +
test eax eax +
jnz loc_458660  +
jmp loc_4588A0  +
mov edi offset a_dtors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_458964  +
mov ecx [ebp+3Ch] +
mov edi offset a_fini_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_458964  +
jmp loc_458941  +
mov edx [eax+14h] +
test byte ptr [edx+16h] 10h +
jnz loc_458B06  +
mov edx [edx+94h] +
test edx edx +
jz loc_458B06  +
test byte ptr [edx+2Ah] 20h +
jz loc_458B06  +
mov byte ptr [eax+0Ch] 1 +
xor esi esi +
mov [eax+14h] edx +
jmp loc_458B18  +
mov eax [ebp+8Ch] +
mov eax [eax+88h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_469530  +
test eax eax +
jnz loc_458660  +
jmp loc_4588A0  +
mov eax [ebp+14h] +
test ah 80h +
jnz loc_458660  +
xor edi edi +
test eax 4000000h +
mov esi [ebp+38h] +
mov ebx [ebp+24h] +
jz loc_4594C1  +
sub ebx [esp+0E8h+var_98] +
mov eax ebp +
mov ebp ebx +
mov ebx eax +
jmp loc_458E34  +
test ebp ebp +
jz loc_459734  +
add esi [esp+0E8h+var_70] +
adc edi [esp+0E8h+var_6C] +
sub ebp [esp+0E8h+var_98] +
mov eax [ebx+3Ch] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_D8] edi +
mov ecx eax +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_E4] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] eax +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E8] ecx +
add eax ebp +
mov [esp+0E8h+var_E0] eax +
call sub_41EE20  +
test eax eax +
jnz loc_458E20  +
xor eax eax +
jmp loc_4588A2  +
mov ebp [esp+0E8h+var_9C] +
mov eax [esp+0E8h+var_C4] +
mov edi [esp+0E8h+var_A0] +
mov edx [eax+30h] +
mov eax [eax] +
mov [esp+0E8h+var_D0] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_CC] edx +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] edi +
mov edi [esp+0E8h+var_B0] +
mov [esp+0E8h+var_D8] edx +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_84] +
mov [esp+0E8h+var_E0] edi +
call eax  +
test eax eax +
jz loc_4588A0  +
cmp eax 2 +
mov eax [esp+0E8h+var_C4] +
mov ecx [eax] +
movzx edi byte ptr [ecx] +
jz loc_459570  +
and edi 3 +
mov eax edi +
cmp al 2 +
jz loc_458EE7  +
cmp byte ptr [ecx+2] 0 +
jns loc_4585D0  +
mov eax [ebp+8Ch] +
mov ebx eax +
mov [esp+0E8h+var_64] eax +
mov eax [ebp+3Ch] +
mov [esp+0E8h+var_80] eax +
mov eax [eax+8Ch] +
mov esi eax +
mov [esp+0E8h+var_50] eax +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov edx eax +
mov byte ptr [esp+0E8h+var_90] al +
mov [esp+0E8h+var_B4] eax +
mov eax [ebp+4Ch] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax edx +
mov edx [esi+40h] +
add eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_A4] eax +
mov eax [esi+48h] +
mov esi [ebx+3Ch] +
lea eax [eax+edx*4] +
test esi esi +
mov [esp+0E8h+var_60] eax +
jz loc_459749  +
mov ebx [esi+28h] +
test ebx ebx +
jnz loc_4594AA  +
add ebx [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] ebx +
mov eax [ebp+38h] +
mov [esp+0E8h+var_B4] eax +
mov eax edi +
cmp al 2 +
jz loc_458F7E  +
mov eax [esp+0E8h+var_80] +
mov eax [eax+1Ch] +
add [esp+0E8h+var_B4] eax +
mov eax [esp+0E8h+var_A4] +
mov edi [esp+0E8h+var_7C] +
cmp edi eax +
jnb loc_4597AC  +
mov esi [esp+0E8h+var_60] +
movzx eax byte ptr [esp+0E8h+var_90] +
mov [esp+0E8h+var_68] 0 +
mov ebx [esp+0E8h+var_C4] +
mov [esp+0E8h+var_5C] 0 +
mov [esp+0E8h+var_90] esi +
mov esi edi +
xor edi edi +
jmp loc_458FF4  +
mov eax [esp+0E8h+var_B4] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov [esi] eax +
add esi 0Ch +
add edi 1 +
cmp [esp+0E8h+var_A4] esi +
jbe loc_4593CD  +
mov eax [esp+0E8h+var_B8] +
mov ecx [ebx] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
cmp eax edi +
jz loc_459124  +
cmp esi [esp+0E8h+var_9C] +
jz loc_4597CF  +
mov eax [esi] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44A250  +
cmp eax 0FFFFFFFDh +
mov [esi] eax +
ja loc_458FC0  +
mov edx [ebx] +
add eax [ebp+38h] +
mov [esi] eax +
movzx edx byte ptr [edx] +
mov ecx eax +
mov [esp+0E8h+var_B4] eax +
and edx 3 +
cmp dl 2 +
jz loc_45904B  +
mov eax [ebp+3Ch] +
add ecx [eax+1Ch] +
mov [esi] ecx +
mov [esp+0E8h+var_B4] ecx +
mov eax [esi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shr eax cl +
test eax eax +
jz loc_458FD4  +
mov ecx [esp+0E8h+var_B0] +
cmp [esp+0E8h+var_A8] eax +
mov edx [ecx+0A0h] +
jbe loc_459130  +
cmp dword ptr [edx+928h] 0 +
lea ecx ds:0[eax*4] +
mov [esp+0E8h+var_80] ecx +
jz loc_459093  +
mov ecx [ebx+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jz loc_459130  +
mov edx [esp+0E8h+var_90] +
lea eax [eax+eax*4] +
mov dword ptr [edx] 0 +
mov edx [esp+0E8h+var_A0] +
lea eax [edx+eax*4] +
mov edx [eax] +
mov [esp+0E8h+var_38] edx +
mov edx [eax+4] +
mov [esp+0E8h+var_34] edx +
mov ecx [eax+8] +
mov [esp+0E8h+var_30] ecx +
mov edx [eax+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov eax [eax+10h] +
mov edx [esp+0E8h+var_80] +
mov [esp+0E8h+var_28] eax +
mov eax [ebx+30h] +
mov eax [eax+edx] +
mov [esp+0E8h+var_78] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 3 +
jz loc_459194  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_80] +
mov eax [eax+edx] +
cmp eax 0FFFFFFFFh +
jz loc_459257  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_74] +
and edx [esi+4] +
or edx eax +
mov [esi+4] edx +
jmp loc_458FD4  +
add [esp+0E8h+var_90] 4 +
xor edi edi +
jmp loc_458FFC  +
mov edx [edx+218h] +
sub eax [esp+0E8h+var_94] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_45915F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_459150  +
mov edx [eax+1Ch] +
test edx edx +
js loc_459182  +
mov [esp+0E8h+var_E4] 281Ch +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
mov [esp+0E8h+var_80] eax +
call sub_420BA0  +
mov eax [esp+0E8h+var_80] +
mov ecx [esp+0E8h+var_90] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [ecx] eax +
jmp loc_458FD4  +
cmp [esp+0E8h+var_78] offset off_492990 +
jz loc_4595D2  +
mov eax [esp+0E8h+var_78] +
test eax eax +
jz loc_459799  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_459799  +
mov eax [esp+0E8h+var_78] +
mov edx [eax+3Ch] +
cmp edx offset off_492990 +
jz loc_4595B2  +
mov eax [edx+88h] +
test eax eax +
jz loc_459628  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_68] +
test edx edx +
jz loc_459113  +
mov ecx [esp+0E8h+var_78] +
mov edx [ecx+38h] +
add [esi+8] edx +
jmp loc_459113  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_458AA4  +
cmp ax 200h +
jz loc_458AA4  +
mov edx [esp+0E8h+var_90] +
test edx edx +
jnz loc_459756  +
mov eax [esp+0E8h+var_80] +
test eax eax +
jz loc_458AA4  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_E4] eax +
call sub_458090  +
test eax eax +
jz loc_458AA4  +
mov [esi] eax +
jmp loc_458AA4  +
mov eax [ebx] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jz loc_4597BC  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_43CA60  +
test eax eax +
mov [esp+0E8h+var_58] eax +
jz loc_4588A0  +
mov eax [esp+0E8h+var_78] +
mov edx [esp+0E8h+var_BC] +
mov ecx [eax+3Ch] +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_54] ecx +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_4588A0  +
mov eax [esp+0E8h+var_78] +
mov ecx [ebx] +
mov eax [eax+38h] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_4C] ecx +
mov [esp+0E8h+var_38] eax +
movzx edx byte ptr [ecx] +
and edx 3 +
cmp dl 2 +
jz loc_45932F  +
mov ecx [esp+0E8h+var_54] +
add eax [ecx+1Ch] +
mov edx eax +
mov [esp+0E8h+var_38] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 6 +
jnz loc_45932F  +
mov eax [esp+0E8h+var_4C] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
test eax eax +
jz loc_459825  +
sub edx [eax+1Ch] +
mov [esp+0E8h+var_38] edx +
mov eax [esp+0E8h+var_BC] +
mov edx [eax+7Ch] +
mov eax [esp+0E8h+var_78] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_54] edx +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_58] +
mov [esp+0E8h+var_E4] eax +
call sub_44BE80  +
test eax eax +
jz loc_4588A0  +
cmp eax 1 +
jnz loc_459809  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_54] +
mov ecx [esp+0E8h+var_80] +
mov [eax+ecx] edx +
mov eax edx +
jmp loc_45910C  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+14h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_40] eax +
lea eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_421F90  +
test eax eax +
jz loc_4588A0  +
mov eax [ebp+14h] +
jmp loc_4585C8  +
mov eax [esp+0E8h+var_64] +
mov esi [eax+3Ch] +
test esi esi +
jz loc_4593E6  +
mov ecx [esi+18h] +
test ecx ecx +
jnz loc_4594F8  +
mov eax [esp+0E8h+var_64] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_4585D0  +
mov edx [eax+18h] +
test edx edx +
jz loc_4585D0  +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+0F0h] +
mov edi [esp+0E8h+var_5C] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_DC] edi +
call edx  +
test eax eax +
jnz loc_4585D0  +
xor eax eax +
jmp loc_4588A2  +
mov esi [esp+0E8h+var_C4] +
mov eax [ebx+8Ch] +
mov ecx [esi+30h] +
mov ecx [ecx+edi] +
mov ecx [ecx+3Ch] +
mov ecx [ecx+88h] +
mov [eax+20h] ecx +
mov eax edx +
jmp loc_458571  +
mov eax [esp+0E8h+var_B0] +
mov ebp [esp+0E8h+var_A8] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
sub ebx ebp +
mov eax [eax+ebx*4] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
ja loc_459497  +
mov eax [eax+14h] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
jbe loc_459488  +
mov byte ptr [eax+0Ch] 3 +
mov [eax+18h] esi +
mov dword ptr [eax+14h] offset off_492990 +
jmp loc_458AA4  +
mov eax [esi+18h] +
xor edx edx +
div  ebx +
imul eax [esp+0E8h+var_B4] +
lea ebx [eax+eax*2] +
shl ebx 2 +
jmp loc_458F5E  +
mov eax [ebp+3Ch] +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_D4] ebx +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] eax +
call sub_41EE20  +
test eax eax +
jnz loc_458660  +
jmp loc_4588A0  +
mov edi [esp+0E8h+var_60] +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+0F0h] +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edi +
mov edi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] edi +
call eax  +
test eax eax +
jz loc_4588A0  +
mov ecx [esi+28h] +
xor eax eax +
test ecx ecx +
jz loc_45953E  +
mov eax [esi+18h] +
xor edx edx +
div  ecx +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+174h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx eax +
add [esp+0E8h+var_7C] edx +
jmp loc_4593E6  +
mov edi [ebp+4Ch] +
test edi edi +
jz loc_45890A  +
xor eax eax +
jmp loc_4588A2  +
and edi 3 +
jmp loc_458EE7  +
mov [esp+0E8h+var_E4] 2656h +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BA0  +
mov ecx [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_38] +
mov edx [ecx] +
mov ecx [esp+0E8h+var_3C] +
mov edx [edx+1Ch] +
mov [esp+0E8h+var_A4] ecx +
mov edx [edx+0C8h] +
jmp loc_4588C5  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_4595D2  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_4595D2  +
mov eax [edx+1Ch] +
sub [esi+8] eax +
cmp edx offset off_492990 +
jnz loc_4591CF  +
xor eax eax +
jmp loc_4591E4  +
lea esi [esp+0E8h+var_38] +
mov ebx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] offset a08lx_5 +
mov [esp+0E8h+var_E8] esi +
call sprintf  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] offset aErrorBContains +
mov [esp+0E8h+var_E4] eax +
call off_492AE8  +
mov [esp+0E8h+var_E8] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_4588A2  +
mov eax [edx+1Ch] +
add [esi+8] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_430520  +
mov edx [eax+1Ch] +
sub [esi+8] edx +
mov eax [eax+88h] +
jmp loc_4591DD  +
mov eax [ecx] +
mov esi [esp+0E8h+var_C4] +
mov [esp+0E8h+var_38] eax +
mov eax [ecx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ecx+8] +
mov [esp+0E8h+var_30] eax +
mov edx [ecx+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov edx [ecx+10h] +
mov ecx [esp+0E8h+var_AC] +
mov [esp+0E8h+var_28] edx +
mov edx [esi+30h] +
mov edx [edx+edi] +
mov esi [edx+3Ch] +
mov edx [ecx+64h] +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] ecx +
call sub_43CA60  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_4588A0  +
mov [esp+0E8h+var_E4] esi +
mov esi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] esi +
call sub_440BE0  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_4588A0  +
mov eax [ebp+38h] +
add [esp+0E8h+var_38] eax +
lea eax [esp+0E8h+var_38] +
mov esi [esi+7Ch] +
mov edx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_44BE80  +
test eax eax +
jz loc_4588A0  +
cmp eax 1 +
jnz loc_459850  +
mov eax [esp+0E8h+var_C4] +
add edi [eax+2Ch] +
mov eax [ebp+14h] +
mov [edi] esi +
jmp loc_45882C  +
mov ebp ebx +
jmp loc_458660  +
mov dword ptr [eax+10h] 0FFFFFFF1h +
mov [eax] esi +
jmp loc_458AA4  +
mov eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] eax +
jmp loc_458F66  +
mov eax [esp+0E8h+var_C4] +
mov edx [ebx+94h] +
mov ecx [esp+0E8h+var_B0] +
mov eax [eax] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+0E8h+var_D4] edx +
mov edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] offset aXSReferencedIn +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] ecx +
call eax  +
jmp loc_45922A  +
mov [esp+0E8h+var_E8] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_4588A2  +
mov [esp+0E8h+var_5C] 0 +
jmp loc_4593D7  +
mov [esp+0E8h+var_E8] 5 +
call sub_420C50  +
xor eax eax +
jmp loc_4588A2  +
mov eax [esp+0E8h+var_50] +
mov edx [eax+50h] +
mov eax [eax+58h] +
lea eax [eax+edx*4] +
mov edx eax +
mov [esp+0E8h+var_90] eax +
mov eax [esp+0E8h+var_B8] +
mov [esp+0E8h+var_5C] edx +
movzx eax byte ptr [eax+1ACh] +
shr al 6 +
and eax 1 +
mov [esp+0E8h+var_68] eax +
jmp loc_459006  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 2893h +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BD0  +
mov [esp+0E8h+var_E4] 2884h +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [ebx] +
mov edx [esp+0E8h+var_38] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
jmp loc_459325  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 26B6h +
mov [esp+0E8h+var_E8] offset a____Binutil_21 +
call sub_420BD0  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C0] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4598B0  +
xor ebx ebx +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
test dl 1 +
jnz loc_45A2B9  +
mov ecx [eax+30h] +
and edx 3 +
mov eax [eax+38h] +
cmp dl 2 +
mov [esp+1F4h+var_1C4] 1 +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_198] eax +
jz loc_4598F5  +
mov eax [esp+1F4h+var_E0] +
movsx eax byte ptr [eax+2] +
mov [esp+1F4h+var_1C4] eax +
shr [esp+1F4h+var_1C4] 1Fh +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_140] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_13C] eax +
call sub_466DA0  +
test eax eax +
mov [esp+1F4h+var_138] eax +
jz loc_45989E  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jnz loc_45A46A  +
mov [esp+1F4h+var_134] 0 +
mov [esp+1F4h+var_130] 0 +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_12C] 0 +
mov [esp+1F4h+var_128] 0 +
mov [esp+1F4h+var_124] 0 +
mov eax [eax+4] +
mov [esp+1F4h+var_120] 0 +
mov [esp+1F4h+var_11C] 0 +
mov [esp+1F4h+var_118] 0 +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_114] 0 +
mov [esp+1F4h+var_110] 0 +
mov [esp+1F4h+var_10C] 0 +
mov ebp [eax+188h] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_108] 0 +
mov [esp+1F4h+var_1BC] 0 +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_45B02F  +
mov [esp+1F4h+var_1A4] 0 +
lea esi [esi+0] +
test ebp ebp +
mov esi [ebx] +
jz loc_459A06  +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] esi +
call strcmp  +
test eax eax +
jz loc_459A14  +
mov edi offset a_gnu_attribute +
mov ecx 10h +
cmps   +
jnz loc_459A5E  +
mov eax [ebx+0A0h] +
test eax eax +
jnz loc_459A26  +
jmp loc_459A3C  +
mov eax [eax] +
test eax eax +
jz loc_459A3C  +
cmp dword ptr [eax+4] 1 +
jnz loc_459A20  +
mov edx [eax+10h] +
mov eax [eax] +
and dword ptr [edx+14h] 0FFFFFEFFh +
test eax eax +
jnz loc_459A26  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4676B0  +
test eax eax +
mov [esp+1F4h+var_1BC] eax +
jnz loc_45A120  +
or dword ptr [ebx+14h] 8000h +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4599F0  +
mov eax [esp+1F4h+var_E4] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_45B02B  +
mov [esp+1F4h+var_1CC] 0 +
mov edi ebp +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1D4] 0 +
lea esi [esi+0] +
mov esi [edi+0A0h] +
mov ebp [edi+8Ch] +
mov dword ptr [edi+4Ch] 0 +
test esi esi +
jnz loc_459AE2  +
jmp loc_45A110  +
cmp eax 1 +
jz loc_459F48  +
mov esi [esi] +
test esi esi +
lea esi [esi+0] +
jz loc_459B09  +
mov eax [esi+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_459AD0  +
add dword ptr [edi+4Ch] 1 +
mov ecx 1 +
test byte ptr [edi+19h] 4 +
jz loc_459F40  +
mov esi [esi] +
add [ebp+50h] ecx +
test esi esi +
jnz loc_459AE2  +
mov edx [edi+4Ch] +
test edx edx +
jz loc_45A110  +
mov eax [edi+14h] +
or eax 4 +
mov [edi+14h] eax +
test al 1 +
jnz loc_459B2E  +
test byte ptr [edi+18h] 1 +
jnz loc_459B2E  +
mov dword ptr [edi+1Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_459AB0  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_459B56  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_45A2D6  +
mov eax [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_E4] +
movzx edx byte ptr [eax+1] +
mov eax 1 +
and edx 18h +
cmp dl 18h +
cmovz eax [esp+1F4h+var_1C4] +
test byte ptr [edi+2Bh] 10h +
mov [edi+7Ch] eax +
jnz loc_45A4A1  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_440CB0  +
test eax eax +
jz loc_45A28C  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+64h] +
test esi esi +
jz loc_459C5A  +
mov edi [esp+1F4h+var_E4] +
jmp loc_459BCD  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_459C5A  +
test byte ptr [esi+14h] 4 +
mov ebx [esi+8Ch] +
jz loc_459C0B  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_459BF2  +
lea edx [ebx+3Ch] +
mov eax edi +
call sub_44D2A0  +
test eax eax +
jz loc_45A28C  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_459C0B  +
lea edx [ebx+4Ch] +
mov eax edi +
call sub_44D2A0  +
test eax eax +
jz loc_45A28C  +
mov edx [ebx+10h] +
and edx [ebx+14h] +
mov dword ptr [ebx+40h] 0 +
mov dword ptr [ebx+50h] 0 +
cmp edx 0FFFFFFFFh +
jnz loc_459BC2  +
test byte ptr [esi+17h] 8 +
mov eax [ebx+30h] +
jz loc_45B0E6  +
test eax eax +
jnz loc_45B0E6  +
mov eax [ebx+18h] +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
jz loc_45A28C  +
mov esi [esi+0Ch] +
mov [ebx+30h] eax +
test esi esi +
jnz loc_459BCD  +
mov eax [esp+1F4h+var_E4] +
mov dword ptr [eax+7Ch] 0 +
mov eax [eax+0A0h] +
mov edi eax +
mov dword ptr [eax+4Ch] 2 +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+5] +
mov [edi+70h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
cmp [esp+1F4h+var_1B8] 13h +
mov [edi+6Ch] eax +
ja loc_45A4C1  +
mov eax 230h +
mov [esp+1F4h+var_1B8] 14h +
mov ecx [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_1B8] +
mov ebx [ecx+1Ch] +
mov [ebx+58h] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
mov [ebx+5Ch] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_45A28C  +
mov eax [esp+1F4h+var_E4] +
mov edx [eax+0A0h] +
cmp dword ptr [edx+214h] 0FF01h +
sbb eax eax +
not eax  +
mov [esp+1F4h+var_10C] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_45A300  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jnz loc_45A300  +
mov eax [esp+1F4h+var_1D4] +
test eax eax +
jnz loc_45A977  +
mov ebp [esp+1F4h+var_1A8] +
test ebp ebp +
jnz loc_45A957  +
mov edi [esp+1F4h+var_1AC] +
test edi edi +
jnz loc_45A922  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
imul eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_120] eax +
jz loc_45A28C  +
mov eax [esp+1F4h+var_1B8] +
lea ebx ds:0[eax*4] +
add eax ebx +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_118] eax +
jz loc_45A28C  +
mov [esp+1F4h+var_1F4] ebx +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_114] eax +
jz loc_45A28C  +
mov [esp+1F4h+var_1F4] ebx +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_110] eax +
jz loc_45A28C  +
mov esi [esp+1F4h+var_1B0] +
test esi esi +
jnz loc_45A997  +
mov eax [esp+1F4h+var_E0] +
xor edx edx +
mov esi [eax+1Ch] +
mov ebx [esi+0C8h] +
test ebx ebx +
mov eax ebx +
jnz loc_459E16  +
jmp loc_459E4A  +
mov edx [eax+24h] +
test edx edx +
jnz loc_459E0C  +
and ch 1 +
jnz loc_459E0C  +
mov ecx [eax+0A4h] +
test ecx ecx +
jz loc_459E0C  +
mov edx [ecx+0Ch] +
add edx [ecx+8] +
add edx [eax+1Ch] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_459E1E  +
mov ecx [eax+14h] +
test ch 4 +
jnz loc_459DF0  +
mov eax [esp+1F4h+var_1C0] +
mov edi [ebx+1Ch] +
cmp dword ptr [eax+1A4h] 1 +
jnz loc_459E40  +
mov ecx [ebx+40h] +
mov eax 1 +
shl eax cl +
lea edx [edx+eax-1] +
neg eax  +
and edx eax +
mov eax edx +
sub eax edi +
mov [esi+0CCh] eax +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_45A5E9  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_45A5D6  +
xor ecx ecx +
xor esi esi +
mov [esp+1F4h+var_1B8] 0 +
xor edi edi +
mov [esp+1F4h+var_1CC] ecx +
jmp loc_459EB1  +
add esi 1 +
test edi edi +
jnz loc_459ED8  +
mov ebx [ebx] +
test ebx ebx +
jz loc_45A540  +
cmp dword ptr [ebx+4] 1 +
jnz loc_459EA0  +
mov ebp [ebx+10h] +
mov edx [ebp+94h] +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_45A4CB  +
add esi 1 +
test edi edi +
mov [esp+1F4h+var_1CC] ebp +
jz loc_459EA7  +
test esi esi +
jz loc_459EA7  +
mov ebx [esp+1F4h+var_1B8] +
mov ecx [esp+1F4h+var_1CC] +
test ebx ebx +
jz loc_45A869  +
test ecx ecx +
jz loc_45A869  +
mov edi [esp+1F4h+var_1B8] +
mov edx [ecx+94h] +
mov eax [edi+94h] +
mov [esp+1F4h+var_1E0] edx +
mov [esp+1F4h+var_1E4] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrdere +
mov [esp+1F4h+var_1F0] eax +
call off_492AE8  +
mov [esp+1F4h+var_1F4] 11h +
call sub_420C50  +
jmp loc_45989E  +
add [ebp+40h] ecx +
jmp loc_459AD9  +
mov ebx [esi+10h] +
or byte ptr [ebx+18h] 2 +
test byte ptr [ebx+16h] 80h +
cmovz eax [esp+1F4h+var_1CC] +
mov ecx [ebx+8Ch] +
mov [esp+1F4h+var_1CC] eax +
mov eax [ebp+4] +
mov [esp+1F4h+var_1C8] ecx +
cmp eax 4 +
jz loc_45A023  +
cmp eax 9 +
jz loc_45A023  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_45A0E5  +
mov ecx [ebx+4Ch] +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
cmp edx eax +
cmovnb eax edx +
mov edx [esp+1F4h+var_1D4] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_45A030  +
test ecx ecx +
jz loc_459AD9  +
mov eax [esi+4] +
add [edi+4Ch] ecx +
cmp eax 1 +
jnz loc_459AF6  +
mov ebx [esp+1F4h+var_1C4] +
test ebx ebx +
jz loc_459AF6  +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+3Ch] +
test edx edx +
jz loc_459FF7  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+40h] +
test ecx ecx +
jz loc_459FF2  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+40h] eax +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_459AD9  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+50h] +
test ecx ecx +
jz loc_45A019  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+50h] eax +
jmp loc_459AD9  +
xor ecx ecx +
jmp loc_459F8A  +
test byte ptr [eax+29h] 8 +
jnz loc_459FB1  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1B4] eax +
mov eax [eax+928h] +
test eax eax +
jz loc_45A160  +
mov eax [esp+1F4h+var_1C0] +
xor edx edx +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp+1F4h+var_1A0] eax +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+60h] +
div  [esp+1F4h+var_1A0] +
mov edx [esp+1F4h+var_1B8] +
cmp edx eax +
cmovb edx eax +
cmp eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B8] edx +
jbe loc_45A099  +
mov edx [esp+1F4h+var_1B4] +
mov edx [edx+208h] +
test edx edx +
cmovz eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B0] eax +
test byte ptr [ebx+14h] 4 +
jz loc_459FB1  +
mov eax [esp+1F4h+var_1C8] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_45A4BA  +
mov eax [eax+18h] +
mov edx [esp+1F4h+var_1C8] +
mov edx [edx+4Ch] +
test edx edx +
jz loc_45A0C3  +
add eax [edx+18h] +
mov edx [esp+1F4h+var_1A8] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1A8] eax +
mov eax [ebx+4Ch] +
mov ebx [esp+1F4h+var_1AC] +
cmp ebx eax +
cmovnb eax ebx +
mov [esp+1F4h+var_1AC] eax +
jmp loc_459FB1  +
mov eax [esp+1F4h+var_1C0] +
xor ecx ecx +
mov eax [eax+0F4h] +
test eax eax +
jz loc_459F8A  +
mov ecx [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
mov ecx eax +
jmp loc_459F8A  +
mov eax [edi+14h] +
and eax 0FFFFFFFBh +
mov [edi+14h] eax +
jmp loc_459B1D  +
mov eax [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_41EDE0  +
mov dword ptr [ebx+0A0h] 0 +
mov [esp+1F4h+var_1A4] ebx +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4599F0  +
jmp loc_459A65  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+68h] +
jmp loc_45A071  +
mov [esp+1F4h+var_1F4] edi +
call sub_42C0C0  +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_1C8] eax +
call sub_42B590  +
mov edx eax +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jz loc_45A192  +
test edx edx +
jz loc_45A28C  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] eax +
call sub_42CA20  +
mov edx [esp+1F4h+var_1AC] +
test eax eax +
jz loc_45A23A  +
cmp eax 1 +
jnz loc_45AF5F  +
cmp dword ptr [ebp+4] 3 +
mov eax [ebp+10h] +
jz loc_45B021  +
mov ecx [eax+4] +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1A8] edx +
mov edx [edi+20h] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1D8] 0 +
mov [esp+1F4h+var_1DC] 0 +
mov [esp+1F4h+var_1AC] eax +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1E4] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1AC] +
call eax  +
mov edx [esp+1F4h+var_1A8] +
test eax eax +
jz loc_45B0CE  +
mov eax [esp+1F4h+var_1C8] +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1E0] eax +
mov eax [ebp+8] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_41EE20  +
mov edx [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1C8] eax +
call free  +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jnz loc_45A7A1  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov eax [esp+1F4h+var_E4] +
xor ebx ebx +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_44D450  +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E4] +
or dword ptr [ecx+28h] 800h +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
jmp loc_4598C3  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_44D540 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_42E0B0  +
jmp loc_459B56  +
mov eax [edx+934h] +
lea esi [esp+1F4h+var_178] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_1B4] +
add eax 48h +
mov [esp+1F4h+var_1F4] eax +
call sub_43FF50  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] offset off_4928E8 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 0 +
mov [esp+1F4h+var_16B] 0 +
mov [esp+1F4h+var_168] 0 +
mov [esp+1F4h+var_16A] 0 +
mov [esp+1F4h+var_1CC] eax +
call sub_44BE80  +
cmp eax 1 +
jnz loc_45A297  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 3 +
mov [esp+1F4h+var_16B] 0 +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_16A] 0 +
cmp dword ptr [eax+214h] 1 +
jbe loc_459D27  +
mov edi [esp+1F4h+var_E4] +
mov ebx 1 +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] edi +
call sub_43F6C0  +
test eax eax +
jz loc_45A454  +
mov ecx [edi+7Ch] +
mov [esp+1F4h+var_168] ebx +
mov [eax+88h] ecx +
mov ecx [esp+1F4h+var_E0] +
movzx ecx byte ptr [ecx] +
and ecx 3 +
cmp cl 2 +
jz loc_45A42B  +
mov ecx [eax+1Ch] +
mov [esp+1F4h+var_178] ecx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call sub_44BE80  +
cmp eax 1 +
jnz loc_45A297  +
mov eax [edi+0A0h] +
add ebx 1 +
cmp [eax+214h] ebx +
ja loc_45A3F2  +
jmp loc_459D27  +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_hash +
mov [esp+1F4h+var_1F4] edi +
call sub_41E7F0  +
mov [esp+1F4h+var_1F0] offset a_gnu_version +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_134] eax +
call sub_41E7F0  +
mov [esp+1F4h+var_130] eax +
jmp loc_459947  +
mov [esp+1F4h+var_1F0] 2B5Fh +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BA0  +
jmp loc_459B85  +
xor eax eax +
jmp loc_45A0B5  +
imul eax [esp+1F4h+var_1B8] +
jmp loc_459CB2  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [edx+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_459ECD  +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1B0] edx +
call sub_440BE0  +
mov edx [esp+1F4h+var_1B0] +
test eax eax +
jz loc_459ECD  +
mov edx [edx+0A0h] +
mov ecx [edx+214h] +
cmp eax ecx +
jnb loc_459ECD  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
test byte ptr [eax+8] 80h +
jz loc_459ECD  +
cmp ecx [eax+1Ch] +
jbe loc_459ECD  +
add edi 1 +
mov [esp+1F4h+var_1B8] ebp +
jmp loc_459EA3  +
test edi edi +
jz loc_45A5D6  +
shl edi 2 +
mov [esp+1F4h+var_1F4] edi +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_45989E  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0A0h] +
test eax eax +
jz loc_45AF7B  +
nop   +
add ebx 1 +
mov [ebp+ebx*4-4] eax +
mov eax [eax] +
test eax eax +
jnz loc_45A570  +
mov [esp+1F4h+var_1E8] offset sub_44C080 +
xor edi edi +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
mov edx ebp +
lea eax [ebp+ebx*4+0] +
mov [esp+1F4h+var_1CC] ebp +
mov ebx [edx] +
mov ebp 0FFFFFFFFh +
add edx 4 +
mov esi [ebx+10h] +
mov ecx [esi+40h] +
shl ebp cl +
mov ecx ebp +
and ecx edi +
mov [esi+38h] ecx +
mov [ebx+8] ecx +
add ecx [ebx+0Ch] +
cmp edx eax +
mov edi ecx +
jnz loc_45A5A5  +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_459E60  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
call sub_461640  +
test eax eax +
jz loc_45989E  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+34h] +
test eax eax +
jz loc_45A61C  +
and byte ptr [eax+2Bh] 0EFh +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_45A60E  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov esi edi +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_45AA03  +
mov eax [esp+1F4h+var_1D4] +
mov edi [eax+0A0h] +
test edi edi +
jz loc_45A9F0  +
mov ebp edi +
jmp loc_45A695  +
sub eax 3 +
cmp eax 1 +
jbe loc_45A6F0  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_42FC20  +
test eax eax +
jz loc_45AFA0  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_45A9F0  +
mov eax [ebp+4] +
cmp eax 1 +
jnz loc_45A650  +
mov eax [ebp+10h] +
mov esi [eax+94h] +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45A65C  +
mov eax [esp+1F4h+var_1C0] +
mov edx [esi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jnz loc_45A65C  +
test byte ptr [esi+2Bh] 10h +
jnz loc_45A68A  +
lea eax [esp+1F4h+var_140] +
mov edx esi +
mov [esp+1F4h+var_1CC] eax +
call sub_458130  +
test eax eax +
jz loc_45A297  +
or byte ptr [esi+2Bh] 10h +
jmp loc_45A68A  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+8Ch] +
mov eax [ebp+10h] +
mov eax [eax] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_42CF60  +
test eax eax +
mov edi eax +
jz loc_45AF43  +
mov eax [ebp+10h] +
mov ecx [eax+8] +
mov [esp+1F4h+var_1CC] ecx +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_45A90F  +
add ebx 3Ch +
mov edx [ebx+4] +
mov ecx [ebx+0Ch] +
cmp dword ptr [ebp+4] 3 +
lea ecx [ecx+edx*4] +
mov [esp+1F4h+var_1C8] ecx +
mov eax [eax+4] +
jnz loc_45A883  +
mov eax [eax+88h] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jnz loc_45A784  +
mov [esp+1F4h+var_1F0] 2932h +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esp+1F4h+var_1C8] +
mov dword ptr [eax] 0 +
mov eax [edi+24h] +
test eax eax +
jz loc_45A7A1  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_45A16C  +
mov eax [ebp+8] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_45A7C4  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+1Ch] +
add [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1B0] +
mov ecx [eax+174h] +
movzx edx byte ptr [ecx+9] +
test dl dl +
jz loc_45A80B  +
lea edx [edx+edx*2] +
lea eax [esp+1F4h+var_164] +
lea edx [esp+edx*4+1F4h+var_164] +
mov [esp+1F4h+var_1B0] ecx +
mov ecx [esp+1F4h+var_1C8] +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ecx +
cmp eax edx +
jnz loc_45A7EB  +
mov ecx [esp+1F4h+var_1B0] +
cmp byte ptr [ecx+0Ah] 20h +
jz loc_45A8F7  +
mov eax [edi] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx] +
cmp dword ptr [eax+4] 9 +
mov edx [eax+30h] +
jz loc_45A8EB  +
mov eax [esp+1F4h+var_1CC] +
mov edi [ecx+44h] +
mov [esp+1F4h+var_15C] eax +
movzx eax byte ptr [ecx+4] +
imul eax [ebx+4] +
add eax edx +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edi  +
add dword ptr [ebx+4] 1 +
jmp loc_45A68A  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrde_0 +
mov [esp+1F4h+var_1F0] eax +
call off_492AE8  +
jmp loc_459F29  +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 1 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_42D990  +
test eax eax +
jz loc_45B07E  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_45A9C0  +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [esp+1F4h+var_1B8] 0 +
mov [ecx] eax +
jmp loc_45A78E  +
mov edi [ecx+3Ch] +
movzx eax byte ptr [ecx+3] +
jmp loc_45A83F  +
mov edx [esp+1F4h+var_1B8] +
movzx eax byte ptr [edi] +
shl edx 8 +
add eax edx +
mov [esp+1F4h+var_160] eax +
jmp loc_45A81E  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_45B060  +
add ebx 4Ch +
jmp loc_45A748  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_124] eax +
jnz loc_459D4B  +
jmp loc_45A28C  +
mov eax [esp+1F4h+var_1A8] +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_128] eax +
jnz loc_459D3F  +
jmp loc_45A28C  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_12C] eax +
jnz loc_459D33  +
jmp loc_45A28C  +
mov eax [esp+1F4h+var_1B0] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
mov [esp+1F4h+var_11C] eax +
jnz loc_459DD6  +
jmp loc_45A28C  +
mov eax [eax+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+88h] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [ecx] 0 +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
mov ecx [edx+1Ch] +
add [esp+1F4h+var_1CC] ecx +
add [esp+1F4h+var_1CC] eax +
jmp loc_45A78E  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_45A636  +
mov eax [esp+1F4h+var_E0] +
cmp byte ptr [eax+3] 0 +
js loc_45AA35  +
mov eax [esp+1F4h+var_E0] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_45AA35  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_45B102  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jnz loc_45AA1E  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] offset loc_44C580 +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_184] 1 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_180] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_42A830  +
mov eax [esp+1F4h+var_188] +
test eax eax +
jnz loc_45989E  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D0h] +
test edx edx +
jz loc_45AAE1  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_45AAB2  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_45AAE1  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_44BE80 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_45989E  +
mov eax [esp+1F4h+var_E4] +
mov edi [esp+1F4h+var_1B4] +
mov eax [eax+7Ch] +
mov [edi+68h] eax +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_45C034  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
test eax eax +
jz loc_45AD22  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_45AD22  +
mov eax [eax+6Ch] +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax] 1 +
jnz loc_45AB41  +
mov ebp [ecx+34h] +
test ebp ebp +
jz loc_45C043  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_160] 0 +
mov [esp+1F4h+var_15C] 0 +
mov [esp+1F4h+var_158] 3 +
mov ebp [eax+64h] +
mov [esp+1F4h+var_157] 0 +
mov [esp+1F4h+var_156] 0 +
test ebp ebp +
jz loc_45AC23  +
mov eax [ebp+8Ch] +
mov ebx [eax+60h] +
test ebx ebx +
jle loc_45AC0E  +
mov esi [eax+5Ch] +
test esi esi +
jg loc_45ABAB  +
mov [esp+1F4h+var_1F0] 2CD3h +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BA0  +
mov [esp+1F4h+var_154] esi +
sub esi 0FF00h +
cmp esi 0FFFEFFFFh +
jbe loc_45B133  +
mov eax [ebp+1Ch] +
cmp edi ebx +
cmovl edi ebx +
mov [esp+1F4h+var_164] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
mov edx [eax+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx eax byte ptr [eax+5] +
imul eax ebx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_45AB83  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov esi [ecx+0C0h] +
test esi esi +
jz loc_45AD0D  +
lea ebp [esp+1F4h+var_164] +
mov eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov eax [esi+14h] +
mov [esp+1F4h+var_160] eax +
mov eax [esi+18h] +
mov [esp+1F4h+var_15C] eax +
mov eax [esi+1Ch] +
mov dword ptr [esp+1F4h+var_158] eax +
mov eax [esi+20h] +
and [esp+1F4h+var_157] 0FCh +
mov [esp+1F4h+var_154] eax +
mov edx [esi+20h] +
mov eax [esi+4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_43F6C0  +
test eax eax +
mov ebx eax +
jz loc_45ACBD  +
mov edx [eax+3Ch] +
mov eax [edx+8Ch] +
mov eax [eax+5Ch] +
mov [esp+1F4h+var_154] eax +
sub eax 0FF00h +
cmp eax 0FFFEFFFFh +
jbe loc_45C04A  +
mov eax [ebx+38h] +
add eax [edx+1Ch] +
add eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov ecx [esp+1F4h+var_1C0] +
mov eax [esi+0Ch] +
mov edx [ecx+174h] +
cmp edi eax +
cmovl edi eax +
mov ecx [edx+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx edx byte ptr [edx+5] +
mov [esp+1F4h+var_1F0] ebp +
imul eax edx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call ecx  +
mov esi [esi] +
test esi esi +
jnz loc_45AC38  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
lea edx [edi+1] +
mov eax [eax+3Ch] +
mov eax [eax+8Ch] +
mov [eax+20h] edx +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] offset loc_44C580 +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov [esp+1F4h+var_184] 0 +
call sub_42A830  +
mov edi [esp+1F4h+var_188] +
test edi edi +
jnz loc_45989E  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D4h] +
test edx edx +
jz loc_45ADB5  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_45AD86  +
mov esi [esp+1F4h+var_1C4] +
test esi esi +
jz loc_45ADB5  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_44BE80 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_45989E  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_467290  +
mov eax [esp+1F4h+var_140] +
mov edi [eax+1Ch] +
mov edx [edi+54h] +
test edx edx +
jz loc_45B188  +
mov eax [esp+1F4h+var_13C] +
mov ecx [eax+0A0h] +
mov ebx [ecx+90Ch] +
test ebx ebx +
jnz loc_45AE0E  +
mov [esp+1F4h+var_1F0] 2257h +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esp+1F4h+var_13C] +
mov edx [edi+54h] +
mov eax [eax+4] +
mov esi [eax+1B0h] +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
imul eax edx +
mov [esp+1F4h+var_1F4] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_45989E  +
mov ecx [esp+1F4h+var_10C] +
test ecx ecx +
jz loc_45AE65  +
mov eax [esp+1F4h+var_13C] +
mov eax [eax+7Ch] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_42B590  +
test eax eax +
mov [esp+1F4h+var_10C] eax +
jz loc_45C081  +
mov edx [edi+54h] +
mov [esp+1F4h+var_1D4] 0 +
test edx edx +
jz loc_45AEDD  +
imul ebx [esp+1F4h+var_1D4] +
add ebx [edi+5Ch] +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jnz loc_45C066  +
mov dword ptr [ebx+8] 0 +
mov eax [esi+174h] +
mov edx [esp+1F4h+var_10C] +
mov ecx [eax+24h] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [ebx+18h] +
lea edx [edx+ecx*4] +
mov [esp+1F4h+var_1E8] edx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
mov [esp+1F4h+var_1F0] ebx +
add eax ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1C8] +
call eax  +
mov edx [edi+54h] +
add [esp+1F4h+var_1D4] 1 +
cmp [esp+1F4h+var_1D4] edx +
jb loc_45AE74  +
mov eax [esi+174h] +
mov esi edx +
xor edx edx +
mov ecx [esp+1F4h+var_13C] +
movzx eax byte ptr [eax+5] +
mov ebx [ecx+0A0h] +
mov [esp+1F4h+var_1E8] 0 +
imul esi eax +
mov eax [ebx+60h] +
add eax [ebx+58h] +
adc edx [ebx+5Ch] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_429F00  +
test eax eax +
jz loc_45B14C  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
jmp loc_45989E  +
mov [esp+1F4h+var_1F4] 11h +
call sub_420C50  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_45A297  +
mov [esp+1F4h+var_1EC] offset aElf_reloc_link +
mov [esp+1F4h+var_1F0] 2974h +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BD0  +
mov [esp+1F4h+var_1E8] offset sub_44C080 +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
jmp loc_45A5CE  +
cmp dword ptr [ebp+4] 1 +
mov edi esi +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jnz loc_45A297  +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45A297  +
mov eax [esp+1F4h+var_1C0] +
mov edx [edi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jz loc_45A297  +
mov edx offset aElfclass32 +
mov ecx offset aElfclass64 +
cmp al 2 +
mov ebx ecx +
mov esi edx +
cmovnz ebx edx +
cmovnz esi ecx +
mov [esp+1F4h+var_1F4] 3 +
call sub_420C50  +
mov [esp+1F4h+var_1E8] ebx +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov [esp+1F4h+var_1F4] offset aBFileClassSInc +
call off_492AE8  +
jmp loc_45A297  +
mov eax [eax+4] +
mov ecx [eax] +
jmp loc_45A1D6  +
mov ebx [esp+1F4h+var_1A4] +
mov [esp+1F4h+var_1A4] ebx +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1D4] 0 +
jmp loc_459B56  +
mov [esp+1F4h+var_1F0] 292Ah +
xor ebx ebx +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [ebp+10h] +
jmp loc_45A748  +
mov eax [esp+1F4h+var_E0] +
mov edx [ebp+10h] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
test eax eax +
jz loc_45A28C  +
mov [esp+1F4h+var_1B8] 0 +
jmp loc_45A78E  +
mov [esp+1F4h+var_1F4] edx +
call free  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_45A297  +
mov [esp+1F4h+var_1EC] offset aBfd_elf_final_ +
mov [esp+1F4h+var_1F0] 2B7Eh +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BD0  +
mov eax [ebx+0A0h] +
mov eax [eax+24Ch] +
test eax eax +
jz loc_45AA2B  +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+24Ch] 0 +
jmp loc_45AA2B  +
mov eax [esp+1F4h+var_E4] +
call sub_44BE40  +
test eax eax +
jnz loc_45ABC4  +
jmp loc_45989E  +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] ebp +
mov [esp+1F4h+var_1EC] eax +
call sub_429DA0  +
cmp esi eax +
jnz loc_45AF24  +
add [ebx+60h] esi +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+7Ch] +
test eax eax +
jnz loc_45BCD0  +
mov eax [esp+1F4h+var_E4] +
mov edi [eax+64h] +
test edi edi +
jz loc_45B224  +
test byte ptr [edi+14h] 4 +
mov ebx [edi+8Ch] +
jz loc_45B21D  +
mov eax [esp+1F4h+var_1C0] +
mov esi 1 +
mov eax [eax+0F8h] +
test eax eax +
jz loc_45B1D6  +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov esi eax +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_45B1F6  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+3Ch] +
mov ecx esi +
call sub_4912C6  +
test eax eax +
jz loc_45989E  +
mov ebp [ebx+4Ch] +
test ebp ebp +
jz loc_45B216  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+4Ch] +
mov ecx esi +
call sub_4912C6  +
test eax eax +
jz loc_45989E  +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_45B1A8  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_45B45B  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+4] 2 +
jz loc_45B325  +
mov esi [esp+1F4h+var_198] +
test esi esi +
jz loc_45B325  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov [esp+1F4h+var_1F0] offset a_rela_dyn +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_41E710  +
mov [esp+1F4h+var_1F0] offset a_rel_dyn +
mov ebx eax +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_41E710  +
test ebx ebx +
mov edi eax +
jz loc_45BB1B  +
mov eax [ebx+24h] +
test eax eax +
mov [esp+1F4h+var_1AC] eax +
jz loc_45BB1B  +
test edi edi +
jz loc_45BB02  +
mov eax [edi+24h] +
test eax eax +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
jnz loc_45B653  +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+4] +
mov ecx [esp+1F4h+var_1AC] +
mov edi [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+40h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+44h] +
mov [esp+1F4h+var_1A8] eax +
test ebx ebx +
jz loc_45B325  +
xor edx edx +
cmp dword ptr [ebx+4] 1 +
jnz loc_45B317  +
mov eax [ebx+10h] +
add edx [eax+24h] +
mov ebx [ebx] +
test ebx ebx +
jnz loc_45B30B  +
cmp edx ecx +
jz loc_45B697  +
xor edi edi +
xor ebp ebp +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_41E7F0  +
test eax eax +
mov ebx eax +
jnz loc_45B357  +
mov [esp+1F4h+var_1F0] 2D73h +
mov [esp+1F4h+var_1F4] offset a____Binutil_21 +
call sub_420BA0  +
mov esi [ebx+6Ch] +
mov eax [ebx+24h] +
add eax esi +
cmp esi eax +
mov [esp+1F4h+var_1C4] eax +
jnb loc_45B45B  +
mov eax [esp+1F4h+var_1C0] +
lea ecx [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] ecx +
mov [esp+1F4h+var_1B4] edi +
mov edx [eax+174h] +
mov ebx eax +
mov edi [esp+1F4h+var_1D4] +
mov eax [edx+30h] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov eax [esp+1F4h+var_164] +
cmp eax 12h +
jbe loc_45BA78  +
cmp eax 20h +
jz loc_45BA6E  +
jbe loc_45B993  +
cmp eax 6FFFFFF0h +
jz loc_45B989  +
ja loc_45B934  +
cmp eax 21h +
jz loc_45B8C0  +
cmp eax 6FFFFEF5h +
mov edx offset a_gnu_hash +
jnz loc_45B94B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1C8] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_41E710  +
mov edx [esp+1F4h+var_1C8] +
test eax eax +
jz loc_45B968  +
mov ecx [eax+3Ch] +
mov ecx [ecx+8Ch] +
cmp dword ptr [ecx+4] 7 +
jz loc_45B7A8  +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
mov edi [esp+1F4h+var_1D4] +
mov eax [eax+34h] +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov edx [ebx+174h] +
movzx eax byte ptr [edx+6] +
add esi eax +
cmp [esp+1F4h+var_1C4] esi +
ja loc_45B386  +
mov edi [esp+1F4h+var_198] +
test edi edi +
jz loc_45B547  +
mov edi [esp+1F4h+var_E0] +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+9Ch] +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
jz loc_45A297  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+3] +
test al 8 +
jz loc_45B4AB  +
mov edi [esp+1F4h+var_E0] +
test byte ptr [edi] 1 +
jnz loc_45B4AF  +
test al 10h +
jz loc_45B522  +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_41E7F0  +
test eax eax +
jz loc_45B522  +
mov ebx [eax+6Ch] +
mov esi [eax+24h] +
add esi ebx +
cmp ebx esi +
jnb loc_45B522  +
mov eax [esp+1F4h+var_1C0] +
lea edi [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] edi +
mov eax [eax+174h] +
mov edi [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_198] +
mov eax [eax+30h] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
cmp [esp+1F4h+var_164] 16h +
jz loc_45BEFC  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
add ebx edx +
cmp esi ebx +
ja loc_45B4E8  +
mov eax [esp+1F4h+var_198] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_45B547  +
mov ebx [esp+1F4h+var_E0] +
mov ecx [ebp+14h] +
test ch 1 +
jnz loc_45BF21  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_45B534  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_45BEBB  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov edx [eax+0A0h] +
test edx edx +
jz loc_45B58E  +
sub eax 0FFFFFF80h +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_46A740  +
test eax eax +
jz loc_45A297  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_461730  +
test eax eax +
jz loc_45A297  +
mov eax [esp+1F4h+var_E4] +
mov ebx 1 +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_44D450  +
mov eax [esp+1F4h+var_E4] +
mov ebp [esp+1F4h+var_1A4] +
mov eax [eax+0A0h] +
test ebp ebp +
mov eax [eax+934h] +
mov dword ptr [eax+38h] 1 +
jz loc_4598A0  +
mov edi [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F4] edi +
call sub_42B400  +
test eax eax +
mov esi eax +
jz loc_45989E  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] eax +
call sub_4676F0  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E0] edi +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] eax +
call sub_41EE20  +
mov [esp+1F4h+var_1F4] esi +
call free  +
jmp loc_4598A0  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1C4] eax +
test eax eax +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jz loc_45BE46  +
mov ebx [esp+1F4h+var_1C4] +
mov ebp 1 +
xor ecx ecx +
mov [esp+1F4h+var_1A8] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_45BDFD  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_45B67E  +
mov edi [esp+1F4h+var_1A8] +
jmp loc_45BE4D  +
mov eax [esp+1F4h+var_1B4] +
lea eax [eax+eax*2-3] +
lea eax ds:14h[eax*4] +
mov [esp+1F4h+var_1D4] eax +
mov eax edx +
xor edx edx +
div  [esp+1F4h+var_1C4] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jz loc_45B325  +
imul eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_42B590  +
test eax eax +
mov [esp+1F4h+var_1B4] eax +
jz loc_45B853  +
mov eax [esp+1F4h+var_1C8] +
mov ecx 0FFFFFF00h +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovz ebx ecx +
mov ecx [edi+0A0h] +
mov [esp+1F4h+var_1AC] ebx +
test ecx ecx +
jz loc_45B716  +
mov [esp+1F4h+var_1A0] edi +
mov ebp ecx +
cmp dword ptr [ebp+4] 1 +
jz loc_45B7CA  +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_45B701  +
mov edi [esp+1F4h+var_1A0] +
mov eax [esp+1F4h+var_1D4] +
xor ebp ebp +
mov ebx [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1E8] offset sub_44BB40 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] ebx +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx ebx +
cmp dword ptr [ecx+4] 1 +
jnz loc_45B9B2  +
add ebp 1 +
add ecx [esp+1F4h+var_1D4] +
cmp ebp [esp+1F4h+var_1B8] +
jnz loc_45B73E  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1E8] offset sub_44BBA0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
sub eax ebp +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx [edi+0A0h] +
test ecx ecx +
jz loc_45B797  +
mov esi ecx +
mov ecx edi +
cmp dword ptr [esi+4] 1 +
jz loc_45BA0D  +
mov esi [esi] +
test esi esi +
jnz loc_45B785  +
mov edi ecx +
mov eax [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_45B329  +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] offset aWarningSecti_0 +
call off_492AE8  +
mov [esp+1F4h+var_1F4] 0Fh +
call sub_420C50  +
jmp loc_45A297  +
mov esi [ebp+10h] +
mov ebx [esi+6Ch] +
test ebx ebx +
jz loc_45B8A0  +
mov eax [esi+38h] +
xor edx edx +
mov ecx [esi+24h] +
div  [esp+1F4h+var_1C4] +
add ecx ebx +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx ecx +
jnb loc_45B70B  +
lea edi [eax+8] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1B0] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+10Ch] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] esi +
call eax  +
mov ecx [esp+1F4h+var_19C] +
add ebx [esp+1F4h+var_1C4] +
mov [edi-4] eax +
mov eax [esp+1F4h+var_1AC] +
mov [edi-8] eax +
add edi [esp+1F4h+var_1D4] +
cmp ecx ebx +
ja loc_45B7FA  +
jmp loc_45B70B  +
mov eax [esp+1F4h+var_E0] +
xor ebp ebp +
mov edi [esp+1F4h+var_E4] +
mov eax [eax+18h] +
mov eax [eax+14h] +
mov [esp+1F4h+var_1E8] edi +
mov edi [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F4] edi +
xor edi edi +
mov [esp+1F4h+var_1F0] offset aNotEnoughMemor +
call eax  +
jmp loc_45B329  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_45B70B  +
mov eax [esp+1F4h+var_1B4] +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_45B329  +
mov ecx offset a_preinit_array +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1C8] ecx +
mov [esp+1F4h+var_1F4] eax +
call sub_41E710  +
mov ecx [esp+1F4h+var_1C8] +
test eax eax +
mov edi eax +
jz loc_45B913  +
mov edx [eax+24h] +
test edx edx +
jnz loc_45B901  +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1F4] offset aWarningSSectio +
call off_492AE8  +
mov edx [edi+24h] +
mov [esp+1F4h+var_160] edx +
mov eax [ebx+174h] +
jmp loc_45B42D  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_492AE8  +
jmp loc_45A297  +
cmp eax 6FFFFFFCh +
jz loc_45B95E  +
cmp eax 6FFFFFFEh +
mov edx offset a_gnu_version_r +
jz loc_45B3E7  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
mov esi ecx +
jmp loc_45B451  +
mov edx offset a_gnu_version_d +
jmp loc_45B3E7  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_492AE8  +
jmp loc_45A297  +
mov edx offset a_gnu_version +
jmp loc_45B3E7  +
cmp eax 1Ah +
jz loc_45B9F9  +
jbe loc_45B9E6  +
cmp eax 1Bh +
lea esi [esi+0] +
jz loc_45BA03  +
cmp eax 1Ch +
mov ecx offset a_fini_array +
jz loc_45B8C5  +
jmp loc_45B94B  +
cmp [esp+1F4h+var_1B8] ebp +
jbe loc_45B755  +
mov esi ebp +
mov edx ecx +
mov ebx ecx +
mov eax [ebx+0Ch] +
xor eax [edx+0Ch] +
test [esp+1F4h+var_1AC] eax +
cmovnz edx ebx +
add esi 1 +
mov eax [edx+8] +
mov [ebx] eax +
add ebx [esp+1F4h+var_1D4] +
cmp esi [esp+1F4h+var_1B8] +
jnz loc_45B9C2  +
jmp loc_45B755  +
cmp eax 19h +
mov edx offset a_init_array +
jz loc_45B3E7  +
jmp loc_45B94B  +
mov edx offset a_fini_array +
jmp loc_45B3E7  +
mov ecx offset a_init_array +
jmp loc_45B8C5  +
mov eax [esi+10h] +
xor edx edx +
mov ebx [eax+6Ch] +
mov edi [eax+24h] +
mov eax [eax+38h] +
add edi ebx +
div  [esp+1F4h+var_1C4] +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx edi +
jnb loc_45B78F  +
add eax 8 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1B8] ecx +
mov [esp+1F4h+var_1EC] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1A8] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
add ebx [esp+1F4h+var_1C4] +
add eax [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_1B8] +
cmp edi ebx +
ja loc_45BA35  +
jmp loc_45B78F  +
mov edx offset a_preinit_array +
jmp loc_45B3E7  +
cmp eax 11h +
jnb loc_45BC2B  +
cmp eax 6 +
jz loc_45BC18  +
ja loc_45BB7A  +
cmp eax 4 +
jz loc_45BB70  +
lea esi [esi+0] +
ja loc_45BB66  +
test eax eax +
jnz loc_45B94B  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
test ebp ebp +
jz loc_45B957  +
cmp [esp+1F4h+var_1C4] ecx +
jbe loc_45B957  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp eax 4 +
jz loc_45BB59  +
cmp eax 9 +
jnz loc_45B957  +
mov [esp+1F4h+var_164] 6FFFFFFAh +
mov [esp+1F4h+var_160] ebp +
mov eax edx +
xor ebp ebp +
jmp loc_45B42D  +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jmp loc_45B2E7  +
test edi edi +
jz loc_45B327  +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_45B325  +
mov eax [esp+1F4h+var_1C8] +
mov ebx [edi+0A0h] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+3] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+38h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+3Ch] +
mov [esp+1F4h+var_1A8] eax +
jmp loc_45B305  +
mov [esp+1F4h+var_164] 6FFFFFF9h +
jmp loc_45BAF2  +
mov edx offset a_dynstr +
jmp loc_45B3E7  +
mov edx offset a_hash +
jmp loc_45B3E7  +
cmp eax 0Ch +
jz loc_45C13A  +
jbe loc_45BC22  +
cmp eax 0Dh +
lea esi [esi+0] +
jnz loc_45B94B  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+4Ch] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E4] 1 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_42D940  +
test eax eax +
jz loc_45B94B  +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-3] +
cmp dl 1 +
ja loc_45B94B  +
mov ecx [eax+18h] +
mov [esp+1F4h+var_160] ecx +
mov edx [eax+14h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_45BC9A  +
add ecx [eax+1Ch] +
mov eax [edx+38h] +
add eax ecx +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
jmp loc_45B42D  +
mov edx offset a_dynsym +
jmp loc_45B3E7  +
cmp eax 8 +
ja loc_45B94B  +
mov ecx [esp+1F4h+var_E4] +
lea edx [eax-11h] +
cmp edx 2 +
mov [esp+1F4h+var_160] 0 +
sbb edi edi +
and edi 5 +
mov edx [ecx+0A0h] +
add edi 4 +
mov ecx [edx+214h] +
cmp ecx 1 +
mov [esp+1F4h+var_1B8] ecx +
jbe loc_45BC8F  +
mov edx [edx+40h] +
lea ecx [edx+4] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [esp+1F4h+var_1B8] +
lea ecx [edx+ecx*4] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov edx [ecx] +
cmp [edx+4] edi +
jz loc_45BCB0  +
add [esp+1F4h+var_1C8] 4 +
mov ecx [esp+1F4h+var_1B8] +
cmp [esp+1F4h+var_1C8] ecx +
jnz loc_45BC75  +
mov eax [ebx+174h] +
jmp loc_45B42D  +
mov [esp+1F4h+var_160] 0 +
mov eax [ebx+174h] +
jmp loc_45B42D  +
test byte ptr [edx+8] 2 +
jz loc_45BC80  +
cmp eax 8 +
jz loc_45BCC4  +
cmp eax 12h +
jnz loc_45C149  +
mov edx [edx+18h] +
add [esp+1F4h+var_160] edx +
jmp loc_45BC80  +
mov edi [esp+1F4h+var_1B4] +
xor ebx ebx +
mov [esp+1F4h+var_1D0] ebx +
mov ecx [edi+60h] +
mov ebx [edi+5Ch] +
mov [esp+1F4h+var_1D4] ecx +
mov ecx [edi+58h] +
mov edi [esp+1F4h+var_E4] +
add [esp+1F4h+var_1D4] ecx +
adc [esp+1F4h+var_1D0] ebx +
mov esi [edi+0A0h] +
mov ebx [esi+208h] +
test ebx ebx +
jz loc_45BD10  +
mov edx [ebx] +
test edx edx +
jnz loc_45C08E  +
mov eax [esp+1F4h+var_138] +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0C4h] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_467110  +
mov edx [esp+1F4h+var_1D0] +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
mov [esi+0D0h] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
lea eax [esi+0B8h] +
mov [esp+1F4h+var_1F4] eax +
call sub_43FF50  +
mov edi [esp+1F4h+var_E4] +
mov ecx [edi+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [esi+0C8h] +
mov [ecx+24h] edx +
mov edx [esi+0CCh] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_429F00  +
test eax eax +
jnz loc_45989E  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4671C0  +
test eax eax +
jnz loc_45B19A  +
jmp loc_45989E  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_45C16B  +
div  edi +
test edx edx +
jz loc_45B688  +
mov eax ebp +
xor eax 1 +
test cl al +
jnz loc_45BE8E  +
mov ecx 1 +
mov ebp 1 +
jmp loc_45B688  +
mov ebp 1 +
xor ecx ecx +
mov eax [edi+0A0h] +
test eax eax +
mov [esp+1F4h+var_1A8] eax +
jz loc_45BE75  +
mov ebx eax +
mov [esp+1F4h+var_1A0] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_45C187  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_45BE61  +
mov edi [esp+1F4h+var_1A0] +
test ecx ecx +
jnz loc_45C1DE  +
mov ebx [esp+1F4h+var_1C4] +
jmp loc_45B2E7  +
test ecx ecx +
jz loc_45C230  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_492AE8  +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] 5 +
call sub_420C50  +
jmp loc_45B329  +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_43B5B0 +
mov [esp+1F4h+var_164] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_41ED30  +
mov ecx [esp+1F4h+var_164] +
test ecx ecx +
jnz loc_45A297  +
jmp loc_45B55C  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+3] 10h +
jz loc_45BFC0  +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPXReadOnlySegm +
call eax  +
jmp loc_45B522  +
mov eax [ebp+24h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_45B540  +
mov eax [ebp+3Ch] +
cmp eax offset off_492990 +
jz loc_45B540  +
and ecx 100000h +
jz loc_45B540  +
mov ecx [ebx+1Ch] +
cmp [ecx+0A0h] ebp +
jz loc_45B540  +
cmp [ecx+0A4h] ebp +
jz loc_45B540  +
mov esi [ebp+0] +
mov ecx 8 +
mov edi offset a_dynstr +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_45BFDB  +
mov edi [esp+1F4h+var_1D4] +
mov ecx [ebp+6Ch] +
mov [esp+1F4h+var_1E0] edi +
mov edi [ebp+38h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1E8] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_41EE20  +
test eax eax +
jnz loc_45B540  +
jmp loc_45A297  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPWarningCreati +
call eax  +
jmp loc_45B522  +
mov eax [eax+8Ch] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_429F00  +
test eax eax +
jnz loc_45A297  +
mov eax [ebx+1Ch] +
mov eax [eax+50h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4671C0  +
test eax eax +
jnz loc_45B540  +
jmp loc_45A297  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
jmp loc_45AD22  +
xor edi edi +
jmp loc_45AC23  +
mov eax [esp+1F4h+var_E4] +
call sub_44BE40  +
test eax eax +
jz loc_45989E  +
mov edx [ebx+3Ch] +
jmp loc_45ACAD  +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_467120  +
mov [ebx+8] eax +
jmp loc_45AE8F  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
jmp loc_45989E  +
lea esi ds:0[eax*4] +
mov edx [esp+1F4h+var_1D0] +
mov eax [esp+1F4h+var_1D4] +
mov dword ptr [ebx+4] 12h +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [ebx+24h] 4 +
mov [ebx+18h] esi +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] ebx +
call sub_43FF50  +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+10h] +
mov [esp+1F4h+var_1D0] edx +
mov edx [ebx+14h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_429F00  +
test eax eax +
jnz loc_45989E  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_10C] +
mov [esp+1F4h+var_1F4] eax +
call sub_429DA0  +
cmp eax esi +
jnz loc_45989E  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+0A0h] +
jmp loc_45BD10  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+48h] +
jmp loc_45BBA0  +
mov ecx [esp+1F4h+var_160] +
mov edx [edx+0Ch] +
test ecx ecx +
jz loc_45C15F  +
cmp ecx edx +
jbe loc_45BC80  +
mov [esp+1F4h+var_160] edx +
jmp loc_45BC80  +
div  edi +
test edx edx +
jnz loc_45C1C7  +
mov eax ebp +
test cl al +
jnz loc_45BE8E  +
mov ecx 1 +
xor ebp ebp +
jmp loc_45B688  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_45C222  +
div  edi +
test edx edx +
jz loc_45BE6B  +
test ebp ebp +
jz loc_45C1F3  +
mov ecx 1 +
mov ebp 1 +
jmp loc_45BE6B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSor_0 +
mov [esp+1F4h+var_1F0] eax +
jmp loc_45BEA0  +
test ebp ebp +
jnz loc_45BE7D  +
mov ebx [esp+1F4h+var_1A8] +
mov ecx [esp+1F4h+var_1B0] +
jmp loc_45BB3E  +
test ecx ecx +
jz loc_45C1B8  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_492AE8  +
mov [esp+1F4h+var_1F4] 5 +
call sub_420C50  +
jmp loc_45B329  +
div  edi +
test edx edx +
jnz loc_45C1C7  +
test ebp ebp +
jnz loc_45BE86  +
mov ecx 1 +
xor ebp ebp +
jmp loc_45BE6B  +
***
mov eax [esp+10h] +
mov edx [esp+4] +
mov ecx [esp+14h] +
test eax eax +
jz loc_45C277  +
movzx edx byte ptr [eax+0Ch] +
cmp dl 3 +
jb loc_45C274  +
cmp dl 4 +
jbe loc_45C270  +
cmp dl 5 +
jnz loc_45C274  +
mov eax [eax+14h] +
mov eax [eax+4] +
retn   +
***
mov eax [eax+14h] +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [ecx+10h] +
mov eax [edx+94h] +
mov [esp+8] ecx +
mov [esp+4] eax +
jmp sub_43F6C0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
mov ecx [ebp+20h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_14] eax +
mov eax [ebp+4] +
mov edx [eax+4] +
shr edx cl +
test edx edx +
jz loc_45C401  +
cmp edx [ebp+14h] +
jb loc_45C340  +
mov ecx [ebp+1Ch] +
sub edx [ebp+18h] +
mov ebx [ecx+edx*4] +
test ebx ebx +
jnz loc_45C2E8  +
jmp loc_45C417  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_45C2E5  +
mov ecx [ebx+3Ch] +
or byte ptr [ebx+34h] 20h +
test ecx ecx +
jz loc_45C303  +
or byte ptr [ecx+34h] 20h +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_45C313  +
sub edx 1 +
cmp dl 1 +
jbe loc_45C366  +
mov [esp+2Ch+arg_10] 0 +
mov [esp+2Ch+arg_C] ebx +
mov [esp+2Ch+arg_8] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+arg_4] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+arg_0] eax +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov ecx [ebp+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_45C2D3  +
mov [esp+2Ch+arg_10] ebx +
mov [esp+2Ch+arg_C] 0 +
jmp loc_45C31F  +
mov esi [ebx+4] +
mov ecx 8 +
mov edi offset a__start_ +
mov [esp+2Ch+var_10] esi +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_45C3F8  +
mov esi [esp+2Ch+var_10] +
mov ecx 7 +
mov edi offset a__stop_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_45C313  +
mov esi [esp+2Ch+var_10] +
add esi 7 +
test esi esi +
jz loc_45C313  +
cmp byte ptr [esi] 0 +
jz loc_45C313  +
mov edi [esp+2Ch+var_20] +
mov edi [edi+34h] +
test edi edi +
jz loc_45C313  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edi +
call sub_41E710  +
test eax eax +
jz loc_45C3E6  +
test byte ptr [eax+18h] 8 +
jz loc_45C40B  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_45C3D0  +
mov eax [ebp+4] +
jmp loc_45C313  +
mov esi [esp+2Ch+var_10] +
add esi 8 +
jmp loc_45C3B0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+var_14] +
mov dword ptr [esi] 1 +
jmp loc_45C403  +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_1C] +
mov eax [eax+18h] +
mov edx [esi+94h] +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] offset aFPCorruptInput +
call eax  +
xor eax eax +
jmp loc_45C403  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+8Ch] +
or byte ptr [ebx+18h] 8 +
mov eax [eax+7Ch] +
test eax eax +
jz loc_45C466  +
test byte ptr [eax+18h] 8 +
jz loc_45C5E0  +
mov eax [ebx+94h] +
test byte ptr [ebx+14h] 4 +
mov eax [eax+0A0h] +
mov esi [eax+248h] +
jz loc_45C520  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_45C520  +
cmp ebx esi +
jz loc_45C570  +
mov edx [esp+5Ch+arg_0] +
lea ebp [esp+5Ch+var_34] +
mov ecx ebx +
mov eax ebp +
call sub_451150  +
test eax eax +
jz loc_45C648  +
mov eax [esp+5Ch+var_30] +
cmp [esp+5Ch+var_2C] eax +
jbe loc_45C655  +
mov [esp+5Ch+var_44] esi +
mov edi [esp+5Ch+arg_8] +
mov esi [esp+5Ch+arg_0] +
jmp loc_45C4E5  +
mov eax [esp+5Ch+var_30] +
add eax 0Ch +
cmp [esp+5Ch+var_2C] eax +
mov [esp+5Ch+var_30] eax +
jbe loc_45C651  +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
call sub_45C670  +
test eax eax +
jnz loc_45C4D0  +
mov esi [esp+5Ch+var_44] +
xor ecx ecx +
xor edi edi +
mov byte ptr [esp+5Ch+var_44] 0 +
mov edx ebx +
mov eax ebp +
mov [esp+5Ch+var_40] ecx +
call sub_44ABE0  +
mov ecx [esp+5Ch+var_40] +
jmp loc_45C531  +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
cmp byte ptr [esp+5Ch+var_44] 0 +
jnz loc_45C570  +
mov eax [ebx+8Ch] +
test cl cl +
mov edx [eax+84h] +
jz loc_45C563  +
test edx edx +
jz loc_45C563  +
test byte ptr [edx+18h] 8 +
mov eax 1 +
jz loc_45C620  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8Ch] +
mov edx [eax+80h] +
test edx edx +
jz loc_45C610  +
mov edx [esp+5Ch+arg_0] +
mov ecx esi +
xor edi edi +
lea eax [esp+5Ch+var_34] +
call sub_451150  +
xor ecx ecx +
test eax eax +
jz loc_45C538  +
lea eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_45F9D0  +
mov edx esi +
test eax eax +
setnz cl  +
lea eax [esp+5Ch+var_34] +
movzx edi cl +
mov [esp+5Ch+var_44] ecx +
call sub_44ABE0  +
mov ecx [esp+5Ch+var_44] +
jmp loc_45C538  +
mov edi [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_5C] eax +
call sub_45C440  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_45C466  +
jmp loc_45C55B  +
mov ecx 1 +
mov edi 1 +
jmp loc_45C53E  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_45C440  +
test eax eax +
setnz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor edi edi +
jmp loc_45C538  +
mov esi [esp+5Ch+var_44] +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
jmp loc_45C50A  +
***
push ebx  +
sub esp 30h +
lea eax [esp+30h+var_4] +
mov esi [esp+30h+arg_0] +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_C] +
mov edi [esp+30h+arg_8] +
mov [esp+30h+var_4] 0 +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] eax +
call sub_45C290  +
test eax eax +
mov ebx eax +
jnz loc_45C6D6  +
jmp loc_45C710  +
or byte ptr [ebx+18h] 8 +
mov eax [esp+30h+var_4] +
test eax eax +
jz loc_45C710  +
mov eax [ebx+94h] +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_41E750  +
test eax eax +
mov ebx eax +
jz loc_45C710  +
test byte ptr [ebx+18h] 8 +
jnz loc_45C6B6  +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_45C6B2  +
test byte ptr [eax+29h] 8 +
jnz loc_45C6B2  +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_45C440  +
test eax eax +
jnz loc_45C6B6  +
xor eax eax +
jmp loc_45C715  +
mov eax 1 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+34h] +
test eax eax +
mov [esp+14h] eax +
jnz loc_45C756  +
jmp loc_45C8E3  +
mov eax [esp+14h] +
mov eax [eax+9Ch] +
test eax eax +
mov [esp+14h] eax +
jz loc_45C8E3  +
mov eax [esp+14h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45C740  +
mov eax [esp+14h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+18h] eax +
jz loc_45C740  +
xor ebx ebx +
xor edx edx +
jmp loc_45C7A0  +
or byte ptr [eax+18h] 8 +
test ebx ebx +
jnz loc_45C7BB  +
and ch 20h +
jz loc_45C799  +
mov esi [eax] +
mov edi offset a_debug_line_ +
mov ecx 0Ch +
cmps   +
setz bl  +
movzx ebx bl +
mov eax [eax+0Ch] +
test eax eax +
jz loc_45C7C7  +
mov ecx [eax+14h] +
test ecx 100000h +
jnz loc_45C778  +
test byte ptr [eax+18h] 8 +
mov esi 1 +
cmovnz edx esi +
test ebx ebx +
jz loc_45C780  +
mov eax [eax+0Ch] +
mov ebx 1 +
test eax eax +
jnz loc_45C7A0  +
test edx edx +
mov [esp+1Ch] ebx +
jz loc_45C740  +
mov ebp [esp+18h] +
xor esi esi +
jmp loc_45C801  +
test ah 20h +
jnz loc_45C7E9  +
test al 7 +
jnz loc_45C7FA  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_45C8F0  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_45C858  +
mov eax [ebp+14h] +
test eax 2000000h +
jz loc_45C7E0  +
mov eax [ebp+8Ch] +
mov ebx 1 +
mov ecx 1 +
mov edi [eax+7Ch] +
mov eax edi +
mov edx [eax+14h] +
mov eax [eax+8Ch] +
test dh 20h +
mov eax [eax+7Ch] +
cmovz ebx esi +
and edx 7 +
cmovnz ecx esi +
cmp edi eax +
jnz loc_45C820  +
or ebx ecx +
jz loc_45C7FA  +
or byte ptr [eax+18h] 8 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp edi eax +
jnz loc_45C840  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_45C801  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_45C740  +
mov ebp [esp+18h] +
test byte ptr [ebp+14h] 10h +
jz loc_45C8D7  +
test byte ptr [ebp+18h] 8 +
jnz loc_45C8D7  +
mov eax [ebp+0] +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
mov ebx [esp+18h] +
mov esi eax +
lea esi [esi+0] +
test byte ptr [ebx+18h] 8 +
jz loc_45C8D0  +
test byte ptr [ebx+15h] 20h +
jz loc_45C8D0  +
mov edi [ebx] +
mov [esp] edi +
call strlen  +
cmp esi eax +
jnb loc_45C8D0  +
mov ecx [esp+1Ch] +
sub eax esi +
lea edx [edi+eax] +
mov [esp+8] esi +
mov [esp] edx +
mov [esp+4] ecx +
call strncmp  +
test eax eax +
jnz loc_45C8D0  +
and byte ptr [ebx+18h] 0F7h +
nop   +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_45C890  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_45C868  +
jmp loc_45C740  +
***
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
or byte ptr [ebp+18h] 8 +
jmp loc_45C7FA  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
movzx eax byte ptr [ebx+0Ch] +
mov ecx [esi+78h] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_45C927  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+33h] +
test dl 4 +
jnz loc_45C969  +
test dl 2 +
jnz loc_45C940  +
and edx 0Ah +
jnz loc_45C91C  +
cmp al 3 +
jnz loc_45C91C  +
nop   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_45C91C  +
movzx eax byte ptr [esi] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jbe loc_45C996  +
movzx eax byte ptr [ebx+34h] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_45C97E  +
mov eax [ebx+14h] +
or dword ptr [eax+14h] 200000h +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+4] +
mov eax [esi+7Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_430980  +
test eax eax +
jz loc_45C969  +
jmp loc_45C91C  +
***
test al 10h +
jnz loc_45C95B  +
test byte ptr [ebx+34h] 10h +
nop   +
jz loc_45C91C  +
test ecx ecx +
jz loc_45C91C  +
mov edx [ebx+4] +
mov eax [ecx+10h] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
mov [esp+8] edx +
call eax  +
test eax eax +
jnz loc_45C95B  +
jmp loc_45C91C  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov ebx [esi+40h] +
test ebx ebx +
jnz loc_45C9E8  +
jmp loc_45CA40  +
mov ebx [ebx] +
test ebx ebx +
jz loc_45CA40  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esi+1Ch] +
mov [esp] eax +
call sub_42D940  +
test eax eax +
jz loc_45C9E2  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_45C9E2  +
mov eax [eax+14h] +
cmp eax offset off_492990 +
jz loc_45C9E2  +
mov ebx [ebx] +
or dword ptr [eax+14h] 200000h +
test ebx ebx +
jnz loc_45C9E8  +
lea esi [esi+0] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+64h] +
mov ebp [eax+34h] +
test ebp ebp +
jnz loc_45CA75  +
jmp loc_45CB02  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_45CB02  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45CA67  +
mov edx [esp+64h] +
mov ecx ebp +
lea eax [esp+18h] +
call sub_44AAF0  +
test eax eax +
jz loc_45CB07  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_45CAA7  +
jmp loc_45CA67  +
***
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_45CA67  +
mov esi [ebx] +
mov edi offset a_eh_frame_en_0 +
mov ecx 0Fh +
cmps   +
jnz loc_45CAA0  +
mov edx [esp+64h] +
mov ecx ebp +
mov [esp] ebx +
lea eax [esp+18h] +
call sub_4510B0  +
test eax eax +
jz loc_45CAA0  +
lea eax [esp+18h] +
mov [esp+8] eax +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_45E320  +
mov eax [esp+18h] +
test eax eax +
jz loc_45CAA0  +
mov edx [ebx+8Ch] +
cmp eax [edx+68h] +
jz loc_45CAA0  +
mov [esp] eax +
call free  +
jmp loc_45CAA0  +
***
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+70h] +
mov edi [esp+74h] +
mov dword ptr [esp+20h] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1AEh] 1 +
mov [esp+18h] eax +
jz loc_45CB46  +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_45CB60  +
mov dword ptr [esp] offset aWarningGcSecti +
call off_492AE8  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+18h] +
mov eax [eax+0B4h] +
mov [esp] edi +
call eax  +
mov eax [edi+1Ch] +
mov ebp [edi+34h] +
mov [esp+1Ch] eax +
movzx eax byte ptr [edi+3] +
and eax 6 +
cmp al 4 +
jz loc_45CC2D  +
test ebp ebp +
jz loc_45CC2D  +
lea esi [esp+28h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] ebp +
call sub_41E710  +
test eax eax +
mov ebx eax +
jnz loc_45CC05  +
jmp loc_45CC14  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] ebp +
call sub_45E480  +
mov eax [ebx+8Ch] +
mov eax [eax+88h] +
test eax eax +
jz loc_45CBE6  +
test byte ptr [ebx+16h] 10h +
jnz loc_45CBE6  +
mov eax [ebp+0A0h] +
mov [eax+248h] ebx +
mov edx ebx +
mov eax esi +
call sub_44ABE0  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call sub_41E750  +
test eax eax +
mov ebx eax +
jz loc_45CC14  +
mov ecx ebx +
mov edx edi +
mov eax esi +
call sub_451150  +
test eax eax +
jnz loc_45CBB0  +
movzx eax byte ptr [edi+3] +
mov ebp [ebp+9Ch] +
and eax 6 +
cmp al 4 +
jz loc_45CC2D  +
test ebp ebp +
jnz loc_45CB94  +
mov eax [esp+1Ch] +
lea ebx [esp+20h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_44A8A0 +
mov [esp] eax +
call sub_42E0B0  +
mov eax [esp+20h] +
test eax eax +
jnz loc_45CC5B  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_4511C0 +
mov [esp] esi +
call sub_42E0B0  +
mov eax [esp+20h] +
test eax eax +
jz loc_45CC51  +
mov eax [esi+30h] +
test eax eax +
jnz loc_45CF1F  +
mov esi [edi+34h] +
mov eax [esp+18h] +
test esi esi +
mov ebx [eax+0BCh] +
jz loc_45CD3D  +
mov [esp+1Ch] ebx +
mov ebp esi +
mov ebx [esp+70h] +
jmp loc_45CCB5  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_45CD39  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45CCA7  +
mov ecx [esp+18h] +
mov edx [ebx+4] +
mov ecx [ecx+74h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
test eax eax +
jz loc_45CCA7  +
mov esi [ebp+64h] +
test esi esi +
jnz loc_45CCF7  +
lea esi [esi+0] +
jmp loc_45CCA7  +
***
mov eax [esi+8Ch] +
cmp dword ptr [eax+4] 7 +
jz loc_45CD30  +
nop   +
mov esi [esi+0Ch] +
test esi esi +
jz loc_45CCA7  +
test byte ptr [esi+18h] 8 +
jnz loc_45CCF0  +
mov eax [esi+14h] +
test ah 80h +
jnz loc_45CCF0  +
test eax 200000h +
jz loc_45CCE2  +
mov eax [esp+1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [esp+8] eax +
call sub_45C440  +
test eax eax +
jnz loc_45CCF0  +
xor eax eax +
jmp loc_45CC53  +
***
mov eax [eax+7Ch] +
test eax eax +
jnz loc_45CCF0  +
jmp loc_45CD0C  +
***
mov ebx [esp+1Ch] +
mov eax [esp+18h] +
mov eax [eax+0C0h] +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
mov eax [esp+70h] +
mov esi [edi+34h] +
mov eax [eax+4] +
test esi esi +
mov eax [eax+1B0h] +
mov [esp+18h] eax +
mov ebp [eax+0C4h] +
jnz loc_45CD81  +
jmp loc_45CED9  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_45CED9  +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45CD73  +
mov ecx [esp+18h] +
mov edx [ecx+74h] +
mov ecx [esp+70h] +
mov ecx [ecx+4] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test eax eax +
jz loc_45CD73  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_45CE70  +
jmp loc_45CD73  +
***
test ebp ebp +
jz loc_45CE65  +
mov eax [ebx+14h] +
test al 4 +
nop   +
jz loc_45CE65  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_45CE65  +
test byte ptr [edi+1] 8 +
jz loc_45CDE0  +
test ah 20h +
jnz loc_45CE65  +
cmp dword ptr [ebx+3Ch] offset off_492990 +
jz loc_45CE65  +
movzx eax byte ptr [edi+2] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp] edx +
mov [esp+10h] eax +
mov [esp+4] ebx +
call sub_450E60  +
test eax eax +
mov edx eax +
jz loc_45CC51  +
mov eax [ebx+94h] +
mov [esp+1Ch] edx +
mov [esp+0Ch] edx +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call ebp  +
mov ecx [ebx+8Ch] +
mov edx [esp+1Ch] +
cmp edx [ecx+68h] +
jz loc_45CE5D  +
mov [esp] edx +
mov [esp+1Ch] eax +
call free  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_45CC51  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_45CD73  +
mov edx [ebx+14h] +
test edx 2000000h +
jz loc_45CE97  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
movzx ecx byte ptr [eax+18h] +
movzx eax byte ptr [ebx+18h] +
and ecx 8 +
and eax 0FFFFFFF7h +
or eax ecx +
mov [ebx+18h] al +
test byte ptr [ebx+18h] 8 +
jnz loc_45CE65  +
test dh 80h +
jnz loc_45CE65  +
or dh 80h +
mov [ebx+14h] edx +
test byte ptr [edi+5] 10h +
jz loc_45CDB2  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_45CDB2  +
mov eax [ebx] +
mov [esp+4] esi +
mov dword ptr [esp] offset aRemovingUnused +
mov [esp+8] eax +
call off_492AE8  +
jmp loc_45CDB2  +
***
mov eax [esp+18h] +
mov [esp+28h] edi +
mov eax [eax+0DCh] +
mov dword ptr [esp+4] offset sub_44BBE0 +
mov [esp+2Ch] eax +
lea eax [esp+28h] +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_42E0B0  +
mov eax [esp+70h] +
lea ecx [esp+24h] +
mov edx edi +
call sub_44AEE0  +
mov eax 1 +
jmp loc_45CB58  +
***
mov eax [esp+18h] +
mov eax [eax+0B8h] +
mov [esp+8] edi +
mov [esp+4] eax +
mov eax [esp+1Ch] +
mov [esp] eax +
call sub_42E0B0  +
jmp loc_45CC86  +
***
push ebp  +
xor edx edx +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov esi [esp+34h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov ecx [edi+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+60h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
jnz loc_45CF90  +
sub eax [ecx+68h] +
mov ecx [ecx+218h] +
lea edx [ecx+eax*4] +
cmp ecx edx +
jnz loc_45CFA7  +
jmp loc_45CFE0  +
add ecx 4 +
cmp edx ecx +
jz loc_45CFE0  +
mov ebx [ecx] +
test ebx ebx +
jz loc_45CFA0  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_45CFA0  +
cmp [ebx+14h] esi +
jnz loc_45CFA0  +
cmp [ebx+18h] ebp +
jnz loc_45CFA0  +
mov eax [ebx+44h] +
test eax eax +
jz loc_45D00F  +
mov edx [esp+38h] +
test edx edx +
jz loc_45D030  +
mov edi [esp+38h] +
mov [eax+8] edi +
mov eax 1 +
jmp loc_45D007  +
mov [esp+0Ch] ebp +
mov [esp+8] esi +
mov [esp+4] edi +
mov dword ptr [esp] offset aBALuNoSymbolFo +
call off_492AE8  +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_425930  +
test eax eax +
mov [ebx+44h] eax +
jnz loc_45CFC9  +
xor eax eax +
jmp loc_45D007  +
***
mov dword ptr [eax+8] 0FFFFFFFFh +
mov eax 1 +
jmp loc_45D007  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov esi [esp+48h] +
mov ebx [esp+4Ch] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax [esi+44h] +
test eax eax +
jz loc_45D132  +
cmp [eax] ebx +
ja loc_45D115  +
mov edx 1 +
movzx edi cl +
mov eax [eax+4] +
shl edx cl +
cmp byte ptr [esi+0Ch] 1 +
mov [esp+14h] edi +
lea edi [edx+ebx] +
jz loc_45D09E  +
mov edi [esi+2Ch] +
lea ebp [edx+ebx] +
cmp ebx edi +
cmovnb edi ebp +
lea edi [edi+edx-1] +
neg edx  +
and edi edx +
mov edx edi +
shr edx cl +
test eax eax +
mov [esp+18h] ecx +
lea edx ds:4[edx*4] +
jz loc_45D160  +
sub eax 4 +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+1Ch] edx +
call sub_42B490  +
test eax eax +
mov ebp eax +
jz loc_45D155  +
mov eax [esi+44h] +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+4] 0 +
shr eax cl +
lea eax ds:4[eax*4] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp] eax +
call memset  +
mov eax [esi+44h] +
add ebp 4 +
mov ecx [esp+14h] +
mov [eax+4] ebp +
mov [eax] edi +
jmp loc_45D11B  +
mov ebp [eax+4] +
movzx ecx cl +
shr ebx cl +
mov eax 1 +
mov dword ptr [ebp+ebx*4+0] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edx +
mov [esp+14h] ecx +
call sub_425930  +
mov ecx [esp+14h] +
test eax eax +
mov [esi+44h] eax +
jnz loc_45D071  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] edx +
call sub_42B590  +
test eax eax +
mov ebp eax +
jnz loc_45D104  +
xor eax eax +
jmp loc_45D157  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+48h] +
mov eax [eax+8Ch] +
mov eax [eax+8] +
mov [esp+1Ch] eax +
mov eax [esp+44h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_45D1D0  +
mov edx [eax] +
mov ecx [esp+1Ch] +
xor eax eax +
and ecx edx +
cmp ecx edx +
jnz loc_45D1C2  +
mov eax [esp+44h] +
mov ecx [esp+1Ch] +
test [eax+4] ecx +
setz al  +
movzx eax al +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov eax [eax+30h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [esp+44h] +
mov ebx [eax+8] +
test ebx ebx +
jz loc_45D2DE  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_45D22D  +
mov edx [ebx] +
test edx edx +
jz loc_45D29D  +
mov ecx [esp+14h] +
or eax ecx +
cmp edx 1 +
cmovnz eax ecx +
mov [esp+14h] eax +
mov dword ptr [ebx+8] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_45D2BF  +
mov eax [edi+108h] +
test eax eax +
jz loc_45D243  +
mov edx [ebx+4] +
mov [esp] edx +
call eax  +
test eax eax +
jnz loc_45D201  +
mov esi [ebx+4] +
xor ebp ebp +
mov eax ds:off_4B3000[ebp*8] +
mov [esp] esi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_45D290  +
add ebp 1 +
cmp ebp 0Ch +
jnz loc_45D248  +
mov eax [ebx+8] +
test eax eax +
jnz loc_45D222  +
mov eax [esp+40h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] esi +
mov dword ptr [esp] offset aUnrecognizedIn +
call eax  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx] +
test eax eax +
jnz loc_45D2A6  +
mov eax ds:dword_4B3004[ebp*8] +
or [esp+18h] eax +
jmp loc_45D21B  +
***
cmp eax 1 +
jnz loc_45D21B  +
mov eax ds:dword_4B3004[ebp*8] +
or [esp+14h] eax +
jmp loc_45D21B  +
***
mov edx [esp+18h] +
mov ebp [esp+14h] +
mov eax [esp+44h] +
or edx [eax] +
mov dword ptr [eax+0Ch] 1 +
or [eax+4] ebp +
mov [eax] edx +
jmp loc_45D1A5  +
***
xor ebp ebp +
xor edx edx +
jmp loc_45D2C7  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_4] +
cmp [eax+30h] ecx +
jz loc_45D329  +
mov [esp+3Ch+var_38] 32FAh +
mov [esp+3Ch+var_3C] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
xor eax eax +
cmp dword ptr [edx+28h] 1 +
jz loc_45D340  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_20] +
xor ebp ebp +
test byte ptr [eax+1ADh] 1 +
jz loc_45D458  +
mov eax [esp+3Ch+arg_4] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_45D371  +
jmp loc_45D427  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_45D420  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45D363  +
mov eax [ebx+0A0h] +
mov esi [eax+21Ch] +
test esi esi +
jz loc_45D363  +
mov ecx [eax+928h] +
test ecx ecx +
jz loc_45D410  +
mov ecx [esp+3Ch+var_20] +
mov eax [eax+60h] +
mov edx [ecx+174h] +
movzx edi byte ptr [edx+5] +
xor edx edx +
div  edi +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_24] +
test edx edx +
jz loc_45D363  +
xor edi edi +
jmp loc_45D3FD  +
mov eax [esp+3Ch+var_20] +
mov ecx [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_0] +
mov [esi+edi*4] ebp +
mov eax [eax+180h] +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] edx +
call eax  +
add ebp eax +
add edi 1 +
cmp edi [esp+3Ch+var_24] +
jz loc_45D363  +
mov eax [esi+edi*4] +
test eax eax +
jg loc_45D3C0  +
mov dword ptr [esi+edi*4] 0FFFFFFFFh +
jmp loc_45D3F0  +
mov eax [eax+68h] +
mov [esp+3Ch+var_24] eax +
jmp loc_45D3AD  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] offset sub_44A960 +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] eax +
call sub_42E0B0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+17Ch] +
jmp loc_45D353  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
mov [esp+4] esi +
call sub_45D2F0  +
test eax eax +
jnz loc_45D495  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+24h] esi +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_459870  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 5Ch +
mov esi [esp+74h] +
test byte ptr [esi+4] 1 +
jnz loc_45D4CC  +
mov eax [esi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_45D4D6  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_stab_2 +
mov [esp] eax +
call sub_41E710  +
test eax eax +
jz loc_45D5A7  +
mov ebx [eax+0A0h] +
mov dword ptr [esp+1Ch] 0 +
test ebx ebx +
jz loc_45D5B0  +
mov ebp 1 +
jmp loc_45D51E  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_45D5B0  +
mov edi [ebx+24h] +
test edi edi +
jz loc_45D510  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_45D510  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
add ax 0FF80h +
jnz loc_45D510  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45D510  +
mov ecx ebx +
mov edx esi +
lea eax [esp+28h] +
call sub_451150  +
test eax eax +
jz loc_45D740  +
mov eax [ebx+8Ch] +
lea ecx [esp+28h] +
mov eax [eax+88h] +
mov [esp+10h] ecx +
mov dword ptr [esp+0Ch] offset sub_44A9D0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_46A2A0  +
mov edx ebx +
test eax eax +
mov eax [esp+1Ch] +
cmovnz eax ebp +
mov [esp+1Ch] eax +
lea eax [esp+28h] +
call sub_44ABE0  +
jmp loc_45D510  +
***
mov dword ptr [esp+1Ch] 0 +
nop   +
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_45D670  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] eax +
call sub_41E710  +
test eax eax +
jz loc_45D670  +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_45D670  +
lea ebp [esp+28h] +
jmp loc_45D5FA  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_45D670  +
mov edx [ebx+24h] +
test edx edx +
jz loc_45D5F0  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45D5F0  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_451150  +
test eax eax +
jz loc_45D740  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_45E480  +
mov [esp+10h] ebp +
mov dword ptr [esp+0Ch] offset sub_44A9D0 +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_45FA70  +
mov edx ebx +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax ebp +
call sub_44ABE0  +
jmp loc_45D5F0  +
***
mov ebx [esi+34h] +
test ebx ebx +
jz loc_45D6F6  +
lea ebp [esp+28h] +
jmp loc_45D68A  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_45D6F6  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_45D680  +
mov edi [eax+1B0h] +
mov eax [edi+110h] +
test eax eax +
jz loc_45D680  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_44AAF0  +
test eax eax +
jz loc_45D740  +
mov eax [edi+110h] +
mov [esp+8] esi +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
mov edx [ebx+0A0h] +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax [esp+34h] +
test eax eax +
jz loc_45D680  +
cmp eax [edx+78h] +
jz loc_45D680  +
mov [esp] eax +
call free  +
jmp loc_45D680  +
***
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_45D74A  +
test al al +
mov ebx [esp+1Ch] +
jz loc_45D4CC  +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 2 +
jz loc_45D4CC  +
mov eax [esp+70h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_460130  +
test eax eax +
mov eax 1 +
cmovnz ebx eax +
jmp loc_45D4CC  +
***
mov ebx 0FFFFFFFFh +
jmp loc_45D4CC  +
***
mov [esp] esi +
call sub_45F800  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jmp loc_45D701  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
cmp dword ptr [ebx+3Ch] offset off_492990 +
jz loc_45D78C  +
mov ebp [ebx+14h] +
test ebp 20000h +
jz loc_45D78C  +
mov eax [ebx+8Ch] +
mov esi [eax+78h] +
test esi esi +
jz loc_45D796  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
mov [esp+14h] edx +
mov edx ebp +
and edx 2000000h +
mov [esp+10h] edx +
jz loc_45D8B5  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_45D8B5  +
mov eax [eax+8Ch] +
mov edx [eax+74h] +
test edx edx +
jz loc_45D8B5  +
mov [esp] edx +
call sub_430140  +
mov edi [eax+0Ch] +
mov [esp+18h] eax +
test edi edi +
jz loc_45DAB5  +
mov [esp+44h] ebx +
mov esi edi +
mov ebx ebp +
mov [esp+1Ch] edi +
mov ebp [esp+14h] +
jmp loc_45D7FD  +
mov esi [esi] +
test esi esi +
jz loc_45D900  +
mov edi [esi+4] +
mov eax [edi+14h] +
xor eax ebx +
test eax 2000000h +
jnz loc_45D82E  +
mov ecx [esp+10h] +
test ecx ecx +
jnz loc_45DA90  +
mov eax [edi] +
mov [esp] ebp +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_45D9CB  +
mov eax [edi+94h] +
test byte ptr [eax+2Ah] 20h +
jz loc_45D7F3  +
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_430210  +
test eax eax +
jz loc_45D78C  +
mov edx [esp+10h] +
test edx edx +
jz loc_45D8AB  +
mov eax [ebx+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_45D8AB  +
mov ecx [esi+4] +
mov eax [edx+8Ch] +
mov dword ptr [edx+3Ch] offset off_492990 +
mov [edx+7Ch] ecx +
mov eax [eax+7Ch] +
cmp eax edx +
jnz loc_45D8A7  +
jmp loc_45D8AB  +
mov [eax+7Ch] ecx +
mov dword ptr [eax+3Ch] offset off_492990 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax edx +
jz loc_45D8AB  +
test eax eax +
jnz loc_45D890  +
mov eax 1 +
jmp loc_45D78E  +
***
mov esi [esp+14h] +
mov ecx 0Eh +
mov edi offset a_gnu_linkonc_1 +
mov edx [esp+14h] +
cmps   +
setnbe cl  +
setb al  +
cmp cl al +
jnz loc_45D7CA  +
mov eax edx +
mov esi edx +
add eax 0Eh +
mov dword ptr [esp+4] 2Eh +
mov [esp] eax +
call strchr  +
lea edx [eax+1] +
test eax eax +
cmovz edx esi +
jmp loc_45D7CA  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov ebx [esp+44h] +
test eax eax +
jz loc_45D957  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_45D92E  +
mov edx [eax+8Ch] +
mov esi [edx+7Ch] +
cmp esi eax +
jz loc_45DA4C  +
mov eax [esp+18h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_430170  +
test eax eax +
jz loc_45DA14  +
xor eax eax +
cmp dword ptr [ebx+3Ch] offset off_492990 +
setz al  +
jmp loc_45D78E  +
***
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jz loc_45D97A  +
mov eax [eax+8Ch] +
mov ecx [eax+7Ch] +
test ecx ecx +
jz loc_45D97A  +
mov eax [ecx+8Ch] +
mov esi [eax+7Ch] +
cmp esi ecx +
jz loc_45D9F0  +
mov edi [edi] +
test edi edi +
jnz loc_45D957  +
mov esi [esp+14h] +
mov edi offset a_gnu_linkonc_2 +
mov ecx 10h +
cmps   +
jnz loc_45D92E  +
mov eax [esp+18h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_45D92E  +
mov ebp 10h +
mov [esp+44h] ebx +
mov edx [eax+4] +
test byte ptr [edx+17h] 2 +
jnz loc_45D9BC  +
mov esi [edx] +
mov edi offset a_gnu_linkonc_3 +
mov ecx ebp +
cmps   +
jz loc_45DA2C  +
mov eax [eax] +
test eax eax +
jnz loc_45D9A6  +
mov ebx [esp+44h] +
jmp loc_45D92E  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_430210  +
test eax eax +
jnz loc_45D8AB  +
jmp loc_45D78C  +
***
mov ecx [esp+48h] +
mov edx ebx +
mov eax esi +
call sub_44B1F0  +
test eax eax +
jz loc_45D97A  +
mov dword ptr [ebx+3Ch] offset off_492990 +
mov [ebx+7Ch] esi +
jmp loc_45D980  +
***
mov eax [esp+48h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_li_0 +
call eax  +
jmp loc_45D946  +
***
mov eax [esp+40h] +
cmp [edx+94h] eax +
mov ebx [esp+44h] +
jz loc_45D92E  +
mov dword ptr [ebx+3Ch] offset off_492990 +
jmp loc_45D92E  +
***
test edi edi +
jnz loc_45DA5F  +
jmp loc_45D92E  +
***
mov edi [edi] +
test edi edi +
jz loc_45D92E  +
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jnz loc_45DA55  +
mov ecx [esp+48h] +
mov edx esi +
call sub_44B1F0  +
test eax eax +
jz loc_45DA55  +
mov eax [edi+4] +
mov dword ptr [esi+3Ch] offset off_492990 +
mov [esi+7Ch] eax +
mov dword ptr [ebx+3Ch] offset off_492990 +
jmp loc_45D92E  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_430210  +
test eax eax +
jnz loc_45D862  +
jmp loc_45D78C  +
***
cmp dword ptr [esp+10h] 0 +
jnz loc_45D910  +
jmp loc_45D980  +
***
mov eax [esp+4] +
cmp dword ptr [eax+10h] 0FFFFFFF2h +
setz al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFF2h +
retn   +
***
mov eax offset off_492840 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_45DB40  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+28h] +
mov eax [esp+20h] +
call sub_44D5B0  +
test eax eax +
jz loc_45DB36  +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_41E7F0  +
test eax eax +
mov ebx eax +
jz loc_45DB36  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_45DB36  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_45DBA0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+30h] +
mov eax [esp+2Ch] +
call sub_44D5B0  +
test eax eax +
mov edi eax +
jz loc_45DB97  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_41E7F0  +
test eax eax +
mov ebx eax +
jz loc_45DBD6  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_45DB97  +
***
mov eax [esi+14h] +
mov [esp+4] edi +
and eax 1 +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 10410Bh +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_41EAF0  +
test eax eax +
mov ebx eax +
jz loc_45DBCB  +
cmp dword ptr [esp+30h] 1 +
mov edx [eax+8Ch] +
sbb eax eax +
and eax 5 +
add eax 4 +
mov [edx+4] eax +
mov eax [esp+28h] +
mov [ebx+40h] eax +
jmp loc_45DBCB  +
***
sub esp 3Ch +
mov eax [esp+48h] +
mov edx [esp+44h] +
movzx ecx byte ptr [eax+30h] +
mov [edx+30h] cl +
movzx ecx byte ptr [eax+32h] +
movzx eax byte ptr [eax+31h] +
mov [edx+32h] cl +
lea ecx [esp+1Ch] +
mov [esp+29h] al +
mov eax [esp+40h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 14h +
call sub_44B9A0  +
add esp 3Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+4] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_45DCE0  +
mov dword ptr [esp+4] 3519h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [edi+174h] +
mov eax [eax+44h] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+3] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_45DD60  +
mov dword ptr [esp+4] 3524h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_420BA0  +
mov eax [edi+174h] +
mov eax [eax+3Ch] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [eax] +
mov [esp+4+var_4] ecx +
mov ebx edi +
jmp loc_45DD9E  +
lea esi [ebx+1] +
mov [eax] esi +
movzx ecx byte ptr [ebx] +
test cl cl +
jns loc_45DDB0  +
mov ebx esi +
cmp edx ebx +
ja loc_45DD90  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4+var_4] +
movzx ebp cl +
cmp edi ebx +
mov [eax] ebp +
jb loc_45DDC2  +
jmp loc_45DDD9  +
mov ebp eax +
sub ebx 1 +
movzx eax byte ptr [ebx] +
mov edx [esp+4+var_4] +
shl ebp 7 +
and eax 7Fh +
or eax ebp +
cmp ebx edi +
mov [edx] eax +
jnz loc_45DDC0  +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov ecx eax +
xor eax eax +
test bl 2 +
jnz loc_45DE36  +
mov eax [ecx+0Ch] +
cmp eax 4 +
jz loc_45DE36  +
test bl 1 +
jz loc_45DE38  +
shr bl 2 +
and ebx 1 +
test byte ptr [ecx+5] 10h +
jz loc_45DE2A  +
add ebx 1 +
lea ecx [ebx+edx-1] +
add eax ebx +
add eax ecx +
neg edx  +
and eax edx +
pop ebx  +
retn   +
shr bl 2 +
and ebx 1 +
lea ecx [ebx+edx-1] +
neg edx  +
add eax ecx +
and eax edx +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax] +
cmp edx eax +
jbe loc_45DEA0  +
lea edi [eax+1] +
mov [ebx] edi +
movzx ebp byte ptr [eax] +
mov edx ebp +
and edx 0FFFFFFC0h +
mov [esp+18h+var_15] dl +
movzx edx dl +
cmp [esp+18h+var_15] 0 +
cmovz edx ebp +
cmp edx 0C0h +
ja loc_45DEA0  +
jmp ds:off_4B30C0[edx*4]  +
mov eax esi +
sub eax edi +
cmp ecx eax +
jbe loc_45DFC8  +
mov [ebx] esi +
nop   +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
sub edx edi +
cmp edx 7 +
jbe loc_45DE9C  +
add eax 9 +
mov [ebx] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+18h+var_8] +
mov edx esi +
mov eax ebx +
call sub_45DD80  +
test eax eax +
jz loc_45DEA0  +
mov edx [ebx] +
mov ecx esi +
mov eax [esp+18h+var_8] +
sub ecx edx +
cmp eax ecx +
ja loc_45DE9C  +
add eax edx +
mov [ebx] eax +
mov eax 1 +
jmp loc_45DEA2  +
add eax 2 +
add esi 1 +
jmp loc_45DF15  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_45DEBE  +
cmp eax esi +
jnz loc_45DF08  +
jmp loc_45DEA0  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_45DF35  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_45DED0  +
cmp eax ecx +
jnz loc_45DF28  +
jmp loc_45DEA0  +
cmp esi edi +
jz loc_45DE9C  +
add eax 2 +
mov [ebx] eax +
mov eax 1 +
jmp loc_45DEA2  +
mov edx esi +
sub edx edi +
cmp edx 1 +
jbe loc_45DE9C  +
add eax 3 +
mov [ebx] eax +
mov eax 1 +
jmp loc_45DEA2  +
mov edx esi +
sub edx edi +
cmp edx 3 +
jbe loc_45DE9C  +
add eax 5 +
mov [ebx] eax +
mov eax 1 +
jmp loc_45DEA2  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_45DFA5  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_45DFBF  +
cmp eax ecx +
jnz loc_45DF98  +
jmp loc_45DEA0  +
add edx 1 +
mov [ebx] edx +
cmp byte ptr [edx-1] 0 +
jns loc_45DEBE  +
cmp esi edx +
ja loc_45DFB0  +
jmp loc_45DEA0  +
add ecx edi +
mov eax 1 +
mov [ebx] ecx +
jmp loc_45DEA2  +
***
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov edx [eax+3Ch] +
mov ecx [eax+38h] +
mov eax [esp+arg_4] +
add ecx [edx+1Ch] +
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov ebx [eax+3Ch] +
mov edx [eax+38h] +
mov eax 0FFFFFFFFh +
add edx [ebx+1Ch] +
xor ebx ebx +
cmp ecx edx +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [ecx+8] +
mov ebx [esp+28h+arg_4] +
lea edx [eax+eax*2] +
mov eax [ebx] +
lea eax [eax+edx*4] +
cmp eax [ebx+8] +
mov [ebx+4] eax +
jnb loc_45E0A0  +
mov edx [ecx+0Ch] +
add edx [ecx+10h] +
cmp [eax] edx +
jb loc_45E079  +
jmp loc_45E0A0  +
mov edx [ebx+4] +
lea eax [edx+0Ch] +
cmp [ebx+8] eax +
mov [ebx+4] eax +
jbe loc_45E0A0  +
mov eax [ebp+0Ch] +
add eax [ebp+10h] +
cmp [edx+0Ch] eax +
jnb loc_45E0A0  +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_20] eax +
call sub_45C670  +
test eax eax +
jnz loc_45E060  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov eax [ebp+4] +
cmp [ebx+4] eax +
jz loc_45E0D3  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
cmp [ebx] eax +
jnz loc_45E0C9  +
movzx eax word ptr [ebp+8] +
cmp [ebx+8] ax +
jnz loc_45E0C9  +
lea eax [ebp+0Ah] +
lea esi [ebx+0Ah] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] esi +
call strcmp  +
test eax eax +
jnz loc_45E0C9  +
mov edi offset unk_4B33C4 +
mov ecx 3 +
cmps   +
setnbe dl  +
setb al  +
sub edx eax +
movsx edi dl +
test edi edi +
jz loc_45E0C9  +
mov eax [ebp+20h] +
xor edi edi +
cmp [ebx+20h] eax +
jnz loc_45E0C9  +
mov eax [ebp+24h] +
cmp [ebx+24h] eax +
jnz loc_45E0C9  +
mov eax [ebp+28h] +
cmp [ebx+28h] eax +
jnz loc_45E0C9  +
mov eax [ebp+2Ch] +
cmp [ebx+2Ch] eax +
jnz loc_45E0C9  +
lea eax [ebp+30h] +
mov [esp+24h+var_20] eax +
lea eax [ebx+30h] +
mov [esp+24h+var_1C] 8 +
mov [esp+24h+var_24] eax +
call memcmp  +
test eax eax +
mov edi eax +
jnz loc_45E1AA  +
mov eax [ebx+38h] +
mov edx [eax] +
mov eax [ebp+38h] +
mov eax [eax] +
mov eax [eax+3Ch] +
cmp [edx+3Ch] eax +
jnz loc_45E0C9  +
mov eax [ebp+3Ch] +
cmp [ebx+3Ch] eax +
jnz loc_45E0C9  +
movzx eax byte ptr [ebx+3Fh] +
cmp al 32h +
ja loc_45E0C9  +
add ebp 41h +
add ebx 41h +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_20] ebp +
mov [esp+24h+var_24] ebx +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
mov edi eax +
jmp loc_45E0C9  +
xor edi edi +
jmp loc_45E0C9  +
***
jmp sub_45E1C0  +
***
mov eax 1 +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
ja loc_45E1E7  +
jb loc_45E1F0  +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
mov edx [edx+4] +
sbb ebx ebx +
cmp [ecx+4] edx +
cmovbe eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
cmp ecx 4 +
mov ebx [esp+18h+arg_0] +
jz loc_45E258  +
cmp ecx 8 +
jz loc_45E245  +
cmp ecx 2 +
jz loc_45E232  +
mov [esp+18h+var_14] 0C1h +
mov [esp+18h+var_18] offset a____Binutil_29 +
call sub_420BA0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_45E290  +
mov eax [eax+38h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
test ebx ebx +
mov eax [eax] +
jz loc_45E280  +
mov eax [eax+20h] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_45E270  +
mov eax [eax+2Ch] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+28h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+1Ch] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax+34h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
***
mov ebx [esp+18h+arg_0] +
cmp ebx 4 +
jz loc_45E300  +
cmp ebx 8 +
jz loc_45E2E3  +
cmp ebx 2 +
jz loc_45E2D0  +
mov [esp+18h+var_14] 0D2h +
mov [esp+18h+var_18] offset a____Binutil_29 +
call sub_420BA0  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+3Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+24h] +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] 0 +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+30h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov edx [esp+14h+arg_8] +
mov ecx [ebx+24h] +
mov esi [eax+1Ch] +
mov eax 1 +
test ecx ecx +
jz loc_45E36D  +
test word ptr [ebx+18h] 380h +
jnz loc_45E36D  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_45E357  +
cmp ecx offset off_492990 +
jz loc_45E36D  +
mov eax [edx+4] +
cmp eax [edx+8] +
jz loc_45E36B  +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jnz loc_45E373  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_44EB80  +
test eax eax +
jz loc_45E36B  +
mov edx [eax+8Ch] +
mov [edx+84h] ebx +
mov edx [eax+3Ch] +
test edx edx +
jz loc_45E3AA  +
cmp edx offset off_492990 +
jz loc_45E450  +
movzx edx word ptr [ebx+18h] +
and dx 0FC7Fh +
or dh 3 +
mov [ebx+18h] dx +
mov edx [ebx+8Ch] +
mov [edx+88h] eax +
mov edx [esi+0A8h] +
cmp edx [esi+0B0h] +
jz loc_45E3F1  +
mov eax [esi+0B4h] +
lea ecx [edx+1] +
mov [esi+0A8h] ecx +
mov [eax+edx*4] ebx +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test edx edx +
jnz loc_45E427  +
mov dword ptr [esi+0ACh] 1 +
mov dword ptr [esi+0B0h] 2 +
mov [esp+14h+var_14] 8 +
call sub_42B400  +
mov [esi+0B4h] eax +
test eax eax +
jz loc_45E45C  +
mov edx [esi+0A8h] +
jmp loc_45E3DA  +
lea eax [edx+edx] +
mov [esi+0B0h] eax +
mov eax [esi+0B4h] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_42B490  +
mov [esi+0B4h] eax +
jmp loc_45E41B  +
or dword ptr [ebx+14h] 8000h +
jmp loc_45E3AA  +
mov [esp+14h+var_10] 1F6h +
mov [esp+14h+var_14] offset a____Binutil_29 +
call sub_420BA0  +
mov eax [esi+0B4h] +
jmp loc_45E41F  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_4] +
mov ebp [esp+7Ch+arg_8] +
mov edi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_20] 0 +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_64] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_45E4BA  +
test word ptr [ebp+18h] 380h +
jz loc_45E4C2  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+3Ch] offset off_492990 +
jz loc_45E4BA  +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call sub_41F070  +
test eax eax +
jz loc_45E5F0  +
cmp dword ptr [ebp+24h] 3 +
jbe loc_45E504  +
mov eax [edi+4] +
mov edx [esp+7Ch+var_20] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_45E646  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
mov eax [eax+11Ch] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call eax  +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_45E5F0  +
mov eax [esp+7Ch+var_20] +
mov ebx [ebp+24h] +
mov [esp+7Ch+var_1C] eax +
add ebx eax +
cmp eax ebx +
jz loc_45F351  +
mov edx ebx +
sub edx eax +
cmp edx 3 +
mov [esp+7Ch+var_5C] 1 +
mov [esp+7Ch+var_60] 0 +
jbe loc_45E5EC  +
mov [esp+7Ch+arg_8] ebp +
mov esi eax +
mov ebp [esp+7Ch+var_5C] +
jmp loc_45E5B3  +
lea ecx [eax+4] +
mov [esp+7Ch+var_1C] ecx +
mov ecx [edi+4] +
mov ecx [ecx+28h] +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ecx ebx +
cmp eax 1 +
mov eax [esp+7Ch+var_1C] +
adc [esp+7Ch+var_60] 0 +
sub esi 4 +
sub ecx eax +
cmp esi ecx +
ja loc_45E5E5  +
add esi eax +
cmp ebx esi +
mov [esp+7Ch+var_1C] esi +
jz loc_45E670  +
mov eax ebx +
add ebp 1 +
sub eax esi +
cmp eax 3 +
jbe loc_45E5E5  +
lea eax [esi+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45E969  +
test eax eax +
jz loc_45E670  +
mov eax [esp+7Ch+var_1C] +
mov ecx ebx +
sub ecx eax +
cmp ecx 3 +
ja loc_45E570  +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] ebx +
mov eax [esp+7Ch+arg_4] +
xor esi esi +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_20] +
test eax eax +
jz loc_45E62E  +
mov [esp+7Ch+var_7C] eax +
call free  +
test esi esi +
jz loc_45E4BA  +
mov [esp+7Ch+var_7C] esi +
call free  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+8] +
cmp [eax+4] edx +
jnz loc_45E504  +
mov eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_45E4BA  +
mov eax ebp +
mov [esp+7Ch+var_5C] ebp +
mov ebp [esp+7Ch+arg_8] +
shl eax 5 +
add eax 8 +
mov [esp+7Ch+var_7C] eax +
call sub_42B590  +
test eax eax +
mov [esp+7Ch+var_4C] eax +
jz loc_45E5F0  +
imul eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] eax +
call sub_42B590  +
test eax eax +
mov esi eax +
jz loc_45E92C  +
mov ebx [edi+4] +
mov ecx [ebp+24h] +
mov eax [esp+7Ch+var_20] +
mov edx [ebx+1B0h] +
test ecx ecx +
mov [esp+7Ch+var_1C] eax +
mov [esp+7Ch+var_48] eax +
mov edx [edx+0BCh] +
mov [esp+7Ch+var_38] edx +
jz loc_45F66F  +
mov edx [esp+7Ch+var_4C] +
mov eax [edx] +
shl eax 5 +
lea eax [edx+eax+8] +
mov edx [esp+7Ch+var_48] +
mov [esp+7Ch+var_50] eax +
mov eax edx +
add eax ecx +
cmp ecx 3 +
jbe loc_45F2DC  +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_40] 0 +
mov [esp+7Ch+var_54] esi +
mov [esp+7Ch+arg_0] edi +
mov [esp+7Ch+arg_8] ebp +
mov edx [esp+7Ch+var_44] +
mov eax edx +
add eax 4 +
mov [esp+7Ch+var_1C] eax +
mov eax [ebx+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov edx [esp+7Ch+var_1C] +
mov ebx edx +
mov esi eax +
mov eax [esp+7Ch+var_20] +
sub ebx eax +
mov ecx ebx +
mov [esp+7Ch+var_34] ebx +
mov ebx [esp+7Ch+arg_8] +
lea ecx [esi+ecx] +
mov edi [ebx+24h] +
cmp ecx edi +
ja loc_45E91A  +
mov ecx [esp+7Ch+var_48] +
lea ebp [edx+esi] +
mov ebx [esp+7Ch+arg_C] +
sub ecx eax +
mov eax ecx +
mov ecx [esp+7Ch+var_50] +
mov [ecx+10h] eax +
lea eax [esi+4] +
mov [esp+7Ch+var_3C] eax +
mov [ecx+0Ch] eax +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov [esp+7Ch+var_48] eax +
sub eax [ebx] +
sar eax 2 +
imul eax eax +
test esi esi +
mov [ecx+8] eax +
jz loc_45F5F4  +
mov eax ebp +
sub eax edx +
cmp eax 3 +
jbe loc_45EEA2  +
lea eax [edx+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jnz loc_45E975  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 1 +
mov edx [esp+7Ch+var_40] +
lea ebx [edx+1] +
mov [esp+7Ch+var_3C] ebx +
imul ebx edx +
add ebx [esp+7Ch+var_54] +
mov [ebx+38h] eax +
mov eax [esp+7Ch+var_1C] +
mov [ebx] esi +
cmp ebp eax +
mov [esp+7Ch+var_48] eax +
jbe loc_45E91A  +
lea esi [eax+1] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
lea edx [eax-3] +
cmp dl 1 +
mov [ebx+8] al +
jbe loc_45E817  +
cmp al 1 +
jnz loc_45E91A  +
mov [esp+7Ch+var_7C] esi +
call strlen  +
cmp eax 13h +
ja loc_45E91A  +
lea edx [ebx+0Ah] +
add eax 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_40] edx +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] eax +
call strchr  +
mov edi [esp+7Ch+arg_C] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_1C] edx +
mov edx [esp+7Ch+arg_C] +
mov edx [edx+4] +
cmp ecx edx +
jbe loc_45E8B6  +
mov esi [esp+7Ch+var_44] +
sub esi [esp+7Ch+var_20] +
cmp esi [edx] +
jbe loc_45E8B6  +
mov edi [edx+4] +
test edi edi +
jnz loc_45E91A  +
add edx 0Ch +
jmp loc_45E8A6  +
cmp [edx] esi +
jnb loc_45E8AC  +
add edx 0Ch +
cmp dword ptr [edx-8] 0 +
jnz loc_45F0C0  +
cmp edx ecx +
mov edi edx +
jb loc_45E895  +
mov edi [esp+7Ch+arg_C] +
mov [edi+4] edx +
cmp byte ptr [eax+1] 65h +
jz loc_45F2E5  +
cmp byte ptr [ebx+8] 3 +
jbe loc_45E8E7  +
mov eax [esp+7Ch+var_1C] +
lea edx [eax+1] +
cmp ebp edx +
jbe loc_45E91A  +
movzx edx byte ptr [eax] +
cmp edx [esp+7Ch+var_58] +
jnz loc_45E91A  +
cmp byte ptr [eax+1] 0 +
jnz loc_45E91A  +
add eax 2 +
mov [esp+7Ch+var_1C] eax +
lea ecx [ebx+20h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_45DD80  +
test eax eax +
jz loc_45E91A  +
mov edi [esp+7Ch+var_1C] +
mov eax edi +
jmp loc_45E916  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jns loc_45EEBF  +
mov eax edx +
cmp ebp eax +
ja loc_45E901  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_45E61E  +
mov ebp [esp+7Ch+arg_8] +
jmp loc_45E5F0  +
mov edx [esp+7Ch+var_50] +
imul ecx [esp+7Ch+var_40] +
mov ebx [esp+7Ch+var_54] +
mov edx [edx+10h] +
add ecx ebx +
mov [esp+7Ch+var_48] edx +
add edx 4 +
sub edx eax +
cmp ebx ecx +
jnb loc_45F472  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jnz loc_45E9AD  +
jmp loc_45F472  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jz loc_45E9B4  +
add ebx 74h +
cmp ebx ecx +
jb loc_45E9A5  +
cmp ebx ecx +
jz loc_45E91A  +
mov eax [ebx+38h] +
mov edi [esp+7Ch+var_50] +
mov [edi] eax +
mov ecx [ebx+38h] +
movzx eax byte ptr [edi+1Bh] +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFF7h +
and edx 8 +
or eax edx +
mov [edi+1Bh] al +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFFBh +
and edx 4 +
or eax edx +
mov [edi+1Bh] al +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+4] +
mov esi [eax+8] +
cmp edx esi +
jnb loc_45EA39  +
mov ecx [esp+7Ch+var_1C] +
sub ecx [esp+7Ch+var_20] +
cmp ecx [edx] +
jbe loc_45EA39  +
mov eax [edx+4] +
test eax eax +
jnz loc_45E91A  +
lea eax [edx+0Ch] +
jmp loc_45EA29  +
cmp [eax] ecx +
jnb loc_45EA2F  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_45EE56  +
cmp eax esi +
mov edx eax +
jb loc_45EA17  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov eax [esp+7Ch+arg_8] +
test byte ptr [eax+16h] 10h +
jz loc_45EA53  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax] +
test eax eax +
jz loc_45EAD0  +
cmp edx esi +
jnb loc_45E91A  +
mov eax [esp+7Ch+var_1C] +
sub eax [esp+7Ch+var_20] +
cmp [edx] eax +
jnz loc_45E91A  +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_45C290  +
test eax eax +
jz loc_45EAD0  +
mov edx [esp+7Ch+arg_0] +
cmp [eax+94h] edx +
jnz loc_45E91A  +
mov eax [eax+8Ch] +
mov edi [esp+7Ch+var_50] +
mov edx [eax+80h] +
mov [edi+4] edx +
mov [eax+80h] edi +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_48] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_45F0F3  +
and eax 7 +
cmp al 2 +
jz loc_45F497  +
jbe loc_45F0E3  +
cmp al 3 +
lea esi [esi+0] +
jz loc_45F465  +
cmp al 4 +
mov [esp+7Ch+var_34] 8 +
jnz loc_45F0F3  +
mov eax [esp+7Ch+var_34] +
lea esi [eax+eax] +
mov [esp+7Ch+var_18] eax +
mov eax ebp +
sub eax [esp+7Ch+var_48] +
cmp esi eax +
ja loc_45EEA2  +
mov edi [esp+7Ch+var_34] +
neg edi  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
add esi [esp+7Ch+var_48] +
mov eax [eax+4] +
mov ecx [edx+8] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_45F663  +
add edi esi +
mov edx [eax] +
mov esi edi +
sub esi [esp+7Ch+var_20] +
mov [esp+7Ch+var_30] edi +
cmp edx esi +
jnb loc_45EE81  +
add eax 0Ch +
jmp loc_45EB82  +
add eax 0Ch +
mov edx [eax-0Ch] +
cmp edx esi +
jnb loc_45EE77  +
cmp eax ecx +
mov edi eax +
jb loc_45EB74  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_0] +
mov ecx [esp+7Ch+var_34] +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_7C] 0 +
add eax 4 +
call sub_45E200  +
test eax eax +
jz loc_45F3F0  +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_45F47B  +
mov [esp+7Ch+var_18] 0 +
cmp byte ptr [ebx+3Dh] 0FFh +
jz loc_45EE8E  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov edi [esp+7Ch+var_1C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_45EC1F  +
mov ecx edi +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_45F2A8  +
lea edx [eax+0Ch] +
jmp loc_45EC0F  +
lea edx [edx+0Ch] +
cmp [edx-0Ch] ecx +
jnb loc_45F29E  +
cmp edx esi +
mov eax edx +
jb loc_45EC03  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_50] +
mov eax edi +
sub eax [esp+7Ch+var_48] +
mov [edx+1Ah] al +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_45F43E  +
mov eax ebp +
sub eax edi +
mov [esp+7Ch+var_18] eax +
add eax edi +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov ecx [esp+7Ch+var_44] +
add ecx [esp+7Ch+var_3C] +
mov edx [edx+8] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] ecx +
cmp edx eax +
jbe loc_45EC91  +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_45EC91  +
add eax 0Ch +
jmp loc_45EC81  +
add eax 0Ch +
cmp [eax-0Ch] ecx +
jnb loc_45F10C  +
cmp eax edx +
mov esi eax +
jb loc_45EC75  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
xor edi edi +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_45ECC7  +
and eax 7 +
cmp al 2 +
jz loc_45F45A  +
jbe loc_45F42B  +
cmp al 3 +
mov edi 4 +
jz loc_45ECC7  +
cmp al 4 +
mov di 8 +
jnz loc_45F437  +
mov ecx [esp+7Ch+var_34] +
xor esi esi +
mov [esp+7Ch+var_18] edi +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
cmp ebp eax +
jbe loc_45ECF1  +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_45EDB0  +
add eax 1 +
cmp ebp eax +
mov [esp+7Ch+var_10] eax +
ja loc_45ECDB  +
test ecx ecx +
jz loc_45E91A  +
test esi esi +
jz loc_45ED0B  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 1 +
jnz loc_45E91A  +
mov edx [esp+7Ch+var_50] +
mov eax ecx +
sub eax ebp +
add [edx+0Ch] eax +
cmp ebp ecx +
jz loc_45ED25  +
test byte ptr [edx+1Bh] 1 +
jz loc_45ED25  +
add [ebx+3Fh] al +
add [ebx] eax +
test esi esi +
jz loc_45EDDA  +
movzx eax byte ptr [ebx+3Eh] +
and eax 70h +
cmp al 10h +
jz loc_45ED46  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 8 +
jz loc_45EDDA  +
lea eax ds:4[esi*4] +
mov [esp+7Ch+var_7C] eax +
call sub_42B400  +
mov edx [esp+7Ch+var_50] +
test eax eax +
mov [edx+1Ch] eax +
jz loc_45E91A  +
mov [eax] esi +
mov eax [esp+7Ch+var_34] +
xor esi esi +
mov edi edx +
mov [esp+7Ch+var_14] eax +
jmp loc_45ED8F  +
mov ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_14] +
call sub_45DE50  +
test eax eax +
jz loc_45E91A  +
mov eax [esp+7Ch+var_14] +
cmp ebp eax +
jbe loc_45EDDA  +
cmp byte ptr [eax] 1 +
jnz loc_45ED74  +
mov edx [edi+1Ch] +
add eax 1 +
add esi 1 +
sub eax [esp+7Ch+var_48] +
mov [edx+esi*4] eax +
jmp loc_45ED74  +
xor eax eax +
cmp dl 1 +
setz al  +
mov ecx edi +
add esi eax +
mov edx ebp +
lea eax [esp+7Ch+var_10] +
call sub_45DE50  +
test eax eax +
jz loc_45E91A  +
mov ecx [esp+7Ch+var_10] +
mov eax ecx +
jmp loc_45ECD7  +
mov edx [esp+7Ch+var_50] +
or byte ptr [edx+1Bh] 2 +
movzx eax byte ptr [ebx+3Eh] +
mov [edx+18h] al +
movzx eax byte ptr [ebx+3Dh] +
mov [edx+19h] al +
mov eax [esp+7Ch+var_4C] +
mov edx [eax] +
lea ecx [edx+1] +
mov [eax] ecx +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_50] edx +
mov edx [esp+7Ch+var_20] +
mov ebx eax +
mov [esp+7Ch+var_44] eax +
sub ebx edx +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_8] +
mov eax [eax+24h] +
cmp ebx eax +
jz loc_45F78D  +
add eax edx +
mov ebx [esp+7Ch+var_4C] +
mov edx eax +
sub edx [esp+7Ch+var_44] +
shl ecx 5 +
lea ebx [ebx+ecx+8] +
cmp edx 3 +
mov [esp+7Ch+var_50] ebx +
jbe loc_45F2CA  +
mov eax [esp+7Ch+arg_0] +
mov ebx [eax+4] +
jmp loc_45E718  +
mov edx esi +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] edx +
jmp loc_45E92C  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edi +
cmp esi edx +
jnz loc_45EB92  +
jmp loc_45EBB8  +
mov edi [esp+7Ch+var_1C] +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
cmp eax edx +
jbe loc_45EC3E  +
mov eax ebp +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_45E92C  +
xor ecx 40h +
movzx esi cl +
sub esi 40h +
cmp edi eax +
mov [ebx+24h] esi +
jb loc_45EED3  +
jmp loc_45EEE8  +
mov esi ecx +
sub eax 1 +
movzx ecx byte ptr [eax] +
shl esi 7 +
and ecx 7Fh +
or ecx esi +
cmp eax edi +
mov [ebx+24h] ecx +
jnz loc_45EED1  +
cmp byte ptr [ebx+8] 1 +
jnz loc_45F0A2  +
cmp ebp edx +
jbe loc_45E91A  +
lea eax [edx+1] +
mov [esp+7Ch+var_1C] eax +
movzx eax byte ptr [edx] +
mov [ebx+28h] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_45EF62  +
mov edx [esp+7Ch+var_1C] +
sub edx [esp+7Ch+var_20] +
cmp edx [eax] +
jbe loc_45EF62  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_45E91A  +
add eax 0Ch +
jmp loc_45EF52  +
cmp [eax] edx +
jnb loc_45EF58  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_45F1E0  +
cmp eax esi +
mov ecx eax +
jb loc_45EF40  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Ah] +
mov byte ptr [ebx+3Dh] 0FFh +
mov byte ptr [ebx+3Eh] 0FFh +
mov byte ptr [ebx+3Ch] 0FFh +
cmp al 65h +
jz loc_45F44B  +
cmp al 7Ah +
jz loc_45F4A4  +
mov edx [esp+7Ch+var_20] +
mov [esp+7Ch+var_44] edx +
test al al +
jz loc_45EFBE  +
cmp al 50h +
jz loc_45F11B  +
jle loc_45F201  +
cmp al 52h +
nop   +
jz loc_45F36B  +
cmp al 53h +
jnz loc_45E91A  +
add [esp+7Ch+var_40] 1 +
mov eax [esp+7Ch+var_40] +
movzx eax byte ptr [eax] +
test al al +
jnz loc_45EF8E  +
mov eax [esp+7Ch+arg_4] +
test byte ptr [eax] 1 +
jnz loc_45F72A  +
cmp byte ptr [ebx+3Eh] 0FFh +
jnz loc_45EFD8  +
mov byte ptr [ebx+3Eh] 0 +
mov ecx [esp+7Ch+var_1C] +
mov esi ebp +
lea edx [ebx+41h] +
sub esi ecx +
mov eax esi +
cmp esi 32h +
mov [ebx+3Fh] al +
mov eax 32h +
cmovbe eax esi +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov edx [esp+7Ch+arg_C] +
lea ecx [eax+esi] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [edx+8] +
mov [esp+7Ch+var_1C] ecx +
mov eax [eax+4] +
cmp edx eax +
jbe loc_45F063  +
sub ecx [esp+7Ch+var_20] +
cmp [eax] ecx +
jnb loc_45F063  +
cmp dword ptr [eax+4] 0 +
jnz loc_45E91A  +
add eax 0Ch +
jmp loc_45F053  +
cmp [eax] ecx +
jnb loc_45F059  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_45EE54  +
cmp eax edx +
mov esi eax +
jb loc_45F041  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_45F095  +
mov edi [esp+7Ch+var_50] +
mov [edi] ebx +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 10h +
movzx eax byte ptr [edi+5] +
setz dl  +
shl edx 3 +
and eax 0FFFFFFF7h +
or eax edx +
mov [edi+5] al +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_40] eax +
jmp loc_45EC91  +
lea ecx [ebx+28h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_45DD80  +
test eax eax +
jnz loc_45EF07  +
jmp loc_45E91A  +
mov edx [esp+7Ch+arg_C] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_45E92C  +
mov edx [esp+7Ch+var_58] +
test al al +
mov [esp+7Ch+var_34] edx +
jz loc_45EB16  +
mov [esp+7Ch+var_18] 0 +
xor edi edi +
xor esi esi +
mov [esp+7Ch+var_34] 0 +
jmp loc_45EB35  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] esi +
jmp loc_45EC91  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_45E91A  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 60h +
cmp cl 60h +
mov [ebx+3Ch] al +
jz loc_45E91A  +
mov ecx eax +
and ecx 7 +
cmp cl 2 +
jz loc_45F70D  +
jbe loc_45F5E3  +
cmp cl 3 +
jz loc_45F703  +
cmp cl 4 +
jnz loc_45E91A  +
mov edi 8 +
and eax 70h +
cmp al 50h +
jz loc_45F5BD  +
mov eax [esp+7Ch+var_1C] +
mov esi [esp+7Ch+var_50] +
mov edx eax +
mov [esp+7Ch+var_34] eax +
sub eax [esp+7Ch+var_48] +
mov [esi+4] al +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [esi+8] +
cmp eax esi +
jnb loc_45E91A  +
sub edx [esp+7Ch+var_44] +
cmp [eax] edx +
jnb loc_45F556  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_45E91A  +
lea ecx [eax+0Ch] +
jmp loc_45F1DA  +
cmp [ecx] edx +
jnb loc_45F54C  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_45F52B  +
cmp ecx esi +
mov eax ecx +
jb loc_45F1C5  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] ecx +
jmp loc_45E92C  +
cmp al 4Ch +
jnz loc_45E91A  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_45E91A  +
lea esi [eax+1] +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
mov [ebx+3Dh] al +
mov eax [esp+7Ch+arg_C] +
mov ecx [edx+8] +
mov eax [eax+4] +
cmp ecx eax +
jbe loc_45F273  +
sub esi [esp+7Ch+var_44] +
cmp [eax] esi +
jnb loc_45F273  +
cmp dword ptr [eax+4] 0 +
jnz loc_45E91A  +
add eax 0Ch +
jmp loc_45F263  +
cmp [eax] esi +
jnb loc_45F269  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_45EE56  +
cmp eax ecx +
mov edx eax +
jb loc_45F251  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Dh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_45E91A  +
and eax 7 +
jz loc_45EFAE  +
sub eax 2 +
cmp al 2 +
jbe loc_45EFAE  +
jmp loc_45E91A  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
cmp byte ptr [ebx+40h] 0 +
jz loc_45EC1F  +
cmp [eax] ecx +
jnz loc_45EC1F  +
mov eax [ebx+38h] +
or byte ptr [eax+5] 2 +
mov edi [esp+7Ch+var_1C] +
jmp loc_45EC1F  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_45E92C  +
cmp byte ptr [eax+2] 68h +
jnz loc_45E8C0  +
mov eax ebp +
sub eax [esp+7Ch+var_44] +
cmp [esp+7Ch+var_58] eax +
ja loc_45EEA2  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_44] +
add esi [esp+7Ch+var_58] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_45E8C0  +
sub esi [esp+7Ch+var_20] +
cmp [eax] esi +
jnb loc_45E8C0  +
add eax 0Ch +
jmp loc_45F33C  +
add eax 0Ch +
cmp [eax-0Ch] esi +
jnb loc_45F6F4  +
cmp eax ecx +
mov edx eax +
jb loc_45F330  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
jmp loc_45E8C0  +
mov eax 8 +
mov [esp+7Ch+var_60] 0 +
mov [esp+7Ch+var_5C] 0 +
jmp loc_45E683  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_45E91A  +
lea edx [eax+1] +
mov edi [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov [ebx+3Eh] al +
mov eax [esp+7Ch+arg_C] +
mov esi [edi+8] +
mov eax [eax+4] +
cmp eax esi +
jnb loc_45F3D5  +
sub edx [esp+7Ch+var_44] +
cmp edx [eax] +
jbe loc_45F3D5  +
cmp dword ptr [eax+4] 0 +
jnz loc_45E91A  +
add eax 0Ch +
jmp loc_45F3C5  +
cmp [eax] edx +
jnb loc_45F3CB  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_45F1E0  +
cmp eax esi +
mov ecx eax +
jb loc_45F3B3  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jnz loc_45F285  +
jmp loc_45E91A  +
mov eax [esp+7Ch+arg_4] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+18h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] offset aDiscardingZero +
mov [esp+7Ch+var_78] edx +
call eax  +
mov eax [esp+7Ch+var_50] +
mov dword ptr [eax] 0 +
jmp loc_45EBB8  +
test al al +
mov edi [esp+7Ch+var_58] +
jz loc_45ECC7  +
xor edi edi +
jmp loc_45ECC7  +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
jmp loc_45EE9A  +
cmp byte ptr [ebx+0Bh] 68h +
jnz loc_45EF82  +
jmp loc_45EFBE  +
mov edi 2 +
nop   +
jmp loc_45ECC7  +
mov [esp+7Ch+var_34] 4 +
jmp loc_45EB16  +
mov ebx [esp+7Ch+var_54] +
jmp loc_45E9B4  +
lea ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_45DD80  +
test eax eax +
jnz loc_45EBCA  +
jmp loc_45E91A  +
mov [esp+7Ch+var_34] 2 +
jmp loc_45EB16  +
lea eax [ebx+0Bh] +
mov edx ebp +
mov [esp+7Ch+var_40] eax +
lea ecx [ebx+2Ch] +
lea eax [esp+7Ch+var_1C] +
call sub_45DD80  +
test eax eax +
jz loc_45E91A  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov ecx [edx+8] +
cmp ecx eax +
jbe loc_45F79D  +
mov edx [esp+7Ch+var_20] +
mov edi edx +
mov [esp+7Ch+var_44] edx +
mov edx [esp+7Ch+var_1C] +
sub edx edi +
cmp edx [eax] +
jbe loc_45F522  +
cmp dword ptr [eax+4] 0 +
jnz loc_45E91A  +
add eax 0Ch +
jmp loc_45F512  +
cmp [eax] edx +
jnb loc_45F518  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_45EE54  +
cmp eax ecx +
mov esi eax +
jb loc_45F500  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_45EF8A  +
mov edx [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_45E92C  +
mov esi [esp+7Ch+arg_C] +
mov [esi+4] ecx +
mov ecx [eax] +
cmp ecx edx +
jnz loc_45E91A  +
mov edx [esp+7Ch+arg_C] +
sub eax [edx] +
sar eax 2 +
imul eax eax +
mov [ebx+30h] eax +
mov eax [edx+4] +
mov edx [edx+8] +
mov [esp+7Ch+var_30] eax +
mov eax [esp+7Ch+var_30] +
jmp loc_45F591  +
cmp ecx [eax] +
jnz loc_45F598  +
test eax eax +
jz loc_45F717  +
add eax 0Ch +
cmp eax edx +
jb loc_45F585  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax ebp +
sub eax [esp+7Ch+var_34] +
cmp edi eax +
ja loc_45EEA2  +
add edi [esp+7Ch+var_34] +
mov [esp+7Ch+var_1C] edi +
jmp loc_45EFAE  +
mov ecx [esp+7Ch+var_44] +
lea eax [edi-1] +
sub ecx edx +
and eax ecx +
mov ecx ebp +
sub ecx edx +
cmp eax ecx +
mov [esp+7Ch+var_18] eax +
ja loc_45EEA2  +
add eax edx +
mov [esp+7Ch+var_1C] eax +
jmp loc_45F178  +
test cl cl +
jnz loc_45E91A  +
mov edi [esp+7Ch+var_58] +
jmp loc_45F16D  +
mov ebx [esp+7Ch+var_34] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov ecx [esp+7Ch+var_48] +
mov edi [esp+7Ch+arg_0] +
cmp ebx eax +
mov ebp [esp+7Ch+arg_8] +
jnz loc_45E92C  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+8] +
cmp eax ecx +
jbe loc_45F65A  +
cmp [ecx] ebx +
jnb loc_45F65A  +
cmp dword ptr [ecx+4] 0 +
jnz loc_45E92C  +
add ecx 0Ch +
jmp loc_45F64A  +
cmp [ecx] ebx +
jnb loc_45F650  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_45F7A6  +
cmp ecx eax +
mov edx ecx +
jb loc_45F639  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] ecx +
mov eax [esp+7Ch+var_4C] +
add dword ptr [eax] 1 +
jmp loc_45F677  +
lea eax [esi+edi] +
mov [esp+7Ch+var_30] eax +
jmp loc_45EB92  +
mov [esp+7Ch+var_40] 0 +
mov eax [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_5C] +
cmp [eax] edx +
jz loc_45F697  +
mov [esp+7Ch+var_78] 3F8h +
mov [esp+7Ch+var_7C] offset a____Binutil_29 +
call sub_420BA0  +
mov eax [esp+7Ch+var_60] +
cmp [esp+7Ch+var_40] eax +
jz loc_45F6B5  +
mov [esp+7Ch+var_78] 3F9h +
mov [esp+7Ch+var_7C] offset a____Binutil_29 +
call sub_420BA0  +
mov eax [ebp+8Ch] +
mov edx [esp+7Ch+var_4C] +
mov [eax+88h] edx +
movzx eax word ptr [ebp+18h] +
and ax 0FC7Fh +
or ax 180h +
mov [ebp+18h] ax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_45E61E  +
mov [edx+4] esi +
xor esi esi +
jmp loc_45E61E  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_45E8C0  +
mov edi 4 +
jmp loc_45F16D  +
mov edi 2 +
jmp loc_45F16D  +
mov eax [esp+7Ch+arg_C] +
mov dword ptr [eax+4] 0 +
jmp loc_45F5A2  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_4] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_45EFCE  +
movzx eax byte ptr [ebx+3Eh] +
test al 70h +
jnz loc_45F7B5  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 8 +
test byte ptr [ebx+3Dh] 70h +
jnz loc_45EFCE  +
mov byte ptr [ebx+40h] 1 +
jmp loc_45EFCE  +
mov esi [esp+7Ch+var_54] +
mov ebp [esp+7Ch+arg_8] +
jmp loc_45F677  +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_45EF82  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_45E92C  +
add al 1 +
jnz loc_45F77A  +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 50h +
jz loc_45F77A  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_45F7E2  +
mov eax [esp+7Ch+var_50] +
movzx eax byte ptr [eax+1Bh] +
mov edx [esp+7Ch+var_50] +
or eax 8 +
or byte ptr [edx+5] 10h +
mov [edx+1Bh] al +
jmp loc_45F77A  +
mov edx [esp+7Ch+var_50] +
movzx eax byte ptr [edx+1Bh] +
or eax 4 +
mov [edx+1Bh] al +
jmp loc_45F7D2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
movzx edx byte ptr [eax+3] +
mov ebx [eax+1Ch] +
xor eax eax +
and edx 6 +
cmp dl 4 +
jz loc_45F824  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+0A8h] +
test edi edi +
jz loc_45F81C  +
mov edx [ebx+0B4h] +
xor ebp ebp +
jmp loc_45F845  +
mov edi [ebx+0A8h] +
add ebp 1 +
cmp ebp edi +
jnb loc_45F8A5  +
mov ecx [edx+ebp*4] +
lea eax ds:0[ebp*4] +
test byte ptr [ecx+15h] 80h +
jz loc_45F838  +
lea ecx [ebp+1] +
cmp ecx edi +
jnb loc_45F885  +
mov [esp+2Ch+var_1C] ebp +
jmp loc_45F86A  +
mov edx [ebx+0B4h] +
mov eax esi +
mov ebp [edx+eax+4] +
add ecx 1 +
cmp ecx edi +
lea esi [eax+4] +
mov [edx+eax] ebp +
jnz loc_45F862  +
mov ebp [esp+2Ch+var_1C] +
mov edx [ebx+0B4h] +
sub ebp 1 +
sub edi 1 +
add ebp 1 +
cmp ebp edi +
mov [ebx+0A8h] edi +
mov dword ptr [edx+edi*4] 0 +
mov edx [ebx+0B4h] +
jb loc_45F845  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] offset sub_45DFE0 +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edx +
call qsort  +
mov eax [ebx+0A8h] +
mov edi [ebx+0B4h] +
mov [esp+2Ch+var_10] ebx +
sub eax 1 +
mov [esp+2Ch+var_18] edi +
mov ebp [edi] +
xor edi edi +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
jnb loc_45F98A  +
add edi 1 +
lea eax ds:0[edi*4] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_18] +
mov edx [eax+edi*4] +
test edx edx +
jz loc_45F938  +
mov eax [ebp+8Ch] +
mov ecx [edx+8Ch] +
mov eax [eax+88h] +
mov ecx [ecx+88h] +
mov ebx [eax+3Ch] +
mov esi [eax+38h] +
add esi [ebx+1Ch] +
add esi [eax+24h] +
mov eax [ecx+3Ch] +
mov ecx [ecx+38h] +
add ecx [eax+1Ch] +
cmp esi ecx +
jz loc_45F9C0  +
mov edx [ebp+28h] +
test edx edx +
mov edx [ebp+24h] +
jnz loc_45F945  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_41EDE0  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+0A8h] +
mov esi [ebx+0B4h] +
mov ebx [esp+2Ch+var_14] +
sub eax 1 +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] esi +
mov ebp [esi+ebx] +
jb loc_45F8EA  +
mov eax [ebp+28h] +
mov edx [ebp+24h] +
test eax eax +
jnz loc_45F997  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_41EDE0  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp edx +
jmp loc_45F8E0  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_10] +
mov eax [eax+8Ch] +
mov ebx [eax+80h] +
test ebx ebx +
jnz loc_45FA07  +
jmp loc_45FA60  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_45FA60  +
mov edx [esp+1Ch+arg_8] +
mov ecx ebx +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_45E030  +
test eax eax +
jz loc_45FA50  +
mov ecx [ebx] +
test ecx ecx +
jz loc_45FA00  +
movzx eax byte ptr [ecx+5] +
test al 1 +
jnz loc_45FA00  +
or eax 1 +
mov [ecx+5] al +
mov edx [esp+1Ch+arg_8] +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_45E030  +
test eax eax +
jnz loc_45FA00  +
lea esi [esi+0] +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
movzx edx word ptr [eax+18h] +
xor eax eax +
and dx 380h +
cmp dx 180h +
jz loc_45FA95  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+3Ch+arg_8] +
mov edx [edi+8Ch] +
mov ecx [edx+88h] +
test ecx ecx +
mov esi ecx +
mov [esp+3Ch+var_2C] ecx +
jz loc_45FA8D  +
mov eax [edi+94h] +
lea ebx [esi+8] +
mov ebp ebx +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+11Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
mov edx [esi] +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+1Ch] +
mov [esp+3Ch+var_28] eax +
mov eax edx +
shl eax 5 +
lea eax [esi+eax+8] +
cmp ebx eax +
lea esi [edi+4] +
mov [esp+3Ch+var_1C] esi +
jnb loc_45FEAC  +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+var_2C] +
cmp dword ptr [ebp+0Ch] 4 +
jz loc_45FF20  +
test byte ptr [ebp+1Bh] 1 +
jnz loc_45FE94  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_45FE94  +
mov eax [esp+3Ch+arg_8] +
test byte ptr [eax+16h] 10h +
mov eax [esp+3Ch+arg_10] +
mov edx [eax] +
jz loc_45FB3E  +
test edx edx +
jz loc_45FF70  +
mov eax [ebp+8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*2] +
lea eax [edx+eax*4] +
cmp eax [edi+8] +
mov [edi+4] eax +
jnb loc_45FB5D  +
mov esi [ebp+10h] +
lea edx [esi+8] +
cmp [eax] edx +
jz loc_45FB77  +
mov [esp+3Ch+var_38] 552h +
mov [esp+3Ch+var_3C] offset a____Binutil_29 +
call sub_420BA0  +
mov eax [ebp+10h] +
lea edx [eax+8] +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_38] eax +
call [esp+3Ch+arg_C]  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jz loc_45FE92  +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_45FBE3  +
movzx eax byte ptr [ebp+18h] +
and eax 70h +
jnz loc_45FF58  +
test byte ptr [ebp+1Bh] 8 +
jnz loc_45FBE3  +
mov eax [esp+3Ch+var_28] +
mov edi [esp+3Ch+arg_8] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_34] edi +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] offset aPFdeEncodingIn +
mov [esp+3Ch+var_38] edi +
call eax  +
and byte ptr [ebp+1Bh] 0FDh +
mov eax [esp+3Ch+var_28] +
add dword ptr [eax+0B4h] 1 +
mov edi [ebp+0] +
movzx eax byte ptr [edi+1Bh] +
test al 2 +
jz loc_45FE8F  +
test byte ptr [edi+5] 20h +
jnz loc_45FF65  +
and eax 0FFFFFFFDh +
mov esi [edi] +
mov [edi+1Bh] al +
mov eax [esp+3Ch+arg_8] +
test esi esi +
mov [edi] eax +
jz loc_45FE8F  +
cmp byte ptr [esi+3Ch] 0FFh +
jz loc_460091  +
mov eax [esi+30h] +
lea ecx [esi+30h] +
mov [esp+3Ch+var_18] ecx +
lea edx [eax+eax*2] +
mov eax [esp+3Ch+arg_10] +
mov eax [eax] +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov ecx [eax+edx*4+4] +
mov eax [esp+3Ch+arg_10] +
shr ecx 8 +
cmp ecx [eax+14h] +
jnb loc_45FC78  +
mov edx [esp+3Ch+arg_10] +
lea eax [ecx+ecx*4] +
mov edx [edx+0Ch] +
lea edx [edx+eax*4] +
movzx eax byte ptr [edx+0Ch] +
shr al 4 +
test al al +
jz loc_45FFDF  +
mov edx [esp+3Ch+arg_10] +
mov eax ecx +
sub eax [edx+18h] +
mov edx [edx+1Ch] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_45FCA2  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_45FC93  +
mov ecx [esp+3Ch+arg_4] +
mov [esi+30h] eax +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_451660  +
test eax eax +
jnz loc_460026  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
call loc_475050  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+8] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
lea edx [esi+0Ah] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_10] eax +
call strlen  +
mov ecx [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
add eax 1 +
mov [esp+3Ch+var_38] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+20h] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+24h] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+28h] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+2Ch] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+38h] +
mov eax [eax] +
add eax 3Ch +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Ch] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Dh] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Eh] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Fh] +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
movzx edx byte ptr [esi+3Fh] +
cmp edx 32h +
mov [esp+3Ch+var_34] eax +
mov eax 32h +
cmova edx eax +
lea eax [esi+41h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call loc_475050  +
mov ecx [esp+3Ch+var_28] +
mov edx [ecx+0B0h] +
mov [esi+4] eax +
test edx edx +
jz loc_46009D  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_38] esi +
call sub_474C60  +
test eax eax +
mov edx eax +
jz loc_45FE8F  +
mov eax [eax] +
test eax eax +
jz loc_4600FB  +
movzx edx byte ptr [edi+5] +
or byte ptr [edi+1Bh] 2 +
or edx 20h +
mov [edi+5] dl +
mov ecx [eax+38h] +
and edx 2 +
mov [edi] ecx +
jz loc_45FE8C  +
mov edx [eax+38h] +
or byte ptr [edx+5] 2 +
mov edi [eax+38h] +
mov [ebp+0] edi +
mov edx [ebx] +
mov eax edx +
add ebp 20h +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_45FB07  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_2C] +
mov eax [eax+4] +
test eax eax +
jz loc_45FECC  +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_2C] +
mov edx [eax] +
mov dword ptr [eax+4] 0 +
mov eax [esp+3Ch+var_2C] +
shl edx 5 +
xor edi edi +
lea esi [eax+edx+8] +
cmp ebx esi +
jnb loc_45FEFC  +
mov ebp [esp+3Ch+var_24] +
test byte ptr [ebx+1Bh] 2 +
jnz loc_45FEF5  +
mov [ebx+14h] edi +
mov edx ebp +
mov eax ebx +
call sub_45DE00  +
add edi eax +
add ebx 20h +
cmp ebx esi +
jb loc_45FEE1  +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+24h] +
mov [esi+24h] edi +
cmp edi eax +
mov [esi+28h] eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov esi [eax+0A0h] +
movzx eax byte ptr [ebp+1Bh] +
test esi esi +
setnz dl  +
and eax 0FFFFFFFDh +
add edx edx +
add ebp 20h +
or eax edx +
mov [ebp-5] al +
mov edx [ebx] +
mov eax edx +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_45FB07  +
jmp loc_45FEA8  +
cmp al 50h +
jnz loc_45FBE3  +
jmp loc_45FBB2  +
mov edi [edi] +
mov [ebp+0] edi +
jmp loc_45FE92  +
movzx eax byte ptr [ebp+18h] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_460088  +
mov edx eax +
and edx 7 +
cmp dl 2 +
jz loc_4600DD  +
jbe loc_46007A  +
cmp dl 3 +
jz loc_4600EC  +
cmp dl 4 +
mov esi 8 +
mov ecx 8 +
jnz loc_460088  +
mov edx [ebp+10h] +
shr al 3 +
and eax 1 +
lea edx [esi+edx+8] +
mov esi [esp+3Ch+arg_8] +
add edx [esi+6Ch] +
mov [esp+3Ch+var_3C] eax +
mov eax [esp+3Ch+var_1C] +
call sub_45E200  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_45FB8E  +
mov eax [edx+10h] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_43F6C0  +
test eax eax +
jz loc_45FE8F  +
mov edx [eax+7Ch] +
test edx edx +
cmovz edx eax +
mov eax [edx+3Ch] +
test eax eax +
jz loc_45FE8F  +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [esi+9] 1 +
mov ecx [esp+3Ch+var_14] +
mov eax [eax+24h] +
mov [esi+34h] ecx +
mov [esi+30h] eax +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_45FCC5  +
test byte ptr [esi+3Ch] 70h +
jnz loc_45FCC5  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+3Ch+var_34] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ecx +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jz loc_45FCC5  +
or byte ptr [edi+5] 0Ch +
jmp loc_45FCC5  +
mov ecx [esp+3Ch+var_24] +
test dl dl +
mov esi ecx +
jz loc_45FFB2  +
xor esi esi +
xor ecx ecx +
jmp loc_45FFB2  +
lea eax [esi+30h] +
mov [esp+3Ch+var_18] eax +
jmp loc_45FCC5  +
mov [esp+3Ch+var_30] offset free +
mov [esp+3Ch+var_34] offset sub_45E0B0 +
mov [esp+3Ch+var_38] offset loc_45DDF0 +
mov [esp+3Ch+var_3C] 1 +
call sub_474930  +
mov edx eax +
mov eax [esp+3Ch+var_28] +
test edx edx +
mov [eax+0B0h] edx +
jz loc_45FE8F  +
mov eax [esi+4] +
jmp loc_45FE45  +
mov esi 2 +
mov ecx 2 +
jmp loc_45FFB2  +
mov esi 4 +
mov ecx 4 +
jmp loc_45FFB2  +
mov [esp+3Ch+var_3C] 74h +
mov [esp+3Ch+var_18] edx +
call malloc  +
test eax eax +
jz loc_45FE8F  +
mov edx [esp+3Ch+var_18] +
mov ecx 1Dh +
mov edi eax +
movs   +
mov [edx] eax +
jmp loc_45FE8C  +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esi+1Ch] +
mov ecx [ebx+0ACh] +
test ecx ecx +
jnz loc_460162  +
mov eax [ebx+0B0h] +
test eax eax +
jz loc_460162  +
mov [esp+14h+var_14] eax +
call sub_474980  +
mov dword ptr [ebx+0B0h] 0 +
mov eax [ebx+0A4h] +
test eax eax +
jz loc_4601C0  +
movzx edx byte ptr [esi+3] +
mov dword ptr [eax+24h] 8 +
and edx 6 +
cmp dl 4 +
jz loc_460189  +
mov edx [ebx+0B8h] +
test edx edx +
jnz loc_4601A7  +
mov edx [esp+14h+arg_0] +
mov edx [edx+0A0h] +
mov edx [edx+934h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+0B4h] +
lea edx ds:0Ch[edx*8] +
mov [eax+24h] edx +
jmp loc_460189  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+30h] +
mov [esp+1Ch+var_18] offset a_eh_frame +
mov [esp+1Ch+var_1C] eax +
call sub_41E710  +
test eax eax +
jz loc_460220  +
mov eax [eax+0A0h] +
test eax eax +
jnz loc_46020A  +
jmp loc_460220  +
mov eax [eax+0A0h] +
test eax eax +
jz loc_460215  +
cmp dword ptr [eax+24h] 8 +
jbe loc_460200  +
mov eax 1 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebp [eax+34h] +
test ebp ebp +
jz loc_460277  +
mov eax [ebp+64h] +
test eax eax +
jz loc_46026D  +
mov edx offset a_eh_frame_entr +
nop   +
lea esi [esi+0] +
mov esi [eax] +
mov edi edx +
mov ecx 10h +
cmps   +
jz loc_460266  +
cmp dword ptr [eax+3Ch] offset off_492990 +
jnz loc_460280  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_460250  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jnz loc_46023F  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 40h +
mov esi [esp+40h+arg_0] +
mov [esp+40h+var_4] 0 +
mov edi [esi+1Ch] +
mov ebx [edi+0A4h] +
test ebx ebx +
jz loc_4603A6  +
cmp dword ptr [ebx+3Ch] offset off_492990 +
jz loc_460346  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jz loc_460346  +
cmp al 2 +
jz loc_460330  +
cmp al 4 +
jz loc_4603B2  +
mov eax [esi+30h] +
lea edx [esp+40h+var_4] +
mov [esp+40h+var_1C] edx +
mov [esp+40h+var_20] 0 +
mov [esp+40h+var_24] 0 +
mov [esp+40h+var_28] 0 +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_30] ebx +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_38] offset a__gnu_eh_frame +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] esi +
call sub_42E5A0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_460363  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_4601D0  +
test eax eax +
jnz loc_4603C4  +
mov ebx [edi+0A4h] +
or dword ptr [ebx+14h] 8000h +
mov eax 1 +
mov dword ptr [edi+0A4h] 0 +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+40h+var_4] +
or byte ptr [eax+33h] 2 +
mov edx [esi+30h] +
mov byte ptr [eax+31h] 2 +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+0DCh] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_38] 1 +
mov [esp+40h+var_40] esi +
call edx  +
mov eax [edi+0ACh] +
test eax eax +
jnz loc_4603A6  +
mov dword ptr [edi+0B8h] 1 +
add esp 40h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_460230  +
test eax eax +
jnz loc_4602D5  +
jmp loc_460346  +
movzx eax byte ptr [esi+3] +
mov ebx [edi+0A4h] +
and eax 6 +
jmp loc_4602CD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_C] +
movzx edx word ptr [ecx+18h] +
mov eax esi +
and dx 380h +
cmp dx 180h +
jz loc_460410  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx+8Ch] +
mov edi [edx+88h] +
mov edx [ecx+28h] +
cmp esi edx +
jnb loc_460470  +
mov eax [edi] +
test eax eax +
jz loc_4605B3  +
xor edx edx +
jmp loc_46043F  +
add ebp [ecx+14h] +
cmp esi ebp +
jb loc_460480  +
lea edx [ebx+1] +
cmp edx eax +
jnb loc_460458  +
lea ebx [edx+eax] +
shr ebx 1 +
mov ecx ebx +
shl ecx 5 +
add ecx edi +
mov ebp [ecx+18h] +
cmp esi ebp +
jnb loc_460431  +
mov eax ebx +
cmp edx eax +
jb loc_46043F  +
mov [esp+2Ch+var_28] 628h +
mov [esp+2Ch+var_2C] offset a____Binutil_29 +
call sub_420BA0  +
jmp loc_460484  +
sub eax edx +
add eax [ecx+24h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx eax +
jnb loc_460458  +
mov edx ebx +
mov eax 0FFFFFFFFh +
shl edx 5 +
add edx edi +
movzx ecx byte ptr [edx+23h] +
test cl 2 +
jnz loc_460401  +
test cl 1 +
jz loc_460560  +
test byte ptr [edx+0Dh] 4 +
mov ebp [edx+18h] +
jz loc_4604C4  +
movzx eax byte ptr [edx+0Ch] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_460401  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+24h] +
test edx edx +
jz loc_460530  +
test byte ptr [eax+23h] 8 +
jz loc_460530  +
lea eax [ebp+8] +
mov [esp+2Ch+var_18] eax +
add eax [edx+4] +
cmp esi eax +
jb loc_460530  +
mov ecx [edx] +
test ecx ecx +
jz loc_460530  +
cmp esi eax +
jz loc_4605BA  +
mov [esp+2Ch+var_14] edi +
mov eax 1 +
mov edi [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] ebx +
mov ebx ecx +
jmp loc_46051D  +
mov ecx [edx+eax*4] +
add ecx edi +
cmp ecx esi +
jz loc_4605BA  +
add eax 1 +
cmp eax ebx +
jbe loc_460510  +
mov edi [esp+2Ch+var_14] +
mov ebx [esp+2Ch+var_10] +
lea esi [esi+0] +
shl ebx 5 +
add edi ebx +
movzx eax byte ptr [edi+23h] +
add edi 8 +
add esi [edi+14h] +
sub esi ebp +
test al 1 +
jz loc_4605A6  +
shr al 2 +
and eax 1 +
test byte ptr [edi+5] 10h +
jz loc_460554  +
add eax 1 +
add esi eax +
add eax esi +
jmp loc_460401  +
and ecx 8 +
mov ebp [edx+18h] +
jz loc_460578  +
lea edx [ebp+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_460401  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+8] +
test byte ptr [edx+5] 2 +
jz loc_4604C4  +
movzx eax byte ptr [eax+22h] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jnz loc_4604C4  +
jmp loc_460401  +
shr al 2 +
and eax 1 +
add eax esi +
jmp loc_460401  +
xor ebx ebx +
jmp loc_460458  +
mov eax 0FFFFFFFEh +
jmp loc_460401  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_8] +
mov edx [ebx+28h] +
mov eax [ebx+8Ch] +
test edx edx +
mov ebp [eax+88h] +
jnz loc_4605F4  +
mov eax [ebx+24h] +
mov [ebx+28h] eax +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 300h +
jz loc_460616  +
mov [esp+3Ch+var_38] 66Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_29 +
call sub_420BA0  +
test byte ptr [ebx+15h] 80h +
jnz loc_460622  +
test byte ptr [ebp+15h] 80h +
jz loc_460630  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+3Ch] +
mov [esp+3Ch+var_28] edx +
mov edx [ebx+38h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] edx +
call sub_41EE20  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_460627  +
mov eax [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_3C] edi +
call eax  +
mov ecx [ebx+28h] +
cmp ecx 8 +
mov edi eax +
jbe loc_4606E4  +
mov [esp+3Ch+var_20] ebp +
mov esi 8 +
mov ebp [esp+3Ch+arg_0] +
jmp loc_4606A1  +
mov ecx [ebx+28h] +
add esi 8 +
cmp ecx esi +
jbe loc_4606E0  +
mov edi eax +
mov eax [ebp+4] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+2Ch] +
add ecx esi +
mov [esp+3Ch+var_3C] ecx +
call eax  +
add eax esi +
cmp eax edi +
ja loc_460695  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSNotInOrder +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_492AE8  +
xor eax eax +
jmp loc_460627  +
mov ebp [esp+3Ch+var_20] +
mov edi [ebp+3Ch] +
mov edx [ebp+38h] +
add edx [edi+1Ch] +
mov edi [ebx+3Ch] +
add edx [ebp+24h] +
and edx 0FFFFFFFEh +
sub edx [edi+1Ch] +
sub edx [ebx+38h] +
mov ebp edx +
sub ebp ecx +
test ebp 1 +
jnz loc_4607D0  +
cmp edx eax +
jbe loc_460800  +
mov eax [ebx+24h] +
cmp ecx eax +
jz loc_460622  +
mov edx [esp+3Ch+arg_0] +
add ecx 8 +
cmp eax ecx +
mov edx [edx+4] +
mov edi [edx+1B0h] +
jz loc_460747  +
mov [esp+3Ch+var_38] 69Eh +
mov [esp+3Ch+var_3C] offset a____Binutil_29 +
call sub_420BA0  +
mov eax [edi+1A0h] +
test eax eax +
jz loc_460830  +
mov eax [esp+3Ch+arg_0] +
lea edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_20] edx +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov ebp [eax+30h] +
mov eax [edi+1A0h] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
lea ecx [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call ebp  +
mov ecx [ebx+3Ch] +
mov [esp+3Ch+var_28] 8 +
mov eax [ebx+28h] +
add eax [ebx+38h] +
mov edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_41EE20  +
jmp loc_460627  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSInvalidInput +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_492AE8  +
mov [esp+3Ch+var_3C] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_460627  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSPointsPastEn +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_492AE8  +
mov [esp+3Ch+var_3C] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_460627  +
mov [esp+3Ch+var_38] 6A0h +
mov [esp+3Ch+var_3C] offset a____Binutil_29 +
call sub_420BA0  +
jmp loc_460755  +
***
push esi  +
push esi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+5Ch+arg_4] +
mov esi [esp+5Ch+arg_0] +
mov ebx [eax+1Ch] +
movzx eax byte ptr [eax+3] +
mov edi [ebx+0A4h] +
mov byte ptr [esp+5Ch+var_34] al +
and eax 6 +
jz loc_461A31  +
test edi edi +
jz loc_461A31  +
cmp al 4 +
jz loc_461A40  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_461B08  +
mov edx [ebx+0A8h] +
mov eax 8 +
cmp edx [ebx+0B4h] +
lea ecx ds:0Ch[edx*8] +
cmovz eax ecx +
mov [esp+5Ch+var_5C] eax +
xor ebp ebp +
call sub_42B400  +
test eax eax +
mov [esp+5Ch+var_20] eax +
jz loc_461A27  +
mov [esp+5Ch+var_58] offset a_eh_frame +
mov [esp+5Ch+var_5C] esi +
call sub_41E710  +
test eax eax +
jz loc_461B58  +
mov ebp [esp+5Ch+var_20] +
lea ecx [esp+5Ch+var_14] +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
mov byte ptr [ebp+0] 1 +
mov edx [esi+4] +
mov edx [edx+1B0h] +
mov edx [edx+128h] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_44] ecx +
mov [esp+5Ch+var_48] 4 +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call edx  +
mov [ebp+1] al +
mov ebp [ebx+0BCh] +
test ebp ebp +
jz loc_461831  +
mov eax [ebx+0B4h] +
cmp [ebx+0A8h] eax +
jz loc_461AE0  +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 0FFh +
mov byte ptr [eax+3] 0FFh +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
lea edx [ebp+4] +
mov eax [eax+30h] +
mov [esp-10h+arg_0] edx +
mov edx [esp+48h] +
mov [esp+0] edx +
call eax  +
cmp byte ptr [ebp+2] 0FFh +
jz loc_4619D1  +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
mov ecx [ebx+0B4h] +
mov edx ebp +
mov eax [eax+30h] +
add edx 8 +
mov [esp-10h+arg_0] edx +
mov [esp+0] ecx +
call eax  +
mov eax [ebx+0BCh] +
mov edx [ebx+0B4h] +
mov dword ptr [esp+0Ch] offset sub_45E1C0 +
mov [esp-10h+arg_4] 0Ch +
mov [esp+0] eax +
mov [esp-10h+arg_0] edx +
call qsort  +
lea eax [ebp+10h] +
xor ebp ebp +
mov [esp+2Ch] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov [esp+30h] edi +
jmp loc_46195D  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
lea ecx [edi-4] +
mov [esp-10h+arg_0] ecx +
mov [esp+0] eax +
call edx  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp+8] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jz loc_461AF1  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
mov [esp-10h+arg_0] edi +
mov [esp+0] eax +
call edx  +
mov ecx [esp+28h] +
test ecx ecx +
jz loc_46194A  +
mov edx [ebx+0BCh] +
lea ecx [edx+ebp-0Ch] +
mov eax [ecx+4] +
add eax [ecx] +
cmp [edx+ebp] eax +
mov eax 1 +
cmovnb eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+28h] +
add ebp 0Ch +
add dword ptr [esp+2Ch] 8 +
add eax 1 +
mov [esp+28h] eax +
mov eax [esp+28h] +
cmp eax [ebx+0B4h] +
jnb loc_4619A7  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jnz loc_4618D1  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_4618D1  +
mov edx [esp+34h] +
mov edi [esp+30h] +
test edx edx +
jnz loc_461B40  +
mov eax [esp+38h] +
test eax eax +
jnz loc_461B25  +
mov eax [esp+34h] +
or eax [esp+38h] +
jnz loc_461B12  +
mov ebp 1 +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov edi [edi+38h] +
mov dword ptr [esp+10h] 0 +
mov [esp-10h+arg_0] eax +
mov [esp+0] esi +
mov [esp+0Ch] edi +
mov edi [esp+3Ch] +
mov [esp-10h+arg_4] edi +
call sub_41EE20  +
mov [esp+0] edi +
test eax eax +
mov eax 0 +
cmovz ebp eax +
call free  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_461A27  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov ebp 1 +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [edi+24h] 8 +
jnz loc_461B88  +
lea ebx [esp+5Ch+var_14] +
mov eax ebx +
lea edx [esp+5Ch+var_C] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_461A54  +
mov eax [esi+4] +
mov byte ptr [esp+5Ch+var_14] 2 +
mov ebp [eax+1B0h] +
mov eax [ebp+19Ch] +
test eax eax +
jz loc_461B69  +
mov ecx [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ecx +
call eax  +
mov [esp+49h] al +
mov eax [esi+4] +
mov edx [eax+30h] +
lea eax [esp+4Ch] +
mov [esp-10h+arg_0] eax +
mov eax [edi+3Ch] +
mov eax [eax+24h] +
sub eax 8 +
shr eax 3 +
mov [esp+0] eax +
call edx  +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov ecx [edi+38h] +
mov [esp-10h+arg_4] ebx +
mov [esp+0] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] ecx +
mov [esp-10h+arg_0] eax +
call sub_41EE20  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
mov ebp eax +
mov eax ebp +
pop ebp  +
retn   +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 3 +
mov byte ptr [eax+3] 3Bh +
jmp loc_46183D  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_46190F  +
mov eax 8 +
jmp loc_461792  +
mov dword ptr [esp+0] 11h +
xor ebp ebp +
call sub_420C50  +
jmp loc_4619D6  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_hdr +
call eax  +
jmp loc_4619C3  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_h_0 +
call eax  +
jmp loc_4619B7  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_461A27  +
mov [esp+5Ch+var_58] 87Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_29 +
call sub_420BA0  +
mov eax [ebp+19Ch] +
jmp loc_461A7A  +
mov [esp+5Ch+var_54] offset aWrite_compact_ +
mov [esp+5Ch+var_58] 877h +
mov [esp+5Ch+var_5C] offset a____Binutil_29 +
call sub_420BD0  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+5Ch+var_58] +
mov eax [eax+0A0h] +
cmp byte ptr [eax+4] 2 +
setz al  +
movzx eax al +
lea eax ds:4[eax*4] +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+14h] +
mov edx [eax+3Ch] +
mov edx [edx+1Ch] +
add edx [eax+38h] +
mov eax [esp+0Ch] +
mov eax [eax+1Ch] +
sub eax edx +
mov edx [esp+1Ch] +
sub eax [esp+18h] +
add eax [esp+10h] +
mov [edx] eax +
mov eax 1Bh +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_461C30  +
mov eax [edx+4] +
mov eax [eax+0C8h] +
add esp 1Ch +
jmp eax  +
mov [esp+1Ch+var_1C] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_461C74  +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0CCh] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_461CB4  +
mov dword ptr [esp] 5 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D4h] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov ecx [esp+24h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_461CF1  +
movzx eax byte ptr [ecx+28h] +
and eax 7 +
cmp al 1 +
jz loc_461D03  +
mov dword ptr [esp] 3 +
call sub_420C50  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D0h] +
add esp 1Ch +
jmp eax  +
***
jmp loc_461D20  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
test ebx ebx +
jnz loc_461D38  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+20h] +
test eax eax +
jz loc_461D2D  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_461C10  +
test eax eax +
mov esi eax +
jz loc_461D2D  +
mov ebx [ebx] +
test ebx ebx +
jz loc_461D2D  +
mov dword ptr [esp+4] 2Fh +
mov [esp] eax +
call strrchr  +
mov [esp] ebx +
mov dword ptr [esp+4] 2Fh +
lea edx [eax+1] +
test eax eax +
cmovnz esi edx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call sub_476180  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [edx] +
mov eax [esp+44h+arg_8] +
mov esi [esp+44h+arg_0] +
mov ebx [esp+44h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_461E18  +
mov edi ebx +
mov eax 1 +
or edi esi +
jz loc_461E0A  +
mov ecx [esp+44h+arg_C] +
cmp ebx 0 +
mov edx [ecx] +
jbe loc_461E12  +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebp +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] offset aDwarfErrorOffs +
call off_492AE8  +
mov [esp+44h+var_44] 11h +
call sub_420C50  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
jb loc_461E0A  +
jmp loc_461DE3  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_41E710  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jz loc_461E90  +
mov eax [esp+44h+var_20] +
mov eax [eax+28h] +
test eax eax +
jz loc_461E83  +
mov edx [esp+44h+arg_C] +
test ecx ecx +
mov [edx] eax +
jz loc_461EE1  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] eax +
call sub_46A950  +
mov edi [esp+44h+arg_8] +
test eax eax +
mov [edi] eax +
jnz loc_461DCD  +
xor eax eax +
jmp loc_461E0A  +
mov eax [esp+44h+var_20] +
mov eax [eax+24h] +
jmp loc_461E47  +
mov ebp [edx+4] +
test ebp ebp +
jz loc_461EBB  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_41E710  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jnz loc_461E3C  +
mov eax [edx] +
mov [esp+44h+var_44] offset aDwarfErrorCanT +
mov [esp+44h+var_40] eax +
call off_492AE8  +
mov [esp+44h+var_44] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_461E0A  +
mov [esp+44h+var_44] eax +
call sub_42B400  +
mov ecx [esp+44h+arg_8] +
test eax eax +
mov [ecx] eax +
jz loc_461E08  +
mov ecx [esp+44h+arg_C] +
mov edx [ecx] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edi +
call sub_41EF20  +
test eax eax +
jnz loc_461DCD  +
xor eax eax +
jmp loc_461E0A  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov [esp+38h+var_24] edx +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
mov eax [esi] +
mov [esp+38h+var_34] 1Ch +
mov [esp+38h+var_38] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_462122  +
mov dword ptr [eax] 0 +
mov eax [esp+38h+var_24] +
test edi edi +
mov [ebx+4] eax +
mov eax ebp +
mov [ebx+18h] al +
mov eax [esp+38h+arg_4] +
mov [ebx+0Ch] eax +
mov eax [esp+38h+arg_8] +
mov [ebx+10h] eax +
mov eax [esp+38h+arg_C] +
mov [ebx+14h] eax +
movzx eax [esp+38h+arg_10] +
mov [ebx+19h] al +
jz loc_461FB2  +
cmp byte ptr [edi] 0 +
jnz loc_4620F1  +
mov dword ptr [ebx+8] 0 +
mov eax [esp+38h+var_20] +
test eax eax +
jz loc_461FD9  +
mov eax [eax+8] +
mov edi [eax+4] +
cmp edi [esp+38h+var_24] +
jz loc_462130  +
movzx edx byte ptr [eax+19h] +
test dl dl +
jz loc_462013  +
mov [esp+38h+var_38] 0Ch +
call sub_42B400  +
test eax eax +
jz loc_462122  +
mov edx [esi+1Ch] +
mov edi [esp+38h+var_24] +
mov [eax+8] ebx +
mov [eax+4] edx +
mov [eax] edi +
add dword ptr [esi+0Ch] 1 +
mov [esi+1Ch] eax +
mov eax 1 +
mov [esi+20h] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+4] +
cmp edi ebp +
jb loc_4620D0  +
jz loc_4620C3  +
mov ecx [esi+20h] +
cmp ebp [ecx+4] +
mov [esp+38h+var_1C] ecx +
ja loc_462070  +
jz loc_4621E3  +
mov ecx [esp+38h+var_1C] +
mov ecx [ecx] +
test ecx ecx +
jz loc_4621C4  +
cmp ebp [ecx+4] +
ja loc_4621C4  +
jnz loc_462070  +
movzx edx byte ptr [ecx+18h] +
cmp [ebx+18h] dl +
ja loc_4621C4  +
lea esi [esi+0] +
jnz loc_462070  +
movzx edx byte ptr [ecx+19h] +
cmp [ebx+19h] dl +
jb loc_4621C4  +
nop   +
mov edx [eax] +
test edx edx +
jnz loc_4620A7  +
jmp loc_462210  +
cmp ebp [edx+4] +
ja loc_462190  +
lea esi [esi+0] +
jz loc_462170  +
mov ecx [edx] +
test ecx ecx +
jz loc_4621C0  +
mov edi [edx+4] +
mov eax edx +
mov edx ecx +
cmp ebp edi +
ja loc_462096  +
jnz loc_462080  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
ja loc_462096  +
jnz loc_462080  +
movzx ecx byte ptr [eax+19h] +
cmp [ebx+19h] cl +
jb loc_462096  +
jmp loc_462080  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
jbe loc_462024  +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax [esi+20h] +
test eax eax +
jz loc_4621D6  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
call strlen  +
mov edx [esi] +
mov [esp+38h+var_38] edx +
add eax 1 +
mov [esp+38h+var_34] eax +
call sub_425850  +
test eax eax +
mov [ebx+8] eax +
jz loc_462122  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call strcpy  +
jmp loc_461FB9  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebp +
movzx edx byte ptr [eax+19h] +
cmp [eax+18h] cl +
jnz loc_461FD5  +
movzx ecx dl +
cmp ecx dword ptr [esp+38h+arg_10] +
jnz loc_461FD5  +
cmp eax [esi+20h] +
jz loc_462219  +
mov eax [eax] +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax 1 +
jmp loc_46200B  +
movzx ecx byte ptr [edx+18h] +
cmp [ebx+18h] cl +
ja loc_462190  +
jnz loc_462096  +
movzx ecx byte ptr [edx+19h] +
cmp [ebx+19h] cl +
jnb loc_462096  +
lea esi [esi+0] +
mov ecx [eax] +
mov edx eax +
mov eax [esp+38h+var_20] +
mov [esi+20h] edx +
mov esi [esp+38h+var_24] +
mov [ebx] ecx +
mov [edx] ebx +
cmp esi [eax] +
jnb loc_4620E4  +
mov eax [esp+38h+var_20] +
mov esi [esp+38h+var_24] +
mov [eax] esi +
jmp loc_4620E4  +
xor ecx ecx +
jmp loc_462194  +
mov eax [esp+38h+var_1C] +
mov [ebx] ecx +
mov [eax] ebx +
mov eax 1 +
jmp loc_46200B  +
mov [esi+20h] ebx +
mov eax 1 +
jmp loc_46200B  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+18h] +
cmp [ebx+18h] cl +
ja loc_462070  +
jnz loc_462036  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+19h] +
cmp [ebx+19h] cl +
jb loc_462070  +
jmp loc_462036  +
mov edx eax +
xor ecx ecx +
jmp loc_462194  +
mov [esi+20h] ebx +
lea esi [esi+0] +
jmp loc_462155  +
***
push ebx  +
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_4622C4  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_42A800  +
test eax eax +
jz loc_4622D8  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
test eax eax +
jnz loc_4622A0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+34h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_462300  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+28h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_462320  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_462340  +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_462380  +
mov eax 1 +
ja loc_462377  +
mov edx [edx+8] +
mov ecx [ecx+8] +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jb loc_462377  +
ja loc_462380  +
movzx edx byte ptr [edx+18h] +
cmp [ecx+18h] dl +
jb loc_462377  +
setnbe al  +
movzx eax al +
neg eax  +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
add eax 0Ch +
cmp [eax+4] edx +
ja loc_46239D  +
cmp edx [eax+8] +
jb loc_4623A6  +
mov eax [eax] +
test eax eax +
jnz loc_462393  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [edx+18h] +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_1C] eax +
call sub_41E710  +
test eax eax +
jz loc_4623D6  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
test eax eax +
jz loc_4623ED  +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ebx +
call sub_41E710  +
test eax eax +
jnz loc_4623CE  +
mov eax [ebx+64h] +
mov ebp offset a_gnu_linkonc_0 +
mov ebx 11h +
test eax eax +
jz loc_4623CE  +
nop   +
mov esi [eax] +
mov edi ebp +
mov ecx ebx +
cmps   +
jz loc_4623CE  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_462400  +
xor eax eax +
jmp loc_4623CE  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
test ecx ecx +
jz loc_46249A  +
mov ebx [ecx+0Ch] +
test ebx ebx +
jz loc_462490  +
mov eax [edx+18h] +
mov [esp+28h+var_1C] eax +
jmp loc_46246C  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_462457  +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call strcmp  +
test eax eax +
jz loc_462482  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
jz loc_462482  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_462490  +
mov esi [ebx] +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_462440  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4623B0  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
cmp ecx edi +
jz loc_462501  +
mov esi [edx+8] +
mov ebx edx +
test esi esi +
jnz loc_4624EE  +
mov [edx+4] ecx +
mov eax 1 +
mov [edx+8] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edi [ebx+4] +
jz loc_462510  +
mov ebx [ebx] +
test ebx ebx +
jz loc_462520  +
mov esi [ebx+8] +
cmp ecx esi +
jnz loc_4624E0  +
mov [ebx+8] edi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+4] ecx +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax] +
mov [esp-0Ch+arg_0] 0Ch +
mov [esp-0Ch+arg_8] ecx +
mov [esp-0Ch+arg_4] edx +
mov [esp+0] eax +
call sub_425850  +
test eax eax +
jz loc_46255E  +
mov ecx [esp-0Ch+arg_8] +
mov edx [esp-0Ch+arg_4] +
mov [eax+8] edi +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_4624D2  +
***
push ebx  +
sub esp 10h +
mov eax [eax+4] +
mov esi [esp+10h+arg_0] +
cmp dword ptr [eax+4] 5 +
jz loc_4625C7  +
movzx ebx dl +
add ebx ecx +
cmp esi ebx +
jb loc_462610  +
cmp dl 4 +
jz loc_462650  +
cmp dl 8 +
jz loc_462630  +
cmp dl 2 +
jz loc_462660  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 346h +
mov [esp+10h+var_10] offset a____Binutil_14 +
call sub_420BD0  +
mov ebx [eax+1B0h] +
movzx edi dl +
add edi ecx +
movzx ebx byte ptr [ebx+1ACh] +
shr bl 7 +
cmp esi edi +
jb loc_462610  +
test bl bl +
jz loc_462590  +
cmp dl 4 +
jz loc_462635  +
cmp dl 8 +
jz loc_462620  +
cmp dl 2 +
jz loc_462640  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 338h +
mov [esp+10h+var_10] offset a____Binutil_14 +
call sub_420BD0  +
nop   +
xor eax eax +
xor edx edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+20h] +
mov [esp+10h+arg_0] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [eax+1Ch] +
jmp loc_462623  +
mov eax [eax+2Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_462614  +
mov eax [eax+38h] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_462614  +
mov eax [eax+28h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_462614  +
mov eax [eax+34h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_462614  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_14] edx +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+50h] +
mov edi [eax+54h] +
test edi edi +
jz loc_46272F  +
add esi edi +
jb loc_462763  +
movzx edx byte ptr [ebx+58h] +
add edi [eax+58h] +
lea eax [ebx+8] +
mov [esp+2Ch+var_10] eax +
movzx ecx dl +
mov [esp+2Ch+var_18] edi +
jmp loc_4626BE  +
cmp ebp 0FFFFFFFFh +
jnz loc_462706  +
mov [esp+2Ch+var_1C] eax +
mov edi [esp+2Ch+var_18] +
lea eax [esi+ecx*2] +
cmp edi eax +
jb loc_462763  +
mov eax [ebx+8] +
mov ecx esi +
mov [esp+2Ch+var_2C] edi +
call sub_462570  +
movzx edx byte ptr [ebx+58h] +
mov [esp+2Ch+var_2C] edi +
mov ebp eax +
movzx eax dl +
add esi eax +
mov eax [ebx+8] +
mov ecx esi +
call sub_462570  +
movzx edx byte ptr [ebx+58h] +
movzx ecx dl +
add esi ecx +
mov edi eax +
or edi ebp +
jz loc_462770  +
cmp eax 0FFFFFFFFh +
jnz loc_4626B5  +
mov edi [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_14] +
add eax edi +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
lea ecx [ebp+edi+0] +
call sub_4624B0  +
test eax eax +
jz loc_462763  +
movzx edx byte ptr [ebx+58h] +
mov eax edi +
movzx ecx dl +
jmp loc_4626BA  +
mov edi [eax+8] +
lea edx [eax+58h] +
add eax 54h +
mov ecx [eax-1Ch] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+8] +
mov [esp+2Ch+var_20] edx +
add edi 58h +
mov [esp+2Ch+var_2C] 0 +
mov edx edi +
mov [esp+2Ch+var_28] 0 +
call sub_461DB0  +
test eax eax +
jnz loc_46277D  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
mov edi [eax+54h] +
jmp loc_462696  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edi [ecx+8] +
mov eax [esp+40h+arg_4] +
cmp [esp+40h+arg_0] eax +
jnb loc_462860  +
cmp edx 0Fh +
mov [esi+4] edx +
jz loc_462915  +
ja loc_462810  +
cmp edx 8 +
jz loc_462DA5  +
ja loc_462885  +
cmp edx 4 +
lea esi [esi+0] +
jz loc_462C85  +
jbe loc_462990  +
cmp edx 6 +
nop   +
jz loc_46283C  +
ja loc_4628F3  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+2] +
cmp [esp+40h+arg_4] ebp +
jnb loc_462B87  +
mov [esi+0Ch] ebx +
mov eax ebp +
mov [esi+8] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 16h +
jz loc_462CE0  +
ja loc_4628C5  +
cmp edx 12h +
jz loc_4627E8  +
jbe loc_462954  +
cmp edx 14h +
lea esi [esi+0] +
jz loc_4628F3  +
ja loc_462915  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+4] +
cmp [esp+40h+arg_4] ebp +
jb loc_4627FD  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_462300  +
mov ecx eax +
jmp loc_4627FD  +
mov [esp+40h+var_40] offset aDwarfErrorInfo +
call off_492AE8  +
mov [esp+40h+var_40] 11h +
call sub_420C50  +
mov eax [esp+40h+arg_0] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 0Bh +
jz loc_4628A6  +
jbe loc_462BA0  +
cmp edx 0Dh +
jz loc_462C70  +
lea esi [esi+0] +
ja loc_462AE4  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+1] +
cmp [esp+40h+arg_4] ebp +
jb loc_4627FD  +
movzx ecx byte ptr [eax] +
xor ebx ebx +
jmp loc_4627FD  +
cmp edx 19h +
jz loc_462D64  +
nop   +
jbe loc_462BF5  +
cmp edx 1F20h +
jz loc_462D30  +
cmp edx 1F21h +
jz loc_462A41  +
cmp edx 20h +
jnz loc_462966  +
mov eax [esp+40h+arg_0] +
xor edx edx +
lea ebp [eax+8] +
xor eax eax +
cmp [esp+40h+arg_4] ebp +
jnb loc_462D80  +
mov [esi+8] eax +
mov eax ebp +
mov [esi+0Ch] edx +
jmp loc_46287D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] eax +
call sub_42BFC0  +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
add eax [esp+40h+var_14] +
jmp loc_46287D  +
cmp edx 10h +
jz loc_462A04  +
cmp edx 11h +
jz loc_4628A6  +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] offset aDwarfErrorInva +
call off_492AE8  +
mov [esp+40h+var_40] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_46287D  +
cmp edx 1 +
jz loc_4629D8  +
cmp edx 3 +
jnz loc_462966  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_462983  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+2] +
cmp [esp+40h+arg_4] ecx +
jnb loc_462DD4  +
mov dword ptr [ebx] 0 +
mov ebp ecx +
xor ecx ecx +
mov [ebx+4] ecx +
mov eax ebp +
mov [esi+8] ebx +
jmp loc_46287D  +
mov edi [esp+40h+arg_4] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov ecx [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
call sub_462570  +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+58h] +
add eax ebp +
jmp loc_46287D  +
mov eax [ecx+54h] +
sub eax 3 +
cmp eax 1 +
ja loc_4629D8  +
cmp byte ptr [ecx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_462F69  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_462F8D  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx eax byte ptr [ebx+59h] +
add eax [esp+40h+arg_0] +
jmp loc_46287D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_462EA0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
jz loc_462E05  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_462ECD  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+20h] +
mov [esp+40h+var_14] ecx +
test eax eax +
jz loc_462EE8  +
mov ecx [ebp+8] +
mov eax [ebx+50h] +
lea edx [ecx+78h] +
lea ecx [ebp+28h] +
mov eax [eax+20h] +
mov [esp+40h+var_34] ecx +
lea ecx [ebp+24h] +
mov [esp+40h+var_38] ecx +
mov ecx [esp+40h+var_2C] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] ecx +
xor ecx ecx +
call sub_461DB0  +
test eax eax +
jz loc_462AD0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+28h] +
ja loc_462AD0  +
cmp edi eax +
jb loc_462D91  +
nop   +
mov ebp [esp+40h+var_14] +
xor edi edi +
mov eax [esp+40h+arg_0] +
mov [esi+8] edi +
add eax ebp +
jmp loc_46287D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_462EA0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_28] edi +
jz loc_462E31  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_462EA9  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+8] +
mov [esp+40h+var_14] ecx +
mov ecx [ebp+38h] +
mov [esp+40h+var_40] edi +
lea edx [eax+70h] +
lea eax [ebp+50h] +
mov [esp+40h+var_34] eax +
lea eax [ebp+4Ch] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_2C] +
mov [esp+40h+var_3C] eax +
mov eax [esp+40h+var_28] +
call sub_461DB0  +
test eax eax +
jz loc_462AD0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+50h] +
ja loc_462AD0  +
cmp edi eax +
jnb loc_462AD0  +
add edi [ebp+4Ch] +
cmp byte ptr [edi] 0 +
jz loc_462AD0  +
mov ebp [esp+40h+var_14] +
jmp loc_462AD6  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_4622E0  +
mov ecx eax +
jmp loc_4627FD  +
cmp edx 9 +
jz loc_462C07  +
cmp edx 0Ah +
jnz loc_462966  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_425850  +
test eax eax +
jz loc_462983  +
mov edi [esp+40h+arg_0] +
lea edx [edi+1] +
cmp [esp+40h+arg_4] edx +
jb loc_462DC5  +
movzx ebp byte ptr [edi] +
mov [eax] ebp +
add ebp edx +
cmp [esp+40h+arg_4] ebp +
jb loc_462FBD  +
mov [eax+4] edx +
mov [esi+8] eax +
mov eax ebp +
jmp loc_46287D  +
cmp edx 17h +
jz loc_462D30  +
cmp edx 18h +
jnz loc_462966  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_462983  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_42BFC0  +
mov ecx [esp+40h+arg_0] +
xor edx edx +
add ecx [esp+40h+var_14] +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
mov [ebx] eax +
mov eax ebp +
cmovnb edx ecx +
mov [ebx+4] edx +
mov [esi+8] ebx +
jmp loc_46287D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_30] eax +
jmp loc_462925  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_462983  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+4] +
cmp [esp+40h+arg_4] ecx +
jb loc_4629C1  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_462300  +
mov ecx [esp+40h+var_2C] +
mov [ebx] eax +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
jnb loc_4629CB  +
mov ecx ebp +
jmp loc_4629C7  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_42BFC0  +
mov edx [esp+40h+arg_0] +
mov ecx ebx +
mov edi [esp+40h+arg_4] +
add edx [esp+40h+var_14] +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] edx +
mov edx eax +
mov eax esi +
call sub_462790  +
jmp loc_46287D  +
cmp byte ptr [ebx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_462DE9  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_462E8F  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+59h] +
mov eax [esp+40h+arg_0] +
add eax ebp +
jmp loc_46287D  +
mov dword ptr [esi+8] 1 +
mov eax [esp+40h+arg_0] +
mov dword ptr [esi+0Ch] 0 +
jmp loc_46287D  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_462320  +
jmp loc_462908  +
add edi [ebp+24h] +
cmp byte ptr [edi] 0 +
jnz loc_462B7E  +
lea esi [esi+0] +
jmp loc_462AD0  +
mov eax [esp+40h+arg_0] +
cmp byte ptr [eax] 0 +
jnz loc_462E66  +
mov eax 1 +
xor edx edx +
mov [esi+8] edx +
add eax [esp+40h+arg_0] +
jmp loc_46287D  +
mov dword ptr [eax] 0 +
mov ebp edx +
xor edx edx +
jmp loc_462BE8  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_4622E0  +
jmp loc_462CC0  +
add eax 4 +
xor edx edx +
xor ecx ecx +
cmp [esp+40h+arg_4] eax +
jnb loc_462F54  +
mov [esi+8] edx +
mov [esi+0Ch] ecx +
jmp loc_462D55  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_462A74  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_462300  +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov edi eax +
jmp loc_462A7E  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_462B1B  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_462300  +
mov edi [ebx+8] +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_28] edi +
mov edi eax +
jmp loc_462B25  +
mov eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_4] +
add eax 1 +
jmp loc_462E80  +
add eax 1 +
cmp byte ptr [eax-1] 0 +
jz loc_462F47  +
cmp eax edx +
jnz loc_462E73  +
sub eax [esp+40h+arg_0] +
xor edx edx +
jmp loc_462DB9  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_462320  +
jmp loc_462D4F  +
xor ebp ebp +
xor edi edi +
jmp loc_462AD6  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_462320  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov eax [ebx+8] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_28] eax +
jmp loc_462B25  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_462320  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov [esp+40h+var_2C] edx +
jmp loc_462A7E  +
mov eax [ebx+8] +
mov [esp+40h+var_3C] offset aHomeJenkinsMin +
mov [esp+40h+var_40] eax +
call sub_425C90  +
test eax eax +
mov [esp+40h+var_28] eax +
jz loc_462AD0  +
mov eax [esp+40h+var_28] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] eax +
call sub_425380  +
test eax eax +
jz loc_462FA6  +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_24] eax +
call sub_423080  +
mov edx [esp+40h+var_24] +
test eax eax +
jz loc_462F9E  +
mov [ebp+20h] edx +
jmp loc_462A8D  +
sub eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_0] +
jmp loc_462DB9  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_462300  +
xor ecx ecx +
mov edx eax +
jmp loc_462DFA  +
lea ecx [eax+4] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jb loc_462A2E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_462300  +
xor edx edx +
jmp loc_462A2E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_462320  +
jmp loc_462A2E  +
mov [esp+40h+var_40] edx +
call sub_4254C0  +
mov eax [esp+40h+var_28] +
xor edi edi +
mov [esp+40h+var_40] eax +
call free  +
mov ebp [esp+40h+var_14] +
jmp loc_462AD6  +
mov edx ebp +
jmp loc_462DCB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
lea ecx [edx-1] +
cmp ecx [eax+4] +
jb loc_463000  +
test edx edx +
jnz loc_4630C0  +
mov [esp+2Ch+var_2C] offset aUnknown_3 +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [eax+18h] +
mov ebx [edx] +
movzx ecx byte ptr [ebx] +
cmp cl 5Ch +
jz loc_4630B0  +
cmp cl 2Fh +
jz loc_4630B0  +
test cl cl +
jnz loc_4630A2  +
mov edx [edx+4] +
test edx edx +
jz loc_463037  +
cmp edx [eax+8] +
jbe loc_4630D2  +
mov edi [eax+10h] +
test edi edi +
jz loc_4630B0  +
xor esi esi +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov ebp eax +
call strlen  +
add ebp eax +
test esi esi +
jz loc_463158  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea eax [ebp+eax+3] +
mov [esp+2Ch+var_2C] eax +
call sub_42B400  +
mov ebp eax +
xor eax eax +
test ebp ebp +
jz loc_462FF3  +
mov [esp+2Ch+var_1C] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] offset aSSS_3 +
call sprintf  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 3Ah +
jnz loc_463027  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] ebx +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] offset aDwarfErrorMang +
call off_492AE8  +
jmp loc_462FE7  +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_463037  +
mov esi [ecx+edx*4-4] +
test esi esi +
jz loc_463037  +
movzx edx byte ptr [esi] +
cmp dl 5Ch +
jz loc_463105  +
cmp dl 2Fh +
jz loc_463105  +
test dl dl +
jnz loc_463150  +
mov edi [eax+10h] +
test edi edi +
jnz loc_463040  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call strlen  +
lea ebp [edi+eax+2] +
mov [esp+2Ch+var_2C] ebp +
call sub_42B400  +
mov edi eax +
xor eax eax +
test edi edi +
jz loc_462FF3  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset aSS_10 +
mov [esp+2Ch+var_2C] edi +
call sprintf  +
mov eax edi +
jmp loc_462FF3  +
cmp byte ptr [esi+1] 3Ah +
jnz loc_4630FA  +
jmp loc_463105  +
add ebp 2 +
mov esi edi +
jmp loc_46311B  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 7Ch +
mov ecx [edx+38h] +
mov [esp+80h+var_34] eax +
mov eax [eax+8] +
mov edi eax +
mov [esp+80h+var_68] eax +
mov eax [edx+8] +
lea edx [eax+28h] +
lea eax [ebx+48h] +
mov [esp+80h+var_74] eax +
lea eax [ebx+44h] +
mov [esp+80h+var_78] eax +
mov eax [esi+38h] +
mov [esp+80h+var_7C] 0 +
mov [esp+80h+var_80] eax +
mov eax edi +
call sub_461DB0  +
test eax eax +
jz loc_46329D  +
mov edi [esp+80h+var_68] +
mov [esp+80h+var_7C] 24h +
mov [esp+80h+var_80] edi +
call sub_425850  +
test eax eax +
mov esi eax +
mov [esp+80h+var_6C] eax +
jz loc_46329D  +
mov [eax] edi +
mov eax [esp+80h+var_34] +
mov eax [eax+28h] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+8] 0 +
mov [esi+10h] eax +
mov eax [ebx+48h] +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+1Ch] 0 +
cmp eax 0Fh +
mov dword ptr [esi+20h] 0 +
jbe loc_463DEE  +
mov esi [esp+80h+var_34] +
mov edx [ebx+44h] +
mov edi [esi+38h] +
lea ebp [edx+eax] +
mov eax [esp+80h+var_68] +
add edi edx +
lea esi [edi+4] +
add eax 4 +
cmp ebp esi +
mov [esp+80h+var_30] eax +
jnb loc_4632A7  +
mov eax [esp+80h+var_34] +
cmp byte ptr [eax+58h] 8 +
jz loc_463B17  +
mov edi 4 +
xor eax eax +
lea ebp [esi+eax] +
xor eax eax +
lea ebx [esi+2] +
cmp ebp ebx +
jnb loc_463302  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorUnha +
call off_492AE8  +
mov [esp+80h+var_80] 11h +
call sub_420C50  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] offset aDwarfErrorRanO +
call off_492AE8  +
mov dword ptr [esp+0] 11h +
call sub_420C50  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+80h+var_30] +
mov edx edi +
call sub_462300  +
cmp eax 0FFFFFFFFh +
jnz loc_463E7C  +
add edi 0Ch +
xor eax eax +
cmp ebp edi +
jnb loc_463B2E  +
mov esi edi +
mov edi 8 +
mov edx [ebx+48h] +
cmp edx eax +
jnb loc_46324D  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_78] edx +
mov [esp+80h+var_80] offset aDwarfErrorLine +
call off_492AE8  +
mov [esp+80h+var_80] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_46327C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_4622E0  +
mov ecx eax +
lea eax [eax-2] +
cmp ax 2 +
ja loc_463E74  +
xor eax eax +
cmp cx 4 +
setz al  +
lea eax [edi+eax+5] +
add eax ebx +
cmp ebp eax +
jbe loc_463E12  +
cmp edi 4 +
jz loc_463BA4  +
add esi 0Ah +
cmp ebp esi +
jnb loc_463BFF  +
add ebx edi +
lea eax [ebx+1] +
cmp ebp eax +
mov [esp+80h+var_40] 0 +
jb loc_46335F  +
movzx esi byte ptr [ebx] +
mov [esp+80h+var_40] esi +
cmp cx 4 +
jnz loc_463390  +
lea eax [ebx+2] +
cmp ebp eax +
jnb loc_463B02  +
mov [esp+80h+var_80] offset aDwarfErrorIn_0 +
call off_492AE8  +
mov [esp+80h+var_80] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_46327C  +
mov [esp+80h+var_49] 1 +
lea edx [eax+2] +
cmp ebp edx +
mov [esp+80h+var_38] 0 +
jb loc_4633B5  +
movzx esi byte ptr [eax+1] +
lea edx [esi-80h] +
movzx edx dl +
lea esi [edx-80h] +
mov [esp+80h+var_38] esi +
lea edx [eax+3] +
cmp ebp edx +
jb loc_463AA5  +
movzx ecx byte ptr [eax+2] +
movzx esi cl +
mov [esp+80h+var_4A] cl +
mov [esp+80h+var_28] esi +
lea esi [eax+4] +
cmp ebp esi +
jb loc_463A8E  +
movzx eax byte ptr [eax+3] +
mov [esp+80h+var_4B] al +
mov [esp+80h+var_5C] eax +
sub eax 1 +
add eax esi +
cmp ebp eax +
jbe loc_463284  +
mov edi [esp+80h+var_5C] +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] eax +
call sub_425850  +
cmp edi 1 +
mov [esp+80h+var_2C] eax +
mov ebx eax +
mov byte ptr [eax] 1 +
jbe loc_46343E  +
add eax 1 +
add ebx edi +
mov edx esi +
lea esi [esi+0] +
add edx 1 +
xor ecx ecx +
cmp ebp edx +
jb loc_46342D  +
movzx ecx byte ptr [edx-1] +
mov [eax] cl +
add eax 1 +
cmp eax ebx +
jnz loc_463420  +
mov eax [esp+80h+var_5C] +
lea esi [esi+eax-1] +
cmp esi ebp +
jnb loc_4639F0  +
movzx eax byte ptr [esi] +
test al al +
jz loc_463A17  +
test al al +
lea ebx [esi+1] +
jnz loc_46346D  +
jmp loc_463831  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_463831  +
cmp ebp ebx +
nop   +
ja loc_463460  +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
cmp ebp ebx +
jbe loc_463A08  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_463999  +
mov edi [esp+80h+var_6C] +
lea esi [esp+80h+var_14] +
test al al +
lea edx [ebx+1] +
jnz loc_4634AE  +
jmp loc_4638B0  +
add edx 1 +
cmp byte ptr [edx-1] 0 +
jz loc_4638B0  +
cmp ebp edx +
ja loc_4634A1  +
mov edi edx +
sub edi ebx +
mov [esp+80h+var_14] edi +
add edi ebx +
cmp ebp edi +
jbe loc_463CCC  +
mov eax [esp+80h+var_5C] +
mov [esp+80h+var_48] 0FFh +
sub [esp+80h+var_48] eax +
mov [esp+80h+var_64] ebp +
mov eax [esp+80h+var_6C] +
mov [esp+80h+var_44] 0 +
mov edx [eax+4] +
test edx edx +
jnz loc_463C17  +
mov [esp+80h+var_50] 0 +
xor esi esi +
mov [esp+80h+var_54] 0FFFFFFFFh +
mov [esp+80h+var_5C] 0 +
mov [esp+80h+var_3C] 0 +
mov [esp+80h+var_58] 1 +
mov byte ptr [esp+80h+var_60] 0 +
nop   +
lea ebx [edi+1] +
cmp [esp+80h+var_64] ebx +
jb loc_4635FE  +
movzx ecx byte ptr [edi] +
cmp cl [esp+80h+var_4B] +
movzx ebp cl +
jb loc_46360C  +
sub cl [esp+80h+var_4B] +
cmp [esp+80h+var_4A] 0 +
jz loc_4637A4  +
cmp [esp+80h+var_49] 1 +
jz loc_4639D8  +
movzx ecx cl +
movzx edx byte ptr [esp+80h+var_60] +
mov eax ecx +
movzx edi [esp+80h+var_49] +
div  [esp+80h+var_4A] +
movzx eax al +
add eax edx +
cdq   +
idiv  edi +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax ah +
add eax [esp+80h+var_38] +
add [esp+80h+var_58] eax +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 0 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_461F40  +
test eax eax +
jz loc_4637A4  +
mov eax [esp+80h+var_54] +
mov edi ebx +
lea ebx [edi+1] +
mov [esp+80h+var_5C] 0 +
cmp eax esi +
cmova eax esi +
mov [esp+80h+var_54] eax +
mov eax [esp+80h+var_50] +
cmp eax esi +
cmovb eax esi +
cmp [esp+80h+var_64] ebx +
mov [esp+80h+var_50] eax +
jnb loc_46352D  +
xor ecx ecx +
xor ebp ebp +
cmp cl [esp+80h+var_4B] +
jnb loc_46353D  +
cmp ebp 9 +
ja loc_463A2D  +
jmp ds:off_4B39B0[ebp*4]  +
mov edi ebx +
nop   +
jmp loc_463520  +
add edi 3 +
xor eax eax +
cmp [esp+80h+var_64] edi +
jnb loc_463BEF  +
add esi eax +
mov byte ptr [esp+80h+var_60] 0 +
jmp loc_463520  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_42BFC0  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov [esp+80h+var_3C] eax +
jmp loc_463520  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_42BFC0  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov ebp eax +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_4636B7  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov edx ebp +
call sub_462FD0  +
mov [esp+80h+var_44] eax +
jmp loc_463520  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 1 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_42BFC0  +
add [esp+80h+var_58] eax +
mov edi [esp+80h+var_14] +
add edi ebx +
jmp loc_463520  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
cmp [esp+80h+var_49] 1 +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
jz loc_463BDE  +
call sub_42BFC0  +
movzx edx byte ptr [esp+80h+var_60] +
movzx ecx [esp+80h+var_49] +
add eax edx +
xor edx edx +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
mov esi eax +
jmp loc_4636F7  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov ecx [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] ecx +
call sub_42BFC0  +
add ebx [esp+80h+var_14] +
lea edi [ebx+1] +
cmp [esp+80h+var_64] edi +
jnb loc_463AB7  +
mov [esp+80h+var_80] offset aDwarfErrorMa_0 +
call off_492AE8  +
mov [esp+80h+var_80] 11h +
call sub_420C50  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_4637B4  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4637C7  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
test eax eax +
jz loc_4637DA  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+14h] +
test eax eax +
jz loc_46329D  +
mov [esp+80h+var_80] eax +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+80h+var_49] 1 +
jz loc_463BC7  +
mov eax [esp+80h+var_48] +
mov edi ebx +
movzx ecx byte ptr [esp+80h+var_60] +
cdq   +
idiv  [esp+80h+var_28] +
xor edx edx +
add eax ecx +
movzx ecx [esp+80h+var_49] +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
jmp loc_463520  +
mov edi [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
mov ecx [edi+8] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_463880  +
mov eax [edi+14h] +
mov edi [esp+80h+var_6C] +
lea edx [ecx+1] +
cmp ebp ebx +
mov [edi+8] edx +
mov [eax+ecx*4] esi +
jbe loc_4639F2  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_463A19  +
mov esi ebx +
jmp loc_463451  +
mov edi [esp+80h+var_6C] +
lea edx ds:14h[ecx*4] +
mov eax [edi+14h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_42B490  +
test eax eax +
jz loc_4637B4  +
mov [edi+14h] eax +
mov ecx [edi+8] +
jmp loc_463856  +
mov ecx [edi+4] +
sub edx ebx +
lea eax [ebx+edx] +
mov [esp+80h+var_60] eax +
mov eax 0CCCCCCCDh +
mov [esp+80h+var_14] edx +
mul  ecx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_4639B0  +
mov eax [edi+18h] +
shl ecx 4 +
add ecx eax +
mov eax [esp+80h+var_68] +
mov [ecx] ebx +
mov ebx [esp+80h+var_60] +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_64] ecx +
call sub_42BFC0  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_14] +
add edx ebx +
mov ebx [edi+4] +
mov [ecx+4] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_64] edx +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_42BFC0  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [esp+80h+var_64] edx +
mov [ebx+8] eax +
mov ebx [edi+4] +
mov eax [esp+80h+var_68] +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_42BFC0  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov ebx edx +
add dword ptr [edi+4] 1 +
cmp ebp edx +
jbe loc_463A08  +
movzx eax byte ptr [edx] +
test al al +
jnz loc_463495  +
mov [esp+80h+var_14] 1 +
mov edi 1 +
jmp loc_4634BA  +
mov eax [edi+18h] +
add ecx 5 +
shl ecx 4 +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_42B490  +
test eax eax +
jz loc_4637B4  +
mov [edi+18h] eax +
mov ecx [edi+4] +
jmp loc_4638D8  +
movzx ecx cl +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax al +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_46357D  +
mov ebx esi +
mov esi ebx +
xor ebx ebx +
add ebx esi +
cmp ebp ebx +
mov [esp+80h+var_14] 0 +
ja loc_463482  +
mov [esp+80h+var_14] 0 +
xor edi edi +
jmp loc_4634BA  +
mov ebx esi +
mov esi ebx +
mov ebx 1 +
mov [esp+80h+var_14] 1 +
jmp loc_463478  +
add ebp [esp+80h+var_2C] +
mov edi ebx +
xor ebx ebx +
mov eax ebp +
cmp byte ptr [eax] 0 +
lea ebp [esp+80h+var_14] +
jz loc_463520  +
mov [esp+80h+var_24] esi +
mov esi edi +
mov edi ebp +
mov ebp eax +
nop   +
mov eax [esp+80h+var_64] +
add ebx 1 +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] edi +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_42BFC0  +
movzx eax byte ptr [ebp+0] +
add esi [esp+80h+var_14] +
cmp eax ebx +
ja loc_463A50  +
mov edi esi +
mov esi [esp+80h+var_24] +
jmp loc_463520  +
mov eax 0FFFFFFFFh +
mov [esp+80h+var_4B] 0 +
mov [esp+80h+var_5C] 0 +
jmp loc_4633E9  +
mov [esp+80h+var_4A] 0 +
mov [esp+80h+var_28] 0 +
jmp loc_4633CF  +
movzx edx byte ptr [ebx] +
cmp dl 3 +
jz loc_463B3E  +
ja loc_463C2A  +
cmp dl 1 +
jz loc_463C45  +
cmp dl 2 +
jnz loc_46378B  +
mov ebx [esp+80h+var_34] +
mov ecx edi +
mov esi [esp+80h+var_64] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov [esp+80h+var_80] esi +
call sub_462570  +
mov byte ptr [esp+80h+var_60] 0 +
mov esi eax +
movzx eax byte ptr [ebx+58h] +
add edi eax +
jmp loc_463520  +
movzx ecx byte ptr [ebx+1] +
test cl cl +
mov [esp+80h+var_49] cl +
jnz loc_463395  +
jmp loc_463370  +
add edi 8 +
cmp ebp edi +
jnb loc_463E32  +
mov esi edi +
mov edi 8 +
jmp loc_46324B  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_462320  +
jmp loc_4632C8  +
cmp [esp+80h+var_64] edi +
ja loc_463DD4  +
mov [esp+80h+var_14] 0 +
xor eax eax +
xor ebx ebx +
add edi eax +
mov eax [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
mov ecx [eax+4] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jnz loc_463D15  +
mov eax [esp+80h+var_6C] +
add ecx 5 +
shl ecx 4 +
mov eax [eax+18h] +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_42B490  +
test eax eax +
jz loc_4637A4  +
mov ecx [esp+80h+var_6C] +
mov [ecx+18h] eax +
mov ecx [ecx+4] +
jmp loc_463D1C  +
add esi 6 +
cmp ebp esi +
jb loc_463347  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_462300  +
mov ecx [esp+80h+var_64] +
jmp loc_463347  +
mov eax [esp+80h+var_48] +
mov edi ebx +
cdq   +
idiv  [esp+80h+var_28] +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_463520  +
call sub_42BFC0  +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_4636F7  +
mov eax [esp+80h+var_30] +
mov edx ebx +
call sub_4622E0  +
jmp loc_463634  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_462320  +
mov ecx [esp+80h+var_64] +
jmp loc_463347  +
mov edx 1 +
call sub_462FD0  +
mov [esp+80h+var_44] eax +
jmp loc_4634EF  +
cmp dl 4 +
jz loc_463CE4  +
cmp dl 80h +
jnz loc_46378B  +
lea edi [edi+eax-1] +
jmp loc_463520  +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 1 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_461F40  +
test eax eax +
jz loc_4637A4  +
mov eax [esp+80h+var_34] +
mov ecx [esp+80h+var_54] +
lea edx [eax+0Ch] +
lea ebx [eax+8] +
mov eax [esp+80h+var_50] +
cmp ecx esi +
cmova ecx esi +
cmp eax esi +
cmovb eax esi +
mov [esp+80h+var_80] eax +
mov eax ebx +
call sub_4624B0  +
test eax eax +
jz loc_4637A4  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_463CC2  +
mov [esp+80h+var_80] eax +
call free  +
cmp [esp+80h+var_64] edi +
ja loc_4634D8  +
mov eax [esp+80h+var_6C] +
mov esi [eax+0Ch] +
test esi esi +
jnz loc_463E8E  +
mov eax [esp+80h+var_6C] +
jmp loc_46327C  +
mov eax [esp+80h+var_64] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_42BFC0  +
add edi [esp+80h+var_14] +
mov [esp+80h+var_5C] eax +
jmp loc_463520  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
shl ecx 4 +
lea edx [eax+ecx] +
mov eax [esp+80h+var_64] +
mov [edx] ebx +
mov [esp+80h+var_24] edx +
mov edx [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_78] ebp +
call sub_42BFC0  +
mov edx [esp+80h+var_24] +
mov ecx [esp+80h+var_64] +
add edi [esp+80h+var_14] +
mov [edx+4] eax +
mov eax [esp+80h+var_6C] +
mov edx [esp+80h+var_68] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
call sub_42BFC0  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_68] +
add edi [esp+80h+var_14] +
mov [ebx+8] eax +
mov eax [esp+80h+var_6C] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] edx +
call sub_42BFC0  +
add edi [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov eax [esp+80h+var_6C] +
add dword ptr [eax+4] 1 +
jmp loc_463520  +
cmp byte ptr [ebx+1] 0 +
jnz loc_463E42  +
mov [esp+80h+var_14] 1 +
mov eax 1 +
xor ebx ebx +
jmp loc_463B54  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorLi_0 +
call off_492AE8  +
mov [esp+80h+var_80] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_46327C  +
mov [esp+80h+var_80] offset aDwarfErrorRa_0 +
call off_492AE8  +
mov [esp+80h+var_80] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_46327C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_462300  +
jmp loc_4632C8  +
add ebx 2 +
jmp loc_463E50  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_463E65  +
cmp [esp+80h+var_64] ebx +
ja loc_463E47  +
mov eax ebx +
xor ebx ebx +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_463B54  +
mov eax ebx +
mov ebx edi +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_463B54  +
movzx eax cx +
jmp loc_46325D  +
test eax eax +
jz loc_463238  +
mov edi 4 +
jmp loc_4632CF  +
mov edi eax +
mov eax [eax] +
lea edx [esi+esi*2] +
shl edx 2 +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_425850  +
test eax eax +
mov ebx eax +
jz loc_4637B4  +
mov eax [edi+1Ch] +
mov ebp ebx +
xor edi edi +
jmp loc_463EE8  +
mov edx [eax] +
add edi 1 +
add ebp 0Ch +
mov dword ptr [ebp-8] 0 +
mov [ebp-0Ch] edx +
mov edx [eax+8] +
mov [ebp-4] edx +
mov edx [eax+4] +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_68] edx +
call free  +
cmp edi esi +
mov edx [esp+80h+var_68] +
jz loc_463F0A  +
mov eax edx +
test eax eax +
jnz loc_463EB7  +
mov [esp+80h+var_7C] 648h +
mov [esp+80h+var_80] offset a____Binutil_14 +
mov [esp+80h+var_68] eax +
call sub_420BA0  +
mov eax [esp+80h+var_68] +
jmp loc_463EB7  +
test edx edx +
jz loc_463F22  +
mov [esp+80h+var_7C] 64Fh +
mov [esp+80h+var_80] offset a____Binutil_14 +
call sub_420BA0  +
mov [esp+80h+var_74] offset sub_462340 +
mov [esp+80h+var_78] 0Ch +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] ebx +
call qsort  +
mov eax [ebx+8] +
mov ecx [eax+4] +
mov eax [esp+80h+var_6C] +
mov eax [eax+0Ch] +
cmp eax 1 +
mov [esp+80h+var_64] eax +
jbe loc_463FA2  +
mov eax ebx +
mov edx 1 +
mov ebp 1 +
mov [esp+80h+var_68] ebx +
cmp [eax+0Ch] ecx +
mov esi [eax+14h] +
jnb loc_463F74  +
cmp [esi+4] ecx +
jbe loc_463F90  +
mov [eax+0Ch] ecx +
cmp edx ebp +
mov ecx [esi+4] +
jnb loc_463F8D  +
mov ebx [esp+80h+var_68] +
lea edi [edx+edx*2] +
lea edi [ebx+edi*4] +
mov ebx [eax+0Ch] +
mov [edi+8] esi +
mov [edi] ebx +
add edx 1 +
add ebp 1 +
add eax 0Ch +
cmp ebp [esp+80h+var_64] +
jnz loc_463F64  +
mov ebx [esp+80h+var_68] +
jmp loc_463FA7  +
mov edx 1 +
mov eax [esp+80h+var_6C] +
mov [eax+1Ch] ebx +
mov [eax+0Ch] edx +
jmp loc_463CDB  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [eax+8] +
mov eax [edx+0Ch] +
mov [esp+68h+var_40] ecx +
mov edi [edx+8] +
mov [esp+68h+var_48] eax +
mov eax [edx+4] +
cmp eax 10h +
jz loc_464158  +
cmp eax 1F20h +
jz loc_464222  +
mov eax [ebp+40h] +
add edi [ebp+30h] +
mov [esp+68h+var_48] eax +
mov esi edi +
mov eax [esp+68h+var_48] +
mov [esp+68h+var_5C] 0 +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_58] eax +
lea eax [esp+68h+var_2C] +
mov [esp+68h+var_60] eax +
call sub_42BFC0  +
mov edi [esp+68h+var_2C] +
mov ecx eax +
xor eax eax +
test ecx ecx +
jz loc_464073  +
mov eax ecx +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add edx eax +
mov eax ecx +
shr edx 6 +
imul edx edx +
sub eax edx +
mov edx eax +
mov eax [ebp+1Ch] +
mov ebx [eax+edx*4] +
test ebx ebx +
jnz loc_464087  +
mov [esp+68h+var_64] ecx +
mov [esp+68h+var_68] offset aDwarfErrorCoul +
call off_492AE8  +
mov [esp+68h+var_68] 11h +
call sub_420C50  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_464054  +
cmp ecx [ebx] +
jnz loc_464080  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_464071  +
add edi esi +
xor esi esi +
mov [esp-4+arg_20] 0 +
jmp loc_4640B9  +
cmp eax 3 +
jnz loc_4640B1  +
mov edx [esp-4+arg_20] +
test edx edx +
jz loc_4641D0  +
add esi 1 +
cmp [ebx+0Ch] esi +
jbe loc_464130  +
mov eax [ebx+10h] +
mov ecx ebp +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp-4+arg_3C] edx +
mov edx [eax+4] +
mov eax [esp-4+arg_1C] +
mov [esp+0] edi +
mov [esp-4+arg_0] eax +
lea eax [esp-4+arg_3C] +
call sub_462790  +
test eax eax +
mov edi eax +
jz loc_464130  +
mov eax [esp-4+arg_3C] +
cmp eax 47h +
jz loc_464140  +
jbe loc_4640A0  +
cmp eax 6Eh +
jz loc_4640FB  +
cmp eax 2007h +
jnz loc_4640B1  +
mov eax [esp-4+arg_40] +
cmp eax 8 +
jz loc_464110  +
cmp eax 0Eh +
jz loc_464110  +
cmp eax 1F21h +
jnz loc_4640B1  +
mov eax [esp-4+arg_44] +
mov [esp-4+arg_20] eax +
mov eax [esp-4+arg_24] +
add esi 1 +
mov dword ptr [eax] 1 +
cmp [ebx+0Ch] esi +
ja loc_4640B9  +
lea esi [esi+0] +
mov eax [esp-4+arg_20] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp-4+arg_24] +
lea edx [esp-4+arg_3C] +
mov eax ebp +
call sub_463FC0  +
mov [esp-4+arg_20] eax +
jmp loc_4640B1  +
mov eax [esp+68h+var_48] +
or eax edi +
jz loc_464322  +
mov eax [ebp+40h] +
add edi [ebp+34h] +
cmp edi [ebp+30h] +
mov esi edi +
mov [esp+68h+var_48] eax +
jnb loc_4641C0  +
mov eax [ebp+4] +
test eax eax +
jz loc_464191  +
lea esi [esi+0] +
cmp esi [eax+30h] +
jb loc_46418A  +
cmp esi [eax+40h] +
jb loc_4641B7  +
mov eax [eax+4] +
test eax eax +
jnz loc_464180  +
mov eax [ebp+0] +
test eax eax +
jnz loc_4641AA  +
jmp loc_463FFD  +
mov eax [eax] +
test eax eax +
jz loc_463FFD  +
cmp esi [eax+30h] +
lea esi [esi+0] +
jb loc_4641A0  +
cmp esi [eax+40h] +
jnb loc_4641A0  +
mov ebp eax +
jmp loc_463FFD  +
cmp edi eax +
jb loc_463FFD  +
jmp loc_464175  +
mov eax [esp-4+arg_40] +
cmp eax 8 +
jz loc_4641DE  +
cmp eax 0Eh +
jnz loc_46420F  +
mov eax [esp-4+arg_44] +
mov [esp-4+arg_20] eax +
mov eax [ebp+20h] +
lea ecx [eax-1] +
cmp ecx 1Ch +
ja loc_4640B1  +
mov eax 1 +
shl eax cl +
mov ecx eax +
and ecx 10025977h +
jnz loc_464118  +
jmp loc_4640B1  +
cmp eax 1F21h +
jnz loc_4640B1  +
lea esi [esi+0] +
jmp loc_4641DE  +
mov esi [ebp+50h] +
mov eax [esi+20h] +
test eax eax +
jz loc_4642B3  +
mov ecx [esi+8] +
mov [esp+68h+var_68] edi +
lea edx [ecx+20h] +
lea ecx [esi+30h] +
mov [esp+68h+var_5C] ecx +
lea ecx [esi+2Ch] +
mov [esp+68h+var_60] ecx +
mov ecx [esp+68h+var_48] +
mov [esp+68h+var_64] ecx +
xor ecx ecx +
call sub_461DB0  +
test eax eax +
jz loc_464268  +
cmp [esp+68h+var_48] 0 +
mov eax [esi+30h] +
ja loc_464268  +
cmp edi eax +
jb loc_464294  +
mov eax [esp+68h+var_48] +
mov [esp+68h+var_64] edi +
mov [esp+68h+var_68] offset aDwarfErrorUnab +
mov [esp+68h+var_60] eax +
call off_492AE8  +
mov [esp+68h+var_68] 11h +
call sub_420C50  +
xor eax eax +
jmp loc_464073  +
mov eax edi +
add eax [esi+2Ch] +
mov esi eax +
jz loc_464268  +
mov eax [ebp+50h] +
mov ecx [eax+2Ch] +
mov eax [eax+30h] +
mov [esp+68h+var_48] ecx +
add [esp+68h+var_48] eax +
jmp loc_463FFD  +
mov [esp+68h+var_64] offset aHomeJenkinsMin +
mov [esp+68h+var_68] ebx +
call sub_425C90  +
test eax eax +
mov [esp+68h+var_3C] eax +
jz loc_464268  +
mov [esp+68h+var_64] 0 +
mov [esp+68h+var_68] eax +
call sub_425380  +
test eax eax +
jz loc_464311  +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_44] eax +
call sub_423080  +
mov edx [esp+68h+var_44] +
test eax eax +
jz loc_464309  +
mov [esi+20h] edx +
mov eax [ebp+50h] +
mov eax [eax+20h] +
jmp loc_464230  +
mov [esp+68h+var_68] edx +
call sub_4254C0  +
mov eax [esp+68h+var_3C] +
mov [esp+68h+var_68] eax +
call free  +
jmp loc_464268  +
mov [esp+68h+var_60] offset aFind_abstract_ +
mov [esp+68h+var_64] 8F9h +
mov [esp+68h+var_68] offset a____Binutil_14 +
call sub_420BD0  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [eax+8] +
mov ebp [eax+3Ch] +
mov [esp+0F4h+var_DC] eax +
mov [esp+0F4h+var_C8] edi +
mov edi eax +
mov eax [eax+50h] +
mov eax [eax+10h] +
mov [esp+0F4h+var_F4] 80h +
mov esi eax +
mov [esp+0F4h+var_D8] eax +
call sub_42B400  +
test eax eax +
mov [esp+0F4h+var_BC] eax +
jz loc_4649C7  +
cmp ebp esi +
mov dword ptr [eax+4] 0 +
jnb loc_4643E8  +
mov eax edi +
add eax 8 +
mov [esp+0F4h+var_B0] 20h +
mov [esp+0F4h+var_CC] 1 +
mov [esp+0F4h+var_AC] eax +
***
mov eax [esp+arg_18] +
mov [esp+arg_0] ebp +
mov [esp+arg_8] 0 +
mov [esp+arg_C] eax +
lea eax [esp+arg_58] +
mov [esp+arg_4] eax +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call sub_42BFC0  +
add ebp [esp+arg_58] +
test eax eax +
mov ecx eax +
jnz loc_464400  +
sub [esp+arg_24] 1 +
mov eax [esp+arg_24] +
test eax eax +
jz loc_464A05  +
cmp ebp [esp+arg_18] +
jb loc_46439F  +
mov eax [esp+arg_34] +
mov [esp+0] eax +
call free  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add edx eax +
mov eax ecx +
shr edx 6 +
imul edx edx +
sub eax edx +
mov edx eax +
mov eax [esp-8Ch+arg_A0] +
mov eax [eax+1Ch] +
mov ebx [eax+edx*4] +
test ebx ebx +
jnz loc_46443B  +
jmp loc_464810  +
***
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_464810  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_464430  +
mov eax [ebx+4] +
cmp eax 2Eh +
jz loc_4645E5  +
cmp eax 3 +
jz loc_4645E5  +
cmp eax 1Dh +
jz loc_4645E5  +
cmp eax 34h +
mov [esp-8Ch+arg_A8] 0 +
jz loc_46496B  +
mov edi [esp-8Ch+arg_B0] +
mov eax [esp-8Ch+arg_C0] +
mov dword ptr [eax+edi*4] 0 +
xor edi edi +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4645B3  +
lea eax [edi+1Ch] +
xor esi esi +
mov [esp-8Ch+arg_C4] eax +
lea eax [edi+24h] +
mov [esp-8Ch+arg_BC] 0 +
mov [esp-8Ch+arg_B8] 0 +
mov [esp-8Ch+arg_AC] 0 +
mov [esp-8Ch+arg_C8] eax +
jmp loc_4644EC  +
cmp eax 12h +
jz loc_464755  +
ja loc_464686  +
cmp eax 3 +
jz loc_464700  +
cmp eax 11h +
mov eax [esp-8Ch+arg_AC] +
cmovz eax [esp-8Ch+arg_F0] +
mov [esp-8Ch+arg_AC] eax +
nop   +
add esi 1 +
cmp [ebx+0Ch] esi +
jbe loc_464572  +
mov eax [ebx+10h] +
mov ecx [esp-8Ch+arg_A0] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp-8Ch+arg_E8] edx +
mov edx [eax+4] +
mov eax [esp+1Ch] +
mov [esp-8Ch+arg_88] ebp +
mov [esp-8Ch+arg_8C] eax +
lea eax [esp-8Ch+arg_E8] +
call sub_462790  +
test eax eax +
mov ebp eax +
jz loc_4643E8  +
test edi edi +
jz loc_464641  +
mov eax [esp-8Ch+arg_E8] +
cmp eax 3Bh +
jz loc_4646F0  +
jbe loc_4644B7  +
cmp eax 58h +
jz loc_4647A3  +
lea esi [esi+0] +
jbe loc_4646B0  +
cmp eax 6Eh +
jz loc_464770  +
***
pop es  +
and [eax] al +
add [edi] cl +
test [esi] dl +
add al [eax] +
add [ebx-7E8AA608h] al +
mov eax [esp-90h+arg_F4] +
add esi 1 +
cmp [ebx+0Ch] esi +
mov [edi+10h] eax +
ja loc_4644EC  +
mov esi [esp-90h+arg_C0] +
test esi esi +
jz loc_464900  +
mov eax [esp-90h+arg_B0] +
add [esp-90h+arg_BC] eax +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
test al al +
jz loc_4645B3  +
mov eax [esp-90h+arg_BC] +
lea edx [edi+24h] +
mov ecx [esp-90h+arg_B0] +
mov [esp-90h+arg_8C] eax +
mov eax [esp-90h+arg_D4] +
call sub_4624B0  +
test eax eax +
jz loc_4643E8  +
mov edx [ebx+8] +
test edx edx +
jz loc_4643D6  +
add [esp-90h+arg_B4] 1 +
mov eax [esp-90h+arg_D0] +
cmp [esp-90h+arg_B4] eax +
jge loc_4649D1  +
mov eax [esp-90h+arg_C4] +
mov edi [esp-90h+arg_B4] +
mov dword ptr [eax+edi*4] 0 +
jmp loc_4643D6  +
mov eax [esp-8Ch+arg_B4] +
mov [esp-8Ch+arg_8C] 34h +
mov [esp-8Ch+arg_88] eax +
call sub_425930  +
test eax eax +
mov edi eax +
jz loc_4643E8  +
mov ecx [esp-8Ch+arg_A0] +
mov eax [ebx+4] +
mov edx [ecx+48h] +
mov [edi+18h] eax +
mov [edi] edx +
mov edx [ecx+60h] +
mov [ecx+48h] edi +
test edx edx +
jnz loc_464915  +
cmp eax 1Dh +
jz loc_464935  +
mov eax [esp-8Ch+arg_C0] +
mov ecx [esp-8Ch+arg_B0] +
mov [esp-8Ch+arg_A8] 0 +
mov [eax+ecx*4] edi +
jmp loc_464482  +
mov eax [esp-8Ch+arg_A8] +
test eax eax +
jz loc_4644E0  +
mov eax [esp-8Ch+arg_E8] +
cmp eax 3Ah +
jz loc_464832  +
ja loc_4647E0  +
cmp eax 2 +
jz loc_464850  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_4644E0  +
mov eax [esp-8Ch+arg_F0] +
mov ecx [esp-8Ch+arg_A8] +
mov [ecx+10h] eax +
jmp loc_4644E0  +
cmp eax 31h +
jz loc_4647C0  +
cmp eax 3Ah +
jnz loc_4644E0  +
mov eax [esp-8Ch+arg_A0] +
mov edx [esp-8Ch+arg_F0] +
mov eax [eax+44h] +
call sub_462FD0  +
mov [edi+0Ch] eax +
jmp loc_4644E0  +
cmp eax 47h +
jz loc_4647C0  +
cmp eax 55h +
jnz loc_4644E0  +
mov eax [esp-8Ch+arg_F0] +
mov edx [esp-8Ch+arg_F4] +
mov [esp-8Ch+arg_88] eax +
mov eax [esp-8Ch+arg_A0] +
mov [esp-8Ch+arg_8C] edx +
mov edx [esp-8Ch+arg_C8] +
call sub_462670  +
test eax eax +
jnz loc_4644E0  +
jmp loc_4643E8  +
mov eax [esp-8Ch+arg_F0] +
mov [edi+14h] eax +
jmp loc_4644E0  +
mov eax [edi+20h] +
test eax eax +
jnz loc_4644E0  +
mov eax [esp-8Ch+arg_EC] +
cmp eax 8 +
jz loc_464724  +
cmp eax 0Eh +
jz loc_464724  +
cmp eax 1F21h +
jnz loc_4644E0  +
mov eax [esp-8Ch+arg_F0] +
mov [edi+20h] eax +
mov eax [esp-8Ch+arg_A0] +
mov eax [eax+20h] +
lea ecx [eax-1] +
cmp ecx 1Ch +
mov [esp-8Ch+arg_D4] eax +
ja loc_4644E0  +
mov eax 1 +
shl eax cl +
test eax 10025977h +
jnz loc_464797  +
jmp loc_4644E0  +
mov eax [esp-8Ch+arg_F0] +
mov [esp-8Ch+arg_B8] eax +
xor eax eax +
cmp [esp-8Ch+arg_EC] 1 +
setnz al  +
mov [esp-8Ch+arg_BC] eax +
jmp loc_4644E0  +
mov eax [esp-8Ch+arg_EC] +
cmp eax 8 +
jz loc_464790  +
cmp eax 0Eh +
jz loc_464790  +
cmp eax 1F21h +
jnz loc_4644E0  +
lea esi [esi+0] +
mov eax [esp-8Ch+arg_F0] +
mov [edi+20h] eax +
mov dword ptr [edi+1Ch] 1 +
jmp loc_4644E0  +
mov eax [esp-8Ch+arg_A0] +
mov edx [esp-8Ch+arg_F0] +
mov eax [eax+44h] +
call sub_462FD0  +
mov [edi+8] eax +
jmp loc_4644E0  +
mov ecx [esp-8Ch+arg_C4] +
lea edx [esp-8Ch+arg_E8] +
mov eax [esp-8Ch+arg_A0] +
call sub_463FC0  +
mov [edi+20h] eax +
jmp loc_4644E0  +
cmp eax 3Bh +
jz loc_4648F0  +
cmp eax 3Fh +
jnz loc_4644E0  +
mov eax [esp-8Ch+arg_F4] +
or eax [esp-8Ch+arg_F0] +
jz loc_4644E0  +
mov eax [esp-8Ch+arg_A8] +
and byte ptr [eax+1Ch] 0FEh +
jmp loc_4644E0  +
mov [esp-8Ch+arg_8C] ecx +
mov [esp-8Ch+arg_88] offset aDwarfErrorCoul +
call off_492AE8  +
mov [esp-8Ch+arg_88] 11h +
call sub_420C50  +
jmp loc_4643E8  +
mov eax [esp-8Ch+arg_A0] +
mov edx [esp-8Ch+arg_F0] +
mov eax [eax+44h] +
call sub_462FD0  +
mov ecx [esp-8Ch+arg_A8] +
mov [ecx+4] eax +
jmp loc_4644E0  +
mov eax [esp-8Ch+arg_EC] +
lea ecx [eax-3] +
cmp ecx 15h +
ja loc_4644E0  +
mov eax 1 +
shl eax cl +
test eax 2000C3h +
jz loc_4644E0  +
mov eax [esp-8Ch+arg_F0] +
mov ecx [eax+4] +
cmp byte ptr [ecx] 3 +
jnz loc_4644E0  +
mov edx [esp-8Ch+arg_A8] +
mov [esp-8Ch+arg_D4] ecx +
and byte ptr [edx+1Ch] 0FEh +
mov edx [esp-8Ch+arg_A0] +
movzx edx byte ptr [edx+58h] +
lea ecx [edx+1] +
cmp [eax] ecx +
mov ecx [esp-8Ch+arg_D4] +
jnz loc_4644E0  +
shl edx 3 +
cmp edx 8 +
jz loc_464A1B  +
cmp edx 10h +
jz loc_464A24  +
cmp edx 20h +
jz loc_464A5A  +
cmp edx 40h +
jnz loc_464A3E  +
mov eax [esp-8Ch+arg_A0] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp-8Ch+arg_88] edx +
call eax  +
mov ecx [esp-8Ch+arg_A8] +
mov [ecx+14h] eax +
jmp loc_4644E0  +
mov eax [esp-8Ch+arg_F0] +
mov ecx [esp-8Ch+arg_A8] +
mov [ecx+8] eax +
jmp loc_4644E0  +
mov ecx [esp-90h+arg_BC] +
test ecx ecx +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
jmp loc_464590  +
mov [esp-8Ch+arg_8C] 9D4h +
mov [esp-8Ch+arg_88] offset a____Binutil_14 +
call sub_420BA0  +
mov eax [edi+18h] +
cmp eax 1Dh +
jnz loc_464629  +
mov eax [esp-8Ch+arg_B0] +
sub eax 1 +
jz loc_464629  +
mov ecx [esp-8Ch+arg_C0] +
mov edx [ecx+eax*4] +
mov ecx [esp-8Ch+arg_C0] +
test edx edx +
jz loc_464961  +
jmp loc_4649FD  +
mov edx [ecx+eax*4] +
test edx edx +
jnz loc_4649FD  +
sub eax 1 +
jnz loc_464956  +
jmp loc_464629  +
mov eax [esp-8Ch+arg_B4] +
mov [esp-8Ch+arg_8C] 20h +
mov [esp-8Ch+arg_88] eax +
call sub_425930  +
test eax eax +
mov edi eax +
mov [esp-8Ch+arg_A8] eax +
jz loc_4643E8  +
mov eax [ebx+4] +
mov ecx [esp-8Ch+arg_A0] +
or byte ptr [edi+1Ch] 1 +
mov [edi+0Ch] eax +
mov eax [ecx+4Ch] +
mov [edi] eax +
mov eax [ecx+60h] +
mov [ecx+4Ch] edi +
test eax eax +
jz loc_464471  +
mov [esp-8Ch+arg_8C] 9ECh +
mov [esp-8Ch+arg_88] offset a____Binutil_14 +
call sub_420BA0  +
jmp loc_464471  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl [esp-90h+arg_D0] 1 +
mov eax [esp-90h+arg_D0] +
shl eax 2 +
mov [esp-90h+arg_90] eax +
mov eax [esp-90h+arg_C4] +
mov [esp-90h+arg_8C] eax +
call sub_42B490  +
test eax eax +
jz loc_4643E8  +
mov [esp-90h+arg_C4] eax +
jmp loc_4645D1  +
***
mov [edi+4] edx +
jmp loc_464629  +
mov eax [esp+arg_34] +
mov [esp+0] eax +
call free  +
mov eax 1 +
jmp loc_4643F6  +
movzx eax byte ptr [ecx+1] +
jmp loc_4648E1  +
mov eax [esp-8Ch+arg_A0] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp-8Ch+arg_88] edx +
call eax  +
jmp loc_4648E1  +
mov [esp-8Ch+arg_90] offset aScan_unit_for_ +
mov [esp-8Ch+arg_8C] 0A68h +
mov [esp-8Ch+arg_88] offset a____Binutil_14 +
call sub_420BD0  +
mov eax [esp-8Ch+arg_A0] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp-8Ch+arg_88] edx +
call eax  +
jmp loc_4648E1  +
***
sub esp 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_464AA0  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_464AA7  +
mov eax 1 +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx+2Ch] +
test eax eax +
jnz loc_464AC0  +
mov dword ptr [ebx+24h] 1 +
xor eax eax +
jmp loc_464A99  +
mov eax ebx +
call sub_463160  +
test eax eax +
mov [ebx+44h] eax +
jz loc_464AF3  +
mov eax [ebx+40h] +
cmp [ebx+3Ch] eax +
jnb loc_464A94  +
mov eax ebx +
call loc_464340  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_464A99  +
mov dword ptr [ebx+24h] 1 +
xor al al +
jmp loc_464A99  +
mov dword ptr [ebx+24h] 1 +
jmp loc_464A99  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov [esp+30h+var_28] ecx +
call sub_464A80  +
test eax eax +
jz loc_464B97  +
test byte ptr [ebx+0Ch] 8 +
mov ecx [esp+30h+var_28] +
jnz loc_464BA1  +
mov esi [esi+4Ch] +
mov edi [ebx+4] +
mov ebp [ebx+10h] +
test esi esi +
jz loc_464B97  +
mov [esp+30h+var_28] edi +
mov edi ecx +
jmp loc_464B46  +
mov esi [esi] +
test esi esi +
jz loc_464B97  +
test byte ptr [esi+1Ch] 1 +
jnz loc_464B40  +
mov ebx [esi+4] +
test ebx ebx +
jz loc_464B40  +
mov eax [esi+10h] +
test eax eax +
jz loc_464B40  +
cmp edi [esi+14h] +
jnz loc_464B40  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_464B6A  +
cmp ebp ecx +
jnz loc_464B40  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_30] eax +
call strcmp  +
test eax eax +
jnz loc_464B40  +
mov eax [esp+30h+arg_0] +
mov [esi+18h] ebp +
mov ecx [esp+30h+arg_4] +
mov [eax] ebx +
mov eax [esi+8] +
mov [ecx] eax +
mov eax 1 +
jmp loc_464B99  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+48h] +
mov eax [ebx+4] +
mov edi [ebx+10h] +
test ebp ebp +
mov [esp+30h+var_1C] eax +
jz loc_464B97  +
mov [esp+30h+var_14] 0 +
mov edx ebp +
mov [esp+30h+var_18] 0 +
lea ebx [edx+24h] +
mov esi [edx+30h] +
mov [esp+30h+var_28] edx +
jmp loc_464BDA  +
cmp edi esi +
jz loc_464BDE  +
mov ebx [ebx] +
test ebx ebx +
jz loc_464C40  +
test esi esi +
jnz loc_464BD0  +
mov ebp [ebx+4] +
cmp ecx ebp +
jb loc_464BD4  +
mov edx [ebx+8] +
cmp ecx edx +
jnb loc_464BD4  +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_24] edx +
mov eax [eax+20h] +
test eax eax +
jz loc_464BD4  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] ecx +
mov [esp+30h+var_30] eax +
call strcmp  +
mov ecx [esp+30h+var_20] +
mov edx [esp+30h+var_24] +
test eax eax +
jnz loc_464BD4  +
mov eax [esp+30h+var_18] +
sub edx ebp +
test eax eax +
jz loc_464C2B  +
cmp edx [esp+30h+var_14] +
jnb loc_464BD4  +
mov ebx [ebx] +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_14] edx +
test ebx ebx +
mov [esp+30h+var_18] eax +
jnz loc_464BDA  +
lea esi [esi+0] +
mov edx [esp+30h+var_28] +
mov edx [edx] +
test edx edx +
jnz loc_464BC4  +
mov edx [esp+30h+var_18] +
test edx edx +
jz loc_464B97  +
mov eax [edx+0Ch] +
mov ecx [esp+30h+arg_0] +
mov [edx+30h] edi +
mov [ecx] eax +
mov eax [edx+14h] +
mov edx [esp+30h+arg_4] +
mov [edx] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [eax+24h] +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_10] ecx +
test edi edi +
jnz loc_464D62  +
mov esi [eax+44h] +
mov ebx edx +
test esi esi +
jz loc_464D54  +
mov eax [esp+1Ch+arg_0] +
xor ebp ebp +
xor edi edi +
mov dword ptr [eax] 0 +
mov eax [esp+1Ch+var_14] +
mov esi [eax+48h] +
test esi esi +
jz loc_464D00  +
lea eax [esi+24h] +
mov edx [eax+4] +
cmp ebx edx +
jb loc_464CE0  +
mov ecx [eax+8] +
cmp ebx ecx +
jnb loc_464CE0  +
sub ecx edx +
test edi edi +
jz loc_464CDB  +
cmp ecx ebp +
jnb loc_464CE0  +
mov ebp ecx +
mov edi esi +
nop   +
mov eax [eax] +
test eax eax +
jnz loc_464CC3  +
mov esi [esi] +
test esi esi +
jnz loc_464CC0  +
test edi edi +
jz loc_464D00  +
mov eax [esp+1Ch+arg_0] +
cmp dword ptr [edi+18h] 1Dh +
mov [eax] edi +
jz loc_464DC0  +
mov eax [esp+1Ch+var_14] +
mov eax [eax+44h] +
mov edx [eax+0Ch] +
test edx edx +
jle loc_464D40  +
mov ebp [eax+1Ch] +
xor ecx ecx +
jmp loc_464D24  +
mov ecx [esi+8] +
cmp ebx [ecx+4] +
jb loc_464D74  +
lea ecx [eax+1] +
cmp ecx edx +
jge loc_464D3C  +
lea eax [ecx+edx] +
sar eax 1 +
lea esi [eax+eax*2] +
lea esi [ebp+esi*4+0] +
mov edi [esi] +
cmp ebx edi +
jnb loc_464D15  +
mov edx eax +
cmp ecx edx +
jl loc_464D24  +
cmp ebx edi +
jnb loc_464D6C  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax] 0 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [eax+2Ch] +
test ecx ecx +
jnz loc_464D85  +
mov dword ptr [eax+24h] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esi+8] +
cmp [ecx+4] ebx +
jbe loc_464D40  +
mov eax ecx +
jmp loc_464D7D  +
cmp ebx [eax+4] +
jnb loc_464DCC  +
mov eax [eax] +
test eax eax +
jnz loc_464D78  +
jmp loc_464D40  +
mov edi [esp+1Ch+var_14] +
mov edx [esp+1Ch+arg_C] +
mov eax edi +
call sub_463160  +
test eax eax +
mov [edi+44h] eax +
mov eax [esp+1Ch+var_14] +
jz loc_464D5B  +
mov edi [eax+40h] +
cmp [eax+3Ch] edi +
jnb loc_464CA7  +
call loc_464340  +
test eax eax +
jnz loc_464CA7  +
mov eax [esp+1Ch+var_14] +
jmp loc_464D5B  +
mov eax [esp+1Ch+arg_C] +
mov [eax+5Ch] edi +
jmp loc_464D00  +
cmp byte ptr [eax+19h] 0 +
jnz loc_464D40  +
cmp ecx eax +
jz loc_464D40  +
mov edx [eax+8] +
mov ebx [esp+1Ch+var_10] +
mov ecx [eax+0Ch] +
mov [ebx] edx +
mov edx [esp+1Ch+arg_4] +
mov [edx] ecx +
mov edx [esp+1Ch+arg_8] +
test edx edx +
jz loc_464E01  +
mov eax [eax+14h] +
mov ebx [esp+1Ch+arg_8] +
mov [ebx] eax +
mov eax [esi+8] +
mov eax [eax+4] +
sub eax edi +
jmp loc_464D64  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] eax +
call sub_42A4E0  +
test eax eax +
mov ebx eax +
jz loc_464E67  +
mov dword ptr [esp+4] 8 +
mov [esp] esi +
pop ecx  +
cld   +
inc dword ptr [ebp-74E88B40h]  +
push ebx  +
or al 89h +
js near ptr loc_464E58+2  +
mov [eax] edx +
mov [ebx+0Ch] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [eax] +
mov eax [eax+78h] +
cmp edx eax +
jz loc_465059  +
test eax eax +
jz loc_465051  +
mov esi [eax+4] +
test esi esi +
jz loc_464FBE  +
lea esi [esi+0] +
mov eax [ebp+74h] +
cmp dword ptr [ebp+7Ch] 2 +
mov edi [ebp+70h] +
mov [esp+28h+var_1C] eax +
jz loc_465016  +
mov edx ebp +
mov eax esi +
call sub_464A80  +
test eax eax +
jz loc_465040  +
mov ecx [esi+60h] +
test ecx ecx +
jnz loc_464FD0  +
mov ebx [esi+48h] +
test ebx ebx +
jz loc_464FEF  +
xor edx edx +
jmp loc_464EE4  +
mov edx ebx +
mov ebx eax +
mov eax [ebx] +
mov [ebx] edx +
test eax eax +
jnz loc_464EE0  +
mov [esi+48h] ebx +
mov eax 1 +
jmp loc_464EFA  +
test ebx ebx +
jz loc_464F10  +
mov edx [ebx+20h] +
test edx edx +
jz loc_464F0A  +
mov ecx ebx +
mov eax edi +
call loc_464E10  +
test eax eax +
mov ebx [ebx] +
jnz loc_464EF6  +
mov edx [esi+48h] +
test edx edx +
jz loc_464F2C  +
xor ebx ebx +
jmp loc_464F24  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_464F20  +
test eax eax +
mov [esi+48h] edx +
jz loc_465040  +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_465006  +
xor ecx ecx +
jmp loc_464F4A  +
mov ecx ebx +
mov ebx edx +
mov edx [ebx] +
mov [ebx] ecx +
test edx edx +
jnz loc_464F46  +
mov [esi+4Ch] ebx +
mov edi [esp+28h+var_1C] +
jmp loc_464F64  +
test ebx ebx +
jz loc_464F87  +
test byte ptr [ebx+1Ch] 1 +
jnz loc_464F81  +
mov edx [ebx+4] +
test edx edx +
jz loc_464F81  +
mov edx [ebx+10h] +
test edx edx +
jz loc_464F81  +
mov ecx ebx +
mov eax edi +
call loc_464E10  +
test eax eax +
mov ebx [ebx] +
jnz loc_464F60  +
mov edx [esi+4Ch] +
test edx edx +
jz loc_464F9E  +
xor ebx ebx +
jmp loc_464F96  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_464F92  +
test eax eax +
mov [esi+4Ch] edx +
mov dword ptr [esi+60h] 1 +
jz loc_465040  +
mov esi [esi+4] +
test esi esi +
jnz loc_464EA0  +
mov edx [ebp+0] +
mov [ebp+78h] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 0C23h +
mov [esp+28h+var_28] offset a____Binutil_14 +
call sub_420BA0  +
mov ebx [esi+48h] +
test ebx ebx +
jnz loc_464EDB  +
mov ebx [esi+4Ch] +
mov eax 1 +
mov dword ptr [esi+48h] 0 +
test ebx ebx +
jnz loc_464F42  +
mov dword ptr [esi+4Ch] 0 +
mov dword ptr [esi+60h] 1 +
jmp loc_464FB0  +
mov [esp+28h+var_24] 0C1Eh +
mov [esp+28h+var_28] offset a____Binutil_14 +
call sub_420BA0  +
mov edx ebp +
mov eax esi +
call sub_464A80  +
test eax eax +
jnz loc_464EC5  +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+7Ch] 2 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4] +
jmp loc_464E91  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_465117  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jz loc_465117  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jz loc_465133  +
mov [esp+10h] esi +
nop   +
mov eax [esp+10h] +
mov edi [eax+20h] +
test edi edi +
jz loc_4650FB  +
mov eax [eax+28h] +
test eax eax +
mov [esp+14h] eax +
jz loc_4650FB  +
mov eax [esp+40h] +
mov ebx [eax] +
test ebx ebx +
jz loc_4650FB  +
mov esi eax +
test byte ptr [ebx+0Ch] 8 +
jz loc_4650F2  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_4650F2  +
mov [esp+4] edi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jz loc_465121  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_4650D2  +
mov eax [esp+10h] +
mov eax [eax] +
test eax eax +
mov [esp+10h] eax +
jnz loc_4650B0  +
mov eax [esp+18h] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jnz loc_46509B  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+14h] +
sub eax [ebp+1Ch] +
sub eax [ebx+8] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+44h] +
test eax eax +
jz loc_465154  +
mov eax [esp+18h] +
call loc_464340  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jnz loc_4650AA  +
jmp loc_465109  +
***
mov edi [esp+18h] +
mov edx [esp+1Ch] +
mov eax edi +
call sub_463160  +
test eax eax +
mov [edi+44h] eax +
jz loc_465143  +
jmp loc_46513A  +
***
mov edx [eax] +
test edx edx +
jz loc_4651B4  +
mov eax [edx+5Ch] +
test eax eax +
jz loc_4651B4  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_4651B4  +
mov ebx [eax+8] +
mov ecx [esp+arg_4] +
mov [ecx] ebx +
mov ecx [eax+4] +
mov ebx [ecx+20h] +
mov ecx [esp+arg_8] +
mov [ecx] ebx +
mov ebx [eax+10h] +
mov ecx [esp+arg_C] +
mov eax [eax+4] +
mov [ecx] ebx +
mov [edx+5Ch] eax +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
test ecx ecx +
mov [esp+1Ch+var_18] ecx +
jz loc_46539F  +
test eax eax +
jz loc_46539F  +
mov eax [ecx] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jz loc_4652BE  +
mov eax [esp+1Ch+var_14] +
xor ebx ebx +
mov esi [eax+1Ch] +
mov edi [eax+48h] +
mov eax [eax+4Ch] +
mov [esp+1Ch+var_10] eax +
mov ebp [esi+ebx*4] +
test ebp ebp +
jz loc_465222  +
lea esi [esi+0] +
mov eax [ebp+10h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebp [ebp+14h] +
test ebp ebp +
jnz loc_465210  +
add ebx 1 +
cmp ebx 79h +
jnz loc_465206  +
mov esi [esp+1Ch+var_14] +
mov eax [esi+44h] +
test eax eax +
jz loc_46524E  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esi+44h] +
mov eax [eax+18h] +
mov [esp+1Ch+var_1C] eax +
call free  +
test edi edi +
jz loc_465284  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_465268  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+0Ch] 0 +
mov eax [edi+8] +
test eax eax +
jz loc_46527E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+8] 0 +
mov edi [edi] +
test edi edi +
jnz loc_465252  +
mov ecx [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_4652AC  +
mov eax [ebx+4] +
test eax eax +
jz loc_4652A6  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov ebx [ebx] +
test ebx ebx +
jnz loc_465290  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jnz loc_4651F3  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_4652D1  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+44h] +
test eax eax +
jz loc_4652E4  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_4652F7  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+54h] +
test eax eax +
jz loc_46530A  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+34h] +
test eax eax +
jz loc_46531D  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov edx [eax+80h] +
test edx edx +
jnz loc_465392  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+24h] +
test eax eax +
jz loc_46533E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_465351  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+60h] +
test eax eax +
jz loc_465364  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+68h] +
test eax eax +
jz loc_465377  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+20h] +
test eax eax +
jz loc_46539F  +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4254C0  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call sub_4254C0  +
jmp loc_46532B  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov ebp [eax] +
test ebp ebp +
jz loc_4657A0  +
mov edi [esp+4Ch+arg_0] +
mov eax [esp+4Ch+arg_0] +
mov esi [edi+6Ch] +
mov eax [eax+64h] +
test esi esi +
jz loc_465568  +
mov edi [ebp+60h] +
xor edx edx +
jmp loc_4653FB  +
mov ecx [eax+38h] +
add ecx [ebx+1Ch] +
cmp [edi+edx*4] ecx +
jnz loc_465410  +
add edx 1 +
mov eax [eax+0Ch] +
cmp edx esi +
jz loc_465568  +
mov ebx [eax+3Ch] +
test ebx ebx +
jnz loc_4653E2  +
mov ecx [eax+1Ch] +
cmp [edi+edx*4] ecx +
jz loc_4653ED  +
lea esi [esi+0] +
mov eax [esp+4Ch+arg_10] +
mov edi ebp +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_4651C0  +
test ebp 1 +
mov edx 84h +
jnz loc_465918  +
test edi 2 +
jnz loc_465926  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_46545A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_465462  +
mov byte ptr [edi] 0 +
mov eax [esp+4Ch+arg_8] +
mov [ebp+8] eax +
mov eax [esp+4Ch+arg_C] +
mov [ebp+38h] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_4655E5  +
mov eax [esp+4Ch+arg_10] +
mov [eax] ebp +
mov eax [esp+4Ch+arg_4] +
test eax eax +
jz loc_4657C5  +
mov eax [esp+4Ch+arg_4] +
cmp [esp+4Ch+arg_0] eax +
setz bl  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_4623B0  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_465575  +
mov eax [esp+4Ch+arg_4] +
mov [ebp+14h] eax +
mov eax [esp+4Ch+arg_14] +
test eax eax +
jz loc_465650  +
mov eax [ebp+64h] +
cmp eax 0 +
mov [esp+4Ch+var_30] eax +
jnz loc_465636  +
mov eax [ebp+8] +
mov [esp+4Ch+var_28] ebp +
mov eax [eax+18h] +
mov [esp+4Ch+var_34] eax +
mov eax [esp+4Ch+arg_0] +
mov ebp eax +
lea esi [esi+0] +
mov ebx [ebp+64h] +
test ebx ebx +
jz loc_465558  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_465508  +
cmp ebx eax +
jz loc_465508  +
test byte ptr [ebx+15h] 20h +
jz loc_465551  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_465551  +
mov esi [ebx] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_46553C  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
setz dl  +
movzx edx dl +
test byte ptr [ebx+14h] 1 +
jz loc_465548  +
cmp [esp+4Ch+arg_0] ebp +
jz loc_46554C  +
test edx edx +
jz loc_465551  +
add [esp+4Ch+var_30] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4654F7  +
cmp [esp+4Ch+arg_4] ebp +
jz loc_4657D7  +
mov ebp [esp+4Ch+arg_4] +
jmp loc_4654F0  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_4654B5  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aHomeJenkinsMin +
mov [esp+4Ch+var_4C] eax +
call sub_425C70  +
test eax eax +
mov ebx eax +
jz loc_4655DB  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_425380  +
test eax eax +
mov [esp+4Ch+arg_4] eax +
jz loc_4655D3  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_423080  +
test eax eax +
jnz loc_4659B1  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_4254C0  +
mov [esp+4Ch+var_4C] ebx +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_42B400  +
test eax eax +
mov [ebp+60h] eax +
jz loc_4655DB  +
mov edi [esp+4Ch+arg_0] +
mov edx [edi+64h] +
mov edi [edi+6Ch] +
test edi edi +
jz loc_46547F  +
xor ecx ecx +
jmp loc_465627  +
mov ebx [edx+38h] +
add ebx [esi+1Ch] +
mov [eax+ecx*4] ebx +
add ecx 1 +
mov edx [edx+0Ch] +
cmp ecx edi +
jz loc_46547F  +
mov esi [edx+3Ch] +
test esi esi +
jnz loc_465610  +
mov ebx [edx+1Ch] +
mov [eax+ecx*4] ebx +
jmp loc_465619  +
mov eax [ebp+68h] +
jle loc_465650  +
mov edx [esp+4Ch+var_30] +
nop   +
mov ecx [eax] +
add eax 8 +
mov ebx [eax-4] +
sub edx 1 +
mov [ecx+1Ch] ebx +
jnz loc_465640  +
mov ecx [esp+4Ch+var_2C] +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_462420  +
test eax eax +
jz loc_46572F  +
mov ecx [esp+4Ch+var_2C] +
xor eax eax +
mov [esp+4Ch+var_10] 0 +
test ecx ecx +
jz loc_46569D  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
add eax [ecx+24h] +
mov edx esi +
mov [esp+4Ch+var_10] eax +
mov eax ebx +
call sub_462420  +
mov ecx eax +
mov eax [esp+4Ch+var_10] +
test ecx ecx +
jnz loc_465683  +
mov [esp+4Ch+var_4C] eax +
call sub_42B400  +
test eax eax +
mov [ebp+34h] eax +
jz loc_4655DB  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_10] 0 +
call sub_4623B0  +
test eax eax +
mov ecx eax +
jz loc_465773  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
jmp loc_4656F3  +
mov edx esi +
mov eax ebx +
call sub_462420  +
test eax eax +
mov ecx eax +
jz loc_465773  +
mov edi [ecx+24h] +
test edi edi +
jz loc_4656E0  +
mov eax [esp+4Ch+arg_C] +
mov [esp+4Ch+var_34] ecx +
mov [esp+4Ch+var_40] eax +
mov eax [ebp+34h] +
add eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_46A950  +
test eax eax +
jz loc_4655DB  +
add [esp+4Ch+var_10] edi +
mov ecx [esp+4Ch+var_34] +
jmp loc_4656E0  +
mov eax [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+arg_C] +
mov eax [eax+24h] +
mov [esp+4Ch+var_10] eax +
mov eax [ebp+8] +
mov [esp+4Ch+var_4C] 0 +
mov [esp+4Ch+var_48] 0 +
lea edx [eax+18h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] eax +
lea eax [ebp+34h] +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
call sub_461DB0  +
test eax eax +
jz loc_4655DB  +
mov eax [ebp+34h] +
mov edx [esp+4Ch+arg_8] +
mov [ebp+0Ch] eax +
add eax [esp+4Ch+var_10] +
mov [ebp+10h] eax +
mov eax [esp+4Ch+arg_4] +
call sub_4623B0  +
mov [ebp+18h] eax +
mov eax [ebp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_46556D  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 84h +
mov [esp+4Ch+var_4C] eax +
call sub_425930  +
test eax eax +
mov ebp eax +
jnz loc_465462  +
xor eax eax +
jmp loc_4655DD  +
mov eax [esp+4Ch+arg_0] +
mov ebx 1 +
mov [esp+4Ch+arg_4] eax +
jmp loc_46549C  +
cmp [esp+4Ch+var_30] 1 +
mov ebp [esp+4Ch+var_28] +
jle loc_465937  +
mov edi [esp+4Ch+var_30] +
mov eax edi +
shl eax 3 +
mov [esp+4Ch+var_4C] eax +
call sub_42B400  +
test eax eax +
jz loc_4655DB  +
mov [ebp+64h] edi +
mov edi [esp+4Ch+arg_0] +
mov ebx eax +
mov [ebp+68h] eax +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] edi +
mov [esp+4Ch+var_20] ebp +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_4658C0  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_465843  +
cmp ebp eax +
jz loc_465843  +
test byte ptr [ebp+15h] 20h +
jz loc_4658B5  +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_4658B5  +
mov esi [ebp+0] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov ecx 1 +
test eax eax +
jz loc_465875  +
mov cl 11h +
mov edi offset a_gnu_linkonc_0 +
cmps   +
setz cl  +
movzx ecx cl +
test byte ptr [ebp+14h] 1 +
jz loc_465885  +
mov eax [esp+4Ch+var_30] +
cmp [esp+4Ch+arg_0] eax +
jz loc_465889  +
test ecx ecx +
jz loc_4658B5  +
mov esi [ebp+28h] +
test esi esi +
jnz loc_465893  +
mov esi [ebp+24h] +
test ecx ecx +
jz loc_4658E0  +
mov edi [ebp+40h] +
test edi edi +
jnz loc_465902  +
mov edi [esp+4Ch+var_24] +
mov eax edi +
mov [ebp+1Ch] edi +
add edi esi +
mov [esp+4Ch+var_24] edi +
mov [ebx] ebp +
add ebx 8 +
mov [ebx-4] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_465832  +
mov eax [esp+4Ch+var_20] +
mov eax [eax+14h] +
cmp [esp+4Ch+var_30] eax +
jz loc_4659A7  +
mov [esp+4Ch+var_30] eax +
jmp loc_465823  +
mov ecx [ebp+40h] +
mov edi 1 +
mov eax [esp+4Ch+var_28] +
shl edi cl +
lea eax [eax+edi-1] +
neg edi  +
and eax edi +
lea edi [esi+eax] +
mov [ebp+1Ch] eax +
mov [esp+4Ch+var_28] edi +
jmp loc_4658AD  +
mov [esp+4Ch+var_48] 0D14h +
mov [esp+4Ch+var_4C] offset a____Binutil_14 +
call sub_420BA0  +
jmp loc_46589E  +
mov byte ptr [ebp+0] 0 +
lea edi [ebp+1] +
mov dl 83h +
jmp loc_465437  +
xor ebx ebx +
add edi 2 +
mov [edi-2] bx +
sub edx 2 +
jmp loc_465443  +
mov eax [esp+4Ch+arg_4] +
mov dword ptr [ebp+64h] 0FFFFFFFFh +
cmp [esp+4Ch+arg_0] eax +
jz loc_465650  +
mov ebx [eax+64h] +
mov edi [esp+4Ch+arg_0] +
test ebx ebx +
mov esi [edi+64h] +
jnz loc_46599E  +
jmp loc_465650  +
test byte ptr [ebx+15h] 20h +
jnz loc_465650  +
mov eax [ebx] +
mov [esp+4Ch+var_48] eax +
mov eax [esi] +
mov [esp+4Ch+var_4C] eax +
call strcmp  +
test eax eax +
jnz loc_465990  +
mov eax [esi+3Ch] +
mov [ebx+3Ch] eax +
mov eax [esi+38h] +
mov [ebx+38h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov ebx [ebx+0Ch] +
mov esi [esi+0Ch] +
test ebx ebx +
jz loc_465650  +
test esi esi +
jnz loc_465960  +
jmp loc_465650  +
mov ebp [esp+4Ch+var_20] +
mov eax [esp+4Ch+var_30] +
jmp loc_465942  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_4623B0  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_4655C7  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_42E240  +
test eax eax +
jz loc_4655C7  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+78h] +
mov dword ptr [ebp+80h] 1 +
mov [esp+4Ch+arg_C] eax +
mov [ebp+38h] eax +
jmp loc_4654B5  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
test esi esi +
jz loc_465BB0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_465BB0  +
mov eax [ebx+0A0h] +
mov ebp [eax+234h] +
test ebp ebp +
jz loc_465B84  +
mov eax [esp+3Ch+arg_8] +
cmp [ebp+0] eax +
jz loc_465BD2  +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+4] 0 +
mov dword ptr [ebp+0Ch] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_8] +
mov [ebp+0] eax +
mov ebx [esi] +
test ebx ebx +
jz loc_465BB0  +
xor edx edx +
xor edi edi +
mov [esp+3Ch+var_24] ebp +
mov ebp edx +
mov [esp+3Ch+var_20] 0 +
jmp loc_465AAA  +
cmp edi 1 +
mov eax 2 +
cmovz edi eax +
mov ebp ebx +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_465B2F  +
test byte ptr [ebx+0Dh] 40h +
jnz loc_465A90  +
mov eax [esp+3Ch+var_28] +
lea edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+15Ch] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jz loc_465B18  +
mov ecx [esp+3Ch+var_10] +
cmp [esp+3Ch+arg_C] ecx +
jb loc_465B18  +
cmp ecx [esp+3Ch+var_20] +
jbe loc_465B70  +
mov edx [esp+3Ch+var_24] +
test ebp ebp +
mov [edx+4] ebx +
mov [edx+0Ch] eax +
mov dword ptr [edx+8] 0 +
jz loc_465BFC  +
test byte ptr [ebx+0Ch] 1 +
jz loc_465BC0  +
mov eax [ebp+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ecx +
mov [edx+8] eax +
test edi edi +
mov eax 1 +
cmovz edi eax +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_465AAA  +
mov ebp [esp+3Ch+var_24] +
mov edx [ebp+4] +
test edx edx +
jz loc_465BB0  +
mov ecx [esp+3Ch+arg_10] +
test ecx ecx +
jz loc_465B4B  +
mov eax [ebp+8] +
mov edx [esp+3Ch+arg_10] +
mov [edx] eax +
mov eax [esp+3Ch+arg_14] +
test eax eax +
jz loc_465B5F  +
mov eax [ebp+4] +
mov edx [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [edx] eax +
mov eax [ebp+4] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+3Ch+var_20] ecx +
jnz loc_465B18  +
mov edx [esp+3Ch+var_24] +
cmp eax [edx+0Ch] +
jbe loc_465B18  +
jmp loc_465AE7  +
mov [esp+3Ch+var_38] 10h +
mov [esp+3Ch+var_3C] ebx +
call sub_425930  +
mov ebp eax +
mov eax [ebx+0A0h] +
test ebp ebp +
mov [eax+234h] ebp +
jnz loc_465A38  +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 2 +
mov [esp+3Ch+var_20] ecx +
jnz loc_465B0A  +
jmp loc_465A9D  +
mov eax [ebp+4] +
test eax eax +
jz loc_465A45  +
mov eax [eax+8] +
cmp eax [esp+3Ch+arg_C] +
ja loc_465A45  +
add eax [ebp+0Ch] +
cmp [esp+3Ch+arg_C] eax +
jnb loc_465A45  +
jmp loc_465B3A  +
mov [esp+3Ch+var_20] ecx +
jmp loc_465B18  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov esi [esp+8Ch+arg_18] +
mov eax [esp+8Ch+arg_14] +
mov ebx [esp+8Ch+arg_2C] +
mov [esp+8Ch+var_2C] 0 +
test esi esi +
mov dword ptr [eax] 0 +
jz loc_465C4E  +
mov eax [esp+8Ch+arg_18] +
mov dword ptr [eax] 0 +
mov ecx [esp+8Ch+arg_20] +
mov eax [esp+8Ch+arg_1C] +
test ecx ecx +
mov dword ptr [eax] 0 +
jz loc_465C73  +
mov eax [esp+8Ch+arg_20] +
mov dword ptr [eax] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+28h] +
mov [esp+8Ch+var_7C] ebx +
mov [esp+8Ch+var_88] 0 +
shr eax 5 +
test al 42h +
setz al  +
movzx eax al +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_4653B0  +
test eax eax +
jz loc_465E52  +
mov edx [esp+8Ch+arg_8] +
xor eax eax +
mov ebp [ebx] +
test edx edx +
setnz al  +
mov [esp+8Ch+var_5C] eax +
jz loc_465DF1  +
mov eax [esp+8Ch+arg_C] +
test eax eax +
jnz loc_465D00  +
mov eax [esp+8Ch+arg_10] +
test eax eax +
jnz loc_465D00  +
mov eax [esp+8Ch+arg_18] +
test eax eax +
jz loc_465D14  +
mov [esp+8Ch+var_88] 0F3Dh +
mov [esp+8Ch+var_8C] offset a____Binutil_14 +
call sub_420BA0  +
mov eax [esp+8Ch+arg_8] +
mov eax [eax+10h] +
mov [esp+8Ch+arg_C] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [eax+8] +
mov eax [esp+8Ch+arg_C] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_465E3F  +
mov ecx [esp+8Ch+arg_C] +
mov eax [eax+1Ch] +
add edx [ecx+38h] +
mov [esp+8Ch+var_6C] edx +
add [esp+8Ch+var_6C] eax +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_465E52  +
mov ecx [esp+8Ch+var_5C] +
mov dword ptr [ebp+5Ch] 0 +
test ecx ecx +
jz loc_465E77  +
mov eax [ebp+7Ch] +
test eax eax +
jz loc_4660DC  +
cmp eax 1 +
jz loc_46612D  +
mov ebx [ebp+0] +
test ebx ebx +
jz loc_465FF8  +
mov esi [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_1C] +
jmp loc_465DB8  +
mov eax [ebx+24h] +
test eax eax +
jz loc_465E5F  +
mov ebx [ebx] +
test ebx ebx +
jz loc_465FF8  +
test byte ptr [esi+0Ch] 8 +
jz loc_465DC5  +
mov eax [ebx+14h] +
test eax eax +
jnz loc_465DA3  +
mov eax [esp+8Ch+arg_14] +
mov edx esi +
mov ecx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
call sub_464B00  +
test eax eax +
jz loc_465DAE  +
mov [esp+8Ch+var_68] eax +
jmp loc_465EEE  +
mov edi [esp+8Ch+arg_18] +
test edi edi +
jz loc_465E12  +
mov esi [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
test esi esi +
jnz loc_465D2F  +
mov [esp+8Ch+var_88] 0F43h +
mov [esp+8Ch+var_8C] offset a____Binutil_14 +
call sub_420BA0  +
mov eax [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_465D41  +
mov eax [esp+8Ch+arg_C] +
add edx [eax+1Ch] +
mov [esp+8Ch+var_6C] edx +
jmp loc_465D56  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+8Ch+var_6C] +
mov eax ebx +
call sub_462390  +
test eax eax +
jnz loc_465DC5  +
jmp loc_465DAE  +
mov ebx [ebp+0] +
mov [esp+8Ch+var_28] 0 +
mov [esp+8Ch+var_24] 0 +
mov [esp+8Ch+var_20] 0 +
test ebx ebx +
mov [esp+8Ch+var_1C] 0 +
jz loc_466BF0  +
mov edi 0FFFFFFFFh +
mov [esp+8Ch+var_74] edi +
mov edi [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_1C] +
mov eax [ebx+14h] +
test eax eax +
jz loc_465F66  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_465F55  +
xor eax eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_465EB3  +
mov [esp+8Ch+var_68] eax +
mov eax [esp+8Ch+arg_1C] +
mov eax [eax] +
test eax eax +
jz loc_466000  +
mov [esp+8Ch+var_68] 1 +
mov eax [esp+8Ch+var_2C] +
test eax eax +
jz loc_465F0D  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_4661F7  +
mov eax [eax+20h] +
mov edi [esp+8Ch+arg_18] +
mov [edi] eax +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax [esp+8Ch+var_68] +
shr edx 5 +
and edx 42h +
jnz loc_465E54  +
mov edx [ebp+64h] +
mov ecx [ebp+68h] +
test edx edx +
jle loc_465E54  +
mov eax [ecx] +
add ecx 8 +
sub edx 1 +
mov dword ptr [eax+1Ch] 0 +
jnz loc_465F35  +
mov eax [esp+8Ch+var_68] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx edi +
mov eax ebx +
call sub_462390  +
test eax eax +
jz loc_465EC9  +
lea eax [esp+8Ch+var_20] +
mov edx edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
lea ecx [esp+8Ch+var_28] +
mov eax ebx +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] esi +
call sub_464C80  +
test eax eax +
jz loc_465EC9  +
cmp eax [esp+8Ch+var_74] +
ja loc_46609D  +
mov edx [esp+8Ch+var_28] +
test edx edx +
jz loc_465FAD  +
mov ecx [esp+8Ch+arg_14] +
mov [ecx] edx +
mov edx [esp+8Ch+var_24] +
test edx edx +
jz loc_465FB9  +
mov [esp+8Ch+var_2C] edx +
mov edx [esp+8Ch+arg_20] +
test edx edx +
jz loc_465FD5  +
mov edx [esp+8Ch+var_1C] +
test edx edx +
jz loc_465FD5  +
mov ecx [esp+8Ch+arg_20] +
mov [ecx] edx +
mov edx [esp+8Ch+var_20] +
test edx edx +
jz loc_466099  +
mov ecx [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
mov [ecx] edx +
jmp loc_465ECB  +
mov [esp+8Ch+var_68] 0 +
mov eax [esp+8Ch+arg_28] +
test eax eax +
jnz loc_4660A7  +
mov [esp+8Ch+arg_28] 4 +
lea eax [ebp+40h] +
mov ebx [ebp+0Ch] +
mov [esp+8Ch+var_3C] eax +
lea eax [ebp+3Ch] +
mov [esp+8Ch+var_38] eax +
jmp loc_466048  +
add ebx 8 +
xor edi edi +
cmp ecx ebx +
jnb loc_4661E5  +
test edi edi +
mov [ebp+0Ch] ebx +
jnz loc_466CA9  +
mov ecx [ebp+10h] +
mov esi ebx +
cmp ecx ebx +
jbe loc_465EEE  +
mov eax [ebp+14h] +
lea edx [esi+4] +
mov ebx esi +
add eax 4 +
cmp ecx edx +
jb loc_466030  +
mov edx esi +
call sub_462300  +
cmp eax 0FFFFFFFFh +
jnz loc_46628A  +
mov edx [ebp+0Ch] +
xor edi edi +
mov eax [ebp+14h] +
lea ebx [edx+0Ch] +
cmp [ebp+10h] ebx +
jb loc_46603D  +
add edx 4 +
add eax 4 +
call sub_462320  +
mov edx [ebp+0Ch] +
lea ebx [edx+0Ch] +
mov edi eax +
jmp loc_46603D  +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
jmp loc_465ECB  +
cmp [esp+8Ch+arg_28] 8 +
jz loc_46601A  +
cmp [esp+8Ch+arg_28] 4 +
jz loc_46601A  +
mov [esp+8Ch+var_88] 0FB3h +
mov [esp+8Ch+var_8C] offset a____Binutil_14 +
call sub_420BA0  +
jmp loc_46601A  +
mov eax [ebp+6Ch] +
lea edx [eax+1] +
cmp eax 63h +
mov [ebp+6Ch] edx +
jle loc_465D88  +
mov eax [esp+8Ch+arg_0] +
call sub_462230  +
mov [ebp+70h] eax +
mov eax [esp+8Ch+arg_0] +
call sub_462230  +
mov edx [ebp+70h] +
test edx edx +
mov [ebp+74h] eax +
jz loc_466BFD  +
test eax eax +
jz loc_466BFD  +
mov eax ebp +
call sub_464E70  +
mov dword ptr [ebp+7Ch] 1 +
mov eax ebp +
call sub_464E70  +
cmp dword ptr [ebp+7Ch] 1 +
jnz loc_465D88  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jnz loc_466B1E  +
mov eax [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_8] +
mov eax [eax+4] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+74h] +
mov [esp+8Ch+var_8C] eax +
call sub_42A4E0  +
test eax eax +
jz loc_465FF8  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_465FF8  +
mov ecx [esp+8Ch+var_6C] +
jmp loc_4661AA  +
mov eax [eax] +
test eax eax +
jz loc_465FF8  +
mov edx [eax+4] +
cmp ecx [edx+14h] +
jnz loc_4661A0  +
mov esi [edx+18h] +
test esi esi +
jz loc_4661BD  +
cmp ebx esi +
jnz loc_4661A0  +
mov eax [edx+4] +
mov edi [esp+8Ch+arg_14] +
mov [edx+18h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [edi] eax +
mov eax [edx+8] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_465EEE  +
call sub_462300  +
mov ebx [ebp+0Ch] +
add ebx 8 +
mov edi eax +
jmp loc_46603D  +
mov edi [esp+8Ch+arg_14] +
xor eax eax +
mov edx [edi] +
test edx edx +
cmovz eax edi +
mov edi [esp+8Ch+arg_18] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+arg_10] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_465A00  +
mov edi [esp+8Ch+arg_C] +
mov edx [edi+3Ch] +
mov ecx [edi+1Ch] +
test edx edx +
jz loc_46625D  +
mov ecx [edi+38h] +
add ecx [edx+1Ch] +
test eax eax +
mov edx [esp+8Ch+var_2C] +
jz loc_46626D  +
add ecx [eax+8] +
cmp ecx [edx+28h] +
jz loc_46627C  +
mov eax [edx+20h] +
mov dword ptr [edx+1Ch] 1 +
jmp loc_465F04  +
mov eax [esp+8Ch+arg_18] +
mov eax [eax] +
mov [edx+20h] eax +
jmp loc_466270  +
test eax eax +
jz loc_466C88  +
cmp [esp+8Ch+arg_28] 8 +
mov [esp+8Ch+var_60] eax +
jz loc_466340  +
mov eax [esp+8Ch+arg_28] +
add dword ptr [ebp+0Ch] 4 +
cmp [esp+8Ch+arg_28] 4 +
mov [esp+8Ch+var_64] eax +
setnz cl  +
mov ebx [ebp+0Ch] +
mov edi [ebp+14h] +
mov eax [esp+8Ch+var_60] +
mov [esp+8Ch+var_74] 0FFFFFFFEh +
mov [esp+8Ch+var_40] 0 +
mov [esp+8Ch+var_58] edi +
add edi 4 +
add eax ebx +
mov [esp+8Ch+var_70] edi +
lea edi [ebx+2] +
cmp eax edi +
mov [esp+8Ch+var_4C] eax +
mov [esp+8Ch+var_54] edi +
jnb loc_466A9B  +
test cl cl +
jnz loc_466A82  +
cmp [esp+8Ch+var_64] 4 +
jz loc_466ABE  +
lea eax [ebx+0Ah] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jnb loc_466AE3  +
mov eax [esp+8Ch+var_54] +
add eax [esp+8Ch+var_64] +
lea ecx [eax+1] +
cmp [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_34] ecx +
jnb loc_466353  +
cmp [esp+8Ch+var_74] 2 +
ja loc_466C62  +
xor eax eax +
jmp loc_466375  +
add dword ptr [ebp+0Ch] 4 +
xor ecx ecx +
mov [esp+8Ch+var_64] 4 +
jmp loc_4662BE  +
movzx eax byte ptr [eax] +
cmp [esp+8Ch+var_74] 2 +
mov [esp+8Ch+var_2D] al +
ja loc_466C62  +
cmp eax 4 +
ja loc_466C12  +
jz loc_466397  +
cmp eax 2 +
jz loc_466397  +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFoun +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
jmp loc_465EEE  +
mov eax [esp+8Ch+var_3C] +
mov ecx [ebp+38h] +
mov edx [ebp+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
call sub_461DB0  +
test eax eax +
jz loc_465EEE  +
cmp edi 0 +
mov eax [ebp+40h] +
ja loc_465EEE  +
cmp ebx eax +
jnb loc_465EEE  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 1E4h +
mov [esp+8Ch+var_8C] edi +
call sub_425930  +
test eax eax +
mov [esp+8Ch+var_48] eax +
jz loc_465EEE  +
mov eax [ebp+3Ch] +
mov [esp+8Ch+var_58] edi +
add ebx eax +
add eax [ebp+40h] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_74] eax +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_42BFC0  +
add ebx [esp+8Ch+var_1C] +
test eax eax +
mov [esp+8Ch+var_50] eax +
jz loc_4665FF  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_54] ebp +
mov ebp ebx +
mov [esp+8Ch+var_44] esi +
mov [esp+8Ch+var_88] 18h +
mov [esp+8Ch+var_8C] edi +
call sub_425930  +
test eax eax +
mov ebx eax +
jz loc_466C09  +
mov eax [esp+8Ch+var_50] +
mov esi [esp+8Ch+var_74] +
mov [ebx] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_7C] esi +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_42BFC0  +
mov edx [esp+8Ch+var_1C] +
add edx ebp +
lea ebp [edx+1] +
mov [ebx+4] eax +
xor eax eax +
cmp esi ebp +
jb loc_4664A0  +
movzx eax byte ptr [edx] +
mov [ebx+8] eax +
jmp loc_4664B6  +
mov eax [ebx+10h] +
lea eax [eax+edx*8] +
add edx 1 +
mov [eax] esi +
mov [ebx+0Ch] edx +
mov [eax+4] ecx +
mov eax [esp+8Ch+var_74] +
lea ecx [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_8C] edi +
call sub_42BFC0  +
add ebp [esp+8Ch+var_1C] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] ebp +
mov esi eax +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_42BFC0  +
add ebp [esp+8Ch+var_1C] +
test esi esi +
mov ecx eax +
jz loc_466549  +
mov edx [ebx+0Ch] +
test dl 3 +
jnz loc_4664A5  +
mov [esp+8Ch+var_70] eax +
mov eax [ebx+10h] +
mov ecx eax +
lea eax ds:20h[edx*8] +
mov [esp+8Ch+var_8C] ecx +
mov [esp+8Ch+var_88] eax +
call sub_42B490  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jz loc_466899  +
mov [ebx+10h] eax +
mov edx [ebx+0Ch] +
jmp loc_4664A8  +
mov ecx [esp+8Ch+var_50] +
mov eax 0ECF56BFh +
mov esi [esp+8Ch+var_48] +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov ecx [esp+8Ch+var_54] +
lea eax [esi+eax*4] +
mov edx [eax] +
mov [ebx+14h] edx +
mov [eax] ebx +
mov eax ebp +
sub eax [ecx+3Ch] +
cmp eax [ecx+40h] +
jnb loc_4665F7  +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_42BFC0  +
add ebp [esp+8Ch+var_1C] +
mov ecx eax +
mov [esp+8Ch+var_50] eax +
mov eax 0ECF56BFh +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov eax [esi+eax*4] +
test eax eax +
jz loc_4665EB  +
cmp edx [eax] +
jz loc_4665F7  +
mov edx [esp+8Ch+var_50] +
jmp loc_4665E4  +
cmp edx [eax] +
jz loc_4665F7  +
mov eax [eax+14h] +
test eax eax +
jnz loc_4665E0  +
mov eax [esp+8Ch+var_50] +
test eax eax +
jnz loc_466447  +
mov ebp [esp+8Ch+var_54] +
mov esi [esp+8Ch+var_44] +
mov eax [esp+8Ch+var_4C] +
mov edi [esp+8Ch+var_34] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
call sub_42BFC0  +
mov ecx eax +
mov eax [esp+8Ch+var_20] +
add eax edi +
test ecx ecx +
mov edi eax +
jz loc_466C3C  +
mov eax ecx +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub edx eax +
mov eax edx +
mov edx [esp+8Ch+var_48] +
mov ebx [edx+eax*4] +
test ebx ebx +
jnz loc_46667B  +
jmp loc_4668CF  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_4668CF  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_466670  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 64h +
mov [esp+8Ch+var_8C] eax +
call sub_425930  +
test eax eax +
mov [esp+8Ch+var_74] eax +
jz loc_465EEE  +
mov eax [esp+8Ch+var_74] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_4C] +
mov [eax+8] ecx +
mov ecx [esp+8Ch+var_40] +
mov [eax+54h] ecx +
mov ecx eax +
movzx eax [esp+8Ch+var_2D] +
mov [ecx+58h] al +
movzx eax byte ptr [esp+8Ch+var_64] +
mov [ecx+59h] al +
mov eax ecx +
mov ecx [esp+8Ch+var_48] +
mov [eax+30h] esi +
mov esi [ebx+0Ch] +
mov [eax+40h] edx +
mov [eax+50h] ebp +
mov [eax+1Ch] ecx +
mov ecx eax +
mov eax [ebp+1Ch] +
test esi esi +
mov [ecx+34h] eax +
jz loc_466934  +
mov eax ecx +
xor esi esi +
lea ecx [ecx+0Ch] +
mov [esp+8Ch+var_48] ecx +
mov ecx edi +
mov edi edx +
mov [esp+8Ch+var_50] ebp +
mov ebp eax +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_58] 0 +
mov [esp+8Ch+var_54] 0 +
jmp loc_46674C  +
cmp eax 10h +
jz loc_466842  +
ja loc_46679B  +
cmp eax 3 +
nop   +
jnz loc_466740  +
mov eax [esp+8Ch+var_14] +
mov [ebp+18h] eax +
lea esi [esi+0] +
add esi 1 +
cmp esi [ebx+0Ch] +
jnb loc_4668F1  +
mov eax [ebx+10h] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+8Ch+var_1C] edx +
mov edx [eax+4] +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_8C] ecx +
mov ecx ebp +
mov [esp+8Ch+var_88] edi +
call sub_462790  +
test eax eax +
mov ecx eax +
jz loc_4667D8  +
mov eax [esp+8Ch+var_1C] +
cmp eax 12h +
jz loc_466827  +
jbe loc_466720  +
cmp eax 1Bh +
jz loc_4667E1  +
cmp eax 55h +
jz loc_4667AE  +
cmp eax 13h +
nop   +
jnz loc_466740  +
mov eax [esp+8Ch+var_14] +
mov [ebp+20h] eax +
jmp loc_466740  +
mov eax [esp+8Ch+var_14] +
cmp dword ptr [ebx+4] 11h +
mov [esp+8Ch+var_64] eax +
jnz loc_466740  +
mov [ebp+5Ch] eax +
jmp loc_466740  +
mov edx [esp+8Ch+var_10] +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] ecx +
mov [esp+8Ch+var_88] edx +
mov edx [esp+8Ch+var_48] +
mov [esp+8Ch+var_8C] eax +
mov eax ebp +
call sub_462670  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jnz loc_466740  +
mov ebp [esp+8Ch+var_50] +
jmp loc_465EEE  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] eax +
mov eax [esp+8Ch+var_18] +
cmp eax 8 +
jz loc_466855  +
cmp eax 0Eh +
jz loc_466855  +
cmp eax 1F21h +
jz loc_466855  +
mov [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorDw_a +
call off_492AE8  +
mov ecx [esp+8Ch+var_4C] +
mov [esp+8Ch+var_70] 0 +
mov eax [esp+8Ch+var_70] +
mov [ebp+28h] eax +
jmp loc_466740  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_58] eax +
xor eax eax +
cmp [esp+8Ch+var_18] 1 +
setnz al  +
mov [esp+8Ch+var_54] eax +
jmp loc_466740  +
mov dword ptr [ebp+2Ch] 1 +
mov eax [esp+8Ch+var_14] +
mov [ebp+38h] eax +
jmp loc_466740  +
mov eax [esp+8Ch+var_70] +
test eax eax +
jz loc_46681B  +
mov [esp+8Ch+var_88] 3Ah +
mov [esp+8Ch+var_8C] eax +
mov [esp+8Ch+var_4C] ecx +
call strchr  +
mov ecx [esp+8Ch+var_4C] +
cmp [esp+8Ch+var_70] eax +
jz loc_46681B  +
test eax eax +
jz loc_46681B  +
cmp byte ptr [eax-1] 2Eh +
jnz loc_46681B  +
lea edx [eax+1] +
cmp byte ptr [eax+1] 2Fh +
mov eax edx +
cmovnz eax [esp+8Ch+var_70] +
mov [esp+8Ch+var_70] eax +
jmp loc_46681B  +
mov ebp [esp+8Ch+var_54] +
xor ebx ebx +
mov edi [esp+8Ch+var_48] +
mov esi [edi+ebx*4] +
test esi esi +
jz loc_4668C2  +
lea esi [esi+0] +
mov eax [esi+10h] +
mov [esp+8Ch+var_8C] eax +
call free  +
mov esi [esi+14h] +
test esi esi +
jnz loc_4668B0  +
add ebx 1 +
cmp ebx 79h +
jnz loc_4668A3  +
jmp loc_465EEE  +
mov [esp+8Ch+var_88] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorCoul +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
jmp loc_465EEE  +
mov edi ecx +
mov eax [esp+8Ch+var_64] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_54] +
mov ebp [esp+8Ch+var_50] +
add eax ecx +
test edx edx +
cmovz eax ecx +
test eax eax +
mov [esp+8Ch+var_58] eax +
jz loc_466934  +
mov ecx [esp+8Ch+var_58] +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_8C] ecx +
mov ecx [esp+8Ch+var_64] +
lea edx [eax+0Ch] +
add eax 8 +
call sub_4624B0  +
test eax eax +
jz loc_465EEE  +
mov eax [esp+8Ch+var_74] +
mov [eax+3Ch] edi +
mov eax [esp+8Ch+var_60] +
add eax [ebp+0Ch] +
jb loc_466C9C  +
mov [ebp+0Ch] eax +
mov eax [ebp+0] +
mov edi [esp+8Ch+var_74] +
test eax eax +
jz loc_466AF9  +
mov [eax+4] edi +
mov esi [esp+8Ch+var_5C] +
mov edi [esp+8Ch+var_74] +
test esi esi +
mov [edi] eax +
mov [ebp+0] edi +
jz loc_4669C0  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jz loc_4669FE  +
mov ebx [edi+14h] +
mov eax edi +
test ebx ebx +
jz loc_4669FE  +
mov ecx [edi+24h] +
mov [esp+8Ch+var_68] 0 +
test ecx ecx +
jz loc_4669F1  +
mov ecx [ebp+18h] +
mov ebx [ebp+0Ch] +
mov eax ebx +
sub eax [ebp+1Ch] +
cmp eax [ecx+24h] +
jz loc_466B01  +
mov esi [esp+8Ch+var_68] +
test esi esi +
jz loc_466048  +
jmp loc_465EE6  +
mov eax [esp+8Ch+var_74] +
mov edx [eax+14h] +
test edx edx +
jz loc_466A3C  +
mov edi [eax+24h] +
mov [esp+8Ch+var_68] 0 +
test edi edi +
jnz loc_466997  +
mov edx [esp+8Ch+var_6C] +
call sub_462390  +
test eax eax +
jnz loc_466A3C  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
jmp loc_466997  +
mov edx [esp+8Ch+var_6C] +
call sub_462390  +
test eax eax +
jz loc_466997  +
mov eax [esp+8Ch+arg_1C] +
mov ecx [esp+8Ch+var_6C] +
mov edx [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_464B00  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_466997  +
mov eax [esp+8Ch+arg_20] +
mov ecx [esp+8Ch+arg_14] +
mov edx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_2C] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_464C80  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_466997  +
mov [esp+8Ch+var_88] 0ABDh +
mov [esp+8Ch+var_8C] offset a____Binutil_14 +
call sub_420BA0  +
jmp loc_46630B  +
mov eax [esp+8Ch+var_70] +
mov edx ebx +
mov [esp+8Ch+var_50] ecx +
call sub_4622E0  +
mov ecx [esp+8Ch+var_50] +
mov [esp+8Ch+var_40] eax +
sub eax 2 +
mov [esp+8Ch+var_74] eax +
jmp loc_4662F8  +
lea eax [ebx+6] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jb loc_46631C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_462300  +
mov ebx eax +
jmp loc_46631C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_462320  +
mov ebx eax +
mov edi edx +
jmp loc_46631C  +
mov [ebp+4] edi +
jmp loc_46695D  +
mov eax [ebp+14h] +
mov edx [esp+8Ch+arg_24] +
call sub_462420  +
mov ebx [ebp+0Ch] +
mov [ebp+1Ch] ebx +
mov [ebp+18h] eax +
jmp loc_4669AB  +
mov eax [eax+4] +
mov edi [esp+8Ch+arg_8] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+70h] +
mov [esp+8Ch+var_8C] eax +
call sub_42A4E0  +
test eax eax +
jz loc_465FF8  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_465FF8  +
mov [esp+8Ch+var_74] 0 +
xor edi edi +
mov [esp+8Ch+var_68] ebp +
mov eax [esi+4] +
mov ecx eax +
mov [esp+8Ch+var_70] eax +
add eax 24h +
jz loc_466BB6  +
mov edx [ecx+30h] +
jmp loc_466B8A  +
cmp ebx edx +
jz loc_466B8E  +
mov eax [eax] +
test eax eax +
jz loc_466BB6  +
test edx edx +
jnz loc_466B80  +
mov ecx [eax+4] +
cmp [esp+8Ch+var_6C] ecx +
jb loc_466B84  +
mov ebp [eax+8] +
cmp [esp+8Ch+var_6C] ebp +
jnb loc_466B84  +
sub ebp ecx +
test edi edi +
jz loc_466BAC  +
cmp ebp [esp+8Ch+var_74] +
jnb loc_466B84  +
mov [esp+8Ch+var_74] ebp +
mov edi [esp+8Ch+var_70] +
jmp loc_466B84  +
mov esi [esi] +
test esi esi +
jnz loc_466B6B  +
test edi edi +
mov ebp [esp+8Ch+var_68] +
jz loc_465FF8  +
mov eax [edi+0Ch] +
mov ecx [esp+8Ch+arg_14] +
mov [edi+30h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [ecx] eax +
mov eax [edi+14h] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_465EEE  +
mov [esp+8Ch+var_68] 0 +
jmp loc_465ED5  +
mov dword ptr [ebp+7Ch] 2 +
jmp loc_465D88  +
mov ebp [esp+8Ch+var_54] +
jmp loc_465EEE  +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_0 +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
jmp loc_465EEE  +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] offset aDwarfErrorBadA +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
jmp loc_465EEE  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_1 +
mov [esp+8Ch+var_88] eax +
call off_492AE8  +
mov [esp+8Ch+var_8C] 11h +
call sub_420C50  +
jmp loc_465EEE  +
mov ebx [ebp+0Ch] +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
lea edx [ebx+4] +
add eax 4 +
jmp loc_466030  +
mov [esp+8Ch+var_68] 0 +
jmp loc_465EEE  +
mov [esp+8Ch+var_60] edi +
xor ecx ecx +
mov [esp+8Ch+var_64] 8 +
jmp loc_4662C1  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_466D14  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_466D20  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_466D0F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_466D20  +
sub edx 1 +
jnz loc_466D03  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_466D80  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_42A800  +
test eax eax +
jz loc_466D72  +
mov dword ptr [eax+14h] 0FFFFFFFFh +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_466D6D  +
jmp loc_466D40  +
***
mov [esp+18h+var_18] 2Ch +
call sub_42B400  +
test eax eax +
mov ebx eax +
jz loc_466E16  +
mov [esp+18h+var_10] 18h +
mov [esp+18h+var_14] offset sub_466D30 +
mov [esp+18h+var_18] eax +
call sub_42A280  +
test eax eax +
jz loc_466E07  +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+20h] 40h +
mov [esp+18h+var_18] 100h +
call sub_42B400  +
test eax eax +
mov [ebx+28h] eax +
jz loc_466E07  +
mov dword ptr [eax] 0 +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
jmp loc_466E02  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_42A2B0  +
mov eax [ebx+28h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+18h+arg_4] +
mov esi [esp+18h+arg_0] +
cmp byte ptr [edi] 0 +
jz loc_466EC5  +
mov edx [esi+24h] +
test edx edx +
jnz loc_466ED0  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_42A4E0  +
test eax eax +
mov ebx eax +
jz loc_466EE6  +
add dword ptr [eax+10h] 1 +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_466EC2  +
mov [esp+18h+var_18] edi +
call strlen  +
add eax 1 +
test eax eax +
mov [ebx+0Ch] eax +
jle loc_466F16  +
mov edx [esi+1Ch] +
cmp edx [esi+20h] +
jz loc_466EF2  +
mov eax [esi+28h] +
lea ecx [edx+1] +
mov [esi+1Ch] ecx +
mov [ebx+14h] edx +
mov [eax+edx*4] ebx +
mov eax [ebx+14h] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_14] 99h +
mov [esp+18h+var_18] offset a____Binutil_22 +
call sub_420BA0  +
jmp loc_466E6C  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [edx+edx] +
mov [esi+20h] eax +
mov eax [esi+28h] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_42B550  +
test eax eax +
mov [esi+28h] eax +
jz loc_466EE6  +
mov edx [esi+1Ch] +
jmp loc_466EB6  +
mov [esp+18h+var_14] 0A5h +
mov [esp+18h+var_18] offset a____Binutil_22 +
call sub_420BA0  +
jmp loc_466EAB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_466F5B  +
mov eax [esi+24h] +
test eax eax +
jnz loc_466F77  +
cmp ebx [esi+1Ch] +
jnb loc_466F61  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
add dword ptr [eax+10h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0BCh +
mov [esp+14h+var_14] offset a____Binutil_22 +
call sub_420BA0  +
jmp loc_466F51  +
mov [esp+14h+var_10] 0BBh +
mov [esp+14h+var_14] offset a____Binutil_22 +
call sub_420BA0  +
cmp ebx [esi+1Ch] +
jb loc_466F51  +
jmp loc_466F61  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_466FD4  +
mov eax [esi+24h] +
test eax eax +
jnz loc_467000  +
cmp ebx [esi+1Ch] +
jnb loc_467019  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jz loc_466FE0  +
sub edx 1 +
mov [eax+10h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0C7h +
mov [esp+14h+var_14] offset a____Binutil_22 +
call sub_420BA0  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
jmp loc_466FCE  +
mov [esp+14h+var_10] 0C5h +
mov [esp+14h+var_14] offset a____Binutil_22 +
call sub_420BA0  +
cmp ebx [esi+1Ch] +
jb loc_466FC1  +
mov [esp+14h+var_10] 0C6h +
mov [esp+14h+var_14] offset a____Binutil_22 +
call sub_420BA0  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jnz loc_466FCE  +
jmp loc_466FE0  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax+28h] +
mov eax [eax+edx*4] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
cmp edx 1 +
jbe locret_467085  +
mov ecx [eax+28h] +
lea eax [ecx+4] +
lea ecx [ecx+edx*4] +
mov edx [eax] +
add eax 4 +
cmp eax ecx +
mov dword ptr [edx+10h] 0 +
jnz loc_467075  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [edi+24h] +
mov esi [edi+1Ch] +
test eax eax +
jnz loc_4670D5  +
cmp esi ebx +
jb loc_4670ED  +
cmp esi ebx +
mov [edi+1Ch] ebx +
jbe loc_4670CE  +
mov edx [edi+28h] +
mov eax [edx+ebx*4] +
add ebx 1 +
cmp ebx esi +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
jnz loc_4670B6  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 0E1h +
mov [esp+10h+var_10] offset a____Binutil_22 +
call sub_420BA0  +
cmp esi ebx +
jnb loc_4670AC  +
mov [esp+10h+var_C] 0E2h +
mov [esp+10h+var_10] offset a____Binutil_22 +
call sub_420BA0  +
jmp loc_4670AC  +
***
mov edx [esp+arg_0] +
push esi  +
push esi  +
push esi  +
mov edx [eax] +
mov ecx eax +
test dl 1 +
jz loc_467431  +
xor eax eax +
cmp dword ptr [ecx+4] 0 +
jnz locret_46744C  +
test dl 2 +
jz loc_467444  +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_467444  +
xor eax eax +
cmp byte ptr [ecx] 0 +
jnz locret_46744C  +
xor eax eax +
and edx 4 +
setz al  +
retn   +
***
push ebx  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax ecx +
jmp loc_4674C9  +
add ebx 1 +
or ecx 0FFFFFF80h +
mov [ebx-1] cl +
mov ecx edx +
shr edx 7 +
and ecx 7Fh +
test edx edx +
jnz loc_4674C0  +
mov [ebx] cl +
mov edx [eax] +
lea esi [ebx+1] +
test dl 1 +
jz loc_4674F9  +
mov ecx [eax+4] +
mov edx esi +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jnz loc_467507  +
lea esi [edx+1] +
mov [edx] bl +
mov edx [eax] +
and edx 2 +
jnz loc_467520  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
or ebx 0FFFFFF80h +
add edx 1 +
mov [edx-1] bl +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jz loc_4674F2  +
jmp loc_467507  +
mov edi [eax+8] +
mov [esp+10h+var_10] edi +
call strlen  +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] esi +
lea ebx [eax+1] +
mov [esp+10h+var_8] ebx +
add esi ebx +
call memcpy  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+1Ch+var_14] edx +
jnz loc_467690  +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov ecx [edx+184h] +
test ecx ecx +
mov [esp+1Ch+var_10] ecx +
jz loc_46769D  +
mov eax [eax+0A0h] +
mov ebx 2 +
xor edi edi +
mov ecx eax +
mov ebp eax +
imul eax [esp+1Ch+var_14] +
lea esi [ecx+eax+268h] +
nop   +
mov eax esi +
call sub_467420  +
xor edx edx +
test eax eax +
jnz loc_467628  +
mov edx esi +
mov eax ebx +
call sub_467450  +
mov edx eax +
add ebx 1 +
add edi edx +
add esi 0Ch +
cmp ebx 47h +
jnz loc_467610  +
mov ecx [esp+1Ch+var_14] +
mov ebx [ebp+ecx*4+8F8h] +
test ebx ebx +
jz loc_46766A  +
lea esi [ebx+8] +
mov ebp [ebx+4] +
mov eax esi +
call sub_467420  +
xor edx edx +
test eax eax +
jnz loc_467662  +
mov edx esi +
mov eax ebp +
call sub_467450  +
mov edx eax +
mov ebx [ebx] +
add edi edx +
test ebx ebx +
jnz loc_467644  +
test edi edi +
jnz loc_467678  +
mov edx [esp+1Ch+var_14] +
xor eax eax +
test edx edx +
jnz loc_467688  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea eax [edi+eax+0Ah] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_10] offset aGnu_0 +
jmp loc_4675EE  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 4 +
mov ebx [esp+8+arg_0] +
mov eax ebx +
call sub_4675C0  +
mov edx 1 +
mov esi eax +
mov eax ebx +
call sub_4675C0  +
lea edx [eax+esi] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
cmovnz eax ecx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] 1 +
mov [esp+3Ch+var_1C] 0 +
lea edx [eax+1] +
mov [esp+3Ch+var_10] edx +
mov byte ptr [eax] 41h +
mov edx [esp+3Ch+var_1C] +
mov eax ebp +
call sub_4675C0  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jnz loc_467760  +
mov eax [esp+3Ch+var_18] +
add [esp+3Ch+var_1C] 1 +
add [esp+3Ch+var_10] eax +
add [esp+3Ch+var_14] eax +
cmp [esp+3Ch+var_1C] 2 +
jnz loc_467719  +
mov eax [esp+3Ch+var_14] +
cmp eax [esp+3Ch+arg_8] +
jnz loc_46789A  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_1C] +
mov edi [ebp+4] +
test eax eax +
jz loc_46787E  +
mov ebx 4 +
mov esi offset aGnu_0 +
mov eax [edi+30h] +
mov edi [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_38] edi +
lea edi [edi+4] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp-10h+arg_4] ebx +
mov [esp-10h+arg_0] esi +
lea esi [edi+ebx] +
mov [esp+0] edi +
call memcpy  +
mov byte ptr [esi] 1 +
mov eax [ebp+4] +
mov edx [eax+30h] +
lea eax [esi+1] +
mov [esp-10h+arg_0] eax +
mov eax [esp+24h] +
sub eax 4 +
sub eax ebx +
mov ebx 2 +
mov [esp+0] eax +
call edx  +
lea eax [esi+5] +
mov edx [ebp+0A0h] +
mov [esp+18h] eax +
imul eax [esp+20h] +
lea eax [edx+eax+250h] +
mov [esp+1Ch] eax +
mov eax [ebp+4] +
mov edi ebx +
mov eax [eax+1B0h] +
mov eax [eax+194h] +
test eax eax +
jz loc_467802  +
mov [esp+0] ebx +
call eax  +
mov edi eax +
mov ecx [esp+1Ch] +
lea eax [edi+edi*2] +
lea esi [ecx+eax*4] +
mov eax esi +
call sub_467420  +
test eax eax +
jnz loc_467828  +
mov eax [esp+18h] +
mov ecx esi +
mov edx edi +
call sub_4674B0  +
mov [esp+18h] eax +
add ebx 1 +
cmp ebx 47h +
jnz loc_4677E6  +
mov eax [ebp+0A0h] +
mov edx [esp+20h] +
mov ebx [eax+edx*4+8F8h] +
test ebx ebx +
jz loc_46772C  +
mov edi [esp+18h] +
mov [esp+50h] ebp +
lea ebp [ebx+8] +
mov esi [ebx+4] +
mov eax ebp +
call sub_467420  +
test eax eax +
jnz loc_46786F  +
mov eax edi +
mov ecx ebp +
mov edx esi +
call sub_4674B0  +
mov edi eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_467851  +
mov ebp [esp+50h] +
jmp loc_46772C  +
mov eax [edi+1B0h] +
mov esi [eax+184h] +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea ebx [eax+1] +
jmp loc_467779  +
mov [esp+3Ch+var_34] offset aBfd_elf_set_ob +
mov [esp+3Ch+var_38] 0E1h +
mov [esp+3Ch+var_3C] offset a____Binutil_28 +
call sub_420BD0  +
lea esi [esi+0] +
lea edi [edi+0] +
mov ecx [esp+3Ch+var_30] +
cmp ecx 46h +
jbe loc_467900  +
mov eax [esp+3Ch+var_38] +
mov edx [esp+3Ch+var_34] +
mov eax [eax+0A0h] +
mov eax [eax+edx*4+8F8h] +
test eax eax +
jnz loc_4678F2  +
jmp loc_467920  +
cmp ecx edx +
jb loc_467920  +
mov eax [eax] +
test eax eax +
lea esi [esi+0] +
jz locret_467923  +
mov edx [eax+4] +
cmp edx ecx +
jnz loc_4678E4  +
mov eax [eax+0Ch] +
retn   +
lea edx [ecx+ecx*2] +
mov ecx [esp+3Ch+var_38] +
imul eax [esp+3Ch+var_34] +
lea eax [eax+edx*4] +
add eax [ecx+0A0h] +
mov eax [eax+254h] +
retn   +
xor eax eax +
retn   +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_425850  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ecx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_8] +
test eax eax +
jz loc_4679C0  +
cmp eax 1 +
jnz loc_4679A0  +
cmp edx 20h +
jz loc_4679D8  +
and edx 1 +
cmp edx 1 +
sbb eax eax +
add eax 2 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset a_bfd_elf_obj_a +
mov [esp+1Ch+var_18] 1A8h +
mov [esp+1Ch+var_1C] offset a____Binutil_28 +
call sub_420BD0  +
lea esi [esi+0] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+18Ch] +
mov [esp+1Ch+arg_0] edx +
add esp 1Ch +
jmp eax  +
mov eax 3 +
jmp loc_467998  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_467A30  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_467970  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esi+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_467550  +
mov esi eax +
jmp loc_467A0E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_467AA0  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_467970  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_467930  +
mov [esi+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_467550  +
mov esi eax +
jmp loc_467A6E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp esi 46h +
ja loc_467B12  +
imul eax ebp +
lea edx [esi+esi*2] +
lea ebx [eax+edx*4+250h] +
add ebx [edi+0A0h] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_467970  +
mov [ebx] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebx+4] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_467930  +
mov [ebx+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov edx ebp +
mov eax edi +
call sub_467550  +
mov ebx eax +
jmp loc_467ADE  +
***
jmp sub_467B30  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_467B50  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_467B48  +
mov [esp+2Ch+var_10] 0 +
mov eax [esp+2Ch+arg_0] +
imul edx [esp+2Ch+var_10] +
mov ebx [eax+0A0h] +
add edx 268h +
add ebx edx +
add edx [esi+0A0h] +
lea ebp [ebx+33Ch] +
mov edi edx +
jmp loc_467B9A  +
add ebx 0Ch +
add edi 0Ch +
cmp ebx ebp +
jz loc_467BC9  +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+4] +
mov [edi+4] eax +
mov eax [ebx+8] +
test eax eax +
jz loc_467B90  +
cmp byte ptr [eax] 0 +
jz loc_467B90  +
mov [esp+2Ch+var_28] eax +
add ebx 0Ch +
add edi 0Ch +
mov [esp+2Ch+var_2C] esi +
call sub_467930  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_467B9A  +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+var_10] +
mov eax [eax+0A0h] +
mov ebx [eax+ecx*4+8F8h] +
test ebx ebx +
jz loc_467C37  +
mov eax [ebx+8] +
and eax 3 +
cmp eax 2 +
jz loc_467C13  +
cmp eax 3 +
jz loc_467C70  +
cmp eax 1 +
jz loc_467C50  +
mov [esp+2Ch+var_24] offset a_bfd_elf_copy_ +
mov [esp+2Ch+var_28] 185h +
mov [esp+2Ch+var_2C] offset a____Binutil_28 +
call sub_420BD0  +
mov eax [ebx+4] +
mov edx [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_467A40  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_467BE2  +
add [esp+2Ch+var_10] 1 +
cmp [esp+2Ch+var_10] 2 +
jz loc_467B48  +
jmp loc_467B61  +
mov eax [ebx+4] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_4679E0  +
jmp loc_467C31  +
mov eax [ebx+4] +
mov ecx [ebx+10h] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_467AB0  +
jmp loc_467C31  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_467CC0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_5C] eax +
call sub_42B400  +
test eax eax +
mov ebp eax +
jz loc_467CB2  +
mov eax [ebx+2Ch] +
mov edx [ebx+18h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_41EF20  +
test eax eax +
jz loc_467D20  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [ebp+0] 41h +
mov edx [ebx+18h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov ecx [ecx+184h] +
mov [esp+5Ch+var_30] ecx +
jz loc_467D30  +
mov [esp+5Ch+var_5C] ebp +
call free  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
sub esi 1 +
mov [esp+5Ch+var_28] esi +
jz loc_467D20  +
add edx ebp +
lea ecx [edx-4] +
lea ebx [ebp+1] +
cmp ebx ecx +
mov [esp+5Ch+var_3C] edx +
mov [esp+5Ch+var_34] ecx +
jnb loc_467D20  +
mov [esp+5Ch+var_20] ebp +
mov ebp [esp+5Ch+arg_0] +
mov edi ebx +
mov eax [eax+28h] +
lea ebx [edi+4] +
mov [esp+5Ch+var_5C] edi +
call eax  +
test eax eax +
jz loc_468018  +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] ebx +
cmp ecx eax +
cmovbe eax ecx +
mov [esp+5Ch+var_24] eax +
sub eax 4 +
mov [esp+5Ch+var_58] eax +
mov esi eax +
mov [esp+5Ch+var_38] eax +
call sub_48C620  +
lea edx [eax+1] +
cmp edx esi +
jnb loc_468018  +
test edx edx +
jz loc_468018  +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_467FE0  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_40] edx +
call strcmp  +
mov edx [esp+5Ch+var_40] +
test eax eax +
jnz loc_467FE0  +
mov [esp+5Ch+var_40] 0 +
mov eax [esp+5Ch+var_38] +
lea edi [ebx+edx] +
sub eax edx +
mov [esp+5Ch+var_38] eax +
jz loc_467F00  +
cmp [esp+5Ch+var_3C] edi +
jbe loc_467F00  +
mov ebx edi +
mov eax [esp+5Ch+var_3C] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] eax +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
call sub_42BFC0  +
mov edi [esp+5Ch+var_10] +
add edi ebx +
cmp edi [esp+5Ch+var_34] +
mov esi eax +
jnb loc_468010  +
mov eax [ebp+4] +
mov eax [eax+28h] +
mov [esp+5Ch+var_5C] edi +
add edi 4 +
call eax  +
test eax eax +
jz loc_467F00  +
mov ecx [esp+5Ch+var_38] +
mov ebx 0FFFFFFFCh +
cmp eax ecx +
cmova eax ecx +
sub ebx [esp+5Ch+var_10] +
mov [esp+5Ch+var_2C] eax +
add ebx eax +
add ebx edi +
cmp esi 1 +
jnz loc_467EE2  +
mov eax [esp+5Ch+var_3C] +
cmp ebx eax +
cmova ebx eax +
cmp ebx edi +
jbe loc_467EE0  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_42BFC0  +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
mov esi eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_467970  +
and eax 3 +
cmp eax 2 +
jz loc_467FB2  +
cmp eax 3 +
jz loc_467F61  +
cmp eax 1 +
jz loc_467F20  +
mov [esp+5Ch+var_54] offset a_bfd_elf_parse +
mov [esp+5Ch+var_58] 21Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_28 +
call sub_420BD0  +
lea esi [esi+0] +
mov ebx edi +
mov eax [esp+5Ch+var_2C] +
sub [esp+5Ch+var_38] eax +
cmp ebx [esp+5Ch+var_3C] +
jnb loc_467EFC  +
mov eax [esp+5Ch+var_38] +
test eax eax +
jnz loc_467DF0  +
mov edi ebx +
nop   +
mov eax [esp+5Ch+var_24] +
sub [esp+5Ch+var_28] eax +
jz loc_468018  +
cmp edi [esp+5Ch+var_34] +
jnb loc_468018  +
mov eax [ebp+4] +
jmp loc_467D59  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_42BFC0  +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_4679E0  +
jmp loc_467E68  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_42BFC0  +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_467AB0  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_467E68  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_50] edi +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_467A40  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_467E68  +
mov edi offset aGnu_0 +
mov ecx 4 +
mov esi ebx +
cmps   +
jnz loc_468000  +
mov [esp+5Ch+var_40] 1 +
jmp loc_467DD1  +
mov edi [esp+5Ch+var_38] +
add edi ebx +
jmp loc_467F00  +
add edi 4 +
jmp loc_467F00  +
mov ebp [esp+5Ch+var_20] +
jmp loc_467D20  +
***
jmp loc_468030  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov dword ptr [esp+24h] 2 +
mov eax [eax+0A0h] +
lea ebx [eax+3D0h] +
mov eax [esp+54h] +
mov ebp [eax+0A0h] +
add ebp 3D0h +
mov edx [ebx+4] +
test edx edx +
jnz loc_468091  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_46813A  +
add ebx 354h +
add ebp 354h +
sub dword ptr [esp+24h] 1 +
jnz loc_46805F  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [ebx+8] +
mov edi offset aGnu_0 +
mov ecx 4 +
mov [esp+28h] esi +
cmps   +
jnz loc_468111  +
mov ecx [ebp+4] +
cmp edx ecx +
jnz loc_468135  +
mov esi [ebp+8] +
mov eax [esp+28h] +
mov [esp+2Ch] edx +
mov [esp+4] esi +
mov [esp] eax +
call strcmp  +
mov edx [esp+2Ch] +
test eax eax +
jz loc_468071  +
mov ecx edx +
mov edi [esp+28h] +
mov eax offset unk_4B3F87 +
test esi esi +
cmovz esi eax +
mov [esp+14h] esi +
mov [esp+10h] ecx +
test edi edi +
cmovnz eax edi +
mov [esp+0Ch] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov dword ptr [esp] offset aErrorBObjectTa +
mov [esp+4] eax +
call off_492AE8  +
xor eax eax +
jmp loc_468089  +
***
mov eax [esp+28h] +
mov dword ptr [esp] offset aErrorBObjectHa +
mov [esp+8] eax +
mov eax [esp+50h] +
mov [esp+4] eax +
call off_492AE8  +
xor eax eax +
jmp loc_468089  +
***
mov esi [ebp+8] +
jmp loc_4680D2  +
***
mov eax [ebx+8] +
mov esi [ebp+8] +
mov [esp+28h] eax +
jmp loc_4680D2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esp+34h] +
mov edx [esp+38h] +
mov edi [esi+0A0h] +
mov ebx [eax+0A0h] +
lea ecx [edx+edx*2] +
shl ecx 2 +
add edi 250h +
lea ebx [ebx+ecx+250h] +
add edi ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_468192  +
mov ebp [ebx+8] +
test ebp ebp +
jz loc_468202  +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+198h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
mov esi eax +
mov eax [ebx+4] +
cmp [edi+4] eax +
jz loc_4681D0  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp [ebx+8] +
mov eax [edi+8] +
test ebp ebp +
setz cl  +
test eax eax +
mov edi ecx +
setz cl  +
mov edx edi +
cmp dl cl +
jnz loc_4681B4  +
test eax eax +
jz loc_4681C2  +
test ebp ebp +
jz loc_4681C2  +
mov [esp+4] ebp +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_4681B4  +
jmp loc_4681C2  +
***
mov eax esi +
mov esi [edi+4] +
test esi esi +
jnz loc_468192  +
mov ecx [edi+8] +
mov esi 1 +
test ecx ecx +
jnz loc_468192  +
jmp loc_4681C2  +
***
mov eax [esi+4] +
test ebx ebx +
mov edi eax +
jz loc_46826D  +
mov edi [ebx+4] +
jmp loc_468267  +
***
mov edi [ebx+4] +
mov ebx [ebx] +
mov eax [esp+34h] +
mov [ecx+8F8h] ebx +
jmp loc_468273  +
***
mov eax [ebx+0Ch] +
cmp [esi+0Ch] eax +
jnz loc_4682C3  +
mov edx [ebx+10h] +
mov eax [esi+10h] +
test edx edx +
setz byte ptr [esp+8]  +
test eax eax +
mov [esp+0Ch] edx +
setz dl  +
cmp [esp+8] dl +
jnz loc_4682C3  +
test eax eax +
jz loc_468319  +
mov edx [esp+0Ch] +
test edx edx +
jz loc_468319  +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+8] ecx +
call strcmp  +
mov ecx [esp+8] +
test eax eax +
jnz loc_4682C3  +
mov ebx [ebx] +
mov esi [esi] +
mov eax [esp+34h] +
jmp loc_468273  +
***
push edi  +
mov ecx 20h +
push esi  +
mov edi eax +
push ebx  +
mov esi edx +
sub esp 1Ch +
test dl 1 +
mov eax edx +
jnz loc_4684B7  +
test al 2 +
jnz loc_4684C7  +
mov ebx ecx +
xor edx edx +
and ebx 0FFFFFFFCh +
mov dword ptr [eax+edx] 0 +
add edx 4 +
cmp edx ebx +
jb loc_46835C  +
add eax edx +
test cl 2 +
jz loc_46837A  +
xor ebx ebx +
add eax 2 +
mov [eax-2] bx +
and ecx 1 +
jz loc_468382  +
mov byte ptr [eax] 0 +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ebp +
call eax  +
mov edx eax +
mov [esi] eax +
xor eax eax +
test edx edx +
jz loc_4683AD  +
lea ecx [ebp+edx+0] +
cmp [esp+28h+arg_0] ecx +
jbe loc_4683AD  +
cmp edx 5 +
ja loc_4683B5  +
xor edx edx +
mov al 1 +
mov [esi+1Ch] dx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
lea edx [ebp+4] +
lea ebx [ebp+6] +
mov eax [eax+34h] +
mov [esp+28h+var_28] edx +
call eax  +
mov [esi+1Ch] ax +
lea esi [esi+0] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jnb loc_468426  +
mov eax [edi] +
mov eax [eax+34h] +
mov [esp+28h+var_28] ebx +
call eax  +
lea ecx [ebx+2] +
mov edx eax +
and edx 0Fh +
cmp edx 8 +
ja loc_4684B0  +
jmp ds:off_4B4098[edx*4]  +
cmp ax 38h +
jz loc_4684D8  +
mov [esp+28h+var_28] ecx +
mov [esp+28h+var_1C] ecx +
call strlen  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+1] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jb loc_4683D8  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 0Ah +
jmp loc_4683D0  +
add ebx 4 +
jmp loc_4683D0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+4] +
jmp loc_4683D0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+34h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+2] +
jmp loc_4683D0  +
cmp ax 12h +
jz loc_4684F0  +
cmp ax 106h +
jz loc_468500  +
add ebx 6 +
jmp loc_4683D0  +
cmp ax 111h +
jz loc_4684E0  +
cmp ax 121h +
jnz loc_46848C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+0Ch] eax +
jmp loc_46848C  +
mov ebx ecx +
jmp loc_4683D0  +
lea eax [edx+1] +
mov cl 1Fh +
test al 2 +
mov byte ptr [edx] 0 +
jz loc_468355  +
xor edx edx +
add eax 2 +
mov [eax-2] dx +
sub ecx 2 +
jmp loc_468355  +
mov [esi+14h] ecx +
jmp loc_46840A  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+8] eax +
jmp loc_46848C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+4] eax +
jmp loc_46848C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov dword ptr [esi+18h] 1 +
mov [esi+10h] eax +
jmp loc_46848C  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
cmp [edx+8] ecx +
ja loc_468535  +
cmp ecx [edx+0Ch] +
jb loc_468540  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax [edx+10h] +
test eax eax +
jz loc_468537  +
mov ecx [edx+20h] +
test ecx ecx +
jz loc_4685D4  +
mov eax [esi+24h] +
test eax eax +
jz loc_4686D0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_468589  +
mov edi [esi+20h] +
mov edx 1 +
mov eax edi +
mov ecx eax +
sub ecx edi +
cmp ebx [eax] +
jb loc_46857D  +
cmp ebx [eax+8] +
jb loc_4685B7  +
mov ecx edx +
add eax 8 +
add edx 1 +
cmp ebp ecx +
ja loc_468570  +
xor eax eax +
mov edx [esi+24h] +
test edx edx +
jnz loc_46859A  +
jmp loc_468537  +
mov edx [edx] +
test edx edx +
jz loc_468537  +
cmp ebx [edx+8] +
lea esi [esi+0] +
jb loc_468594  +
cmp ebx [edx+0Ch] +
jnb loc_468594  +
mov eax [esp+50h+arg_4] +
mov edx [edx+4] +
mov [eax] edx +
mov eax 1 +
jmp loc_468537  +
mov edx [esi+4] +
mov eax [esp+50h+arg_0] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [eax+ecx+4] +
mov eax [esp+50h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_46858B  +
mov eax [edi+14h] +
test eax eax +
jz loc_468770  +
add eax [esi+14h] +
cmp eax [edi+18h] +
mov ebp eax +
jnb loc_468554  +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebp +
call eax  +
lea ecx [ebp+4] +
add eax ebp +
mov [esp+50h+var_40] eax +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ecx +
call eax  +
lea ecx [ebp+8] +
mov edx 66666667h +
mov [esp+50h+var_3C] ecx +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+var_40] +
sub eax ecx +
mov ebp eax +
imul  edx +
mov eax [edi] +
sar ebp 1Fh +
sar edx 2 +
sub edx ebp +
mov [esi+1Ch] edx +
shl edx 3 +
mov [esp+50h+var_4C] edx +
mov [esp+50h+var_50] eax +
call sub_425850  +
test eax eax +
mov [esi+20h] eax +
jz loc_468535  +
mov edx [esi+1Ch] +
test edx edx +
jz loc_468554  +
xor ecx ecx +
mov ebp eax +
mov [esp+50h+var_40] esi +
mov esi ecx +
mov [esp+50h+var_34] ebx +
mov ebx [esp+50h+var_3C] +
jmp loc_468673  +
mov ebp [eax+20h] +
mov eax [edi] +
lea edx ds:0[esi*8] +
add esi 1 +
add ebp edx +
mov [esp+50h+var_3C] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebx +
call eax  +
mov edx [esp+50h+var_3C] +
mov [ebp+4] eax +
mov eax [esp+50h+var_40] +
add edx [eax+20h] +
mov eax [edi] +
mov ebp edx +
lea edx [ebx+6] +
add ebx 0Ah +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] edx +
call eax  +
add eax [esp+50h+var_38] +
mov [ebp+0] eax +
mov eax [esp+50h+var_40] +
cmp esi [eax+1Ch] +
jb loc_468670  +
mov esi [esp+50h+var_40] +
mov ebx [esp+50h+var_34] +
jmp loc_468554  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_46855F  +
mov edx [edi+10h] +
cmp ecx edx +
jb loc_468713  +
jmp loc_46855F  +
cmp ax 14h +
jz loc_468737  +
cmp ax 1Dh +
jz loc_468737  +
cmp ax 3 +
jz loc_468737  +
mov ecx [esp+50h+var_2C] +
test ecx ecx +
jz loc_46855F  +
mov edx [edi+10h] +
add ecx [edi+0Ch] +
cmp edx ecx +
jbe loc_46855F  +
mov eax [edi] +
mov [esp+50h+var_50] edx +
lea edx [esp+50h+var_30] +
add eax 4 +
call sub_468330  +
test eax eax +
jz loc_468535  +
movzx eax [esp+50h+var_14] +
cmp ax 6 +
jnz loc_4686E7  +
mov eax [edi] +
mov [esp+50h+var_4C] 10h +
mov [esp+50h+var_50] eax +
call sub_425930  +
test eax eax +
jz loc_468535  +
mov edx [esi+24h] +
mov [eax] edx +
mov edx [esp+50h+var_1C] +
mov [esi+24h] eax +
mov [eax+4] edx +
mov edx [esp+50h+var_28] +
mov [eax+8] edx +
mov edx [esp+50h+var_24] +
mov [eax+0Ch] edx +
jmp loc_4686F9  +
mov eax [edi] +
mov [esp+50h+var_4C] offset a_line_0 +
mov [esp+50h+var_50] eax +
call sub_41E710  +
test eax eax +
jz loc_468535  +
mov ebp [eax+28h] +
test ebp ebp +
jnz loc_468794  +
mov ebp [eax+24h] +
mov ecx [edi+4] +
mov edx [edi] +
mov [esp+50h+var_48] 0 +
mov [esp+50h+var_4C] eax +
mov [esp+50h+var_44] ecx +
mov [esp+50h+var_50] edx +
call sub_46A950  +
test eax eax +
mov [edi+14h] eax +
jz loc_468535  +
add ebp eax +
mov [edi+18h] ebp +
jmp loc_4685DF  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
mov eax [esi+0A0h] +
mov ebx [eax+22Ch] +
mov eax [esp+4Ch+arg_8] +
mov ebp [eax+1Ch] +
mov eax [esp+4Ch+arg_10] +
add ebp [esp+4Ch+arg_C] +
test ebx ebx +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
jz loc_468978  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_468893  +
mov edx [ebx+8] +
test edx edx +
jz loc_46883A  +
cmp ebp [edx+8] +
jb loc_468834  +
cmp ebp [edx+0Ch] +
jb loc_468950  +
mov edx [edx] +
test edx edx +
jnz loc_468826  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
cmp ecx edx +
jnb loc_468893  +
mov [esp+4Ch+var_30] ebp +
jmp loc_46885D  +
mov edx [ebx+10h] +
add ecx [ebx+0Ch] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
jbe loc_468893  +
mov eax [ebx] +
mov [esp+4Ch+var_4C] edx +
lea edx [esp+4Ch+var_2C] +
add eax 4 +
call sub_468330  +
test eax eax +
jz loc_468893  +
cmp [esp+4Ch+var_10] 11h +
mov ecx [esp+4Ch+var_28] +
jz loc_4688A0  +
test ecx ecx +
jnz loc_468850  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
add ecx [esp+4Ch+var_2C] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
ja loc_46885D  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
mov [esp+4Ch+var_48] 28h +
mov [esp+4Ch+var_4C] eax +
call sub_425930  +
test eax eax +
jz loc_468893  +
mov edx [ebx+8] +
mov ecx [esp+4Ch+var_14] +
mov edi [esp+4Ch+var_20] +
mov [eax] edx +
mov [ebx+8] eax +
mov edx [esp+4Ch+var_18] +
mov [eax+10h] ecx +
mov ecx [esp+4Ch+var_1C] +
mov [eax+0Ch] edi +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+14h] ecx +
mov ecx [esp+4Ch+var_28] +
mov [eax+8] edx +
test ecx ecx +
jz loc_4688F5  +
mov esi [ebx+1Ch] +
add esi [esp+4Ch+var_2C] +
cmp esi [ebx+10h] +
jb loc_468940  +
mov dword ptr [eax+18h] 0 +
cmp [esp+4Ch+var_30] edx +
jb loc_46887E  +
cmp [esp+4Ch+var_30] edi +
jnb loc_46887E  +
mov edi [esp+4Ch+arg_18] +
mov edx eax +
mov eax ebx +
mov ebp [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+arg_14] +
mov ecx ebp +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] edi +
call sub_468520  +
jmp loc_468895  +
mov ebp [ebx+0Ch] +
add ebp ecx +
cmp esi ebp +
jz loc_4688F5  +
mov [eax+18h] esi +
jmp loc_4688FC  +
mov eax [esp+4Ch+arg_18] +
mov ecx ebp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_14] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_468520  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov [esp+4Ch+var_48] 20h +
mov [esp+4Ch+var_4C] esi +
call sub_425930  +
test eax eax +
mov ebx eax +
mov [edi+22Ch] eax +
jz loc_468893  +
mov [esp+4Ch+var_48] offset a_debug_2 +
mov [esp+4Ch+var_4C] esi +
call sub_41E710  +
test eax eax +
jz loc_468893  +
mov edi [eax+28h] +
test edi edi +
jnz loc_4689C0  +
mov edi [eax+24h] +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] ecx +
call sub_46A950  +
test eax eax +
mov [ebx+0Ch] eax +
jz loc_468893  +
add edi eax +
mov [ebx+1Ch] eax +
mov eax [esp+4Ch+arg_4] +
mov [ebx+10h] edi +
mov [ebx] esi +
mov [ebx+4] eax +
jmp loc_46881F  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_468A54  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_468A60  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_468A4F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_468A60  +
sub edx 1 +
jnz loc_468A43  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov edx [edx] +
mov ebp [eax+0Ch] +
mov edi [edx+0Ch] +
mov ecx [edx+4] +
mov edx [eax+10h] +
mov ebx [eax+4] +
sub edx 1 +
mov eax edx +
and edx edi +
and eax ebp +
sub eax edx +
test eax eax +
jnz loc_468ADA  +
cmp edi ebp +
mov edx ebp +
cmovbe edx edi +
test edx edx +
jz loc_468AD6  +
lea esi [ebx+ebp-1] +
lea ebx [ecx+edi-1] +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [ebx] +
cmp al cl +
jnz loc_468AE0  +
mov eax edx +
neg eax  +
add esi eax +
add ebx eax +
jmp loc_468AD1  +
movzx eax byte ptr [esi+edx] +
movzx ecx byte ptr [ebx+edx] +
cmp al cl +
jnz loc_468AE0  +
sub edx 1 +
jnz loc_468AC5  +
mov eax ebp +
sub eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
sub eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_468B47  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_42A800  +
test eax eax +
jz loc_468B40  +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_468B34  +
jmp loc_468B00  +
***
jmp sub_468B70  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_10] ecx +
mov ecx [eax+2Ch] +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_18] edx +
test ecx ecx +
jnz loc_468C57  +
mov esi [eax+28h] +
xor ebx ebx +
mov eax edx +
test esi esi +
lea edi [edx+esi] +
jz loc_468D32  +
add eax 1 +
movzx edx byte ptr [eax-1] +
mov ecx edx +
shl ecx 11h +
add edx ecx +
add edx ebx +
mov ebx edx +
shr ebx 2 +
xor ebx edx +
cmp eax edi +
jnz loc_468BA0  +
mov edi [esp+2Ch+var_14] +
xor edx edx +
mov eax ebx +
div  dword ptr [edi+0Ch] +
mov eax [edi] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_468BD7  +
jmp loc_468C21  +
mov edi [edi] +
test edi edi +
jz loc_468C21  +
cmp [edi+8] ebx +
jnz loc_468BD1  +
cmp [edi+0Ch] esi +
jnz loc_468BD1  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] eax +
mov eax [edi+4] +
mov [esp+2Ch+var_2C] eax +
call memcmp  +
test eax eax +
jnz loc_468BD1  +
mov edx [esp+2Ch+var_10] +
mov eax edi +
cmp [edi+10h] edx +
jnb loc_468C4F  +
mov edx [esp+2Ch+arg_0] +
xor eax eax +
test edx edx +
jz loc_468C4F  +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+10h] 0 +
jmp loc_468C29  +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jz loc_468C8A  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call sub_42A2D0  +
test eax eax +
jz loc_468C8A  +
mov [eax+0Ch] esi +
mov esi [esp+2Ch+var_10] +
mov [eax+10h] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_14] +
mov esi [eax+28h] +
cmp esi 1 +
jz loc_468CEA  +
test esi esi +
jnz loc_468C94  +
xor ebp ebp +
xor edx edx +
nop   +
mov eax ebp +
add edx ebp +
shl eax 11h +
imul ebp esi +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
add esi ebp +
jmp loc_468BBB  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
movzx edi byte ptr [eax] +
mov ebx edi +
test bl bl +
jnz loc_468CC1  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ecx 1 +
cmp ecx esi +
jz loc_468C70  +
cmp byte ptr [eax+ecx] 0 +
jz loc_468CB0  +
cmp esi ecx +
jz loc_468C70  +
lea ebx [eax+esi] +
mov ecx edi +
jmp loc_468CCB  +
movzx ecx byte ptr [eax] +
movzx ecx cl +
add eax 1 +
mov edi ecx +
shl edi 11h +
add ecx edi +
add ecx edx +
mov edx ecx +
shr edx 2 +
xor edx ecx +
cmp eax ebx +
jnz loc_468CC8  +
add ebp 1 +
jmp loc_468CA0  +
mov ecx [esp+2Ch+var_18] +
movzx eax byte ptr [ecx] +
test eax eax +
jz loc_468D39  +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
mov ebx eax +
add ebp 1 +
shl ebx 11h +
add eax ebx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ecx+ebp] +
test eax eax +
jnz loc_468D00  +
mov eax ebp +
add edx ebp +
shl eax 11h +
add esi ebp +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
jmp loc_468BBB  +
mov ebx esi +
jmp loc_468BBB  +
xor ebp ebp +
xor ebx ebx +
add esi ebp +
jmp loc_468BBB  +
***
sub esp 18h +
mov [esp+18h+var_18] 1 +
call sub_468B70  +
test eax eax +
mov edx eax +
jz loc_468DA0  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_468D74  +
add esp 18h +
pop ebx  +
retn   +
mov eax [esp+18h+arg_0] +
add dword ptr [ebx+1Ch] 1 +
mov [edx+18h] eax +
mov eax [ebx+20h] +
test eax eax +
jz loc_468D96  +
mov eax [ebx+24h] +
mov [eax+1Ch] edx +
mov [ebx+24h] edx +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [ebx+20h] edx +
jmp loc_468D8C  +
xor eax eax +
jmp loc_468D6F  +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
test ebp ebp +
jz loc_4692E6  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_4692D4  +
mov edx [eax] +
mov ecx [esp+2Ch+arg_8] +
test edx edx +
mov ebp edx +
mov [ecx+4] edx +
mov dword ptr [eax] 0 +
jnz loc_46909E  +
jmp loc_469184  +
mov edi [esp+2Ch+arg_C] +
mov eax [ebp+8] +
test edi edi +
mov dword ptr [eax] 0 +
jz loc_469093  +
mov eax [ebp+4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_469184  +
mov eax [ebp+4] +
mov [esp+2Ch+var_18] eax +
mov eax [eax+14h] +
test ah 80h +
jnz loc_469070  +
mov edi [esp+2Ch+var_18] +
test eax 1000000h +
lea ebx [ebp+14h] +
mov edx [edi+24h] +
mov ecx [edi+40h] +
lea esi [ebp+edx+14h] +
jz loc_469287  +
cmp esi ebx +
jbe loc_469093  +
mov eax 1 +
xor edi edi +
shl eax cl +
mov [esp+2Ch+var_10] eax +
sub eax 1 +
mov [esp+2Ch+var_14] ebp +
mov ebp ebx +
mov [esp+2Ch+var_1C] eax +
mov eax ebx +
sub eax ebp +
lea ecx [eax-1] +
xor ecx eax +
add ecx 1 +
shr ecx 1 +
cmp [esp+2Ch+var_1C] ecx +
jb loc_4690FF  +
test ecx ecx +
jnz loc_469103  +
mov ecx [esp+2Ch+var_10] +
mov eax [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_14] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] edx +
mov edx ebx +
call sub_468D50  +
test eax eax +
jz loc_4692BA  +
mov ecx [esp+2Ch+var_18] +
add ebx [eax+0Ch] +
mov edx [ecx+78h] +
cmp edx 1 +
jz loc_469224  +
cmp esi ebx +
jbe loc_469175  +
test edx edx +
jz loc_469161  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_469213  +
xor eax eax +
jmp loc_46915A  +
cmp byte ptr [ebx+eax] 0 +
jnz loc_469213  +
add eax 1 +
cmp eax edx +
jnz loc_469150  +
test edi edi +
jnz loc_46916F  +
mov eax ebx +
sub eax ebp +
test [esp+2Ch+var_1C] eax +
jz loc_4691E0  +
add ebx edx +
cmp esi ebx +
ja loc_469137  +
mov ebp [esp+2Ch+var_14] +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_46909E  +
mov eax [esp+2Ch+arg_8] +
mov ecx [eax+8] +
mov eax [ecx+20h] +
test eax eax +
jz loc_4692D4  +
mov esi [ecx+2Ch] +
xor edx edx +
xor ebx ebx +
test esi esi +
jz loc_4691C4  +
jmp loc_4692FA  +
mov ebx [eax+10h] +
lea edx [edx+ebx-1] +
neg ebx  +
and edx ebx +
mov ebx ecx +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_46951B  +
mov ecx [eax+18h] +
mov esi [ecx+10h] +
test esi esi +
jnz loc_4691A6  +
test ebx ebx +
jz loc_4691D8  +
mov ebx [ebx+4] +
mov [ebx+24h] edx +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_4691A6  +
mov ecx [esp+2Ch+var_14] +
mov edx ebx +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_468D50  +
test eax eax +
jz loc_4692BA  +
mov eax [esp+2Ch+var_18] +
mov di 1 +
mov edx [eax+78h] +
add ebx edx +
jmp loc_469171  +
cmp esi ebx +
ja loc_4690E7  +
mov ebp [esp+2Ch+var_14] +
jmp loc_469179  +
cmp esi ebx +
jbe loc_469175  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_4690E7  +
mov eax edi +
mov edi [esp+2Ch+var_1C] +
jmp loc_469254  +
add ebx 1 +
cmp ebx esi +
jz loc_469175  +
cmp byte ptr [ebx] 0 +
jnz loc_4692F3  +
test eax eax +
jnz loc_469240  +
mov edx ebx +
sub edx ebp +
test edi edx +
jnz loc_469240  +
mov ecx [esp+2Ch+var_14] +
mov edx offset unk_4B40E7 +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_468D50  +
test eax eax +
jz loc_4692BA  +
mov eax 1 +
jmp loc_469240  +
cmp esi ebx +
jbe loc_469093  +
mov edi [esp+2Ch+arg_8] +
jmp loc_4692A4  +
mov eax [esp+2Ch+var_18] +
add ebx [eax+78h] +
cmp esi ebx +
jbe loc_469093  +
mov eax [edi+8] +
mov ecx 1 +
mov edx ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_468D50  +
test eax eax +
jnz loc_469295  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_4692D4  +
mov edx [eax+8] +
mov dword ptr [edx] 0 +
mov eax [eax] +
test eax eax +
jnz loc_4692C5  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jnz loc_469043  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_4690E7  +
mov eax [ecx+1Ch] +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
call sub_42B400  +
test eax eax +
mov edi eax +
jz loc_469432  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+8] +
mov eax [edx+20h] +
test eax eax +
jz loc_469423  +
mov ebp edi +
xor ecx ecx +
jmp loc_469332  +
mov ebp ebx +
mov esi [eax+10h] +
mov ebx ebp +
test esi esi +
jz loc_46935C  +
mov edx [esp+2Ch+arg_8] +
add ebx 4 +
mov [ebp+0] eax +
mov edx [edx+8] +
mov ebp [edx+28h] +
sub [eax+0Ch] ebp +
cmp esi ecx +
jz loc_46935C  +
test ecx ecx +
mov ecx 0FFFFFFFFh +
cmovz ecx esi +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_469330  +
mov eax ebx +
sub eax edi +
sar eax 2 +
test eax eax +
mov [edx+1Ch] eax +
jz loc_46942A  +
cmp ecx 0FFFFFFFFh +
jz loc_469384  +
cmp [edx+28h] ecx +
mov esi offset sub_468A70 +
jb loc_469389  +
mov esi offset sub_468A00 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edi +
call qsort  +
lea eax [ebx-4] +
mov ebp [ebx-4] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov eax [eax+28h] +
add [ebp+0Ch] eax +
mov [esp+2Ch+var_18] eax +
sub [esp+2Ch+var_1C] 4 +
cmp edi [esp+2Ch+var_1C] +
ja loc_46942A  +
mov eax [esp+2Ch+var_1C] +
mov ebx [eax] +
mov eax [esp+2Ch+var_18] +
mov esi [ebx+10h] +
add eax [ebx+0Ch] +
cmp [ebp+10h] esi +
mov [ebx+0Ch] eax +
jb loc_46941F  +
mov ecx [ebp+0Ch] +
sub esi 1 +
mov edx ecx +
sub edx eax +
test esi edx +
jnz loc_46941F  +
mov esi [ebp+4] +
cmp eax ecx +
mov [esp+2Ch+var_14] esi +
mov esi [ebx+4] +
jnb loc_46941F  +
add edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_46941F  +
mov [ebx+14h] ebp +
mov dword ptr [ebx+10h] 0 +
mov ebx ebp +
mov ebp ebx +
jmp loc_4693BC  +
mov dword ptr [edx+1Ch] 0 +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax [esp+2Ch+arg_8] +
xor edx edx +
mov ebx [eax+8] +
mov eax [ebx+20h] +
mov ecx [eax+18h] +
mov esi [eax+10h] +
test esi esi +
jz loc_469461  +
mov ebp [ecx+10h] +
test ebp ebp +
jz loc_469511  +
lea edx [edx+esi-1] +
neg esi  +
and edx esi +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_469479  +
mov esi [eax+18h] +
cmp ecx esi +
jz loc_469475  +
mov ecx [ecx+4] +
mov [ecx+24h] edx +
mov ecx esi +
jmp loc_469441  +
mov eax [ecx+4] +
mov ecx [eax+40h] +
mov [eax+24h] edx +
test ecx ecx +
jz loc_46949A  +
mov edi 1 +
shl edi cl +
mov ecx edi +
lea edx [edx+edi-1] +
neg ecx  +
and edx ecx +
mov [eax+24h] edx +
mov eax [ebx+20h] +
lea esi [ebx+20h] +
test eax eax +
jnz loc_4694B0  +
jmp loc_4694E4  +
lea esi [eax+1Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4694E4  +
mov edi [eax+10h] +
test edi edi +
jnz loc_4694A6  +
mov ebx [eax+0Ch] +
mov edx [eax+1Ch] +
test ebx ebx +
mov [esi] edx +
jz loc_4694A9  +
mov ecx [eax+14h] +
mov edx [ecx+18h] +
mov [eax+18h] edx +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov edx [ecx+0Ch] +
add edx [ecx+14h] +
sub edx ebx +
mov [eax+14h] edx +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_4694B0  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jnz loc_4694FE  +
jmp loc_4692D4  +
mov eax [eax] +
test eax eax +
jz loc_4692D4  +
mov edx [eax+10h] +
test edx edx +
jnz loc_4694F4  +
mov edx [eax+4] +
or dword ptr [edx+14h] 208000h +
jmp loc_4694F4  +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_469453  +
mov eax [ecx+4] +
mov [eax+24h] edx +
jmp loc_4694E4  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_4] +
test edi edi +
jz loc_469690  +
mov ebx [edi+10h] +
test ebx ebx +
jz loc_4696E7  +
mov ecx [esi+3Ch] +
mov edx [ecx+8Ch] +
mov eax [edx+10h] +
and eax [edx+14h] +
cmp eax 0FFFFFFFFh +
jz loc_4696F4  +
mov [esp+3Ch+var_30] 0 +
mov eax [esi+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_429F00  +
test eax eax +
jnz loc_469690  +
mov ebx [edi+10h] +
mov [esp+3Ch+var_14] 0 +
mov eax [ebx+18h] +
xor edi edi +
mov esi [esi+38h] +
mov [esp+3Ch+var_18] 0 +
mov [esp+3Ch+var_1C] eax +
mov eax [eax+4] +
mov [esp+3Ch+var_10] eax +
mov eax [eax+3Ch] +
mov ecx [eax+40h] +
test ecx ecx +
jnz loc_469750  +
mov ebp [esp+3Ch+var_14] +
xor ecx ecx +
mov [esp+3Ch+var_24] esi +
mov esi ecx +
mov [esp+3Ch+var_20] edi +
lea esi [esi+0] +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jz loc_469668  +
mov ecx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
lea edx [ebp+ecx+0] +
mov [esp+3Ch+var_3C] edx +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
mov ebx [ebx+1Ch] +
add esi edi +
test ebx ebx +
jz loc_4696A0  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jnz loc_4696A0  +
mov eax [ebx+10h] +
mov edi esi +
neg edi  +
sub eax 1 +
and edi eax +
jz loc_4695E0  +
test ebp ebp +
jz loc_469725  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
add eax ebp +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
add esi edi +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jnz loc_4695EA  +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_429DA0  +
cmp edi eax +
jz loc_46960C  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_469690  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov esi [esp+3Ch+var_24] +
mov eax [esp+3Ch+var_10] +
mov eax [eax+24h] +
sub eax ecx +
mov ebx eax +
jz loc_4696D7  +
mov eax [esp+3Ch+var_14] +
test eax eax +
jz loc_46977F  +
add eax esi +
mov edi eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_4696E7  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+30h] +
test byte ptr [ecx+17h] 8 +
mov [esp+3Ch+var_14] eax +
jz loc_469709  +
test eax eax +
jnz loc_4695A4  +
mov [esp+3Ch+var_34] offset a_bfd_write_mer +
mov [esp+3Ch+var_38] 338h +
mov [esp+3Ch+var_3C] offset a____Binutil_20 +
call sub_420BD0  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_429DA0  +
cmp edi eax +
jnz loc_469680  +
add esi edi +
jmp loc_46965E  +
mov eax 1 +
shl eax cl +
mov [esp+3Ch+var_3C] eax +
call sub_42B590  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_469690  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jz loc_4695CD  +
xor ecx ecx +
jmp loc_4696A6  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_429DA0  +
cmp ebx eax +
jnz loc_469680  +
jmp loc_4696D7  +
***
push esi  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_4699BC  +
lea esi [esi+0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_42A2B0  +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4699A0  +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_469A10  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_42A800  +
test eax eax +
jz loc_469A04  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_42A750  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4699FF  +
jmp loc_4699E0  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_10] 0 +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_469CA0  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+24h] +
test eax eax +
jz loc_469CA0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
cmp ecx eax +
jnz loc_469CA0  +
mov eax [esp+7Ch+arg_C] +
test byte ptr [eax+14h] 4 +
jnz loc_469CA0  +
mov eax [esp+7Ch+arg_8] +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_469CA0  +
mov eax [esp+7Ch+arg_C] +
cmp dword ptr [eax+3Ch] offset off_492990 +
jz loc_469CA0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_5C] 0 +
mov ebp [eax+20h] +
test ebp ebp +
jz loc_469EE0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov [esp+7Ch+var_64] edx +
shr [esp+7Ch+var_64] 3 +
mov eax [esp+7Ch+var_64] +
lea ebx ds:0FFFFFFFCh[eax*4] +
lea eax [ebx+0Ch] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_425850  +
mov edi eax +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_10] +
test edi edi +
mov [eax] edi +
jz loc_469B8B  +
mov eax [esp+7Ch+arg_8] +
mov esi [esp+7Ch+arg_8] +
mov dword ptr [edi] 0 +
mov eax [eax+24h] +
mov [esi+28h] eax +
lea eax [ebx+4] +
lea ebx [edi+8] +
mov dword ptr [edi+4] 0 +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_3C] eax +
mov [esp+7Ch+var_38] ebx +
call memset  +
lea eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_41F070  +
test eax eax +
jnz loc_469CB0  +
mov eax [esp+7Ch+var_14] +
test eax eax +
jz loc_469B9B  +
mov [esp+7Ch+var_7C] eax +
call free  +
mov edx [esp+7Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_469CA5  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_6C] eax +
call free  +
mov eax [esp+7Ch+var_6C] +
jmp loc_469CA5  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
sub eax [esp+7Ch+var_34] +
mov ebx [esp+7Ch+arg_8] +
mov [esp+7Ch+var_10] 0 +
lea eax [eax+eax*2] +
shl eax 2 +
test eax eax +
mov [ebx+24h] eax +
jnz loc_469C09  +
or dword ptr [ebx+14h] 208000h +
mov eax [esp+7Ch+arg_C] +
or dword ptr [eax+14h] 208000h +
mov eax [esp+7Ch+arg_4] +
mov ebx [eax+20h] +
mov eax [eax] +
mov [esp+7Ch+var_7C] eax +
call sub_42AAD0  +
mov esi [esp+7Ch+var_34] +
test esi esi +
mov [ebx+24h] eax +
jz loc_469CA0  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_425850  +
mov ebx [esp+7Ch+var_48] +
test eax eax +
mov [ebx+4] eax +
jz loc_469B8B  +
mov ebx [esp+7Ch+var_64] +
xor ecx ecx +
xor edx edx +
test ebx ebx +
jz loc_469C88  +
mov esi [esp+7Ch+var_64] +
mov edi [esp+7Ch+var_38] +
mov [eax+edx*4] ecx +
lea ebx [ecx+0Ch] +
cmp dword ptr [edi+edx*4] 0FFFFFFFFh +
cmovz ecx ebx +
add edx 1 +
cmp edx esi +
jnz loc_469C70  +
test ecx ecx +
jnz loc_469CA0  +
mov [esp+7Ch+var_78] 1EAh +
mov [esp+7Ch+var_7C] offset a____Binutil_23 +
call sub_420BA0  +
lea esi [esi+0] +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_41F070  +
test eax eax +
jz loc_469B8B  +
mov edi [esp+7Ch+arg_14] +
test edi edi +
jz loc_46A1E7  +
mov eax [esp+7Ch+arg_14] +
mov eax [eax] +
mov [esp+7Ch+var_58] eax +
mov esi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+var_14] +
mov ebx [esi+24h] +
add ebx eax +
cmp eax ebx +
mov [esp+7Ch+var_6C] ebx +
jnb loc_46A27F  +
lea ebp [eax+0Ch] +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_34] 0 +
mov [esp+7Ch+var_54] 0 +
lea esi [eax+0Ch] +
mov eax [esp+7Ch+arg_4] +
mov ebx esi +
add eax 4 +
mov [esp+7Ch+var_28] eax +
jmp loc_469DA1  +
mov eax [esp+7Ch+arg_0] +
lea edx [ebp-4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+arg_14] +
add eax [esp+7Ch+var_58] +
test ecx ecx +
jz loc_469D6D  +
mov edi [esp+7Ch+arg_14] +
mov [edi] eax +
mov edx [esp+7Ch+var_5C] +
test edx edx +
jnz loc_469EC1  +
mov edi [esp+7Ch+var_58] +
add [esp+7Ch+var_34] 1 +
mov dword ptr [ebx-4] 0FFFFFFFFh +
mov [esp+7Ch+var_54] edi +
mov [esp+7Ch+var_58] eax +
cmp [esp+7Ch+var_6C] ebp +
jbe loc_469BBE  +
add ebp 0Ch +
add ebx 4 +
mov esi [ebx-4] +
lea eax [ebp-0Ch] +
mov [esp+7Ch+var_68] eax +
mov [esp+7Ch+var_60] ebx +
test esi esi +
jnz loc_469D91  +
movzx esi byte ptr [ebp-8] +
mov [esp+7Ch+var_4C] ebp +
test esi esi +
jz loc_469D40  +
mov eax [esp+7Ch+arg_0] +
mov edi [esp+7Ch+var_68] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edi +
call eax  +
mov edi [esp+7Ch+arg_C] +
add eax [esp+7Ch+var_54] +
cmp eax [edi+24h] +
jnb loc_46A1A7  +
add eax [esp+7Ch+var_10] +
mov edi eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_4] +
mov eax [eax] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_42A9A0  +
cmp esi 82h +
mov [ebx-4] eax +
jnz loc_469D91  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_46A268  +
movzx eax byte ptr [ebp+4] +
test eax eax +
jz loc_46A268  +
xor ecx ecx +
xor edx edx +
mov esi ebp +
xor edi edi +
mov [esp+7Ch+var_24] ebx +
mov ebx edx +
mov [esp+7Ch+var_20] ebp +
mov ebp ecx +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_50] 0 +
mov [esp+7Ch+var_30] 0 +
jmp loc_469EA0  +
cmp eax 82h +
jz loc_469F88  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_469F92  +
add esi 0Ch +
cmp [esp+7Ch+var_6C] esi +
jbe loc_46A05B  +
movzx eax byte ptr [esi+4] +
test eax eax +
jz loc_46A05B  +
cmp eax 0C2h +
jz loc_469E87  +
cmp eax 0A2h +
jnz loc_469E70  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_46A05B  +
sub [esp+7Ch+var_44] 1 +
jmp loc_469E87  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_5C] 0 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_54] edi +
jmp loc_469DBF  +
call sub_42A8E0  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx] eax +
jz loc_469B8B  +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] offset unk_4B4164 +
mov [esp+7Ch+var_7C] eax +
call sub_42A9A0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] offset sub_4699D0 +
add eax 4 +
mov [esp+7Ch+var_7C] eax +
call sub_42A280  +
test eax eax +
jz loc_469B8B  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 102108h +
mov [esp+7Ch+var_78] offset a_stabstr_3 +
mov [esp+7Ch+var_7C] eax +
call sub_41EAF0  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx+20h] eax +
jz loc_469B8B  +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_5C] 1 +
mov ecx [eax+24h] +
jmp loc_469AD8  +
add [esp+7Ch+var_44] 1 +
jmp loc_469E87  +
mov eax [esp+7Ch+var_10] +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_2C] eax +
mov eax [edx+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
mov edx [esp+7Ch+var_54] +
add edx eax +
add edx [esp+7Ch+var_2C] +
cmp byte ptr [edx] 0 +
jz loc_469E87  +
mov eax edi +
mov edi [esp+7Ch+var_30] +
mov [esp+7Ch+var_2C] esi +
mov esi edx +
jmp loc_469FF4  +
movzx ecx byte ptr [esi] +
lea edx [eax+1] +
add ebx 1 +
mov [eax] cl +
movzx eax byte ptr [esi] +
movsx ecx al +
add edi ecx +
cmp al 28h +
jz loc_46A020  +
movzx ecx byte ptr [esi+1] +
add esi 1 +
test cl cl +
jz loc_46A04C  +
mov eax edx +
cmp ebp ebx +
ja loc_469FD0  +
mov eax [esp+7Ch+var_50] +
add ebp 8000h +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_42B550  +
test eax eax +
mov [esp+7Ch+var_50] eax +
jz loc_469B8B  +
add eax ebx +
jmp loc_469FD0  +
movzx ecx byte ptr [esi+1] +
lea eax [esi+1] +
movzx esi cl +
test ds:byte_4B8120[esi+esi] 4 +
jz loc_46A047  +
add eax 1 +
movzx ecx byte ptr [eax] +
movzx esi cl +
test ds:byte_4B8120[esi+esi] 4 +
jnz loc_46A034  +
lea esi [eax-1] +
jmp loc_469FEB  +
mov [esp+7Ch+var_30] edi +
mov esi [esp+7Ch+var_2C] +
mov edi edx +
jmp loc_469E87  +
mov eax edi +
mov edx ebx +
mov ebp [esp+7Ch+var_20] +
sub eax [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_24] +
cmp eax edx +
jz loc_46A08B  +
mov [esp+7Ch+var_78] 167h +
mov [esp+7Ch+var_7C] offset a____Binutil_23 +
mov [esp+7Ch+var_44] edx +
call sub_420BA0  +
mov edx [esp+7Ch+var_44] +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_7C] eax +
call sub_42A4E0  +
test eax eax +
mov edi eax +
jz loc_469B8B  +
mov esi [eax+0Ch] +
mov edx [esp+7Ch+var_44] +
test esi esi +
jz loc_46A10D  +
mov [esp+7Ch+var_44] ebx +
mov edi edx +
mov ebx [esp+7Ch+var_30] +
mov [esp+7Ch+var_40] eax +
jmp loc_46A0DE  +
mov esi [esi] +
test esi esi +
jz loc_46A103  +
cmp [esi+4] ebx +
jnz loc_46A0D8  +
cmp [esi+8] edi +
jnz loc_46A0D8  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] eax +
mov eax [esi+0Ch] +
mov [esp+7Ch+var_7C] eax +
call memcmp  +
test eax eax +
jnz loc_46A0D8  +
mov edx edi +
mov ebx [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_40] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_7C] eax +
call sub_425850  +
test eax eax +
jz loc_469B8B  +
mov edx [esp+7Ch+var_30] +
mov ecx [esp+7Ch+var_68] +
sub ecx [esp+7Ch+var_14] +
test esi esi +
mov dword ptr [eax+0Ch] 82h +
mov [eax+8] edx +
mov edx [esp+7Ch+var_48] +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jnz loc_46A1F4  +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] eax +
call sub_42A750  +
test eax eax +
mov esi eax +
jz loc_469B8B  +
mov edx [esp+7Ch+var_30] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_44] +
mov [eax+8] edx +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_42B550  +
mov [esi+0Ch] eax +
mov eax [edi+0Ch] +
mov [esi] eax +
mov [edi+0Ch] esi +
jmp loc_469D91  +
mov eax [esp+7Ch+var_68] +
sub eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] offset aBA0xLxStabsEnt +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] eax +
call off_492AE8  +
mov [esp+7Ch+var_7C] 11h +
call sub_420C50  +
jmp loc_469B8B  +
mov [esp+7Ch+var_58] 0 +
jmp loc_469CF6  +
mov dword ptr [eax+0Ch] 0C2h +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call free  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_469BBE  +
xor edx edx +
mov edi [esp+7Ch+var_6C] +
mov eax [esp+7Ch+var_4C] +
mov esi [esp+7Ch+var_60] +
jmp loc_46A24E  +
cmp ecx 82h +
jz loc_46A263  +
cmp ecx 0C2h +
jz loc_46A240  +
test edx edx +
jnz loc_46A240  +
add [esp+7Ch+var_34] 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add eax 0Ch +
add esi 4 +
cmp edi eax +
jbe loc_469D9B  +
movzx ecx byte ptr [eax+4] +
cmp ecx 0A2h +
jnz loc_46A221  +
test edx edx +
jz loc_46A28C  +
sub edx 1 +
jmp loc_46A240  +
add edx 1 +
jmp loc_46A240  +
mov [esp+7Ch+var_50] 0 +
xor edx edx +
mov [esp+7Ch+var_30] 0 +
jmp loc_46A08B  +
mov [esp+7Ch+var_34] 0 +
jmp loc_469BC2  +
mov dword ptr [esi] 0FFFFFFFFh +
add [esp+7Ch+var_34] 1 +
jmp loc_469D9B  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_46A440  +
mov eax ecx +
mov esi 0AAAAAAABh +
mul  esi +
mov esi edx +
shr esi 3 +
lea eax [esi+esi*2] +
shl eax 2 +
sub ecx eax +
mov esi ecx +
jnz loc_46A440  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_46A2EE  +
cmp eax offset off_492990 +
jz loc_46A440  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_46A440  +
mov eax [edi+28h] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_28] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_41F070  +
test eax eax +
jz loc_46A430  +
mov ebx [esp+3Ch+var_10] +
mov edx [edi+28h] +
mov eax [esp+3Ch+arg_8] +
add edx ebx +
add eax 8 +
cmp ebx edx +
mov [esp+3Ch+var_20] eax +
jnb loc_46A51E  +
xor ecx ecx +
mov esi eax +
mov [esp+3Ch+arg_4] edi +
mov ebp 0FFFFFFFFh +
mov edi ecx +
jmp loc_46A365  +
cmp ebp 0FFFFFFFFh +
jz loc_46A450  +
xor ebp ebp +
add ebx 0Ch +
add esi 4 +
cmp edx ebx +
jbe loc_46A394  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_46A35B  +
movzx eax byte ptr [ebx+4] +
cmp eax 24h +
jz loc_46A492  +
cmp ebp 1 +
jnz loc_46A350  +
add ebx 0Ch +
add edi 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add esi 4 +
cmp edx ebx +
mov ebp 1 +
ja loc_46A365  +
mov ecx edi +
mov ebx [esp+3Ch+var_10] +
mov edi [esp+3Ch+arg_4] +
lea esi [ecx+ecx*2] +
shl esi 2 +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_24] ecx +
call free  +
mov ecx [esp+3Ch+var_24] +
sub [edi+24h] esi +
mov [esp+3Ch+var_10] 0 +
jnz loc_46A3C8  +
or dword ptr [edi+14h] 208000h +
test ecx ecx +
jz loc_46A41D  +
mov eax [esp+3Ch+var_28] +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [esp+3Ch+arg_8] +
mov edi [eax+4] +
shr edx 3 +
test edi edi +
jz loc_46A525  +
xor ebx ebx +
xor eax eax +
mov ebp [esp+3Ch+var_20] +
test edx edx +
jz loc_46A4D0  +
lea esi [esi+0] +
mov [edi+eax*4] ebx +
lea esi [ebx+0Ch] +
cmp dword ptr [ebp+eax*4+0] 0FFFFFFFFh +
cmovz ebx esi +
add eax 1 +
cmp eax edx +
jnz loc_46A400  +
test ebx ebx +
jz loc_46A4D0  +
xor eax eax +
test ecx ecx +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_46A440  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 28h +
jz loc_46A45E  +
cmp eax 26h +
jnz loc_46A35B  +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_46A35B  +
mov dword ptr [esi] 0FFFFFFFFh +
add edi 1 +
jmp loc_46A35B  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jnz loc_46A4F1  +
test ebp ebp +
jz loc_46A4C4  +
add edi 1 +
mov ebp 0FFFFFFFFh +
mov dword ptr [esi] 0FFFFFFFFh +
jmp loc_46A35B  +
mov ebp 0FFFFFFFFh +
jmp loc_46A35B  +
mov [esp+3Ch+var_38] 284h +
mov [esp+3Ch+var_3C] offset a____Binutil_23 +
mov [esp+3Ch+var_28] ecx +
call sub_420BA0  +
mov ecx [esp+3Ch+var_28] +
jmp loc_46A41D  +
mov eax [esp+3Ch+arg_10] +
xor ebp ebp +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_46A35B  +
jmp loc_46A37C  +
xor ecx ecx +
jmp loc_46A3A4  +
lea eax ds:0[edx*4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edx +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_425850  +
mov edx [esp+3Ch+arg_8] +
test eax eax +
mov [edx+4] eax +
jz loc_46A430  +
mov edi eax +
mov ecx [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_28] +
jmp loc_46A3E9  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_46A72A  +
mov ebx [edi] +
test ebx ebx +
jz loc_46A5EC  +
mov [esp+2Ch+var_14] edi +
mov esi [esp+2Ch+arg_8] +
jmp loc_46A5C7  +
add eax [esp+2Ch+arg_10] +
mov edx [ebp+4] +
mov edi eax +
mov eax [ebx+8] +
lea ecx [edi+8] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov edx [ebx+0Ch] +
mov [edi+4] dl +
mov ebx [ebx] +
test ebx ebx +
jz loc_46A5E8  +
mov eax [ebx+4] +
cmp eax [esi+28h] +
jb loc_46A5A0  +
mov [esp+2Ch+var_28] 2AAh +
mov [esp+2Ch+var_2C] offset a____Binutil_23 +
call sub_420BA0  +
mov eax [ebx+4] +
jmp loc_46A5A0  +
mov edi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+arg_8] +
add edi 8 +
mov esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_10] +
add eax [ecx+28h] +
mov ebx esi +
cmp esi eax +
mov [esp+2Ch+var_14] eax +
jnb loc_46A726  +
lea esi [esi+0] +
mov eax [edi] +
cmp eax 0FFFFFFFFh +
jz loc_46A6B4  +
cmp esi ebx +
jz loc_46A631  +
mov eax [ebx] +
mov [esi] eax +
mov eax [ebx+4] +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [edi] +
mov edx [ebp+4] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call edx  +
cmp byte ptr [ebx+4] 0 +
jnz loc_46A6B1  +
cmp ebx [esp+2Ch+arg_10] +
jz loc_46A660  +
mov [esp+2Ch+var_28] 2C4h +
mov [esp+2Ch+var_2C] offset a____Binutil_23 +
call sub_420BA0  +
mov eax [ebp+4] +
mov edx [eax+30h] +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] edx +
mov eax [eax] +
mov [esp+2Ch+var_2C] eax +
call sub_42AAD0  +
lea ecx [esi+8] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [eax+3Ch] +
lea eax [esi+6] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov edx [eax+24h] +
mov eax 0AAAAAAABh +
mul  edx +
shr edx 3 +
sub edx 1 +
mov [esp+2Ch+var_2C] edx +
call ecx  +
add esi 0Ch +
add ebx 0Ch +
add edi 4 +
cmp [esp+2Ch+var_14] ebx +
ja loc_46A610  +
sub esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_8] +
cmp [eax+24h] esi +
jz loc_46A6EC  +
mov [esp+2Ch+var_28] 2D0h +
mov [esp+2Ch+var_2C] offset a____Binutil_23 +
call sub_420BA0  +
mov eax [esp+2Ch+arg_8] +
mov esi [eax+24h] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] esi +
mov ecx [esp+2Ch+arg_8] +
mov ecx [ecx+38h] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] ecx +
mov ecx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_24] ecx +
call sub_41EE20  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_46A6C8  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+24h] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] edx +
jmp loc_46A6F7  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov edx [ebx+20h] +
cmp dword ptr [edx+3Ch] offset off_492990 +
jz loc_46A7A2  +
mov eax [ebx] +
mov edi [edx+38h] +
mov [esp+10h+var_10] eax +
call sub_42AAD0  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
add edi eax +
cmp edi [ecx+24h] +
ja loc_46A7E3  +
mov [esp+10h+var_4] 0 +
mov eax [edx+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_8] edx +
call sub_429F00  +
test eax eax +
jz loc_46A7B0  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_42AAE0  +
test eax eax +
jz loc_46A7A0  +
mov eax [ebx] +
add ebx 4 +
mov [esp+10h+var_10] eax +
call sub_42A970  +
mov [esp+10h+var_10] ebx +
call sub_42A2B0  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 2E2h +
mov [esp+10h+var_10] offset a____Binutil_23 +
call sub_420BA0  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
jmp loc_46A779  +
***
push esi  +
push ebx  +
mov ebx [esp+arg_4] +
mov edx [esp+arg_0] +
mov ecx [esp+arg_8] +
test ebx ebx +
jz loc_46A860  +
mov eax [edx+28h] +
cmp ecx eax +
jnb loc_46A850  +
mov esi [ebx+4] +
test esi esi +
jz loc_46A860  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov eax 0FFFFFFFFh +
shr edx 3 +
cmp dword ptr [ebx+edx*4+8] 0FFFFFFFFh +
jz loc_46A84D  +
mov eax ecx +
sub eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
sub ecx eax +
mov eax [edx+24h] +
pop ebx  +
pop esi  +
add eax ecx +
retn   +
***
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov ebx [esp+10Ch+arg_0] +
mov esi [esp+10Ch+arg_4] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_46A9B0  +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_EC] eax +
lea eax [esp+10Ch+var_EC] +
mov [esp+10Ch+var_104] eax +
call sub_421F90  +
mov edx eax +
xor eax eax +
test edx edx +
cmovnz eax [esp+10Ch+var_EC] +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+14h] 4 +
jz loc_46A976  +
lea ebp [esp+10Ch+var_8C] +
xor eax eax +
mov ecx 20h +
mov edi ebp +
stos   +
mov edi [ebx+9Ch] +
lea eax [ebx+9Ch] +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_5C] ebx +
mov [esp+10Ch+var_58] ebx +
mov [esp+10Ch+var_54] eax +
call sub_42E1E0  +
mov [esp+10Ch+var_B4] offset loc_46A870 +
mov [esp+10Ch+var_B0] offset loc_46A880 +
mov [esp+10Ch+var_AC] offset loc_46A890 +
mov [esp+10Ch+var_A8] offset loc_46A8A0 +
mov [esp+10Ch+var_A4] offset loc_46A8B0 +
mov [esp+10Ch+var_70] eax +
lea eax [esp+10Ch+var_C8] +
mov [esp+10Ch+var_74] eax +
xor eax eax +
mov [esp+10Ch+var_C4] offset loc_46A8C0 +
mov [esp+10Ch+var_9C] offset dword_46A8D0 +
mov [esp+eax+10Ch+var_E0] 0 +
add eax 4 +
cmp eax 18h +
jb loc_46AA47  +
mov edx [esp+10Ch+arg_8] +
mov eax [esi+24h] +
mov [esp+10Ch+var_DC] 1 +
mov [esp+10Ch+var_D0] esi +
test edx edx +
mov [esp+10Ch+var_D4] eax +
jz loc_46AB41  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
jz loc_46ABF8  +
mov [esp+10Ch+var_F0] 0 +
lea esi [esp+10Ch+var_E8] +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_108] offset dword_46A8E0 +
mov [esp+10Ch+var_10C] ebx +
call sub_41ED30  +
mov eax [esp+10Ch+arg_C] +
test eax eax +
jz loc_46ABA9  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_FC] 0 +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
lea eax [esp+10Ch+var_E0] +
mov [esp+10Ch+var_104] eax +
call sub_4213F0  +
test eax eax +
mov [esp+10Ch+var_EC] eax +
jz loc_46AB90  +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_108] offset dword_46A920 +
call sub_41ED30  +
mov eax [esp+10Ch+var_E4] +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_42D4C0  +
mov eax [esp+10Ch+var_EC] +
mov [ebx+9Ch] edi +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+28h] eax +
cmovnb eax [esi+28h] +
mov [esp+10Ch+var_10C] eax +
call sub_42B400  +
test eax eax +
mov [esp+10Ch+arg_8] eax +
jz loc_46ABF8  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+arg_8] +
jz loc_46ABF0  +
mov [esp+10Ch+var_F0] eax +
jmp loc_46AA9F  +
mov eax [esp+10Ch+var_F0] +
test eax eax +
jz loc_46AB04  +
mov [esp+10Ch+var_10C] eax +
call free  +
jmp loc_46AB04  +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
call sub_42F200  +
mov eax [ebx+4] +
mov eax [eax+104h] +
mov [esp+10Ch+var_10C] ebx +
call eax  +
mov [esp+10Ch+var_10C] eax +
call sub_42B400  +
mov [esp+10Ch+arg_C] eax +
mov eax [ebx+4] +
mov ecx [esp+10Ch+arg_C] +
mov eax [eax+108h] +
mov [esp+10Ch+var_108] ecx +
mov [esp+10Ch+var_10C] ebx +
call eax  +
jmp loc_46AAC6  +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_42D4C0  +
xor eax eax +
mov [ebx+9Ch] edi +
jmp loc_46A9A0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5 +
mov esi [eax] +
mov [esp+10h+var_10+1] eax +
cmp esi 3 +
setbe dl  +
test ecx ecx +
setnz al  +
xor ebx ebx +
and dl al +
mov byte ptr [esp+10h+var_10] dl +
jz loc_46AC78  +
mov edi 4 +
jmp loc_46AC57  +
mov eax edi +
sub eax esi +
cmp eax 3 +
mov esi eax +
setbe al  +
add ebx 1 +
test al al +
jz loc_46AC78  +
cmp ecx ebx +
jbe loc_46AC78  +
movzx edx byte ptr [ebp+ebx+0] +
cmp esi 2 +
sbb eax eax +
not eax  +
cmp dl al +
jz loc_46AC88  +
test dl dl +
jz loc_46AC40  +
movzx eax byte ptr [esp+10h+var_10] +
xor esi esi +
add ebx 1 +
test al al +
jnz loc_46AC53  +
mov eax [esp+10h+var_10+1] +
mov [eax] esi +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
cmp esi 3 +
setbe al  +
jmp loc_46AC4C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax+1Ch] +
mov eax [ebx+34h] +
test eax eax +
jz loc_46ADA1  +
mov esi [ebx+28h] +
test esi esi +
jz loc_46AD15  +
mov edi edx +
sub edi [ebp+10h] +
cmp edi esi +
jnb loc_46AD38  +
mov edx [ebx+30h] +
sub esi edx +
cmp esi edi +
cmova esi edi +
add eax edx +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx edi +
mov [esp+28h+var_24] edx +
call memcpy  +
sub edi esi +
jnz loc_46AD76  +
mov eax [ebx+30h] +
mov edx [ebx+28h] +
add eax esi +
cmp eax edx +
mov [ebx+30h] eax +
jz loc_46AD64  +
mov ecx [ebx+2Ch] +
xor eax eax +
cmp edx ecx +
jbe loc_46AD0D  +
add esi ecx +
mov [ebx+2Ch] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+24h] +
mov edi edx +
mov si 1 +
sub edi [ebp+10h] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+2Ch] 0 +
shl esi cl +
cmp edi esi +
mov [ebx+28h] esi +
jb loc_46ACC7  +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx esi +
mov [esp+28h+var_24] edx +
call memcpy  +
mov eax [ebx+28h] +
mov dword ptr [ebx+30h] 0 +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+2Ch] +
xor eax eax +
mov dword ptr [ebx+30h] 0 +
cmp edx ecx +
ja loc_46AD08  +
jmp loc_46AD0D  +
mov eax [ebp+0Ch] +
mov edx [ebx+34h] +
mov [esp+28h+var_20] edi +
sub eax edi +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call memcpy  +
mov eax [ebx+28h] +
mov [ebx+30h] edi +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+20h] +
mov al 1 +
mov edi [ebp+28h] +
mov [esp+28h+var_20] 1 +
mov ecx [ebx+24h] +
mov [esp+28h+var_1C] edx +
mov [esp+28h+var_28] edi +
shl eax cl +
mov [esp+28h+var_24] eax +
call esi  +
test eax eax +
mov [ebx+34h] eax +
jz loc_46ADD3  +
mov edx [esp+28h+var_1C] +
jmp loc_46ACB7  +
mov eax 1 +
jmp loc_46AD0D  +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_46AE72  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_46AE72  +
mov ecx [eax+8] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+8] 0 +
test ecx ecx +
mov dword ptr [edx+18h] 0 +
jz loc_46AE1C  +
and ecx 1 +
mov [edx+30h] ecx +
lea edx [eax+530h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 8000h +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov [eax+6Ch] edx +
mov [eax+50h] edx +
mov [eax+4Ch] edx +
mov dword ptr [eax+1BC0h] 1 +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
xor eax eax +
retn   +
mov eax 0FFFFFFFEh +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_46AEB0  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_46AEB0  +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
jmp loc_46ADE0  +
mov eax 0FFFFFFFEh +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
test edi edi +
jz loc_46AF40  +
mov esi [edi+1Ch] +
test esi esi +
jz loc_46AF40  +
test ebx ebx +
js loc_46AF31  +
mov ebp ebx +
mov eax ebx +
sar ebp 4 +
and eax 0Fh +
add ebp 1 +
cmp ebx 2Fh +
cmovle ebx eax +
lea eax [ebx-8] +
cmp eax 7 +
ja loc_46AF37  +
mov eax [esi+34h] +
test eax eax +
jz loc_46AF1B  +
cmp ebx [esi+24h] +
jz loc_46AF1B  +
mov ecx [edi+28h] +
mov edx [edi+24h] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
call edx  +
mov dword ptr [esi+34h] 0 +
mov [esi+8] ebp +
mov [esi+24h] ebx +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_46AE80  +
neg ebx  +
xor ebp ebp +
jmp loc_46AEF1  +
test ebx ebx +
jz loc_46AEF9  +
nop   +
lea esi [esi+0] +
add esp 1Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov ebx [esp+10h+arg_0] +
test eax eax +
jz loc_46B010  +
cmp byte ptr [eax] 31h +
jnz loc_46B010  +
cmp [esp+10h+arg_C] 38h +
jnz loc_46B010  +
test ebx ebx +
jz loc_46B057  +
mov eax [ebx+20h] +
mov dword ptr [ebx+18h] 0 +
test eax eax +
jz loc_46B020  +
mov ecx [ebx+24h] +
mov edx [ebx+28h] +
test ecx ecx +
jz loc_46B040  +
mov [esp+10h+var_8] 1BCCh +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
mov esi eax +
jz loc_46B050  +
mov [ebx+1Ch] eax +
mov dword ptr [eax+34h] 0 +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
call sub_46AEC0  +
mov edi eax +
xor eax eax +
test edi edi +
jnz loc_46AFF0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov eax edi +
mov dword ptr [ebx+1Ch] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 0FFFFFFFAh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+24h] +
xor edx edx +
mov eax offset loc_46D5E0 +
mov dword ptr [ebx+20h] offset loc_46D5E0 +
mov dword ptr [ebx+28h] 0 +
test ecx ecx +
jnz loc_46AFA2  +
mov dword ptr [ebx+24h] offset loc_46D600 +
jmp loc_46AFA2  +
mov eax 0FFFFFFFCh +
jmp loc_46AFE3  +
mov eax 0FFFFFFFEh +
jmp loc_46AFE3  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0Fh +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_46AF50  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
test eax eax +
jz loc_46B0F0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_46B0F0  +
test ecx ecx +
js loc_46B0D6  +
cmp ecx 10h +
jg loc_46B0F0  +
mov edi [eax+3Ch] +
lea esi [ecx+edi] +
cmp esi 20h +
ja loc_46B0F0  +
mov edx 1 +
shl edx cl +
mov ecx edi +
sub edx 1 +
and edx [esp+14h] +
mov [eax+3Ch] esi +
shl edx cl +
add [eax+38h] edx +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFEh +
jmp loc_46B0D3  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_0] +
test eax eax +
jz loc_46C800  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_46C800  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+7Ch+var_48] eax +
jz loc_46C800  +
mov eax [esp+7Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_46C490  +
mov eax [eax+4] +
mov [esp+7Ch+var_50] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax] +
cmp eax 0Bh +
jz loc_46B300  +
mov ebx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 0 +
mov ebx [ebx+10h] +
mov esi [edx+3Ch] +
mov ebp [edx+38h] +
mov ecx ebx +
mov [esp+7Ch+var_4C] ebx +
mov ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] ecx +
lea ecx [edx+70h] +
add edx 530h +
mov [esp+7Ch+var_30] ecx +
mov ecx esi +
mov esi ebp +
mov [esp+7Ch+var_2C] edx +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
cmp eax 1Eh +
ja loc_46C800  +
jmp ds:off_4B4390[eax*4]  +
cmp ebx 1Fh +
ja loc_46B1F0  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
nop   +
jmp loc_46B1DA  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_46B1D2  +
mov edx esi +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
mov esi [esp+7Ch+arg_0] +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov [ebx+18h] eax +
mov [esi+30h] eax +
xor esi esi +
mov dword ptr [ebx] 0Ah +
xor ebx ebx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_46CC58  +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_46D6B0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov dword ptr [edx] 0Bh +
mov eax [esp+7Ch+arg_4] +
sub eax 5 +
cmp eax 1 +
jbe loc_46B5A0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+4] +
test eax eax +
jnz loc_46B314  +
cmp ebx 2 +
ja loc_46B2B3  +
test edi edi +
jz loc_46B5A0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
sub edi 1 +
add ebx 8 +
shl eax cl +
add esi eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx esi +
and eax 1 +
shr edx 1 +
mov [ecx+4] eax +
mov eax edx +
and eax 3 +
cmp eax 2 +
jz loc_46C6B7  +
cmp eax 3 +
jz loc_46C93E  +
cmp eax 1 +
jz loc_46C900  +
mov dword ptr [ecx] 0Dh +
mov eax 0Dh +
mov esi edx +
sub ebx 3 +
shr esi 2 +
jmp loc_46B1AE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_46B169  +
mov eax [esp+7Ch+var_58] +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
mov dword ptr [eax] 1Ah +
mov eax 1Ah +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jz loc_46B396  +
cmp ebx edx +
jnb loc_46B371  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
nop   +
lea esi [esi+0] +
jmp loc_46B35A  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_46B352  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add [ecx+44h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 18h +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_46B5A0  +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_54] +
mov ecx [ecx+44h] +
sub eax edx +
cmp eax ecx +
jnb loc_46C510  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
cmp ecx [eax+2Ch] +
ja loc_46C614  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+30h] +
cmp ecx eax +
jbe loc_46C832  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+28h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_40] edx +
sub [esp+7Ch+var_40] ecx +
add [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+40h] +
cmp ecx edx +
cmova ecx edx +
jmp loc_46C523  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax] 13h +
jz loc_46B5A0  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
cmp edi 5 +
ja loc_46C707  +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+4Ch] +
mov dword ptr [eax+1BC4h] 0 +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+54h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_46B4DB  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
mov ebx esi +
mov esi edi +
jmp loc_46B498  +
test esi esi +
jz loc_46C6D2  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub esi 1 +
mov edi [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add ebx eax +
mov eax [esp+7Ch+var_34] +
and eax ebx +
lea eax [edi+eax*4] +
movzx edx byte ptr [eax] +
movzx edi word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_46B490  +
mov word ptr [esp+7Ch+var_28] di +
mov edi esi +
mov esi ebx +
mov ebx ecx +
cmp byte ptr [esp+7Ch+var_40] 0 +
jz loc_46C7A0  +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_46C7A0  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_34] eax +
mov eax 1 +
mov [esp+7Ch+var_24] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_34] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_20] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jb loc_46B598  +
jmp loc_46CB0C  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub edi 1 +
shl eax cl +
movzx ecx byte ptr [esp+7Ch+var_34] +
add esi eax +
mov eax [esp+7Ch+var_20] +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
add edx eax +
cmp edx ebx +
jbe loc_46CB07  +
test edi edi +
jnz loc_46B550  +
lea esi [esi+0] +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_46B780  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jnz loc_46C586  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov [edx+1BC8h] eax +
mov dword ptr [edx] 16h +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+50h] +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+58h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_46B66F  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
mov ebx edi +
mov edi ebp +
jmp loc_46B62C  +
test ebx ebx +
jz loc_46C404  +
add edi 1 +
movzx eax byte ptr [edi-1] +
sub ebx 1 +
mov edx [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_34] +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
movzx ebp word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_46B624  +
mov word ptr [esp+7Ch+var_28] bp +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_46C644  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_20] eax +
mov eax 1 +
mov [esp+7Ch+var_34] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_20] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_24] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_20] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jnb loc_46B732  +
test edi edi +
jz loc_46B5A0  +
mov eax esi +
mov edx [esp+7Ch+var_20] +
mov esi edi +
mov edi eax +
jmp loc_46B6E9  +
test esi esi +
jz loc_46C8CD  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub esi 1 +
shl eax cl +
mov ecx edx +
add edi eax +
mov eax [esp+7Ch+var_24] +
and eax edi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] cl +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov word ptr [esp+7Ch+var_28] cx +
lea ecx [eax+edx] +
cmp ecx ebx +
ja loc_46B6E1  +
mov edx edi +
mov edi esi +
mov esi edx +
mov edx [esp+7Ch+var_20] +
sub ebx [esp+7Ch+var_38] +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add edx [ecx+1BC4h] +
jmp loc_46C64E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Eh +
mov eax 0FFFFFFFCh +
lea esi [esi+0] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 1 +
mov edi ebp +
mov ebp esi +
mov esi eax +
lea esi [esi+0] +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov ecx eax +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov [ecx+4] ebx +
mov edx [esp+7Ch+var_4C] +
mov [ecx] edi +
mov ebx [eax+28h] +
mov [ecx+10h] edx +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
test ebx ebx +
jnz loc_46B7D0  +
mov ebx [esp+7Ch+var_54] +
cmp edx ebx +
jz loc_46B7E8  +
mov eax [eax] +
cmp eax 1Ch +
ja loc_46B7E8  +
cmp eax 19h +
jbe loc_46B7D0  +
cmp [esp+7Ch+arg_4] 4 +
jz loc_46B7E8  +
nop   +
lea esi [esi+0] +
mov edx [esp+7Ch+var_54] +
mov eax [esp+7Ch+arg_0] +
call sub_46ACA0  +
test eax eax +
jnz loc_46B74D  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_54] +
sub esi [eax+10h] +
sub ebx [eax+4] +
add [eax+14h] esi +
add [eax+8] ebx +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+8] +
add [eax+1Ch] esi +
test ecx ecx +
jz loc_46B850  +
test esi esi +
jz loc_46B850  +
mov edx [eax+10h] +
test edx edx +
jz loc_46C4D0  +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_46DBE0  +
mov edi [esp+7Ch+var_58] +
mov [edi+18h] eax +
mov edi [esp+7Ch+arg_0] +
mov [edi+30h] eax +
mov edi [esp+7Ch+var_58] +
cmp dword ptr [edi+4] 1 +
mov edx [edi] +
sbb eax eax +
not eax  +
and eax 40h +
add eax [edi+3Ch] +
cmp edx 0Bh +
jz loc_46C410  +
cmp edx 0Eh +
jnz loc_46C420  +
mov edx 100h +
mov edi [esp+7Ch+arg_0] +
add eax edx +
or esi ebx +
mov [edi+2Ch] eax +
jz loc_46B89D  +
cmp [esp+7Ch+arg_4] 4 +
mov eax [esp+7Ch+var_44] +
jnz loc_46B760  +
mov ebx [esp+7Ch+var_44] +
mov eax 0FFFFFFFBh +
test ebx ebx +
cmovnz eax ebx +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 1Fh +
ja loc_46B8E2  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46B8CC  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_46B8C4  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_46B8F0  +
mov [eax+4] esi +
mov eax [esp+7Ch+var_58] +
test byte ptr [eax+11h] 2 +
jnz loc_46C987  +
mov eax [esp+7Ch+var_58] +
xor esi esi +
xor ebx ebx +
mov dword ptr [eax] 3 +
jmp loc_46B97A  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 0Fh +
test eax eax +
jz loc_46C4F8  +
mov edx [esp+7Ch+var_4C] +
cmp edi eax +
cmovbe eax edi +
cmp eax edx +
cmova eax edx +
test eax eax +
jz loc_46B5A0  +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
sub [esp+7Ch+var_4C] edx +
add [esp+7Ch+var_48] edx +
sub edi edx +
add ebp edx +
sub [eax+40h] edx +
mov eax [eax] +
jmp loc_46B1AE  +
cmp ebx 0Fh +
ja loc_46B9A4  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46B98E  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_46B986  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_46B9BF  +
mov ebx esi +
movzx edx bl +
mov [eax+8] edx +
mov edx esi +
shr edx 8 +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 2 +
mov eax edx +
jnz loc_46C892  +
mov ebx [esp+7Ch+var_58] +
xor esi esi +
mov dword ptr [ebx] 4 +
xor ebx ebx +
test dh 4 +
jnz loc_46C38A  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_46C6CB  +
mov dword ptr [edx+10h] 0 +
xor edx edx +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx] 5 +
jmp loc_46C0DF  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+68h] +
mov [esp+7Ch+var_38] eax +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+60h] +
mov [esp+7Ch+var_28] eax +
add eax [ecx+64h] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_34] +
cmp [esp+7Ch+var_38] eax +
mov eax [esp+7Ch+var_58] +
jnb loc_46CC23  +
mov ecx [eax+54h] +
mov edx [eax+4Ch] +
mov eax 1 +
shl eax cl +
lea eax [eax-1] +
mov [esp+7Ch+var_3C] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx ecx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax cl +
cmp ebx eax +
jnb loc_46BABA  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
mov ebx edx +
jmp loc_46BA88  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_3C] +
and eax esi +
lea eax [ebx+eax*4] +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax dl +
cmp eax ecx +
ja loc_46BA80  +
mov ebx ecx +
mov ecx edx +
cmp word ptr [esp+7Ch+var_40] 0Fh +
jbe loc_46C690  +
cmp word ptr [esp+7Ch+var_40] 10h +
jz loc_46CA93  +
cmp word ptr [esp+7Ch+var_40] 11h +
jz loc_46CB1C  +
lea edx [eax+7] +
cmp ebx edx +
jnb loc_46BB16  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_46BAFD  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_46BAF5  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 7 +
mov edx esi +
and esi 7Fh +
add esi 0Bh +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 7 +
mov eax [esp+7Ch+var_40] +
add eax [esp+7Ch+var_38] +
cmp eax [esp+7Ch+var_34] +
mov edx eax +
mov [esp+7Ch+var_40] eax +
ja loc_46CE79  +
mov word ptr [esp+7Ch+var_3C] cx +
mov eax [esp+7Ch+var_38] +
mov ecx [esp+7Ch+var_58] +
lea eax [ecx+eax*2+70h] +
mov ecx [esp+7Ch+var_30] +
lea edx [ecx+edx*2] +
movzx ecx word ptr [esp+7Ch+var_3C] +
mov [eax] cx +
add eax 2 +
cmp eax edx +
jnz loc_46BB67  +
mov eax [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] eax +
mov [edx+68h] eax +
jmp loc_46BA2D  +
cmp ebx 0Fh +
ja loc_46BBB6  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46BB9E  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_46BB96  +
mov ebx ecx +
mov edx [esp+7Ch+var_58] +
mov eax esi +
cmp al 8 +
mov [edx+10h] esi +
jz loc_46C9FC  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax 1Dh +
mov dword ptr [edx] 1Dh +
jmp loc_46B1B7  +
cmp ebx 0Dh +
ja loc_46BC16  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46BBFE  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Dh +
jbe loc_46BBF6  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
mov edx esi +
mov eax esi +
shr edx 5 +
and eax 1Fh +
and edx 1Fh +
add eax 101h +
add edx 1 +
sub ebx 0Eh +
mov [ecx+64h] edx +
mov [ecx+60h] eax +
mov ecx esi +
shr ecx 0Ah +
and ecx 0Fh +
add ecx 4 +
mov [esp+7Ch+var_40] edx +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_58] +
shr esi 0Eh +
cmp eax 11Eh +
mov [ecx+5Ch] edx +
ja loc_46C810  +
cmp [esp+7Ch+var_40] 1Eh +
ja loc_46C810  +
mov eax [esp+7Ch+var_58] +
xor edx edx +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 11h +
jmp loc_46BCA2  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+5Ch] +
mov ecx edx +
mov [esp+7Ch+var_3C] edx +
mov edx [eax+68h] +
cmp ecx edx +
jbe loc_46BCF8  +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
cmp ecx 2 +
ja loc_46BCC0  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
add [esp+7Ch+var_40] 1 +
sub ecx 3 +
mov ebx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
movzx eax ds:word_4B4C9E[ebx+ebx] +
mov [edx+68h] ebx +
mov ebx esi +
and ebx 7 +
shr esi 3 +
mov [edx+eax*2+70h] bx +
mov eax [esp+7Ch+var_40] +
cmp [esp+7Ch+var_3C] eax +
ja loc_46BCA2  +
mov edx [esp+7Ch+var_40] +
mov ebx ecx +
cmp edx 12h +
mov ecx [esp+7Ch+var_58] +
lea eax dword_4B4CA0[edx+edx] +
ja loc_46BD27  +
movzx edx word ptr [eax] +
add eax 2 +
cmp eax offset unk_4B4CC6 +
mov word ptr [ecx+edx*2+70h] 0 +
jnz loc_46BD08  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+68h] 13h +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_2C] +
mov dword ptr [eax+54h] 7 +
mov [eax+6Ch] edx +
mov [eax+4Ch] edx +
mov edx eax +
add eax 2F0h +
mov [esp+7Ch+var_68] eax +
mov eax edx +
add eax 54h +
mov [esp+7Ch+var_6C] eax +
mov eax edx +
add eax 6Ch +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_74] 13h +
mov [esp+7Ch+var_7C] 0 +
mov [esp+7Ch+var_78] eax +
call sub_46DED0  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_46CC05  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeLen +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
jmp loc_46B921  +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 0FFFFFFFDh +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_46B780  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
jz loc_46B5A0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
sub [esp+7Ch+var_4C] 1 +
mov eax [edx+40h] +
mov [ecx] al +
lea eax [ecx+1] +
mov [esp+7Ch+var_48] eax +
mov eax 14h +
mov dword ptr [edx] 14h +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_46C5F1  +
cmp ebx 1Fh +
ja loc_46BE42  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
nop   +
jmp loc_46BE2A  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_46BE22  +
mov ebx ecx +
mov eax [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
sub eax [esp+7Ch+var_4C] +
add [ecx+14h] eax +
add [edx+1Ch] eax +
test eax eax +
jz loc_46BE96  +
mov ecx edx +
mov edx [edx+10h] +
test edx edx +
jz loc_46CBE3  +
mov edx [ecx+18h] +
mov ecx [esp+7Ch+var_48] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] edx +
sub ecx eax +
mov [esp+7Ch+var_78] ecx +
call sub_46DBE0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx [ecx+10h] +
test edx edx +
jnz loc_46BEC5  +
mov edx esi +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov edx [esp+7Ch+var_58] +
cmp eax [edx+18h] +
jz loc_46C5E2  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectDataC +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_54] eax +
mov eax 1Dh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_46CBC2  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test eax eax +
jz loc_46CBC2  +
cmp ebx 1Fh +
ja loc_46BF52  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
lea esi [esi+0] +
jmp loc_46BF3A  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_46BF32  +
mov ebx ecx +
mov eax [esp+7Ch+var_58] +
cmp [eax+1Ch] esi +
jz loc_46CCC6  +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aIncorrectLengt +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+8] +
test edx edx +
jz loc_46C600  +
cmp ebx 0Fh +
ja loc_46BFC2  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
nop   +
jmp loc_46BFAA  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_46BFA2  +
mov ebx ecx +
test dl 2 +
jz loc_46BFD3  +
cmp esi 8B1Fh +
jz loc_46CCD3  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+10h] 0 +
mov eax [eax+20h] +
test eax eax +
jz loc_46BFEC  +
mov dword ptr [eax+30h] 0FFFFFFFFh +
and edx 1 +
jz loc_46C8DE  +
mov ecx esi +
mov eax esi +
shl ecx 8 +
mov edx 8421085h +
shr eax 8 +
movzx ecx cx +
add ecx eax +
mov eax ecx +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 4 +
mov edx eax +
shl edx 5 +
sub edx eax +
cmp ecx edx +
jnz loc_46C8DE  +
mov eax esi +
and eax 0Fh +
cmp eax 8 +
jz loc_46CD2F  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
cmp ebx 1Fh +
ja loc_46C092  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46C07A  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_46C072  +
mov ebx ecx +
mov edx esi +
movzx eax si +
shr edx 10h +
xor edx 0FFFFh +
cmp eax edx +
jz loc_46CA2A  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidStoredB +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx eax +
and edx 400h +
test edx edx +
jz loc_46C185  +
mov edx [esp+7Ch+var_58] +
mov ecx [edx+40h] +
cmp edi ecx +
mov [esp+7Ch+var_40] ecx +
cmovbe ecx edi +
mov edx ecx +
test edx edx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_40] +
jz loc_46C176  +
mov ecx [esp+7Ch+var_58] +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_46C159  +
mov edx [ecx+10h] +
test edx edx +
mov [esp+7Ch+var_38] edx +
jz loc_46C159  +
mov edx [ecx+18h] +
mov eax [ecx+14h] +
mov ecx [esp+7Ch+var_3C] +
sub eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ebp +
add ecx eax +
mov [esp+7Ch+var_40] ecx +
mov ecx edx +
sub ecx eax +
cmp [esp+7Ch+var_40] edx +
mov edx ecx +
cmovbe edx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+10h] +
test ah 2 +
jnz loc_46C960  +
mov edx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_3C] +
mov ecx [edx+40h] +
sub edi eax +
add ebp eax +
sub ecx eax +
mov [edx+40h] ecx +
test ecx ecx +
jnz loc_46B5A0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov ecx [esp+7Ch+var_58] +
test ah 8 +
mov dword ptr [ecx+40h] 0 +
mov dword ptr [ecx] 6 +
jnz loc_46C1C2  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_46C253  +
mov dword ptr [edx+1Ch] 0 +
jmp loc_46C253  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test ah 8 +
jz loc_46C19B  +
test edi edi +
jz loc_46B5A0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_46C1E8  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_46C21A  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_46C216  +
mov edi [eax+1Ch] +
test edi edi +
jz loc_46C216  +
mov ebx [esi+40h] +
cmp ebx [eax+20h] +
jnb loc_46C216  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_46C1E2  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_46C7D5  +
mov eax [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test eax eax +
jnz loc_46B5A0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx+40h] 0 +
mov dword ptr [edx] 7 +
test ah 10h +
jz loc_46C4B0  +
test edi edi +
jz loc_46B5A0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_46C296  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_46C2C8  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_46C2C4  +
mov edi [eax+24h] +
test edi edi +
jz loc_46C2C4  +
mov ebx [esi+40h] +
cmp ebx [eax+28h] +
jnb loc_46C2C4  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_46C290  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_46C6E0  +
mov ecx [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test ecx ecx +
jnz loc_46B5A0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 8 +
test ah 2 +
jz loc_46C434  +
cmp ebx 0Fh +
ja loc_46C345  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46C32D  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx 0Fh +
jbe loc_46C325  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
movzx edx word ptr [ecx+18h] +
cmp edx esi +
jz loc_46C430  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aHeaderCrcMisma +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 4 +
mov eax edx +
jz loc_46B9E8  +
cmp ebx 0Fh +
ja loc_46C3B0  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46C39A  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_46C396  +
mov eax [esp+7Ch+var_58] +
mov [eax+40h] esi +
mov eax [eax+20h] +
test eax eax +
jz loc_46C3C1  +
mov [eax+14h] esi +
test dh 2 +
jnz loc_46CA4E  +
mov eax edx +
xor ebx ebx +
and edx 400h +
xor esi esi +
jmp loc_46BA00  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_46C264  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_46C30B  +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi ecx +
jmp loc_46B780  +
sub eax 0FFFFFF80h +
xor edx edx +
jmp loc_46B87B  +
cmp edx 13h +
jz loc_46B876  +
xor edx edx +
jmp loc_46B87B  +
xor ebx ebx +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_46C44F  +
sar eax 9 +
and eax 1 +
mov [edx+2Ch] eax +
mov dword ptr [edx+30h] 1 +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_46DBE0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov eax 0Bh +
mov dword ptr [edx] 0Bh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
test eax eax +
jnz loc_46C800  +
mov [esp+7Ch+var_50] 0 +
jmp loc_46B15A  +
mov ecx [esp+7Ch+var_58] +
mov edx [ecx+20h] +
test edx edx +
jz loc_46C301  +
mov dword ptr [edx+24h] 0 +
jmp loc_46C301  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_46D6B0  +
jmp loc_46B83F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_48] +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+40h] +
mov edx ecx +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_3C] ebx +
cmp ecx eax +
cmova ecx eax +
mov eax [esp+7Ch+var_58] +
sub edx ecx +
sub [esp+7Ch+var_4C] ecx +
mov [eax+40h] edx +
mov edx [esp+7Ch+var_48] +
mov eax [esp+7Ch+var_40] +
add ecx edx +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
cmp edx ecx +
mov [edx-1] bl +
jnz loc_46C547  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_48] edx +
mov ebx [esp+7Ch+var_3C] +
mov edx [eax+40h] +
test edx edx +
jz loc_46C572  +
mov eax [eax] +
jmp loc_46B1AE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
mov eax 14h +
jmp loc_46B1B7  +
cmp ebx edx +
jnb loc_46C5B5  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
jmp loc_46C59E  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_46C596  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add eax [ecx+40h] +
mov [ecx+40h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
jmp loc_46B5C6  +
mov esi [esp+7Ch+var_4C] +
xor ebx ebx +
mov eax [edx+8] +
mov [esp+7Ch+var_54] esi +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 1Bh +
jmp loc_46BF07  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_46B1B7  +
mov eax [eax+1BC0h] +
test eax eax +
jz loc_46B3D0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDistanc +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+1BC4h] +
mov ecx eax +
sub ebx eax +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add eax edx +
test byte ptr [esp+7Ch+var_40] 40h +
mov [ecx+1BC4h] eax +
jz loc_46C848  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_0 +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_46B1B7  +
mov edx [esp+7Ch+var_38] +
shr esi cl +
sub ebx eax +
mov ecx [esp+7Ch+var_58] +
mov eax edx +
add eax 1 +
mov [ecx+68h] eax +
mov [esp+7Ch+var_38] eax +
movzx eax word ptr [esp+7Ch+var_40] +
mov [ecx+edx*2+70h] ax +
jmp loc_46BA2D  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 10h +
mov eax 10h +
jmp loc_46B2EE  +
xor edx edx +
jmp loc_46BA00  +
mov edi ebp +
mov ebp ebx +
mov ebx esi +
mov esi ecx +
jmp loc_46B780  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_46C2EA  +
cmp [esp+7Ch+var_4C] 101h +
jbe loc_46B433  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov [eax] ebp +
mov [eax+0Ch] edx +
mov edx [esp+7Ch+var_4C] +
mov [eax+4] edi +
mov [eax+10h] edx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] esi +
mov esi eax +
mov [eax+3Ch] ebx +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_46E430  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+10h] +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+arg_0] +
mov ebp [eax] +
mov edi [eax+4] +
mov eax esi +
mov ebx [eax+3Ch] +
mov eax [eax] +
mov esi [esi+38h] +
cmp eax 0Bh +
jnz loc_46B1AE  +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx+1BC4h] 0FFFFFFFFh +
jmp loc_46B1B7  +
mov edx eax +
mov ecx eax +
sub ebx eax +
movzx eax word ptr [esp+7Ch+var_28] +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
cmp byte ptr [esp+7Ch+var_40] 0 +
mov [ecx+1BC4h] edx +
mov [ecx+40h] eax +
jnz loc_46C869  +
mov dword ptr [ecx] 19h +
mov eax 19h +
jmp loc_46B1B7  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_46C23C  +
mov eax 0FFFFFFFEh +
jmp loc_46B760  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aTooManyLengthO +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax+34h] +
add [esp+7Ch+var_40] eax +
jmp loc_46B3F7  +
mov edx [esp+7Ch+var_40] +
mov ecx [esp+7Ch+var_58] +
movzx eax word ptr [esp+7Ch+var_28] +
and edx 0Fh +
mov [ecx+48h] edx +
mov [ecx+44h] eax +
mov dword ptr [ecx] 17h +
jmp loc_46B339  +
test byte ptr [esp+7Ch+var_40] 20h +
jz loc_46C9CF  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_46B1B7  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov edx [esi+10h] +
mov [esi+18h] eax +
mov eax edx +
jmp loc_46B9D1  +
mov ecx edi +
mov eax ebx +
mov edi ebp +
mov ebx esi +
mov ebp ecx +
mov esi eax +
jmp loc_46B780  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectHeade +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax+4Ch] offset unk_4B44A0 +
mov dword ptr [eax+54h] 9 +
mov dword ptr [eax+50h] offset unk_4B4420 +
mov dword ptr [eax+58h] 5 +
mov dword ptr [eax] 13h +
jz loc_46CE64  +
mov eax 13h +
jmp loc_46B2EE  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBlockTy +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B2EE  +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_3C] +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov ecx [esp+7Ch+var_58] +
mov [ecx+18h] eax +
jmp loc_46C162  +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
mov eax esi +
shr eax 10h +
mov byte ptr [esp+7Ch+var_10+2] al +
mov eax esi +
shr eax 18h +
mov byte ptr [esp+7Ch+var_10+3] al +
mov eax [ebx+18h] +
lea edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov [ebx+18h] eax +
jmp loc_46B8FE  +
test byte ptr [esp+7Ch+var_40] 40h +
jz loc_46CB75  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiteral +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
test esi 0E000h +
jz loc_46CB8E  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownHeaderF +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov ebx [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov [ebx+40h] eax +
mov dword ptr [ebx] 0Eh +
jz loc_46CE57  +
xor ebx ebx +
xor esi esi +
jmp loc_46B917  +
mov ebx [esp+7Ch+var_58] +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
xor esi esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [ebx+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov [ebx+18h] eax +
mov eax [ebx+10h] +
xor ebx ebx +
mov edx eax +
and edx 400h +
jmp loc_46BA00  +
lea edx [eax+2] +
cmp ebx edx +
jnb loc_46CAD1  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_46CAB8  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_46CAB0  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
mov eax [esp+7Ch+var_38] +
shr esi cl +
test eax eax +
jz loc_46CE79  +
mov eax [esp+7Ch+var_58] +
sub ebx 2 +
mov ecx [esp+7Ch+var_38] +
movzx ecx word ptr [eax+ecx*2+6Eh] +
mov eax esi +
and eax 3 +
add eax 3 +
mov [esp+7Ch+var_40] eax +
shr esi 2 +
jmp loc_46BB32  +
mov word ptr [esp+7Ch+var_28] cx +
movzx ecx byte ptr [esp+7Ch+var_34] +
sub ebx [esp+7Ch+var_38] +
shr esi cl +
jmp loc_46C7A2  +
lea edx [eax+3] +
cmp ebx edx +
jnb loc_46CB54  +
test edi edi +
jz loc_46B5A0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_46CB3B  +
test edi edi +
jz loc_46C400  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_46CB33  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 3 +
mov edx esi +
and esi 7 +
add esi 3 +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 3 +
jmp loc_46BB32  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
and edx 0Fh +
mov [eax+48h] edx +
mov dword ptr [eax] 15h +
jmp loc_46B5B7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_46CBA3  +
mov edx esi +
shr edx 8 +
and edx 1 +
mov [eax] edx +
test esi 200h +
jnz loc_46CC90  +
mov eax [esp+7Ch+var_58] +
xor ebx ebx +
xor esi esi +
mov dword ptr [eax] 2 +
jmp loc_46B8B8  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 1 +
mov dword ptr [eax] 1Ch +
jmp loc_46B780  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
mov edx [edx+18h] +
sub ecx eax +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
call sub_46D6B0  +
jmp loc_46BE85  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] 0 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 12h +
jmp loc_46BA1B  +
cmp dword ptr [eax] 1Dh +
jz loc_46BF73  +
cmp word ptr [eax+270h] 0 +
jnz loc_46CDA4  +
mov edx [esp+7Ch+arg_0] +
mov dword ptr [edx+18h] offset aInvalidCodeMis +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov eax ebx +
mov ecx [esp+7Ch+var_48] +
mov ebx edi +
mov edx [esp+7Ch+var_4C] +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax] edi +
mov [eax+4] ebx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
mov eax 2 +
jmp loc_46B760  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov [esi+18h] eax +
jmp loc_46CBAF  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_46CBCC  +
mov [esp+7Ch+var_74] 0 +
xor ebx ebx +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_46DBE0  +
mov esi [esp+7Ch+var_58] +
lea edx [esp+7Ch+var_10] +
mov byte ptr [esp+7Ch+var_10] 1Fh +
mov byte ptr [esp+7Ch+var_10+1] 8Bh +
mov [esi+18h] eax +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_46DBE0  +
mov dword ptr [esi] 1 +
mov [esi+18h] eax +
mov eax 1 +
xor esi esi +
jmp loc_46B1B7  +
mov eax [esp+7Ch+var_58] +
shr esi 4 +
mov ecx esi +
and ecx 0Fh +
add ecx 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_46CE2A  +
mov eax [esp+7Ch+var_58] +
mov [eax+24h] ecx +
mov ebx [esp+7Ch+var_58] +
mov eax 1 +
shl eax cl +
mov [ebx+14h] eax +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_46D6B0  +
mov edx [esp+7Ch+arg_0] +
mov [ebx+18h] eax +
mov [edx+30h] eax +
mov eax esi +
and eax 200h +
cmp eax 1 +
sbb eax eax +
xor esi esi +
and eax 2 +
add eax 9 +
mov [ebx] eax +
xor ebx ebx +
jmp loc_46B1AE  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_2C] +
lea edx [eax+2F0h] +
mov [eax+6Ch] ecx +
mov [eax+4Ch] ecx +
lea ecx [eax+6Ch] +
add eax 54h +
mov dword ptr [eax] 9 +
mov [esp+7Ch+var_3C] edx +
mov [esp+7Ch+var_68] edx +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_40] ecx +
mov ecx [esp+7Ch+var_28] +
mov [esp+7Ch+var_6C] eax +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_74] ecx +
call sub_46DED0  +
mov ecx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_3C] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_46CE96  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidLiter_0 +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
cmp ecx eax +
jbe loc_46CD50  +
mov eax [esp+7Ch+arg_0] +
sub ebx 4 +
mov dword ptr [eax+18h] offset aInvalidWindowS +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_46B780  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
shr ebp 3 +
sub esi 3 +
jmp loc_46B780  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
jmp loc_46BF73  +
mov [esp+7Ch+var_40] ebx +
mov ebx [esp+7Ch+var_58] +
mov eax [ebx+6Ch] +
mov dword ptr [ebx+58h] 6 +
mov [ebx+50h] eax +
mov eax [ebx+64h] +
mov [esp+7Ch+var_68] edx +
mov edx ebx +
add edx 58h +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_74] eax +
mov eax [ebx+60h] +
mov [esp+7Ch+var_7C] 2 +
lea eax [ebx+eax*2+70h] +
mov [esp+7Ch+var_78] eax +
call sub_46DED0  +
mov ebx [esp+7Ch+var_40] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_46B408  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_1 +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_46B1B7  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_46CF60  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_46CF60  +
mov edx [ebx+24h] +
test edx edx +
jz loc_46CF60  +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_46CF43  +
mov eax [ebx+28h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [ebx+24h] +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ecx +
call edx  +
xor eax eax +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_46CF58  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
test ebx ebx +
jz loc_46D020  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_46D020  +
mov eax [esi+8] +
test eax eax +
jnz loc_46CFD8  +
cmp dword ptr [esi] 0Ah +
jz loc_46CFDD  +
mov eax [esp+34h] +
add eax [esp+38h] +
mov edx [esp+38h] +
mov ebp [ebx+0Ch] +
mov edi [ebx+10h] +
mov [ebx+0Ch] eax +
mov eax ebx +
mov dword ptr [ebx+10h] 0 +
call sub_46ACA0  +
mov [ebx+10h] edi +
mov [ebx+0Ch] ebp +
test eax eax +
jnz loc_46D027  +
mov dword ptr [esi+0Ch] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [esi] 0Ah +
jnz loc_46D020  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_46D6B0  +
mov ecx [esp+38h] +
mov [esp+8] ecx +
mov ecx [esp+34h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_46D6B0  +
cmp [esi+18h] eax +
jz loc_46CF9A  +
mov eax 0FFFFFFFDh +
jmp loc_46CFD0  +
***
mov eax 0FFFFFFFEh +
jmp loc_46CFD0  +
***
mov dword ptr [esi] 1Eh +
mov eax 0FFFFFFFCh +
jmp loc_46CFD0  +
***
mov eax [esp+4] +
mov edx [esp+8] +
test eax eax +
jz loc_46D066  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_46D066  +
test byte ptr [eax+8] 2 +
jz loc_46D066  +
mov [eax+20h] edx +
xor eax eax +
mov dword ptr [edx+30h] 0 +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+28h] +
test ebx ebx +
jz loc_46D168  +
mov edi [ebx+1Ch] +
test edi edi +
jz loc_46D168  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_46D142  +
cmp dword ptr [edi] 1Fh +
lea esi [edi+68h] +
jz loc_46D105  +
mov edx [edi+3Ch] +
mov eax [edi+38h] +
mov dword ptr [edi] 1Fh +
mov ecx edx +
and edx 0FFFFFFF8h +
and ecx 7 +
shl eax cl +
cmp edx 7 +
mov [edi+38h] eax +
mov ecx edx +
mov [edi+3Ch] edx +
jbe loc_46D160  +
sub ecx 8 +
lea edx [esp+10h] +
shr ecx 3 +
mov esi edx +
lea ebp [esp+ecx+11h] +
mov [esi] al +
add esi 1 +
shr eax 8 +
cmp esi ebp +
jnz loc_46D0D8  +
add ecx 1 +
mov [edi+38h] eax +
mov dword ptr [edi+3Ch] 0 +
lea esi [edi+68h] +
mov dword ptr [edi+68h] 0 +
mov eax esi +
call sub_46AC10  +
mov ecx [ebx+4] +
mov edx [ebx] +
mov eax esi +
call sub_46AC10  +
sub [ebx+4] eax +
add [ebx] eax +
add eax [ebx+8] +
cmp dword ptr [edi+68h] 4 +
mov esi eax +
mov [ebx+8] eax +
jnz loc_46D153  +
mov ebp [ebx+14h] +
mov [esp] ebx +
call sub_46AE80  +
xor eax eax +
mov [ebx+8] esi +
mov [ebx+14h] ebp +
mov dword ptr [edi] 0Bh +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [edi+3Ch] 7 +
ja loc_46D099  +
mov eax 0FFFFFFFBh +
jmp loc_46D13A  +
***
add esp 14h +
mov eax 0FFFFFFFDh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor ecx ecx +
lea edx [esp+10h] +
jmp loc_46D0F1  +
***
mov eax 0FFFFFFFEh +
jmp loc_46D13A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
test ebx ebx +
jz loc_46D3D0  +
test esi esi +
jz loc_46D3D0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_46D3D0  +
mov eax [esi+20h] +
test eax eax +
jz loc_46D3D0  +
mov edx [esi+24h] +
test edx edx +
jz loc_46D3D0  +
mov edx [esi+28h] +
mov dword ptr [esp+8] 1BCCh +
mov dword ptr [esp+4] 1 +
mov [esp] edx +
call eax  +
test eax eax +
mov edx eax +
jz loc_46D3DA  +
mov eax [ebp+34h] +
test eax eax +
jz loc_46D395  +
mov edi [esi+20h] +
mov eax 1 +
mov dword ptr [esp+8] 1 +
mov ecx [ebp+24h] +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+4] eax +
mov eax [esi+28h] +
mov [esp] eax +
call edi  +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_46D3E4  +
mov eax [esi] +
test dl 1 +
mov edi edx +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+4] eax +
mov eax [esi+8] +
mov [ebx+8] eax +
mov eax [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov eax [esi+18h] +
mov [ebx+18h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [esi+20h] +
mov [ebx+20h] eax +
mov eax [esi+24h] +
mov [ebx+24h] eax +
mov eax [esi+28h] +
mov [ebx+28h] eax +
mov eax [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [esi+30h] +
mov [ebx+30h] eax +
mov eax [esi+34h] +
mov esi ebp +
mov [ebx+34h] eax +
mov eax 1BCCh +
jnz loc_46D3A2  +
test edi 2 +
jnz loc_46D3B8  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_46D380  +
test al 1 +
jnz loc_46D360  +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jnb loc_46D330  +
mov eax [ebp+6Ch] +
mov edi [esp+18h] +
sub eax ecx +
sar eax 2 +
test edi edi +
lea eax [edx+eax*4+530h] +
mov [edx+6Ch] eax +
jz loc_46D315  +
mov ecx [ebp+24h] +
mov eax 1 +
mov esi [ebp+34h] +
mov [esp] edi +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+8] eax +
mov [esp+4] esi +
call memcpy  +
mov edx [esp+1Ch] +
mov eax [esp+18h] +
mov [edx+34h] eax +
xor eax eax +
mov [ebx+1Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea esi [ebp+1BBCh] +
cmp eax esi +
ja loc_46D2D6  +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+4Ch] eax +
mov eax [ebp+50h] +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+50h] eax +
jmp loc_46D2D6  +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jb loc_46D2D6  +
jmp loc_46D330  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_46D2C9  +
jmp loc_46D360  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_46D242  +
***
movzx eax byte ptr [ebp+0] +
lea edi [edx+1] +
lea esi [ebp+1] +
mov [edx] al +
mov eax 1BCBh +
jmp loc_46D2A6  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_46D2B2  +
***
mov eax 0FFFFFFFEh +
jmp loc_46D321  +
***
mov eax 0FFFFFFFCh +
jmp loc_46D321  +
***
mov ecx [esi+28h] +
mov eax [esi+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax 0FFFFFFFCh +
jmp loc_46D321  +
***
mov eax [esp+4] +
test eax eax +
jz loc_46D420  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_46D420  +
mov dword ptr [eax+1BC0h] 1 +
mov eax 0FFFFFFFDh +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
test eax eax +
jz loc_46D474  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_46D474  +
mov eax [edx+1BC4h] +
mov ecx [edx] +
shl eax 10h +
cmp ecx 0Fh +
jz loc_46D460  +
xor ebx ebx +
cmp ecx 18h +
jz loc_46D467  +
add eax ebx +
pop ebx  +
retn   +
***
mov ebx [edx+40h] +
add eax ebx +
jmp loc_46D459  +
***
mov ebx [edx+1BC8h] +
sub ebx [edx+40h] +
add eax ebx +
jmp loc_46D459  +
***
mov eax 0FFFF0000h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 50h +
mov eax [esp+50h+arg_8] +
lea ebx [esp+50h+var_38] +
mov esi [esp+50h+arg_4] +
mov [esp+50h+var_18] 0 +
mov [esp+50h+var_14] 0 +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+arg_C] +
mov [esp+50h+var_10] 0 +
mov [esp+50h+var_34] eax +
mov eax [esp+50h+arg_0] +
mov [esp+50h+var_2C] eax +
mov eax [esi] +
mov [esp+50h+var_44] 38h +
mov [esp+50h+var_48] offset a1_2_7_0 +
mov [esp+50h+var_50] ebx +
mov [esp+50h+var_28] eax +
mov eax [esp+50h+arg_10] +
mov [esp+50h+var_4C] eax +
call sub_471550  +
test eax eax +
jz loc_46D4F0  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+50h+var_4C] 4 +
mov [esp+50h+var_50] ebx +
call sub_46FFF0  +
cmp eax 1 +
mov edi eax +
jz loc_46D520  +
mov [esp+50h+var_50] ebx +
call sub_471170  +
test edi edi +
mov eax 0FFFFFFFBh +
cmovnz eax edi +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+50h+var_24] +
mov [esi] eax +
mov [esp+50h+var_50] ebx +
call sub_471170  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] 0FFFFFFFFh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_46D480  +
add esp 2Ch +
retn   +
***
mov edx [esp+arg_0] +
mov eax edx +
shr eax 0Ch +
lea ecx [edx+eax+0Dh] +
mov eax edx +
shr eax 0Eh +
add eax ecx +
shr edx 19h +
add eax edx +
retn   +
***
mov eax offset a1_2_7_1 +
retn   +
***
mov eax 55h +
retn   +
***
mov eax 2 +
sub eax [esp+4] +
mov eax ds:off_4B4D80[eax*4] +
retn   +
***
jmp loc_46D5E0  +
mov eax [esp+0Ch] +
imul eax [esp+8] +
mov [esp+4] eax +
jmp malloc  +
***
mov eax [esp+8] +
mov [esp+4] eax +
jmp free  +
***
push ebp  +
mov ebp 80078071h +
push edi  +
push esi  +
mov esi eax +
mov eax ecx +
push ebx  +
mov ebx edx +
imul  ebp +
mov eax ecx +
sar eax 1Fh +
sub esp 4 +
add edx ecx +
sar edx 0Fh +
sub edx eax +
movzx eax bx +
imul edx edx +
shr ebx 10h +
mov [esp] eax +
sub ecx edx +
mov edx ecx +
movzx ecx si +
mov edi edx +
imul edi ecx +
shr esi 10h +
add ebx esi +
sub ebx edx +
mov eax edi +
mul  ebp +
shr edx 0Fh +
imul edx edx +
sub edi edx +
mov edx 0FFF0h +
add ebx edi +
add ecx [esp] +
lea eax [ebx+0FFF1h] +
jz loc_46D684  +
lea edx [ecx-1] +
cmp edx 0FFF0h +
jbe loc_46D684  +
lea edx [ecx-0FFF2h] +
sub ebx 0FFF1h +
cmp eax 1FFE2h +
cmovnb eax ebx +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovnb eax ecx +
add esp 4 +
shl eax 10h +
pop ebx  +
or eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 38h +
mov ebp [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov eax ebp +
movzx ebp bp +
shr eax 10h +
cmp [esp+38h+arg_8] 1 +
mov [esp+38h+var_C] eax +
jz loc_46D89B  +
test edi edi +
jz loc_46DA59  +
cmp [esp+38h+arg_8] 0Fh +
ja loc_46D742  +
mov edx [esp+38h+arg_8] +
test edx edx +
jz loc_46D70A  +
mov edx [esp+38h+arg_8] +
mov eax [esp+38h+var_C] +
add edx edi +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_46D6F7  +
mov [esp+38h+var_C] eax +
mov eax [esp+38h+var_C] +
cmp ebp 0FFF1h +
mov edx 80078071h +
lea ecx [ebp-0FFF1h] +
cmovb ecx ebp +
mul  edx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub eax edx +
shl eax 10h +
or ecx eax +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 15AFh +
jbe loc_46D8DD  +
sub [esp+38h+arg_8] 15B0h +
lea eax [edi+15B0h] +
mov [esp+38h+var_8] eax +
mov eax edi +
movzx edi byte ptr [eax] +
add eax 10h +
lea ebx [ebp+edi+0] +
movzx edi byte ptr [eax-0Fh] +
mov [esp+38h+var_38] ebx +
add edi ebx +
mov ebx edi +
movzx edi byte ptr [eax-0Eh] +
mov [esp+38h+var_34] ebx +
mov esi edi +
movzx edi byte ptr [eax-0Dh] +
add esi ebx +
mov [esp+38h+var_30] esi +
mov ecx edi +
movzx edi byte ptr [eax-0Ch] +
add ecx esi +
mov [esp+38h+var_2C] ecx +
mov edx edi +
movzx edi byte ptr [eax-0Bh] +
add edx ecx +
mov [esp+38h+var_28] edx +
mov ebp edi +
movzx edi byte ptr [eax-0Ah] +
add ebp edx +
mov [esp+38h+var_24] ebp +
add edi ebp +
movzx ebp byte ptr [eax-1] +
mov ebx edi +
movzx edi byte ptr [eax-9] +
mov [esp+38h+var_20] ebx +
add edi ebx +
movzx ebx byte ptr [eax-4] +
mov esi edi +
movzx edi byte ptr [eax-8] +
mov [esp+38h+var_1C] esi +
mov ecx edi +
movzx edi byte ptr [eax-7] +
add ecx esi +
movzx esi byte ptr [eax-5] +
mov [esp+38h+var_18] ecx +
mov edx edi +
movzx edi byte ptr [eax-6] +
add edx ecx +
movzx ecx byte ptr [eax-3] +
mov [esp+38h+var_14] edx +
add edi edx +
movzx edx byte ptr [eax-2] +
add esi edi +
mov [esp+38h+var_10] edi +
mov edi [esp+38h+var_34] +
add ebx esi +
add edi [esp+38h+var_38] +
add ecx ebx +
add edi [esp+38h+var_30] +
add edx ecx +
add edi [esp+38h+var_2C] +
add ebp edx +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add edi [esp+38h+var_18] +
add edi [esp+38h+var_14] +
add edi [esp+38h+var_10] +
add edi esi +
add edi ebx +
add ecx edi +
add edx ecx +
add edx ebp +
add [esp+38h+var_C] edx +
cmp eax [esp+38h+var_8] +
jnz loc_46D764  +
mov edi eax +
mov eax 80078071h +
mul  ebp +
mov eax 80078071h +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
cmp [esp+38h+arg_8] 15AFh +
ja loc_46D750  +
mov eax [esp+38h+arg_8] +
test eax eax +
jnz loc_46D8D2  +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi] +
add ebp eax +
cmp ebp 0FFF1h +
lea eax [ebp-0FFF1h] +
cmovnb ebp eax +
mov eax [esp+38h+var_C] +
add eax ebp +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovb ecx eax +
add esp 38h +
shl ecx 10h +
or ecx ebp +
pop ebx  +
mov eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 0Fh +
jbe loc_46DA63  +
mov eax [esp+38h+arg_8] +
mov edx edi +
mov [esp+38h+arg_4] edi +
sub eax 10h +
mov [esp+38h+var_4] eax +
shr [esp+38h+var_4] 4 +
mov eax [esp+38h+var_4] +
shl eax 4 +
lea eax [edi+eax+10h] +
mov [esp+38h+var_8] eax +
movzx eax byte ptr [edx] +
add edx 10h +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-0Fh] +
mov [esp+38h+var_38] esi +
add eax esi +
mov edi eax +
movzx eax byte ptr [edx-0Eh] +
mov [esp+38h+var_34] edi +
add eax edi +
movzx edi byte ptr [edx-4] +
mov esi eax +
movzx eax byte ptr [edx-0Dh] +
mov [esp+38h+var_30] esi +
add eax esi +
mov ebx eax +
movzx eax byte ptr [edx-0Ch] +
mov [esp+38h+var_2C] ebx +
mov ecx eax +
movzx eax byte ptr [edx-0Bh] +
add ecx ebx +
movzx ebx byte ptr [edx-7] +
mov [esp+38h+var_28] ecx +
mov ebp eax +
movzx eax byte ptr [edx-0Ah] +
add ebp ecx +
movzx ecx byte ptr [edx-6] +
mov [esp+38h+var_24] ebp +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-9] +
mov [esp+38h+var_20] esi +
add eax esi +
movzx esi byte ptr [edx-8] +
mov [esp+38h+var_1C] eax +
add esi eax +
movzx eax byte ptr [edx-5] +
add ebx esi +
add ecx ebx +
add eax ecx +
lea ebp [eax+edi] +
movzx edi byte ptr [edx-3] +
mov [esp+38h+var_18] ebp +
add edi ebp +
mov ebp edi +
movzx edi byte ptr [edx-2] +
mov [esp+38h+var_14] ebp +
add edi ebp +
movzx ebp byte ptr [edx-1] +
mov [esp+38h+var_10] edi +
add ebp edi +
mov edi [esp+38h+var_34] +
add edi [esp+38h+var_38] +
add edi [esp+38h+var_30] +
add edi [esp+38h+var_2C] +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add esi edi +
add ebx esi +
add ecx ebx +
add eax ecx +
add eax [esp+38h+var_18] +
add eax [esp+38h+var_14] +
add eax [esp+38h+var_10] +
add eax ebp +
add [esp+38h+var_C] eax +
cmp edx [esp+38h+var_8] +
jnz loc_46D902  +
mov esi [esp+38h+var_4] +
mov edi [esp+38h+arg_4] +
mov eax esi +
add eax 1 +
shl eax 4 +
add edi eax +
mov eax esi +
mov esi [esp+38h+arg_8] +
shl eax 4 +
neg eax  +
lea eax [esi+eax-11h] +
and esi 0Fh +
jz loc_46DA24  +
lea edx [edi+eax+1] +
mov eax [esp+38h+var_C] +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_46DA11  +
mov [esp+38h+var_C] eax +
mov ecx 80078071h +
mov eax ebp +
mul  ecx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  ecx +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
jmp loc_46D891  +
mov ecx 1 +
jmp loc_46D738  +
mov eax [esp+38h+arg_8] +
sub eax 1 +
jmp loc_46DA09  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_46DA85  +
jmp loc_46D610  +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_46DAA5  +
jmp loc_46D610  +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov ecx [edx+edi*4] +
test ecx ecx +
jz loc_46DADD  +
mov ebx edx +
xor esi esi +
test cl 1 +
jz loc_46DAC7  +
xor esi [ebx] +
add ebx 4 +
shr ecx 1 +
jnz loc_46DAC0  +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_46DAB5  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor esi esi +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_46DAB5  +
jmp loc_46DAD9  +
***
push ebp  +
mov ebp ecx +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 100h +
test ecx ecx +
jle loc_46DBBD  +
mov edi edx +
mov edx 1 +
mov dword ptr [esp+80h] 0EDB88320h +
lea eax [esp+84h] +
lea ecx [esp+100h] +
mov [eax] edx +
add eax 4 +
add edx edx +
cmp eax ecx +
jnz loc_46DB26  +
lea edx [esp+80h] +
mov eax esp +
call sub_46DAB0  +
mov edx esp +
lea eax [esp+80h] +
call sub_46DAB0  +
lea esi [esi+0] +
lea edx [esp+80h] +
mov eax esp +
call sub_46DAB0  +
test ebp 1 +
jz loc_46DB7E  +
test esi esi +
jz loc_46DB7E  +
mov ebx esi +
mov eax esp +
xor esi esi +
test bl 1 +
jz loc_46DB77  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_46DB70  +
sar ebp 1 +
jz loc_46DBB9  +
mov edx esp +
lea eax [esp+80h] +
call sub_46DAB0  +
test ebp 1 +
jz loc_46DBB5  +
test esi esi +
jz loc_46DBB5  +
mov ebx esi +
xor esi esi +
lea eax [esp+80h] +
test bl 1 +
jz loc_46DBAE  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_46DBA7  +
sar ebp 1 +
jnz loc_46DB50  +
mov eax esi +
xor eax edi +
add esp 100h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax offset dword_4B4DC0 +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov ebp [esp+4+arg_8] +
test edx edx +
jz loc_46DE83  +
mov eax [esp+4+arg_0] +
test ebp ebp +
not eax  +
jnz loc_46DC24  +
jmp loc_46DE79  +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_4B4DC0[ecx*4] +
sub ebp 1 +
jz loc_46DE79  +
test dl 3 +
jnz loc_46DC06  +
cmp ebp 1Fh +
jbe loc_46DDF4  +
lea edi [ebp-20h] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 5 +
mov ecx [esp+4+var_4] +
mov [esp+4+arg_4] edx +
shl ecx 5 +
lea edi [edx+ecx+20h] +
lea esi [esi+0] +
xor eax [ebx] +
mov edx eax +
movzx ecx al +
shr edx 10h +
movzx esi ah +
mov ecx ds:dword_4B59C0[ecx*4] +
shr eax 18h +
movzx edx dl +
xor ecx ds:dword_4B4DC0[eax*4] +
xor ecx [ebx+4] +
xor ecx ds:dword_4B55C0[esi*4] +
xor ecx ds:dword_4B51C0[edx*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_4B59C0[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_4B4DC0[ecx*4] +
xor esi [ebx+8] +
xor esi ds:dword_4B55C0[edx*4] +
xor esi ds:dword_4B51C0[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_4B59C0[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_4B4DC0[esi*4] +
xor ecx [ebx+0Ch] +
xor ecx ds:dword_4B55C0[edx*4] +
xor ecx ds:dword_4B51C0[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_4B59C0[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_4B4DC0[ecx*4] +
xor esi [ebx+10h] +
xor esi ds:dword_4B55C0[edx*4] +
xor esi ds:dword_4B51C0[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_4B59C0[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_4B4DC0[esi*4] +
xor ecx [ebx+14h] +
xor ecx ds:dword_4B55C0[edx*4] +
xor ecx ds:dword_4B51C0[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_4B59C0[esi*4] +
movzx eax al +
shr ecx 18h +
xor esi ds:dword_4B4DC0[ecx*4] +
add ebx 20h +
xor esi [ebx-8] +
xor esi ds:dword_4B55C0[edx*4] +
xor esi ds:dword_4B51C0[eax*4] +
mov eax esi +
mov edx esi +
movzx ecx ah +
movzx edx dl +
shr eax 10h +
mov edx ds:dword_4B59C0[edx*4] +
shr esi 18h +
movzx eax al +
xor edx ds:dword_4B4DC0[esi*4] +
xor edx [ebx-4] +
xor edx ds:dword_4B55C0[ecx*4] +
xor edx ds:dword_4B51C0[eax*4] +
mov ecx edx +
mov eax edx +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_4B4DC0[eax*4] +
movzx edx dh +
xor eax ds:dword_4B59C0[esi*4] +
xor eax ds:dword_4B55C0[edx*4] +
xor eax ds:dword_4B51C0[ecx*4] +
cmp ebx edi +
jnz loc_46DC50  +
mov ecx [esp+4+var_4] +
and ebp 1Fh +
mov edx [esp+4+arg_4] +
add ecx 1 +
shl ecx 5 +
add edx ecx +
cmp ebp 3 +
jbe loc_46DE56  +
lea edi [ebp-4] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 2 +
mov edi [esp+4+var_4] +
mov [esp+4+arg_4] edx +
lea edi [edx+edi*4+4] +
xor eax [ebx] +
add ebx 4 +
mov ecx eax +
mov edx eax +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_4B4DC0[eax*4] +
movzx edx dh +
xor eax ds:dword_4B59C0[esi*4] +
xor eax ds:dword_4B55C0[edx*4] +
xor eax ds:dword_4B51C0[ecx*4] +
cmp ebx edi +
jnz loc_46DE10  +
mov edx [esp+4+arg_4] +
and ebp 3 +
mov edi [esp+4+var_4] +
lea edx [edx+edi*4+4] +
test ebp ebp +
jz loc_46DE79  +
lea ebx [edx+ebp] +
lea esi [esi+0] +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_4B4DC0[ecx*4] +
cmp edx ebx +
jnz loc_46DE60  +
add esp 4 +
not eax  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_46DAF0  +
***
jmp loc_46DEB0  +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_46DAF0  +
***
push esi  +
push ebx  +
sub esp 84h +
mov edi [esp+84h+arg_8] +
lea edx [esp+84h+var_40] +
lea eax [esp+84h+var_20] +
lea esi [esi+0] +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
cmp edx eax +
jnz loc_46DEF0  +
mov edx [esp+84h+arg_4] +
test edi edi +
lea ebx [edx+edi*2] +
jz loc_46DF20  +
nop   +
lea esi [esi+0] +
movzx ecx word ptr [edx] +
add edx 2 +
add word ptr [esp+ecx*2+84h+var_40] 1 +
cmp edx ebx +
jnz loc_46DF10  +
mov esi [esp+84h+arg_10] +
mov ecx 0Fh +
mov edx [esi] +
nop   +
cmp word ptr [esp+ecx*2+84h+var_40] 0 +
jnz loc_46DF8D  +
sub ecx 1 +
jnz loc_46DF30  +
mov eax [esp+84h+arg_C] +
xor ebx ebx +
xor esi esi +
mov edi [esp+84h+arg_C] +
mov eax [eax] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] bx +
mov eax [edi] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] si +
mov eax [esp+84h+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
add esp 84h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx edx +
cmovbe edx ecx +
test ecx ecx +
mov [esp+84h+var_64] ecx +
mov [esp+84h+var_84] edx +
jz loc_46DF3D  +
cmp ecx 1 +
movzx esi word ptr [esp+84h+var_40+2] +
mov ebp 1 +
jbe loc_46DFC6  +
test si si +
jnz loc_46DFC6  +
mov edx [esp+84h+var_64] +
jmp loc_46DFBF  +
cmp word ptr [esp+ebp*2+84h+var_40] 0 +
jnz loc_46DFC6  +
add ebp 1 +
cmp ebp edx +
jnz loc_46DFB7  +
lea edx [esp+84h+var_3C] +
movzx ecx si +
mov ebx 1 +
jmp loc_46DFDA  +
movzx ecx word ptr [edx] +
add edx 2 +
add ebx ebx +
sub ebx ecx +
js loc_46E34E  +
cmp eax edx +
jnz loc_46DFD4  +
test ebx ebx +
jz loc_46E006  +
cmp [esp+84h+var_64] 1 +
jnz loc_46E34E  +
mov ecx [esp+84h+arg_0] +
test ecx ecx +
jz loc_46E34E  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+84h+var_20+2] dx +
mov edx 1 +
jmp loc_46E01B  +
movzx esi word ptr [esp+edx*2+84h+var_40] +
add edx 1 +
add ecx esi +
cmp edx 0Fh +
mov [eax+edx*2] cx +
jnz loc_46E016  +
xor eax eax +
test edi edi +
jz loc_46E067  +
mov [esp+84h+var_80] ebp +
mov esi [esp+84h+arg_4] +
mov ebp [esp+84h+arg_14] +
movzx ecx word ptr [esi+eax*2] +
test cx cx +
jz loc_46E05C  +
movzx edx word ptr [esp+ecx*2+84h+var_20] +
lea ebx [edx+1] +
mov word ptr [esp+ecx*2+84h+var_20] bx +
mov [ebp+edx*2+0] ax +
add eax 1 +
cmp eax edi +
jnz loc_46E041  +
mov ebp [esp+84h+var_80] +
mov ebx [esp+84h+arg_0] +
test ebx ebx +
jz loc_46E3A9  +
cmp [esp+84h+arg_0] 1 +
mov edi 0FFFFFFFFh +
mov eax 100h +
mov ebx offset unk_4B6DC0 +
cmovnz eax edi +
mov edi offset unk_4B6E00 +
mov [esp+84h+var_58] eax +
mov eax offset unk_4B6C3E +
cmovnz eax ebx +
mov [esp+84h+var_48] eax +
mov eax offset unk_4B6C7E +
cmovnz eax edi +
mov [esp+84h+var_4C] eax +
mov eax [esp+84h+var_84] +
cmp ebp eax +
cmovnb eax ebp +
mov edi eax +
mov [esp+84h+var_68] eax +
mov eax [esp+84h+arg_C] +
mov ecx edi +
mov eax [eax] +
mov [esp+84h+var_6C] eax +
mov eax 1 +
shl eax cl +
cmp [esp+84h+arg_0] 1 +
setz [esp+84h+var_42]  +
cmp eax 353h +
ja loc_46E39C  +
cmp [esp+84h+arg_0] 2 +
setz [esp+84h+var_41]  +
cmp eax 24Fh +
ja loc_46E35E  +
mov ebx [esp+84h+arg_14] +
mov edi [esp+84h+var_68] +
mov [esp+84h+var_5C] eax +
sub eax 1 +
mov [esp+84h+var_84] ebp +
mov [esp+84h+var_70] ebx +
mov [esp+84h+var_54] 0FFFFFFFFh +
mov ebp edi +
mov [esp+84h+var_80] 0 +
mov [esp+84h+var_7C] 0 +
mov [esp+84h+var_50] eax +
lea esi [esi+0] +
mov eax [esp+84h+var_70] +
movzx edx byte ptr [esp+84h+var_84] +
sub dl byte ptr [esp+84h+var_7C] +
mov byte ptr [esp+84h+var_74] 0 +
movzx esi word ptr [eax] +
movzx eax si +
cmp [esp+84h+var_58] eax +
jg loc_46E177  +
jge loc_46E390  +
mov edi [esp+84h+var_48] +
movzx ebx byte ptr [edi+eax*2] +
mov byte ptr [esp+84h+var_74] bl +
mov ebx [esp+84h+var_4C] +
movzx esi word ptr [ebx+eax*2] +
mov ecx [esp+84h+var_84] +
mov edi 1 +
mov eax 1 +
sub ecx [esp+84h+var_7C] +
shl edi cl +
mov ecx ebp +
shl eax cl +
movzx ecx byte ptr [esp+84h+var_7C] +
mov ebx eax +
mov [esp+84h+var_60] eax +
lea eax ds:0[edi*4] +
mov [esp+84h+var_78] eax +
mov eax [esp+84h+var_80] +
neg [esp+84h+var_78]  +
shr eax cl +
mov ecx ebx +
add eax ebx +
mov ebx [esp+84h+var_6C] +
sub eax edi +
lea eax [ebx+eax*4+1] +
movzx ebx byte ptr [esp+84h+var_74] +
mov [esp+84h+var_74] ebp +
mov ebp [esp+84h+var_78] +
lea esi [esi+0] +
mov [eax-1] bl +
mov [eax] dl +
mov [eax+1] si +
add eax ebp +
sub ecx edi +
jnz loc_46E1D0  +
mov eax [esp+84h+var_84] +
mov ebp [esp+84h+var_74] +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+84h+var_80] +
test ecx eax +
jz loc_46E206  +
lea esi [esi+0] +
shr ecx 1 +
test ecx eax +
jnz loc_46E200  +
test ecx ecx +
jz loc_46E380  +
lea eax [ecx-1] +
and eax [esp+84h+var_80] +
add eax ecx +
mov [esp+84h+var_80] eax +
mov esi [esp+84h+var_84] +
movzx eax word ptr [esp+esi*2+84h+var_40] +
mov word ptr [esp+84h+var_78] ax +
sub eax 1 +
test ax ax +
mov word ptr [esp+esi*2+84h+var_40] ax +
jnz loc_46E257  +
mov eax [esp+84h+var_64] +
cmp esi eax +
jz loc_46E3C5  +
mov eax [esp+84h+var_70] +
mov ebx [esp+84h+arg_4] +
movzx eax word ptr [eax+2] +
movzx eax word ptr [ebx+eax*2] +
mov [esp+84h+var_84] eax +
mov eax [esp+84h+var_84] +
cmp [esp+84h+var_68] eax +
jnb loc_46E344  +
mov ebx [esp+84h+var_80] +
and ebx [esp+84h+var_50] +
cmp ebx [esp+84h+var_54] +
jz loc_46E344  +
mov edi [esp+84h+var_6C] +
mov edx 1 +
mov esi [esp+84h+var_60] +
mov eax [esp+84h+var_7C] +
lea edi [edi+esi*4] +
mov [esp+84h+var_6C] edi +
mov edi [esp+84h+var_84] +
test eax eax +
cmovz eax [esp+84h+var_68] +
mov ebp edi +
mov esi eax +
sub ebp eax +
mov ecx ebp +
shl edx cl +
mov ecx [esp+84h+var_64] +
mov [esp+84h+var_7C] eax +
cmp edi ecx +
jnb loc_46E2D9  +
movzx eax word ptr [esp+edi*2+84h+var_40] +
sub edx eax +
test edx edx +
jle loc_46E2D9  +
lea ecx [esp+esi*2+84h+var_40] +
mov edi [esp+84h+var_64] +
jmp loc_46E2CD  +
movzx eax word ptr [ecx+ebp*2] +
sub edx eax +
test edx edx +
jle loc_46E2D9  +
add ebp 1 +
add edx edx +
lea eax [esi+ebp] +
cmp eax edi +
jb loc_46E2C3  +
mov eax 1 +
mov ecx ebp +
shl eax cl +
add [esp+84h+var_5C] eax +
cmp [esp+84h+var_5C] 353h +
ja loc_46E408  +
cmp [esp+84h+var_5C] 24Fh +
ja loc_46E418  +
mov eax [esp+84h+arg_C] +
mov ecx ebp +
lea edx ds:0[ebx*4] +
mov [esp+84h+var_54] ebx +
mov eax [eax] +
mov [eax+ebx*4] cl +
mov eax [esp+84h+arg_C] +
movzx ecx byte ptr [esp+84h+var_68] +
mov eax [eax] +
mov [eax+edx+1] cl +
mov eax [esp+84h+arg_C] +
mov ecx [eax] +
mov eax [esp+84h+var_6C] +
sub eax ecx +
sar eax 2 +
mov [ecx+edx+2] ax +
add [esp+84h+var_70] 2 +
jmp loc_46E140  +
add esp 84h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+84h+var_41] 0 +
jz loc_46E105  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+84h+var_80] 0 +
jmp loc_46E21B  +
xor esi esi +
mov byte ptr [esp+84h+var_74] 60h +
jmp loc_46E177  +
cmp [esp+84h+var_42] 0 +
jz loc_46E0ED  +
jmp loc_46E369  +
mov eax [esp+84h+arg_14] +
mov [esp+84h+var_58] 13h +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_4C] eax +
jmp loc_46E0B1  +
mov ecx [esp+84h+var_80] +
test ecx ecx +
jz loc_46E3E4  +
mov eax [esp+84h+var_6C] +
mov ebx [esp+84h+var_80] +
lea eax [eax+ebx*4] +
mov [eax+1] dl +
xor edx edx +
mov byte ptr [eax] 40h +
mov [eax+2] dx +
mov eax [esp+84h+var_5C] +
mov esi [esp+84h+arg_C] +
mov ebx [esp+84h+var_68] +
shl eax 2 +
add [esi] eax +
mov eax [esp+84h+arg_10] +
mov [eax] ebx +
xor eax eax +
jmp loc_46DF82  +
cmp [esp+84h+var_42] 0 +
jz loc_46E2F4  +
jmp loc_46E369  +
cmp [esp+84h+var_41] 0 +
jz loc_46E302  +
jmp loc_46E369  +
***
push esi  +
push ebx  +
sub esp 44h +
mov eax [esp+44h+arg_0] +
mov eax [eax+1Ch] +
mov esi eax +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
sub eax 1 +
mov edi eax +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+4] +
lea eax [edi+eax-5] +
mov [esp+44h+var_2C] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
lea edi [eax-1] +
mov eax [esp+44h+arg_0] +
mov eax [eax+10h] +
mov edx eax +
sub edx [esp+44h+arg_4] +
lea eax [edi+eax-101h] +
mov [esp+44h+var_34] eax +
mov eax esi +
lea ecx [edi+edx] +
mov edx 1 +
mov [esp+44h+var_14] ecx +
mov ecx [esi+28h] +
mov esi [esi+2Ch] +
mov [esp+44h+var_20] ecx +
mov [esp+44h+var_C] esi +
mov esi [eax+30h] +
mov [esp+44h+var_28] esi +
mov esi [eax+34h] +
mov [esp+44h+var_1C] esi +
mov esi eax +
mov eax [eax+38h] +
mov ebx [esi+4Ch] +
mov ebp [esi+3Ch] +
mov [esp+44h+var_40] ebx +
mov ebx [esi+50h] +
mov [esp+44h+var_24] ebx +
mov ecx [esi+54h] +
mov ebx edx +
shl ebx cl +
mov ecx [esi+58h] +
mov esi [esp+44h+var_1C] +
lea ebx [ebx-1] +
mov [esp+44h+var_30] ebx +
shl edx cl +
lea ebx [edx-1] +
mov [esp+44h+var_18] ebx +
lea ebx [esi-1] +
mov esi [esp+44h+var_28] +
add esi [esp+44h+var_20] +
mov [esp+44h+var_8] ebx +
mov [esp+44h+var_4] esi +
cmp ebp 0Eh +
ja loc_46E519  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
lea esi [esi+2] +
movzx edx byte ptr [esi] +
mov [esp+44h+var_44] esi +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
add edx ebx +
add eax edx +
mov edx [esp+44h+var_30] +
mov esi [esp+44h+var_40] +
and edx eax +
lea ebx [esi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jz loc_46E599  +
test dl 10h +
jnz loc_46E614  +
test dl 40h +
jnz loc_46E7E5  +
mov [esp+44h+var_3C] edi +
mov edi [esp+44h+var_40] +
jmp loc_46E56A  +
test dl 10h +
jnz loc_46E610  +
test dl 40h +
jnz loc_46E7E1  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jnz loc_46E558  +
mov edi [esp+44h+var_3C] +
mov [edi+1] bl +
add edi 1 +
cmp edi [esp+44h+var_34] +
jnb loc_46E5B2  +
mov ecx [esp+44h+var_2C] +
cmp [esp+44h+var_44] ecx +
jb loc_46E4F4  +
mov edx [esp+44h+var_44] +
mov ecx ebp +
mov ebx 1 +
shr ecx 3 +
mov esi [esp+44h+arg_0] +
sub edx ecx +
shl ecx 3 +
sub ebp ecx +
mov ecx ebp +
shl ebx cl +
sub ebx 1 +
and ebx eax +
lea eax [edx+1] +
mov [esi] eax +
lea eax [edi+1] +
mov [esi+0Ch] eax +
mov eax [esp+44h+var_2C] +
sub eax edx +
add eax 5 +
mov [esi+4] eax +
mov eax [esp+44h+var_34] +
sub eax edi +
add eax 101h +
mov [esi+10h] eax +
mov eax [esp+44h+var_38] +
mov [eax+38h] ebx +
mov [eax+3Ch] ebp +
add esp 44h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+44h+var_3C] +
and edx 0Fh +
movzx ecx bx +
movzx ebx dl +
test ebx ebx +
mov [esp+44h+var_3C] ecx +
jz loc_46E658  +
cmp ebx ebp +
jbe loc_46E642  +
mov ecx [esp+44h+var_44] +
movzx esi byte ptr [ecx+1] +
mov ecx ebp +
add ebp 8 +
shl esi cl +
mov ecx [esp+44h+var_44] +
add eax esi +
lea esi [ecx+1] +
mov [esp+44h+var_44] esi +
mov ecx edx +
mov esi 1 +
shl esi cl +
sub ebp ebx +
sub esi 1 +
and esi eax +
add [esp+44h+var_3C] esi +
shr eax cl +
cmp ebp 0Eh +
jbe loc_46E800  +
mov edx [esp+44h+var_18] +
mov ecx [esp+44h+var_24] +
and edx eax +
lea ebx [ecx+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jnz loc_46E6D1  +
test dl 40h +
jnz loc_46E846  +
mov [esp+44h+var_10] edi +
mov edi [esp+44h+var_24] +
jmp loc_46E6A1  +
test dl 40h +
jnz loc_46E842  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jz loc_46E698  +
mov edi [esp+44h+var_10] +
movzx ecx bx +
mov ebx edx +
and ebx 0Fh +
movzx esi bl +
cmp esi ebp +
mov [esp+44h+var_10] ecx +
jbe loc_46E702  +
mov ecx [esp+44h+var_44] +
movzx edx byte ptr [ecx+1] +
mov ecx ebp +
shl edx cl +
lea ecx [ebp+8] +
add eax edx +
cmp esi ecx +
ja loc_46E941  +
add [esp+44h+var_44] 1 +
mov ebp ecx +
mov ecx ebx +
mov edx 1 +
shl edx cl +
sub ebp esi +
sub edx 1 +
and edx eax +
add edx [esp+44h+var_10] +
shr eax cl +
mov ecx edi +
sub ecx [esp+44h+var_14] +
mov [esp+44h+var_10] edx +
cmp [esp+44h+var_10] ecx +
mov edx ecx +
jbe loc_46E860  +
mov ecx [esp+44h+var_10] +
sub ecx edx +
cmp [esp+44h+var_C] ecx +
jnb loc_46E74C  +
mov esi [esp+44h+var_38] +
mov esi [esi+1BC0h] +
test esi esi +
jnz loc_46E9A5  +
mov ebx [esp+44h+var_28] +
test ebx ebx +
jnz loc_46E8C5  +
mov edx [esp+44h+var_20] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_46E785  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_46E770  +
mov edx edi +
sub edx [esp+44h+var_10] +
cmp [esp+44h+var_3C] 2 +
mov ecx [esp+44h+var_3C] +
jbe loc_46E7B5  +
movzx ebx byte ptr [edx+1] +
add edx 3 +
sub ecx 3 +
add edi 3 +
mov [edi-2] bl +
movzx ebx byte ptr [edx-1] +
mov [edi-1] bl +
movzx ebx byte ptr [edx] +
cmp ecx 2 +
mov [edi] bl +
ja loc_46E790  +
mov [esp+44h+var_3C] ecx +
mov ecx [esp+44h+var_3C] +
test ecx ecx +
jz loc_46E59F  +
movzx ecx byte ptr [edx+1] +
cmp [esp+44h+var_3C] 2 +
mov [edi+1] cl +
jnz loc_46E994  +
movzx edx byte ptr [edx+2] +
add edi 2 +
mov [edi] dl +
jmp loc_46E59F  +
mov edi [esp+44h+var_3C] +
and edx 20h +
jz loc_46E828  +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 0Bh +
jmp loc_46E5B2  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
movzx edx byte ptr [esi+2] +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
mov ecx esi +
add edx ebx +
add ecx 2 +
add eax edx +
mov [esp+44h+var_44] ecx +
jmp loc_46E661  +
mov ecx [esp+44h+arg_0] +
mov esi [esp+44h+var_38] +
mov dword ptr [ecx+18h] offset aInvalidLiter_1 +
mov dword ptr [esi] 1Dh +
jmp loc_46E5B2  +
mov edi [esp+44h+var_10] +
mov ecx [esp+44h+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidDista_2 +
mov ecx [esp+44h+var_38] +
mov dword ptr [ecx] 1Dh +
jmp loc_46E5B2  +
mov edx edi +
mov ebx [esp+44h+var_3C] +
sub edx [esp+44h+var_10] +
mov [esp+44h+var_10] eax +
jmp loc_46E874  +
mov edi ecx +
mov edx esi +
movzx ecx byte ptr [edx+1] +
sub ebx 3 +
cmp ebx 2 +
lea esi [edx+3] +
mov [edi+1] cl +
movzx ecx byte ptr [edx+2] +
mov [edi+2] cl +
movzx eax byte ptr [edx+3] +
lea ecx [edi+3] +
mov [edi+3] al +
ja loc_46E870  +
test ebx ebx +
mov eax [esp+44h+var_10] +
mov [esp+44h+var_3C] ebx +
jz loc_46E95D  +
movzx ecx byte ptr [edx+4] +
cmp ebx 2 +
mov [edi+4] cl +
jnz loc_46E99C  +
movzx edx byte ptr [edx+5] +
add edi 5 +
mov [edi] dl +
jmp loc_46E59F  +
cmp [esp+44h+var_28] ecx +
jnb loc_46E964  +
mov edx [esp+44h+var_4] +
sub edx ecx +
sub ecx [esp+44h+var_28] +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_46E785  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_46E8F0  +
mov esi [esp+44h+var_3C] +
cmp [esp+44h+var_28] esi +
mov edx [esp+44h+var_8] +
jnb loc_46E785  +
mov edi [esp+44h+var_28] +
xor edx edx +
sub [esp+44h+var_3C] edi +
mov esi edi +
mov edi [esp+44h+var_1C] +
movzx ebx byte ptr [edi+edx] +
mov [ecx+edx+1] bl +
add edx 1 +
cmp edx esi +
jnz loc_46E921  +
mov edi [esp+44h+var_28] +
add edi ecx +
mov edx edi +
sub edx [esp+44h+var_10] +
jmp loc_46E785  +
mov edx [esp+44h+var_44] +
add ebp 10h +
movzx edx byte ptr [edx+2] +
shl edx cl +
add eax edx +
mov edx [esp+44h+var_44] +
lea ecx [edx+2] +
mov [esp+44h+var_44] ecx +
jmp loc_46E702  +
mov edi ecx +
jmp loc_46E59F  +
mov edx [esp+44h+var_28] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_46E785  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_46E980  +
jmp loc_46E77F  +
add edi 1 +
jmp loc_46E59F  +
add edi 4 +
nop   +
jmp loc_46E59F  +
mov esi [esp+44h+arg_0] +
mov dword ptr [esi+18h] offset aInvalidDista_3 +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 1Dh +
jmp loc_46E5B2  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 28h +
mov ebx [eax+6Ch] +
mov [esp+2Ch+var_2C] edx +
mov edx [esi+90h] +
mov esi [esi+2Ch] +
mov ebp [eax+38h] +
mov [esp+2Ch+var_10] eax +
mov edi [eax+7Ch] +
mov eax [eax+78h] +
mov [esp+2Ch+var_14] edx +
lea edx [esi-106h] +
lea ecx [ebp+ebx+0] +
cmp ebx edx +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_28] 0 +
mov ecx eax +
jbe loc_46EA13  +
lea edx [ebx+106h] +
mov [esp+2Ch+var_28] edx +
sub [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+var_10] +
lea ebx [ebp+ebx+102h] +
mov [esp+2Ch+var_8] ebx +
mov edx [esi+40h] +
mov [esp+2Ch+var_24] edx +
mov edx [esi+34h] +
mov [esp+2Ch+var_20] edx +
mov edx [esp+2Ch+var_18] +
movzx ebx byte ptr [edx+eax-1] +
mov [esp+2Ch+var_1A] bl +
movzx ebx byte ptr [edx+eax] +
mov edx [esp+2Ch+var_2C] +
mov [esp+2Ch+var_1C] bl +
mov ebx edi +
shr ebx 2 +
cmp eax [esi+8Ch] +
mov eax [esi+74h] +
cmovnb edi ebx +
mov ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_C] eax +
cmp ebx eax +
cmova ebx eax +
mov [esp+2Ch+var_14] ebx +
jmp loc_46EA8F  +
mov eax [esp+2Ch+var_24] +
and edx [esp+2Ch+var_20] +
movzx edx word ptr [eax+edx*2] +
cmp [esp+2Ch+var_28] edx +
jnb loc_46EBB0  +
sub edi 1 +
jz loc_46EBB0  +
lea eax [ebp+edx+0] +
mov esi ecx +
movzx ebx byte ptr [eax+ecx] +
mov [esp+2Ch+var_2C] eax +
movzx eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_1B] bl +
cmp bl al +
jnz loc_46EA70  +
mov eax [esp+2Ch+var_2C] +
movzx ebx byte ptr [eax+ecx-1] +
cmp bl [esp+2Ch+var_1A] +
mov [esp+2Ch+var_19] bl +
jnz loc_46EA70  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx] +
cmp [eax] bl +
jnz loc_46EA70  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx+1] +
cmp [eax+1] bl +
jnz loc_46EA70  +
mov esi [esp+2Ch+var_18] +
add eax 2 +
movzx ebx [esp+2Ch+var_1B] +
mov [esp+2Ch+var_2C] edx +
add esi 2 +
jmp loc_46EB50  +
movzx edx byte ptr [eax+2] +
cmp [esi+2] dl +
jnz loc_46EC2E  +
movzx edx byte ptr [eax+3] +
cmp [esi+3] dl +
jnz loc_46EC1F  +
movzx edx byte ptr [eax+4] +
cmp [esi+4] dl +
jnz loc_46EC10  +
movzx edx byte ptr [eax+5] +
cmp [esi+5] dl +
jnz loc_46EC01  +
movzx edx byte ptr [eax+6] +
cmp [esi+6] dl +
jnz loc_46EBF2  +
movzx edx byte ptr [eax+7] +
cmp [esi+7] dl +
jnz loc_46EBE3  +
add eax 8 +
add esi 8 +
movzx edx byte ptr [eax] +
cmp [esi] dl +
jnz loc_46EBDA  +
cmp [esp+2Ch+var_8] esi +
jbe loc_46EBDA  +
movzx edx byte ptr [eax+1] +
cmp [esi+1] dl +
jz loc_46EAE7  +
mov edx [esp+2Ch+var_2C] +
add esi 1 +
mov [esp+2Ch+var_1B] bl +
mov eax [esp+2Ch+var_8] +
sub esi eax +
sub eax 102h +
add esi 102h +
cmp ecx esi +
mov [esp+2Ch+var_18] eax +
jge loc_46EBC1  +
mov eax [esp+2Ch+var_10] +
cmp [esp+2Ch+var_14] esi +
mov [eax+70h] edx +
jle loc_46EBB0  +
mov eax [esp+2Ch+var_18] +
mov ecx esi +
movzx eax byte ptr [eax+esi-1] +
mov [esp+2Ch+var_1A] al +
mov eax [esp+2Ch+var_8] +
movzx eax byte ptr [eax+esi-102h] +
mov [esp+2Ch+var_1C] al +
jmp loc_46EA70  +
mov eax [esp+2Ch+var_C] +
cmp esi eax +
cmovbe eax esi +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax [esp+2Ch+var_1B] +
mov esi ecx +
mov [esp+2Ch+var_1C] al +
movzx eax [esp+2Ch+var_19] +
mov [esp+2Ch+var_1A] al +
jmp loc_46EA70  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
jmp loc_46EB63  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 7 +
jmp loc_46EB63  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 6 +
jmp loc_46EB63  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 5 +
jmp loc_46EB63  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 4 +
jmp loc_46EB63  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 3 +
jmp loc_46EB63  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 2 +
jmp loc_46EB63  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edi [ebp+74h] +
lea ecx [eax+eax] +
mov edx eax +
mov [esp+48h+var_20] eax +
sub eax 106h +
mov [esp+48h+var_1C] ecx +
mov [esp+48h+var_24] eax +
mov ebx [ebp+3Ch] +
mov eax [ebp+6Ch] +
add edx [esp+48h+var_24] +
sub ebx edi +
sub ebx eax +
cmp eax edx +
jnb loc_46EDC0  +
mov esi [ebp+0] +
mov edi [esi+4] +
test edi edi +
jz loc_46EE50  +
cmp ebx edi +
mov edx [ebp+38h] +
mov ecx [ebp+6Ch] +
mov eax [ebp+74h] +
jnb loc_46ED75  +
test ebx ebx +
jnz loc_46EF14  +
xor edi edi +
mov esi [ebp+16B4h] +
add edi eax +
mov [ebp+74h] edi +
lea eax [edi+esi] +
cmp eax 2 +
jbe loc_46ED53  +
mov ecx [ebp+58h] +
mov edx [ebp+6Ch] +
mov eax [ebp+38h] +
mov [esp+48h+var_34] ecx +
mov ecx [ebp+54h] +
sub edx esi +
movzx ebx byte ptr [eax+edx] +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_28] ecx +
movzx ecx byte ptr [esp+48h+var_34] +
mov [ebp+48h] ebx +
movzx eax byte ptr [eax+edx+1] +
shl ebx cl +
xor eax ebx +
and eax [esp+48h+var_30] +
mov [esp+48h+var_30] edi +
mov [ebp+48h] eax +
jmp loc_46ED4B  +
mov eax [esp+48h+var_2C] +
sub esi 1 +
mov ebx [ebp+48h] +
movzx ecx byte ptr [esp+48h+var_34] +
movzx eax byte ptr [eax+edx+2] +
shl ebx cl +
mov ecx [ebp+40h] +
xor eax ebx +
mov ebx [ebp+44h] +
and eax [esp+48h+var_28] +
mov [ebp+48h] eax +
lea eax [ebx+eax*2] +
mov ebx [ebp+34h] +
movzx edi word ptr [eax] +
and ebx edx +
mov [ecx+ebx*2] di +
mov [eax] dx +
mov eax [esp+48h+var_30] +
add edx 1 +
mov [ebp+16B4h] esi +
add eax esi +
cmp eax 2 +
jbe loc_46ED4F  +
test esi esi +
jnz loc_46ED00  +
mov edi [esp+48h+var_30] +
cmp edi 105h +
ja loc_46EE50  +
mov eax [ebp+0] +
mov eax [eax+4] +
test eax eax +
jz loc_46EE50  +
mov edx [ebp+2Ch] +
jmp loc_46EC65  +
mov [esp+48h+var_34] 0 +
add eax ecx +
lea ebx [edx+eax] +
mov eax [esp+48h+var_34] +
mov [esi+4] eax +
mov eax [esi] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call memcpy  +
mov eax [esi+1Ch] +
mov eax [eax+18h] +
cmp eax 1 +
jz loc_46EEA0  +
cmp eax 2 +
jz loc_46EEBB  +
add [esi] edi +
add [esi+8] edi +
mov eax [ebp+74h] +
jmp loc_46ECA4  +
mov esi [esp+48h+var_20] +
mov eax [ebp+38h] +
mov [esp+48h+var_40] esi +
lea edx [eax+esi] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call memcpy  +
mov ecx esi +
mov eax [ebp+44h] +
sub [ebp+70h] esi +
sub [ebp+6Ch] esi +
sub [ebp+5Ch] esi +
mov esi [ebp+4Ch] +
mov [esp+48h+var_34] ebx +
mov ebx ecx +
lea edx [eax+esi*2] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_46EDF4  +
mov eax [esp+48h+var_20] +
mov edx [esp+48h+var_1C] +
add edx [ebp+40h] +
mov esi eax +
mov ebx eax +
lea esi [esi+0] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_46EE20  +
mov esi [ebp+0] +
mov ebx [esp+48h+var_34] +
add ebx [esp+48h+var_20] +
mov edi [esi+4] +
test edi edi +
jnz loc_46EC89  +
nop   +
mov eax [ebp+16C0h] +
mov edx [ebp+3Ch] +
cmp eax edx +
jnb loc_46EE98  +
mov ebx [ebp+74h] +
add ebx [ebp+6Ch] +
cmp eax ebx +
jnb loc_46EED6  +
mov eax [ebp+38h] +
sub edx ebx +
mov esi 102h +
cmp edx 102h +
cmovbe esi edx +
mov [esp+48h+var_40] esi +
add eax ebx +
add ebx esi +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
mov [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_46D6B0  +
mov [esi+30h] eax +
jmp loc_46EDB3  +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_46DBE0  +
mov [esi+30h] eax +
jmp loc_46EDB3  +
lea ecx [ebx+102h] +
cmp eax ecx +
jnb loc_46EE98  +
sub ebx eax +
sub edx eax +
add ebx 102h +
cmp ebx edx +
cmova ebx edx +
add eax [ebp+38h] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
add [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edi ebx +
mov [esp+48h+var_34] edi +
mov edi ebx +
jmp loc_46ED7D  +
***
jmp sub_46EF30  +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov esi [eax+1Ch] +
mov [esp+10h+var_10] esi +
call sub_472C60  +
mov eax [esi+14h] +
mov edi [ebx+10h] +
cmp edi eax +
cmova edi eax +
test edi edi +
jnz loc_46EF60  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+10h] +
mov eax [ebx+0Ch] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
add [ebx+0Ch] edi +
add [esi+10h] edi +
add [ebx+14h] edi +
sub [ebx+10h] edi +
sub [esi+14h] edi +
jnz loc_46EF52  +
mov eax [esi+8] +
mov [esi+10h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+50h] +
mov ebp [edi+74h] +
nop   +
cmp ebp 105h +
jbe loc_46F21E  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
mov [ecx+esi*2] dx +
mov ecx [edi+70h] +
test edx edx +
mov [eax] bx +
mov eax [edi+60h] +
mov dword ptr [edi+60h] 2 +
mov [edi+64h] ecx +
mov [edi+78h] eax +
jz loc_46F023  +
cmp eax [edi+80h] +
jnb loc_46F023  +
mov ecx [edi+2Ch] +
mov esi ebx +
sub esi edx +
sub ecx 106h +
cmp esi ecx +
jbe loc_46F2E0  +
cmp eax 2 +
jbe loc_46F1A7  +
cmp [edi+60h] eax +
ja loc_46F1A7  +
mov edx [edi+74h] +
sub eax 3 +
mov ecx [edi+16A4h] +
lea ebp [ebx+edx-3] +
mov edx [edi+16A0h] +
sub bx [edi+64h] +
lea esi [ebx-1] +
sub ebx 2 +
mov [ecx+edx*2] si +
mov ecx [edi+1698h] +
lea esi [edx+1] +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_4B7140[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_46F290  +
movzx ebx bx +
movzx eax ds:byte_4B7240[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+16A0h] +
mov esi [edi+74h] +
mov [esp+18h] ebp +
mov [esp+20h] eax +
mov eax [edi+169Ch] +
add esi 1 +
mov [esp+1Ch] esi +
sub eax 1 +
mov [esp+24h] eax +
mov eax [edi+78h] +
sub [esp+1Ch] eax +
mov esi [esp+1Ch] +
lea ebx [eax-2] +
mov [esp+28h] eax +
mov eax [edi+6Ch] +
mov [edi+74h] esi +
mov [edi+78h] ebx +
mov [esp+2Ch] eax +
mov edx eax +
jmp loc_46F0E6  +
mov edx eax +
lea eax [edx+1] +
cmp [esp+18h] eax +
mov [edi+6Ch] eax +
jb loc_46F122  +
mov ecx [edi+38h] +
mov esi [edi+48h] +
movzx edx byte ptr [ecx+edx+3] +
mov ecx [edi+58h] +
shl esi cl +
mov ecx [edi+44h] +
xor edx esi +
mov esi [edi+34h] +
and edx [edi+54h] +
mov [edi+48h] edx +
lea edx [ecx+edx*2] +
mov ecx [edi+40h] +
movzx ebp word ptr [edx] +
and esi eax +
mov [ecx+esi*2] bp +
mov [edx] ax +
sub ebx 1 +
test ebx ebx +
mov [edi+78h] ebx +
jnz loc_46F0E4  +
mov esi [esp+2Ch] +
mov eax [esp+28h] +
mov dword ptr [edi+68h] 0 +
mov ebp [esp+1Ch] +
mov dword ptr [edi+60h] 2 +
lea eax [eax+esi-1] +
mov esi [esp+24h] +
cmp [esp+20h] esi +
mov [edi+6Ch] eax +
jnz loc_46EFB0  +
mov edx [edi+5Ch] +
xor ecx ecx +
sub eax edx +
test edx edx +
js loc_46F16B  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_472D60  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_46EF30  +
mov eax [edi] +
mov ebp [eax+10h] +
test ebp ebp +
jnz loc_46EFAB  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [edi+68h] +
test esi esi +
jz loc_46F270  +
mov eax [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx-1] +
xor ebx ebx +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
jz loc_46F2A3  +
mov eax [edi+74h] +
add dword ptr [edi+6Ch] 1 +
lea ebp [eax-1] +
mov eax [edi] +
mov [edi+74h] ebp +
mov eax [eax+10h] +
test eax eax +
jz loc_46F19D  +
cmp ebp 105h +
ja loc_46EFBC  +
mov eax edi +
call sub_46EC40  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_46EFBC  +
mov edx [esp+54h] +
test edx edx +
jz loc_46F19D  +
test eax eax +
jz loc_46F325  +
cmp eax 2 +
ja loc_46EFBC  +
mov eax [edi+60h] +
mov edx [edi+70h] +
mov dword ptr [edi+60h] 2 +
mov ebx [edi+6Ch] +
mov [edi+78h] eax +
mov [edi+64h] edx +
jmp loc_46F023  +
***
mov eax [edi+74h] +
add ebx 1 +
mov dword ptr [edi+68h] 1 +
mov [edi+6Ch] ebx +
lea ebp [eax-1] +
mov [edi+74h] ebp +
jmp loc_46EFB0  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_4B7340[ebx] +
jmp loc_46F093  +
***
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_46F2B6  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ecx +
mov [esp] edi +
call sub_472D60  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_46EF30  +
jmp loc_46F1FC  +
***
mov eax edi +
call sub_46E9C0  +
cmp eax 5 +
mov [edi+60h] eax +
ja loc_46F2FD  +
cmp dword ptr [edi+88h] 1 +
jz loc_46F308  +
cmp eax 3 +
jz loc_46F314  +
mov ebx [edi+6Ch] +
mov eax [edi+78h] +
jmp loc_46F023  +
***
mov ebx [edi+6Ch] +
mov dword ptr [edi+60h] 2 +
jmp loc_46F300  +
***
mov ebx [edi+6Ch] +
mov eax ebx +
sub eax [edi+70h] +
cmp eax 1000h +
jbe loc_46F300  +
jmp loc_46F30B  +
***
mov esi [edi+68h] +
test esi esi +
jnz loc_46F3A8  +
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+54h] 4 +
mov [edi+16B4h] eax +
jz loc_46F3EC  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_46F19F  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_46F36E  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 0 +
call sub_472D60  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_46EF30  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+6Ch] +
xor ebx ebx +
mov edx [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [edx+eax-1] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov dword ptr [edi+68h] 0 +
jmp loc_46F32C  +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_46F3FC  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_472D60  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_46EF30  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 3Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [esp+60h] +
nop   +
lea esi [esi+0] +
cmp dword ptr [edi+74h] 105h +
jbe loc_46F6E0  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
test edx edx +
mov [ecx+esi*2] dx +
mov [eax] bx +
jz loc_46F4A8  +
mov eax [edi+2Ch] +
mov ecx ebx +
sub ecx edx +
sub eax 106h +
cmp ecx eax +
jbe loc_46F730  +
mov eax [edi+60h] +
cmp eax 2 +
jbe loc_46F650  +
mov edx [edi+16A0h] +
sub eax 3 +
mov ecx [edi+16A4h] +
sub bx [edi+70h] +
lea esi [edx+1] +
mov [ecx+edx*2] bx +
mov ecx [edi+1698h] +
sub ebx 1 +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_4B7140[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_46F716  +
movzx ebx bx +
movzx eax ds:byte_4B7240[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+169Ch] +
mov esi [edi+60h] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
mov eax [edi+74h] +
sub eax esi +
cmp esi [edi+80h] +
mov [edi+74h] eax +
ja loc_46F6B0  +
cmp eax 2 +
jbe loc_46F6B0  +
mov ecx [edi+40h] +
lea ebx [esi-1] +
mov eax [edi+6Ch] +
mov edx [edi+54h] +
mov [edi+60h] ebx +
mov ebp [edi+48h] +
mov [esp+20h] ecx +
mov ecx [edi+34h] +
mov [esp+38h] eax +
mov [esp+30h] edx +
lea edx [eax+1] +
mov [esp+3Ch] esi +
mov [esp+24h] ecx +
mov ecx [edi+44h] +
mov [esp+18h] ebx +
mov [esp+28h] ecx +
mov ecx [edi+38h] +
mov [esp+2Ch] ecx +
mov ecx [edi+58h] +
mov [esp+34h] ecx +
jmp loc_46F597  +
mov [esp+18h] ebx +
mov ebp eax +
mov eax [esp+2Ch] +
movzx ecx byte ptr [esp+34h] +
mov [edi+6Ch] edx +
mov esi [esp+28h] +
movzx eax byte ptr [eax+edx+2] +
shl ebp cl +
mov ecx [esp+20h] +
xor eax ebp +
mov ebp [esp+24h] +
and eax [esp+30h] +
lea esi [esi+eax*2] +
and ebp edx +
movzx ebx word ptr [esi] +
mov [edi+48h] eax +
mov [ecx+ebp*2] bx +
mov ebx [esp+18h] +
mov [esi] dx +
add edx 1 +
sub ebx 1 +
test ebx ebx +
mov [edi+60h] ebx +
jnz loc_46F591  +
mov esi [esp+3Ch] +
mov eax [esp+38h] +
add eax esi +
mov [edi+6Ch] eax +
lea esi [esi+0] +
mov esi [esp+1Ch] +
test esi esi +
jz loc_46F450  +
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_46F60F  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_472D60  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_46EF30  +
mov eax [edi] +
mov ebx [eax+10h] +
test ebx ebx +
jnz loc_46F450  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+38h] +
xor ebp ebp +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bp +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
sub dword ptr [edi+74h] 1 +
add dword ptr [edi+6Ch] 1 +
jmp loc_46F5F0  +
***
mov eax [edi+6Ch] +
mov ecx [edi+38h] +
mov dword ptr [edi+60h] 0 +
add eax esi +
mov [edi+6Ch] eax +
movzx edx byte ptr [ecx+eax] +
mov [edi+48h] edx +
movzx eax byte ptr [ecx+eax+1] +
mov ecx [edi+58h] +
shl edx cl +
xor eax edx +
and eax [edi+54h] +
mov [edi+48h] eax +
jmp loc_46F5F0  +
***
mov eax edi +
call sub_46EC40  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_46F45D  +
mov edx [esp+64h] +
test edx edx +
jz loc_46F641  +
test eax eax +
jz loc_46F742  +
cmp eax 2 +
ja loc_46F45D  +
mov ebx [edi+6Ch] +
jmp loc_46F4A8  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_4B7340[ebx] +
jmp loc_46F508  +
***
mov eax edi +
call sub_46E9C0  +
mov ebx [edi+6Ch] +
mov [edi+60h] eax +
jmp loc_46F4AB  +
***
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+64h] 4 +
mov [edi+16B4h] eax +
jz loc_46F7B6  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_46F7AE  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_46F77C  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_472D60  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_46EF30  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_46F7C6  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_472D60  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_46EF30  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 4Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov edi [esp+10h+arg_4] +
mov eax [ebx+0Ch] +
lea esi [eax-5] +
mov eax 0FFFFh +
cmp esi 0FFFFh +
cmovnb esi eax +
jmp loc_46F89F  +
add edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov dword ptr [ebx+74h] 0 +
test edx edx +
mov [ebx+6Ch] edx +
lea ecx [esi+eax] +
jz loc_46F83F  +
cmp edx ecx +
jb loc_46F88C  +
sub edx ecx +
mov [ebx+74h] edx +
xor edx edx +
mov [ebx+6Ch] ecx +
sub ecx eax +
test eax eax +
js loc_46F854  +
add eax [ebx+38h] +
mov edx eax +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_472D60  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_46EF30  +
mov eax [ebx] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_46F970  +
mov edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov ecx [ebx+2Ch] +
sub edx eax +
sub ecx 106h +
cmp edx ecx +
jnb loc_46F930  +
mov edx [ebx+74h] +
cmp edx 1 +
ja loc_46F824  +
mov eax ebx +
call sub_46EC40  +
mov edx [ebx+74h] +
test edx edx +
jnz loc_46F824  +
test edi edi +
jz loc_46F970  +
cmp edi 4 +
mov dword ptr [ebx+16B4h] 0 +
jz loc_46F979  +
mov ecx [ebx+6Ch] +
mov eax 1 +
mov edx [ebx+5Ch] +
cmp ecx edx +
jle loc_46F972  +
sub ecx edx +
xor al al +
test edx edx +
js loc_46F8F8  +
mov eax [ebx+38h] +
add eax edx +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_472D60  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_46EF30  +
mov eax [ebx] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_46F972  +
xor ecx ecx +
test eax eax +
js loc_46F93B  +
add eax [ebx+38h] +
mov ecx eax +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_472D60  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_46EF30  +
mov eax [ebx] +
mov edx [eax+10h] +
test edx edx +
jnz loc_46F89F  +
lea esi [esi+0] +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+5Ch] +
xor ecx ecx +
mov eax [ebx+6Ch] +
sub eax edx +
test edx edx +
js loc_46F98C  +
mov ecx [ebx+38h] +
add ecx edx +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 1 +
mov [esp+10h+var_10] ebx +
call sub_472D60  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_46EF30  +
mov eax [ebx] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add eax 3 +
jmp loc_46F972  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ecx [esp+50h] +
mov ebx [esp+54h] +
mov esi [esp+58h] +
test ecx ecx +
jz loc_46FBDE  +
mov eax [esp+50h] +
mov edi [eax+1Ch] +
test edi edi +
jz loc_46FBDE  +
test ebx ebx +
jz loc_46FBDE  +
mov eax [edi+18h] +
cmp eax 2 +
mov [esp+24h] eax +
jz loc_46FBDE  +
cmp eax 1 +
jz loc_46FB53  +
mov eax [edi+74h] +
test eax eax +
jnz loc_46FBDE  +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_46FB40  +
mov eax [esp+50h] +
mov eax [eax+4] +
mov [esp+28h] eax +
mov eax [esp+50h] +
mov eax [eax] +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [eax+4] esi +
mov [eax] ebx +
mov eax edi +
call sub_46EC40  +
mov eax [edi+74h] +
cmp eax 2 +
jbe loc_46FAF1  +
mov edx eax +
nop   +
lea esi [esi+0] +
mov esi [edi+58h] +
mov ebx [edi+6Ch] +
mov eax [edi+48h] +
mov ebp [edi+40h] +
mov [esp+10h] esi +
mov esi [edi+38h] +
lea ecx [ebx+edx-2] +
mov [esp+0Ch] ecx +
mov [esp+14h] esi +
mov esi [edi+54h] +
mov [esp+18h] esi +
mov esi [edi+34h] +
mov [esp+1Ch] esi +
mov esi [edi+44h] +
mov [esp+20h] esi +
jmp loc_46FA98  +
mov eax edx +
mov edx [esp+14h] +
movzx ecx byte ptr [esp+10h] +
movzx edx byte ptr [edx+ebx+2] +
shl eax cl +
mov ecx [esp+1Ch] +
xor edx eax +
mov eax [esp+20h] +
and edx [esp+18h] +
and ecx ebx +
lea eax [eax+edx*2] +
movzx esi word ptr [eax] +
mov [edi+48h] edx +
mov [ebp+ecx*2+0] si +
mov [eax] bx +
add ebx 1 +
cmp ebx [esp+0Ch] +
jnz loc_46FA96  +
mov [edi+6Ch] ebx +
mov eax edi +
mov dword ptr [edi+74h] 2 +
call sub_46EC40  +
mov edx [edi+74h] +
cmp edx 2 +
ja loc_46FA60  +
mov eax edx +
mov edx [edi+6Ch] +
mov [edi+16B4h] eax +
mov esi [esp+2Ch] +
mov dword ptr [edi+74h] 0 +
mov dword ptr [edi+78h] 2 +
add edx eax +
mov eax [esp+50h] +
mov [edi+6Ch] edx +
mov [edi+5Ch] edx +
mov dword ptr [edi+60h] 2 +
mov dword ptr [edi+68h] 0 +
mov [eax] esi +
mov esi [esp+28h] +
mov [eax+4] esi +
mov eax [esp+24h] +
mov [edi+18h] eax +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+24h] +
test edx edx +
jz loc_46FB95  +
sub esi eax +
add ebx esi +
mov esi eax +
jmp loc_46FA28  +
***
cmp dword ptr [edi+4] 2Ah +
jnz loc_46FBDE  +
mov edx [edi+74h] +
test edx edx +
jnz loc_46FBDE  +
mov eax [esp+50h] +
mov eax [eax+30h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_46D6B0  +
mov ecx [esp+50h] +
mov [ecx+30h] eax +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_46FB48  +
jmp loc_46FA28  +
***
mov ecx [edi+4Ch] +
xor ebp ebp +
mov eax [edi+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bp +
mov [esp+8] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
mov eax [edi+2Ch] +
mov dword ptr [edi+6Ch] 0 +
mov dword ptr [edi+5Ch] 0 +
mov dword ptr [edi+16B4h] 0 +
jmp loc_46FB48  +
***
mov eax 0FFFFFFFEh +
jmp loc_46FB38  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_46FCC0  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_46FCC0  +
mov edx [ebx+20h] +
test edx edx +
jz loc_46FCC0  +
mov eax [ebx+24h] +
test eax eax +
jz loc_46FCC0  +
mov eax [esi+8] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+2Ch] 2 +
mov [esi+10h] eax +
mov eax [esi+18h] +
mov dword ptr [esi+14h] 0 +
test eax eax +
js loc_46FC91  +
jnz loc_46FC96  +
mov dword ptr [esi+4] 71h +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_46D6B0  +
mov [ebx+30h] eax +
mov dword ptr [esi+28h] 0 +
mov [esp+14h+var_14] esi +
call sub_472A60  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
neg eax  +
mov [esi+18h] eax +
cmp eax 2 +
mov dword ptr [esi+4] 2Ah +
jnz loc_46FC5B  +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_46DBE0  +
jmp loc_46FC77  +
mov eax 0FFFFFFFEh +
jmp loc_46FC8B  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+0Ch+arg_0] +
mov [esp+0Ch+var_C] ebx +
call sub_46FBF0  +
test eax eax +
mov esi eax +
jnz loc_46FD97  +
mov ebx [ebx+1Ch] +
mov eax [ebx+2Ch] +
mov ecx [ebx+4Ch] +
add eax eax +
mov [ebx+3Ch] eax +
mov eax [ebx+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov word ptr [eax+edx*2] 0 +
mov [esp+0Ch+var_4] ecx +
mov [esp+0Ch+var_8] 0 +
mov [esp+0Ch+var_C] eax +
call memset  +
mov eax [ebx+84h] +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+74h] 0 +
lea edx [eax+eax*2] +
shl edx 2 +
lea eax dword_4B6F60[edx] +
movzx ecx word ptr [edx+4B6F62h] +
movzx edx word ptr ds:dword_4B6F60[edx] +
mov dword ptr [ebx+16B4h] 0 +
mov dword ptr [ebx+78h] 2 +
mov [ebx+80h] ecx +
mov [ebx+8Ch] edx +
movzx edx word ptr [eax+4] +
movzx eax word ptr [eax+6] +
mov dword ptr [ebx+60h] 2 +
mov dword ptr [ebx+68h] 0 +
mov [ebx+90h] edx +
mov [ebx+7Ch] eax +
mov dword ptr [ebx+48h] 0 +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_46FDC0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_46FDC0  +
cmp dword ptr [eax+18h] 2 +
jnz loc_46FDC0  +
mov edx [esp+8] +
mov [eax+1Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_46FE05  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_46FE05  +
test ecx ecx +
jz loc_46FDF1  +
mov ebx [eax+14h] +
mov [ecx] ebx +
test edx edx +
jz loc_46FE01  +
mov eax [eax+16BCh] +
mov [edx] eax +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [esp+34h] +
mov ebp [esp+38h] +
test eax eax +
jz loc_46FE94  +
mov esi [eax+1Ch] +
test esi esi +
jz loc_46FE94  +
mov eax [esi+10h] +
add eax 2 +
cmp [esi+16A4h] eax +
jb loc_46FE8D  +
lea esi [esi+0] +
mov edx [esi+16BCh] +
mov ebx 10h +
mov eax 1 +
sub ebx edx +
cmp edi ebx +
cmovle ebx edi +
mov ecx ebx +
shl eax cl +
mov ecx edx +
sub eax 1 +
add edx ebx +
and eax ebp +
shl eax cl +
or [esi+16B8h] ax +
mov [esi+16BCh] edx +
mov [esp] esi +
call sub_472C60  +
mov ecx ebx +
sar ebp cl +
sub edi ebx +
jnz loc_46FE40  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFBh +
jmp loc_46FE85  +
***
mov eax 0FFFFFFFEh +
jmp loc_46FE85  +
***
mov eax [esp+4] +
test eax eax +
jz loc_46FED7  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_46FED7  +
mov edx [esp+8] +
mov [eax+8Ch] edx +
mov edx [esp+0Ch] +
mov [eax+80h] edx +
mov edx [esp+10h] +
mov [eax+90h] edx +
mov edx [esp+14h] +
mov [eax+7Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov ebx [esp+14h] +
lea esi [ecx+7] +
mov edx esi +
lea eax [ecx+3Fh] +
shr edx 3 +
shr eax 6 +
add eax edx +
add eax ecx +
test ebx ebx +
jz loc_46FFC4  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_46FFC4  +
mov edx [ebx+18h] +
cmp edx 1 +
jz loc_46FFB3  +
cmp edx 2 +
jz loc_46FF40  +
cmp edx 1 +
sbb edx edx +
not edx  +
and edx 6 +
cmp dword ptr [ebx+30h] 0Fh +
jz loc_46FF93  +
pop ebx  +
lea eax [edx+eax+5] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [ebx+1Ch] +
test edi edi +
jz loc_46FFD0  +
mov ebp [edi+10h] +
test ebp ebp +
jz loc_46FFE0  +
mov edx [edi+14h] +
add edx 14h +
mov ebp [edi+1Ch] +
test ebp ebp +
jz loc_46FF6F  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_46FF65  +
mov ebp [edi+24h] +
test ebp ebp +
jz loc_46FF82  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_46FF78  +
mov edi [edi+2Ch] +
lea ebp [edx+2] +
test edi edi +
cmovnz edx ebp +
cmp dword ptr [ebx+30h] 0Fh +
jnz loc_46FF32  +
cmp dword ptr [ebx+50h] 0Fh +
jnz loc_46FF32  +
mov eax ecx +
mov ebx ecx +
shr eax 0Ch +
add eax esi +
shr ebx 0Eh +
add eax ebx +
shr ecx 19h +
add eax ecx +
pop ebx  +
add eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [ebx+6Ch] 1 +
sbb edx edx +
and edx 0FFFFFFFCh +
add edx 0Ah +
jmp loc_46FF2C  +
***
pop ebx  +
add eax 0Bh +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 12h +
jmp loc_46FF2C  +
***
mov edx 12h +
jmp loc_46FF5C  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
test edi edi +
jz loc_470BB1  +
mov eax [esp+2Ch+arg_0] +
mov ebp [eax+1Ch] +
test ebp ebp +
jz loc_470BB1  +
cmp [esp+2Ch+arg_4] 5 +
ja loc_470BB1  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_4701BB  +
mov ebx [eax] +
test ebx ebx +
jz loc_470A48  +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_4701B0  +
mov edi [esp+2Ch+arg_0] +
mov edx [edi+10h] +
test edx edx +
jz loc_470C14  +
mov edi [esp+2Ch+arg_0] +
cmp eax 2Ah +
mov [ebp+0] edi +
mov edi [ebp+28h] +
mov [esp+2Ch+var_18] edi +
mov edi [esp+2Ch+arg_4] +
mov [ebp+28h] edi +
jz loc_470311  +
cmp eax 45h +
jz loc_470419  +
cmp eax 49h +
mov edx [ebp+14h] +
jz loc_4704D0  +
cmp eax 5Bh +
jz loc_47077B  +
cmp eax 67h +
jz loc_470AFB  +
test edx edx +
mov eax [esp+2Ch+arg_0] +
jnz loc_4701D1  +
mov edx [eax+4] +
test edx edx +
jnz loc_4706C0  +
mov eax [esp+2Ch+arg_4] +
cmp eax 5 +
lea edx [eax+eax] +
setz al  +
movzx eax al +
lea eax [eax+eax*8] +
sub edx eax +
mov eax [esp+2Ch+var_18] +
cmp eax 5 +
lea ecx [eax+eax] +
setnl al  +
movzx eax al +
lea eax [eax+eax*8] +
sub ecx eax +
cmp edx ecx +
jg loc_4700E4  +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_4706D6  +
mov eax [ebp+4] +
mov ecx [ebp+74h] +
test ecx ecx +
jnz loc_470202  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_470259  +
cmp eax 29Ah +
jnz loc_470202  +
lea esi [esi+0] +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_470259  +
mov eax [ebp+18h] +
test eax eax +
jle loc_470F10  +
cmp eax 2 +
jz loc_470C60  +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea esi [eax+1] +
shr edx 18h +
mov [ebp+14h] esi +
shr ecx 10h +
mov [ebx+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov ebx edx +
shr ebx 8 +
mov [ecx+eax] bl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov eax [esp+2Ch+arg_0] +
call sub_46EF30  +
mov eax [ebp+18h] +
test eax eax +
jle loc_47019C  +
neg eax  +
mov [ebp+18h] eax +
mov edx [ebp+14h] +
xor eax eax +
test edx edx +
setz al  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+2Ch+arg_4] 4 +
jz loc_470040  +
mov eax ds:off_4B4D90 +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFEh +
jmp loc_47025B  +
call sub_46EF30  +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_470305  +
mov eax [esp+2Ch+arg_0] +
mov edx [eax+4] +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_4706CE  +
test edx edx +
jz loc_4700E7  +
mov eax [ebp+88h] +
cmp eax 2 +
jz loc_47051C  +
cmp eax 3 +
jz loc_470783  +
mov eax [ebp+84h] +
mov edi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebp +
lea eax [eax+eax*2] +
mov [esp+2Ch+var_28] edi +
call ds:off_4B6F68[eax*4]  +
mov edx eax +
and edx 0FFFFFFFDh +
lea ecx [eax-2] +
cmp ecx 1 +
jbe loc_470740  +
test edx edx +
jnz loc_470263  +
mov eax [esp+2Ch+arg_0] +
mov edi [eax+10h] +
test edi edi +
jz loc_470305  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_470110  +
cmp [esp+2Ch+arg_4] 1 +
jz loc_470F23  +
cmp [esp+2Ch+arg_4] 5 +
jz loc_4702ED  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_472B40  +
cmp [esp+2Ch+arg_4] 3 +
jnz loc_4702ED  +
mov edi [ebp+4Ch] +
xor ebx ebx +
mov eax [ebp+44h] +
lea edx [edi+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bx +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov esi [ebp+74h] +
test esi esi +
jnz loc_4702ED  +
mov dword ptr [ebp+6Ch] 0 +
mov dword ptr [ebp+5Ch] 0 +
mov dword ptr [ebp+16B4h] 0 +
mov eax [esp+2Ch+arg_0] +
call sub_46EF30  +
mov eax [esp+2Ch+arg_0] +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_470110  +
mov dword ptr [ebp+28h] 0FFFFFFFFh +
jmp loc_470259  +
cmp dword ptr [ebp+18h] 2 +
jz loc_470D03  +
mov eax [ebp+30h] +
shl eax 0Ch +
lea ecx [eax-7800h] +
xor eax eax +
cmp dword ptr [ebp+88h] 1 +
jle loc_470693  +
mov edx [ebp+6Ch] +
or ecx eax +
mov eax ecx +
mov ebx [ebp+8] +
or eax 20h +
mov dword ptr [ebp+4] 71h +
test edx edx +
mov edx 8421085h +
cmovnz ecx eax +
mov eax ecx +
mul  edx +
mov eax [ebp+14h] +
sub ecx edx +
shr ecx 1 +
add ecx edx +
shr ecx 4 +
mov edx ecx +
shl edx 5 +
sub edx ecx +
add edx 1Fh +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov ecx [ebp+6Ch] +
test ecx ecx +
jz loc_4703EA  +
mov eax [esp+2Ch+arg_0] +
mov esi [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea ebx [eax+1] +
shr edx 18h +
mov [ebp+14h] ebx +
shr ecx 10h +
mov [esi+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_46D6B0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
mov eax [ebp+4] +
cmp eax 45h +
jnz loc_470076  +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov edi [ecx+10h] +
test edi edi +
jz loc_470C05  +
mov edx [ebp+14h] +
movzx ebx word ptr [ecx+14h] +
cmp ebx [ebp+20h] +
mov edi edx +
jbe loc_4704A6  +
mov eax edx +
mov esi ecx +
jmp loc_47046F  +
lea ebx [eax+1] +
mov esi [ebp+8] +
mov [ebp+14h] ebx +
mov ebx [ecx+10h] +
mov ecx [ebp+20h] +
movzx ecx byte ptr [ebx+ecx] +
mov [esi+eax] cl +
mov ecx [ebp+1Ch] +
mov eax [ebp+20h] +
movzx ebx word ptr [ecx+14h] +
mov esi ecx +
add eax 1 +
mov [ebp+20h] eax +
cmp ebx eax +
jbe loc_4704A1  +
mov eax [ebp+14h] +
cmp [ebp+0Ch] eax +
jnz loc_470440  +
mov esi [esi+2Ch] +
test esi esi +
jz loc_470483  +
cmp eax edx +
ja loc_470A20  +
mov eax [esp+2Ch+arg_0] +
call sub_46EF30  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov edi edx +
jz loc_470BFD  +
mov eax edx +
mov ecx [ebp+1Ch] +
jmp loc_470440  +
mov edx [ebp+14h] +
mov eax ecx +
mov ebx [eax+2Ch] +
test ebx ebx +
jz loc_4704B5  +
cmp edi edx +
jb loc_470BBB  +
mov edi [eax+14h] +
cmp [ebp+20h] edi +
jz loc_470618  +
mov eax [ebp+4] +
cmp eax 49h +
jnz loc_470082  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
jmp loc_470626  +
mov eax [ebp+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_4704E8  +
add eax [ebp+38h] +
mov ecx eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_472D60  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_46EF30  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_47024A  +
mov eax [ebp+74h] +
jmp loc_470586  +
mov eax [ebp+6Ch] +
xor ebx ebx +
mov edx [ebp+38h] +
mov dword ptr [ebp+60h] 0 +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
mov edi [ebp+6Ch] +
lea ecx [eax-1] +
mov eax [ebp+74h] +
lea edx [edi+1] +
mov [ebp+6Ch] edx +
sub eax 1 +
cmp [ebp+16A0h] ecx +
mov [ebp+74h] eax +
jz loc_4704D8  +
test eax eax +
jnz loc_470521  +
mov eax ebp +
call sub_46EC40  +
mov edi [ebp+74h] +
test edi edi +
jnz loc_470521  +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_47024A  +
cmp [esp+2Ch+arg_4] 4 +
mov dword ptr [ebp+16B4h] 0 +
jz loc_4706EC  +
mov eax [ebp+16A0h] +
test eax eax +
jz loc_47026C  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_4705DA  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_472D60  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_46EF30  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
lea ecx [eax-2] +
mov edx eax +
jmp loc_47023D  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 49h +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_470C32  +
mov ebx edx +
mov ecx edx +
jmp loc_470661  +
mov esi [eax+1Ch] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_470750  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_470637  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_470675  +
cmp edx ecx +
jb loc_4709F8  +
mov eax [esp+2Ch+arg_0] +
call sub_46EF30  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_470BE9  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_470637  +
mov edx [ebp+84h] +
cmp edx 1 +
jle loc_470336  +
cmp edx 5 +
mov al 40h +
jle loc_470336  +
cmp edx 6 +
mov al 80h +
mov edx 0C0h +
cmovnz eax edx +
jmp loc_470336  +
mov eax [ebp+4] +
cmp eax 29Ah +
jnz loc_470202  +
test edx edx +
jz loc_4700E7  +
mov eax ds:off_4B4D9C +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_47025B  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_4706FF  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_472D60  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_46EF30  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
cmp ecx 1 +
sbb edx edx +
add edx 1 +
cmp ecx 1 +
sbb eax eax +
add eax 3 +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+4] 29Ah +
jmp loc_470246  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_470767  +
cmp ebx edx +
jb loc_470EA6  +
test esi esi +
jz loc_470A58  +
mov eax [ebp+4] +
cmp eax 5Bh +
jnz loc_47008B  +
mov eax [ebp+1Ch] +
jmp loc_470A69  +
movzx eax ds:byte_4B7240 +
lea edi ds:0[eax*4] +
jmp loc_47080A  +
mov dword ptr [ebp+60h] 0 +
mov esi [ebp+6Ch] +
mov edx [ebp+38h] +
test esi esi +
jnz loc_470860  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_18] +
xor ebx ebx +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub dword ptr [ebp+74h] 1 +
add dword ptr [ebp+6Ch] 1 +
test eax eax +
jnz loc_4709AC  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_470793  +
mov eax ebp +
call sub_46EC40  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_470793  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_47024A  +
test eax eax +
jz loc_4705A4  +
cmp eax 2 +
mov dword ptr [ebp+60h] 0 +
ja loc_47079A  +
mov eax [ebp+6Ch] +
mov edx [ebp+38h] +
mov [esp+2Ch+var_18] eax +
jmp loc_4707B0  +
lea ebx [edx+esi-1] +
movzx ecx byte ptr [ebx] +
mov [esp+2Ch+var_18] esi +
mov [esp+2Ch+var_14] ecx +
movzx ecx byte ptr [ebx] +
cmp [ebx+1] cl +
jnz loc_4707B0  +
movzx ecx byte ptr [ebx+2] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_4707B0  +
movzx ecx byte ptr [ebx+3] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_4707B0  +
lea ecx [edx+esi+102h] +
add ebx 3 +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] ecx +
jmp loc_470910  +
movzx ecx byte ptr [ebx+2] +
cmp eax ecx +
jnz loc_470F6A  +
movzx ecx byte ptr [ebx+3] +
cmp eax ecx +
jnz loc_470F9A  +
movzx ecx byte ptr [ebx+4] +
cmp eax ecx +
jnz loc_470F8E  +
movzx ecx byte ptr [ebx+5] +
cmp eax ecx +
jnz loc_470F82  +
movzx ecx byte ptr [ebx+6] +
cmp eax ecx +
jnz loc_470F76  +
movzx ecx byte ptr [ebx+7] +
cmp eax ecx +
jnz loc_470F5E  +
add ebx 8 +
movzx ecx byte ptr [ebx] +
cmp eax ecx +
jnz loc_470F1A  +
cmp ebx [esp+2Ch+var_18] +
jnb loc_470F1A  +
movzx ecx byte ptr [ebx+1] +
cmp eax ecx +
jz loc_4708B0  +
mov eax [esp+2Ch+var_10] +
add ebx 1 +
sub ebx [esp+2Ch+var_18] +
lea ecx [ebx+102h] +
cmp ecx eax +
mov [ebp+60h] ecx +
jbe loc_470EFC  +
mov [ebp+60h] eax +
mov ecx eax +
mov eax [ebp+16A0h] +
lea edx [ecx-3] +
mov esi 1 +
mov ecx [ebp+16A4h] +
lea ebx [eax+1] +
mov [ecx+eax*2] si +
mov ecx [ebp+1698h] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
movzx edx dl +
movzx eax ds:byte_4B7140[edx] +
add word ptr [ebp+eax*4+498h] 1 +
add word ptr [ebp+edi+988h] 1 +
mov eax [ebp+169Ch] +
mov edx [ebp+60h] +
mov dword ptr [ebp+60h] 0 +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub [ebp+74h] edx +
add [ebp+6Ch] edx +
test eax eax +
jz loc_47080A  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_4709BF  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_472D60  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_46EF30  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
jnz loc_47080A  +
jmp loc_47024A  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_470675  +
mov edi [esp+2Ch+arg_0] +
sub eax edx +
mov ecx [edi+30h] +
mov [esp+2Ch+var_24] eax +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edx +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_470483  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_470032  +
jmp loc_4701BB  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 5Bh +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_470C26  +
mov ebx edx +
mov ecx edx +
jmp loc_470AA6  +
mov esi [eax+24h] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_470AD4  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_470A80  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_470AB6  +
cmp edx ecx +
jb loc_470B11  +
mov eax [esp+2Ch+arg_0] +
call sub_46EF30  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_470BF3  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_470A80  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_470AEB  +
cmp ebx edx +
jb loc_470ED1  +
test esi esi +
jz loc_470B36  +
mov eax [ebp+4] +
cmp eax 67h +
jnz loc_470094  +
mov eax [ebp+1Ch] +
mov esi [eax+2Ch] +
test esi esi +
jnz loc_470B47  +
mov dword ptr [ebp+4] 71h +
jmp loc_470094  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_470AB6  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+4] 67h +
mov esi [eax+2Ch] +
test esi esi +
jz loc_470B05  +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_470C3E  +
lea eax [edx+1] +
mov ecx [ebp+8] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
mov [ecx+edx] al +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov dword ptr [ebp+4] 71h +
jmp loc_470094  +
mov eax 0FFFFFFFEh +
jmp loc_47025B  +
mov eax [esp+2Ch+arg_0] +
sub edx edi +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add edi [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov eax [ebp+1Ch] +
jmp loc_4704B5  +
mov esi 1 +
jmp loc_470755  +
mov esi 1 +
jmp loc_470AD9  +
mov eax [ebp+1Ch] +
jmp loc_4704A6  +
mov dword ptr [ebp+4] 49h +
mov edx [ebp+14h] +
jmp loc_470626  +
mov eax ds:off_4B4D9C +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_47025B  +
mov dword ptr [ebp+4] 67h +
jmp loc_470B40  +
mov dword ptr [ebp+4] 5Bh +
jmp loc_470A69  +
mov eax [esp+2Ch+arg_0] +
call sub_46EF30  +
mov edx [ebp+14h] +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_470094  +
jmp loc_470B53  +
mov eax [ebp+14h] +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+30h] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+32h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+33h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+8] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+8] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+0Ah] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+0Bh] +
mov [edx+eax] cl +
jmp loc_470187  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+8] +
mov [edi+30h] eax +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 1Fh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8Bh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8 +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_470FA6  +
mov edi [eax] +
mov ebx [ebp+14h] +
mov esi [ebp+8] +
test edi edi +
setnz cl  +
cmp dword ptr [eax+2Ch] 1 +
lea edx [ebx+1] +
mov [ebp+14h] edx +
sbb edx edx +
not edx  +
and edx 2 +
add ecx edx +
cmp dword ptr [eax+10h] 1 +
sbb edx edx +
not edx  +
and edx 4 +
add ecx edx +
cmp dword ptr [eax+1Ch] 1 +
sbb edx edx +
not edx  +
and edx 8 +
add edx ecx +
cmp dword ptr [eax+24h] 1 +
sbb eax eax +
not eax  +
and eax 10h +
add eax edx +
mov [esi+ebx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+4] +
mov [edx+eax] cl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+4] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx word ptr [ecx+6] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx byte ptr [ecx+7] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_470E34  +
cmp dword ptr [ebp+88h] 1 +
jle loc_471043  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+0Ch] +
mov [edx+eax] cl +
mov ecx [ebp+1Ch] +
mov esi [ecx+10h] +
test esi esi +
jz loc_471053  +
mov eax [ebp+14h] +
mov ebx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ecx+14h] +
mov [ebx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+14h] +
shr eax 8 +
mov [ecx+edx] al +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov ebx [ecx+2Ch] +
test ebx ebx +
jnz loc_470F30  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 45h +
jmp loc_47041E  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_470767  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_470AEB  +
cmp ecx 2 +
ja loc_470939  +
mov [esp+2Ch+var_18] esi +
jmp loc_4707B0  +
mov eax 1 +
jmp loc_47025B  +
mov eax [esp+2Ch+var_10] +
jmp loc_47091F  +
mov [esp+2Ch+var_2C] ebp +
call sub_472C70  +
jmp loc_4702ED  +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+14h] +
mov edx [ebp+8] +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_46DBE0  +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+1Ch] +
mov [edi+30h] eax +
mov eax ecx +
jmp loc_470E93  +
mov eax [esp+2Ch+var_10] +
add ebx 7 +
jmp loc_47091F  +
mov eax [esp+2Ch+var_10] +
add ebx 2 +
jmp loc_47091F  +
mov eax [esp+2Ch+var_10] +
add ebx 6 +
jmp loc_47091F  +
mov eax [esp+2Ch+var_10] +
add ebx 5 +
jmp loc_47091F  +
mov eax [esp+2Ch+var_10] +
add ebx 4 +
jmp loc_47091F  +
mov eax [esp+2Ch+var_10] +
add ebx 3 +
jmp loc_47091F  +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_471022  +
cmp dword ptr [ebp+88h] 1 +
jle loc_47105A  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0Bh +
mov edx [ebp+14h] +
mov dword ptr [ebp+4] 71h +
jmp loc_470094  +
cmp edx 1 +
jle loc_470E2F  +
xor eax eax +
jmp loc_470E34  +
mov eax ecx +
jmp loc_470E88  +
cmp edx 1 +
lea esi [esi+0] +
jle loc_47101D  +
xor eax eax +
jmp loc_471022  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
test edx edx +
jz loc_471160  +
mov ebx [edx+1Ch] +
test ebx ebx +
jz loc_471160  +
cmp esi 0FFFFFFFFh +
jz loc_471121  +
cmp esi 9 +
ja loc_471160  +
cmp edi 4 +
ja loc_471160  +
mov ecx [ebx+84h] +
cmp [ebx+88h] edi +
lea eax [ecx+ecx*2] +
mov eax ds:off_4B6F68[eax*4] +
jz loc_471130  +
mov ebp [edx+8] +
xor eax eax +
test ebp ebp +
jnz loc_471140  +
cmp esi ecx +
jz loc_471113  +
lea ecx [esi+esi*2] +
shl ecx 2 +
lea edx dword_4B6F60[ecx] +
mov [ebx+84h] esi +
movzx esi word ptr [ecx+4B6F62h] +
movzx ecx word ptr ds:dword_4B6F60[ecx] +
mov [ebx+80h] esi +
mov [ebx+8Ch] ecx +
movzx ecx word ptr [edx+4] +
movzx edx word ptr [edx+6] +
mov [ebx+90h] ecx +
mov [ebx+7Ch] edx +
mov [ebx+88h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi 6 +
jmp loc_4710A8  +
***
lea ebp [esi+esi*2] +
cmp ds:off_4B6F68[ebp*4] eax +
jnz loc_4710C9  +
xor eax eax +
jmp loc_4710D2  +
***
mov dword ptr [esp+4] 5 +
mov [esp] edx +
call sub_46FFF0  +
mov ecx [ebx+84h] +
jmp loc_4710D2  +
***
mov eax 0FFFFFFFEh +
jmp loc_471119  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_47125D  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_47125D  +
mov esi [eax+4] +
cmp esi 2Ah +
jnz loc_471224  +
mov edx [eax+8] +
test edx edx +
jz loc_4711B1  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+44h] +
test edx edx +
jz loc_4711CA  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+40h] +
test edx edx +
jz loc_4711E3  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_4711FC  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov edx [ebx+24h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ecx +
call edx  +
xor eax eax +
cmp esi 71h +
setnz al  +
mov dword ptr [ebx+1Ch] 0 +
lea eax [eax+eax*2-3] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 45h +
jz loc_471198  +
cmp esi 49h +
jz loc_471198  +
cmp esi 5Bh +
jz loc_471198  +
cmp esi 67h +
jz loc_471198  +
cmp esi 71h +
jz loc_471198  +
cmp esi 29Ah +
jz loc_471198  +
mov eax 0FFFFFFFEh +
jmp loc_47121E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_14] +
mov ebp [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_1C] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
test eax eax +
jz loc_4714E0  +
cmp byte ptr [eax] 31h +
jnz loc_4714E0  +
cmp edx 38h +
jnz loc_4714E0  +
test esi esi +
jz loc_4714F0  +
mov eax [esi+20h] +
mov dword ptr [esi+18h] 0 +
test eax eax +
jz loc_471510  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_471500  +
cmp edi 0FFFFFFFFh +
mov eax 6 +
cmovz edi eax +
test ebp ebp +
js loc_4714D0  +
cmp ebp 0Fh +
mov edx 1 +
jg loc_4714C4  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] edx +
sub eax 1 +
cmp eax 8 +
ja loc_4714F0  +
cmp ecx 8 +
jnz loc_4714F0  +
lea eax [ebp-8] +
cmp eax 7 +
ja loc_4714F0  +
cmp edi 9 +
ja loc_4714F0  +
cmp [esp+2Ch+var_14] 4 +
ja loc_4714F0  +
mov ecx [esi+28h] +
cmp ebp 8 +
mov eax 9 +
cmovz ebp eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_24] 16C4h +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ecx +
call eax  +
test eax eax +
mov ebx eax +
jz loc_471541  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov [esi+1Ch] eax +
mov [eax+30h] ebp +
mov [eax] esi +
mov [eax+18h] edx +
mov edx 1 +
shl edx cl +
mov dword ptr [eax+1Ch] 0 +
lea eax [edx-1] +
mov ebp edx +
mov [ebx+34h] eax +
mov eax [esp+2Ch+var_18] +
mov [ebx+2Ch] edx +
mov edx 1 +
lea ecx [eax+7] +
add eax 9 +
shl edx cl +
mov [ebx+50h] ecx +
mov ecx edx +
mov [ebx+4Ch] edx +
mov edx 0AAAAAAABh +
sub ecx 1 +
mul  edx +
mov eax [esi+20h] +
mov [ebx+54h] ecx +
shr edx 1 +
mov [ebx+58h] edx +
mov edx [esi+28h] +
mov [esp+2Ch+var_24] 2 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+2Ch] +
mov edx [esi+28h] +
mov [ebx+38h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov ecx [ebx+4Ch] +
mov edx [esi+28h] +
mov [ebx+40h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov edx [esi+28h] +
mov dword ptr [ebx+16C0h] 0 +
mov [ebx+44h] eax +
mov eax [esp+2Ch+var_18] +
lea ecx [eax+6] +
mov eax 1 +
shl eax cl +
mov [ebx+169Ch] eax +
mov ecx eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 4 +
call eax  +
mov edx [ebx+169Ch] +
lea ecx ds:0[edx*4] +
mov [ebx+0Ch] ecx +
mov ecx [ebx+38h] +
mov [ebx+8] eax +
test ecx ecx +
jz loc_471523  +
mov ebp [ebx+40h] +
test ebp ebp +
jz loc_471523  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_471523  +
test eax eax +
jz loc_471523  +
mov ecx edx +
and ecx 0FFFFFFFEh +
lea edx [edx+edx*2] +
add ecx eax +
add eax edx +
mov [ebx+1698h] eax +
mov eax [esp+2Ch+var_14] +
mov [ebx+16A4h] ecx +
mov [ebx+84h] edi +
mov byte ptr [ebx+24h] 8 +
mov [ebx+88h] eax +
mov [esp+2Ch+arg_0] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_46FCD0  +
sub ebp 10h +
mov dl 2 +
jmp loc_4712FF  +
neg ebp  +
xor edx edx +
jmp loc_4712FF  +
mov eax 0FFFFFFFAh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi+24h] offset loc_46D600 +
jmp loc_4712DE  +
mov dword ptr [esi+20h] offset loc_46D5E0 +
mov dword ptr [esi+28h] 0 +
jmp loc_4712D3  +
mov eax ds:off_4B4D98 +
mov dword ptr [ebx+4] 29Ah +
mov [esi+18h] eax +
mov [esp+2Ch+var_2C] esi +
call sub_471170  +
mov eax 0FFFFFFFCh +
jmp loc_4714E5  +
mov eax 0FFFFFFFCh +
jmp loc_4714E5  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 8 +
mov [esp+2Ch+var_20] 0Fh +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 8 +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_471270  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
test eax eax +
jz loc_471835  +
test ebp ebp +
jz loc_471835  +
mov edx [eax+1Ch] +
test edx edx +
mov [esp+0Ch] edx +
jz loc_471835  +
mov ecx [eax] +
mov [ebp+0] ecx +
mov ecx [eax+4] +
mov [ebp+4] ecx +
mov ecx [eax+8] +
mov [ebp+8] ecx +
mov ecx [eax+0Ch] +
mov [ebp+0Ch] ecx +
mov ecx [eax+10h] +
mov [ebp+10h] ecx +
mov ecx [eax+14h] +
mov [ebp+14h] ecx +
mov ecx [eax+18h] +
mov [ebp+18h] ecx +
mov ecx [eax+1Ch] +
mov [ebp+1Ch] ecx +
mov ecx [eax+20h] +
mov [ebp+20h] ecx +
mov ebx [eax+24h] +
mov [ebp+24h] ebx +
mov ebx [eax+28h] +
mov [ebp+28h] ebx +
mov esi [eax+2Ch] +
mov [ebp+2Ch] esi +
mov esi [eax+30h] +
mov [ebp+30h] esi +
mov eax [eax+34h] +
mov [ebp+34h] eax +
mov [esp] ebx +
mov dword ptr [esp+8] 16C4h +
mov dword ptr [esp+4] 1 +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_471850  +
test bl 1 +
mov edi eax +
mov esi [esp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 16C4h +
jnz loc_471820  +
test edi 2 +
jnz loc_471805  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_4717F0  +
test al 1 +
jnz loc_4717E3  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov eax [ebp+20h] +
mov [ebx] ebp +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov [ebx+38h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+4Ch] +
mov ecx [ebp+28h] +
mov [ebx+40h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+169Ch] +
mov ecx [ebp+28h] +
mov [ebx+44h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov dword ptr [esp+8] 4 +
mov [esp] ecx +
call eax  +
mov esi eax +
mov [ebx+8] eax +
mov eax [ebx+38h] +
test eax eax +
jz loc_471840  +
mov ecx [ebx+40h] +
test ecx ecx +
jz loc_471840  +
mov edx [ebx+44h] +
test edx edx +
jz loc_471840  +
test esi esi +
jz loc_471840  +
mov edi [esp+0Ch] +
mov ecx [ebx+2Ch] +
mov edx [edi+38h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
mov ecx [ebx+2Ch] +
mov edx [edi+40h] +
mov eax [ebx+40h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+4Ch] +
mov edx [edi+44h] +
mov eax [ebx+44h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+0Ch] +
mov edx [edi+8] +
mov eax [ebx+8] +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [edi+10h] +
mov edx [ebx+8] +
add eax edx +
sub eax [edi+8] +
mov [ebx+10h] eax +
mov eax [ebx+169Ch] +
mov ecx eax +
lea eax [eax+eax*2] +
and ecx 0FFFFFFFEh +
add edx eax +
add esi ecx +
lea eax [ebx+94h] +
mov [ebx+0B18h] eax +
lea eax [ebx+988h] +
mov [ebx+0B24h] eax +
lea eax [ebx+0A7Ch] +
mov [ebx+0B30h] eax +
xor eax eax +
mov [ebx+16A4h] esi +
mov [ebx+1698h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
jmp loc_47167A  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_47167A  +
jmp loc_4717E3  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_471663  +
***
movzx eax byte ptr [esi] +
lea edi [ebx+1] +
lea esi [esi+1] +
mov [ebx] al +
mov eax 16C3h +
jmp loc_471657  +
***
mov eax 0FFFFFFFEh +
jmp loc_4717DB  +
***
mov [esp] ebp +
call sub_471170  +
mov eax 0FFFFFFFCh +
jmp loc_4717DB  +
***
mov eax 0FFFFFFFCh +
jmp loc_4717DB  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 18h +
mov edx [eax+1450h] +
lea ebp [ecx+2D4h] +
add ecx ecx +
mov ebx [eax+ebp*4+0Ch] +
cmp ecx edx +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_10] ebx +
jg loc_471900  +
lea edx [edi+ebx*4] +
mov [esp+20h+var_18] edx +
jmp loc_4718BA  +
mov edx [eax+ecx*4+0B5Ch] +
mov ebx ecx +
movzx esi word ptr [edi+edx*4] +
mov ecx [esp+20h+var_18] +
cmp [ecx] si +
jb loc_471900  +
jz loc_471910  +
lea ecx [ebx+ebx] +
cmp ecx [esp+20h+var_20] +
mov [eax+ebp*4+0Ch] edx +
lea ebp [ebx+2D4h] +
jg loc_471900  +
cmp ecx [esp+20h+var_20] +
jge loc_471890  +
mov esi [eax+ecx*4+0B5Ch] +
lea ebx [ecx+1] +
mov edx [eax+ecx*4+0B60h] +
mov [esp+20h+var_14] esi +
movzx esi word ptr [edi+esi*4] +
mov word ptr [esp+20h+var_1C] si +
movzx esi word ptr [edi+edx*4] +
cmp si word ptr [esp+20h+var_1C] +
jb loc_47189D  +
jz loc_471935  +
mov ebx ecx +
mov ecx [esp+20h+var_18] +
movzx esi word ptr [esp+20h+var_1C] +
mov edx [esp+20h+var_14] +
cmp [ecx] si +
jnb loc_4718A6  +
nop   +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+20h+var_10] +
movzx ecx byte ptr [eax+edx+1458h] +
cmp [eax+esi+1458h] cl +
ja loc_4718A8  +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+20h+var_C] ebx +
mov ebx [esp+20h+var_14] +
mov [esp+20h+var_1C] ecx +
movzx ecx byte ptr [eax+edx+1458h] +
cmp cl [eax+ebx+1458h] +
mov ecx [esp+20h+var_1C] +
cmova edx ebx +
mov ebx [esp+20h+var_C] +
cmova ebx ecx +
jmp loc_47189D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [edx+8] +
mov ecx [edx] +
mov [esp+4Ch+var_44] edx +
mov ebp [eax+0Ch] +
mov edi [eax] +
mov [esp+4Ch+var_28] ecx +
mov dword ptr [ebx+1450h] 0 +
test ebp ebp +
mov dword ptr [ebx+1454h] 23Dh +
jle loc_471DDC  +
mov edx ecx +
xor eax eax +
mov ecx 0FFFFFFFFh +
jmp loc_4719DC  +
mov ecx [ebx+1450h] +
add edx 4 +
lea esi [ecx+1] +
mov [ebx+1450h] esi +
mov [ebx+ecx*4+0B60h] eax +
mov ecx eax +
mov byte ptr [ebx+eax+1458h] 0 +
add eax 1 +
cmp eax ebp +
jz loc_4719F2  +
cmp word ptr [edx] 0 +
jnz loc_4719B2  +
xor esi esi +
add eax 1 +
mov [edx+2] si +
add edx 4 +
cmp eax ebp +
jnz loc_4719DC  +
mov esi ecx +
mov ecx [ebx+1450h] +
mov [esp+4Ch+var_4C] ebp +
mov ebp [esp+4Ch+var_28] +
jmp loc_471A38  +
mov [ebx+ecx*4+0B5Ch] eax +
mov ecx 1 +
mov [ebp+edx+0] cx +
mov byte ptr [ebx+eax+1458h] 0 +
sub dword ptr [ebx+16A8h] 1 +
test edi edi +
jz loc_471A32  +
movzx eax word ptr [edi+edx+2] +
sub [ebx+16ACh] eax +
mov ecx [ebx+1450h] +
cmp ecx 1 +
jg loc_471A5D  +
add ecx 1 +
xor edx edx +
xor eax eax +
cmp esi 1 +
mov [ebx+1450h] ecx +
jg loc_471A03  +
add esi 1 +
lea edx ds:0[esi*4] +
mov eax esi +
jmp loc_471A03  +
mov edi [esp+4Ch+var_44] +
sar ecx 1 +
mov ebp [esp+4Ch+var_4C] +
mov [esp+4Ch+var_24] esi +
mov [edi+4] esi +
mov edi [esp+4Ch+var_28] +
mov esi ecx +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_471860  +
sub esi 1 +
jnz loc_471A73  +
mov eax [ebx+1450h] +
mov edi [esp+4Ch+var_28] +
jmp loc_471A92  +
mov ebp esi +
lea edx [eax-1] +
mov eax [ebx+eax*4+0B5Ch] +
mov ecx 1 +
mov esi [ebx+0B60h] +
mov [ebx+1450h] edx +
mov edx edi +
mov [ebx+0B60h] eax +
mov eax ebx +
call sub_471860  +
mov edx [ebx+1454h] +
mov eax [ebx+0B60h] +
lea ecx [edx-2] +
mov [ebx+edx*4+0B58h] esi +
mov [ebx+1454h] ecx +
lea ecx [edi+esi*4] +
mov [ebx+edx*4+0B54h] eax +
mov edx ecx +
lea ecx [edi+eax*4] +
mov [esp+4Ch+var_48] ecx +
movzx ecx word ptr [ecx] +
add cx [edx] +
mov [edi+ebp*4] cx +
movzx ecx byte ptr [ebx+esi+1458h] +
mov byte ptr [esp+4Ch+var_4C] cl +
movzx ecx byte ptr [ebx+eax+1458h] +
movzx eax byte ptr [esp+4Ch+var_4C] +
lea esi [ecx+1] +
add eax 1 +
cmp byte ptr [esp+4Ch+var_4C] cl +
mov ecx 1 +
cmovb eax esi +
mov [ebx+ebp+1458h] al +
mov eax [esp+4Ch+var_48] +
lea esi [ebp+1] +
mov [eax+2] bp +
mov eax ebx +
mov [edx+2] bp +
mov edx edi +
mov [ebx+0B60h] ebp +
call sub_471860  +
mov eax [ebx+1450h] +
cmp eax 1 +
jg loc_471A90  +
mov eax [ebx+1454h] +
mov ecx [ebx+0B60h] +
lea edx [eax-1] +
mov [ebx+1454h] edx +
xor edx edx +
mov [ebx+eax*4+0B58h] ecx +
mov eax [esp+4Ch+var_44] +
mov edi [eax] +
mov ebp [eax+4] +
mov eax [eax+8] +
mov [esp+4Ch+var_48] edi +
mov edi [eax] +
mov [esp+4Ch+var_30] edi +
mov edi [eax+4] +
mov [esp+4Ch+var_2C] edi +
mov edi [eax+8] +
mov eax [eax+10h] +
mov [esp+4Ch+var_38] edi +
xor esi esi +
mov [ebx+edx*2+0B3Ch] si +
add edx 1 +
cmp edx 10h +
jnz loc_471B96  +
mov edi [esp+4Ch+var_48] +
xor edx edx +
mov [edi+ecx*4+2] dx +
mov edx [ebx+1454h] +
lea ecx [edx+1] +
cmp ecx 23Ch +
jg loc_471D69  +
mov [esp+4Ch+var_44] ebp +
mov ebp [esp+4Ch+var_48] +
lea ecx [ebx+1450h] +
lea edi [ebx+edx*4+0B60h] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_3C] ebx +
mov edx [edi] +
lea esi ds:0[edx*4] +
lea ecx [ebp+esi+0] +
movzx eax word ptr [ecx+2] +
movzx eax word ptr [ebp+eax*4+2] +
add eax 1 +
cmp [esp+4Ch+var_4C] eax +
jge loc_471C16  +
add [esp+4Ch+var_34] 1 +
mov eax [esp+4Ch+var_4C] +
cmp [esp+4Ch+var_44] edx +
mov [ecx+2] ax +
jl loc_471C6C  +
mov ebx [esp+4Ch+var_3C] +
add word ptr [ebx+eax*2+0B3Ch] 1 +
xor ebx ebx +
cmp [esp+4Ch+var_38] edx +
jg loc_471C40  +
mov ebx [esp+4Ch+var_2C] +
sub edx [esp+4Ch+var_38] +
mov ebx [ebx+edx*4] +
movzx edx word ptr [ecx] +
add eax ebx +
mov ecx ebx +
mov ebx [esp+4Ch+var_3C] +
imul eax edx +
add [ebx+16A8h] eax +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_471C6C  +
movzx eax word ptr [eax+esi+2] +
add eax ecx +
imul eax edx +
add [ebx+16ACh] eax +
add edi 4 +
cmp edi [esp+4Ch+var_40] +
jnz loc_471BF0  +
mov edx [esp+4Ch+var_34] +
mov ebp [esp+4Ch+var_44] +
mov eax [esp+4Ch+var_4C] +
mov ebx [esp+4Ch+var_3C] +
test edx edx +
jz loc_471D69  +
lea ecx [eax-1] +
lea edi [eax+597h] +
lea esi [ebx+eax*2] +
mov [esp+4Ch+var_4C] ebp +
mov ebp edx +
mov [esp+4Ch+var_40] eax +
mov eax ecx +
mov [esp+4Ch+var_44] ecx +
movzx ecx word ptr [ebx+edi*2+0Ch] +
mov edx eax +
test cx cx +
jnz loc_471CC7  +
sub edx 1 +
movzx ecx word ptr [ebx+edx*2+0B3Ch] +
test cx cx +
jz loc_471CB7  +
sub ecx 1 +
sub ebp 2 +
add word ptr [ebx+edx*2+0B3Eh] 2 +
mov [ebx+edx*2+0B3Ch] cx +
movzx ecx word ptr [esi+0B3Ch] +
sub ecx 1 +
test ebp ebp +
mov [esi+0B3Ch] cx +
jg loc_471CAB  +
mov eax [esp+4Ch+var_40] +
mov ebp [esp+4Ch+var_4C] +
test eax eax +
jz loc_471D69  +
mov edx 23Dh +
movzx ecx cx +
test ecx ecx +
jz loc_471D4E  +
mov [esp+4Ch+var_4C] ebp +
lea esi [esi+0] +
sub edx 1 +
mov esi [ebx+edx*4+0B5Ch] +
cmp [esp+4Ch+var_4C] esi +
jl loc_471D47  +
mov edi [esp+4Ch+var_48] +
lea esi [edi+esi*4] +
movzx edi word ptr [esi+2] +
cmp edi eax +
jz loc_471D44  +
mov ebp eax +
sub ebp edi +
mov edi ebp +
movzx ebp word ptr [esi] +
imul edi ebp +
add [ebx+16A8h] edi +
mov [esi+2] ax +
sub ecx 1 +
test ecx ecx +
jnz loc_471D10  +
mov ebp [esp+4Ch+var_4C] +
mov edi [esp+4Ch+var_44] +
test edi edi +
mov eax edi +
jz loc_471D69  +
movzx ecx word ptr [ebx+edi*2+0B3Ch] +
sub edi 1 +
mov [esp+4Ch+var_44] edi +
jmp loc_471D03  +
add ebx 0B3Ch +
xor edx edx +
mov eax 1 +
add dx [ebx+eax*2-2] +
add edx edx +
mov [esp+eax*2+4Ch+var_20] dx +
add eax 1 +
cmp eax 10h +
jnz loc_471D76  +
mov eax [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_28] +
cmp eax 0FFFFFFFFh +
lea edi [esi+eax*4+4] +
jz loc_471DD4  +
nop   +
lea esi [esi+0] +
movzx edx word ptr [esi+2] +
test edx edx +
jz loc_471DCD  +
movzx ecx [esp+edx*2+4Ch+var_20] +
xor ebx ebx +
lea eax [ecx+1] +
mov [esp+edx*2+4Ch+var_20] ax +
mov eax ecx +
and eax 1 +
or eax ebx +
shr ecx 1 +
sub edx 1 +
lea ebx [eax+eax] +
jnz loc_471DB7  +
shr ebx 1 +
mov [esi] bx +
add esi 4 +
cmp esi edi +
jnz loc_471DA0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebp +
xor ecx ecx +
mov esi 0FFFFFFFFh +
mov ebp [esp+4Ch+var_28] +
jmp loc_471A38  +
***
push esi  +
push ebx  +
sub esp 8 +
movzx ebx word ptr [edx+2] +
lea esi ds:4[ecx*4] +
mov word ptr [edx+esi+2] 0FFFFh +
cmp ebx 1 +
sbb ebp ebp +
add ebp 4 +
cmp ebx 1 +
sbb edi edi +
and edi 83h +
add edi 7 +
test ecx ecx +
js loc_471EAC  +
add esi edx +
xor ecx ecx +
mov [esp+8+var_4] esi +
mov [esp+8+var_8] 0FFFFFFFFh +
jmp loc_471E65  +
add [eax+ebx*4+0A7Ch] cx +
test esi esi +
jz loc_471E97  +
cmp ebx esi +
setnz cl  +
movzx ebp cl +
movzx edi cl +
add ebp 3 +
add edi 6 +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
jz loc_471EAC  +
mov [esp+8+var_8] ebx +
mov ebx esi +
add ecx 1 +
movzx esi word ptr [edx+6] +
cmp ecx edi +
jge loc_471E74  +
cmp ebx esi +
jz loc_471EC6  +
cmp ecx ebp +
jl loc_471E38  +
test ebx ebx +
jz loc_471EB4  +
cmp [esp+8+var_8] ebx +
nop   +
jz loc_471E8B  +
add word ptr [eax+ebx*4+0A7Ch] 1 +
add word ptr [eax+0ABCh] 1 +
test esi esi +
jnz loc_471E44  +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
mov ebp 3 +
mov edi 8Ah +
jnz loc_471E60  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 0Ah +
jg loc_471ED0  +
add word ptr [eax+0AC0h] 1 +
jmp loc_471E40  +
mov ebx [esp+8+var_8] +
jmp loc_471E57  +
add word ptr [eax+0AC4h] 1 +
jmp loc_471E40  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
movzx eax word ptr [edx+2] +
cmp eax 1 +
sbb esi esi +
add esi 4 +
cmp eax 1 +
sbb ebx ebx +
and ebx 83h +
add ebx 7 +
test ecx ecx +
mov [esp+20h+var_1C] eax +
js loc_4721E4  +
lea eax [edx+ecx*4+4] +
xor edi edi +
mov [esp+20h+var_14] edx +
mov edx 0FFFFFFFFh +
mov [esp+20h+var_20] edi +
mov edi ebp +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+var_14] +
movzx eax word ptr [eax+6] +
mov [esp+20h+var_18] eax +
mov eax [esp+20h+var_20] +
lea ebp [eax+1] +
cmp ebp ebx +
jge loc_471F4B  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
jz loc_4722E0  +
cmp ebp esi +
jge loc_472044  +
mov eax [esp+20h+var_1C] +
mov [esp+20h+var_20] ebp +
lea edx [edi+eax*4] +
mov ebp edx +
jmp loc_471FC0  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [edi+14h] +
or cx [edi+16B8h] +
lea esi [ebx+1] +
mov [edi+14h] esi +
mov esi [edi+8] +
mov [edi+16B8h] cx +
mov [esi+ebx] cl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov ebx [edi+16BCh] +
mov ecx 10h +
sub ecx ebx +
sar edx cl +
sub [esp+20h+var_20] 1 +
lea eax [eax+ebx-10h] +
mov [edi+16B8h] dx +
mov [edi+16BCh] eax +
jz loc_471FF6  +
movzx eax word ptr [ebp+0A7Eh] +
mov edx 10h +
mov ecx [edi+16BCh] +
sub edx eax +
cmp ecx edx +
movzx edx word ptr [ebp+0A7Ch] +
jg loc_471F61  +
shl edx cl +
add eax ecx +
or [edi+16B8h] dx +
sub [esp+20h+var_20] 1 +
mov [edi+16BCh] eax +
jnz loc_471FC0  +
mov eax [esp+20h+var_18] +
test eax eax +
jz loc_4721C0  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
mov [esp+20h+var_20] 0 +
setnz bl  +
movzx esi bl +
movzx ebx bl +
add esi 3 +
add ebx 6 +
add [esp+20h+var_14] 4 +
mov eax [esp+20h+var_10] +
cmp [esp+20h+var_14] eax +
jz loc_4721E4  +
mov eax [esp+20h+var_18] +
mov edx [esp+20h+var_1C] +
mov [esp+20h+var_1C] eax +
jmp loc_471F27  +
mov ecx [esp+20h+var_1C] +
test ecx ecx +
jz loc_4721F0  +
cmp edx [esp+20h+var_1C] +
jz loc_472431  +
mov eax [esp+20h+var_1C] +
mov ebx 10h +
mov ecx [edi+16BCh] +
lea edx [edi+eax*4] +
movzx eax word ptr [edx+0A7Eh] +
sub ebx eax +
cmp ecx ebx +
movzx ebx word ptr [edx+0A7Ch] +
jle loc_472414  +
mov edx [edi+14h] +
mov esi ebx +
shl esi cl +
mov ebp [edi+8] +
mov ecx esi +
or cx [edi+16B8h] +
lea esi [edx+1] +
mov [edi+14h] esi +
mov [edi+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [edi+14h] +
mov esi [edi+8] +
lea ecx [edx+1] +
mov [edi+14h] ecx +
movzx ecx byte ptr [edi+16B9h] +
mov [esi+edx] cl +
mov edx [edi+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [eax+edx-10h] +
mov [edi+16B8h] bx +
mov [edi+16BCh] ecx +
movzx eax word ptr [edi+0ABEh] +
mov edx 10h +
sub edx eax +
cmp edx ecx +
movzx edx word ptr [edi+0ABCh] +
jge loc_4722F0  +
mov esi edx +
mov ebp [edi+8] +
shl esi cl +
mov ecx [edi+14h] +
or ebx esi +
mov [edi+16B8h] bx +
lea esi [ecx+1] +
mov [edi+14h] esi +
mov [ebp+ecx+0] bl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov esi [edi+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edx cl +
lea ecx [eax+esi-10h] +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jle loc_47230C  +
mov ebp [esp+20h+var_20] +
mov esi [edi+14h] +
sub ebp 3 +
movzx ebp bp +
mov eax ebp +
shl eax cl +
or edx eax +
mov eax [edi+8] +
lea ecx [esi+1] +
mov [edi+16B8h] dx +
mov [edi+14h] ecx +
mov [eax+esi] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Eh +
mov [edi+16BCh] eax +
mov eax [esp+20h+var_18] +
sar ebp cl +
mov [edi+16B8h] bp +
test eax eax +
jnz loc_472002  +
lea esi [esi+0] +
add [esp+20h+var_14] 4 +
mov esi 3 +
mov eax [esp+20h+var_10] +
mov ebx 8Ah +
cmp [esp+20h+var_14] eax +
mov [esp+20h+var_20] 0 +
jnz loc_472033  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebp 0Ah +
jg loc_472330  +
movzx esi word ptr [edi+0AC2h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_472446  +
movzx ebx word ptr [edi+0AC0h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
cmp ecx 0Dh +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jle loc_47246E  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 2 +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_471FF6  +
mov [esp+20h+var_20] ebp +
mov [esp+20h+var_1C] edx +
jmp loc_472020  +
shl edx cl +
add ecx eax +
or edx ebx +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jg loc_472157  +
movzx ebp word ptr [esp+20h+var_20] +
sub ebp 3 +
movzx ebp bp +
shl ebp cl +
add ecx 2 +
or edx ebp +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jmp loc_471FF6  +
movzx esi word ptr [edi+0AC6h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_4724B0  +
movzx ebx word ptr [edi+0AC4h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
cmp ecx 9 +
jle loc_472490  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 0Ah +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 9 +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_471FF6  +
shl ebx cl +
add ecx eax +
or bx [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] bx +
jmp loc_4720DE  +
mov ecx [edi+16BCh] +
movzx ebx word ptr [edi+16B8h] +
mov [esp+20h+var_20] ebp +
jmp loc_4720DE  +
movzx eax word ptr [edi+0AC0h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
cmp ecx 0Dh +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jg loc_47227E  +
lea edx [ebp-3] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_471FF6  +
lea edx [ebp-0Bh] +
movzx edx dx +
shl edx cl +
add ecx 7 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_471FF6  +
movzx eax word ptr [edi+0AC4h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jmp loc_4723AC  +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebp [eax+16BCh] +
mov [esp+18h+var_10] edx +
mov edx [eax+16A0h] +
mov [esp+18h+var_8] ecx +
test edx edx +
jnz loc_472551  +
movzx esi word ptr [eax+16B8h] +
mov word ptr [esp+18h+var_18] si +
mov ebx [esp+18h+var_10] +
movzx edi word ptr [ebx+402h] +
mov ebx 10h +
mov edx ebx +
sub edx edi +
cmp edx ebp +
jl loc_4728F8  +
mov ebx [esp+18h+var_10] +
mov ecx ebp +
lea edx [edi+ebp] +
movzx esi word ptr [ebx+400h] +
mov [eax+16BCh] edx +
shl esi cl +
or si word ptr [esp+18h+var_18] +
mov [eax+16B8h] si +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebx word ptr [eax+16B8h] +
xor ecx ecx +
mov edx ecx +
mov ecx ebp +
mov esi ebx +
jmp loc_4725E9  +
mov ebx [esp+18h+var_10] +
mov edi 10h +
lea ebx [ebx+edx*4] +
movzx edx word ptr [ebx+2] +
sub edi edx +
cmp edi ecx +
jge loc_472878  +
movzx ebp word ptr [ebx] +
mov ebx ebp +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi ebp +
sub ecx edi +
sar esi cl +
lea ecx [edx+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
jnb loc_472850  +
mov edx edi +
mov ebx [eax+16A4h] +
lea edi [edx+1] +
mov [esp+18h+var_18] edi +
mov edi [eax+1698h] +
movzx ebx word ptr [ebx+edx*2] +
movzx edx byte ptr [edi+edx] +
test ebx ebx +
jz loc_472565  +
mov [esp+18h+var_C] edx +
mov edi [esp+18h+var_10] +
movzx edx ds:byte_4B7140[edx] +
lea edi [edi+edx*4+404h] +
movzx ebp word ptr [edi+2] +
mov [esp+18h+var_14] edx +
mov edx 10h +
movzx edi word ptr [edi] +
sub edx ebp +
cmp edx ecx +
jge loc_472860  +
mov edx edi +
shl edx cl +
mov ecx [eax+14h] +
mov [esp+18h+var_4] edi +
mov edi [eax+8] +
or esi edx +
mov [eax+16B8h] si +
lea edx [ecx+1] +
mov [eax+14h] edx +
mov edx esi +
mov [edi+ecx] dl +
mov ecx [eax+14h] +
mov edi [eax+8] +
lea esi [ecx+1] +
mov [eax+14h] esi +
movzx esi byte ptr [eax+16B9h] +
mov edx esi +
mov esi [esp+18h+var_4] +
mov [edi+ecx] dl +
mov edi [eax+16BCh] +
mov ecx 10h +
sub ecx [eax+16BCh] +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_14] +
mov ebp ds:dword_4B7A40[edi*4] +
test ebp ebp +
jz loc_472723  +
mov edx [esp+18h+var_14] +
mov edi [esp+18h+var_C] +
sub edi ds:dword_4B70C0[edx*4] +
mov edx 10h +
sub edx ebp +
cmp edx ecx +
jge loc_4728C5  +
movzx edi di +
mov edx edi +
shl edx cl +
or esi edx +
mov edx [eax+14h] +
mov [eax+16B8h] si +
mov ecx esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov esi [eax+8] +
mov [esi+edx] cl +
mov edx [eax+14h] +
mov esi [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx byte ptr [eax+16B9h] +
mov [esi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
mov esi edi +
sub ecx edx +
sar esi cl +
lea ecx [ebp+edx-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
lea edi [ebx-1] +
cmp edi 0FFh +
ja loc_4728B0  +
movzx ebx ds:byte_4B7240[edi] +
mov [esp+18h+var_14] ebx +
mov edx [esp+18h+var_14] +
mov ebx [esp+18h+var_8] +
lea ebx [ebx+edx*4] +
mov edx 10h +
movzx ebp word ptr [ebx+2] +
movzx ebx word ptr [ebx] +
sub edx ebp +
cmp edx ecx +
mov [esp+18h+var_C] ebp +
jge loc_472893  +
mov ebp [eax+14h] +
mov edx ebx +
shl ebx cl +
mov ecx [eax+8] +
or ebx esi +
mov [eax+16B8h] bx +
lea esi [ebp+1] +
mov [eax+14h] esi +
mov [ecx+ebp] bl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov ebp [eax+16BCh] +
mov ecx 10h +
mov ebx [esp+18h+var_C] +
mov esi edx +
sub ecx ebp +
sar esi cl +
lea ecx [ebx+ebp-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov ebx [esp+18h+var_14] +
mov ebp ds:dword_4B79C0[ebx*4] +
test ebp ebp +
jz loc_4725D8  +
sub edi ds:dword_4B7040[ebx*4] +
mov ebx 10h +
sub ebx ebp +
cmp ebx ecx +
movzx edx di +
jge loc_4728E0  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi edx +
sub ecx edi +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jb loc_4725E7  +
nop   +
lea esi [esi+0] +
mov ebp ecx +
mov word ptr [esp+18h+var_18] si +
jmp loc_47250A  +
shl edi cl +
add ecx ebp +
or esi edi +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_47269D  +
movzx ebx word ptr [ebx] +
shl ebx cl +
add ecx edx +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4725D8  +
shl ebx cl +
add ecx [esp+18h+var_C] +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4727BA  +
mov edx edi +
shr edx 7 +
movzx ebx ds:byte_4B7340[edx] +
mov [esp+18h+var_14] ebx +
jmp loc_47273D  +
movzx edx di +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_472723  +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4725D8  +
mov esi [esp+18h+var_10] +
mov ecx ebp +
mov ebp [eax+8] +
movzx esi word ptr [esi+400h] +
mov edx esi +
shl edx cl +
mov ecx edx +
mov edx [eax+14h] +
or cx word ptr [esp+18h+var_18] +
mov [esp+18h+var_14] esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [eax+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov ebp [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebp+edx+0] cl +
mov edx [eax+16BCh] +
mov ebp [esp+18h+var_14] +
sub ebx edx +
mov ecx ebx +
sar ebp cl +
lea edx [edi+edx-10h] +
mov [eax+16B8h] bp +
mov [eax+16BCh] edx +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 8 +
jg loc_4729B0  +
test edx edx +
jle loc_472996  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
jmp loc_472996  +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 10h +
jz loc_472A18  +
cmp edx 7 +
jle loc_472A16  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
shr word ptr [eax+16B8h] 8 +
sub dword ptr [eax+16BCh] 8 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
lea eax [edx+94h] +
mov [edx+0B18h] eax +
lea eax [edx+988h] +
mov [edx+0B24h] eax +
lea eax [edx+0A7Ch] +
mov [edx+0B30h] eax +
xor eax eax +
mov [edx+16B8h] ax +
xor eax eax +
mov dword ptr [edx+0B20h] offset off_492FA8 +
mov dword ptr [edx+0B2Ch] offset off_492F94 +
mov dword ptr [edx+0B38h] offset unk_492F80 +
mov dword ptr [edx+16BCh] 0 +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+94h] cx +
add eax 1 +
cmp eax 11Eh +
jnz loc_472AC0  +
xor ax ax +
xor ecx ecx +
mov [edx+eax*4+988h] cx +
add eax 1 +
cmp eax 1Eh +
jnz loc_472AD7  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_472AF0  +
mov eax 1 +
mov [edx+494h] ax +
mov dword ptr [edx+16ACh] 0 +
mov dword ptr [edx+16A8h] 0 +
mov dword ptr [edx+16B0h] 0 +
mov dword ptr [edx+16A0h] 0 +
retn   +
***
push esi  +
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
movzx eax [esp+arg_C] +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_472BF3  +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov eax ebx +
call sub_472970  +
mov eax [ebx+14h] +
lea ebp [esi+edi] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
shr cx 8 +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
not ecx  +
mov [edx+eax] cl +
mov edx [ebx+14h] +
mov ecx [ebx+8] +
lea eax [edx+1] +
mov [ebx+14h] eax +
mov eax edi +
not eax  +
shr ax 8 +
test edi edi +
mov [ecx+edx] al +
jz loc_472BEE  +
mov eax [ebx+14h] +
add esi 1 +
mov ecx [ebx+8] +
cmp esi ebp +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [esi-1] +
mov [ecx+eax] dl +
jnz loc_472BD4  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or cx [ebx+16B8h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebx+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebp+edx+0] cl +
mov edx [ebx+16BCh] +
mov ecx 10h +
sub ecx edx +
sub edx 0Dh +
sar eax cl +
mov [ebx+16B8h] ax +
mov [ebx+16BCh] edx +
jmp loc_472B76  +
***
mov eax [esp+arg_0] +
jmp loc_4729E0  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax+16BCh] +
cmp ecx 0Dh +
jle loc_472CF5  +
mov ebx 2 +
mov edx [eax+14h] +
mov edi ebx +
mov esi [eax+8] +
shl edi cl +
mov ecx edi +
or cx [eax+16B8h] +
lea edi [edx+1] +
mov [eax+14h] edi +
mov [eax+16B8h] cx +
mov [esi+edx] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov edi [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [edi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [edx-0Dh] +
cmp ecx 9 +
mov [eax+16B8h] bx +
mov [eax+16BCh] ecx +
jg loc_472D11  +
add ecx 7 +
mov [eax+16BCh] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_4729E0  +
mov edx 2 +
shl edx cl +
add ecx 3 +
or [eax+16B8h] dx +
cmp ecx 9 +
mov [eax+16BCh] ecx +
jle loc_472CE4  +
mov edx [eax+14h] +
movzx ecx word ptr [eax+16B8h] +
mov ebx [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
sub dword ptr [eax+16BCh] 9 +
mov [eax+16B8h] dx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_4729E0  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [esp+24h+arg_C] +
mov edi [esp+24h+arg_4] +
mov esi [esp+24h+arg_8] +
mov ebp [ebx+84h] +
mov [esp+24h+var_C] eax +
test ebp ebp +
jle loc_4731BF  +
mov ecx [ebx] +
cmp dword ptr [ecx+2Ch] 2 +
jz loc_4731CB  +
lea edx [ebx+0B18h] +
mov eax ebx +
call sub_471970  +
lea edx [ebx+0B24h] +
mov eax ebx +
call sub_471970  +
mov ecx [ebx+0B1Ch] +
lea edx [ebx+94h] +
mov eax ebx +
call sub_471DF0  +
mov ecx [ebx+0B28h] +
lea edx [ebx+988h] +
mov eax ebx +
call sub_471DF0  +
mov eax ebx +
lea edx [ebx+0B30h] +
call sub_471970  +
mov eax 12h +
movzx edx ds:byte_4B7940[eax] +
cmp word ptr [ebx+edx*4+0A7Eh] 0 +
jnz loc_473174  +
sub eax 1 +
cmp eax 2 +
jnz loc_472DE7  +
mov ecx 9 +
mov edx [ebx+16A8h] +
lea ecx [ecx+edx+0Eh] +
mov edx [ebx+16ACh] +
mov [ebx+16A8h] ecx +
add ecx 0Ah +
shr ecx 3 +
add edx 0Ah +
shr edx 3 +
cmp ecx edx +
cmova ecx edx +
lea ebp [esi+4] +
cmp ecx ebp +
jb loc_472EEA  +
test edi edi +
jz loc_472EEA  +
mov eax [esp+24h+var_C] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_472B40  +
xor eax eax +
nop   +
xor edi edi +
mov [ebx+eax*4+94h] di +
add eax 1 +
cmp eax 11Eh +
jnz loc_472E60  +
xor ax ax +
xor esi esi +
mov [ebx+eax*4+988h] si +
add eax 1 +
cmp eax 1Eh +
jnz loc_472E77  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [ebx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_472E90  +
mov edx [esp+24h+var_C] +
mov eax 1 +
mov [ebx+494h] ax +
mov dword ptr [ebx+16ACh] 0 +
mov dword ptr [ebx+16A8h] 0 +
test edx edx +
mov dword ptr [ebx+16B0h] 0 +
mov dword ptr [ebx+16A0h] 0 +
jnz loc_473166  +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+88h] 4 +
jz loc_47317D  +
cmp edx ecx +
jz loc_47317D  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_47323B  +
movzx edi word ptr [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or dx [ebx+16B8h] +
mov [ebx+16BCh] ecx +
mov [ebx+16B8h] dx +
mov esi edx +
mov edi [ebx+0B28h] +
cmp ecx 0Bh +
lea ebp [eax+1] +
mov [esp+24h+var_8] edi +
mov edi [ebx+0B1Ch] +
mov [esp+24h+var_4] edi +
jle loc_473356  +
lea edx [edi-100h] +
movzx edi dx +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov esi edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Bh +
jle loc_473338  +
movzx edi word ptr [esp+24h+var_8] +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov edx edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Ch +
jle loc_473317  +
sub eax 3 +
movzx edi ax +
mov eax edi +
shl eax cl +
mov ecx [ebx+8] +
or edx eax +
mov eax [ebx+14h] +
mov [ebx+16B8h] dx +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [ecx+eax] dl +
mov eax [ebx+14h] +
mov ecx [ebx+8] +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [ebx+16B9h] +
mov [ecx+eax] dl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sar edi cl +
lea ecx [eax-0Ch] +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
xor eax eax +
mov [esp+24h+var_14] ebp +
jmp loc_4730FB  +
movzx edx word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
mov esi edx +
shl esi cl +
mov ecx [ebx+14h] +
or esi edi +
mov edi [ebx+8] +
mov [esp+24h+var_10] edx +
mov edx esi +
mov [ebx+16B8h] si +
lea ebp [ecx+1] +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov esi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_10] +
sub ecx esi +
sub esi 0Dh +
sar edx cl +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] esi +
jle loc_473130  +
mov ecx [ebx+16BCh] +
movzx edi word ptr [ebx+16B8h] +
cmp ecx 0Dh +
movzx edx ds:byte_4B7940[eax] +
jg loc_473080  +
movzx esi word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
shl esi cl +
add ecx 3 +
or esi edi +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] si +
mov [ebx+16BCh] ecx +
jg loc_4730EE  +
mov ecx [esp+24h+var_4] +
lea esi [ebx+94h] +
mov eax ebx +
mov edx esi +
lea edi [ebx+988h] +
call sub_471EE0  +
mov ecx [esp+24h+var_8] +
mov edx edi +
mov eax ebx +
call sub_471EE0  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_4724E0  +
jmp loc_472E5C  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_472970  +
lea ecx [eax+eax*2+3] +
jmp loc_472E0A  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_4732B0  +
movzx eax word ptr [esp+24h+var_C] +
add eax 2 +
movzx eax ax +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov ecx offset unk_4B7440 +
mov edx offset unk_4B74C0 +
mov eax ebx +
call sub_4724E0  +
jmp loc_472E5C  +
lea ecx [esi+5] +
xor eax eax +
mov edx ecx +
jmp loc_472E31  +
xor eax eax +
mov edx 0F3FFC07Fh +
test dl 1 +
jz loc_4731E6  +
cmp word ptr [ebx+eax*4+94h] 0 +
jnz loc_47337F  +
add eax 1 +
shr edx 1 +
cmp eax 20h +
jnz loc_4731D2  +
cmp word ptr [ebx+0B8h] 0 +
mov edx 1 +
jnz loc_473233  +
cmp word ptr [ebx+0BCh] 0 +
jnz loc_473233  +
cmp word ptr [ebx+0C8h] 0 +
jz loc_473223  +
jmp loc_473233  +
add eax 1 +
cmp eax 100h +
jz loc_47337F  +
cmp word ptr [ebx+eax*4+94h] 0 +
jz loc_473215  +
mov edx 1 +
mov [ecx+2Ch] edx +
jmp loc_472D95  +
mov edi [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
mov edi edx +
shl edi cl +
mov ecx [ebx+14h] +
mov esi edi +
mov edi [ebx+8] +
or si [ebx+16B8h] +
mov [esp+24h+var_14] edx +
lea ebp [ecx+1] +
mov edx esi +
mov [ebx+16B8h] si +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov edi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_14] +
sub ecx edi +
sar edx cl +
lea ecx [edi-0Dh] +
mov esi edx +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_472F34  +
mov eax [esp+24h+var_C] +
mov esi [ebx+8] +
lea edx [eax+2] +
movzx edx dx +
mov eax edx +
shl eax cl +
mov ecx eax +
mov eax [ebx+14h] +
or cx [ebx+16B8h] +
lea edi [eax+1] +
mov [ebx+14h] edi +
mov [ebx+16B8h] cx +
mov [esi+eax] cl +
mov eax [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
mov edi [ebx+8] +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [edi+eax] cl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar edx cl +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] eax +
jmp loc_4731A9  +
lea eax [ebp-4] +
movzx eax ax +
shl eax cl +
add ecx 4 +
or eax edx +
mov [ebx+16B8h] ax +
mov edi eax +
mov [ebx+16BCh] ecx +
jmp loc_473075  +
movzx edx word ptr [esp+24h+var_8] +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_473015  +
movzx edi word ptr [esp+24h+var_4] +
lea edx [edi-100h] +
movzx edx dx +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov esi edx +
mov [ebx+16BCh] ecx +
jmp loc_472FB2  +
xor edx edx +
jmp loc_473233  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+16A0h] +
mov esi [eax+16A4h] +
test ecx ecx +
mov [esi+edx*2] cx +
lea esi [edx+1] +
mov [eax+16A0h] esi +
mov esi [eax+1698h] +
mov [esi+edx] bl +
jz loc_473420  +
movzx edx ds:byte_4B7140[ebx] +
lea esi [ecx-1] +
add dword ptr [eax+16B0h] 1 +
add word ptr [eax+edx*4+498h] 1 +
cmp esi 0FFh +
jbe loc_473411  +
shr esi 7 +
movzx edx ds:byte_4B7340[esi] +
add word ptr [eax+edx*4+988h] 1 +
mov ebx [eax+169Ch] +
lea edx [ebx-1] +
cmp [eax+16A0h] edx +
pop ebx  +
pop esi  +
setz al  +
movzx eax al +
retn   +
***
movzx edx ds:byte_4B723F[ecx] +
jmp loc_4733F0  +
***
add word ptr [eax+ebx*4+94h] 1 +
jmp loc_4733F9  +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_492FC4 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_4C15DC +
mov esi ds:dword_4C15D8 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_4734A5  +
cmp [esp+14h+var_14] esi +
jle loc_4734A5  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_4734C4  +
test edx edx +
jle loc_4734FD  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_473490  +
cmp esi edi +
jg loc_473464  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_4C15D8 edi +
mov ds:dword_4C15DC eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_4734F5  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_4734E0  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_473460  +
add edi edx +
jmp loc_473460  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_492FC4 +
mov ds:dword_4C15D4 0 +
test eax eax +
jnz loc_473770  +
mov dword_492FC4 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_4C15D8 eax +
mov ds:dword_4C15DC eax +
mov ds:dword_4C15E8 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_4C15E0 eax +
cmp dl 2Dh +
jz loc_473A03  +
cmp dl 2Bh +
jz loc_4739B2  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_4C15E4 eax +
mov ds:dword_4C15D0 1 +
mov edx ds:dword_4C15E8 +
test edx edx +
jz loc_473783  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_473783  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_473834  +
mov eax dword_492FC4 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_473632  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_473834  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_473632  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_473632  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_473628  +
jmp loc_473EEA  +
cmp bl dl +
jz loc_473BA3  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_473620  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_473653  +
cmp al 3Dh +
jnz loc_473649  +
jmp loc_473653  +
test al al +
jz loc_473653  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_473645  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_473B02  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_4736A4  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_4736E8  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_473698  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_473AD3  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_473690  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_4736A4  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_473A70  +
mov eax dword_492FC0 +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_47373F  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_4C15E8 +
mov esi dword_492FC4 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_492FC4 esi +
mov dword_492FBC 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_4C15E8 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_4C15D0 +
test esi esi +
jz loc_47353D  +
jmp loc_473592  +
mov eax dword_492FC4 +
cmp ds:dword_4C15D8 eax +
jle loc_473795  +
mov ds:dword_4C15D8 eax +
cmp eax ds:dword_4C15DC +
jge loc_4737A2  +
mov ds:dword_4C15DC eax +
mov ebx ds:dword_4C15E4 +
cmp ebx 1 +
jz loc_473920  +
cmp [esp+4Ch+arg_0] eax +
jz loc_47398C  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_4B7AD0 +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_4738F0  +
mov edx ds:dword_4C15DC +
add eax 1 +
mov ecx ds:dword_4C15D8 +
mov dword_492FC4 eax +
cmp edx ecx +
jz loc_473AE0  +
cmp eax ecx +
jz loc_473811  +
mov eax [esp+4Ch+arg_4] +
call sub_473430  +
mov edx ds:dword_4C15DC +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_4C15D8 eax +
mov dword_492FC4 eax +
jnz loc_47399F  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_4C15E8 ecx +
test al al +
jz loc_473872  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_473D61  +
mov eax [esp+4Ch+arg_8] +
jmp loc_473868  +
cmp dl bl +
jz loc_473A17  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_473860  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_47388A  +
add dword_492FC4 1 +
test dl dl +
jz loc_473A41  +
mov ecx dword_492FC0 +
test ecx ecx +
jz loc_473A61  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_4C15E0 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_473CDB  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_492FBC eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_4739C6  +
test ebx ebx +
jz loc_473827  +
add eax 1 +
mov dword_492FC4 eax +
mov eax 1 +
mov ds:dword_4C15D4 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_4C15DC +
mov edx ds:dword_4C15D8 +
cmp ecx edx +
jz loc_473B91  +
cmp eax edx +
jz loc_473946  +
mov eax [esp+4Ch+arg_4] +
call sub_473430  +
mov eax dword_492FC4 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_47397C  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_473969  +
add edx 1 +
cmp edx esi +
mov dword_492FC4 edx +
jz loc_473A30  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_473958  +
cmp byte ptr [eax+1] 0 +
jz loc_473958  +
mov eax dword_492FC4 +
mov ds:dword_4C15D8 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_4737BB  +
mov eax ds:dword_4C15D8 +
mov edx ds:dword_4C15DC +
cmp eax edx +
jz loc_473827  +
mov dword_492FC4 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4C15E4 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_473588  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_4738FA  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_473B87  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_4C15E8 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_4735B3  +
mov ds:dword_4C15E4 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_473588  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_473879  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_4C15D8 edx +
jmp loc_473982  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_473BB7  +
cmp dl 3Ah +
jz loc_473CA2  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_473915  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4738DB  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_473B02  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_492FC4 eax +
cmp byte ptr [esi] 0 +
jnz loc_473AEC  +
cmp dword ptr [ebx+4] 1 +
jz loc_473DAB  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_4C15E8 eax +
jz loc_473ABC  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_473DFD  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_473915  +
mov esi [esp+4Ch+var_18] +
jmp loc_473A80  +
mov ds:dword_4C15DC eax +
mov edx eax +
jmp loc_473811  +
mov eax [ebx+4] +
test eax eax +
jz loc_473CE8  +
add esi 1 +
mov ds:dword_4C15D4 esi +
jmp loc_473A9B  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_473EF4  +
mov esi dword_492FC0 +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_473B61  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_47404E  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_492FC4 +
add eax 1 +
mov dword_492FC4 eax +
mov eax 3Fh +
mov ds:dword_4C15E8 offset unk_4B7BBC +
mov dword_492FBC 0 +
jmp loc_473915  +
mov eax 1 +
jmp loc_4739E9  +
cmp eax ecx +
jz loc_473946  +
mov ds:dword_4C15DC eax +
jmp loc_473946  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_4C15E8 ecx +
jmp loc_47384C  +
cmp dl 3Bh +
jnz loc_473A4E  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_473EBD  +
add dword_492FC4 1 +
mov ds:dword_4C15D4 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_4C15E8 eax +
cmp bl 3Dh +
jz loc_474193  +
test bl bl +
jz loc_474193  +
mov esi eax +
jmp loc_473C04  +
test bl bl +
jz loc_473C0F  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_473C00  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_47417F  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_473C68  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_473E05  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_473C58  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_474032  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_473C50  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_473C58  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_473DD7  +
cmp byte ptr [eax+1] 0 +
jz loc_473D7D  +
add dword_492FC4 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_4C15D4 ecx +
mov ds:dword_4C15E8 0 +
jmp loc_473915  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_4738C9  +
mov eax dword_492FC0 +
test eax eax +
jz loc_473A9B  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_473F54  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_4C15E8 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_4C15E8 esi +
mov dword_492FBC eax +
mov eax 3Fh +
jmp loc_473915  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_473879  +
mov eax dword_492FC4 +
cmp eax [esp+4Ch+arg_0] +
jz loc_473F81  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_492FC4 edx +
mov eax [ecx+eax*4] +
mov ds:dword_4C15D4 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_473CCC  +
cmp [esp+4Ch+arg_0] eax +
jle loc_473E7D  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_492FC4 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_4C15D4 eax +
jmp loc_473A9B  +
cmp byte ptr [eax+1] 0 +
jz loc_473F45  +
add dword_492FC4 1 +
mov ds:dword_4C15D4 ecx +
mov ds:dword_4C15E8 0 +
jmp loc_473A57  +
mov eax [ebx+0Ch] +
jmp loc_473915  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_473FAF  +
mov ecx dword_492FC0 +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_473E5C  +
mov eax dword_492FC4 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_4C15E8 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_492FC4 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_4C15E8 ebx +
jmp loc_473915  +
mov eax dword_492FC0 +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_474082  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_4C15E8 esi +
mov dword_492FBC eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_4738E0  +
mov eax 3Ah +
jmp loc_473915  +
mov eax dword_492FC4 +
cmp eax [esp+4Ch+arg_0] +
jz loc_4740BA  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_492FC4 edx +
mov eax [edi+eax*4] +
mov ds:dword_4C15D4 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_473BDF  +
movzx eax [esp+4Ch+var_19] +
jmp loc_473BA5  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_474041  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_473F2F  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_4741CF  +
mov edx [esp+4Ch+arg_8] +
jmp loc_473F25  +
cmp cl bl +
jz loc_473BA5  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_473F1D  +
cmp dword_492FC0 0 +
jnz loc_473B27  +
mov eax [esp+4Ch+var_24] +
jmp loc_473B61  +
mov ds:dword_4C15D4 0 +
jmp loc_473DEE  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_473D39  +
mov eax dword_492FC0 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_474154  +
mov eax [esp+4Ch+arg_8] +
mov dword_492FBC ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_473CCC  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_47417F  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_47410A  +
cmp dword ptr [eax+4] 0 +
jnz loc_4741C1  +
cmp dword_492FC0 0 +
jz loc_47400E  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_4C15E8 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_4C15E8 eax +
mov eax 3Fh +
jmp loc_473915  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_473FC3  +
cmp dword_492FC0 0 +
jz loc_473F3C  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_492FC4 +
jmp loc_473B61  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_4C15E8 +
jmp loc_473E8E  +
mov eax dword_492FC0 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_4740EE  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_492FBC ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_473915  +
cmp dword ptr [eax+4] 1 +
jz loc_47419C  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_4C15E8 eax +
jz loc_474135  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_4741D9  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_473915  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_473F93  +
mov ds:dword_4C15E8 0 +
mov eax 57h +
jmp loc_473915  +
mov esi [esp+4Ch+var_34] +
jmp loc_473C0F  +
mov eax dword_492FC4 +
cmp [esp+4Ch+arg_0] eax +
jle loc_4741E5  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_492FC4 edx +
mov eax [ecx+eax*4] +
mov ds:dword_4C15D4 eax +
jmp loc_474114  +
add esi 1 +
mov ds:dword_4C15D4 esi +
jmp loc_474114  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_473BA5  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_473915  +
cmp dword_492FC0 0 +
jz loc_474218  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_4C15E8 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_4C15E8 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_4738E0  +
jmp loc_473EB3  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_473510  +
add esp 2Ch +
retn   +
***
mov eax [esp+arg_0] +
mov off_492FC8 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
cmovz ebx edx +
test eax eax +
jz loc_4743A0  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_4743AA  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call malloc  +
jmp loc_474396  +
mov [esp+18h+var_18] ebx +
call sub_4742A0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+18h+var_10] +
cmp [esp+18h+var_14] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_47467C  +
shl edx 3 +
cmp ebx edx +
ja loc_474673  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_47469B  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_4746B7  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_474575  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_474652  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_474568  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_4B7D00[eax] +
mov edx ds:dword_4B7D0C[eax] +
mov eax ds:dword_4B7D00[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_47463F  +
cmp eax 1 +
jz loc_4746F1  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_47462A  +
cmp edx 1 +
jz loc_4746F1  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_474621  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_474575  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_4746C1  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_47451D  +
call sub_474450  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_4B7D00[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_47452C  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_474548  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_47466B  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_0] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_474450  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_4B7D00[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_4747C3  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_4747B0  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_4747C3  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_474450  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4B7D00[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_47485F  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_474850  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_47485F  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4747D0  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset loc_474320 +
mov dword ptr [esp+10h] offset loc_474320 +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4747D0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset calloc +
mov [esp+2Ch+var_1C] offset calloc +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4747D0  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_4749B1  +
sub ebx 1 +
js loc_4749B1  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_474997  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_47499C  +
mov eax [edi+28h] +
test eax eax +
jz loc_4749D0  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_4749F2  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_474A3B  +
lea esi [esi+0] +
sub ebx 1 +
js loc_474A3B  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_474A20  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_474A25  +
cmp edi 40000h +
jbe loc_474A90  +
mov eax 100h +
call sub_474450  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4B7D00[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_474AC0  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_474AD8  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_474AA7  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_474A67  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_474A67  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_474A85  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_4B7D00[eax] +
mov eax ds:dword_4B7D00[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_474C10  +
cmp edx 1 +
jz loc_474C20  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_474C04  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_4B7D00[eax] +
mov eax ds:dword_4B7D00[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_474C10  +
cmp ebp 1 +
jz loc_474BC3  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_474C02  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_474BC3  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_474B94  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] eax +
call sub_474AF0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_474DE1  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_4B7D00[eax] +
mov ecx ds:dword_4B7D0C[eax] +
mov eax ds:dword_4B7D00[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_474E0D  +
cmp eax 1 +
jz loc_474D22  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_474DD4  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_4B7D00[edx] +
mov ecx ds:dword_4B7D0C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_4B7D00[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_474DB0  +
cmp ecx 1 +
jz loc_474DA0  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_474DD4  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_474D55  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_474D55  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_474E09  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_474E18  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_474C7D  +
mov eax ebx +
call sub_4744E0  +
test eax eax +
jz loc_474E09  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_474C7D  +
xor eax eax +
jmp loc_474DCC  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_474E09  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_474C60  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_474C60  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_474EB7  +
mov edx [ebx+8] +
test edx edx +
jz loc_474EAD  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_474E70  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_474F67  +
add ebx 4 +
cmp esi ebx +
jbe loc_474F79  +
cmp dword ptr [ebx] 1 +
jbe loc_474F60  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_474F60  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_474F90  +
***
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_474FB4  +
cmp edx 20h +
ja loc_474FC8  +
mov [esp+arg_8] edi +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_474F40  +
mov eax ebx +
call sub_4744E0  +
jmp loc_474FB4  +
***
jmp loc_474FE0  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_475011  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_475030  +
retn   +
***
push ebp  +
mov ecx 9E3779B9h +
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+14h] +
mov ebx [esp+1Ch] +
mov esi [esp+18h] +
test al 3 +
jz loc_475236  +
cmp esi 0Bh +
jbe loc_47515E  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_475080  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+18h] +
cmp esi 0Bh +
ja sub_4751CC  +
jmp ds:off_4B7CC4[esi*4]  +
***
movzx esi byte ptr [eax+0Ah] +
movzx esi byte ptr [eax+9] +
movzx esi byte ptr [eax+8] +
movzx esi byte ptr [eax+7] +
movzx esi byte ptr [eax+6] +
movzx esi byte ptr [eax+5] +
movzx esi byte ptr [eax+3] +
movzx esi byte ptr [eax+2] +
movzx esi byte ptr [eax+1] +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [esp+18h] 0Bh +
jbe loc_47515E  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
cmp [ecx] ebp +
fild  qword ptr [ecx] +
retf 0D989h  +
***
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_475245  +
mov ebx ecx +
mov ecx edi +
jmp loc_47515E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_0] +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
test al al +
jz loc_475735  +
mov ebx [esp+2Ch+arg_8] +
mov edi [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+arg_4] +
and ebx 1 +
mov [esp+2Ch+var_1C] ebx +
mov ebx [esp+2Ch+arg_8] +
and edi 10h +
mov [esp+2Ch+var_18] ebp +
and ebx 4 +
mov [esp+2Ch+var_14] ebx +
mov ebx [esp+2Ch+arg_8] +
and ebx 2 +
mov [esp+2Ch+var_20] ebx +
test edi edi +
jz loc_475324  +
movzx eax ds:byte_4B8020[eax] +
cmp al 3Fh +
jz loc_4753F5  +
jbe loc_475390  +
cmp al 5Bh +
jz loc_475462  +
cmp al 5Ch +
jnz loc_475442  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jnz loc_4755A5  +
test edi edi +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
jz loc_4755B2  +
movzx edx ds:byte_4B8020[edx] +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
movzx eax ds:byte_4B8020[eax] +
cmp eax edx +
jnz loc_4753E8  +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
add [esp+2Ch+var_18] 1 +
test al al +
jz loc_475700  +
mov ecx esi +
mov esi edx +
jmp loc_475319  +
cmp al 2Ah +
jnz loc_475442  +
test byte ptr [esp+2Ch+arg_8] 4 +
mov ebp [esp+2Ch+var_18] +
jnz loc_475575  +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
cmp dl 3Fh +
jnz loc_47573B  +
mov eax [esp+2Ch+arg_8] +
and eax 1 +
jmp loc_4753D3  +
add esi 1 +
movzx edx byte ptr [esi-1] +
add ebp 1 +
cmp dl 2Ah +
jnz loc_4755F4  +
test eax eax +
jz loc_4753DD  +
cmp byte ptr [ebp+0] 2Fh +
jz loc_4753E8  +
cmp dl 3Fh +
jnz loc_4753C0  +
cmp byte ptr [ebp+0] 0 +
jnz loc_4753C0  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
test al al +
jz loc_4753E8  +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_47540C  +
cmp al 2Fh +
jz loc_4753E8  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_475372  +
cmp al 2Eh +
jnz loc_475372  +
mov eax [esp+2Ch+var_18] +
cmp eax [esp+2Ch+arg_4] +
jz loc_4753E8  +
mov edx [esp+2Ch+var_1C] +
test edx edx +
jz loc_475372  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_475372  +
jmp loc_4753E8  +
mov ebx [esp+2Ch+var_18] +
test edi edi +
movzx edx byte ptr [ebx] +
jz loc_47536E  +
movzx edx ds:byte_4B8020[edx] +
cmp eax edx +
jz loc_475372  +
jmp loc_4753E8  +
mov eax [esp+2Ch+var_18] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_4753E8  +
mov ebx [esp+2Ch+var_14] +
test ebx ebx +
jnz loc_4755C6  +
movzx eax byte ptr [ecx+1] +
movzx ebp dl +
cmp al 5Eh +
setz bl  +
cmp al 21h +
setz al  +
add ecx 2 +
or ebx eax +
movzx eax bl +
test eax eax +
cmovnz esi ecx +
mov [esp+2Ch+var_10] eax +
lea ecx [esi+1] +
movzx eax byte ptr [esi] +
jmp loc_4754C8  +
cmp dl ss:byte_4B8020[ebp] +
movzx ecx ss:byte_4B8020[ebp] +
ja loc_4754BE  +
cmp ecx ebx +
jle loc_4756B1  +
cmp al 5Dh +
jz loc_4756A0  +
mov ecx esi +
mov esi [esp+2Ch+var_20] +
movzx edx al +
test esi esi +
jnz loc_4754DB  +
cmp al 5Ch +
jz loc_475560  +
test edi edi +
jz loc_4754E6  +
movzx edx ds:byte_4B8020[edx] +
test al al +
jz loc_4753E8  +
test edi edi +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
jz loc_4754FF  +
movzx eax ds:byte_4B8020[eax] +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_47550F  +
cmp al 2Fh +
jz loc_4753E8  +
cmp al 2Dh +
movzx ebx dl +
jz loc_475522  +
test edi edi +
jnz loc_4754A7  +
cmp edx ebp +
jg loc_4754BE  +
mov ecx ebp +
jmp loc_4754B6  +
movzx ebx byte ptr [ecx+1] +
cmp bl 5Dh +
jz loc_475570  +
mov esi [esp+2Ch+var_20] +
lea eax [ecx+2] +
test esi esi +
jnz loc_47553F  +
cmp bl 5Ch +
jz loc_475694  +
test bl bl +
jz loc_4753E8  +
test edi edi +
jz loc_475552  +
movzx ebx ds:byte_4B8020[ebx] +
lea esi [eax+1] +
movzx eax byte ptr [eax] +
jmp loc_475516  +
movzx edx byte ptr [ecx] +
add ecx 1 +
jmp loc_4754DB  +
movzx ebx dl +
jmp loc_475516  +
cmp byte ptr [ebp+0] 2Eh +
jnz loc_4753A7  +
cmp [esp+2Ch+arg_4] ebp +
jz loc_4753E8  +
test byte ptr [esp+2Ch+arg_8] 1 +
jz loc_4753A7  +
cmp byte ptr [ebp-1] 2Fh +
jnz loc_4753A7  +
nop   +
jmp loc_4753E8  +
test edi edi +
mov edx 5Ch +
jnz loc_475360  +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
cmp eax edx +
jz loc_475372  +
jmp loc_4753E8  +
cmp dl 2Eh +
jnz loc_47547D  +
cmp eax [esp+2Ch+arg_4] +
jz loc_4753E8  +
mov ebp [esp+2Ch+var_1C] +
test ebp ebp +
jz loc_47547D  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_47547D  +
jmp loc_4753E8  +
cmp dl 3Fh +
jz loc_4753D3  +
xor eax eax +
test dl dl +
jz loc_4753ED  +
test byte ptr [esp+2Ch+arg_8] 2 +
movzx ebx dl +
jnz loc_47561A  +
cmp dl 5Ch +
jz loc_47572B  +
test edi edi +
jz loc_475625  +
movzx ebx ds:byte_4B8020[ebx] +
movzx eax byte ptr [ebp+0] +
sub esi 1 +
test al al +
jz loc_4753E8  +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_1C] esi +
mov esi ebx +
mov ebx edx +
and ecx 0FFFFFFFBh +
mov [esp+2Ch+var_20] ecx +
jmp loc_47565F  +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_4753E8  +
cmp bl 5Bh +
jz loc_475673  +
test edi edi +
jz loc_47566F  +
movzx eax ds:byte_4B8020[eax] +
cmp eax esi +
jnz loc_475650  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call sub_4752D0  +
test eax eax +
jnz loc_475650  +
jmp loc_4753ED  +
lea eax [ecx+3] +
movzx ebx byte ptr [ecx+2] +
jmp loc_47553F  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jnz loc_475372  +
jmp loc_4753E8  +
cmp al 5Dh +
jz loc_4756E9  +
test al al +
jz loc_4753E8  +
mov ecx [esp+2Ch+var_20] +
mov edx esi +
add esi 1 +
test ecx ecx +
movzx eax byte ptr [edx] +
jnz loc_4756D1  +
cmp al 5Ch +
jz loc_4756E2  +
cmp al 5Dh +
jz loc_4756E9  +
test al al +
jz loc_4753E8  +
mov edx esi +
nop   +
jmp loc_4756C3  +
lea esi [edx+2] +
mov edx esi +
jmp loc_4756C3  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_475372  +
jmp loc_4753E8  +
mov ebp [esp+2Ch+var_18] +
movzx edx byte ptr [ebp+0] +
xor eax eax +
test dl dl +
jz loc_4753ED  +
test byte ptr [esp+2Ch+arg_8] 8 +
jz loc_4753E8  +
cmp dl 2Fh +
jnz loc_4753E8  +
jmp loc_4753ED  +
movzx ebx byte ptr [esi] +
nop   +
jmp loc_47561A  +
mov ebp [esp+2Ch+arg_4] +
jmp loc_475704  +
cmp dl 2Ah +
jz loc_4753B7  +
jmp loc_4755FD  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] esi +
call strlen  +
cmp eax ebx +
cmovbe ebx eax +
lea eax [ebx+1] +
mov [esp+14h+var_14] eax +
call sub_4742F0  +
mov byte ptr [eax+ebx] 0 +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
push esi  +
xor esi esi +
push ebx  +
sub esp 14h +
mov edx [esp+20h] +
lea ebx [esp+24h] +
test edx edx +
jz loc_4757F7  +
mov [esp] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_4757E3  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_47583D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_475817  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_4C1A14 +
mov ebx [esp+30h] +
lea edi [esp+34h] +
test ebx ebx +
jz loc_475896  +
lea esi [esi+0] +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_475870  +
mov byte ptr [esi] 0 +
mov eax ds:dword_4C1A14 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
lea esi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_475925  +
mov eax ebx +
xor edi edi +
mov [esp+1Ch+var_1C] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_4758C7  +
add edi 1 +
mov [esp+1Ch+var_1C] edi +
lea edi [esp+1Ch+arg_4] +
call sub_4742F0  +
mov [esp+1Ch+var_10] eax +
mov esi eax +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_4758F0  +
mov byte ptr [esi] 0 +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 1 +
call sub_4742F0  +
mov esi eax +
mov [esp+1Ch+var_10] eax +
jmp loc_475916  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_4759C9  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_475957  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_4742F0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_475980  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_4759BD  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4742F0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_4759A6  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
test esi esi +
jz loc_475A86  +
mov ecx [esi] +
test ecx ecx +
jz loc_475A7B  +
xor eax eax +
nop   +
add eax 1 +
mov edx [esi+eax*4] +
test edx edx +
jnz loc_475A00  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_4742F0  +
mov [esp+1Ch+var_10] eax +
mov eax [esi] +
test eax eax +
jz loc_475A82  +
lea ebx [esi+4] +
mov ebp esi +
xor edi edi +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add edi [esp+1Ch+var_10] +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_4742F0  +
mov [edi] eax +
mov edx [ebp+0] +
mov edi ebx +
mov ebp ebx +
add ebx 4 +
mov [esp+1Ch+var_1C] eax +
sub edi esi +
mov [esp+1Ch+var_18] edx +
call strcpy  +
mov eax [ebx-4] +
test eax eax +
jnz loc_475A30  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax+edi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_475A11  +
xor edi edi +
jmp loc_475A68  +
xor eax eax +
jmp loc_475A73  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_475AC4  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_475AB6  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_475AA5  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
test ebx ebx +
jz loc_475CE3  +
mov [esp+2Ch+var_2C] ebx +
xor esi esi +
xor ebp ebp +
call strlen  +
xor edi edi +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_14] eax +
jmp loc_475B23  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:byte_4B8120[eax+eax] 40h +
jnz loc_475B20  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_475C66  +
mov eax [esp+2Ch+var_18] +
sub eax 1 +
cmp [esp+2Ch+var_1C] eax +
jge loc_475C66  +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebx] +
mov edx [esp+2Ch+var_14] +
test al al +
jnz loc_475B81  +
jmp loc_475BC6  +
mov [edx] al +
xor esi esi +
add edx 1 +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_475BC6  +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 40h +
jz loc_475B9A  +
mov ecx esi +
or ecx edi +
or ecx ebp +
jz loc_475CC0  +
test esi esi +
jnz loc_475B70  +
cmp al 5Ch +
jz loc_475C46  +
test edi edi +
jz loc_475C33  +
cmp al 27h +
jz loc_475CA7  +
add ebx 1 +
add edx 1 +
mov [edx-1] al +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_475B81  +
mov eax [esp+2Ch+var_14] +
mov byte ptr [edx] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_476140  +
mov edx [esp+2Ch+var_10] +
add [esp+2Ch+var_1C] 1 +
mov [edx] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
mov dword ptr [eax+edx*4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 40h +
jz loc_475C13  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 40h +
jnz loc_475C00  +
test al al +
jnz loc_475B23  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_20] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jz loc_475C50  +
cmp al 22h +
jnz loc_475BB6  +
xor ebp ebp +
jmp loc_475B77  +
mov esi 1 +
jmp loc_475B77  +
cmp al 27h +
jz loc_475CB0  +
cmp al 22h +
jnz loc_475BB6  +
mov ebp 1 +
jmp loc_475B77  +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_475CC9  +
shl [esp+2Ch+var_18] 1 +
mov eax [esp+2Ch+var_18] +
shl eax 2 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_2C] eax +
call sub_474370  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
mov dword ptr [eax] 0 +
jmp loc_475B5C  +
xor edi edi +
jmp loc_475B77  +
mov edi 1 +
jmp loc_475B77  +
xor esi esi +
xor ebp ebp +
jmp loc_475BC6  +
mov [esp+2Ch+var_2C] 20h +
call sub_4742F0  +
mov [esp+2Ch+var_18] 8 +
mov [esp+2Ch+var_20] eax +
jmp loc_475C8D  +
mov [esp+2Ch+var_20] 0 +
jmp loc_475C27  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov edi [esp+30h] +
test esi esi +
jz loc_475D5C  +
mov ebx [edi] +
test ebx ebx +
jnz loc_475D2C  +
jmp loc_475D8D  +
cmp al 27h +
jz loc_475D47  +
cmp al 22h +
jz loc_475D47  +
mov [esp+4] esi +
mov [esp] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_475D5C  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_475D70  +
movzx edx al +
movsx ebp al +
test ds:byte_4B8120[edx+edx] 40h +
jnz loc_475D47  +
cmp al 5Ch +
jnz loc_475D10  +
mov [esp+4] esi +
mov dword ptr [esp] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_475D18  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_475D5C  +
add edi 4 +
jmp loc_475D03  +
***
xor eax eax +
nop   +
jmp loc_475D61  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+48h+arg_0] +
lea ebx [ebp+1] +
mov [esp+48h+var_30] 7D0h +
mov ecx [eax] +
cmp ebx ecx +
jge loc_475DDE  +
nop   +
mov eax [esp+48h+arg_4] +
lea edi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_475DE6  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_475DC0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+48h+var_30] 1 +
jz loc_476051  +
add eax 1 +
mov [esp+48h+var_44] offset aR_0 +
mov [esp+48h+var_48] eax +
call fopen  +
test eax eax +
mov esi eax +
jz loc_475FD8  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_475FD0  +
mov [esp+48h+var_48] esi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+48h+var_2C] eax +
jz loc_475FD0  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] esi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_475FD0  +
mov edx [esp+48h+var_2C] +
lea eax [edx+1] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] edx +
call sub_4742F0  +
mov edx [esp+48h+var_28] +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_2C] eax +
call fread  +
mov edx [esp+48h+var_28] +
cmp edx eax +
mov ecx eax +
jz loc_475EBA  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_28] eax +
call ferror  +
mov ecx [esp+48h+var_28] +
test eax eax +
jnz loc_475FD0  +
mov eax [esp+48h+var_2C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_475EF8  +
test ds:byte_4B8120[eax+eax] 40h +
jz loc_475FE5  +
mov eax [esp+48h+var_2C] +
jmp loc_475EEE  +
test ds:byte_4B8120[edx+edx] 40h +
jz loc_475FE5  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_475EE0  +
mov [esp+48h+var_48] 4 +
call sub_4742F0  +
mov dword ptr [eax] 0 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_4759E0  +
xor edx edx +
mov [esp+48h+var_20] 0 +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
mov ecx [esp+48h+arg_0] +
mov eax edx +
mov [esp+48h+var_1C] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+48h+var_44] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call sub_474370  +
mov ecx [esp+48h+arg_4] +
mov edx [esp+48h+var_1C] +
mov [esp+48h+var_28] edx +
mov [ecx] eax +
mov ecx [esp+48h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+48h+var_40] ecx +
lea ecx [eax+edi+4] +
lea eax [eax+ebx*4] +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] eax +
call memmove  +
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+var_24] +
add edi [eax] +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+arg_0] +
mov edx [esp+48h+var_28] +
mov edi [esp+48h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [edi] eax +
mov [esp+48h+var_48] ebx +
mov ebx ebp +
call free  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call free  +
nop   +
mov [esp+48h+var_48] esi +
call fclose  +
mov eax [esp+48h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_475DD7  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call sub_475AD0  +
mov edx [eax] +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_4759E0  +
mov edx [esp+48h+var_20] +
test edx edx +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
jz loc_47607B  +
mov eax [esp+48h+var_24] +
xor edx edx +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_1C] ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ebp ds:0[edx*4] +
jnz loc_476030  +
mov [esp+48h+var_20] ebp +
mov ebp [esp+48h+var_1C] +
mov [esp+48h+var_28] ecx +
jmp loc_475F32  +
mov eax [edx] +
mov [esp+48h+var_44] offset aSErrorTooMany@ +
mov [esp+48h+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+48h+var_48] eax +
call fprintf  +
mov [esp+48h+var_48] 1 +
call sub_487FD0  +
mov [esp+48h+var_20] 0 +
jmp loc_475F32  +
***
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_4760A0  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_473510  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_473510  +
add esp 2Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_4742F0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_47619B  +
test eax eax +
jz loc_4761C4  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_4B8020[eax] +
movzx edx ds:byte_4B8020[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_476191  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_476211  +
jmp loc_476242  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_476240  +
mov ecx ebp +
test cl cl +
jnz loc_476240  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_476247  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_4B8020[eax] +
movzx edx ds:byte_4B8020[edx] +
cmp eax 2Fh +
jnz loc_4761E8  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_4761FE  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_476289  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_4B8020[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_476267  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_476180  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov [esp] eax +
call sub_4884B0  +
mov ebx eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_4884B0  +
mov [esp] ebx +
mov [esp+4] eax +
mov esi eax +
call sub_476180  +
mov [esp] ebx +
mov edi eax +
call free  +
mov [esp] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+48h+arg_0] +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
mov ecx 1 +
test eax eax +
jnz loc_476343  +
movzx edx [esp+48h+var_32] +
and dx 0F000h +
cmp dx 8000h +
jz loc_476350  +
add esp 48h +
mov eax ecx +
pop ebx  +
retn   +
mov [esp+48h+var_48] ebx +
call _unlink  +
add esp 48h +
pop ebx  +
mov ecx eax +
mov eax ecx +
retn   +
***
cmp edx 4Bh +
ja loc_4763C7  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4B8320[edx*4]  +
test ecx ecx +
jz loc_4763C3  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_4763B2  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_4763B2  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_4763C3  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_476386  +
xor eax eax +
jmp loc_4763B2  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_4763F6  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_4763F6  +
test edx edx +
jz loc_4763F6  +
test ecx ecx +
jnz loc_476400  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_476475  +
test dl dl +
jnz loc_476481  +
cmp al 4Bh +
jnz loc_4764C0  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_476370  +
test eax eax +
mov [esi] eax +
jz loc_4764B5  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_476437  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_4764A0  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_476456  +
test cl cl +
jz loc_476447  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_476456  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_476503  +
cmp al 46h +
jnz loc_476503  +
cmp esi ebp +
jnz loc_4764EA  +
lea esi [esi+0] +
jmp loc_476503  +
cmp eax 1Bh +
jz loc_476510  +
cmp eax 19h +
jnz loc_4764E3  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_476503  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_4764D2  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_4764EA  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_4764E3  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_476560  +
test dl dl +
jnz loc_476564  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_476370  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_476559  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_476543  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_476597  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Bh +
ja loc_476597  +
mov ecx [ebx] +
jmp ds:off_4B8450[ecx*4]  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_476580  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+4] +
jmp loc_476593  +
mov ecx [ebx+4] +
cmp dword ptr [ecx] 5 +
jnz loc_4765B3  +
add dword ptr [edi] 1 +
mov ecx [ebx+4] +
mov edx edi +
mov eax esi +
call sub_476570  +
mov ebx [ebx+8] +
jmp loc_476593  +
add dword ptr [esi] 1 +
mov ecx [ebx+4] +
jmp loc_4765B3  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_476600  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_4765E5  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_476694  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_4766A3  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_476670  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_476661  +
xor eax eax +
jmp loc_476687  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_4766E5  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_4766E1  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_476650  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_476718  +
cmp al 6Eh +
jz loc_476711  +
lea eax [ebx+0Ch] +
call sub_476650  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_476722  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_47671A  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_476741  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_4766F0  +
test eax eax +
js loc_47673C  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_47673C  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_47673C  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_476790  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_476650  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_476650  +
test eax eax +
mov esi eax +
jle loc_476864  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_476868  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_476820  +
cmp esi 9 +
jle loc_476807  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_476830  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_4763D0  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_4767E6  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_4767E6  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_476840  +
cmp al 5Fh +
jz loc_476840  +
cmp al 24h +
jnz loc_476807  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_476807  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_4763D0  +
jmp loc_476812  +
xor eax eax +
jmp loc_476815  +
xor eax eax +
lea esi [esi+0] +
jmp loc_476812  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_4768BE  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_4767B0  +
mov ecx edi +
mov edx 4Ah +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_476370  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_476896  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_4768F0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_476940  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_47691F  +
test cl cl +
jnz loc_47691F  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_0 +
cmp dl [eax] +
jz loc_4769D4  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_476927  +
jmp loc_4768E1  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_476AAA  +
cmp dl 5Fh +
jz loc_4769D0  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_476993  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_4768E1  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_4769A8  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_4769B0  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_476964  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_4768E1  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_47696B  +
xor edx edx +
mov eax ecx +
jmp loc_47698B  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_4768E1  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_4769B3  +
mov edi [eax+14h] +
test edi edi +
mov [esp+1Ch+var_14] edi +
jz loc_476A9A  +
mov edx [ebx+14h] +
mov ebp [ebx+18h] +
mov edi [eax+18h] +
mov [esp+1Ch+var_18] 0 +
cmp edx ebp +
mov [esp+1Ch+var_10] edi +
jge loc_476A27  +
mov esi [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_476A27  +
mov esi [esp+1Ch+var_14] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_18] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_10] +
mov [edi+8] esi +
mov edi [esp+1Ch+var_18] +
mov [ebx+2Ch] edi +
test ecx ecx +
jz loc_476AA2  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edx ebp +
jge loc_476A60  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_476A60  +
mov dword ptr [eax] 18h +
mov [eax+4] esi +
mov [eax+8] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_4768E3  +
mov edx eax +
mov eax ebx +
call sub_476880  +
test eax eax +
jz loc_4768E1  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_4768E3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_4768E3  +
mov ebp [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_476A2E  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_476A38  +
cmp dl 5Fh +
jz loc_476955  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_47695A  +
nop   +
jmp loc_476900  +
***
push ebx  +
mov ebx eax +
jnz loc_476AEE  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_476AE5  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_476B20  +
cmp edx 76h +
jnz loc_476AE0  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_476650  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_476AE0  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_476650  +
jmp loc_476B28  +
lea eax [ebx+0Ch] +
call sub_476650  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_476AE2  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_476AE2  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_476B87  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_476B80  +
cmp dword ptr [eax] 2Fh +
jnz loc_476B80  +
cmp edx 0 +
jg loc_476B6B  +
jmp loc_476B77  +
cmp dword ptr [eax] 2Fh +
jnz loc_476B80  +
test edx edx +
jz loc_476B83  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_476B62  +
retn   +
jz loc_476B83  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_476BD5  +
cmp dword ptr [ebx] 4Ah +
ja loc_476BC0  +
mov edx [ebx] +
jmp ds:off_4B85A0[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_476BA0  +
test eax eax +
jnz loc_476BD7  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_476BAD  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_476B40  +
test eax eax +
jz loc_476BD5  +
cmp dword ptr [eax] 2Fh +
jnz loc_476BD5  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+28h] +
mov edi [esp+24h] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_476C60  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_476C30  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esi] +
mov edx [esp+20h] +
add eax [esi+4] +
mov [esp+8] edi +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi+0Ch] +
test edx edx +
jnz loc_476C23  +
test ebx ebx +
jnz loc_476C72  +
cmp eax 2 +
mov bl 2 +
jbe loc_476C78  +
add ebx ebx +
cmp eax ebx +
ja loc_476C72  +
mov eax [esi] +
mov [esp+4] ebx +
mov [esp] eax +
call realloc  +
test eax eax +
jz loc_476C91  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_476C1C  +
***
mov eax [esi] +
mov [esp] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_476C23  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_476D43  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_476CFC  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_476D43  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_476CE1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_476CE4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_4B86CC +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_476DF0  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_476DA2  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_476DF0  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_476D87  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_476D8A  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_80] edx +
jz loc_476F00  +
mov eax [eax+118h] +
test eax eax +
jnz loc_476EF0  +
mov eax [ecx] +
cmp eax 4Bh +
ja loc_4783A3  +
jmp ds:off_4B8938[eax*4]  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_476E70  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_476E70  +
cmp esi 6 +
jbe loc_478C92  +
cmp esi 7 +
jnz loc_476E70  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_476E70  +
cmp dword ptr [edx+8] 1 +
jz loc_4790CE  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_478C47  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_4791A0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_478C10  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_478E12  +
cmp esi 8 +
jz loc_478DE7  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
lea esi [esi+0] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_4791A0  +
mov eax ebx +
mov edx offset aClone +
call sub_476CC0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_4791A0  +
mov edx 5Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_4791A0  +
mov eax ebx +
mov edx offset aAbi +
call sub_476CC0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_4791A0  +
mov edx 5Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_476BA0  +
test eax eax +
jz loc_478FAB  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_4785C2  +
mov edx [eax+4] +
test edx edx +
jz loc_4785C2  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_476F98  +
mov eax [ebp+4] +
mov [esp+98h+var_78] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+98h+var_74] eax +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov [ebx+11Ch] edi +
call sub_4791A0  +
cmp [esp+98h+var_74] edi +
jle loc_4783E4  +
mov eax [ebx+100h] +
mov ebp offset asc_4B8866 +
jmp loc_477015  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_4B8866+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4783E4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_476FF2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_476FF5  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_477093  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8851h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478497  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477070  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477073  +
mov eax ebx +
mov edx offset aUnnamedType +
call sub_476CC0  +
mov edx [ebp+4] +
mov eax ebx +
add edx 1 +
call sub_476D50  +
mov edx 7Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aLambda +
call sub_476CC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
mov eax ebx +
mov edx offset asc_4B891A +
call sub_476CC0  +
mov edx [ebp+8] +
mov eax ebx +
add edx 1 +
call sub_476D50  +
mov edx 7Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aGlobalDestruct +
call sub_476CC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aGlobalConstruc +
call sub_476CC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aDecltype +
call sub_476CC0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_4791A0  +
mov edx 29h +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_476D50  +
jmp loc_476EF0  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_4771F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8836h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4784BD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4771D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4771D3  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_478B6F  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_476EF0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_4791A0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_4791A0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aJavaResource +
call sub_476CC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_476F00  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_476F00  +
mov eax [eax+4] +
mov edi offset aQu +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+98h+var_7C] eax +
mov eax [edx+4] +
mov [esp+98h+var_78] eax +
mov eax [edx+8] +
mov [esp+98h+var_74] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_478F3F  +
mov eax ebx +
mov edx offset aNew +
call sub_476CC0  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax+4] 0 +
jz loc_477329  +
mov edx [esp+98h+var_80] +
mov ecx eax +
mov eax ebx +
call sub_47A430  +
mov edx 20h +
mov eax ebx +
call sub_4765D0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_78] +
mov edx edi +
call sub_4791A0  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_476EF0  +
mov edx edi +
mov eax ebx +
call sub_47A430  +
jmp loc_476EF0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 37h +
jnz loc_476F00  +
mov edi [ecx+4] +
mov esi [edi+4] +
mov [esp+98h+var_7C] edi +
mov edx [esi] +
cmp byte ptr [edx+1] 63h +
jz loc_478E4F  +
mov edi [esp+98h+var_7C] +
cmp dword ptr [edi] 31h +
jz loc_4783B2  +
mov esi edx +
mov ecx 3 +
mov edi offset aCl +
cmps   +
mov ecx [eax+4] +
jnz loc_4773AE  +
cmp dword ptr [ecx] 3 +
jz loc_478F86  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_47A430  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx +
mov edx [eax+4] +
mov [esp+98h+var_7C] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_478EFD  +
mov ecx 3 +
mov esi edx +
mov edi offset aCl +
cmps   +
jnz loc_478F2B  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_47A430  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_476EF0  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_476EF0  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_476EF0  +
mov edx 29h +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+98h+var_78] eax +
mov eax [eax] +
mov [esp+98h+var_7C] edi +
cmp eax 31h +
jz loc_47890E  +
cmp eax 33h +
jz loc_4789DC  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_47A370  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_47A430  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aOperator +
call sub_476CC0  +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_47A0F0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aOperator +
call sub_476CC0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ebp [ecx+4] +
mov eax ebx +
mov edx offset aOperator_0 +
mov edi [ebp+8] +
call sub_476CC0  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_47873A  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_476EF0  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_477521  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_476EF0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477502  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_477505  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_47757C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_4791A0  +
mov eax ebx +
mov edx 7Bh +
call sub_4765D0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx esi +
call sub_4791A0  +
mov edx 7Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_4775B8  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_4791A0  +
mov eax [ebp+8] +
test eax eax +
jz loc_476EF0  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_478A0B  +
mov edx offset asc_4B8866 +
mov eax ebx +
call sub_476CC0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov esi [ebx+120h] +
mov edi [ebx+100h] +
call sub_4791A0  +
cmp [ebx+120h] esi +
jnz loc_476EF0  +
mov eax [ebx+100h] +
cmp eax edi +
jnz loc_476EF0  +
sub eax 2 +
mov [ebx+100h] eax +
jmp loc_476EF0  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_47874E  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_4B9460 +
jz loc_477650  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_4791A0  +
mov edx 20h +
mov eax ebx +
call sub_4765D0  +
cmp word ptr [ebp+8] 0 +
jz loc_47868C  +
mov edx offset a_accum +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_47A370  +
jmp loc_476EF0  +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ecx +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_4791A0  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_4776CC  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_4791E0  +
mov eax [esp+98h+var_58] +
mov [ebx+114h] eax +
jmp loc_476EF0  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov ecx eax +
mov [esp+98h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+98h+var_74] edi +
test esi esi +
mov [esp+98h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_479160  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_479160  +
mov eax esi +
mov esi 1 +
mov [esp+98h+var_70] ebp +
mov [esp+98h+var_7C] ecx +
jmp loc_47774D  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_47779E  +
mov edx [eax+8] +
test edx edx +
jnz loc_477798  +
cmp esi 3 +
ja loc_478B27  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+98h+var_58] edi +
mov edi [esp+98h+var_7C] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_477740  +
mov ebp [esp+98h+var_70] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov ecx [ebp+8] +
call sub_4791A0  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_476EF0  +
cmp esi 1 +
jz loc_478EC0  +
mov edi [esp+98h+var_78] +
sub esi 1 +
mov [esp+98h+var_7C] ebp +
mov ebp [esp+98h+var_80] +
mov eax esi +
shl eax 4 +
lea edi [edi+eax+4] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_4791E0  +
cmp esi 1 +
jz loc_4786AA  +
sub esi 1 +
jmp loc_4777E7  +
test byte ptr [esp+98h+var_80] 20h +
jnz loc_478705  +
cmp dword ptr [ecx+4] 0 +
jz loc_47781F  +
test byte ptr [esp+98h+var_80] 40h +
jz loc_478BAE  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_479DE0  +
jmp loc_476EF0  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_477873  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8781h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_47844B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477850  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477853  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_4778E9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B876Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478438  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4778C6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4778C9  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_477963  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8759h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478425  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477940  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477943  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_4779D9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8748h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_47858E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4779B6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4779B9  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_477A53  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8735h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_47857B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477A30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477A33  +
mov eax ebx +
mov edx offset aConstructionVt +
call sub_476CC0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
mov edx edi +
call sub_4791A0  +
mov eax ebx +
mov edx offset aIn +
call sub_476CC0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_4791A0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aVttFor +
call sub_476CC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aVtableFor +
call sub_476CC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov eax ebx +
mov edx 7Eh +
call sub_4765D0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov esi [ecx+4] +
test esi esi +
jnz loc_4785D6  +
mov edx offset aThis +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
lea edx [ecx+4] +
mov eax ebx +
call sub_476B40  +
test eax eax +
jz loc_4786F6  +
cmp dword ptr [eax] 2Fh +
jz loc_4786CA  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
mov [ebx+110h] esi +
jmp loc_476EF0  +
mov eax [ebx+140h] +
test byte ptr [esp+98h+var_80] 4 +
mov [ebx+140h] ecx +
mov [esp+98h+var_7C] eax +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+98h+var_78] eax +
jz loc_477BDD  +
mov esi [edx] +
test esi esi +
jnz loc_477BDD  +
cmp dword ptr [edx+8] 6 +
jz loc_478EC9  +
mov ecx edx +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_4791A0  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_478DD6  +
mov edx 3Ch +
mov eax ebx +
call sub_4765D0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_478DC5  +
mov edx 3Eh +
mov eax ebx +
call sub_4765D0  +
mov eax [esp+98h+var_78] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_7C] +
mov [ebx+140h] eax +
jmp loc_476EF0  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov esi [ecx+4] +
mov [esp+98h+var_74] eax +
test esi esi +
jz loc_478DB6  +
mov eax [ebx+110h] +
xor edx edx +
xor edi edi +
mov [esp+98h+var_70] ecx +
mov [esp+98h+var_7C] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_78] eax +
mov ecx [esp+98h+var_7C] +
add edi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [esi] +
mov [ebx+114h] eax +
mov [eax+4] esi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_4783F4  +
cmp edx 4 +
mov ebp [esp+98h+var_70] +
jz loc_479054  +
cmp edx 2 +
jnz loc_477D36  +
mov ecx [esi+8] +
cmp dword ptr [ecx] 45h +
jz loc_479096  +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
ja loc_477D36  +
cmp edi 4 +
jz loc_479078  +
mov eax edi +
shl eax 4 +
mov [esp+98h+var_70] esi +
mov esi [esp+98h+var_7C] +
add eax [esp+98h+var_78] +
jmp loc_477CF8  +
add eax 10h +
cmp edi 4 +
jz loc_479078  +
mov edx [eax-0Ch] +
add edi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] esi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_477CEC  +
mov esi [esp+98h+var_70] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
cmp dword ptr [esi] 4 +
jz loc_479087  +
test edi edi +
jz loc_478E40  +
lea ebp [edi-1] +
mov edi [esp+98h+var_78] +
mov eax ebp +
shl eax 4 +
lea esi [edi+eax+8] +
jmp loc_477D75  +
sub esi 10h +
test ebp ebp +
jz loc_478E40  +
sub ebp 1 +
mov edi [esi] +
test edi edi +
jnz loc_477D67  +
mov eax ebx +
mov edx 20h +
call sub_4765D0  +
mov ecx [esi-4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791E0  +
jmp loc_477D67  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_476EF0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_477DCF  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_476EF0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_477DB0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_477DB3  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_477E47  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8807h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4784D0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477E24  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477E27  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_477EC3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B87F1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478568  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477EA0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477EA3  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_477F39  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B87D7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478412  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477F16  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477F19  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_477FB3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B87ACh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_47845E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_477F90  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_477F93  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_478029  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B87C0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478484  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_478006  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_478009  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_4780A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B879Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478471  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_478080  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_478083  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_4791A0  +
and edi 4 +
jnz loc_4785FC  +
mov edx offset asc_4B86D6 +
mov eax ebx +
call sub_476CC0  +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 45h +
jz loc_478B36  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_4791A0  +
jmp loc_476EF0  +
test byte ptr [esp+98h+var_80] 4 +
jnz loc_478A51  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_476EF0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_47816F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_476EF0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_478150  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_478153  +
test byte ptr [esp+98h+var_80] 4 +
mov eax [ecx+4] +
jnz loc_47860D  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_476EF0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4781FF  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_476EF0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4781E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_4781E3  +
mov eax [ecx+4] +
xor esi esi +
cmp dword ptr [eax] 5 +
jz loc_4787C9  +
mov edx [eax] +
cmp edx 23h +
jz loc_47869D  +
cmp edx [ebp+0] +
jz loc_47869D  +
cmp edx 24h +
jz loc_478D65  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] edi +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_4791A0  +
mov edi [esp+98h+var_50] +
test edi edi +
jz loc_4785B0  +
mov eax [esp+98h+var_58] +
test esi esi +
mov [ebx+114h] eax +
jz loc_476EF0  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
jmp loc_476EF0  +
mov edi [ebx+114h] +
xor esi esi +
jmp loc_478278  +
mov edi [ebx+114h] +
test edi edi +
jz loc_47906F  +
mov edx edi +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_47830D  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_478313  +
cmp eax ecx +
jz loc_478A3E  +
mov edx [edx] +
test edx edx +
jnz loc_4782F1  +
xor esi esi +
jmp loc_478278  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_47834A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B881Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4784AA  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_478327  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_47832A  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
cmp dword ptr [esi+8] 1 +
jnz loc_477392  +
mov ecx [esi+4] +
cmp byte ptr [ecx] 3Eh +
jnz loc_477392  +
mov eax ebx +
mov edx 28h +
call sub_4765D0  +
mov eax [ebp+4] +
mov eax [eax+4] +
mov esi [eax] +
mov eax [ebp+8] +
jmp loc_477394  +
add edi 1 +
cmp edi esi +
jnz loc_476FC6  +
jmp loc_476EF0  +
mov esi [esi+4] +
test esi esi +
jz loc_478DB6  +
add eax 10h +
cmp edi 4 +
jz loc_4785A1  +
mov edx ebp +
jmp loc_477C7C  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
mov eax [ebx+100h] +
jmp loc_47850F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B880Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_478555  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4784F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4784F3  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_4791E0  +
jmp loc_4782B6  +
mov eax [ebp+4] +
test esi esi +
mov [esp+98h+var_78] eax +
jnz loc_476FBD  +
jmp loc_476EF0  +
mov eax ebx +
mov edx offset aParm +
call sub_476CC0  +
mov edx esi +
mov eax ebx +
call sub_476D50  +
mov edx 7Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov edx 2Eh +
mov eax ebx +
call sub_4765D0  +
jmp loc_47810E  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_476EF0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_478644  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_476EF0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_478625  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_478628  +
mov edx offset a_fract +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_478278  +
mov ebp [esp+98h+var_7C] +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_479B60  +
jmp loc_476EF0  +
mov edx [ebx+11Ch] +
jmp loc_4786E1  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_4786F6  +
cmp dword ptr [eax] 2Fh +
jnz loc_4786F6  +
cmp edx 0 +
jg loc_4786D2  +
jnz loc_4786F6  +
mov eax [eax+4] +
test eax eax +
lea esi [esi+0] +
jnz loc_477B79  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov esi [esp+98h+var_80] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_479DE0  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_476EF0  +
mov edx esi +
mov eax ebx +
call sub_4791A0  +
jmp loc_476EF0  +
mov edx 20h +
mov eax ebx +
call sub_4765D0  +
mov esi [ebp+4] +
jmp loc_4774E6  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_478783  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8857h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_47762D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_478760  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_478763  +
mov esi [ebx+12Ch] +
mov edi [ebx+128h] +
test esi esi +
mov [esp+98h+var_78] edi +
jle loc_478805  +
cmp eax [edi] +
jz loc_478D1B  +
lea edx [edi+8] +
xor ecx ecx +
jmp loc_4787FE  +
mov edi edx +
add edx 8 +
cmp eax [edx-8] +
jz loc_478D1F  +
add ecx 1 +
cmp ecx esi +
jnz loc_4787F0  +
cmp esi [ebx+130h] +
jge loc_47913D  +
mov edi [esp+98h+var_78] +
lea ecx [edi+esi*8] +
mov edi [ebx+110h] +
add esi 1 +
mov [ebx+12Ch] esi +
add ecx 4 +
mov [ecx-4] eax +
test edi edi +
mov [esp+98h+var_6C] edi +
jz loc_478898  +
mov edi [ebx+138h] +
mov esi [ebx+13Ch] +
lea edx ds:0[edi*8] +
cmp esi edi +
mov [esp+98h+var_70] esi +
mov [esp+98h+var_78] edx +
jle loc_47913D  +
mov [esp+98h+var_74] eax +
mov edx [esp+98h+var_6C] +
jmp loc_478871  +
add [esp+98h+var_78] 8 +
cmp edi [esp+98h+var_70] +
jz loc_479133  +
mov eax [edx+4] +
add edi 1 +
mov esi [esp+98h+var_78] +
add esi [ebx+134h] +
mov [esi+4] eax +
mov [ecx] esi +
mov edx [edx] +
mov ecx esi +
test edx edx +
jnz loc_478862  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ecx] 0 +
cmp dword ptr [ebx+118h] 0 +
jnz loc_476EF0  +
xor esi esi +
lea edx [eax+4] +
mov eax ebx +
call sub_476B40  +
test eax eax +
jz loc_4788F1  +
cmp dword ptr [eax] 2Fh +
jnz loc_478255  +
mov edx [ebx+11Ch] +
jmp loc_4788DF  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_4788F1  +
cmp dword ptr [eax] 2Fh +
jnz loc_4788F1  +
cmp edx 0 +
jg loc_4788D0  +
jnz loc_4788F1  +
mov eax [eax+4] +
test eax eax +
jnz loc_478255  +
test esi esi +
jz loc_4788FF  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov eax [esp+98h+var_78] +
mov edi offset aAd +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+98h+var_7C] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_478936  +
cmp eax 3 +
jz loc_478FCA  +
cmp eax 37h +
jz loc_4790A8  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_47A370  +
test ebp ebp +
jz loc_477471  +
mov edi offset aGs +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_478C7E  +
mov edi offset aSt +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_477471  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_479022  +
lea edx [eax+1] +
mov ecx [esp+98h+var_7C] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_4791A0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_478FF0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_476EF0  +
mov eax ebx +
mov edx 28h +
call sub_4765D0  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
add ecx 4 +
call sub_47A0F0  +
mov edx 29h +
mov eax ebx +
call sub_4765D0  +
jmp loc_477471  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_4775D4  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_478A8D  +
jmp loc_476EF0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_478AE8  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_476EF0  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_478A62  +
cmp al 5Fh +
jnz loc_478A62  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_478A62  +
cmp byte ptr [esi+2] 55h +
jnz loc_478A62  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_478A62  +
xor ecx ecx +
jmp loc_478ACA  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_47909E  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_478AB4  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_478DA0  +
movsx eax dl +
sub eax 37h +
jmp loc_478ABA  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+98h+var_80] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+98h+var_80] +
jmp loc_478A73  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov edx offset aDefaultArg +
mov eax ebx +
mov [esp+98h+var_7C] ecx +
call sub_476CC0  +
mov ecx [esp+98h+var_7C] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax ebx +
call sub_476D50  +
mov edx offset asc_4B86E7 +
mov eax ebx +
call sub_476CC0  +
mov ecx [esp+98h+var_7C] +
mov ecx [ecx+4] +
jmp loc_47811A  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_477250  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_4791A0  +
mov ecx [esp+98h+var_50] +
mov eax [esp+98h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_476EF0  +
mov edx 20h +
mov eax ebx +
call sub_4765D0  +
jmp loc_47781F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_476EB7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_476E84  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
jmp loc_476EF0  +
mov ecx [ecx+8] +
mov edi [ecx] +
test edi edi +
jnz loc_476E70  +
cmp eax 3Ch +
jz loc_47914C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
sub esi 2 +
call sub_4791A0  +
cmp esi 4 +
ja loc_476EF0  +
jmp ds:off_4B8A68[esi*4]  +
mov edx offset aLl +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
mov edx offset aUl +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
mov edx 6Ch +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov edx 75h +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov edx offset aUll +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
mov edi [esp+98h+var_78] +
mov esi [ebx+124h] +
test esi esi +
jz loc_478E23  +
mov ecx [esi] +
cmp ecx eax +
jz loc_4788AB  +
mov edx esi +
jmp loc_478D55  +
mov edx [edx+4] +
test edx edx +
jz loc_478E23  +
mov ecx [edx] +
cmp ecx eax +
jz loc_4788AB  +
cmp ebp ecx +
jnz loc_478D40  +
cmp edx esi +
jz loc_478D40  +
lea esi [esi+0] +
jmp loc_4788AB  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
test ecx ecx +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_4C] eax +
jnz loc_47829F  +
jmp loc_47829C  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_4790FE  +
movsx eax dl +
sub eax 57h +
jmp loc_478ABA  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov edx 20h +
mov eax ebx +
call sub_4765D0  +
jmp loc_477C1E  +
mov edx 20h +
mov eax ebx +
call sub_4765D0  +
jmp loc_477BF7  +
mov eax ebx +
mov edx 5Bh +
call sub_4765D0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_4791A0  +
mov edx 5Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov edx 2Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_476ED2  +
mov esi [ebx+110h] +
mov edx [edi+4] +
mov [esp+98h+var_7C] esi +
mov esi 1 +
mov [ebx+110h] edx +
jmp loc_4788AD  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
jmp loc_476EF0  +
movzx edi byte ptr [edx] +
lea ecx [edi-63h] +
cmp cl 1 +
jbe loc_478E68  +
sub edi 72h +
mov ecx edi +
cmp cl 1 +
ja loc_477385  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_47A370  +
mov eax ebx +
mov edx 3Ch +
call sub_4765D0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_4791A0  +
mov eax ebx +
mov edx offset asc_4B8935 +
call sub_476CC0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_4791A0  +
mov edx 29h +
mov eax ebx +
call sub_4765D0  +
jmp loc_476EF0  +
mov eax [esp+98h+var_74] +
jmp loc_4786B4  +
mov esi [edx+4] +
mov edi offset aJarray +
mov ecx 6 +
cmps   +
jnz loc_477BDD  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_4791A0  +
mov edx offset asc_4B86F2 +
mov eax ebx +
call sub_476CC0  +
jmp loc_477C2A  +
mov eax ebx +
mov edx 5Bh +
call sub_4765D0  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_4791A0  +
mov edx 5Dh +
mov eax ebx +
call sub_4765D0  +
jmp loc_47740A  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_47A370  +
jmp loc_4773F9  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_47A430  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_47A370  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_47A430  +
mov eax ebx +
mov edx offset asc_4B888E +
call sub_476CC0  +
mov ecx [esp+98h+var_74] +
mov edx edi +
mov eax ebx +
call sub_47A430  +
jmp loc_476EF0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_478F98  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_47A430  +
jmp loc_4773B9  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_47A430  +
mov edx offset a___ +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
mov eax [esp+98h+var_7C] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_47893F  +
mov edi [esp+98h+var_7C] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_7C] eax +
jmp loc_47893F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4789C3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_47898F  +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] esi +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_477D36  +
xor edi edi +
xor esi esi +
jmp loc_478278  +
mov dword ptr [ebx+118h] 1 +
jmp loc_476EF0  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_477D4D  +
mov ecx [ecx+4] +
jmp loc_477CC6  +
mov eax 5Fh +
jmp loc_478A62  +
mov eax [esp+98h+var_7C] +
mov edi [esp+98h+var_80] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_47A430  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_47A370  +
jmp loc_476EF0  +
cmp eax 3Bh +
jnz loc_476E70  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_479188  +
cmp al 31h +
jnz loc_476E70  +
mov edx offset aTrue +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_478A62  +
cmp dl 5Fh +
jnz loc_478A62  +
cmp ecx 0FFh +
mov eax edx +
ja loc_478A62  +
movsx edx cl +
mov eax ebx +
call sub_4765D0  +
mov esi ebp +
jmp loc_478A82  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ebx+118h] 1 +
jmp loc_47889E  +
mov edx 2Dh +
mov eax ebx +
call sub_4765D0  +
mov ecx [ebp+8] +
jmp loc_478CA8  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4791A0  +
mov eax [esp+98h+var_74] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_4786B4  +
jmp loc_476EF0  +
mov edx offset aFalse +
mov eax ebx +
call sub_476CC0  +
jmp loc_476EF0  +
***
sub esp 18h +
mov eax [eax+124h] +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_C] eax +
lea eax [esp+18h+var_10] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_476E00  +
mov eax [esp+18h+var_C] +
mov [ebx+124h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [esp+3Ch+var_24] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_479228  +
jmp ds:off_4B8AC0[eax*4]  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_47983E  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax [ebx+124h] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_476E00  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_479295  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 4B8ABCh +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479770  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_479270  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ebp +
mov ebp 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_479273  +
mov ecx [ecx+4] +
jmp loc_479228  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_479318  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8A85h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479255  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4792F5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4792F8  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_479393  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8A8Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479255  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_479370  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_479373  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_479413  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8A96h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479255  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4793F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4793F3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_47987D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_4797D0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_479807  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_4B8A97 +
jmp loc_479503  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8A99h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479255  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4794E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4794E3  +
test byte ptr [esp+3Ch+var_24] 4 +
jnz loc_479255  +
mov edx 2Ah +
mov eax ebx +
call sub_4765D0  +
jmp loc_479255  +
mov eax [ebx+100h] +
jmp loc_479486  +
mov eax [ebx+100h] +
jmp loc_4794D6  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_4795C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8AA2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479255  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4795A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4795A3  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_479643  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8AADh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479255  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_479620  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_479623  +
cmp byte ptr [ebx+104h] 28h +
jz loc_4796BE  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4798EB  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov eax [ebx+124h] +
mov esi offset asc_4B8AAE +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_476E00  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
jmp loc_479723  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4B8AB1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479255  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_479700  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_479703  +
mov eax [ebx+124h] +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_476E00  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4798B4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_479255  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_479494  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4794C5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_479214  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_479475  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4797B4  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_4796AD  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
test ecx ecx +
mov [esp+2Ch+var_14] edx +
mov ebp [esp+2Ch+arg_0] +
jz loc_4799B1  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_47995D  +
jmp loc_4799B1  +
mov edx [esi+118h] +
test edx edx +
jnz loc_4799B1  +
mov eax [ebx+8] +
test eax eax +
jnz loc_4799AB  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_479975  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_4799AB  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_4799B9  +
cmp eax 2Ah +
jz loc_4799DA  +
cmp eax 2 +
jz loc_4799FB  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_4791E0  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_479953  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_479DE0  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_479B60  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+2Ch+var_14] +
mov ecx [ecx+4] +
call sub_4791A0  +
mov eax [esi+100h] +
test byte ptr [esp+2Ch+var_14] 4 +
mov [esi+114h] ebp +
jnz loc_479A95  +
mov ebp offset asc_4B86D6 +
mov [esp+2Ch+var_10] ebx +
jmp loc_479A56  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4B86D8h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_479AB2  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_479A37  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_479A3A  +
cmp eax 0FFh +
jz loc_479AEB  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_479AB6  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+4] +
mov ecx [eax+8] +
mov eax [ecx] +
cmp eax 45h +
jnz loc_479ACA  +
jmp loc_479B1F  +
mov ecx [ecx+4] +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_479AC5  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_4791A0  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_479A9F  +
mov edx offset aDefaultArg +
mov eax esi +
mov [esp+2Ch+var_10] ecx +
call sub_476CC0  +
mov ecx [esp+2Ch+var_10] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax esi +
call sub_476D50  +
mov edx offset asc_4B86E7 +
mov eax esi +
call sub_476CC0  +
mov ecx [esp+2Ch+var_10] +
jmp loc_479AC5  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_479B9A  +
mov edx [eax+8] +
test edx edx +
jz loc_479C20  +
mov eax [eax] +
test eax eax +
jnz loc_479B75  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_479930  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_479CE0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_479D87  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_479BF5  +
mov eax ebx +
mov edx edi +
call sub_4791A0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_479D50  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_479DC0  +
mov eax [ebx+100h] +
mov esi offset unk_4B8B6C +
jmp loc_479C5F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_4B8B6E +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_479CA5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_479C40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_479C43  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_479930  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_479D17  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_479BA0  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_479BAE  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_479CCA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_479C03  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_479BCE  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_479930  +
mov edx [ebx+100h] +
jmp loc_479BBF  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_28] ecx +
test esi esi +
jz loc_479EC0  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_479EC0  +
mov eax esi +
mov edx 1 +
jmp loc_479E2E  +
and ch 0Eh +
jnz loc_479F82  +
mov eax [eax] +
test eax eax +
jz loc_479EC0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_479EC0  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_479E19  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_479E10  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_479F97  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_47A0B4  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_479FA8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_479FAB  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+34h+var_34] 0 +
call sub_479930  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_47A00F  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+34h+var_28] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_479F43  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_476E00  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_47A046  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+34h+var_34] 1 +
call sub_479930  +
mov [ebx+114h] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_479E50  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_479E89  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+34h+var_34] 0 +
call sub_479930  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_47A07D  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_479EF4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_479EF7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_479F51  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_479FF2  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_479E6D  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+140h] +
test eax eax +
jz loc_47A11F  +
mov edx [ebx+110h] +
mov [esp+34h+var_20] eax +
mov [esp+34h+var_24] edx +
lea edx [esp+34h+var_24] +
mov [ebx+110h] edx +
mov ecx [esi] +
cmp dword ptr [ecx] 4 +
jz loc_47A170  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_476E00  +
mov edx [ebx+140h] +
mov eax [esp+34h+var_18] +
test edx edx +
mov [ebx+124h] eax +
jz loc_47A165  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+124h] +
lea ebp [esp+34h+var_1C] +
mov edx edi +
mov ecx [ecx+4] +
mov [ebx+124h] ebp +
mov [esp+34h+var_18] eax +
mov eax ebx +
mov [esp+34h+var_1C] ecx +
call sub_476E00  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+140h] +
test eax eax +
jz loc_47A1B2  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_47A2B7  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_47A242  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx edi +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [esi] +
mov ecx [eax+8] +
mov eax [ebx+124h] +
mov [ebx+124h] ebp +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
mov eax ebx +
call sub_476E00  +
mov eax [esp+34h+var_18] +
cmp byte ptr [ebx+104h] 3Eh +
mov [ebx+124h] eax +
jz loc_47A2E0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_47A280  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_47A1CF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_47A229  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_47A307  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_47A1C5  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_47A33B  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_47A21F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_47A2C8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_47A2F1  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
cmp dword ptr [ecx] 31h +
jz loc_47A3B0  +
mov eax [eax+124h] +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_10] eax +
lea eax [esp+2Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_476E00  +
mov eax [esp+2Ch+var_10] +
mov [ebx+124h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_47A3A7  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_47A3E2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_47A3A7  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_47A3C7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_20] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_20] +
jmp loc_47A3CA  +
***
mov ebx eax +
sub esp 34h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_47A443  +
cmp eax 30h +
jnz loc_47A472  +
mov eax [ebx+124h] +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_476E00  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_47A443  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_47A524  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+124h] +
mov byte ptr [ebx+104h] 28h +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_476E00  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_47A4F0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_47A4D5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
mov [esp+34h+var_2C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_34] ebx +
call eax  +
xor eax eax +
mov ecx [esp+34h+var_18] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+34h+var_1C] +
jmp loc_47A48B  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_47A5A4  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_47A5A4  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_47A5A4  +
mov eax [esp+8] +
mov dword ptr [edx] 0 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_47A5E1  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_47A5E1  +
test edx edx +
jz loc_47A5E1  +
mov dword ptr [eax] 32h +
mov [eax+4] ecx +
mov [eax+8] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_47A628  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_47A628  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_47A62A  +
mov eax [esp+8] +
mov dword ptr [edx] 7 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_47A668  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_47A668  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_47A66A  +
mov eax [esp+8] +
mov dword ptr [edx] 8 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov ecx [ebx+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_47A7C0  +
cmp al 56h +
jz loc_47A7C0  +
cmp al 4Bh +
jz loc_47A7C0  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_47A7B3  +
movzx edx dl +
jmp ds:off_4B8B7C[edx*4]  +
mov eax [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
mov [esp+2Ch+var_24] eax +
movzx eax byte ptr [ecx+2] +
cmp al 4Ch +
jz loc_47B3AD  +
cmp al 54h +
jz loc_47B39F  +
cmp al 73h +
jz loc_47B125  +
cmp al 66h +
nop   +
lea esi [esi+0] +
jz loc_47B162  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_47B088  +
cmp al 6Fh +
jz loc_47B078  +
cmp al 74h +
setz dl  +
jnz loc_47B821  +
cmp byte ptr [ecx+3] 6Ch +
jz loc_47B55F  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov esi eax +
jz loc_47B332  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_47B3BB  +
cmp ecx 32h +
jz loc_47B697  +
cmp ecx 33h +
jnz loc_47B332  +
xor ebp ebp +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47B785  +
mov eax ebx +
call sub_47F1A0  +
test ebp ebp +
mov [esp+2Ch+var_2C] eax +
jz loc_47A76A  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov ecx eax +
mov eax [esp+2Ch+var_24] +
mov edx 41h +
mov [ebx+34h] eax +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_476370  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_47A7B3  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_47A7B3  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_47A878  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_476420  +
test eax eax +
mov esi eax +
jz loc_47A7B3  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_47A820  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_47A7B3  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_47A830  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_47A7B3  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_47A7B3  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_47BFC0  +
mov edx eax +
mov [esi] eax +
jmp loc_47A7E7  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_47A7F5  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_4767B0  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
lea esi [esi+0] +
test eax eax +
jz loc_47A7B3  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_47A7B3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_47C740  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_47AE23  +
sub eax 30h +
cmp al 9 +
ja loc_47AE6A  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_47A8D0  +
sub ecx edx +
mov eax ebx +
call sub_4763D0  +
test eax eax +
mov esi eax +
jz loc_47A8FB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_47AE25  +
xor eax eax +
jmp loc_47A9D9  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
mov eax ebx +
call sub_47BFC0  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_47A7B3  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_47A7B3  +
movzx eax al +
jmp ds:off_4B8CA8[eax*4]  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
test eax eax +
mov esi eax +
jz loc_47A8FB  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
test eax eax +
jz loc_47A8FB  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_47AA8B  +
cmp al 5Fh +
jz loc_47AA8B  +
sub eax 41h +
cmp al 19h +
ja loc_47AE49  +
xor edx edx +
mov eax ebx +
call sub_4768D0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_47A7B5  +
mov eax ebx +
call sub_47C010  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_4767B0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_47AF47  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:4B93C0h[eax*4] +
jl loc_47ADF1  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_47A7B5  +
mov eax ebx +
call sub_476730  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_47A870  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_47AF6C  +
test eax eax +
jz loc_47A7B3  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_47A7B3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_47C010  +
jmp loc_47AAAB  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47AE16  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_47B995  +
mov dword ptr [eax] 27h +
mov edx offset off_4B962C +
mov dword ptr [eax+4] offset off_4B962C +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_47A7B5  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47AE16  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_47B995  +
mov dword ptr [eax] 27h +
mov edx offset off_4B9604 +
mov dword ptr [eax+4] offset off_4B9604 +
jmp loc_47ABC3  +
mov eax ebx +
call sub_47F750  +
jmp loc_47A9D9  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47AE16  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_47B995  +
mov dword ptr [eax] 27h +
mov edx offset off_4B9618 +
mov dword ptr [eax+4] offset off_4B9618 +
jmp loc_47ABC3  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
jmp loc_47A870  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47AE16  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_47B995  +
mov dword ptr [eax] 27h +
mov edx offset off_4B9640 +
mov dword ptr [eax+4] offset off_4B9640 +
jmp loc_47ABC3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47AE16  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_47B995  +
mov dword ptr [eax] 27h +
mov edx offset off_4B95DC +
mov dword ptr [eax+4] offset off_4B95DC +
jmp loc_47ABC3  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_4763D0  +
jmp loc_47A7B5  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_47AD14  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_47B0CA  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_47A7B3  +
lea eax [ebx+0Ch] +
call sub_476650  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_47AD74  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_47A7B5  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47AE16  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_47B995  +
mov dword ptr [eax] 27h +
mov edx offset off_4B95C8 +
mov dword ptr [eax+4] offset off_4B95C8 +
jmp loc_47ABC3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47AE16  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_47B995  +
mov dword ptr [eax] 27h +
mov edx offset off_4B95F0 +
mov dword ptr [eax+4] offset off_4B95F0 +
jmp loc_47ABC3  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_47B9A0  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_47AB2A  +
mov edx large ds:4 +
xor eax eax +
jmp loc_47ABC3  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
jmp loc_47A9D9  +
mov eax ebx +
call sub_47C740  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_47A7B3  +
cmp dword ptr [eax] 18h +
jnz loc_47A878  +
jmp loc_47A7B5  +
mov edi [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
movzx eax byte ptr [ecx+1] +
cmp al 4Ch +
jz loc_47B104  +
cmp al 54h +
jz loc_47B1B6  +
cmp al 73h +
jz loc_47AFE8  +
cmp al 66h +
jz loc_47B025  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_47AFC3  +
cmp al 6Fh +
jz loc_47AFB3  +
cmp al 74h +
setz dl  +
jnz loc_47B984  +
cmp byte ptr [ecx+2] 6Ch +
jz loc_47B1C4  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov esi eax +
jz loc_47B11A  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_47B2D2  +
cmp ecx 32h +
jz loc_47B1F6  +
cmp ecx 33h +
jnz loc_47B11A  +
mov [esp+2Ch+var_24] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47B76E  +
mov eax ebx +
call sub_47F1A0  +
cmp [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_47AF25  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov esi eax +
test esi esi +
mov [ebx+34h] edi +
jnz loc_47A8EF  +
xor eax eax +
jmp loc_47A9D9  +
mov eax ebx +
call sub_47C010  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_47AAE6  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_47C010  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_47B0DB  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_47A870  +
cmp byte ptr [ecx+2] 6Eh +
jnz loc_47AEC1  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_47BC20  +
test eax eax +
mov esi eax +
jz loc_47B11A  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jz loc_47B30B  +
mov [ebx+34h] edi +
jmp loc_47A8F2  +
movzx eax byte ptr [ecx+2] +
cmp al 72h +
jz loc_47B362  +
cmp al 70h +
jnz loc_47AEC1  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47AF35  +
cmp byte ptr [ecx+2] 70h +
jnz loc_47AEC1  +
lea eax [ecx+3] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+3] 54h +
jnz loc_47B591  +
add ecx 4 +
xor edx edx +
mov [ebx+0Ch] ecx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_47B11A  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_47B11A  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_47AFE0  +
cmp byte ptr [ecx+3] 6Eh +
jnz loc_47A70F  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_47BC20  +
test eax eax +
jz loc_47B332  +
mov edx [ebx+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jnz loc_47A77A  +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_47C010  +
mov ecx [esp+2Ch+var_20] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47A77A  +
lea eax [ebx+0Ch] +
call sub_476650  +
mov esi [esp+2Ch+var_10] +
jmp loc_47AD3A  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_47A7B3  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_47A7B3  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_47AAAB  +
mov eax ebx +
call sub_47D210  +
mov esi eax +
jmp loc_47AF35  +
cmp al 77h +
jz loc_47B24A  +
mov [ebx+34h] edi +
xor eax eax +
nop   +
jmp loc_47A9D9  +
movzx eax byte ptr [ecx+3] +
cmp al 72h +
jz loc_47B65A  +
cmp al 70h +
jnz loc_47A70F  +
add ecx 4 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47A77A  +
cmp byte ptr [ecx+3] 70h +
jnz loc_47A70F  +
lea eax [ecx+4] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+4] 54h +
jnz loc_47B5EF  +
add ecx 5 +
xor esi esi +
mov [ebx+0Ch] ecx +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47B332  +
imul eax edx +
xor ecx ecx +
add eax [ebx+10h] +
add edx 1 +
mov [ebx+14h] edx +
test eax eax +
jz loc_47A77A  +
mov dword ptr [eax] 6 +
mov ecx eax +
mov [eax+4] esi +
jmp loc_47A77A  +
mov eax ebx +
call sub_476730  +
mov esi eax +
jmp loc_47AF35  +
xor esi esi +
test dl dl +
jnz loc_47B638  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47AF35  +
mov eax [eax+4] +
xor ebp ebp +
cmp eax 1 +
jz loc_47B8F5  +
jle loc_47B339  +
cmp eax 2 +
jz loc_47B4C1  +
cmp eax 3 +
jnz loc_47B11A  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_47B618  +
cmp byte ptr [ebp+0] 6Eh +
jnz loc_47B11A  +
movzx eax byte ptr [ebp+1] +
cmp al 61h +
jnz loc_47B112  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_47A670  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47B969  +
cmp dl 70h +
jz loc_47B948  +
cmp dl 69h +
jnz loc_47B11A  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47B11A  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_24] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47AF35  +
mov eax [eax+4] +
mov [esp+2Ch+var_24] ecx +
mov ebp [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
mov ecx [esp+2Ch+var_24] +
test eax eax +
jz loc_47B608  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_47B1FB  +
mov eax ebx +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47AF35  +
cmp al 77h +
jz loc_47B43D  +
xor ecx ecx +
jmp loc_47A77A  +
test eax eax +
nop   +
lea esi [esi+0] +
jnz loc_47B11A  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47AF35  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
mov eax ebx +
call sub_47BC20  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47B5CF  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47AF35  +
mov eax ebx +
call sub_476730  +
mov ecx eax +
jmp loc_47A77A  +
mov eax ebx +
call sub_47D210  +
mov ecx eax +
jmp loc_47A77A  +
mov eax [eax+4] +
mov [esp+2Ch+var_20] ecx +
mov edi [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
mov ecx [esp+2Ch+var_20] +
test eax eax +
jz loc_47B882  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_47B854  +
jle loc_47B73B  +
cmp eax 2 +
jz loc_47B6A1  +
cmp eax 3 +
jnz loc_47B332  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_47B8D7  +
cmp byte ptr [edi] 6Eh +
jnz loc_47B332  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_47B32A  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_47A670  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47B8CA  +
cmp dl 70h +
jz loc_47B8A9  +
cmp dl 69h +
jnz loc_47B332  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47B332  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_476370  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47A77A  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47B5A8  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_47B647  +
mov [esp+2Ch+var_28] offset unk_4B8B6F +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_47B51F  +
mov [esp+2Ch+var_28] offset unk_4B8B72 +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jnz loc_47B976  +
mov eax ebx +
call sub_47BC20  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47B835  +
mov ecx [esp+2Ch+var_24] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_476370  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47AF35  +
xor esi esi +
test dl dl +
jnz loc_47B75F  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47A77A  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_47B047  +
jmp loc_47B11A  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_47B5BE  +
sub eax 72h +
cmp al 1 +
ja loc_47B4D0  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_24] eax +
jmp loc_47B4DB  +
mov eax ebx +
call sub_47C010  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47B38A  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov esi eax +
jnz loc_47B184  +
xor ecx ecx +
jmp loc_47A77A  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47AF25  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_24] eax +
mov eax ebx +
call sub_47F1A0  +
mov ebp eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_47B296  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
jmp loc_47B1CE  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ebp eax +
jmp loc_47B534  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
mov eax ebx +
call sub_47BC20  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47B79C  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47A77A  +
mov eax [eax+4] +
xor edi edi +
jmp loc_47B3EF  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47B7CF  +
mov eax ebx +
call sub_47F1A0  +
mov ebp eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_47B7BC  +
mov [esp+2Ch+var_28] offset unk_4B8B6F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_47B6FD  +
mov [esp+2Ch+var_28] offset unk_4B8B72 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_47B7F4  +
mov eax ebx +
call sub_47BC20  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47B802  +
mov ecx ebp +
mov edx 37h +
mov [esp+2Ch+var_2C] edi +
mov eax ebx +
call sub_476370  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47A77A  +
test eax eax +
jnz loc_47B332  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47A77A  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
jmp loc_47B569  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47AF0A  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47A752  +
mov eax ebx +
call sub_47C010  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47B682  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov edi eax +
jmp loc_47B712  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_47B7E5  +
sub eax 72h +
cmp al 1 +
ja loc_47B6B0  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov ebp eax +
jmp loc_47B6B9  +
mov eax ebx +
call sub_47F1A0  +
mov edi eax +
jmp loc_47B712  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edi eax +
jmp loc_47B712  +
cmp al 69h +
jz loc_47A705  +
lea esi [esi+0] +
jmp loc_47A70F  +
mov eax ebx +
call sub_47C010  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ebp eax +
jmp loc_47B534  +
xor ebp ebp +
test edi edi +
jz loc_47B868  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_47B876  +
xor ebp ebp +
cmp al [edi+1] +
jz loc_47B892  +
cmp ecx 33h +
jnz loc_47A74B  +
jmp loc_47A73F  +
cmp al 70h +
jnz loc_47B868  +
lea esi [esi+0] +
jmp loc_47B861  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47A76A  +
mov eax [ebx+0Ch] +
mov bp 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_47B868  +
add eax 1 +
xor bp bp +
mov [ebx+0Ch] eax +
jmp loc_47B868  +
cmp byte ptr [eax+1] 69h +
jnz loc_47B332  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47B487  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_47B487  +
mov eax ebx +
call sub_47F1A0  +
mov edi eax +
mov eax ebx +
call sub_47F1A0  +
mov ebp eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_47B487  +
test ebp ebp +
mov [esp+2Ch+var_24] 0 +
jz loc_47B90D  +
movzx eax byte ptr [ebp+0] +
cmp al 6Dh +
jz loc_47B91B  +
cmp al 70h +
jz loc_47B91B  +
cmp ecx 33h +
jnz loc_47AF03  +
jmp loc_47AEF7  +
cmp al [ebp+1] +
mov [esp+2Ch+var_24] 0 +
jnz loc_47B90D  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_24] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_47B90D  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_24] 0 +
jmp loc_47B90D  +
cmp byte ptr [eax+1] 69h +
jnz loc_47B11A  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47B296  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_47B296  +
mov eax ebx +
call sub_47F1A0  +
mov ebp eax +
jmp loc_47B534  +
cmp al 69h +
jz loc_47AEB7  +
lea esi [esi+0] +
jmp loc_47AEC1  +
mov edx large ds:4 +
jmp loc_47ABC3  +
mov esi large ds:4 +
jmp loc_47AB2A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_47BA54  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_47BB44  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_47BAC6  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_47BA5B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_4767B0  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_47BABC  +
mov esi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [esi+10h] +
mov [esi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_47BABC  +
test eax eax +
jz loc_47BABC  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_47BABE  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_47BA78  +
mov ebx edi +
cmp cl bl +
jle loc_47BAB3  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_47BABC  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_4B97E0[ecx] +
lea ebp off_4B97E0[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_47BA68  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_47BB10  +
cmp cl [esp+1Ch+var_11] +
jg loc_47BA6E  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_47BA78  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_47BA5B  +
mov eax edi +
cmp al 63h +
jnz loc_47BA5B  +
mov edi [esp+1Ch+var_10] +
mov eax [edi+34h] +
mov ebx [edi+38h] +
test eax eax +
setz al  +
movzx eax al +
mov [edi+38h] eax +
mov [esp+1Ch+var_1C] edi +
call sub_47A670  +
mov edx 33h +
mov [edi+38h] ebx +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_476370  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_47BABE  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_47BABE  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_47B9EC  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_47BBF0  +
cmp dl 45h +
jz loc_47BBF0  +
cmp dl 2Eh +
jz loc_47BBF0  +
lea esi [esp+24h+var_8] +
jmp loc_47BBC4  +
cmp byte ptr [eax+1] 45h +
jz loc_47BBD4  +
mov [esp+24h+var_24] ebx +
call sub_47A670  +
test eax eax +
jz loc_47BBF0  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_476370  +
test eax eax +
mov [esi] eax +
jz loc_47BBF0  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_47BBD4  +
cmp dl 45h +
jz loc_47BBD4  +
cmp dl 2Eh +
jz loc_47BBD4  +
cmp dl 4Fh +
jz loc_47BB80  +
cmp dl 52h +
jnz loc_47BB86  +
cmp byte ptr [eax+1] 45h +
jnz loc_47BB86  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_47BBF0  +
mov edx [eax+8] +
test edx edx +
jz loc_47BBF8  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+4] +
cmp dword ptr [edx] 27h +
jnz loc_47BBE3  +
mov edx [edx+4] +
cmp dword ptr [edx+10h] 9 +
jnz loc_47BBE3  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+4] 0 +
jmp loc_47BBE3  +
***
push esi  +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_47BF97  +
xor esi esi +
test edx edx +
jnz loc_47BF9D  +
mov eax ebx +
call sub_47BB50  +
test eax eax +
jz loc_47BFB0  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_476370  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_47A670  +
test eax eax +
mov esi eax +
jnz loc_47BF75  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_47BF91  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_47BFD5  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_47BFE7  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_47BF60  +
mov edx eax +
mov eax ebx +
call sub_476520  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_47BFCE  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edx [ebp+0Ch] +
mov [esp+48h+var_34] eax +
movzx eax byte ptr [edx] +
sub eax 49h +
cmp al 1 +
ja loc_47C1A0  +
lea eax [edx+1] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+1] 45h +
jz loc_47C4BA  +
mov [esp+48h+var_1C] 0 +
lea ebx [esp+48h+var_1C] +
movzx edx byte ptr [edx+1] +
jmp loc_47C09F  +
sub edx 49h +
cmp dl 1 +
ja loc_47C1C0  +
mov eax ebp +
call sub_47C010  +
mov ecx eax +
test ecx ecx +
jz loc_47C1A0  +
mov [esp+48h+var_48] 0 +
mov edx 2Fh +
mov eax ebp +
call sub_476370  +
test eax eax +
mov [ebx] eax +
jz loc_47C1A0  +
lea ebx [eax+8] +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47C334  +
cmp dl 4Ch +
jz loc_47C1B0  +
jle loc_47C053  +
cmp dl 58h +
lea esi [esi+0] +
jnz loc_47C1C0  +
lea esi [eax+1] +
mov edi [ebp+34h] +
mov [ebp+0Ch] esi +
mov dword ptr [ebp+34h] 1 +
movzx edx byte ptr [eax+1] +
mov [esp+48h+var_3C] edi +
cmp dl 4Ch +
jz loc_47C350  +
cmp dl 54h +
jz loc_47C361  +
cmp dl 73h +
jz loc_47C2A0  +
cmp dl 66h +
jz loc_47C2E2  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_47C1E0  +
cmp dl 6Fh +
jz loc_47C1D0  +
cmp dl 74h +
setz cl  +
jnz loc_47C6E2  +
cmp byte ptr [eax+2] 6Ch +
jz loc_47C372  +
mov eax ebp +
call sub_47B9B0  +
test eax eax +
mov [esp+48h+var_38] eax +
jz loc_47C290  +
mov eax [esp+48h+var_38] +
mov edx [eax] +
cmp edx 31h +
jz loc_47C214  +
cmp edx 32h +
jz loc_47C3B0  +
cmp edx 33h +
jnz loc_47C290  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47C5E5  +
mov eax ebp +
call sub_47F1A0  +
test esi esi +
mov [esp+48h+var_48] eax +
jz loc_47C17E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_476370  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov ecx eax +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jz loc_47C209  +
nop   +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_47D210  +
mov ecx eax +
jmp loc_47C068  +
mov [esp+48h+var_48] ebp +
call sub_47A670  +
mov ecx eax +
jmp loc_47C068  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_47C11D  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47BC20  +
mov edx [ebp+0Ch] +
test eax eax +
jz loc_47C293  +
cmp byte ptr [edx] 49h +
mov ecx eax +
jz loc_47C3C4  +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jnz loc_47C1A0  +
add edx 1 +
mov [ebp+0Ch] edx +
jmp loc_47C068  +
mov eax [eax+4] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_47C5FC  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_47C6F5  +
jle loc_47C3F0  +
cmp eax 2 +
jz loc_47C419  +
cmp eax 3 +
jnz loc_47C290  +
mov esi [esp+48h+var_30] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47C62E  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 6Eh +
jz loc_47C531  +
nop   +
mov edx [ebp+0Ch] +
xor ecx ecx +
jmp loc_47C1FD  +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_47C4DA  +
cmp dl 70h +
jnz loc_47C11D  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47F1A0  +
mov edx 49h +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
cmp byte ptr [eax+2] 70h +
jnz loc_47C11D  +
lea edx [eax+3] +
mov [ebp+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_47C51A  +
add eax 4 +
xor edx edx +
mov [ebp+0Ch] eax +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_47C290  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_47C5BD  +
mov [ecx+4] edx +
mov edx [ebp+0Ch] +
mov dword ptr [ecx] 6 +
jmp loc_47C1FD  +
add eax 1 +
mov [ebp+0Ch] eax +
mov eax [esp+48h+var_34] +
mov [ebp+2Ch] eax +
mov eax [esp+48h+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_47D210  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
mov eax ebp +
call sub_476730  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
xor edi edi +
test cl cl +
jnz loc_47C609  +
add esi 2 +
mov edx 45h +
mov [ebp+0Ch] esi +
mov eax ebp +
call sub_47D430  +
mov ecx edi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
mov eax [esp+48h+var_38] +
mov [esp+48h+var_30] 0 +
mov eax [eax+4] +
jmp loc_47C24F  +
mov [esp+48h+var_38] eax +
mov eax ebp +
call sub_47C010  +
mov ecx [esp+48h+var_38] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
test eax eax +
jnz loc_47C290  +
mov ecx [esp+48h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_476370  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
mov eax [esp+48h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47C64C  +
mov eax ebp +
call sub_47F1A0  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_47C61B  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4B8B6F +
mov ecx 3 +
cmps   +
jz loc_47C475  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4B8B72 +
mov ecx 3 +
cmps   +
jnz loc_47C673  +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47C6A2  +
mov ecx [esp+48h+var_2C] +
mov edx 37h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_476370  +
mov ecx [esp+48h+var_38] +
mov edx 36h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
add edx 2 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax ebp +
mov edx 2Fh +
mov [esp+48h+var_48] 0 +
call sub_476370  +
jmp loc_47C1A2  +
add eax 3 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_48] ebp +
call sub_47A670  +
mov esi eax +
mov eax ebp +
call sub_47BC20  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47C5C5  +
mov [esp+48h+var_48] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_47C1FD  +
mov eax ebp +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_47C304  +
jmp loc_47C290  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_47C681  +
mov edx 5Fh +
mov eax ebp +
call sub_47D430  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_47A670  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_47C695  +
xor ecx ecx +
cmp al 70h +
jz loc_47C6C1  +
cmp al 69h +
jnz loc_47C1FD  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_47C1FD  +
mov eax ebp +
call sub_47F1A0  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_476370  +
mov ecx esi +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_476370  +
mov ecx [esp+48h+var_38] +
mov edx 38h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
mov edx [ebp+0Ch] +
jmp loc_47C1FD  +
mov eax ebp +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_476370  +
mov [esp+48h+var_48] eax +
jmp loc_47C502  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
jmp loc_47C166  +
mov [esp+48h+var_48] ebp +
call sub_47A670  +
jmp loc_47C17B  +
mov [esp+48h+var_48] ebp +
call sub_47A670  +
mov esi [ebp+0Ch] +
mov edi eax +
jmp loc_47C37C  +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov esi eax +
jmp loc_47C48A  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
mov eax ebp +
call sub_47F1A0  +
mov edi eax +
mov eax ebp +
call sub_47F1A0  +
jmp loc_47C586  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_47C662  +
sub eax 72h +
cmp al 1 +
ja loc_47C42C  +
mov [esp+48h+var_48] ebp +
call sub_47A670  +
mov [esp+48h+var_2C] eax +
jmp loc_47C437  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
jmp loc_47C48A  +
cmp al 77h +
jz loc_47C53D  +
lea esi [esi+0] +
jmp loc_47C290  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_47C586  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47C48A  +
cmp byte ptr [edx+1] 69h +
jnz loc_47C1FD  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_47D430  +
jmp loc_47C586  +
cmp dl 69h +
jz loc_47C113  +
nop   +
lea esi [esi+0] +
jmp loc_47C11D  +
mov eax [esp+48h+var_30] +
xor esi esi +
test eax eax +
jz loc_47C70A  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_47C718  +
cmp al 70h +
jz loc_47C718  +
cmp edx 33h +
jnz loc_47C15F  +
jmp loc_47C153  +
mov edi [esp+48h+var_30] +
xor esi esi +
cmp al [edi+1] +
jnz loc_47C70A  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_47C70A  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_47C70A  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_47C8C4  +
jle loc_47C7A3  +
cmp al 55h +
jz loc_47C790  +
cmp al 5Ah +
nop   +
jnz loc_47C870  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_47CB50  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_47CA30  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_47BC20  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_47C870  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_476420  +
test eax eax +
mov edi eax +
jz loc_47C783  +
xor edx edx +
mov eax esi +
call sub_476520  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_47C862  +
cmp bl 44h +
jz loc_47C9C6  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_47C970  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_47C970  +
cmp bl 43h +
jz loc_47C970  +
cmp bl 55h +
jz loc_47C970  +
cmp bl 4Ch +
jz loc_47C970  +
cmp bl 53h +
jz loc_47CA10  +
cmp bl 49h +
jz loc_47C9F0  +
cmp bl 54h +
jz loc_47CA21  +
cmp bl 45h +
nop   +
jz loc_47CB0D  +
cmp bl 4Dh +
jnz loc_47C862  +
test ebp ebp +
lea esi [esi+0] +
jz loc_47C862  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_47C7E4  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_47C785  +
mov eax esi +
call sub_47BC20  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_47C799  +
test eax eax +
jz loc_47C783  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_47C783  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_47C010  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_476370  +
mov ebx eax +
jmp loc_47C799  +
cmp byte ptr [edx+1] 74h +
jz loc_47C902  +
xor edx edx +
mov eax esi +
call sub_4768D0  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_47C799  +
mov eax esi +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_476370  +
mov ebx eax +
jmp loc_47C799  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_47BC20  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_4763D0  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_476370  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_47C799  +
test edi edi +
jz loc_47C783  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_47C783  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_47C8E3  +
mov eax esi +
call sub_47BC20  +
test ebp ebp +
jz loc_47C9E0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_476370  +
mov ebp eax +
cmp bl 53h +
jz loc_47C9BB  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_47C9E4  +
test ebp ebp +
jz loc_47C862  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_47C862  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_47C7E0  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_47C970  +
mov [esp+30h+var_30] esi +
call sub_47A670  +
test ebp ebp +
jnz loc_47C97B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_47C98E  +
mov ebx 45h +
jmp loc_47C7ED  +
test ebp ebp +
jz loc_47C862  +
mov eax esi +
call sub_47C010  +
mov edx 4 +
jmp loc_47C980  +
mov edx 1 +
mov eax esi +
call sub_4768D0  +
jmp loc_47C977  +
mov eax esi +
call sub_476730  +
jmp loc_47C977  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_47CAE2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_47CAB1  +
mov eax esi +
call sub_47C740  +
test eax eax +
mov edi eax +
jz loc_47CA64  +
mov eax [eax] +
cmp eax 44h +
jz loc_47CA64  +
cmp eax 46h +
jnz loc_47CAD0  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_47CA94  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_47CA94  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_47CA94  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_476370  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_4766F0  +
test eax eax +
mov ebp eax +
jns loc_47CA4B  +
xor ebx ebx +
jmp loc_47C785  +
mov eax esi +
call sub_476780  +
test eax eax +
jnz loc_47CA64  +
xor ebx ebx +
jmp loc_47C785  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_476780  +
test eax eax +
jz loc_47C783  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_4763D0  +
mov [esp+30h+var_30] eax +
jmp loc_47CA97  +
test ebp ebp +
mov [edi] ebp +
jz loc_47C783  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_47CB2A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_47C783  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_47C799  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_47CC30  +
cmp cl 47h +
jz loc_47CC30  +
mov eax ebx +
mov edi edx +
call sub_47C740  +
test eax eax +
mov esi eax +
jnz loc_47CBE2  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_47CC48  +
test dl dl +
jz loc_47CC48  +
cmp dl 45h +
jz loc_47CC48  +
mov edx [eax] +
cmp edx 4 +
jz loc_47CC50  +
jb loc_47CBC0  +
sub edx 1Ch +
cmp edx 4 +
ja loc_47CBC0  +
mov eax [eax+4] +
test eax eax +
jnz loc_47CBA1  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_47BF60  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_47CB80  +
test byte ptr [ebx+8] 1 +
jnz loc_47CB80  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_47CC03  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_47CBF6  +
cmp edx 2 +
mov eax esi +
jnz loc_47CC48  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_47CC24  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_47CC17  +
mov [esi+8] eax +
mov eax esi +
jmp loc_47CC48  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_47CC90  +
cmp dl 47h +
jz loc_47CC65  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_47CCC0  +
cmp dword ptr [eax] 33h +
ja loc_47CCC0  +
mov edx [eax] +
jmp ds:off_4B8DB0[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_47CC46  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_47CC46  +
movzx edx dl +
jmp ds:off_4B8E80[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_47CC46  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_47CC46  +
movzx eax al +
jmp ds:off_4B8F48[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_47CC57  +
nop   +
mov edx 1 +
jmp loc_47CBC2  +
lea eax [ebx+0Ch] +
call sub_476650  +
cmp eax 1 +
jle loc_47CC46  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_47CC46  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_47CC46  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_47CC46  +
xor esi esi +
cmp al 24h +
jz loc_47D052  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_47CD29  +
cmp al 24h +
jz loc_47CD29  +
add esi 1 +
cmp esi ebp +
jl loc_47CD16  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_4763D0  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_47CC46  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_47D0A0  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_476370  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_47CC46  +
test ebp ebp +
jg loc_47CD01  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_476370  +
jmp loc_47CC48  +
mov eax ebx +
call sub_47C740  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov eax ebx +
call sub_47C740  +
mov esi eax +
mov eax ebx +
call sub_4766B0  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
xor edx edx +
mov eax ebx +
call sub_47CB50  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
cmp byte ptr [eax+2] 0 +
jz loc_47D0A9  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_47D0A9  +
xor edx edx +
mov eax ebx +
call sub_47CB50  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov edx 76h +
mov eax ebx +
call sub_476AD0  +
test eax eax +
jz loc_47CC46  +
xor edx edx +
mov eax ebx +
call sub_47CB50  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov eax ebx +
call sub_47C740  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_476650  +
test eax eax +
js loc_47CC46  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_47CC46  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov edx 68h +
mov eax ebx +
call sub_476AD0  +
test eax eax +
jz loc_47CC46  +
xor edx edx +
mov eax ebx +
call sub_47CB50  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
xor edx edx +
mov eax ebx +
call sub_476AD0  +
test eax eax +
jz loc_47CC46  +
xor edx edx +
mov eax ebx +
call sub_476AD0  +
test eax eax +
jz loc_47CC46  +
xor edx edx +
mov eax ebx +
call sub_47CB50  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov eax ebx +
call sub_47C740  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_47D0D3  +
cmp al 5Fh +
jz loc_47D0CC  +
cmp al 24h +
jnz loc_47CC46  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47D0DA  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_47D0DA  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_47CD46  +
mov [esp+1Ch+var_10] eax +
jmp loc_47CD6D  +
xor edx edx +
mov eax ebx +
call sub_47CB50  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
jmp loc_47CC48  +
mov ecx 2Eh +
jmp loc_47D06B  +
mov ecx 2Fh +
jmp loc_47D06B  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_47CC46  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_47D1F0  +
test ebx ebx +
jnz loc_47D116  +
cmp dl 5Ah +
jz loc_47D11F  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_47CB50  +
test ebx ebx +
mov edi eax +
jz loc_47D118  +
test byte ptr [esi+8] 1 +
jz loc_47D118  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_47D118  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_47D1C4  +
cmp al 5Fh +
jz loc_47D1C4  +
sub eax 30h +
cmp al 9 +
ja loc_47D1BB  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_47D192  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_47D192  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_47D15E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_47D180  +
cmp cl 2Eh +
jz loc_47D163  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_4763D0  +
mov ecx edi +
mov edx 4Bh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_476370  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_47D142  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_47D1DF  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_47D1D2  +
cmp cl 5Fh +
jz loc_47D1D2  +
jmp loc_47D15E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_47D111  +
***
jmp sub_47D210  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_48BDD0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_48BDD0  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_47D0F0  +
mov ebx eax +
xor eax eax +
lea esi [esi+0] +
***
mov eax [ebx+4] +
lea esp [ebp-0Ch] +
mov eax [ebx+4] +
jmp loc_47D3E0  +
***
jmp loc_47D3E0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [eax+0Ch] +
mov [esp+58h+var_1C] 0 +
lea eax [esp+58h+var_1C] +
mov [esp+58h+var_41] dl +
mov [esp+58h+var_4C] eax +
cmp [ebx] dl +
jz loc_47DC7A  +
mov eax [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
mov [esp+58h+var_48] eax +
movzx eax byte ptr [ebx] +
cmp al 4Ch +
jz loc_47D6E1  +
cmp al 54h +
jz loc_47D701  +
cmp al 73h +
jz loc_47D5A0  +
cmp al 66h +
jz loc_47D5E0  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_47D52E  +
cmp al 6Fh +
jz loc_47D522  +
cmp al 74h +
setz dl  +
jnz loc_47F006  +
cmp byte ptr [ebx+1] 6Ch +
jz loc_47D710  +
mov eax ebp +
call sub_47B9B0  +
test eax eax +
mov ebx eax +
jz loc_47D6D0  +
mov eax [eax] +
cmp eax 31h +
jz loc_47D640  +
cmp eax 32h +
jz loc_47D741  +
cmp eax 33h +
jnz loc_47D6D0  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47DD63  +
mov eax ebp +
call sub_47F1A0  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_47D50D  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 35h +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
cmp byte ptr [ebx+1] 6Eh +
jnz loc_47D4B2  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_47BC20  +
test eax eax +
jz loc_47D6D0  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_47D751  +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
mov [esp+58h+var_58] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_476370  +
mov edi [esp+58h+var_4C] +
test eax eax +
mov [edi] eax +
jz loc_47D6D7  +
mov ebx [ebp+0Ch] +
add eax 8 +
mov [esp+58h+var_4C] eax +
movzx eax [esp+58h+var_41] +
cmp [ebx] al +
jnz loc_47D458  +
add ebx 1 +
mov eax [esp+58h+var_1C] +
mov [ebp+0Ch] ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 72h +
jz loc_47D864  +
cmp al 70h +
jnz loc_47D4B2  +
add ebx 2 +
mov eax ebp +
mov [ebp+0Ch] ebx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
cmp byte ptr [ebx+1] 70h +
jnz loc_47D4B2  +
lea eax [ebx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [ebx+2] 54h +
jz loc_47D800  +
mov eax ebp +
call sub_4766F0  +
add eax 1 +
jz loc_47D6D0  +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_47D6D0  +
mov ecx [ebp+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [ebp+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_47D6D0  +
mov dword ptr [ecx] 6 +
mov [ecx+4] eax +
jmp loc_47D54B  +
mov edi [ebx+4] +
mov esi [edi] +
mov [esp+58h+var_3C] edi +
mov edi [edi+8] +
mov [esp+58h+var_40] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_47D950  +
mov esi [esp+58h+var_3C] +
mov edx [esi+0Ch] +
cmp edx 1 +
jz loc_47EFB5  +
jle loc_47D840  +
cmp edx 2 +
jz loc_47D776  +
cmp edx 3 +
jnz loc_47D6D0  +
mov esi [esp+58h+var_40] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47D982  +
mov eax [esp+58h+var_40] +
cmp byte ptr [eax] 6Eh +
jnz loc_47D6D0  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jz loc_47D8A1  +
cmp al 77h +
jz loc_47D8A1  +
nop   +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_47D210  +
mov ecx eax +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
test ecx ecx +
mov [ebp+34h] eax +
jnz loc_47D552  +
jmp loc_47D6D7  +
mov eax ebp +
call sub_476730  +
mov ecx eax +
jmp loc_47D6F0  +
xor esi esi +
test dl dl +
jnz loc_47D970  +
add ebx 2 +
mov edx 45h +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
mov edx [ebx+4] +
mov [esp+58h+var_40] 0 +
jmp loc_47D67B  +
mov [esp+58h+var_40] eax +
mov eax ebp +
call sub_47C010  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
mov eax [ebx+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47DC53  +
mov eax ebp +
call sub_47F1A0  +
mov [esp+58h+var_3C] eax +
mov esi [esp+58h+var_40] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_47DC40  +
mov esi [esp+58h+var_40] +
mov edi offset unk_4B8B6F +
mov ecx 3 +
cmps   +
jz loc_47D810  +
mov esi [esp+58h+var_40] +
mov edi offset unk_4B8B72 +
mov ecx 3 +
cmps   +
jz loc_47D810  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_476370  +
mov ecx ebx +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
add ebx 3 +
xor eax eax +
mov [ebp+0Ch] ebx +
jmp loc_47D60A  +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_47D7D3  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47D7D3  +
test edx edx +
jnz loc_47D6D0  +
mov ecx ebx +
mov edx 34h +
mov [esp+58h+var_58] 0 +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov ebx eax +
mov eax ebp +
call sub_47BC20  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov esi eax +
jz loc_47DC9A  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 1 +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
mov edx 5Fh +
mov eax ebp +
call sub_47D430  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_3C] eax +
call sub_47A670  +
mov [esp+58h+var_40] eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47DDD4  +
cmp dl 70h +
jz loc_47DE7C  +
cmp dl 69h +
jnz loc_47D6D0  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47D6D0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
xor ecx ecx +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
mov [esp+58h+var_58] ecx +
mov ecx [esp+58h+var_40] +
mov edx 3Ah +
mov eax ebp +
call sub_476370  +
mov ecx [esp+58h+var_3C] +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx ebx +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov ecx ebx +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D6F0  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov ebx [ebp+0Ch] +
mov esi eax +
jmp loc_47D71A  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_47E042  +
cmp al 54h +
jz loc_47E08A  +
cmp al 73h +
jz loc_47DE9F  +
cmp al 66h +
jz loc_47DD7A  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_47DCBA  +
mov eax ebp +
call sub_47BC20  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jz loc_47D9D1  +
cmp al 49h +
jz loc_47E4CC  +
cmp al 4Ch +
jz loc_47E058  +
cmp al 54h +
nop   +
lea esi [esi+0] +
jz loc_47E0A0  +
cmp al 73h +
jz loc_47DED3  +
cmp al 66h +
jz loc_47DF44  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_47DDF1  +
cmp al 6Fh +
jz loc_47DDE1  +
cmp al 74h +
setz cl  +
jnz loc_47EB19  +
cmp byte ptr [edx+1] 6Ch +
jz loc_47E3D9  +
mov eax ebp +
call sub_47B9B0  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_47E01A  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_38] eax +
jz loc_47E0B6  +
mov eax [esp+58h+var_38] +
cmp eax 32h +
jz loc_47E46D  +
cmp eax 33h +
jnz loc_47E01A  +
mov edx [ebp+0Ch] +
movzx ecx byte ptr [edx] +
cmp [esp+58h+var_38] 33h +
mov [esp+58h+var_30] 0 +
jnz loc_47DA79  +
cmp cl 5Fh +
jz loc_47E7F7  +
cmp cl 4Ch +
jz loc_47EC3D  +
cmp cl 54h +
jz loc_47EBAA  +
cmp cl 73h +
nop   +
jz loc_47E8E3  +
cmp cl 66h +
jz loc_47E890  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_47E852  +
cmp cl 6Fh +
jz loc_47E842  +
cmp cl 74h +
setz al  +
jnz loc_47EF47  +
cmp byte ptr [edx+1] 6Ch +
jz loc_47EBD1  +
mov eax ebp +
call sub_47B9B0  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_47EBCA  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_47ED3B  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_47EC62  +
cmp eax 33h +
jnz loc_47EBCA  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47F091  +
mov eax ebp +
call sub_47F1A0  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_47DB2E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_476370  +
mov esi eax +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_47E80B  +
mov ecx esi +
mov edx 37h +
mov [esp+58h+var_58] esi +
mov eax ebp +
call sub_476370  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_47E06E  +
cmp al 54h +
jz loc_47E07C  +
cmp al 73h +
jz loc_47DF07  +
cmp al 66h +
jz loc_47DFA2  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_47DE3A  +
cmp al 6Fh +
jz loc_47DE2A  +
cmp al 74h +
setz cl  +
jnz loc_47EFA2  +
cmp byte ptr [edx+1] 6Ch +
jz loc_47E42D  +
mov eax ebp +
call sub_47B9B0  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_47DDDA  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_47E1BB  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_47E47B  +
cmp eax 33h +
jnz loc_47DDDA  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47EC4B  +
mov eax ebp +
call sub_47F1A0  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_47DC28  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov esi eax +
jmp loc_47D7D3  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_47DC69  +
sub eax 72h +
cmp al 1 +
ja loc_47D785  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov [esp+58h+var_3C] eax +
jmp loc_47D790  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_476370  +
jmp loc_47D6D9  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
jmp loc_47D88C  +
cmp al 6Fh +
jz loc_47E02D  +
cmp al 74h +
setz cl  +
jnz loc_47EC0E  +
cmp byte ptr [edx+1] 6Ch +
jz loc_47E402  +
mov eax ebp +
call sub_47B9B0  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_47DFFF  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_3C] eax +
jz loc_47E2D0  +
mov eax [esp+58h+var_3C] +
cmp eax 32h +
jz loc_47E45F  +
cmp eax 33h +
jnz loc_47DFFF  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47F015  +
mov eax ebp +
call sub_47F1A0  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_47E7D0  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_476370  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_47D9D1  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
jmp loc_47D4F5  +
cmp byte ptr [edx+1] 70h +
jnz loc_47DCD7  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_47E6CF  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_47E002  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_3C] esi +
jz loc_47DD5B  +
mov eax [esp+58h+var_3C] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_47D9D1  +
add eax 1 +
mov [ebp+0Ch] eax +
xor ecx ecx +
jmp loc_47D90D  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47DA1F  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_47BC20  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jz loc_47DB7A  +
cmp al 49h +
jnz loc_47DB7A  +
mov eax ebp +
call sub_47C010  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_47DB69  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47DBC3  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_47BC20  +
test eax eax +
mov ecx eax +
jz loc_47D90D  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_47D90D  +
mov eax ebp +
mov [esp+58h+var_38] ecx +
call sub_47C010  +
mov ecx [esp+58h+var_38] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
cmp byte ptr [eax+1] 69h +
jnz loc_47D6D0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
mov ecx eax +
jmp loc_47D90D  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_47E6F0  +
cmp al 70h +
jnz loc_47DCD7  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_47DD4D  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_47E761  +
cmp al 70h +
jnz loc_47DA1F  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_47DB69  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_47E724  +
cmp al 70h +
jnz loc_47DBC3  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
cmp byte ptr [edx+1] 70h +
jnz loc_47DA1F  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_47E7B0  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_47E01D  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_40] esi +
jz loc_47DB77  +
mov eax [esp+58h+var_40] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_47DB7A  +
cmp byte ptr [edx+1] 70h +
jnz loc_47DBC3  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_47E795  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
xor ecx ecx +
cmp eax [ebp+18h] +
jge loc_47D90D  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_47D90D  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_47D90D  +
cmp al 77h +
jz loc_47E35F  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_3C] 0 +
jmp loc_47D9D1  +
cmp al 77h +
jz loc_47E141  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_40] 0 +
jmp loc_47DB7A  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47DCD7  +
add edx 2 +
mov [ebp+0Ch] edx +
jmp loc_47D9B4  +
mov eax ebp +
call sub_47D210  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_47D9D1  +
mov eax ebp +
call sub_47D210  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_47DB7A  +
mov eax ebp +
call sub_47D210  +
mov ecx eax +
jmp loc_47D90D  +
mov eax ebp +
call sub_476730  +
mov ecx eax +
jmp loc_47D90D  +
mov eax ebp +
call sub_476730  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_47D9D1  +
mov eax ebp +
call sub_476730  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_47DB7A  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_34] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_30] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_47E81C  +
mov eax [esp+58h+var_34] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_47F0A8  +
jle loc_47E4E4  +
cmp ecx 2 +
jz loc_47E638  +
cmp ecx 3 +
jnz loc_47E01A  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47E920  +
cmp byte ptr [edx] 6Eh +
jnz loc_47E01A  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_47E012  +
mov edx 5Fh +
mov eax ebp +
call sub_47D430  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_47A670  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_47F132  +
cmp al 70h +
jz loc_47F111  +
cmp al 69h +
jnz loc_47F084  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_47F072  +
mov eax ebp +
call sub_47F1A0  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_476370  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_47DB69  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_30] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_2C] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_47E835  +
mov eax [esp+58h+var_30] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_47EF55  +
jle loc_47E4A6  +
cmp ecx 2 +
jz loc_47E598  +
cmp ecx 3 +
jnz loc_47DDDA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47E95E  +
xor ecx ecx +
cmp byte ptr [edx] 6Eh +
jnz loc_47D90D  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_47EB6F  +
mov edx 5Fh +
mov eax ebp +
call sub_47D430  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_47A670  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47EB9D  +
xor ecx ecx +
cmp dl 70h +
jz loc_47EB7C  +
cmp dl 69h +
jnz loc_47D90D  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47D90D  +
mov eax ebp +
call sub_47F1A0  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_476370  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_38] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_34] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_47E7DE  +
mov eax [esp+58h+var_38] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_47F02C  +
jle loc_47E489  +
cmp ecx 2 +
jz loc_47E501  +
cmp ecx 3 +
lea esi [esi+0] +
jnz loc_47DFFF  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47EADC  +
cmp byte ptr [edx] 6Eh +
jnz loc_47DFFF  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_47DFF7  +
mov edx 5Fh +
mov eax ebp +
call sub_47D430  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_47A670  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_47EB43  +
cmp al 70h +
jz loc_47EB26  +
cmp al 69h +
jnz loc_47EB0C  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_47EAFA  +
mov eax ebp +
call sub_47F1A0  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_476370  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_47DD4D  +
xor esi esi +
test cl cl +
jnz loc_47EA7E  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_47DB69  +
xor esi esi +
test cl cl +
jnz loc_47E93E  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_47DD4D  +
xor esi esi +
test cl cl +
jnz loc_47EACD  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_47E311  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_47E0F7  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_47E1FC  +
test ecx ecx +
jnz loc_47DFFF  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_47DD4D  +
test ecx ecx +
jnz loc_47DDDA  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
mov eax ebp +
call sub_47C010  +
mov ecx [esp+58h+var_3C] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_47DD4D  +
test ecx ecx +
jnz loc_47E01A  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_47DB69  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47EA2F  +
mov eax ebp +
mov [esp+58h+var_38] edx +
call sub_47F1A0  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47EA1C  +
mov edi offset unk_4B8B6F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47E55F  +
mov edi offset unk_4B8B72 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_47E950  +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47EB50  +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_476370  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_47DD4D  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47E9DF  +
mov eax ebp +
mov [esp+58h+var_30] edx +
call sub_47F1A0  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47E9BE  +
mov edi offset unk_4B8B6F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47E5F6  +
mov edi offset unk_4B8B72 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_47EA0E  +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47F0F2  +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_476370  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47E98F  +
mov eax ebp +
mov [esp+58h+var_34] edx +
call sub_47F1A0  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47E97C  +
mov edi offset unk_4B8B6F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47E696  +
mov edi offset unk_4B8B72 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_47E9D1  +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47EC1B  +
mov ecx [esp+58h+var_38] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_476370  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_47DB69  +
mov eax ebp +
call sub_4766F0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_47DD9C  +
jmp loc_47E002  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov edi eax +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47EA5E  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_47DD4D  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov esi eax +
mov eax ebp +
call sub_47BC20  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47EA8D  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_476370  +
mov ecx eax +
jmp loc_47D90D  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov edi eax +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47EAAD  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_47DB69  +
mov eax ebp +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_47DFC4  +
xor ecx ecx +
jmp loc_47D90D  +
mov eax ebp +
call sub_4766F0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_47DF66  +
jmp loc_47E01D  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_47DD4D  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_47DD4D  +
add edx 1 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_47D430  +
mov esi eax +
mov [esp+58h+var_58] esi +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_47DB69  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_47DB69  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
jmp loc_47DC25  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47DAC9  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_47BC20  +
test eax eax +
mov esi eax +
jz loc_47EBCA  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_47DB40  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47DB40  +
cmp byte ptr [edx+1] 70h +
jnz loc_47DAC9  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_47EBB8  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_47EBCA  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_47DB40  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_47DB40  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_47F13F  +
cmp al 70h +
jnz loc_47DAC9  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47DB40  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
mov eax ebp +
call sub_47F1A0  +
mov edi eax +
mov eax ebp +
call sub_47F1A0  +
jmp loc_47E188  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov edx [ebp+0Ch] +
mov esi eax +
jmp loc_47E40C  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
jmp loc_47E574  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
mov eax ebp +
call sub_47F1A0  +
mov edi eax +
mov eax ebp +
call sub_47F1A0  +
jmp loc_47E294  +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov esi eax +
jmp loc_47E6AB  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_47E9A5  +
sub eax 72h +
cmp al 1 +
ja loc_47E64B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_34] edx +
call sub_47A670  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
jmp loc_47E65E  +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov esi eax +
jmp loc_47E60B  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
jmp loc_47E6AB  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_47E9F5  +
sub eax 72h +
cmp al 1 +
ja loc_47E5AB  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_30] edx +
call sub_47A670  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
jmp loc_47E5BE  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
jmp loc_47E60B  +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov esi eax +
jmp loc_47E574  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_47EA45  +
sub eax 72h +
cmp al 1 +
ja loc_47E514  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_38] edx +
call sub_47A670  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
jmp loc_47E527  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
jmp loc_47E718  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov esi eax +
jmp loc_47E3E3  +
mov eax ebp +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
jmp loc_47E74C  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
jmp loc_47E789  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov esi eax +
jmp loc_47E437  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
mov eax ebp +
call sub_47F1A0  +
mov edi eax +
mov eax ebp +
call sub_47F1A0  +
jmp loc_47E3A6  +
mov eax 69h +
mov [esp+58h+var_3C] 0 +
jmp loc_47DA02  +
mov [esp+58h+var_3C] 0 +
jmp loc_47D9D1  +
cmp al 69h +
jz loc_47DA15  +
jmp loc_47DA1F  +
cmp byte ptr [edx+1] 69h +
jnz loc_47EAFF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_47D430  +
jmp loc_47E3A6  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_47E3A6  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47E574  +
cmp al 77h +
jz loc_47E248  +
jmp loc_47D90D  +
cmp byte ptr [eax+1] 69h +
jnz loc_47D90D  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
jmp loc_47E294  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_47E294  +
mov eax ebp +
call sub_476730  +
mov esi eax +
jmp loc_47DB40  +
mov eax ebp +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_47E8B2  +
xor esi esi +
jmp loc_47DB40  +
xor esi esi +
test al al +
jz loc_47EBE4  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov edx [ebp+0Ch] +
mov esi eax +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47DB40  +
cmp al 69h +
jz loc_47DCCD  +
jmp loc_47DCD7  +
mov eax ebp +
lea esi [esi+0] +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47E6AB  +
mov eax ebp +
call sub_47D210  +
mov esi eax +
jmp loc_47DB40  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
jmp loc_47DC10  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov eax [eax+4] +
cmp eax 1 +
jz loc_47EF04  +
jle loc_47EEDE  +
cmp eax 2 +
jz loc_47EDE2  +
cmp eax 3 +
jnz loc_47EBCA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47EDC4  +
cmp byte ptr [edx] 6Eh +
jnz loc_47EBCA  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_47EDB7  +
mov edx 5Fh +
mov eax ebp +
call sub_47D430  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_47A670  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47EDAA  +
cmp dl 70h +
jz loc_47ED79  +
cmp dl 69h +
jnz loc_47EBCA  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47EBCA  +
mov eax ebp +
call sub_47F1A0  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_476370  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47DB40  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_2C] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_47ED9A  +
mov eax [esp+58h+var_2C] +
mov eax [eax+0Ch] +
jmp loc_47EC6B  +
cmp byte ptr [eax+1] 69h +
jnz loc_47EBCA  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
jmp loc_47ECFF  +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov [esp+58h+var_58] eax +
jmp loc_47DB2E  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_47ECFF  +
cmp al 77h +
jz loc_47ECB5  +
jmp loc_47EBCA  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
mov eax ebp +
call sub_47F1A0  +
mov edi eax +
mov eax ebp +
call sub_47F1A0  +
jmp loc_47ECFF  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47EEA4  +
mov eax ebp +
mov [esp+58h+var_2C] edx +
call sub_47F1A0  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47EE94  +
mov edi offset unk_4B8B6F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47EE3C  +
mov edi offset unk_4B8B72 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_47EED3  +
mov eax ebp +
call sub_47BC20  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_47EE67  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_476370  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47DB40  +
mov edx 45h +
mov eax ebp +
call sub_47D430  +
mov esi eax +
jmp loc_47EE67  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_47EEBA  +
sub eax 72h +
cmp al 1 +
ja loc_47EDF5  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_2C] edx +
call sub_47A670  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
jmp loc_47EE08  +
mov eax ebp +
call sub_47F1A0  +
mov esi eax +
jmp loc_47EE67  +
test eax eax +
jnz loc_47EBCA  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_476370  +
mov esi eax +
jmp loc_47DB40  +
test edx edx +
jz loc_47EF43  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jz loc_47EF15  +
xor esi esi +
cmp al 70h +
jnz loc_47EF1C  +
xor esi esi +
cmp al [edx+1] +
jz loc_47EF2C  +
cmp [esp+58h+var_34] 33h +
jnz loc_47DB0F  +
jmp loc_47DB03  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_47EF1C  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_47EF1C  +
xor esi esi +
jmp loc_47EF1C  +
cmp cl 69h +
jz loc_47DABF  +
jmp loc_47DAC9  +
test edx edx +
jz loc_47EF9E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
nop   +
jz loc_47EF80  +
xor esi esi +
cmp cl 70h +
jz loc_47EF80  +
cmp [esp+58h+var_34] 33h +
jnz loc_47DC09  +
jmp loc_47DBFD  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_47EF69  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_47EF69  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_47EF69  +
xor esi esi +
jmp loc_47EF69  +
cmp al 69h +
jz loc_47DBB9  +
lea esi [esi+0] +
jmp loc_47DBC3  +
mov esi [esp+58h+var_40] +
test esi esi +
jz loc_47F002  +
movzx edx byte ptr [esi] +
cmp dl 6Dh +
jz loc_47EFE0  +
xor esi esi +
cmp dl 70h +
jz loc_47EFE0  +
cmp eax 33h +
jnz loc_47D4EE  +
jmp loc_47D4E2  +
mov edi [esp+58h+var_40] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_47EFCC  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_47EFCC  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_47EFCC  +
xor esi esi +
jmp loc_47EFCC  +
cmp al 69h +
jz loc_47D4A8  +
nop   +
jmp loc_47D4B2  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
jmp loc_47DD28  +
test edx edx +
jz loc_47F06E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_47F050  +
xor esi esi +
cmp cl 70h +
jz loc_47F050  +
cmp [esp+58h+var_3C] 33h +
jnz loc_47DD21  +
jmp loc_47DD15  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_47F03F  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_47F03F  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_47F03F  +
xor esi esi +
jmp loc_47F03F  +
mov eax 69h +
mov [esp+58h+var_40] 0 +
jmp loc_47DBA6  +
mov [esp+58h+var_40] 0 +
jmp loc_47DB7A  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_47D430  +
jmp loc_47DB16  +
test edx edx +
jz loc_47DA5B  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_47F0C1  +
cmp cl 70h +
jnz loc_47DA5B  +
cmp cl [edx+1] +
jnz loc_47DA5B  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_30] 1 +
movzx ecx byte ptr [edx] +
cmp cl 5Fh +
jnz loc_47DA79  +
lea esi [edx+1] +
mov [ebp+0Ch] esi +
movzx ecx byte ptr [edx+1] +
mov edx esi +
jmp loc_47DA61  +
mov eax ebp +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47E60B  +
cmp byte ptr [edx+1] 69h +
jnz loc_47F077  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_47D430  +
jmp loc_47E188  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_47E188  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_47A670  +
mov esi eax +
mov eax ebp +
call sub_47BC20  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47F178  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_476370  +
mov esi eax +
jmp loc_47DB40  +
mov eax ebp +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_476370  +
mov [esp+58h+var_58] eax +
jmp loc_47F163  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_47F495  +
cmp al 54h +
jz loc_47F4A3  +
cmp al 73h +
jz loc_47F2E7  +
cmp al 66h +
jz loc_47F290  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_47F200  +
mov eax ebx +
call sub_47BC20  +
test eax eax +
jz loc_47F470  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_47F4C1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_47F480  +
cmp al 74h +
setz cl  +
jnz loc_47F742  +
cmp byte ptr [edx+1] 6Ch +
jz loc_47F433  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov ebp eax +
jz loc_47F470  +
mov eax [eax] +
cmp eax 31h +
jz loc_47F324  +
cmp eax 32h +
jz loc_47F4B1  +
cmp eax 33h +
jnz loc_47F470  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47F5C5  +
mov eax ebx +
call sub_47F1A0  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_47F278  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
cmp byte ptr [edx+1] 70h +
jnz loc_47F21D  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_47F5B8  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
jz loc_47F470  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_47F470  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_47F470  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_47F1F4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_47F4E0  +
cmp al 70h +
jnz loc_47F21D  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_47F604  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_47F6F6  +
jle loc_47F5E0  +
cmp edx 2 +
jz loc_47F520  +
cmp edx 3 +
jnz loc_47F470  +
mov esi [esp+1Ch+var_14] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47F623  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_47F470  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_47F467  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_47A670  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47F6A9  +
cmp dl 70h +
jz loc_47F6D5  +
cmp dl 69h +
jnz loc_47F470  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47F470  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_476370  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
xor esi esi +
test cl cl +
jnz loc_47F611  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
cmp al 77h +
jz loc_47F3AF  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47F21D  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_47F1D7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_47D210  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_476730  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_47F35F  +
mov eax ebx +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov esi eax +
mov eax ebx +
call sub_47BC20  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_47F67B  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47F654  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_47F641  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4B8B6F +
mov ecx 3 +
cmps   +
jz loc_47F578  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4B8B72 +
mov ecx 3 +
cmps   +
jnz loc_47F69B  +
mov eax ebx +
call sub_47BC20  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47F6B6  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_476370  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_47F2B6  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47F260  +
test edx edx +
jnz loc_47F470  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F1F4  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
jmp loc_47F275  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47F43D  +
mov eax ebx +
call sub_47F1A0  +
mov esi eax +
mov eax ebx +
call sub_47F1A0  +
mov edi eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_47F3F9  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov esi eax +
jmp loc_47F58D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_47F66A  +
sub eax 72h +
cmp al 1 +
ja loc_47F52F  +
mov [esp+1Ch+var_1C] ebx +
call sub_47A670  +
mov [esp+1Ch+var_10] eax +
jmp loc_47F53A  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+1Ch+var_1C] eax +
jmp loc_47F508  +
mov eax ebx +
call sub_47F1A0  +
mov esi eax +
jmp loc_47F58D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_47F3F9  +
mov eax ebx +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F58D  +
cmp byte ptr [eax+1] 69h +
jnz loc_47F470  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47F3F9  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_47F70D  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_47F720  +
cmp dl 70h +
jz loc_47F720  +
cmp eax 33h +
jnz loc_47F259  +
jmp loc_47F24D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_47F70D  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_47F70D  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_47F70D  +
cmp al 69h +
jz loc_47F213  +
jmp loc_47F21D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_47F788  +
mov eax ebx +
call sub_4766B0  +
mov esi eax +
test esi esi +
jz loc_47FB64  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jz loc_47F820  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea esi [eax+1] +
mov ebp [ebx+34h] +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
movzx edx byte ptr [eax+1] +
cmp dl 4Ch +
jz loc_47FB00  +
cmp dl 54h +
jz loc_47FB10  +
cmp dl 73h +
jz loc_47F847  +
cmp dl 66h +
jz loc_47F9C0  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_47F995  +
cmp dl 6Fh +
jz loc_47F985  +
cmp dl 74h +
setz cl  +
jnz loc_4818E7  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_47F85D  +
xor edi edi +
test cl cl +
jnz loc_47FD96  +
add esi 2 +
mov edx 45h +
mov [ebx+0Ch] esi +
mov eax ebx +
call sub_47D430  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_47FD07  +
cmp dl 70h +
jz loc_47FD5D  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov [esp+2Ch+var_1C] eax +
jz loc_47FAF7  +
mov eax [eax] +
cmp eax 31h +
jz loc_47FB20  +
cmp eax 32h +
jz loc_47FA10  +
cmp eax 33h +
jnz loc_47FAF7  +
mov edx [ebx+0Ch] +
xor esi esi +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_4803AE  +
cmp al 4Ch +
jz loc_480392  +
cmp al 54h +
jz loc_4803A0  +
cmp al 73h +
nop   +
jz loc_4800B7  +
cmp al 66h +
jz loc_4800F4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_47FDB8  +
cmp al 6Fh +
jz loc_47FDA8  +
cmp al 74h +
setz cl  +
jnz loc_48197A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_48060E  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov edi eax +
jz loc_4801B9  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_480407  +
cmp ecx 32h +
jz loc_480640  +
cmp ecx 33h +
jnz loc_4801B9  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_481963  +
mov eax ebx +
call sub_47F1A0  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_47F94B  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov ecx eax +
test esi esi +
mov [esp+2Ch+var_2C] ecx +
jz loc_47F971  +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_1C] +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_47F85D  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47BC20  +
test eax eax +
mov esi eax +
jz loc_47FAF7  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47FB6B  +
mov [ebx+34h] ebp +
jmp loc_47F76A  +
cmp byte ptr [eax+2] 70h +
jnz loc_47F85D  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_47FD44  +
add eax 4 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_47FAF7  +
mov ecx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_47F9B2  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_47F9B2  +
mov edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] 0 +
mov edx [edi+4] +
cmp edx 1 +
jz loc_481616  +
jle loc_47FB8A  +
cmp edx 2 +
jz loc_47FBB0  +
cmp edx 3 +
jnz loc_47FAF7  +
mov esi [esp+2Ch+var_18] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47FE0D  +
mov eax [esp+2Ch+var_18] +
cmp byte ptr [eax] 6Eh +
jnz loc_47FAF7  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_47FAEF  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_47A670  +
mov esi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_480196  +
cmp dl 70h +
jz loc_48036F  +
cmp dl 69h +
jnz loc_47FAF7  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47FAF7  +
mov eax ebx +
call sub_47F1A0  +
mov ecx eax +
mov [esp+2Ch+var_2C] ecx +
mov edx 3Ah +
mov ecx esi +
mov eax ebx +
call sub_476370  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_1C] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
cmp al 77h +
jz loc_47FA6F  +
xor esi esi +
jmp loc_47F9B2  +
mov eax ebx +
call sub_47D210  +
mov esi eax +
jmp loc_47F9B2  +
mov eax ebx +
call sub_476730  +
mov esi eax +
jmp loc_47F9B2  +
mov edi [esp+2Ch+var_1C] +
mov edi [edi+4] +
mov esi [edi] +
mov [esp+2Ch+var_14] edi +
mov edi [edi+8] +
mov [esp+2Ch+var_18] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_47FD86  +
mov edi [esp+2Ch+var_14] +
mov edx [edi+0Ch] +
jmp loc_47FA1F  +
xor eax eax +
jmp loc_47F780  +
mov eax ebx +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
test edx edx +
jnz loc_47FAF7  +
mov ecx [esp+2Ch+var_1C] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_480070  +
mov edx [ebx+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4806EF  +
cmp al 54h +
jz loc_480843  +
cmp al 73h +
jz loc_4801C5  +
cmp al 66h +
jz loc_480204  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_480154  +
cmp al 6Fh +
jz loc_480144  +
cmp al 74h +
setz cl  +
jnz loc_481927  +
cmp byte ptr [edx+1] 6Ch +
jz loc_480981  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov esi eax +
jz loc_48052F  +
mov edx [eax] +
cmp edx 31h +
jz loc_4806FF  +
cmp edx 32h +
jz loc_480946  +
cmp edx 33h +
jnz loc_48052F  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_48178B  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47F1A0  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_47FC75  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
mov esi [esp+2Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_47FDFA  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_4B8B6F +
mov ecx 3 +
cmps   +
jz loc_47FCC5  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_4B8B72 +
mov ecx 3 +
cmps   +
jnz loc_4801A3  +
mov eax ebx +
call sub_47BC20  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_480260  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
call sub_476370  +
mov ecx [esp+2Ch+var_1C] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
add eax 3 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
mov eax ebx +
call sub_47BC20  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_480097  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_47F9E2  +
xor esi esi +
jmp loc_47F9B2  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47F9B2  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47F971  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi [ebx+0Ch] +
mov edi eax +
jmp loc_47F7F1  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47F8E7  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_47BC20  +
test eax eax +
mov ecx eax +
jz loc_4801B9  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_47F95B  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47F95B  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov esi eax +
jmp loc_47FCDA  +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 4Ch +
jz loc_4809BB  +
cmp dl 54h +
jz loc_480ABA  +
cmp dl 73h +
jz loc_48053C  +
cmp dl 66h +
jz loc_48064A  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_480330  +
cmp dl 6Fh +
jz loc_480320  +
cmp dl 74h +
setz cl  +
jnz loc_481608  +
cmp byte ptr [eax+1] 6Ch +
jz loc_480BF5  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov esi eax +
jz loc_481019  +
mov edx [eax] +
cmp edx 31h +
jz loc_480BBC  +
cmp edx 32h +
jz loc_480ADC  +
cmp edx 33h +
jnz loc_480977  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_4817D0  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_47F1A0  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_47FEC5  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov edx 35h +
mov ecx esi +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4809CC  +
cmp al 54h +
jz loc_480ACB  +
cmp al 73h +
jz loc_4803C7  +
cmp al 66h +
jz loc_4805BB  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_4802E1  +
cmp al 6Fh +
jz loc_4802D1  +
cmp al 74h +
setz cl  +
jnz loc_48156D  +
cmp byte ptr [edx+1] 6Ch +
jz loc_480D56  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov esi eax +
jz loc_480815  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_480C2A  +
cmp ecx 32h +
jz loc_480F34  +
cmp ecx 33h +
jnz loc_480815  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_481536  +
mov eax ebx +
call sub_47F1A0  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_47FF88  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
movzx ecx byte ptr [edx] +
cmp cl 4Ch +
jz loc_480950  +
cmp cl 54h +
jz loc_480D48  +
cmp cl 73h +
jz loc_48057E  +
cmp cl 66h +
jz loc_48069D  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_48028F  +
cmp cl 6Fh +
jz loc_48027F  +
cmp cl 74h +
setz al  +
jnz loc_481690  +
cmp byte ptr [edx+1] 6Ch +
jz loc_480E80  +
mov eax ebx +
call sub_47B9B0  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_48019C  +
mov eax [eax] +
cmp eax 31h +
mov [esp+2Ch+var_10] eax +
jz loc_480EB8  +
mov eax [esp+2Ch+var_10] +
cmp eax 32h +
jz loc_480D8B  +
cmp eax 33h +
jnz loc_48019C  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_481935  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47F1A0  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_480059  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_18] +
mov edx 35h +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_480086  +
sub eax 72h +
cmp al 1 +
ja loc_47FBC3  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47FD2F  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_480909  +
cmp al 70h +
jnz loc_47F8E7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47F95B  +
cmp byte ptr [edx+1] 70h +
jnz loc_47F8E7  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_48095E  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_4801B9  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_47F95B  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_47F95B  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47FC12  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_47BC20  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_48052F  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_47FC87  +
mov eax ebx +
call sub_47C010  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
add eax 1 +
mov [ebx+0Ch] eax +
xor ecx ecx +
jmp loc_47FAB3  +
mov eax ebx +
call sub_47F1A0  +
mov esi eax +
jmp loc_47FCDA  +
cmp al 77h +
jz loc_48049B  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
jmp loc_47F95B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_480EF5  +
cmp al 70h +
jnz loc_47FC12  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
cmp byte ptr [edx+1] 70h +
jnz loc_47FC12  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_480AA3  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_48052F  +
imul edi eax +
add eax 1 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_14] edi +
mov edi [ebx+10h] +
add [esp+2Ch+var_14] edi +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_47FC87  +
mov dword ptr [eax] 6 +
mov [eax+4] edx +
jmp loc_47FC87  +
mov eax ebx +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov esi eax +
jmp loc_47FCDA  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47FFEC  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_47BC20  +
test eax eax +
mov ecx eax +
jz loc_47FAB3  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_47FAB3  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47FF24  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_47BC20  +
mov edx [ebx+0Ch] +
test eax eax +
mov esi eax +
jz loc_47FF9B  +
cmp byte ptr [edx] 49h +
jnz loc_47FF9B  +
mov eax ebx +
call sub_47C010  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_47FE62  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47BC20  +
test eax eax +
mov edi eax +
jz loc_481019  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jnz loc_47FED8  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
cmp byte ptr [eax+1] 69h +
jnz loc_47FAF7  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
mov ecx eax +
jmp loc_47FAB3  +
mov eax ebx +
call sub_47D210  +
mov ecx eax +
jmp loc_47F95B  +
mov eax ebx +
call sub_476730  +
mov ecx eax +
jmp loc_47F95B  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_47D430  +
mov ecx eax +
jmp loc_47F95B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_481314  +
cmp al 70h +
jnz loc_47FF24  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_480F3E  +
mov eax [edi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_48157A  +
jle loc_48081F  +
cmp eax 2 +
jz loc_480853  +
cmp eax 3 +
nop   +
jnz loc_4801B9  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_4813A3  +
cmp byte ptr [edx] 6Eh +
jnz loc_4801B9  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_4801B1  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_47A670  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_481518  +
cmp dl 70h +
jz loc_4814F7  +
cmp dl 69h +
jnz loc_4801B9  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4801B9  +
mov eax ebx +
call sub_47F1A0  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx edi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47F95B  +
cmp al 77h +
jz loc_480783  +
mov [esp+2Ch+var_14] 0 +
jmp loc_47FC87  +
movzx edx byte ptr [eax+1] +
cmp dl 72h +
jz loc_481036  +
cmp dl 70h +
jnz loc_47FE62  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_480F70  +
cmp al 70h +
jnz loc_47FFEC  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_47F1A0  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
cmp byte ptr [edx+1] 70h +
jnz loc_47FF24  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_481354  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_480815  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_480817  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_47FF9B  +
xor edi edi +
test cl cl +
jnz loc_480F4E  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47F95B  +
mov eax [eax+4] +
xor edx edx +
jmp loc_480443  +
cmp byte ptr [eax+1] 70h +
jnz loc_47FE62  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 54h +
jnz loc_481007  +
add eax 3 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_481019  +
imul edi eax +
add eax 1 +
add edi [ebx+10h] +
mov [ebx+14h] eax +
test edi edi +
jz loc_480979  +
mov [edi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [edi] 6 +
jmp loc_47FED8  +
cmp byte ptr [edx+1] 70h +
jnz loc_47FFEC  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_480FB1  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
xor ecx ecx +
cmp eax [ebx+18h] +
jge loc_47FAB3  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_47FAB3  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_47FAB3  +
mov eax ebx +
call sub_47D210  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_481393  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4814BD  +
jle loc_480A7D  +
cmp eax 2 +
jz loc_4809DD  +
cmp eax 3 +
nop   +
jnz loc_48052F  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_48121E  +
cmp byte ptr [edi] 6Eh +
jnz loc_48052F  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_480527  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_47A670  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_48182F  +
cmp dl 70h +
jz loc_48180E  +
cmp dl 69h +
jnz loc_48052F  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_48052F  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
cmp al 77h +
jz loc_480CBC  +
xor esi esi +
mov edx [ebx+0Ch] +
jmp loc_47FF9B  +
test eax eax +
jnz loc_4801B9  +
mov ecx edi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47F95B  +
mov eax ebx +
call sub_476730  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
mov eax [edi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_480FCA  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_47F1A0  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_481023  +
mov [esp+2Ch+var_28] offset unk_4B8B6F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_4808C9  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4B8B72 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_480FF9  +
mov eax ebx +
call sub_47BC20  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4815D4  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov ecx edi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47F95B  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edi eax +
mov eax ebx +
call sub_47BC20  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_48136D  +
mov [esp+2Ch+var_2C] ecx +
mov ecx edi +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47F95B  +
mov eax [eax+4] +
xor edi edi +
jmp loc_480733  +
mov eax ebx +
call sub_47D210  +
mov ecx eax +
jmp loc_47FAB3  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_480116  +
xor ecx ecx +
jmp loc_47F95B  +
xor edi edi +
mov edx [ebx+0Ch] +
jmp loc_47FED8  +
xor esi esi +
test cl cl +
jz loc_480991  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
mov eax ebx +
call sub_47D210  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
mov eax ebx +
call sub_47D210  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_481076  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_480F5D  +
mov [esp+2Ch+var_28] offset unk_4B8B6F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_480A3B  +
mov [esp+2Ch+var_28] offset unk_4B8B72 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_481662  +
mov eax ebx +
call sub_47BC20  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4817EF  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_476370  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
test eax eax +
jnz loc_48052F  +
mov [esp+2Ch+var_2C] 0 +
mov ecx esi +
mov edx 34h +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_480226  +
jmp loc_48052F  +
mov eax ebx +
call sub_476730  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
mov eax ebx +
call sub_476730  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax [eax+4] +
xor edi edi +
cmp eax 1 +
jz loc_481A40  +
jle loc_48113E  +
cmp eax 2 +
jz loc_48109D  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_480977  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4819F8  +
cmp byte ptr [edi] 6Eh +
jnz loc_481019  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_481A33  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_47A670  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_481A26  +
cmp al 70h +
jz loc_48199D  +
cmp al 69h +
jnz loc_48101C  +
cmp byte ptr [edx+1] 6Ch +
nop   +
jnz loc_48191B  +
mov eax ebx +
call sub_47F1A0  +
mov ecx edi +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx 38h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
mov eax [eax+4] +
mov [esp+2Ch+var_18] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_481987  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_480AE1  +
xor esi esi +
test cl cl +
jnz loc_4818CB  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov edx 30h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_481434  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4813FA  +
jle loc_4813C5  +
cmp eax 2 +
jz loc_481165  +
cmp eax 3 +
jnz loc_480815  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_48149B  +
cmp byte ptr [edx] 6Eh +
jnz loc_480815  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_48080D  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_47A670  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_14] eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_481477  +
cmp al 70h +
jz loc_481465  +
cmp al 69h +
jnz loc_48152F  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_481525  +
mov eax ebx +
call sub_47F1A0  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax ebx +
call sub_476730  +
mov ecx eax +
jmp loc_47FAB3  +
xor esi esi +
test cl cl +
jnz loc_481954  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_14] 0 +
mov eax [eax+4] +
cmp eax 1 +
jz loc_48171D  +
jle loc_4812EE  +
cmp eax 2 +
jz loc_48123E  +
cmp eax 3 +
jnz loc_48019C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_48189B  +
mov eax [esp+2Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_48019C  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_4816CC  +
mov edx 5Fh +
mov eax ebx +
call sub_47D430  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_47A670  +
mov [esp+2Ch+var_10] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_4816BF  +
xor ecx ecx +
cmp dl 70h +
jz loc_48169E  +
cmp dl 69h +
jnz loc_47FAB3  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47FAB3  +
mov eax ebx +
call sub_47F1A0  +
mov ecx [esp+2Ch+var_10] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_18] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
xor ecx ecx +
test al al +
jnz loc_4815F9  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_47D430  +
mov ecx [esp+2Ch+var_18] +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov ecx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ecx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_14] ecx +
call strcmp  +
test eax eax +
jz loc_4818DA  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax+0Ch] +
jmp loc_480D9A  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
mov eax ebx +
call sub_47BC20  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_48154D  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_14] eax +
jmp loc_47FC87  +
mov eax [eax+4] +
xor edx edx +
jmp loc_480C66  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47F94B  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov edi eax +
jmp loc_480618  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov edi eax +
jmp loc_480A50  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_47BC20  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4818F5  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_4806BF  +
xor ecx ecx +
jmp loc_47FAB3  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_480FE0  +
sub eax 72h +
cmp al 1 +
ja loc_480862  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_47A670  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_480875  +
mov eax ebx +
call sub_47F1A0  +
mov ecx eax +
jmp loc_4808DE  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_48066C  +
mov edx [ebx+0Ch] +
xor edi edi +
jmp loc_47FED8  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx eax +
jmp loc_4808DE  +
add eax 2 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
mov eax ebx +
call sub_47BC20  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_481670  +
mov [esp+2Ch+var_2C] edi +
mov edx 1 +
mov ecx esi +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_48108C  +
sub eax 72h +
cmp al 1 +
ja loc_4809EC  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_14] eax +
jmp loc_4809F7  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4819D1  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4819BE  +
mov [esp+2Ch+var_28] offset unk_4B8B6F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4810FB  +
mov [esp+2Ch+var_28] offset unk_4B8B72 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_481A18  +
mov eax ebx +
call sub_47BC20  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_481A72  +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_476370  +
mov edx 36h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
test eax eax +
jnz loc_480977  +
mov edx 34h +
mov ecx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_47FED8  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4816EE  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_47F1A0  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_4816DB  +
mov [esp+2Ch+var_28] offset unk_4B8B6F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_4811DB  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4B8B72 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_4813EC  +
mov eax ebx +
call sub_47BC20  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_48183C  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_47F1A0  +
mov edi eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_4807CF  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_481874  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_481861  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4B8B6F +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_4812AC  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4B8B72 +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jnz loc_4818BD  +
mov eax ebx +
call sub_47BC20  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_481752  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
mov edx 37h +
mov eax ebx +
call sub_476370  +
mov ecx [esp+2Ch+var_18] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
test eax eax +
jnz loc_48019C  +
mov ecx [esp+2Ch+var_18] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_476370  +
mov ecx eax +
jmp loc_47FAB3  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
mov eax ebx +
call sub_47BC20  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4817AA  +
mov [esp+2Ch+var_2C] ecx +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax ebx +
call sub_4766F0  +
add eax 1 +
mov edx eax +
jnz loc_4805DD  +
xor esi esi +
jmp loc_480817  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_480931  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47FC75  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_4804E9  +
test eax eax +
jnz loc_480815  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_476370  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47FF9B  +
mov eax ebx +
call sub_47F1A0  +
mov ecx eax +
jmp loc_4811F0  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_48141A  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_481428  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_481445  +
cmp ecx 33h +
jnz loc_47FF66  +
jmp loc_47FF5A  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_48141A  +
jmp loc_48140D  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_2C] eax +
nop   +
jmp loc_47FF88  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_48141A  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_48141A  +
cmp byte ptr [edx+1] 69h +
mov ecx 70h +
jz loc_481484  +
xor esi esi +
jmp loc_47FFCD  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_480D07  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_47D430  +
jmp loc_480D07  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_480D07  +
xor ecx ecx +
test edi edi +
jz loc_4814CE  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jz loc_4814DC  +
cmp al 70h +
jz loc_4814DC  +
cmp edx 33h +
jnz loc_47FC4E  +
jmp loc_47FC42  +
xor ecx ecx +
cmp al [edi+1] +
jnz loc_4814CE  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4814CE  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_4814CE  +
cmp byte ptr [eax+1] 69h +
jnz loc_4801B9  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_4804E9  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_4804E9  +
mov ecx 69h +
jmp loc_481470  +
xor esi esi +
jmp loc_47FF9B  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47FF6D  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_480F1D  +
cmp al 69h +
jz loc_47FF1A  +
jmp loc_47FF24  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_48159A  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_4815A8  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_4815B4  +
cmp ecx 33h +
jnz loc_47F929  +
jmp loc_47F91D  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_48159A  +
jmp loc_48158D  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_48159A  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_48159A  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_4808DE  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov ecx eax +
jmp loc_480E8A  +
cmp dl 69h +
jz loc_47FE58  +
jmp loc_47FE62  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_481634  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_48162B  +
cmp dl 70h +
jnz loc_481634  +
mov edi [esp+2Ch+var_18] +
cmp dl [edi+1] +
jz loc_48164A  +
mov edx [ebx+0Ch] +
xor esi esi +
cmp eax 33h +
jz loc_47F892  +
movzx eax byte ptr [edx] +
jmp loc_47F89D  +
mov edx [ebx+0Ch] +
mov esi 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_481639  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_481639  +
mov eax ebx +
call sub_47F1A0  +
mov edi eax +
jmp loc_480A50  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_48105E  +
cmp cl 69h +
jz loc_47FFE2  +
jmp loc_47FFEC  +
cmp byte ptr [eax+1] 69h +
jnz loc_47FAB3  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_480E40  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_480E40  +
cmp al 77h +
jz loc_480DF0  +
xor ecx ecx +
jmp loc_47FAB3  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx eax +
jmp loc_4811F0  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_481704  +
sub eax 72h +
cmp al 1 +
ja loc_481174  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_47A670  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_481187  +
mov eax [esp+2Ch+var_14] +
xor ecx ecx +
test eax eax +
jz loc_481739  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jnz loc_481749  +
mov edx [esp+2Ch+var_14] +
xor ecx ecx +
cmp al [edx+1] +
jz loc_481777  +
cmp [esp+2Ch+var_10] 33h +
jnz loc_480032  +
jmp loc_480026  +
cmp al 70h +
jnz loc_481739  +
lea esi [esi+0] +
jmp loc_48172E  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_4812C1  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_481739  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_481739  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47D430  +
mov ecx [esp+2Ch+var_14] +
jmp loc_47FC5D  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_48133C  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_47D430  +
mov ecx [esp+2Ch+var_18] +
jmp loc_47FEAD  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edi eax +
jmp loc_480A50  +
cmp byte ptr [eax+1] 69h +
jnz loc_48052F  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_4807CF  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_4807CF  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov ecx eax +
jmp loc_4811F0  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov ecx eax +
jmp loc_4812C1  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_48188A  +
sub eax 72h +
cmp al 1 +
ja loc_481251  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_10] eax +
jmp loc_48125C  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_480E40  +
mov eax ebx +
call sub_47F1A0  +
mov ecx eax +
jmp loc_4812C1  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
jmp loc_480BFF  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
jmp loc_480056  +
cmp dl 69h +
jz loc_47F7E1  +
jmp loc_47F85D  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47C010  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov [esp+2Ch+var_2C] eax +
jmp loc_480F9A  +
mov eax 69h +
xor edi edi +
jmp loc_47FF07  +
cmp al 69h +
jz loc_47FC08  +
nop   +
jmp loc_47FC12  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_47D430  +
mov ecx [esp+2Ch+var_14] +
jmp loc_480041  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov esi eax +
jmp loc_480D60  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_47D430  +
jmp loc_47F930  +
cmp al 69h +
jz loc_47F8DD  +
jmp loc_47F8E7  +
mov [esp+2Ch+var_2C] ebx +
lea esi [esi+0] +
call sub_47A670  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47FEC5  +
cmp byte ptr [edx+1] 69h +
jnz loc_481920  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_47D430  +
jmp loc_480B7D  +
mov edx 45h +
mov eax ebx +
call sub_47D430  +
mov edi eax +
jmp loc_481110  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_4819E7  +
sub eax 72h +
cmp al 1 +
ja loc_4810AC  +
mov [esp+2Ch+var_2C] ebx +
call sub_47A670  +
mov [esp+2Ch+var_18] eax +
jmp loc_4810B7  +
mov eax ebx +
call sub_47F1A0  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_47F1A0  +
mov edi eax +
mov eax ebx +
call sub_47F1A0  +
jmp loc_480B7D  +
mov eax ebx +
call sub_47F1A0  +
mov edi eax +
jmp loc_481110  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_480B7D  +
cmp al 77h +
jz loc_480B33  +
jmp loc_481019  +
xor ecx ecx +
test edi edi +
jz loc_481A54  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_481A65  +
xor ecx ecx +
cmp al [edi+1] +
jz loc_481A91  +
cmp edx 33h +
jnz loc_47FE9E  +
lea esi [esi+0] +
jmp loc_47FE92  +
cmp al 70h +
jnz loc_481A54  +
lea esi [esi+0] +
jmp loc_481A4D  +
mov eax ebx +
call sub_47C010  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_476370  +
mov edi eax +
jmp loc_481110  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_481A54  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_481A54  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] 0 +
mov [ebp+var_54] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_4C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_476570  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx eax +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_48BDD0  +
sub esp eax +
lea eax ds:12h[edx*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_48BDD0  +
mov edx [ebp+arg_0] +
sub esp eax +
lea eax [esp+178h+var_16C] +
mov [ebp+var_28] eax +
mov eax [ebp+var_38] +
lea edi [ebp+var_15C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_164] ebx +
mov [ebp+var_160] eax +
lea eax [ebp+var_164] +
mov [ebp+var_38] eax +
mov eax edi +
call sub_476E00  +
mov eax [ebp+var_160] +
mov [ebp+var_38] eax +
mov eax [ebp+var_5C] +
mov esp esi +
mov ecx [ebp+var_50] +
mov edx [ebp+var_54] +
mov byte ptr [ebp+eax+var_15C] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_44] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_481BF0  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_481DD0  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_481D84  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_481D7C  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_48BDD0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_48BDD0  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_481D30  +
jb loc_481DE5  +
cmp esi 3 +
ja loc_481DE5  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_481CE1  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_481E00  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_4763D0  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+78h+var_78] 0 +
call sub_476370  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_481D45  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_47D0F0  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_481D55  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_481D7A  +
test ebx ebx +
jz loc_481DF7  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_481AB0  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_481D90  +
cmp al 5Fh +
jnz loc_481DC0  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_481DA3  +
cmp al 44h +
jnz loc_481C1E  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_481C1E  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_481C2C  +
cmp al 24h +
jnz loc_481C1E  +
jmp loc_481D90  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_481C0A  +
mov esi 1 +
nop   +
jmp loc_481C2C  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_47A670  +
mov ebx eax +
jmp loc_481D45  +
xor eax eax +
mov esp edi +
jmp loc_481D7C  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_47CB50  +
mov ecx eax +
jmp loc_481CFD  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset loc_476C00 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_481BF0  +
test eax eax +
jz loc_481E76  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_481E71  +
***
mov eax [esp+28h+arg_8] +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
test eax eax +
mov [esp+28h+var_C] 0 +
jnz loc_481F03  +
lea eax [esp+28h+var_18] +
mov [esp+28h+var_1C] eax +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_20] offset loc_476C00 +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call sub_481AB0  +
test eax eax +
jz loc_481F34  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
mov edx [esp+28h+arg_C] +
cmovz eax [esp+28h+var_10] +
mov [edx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
cmp eax 2 +
mov ebx 2 +
jbe loc_481F16  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_481F10  +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] 0 +
call realloc  +
test eax eax +
jz loc_481F4E  +
mov [esp+28h+var_18] eax +
mov [esp+28h+var_10] ebx +
jmp loc_481EBC  +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
mov eax [esp+28h+arg_C] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_481EFE  +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 1 +
jmp loc_481EBC  +
***
mov edx [esp+arg_8] +
mov eax [esp+arg_C] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+arg_4] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_481E20  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_481BF0  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+1Ch+arg_0] +
lea ecx [esp+1Ch+var_10] +
call sub_481E20  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_481BF0  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_47D320  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_47D320  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
push ebx  +
mov edx [eax] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_4B8120[esi+esi] 4 +
jz loc_482105  +
lea esi [esi+0] +
lea ecx [ecx+ecx*4] +
mov [eax] edx +
lea ecx [ebx+ecx*2-30h] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_4B8120[esi+esi] 4 +
jnz loc_4820E0  +
test ecx ecx +
js loc_482105  +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
movsx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_482130  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_482158  +
add edx 1 +
sub eax 30h +
mov [ebx] edx +
pop ebx  +
retn   +
lea eax [edx+1] +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_482158  +
mov eax ebx +
call sub_4820C0  +
mov edx [ebx] +
cmp byte ptr [edx] 5Fh +
jnz loc_482158  +
add edx 1 +
mov [ebx] edx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_4821D0  +
sub ecx 30h +
lea ebx [eax+1] +
mov [ebp+0] ecx +
mov [edi] ebx +
movsx edx byte ptr [eax+1] +
mov eax 1 +
movzx esi dl +
test ds:byte_4B8120[esi+esi] 4 +
jz loc_4821C4  +
nop   +
lea esi [esi+0] +
add ebx 1 +
lea eax [ecx+ecx*4] +
lea ecx [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx esi dl +
test ds:byte_4B8120[esi+esi] 4 +
jnz loc_4821A0  +
cmp dl 5Fh +
mov eax 1 +
jz loc_4821D7  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov [edi] ebx +
mov [ebp+0] ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx [ebx+10h] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_482219  +
mov eax [ebx+8] +
sub edx 1 +
mov [ebx+10h] edx +
lea ecx [esi-4] +
mov eax [eax+esi] +
test eax eax +
jnz loc_482276  +
mov esi ecx +
test edx edx +
jg loc_482204  +
mov edx [ebx+14h] +
mov edi [ebx+0Ch] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_482242  +
mov ecx [edi+esi] +
sub edx 1 +
mov [ebx+14h] edx +
lea eax [esi-4] +
test ecx ecx +
jnz loc_482290  +
mov esi eax +
test edx edx +
jg loc_482230  +
test edi edi +
jz loc_482259  +
mov [esp+10h+var_10] edi +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+8] +
test eax eax +
jz loc_48226F  +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] eax +
call free  +
mov eax [ebx+8] +
mov dword ptr [eax+esi] 0 +
jmp loc_4821F8  +
mov [esp+10h+var_10] ecx +
call free  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+esi] 0 +
jmp loc_48221D  +
***
sub esp 18h +
mov edx [eax+14h] +
mov eax [eax+1Ch] +
cmp edx eax +
jl loc_482311  +
test eax eax +
jz loc_4822F6  +
lea edx [eax+eax] +
mov [ebx+1Ch] edx +
mov edx [ebx+0Ch] +
shl eax 3 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_474370  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
mov dword ptr [eax+edx*4] 0 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov dword ptr [ebx+1Ch] 5 +
mov [esp+18h+var_18] 14h +
call sub_4742F0  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
jmp loc_4822E2  +
mov eax [ebx+0Ch] +
jmp loc_4822E2  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+18h] +
cmp [ebx+10h] eax +
jl loc_482354  +
test eax eax +
jz loc_482390  +
lea edx [eax+eax] +
mov [ebx+18h] edx +
mov edx [ebx+8] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_474370  +
mov [ebx+8] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_4742F0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+10h] +
mov edx [ebx+8] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+10h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+18h] 5 +
mov [esp+28h+var_28] 14h +
call sub_4742F0  +
mov [ebx+8] eax +
jmp loc_482354  +
***
cmp eax 56h +
jz loc_4823D6  +
cmp eax 75h +
jz loc_4823D0  +
cmp eax 43h +
jz loc_4823C7  +
sub esp 0Ch +
call abort  +
mov eax 1 +
retn   +
mov eax 4 +
retn   +
mov eax 2 +
retn   +
***
cmp eax 7 +
push edi  +
push ebx  +
sub esp 14h +
lea edx [eax+20h] +
lea eax [eax+4] +
call sub_482440  +
mov eax [esi+4] +
test eax eax +
jz loc_4824BF  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_4824F5  +
mov edx [esi+44h] +
test edx edx +
jle loc_4824E6  +
xor ebx ebx +
nop   +
mov eax [eax+ebx*4] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+40h] +
cmp [esi+44h] ebx +
jg loc_4824D0  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+40h] 0 +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_482530  +
mov eax [ebx] +
test eax eax +
jz loc_482521  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx] 0 +
mov ebx [esi+4Ch] +
mov [esp+18h+var_18] ebx +
call free  +
mov dword ptr [esi+4Ch] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
lea eax [ecx+1] +
mov [esp+28h+var_28] eax +
call sub_4742F0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov ebx eax +
call memcpy  +
mov eax [edi] +
mov edx [esp+28h+arg_0] +
mov byte ptr [ebx+esi] 0 +
mov [eax+edx*4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_4825C0  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_4825B9  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_474370  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_4742F0  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_1C] edx +
mov edx ecx +
call sub_482580  +
mov eax [edi+4] +
mov esi [edi] +
lea ebx [eax-1] +
cmp ebx esi +
jb loc_482652  +
movzx eax byte ptr [ebx] +
sub ebx 1 +
mov [ebx+ebp+1] al +
mov esi [edi] +
cmp ebx esi +
jnb loc_482642  +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_20] ebp +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call memcpy  +
add [edi+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_482680  +
***
push ebx  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_482580  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 44h +
lea ebx [esp+48h+var_29] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] offset unk_4B9C4C +
mov [esp+48h+var_48] ebx +
call sprintf  +
cmp byte ptr [esp+48h+var_29] 0 +
jz loc_48271F  +
mov edx ebx +
mov eax esi +
call sub_4826B0  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax] +
movzx ecx byte ptr [eax] +
cmp cl 2Dh +
jz loc_4827B0  +
cmp cl 2Bh +
jz loc_4827A0  +
movzx edx cl +
xor eax eax +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_482778  +
jmp loc_482795  +
mov ecx [ebx] +
lea eax [ecx+1] +
mov [ebx] eax +
movzx ecx byte ptr [ecx+1] +
movzx eax cl +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_482790  +
test cl cl +
mov ds:byte_4C15EC cl +
jz loc_482760  +
mov edx offset byte_4C15EC +
mov eax esi +
call sub_4826B0  +
jmp loc_482760  +
mov eax 1 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_482748  +
mov edx offset byte_4C15EC +
mov eax esi +
mov ds:byte_4C15EC 2Dh +
call sub_4826B0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_482748  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [edx] +
cmp eax ecx +
jz loc_482815  +
mov esi ecx +
sub esi eax +
mov eax ebx +
mov edx esi +
call sub_482580  +
mov edx [edi] +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ebp +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov esi ebx +
call sub_482490  +
mov eax ebp +
call sub_4821F0  +
test ebp 1 +
mov eax 54h +
jnz loc_482ADB  +
test edi 2 +
jnz loc_482AC6  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_482870  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_48287B  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov eax [ebx+24h] +
test eax eax +
jnz loc_4829F8  +
mov eax [ebx+20h] +
xor esi esi +
test eax eax +
jle loc_4828E1  +
nop   +
mov eax [ebx+4] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+4] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4742F0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+4] +
mov ecx [eax+esi*4] +
mov eax [ebp+4] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+20h] esi +
jg loc_482890  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_482AB3  +
mov eax [ebx+10h] +
xor esi esi +
test eax eax +
jle loc_482946  +
mov eax [ebx+8] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+8] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4742F0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+8] +
mov ecx [eax+esi*4] +
mov eax [ebp+8] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+10h] esi +
jg loc_4828F5  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_482AA0  +
mov edi [ebx+14h] +
xor esi esi +
test edi edi +
jle loc_4829B1  +
lea esi [esi+0] +
mov eax [ebx+0Ch] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+0Ch] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4742F0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+0Ch] +
mov ecx [eax+esi*4] +
mov eax [ebp+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+14h] esi +
jg loc_482960  +
mov eax [ebx+44h] +
test eax eax +
jnz loc_482A10  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_482A94  +
mov [esp+28h+var_28] 0Ch +
call sub_4742F0  +
mov [ebp+4Ch] eax +
mov edx [ebx+4Ch] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov ecx [edx+4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4827E0  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4742F0  +
mov [ebp+4] eax +
jmp loc_482886  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4742F0  +
mov edx [ebx+44h] +
test edx edx +
mov [ebp+40h] eax +
jle loc_4829B8  +
mov [esp+28h+var_1C] eax +
xor esi esi +
jmp loc_482A37  +
mov eax [ebp+40h] +
mov [esp+28h+var_1C] eax +
mov eax [ebx+40h] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [esp+28h+var_1C] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_4742F0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+40h] +
mov ecx [eax+esi*4] +
mov eax [ebp+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+44h] esi +
jg loc_482A30  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jnz loc_4829C3  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4742F0  +
mov [ebp+0Ch] eax +
jmp loc_482951  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_4742F0  +
mov [ebp+8] eax +
jmp loc_4828EC  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_482858  +
movzx eax byte ptr [ebx] +
lea edi [ebp+1] +
lea esi [ebx+1] +
mov [ebp+0] al +
mov eax 53h +
jmp loc_48284C  +
***
jmp sub_482B00  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+24h] +
cmp [ebx+20h] eax +
jl loc_482B2F  +
test eax eax +
jnz loc_482B67  +
mov dword ptr [ebx+24h] 3 +
mov [esp+28h+var_28] 0Ch +
call sub_4742F0  +
mov [ebx+4] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_4742F0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+20h] +
mov edx [ebx+4] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+20h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+eax] +
mov [ebx+24h] edx +
mov edx [ebx+4] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_474370  +
mov [ebx+4] eax +
jmp loc_482B2F  +
***
mov eax [esp+4] +
mov byte_492FD4 al +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov [esp+1Ch+var_10] eax +
jmp loc_482BC8  +
add ebx 1 +
cmp ebx 4Fh +
jz loc_482C20  +
lea esi [ebx+ebx*2] +
mov ebp ds:off_4BA984[esi*4] +
lea edi ds:0[esi*4] +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
cmp [esp+1Ch+var_10] eax +
jnz loc_482BC0  +
mov eax [esp+1Ch+arg_4] +
xor eax ds:dword_4BA988[esi*4] +
test al 2 +
jnz loc_482BC0  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call memcmp  +
test eax eax +
jnz loc_482BC0  +
mov eax ds:off_4BA980[edi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4] +
mov edx offset off_4BA6E0 +
cmp ecx 0FFFFFFFFh +
jnz loc_482C44  +
jmp loc_482C50  +
cmp eax ecx +
jz loc_482C50  +
add edx 0Ch +
mov eax [edx+4] +
test eax eax +
jnz loc_482C40  +
retn   +
***
mov dword_492FD8 ecx +
mov eax ecx +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFFFh +
push ebx  +
mov ebx offset off_4BA6E0 +
sub esp 10h +
mov edi [esp+20h] +
jmp loc_482C80  +
add ebx 0Ch +
mov esi [ebx+4] +
test esi esi +
jz loc_482C92  +
mov eax [ebx] +
mov [esp] edi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jnz loc_482C76  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi offset a_ada_ +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+38h+arg_0] +
mov eax [esp+38h+arg_0] +
cmps   +
setnbe cl  +
setb dl  +
add eax 5 +
cmp cl dl +
cmovnz eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] eax +
movzx eax byte ptr [eax] +
test ds:byte_4B8120[eax+eax] 8 +
jz loc_482EF7  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 8 +
mov [esp+38h+var_38] eax +
call sub_4742F0  +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_1C] eax +
mov esi eax +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 8 +
jnz loc_482E44  +
cmp al 4Fh +
jnz loc_482EF7  +
mov edx 4 +
mov edi offset aOabs +
mov [esp+38h+var_20] esi +
xor ebp ebp +
mov esi edx +
jmp loc_482D4D  +
add ebp 1 +
mov edi ds:off_4BA4E0[ebp*8] +
test edi edi +
jz loc_482EF7  +
mov [esp+38h+var_38] edi +
call strlen  +
mov esi eax +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_482D31  +
mov edx esi +
mov esi [esp+38h+var_20] +
add ebx edx +
mov edx ds:off_4BA4E4[ebp*8] +
lea ebp [esi+1] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_20] edx +
call strlen  +
mov edx [esp+38h+var_20] +
mov byte ptr [esi] 22h +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] edx +
mov edi eax +
add edi ebp +
mov [esp+38h+var_30] eax +
lea esi [edi+1] +
call memcpy  +
mov byte ptr [edi] 22h +
movzx eax byte ptr [ebx] +
cmp al 54h +
jz loc_482ED3  +
cmp al 45h +
jnz loc_482E73  +
cmp byte ptr [ebx+1] 0 +
jz loc_482EF7  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
mov edi ebx +
cmp byte ptr [esp+38h+var_20] 0 +
jz loc_482E9E  +
cmp byte ptr [ebx+1] 0 +
jz loc_482EF7  +
cmp al 58h +
jz loc_482EAE  +
cmp al 53h +
jz loc_482F40  +
cmp al 44h +
nop   +
jz loc_4830C0  +
cmp al 5Fh +
jnz loc_4831CC  +
movzx eax byte ptr [edi+1] +
cmp al 5Fh +
jnz loc_483073  +
movzx eax byte ptr [edi+2] +
lea ebx [edi+2] +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_4830F6  +
cmp al 5Fh +
jz loc_482FA0  +
mov byte ptr [edx] 2Eh +
movzx eax byte ptr [ebx] +
lea esi [edx+1] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 8 +
jz loc_482D15  +
add esi 1 +
add ebx 1 +
mov [esi-1] al +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 0Ch +
jnz loc_482E44  +
cmp al 5Fh +
jnz loc_482DA3  +
movzx edx byte ptr [ebx+1] +
test ds:byte_4B8120[edx+edx] 0Ch +
jnz loc_482E44  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
cmp al 50h +
setz cl  +
mov edi ebx +
or cl byte ptr [esp+38h+var_20] +
jz loc_482E9E  +
cmp byte ptr [ebx+1] 0 +
jz loc_483147  +
cmp byte ptr [esp+38h+var_20] 0 +
jnz loc_482DD3  +
cmp al 53h +
jz loc_482DD3  +
cmp al 58h +
jnz loc_482DE5  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
cmp al 6Eh +
jnz loc_483057  +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_482EC0  +
cmp al 6Eh +
jz loc_482EC0  +
jmp loc_482DE5  +
cmp byte ptr [ebx+1] 4Bh +
jnz loc_482DBD  +
movzx eax byte ptr [ebx+2] +
cmp al 42h +
jz loc_483065  +
cmp al 5Fh +
jnz loc_482EF7  +
cmp byte ptr [ebx+3] 5Fh +
jz loc_483037  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 3 +
mov [esp+38h+var_38] eax +
call sub_4742F0  +
mov ebx eax +
mov eax [esp+38h+arg_0] +
cmp byte ptr [eax] 3Ch +
jz loc_483021  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aS_7 +
mov [esp+38h+var_30] eax +
call sprintf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_482EF7  +
movzx edx byte ptr [edi+2] +
test dl dl +
jz loc_482F55  +
cmp dl 5Fh +
jnz loc_482EF7  +
cmp al 4Fh +
jz loc_483126  +
lea esi [esi+0] +
jle loc_483045  +
cmp al 52h +
jz loc_483130  +
cmp al 57h +
jnz loc_482EF7  +
mov ebp offset aWrite +
mov [esp+38h+var_34] ebp +
lea ebx [edi+2] +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebp +
call strlen  +
lea edx [esi+eax] +
movzx eax byte ptr [edi+2] +
mov edi ebx +
jmp loc_482DF6  +
cmp byte ptr [edi+3] 5Fh +
jz loc_482E2A  +
mov ebp edx +
mov eax 6 +
mov edi offset a_elabb +
xor esi esi +
jmp loc_482FDA  +
add esi 1 +
mov edi ds:off_4BA420[esi*8] +
test edi edi +
jz loc_482EF7  +
mov [esp+38h+var_38] edi +
call strlen  +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_482FC0  +
mov esi ds:off_4BA424[esi*8] +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] eax +
mov ebx eax +
call memcpy  +
add ebp ebx +
mov byte ptr [ebp+0] 0 +
mov eax [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] eax +
call strcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [esi] 2Eh +
add ebx 4 +
add esi 1 +
jmp loc_482D01  +
cmp al 49h +
jnz loc_482EF7  +
mov ebp offset aInput +
jmp loc_482F77  +
cmp al 62h +
jz loc_482EC0  +
nop   +
jmp loc_482DE5  +
cmp byte ptr [ebx+3] 0 +
jnz loc_482EF7  +
mov ebp esi +
jmp loc_483011  +
cmp al 45h +
mov ebp edx +
jnz loc_48313A  +
movzx edx byte ptr [edi+2] +
lea eax [edi+2] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_4830A4  +
add eax 1 +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_483091  +
cmp dl 73h +
jnz loc_482EF7  +
cmp byte ptr [eax+1] 0 +
jnz loc_482EF7  +
jmp loc_483011  +
movzx eax byte ptr [edi+1] +
cmp al 41h +
jz loc_4831BC  +
cmp al 46h +
mov ebx offset a_finalize +
jnz loc_482EF7  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebx +
call strlen  +
add eax esi +
mov ebp eax +
jmp loc_483011  +
mov ebp edx +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_483122  +
cmp al 5Fh +
jnz loc_483155  +
movzx eax byte ptr [edi+1] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_482EF7  +
mov ebx edi +
jmp loc_4830F8  +
mov ebp offset aOutput +
jmp loc_482F77  +
mov ebp offset aRead +
jmp loc_482F77  +
cmp al 42h +
jnz loc_482EF7  +
jmp loc_48307D  +
mov ebp esi +
lea esi [esi+0] +
jmp loc_483011  +
cmp al 58h +
jnz loc_483172  +
movzx eax byte ptr [ebx+2] +
lea edi [ebx+2] +
cmp al 6Eh +
jnz loc_4831C6  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_483164  +
cmp al 6Eh +
jz loc_483164  +
cmp al 2Eh +
jnz loc_4831AF  +
movzx eax byte ptr [edi+1] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_482EF7  +
movzx eax byte ptr [edi+2] +
lea edx [edi+2] +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_4831AF  +
add edx 1 +
movzx eax byte ptr [edx] +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_48319C  +
test al al +
jnz loc_482EF7  +
jmp loc_483011  +
mov ebx offset a_adjust +
jmp loc_4830D9  +
cmp al 62h +
jz loc_483164  +
jmp loc_483172  +
mov ebp edx +
nop   +
jmp loc_483172  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edx dword_492FD8 +
mov esi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_4] +
cmp edx 0FFFFFFFFh +
jz loc_4832B0  +
lea ebx [esp+7Ch+var_60] +
xor eax eax +
mov ecx 15h +
mov edi ebx +
test ebp 1FF04h +
stos   +
jz loc_483261  +
mov [esp+7Ch+var_60] ebp +
mov ecx ebp +
test [esp+7Ch+var_60] 4100h +
jnz loc_483279  +
test cl 4 +
jnz loc_4832C0  +
test ch 80h +
jnz loc_4832D5  +
and ecx 10000h +
jnz loc_483294  +
mov edx esi +
mov eax ebx +
call sub_487660  +
mov esi eax +
mov eax ebx +
call sub_4821F0  +
mov eax esi +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
and edx 1FF04h +
mov ecx edx +
or ecx ebp +
mov [esp+7Ch+var_60] ecx +
test [esp+7Ch+var_60] 4100h +
jz loc_48322B  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] esi +
call sub_481FE0  +
test eax eax +
jnz loc_483259  +
mov ecx [esp+7Ch+var_60] +
test ch 40h +
jz loc_48322B  +
jmp loc_483259  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_48A940  +
test eax eax +
jz loc_483245  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_476140  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_482020  +
test eax eax +
jnz loc_483259  +
mov ecx [esp+7Ch+var_60] +
jmp loc_483234  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_482CA0  +
jmp loc_483259  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edx [edx] +
mov ecx [esp+54h+arg_0] +
movzx eax byte ptr [edx] +
cmp al 59h +
jz loc_4833E0  +
cmp ecx 3 +
jz loc_483445  +
cmp ecx 5 +
jz loc_483348  +
cmp ecx 4 +
nop   +
jz loc_4833A7  +
cmp ecx 6 +
jz loc_483590  +
lea edx [ecx-1] +
cmp edx 1 +
jbe loc_4834E8  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Dh +
jz loc_483686  +
mov edx offset asc_4B9C9A +
mov ecx 1 +
mov eax esi +
call sub_4825F0  +
mov eax ebx +
call sub_4820C0  +
xor edx edx +
test eax eax +
jle loc_48339D  +
mov byte ptr [esp+54h+var_34] al +
mov ecx 1 +
mov eax esi +
lea edx [esp+54h+var_34] +
mov byte ptr [esp+54h+var_34+1] 0 +
call sub_4825F0  +
mov edx offset asc_4B9C9A +
mov ecx 1 +
mov eax esi +
call sub_4825F0  +
mov edx 1 +
add esp 4Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_4820C0  +
test eax eax +
mov edx eax +
jz loc_483722  +
xor eax eax +
cmp edx 1 +
jnz loc_483340  +
mov eax esi +
mov ecx 4 +
mov edx offset aTrue_0 +
call sub_4825F0  +
mov eax 1 +
jmp loc_483340  +
add edx 1 +
mov eax ebx +
mov [ebx] edx +
call sub_482110  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_483754  +
mov edx [edi+40h] +
test edx edx +
jz loc_483407  +
cmp eax [edi+44h] +
jge loc_483754  +
mov eax ebx +
call sub_482110  +
cmp eax 0FFFFFFFFh +
jz loc_483754  +
mov eax [edi+40h] +
test eax eax +
jz loc_48375E  +
mov edx [eax+ebp*4] +
test edx edx +
jz loc_48333B  +
cmp byte ptr [edx] 0 +
jz loc_48333B  +
mov eax esi +
call sub_4826B0  +
lea esi [esi+0] +
jmp loc_48333B  +
cmp al 45h +
jz loc_48373D  +
cmp al 4Bh +
nop   +
jz loc_483650  +
cmp al 51h +
jz loc_483650  +
cmp al 5Fh +
jz loc_483700  +
cmp al 6Dh +
mov [esp+54h+var_3C] 1 +
jz loc_483771  +
mov eax ebx +
mov edi 1 +
call sub_4820C0  +
mov ebp eax +
xor eax eax +
cmp ebp 0FFFFFFFFh +
jz loc_483340  +
lea edx [esp+54h+var_34] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] offset aD +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
cmp byte ptr [esp+54h+var_34] 0 +
jnz loc_48369C  +
test edi edi +
jnz loc_4834C7  +
cmp ebp 9 +
jle loc_48333B  +
mov eax [esp+54h+var_3C] +
test eax eax +
jnz loc_48333B  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_48333B  +
add eax 1 +
mov [ebx] eax +
jmp loc_48333B  +
cmp al 51h +
jz loc_483650  +
mov eax ebx +
mov [esp+54h+var_3C] ecx +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_483754  +
test eax eax +
mov ecx [esp+54h+var_3C] +
jz loc_483670  +
lea eax [eax+1] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_38] ecx +
call sub_4742F0  +
mov [esp+54h+var_4C] ebp +
mov edx eax +
mov [esp+54h+var_3C] eax +
mov eax [ebx] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call strncpy  +
mov edx [esp+54h+var_3C] +
mov byte ptr [edx+ebp] 0 +
mov eax [edi] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call sub_4831E0  +
mov ecx [esp+54h+var_38] +
cmp ecx 1 +
mov edi eax +
jz loc_4837D4  +
test edi edi +
jz loc_4837AF  +
cmp byte ptr [edi] 0 +
jnz loc_48378A  +
mov [esp+54h+var_54] edi +
call free  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
add [ebx] ebp +
mov eax 1 +
jmp loc_483340  +
cmp al 45h +
jz loc_483798  +
cmp al 6Dh +
jnz loc_4835D7  +
mov edx offset asc_4B9C95 +
mov eax esi +
mov ecx 1 +
call sub_4825F0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
jmp loc_4835D7  +
mov ecx 1 +
mov eax esi +
call sub_4825F0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_4835C0  +
cmp al 2Eh +
jz loc_4836A8  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
cmp al 65h +
jnz loc_48333B  +
mov edx offset aE +
mov eax esi +
mov ecx 1 +
call sub_4825F0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_48333B  +
mov ecx 1 +
mov eax esi +
call sub_4825F0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_483623  +
jmp loc_48333B  +
mov [esp+54h+var_50] 1 +
mov ecx esi +
mov edx ebx +
mov [esp+54h+var_54] 0 +
mov eax edi +
call sub_483FC0  +
jmp loc_483340  +
mov ecx 1 +
mov edx offset a0 +
mov eax esi +
call sub_4825F0  +
jmp loc_483583  +
mov cl 1 +
mov edx offset asc_4B9C95 +
mov eax esi +
call sub_4825F0  +
add dword ptr [ebx] 1 +
jmp loc_483350  +
mov eax esi +
call sub_4826B0  +
jmp loc_4834BA  +
mov ecx 1 +
mov edx offset a_ +
mov eax esi +
call sub_4825F0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_4835F1  +
mov ecx 1 +
mov eax esi +
call sub_4825F0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 4 +
jnz loc_4836D5  +
jmp loc_4835F1  +
cmp byte ptr [edx+1] 6Dh +
jz loc_4837E5  +
mov eax ebx +
xor edi edi +
call sub_482110  +
mov [esp+54h+var_3C] 1 +
mov ebp eax +
jmp loc_483484  +
mov eax esi +
mov ecx 5 +
mov edx offset aFalse_0 +
call sub_4825F0  +
mov eax 1 +
jmp loc_483340  +
mov [esp+54h+var_54] 3 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_483810  +
jmp loc_483340  +
mov eax 0FFFFFFFFh +
jmp loc_483340  +
mov eax esi +
mov edx ebp +
call sub_4826F0  +
mov eax 1 +
jmp loc_483340  +
mov ecx 1 +
mov edx offset asc_4B9C95 +
mov eax esi +
call sub_4825F0  +
add dword ptr [ebx] 1 +
jmp loc_483476  +
mov edx edi +
mov eax esi +
call sub_4826B0  +
jmp loc_48356F  +
mov [esp+54h+var_54] 6 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_483810  +
jmp loc_483340  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_483577  +
cmp byte ptr [eax] 0 +
nop   +
jz loc_483577  +
mov edx eax +
mov eax esi +
call sub_4826B0  +
jmp loc_483577  +
mov edx offset asc_4B9CAD +
mov eax esi +
call sub_4825F0  +
jmp loc_48355E  +
mov ecx 1 +
mov edx offset asc_4B9C95 +
mov eax esi +
call sub_4825F0  +
add dword ptr [ebx] 2 +
mov [esp+54h+var_3C] 0 +
jmp loc_483476  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax ecx +
mov [esp+2Ch+var_14] edx +
mov edx offset asc_4B9CAF +
mov [esp+2Ch+var_18] ecx +
mov ecx 1 +
call sub_4825F0  +
mov edx [ebx] +
mov [esp+2Ch+var_20] edx +
add edx 1 +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov [ebx] edx +
mov ebx 1 +
xor edx edx +
mov eax ebx +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jz loc_483945  +
nop   +
test cl cl +
jz loc_483978  +
test edx edx +
jz loc_48390C  +
mov eax [esp+2Ch+var_1C] +
mov esi offset off_4BA980 +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_20] eax +
jmp loc_48389F  +
add ebx 1 +
add esi 0Ch +
cmp ebx 4Fh +
jz loc_483978  +
mov ebp [esi] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
cmp [esp+2Ch+var_20] eax +
mov edi eax +
jb loc_483890  +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_483890  +
mov eax [esp+2Ch+var_18] +
mov edx offset asc_4B9CB1 +
mov ecx 1 +
call sub_4825F0  +
lea eax [ebx+ebx*2] +
mov edx ds:off_4BA984[eax*4] +
test edx edx +
jz loc_4838F3  +
cmp byte ptr [edx] 0 +
jnz loc_483984  +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_4B9CB1 +
call sub_4825F0  +
mov eax [esp+2Ch+var_14] +
add [eax] edi +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
mov edx esi +
call sub_4832F0  +
test eax eax +
jz loc_48396B  +
mov edx [esi] +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov edx 1 +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jnz loc_483860  +
mov ebx eax +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_4B9CB3 +
call sub_4825F0  +
mov eax [esp+2Ch+var_14] +
add dword ptr [eax] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax] +
cmp byte ptr [eax] 57h +
jz loc_483947  +
add esp 2Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
call sub_4826B0  +
jmp loc_4838F3  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] eax +
mov eax [edx] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+arg_4] +
lea edx [eax+1] +
test ecx ecx +
mov [ebp+0] edx +
jz loc_483AF5  +
cmp byte ptr [eax+1] 7Ah +
jz loc_483A71  +
mov eax ebp +
call sub_4820C0  +
test eax eax +
mov ebx eax +
mov [esp+58h+var_34] eax +
jle loc_483C14  +
mov edx [ebp+0] +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_48] edx +
call strlen  +
cmp ebx eax +
jg loc_483C14  +
mov eax [esp+58h+var_40] +
mov edx [esp+58h+var_48] +
test byte ptr [eax] 4 +
jz loc_483A1C  +
mov edi offset aJarray1z +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_483EFC  +
mov eax [esp+58h+var_4C] +
mov ecx ebx +
xor esi esi +
call sub_4825F0  +
mov eax [esp+58h+arg_0] +
mov ecx [esp+58h+var_34] +
mov edx [ebp+0] +
test eax eax +
jz loc_483A40  +
test ecx ecx +
jnz loc_483F0E  +
add ecx edx +
test esi esi +
mov [ebp+0] ecx +
jz loc_483BF3  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_482160  +
test eax eax +
jz loc_483C14  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 1 +
jmp loc_483B2E  +
add eax 3 +
mov [ebp+0] eax +
mov eax ebp +
call sub_482110  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_483C14  +
mov eax [esp+58h+var_40] +
mov edx [eax+40h] +
test edx edx +
jz loc_483A9D  +
cmp ebx [eax+44h] +
jge loc_483C14  +
mov eax ebp +
call sub_482110  +
cmp eax 0FFFFFFFFh +
jz loc_483C14  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
test eax eax +
jz loc_483F92  +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_483AD1  +
cmp byte ptr [edx] 0 +
jz loc_483AD1  +
mov eax [esp+58h+var_4C] +
call sub_4826B0  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_483AF5  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_483AF5  +
cmp byte ptr [edx] 0 +
jz loc_483AF5  +
mov eax [esp+58h+arg_0] +
call sub_4826B0  +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_4B9CC4+2) +
call sub_4826B0  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_482160  +
test eax eax +
jz loc_483C14  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_483E80  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 0 +
test eax eax +
jle loc_483BB0  +
mov edx [ebp+0] +
xor ebx ebx +
mov esi [esp+58h+var_40] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_483CEF  +
cmp al 7Ah +
jz loc_483D41  +
mov edx ebp +
mov eax esi +
lea ecx [esp+58h+var_30] +
call sub_484420  +
mov edx [esp+58h+var_30] +
test edx edx +
mov edi eax +
jz loc_483B85  +
mov [esp+58h+var_58] edx +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
test edi edi +
jz loc_483BB0  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_483C20  +
mov ecx [esp+58h+var_4C] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_58] edi +
call sub_4832F0  +
mov edi eax +
test edi edi +
jnz loc_483CC6  +
nop   +
xor edi edi +
mov ebx [esp+58h+var_3C] +
test ebx ebx +
jnz loc_483ED0  +
mov eax [esp+58h+var_4C] +
mov eax [eax+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_483F23  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_4B9CC4 +
call sub_4826B0  +
mov ecx [esp+58h+arg_4] +
test ecx ecx +
jnz loc_483E35  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_4B9CC4+2) +
call sub_4826B0  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_482160  +
test eax eax +
jnz loc_483B22  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+58h+var_58] edi +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
call sub_4832F0  +
test eax eax +
mov edi eax +
jz loc_483EE3  +
mov eax [esi+40h] +
mov edx [esp+58h+var_20] +
sub edx [esp+58h+var_24] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_4742F0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_24] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_24] +
mov ecx [esp+58h+var_20] +
call sub_4827E0  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_483CC6  +
mov [esp+58h+var_58] eax +
call free  +
add ebx 1 +
cmp [esp+58h+var_34] ebx +
jle loc_483BB2  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_4B9CBE +
call sub_4826B0  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jnz loc_483B46  +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
lea ecx [esp+58h+var_30] +
mov edx ebp +
call sub_484420  +
test eax eax +
mov edi eax +
jnz loc_483DC0  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_483BA7  +
mov [esp+58h+var_58] eax +
call free  +
test edi edi +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
jnz loc_483CC6  +
jmp loc_483BB0  +
mov ecx [esp+58h+var_4C] +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
mov edx ebp +
call sub_485BE0  +
test eax eax +
mov edi eax +
jz loc_483BB0  +
mov eax ebp +
call sub_4820C0  +
test eax eax +
mov [esp+58h+var_48] eax +
jle loc_483CC6  +
mov eax [ebp+0] +
mov [esp+58h+var_58] eax +
call strlen  +
cmp [esp+58h+var_48] eax +
jg loc_483CC6  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+58h+var_4C] +
mov edx [ebp+0] +
mov ecx [esp+58h+var_48] +
call sub_4825F0  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_483F36  +
mov eax [esp+58h+var_48] +
add [ebp+0] eax +
jmp loc_483CC6  +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
call sub_4827E0  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_483D0C  +
mov eax [esi+40h] +
mov edx [esp+58h+var_2C] +
sub edx [esp+58h+var_30] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_4742F0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_30] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
jmp loc_483D0C  +
mov edx [esp+58h+arg_8] +
test edx edx +
jz loc_483BE9  +
mov ebp [esp+58h+var_40] +
mov eax ebp +
call sub_4822B0  +
xor ecx ecx +
mov esi eax +
mov eax [esp+58h+var_4C] +
mov ebx [eax+4] +
mov edx [eax] +
mov [esp+58h+var_58] esi +
mov eax ebx +
sub eax edx +
cmp edx ebx +
cmovnz ecx eax +
mov eax ebp +
add eax 0Ch +
call sub_482540  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_34] +
shl eax 2 +
mov [esp+58h+var_58] eax +
call sub_4742F0  +
mov ecx [esp+58h+var_34] +
mov esi [esp+58h+var_40] +
test ecx ecx +
mov [esi+44h] ecx +
mov [esi+40h] eax +
jle loc_483F85  +
xor edx edx +
mov ebx esi +
jmp loc_483EB3  +
mov eax [ebx+40h] +
mov dword ptr [eax+edx*4] 0 +
add edx 1 +
cmp edx ecx +
jnz loc_483EB0  +
mov [esp+58h+var_3C] 0 +
jmp loc_483B32  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_4B9CC1 +
call sub_4826B0  +
jmp loc_483BDD  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_483BB0  +
mov [esp+58h+var_58] eax +
call free  +
jmp loc_483BB0  +
cmp [esp+58h+arg_0] 0 +
mov ecx ebx +
mov esi 1 +
jz loc_483A40  +
mov eax [esp+58h+arg_0] +
call sub_4825F0  +
mov edx [ebp+0] +
mov ecx [esp+58h+var_34] +
jmp loc_483A40  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
jmp loc_483BCF  +
mov eax [esi+40h] +
lea edx [eax+ebx*4] +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_44] edx +
add eax 1 +
mov [esp+58h+var_58] eax +
call sub_4742F0  +
mov edx [esp+58h+var_44] +
mov ecx [esp+58h+var_48] +
mov [edx] eax +
mov eax [esi+40h] +
mov edx [ebp+0] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] ecx +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov ecx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+ecx] 0 +
jmp loc_483DB0  +
mov [esp+58h+var_3C] 0 +
jmp loc_483BB0  +
mov eax [esp+58h+var_4C] +
mov edx ebx +
call sub_4826F0  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_483AF5  +
mov eax [esp+58h+arg_0] +
mov edx ebx +
call sub_4826F0  +
jmp loc_483AF5  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] ecx +
call sub_4822B0  +
mov ecx [esp+58h+arg_0] +
test ecx ecx +
mov [esp+58h+var_3C] eax +
jz loc_483FF2  +
test byte ptr [esi+28h] 1 +
jz loc_484294  +
mov [esp+58h+arg_0] 1 +
mov eax [ebp+0] +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
cmp byte ptr [eax] 4Bh +
jz loc_4843BE  +
movzx edx byte ptr [eax+1] +
cmp dl 31h +
jl loc_484394  +
cmp dl 39h +
jle loc_484265  +
cmp dl 5Fh +
jnz loc_484394  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_482110  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_484394  +
mov [esp+58h+var_4C] 1 +
jmp loc_484113  +
cmp al 74h +
jz loc_484147  +
cmp al 4Bh +
jz loc_484336  +
test dword ptr [esi] 2000h +
jnz loc_4842B0  +
test ecx ecx +
jz loc_4840B2  +
mov [esp+58h+var_58] ecx +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
call sub_484420  +
test eax eax +
mov [esp+58h+var_4C] eax +
jz loc_484177  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_4827E0  +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov edi eax +
sub edi edx +
cmp edx eax +
cmovnz ecx edi +
mov eax esi +
call sub_482320  +
test ebx ebx +
jle loc_484113  +
test byte ptr [esi] 4 +
mov eax offset asc_4B9CC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_4826B0  +
sub ebx 1 +
lea eax [ebx+1] +
test eax eax +
jle loc_48417F  +
mov ecx [esp+58h+var_24] +
mov edx [ebp+0] +
mov [esp+58h+var_20] ecx +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_484072  +
lea edi [edx+1] +
mov [ebp+0] edi +
movzx eax byte ptr [edx+1] +
mov edx edi +
cmp al 74h +
jnz loc_48407A  +
lea eax [esp+58h+var_24] +
mov edx ebp +
mov [esp+58h+var_58] eax +
lea ecx [esp+58h+var_30] +
mov eax esi +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] 1 +
call sub_4839A0  +
test eax eax +
mov [esp+58h+var_4C] eax +
jnz loc_4840DC  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov ebx eax +
sub ebx edx +
cmp edx eax +
cmovnz ecx ebx +
mov ebx [esp+58h+var_3C] +
lea eax [esi+0Ch] +
mov [esp+58h+var_58] ebx +
call sub_482540  +
mov edx [esp+58h+arg_0] +
test edx edx +
jz loc_4841DD  +
test byte ptr [esi] 4 +
mov eax offset asc_4B9CC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_4826B0  +
test byte ptr [esi+2Ch] 1 +
jnz loc_48440A  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_4827E0  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_4843A8  +
mov eax [esp+58h+var_40] +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_48420D  +
test byte ptr [esi] 4 +
mov eax offset asc_4B9CC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_4826B0  +
mov edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
cmp edx ecx +
jz loc_484221  +
sub ecx edx +
jnz loc_4843FC  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_484249  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_484259  +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+26h] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_32] dl +
mov [esp+58h+var_31] 0 +
call atoi  +
xor edx edx +
mov ebx eax +
mov eax [ebp+0] +
cmp byte ptr [eax+2] 5Fh +
setz dl  +
lea eax [eax+edx+2] +
mov [ebp+0] eax +
jmp loc_484065  +
test byte ptr [esi+2Ch] 1 +
jnz loc_483FEA  +
mov [esp+58h+arg_0] 0 +
jmp loc_483FF2  +
mov eax ebp +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_484177  +
lea eax [eax+1] +
mov [esp+58h+var_58] eax +
call sub_4742F0  +
mov ecx eax +
mov [esp+58h+var_48] eax +
mov eax [ebp+0] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] eax +
call memcpy  +
mov ecx [esp+58h+var_48] +
mov byte ptr [ecx+edi] 0 +
mov eax [esi] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call sub_4831E0  +
test eax eax +
mov ecx eax +
jz loc_484380  +
cmp byte ptr [eax] 0 +
jz loc_48431A  +
mov edx eax +
mov [esp+58h+var_44] eax +
lea eax [esp+58h+var_30] +
call sub_4826B0  +
mov ecx [esp+58h+var_44] +
mov [esp+58h+var_58] ecx +
call free  +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_58] eax +
call free  +
add [ebp+0] edi +
jmp loc_4840DC  +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
call sub_482110  +
cmp eax 0FFFFFFFFh +
jz loc_484177  +
cmp eax [esi+10h] +
jge loc_484177  +
mov edx [esi+8] +
mov edx [edx+eax*4] +
test edx edx +
jz loc_4840F6  +
cmp byte ptr [edx] 0 +
jz loc_4840F6  +
lea eax [esp+58h+var_30] +
call sub_4826B0  +
jmp loc_4840F6  +
test edi edi +
mov edx [ebp+0] +
jz loc_484322  +
mov ecx edi +
lea eax [esp+58h+var_30] +
call sub_4825F0  +
jmp loc_484322  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+58h+var_2C] +
lea edx [esp+58h+var_30] +
mov eax [esp+58h+var_40] +
call sub_4827E0  +
jmp loc_484221  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_482110  +
cmp eax 0FFFFFFFFh +
jz loc_484394  +
cmp eax [esi+10h] +
jge loc_484394  +
mov edx [esi+8] +
xor ebx ebx +
mov edx [edx+eax*4] +
test edx edx +
jz loc_484065  +
cmp byte ptr [edx] 0 +
jz loc_484065  +
lea eax [esp+58h+var_30] +
call sub_4826B0  +
jmp loc_484065  +
mov eax [esp+58h+var_40] +
call sub_482620  +
jmp loc_484221  +
mov edx offset asc_4B9CCB +
lea eax [esp+58h+var_30] +
call sub_4826B0  +
jmp loc_4841CC  +
***
push edi  +
mov edi 1 +
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov [esp+78h+var_68] eax +
mov [esp+78h+var_60] ecx +
mov [esp+78h+var_44] 0 +
mov [esp+78h+var_48] 0 +
mov [esp+78h+var_4C] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx] 0 +
test edi edi +
setnz dl  +
xor eax eax +
test eax eax +
jnz loc_4846D0  +
test dl dl +
jz loc_4846D0  +
mov ecx [ebx] +
movzx esi byte ptr [ecx] +
lea eax [esi-41h] +
cmp al 34h +
ja loc_4846C2  +
movzx eax al +
jmp ds:off_4B9D44[eax*4]  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_4844E8  +
mov eax esi +
mov esi [esp+78h+var_48] +
cmp [esp+78h+var_4C] esi +
jz loc_4844BD  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_4B9CB1 +
call sub_482680  +
mov ecx [ebx] +
movzx eax byte ptr [ecx] +
movsx eax al +
mov [esp+78h+var_64] ecx +
call sub_4823B0  +
call sub_4823E0  +
mov ecx [esp+78h+var_64] +
test eax eax +
jz loc_4844E8  +
cmp byte ptr [eax] 0 +
jz loc_4844E8  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_482680  +
mov ecx [ebx] +
add ecx 1 +
mov [ebx] ecx +
jmp loc_484464  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_484514  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_4847F6  +
cmp al 2Ah +
jz loc_4847F6  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_4860F0  +
test eax eax +
jz loc_484780  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_4847C3  +
cmp al 5Fh +
jnz loc_484464  +
add edx 1 +
mov [ebx] edx +
jmp loc_484464  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_484572  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_4847D5  +
cmp al 2Ah +
jz loc_4847D5  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_4B9CCF +
call sub_4826B0  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_484787  +
add eax 1 +
mov [ebx] eax +
mov edx offset asc_4B9CD1 +
lea eax [esp+78h+var_4C] +
call sub_4826B0  +
jmp loc_484464  +
add ecx 1 +
mov eax ebx +
mov [ebx] ecx +
lea edx [esp+78h+var_58] +
call sub_482160  +
test eax eax +
jz loc_484780  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+20h] eax +
jle loc_484780  +
mov edx [esi+4] +
lea ebx [esp+78h+var_54] +
mov eax [edx+eax*4] +
mov [esp+78h+var_54] eax +
jmp loc_484464  +
mov eax [esp+78h+var_68] +
add ecx 1 +
mov [ebx] ecx +
test byte ptr [eax] 4 +
jz loc_4847B0  +
test ebp ebp +
mov eax 1 +
cmovz ebp eax +
jmp loc_484464  +
add ecx 1 +
mov edx offset asc_4B9CB3 +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_4826B0  +
mov edx [ebx] +
mov eax 51h +
cmp byte ptr [edx] 51h +
jz loc_484642  +
mov eax [esp+78h+var_68] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_4B9CC8 +
cmovz edx eax +
lea eax [esp+78h+var_4C] +
call sub_482680  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_4846F2  +
lea edx [eax-58h] +
cmp dl 1 +
jbe loc_484880  +
cmp al 74h +
jz loc_484952  +
xor edi edi +
cmp al 51h +
jnz loc_484464  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_483FC0  +
test eax eax +
mov edi eax +
jz loc_484464  +
jmp loc_484739  +
add ecx 1 +
mov edx offset asc_4B9CAD +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_482680  +
test ebp ebp +
mov eax 2 +
cmovz ebp eax +
jmp loc_484464  +
mov eax 1 +
test eax eax +
jz loc_484473  +
nop   +
test edi edi +
jz loc_4848E3  +
mov esi [ebx] +
movzx eax byte ptr [esi] +
sub eax 42h +
cmp al 17h +
ja loc_484A81  +
movzx eax al +
jmp ds:off_4B9E18[eax*4]  +
mov eax ebx +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_58] eax +
mov [esp+78h+var_64] eax +
jz loc_484780  +
mov edx [ebx] +
mov [esp+78h+var_78] edx +
mov [esp+78h+var_5C] edx +
call strlen  +
mov ecx [esp+78h+var_64] +
mov edx [esp+78h+var_5C] +
cmp ecx eax +
jg loc_484780  +
xor eax eax +
test ecx ecx +
jz loc_484735  +
lea eax [esp+78h+var_4C] +
call sub_482620  +
mov edx [ebx] +
mov eax [esp+78h+var_58] +
add eax edx +
mov [ebx] eax +
lea eax [esp+78h+var_4C] +
mov edx offset asc_4B9CAF +
call sub_482680  +
mov eax esi +
cmp al 4Dh +
jnz loc_484817  +
mov edx [ebx] +
movsx eax byte ptr [edx] +
cmp al 56h +
jz loc_4849C1  +
cmp al 75h +
jz loc_4849C1  +
xor esi esi +
cmp al 43h +
jz loc_4849C1  +
lea eax [edx+1] +
mov [ebx] eax +
cmp byte ptr [edx] 46h +
jz loc_484934  +
nop   +
xor edi edi +
jmp loc_484464  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_78] 3 +
call sub_4832F0  +
mov edi eax +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_484590  +
jmp loc_48458B  +
mov edx offset asc_4B9CCD +
lea eax [esp+78h+var_4C] +
call sub_482680  +
jmp loc_4845F2  +
cmp al 5Fh +
jz loc_484538  +
xor edi edi +
lea esi [esi+0] +
jmp loc_484464  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_4B9CAF +
call sub_482680  +
mov edx offset asc_4B9CB3 +
lea eax [esp+78h+var_4C] +
call sub_4826B0  +
jmp loc_484572  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_4B9CAF +
call sub_482680  +
mov edx offset asc_4B9CB3 +
lea eax [esp+78h+var_4C] +
call sub_4826B0  +
jmp loc_484514  +
xor esi esi +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_484780  +
add eax 1 +
mov [ebx] eax +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_484464  +
test esi esi +
jz loc_484464  +
mov eax [esp+78h+var_48] +
cmp [esp+78h+var_4C] eax +
jz loc_484856  +
mov edx offset asc_4B9CB1 +
lea eax [esp+78h+var_4C] +
call sub_4826B0  +
mov eax esi +
call sub_4823E0  +
test eax eax +
jz loc_484464  +
cmp byte ptr [eax] 0 +
jz loc_484464  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_4826B0  +
jmp loc_484464  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
call sub_484420  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
cmp edx ecx +
jz loc_4848A3  +
sub ecx edx +
jnz loc_4849D8  +
test edx edx +
jz loc_484739  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_484739  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
call sub_482110  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_4848E3  +
mov eax [esp+78h+var_68] +
mov edx [eax+40h] +
test edx edx +
jz loc_484B90  +
cmp esi [eax+44h] +
jl loc_484B90  +
mov eax [esp+78h+var_60] +
mov eax [eax] +
test eax eax +
jz loc_48490D  +
mov [esp+78h+var_78] eax +
call free  +
mov eax [esp+78h+var_60] +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov eax [esp+78h+var_4C] +
xor edi edi +
test eax eax +
jz loc_48491F  +
mov [esp+78h+var_78] eax +
call free  +
xor eax eax +
test edi edi +
jz loc_48492C  +
mov al 3 +
test ebp ebp +
cmovnz eax ebp +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_4860F0  +
test eax eax +
jnz loc_484819  +
xor edi edi +
jmp loc_484464  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_4839A0  +
test eax eax +
mov edi eax +
jz loc_4849A8  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
sub ecx edx +
jz loc_4848A3  +
jmp loc_4849D8  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_484464  +
mov [esp+78h+var_78] eax +
call free  +
jmp loc_484464  +
mov [esp+78h+var_64] edx +
call sub_4823B0  +
mov edx [esp+78h+var_64] +
add edx 1 +
mov esi eax +
jmp loc_484770  +
lea eax [esp+78h+var_4C] +
call sub_482620  +
mov edx [esp+78h+var_40] +
jmp loc_4848A3  +
mov ecx [esp+78h+var_60] +
mov edx ebx +
mov eax [esp+78h+var_68] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
call sub_483FC0  +
mov edi eax +
test edi edi +
jz loc_4848E3  +
mov eax [esp+78h+var_4C] +
cmp eax [esp+78h+var_48] +
jz loc_484913  +
mov esi [esp+78h+var_60] +
mov edx offset asc_4B9CB1 +
mov eax esi +
call sub_4826B0  +
mov ecx [esp+78h+var_48] +
mov eax esi +
lea edx [esp+78h+var_4C] +
call sub_4827E0  +
mov eax [esp+78h+var_4C] +
jmp loc_484913  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
lea edx [esp+78h+var_58] +
call sub_482160  +
test eax eax +
jz loc_4848E3  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+14h] eax +
jle loc_4848E3  +
mov edx [esi+0Ch] +
mov edx [edx+eax*4] +
test edx edx +
jnz loc_484BBF  +
jmp loc_484A12  +
mov edi [esp+78h+var_60] +
mov [esp+78h+var_50] 0 +
lea esi [esi+0] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
ja loc_484AD4  +
movzx eax al +
jmp ds:off_4B9E78[eax*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_484ABC  +
mov edx offset asc_4B9CB1 +
mov eax edi +
call sub_4826B0  +
mov edx offset aUnsigned_0 +
mov eax edi +
call sub_4826B0  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
jbe loc_484A9A  +
cmp dl 78h +
mov eax esi +
ja loc_484C3B  +
jmp ds:off_4B9F44[edx*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_484AFE  +
mov edx offset asc_4B9CB1 +
mov eax edi +
call sub_4826B0  +
mov edx offset aSigned +
mov eax edi +
call sub_4826B0  +
mov esi [ebx] +
jmp loc_484A90  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_484B28  +
mov edx offset asc_4B9CB1 +
mov eax edi +
call sub_4826B0  +
mov edx offset a__complex +
mov eax edi +
call sub_4826B0  +
mov esi [ebx] +
jmp loc_484A90  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_484B77  +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_484B61  +
mov edx offset asc_4B9CB1 +
mov eax edi +
call sub_482680  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
movsx eax dl +
call sub_4823B0  +
call sub_4823E0  +
test eax eax +
jz loc_484B77  +
cmp byte ptr [eax] 0 +
jnz loc_484BD6  +
add esi 1 +
mov [ebx] esi +
jmp loc_484A90  +
mov edi 3 +
test ebp ebp +
cmovz ebp edi +
jmp loc_484A0A  +
mov eax ebx +
call sub_482110  +
cmp eax 0FFFFFFFFh +
jz loc_4848E3  +
mov eax [esp+78h+var_68] +
mov eax [eax+40h] +
test eax eax +
jz loc_485018  +
mov edx [eax+esi*4] +
mov edi 1 +
test edx edx +
jz loc_484A12  +
cmp byte ptr [edx] 0 +
jz loc_484A12  +
mov eax [esp+78h+var_60] +
call sub_4826B0  +
jmp loc_484A12  +
mov edx eax +
mov eax edi +
call sub_482680  +
mov esi [ebx] +
jmp loc_484B77  +
add esi 1 +
mov [ebx] esi +
movzx eax byte ptr [eax+1] +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_484C3B  +
lea edi [esi+1] +
mov [ebx] edi +
cmp byte ptr [esi+1] 5Fh +
jnz loc_484F60  +
lea eax [esi+2] +
xor edx edx +
mov [ebx] eax +
jmp loc_484C34  +
cmp cl 5Fh +
jz loc_484FF9  +
mov byte ptr [esp+edx+78h+var_40] cl +
add edx 1 +
lea ecx [eax+1] +
cmp edx 24h +
lea esi [esp+78h+var_40] +
mov [ebx] ecx +
jz loc_48500B  +
mov eax ecx +
movzx ecx byte ptr [eax] +
test cl cl +
jnz loc_484C10  +
xor edi edi +
jmp loc_484B86  +
mov eax [esp+78h+var_68] +
lea esi [esp+78h+var_40] +
call sub_4822B0  +
mov edx ebx +
mov ecx esi +
mov [esp+78h+var_38] 0 +
xor ebx ebx +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
mov edi eax +
mov eax [esp+78h+var_68] +
call sub_485780  +
test eax eax +
jz loc_484CC5  +
mov eax [esp+78h+var_3C] +
mov edx [esp+78h+var_40] +
mov [esp+78h+var_78] edi +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax [esp+78h+var_68] +
cmovz ecx ebx +
add eax 0Ch +
call sub_482540  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_484CB1  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov ecx [esp+78h+var_3C] +
mov edx esi +
mov ebx 1 +
mov eax [esp+78h+var_60] +
call sub_4827E0  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_484CD5  +
mov [esp+78h+var_78] eax +
call free  +
cmp ebx 1 +
sbb edi edi +
not edi  +
and edi 3 +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484CFE  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aLongLong_0 +
mov edi 3 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484D30  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aWchar_t_0 +
mov edi 5 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484D62  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aVoid_2 +
mov edi 3 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_4839A0  +
mov ecx [esp+78h+var_3C] +
lea edx [esp+78h+var_40] +
mov ebx eax +
mov eax [esp+78h+var_60] +
call sub_4827E0  +
jmp loc_484CC5  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484DEA  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aShort_2 +
mov edi 3 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484E1C  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aLongDouble_2 +
mov edi 6 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484E4E  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aLong_2 +
mov edi 3 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484E80  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aInt_1 +
mov edi 3 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484EB2  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aFloat_2 +
mov edi 6 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484EE4  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aDouble_2 +
mov edi 6 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484F16  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aChar_2 +
mov edi 5 +
call sub_4826B0  +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_484F48  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [esp+78h+var_60] +
mov edx offset aBool_0 +
mov edi 4 +
call sub_4826B0  +
jmp loc_484B86  +
lea esi [esp+78h+var_40] +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] edi +
mov [esp+78h+var_78] esi +
call strncpy  +
mov [esp+78h+var_78] edi +
mov byte ptr [esp+78h+var_40+2] 0 +
call strlen  +
mov edx 2 +
cmp eax 2 +
cmovb edx eax +
add edx edi +
mov [ebx] edx +
lea eax [esp+78h+var_50] +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_74] offset asc_4B9D36 +
mov [esp+78h+var_78] esi +
call sscanf  +
mov eax [esp+78h+var_50] +
mov [esp+78h+var_74] offset aIntU_t +
mov [esp+78h+var_78] esi +
mov [esp+78h+var_70] eax +
call sprintf  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_484FD9  +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
cmp byte ptr [esp+78h+var_40] 0 +
mov edi 3 +
jz loc_484B86  +
mov eax [esp+78h+var_60] +
mov edx esi +
call sub_4826B0  +
jmp loc_484B86  +
mov ecx eax +
lea esi [esp+78h+var_40] +
add ecx 1 +
mov byte ptr [esp+edx+78h+var_40] 0 +
mov [ebx] ecx +
jmp loc_484F94  +
cmp byte ptr [eax+1] 5Fh +
jz loc_484FFF  +
xor edi edi +
jmp loc_484B86  +
mov eax [esp+78h+var_60] +
mov edx esi +
mov edi 1 +
call sub_4826F0  +
jmp loc_484A12  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [eax] +
mov [esp+54h+var_40] edx +
mov edx [edx] +
mov [esp+54h+var_44] eax +
mov ebx [esp+54h+arg_0] +
mov [esp+54h+var_3C] ecx +
add edi edx +
test esi 1000h +
jz loc_485060  +
cmp byte ptr [edi] 58h +
jz loc_4851B5  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
test ebp 1800h +
jz loc_4850BB  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_4850BB  +
lea eax [eax+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
jz loc_48510A  +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_38] +
add eax ecx +
cmp edi eax +
jz loc_48550C  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
and ebp 2100h +
jz loc_48510A  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__tm__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_4853E1  +
lea eax [esi+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
jz loc_48510A  +
mov edx [esp+54h+var_30] +
add eax edx +
cmp edi eax +
jz loc_4851A0  +
mov eax [esp+54h+var_40] +
cmp [esp+54h+var_3C] 0Ah +
mov edx [eax] +
jg loc_485150  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_485468  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_48513E  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_4825F0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_40] +
add edx [esp+54h+var_3C] +
mov [eax] edx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_485117  +
cmp byte ptr [edx+9] 4Eh +
jnz loc_485117  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_485117  +
mov [esp+54h+var_50] eax +
mov [esp+54h+var_54] offset byte_492FD4 +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_485117  +
mov edx offset aAnonymous +
mov eax ebx +
call sub_4826B0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_48513E  +
cmp byte ptr [edx] 5Fh +
jnz loc_48510A  +
add edx 1 +
mov [esp+54h+var_30] edx +
jmp loc_48551C  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] 3Ch +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_485440  +
sub eax edx +
cmp [esp+54h+var_3C] eax +
mov ecx eax +
jle loc_485440  +
test eax eax +
jnz loc_485450  +
mov eax [esp+54h+var_3C] +
mov edi [esp+54h+var_40] +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
lea eax [edx+eax+1] +
mov [edi] eax +
mov eax [esp+54h+var_44] +
mov [esp+54h+var_2C] 0 +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_485482  +
mov edi [esp+54h+var_44] +
mov eax esi +
mov edx (offset asc_4B9CC4+2) +
or eax 1 +
mov [edi] eax +
mov eax ebx +
call sub_4826B0  +
mov edi [esp+54h+var_40] +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_485262  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [edi] +
movzx ecx byte ptr [eax] +
cmp cl 53h +
jz loc_485282  +
jle loc_485301  +
cmp cl 54h +
jz loc_485390  +
cmp cl 55h +
nop   +
jnz loc_4852B0  +
cmp cl 53h +
jnz loc_485474  +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
cmp al 4Eh +
jz loc_4854A1  +
cmp al 50h +
jz loc_4854B9  +
cmp al 4Dh +
jz loc_4856A2  +
lea esi [esi+0] +
mov eax ebx +
mov edx offset asc_4B9CC4 +
call sub_4826B0  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_4852E4  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [esp+54h+var_40] +
mov eax [eax] +
cmp byte ptr [eax] 5Fh +
jz loc_485493  +
mov eax [esp+54h+var_44] +
mov [eax] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 41h +
jnz loc_4852B0  +
add eax 1 +
mov [edi] eax +
mov eax edi +
call sub_4820C0  +
test eax eax +
mov ebp eax +
jle loc_4852B0  +
mov edx offset asc_4B9CAD +
lea eax [esp+54h+var_2C] +
call sub_4826B0  +
lea eax [ebp+1] +
mov [esp+54h+var_54] eax +
call sub_4742F0  +
mov ecx eax +
mov [esp+54h+var_3C] eax +
mov eax [edi] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] eax +
call memcpy  +
mov ecx [esp+54h+var_3C] +
mov eax [esp+54h+var_44] +
mov byte ptr [ecx+ebp] 0 +
mov eax [eax] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_50] eax +
call sub_4831E0  +
test eax eax +
mov ecx eax +
jz loc_4856B8  +
cmp byte ptr [eax] 0 +
jnz loc_485762  +
mov [esp+54h+var_54] ecx +
call free  +
mov eax [esp+54h+var_3C] +
add [edi] ebp +
mov [esp+54h+var_54] eax +
call free  +
jmp loc_4853AC  +
add eax 1 +
mov edx edi +
mov [edi] eax +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
call sub_484420  +
test eax eax +
jz loc_4852B0  +
mov ecx [esp+54h+var_28] +
mov eax ebx +
lea edx [esp+54h+var_2C] +
call sub_4827E0  +
mov eax [edi] +
movzx eax byte ptr [eax] +
cmp al 5Fh +
jz loc_4852B0  +
test al al +
jz loc_4852B0  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_4826B0  +
jmp loc_48523A  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__ps__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_4850E5  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_4850E5  +
mov [esp+54h+var_50] offset a__s +
mov [esp+54h+var_54] edx +
call strstr  +
test eax eax +
mov esi eax +
jz loc_48510A  +
lea eax [eax+3] +
jmp loc_4850E8  +
mov ecx [esp+54h+var_3C] +
test ecx ecx +
jz loc_4851EB  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_4825F0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_44] +
mov esi [eax] +
jmp loc_4851EB  +
mov dword ptr [eax+34h] 0 +
jmp loc_485125  +
cmp cl 55h +
jz loc_48528B  +
jmp loc_4852B0  +
mov eax [ebx+4] +
mov edi [esp+54h+var_44] +
sub eax [ebx] +
mov [edi+34h] eax +
jmp loc_48521F  +
mov ebx [esp+54h+var_40] +
add eax 1 +
mov [ebx] eax +
jmp loc_4852F3  +
mov edx offset asc_4B9C95 +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_3C] ecx +
call sub_4826B0  +
mov edx [edi] +
mov ecx [esp+54h+var_3C] +
lea eax [edx+1] +
mov [edi] eax +
movzx eax byte ptr [edx+1] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_4852B0  +
mov ebp ecx +
jmp loc_4854F3  +
mov eax [edi] +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_485744  +
test al al +
mov ds:byte_4C15EC al +
jz loc_4854D7  +
mov edx offset byte_4C15EC +
lea eax [esp+54h+var_2C] +
call sub_4826B0  +
jmp loc_4854D7  +
cmp byte ptr [ecx] 5Fh +
jnz loc_4850B5  +
add ecx 1 +
mov [esp+54h+var_30] ecx +
mov eax [esp+54h+var_40] +
mov ecx esi +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_2C] 0 +
mov edx [eax] +
sub ecx edx +
jz loc_485547  +
mov eax ebx +
call sub_4825F0  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_485733  +
mov ecx [esp+54h+var_44] +
mov edx 4B9CC6h +
mov eax [ecx] +
mov [esp+54h+var_38] eax +
or eax 1 +
mov [ecx] eax +
mov eax ebx +
call sub_4826B0  +
cmp edi [esp+54h+var_30] +
ja loc_48563F  +
jmp loc_4856E0  +
mov eax [esp+54h+var_44] +
add esi 1 +
mov edx ebp +
lea ecx [esp+54h+var_20] +
mov [esp+54h+var_30] esi +
call sub_484420  +
test eax eax +
jz loc_4856E0  +
mov edx offset asc_4B9CAF +
lea eax [esp+54h+var_2C] +
call sub_4826B0  +
mov ecx [esp+54h+var_1C] +
lea eax [esp+54h+var_2C] +
lea edx [esp+54h+var_20] +
call sub_4827E0  +
mov eax [esp+54h+var_20] +
test eax eax +
jz loc_4855E5  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_1C] 0 +
mov [esp+54h+var_18] 0 +
mov [esp+54h+var_20] 0 +
lea eax [esp+54h+var_2C] +
mov edx offset asc_4B9CB3 +
call sub_4826B0  +
mov eax [esp+54h+var_30] +
cmp byte ptr [eax] 4Ch +
jnz loc_4856E0  +
add eax 1 +
mov [esp+54h+var_30] eax +
lea edx [esp+54h+var_2C] +
mov eax ebp +
call sub_482730  +
test eax eax +
jz loc_4856E0  +
mov ecx [esp+54h+var_28] +
lea edx [esp+54h+var_2C] +
mov eax ebx +
call sub_4827E0  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_4826B0  +
cmp edi [esp+54h+var_30] +
jbe loc_4856E0  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_485667  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov esi [esp+54h+var_30] +
movzx eax byte ptr [esi] +
cmp al 4Ch +
jz loc_4856D0  +
cmp al 58h +
jz loc_485580  +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
mov edx ebp +
call sub_484420  +
test eax eax +
jz loc_4856E0  +
cmp esi [esp+54h+var_30] +
jnz loc_48561A  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
jmp loc_485148  +
mov edx offset a2147483648 +
lea eax [esp+54h+var_2C] +
call sub_4826B0  +
add dword ptr [edi] 1 +
jmp loc_4853AC  +
mov edx [edi] +
mov ecx ebp +
lea eax [esp+54h+var_2C] +
call sub_4825F0  +
jmp loc_48537E  +
add esi 1 +
mov [esp+54h+var_30] esi +
jmp loc_485607  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_485708  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
cmp edi [esp+54h+var_30] +
ja loc_485712  +
sub dword ptr [ebx+4] 1 +
mov eax ebx +
mov edx offset asc_4B9CC4 +
call sub_4826B0  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_48513E  +
mov eax [ebx+4] +
mov ecx [esp+54h+var_44] +
sub eax [ebx] +
mov [ecx+34h] eax +
jmp loc_485555  +
mov ecx ebp +
cmp cl 55h +
jnz loc_4853AC  +
mov edx offset aU +
lea eax [esp+54h+var_2C] +
call sub_4826B0  +
jmp loc_4853AC  +
mov edx eax +
mov [esp+54h+var_38] eax +
lea eax [esp+54h+var_2C] +
call sub_4826B0  +
mov ecx [esp+54h+var_38] +
jmp loc_485376  +
***
push edi  +
mov edi eax +
push esi  +
mov eax edx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_4857D2  +
mov eax [ebx] +
mov [esp+28h+var_28] eax +
call strlen  +
xor edx edx +
cmp esi eax +
jle loc_4857B5  +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebp +
mov edx ebx +
mov eax edi +
mov ecx esi +
call sub_485030  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jle loc_485886  +
cmp al 6Fh +
jz loc_485930  +
cmp ebp 4 +
jle loc_485886  +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] offset aType_0 +
mov [esp] ebx +
call memcmp  +
test eax eax +
jnz loc_485886  +
movsx eax byte ptr [ebx+4] +
add ebx 5 +
mov dword ptr [esp] offset byte_492FD4 +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_485886  +
lea ecx [esp+30h] +
mov eax esi +
lea edx [esp+2Ch] +
mov [esp+2Ch] ebx +
call sub_484420  +
test eax eax +
jnz loc_4858B2  +
xor ebx ebx +
mov eax esi +
call sub_4821F0  +
add esp 9Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jg loc_485833  +
nop   +
jmp loc_485886  +
***
mov eax [esp+0B4h] +
mov ebx 1 +
mov [esp] eax +
call strlen  +
mov edx 20h +
add eax [esp+0B4h] +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov [eax+8] dx +
mov edi [esp+30h] +
mov eax [esp+34h] +
mov [esp+4] edi +
sub eax edi +
mov [esp+8] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call strncat  +
test edi edi +
jz loc_485888  +
mov [esp] edi +
call free  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
jmp loc_485888  +
***
cmp byte ptr [ebx+1] 70h +
jnz loc_485833  +
movsx eax byte ptr [ebx+2] +
mov dword ptr [esp] offset byte_492FD4 +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_485833  +
cmp ebp 9 +
jle loc_485B10  +
lea eax [ebx+3] +
mov dword ptr [esp+8] 7 +
mov dword ptr [esp+4] offset aAssign_ +
mov [esp] eax +
call memcmp  +
test eax eax +
jnz loc_485B10  +
lea eax [ebp-0Ah] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+0Ah] +
mov ebp offset off_4BA980 +
mov [esp+1Ch] eax +
jmp loc_4859AF  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_485886  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax [esp+18h] +
jnz loc_4859A0  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_4859A0  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_4BA984[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
mov eax [esp+0B4h] +
mov [esp] eax +
call strlen  +
mov edx [esp+0B4h] +
mov ecx 3Dh +
mov [edx+eax] cx +
jmp loc_485888  +
***
lea eax [ebx+2] +
mov ebp offset off_4BA980 +
xor edi edi +
mov [esp+18h] eax +
jmp loc_485A9F  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_485886  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax 2 +
jnz loc_485A90  +
mov eax [esp+18h] +
mov dword ptr [esp+8] 2 +
mov [esp] ebx +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_485A90  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_4BA984[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
jmp loc_485888  +
***
lea eax [ebp-3] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+3] +
mov ebp offset off_4BA980 +
mov [esp+1Ch] eax +
jmp loc_485B36  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_485886  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp [esp+18h] eax +
jnz loc_485B27  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_485B27  +
jmp loc_485ACB  +
***
cmp byte ptr [ebx+3] 70h +
lea esi [esi+0] +
jnz loc_485A4C  +
add ebx 4 +
jmp loc_48586F  +
***
push edi  +
mov edi edx +
push esi  +
mov edx offset aTemplate +
push ebx  +
mov esi 1 +
sub esp 2Ch +
mov [esp+38h+var_2C] eax +
mov eax ecx +
call sub_4826B0  +
lea edx [esp+38h+var_28] +
mov eax edi +
call sub_482160  +
test eax eax +
jz loc_485C20  +
mov eax [esp+38h+var_28] +
xor ebx ebx +
test eax eax +
jg loc_485C9D  +
lea esi [esi+0] +
mov eax [ebp+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_485CD1  +
mov eax ebp +
mov edx offset aClass +
call sub_4826B0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-4+arg_8] +
lea ecx [esp-4+arg_10] +
mov edx edi +
call sub_484420  +
test eax eax +
mov esi eax +
jnz loc_485CE2  +
mov eax [esp-4+arg_10] +
test eax eax +
jz loc_485C84  +
mov [esp+0] eax +
call free  +
mov [esp-4+arg_14] 0 +
mov [esp-4+arg_18] 0 +
mov [esp-4+arg_10] 0 +
test esi esi +
jz loc_485CC2  +
add ebx 1 +
cmp [esp-4+arg_C] ebx +
jle loc_485C20  +
mov edx offset asc_4B9CBE +
mov eax ebp +
call sub_4826B0  +
mov edx [edi] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_485CF6  +
cmp al 7Ah +
jnz loc_485C43  +
mov eax [esp-4+arg_8] +
add edx 1 +
mov ecx ebp +
mov [edi] edx +
mov edx edi +
call sub_485BE0  +
mov esi eax +
test esi esi +
jnz loc_485C88  +
mov eax [ebp+4] +
xor esi esi +
cmp byte ptr [eax-1] 3Eh +
jnz loc_485C2D  +
mov edx offset asc_4B9CB1 +
mov eax ebp +
call sub_4826B0  +
jmp loc_485C2D  +
mov ecx [esp-4+arg_14] +
lea edx [esp-4+arg_10] +
mov eax ebp +
call sub_4827E0  +
jmp loc_485C5C  +
add edx 1 +
mov eax ebp +
mov [edi] edx +
mov edx offset aClass_0 +
call sub_4826B0  +
jmp loc_485C88  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov ebp [edx] +
mov eax [eax+50h] +
test eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
jg loc_485D71  +
mov eax [ebx] +
cmp byte ptr [eax] 6Eh +
jnz loc_485DD3  +
add eax 1 +
mov [ebx] eax +
mov eax ebx +
call sub_4820C0  +
test eax eax +
mov [edi+50h] eax +
jle loc_485DB5  +
cmp eax 9 +
jg loc_485DC1  +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
mov edx [edi+4Ch] +
sub eax 1 +
mov [edi+50h] eax +
test edx edx +
jz loc_485DB5  +
mov ecx [edx+4] +
mov eax esi +
mov ebx 1 +
call sub_4827E0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ch +
call sub_4742F0  +
mov [edi+4Ch] eax +
mov ecx eax +
mov edx ebx +
mov eax edi +
call sub_484420  +
test eax eax +
jnz loc_485E14  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 5Fh +
jnz loc_485DB5  +
add ebp 1 +
mov [ebx] ebp +
jmp loc_485D22  +
mov ecx [edi+4Ch] +
test ecx ecx +
jz loc_485D97  +
mov eax [ecx] +
test eax eax +
jz loc_485DA8  +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call free  +
mov ecx [esp+24h+var_18] +
mov edx ebx +
mov eax edi +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx] 0 +
mov ecx [edi+4Ch] +
call sub_484420  +
test eax eax +
jz loc_485DB5  +
mov edx [edi+4Ch] +
mov eax esi +
mov ecx [edx+4] +
call sub_4827E0  +
mov eax [edi+48h] +
mov ecx [ebx] +
mov ebx 1 +
test eax eax +
jnz loc_485DB7  +
sub ecx ebp +
mov edx ebp +
mov eax edi +
call sub_482B00  +
jmp loc_485DB7  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
test byte ptr [eax] 1 +
jnz loc_486061  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
xor esi esi +
cmp al 5Fh +
jz loc_485F85  +
test al al +
jz loc_485F85  +
cmp al 65h +
jz loc_485F85  +
cmp al 54h +
jz loc_485E86  +
cmp al 4Eh +
lea esi [esi+0] +
jnz loc_485FC4  +
lea eax [edx+1] +
mov [ebp+0] eax +
cmp byte ptr [edx] 4Eh +
jz loc_486028  +
mov [esp+48h+var_30] 1 +
test dword ptr [ebx] 3800h +
jz loc_485EAF  +
cmp dword ptr [ebx+20h] 9 +
jg loc_48608C  +
lea edx [esp+48h+var_2C] +
mov eax ebp +
call sub_482160  +
test eax eax +
jz loc_486040  +
mov eax [esp+48h+var_2C] +
test dword ptr [ebx] 3C00h +
jz loc_485ED5  +
sub eax 1 +
mov [esp+48h+var_2C] eax +
test eax eax +
js loc_486040  +
cmp [ebx+20h] eax +
jg loc_485EF4  +
jmp loc_486040  +
mov eax [esp+48h+var_24] +
test eax eax +
jnz loc_485F49  +
mov esi 1 +
mov eax [ebx+50h] +
test eax eax +
jle loc_485F70  +
mov eax [ebx+4] +
test esi esi +
mov edx [esp+48h+var_2C] +
mov eax [eax+edx*4] +
mov [esp+48h+var_28] eax +
jz loc_485F16  +
test byte ptr [ebx] 1 +
jnz loc_485FB3  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_28] +
call sub_485D10  +
test eax eax +
jz loc_486040  +
test byte ptr [ebx] 1 +
jz loc_485EE7  +
mov ecx [esp+48h+var_20] +
mov eax edi +
lea edx [esp+48h+var_24] +
call sub_4827E0  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_485EEF  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
jmp loc_485EEF  +
sub [esp+48h+var_30] 1 +
jns loc_485EFB  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_485E66  +
mov ecx [ebx+50h] +
test ecx ecx +
jg loc_485E76  +
cmp al 65h +
jz loc_4860B2  +
test byte ptr [ebx] 1 +
jz loc_485FA9  +
mov edx offset asc_4B9CB3 +
mov eax edi +
call sub_4826B0  +
mov eax 1 +
jmp loc_486042  +
mov edx offset asc_4B9CBE +
mov eax edi +
call sub_4826B0  +
jmp loc_485F16  +
test esi esi +
jz loc_485FD6  +
test byte ptr [ebx] 1 +
nop   +
lea esi [esi+0] +
jnz loc_4860A1  +
lea ecx [esp+48h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_485D10  +
test eax eax +
jz loc_486040  +
test byte ptr [ebx] 1 +
jnz loc_486050  +
mov eax [esp+48h+var_24] +
mov esi 1 +
test eax eax +
jz loc_485F77  +
mov [esp+48h+var_48] eax +
call free  +
mov edx [ebp+0] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
movzx eax byte ptr [edx] +
jmp loc_485F7D  +
lea edx [esp+48h+var_30] +
mov eax ebp +
call sub_482160  +
test eax eax +
jnz loc_485E9D  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+48h+var_20] +
lea edx [esp+48h+var_24] +
mov eax edi +
call sub_4827E0  +
jmp loc_485FEC  +
mov edx offset asc_4B9CAF +
mov eax ecx +
call sub_4826B0  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_485E5C  +
mov edx offset aVoid_2 +
mov eax edi +
call sub_4826B0  +
jmp loc_485E56  +
mov eax ebp +
call sub_4820C0  +
test eax eax +
mov [esp+48h+var_2C] eax +
jg loc_485EC6  +
jmp loc_486040  +
mov edx offset asc_4B9CBE +
mov eax edi +
call sub_4826B0  +
jmp loc_485FD6  +
add edx 1 +
test byte ptr [ebx] 1 +
mov [ebp+0] edx +
jz loc_485FA9  +
test esi esi +
jnz loc_4860D6  +
mov edx offset a____1 +
mov eax edi +
call sub_4826B0  +
jmp loc_485F98  +
mov edx 4BA136h +
mov eax edi +
call sub_4826B0  +
jmp loc_4860C5  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov ebp [eax+4Ch] +
add dword ptr [eax+48h] 1 +
mov edi [eax+50h] +
mov dword ptr [eax+4Ch] 0 +
mov dword ptr [eax+50h] 0 +
call sub_485E40  +
mov esi [ebx+4Ch] +
test esi esi +
jz loc_48615A  +
mov edx [esi] +
test edx edx +
jz loc_48614A  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 0 +
mov esi [ebx+4Ch] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov [ebx+4Ch] ebp +
mov [ebx+50h] edi +
sub dword ptr [ebx+48h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edx [edx] +
mov esi [esp+48h+arg_0] +
mov ecx esi +
sub ecx edx +
jnz loc_486370  +
mov eax ebx +
mov edx 1 +
call sub_482580  +
mov eax [ebx+4] +
mov byte ptr [eax] 0 +
lea eax [esi+2] +
test dword ptr [ebp+0] 1000h +
mov [edi] eax +
jz loc_4861B7  +
cmp byte ptr [esi+2] 58h +
jz loc_4863B8  +
test dword ptr [ebp+0] 3C00h +
mov edx [ebx] +
jz loc_4861EA  +
mov edi offset a__ct_0 +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_486380  +
mov edi offset a__dt_0 +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_4863A4  +
mov eax [ebx+4] +
movzx edi byte ptr [edx] +
mov esi eax +
sub esi edx +
cmp esi 2 +
mov [esp+48h+var_38] eax +
jle loc_4862A4  +
mov eax edi +
cmp al 6Fh +
jz loc_4863E0  +
cmp esi 4 +
jle loc_4862A4  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] 4 +
mov [esp+48h+var_44] offset aType_0 +
mov [esp+48h+var_34] edx +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_4862A4  +
movsx eax byte ptr [edx+4] +
mov [esp+48h+var_48] offset byte_492FD4 +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_4862A4  +
add edx 5 +
mov [esp+48h+var_28] edx +
lea ecx [esp+48h+var_24] +
mov eax ebp +
lea edx [esp+48h+var_28] +
call sub_484420  +
test eax eax +
jnz loc_4864D0  +
mov eax [ebx+4] +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
nop   +
lea esi [esi+0] +
mov ecx [esp+48h+var_38] +
cmp edx ecx +
jz loc_4863D0  +
sub ecx edx +
mov eax 1 +
cmp ecx 1 +
jz loc_486394  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 5Fh +
jnz loc_486280  +
cmp byte ptr [edx+1] 5Fh +
jnz loc_486280  +
movzx eax byte ptr [edx+2] +
cmp al 6Fh +
jz loc_4865AF  +
movzx ecx al +
test ds:byte_4B8120[ecx+ecx] 8 +
jz loc_486280  +
movzx ecx byte ptr [edx+3] +
test ds:byte_4B8120[ecx+ecx] 8 +
jz loc_486280  +
cmp byte ptr [edx+4] 0 +
jnz loc_4865CE  +
lea eax [edx+2] +
mov edi offset off_4BA980 +
mov [esp+48h+var_30] ebx +
xor esi esi +
mov ebx eax +
mov [esp+48h+var_34] edx +
jmp loc_486306  +
add esi 1 +
add edi 0Ch +
cmp esi 4Fh +
jz loc_486657  +
mov ebp [edi] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 2 +
jnz loc_4862F7  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] ebp +
call memcmp  +
test eax eax +
jnz loc_4862F7  +
mov edx [esp+48h+var_34] +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4826B0  +
lea eax [esi+esi*2] +
mov edx ds:off_4BA984[eax*4] +
test edx edx +
jz loc_486272  +
cmp byte ptr [edx] 0 +
jz loc_486272  +
mov eax ebx +
call sub_4826B0  +
jmp loc_486272  +
mov eax ebx +
call sub_4825F0  +
jmp loc_48618D  +
add dword ptr [ebp+28h] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [edx] 2Eh +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [ebp+2Ch] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] ebx +
xor ecx ecx +
mov edx edi +
mov eax ebp +
call sub_485030  +
jmp loc_4861B7  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 70h +
jnz loc_48620B  +
movsx eax byte ptr [edx+2] +
mov [esp+48h+var_48] offset byte_492FD4 +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_48620B  +
cmp esi 9 +
jle loc_486530  +
lea eax [edx+3] +
mov [esp+48h+var_40] 7 +
mov [esp+48h+var_44] offset aAssign_ +
mov [esp+48h+var_48] eax +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_486530  +
lea eax [edx+0Ah] +
sub esi 0Ah +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_486460  +
add edi 1 +
cmp edi 4Fh +
jz loc_4865C5  +
lea eax [edi+edi*2] +
mov ebp ds:off_4BA980[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_486454  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_486454  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4826B0  +
mov edx ds:off_4BA984[edi] +
test edx edx +
jz loc_4864C1  +
cmp byte ptr [edx] 0 +
jnz loc_486660  +
mov edx offset asc_4BA1A3 +
jmp loc_48635F  +
mov eax [ebx] +
mov edx offset aOperator_2 +
mov [ebx+4] eax +
mov eax ebx +
call sub_4826B0  +
mov ecx [esp+48h+var_20] +
mov eax ebx +
lea edx [esp+48h+var_24] +
call sub_4827E0  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_486272  +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebx+4] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
jmp loc_486280  +
lea eax [edx+3] +
sub esi 3 +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_48654E  +
add edi 1 +
cmp edi 4Fh +
jz loc_4865C5  +
lea eax [edi+edi*2] +
mov ebp ds:off_4BA980[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_486546  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_486546  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4826B0  +
mov edx ds:off_4BA984[edi] +
test edx edx +
jnz loc_486356  +
jmp loc_486272  +
cmp byte ptr [edx+3] 70h +
jnz loc_4862BC  +
add edx 4 +
lea esi [esi+0] +
jmp loc_486257  +
mov edx [esp+48h+var_30] +
jmp loc_486280  +
cmp al 61h +
jnz loc_486280  +
cmp byte ptr [edx+5] 0 +
jnz loc_486280  +
mov esi offset off_4BA980 +
xor edi edi +
lea eax [edx+2] +
mov [esp+48h+var_30] ebx +
mov ebp eax +
mov ebx esi +
mov [esp+48h+var_34] edx +
jmp loc_486603  +
add edi 1 +
add ebx 0Ch +
cmp edi 4Fh +
jz loc_486657  +
mov esi [ebx] +
mov [esp+48h+var_48] esi +
call strlen  +
cmp eax 3 +
jnz loc_4865F8  +
mov [esp+48h+var_40] 3 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] esi +
call memcmp  +
test eax eax +
jnz loc_4865F8  +
mov edx [esp+48h+var_34] +
imul edi edi +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_4826B0  +
mov edx ds:off_4BA984[edi] +
test edx edx +
jnz loc_486356  +
jmp loc_486272  +
mov edx [esp+48h+var_34] +
jmp loc_486280  +
mov eax ebx +
call sub_4826B0  +
jmp loc_4864C1  +
***
push edi  +
push esi  +
mov esi 1 +
push ebx  +
mov ebx eax +
sub esp 6Ch +
lea eax [eax+20h] +
mov [esp+78h+var_54] eax +
lea eax [ebx+4] +
mov [esp+78h+var_5C] ecx +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_4C] 0 +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 0 +
mov [esp+78h+var_50] eax +
mov edi [ebp+0] +
movsx eax byte ptr [edi] +
test al al +
jz loc_486CC5  +
lea edx [eax-30h] +
cmp dl 45h +
ja loc_486B56  +
movzx edx dl +
jmp ds:off_4BA1B8[edx*4]  +
mov eax [esp+78h+var_60] +
lea ecx [esp+78h+var_30] +
mov edx ebp +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_34] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
lea edi [esp+78h+var_3C] +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_30] 0 +
call sub_4839A0  +
test eax eax +
mov esi eax +
jnz loc_486C90  +
test byte ptr [ebx] 4 +
mov eax offset asc_4B9CC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_30] +
call sub_4826B0  +
mov edx [esp+78h+var_30] +
mov ecx [esp+78h+var_2C] +
cmp edx ecx +
jz loc_48676E  +
sub ecx edx +
jnz loc_486D80  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_486D56  +
test byte ptr [ebx+28h] 1 +
jnz loc_486B90  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_486B90  +
mov eax [esp+78h+var_3C] +
test eax eax +
jz loc_4867B4  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_34] 0 +
mov [esp+78h+var_3C] 0 +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_4867DC  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
test esi esi +
setnz al  +
mov edi eax +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_486889  +
test dword ptr [ebx] 300h +
jz loc_486814  +
mov ecx [esp+78h+var_4C] +
test ecx ecx +
jnz loc_486D90  +
test dword ptr [ebx] 1000h +
jz loc_4868C6  +
lea eax [edi+1] +
mov [ebp+0] eax +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_48687A  +
add edi 2 +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_48684D  +
jmp loc_48687A  +
add edi 1 +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_48687A  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_486840  +
jmp loc_48687A  +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [ebp+0] edi +
mov [esp+78h+var_60] eax +
mov dword ptr [ebx+30h] 1 +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
mov ecx edi +
test cl cl +
jz loc_4868BE  +
test al al +
jz loc_4868BE  +
test dword ptr [ebx] 2C00h +
jnz loc_486BA8  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_485E40  +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 1 +
mov esi eax +
test esi esi +
jnz loc_4866B2  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_483FC0  +
test eax eax +
mov esi eax +
jz loc_486B2E  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_486B2E  +
sub ecx edi +
mov edx edi +
mov eax ebx +
call sub_482B00  +
jmp loc_486B2E  +
test dword ptr [ebx] 1000h +
jz loc_4868C6  +
add edi 1 +
jmp loc_486927  +
test al al +
jz loc_486936  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
mov edx edi +
add edi 1 +
cmp al 5Fh +
jnz loc_486923  +
test al al +
jz loc_4868C6  +
add edx 1 +
mov [ebp+0] edx +
jmp loc_48687A  +
call sub_4823B0  +
or [ebx+38h] eax +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [esp+78h+var_60] eax +
mov [ebp+0] edi +
jmp loc_48687A  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_484420  +
test eax eax +
mov esi eax +
jz loc_4867DC  +
test byte ptr [ebx] 4 +
mov eax offset asc_4B9CC8 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_24] +
call sub_4826B0  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_4869A9  +
sub ecx edx +
jnz loc_486E48  +
test edx edx +
jz loc_4867DC  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_4867DC  +
mov eax [esp+78h+var_60] +
mov dword ptr [ebx+34h] 0FFFFFFFFh +
mov [esp+78h+var_1C] 0 +
mov [esp+78h+var_20] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
mov [esp+78h+var_24] 0 +
call sub_4822B0  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov edi eax +
mov eax ebx +
call sub_485780  +
test eax eax +
jnz loc_486BC0  +
mov edx [esp+78h+var_24] +
xor edi edi +
xor esi esi +
test edx edx +
jz loc_486A1E  +
mov [esp+78h+var_78] edx +
call free  +
test esi esi +
jz loc_486A30  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jz loc_486E23  +
test dword ptr [ebx] 2300h +
jz loc_486CB0  +
mov eax [ebp+0] +
cmp byte ptr [eax] 46h +
jz loc_486CB0  +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_486889  +
test dword ptr [ebx] 300h +
jz loc_4868C6  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_4839A0  +
test byte ptr [ebx+28h] 1 +
mov esi eax +
mov eax 1 +
cmovnz eax [esp+78h+var_4C] +
add dword ptr [ebp+0] 1 +
mov [esp+78h+var_4C] eax +
jmp loc_48687A  +
add edi 1 +
mov [ebp+0] edi +
test dword ptr [ebx] 3C00h +
jnz loc_486D44  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_485E40  +
test eax eax +
mov esi eax +
jz loc_4868C6  +
test dword ptr [ebx] 2100h +
jz loc_486AED  +
mov eax [ebp+0] +
cmp byte ptr [eax] 5Fh +
jz loc_486E78  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
jmp loc_48688F  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_483FC0  +
mov esi eax +
test dword ptr [ebx] 300h +
jnz loc_4867DC  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_486889  +
test dword ptr [ebx] 300h +
jz loc_4868C6  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_485E40  +
mov [esp+78h+var_58] 1 +
mov esi eax +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_486889  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_4827E0  +
sub dword ptr [ebx+28h] 1 +
jmp loc_48678C  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_482440  +
jmp loc_48689F  +
test byte ptr [ebx+28h] 1 +
mov esi [esp+78h+var_20] +
jnz loc_486BD0  +
test byte ptr [ebx+2Ch] 1 +
jz loc_486C03  +
mov ecx [ebx+34h] +
mov edx [esp+78h+var_24] +
lea eax [ecx+1] +
cmp eax 1 +
jbe loc_486E71  +
add ecx edx +
mov [esp+78h+var_20] ecx +
cmp edx ecx +
jz loc_486BF5  +
sub ecx edx +
jnz loc_486DF9  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_486E5A  +
sub dword ptr [ebx+28h] 1 +
mov edx [esp+78h+var_24] +
mov ecx esi +
mov eax 0 +
mov [esp+78h+var_20] esi +
sub ecx edx +
cmp esi edx +
cmovz ecx eax +
mov eax ebx +
call sub_482320  +
mov eax [esp+78h+var_20] +
mov esi 1 +
mov edx [esp+78h+var_24] +
mov [esp+78h+var_78] edi +
mov edi 1 +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax 0 +
cmovz ecx eax +
lea eax [ebx+0Ch] +
call sub_482540  +
mov eax offset asc_4B9CC8 +
mov edx offset a_ +
test byte ptr [ebx] 4 +
cmovz edx eax +
mov eax [esp+78h+var_5C] +
call sub_482680  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_486A12  +
sub ecx edx +
jz loc_486A12  +
mov eax [esp+78h+var_5C] +
call sub_482620  +
mov edx [esp+78h+var_24] +
jmp loc_486A12  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_486741  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_482B00  +
jmp loc_486741  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
jmp loc_486889  +
mov edx [esp+78h+var_58] +
test edx edx +
jnz loc_486E16  +
test esi esi +
jz loc_486E16  +
test dword ptr [ebx] 300h +
jnz loc_486E07  +
test byte ptr [ebx] 1 +
jz loc_4868C8  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_486E35  +
mov eax [ebx+38h] +
test eax eax +
jz loc_4868C8  +
mov ecx [esp+78h+var_5C] +
mov edi [ecx+4] +
cmp [ecx] edi +
jz loc_486D1E  +
mov eax ecx +
mov edx offset asc_4B9CB1 +
call sub_4826B0  +
mov eax [ebx+38h] +
call sub_4823E0  +
test eax eax +
jz loc_4868C8  +
cmp byte ptr [eax] 0 +
jz loc_4868C8  +
mov edx eax +
mov eax [esp+78h+var_5C] +
call sub_4826B0  +
jmp loc_4868C8  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_482440  +
jmp loc_486AC2  +
mov edx offset asc_4B9CCB +
mov eax edi +
call sub_482680  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_4827E0  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_486778  +
mov eax [esp+78h+var_5C] +
call sub_482620  +
jmp loc_48676E  +
add edi 1 +
mov edx ebp +
mov [ebp+0] edi +
lea ecx [esp+78h+var_24] +
mov eax ebx +
call sub_484420  +
mov edx [esp+78h+var_24] +
cmp edx [esp+78h+var_20] +
mov esi eax +
jz loc_486DD1  +
mov edx offset asc_4B9CB1 +
lea eax [esp+78h+var_24] +
call sub_4826B0  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_486DD1  +
sub ecx edx +
jnz loc_486ED9  +
test edx edx +
jz loc_486DDD  +
mov [esp+78h+var_78] edx +
call free  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_4C] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_486889  +
mov eax [esp+78h+var_5C] +
call sub_482620  +
jmp loc_486BF5  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_485E40  +
mov esi eax +
test esi esi +
jnz loc_486CE5  +
jmp loc_4868C8  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_482B00  +
jmp loc_486A30  +
mov eax [esp+78h+var_5C] +
mov edx offset aStatic +
call sub_4826B0  +
jmp loc_486CF9  +
mov eax [esp+78h+var_5C] +
call sub_482620  +
mov edx [esp+78h+var_24] +
jmp loc_4869A9  +
mov eax [esp+78h+var_5C] +
mov edx offset asc_4B9CCB +
call sub_482680  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_486C03  +
mov ecx esi +
jmp loc_486BE9  +
add eax 1 +
mov edx ebp +
mov [ebp+0] eax +
lea ecx [esp+78h+var_30] +
mov eax ebx +
call sub_484420  +
mov esi eax +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_486EB5  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_486889  +
mov eax [esp+78h+var_5C] +
call sub_482620  +
mov edx [esp+78h+var_24] +
jmp loc_486DD1  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov ecx [edx] +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_80] eax +
mov [esp+98h+var_84] ecx +
cmp byte ptr [esi+2] 0 +
jz loc_48707B  +
mov eax [eax] +
and eax 3C00h +
mov [esp+98h+var_7C] eax +
jnz loc_487060  +
lea eax [esi+2] +
mov [esp+98h+var_94] offset unk_4BA2D0 +
mov [esp+98h+var_98] eax +
call strstr  +
test eax eax +
jz loc_487060  +
mov ecx [ebx+4] +
mov edx ebx +
lea eax [esp+98h+var_78] +
mov [esp+98h+var_70] 0 +
lea edi [esp+98h+var_6C] +
mov [esp+98h+var_74] 0 +
mov [esp+98h+var_78] 0 +
call sub_4827E0  +
mov eax [esp+98h+var_7C] +
mov ecx 15h +
mov edx [esp+98h+var_80] +
stos   +
lea eax [esp+98h+var_6C] +
call sub_482820  +
mov edi [esp+98h+var_80] +
cmp byte ptr [esi+2] 0 +
jz loc_487027  +
mov [esp+98h+var_98] esi +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_486170  +
test eax eax +
jz loc_486FBA  +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_486670  +
test eax eax +
jnz loc_487088  +
mov eax [esp+98h+var_84] +
lea edx [esp+98h+var_78] +
mov ecx [esp+98h+var_74] +
mov [ebp+0] eax +
mov eax [ebx] +
mov [ebx+4] eax +
mov eax ebx +
call sub_4827E0  +
lea edx [esp+98h+var_6C] +
mov eax edi +
call sub_482820  +
movzx edx byte ptr [esi+2] +
lea eax [esi+2] +
test dl dl +
jnz loc_486FF7  +
jmp loc_487027  +
add eax 1 +
test dl dl +
jz loc_487027  +
cmp dl 5Fh +
movzx edx byte ptr [eax+1] +
jnz loc_486FF0  +
cmp dl 5Fh +
jnz loc_486FF0  +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_487014  +
jmp loc_48701C  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 5Fh +
jz loc_487010  +
test dl dl +
lea esi [eax-2] +
jnz loc_486F95  +
xor edi edi +
lea eax [esp+98h+var_6C] +
call sub_482490  +
lea eax [esp+98h+var_6C] +
call sub_4821F0  +
mov edx [esp+98h+var_78] +
mov eax edi +
test edx edx +
jz loc_487070  +
mov [esp+98h+var_98] edx +
mov [esp+98h+var_84] edi +
call free  +
mov eax [esp+98h+var_84] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_80] +
mov ecx ebx +
mov edx ebp +
mov [esp+98h+var_98] esi +
call sub_486170  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_487029  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov ebp [edx] +
mov [esp+6Ch+var_5C] eax +
mov [esp+6Ch+var_58] ecx +
cmp byte ptr [ebp+0] 5Fh +
jz loc_487140  +
mov edi offset a__thunk_ +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_487240  +
mov edi offset a__t +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_487130  +
movzx eax byte ptr [ebp+3] +
cmp al 69h +
setz cl  +
cmp al 66h +
jnz loc_4872D0  +
test cl cl +
jnz loc_4872D8  +
mov edi offset aType_infoFunct +
lea eax [ebp+4] +
mov [ebx] eax +
movzx eax byte ptr [ebp+4] +
cmp al 51h +
jz loc_487400  +
cmp al 74h +
jz loc_487425  +
cmp al 4Bh +
jz loc_487400  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
call sub_484420  +
mov esi eax +
test esi esi +
jz loc_487130  +
mov eax [ebx] +
cmp byte ptr [eax] 0 +
jz loc_487500  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx esi byte ptr [ebp+1] +
mov [esp+6Ch+var_6C] offset byte_492FD4 +
mov eax esi +
movsx edi al +
mov [esp+6Ch+var_68] edi +
call strchr  +
test eax eax +
jz loc_487167  +
cmp byte ptr [ebp+2] 5Fh +
jz loc_487520  +
mov eax esi +
cmp al 5Fh +
jz loc_4872E2  +
mov eax esi +
cmp al 76h +
jz loc_4873D0  +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] offset a0123456789qt +
call strchr  +
test eax eax +
jz loc_4870AD  +
mov [esp+6Ch+var_68] offset byte_492FD4 +
mov [esp+6Ch+var_6C] ebp +
call strpbrk  +
test eax eax +
mov [esp+6Ch+var_54] eax +
jz loc_4870AD  +
lea eax [ebp+1] +
mov [ebx] eax +
movzx eax byte ptr [ebp+1] +
cmp al 51h +
jz loc_4874D8  +
cmp al 74h +
jz loc_487452  +
cmp al 4Bh +
jz loc_4874D8  +
mov eax ebx +
call sub_4820C0  +
test eax eax +
mov ebp eax +
js loc_487130  +
mov edx [ebx] +
mov [esp+6Ch+var_6C] edx +
mov [esp+6Ch+var_50] edx +
call strlen  +
mov edx [esp+6Ch+var_50] +
cmp ebp eax +
jg loc_487130  +
cmp ebp 0Ah +
jle loc_4875F0  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_48721E  +
cmp byte ptr [edx+9] 4Eh +
jz loc_487600  +
mov eax [esp+6Ch+var_58] +
mov ecx ebp +
call sub_4825F0  +
mov edx [ebx] +
lea edi [edx+ebp] +
mov [ebx] edi +
mov esi 1 +
jmp loc_487484  +
lea edx [ebp+8] +
mov eax ebx +
mov [ebx] edx +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_487130  +
mov eax [ebx] +
lea edx [eax+1] +
mov eax [esp+6Ch+var_5C] +
mov [ebx] edx +
call sub_487660  +
test eax eax +
mov edi eax +
jz loc_487130  +
neg esi  +
mov [esp+6Ch+var_64] esi +
lea esi [esp+6Ch+var_3E] +
mov [esp+6Ch+var_68] offset aVirtualFunctio +
mov [esp+6Ch+var_6C] esi +
call sprintf  +
cmp byte ptr [esp+6Ch+var_3E] 0 +
jnz loc_487597  +
cmp byte ptr [edi] 0 +
jz loc_4872A6  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_4826B0  +
mov [esp+6Ch+var_6C] edi +
call free  +
mov esi [ebx] +
mov [esp+6Ch+var_6C] esi +
call strlen  +
add esi eax +
mov [ebx] esi +
add esp 6Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jz loc_487130  +
mov edi offset aType_infoNode +
jmp loc_4870EF  +
cmp byte ptr [ebp+2] 76h +
jnz loc_4870AD  +
cmp byte ptr [ebp+3] 74h +
jnz loc_4870AD  +
cmp byte ptr [ebp+4] 5Fh +
jnz loc_4870AD  +
add ebp 5 +
mov [ebx] ebp +
mov esi 1 +
mov edi ebp +
movzx eax byte ptr [edi] +
test al al +
jz loc_4873B5  +
cmp al 51h +
jz loc_487537  +
cmp al 74h +
jz loc_487560  +
cmp al 4Bh +
jz loc_487537  +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_4875A7  +
mov [esp+6Ch+var_68] offset byte_492FD4 +
mov [esp+6Ch+var_6C] edi +
call strcspn  +
mov ebp eax +
test ebp ebp +
jnz loc_4875DC  +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_68] offset byte_492FD4 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
test esi esi +
jz loc_487130  +
test eax eax +
jz loc_487590  +
cmp edi eax +
lea esi [esi+0] +
jnz loc_487130  +
mov eax [esp+6Ch+var_5C] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_4B9CC8 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_4826B0  +
mov eax [ebx] +
lea edi [eax+1] +
mov [ebx] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_487317  +
test esi esi +
jz loc_487132  +
mov eax [esp+6Ch+var_58] +
mov edx offset aVirtualTable +
call sub_4826B0  +
jmp loc_487132  +
cmp byte ptr [ebp+2] 74h +
jnz loc_4870AD  +
movsx eax byte ptr [ebp+3] +
mov [esp+6Ch+var_6C] offset byte_492FD4 +
mov [esp+6Ch+var_68] eax +
call strchr  +
test eax eax +
jz loc_4870AD  +
add ebp 4 +
mov [ebx] ebp +
jmp loc_487305  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_483FC0  +
mov esi eax +
jmp loc_487121  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_4839A0  +
mov esi eax +
jmp loc_487121  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_4839A0  +
mov esi eax +
test esi esi +
jz loc_487130  +
mov edi [ebx] +
cmp edi [esp+6Ch+var_54] +
jnz loc_487130  +
mov eax [esp+6Ch+var_5C] +
add edi 1 +
mov edx offset a_ +
mov [ebx] edi +
test byte ptr [eax] 4 +
mov eax offset asc_4B9CC8 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_4826B0  +
mov ebp [ebx] +
mov [esp+6Ch+var_6C] ebp +
call strlen  +
test eax eax +
mov edi eax +
jz loc_4874CF  +
mov ecx eax +
mov eax [esp+6Ch+var_58] +
mov edx ebp +
call sub_4825F0  +
mov ebp [ebx] +
add edi ebp +
mov [ebx] edi +
jmp loc_487132  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_483FC0  +
mov esi eax +
jmp loc_48747A  +
cmp byte ptr [edi] 0 +
jz loc_487132  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_4826B0  +
jmp loc_487132  +
mov eax [esp+6Ch+var_5C] +
lea edx [ebp+3] +
mov esi 1 +
mov [ebx] edx +
add dword ptr [eax+2Ch] 1 +
jmp loc_487132  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_483FC0  +
mov edi [ebx] +
mov esi eax +
jmp loc_48735B  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_4839A0  +
mov edi [ebx] +
mov esi eax +
jmp loc_48735B  +
mov edi [ebx] +
jmp loc_48730C  +
mov eax [esp+6Ch+var_58] +
mov edx esi +
call sub_4826B0  +
jmp loc_487296  +
mov eax ebx +
call sub_4820C0  +
mov edi [ebx] +
mov [esp+6Ch+var_6C] edi +
mov ebp eax +
call strlen  +
cmp ebp eax +
jle loc_48734F  +
mov [esp+6Ch+var_68] offset byte_492FD4 +
mov esi 1 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
jmp loc_487373  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
mov ecx ebp +
call sub_4825F0  +
mov edi [ebx] +
jmp loc_487357  +
test ebp ebp +
jz loc_48722B  +
jmp loc_48721E  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_48721E  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset byte_492FD4 +
call strchr  +
mov edx [esp+6Ch+var_50] +
test eax eax +
jz loc_48721E  +
mov eax [esp+6Ch+var_58] +
mov edx offset aAnonymous +
call sub_4826B0  +
mov edi [ebx] +
mov [esp+6Ch+var_68] offset byte_492FD4 +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
mov [esp+6Ch+var_54] eax +
jmp loc_487230  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+28h] +
test edx edx +
mov [esp+48h+var_2C] edx +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+48h+var_40] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+2Ch] 0 +
mov [esp+48h+var_3C] eax +
mov eax [ebx+30h] +
mov [esp+48h+var_38] eax +
mov eax [ebx+38h] +
mov dword ptr [ebx+38h] 0 +
mov [esp+48h+var_34] eax +
jz loc_4879F0  +
cmp byte ptr [edx] 0 +
jz loc_4879F0  +
test dword ptr [ebx] 300h +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
jnz loc_4877A8  +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 6 +
jbe loc_487840  +
mov edi offset a_imp__ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_4878D0  +
mov edi offset a__imp_ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_4878D0  +
cmp eax 0Ah +
jbe loc_487840  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_487840  +
movsx eax byte ptr [ebp+8] +
mov [esp+48h+var_48] offset byte_492FD4 +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jz loc_487C01  +
movzx ecx byte ptr [ebp+0Ah] +
cmp [eax] cl +
mov [esp+48h+var_30] ebp +
jnz loc_4878E2  +
movzx eax byte ptr [ebp+9] +
cmp al 44h +
jz loc_487C0A  +
cmp al 49h +
mov [esp+48h+var_30] ebp +
jnz loc_4878E2  +
add ebp 0Bh +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+28h] 2 +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_487090  +
test eax eax +
jnz loc_487C7F  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_30] eax +
jmp loc_4878E2  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_487090  +
test eax eax +
mov esi eax +
jz loc_487890  +
mov ebp [esp+48h+var_2C] +
cmp byte ptr [ebp+0] 0 +
jnz loc_487952  +
mov eax [ebx+28h] +
cmp eax 2 +
jz loc_4879D3  +
cmp dword ptr [ebx+2Ch] 2 +
jz loc_487A95  +
cmp dword ptr [ebx+3Ch] 1 +
jz loc_487AB0  +
mov eax ebx +
call sub_482490  +
test esi esi +
jnz loc_487968  +
mov edx [esp+48h+var_24] +
xor eax eax +
test edx edx +
jz loc_487818  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
call free  +
mov eax [esp+48h+var_30] +
mov edi [esp+48h+var_40] +
mov ecx [esp+48h+var_3C] +
mov [ebx+28h] edi +
mov edi [esp+48h+var_38] +
mov [ebx+2Ch] ecx +
mov ecx [esp+48h+var_34] +
mov [ebx+30h] edi +
mov [ebx+38h] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dword ptr [ebx] 3800h +
mov [esp+48h+var_30] ebp +
jz loc_4878E2  +
mov edi offset a__std__ +
mov ecx 7 +
mov esi ebp +
cmps   +
jz loc_487AD0  +
mov esi [esp+48h+var_30] +
mov edi offset a__sti__ +
mov ecx 7 +
cmps   +
jnz loc_4878E2  +
mov eax [esp+48h+var_30] +
mov dword ptr [ebx+28h] 2 +
add eax 7 +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] eax +
jmp loc_4878E2  +
mov eax ebx +
call sub_482490  +
mov eax ebx +
call sub_4821F0  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_4878C6  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov ebp [esp+48h+var_2C] +
jmp loc_4876DC  +
add ebp 6 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+3Ch] 1 +
mov [esp+48h+var_30] ebp +
mov eax [esp+48h+var_30] +
mov edx eax +
jmp loc_4878FD  +
cmp byte ptr [eax+1] 5Fh +
lea edx [eax+1] +
jz loc_487984  +
mov [esp+48h+var_44] 5Fh +
mov [esp+48h+var_48] edx +
call strchr  +
test eax eax +
jnz loc_4878F0  +
cmp dword ptr [ebx+28h] 2 +
jz loc_487923  +
xor esi esi +
cmp dword ptr [ebx+2Ch] 2 +
jnz loc_4877E5  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_487934  +
cmp byte ptr [esi] 0 +
jnz loc_487AE7  +
mov [esp+48h+var_48] esi +
call strlen  +
lea ebp [esi+eax] +
mov [esp+48h+var_2C] ebp +
cmp byte ptr [ebp+0] 0 +
mov esi 1 +
jz loc_4877CF  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_486670  +
mov esi eax +
jmp loc_4877CF  +
lea eax [esp+48h+var_24] +
mov ecx 1 +
mov edx offset unk_4B9BC0 +
call sub_4825F0  +
mov eax [esp+48h+var_24] +
jmp loc_487818  +
test edx edx +
mov esi eax +
jz loc_487911  +
mov [esp+48h+var_44] offset a__0 +
mov [esp+48h+var_48] esi +
call strspn  +
cmp eax 2 +
jle loc_4879AB  +
lea esi [esi+eax-2] +
test esi esi +
jz loc_487911  +
mov eax [ebx+30h] +
test eax eax +
jz loc_4879F7  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_4879CA  +
cmp al 74h +
jnz loc_487911  +
mov ebp [esp+48h+var_30] +
jmp loc_487943  +
mov edx offset aGlobalConstr_0 +
lea eax [esp+48h+var_24] +
call sub_482680  +
mov dword ptr [ebx+28h] 0 +
jmp loc_4877EF  +
xor eax eax +
jmp loc_487818  +
cmp [esp+48h+var_30] esi +
jz loc_487AFB  +
mov eax [ebx] +
test ah 8 +
jz loc_487A40  +
cmp byte ptr [esi+2] 70h +
jnz loc_487A40  +
cmp byte ptr [esi+3] 74h +
jnz loc_487A40  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call strlen  +
lea edx [esp+48h+var_24] +
mov [esp+48h+var_48] edx +
lea edx [esp+48h+var_2C] +
mov ecx eax +
mov eax ebx +
call sub_485030  +
mov ebp [esp+48h+var_2C] +
jmp loc_487943  +
test ah 20h +
jz loc_487A60  +
movzx eax byte ptr [esi+2] +
cmp al 74h +
jz loc_487B44  +
cmp al 70h +
jnz loc_487A60  +
movzx eax byte ptr [esi+3] +
sub eax 73h +
cmp al 1 +
jbe loc_487A14  +
cmp [esp+48h+var_30] esi +
jz loc_487B55  +
cmp byte ptr [esi+2] 0 +
jz loc_487911  +
mov [esp+48h+var_48] esi +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_486EF0  +
test eax eax +
mov esi eax +
jz loc_4877CF  +
jmp loc_4877C1  +
mov edx offset aGlobalDestru_0 +
lea eax [esp+48h+var_24] +
call sub_482680  +
mov dword ptr [ebx+2Ch] 0 +
jmp loc_4877EF  +
mov edx offset aImportStubFor +
lea eax [esp+48h+var_24] +
call sub_482680  +
mov dword ptr [ebx+3Ch] 0 +
jmp loc_4877EF  +
add ebp 7 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+2Ch] 2 +
mov [esp+48h+var_30] ebp +
jmp loc_4878E2  +
mov edx esi +
lea eax [esp+48h+var_24] +
call sub_4826B0  +
mov esi [esp+48h+var_2C] +
jmp loc_487934  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_487BD0  +
mov eax [ebx] +
test ah 1Ch +
jz loc_487BE8  +
mov eax [esp+48h+var_30] +
add eax 2 +
mov [esp+48h+var_2C] eax +
lea eax [esp+48h+var_2C] +
call sub_4820C0  +
mov esi [esp+48h+var_2C] +
test esi esi +
jnz loc_48792B  +
jmp loc_487934  +
cmp byte ptr [esi+3] 6Dh +
jnz loc_487A60  +
nop   +
jmp loc_487A14  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_487A6A  +
cmp al 74h +
jz loc_487A74  +
test dword ptr [ebx] 3C00h +
jnz loc_487C1F  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 5Fh +
jnz loc_487B9C  +
nop   +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [eax] 5Fh +
jz loc_487B90  +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_44] offset unk_4BA2D0 +
mov [esp+48h+var_48] eax +
call strstr  +
test eax eax +
jz loc_487911  +
cmp byte ptr [eax+2] 0 +
jz loc_487911  +
mov [esp+48h+var_48] eax +
jmp loc_487A77  +
cmp al 51h +
jz loc_487BE6  +
cmp al 74h +
jz loc_487BE6  +
cmp al 4Bh +
jz loc_487BE6  +
cmp al 48h +
nop   +
jnz loc_487A01  +
mov eax [ebx] +
test ah 3Ch +
jnz loc_487BF1  +
add dword ptr [ebx+28h] 1 +
mov ebp [esp+48h+var_30] +
add ebp 2 +
mov [esp+48h+var_2C] ebp +
jmp loc_487943  +
mov [esp+48h+var_30] ebp +
jmp loc_4878E2  +
mov eax ebp +
add eax 0Bh +
mov [esp+48h+var_2C] eax +
mov dword ptr [ebx+2Ch] 2 +
jmp loc_487784  +
mov esi [esp+48h+var_30] +
mov edi offset a__vtbl__ +
mov ecx 8 +
cmps   +
jnz loc_487B82  +
mov esi [esp+48h+var_30] +
movzx edx byte ptr [esi+8] +
mov eax esi +
add eax 8 +
mov [esp+48h+var_28] eax +
test dl dl +
jz loc_487C88  +
lea eax [esp+48h+var_28] +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
jz loc_487B82  +
add eax [esp+48h+var_28] +
mov [esp+48h+var_28] eax +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jnz loc_487C46  +
cmp byte ptr [eax+1] 5Fh +
jnz loc_487C4A  +
lea edx [eax+2] +
mov [esp+48h+var_28] edx +
movzx edx byte ptr [eax+2] +
jmp loc_487C46  +
mov ebp [esp+48h+var_2C] +
jmp loc_487943  +
mov eax [esp+48h+var_2C] +
lea edx [eax+8] +
movzx eax byte ptr [eax+8] +
mov [esp+48h+var_2C] edx +
test al al +
jz loc_487D13  +
lea eax [esp+48h+var_2C] +
call sub_4820C0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_487B82  +
mov edi [esp+48h+var_2C] +
mov [esp+48h+var_48] edi +
call strlen  +
cmp esi eax +
jg loc_487B82  +
test esi esi +
jnz loc_487D00  +
add esi edi +
mov [esp+48h+var_2C] esi +
movzx eax byte ptr [esi] +
cmp al 5Fh +
jnz loc_487C97  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_487C9B  +
mov edx offset asc_4B9CC8 +
lea eax [esp+48h+var_24] +
call sub_482680  +
mov eax [esp+48h+var_2C] +
lea edx [eax+2] +
mov [esp+48h+var_2C] edx +
movzx eax byte ptr [eax+2] +
jmp loc_487C97  +
mov edx edi +
mov ecx esi +
lea eax [esp+48h+var_24] +
call sub_482620  +
mov edi [esp+48h+var_2C] +
jmp loc_487CC7  +
mov edx offset aVirtualTable +
lea eax [esp+48h+var_24] +
call sub_4826B0  +
mov ebp [esp+48h+var_2C] +
jmp loc_487943  +
***
xor eax eax +
mov eax [esp+arg_8] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [esp+34h] +
test eax eax +
jz loc_487DF0  +
test edi edi +
jz loc_487DF0  +
mov [esp] edi +
mov ebx offset unk_4B93C4 +
xor esi esi +
call strlen  +
mov ebp eax +
jmp loc_487DAB  +
add esi 1 +
add ebx 14h +
cmp esi 21h +
jz loc_487DF0  +
cmp [ebx] ebp +
jnz loc_487DA0  +
mov eax [ebx-4] +
mov [esp] edi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jnz loc_487DA0  +
mov eax [esp+30h] +
mov edx [esp+30h] +
mov dword ptr [eax] 27h +
lea eax [esi+esi*4] +
lea eax ds:4B93C0h[eax*4] +
mov [edx+4] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx [esp+6Ch+arg_0] +
mov esi [esp+6Ch+arg_4] +
mov [esp+6Ch+var_6C] ebx +
call strlen  +
cmp byte ptr [ebx] 5Fh +
jz loc_487F96  +
test esi 10h +
jz loc_487FA7  +
mov edi 1 +
lea ebp [esp+6Ch+var_48] +
mov [esp+6Ch+var_64] eax +
mov [esp+6Ch+var_6C] ebx +
mov [esp+6Ch+var_60] ebp +
mov [esp+6Ch+var_68] esi +
call sub_481F80  +
mov eax [esp+6Ch+var_30] +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+6Ch+var_6C] eax +
call malloc  +
mov ebx eax +
mov [esp+6Ch+var_38] eax +
mov eax [esp+6Ch+var_24] +
shl eax 2 +
mov [esp+6Ch+var_6C] eax +
call malloc  +
test ebx ebx +
mov [esp+6Ch+var_2C] eax +
jz loc_487FB0  +
test eax eax +
jz loc_487FB0  +
test edi edi +
jz loc_487F58  +
mov [esp+6Ch+var_6C] ebp +
call sub_47A670  +
and esi 1 +
mov ebx eax +
jz loc_487F6F  +
mov eax [esp+6Ch+var_3C] +
cmp byte ptr [eax] 0 +
jz loc_487F6F  +
mov eax [esp+6Ch+var_2C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+var_38] +
mov [esp+6Ch+var_6C] eax +
call free  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] ebp +
call sub_47D0F0  +
and esi 1 +
mov ebx eax +
jnz loc_487F2D  +
mov eax [esp+6Ch+var_2C] +
mov [esp+6Ch+var_6C] eax +
call free  +
test ebx ebx +
jz loc_487F42  +
mov eax [esp+6Ch+arg_8] +
mov edx [esp+6Ch+var_38] +
mov [eax] edx +
add esp 6Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 5Ah +
jnz loc_487EB6  +
xor edi edi +
jmp loc_487EC7  +
xor eax eax +
jmp loc_487F50  +
mov [esp+6Ch+var_6C] ebx +
mov [esp+6Ch+var_50] eax +
call free  +
mov eax [esp+6Ch+var_50] +
mov [esp+6Ch+var_6C] eax +
call free  +
xor eax eax +
jmp loc_487F50  +
***
sub esp 1Ch +
mov eax ds:dword_4C15F0 +
test eax eax +
jz loc_488000  +
retn   +
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:GetTempPathA +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
call esi  +
sub esp 8 +
test eax eax +
mov ebx eax +
jnz loc_488038  +
mov eax ds:dword_4C15F0 +
test eax eax +
jz loc_48806C  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call sub_4742F0  +
mov [esp+1Ch+var_1C] ebx +
mov ds:dword_4C15F0 eax +
mov [esp+1Ch+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jnz loc_488028  +
mov eax ds:dword_4C15F0 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_4C15F0 0 +
mov [esp+1Ch+var_1C] offset unk_4BAE34 +
call sub_476140  +
mov ds:dword_4C15F0 eax +
jmp loc_488031  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
call sub_487FF0  +
test esi esi +
mov ebp eax +
jz loc_488120  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov ecx eax +
mov ebx eax +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call strlen  +
mov edi eax +
lea eax [ebx+eax+9] +
mov [esp+2Ch+var_2C] eax +
call sub_4742F0  +
mov [esp+2Ch+var_28] ebp +
mov ebx eax +
mov [esp+2Ch+var_2C] eax +
call strcpy  +
lea edx [ebx+edi] +
lea eax [ebx+edi+8] +
mov dword ptr [edx] 58586363h +
mov dword ptr [edx+4] 58585858h +
mov byte ptr [edx+8] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call strcpy  +
mov ecx [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] ecx +
call sub_48AA10  +
cmp eax 0FFFFFFFFh +
jz loc_48812E  +
mov [esp+2Ch+var_2C] eax +
call _close  +
test eax eax +
jnz loc_488163  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor ebx ebx +
mov esi offset unk_4BAE37 +
jmp loc_4880A6  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+0] eax +
call strerror  +
mov [esp+8] ebp +
mov [esp-10h+arg_0] offset aCannotCreate_0 +
mov [esp+0Ch] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+0] eax +
call fprintf  +
call abort  +
call abort  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_4881A0  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_4C1600 +
call sprintf  +
add esp 18h +
mov eax offset unk_4C1600 +
pop ebx  +
retn   +
***
mov [esp+18h+var_18] 0Ch +
sub esp 14h +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
test eax eax +
jz loc_48829C  +
lea ebx [eax+7] +
and ebx 0FFFFFFF8h +
lea ecx [ebx+8] +
cmp eax ecx +
ja loc_4882B9  +
mov edx [esi+4] +
cmp ebx edx +
jbe loc_4882E0  +
cmp ebx 1FFh +
ja loc_4882F7  +
mov [esp+14h+var_14] 0FE0h +
call malloc  +
test eax eax +
jz loc_4882B9  +
mov edx [esi+8] +
test ebx ebx +
mov dword ptr [eax+4] 0 +
mov [eax] edx +
lea edx [eax+8] +
mov [esi] edx +
mov dword ptr [esi+4] 0FD8h +
mov [esi+8] eax +
jz loc_4882C1  +
mov eax ebx +
jnz loc_48832C  +
mov edx [esi+4] +
cmp edx 7 +
ja loc_488320  +
mov [esp+14h+var_14] 0FE0h +
mov ebx 8 +
call malloc  +
test eax eax +
jnz loc_488275  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov ebx 0FFFFFFF8h +
mov ecx 0FD0h +
mov eax 8 +
add eax edx +
mov [esi] eax +
add eax ebx +
mov [esi+4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx ebx +
neg ecx  +
mov eax [esi] +
sub edx ebx +
mov [esi+4] edx +
add eax ebx +
mov [esi] eax +
add esp 14h +
add eax ecx +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ecx +
call malloc  +
test eax eax +
jz loc_4882B9  +
mov edx [esi+8] +
mov [eax] edx +
mov edx [esi] +
mov [eax+4] edx +
mov [esi+8] eax +
add esp 14h +
add eax 8 +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFF8h +
mov ebx 8 +
jmp loc_4882E4  +
mov ecx 0FD8h +
sub ecx ebx +
neg ebx  +
jmp loc_4882D0  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [eax+8] +
test eax eax +
jz loc_4883C0  +
mov ebx eax +
xor ebp ebp +
jmp loc_48839D  +
lea edx [ebx+8] +
cmp esi edx +
jz loc_4883C5  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4883C0  +
mov edi [ebx+4] +
test edi edi +
jnz loc_488390  +
cmp esi ebx +
jbe loc_4883B2  +
lea edx [ebx+0FE0h] +
cmp esi edx +
jb loc_488412  +
mov ebp ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_48839D  +
lea esi [esi+0] +
call abort  +
mov ebx [ebx] +
cmp eax ebx +
jnz loc_4883D2  +
jmp loc_4883E0  +
mov eax esi +
mov esi [eax] +
mov [esp+1Ch+var_1C] eax +
call free  +
cmp ebx esi +
jnz loc_4883D0  +
mov eax [esp+1Ch+arg_0] +
mov [eax+8] ebx +
mov edx [ebx+4] +
test edx edx +
jz loc_4883F9  +
nop   +
mov ebx [ebx] +
mov eax [ebx+4] +
test eax eax +
jnz loc_4883F0  +
mov eax [esp+1Ch+arg_0] +
add ebx 0FE0h +
sub ebx edi +
mov [eax] edi +
mov [eax+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
mov [esp+1Ch+var_10] edx +
jz loc_4883C0  +
cmp eax ebx +
jz loc_4884A0  +
mov [esp+1Ch+var_14] 0 +
mov edi ebp +
jmp loc_488448  +
cmp edi eax +
mov ecx 0 +
mov [esp+1Ch+var_1C] eax +
cmovz edi ecx +
call free  +
cmp ebp ebx +
jz loc_488465  +
mov eax ebp +
test edi edi +
mov ebp [eax] +
jnz loc_488430  +
cmp esi [eax+4] +
jb loc_488496  +
mov ecx [esp+1Ch+var_14] +
test ecx ecx +
jnz loc_488442  +
mov edi [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] eax +
jmp loc_488442  +
mov eax [esp+1Ch+var_14] +
mov edi ebp +
test eax eax +
cmovnz edi eax +
mov [esp+1Ch+var_14] edi +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+var_14] +
mov [eax] esi +
mov [eax+8] ecx +
mov eax [esp+1Ch+var_10] +
mov ecx [esp+1Ch+arg_0] +
sub eax esi +
mov [ecx+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_488442  +
mov [esp+1Ch+var_14] eax +
jmp loc_488474  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_488510  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_488530  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_4B8120[ecx+ecx] 88h +
jz loc_48856A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_488590  +
test dl dl +
jz locret_488587  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_48857B  +
cmp dl 2Fh +
jnz loc_48857D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_488571  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_48856A  +
***
mov eax ds:dword_4C1640 +
test eax eax +
jz loc_4885C0  +
retn   +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 105h +
call sub_4742F0  +
mov [esp+1Ch+var_18] 105h +
mov [esp+1Ch+var_1C] eax +
call _getcwd  +
mov ds:dword_4C1640 eax +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 14h +
test eax eax +
jz loc_48861E  +
mov edx [eax] +
lea ebx [eax+4] +
test edx edx +
jz loc_488616  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call free  +
mov edx [ebx-4] +
test edx edx +
jnz loc_488604  +
mov [esp+18h+var_18] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call malloc  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx ebx byte ptr [eax+1] +
mov [esp+28h+var_1C] edx +
xor edx edx +
cmp bl 3Ah +
jnz loc_4886A6  +
jmp loc_4887BF  +
cmp eax 5Ch +
jz loc_488731  +
cmp eax 2Fh +
lea esi [esi+0] +
jz loc_488731  +
movsx eax byte ptr [ecx] +
add ecx 1 +
test eax eax +
jnz loc_488690  +
lea eax ds:8[edx*4] +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov edi eax +
jz loc_488808  +
xor ebp ebp +
cmp bl 3Ah +
jz loc_488790  +
mov edx esi +
jmp loc_4886E4  +
cmp eax 5Ch +
jz loc_488753  +
cmp eax 2Fh +
jz loc_488753  +
mov edx ebx +
lea ebx [edx+1] +
movsx eax byte ptr [ebx-1] +
test eax eax +
jnz loc_4886D8  +
sub edx esi +
mov eax ebp +
test edx edx +
jle loc_488706  +
lea ebx [edi+eax*4] +
mov eax esi +
call sub_488630  +
add ebp 1 +
mov [ebx] eax +
mov eax [edi+ebp*4-4] +
mov dword ptr [edi+ebp*4] 0 +
test eax eax +
jz loc_48880F  +
mov eax [esp+28h+var_1C] +
test eax eax +
jz loc_4887DC  +
mov [eax] ebp +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax byte ptr [ecx] +
add edx 1 +
cmp al 5Ch +
jnz loc_48874A  +
nop   +
lea esi [esi+0] +
add ecx 1 +
movsx eax byte ptr [ecx] +
cmp al 5Ch +
jz loc_488740  +
cmp al 2Fh +
jz loc_488740  +
jmp loc_4886A9  +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_4887E6  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_488760  +
cmp al 2Fh +
jz loc_488760  +
mov edx ebx +
mov eax esi +
sub edx esi +
add ebp 1 +
call sub_488630  +
test eax eax +
mov [edi+ebp*4-4] eax +
jz loc_4887F3  +
mov esi ebx +
jmp loc_4886D4  +
movzx eax byte ptr [esi+2] +
cmp al 5Ch +
jz loc_4887A0  +
cmp al 2Fh +
jnz loc_4886D4  +
mov edx 3 +
mov eax esi +
call sub_488630  +
test eax eax +
mov [edi] eax +
jz loc_48881D  +
add esi 3 +
mov ebp 1 +
jmp loc_4886D4  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_4887CF  +
cmp al 2Fh +
jnz loc_4886A6  +
lea ecx [esi+3] +
mov edx 1 +
jmp loc_4886A6  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 5Ch +
jz loc_488760  +
jmp loc_48876E  +
mov eax edi +
mov dword ptr [edi+ebp*4] 0 +
call sub_4885F0  +
xor eax eax +
jmp loc_488729  +
xor eax eax +
jmp loc_488729  +
mov eax edi +
call sub_4885F0  +
xor eax eax +
jmp loc_488729  +
mov [esp+28h+var_28] edi +
call free  +
xor eax eax +
jmp loc_488729  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 7Ch +
test eax eax +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_488B10  +
test edx edx +
jz loc_488B10  +
mov ebx [ebp+var_60] +
test ebx ebx +
jz loc_488B10  +
mov [esp+88h+var_88] eax +
call sub_4885A0  +
cmp eax esi +
mov [ebp+var_64] eax +
jz loc_488B20  +
mov ecx [ebp+arg_0] +
mov [esp+88h+var_88] esi +
test ecx ecx +
jnz loc_488990  +
call _strdup  +
mov ebx eax +
test ebx ebx +
jz loc_488B10  +
lea edx [ebp+var_50] +
mov eax ebx +
call sub_488670  +
mov [esp+88h+var_88] ebx +
mov esi eax +
mov [ebp+var_64] eax +
call free  +
test esi esi +
jz loc_488B10  +
mov eax [ebp+var_5C] +
lea edx [ebp+var_4C] +
call sub_488670  +
test eax eax +
mov ebx eax +
jz loc_488B00  +
mov eax [ebp+var_50] +
lea esi [eax-1] +
cmp esi [ebp+var_4C] +
mov [ebp+var_50] esi +
jnz loc_48890D  +
test esi esi +
jle loc_488B00  +
mov [ebp+var_5C] esi +
xor edi edi +
mov esi [ebp+var_64] +
jmp loc_4888EC  +
add edi 1 +
cmp [ebp+var_5C] edi +
jz loc_488B00  +
mov eax [ebx+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [esi+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_4888E0  +
mov esi [ebp+var_5C] +
cmp esi edi +
jz loc_488B00  +
mov eax [ebp+var_60] +
lea edx [ebp+var_48] +
call sub_488670  +
test eax eax +
mov edx eax +
mov [ebp+var_60] eax +
jz loc_488B00  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_48] +
mov [ebp+var_68] eax +
cmp ecx eax +
cmovle eax ecx +
test eax eax +
mov [ebp+var_6C] ecx +
jle loc_488C98  +
xor edi edi +
mov esi edx +
mov [ebp+var_5C] eax +
jmp loc_48894F  +
add edi 1 +
cmp edi [ebp+var_5C] +
jz loc_4889A0  +
mov eax [esi+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [ebx+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_488947  +
xor esi esi +
test edi edi +
jnz loc_4889A0  +
mov eax [ebp+var_64] +
call sub_4885F0  +
mov eax ebx +
call sub_4885F0  +
mov eax [ebp+var_60] +
call sub_4885F0  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4884B0  +
mov ebx eax +
jmp loc_488884  +
mov eax [ebp+var_50] +
test eax eax +
jle loc_488C6D  +
mov edx [ebp+var_64] +
mov [ebp+var_5C] ebx +
mov [ebp+var_70] edi +
mov esi edx +
lea eax [edx+eax*4] +
xor edx edx +
mov edi esi +
mov ebx edx +
mov esi eax +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_4889C1  +
mov esi ebx +
mov edi [ebp+var_70] +
mov ebx [ebp+var_5C] +
mov eax [ebp+var_68] +
mov edx [ebp+var_6C] +
sub eax edi +
lea eax [eax+eax*2] +
add eax esi +
cmp edx edi +
jle loc_488A1D  +
mov ecx [ebp+var_60] +
mov [ebp+var_5C] ebx +
mov ebx eax +
mov [ebp+var_68] edi +
lea esi [ecx+edi*4] +
lea edx [ecx+edx*4] +
mov edi esi +
mov esi edx +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_488A02  +
mov eax ebx +
mov edi [ebp+var_68] +
mov ebx [ebp+var_5C] +
mov esi eax +
add esi 1 +
mov [esp+88h+var_88] esi +
call malloc  +
test eax eax +
mov esi eax +
jz loc_48896B  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_50] +
xor ecx ecx +
test eax eax +
mov [ebp+var_5C] eax +
jle loc_488A6D  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_64] +
mov [ebp+var_6C] edi +
mov edi ecx +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_488A50  +
mov ebx [ebp+var_68] +
mov edi [ebp+var_6C] +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_488A6F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovnz ecx edx +
add al al +
mov eax [ebp+var_4C] +
sbb ecx 3 +
cmp edi eax +
jge loc_488CA7  +
sub eax edi +
lea eax [eax+eax*2] +
add eax ecx +
nop   +
mov edx 2E2Eh +
add ecx 3 +
mov [ecx-3] dx +
mov byte ptr [ecx-1] 0 +
cmp ecx eax +
mov byte ptr [ecx-1] 2Fh +
jnz loc_488AB0  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_48] +
cmp edi eax +
mov [ebp+var_5C] eax +
jge loc_48896B  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_60] +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_488AE0  +
mov ebx [ebp+var_68] +
jmp loc_48896B  +
xor esi esi +
mov [ebp+var_60] 0 +
jmp loc_48896B  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+88h+var_88] offset aPath +
call getenv  +
test eax eax +
jz loc_48886F  +
mov [esp+88h+var_88] eax +
mov [ebp+var_68] eax +
call strlen  +
lea ebx [eax+1] +
mov eax 2 +
cmp ebx 1 +
cmovbe ebx eax +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] eax +
call strlen  +
lea eax [ebx+eax+23h] +
and eax 0FFFFFFF0h +
call sub_48BDD0  +
mov edx [ebp+var_68] +
sub esp eax +
lea edi [esp+88h+var_70+3] +
mov ebx edx +
and edi 0FFFFFFF0h +
mov [ebp+var_68] edi +
movzx eax byte ptr [ebx] +
test al al +
jz loc_488B90  +
cmp al 3Bh +
jz loc_488B90  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_488B7C  +
lea esi [esi+0] +
cmp ebx edx +
jz loc_488C80  +
mov esi ebx +
sub esi edx +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_88] edi +
call memcpy  +
movzx eax byte ptr [ebx-1] +
cmp al 5Ch +
jz loc_488C74  +
cmp al 2Fh +
jz loc_488C74  +
mov byte ptr [edi+esi] 2Fh +
mov byte ptr [edi+esi+1] 0 +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] edi +
mov [esp+88h+var_84] eax +
call strcat  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jz loc_488C3C  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_488BEF  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov dword ptr [edx] 6578652Eh +
mov byte ptr [edx+4] 0 +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jnz loc_488C5E  +
lea eax [ebp+var_48] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edi +
call ds:_stati64  +
test eax eax +
js loc_488C5E  +
movzx eax [ebp+var_42] +
and ax 0F000h +
cmp ax 8000h +
jz loc_488C9F  +
cmp byte ptr [ebx] 0 +
jz loc_488C90  +
add ebx 1 +
mov edx ebx +
jmp loc_488B75  +
xor esi esi +
jmp loc_4889DC  +
mov byte ptr [edi+esi] 0 +
jmp loc_488BC9  +
mov byte ptr [edi] 2Eh +
mov byte ptr [edi+1] 2Fh +
mov byte ptr [edi+2] 0 +
jmp loc_488BC9  +
mov esi [ebp+var_64] +
jmp loc_48886F  +
xor esi esi +
jmp loc_48896B  +
mov esi [ebp+var_68] +
jmp loc_48886F  +
mov eax ecx +
jmp loc_488AC8  +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov [esp+arg_0] 1 +
jmp sub_488830  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp sub_488830  +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_488D30  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_488D29  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_474370  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_4742F0  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_488CF0  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
test edx edx +
jz loc_488E20  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_488E20  +
sub ecx 46h +
cmp cl 11h +
ja loc_488E20  +
movzx ecx cl +
jmp ds:off_4BAFBC[ecx*4]  +
lea ebx [edx+1] +
mov edx offset aExternWindows +
call sub_488D60  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
lea eax [edx+1] +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC +
call sub_488D60  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC_0 +
call sub_488D60  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternPascal +
call sub_488D60  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
test edx edx +
jz loc_488EFE  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
movzx eax byte ptr [edx] +
test al al +
jz loc_488E70  +
lea ebx [edx+2] +
mov edx eax +
cmp dl 4Eh +
lea eax [ebx-2] +
jnz loc_488E72  +
movzx ecx byte ptr [ebx-1] +
lea edx [ecx-61h] +
cmp dl 0Ah +
ja loc_488E70  +
movzx edx dl +
jmp ds:off_4BB044[edx*4]  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx offset a@nogc +
mov eax esi +
call sub_488D60  +
movzx edx byte ptr [ebx] +
add ebx 2 +
jmp loc_488E4B  +
mov edx offset a@safe +
mov eax esi +
call sub_488D60  +
jmp loc_488E84  +
mov edx offset a@trusted +
mov eax esi +
call sub_488D60  +
jmp loc_488E84  +
mov edx offset a@property +
mov eax esi +
call sub_488D60  +
jmp loc_488E84  +
mov edx offset aRef +
mov eax esi +
call sub_488D60  +
jmp loc_488E84  +
mov edx offset aNothrow +
mov eax esi +
call sub_488D60  +
jmp loc_488E84  +
mov edx offset aPure +
mov eax esi +
call sub_488D60  +
jmp loc_488E84  +
mov edx offset aReturn +
mov eax esi +
call sub_488D60  +
jmp loc_488E84  +
xor eax eax +
retn   +
***
jmp sub_488F10  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] edx +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_488F31  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
mov eax ebp +
call sub_488CF0  +
mov eax [ebp+4] +
mov ebx [ebp+0] +
lea ecx [eax-1] +
cmp ecx ebx +
jb loc_488F58  +
movzx eax byte ptr [ecx] +
sub ecx 1 +
mov [ecx+esi+1] al +
mov ebx [ebp+0] +
cmp ecx ebx +
jnb loc_488F47  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
add [ebp+4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp cl 61h +
setz al  +
mov ebp eax +
mov eax ecx +
and eax 0FFFFFFFDh +
cmp al 75h +
jz loc_489020  +
mov eax ebp +
test al al +
jnz loc_489020  +
cmp cl 62h +
jz loc_4891A0  +
movzx eax byte ptr [edx] +
xor ecx ecx +
mov ebx edx +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_48900B  +
lea esi [esi+0] +
add ebx 1 +
movzx eax byte ptr [ebx] +
add ecx 1 +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_488FF0  +
test ecx ecx +
jnz loc_4891E8  +
lea eax [edi-68h] +
cmp al 0Ch +
ja loc_4891E1  +
movzx eax al +
jmp ds:off_4BB090[eax*4]  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] edx +
call strtol  +
mov ecx [esp+34h+var_24] +
test ecx ecx +
mov ebx eax +
jz loc_489210  +
test eax eax +
js loc_489210  +
mov eax esi +
mov edx offset asc_4BB07B +
call sub_488D60  +
lea eax [ebx-20h] +
cmp eax 5Eh +
ja loc_489098  +
mov eax ebp +
test al al +
jz loc_489098  +
mov ecx 1 +
mov eax esi +
lea edx [esp+34h+var_20] +
mov byte ptr [esp+34h+var_20] bl +
call sub_488F80  +
lea esi [esi+0] +
mov eax esi +
mov edx offset asc_4BB07B +
call sub_488D60  +
mov eax [esp+34h+var_24] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 75h +
jz loc_4891F5  +
cmp al 77h +
jz loc_489186  +
xor ecx ecx +
cmp al 61h +
jnz loc_4890C1  +
mov edx offset asc_4BB07D +
mov eax esi +
call sub_488D60  +
mov ecx 2 +
test ebx ebx +
jz loc_489217  +
mov edx 9 +
jmp loc_4890E4  +
add eax 30h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jz loc_489104  +
mov eax ebx +
mov edi edx +
and eax 0Fh +
cmp eax 9 +
jle loc_4890D0  +
add eax 57h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jnz loc_4890E4  +
test ecx ecx +
jle loc_48911E  +
mov eax edi +
mov edx ecx +
sub eax ecx +
lea eax [esp+eax+34h+var_20] +
mov byte ptr [eax+edx-1] 30h +
sub edx 1 +
jnz loc_489112  +
sub edi ecx +
mov ecx 0Ah +
sub ecx edi +
jz loc_489080  +
lea edx [esp+edi+34h+var_20] +
mov eax esi +
call sub_488F80  +
jmp loc_489080  +
mov eax esi +
mov edx offset unk_4BB08A +
call sub_488D60  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx (offset off_4BB086+2) +
call sub_488D60  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset off_4BB086 +
call sub_488D60  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aU_2 +
mov eax esi +
call sub_488D60  +
mov ecx 8 +
jmp loc_4890C1  +
lea eax [esp+34h+var_20] +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
call strtol  +
mov edx [esp+34h+var_20] +
test edx edx +
jz loc_489210  +
test eax eax +
js loc_489210  +
mov eax offset aFalse_1 +
mov edx offset aTrue_1 +
cmovz edx eax +
mov eax esi +
call sub_488D60  +
mov eax [esp+34h+var_20] +
jmp loc_48914E  +
mov eax ebx +
jmp loc_48914E  +
mov eax esi +
call sub_488F80  +
nop   +
jmp loc_48900B  +
mov edx offset aU_0 +
mov eax esi +
call sub_488D60  +
mov ecx 4 +
jmp loc_4890C1  +
xor eax eax +
jmp loc_48914E  +
mov edi 0Ah +
jmp loc_489104  +
***
jmp sub_489230  +
***
push esi  +
mov edi offset unk_4BB0C4 +
push ebx  +
mov esi edx +
sub esp 40h +
mov ebx edx +
cmps   +
jz loc_489377  +
mov edi offset off_4BB0CC +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_4893B6  +
mov edi offset aNinf +
mov ecx 4 +
mov esi edx +
cmps   +
jz loc_4893CC  +
movzx ecx byte ptr [edx] +
xor edx edx +
cmp cl 4Eh +
jz loc_48938D  +
movzx esi cl +
test ds:byte_4B8121[esi+esi] 1 +
jz loc_4893AB  +
mov [esp+edx+48h+var_46] cl +
lea ecx [edx+4] +
mov [esp+edx+48h+var_48] 30h +
lea esi [ebx+1] +
mov [esp+edx+48h+var_47] 78h +
mov [esp+edx+48h+var_45] 2Eh +
movzx edx byte ptr [ebx+1] +
movzx ebx dl +
test ds:byte_4B8121[ebx+ebx] 1 +
jz loc_4892D9  +
lea edi [esp-1] +
add ecx 1 +
add esi 1 +
mov [edi+ecx] dl +
movzx edx byte ptr [esi] +
movzx ebx dl +
test ds:byte_4B8121[ebx+ebx] 1 +
jnz loc_4892C0  +
cmp dl 50h +
jnz loc_4893AB  +
movzx edi byte ptr [esi+1] +
lea edx [ecx+1] +
mov [esp+ecx+48h+var_48] 70h +
mov ebx edi +
cmp bl 4Eh +
jz loc_4893E2  +
lea ebx [esi+1] +
mov esi edi +
mov ecx esi +
movzx ecx cl +
test ds:byte_4B8120[ecx+ecx] 4 +
jz loc_48932B  +
mov ecx esi +
lea edi [esp-1] +
add edx 1 +
add ebx 1 +
mov [edi+edx] cl +
movzx ecx byte ptr [ebx] +
movzx esi cl +
test ds:byte_4B8120[esi+esi] 4 +
jnz loc_489312  +
mov [esp+edx+48h+var_48] 0 +
mov esi esp +
mov ecx esp +
mov edi [ecx] +
add ecx 4 +
lea edx [edi-1010101h] +
not edi  +
and edx edi +
and edx 80808080h +
jz loc_489333  +
mov edi edx +
shr edi 10h +
test edx 8080h +
cmovz edx edi +
lea edi [ecx+2] +
cmovz ecx edi +
add dl dl +
sbb ecx 3 +
sub ecx esi +
jz loc_489384  +
mov edx esi +
call sub_488F80  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_4BB0C8 +
add ebx 3 +
call sub_488D60  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [ebx+1] +
add ebx 1 +
mov dl 1 +
mov [esp+48h+var_48] 2Dh +
movzx esi cl +
test ds:byte_4B8121[esi+esi] 1 +
jnz loc_489293  +
add esp 40h +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_4BB0D0 +
add ebx 3 +
call sub_488D60  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset aInf +
add ebx 4 +
call sub_488D60  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+edx+48h+var_48] 2Dh +
lea ebx [esi+2] +
movzx esi byte ptr [esi+2] +
lea edx [ecx+2] +
jmp loc_4892FD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov esi [esp+2Ch+arg_0] +
jz loc_489467  +
mov ebx eax +
movzx eax byte ptr [edx] +
test al al +
jz loc_489467  +
lea edi [eax-30h] +
mov ebp ecx +
mov ecx edi +
cmp cl 47h +
ja loc_489467  +
movzx edi cl +
jmp ds:off_4BB10C[edi*4]  +
add edx 1 +
mov byte ptr [esp+2Ch+var_12] al +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call strtol  +
mov ebp [esp+2Ch+var_12+2] +
test ebp ebp +
mov edi eax +
jz loc_489467  +
test eax eax +
js loc_489467  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_489645  +
xor esi esi +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
lea ecx [edx+1] +
sub eax 30h +
cmp al 9 +
ja loc_489467  +
mov edx ecx +
mov eax esi +
movsx ecx al +
mov eax ebx +
call sub_488FB0  +
add esp 2Ch +
pop ebx  +
mov esi eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
add edx 1 +
cmp al 48h +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
jz loc_489803  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_489467  +
test eax eax +
js loc_489467  +
mov edx offset asc_4BB0FC +
mov eax ebx +
call sub_488D60  +
jmp loc_489505  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_489400  +
test edi edi +
mov esi eax +
jz loc_489505  +
mov edx offset asc_4BB100 +
mov eax ebx +
call sub_488D60  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_4894E1  +
mov edx offset asc_4BB103 +
mov eax ebx +
call sub_488D60  +
jmp loc_489469  +
lea edi [edx+1] +
mov eax ebx +
mov edx offset asc_4BB0E3 +
call sub_488D60  +
mov eax esi +
mov edx edi +
movsx ecx al +
mov eax ebx +
call sub_488FB0  +
mov esi eax +
jmp loc_489469  +
add edx 1 +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_20] ebp +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_489467  +
test eax eax +
js loc_489467  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jz loc_48958A  +
mov edx ebp +
mov eax ebx +
call sub_488D60  +
mov edx offset asc_4BB105 +
mov eax ebx +
call sub_488D60  +
jmp loc_4895BC  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_489400  +
test edi edi +
mov esi eax +
jz loc_4895BC  +
mov edx offset asc_4BB100 +
mov eax ebx +
call sub_488D60  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_489598  +
mov edx offset asc_4BB107 +
mov eax ebx +
call sub_488D60  +
jmp loc_489469  +
add edx 1 +
mov eax ebx +
call sub_489230  +
mov edx offset asc_4BB0E5 +
mov esi eax +
mov eax ebx +
call sub_488D60  +
test esi esi +
jz loc_489467  +
cmp byte ptr [esi] 63h +
jnz loc_489467  +
lea edx [esi+1] +
mov eax ebx +
call sub_489230  +
mov edx offset aI +
mov esi eax +
mov eax ebx +
call sub_488D60  +
jmp loc_489469  +
add edx 1 +
mov eax ebx +
call sub_489230  +
mov esi eax +
jmp loc_489469  +
lea esi [edx+1] +
mov eax ebx +
mov edx offset aNull +
call sub_488D60  +
jmp loc_489469  +
mov edx offset asc_4BB0E9 +
mov eax ebx +
call sub_488D60  +
test edi edi +
lea esi [ebp+1] +
jz loc_489881  +
movzx edx byte ptr [ebp+1] +
movzx eax dl +
test ds:byte_4B8121[eax+eax] 1 +
jz loc_489467  +
movzx ecx byte ptr [ebp+2] +
movzx eax cl +
test ds:byte_4B8121[eax+eax] 1 +
jz loc_489467  +
mov eax edx +
lea edx [eax-61h] +
lea ebp [edi-1] +
xor edi edi +
cmp dl 5 +
ja loc_489711  +
sub eax 57h +
shl eax 4 +
lea edx [ecx-61h] +
cmp dl 5 +
ja loc_48972F  +
sub ecx 57h +
or eax ecx +
lea edx [eax-9] +
cmp dl 17h +
mov byte ptr [esp+2Ch+var_12+1] al +
ja loc_489794  +
movzx edx dl +
jmp ds:off_4BB22C[edx*4]  +
mov edx offset asc_4BB0EB +
mov eax ebx +
call sub_488D60  +
add esi 2 +
cmp edi ebp +
jz loc_489881  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_4B8121[edx+edx] 1 +
jz loc_489467  +
movzx ecx byte ptr [esi+1] +
add edi 1 +
movzx edx cl +
test ds:byte_4B8121[edx+edx] 1 +
jz loc_489467  +
lea edx [eax-61h] +
cmp dl 5 +
jbe loc_489695  +
lea edx [eax-41h] +
cmp dl 5 +
ja loc_4897C6  +
sub eax 37h +
lea edx [ecx-61h] +
shl eax 4 +
cmp dl 5 +
jbe loc_4896A7  +
lea edx [ecx-41h] +
cmp dl 5 +
ja loc_4897B6  +
sub ecx 37h +
jmp loc_4896AA  +
mov edx offset aR_2 +
mov eax ebx +
call sub_488D60  +
jmp loc_4896D2  +
mov edx offset aF +
mov eax ebx +
call sub_488D60  +
jmp loc_4896D2  +
mov edx offset aV_1 +
mov eax ebx +
call sub_488D60  +
jmp loc_4896D2  +
mov edx offset aN +
mov eax ebx +
call sub_488D60  +
jmp loc_4896D2  +
mov edx offset aT +
mov eax ebx +
call sub_488D60  +
jmp loc_4896D2  +
movzx eax al +
test ds:byte_4B8120[eax+eax] 10h +
jz loc_4897E4  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12+1] +
call sub_488F80  +
jmp loc_4896D2  +
lea edx [ecx-30h] +
xor ecx ecx +
cmp dl 9 +
cmovbe ecx edx +
jmp loc_4896AA  +
lea edx [eax-30h] +
mov eax edx +
shl eax 4 +
mov byte ptr [esp+2Ch+var_20] al +
xor eax eax +
cmp dl 9 +
movzx edx byte ptr [esp+2Ch+var_20] +
cmovbe eax edx +
jmp loc_48969B  +
mov eax ebx +
mov edx offset asc_4BB07D +
call sub_488D60  +
mov ecx 2 +
mov edx esi +
mov eax ebx +
call sub_488F80  +
jmp loc_4896D2  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_489467  +
test eax eax +
js loc_489467  +
mov edx offset asc_4BB0FC +
mov eax ebx +
call sub_488D60  +
jmp loc_489874  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_489400  +
mov edx (offset asc_4BB0FC+2) +
mov esi eax +
mov eax ebx +
call sub_488D60  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_489400  +
test edi edi +
mov esi eax +
jz loc_489874  +
mov edx offset asc_4BB100 +
mov eax ebx +
call sub_488D60  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_489830  +
jmp loc_48950D  +
mov edx offset asc_4BB0E9 +
mov eax ebx +
call sub_488D60  +
cmp byte ptr [esp+2Ch+var_12] 61h +
jz loc_489469  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12] +
call sub_488F80  +
jmp loc_489469  +
***
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_489926  +
movzx ecx byte ptr [edx] +
mov esi eax +
test cl cl +
jz loc_489926  +
cmp cl 4Fh +
jz loc_489930  +
jle loc_489905  +
cmp cl 78h +
nop   +
jz loc_4898F0  +
cmp cl 79h +
jnz loc_489947  +
mov eax esi +
mov edx offset aImmutable_0 +
call sub_488D60  +
lea eax [ebx+1] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
mov edx offset aConst_2 +
call sub_488D60  +
add esp 4 +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
retn   +
cmp cl 4Eh +
jnz loc_489947  +
cmp byte ptr [ebx+1] 67h +
jnz loc_489926  +
mov edx offset aInout +
mov eax esi +
add ebx 2 +
call sub_488D60  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_4898C4  +
xor eax eax +
jmp loc_4898E6  +
add ebx 1 +
mov edx offset aShared_0 +
mov eax esi +
call sub_488D60  +
test ebx ebx +
jnz loc_48991F  +
xor eax eax +
jmp loc_4898E6  +
add esp 4 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
jz loc_489978  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_489978  +
sub edx 41h +
cmp dl 39h +
ja loc_489978  +
movzx edx dl +
mov esi eax +
jmp ds:off_4BB38C[edx*4]  +
xor eax eax +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 69h +
jz loc_489E1C  +
cmp al 6Bh +
jnz loc_489978  +
mov eax esi +
mov edx offset aUcent +
call sub_488D60  +
lea eax [ebx+2] +
jmp loc_489980  +
add ebx 1 +
mov edx offset aImmutable +
mov eax esi +
call sub_488D60  +
mov edx ebx +
mov eax esi +
call sub_489950  +
mov edx offset asc_4BB107 +
mov ebx eax +
mov eax esi +
call sub_488D60  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edx offset aConst_1 +
jmp loc_4899B8  +
mov edx offset aDchar +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aVoid_3 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aWchar_0 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aUshort +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aShort_3 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aCdouble +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aCfloat +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aIdouble +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aIfloat +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aNone +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aUlong +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aLong_3 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aUint +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aIreal +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aInt_2 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aUbyte +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aByte +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aFloat_3 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aReal_0 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aDouble_3 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aCreal +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aBool_1 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
mov edx offset aChar_3 +
call sub_488D60  +
lea eax [ebx+1] +
jmp loc_489980  +
lea edx [ebx+1] +
call sub_489950  +
mov edx offset asc_4BB2DB +
mov ebx eax +
mov eax esi +
call sub_488D60  +
mov eax ebx +
jmp loc_489980  +
add ebx 1 +
mov edx offset aShared +
jmp loc_4899B8  +
movzx edx byte ptr [ebx+1] +
cmp dl 67h +
jz loc_489E6C  +
xor eax eax +
cmp dl 68h +
jnz loc_489980  +
add ebx 2 +
mov edx offset a__vector_0 +
jmp loc_4899B8  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_489950  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_489E50  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_489950  +
mov edx offset asc_4BB0FC +
mov ebx eax +
mov eax esi +
call sub_488D60  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_489C55  +
mov ecx edi +
mov eax esi +
call sub_488F80  +
mov edx offset asc_4BB103 +
mov eax esi +
call sub_488D60  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_4899D6  +
mov [esp+2Ch+var_2C] edx +
call free  +
mov eax ebx +
jmp loc_4899D8  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_4898B0  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_489E30  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_489FF0  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_488D60  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_489CE4  +
mov ecx edi +
mov eax esi +
call sub_488F80  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jnz loc_489C6D  +
mov eax ebx +
jmp loc_4899D8  +
lea edx [ebx+1] +
mov ecx 2 +
call sub_48A640  +
jmp loc_489980  +
add ebx 1 +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
call strtol  +
mov edi [esp+2Ch+var_18] +
test edi edi +
mov ebx eax +
jz loc_489978  +
test eax eax +
js loc_489978  +
mov edx offset aTuple +
mov eax esi +
call sub_488D60  +
jmp loc_489D5C  +
mov edx edi +
mov eax esi +
call sub_489950  +
test ebx ebx +
mov edi eax +
jz loc_489D5C  +
mov edx offset asc_4BB100 +
mov eax esi +
call sub_488D60  +
sub ebx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_489D41  +
mov eax esi +
mov edx offset asc_4BB107 +
call sub_488D60  +
mov eax edi +
jmp loc_489980  +
lea edx [ebx+1] +
call sub_489950  +
mov edx offset asc_4BB2D8 +
mov ebx eax +
mov eax esi +
call sub_488D60  +
mov eax ebx +
jmp loc_489980  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
mov edx edi +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_489E79  +
nop   +
lea esi [esi+0] +
mov ebp edx +
add edx 1 +
movzx eax byte ptr [edx] +
sub ebp ebx +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_489DB0  +
mov eax esi +
call sub_489950  +
mov edx offset asc_4BB0FC +
mov ebx eax +
mov eax esi +
call sub_488D60  +
test ebp ebp +
jz loc_489DE8  +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_488F80  +
mov eax esi +
mov edx offset asc_4BB103 +
call sub_488D60  +
mov eax ebx +
jmp loc_489980  +
mov edx ebx +
call sub_489FF0  +
mov edx offset aFunction +
mov ebx eax +
mov eax esi +
call sub_488D60  +
mov eax ebx +
jmp loc_489980  +
mov eax esi +
mov edx offset aCent +
call sub_488D60  +
lea eax [ebx+2] +
jmp loc_489980  +
mov edx eax +
mov eax esi +
call sub_489FF0  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_488D60  +
mov edx [esp+2Ch+var_18] +
jmp loc_489CE4  +
mov edx eax +
mov eax esi +
call sub_489950  +
mov edx offset asc_4BB0FC +
mov ebx eax +
mov eax esi +
call sub_488D60  +
jmp loc_489C55  +
add ebx 2 +
mov edx offset aInout_0 +
jmp loc_4899B8  +
mov eax esi +
call sub_489950  +
mov edx offset asc_4BB0FC +
mov ebx eax +
mov eax esi +
call sub_488D60  +
jmp loc_489DE8  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0Ch +
test edx edx +
jz loc_489FE0  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_489F7C  +
mov esi eax +
xor edi edi +
cmp dl 59h +
jz loc_489F32  +
cmp dl 5Ah +
jz loc_489F27  +
cmp dl 58h +
jz loc_489F10  +
test edi edi +
jnz loc_489F80  +
movzx eax byte ptr [ebx] +
cmp al 4Dh +
jz loc_489FC2  +
cmp al 4Eh +
jz loc_489F91  +
cmp al 4Bh +
jz loc_489F50  +
cmp al 4Ch +
jz loc_489FB1  +
cmp al 4Ah +
jnz loc_489F5F  +
mov edx offset aOut +
mov eax esi +
add ebx 1 +
call sub_488D60  +
jmp loc_489F5F  +
mov eax esi +
mov edx offset unk_4BB474 +
call sub_488D60  +
lea eax [ebx+1] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset a____2 +
call sub_488D60  +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aRef +
mov eax esi +
add ebx 1 +
call sub_488D60  +
mov edx ebx +
mov eax esi +
call sub_489950  +
test eax eax +
mov ebx eax +
jz loc_489FE0  +
movzx edx byte ptr [eax] +
add edi 1 +
test dl dl +
jnz loc_489EC0  +
mov eax ebx +
jmp loc_489F1F  +
mov edx offset asc_4BB100 +
mov eax esi +
call sub_488D60  +
jmp loc_489ED7  +
cmp byte ptr [ebx+1] 6Bh +
jnz loc_489F5F  +
mov eax esi +
mov edx offset aReturn +
lea ebp [ebx+2] +
call sub_488D60  +
movzx eax byte ptr [ebx+2] +
mov ebx ebp +
jmp loc_489EEA  +
mov edx offset aLazy +
mov eax esi +
add ebx 1 +
call sub_488D60  +
jmp loc_489F5F  +
mov eax esi +
mov edx offset aScope +
lea ebp [ebx+1] +
call sub_488D60  +
movzx eax byte ptr [ebx+1] +
mov ebx ebp +
jmp loc_489EE2  +
xor eax eax +
jmp loc_489F1F  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
test edx edx +
jz loc_48A13C  +
cmp byte ptr [edx] 0 +
jz loc_48A13C  +
mov esi eax +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_18] 0 +
call sub_488DA0  +
mov edx eax +
lea eax [esp+4Ch+var_30] +
call sub_488E30  +
mov ecx [esp+4Ch+var_2C] +
mov ebp [esp+4Ch+var_30] +
mov edi ecx +
sub edi ebp +
cmp ebp ecx +
mov edx eax +
cmovz edi ebx +
lea eax [esp+4Ch+var_24] +
call sub_489EA0  +
mov ecx [esp+4Ch+var_20] +
mov ebp [esp+4Ch+var_24] +
mov edx ecx +
sub edx ebp +
cmp ebp ecx +
cmovnz ebx edx +
mov edx eax +
lea eax [esp+4Ch+var_18] +
mov ebp ebx +
call sub_489950  +
mov edx [esp+4Ch+var_18] +
mov ecx [esp+4Ch+var_14] +
cmp edx ecx +
mov ebx eax +
jz loc_48A0B4  +
sub ecx edx +
jnz loc_48A146  +
mov edx offset asc_4BB105 +
mov eax esi +
call sub_488D60  +
test ebp ebp +
mov edx [esp+4Ch+var_24] +
jnz loc_48A164  +
mov edx offset asc_4BB490 +
mov eax esi +
call sub_488D60  +
test edi edi +
mov edx [esp+4Ch+var_30] +
jnz loc_48A152  +
test edx edx +
jz loc_48A104  +
mov [esp+4Ch+var_4C] edx +
call free  +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] 0 +
mov eax [esp+4Ch+var_24] +
test eax eax +
jz loc_48A12C  +
mov [esp+4Ch+var_4C] eax +
call free  +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_24] 0 +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_48A13C  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_488F80  +
jmp loc_48A0B4  +
mov ecx edi +
mov eax esi +
call sub_488F80  +
mov edx [esp+4Ch+var_30] +
jmp loc_48A0E0  +
mov ecx ebp +
mov eax esi +
call sub_488F80  +
jmp loc_48A0CC  +
***
push esi  +
push ebx  +
sub esp 3Ch +
test edx edx +
mov [esp+3Ch+var_28] eax +
jz loc_48A294  +
cmp byte ptr [edx] 0 +
jz loc_48A294  +
lea eax [esp+3Ch+var_1C] +
mov esi ecx +
mov [esp+3Ch+var_34] 0Ah +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call strtol  +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
mov [esp+3Ch+var_24] eax +
jz loc_48A294  +
test eax eax +
jle loc_48A294  +
cmp esi 4 +
jz loc_48A2B7  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov edi [esp+3Ch+var_24] +
cmp eax edi +
jb loc_48A294  +
cmp edi 4 +
jle loc_48A2A0  +
mov edi offset a__t_0 +
mov ecx 3 +
mov esi ebx +
cmps   +
jnz loc_48A2A0  +
movzx eax byte ptr [ebx+3] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_48A294  +
cmp al 30h +
jz loc_48A294  +
mov esi [esp+3Ch+var_28] +
lea edx [ebx+3] +
mov ecx 3 +
mov eax esi +
call sub_48A180  +
mov edx offset asc_4BB49A +
mov edi eax +
mov eax esi +
call sub_488D60  +
test edi edi +
jz loc_48A286  +
movzx eax byte ptr [edi] +
test al al +
jz loc_48A519  +
xor esi esi +
cmp al 5Ah +
jz loc_48A633  +
test esi esi +
jnz loc_48A4C7  +
movzx eax byte ptr [edi] +
cmp al 48h +
jz loc_48A4E0  +
cmp al 54h +
jz loc_48A5B0  +
cmp al 56h +
jz loc_48A540  +
cmp al 53h +
lea esi [esi+0] +
jz loc_48A4F0  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4BB107 +
call sub_488D60  +
xor esi esi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
sub eax 6 +
cmp eax 6 +
ja loc_48A3B0  +
jmp ds:off_4BB544[eax*4]  +
mov eax [esp+3Ch+var_28] +
xor edi edi +
mov ebp [esp+3Ch+var_24] +
mov edx [eax] +
mov eax [eax+4] +
mov ecx eax +
sub ecx edx +
cmp edx eax +
cmovz ecx edi +
mov edx ebx +
mov [esp+3Ch+var_20] ecx +
jmp loc_48A34A  +
mov [esp+3Ch+var_1C] 0 +
movzx eax byte ptr [edx] +
mov ebp [esp+3Ch+var_24] +
test ds:byte_4B8120[eax+eax] 4 +
jnz loc_48A35D  +
mov edi offset a_d +
mov esi edx +
mov ecx 2 +
cmps   +
jz loc_48A380  +
mov eax edx +
sub eax ebx +
cmp eax ebp +
jz loc_48A4C0  +
mov eax 66666667h +
imul  ebp +
mov eax [esp+3Ch+var_28] +
sar ebp 1Fh +
sar edx 2 +
mov ecx [eax+4] +
sub edx ebp +
mov ebp edx +
mov edx [eax] +
xor eax eax +
mov esi ecx +
sub esi edx +
cmp edx ecx +
cmovnz eax esi +
cmp [esp+3Ch+var_20] eax +
js loc_48A373  +
lea edx [ebx-1] +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
jz loc_48A294  +
test ebp ebp +
jz loc_48A2D7  +
movzx eax byte ptr [edx] +
mov ebx edx +
test ds:byte_4B8120[eax+eax] 4 +
jz loc_48A2F0  +
mov eax [esp+3Ch+var_28] +
mov ecx 3 +
call sub_48A640  +
mov edx eax +
test edx edx +
jnz loc_48A304  +
jmp loc_48A310  +
mov eax [esp+3Ch+var_28] +
add edx [esp+3Ch+var_20] +
mov [eax+4] edx +
jmp loc_48A33B  +
mov eax [esp+3Ch+var_28] +
add edx 2 +
mov ecx 1 +
call sub_48A640  +
mov edx eax +
jmp loc_48A36D  +
mov edi offset a__postblitmfz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jz loc_48A5DC  +
lea esi [esi+0] +
mov esi [esp+3Ch+var_24] +
mov edx ebx +
mov eax [esp+3Ch+var_28] +
mov ecx esi +
add esi ebx +
call sub_488F80  +
jmp loc_48A296  +
mov edi offset a__classz +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_48A3B0  +
mov edx offset aClassinfoFor +
jmp loc_48A450  +
mov ecx [esp+3Ch+var_24] +
mov eax 7 +
mov edi offset a__ctor +
mov esi ebx +
cmp ecx 7 +
cmovg ecx eax +
cmp ecx ecx +
cmps   +
jz loc_48A5C3  +
mov edi [esp+3Ch+var_24] +
mov esi ebx +
cmp edi 7 +
cmovle eax edi +
mov edi offset a__dtor +
mov ecx eax +
cmp eax eax +
cmps   +
jz loc_48A5F7  +
mov edi offset a__initz +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_48A61A  +
mov edi offset a__vtblz +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_48A3B0  +
mov edx offset aVtableFor_0 +
lea esi [esi+0] +
mov edi [esp+3Ch+var_28] +
mov eax edi +
call sub_488F10  +
mov eax [edi] +
mov edx [edi+4] +
cmp eax edx +
jz loc_48A610  +
sub edx eax +
sub edx 1 +
mov edi [esp+3Ch+var_28] +
add eax edx +
mov esi [esp+3Ch+var_24] +
mov [edi+4] eax +
add esi ebx +
jmp loc_48A296  +
mov edi offset a__moduleinfoz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jnz loc_48A3B0  +
mov edx offset aModuleinfoFor +
jmp loc_48A450  +
mov edi offset a__interfacez +
mov ecx 0Ch +
mov esi ebx +
cmps   +
jnz loc_48A3B0  +
mov edx offset aInterfaceFor +
jmp loc_48A450  +
mov esi edx +
jmp loc_48A296  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4BB100 +
call sub_488D60  +
jmp loc_48A25F  +
movzx eax byte ptr [edi+1] +
add edi 1 +
jmp loc_48A26A  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
mov ecx 4 +
call sub_48A640  +
mov edi eax +
test edi edi +
jz loc_48A286  +
movzx eax byte ptr [edi] +
add esi 1 +
test al al +
jnz loc_48A24F  +
mov esi edi +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4BB107 +
call sub_488D60  +
mov eax esi +
sub eax ebx +
cmp [esp+3Ch+var_24] eax +
mov eax 0 +
cmovnz esi eax +
jmp loc_48A296  +
lea edx [edi+1] +
movsx ebp byte ptr [edi+1] +
lea eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_18] 0 +
call sub_489950  +
mov edx 1 +
mov edi eax +
lea eax [esp+3Ch+var_18] +
call sub_488CF0  +
mov eax [esp+3Ch+var_14] +
mov edx edi +
mov byte ptr [eax] 0 +
mov eax [esp+3Ch+var_28] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_489400  +
mov edi eax +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_48A503  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_48A503  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
call sub_489950  +
mov edi eax +
jmp loc_48A503  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_1 +
call sub_488D60  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_48A296  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThisThis +
call sub_488D60  +
mov eax [esp+3Ch+var_24] +
lea esi [ebx+eax+3] +
jmp loc_48A296  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_2 +
call sub_488D60  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_48A296  +
mov edx 0FFFFFFFFh +
jmp loc_48A46D  +
mov eax [esp+3Ch+var_28] +
mov edx offset aInit +
call sub_488D60  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_48A296  +
lea esi [edi+1] +
jmp loc_48A51B  +
***
push edi  +
mov edi 1 +
push esi  +
mov esi edi +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+48h+var_3C] ecx +
jmp loc_48A6A4  +
movzx eax byte ptr [eax] +
cmp al 4Dh +
mov ecx eax +
jz loc_48A892  +
sub ecx 46h +
cmp cl 11h +
ja loc_48A680  +
mov edx 1 +
shl edx cl +
and edx 39001h +
jnz loc_48A720  +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jz loc_48A853  +
test esi esi +
jz loc_48A6A1  +
mov edx offset unk_4BB560 +
mov eax ebp +
call sub_488D60  +
add esi 1 +
mov ecx [esp+48h+var_3C] +
mov edx ebx +
mov eax ebp +
call sub_48A180  +
test eax eax +
mov ebx eax +
jnz loc_48A658  +
cmp [esp+48h+var_3C] 1 +
jbe loc_48A6C5  +
xor edx edx +
jmp loc_48A860  +
xor ebx ebx +
mov eax [ebp+4] +
xor edi edi +
mov edx [ebp+0] +
mov esi eax +
sub esi edx +
cmp edx eax +
mov edx ebx +
mov eax ebp +
cmovz esi edi +
call sub_489950  +
mov ebx [ebp+4] +
mov edx [ebp+0] +
mov ecx ebx +
sub ecx edx +
cmp edx ebx +
cmovz ecx edi +
cmp esi ecx +
js loc_48A910  +
mov edx eax +
mov eax [esp+48h+var_3C] +
test eax eax +
jnz loc_48A860  +
test edx edx +
jz loc_48A6BE  +
cmp byte ptr [edx] 0 +
jnz loc_48A6BE  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Dh +
jnz loc_48A72B  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
cmp al 56h +
jz loc_48A870  +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_30] 0 +
mov edx ebx +
xor edi edi +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
call sub_4898B0  +
mov edx [ebp+4] +
mov ecx [ebp+0] +
mov ebx edx +
sub ebx ecx +
cmp ecx edx +
mov edx eax +
mov eax ebp +
cmovz ebx edi +
call sub_488DA0  +
mov edx eax +
mov eax ebp +
call sub_488E30  +
mov ecx [ebp+0] +
mov [esp+48h+var_38] eax +
mov eax [ebp+4] +
mov edx eax +
sub edx ecx +
cmp ecx eax +
cmovnz edi edx +
cmp ebx edi +
js loc_48A8C8  +
mov edx offset asc_4BB105 +
mov eax ebp +
call sub_488D60  +
mov edx [esp+48h+var_38] +
mov eax ebp +
call sub_489EA0  +
mov edx offset asc_4BB107 +
mov ebx eax +
mov eax ebp +
call sub_488D60  +
mov edx [esp+48h+var_24] +
mov ecx [esp+48h+var_20] +
cmp edx ecx +
jz loc_48A7E9  +
sub ecx edx +
jz loc_48A7E9  +
mov eax ebp +
call sub_488F80  +
mov edx [esp+48h+var_24] +
test edx edx +
jz loc_48A80D  +
mov [esp+48h+var_48] edx +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
test ebx ebx +
jnz loc_48A837  +
cmp [esp+48h+var_29] 0 +
jz loc_48A837  +
mov ecx [ebp+4] +
xor eax eax +
mov edx [ebp+0] +
mov ebx ecx +
sub ebx edx +
cmp edx ecx +
cmovnz eax ebx +
mov ebx [esp+48h+var_30] +
cmp [esp+48h+var_34] eax +
js loc_48A8F4  +
test ebx ebx +
jz loc_48A6B7  +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_4B8120[edx+edx] 4 +
jnz loc_48A691  +
cmp [esp+48h+var_3C] 1 +
mov edx ebx +
jbe loc_48A900  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov edx [ebp+4] +
cmp eax edx +
jz loc_48A920  +
sub edx eax +
mov [esp+48h+var_34] edx +
setnz [esp+48h+var_29]  +
mov [esp+48h+var_30] ebx +
jmp loc_48A748  +
lea edi [ebx+1] +
mov [esp+48h+var_38] edi +
mov ecx edi +
xor edi edi +
movzx edx byte ptr [ecx] +
cmp dl 4Fh +
jz loc_48A8C0  +
jg loc_48A8D2  +
cmp dl 4Eh +
jnz loc_48A8F0  +
cmp byte ptr [ecx+1] 67h +
jnz loc_48A8F0  +
add ecx 2 +
movzx edx byte ptr [ecx] +
add edi 2 +
cmp dl 4Fh +
jnz loc_48A8A5  +
add ecx 1 +
add edi 1 +
jmp loc_48A89D  +
add ecx ebx +
mov [ebp+4] ecx +
jmp loc_48A7A9  +
sub edx 78h +
cmp dl 1 +
ja loc_48A8F0  +
mov edx 1 +
mov ecx [esp+48h+var_38] +
add ecx edi +
movzx ecx byte ptr [ecx+edx] +
jmp loc_48A665  +
xor edx edx +
jmp loc_48A8DF  +
add edx [esp+48h+var_34] +
mov [ebp+4] edx +
jmp loc_48A837  +
cmp al 5Ah +
jnz loc_48A6C7  +
lea eax [ebx+1] +
jmp loc_48A6F8  +
add edx esi +
mov [ebp+4] edx +
jmp loc_48A6F8  +
mov [esp+48h+var_30] ebx +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
jmp loc_48A748  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
test edx edx +
jz loc_48A9E1  +
cmp byte ptr [edx] 0 +
jz loc_48A9E1  +
mov edi offset a_d +
mov ecx 2 +
mov esi edx +
cmps   +
jnz loc_48A9E1  +
mov [esp+24h+var_8] 0 +
mov edi offset a_dmain +
mov ecx 7 +
mov [esp+24h+var_C] 0 +
mov esi edx +
mov [esp+24h+var_10] 0 +
cmps   +
jz loc_48A9F0  +
lea edi [esp+24h+var_10] +
add edx 2 +
xor ecx ecx +
mov eax edi +
call sub_48A640  +
mov edx [esp+24h+var_10] +
test eax eax +
jz loc_48A9D5  +
mov ecx [esp+24h+var_C] +
cmp edx ecx +
jz loc_48A9E1  +
sub ecx edx +
test ecx ecx +
jle loc_48A9E1  +
mov eax edi +
mov edx 1 +
call sub_488CF0  +
mov eax [esp+24h+var_C] +
mov byte ptr [eax] 0 +
mov eax [esp+24h+var_10] +
add esp 24h +
pop esi  +
pop edi  +
retn   +
test edx edx +
jz loc_48A9AA  +
mov [esp+24h+var_24] edx +
call free  +
add esp 24h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
lea edi [esp+24h+var_10] +
mov edx offset aDMain +
mov eax edi +
call sub_488D60  +
mov edx [esp+24h+var_10] +
mov ecx [esp+24h+var_C] +
jmp loc_48A9AE  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [ebx+5] +
cmp edx eax +
jge loc_48ACBB  +
mov ecx [esp+3Ch+arg_0] +
sub eax ebx +
mov edi offset aXxxxxx +
lea ebx [ecx+eax-6] +
mov ecx 6 +
mov esi ebx +
cmps   +
jnz loc_48ACBB  +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] eax +
call sub_48D150  +
mov eax [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
cdq   +
shld edx eax +
mov edi ebp +
shl eax 10h +
sar edi 1Fh +
xor ebp eax +
mov eax edx +
xor eax edi +
mov [esp+3Ch+var_20] eax +
call _getpid  +
xor ebp eax +
mov ecx eax +
mov eax [esp+3Ch+var_20] +
sar ecx 1Fh +
mov esi ebp +
mov ebp 7FFFh +
xor eax ecx +
mov edi eax +
add esi ds:dword_4C1648 +
adc edi ds:dword_4C164C +
mov ds:dword_4C1648 esi +
mov ds:dword_4C164C edi +
jmp loc_48AAFC  +
call ds:__imp__errno  +
cmp dword ptr [eax] 11h +
jz loc_48AAD2  +
call ds:__imp__errno  +
cmp dword ptr [eax] 15h +
jnz loc_48ACA7  +
mov esi ds:dword_4C1648 +
mov edi ds:dword_4C164C +
add esi 1E61h +
adc edi 0 +
sub ebp 1 +
mov ds:dword_4C1648 esi +
mov ds:dword_4C164C edi +
jz loc_48ACA7  +
mov [esp-3Ch+arg_28] esi +
mov [esp-3Ch+arg_2C] edi +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
call sub_48C100  +
movzx eax ds:byte_4BB5A0[eax] +
mov [ebx] al +
mov [esp-3Ch+arg_28] esi +
mov [esp-3Ch+arg_2C] edi +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
call sub_48C250  +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
mov [esp-3Ch+arg_28] eax +
mov esi eax +
mov edi edx +
mov [esp-3Ch+arg_2C] edx +
call sub_48C100  +
movzx eax ds:byte_4BB5A0[eax] +
mov [ebx+1] al +
mov [esp-3Ch+arg_28] esi +
mov [esp-3Ch+arg_2C] edi +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
call sub_48C250  +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
mov [esp-3Ch+arg_28] eax +
mov esi eax +
mov edi edx +
mov [esp-3Ch+arg_2C] edx +
call sub_48C100  +
movzx eax ds:byte_4BB5A0[eax] +
mov [ebx+2] al +
mov [esp-3Ch+arg_28] esi +
mov [esp-3Ch+arg_2C] edi +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
call sub_48C250  +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
mov [esp-3Ch+arg_28] eax +
mov esi eax +
mov edi edx +
mov [esp-3Ch+arg_2C] edx +
call sub_48C100  +
movzx eax ds:byte_4BB5A0[eax] +
mov [ebx+3] al +
mov [esp-3Ch+arg_28] esi +
mov [esp-3Ch+arg_2C] edi +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
call sub_48C250  +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
mov [esp-3Ch+arg_28] eax +
mov esi eax +
mov edi edx +
mov [esp-3Ch+arg_2C] edx +
call sub_48C100  +
movzx eax ds:byte_4BB5A0[eax] +
mov [ebx+4] al +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
mov [esp-3Ch+arg_28] esi +
mov [esp-3Ch+arg_2C] edi +
call sub_48C250  +
mov [esp-3Ch+arg_30] 3Eh +
mov [esp-3Ch+arg_34] 0 +
mov [esp-3Ch+arg_28] eax +
mov [esp-3Ch+arg_2C] edx +
call sub_48C100  +
movzx eax ds:byte_4BB5A0[eax] +
mov [ebx+5] al +
mov eax [esp-3Ch+arg_78] +
mov [esp-3Ch+arg_30] 180h +
mov [esp-3Ch+arg_2C] 8502h +
mov [esp-3Ch+arg_28] eax +
call _open  +
test eax eax +
js loc_48AAB8  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-3Ch+arg_78] +
mov byte ptr [eax] 0 +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_48ACF0  +
cmp eax 3 +
jz loc_48ACF0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_48B9F0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_492FEC 2 +
mov eax [esp+18h+arg_4] +
jz loc_48AD3B  +
mov dword_492FEC 2 +
cmp eax 2 +
jz loc_48AD51  +
cmp eax 1 +
jz loc_48AD80  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_4C3030 +
cmp ebx offset unk_4C3030 +
jz loc_48AD45  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_48AD68  +
call eax  +
add ebx 4 +
cmp ebx offset unk_4C3030 +
jnz loc_48AD60  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_48B9F0  +
jmp loc_48AD45  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_4C1A20 +
mov [esp+28h+var_28] eax +
call sub_48ADC0  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_48AE80  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_4C1A20 +
mov [esp+28h+var_28] eax +
call sub_48ADC0  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_4C1A1C +
mov [esp+28h+var_28] eax +
call sub_48ADC0  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_48ADD0  +
mov ds:dword_4C1A20 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_48ADD0  +
mov [esp+28h+var_28] 8 +
mov ds:dword_4C1A1C eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_48ADE0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_48AF18  +
cmp eax 0C000008Dh +
jnb loc_48AF80  +
cmp eax 0C0000005h +
jnz loc_48AF87  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_48AFB6  +
test eax eax +
jz loc_48AF2D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_48AF6D  +
cmp eax 0C0000094h +
jz loc_48AF41  +
cmp eax 0C0000096h +
jz loc_48AF8E  +
cmp eax 0C0000093h +
jz loc_48AF80  +
mov eax ds:dword_4C1674 +
test eax eax +
jz loc_48AF72  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_48AFE6  +
test eax eax +
jz loc_48AF2D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_48AF43  +
cmp eax 0C000001Dh +
jnz loc_48AF2D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_48AFD0  +
test eax eax +
jz loc_48AF2D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_48AF6D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_48AF6D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_48AF6D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_48AF6D  +
call sub_48B650  +
jmp loc_48AF6D  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_4C1678 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_48B061  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_48B067  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_4C1678 eax +
jmp loc_48D4C0  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_48B09D  +
mov edx ds:off_4BB700[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_48B140  +
***
push edi  +
mov eax ds:dword_4C167C +
retn   +
***
call eax  +
mov eax off_492FE8 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_492FE8 edx +
test eax eax +
jnz loc_48B670  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_491760 +
cmp ebx 0FFFFFFFFh +
jz loc_48B6C3  +
test ebx ebx +
jz loc_48B6B2  +
call ds:dword_491760[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_48B6A3  +
mov [esp+18h+var_18] offset dword_48B660 +
call sub_48AEA0  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_48B6C9  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_491760[eax*4] +
test edx edx +
jnz loc_48B6C7  +
jmp loc_48B69F  +
***
mov eax ds:dword_4C1688 +
test eax eax +
jz loc_48B6F0  +
retn   +
mov ds:dword_4C1688 1 +
jmp sub_48B690  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_492FFC +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_48B732  +
not eax  +
mov dword_493000 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_48B7A0  +
mov eax esi +
not eax  +
mov dword_492FFC esi +
mov dword_493000 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_48B78C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_4C19E8 +
call ds:EnterCriticalSection  +
mov edi ds:dword_4C19E0 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_48B899  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_48B892  +
test ebx ebx +
jz loc_48B892  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_48B870  +
mov [esp+28h+var_28] offset unk_4C19E8 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_48B8C0  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_4C19E4 +
test eax eax +
jnz loc_48B8E0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_48B93C  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_4C19E8 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_4C19E0 +
mov ds:dword_4C19E0 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_4C19E8 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_48B8D3  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_4C19E4 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_48B970  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_4C19E8 +
call ds:EnterCriticalSection  +
mov edx ds:dword_4C19E0 +
sub esp 4 +
test edx edx +
jz loc_48B9A1  +
mov eax [edx] +
cmp eax ebx +
jnz loc_48B99A  +
jmp loc_48B9D8  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_48B9B8  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_48B992  +
mov dword ptr [esp] offset unk_4C19E8 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_4C19E8 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_48B9B1  +
***
mov eax [edx+8] +
mov ds:dword_4C19E0 eax +
mov eax edx +
jmp loc_48B9BE  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_48BA44  +
jb loc_48BA15  +
cmp eax 3 +
jnz loc_48BA0E  +
mov eax ds:dword_4C19E4 +
test eax eax +
jnz loc_48BA72  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_4C19E4 +
test eax eax +
jnz loc_48BA80  +
mov eax ds:dword_4C19E4 +
cmp eax 1 +
jnz loc_48BA0E  +
mov ds:dword_4C19E4 0 +
mov [esp+18h+var_18] offset unk_4C19E8 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_48BA0E  +
mov eax ds:dword_4C19E4 +
test eax eax +
jz loc_48BA60  +
mov ds:dword_4C19E4 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_4C19E8 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_48BA4D  +
call sub_48B840  +
jmp loc_48BA0E  +
call sub_48B840  +
jmp loc_48BA1E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_48BAA0  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_48BAC0  +
xor eax eax +
retn   +
***
jmp sub_48BA90  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_48BB08  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_48BAFE  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_48BB0A  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_48BAF0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_48BB35  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_48BB40  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_48BA90  +
test eax eax +
jz loc_48BB35  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_48BB7A  +
jmp loc_48BB35  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_48BBA0  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_48BB70  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_48BBC8  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_48BA90  +
test eax eax +
jz loc_48BBC1  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_48BAD0  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_48BC12  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_48BA90  +
test eax eax +
jz loc_48BC0E  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_48BC48  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_48BA90  +
test eax eax +
jz loc_48BC43  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_48BC43  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_48BC83  +
test ebx ebx +
jz loc_48BC94  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_48BC76  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_48BCB0  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_48BA90  +
test eax eax +
jz loc_48BCAB  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_48BCE0  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_48BA90  +
test eax eax +
jz loc_48BD16  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_48BAD0  +
test eax eax +
jz loc_48BD20  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_48BD16  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_48BD50  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_48BA90  +
test eax eax +
jz loc_48BD47  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_48BD47  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_48BAD0  +
test eax eax +
jz loc_48BD47  +
add esi 400000h +
mov edx esi +
jnz loc_48BD96  +
jmp loc_48BD47  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_48BDA4  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_48BDC0  +
test ebx ebx +
jg loc_48BD90  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_48BDF2  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_48BDDD  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_48BEB0  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_48BECA  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_48BE52  +
cmp ecx esi +
jbe loc_48BE74  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_48BE5A  +
cmp edx esi +
jbe loc_48BE93  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_48BE6C  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_48BE83  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_48BE5A  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_48BEE0  +
cmp ecx eax +
jbe loc_48BEA3  +
cmp edx esi +
jnb loc_48BE56  +
xor esi esi +
mov ebx 1 +
jmp loc_48BE5A  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_48BE36  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_48BE36  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_48BF50  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_48BF3F  +
cmp esi edx +
jz loc_48BF50  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_48BE5A  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_48BE5A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
test ebx ebx +
mov ebp ebx +
mov edx eax +
mov [esp+1Ch+var_1C] 0 +
js loc_48C030  +
test edx edx +
mov ecx esi +
mov ebx eax +
js loc_48C023  +
mov edx ebx +
mov eax edi +
test edx edx +
mov esi ebp +
mov [esp+1Ch+var_18] ecx +
mov ebx edi +
mov [esp+1Ch+var_14] ebp +
jnz loc_48BFC0  +
cmp ecx ebp +
jbe loc_48C006  +
mov edx ebp +
div  ecx +
mov esi edx +
mov eax esi +
xor edx edx +
jmp loc_48BFC8  +
cmp edx ebp +
jbe loc_48BFE0  +
mov eax edi +
mov edx ebp +
mov ecx [esp+1Ch+var_1C] +
test ecx ecx +
jz loc_48BFD6  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
bsr edi edx +
mov [esp+1Ch+var_10] edi +
xor [esp+1Ch+var_10] 1Fh +
jnz loc_48C043  +
cmp ecx eax +
jbe loc_48C0D0  +
cmp edx ebp +
jb loc_48C0D0  +
mov eax ebx +
mov edx [esp+1Ch+var_14] +
jmp loc_48BFC8  +
test ecx ecx +
jnz loc_48C015  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov eax ebx +
div  ecx +
mov esi edx +
jmp loc_48BFB4  +
neg ecx  +
adc ebx 0 +
neg ebx  +
jmp loc_48BF96  +
neg edi  +
adc ebp 0 +
neg ebp  +
mov [esp+1Ch+var_1C] 0FFFFFFFFh +
jmp loc_48BF8A  +
mov ebp [esp+1Ch+var_10] +
mov edi 20h +
sub edi ebp +
mov ecx ebp +
mov ebp [esp+1Ch+var_18] +
shl edx cl +
mov ecx edi +
mov ebx ebp +
shr ebx cl +
mov [esp+1Ch+var_18] ebx +
mov ebx ebp +
mov ebp [esp+1Ch+var_10] +
or [esp+1Ch+var_18] edx +
mov edx esi +
mov ecx ebp +
shl ebx cl +
mov ecx edi +
shr edx cl +
mov ecx ebp +
shl esi cl +
mov ecx edi +
mov [esp+1Ch+var_14] ebx +
mov ebx edx +
mov edx eax +
shr edx cl +
mov ecx ebp +
or edx esi +
shl eax cl +
mov ebp eax +
mov eax edx +
mov edx ebx +
div  [esp+1Ch+var_18] +
mov ebx edx +
mul  [esp+1Ch+var_14] +
cmp ebx edx +
mov esi eax +
mov ecx edx +
jb loc_48C0E4  +
cmp ebp eax +
jb loc_48C0E0  +
mov eax ebp +
mov ebp [esp+1Ch+var_10] +
sub eax esi +
sbb ebx ecx +
mov ecx ebp +
shr eax cl +
mov ecx edi +
mov esi eax +
mov eax ebx +
shl eax cl +
mov ecx ebp +
or esi eax +
shr ebx cl +
mov eax esi +
mov edx ebx +
jmp loc_48BFC8  +
mov eax esi +
sub ebx ecx +
sbb eax edx +
mov [esp+1Ch+var_14] eax +
jmp loc_48BFFE  +
cmp ebx edx +
jnz loc_48C0A6  +
mov ecx edx +
mov esi eax +
sub esi [esp+1Ch+var_14] +
sbb ecx [esp+1Ch+var_18] +
jmp loc_48C0A6  +
***
push esi  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_48C2A0  +
cmp ecx ebp +
ja loc_48C2D2  +
test ecx ecx +
mov ebx ecx +
jnz loc_48C287  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_48C2C6  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_48C2E2  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_48C340  +
cmp esi ebp +
jb loc_48C340  +
xor eax eax +
jmp loc_48C295  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_48C350  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_48C333  +
cmp esi edx +
jz loc_48C350  +
mov eax edi +
xor edx edx +
jmp loc_48C295  +
mov eax 1 +
jmp loc_48C295  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+1Ch+var_1C] eax +
call malloc  +
mov [esp+1Ch+var_1C] edi +
mov esi eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+1Ch+var_1C] eax +
call malloc  +
movzx ecx byte ptr [ebp+0] +
test cl cl +
jz loc_48C582  +
xor ebx ebx +
xor edx edx +
lea esi [esi+0] +
add edx 1 +
mov [esi+ebx*2] cx +
movzx ecx byte ptr [ebp+edx+0] +
mov ebx edx +
test cl cl +
jnz loc_48C510  +
add edx edx +
xor ebx ebx +
mov [esi+edx] bx +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_48C586  +
xor ebx ebx +
xor edx edx +
add edx 1 +
mov [eax+ebx*2] cx +
movzx ecx byte ptr [edi+edx] +
mov ebx edx +
test cl cl +
jnz loc_48C535  +
add edx edx +
mov edi [esp+1Ch+var_10] +
xor ecx ecx +
mov [eax+edx] cx +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] eax +
call sub_48C360  +
mov [esp+1Ch+var_1C] esi +
call free  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
xor edx edx +
jmp loc_48C524  +
xor edx edx +
jmp loc_48C548  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
lea edi [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
mov [esp+1Ch+var_14] esi +
call _vsnprintf  +
test eax eax +
mov ebx eax +
js loc_48C604  +
lea ebp [eax+1] +
mov [esp+1Ch+var_1C] ebp +
call malloc  +
mov edx [esp+1Ch+arg_0] +
test eax eax +
mov [edx] eax +
jz loc_48C610  +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call _vsnprintf  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov byte ptr [eax+ebx] 0 +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 0FFFFFFFFh +
jmp loc_48C604  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_48C648  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_48C63B  +
jmp loc_48C648  +
cmp byte ptr [edx] 0 +
jz loc_48C646  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_48C636  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call fgetpos  +
test eax eax +
jnz loc_48C677  +
mov eax [esp+2Ch+var_14] +
mov edx [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_48C673  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov edx eax +
and edx 3 +
cmp edx 2 +
jz loc_48C6C0  +
xor eax eax +
mov [ebp+0] ebx +
mov dword ptr [ebp+4] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax 108h +
jz loc_48C6AB  +
mov edx [ebp+0] +
sub edx ebx +
mov edi edx +
sar edi 1Fh +
cmp edi 0 +
jl loc_48C6AB  +
jle loc_48C720  +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] edx +
call _fileno  +
mov edx [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call _write  +
mov edx [esp+1Ch+var_10] +
mov ebx eax +
xor edx eax +
sar ebx 1Fh +
mov ecx ebx +
xor ecx edi +
or ecx edx +
jnz loc_48C727  +
mov eax [ebp+0Ch] +
test al 80h +
jz loc_48C718  +
and eax 0FFFFFFFDh +
mov [ebp+0Ch] eax +
mov ebx [ebp+8] +
xor eax eax +
jmp loc_48C6AD  +
cmp edx 0 +
jbe loc_48C6AB  +
jmp loc_48C6D8  +
or dword ptr [ebp+0Ch] 20h +
mov eax 0FFFFFFFFh +
mov ebx [ebp+8] +
jmp loc_48C6AD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
cmp eax 1 +
jz loc_48C785  +
cmp eax 2 +
jz loc_48C7A3  +
test eax eax +
jnz loc_48C7D0  +
mov [esp+2Ch+var_14] esi +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_10] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fsetpos  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fgetpos  +
test eax eax +
jnz loc_48C7E2  +
add [esp+2Ch+var_14] esi +
adc [esp+2Ch+var_10] edi +
jmp loc_48C771  +
mov [esp+2Ch+var_2C] ebx +
lea ebp [esp+2Ch+var_14] +
call fflush  +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_2C] eax +
call _filelengthi64  +
add eax esi +
adc edx edi +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] edx +
jmp loc_48C771  +
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_48C77D  +
mov eax 0FFFFFFFFh +
jmp loc_48C77D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
call _errno  +
mov dword ptr [eax] 0 +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+4] +
test eax eax +
js loc_48C960  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
test edx edx +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_18] edx +
js loc_48C9A1  +
mov edx [ebx+0Ch] +
test edx 108h +
jz loc_48C940  +
mov ecx [ebx] +
mov eax [ebx+8] +
mov esi ecx +
sub esi eax +
test dl 3 +
mov [esp+2Ch+var_10] esi +
jnz loc_48C8E7  +
test dl 80h +
jz loc_48CA72  +
mov esi [esp+2Ch+var_10] +
mov ebp [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_1C] +
mov eax ebp +
or eax edi +
jz loc_48C970  +
and edx 1 +
jz loc_48C980  +
mov edi [ebx+4] +
test edi edi +
jz loc_48C994  +
mov eax [esp+2Ch+var_14] +
add edi [esp+2Ch+var_10] +
mov ecx eax +
and eax 1Fh +
lea eax [eax+eax*4] +
shl eax 3 +
mov edx eax +
mov ebp eax +
mov eax ds:__pioinfo +
sar ecx 5 +
mov eax [eax+ecx*4] +
cmp byte ptr [eax+edx+4] 0 +
js loc_48C9B0  +
mov ecx edi +
xor ebx ebx +
mov eax esi +
xor edx edx +
sub [esp+2Ch+var_1C] ecx +
sbb [esp+2Ch+var_18] ebx +
jmp loc_48C984  +
mov esi [esp+2Ch+var_14] +
mov edi esi +
and esi 1Fh +
sar edi 5 +
mov ebp edi +
lea edi [esi+esi*4] +
mov esi ds:__pioinfo +
shl edi 3 +
add edi [esi+ebp*4] +
mov esi [esp+2Ch+var_10] +
cmp byte ptr [edi+4] 0 +
jns loc_48C87F  +
cmp ecx eax +
jbe loc_48C87B  +
mov ebp [esp+2Ch+var_14] +
mov edi ecx +
xor ecx ecx +
cmp byte ptr [eax] 0Ah +
setz cl  +
add eax 1 +
add esi ecx +
cmp eax edi +
jnz loc_48C920  +
mov [esp+2Ch+var_14] ebp +
jmp loc_48C87F  +
mov eax [ebx+4] +
mov edi [esp+2Ch+var_1C] +
mov ebp [esp+2Ch+var_18] +
cdq   +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edx ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+4] 0 +
jmp loc_48C81D  +
add esp 2Ch +
mov eax esi +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
xor edx edx +
add eax [esp+2Ch+var_1C] +
adc edx [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor edx edx +
xor ecx ecx +
xor ebx ebx +
jmp loc_48C8DA  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_48C954  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 2 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] ecx +
call _lseeki64  +
mov ecx [esp+2Ch+var_10] +
xor edx [esp+2Ch+var_18] +
xor eax [esp+2Ch+var_1C] +
or edx eax +
jnz loc_48CA15  +
mov eax [ebx+8] +
lea ecx [eax+edi] +
cmp eax ecx +
jnb loc_48CA03  +
xor edx edx +
cmp byte ptr [eax] 0Ah +
setz dl  +
add eax 1 +
add edi edx +
cmp eax ecx +
jnz loc_48C9F2  +
test byte ptr [ebx+0Dh] 20h +
jz loc_48C8D2  +
add edi 1 +
jmp loc_48C8D2  +
mov eax [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
cmp edi 200h +
mov ecx [esp+2Ch+var_10] +
ja loc_48CA5B  +
mov eax [ebx+0Ch] +
mov edi 200h +
and eax 408h +
cmp eax 8 +
jz loc_48CA5E  +
mov edi [ebx+18h] +
mov eax ds:__pioinfo +
mov eax [eax+ecx*4] +
test byte ptr [eax+ebp+4] 4 +
jnz loc_48CA0D  +
jmp loc_48C8D2  +
call _errno  +
mov edx 0FFFFFFFFh +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_48C954  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
mov ebp [esp+3Ch] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_48CB32  +
cmp ebp 2 +
ja loc_48CB32  +
and dword ptr [ebx+0Ch] 0FFFFFFEFh +
cmp ebp 1 +
jz loc_48CB21  +
mov [esp] ebx +
call sub_48C690  +
mov eax [ebx+0Ch] +
test al 80h +
jnz loc_48CB10  +
and eax 409h +
cmp eax 9 +
jz loc_48CB18  +
mov [esp] ebx +
call _fileno  +
mov [esp+0Ch] ebp +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] eax +
call _lseeki64  +
and eax edx +
cmp eax 0FFFFFFFFh +
setz al  +
movzx eax al +
neg eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and eax 0FFFFFFFCh +
mov [ebx+0Ch] eax +
jmp loc_48CADD  +
***
mov dword ptr [ebx+18h] 200h +
jmp loc_48CADD  +
***
mov [esp] ebx +
call sub_48C7F0  +
add esi eax +
adc edi edx +
xor bp bp +
jmp loc_48CAC4  +
***
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_48CB06  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4 +
mov esi [esp+10h] +
call __doserrno  +
mov [eax] esi +
jmp loc_48CB71  +
add ebx 1 +
cmp ds:dword_4BB904[ebx*8] 0FFFFFFFFh +
jz loc_48CB90  +
cmp ds:dword_4BB900[ebx*8] esi +
jnz loc_48CB64  +
call _errno  +
mov edx ds:dword_4BB904[ebx*8] +
mov [eax] edx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
lea eax [esi-13h] +
cmp eax 11h +
jbe loc_48CBC5  +
sub esi 0BCh +
cmp esi 0Eh +
jbe loc_48CBB4  +
call _errno  +
mov dword ptr [eax] 16h +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 8 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Dh +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_48CDAE  +
cmp byte ptr [ebx] 0 +
jz loc_48CD78  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_48CD90  +
test al 10h +
jz loc_48CD78  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_48CC64  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_48CD9F  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_48CCF3  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_48CCF3  +
cmp al 5Ch +
jz loc_48CCF3  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_48CCF5  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_48CD70  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_48CD70  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_48CD70  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_48CEC2  +
mov eax [ebx+228h] +
test eax eax +
js loc_48CEAD  +
jz loc_48CE50  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_48CE80  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_48CEAD  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_48CEA3  +
mov dword ptr [ebx+228h] 1 +
jmp loc_48CE19  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_48CEB5  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_48CE8B  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_48CE43  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_48CF1F  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_48CF0F  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_48CF19  +
***
jmp sub_48CF40  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_48CF83  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_48CF6A  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_48CF7E  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_48CFB2  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_48CFAD  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_48D05D  +
cmp esi 0FFFFFFFFh +
jl loc_48D050  +
jz loc_48D020  +
mov [esp] ebx +
call sub_48CF40  +
nop   +
lea esi [esi+0] +
jmp loc_48D00E  +
mov [esp] ebx +
call sub_48CDC0  +
test eax eax +
jz loc_48D047  +
cmp esi [ebx+228h] +
jg loc_48D002  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_48D033  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_48D047  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_48D047  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
test esi esi +
jz loc_48D0B5  +
lea eax [ebp+var_C4] +
mov [esp+0E8h+var_E8] eax +
call ds:GetTimeZoneInformation  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_48D130  +
mov edx [ebp+var_C4] +
cmp eax 2 +
setz al  +
movzx eax al +
mov [esi+4] eax +
mov [esi] edx +
test ebx ebx +
jz loc_48D123  +
lea eax [ebp+var_D0] +
mov [esp+0E8h+var_E8] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_D0] +
mov edi [ebp+var_CC] +
sub esp 4 +
add esi 2AC18000h +
adc edi 0FE624E21h +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_48C250  +
mov [ebx] eax +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_48C100  +
imul eax eax +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_48D0B5  +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
lea eax [esp+24h+var_C] +
mov [esp+24h+var_24] eax +
call sub_48D070  +
test eax eax +
mov ecx eax +
jnz loc_48D1A0  +
mov eax [esp+24h+var_C] +
mov edx 10624DD3h +
mov esi [esp+24h+var_8] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFFFh +
jmp loc_48D191  +
***
push esi  +
push ebx  +
sub esp 24h +
mov eax [esp+34h] +
mov ebx [esp+30h] +
mov [esp+4] eax +
lea eax [esp+18h] +
mov [esp] eax +
call sub_48D070  +
test eax eax +
mov ecx eax +
jnz loc_48D200  +
mov eax [esp+18h] +
mov edx 10624DD3h +
mov esi [esp+1Ch] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx 0FFFFFFFFh +
jmp loc_48D1F1  +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_4C1A04 +
retn   +
***
jmp ds:__setusermatherr  +
***
push edi  +
mov edi eax +
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 7Ch +
mov [esp+7Ch+var_5C] eax +
mov eax [eax+4] +
mov [esp+7Ch+var_40] ecx +
mov [esp+7Ch+var_54] edx +
mov eax [eax+1B0h] +
mov ecx eax +
mov [esp+7Ch+var_50] eax +
mov eax edx +
mov edx [edx+4] +
mov ebx [eax] +
mov edi [eax+0Ch] +
mov eax [ecx+174h] +
mov [esp+7Ch+var_58] edx +
mov edx [ebx+28h] +
movzx ecx byte ptr [eax+3] +
cmp edx ecx +
jnz loc_491317  +
mov ecx [eax+38h] +
mov [esp+7Ch+var_4C] ecx +
mov ecx [eax+3Ch] +
mov [esp+7Ch+var_48] ecx +
jmp loc_49134B  +
movzx ecx byte ptr [eax+4] +
cmp edx ecx +
jnz loc_49132F  +
mov ecx [eax+40h] +
mov [esp+7Ch+var_4C] ecx +
mov ecx [eax+44h] +
mov [esp+7Ch+var_48] ecx +
jmp loc_49134B  +
mov [esp+7Ch+var_74] offset aElf_link_adjus +
mov [esp+7Ch+var_78] 2028h +
mov [esp+7Ch+var_7C] offset a____Binutil_21 +
call sub_420BD0  +
cmp byte ptr [eax+9] 3 +
jbe loc_49136D  +
mov [esp+7Ch+var_74] offset aElf_link_adjus +
mov [esp+7Ch+var_78] 202Bh +
mov [esp+7Ch+var_7C] offset a____Binutil_21 +
call sub_420BD0  +
cmp byte ptr [eax+0Ah] 20h +
mov ecx 8 +
mov edx 20h +
mov eax 0FFFFFFFFh +
mov ebp edi +
cmovz edx ecx +
mov cl 0FFh +
cmovz eax ecx +
xor esi esi +
mov [esp+7Ch+var_60] eax +
mov eax [ebx+30h] +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_64] eax +
cmp esi [esp+7Ch+var_58] +
jz loc_491455  +
mov eax [ebp+esi*4+0] +
test eax eax +
jz loc_491442  +
cmp dword ptr [eax+1Ch] 0 +
jns loc_4913CB  +
mov [esp+7Ch+var_78] 2041h +
mov [esp+7Ch+var_7C] offset a____Binutil_21 +
call sub_420BA0  +
lea eax [esp+7Ch+var_30] +
xor edi edi +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_4C] +
call eax  +
mov eax [esp+7Ch+var_50] +
mov ecx [esp+7Ch+var_44] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov [esp+7Ch+var_68] eax +
lea eax [esp+7Ch+var_2C] +
cmp [esp+7Ch+var_68] edi +
jbe loc_491425  +
mov ebx [ebp+esi*4+0] +
inc edi  +
add eax 0Ch +
mov edx [esp+7Ch+var_60] +
and edx [eax-0Ch] +
mov ebx [ebx+1Ch] +
shl ebx cl +
or edx ebx +
mov [eax-0Ch] edx +
jmp loc_491404  +
mov eax [esp+7Ch+var_64] +
mov [esp+7Ch+var_74] eax +
lea eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_48] +
call eax  +
mov eax [esp+7Ch+var_54] +
inc esi  +
mov eax [eax] +
mov eax [eax+28h] +
add [esp+7Ch+var_64] eax +
jmp loc_49139B  +
cmp [esp+7Ch+var_40] 0 +
jz loc_491727  +
test esi esi +
jz loc_491727  +
mov eax [esp+7Ch+var_50] +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
mov eax [esp+7Ch+var_5C] +
mov eax [eax+4] +
mov eax [eax+0Ch] +
jnz loc_4914AC  +
cmp eax 1 +
jz loc_4914D6  +
test eax eax +
mov ebx offset loc_44A810 +
jz loc_4914E2  +
mov [esp+7Ch+var_74] offset aElf_link_adjus +
mov [esp+7Ch+var_78] 2059h +
mov [esp+7Ch+var_7C] offset a____Binutil_21 +
call sub_420BD0  +
cmp eax 1 +
jz loc_4914DD  +
test eax eax +
mov ebx offset sub_44A870 +
jz loc_4914E2  +
mov [esp+7Ch+var_74] offset aElf_link_adjus +
mov [esp+7Ch+var_78] 2064h +
mov [esp+7Ch+var_7C] offset a____Binutil_21 +
call sub_420BD0  +
mov ebx offset loc_44A7E0 +
jmp loc_4914E2  +
mov ebx offset sub_44A840 +
mov eax [esp+7Ch+var_54] +
mov eax [eax] +
mov ecx [eax+28h] +
mov eax [eax+30h] +
mov [esp+7Ch+var_64] ecx +
mov edx eax +
mov [esp+7Ch+var_68] eax +
mov eax [esp+7Ch+var_58] +
imul eax ecx +
add eax edx +
cmp ecx 18h +
mov [esp+7Ch+var_60] eax +
jbe loc_491526  +
mov [esp+7Ch+var_74] offset aElf_link_adjus +
mov [esp+7Ch+var_78] 206Dh +
mov [esp+7Ch+var_7C] offset a____Binutil_21 +
call sub_420BD0  +
mov esi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] esi +
mov ebp esi +
call ebx  +
mov edi eax +
mov esi edi +
mov edi ebp +
add edi [esp+7Ch+var_64] +
cmp edi [esp+7Ch+var_60] +
jnb loc_491554  +
mov [esp+7Ch+var_7C] edi +
call ebx  +
cmp esi eax +
ja loc_49154E  +
mov eax esi +
jmp loc_491550  +
mov ebp edi +
mov esi eax +
jmp loc_491537  +
mov eax [esp+7Ch+var_68] +
cmp ebp eax +
jz loc_491592  +
lea edx [esp+7Ch+var_30] +
mov esi ebp +
mov ecx [esp+7Ch+var_64] +
sub ebp eax +
mov edi edx +
movs   +
mov edi eax +
mov [esp+7Ch+var_74] ebp +
mov ebp [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_5C] edx +
add eax ebp +
mov [esp+7Ch+var_7C] eax +
call memmove  +
mov edx [esp+7Ch+var_5C] +
mov ecx ebp +
mov esi edx +
movs   +
mov ebp [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_68] +
mov [esp+7Ch+var_50] 0 +
add edx ebp +
neg ebp  +
add edx [esp+7Ch+var_64] +
cmp edx [esp+7Ch+var_60] +
mov [esp+7Ch+var_68] edx +
jnb loc_4916FE  +
mov esi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] esi +
lea esi [esi+ebp] +
call ebx  +
mov edi eax +
mov [esp+7Ch+var_7C] esi +
call ebx  +
cmp eax edi +
jbe loc_4915D3  +
add esi ebp +
jmp loc_4915C6  +
mov eax [esp+7Ch+var_64] +
lea edx [esi+eax] +
cmp edx [esp+7Ch+var_68] +
jz loc_4915A6  +
mov edi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_4C] edx +
mov eax edi +
sub eax edx +
mov [esp+7Ch+var_5C] eax +
call ebx  +
mov ecx [esp+7Ch+var_64] +
mov [esp+7Ch+var_48] ebp +
mov esi eax +
mov eax edi +
add edi ecx +
sub ecx eax +
mov [esp+7Ch+var_58] ecx +
mov ebp edi +
sub ebp [esp+7Ch+var_68] +
cmp edi [esp+7Ch+var_60] +
jb loc_49162A  +
cmp [esp+7Ch+var_50] 0 +
mov [esp+7Ch+var_58] ebp +
mov edx [esp+7Ch+var_4C] +
mov ebp [esp+7Ch+var_48] +
jnz loc_491670  +
jmp loc_491650  +
cmp [esp+7Ch+var_5C] 18000h +
jbe loc_491641  +
mov eax [esp+7Ch+var_58] +
add eax edi +
cmp eax 18000h +
ja loc_491615  +
mov [esp+7Ch+var_7C] edi +
call ebx  +
add edi [esp+7Ch+var_64] +
cmp eax esi +
jb loc_491609  +
jmp loc_491615  +
mov [esp+7Ch+var_7C] 18000h +
mov [esp+7Ch+var_4C] edx +
call sub_42B400  +
mov edx [esp+7Ch+var_4C] +
test eax eax +
mov [esp+7Ch+var_50] eax +
jz loc_49172E  +
mov eax [esp+7Ch+var_5C] +
cmp [esp+7Ch+var_58] eax +
mov edi [esp+7Ch+var_50] +
jnb loc_4916B5  +
mov esi [esp+7Ch+var_68] +
mov ecx [esp+7Ch+var_58] +
movs   +
mov ecx [esp+7Ch+var_58] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_5C] edx +
lea eax [edx+ecx] +
mov [esp+7Ch+var_7C] eax +
call memmove  +
mov edx [esp+7Ch+var_5C] +
mov esi [esp+7Ch+var_50] +
mov ecx [esp+7Ch+var_58] +
mov edi edx +
movs   +
jmp loc_4916ED  +
mov ecx [esp+7Ch+var_5C] +
mov esi edx +
movs   +
mov eax [esp+7Ch+var_68] +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_4C] edx +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edi +
call memmove  +
mov edx [esp+7Ch+var_4C] +
mov eax edi +
mov esi [esp+7Ch+var_50] +
mov ecx [esp+7Ch+var_5C] +
add eax edx +
mov edi eax +
movs   +
mov edx [esp+7Ch+var_58] +
sub edx [esp+7Ch+var_64] +
add edx [esp+7Ch+var_68] +
jmp loc_4915A6  +
mov edi [esp+7Ch+var_54] +
mov eax [edi+0Ch] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_50] +
mov dword ptr [edi+0Ch] 0 +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax 1 +
jmp loc_491730  +
mov eax 1 +
jmp loc_491730  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_48AEA0  +
leave   +
retn   +
***
