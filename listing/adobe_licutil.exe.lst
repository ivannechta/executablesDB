mov dword ptr [ecx] offset off_4419DC +
jmp sub_425331  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4419DC +
call sub_425331  +
test [ebp+arg_0] 1 +
jz loc_401030  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 310h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ds:GetModuleFileNameW +
push 103h  +
lea eax [ebp+WideCharStr] +
push eax  +
push 400000h  +
call esi  +
test eax eax +
jnz loc_401080  +
push 103h  +
lea ecx [ebp+WideCharStr] +
push ecx  +
push eax  +
call esi  +
push 0  +
push 0  +
push 104h  +
lea edx [ebp+MultiByteStr] +
push edx  +
push 0FFFFFFFFh  +
lea eax [ebp+WideCharStr] +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
lea ecx [ebp+MultiByteStr] +
push 5Ch  +
push ecx  +
call sub_425220  +
add esp 8 +
pop esi  +
test eax eax +
jz loc_4010BF  +
mov byte ptr [eax] 0 +
lea edx [ebp+MultiByteStr] +
push edx  +
call sub_425B61  +
mov ecx [ebp+var_4] +
xor ecx ebp +
add esp 4 +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax ecx +
cmp dword ptr [eax+14h] 10h +
jb locret_4010EA  +
mov eax [eax] +
retn   +
***
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+45h] 0 +
jnz loc_40110A  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_401126  +
mov [ecx+4] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_40113B  +
mov [ecx+8] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
cmp byte ptr [ecx+45h] 0 +
jnz loc_40116B  +
nop   +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+45h] 0 +
jz loc_401160  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [eax] +
cmp byte ptr [ecx+45h] 0 +
jnz loc_40118A  +
mov edi edi +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+45h] 0 +
jz loc_401180  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
sub esp 0Ch +
test ecx ecx +
jnz loc_4011CE  +
push ecx  +
call sub_425BFC  +
add esp 4 +
test eax eax +
jnz loc_401202  +
lea edx [ebp+arg_0] +
push edx  +
lea ecx [ebp+var_C] +
mov [ebp+arg_0] eax +
call sub_4252D5  +
push offset unk_44B0F0  +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_C] offset off_4419DC +
call sub_425C90  +
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 1 +
jnb loc_40119D  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_C] +
mov [ebp+arg_0] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp+var_C] +
push ecx  +
mov [ebp+var_C] offset off_4419DC +
call sub_425C90  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_4253BC  +
mov dword ptr [esi] offset off_4419DC +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
mov edx [eax] +
cmp byte ptr [edx+45h] 0 +
jnz locret_40127A  +
mov ecx [edx+8] +
cmp byte ptr [ecx+45h] 0 +
jnz loc_40125D  +
mov edx [ecx] +
cmp byte ptr [edx+45h] 0 +
jnz loc_40125A  +
jmp loc_401250  +
mov ecx edx +
mov edx [ecx] +
cmp byte ptr [edx+45h] 0 +
jz loc_401250  +
mov [eax] ecx +
retn   +
mov edx [edx+4] +
cmp byte ptr [edx+45h] 0 +
jnz loc_401278  +
mov ecx [eax] +
cmp ecx [edx+8] +
jnz loc_401278  +
mov [eax] edx +
mov edx [edx+4] +
cmp byte ptr [edx+45h] 0 +
jz loc_401266  +
mov [eax] edx +
retn   +
***
mov eax [ecx+4] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov ecx [ebp+arg_0] +
push edi  +
cmp eax ecx +
jnb loc_4012AB  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov edi [ebp+arg_4] +
sub eax ecx +
cmp eax edi +
jnb loc_4012B6  +
mov edi eax +
test edi edi +
jz loc_40130A  +
mov edx [esi+14h] +
push ebx  +
cmp edx 10h +
jb loc_4012C7  +
mov ebx [esi] +
jmp loc_4012C9  +
mov ebx esi +
cmp edx 10h +
jb loc_4012D2  +
mov edx [esi] +
jmp loc_4012D4  +
mov edx esi +
sub eax edi +
add ebx ecx +
push eax  +
add ebx edi +
add edx ecx +
push ebx  +
push edx  +
call loc_425800  +
mov eax [esi+10h] +
add esp 0Ch +
sub eax edi +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] eax +
pop ebx  +
jb loc_401304  +
mov ecx [esi] +
mov byte ptr [ecx+eax] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
mov ecx esi +
mov byte ptr [ecx+eax] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
sub esp 0Ch +
xor eax eax +
test ecx ecx +
jz loc_40136F  +
cmp ecx 7FFFFFFFh +
ja loc_401347  +
lea eax [ecx+ecx] +
push eax  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jnz loc_40136F  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_C] +
mov [ebp+arg_0] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea edx [ebp+var_C] +
push edx  +
mov [ebp+var_C] offset off_4419DC +
call sub_425C90  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+45h] 0 +
jnz loc_40139A  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_4013B5  +
mov [ecx+4] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_4013C7  +
mov [ecx] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_0] +
sub esp 0Ch +
xor eax eax +
test ecx ecx +
jz loc_401429  +
cmp ecx 0FFFFFFFFh +
ja loc_401401  +
push ecx  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jnz loc_401429  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_C] +
mov [ebp+arg_0] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp+var_C] +
push ecx  +
mov [ebp+var_C] offset off_4419DC +
call sub_425C90  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov ecx [ebp+arg_0] +
push edi  +
cmp eax ecx +
jnb loc_40144B  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov edi [ebp+arg_4] +
sub eax ecx +
cmp eax edi +
jnb loc_401456  +
mov edi eax +
test edi edi +
jz loc_4014B3  +
mov edx [esi+14h] +
push ebx  +
cmp edx 8 +
jb loc_401467  +
mov ebx [esi] +
jmp loc_401469  +
mov ebx esi +
cmp edx 8 +
jb loc_401472  +
mov edx [esi] +
jmp loc_401474  +
mov edx esi +
sub eax edi +
add eax eax +
push eax  +
lea eax [ecx+edi] +
lea eax [ebx+eax*2] +
push eax  +
lea ecx [edx+ecx*2] +
push ecx  +
call loc_425800  +
mov eax [esi+10h] +
add esp 0Ch +
sub eax edi +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] eax +
pop ebx  +
jb loc_4014AB  +
mov ecx [esi] +
xor edx edx +
mov [ecx+eax*2] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
mov ecx esi +
xor edx edx +
mov [ecx+eax*2] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43D250  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 0Fh +
cmp edi 0FFFFFFFEh +
jbe loc_401501  +
mov edi eax +
jmp loc_401528  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_401528  +
mov eax 0FFFFFFFEh +
sub eax ecx +
lea edi [ecx+ebx] +
cmp ebx eax +
jbe loc_401528  +
mov edi 0FFFFFFFEh +
push 0  +
lea ecx [edi+1] +
push ecx  +
lea ecx [esi+18h] +
mov [ebp+var_4] 0 +
call sub_401190  +
mov [ebp+arg_0] eax +
jmp loc_40156D  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
mov [ebp-10h] esp +
mov [ebp-18h] eax +
push 0  +
inc eax  +
push eax  +
add ecx 18h +
mov byte ptr [ebp-4] 2 +
call sub_401190  +
mov [ebp+arg_0] eax +
mov eax offset loc_401567 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-18h] +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_40158E  +
cmp dword ptr [esi+14h] 10h +
jb loc_40157E  +
mov eax [esi] +
jmp loc_401580  +
mov eax esi +
mov edx [ebp+arg_0] +
push ebx  +
push eax  +
push edx  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
jb loc_40159F  +
mov eax [esi] +
push eax  +
call sub_425BC2  +
add esp 4 +
mov eax [ebp+arg_0] +
mov byte ptr [esi] 0 +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp edi 10h +
jb loc_4015B4  +
mov esi eax +
mov byte ptr [esi+ebx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43D270  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
mov eax [ebp+arg_0] +
mov esi eax +
or esi 0Fh +
cmp esi 0FFFFFFFEh +
jbe loc_401641  +
mov esi eax +
jmp loc_401668  +
mov ebx [edi+14h] +
mov eax 0AAAAAAABh +
mul  esi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_401668  +
mov eax 0FFFFFFFEh +
sub eax ecx +
lea esi [ecx+ebx] +
cmp ebx eax +
jbe loc_401668  +
mov esi 0FFFFFFFEh +
xor eax eax +
lea ecx [esi+1] +
mov [ebp+var_4] eax +
cmp ecx eax +
jbe loc_401686  +
cmp ecx 0FFFFFFFFh +
ja loc_40168B  +
push ecx  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_40168B  +
mov [ebp+arg_0] eax +
jmp loc_4016DC  +
lea ecx [ebp+var_18] +
push ecx  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea edx [ebp+var_28] +
push edx  +
mov [ebp+var_28] offset off_4419DC +
call sub_425C90  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [ebp+var_1C] eax +
inc eax  +
mov [ebp+var_10] esp +
push eax  +
add ecx 18h +
mov byte ptr [ebp+var_4] 2 +
call sub_4013E0  +
mov [ebp+arg_0] eax +
mov eax offset loc_4016D6 +
retn   +
mov edi [ebp-14h] +
mov esi [ebp-1Ch] +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_4016FD  +
cmp dword ptr [edi+14h] 10h +
jb loc_4016ED  +
mov eax [edi] +
jmp loc_4016EF  +
mov eax edi +
push ebx  +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [edi+14h] 10h +
jb loc_40170E  +
mov ecx [edi] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+arg_0] +
mov byte ptr [edi] 0 +
mov [edi] eax +
mov [edi+14h] esi +
mov [edi+10h] ebx +
cmp esi 10h +
jb loc_401723  +
mov edi eax +
mov byte ptr [edi+ebx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp ebx 0FFFFFFFEh +
jbe loc_4017B9  +
push offset aStringTooLong  +
call sub_424688  +
mov eax [esi+14h] +
cmp eax ebx +
jnb loc_4017D8  +
mov eax [esi+10h] +
push eax  +
push ebx  +
call sub_401600  +
xor ecx ecx +
cmp ecx ebx +
sbb eax eax +
pop esi  +
neg eax  +
pop ebx  +
pop ebp  +
retn 8  +
cmp [ebp+arg_4] 0 +
jz loc_40182C  +
cmp ebx 10h +
jnb loc_40182C  +
push edi  +
mov edi [esi+10h] +
cmp ebx edi +
jnb loc_4017ED  +
mov edi ebx +
cmp eax 10h +
jb loc_40180F  +
mov ebx [esi] +
test edi edi +
jz loc_401803  +
push edi  +
push ebx  +
push esi  +
call loc_425490  +
add esp 0Ch +
push ebx  +
call sub_42520B  +
mov ebx [ebp+arg_0] +
add esp 4 +
mov [esi+10h] edi +
mov dword ptr [esi+14h] 0Fh +
xor ecx ecx +
mov byte ptr [edi+esi] 0 +
cmp ecx ebx +
pop edi  +
sbb eax eax +
pop esi  +
neg eax  +
pop ebx  +
pop ebp  +
retn 8  +
test ebx ebx +
jnz loc_40183D  +
mov [esi+10h] ebx +
cmp eax 10h +
jb loc_40183A  +
mov esi [esi] +
mov byte ptr [esi] 0 +
xor ecx ecx +
cmp ecx ebx +
sbb eax eax +
pop esi  +
neg eax  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_0] +
mov eax [edx+10h] +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
cmp eax ecx +
jnb loc_40186E  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov ebx [ebp+arg_8] +
sub eax ecx +
cmp eax ebx +
jnb loc_401879  +
mov ebx eax +
mov eax [esi+10h] +
or ecx 0FFFFFFFFh +
sub ecx eax +
cmp ecx ebx +
ja loc_40188F  +
push offset aStringTooLong  +
call sub_424688  +
test ebx ebx +
jz loc_40194A  +
push edi  +
lea edi [eax+ebx] +
cmp edi 7FFFFFFEh +
jbe loc_4018AD  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_4018D6  +
push eax  +
push edi  +
mov ecx esi +
call sub_4037F0  +
mov edx [ebp+arg_0] +
test edi edi +
jz loc_401949  +
mov eax 8 +
cmp [edx+14h] eax +
jb loc_401900  +
mov ecx [edx] +
jmp loc_401902  +
test edi edi +
jnz loc_4018C8  +
mov [esi+10h] edi +
cmp ecx 8 +
jb loc_4018F2  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax] dx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
mov eax esi +
xor edx edx +
pop esi  +
mov [eax] dx +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ecx edx +
cmp [esi+14h] eax +
jb loc_40190B  +
mov eax [esi] +
jmp loc_40190D  +
mov eax esi +
lea edx [ebx+ebx] +
push edx  +
mov edx [ebp+arg_4] +
lea ecx [ecx+edx*2] +
mov edx [esi+10h] +
push ecx  +
lea eax [eax+edx*2] +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_401941  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi 10h +
mov [ebp+hWnd] eax +
mov eax [ebp+lpMem] +
cmp [ebp+arg_18] edi +
jnb loc_40197D  +
lea eax [ebp+lpMem] +
mov esi [ebp+arg_20] +
cmp [ebp+arg_34] edi +
jnb loc_401988  +
lea esi [ebp+arg_20] +
xor ebx ebx +
push ebx  +
push eax  +
call sub_41A220  +
add esp 4 +
push eax  +
push esi  +
call sub_41A220  +
mov ecx [ebp+hWnd] +
add esp 4 +
push eax  +
push ecx  +
call ds:MessageBoxW  +
cmp [ebp+arg_18] edi +
jb loc_4019BA  +
mov edx [ebp+lpMem] +
push edx  +
call sub_425BC2  +
add esp 4 +
mov esi 0Fh +
mov [ebp+arg_18] esi +
mov [ebp+arg_14] ebx +
mov byte ptr [ebp+lpMem] bl +
cmp [ebp+arg_34] edi +
jb loc_4019D9  +
mov eax [ebp+arg_20] +
push eax  +
call sub_425BC2  +
add esp 4 +
cmp [ebp+arg_50] edi +
pop edi  +
mov [ebp+arg_34] esi +
pop esi  +
mov [ebp+arg_30] ebx +
mov byte ptr [ebp+arg_20] bl +
pop ebx  +
jb loc_4019F6  +
mov ecx [ebp+arg_3C] +
push ecx  +
call sub_425BC2  +
add esp 4 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push edi  +
mov edi [ecx+10h] +
cmp edi ebx +
jnb loc_401A1F  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov eax [ebp+arg_8] +
sub edi ebx +
cmp eax edi +
jnb loc_401A2A  +
mov edi eax +
cmp esi ecx +
jnz loc_401A4D  +
push 0FFFFFFFFh  +
add edi ebx +
push edi  +
mov ecx esi +
call sub_401430  +
push ebx  +
push 0  +
mov ecx esi +
call sub_401430  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp edi 7FFFFFFEh +
jbe loc_401A5F  +
push offset aStringTooLong  +
call sub_424688  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_401A8E  +
mov eax [esi+10h] +
push eax  +
push edi  +
mov ecx esi +
call sub_4037F0  +
mov ecx [ebp+arg_0] +
test edi edi +
jz loc_401AF0  +
mov eax 8 +
cmp [ecx+14h] eax +
jb loc_401A85  +
mov ecx [ecx] +
cmp [esi+14h] eax +
jb loc_401AB8  +
mov eax [esi] +
jmp loc_401ABA  +
test edi edi +
jnz loc_401A79  +
mov [esi+10h] edi +
cmp eax 8 +
jb loc_401AAA  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
mov eax esi +
xor ecx ecx +
pop esi  +
mov [eax] cx +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
mov edx [ebp+arg_4] +
lea ebx [edi+edi] +
push ebx  +
lea ecx [ecx+edx*2] +
push ecx  +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_401AE8  +
mov eax [esi] +
xor edx edx +
mov [ebx+eax] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
xor edx edx +
mov [ebx+eax] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push edi  +
mov edi [ecx+10h] +
cmp edi ebx +
jnb loc_401B1F  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov eax [ebp+arg_8] +
sub edi ebx +
cmp eax edi +
jnb loc_401B2A  +
mov edi eax +
cmp esi ecx +
jnz loc_401B4D  +
push 0FFFFFFFFh  +
add edi ebx +
push edi  +
mov ecx esi +
call sub_401290  +
push ebx  +
push 0  +
mov ecx esi +
call sub_401290  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp edi 0FFFFFFFEh +
jbe loc_401B5C  +
push offset aStringTooLong  +
call sub_424688  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_401B8B  +
mov eax [esi+10h] +
push eax  +
push edi  +
mov ecx esi +
call sub_4014C0  +
mov ecx [ebp+arg_0] +
test edi edi +
jz loc_401BDE  +
mov eax 10h +
cmp [ecx+14h] eax +
jb loc_401B82  +
mov ecx [ecx] +
cmp [esi+14h] eax +
jb loc_401BB1  +
mov eax [esi] +
jmp loc_401BB3  +
test edi edi +
jnz loc_401B76  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_401BA5  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
mov eax esi +
pop esi  +
mov byte ptr [eax] 0 +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
push edi  +
add ecx ebx +
push ecx  +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_401BD8  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edx [ebp+arg_0] +
mov eax [edx+10h] +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
cmp eax ecx +
jnb loc_401C0E  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov ebx [ebp+arg_8] +
sub eax ecx +
cmp eax ebx +
jnb loc_401C19  +
mov ebx eax +
mov eax [esi+10h] +
or ecx 0FFFFFFFFh +
sub ecx eax +
cmp ecx ebx +
ja loc_401C2F  +
push offset aStringTooLong  +
call sub_424688  +
test ebx ebx +
jz loc_401CD4  +
push edi  +
lea edi [eax+ebx] +
cmp edi 0FFFFFFFEh +
jbe loc_401C4A  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_401C6F  +
push eax  +
push edi  +
mov ecx esi +
call sub_401600  +
mov edx [ebp+arg_0] +
test edi edi +
jz loc_401CD3  +
mov eax 10h +
cmp [edx+14h] eax +
jb loc_401C95  +
mov ecx [edx] +
jmp loc_401C97  +
test edi edi +
jnz loc_401C61  +
mov [esi+10h] edi +
cmp ecx 10h +
jb loc_401C89  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
mov eax esi +
pop esi  +
mov byte ptr [eax] 0 +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ecx edx +
cmp [esi+14h] eax +
jb loc_401CA0  +
mov eax [esi] +
jmp loc_401CA2  +
mov eax esi +
add ecx [ebp+arg_4] +
push ebx  +
push ecx  +
mov ecx [esi+10h] +
add ecx eax +
push ecx  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_401CCD  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
test edx edx +
jz loc_401D47  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_401CFA  +
mov eax [esi] +
jmp loc_401CFC  +
mov eax esi +
cmp edx eax +
jb loc_401D47  +
cmp ecx 10h +
jb loc_401D09  +
mov eax [esi] +
jmp loc_401D0B  +
mov eax esi +
mov edi [esi+10h] +
add edi eax +
cmp edi edx +
jbe loc_401D47  +
cmp ecx 10h +
jb loc_401D30  +
mov eax [esi] +
mov ecx [ebp+arg_4] +
push ecx  +
sub edx eax +
push edx  +
push esi  +
mov ecx esi +
call sub_401BF0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_4] +
mov eax esi +
push ecx  +
sub edx eax +
push edx  +
push esi  +
mov ecx esi +
call sub_401BF0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax [esi+10h] +
or ecx 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_4] +
sub ecx eax +
cmp ecx ebx +
ja loc_401D61  +
push offset aStringTooLong  +
call sub_424688  +
test ebx ebx +
jz loc_401DF2  +
lea edi [eax+ebx] +
cmp edi 0FFFFFFFEh +
jbe loc_401D7B  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_401D9C  +
push eax  +
push edi  +
mov ecx esi +
call sub_401600  +
mov edx [ebp+arg_0] +
test edi edi +
jz loc_401DF2  +
cmp dword ptr [esi+14h] 10h +
jb loc_401DC2  +
mov eax [esi] +
jmp loc_401DC4  +
test edi edi +
jnz loc_401D92  +
mov [esi+10h] edi +
cmp ecx 10h +
jb loc_401DB6  +
mov eax [esi] +
pop ebx  +
mov byte ptr [eax] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
pop ebx  +
mov eax esi +
pop edi  +
mov byte ptr [eax] 0 +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
push ebx  +
push edx  +
mov edx [esi+10h] +
add edx eax +
push edx  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_401DEC  +
mov eax [esi] +
pop ebx  +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
test edx edx +
jz loc_401E57  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_401E1A  +
mov eax [esi] +
jmp loc_401E1C  +
mov eax esi +
cmp edx eax +
jb loc_401E57  +
cmp ecx 8 +
jb loc_401E29  +
mov eax [esi] +
jmp loc_401E2B  +
mov eax esi +
mov edi [esi+10h] +
lea eax [eax+edi*2] +
cmp eax edx +
jbe loc_401E57  +
cmp ecx 8 +
jb loc_401E3E  +
mov eax [esi] +
jmp loc_401E40  +
mov eax esi +
mov ecx [ebp+arg_4] +
push ecx  +
sub edx eax +
sar edx 1 +
push edx  +
push esi  +
mov ecx esi +
call sub_401850  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax [esi+10h] +
or ecx 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_4] +
sub ecx eax +
cmp ecx ebx +
ja loc_401E71  +
push offset aStringTooLong  +
call sub_424688  +
test ebx ebx +
jz loc_401F11  +
lea edi [eax+ebx] +
cmp edi 7FFFFFFEh +
jbe loc_401E8E  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_401EAF  +
push eax  +
push edi  +
mov ecx esi +
call sub_4037F0  +
mov edx [ebp+arg_0] +
test edi edi +
jz loc_401F11  +
cmp dword ptr [esi+14h] 8 +
jb loc_401ED9  +
mov eax [esi] +
jmp loc_401EDB  +
test edi edi +
jnz loc_401EA5  +
mov [esi+10h] edi +
cmp ecx 8 +
jb loc_401ECB  +
mov eax [esi] +
pop ebx  +
xor edx edx +
mov [eax] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
pop ebx  +
mov eax esi +
xor edx edx +
pop edi  +
mov [eax] dx +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
lea ecx [ebx+ebx] +
push ecx  +
push edx  +
mov edx [esi+10h] +
lea eax [eax+edx*2] +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_401F09  +
mov eax [esi] +
xor ecx ecx +
pop ebx  +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_402077  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40202A  +
mov eax [esi] +
jmp loc_40202C  +
mov eax esi +
cmp ebx eax +
jb loc_402077  +
cmp ecx 10h +
jb loc_402039  +
mov eax [esi] +
jmp loc_40203B  +
mov eax esi +
mov edx [esi+10h] +
add edx eax +
cmp edx ebx +
jbe loc_402077  +
cmp ecx 10h +
jb loc_402060  +
mov eax [esi] +
mov ecx [ebp+arg_4] +
push ecx  +
sub ebx eax +
push ebx  +
push esi  +
mov ecx esi +
call sub_401B00  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_4] +
mov eax esi +
push ecx  +
sub ebx eax +
push ebx  +
push esi  +
mov ecx esi +
call sub_401B00  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push edi  +
mov edi [ebp+arg_4] +
cmp edi 0FFFFFFFEh +
jbe loc_40208A  +
push offset aStringTooLong  +
call sub_424688  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_4020AB  +
mov edx [esi+10h] +
push edx  +
push edi  +
mov ecx esi +
call sub_4014C0  +
test edi edi +
jz loc_4020FC  +
cmp dword ptr [esi+14h] 10h +
jb loc_4020D1  +
mov eax [esi] +
jmp loc_4020D3  +
test edi edi +
jnz loc_4020A1  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_4020C5  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
pop edi  +
mov eax esi +
pop esi  +
mov byte ptr [eax] 0 +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
push edi  +
push ebx  +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4020F6  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push edi  +
mov edi [ecx+10h] +
cmp edi ebx +
jnb loc_40212F  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov eax [ebp+arg_8] +
sub edi ebx +
cmp eax edi +
jnb loc_40213A  +
mov edi eax +
cmp esi ecx +
jnz loc_40215D  +
push 0FFFFFFFFh  +
add edi ebx +
push edi  +
mov ecx esi +
call sub_401290  +
push ebx  +
push 0  +
mov ecx esi +
call sub_401290  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp edi 0FFFFFFFEh +
jbe loc_40216C  +
push offset aStringTooLong  +
call sub_424688  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_40219B  +
mov eax [esi+10h] +
push eax  +
push edi  +
mov ecx esi +
call sub_401600  +
mov ecx [ebp+arg_0] +
test edi edi +
jz loc_4021EE  +
mov eax 10h +
cmp [ecx+14h] eax +
jb loc_402192  +
mov ecx [ecx] +
cmp [esi+14h] eax +
jb loc_4021C1  +
mov eax [esi] +
jmp loc_4021C3  +
test edi edi +
jnz loc_402186  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_4021B5  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
mov eax esi +
pop esi  +
mov byte ptr [eax] 0 +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
push edi  +
add ecx ebx +
push ecx  +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4021E8  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_402210  +
sub eax edi +
push eax  +
push esi  +
call sub_401CE0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_402297  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40224A  +
mov eax [esi] +
jmp loc_40224C  +
mov eax esi +
cmp ebx eax +
jb loc_402297  +
cmp ecx 10h +
jb loc_402259  +
mov eax [esi] +
jmp loc_40225B  +
mov eax esi +
mov edx [esi+10h] +
add edx eax +
cmp edx ebx +
jbe loc_402297  +
cmp ecx 10h +
jb loc_402280  +
mov eax [esi] +
mov ecx [ebp+arg_4] +
push ecx  +
sub ebx eax +
push ebx  +
push esi  +
mov ecx esi +
call sub_402110  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_4] +
mov eax esi +
push ecx  +
sub ebx eax +
push ebx  +
push esi  +
mov ecx esi +
call sub_402110  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push edi  +
mov edi [ebp+arg_4] +
cmp edi 0FFFFFFFEh +
jbe loc_4022AA  +
push offset aStringTooLong  +
call sub_424688  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_4022CB  +
mov edx [esi+10h] +
push edx  +
push edi  +
mov ecx esi +
call sub_401600  +
test edi edi +
jz loc_40231C  +
cmp dword ptr [esi+14h] 10h +
jb loc_4022F1  +
mov eax [esi] +
jmp loc_4022F3  +
test edi edi +
jnz loc_4022C1  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_4022E5  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
pop edi  +
mov eax esi +
pop esi  +
mov byte ptr [eax] 0 +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
push edi  +
push ebx  +
push eax  +
call loc_425490  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_402316  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jz loc_40239E  +
cmp dword ptr [esi+14h] 10h +
jb loc_40234F  +
mov eax [esi] +
push eax  +
call sub_425BC2  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp dword ptr [edi+14h] 10h +
jnb loc_402377  +
mov ecx [edi+10h] +
inc ecx  +
push ecx  +
push edi  +
push esi  +
call loc_425800  +
add esp 0Ch +
jmp loc_402381  +
mov edx [edi] +
mov [esi] edx +
mov dword ptr [edi] 0 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov ecx [edi+14h] +
mov [esi+14h] ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax edx +
push edi  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4023D0  +
sub eax edi +
push eax  +
push edx  +
mov ecx esi +
call sub_402230  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_402400  +
sub eax edi +
push eax  +
push esi  +
call sub_402230  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jz loc_40248E  +
cmp dword ptr [esi+14h] 10h +
jb loc_40243F  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp dword ptr [edi+14h] 10h +
jnb loc_402467  +
mov ecx [edi+10h] +
inc ecx  +
push ecx  +
push edi  +
push esi  +
call loc_425800  +
add esp 0Ch +
jmp loc_402471  +
mov edx [edi] +
mov [esi] edx +
mov dword ptr [edi] 0 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov ecx [edi+14h] +
mov [esi+14h] ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43D2A9  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor eax eax +
mov [ebp+var_10] eax +
mov esi [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] eax +
mov [esi] al +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_10] 1 +
lea edx [eax+1] +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4024F0  +
mov ebx [ebp+arg_8] +
mov edi [esi+10h] +
sub eax edx +
add eax [ebx+10h] +
cmp edi eax +
ja loc_40252C  +
cmp [esi+14h] eax +
jz loc_40252C  +
push 1  +
push eax  +
mov ecx esi +
call sub_4017A0  +
test al al +
jz loc_40252C  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_402526  +
mov eax [esi] +
jmp loc_402528  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
mov edi [ebp+arg_4] +
mov eax edi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_402534  +
sub eax edx +
push eax  +
push edi  +
mov ecx esi +
call sub_401CE0  +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx esi +
call sub_401BF0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_8] +
mov eax edx +
push esi  +
mov [ebp+var_4] 0 +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_402584  +
mov ecx [ebp+arg_4] +
sub eax esi +
push eax  +
push edx  +
call sub_401CE0  +
mov esi [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push eax  +
mov ecx esi +
mov byte ptr [esi] 0 +
call sub_402420  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D301  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_50] esi +
mov [ebp+var_4C] ebx +
mov eax 1 +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] ebx +
mov [ebp+var_4] eax +
mov [esi] bl +
mov [ebp+var_4C] eax +
call sub_401040  +
mov edi eax +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_402617  +
sub eax ecx +
push eax  +
push edi  +
mov ecx esi +
call sub_402230  +
push 1  +
push offset asc_441A28  +
mov ecx esi +
call sub_401CE0  +
push 6  +
push offset aOblres  +
mov ecx esi +
call sub_401CE0  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebp+var_48] +
push offset asc_441A28  +
push ecx  +
call sub_4024A0  +
push offset asc_441A28  +
push eax  +
lea edx [ebp+var_2C] +
push edx  +
mov byte ptr [ebp+var_4] 2 +
call sub_402570  +
add esp 18h +
push 0FFFFFFFFh  +
push ebx  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
call sub_401BF0  +
cmp [ebp+var_18] 10h +
jb loc_40268E  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
cmp [ebp+var_34] 10h +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
mov byte ptr [ebp+var_4] 1 +
jb loc_4026B1  +
mov ecx [ebp+var_48] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 12h  +
push offset aOobe_launcher_  +
mov ecx esi +
call sub_401CE0  +
push edi  +
call sub_425BC2  +
add esp 4 +
cmp [ebp+arg_18] 10h +
jb loc_4026DA  +
mov edx [ebp+arg_4] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
cmp byte ptr [edi+45h] 0 +
mov [ebp+var_4] ecx +
jz loc_40271D  +
push offset aInvalidMapSetT  +
call sub_4246D5  +
lea ecx [ebp+arg_4] +
call sub_401230  +
mov ecx [edi] +
cmp byte ptr [ecx+45h] 0 +
jz loc_402732  +
mov ebx [edi+8] +
jmp loc_402749  +
mov eax [edi+8] +
cmp byte ptr [eax+45h] 0 +
jz loc_40273F  +
mov ebx ecx +
jmp loc_402749  +
mov eax [ebp+arg_4] +
mov ebx [eax+8] +
cmp eax edi +
jnz loc_4027C2  +
cmp byte ptr [ebx+45h] 0 +
mov esi [edi+4] +
jnz loc_402755  +
mov [ebx+4] esi +
mov ecx [ebp+var_4] +
mov eax [ecx+4] +
cmp [eax+4] edi +
jnz loc_402765  +
mov [eax+4] ebx +
jmp loc_402770  +
cmp [esi] edi +
jnz loc_40276D  +
mov [esi] ebx +
jmp loc_402770  +
mov [esi+8] ebx +
mov eax [ecx+4] +
cmp [eax] edi +
jnz loc_402792  +
cmp byte ptr [ebx+45h] 0 +
jz loc_402781  +
mov eax esi +
jmp loc_40278D  +
push ebx  +
call sub_401170  +
mov ecx [ebp+var_4] +
add esp 4 +
mov edx [ecx+4] +
mov [edx] eax +
mov eax [ecx+4] +
cmp [eax+8] edi +
jnz loc_40281F  +
cmp byte ptr [ebx+45h] 0 +
jz loc_4027AE  +
mov edx [ecx+4] +
mov eax esi +
mov [edx+8] eax +
jmp loc_40281F  +
push ebx  +
call sub_401150  +
mov ecx [ebp+var_4] +
mov edx [ecx+4] +
add esp 4 +
mov [edx+8] eax +
jmp loc_40281F  +
mov [ecx+4] eax +
mov ecx [edi] +
mov [eax] ecx +
cmp eax [edi+8] +
jnz loc_4027D2  +
mov esi eax +
jmp loc_4027EC  +
cmp byte ptr [ebx+45h] 0 +
mov esi [eax+4] +
jnz loc_4027DE  +
mov [ebx+4] esi +
mov [esi] ebx +
mov ecx [edi+8] +
mov [eax+8] ecx +
mov edx [edi+8] +
mov [edx+4] eax +
mov ecx [ebp+var_4] +
mov ecx [ecx+4] +
cmp [ecx+4] edi +
jnz loc_4027FC  +
mov [ecx+4] eax +
jmp loc_40280A  +
mov ecx [edi+4] +
cmp [ecx] edi +
jnz loc_402807  +
mov [ecx] eax +
jmp loc_40280A  +
mov [ecx+8] eax +
mov edx [edi+4] +
mov [eax+4] edx +
mov cl [eax+44h] +
mov dl [edi+44h] +
mov [eax+44h] dl +
mov [edi+44h] cl +
mov ecx [ebp+var_4] +
cmp byte ptr [edi+44h] 1 +
jnz loc_402934  +
mov eax [ecx+4] +
cmp ebx [eax+4] +
jz loc_402930  +
cmp byte ptr [ebx+44h] 1 +
jnz loc_402930  +
mov eax [esi] +
cmp ebx eax +
jnz loc_4028B5  +
mov eax [esi+8] +
cmp byte ptr [eax+44h] 0 +
jnz loc_402862  +
mov byte ptr [eax+44h] 1 +
push esi  +
mov byte ptr [esi+44h] 0 +
call sub_401380  +
mov eax [esi+8] +
mov ecx [ebp+var_4] +
cmp byte ptr [eax+45h] 0 +
jnz loc_4028E9  +
mov edx [eax] +
cmp byte ptr [edx+44h] 1 +
jnz loc_40287D  +
mov edx [eax+8] +
cmp byte ptr [edx+44h] 1 +
jz loc_4028E5  +
mov edx [eax+8] +
cmp byte ptr [edx+44h] 1 +
jnz loc_40289C  +
mov edx [eax] +
mov byte ptr [edx+44h] 1 +
push eax  +
mov byte ptr [eax+44h] 0 +
call sub_4010F0  +
mov eax [esi+8] +
mov ecx [ebp+var_4] +
mov dl [esi+44h] +
mov [eax+44h] dl +
mov byte ptr [esi+44h] 1 +
mov eax [eax+8] +
push esi  +
mov byte ptr [eax+44h] 1 +
call sub_401380  +
jmp loc_402930  +
cmp byte ptr [eax+44h] 0 +
jnz loc_4028CE  +
mov byte ptr [eax+44h] 1 +
push esi  +
mov byte ptr [esi+44h] 0 +
call sub_4010F0  +
mov eax [esi] +
mov ecx [ebp+var_4] +
cmp byte ptr [eax+45h] 0 +
jnz loc_4028E9  +
mov edx [eax+8] +
cmp byte ptr [edx+44h] 1 +
jnz loc_4028FC  +
mov edx [eax] +
cmp byte ptr [edx+44h] 1 +
jnz loc_4028FC  +
mov byte ptr [eax+44h] 0 +
mov eax [ecx+4] +
mov ebx esi +
mov esi [esi+4] +
cmp ebx [eax+4] +
jnz loc_402835  +
jmp loc_402930  +
mov edx [eax] +
cmp byte ptr [edx+44h] 1 +
jnz loc_40291A  +
mov edx [eax+8] +
mov byte ptr [edx+44h] 1 +
push eax  +
mov byte ptr [eax+44h] 0 +
call sub_401380  +
mov eax [esi] +
mov ecx [ebp+var_4] +
mov dl [esi+44h] +
mov [eax+44h] dl +
mov byte ptr [esi+44h] 1 +
mov eax [eax] +
push esi  +
mov byte ptr [eax+44h] 1 +
call sub_4010F0  +
mov byte ptr [ebx+44h] 1 +
cmp dword ptr [edi+3Ch] 10h +
jb loc_402946  +
mov ecx [edi+28h] +
push ecx  +
call sub_42520B  +
add esp 4 +
xor esi esi +
mov ebx 0Fh +
mov [edi+3Ch] ebx +
mov [edi+38h] esi +
mov byte ptr [edi+28h] 0 +
cmp dword ptr [edi+20h] 10h +
jb loc_402969  +
mov edx [edi+0Ch] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [edi+20h] ebx +
mov [edi+1Ch] esi +
push edi  +
mov byte ptr [edi+0Ch] 0 +
call sub_42520B  +
mov ecx [ebp+var_4] +
mov eax [ecx+8] +
add esp 4 +
pop edi  +
cmp eax esi +
pop esi  +
pop ebx  +
jbe loc_40298D  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ecx +
mov edi esi +
cmp [esi+45h] bl +
jnz loc_402A12  +
mov eax [edi+8] +
mov ecx [ebp+var_4] +
push eax  +
call sub_4029A0  +
cmp dword ptr [esi+3Ch] 10h +
mov edi [edi] +
jb loc_4029D6  +
mov ecx [esi+28h] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+3Ch] 0Fh +
mov [esi+38h] ebx +
mov [esi+28h] bl +
cmp dword ptr [esi+20h] 10h +
jb loc_4029F5  +
mov edx [esi+0Ch] +
push edx  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+20h] 0Fh +
mov [esi+1Ch] ebx +
push esi  +
mov [esi+0Ch] bl +
call sub_42520B  +
add esp 4 +
mov esi edi +
cmp [edi+45h] bl +
jz loc_4029B6  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_402A6C  +
cmp edx eax +
jnz loc_402A6C  +
mov eax [eax+4] +
push eax  +
mov ecx esi +
call sub_4029A0  +
mov eax [esi+4] +
mov [eax+4] eax +
mov eax [esi+4] +
mov [eax] eax +
mov eax [esi+4] +
mov [eax+8] eax +
mov ecx [esi+4] +
mov eax [ebp+arg_0] +
mov dword ptr [esi+8] 0 +
mov edx [ecx] +
mov [eax] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp ecx edx +
jz loc_402AD2  +
cmp byte ptr [ecx+45h] 0 +
mov edx ecx +
jnz loc_402ABE  +
mov eax [ecx+8] +
cmp byte ptr [eax+45h] 0 +
jnz loc_402A9F  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+45h] 0 +
jnz loc_402A9A  +
jmp loc_402A90  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+45h] 0 +
jz loc_402A90  +
mov [ebp+arg_4] ecx +
jmp loc_402ABE  +
mov eax [ecx+4] +
cmp byte ptr [eax+45h] 0 +
jnz loc_402ABB  +
cmp ecx [eax+8] +
jnz loc_402ABB  +
mov ecx eax +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
cmp byte ptr [eax+45h] 0 +
jz loc_402AA8  +
mov [ebp+arg_4] eax +
push edx  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_402700  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_402A70  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset sub_43F9B8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_14] +
push eax  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_402A20  +
mov ecx [esi+4] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43D411  +
mov eax large fs:0 +
push eax  +
sub esp 58Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov edx [ebp+10h] +
xor ebx ebx +
push 3FFh  +
mov [ebp-52Ch] eax +
lea eax [ebp-40Fh] +
push ebx  +
mov [ebp-534h] ebx +
push eax  +
mov [ebp-538h] ecx +
mov [ebp-530h] edx +
mov [ebp-410h] bl +
call sub_426210  +
add esp 0Ch +
push ebx  +
mov edi 0Fh +
push offset unk_441AD0  +
lea ecx [ebp-448h] +
mov [ebp-434h] edi +
mov [ebp-438h] ebx +
mov [ebp-448h] bl +
call sub_402230  +
lea ecx [ebp-410h] +
push 2  +
push ecx  +
mov [ebp-4] ebx +
call sub_41AA70  +
lea eax [ebp-410h] +
add esp 8 +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_402BF1  +
sub eax esi +
push eax  +
lea edx [ebp-410h] +
push edx  +
lea ecx [ebp-448h] +
call sub_402230  +
push 1  +
push offset asc_441A28  +
lea ecx [ebp-448h] +
call sub_401CE0  +
mov edx off_44F1A8 +
mov eax edx +
lea esi [eax+1] +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_402C30  +
sub eax esi +
push eax  +
push edx  +
lea ecx [ebp-448h] +
call sub_401CE0  +
mov eax [ebp-448h] +
mov esi 10h +
cmp [ebp-434h] esi +
jnb loc_402C5F  +
lea eax [ebp-448h] +
push eax  +
call sub_41A570  +
add esp 4 +
test eax eax +
jz loc_402FC2  +
push 44h  +
lea eax [ebp-598h] +
push ebx  +
push eax  +
call sub_426210  +
add esp 0Ch +
xor ecx ecx +
push 1  +
mov [ebp-42Ch] cx +
push offset asc_441ACC  +
lea ecx [ebp-42Ch] +
mov dword ptr [ebp-598h] 44h +
mov [ebp-548h] ebx +
mov [ebp-544h] ebx +
mov [ebp-540h] ebx +
mov [ebp-53Ch] ebx +
mov dword ptr [ebp-418h] 7 +
mov [ebp-41Ch] ebx +
call sub_401F20  +
mov eax [ebp-448h] +
mov byte ptr [ebp-4] 1 +
cmp [ebp-434h] esi +
jnb loc_402CE7  +
lea eax [ebp-448h] +
push eax  +
call sub_41A220  +
add esp 4 +
mov esi eax +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402CF5  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
add esp 4 +
push 2  +
push offset asc_441AC4  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
mov edx off_44F000 +
push edx  +
call sub_41A220  +
add esp 4 +
mov esi eax +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402D40  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
add esp 4 +
push 1  +
push offset asc_441AC0  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
mov eax off_44F004 +
push eax  +
call sub_41A220  +
add esp 4 +
mov esi eax +
lea edx [eax+2] +
lea ebx [ebx+0] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402D90  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
add esp 4 +
push 1  +
push offset asc_441AC0  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
mov ecx off_44F010 +
push ecx  +
call sub_41A220  +
add esp 4 +
mov esi eax +
lea edx [eax+2] +
jmp loc_402DE0  +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402DE0  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
mov edx [ebp-52Ch] +
push edx  +
call sub_41A220  +
add esp 8 +
mov esi eax +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402E16  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
add esp 4 +
push 1  +
push offset asc_441AC0  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
mov eax off_44F008 +
push eax  +
call sub_41A220  +
add esp 4 +
mov esi eax +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402E60  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
mov ecx [ebp-538h] +
push ecx  +
call sub_41A220  +
add esp 8 +
mov esi eax +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402E96  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
add esp 4 +
push 1  +
push offset asc_441AC0  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
mov edx off_44F00C +
push edx  +
call sub_41A220  +
add esp 4 +
mov esi eax +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402EE1  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push esi  +
call sub_425BC2  +
add esp 4 +
push 1  +
push offset asc_441ACC  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
mov esi [ebp-530h] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402F23  +
sub eax edx +
sar eax 1 +
push eax  +
push esi  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
push 1  +
push offset asc_441ACC  +
lea ecx [ebp-42Ch] +
call sub_401E00  +
mov eax [ebp-42Ch] +
mov edi 8 +
cmp [ebp-418h] edi +
jnb loc_402F6A  +
lea eax [ebp-42Ch] +
lea ecx [ebp-548h] +
push ecx  +
lea edx [ebp-598h] +
push edx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push ebx  +
call ds:CreateProcessW  +
test eax eax +
jnz loc_402F92  +
call ds:GetLastError  +
jmp loc_402FAA  +
mov eax [ebp-548h] +
mov esi ds:CloseHandle +
push eax  +
call esi  +
mov ecx [ebp-544h] +
push ecx  +
call esi  +
cmp [ebp-418h] edi +
jb loc_40348C  +
mov edx [ebp-42Ch] +
push edx  +
jmp loc_403484  +
push 48h  +
mov [ebp-540h] ebx +
call sub_425CDC  +
add esp 4 +
cmp eax ebx +
jz loc_4034C0  +
mov [ebp-544h] eax +
mov [eax] eax +
mov eax [ebp-544h] +
mov [eax+4] eax +
mov eax [ebp-544h] +
mov [eax+8] eax +
mov eax [ebp-544h] +
mov byte ptr [eax+44h] 1 +
mov ecx [ebp-544h] +
mov byte ptr [ecx+45h] 1 +
push 0Dh  +
push offset aAdobeProduct  +
lea ecx [ebp-480h] +
mov byte ptr [ebp-4] 2 +
mov [ebp-46Ch] edi +
mov [ebp-470h] ebx +
mov [ebp-480h] bl +
call sub_402010  +
push 4Fh  +
push offset aYourApplicatio  +
lea ecx [ebp-42Ch] +
mov byte ptr [ebp-4] 3 +
mov [ebp-418h] edi +
mov [ebp-41Ch] ebx +
mov [ebp-42Ch] bl +
call sub_402010  +
push 2  +
push offset aOk_0  +
lea ecx [ebp-49Ch] +
mov byte ptr [ebp-4] 4 +
mov [ebp-488h] edi +
mov [ebp-48Ch] ebx +
mov [ebp-49Ch] bl +
call sub_402010  +
mov eax [ebp-52Ch] +
mov byte ptr [ebp-4] 5 +
mov [ebp-4C0h] edi +
mov [ebp-4C4h] ebx +
mov [ebp-4D4h] bl +
lea esi [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_4030A0  +
mov edx [ebp-52Ch] +
sub eax esi +
push eax  +
push edx  +
lea ecx [ebp-4D4h] +
call sub_402230  +
mov eax [ebp-538h] +
sub esp 1Ch +
mov esi esp +
mov [esi+14h] edi +
mov [esi+10h] ebx +
mov byte ptr [ebp-4] 6 +
mov [ebp-530h] esp +
mov [esi] bl +
lea ecx [eax+1] +
lea esp [esp+0] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_4030E0  +
sub eax ecx +
push eax  +
mov eax [ebp-538h] +
push eax  +
mov ecx esi +
call sub_402230  +
lea ecx [ebp-4B8h] +
push ecx  +
call sub_4025C0  +
add esp 20h +
cmp dword ptr [ebp-4A4h] 10h +
mov eax [ebp-4B8h] +
mov byte ptr [ebp-4] 7 +
jnb loc_403120  +
lea eax [ebp-4B8h] +
push eax  +
call sub_41A570  +
add esp 4 +
test eax eax +
jz loc_403310  +
push 34h  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp-530h] esi +
mov byte ptr [ebp-4] 8 +
cmp esi ebx +
jz loc_4031CF  +
push 13h  +
push offset aOobeProvisioni  +
lea ecx [ebp-464h] +
mov [ebp-450h] edi +
mov [ebp-454h] ebx +
mov [ebp-464h] bl +
call sub_402230  +
mov eax [ebp-538h] +
lea edx [ebp-464h] +
push edx  +
sub esp 1Ch +
mov ecx esp +
mov [ebp-52Ch] esp +
push eax  +
mov byte ptr [ebp-4] 9 +
mov dword ptr [ebp-534h] 1 +
call sub_4023B0  +
lea ecx [ebp-528h] +
push ecx  +
call sub_4025C0  +
add esp 20h +
push eax  +
mov ecx esi +
mov dword ptr [ebp-4] 0Ah +
mov dword ptr [ebp-534h] 3 +
call loc_40BF00  +
mov [ebp-52Ch] eax +
jmp loc_4031D5  +
mov [ebp-52Ch] ebx +
test byte ptr [ebp-534h] 2 +
mov esi 10h +
jz loc_403213  +
and dword ptr [ebp-534h] 0FFFFFFFDh +
cmp [ebp-514h] esi +
jb loc_403201  +
mov edx [ebp-528h] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp-514h] edi +
mov [ebp-518h] ebx +
mov [ebp-528h] bl +
test byte ptr [ebp-534h] 1 +
mov dword ptr [ebp-4] 7 +
jz loc_40324C  +
cmp [ebp-450h] esi +
jb loc_40323A  +
mov eax [ebp-464h] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp-450h] edi +
mov [ebp-454h] ebx +
mov [ebp-464h] bl +
cmp [ebp-52Ch] ebx +
jz loc_403315  +
mov edx off_44F0A0 +
mov eax edx +
mov [ebp-4DCh] edi +
mov [ebp-4E0h] ebx +
mov [ebp-4F0h] bl +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_403275  +
sub eax esi +
push eax  +
push edx  +
lea ecx [ebp-4F0h] +
call sub_402230  +
mov esi [ebp-52Ch] +
lea ecx [ebp-4F0h] +
push ecx  +
lea edx [ebp-50Ch] +
push edx  +
mov ecx esi +
mov byte ptr [ebp-4] 0Dh +
call sub_40BCB0  +
push eax  +
lea ecx [ebp-42Ch] +
mov byte ptr [ebp-4] 0Eh +
call sub_402330  +
cmp dword ptr [ebp-4F8h] 10h +
jb loc_4032D2  +
mov eax [ebp-50Ch] +
push eax  +
call sub_425BC2  +
add esp 4 +
cmp dword ptr [ebp-4DCh] 10h +
mov [ebp-4F8h] edi +
mov [ebp-4FCh] ebx +
mov [ebp-50Ch] bl +
mov byte ptr [ebp-4] 7 +
jb loc_403300  +
mov ecx [ebp-4F0h] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx esi +
call sub_40BE40  +
push esi  +
call sub_42520B  +
add esp 4 +
mov esi 10h +
sub esp 1Ch +
mov ecx esp +
mov [ebp-530h] esp +
push 0FFFFFFFFh  +
push ebx  +
lea edx [ebp-49Ch] +
mov [ecx+14h] edi +
mov [ecx+10h] ebx +
push edx  +
mov [ecx] bl +
call sub_401B00  +
sub esp 1Ch +
mov ecx esp +
mov [ebp-52Ch] esp +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp-42Ch] +
mov [ecx+14h] edi +
mov [ecx+10h] ebx +
push eax  +
mov byte ptr [ebp-4] 0Fh +
mov [ecx] bl +
call sub_401B00  +
sub esp 1Ch +
mov ecx esp +
mov [ebp-538h] esp +
push 0FFFFFFFFh  +
push ebx  +
lea edx [ebp-480h] +
mov [ecx+14h] edi +
mov [ecx+10h] ebx +
push edx  +
mov byte ptr [ebp-4] 10h +
mov [ecx] bl +
call sub_401B00  +
push ebx  +
mov byte ptr [ebp-4] 7 +
call sub_401960  +
add esp 58h +
cmp [ebp-4A4h] esi +
jb loc_4033A7  +
mov eax [ebp-4B8h] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp-4A4h] edi +
mov [ebp-4A8h] ebx +
mov [ebp-4B8h] bl +
cmp [ebp-4C0h] esi +
jb loc_4033D0  +
mov ecx [ebp-4D4h] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp-4C0h] edi +
mov [ebp-4C4h] ebx +
mov [ebp-4D4h] bl +
cmp [ebp-488h] esi +
jb loc_4033F9  +
mov edx [ebp-49Ch] +
push edx  +
call sub_425BC2  +
add esp 4 +
mov [ebp-488h] edi +
mov [ebp-48Ch] ebx +
mov [ebp-49Ch] bl +
cmp [ebp-418h] esi +
jb loc_403422  +
mov eax [ebp-42Ch] +
push eax  +
call sub_425BC2  +
add esp 4 +
mov [ebp-418h] edi +
mov [ebp-41Ch] ebx +
mov [ebp-42Ch] bl +
cmp [ebp-46Ch] esi +
jb loc_40344B  +
mov ecx [ebp-480h] +
push ecx  +
call sub_425BC2  +
add esp 4 +
mov [ebp-46Ch] edi +
mov [ebp-470h] ebx +
mov [ebp-480h] bl +
mov eax [ebp-544h] +
mov ecx [eax] +
push eax  +
push ecx  +
lea edx [ebp-530h] +
push edx  +
lea ecx [ebp-548h] +
mov byte ptr [ebp-4] 11h +
call sub_402A20  +
mov eax [ebp-544h] +
push eax  +
call sub_42520B  +
add esp 4 +
cmp dword ptr [ebp-434h] 10h +
jb loc_4034A4  +
mov ecx [ebp-448h] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
lea edx [ebp-530h] +
push edx  +
lea ecx [ebp-554h] +
mov [ebp-530h] ebx +
call sub_4252D5  +
push offset unk_44B0F0  +
lea eax [ebp-554h] +
push eax  +
mov dword ptr [ebp-554h] offset off_4419DC +
call sub_425C90  +
sub esp 8 +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov edx [edx] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ecx] +
xor eax eax +
mov [ebp+var_4] eax +
cmp edi esi +
jnb loc_403648  +
push ebx  +
movzx ecx word ptr [edi] +
mov ebx [ebp+arg_10] +
mov [ebp+var_8] edi +
lea eax [ecx-0D800h] +
add edi 2 +
cmp eax 3FFh +
ja loc_40357E  +
cmp edi esi +
jnb loc_40357E  +
movzx eax word ptr [edi] +
lea esi [eax-0DC00h] +
cmp esi 3FFh +
ja loc_403561  +
add ecx 0FFFF2809h +
shl ecx 0Ah +
add ecx eax +
add edi 2 +
jmp loc_403592  +
test ebx ebx +
jnz loc_403592  +
mov ecx [ebp+arg_0] +
sub edi 2 +
pop ebx  +
mov [ecx] edi +
mov ecx [ebp+arg_8] +
pop edi  +
mov eax 3 +
mov [ecx] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
test ebx ebx +
jnz loc_403592  +
cmp ecx 0DC00h +
jb loc_403592  +
cmp ecx 0DFFFh +
jbe loc_403565  +
cmp ecx 80h +
jnb loc_4035A1  +
mov esi 1 +
jmp loc_4035D1  +
cmp ecx 800h +
jb loc_4035CC  +
cmp ecx 10000h +
jnb loc_4035B8  +
mov esi 3 +
jmp loc_4035D1  +
cmp ecx 200000h +
jnb loc_4035C7  +
mov esi 4 +
jmp loc_4035D1  +
mov ecx 0FFFDh +
mov esi 2 +
movzx ebx si +
add edx ebx +
cmp edx [ebp+arg_C] +
ja loc_40363A  +
lea eax [ebx-1] +
cmp eax 3 +
ja loc_403619  +
jmp ds:off_403658[eax*4]  +
mov al cl +
and al 3Fh +
dec edx  +
or al 80h +
mov [edx] al +
shr ecx 6 +
mov al cl +
and al 3Fh +
dec edx  +
or al 80h +
mov [edx] al +
shr ecx 6 +
mov al cl +
and al 3Fh +
dec edx  +
or al 80h +
mov [edx] al +
shr ecx 6 +
mov al ds:byte_441C00[ebx] +
dec edx  +
or al cl +
mov [edx] al +
mov esi [ebp+arg_4] +
add edx ebx +
cmp edi esi +
jb loc_403523  +
mov ecx [ebp+arg_0] +
mov eax [ebp+var_4] +
pop ebx  +
mov [ecx] edi +
mov ecx [ebp+arg_8] +
pop edi  +
mov [ecx] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov edi [ebp+var_8] +
movzx ecx si +
sub edx ecx +
mov eax 2 +
pop ebx  +
mov ecx [ebp+arg_0] +
mov [ecx] edi +
mov ecx [ebp+arg_8] +
pop edi  +
mov [ecx] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
cmp eax 1 +
jnz loc_403690  +
cmp dword ptr [ecx+14h] 10h +
jb loc_403683  +
mov ecx [ecx] +
mov al [ebp+arg_8] +
mov edx [ebp+arg_0] +
mov [ecx+edx] al +
pop ebp  +
retn 0Ch  +
cmp dword ptr [ecx+14h] 10h +
jb loc_403698  +
mov ecx [ecx] +
add ecx [ebp+arg_0] +
push eax  +
movsx eax [ebp+arg_8] +
push eax  +
push ecx  +
call sub_426210  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov eax ecx +
mov ecx [ebp+arg_4] +
cmp ecx 1 +
jnz loc_4036D4  +
cmp dword ptr [eax+14h] 8 +
jb loc_4036C5  +
mov eax [eax] +
mov ecx [ebp+arg_0] +
mov dx [ebp+arg_8] +
mov [eax+ecx*2] dx +
pop ebp  +
retn 0Ch  +
cmp dword ptr [eax+14h] 8 +
jb loc_4036DC  +
mov eax [eax] +
mov edx [ebp+arg_0] +
push edi  +
lea edi [eax+edx*2] +
test ecx ecx +
jz loc_4036FD  +
mov eax dword ptr [ebp+arg_8] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_4253BC  +
mov dword ptr [esi] offset off_441C0C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_4253BC  +
mov dword ptr [esi] offset off_441C18 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
sub esp 0Ch +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
lea eax [esi+4] +
mov [esi] ecx +
mov [eax] edi +
cmp ecx edx +
jz loc_4037E2  +
mov ecx [ebp+arg_10] +
cmp edi ecx +
jnz loc_40379E  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebp+var_C] +
mov [ebp+arg_4] offset aEmptyTargetBuf +
call sub_4252D5  +
push offset unk_44B380  +
lea ecx [ebp+var_C] +
push ecx  +
mov [ebp+var_C] offset off_441C18 +
call sub_425C90  +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_14] bl +
setnz bl  +
push ebx  +
push ecx  +
push eax  +
push edx  +
push esi  +
call sub_403500  +
add esp 14h +
pop ebx  +
cmp eax 3 +
jnz loc_4037E2  +
lea edx [ebp+arg_4] +
push edx  +
lea ecx [ebp+var_C] +
mov [ebp+arg_4] offset aBadUtf16Sequen +
call sub_4252D5  +
push offset unk_44B380  +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_C] offset off_441C18 +
call sub_425C90  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D440  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
mov eax [ebp+arg_0] +
mov esi eax +
or esi 7 +
cmp esi 7FFFFFFEh +
jbe loc_403834  +
mov esi eax +
jmp loc_40385B  +
mov ebx [edi+14h] +
mov eax 0AAAAAAABh +
mul  esi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_40385B  +
mov eax 7FFFFFFEh +
sub eax ecx +
lea esi [ecx+ebx] +
cmp ebx eax +
jbe loc_40385B  +
mov esi 7FFFFFFEh +
xor eax eax +
lea ecx [esi+1] +
mov [ebp+var_4] eax +
cmp ecx eax +
jbe loc_40387E  +
cmp ecx 7FFFFFFFh +
ja loc_403882  +
add ecx ecx +
push ecx  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_403882  +
mov ebx eax +
jmp loc_4038D6  +
lea edx [ebp+var_18] +
push edx  +
lea ecx [ebp+var_24] +
mov [ebp+var_18] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea eax [ebp+var_24] +
push eax  +
mov [ebp+var_24] offset off_4419DC +
call sub_425C90  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [ebp+arg_0] eax +
inc eax  +
mov [ebp+var_10] esp +
push eax  +
add ecx 18h +
mov byte ptr [ebp+var_4] 2 +
call sub_401320  +
mov [ebp+var_18] eax +
mov eax offset loc_4038CD +
retn   +
mov edi [ebp-14h] +
mov esi [ebp+8] +
mov ebx [ebp-18h] +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_4038F9  +
cmp dword ptr [edi+14h] 8 +
jb loc_4038E7  +
mov eax [edi] +
jmp loc_4038E9  +
mov eax edi +
add ecx ecx +
push ecx  +
push eax  +
push ebx  +
call loc_425490  +
mov ecx [ebp+arg_4] +
add esp 0Ch +
cmp dword ptr [edi+14h] 8 +
jb loc_40390D  +
mov edx [edi] +
push edx  +
call sub_42520B  +
mov ecx [ebp+arg_4] +
add esp 4 +
mov [edi] ebx +
mov [edi+14h] esi +
mov [edi+10h] ecx +
cmp esi 8 +
jb loc_40391C  +
mov edi ebx +
xor edx edx +
mov [edi+ecx*2] dx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov edx [esi+10h] +
push edi  +
mov edi [ebp+8] +
cmp edx edi +
jb loc_403CB1  +
mov eax [ebp+10h] +
push ebx  +
mov ebx [eax+10h] +
cmp ebx [ebp+14h] +
jb loc_403CB1  +
mov eax edx +
sub eax edi +
cmp eax [ebp+0Ch] +
jnb loc_4039D1  +
mov [ebp+0Ch] eax +
sub ebx [ebp+14h] +
mov ecx ebx +
mov ebx [ebp+18h] +
cmp ecx ebx +
jnb loc_4039DF  +
mov ebx ecx +
mov ecx edx +
sub ecx [ebp+0Ch] +
or edx 0FFFFFFFFh +
sub edx ebx +
cmp edx ecx +
ja loc_4039F7  +
push offset aStringTooLong  +
call sub_424688  +
sub eax [ebp+0Ch] +
mov [ebp+8] eax +
lea eax [ecx+ebx] +
mov ecx [esi+10h] +
mov [ebp+18h] eax +
cmp ecx eax +
jnb loc_403A43  +
cmp eax 0FFFFFFFEh +
jbe loc_403A19  +
push offset aStringTooLong  +
call sub_424688  +
mov edx [esi+14h] +
cmp edx eax +
jnb loc_403A2E  +
mov eax [ebp+18h] +
push ecx  +
push eax  +
mov ecx esi +
call sub_401600  +
jmp loc_403A43  +
test eax eax +
jnz loc_403A43  +
mov [esi+10h] eax +
cmp edx 10h +
jb loc_403A3E  +
mov eax [esi] +
jmp loc_403A40  +
mov eax esi +
mov byte ptr [eax] 0 +
cmp esi [ebp+10h] +
jz loc_403AB3  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_403A54  +
mov ecx [esi] +
jmp loc_403A56  +
mov ecx esi +
cmp eax 10h +
jb loc_403A5F  +
mov eax [esi] +
jmp loc_403A61  +
mov eax esi +
mov edx [ebp+8] +
add ecx edi +
add ecx [ebp+0Ch] +
push edx  +
add eax edi +
push ecx  +
add eax ebx +
push eax  +
call loc_425800  +
mov eax [ebp+10h] +
add esp 0Ch +
cmp dword ptr [eax+14h] 10h +
mov ecx eax +
jb loc_403A85  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 10h +
jb loc_403A9F  +
add ecx [ebp+14h] +
mov eax [esi] +
push ebx  +
push ecx  +
add eax edi +
push eax  +
call loc_425490  +
jmp loc_403C87  +
add ecx [ebp+14h] +
push ebx  +
mov eax esi +
push ecx  +
add eax edi +
push eax  +
call loc_425490  +
jmp loc_403C87  +
mov ecx [ebp+0Ch] +
cmp ebx ecx +
ja loc_403B20  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_403AC6  +
mov ecx [esi] +
jmp loc_403AC8  +
mov ecx esi +
cmp eax 10h +
jb loc_403AD1  +
mov eax [esi] +
jmp loc_403AD3  +
mov eax esi +
add ecx [ebp+14h] +
push ebx  +
push ecx  +
add eax edi +
push eax  +
call loc_425800  +
mov eax [esi+14h] +
add esp 0Ch +
cmp eax 10h +
jb loc_403AEF  +
mov ecx [esi] +
jmp loc_403AF1  +
mov ecx esi +
cmp eax 10h +
jb loc_403B0B  +
mov eax [esi] +
mov edx [ebp+8] +
add ecx edi +
add ecx [ebp+0Ch] +
push edx  +
add eax edi +
push ecx  +
add eax ebx +
jmp loc_403C81  +
mov edx [ebp+8] +
add ecx edi +
add ecx [ebp+0Ch] +
mov eax esi +
push edx  +
add eax edi +
push ecx  +
add eax ebx +
jmp loc_403C81  +
mov eax [ebp+14h] +
cmp eax edi +
ja loc_403B86  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_403B33  +
mov ecx [esi] +
jmp loc_403B35  +
mov ecx esi +
cmp eax 10h +
jb loc_403B3E  +
mov eax [esi] +
jmp loc_403B40  +
mov eax esi +
mov edx [ebp+8] +
add ecx edi +
add ecx [ebp+0Ch] +
push edx  +
add eax edi +
push ecx  +
add eax ebx +
push eax  +
call loc_425800  +
mov eax [esi+14h] +
add esp 0Ch +
cmp eax 10h +
jb loc_403B63  +
mov ecx [esi] +
jmp loc_403B65  +
mov ecx esi +
cmp eax 10h +
jb loc_403B78  +
add ecx [ebp+14h] +
mov eax [esi] +
push ebx  +
push ecx  +
add eax edi +
jmp loc_403C81  +
add ecx [ebp+14h] +
mov eax esi +
push ebx  +
push ecx  +
add eax edi +
jmp loc_403C81  +
add ecx edi +
cmp ecx eax +
mov eax [esi+14h] +
ja loc_403BF7  +
cmp eax 10h +
jb loc_403B98  +
mov ecx [esi] +
jmp loc_403B9A  +
mov ecx esi +
cmp eax 10h +
jb loc_403BA3  +
mov eax [esi] +
jmp loc_403BA5  +
mov eax esi +
mov edx [ebp+8] +
add ecx edi +
add ecx [ebp+0Ch] +
push edx  +
add eax edi +
push ecx  +
add eax ebx +
push eax  +
call loc_425800  +
mov ecx [esi+14h] +
add esp 0Ch +
cmp ecx 10h +
jb loc_403BC8  +
mov eax [esi] +
jmp loc_403BCA  +
mov eax esi +
cmp ecx 10h +
jb loc_403BE3  +
sub eax [ebp+0Ch] +
mov ecx [esi] +
add eax [ebp+14h] +
push ebx  +
add eax ebx +
push eax  +
add ecx edi +
push ecx  +
jmp loc_403C82  +
sub eax [ebp+0Ch] +
push ebx  +
add eax [ebp+14h] +
mov ecx esi +
add eax ebx +
push eax  +
add ecx edi +
push ecx  +
jmp loc_403C82  +
cmp eax 10h +
jb loc_403C00  +
mov ecx [esi] +
jmp loc_403C02  +
mov ecx esi +
cmp eax 10h +
jb loc_403C0B  +
mov eax [esi] +
jmp loc_403C0D  +
mov eax esi +
mov edx [ebp+0Ch] +
add ecx [ebp+14h] +
push edx  +
push ecx  +
add eax edi +
push eax  +
call loc_425800  +
mov eax [esi+14h] +
add esp 0Ch +
cmp eax 10h +
jb loc_403C2C  +
mov ecx [esi] +
jmp loc_403C2E  +
mov ecx esi +
cmp eax 10h +
jb loc_403C37  +
mov eax [esi] +
jmp loc_403C39  +
mov eax esi +
mov edx [ebp+8] +
add ecx edi +
add ecx [ebp+0Ch] +
push edx  +
add eax edi +
push ecx  +
add eax ebx +
push eax  +
call loc_425800  +
mov eax [esi+14h] +
add esp 0Ch +
cmp eax 10h +
jb loc_403C5F  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_403C62  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_403C6B  +
mov eax [esi] +
jmp loc_403C6D  +
mov eax esi +
mov edx ebx +
sub edx [ebp+0Ch] +
add eax edi +
push edx  +
mov edx [ebp+10h] +
add edx [ebp+14h] +
add edx ebx +
add eax [ebp+0Ch] +
push edx  +
push eax  +
call loc_425800  +
mov ecx [ebp+18h] +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ecx +
pop ebx  +
jb loc_403CA5  +
mov eax [esi] +
mov byte ptr [eax+ecx] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov eax esi +
pop edi  +
mov byte ptr [eax+ecx] 0 +
pop esi  +
pop ebp  +
retn 14h  +
***
push offset aInvalidStringP  +
call sub_4246D5  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
or ecx 0FFFFFFFFh +
sub ecx eax +
cmp ecx ebx +
ja loc_403CE0  +
push offset aStringTooLong  +
call sub_424688  +
test ebx ebx +
jz loc_403D60  +
push edi  +
lea edi [eax+ebx] +
cmp edi 0FFFFFFFEh +
jbe loc_403CF7  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_403D33  +
push eax  +
push edi  +
mov ecx esi +
call sub_401600  +
test edi edi +
jz loc_403D5F  +
mov edx [ebp+arg_4] +
mov eax [esi+10h] +
push edx  +
push ebx  +
push eax  +
mov ecx esi +
call sub_403670  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_403D59  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
test edi edi +
jnz loc_403D0B  +
mov [esi+10h] edi +
cmp ecx 10h +
jb loc_403D4D  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
pop edi  +
mov eax esi +
pop esi  +
mov byte ptr [eax] 0 +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
or ecx 0FFFFFFFFh +
sub ecx eax +
cmp ecx ebx +
ja loc_403D90  +
push offset aStringTooLong  +
call sub_424688  +
test ebx ebx +
jz loc_403E1F  +
push edi  +
lea edi [eax+ebx] +
cmp edi 7FFFFFFEh +
jbe loc_403DAE  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_403DEC  +
push eax  +
push edi  +
mov ecx esi +
call sub_4037F0  +
test edi edi +
jz loc_403E1E  +
mov eax [ebp+arg_4] +
mov ecx [esi+10h] +
push eax  +
push ebx  +
push ecx  +
mov ecx esi +
call sub_4036B0  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_403E16  +
mov eax [esi] +
xor edx edx +
mov [eax+edi*2] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
test edi edi +
jnz loc_403DC2  +
mov [esi+10h] edi +
cmp ecx 8 +
jb loc_403E08  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax] dx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
pop edi  +
mov eax esi +
xor edx edx +
pop esi  +
mov [eax] dx +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
xor edx edx +
mov [eax+edi*2] dx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43D460  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_0] +
mov edi [esi+10h] +
sub eax ebx +
cmp edi eax +
ja loc_403E93  +
cmp [esi+14h] eax +
jz loc_403E93  +
push 1  +
push eax  +
call sub_4017A0  +
test al al +
jz loc_403E93  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_403E8D  +
mov eax [esi] +
jmp loc_403E8F  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
mov [ebp+var_4] 0 +
lea ebx [ebx+0] +
cmp ebx [ebp+arg_4] +
jz loc_403F86  +
mov eax [esi+10h] +
mov bl [ebx] +
or ecx 0FFFFFFFFh +
sub ecx eax +
cmp ecx 1 +
ja loc_403EC2  +
push offset aStringTooLong  +
call sub_424688  +
lea edi [eax+1] +
cmp edi 0FFFFFFFEh +
jbe loc_403ED4  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_403F2B  +
push eax  +
push edi  +
mov ecx esi +
call sub_401600  +
test edi edi +
jz loc_403F7B  +
mov ecx [esi+10h] +
mov edx 10h +
cmp [esi+14h] edx +
jb loc_403F57  +
mov eax [esi] +
jmp loc_403F59  +
mov esi [ebp-14h] +
cmp dword ptr [esi+14h] 10h +
jb loc_403F11  +
mov edx [esi] +
push edx  +
call sub_42520B  +
add esp 4 +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push 0  +
mov byte ptr [esi] 0 +
call sub_425C90  +
test edi edi +
jnz loc_403EEC  +
mov [esi+10h] edi +
cmp ecx 10h +
jb loc_403F47  +
mov eax [esi] +
inc [ebp+arg_0]  +
mov ebx [ebp+arg_0] +
mov byte ptr [eax] 0 +
jmp loc_403EA0  +
inc [ebp+arg_0]  +
mov ebx [ebp+arg_0] +
mov eax esi +
mov byte ptr [eax] 0 +
jmp loc_403EA0  +
mov eax esi +
mov [eax+ecx] bl +
mov [esi+10h] edi +
cmp [esi+14h] edx +
jb loc_403F75  +
mov eax [esi] +
inc [ebp+arg_0]  +
mov ebx [ebp+arg_0] +
mov byte ptr [eax+edi] 0 +
jmp loc_403EA0  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
inc [ebp+arg_0]  +
mov ebx [ebp+arg_0] +
jmp loc_403EA0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43D4AD  +
mov eax large fs:0 +
push eax  +
sub esp 134h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ebp+var_138] eax +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] eax +
mov [ebp+var_134] esi +
mov [esi] al +
cmp dword ptr [ecx+14h] 8 +
mov [ebp+var_4] eax +
mov [ebp+var_138] 1 +
jb loc_404005  +
mov eax [ecx] +
jmp loc_404007  +
mov eax ecx +
mov ecx [ecx+10h] +
lea ecx [eax+ecx*2] +
mov [ebp+var_130] ecx +
cmp eax ecx +
jz loc_404104  +
jmp loc_404026  +
mov ecx [ebp+var_130] +
mov edx [ebp+arg_8] +
push edx  +
lea edx [ebp+var_10] +
push edx  +
lea edx [ebp+var_110] +
push edx  +
push ecx  +
push eax  +
lea eax [ebp+var_140] +
push eax  +
call sub_403750  +
mov ecx [esi+14h] +
add esp 18h +
cmp ecx 10h +
jb loc_404052  +
mov edx [esi] +
jmp loc_404054  +
mov edx esi +
mov eax [esi+10h] +
lea ebx [eax+edx] +
cmp ecx 10h +
jb loc_404063  +
mov ecx [esi] +
jmp loc_404065  +
mov ecx esi +
mov edx [ebp+var_13C] +
lea edi [eax+ecx] +
mov ecx [ebp+var_134] +
push ecx  +
push edx  +
lea eax [ebp+var_110] +
push eax  +
lea ecx [ebp+var_12C] +
mov [ebp+var_118] 0Fh +
mov [ebp+var_11C] 0 +
mov byte ptr [ebp+var_12C] 0 +
call sub_403E30  +
cmp dword ptr [esi+14h] 10h +
mov [ebp+var_4] 1 +
jb loc_4040B4  +
mov eax [esi] +
jmp loc_4040B6  +
mov eax esi +
test ebx ebx +
jz loc_4040BC  +
sub ebx edi +
test edi edi +
jz loc_4040C2  +
sub edi eax +
push 0FFFFFFFFh  +
push 0  +
lea ecx [ebp+var_12C] +
push ecx  +
push ebx  +
push edi  +
mov ecx esi +
call loc_4039A0  +
cmp [ebp+var_118] 10h +
mov byte ptr [ebp+var_4] 0 +
jb loc_4040F2  +
mov edx [ebp+var_12C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_140] +
cmp eax [ebp+var_130] +
jnz loc_404020  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
xor ecx ecx +
mov dword ptr [eax] 67452301h +
mov dword ptr [eax+4] 0EFCDAB89h +
mov dword ptr [eax+8] 98BADCFEh +
mov dword ptr [eax+0Ch] 10325476h +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add eax 2 +
push esi  +
lea ecx [ecx+0] +
movzx edx byte ptr [eax+1] +
movzx esi byte ptr [eax] +
shl edx 8 +
or edx esi +
movzx esi byte ptr [eax-1] +
shl edx 8 +
or edx esi +
movzx esi byte ptr [eax-2] +
shl edx 8 +
or edx esi +
mov [eax-2] edx +
add eax 4 +
dec ecx  +
jnz loc_404170  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 40h +
push ebx  +
mov eax [ebp+arg_0] +
mov ecx [eax+0Ch] +
mov edx [eax] +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi [eax+8] +
mov eax [ebp+arg_4] +
mov ebx ecx +
xor ebx edi +
and ebx esi +
xor ebx ecx +
add ebx [eax] +
mov [ebp+var_4] ecx +
lea ecx [ebx+edx-28955B88h] +
mov edx [ebp+var_4] +
rol ecx 7 +
add ecx esi +
mov ebx edi +
xor ebx esi +
and ebx ecx +
xor ebx edi +
add ebx [eax+4] +
lea edx [ebx+edx-173848AAh] +
rol edx 0Ch +
add edx ecx +
mov ebx esi +
xor ebx ecx +
and ebx edx +
xor ebx esi +
add ebx [eax+8] +
lea esi [ebx+edi+242070DBh] +
mov edi [ebp+arg_0] +
mov edi [edi+4] +
ror esi 0Fh +
add esi edx +
mov ebx edx +
xor ebx ecx +
and ebx esi +
xor ebx ecx +
add ebx [eax+0Ch] +
lea edi [ebx+edi-3E423112h] +
ror edi 0Ah +
add edi esi +
mov ebx edx +
xor ebx esi +
and ebx edi +
xor ebx edx +
add ebx [eax+10h] +
mov [ebp+arg_4] edi +
lea ecx [ebx+ecx-0A83F051h] +
rol ecx 7 +
add ecx edi +
mov ebx esi +
xor ebx edi +
and ebx ecx +
xor ebx esi +
add ebx [eax+14h] +
lea edx [ebx+edx+4787C62Ah] +
mov ebx edi +
xor ebx ecx +
rol edx 0Ch +
add edx ecx +
and ebx edx +
xor ebx edi +
add ebx [eax+18h] +
mov edi [eax+1Ch] +
lea esi [ebx+esi-57CFB9EDh] +
ror esi 0Fh +
add esi edx +
mov ebx edx +
xor ebx ecx +
and ebx esi +
xor ebx ecx +
mov [ebp+var_10] edi +
add ebx edi +
mov edi [ebp+arg_4] +
lea edi [ebx+edi-2B96AFFh] +
ror edi 0Ah +
add edi esi +
mov ebx edx +
xor ebx esi +
and ebx edi +
xor ebx edx +
add ebx [eax+20h] +
lea ecx [ebx+ecx+698098D8h] +
rol ecx 7 +
add ecx edi +
mov ebx esi +
xor ebx edi +
and ebx ecx +
xor ebx esi +
add ebx [eax+24h] +
lea edx [ebx+edx-74BB0851h] +
rol edx 0Ch +
add edx ecx +
mov ebx edi +
xor ebx ecx +
and ebx edx +
xor ebx edi +
add ebx [eax+28h] +
lea esi [ebx+esi-0A44Fh] +
mov ebx edx +
xor ebx ecx +
ror esi 0Fh +
add esi edx +
and ebx esi +
xor ebx ecx +
add ebx [eax+2Ch] +
lea edi [ebx+edi-76A32842h] +
mov ebx edx +
xor ebx esi +
ror edi 0Ah +
add edi esi +
and ebx edi +
xor ebx edx +
add ebx [eax+30h] +
lea ecx [ebx+ecx+6B901122h] +
rol ecx 7 +
add ecx edi +
mov ebx esi +
xor ebx edi +
and ebx ecx +
xor ebx esi +
add ebx [eax+34h] +
lea edx [ebx+edx-2678E6Dh] +
rol edx 0Ch +
add edx ecx +
mov ebx edi +
xor ebx ecx +
and ebx edx +
xor ebx edi +
add ebx [eax+38h] +
mov [ebp+var_4] edx +
lea esi [ebx+esi-5986BC72h] +
mov ebx edx +
xor ebx ecx +
ror esi 0Fh +
add esi edx +
and ebx esi +
xor ebx ecx +
add ebx [eax+3Ch] +
lea edi [ebx+edi+49B40821h] +
ror edi 0Ah +
add edi esi +
mov ebx esi +
xor ebx edi +
and ebx edx +
xor ebx esi +
add ebx [eax+4] +
mov edx edi +
lea ecx [ebx+ecx-9E1DA9Eh] +
mov ebx [ebp+var_4] +
rol ecx 5 +
add ecx edi +
xor edx ecx +
and edx esi +
xor edx edi +
add edx [eax+18h] +
lea edx [edx+ebx-3FBF4CC0h] +
rol edx 9 +
add edx ecx +
mov [ebp+var_4] edx +
xor edx ecx +
and edx edi +
xor edx ecx +
add edx [eax+2Ch] +
lea esi [edx+esi+265E5A51h] +
mov edx [ebp+var_4] +
rol esi 0Eh +
add esi edx +
mov ebx edx +
xor ebx esi +
and ebx ecx +
xor ebx edx +
add ebx [eax] +
mov edx esi +
lea edi [ebx+edi-16493856h] +
ror edi 0Ch +
add edi esi +
xor edx edi +
and edx [ebp+var_4] +
mov ebx [ebp+var_4] +
xor edx esi +
add edx [eax+14h] +
lea ecx [edx+ecx-29D0EFA3h] +
rol ecx 5 +
add ecx edi +
mov edx edi +
xor edx ecx +
and edx esi +
xor edx edi +
add edx [eax+28h] +
lea edx [edx+ebx+2441453h] +
rol edx 9 +
add edx ecx +
mov ebx edx +
xor ebx ecx +
and ebx edi +
xor ebx ecx +
add ebx [eax+3Ch] +
lea esi [ebx+esi-275E197Fh] +
rol esi 0Eh +
add esi edx +
mov ebx edx +
xor ebx esi +
and ebx ecx +
xor ebx edx +
add ebx [eax+10h] +
mov [ebp+arg_4] esi +
lea edi [ebx+edi-182C0438h] +
mov ebx esi +
ror edi 0Ch +
add edi esi +
xor ebx edi +
and ebx edx +
xor ebx esi +
add ebx [eax+24h] +
mov esi edi +
lea ecx [ebx+ecx+21E1CDE6h] +
mov ebx [ebp+arg_4] +
rol ecx 5 +
add ecx edi +
xor esi ecx +
and esi [ebp+arg_4] +
xor esi edi +
add esi [eax+38h] +
lea edx [esi+edx-3CC8F82Ah] +
rol edx 9 +
add edx ecx +
mov esi edx +
xor esi ecx +
and esi edi +
xor esi ecx +
add esi [eax+0Ch] +
lea esi [esi+ebx-0B2AF279h] +
rol esi 0Eh +
add esi edx +
mov ebx edx +
xor ebx esi +
mov [ebp+arg_4] esi +
and ebx ecx +
xor ebx edx +
add ebx [eax+20h] +
lea edi [ebx+edi+455A14EDh] +
mov ebx esi +
ror edi 0Ch +
add edi esi +
xor ebx edi +
and ebx edx +
xor ebx esi +
add ebx [eax+34h] +
lea ecx [ebx+ecx-561C16FBh] +
rol ecx 5 +
add ecx edi +
mov ebx edi +
xor ebx ecx +
and ebx esi +
xor ebx edi +
mov esi [eax+8] +
add ebx esi +
lea edx [ebx+edx-3105C08h] +
rol edx 9 +
add edx ecx +
mov [ebp+var_8] esi +
mov esi [ebp+arg_4] +
mov ebx edx +
xor ebx ecx +
and ebx edi +
xor ebx ecx +
add ebx [eax+1Ch] +
lea esi [ebx+esi+676F02D9h] +
rol esi 0Eh +
add esi edx +
mov ebx edx +
xor ebx esi +
mov [ebp+var_4] ebx +
and ebx ecx +
xor ebx edx +
add ebx [eax+30h] +
mov [ebp+arg_4] esi +
lea edi [ebx+edi-72D5B376h] +
mov ebx [eax+14h] +
ror edi 0Ch +
add edi esi +
mov esi [ebp+var_4] +
xor esi edi +
add esi ebx +
mov [ebp+var_18] ebx +
mov ebx [ebp+arg_4] +
xor ebx edi +
lea ecx [esi+ecx-5C6BEh] +
mov esi [eax+20h] +
rol ecx 4 +
add ecx edi +
xor ebx ecx +
add ebx esi +
lea edx [ebx+edx-788E097Fh] +
rol edx 0Bh +
add edx ecx +
mov [ebp+var_28] esi +
mov esi [eax+2Ch] +
mov ebx edx +
xor ebx edi +
xor ebx ecx +
add ebx esi +
mov [ebp+var_3C] esi +
mov esi [ebp+arg_4] +
lea esi [ebx+esi+6D9D6122h] +
rol esi 10h +
add esi edx +
mov ebx edx +
xor ebx esi +
mov [ebp+arg_4] esi +
mov esi [eax+38h] +
mov [ebp+var_4] ebx +
xor ebx ecx +
add ebx esi +
lea edi [ebx+edi-21AC7F4h] +
ror edi 9 +
add edi [ebp+arg_4] +
mov [ebp+var_14] esi +
mov esi [ebp+var_4] +
mov ebx [eax+4] +
xor esi edi +
add esi ebx +
mov [ebp+var_24] ebx +
mov ebx [ebp+arg_4] +
xor ebx edi +
lea ecx [esi+ecx-5B4115BCh] +
mov esi [eax+10h] +
rol ecx 4 +
add ecx edi +
xor ebx ecx +
add ebx esi +
mov [ebp+var_38] esi +
lea esi [ebx+edx+4BDECFA9h] +
mov ebx [ebp+arg_4] +
rol esi 0Bh +
add esi ecx +
mov edx esi +
xor edx edi +
xor edx ecx +
add edx [eax+1Ch] +
lea edx [edx+ebx-944B4A0h] +
rol edx 10h +
add edx esi +
mov [ebp+arg_4] edx +
mov ebx esi +
xor ebx edx +
mov edx [eax+28h] +
mov [ebp+var_4] ebx +
xor ebx ecx +
add ebx edx +
mov [ebp+var_20] edx +
lea edx [ebx+edi-41404390h] +
mov edi [ebp+var_4] +
mov ebx [eax+34h] +
ror edx 9 +
add edx [ebp+arg_4] +
mov [ebp+var_34] ebx +
xor edi edx +
add edi ebx +
mov ebx [ebp+arg_4] +
lea ecx [edi+ecx+289B7EC6h] +
mov edi [eax] +
xor ebx edx +
rol ecx 4 +
add ecx edx +
xor ebx ecx +
add ebx edi +
lea esi [ebx+esi-155ED806h] +
rol esi 0Bh +
add esi ecx +
mov [ebp+var_C] edi +
mov edi [eax+0Ch] +
mov [ebp+var_1C] edi +
mov ebx esi +
xor ebx edx +
xor ebx ecx +
add ebx edi +
mov edi [ebp+arg_4] +
lea edi [ebx+edi-2B10CF7Bh] +
rol edi 10h +
add edi esi +
mov [ebp+arg_4] edi +
mov ebx esi +
xor ebx edi +
mov edi [eax+18h] +
mov [ebp+var_4] ebx +
xor ebx ecx +
add ebx edi +
lea edx [ebx+edx+4881D05h] +
mov ebx [eax+24h] +
ror edx 9 +
add edx [ebp+arg_4] +
mov [ebp+var_30] edi +
mov edi [ebp+var_4] +
xor edi edx +
add edi ebx +
lea ecx [edi+ecx-262B2FC7h] +
rol ecx 4 +
mov [ebp+var_40] ebx +
add ecx edx +
mov edi [eax+30h] +
mov eax [eax+3Ch] +
mov ebx [ebp+arg_4] +
xor ebx edx +
xor ebx ecx +
add ebx edi +
mov [ebp+var_2C] eax +
lea esi [ebx+esi-1924661Bh] +
rol esi 0Bh +
add esi ecx +
mov ebx [ebp+var_8] +
mov [ebp+var_4] edi +
mov edi esi +
xor edi edx +
xor edi ecx +
add edi eax +
mov eax [ebp+arg_4] +
lea edi [edi+eax+1FA27CF8h] +
rol edi 10h +
add edi esi +
mov eax esi +
xor eax edi +
xor eax ecx +
add eax ebx +
lea edx [eax+edx-3B53A99Bh] +
ror edx 9 +
add edx edi +
mov eax esi +
not eax  +
or eax edx +
xor eax edi +
add eax [ebp+var_C] +
lea ecx [eax+ecx-0BD6DDBCh] +
rol ecx 6 +
add ecx edx +
mov eax edi +
not eax  +
or eax ecx +
xor eax edx +
add eax [ebp+var_10] +
lea esi [eax+esi+432AFF97h] +
mov eax edx +
rol esi 0Ah +
add esi ecx +
not eax  +
or eax esi +
xor eax ecx +
add eax [ebp+var_14] +
lea edi [eax+edi-546BDC59h] +
rol edi 0Fh +
add edi esi +
mov eax ecx +
not eax  +
or eax edi +
xor eax esi +
add eax [ebp+var_18] +
lea eax [eax+edx-36C5FC7h] +
mov edx esi +
not edx  +
ror eax 0Bh +
add eax edi +
or edx eax +
xor edx edi +
add edx [ebp+var_4] +
lea ecx [edx+ecx+655B59C3h] +
rol ecx 6 +
add ecx eax +
mov edx edi +
not edx  +
or edx ecx +
xor edx eax +
add edx [ebp+var_1C] +
lea edx [edx+esi-70F3336Eh] +
rol edx 0Ah +
mov esi eax +
not esi  +
add edx ecx +
or esi edx +
xor esi ecx +
add esi [ebp+var_20] +
lea esi [esi+edi-100B83h] +
rol esi 0Fh +
add esi edx +
mov edi ecx +
not edi  +
or edi esi +
xor edi edx +
add edi [ebp+var_24] +
lea eax [edi+eax-7A7BA22Fh] +
ror eax 0Bh +
add eax esi +
mov edi edx +
not edi  +
or edi eax +
xor edi esi +
add edi [ebp+var_28] +
lea ecx [edi+ecx+6FA87E4Fh] +
rol ecx 6 +
add ecx eax +
mov edi esi +
not edi  +
or edi ecx +
xor edi eax +
add edi [ebp+var_2C] +
lea edx [edi+edx-1D31920h] +
rol edx 0Ah +
add edx ecx +
mov edi eax +
not edi  +
or edi edx +
xor edi ecx +
add edi [ebp+var_30] +
lea esi [edi+esi-5CFEBCECh] +
rol esi 0Fh +
add esi edx +
mov edi ecx +
not edi  +
or edi esi +
xor edi edx +
add edi [ebp+var_34] +
lea eax [edi+eax+4E0811A1h] +
ror eax 0Bh +
add eax esi +
mov edi edx +
not edi  +
or edi eax +
xor edi esi +
add edi [ebp+var_38] +
lea ecx [edi+ecx-8AC817Eh] +
rol ecx 6 +
add ecx eax +
mov edi esi +
not edi  +
or edi ecx +
xor edi eax +
add edi [ebp+var_3C] +
lea edx [edi+edx-42C50DCBh] +
rol edx 0Ah +
add edx ecx +
mov edi eax +
not edi  +
or edi edx +
xor edi ecx +
add edi ebx +
lea esi [edi+esi+2AD7D2BBh] +
rol esi 0Fh +
mov edi ecx +
not edi  +
add esi edx +
or edi esi +
xor edi edx +
add edi [ebp+var_40] +
lea edi [edi+eax-14792C6Fh] +
mov eax [ebp+arg_0] +
mov ebx [eax] +
ror edi 0Bh +
add ebx ecx +
mov ecx [eax+4] +
add edi esi +
add ecx edi +
mov [eax] ebx +
mov [eax+4] ecx +
mov ecx [eax+8] +
add ecx esi +
mov [eax+8] ecx +
mov ecx [eax+0Ch] +
pop edi  +
add ecx edx +
pop esi  +
mov [eax+0Ch] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+10h] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
lea ecx [eax+edi*8] +
mov [ebx+10h] ecx +
cmp ecx eax +
jnb loc_40484D  +
inc dword ptr [ebx+14h]  +
mov ecx edi +
shr ecx 1Dh +
add [ebx+14h] ecx +
shr eax 3 +
and eax 3Fh +
jz loc_4048AC  +
mov esi 40h +
sub esi eax +
lea ecx [eax+ebx+18h] +
cmp edi esi +
jnb loc_404881  +
mov edx [ebp+arg_4] +
push edi  +
push edx  +
push ecx  +
call loc_425490  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push esi  +
push eax  +
push ecx  +
call loc_425490  +
lea eax [ebx+18h] +
push 10h  +
push eax  +
call sub_404160  +
lea eax [ebx+18h] +
push eax  +
push ebx  +
call sub_4041A0  +
add [ebp+arg_4] esi +
add esp 1Ch +
sub edi esi +
mov [ebp+arg_8] edi +
cmp edi 40h +
jb loc_40491C  +
lea ecx [ebx+1Ah] +
shr edi 6 +
mov [ebp+var_4] ecx +
mov [ebp+arg_0] edi +
lea ecx [ecx+0] +
mov esi [ebp+arg_4] +
mov eax [ebp+var_4] +
mov ecx 10h +
lea edi [ebx+18h] +
movs   +
mov ecx 10h +
movzx edx byte ptr [eax+1] +
movzx esi byte ptr [eax] +
shl edx 8 +
or edx esi +
movzx esi byte ptr [eax-1] +
shl edx 8 +
or edx esi +
movzx esi byte ptr [eax-2] +
shl edx 8 +
or edx esi +
mov [eax-2] edx +
add eax 4 +
dec ecx  +
jnz loc_4048D5  +
lea eax [ebx+18h] +
push eax  +
push ebx  +
call sub_4041A0  +
mov eax 40h +
add [ebp+arg_4] eax +
sub [ebp+arg_8] eax +
add esp 8 +
dec [ebp+arg_0]  +
jnz loc_4048C0  +
mov edi [ebp+arg_8] +
mov eax [ebp+arg_4] +
push edi  +
push eax  +
add ebx 18h +
push ebx  +
call loc_425490  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
shr eax 3 +
and eax 3Fh +
lea edx [eax+esi+18h] +
mov ecx 3Fh +
mov byte ptr [edx] 80h +
sub ecx eax +
inc edx  +
push edi  +
cmp ecx 8 +
jnb loc_40498F  +
push ecx  +
push 0  +
push edx  +
call sub_426210  +
lea edi [esi+18h] +
push 10h  +
push edi  +
call sub_404160  +
push edi  +
push esi  +
call sub_4041A0  +
push 38h  +
push 0  +
push edi  +
call sub_426210  +
add esp 28h +
jmp loc_40499E  +
add ecx 0FFFFFFF8h +
push ecx  +
push 0  +
push edx  +
call sub_426210  +
add esp 0Ch +
lea edi [esi+18h] +
push 0Eh  +
push edi  +
call sub_404160  +
mov eax [esi+10h] +
mov ecx [esi+14h] +
push edi  +
push esi  +
mov [esi+50h] eax +
mov [esi+54h] ecx +
call sub_4041A0  +
push 4  +
push esi  +
call sub_404160  +
mov edx [esi] +
mov eax [ebp+arg_4] +
mov [eax] edx +
mov ecx [esi+4] +
mov [eax+4] ecx +
mov edx [esi+8] +
mov [eax+8] edx +
mov ecx [esi+0Ch] +
add esp 18h +
mov [eax+0Ch] ecx +
pop edi  +
mov dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_0] 0 +
push ebx  +
jz loc_404A69  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jle loc_404A69  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_404A11  +
pop edi  +
lea eax [ebx+ebx+1] +
pop ebx  +
pop ebp  +
retn   +
push esi  +
xor eax eax +
xor esi esi +
test ebx ebx +
jle loc_404A60  +
lea ebx [ebx+0] +
mov ecx [ebp+arg_0] +
movzx edx byte ptr [esi+ecx] +
mov ecx edx +
shr ecx 4 +
and edx 8000000Fh +
jns loc_404A39  +
dec edx  +
or edx 0FFFFFFF0h +
inc edx  +
cmp ecx 0Ah +
jge loc_404A43  +
add ecx 30h +
jmp loc_404A46  +
add ecx 37h +
mov [eax+edi] cl +
lea ecx [edx+30h] +
cmp edx 0Ah +
jl loc_404A54  +
lea ecx [edx+37h] +
mov [eax+edi+1] cl +
inc esi  +
add eax 2 +
cmp esi ebx +
jl loc_404A20  +
pop esi  +
mov byte ptr [eax+edi] 0 +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
push 0  +
lea ecx [ebp+var_4] +
call sub_424920  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jnb loc_404A8D  +
inc eax  +
mov [esi+4] eax +
lea ecx [ebp+var_4] +
call sub_424948  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edi  +
mov edi ecx +
push 0  +
lea ecx [ebp+var_4] +
call sub_424920  +
mov eax [edi+4] +
test eax eax +
jz loc_404AC2  +
cmp eax 0FFFFFFFFh +
jnb loc_404AC2  +
dec eax  +
mov [edi+4] eax +
mov esi [edi+4] +
neg esi  +
sbb esi esi +
not esi  +
lea ecx [ebp+var_4] +
and esi edi +
call sub_424948  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ecx] offset off_441D70 +
retn   +
***
push ecx  +
push edi  +
mov edi [ecx] +
test edi edi +
jz loc_404B36  +
push 0  +
lea ecx [ebp+var_4] +
call sub_424920  +
mov eax [edi+4] +
test eax eax +
jz loc_404B15  +
cmp eax 0FFFFFFFFh +
jnb loc_404B15  +
dec eax  +
mov [edi+4] eax +
push esi  +
mov esi [edi+4] +
neg esi  +
sbb esi esi +
lea ecx [ebp+var_4] +
not esi  +
call sub_424948  +
and esi edi +
jz loc_404B35  +
mov eax [esi] +
mov edx [eax] +
push 1  +
mov ecx esi +
call edx  +
pop esi  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ecx+30h] +
push esi  +
mov esi [eax] +
push edi  +
mov edi [ebp+arg_0] +
push 0  +
lea ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov [edi] esi +
call sub_424920  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jnb loc_404B6D  +
inc eax  +
mov [esi+4] eax +
lea ecx [ebp+arg_0] +
call sub_424948  +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
cmp eax 7FFFFFFFh +
jnz loc_404B94  +
mov eax 7FFFh +
pop ebp  +
retn   +
test eax eax +
jle loc_404BB3  +
lea ecx [eax+0A8C0h] +
mov eax 0C22E4507h +
imul  ecx +
add edx ecx +
sar edx 10h +
mov eax edx +
shr eax 1Fh +
add eax edx +
pop ebp  +
retn   +
neg eax  +
sbb eax eax +
pop ebp  +
retn   +
***
sub esp 24h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
xor ecx ecx +
push edi  +
or eax 0FFFFFFFFh +
xor edi edi +
mov byte ptr [ebp+var_24] 0 +
mov [ebp+var_24+1] ecx +
mov [ebp+var_1F] ecx +
mov [ebp+var_1B] ecx +
mov [ebp+var_17] ecx +
mov [ebp+var_13] ecx +
mov [ebp+var_F] ecx +
mov [ebp+var_B] ecx +
mov [ebp+var_7] cx +
mov [ebp+var_5] cl +
test edx edx +
jz loc_404C3B  +
mov eax edx +
push esi  +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_404C05  +
sub eax esi +
lea esi [eax-2] +
cmp esi 1 +
jl loc_404C29  +
lea eax [edx+1] +
push esi  +
push eax  +
lea eax [ebp+var_24] +
push eax  +
call loc_425490  +
add esp 0Ch +
mov edi esi +
lea ecx [ebp+var_24] +
push ecx  +
mov byte ptr [ebp+edi+var_24] 0 +
call sub_4263DA  +
add esp 4 +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx-8] +
mov edx [eax+4] +
mov dword ptr [edx+ecx-8] offset off_441D80 +
retn   +
***
push ecx  +
mov dword ptr [ecx] offset off_441D78 +
call sub_424E73  +
pop ecx  +
retn   +
***
mov eax [ecx-10h] +
mov edx [eax+4] +
mov dword ptr [edx+ecx-10h] offset off_441D88 +
retn   +
***
mov eax [ecx-18h] +
mov edx [eax+4] +
mov dword ptr [edx+ecx-18h] offset off_441D90 +
mov eax [ecx-8] +
mov edx [eax+4] +
mov dword ptr [edx+ecx-8] offset off_441D80 +
mov eax [ecx-18h] +
mov edx [eax+4] +
mov dword ptr [edx+ecx-18h] offset off_441D88 +
retn   +
***
lea eax [ecx+8] +
mov ecx [eax-8] +
mov edx [ecx+4] +
mov dword ptr [edx+eax-8] offset off_441D80 +
push eax  +
mov dword ptr [eax] offset off_441D78 +
call sub_424E73  +
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
push esi  +
mov dword ptr [esi] offset off_441D78 +
call sub_424E73  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_404CF4  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test byte ptr [esi+40h] 1 +
jz loc_404D17  +
mov eax [esi+10h] +
mov ecx [eax] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov edx [esi+10h] +
mov dword ptr [edx] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov ecx [esi+30h] +
mov dword ptr [ecx] 0 +
mov edx [esi+14h] +
mov dword ptr [edx] 0 +
mov eax [esi+24h] +
mov dword ptr [eax] 0 +
mov ecx [esi+34h] +
mov dword ptr [ecx] 0 +
and dword ptr [esi+40h] 0FFFFFFFEh +
mov dword ptr [esi+3Ch] 0 +
pop esi  +
retn   +
***
mov eax [ecx] +
mov ecx [eax] +
mov edx [ecx+4] +
mov eax [edx+eax+38h] +
test eax eax +
jz locret_404D78  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+8] +
jmp eax  +
retn   +
***
lea edx [ecx+18h] +
mov [ecx+20h] edx +
lea edx [ecx+1Ch] +
mov [ecx+24h] edx +
lea eax [ecx+8] +
mov [ecx+10h] eax +
lea edx [ecx+28h] +
mov [ecx+30h] edx +
lea eax [ecx+0Ch] +
mov [ecx+14h] eax +
lea edx [ecx+2Ch] +
mov [ecx+34h] edx +
mov dword ptr [eax] 0 +
mov eax [ecx+24h] +
mov dword ptr [eax] 0 +
mov edx [ecx+34h] +
mov dword ptr [edx] 0 +
mov eax [ecx+10h] +
mov dword ptr [eax] 0 +
mov edx [ecx+20h] +
mov dword ptr [edx] 0 +
mov eax [ecx+30h] +
mov dword ptr [eax] 0 +
retn   +
***
movzx eax [ebp+arg_0] +
add ecx 8 +
push ecx  +
push eax  +
call sub_424743  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
movzx eax [ebp+arg_0] +
add ecx 8 +
push ecx  +
push eax  +
call sub_424EB1  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov al [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
mov ecx esi +
sub ecx eax +
push ecx  +
push eax  +
push edx  +
call loc_425490  +
add esp 0Ch +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
mov ecx esi +
sub ecx eax +
push ecx  +
push eax  +
push edx  +
call loc_425490  +
add esp 0Ch +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
mov eax [esi+14h] +
mov dword ptr [esi] offset off_441DA8 +
test eax eax +
jle loc_404F1E  +
mov eax [esi+10h] +
push eax  +
call sub_425BC2  +
jmp loc_404F29  +
jns loc_404F2C  +
mov ecx [esi+10h] +
push ecx  +
call sub_425D5C  +
add esp 4 +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_441D70 +
jz loc_404F41  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
and eax 17h +
mov [ecx+0Ch] eax +
mov ecx [ecx+10h] +
sub esp 14h +
and ecx eax +
jz loc_405027  +
cmp [ebp+arg_4] 0 +
jz loc_404F79  +
push 0  +
push 0  +
call sub_425C90  +
mov esi 1 +
test cl 4 +
jz loc_404FB8  +
call sub_424D38  +
mov edi eax +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebp+var_14] +
mov dword ptr [ebp+arg_4] offset aIos_baseBadbit +
call sub_4252D5  +
push offset unk_44B4F0  +
lea ecx [ebp+var_14] +
push ecx  +
mov [ebp+var_8] esi +
mov [ebp+var_4] edi +
mov [ebp+var_14] offset off_441DDC +
call sub_425C90  +
test cl 2 +
jz loc_404FF2  +
call sub_424D38  +
lea edx [ebp+arg_4] +
push edx  +
lea ecx [ebp+var_14] +
mov edi eax +
mov dword ptr [ebp+arg_4] offset aIos_baseFailbi +
call sub_4252D5  +
push offset unk_44B4F0  +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_8] esi +
mov [ebp+var_4] edi +
mov [ebp+var_14] offset off_441DDC +
call sub_425C90  +
call sub_424D38  +
lea ecx [ebp+arg_4] +
push ecx  +
lea ecx [ebp+var_14] +
mov edi eax +
mov dword ptr [ebp+arg_4] offset aIos_baseEofbit +
call sub_4252D5  +
push offset unk_44B4F0  +
lea edx [ebp+var_14] +
push edx  +
mov [ebp+var_8] esi +
mov [ebp+var_4] edi +
mov [ebp+var_14] offset off_441DDC +
call sub_425C90  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_4253BC  +
mov dword ptr [esi] offset off_441DD0 +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov ecx [edi+10h] +
pop edi  +
mov [esi+10h] ecx +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov [esi+30h] edi +
mov [esi+8] edi +
mov [esi+10h] edi +
mov dword ptr [esi+14h] 201h +
mov dword ptr [esi+18h] 6 +
mov [esi+1Ch] edi +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov [esi+28h] edi +
mov [esi+2Ch] edi +
call sub_404F50  +
push 4  +
call sub_425CDC  +
mov ebx eax +
add esp 4 +
cmp ebx edi +
jz loc_4050E3  +
call sub_424C2C  +
mov [ebx] eax +
call sub_4249EB  +
push edi  +
lea ecx [ebp+var_8] +
mov [ebp+var_4] eax +
call sub_424920  +
mov ecx [ebp+var_4] +
mov eax [ecx+4] +
cmp eax 0FFFFFFFFh +
jnb loc_4050D1  +
inc eax  +
mov [ecx+4] eax +
lea ecx [ebp+var_8] +
call sub_424948  +
pop edi  +
mov [esi+30h] ebx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov [esi+30h] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_425331  +
test [ebp+arg_0] 1 +
jz loc_40510A  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_4253BC  +
mov dword ptr [esi] offset off_441DD0 +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov ecx [edi+10h] +
pop edi  +
mov [esi+10h] ecx +
mov dword ptr [esi] offset off_441DDC +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_405162  +
push eax  +
call sub_425BC2  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
push esi  +
mov esi ecx +
mov ebx [esi+38h] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_441E34 +
test ebx ebx +
jz loc_4051D7  +
push edi  +
mov edi [ebx] +
test edi edi +
jz loc_4051CD  +
push 0  +
lea ecx [ebp+var_8] +
call sub_424920  +
mov eax [edi+4] +
test eax eax +
jz loc_4051AB  +
cmp eax 0FFFFFFFFh +
jnb loc_4051AB  +
dec eax  +
mov [edi+4] eax +
mov esi [edi+4] +
neg esi  +
sbb esi esi +
lea ecx [ebp+var_8] +
not esi  +
call sub_424948  +
and esi edi +
jz loc_4051CA  +
mov eax [esi] +
mov edx [eax] +
push 1  +
mov ecx esi +
call edx  +
mov esi [ebp+var_4] +
push ebx  +
call sub_42520B  +
add esp 4 +
pop edi  +
lea ecx [esi+4] +
call sub_424FDD  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
add ecx 4 +
jmp loc_424FF4  +
***
add ecx 4 +
jmp loc_424FFD  +
***
retn 4  +
***
xor edx edx +
retn   +
***
retn   +
***
retn 0Ch  +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_40526F  +
mov ecx [ecx+30h] +
mov eax [ecx] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ecx+24h] +
cmp dword ptr [eax] 0 +
jz loc_40528F  +
mov ecx [ecx+34h] +
mov eax [ecx] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [esi] +
mov edx [eax+18h] +
call edx  +
cmp eax 0FFFFFFFFh +
jnz loc_4052B3  +
or eax eax +
pop esi  +
retn   +
mov eax [esi+30h] +
dec dword ptr [eax]  +
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ecx+1] +
mov [eax] edx +
movzx eax byte ptr [ecx] +
pop esi  +
retn   +
***
sub esp 8 +
xor eax eax +
push ebx  +
mov ebx ecx +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
cmp [ebp+arg_8] eax +
jl loc_40538D  +
jg loc_4052F5  +
cmp [ebp+arg_4] eax +
jbe loc_40538D  +
push esi  +
push edi  +
mov ecx ebx +
call sub_405260  +
mov edi edx +
mov esi eax +
test edi edi +
jl loc_40534D  +
jg loc_40530C  +
test esi esi +
jz loc_40534D  +
mov eax [ebp+arg_8] +
cmp eax edi +
jg loc_40531F  +
jl loc_40531A  +
cmp [ebp+arg_4] esi +
jnb loc_40531F  +
mov esi [ebp+arg_4] +
mov edi eax +
mov eax [ebx+20h] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
push esi  +
push ecx  +
push edx  +
call loc_425490  +
add [ebp+arg_0] esi +
mov eax [ebx+30h] +
add esp 0Ch +
add [ebp+var_8] esi +
adc [ebp+var_4] edi +
sub [ebp+arg_4] esi +
sbb [ebp+arg_8] edi +
sub [eax] esi +
mov eax [ebx+20h] +
add [eax] esi +
jmp loc_405375  +
mov eax [ebx] +
mov edx [eax+1Ch] +
mov ecx ebx +
call edx  +
or edx 0FFFFFFFFh +
cmp eax edx +
jz loc_40538B  +
mov ecx [ebp+arg_0] +
inc ecx  +
add [ebp+var_8] 1 +
mov [ecx-1] al +
mov [ebp+arg_0] ecx +
adc [ebp+var_4] 0 +
add [ebp+arg_4] edx +
adc [ebp+arg_8] edx +
cmp [ebp+arg_8] 0 +
jg loc_4052F7  +
jl loc_40538B  +
cmp [ebp+arg_4] 0 +
ja loc_4052F7  +
pop edi  +
pop esi  +
mov eax [ebp+var_8] +
mov edx [ebp+var_4] +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 8 +
xor eax eax +
push ebx  +
mov ebx ecx +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
cmp [ebp+arg_8] eax +
jl loc_405461  +
jg loc_4053C5  +
cmp [ebp+arg_4] eax +
jbe loc_405461  +
push esi  +
push edi  +
mov ecx ebx +
call sub_405280  +
mov edi edx +
mov esi eax +
test edi edi +
jl loc_40541D  +
jg loc_4053DC  +
test esi esi +
jz loc_40541D  +
mov eax [ebp+arg_8] +
cmp eax edi +
jg loc_4053EF  +
jl loc_4053EA  +
cmp [ebp+arg_4] esi +
jnb loc_4053EF  +
mov esi [ebp+arg_4] +
mov edi eax +
mov eax [ebp+arg_0] +
mov ecx [ebx+24h] +
mov edx [ecx] +
push esi  +
push eax  +
push edx  +
call loc_425490  +
add [ebp+arg_0] esi +
mov eax [ebx+34h] +
add esp 0Ch +
add [ebp+var_8] esi +
adc [ebp+var_4] edi +
sub [ebp+arg_4] esi +
sbb [ebp+arg_8] edi +
sub [eax] esi +
mov eax [ebx+24h] +
add [eax] esi +
jmp loc_405449  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [eax] +
mov edx [ebx] +
push eax  +
mov eax [edx+0Ch] +
mov ecx ebx +
call eax  +
or ecx 0FFFFFFFFh +
cmp eax ecx +
jz loc_40545F  +
mov eax 1 +
add [ebp+arg_0] eax +
add [ebp+var_8] eax +
adc [ebp+var_4] 0 +
add [ebp+arg_4] ecx +
adc [ebp+arg_8] ecx +
cmp [ebp+arg_8] 0 +
jg loc_4053C7  +
jl loc_40545F  +
cmp [ebp+arg_4] 0 +
ja loc_4053C7  +
pop edi  +
pop esi  +
mov eax [ebp+var_8] +
mov edx [ebp+var_4] +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
mov ecx ds:dword_446E30 +
mov edx ds:dword_446E34 +
mov [eax] ecx +
xor ecx ecx +
mov [eax+4] edx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
pop ebp  +
retn 14h  +
***
mov eax [ebp+arg_0] +
mov ecx ds:dword_446E30 +
mov edx ds:dword_446E34 +
mov [eax] ecx +
xor ecx ecx +
mov [eax+4] edx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
pop ebp  +
retn 20h  +
***
mov eax [ecx+20h] +
mov eax [eax] +
test eax eax +
jz loc_405518  +
mov edx [ecx+10h] +
cmp eax [edx] +
jbe loc_405518  +
mov edx [ebp+arg_0] +
cmp edx 0FFFFFFFFh +
jz loc_4054F6  +
cmp dl [eax-1] +
jz loc_4054F6  +
test byte ptr [ecx+40h] 2 +
jnz loc_405518  +
mov eax [ecx+30h] +
inc dword ptr [eax]  +
mov eax [ecx+20h] +
dec dword ptr [eax]  +
cmp edx 0FFFFFFFFh +
jz loc_405512  +
mov eax [ecx+20h] +
mov ecx [eax] +
mov [ecx] dl +
mov eax edx +
pop ebp  +
retn 4  +
xor eax eax +
pop ebp  +
retn 4  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 4  +
***
mov edx [ecx+20h] +
push esi  +
mov esi [edx] +
test esi esi +
jnz loc_40552F  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
push edi  +
mov edi [ecx+30h] +
mov ebx [edi] +
mov eax esi +
add ebx eax +
cmp eax ebx +
jnb loc_405545  +
movzx eax byte ptr [esi] +
pop edi  +
pop ebx  +
pop esi  +
retn   +
test byte ptr [ecx+40h] 4 +
jnz loc_40557A  +
mov eax [ecx+24h] +
mov eax [eax] +
test eax eax +
jz loc_40557A  +
cmp eax esi +
ja loc_40555D  +
cmp [ecx+3Ch] esi +
jbe loc_40557A  +
cmp [ecx+3Ch] eax +
jnb loc_405565  +
mov [ecx+3Ch] eax +
mov eax [ecx+3Ch] +
mov edx [edx] +
sub eax edx +
mov [edi] eax +
mov ecx [ecx+20h] +
mov eax [ecx] +
movzx eax byte ptr [eax] +
pop edi  +
pop ebx  +
pop esi  +
retn   +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
push ecx  +
mov edx [ecx+24h] +
mov eax [edx] +
test eax eax +
jz loc_4055A5  +
cmp [ecx+3Ch] eax +
jnb loc_4055A5  +
mov [ecx+3Ch] eax +
push ebx  +
mov bl [ebp+arg_10] +
push esi  +
push edi  +
test bl 1 +
jz loc_405687  +
mov eax [ecx+20h] +
mov eax [eax] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_405687  +
mov edx [ebp+arg_C] +
cmp edx 2 +
jnz loc_4055E1  +
mov edx [ecx+10h] +
mov eax [ecx+3Ch] +
sub eax [edx] +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_8] +
cdq   +
add esi eax +
adc ebx edx +
jmp loc_405615  +
cmp edx 1 +
jnz loc_4055FD  +
test bl 2 +
jnz loc_405601  +
mov edx [ecx+10h] +
sub eax [edx] +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_8] +
cdq   +
add esi eax +
adc ebx edx +
jmp loc_405615  +
test edx edx +
jz loc_40560F  +
mov esi ds:dword_446E30 +
mov ebx ds:dword_446E34 +
jmp loc_405615  +
mov ebx [ebp+arg_8] +
mov esi [ebp+arg_4] +
test ebx ebx +
jl loc_405721  +
jg loc_405627  +
test esi esi +
jb loc_405721  +
mov eax [ecx+10h] +
mov edi [eax] +
mov eax [ecx+3Ch] +
sub eax edi +
cdq   +
cmp ebx edx +
jg loc_405721  +
jl loc_405644  +
cmp esi eax +
ja loc_405721  +
sub edi [ebp+var_4] +
mov eax [ecx+30h] +
add edi esi +
sub [eax] edi +
mov eax [ecx+20h] +
add [eax] edi +
test [ebp+arg_10] 2 +
jz loc_40572D  +
mov eax [ecx+24h] +
mov edi [eax] +
test edi edi +
jz loc_40572D  +
mov eax [ecx+34h] +
mov eax [eax] +
mov edx [ecx+20h] +
mov edx [edx] +
add eax edi +
mov edi [ecx+24h] +
mov [edi] edx +
mov ecx [ecx+34h] +
sub eax edx +
mov [ecx] eax +
jmp loc_40572D  +
test bl 2 +
jz loc_405715  +
mov eax [edx] +
mov dword ptr [ebp+arg_10] eax +
test eax eax +
jz loc_405715  +
mov edx [ebp+arg_C] +
cmp edx 2 +
jnz loc_4056B6  +
mov edx [ecx+10h] +
mov eax [ecx+3Ch] +
sub eax [edx] +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_8] +
cdq   +
add esi eax +
adc ebx edx +
jmp loc_4056E5  +
cmp edx 1 +
jnz loc_4056CD  +
mov edx [ecx+10h] +
sub eax [edx] +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_8] +
cdq   +
add esi eax +
adc ebx edx +
jmp loc_4056E5  +
test edx edx +
jz loc_4056DF  +
mov esi ds:dword_446E30 +
mov ebx ds:dword_446E34 +
jmp loc_4056E5  +
mov ebx [ebp+arg_8] +
mov esi [ebp+arg_4] +
test ebx ebx +
jl loc_405721  +
jg loc_4056EF  +
test esi esi +
jb loc_405721  +
mov eax [ecx+10h] +
mov edi [eax] +
mov eax [ecx+3Ch] +
sub eax edi +
cdq   +
cmp ebx edx +
jg loc_405721  +
jl loc_405704  +
cmp esi eax +
ja loc_405721  +
sub edi dword ptr [ebp+arg_10] +
mov eax [ecx+34h] +
add edi esi +
sub [eax] edi +
mov ecx [ecx+24h] +
add [ecx] edi +
jmp loc_40572D  +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_8] +
mov ecx esi +
or ecx ebx +
jz loc_40572D  +
mov esi ds:dword_446E30 +
mov ebx ds:dword_446E34 +
mov eax [ebp+arg_0] +
pop edi  +
xor ecx ecx +
mov [eax] esi +
pop esi  +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ecx  +
mov eax [ebp+arg_C] +
push ebx  +
cdq   +
push esi  +
mov esi eax +
add esi [ebp+arg_4] +
push edi  +
mov edi [ecx+24h] +
mov eax [edi] +
mov ebx edx +
adc ebx [ebp+arg_8] +
test eax eax +
jz loc_405776  +
cmp [ecx+3Ch] eax +
jnb loc_405776  +
mov [ecx+3Ch] eax +
mov edx ds:dword_446E30 +
cmp esi edx +
jnz loc_40578C  +
cmp ebx ds:dword_446E34 +
jz loc_40584A  +
test [ebp+arg_1C] 1 +
jz loc_4057FD  +
mov eax [ecx+20h] +
mov eax [eax] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_4057FD  +
test ebx ebx +
jl loc_405842  +
jg loc_4057B0  +
test esi esi +
jb loc_405842  +
mov edx [ecx+10h] +
mov edi [edx] +
mov eax [ecx+3Ch] +
sub eax edi +
cdq   +
cmp ebx edx +
jg loc_40583C  +
jl loc_4057C5  +
cmp esi eax +
ja loc_40583C  +
sub edi [ebp+var_4] +
mov eax [ecx+30h] +
add edi esi +
sub [eax] edi +
mov eax [ecx+20h] +
add [eax] edi +
test [ebp+arg_1C] 2 +
jz loc_40584A  +
mov eax [ecx+24h] +
mov edi [eax] +
test edi edi +
jz loc_40584A  +
mov eax [ecx+20h] +
mov edx [eax] +
mov eax [ecx+34h] +
mov eax [eax] +
add eax edi +
mov edi [ecx+24h] +
mov [edi] edx +
mov ecx [ecx+34h] +
sub eax edx +
mov [ecx] eax +
jmp loc_40584A  +
test [ebp+arg_1C] 2 +
jz loc_405842  +
mov edi [edi] +
mov dword ptr [ebp+arg_1C] edi +
test edi edi +
jz loc_405842  +
test ebx ebx +
jl loc_405842  +
jg loc_405816  +
test esi esi +
jb loc_405842  +
mov edx [ecx+10h] +
mov edi [edx] +
mov eax [ecx+3Ch] +
sub eax edi +
cdq   +
cmp ebx edx +
jg loc_40583C  +
jl loc_40582B  +
cmp esi eax +
ja loc_40583C  +
sub edi dword ptr [ebp+arg_1C] +
mov eax [ecx+34h] +
add edi esi +
sub [eax] edi +
mov ecx [ecx+24h] +
add [ecx] edi +
jmp loc_40584A  +
mov edx ds:dword_446E30 +
mov ebx ds:dword_446E34 +
mov esi edx +
mov eax [ebp+arg_0] +
pop edi  +
xor ecx ecx +
mov [eax] esi +
pop esi  +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push esi  +
lea esi [ecx-8] +
mov ecx [esi] +
mov edx [ecx+4] +
lea eax [esi+8] +
mov dword ptr [edx+eax-8] offset off_441D80 +
push eax  +
mov dword ptr [eax] offset off_441D78 +
call sub_424E73  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4058A5  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-10h] +
mov ecx [esi] +
mov edx [ecx+4] +
lea eax [esi+10h] +
mov dword ptr [edx+eax-10h] offset off_441D88 +
push eax  +
mov dword ptr [eax] offset off_441D78 +
call sub_424E73  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4058E5  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_405170  +
test [ebp+arg_0] 1 +
jz loc_40590A  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-18h] +
mov ecx [esi] +
mov edx [ecx+4] +
lea eax [esi+18h] +
mov dword ptr [edx+eax-18h] offset off_441D90 +
mov ecx [eax-8] +
mov edx [ecx+4] +
mov dword ptr [edx+eax-8] offset off_441D80 +
mov ecx [eax-18h] +
mov edx [ecx+4] +
mov dword ptr [edx+eax-18h] offset off_441D88 +
push eax  +
mov dword ptr [eax] offset off_441D78 +
call sub_424E73  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_405971  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_441E74 +
call sub_404D00  +
mov ecx esi +
call sub_405170  +
test [ebp+arg_0] 1 +
jz loc_4059A7  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_441D70 +
jz loc_405ABB  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_4] +
mov edx [ebp+arg_C] +
mov byte ptr [eax] 25h +
lea ecx [eax+1] +
test dl 20h +
jz loc_405AE8  +
mov byte ptr [ecx] 2Bh +
inc ecx  +
test dl 8 +
jz loc_405AF1  +
mov byte ptr [ecx] 23h +
inc ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov bl [edi] +
cmp bl 4Ch +
jz loc_405B03  +
mov [ecx] bl +
inc ecx  +
jmp loc_405B0F  +
mov word ptr [ecx] 3649h +
mov byte ptr [ecx+2] 34h +
add ecx 3 +
mov esi edx +
and esi 0E00h +
cmp esi 400h +
jnz loc_405B2C  +
pop edi  +
mov dl 6Fh +
pop esi  +
mov [ecx] dl +
mov byte ptr [ecx+1] 0 +
pop ebx  +
pop ebp  +
retn   +
cmp esi 800h +
jz loc_405B42  +
mov dl [edi+1] +
pop edi  +
pop esi  +
mov [ecx] dl +
mov byte ptr [ecx+1] 0 +
pop ebx  +
pop ebp  +
retn   +
add dl dl +
add dl dl +
add dl dl +
not dl  +
and dl 20h +
pop edi  +
or dl 58h +
pop esi  +
mov [ecx] dl +
mov byte ptr [ecx+1] 0 +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D510  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_18] ebx +
call sub_4263E5  +
xor ecx ecx +
mov [ebp+var_14] eax +
mov [ebx+8] ecx +
mov [ebx+10h] ecx +
mov [ebx+14h] ecx +
mov [ebp+var_4] ecx +
mov edi offset unk_441AD0 +
cmp [ebp+arg_4] cl +
jnz loc_405BE3  +
mov edi [eax+8] +
call sub_4248B0  +
mov eax edi +
lea edx [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_405BF0  +
sub eax edx +
lea esi [eax+1] +
push esi  +
call sub_425006  +
add esp 4 +
mov ecx eax +
test esi esi +
jz loc_405C14  +
mov dl [edi] +
mov [ecx] dl +
dec esi  +
inc ecx  +
inc edi  +
jmp loc_405C07  +
mov [ebx+8] eax +
call sub_4248B0  +
mov edi 6 +
push edi  +
mov esi offset aFalse +
call sub_425006  +
add esp 4 +
mov ecx eax +
test edi edi +
jz loc_405C3E  +
mov dl [esi] +
mov [ecx] dl +
dec edi  +
inc ecx  +
inc esi  +
jmp loc_405C31  +
mov [ebx+10h] eax +
call sub_4248B0  +
mov edi 5 +
push edi  +
mov esi offset aTrue +
call sub_425006  +
add esp 4 +
mov ecx eax +
jmp loc_405C60  +
test edi edi +
jz loc_405C6D  +
mov dl [esi] +
mov [ecx] dl +
dec edi  +
inc ecx  +
inc esi  +
jmp loc_405C60  +
mov [ebx+14h] eax +
call sub_4248B0  +
mov esi [ebp+var_14] +
mov eax [esi] +
mov cl [eax] +
mov [ebx+0Ch] cl +
call sub_4248B0  +
cmp [ebp+arg_4] 0 +
mov edx [esi+4] +
mov al [edx] +
mov [ebx+0Dh] al +
jz loc_405CA4  +
call sub_4248B0  +
mov byte ptr [ebx+0Ch] 2Eh +
call sub_4248B0  +
mov byte ptr [ebx+0Dh] 2Ch +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43D564  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
xor ebx ebx +
push ebx  +
call sub_424920  +
mov [ebp+var_4] ebx +
mov [esi+4] ebx +
mov [esi+8] bl +
mov [esi+0Ch] ebx +
mov [esi+10h] bl +
mov [esi+14h] ebx +
mov [esi+18h] bl +
mov [esi+1Ch] ebx +
mov [esi+20h] bl +
mov eax [ebp+arg_0] +
mov byte ptr [ebp+var_4] 4 +
cmp eax ebx +
jnz loc_405D52  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_1C] +
mov [ebp+arg_0] offset aBadLocaleName +
call sub_4252D5  +
push offset unk_44B5D0  +
lea ecx [ebp+var_1C] +
push ecx  +
mov [ebp+var_1C] offset off_441C0C +
call sub_425C90  +
push eax  +
push esi  +
call sub_424B3C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43D5B4  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push esi  +
mov [ebp+var_4] 4 +
call sub_424AC9  +
mov eax [esi+1Ch] +
xor edi edi +
add esp 4 +
cmp eax edi +
jz loc_405DCC  +
push eax  +
call sub_425BC2  +
add esp 4 +
mov [esi+1Ch] edi +
mov eax [esi+14h] +
cmp eax edi +
jz loc_405DDF  +
push eax  +
call sub_425BC2  +
add esp 4 +
mov [esi+14h] edi +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_405DF2  +
push eax  +
call sub_425BC2  +
add esp 4 +
mov [esi+0Ch] edi +
mov eax [esi+4] +
cmp eax edi +
jz loc_405E05  +
push eax  +
call sub_425BC2  +
add esp 4 +
mov ecx esi +
mov [esi+4] edi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_424948  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D5DB  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax eax +
jz loc_405EF3  +
cmp [eax] ebx +
jnz loc_405EF3  +
push 18h  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_405ED8  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_405E95  +
mov eax ecx +
jmp loc_405E98  +
add eax 1Ch +
push eax  +
lea ecx [ebp+var_44] +
call sub_405CD0  +
lea ecx [ebp+var_20] +
push ecx  +
mov ebx 1 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_441DA8 +
call sub_424850  +
mov edx [eax] +
mov [esi+8] edx +
mov ecx [eax+4] +
mov [esi+0Ch] ecx +
mov edx [eax+8] +
mov [esi+10h] edx +
mov eax [eax+0Ch] +
add esp 4 +
mov [esi+14h] eax +
jmp loc_405EDA  +
xor esi esi +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ecx] esi +
test bl 1 +
jz loc_405EF3  +
lea ecx [ebp+var_44] +
call sub_405D80  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 88h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi ecx +
cmp dword ptr [edi+90h] 0 +
jnz loc_405F5D  +
mov eax dword_44FF1C +
mov ecx [edi] +
push offset aUpdatelocallic  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
cmp eax 1 +
jz loc_40614A  +
jle loc_406118  +
cmp eax 3 +
jg loc_406118  +
lea eax [edi+80h] +
mov esi 10h +
mov [ebp+var_88] 0FFFFFFFFh +
cmp [eax+14h] esi +
jb loc_405F96  +
mov eax [eax] +
push 0  +
lea edx [ebp+var_88] +
push edx  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
mov eax [edi+4] +
push eax  +
call sub_41BBE0  +
add esp 20h +
test eax eax +
jnz loc_406357  +
mov ecx [ebp+var_88] +
push ecx  +
call sub_404B80  +
add esp 4 +
test eax eax +
jns loc_4060E6  +
call sub_41CDB0  +
lea ebx [edi+64h] +
mov [ebp+var_80] eax +
mov [ebp+var_84] 55h +
cmp [ebx+14h] esi +
jb loc_405FF1  +
mov edx [ebx] +
jmp loc_405FF3  +
mov edx ebx +
cmp dword ptr [edi+24h] 10h +
lea esi [edi+10h] +
jb loc_406000  +
mov ecx [esi] +
jmp loc_406002  +
mov ecx esi +
lea eax [ebp+var_84] +
push eax  +
push edx  +
push ecx  +
mov ecx [ebp+var_80] +
push ecx  +
call sub_41CFD0  +
mov eax [ebp+var_84] +
add esp 10h +
cmp eax 55h +
jz loc_406044  +
cmp eax 1 +
jz loc_406044  +
mov eax 10h +
cmp [ebx+14h] eax +
jb loc_406033  +
mov ebx [ebx] +
cmp [esi+14h] eax +
jb loc_40603A  +
mov esi [esi] +
mov edx [ebp+var_80] +
push 2  +
push ebx  +
push esi  +
push edx  +
jmp loc_4060BF  +
cmp dword ptr [esi+14h] 10h +
jb loc_40604E  +
mov eax [esi] +
jmp loc_406050  +
mov eax esi +
mov ebx [ebp+var_80] +
lea ecx [ebp+var_84] +
push ecx  +
push offset aAll  +
push eax  +
push ebx  +
call sub_41CFD0  +
add esp 10h +
cmp [ebp+var_84] 55h +
jnz loc_4060AE  +
mov edx dword_44FF1C +
mov eax [edi] +
push offset aUpdatelocall_0  +
push edx  +
push 5  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
mov ecx ebx +
add esp 14h +
push ecx  +
call sub_41D100  +
add esp 4 +
pop esi  +
pop ebx  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [esi+14h] 10h +
jb loc_4060B6  +
mov esi [esi] +
push 2  +
push offset aAll  +
push esi  +
push ebx  +
call sub_41CEB0  +
mov ecx [ebp+var_80] +
add esp 10h +
push ecx  +
call sub_41D100  +
add esp 4 +
pop esi  +
pop ebx  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
mov edx dword_44FF1C +
push eax  +
mov eax [edi] +
push offset aUpdatelocall_1  +
push edx  +
push 4  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
add esp 18h +
pop esi  +
pop ebx  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx dword_44FF1C +
mov edx [edi] +
push eax  +
push offset aUpdatelocall_2  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
add esp 18h +
pop esi  +
pop ebx  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
lea ebx [edi+80h] +
mov esi 10h +
cmp [ebx+14h] esi +
jb loc_40615E  +
mov eax [ebx] +
jmp loc_406160  +
mov eax ebx +
push eax  +
mov eax [edi+4] +
push eax  +
call sub_41C610  +
add esp 8 +
test eax eax +
jnz loc_406339  +
push 37h  +
push eax  +
lea ecx [ebp+var_7C+1] +
push ecx  +
mov byte ptr [ebp+var_7C] al +
call sub_426210  +
add esp 0Ch +
cmp [ebx+14h] esi +
jb loc_40618E  +
mov ebx [ebx] +
mov eax [edi+0Ch] +
lea edx [ebp+var_7C] +
push edx  +
push ebx  +
push eax  +
call sub_41B690  +
push 3Fh  +
lea ecx [ebp+var_44+1] +
push 0  +
push ecx  +
mov byte ptr [ebp+var_44] 0 +
call sub_426210  +
lea ebx [edi+64h] +
add esp 18h +
cmp [ebx+14h] esi +
jb loc_4061BC  +
mov ecx [ebx] +
jmp loc_4061BE  +
mov ecx ebx +
cmp dword ptr [edi+24h] 10h +
lea esi [edi+10h] +
jb loc_4061CB  +
mov eax [esi] +
jmp loc_4061CD  +
mov eax esi +
movzx edx ds:byte_44534B +
push edx  +
push ecx  +
mov ecx [edi+8] +
push eax  +
push offset aSn  +
push 40h  +
lea eax [ebp+var_44] +
push eax  +
push ecx  +
call sub_41AD80  +
add esp 1Ch +
test eax eax +
jnz loc_406265  +
cmp byte ptr [ebp+var_44] al +
jz loc_406265  +
mov eax 10h +
cmp [ebx+14h] eax +
jb loc_406205  +
mov ecx [ebx] +
jmp loc_406207  +
mov ecx ebx +
cmp [esi+14h] eax +
jb loc_406210  +
mov eax [esi] +
jmp loc_406212  +
mov eax esi +
movzx edx ds:byte_44534B +
push edx  +
push ecx  +
push eax  +
mov eax [edi+8] +
push offset aSn  +
push eax  +
call sub_41B230  +
mov eax 10h +
add esp 14h +
cmp [ebx+14h] eax +
jb loc_406239  +
mov ebx [ebx] +
cmp [esi+14h] eax +
jb loc_406240  +
mov esi [esi] +
movzx ecx ds:byte_44534B +
mov edx [edi+8] +
push ecx  +
push ebx  +
push esi  +
push offset aAlm_info_s1  +
push offset a1_0  +
push edx  +
call sub_41AFE0  +
add esp 18h +
jmp loc_406318  +
mov ebx 10h +
cmp [esi+14h] ebx +
jb loc_406273  +
mov eax [esi] +
jmp loc_406275  +
mov eax esi +
movzx ecx ds:byte_44534B +
push ecx  +
push offset aAll  +
push eax  +
mov eax [edi+8] +
push offset aSn  +
push 40h  +
lea edx [ebp+var_44] +
push edx  +
push eax  +
call sub_41AD80  +
add esp 1Ch +
test eax eax +
jnz loc_4062FA  +
cmp byte ptr [ebp+var_44] al +
jz loc_4062FA  +
cmp [esi+14h] ebx +
jb loc_4062AC  +
mov eax [esi] +
jmp loc_4062AE  +
mov eax esi +
movzx ecx ds:byte_44534B +
mov edx [edi+8] +
push ecx  +
push offset aAll  +
push eax  +
push offset aSn  +
push edx  +
call sub_41B230  +
add esp 14h +
cmp [esi+14h] ebx +
jb loc_4062D4  +
mov esi [esi] +
movzx eax ds:byte_44534B +
mov ecx [edi+8] +
push eax  +
push offset aAll  +
push esi  +
push offset aAlm_info_s1  +
push offset a1_0  +
push ecx  +
call sub_41AFE0  +
add esp 18h +
jmp loc_406318  +
mov edx dword_44FF1C +
mov eax [edi] +
push offset aUpdatelocall_3  +
push edx  +
push 5  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
add esp 14h +
movzx ecx ds:byte_44534B +
mov eax [edi+8] +
push ecx  +
push offset aRejectedsndoma  +
lea edx [ebp+var_7C] +
push edx  +
push offset aRejected  +
push eax  +
call sub_41AEC0  +
jmp loc_406354  +
mov ecx dword_44FF1C +
mov edx [edi] +
push offset aUpdatelocall_4  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
add esp 14h +
mov ecx [ebp+var_4] +
pop esi  +
pop ebx  +
xor ecx ebp +
pop edi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp [ebp+arg_0] 4 +
push esi  +
mov esi ecx +
jz loc_40639E  +
mov eax dword_44FF1C +
mov ecx [esi] +
push offset aUpdateuserdata  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
pop esi  +
pop ebp  +
retn 8  +
cmp [ebp+arg_4] 0 +
jz loc_406409  +
mov edx [esi+4] +
push ebx  +
push edi  +
push edx  +
call sub_41BE60  +
lea edi [esi+80h] +
add esp 4 +
cmp dword ptr [edi+14h] 10h +
mov ebx eax +
jb loc_4063C4  +
mov eax [edi] +
jmp loc_4063C6  +
mov eax edi +
push ebx  +
push eax  +
mov eax [esi+4] +
push eax  +
call sub_41C3D0  +
mov ecx [ebp+arg_4] +
mov edx [esi+4] +
push ecx  +
push offset aDatacoll  +
push ebx  +
push edx  +
call sub_41C070  +
add esp 1Ch +
cmp dword ptr [edi+14h] 10h +
jb loc_4063EF  +
mov edi [edi] +
mov eax [esi+4] +
push ebx  +
push edi  +
push eax  +
call sub_41C2B0  +
mov ecx [esi+4] +
push ebx  +
push ecx  +
call sub_41BF60  +
add esp 14h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+90h] 0 +
jnz loc_406444  +
mov eax dword_44FF1C +
mov ecx [esi] +
push offset aDeleteuserdata  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov edx [esi+4] +
push ebx  +
push edi  +
push edx  +
mov [ebp+var_4] 0 +
call sub_41BE60  +
lea ebx [esi+80h] +
add esp 4 +
cmp dword ptr [ebx+14h] 10h +
mov edi eax +
jb loc_40646B  +
mov eax [ebx] +
jmp loc_40646D  +
mov eax ebx +
push edi  +
push eax  +
mov eax [esi+4] +
push eax  +
call sub_41C3D0  +
mov edx [ebp+arg_0] +
mov eax [esi+4] +
lea ecx [ebp+var_4] +
push ecx  +
push edx  +
push edi  +
push eax  +
call sub_41C190  +
add esp 1Ch +
cmp [ebp+var_4] 0 +
jz loc_4064BF  +
mov ecx [ebp+arg_0] +
mov edx [esi+4] +
push offset a1  +
push ecx  +
push edi  +
push edx  +
call sub_41C070  +
add esp 10h +
cmp dword ptr [ebx+14h] 10h +
jb loc_4064B1  +
mov ebx [ebx] +
mov eax [esi+4] +
push edi  +
push ebx  +
push eax  +
call sub_41C2B0  +
add esp 0Ch +
mov ecx [esi+4] +
push edi  +
push ecx  +
call sub_41BF60  +
add esp 8 +
pop edi  +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 1Ch +
push ebx  +
push esi  +
mov ebx ecx +
xor esi esi +
mov [ebp+var_1C] ebx +
mov [ebp+var_8] esi +
cmp [ebx+90h] esi +
jnz loc_40651F  +
mov eax dword_44FF1C +
mov ecx [ebx] +
push offset aCurrenteventNo  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
or eax 0FFFFFFFFh +
mov [ebp+var_4] esi +
mov esi 10h +
push edi  +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
cmp [ebx+94h] esi +
jb loc_406541  +
mov eax [ebx+80h] +
jmp loc_406547  +
lea eax [ebx+80h] +
push 0  +
lea edx [ebp+var_18] +
push edx  +
mov edx [ebx+4] +
lea ecx [ebp+var_14] +
push ecx  +
push 0  +
push 0  +
push 0  +
push eax  +
push edx  +
call sub_41BBE0  +
add esp 20h +
test eax eax +
jnz loc_406770  +
mov eax [ebp+var_14] +
cmp eax 7FFFFFFFh +
jnz loc_40657F  +
mov [ebp+var_10] 7FFFh +
jmp loc_4065A5  +
test eax eax +
jle loc_40659E  +
lea ecx [eax+0A8C0h] +
mov eax 0C22E4507h +
imul  ecx +
add edx ecx +
sar edx 10h +
mov eax edx +
shr eax 1Fh +
add eax edx +
jmp loc_4065A2  +
neg eax  +
sbb eax eax +
mov [ebp+var_10] eax +
mov eax [ebp+var_18] +
cmp eax 7FFFFFFFh +
jnz loc_4065B8  +
mov [ebp+var_C] 7FFFh +
jmp loc_4065DE  +
test eax eax +
jle loc_4065D7  +
lea ecx [eax+0A8C0h] +
mov eax 0C22E4507h +
imul  ecx +
add edx ecx +
sar edx 10h +
mov eax edx +
shr eax 1Fh +
add eax edx +
jmp loc_4065DB  +
neg eax  +
sbb eax eax +
mov [ebp+var_C] eax +
cmp [ebx+94h] esi +
jb loc_4065EE  +
mov eax [ebx+80h] +
jmp loc_4065F4  +
lea eax [ebx+80h] +
mov edx [ebx+4] +
lea ecx [ebp+var_4] +
push ecx  +
push offset aSilentactivato  +
push eax  +
push edx  +
call sub_41CA50  +
xor ebx ebx +
add esp 10h +
cmp [ebp+var_C] ebx +
jl loc_40672C  +
mov edx [ebp+var_4] +
test edx edx +
jz loc_406798  +
cmp dword ptr [edx+ebx*4] 0 +
jz loc_406722  +
mov ecx [edx+ebx*4] +
mov eax [ecx+8] +
mov edi 0FFFFFF9Dh +
mov esi edi +
cmp eax 3 +
jg loc_406664  +
jz loc_406651  +
test eax eax +
js loc_40666E  +
cmp eax 1 +
jle loc_40666B  +
cmp eax 2 +
jnz loc_40666E  +
or edi 0FFFFFFFFh +
jmp loc_40666E  +
mov eax [ecx+0Ch] +
push eax  +
call sub_404BC0  +
mov edx [ebp+var_4] +
add esp 4 +
mov edi eax +
jmp loc_40666E  +
cmp eax 0FFFFh +
jnz loc_40666E  +
mov edi [ebp+var_10] +
mov ecx [edx+ebx*4] +
mov eax [ecx+14h] +
cmp eax 3 +
jg loc_4066A1  +
jz loc_40668E  +
test eax eax +
js loc_4066AA  +
cmp eax 1 +
jle loc_4066A8  +
cmp eax 2 +
jnz loc_4066AA  +
or esi 0FFFFFFFFh +
jmp loc_4066AA  +
mov ecx [ecx+18h] +
push ecx  +
call sub_404BC0  +
mov edx [ebp+var_4] +
add esp 4 +
mov esi eax +
jmp loc_4066AA  +
cmp eax 0FFFFh +
jnz loc_4066AA  +
xor esi esi +
cmp edi 0FFFFFF9Dh +
jz loc_4066F5  +
cmp esi 0FFFFFF9Dh +
jz loc_4066F5  +
mov eax [ebp+var_C] +
cmp edi eax +
jl loc_406719  +
cmp esi eax +
jge loc_406719  +
mov edx [edx+ebx*4] +
mov eax [edx] +
mov ecx dword_44FF1C +
mov edx [ebp+var_1C] +
push eax  +
mov eax [edx] +
push offset aCurrenteventCu  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
mov ecx [ebp+var_4] +
mov edx [ecx+ebx*4] +
mov eax [edx] +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov edx dword_44FF1C +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push offset aCurrenteventUn  +
push edx  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
mov edx [ebp+var_4] +
add esp 14h +
inc ebx  +
test edx edx +
jnz loc_406620  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
mov edi [ebp+var_10] +
cmp [ecx] ebx +
jz loc_406798  +
xor esi esi +
mov eax [esi+ecx] +
mov ecx [eax+18h] +
push ecx  +
call sub_404BC0  +
mov ecx [ebp+var_4] +
add esp 4 +
cmp edi eax +
jl loc_406758  +
mov edx [esi+ecx] +
mov edi eax +
mov eax [edx] +
mov [ebp+var_8] eax +
inc ebx  +
lea esi ds:0[ebx*4] +
cmp dword ptr [esi+ecx] 0 +
jnz loc_406738  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx dword_44FF1C +
mov edx [ebx] +
push offset aCurrenteventCo  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
mov eax [ebp+var_8] +
add esp 14h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D60B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ecx-60h] +
mov edx [eax+4] +
mov dword ptr [edx+ecx-60h] offset off_442130 +
lea esi [ecx-48h] +
mov ecx esi +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_441E74 +
call sub_404D00  +
mov ecx esi +
call sub_405170  +
mov eax [esi-18h] +
mov ecx [eax+4] +
mov dword ptr [ecx+esi-18h] offset off_441D90 +
mov edx [esi-8] +
mov eax [edx+4] +
mov dword ptr [eax+esi-8] offset off_441D80 +
mov ecx [esi-18h] +
mov edx [ecx+4] +
mov dword ptr [edx+esi-18h] offset off_441D88 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
mov esi ecx +
test byte ptr [esi+40h] 8 +
push edi  +
jz loc_406870  +
mov edi [esi+24h] +
mov edx [edi] +
test edx edx +
jz loc_406870  +
mov ecx [esi+3Ch] +
cmp edx ecx +
jnb loc_406870  +
mov eax [esi+34h] +
mov eax [eax] +
add eax edx +
mov [edi] ecx +
sub eax ecx +
mov ecx [esi+34h] +
mov [ecx] eax +
mov eax [ebp+arg_0] +
cmp eax 0FFFFFFFFh +
jnz loc_406882  +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov edx [esi+24h] +
mov edi [edx] +
push ebx  +
test edi edi +
jz loc_4068A0  +
mov ecx [esi+34h] +
mov ebx [ecx] +
mov edx edi +
add ebx edx +
cmp edx ebx +
jnb loc_4068A0  +
dec dword ptr [ecx]  +
jmp loc_4069CD  +
test byte ptr [esi+40h] 2 +
jnz loc_4068E3  +
test edi edi +
jnz loc_4068AE  +
xor ebx ebx +
jmp loc_4068BA  +
mov eax [esi+34h] +
mov ecx [esi+10h] +
mov ebx [eax] +
sub ebx [ecx] +
add ebx edi +
mov eax ebx +
shr eax 1 +
cmp eax 20h +
jnb loc_4068CA  +
mov eax 20h +
jmp loc_4068D0  +
test eax eax +
jz loc_4068E3  +
mov edi edi +
mov edx 7FFFFFFFh +
sub edx eax +
cmp edx ebx +
jnb loc_4068DF  +
shr eax 1 +
jnz loc_4068D0  +
test eax eax +
jnz loc_4068EF  +
pop ebx  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
add eax ebx +
push eax  +
lea ecx [esi+44h] +
mov [ebp+var_4] eax +
call sub_4013E0  +
mov edi eax +
mov eax [esi+10h] +
mov edx [eax] +
mov [ebp+var_8] edx +
test ebx ebx +
jz loc_40691D  +
push ebx  +
push edx  +
push edi  +
call loc_425490  +
mov edx [ebp+var_8] +
add esp 0Ch +
test ebx ebx +
jnz loc_40694D  +
mov ecx [esi+14h] +
mov [esi+3Ch] edi +
mov [ecx] edi +
mov eax [esi+24h] +
mov [eax] edi +
mov ecx [esi+34h] +
mov eax [ebp+var_4] +
mov [ecx] eax +
test byte ptr [esi+40h] 4 +
jnz loc_40697D  +
mov eax [esi+10h] +
mov [eax] edi +
mov ecx [esi+20h] +
mov [ecx] edi +
mov eax [esi+30h] +
mov dword ptr [eax] 1 +
jmp loc_4069B2  +
mov eax [esi+24h] +
mov ecx edi +
sub ecx edx +
add [esi+3Ch] ecx +
mov eax [eax] +
mov ecx [esi+14h] +
mov ebx edi +
sub eax edx +
sub ebx edx +
add [ecx] ebx +
mov ecx [esi+24h] +
add eax edi +
mov [ecx] eax +
mov ecx edi +
sub ecx eax +
add ecx [ebp+var_4] +
mov eax [esi+34h] +
mov [eax] ecx +
test byte ptr [esi+40h] 4 +
jz loc_406992  +
mov ecx [esi+10h] +
mov [ecx] edi +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov ecx [esi+30h] +
mov [ecx] edi +
jmp loc_4069B2  +
mov eax [esi+24h] +
mov ecx [eax] +
mov eax [esi+20h] +
mov eax [eax] +
mov ebx [esi+10h] +
sub eax edx +
add eax edi +
mov [ebx] edi +
mov edi [esi+20h] +
sub ecx eax +
mov [edi] eax +
mov eax [esi+30h] +
inc ecx  +
mov [eax] ecx +
test byte ptr [esi+40h] 1 +
jz loc_4069C1  +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax [esi+34h] +
or dword ptr [esi+40h] 1 +
dec dword ptr [eax]  +
mov eax [ebp+arg_0] +
mov esi [esi+24h] +
mov ecx [esi] +
pop ebx  +
lea edx [ecx+1] +
mov [esi] edx +
pop edi  +
mov [ecx] al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_14] +
test esi esi +
jz loc_406A44  +
push ebx  +
mov bl [ebp+arg_10] +
test ecx ecx +
jz loc_406A3C  +
mov eax [ecx+24h] +
cmp dword ptr [eax] 0 +
jz loc_406A29  +
mov eax [ecx+34h] +
cmp dword ptr [eax] 0 +
jle loc_406A29  +
dec dword ptr [eax]  +
mov eax [ecx+24h] +
mov ecx [eax] +
lea edx [ecx+1] +
mov [eax] edx +
mov [ecx] bl +
movzx eax bl +
jmp loc_406A34  +
mov eax [ecx] +
mov eax [eax+0Ch] +
movzx edx bl +
push edx  +
call eax  +
mov ecx [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_406A40  +
mov byte ptr [ebp+arg_8] 1 +
dec esi  +
jnz loc_406A02  +
pop ebx  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov [eax] edx +
mov [eax+4] ecx +
pop esi  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_14] +
test ebx ebx +
jz loc_406AB9  +
push esi  +
push edi  +
mov edi [ebp+arg_10] +
test ecx ecx +
jz loc_406AAF  +
mov eax [ecx+24h] +
cmp dword ptr [eax] 0 +
mov dl [edi] +
jz loc_406A9C  +
mov eax [ecx+34h] +
cmp dword ptr [eax] 0 +
jle loc_406A9C  +
dec dword ptr [eax]  +
mov eax [ecx+24h] +
mov ecx [eax] +
lea esi [ecx+1] +
mov [eax] esi +
mov [ecx] dl +
movzx eax dl +
jmp loc_406AA7  +
mov eax [ecx] +
mov eax [eax+0Ch] +
movzx edx dl +
push edx  +
call eax  +
mov ecx [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_406AB3  +
mov byte ptr [ebp+arg_8] 1 +
inc edi  +
dec ebx  +
jnz loc_406A73  +
pop edi  +
pop esi  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebx  +
pop ebp  +
retn   +
***
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
mov edi [ebp+arg_10] +
nop   +
push ebx  +
push 0  +
push edi  +
call sub_426410  +
add esp 0Ch +
test eax eax +
jz loc_406AF6  +
sub eax edi +
mov esi eax +
jmp loc_406AF8  +
mov esi ebx +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_8] +
push esi  +
push edi  +
push eax  +
mov eax [ebp+arg_0] +
push ecx  +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call sub_406A60  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov edx [eax+4] +
add esp 18h +
add edi esi +
sub ebx esi +
mov [ebp+arg_C] edx +
jz loc_406B53  +
mov ecx [ebp+arg_18] +
test cl cl +
jz loc_406B4F  +
mov edx [eax] +
push 1  +
push ecx  +
mov ecx [eax+4] +
push ecx  +
mov ecx [ebp+arg_0] +
push edx  +
lea eax [ebp+var_10] +
push eax  +
push ecx  +
call sub_4069F0  +
mov edx [eax] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
add esp 18h +
mov [ebp+arg_C] eax +
inc edi  +
dec ebx  +
jmp loc_406AE0  +
mov edx [eax] +
mov ecx [ebp+arg_4] +
mov eax [eax+4] +
pop edi  +
pop esi  +
mov [ecx+4] eax +
mov [ecx] edx +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D688  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_424920  +
cmp dword_454BCC 0 +
mov ebx dword_451644 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] ebx +
jnz loc_406BE6  +
push 0  +
lea ecx [ebp+var_14] +
call sub_424920  +
cmp dword_454BCC 0 +
jnz loc_406BDE  +
mov eax dword_454BC8 +
inc eax  +
mov dword_454BC8 eax +
mov dword_454BCC eax +
lea ecx [ebp+var_14] +
call sub_424948  +
mov edi [ebp+arg_0] +
mov esi dword_454BCC +
mov eax [edi] +
cmp esi [eax+0Ch] +
jnb loc_406C18  +
mov ecx [eax+8] +
mov ecx [ecx+esi*4] +
test ecx ecx +
jnz loc_406C1C  +
cmp byte ptr [eax+14h] 0 +
jz loc_406C1C  +
call sub_4249EB  +
cmp esi [eax+0Ch] +
jnb loc_406C22  +
mov edx [eax+8] +
mov esi [edx+esi*4] +
jmp loc_406C1E  +
xor ecx ecx +
jmp loc_406C00  +
mov esi ecx +
test esi esi +
jnz loc_406C87  +
test ebx ebx +
jz loc_406C2A  +
mov esi ebx +
jmp loc_406C87  +
lea eax [ebp+var_10] +
push edi  +
push eax  +
call sub_405E30  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_406C57  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_42533C  +
push offset unk_44B6DC  +
lea ecx [ebp+var_24] +
push ecx  +
call sub_425C90  +
mov esi [ebp+var_10] +
push 0  +
lea ecx [ebp+arg_0] +
mov dword_451644 esi +
call sub_424920  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jnb loc_406C76  +
inc eax  +
mov [esi+4] eax +
lea ecx [ebp+arg_0] +
call sub_424948  +
push esi  +
call sub_424974  +
add esp 4 +
lea ecx [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_424948  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DB9B  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax eax +
jz loc_406D53  +
cmp [eax] ebx +
jnz loc_406D53  +
push 10h  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_406D38  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_406D0D  +
mov eax ecx +
jmp loc_406D10  +
add eax 1Ch +
push eax  +
lea ecx [ebp+var_34] +
call sub_405CD0  +
mov ebx 1 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_441EB4 +
call sub_4248B0  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
jmp loc_406D3A  +
xor esi esi +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ecx] esi +
test bl 1 +
jz loc_406D53  +
lea ecx [ebp+var_34] +
call sub_405D80  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+8] +
push eax  +
mov dword ptr [esi] offset off_442144 +
call sub_425D5C  +
mov ecx [esi+10h] +
push ecx  +
call sub_425D5C  +
mov edx [esi+14h] +
push edx  +
call sub_425D5C  +
add esp 0Ch +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_441D70 +
jz loc_406DCF  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx esi +
call sub_4067B0  +
push esi  +
mov dword ptr [esi] offset off_441D78 +
call sub_424E73  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esi] +
mov eax [eax+4] +
push edi  +
xor edi edi +
test byte ptr [eax+esi+0Ch] 6 +
jnz loc_406E29  +
mov eax [eax+esi+38h] +
mov edx [eax] +
mov ecx eax +
mov eax [edx+34h] +
call eax  +
cmp eax 0FFFFFFFFh +
jnz loc_406E29  +
mov edi 4 +
mov ecx [esi] +
mov ecx [ecx+4] +
add ecx esi +
test edi edi +
jz loc_406E4A  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_406E42  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
push edi  +
lea edi [ecx-60h] +
lea esi [edi+60h] +
mov ecx esi +
call sub_4067B0  +
push esi  +
mov dword ptr [esi] offset off_441D78 +
call sub_424E73  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_406E80  +
push edi  +
call sub_42520B  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
retn   +
***
push ecx  +
push ecx  +
push ecx  +
push 0FFFFFFFFh  +
push offset loc_43D658  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea eax [ebp+var_10] +
push eax  +
call sub_404B40  +
push eax  +
mov [ebp+var_4] 0 +
call sub_406B70  +
mov edi [ebp+var_10] +
add esp 4 +
mov ebx eax +
mov [ebp+var_4] 0FFFFFFFFh +
test edi edi +
jz loc_406FDA  +
push 0  +
lea ecx [ebp+var_14] +
call sub_424920  +
mov eax [edi+4] +
test eax eax +
jz loc_406FBB  +
cmp eax 0FFFFFFFFh +
jnb loc_406FBB  +
dec eax  +
mov [edi+4] eax +
mov esi [edi+4] +
neg esi  +
sbb esi esi +
lea ecx [ebp+var_14] +
not esi  +
call sub_424948  +
and esi edi +
jz loc_406FDA  +
mov edx [esi] +
mov eax [edx] +
push 1  +
mov ecx esi +
call eax  +
mov edx [ebx] +
mov eax [ebp+arg_0] +
mov edx [edx+18h] +
push eax  +
mov ecx ebx +
call edx  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43D688  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_424920  +
cmp dword_451650 0 +
mov ebx dword_451648 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] ebx +
jnz loc_407076  +
push 0  +
lea ecx [ebp+var_14] +
call sub_424920  +
cmp dword_451650 0 +
jnz loc_40706E  +
mov eax dword_454BC8 +
inc eax  +
mov dword_454BC8 eax +
mov dword_451650 eax +
lea ecx [ebp+var_14] +
call sub_424948  +
mov edi [ebp+arg_0] +
mov esi dword_451650 +
mov eax [edi] +
cmp esi [eax+0Ch] +
jnb loc_4070A8  +
mov ecx [eax+8] +
mov ecx [ecx+esi*4] +
test ecx ecx +
jnz loc_4070AC  +
cmp byte ptr [eax+14h] 0 +
jz loc_4070AC  +
call sub_4249EB  +
cmp esi [eax+0Ch] +
jnb loc_4070B2  +
mov edx [eax+8] +
mov esi [edx+esi*4] +
jmp loc_4070AE  +
xor ecx ecx +
jmp loc_407090  +
mov esi ecx +
test esi esi +
jnz loc_407117  +
test ebx ebx +
jz loc_4070BA  +
mov esi ebx +
jmp loc_407117  +
lea eax [ebp+var_10] +
push edi  +
push eax  +
call sub_406CB0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4070E7  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_42533C  +
push offset unk_44B6DC  +
lea ecx [ebp+var_24] +
push ecx  +
call sub_425C90  +
mov esi [ebp+var_10] +
push 0  +
lea ecx [ebp+arg_0] +
mov dword_451648 esi +
call sub_424920  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jnb loc_407106  +
inc eax  +
mov [esi+4] eax +
lea ecx [ebp+arg_0] +
call sub_424948  +
push esi  +
call sub_424974  +
add esp 4 +
lea ecx [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_424948  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D6DC  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax eax +
jz loc_4071EB  +
cmp [eax] ebx +
jnz loc_4071EB  +
push 18h  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_4071D0  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_40719D  +
mov eax ecx +
jmp loc_4071A0  +
add eax 1Ch +
push eax  +
lea ecx [ebp+var_38] +
call sub_405CD0  +
mov ebx 1 +
mov [ebp+var_10] ebx +
mov dword ptr [esi+4] 0 +
push ebx  +
push eax  +
mov ecx esi +
mov [ebp+var_4] 2 +
mov dword ptr [esi] offset off_442144 +
call sub_405B90  +
jmp loc_4071D2  +
xor esi esi +
mov ecx [ebp+arg_0] +
mov [ecx] esi +
mov [ebp+var_4] 0FFFFFFFFh +
test bl 1 +
jz loc_4071EB  +
lea ecx [ebp+var_38] +
call sub_405D80  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_43D708  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
call sub_425011  +
test al al +
jnz loc_407250  +
mov ecx [esi] +
call sub_406E90  +
mov eax [esi] +
mov ecx [eax] +
mov edx [ecx+4] +
mov eax [edx+eax+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_40726F  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+8] +
call eax  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
cmp eax ebx +
jnb loc_40729B  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov ecx [ebp+arg_4] +
or edx 0FFFFFFFFh +
sub edx eax +
cmp edx ecx +
ja loc_4072B1  +
push offset aStringTooLong  +
call sub_424688  +
test ecx ecx +
jz loc_407369  +
push edi  +
lea edi [eax+ecx] +
cmp edi 0FFFFFFFEh +
jbe loc_4072CC  +
push offset aStringTooLong  +
call sub_424688  +
mov ecx [esi+14h] +
cmp ecx edi +
jnb loc_4072F0  +
push eax  +
push edi  +
mov ecx esi +
call sub_401600  +
test edi edi +
jz loc_407368  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_407316  +
mov ecx [esi] +
jmp loc_407318  +
test edi edi +
jnz loc_4072E4  +
mov [esi+10h] edi +
cmp ecx 10h +
jb loc_40730A  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
mov eax esi +
pop esi  +
mov byte ptr [eax] 0 +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ecx esi +
cmp eax 10h +
jb loc_407321  +
mov eax [esi] +
jmp loc_407323  +
mov eax esi +
mov edx [esi+10h] +
sub edx ebx +
push edx  +
add eax ebx +
add eax [ebp+arg_4] +
add ecx ebx +
push ecx  +
push eax  +
call loc_425800  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
add esp 0Ch +
push eax  +
push ecx  +
push ebx  +
mov ecx esi +
call sub_403670  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_407362  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43D688  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_424920  +
cmp dword_451654 0 +
mov ebx dword_45164C +
mov [ebp+var_4] 0 +
mov [ebp+var_10] ebx +
jnz loc_4073F6  +
push 0  +
lea ecx [ebp+var_14] +
call sub_424920  +
cmp dword_451654 0 +
jnz loc_4073EE  +
mov eax dword_454BC8 +
inc eax  +
mov dword_454BC8 eax +
mov dword_451654 eax +
lea ecx [ebp+var_14] +
call sub_424948  +
mov edi [ebp+arg_0] +
mov esi dword_451654 +
mov eax [edi] +
cmp esi [eax+0Ch] +
jnb loc_407428  +
mov ecx [eax+8] +
mov ecx [ecx+esi*4] +
test ecx ecx +
jnz loc_40742C  +
cmp byte ptr [eax+14h] 0 +
jz loc_40742C  +
call sub_4249EB  +
cmp esi [eax+0Ch] +
jnb loc_407432  +
mov edx [eax+8] +
mov esi [edx+esi*4] +
jmp loc_40742E  +
xor ecx ecx +
jmp loc_407410  +
mov esi ecx +
test esi esi +
jnz loc_407497  +
test ebx ebx +
jz loc_40743A  +
mov esi ebx +
jmp loc_407497  +
lea eax [ebp+var_10] +
push edi  +
push eax  +
call sub_407140  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_407467  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_42533C  +
push offset unk_44B6DC  +
lea ecx [ebp+var_24] +
push ecx  +
call sub_425C90  +
mov esi [ebp+var_10] +
push 0  +
lea ecx [ebp+arg_0] +
mov dword_45164C esi +
call sub_424920  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jnb loc_407486  +
inc eax  +
mov [esi+4] eax +
lea ecx [ebp+arg_0] +
call sub_424948  +
push esi  +
call sub_424974  +
add esp 4 +
lea ecx [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_424948  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D750  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+var_2C] esi +
cmp ecx edi +
jz loc_40750C  +
mov edx [ecx] +
mov eax [edx+4] +
call eax  +
mov ecx [esi] +
mov eax [ecx+4] +
mov [ebp+var_4] edi +
cmp [eax+esi+0Ch] edi +
jnz loc_407529  +
mov eax [eax+esi+3Ch] +
cmp eax edi +
jz loc_407529  +
mov ecx eax +
call sub_406E00  +
mov eax [esi] +
mov ecx [eax+4] +
cmp [ecx+esi+0Ch] edi +
setz cl  +
mov [ebp+var_28] cl +
mov [ebp+var_4] 1 +
test cl cl +
jz loc_4075F7  +
mov ecx [eax+4] +
lea edx [ebp+var_1C] +
push edx  +
add ecx esi +
call sub_404B40  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_407000  +
mov ebx [ebp+var_1C] +
add esp 4 +
mov [ebp+var_24] eax +
mov byte ptr [ebp+var_4] 1 +
cmp ebx edi +
jz loc_4075A8  +
push edi  +
lea ecx [ebp+var_20] +
call sub_424920  +
mov eax [ebx+4] +
cmp eax edi +
jbe loc_407589  +
cmp eax 0FFFFFFFFh +
jnb loc_407589  +
dec eax  +
mov [ebx+4] eax +
mov edi [ebx+4] +
neg edi  +
sbb edi edi +
lea ecx [ebp+var_20] +
not edi  +
call sub_424948  +
and edi ebx +
jz loc_4075A8  +
mov eax [edi] +
mov edx [eax] +
push 1  +
mov ecx edi +
call edx  +
mov ecx [esi] +
mov eax [ecx+4] +
mov ecx [ecx+4] +
mov dl [ecx+esi+40h] +
mov ebx [ebp+arg_0] +
mov ecx [ecx+esi+38h] +
push ebx  +
mov byte ptr [ebp+var_20] dl +
mov ebx [ebp+var_20] +
mov edx [ebp+var_24] +
mov edi [edx] +
push ebx  +
add eax esi +
push eax  +
push ecx  +
mov byte ptr [ebp+var_34] 0 +
mov eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_34] +
push ecx  +
mov ecx edx +
mov edx [edi+1Ch] +
mov byte ptr [ebp+var_4] 3 +
call edx  +
cmp byte ptr [ebp+var_34] 0 +
jz loc_4075F0  +
mov [ebp+var_18] 4 +
mov [ebp+var_4] 1 +
mov ecx [esi] +
mov ecx [ecx+4] +
mov edx [ebp+var_18] +
add ecx esi +
test edx edx +
jz loc_40761B  +
mov eax [ecx+0Ch] +
or eax edx +
cmp dword ptr [ecx+38h] 0 +
jnz loc_407613  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
mov [ebp+var_4] 5 +
call sub_425011  +
test al al +
jnz loc_407632  +
mov ecx esi +
call sub_406E90  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx [eax+esi+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_40764D  +
mov edx [ecx] +
mov eax [edx+8] +
call eax  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp-14h] +
mov eax [ecx] +
mov eax [eax+4] +
add eax ecx +
mov ecx [eax+0Ch] +
or ecx 4 +
cmp dword ptr [eax+38h] 0 +
jnz loc_40767C  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_40769C  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_407694 +
retn   +
***
mov esi [ebp-14h] +
jmp loc_4075F7  +
***
push 0  +
push 0  +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43D788  +
mov eax large fs:0 +
push eax  +
sub esp 78h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_1C] +
mov ecx [ebp+arg_10] +
mov ebx [ebp+arg_28] +
mov edi [ebp+arg_18] +
mov [ebp+var_84] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_6C] eax +
mov [ebp+var_58] edx +
mov edx [ebp+arg_24] +
lea eax [ebp+var_70] +
push eax  +
mov [ebp+var_78] ecx +
mov [ebp+var_54] edx +
mov [ebp+var_4C] ebx +
call sub_404B40  +
push eax  +
mov [ebp+var_4] 0 +
call sub_407380  +
mov esi eax +
mov eax [ebp+var_70] +
add esp 4 +
mov [ebp+var_7C] esi +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_407773  +
mov esi eax +
push 0  +
lea ecx [ebp+var_64] +
mov [ebp+var_60] esi +
call sub_424920  +
mov eax [esi+4] +
test eax eax +
jz loc_407750  +
cmp eax 0FFFFFFFFh +
jnb loc_407750  +
dec eax  +
mov [esi+4] eax +
mov esi [esi+4] +
neg esi  +
sbb esi esi +
lea ecx [ebp+var_64] +
not esi  +
call sub_424948  +
and esi [ebp+var_60] +
jz loc_407770  +
mov edx [esi] +
mov eax [edx] +
push 1  +
mov ecx esi +
call eax  +
mov esi [ebp+var_7C] +
lea ecx [ebp+var_48] +
push ecx  +
mov ecx esi +
call sub_406F30  +
mov edx [esi] +
mov eax [edx+8] +
mov ecx esi +
mov [ebp+var_4] 1 +
call eax  +
xor ecx ecx +
mov byte ptr [ebp+var_60] al +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_2C] cl +
mov al [edi] +
mov byte ptr [ebp+var_4] 2 +
cmp al 2Bh +
jz loc_4077B1  +
mov [ebp+var_64] ecx +
cmp al 2Dh +
jnz loc_4077B8  +
mov [ebp+var_64] 1 +
call sub_4263E5  +
mov ecx [eax] +
mov dl [ecx] +
push ebx  +
push 65h  +
push edi  +
mov byte ptr [ebp+var_5C] dl +
mov word ptr [ebp+var_5C+1] 65h +
call sub_426410  +
mov esi eax +
movsx eax byte ptr [ebp+var_5C] +
push ebx  +
push eax  +
push edi  +
call sub_426410  +
add esp 18h +
mov [ebp+var_50] eax +
test eax eax +
jnz loc_4077EE  +
mov [ebp+var_54] eax +
mov ecx [ebp+var_34] +
mov edx [ebp+var_48] +
mov eax edx +
cmp ecx 10h +
jnb loc_4077FE  +
lea eax [ebp+var_48] +
cmp byte ptr [eax] 7Fh +
jz loc_40791D  +
mov eax edx +
cmp ecx 10h +
jnb loc_407811  +
lea eax [ebp+var_48] +
cmp byte ptr [eax] 0 +
jle loc_40791D  +
push ebx  +
push edi  +
lea ecx [ebp+var_2C] +
call sub_401CE0  +
test esi esi +
jnz loc_40783B  +
mov ecx [ebp+var_54] +
push 30h  +
push ecx  +
lea ecx [ebp+var_2C] +
call sub_403CC0  +
mov ebx [ebp+var_50] +
jmp loc_407864  +
mov ebx [ebp+var_50] +
test ebx ebx +
jnz loc_407853  +
mov edx [ebp+var_58] +
push 30h  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_403CC0  +
mov [ebp+var_58] ebx +
mov eax [ebp+var_54] +
push 30h  +
push eax  +
sub esi edi +
push esi  +
lea ecx [ebp+var_2C] +
call sub_407280  +
push 30h  +
test ebx ebx +
jnz loc_407878  +
mov ecx [ebp+var_58] +
push ecx  +
lea ecx [ebp+var_2C] +
call sub_403CC0  +
jmp loc_4078A0  +
mov edx [ebp+var_6C] +
sub ebx edi +
push edx  +
lea eax [ebx+1] +
push eax  +
lea ecx [ebp+var_2C] +
call sub_407280  +
mov ecx [ebp+var_58] +
push 30h  +
push ecx  +
push ebx  +
lea ecx [ebp+var_2C] +
call sub_407280  +
mov [ebp+var_6C] 0 +
mov ebx [ebp+var_48] +
mov esi 10h +
mov [ebp+var_58] 0 +
cmp [ebp+var_34] esi +
jnb loc_4078B7  +
lea ebx [ebp+var_48] +
mov eax [ebp+var_2C] +
cmp [ebp+var_18] esi +
jnb loc_4078C2  +
lea eax [ebp+var_2C] +
lea edx [ebp+var_5C] +
push edx  +
push eax  +
call sub_4264C0  +
mov edi eax +
mov al [ebx] +
add esp 8 +
cmp al 7Fh +
jz loc_407903  +
test al al +
jle loc_407903  +
mov ecx edi +
sub ecx [ebp+var_64] +
movsx eax al +
cmp eax ecx +
jnb loc_407903  +
push 0  +
sub edi eax +
push 1  +
push edi  +
lea ecx [ebp+var_2C] +
call sub_407280  +
cmp byte ptr [ebx+1] 0 +
jle loc_4078FD  +
inc ebx  +
mov al [ebx] +
cmp al 7Fh +
jnz loc_4078D7  +
mov edi [ebp+var_2C] +
cmp [ebp+var_18] esi +
jnb loc_40790E  +
lea edi [ebp+var_2C] +
mov edx [ebp+var_1C] +
mov [ebp+var_54] 0 +
mov [ebp+var_4C] edx +
mov ebx edx +
mov eax [ebp+var_54] +
mov edx [ebp+var_78] +
mov ecx [edx+20h] +
add eax ebx +
add eax [ebp+var_6C] +
add eax [ebp+var_58] +
cmp dword ptr [edx+24h] 0 +
jl loc_407945  +
jg loc_40793A  +
test ecx ecx +
jz loc_407945  +
cmp ecx eax +
jbe loc_407945  +
sub ecx eax +
mov [ebp+var_50] ecx +
jmp loc_40794C  +
mov [ebp+var_50] 0 +
mov eax [edx+14h] +
mov esi [ebp+arg_0] +
and eax 1C0h +
cmp eax 40h +
jz loc_4079EB  +
cmp eax 100h +
jz loc_40798E  +
mov ecx [ebp+var_50] +
mov edx [ebp+arg_14] +
mov eax [ebp+arg_C] +
push ecx  +
mov ecx [ebp+arg_8] +
push edx  +
push eax  +
push ecx  +
lea edx [ebp+var_68] +
push edx  +
push esi  +
call sub_4069F0  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov edx [eax+4] +
mov [ebp+arg_C] edx +
jmp loc_4079E1  +
cmp [ebp+var_64] 0 +
jbe loc_4079BC  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_8] +
push 1  +
push edi  +
push eax  +
push ecx  +
lea edx [ebp+var_68] +
push edx  +
push esi  +
call sub_406A60  +
mov ecx [eax] +
add esp 18h +
mov [ebp+arg_8] ecx +
mov edx [eax+4] +
inc edi  +
dec ebx  +
mov [ebp+arg_C] edx +
mov [ebp+var_4C] ebx +
mov eax [ebp+var_50] +
mov ecx [ebp+arg_14] +
mov edx [ebp+arg_C] +
push eax  +
mov eax [ebp+arg_8] +
push ecx  +
push edx  +
push eax  +
lea ecx [ebp+var_68] +
push ecx  +
push esi  +
call sub_4069F0  +
mov edx [eax] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [ebp+arg_C] eax +
mov [ebp+var_50] 0 +
add esp 18h +
movsx ecx byte ptr [ebp+var_5C] +
push ebx  +
push ecx  +
push edi  +
call sub_426410  +
add esp 0Ch +
test eax eax +
jz loc_407AAF  +
mov edx [ebp+var_60] +
mov ecx [ebp+arg_C] +
sub eax edi +
push edx  +
mov edx [ebp+arg_8] +
lea ebx [eax+1] +
lea eax [ebx-1] +
push eax  +
push edi  +
push ecx  +
push edx  +
lea eax [ebp+var_68] +
push eax  +
push esi  +
call sub_406AD0  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov edx [eax+4] +
mov ecx [ebp+var_58] +
push ecx  +
mov [ebp+arg_C] edx +
mov edx [eax+4] +
mov eax [eax] +
push 30h  +
push edx  +
push eax  +
lea ecx [ebp+var_68] +
push ecx  +
push esi  +
call sub_4069F0  +
mov edx [eax] +
mov ecx [ebp+var_7C] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [ebp+arg_C] eax +
mov edx [ecx] +
mov eax [edx+4] +
add esp 34h +
call eax  +
mov edx [ebp+arg_C] +
push 1  +
mov byte ptr [ebp+var_70] al +
mov ecx [ebp+var_70] +
mov eax [ebp+arg_8] +
push ecx  +
push edx  +
push eax  +
lea ecx [ebp+var_80] +
push ecx  +
push esi  +
call sub_4069F0  +
mov edx [eax] +
mov [ebp+arg_8] edx +
mov ecx [eax+4] +
mov edx [ebp+var_6C] +
push edx  +
mov [ebp+arg_C] ecx +
mov ecx [eax+4] +
mov edx [eax] +
push 30h  +
push ecx  +
push edx  +
lea eax [ebp+var_74] +
push eax  +
push esi  +
call sub_4069F0  +
mov ecx [eax] +
add edi ebx +
add esp 30h +
sub [ebp+var_4C] ebx +
mov ebx [ebp+var_4C] +
mov [ebp+arg_8] ecx +
mov edx [eax+4] +
mov [ebp+arg_C] edx +
push ebx  +
push 65h  +
push edi  +
call sub_426410  +
add esp 0Ch +
test eax eax +
jz loc_407B57  +
mov edx [ebp+arg_C] +
sub eax edi +
lea ebx [eax+1] +
mov eax [ebp+var_60] +
push eax  +
mov eax [ebp+arg_8] +
lea ecx [ebx-1] +
push ecx  +
push edi  +
push edx  +
push eax  +
lea ecx [ebp+var_74] +
push ecx  +
push esi  +
call sub_406AD0  +
mov edx [eax] +
mov [ebp+arg_8] edx +
mov ecx [eax+4] +
mov edx [ebp+var_54] +
push edx  +
mov [ebp+arg_C] ecx +
mov ecx [eax+4] +
mov edx [eax] +
push 30h  +
push ecx  +
push edx  +
lea eax [ebp+var_74] +
push eax  +
push esi  +
call sub_4069F0  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov ecx [ebp+var_78] +
mov edx [eax+4] +
add esp 34h +
test byte ptr [ecx+14h] 4 +
mov [ebp+arg_C] edx +
mov [ebp+var_54] 0 +
mov ecx offset unk_442160 +
jnz loc_407B2D  +
mov ecx offset unk_44215C +
mov edx [eax+4] +
mov eax [eax] +
push 1  +
push ecx  +
push edx  +
push eax  +
lea ecx [ebp+var_74] +
push ecx  +
push esi  +
call sub_406A60  +
mov edx [eax] +
add edi ebx +
add esp 18h +
sub [ebp+var_4C] ebx +
mov ebx [ebp+var_4C] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [ebp+arg_C] eax +
mov ecx [ebp+var_60] +
mov edx [ebp+arg_C] +
mov eax [ebp+arg_8] +
push ecx  +
push ebx  +
push edi  +
push edx  +
push eax  +
lea ecx [ebp+var_74] +
push ecx  +
push esi  +
call sub_406AD0  +
mov edx [eax] +
mov [ebp+arg_8] edx +
mov ecx [eax+4] +
mov edx [ebp+var_54] +
push edx  +
mov [ebp+arg_C] ecx +
mov ecx [eax+4] +
mov edx [eax] +
push 30h  +
push ecx  +
push edx  +
lea eax [ebp+var_80] +
push eax  +
push esi  +
call sub_4069F0  +
mov ecx [eax] +
mov edx [ebp+var_78] +
mov edi [ebp+var_84] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
xor ebx ebx +
mov [edx+20h] ebx +
mov [edx+24h] ebx +
mov edx [ebp+var_50] +
push edx  +
mov edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push edi  +
push esi  +
mov [ebp+arg_C] eax +
call sub_4069F0  +
mov esi 10h +
add esp 4Ch +
cmp [ebp+var_18] esi +
jb loc_407BD7  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
cmp [ebp+var_34] esi +
jb loc_407BF5  +
mov ecx [ebp+var_48] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D7C0  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_10] +
mov edx [ebp+arg_1C] +
mov ebx [ebp+arg_18] +
mov [ebp+var_4C] eax +
lea eax [ebp+var_40] +
push eax  +
mov [ebp+var_3C] ecx +
mov [ebp+var_30] edx +
call sub_404B40  +
push eax  +
mov [ebp+var_4] 0 +
call sub_407380  +
mov esi [ebp+var_40] +
add esp 4 +
mov [ebp+var_50] eax +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_407CC3  +
push 0  +
lea ecx [ebp+var_34] +
call sub_424920  +
mov eax [esi+4] +
test eax eax +
jz loc_407CA4  +
cmp eax 0FFFFFFFFh +
jnb loc_407CA4  +
dec eax  +
mov [esi+4] eax +
mov edi [esi+4] +
neg edi  +
sbb edi edi +
lea ecx [ebp+var_34] +
not edi  +
call sub_424948  +
and edi esi +
jz loc_407CC3  +
mov edx [edi] +
mov eax [edx] +
push 1  +
mov ecx edi +
call eax  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx [ebp+var_50] +
call sub_406F30  +
mov al [ebx] +
mov ecx 1 +
mov [ebp+var_4] ecx +
cmp al 2Bh +
jz loc_407D02  +
cmp al 2Dh +
jz loc_407D02  +
cmp al 30h +
jnz loc_407CF9  +
mov al [ebx+1] +
cmp al 78h +
jz loc_407CF0  +
cmp al 58h +
jnz loc_407CF9  +
mov [ebp+var_34] 2 +
jmp loc_407D05  +
mov [ebp+var_34] 0 +
jmp loc_407D05  +
mov [ebp+var_34] ecx +
mov ecx [ebp+var_18] +
mov edx [ebp+var_2C] +
mov eax edx +
cmp ecx 10h +
jnb loc_407D15  +
lea eax [ebp+var_2C] +
cmp byte ptr [eax] 7Fh +
jz loc_407D83  +
mov eax edx +
cmp ecx 10h +
jnb loc_407D24  +
lea eax [ebp+var_2C] +
cmp byte ptr [eax] 0 +
jle loc_407D83  +
cmp ecx 10h +
jnb loc_407D31  +
lea edx [ebp+var_2C] +
mov esi [ebp+var_30] +
mov eax edx +
mov al [eax] +
mov [ebp+var_44] edx +
cmp al 7Fh +
jz loc_407D83  +
test al al +
jle loc_407D83  +
mov ecx esi +
sub ecx [ebp+var_34] +
movsx eax al +
cmp eax ecx +
jnb loc_407D83  +
sub esi eax +
mov eax [ebp+var_30] +
sub eax esi +
inc eax  +
push eax  +
lea edi [ebx+esi] +
push edi  +
push eax  +
lea edx [ebx+esi+1] +
push edx  +
call sub_426506  +
mov eax [ebp+var_44] +
inc [ebp+var_30]  +
add esp 10h +
mov byte ptr [edi] 0 +
cmp byte ptr [eax+1] 0 +
jle loc_407D7D  +
inc eax  +
mov [ebp+var_44] eax +
mov al [eax] +
cmp al 7Fh +
jnz loc_407D3F  +
mov eax [ebp+var_3C] +
mov edi [eax+20h] +
mov ecx eax +
cmp dword ptr [ecx+24h] 0 +
jl loc_407DA2  +
jg loc_407D97  +
test edi edi +
jz loc_407DA2  +
mov eax [ebp+var_30] +
cmp edi eax +
jbe loc_407DA2  +
sub edi eax +
jmp loc_407DA4  +
xor edi edi +
mov eax [ecx+14h] +
mov esi [ebp+arg_0] +
and eax 1C0h +
cmp eax 40h +
jz loc_407E2C  +
mov edx [ebp+arg_C] +
cmp eax 100h +
mov eax [ebp+arg_8] +
jz loc_407DE2  +
mov ecx [ebp+arg_14] +
push edi  +
push ecx  +
push edx  +
push eax  +
lea ecx [ebp+var_38] +
push ecx  +
push esi  +
call sub_4069F0  +
mov edx [eax] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
add esp 18h +
mov [ebp+arg_C] eax +
jmp loc_407E2A  +
mov ecx [ebp+var_34] +
push ecx  +
push ebx  +
push edx  +
push eax  +
lea ecx [ebp+var_48] +
push ecx  +
push esi  +
call sub_406A60  +
mov edx [eax] +
mov [ebp+arg_8] edx +
mov ecx [eax+4] +
mov edx [ebp+arg_14] +
mov [ebp+arg_C] ecx +
mov ecx [ebp+var_34] +
sub [ebp+var_30] ecx +
push edi  +
push edx  +
mov edx [eax] +
add ebx ecx +
mov ecx [eax+4] +
push ecx  +
push edx  +
lea eax [ebp+var_38] +
push eax  +
push esi  +
call sub_4069F0  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov edx [eax+4] +
add esp 30h +
mov [ebp+arg_C] edx +
xor edi edi +
mov ecx [ebp+var_50] +
mov eax [ecx] +
mov edx [eax+8] +
call edx  +
mov ecx [ebp+var_30] +
mov edx [ebp+arg_C] +
mov byte ptr [ebp+var_40] al +
mov eax [ebp+var_40] +
push eax  +
mov eax [ebp+arg_8] +
push ecx  +
push ebx  +
push edx  +
push eax  +
lea ecx [ebp+var_54] +
push ecx  +
push esi  +
call sub_406AD0  +
mov ecx [eax] +
mov edx [ebp+var_3C] +
push edi  +
mov edi [ebp+var_4C] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
xor ebx ebx +
mov [edx+20h] ebx +
mov [edx+24h] ebx +
mov edx [ebp+arg_14] +
push edx  +
push eax  +
push ecx  +
push edi  +
push esi  +
mov [ebp+arg_C] eax +
call sub_4069F0  +
add esp 34h +
cmp [ebp+var_18] 10h +
jb loc_407E90  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43D810  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_C] +
test dword ptr [esi+14h] 4000h +
mov edi [ebp+arg_0] +
mov al [ebp+arg_10] +
mov ebx ecx +
mov [ebp+var_54] edi +
mov byte ptr [ebp+var_4C] al +
jnz loc_407F18  +
movzx eax [ebp+arg_14] +
mov ecx [ebp+var_4C] +
mov edx [ebx] +
mov edx [edx+1Ch] +
push eax  +
mov eax [ebp+arg_8] +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push eax  +
push ecx  +
push edi  +
mov ecx ebx +
call edx  +
mov eax edi +
jmp loc_4080A7  +
lea eax [ebp+var_58] +
push eax  +
mov ecx esi +
call sub_404B40  +
push eax  +
mov [ebp+var_4] 0 +
call sub_407380  +
mov edi [ebp+var_58] +
add esp 4 +
mov [ebp+var_5C] eax +
mov [ebp+var_4] 0FFFFFFFFh +
test edi edi +
jz loc_407F81  +
push 0  +
lea ecx [ebp+var_64] +
mov [ebp+var_50] edi +
call sub_424920  +
mov eax [edi+4] +
test eax eax +
jz loc_407F61  +
cmp eax 0FFFFFFFFh +
jnb loc_407F61  +
dec eax  +
mov [edi+4] eax +
mov edi [edi+4] +
neg edi  +
sbb edi edi +
lea ecx [ebp+var_64] +
not edi  +
call sub_424948  +
and edi [ebp+var_50] +
jz loc_407F81  +
mov edx [edi] +
mov eax [edx] +
push 1  +
mov ecx edi +
call eax  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
cmp [ebp+arg_14] 0 +
mov [ebp+var_4] 1 +
jz loc_407FC9  +
lea ecx [ebp+var_48] +
push ecx  +
mov ecx [ebp+var_5C] +
call sub_406F10  +
push eax  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 2 +
call sub_402420  +
cmp [ebp+var_34] 10h +
mov byte ptr [ebp+var_4] 1 +
jb loc_407FF8  +
mov edx [ebp+var_48] +
push edx  +
jmp loc_407FF0  +
mov ecx [ebp+var_5C] +
lea eax [ebp+var_48] +
push eax  +
call sub_406EF0  +
push eax  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 3 +
call sub_402420  +
cmp [ebp+var_34] 10h +
mov byte ptr [ebp+var_4] 1 +
jb loc_407FF8  +
mov ecx [ebp+var_48] +
push ecx  +
call sub_42520B  +
add esp 4 +
cmp dword ptr [esi+24h] 0 +
mov edi [esi+20h] +
mov ecx [ebp+var_1C] +
jl loc_408012  +
jg loc_40800A  +
test edi edi +
jz loc_408012  +
cmp edi ecx +
jbe loc_408012  +
sub edi ecx +
jmp loc_408014  +
xor edi edi +
mov edx [esi+14h] +
and edx 1C0h +
cmp edx 40h +
jz loc_40804C  +
mov eax [ebp+var_4C] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
push edi  +
push eax  +
push ecx  +
push edx  +
lea eax [ebp+var_68] +
push eax  +
push ebx  +
call sub_4069F0  +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov edx [eax+4] +
mov ecx [ebp+var_1C] +
add esp 18h +
mov [ebp+arg_8] edx +
xor edi edi +
cmp [ebp+var_18] 10h +
mov eax [ebp+var_2C] +
jnb loc_408058  +
lea eax [ebp+var_2C] +
push ecx  +
mov ecx [ebp+arg_4] +
push eax  +
mov eax [ebp+arg_8] +
push eax  +
push ecx  +
lea edx [ebp+var_60] +
push edx  +
push ebx  +
call sub_406A60  +
mov ecx [eax] +
xor edx edx +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
push edi  +
mov [esi+20h] edx +
mov [esi+24h] edx +
mov edx [ebp+var_4C] +
mov esi [ebp+var_54] +
push edx  +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+arg_8] eax +
call sub_4069F0  +
add esp 30h +
cmp [ebp+var_18] 10h +
jb loc_4080A5  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_C] +
mov eax [ebx+14h] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx [ebp+arg_14] +
push ecx  +
push eax  +
push offset unk_442164  +
lea edx [ebp+var_C] +
push edx  +
push esi  +
call sub_405AD0  +
add esp 10h +
push eax  +
lea eax [ebp+var_4C] +
push 40h  +
push eax  +
call sub_426559  +
mov edx [ebp+arg_10] +
push eax  +
mov eax [ebp+arg_8] +
lea ecx [ebp+var_4C] +
push ecx  +
mov ecx [ebp+arg_4] +
push edx  +
push ebx  +
push eax  +
push ecx  +
push edi  +
push esi  +
call sub_407C20  +
mov ecx [ebp+var_4] +
add esp 30h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_C] +
mov eax [ebx+14h] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx [ebp+arg_14] +
push ecx  +
push eax  +
push offset unk_442168  +
lea edx [ebp+var_C] +
push edx  +
push esi  +
call sub_405AD0  +
add esp 10h +
push eax  +
lea eax [ebp+var_4C] +
push 40h  +
push eax  +
call sub_426559  +
mov edx [ebp+arg_10] +
push eax  +
mov eax [ebp+arg_8] +
lea ecx [ebp+var_4C] +
push ecx  +
mov ecx [ebp+arg_4] +
push edx  +
push ebx  +
push eax  +
push ecx  +
push edi  +
push esi  +
call sub_407C20  +
mov ecx [ebp+var_4] +
add esp 30h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_C] +
mov eax [ebx+14h] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx [ebp+arg_18] +
push ecx  +
push edx  +
push eax  +
push offset unk_44216C  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_405AD0  +
add esp 10h +
push eax  +
lea ecx [ebp+var_4C] +
push 40h  +
push ecx  +
call sub_426559  +
mov ecx [ebp+arg_8] +
push eax  +
mov eax [ebp+arg_10] +
lea edx [ebp+var_4C] +
push edx  +
mov edx [ebp+arg_4] +
push eax  +
push ebx  +
push ecx  +
push edx  +
push edi  +
push esi  +
call sub_407C20  +
mov ecx [ebp+var_4] +
add esp 34h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_C] +
mov eax [ebx+14h] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx [ebp+arg_18] +
push ecx  +
push edx  +
push eax  +
push offset unk_442170  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_405AD0  +
add esp 10h +
push eax  +
lea ecx [ebp+var_4C] +
push 40h  +
push ecx  +
call sub_426559  +
mov ecx [ebp+arg_8] +
push eax  +
mov eax [ebp+arg_10] +
lea edx [ebp+var_4C] +
push edx  +
mov edx [ebp+arg_4] +
push eax  +
push ebx  +
push ecx  +
push edx  +
push edi  +
push esi  +
call sub_407C20  +
mov ecx [ebp+var_4] +
add esp 34h +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
sub esp 8Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebx+18h] +
push edi  +
mov [ebp+var_88] eax +
mov eax [ebx+1Ch] +
xor edi edi +
mov [ebp+var_8C] ecx +
cmp eax edi +
jg loc_40831A  +
jl loc_40830A  +
cmp esi edi +
ja loc_40831A  +
test dword ptr [ebx+14h] 2000h +
jnz loc_40831A  +
mov esi 6 +
xor eax eax +
mov ecx eax +
cmp ecx edi +
jl loc_408333  +
jg loc_408327  +
cmp esi 24h +
jbe loc_408333  +
mov [ebp+var_84] 24h +
jmp loc_408339  +
mov [ebp+var_84] esi +
mov eax [ebp+var_84] +
fld  [ebp+arg_14] +
cdq   +
sub esi eax +
sbb ecx edx +
mov edx [ebx+14h] +
mov eax edx +
and eax 3000h +
mov [ebp+var_80] edi +
cmp eax 2000h +
jnz loc_40841D  +
fld  ds:dbl_442190 +
fmul st st(1) +
fld  st(1) +
fucompp   +
fnstsw  ax +
test ah 44h +
jnp loc_40841D  +
fldz   +
fcom  st(1) +
fnstsw  ax +
test ah 41h +
jnz loc_40838B  +
fxch  st(1) +
mov [ebp+var_79] 1 +
fchs   +
jmp loc_408391  +
mov [ebp+var_79] 0 +
fxch  st(1) +
fld  ds:dbl_442188 +
fcom  st(1) +
fnstsw  ax +
fld  ds:dbl_442180 +
test ah 41h +
jnp loc_4083AC  +
fstp  st(1) +
jmp loc_4083C8  +
fxch  st(1) +
cmp [ebp+var_80] 1388h +
jnb loc_4083A6  +
fdiv st(2) st +
add [ebp+var_80] 0Ah +
fxch  st(1) +
fcom  st(2) +
fnstsw  ax +
test ah 41h +
jnp loc_4083AA  +
fstp  st +
fxch  st(2) +
fcomp  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_408413  +
test ecx ecx +
jl loc_408413  +
jg loc_4083DE  +
cmp esi 0Ah +
jb loc_408413  +
fld  ds:dbl_442178 +
jmp loc_4083E8  +
fxch  st(1) +
fcom  st(1) +
fnstsw  ax +
test ah 1 +
jnz loc_408450  +
cmp edi 1388h +
jnb loc_408450  +
add esi 0FFFFFFF6h +
fxch  st(1) +
adc ecx 0FFFFFFFFh +
fmul st st(2) +
add edi 0Ah +
test ecx ecx +
jg loc_4083E6  +
jl loc_408411  +
cmp esi 0Ah +
jnb loc_4083E6  +
fstp  st(1) +
cmp [ebp+var_79] 0 +
fstp  st(1) +
jz loc_40841D  +
fchs   +
mov byte ptr [ebp+var_C] 25h +
lea eax [ebp+var_C+1] +
test dl 20h +
jz loc_408430  +
mov byte ptr [ebp+var_C+1] 2Bh +
lea eax [ebp+var_C+2] +
test dl 10h +
jz loc_408439  +
mov byte ptr [eax] 23h +
inc eax  +
and edx 3000h +
mov word ptr [eax] 2A2Eh +
cmp edx 2000h +
jnz loc_408454  +
mov cl 66h +
jmp loc_40846D  +
fstp  st +
jmp loc_408413  +
cmp edx 3000h +
jnz loc_408460  +
mov cl 61h +
jmp loc_40846D  +
cmp edx 1000h +
setnz cl  +
lea ecx [ecx+ecx+65h] +
sub esp 8 +
mov [eax+2] cl +
fstp  [esp+0A0h+var_A0] +
mov ecx [ebp+var_84] +
push ecx  +
lea edx [ebp+var_C] +
push edx  +
mov byte ptr [eax+3] 0 +
lea eax [ebp+var_78] +
push 6Ch  +
push eax  +
call sub_426559  +
mov ecx [ebp+var_80] +
push eax  +
mov eax [ebp+arg_10] +
push esi  +
mov esi [ebp+var_88] +
push edi  +
push ecx  +
mov ecx [ebp+arg_8] +
lea edx [ebp+var_78] +
push edx  +
mov edx [ebp+arg_4] +
push eax  +
mov eax [ebp+var_8C] +
push ebx  +
push ecx  +
push edx  +
push esi  +
push eax  +
call sub_4076B0  +
mov ecx [ebp+var_4] +
add esp 44h +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
sub esp 8Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebx+18h] +
push edi  +
mov [ebp+var_88] eax +
mov eax [ebx+1Ch] +
xor edi edi +
mov [ebp+var_8C] ecx +
cmp eax edi +
jg loc_40852A  +
jl loc_40851A  +
cmp esi edi +
ja loc_40852A  +
test dword ptr [ebx+14h] 2000h +
jnz loc_40852A  +
mov esi 6 +
xor eax eax +
mov ecx eax +
cmp ecx edi +
jl loc_408543  +
jg loc_408537  +
cmp esi 24h +
jbe loc_408543  +
mov [ebp+var_84] 24h +
jmp loc_408549  +
mov [ebp+var_84] esi +
mov eax [ebp+var_84] +
cdq   +
sub esi eax +
sbb ecx edx +
mov edx [ebx+14h] +
mov eax edx +
and eax 3000h +
mov [ebp+var_80] edi +
cmp eax 2000h +
jnz loc_408618  +
fldz   +
fld  [ebp+arg_14] +
fcom  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_408599  +
mov [ebp+var_79] 1 +
fchs   +
fld  ds:dbl_442188 +
fcom  st(1) +
fnstsw  ax +
fld  ds:dbl_442180 +
test ah 41h +
jnp loc_4085A1  +
fstp  st(1) +
jmp loc_4085BD  +
mov [ebp+var_79] 0 +
jmp loc_408580  +
fxch  st(1) +
cmp [ebp+var_80] 1388h +
jnb loc_408595  +
fdiv st(2) st +
add [ebp+var_80] 0Ah +
fxch  st(1) +
fcom  st(2) +
fnstsw  ax +
test ah 41h +
jnp loc_40859F  +
fstp  st +
fxch  st(2) +
fcomp  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_408608  +
test ecx ecx +
jl loc_408608  +
jg loc_4085D3  +
cmp esi 0Ah +
jb loc_408608  +
fld  ds:dbl_442178 +
jmp loc_4085DD  +
fxch  st(1) +
fcom  st(1) +
fnstsw  ax +
test ah 1 +
jnz loc_408614  +
cmp edi 1388h +
jnb loc_408614  +
add esi 0FFFFFFF6h +
fxch  st(1) +
adc ecx 0FFFFFFFFh +
fmul st st(2) +
add edi 0Ah +
test ecx ecx +
jg loc_4085DB  +
jl loc_408606  +
cmp esi 0Ah +
jnb loc_4085DB  +
fstp  st(1) +
cmp [ebp+var_79] 0 +
fstp  st(1) +
jz loc_40861B  +
fchs   +
jmp loc_40861B  +
fstp  st +
jmp loc_408608  +
fld  [ebp+arg_14] +
mov byte ptr [ebp+var_C] 25h +
lea eax [ebp+var_C+1] +
test dl 20h +
jz loc_40862E  +
mov byte ptr [ebp+var_C+1] 2Bh +
lea eax [ebp+var_C+2] +
test dl 10h +
jz loc_408637  +
mov byte ptr [eax] 23h +
inc eax  +
and edx 3000h +
mov word ptr [eax] 2A2Eh +
mov byte ptr [eax+2] 4Ch +
cmp edx 2000h +
jnz loc_408652  +
mov cl 66h +
jmp loc_40866B  +
cmp edx 3000h +
jnz loc_40865E  +
mov cl 61h +
jmp loc_40866B  +
cmp edx 1000h +
setnz cl  +
lea ecx [ecx+ecx+65h] +
sub esp 8 +
mov [eax+3] cl +
fstp  [esp+0A0h+var_A0] +
mov ecx [ebp+var_84] +
push ecx  +
lea edx [ebp+var_C] +
push edx  +
mov byte ptr [eax+4] 0 +
lea eax [ebp+var_78] +
push 6Ch  +
push eax  +
call sub_426559  +
mov ecx [ebp+var_80] +
push eax  +
mov eax [ebp+arg_10] +
push esi  +
mov esi [ebp+var_88] +
push edi  +
push ecx  +
mov ecx [ebp+arg_8] +
lea edx [ebp+var_78] +
push edx  +
mov edx [ebp+arg_4] +
push eax  +
mov eax [ebp+var_8C] +
push ebx  +
push ecx  +
push edx  +
push esi  +
push eax  +
call sub_4076B0  +
mov ecx [ebp+var_4] +
add esp 44h +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
sub esp 44h +
push ecx  +
mov ecx [ecx+8] +
push esi  +
mov esi [ebp+arg_0] +
mov eax ecx +
push edi  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
lea edi [eax+1] +
lea esp [esp+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_408770  +
sub eax edi +
push eax  +
push ecx  +
mov ecx esi +
call sub_402230  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov ecx [ecx+10h] +
push esi  +
mov esi [ebp+arg_0] +
mov eax ecx +
push edi  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
lea edi [eax+1] +
lea esp [esp+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_4087C0  +
sub eax edi +
push eax  +
push ecx  +
mov ecx esi +
call sub_402230  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov ecx [ecx+14h] +
push esi  +
mov esi [ebp+arg_0] +
mov eax ecx +
push edi  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
lea edi [eax+1] +
lea esp [esp+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_408810  +
sub eax edi +
push eax  +
push ecx  +
mov ecx esi +
call sub_402230  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_408840  +
sub eax edi +
push eax  +
push esi  +
add ecx 9Ch +
call sub_402230  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43D87A  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
xor eax eax +
mov [ebp+var_10] eax +
cmp [ebp+arg_4] eax +
jz loc_4088B5  +
mov dword ptr [esi] offset unk_44219C +
mov dword ptr [esi+10h] offset unk_442D40 +
mov dword ptr [esi+60h] offset off_441D98 +
mov [ebp+var_4] eax +
mov [ebp+var_10] 1 +
mov ecx [esi] +
mov edx [ecx+4] +
mov dword ptr [esi+edx] offset off_441D88 +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov eax [esi] +
mov edi [eax+4] +
add edi esi +
mov ecx edi +
call sub_405060  +
lea ebx [esi+18h] +
push 20h  +
mov ecx edi +
mov [edi+38h] ebx +
mov dword ptr [edi+3Ch] 0 +
call sub_406F50  +
cmp dword ptr [edi+38h] 0 +
mov [edi+40h] al +
jnz loc_408907  +
mov eax [edi+0Ch] +
or eax 4 +
or eax 4 +
push 0  +
push eax  +
mov ecx edi +
call sub_404F50  +
mov ecx [esi+10h] +
mov edx [ecx+4] +
mov dword ptr [esi+edx+10h] offset off_441D80 +
mov eax [esi] +
mov ecx [eax+4] +
mov dword ptr [esi+ecx] offset off_441D90 +
mov edx [esi] +
mov eax [edx+4] +
mov ecx ebx +
mov [ebp+var_4] 5 +
mov dword ptr [esi+eax] offset off_442130 +
call sub_4059B0  +
mov cl [ebp+arg_0] +
xor eax eax +
mov dword ptr [ebx] offset off_441E74 +
test cl 1 +
jnz loc_408950  +
mov eax 4 +
test cl 2 +
jnz loc_408958  +
or eax 2 +
test cl 8 +
jz loc_408960  +
or eax 8 +
test cl 4 +
jz loc_408968  +
or eax 10h +
mov [ebx+40h] eax +
mov dword ptr [ebx+3Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43D8B8  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ecx+40h] +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_4C] ebx +
test dl 2 +
jnz loc_408A1E  +
mov eax [ecx+24h] +
cmp [eax] ebx +
jz loc_408A1E  +
mov eax [eax] +
mov edx [ecx+3Ch] +
cmp edx eax +
jb loc_4089DD  +
mov eax edx +
mov ecx [ecx+14h] +
mov ecx [ecx] +
sub eax ecx +
push eax  +
push ecx  +
mov edi 0Fh +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
mov [ebp+var_4] ebx +
lea edx [ebp+var_2C] +
mov [esi+14h] edi +
mov [esi+10h] ebx +
push edx  +
mov ecx esi +
mov [esi] bl +
call sub_402420  +
cmp [ebp+var_18] 10h +
jb loc_408A93  +
mov eax [ebp+var_2C] +
push eax  +
jmp loc_408A8B  +
test dl 4 +
jnz loc_408A59  +
mov edx [ecx+20h] +
cmp [edx] ebx +
jz loc_408A59  +
mov eax [ecx+30h] +
mov eax [eax] +
add eax [edx] +
mov ecx [ecx+10h] +
mov ecx [ecx] +
sub eax ecx +
push eax  +
push ecx  +
mov edi 0Fh +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
mov [ebp+var_4] 1 +
jmp loc_4089FF  +
mov edi 0Fh +
mov [ebp+var_34] edi +
mov [ebp+var_38] ebx +
mov byte ptr [ebp+var_48] bl +
lea ecx [ebp+var_48] +
push ecx  +
mov [esi+14h] edi +
mov [esi+10h] ebx +
mov ecx esi +
mov [ebp+var_4] 2 +
mov [esi] bl +
call sub_402420  +
cmp [ebp+var_34] 10h +
jb loc_408A93  +
mov edx [ebp+var_48] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
add ecx 18h +
mov [ebp+var_4] 0 +
call sub_408990  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43D928  +
mov eax large fs:0 +
push eax  +
sub esp 0DCh +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
xor esi esi +
mov edi ecx +
mov [ebp+var_3C] eax +
mov [ebp+var_30] esi +
cmp dword ptr [edi+94h] 10h +
lea eax [edi+80h] +
mov [ebp+var_38] esi +
mov [ebp+var_34] esi +
jb loc_408B42  +
mov eax [eax] +
push esi  +
lea ecx [ebp+var_34] +
push ecx  +
lea edx [ebp+var_38] +
push edx  +
push esi  +
push esi  +
push esi  +
push eax  +
mov eax [edi+4] +
push eax  +
call sub_41BBE0  +
mov eax [ebp+var_38] +
add esp 20h +
cmp eax 7FFFFFFFh +
jnz loc_408B6E  +
mov [ebp+var_30] 7FFFh +
jmp loc_408B94  +
cmp eax esi +
jle loc_408B8D  +
lea ecx [eax+0A8C0h] +
mov eax 0C22E4507h +
imul  ecx +
add edx ecx +
sar edx 10h +
mov eax edx +
shr eax 1Fh +
add eax edx +
jmp loc_408B91  +
neg eax  +
sbb eax eax +
mov [ebp+var_30] eax +
mov eax [ebp+var_34] +
cmp eax 7FFFFFFFh +
jnz loc_408BA5  +
mov esi 7FFFh +
jmp loc_408BCA  +
cmp eax esi +
jle loc_408BC4  +
lea ecx [eax+0A8C0h] +
mov eax 0C22E4507h +
imul  ecx +
add edx ecx +
sar edx 10h +
mov eax edx +
shr eax 1Fh +
add eax edx +
jmp loc_408BC8  +
neg eax  +
sbb eax eax +
mov esi eax +
mov ecx [edi+4] +
push ecx  +
call sub_41BE60  +
mov ebx eax +
lea eax [edi+80h] +
add esp 4 +
cmp dword ptr [eax+14h] 10h +
jb loc_408BE6  +
mov eax [eax] +
mov edx [edi+4] +
push ebx  +
push eax  +
push edx  +
call sub_41C3D0  +
mov eax [ebp+arg_0] +
add esp 0Ch +
cmp eax 3 +
jg loc_408C27  +
jz loc_408C13  +
xor ecx ecx +
cmp eax ecx +
jl loc_408C2E  +
cmp eax 1 +
jle loc_408C51  +
cmp eax 2 +
jnz loc_408C2E  +
or esi 0FFFFFFFFh +
jmp loc_408C5F  +
mov eax [ebp+var_3C] +
push eax  +
call sub_404BC0  +
add esp 4 +
cmp esi eax +
jle loc_408C54  +
mov esi eax +
jmp loc_408C54  +
cmp eax 0FFFFh +
jz loc_408C51  +
mov ecx dword_44FF1C +
mov edx [edi] +
push offset aUpdateuserda_0  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_408DE8  +
mov esi [ebp+var_30] +
cmp esi 0FFFFFF9Dh +
jz loc_408DE8  +
xor ecx ecx +
mov [ebp+var_E4] offset unk_44219C +
mov [ebp+var_D4] offset unk_442D40 +
mov [ebp+var_4] ecx +
mov [ebp+var_DC] ecx +
mov [ebp+var_D8] ecx +
lea ecx [ebp+var_84] +
mov [ebp+var_30] 1 +
mov [ebp+var_84] offset off_441D88 +
call sub_405060  +
lea eax [ebp+var_CC] +
push 20h  +
lea ecx [ebp+var_84] +
mov [ebp+var_4C] eax +
mov [ebp+var_48] 0 +
call sub_406F50  +
cmp [ebp+var_4C] 0 +
mov [ebp+var_44] al +
jnz loc_408CD8  +
mov eax [ebp+var_78] +
or eax 4 +
push 0  +
push eax  +
lea ecx [ebp+var_84] +
call sub_404F50  +
mov ecx [ebp+var_D4] +
mov edx [ecx+4] +
mov [ebp+edx+var_D4] offset off_441D80 +
mov eax [ebp+var_E4] +
mov ecx [eax+4] +
mov [ebp+ecx+var_E4] offset off_441D90 +
mov edx [ebp+var_E4] +
mov eax [edx+4] +
lea ecx [ebp+var_CC] +
mov [ebp+var_4] 5 +
mov [ebp+eax+var_E4] offset off_442130 +
call sub_4059B0  +
xor eax eax +
mov [ebp+var_CC] offset off_441E74 +
mov [ebp+var_90] eax +
mov [ebp+var_8C] eax +
push esi  +
lea ecx [ebp+var_D4] +
mov [ebp+var_4] 7 +
call sub_4074C0  +
lea ecx [ebp+var_2C] +
push ecx  +
lea ecx [ebp+var_E4] +
call sub_408AC0  +
mov esi 10h +
cmp [eax+14h] esi +
jb loc_408D6C  +
mov eax [eax] +
mov edx [edi+4] +
push eax  +
push offset aNlerdays  +
push ebx  +
push edx  +
call sub_41C070  +
add esp 10h +
cmp [ebp+var_18] esi +
jb loc_408D90  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
lea eax [edi+80h] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
cmp [eax+14h] esi +
jb loc_408DAF  +
mov eax [eax] +
mov ecx [edi+4] +
push ebx  +
push eax  +
push ecx  +
call sub_41C2B0  +
add esp 0Ch +
lea ecx [ebp+var_84] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_4067B0  +
lea edx [ebp+var_84] +
push edx  +
mov [ebp+var_84] offset off_441D78 +
call sub_424E73  +
add esp 4 +
mov eax [edi+4] +
push ebx  +
push eax  +
call sub_41BF60  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43D95B  +
mov eax large fs:0 +
push eax  +
sub esp 0E8h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov esi ecx +
xor edi edi +
mov [ebp+var_4C] eax +
cmp [esi+90h] edi +
jnz loc_408E82  +
mov eax dword_44FF1C +
mov ecx [esi] +
push offset aUpdatenextlaun  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_409100  +
cmp eax edi +
jnz loc_408EA9  +
mov edx dword_44FF1C +
mov eax [esi] +
push offset aUpdatenextla_0  +
push edx  +
push 5  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
add esp 14h +
jmp loc_409100  +
mov ecx [esi+4] +
push ecx  +
mov [ebp+var_40] edi +
call sub_41BE60  +
lea ebx [esi+80h] +
add esp 4 +
cmp dword ptr [ebx+14h] 10h +
mov ecx eax +
mov [ebp+var_38] ecx +
jb loc_408ECD  +
mov eax [ebx] +
jmp loc_408ECF  +
mov eax ebx +
mov edx [esi+4] +
push ecx  +
push eax  +
push edx  +
call sub_41C3D0  +
mov ecx [ebp+var_38] +
mov edx [esi+4] +
lea eax [ebp+var_40] +
push eax  +
push offset aNlerdays  +
push ecx  +
push edx  +
call sub_41C190  +
mov eax [ebp+var_40] +
add esp 1Ch +
cmp eax edi +
jnz loc_408F14  +
mov eax dword_44FF1C +
mov ecx [esi] +
push offset aUpdatenextla_1  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
jmp loc_4090E8  +
push eax  +
call sub_4263DA  +
add esp 4 +
cmp dword ptr [ebx+14h] 10h +
mov [ebp+var_34] edi +
mov [ebp+var_44] edi +
mov [ebp+var_2D] 0 +
mov [ebp+var_3C] edi +
jb loc_408F34  +
mov eax [ebx] +
jmp loc_408F36  +
mov eax ebx +
push edi  +
lea edx [ebp+var_3C] +
push edx  +
push edi  +
push edi  +
push edi  +
push edi  +
push eax  +
mov eax [esi+4] +
push eax  +
call sub_41BBE0  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_404B80  +
add esp 24h +
cmp dword ptr [ebx+14h] 10h +
mov [ebp+var_48] eax +
jb loc_408F60  +
mov ebx [ebx] +
mov eax [esi+4] +
lea edx [ebp+var_34] +
push edx  +
push offset aSilentactivato  +
push ebx  +
push eax  +
call sub_41CA50  +
add esp 10h +
cmp eax edi +
jnz loc_4090D2  +
mov eax [ebp+var_34] +
cmp eax edi +
jz loc_4090D2  +
cmp [eax] edi +
jz loc_4090F0  +
mov ecx [edi+eax] +
mov edx [ecx] +
mov eax edx +
lea ebx [eax+1] +
jmp loc_408FA0  +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_408FA0  +
sub eax ebx +
push eax  +
mov eax [ebp+var_4C] +
push eax  +
push edx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40901C  +
mov ecx [ebp+var_34] +
mov edx [edi+ecx] +
mov eax [edx+10h] +
dec eax  +
jz loc_408FF2  +
sub eax 2 +
jz loc_408FEC  +
mov eax dword_44FF1C +
mov ecx [esi] +
push offset aUpdatenextla_2  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_40901C  +
mov [ebp+var_2D] 1 +
jmp loc_40901C  +
mov edx dword_44FF1C +
mov eax [esi] +
push offset aUpdatenextla_3  +
push edx  +
push 5  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
add esp 14h +
push offset aNlerdays  +
mov ecx esi +
call sub_406410  +
mov eax [ebp+var_44] +
inc eax  +
lea edi ds:0[eax*4] +
mov [ebp+var_44] eax +
mov eax [ebp+var_34] +
cmp dword ptr [edi+eax] 0 +
jnz loc_408F91  +
cmp [ebp+var_2D] 1 +
jnz loc_4090F0  +
mov edi [ebp+var_48] +
push 1  +
push 3  +
lea ecx [ebp+var_F4] +
dec edi  +
call sub_408860  +
push edi  +
lea ecx [ebp+var_E4] +
mov [ebp+var_4] 0 +
call sub_4074C0  +
lea ecx [ebp+var_2C] +
push ecx  +
lea ecx [ebp+var_F4] +
call sub_408AC0  +
mov ebx 10h +
cmp [eax+14h] ebx +
jb loc_409082  +
mov eax [eax] +
mov edi [ebp+var_38] +
mov edx [esi+4] +
push eax  +
push offset aNlerdays  +
push edi  +
push edx  +
call sub_41C070  +
add esp 10h +
lea ecx [ebp+var_2C] +
call sub_421E10  +
cmp [esi+94h] ebx +
lea eax [esi+80h] +
jb loc_4090B0  +
mov eax [eax] +
push edi  +
push eax  +
mov eax [esi+4] +
push eax  +
call sub_41C2B0  +
add esp 0Ch +
lea ecx [ebp+var_F4] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_406DE0  +
jmp loc_4090F0  +
mov ecx dword_44FF1C +
mov edx [esi] +
push offset aUpdatenextla_4  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
add esp 14h +
mov eax [ebp+var_38] +
mov ecx [esi+4] +
push eax  +
push ecx  +
call sub_41BF60  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43D998  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
xor esi esi +
mov [ebp+var_34] edi +
cmp [edi+90h] esi +
jnz loc_40917C  +
mov eax dword_44FF1C +
mov ecx [edi] +
push offset aUpdateuserda_1  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_409350  +
cmp dword ptr [edi+94h] 10h +
lea eax [edi+80h] +
mov [ebp+var_30] esi +
jb loc_409190  +
mov eax [eax] +
lea edx [ebp+var_30] +
push edx  +
push offset aSilentactivato  +
push eax  +
mov eax [edi+4] +
push eax  +
call sub_41CA50  +
add esp 10h +
mov ecx edi +
mov ebx eax +
call sub_4064E0  +
push 0  +
push offset unk_441AD0  +
lea ecx [ebp+var_2C] +
mov edi eax +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_2C] 0 +
call sub_402230  +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_4091F3  +
mov eax edi +
lea edx [eax+1] +
mov edi edi +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4091E0  +
sub eax edx +
push eax  +
push edi  +
lea ecx [ebp+var_2C] +
call sub_402230  +
test ebx ebx +
jnz loc_40931E  +
mov eax [ebp+var_30] +
test eax eax +
jz loc_40931E  +
cmp [eax] ebx +
jz loc_40924F  +
mov edx [ebp+var_1C] +
test edx edx +
jz loc_409263  +
cmp [ebp+var_18] 10h +
mov ecx [ebp+var_2C] +
jnb loc_40921D  +
lea ecx [ebp+var_2C] +
push edx  +
push ecx  +
mov ecx [eax+esi*4] +
mov edx [ecx] +
push edx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40930B  +
mov eax [ebp+var_30] +
mov eax [eax+esi*4] +
mov ecx [eax+0Ch] +
mov edx [eax+8] +
push ecx  +
mov ecx [ebp+var_34] +
push edx  +
call sub_408AF0  +
mov eax [ebp+var_30] +
cmp dword ptr [eax+esi*4] 0 +
jnz loc_40933E  +
push offset aUpdateuserda_2  +
jmp loc_409323  +
mov eax [eax+esi*4] +
mov ecx [eax] +
push 13h  +
push offset aSubscriptionre  +
push ecx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_409236  +
mov edx [ebp+var_30] +
mov eax [edx+esi*4] +
mov ecx [eax] +
push 1Ah  +
push offset aSubscriptionex  +
push ecx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_409236  +
mov edx [ebp+var_30] +
mov eax [edx+esi*4] +
mov ecx [eax] +
push 16h  +
push offset aMissingpayment  +
push ecx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_409236  +
mov edx [ebp+var_30] +
mov eax [edx+esi*4] +
mov ecx [eax] +
push 19h  +
push offset aRefreshactivat  +
push ecx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_4092F5  +
mov edx [ebp+var_30] +
mov eax [edx+esi*4] +
mov ecx [eax] +
push 1Ch  +
push offset aRefreshactiv_0  +
push ecx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40930B  +
mov edx [ebp+var_30] +
mov eax [edx+esi*4] +
mov ecx [eax+0Ch] +
mov edx [eax+8] +
push ecx  +
mov ecx [ebp+var_34] +
push edx  +
call sub_406370  +
mov eax [ebp+var_30] +
inc esi  +
cmp dword ptr [eax+esi*4] 0 +
jnz loc_40920A  +
jmp loc_40924F  +
push offset aUpdateuserda_3  +
mov eax dword_44FF1C +
mov ecx [ebp+var_34] +
mov edx [ecx] +
push eax  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
add esp 14h +
cmp [ebp+var_18] 10h +
jb loc_409350  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jnz loc_4093A1  +
mov eax dword_44FF1C +
mov ecx [esi] +
push offset aHandlelicensee  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
cmp dword ptr [esi+90h] 0 +
jnz loc_4093CE  +
mov edx dword_44FF1C +
mov eax [esi] +
push offset aHandlelicens_0  +
push edx  +
push 5  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
add esp 14h +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
cmp dword ptr [esi+94h] 10h +
push edi  +
lea edi [esi+80h] +
mov [ebp+arg_0] 0 +
jb loc_4093E9  +
mov eax [edi] +
jmp loc_4093EB  +
mov eax edi +
mov edx [esi+4] +
push 0  +
lea ecx [ebp+arg_0] +
push ecx  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push edx  +
call sub_41BBE0  +
add esp 20h +
cmp dword ptr [esi+0ACh] 0 +
jnz loc_409437  +
mov eax dword_44FF1C +
mov ecx [esi] +
push offset aHandlelicens_1  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
mov edx [esi+4] +
push 0  +
push edx  +
call sub_41C830  +
add esp 1Ch +
cmp dword ptr [edi+14h] 10h +
jb loc_409441  +
mov eax [edi] +
jmp loc_409443  +
mov eax edi +
push ebx  +
push eax  +
mov eax [esi+4] +
push eax  +
call sub_41CC90  +
add esp 0Ch +
test eax eax +
jnz loc_4094EC  +
mov ecx dword_44FF1C +
mov edx [esi] +
push offset aHandlelicens_2  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
add esp 14h +
cmp dword ptr [edi+14h] 10h +
jb loc_40947F  +
mov edi [edi] +
mov ecx [esi+4] +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push edi  +
push ecx  +
call sub_41BBE0  +
add esp 20h +
mov ecx esi +
call sub_4064E0  +
test eax eax +
jz loc_4094B4  +
push eax  +
mov ecx esi +
call sub_408E20  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov edx dword_44FF1C +
mov eax [esi] +
push offset aHandlelicens_3  +
push edx  +
push 5  +
push offset aLicensingevent  +
push eax  +
call sub_41D8D0  +
add esp 14h +
push offset aNlerdays  +
mov ecx esi +
call sub_406410  +
mov ecx esi +
call sub_409120  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
cmp eax 8121h +
jnz loc_409518  +
mov ecx dword_44FF1C +
mov edx [esi] +
push offset aHandlelicens_4  +
push ecx  +
push 5  +
push offset aLicensingevent  +
push edx  +
call sub_41D8D0  +
add esp 14h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov ecx [esi] +
cmp eax 8122h +
jnz loc_409543  +
mov eax dword_44FF1C +
push offset aHandlelicens_5  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
movzx eax ax +
mov edx eax +
and edx 0FFh +
push edx  +
shr eax 8 +
push eax  +
mov eax dword_44FF1C +
push offset aHandlelicens_6  +
push eax  +
push 5  +
push offset aLicensingevent  +
push ecx  +
call sub_41D8D0  +
add esp 1Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
cmp esi 4 +
jb loc_4095A7  +
mov eax [edx] +
cmp eax [ecx] +
jnz loc_4095AB  +
sub esi 4 +
add ecx 4 +
add edx 4 +
cmp esi 4 +
jnb loc_409593  +
test esi esi +
jz loc_4095F0  +
movzx eax byte ptr [edx] +
movzx edi byte ptr [ecx] +
sub eax edi +
jnz loc_4095E6  +
cmp esi 1 +
jbe loc_4095F0  +
movzx eax byte ptr [edx+1] +
movzx edi byte ptr [ecx+1] +
sub eax edi +
jnz loc_4095E6  +
cmp esi 2 +
jbe loc_4095F0  +
movzx eax byte ptr [edx+2] +
movzx edi byte ptr [ecx+2] +
sub eax edi +
jnz loc_4095E6  +
cmp esi 3 +
jbe loc_4095F0  +
movzx eax byte ptr [edx+3] +
movzx ecx byte ptr [ecx+3] +
sub eax ecx +
sar eax 1Fh +
pop edi  +
or eax 1 +
pop esi  +
pop ebp  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
dec dword_45165C  +
jnz locret_409636  +
mov eax dword_451A64 +
test eax eax +
jz locret_409636  +
push eax  +
call sub_41D590  +
mov eax dword_451A64 +
push eax  +
call sub_41D100  +
add esp 8 +
mov dword_451A64 0 +
mov byte_451658 0 +
retn   +
***
push ecx  +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_4] +
mov [ebp+var_4] ecx +
test edx edx +
jnz loc_409656  +
cmp eax [ecx+10h] +
jbe loc_4096CC  +
push ebx  +
push esi  +
push edi  +
mov edi [ecx+10h] +
cmp eax edi +
jnb loc_4096C6  +
sub edi eax +
cmp edx edi +
ja loc_4096C6  +
mov esi 1 +
sub esi edx +
add edi esi +
cmp dword ptr [ecx+14h] 10h +
jb loc_409677  +
mov ecx [ecx] +
lea ebx [ecx+eax] +
mov eax [ebp+arg_0] +
movsx ecx byte ptr [eax] +
push edi  +
push ecx  +
push ebx  +
call sub_426410  +
mov esi eax +
add esp 0Ch +
test esi esi +
jz loc_4096C6  +
mov edx [ebp+arg_8] +
mov eax [ebp+arg_0] +
push edx  +
push eax  +
push esi  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jz loc_4096D2  +
mov ecx [ebp+arg_0] +
movsx edx byte ptr [ecx] +
sub ebx esi +
lea edi [edi+ebx-1] +
push edi  +
push edx  +
lea ebx [esi+1] +
push ebx  +
call sub_426410  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_409691  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+14h] 10h +
jb loc_4096DD  +
mov ecx [ecx] +
pop edi  +
mov eax esi +
pop esi  +
sub eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_409700  +
sub eax edi +
push eax  +
mov eax [ebp+arg_4] +
push eax  +
push esi  +
call sub_409640  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43D9CB  +
mov eax large fs:0 +
push eax  +
sub esp 0A0h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
xor ebx ebx +
push 7Fh  +
lea eax [ebp+var_90+1] +
push ebx  +
push eax  +
mov byte ptr [ebp+var_90] bl +
call sub_426210  +
add esp 0Ch +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_AC] +
mov [ebp+var_98] 0Fh +
mov [ebp+var_9C] ebx +
mov byte ptr [ebp+var_AC] bl +
call sub_402230  +
mov [ebp+var_4] ebx +
cmp esi ebx +
jz loc_40981F  +
push esi  +
call sub_41A570  +
add esp 4 +
test eax eax +
jz loc_409854  +
push offset unk_44255C  +
push esi  +
call sub_41A530  +
mov esi eax +
add esp 8 +
cmp esi ebx +
jz loc_40981F  +
push 80h  +
lea ecx [ebp+var_90] +
push ecx  +
push esi  +
call sub_41A9E0  +
lea eax [ebp+var_90] +
add esp 0Ch +
lea edx [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_4097E0  +
sub eax edx +
push eax  +
lea edx [ebp+var_90] +
push edx  +
lea ecx [ebp+var_AC] +
call sub_402230  +
push 14h  +
push ebx  +
push offset a__oobelib_log_  +
lea ecx [ebp+var_AC] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_409816  +
mov bl 1 +
push esi  +
call sub_42665D  +
add esp 4 +
cmp [ebp+var_98] 10h +
jb loc_409837  +
mov eax [ebp+var_AC] +
push eax  +
call sub_42520B  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov bl 1 +
jmp loc_40981F  +
***
sub esp 404h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push 3FFh  +
lea eax [ebp-403h] +
push 0  +
push eax  +
mov [ebp+MultiByteStr] 0 +
call sub_426210  +
lea ecx [ebp+MultiByteStr] +
push 400h  +
push ecx  +
call sub_41A5A0  +
push 1  +
push offset asc_441A28  +
lea edx [ebp+MultiByteStr] +
push 400h  +
push edx  +
call sub_41A350  +
push 0Bh  +
push offset aOobelib_log  +
lea eax [ebp+MultiByteStr] +
push 400h  +
push eax  +
call sub_41A350  +
lea ecx [ebp+MultiByteStr] +
push ecx  +
push 400h  +
push offset unk_451660  +
call sub_41A510  +
inc dword_45165C  +
add esp 40h +
cmp byte_451658 0 +
jnz loc_4099D6  +
mov edx lpValue +
mov eax lpName +
push edx  +
push eax  +
call ds:SetEnvironmentVariableA  +
lea ecx [ebp+MultiByteStr] +
push ecx  +
call sub_409720  +
add esp 4 +
test al al +
jnz loc_409942  +
lea edx [ebp+MultiByteStr] +
push edx  +
call sub_41A570  +
add esp 4 +
test eax eax +
jz loc_409942  +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_41A650  +
add esp 4 +
lea ecx [ebp+MultiByteStr] +
push 61A8000h  +
push ecx  +
call sub_41D690  +
add esp 8 +
mov dword_451A60 eax +
test eax eax +
jz loc_4099CF  +
push 0  +
call sub_41D380  +
add esp 4 +
mov dword_451A64 eax +
test eax eax +
jz loc_409982  +
mov edx dword_451A60 +
push edx  +
push eax  +
call sub_41D480  +
add esp 8 +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_409720  +
add esp 4 +
test al al +
jnz loc_4099B7  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset a__oobelib_log_  +
push ecx  +
push 4  +
push offset aAdobeSilentAct  +
push edx  +
call sub_41D8D0  +
add esp 14h +
mov eax dword_451A60 +
push eax  +
call sub_41D100  +
add esp 4 +
mov dword_451A60 0 +
mov byte_451658 1 +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
cmp byte ptr [ecx+2Dh] 0 +
jnz loc_409A0B  +
nop   +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_409A00  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [eax] +
cmp byte ptr [ecx+2Dh] 0 +
jnz loc_409A2A  +
mov edi edi +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_409A20  +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_4] ecx +
test edi edi +
jnz loc_409A49  +
cmp eax [ecx+10h] +
jbe loc_409A91  +
mov edx [ecx+10h] +
push ebx  +
push esi  +
cmp eax edx +
jnb loc_409A8C  +
sub edx eax +
mov ebx edx +
cmp edi ebx +
ja loc_409A8C  +
mov edx 1 +
sub edx edi +
add ebx edx +
cmp dword ptr [ecx+14h] 8 +
jb loc_409A6D  +
mov edx [ecx] +
jmp loc_409A6F  +
mov edx ecx +
lea eax [edx+eax*2] +
mov ecx [ebp+arg_0] +
mov [ebp+arg_4] eax +
mov edx ebx +
test ebx ebx +
jz loc_409A8C  +
movzx esi word ptr [ecx] +
cmp [eax] si +
jz loc_409A98  +
add eax 2 +
dec edx  +
jnz loc_409A81  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
test eax eax +
jz loc_409A8C  +
mov esi ecx +
mov edx eax +
test edi edi +
jz loc_409AB5  +
mov cx [edx] +
cmp cx [esi] +
jnz loc_409ACD  +
add edx 2 +
add esi 2 +
dec edi  +
jnz loc_409AA4  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+14h] 8 +
jb loc_409AC0  +
mov ecx [ecx] +
pop esi  +
sub eax ecx +
pop ebx  +
sar eax 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
sbb ecx ecx +
and ecx 0FFFFFFFEh +
inc ecx  +
jz loc_409AB5  +
mov edi [ebp+arg_8] +
mov edx eax +
sub edx [ebp+arg_4] +
or ecx 0FFFFFFFFh +
sar edx 1 +
sub ecx edx +
add ebx ecx +
add eax 2 +
jmp loc_409A72  +
***
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+2Dh] 0 +
jnz loc_409B0A  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_409B25  +
mov [ecx+4] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_409B37  +
mov [ecx] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov esi ecx +
mov eax [esi+8] +
xor ebx ebx +
push edi  +
cmp eax ebx +
jz loc_409B6A  +
push eax  +
call sub_41D100  +
add esp 4 +
mov [esi+8] ebx +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_409B7D  +
push eax  +
call sub_41D100  +
add esp 4 +
mov [esi+0Ch] ebx +
cmp dword ptr [esi+0B0h] 10h +
jb loc_409B95  +
mov eax [esi+9Ch] +
push eax  +
call sub_42520B  +
add esp 4 +
mov edi 0Fh +
mov [esi+0B0h] edi +
mov [esi+0ACh] ebx +
mov [esi+9Ch] bl +
cmp dword ptr [esi+94h] 10h +
jb loc_409BC4  +
mov ecx [esi+80h] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [esi+94h] edi +
mov [esi+90h] ebx +
mov [esi+80h] bl +
cmp dword ptr [esi+78h] 10h +
jb loc_409BE8  +
mov edx [esi+64h] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [esi+78h] edi +
mov [esi+74h] ebx +
mov [esi+64h] bl +
cmp dword ptr [esi+5Ch] 10h +
jb loc_409C03  +
mov eax [esi+48h] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [esi+5Ch] edi +
mov [esi+58h] ebx +
mov [esi+48h] bl +
cmp dword ptr [esi+40h] 10h +
jb loc_409C1E  +
mov ecx [esi+2Ch] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [esi+40h] edi +
mov [esi+3Ch] ebx +
mov [esi+2Ch] bl +
cmp dword ptr [esi+24h] 10h +
jb loc_409C39  +
mov edx [esi+10h] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [esi+24h] edi +
mov [esi+20h] ebx +
pop edi  +
mov [esi+10h] bl +
pop esi  +
pop ebx  +
retn   +
***
cmp dword_451AC4 0 +
jz loc_409C70  +
push offset dword_451AC4  +
call sub_41BAF0  +
add esp 4 +
mov dword_451AC4 0 +
mov eax dword_451AC8 +
test eax eax +
jz loc_409C82  +
push eax  +
call sub_41D100  +
add esp 4 +
mov eax dword_451ACC +
test eax eax +
jz loc_409C94  +
push eax  +
call sub_41D100  +
add esp 4 +
mov ecx dword_451AD8 +
test ecx ecx +
jz loc_409CBA  +
push esi  +
mov esi ecx +
call sub_409B50  +
push esi  +
call sub_42520B  +
add esp 4 +
mov dword_451AD8 0 +
pop esi  +
cmp byte_451AD1 0 +
jnz locret_409CE6  +
cmp dword_44FB24 0 +
jz locret_409CE6  +
cmp dword_44FB28 8 +
mov eax dword_44FB14 +
jnb loc_409CDF  +
mov eax offset dword_44FB14 +
push eax  +
call sub_426701  +
pop ecx  +
retn   +
***
dec dword_451AD4  +
jnz locret_409D1E  +
mov ecx dword_451AC0 +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_409D13  +
call sub_409C50  +
push esi  +
call sub_42520B  +
add esp 4 +
mov dword_451AC0 0 +
pop esi  +
retn   +
***
push ecx  +
mov edx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
mov [esi+10h] eax +
mov dword ptr [esi+14h] 7 +
mov [ebp+var_4] eax +
mov [esi] ax +
mov eax [ebp+arg_4] +
push edx  +
push eax  +
push ecx  +
mov ecx esi +
call sub_401A00  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jz loc_409DD5  +
cmp dword ptr [esi+14h] 8 +
jb loc_409D7F  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
cmp dword ptr [edi+14h] 8 +
jnb loc_409DAC  +
mov edx [edi+10h] +
lea eax [edx+edx+2] +
push eax  +
push edi  +
push esi  +
call loc_425800  +
add esp 0Ch +
jmp loc_409DB6  +
mov ecx [edi] +
mov [esi] ecx +
mov dword ptr [edi] 0 +
mov edx [edi+10h] +
mov [esi+10h] edx +
mov eax [edi+14h] +
mov [esi+14h] eax +
xor ecx ecx +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
mov [edi] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43DA48  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
xor eax eax +
mov ecx 0Fh +
mov [esi+24h] ecx +
mov [esi+20h] eax +
mov [esi+10h] al +
mov [esi+40h] ecx +
mov [esi+3Ch] eax +
mov [ebp+var_4] eax +
mov [esi+2Ch] al +
mov [esi+5Ch] ecx +
mov [esi+58h] eax +
mov [esi+48h] al +
mov [esi+78h] ecx +
mov [esi+74h] eax +
mov [esi+64h] al +
mov [esi+94h] ecx +
mov [esi+90h] eax +
mov [esi+80h] al +
mov [esi+0B0h] ecx +
mov [esi+0ACh] eax +
mov [esi+9Ch] al +
mov byte ptr [ebp+var_4] 5 +
call sub_41AB50  +
mov [esi+8] eax +
call sub_41B590  +
push 0  +
push offset unk_441AD0  +
lea ecx [esi+80h] +
mov [esi+0Ch] eax +
call sub_402230  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [esi+64h] +
call sub_402110  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [esi+10h] +
call sub_402110  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [esi+48h] +
call sub_402110  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [esi+2Ch] +
call sub_402110  +
push 0  +
push offset unk_441AD0  +
lea ecx [esi+9Ch] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_402230  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DA7B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push offset aLeidGoesHere  +
call sub_41B9F0  +
mov dword_451AC4 eax +
mov byte_451AD0 0 +
call sub_41AB50  +
mov dword_451AC8 eax +
call sub_41B590  +
push 0B8h  +
mov dword_451ACC eax +
call sub_425CDC  +
add esp 8 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_409F64  +
mov ecx eax +
call sub_409DE0  +
jmp loc_409F66  +
xor eax eax +
mov dword_451AD8 eax +
test eax eax +
jz loc_409F85  +
mov ecx dword_451A64 +
mov [eax] ecx +
mov edx dword_451AC4 +
mov eax dword_451AD8 +
mov [eax+4] edx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DAAB  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp dword_451AC0 0 +
jnz loc_409FF4  +
push 1  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_409FED  +
mov ecx eax +
call sub_409EF0  +
jmp loc_409FEF  +
xor eax eax +
mov dword_451AC0 eax +
inc dword_451AD4  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
mov eax edx +
push esi  +
lea esi [eax+2] +
lea esp [esp+0] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40A020  +
sub eax esi +
sar eax 1 +
push eax  +
push edx  +
mov ecx offset dword_44FB14 +
call sub_401F20  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_40A079  +
nop   +
cmp dword ptr [esi+14h] 10h +
jb loc_40A061  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
add esi 1Ch +
cmp esi edi +
jnz loc_40A050  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_4] +
cmp byte ptr [ebx+2Dh] 0 +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
jz loc_40A09F  +
push offset aInvalidMapSetT  +
call sub_4246D5  +
lea ecx [ebp+arg_4] +
mov [ebp+var_8] ebx +
call sub_421B60  +
mov ecx [ebx] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_40A0B7  +
mov edi [ebx+8] +
jmp loc_40A0CE  +
mov eax [ebx+8] +
cmp byte ptr [eax+2Dh] 0 +
jz loc_40A0C4  +
mov edi ecx +
jmp loc_40A0CE  +
mov eax [ebp+arg_4] +
mov edi [eax+8] +
cmp eax ebx +
jnz loc_40A140  +
cmp byte ptr [edi+2Dh] 0 +
mov esi [ebx+4] +
jnz loc_40A0DA  +
mov [edi+4] esi +
mov ecx [ebp+var_4] +
mov eax [ecx+4] +
cmp [eax+4] ebx +
jnz loc_40A0EA  +
mov [eax+4] edi +
jmp loc_40A0F5  +
cmp [esi] ebx +
jnz loc_40A0F2  +
mov [esi] edi +
jmp loc_40A0F5  +
mov [esi+8] edi +
mov eax [ecx+4] +
cmp [eax] ebx +
jnz loc_40A117  +
cmp byte ptr [edi+2Dh] 0 +
jz loc_40A106  +
mov eax esi +
jmp loc_40A112  +
push edi  +
call sub_409A10  +
mov ecx [ebp+var_4] +
add esp 4 +
mov edx [ecx+4] +
mov [edx] eax +
mov ecx [ecx+4] +
mov [ebp+var_C] ecx +
cmp [ecx+8] ebx +
jnz loc_40A19A  +
cmp byte ptr [edi+2Dh] 0 +
jz loc_40A12F  +
mov eax esi +
mov [ecx+8] eax +
jmp loc_40A19A  +
push edi  +
call sub_4099F0  +
mov ecx [ebp+var_C] +
add esp 4 +
mov [ecx+8] eax +
jmp loc_40A19A  +
mov [ecx+4] eax +
mov ecx [ebx] +
mov [eax] ecx +
cmp eax [ebx+8] +
jnz loc_40A150  +
mov esi eax +
jmp loc_40A16A  +
cmp byte ptr [edi+2Dh] 0 +
mov esi [eax+4] +
jnz loc_40A15C  +
mov [edi+4] esi +
mov [esi] edi +
mov ecx [ebx+8] +
mov [eax+8] ecx +
mov edx [ebx+8] +
mov [edx+4] eax +
mov ecx [ebp+var_4] +
mov ecx [ecx+4] +
cmp [ecx+4] ebx +
jnz loc_40A17A  +
mov [ecx+4] eax +
jmp loc_40A188  +
mov ecx [ebx+4] +
cmp [ecx] ebx +
jnz loc_40A185  +
mov [ecx] eax +
jmp loc_40A188  +
mov [ecx+8] eax +
mov edx [ebx+4] +
mov [eax+4] edx +
mov dl [ebx+2Ch] +
mov cl [eax+2Ch] +
mov [eax+2Ch] dl +
mov [ebx+2Ch] cl +
mov eax [ebp+var_8] +
mov bl 1 +
cmp [eax+2Ch] bl +
jnz loc_40A2A5  +
mov ecx [ebp+var_4] +
mov eax [ecx+4] +
cmp edi [eax+4] +
jz loc_40A29F  +
cmp [edi+2Ch] bl +
jnz loc_40A29F  +
mov eax [esi] +
cmp edi eax +
jnz loc_40A22B  +
mov eax [esi+8] +
cmp byte ptr [eax+2Ch] 0 +
jnz loc_40A1E2  +
mov [eax+2Ch] bl +
push esi  +
mov byte ptr [esi+2Ch] 0 +
call sub_409AF0  +
mov eax [esi+8] +
mov ecx [ebp+var_4] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_40A25C  +
mov edx [eax] +
cmp [edx+2Ch] bl +
jnz loc_40A1F7  +
mov edx [eax+8] +
cmp [edx+2Ch] bl +
jz loc_40A258  +
mov edx [eax+8] +
cmp [edx+2Ch] bl +
jnz loc_40A214  +
mov edx [eax] +
mov [edx+2Ch] bl +
push eax  +
mov byte ptr [eax+2Ch] 0 +
call sub_421BB0  +
mov eax [esi+8] +
mov ecx [ebp+var_4] +
mov dl [esi+2Ch] +
mov [eax+2Ch] dl +
mov [esi+2Ch] bl +
mov eax [eax+8] +
push esi  +
mov [eax+2Ch] bl +
call sub_409AF0  +
jmp loc_40A29F  +
cmp byte ptr [eax+2Ch] 0 +
jnz loc_40A243  +
mov [eax+2Ch] bl +
push esi  +
mov byte ptr [esi+2Ch] 0 +
call sub_421BB0  +
mov eax [esi] +
mov ecx [ebp+var_4] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_40A25C  +
mov edx [eax+8] +
cmp [edx+2Ch] bl +
jnz loc_40A26F  +
mov edx [eax] +
cmp [edx+2Ch] bl +
jnz loc_40A26F  +
mov byte ptr [eax+2Ch] 0 +
mov eax [ecx+4] +
mov edi esi +
mov esi [esi+4] +
cmp edi [eax+4] +
jnz loc_40A1B7  +
jmp loc_40A29F  +
mov edx [eax] +
cmp [edx+2Ch] bl +
jnz loc_40A28B  +
mov edx [eax+8] +
mov [edx+2Ch] bl +
push eax  +
mov byte ptr [eax+2Ch] 0 +
call sub_409AF0  +
mov eax [esi] +
mov ecx [ebp+var_4] +
mov dl [esi+2Ch] +
mov [eax+2Ch] dl +
mov [esi+2Ch] bl +
mov eax [eax] +
push esi  +
mov [eax+2Ch] bl +
call sub_421BB0  +
mov eax [ebp+var_8] +
mov [edi+2Ch] bl +
cmp dword ptr [eax+20h] 10h +
pop edi  +
pop esi  +
pop ebx  +
jb loc_40A2BA  +
mov ecx [eax+0Ch] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_8] +
mov dword ptr [eax+20h] 0Fh +
mov dword ptr [eax+1Ch] 0 +
push eax  +
mov byte ptr [eax+0Ch] 0 +
call sub_42520B  +
mov ecx [ebp+var_4] +
mov eax [ecx+8] +
add esp 4 +
test eax eax +
jz loc_40A2E6  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+2Dh] 0 +
push edi  +
mov ebx ecx +
mov edi esi +
jnz loc_40A355  +
mov eax [edi+8] +
push eax  +
mov ecx ebx +
call sub_40A300  +
cmp dword ptr [esi+20h] 10h +
mov edi [edi] +
jb loc_40A332  +
mov ecx [esi+0Ch] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+20h] 0Fh +
mov dword ptr [esi+1Ch] 0 +
push esi  +
mov byte ptr [esi+0Ch] 0 +
call sub_42520B  +
add esp 4 +
cmp byte ptr [edi+2Dh] 0 +
mov esi edi +
jz loc_40A313  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_40A38A  +
mov ecx [ebp+var_4] +
push ecx  +
mov ecx [esi+4] +
lea edx [esi+0Ch] +
push edx  +
push ecx  +
push eax  +
call sub_40A040  +
mov edx [esi] +
push edx  +
call sub_42520B  +
add esp 14h +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_40A3FC  +
cmp edx eax +
jnz loc_40A3FC  +
mov eax [eax+4] +
push eax  +
mov ecx esi +
call sub_40A300  +
mov eax [esi+4] +
mov [eax+4] eax +
mov eax [esi+4] +
mov [eax] eax +
mov eax [esi+4] +
mov [eax+8] eax +
mov ecx [esi+4] +
mov eax [ebp+arg_0] +
mov dword ptr [esi+8] 0 +
mov edx [ecx] +
mov [eax] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp ecx edx +
jz loc_40A462  +
cmp byte ptr [ecx+2Dh] 0 +
mov edx ecx +
jnz loc_40A44E  +
mov eax [ecx+8] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_40A42F  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_40A42A  +
jmp loc_40A420  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+2Dh] 0 +
jz loc_40A420  +
mov [ebp+arg_4] ecx +
jmp loc_40A44E  +
mov eax [ecx+4] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_40A44B  +
cmp ecx [eax+8] +
jnz loc_40A44B  +
mov ecx eax +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
cmp byte ptr [eax+2Dh] 0 +
jz loc_40A438  +
mov [ebp+arg_4] eax +
push edx  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_40A080  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_40A400  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43DB07  +
mov eax large fs:0 +
push eax  +
sub esp 274h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_4] +
call sub_409860  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset a2_0_0_102_0  +
push offset aSilentActivato  +
push eax  +
push 4  +
push offset aAdobeSilentAct  +
push ecx  +
call sub_41D8D0  +
add esp 18h +
cmp [ebp+arg_0] 2 +
jz loc_40A4F8  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aSaNotLaunchedW  +
push edx  +
push 4  +
push offset aAdobeSilentAct  +
push eax  +
call sub_41D8D0  +
add esp 14h +
jmp loc_40A97C  +
xor ebx ebx +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_26C] +
mov [ebp+var_258] 0Fh +
mov [ebp+var_25C] ebx +
mov byte ptr [ebp+var_26C] bl +
call sub_402230  +
mov ecx [esi+4] +
mov edi 7 +
xor edx edx +
mov eax ecx +
mov [ebp+var_4] ebx +
mov [ebp+var_220] edi +
mov [ebp+cchWideChar] ebx +
mov word ptr [ebp+var_234] dx +
lea esi [eax+2] +
mov dx [eax] +
add eax 2 +
cmp dx bx +
jnz loc_40A546  +
sub eax esi +
sar eax 1 +
push eax  +
push ecx  +
lea ecx [ebp+var_234] +
call sub_401F20  +
push 10h  +
push ebx  +
push offset aAmtlibxmlfile  +
lea ecx [ebp+var_234] +
mov byte ptr [ebp+var_4] 1 +
call sub_409A30  +
cmp eax 0FFFFFFFFh +
jz loc_40A916  +
push 0FFFFFFFFh  +
add eax 10h +
push eax  +
lea eax [ebp+MultiByteStr] +
push eax  +
lea ecx [ebp+var_234] +
call sub_409D20  +
push eax  +
lea ecx [ebp+var_234] +
mov byte ptr [ebp+var_4] 2 +
call sub_409D60  +
mov edi 8 +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_23C] edi +
jb loc_40A5CA  +
mov ecx dword ptr [ebp+MultiByteStr] +
push ecx  +
call sub_42520B  +
add esp 4 +
push offset Name  +
push 1  +
push ebx  +
call ds:CreateMutexW  +
mov esi eax +
call ds:GetLastError  +
cmp esi ebx +
jz loc_40A818  +
cmp eax ebx +
jnz loc_40A818  +
call sub_409FA0  +
mov eax [ebp+var_234] +
cmp [ebp+var_220] edi +
jnb loc_40A609  +
lea eax [ebp+var_234] +
push eax  +
call sub_40A010  +
call sub_4141C0  +
call sub_409CF0  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aCheckingForOth  +
push edx  +
push 4  +
push offset aAdobeSilentAct  +
push eax  +
call sub_41D8D0  +
mov [ebp+var_27C] ebx +
mov [ebp+var_278] ebx +
mov [ebp+var_274] ebx +
lea ecx [ebp+var_27C] +
push ecx  +
mov byte ptr [ebp+var_4] 3 +
call sub_40F350  +
mov eax [ebp+var_27C] +
add esp 1Ch +
cmp eax [ebp+var_278] +
jz loc_40A7E3  +
mov esi ds:MultiByteToWideChar +
mov edi eax +
push 0FFFFFFFFh  +
push ebx  +
push edi  +
lea ecx [ebp+MultiByteStr] +
mov [ebp+var_23C] 0Fh +
mov [ebp+cchMultiByte] ebx +
mov [ebp+MultiByteStr] bl +
call sub_402110  +
push 206h  +
lea eax [ebp-216h] +
xor edx edx +
push ebx  +
push eax  +
mov byte ptr [ebp+var_4] 4 +
mov [ebp+WideCharStr] dx +
call sub_426210  +
mov eax dword ptr [ebp+MultiByteStr] +
add esp 0Ch +
cmp [ebp+var_23C] 10h +
jnb loc_40A6D2  +
lea eax [ebp+MultiByteStr] +
mov edx [ebp+cchMultiByte] +
push 104h  +
lea ecx [ebp+WideCharStr] +
push ecx  +
push edx  +
push eax  +
push ebx  +
push 0FDE9h  +
call esi  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aPerformingWork  +
push eax  +
push 4  +
push offset aAdobeSilentAct  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
call sub_409FA0  +
lea eax [ebp+WideCharStr] +
lea edx [eax+2] +
lea ecx [ecx+0] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_40A720  +
sub eax edx +
sar eax 1 +
push eax  +
lea edx [ebp+WideCharStr] +
push edx  +
mov ecx offset dword_44FB14 +
call sub_401F20  +
call sub_4141C0  +
call sub_409CF0  +
cmp [ebp+var_23C] 10h +
mov byte ptr [ebp+var_4] 3 +
jb loc_40A767  +
mov eax dword ptr [ebp+MultiByteStr] +
push eax  +
call sub_42520B  +
add esp 4 +
add edi 1Ch +
cmp edi [ebp+var_278] +
jnz loc_40A676  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aRemovingThePro  +
push ecx  +
push 4  +
push offset aAdobeSilentAct  +
push edx  +
call sub_41D8D0  +
lea eax [ebp+var_27C] +
push eax  +
call sub_40F010  +
add esp 18h +
test eax eax +
jnz loc_40A7CA  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aFailedToRemove  +
push ecx  +
push 1  +
push offset aAdobeSilentAct  +
push edx  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_27C] +
mov edi 8 +
mov byte ptr [ebp+var_4] 1 +
call sub_40A360  +
jmp loc_40A8AE  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aNoCachedJobsFo  +
push eax  +
push 4  +
push offset aAdobeSilentAct  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_27C] +
mov byte ptr [ebp+var_4] 1 +
call sub_40A360  +
jmp loc_40A8AE  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aAddingSaJobToT  +
push edx  +
push 4  +
push offset aAdobeSilentAct  +
push eax  +
call sub_41D8D0  +
push 103h  +
lea ecx [ebp+var_114+1] +
push ebx  +
push ecx  +
mov byte ptr [ebp+var_114] bl +
call sub_426210  +
mov eax [ebp+var_234] +
add esp 20h +
cmp [ebp+var_220] edi +
jnb loc_40A865  +
lea eax [ebp+var_234] +
mov ecx [ebp+cchWideChar] +
push ebx  +
push ebx  +
push 104h  +
lea edx [ebp+var_114] +
push edx  +
push ecx  +
push eax  +
push ebx  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
cmp byte ptr [ebp+var_114] bl +
jz loc_40A8AE  +
sub esp 1Ch +
lea edx [ebp+var_114] +
mov ecx esp +
mov [ebp+var_280] esp +
push edx  +
call sub_4023B0  +
call sub_40F720  +
add esp 1Ch +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aSilentActiva_0  +
push eax  +
push 4  +
push offset aAdobeSilentAct  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
call sub_409600  +
cmp [ebp+var_220] edi +
jb loc_40A8EB  +
mov edx [ebp+var_234] +
push edx  +
call sub_42520B  +
add esp 4 +
xor eax eax +
cmp [ebp+var_258] 10h +
mov [ebp+var_220] 7 +
mov [ebp+cchWideChar] ebx +
mov word ptr [ebp+var_234] ax +
jb loc_40A97C  +
mov ecx [ebp+var_26C] +
push ecx  +
jmp loc_40A974  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aSaNotLaunchedW  +
push edx  +
push 4  +
push offset aAdobeSilentAct  +
push eax  +
call sub_41D8D0  +
add esp 14h +
cmp [ebp+var_220] 8 +
jb loc_40A94F  +
mov ecx [ebp+var_234] +
push ecx  +
call sub_42520B  +
add esp 4 +
xor edx edx +
cmp [ebp+var_258] 10h +
mov [ebp+var_220] edi +
mov [ebp+cchWideChar] ebx +
mov word ptr [ebp+var_234] dx +
jb loc_40A97C  +
mov eax [ebp+var_26C] +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
retn   +
***
push ecx  +
mov eax [ecx+38h] +
push esi  +
mov esi [eax] +
push edi  +
mov edi [ebp+arg_0] +
push 0  +
lea ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov [edi] esi +
call sub_424920  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jnb loc_40A9FD  +
inc eax  +
mov [esi+4] eax +
lea ecx [ebp+arg_0] +
call sub_424948  +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx+10h] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp eax edi +
jnb loc_40AA2A  +
push offset aInvalidStringP  +
call sub_4246D5  +
mov esi [ebp+arg_4] +
sub eax edi +
cmp eax esi +
jnb loc_40AA35  +
mov esi eax +
mov ebx [ebp+arg_C] +
mov edx esi +
cmp esi ebx +
jb loc_40AA40  +
mov edx ebx +
cmp dword ptr [ecx+14h] 10h +
jb loc_40AA4A  +
mov eax [ecx] +
jmp loc_40AA4C  +
mov eax ecx +
mov ecx [ebp+arg_8] +
push edx  +
push ecx  +
add eax edi +
push eax  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_40AA75  +
cmp esi ebx +
jnb loc_40AA6E  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 10h  +
xor eax eax +
cmp esi ebx +
setnz al  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edx [ecx+10h] +
lea eax [ecx+48h] +
cmp [edx] eax +
jnz locret_40AAA0  +
mov eax [ecx+40h] +
push esi  +
mov esi [ecx+3Ch] +
mov [edx] esi +
mov edx [ecx+20h] +
mov [edx] eax +
mov ecx [ecx+30h] +
sub eax eax +
mov [ecx] eax +
pop esi  +
retn   +
***
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_18] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
mov [edx] eax +
mov eax 3 +
pop ebp  +
retn 1Ch  +
***
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax 3 +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_8] +
sub eax [ebp+arg_4] +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_40AB02  +
mov eax ecx +
pop ebp  +
retn 10h  +
***
cmp [ebp+arg_4] 1 +
lea edx [ecx+8] +
mov [ecx+10h] edx +
lea edx [ecx+18h] +
mov [ecx+20h] edx +
lea edx [ecx+1Ch] +
mov [ecx+24h] edx +
setz al  +
mov [ecx+50h] al +
lea edx [ecx+28h] +
mov [ecx+30h] edx +
mov byte ptr [ecx+49h] 0 +
lea eax [ecx+0Ch] +
mov [ecx+14h] eax +
lea edx [ecx+2Ch] +
mov [ecx+34h] edx +
mov dword ptr [eax] 0 +
mov eax [ecx+24h] +
mov dword ptr [eax] 0 +
mov edx [ecx+34h] +
mov dword ptr [edx] 0 +
mov eax [ecx+10h] +
mov dword ptr [eax] 0 +
mov edx [ecx+20h] +
mov dword ptr [edx] 0 +
mov eax [ecx+30h] +
mov dword ptr [eax] 0 +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_40AB97  +
lea edx [eax+8] +
mov [ecx+10h] edx +
mov [ecx+14h] edx +
lea edx [eax+4] +
mov [ecx+20h] eax +
mov [ecx+24h] eax +
mov [ecx+30h] edx +
mov [ecx+34h] edx +
mov [ecx+54h] eax +
mov edx dword_451A88 +
mov [ecx+4Ch] edx +
mov dword ptr [ecx+44h] 0 +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43DB9B  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax eax +
jz loc_40AC48  +
cmp [eax] ebx +
jnz loc_40AC48  +
push 8  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_40AC2D  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_40AC0D  +
mov eax ecx +
jmp loc_40AC10  +
add eax 1Ch +
push eax  +
lea ecx [ebp+var_34] +
call sub_405CD0  +
mov ebx 1 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_442798 +
jmp loc_40AC2F  +
xor esi esi +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ecx] esi +
test bl 1 +
jz loc_40AC48  +
lea ecx [ebp+var_34] +
call sub_405D80  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
cmp dword ptr [eax+14h] 10h +
mov ecx [eax+10h] +
jb loc_40AC71  +
mov eax [eax] +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
mov eax [ecx+10h] +
push eax  +
push 0  +
call sub_40AA10  +
xor ecx ecx +
test eax eax +
sets al  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
movsx ecx [ebp+arg_0] +
push eax  +
push ecx  +
call sub_426800  +
xor edx edx +
add esp 8 +
cmp eax 0FFFFFFFFh +
setnz al  +
pop ebp  +
retn   +
***
mov eax [ecx+54h] +
test eax eax +
jz locret_40ACBE  +
push eax  +
call sub_426B1F  +
pop ecx  +
retn   +
***
mov eax [ecx+54h] +
test eax eax +
jz locret_40ACCE  +
push eax  +
call sub_426B92  +
pop ecx  +
retn   +
***
cmp dword ptr [esi+54h] 0 +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_40AD1E  +
mov edx [esi+30h] +
mov edx [edx] +
mov eax ecx +
add edx eax +
cmp eax edx +
jnb loc_40AD1E  +
movzx eax byte ptr [ecx] +
pop esi  +
retn   +
mov eax [esi] +
mov edx [eax+1Ch] +
push edi  +
mov ecx esi +
call edx  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_40AD34  +
pop edi  +
or eax eax +
pop esi  +
retn   +
mov eax [esi] +
mov edx [eax+10h] +
push edi  +
mov ecx esi +
call edx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edx [ecx+10h] +
push esi  +
mov esi [edx] +
lea eax [ecx+48h] +
cmp esi eax +
jz loc_40AD6F  +
mov [ecx+3Ch] esi +
mov esi [ecx+30h] +
mov esi [esi] +
push edi  +
mov edi [ecx+20h] +
add esi [edi] +
pop edi  +
mov [ecx+40h] esi +
mov [edx] eax +
mov edx [ecx+20h] +
mov [edx] eax +
mov edx ecx +
sub edx eax +
mov eax [ecx+30h] +
add edx 49h +
mov [eax] edx +
pop esi  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+20h] +
mov eax [eax] +
test eax eax +
jz loc_40ADD0  +
mov ecx [esi+10h] +
cmp [ecx] eax +
jnb loc_40ADD0  +
cmp ebx 0FFFFFFFFh +
jz loc_40ADB7  +
movzx edx byte ptr [eax-1] +
cmp edx ebx +
jnz loc_40ADD0  +
mov eax [esi+30h] +
inc dword ptr [eax]  +
mov esi [esi+20h] +
dec dword ptr [esi]  +
lea eax [ebx+1] +
neg eax  +
sbb eax eax +
pop esi  +
and eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
mov eax [esi+54h] +
test eax eax +
jz loc_40AE0F  +
cmp ebx 0FFFFFFFFh +
jz loc_40AE0F  +
cmp dword ptr [esi+44h] 0 +
jnz loc_40ADF4  +
push eax  +
movzx eax bl +
push eax  +
call sub_4269DF  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_40AE07  +
mov ecx [esi+20h] +
lea eax [esi+48h] +
cmp [ecx] eax +
jz loc_40AE0F  +
mov ecx esi +
mov [eax] bl +
call sub_40AD50  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
mov ecx [edi+54h] +
test ecx ecx +
jz loc_40AE6D  +
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
test edx edx +
jnz loc_40AE46  +
mov eax esi +
or eax [ebp+arg_8] +
jnz loc_40AE46  +
mov eax 4 +
jmp loc_40AE48  +
xor eax eax +
push esi  +
push eax  +
push edx  +
push ecx  +
call sub_426DE3  +
add esp 10h +
pop esi  +
test eax eax +
jnz loc_40AE6D  +
mov ecx [edi+54h] +
push 1  +
push ecx  +
mov ecx edi +
call sub_40AB10  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43D688  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_424920  +
cmp dword_451A94 0 +
mov ebx dword_451A8C +
mov [ebp+var_4] 0 +
mov [ebp+var_10] ebx +
jnz loc_40AEF6  +
push 0  +
lea ecx [ebp+var_14] +
call sub_424920  +
cmp dword_451A94 0 +
jnz loc_40AEEE  +
mov eax dword_454BC8 +
inc eax  +
mov dword_454BC8 eax +
mov dword_451A94 eax +
lea ecx [ebp+var_14] +
call sub_424948  +
mov edi [ebp+arg_0] +
mov esi dword_451A94 +
mov eax [edi] +
cmp esi [eax+0Ch] +
jnb loc_40AF28  +
mov ecx [eax+8] +
mov ecx [ecx+esi*4] +
test ecx ecx +
jnz loc_40AF2C  +
cmp byte ptr [eax+14h] 0 +
jz loc_40AF2C  +
call sub_4249EB  +
cmp esi [eax+0Ch] +
jnb loc_40AF32  +
mov edx [eax+8] +
mov esi [edx+esi*4] +
jmp loc_40AF2E  +
xor ecx ecx +
jmp loc_40AF10  +
mov esi ecx +
test esi esi +
jnz loc_40AF97  +
test ebx ebx +
jz loc_40AF3A  +
mov esi ebx +
jmp loc_40AF97  +
lea eax [ebp+var_10] +
push edi  +
push eax  +
call sub_40ABB0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_40AF67  +
push offset aBadCast  +
lea ecx [ebp+var_24] +
call sub_42533C  +
push offset unk_44B6DC  +
lea ecx [ebp+var_24] +
push ecx  +
call sub_425C90  +
mov esi [ebp+var_10] +
push 0  +
lea ecx [ebp+arg_0] +
mov dword_451A8C esi +
call sub_424920  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jnb loc_40AF86  +
inc eax  +
mov [esi+4] eax +
lea ecx [ebp+arg_0] +
call sub_424948  +
push esi  +
call sub_424974  +
add esp 4 +
lea ecx [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_424948  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push eax  +
mov edi ecx +
call sub_40AE80  +
mov esi eax +
mov edx [esi] +
mov eax [edx+4] +
add esp 4 +
mov ecx esi +
call eax  +
test al al +
jz loc_40AFEF  +
mov dword ptr [edi+44h] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx edi +
mov [edi+44h] esi +
call sub_404D80  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43DBC8  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+54h] 0 +
jnz loc_40B0C7  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push eax  +
push ecx  +
push edx  +
call sub_4250DD  +
add esp 0Ch +
test eax eax +
jz loc_40B0C7  +
push 1  +
push eax  +
mov ecx esi +
call sub_40AB10  +
lea eax [ebp+arg_8] +
push eax  +
mov ecx esi +
call sub_40A9D0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_40AE80  +
mov edi eax +
mov edx [edi] +
mov eax [edx+4] +
add esp 4 +
mov ecx edi +
call eax  +
test al al +
jz loc_40B0A0  +
lea ecx [ebp+arg_8] +
mov dword ptr [esi+44h] 0 +
call sub_404AF0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx esi +
mov [esi+44h] edi +
call sub_404D80  +
lea ecx [ebp+arg_8] +
call sub_404AF0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43DBF8  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi+20h] +
mov eax [eax] +
xor edx edx +
cmp eax edx +
jz loc_40B13F  +
mov ecx [esi+20h] +
mov eax [ecx] +
mov ecx [esi+30h] +
mov ecx [ecx] +
add ecx eax +
cmp eax ecx +
jnb loc_40B13F  +
mov eax [esi+30h] +
dec dword ptr [eax]  +
mov esi [esi+20h] +
mov eax [esi] +
lea edx [eax+1] +
mov [esi] edx +
movzx eax byte ptr [eax] +
jmp loc_40B272  +
cmp [esi+54h] edx +
jz loc_40B26F  +
mov ecx [esi+10h] +
lea edi [esi+48h] +
cmp [ecx] edi +
jnz loc_40B166  +
mov eax [esi+40h] +
mov edi [esi+3Ch] +
mov [ecx] edi +
mov ecx [esi+20h] +
mov [ecx] eax +
mov ecx [esi+30h] +
sub eax eax +
mov [ecx] eax +
cmp [esi+44h] edx +
jnz loc_40B188  +
mov esi [esi+54h] +
push esi  +
call sub_42670C  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_40B26F  +
movzx eax al +
jmp loc_40B272  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] edx +
mov byte ptr [ebp+var_2D+1] dl +
mov [ebp+var_4] edx +
mov edx [esi+54h] +
push edx  +
call sub_42670C  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_40B267  +
push eax  +
push 1  +
lea ecx [ebp+var_2D+1] +
call sub_403CC0  +
mov ecx [ebp+var_18] +
mov eax [ebp+var_2D+1] +
mov edx eax +
cmp ecx 10h +
jnb loc_40B1CA  +
lea edx [ebp+var_2D+1] +
mov eax edx +
add edx [ebp+var_1C] +
mov ecx [esi+44h] +
mov edi [ecx] +
lea ebx [ebp+var_38] +
push ebx  +
lea ebx [ebp+var_2D+1] +
push ebx  +
lea ebx [ebp-2Dh] +
push ebx  +
lea ebx [ebp+var_34] +
push ebx  +
push edx  +
push eax  +
lea eax [esi+4Ch] +
push eax  +
mov eax [edi+10h] +
call eax  +
test eax eax +
js loc_40B267  +
cmp eax 1 +
jle loc_40B22E  +
cmp eax 3 +
jnz loc_40B267  +
cmp [ebp+var_1C] 1 +
jb loc_40B252  +
cmp [ebp+var_18] 10h +
mov eax [ebp+var_2D+1] +
jnb loc_40B20D  +
lea eax [ebp+var_2D+1] +
push 1  +
push eax  +
lea ecx [ebp-2Dh] +
push 1  +
push ecx  +
call sub_426ED9  +
movzx esi byte ptr [ebp+var_2D] +
add esp 10h +
lea ecx [ebp+var_2D+1] +
call sub_421E10  +
mov eax esi +
jmp loc_40B272  +
lea ecx [ebp+var_2D] +
cmp [ebp+var_38] ecx +
jnz loc_40B28E  +
cmp [ebp+var_18] 10h +
mov eax [ebp+var_2D+1] +
jnb loc_40B242  +
lea eax [ebp+var_2D+1] +
mov edx [ebp+var_34] +
sub edx eax +
push edx  +
push 0  +
lea ecx [ebp+var_2D+1] +
call sub_401290  +
mov eax [esi+54h] +
push eax  +
call sub_42670C  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jnz loc_40B1AD  +
lea ecx [ebp+var_2D+1] +
call sub_421E10  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+var_18] 10h +
mov edi [ebp+var_2D+1] +
jnb loc_40B29A  +
lea edi [ebp+var_2D+1] +
sub edi [ebp+var_34] +
add edi [ebp+var_1C] +
test edi edi +
jle loc_40B2BE  +
mov eax [ebp+var_34] +
mov edx [esi+54h] +
movsx ecx byte ptr [edi+eax-1] +
dec edi  +
push edx  +
push ecx  +
call sub_4269DF  +
add esp 8 +
test edi edi +
jg loc_40B2A4  +
movzx esi byte ptr [ebp+var_2D] +
lea ecx [ebp+var_2D+1] +
call sub_421E10  +
mov eax esi +
jmp loc_40B272  +
***
push 0FFFFFFFFh  +
push offset loc_43DC28  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
xor ebx ebx +
cmp [edi+44h] ebx +
jz loc_40B3F1  +
cmp [edi+49h] bl +
jz loc_40B3F1  +
mov eax [edi] +
mov edx [eax+0Ch] +
push 0FFFFFFFFh  +
call edx  +
cmp eax 0FFFFFFFFh +
jz loc_40B3E5  +
mov ecx 0Fh +
xor eax eax +
mov byte ptr [ebp+var_2C] bl +
mov [ebp+var_18] ecx +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_1C] 8 +
cmp ecx 10h +
jnb loc_40B345  +
lea eax [ebp+var_2C] +
mov [eax+8] bl +
mov [ebp+var_4] ebx +
mov eax [ebp+var_2C] +
mov ebx [ebp+var_18] +
mov edx eax +
cmp ebx 10h +
jnb loc_40B35D  +
lea edx [ebp+var_2C] +
mov eax edx +
add edx [ebp+var_1C] +
mov ecx [edi+44h] +
mov esi [ecx] +
lea ebx [ebp+var_30] +
push ebx  +
push edx  +
push eax  +
lea eax [edi+4Ch] +
push eax  +
mov eax [esi+18h] +
call eax  +
sub eax 0 +
jz loc_40B386  +
dec eax  +
jz loc_40B38A  +
sub eax 2 +
lea ecx [ebp+var_2C] +
jnz loc_40B3E0  +
jmp loc_40B3EC  +
mov byte ptr [edi+49h] 0 +
mov ebx [ebp+var_18] +
mov eax [ebp+var_2C] +
mov ecx eax +
cmp ebx 10h +
jnb loc_40B39A  +
lea ecx [ebp+var_2C] +
mov esi [ebp+var_30] +
sub esi ecx +
jz loc_40B3C3  +
cmp ebx 10h +
jnb loc_40B3A9  +
lea eax [ebp+var_2C] +
mov ecx [edi+54h] +
push ecx  +
push esi  +
push 1  +
push eax  +
call sub_4270A5  +
add esp 10h +
cmp esi eax +
jnz loc_40B3DD  +
mov ebx [ebp+var_18] +
mov eax [ebp+var_2C] +
cmp byte ptr [edi+49h] 0 +
jz loc_40B3E9  +
test esi esi +
jnz loc_40B351  +
push esi  +
push 8  +
lea ecx [ebp+var_2C] +
call sub_403CC0  +
jmp loc_40B34B  +
lea ecx [ebp+var_2C] +
call sub_421E10  +
xor al al +
jmp loc_40B3F3  +
lea ecx [ebp+var_2C] +
call sub_421E10  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
mov [esi+10h] eax +
mov dword ptr [esi+14h] 0Fh +
mov [ebp+var_4] eax +
mov [esi] al +
mov eax [ebp+arg_8] +
push eax  +
push edx  +
push ecx  +
mov ecx esi +
call sub_402110  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43DBF8  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
xor eax eax +
mov esi ecx +
cmp ebx 0FFFFFFFFh +
jz loc_40B61F  +
mov ecx [esi+24h] +
mov edx [ecx] +
cmp edx eax +
jz loc_40B4B4  +
mov ecx [esi+34h] +
mov edi [ecx] +
add edi edx +
cmp edx edi +
jnb loc_40B4B4  +
dec dword ptr [ecx]  +
mov esi [esi+24h] +
mov eax [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
mov [eax] bl +
mov eax ebx +
jmp loc_40B61F  +
cmp [esi+54h] eax +
jz loc_40B61C  +
mov edx [esi+10h] +
lea edi [esi+48h] +
cmp [edx] edi +
jnz loc_40B4DB  +
mov ecx [esi+40h] +
mov edi [esi+3Ch] +
mov [edx] edi +
mov edx [esi+20h] +
mov [edx] ecx +
mov edx [esi+30h] +
sub ecx ecx +
mov [edx] ecx +
cmp [esi+44h] eax +
jnz loc_40B500  +
mov esi [esi+54h] +
movsx eax bl +
push esi  +
push eax  +
call sub_426800  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jz loc_40B61C  +
mov eax ebx +
jmp loc_40B61F  +
mov ecx 0Fh +
mov edx eax +
mov byte ptr [ebp+var_2C] al +
mov byte ptr [ebp+var_30] bl +
mov [ebp+var_18] ecx +
mov [ebp+var_2C] edx +
mov [ebp+var_28] eax +
mov [ebp+var_1C] 8 +
cmp ecx 10h +
jnb loc_40B525  +
lea edx [ebp+var_2C] +
mov [edx+8] al +
mov [ebp+var_4] eax +
mov eax [ebp+var_2C] +
mov ebx [ebp+var_18] +
mov edx eax +
cmp ebx 10h +
jnb loc_40B53D  +
lea edx [ebp+var_2C] +
mov eax edx +
add edx [ebp+var_1C] +
mov ecx [esi+44h] +
mov edi [ecx] +
lea ebx [ebp+var_34] +
push ebx  +
push edx  +
push eax  +
lea edx [ebp+var_38] +
push edx  +
lea eax [ebp-2Fh] +
push eax  +
lea edx [ebp+var_30] +
push edx  +
lea eax [esi+4Ch] +
push eax  +
mov eax [edi+14h] +
call eax  +
test eax eax +
js loc_40B614  +
cmp eax 1 +
jg loc_40B5D0  +
mov ebx [ebp+var_18] +
mov eax [ebp+var_2C] +
mov ecx eax +
cmp ebx 10h +
jnb loc_40B57D  +
lea ecx [ebp+var_2C] +
mov edi [ebp+var_34] +
sub edi ecx +
jz loc_40B5A6  +
cmp ebx 10h +
jnb loc_40B58C  +
lea eax [ebp+var_2C] +
mov ecx [esi+54h] +
push ecx  +
push edi  +
push 1  +
push eax  +
call sub_4270A5  +
add esp 10h +
cmp edi eax +
jnz loc_40B614  +
mov ebx [ebp+var_18] +
mov eax [ebp+var_2C] +
lea edx [ebp+var_30] +
mov byte ptr [esi+49h] 1 +
cmp [ebp+var_38] edx +
jnz loc_40B607  +
test edi edi +
jnz loc_40B531  +
cmp [ebp+var_1C] 20h +
lea ecx [ebp+var_2C] +
jnb loc_40B617  +
push edi  +
push 8  +
call sub_403CC0  +
jmp loc_40B52B  +
cmp eax 3 +
jnz loc_40B614  +
mov eax [esi+54h] +
mov ecx [ebp+var_30] +
push eax  +
push ecx  +
call sub_40AC90  +
add esp 8 +
test al al +
jz loc_40B5F8  +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_2C] +
call sub_421E10  +
mov eax esi +
jmp loc_40B61F  +
lea ecx [ebp+var_2C] +
or esi 0FFFFFFFFh +
call sub_421E10  +
mov eax esi +
jmp loc_40B61F  +
lea ecx [ebp+var_2C] +
call sub_421E10  +
mov eax [ebp+arg_0] +
jmp loc_40B61F  +
lea ecx [ebp+var_2C] +
call sub_421E10  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+20h] +
lea eax [esi+48h] +
push edi  +
cmp [ecx] eax +
jnz loc_40B66C  +
cmp [ebp+arg_C] 1 +
jnz loc_40B66C  +
cmp dword ptr [esi+44h] 0 +
jnz loc_40B66C  +
mov ebx [ebp+arg_4] +
mov edi [ebp+arg_8] +
add ebx 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
jmp loc_40B672  +
mov edi [ebp+arg_8] +
mov ebx [ebp+arg_4] +
cmp dword ptr [esi+54h] 0 +
jz loc_40B704  +
mov ecx esi +
call sub_40B2D0  +
test al al +
jz loc_40B704  +
mov edx ebx +
or edx edi +
jnz loc_40B693  +
cmp [ebp+arg_C] 1 +
jz loc_40B6A9  +
mov eax [ebp+arg_C] +
mov ecx [esi+54h] +
push eax  +
push edi  +
push ebx  +
push ecx  +
call sub_427216  +
add esp 10h +
test eax eax +
jnz loc_40B704  +
mov eax [esi+54h] +
lea edx [ebp+arg_4] +
push edx  +
push eax  +
call sub_42711F  +
add esp 8 +
test eax eax +
jnz loc_40B704  +
mov ecx [esi+10h] +
lea eax [esi+48h] +
cmp [ecx] eax +
jnz loc_40B6DB  +
mov edx [esi+3Ch] +
mov eax [esi+40h] +
mov [ecx] edx +
mov ecx [esi+20h] +
mov [ecx] eax +
mov edx [esi+30h] +
sub eax eax +
mov [edx] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
pop edi  +
mov [eax+8] ecx +
mov ecx [esi+4Ch] +
pop esi  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+0Ch] edx +
mov [eax+10h] ecx +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
mov ecx ds:dword_446E34 +
mov edx ds:dword_446E30 +
pop edi  +
mov [eax+4] ecx +
xor ecx ecx +
pop esi  +
mov [eax] edx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
pop ebx  +
pop ebp  +
retn 14h  +
***
sub esp 8 +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_10] +
mov [ebp+var_4] ecx +
xor ecx ecx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_8] eax +
cmp [esi+54h] ecx +
jz loc_40B7DF  +
mov ecx esi +
call sub_40B2D0  +
test al al +
jz loc_40B7DD  +
mov eax [esi+54h] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call sub_427295  +
add esp 8 +
test eax eax +
jnz loc_40B7DD  +
mov ecx edi +
or ecx ebx +
jz loc_40B791  +
mov edx [esi+54h] +
push 1  +
push ebx  +
push edi  +
push edx  +
call sub_427216  +
add esp 10h +
test eax eax +
jnz loc_40B7DD  +
mov ecx [esi+54h] +
lea eax [ebp+var_8] +
push eax  +
push ecx  +
call sub_42711F  +
add esp 8 +
test eax eax +
jnz loc_40B7DD  +
mov edx [ebp+arg_14] +
mov ecx esi +
mov [esi+4Ch] edx +
call sub_40AA80  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
mov edx [ebp+var_4] +
pop edi  +
mov [eax+8] ecx +
mov ecx [esi+4Ch] +
pop esi  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+0Ch] edx +
mov [eax+10h] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
xor ecx ecx +
mov eax [ebp+arg_0] +
mov edx ds:dword_446E30 +
pop edi  +
mov [eax] edx +
mov edx ds:dword_446E34 +
pop esi  +
mov [eax+4] edx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
mov esi ecx +
xor ebx ebx +
push edi  +
mov edi esi +
cmp [esi+54h] ebx +
jz loc_40B839  +
call sub_40B2D0  +
test al al +
jnz loc_40B829  +
xor edi edi +
mov eax [esi+54h] +
push eax  +
call sub_42665D  +
add esp 4 +
test eax eax +
jz loc_40B83B  +
xor edi edi +
lea ecx [esi+8] +
mov [esi+10h] ecx +
mov [esi+50h] bl +
mov [esi+49h] bl +
lea edx [esi+18h] +
mov [esi+20h] edx +
lea ecx [esi+1Ch] +
mov [esi+24h] ecx +
lea eax [esi+0Ch] +
mov [esi+14h] eax +
lea edx [esi+28h] +
mov [esi+30h] edx +
lea ecx [esi+2Ch] +
mov [esi+34h] ecx +
mov [eax] ebx +
mov edx [esi+24h] +
mov [edx] ebx +
mov eax [esi+34h] +
mov [eax] ebx +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov edx [esi+20h] +
mov [edx] ebx +
mov eax [esi+30h] +
mov [eax] ebx +
mov [esi+54h] ebx +
mov ecx dword_451A88 +
mov eax edi +
pop edi  +
mov [esi+44h] ebx +
mov [esi+4Ch] ecx +
pop esi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_43DC58  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_4427BC +
cmp dword ptr [esi+54h] 0 +
mov [ebp+var_4] 0 +
jz loc_40B8FA  +
mov ecx [esi+10h] +
lea edx [esi+48h] +
cmp [ecx] edx +
jnz loc_40B8FA  +
mov edx [esi+3Ch] +
mov eax [esi+40h] +
mov [ecx] edx +
mov ecx [esi+20h] +
mov [ecx] eax +
mov edx [esi+30h] +
sub eax eax +
mov [edx] eax +
cmp byte ptr [esi+50h] 0 +
jz loc_40B907  +
mov ecx esi +
call sub_40B810  +
mov ecx esi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_405170  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_43DC58  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_4427BC +
cmp dword ptr [esi+54h] 0 +
mov [ebp+var_4] 0 +
jz loc_40B98A  +
mov ecx [esi+10h] +
lea edx [esi+48h] +
cmp [ecx] edx +
jnz loc_40B98A  +
mov edx [esi+3Ch] +
mov eax [esi+40h] +
mov [ecx] edx +
mov ecx [esi+20h] +
mov [ecx] eax +
mov edx [esi+30h] +
sub eax eax +
mov [edx] eax +
cmp byte ptr [esi+50h] 0 +
jz loc_40B997  +
mov ecx esi +
call sub_40B810  +
mov ecx esi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_405170  +
test [ebp+arg_0] 1 +
jz loc_40B9B4  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43E549  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov esi [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov eax [eax+10h] +
mov ecx [ecx+10h] +
mov edi [esi+10h] +
add eax ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
cmp edi eax +
ja loc_40BA59  +
cmp [esi+14h] eax +
jz loc_40BA59  +
push 1  +
push eax  +
mov ecx esi +
call sub_4017A0  +
test al al +
jz loc_40BA59  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_40BA53  +
mov eax [esi] +
jmp loc_40BA55  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
mov edx [ebp+arg_4] +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov ecx esi +
call sub_401BF0  +
mov eax [ebp+arg_8] +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call sub_401BF0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DCB2  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
xor eax eax +
mov [ebp+var_10] eax +
cmp [ebp+arg_C] eax +
jz loc_40BADE  +
mov dword ptr [edi] offset unk_442814 +
mov dword ptr [edi+68h] offset off_441D98 +
mov [ebp+var_4] eax +
mov [ebp+var_10] 1 +
mov ecx [edi] +
mov edx [ecx+4] +
mov dword ptr [edi+edx] offset off_441D88 +
mov [edi+8] eax +
mov [edi+0Ch] eax +
mov eax [edi] +
mov ebx [eax+4] +
add ebx edi +
mov ecx ebx +
call sub_405060  +
lea esi [edi+10h] +
push 20h  +
mov ecx ebx +
mov [ebx+38h] esi +
mov dword ptr [ebx+3Ch] 0 +
call sub_406F50  +
cmp dword ptr [ebx+38h] 0 +
mov [ebx+40h] al +
jnz loc_40BB30  +
mov eax [ebx+0Ch] +
or eax 4 +
or eax 4 +
push 0  +
push eax  +
mov ecx ebx +
call sub_404F50  +
mov ecx [edi] +
mov edx [ecx+4] +
mov ecx esi +
mov [ebp+var_4] 2 +
mov dword ptr [edi+edx] offset off_442810 +
call sub_4059B0  +
xor ebx ebx +
mov dword ptr [esi] offset off_4427BC +
mov byte ptr [esi+50h] 0 +
mov byte ptr [esi+49h] 0 +
lea eax [esi+8] +
mov [esi+10h] eax +
lea ecx [esi+18h] +
mov [esi+20h] ecx +
lea edx [esi+1Ch] +
mov [esi+24h] edx +
lea eax [esi+0Ch] +
mov [esi+14h] eax +
lea ecx [esi+28h] +
mov [esi+30h] ecx +
lea edx [esi+2Ch] +
mov [esi+34h] edx +
mov [eax] ebx +
mov eax [esi+24h] +
mov [eax] ebx +
mov ecx [esi+34h] +
mov [ecx] ebx +
mov edx [esi+10h] +
mov [edx] ebx +
mov eax [esi+20h] +
mov [eax] ebx +
mov ecx [esi+30h] +
mov [ecx] ebx +
mov [esi+54h] ebx +
mov edx dword_451A88 +
mov [esi+4Ch] edx +
mov [esi+44h] ebx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push eax  +
or ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
call sub_40B000  +
test eax eax +
jnz loc_40BBE3  +
mov eax [edi] +
mov ecx [eax+4] +
mov eax [ecx+edi+0Ch] +
add ecx edi +
or eax 2 +
cmp [ecx+38h] ebx +
jnz loc_40BBDC  +
or eax 4 +
push ebx  +
push eax  +
call sub_404F50  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_43DCE3  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ecx-68h] +
mov edx [eax+4] +
mov dword ptr [edx+ecx-68h] offset off_442810 +
lea esi [ecx-58h] +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
mov dword ptr [esi] offset off_4427BC +
cmp dword ptr [esi+54h] 0 +
mov byte ptr [ebp+var_4] 1 +
jz loc_40BC72  +
mov ecx [esi+10h] +
lea edx [esi+48h] +
cmp [ecx] edx +
jnz loc_40BC72  +
mov edx [esi+3Ch] +
mov eax [esi+40h] +
mov [ecx] edx +
mov ecx [esi+20h] +
mov [ecx] eax +
mov edx [esi+30h] +
sub eax eax +
mov [edx] eax +
cmp byte ptr [esi+50h] 0 +
jz loc_40BC7F  +
mov ecx esi +
call sub_40B810  +
mov ecx esi +
mov byte ptr [ebp+var_4] 0 +
call sub_405170  +
mov eax [esi-10h] +
mov ecx [eax+4] +
mov dword ptr [ecx+esi-10h] offset off_441D88 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DD29  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_0] +
mov ebx ecx +
push eax  +
lea eax [ebx+14h] +
push eax  +
lea ecx [ebp+var_2C] +
xor esi esi +
push ecx  +
mov [ebp+var_4] esi +
mov [ebp+var_3C] edi +
mov [ebp+var_38] esi +
call sub_40B9D0  +
add esp 0Ch +
cmp [ebp+var_18] 10h +
mov eax [ebp+var_2C] +
mov [ebp+var_4] 1 +
jnb loc_40BD12  +
lea eax [ebp+var_2C] +
push 0  +
push eax  +
lea edx [ebp+var_30] +
push edx  +
mov ecx ebx +
call sub_4146D0  +
lea ecx [ebp+var_30] +
mov byte ptr [ebp+var_4] 2 +
call sub_414650  +
test al al +
jnz loc_40BD77  +
lea ecx [ebp+var_30] +
call sub_414660  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_30] +
mov [ebp+var_34] 1 +
call sub_414670  +
mov ebx eax +
lea eax [ebx+1] +
push eax  +
call sub_425006  +
mov esi eax +
lea eax [ebx+1] +
push eax  +
push 0  +
push esi  +
call sub_426210  +
add esp 10h +
lea ecx [ebp+var_34] +
push ecx  +
push 0  +
push ebx  +
push esi  +
lea ecx [ebp+var_30] +
call sub_414680  +
push 13h  +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
push offset aMissingLocKey  +
mov ecx edi +
mov byte ptr [edi] 0 +
call sub_402010  +
mov [ebp+var_38] 1 +
test esi esi +
jz loc_40BDC1  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40BDA6  +
sub eax edx +
push eax  +
push esi  +
mov ecx edi +
call sub_402010  +
push esi  +
call sub_425D5C  +
add esp 4 +
lea ecx [ebp+var_30] +
mov byte ptr [ebp+var_4] 1 +
call sub_4146B0  +
cmp [ebp+var_18] 10h +
jb loc_40BDDF  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push edi  +
lea edi [ecx-68h] +
lea esi [edi+68h] +
mov ecx esi +
call sub_40BC00  +
push esi  +
mov dword ptr [esi] offset off_441D78 +
call sub_424E73  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40BE30  +
push edi  +
call sub_42520B  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43DD76  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [esi+30h] +
mov [ebp+var_4] 2 +
test eax eax +
jz loc_40BE89  +
mov ecx [eax] +
mov ecx [ecx+4] +
add ecx eax +
mov eax [ecx] +
mov edx [eax] +
push 1  +
call edx  +
cmp dword ptr [esi+28h] 10h +
jb loc_40BE9B  +
mov eax [esi+14h] +
push eax  +
call sub_42520B  +
add esp 4 +
lea edi [esi+4] +
mov dword ptr [esi+28h] 0Fh +
mov dword ptr [esi+24h] 0 +
mov byte ptr [esi+14h] 0 +
mov [ebp+var_14] edi +
mov eax [edi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_18] +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 3 +
call sub_402A20  +
mov edi [edi+4] +
push edi  +
call sub_42520B  +
add esp 4 +
mov ecx esi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_414690  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43DDD1  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebp+8] +
mov ebx [ebp+0Ch] +
mov esi ecx +
push 1  +
mov [ebp-40h] esi +
call sub_4145C0  +
xor eax eax +
push 48h  +
mov [ebp-4] eax +
mov [esi+0Ch] eax +
call sub_425CDC  +
xor edx edx +
add esp 4 +
cmp eax edx +
jz loc_40C108  +
mov [esi+8] eax +
mov [eax] eax +
mov eax [esi+8] +
mov [eax+4] eax +
mov eax [esi+8] +
mov [eax+8] eax +
mov eax [esi+8] +
mov byte ptr [eax+44h] 1 +
mov ecx [esi+8] +
mov byte ptr [ecx+45h] 1 +
push 0FFFFFFFFh  +
lea ecx [esi+14h] +
push edx  +
mov dword ptr [ecx+14h] 0Fh +
mov [ecx+10h] edx +
push ebx  +
mov byte ptr [ebp-4] 1 +
mov [ecx] dl +
call sub_402110  +
xor eax eax +
xor edx edx +
mov [esi+30h] eax +
mov dword ptr [ebp-18h] 7 +
mov [ebp-1Ch] eax +
mov [ebp-2Ch] dx +
cmp dword ptr [edi+14h] 10h +
mov byte ptr [ebp-4] 3 +
jb loc_40BFB7  +
mov eax [edi] +
jmp loc_40BFB9  +
mov eax edi +
push eax  +
call sub_41A220  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_40BFE9  +
lea edx [eax+2] +
jmp loc_40BFD0  +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40BFD0  +
sub eax edx +
sar eax 1 +
push eax  +
push ebx  +
lea ecx [ebp-2Ch] +
call sub_401F20  +
push ebx  +
call sub_425BC2  +
add esp 4 +
cmp dword ptr [edi+14h] 10h +
jb loc_40BFFA  +
mov edi [edi] +
push edi  +
call sub_41A570  +
add esp 4 +
test eax eax +
jnz loc_40C02F  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-30h] offset aOobelauncherlo +
call sub_4252D5  +
push offset unk_44BE04  +
lea ecx [ebp-3Ch] +
push ecx  +
mov dword ptr [ebp-3Ch] offset off_44278C +
call sub_425C90  +
push 0B0h  +
call sub_425CDC  +
add esp 4 +
mov [ebp-30h] eax +
mov byte ptr [ebp-4] 4 +
mov edi 8 +
test eax eax +
jz loc_40C067  +
mov ecx [ebp-2Ch] +
cmp [ebp-18h] edi +
jnb loc_40C057  +
lea ecx [ebp-2Ch] +
push 1  +
push 40h  +
push 21h  +
push ecx  +
mov ecx eax +
call sub_40BA90  +
jmp loc_40C069  +
xor eax eax +
mov byte ptr [ebp-4] 3 +
mov [esi+30h] eax +
test eax eax +
jnz loc_40C09C  +
lea edx [ebp-30h] +
push edx  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-30h] offset aOobelauncher_0 +
call sub_4252D5  +
push offset unk_44BE04  +
lea eax [ebp-3Ch] +
push eax  +
mov dword ptr [ebp-3Ch] offset off_44278C +
call sub_425C90  +
push eax  +
mov ecx esi +
call sub_414630  +
mov ecx esi +
call sub_414640  +
test al al +
jnz loc_40C0D7  +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-30h] offset aOobelauncher_1 +
call sub_4252D5  +
push offset unk_44BE04  +
lea edx [ebp-3Ch] +
push edx  +
mov dword ptr [ebp-3Ch] offset off_44278C +
call sub_425C90  +
cmp [ebp-18h] edi +
jb loc_40C0E8  +
mov eax [ebp-2Ch] +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-3Ch] +
mov [ebp-30h] edx +
call sub_4252D5  +
push offset unk_44B0F0  +
lea edx [ebp-3Ch] +
push edx  +
mov dword ptr [ebp-3Ch] offset off_4419DC +
call sub_425C90  +
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_4253BC  +
mov dword ptr [esi] offset off_442780 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_4253BC  +
mov dword ptr [esi] offset off_44278C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov dword_451A98 eax +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
test esi esi +
jz loc_40C1FF  +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
push esi  +
push offset aWindowsErrorLd  +
push eax  +
push 4  +
push offset aRengainterface  +
push ecx  +
call sub_41D8D0  +
lea edx [esi-2EE1h] +
add esp 18h +
cmp edx 0B8h +
ja loc_40C1F2  +
sub esi 2EE5h +
jz loc_40C1EA  +
sub esi 2 +
jz loc_40C1E2  +
sub esi 0A8h +
jz loc_40C1DA  +
mov eax 0D0A3h +
pop esi  +
pop ebp  +
retn   +
mov eax 0D0B3h +
pop esi  +
pop ebp  +
retn   +
mov eax 0D0B2h +
pop esi  +
pop ebp  +
retn   +
mov eax 0D0B1h +
pop esi  +
pop ebp  +
retn   +
xor eax eax +
cmp esi 8 +
setz al  +
add eax 0D0A1h +
pop esi  +
pop ebp  +
retn   +
***
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_40C220  +
mov ecx [ecx+8] +
mov [eax] ecx +
retn   +
mov edx [ecx] +
cmp byte ptr [edx+2Dh] 0 +
jnz loc_40C23F  +
mov ecx [edx+8] +
cmp byte ptr [ecx+2Dh] 0 +
jnz loc_40C261  +
mov edx ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_40C231  +
mov [eax] edx +
retn   +
mov edx [ecx+4] +
cmp byte ptr [edx+2Dh] 0 +
jnz loc_40C259  +
mov ecx [eax] +
cmp ecx [edx] +
jnz loc_40C259  +
mov [eax] edx +
mov edx [edx+4] +
cmp byte ptr [edx+2Dh] 0 +
jz loc_40C248  +
mov ecx [eax] +
cmp byte ptr [ecx+2Dh] 0 +
jnz locret_40C263  +
mov [eax] edx +
retn   +
***
mov eax [ecx] +
cmp eax offset unk_454B44 +
jz locret_40C280  +
push eax  +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov dword ptr [esi] offset off_442A44 +
mov eax [esi+34h] +
cmp eax offset unk_454B44 +
jz loc_40C2AC  +
push eax  +
call sub_425D5C  +
add esp 4 +
mov ecx esi +
pop esi  +
jmp sub_41E200  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_442A44 +
mov eax [esi+34h] +
cmp eax offset unk_454B44 +
jz loc_40C2DF  +
push eax  +
call sub_425D5C  +
add esp 4 +
mov ecx esi +
call sub_41E200  +
test [ebp+arg_0] 1 +
jz loc_40C2F5  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 3Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
test ebx ebx +
jz loc_40C559  +
mov edi [ebp+arg_4] +
test edi edi +
jle loc_40C559  +
push esi  +
lea ecx [ebp+var_24] +
xor eax eax +
push ecx  +
mov [ebx] ax +
call ds:WinHttpGetIEProxyConfigForCurrentUser  +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_40C400  +
push offset aHttps  +
push eax  +
mov byte ptr [ebp+arg_0+3] 0 +
call sub_4272D0  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_40C356  +
add esi 0Ch +
jmp loc_40C36E  +
mov edx [ebp+var_1C] +
push offset asc_442AB4  +
push edx  +
call sub_4272D0  +
add esp 8 +
test eax eax +
jnz loc_40C3D2  +
mov esi [ebp+var_1C] +
push offset asc_442AAC  +
push esi  +
call sub_4272D0  +
add esp 8 +
test eax eax +
jz loc_40C385  +
add eax 6 +
jmp loc_40C387  +
mov eax esi +
cmp word ptr [eax] 20h +
jnz loc_40C399  +
lea ecx [ecx+0] +
add eax 2 +
cmp word ptr [eax] 20h +
jz loc_40C390  +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_40C3D2  +
cmp ecx 3Ah +
jz loc_40C3D2  +
mov ecx eax +
lea esi [ecx+2] +
jmp loc_40C3B0  +
mov dx [ecx] +
add ecx 2 +
test dx dx +
jnz loc_40C3B0  +
sub ecx esi +
sar ecx 1 +
cmp ecx edi +
jg loc_40C3D2  +
push eax  +
push edi  +
push ebx  +
call sub_427381  +
add esp 0Ch +
mov byte ptr [ebp+arg_0+3] 1 +
mov eax [ebp+hMem] +
mov esi ds:GlobalFree +
test eax eax +
jz loc_40C3E2  +
push eax  +
call esi  +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_40C3EC  +
push eax  +
call esi  +
mov eax [ebp+var_18] +
test eax eax +
jz loc_40C3F6  +
push eax  +
call esi  +
mov al byte ptr [ebp+arg_0+3] +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ebx [ebp+lpMultiByteStr] +
xor eax eax +
push eax  +
push eax  +
push 0FFFFFFFFh  +
push ebx  +
push eax  +
xor edi edi +
push 0FDE9h  +
mov [ebp+var_1] 0 +
mov [ebp+var_8] edi +
mov [ebp+var_3C] eax +
mov [ebp+var_38] eax +
mov [ebp+var_34] eax +
mov [ebp+var_30] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
mov [ebp+var_C] eax +
call ds:MultiByteToWideChar  +
mov esi eax +
test esi esi +
jz loc_40C4FA  +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
add esp 4 +
push esi  +
mov edi eax +
push edi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
push 0  +
push 0  +
push 0  +
mov ebx 1 +
push ebx  +
push offset aWinhttpAutopro  +
call ds:WinHttpOpen  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_40C4FA  +
mov ecx [ebp+hMem] +
test ecx ecx +
jz loc_40C4A2  +
mov [ebp+var_3C] 2 +
mov [ebp+var_34] ecx +
jmp loc_40C4B2  +
cmp [ebp+var_24] 0 +
jz loc_40C4C5  +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] 3 +
lea ecx [ebp+var_14] +
push ecx  +
lea edx [ebp+var_3C] +
push edx  +
push edi  +
push eax  +
mov [ebp+var_28] ebx +
call ds:WinHttpGetProxyForUrl  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_40C4FA  +
lea edx [eax+2] +
nop   +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40C4D0  +
mov ecx [ebp+arg_4] +
sub eax edx +
sar eax 1 +
cmp eax ecx +
jg loc_40C4FA  +
mov eax [ebp+var_10] +
push eax  +
push ecx  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_427381  +
add esp 0Ch +
mov [ebp+var_1] bl +
cmp [ebp+hMem] 0 +
mov esi ds:GlobalFree +
jz loc_40C50C  +
mov edx [ebp+hMem] +
push edx  +
call esi  +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_40C516  +
push eax  +
call esi  +
mov eax [ebp+var_18] +
test eax eax +
jz loc_40C520  +
push eax  +
call esi  +
test edi edi +
jz loc_40C52D  +
push edi  +
call sub_425D5C  +
add esp 4 +
mov eax [ebp+var_10] +
test eax eax +
jz loc_40C537  +
push eax  +
call esi  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_40C541  +
push eax  +
call esi  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_40C54F  +
push eax  +
call ds:WinHttpCloseHandle  +
mov al [ebp+var_1] +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
push esi  +
cmp eax 80000h +
ja loc_40C66B  +
jz loc_40C614  +
cmp eax 20000h +
jz loc_40C603  +
cmp eax 40000h +
jnz loc_40C5FE  +
mov eax [ebp+arg_C] +
mov esi [ebp+arg_4] +
push ebx  +
mov ebx [eax] +
test ebx ebx +
jz loc_40C5DF  +
mov eax [esi+4] +
mov ecx [esi+8] +
push edi  +
mov edi eax +
lea edx [ecx+ebx+1] +
cmp edx edi +
jbe loc_40C5C5  +
sub ecx edi +
add ecx ebx +
and ecx 0FFFFE000h +
lea edi [edi+ecx+2000h] +
cmp edi eax +
jz loc_40C5DE  +
mov edx [esi] +
push edi  +
push edx  +
call sub_4273E4  +
add esp 8 +
test eax eax +
jz loc_40C5DE  +
mov [esi] eax +
mov [esi+4] edi +
pop edi  +
mov eax [esi+8] +
lea ecx [eax+ebx+1] +
cmp [esi+4] ecx +
jbe loc_40C5FD  +
mov edx [esi] +
push 0  +
push ebx  +
add edx eax +
mov eax [ebp+arg_0] +
push edx  +
push eax  +
call ds:WinHttpReadData  +
pop ebx  +
pop esi  +
pop ebp  +
retn 14h  +
mov ecx [ebp+arg_0] +
push 0  +
push ecx  +
call ds:WinHttpQueryDataAvailable  +
pop esi  +
pop ebp  +
retn 14h  +
mov ecx [ebp+arg_10] +
push 0  +
test ecx ecx +
jz loc_40C63B  +
mov eax [ebp+arg_4] +
add [eax+8] ecx +
mov ecx [eax+8] +
mov edx [eax] +
mov eax [ebp+arg_0] +
push eax  +
mov byte ptr [ecx+edx] 0 +
call ds:WinHttpQueryDataAvailable  +
pop esi  +
pop ebp  +
retn 14h  +
mov esi [ebp+arg_4] +
mov ecx [esi+8] +
mov edx [esi] +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0  +
mov byte ptr [ecx+edx] 0 +
push eax  +
mov dword ptr [esi+0Ch] 1 +
call ds:WinHttpSetStatusCallback  +
mov ecx [esi+10h] +
push ecx  +
call ds:SetEvent  +
pop esi  +
pop ebp  +
retn 14h  +
cmp eax 200000h +
jz loc_40C68A  +
cmp eax 400000h +
jnz loc_40C5FE  +
mov edx [ebp+arg_0] +
push 0  +
push edx  +
call ds:WinHttpReceiveResponse  +
pop esi  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_C] +
mov ecx [eax+4] +
push ecx  +
call sub_40C180  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
add esp 4 +
push 0  +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov [esi+14h] ax +
call ds:WinHttpSetStatusCallback  +
mov eax [esi+10h] +
push eax  +
call ds:SetEvent  +
pop esi  +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_43DE0B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea esi [ecx+50h] +
mov ecx [eax+4] +
mov [ebp+var_10] esi +
mov dword ptr [ecx+esi-50h] offset off_442ACC +
lea ecx [esi-4Ch] +
mov [ebp+var_4] 0 +
mov dword ptr [esi-4Ch] offset off_441E74 +
call sub_404D00  +
lea ecx [esi-4Ch] +
call sub_405170  +
mov edx [esi-50h] +
mov eax [edx+4] +
mov dword ptr [eax+esi-50h] offset off_441D80 +
push esi  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_441D78 +
call sub_424E73  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
lea esi [ecx-50h] +
mov ecx esi +
call sub_40C6C0  +
test [ebp+arg_0] 1 +
jz loc_40C76D  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43DE50  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+var_2C] esi +
cmp ecx edi +
jz loc_40C7CC  +
mov edx [ecx] +
mov eax [edx+4] +
call eax  +
mov ecx [esi] +
mov eax [ecx+4] +
mov [ebp+var_4] edi +
cmp [eax+esi+0Ch] edi +
jnz loc_40C7E9  +
mov eax [eax+esi+3Ch] +
cmp eax edi +
jz loc_40C7E9  +
mov ecx eax +
call sub_406E00  +
mov eax [esi] +
mov ecx [eax+4] +
cmp [ecx+esi+0Ch] edi +
setz cl  +
mov [ebp+var_28] cl +
mov [ebp+var_4] 1 +
test cl cl +
jz loc_40C8B7  +
mov ecx [eax+4] +
lea edx [ebp+var_1C] +
push edx  +
add ecx esi +
call sub_404B40  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_407000  +
mov ebx [ebp+var_1C] +
add esp 4 +
mov [ebp+var_24] eax +
mov byte ptr [ebp+var_4] 1 +
cmp ebx edi +
jz loc_40C868  +
push edi  +
lea ecx [ebp+var_20] +
call sub_424920  +
mov eax [ebx+4] +
cmp eax edi +
jbe loc_40C849  +
cmp eax 0FFFFFFFFh +
jnb loc_40C849  +
dec eax  +
mov [ebx+4] eax +
mov edi [ebx+4] +
neg edi  +
sbb edi edi +
lea ecx [ebp+var_20] +
not edi  +
call sub_424948  +
and edi ebx +
jz loc_40C868  +
mov eax [edi] +
mov edx [eax] +
push 1  +
mov ecx edi +
call edx  +
mov ecx [esi] +
mov eax [ecx+4] +
mov ecx [ecx+4] +
mov dl [ecx+esi+40h] +
mov ebx [ebp+arg_0] +
mov ecx [ecx+esi+38h] +
push ebx  +
mov byte ptr [ebp+var_20] dl +
mov ebx [ebp+var_20] +
mov edx [ebp+var_24] +
mov edi [edx] +
push ebx  +
add eax esi +
push eax  +
push ecx  +
mov byte ptr [ebp+var_34] 0 +
mov eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_34] +
push ecx  +
mov ecx edx +
mov edx [edi+18h] +
mov byte ptr [ebp+var_4] 3 +
call edx  +
cmp byte ptr [ebp+var_34] 0 +
jz loc_40C8B0  +
mov [ebp+var_18] 4 +
mov [ebp+var_4] 1 +
mov ecx [esi] +
mov ecx [ecx+4] +
mov edx [ebp+var_18] +
add ecx esi +
test edx edx +
jz loc_40C8DB  +
mov eax [ecx+0Ch] +
or eax edx +
cmp dword ptr [ecx+38h] 0 +
jnz loc_40C8D3  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
mov [ebp+var_4] 5 +
call sub_425011  +
test al al +
jnz loc_40C8F2  +
mov ecx esi +
call sub_406E90  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx [eax+esi+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_40C90D  +
mov edx [ecx] +
mov eax [edx+8] +
call eax  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp-14h] +
mov eax [ecx] +
mov eax [eax+4] +
add eax ecx +
mov ecx [eax+0Ch] +
or ecx 4 +
cmp dword ptr [eax+38h] 0 +
jnz loc_40C93C  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_40C95C  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_40C954 +
retn   +
***
mov esi [ebp-14h] +
jmp loc_40C8B7  +
***
push 0  +
push 0  +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43DE8C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
cmp [ebp+arg_8] 0 +
mov [ebp+var_10] 0 +
jz loc_40C9C4  +
mov dword ptr [edi] offset unk_441D9C +
mov dword ptr [edi+8] offset off_441D98 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov eax [edi] +
mov ecx [eax+4] +
mov dword ptr [edi+ecx] offset off_441D80 +
mov edx [edi] +
mov esi [edx+4] +
add esi edi +
mov ecx esi +
call sub_405060  +
mov eax [ebp+arg_0] +
push 20h  +
mov ecx esi +
mov [esi+38h] eax +
mov dword ptr [esi+3Ch] 0 +
call sub_406F50  +
cmp dword ptr [esi+38h] 0 +
mov [esi+40h] al +
jnz loc_40CA0D  +
mov eax [esi+0Ch] +
or eax 4 +
push 0  +
push eax  +
mov ecx esi +
call sub_404F50  +
cmp [ebp+arg_4] 0 +
jz loc_40CA1C  +
push esi  +
call sub_424E1E  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 5Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_14] +
mov [ebp+var_28] eax +
mov [ebp+var_54] ecx +
mov [ebp+var_20] edx +
mov [ebp+var_34] ebx +
mov [ebp+var_5C] esi +
mov [ebp+var_24] 0 +
test eax eax +
jz loc_40CD91  +
test ecx ecx +
jz loc_40CD91  +
test ebx ebx +
jz loc_40CD91  +
cmp byte ptr [ebx] 0 +
jz loc_40CD91  +
mov eax ds:dword_442C18 +
mov ecx ds:dword_442C1C +
mov edx ds:dword_442C20 +
mov dword ptr [ebp+Name] eax +
mov eax ds:dword_442C24 +
push edi  +
mov edi ds:CreateEventW +
mov [ebp+var_10] eax +
lea eax [ebp+Name] +
push eax  +
push 0  +
mov [ebp+var_18] ecx +
mov ecx ds:dword_442C28 +
mov [ebp+var_14] edx +
mov dx ds:word_442C2C +
push 0  +
push 0  +
mov [ebp+var_C] ecx +
mov [ebp+var_8] dx +
call edi  +
push 0  +
push 0  +
push 0  +
push 0  +
mov [ebp+hObject] eax +
call edi  +
cmp dword ptr [esi+14h] 10h +
mov [ebp+var_2C] eax +
mov dword ptr [esi+10h] 0 +
jb loc_40CB00  +
mov esi [esi] +
mov eax ebx +
mov byte ptr [esi] 0 +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40CB08  +
sub eax edx +
mov [ebp+var_58] eax +
mov eax [ebp+var_20] +
cmp word ptr [eax] 0 +
push 10000000h  +
push 0  +
jnz loc_40CB3A  +
push 0  +
push 0  +
push offset aRenga_client  +
call ds:WinHttpOpen  +
mov ebx eax +
mov [ebp+var_20] ebx +
jmp loc_40CB4D  +
push eax  +
push 3  +
push offset aRenga_client  +
call ds:WinHttpOpen  +
mov [ebp+var_20] eax +
mov ebx eax +
test ebx ebx +
jz loc_40CC6B  +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_28] +
push 0  +
push ecx  +
push edx  +
push ebx  +
call ds:WinHttpConnect  +
mov edi eax +
mov [ebp+var_28] edi +
test edi edi +
jz loc_40CC45  +
mov eax [ebp+var_54] +
push 800000h  +
push 0  +
push 0  +
push 0  +
push eax  +
push offset aPost  +
push edi  +
call ds:WinHttpOpenRequest  +
mov esi eax +
test esi esi +
jz loc_40CC1F  +
mov edi ds:WinHttpAddRequestHeaders +
push 20000000h  +
push 0FFFFFFFFh  +
push offset aHostOps  +
push esi  +
call edi  +
push 20000000h  +
push 0FFFFFFFFh  +
push offset aUserAgentSa  +
push esi  +
call edi  +
push 20000000h  +
push 0FFFFFFFFh  +
push offset aContentTypeTex  +
push esi  +
call edi  +
push 20000000h  +
push 0FFFFFFFFh  +
push offset aConnectionClos  +
push esi  +
call edi  +
mov ebx ds:WinHttpSetStatusCallback +
push 0  +
push 7F0000h  +
push offset sub_40C570  +
push esi  +
call ebx  +
cmp eax 0FFFFFFFFh +
jnz loc_40CC92  +
mov ecx dword_44FF1C +
mov edx dword_451A98 +
push offset aErrorSettingCa  +
push ecx  +
push 5  +
push offset aRengainterface  +
push edx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_40CD4F  +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
push offset aErrorOpeningRe  +
push eax  +
push 5  +
push offset aRengainterface  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_40CD5C  +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push offset aErrorConnectin  +
push edx  +
push 5  +
push offset aRengainterface  +
push eax  +
call sub_41D8D0  +
add esp 14h +
jmp loc_40CD63  +
mov ecx dword_44FF1C +
mov edx dword_451A98 +
push offset aErrorOpeningCo  +
push ecx  +
push 5  +
push offset aRengainterface  +
push edx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_40CD6A  +
mov edi [ebp+var_2C] +
xor eax eax +
mov [ebp+var_3C] ax +
mov eax [ebp+var_58] +
lea edx [ebp+lpMem] +
push edx  +
push eax  +
push eax  +
mov eax [ebp+var_34] +
xor ecx ecx +
push eax  +
push ecx  +
push ecx  +
push esi  +
mov [ebp+lpMem] ecx +
mov [ebp+var_4C] ecx +
mov [ebp+var_48] ecx +
mov [ebp+var_44] ecx +
mov [ebp+var_40] edi +
call ds:WinHttpSendRequest  +
cmp eax 1 +
jnz loc_40CD26  +
mov edx [ebp+arg_18] +
mov ecx [ebp+hObject] +
imul edx edx +
push edx  +
push 0  +
lea eax [ebp+Handles] +
push eax  +
push 2  +
mov [ebp+Handles] edi +
mov [ebp+var_34] ecx +
call ds:WaitForMultipleObjects  +
push 0  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov edi eax +
call ebx  +
test edi edi +
jnz loc_40CD00  +
movzx ecx [ebp+var_3C] +
mov [ebp+var_24] ecx +
jmp loc_40CD26  +
cmp edi 1 +
jnz loc_40CD0E  +
mov [ebp+var_24] 0D001h +
jmp loc_40CD26  +
cmp edi 102h +
jnz loc_40CD1F  +
mov [ebp+var_24] 0D002h +
jmp loc_40CD26  +
movzx edx [ebp+var_3C] +
mov [ebp+var_24] edx +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_40CD4F  +
cmp [ebp+var_44] 1 +
jnz loc_40CD3F  +
mov ecx [ebp+var_5C] +
push eax  +
call sub_402200  +
mov eax [ebp+lpMem] +
push eax  +
call sub_425BC2  +
add esp 4 +
mov [ebp+lpMem] 0 +
push esi  +
call ds:WinHttpCloseHandle  +
mov edi [ebp+var_28] +
mov ebx [ebp+var_20] +
push edi  +
call ds:WinHttpCloseHandle  +
push ebx  +
call ds:WinHttpCloseHandle  +
mov eax [ebp+hObject] +
mov esi ds:CloseHandle +
push eax  +
call esi  +
mov ecx [ebp+var_2C] +
push ecx  +
call esi  +
mov ax word ptr [ebp+var_24] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push offset aServerInfoMiss  +
push edx  +
push 4  +
push offset aRengainterface  +
push eax  +
call sub_41D8D0  +
mov ecx [ebp+var_4] +
add esp 14h +
pop esi  +
xor ecx ebp +
mov eax 0FFFFh +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DECB  +
mov eax large fs:0 +
push eax  +
sub esp 94h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
mov esi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
push offset aParsingStarted  +
push eax  +
push 4  +
push offset aRengainterface  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_A0] +
mov [ebp+var_49] 1 +
call sub_41E7B0  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_54] edi +
cmp esi edi +
jz loc_40D2BB  +
mov eax esi +
lea edx [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40CE50  +
sub eax edx +
jz loc_40D29F  +
push edi  +
push edi  +
push esi  +
lea ecx [ebp+var_A0] +
call sub_4208E0  +
lea ecx [ebp+var_A0] +
call sub_41DC30  +
mov [ebp+var_58] eax +
cmp eax edi +
jz loc_40D2E0  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
mov esi eax +
cmp esi edi +
jz loc_40D2E0  +
push offset aRequuid  +
mov ecx esi +
call sub_41E450  +
cmp eax edi +
jz loc_40D265  +
push 28h  +
push eax  +
push ebx  +
call sub_40F8D0  +
add esp 0Ch +
push offset aStatus  +
mov ecx esi +
call sub_41E450  +
mov esi eax +
cmp esi edi +
jz loc_40D24A  +
push 8  +
lea ecx [ebx+28h] +
push esi  +
push ecx  +
call sub_40F8D0  +
push 5  +
push offset aError  +
push esi  +
call sub_40F830  +
add esp 18h +
test ax ax +
jnz loc_40D080  +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push offset aCheckCallRetur  +
push edx  +
push 4  +
push offset aRengainterface  +
push eax  +
call sub_41D8D0  +
add esp 14h +
mov ecx [ebp+var_54] +
push ecx  +
mov ecx [ebp+var_58] +
call sub_41DC10  +
mov [ebp+var_54] eax +
test eax eax +
jz loc_40D2E0  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
mov edi eax +
test edi edi +
jz loc_40CF12  +
mov esi [edi+20h] +
add esi 8 +
jz loc_40CF12  +
push 4  +
push offset aOref  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40CF6D  +
push 28h  +
mov ecx edi +
call sub_41DCF0  +
push eax  +
lea ecx [ebx+64h] +
push ecx  +
call sub_40F8D0  +
add esp 0Ch +
jmp loc_40CF12  +
push 4  +
push offset aDref  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40CFA0  +
push 28h  +
mov ecx edi +
call sub_41DCF0  +
push eax  +
lea edx [ebx+8Ch] +
push edx  +
call sub_40F8D0  +
add esp 0Ch +
jmp loc_40CF12  +
push 5  +
push offset aError  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40D032  +
push offset aCode  +
mov ecx edi +
call sub_41E450  +
push eax  +
lea ecx [ebp+var_2C] +
call sub_4023B0  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_50] +
push ecx  +
mov ecx offset unk_451AB0 +
mov byte ptr [ebp+var_4] 1 +
call sub_421E40  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 0 +
call sub_421E10  +
mov eax [ebp+var_50] +
cmp eax dword_451AB4 +
jz loc_40D005  +
mov edx [eax+28h] +
mov [ebx+0B4h] edx +
jmp loc_40CF12  +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
push offset aUnknownErrorCo  +
push eax  +
push 4  +
push offset aRengainterface  +
push ecx  +
call sub_41D8D0  +
mov dword ptr [ebx+0B4h] 0FFh +
jmp loc_40CF0F  +
push 3  +
push offset aDts  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40D062  +
push 0Ch  +
mov ecx edi +
call sub_41DCF0  +
push eax  +
lea edx [ebx+30h] +
push edx  +
call sub_40F8D0  +
add esp 0Ch +
jmp loc_40CF12  +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
push offset aUnhandledTag  +
push eax  +
push 4  +
push offset aRengainterface  +
push ecx  +
jmp loc_40CF0A  +
push 2  +
push offset aOk  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40D22B  +
push offset aCheckCallSucce  +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push edx  +
push 4  +
push offset aRengainterface  +
push eax  +
call sub_41D8D0  +
add esp 14h +
mov ecx [ebp+var_54] +
push ecx  +
mov ecx [ebp+var_58] +
call sub_41DC10  +
mov [ebp+var_54] eax +
test eax eax +
jz loc_40D2E0  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
mov edi eax +
test edi edi +
jz loc_40D0BA  +
mov esi [edi+20h] +
add esi 8 +
jz loc_40D0BA  +
push 3  +
push offset aDts  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40D115  +
push 0Ch  +
mov ecx edi +
call sub_41DCF0  +
push eax  +
lea ecx [ebx+30h] +
push ecx  +
call sub_40F8D0  +
add esp 0Ch +
jmp loc_40D0BA  +
push 2  +
push offset aVc  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40D145  +
push 28h  +
mov ecx edi +
call sub_41DCF0  +
push eax  +
lea edx [ebx+3Ch] +
push edx  +
call sub_40F8D0  +
add esp 0Ch +
jmp loc_40D0BA  +
push 14h  +
push offset aRenewalactiona  +
push esi  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_40D1D2  +
mov ecx edi +
call sub_41DCF0  +
push eax  +
lea ecx [ebp+var_48] +
call sub_4023B0  +
lea eax [ebp+var_48] +
push eax  +
lea ecx [ebp+var_50] +
push ecx  +
mov ecx offset unk_451AA0 +
mov byte ptr [ebp+var_4] 2 +
call sub_421E40  +
lea ecx [ebp+var_48] +
mov byte ptr [ebp+var_4] 0 +
call sub_421E10  +
mov eax [ebp+var_50] +
cmp eax dword_451AA4 +
jz loc_40D1A5  +
mov edx [eax+28h] +
mov [ebx+0B8h] edx +
jmp loc_40D0BA  +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
push offset aUnknownActionA  +
push eax  +
push 4  +
push offset aRengainterface  +
push ecx  +
call sub_41D8D0  +
mov dword ptr [ebx+0B8h] 3 +
jmp loc_40D0B7  +
mov ecx offset aLicensefragmen +
mov eax esi +
lea esp [esp+0] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_40D200  +
test dl dl +
jz loc_40D1FC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_40D200  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_40D1E0  +
xor eax eax +
jmp loc_40D205  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_40D221  +
mov ecx edi +
call sub_41DCF0  +
push eax  +
lea ecx [ebx+0BCh] +
call sub_4023F0  +
jmp loc_40D0BA  +
push offset aUnhandledTag  +
jmp loc_40D09E  +
mov ecx dword_44FF1C +
mov edx dword_451A98 +
push offset aUnknownStatusV  +
push ecx  +
push 4  +
push offset aRengainterface  +
push edx  +
jmp loc_40D2D4  +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
push offset aInvalidRespons  +
push eax  +
push 4  +
push offset aRengainterface  +
push ecx  +
jmp loc_40D27E  +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push offset aInvalidRespo_0  +
push edx  +
push 4  +
push offset aRengainterface  +
push eax  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_A0] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_40C290  +
xor al al +
jmp loc_40D333  +
mov ecx dword_44FF1C +
mov edx dword_451A98 +
push offset aErrorParsingRe  +
push ecx  +
push 4  +
push offset aRengainterface  +
push edx  +
jmp loc_40D2D4  +
mov eax dword_44FF1C +
mov ecx dword_451A98 +
push offset aErrorParsingRe  +
push eax  +
push 4  +
push offset aRengainterface  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_49] 0 +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push offset aParsingEnded  +
push edx  +
push 4  +
push offset aRengainterface  +
push eax  +
call sub_41D8D0  +
mov eax [ebp+var_6C] +
add esp 14h +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_A0] offset off_442A44 +
cmp eax offset unk_454B44 +
jz loc_40D325  +
push eax  +
call sub_425D5C  +
add esp 4 +
lea ecx [ebp+var_A0] +
call sub_41E200  +
mov al [ebp+var_49] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
add ecx 4 +
mov [ebp+var_4] 0 +
call sub_408990  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_4] +
mov edx ecx +
mov eax [edx+4] +
mov ecx [eax+4] +
push esi  +
push edi  +
mov edi eax +
add ebx 0Ch +
cmp byte ptr [ecx+2Dh] 0 +
mov al 1 +
mov [ebp+var_C] edx +
mov [ebp+var_4] ecx +
mov byte ptr [ebp+var_8] al +
jnz loc_40D580  +
jmp loc_40D4B3  +
mov ecx [ebp+var_4] +
cmp [ebp+arg_8] 0 +
mov [ebp+var_10] ecx +
lea eax [ecx+0Ch] +
jz loc_40D512  +
cmp dword ptr [ebx+14h] 10h +
jb loc_40D4C9  +
mov edx [ebx] +
jmp loc_40D4CB  +
mov edx ebx +
mov esi [eax+10h] +
mov ecx esi +
cmp ecx esi +
jnb $+2  +
mov edi [ebx+10h] +
mov ecx esi +
cmp esi edi +
jb loc_40D4DF  +
mov ecx edi +
cmp dword ptr [eax+14h] 10h +
jb loc_40D4E7  +
mov eax [eax] +
push ecx  +
push edx  +
push eax  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_40D50D  +
cmp esi edi +
jnb loc_40D504  +
or eax 0FFFFFFFFh +
test eax eax +
setns al  +
jmp loc_40D55A  +
xor eax eax +
cmp esi edi +
setnz al  +
test eax eax +
setns al  +
jmp loc_40D55A  +
cmp dword ptr [eax+14h] 10h +
mov edi [eax+10h] +
jb loc_40D51D  +
mov eax [eax] +
mov esi [ebx+10h] +
mov ecx esi +
mov edx esi +
cmp esi edi +
jb loc_40D52A  +
mov edx edi +
cmp dword ptr [ebx+14h] 10h +
jb loc_40D534  +
mov ecx [ebx] +
jmp loc_40D536  +
mov ecx ebx +
push edx  +
push eax  +
push ecx  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_40D557  +
cmp esi edi +
jnb loc_40D54E  +
or eax 0FFFFFFFFh +
jmp loc_40D555  +
xor eax eax +
cmp esi edi +
setnz al  +
test eax eax +
sets al  +
mov ecx [ebp+var_4] +
mov byte ptr [ebp+var_8] al +
test al al +
jz loc_40D568  +
mov edx [ecx] +
jmp loc_40D56B  +
mov edx [ecx+8] +
mov ecx edx +
cmp byte ptr [ecx+2Dh] 0 +
mov [ebp+var_4] edx +
jz loc_40D4B0  +
mov edi [ebp+var_10] +
mov edx [ebp+var_C] +
mov esi edi +
mov dword ptr [ebp+arg_8] esi +
test al al +
jz loc_40D5C1  +
mov eax [edx+4] +
cmp edi [eax] +
jnz loc_40D5B6  +
mov ecx [ebp+arg_4] +
push ecx  +
push edi  +
push 1  +
lea eax [ebp+arg_8] +
push eax  +
mov ecx edx +
call sub_422010  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
lea ecx [ebp+arg_8] +
call sub_40C210  +
mov esi dword ptr [ebp+arg_8] +
cmp dword ptr [ebx+14h] 10h +
mov edx [ebx+10h] +
lea ecx [esi+0Ch] +
jb loc_40D5D1  +
mov eax [ebx] +
jmp loc_40D5D3  +
mov eax ebx +
push edx  +
mov edx [ecx+10h] +
push eax  +
push edx  +
push 0  +
call sub_40AA10  +
test eax eax +
jns loc_40D5F6  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
push eax  +
push edi  +
push ecx  +
mov ecx [ebp+var_C] +
lea edx [ebp+arg_8] +
push edx  +
jmp loc_40D59D  +
cmp dword ptr [ebx+14h] 10h +
jb loc_40D607  +
mov edx [ebx] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+arg_4] +
mov dword ptr [ebx+14h] 0Fh +
mov dword ptr [ebx+10h] 0 +
push eax  +
mov byte ptr [ebx] 0 +
call sub_42520B  +
mov eax [ebp+arg_0] +
add esp 4 +
pop edi  +
mov [eax] esi +
pop esi  +
mov byte ptr [eax+4] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43DFD6  +
mov eax large fs:0 +
push eax  +
sub esp 268h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_C] +
mov [ebp+var_1D4] ecx +
mov ecx [ebp+arg_14] +
xor ebx ebx +
mov [ebp+var_1D0] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov [ebp+var_1DC] ecx +
mov esi 0Fh +
push offset unk_441AD0  +
lea ecx [ebp+var_3C] +
mov [ebp+var_1CC] edx +
mov [ebp+var_1D8] eax +
mov [ebp+var_28] esi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push offset aGetverificatio  +
push edx  +
push 4  +
push offset aRengainterface  +
push eax  +
mov [ebp+var_4] ebx +
call sub_41D8D0  +
add esp 14h +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_E4] +
mov [ebp+var_D0] esi +
mov [ebp+var_D4] ebx +
mov byte ptr [ebp+var_E4] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_AC] +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_98] esi +
mov [ebp+var_9C] ebx +
mov byte ptr [ebp+var_AC] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_90] +
mov byte ptr [ebp+var_4] 2 +
mov [ebp+var_7C] esi +
mov [ebp+var_80] ebx +
mov byte ptr [ebp+var_90] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 3 +
mov [ebp+var_44] esi +
mov [ebp+var_48] ebx +
mov byte ptr [ebp+var_58] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_138] +
mov byte ptr [ebp+var_4] 4 +
mov [ebp+var_124] esi +
mov [ebp+var_128] ebx +
mov byte ptr [ebp+var_138] bl +
call sub_402230  +
push ebx  +
mov byte ptr [ebp+var_4] 5 +
mov [ebp+var_B4] esi +
mov [ebp+var_B8] ebx +
mov byte ptr [ebp+var_C8] bl +
push offset unk_441AD0  +
lea ecx [ebp+var_C8] +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_74] +
mov byte ptr [ebp+var_4] 6 +
mov [ebp+var_60] esi +
mov [ebp+var_64] ebx +
mov byte ptr [ebp+var_74] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_100] +
mov byte ptr [ebp+var_4] 7 +
mov [ebp+var_EC] esi +
mov [ebp+var_F0] ebx +
mov byte ptr [ebp+var_100] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_154] +
mov byte ptr [ebp+var_4] 8 +
mov [ebp+var_140] esi +
mov [ebp+var_144] ebx +
mov byte ptr [ebp+var_154] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_11C] +
mov byte ptr [ebp+var_4] 9 +
mov [ebp+var_108] esi +
mov [ebp+var_10C] ebx +
mov byte ptr [ebp+var_11C] bl +
call sub_402230  +
push ebx  +
mov byte ptr [ebp+var_4] 0Ah +
call sub_427330  +
add esp 4 +
push 1  +
push 2  +
lea ecx [ebp+var_274] +
mov edi eax +
call sub_40D350  +
push edi  +
lea ecx [ebp+var_274] +
mov byte ptr [ebp+var_4] 0Bh +
call sub_40C780  +
cmp [ebp+arg_0] ebx +
jz loc_40D89B  +
mov ecx dword_44FF1C +
mov edx dword_451A98 +
push offset aValidatingResp  +
push ecx  +
push 4  +
push offset aRengainterface  +
push edx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_40D98A  +
cmp [ebp+var_1D4] ebx +
jz loc_40DD62  +
cmp [ebp+var_1CC] ebx +
jz loc_40DD62  +
push 3  +
push offset aDsp  +
lea ecx [ebp+var_E4] +
call sub_402230  +
push 3  +
push offset a2_0  +
lea ecx [ebp+var_AC] +
call sub_402230  +
push 3  +
push offset aAll  +
lea ecx [ebp+var_90] +
call sub_402230  +
mov edi [ebp+var_1D8] +
mov eax edi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_40D8F4  +
sub eax edx +
push eax  +
push edi  +
lea ecx [ebp+var_58] +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_138] +
call sub_402230  +
push 8  +
push offset aCs_dse_2  +
lea ecx [ebp+var_C8] +
call sub_402230  +
mov edx [ebp+var_1D0] +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_40D935  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_74] +
call sub_402230  +
mov edi [ebp+var_1D4] +
mov eax edi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_40D953  +
sub eax edx +
push eax  +
push edi  +
lea ecx [ebp+var_100] +
call sub_402230  +
mov edx [ebp+var_1CC] +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_40D974  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_154] +
call sub_402230  +
push 4  +
push offset aDtsm  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp+var_E4] +
push eax  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [ebp+var_AC] +
push ecx  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 0FFFFFFFFh  +
push ebx  +
lea edx [ebp+var_90] +
push edx  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp+var_58] +
push eax  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
lea ecx [ebp+var_170] +
push ecx  +
lea ecx [ebp+var_274] +
call sub_40D450  +
mov edi 10h +
mov byte ptr [ebp+var_4] 0Ch +
cmp [eax+14h] edi +
jb loc_40DA4D  +
mov edx [eax] +
jmp loc_40DA4F  +
mov edx eax +
mov eax edx +
lea ecx [eax+1] +
mov [ebp+var_1D0] ecx +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_40DA60  +
sub eax [ebp+var_1D0] +
lea ecx [ebp+var_3C] +
push eax  +
push edx  +
call sub_401CE0  +
mov byte ptr [ebp+var_4] 0Bh +
cmp [ebp+var_15C] edi +
jb loc_40DA92  +
mov edx [ebp+var_170] +
push edx  +
call sub_42520B  +
add esp 4 +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp+var_C8] +
push eax  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [ebp+var_74] +
push ecx  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push 0FFFFFFFFh  +
push ebx  +
lea edx [ebp+var_100] +
push edx  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
push 1  +
push offset asc_442978  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
push edi  +
push ebx  +
push offset aCheckentitleme  +
lea ecx [ebp+var_58] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_40DB3B  +
mov eax [ebp+var_1CC] +
lea edx [eax+1] +
mov edi edi +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_40DB20  +
sub eax edx +
push eax  +
mov eax [ebp+var_1CC] +
push eax  +
lea ecx [ebp+var_3C] +
call sub_401CE0  +
jmp loc_40DB4D  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [ebp+var_11C] +
push ecx  +
lea ecx [ebp+var_3C] +
call sub_401BF0  +
lea edx [ebp+var_1C8] +
push edx  +
mov byte ptr [ebp+var_20] bl +
mov [ebp+var_20+1] ebx +
mov [ebp+var_1B] ebx +
mov [ebp+var_17] ebx +
mov [ebp+var_13] bx +
mov [ebp+var_11] bl +
call sub_404130  +
mov eax [ebp+var_3C] +
add esp 4 +
cmp [ebp+var_28] edi +
jnb loc_40DB7A  +
lea eax [ebp+var_3C] +
mov ecx [ebp+var_2C] +
push ecx  +
push eax  +
lea edx [ebp+var_1C8] +
push edx  +
call sub_404830  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_1C8] +
push ecx  +
call sub_404940  +
mov edx [ebp+var_1DC] +
push edx  +
lea eax [ebp+var_20] +
push edi  +
push eax  +
call sub_4049F0  +
mov ecx dword_44FF1C +
mov edx dword_451A98 +
push offset aGetverificat_0  +
push ecx  +
push 4  +
push offset aRengainterface  +
push edx  +
call sub_41D8D0  +
add esp 34h +
lea ecx [ebp+var_274] +
mov byte ptr [ebp+var_4] 0Ah +
call sub_40C6C0  +
cmp [ebp+var_108] edi +
jb loc_40DBF4  +
mov eax [ebp+var_11C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_108] esi +
mov [ebp+var_10C] ebx +
mov byte ptr [ebp+var_11C] bl +
cmp [ebp+var_140] edi +
jb loc_40DC1D  +
mov ecx [ebp+var_154] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_140] esi +
mov [ebp+var_144] ebx +
mov byte ptr [ebp+var_154] bl +
cmp [ebp+var_EC] edi +
jb loc_40DC46  +
mov edx [ebp+var_100] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_EC] esi +
mov [ebp+var_F0] ebx +
mov byte ptr [ebp+var_100] bl +
cmp [ebp+var_60] edi +
jb loc_40DC69  +
mov eax [ebp+var_74] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_60] esi +
mov [ebp+var_64] ebx +
mov byte ptr [ebp+var_74] bl +
cmp [ebp+var_B4] edi +
jb loc_40DC89  +
mov ecx [ebp+var_C8] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_B4] esi +
mov [ebp+var_B8] ebx +
mov byte ptr [ebp+var_C8] bl +
cmp [ebp+var_124] edi +
jb loc_40DCB2  +
mov edx [ebp+var_138] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_124] esi +
mov [ebp+var_128] ebx +
mov byte ptr [ebp+var_138] bl +
cmp [ebp+var_44] edi +
jb loc_40DCD5  +
mov eax [ebp+var_58] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_44] esi +
mov [ebp+var_48] ebx +
mov byte ptr [ebp+var_58] bl +
cmp [ebp+var_7C] edi +
jb loc_40DCF2  +
mov ecx [ebp+var_90] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_7C] esi +
mov [ebp+var_80] ebx +
mov byte ptr [ebp+var_90] bl +
cmp [ebp+var_98] edi +
jb loc_40DD15  +
mov edx [ebp+var_AC] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_98] esi +
mov [ebp+var_9C] ebx +
mov byte ptr [ebp+var_AC] bl +
cmp [ebp+var_D0] edi +
jb loc_40DD3E  +
mov eax [ebp+var_E4] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_D0] esi +
mov [ebp+var_D4] ebx +
mov byte ptr [ebp+var_E4] bl +
cmp [ebp+var_28] edi +
jb loc_40DF1B  +
mov ecx [ebp+var_3C] +
push ecx  +
jmp loc_40DF13  +
mov edx dword_44FF1C +
mov eax dword_451A98 +
push offset aNecessaryCompo  +
push edx  +
push 4  +
push offset aRengainterface  +
push eax  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_274] +
mov byte ptr [ebp+var_4] 0Ah +
call sub_40C6C0  +
mov edi 10h +
cmp [ebp+var_108] edi +
jb loc_40DDAE  +
mov ecx [ebp+var_11C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_108] esi +
mov [ebp+var_10C] ebx +
mov byte ptr [ebp+var_11C] bl +
cmp [ebp+var_140] edi +
jb loc_40DDD7  +
mov edx [ebp+var_154] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_140] esi +
mov [ebp+var_144] ebx +
mov byte ptr [ebp+var_154] bl +
cmp [ebp+var_EC] edi +
jb loc_40DE00  +
mov eax [ebp+var_100] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_EC] esi +
mov [ebp+var_F0] ebx +
mov byte ptr [ebp+var_100] bl +
cmp [ebp+var_60] edi +
jb loc_40DE23  +
mov ecx [ebp+var_74] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_60] esi +
mov [ebp+var_64] ebx +
mov byte ptr [ebp+var_74] bl +
cmp [ebp+var_B4] edi +
jb loc_40DE43  +
mov edx [ebp+var_C8] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_B4] esi +
mov [ebp+var_B8] ebx +
mov byte ptr [ebp+var_C8] bl +
cmp [ebp+var_124] edi +
jb loc_40DE6C  +
mov eax [ebp+var_138] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_124] esi +
mov [ebp+var_128] ebx +
mov byte ptr [ebp+var_138] bl +
cmp [ebp+var_44] edi +
jb loc_40DE8F  +
mov ecx [ebp+var_58] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_44] esi +
mov [ebp+var_48] ebx +
mov byte ptr [ebp+var_58] bl +
cmp [ebp+var_7C] edi +
jb loc_40DEAC  +
mov edx [ebp+var_90] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_7C] esi +
mov [ebp+var_80] ebx +
mov byte ptr [ebp+var_90] bl +
cmp [ebp+var_98] edi +
jb loc_40DECF  +
mov eax [ebp+var_AC] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_98] esi +
mov [ebp+var_9C] ebx +
mov byte ptr [ebp+var_AC] bl +
cmp [ebp+var_D0] edi +
jb loc_40DEF8  +
mov ecx [ebp+var_E4] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_D0] esi +
mov [ebp+var_D4] ebx +
mov byte ptr [ebp+var_E4] bl +
cmp [ebp+var_28] edi +
jb loc_40DF1B  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi ecx +
cmp dword ptr [esi+8] 0 +
mov eax [esi+4] +
push edi  +
lea edi [ebx+0Ch] +
jnz loc_40DF72  +
mov edi [ebp+arg_0] +
push ebx  +
push eax  +
push 1  +
push edi  +
call sub_422010  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_40DFBB  +
cmp dword ptr [ecx+20h] 10h +
lea eax [ecx+0Ch] +
mov ecx [eax+10h] +
jb loc_40DF87  +
mov eax [eax] +
push ecx  +
mov ecx [edi+10h] +
push eax  +
push ecx  +
push 0  +
mov ecx edi +
call sub_40AA10  +
test eax eax +
jns loc_40E0DC  +
mov edx [ebp+arg_4] +
mov edi [ebp+arg_0] +
push ebx  +
push edx  +
push 1  +
push edi  +
mov ecx esi +
call sub_422010  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp ecx eax +
jnz loc_40DFF6  +
mov eax [eax+8] +
add eax 0Ch +
push edi  +
push eax  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_40E0DC  +
mov eax [esi+4] +
mov ecx [eax+8] +
mov edi [ebp+arg_0] +
push ebx  +
push ecx  +
push 0  +
push edi  +
mov ecx esi +
call sub_422010  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
add ecx 0Ch +
push ecx  +
push edi  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_40E064  +
mov edx [ebp+arg_4] +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] edx +
call sub_40C210  +
mov eax [ebp+arg_8] +
push edi  +
add eax 0Ch +
push eax  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_40E064  +
mov eax [ebp+arg_8] +
mov ecx [eax+8] +
cmp byte ptr [ecx+2Dh] 0 +
mov edi [ebp+arg_0] +
push ebx  +
mov ecx esi +
jz loc_40E04D  +
push eax  +
push 0  +
push edi  +
call sub_422010  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [ebp+arg_4] +
push edx  +
push 1  +
push edi  +
call sub_422010  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_4] +
push edi  +
add eax 0Ch +
push eax  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_40E0DC  +
mov ecx [ebp+arg_4] +
mov [ebp+arg_8] ecx +
lea ecx [ebp+arg_8] +
call sub_421B60  +
mov eax [ebp+arg_8] +
cmp eax [esi+4] +
jz loc_40E0A0  +
add eax 0Ch +
push eax  +
push edi  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_40E0DC  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [ecx+8] +
cmp byte ptr [edx+2Dh] 0 +
mov edi [ebp+arg_0] +
push ebx  +
jz loc_40E0C6  +
push ecx  +
push 0  +
push edi  +
mov ecx esi +
call sub_422010  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push eax  +
push 1  +
push edi  +
mov ecx esi +
call sub_422010  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push 0  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
mov ecx esi +
call sub_40D480  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43E008  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_421CF0  +
mov ebx eax +
cmp ebx [esi+4] +
jz loc_40E15E  +
cmp dword ptr [ebx+20h] 10h +
mov ecx [ebx+1Ch] +
lea eax [ebx+0Ch] +
jb loc_40E14B  +
mov eax [eax] +
push ecx  +
push eax  +
mov eax [edi+10h] +
push eax  +
push 0  +
mov ecx edi +
call sub_40AA10  +
test eax eax +
jns loc_40E1B7  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
lea ecx [ebp+var_30] +
mov [ebp+var_1C] 0Fh +
mov [ebp+var_20] 0 +
mov byte ptr [ebp+var_30] 0 +
call sub_402110  +
xor eax eax +
mov [ebp+var_14] eax +
lea ecx [ebp+var_30] +
push ecx  +
mov ecx esi +
mov [ebp+var_4] eax +
call loc_422850  +
push eax  +
push ebx  +
lea edx [ebp+var_34] +
push edx  +
mov ecx esi +
call sub_40DF40  +
cmp [ebp+var_1C] 10h +
mov esi [ebp+var_34] +
jb loc_40E1B2  +
mov eax [ebp+var_30] +
push eax  +
call sub_42520B  +
add esp 4 +
lea eax [esi+28h] +
jmp loc_40E1BA  +
lea eax [ebx+28h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43E0E8  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 12h  +
xor ebx ebx +
mov edi 0Fh +
push offset aNo_action_requ  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AA0 +
mov [ebp+var_4] ebx +
call sub_40E100  +
mov esi 10h +
mov [eax] ebx +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E25A  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 11h  +
push offset aNo_payment_met  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx offset unk_451AA0 +
mov [ebp+var_4] 1 +
call sub_40E100  +
mov dword ptr [eax] 1 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E2A5  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
push 16h  +
push offset aExpired_paymen  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx offset unk_451AA0 +
mov [ebp+var_4] 2 +
call sub_40E100  +
mov dword ptr [eax] 2 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E2F0  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
push 16h  +
push offset aUnknown_renewa  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AA0 +
mov [ebp+var_4] 3 +
call sub_40E100  +
mov dword ptr [eax] 3 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E33B  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 2  +
push offset aOk_0  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 4 +
call sub_40E100  +
mov [eax] ebx +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E382  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
push 0Dh  +
push offset aUnsup_cmd_ver  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 5 +
call sub_40E100  +
mov dword ptr [eax] 1 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E3CD  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
push 12h  +
push offset aWrong_type_ele  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 6 +
call sub_40E100  +
mov dword ptr [eax] 2 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E418  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push edi  +
push offset aMissing_elemen  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 7 +
call sub_40E100  +
mov dword ptr [eax] 3 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E462  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
push 14h  +
push offset aRenga_internal  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 8 +
call sub_40E100  +
mov dword ptr [eax] 4 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E4AD  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
push 0Ah  +
push offset aAuth_error  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 9 +
call sub_40E100  +
mov dword ptr [eax] 5 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E4F8  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 0Bh  +
push offset aAuth_failed  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 0Ah +
call sub_40E100  +
mov dword ptr [eax] 6 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E543  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
push 11h  +
push offset aValidation_fai  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 0Bh +
call sub_40E100  +
mov dword ptr [eax] 7 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E58E  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
push edi  +
push offset aInvalid_reques  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 0Ch +
call sub_40E100  +
mov dword ptr [eax] 8 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E5D8  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 0Dh  +
push offset aRequest_error  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 0Dh +
call sub_40E100  +
mov dword ptr [eax] 9 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E623  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
push 13h  +
push offset aUser_not_autho  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 0Eh +
call sub_40E100  +
mov dword ptr [eax] 0Ah +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E66E  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
push 14h  +
push offset aToken_not_auth  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] edi +
call sub_40E100  +
mov dword ptr [eax] 0Bh +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E6B5  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 0Eh  +
push offset aNot_associated  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] esi +
call sub_40E100  +
mov dword ptr [eax] 0Ch +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E6FC  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
push 9  +
push offset aNot_found  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 11h +
call sub_40E100  +
mov dword ptr [eax] 0Dh +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E747  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
push esi  +
push offset aDis_all_interv  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 12h +
call sub_40E100  +
mov dword ptr [eax] 0Eh +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E791  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 0Bh  +
push offset aNot_enabled  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 13h +
call sub_40E100  +
mov [eax] edi +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E7D8  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
push 0Dh  +
push offset aTo_many_assoc  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 14h +
call sub_40E100  +
mov [eax] esi +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E81F  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
push esi  +
push offset aDts_max_varian  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 15h +
call sub_40E100  +
mov dword ptr [eax] 11h +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+var_18] esi +
jb loc_40E869  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 7  +
push offset aUnknown  +
lea ecx [ebp+var_48] +
mov [ebp+var_34] edi +
mov [ebp+var_38] ebx +
mov byte ptr [ebp+var_48] bl +
call sub_402230  +
lea edx [ebp+var_48] +
push edx  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 16h +
call sub_40E100  +
mov dword ptr [eax] 0FFh +
cmp [ebp+var_34] esi +
jb loc_40E8AD  +
mov eax [ebp+var_48] +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov edx [ebp+arg_8] +
push edi  +
mov edi ecx +
mov eax [edi+10h] +
test edx edx +
jnz loc_40EC7E  +
mov ecx [ebp+arg_4] +
cmp ecx eax +
jnb loc_40ECDF  +
mov eax ecx +
pop edi  +
pop ebp  +
retn 0Ch  +
push ebx  +
push esi  +
cmp edx eax +
ja loc_40ECDA  +
mov ecx [ebp+arg_4] +
sub eax edx +
cmp ecx eax +
jnb loc_40EC8F  +
mov eax ecx +
cmp dword ptr [edi+14h] 10h +
jb loc_40EC99  +
mov ecx [edi] +
jmp loc_40EC9B  +
mov ecx edi +
mov ebx [ebp+arg_0] +
lea esi [ecx+eax] +
mov al [ebx] +
cmp [esi] al +
jnz loc_40ECB6  +
push edx  +
push ebx  +
push esi  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jz loc_40ECC7  +
mov ecx edi +
call sub_4010E0  +
cmp esi eax +
jz loc_40ECDA  +
mov edx [ebp+arg_8] +
dec esi  +
jmp loc_40ECA1  +
cmp dword ptr [edi+14h] 10h +
jb loc_40ECCF  +
mov edi [edi] +
mov eax esi +
pop esi  +
pop ebx  +
sub eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebp+arg_0] +
sub esp 0Ch +
xor eax eax +
test ecx ecx +
jz loc_40ED49  +
cmp ecx 9249249h +
ja loc_40ED21  +
lea eax ds:0[ecx*8] +
sub eax ecx +
add eax eax +
add eax eax +
push eax  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jnz loc_40ED49  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_C] +
mov [ebp+arg_0] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea edx [ebp+var_C] +
push edx  +
mov [ebp+var_C] offset off_4419DC +
call sub_425C90  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
xor edi edi +
call sub_41AB50  +
mov esi eax +
test esi esi +
jz loc_40EDB2  +
mov eax [ebp+arg_0] +
cmp [eax+10h] edi +
jz loc_40ED90  +
cmp dword ptr [eax+14h] 10h +
jb loc_40ED72  +
mov eax [eax] +
movzx ecx ds:byte_44534B +
push ecx  +
push offset aSafilelist  +
push offset aData  +
push eax  +
push esi  +
call sub_41AEC0  +
add esp 14h +
jmp loc_40EDAB  +
movzx edx ds:byte_44534B +
push edx  +
push offset aSafilelist  +
push offset aData  +
push esi  +
call sub_41B110  +
add esp 10h +
test eax eax +
jnz loc_40EDB2  +
lea edi [eax+1] +
push esi  +
call sub_41D100  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E1E8  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
mov esi [ebx] +
mov eax [ebx+4] +
mov edi [ebp+arg_4] +
cmp esi eax +
jz loc_40EE9A  +
mov edi edi +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx edi +
call sub_401BF0  +
push 3  +
push offset asc_443074  +
mov ecx edi +
call sub_401CE0  +
add esi 1Ch +
cmp esi [ebx+4] +
jnz loc_40EE10  +
cmp dword ptr [edi+10h] 0 +
jz loc_40EE9A  +
push 3  +
push 0FFFFFFFFh  +
push offset asc_443074  +
mov ecx edi +
call sub_40EC60  +
cmp eax 0FFFFFFFFh +
jz loc_40EE9A  +
push eax  +
push 0  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx edi +
call sub_40B410  +
mov edx [ebp+var_2C] +
mov ebx 10h +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] ebx +
jnb loc_40EE72  +
lea edx [ebp+var_2C] +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40EE77  +
sub eax esi +
push eax  +
push edx  +
mov ecx edi +
call sub_402230  +
cmp [ebp+var_18] ebx +
jb loc_40EE9A  +
mov ecx [ebp+var_2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
cmp esi [ebp+arg_4] +
jz loc_40EF3B  +
push ebx  +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
cmp edi esi +
jz loc_40EF29  +
cmp dword ptr [edi+14h] 10h +
jb loc_40EEE8  +
mov eax [edi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [edi+14h] 0Fh +
mov [edi+10h] ebx +
mov [edi] bl +
cmp dword ptr [esi+14h] 10h +
jnb loc_40EF0B  +
mov ecx [esi+10h] +
inc ecx  +
push ecx  +
push esi  +
push edi  +
call loc_425800  +
add esp 0Ch +
jmp loc_40EF11  +
mov edx [esi] +
mov [edi] edx +
mov [esi] ebx +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov ecx [esi+14h] +
mov [edi+14h] ecx +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] ebx +
mov [esi] bl +
add esi 1Ch +
add edi 1Ch +
cmp esi [ebp+arg_4] +
jnz loc_40EED3  +
mov eax edi +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_8] +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E1C1  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_8] +
xor ebx ebx +
mov edi edi +
cmp edi [ebp+arg_4] +
jz loc_40EFF3  +
cmp esi ebx +
jz loc_40EFEB  +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] ebx +
mov [esi] bl +
cmp esi edi +
jz loc_40EFEB  +
cmp dword ptr [esi+14h] 10h +
jb loc_40EFAA  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] ebx +
mov [esi] bl +
cmp dword ptr [edi+14h] 10h +
jnb loc_40EFCD  +
mov eax [edi+10h] +
inc eax  +
push eax  +
push edi  +
push esi  +
call loc_425800  +
add esp 0Ch +
jmp loc_40EFD3  +
mov eax [edi] +
mov [esi] eax +
mov [edi] ebx +
mov ecx [edi+10h] +
mov [esi+10h] ecx +
mov edx [edi+14h] +
mov [esi+14h] edx +
mov dword ptr [edi+14h] 0Fh +
mov [edi+10h] ebx +
mov [edi] bl +
add esi 1Ch +
add edi 1Ch +
jmp loc_40EF80  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E1E8  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov ecx [esi] +
mov eax [esi+4] +
cmp ecx eax +
jnz loc_40F04A  +
xor eax eax +
jmp loc_40F0C4  +
mov edx [ebp+var_30] +
push edx  +
push ecx  +
push eax  +
push eax  +
call sub_40EEC0  +
mov ecx [ebp+var_30] +
push ecx  +
mov edi eax +
mov eax [esi+4] +
lea edx [esi+0Ch] +
push edx  +
push eax  +
push edi  +
call sub_40A040  +
add esp 20h +
push 0  +
push offset unk_441AD0  +
lea ecx [ebp+var_2C] +
mov [esi+4] edi +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call sub_402230  +
lea eax [ebp+var_2C] +
push eax  +
push esi  +
mov [ebp+var_4] 0 +
call sub_40EDD0  +
lea ecx [ebp+var_2C] +
push ecx  +
call sub_40ED50  +
add esp 0Ch +
cmp [ebp+var_18] 10h +
mov esi eax +
jb loc_40F0C2  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E210  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov ebx [ebp+arg_0] +
cmp ebx 9249249h +
jbe loc_40F122  +
push offset aVectorTTooLong  +
call sub_424688  +
mov ecx [esi+8] +
sub ecx [esi] +
mov eax 92492493h +
imul  ecx +
add edx ecx +
sar edx 4 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax ebx +
jnb loc_40F1CF  +
lea edi [esi+0Ch] +
push ebx  +
mov ecx edi +
call sub_40ECF0  +
mov ebx [ebp+arg_0] +
mov ecx [esi+4] +
mov edx [esi] +
push ebx  +
push 0  +
push edi  +
push eax  +
push ecx  +
push edx  +
mov [ebp+var_14] eax +
mov [ebp+var_4] 0 +
call sub_40EF50  +
mov ebx [esi] +
mov ecx [esi+4] +
sub ecx ebx +
mov eax 92492493h +
imul  ecx +
add edx ecx +
sar edx 4 +
mov edi edx +
shr edi 1Fh +
add esp 18h +
add edi edx +
test ebx ebx +
jz loc_40F1A9  +
mov ecx [ebp+arg_0] +
push ecx  +
lea eax [esi+0Ch] +
push eax  +
mov eax [esi+4] +
push eax  +
push ebx  +
call sub_40A040  +
mov edx [esi] +
push edx  +
call sub_42520B  +
add esp 14h +
mov eax [ebp+arg_0] +
lea ecx ds:0[eax*8] +
sub ecx eax +
mov eax [ebp+var_14] +
lea edx [eax+ecx*4] +
lea ecx ds:0[edi*8] +
sub ecx edi +
mov [esi+8] edx +
lea edx [eax+ecx*4] +
mov [esi+4] edx +
mov [esi] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ecx] +
push esi  +
mov esi [ecx+4] +
sub esi ebx +
mov eax 92492493h +
imul  esi +
mov eax [ebp+arg_0] +
add edx esi +
sar edx 4 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 9249249h +
sub edx eax +
push edi  +
cmp edx esi +
jnb loc_40F238  +
push offset aVectorTTooLong  +
call sub_424688  +
mov edi [ecx+8] +
add esi eax +
sub edi ebx +
mov eax 92492493h +
imul  edi +
add edx edi +
sar edx 4 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp esi eax +
jbe loc_40F277  +
mov edx eax +
shr edx 1 +
mov edi 9249249h +
sub edi edx +
cmp edi eax +
jnb loc_40F269  +
xor eax eax +
jmp loc_40F26B  +
add eax edx +
cmp eax esi +
jnb loc_40F271  +
mov eax esi +
push eax  +
call sub_40F0E0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_43E2A7  +
mov eax large fs:0 +
push eax  +
sub esp 478h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
mov ecx [esi] +
mov [ebp+var_484] esi +
cmp ecx eax +
jz loc_40F3BC  +
mov edx [ebp+var_484] +
push edx  +
push ecx  +
push eax  +
push eax  +
call sub_40EEC0  +
mov ecx [ebp+var_484] +
push ecx  +
mov edi eax +
mov eax [esi+4] +
lea edx [esi+0Ch] +
push edx  +
push eax  +
push edi  +
call sub_40A040  +
add esp 20h +
mov [esi+4] edi +
xor ebx ebx +
push 3FFh  +
lea eax [ebp+var_410+1] +
push ebx  +
push eax  +
mov byte ptr [ebp+var_410] bl +
call sub_426210  +
add esp 0Ch +
call sub_41AB50  +
mov edi eax +
cmp edi ebx +
jz loc_40F411  +
movzx ecx ds:byte_44534B +
push ecx  +
push offset aSafilelist  +
push offset aData  +
push 400h  +
lea edx [ebp+var_410] +
push edx  +
push edi  +
call sub_41AC50  +
push edi  +
call sub_41D100  +
add esp 1Ch +
mov edi 0Fh +
lea eax [ebp+var_410] +
mov [ebp+var_418] edi +
mov [ebp+var_41C] ebx +
mov byte ptr [ebp+var_42C] bl +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_40F431  +
sub eax edx +
push eax  +
lea eax [ebp+var_410] +
push eax  +
lea ecx [ebp+var_42C] +
call sub_402230  +
push 3  +
push offset asc_443074  +
lea ecx [ebp+var_448] +
mov [ebp+var_4] ebx +
mov [ebp+var_434] edi +
mov [ebp+var_438] ebx +
mov byte ptr [ebp+var_448] bl +
call sub_402230  +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_41C] ebx +
jz loc_40F711  +
mov ecx [ebp+var_438] +
cmp ecx ebx +
jz loc_40F711  +
mov [ebp+var_450] edi +
mov [ebp+var_454] ebx +
mov byte ptr [ebp+var_464] bl +
cmp [ebp+var_434] 10h +
mov eax [ebp+var_448] +
mov byte ptr [ebp+var_4] 2 +
jnb loc_40F4BD  +
lea eax [ebp+var_448] +
push ecx  +
push ebx  +
push eax  +
lea ecx [ebp+var_42C] +
call sub_409640  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_40F686  +
push edi  +
push ebx  +
lea ecx [ebp+var_480] +
push ecx  +
lea ecx [ebp+var_42C] +
call sub_40B410  +
mov esi eax +
lea edx [ebp+var_464] +
cmp edx esi +
jz loc_40F569  +
cmp [ebp+var_450] 10h +
jb loc_40F50E  +
mov eax [ebp+var_464] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_450] 0Fh +
mov [ebp+var_454] ebx +
mov byte ptr [ebp+var_464] bl +
cmp dword ptr [esi+14h] 10h +
jnb loc_40F541  +
mov eax [esi+10h] +
inc eax  +
push eax  +
lea ecx [ebp+var_464] +
push esi  +
push ecx  +
call loc_425800  +
add esp 0Ch +
jmp loc_40F54B  +
mov edx [esi] +
mov [ebp+var_464] edx +
mov [esi] ebx +
mov eax [esi+10h] +
mov [ebp+var_454] eax +
mov ecx [esi+14h] +
mov [ebp+var_450] ecx +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] ebx +
mov [esi] bl +
cmp [ebp+var_46C] 10h +
mov byte ptr [ebp+var_4] 2 +
jb loc_40F585  +
mov edx [ebp+var_480] +
push edx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_484] +
lea eax [ebp+var_464] +
push eax  +
call sub_40F280  +
mov ecx [ebp+var_438] +
push 0FFFFFFFFh  +
add ecx edi +
push ecx  +
lea edx [ebp+var_480] +
push edx  +
lea ecx [ebp+var_42C] +
call sub_40B410  +
mov esi eax +
lea eax [ebp+var_42C] +
cmp eax esi +
jz loc_40F630  +
cmp [ebp+var_418] 10h +
jb loc_40F5D8  +
mov ecx [ebp+var_42C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov edi 0Fh +
mov [ebp+var_418] edi +
mov [ebp+var_41C] ebx +
mov byte ptr [ebp+var_42C] bl +
cmp dword ptr [esi+14h] 10h +
jnb loc_40F60C  +
mov eax [esi+10h] +
inc eax  +
push eax  +
lea edx [ebp+var_42C] +
push esi  +
push edx  +
call loc_425800  +
add esp 0Ch +
jmp loc_40F616  +
mov eax [esi] +
mov [ebp+var_42C] eax +
mov [esi] ebx +
mov ecx [esi+10h] +
mov [ebp+var_41C] ecx +
mov edx [esi+14h] +
mov [ebp+var_418] edx +
mov [esi+14h] edi +
mov [esi+10h] ebx +
mov [esi] bl +
cmp [ebp+var_46C] 10h +
mov byte ptr [ebp+var_4] 2 +
jb loc_40F64C  +
mov eax [ebp+var_480] +
push eax  +
call sub_42520B  +
add esp 4 +
cmp [ebp+var_434] 10h +
mov eax [ebp+var_448] +
jnb loc_40F661  +
lea eax [ebp+var_448] +
mov ecx [ebp+var_438] +
push ecx  +
push ebx  +
push eax  +
lea ecx [ebp+var_42C] +
call sub_409640  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_40F4D6  +
mov esi [ebp+var_484] +
lea edx [ebp+var_42C] +
push edx  +
mov ecx esi +
call sub_40F280  +
mov esi 10h +
cmp [ebp+var_450] esi +
jb loc_40F6B0  +
mov eax [ebp+var_464] +
push eax  +
call sub_42520B  +
add esp 4 +
mov edi 0Fh +
cmp [ebp+var_434] esi +
jb loc_40F6CC  +
mov ecx [ebp+var_448] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_434] edi +
mov [ebp+var_438] ebx +
mov byte ptr [ebp+var_448] bl +
cmp [ebp+var_418] esi +
jb loc_40F6F5  +
mov edx [ebp+var_42C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov esi 10h +
jmp loc_40F6B5  +
***
push 0FFFFFFFFh  +
push offset loc_43E2E8  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor ebx ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] ebx +
mov [ebp+var_34] ebx +
lea eax [ebp+var_3C] +
push eax  +
mov byte ptr [ebp+var_4] 1 +
call sub_40F350  +
add esp 4 +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_3C] +
call sub_40F280  +
push ebx  +
mov esi 0Fh +
push offset unk_441AD0  +
lea ecx [ebp+var_2C] +
lea edi [ebx+1] +
mov [ebp+var_18] esi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
call sub_402230  +
lea edx [ebp+var_2C] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_40EDD0  +
add esp 8 +
cmp [ebp+var_1C] ebx +
jz loc_40F7BB  +
lea ecx [ebp+var_2C] +
push ecx  +
call sub_40ED50  +
add esp 4 +
mov edi eax +
cmp [ebp+var_18] 10h +
jb loc_40F7CD  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_18] esi +
mov esi [ebp+var_3C] +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
cmp esi ebx +
jz loc_40F7F8  +
mov eax [ebp+var_40] +
mov edx [ebp+var_38] +
push eax  +
lea ecx [ebp+var_30] +
push ecx  +
push edx  +
push esi  +
call sub_40A040  +
push esi  +
call sub_42520B  +
add esp 14h +
cmp [ebp+arg_14] 10h +
jb loc_40F80A  +
mov eax [ebp+arg_0] +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
pop ebp  +
jmp sub_427491  +
***
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
lea eax [ebp+arg_C] +
push eax  +
mov eax [ebp+arg_0] +
push 0  +
push ecx  +
push edx  +
push eax  +
call sub_42761B  +
add esp 14h +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_40F874  +
cmp edx 7FFFFFFFh +
jbe loc_40F879  +
mov eax 80070057h +
test eax eax +
js loc_40F8CB  +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
xor eax eax +
push edi  +
mov esi edx +
test edx edx +
jz loc_40F8BF  +
mov edi [ebp+arg_8] +
mov ebx 7FFFFFFEh +
sub ebx edx +
sub edi ecx +
lea edx [ebx+esi] +
test edx edx +
jz loc_40F8BB  +
mov dl [edi+ecx] +
test dl dl +
jz loc_40F8BB  +
mov [ecx] dl +
inc ecx  +
dec esi  +
jnz loc_40F897  +
pop edi  +
dec ecx  +
pop esi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
pop ebx  +
pop ebp  +
retn 0Ch  +
test esi esi +
jnz loc_40F8C5  +
dec ecx  +
mov eax 8007007Ah +
pop edi  +
pop esi  +
mov byte ptr [ecx] 0 +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_0] +
push eax  +
push ecx  +
push edx  +
call sub_40F860  +
pop ebp  +
retn   +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov ebx 10h +
cmp [edi+14h] ebx +
jb loc_40F917  +
mov eax [edi] +
jmp loc_40F919  +
mov eax edi +
lea ecx [ebp+var_44] +
push ecx  +
lea edx [ebp+var_3C] +
push edx  +
lea ecx [ebp+var_29] +
push ecx  +
lea edx [ebp+var_34] +
push edx  +
lea ecx [ebp+var_40] +
push ecx  +
lea edx [ebp+var_30] +
push edx  +
lea ecx [ebp+var_38] +
push ecx  +
lea edx [ebp+var_4C] +
push edx  +
lea ecx [ebp+var_48] +
push ecx  +
push offset a4d02d02dt02d02  +
push eax  +
call sub_427ACD  +
add esp 2Ch +
cmp eax 9 +
jnz loc_40F96E  +
mov al byte ptr [ebp+var_29] +
cmp al 2Bh +
jz loc_40F9AE  +
cmp al 2Dh +
jz loc_40F9AE  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
cmp [edi+14h] ebx +
jb loc_40F975  +
mov edi [edi] +
lea edx [ebp+var_34] +
push edx  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_30] +
push ecx  +
lea edx [ebp+var_38] +
push edx  +
mov edx off_44F8B4 +
lea eax [ebp+var_4C] +
push eax  +
lea ecx [ebp+var_48] +
push ecx  +
push edx  +
push edi  +
call sub_427ACD  +
add esp 20h +
cmp eax 6 +
jnz loc_40F95B  +
xor eax eax +
mov byte ptr [ebp+var_29] 5Ah +
mov [ebp+var_3C] eax +
mov [ebp+var_44] eax +
mov ecx [ebp+var_4C] +
mov edx [ebp+var_38] +
xor eax eax +
mov [ebp+var_29+1] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
mov eax [ebp+var_48] +
add eax 0FFFFF894h +
mov [ebp+var_14] eax +
mov eax [ebp+var_30] +
dec ecx  +
mov [ebp+var_20] eax +
mov [ebp+var_18] ecx +
mov ecx [ebp+var_40] +
mov [ebp+var_1C] edx +
mov edx [ebp+var_34] +
lea eax [ebp+var_29+1] +
push eax  +
mov [ebp+var_24] ecx +
mov [ebp+var_29+1] edx +
call sub_427A4D  +
mov [esi+4] edx +
mov ecx eax +
mov edi edx +
mov edx ecx +
and edx edi +
add esp 4 +
mov [esi] eax +
cmp edx 0FFFFFFFFh +
jz loc_40F95B  +
mov bl byte ptr [ebp+var_29] +
cmp bl 5Ah +
jz loc_40FA49  +
mov eax [ebp+var_3C] +
mov edx eax +
shl edx 4 +
sub edx eax +
mov eax [ebp+var_44] +
lea edx [eax+edx*4] +
mov eax edx +
shl eax 4 +
sub eax edx +
add eax eax +
add eax eax +
cdq   +
cmp bl 2Bh +
jnz loc_40FA5C  +
sub ecx eax +
sbb edi edx +
mov [esi] ecx +
mov [esi+4] edi +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
add eax ecx +
mov ecx [ebp+var_4] +
adc edx edi +
pop edi  +
mov [esi] eax +
mov [esi+4] edx +
pop esi  +
xor ecx ebp +
mov al 1 +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx dword_451AC4 +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_40FAB0  +
sub eax edi +
push eax  +
push esi  +
call sub_41D9C0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43E318  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 4  +
call sub_41E1C0  +
mov edx [ebp+arg_0] +
mov eax edx +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_443314 +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40FB16  +
sub eax edi +
push eax  +
push edx  +
lea ecx [esi+20h] +
call sub_41D9C0  +
mov byte ptr [esi+2Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
mov dword ptr [ecx] offset off_443314 +
jmp sub_41E200  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_443314 +
call sub_41E200  +
test [ebp+arg_0] 1 +
jz loc_40FB90  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 120h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 11Ch  +
lea eax [ebp+VersionInformation] +
push 0  +
push eax  +
mov byte ptr [esi] 0 +
call sub_426210  +
mov edi ds:GetVersionExW +
add esp 0Ch +
lea ecx [ebp+VersionInformation] +
push ecx  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call edi  +
test eax eax +
jnz loc_40FC05  +
lea edx [ebp+VersionInformation] +
push edx  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call edi  +
test eax eax +
jz loc_40FC2D  +
mov eax [ebp+VersionInformation.dwBuildNumber] +
mov ecx [ebp+VersionInformation.dwMinorVersion] +
mov edx [ebp+VersionInformation.dwMajorVersion] +
push eax  +
movzx eax [ebp+arg_4] +
push ecx  +
push edx  +
push offset aWindowsMajDMin  +
push eax  +
push esi  +
call sub_40F840  +
add esp 18h +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+0D0h] 10h +
jb loc_40FC5B  +
mov eax [esi+0BCh] +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword ptr [esi+0D0h] 0Fh +
mov [esi+0CCh] eax +
mov [esi+0BCh] al +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E360  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+var_2C] esi +
cmp ecx edi +
jz loc_40FCCC  +
mov edx [ecx] +
mov eax [edx+4] +
call eax  +
mov ecx [esi] +
mov eax [ecx+4] +
mov [ebp+var_4] edi +
cmp [eax+esi+0Ch] edi +
jnz loc_40FCE9  +
mov eax [eax+esi+3Ch] +
cmp eax edi +
jz loc_40FCE9  +
mov ecx eax +
call sub_406E00  +
mov eax [esi] +
mov ecx [eax+4] +
cmp [ecx+esi+0Ch] edi +
setz cl  +
mov [ebp+var_28] cl +
mov [ebp+var_4] 1 +
test cl cl +
jz loc_40FDBB  +
mov ecx [eax+4] +
lea edx [ebp+var_1C] +
push edx  +
add ecx esi +
call sub_404B40  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_407000  +
mov ebx [ebp+var_1C] +
add esp 4 +
mov [ebp+var_24] eax +
mov byte ptr [ebp+var_4] 1 +
cmp ebx edi +
jz loc_40FD68  +
push edi  +
lea ecx [ebp+var_20] +
call sub_424920  +
mov eax [ebx+4] +
cmp eax edi +
jbe loc_40FD49  +
cmp eax 0FFFFFFFFh +
jnb loc_40FD49  +
dec eax  +
mov [ebx+4] eax +
mov edi [ebx+4] +
neg edi  +
sbb edi edi +
lea ecx [ebp+var_20] +
not edi  +
call sub_424948  +
and edi ebx +
jz loc_40FD68  +
mov eax [edi] +
mov edx [eax] +
push 1  +
mov ecx edi +
call edx  +
mov ecx [esi] +
mov eax [ecx+4] +
mov ecx [ecx+4] +
mov dl [ecx+esi+40h] +
mov ebx [ebp+arg_4] +
mov ecx [ecx+esi+38h] +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
mov byte ptr [ebp+var_20] dl +
mov ebx [ebp+var_20] +
mov edx [ebp+var_24] +
mov edi [edx] +
push ebx  +
add eax esi +
push eax  +
push ecx  +
mov byte ptr [ebp+var_34] 0 +
mov eax [ebp+var_34] +
push eax  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx edx +
mov edx [edi+14h] +
mov byte ptr [ebp+var_4] 3 +
call edx  +
cmp byte ptr [ebp+arg_0] 0 +
jz loc_40FDB4  +
mov [ebp+var_18] 4 +
mov [ebp+var_4] 1 +
mov ecx [esi] +
mov ecx [ecx+4] +
mov edx [ebp+var_18] +
add ecx esi +
test edx edx +
jz loc_40FDDF  +
mov eax [ecx+0Ch] +
or eax edx +
cmp dword ptr [ecx+38h] 0 +
jnz loc_40FDD7  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
mov [ebp+var_4] 5 +
call sub_425011  +
test al al +
jnz loc_40FDF6  +
mov ecx esi +
call sub_406E90  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx [eax+esi+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_40FE11  +
mov edx [ecx] +
mov eax [edx+8] +
call eax  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ebp-14h] +
mov eax [ecx] +
mov eax [eax+4] +
add eax ecx +
mov ecx [eax+0Ch] +
or ecx 4 +
cmp dword ptr [eax+38h] 0 +
jnz loc_40FE40  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_40FE60  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_40FE58 +
retn   +
***
mov esi [ebp-14h] +
jmp loc_40FDBB  +
***
push 0  +
push 0  +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43E3A0  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+var_2C] esi +
cmp ecx edi +
jz loc_40FEBC  +
mov edx [ecx] +
mov eax [edx+4] +
call eax  +
mov ecx [esi] +
mov eax [ecx+4] +
mov [ebp+var_4] edi +
cmp [eax+esi+0Ch] edi +
jnz loc_40FED9  +
mov eax [eax+esi+3Ch] +
cmp eax edi +
jz loc_40FED9  +
mov ecx eax +
call sub_406E00  +
mov eax [esi] +
mov ecx [eax+4] +
cmp [ecx+esi+0Ch] edi +
setz cl  +
mov [ebp+var_28] cl +
mov [ebp+var_4] 1 +
test cl cl +
jz loc_40FFA7  +
mov ecx [eax+4] +
lea edx [ebp+var_1C] +
push edx  +
add ecx esi +
call sub_404B40  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_407000  +
mov ebx [ebp+var_1C] +
add esp 4 +
mov [ebp+var_24] eax +
mov byte ptr [ebp+var_4] 1 +
cmp ebx edi +
jz loc_40FF58  +
push edi  +
lea ecx [ebp+var_20] +
call sub_424920  +
mov eax [ebx+4] +
cmp eax edi +
jbe loc_40FF39  +
cmp eax 0FFFFFFFFh +
jnb loc_40FF39  +
dec eax  +
mov [ebx+4] eax +
mov edi [ebx+4] +
neg edi  +
sbb edi edi +
lea ecx [ebp+var_20] +
not edi  +
call sub_424948  +
and edi ebx +
jz loc_40FF58  +
mov eax [edi] +
mov edx [eax] +
push 1  +
mov ecx edi +
call edx  +
mov ecx [esi] +
mov eax [ecx+4] +
mov ecx [ecx+4] +
mov dl [ecx+esi+40h] +
mov ebx [ebp+arg_0] +
mov ecx [ecx+esi+38h] +
push ebx  +
mov byte ptr [ebp+var_20] dl +
mov ebx [ebp+var_20] +
mov edx [ebp+var_24] +
mov edi [edx] +
push ebx  +
add eax esi +
push eax  +
push ecx  +
mov byte ptr [ebp+var_34] 0 +
mov eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_34] +
push ecx  +
mov ecx edx +
mov edx [edi+4] +
mov byte ptr [ebp+var_4] 3 +
call edx  +
cmp byte ptr [ebp+var_34] 0 +
jz loc_40FFA0  +
mov [ebp+var_18] 4 +
mov [ebp+var_4] 1 +
mov ecx [esi] +
mov ecx [ecx+4] +
mov edx [ebp+var_18] +
add ecx esi +
test edx edx +
jz loc_40FFCB  +
mov eax [ecx+0Ch] +
or eax edx +
cmp dword ptr [ecx+38h] 0 +
jnz loc_40FFC3  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
mov [ebp+var_4] 5 +
call sub_425011  +
test al al +
jnz loc_40FFE2  +
mov ecx esi +
call sub_406E90  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx [eax+esi+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_40FFFD  +
mov edx [ecx] +
mov eax [edx+8] +
call eax  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp-14h] +
mov eax [ecx] +
mov eax [eax+4] +
add eax ecx +
mov ecx [eax+0Ch] +
or ecx 4 +
cmp dword ptr [eax+38h] 0 +
jnz loc_41002C  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_41004C  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_410044 +
retn   +
***
mov esi [ebp-14h] +
jmp loc_40FFA7  +
***
push 0  +
push 0  +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43E3CE  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [esi+0BCh] +
xor eax eax +
mov dword ptr [ecx+14h] 0Fh +
mov [ecx+10h] eax +
mov [ecx] al +
push eax  +
push offset unk_441AD0  +
mov [ebp+var_4] eax +
mov [esi] al +
mov [esi+28h] al +
mov [esi+30h] al +
mov [esi+3Ch] al +
mov [esi+64h] al +
mov [esi+8Ch] al +
mov [esi+0B4h] eax +
mov [esi+0B8h] eax +
call sub_402230  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov eax edx +
push edi  +
mov esi ecx +
lea edi [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4100F0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [esi+2Ch] +
call sub_402230  +
mov ecx [ebp+arg_4] +
mov eax ecx +
lea edi [eax+1] +
jmp loc_410110  +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_410110  +
sub eax edi +
push eax  +
push ecx  +
lea ecx [esi+48h] +
call sub_402230  +
mov ecx [ebp+arg_8] +
mov eax ecx +
lea edi [eax+1] +
jmp loc_410130  +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_410130  +
sub eax edi +
push eax  +
push ecx  +
lea ecx [esi+10h] +
call sub_402230  +
mov edx [ebp+arg_C] +
mov eax edx +
lea edi [eax+1] +
jmp loc_410150  +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_410150  +
sub eax edi +
push eax  +
push edx  +
lea ecx [esi+64h] +
call sub_402230  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edx [eax+1] +
mov edi edi +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_410180  +
sub eax edx +
push eax  +
push esi  +
mov ecx offset dword_44FA6C +
call sub_402230  +
mov esi [ebp+arg_4] +
mov eax esi +
lea edx [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4101A0  +
sub eax edx +
push eax  +
push esi  +
mov ecx offset dword_44FA88 +
call sub_402230  +
mov ebx [ebp+arg_8] +
mov eax ebx +
lea edx [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4101C0  +
sub eax edx +
push eax  +
push ebx  +
mov ecx offset dword_44FAA4 +
call sub_402230  +
mov edi [ebp+arg_C] +
mov eax edi +
lea edx [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4101E0  +
sub eax edx +
push eax  +
push edi  +
mov ecx offset dword_44FAC0 +
call sub_402230  +
mov edx [ebp+arg_10] +
mov eax edx +
lea esi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_410200  +
sub eax esi +
push eax  +
push edx  +
mov ecx offset dword_44FB30 +
call sub_402230  +
mov edx [ebp+arg_14] +
mov eax edx +
lea esi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_410220  +
sub eax esi +
push eax  +
push edx  +
mov ecx offset dword_44FB4C +
call sub_402230  +
mov edx [ebp+arg_18] +
mov eax edx +
lea esi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_410240  +
sub eax esi +
push eax  +
push edx  +
mov ecx offset dword_44FAF8 +
call sub_402230  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push edi  +
push ebx  +
push eax  +
push ecx  +
mov ecx dword_451AD8 +
call sub_4100E0  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E447  +
mov eax large fs:0 +
push eax  +
sub esp 138h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor esi esi +
cmp dword_44FB24 esi +
jnz loc_4102DE  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aProcessxmlfile  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_410847  +
lea ecx [ebp+var_144] +
call sub_41E7B0  +
mov eax dword_44FB14 +
mov ebx 8 +
mov [ebp+var_4] esi +
mov [ebp+var_F4] esi +
mov [ebp+var_F8] esi +
cmp dword_44FB28 ebx +
jnb loc_41030F  +
mov eax offset dword_44FB14 +
push offset aR  +
push eax  +
lea edx [ebp+var_F8] +
push edx  +
call sub_427FC2  +
add esp 0Ch +
cmp eax esi +
jnz loc_4107F3  +
mov ecx [ebp+var_F8] +
cmp ecx esi +
jz loc_4107F3  +
push esi  +
push ecx  +
lea ecx [ebp+var_144] +
call sub_41E860  +
mov eax [ebp+var_F8] +
push eax  +
call sub_42665D  +
add esp 4 +
lea ecx [ebp+var_144] +
call sub_41DC30  +
cmp eax esi +
jz loc_41079A  +
push offset aAmtlib_paramet  +
mov ecx eax +
call sub_41DBC0  +
mov [ebp+var_FC] eax +
cmp eax esi +
jz loc_41077E  +
push offset unk_441AD0  +
lea ecx [ebp+var_2C] +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_B8] +
mov byte ptr [ebp+var_4] 1 +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_80] +
mov byte ptr [ebp+var_4] 2 +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_48] +
mov byte ptr [ebp+var_4] 3 +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_9C] +
mov byte ptr [ebp+var_4] 4 +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_D4] +
mov byte ptr [ebp+var_4] 5 +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_F0] +
mov byte ptr [ebp+var_4] 6 +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_64] +
mov byte ptr [ebp+var_4] 7 +
call sub_4023B0  +
mov byte ptr [ebp+var_4] bl +
mov ecx [ebp+var_F4] +
push ecx  +
mov ecx [ebp+var_FC] +
call sub_41DC10  +
mov [ebp+var_F4] eax +
test eax eax +
jz loc_410602  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
mov edi eax +
test edi edi +
jz loc_410416  +
push offset aName  +
mov ecx edi +
call sub_41E450  +
mov ecx eax +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_410456  +
sub ecx esi +
push ecx  +
push eax  +
lea ecx [ebp+var_2C] +
call sub_402230  +
mov edx off_44F9E4 +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_410474  +
sub eax esi +
push eax  +
push 0  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_4104AE  +
mov ecx edi +
call sub_41DCF0  +
test eax eax +
jz loc_410416  +
push eax  +
lea ecx [ebp+var_B8] +
call sub_4023F0  +
jmp loc_410416  +
mov edx off_44F9E8 +
mov eax edx +
lea esi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4104C0  +
sub eax esi +
push eax  +
push 0  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_4104F7  +
mov ecx edi +
call sub_41DCF0  +
test eax eax +
jz loc_410416  +
push eax  +
lea ecx [ebp+var_80] +
call sub_4023F0  +
jmp loc_410416  +
mov ecx off_44F9EC +
push 0  +
push ecx  +
lea ecx [ebp+var_2C] +
call sub_4096F0  +
cmp eax 0FFFFFFFFh +
jz loc_41052A  +
mov ecx edi +
call sub_41DCF0  +
test eax eax +
jz loc_410416  +
push eax  +
lea ecx [ebp+var_48] +
call sub_4023F0  +
jmp loc_410416  +
mov edx off_44F9B8 +
push 0  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_4096F0  +
cmp eax 0FFFFFFFFh +
jz loc_410560  +
mov ecx edi +
call sub_41DCF0  +
test eax eax +
jz loc_410416  +
push eax  +
lea ecx [ebp+var_9C] +
call sub_4023F0  +
jmp loc_410416  +
mov eax off_44F9A8 +
push 0  +
push eax  +
lea ecx [ebp+var_2C] +
call sub_4096F0  +
cmp eax 0FFFFFFFFh +
jz loc_410595  +
mov ecx edi +
call sub_41DCF0  +
test eax eax +
jz loc_410416  +
push eax  +
lea ecx [ebp+var_D4] +
call sub_4023F0  +
jmp loc_410416  +
mov ecx off_44F9AC +
push 0  +
push ecx  +
lea ecx [ebp+var_2C] +
call sub_4096F0  +
cmp eax 0FFFFFFFFh +
jz loc_4105CB  +
mov ecx edi +
call sub_41DCF0  +
test eax eax +
jz loc_410416  +
push eax  +
lea ecx [ebp+var_F0] +
call sub_4023F0  +
jmp loc_410416  +
mov edx off_44F9C0 +
push 0  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_4096F0  +
cmp eax 0FFFFFFFFh +
jz loc_410416  +
mov ecx edi +
call sub_41DCF0  +
test eax eax +
jz loc_410416  +
push eax  +
lea ecx [ebp+var_64] +
call sub_4023F0  +
jmp loc_410416  +
cmp [ebp+var_A8] 0 +
jz loc_41070D  +
cmp [ebp+var_70] 0 +
jz loc_41070D  +
cmp [ebp+var_38] 0 +
jz loc_41070D  +
cmp [ebp+var_8C] 0 +
jz loc_41070D  +
cmp [ebp+var_54] 0 +
jz loc_41070D  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aProcessxmlfi_0  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
mov ebx [ebp+var_64] +
mov eax 10h +
add esp 14h +
cmp [ebp+var_50] eax +
jnb loc_41066B  +
lea ebx [ebp+var_64] +
cmp [ebp+var_DC] eax +
jb loc_410681  +
mov edx [ebp+var_F0] +
mov [ebp+var_F4] edx +
jmp loc_41068D  +
lea ecx [ebp+var_F0] +
mov [ebp+var_F4] ecx +
mov edi [ebp+var_D4] +
cmp [ebp+var_C0] eax +
jnb loc_4106A1  +
lea edi [ebp+var_D4] +
mov esi [ebp+var_9C] +
cmp [ebp+var_88] eax +
jnb loc_4106B5  +
lea esi [ebp+var_9C] +
mov edx [ebp+var_48] +
cmp [ebp+var_34] eax +
jnb loc_4106C0  +
lea edx [ebp+var_48] +
mov ecx [ebp+var_80] +
cmp [ebp+var_6C] eax +
jnb loc_4106CB  +
lea ecx [ebp+var_80] +
cmp [ebp+var_A4] eax +
mov eax [ebp+var_B8] +
jnb loc_4106DF  +
lea eax [ebp+var_B8] +
push ebx  +
mov ebx [ebp+var_F4] +
push ebx  +
push edi  +
push esi  +
push edx  +
push ecx  +
push eax  +
call sub_410170  +
mov eax [ebp+var_48] +
add esp 1Ch +
cmp [ebp+var_34] 10h +
jnb loc_410700  +
lea eax [ebp+var_48] +
push eax  +
call sub_40FA80  +
add esp 4 +
mov bl 1 +
jmp loc_410730  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aProcessxmlfi_1  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
xor bl bl +
lea ecx [ebp+var_64] +
call sub_421E10  +
lea ecx [ebp+var_F0] +
call sub_421E10  +
lea ecx [ebp+var_D4] +
call sub_421E10  +
lea ecx [ebp+var_9C] +
call sub_421E10  +
lea ecx [ebp+var_48] +
call sub_421E10  +
lea ecx [ebp+var_80] +
call sub_421E10  +
lea ecx [ebp+var_B8] +
call sub_421E10  +
lea ecx [ebp+var_2C] +
call sub_421E10  +
jmp loc_4107BD  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aProcessxmlfi_2  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
jmp loc_4107B3  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aProcessxmlfi_2  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
xor bl bl +
mov eax [ebp+var_110] +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_144] offset off_442A44 +
cmp eax offset unk_454B44 +
jz loc_4107E4  +
push eax  +
call sub_425D5C  +
add esp 4 +
lea ecx [ebp+var_144] +
call sub_41E200  +
mov al bl +
jmp loc_410849  +
mov edx dword_44FF1C +
push eax  +
mov eax dword_451A64 +
push offset aProcessxmlfi_3  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
mov eax [ebp+var_110] +
add esp 18h +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_144] offset off_442A44 +
cmp eax offset unk_454B44 +
jz loc_41083C  +
push eax  +
call sub_425D5C  +
add esp 4 +
lea ecx [ebp+var_144] +
call sub_41E200  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E508  +
mov eax large fs:0 +
push eax  +
sub esp 108h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov [ebp+var_44] ecx +
mov ecx [ebp+arg_10] +
mov [ebp+var_48] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_4C] ecx +
lea ecx [ebp+var_114] +
mov [ebp+var_40] edx +
mov [ebp+var_3C] eax +
call sub_41E7B0  +
mov eax dword_44FB14 +
xor ebx ebx +
cmp dword_44FB28 8 +
mov [ebp+var_4] ebx +
mov [ebp+var_38] ebx +
mov [ebp+var_2D] 1 +
mov [ebp+var_34] ebx +
jnb loc_4108E9  +
mov eax offset dword_44FB14 +
push offset aA  +
push eax  +
lea edx [ebp+var_34] +
push edx  +
call sub_427FC2  +
add esp 0Ch +
cmp eax ebx +
jnz loc_410FE5  +
mov ecx [ebp+var_34] +
cmp ecx ebx +
jz loc_410FE5  +
push ebx  +
push ecx  +
lea ecx [ebp+var_114] +
call sub_41E860  +
mov eax [ebp+var_34] +
push eax  +
call sub_42665D  +
add esp 4 +
lea ecx [ebp+var_114] +
call sub_41DC30  +
cmp eax ebx +
jz loc_410F8A  +
push offset aAmtlib_paramet  +
mov ecx eax +
call sub_41DBC0  +
mov edi eax +
cmp edi ebx +
jz loc_410F6E  +
push offset aKey  +
lea ecx [ebp+var_CC] +
call sub_41F360  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 1 +
call sub_41E330  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
lea ecx [ebp+var_CC] +
mov esi eax +
mov byte ptr [ebp+var_4] bl +
call sub_41F420  +
cmp esi ebx +
jz loc_4109D8  +
mov ecx off_44F9BC +
push ecx  +
push offset aName  +
mov ecx esi +
call sub_41E480  +
cmp dword_44FAF0 10h +
mov eax dword_44FADC +
jnb loc_4109AF  +
mov eax offset dword_44FADC +
push eax  +
lea ecx [ebp+var_7C] +
call sub_40FAD0  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 2 +
call sub_41E330  +
lea ecx [ebp+var_7C] +
mov byte ptr [ebp+var_4] bl +
mov [ebp+var_7C] offset off_443314 +
call sub_41E200  +
jmp loc_4109FC  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aUpdatexmlfileE  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
push offset aKey  +
lea ecx [ebp+var_CC] +
call sub_41F360  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 3 +
call sub_41E330  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
lea ecx [ebp+var_CC] +
mov esi eax +
mov byte ptr [ebp+var_4] bl +
call sub_41F420  +
cmp esi ebx +
jz loc_410A74  +
mov ecx off_44F9C0 +
push ecx  +
push offset aName  +
mov ecx esi +
call sub_41E480  +
mov edx [ebp+var_44] +
push edx  +
lea ecx [ebp+var_7C] +
call sub_40FAD0  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 4 +
call sub_41E330  +
lea ecx [ebp+var_7C] +
mov byte ptr [ebp+var_4] bl +
mov [ebp+var_7C] offset off_443314 +
call sub_41E200  +
jmp loc_410A98  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aUpdatexmlfileE  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
push offset aKey  +
lea ecx [ebp+var_CC] +
call sub_41F360  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 5 +
call sub_41E330  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
lea ecx [ebp+var_CC] +
mov esi eax +
mov byte ptr [ebp+var_4] bl +
call sub_41F420  +
cmp esi ebx +
jz loc_410B10  +
mov ecx off_44F9C8 +
push ecx  +
push offset aName  +
mov ecx esi +
call sub_41E480  +
mov edx [ebp+var_40] +
push edx  +
lea ecx [ebp+var_7C] +
call sub_40FAD0  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 6 +
call sub_41E330  +
lea ecx [ebp+var_7C] +
mov byte ptr [ebp+var_4] bl +
mov [ebp+var_7C] offset off_443314 +
call sub_41E200  +
jmp loc_410B34  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aUpdatexmlfileE  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
push offset aKey  +
lea ecx [ebp+var_CC] +
call sub_41F360  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 7 +
call sub_41E330  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
lea ecx [ebp+var_CC] +
mov esi eax +
mov byte ptr [ebp+var_4] bl +
call sub_41F420  +
cmp esi ebx +
jz loc_410BAC  +
mov ecx off_44F9C4 +
push ecx  +
push offset aName  +
mov ecx esi +
call sub_41E480  +
mov edx [ebp+var_3C] +
push edx  +
lea ecx [ebp+var_7C] +
call sub_40FAD0  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 8 +
call sub_41E330  +
lea ecx [ebp+var_7C] +
mov byte ptr [ebp+var_4] bl +
mov [ebp+var_7C] offset off_443314 +
call sub_41E200  +
jmp loc_410BD0  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aUpdatexmlfileE  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
push offset aKey  +
lea ecx [ebp+var_CC] +
call sub_41F360  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 9 +
call sub_41E330  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
lea ecx [ebp+var_CC] +
mov esi eax +
mov byte ptr [ebp+var_4] bl +
call sub_41F420  +
cmp esi ebx +
jz loc_410C48  +
mov ecx off_44FA14 +
push ecx  +
push offset aName  +
mov ecx esi +
call sub_41E480  +
mov edx [ebp+var_4C] +
push edx  +
lea ecx [ebp+var_7C] +
call sub_40FAD0  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 0Ah +
call sub_41E330  +
lea ecx [ebp+var_7C] +
mov byte ptr [ebp+var_4] bl +
mov [ebp+var_7C] offset off_443314 +
call sub_41E200  +
jmp loc_410C6C  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aUpdatexmlfileE  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
cmp dword_44FB94 ebx +
jz loc_410D23  +
push offset aKey  +
lea ecx [ebp+var_CC] +
call sub_41F360  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0Bh +
call sub_41E330  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
lea ecx [ebp+var_CC] +
mov esi eax +
mov byte ptr [ebp+var_4] bl +
call sub_41F420  +
cmp esi ebx +
jz loc_410D00  +
mov ecx off_44FA40 +
push ecx  +
push offset aName  +
mov ecx esi +
call sub_41E480  +
cmp dword_44FB98 10h +
mov eax dword_44FB84 +
jnb loc_410CD7  +
mov eax offset dword_44FB84 +
push eax  +
lea ecx [ebp+var_7C] +
call sub_40FAD0  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 0Ch +
call sub_41E330  +
lea ecx [ebp+var_7C] +
mov byte ptr [ebp+var_4] bl +
mov [ebp+var_7C] offset off_443314 +
call sub_41E200  +
jmp loc_410D45  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aUpdatexmlfileE  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
mov [ebp+var_2D] bl +
jmp loc_410D42  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aUpdatexmlfileN  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 14h +
push offset unk_441AD0  +
lea ecx [ebp+var_2C] +
call sub_4023B0  +
mov byte ptr [ebp+var_4] 0Dh +
mov eax [ebp+var_38] +
push eax  +
mov ecx edi +
call sub_41DC10  +
mov [ebp+var_38] eax +
cmp eax ebx +
jz loc_410E97  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
push offset aName  +
mov ecx eax +
call sub_41E450  +
mov ecx eax +
lea esi [ecx+1] +
mov dl [ecx] +
inc ecx  +
cmp dl bl +
jnz loc_410D86  +
sub ecx esi +
push ecx  +
push eax  +
lea ecx [ebp+var_2C] +
call sub_402230  +
mov edx off_44F908 +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_410DA4  +
sub eax esi +
push eax  +
push ebx  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_410D56  +
mov ecx [ebp+var_38] +
push ecx  +
mov ecx edi +
call sub_41DB60  +
cmp al 1 +
jnz loc_410E30  +
push offset aKey  +
lea ecx [ebp+var_CC] +
call sub_41F360  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0Eh +
call sub_41E330  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+14h] +
call eax  +
lea ecx [ebp+var_CC] +
mov esi eax +
mov byte ptr [ebp+var_4] 0Dh +
call sub_41F420  +
cmp esi ebx +
jnz loc_410E59  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aUpdatexmlfileE  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
jmp loc_410D56  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aUpdatexmlfil_0  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
jmp loc_410D56  +
mov edx off_44F908 +
push edx  +
push offset aName  +
mov ecx esi +
call sub_41E480  +
mov eax [ebp+var_48] +
push eax  +
lea ecx [ebp+var_7C] +
call sub_40FAD0  +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 0Fh +
call sub_41E330  +
lea ecx [ebp+var_7C] +
mov byte ptr [ebp+var_4] 0Dh +
mov [ebp+var_7C] offset off_443314 +
call sub_41E200  +
mov edx off_44F908 +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_410EA2  +
sub eax esi +
push eax  +
push ebx  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jnz loc_410EED  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aUpdatexmlfileW  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_2C] +
mov [ebp+var_2D] bl +
call sub_421E10  +
jmp loc_410FAE  +
cmp [ebp+var_2D] 1 +
jnz loc_410F64  +
cmp dword_44FB28 8 +
mov eax dword_44FB14 +
jnb loc_410F06  +
mov eax offset dword_44FB14 +
push offset aW  +
push eax  +
lea eax [ebp+var_34] +
push eax  +
call sub_427FC2  +
add esp 0Ch +
cmp eax ebx +
jnz loc_410F58  +
mov eax [ebp+var_34] +
cmp eax ebx +
jz loc_410F58  +
push eax  +
lea ecx [ebp+var_114] +
call sub_41DD10  +
test al al +
jnz loc_410F58  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aUpdatexmlfileF  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 14h +
mov [ebp+var_2D] bl +
mov eax [ebp+var_34] +
push eax  +
call sub_42665D  +
add esp 4 +
lea ecx [ebp+var_2C] +
call sub_421E10  +
jmp loc_410FAE  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aUpdatexmlfileX  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
jmp loc_410FA3  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aUpdatexmlfileX  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
mov [ebp+var_2D] bl +
add esp 14h +
mov eax [ebp+var_E0] +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_114] offset off_442A44 +
cmp eax offset unk_454B44 +
jz loc_410FD5  +
push eax  +
call sub_425D5C  +
add esp 4 +
lea ecx [ebp+var_114] +
call sub_41E200  +
mov al [ebp+var_2D] +
jmp loc_41103B  +
mov edx dword_44FF1C +
push eax  +
mov eax dword_451A64 +
push offset aUpdatexmlfil_1  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
mov eax [ebp+var_E0] +
add esp 18h +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_114] offset off_442A44 +
cmp eax offset unk_454B44 +
jz loc_41102E  +
push eax  +
call sub_425D5C  +
add esp 4 +
lea ecx [ebp+var_114] +
call sub_41E200  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E549  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov esi [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov eax [ebp+arg_4] +
mov edx [eax+10h] +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
lea edi [eax+1] +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4110C0  +
sub eax edi +
mov edi [esi+10h] +
add eax edx +
cmp edi eax +
ja loc_4110F8  +
cmp [esi+14h] eax +
jz loc_4110F8  +
push 1  +
push eax  +
mov ecx esi +
call sub_4017A0  +
test al al +
jz loc_4110F8  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4110F2  +
mov eax [esi] +
jmp loc_4110F4  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
mov ecx [ebp+arg_4] +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx esi +
call sub_401BF0  +
mov edi [ebp+arg_8] +
mov eax edi +
lea edx [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411110  +
sub eax edx +
push eax  +
push edi  +
mov ecx esi +
call sub_401CE0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
push esi  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_401BF0  +
mov esi [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push eax  +
mov ecx esi +
mov byte ptr [esi] 0 +
call sub_402420  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E589  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
mov [ebp+var_10] 0 +
xor eax eax +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
mov [ebp+var_4] eax +
movzx eax word ptr [esi] +
mov [ebp+var_10] 1 +
test ax ax +
jz loc_4111EF  +
movzx eax ax +
push eax  +
push 1  +
mov ecx edi +
call sub_403D70  +
movzx eax word ptr [esi+2] +
add esi 2 +
test ax ax +
jnz loc_4111D6  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov [ebp+var_4] 0 +
call sub_411180  +
add esp 4 +
mov eax esi +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push (offset loc_43E5BA+1)  +
mov eax large fs:0 +
push eax  +
sub esp 140h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
push 80h  +
lea eax [ebp+var_110] +
push 0  +
push eax  +
mov [ebp+var_14C] 80h +
mov byte ptr [edi] 0 +
call sub_426210  +
add esp 0Ch +
lea ecx [ebp+var_14C] +
push ecx  +
lea edx [ebp+var_110] +
push edx  +
push 3  +
call ds:GetComputerNameExW  +
test eax eax +
jz loc_411322  +
lea ecx [ebp+var_110] +
lea esi [ebp+var_148] +
call sub_411210  +
push 1  +
push eax  +
lea eax [ebp+var_12C] +
push eax  +
mov [ebp+var_4] 0 +
call sub_403FA0  +
add esp 0Ch +
cmp [ebp+var_134] 8 +
jb loc_4112E3  +
mov ecx [ebp+var_148] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_12C] +
mov esi 10h +
cmp [ebp+var_118] esi +
jnb loc_4112FC  +
lea eax [ebp+var_12C] +
movzx edx [ebp+arg_4] +
push edx  +
push eax  +
push edi  +
call sub_40F8D0  +
add esp 0Ch +
cmp [ebp+var_118] esi +
jb loc_411322  +
mov eax [ebp+var_12C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E632  +
mov eax large fs:0 +
push eax  +
sub esp 2ACh +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor ebx ebx +
push 1FFh  +
lea eax [ebp+var_248+1] +
push ebx  +
push eax  +
mov byte ptr [ebp+var_248] bl +
call sub_426210  +
push 37h  +
lea ecx [ebp+var_48+1] +
push ebx  +
push ecx  +
mov byte ptr [ebp+var_48] bl +
call sub_426210  +
add esp 18h +
push ebx  +
mov edi 0Fh +
push offset unk_441AD0  +
lea ecx [ebp+var_2B8] +
mov [ebp+var_2A4] edi +
mov [ebp+var_2A8] ebx +
mov byte ptr [ebp+var_2B8] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_264] +
mov [ebp+var_4] ebx +
mov [ebp+var_250] edi +
mov [ebp+var_254] ebx +
mov byte ptr [ebp+var_264] bl +
call sub_402230  +
push offset asc_443074  +
lea edx [ebp+var_29C] +
push offset dword_44FAA4  +
push edx  +
mov byte ptr [ebp+var_4] 1 +
call sub_411060  +
push offset dword_44FAC0  +
push eax  +
lea eax [ebp+var_280] +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_411140  +
add esp 18h +
push eax  +
lea ecx [ebp+var_264] +
mov byte ptr [ebp+var_4] 3 +
call sub_402420  +
mov esi 10h +
cmp [ebp+var_26C] esi +
jb loc_411447  +
mov ecx [ebp+var_280] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_26C] edi +
mov [ebp+var_270] ebx +
mov byte ptr [ebp+var_280] bl +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_288] esi +
jb loc_411474  +
mov edx [ebp+var_29C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_264] +
mov [ebp+var_288] edi +
mov [ebp+var_28C] ebx +
mov byte ptr [ebp+var_29C] bl +
cmp [ebp+var_250] esi +
jnb loc_41149A  +
lea eax [ebp+var_264] +
movzx ecx ds:byte_44534B +
mov edx off_44FA64 +
push ecx  +
mov ecx dword_451AC8 +
push eax  +
push edx  +
push 200h  +
lea eax [ebp+var_248] +
push eax  +
push ecx  +
call sub_41AC50  +
add esp 18h +
test eax eax +
jnz loc_4114FC  +
mov ecx dword_451ACC +
lea edx [ebp+var_48] +
push edx  +
lea eax [ebp+var_248] +
push eax  +
push ecx  +
call sub_41B7B0  +
lea eax [ebp+var_48] +
add esp 0Ch +
lea edx [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_4114F0  +
jmp loc_411607  +
push offset asc_443074  +
lea eax [ebp+var_280] +
push offset dword_44FAA4  +
push eax  +
mov byte ptr [ebp+var_248] bl +
call sub_411060  +
push offset aAll  +
push eax  +
lea ecx [ebp+var_29C] +
push ecx  +
mov byte ptr [ebp+var_4] 4 +
call sub_402570  +
add esp 18h +
push eax  +
lea ecx [ebp+var_264] +
mov byte ptr [ebp+var_4] 5 +
call sub_402420  +
cmp [ebp+var_288] esi +
jb loc_411558  +
mov edx [ebp+var_29C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_288] edi +
mov [ebp+var_28C] ebx +
mov byte ptr [ebp+var_29C] bl +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_26C] esi +
jb loc_411585  +
mov eax [ebp+var_280] +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_264] +
mov [ebp+var_26C] edi +
mov [ebp+var_270] ebx +
mov byte ptr [ebp+var_280] bl +
cmp [ebp+var_250] esi +
jnb loc_4115AB  +
lea eax [ebp+var_264] +
movzx ecx ds:byte_44534B +
mov edx off_44FA64 +
push ecx  +
mov ecx dword_451AC8 +
push eax  +
push edx  +
push 200h  +
lea eax [ebp+var_248] +
push eax  +
push ecx  +
call sub_41AC50  +
add esp 18h +
test eax eax +
jnz loc_411619  +
mov ecx dword_451ACC +
lea edx [ebp+var_48] +
push edx  +
lea eax [ebp+var_248] +
push eax  +
push ecx  +
call sub_41B7B0  +
lea eax [ebp+var_48] +
add esp 0Ch +
lea edx [eax+1] +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_411600  +
sub eax edx +
push eax  +
lea edx [ebp+var_48] +
push edx  +
lea ecx [ebp+var_2B8] +
call sub_402230  +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp+var_2B8] +
push eax  +
mov ecx offset dword_44FADC +
call sub_402110  +
cmp [ebp+var_250] esi +
jb loc_411644  +
mov ecx [ebp+var_264] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_250] edi +
mov [ebp+var_254] ebx +
mov byte ptr [ebp+var_264] bl +
cmp [ebp+var_2A4] esi +
jb loc_41166D  +
mov edx [ebp+var_2B8] +
push edx  +
call sub_42520B  +
add esp 4 +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E67E  +
mov eax large fs:0 +
push eax  +
sub esp 480h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_1C] +
mov [ebp+var_48C] esi +
push offset asc_443074  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_488] +
xor ebx ebx +
push ecx  +
mov [ebp+var_4] ebx +
call sub_411060  +
mov edx off_44FA68 +
push edx  +
push eax  +
lea eax [ebp+var_46C] +
push eax  +
mov byte ptr [ebp+var_4] 1 +
call sub_402570  +
add esp 18h +
cmp [ebp+var_474] 10h +
mov byte ptr [ebp+var_4] 3 +
jb loc_411718  +
mov ecx [ebp+var_488] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 1FFh  +
lea edx [ebp+var_450+1] +
push ebx  +
push edx  +
mov [ebp+var_474] 0Fh +
mov [ebp+var_478] ebx +
mov byte ptr [ebp+var_488] bl +
mov byte ptr [ebp+var_450] bl +
call sub_426210  +
push 1FFh  +
lea eax [ebp+var_250+1] +
push ebx  +
push eax  +
mov byte ptr [ebp+var_250] bl +
call sub_426210  +
add esp 18h +
call sub_421760  +
push 32h  +
push offset a?xmlVersion1_0  +
mov ecx esi +
mov edi eax +
call sub_402230  +
cmp [ebp+var_458] 10h +
mov eax [ebp+var_46C] +
jnb loc_41178B  +
lea eax [ebp+var_46C] +
movzx ecx ds:byte_44534B +
mov edx dword_451AC8 +
push ecx  +
push eax  +
push edi  +
push edx  +
call sub_41B470  +
add esp 10h +
test eax eax +
jnz loc_4118F5  +
push edi  +
call sub_421860  +
add esp 4 +
test eax eax +
jz loc_411888  +
push edi  +
call sub_421960  +
push edi  +
call sub_421A60  +
mov esi eax +
add esp 8 +
cmp esi ebx +
jz loc_411882  +
jmp loc_4117E0  +
cmp [ebp+var_458] 10h +
mov eax [ebp+var_46C] +
jnb loc_4117F5  +
lea eax [ebp+var_46C] +
movzx ecx ds:byte_44534B +
push ecx  +
push eax  +
mov eax dword_451AC8 +
push esi  +
push 200h  +
lea edx [ebp+var_450] +
push edx  +
push eax  +
call sub_41AC50  +
add esp 18h +
test eax eax +
jnz loc_411869  +
lea ecx [ebp+var_450] +
push ecx  +
push esi  +
push offset aLaunchPfxSCoun  +
lea edx [ebp+var_250] +
push 200h  +
push edx  +
call sub_41A380  +
lea eax [ebp+var_250] +
add esp 14h +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_411847  +
mov ecx [ebp+var_48C] +
sub eax edx +
push eax  +
lea eax [ebp+var_250] +
push eax  +
call sub_401CE0  +
mov byte ptr [ebp+var_250] bl +
push edi  +
mov byte ptr [ebp+var_450] bl +
call sub_421A60  +
mov esi eax +
add esp 4 +
cmp esi ebx +
jnz loc_4117E0  +
mov esi [ebp+var_48C] +
push 0Dh  +
push offset aLaunchdata  +
mov ecx esi +
call sub_401CE0  +
mov esi 10h +
cmp [ebp+var_458] esi +
jb loc_4118B2  +
mov ecx [ebp+var_46C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_458] 0Fh +
mov [ebp+var_45C] ebx +
mov byte ptr [ebp+var_46C] bl +
cmp [ebp+arg_14] esi +
jb loc_4118D9  +
mov edx [ebp+arg_0] +
push edx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_46C] +
mov edi 10h +
cmp [ebp+var_458] edi +
jnb loc_41190E  +
lea eax [ebp+var_46C] +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push eax  +
push offset aDatacollectNoK  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 18h +
cmp dword_44FA7C ebx +
jz loc_4119B0  +
push 3Fh  +
lea eax [ebp+var_50+1] +
push ebx  +
push eax  +
mov byte ptr [ebp+var_50] bl +
call sub_426210  +
mov eax dword_44FA6C +
add esp 0Ch +
cmp dword_44FA80 edi +
jnb loc_41195D  +
mov eax offset dword_44FA6C +
lea ecx [ebp+var_50] +
push ecx  +
push eax  +
call sub_4216A0  +
lea edx [ebp+var_50] +
push edx  +
push offset aLaunchPfxSCo_0  +
lea eax [ebp+var_250] +
push 200h  +
push eax  +
mov byte ptr [ebp+var_250] bl +
call sub_41A380  +
lea eax [ebp+var_250] +
add esp 18h +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_411993  +
sub eax edx +
push eax  +
lea ecx [ebp+var_250] +
push ecx  +
mov ecx esi +
call sub_401CE0  +
jmp loc_411888  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aDatacollectNoA  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
jmp loc_411888  +
***
push 0FFFFFFFFh  +
push offset loc_43E74A  +
mov eax large fs:0 +
push eax  +
sub esp 2ECh +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor ebx ebx +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_F0] +
mov [ebp+var_DC] 0Fh +
mov [ebp+var_E0] ebx +
mov byte ptr [ebp+var_F0] bl +
call sub_402230  +
mov eax [ebp+arg_0] +
dec eax  +
mov [ebp+var_4] ebx +
cmp eax 0Ah +
ja loc_411B65  +
jmp ds:off_412554[eax*4]  +
mov edx off_44F98C +
mov eax edx +
lea esi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411A60  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F988 +
mov eax edx +
lea esi [eax+1] +
jmp loc_411A80  +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411A80  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F968 +
mov eax edx +
lea esi [eax+1] +
jmp loc_411AA0  +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411AA0  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F96C +
mov eax edx +
lea esi [eax+1] +
jmp loc_411AC0  +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411AC0  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F970 +
mov eax edx +
lea esi [eax+1] +
jmp loc_411AE0  +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411AE0  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F974 +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411AF8  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F984 +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411B10  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F978 +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411B28  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F97C +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411B40  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
mov edx off_44F994 +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411B58  +
sub eax esi +
push eax  +
push edx  +
jmp loc_411B6C  +
push 7  +
push offset aUnknown_0  +
lea ecx [ebp+var_F0] +
call sub_402230  +
mov edi 10h +
cmp dword_44FAB4 ebx +
jz loc_411BCD  +
push offset dword_44FAA4  +
lea eax [ebp+var_160] +
push offset a_  +
push eax  +
call sub_4024A0  +
add esp 0Ch +
push 0FFFFFFFFh  +
push ebx  +
push eax  +
lea ecx [ebp+var_F0] +
mov byte ptr [ebp+var_4] 1 +
call sub_401BF0  +
mov byte ptr [ebp+var_4] 0 +
cmp [ebp+var_14C] edi +
jb loc_411BEE  +
mov ecx [ebp+var_160] +
push ecx  +
call sub_42520B  +
add esp 4 +
jmp loc_411BEE  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aLaunchaamNoLei  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
mov ecx dword_44FAF8 +
cmp dword_44FB0C edi +
jnb loc_411C01  +
mov ecx offset dword_44FAF8 +
mov eax ecx +
mov [ebp+var_C0] 0Fh +
mov [ebp+var_C4] ebx +
mov byte ptr [ebp+var_D4] 0 +
lea esi [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_411C20  +
sub eax esi +
push eax  +
push ecx  +
lea ecx [ebp+var_D4] +
call sub_402230  +
push ebx  +
mov esi 0Fh +
push offset unk_441AD0  +
lea ecx [ebp+var_144] +
mov byte ptr [ebp+var_4] 2 +
mov [ebp+var_130] esi +
mov [ebp+var_134] ebx +
mov byte ptr [ebp+var_144] 0 +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_128] +
mov byte ptr [ebp+var_4] 3 +
mov [ebp+var_114] esi +
mov [ebp+var_118] ebx +
mov byte ptr [ebp+var_128] 0 +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_10C] +
mov byte ptr [ebp+var_4] 4 +
mov [ebp+var_F8] esi +
mov [ebp+var_FC] ebx +
mov byte ptr [ebp+var_10C] 0 +
call sub_402230  +
push 37h  +
lea ecx [ebp+var_48+1] +
push ebx  +
push ecx  +
mov byte ptr [ebp+var_4] 5 +
mov byte ptr [ebp+var_48] 0 +
call sub_426210  +
mov eax [ebp+var_D4] +
add esp 0Ch +
cmp [ebp+var_C0] edi +
jnb loc_411CDE  +
lea eax [ebp+var_D4] +
lea edx [ebp+var_48] +
push edx  +
push eax  +
mov eax dword_451ACC +
push eax  +
call sub_41B7B0  +
add esp 0Ch +
test eax eax +
jnz loc_412451  +
lea eax [ebp+var_48] +
lea edx [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411D00  +
sub eax edx +
push eax  +
lea ecx [ebp+var_48] +
push ecx  +
lea ecx [ebp+var_D4] +
call sub_402230  +
mov eax [ebp+var_D4] +
mov [ebp+var_244] ebx +
mov [ebp+var_248] ebx +
cmp [ebp+var_C0] edi +
jnb loc_411D39  +
lea eax [ebp+var_D4] +
push ebx  +
lea edx [ebp+var_248] +
push edx  +
lea ecx [ebp+var_244] +
push ecx  +
push ebx  +
lea edx [ebp+var_250] +
push edx  +
push ebx  +
push eax  +
mov eax dword_451AC4 +
push eax  +
call sub_41BBE0  +
add esp 20h +
test eax eax +
jnz loc_412364  +
mov eax [ebp+var_250] +
cmp eax 1 +
jnz loc_411F24  +
mov ecx [ebp+var_244] +
push ecx  +
call sub_404B80  +
mov [ebp+var_244] eax +
mov eax [ebp+var_248] +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_411DA6  +
push eax  +
call sub_404B80  +
add esp 4 +
mov [ebp+var_248] eax +
push 1  +
push 3  +
lea ecx [ebp+var_2F8] +
call sub_408860  +
push 1  +
mov bl 6 +
push 3  +
lea ecx [ebp+var_240] +
mov byte ptr [ebp+var_4] bl +
call sub_408860  +
mov edx [ebp+var_244] +
push edx  +
lea ecx [ebp+var_2E8] +
mov byte ptr [ebp+var_4] 7 +
call sub_4074C0  +
lea eax [ebp+var_160] +
push eax  +
lea ecx [ebp+var_2F8] +
call sub_408AC0  +
mov byte ptr [ebp+var_4] 8 +
cmp [eax+14h] edi +
jb loc_411DFE  +
mov edx [eax] +
jmp loc_411E00  +
mov edx eax +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411E05  +
sub eax esi +
push eax  +
push edx  +
lea ecx [ebp+var_144] +
call sub_402230  +
mov byte ptr [ebp+var_4] 7 +
cmp [ebp+var_14C] edi +
jb loc_411E36  +
mov ecx [ebp+var_160] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov edx [ebp+var_248] +
push edx  +
lea ecx [ebp+var_230] +
call sub_4074C0  +
lea eax [ebp+var_160] +
push eax  +
lea ecx [ebp+var_240] +
call sub_408AC0  +
mov byte ptr [ebp+var_4] 9 +
cmp [eax+14h] edi +
jb loc_411E67  +
mov edx [eax] +
jmp loc_411E69  +
mov edx eax +
mov eax edx +
lea esi [eax+1] +
mov edi edi +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_411E70  +
sub eax esi +
push eax  +
push edx  +
lea ecx [ebp+var_128] +
call sub_402230  +
mov byte ptr [ebp+var_4] 7 +
cmp [ebp+var_14C] edi +
jb loc_411EA1  +
mov ecx [ebp+var_160] +
push ecx  +
call sub_42520B  +
add esp 4 +
push 2  +
push 0  +
push offset a1  +
lea ecx [ebp+var_128] +
call sub_409640  +
push 1  +
lea ecx [ebp+var_10C] +
cmp eax 0FFFFFFFFh +
jz loc_411EC9  +
push offset a1_0  +
jmp loc_411ECE  +
push offset a0  +
call sub_402230  +
lea ecx [ebp+var_1E0] +
mov byte ptr [ebp+var_4] bl +
call sub_4067B0  +
lea edx [ebp+var_1E0] +
mov esi offset off_441D78 +
push edx  +
mov [ebp+var_1E0] esi +
call sub_424E73  +
add esp 4 +
lea ecx [ebp+var_298] +
mov byte ptr [ebp+var_4] 5 +
call sub_4067B0  +
lea eax [ebp+var_298] +
push eax  +
mov [ebp+var_298] esi +
call sub_424E73  +
add esp 4 +
jmp loc_41221A  +
cmp eax ebx +
jnz loc_412328  +
mov eax [ebp+var_D4] +
mov [ebp+var_24C] ebx +
cmp [ebp+var_C0] edi +
jnb loc_411F46  +
lea eax [ebp+var_D4] +
mov edx dword_451ACC +
lea ecx [ebp+var_80] +
push ecx  +
push eax  +
push edx  +
call sub_41B7B0  +
mov edx dword_451ACC +
lea eax [ebp+var_B8] +
push eax  +
lea ecx [ebp+var_80] +
push ecx  +
push edx  +
call sub_41B690  +
lea eax [ebp+var_80] +
push eax  +
lea ecx [ebp+var_22C] +
push 19h  +
push ecx  +
call sub_41A510  +
lea edx [ebp+var_B8] +
push edx  +
lea eax [ebp+var_213] +
push 19h  +
push eax  +
call sub_41A510  +
add esp 30h +
push offset unk_441AD0  +
lea ecx [ebp+var_160] +
call sub_4023B0  +
push offset unk_441AD0  +
lea ecx [ebp+var_17C] +
mov byte ptr [ebp+var_4] 0Ah +
call sub_4023B0  +
mov byte ptr [ebp+var_4] 0Bh +
cmp dword_44FB5C ebx +
jz loc_411FDC  +
mov eax dword_44FB4C +
cmp dword_44FB60 edi +
jnb loc_412010  +
mov eax offset dword_44FB4C +
jmp loc_412010  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aLaunchaamDrive  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
mov eax dword_44FB30 +
add esp 14h +
cmp dword_44FB44 edi +
jnb loc_412010  +
mov eax offset dword_44FB30 +
push eax  +
lea ecx [ebp+var_160] +
call sub_4023F0  +
push 1  +
push offset asc_441A28  +
lea ecx [ebp+var_160] +
call sub_401CE0  +
push 0Fh  +
push offset aApplication_si  +
lea ecx [ebp+var_160] +
call sub_401CE0  +
mov ecx [ebp+var_160] +
cmp [ebp+var_14C] edi +
jnb loc_412054  +
lea ecx [ebp+var_160] +
mov eax [ebp+var_D4] +
cmp [ebp+var_C0] edi +
jnb loc_412068  +
lea eax [ebp+var_D4] +
lea edx [ebp+var_1F4] +
push edx  +
push ecx  +
push eax  +
mov eax dword_451ACC +
push eax  +
call sub_41B8D0  +
add esp 10h +
mov [ebp+var_1F8] ebx +
cmp dword_44FB5C ebx +
jz loc_4120A1  +
mov eax dword_44FB4C +
cmp dword_44FB60 edi +
jnb loc_4120D5  +
mov eax offset dword_44FB4C +
jmp loc_4120D5  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aLaunchaamDrive  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
mov eax dword_44FB30 +
add esp 14h +
cmp dword_44FB44 edi +
jnb loc_4120D5  +
mov eax offset dword_44FB30 +
push eax  +
lea ecx [ebp+var_17C] +
call sub_4023F0  +
push 1  +
push offset asc_441A28  +
lea ecx [ebp+var_17C] +
call sub_401CE0  +
mov ebx 0Ch +
push ebx  +
push offset aSlconfig_xml  +
lea ecx [ebp+var_17C] +
call sub_401CE0  +
mov eax [ebp+var_17C] +
cmp [ebp+var_168] edi +
jnb loc_41211D  +
lea eax [ebp+var_17C] +
lea ecx [ebp+var_24C] +
push ecx  +
push 0  +
lea edx [ebp+var_22C] +
push edx  +
push eax  +
mov eax dword_451AC4 +
push eax  +
call sub_41C4F0  +
add esp 14h +
test eax eax +
jnz loc_4121DF  +
mov ecx [ebp+var_24C] +
push ecx  +
call sub_404B80  +
add esp 4 +
push 1  +
push 3  +
lea ecx [ebp+var_2F8] +
mov esi eax +
call sub_408860  +
push esi  +
lea ecx [ebp+var_2E8] +
mov byte ptr [ebp+var_4] bl +
call sub_4074C0  +
lea edx [ebp+var_198] +
push edx  +
lea ecx [ebp+var_2F8] +
call sub_408AC0  +
mov byte ptr [ebp+var_4] 0Dh +
cmp [eax+14h] edi +
jb loc_412190  +
mov eax [eax] +
push eax  +
lea ecx [ebp+var_144] +
call sub_4023F0  +
lea ecx [ebp+var_198] +
mov byte ptr [ebp+var_4] bl +
call sub_421E10  +
push 1  +
push offset a0  +
lea ecx [ebp+var_10C] +
call sub_402230  +
push 2  +
push offset a1  +
lea ecx [ebp+var_128] +
call sub_402230  +
lea ecx [ebp+var_2F8] +
mov byte ptr [ebp+var_4] 0Bh +
call sub_406DE0  +
jmp loc_412200  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aLaunchaamCould  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_17C] +
call sub_421E10  +
lea ecx [ebp+var_160] +
mov byte ptr [ebp+var_4] 5 +
call sub_421E10  +
cmp [ebp+var_F8] edi +
mov edi [ebp+var_10C] +
jnb loc_41222E  +
lea edi [ebp+var_10C] +
mov esi [ebp+var_128] +
mov ebx 10h +
cmp [ebp+var_114] ebx +
jnb loc_412247  +
lea esi [ebp+var_128] +
mov edx [ebp+var_144] +
cmp [ebp+var_130] ebx +
jnb loc_41225B  +
lea edx [ebp+var_144] +
mov ecx [ebp+var_D4] +
cmp [ebp+var_C0] ebx +
jnb loc_41226F  +
lea ecx [ebp+var_D4] +
mov eax [ebp+var_F0] +
cmp [ebp+var_DC] ebx +
jnb loc_412283  +
lea eax [ebp+var_F0] +
push edi  +
push esi  +
push edx  +
push ecx  +
push eax  +
call sub_410870  +
add esp 14h +
test al al +
jnz loc_4122B7  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aLaunchaamError  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
jmp loc_412387  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aLaunchaamLaunc  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
mov edx dword_44FB14 +
add esp 14h +
cmp dword_44FB28 8 +
jnb loc_4122ED  +
mov edx offset dword_44FB14 +
mov ecx dword_44FAC0 +
cmp dword_44FAD4 ebx +
jnb loc_412300  +
mov ecx offset dword_44FAC0 +
mov eax [ebp+var_F0] +
cmp [ebp+var_DC] ebx +
jnb loc_412314  +
lea eax [ebp+var_F0] +
push edx  +
push ecx  +
push eax  +
call loc_402B40  +
add esp 0Ch +
mov byte_451AD1 1 +
jmp loc_41238A  +
lea ecx [ebp+var_10C] +
call sub_421E10  +
lea ecx [ebp+var_128] +
call sub_421E10  +
lea ecx [ebp+var_144] +
call sub_421E10  +
lea ecx [ebp+var_D4] +
call sub_421E10  +
lea ecx [ebp+var_F0] +
call sub_421E10  +
jmp loc_412537  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aLaunchaamErr_0  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
mov ebx 10h +
add esp 14h +
cmp [ebp+var_F8] ebx +
jb loc_4123A1  +
mov edx [ebp+var_10C] +
push edx  +
call sub_42520B  +
add esp 4 +
xor esi esi +
mov edi 0Fh +
mov [ebp+var_F8] edi +
mov [ebp+var_FC] esi +
mov byte ptr [ebp+var_10C] 0 +
cmp [ebp+var_114] ebx +
jb loc_4123D2  +
mov eax [ebp+var_128] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_114] edi +
mov [ebp+var_118] esi +
mov byte ptr [ebp+var_128] 0 +
cmp [ebp+var_130] ebx +
jb loc_4123FC  +
mov ecx [ebp+var_144] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_130] edi +
mov [ebp+var_134] esi +
mov byte ptr [ebp+var_144] 0 +
cmp [ebp+var_C0] ebx +
jb loc_412426  +
mov edx [ebp+var_D4] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C0] edi +
mov [ebp+var_C4] esi +
mov byte ptr [ebp+var_D4] 0 +
cmp [ebp+var_DC] ebx +
jb loc_412537  +
mov eax [ebp+var_F0] +
push eax  +
jmp loc_41252F  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aLaunchaamTrial  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 14h +
cmp [ebp+var_F8] edi +
jb loc_41248A  +
mov eax [ebp+var_10C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov esi 0Fh +
mov [ebp+var_F8] esi +
mov [ebp+var_FC] ebx +
mov byte ptr [ebp+var_10C] 0 +
cmp [ebp+var_114] edi +
jb loc_4124B9  +
mov ecx [ebp+var_128] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_114] esi +
mov [ebp+var_118] ebx +
mov byte ptr [ebp+var_128] 0 +
cmp [ebp+var_130] edi +
jb loc_4124E3  +
mov edx [ebp+var_144] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_130] esi +
mov [ebp+var_134] ebx +
mov byte ptr [ebp+var_144] 0 +
cmp [ebp+var_C0] edi +
jb loc_41250D  +
mov eax [ebp+var_D4] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C0] esi +
mov [ebp+var_C4] ebx +
mov byte ptr [ebp+var_D4] 0 +
cmp [ebp+var_DC] edi +
jb loc_412537  +
mov ecx [ebp+var_F0] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_43E898  +
mov eax large fs:0 +
push eax  +
sub esp 228h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor ebx ebx +
mov [ebp+var_184] ebx +
push ebx  +
mov edi 0Fh +
push offset unk_441AD0  +
lea ecx [ebp+var_160] +
mov [ebp+var_14C] edi +
mov [ebp+var_150] ebx +
mov byte ptr [ebp+var_160] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_10C] +
mov [ebp+var_4] ebx +
mov [ebp+var_F8] edi +
mov [ebp+var_FC] ebx +
mov byte ptr [ebp+var_10C] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_F0] +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_DC] edi +
mov [ebp+var_E0] ebx +
mov byte ptr [ebp+var_F0] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_D4] +
mov byte ptr [ebp+var_4] 2 +
mov [ebp+var_C0] edi +
mov [ebp+var_C4] ebx +
mov byte ptr [ebp+var_D4] bl +
call sub_402230  +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_144] +
mov byte ptr [ebp+var_4] 3 +
mov [ebp+var_130] edi +
mov [ebp+var_134] ebx +
mov byte ptr [ebp+var_144] bl +
call sub_402230  +
mov byte ptr [ebp+var_4] 4 +
call sub_411340  +
cmp dword_44FAEC ebx +
jz loc_413253  +
mov eax dword_451AC4 +
push eax  +
mov [ebp+var_180] ebx +
call sub_41BE60  +
add esp 4 +
push ebx  +
push offset unk_441AD0  +
lea ecx [ebp+var_128] +
mov esi eax +
mov [ebp+var_114] edi +
mov [ebp+var_118] ebx +
mov byte ptr [ebp+var_128] bl +
call sub_402230  +
cmp dword_44FAF0 10h +
mov eax dword_44FADC +
mov byte ptr [ebp+var_4] 5 +
jnb loc_412AEE  +
mov eax offset dword_44FADC +
mov edx dword_451AC4 +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea ecx [ebp+var_188] +
push ecx  +
push ebx  +
push eax  +
push edx  +
call sub_41BBE0  +
mov eax [ebp+var_188] +
add esp 20h +
cmp eax 3 +
jnz loc_413213  +
cmp dword_44FAF0 10h +
mov eax dword_44FADC +
jnb loc_412B2C  +
mov eax offset dword_44FADC +
push esi  +
push eax  +
mov eax dword_451AC4 +
push eax  +
call sub_41C3D0  +
mov edx dword_451AC4 +
lea ecx [ebp+var_180] +
push ecx  +
push offset aMediatag  +
push esi  +
push edx  +
call sub_41C190  +
mov edx [ebp+var_180] +
add esp 1Ch +
cmp edx ebx +
jz loc_412BA8  +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_412B64  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_160] +
call sub_402230  +
mov eax [ebp+var_180] +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push eax  +
push offset aDatacollectMed  +
push ecx  +
push 4  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 18h +
mov edi 0Fh +
mov ecx dword_451AC4 +
lea eax [ebp+var_180] +
push eax  +
push offset aMediatagparam  +
push esi  +
push ecx  +
mov [ebp+var_180] ebx +
call sub_41C190  +
mov edx [ebp+var_180] +
add esp 10h +
cmp edx ebx +
jz loc_412C23  +
mov eax edx +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_412BE0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_10C] +
call sub_402230  +
mov edx [ebp+var_180] +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push edx  +
push offset aDatacollectM_0  +
push eax  +
push 4  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 18h +
mov edi 0Fh +
mov eax dword_451AC4 +
lea edx [ebp+var_180] +
push edx  +
push offset aSntype  +
push esi  +
push eax  +
mov [ebp+var_180] ebx +
call sub_41C190  +
mov edx [ebp+var_180] +
add esp 10h +
cmp edx ebx +
jz loc_412C96  +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_412C53  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_F0] +
call sub_402230  +
mov ecx [ebp+var_180] +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push ecx  +
push offset aDatacollectSnt  +
push edx  +
push 4  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 18h +
mov edi 0Fh +
mov edx dword_451AC4 +
lea ecx [ebp+var_180] +
push ecx  +
push offset aUpgserialnum  +
push esi  +
push edx  +
mov [ebp+var_180] ebx +
call sub_41C190  +
mov edx [ebp+var_180] +
add esp 10h +
cmp edx ebx +
jz loc_412D0B  +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_412CC7  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_D4] +
call sub_402230  +
mov eax [ebp+var_180] +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push eax  +
push offset aDatacollectUpg  +
push ecx  +
push 4  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 18h +
mov edi 0Fh +
mov ecx dword_451AC4 +
lea eax [ebp+var_180] +
push eax  +
push offset aLeid  +
push esi  +
push ecx  +
mov [ebp+var_180] ebx +
call sub_41C190  +
mov edx [ebp+var_180] +
add esp 10h +
cmp edx ebx +
jz loc_412D83  +
mov eax edx +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_412D40  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_144] +
call sub_402230  +
mov edx [ebp+var_180] +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push edx  +
push offset aDatacollectLei  +
push eax  +
push 4  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 18h +
mov edi 0Fh +
cmp [ebp+arg_0] bl +
jz loc_412DF1  +
lea edx [ebp+var_128] +
push edx  +
sub esp 1Ch +
mov ecx esp +
mov [ebp+var_184] esp +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp+var_144] +
mov [ecx+14h] edi +
mov [ecx+10h] ebx +
push eax  +
mov [ecx] bl +
call sub_402110  +
call sub_411690  +
mov eax [ebp+var_128] +
add esp 20h +
cmp [ebp+var_114] 10h +
jnb loc_412DCE  +
lea eax [ebp+var_128] +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push eax  +
push offset aXmlS  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 18h +
mov eax dword_451AC4 +
push eax  +
call sub_41BE60  +
mov esi 10h +
add esp 4 +
mov edi eax +
mov eax [ebp+var_F0] +
cmp [ebp+var_DC] esi +
jnb loc_412E1A  +
lea eax [ebp+var_F0] +
mov ecx dword_451AC4 +
push eax  +
push offset aSerialnumberty  +
push edi  +
push ecx  +
call sub_41C070  +
mov eax [ebp+var_160] +
add esp 10h +
cmp [ebp+var_14C] esi +
jnb loc_412E44  +
lea eax [ebp+var_160] +
mov edx dword_451AC4 +
push eax  +
push offset aMediatagpolicy  +
push edi  +
push edx  +
call sub_41C070  +
mov eax [ebp+var_10C] +
add esp 10h +
cmp [ebp+var_F8] esi +
jnb loc_412E6E  +
lea eax [ebp+var_10C] +
push eax  +
mov eax dword_451AC4 +
push offset aMediatagparame  +
push edi  +
push eax  +
call sub_41C070  +
add esp 10h +
cmp [ebp+arg_0] bl +
jz loc_412EB2  +
mov eax [ebp+var_128] +
cmp [ebp+var_114] esi +
jnb loc_412E9C  +
lea eax [ebp+var_128] +
mov ecx dword_451AC4 +
push eax  +
push offset aLaunchdata_0  +
push edi  +
push ecx  +
call sub_41C070  +
add esp 10h +
push 1  +
push ebx  +
push offset aV  +
lea ecx [ebp+var_F0] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_412F18  +
lea edx [ebp+var_34] +
push 21h  +
push edx  +
call sub_40FBA0  +
lea eax [ebp+var_B8] +
push 81h  +
push eax  +
call sub_411230  +
mov edx dword_451AC4 +
lea ecx [ebp+var_34] +
push ecx  +
push offset aClientos  +
push edi  +
push edx  +
call sub_41C070  +
mov ecx dword_451AC4 +
lea eax [ebp+var_B8] +
push eax  +
push offset aHostid  +
push edi  +
push ecx  +
call sub_41C070  +
add esp 30h +
cmp [ebp+var_C4] ebx +
jz loc_412F4A  +
mov eax [ebp+var_D4] +
cmp [ebp+var_C0] esi +
jnb loc_412F34  +
lea eax [ebp+var_D4] +
mov edx dword_451AC4 +
push eax  +
push offset aQualifyingupgr  +
push edi  +
push edx  +
call sub_41C070  +
add esp 10h +
mov [ebp+var_230] offset unk_44219C +
mov [ebp+var_220] offset unk_442D40 +
lea ecx [ebp+var_1D0] +
mov byte ptr [ebp+var_4] 6 +
mov [ebp+var_184] 1 +
mov [ebp+var_1D0] offset off_441D88 +
mov [ebp+var_228] ebx +
mov [ebp+var_224] ebx +
call sub_405060  +
lea eax [ebp+var_218] +
push 20h  +
lea ecx [ebp+var_1D0] +
mov [ebp+var_198] eax +
mov [ebp+var_194] ebx +
call sub_406F50  +
mov [ebp+var_190] al +
cmp [ebp+var_198] ebx +
jnz loc_412FD0  +
mov eax [ebp+var_1C4] +
or eax 4 +
push ebx  +
push eax  +
lea ecx [ebp+var_1D0] +
call sub_404F50  +
mov ecx [ebp+var_220] +
mov edx [ecx+4] +
mov [ebp+edx+var_220] offset off_441D80 +
mov eax [ebp+var_230] +
mov ecx [eax+4] +
mov [ebp+ecx+var_230] offset off_441D90 +
mov edx [ebp+var_230] +
mov eax [edx+4] +
lea ecx [ebp+var_218] +
mov [ebp+var_4] 0Bh +
mov [ebp+eax+var_230] offset off_442130 +
call sub_4059B0  +
mov [ebp+var_218] offset off_441E74 +
mov [ebp+var_1DC] ebx +
mov [ebp+var_1D8] ebx +
mov byte ptr [ebp+var_4] 0Dh +
call GetCurrentProcessId  +
push eax  +
push offset dword_442C18  +
lea ecx [ebp+var_220] +
call sub_40FE70  +
mov ecx eax +
call sub_4074C0  +
lea ecx [ebp+var_17C] +
push ecx  +
lea ecx [ebp+var_230] +
call sub_408AC0  +
cmp [eax+14h] esi +
jb loc_41306E  +
mov eax [eax] +
mov ecx dword_44FADC +
cmp dword_44FAF0 esi +
jnb loc_413081  +
mov ecx offset dword_44FADC +
mov edx dword_451AC4 +
push 1  +
push eax  +
push edi  +
push ebx  +
push ecx  +
push edx  +
call sub_41BD30  +
add esp 18h +
cmp [ebp+var_168] 10h +
mov esi eax +
jb loc_4130B0  +
mov eax [ebp+var_17C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx dword_451AC4 +
push edi  +
push ecx  +
call sub_41BF60  +
add esp 8 +
cmp si bx +
jnz loc_4131A3  +
cmp [ebp+arg_0] bl +
jz loc_413135  +
push offset asc_443074  +
lea edx [ebp+var_144] +
push edx  +
lea eax [ebp+var_30] +
push eax  +
call sub_411060  +
mov ecx off_44FA68 +
push ecx  +
push eax  +
lea edx [ebp+var_17C] +
push edx  +
mov byte ptr [ebp+var_4] 0Eh +
call sub_402570  +
add esp 18h +
cmp dword ptr [eax+14h] 10h +
jb loc_413106  +
mov eax [eax] +
movzx ecx ds:byte_44534B +
mov edx dword_451AC8 +
push ecx  +
push eax  +
push edx  +
call sub_41B350  +
add esp 0Ch +
lea ecx [ebp+var_17C] +
call sub_421E10  +
lea ecx [ebp+var_30] +
mov byte ptr [ebp+var_4] 0Dh +
call sub_421E10  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aDatacollectAct  +
push eax  +
push 4  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
mov edi dword_451AD8 +
add esp 14h +
cmp edi ebx +
jz loc_4131E9  +
cmp dword_44FAF0 10h +
mov edx dword_44FADC +
jnb loc_413178  +
mov edx offset dword_44FADC +
mov eax edx +
lea esi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_413180  +
sub eax esi +
push eax  +
push edx  +
lea ecx [edi+80h] +
call sub_402230  +
mov ecx dword_451AD8 +
call sub_409120  +
jmp loc_4131E9  +
mov edx 0D001h +
cmp si dx +
jnz loc_4131C8  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aDatacollectA_0  +
push eax  +
push 4  +
push offset aActivation  +
push ecx  +
jmp loc_4131E1  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aDatacollectA_1  +
push edx  +
push 4  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
lea ecx [ebp+var_1D0] +
mov byte ptr [ebp+var_4] 5 +
call sub_4067B0  +
lea ecx [ebp+var_1D0] +
push ecx  +
mov [ebp+var_1D0] offset off_441D78 +
call sub_424E73  +
add esp 4 +
jmp loc_413235  +
mov edx dword_44FF1C +
push eax  +
mov eax dword_451A64 +
push offset aDatacollectCan  +
push edx  +
push 4  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 18h +
mov esi 10h +
cmp [ebp+var_114] esi +
jb loc_413279  +
mov ecx [ebp+var_128] +
push ecx  +
call sub_42520B  +
add esp 4 +
jmp loc_413279  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aDatacollectNoS  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
mov esi 10h +
cmp [ebp+var_130] esi +
jb loc_413290  +
mov ecx [ebp+var_144] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov edi 0Fh +
mov [ebp+var_130] edi +
mov [ebp+var_134] ebx +
mov byte ptr [ebp+var_144] bl +
cmp [ebp+var_C0] esi +
jb loc_4132BE  +
mov edx [ebp+var_D4] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C0] edi +
mov [ebp+var_C4] ebx +
mov byte ptr [ebp+var_D4] bl +
cmp [ebp+var_DC] esi +
jb loc_4132E7  +
mov eax [ebp+var_F0] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_DC] edi +
mov [ebp+var_E0] ebx +
mov byte ptr [ebp+var_F0] bl +
cmp [ebp+var_F8] esi +
jb loc_413310  +
mov ecx [ebp+var_10C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_F8] edi +
mov [ebp+var_FC] ebx +
mov byte ptr [ebp+var_10C] bl +
cmp [ebp+var_14C] esi +
jb loc_413339  +
mov edx [ebp+var_160] +
push edx  +
call sub_42520B  +
add esp 4 +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_43E946  +
mov eax large fs:0 +
push eax  +
sub esp 1A0h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp dword_451AD8 0 +
jnz loc_413CB0  +
push offset aCheckEventMana  +
jmp loc_414161  +
call sub_411340  +
cmp dword_44FAEC 0 +
jz loc_41415C  +
mov edx dword_44FADC +
mov edi 10h +
cmp dword_44FAF0 edi +
jnb loc_413CDA  +
mov edx offset dword_44FADC +
mov eax edx +
lea esi [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_413CE0  +
mov ecx dword_451AD8 +
sub eax esi +
push eax  +
push edx  +
sub ecx 0FFFFFF80h +
call sub_402230  +
lea ecx [ebp+var_104] +
call sub_410060  +
lea edx [ebp+var_104] +
push edx  +
mov [ebp+var_4] 0 +
call sub_412580  +
movzx eax ax +
mov ecx eax +
and ecx 0FF00h +
add esp 4 +
cmp ecx 0D000h +
jnz loc_413DF2  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aUserIsOffline  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
push 16h  +
push 0  +
push offset aMissingpayment  +
mov ecx offset dword_44FB68 +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_413D79  +
push 6  +
call sub_4119E0  +
add esp 4 +
jmp loc_41412B  +
push 13h  +
push 0  +
push offset aSubscriptionre  +
mov ecx offset dword_44FB68 +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jnz loc_413DE3  +
push 1Ah  +
push 0  +
push offset aSubscriptionex  +
mov ecx offset dword_44FB68 +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jnz loc_413DE3  +
mov eax dword_44FB68 +
cmp dword_44FB7C edi +
jnb loc_413DBB  +
mov eax offset dword_44FB68 +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push eax  +
push offset aUnidentifiedEv  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 18h +
jmp loc_41412B  +
push 8  +
call sub_4119E0  +
add esp 4 +
jmp loc_41412B  +
mov ecx 0FFFFh +
cmp ax cx +
jnz loc_413E1A  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aUnknownErrorNo  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
jmp loc_414123  +
test ax ax +
jnz loc_414149  +
push 2  +
lea ecx [ebp+var_DC] +
push offset aOk  +
push ecx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_413F6A  +
cmp [ebp+var_38] 0 +
jz loc_413E61  +
mov eax [ebp+var_48] +
cmp [ebp+var_34] edi +
jnb loc_413E53  +
lea eax [ebp+var_48] +
mov ecx dword_451AD8 +
push eax  +
call sub_409370  +
jmp loc_413E82  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aNoLicenseExten  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
mov ecx dword_451AD8 +
call sub_4064E0  +
mov esi eax +
test esi esi +
jz loc_413F44  +
push esi  +
lea ecx [ebp+var_2C] +
call sub_4023B0  +
push 16h  +
push 0  +
push offset aMissingpayment  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 1 +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_413ED1  +
push 5  +
call sub_4119E0  +
add esp 4 +
lea ecx [ebp+var_2C] +
call sub_421E10  +
jmp loc_414149  +
push 1Ah  +
push 0  +
push offset aSubscriptionex  +
lea ecx [ebp+var_2C] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jz loc_413EFE  +
push 7  +
call sub_4119E0  +
add esp 4 +
lea ecx [ebp+var_2C] +
call sub_421E10  +
jmp loc_414149  +
push 13h  +
push 0  +
push offset aSubscriptionre  +
lea ecx [ebp+var_2C] +
call sub_409640  +
cmp eax 0FFFFFFFFh +
jnz loc_413F37  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push esi  +
push offset aUnidentifiedEv  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 18h +
lea ecx [ebp+var_2C] +
call sub_421E10  +
jmp loc_414149  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aNoEventApplica  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_414149  +
push 5  +
lea edx [ebp+var_DC] +
push offset aError  +
push edx  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jnz loc_41410A  +
mov ecx [ebp+var_50] +
lea eax [ecx-0Ah] +
cmp eax 7 +
ja loc_4140EE  +
jmp ds:off_41419C[eax*4]  +
mov eax dword_44FF1C +
push ecx  +
mov ecx dword_451A64 +
push offset aLaunchingAamIn  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
push 9  +
call sub_4119E0  +
add esp 1Ch +
jmp loc_41412B  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aLaunchingAam_0  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
push 7  +
call sub_4119E0  +
add esp 18h +
jmp loc_41412B  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aLaunchingAam_1  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 14h +
cmp byte ptr [ebp+var_D4] 0 +
jz loc_41405A  +
lea eax [ebp+var_D4] +
lea edx [eax+1] +
mov edi edi +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_414030  +
sub eax edx +
push eax  +
lea eax [ebp+var_D4] +
push eax  +
mov ecx offset dword_44FB84 +
call sub_402230  +
push 0Bh  +
call sub_4119E0  +
add esp 4 +
jmp loc_41412B  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aNoRengaTimeInC  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
add esp 14h +
push 1  +
push 3  +
lea ecx [ebp+var_1AC] +
call sub_408860  +
push 0  +
mov byte ptr [ebp+var_4] 2 +
call sub_427330  +
add esp 4 +
push edx  +
push eax  +
lea ecx [ebp+var_19C] +
call sub_40FC80  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_1AC] +
call sub_408AC0  +
mov byte ptr [ebp+var_4] 3 +
cmp [eax+14h] edi +
jb loc_4140C0  +
mov eax [eax] +
push eax  +
mov ecx offset dword_44FB84 +
call sub_4023F0  +
lea ecx [ebp+var_2C] +
call sub_421E10  +
lea ecx [ebp+var_1AC] +
mov byte ptr [ebp+var_4] 0 +
call sub_406DE0  +
push 0Bh  +
call sub_4119E0  +
add esp 4 +
jmp loc_41412B  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aLaunchingAam_2  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
jmp loc_414123  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aUnknownStatusC  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov eax dword_44FB68 +
cmp dword_44FB7C edi +
jnb loc_41413D  +
mov eax offset dword_44FB68 +
mov ecx dword_451AD8 +
push eax  +
call sub_408E20  +
cmp [ebp+var_34] edi +
jb loc_41417D  +
mov edx [ebp+var_48] +
push edx  +
call sub_42520B  +
add esp 4 +
jmp loc_41417D  +
push offset aCheckNoSnPrese  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E978  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor esi esi +
cmp dword_451AD8 esi +
jnz loc_41421B  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aPerformworkflo  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
jmp loc_414585  +
call sub_410280  +
test al al +
jnz loc_41424A  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aPerformworkf_0  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
add esp 14h +
jmp loc_414585  +
mov [ebp+var_48] esi +
mov [ebp+var_4C] esi +
mov [ebp+var_30] esi +
call sub_411340  +
cmp dword_44FAEC esi +
jz loc_414585  +
mov edx dword_44FADC +
mov ebx 10h +
cmp dword_44FAF0 ebx +
jnb loc_41427C  +
mov edx offset dword_44FADC +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_414281  +
mov ecx dword_451AD8 +
sub eax edi +
push eax  +
push edx  +
sub ecx 0FFFFFF80h +
call sub_402230  +
mov ecx dword_451AC4 +
push ecx  +
call sub_41BE60  +
add esp 4 +
mov [ebp+var_34] eax +
mov eax dword_44FADC +
cmp dword_44FAF0 ebx +
jnb loc_4142BE  +
mov eax offset dword_44FADC +
xor edi edi +
push edi  +
lea edx [ebp+var_4C] +
push edx  +
lea ecx [ebp+var_48] +
push ecx  +
push edi  +
lea edx [ebp+var_50] +
push edx  +
push edi  +
push eax  +
mov eax dword_451AC4 +
push eax  +
call sub_41BBE0  +
mov eax dword_44FADC +
add esp 20h +
cmp dword_44FAF0 ebx +
jnb loc_4142F0  +
mov eax offset dword_44FADC +
mov ecx [ebp+var_34] +
mov edx dword_451AC4 +
push ecx  +
push eax  +
push edx  +
call sub_41C3D0  +
mov eax dword_44FADC +
add esp 0Ch +
cmp dword_44FAF0 ebx +
jnb loc_414316  +
mov eax offset dword_44FADC +
mov edx dword_451AC4 +
lea ecx [ebp+var_30] +
push ecx  +
push offset aSilentactivato  +
push eax  +
push edx  +
call sub_41CA50  +
mov eax [ebp+var_30] +
add esp 10h +
cmp eax edi +
jz loc_414573  +
lea ebx [ebx+0] +
cmp [eax+esi*4] edi +
jz loc_414573  +
mov eax [eax+esi*4] +
mov ecx [eax] +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push ecx  +
push offset aPerformworkf_1  +
push edx  +
push 4  +
push offset aActivation  +
push eax  +
call sub_41D8D0  +
mov ecx [ebp+var_30] +
mov edx [ecx+esi*4] +
mov eax [edx] +
push 13h  +
push eax  +
push offset aSubscriptionre  +
call sub_40F830  +
add esp 24h +
test ax ax +
jz loc_414523  +
mov ecx [ebp+var_30] +
mov edx [ecx+esi*4] +
mov eax [edx] +
push 1Ah  +
push eax  +
push offset aSubscriptionex  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_414523  +
mov ecx [ebp+var_30] +
mov edx [ecx+esi*4] +
mov eax [edx] +
push 16h  +
push eax  +
push offset aMissingpayment  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_414523  +
mov ecx [ebp+var_30] +
mov edx [ecx+esi*4] +
mov eax [edx] +
push 16h  +
push eax  +
push offset aSubscriptionac  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_414467  +
mov ecx [ebp+var_30] +
mov edx [ecx+esi*4] +
mov eax [edx] +
push 19h  +
push eax  +
push offset aRefreshactivat  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_414471  +
mov ecx [ebp+var_30] +
mov edx [ecx+esi*4] +
mov eax [edx] +
push 1Ch  +
push eax  +
push offset aRefreshactiv_0  +
call sub_40F830  +
add esp 0Ch +
test ax ax +
jz loc_4144F9  +
mov ecx [ebp+var_30] +
mov edx [ecx+esi*4] +
mov eax [edx] +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push eax  +
push offset aUnidentified_0  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
mov eax [ebp+var_30] +
add esp 18h +
inc esi  +
cmp eax edi +
jnz loc_414340  +
jmp loc_414573  +
call sub_413360  +
jmp loc_414573  +
mov eax [ebp+var_30] +
mov [ebp+var_44] edi +
mov [ebp+var_40] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_38] edi +
mov ecx [eax+esi*4] +
mov edx [ecx+0Ch] +
push edx  +
lea ecx [ebp+var_2C] +
call sub_4023B0  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_2C] +
push ecx  +
mov [ebp+var_4] edi +
call sub_40F8F0  +
add esp 8 +
lea ecx [ebp+var_2C] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_421E10  +
lea edx [ebp+var_3C] +
push edx  +
call sub_427330  +
mov eax [ebp+var_38] +
add esp 4 +
cmp eax [ebp+var_40] +
jl loc_4144DE  +
jg loc_4144CF  +
mov ecx [ebp+var_3C] +
cmp ecx [ebp+var_44] +
jb loc_4144DE  +
push 1  +
call sub_412990  +
add esp 4 +
jmp loc_414573  +
mov edx dword_44FF1C +
mov eax dword_451A64 +
push offset aEventNotStarte  +
push edx  +
push 5  +
push offset aActivation  +
push eax  +
jmp loc_41456B  +
mov ecx dword_44FF1C +
mov edx dword_451A64 +
push offset aRefreshActivat  +
push ecx  +
push 5  +
push offset aActivation  +
push edx  +
call sub_41D8D0  +
push edi  +
call sub_412990  +
add esp 18h +
jmp loc_414573  +
mov ecx dword_451AD8 +
call sub_4064E0  +
mov esi eax +
cmp esi edi +
jz loc_414552  +
push esi  +
mov ecx offset dword_44FB68 +
call sub_4023F0  +
mov ecx dword_451AD8 +
push esi  +
call sub_408830  +
call sub_413C70  +
jmp loc_414573  +
mov eax dword_44FF1C +
mov ecx dword_451A64 +
push offset aNoEventToBeTri  +
push eax  +
push 5  +
push offset aActivation  +
push ecx  +
call sub_41D8D0  +
add esp 14h +
mov edx [ebp+var_34] +
mov eax dword_451AC4 +
push edx  +
push eax  +
call sub_41BF60  +
add esp 8 +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DA7B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 1018h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41460E  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx eax +
call sub_415020  +
jmp loc_414610  +
xor eax eax +
mov [esi] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ecx] +
pop ebp  +
jmp sub_416030  +
***
mov ecx [ecx] +
jmp loc_414920  +
***
mov ecx [ecx] +
jmp loc_4161A0  +
***
mov ecx [ecx] +
jmp sub_4162B0  +
***
mov ecx [ecx] +
pop ebp  +
jmp sub_4161B0  +
***
mov ecx [ecx] +
pop ebp  +
jmp sub_4161F0  +
***
test esi esi +
jz loc_4146A7  +
mov ecx esi +
call sub_414AA0  +
push esi  +
call sub_42520B  +
add esp 4 +
pop esi  +
retn   +
***
test esi esi +
jz loc_4146C7  +
mov ecx esi +
call sub_416190  +
push esi  +
call sub_42520B  +
add esp 4 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43EA2C  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov eax [ebp+arg_8] +
mov edx [ebp+lpMultiByteStr] +
mov ecx [ecx] +
push eax  +
push edx  +
lea eax [ebp+arg_8] +
push eax  +
call sub_414D60  +
mov esi eax +
push 4  +
mov [ebp+var_4] 1 +
call sub_425CDC  +
add esp 4 +
mov [ebp+lpMultiByteStr] eax +
mov byte ptr [ebp+var_4] 2 +
test eax eax +
jz loc_414736  +
push esi  +
mov ecx eax +
call sub_416170  +
jmp loc_414738  +
xor eax eax +
mov esi [ebp+arg_0] +
mov [esi] eax +
lea ecx [ebp+arg_8] +
mov [ebp+var_10] 1 +
mov byte ptr [ebp+var_4] 0 +
call sub_416190  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax ecx +
xor ecx ecx +
mov [eax] cx +
mov [eax+4] ecx +
mov [eax+8] ecx +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+8] +
push eax  +
call sub_425D5C  +
add esp 4 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43EA58  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_416580  +
xor ebx ebx +
push offset loc_414780  +
push offset loc_414770  +
push 3FDh  +
push 0Ch  +
lea eax [esi+38h] +
push eax  +
mov [ebp+var_4] ebx +
mov dword ptr [esi] offset off_443F0C +
mov byte ptr [esi+8] 1 +
mov dword ptr [esi+0Ch] 0FFFFFFFFh +
mov [esi+10h] ebx +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov [esi+1Ch] ebx +
mov [esi+20h] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
mov [esi+2Ch] ebx +
mov [esi+30h] ebx +
mov [esi+34h] ebx +
call sub_428272  +
mov [esi+3014h] ebx +
mov [esi+3018h] ebx +
mov [esi+301Ch] ebx +
mov [esi+3020h] ebx +
mov [esi+3024h] ebx +
mov byte ptr [esi+3028h] 1 +
mov [esi+302Ch] ebx +
mov [esi+3030h] bl +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_416DC0  +
test [ebp+arg_0] 1 +
jz loc_41488A  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
push edi  +
push ebx  +
push eax  +
mov esi ecx +
call sub_418690  +
mov ecx [ebp+arg_0] +
push edi  +
push ebx  +
push ecx  +
lea ecx [esi+14h] +
mov [ebp+arg_8] eax +
call sub_418920  +
add eax [ebp+arg_8] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
pop ebp  +
jmp sub_418690  +
***
push esi  +
mov esi ecx +
call sub_418B00  +
test [ebp+arg_0] 1 +
jz loc_41490A  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov al [ecx+1008h] +
retn   +
***
jmp sub_4190B0  +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_41494E  +
mov eax [ecx] +
mov edx [eax] +
push 1  +
call edx  +
retn   +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
xor ecx ecx +
mov eax edi +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
add esp 4 +
mov [esi+4] edi +
mov [esi] eax +
pop edi  +
mov dword ptr [esi+8] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push eax  +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov ecx [ebp+arg_0] +
xor eax eax +
cmp word ptr [ecx] 24h +
push esi  +
mov esi [ebp+arg_4] +
jnz loc_4149C3  +
cmp eax esi +
jnb loc_414A0A  +
cmp word ptr [ecx+eax*2] 24h +
jnz loc_414A0A  +
inc eax  +
cmp eax 3 +
jl loc_4149B2  +
push edi  +
mov edi [ebp+arg_8] +
lea edx [ecx+eax*2] +
mov [edi] edx +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
pop edi  +
cmp eax esi +
jnb loc_4149EE  +
lea ebx [ebx+0] +
cmp word ptr [ecx+eax*2] 3Dh +
jz loc_4149F5  +
inc dword ptr [edx]  +
inc eax  +
cmp eax esi +
jb loc_4149E0  +
cmp word ptr [ecx+eax*2] 3Dh +
jnz loc_4149F6  +
inc eax  +
mov edx [ebp+arg_10] +
sub esi eax +
lea ecx [ecx+eax*2] +
mov eax [ebp+arg_14] +
mov [edx] ecx +
mov [eax] esi +
mov al 1 +
pop esi  +
pop ebp  +
retn   +
xor al al +
pop esi  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
xor eax eax +
cmp byte ptr [ecx] 24h +
push esi  +
mov esi [ebp+arg_4] +
jnz loc_414A31  +
cmp eax esi +
jnb loc_414A6F  +
cmp byte ptr [eax+ecx] 24h +
jnz loc_414A6F  +
inc eax  +
cmp eax 3 +
jl loc_414A21  +
push edi  +
mov edi [ebp+arg_8] +
lea edx [eax+ecx] +
mov [edi] edx +
mov edx [ebp+arg_C] +
mov dword ptr [edx] 0 +
pop edi  +
cmp eax esi +
jnb loc_414A55  +
cmp byte ptr [eax+ecx] 3Dh +
jz loc_414A5B  +
inc dword ptr [edx]  +
inc eax  +
cmp eax esi +
jb loc_414A48  +
cmp byte ptr [eax+ecx] 3Dh +
jnz loc_414A5C  +
inc eax  +
mov edx [ebp+arg_10] +
add ecx eax +
sub esi eax +
mov eax [ebp+arg_14] +
mov [edx] ecx +
mov [eax] esi +
mov al 1 +
pop esi  +
pop ebp  +
retn   +
xor al al +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
cmp byte ptr [esi] 0 +
jz loc_414A94  +
mov eax [esi+4] +
push eax  +
call sub_425D5C  +
add esp 4 +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43EA88  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
cmp esi dword_451B08 +
jnz loc_414AE2  +
mov dword_451B08 0 +
mov eax [esi+1014h] +
push eax  +
call sub_425D5C  +
mov dword ptr [esi+1014h] 0 +
mov ecx [esi+100Ch] +
add esp 4 +
test ecx ecx +
jz loc_414B0A  +
call sub_416560  +
mov ecx esi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_4190B0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi] +
xor dl dl +
mov ecx esi +
test ax ax +
jz loc_414BA8  +
cmp ax 22h +
jnz loc_414B4D  +
test dl dl +
jz loc_414B62  +
cmp ax 5Ch +
movzx eax word ptr [ecx+2] +
setz dl  +
add ecx 2 +
test ax ax +
jnz loc_414B43  +
jmp loc_414BA8  +
test ecx ecx +
jz loc_414BA8  +
movzx eax word ptr [ecx+2] +
lea esi [ecx+2] +
push edi  +
xor edi edi +
xor dl dl +
mov ecx esi +
test ax ax +
jz loc_414BA1  +
lea esp [esp+0] +
cmp ax 22h +
jnz loc_414B8A  +
test dl dl +
jz loc_414B9F  +
cmp ax 5Ch +
movzx eax word ptr [ecx+2] +
setz dl  +
add ecx 2 +
test ax ax +
jnz loc_414B80  +
jmp loc_414BA1  +
mov edi ecx +
mov eax edi +
test edi edi +
pop edi  +
jnz loc_414BB4  +
push esi  +
call sub_4191C0  +
add esp 4 +
lea eax [esi+eax*2] +
mov ecx [ebp+arg_10] +
mov edx [ebp+arg_C] +
push ecx  +
mov ecx [ebp+arg_8] +
push edx  +
mov edx [ebp+arg_4] +
push ecx  +
sub eax esi +
push edx  +
sar eax 1 +
push eax  +
push esi  +
call sub_4149A0  +
add esp 18h +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43EAD3  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+arg_0] +
lea edx [ebp+var_14] +
push edx  +
lea eax [ebp+var_1C] +
push eax  +
push ecx  +
call sub_414B30  +
add esp 14h +
test al al +
jz loc_414D43  +
mov esi [ebp+var_14] +
push esi  +
call sub_425006  +
mov edi eax +
xor eax eax +
add esp 4 +
cmp edi eax +
setnz [ebp+var_18]  +
mov [ebp+var_14] edi +
mov [ebp+var_4] eax +
cmp esi eax +
jbe loc_414C5C  +
mov ecx [ebp+var_1C] +
mov dl [ecx+eax*2] +
mov [eax+edi] dl +
inc eax  +
cmp eax esi +
jb loc_414C51  +
cmp byte ptr [ebx+1010h] 2 +
jl loc_414CB2  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_10] +
push eax  +
push ecx  +
lea edx [ebp+arg_0] +
push edx  +
call sub_418E90  +
add esp 0Ch +
mov ebx [ebx+100Ch] +
push 0  +
push 0  +
lea ecx [ebp+arg_0] +
mov byte ptr [ebp+var_4] 1 +
call sub_418880  +
add eax eax +
push eax  +
lea ecx [ebp+arg_0] +
call sub_418870  +
push eax  +
push esi  +
push edi  +
mov ecx ebx +
call sub_417780  +
lea ecx [ebp+arg_0] +
mov byte ptr [ebp+var_4] 0 +
call sub_418860  +
jmp loc_414D20  +
push 0  +
push esi  +
push edi  +
lea ecx [ebp+var_30] +
call sub_418410  +
lea eax [ebp+var_30] +
push eax  +
mov ecx ebx +
mov byte ptr [ebp+var_4] 2 +
call sub_419170  +
test eax eax +
jz loc_414CDC  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+0Ch] +
push 1  +
call eax  +
push 18h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_1C] eax +
mov byte ptr [ebp+var_4] 3 +
test eax eax +
jz loc_414D06  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_10] +
push ecx  +
push edx  +
lea ecx [ebp+var_30] +
push ecx  +
mov ecx eax +
call sub_419010  +
jmp loc_414D08  +
xor eax eax +
push eax  +
mov ecx ebx +
mov byte ptr [ebp+var_4] 2 +
call sub_4190E0  +
lea ecx [ebp+var_30] +
mov byte ptr [ebp+var_4] 0 +
call sub_4184F0  +
cmp [ebp+var_18] 0 +
jz loc_414D4A  +
push edi  +
call sub_425D5C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov byte ptr [ebx+1008h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43EB49  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea ecx [ebp+var_10] +
mov [ebp+var_14] 0 +
call sub_416160  +
mov edx [ebp+lpMultiByteStr] +
mov ebx 1 +
mov [ebp+var_4] ebx +
test edx edx +
jz loc_414FE9  +
cmp byte ptr [edx] 0 +
jz loc_414FE9  +
mov eax edx +
lea edi [eax+1] +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_414DC0  +
lea ecx [ebp+var_20] +
push ecx  +
lea ecx [ebp+lpMultiByteStr] +
push ecx  +
lea ecx [ebp+var_18] +
push ecx  +
lea ecx [ebp+var_1C] +
push ecx  +
sub eax edi +
push eax  +
push edx  +
call sub_414A10  +
add esp 18h +
test al al +
jnz loc_414DFA  +
mov esi [ebp+arg_0] +
lea edx [ebp+var_10] +
push edx  +
mov ecx esi +
call sub_416170  +
jmp loc_414FF7  +
mov edi [ebp+var_18] +
mov ebx [ebp+var_1C] +
push 0  +
push edi  +
push ebx  +
lea ecx [ebp+var_3C] +
call sub_418410  +
cmp byte ptr [esi+1010h] 2 +
mov byte ptr [ebp+var_4] 2 +
jl loc_414E59  +
mov ecx [esi+100Ch] +
push edi  +
push ebx  +
call sub_416690  +
cmp eax 0FFFFFFFFh +
jz loc_414E7D  +
mov ecx [esi+100Ch] +
push eax  +
lea eax [ebp+lpMultiByteStr] +
push eax  +
call sub_417050  +
mov byte ptr [ebp+var_4] 3 +
push eax  +
lea ecx [ebp+var_10] +
call sub_418840  +
lea ecx [ebp+lpMultiByteStr] +
mov byte ptr [ebp+var_4] 2 +
call sub_418860  +
jmp loc_414FC6  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_419110  +
test eax eax +
jz loc_414E7D  +
mov ecx eax +
call sub_418B60  +
push eax  +
lea ecx [ebp+var_10] +
call sub_418840  +
jmp loc_414FC6  +
mov ecx dword_451B08 +
cmp esi ecx +
jz loc_414ED2  +
test ecx ecx +
jz loc_414ED2  +
cmp byte ptr [ecx+1010h] 2 +
jl loc_414EC5  +
mov ecx [ecx+100Ch] +
push edi  +
push ebx  +
call sub_416690  +
cmp eax 0FFFFFFFFh +
jz loc_414ED2  +
mov edx dword_451B08 +
mov ecx [edx+100Ch] +
push eax  +
lea eax [ebp+lpMultiByteStr] +
push eax  +
call sub_417050  +
mov byte ptr [ebp+var_4] 4 +
jmp loc_414E3F  +
lea edx [ebp+var_3C] +
push edx  +
call sub_419110  +
test eax eax +
jnz loc_414E68  +
mov esi [ebp+var_20] +
test esi esi +
jz loc_414FC6  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_414F44  +
cmp dword ptr [edi] 0 +
jz loc_414F44  +
push esi  +
lea ecx [ebp+var_28] +
call sub_414950  +
mov eax [edi] +
lea ecx [ebp+arg_8] +
push ecx  +
lea edx [ebp+var_28] +
push edx  +
mov [ebp+arg_8] eax +
mov eax [ebp+lpMultiByteStr] +
push esi  +
mov bl 7 +
push eax  +
mov byte ptr [ebp+var_4] bl +
call sub_4193C0  +
mov ecx [ebp+var_20] +
mov edx [ebp+var_28] +
push ecx  +
push edx  +
lea eax [ebp+lpMultiByteStr] +
push eax  +
call sub_418E90  +
add esp 1Ch +
push eax  +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+var_4] 8 +
call sub_418840  +
lea ecx [ebp+lpMultiByteStr] +
mov byte ptr [ebp+var_4] bl +
call sub_418860  +
mov ecx [ebp+var_28] +
mov byte ptr [ebp+var_4] 2 +
push ecx  +
jmp loc_414FBE  +
xor ecx ecx +
mov eax esi +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov edi eax +
add esp 4 +
test edi edi +
setnz bl  +
mov [ebp+var_24] bl +
mov [ebp+var_20] edi +
xor eax eax +
mov byte ptr [ebp+var_4] 5 +
test esi esi +
jz loc_414F8E  +
mov ecx [ebp+lpMultiByteStr] +
lea esp [esp+0] +
movsx dx byte ptr [eax+ecx] +
mov [edi+eax*2] dx +
inc eax  +
cmp eax esi +
jb loc_414F80  +
push esi  +
lea eax [ebp+lpMultiByteStr] +
push edi  +
push eax  +
call sub_418E90  +
add esp 0Ch +
push eax  +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+var_4] 6 +
call sub_418840  +
lea ecx [ebp+lpMultiByteStr] +
mov byte ptr [ebp+var_4] 5 +
call sub_418860  +
mov byte ptr [ebp+var_4] 2 +
test bl bl +
jz loc_414FC6  +
push edi  +
call sub_425D5C  +
add esp 4 +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx esi +
call sub_416170  +
lea ecx [ebp+var_3C] +
mov [ebp+var_14] 1 +
mov byte ptr [ebp+var_4] 1 +
call sub_4184F0  +
jmp loc_414FFA  +
mov esi [ebp+arg_0] +
lea edx [ebp+var_10] +
push edx  +
mov ecx esi +
call sub_416170  +
mov [ebp+var_14] ebx +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+var_4] 0 +
call sub_416190  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43EB83  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_419080  +
push 3034h  +
mov [ebp+var_4] 0 +
mov byte ptr [esi+1008h] 1 +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_41507F  +
mov ecx eax +
call sub_4147A0  +
jmp loc_415081  +
xor eax eax +
mov byte ptr [ebp+var_4] 0 +
mov [esi+100Ch] eax +
test eax eax +
jz loc_415096  +
mov ecx eax +
call sub_416550  +
cmp [ebp+arg_0] 0 +
mov dword ptr [esi+1014h] 0 +
mov eax esi +
jz loc_4150B1  +
mov word ptr [esi+1010h] 702h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 18h +
push esi  +
mov esi ecx +
mov eax [esi] +
mov ecx [eax+4] +
test byte ptr [ecx+esi+0Ch] 6 +
jnz loc_41513B  +
mov edx [ebp+arg_8] +
mov ecx [ecx+esi+38h] +
mov eax [ecx] +
mov eax [eax+28h] +
push 1  +
push edx  +
mov edx [ebp+arg_4] +
push edx  +
mov edx [ebp+arg_0] +
push edx  +
lea edx [ebp+var_18] +
push edx  +
call eax  +
mov eax [ebp+var_10] +
cdq   +
add eax [ebp+var_18] +
adc edx [ebp+var_14] +
cmp eax ds:dword_446E30 +
jnz loc_41513B  +
cmp edx ds:dword_446E34 +
jnz loc_41513B  +
mov ecx [esi] +
mov ecx [ecx+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 2 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_415133  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [esi+20h] +
mov eax [eax] +
test eax eax +
jz loc_415197  +
mov ecx [esi+30h] +
mov ecx [ecx] +
cmp ecx 1 +
jle loc_415178  +
mov eax [esi+30h] +
dec dword ptr [eax]  +
mov esi [esi+20h] +
mov eax [esi] +
inc eax  +
mov [esi] eax +
movzx eax byte ptr [eax] +
pop esi  +
retn   +
test eax eax +
jz loc_415197  +
mov edx [esi+30h] +
cmp dword ptr [edx] 0 +
jle loc_415197  +
mov eax edx +
dec dword ptr [eax]  +
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ecx+1] +
mov [eax] edx +
movzx eax byte ptr [ecx] +
jmp loc_4151A0  +
mov eax [esi] +
mov edx [eax+1Ch] +
mov ecx esi +
call edx  +
cmp eax 0FFFFFFFFh +
jnz loc_4151A9  +
or eax eax +
pop esi  +
retn   +
mov eax [esi+20h] +
cmp dword ptr [eax] 0 +
jz loc_4151C0  +
mov ecx [esi+30h] +
cmp dword ptr [ecx] 0 +
jle loc_4151C0  +
mov edx [eax] +
movzx eax byte ptr [edx] +
pop esi  +
retn   +
mov eax [esi] +
mov edx [eax+18h] +
mov ecx esi +
pop esi  +
jmp edx  +
***
push 0FFFFFFFFh  +
push offset loc_43EBA8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
test eax eax +
jnz loc_41533B  +
mov ecx [ecx+3Ch] +
test ecx ecx +
jz loc_41521F  +
call sub_406E00  +
cmp [ebp+arg_0] 0 +
jnz loc_4152C9  +
mov eax [esi] +
mov edx [eax+4] +
mov ecx [edx+esi+14h] +
test cl 1 +
jz loc_4152C9  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [esi+edx] +
call sub_404B40  +
push eax  +
mov [ebp+var_4] 0 +
call sub_406B70  +
add esp 4 +
lea ecx [ebp+arg_0] +
mov edi eax +
call sub_404AF0  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
mov [ebp+var_4] 1 +
jz loc_415288  +
mov edx [ecx+30h] +
cmp dword ptr [edx] 0 +
jle loc_415288  +
mov eax [eax] +
movzx eax byte ptr [eax] +
jmp loc_415290  +
mov eax [ecx] +
mov edx [eax+18h] +
call edx  +
nop   +
cmp eax 0FFFFFFFFh +
jnz loc_4152B6  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 1 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_4152AC  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
jmp loc_4152C2  +
mov edx [edi+10h] +
movzx ecx al +
test byte ptr [edx+ecx*2] 48h +
jnz loc_4152EC  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
jnz loc_41533B  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
call sub_415150  +
jmp loc_415290  +
mov ecx [ebp-14h] +
mov edx [ecx] +
mov eax [edx+4] +
add eax ecx +
mov ecx [eax+0Ch] +
or ecx 4 +
cmp dword ptr [eax+38h] 0 +
jnz loc_415315  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_415332  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_41532D +
retn   +
mov esi [ebp-14h] +
jmp loc_4152C9  +
push 0  +
push 0  +
call sub_425C90  +
mov eax [ecx+0Ch] +
or eax 2 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41534A  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43EBE8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
xor edi edi +
mov [ebp+var_14] edi +
mov [ebp+var_20] esi +
cmp ecx edi +
jz loc_4153BC  +
mov edx [ecx] +
mov eax [edx+4] +
call eax  +
mov ecx [esi] +
mov eax [ecx+4] +
mov [ebp+var_4] edi +
cmp [eax+esi+0Ch] edi +
jnz loc_4153D9  +
mov eax [eax+esi+3Ch] +
cmp eax edi +
jz loc_4153D9  +
mov ecx eax +
call sub_406E00  +
mov eax [esi] +
mov eax [eax+4] +
cmp [eax+esi+0Ch] edi +
setz cl  +
mov [ebp+var_1C] cl +
mov [ebp+var_4] 1 +
test cl cl +
jnz loc_4153FA  +
mov edx 4 +
jmp loc_415464  +
mov ecx [eax+esi+38h] +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
mov edx [edx+24h] +
push ebx  +
push edi  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call edx  +
cmp eax edi +
jnz loc_41541D  +
cmp edx ebx +
jz loc_415424  +
mov [ebp+var_14] 4 +
mov [ebp+var_4] 1 +
jmp loc_415461  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov eax [eax+4] +
add eax ecx +
mov ecx [eax+0Ch] +
or ecx 4 +
cmp dword ptr [eax+38h] 0 +
jnz loc_415446  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_4154CD  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_41545E +
retn   +
mov esi [ebp-18h] +
mov edx [ebp+var_14] +
mov ecx [esi] +
mov ecx [ecx+4] +
add ecx esi +
test edx edx +
jz loc_415485  +
mov eax [ecx+0Ch] +
or eax edx +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41547D  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
mov [ebp+var_4] 4 +
call sub_425011  +
test al al +
jnz loc_41549C  +
mov ecx esi +
call sub_406E90  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx [eax+esi+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
test ecx ecx +
jz loc_4154B7  +
mov edx [ecx] +
mov eax [edx+8] +
call eax  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0  +
push 0  +
call sub_425C90  +
***
push 0FFFFFFFFh  +
push offset loc_43EC20  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
xor edi edi +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
mov [ebp+var_18] edi +
mov [ebp+var_20] esi +
cmp ecx edi +
jz loc_415532  +
mov edx [ecx] +
mov eax [edx+4] +
call eax  +
push 1  +
mov ecx esi +
mov [ebp+var_4] edi +
call sub_4151D0  +
mov [ebp+var_1C] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41558C  +
mov ecx [esi] +
mov edx [ecx+4] +
mov ecx [edx+esi+38h] +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
mov eax [ecx] +
mov edx [ebp+arg_0] +
mov eax [eax+20h] +
push ebx  +
push edi  +
push edx  +
mov byte ptr [ebp+var_4] 2 +
call eax  +
add [esi+8] eax +
mov ecx edx +
adc [esi+0Ch] ecx +
cmp eax edi +
jnz loc_41557C  +
cmp ecx ebx +
jz loc_415583  +
mov [ebp+var_18] 3 +
mov [ebp+var_4] 1 +
xor edi edi +
mov eax [esi] +
mov ecx [eax+4] +
mov edx [ebp+var_18] +
add ecx esi +
cmp edx edi +
jz loc_4155AE  +
mov eax [ecx+0Ch] +
or eax edx +
cmp [ecx+38h] edi +
jnz loc_4155A7  +
or eax 4 +
push edi  +
push eax  +
call sub_404F50  +
mov ecx [esi] +
mov edx [ecx+4] +
mov ecx [edx+esi+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp ecx edi +
jz loc_4155C9  +
mov eax [ecx] +
mov edx [eax+8] +
call edx  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebp-14h] +
mov edx [ecx] +
mov eax [edx+4] +
add eax ecx +
mov ecx [eax+0Ch] +
or ecx 4 +
cmp dword ptr [eax+38h] 0 +
jnz loc_4155F8  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_415618  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_415610 +
retn   +
***
mov esi [ebp-14h] +
jmp loc_41558A  +
***
push 0  +
push 0  +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43EC76  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_30] ecx +
mov ebx [ebp+arg_0] +
xor esi esi +
push esi  +
push 4  +
lea eax [ebp+var_14] +
push eax  +
mov ecx ebx +
mov [ebp+var_18] esi +
mov [ebp+var_24] esi +
mov [ebp+var_3C] esi +
mov [ebp+var_10] esi +
call sub_4154E0  +
mov ecx [ebx] +
mov edx [ecx+4] +
mov eax [edx+ebx+0Ch] +
test al 6 +
jz loc_41569E  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+var_14] +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov edi eax +
mov eax [ebp+var_14] +
add esp 4 +
lea ecx ds:0[eax*4] +
push 0  +
push ecx  +
push edi  +
mov ecx ebx +
mov [ebp+var_38] edi +
call sub_4154E0  +
mov edx [ebx] +
mov eax [edx+4] +
test byte ptr [eax+ebx+0Ch] 6 +
jz loc_4156EC  +
mov [ebp+var_18] 0FFFFFFFFh +
jmp loc_41599C  +
mov ecx [ebp+var_14] +
mov edi [edi+ecx*4-4] +
xor ecx ecx +
mov eax edi +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
add esp 4 +
push 0  +
lea ecx ds:0[edi*4] +
push ecx  +
push eax  +
mov ecx ebx +
mov [ebp+var_24] eax +
call sub_4154E0  +
mov edx [ebx] +
mov eax [edx+4] +
test byte ptr [eax+ebx+0Ch] 6 +
jnz loc_4156E0  +
mov eax [ebp+var_14] +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov edi eax +
mov eax [ebp+var_14] +
add esp 4 +
lea ecx [eax+eax] +
push 0  +
push ecx  +
push edi  +
mov ecx ebx +
mov [ebp+var_3C] edi +
call sub_4154E0  +
mov edx [ebx] +
mov eax [edx+4] +
test byte ptr [eax+ebx+0Ch] 6 +
jnz loc_4156E0  +
mov [ebp+var_34] esi +
cmp [ebp+var_14] esi +
jbe loc_41599C  +
mov ecx [ebp+var_38] +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] edi +
mov edx [ebp+var_1C] +
movzx eax word ptr [edx] +
mov ecx [ebp+var_30] +
mov edx [ecx+eax*4] +
mov eax [ebp+var_10] +
mov ecx [ebp+var_20] +
mov byte ptr [ebp+arg_0+3] 1 +
mov [ebp+var_48] edx +
cmp eax [ecx] +
jnb loc_415971  +
mov eax [ebp+var_10] +
mov edx [ebp+var_24] +
mov edi [edx+eax*4] +
inc eax  +
push edi  +
mov [ebp+var_10] eax +
call sub_425006  +
add esp 4 +
push 0  +
mov esi eax +
push edi  +
push esi  +
mov ecx ebx +
call sub_4154E0  +
mov eax [ebx] +
mov ecx [eax+4] +
test byte ptr [ecx+ebx+0Ch] 6 +
jnz loc_4156E0  +
push 1  +
push edi  +
push esi  +
lea ecx [ebp+var_6C] +
call sub_418410  +
push esi  +
mov [ebp+var_4] 0 +
call sub_425D5C  +
mov eax [ebp+var_10] +
mov edx [ebp+var_24] +
mov edi [edx+eax*4] +
inc [ebp+var_10]  +
push edi  +
call sub_425006  +
add esp 8 +
push 0  +
mov esi eax +
push edi  +
push esi  +
mov ecx ebx +
call sub_4154E0  +
mov ecx [ebx] +
mov edx [ecx+4] +
test byte ptr [edx+ebx+0Ch] 6 +
jnz loc_41598B  +
mov al [ebp+arg_4] +
test al al +
jz loc_4158E2  +
lea ecx [ebp+var_28] +
push ecx  +
movsx eax al +
push edi  +
push esi  +
mov [ebp+var_28] eax +
call sub_4192B0  +
xor ecx ecx +
mov [ebp+var_2C] eax +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov [ebp+var_58] eax +
mov eax [ebp+var_2C] +
mov [ebp+var_54] eax +
mov [ebp+var_50] 0 +
lea ecx [ebp+var_28] +
push ecx  +
lea edx [ebp+var_58] +
push edx  +
push edi  +
push esi  +
mov byte ptr [ebp+var_4] 1 +
call sub_4193C0  +
push 18h  +
call sub_425CDC  +
mov edi eax +
add esp 24h +
mov [ebp+var_4C] edi +
mov byte ptr [ebp+var_4] 2 +
test edi edi +
jz loc_4158D2  +
mov eax [ebp+var_58] +
lea ecx [ebp+var_6C] +
push ecx  +
mov ecx edi +
mov [ebp+var_40] eax +
call sub_418520  +
mov edx [ebp+var_2C] +
push 0  +
lea eax [edx+edx] +
mov edx [ebp+var_40] +
push eax  +
lea ecx [edi+14h] +
push edx  +
mov byte ptr [ebp+var_4] 3 +
mov dword ptr [edi] offset off_443F14 +
call sub_4164C0  +
mov eax [ebp+var_58] +
push eax  +
call sub_425D5C  +
add esp 4 +
jmp loc_415922  +
mov eax [ebp+var_58] +
push eax  +
xor edi edi +
call sub_425D5C  +
add esp 4 +
jmp loc_415922  +
push 18h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_2C] eax +
mov byte ptr [ebp+var_4] 4 +
test eax eax +
jz loc_415920  +
lea ecx [ebp+var_6C] +
push ecx  +
mov ecx eax +
call sub_418520  +
mov eax [ebp+var_2C] +
push 0  +
push edi  +
lea ecx [eax+14h] +
push esi  +
mov byte ptr [ebp+var_4] 5 +
mov dword ptr [eax] offset off_443F14 +
call sub_4164C0  +
mov edi [ebp+var_2C] +
jmp loc_415922  +
xor edi edi +
push esi  +
call sub_425D5C  +
add esp 4 +
xor esi esi +
cmp byte ptr [ebp+arg_0+3] 0 +
jnz loc_41593B  +
mov edx [ebp+var_44] +
mov [edx+4] edi +
jmp loc_41594B  +
mov eax [ebp+var_1C] +
movzx ecx word ptr [eax] +
mov edx [ebp+var_30] +
mov [edx+ecx*4] edi +
mov byte ptr [ebp+arg_0+3] 0 +
lea ecx [ebp+var_6C] +
mov [ebp+var_44] edi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_4184F0  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_20] +
cmp eax [ecx] +
jb loc_4157A7  +
mov edx [ebp+var_48] +
mov [edi+4] edx +
mov eax [ebp+var_34] +
add [ebp+var_1C] 2 +
add [ebp+var_20] 4 +
inc eax  +
mov [ebp+var_34] eax +
cmp eax [ebp+var_14] +
jb loc_415786  +
jmp loc_41599C  +
or eax 0FFFFFFFFh +
lea ecx [ebp+var_6C] +
mov [ebp+var_18] eax +
mov [ebp+var_4] eax +
call sub_4184F0  +
mov eax [ebp+var_38] +
push eax  +
call sub_425D5C  +
mov ecx [ebp+var_24] +
push ecx  +
call sub_425D5C  +
mov edx [ebp+var_3C] +
push edx  +
call sub_425D5C  +
push esi  +
call sub_425D5C  +
mov eax [ebp+var_18] +
add esp 10h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
mov eax [ebp+arg_C] +
push esi  +
push eax  +
mov esi ecx +
call sub_419B90  +
add esp 4 +
test al al +
mov eax [ebp+arg_4] +
jz loc_415E56  +
test al al +
jz loc_415E56  +
push ebx  +
push edi  +
lea ecx [esi+14h] +
call sub_418880  +
lea ecx [esi+14h] +
mov edi eax +
call sub_418870  +
xor esi esi +
mov ebx eax +
test edi edi +
jle loc_415E4C  +
lea esp [esp+0] +
movzx eax word ptr [ebx+esi*2] +
mov cx ax +
shr cx 8 +
shl eax 8 +
xor cx ax +
push 0  +
movzx edx cx +
mov ecx [ebp+arg_0] +
push 2  +
lea eax [ebp+arg_C] +
push eax  +
mov [ebp+arg_C] edx +
call sub_415370  +
inc esi  +
cmp esi edi +
jl loc_415E20  +
lea eax [edi+edi] +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_0] +
push ecx  +
push eax  +
push edx  +
lea ecx [esi+14h] +
call sub_418920  +
pop esi  +
pop ebp  +
retn 10h  +
***
sub esp 28h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0  +
push 15h  +
lea eax [ebp+var_1C] +
mov edi ecx +
push eax  +
mov ecx esi +
mov [ebp+var_1F] 0 +
mov ebx 2 +
call sub_4154E0  +
mov ecx [esi] +
mov edx [ecx+4] +
test byte ptr [edx+esi+0Ch] 6 +
jnz loc_416013  +
push 0  +
push 1  +
lea eax [ebp-1Eh] +
push eax  +
mov ecx esi +
mov [ebp+var_7] 0 +
call sub_4154E0  +
push 0  +
push 1  +
lea ecx [ebp-1Dh] +
push ecx  +
mov ecx esi +
call sub_4154E0  +
push 0  +
push 1  +
lea edx [ebp+var_28] +
push edx  +
mov ecx esi +
call sub_4154E0  +
mov al [ebp+var_1E] +
mov cl [ebp+var_1D] +
cmp al bl +
jl loc_415FE2  +
cmp cl 1 +
jl loc_415F15  +
push 0  +
push 1  +
lea eax [ebp+var_1F] +
push eax  +
mov ecx esi +
call sub_4154E0  +
movzx ecx [ebp+var_1F] +
mov al [ebp+var_1E] +
not cl  +
movsx ebx cl +
mov cl [ebp+var_1D] +
and ebx 1 +
cmp al 2 +
jnz loc_415FE2  +
test cl cl +
js loc_41600B  +
push 0  +
push 4  +
lea edx [ebp+var_24] +
push edx  +
mov ecx esi +
call sub_4154E0  +
push ebx  +
call sub_419B90  +
add esp 4 +
test al al +
jz loc_415F6C  +
mov ecx [ebp+var_24] +
mov eax ecx +
and eax 0FF00h +
mov edx ecx +
shl edx 10h +
add eax edx +
mov edx ecx +
shr edx 8 +
shl eax 8 +
and edx 0FF00h +
add eax edx +
shr ecx 18h +
add eax ecx +
mov [ebp+var_24] eax +
jmp loc_415F6F  +
mov eax [ebp+var_24] +
mov ecx [edi+1014h] +
test ecx ecx +
jz loc_415F85  +
push ecx  +
call sub_425D5C  +
mov eax [ebp+var_24] +
add esp 4 +
inc eax  +
push eax  +
call sub_425006  +
mov ecx [ebp+var_24] +
add esp 4 +
push 0  +
push ecx  +
push eax  +
mov ecx esi +
mov [edi+1014h] eax +
call sub_4154E0  +
mov edx [edi+1014h] +
mov eax [ebp+var_24] +
mov byte ptr [eax+edx] 0 +
mov edx [ebp+var_28] +
mov ecx [edi+100Ch] +
push ebx  +
push edx  +
push esi  +
call sub_418390  +
cmp eax 0FFFFFFFFh +
jz loc_416013  +
mov word ptr [edi+1010h] 702h +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp al 1 +
jnz loc_41600B  +
cmp cl 5 +
jnz loc_415FF9  +
mov eax [ebp+var_28] +
push eax  +
push esi  +
mov ecx edi +
call sub_415630  +
jmp loc_41600E  +
test cl cl +
jnz loc_41600B  +
mov ecx [ebp+var_28] +
push ecx  +
push esi  +
mov ecx edi +
call sub_4159E0  +
jmp loc_41600E  +
mov eax [ebp+var_28] +
cmp eax 0FFFFFFFFh +
jnz loc_41601A  +
mov byte ptr [edi+1008h] 0 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43ED08  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
push edi  +
mov [ebp+var_2C] ecx +
call sub_419A10  +
mov esi eax +
add esp 4 +
mov [ebp+var_30] esi +
push 0  +
push 15h  +
lea eax [ebp+var_28] +
push eax  +
mov ecx edi +
mov [ebp+var_4] 0 +
call sub_4154E0  +
test edi edi +
jnz loc_4160A6  +
mov ecx [ebp+var_2C] +
mov byte ptr [ecx+1008h] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_41613D  +
jmp loc_416133  +
push 0  +
push 0  +
push 0  +
mov ecx edi +
mov [ebp+var_13] 0 +
call sub_4150D0  +
mov ecx offset aZstringBinaryF +
lea eax [ebp+var_28] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4160E0  +
test dl dl +
jz loc_4160DC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4160E0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4160C0  +
xor eax eax +
jmp loc_4160E5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4160FF  +
mov ecx [ebp+var_2C] +
push edi  +
call sub_415E70  +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_41613D  +
jmp loc_416133  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx esi +
call eax  +
test eax eax +
jz loc_41612C  +
lea esp [esp+0] +
cmp word ptr [eax] 0 +
jz loc_41611F  +
mov ecx [ebp+var_2C] +
push eax  +
call sub_414BE0  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx esi +
call eax  +
test eax eax +
jnz loc_416110  +
mov [ebp+var_4] 0FFFFFFFFh +
mov edx [esi] +
mov eax [edx] +
push 1  +
mov ecx esi +
call eax  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_4188A0  +
mov eax esi +
pop esi  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_418820  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp loc_418890  +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
test eax eax +
jz loc_4161C2  +
mov ecx [eax] +
mov [ebp+arg_0] ecx +
neg eax  +
sbb eax eax +
lea edx [ebp+arg_0] +
and eax edx +
push eax  +
mov ecx esi +
call sub_418880  +
push eax  +
mov ecx esi +
call sub_418870  +
push eax  +
call sub_419300  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43ED30  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov esi [ebp+arg_C] +
test esi esi +
jz loc_416229  +
mov eax [esi] +
mov [ebp+arg_C] eax +
mov ecx edi +
mov [ebp+var_4] 0 +
call sub_418880  +
mov ecx edi +
mov ebx eax +
call sub_418870  +
mov edx [ebp+arg_4] +
neg esi  +
sbb esi esi +
lea ecx [ebp+arg_C] +
and esi ecx +
mov ecx [ebp+arg_0] +
push esi  +
push edx  +
push ecx  +
push ebx  +
push eax  +
call sub_419350  +
add esp 14h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
cmp byte ptr [ebp+10h] 0 +
jnz loc_41629B  +
mov edx [ebp-14h] +
cmp dword ptr [edx] 42554646h +
jnz loc_41629B  +
mov eax offset loc_416287 +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0  +
push 0  +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43ED60  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
call sub_418870  +
mov ebx eax +
mov ecx esi +
mov [ebp+var_10] ebx +
call sub_418880  +
mov edi eax +
cmp edi 1 +
jb loc_41638C  +
mov eax 2026h +
cmp [ebx+edi*2-2] ax +
jnz loc_41638C  +
xor ecx ecx +
lea ebx [edi+2] +
mov eax ebx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov esi eax +
test esi esi +
setnz [ebp+var_20]  +
mov [ebp+var_1C] esi +
mov ecx [ebp+var_10] +
lea eax [edi+edi-2] +
push eax  +
push ecx  +
push esi  +
mov [ebp+var_4] 0 +
call loc_425490  +
add esp 10h +
mov ecx 2Eh +
mov dword ptr [esi+edi*2-2] 2E002Eh +
push ebx  +
mov [esi+edi*2+2] cx +
push esi  +
lea ecx [ebp+var_18] +
call sub_4187F0  +
mov ecx [ebp+var_14] +
push eax  +
mov byte ptr [ebp+var_4] 1 +
call sub_418840  +
lea ecx [ebp+var_18] +
mov byte ptr [ebp+var_4] 0 +
call sub_418860  +
cmp [ebp+var_20] 0 +
jz loc_41638C  +
push esi  +
call sub_425D5C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43ED88  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_C] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_4163DA  +
mov eax [esi] +
mov [ebp+arg_C] eax +
mov edi [ebp+arg_8] +
xor ecx ecx +
mov eax edi +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov [ebp+var_1C] eax +
mov [ebp+var_18] edi +
mov [ebp+var_14] 0 +
mov edx [ebp+lpMultiByteStr] +
neg esi  +
sbb esi esi +
lea eax [ebp+arg_C] +
and esi eax +
push esi  +
lea ecx [ebp+var_1C] +
push ecx  +
push edi  +
push edx  +
mov [ebp+var_4] 0 +
call sub_4193C0  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_1C] +
mov esi [ebp+arg_0] +
add esp 14h +
push eax  +
push ecx  +
mov ecx esi +
call sub_4187F0  +
mov edx [ebp+var_1C] +
push edx  +
call sub_425D5C  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_8] +
mov edx [ebp+lpMultiByteStr] +
push esi  +
mov esi [ebp+arg_0] +
push eax  +
push ecx  +
push edx  +
push esi  +
mov [ebp+var_4] 0 +
call sub_4163A0  +
add esp 10h +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_41649B  +
jmp sub_416560  +
retn   +
***
mov eax [eax+0Ch] +
retn   +
***
mov eax [eax+8] +
retn   +
***
movzx eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push eax  +
push ecx  +
push edx  +
call sub_419C60  +
add esp 0Ch +
mov [esi] eax +
test eax eax +
jz loc_4164E8  +
mov ecx eax +
call sub_416550  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [eax] +
mov [esi] ecx +
test ecx ecx +
jz loc_416506  +
call sub_416550  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jz loc_41653A  +
mov ecx [esi] +
cmp ecx [edi] +
jz loc_41653A  +
test ecx ecx +
jz loc_41652D  +
call sub_416560  +
mov ecx [edi] +
mov [esi] ecx +
test ecx ecx +
jz loc_41653A  +
call sub_416550  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
dec dword ptr [ecx+4]  +
jnz locret_41656D  +
mov eax [ecx] +
mov edx [eax] +
push 1  +
call edx  +
retn   +
***
xor eax eax +
cmp dword ptr [ecx+4] 1 +
setnle al  +
retn   +
***
mov eax ecx +
mov dword ptr [ecx] offset off_443F70 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_443F70 +
jz loc_4165BB  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
mov dword ptr [eax] 0 +
retn   +
***
mov eax ecx +
xor ecx ecx +
mov [eax] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
mov byte ptr [eax+20h] 1 +
mov [eax+24h] ecx +
mov [eax+28h] ecx +
mov [eax+2Ch] ecx +
mov [eax+30h] ecx +
mov [eax+34h] ecx +
mov [eax+38h] ecx +
mov [eax+3Ch] ecx +
mov [eax+40h] ecx +
mov [eax+44h] ecx +
mov [eax+48h] ecx +
mov [eax+4Ch] ecx +
mov [eax+50h] ecx +
mov [eax+54h] ecx +
mov [eax+58h] ecx +
retn   +
***
push esi  +
xor esi esi +
cmp [ebp+arg_8] esi +
jnz loc_416643  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 0Ch  +
push edi  +
mov edi [ebp+arg_0] +
cmp edi 1 +
jz loc_416680  +
test edi edi +
jz loc_416680  +
push ebx  +
mov ebx [ebp+arg_4] +
cmp esi edi +
jg loc_416676  +
mov ecx [ebp+arg_8] +
lea eax [esi+edi] +
cdq   +
sub eax edx +
sar eax 1 +
mov ecx [ecx+eax*4] +
cmp ebx ecx +
jnb loc_41666F  +
lea edi [eax-1] +
jmp loc_416654  +
jbe loc_416679  +
lea esi [eax+1] +
jmp loc_416654  +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
sub esp 14h +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push eax  +
push ecx  +
call sub_419B40  +
xor edx edx +
lea edi [eax+eax*2+0Fh] +
lea edi [esi+edi*4] +
add esp 8 +
or ecx 0FFFFFFFFh +
mov [ebp+var_4] edx +
mov [ebp+var_C] edx +
mov [ebp+var_14] edi +
cmp [edi] edx +
jbe loc_4167CD  +
lea eax [eax+eax*2] +
lea ecx [esi+eax*4+40h] +
mov [ebp+var_10] ecx +
push ebx  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ecx+edx*4] +
xor ecx ecx +
xor edi edi +
mov [ebp+var_8] edx +
cmp [esi+3020h] ecx +
jbe loc_416704  +
mov eax [esi+301Ch] +
mov edx eax +
add edi [edx] +
cmp [ebp+var_8] edi +
jb loc_41671E  +
inc ecx  +
add edx 60h +
cmp ecx [esi+3020h] +
jb loc_4166F1  +
mov edx [ebp+var_C] +
mov ecx [ebp+var_14] +
inc edx  +
or eax 0FFFFFFFFh +
mov [ebp+var_C] edx +
cmp edx [ecx] +
jb loc_4166D2  +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
cmp ecx 0FFFFFFFFh +
jz loc_416704  +
mov ebx [ebp+var_8] +
lea ecx [ecx+ecx*2] +
shl ecx 5 +
mov edx [ecx+eax+28h] +
add ecx eax +
mov [esi+28h] edx +
mov eax [ecx+3Ch] +
mov [esi+3014h] eax +
mov edi [ecx+24h] +
mov [esi+24h] edi +
mov edx ebx +
sub edx [ecx+10h] +
cmp edx [ecx] +
jnb loc_416704  +
test edx edx +
js loc_416704  +
mov eax [esi+28h] +
test eax eax +
jz loc_416704  +
mov ecx [ecx+4Ch] +
test ecx ecx +
jz loc_41677C  +
mov ecx [ecx+edx*4] +
test ecx ecx +
jz loc_41677C  +
cmp word ptr [eax+edx*2] 0 +
jbe loc_41677C  +
mov [esi+3014h] ecx +
mov [ebp+var_4] 0 +
jmp loc_416786  +
test edi edi +
jz loc_416786  +
mov ecx [edi+edx*4] +
mov [ebp+var_4] ecx +
movzx edx word ptr [eax+edx*2] +
mov eax [ebp+arg_4] +
cmp edx eax +
jnz loc_416704  +
mov ecx [esi+3014h] +
add ecx [ebp+var_4] +
xor edi edi +
test eax eax +
jz loc_4167C2  +
mov edx [ebp+arg_0] +
sub ecx edx +
lea esp [esp+0] +
mov al [edx] +
cmp al [ecx+edx] +
jnz loc_416704  +
inc edi  +
inc edx  +
cmp edi [ebp+arg_4] +
jb loc_4167B0  +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
pop edi  +
mov eax ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43EDBB  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebx+3020h] +
cmp esi [ebx+3024h] +
jnz loc_4168DA  +
add esi 0Ah +
xor ecx ecx +
mov eax esi +
mov edx 60h +
mul  edx +
seto cl  +
mov [ebx+3024h] esi +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call sub_425006  +
add esp 4 +
mov [ebp+var_10] eax +
xor ecx ecx +
mov [ebp+var_4] ecx +
cmp eax ecx +
jz loc_416873  +
push offset nullsub_1  +
push offset loc_4165E0  +
push esi  +
lea edi [eax+4] +
push 60h  +
push edi  +
mov [eax] esi +
call sub_428272  +
mov [ebp+var_10] edi +
jmp loc_416876  +
mov [ebp+var_10] ecx +
xor edx edx +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebx+3020h] edx +
jbe loc_4168AA  +
xor eax eax +
mov ecx [ebp+var_10] +
mov esi [ebx+301Ch] +
lea edi [eax+ecx] +
add esi eax +
mov ecx 18h +
inc edx  +
movs   +
add eax 60h +
cmp edx [ebx+3020h] +
jb loc_416889  +
mov eax [ebx+301Ch] +
test eax eax +
jz loc_4168D1  +
mov edx [eax-4] +
lea esi [eax-4] +
push offset nullsub_1  +
push edx  +
push 60h  +
push eax  +
call sub_425DC5  +
push esi  +
call sub_425D5C  +
add esp 4 +
mov eax [ebp+var_10] +
mov [ebx+301Ch] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ax [ebp+arg_4] +
cmp [ebp+arg_C] ax +
jz loc_416903  +
xor al al +
pop ebp  +
retn 10h  +
push esi  +
movzx esi ax +
xor ecx ecx +
push edi  +
test esi esi +
jle loc_416923  +
mov eax [ebp+arg_8] +
mov edi [ebp+arg_0] +
sub edi eax +
mov dl [edi+eax] +
cmp dl [eax] +
jnz loc_41692B  +
inc ecx  +
inc eax  +
cmp ecx esi +
jl loc_416916  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 10h  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_43EE01  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_4169B4  +
push 194h  +
call sub_425006  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4169A8  +
push offset nullsub_1  +
push offset loc_4165D0  +
push 64h  +
lea edi [eax+4] +
push 4  +
push edi  +
mov dword ptr [eax] 64h +
call sub_428272  +
jmp loc_4169AA  +
xor edi edi +
mov [ebp+var_4] 0FFFFFFFFh +
mov [esi+4Ch] edi +
mov edi [ebp+arg_4] +
push edi  +
call sub_425006  +
mov ecx [esi] +
mov edx [esi+4Ch] +
mov [edx+ecx*4] eax +
add esp 4 +
xor eax eax +
test edi edi +
jz loc_4169E4  +
mov ecx [ebp+arg_0] +
mov ebx [esi+4Ch] +
mov edx [esi] +
mov edx [ebx+edx*4] +
mov bl [eax+ecx] +
mov [eax+edx] bl +
inc eax  +
cmp eax edi +
jb loc_4169D1  +
cmp dword ptr [esi+48h] 0 +
jnz loc_416A33  +
push 194h  +
call sub_425006  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 1 +
test eax eax +
jz loc_416A24  +
push offset nullsub_1  +
push offset loc_4165D0  +
push 64h  +
lea edi [eax+4] +
push 4  +
push edi  +
mov dword ptr [eax] 64h +
call sub_428272  +
jmp loc_416A26  +
xor edi edi +
mov [esi+48h] edi +
mov edi [ebp+arg_4] +
mov [ebp+var_4] 0FFFFFFFFh +
mov ebx [ebp+arg_C] +
push ebx  +
call sub_425006  +
mov ecx [esi] +
mov edx [esi+48h] +
mov [edx+ecx*4] eax +
add esp 4 +
xor eax eax +
test ebx ebx +
jz loc_416A6C  +
mov ecx [ebp+arg_8] +
mov edx [esi] +
mov edi [esi+48h] +
mov edx [edi+edx*4] +
mov [ebp+arg_0] ecx +
mov cl [eax+ecx] +
mov [eax+edx] cl +
mov ecx [ebp+arg_0] +
inc eax  +
cmp eax ebx +
jb loc_416A50  +
mov edi [ebp+arg_4] +
cmp dword ptr [esi+50h] 0 +
jnz loc_416ABB  +
push 194h  +
call sub_425006  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 2 +
test eax eax +
jz loc_416AAC  +
push offset nullsub_1  +
push offset loc_4165D0  +
push 64h  +
lea edi [eax+4] +
push 4  +
push edi  +
mov dword ptr [eax] 64h +
call sub_428272  +
jmp loc_416AAE  +
xor edi edi +
mov [esi+50h] edi +
mov edi [ebp+arg_4] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp dword ptr [esi+28h] 0 +
jnz loc_416AD1  +
push 0C8h  +
call sub_425006  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi] +
mov ecx [esi+28h] +
mov [ecx+eax*2] di +
cmp dword ptr [esi+30h] 0 +
jnz loc_416AF0  +
push 0C8h  +
call sub_425006  +
add esp 4 +
mov [esi+30h] eax +
mov edx [esi] +
mov eax [esi+30h] +
mov [eax+edx*2] bx +
cmp dword ptr [esi+38h] 0 +
jnz loc_416B0F  +
push 0C8h  +
call sub_425006  +
add esp 4 +
mov [esi+38h] eax +
cmp dword ptr [esi+58h] 0 +
jnz loc_416B25  +
push 190h  +
call sub_425006  +
add esp 4 +
mov [esi+58h] eax +
mov edi [ebp+arg_14] +
test edi edi +
jz loc_416B7C  +
mov ebx [ebp+arg_10] +
test ebx ebx +
jz loc_416B7C  +
push edi  +
call sub_425006  +
mov ecx [esi+0Ch] +
mov edx [esi+50h] +
mov [edx+ecx*4] eax +
add esp 4 +
xor eax eax +
test edi edi +
jz loc_416B64  +
jmp loc_416B50  +
mov edx [esi+50h] +
mov ecx [esi+0Ch] +
mov ecx [edx+ecx*4] +
mov dl [eax+ebx] +
mov [eax+ecx] dl +
inc eax  +
cmp eax edi +
jb loc_416B50  +
mov eax [esi+0Ch] +
mov ecx [esi+38h] +
mov [ecx+eax*2] di +
mov edx [esi+0Ch] +
mov eax [esi+58h] +
mov ecx [esi] +
mov [eax+edx*4] ecx +
inc dword ptr [esi+0Ch]  +
inc dword ptr [esi]  +
mov eax [esi] +
inc dword ptr [esi+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov eax [edi+301Ch] +
lea esi [esi+esi*2] +
shl esi 5 +
mov ecx [esi+eax+24h] +
push ecx  +
call sub_425D5C  +
mov edx [edi+301Ch] +
mov eax [esi+edx+28h] +
push eax  +
call sub_425D5C  +
mov ecx [edi+301Ch] +
mov edx [esi+ecx+2Ch] +
push edx  +
call sub_425D5C  +
mov eax [edi+301Ch] +
mov ecx [esi+eax+30h] +
push ecx  +
call sub_425D5C  +
mov edx [edi+301Ch] +
mov eax [esi+edx+38h] +
push eax  +
call sub_425D5C  +
mov ecx [edi+301Ch] +
mov edx [esi+ecx+34h] +
push edx  +
call sub_425D5C  +
mov eax [edi+301Ch] +
mov ecx [esi+eax+58h] +
push ecx  +
call sub_425D5C  +
mov edx [edi+301Ch] +
mov eax [esi+edx+3Ch] +
push eax  +
call sub_425D5C  +
mov ecx [edi+301Ch] +
mov edx [esi+ecx+40h] +
push edx  +
call sub_425D5C  +
mov eax [edi+301Ch] +
mov ecx [esi+eax+44h] +
push ecx  +
call sub_425D5C  +
mov edx [edi+301Ch] +
xor ebx ebx +
lea eax [esi+edx] +
add esp 28h +
cmp [eax] ebx +
jbe loc_416CCD  +
mov eax [eax+48h] +
test eax eax +
jz loc_416C7A  +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_416C7A  +
push eax  +
call sub_425D5C  +
add esp 4 +
mov eax [edi+301Ch] +
mov eax [esi+eax+4Ch] +
test eax eax +
jz loc_416C98  +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_416C98  +
push eax  +
call sub_425D5C  +
add esp 4 +
mov ecx [edi+301Ch] +
cmp ebx [esi+ecx+0Ch] +
lea eax [esi+ecx] +
jnb loc_416CBE  +
mov eax [eax+50h] +
test eax eax +
jz loc_416CBE  +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_416CBE  +
push eax  +
call sub_425D5C  +
add esp 4 +
mov edx [edi+301Ch] +
inc ebx  +
cmp ebx [esi+edx] +
lea eax [esi+edx] +
jb loc_416C63  +
mov eax [edi+301Ch] +
mov eax [esi+eax+48h] +
test eax eax +
jz loc_416CF8  +
mov ecx [eax-4] +
lea ebx [eax-4] +
push offset nullsub_1  +
push ecx  +
push 4  +
push eax  +
call sub_425DC5  +
push ebx  +
call sub_425D5C  +
add esp 4 +
mov edx [edi+301Ch] +
mov eax [esi+edx+4Ch] +
test eax eax +
jz loc_416D23  +
mov ecx [eax-4] +
lea ebx [eax-4] +
push offset nullsub_1  +
push ecx  +
push 4  +
push eax  +
call sub_425DC5  +
push ebx  +
call sub_425D5C  +
add esp 4 +
mov edx [edi+301Ch] +
mov eax [esi+edx+50h] +
test eax eax +
jz loc_416D4E  +
mov ecx [eax-4] +
lea ebx [eax-4] +
push offset nullsub_1  +
push ecx  +
push 4  +
push eax  +
call sub_425DC5  +
push ebx  +
call sub_425D5C  +
add esp 4 +
mov edx [edi+301Ch] +
mov eax [esi+edx+54h] +
push eax  +
call sub_425D5C  +
mov eax [edi+301Ch] +
add eax esi +
add esp 4 +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax+24h] ecx +
mov [eax+28h] ecx +
mov [eax+2Ch] ecx +
mov [eax+30h] ecx +
mov [eax+38h] ecx +
mov [eax+34h] ecx +
mov [eax+58h] ecx +
mov [eax+3Ch] ecx +
mov [eax+40h] ecx +
mov [eax+44h] ecx +
mov [eax+48h] ecx +
mov [eax+4Ch] ecx +
mov [eax+50h] ecx +
mov [eax+1Ch] ecx +
mov [eax+0Ch] ecx +
mov [eax+18h] ecx +
mov [eax+14h] ecx +
mov [eax+8] ecx +
mov [eax+4] ecx +
mov [eax] ecx +
mov byte ptr [eax+20h] 1 +
mov [eax+10h] ecx +
mov [eax+54h] ecx +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43EE41  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_443F0C +
mov [ebp+var_4] 1 +
call sub_416570  +
test al al +
jnz loc_416E54  +
xor edi edi +
cmp [esi+3020h] edi +
jbe loc_416E21  +
lea ebx [ebx+0] +
push edi  +
mov ecx esi +
call sub_416BA0  +
inc edi  +
cmp edi [esi+3020h] +
jb loc_416E10  +
mov eax [esi+34h] +
push eax  +
call sub_425D5C  +
mov eax [esi+301Ch] +
add esp 4 +
test eax eax +
jz loc_416E54  +
mov ecx [eax-4] +
lea edi [eax-4] +
push offset nullsub_1  +
push ecx  +
push 60h  +
push eax  +
call sub_425DC5  +
push edi  +
call sub_425D5C  +
add esp 4 +
push offset loc_414780  +
push 3FDh  +
push 0Ch  +
lea edx [esi+38h] +
push edx  +
mov byte ptr [ebp+var_4] 0 +
call sub_425DC5  +
mov ecx esi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_416590  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ecx+3020h] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
xor eax eax +
push edi  +
test edx edx +
jz loc_416EBE  +
mov edi [ecx+301Ch] +
lea ecx [ecx+0] +
add esi [edi] +
cmp ebx esi +
jb loc_416EC1  +
inc eax  +
add edi 60h +
cmp eax edx +
jb loc_416EB0  +
or eax 0FFFFFFFFh +
mov esi [ecx+301Ch] +
lea edx [eax+eax*2] +
shl edx 5 +
cmp byte ptr [edx+esi+20h] 0 +
jnz loc_416EDD  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 4  +
cmp eax 0FFFFFFFFh +
jz loc_416EFB  +
mov eax esi +
sub ebx [edx+eax+10h] +
mov ecx [edx+eax+28h] +
cmp word ptr [ecx+ebx*2] 0 +
pop edi  +
pop esi  +
setnz al  +
pop ebx  +
pop ebp  +
retn 4  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi [esi+10h] +
jnb loc_416F58  +
push edi  +
call sub_416E90  +
test al al +
jz loc_416F58  +
xor eax eax +
xor edx edx +
cmp [esi+3020h] eax +
jbe loc_416F52  +
mov ebx [esi+301Ch] +
mov ecx ebx +
mov edi edi +
add edx [ecx] +
cmp edi edx +
jb loc_416F61  +
inc eax  +
add ecx 60h +
cmp eax [esi+3020h] +
jb loc_416F40  +
mov eax [ebp+arg_4] +
mov byte ptr [eax] 0 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn 10h  +
cmp eax 0FFFFFFFFh +
jz loc_416F52  +
lea eax [eax+eax*2] +
shl eax 5 +
mov ecx [eax+ebx+28h] +
add eax ebx +
mov [esi+28h] ecx +
mov edx [eax+3Ch] +
mov [esi+3014h] edx +
mov ecx [eax+24h] +
mov [esi+24h] ecx +
sub edi [eax+10h] +
cmp edi [eax] +
jnb loc_41703E  +
test edi edi +
js loc_41703E  +
cmp byte ptr [eax+20h] 0 +
jz loc_41703E  +
mov edx [esi+28h] +
test edx edx +
jz loc_41703E  +
mov eax [eax+4Ch] +
test eax eax +
jz loc_416FCB  +
mov eax [eax+edi*4] +
test eax eax +
jz loc_416FCB  +
cmp word ptr [edx+edi*2] 0 +
jbe loc_416FCB  +
mov [esi+3014h] eax +
xor ecx ecx +
jmp loc_416FD2  +
test ecx ecx +
jz loc_41702F  +
mov ecx [ecx+edi*4] +
movzx eax word ptr [edx+edi*2] +
mov edx [ebp+arg_8] +
lea ebx [eax+1] +
cmp edx ebx +
jb loc_417017  +
mov ebx [ebp+arg_4] +
push eax  +
mov eax [esi+3014h] +
add eax ecx +
push eax  +
push ebx  +
call loc_425490  +
mov ecx [esi+28h] +
movzx edx word ptr [ecx+edi*2] +
mov byte ptr [edx+ebx] 0 +
mov eax [esi+28h] +
mov cx [eax+edi*2] +
mov edx [ebp+arg_C] +
add esp 0Ch +
pop edi  +
pop esi  +
mov [edx] cx +
mov al 1 +
pop ebx  +
pop ebp  +
retn 10h  +
cmp edx 1 +
jb loc_416F58  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
xor al al +
pop ebx  +
pop ebp  +
retn 10h  +
mov ecx [ebp+arg_4] +
pop edi  +
pop esi  +
mov byte ptr [ecx] 0 +
xor al al +
pop ebx  +
pop ebp  +
retn 10h  +
mov edx [ebp+arg_4] +
pop edi  +
pop esi  +
mov byte ptr [edx] 0 +
xor al al +
pop ebx  +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_43EE81  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] 0 +
mov edi [ebp+arg_4] +
cmp edi [esi+10h] +
jnb loc_417091  +
push edi  +
call sub_416E90  +
test al al +
jnz loc_41709D  +
mov esi [ebp+arg_0] +
mov ecx esi +
call sub_4188A0  +
jmp loc_4170CD  +
xor eax eax +
xor edx edx +
cmp [esi+3020h] eax +
jbe loc_4170C3  +
mov ebx [esi+301Ch] +
mov ecx ebx +
add edx [ecx] +
cmp edi edx +
jb loc_4170E3  +
inc eax  +
add ecx 60h +
cmp eax [esi+3020h] +
jb loc_4170B1  +
mov esi [ebp+arg_0] +
mov ecx esi +
call sub_4188A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
cmp eax 0FFFFFFFFh +
jz loc_4170C3  +
lea eax [eax+eax*2] +
shl eax 5 +
mov ecx [eax+ebx+30h] +
add eax ebx +
mov [esi+30h] ecx +
mov edx [eax+40h] +
mov [esi+3018h] edx +
mov edx [eax+2Ch] +
mov [esi+2Ch] edx +
sub edi [eax+10h] +
mov ecx edi +
cmp ecx [eax] +
jnb loc_4170C3  +
test ecx ecx +
js loc_4170C3  +
mov edi [esi+30h] +
test edi edi +
jz loc_4170C3  +
mov eax [eax+48h] +
test eax eax +
jz loc_417132  +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_417132  +
mov [esi+3018h] eax +
xor edx edx +
jmp loc_417139  +
test edx edx +
jz loc_4170C3  +
mov edx [edx+ecx*4] +
movzx eax word ptr [edi+ecx*2] +
mov esi [esi+3018h] +
push 0  +
add esi edx +
push eax  +
push esi  +
lea ecx [ebp+arg_4] +
call sub_4164C0  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_4] +
mov edi 1 +
push eax  +
mov ecx esi +
mov [ebp+var_4] edi +
call sub_418820  +
lea ecx [ebp+arg_4] +
mov [ebp+var_10] edi +
mov byte ptr [ebp+var_4] 0 +
call sub_418860  +
jmp loc_4170CD  +
***
push 0FFFFFFFFh  +
push offset loc_43EEAB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ebx [ebp+arg_8] +
cmp ebx [edi+10h] +
jnb loc_4171E2  +
push ebx  +
call sub_416E90  +
test al al +
jz loc_4171E2  +
xor edx edx +
xor esi esi +
cmp [edi+3020h] edx +
jbe loc_4171E2  +
mov eax [edi+301Ch] +
mov ecx eax +
add edx [ecx] +
cmp ebx edx +
jb loc_4171F8  +
inc esi  +
add ecx 60h +
cmp esi [edi+3020h] +
jb loc_4171D0  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp esi 0FFFFFFFFh +
jz loc_4171E2  +
lea esi [esi+esi*2] +
shl esi 5 +
mov ecx [eax+esi+30h] +
mov [edi+30h] ecx +
mov edx [eax+esi+40h] +
mov [edi+3018h] edx +
mov edx [eax+esi+2Ch] +
mov [edi+2Ch] edx +
sub ebx [eax+esi+10h] +
mov [ebp+var_10] edx +
mov ecx ebx +
mov [ebp+var_14] ecx +
cmp ecx [eax+esi] +
jnb loc_4171E2  +
test ecx ecx +
js loc_4171E2  +
mov ebx [eax+esi+48h] +
test ebx ebx +
jz loc_41725B  +
mov ebx [ebx+ecx*4] +
lea edx ds:0[ecx*4] +
mov [ebp+arg_8] edx +
test ebx ebx +
jz loc_417258  +
mov [edi+3018h] ebx +
mov [ebp+var_10] 0 +
jmp loc_41726F  +
mov edx [ebp+var_10] +
test edx edx +
jz loc_4171E2  +
mov edx [edx+ecx*4] +
lea ebx ds:0[ecx*4] +
mov [ebp+arg_8] ebx +
mov [ebp+var_10] edx +
mov edx [edi+30h] +
movzx edx word ptr [edx+ecx*2] +
mov ebx [ebp+arg_4] +
cmp edx ebx +
jnz loc_4172C4  +
mov edx [ebp+arg_0] +
mov esi [edi+3018h] +
add esi [ebp+var_10] +
push ebx  +
push edx  +
push ebx  +
push esi  +
mov ecx edi +
call sub_4168F0  +
test al al +
jnz loc_4172AE  +
test ebx ebx +
jz loc_4172AE  +
mov ecx [ebp+arg_0] +
mov eax esi +
sub ecx esi +
mov esi ebx +
mov dl [ecx+eax] +
mov [eax] dl +
inc eax  +
dec esi  +
jnz loc_4172A5  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
jbe loc_417308  +
mov eax [edi+3018h] +
add eax [ebp+var_10] +
test ebx ebx +
jz loc_4172EB  +
mov esi [ebp+arg_0] +
sub esi eax +
mov [ebp+arg_0] ebx +
jmp loc_4172E0  +
mov dl [eax+esi] +
mov [eax] dl +
inc eax  +
dec [ebp+arg_0]  +
jnz loc_4172E0  +
mov eax [edi+30h] +
mov [eax+ecx*2] bx +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp dword ptr [eax+esi+48h] 0 +
jnz loc_41737E  +
mov eax [eax+esi] +
mov [ebp+arg_4] eax +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call sub_425006  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41736B  +
mov ecx [ebp+arg_4] +
push offset nullsub_1  +
push offset loc_4165D0  +
push ecx  +
mov [eax] ecx +
add eax 4 +
push 4  +
push eax  +
mov [ebp+arg_4] eax +
call sub_428272  +
mov eax [ebp+arg_4] +
jmp loc_41736D  +
xor eax eax +
mov ecx [edi+301Ch] +
mov [ebp+var_4] 0FFFFFFFFh +
mov [esi+ecx+48h] eax +
mov edx [edi+301Ch] +
mov eax [esi+edx+48h] +
mov ecx [ebp+arg_8] +
mov eax [ecx+eax] +
test eax eax +
jz loc_41739B  +
push eax  +
call sub_425D5C  +
add esp 4 +
push ebx  +
call sub_425006  +
mov edx [edi+301Ch] +
mov ecx [esi+edx+48h] +
mov edx [ebp+arg_8] +
add esp 4 +
mov [edx+ecx] eax +
test ebx ebx +
jz loc_4173C9  +
mov esi [ebp+arg_0] +
sub esi eax +
mov ecx ebx +
nop   +
mov dl [esi+eax] +
mov [eax] dl +
inc eax  +
dec ecx  +
jnz loc_4173C0  +
mov eax [edi+30h] +
mov ecx [ebp+var_14] +
mov [eax+ecx*2] bx +
mov edi [edi+2Ch] +
test edi edi +
jz loc_4173E4  +
mov edx [ebp+arg_8] +
mov dword ptr [edi+edx] 0 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43EEDB  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_8] +
cmp edi [ebx+10h] +
jnb loc_41745E  +
push edi  +
call sub_416E90  +
test al al +
jz loc_41745E  +
mov esi [ebx+3020h] +
xor edx edx +
xor eax eax +
test esi esi +
jz loc_41745E  +
mov ecx [ebx+301Ch] +
add edx [ecx] +
cmp edi edx +
jb loc_417474  +
inc eax  +
add ecx 60h +
cmp eax esi +
jb loc_417450  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp eax 0FFFFFFFFh +
jz loc_41745E  +
lea esi [eax+eax*2] +
mov eax [ebx+301Ch] +
shl esi 5 +
mov ecx [eax+esi+38h] +
mov edx [eax+esi+34h] +
sub edi [eax+esi+10h] +
add eax esi +
mov [ebp+var_10] ecx +
mov ecx [eax+58h] +
push ecx  +
mov [ebp+var_1C] edx +
mov edx [eax+44h] +
mov eax [eax+0Ch] +
push edi  +
push eax  +
mov ecx ebx +
mov [ebp+var_20] edx +
call sub_416630  +
mov ecx [ebx+301Ch] +
mov edx eax +
mov [ebp+var_18] edx +
cmp edi [ecx+esi] +
jnb loc_41745E  +
test edi edi +
js loc_41745E  +
test edx edx +
js loc_41745E  +
mov eax [ecx+esi+0Ch] +
mov [ebp+var_14] eax +
test eax eax +
jz loc_41745E  +
mov ecx [ecx+esi+50h] +
mov [ebp+var_24] ecx +
test ecx ecx +
jz loc_4174F4  +
lea eax ds:0[edx*4] +
mov [ebp+arg_8] eax +
mov eax [ecx+eax] +
test eax eax +
jz loc_4174F4  +
mov ecx eax +
xor eax eax +
jmp loc_41750F  +
mov ecx [ebp+var_1C] +
test ecx ecx +
jz loc_41745E  +
lea eax ds:0[edx*4] +
mov [ebp+arg_8] eax +
mov eax [eax+ecx] +
mov ecx [ebp+var_20] +
mov edi [ebp+var_10] +
movzx edx word ptr [edi+edx*2] +
mov edi [ebp+arg_4] +
cmp edx edi +
jnz loc_41755F  +
lea esi [eax+ecx] +
mov ecx [ebp+arg_0] +
push edi  +
push ecx  +
push edi  +
push esi  +
mov ecx ebx +
call sub_4168F0  +
test al al +
jnz loc_417549  +
test edi edi +
jz loc_417549  +
mov ecx [ebp+arg_0] +
mov eax esi +
sub ecx esi +
lea ecx [ecx+0] +
mov dl [ecx+eax] +
mov [eax] dl +
inc eax  +
dec edi  +
jnz loc_417540  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
jbe loc_417599  +
add eax ecx +
test edi edi +
jz loc_417579  +
mov ecx [ebp+arg_0] +
sub ecx eax +
mov esi edi +
mov edi edi +
mov dl [eax+ecx] +
mov [eax] dl +
inc eax  +
dec esi  +
jnz loc_417570  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_18] +
mov [eax+ecx*2] di +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp [ebp+var_24] 0 +
jnz loc_41760B  +
mov eax [ebp+var_14] +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call sub_425006  +
add esp 4 +
mov [ebp+var_24] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4175F8  +
mov ecx [ebp+var_14] +
push offset nullsub_1  +
push offset loc_4165D0  +
push ecx  +
mov [eax] ecx +
add eax 4 +
push 4  +
push eax  +
mov [ebp+arg_4] eax +
call sub_428272  +
mov eax [ebp+arg_4] +
jmp loc_4175FA  +
xor eax eax +
mov ecx [ebx+301Ch] +
mov [ebp+var_4] 0FFFFFFFFh +
mov [esi+ecx+50h] eax +
mov edx [ebx+301Ch] +
mov eax [esi+edx+50h] +
mov ecx [ebp+arg_8] +
mov eax [ecx+eax] +
test eax eax +
jz loc_417628  +
push eax  +
call sub_425D5C  +
add esp 4 +
push edi  +
call sub_425006  +
mov edx [ebx+301Ch] +
mov ecx [esi+edx+50h] +
mov edx [ebp+arg_8] +
add esp 4 +
mov [edx+ecx] eax +
test edi edi +
jz loc_417659  +
mov ecx [ebp+arg_0] +
sub ecx eax +
mov esi edi +
lea esp [esp+0] +
mov bl [ecx+eax] +
mov [eax] bl +
inc eax  +
dec esi  +
jnz loc_417650  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_18] +
mov [eax+ecx*2] di +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_417671  +
mov dword ptr [edx+eax] 0 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 410h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_408] ecx +
mov [ebp+var_410] eax +
cmp [ebp+arg_4] ebx +
jbe loc_417767  +
mov eax [ebp+arg_8] +
lea ecx [ebp+var_40C] +
push ecx  +
mov ecx [eax+ebx*4] +
push 400h  +
lea edx [ebp+var_404] +
push edx  +
push ecx  +
mov ecx [ebp+var_408] +
mov [ebp+var_40C] 0 +
call sub_416F10  +
test al al +
jz loc_41775D  +
mov cx [ebp+arg_10] +
cmp word ptr [ebp+var_40C] cx +
jnz loc_41775D  +
movzx esi cx +
xor eax eax +
test esi esi +
jle loc_417727  +
mov edi [ebp+arg_C] +
lea edx [ebp+var_404] +
sub edi edx +
lea ecx [ebp+eax+var_404] +
mov dl [edi+ecx] +
cmp dl [ecx] +
jnz loc_41775D  +
inc eax  +
cmp eax esi +
jl loc_417714  +
mov eax [ebp+arg_8] +
mov ecx [eax+ebx*4] +
movzx edx [ebp+arg_18] +
mov eax [ebp+var_410] +
push ecx  +
mov ecx [ebp+var_408] +
push edx  +
push eax  +
call sub_417180  +
pop edi  +
test al al +
pop esi  +
setnz al  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
inc ebx  +
cmp ebx [ebp+arg_4] +
jb loc_4176C0  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor al al +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43EF0B  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
push edi  +
push ebx  +
call sub_416690  +
mov [ebp+arg_4] eax +
cmp eax 0FFFFFFFFh +
jnz loc_4178BA  +
cmp [esi+0Ch] eax +
jnz loc_4177EE  +
mov ecx esi +
call sub_4167E0  +
mov eax [esi+3020h] +
mov ecx [esi+301Ch] +
mov edx [esi+10h] +
mov [esi+0Ch] eax +
lea eax [eax+eax*2] +
shl eax 5 +
mov [eax+ecx+10h] edx +
inc dword ptr [esi+3020h]  +
mov eax [ebp+arg_14] +
mov ecx [ebp+arg_10] +
mov edx [ebp+arg_C] +
push eax  +
mov eax [ebp+arg_8] +
push ecx  +
push edx  +
push eax  +
mov eax [esi+0Ch] +
lea ecx [eax+eax*2] +
shl ecx 5 +
add ecx [esi+301Ch] +
push edi  +
push ebx  +
call sub_416940  +
push edi  +
push ebx  +
mov [ebp+arg_4] eax +
call sub_419B40  +
lea ecx [eax+eax*2] +
mov edx [esi+ecx*4+40h] +
lea ecx [esi+ecx*4+40h] +
lea eax [eax+eax*2+0Fh] +
lea edi [esi+eax*4] +
mov eax [edi] +
mov [ebp+arg_8] ecx +
mov [ebp+arg_C] edx +
xor ecx ecx +
inc eax  +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
xor ecx ecx +
add esp 0Ch +
mov ebx eax +
mov [ebp+arg_10] ebx +
cmp [edi] ecx +
jbe loc_417872  +
mov edx [ebp+arg_C] +
sub edx eax +
mov ebx [edx+eax] +
mov [eax] ebx +
inc ecx  +
add eax 4 +
cmp ecx [edi] +
jb loc_417862  +
mov ebx [ebp+arg_10] +
mov eax [ebp+arg_C] +
push eax  +
call sub_425D5C  +
mov edx [esi+10h] +
mov ecx [edi] +
mov eax [ebp+arg_8] +
mov [ebx+ecx*4] edx +
inc dword ptr [edi]  +
add esp 4 +
cmp [ebp+arg_4] 64h +
mov [eax] ebx +
jnz loc_41789A  +
mov dword ptr [esi+0Ch] 0FFFFFFFFh +
mov eax [esi+10h] +
inc dword ptr [esi+14h]  +
lea ecx [eax+1] +
mov [esi+10h] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
mov edx [ebp+arg_C] +
push eax  +
mov eax [ebp+arg_8] +
push edx  +
push eax  +
mov ecx esi +
call sub_417180  +
xor ecx ecx +
xor edi edi +
cmp [esi+3020h] ecx +
jbe loc_4178FB  +
mov edx [esi+301Ch] +
lea esp [esp+0] +
add edi [edx] +
mov eax [ebp+arg_4] +
cmp eax edi +
jb loc_4178F7  +
inc ecx  +
add edx 60h +
cmp ecx [esi+3020h] +
jb loc_4178E0  +
jmp loc_4178FE  +
mov edi ecx +
jmp loc_417901  +
mov eax [ebp+arg_4] +
or edi 0FFFFFFFFh +
mov ecx [esi+301Ch] +
mov ebx [ebp+arg_14] +
lea edi [edi+edi*2] +
shl edi 5 +
cmp dword ptr [ecx+edi+0Ch] 0 +
jnz loc_417A4E  +
test ebx ebx +
jz loc_417A66  +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_417A51  +
cmp dword ptr [ecx+edi+50h] 0 +
jnz loc_4179D4  +
push 194h  +
call sub_425006  +
add esp 4 +
mov [ebp+arg_8] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_417979  +
push offset nullsub_1  +
push offset loc_4165D0  +
push 64h  +
mov dword ptr [eax] 64h +
add eax 4 +
push 4  +
push eax  +
mov [ebp+arg_C] eax +
call sub_428272  +
mov eax [ebp+arg_C] +
jmp loc_41797B  +
xor eax eax +
mov edx [esi+301Ch] +
mov [edi+edx+50h] eax +
mov eax [esi+301Ch] +
cmp dword ptr [edi+eax+38h] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
jnz loc_4179B0  +
push 0C8h  +
call sub_425006  +
mov ecx [esi+301Ch] +
add esp 4 +
mov [edi+ecx+38h] eax +
mov edx [esi+301Ch] +
cmp dword ptr [edi+edx+58h] 0 +
jnz loc_4179D4  +
push 190h  +
call sub_425006  +
mov ecx [esi+301Ch] +
add esp 4 +
mov [edi+ecx+58h] eax +
push ebx  +
call sub_425006  +
mov edx [esi+301Ch] +
mov ecx [edi+edx+50h] +
mov [ecx] eax +
add esp 4 +
xor eax eax +
test ebx ebx +
jz loc_417A0A  +
nop   +
mov edx [esi+301Ch] +
mov ecx [edi+edx+50h] +
mov edx [ecx] +
mov ecx [ebp+arg_10] +
mov cl [eax+ecx] +
mov [eax+edx] cl +
inc eax  +
cmp eax ebx +
jb loc_4179F0  +
mov edx [esi+301Ch] +
mov eax [edi+edx+38h] +
mov [eax] bx +
mov ecx [esi+301Ch] +
mov eax [ebp+arg_4] +
mov edx eax +
sub edx [ecx+edi+10h] +
mov ecx [ecx+edi+58h] +
mov [ecx] edx +
mov edx [esi+301Ch] +
inc dword ptr [edi+edx+0Ch]  +
lea edi [edi+edx+0Ch] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
mov edx [ebp+arg_10] +
test ebx ebx +
jz loc_417A66  +
test edx edx +
jz loc_417A66  +
push eax  +
push ebx  +
push edx  +
mov ecx esi +
call sub_417400  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax [ebx+10h] +
push esi  +
push edi  +
mov esi ecx +
mov cl [ebx+3030h] +
push 0  +
push 4  +
mov byte ptr [ebp+arg_8+3] cl +
mov ecx [ebp+arg_0] +
test eax eax +
lea edi [esi+10h] +
push edi  +
mov [ebp+var_18] eax +
setnz [ebp+var_1]  +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417ADF  +
mov eax [edi] +
mov edx eax +
mov ecx eax +
shl edx 10h +
and ecx 0FF00h +
add edx ecx +
shr eax 8 +
and eax 0FF00h +
shl edx 8 +
add edx eax +
movzx eax byte ptr [esi+13h] +
add edx eax +
mov [edi] edx +
mov eax [edi] +
mov cl [ebp+var_1] +
test eax eax +
setnz [ebp+var_3]  +
test eax eax +
jz loc_417B07  +
test cl cl +
jz loc_417B03  +
cmp eax [ebp+var_18] +
jz loc_417B03  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
test eax eax +
jnz loc_417B16  +
test cl cl +
jz loc_417B12  +
mov ecx [ebp+var_18] +
mov [edi] ecx +
jmp loc_417B20  +
test eax eax +
jz loc_417B20  +
test cl cl +
jnz loc_417B20  +
mov dword ptr [edi] 0 +
mov edi [ebp+arg_0] +
push 0  +
push 1  +
lea edx [ebp+var_2] +
push edx  +
mov ecx edi +
call sub_4154E0  +
mov al [ebp+var_2] +
cmp al 59h +
jnz loc_417B3F  +
mov byte ptr [esi+20h] 1 +
jmp loc_417B47  +
cmp al 4Eh +
jnz loc_417B47  +
mov byte ptr [esi+20h] 0 +
push 0  +
push 4  +
push esi  +
mov ecx edi +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417B7F  +
mov eax [esi] +
mov ecx eax +
mov edx eax +
shl ecx 10h +
and edx 0FF00h +
add ecx edx +
shr eax 8 +
and eax 0FF00h +
shl ecx 8 +
add ecx eax +
movzx eax byte ptr [esi+3] +
add ecx eax +
mov [esi] ecx +
mov ecx [ebp+arg_0] +
push 0  +
push 4  +
lea edi [esi+4] +
push edi  +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417BBB  +
mov eax [edi] +
mov ecx eax +
mov edx eax +
shl ecx 10h +
and edx 0FF00h +
add ecx edx +
shr eax 8 +
and eax 0FF00h +
shl ecx 8 +
add ecx eax +
movzx eax byte ptr [esi+7] +
add ecx eax +
mov [edi] ecx +
mov ecx [ebp+arg_0] +
push 0  +
push 4  +
lea edi [esi+8] +
push edi  +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417BF7  +
mov eax [edi] +
mov ecx eax +
mov edx eax +
shl ecx 10h +
and edx 0FF00h +
add ecx edx +
shr eax 8 +
and eax 0FF00h +
shl ecx 8 +
add ecx eax +
movzx eax byte ptr [esi+0Bh] +
add ecx eax +
mov [edi] ecx +
mov eax [edi] +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
add esp 4 +
cmp byte ptr [esi+20h] 0 +
mov [ebp+var_10] eax +
jz loc_417C57  +
mov ecx [ebp+arg_0] +
push 0  +
push 4  +
lea edi [esi+14h] +
push edi  +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417C57  +
mov eax [edi] +
mov ecx eax +
mov edx eax +
shl ecx 10h +
and edx 0FF00h +
add ecx edx +
shr eax 8 +
and eax 0FF00h +
shl ecx 8 +
add ecx eax +
movzx eax byte ptr [esi+17h] +
add ecx eax +
mov [edi] ecx +
mov ecx [ebp+arg_0] +
push 0  +
push 4  +
lea edi [esi+18h] +
push edi  +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417C93  +
mov eax [edi] +
mov ecx eax +
mov edx eax +
shl ecx 10h +
and edx 0FF00h +
add ecx edx +
shr eax 8 +
and eax 0FF00h +
shl ecx 8 +
add ecx eax +
movzx eax byte ptr [esi+1Bh] +
add ecx eax +
mov [edi] ecx +
cmp byte ptr [esi+20h] 0 +
jz loc_417CF7  +
mov eax [esi] +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [esi] +
add esp 4 +
add ecx ecx +
add ecx ecx +
push 0  +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
mov [esi+24h] eax +
call sub_4154E0  +
mov eax [esi] +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [esi] +
add esp 4 +
add ecx ecx +
push 0  +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
mov [esi+28h] eax +
call sub_4154E0  +
mov eax [esi] +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [esi] +
add esp 4 +
add ecx ecx +
add ecx ecx +
push 0  +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
mov [esi+2Ch] eax +
call sub_4154E0  +
mov eax [esi] +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [esi] +
mov edi [ebp+arg_0] +
add esp 4 +
add ecx ecx +
push 0  +
push ecx  +
push eax  +
mov ecx edi +
mov [esi+30h] eax +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417E1C  +
xor ecx ecx +
cmp [esi] ecx +
jbe loc_417E1C  +
jmp loc_417D70  +
cmp byte ptr [esi+20h] 0 +
jz loc_417DC3  +
mov edx [esi+24h] +
lea eax [edx+ecx*4] +
mov [ebp+var_18] eax +
mov eax [eax] +
mov edx eax +
shl edx 10h +
mov edi eax +
and edi 0FF00h +
add edx edi +
mov edi [ebp+var_18] +
movzx edi byte ptr [edi+3] +
shl edx 8 +
add edx edi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax [ebp+var_18] +
mov [eax] edx +
mov edx [esi+28h] +
mov di [edx+ecx*2] +
lea eax [edx+ecx*2] +
movzx edx byte ptr [eax+1] +
shl di 8 +
xor dx di +
mov [eax] dx +
mov eax [esi+2Ch] +
lea eax [eax+ecx*4] +
mov [ebp+var_18] eax +
mov eax [eax] +
mov edx eax +
shl edx 10h +
mov edi eax +
and edi 0FF00h +
add edx edi +
mov edi [ebp+var_18] +
movzx edi byte ptr [edi+3] +
shl edx 8 +
add edx edi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax [ebp+var_18] +
mov [eax] edx +
mov edx [esi+30h] +
mov di [edx+ecx*2] +
lea eax [edx+ecx*2] +
movzx edx byte ptr [eax+1] +
shl di 8 +
xor dx di +
inc ecx  +
mov [eax] dx +
cmp ecx [esi] +
jb loc_417D70  +
mov edi [ebp+arg_0] +
cmp byte ptr [esi+20h] 0 +
jz loc_417E3F  +
mov eax [esi+14h] +
push eax  +
call sub_425006  +
mov ecx [esi+14h] +
add esp 4 +
push 0  +
push ecx  +
push eax  +
mov ecx edi +
mov [esi+3Ch] eax +
call sub_4154E0  +
mov edx [esi+18h] +
push edx  +
call sub_425006  +
mov ecx [esi+18h] +
add esp 4 +
push 0  +
push ecx  +
push eax  +
mov ecx edi +
mov [esi+40h] eax +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417E8E  +
mov ecx [esi+40h] +
xor eax eax +
test dword ptr [esi+18h] 0FFFFFFFEh +
jbe loc_417E8E  +
movzx edx byte ptr [ecx+eax*2+1] +
mov di [ecx+eax*2] +
shl di 8 +
xor dx di +
mov [ecx+eax*2] dx +
mov edx [esi+18h] +
inc eax  +
shr edx 1 +
cmp eax edx +
jb loc_417E70  +
cmp byte ptr [esi+20h] 0 +
jz loc_418164  +
mov eax [esi+8] +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [esi+8] +
mov edi [ebp+arg_0] +
add esp 4 +
add ecx ecx +
push 0  +
push ecx  +
push eax  +
mov ecx edi +
mov [esi+54h] eax +
call sub_4154E0  +
mov edx [esi+8] +
mov eax [ebp+var_10] +
add edx edx +
push 0  +
add edx edx +
push edx  +
push eax  +
mov ecx edi +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_417F40  +
xor ecx ecx +
cmp [esi+8] ecx +
jbe loc_417F40  +
lea esp [esp+0] +
mov edx [esi+54h] +
mov di [edx+ecx*2] +
lea eax [edx+ecx*2] +
movzx edx byte ptr [eax+1] +
shl di 8 +
xor dx di +
mov [eax] dx +
mov eax [ebp+var_10] +
mov eax [eax+ecx*4] +
mov edx eax +
mov edi eax +
shl edx 10h +
and edi 0FF00h +
add edx edi +
mov edi [ebp+var_10] +
movzx edi byte ptr [edi+ecx*4+3] +
shl edx 8 +
shr eax 8 +
and eax 0FF00h +
add edx edi +
add edx eax +
mov eax [ebp+var_10] +
mov [eax+ecx*4] edx +
inc ecx  +
cmp ecx [esi+8] +
jb loc_417EF0  +
cmp byte ptr [esi+20h] 0 +
jz loc_418164  +
xor edi edi +
cmp [esi+8] edi +
jbe loc_418164  +
mov ecx [ebp+var_10] +
mov [ebp+var_14] ecx +
jmp loc_417F60  +
mov edx [esi+54h] +
movzx eax word ptr [edx+edi*2] +
lea eax [eax+eax*2] +
mov ecx [ebx+eax*4+3Ch] +
mov edx [ebx+eax*4+40h] +
lea eax [ebx+eax*4+38h] +
mov eax [ebp+var_14] +
mov eax [eax] +
add eax ecx +
mov [ebp+var_18] ecx +
mov [ebp+var_C] edx +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [esi+54h] +
movzx ecx word ptr [ecx+edi*2] +
add esp 4 +
cmp [ebp+var_1] 0 +
lea edx [ecx+ecx*2] +
mov [ebx+edx*4+40h] eax +
jz loc_417FE9  +
xor eax eax +
cmp [ebp+var_18] eax +
jbe loc_417FDD  +
jmp loc_417FC0  +
mov ecx [esi+54h] +
movzx ecx word ptr [ecx+edi*2] +
lea edx [ecx+ecx*2] +
mov ecx [ebx+edx*4+40h] +
mov edx [ebp+var_C] +
mov edx [edx+eax*4] +
mov [ecx+eax*4] edx +
inc eax  +
cmp eax [ebp+var_18] +
jb loc_417FC0  +
mov eax [ebp+var_C] +
push eax  +
call sub_425D5C  +
add esp 4 +
mov ecx [esi+54h] +
movzx eax word ptr [ecx+edi*2] +
mov ecx [ebp+var_14] +
lea edx [eax+eax*2] +
lea eax [ebx+edx*4+3Ch] +
mov edx [ecx] +
add [eax] edx +
cmp dword ptr [ecx] 0 +
mov [ebp+var_1C] 0 +
jbe loc_418156  +
mov eax [ebp+var_18] +
lea ecx ds:0[eax*4] +
mov [ebp+var_C] ecx +
jmp loc_418020  +
mov ecx [ebp+arg_0] +
push 0  +
push 4  +
lea edx [ebp+var_8] +
push edx  +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_418062  +
mov ecx [ebp+var_8] +
mov eax ecx +
shl eax 10h +
mov edx ecx +
and edx 0FF00h +
add eax edx +
mov edx ecx +
shr edx 8 +
shl eax 8 +
and edx 0FF00h +
add eax edx +
shr ecx 18h +
add eax ecx +
mov [ebp+var_8] eax +
jmp loc_418065  +
mov eax [ebp+var_8] +
cmp [ebp+var_3] 0 +
jz loc_41808F  +
cmp [ebp+var_1] 0 +
jz loc_418095  +
mov ecx [esi+10h] +
mov edx [esi+54h] +
add ecx eax +
movzx eax word ptr [edx+edi*2] +
lea eax [eax+eax*2] +
mov edx [ebx+eax*4+40h] +
mov eax [ebp+var_C] +
mov [eax+edx] ecx +
jmp loc_41813E  +
cmp [ebp+var_1] 0 +
jnz loc_4180B4  +
mov ecx [esi+54h] +
movzx ecx word ptr [ecx+edi*2] +
lea edx [ecx+ecx*2] +
mov ecx [ebp+var_C] +
mov edx [ebx+edx*4+40h] +
mov [ecx+edx] eax +
add ecx 4 +
mov [ebp+var_C] ecx +
jmp loc_418144  +
mov ecx [esi+30h] +
movzx edx word ptr [ecx+eax*2] +
mov ecx [esi+2Ch] +
push edx  +
mov edx [ecx+eax*4] +
add edx [esi+40h] +
mov ecx [esi+28h] +
push edx  +
movzx edx word ptr [ecx+eax*2] +
mov ecx [esi+24h] +
push edx  +
mov edx [ecx+eax*4] +
add edx [esi+3Ch] +
mov ecx [esi+54h] +
movzx ecx word ptr [ecx+edi*2] +
push edx  +
lea edx [ecx+ecx*2] +
mov ecx [ebx+edx*4+40h] +
mov edx [ebp+var_18] +
push ecx  +
push edx  +
push eax  +
mov ecx ebx +
call sub_417690  +
test al al +
jz loc_418124  +
mov eax [esi+28h] +
mov edx [ebp+var_8] +
xor ecx ecx +
mov [eax+edx*2] cx +
mov eax [esi+30h] +
mov edx [ebp+var_8] +
mov [eax+edx*2] cx +
mov eax [esi+54h] +
movzx eax word ptr [eax+edi*2] +
lea ecx [eax+eax*2] +
dec dword ptr [ebx+ecx*4+3Ch]  +
dec dword ptr [esi+4]  +
lea eax [ebx+ecx*4+3Ch] +
jmp loc_418144  +
mov eax [esi+54h] +
movzx eax word ptr [eax+edi*2] +
mov edx [esi+10h] +
add edx [ebp+var_8] +
lea ecx [eax+eax*2] +
mov ecx [ebx+ecx*4+40h] +
mov eax [ebp+var_C] +
mov [eax+ecx] edx +
add eax 4 +
mov [ebp+var_C] eax +
mov eax [ebp+var_1C] +
mov edx [ebp+var_14] +
inc eax  +
mov [ebp+var_1C] eax +
cmp eax [edx] +
jb loc_418020  +
add [ebp+var_14] 4 +
inc edi  +
cmp edi [esi+8] +
jb loc_417F60  +
mov ebx [ebp+arg_0] +
push 0  +
push 4  +
lea edi [esi+0Ch] +
push edi  +
mov ecx ebx +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_4181A2  +
mov eax [edi] +
mov ecx eax +
mov edx eax +
shl ecx 10h +
and edx 0FF00h +
add ecx edx +
shr eax 8 +
and eax 0FF00h +
shl ecx 8 +
add ecx eax +
movzx eax byte ptr [esi+0Fh] +
add ecx eax +
mov [edi] ecx +
cmp dword ptr [edi] 0 +
jz loc_41836D  +
push 0  +
lea eax [esi+1Ch] +
push 4  +
push eax  +
mov ecx ebx +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_4181E8  +
mov eax [esi+1Ch] +
mov ecx eax +
mov edx eax +
shl ecx 10h +
and edx 0FF00h +
add ecx edx +
shr eax 8 +
and eax 0FF00h +
shl ecx 8 +
add ecx eax +
movzx eax byte ptr [esi+1Fh] +
add ecx eax +
mov [esi+1Ch] ecx +
mov eax [edi] +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [edi] +
add esp 4 +
add ecx ecx +
add ecx ecx +
push 0  +
push ecx  +
push eax  +
mov ecx ebx +
mov [esi+58h] eax +
call sub_4154E0  +
mov eax [edi] +
xor ecx ecx +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [edi] +
add esp 4 +
add ecx ecx +
add ecx ecx +
push 0  +
push ecx  +
push eax  +
mov ecx ebx +
mov [esi+34h] eax +
call sub_4154E0  +
mov eax [edi] +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ecx [edi] +
add esp 4 +
add ecx ecx +
push 0  +
push ecx  +
push eax  +
mov ecx ebx +
mov [esi+38h] eax +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_41831E  +
xor ecx ecx +
cmp [edi] ecx +
jbe loc_41831E  +
jmp loc_418290  +
mov edx [esi+38h] +
mov bx [edx+ecx*2] +
lea eax [edx+ecx*2] +
movzx edx byte ptr [eax+1] +
shl bx 8 +
xor dx bx +
mov [eax] dx +
mov eax [esi+34h] +
lea eax [eax+ecx*4] +
mov [ebp+var_1C] eax +
mov eax [eax] +
mov edx eax +
shl edx 10h +
mov ebx eax +
and ebx 0FF00h +
add edx ebx +
mov ebx [ebp+var_1C] +
movzx ebx byte ptr [ebx+3] +
shl edx 8 +
add edx ebx +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax [ebp+var_1C] +
mov [eax] edx +
mov edx [esi+58h] +
lea eax [edx+ecx*4] +
mov [ebp+var_1C] eax +
mov eax [eax] +
mov edx eax +
mov ebx eax +
shl edx 10h +
and ebx 0FF00h +
add edx ebx +
mov ebx [ebp+var_1C] +
movzx ebx byte ptr [ebx+3] +
shl edx 8 +
shr eax 8 +
and eax 0FF00h +
add edx ebx +
add edx eax +
mov eax [ebp+var_1C] +
inc ecx  +
mov [eax] edx +
cmp ecx [edi] +
jb loc_418290  +
mov ebx [ebp+arg_0] +
mov ecx [esi+1Ch] +
lea edi [esi+1Ch] +
push ecx  +
call sub_425006  +
mov edx [edi] +
add esp 4 +
push 0  +
push edx  +
push eax  +
mov ecx ebx +
mov [esi+44h] eax +
call sub_4154E0  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_41836D  +
mov esi [esi+44h] +
xor eax eax +
test dword ptr [edi] 0FFFFFFFEh +
jbe loc_41836D  +
movzx ecx byte ptr [esi+eax*2+1] +
mov dx [esi+eax*2] +
shl dx 8 +
xor cx dx +
mov [esi+eax*2] cx +
mov ecx [edi] +
inc eax  +
shr ecx 1 +
cmp eax ecx +
jb loc_418350  +
mov edx [ebp+var_10] +
push edx  +
call sub_425D5C  +
add esp 4 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
call sub_4167E0  +
mov eax [ebp+arg_8] +
push eax  +
call sub_419B90  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
add esp 4 +
push esi  +
push ecx  +
mov [esi+3030h] al +
mov eax [esi+3020h] +
lea ecx [eax+eax*2] +
shl ecx 5 +
add ecx [esi+301Ch] +
push edx  +
call sub_417A80  +
mov eax [esi+3020h] +
lea ecx [eax+eax*2] +
shl ecx 5 +
add ecx [esi+301Ch] +
cmp dword ptr [ecx+4] 0 +
jnz loc_4183F4  +
push eax  +
mov ecx esi +
call sub_416BA0  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
mov edx [ecx] +
add [esi+10h] edx +
mov ecx [ecx+4] +
add [esi+14h] ecx +
inc eax  +
mov [esi+3020h] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43EF38  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_419D10  +
mov eax [ebp+arg_4] +
mov cl [ebp+arg_8] +
xor edx edx +
mov [ebp+var_4] edx +
mov dword ptr [esi] offset off_443FC8 +
mov [esi+0Ch] eax +
mov [esi+10h] cl +
cmp eax edx +
jbe loc_4184A5  +
cmp cl dl +
jnz loc_418477  +
mov eax [ebp+arg_0] +
mov [esi+8] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push eax  +
call sub_425006  +
mov ecx [esi+0Ch] +
mov edx [ebp+arg_0] +
push ecx  +
push edx  +
push eax  +
mov [esi+8] eax +
call loc_425490  +
add esp 10h +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov [esi+8] edx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx] +
mov eax [eax] +
pop ebp  +
jmp eax  +
***
mov edx [ebp+arg_8] +
mov eax [ecx] +
mov eax [eax] +
push edx  +
mov edx [ebp+arg_4] +
push edx  +
mov edx [ebp+arg_0] +
push edx  +
call eax  +
pop ebp  +
retn 10h  +
***
cmp byte ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_443FC8 +
jz loc_41850B  +
mov eax [esi+8] +
push eax  +
call sub_425D5C  +
add esp 4 +
mov ecx esi +
pop esi  +
jmp sub_419D20  +
***
push 0FFFFFFFFh  +
push offset loc_43EF68  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_419D10  +
mov edi [ebp+arg_0] +
xor ecx ecx +
mov dword ptr [esi] offset off_443FC8 +
mov eax [edi+0Ch] +
mov [ebp+var_4] ecx +
mov [esi+0Ch] eax +
mov byte ptr [esi+10h] 1 +
cmp eax ecx +
jbe loc_418587  +
push eax  +
call sub_425006  +
mov ecx [esi+0Ch] +
mov [esi+8] eax +
mov edx [edi+8] +
push ecx  +
push edx  +
push eax  +
call loc_425490  +
add esp 10h +
jmp loc_41858A  +
mov [esi+8] ecx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ecx+0Ch] +
mov eax 0CCCCCCCDh +
mul  ecx +
push ebx  +
push esi  +
push edi  +
mov edi edx +
shr edi 2 +
xor ebx ebx +
cmp edi 1 +
jnb loc_4185C3  +
lea edi [ebx+1] +
xor esi esi +
test ecx ecx +
jz loc_4185EB  +
mov eax [ebp+var_4] +
mov edx [eax+8] +
mov [ebp+var_4] edx +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax+esi] +
shl ebx 5 +
add eax ebx +
xor edx edx +
div  [ebp+arg_0] +
add esi edi +
mov ebx edx +
cmp esi ecx +
jb loc_4185D2  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ecx+0Ch] +
push esi  +
mov esi [ebp+arg_0] +
cmp edx [esi+0Ch] +
jnz loc_41863D  +
xor eax eax +
push edi  +
test edx edx +
jz loc_41862D  +
mov esi [esi+8] +
mov edi [ecx+8] +
lea esp [esp+0] +
mov cl [edi+eax] +
cmp cl [esi+eax] +
jnz loc_418635  +
inc eax  +
cmp eax edx +
jb loc_418620  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
cmp byte ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_443FC8 +
jz loc_41866E  +
mov eax [esi+8] +
push eax  +
call sub_425D5C  +
add esp 4 +
mov ecx esi +
call sub_419D20  +
test [ebp+arg_0] 1 +
jz loc_418684  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
xor esi esi +
xor ebx ebx +
xor edx edx +
test edi edi +
jz loc_4187DA  +
mov eax edi +
lea esp [esp+0] +
mov ecx [ebp+arg_0] +
movzx ecx word ptr [ecx+edx*2] +
cmp ecx 0Ah +
jz loc_418756  +
cmp ecx 0Dh +
jz loc_418756  +
cmp ecx 22h +
jnz loc_418757  +
inc esi  +
inc edx  +
cmp edx eax +
jb loc_418740  +
test esi esi +
jz loc_4187DA  +
add edi esi +
xor ecx ecx +
mov eax edi +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ebx [ebp+arg_4] +
xor esi esi +
add esp 4 +
mov [ebp+var_4] eax +
cmp [ebx] esi +
jbe loc_4187CE  +
lea esp [esp+0] +
mov ecx [ebp+arg_0] +
movzx edx word ptr [ecx+esi*2] +
mov ecx edx +
cmp ecx 0Ah +
jz loc_4187C0  +
cmp ecx 0Dh +
jz loc_4187B8  +
cmp ecx 22h +
jz loc_4187B0  +
mov [eax] dx +
add eax 2 +
jmp loc_4187C9  +
mov dword ptr [eax] 22005Ch +
jmp loc_4187C6  +
mov dword ptr [eax] 72005Ch +
jmp loc_4187C6  +
mov dword ptr [eax] 6E005Ch +
add eax 4 +
inc esi  +
cmp esi [ebx] +
jb loc_418790  +
mov eax [ebp+var_4] +
mov [ebx] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
push 1  +
lea ecx [eax+eax] +
push ecx  +
push edx  +
mov ecx esi +
call sub_4164C0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_4164F0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp esi eax +
jz loc_418853  +
push eax  +
call sub_416510  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_4164B0  +
shr eax 1 +
retn   +
***
call sub_4164B0  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
push 0FFFFFFFFh  +
sub esp 10h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_4] 0 +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
mov [ebp+var_C] ebx +
jz loc_4189E3  +
test eax eax +
jz loc_4189C7  +
mov eax [eax] +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx esi +
mov [ebp+var_10] eax +
call sub_4164B0  +
shr eax 1 +
push eax  +
mov ecx esi +
call sub_4164A0  +
push eax  +
call sub_419300  +
mov edi eax +
push edi  +
call sub_425006  +
add esp 10h +
lea edx [ebp+var_10] +
push edx  +
mov ebx eax +
push edi  +
push ebx  +
mov ecx esi +
call sub_4164B0  +
shr eax 1 +
push eax  +
mov ecx esi +
call sub_4164A0  +
push eax  +
call sub_419350  +
mov ecx [ebp+var_C] +
add esp 14h +
lea eax [edi-1] +
cdq   +
push edx  +
push eax  +
push ebx  +
call sub_415370  +
push ebx  +
call sub_425D5C  +
add esp 4 +
lea eax [edi-1] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
call sub_4164B0  +
mov edi eax +
test edi edi +
jz loc_418A62  +
cdq   +
push edx  +
push eax  +
mov ecx esi +
call sub_4164A0  +
push eax  +
jmp loc_418A59  +
call sub_4164B0  +
shr eax 1 +
mov ecx esi +
mov [ebp+var_10] eax +
call sub_4164A0  +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
call sub_418720  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_418A26  +
mov edx [ebp+var_10] +
push 0  +
lea eax [edx+edx] +
push eax  +
push edi  +
mov ecx ebx +
call sub_415370  +
push edi  +
call sub_425D5C  +
mov edi [ebp+var_C] +
add esp 4 +
jmp loc_418A41  +
mov ecx esi +
call sub_4164B0  +
mov edi eax +
cdq   +
push edx  +
push eax  +
mov ecx esi +
call sub_4164A0  +
push eax  +
mov ecx ebx +
call sub_415370  +
push 0  +
mov eax 0Ah +
push 6  +
lea ecx [ebp+var_C] +
mov [ebp+var_C] 0D0022h +
mov [ebp+var_8] ax +
push ecx  +
mov ecx ebx +
call sub_415370  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp ds:off_4447C4 0 +
push ebx  +
push esi  +
push edi  +
mov edi offset unk_4447C0 +
jz loc_418AF1  +
mov eax [ebp+arg_0] +
mov ecx [edi] +
cmp ecx [ebp+arg_4] +
ja loc_418AE8  +
mov esi [edi+4] +
add ecx ecx +
mov edx eax +
cmp ecx 4 +
jb loc_418AC4  +
lea ebx [ebx+0] +
mov ebx [esi] +
cmp ebx [edx] +
jnz loc_418AE8  +
sub ecx 4 +
add edx 4 +
add esi 4 +
cmp ecx 4 +
jnb loc_418AB0  +
test ecx ecx +
jz loc_418AF8  +
mov bl [edx] +
cmp bl [esi] +
jnz loc_418AE8  +
cmp ecx 1 +
jbe loc_418AF8  +
mov bl [edx+1] +
cmp bl [esi+1] +
jnz loc_418AE8  +
cmp ecx 2 +
jbe loc_418AF8  +
mov cl [edx+2] +
cmp cl [esi+2] +
jz loc_418AF8  +
add edi 0Ch +
cmp dword ptr [edi+4] 0 +
jnz loc_418A97  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F048  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_443F14 +
lea ecx [esi+14h] +
mov [ebp+var_4] 0 +
call sub_418860  +
mov ecx esi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_4184F0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_8] +
mov dword ptr [ebx] 0 +
push esi  +
mov dword ptr [eax] 0 +
cmp ds:off_444E10 0 +
push edi  +
mov edi offset unk_444E0C +
jz loc_418BFB  +
mov edx [edi] +
lea ecx [edx+1] +
cmp ecx [ebp+arg_4] +
ja loc_418BEE  +
mov ecx [ebp+arg_0] +
mov esi [edi+4] +
lea eax [edx+edx] +
cmp eax 4 +
jb loc_418BC7  +
mov edi edi +
mov ebx [esi] +
cmp ebx [ecx] +
jnz loc_418BEB  +
sub eax 4 +
add ecx 4 +
add esi 4 +
cmp eax 4 +
jnb loc_418BB0  +
mov ebx [ebp+arg_8] +
test eax eax +
jz loc_418C05  +
mov bl [ecx] +
cmp bl [esi] +
jnz loc_418BEB  +
cmp eax 1 +
jbe loc_418C02  +
mov bl [ecx+1] +
cmp bl [esi+1] +
jnz loc_418BEB  +
cmp eax 2 +
jbe loc_418C02  +
mov al [ecx+2] +
cmp al [esi+2] +
jz loc_418C02  +
mov ebx [ebp+arg_8] +
test edx edx +
jz loc_418C05  +
add edi 0Ch +
cmp dword ptr [edi+4] 0 +
jnz loc_418B96  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
mov ebx [ebp+arg_8] +
mov eax [ebp+arg_4] +
sub eax edx +
mov esi 4 +
cmp eax 4 +
jnb loc_418C16  +
mov esi eax +
xor eax eax +
test esi esi +
jle loc_418C52  +
lea esp [esp+0] +
mov ecx [edi] +
mov edx [ebp+arg_0] +
add ecx eax +
movzx ecx word ptr [edx+ecx*2] +
movzx edx cl +
cmp dx cx +
jnz loc_418C52  +
cmp ds:byte_444010[ecx] 0FFh +
jz loc_418C52  +
shl dword ptr [ebx] 4 +
movzx ecx cl +
movzx ecx ds:byte_444010[ecx] +
or ecx [ebx] +
inc eax  +
mov [ebx] ecx +
cmp eax esi +
jl loc_418C20  +
mov edx [edi] +
mov ecx [ebp+arg_C] +
add edx eax +
neg eax  +
sbb eax eax +
and eax edi +
pop edi  +
pop esi  +
mov [ecx] edx +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43EFC8  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_8] +
xor ecx ecx +
xor edi edi +
mov eax esi +
mov edx 2 +
mul  edx +
seto cl  +
mov [ebp+var_28] edi +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
add esp 4 +
cmp eax edi +
mov [ebp+var_28] eax +
setnz [ebp+var_30]  +
mov [ebp+var_2C] eax +
mov [ebp+var_4] edi +
mov edi [ebp+arg_4] +
mov ebx eax +
lea eax [edi+esi*2] +
mov [ebp+var_1C] eax +
xor ecx ecx +
mov [ebp+var_D] 0 +
mov [ebp+var_18] ecx +
mov [ebp+var_14] ecx +
mov esi edi +
cmp edi eax +
jz loc_418CF4  +
cmp word ptr [esi] 23h +
jz loc_418D3C  +
add esi 2 +
cmp esi eax +
jnz loc_418CE7  +
mov esi [ebp+arg_8] +
add esi esi +
push esi  +
push edi  +
push ebx  +
call loc_425490  +
mov edi [ebp+var_28] +
sub esi edi +
add esi ebx +
add esp 0Ch +
sar esi 1 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ecx esi +
call sub_4187F0  +
cmp [ebp+var_30] 0 +
jz loc_418D28  +
push edi  +
call sub_425D5C  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
cmp esi eax +
jz loc_418CF4  +
sub eax esi +
and eax 0FFFFFFFEh +
cmp eax 8 +
jl loc_418E1B  +
cmp word ptr [esi+2] 7Bh +
jnz loc_418E1B  +
mov eax [ebp+arg_8] +
mov edi esi +
sub edi [ebp+arg_4] +
lea ecx [esi+4] +
sar edi 1 +
sub eax edi +
add eax 0FFFFFFFEh +
push eax  +
push ecx  +
mov [ebp+var_24] eax +
call sub_418A80  +
add esp 8 +
mov [ebp+var_20] eax +
test eax eax +
jnz loc_418DA4  +
mov edx [ebp+var_24] +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_18] +
push ecx  +
push edx  +
lea eax [esi+4] +
push eax  +
call sub_418B70  +
add esp 10h +
mov [ebp+var_20] eax +
test eax eax +
jz loc_418E18  +
mov [ebp+var_D] 1 +
jmp loc_418DB0  +
movzx ecx word ptr [eax+8] +
mov edx [eax] +
mov [ebp+var_18] ecx +
mov [ebp+var_14] edx +
mov eax [ebp+var_14] +
cmp word ptr [esi+eax*2+4] 7Dh +
jnz loc_418E18  +
mov ecx [ebp+arg_4] +
lea eax [edi+edi] +
push eax  +
push ecx  +
push ebx  +
call loc_425490  +
mov eax [ebp+var_14] +
lea edx [esi+eax*2+6] +
lea eax [eax+edi+3] +
sub [ebp+arg_8] eax +
add esp 0Ch +
cmp [ebp+var_D] 0 +
lea ebx [ebx+edi*2] +
mov [ebp+arg_4] edx +
jz loc_418DFB  +
mov cx word ptr [ebp+var_18] +
mov edi [ebp+arg_4] +
mov eax [ebp+var_1C] +
mov [ebx] cx +
add ebx 2 +
jmp loc_418CD5  +
cmp [ebp+var_20] offset unk_4447C0 +
jnz loc_418DE6  +
mov edi [ebp+arg_4] +
mov eax [ebp+var_1C] +
mov dword ptr [ebx] 0A000Dh +
add ebx 4 +
jmp loc_418CD5  +
mov edi [ebp+arg_4] +
sub esi edi +
sar esi 1 +
inc esi  +
mov [ebp+var_24] esi +
add esi esi +
push esi  +
push edi  +
push ebx  +
call loc_425490  +
mov edx [ebp+var_24] +
mov eax [ebp+var_1C] +
add edi esi +
add esp 0Ch +
add ebx esi +
sub [ebp+arg_8] edx +
mov [ebp+arg_4] edi +
jmp loc_418CD5  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_418880  +
push eax  +
mov ecx esi +
call sub_418870  +
mov esi [ebp+arg_0] +
push eax  +
push esi  +
call sub_418C70  +
add esp 0Ch +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F019  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor edi edi +
mov [ebp+var_14] edi +
mov esi [ebp+arg_8] +
xor ecx ecx +
mov eax esi +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov ebx eax +
add esp 4 +
cmp ebx edi +
mov [ebp+var_10] ebx +
setnz [ebp+var_1C]  +
mov [ebp+var_18] ebx +
xor ecx ecx +
mov [ebp+var_4] 1 +
cmp dword_451B1C edi +
jnz loc_418F14  +
mov edx off_44FD04 +
cmp byte_451B04 cl +
jnz loc_418F0E  +
mov edx off_44FD00 +
mov dword_451B1C edx +
cmp esi edi +
jbe loc_418FAC  +
mov ebx [ebp+arg_8] +
nop   +
test ecx ecx +
jz loc_418F6E  +
mov edx ecx +
movzx ecx word ptr [ecx] +
test cx cx +
jz loc_418F49  +
mov esi [ebp+arg_4] +
movzx esi word ptr [esi+edi*2] +
cmp cx si +
jz loc_418F46  +
movzx ecx word ptr [edx+4] +
add edx 4 +
test cx cx +
jnz loc_418F35  +
mov esi [ebp+arg_8] +
movzx ecx word ptr [edx+2] +
test cx cx +
jnz loc_418F64  +
mov ecx [ebp+arg_4] +
mov [eax] bx +
movzx ecx word ptr [ecx+edi*2] +
add eax 2 +
cmp cx bx +
jz loc_418F6A  +
mov [eax] cx +
add eax 2 +
xor ecx ecx +
jmp loc_418F9A  +
mov edx [ebp+arg_4] +
movzx edx word ptr [edx+edi*2] +
cmp edx 5Eh +
jnz loc_418F84  +
mov ecx dword_451B1C +
mov ebx edx +
jmp loc_418F9A  +
cmp edx 5Ch +
jnz loc_418F92  +
mov ecx offset aNRTB +
mov ebx edx +
jmp loc_418F9A  +
xor ecx ecx +
mov [eax] dx +
add eax 2 +
inc edi  +
cmp edi esi +
jb loc_418F20  +
test ecx ecx +
jz loc_418FA9  +
mov [eax] bx +
add eax 2 +
mov ebx [ebp+var_10] +
sub eax ebx +
sar eax 1 +
push eax  +
push ebx  +
lea ecx [ebp+arg_8] +
call sub_4187F0  +
mov esi [ebp+arg_0] +
push eax  +
push esi  +
mov byte ptr [ebp+var_4] 2 +
call sub_418E50  +
add esp 8 +
lea ecx [ebp+arg_8] +
mov [ebp+var_14] 1 +
mov byte ptr [ebp+var_4] 1 +
call sub_418860  +
cmp [ebp+var_1C] 0 +
jz loc_418FED  +
push ebx  +
call sub_425D5C  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F048  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [ebp+arg_0] +
push eax  +
call sub_418520  +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
push ecx  +
push edx  +
lea eax [esi+14h] +
push eax  +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_443F14 +
call sub_418E90  +
add esp 0Ch +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edx ecx +
push edi  +
xor eax eax +
mov ecx 3FDh +
mov edi edx +
stos   +
mov [edx+1000h] eax +
mov [edx+1004h] eax +
mov byte ptr [edx+0FFCh] 1 +
mov eax edx +
pop edi  +
retn   +
***
push edi  +
mov ebx ecx +
xor edi edi +
mov esi [ebx+edi*4] +
test esi esi +
jz loc_4190D2  +
mov edi edi +
mov ecx esi +
mov eax [ecx] +
mov edx [eax+0Ch] +
mov esi [esi+4] +
push 1  +
call edx  +
test esi esi +
jnz loc_4190C0  +
inc edi  +
cmp edi 3FDh +
jb loc_4190B7  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov edx [eax+10h] +
push edi  +
mov edi ecx +
push 3FDh  +
mov ecx esi +
call edx  +
mov ecx [edi+eax*4] +
mov [esi+4] ecx +
mov [edi+eax*4] esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov edx [eax+10h] +
push esi  +
push edi  +
mov edi ecx +
push 3FDh  +
mov ecx ebx +
call edx  +
mov [edi+0FF4h] eax +
mov esi [edi+eax*4] +
mov dword ptr [edi+0FF8h] 0 +
test esi esi +
jz loc_41915B  +
mov eax [esi] +
mov edx [eax+14h] +
push ebx  +
mov ecx esi +
call edx  +
test al al +
jnz loc_41915B  +
mov [edi+0FF8h] esi +
mov esi [esi+4] +
test esi esi +
jnz loc_419140  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_419110  +
test eax eax +
jz loc_4191AF  +
mov ecx [esi+0FF8h] +
mov edx [eax+4] +
test ecx ecx +
jnz loc_4191A5  +
mov ecx [esi+0FF4h] +
mov [esi+ecx*4] edx +
mov dword ptr [eax+4] 0 +
pop esi  +
pop ebp  +
retn 4  +
mov [ecx+4] edx +
mov dword ptr [eax+4] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_0] +
cmp word ptr [ecx] 0 +
mov eax ecx +
jz loc_4191D9  +
mov edi edi +
add eax 2 +
cmp word ptr [eax] 0 +
jnz loc_4191D0  +
sub eax ecx +
sar eax 1 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_C] +
mov edx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test eax eax +
jz loc_419219  +
test ecx ecx +
jz loc_41920B  +
mov di [esi] +
cmp di [edx] +
jnz loc_41920B  +
dec ecx  +
add esi 2 +
add edx 2 +
dec eax  +
jnz loc_4191F5  +
test eax eax +
jz loc_419219  +
test ecx ecx +
jz loc_419219  +
movzx eax word ptr [esi] +
movzx ecx word ptr [edx] +
pop edi  +
sub eax ecx +
pop esi  +
pop ebp  +
retn   +
***
sub esp 8 +
push ecx  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_4192C0  +
mov eax dword_451B20 +
mov ecx [ebp+cchMultiByte] +
mov edx [ebp+lpMultiByteStr] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
push edx  +
call off_44FD20  +
add esp 10h +
test eax eax +
jz loc_4192EB  +
mov [ebp+arg_8] eax +
push offset unk_44CAF4  +
lea eax [ebp+arg_8] +
push eax  +
call sub_425C90  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_419310  +
mov eax dword_451B20 +
mov ecx [ebp+cchWideChar] +
mov edx [ebp+lpWideCharStr] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
push edx  +
call off_44FD28  +
add esp 10h +
test eax eax +
jz loc_41933B  +
mov [ebp+arg_8] eax +
push offset unk_44CAF4  +
lea eax [ebp+arg_8] +
push eax  +
call sub_425C90  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_419371  +
push offset unk_44CAF4  +
lea eax [ebp+arg_8] +
push eax  +
mov [ebp+arg_8] 42554646h +
call sub_425C90  +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_10] +
dec ecx  +
test eax eax +
jnz loc_419381  +
mov eax dword_451B20 +
push eax  +
mov eax [ebp+cchWideChar] +
lea edx [ebp+var_4] +
push edx  +
push ecx  +
mov ecx [ebp+lpWideCharStr] +
push esi  +
push eax  +
push ecx  +
call off_44FD2C  +
add esp 18h +
test eax eax +
jz loc_4193AE  +
push offset unk_44CAF4  +
lea edx [ebp+arg_8] +
push edx  +
mov [ebp+arg_8] eax +
call sub_425C90  +
mov eax [ebp+var_4] +
mov byte ptr [eax+esi] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_C] +
mov ecx dword_451B20 +
test eax eax +
jz loc_4193D6  +
mov [ebp+arg_C] eax +
jmp loc_4193DB  +
mov [ebp+arg_C] ecx +
mov eax ecx +
test eax eax +
jnz loc_4193E1  +
mov eax ecx +
mov ecx [ebp+lpMultiByteStr] +
push ebx  +
mov ebx [ebp+cchMultiByte] +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push ecx  +
call off_44FD20  +
add esp 10h +
test eax eax +
jz loc_41940F  +
push offset unk_44CAF4  +
lea edx [ebp+arg_C] +
push edx  +
mov [ebp+arg_C] eax +
call sub_425C90  +
mov esi [ebp+var_4] +
mov edi [ebp+arg_8] +
cmp [edi+4] esi +
jnb loc_419422  +
push esi  +
mov ecx edi +
call sub_419220  +
mov ecx [ebp+arg_C] +
mov eax [edi] +
mov edx [ebp+lpMultiByteStr] +
push ecx  +
push esi  +
push eax  +
push ebx  +
push edx  +
call off_44FD24  +
add esp 14h +
mov [edi+8] esi +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_419453  +
mov [ebp+arg_C] eax +
push offset unk_44CAF4  +
lea eax [ebp+arg_C] +
push eax  +
call sub_425C90  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+8] +
push eax  +
mov dword ptr [ecx] offset off_444E84 +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi+4] eax +
xor ecx ecx +
mov eax 100h +
mov edx 2 +
mul  edx +
seto cl  +
mov dword ptr [esi] offset off_444E84 +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425006  +
mov [esi+8] eax +
add esp 4 +
xor eax eax +
mov [esi+10h] eax +
mov dword ptr [esi+0Ch] 100h +
mov [esi+14h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi+8] +
push eax  +
mov dword ptr [esi] offset off_444E84 +
call sub_425D5C  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4194F7  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_41A150  +
test [ebp+arg_0] 1 +
jz loc_41951A  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 18h +
push esi  +
mov esi ecx +
mov eax [esi] +
mov ecx [eax+4] +
test byte ptr [ecx+esi+0Ch] 6 +
push edi  +
jnz loc_4195B8  +
mov edi [ebp+arg_0] +
mov ecx [ecx+esi+38h] +
mov edx [ecx] +
mov edx [edx+2Ch] +
push 1  +
sub esp 18h +
mov eax esp +
mov [eax] edi +
mov edi [ebp+arg_4] +
mov [eax+4] edi +
mov edi [ebp+arg_8] +
mov [eax+8] edi +
mov edi [ebp+arg_C] +
mov [eax+0Ch] edi +
mov edi [ebp+arg_10] +
mov [eax+10h] edi +
mov edi [ebp+arg_14] +
mov [eax+14h] edi +
lea eax [ebp+var_18] +
push eax  +
call edx  +
mov eax [ebp+var_10] +
cdq   +
add eax [ebp+var_18] +
adc edx [ebp+var_14] +
cmp eax ds:dword_446E30 +
jnz loc_4195B8  +
cmp edx ds:dword_446E34 +
jnz loc_4195B8  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 2 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_4195B0  +
or eax 4 +
push 0  +
push eax  +
call sub_404F50  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_43F080  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
xor ebx ebx +
mov [esi+8] ebx +
mov [esi+0Ch] ebx +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx+esi+38h] +
xor edi edi +
mov [ebp+var_14] ebx +
mov [ebp+var_24] esi +
cmp ecx ebx +
jz loc_419624  +
mov edx [ecx] +
mov eax [edx+4] +
call eax  +
push 1  +
mov ecx esi +
mov [ebp+var_4] ebx +
call sub_4151D0  +
mov [ebp+var_20] al +
mov [ebp+var_4] 1 +
cmp al bl +
jnz loc_41964A  +
mov [ebp+var_14] 0FFFFFFFFh +
jmp loc_41970A  +
mov ecx [esi] +
mov edx [ecx+4] +
mov ecx [edx+esi+38h] +
mov eax [ecx+20h] +
mov byte ptr [ebp+var_4] 2 +
cmp [eax] ebx +
jz loc_41966C  +
mov edx [ecx+30h] +
cmp [edx] ebx +
jle loc_41966C  +
mov eax [eax] +
movzx eax byte ptr [eax] +
jmp loc_419673  +
mov edx [ecx] +
mov eax [edx+18h] +
call eax  +
mov [ebp+var_14] eax +
cmp eax 0FFFFFFFFh +
jnz loc_41968A  +
lea edi [eax+4] +
mov [ebp+var_4] 1 +
jmp loc_41970A  +
mov ecx [esi] +
mov edx [ecx+4] +
mov ecx [edx+esi+38h] +
mov eax [ecx+20h] +
cmp [eax] ebx +
jz loc_4196BA  +
mov edx [ecx+30h] +
cmp [edx] ebx +
jle loc_4196BA  +
mov eax edx +
dec dword ptr [eax]  +
mov ecx [ecx+20h] +
inc dword ptr [ecx]  +
add dword ptr [esi+8] 1 +
mov [ebp+var_4] 1 +
adc [esi+0Ch] ebx +
jmp loc_41970A  +
mov eax [ecx] +
mov edx [eax+1Ch] +
call edx  +
add dword ptr [esi+8] 1 +
mov [ebp+var_4] 1 +
adc [esi+0Ch] ebx +
jmp loc_41970A  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov eax [eax+4] +
add eax ecx +
mov ecx [eax+0Ch] +
xor ebx ebx +
or ecx 4 +
cmp [eax+38h] ebx +
jnz loc_4196EB  +
or ecx 4 +
and ecx 17h +
mov [eax+0Ch] ecx +
test [eax+10h] ecx +
jnz loc_419759  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_419703 +
retn   +
mov esi [ebp-18h] +
xor ebx ebx +
mov edi ebx +
mov ecx [esi] +
mov ecx [ecx+4] +
add ecx esi +
cmp edi ebx +
jz loc_419729  +
mov eax [ecx+0Ch] +
or eax edi +
cmp [ecx+38h] ebx +
jnz loc_419722  +
or eax 4 +
push ebx  +
push eax  +
call sub_404F50  +
mov edx [esi] +
mov eax [edx+4] +
mov ecx [eax+esi+38h] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp ecx ebx +
jz loc_419744  +
mov edx [ecx] +
mov eax [edx+8] +
call eax  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push ebx  +
call sub_425C90  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+14h] 2 +
mov [ebp+var_4] edi +
jnz loc_4197B9  +
mov ecx [edi+20h] +
mov eax [edi+1Ch] +
mov ebx [ebp+arg_4] +
mov esi [ebx] +
sub eax ecx +
cmp eax esi +
jge loc_419795  +
mov esi eax +
test esi esi +
jz loc_4198DE  +
mov eax [ebp+arg_0] +
push esi  +
push ecx  +
push eax  +
call loc_425490  +
add esp 0Ch +
add [edi+20h] esi +
pop edi  +
mov [ebx] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov edi [edi+4] +
xor esi esi +
test edi edi +
jnz loc_4197C8  +
xor eax eax +
xor ecx ecx +
jmp loc_4197D1  +
mov ecx [edi] +
mov eax [ecx+4] +
add eax edi +
mov ecx eax +
push 0  +
push offset off_44FE34  +
push offset off_44F324  +
sub eax edi +
push eax  +
push ecx  +
call sub_428599  +
mov ebx [ebp+arg_4] +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_41983D  +
cmp [edi+64h] esi +
jnz loc_419804  +
mov eax ebx +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
xor esi esi +
cmp [ebx] esi +
jle loc_4198DE  +
mov edi edi +
mov ecx edi +
call sub_4195D0  +
mov ecx [edi] +
mov edx [ecx+4] +
test byte ptr [edx+edi+0Ch] 1 +
jnz loc_4198DE  +
mov ecx [ebp+arg_0] +
mov [esi+ecx] al +
inc esi  +
cmp esi [ebx] +
jl loc_419810  +
pop edi  +
mov [ebx] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov edx [ebp+var_4] +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_41984D  +
xor eax eax +
xor edx edx +
jmp loc_419856  +
mov eax [ecx] +
mov eax [eax+4] +
add eax ecx +
mov edx eax +
push 0  +
push offset off_44FDF4  +
push offset off_44F324  +
sub eax ecx +
push eax  +
push edx  +
call sub_428599  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_4198A9  +
xor esi esi +
cmp [ebx] esi +
jle loc_4198DE  +
lea ebx [ebx+0] +
mov ecx edi +
call sub_4195D0  +
mov ecx [edi] +
mov edx [ecx+4] +
test byte ptr [edx+edi+0Ch] 1 +
jnz loc_4198DE  +
mov ecx [ebp+arg_0] +
mov [esi+ecx] al +
inc esi  +
cmp esi [ebx] +
jl loc_419880  +
pop edi  +
mov [ebx] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov edx [ebp+var_4] +
mov edi [edx+4] +
test edi edi +
jz loc_4198DE  +
xor esi esi +
cmp [ebx] esi +
jle loc_4198DE  +
lea esp [esp+0] +
mov ecx edi +
call sub_4195D0  +
mov ecx [edi] +
mov edx [ecx+4] +
test byte ptr [edx+edi+0Ch] 1 +
jnz loc_4198DE  +
mov ecx [ebp+arg_0] +
mov [esi+ecx] al +
inc esi  +
cmp esi [ebx] +
jl loc_4198C0  +
pop edi  +
mov [ebx] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
test edi edi +
jnz loc_419905  +
xor eax eax +
xor ecx ecx +
jmp loc_41990E  +
mov eax [edi] +
mov eax [eax+4] +
add eax edi +
mov ecx eax +
push 0  +
push offset off_44FE34  +
push offset off_44F324  +
sub eax edi +
push eax  +
push ecx  +
call sub_428599  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_419969  +
mov edi [ebp+arg_8] +
xor esi esi +
cmp [edi] esi +
jle loc_419A01  +
lea esp [esp+0] +
mov edx [ebx] +
mov eax [edx+4] +
test byte ptr [eax+ebx+0Ch] 1 +
jnz loc_419A01  +
mov ecx ebx +
call sub_4195D0  +
mov ecx [ebp+arg_4] +
mov [esi+ecx] al +
inc esi  +
cmp esi [edi] +
jl loc_419940  +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
test edi edi +
jnz loc_419973  +
xor eax eax +
xor ecx ecx +
jmp loc_41997C  +
mov edx [edi] +
mov eax [edx+4] +
add eax edi +
mov ecx eax +
push 0  +
push offset off_44FDF4  +
push offset off_44F324  +
sub eax edi +
push eax  +
push ecx  +
call sub_428599  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_4199CD  +
mov ecx [ebp+arg_8] +
xor esi esi +
cmp [ecx] esi +
jle loc_4199FE  +
mov edi [ebp+arg_4] +
mov edx [ebx] +
mov eax [edx+4] +
test byte ptr [eax+ebx+0Ch] 1 +
jnz loc_4199FE  +
mov ecx ebx +
call sub_4195D0  +
mov ecx [ebp+arg_8] +
mov [esi+edi] al +
inc esi  +
cmp esi [ecx] +
jl loc_4199A6  +
mov edi ecx +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
test edi edi +
jz loc_4199FE  +
mov edx [ebp+arg_8] +
xor esi esi +
cmp [edx] esi +
jle loc_4199FE  +
mov ebx [ebp+arg_4] +
lea ecx [ecx+0] +
mov eax [edi] +
mov ecx [eax+4] +
test byte ptr [ecx+edi+0Ch] 1 +
jnz loc_4199FE  +
mov ecx edi +
call sub_4195D0  +
mov edx [ebp+arg_8] +
mov [esi+ebx] al +
inc esi  +
cmp esi [edx] +
jl loc_4199E0  +
mov edi [ebp+arg_8] +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax 0CCCCCCCDh +
mul  ebx +
push esi  +
mov esi edx +
push edi  +
shr esi 2 +
xor edi edi +
cmp esi 1 +
jnb loc_419B5F  +
lea esi [edi+1] +
xor ecx ecx +
test ebx ebx +
jz loc_419B82  +
mov eax [ebp+arg_0] +
movzx eax byte ptr [ecx+eax] +
shl edi 5 +
add eax edi +
xor edx edx +
mov edi 3FDh +
div  edi +
add ecx esi +
mov edi edx +
cmp ecx ebx +
jb loc_419B65  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
xor al al +
cmp ecx 2 +
jz loc_419BAA  +
cmp ecx 1 +
jz loc_419BAA  +
test ecx ecx +
jnz loc_419BAC  +
mov al 1 +
pop ebp  +
retn   +
xor al al +
pop ebp  +
retn   +
***
movzx ecx [ebp+arg_0] +
mov eax ecx +
shr eax 8 +
shl ecx 8 +
or eax ecx +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F0E8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_416580  +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [ebp+var_4] ecx +
mov dword ptr [esi] offset off_444EF4 +
mov [esi+8] eax +
cmp eax ecx +
jbe loc_419C41  +
push eax  +
call sub_425006  +
mov ecx [esi+8] +
mov edx [ebp+arg_4] +
push ecx  +
push edx  +
push eax  +
mov [esi+0Ch] eax +
call loc_425490  +
add esp 10h +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov [esi+0Ch] ecx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43DAAB  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 10h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_419CB9  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ecx  +
push edx  +
mov ecx eax +
call sub_419BD0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
push eax  +
mov dword ptr [esi] offset off_444EF4 +
call sub_425D5C  +
add esp 4 +
mov ecx esi +
call sub_416590  +
test [ebp+arg_0] 1 +
jz loc_419CFE  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
mov dword ptr [ecx] offset off_444F14 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_444F14 +
jz loc_419D4B  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_C] +
xor eax eax +
test ecx ecx +
jz loc_419D7A  +
mov eax [ecx] +
dec eax  +
jz loc_419D75  +
xor eax eax +
jmp loc_419D7A  +
mov eax 0FDE9h +
mov ecx [ebp+cchMultiByte] +
mov edx [ebp+lpMultiByteStr] +
push 0  +
push 0  +
push ecx  +
push edx  +
push 0  +
push eax  +
call ds:MultiByteToWideChar  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_10] +
mov ecx [ebp+arg_C] +
xor eax eax +
test ecx ecx +
jz loc_419E1A  +
mov eax [ecx] +
dec eax  +
jz loc_419E15  +
xor eax eax +
jmp loc_419E1A  +
mov eax 0FDE9h +
mov ecx [ebp+cchWideChar] +
mov edx [ebp+lpWideCharStr] +
push 0  +
push 0  +
push 0  +
push 0  +
push ecx  +
push edx  +
push 0  +
push eax  +
call ds:WideCharToMultiByte  +
mov ecx [ebp+arg_8] +
inc eax  +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_14] +
push ebx  +
push esi  +
xor ebx ebx +
xor eax eax +
push edi  +
test ecx ecx +
jz loc_419E5F  +
mov eax [ecx] +
dec eax  +
jz loc_419E5A  +
xor eax eax +
jmp loc_419E5F  +
mov eax 0FDE9h +
mov edi [ebp+cchMultiByte] +
mov ecx [ebp+lpMultiByteStr] +
mov esi [ebp+cchWideChar] +
mov edx [ebp+lpWideCharStr] +
push 0  +
push 0  +
push edi  +
push ecx  +
push esi  +
push edx  +
push 0  +
push eax  +
call ds:WideCharToMultiByte  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
test eax eax +
jnz loc_419ED4  +
test esi esi +
jz loc_419ED4  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_419ECA  +
xor ebx ebx +
xor esi esi +
test edi edi +
jz loc_419EBB  +
lea esp [esp+0] +
mov edx [ebp+lpMultiByteStr] +
movzx eax byte ptr [esi+edx] +
push 0  +
push eax  +
call ds:IsDBCSLeadByteEx  +
test eax eax +
jz loc_419EB5  +
inc esi  +
inc esi  +
inc ebx  +
cmp esi edi +
jb loc_419EA0  +
mov ecx [ebp+arg_10] +
pop edi  +
pop esi  +
mov [ecx] ebx +
mov eax 42554646h +
pop ebx  +
pop ebp  +
retn   +
pop edi  +
pop esi  +
mov eax 6875683Fh +
pop ebx  +
pop ebp  +
retn   +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_419480  +
mov dword ptr [esi] offset off_444E90 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
push esi  +
mov [ebp+var_4] 2 +
call sub_419770  +
cmp [ebp+var_4] 0 +
jz loc_419F2E  +
cmp word ptr [esi] 0 +
jz loc_419F2E  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
mov edx [eax+8] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx edi +
mov dword ptr [edi+10h] 0 +
call edx  +
test al al +
jnz loc_419FB8  +
mov ax word ptr [ebp+var_4] +
cmp ax 0Ah +
jz loc_419FC7  +
cmp ax 0Dh +
jz loc_419FC7  +
mov ecx 2028h +
cmp ax cx +
jz loc_419FC7  +
mov edx 2029h +
cmp ax dx +
jz loc_419FC7  +
movzx ebx ax +
mov eax [edi+10h] +
inc eax  +
cmp [edi+0Ch] eax +
jnb loc_419F9A  +
push eax  +
lea ecx [edi+8] +
call sub_419220  +
mov eax [edi+10h] +
mov ecx [edi+8] +
mov [ecx+eax*2] bx +
inc dword ptr [edi+10h]  +
mov edx [edi] +
mov edx [edx+8] +
lea eax [ebp+var_4] +
push eax  +
mov ecx edi +
call edx  +
test al al +
jz loc_419F61  +
cmp dword ptr [edi+10h] 0 +
jnz loc_419FC7  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [edi+10h] +
inc eax  +
cmp [edi+0Ch] eax +
jnb loc_419FD9  +
push eax  +
lea ecx [edi+8] +
call sub_419220  +
mov eax [edi+10h] +
mov ecx [edi+8] +
xor edx edx +
mov [ecx+eax*2] dx +
inc dword ptr [edi+10h]  +
mov eax [edi+8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
push eax  +
mov esi ecx +
call sub_419EE0  +
mov dword ptr [esi] offset off_444EA0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_419F00  +
mov bl al +
movzx eax word ptr [esi] +
push eax  +
call sub_419BB0  +
add esp 4 +
mov [esi] ax +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 4  +
***
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+4] +
mov ecx [ebp+arg_0] +
cmp esi ecx +
jnb loc_41A09E  +
fld  ds:dbl_444E78 +
mov [ebp+arg_0] esi +
fild  [ebp+arg_0] +
test esi esi +
jns loc_41A07B  +
fadd  ds:dbl_444E70 +
fnstcw  word ptr [ebp+arg_0+2] +
movzx eax word ptr [ebp+arg_0+2] +
fmul st st(1) +
or eax 0C00h +
mov [ebp+var_4] eax +
fldcw  word ptr [ebp+var_4] +
fistp  qword ptr [ebp-8] +
mov esi [ebp+var_8] +
fldcw  word ptr [ebp+arg_0+2] +
cmp esi ecx +
jb loc_41A06B  +
fstp  st +
push esi  +
call sub_425006  +
mov ecx [edi] +
mov ebx eax +
mov eax [edi+8] +
push eax  +
push ecx  +
push ebx  +
call loc_425490  +
mov edx [edi] +
push edx  +
call sub_425D5C  +
add esp 14h +
mov [edi] ebx +
mov [edi+4] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F118  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [ebp+arg_0] +
push eax  +
call sub_419480  +
push 100h  +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_444EB0 +
call sub_425006  +
mov [esi+24h] eax +
add esp 4 +
mov dword ptr [esi+28h] 100h +
mov dword ptr [esi+2Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [esi+24h] +
push eax  +
mov dword ptr [esi] offset off_444EB0 +
call sub_425D5C  +
add esp 4 +
mov ecx esi +
pop esi  +
jmp loc_419460  +
***
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov dword ptr [edi+2Ch] 0 +
lea eax [ebp+var_8] +
push eax  +
lea ecx [ebp-1] +
push ecx  +
mov ebx 1 +
mov ecx edi +
mov [ebp+var_8] ebx +
call sub_419770  +
cmp [ebp+var_8] 0 +
jz loc_41A1D0  +
mov al [ebp+var_1] +
test al al +
jz loc_41A1D0  +
cmp al 0Ah +
jz loc_41A1DF  +
cmp al 0Dh +
jz loc_41A1DF  +
mov bl al +
mov eax [edi+2Ch] +
inc eax  +
cmp [edi+28h] eax +
jnb loc_41A1C2  +
push eax  +
lea ecx [edi+24h] +
call sub_41A050  +
mov eax [edi+2Ch] +
mov edx [edi+24h] +
mov [edx+eax] bl +
inc dword ptr [edi+2Ch]  +
jmp loc_41A182  +
cmp dword ptr [edi+2Ch] 0 +
jnz loc_41A1DF  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [edi+2Ch] +
mov edx [edi+24h] +
push 0  +
lea esi [edi+8] +
push esi  +
push ecx  +
push edx  +
call sub_4193C0  +
mov eax [esi+8] +
add eax ebx +
add esp 10h +
cmp [esi+4] eax +
jnb loc_41A207  +
push eax  +
mov ecx esi +
call sub_419220  +
mov eax [esi+8] +
mov ecx [esi] +
xor edx edx +
mov [ecx+eax*2] dx +
add [esi+8] ebx +
mov eax [esi] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+lpMultiByteStr] +
push esi  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov esi eax +
test esi esi +
jle loc_41A274  +
push edi  +
push 2  +
push esi  +
call sub_4286D9  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_41A26F  +
push esi  +
push edi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_41A26D  +
mov [edi] ax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+lpWideCharStr] +
push esi  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
mov esi eax +
test esi esi +
jle loc_41A2DC  +
push edi  +
push 1  +
push esi  +
call sub_4286D9  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_41A2D7  +
push 0  +
push 0  +
push esi  +
push edi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
mov eax edi +
jnz loc_41A2D7  +
mov byte ptr [edi] 0 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_4] +
push eax  +
push esi  +
push edi  +
push ebx  +
call sub_428719  +
add esp 10h +
test eax eax +
jz loc_41A319  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
mov eax esi +
lea edx [eax+1] +
mov edi edi +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41A320  +
mov ecx [ebp+arg_C] +
sub eax edx +
cmp ecx eax +
jbe loc_41A341  +
cmp eax edi +
jnb loc_41A341  +
cmp ecx eax +
jbe loc_41A341  +
mov byte ptr [eax+ebx] 0 +
inc eax  +
cmp eax edi +
jb loc_41A334  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push eax  +
push ecx  +
push edx  +
push esi  +
call sub_4287CE  +
add esp 10h +
neg eax  +
sbb eax eax +
not eax  +
and eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
lea eax [ebp+arg_C] +
push eax  +
mov eax [ebp+arg_0] +
push ecx  +
push 0FFFFFFFFh  +
push edx  +
push eax  +
call sub_42777E  +
add esp 14h +
pop ebp  +
retn   +
***
sub esp 414h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpMultiByteStr] +
test eax eax +
jz loc_41A4F7  +
cmp byte ptr [eax] 0 +
jz loc_41A4F7  +
xor ecx ecx +
push esi  +
xor edx edx +
push eax  +
mov [ebp-214h] cx +
mov word ptr [ebp+var_C] dx +
mov word ptr [ebp+var_414] cx +
call sub_41A220  +
push 0  +
push 0  +
push 0  +
push 0  +
push 100h  +
lea edx [ebp+var_414] +
push edx  +
mov esi eax +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_428A31  +
push esi  +
call sub_425BC2  +
lea eax [ebp+var_C] +
add esp 2Ch +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_41A415  +
sub eax edx +
sar eax 1 +
push eax  +
lea ecx [ebp+var_C] +
push ecx  +
lea edx [ebp-214h] +
push 104h  +
push edx  +
call sub_428964  +
lea eax [ebp+var_414] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_41A446  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+var_414] +
push eax  +
lea ecx [ebp-214h] +
push 104h  +
push ecx  +
call sub_42888E  +
lea eax [ebp-214h] +
add esp 10h +
lea edx [eax+2] +
lea ebx [ebx+0] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_41A480  +
sub eax edx +
sar eax 1 +
cmp [ebp+eax*2+WideCharStr] 5Ch +
lea eax [ebp+eax*2+WideCharStr] +
jnz loc_41A4A6  +
xor edx edx +
mov [eax] dx +
lea eax [ebp-214h] +
push eax  +
call sub_41A280  +
add esp 4 +
mov esi eax +
lea edx [eax+1] +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41A4C0  +
sub eax edx +
push eax  +
push esi  +
push 1800h  +
push offset unk_453328  +
call sub_428719  +
push esi  +
call sub_425BC2  +
add esp 14h +
mov eax offset unk_453328 +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
xor ecx ebp +
mov eax offset unk_444F2C +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push eax  +
push ecx  +
push esi  +
call sub_40F860  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+lpMultiByteStr] +
push ebx  +
push esi  +
push edi  +
push eax  +
call sub_41A220  +
mov ecx [ebp+arg_4] +
push ecx  +
mov esi eax +
call sub_41A220  +
mov edi eax +
push 40h  +
push edi  +
push esi  +
call sub_427F04  +
push esi  +
mov ebx eax +
call sub_425BC2  +
push edi  +
call sub_425BC2  +
add esp 1Ch +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov eax [ebp+lpMultiByteStr] +
push esi  +
push edi  +
push eax  +
call sub_41A220  +
mov esi eax +
push 0  +
push esi  +
call sub_428C43  +
push esi  +
mov edi eax +
call sub_425BC2  +
add esp 10h +
xor eax eax +
test edi edi +
pop edi  +
setz al  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 804h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+WideCharStr] +
push eax  +
push 400h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_41A630  +
lea ecx [ebp+WideCharStr] +
push esi  +
push ecx  +
call sub_41A280  +
add esp 4 +
mov esi eax +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41A5E2  +
sub eax edx +
jz loc_41A5F8  +
cmp byte ptr [eax+esi-1] 5Ch +
jnz loc_41A5F8  +
mov [eax+esi-1] cl +
mov eax esi +
lea edx [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41A600  +
sub eax edx +
mov edx [ebp+arg_4] +
push eax  +
push esi  +
push edx  +
push edi  +
call sub_41A2F0  +
push esi  +
call sub_425BC2  +
add esp 14h +
pop esi  +
mov eax edi +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
pop edi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+lpMultiByteStr] +
mov eax [ebp+lpMultiByteStr] +
sub esp 8 +
mov ecx [ebp+lpMultiByteStr] +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
push ecx  +
mov [ebp+var_4] eax +
call sub_41A220  +
push 2  +
push 400h  +
mov ebx eax +
call sub_4286D9  +
push 400h  +
mov edi eax +
push ebx  +
push edi  +
call sub_428DA0  +
add esp 18h +
test eax eax +
jnz loc_41A70D  +
mov [ebp+var_4] eax +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_41A712  +
sub eax edx +
sar eax 1 +
jz loc_41A755  +
push esi  +
push edi  +
call sub_41A280  +
add esp 4 +
mov esi eax +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41A732  +
sub eax edx +
mov edx [ebp+arg_4] +
push eax  +
push esi  +
push 400h  +
push edx  +
call sub_41A2F0  +
push esi  +
call sub_425BC2  +
add esp 14h +
pop esi  +
push ebx  +
call sub_425BC2  +
push edi  +
call sub_425BC2  +
mov eax [ebp+var_4] +
add esp 8 +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 804h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
dec eax  +
push edi  +
mov edi [ebp+arg_0] +
cmp eax 0FEh +
ja loc_41A7AF  +
movzx eax ds:byte_41A85C[eax] +
jmp ds:off_41A84C[eax*4]  +
mov esi 2Bh +
jmp loc_41A7B4  +
mov esi 23h +
jmp loc_41A7B4  +
mov esi 2Ch +
lea ecx [ebp+WideCharStr] +
push ecx  +
push 0  +
push 0  +
mov edx esi +
or edx 8000h +
push edx  +
push 0  +
call ds:SHGetFolderPathW  +
test eax eax +
jz loc_41A7F4  +
cmp esi 2Ch +
jnz loc_41A837  +
push 1  +
push edi  +
call sub_41A770  +
add esp 8 +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_41A280  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_41A837  +
push 400h  +
push esi  +
push 400h  +
push edi  +
call sub_41A2F0  +
push esi  +
mov edi eax +
call sub_425BC2  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 804h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 400h  +
lea eax [ebp+WideCharStr] +
push eax  +
push 400000h  +
xor esi esi +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_41A9C7  +
lea ecx [ebp+WideCharStr] +
push ecx  +
call sub_41A280  +
mov esi eax +
push edi  +
push esi  +
call sub_41A6D0  +
push esi  +
mov edi eax +
call sub_425BC2  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
dec [ebp+arg_8]  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
xor esi esi +
call sub_42670C  +
mov ebx eax +
add esp 4 +
cmp ebx 0FFFFFFFFh +
jz loc_41AA45  +
mov edi edi +
cmp ebx 0Dh +
jz loc_41AA28  +
cmp ebx 0Ah +
jz loc_41AA45  +
cmp esi [ebp+arg_8] +
jge loc_41AA16  +
mov eax [ebp+arg_4] +
mov [esi+eax] bl +
inc esi  +
push edi  +
call sub_42670C  +
mov ebx eax +
add esp 4 +
cmp ebx 0FFFFFFFFh +
jnz loc_41AA00  +
jmp loc_41AA45  +
push edi  +
call sub_42670C  +
mov ebx eax +
add esp 4 +
cmp ebx 0Ah +
jz loc_41AA45  +
push 1  +
push 0FFFFFFFFh  +
push edi  +
call sub_428F25  +
add esp 0Ch +
mov ecx [ebp+arg_4] +
mov byte ptr [esi+ecx] 0 +
cmp ebx 0FFFFFFFFh +
jnz loc_41AA5C  +
test esi esi +
jnz loc_41AA5C  +
pop edi  +
pop esi  +
or eax ebx +
pop ebx  +
pop ebp  +
retn   +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push eax  +
push esi  +
call sub_41A770  +
add esp 8 +
test eax eax +
jz loc_41AAF1  +
push edi  +
push 1  +
push offset asc_441A28  +
push 400h  +
push esi  +
call sub_41A350  +
mov edx off_44FEEC +
mov eax edx +
add esp 10h +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41AAB0  +
sub eax edi +
push eax  +
push edx  +
push 400h  +
push esi  +
call sub_41A350  +
add esp 10h +
mov esi eax +
pop edi  +
test esi esi +
jz loc_41AAEF  +
push esi  +
call sub_41A570  +
add esp 4 +
test eax eax +
jnz loc_41AAEF  +
push esi  +
call sub_41A690  +
add esp 4 +
test eax eax +
jz loc_41AAEF  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
xor edi edi +
call sub_41A960  +
add esp 4 +
test eax eax +
jz loc_41AB45  +
push esi  +
call sub_41A3A0  +
mov ecx eax +
add esp 4 +
lea edi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_41AB25  +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
push 400h  +
push esi  +
call sub_41A2F0  +
add esp 10h +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 3Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
call sub_4245D0  +
xor ebx ebx +
push 15h  +
mov edi 0Fh +
push offset aC_amtpcdservic  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41ABA0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea eax [ebp+var_3C] +
push eax  +
lea ecx [ebp+var_20] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41ABDA  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41ABF8  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41AC2E  +
push offset aFailedToFindC_  +
push offset aPcdservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_C] +
push ebx  +
mov [ebp+var_48] eax +
mov eax [ebp+arg_10] +
push esi  +
push edi  +
mov [ebp+var_40] ecx +
mov [ebp+var_44] edx +
mov [ebp+var_4C] eax +
call sub_4245D0  +
xor ebx ebx +
push 25h  +
mov edi 0Fh +
push offset aC_amtpcdserv_0  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41ACB5  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea ecx [ebp+var_20] +
push ecx  +
lea edx [ebp+var_3C] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41ACEF  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41AD0D  +
mov ecx [ebp+var_20] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41AD46  +
push offset aFailedToFind_0  +
push offset aPcdservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+arg_14] +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_44] +
push edx  +
mov edx [ebp+arg_8] +
push eax  +
mov eax [ebp+var_40] +
push ecx  +
mov ecx [ebp+var_48] +
push edx  +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 18h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 50h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_C] +
push ebx  +
mov [ebp+var_44] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_40] ecx +
mov ecx [ebp+arg_14] +
push esi  +
push edi  +
mov [ebp+var_50] edx +
mov [ebp+var_48] eax +
mov [ebp+var_4C] ecx +
call sub_4245D0  +
xor ebx ebx +
push 2Eh  +
mov edi 0Fh +
push offset aC_amtpcdserv_1  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
jmp loc_41ADF0  +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41ADF0  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41AE2A  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41AE48  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41AE81  +
push offset aFailedToFind_1  +
push offset aPcdservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_18] +
mov ecx [ebp+var_4C] +
mov edx [ebp+var_48] +
push eax  +
mov eax [ebp+var_50] +
push ecx  +
mov ecx [ebp+arg_8] +
push edx  +
mov edx [ebp+var_40] +
push eax  +
mov eax [ebp+var_44] +
push ecx  +
push edx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
add esp 1Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
sub esp 50h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
mov [ebp+var_44] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_40] ecx +
mov ecx [ebp+arg_10] +
push esi  +
push edi  +
mov [ebp+var_50] edx +
mov [ebp+var_48] eax +
mov [ebp+var_4C] ecx +
call sub_4245D0  +
xor ebx ebx +
push 31h  +
mov edi 0Fh +
push offset aC_amtpcdserv_3  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
jmp loc_41B050  +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41B050  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41B08A  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41B0A8  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41B0E1  +
push offset aFailedToFind_3  +
push offset aPcdservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_14] +
mov ecx [ebp+var_4C] +
mov edx [ebp+var_48] +
push eax  +
mov eax [ebp+var_50] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_44] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 18h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 23h  +
mov edi 0Fh +
push offset aC_amtpcdserv_4  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41B170  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41B1AA  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41B1C8  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41B201  +
push offset aFailedToFind_4  +
push offset aPcdservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+arg_C] +
mov edx [ebp+var_48] +
mov eax [ebp+var_44] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
call sub_4245D0  +
xor ebx ebx +
push 27h  +
mov edi 0Fh +
push offset aC_amtpcdserv_6  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41B3B0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41B3EA  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41B408  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41B441  +
push offset aFailedToFind_6  +
push offset aPcdservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_44] +
mov edx [ebp+var_40] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 21h  +
mov edi 0Fh +
push offset aC_amtpcdserv_7  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41B4D0  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41B50A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41B528  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41B561  +
push offset aFailedToFind_7  +
push offset aPcdservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+arg_C] +
mov edx [ebp+var_48] +
mov eax [ebp+var_44] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 3Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
call sub_4245D0  +
xor ebx ebx +
push 18h  +
mov edi 0Fh +
push offset aC_amtenigmaser  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41B5E0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea eax [ebp+var_3C] +
push eax  +
lea ecx [ebp+var_20] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41B61A  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41B638  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41B66E  +
push offset aFailedToFind_8  +
push offset aEnigmaservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 25h  +
mov edi 0Fh +
push offset aC_amtenigmas_0  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41B6F0  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41B72A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41B748  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41B781  +
push offset aFailedToFind_9  +
push offset aEnigmaservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_48] +
mov edx [ebp+var_44] +
mov eax [ebp+var_40] +
push ecx  +
push edx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 25h  +
mov edi 0Fh +
push offset aC_amtenigmas_1  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41B810  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41B84A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41B868  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41B8A1  +
push offset aFailedToFin_10  +
push offset aEnigmaservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_48] +
mov edx [ebp+var_44] +
mov eax [ebp+var_40] +
push ecx  +
push edx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
mov [ebp+var_48] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [ebp+var_40] ecx +
mov [ebp+var_44] edx +
mov [ebp+var_4C] eax +
call sub_4245D0  +
xor ebx ebx +
push 20h  +
mov edi 0Fh +
push offset aC_amtenigmas_2  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41B935  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea ecx [ebp+var_20] +
push ecx  +
lea edx [ebp+var_3C] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41B96F  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41B98D  +
mov ecx [ebp+var_20] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41B9C6  +
push offset aFailedToFin_11  +
push offset aEnigmaservice  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_4C] +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_48] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 15h  +
mov edi 0Fh +
push offset aC_slcoreservic  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41BA43  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41BA7D  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41BA9B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41BAD1  +
push offset aFailedToFindSl  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 16h  +
mov edi 0Fh +
push offset aC_slcoreserv_0  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41BB43  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41BB7D  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41BB9B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41BBBE  +
push offset aFailedToFin_12  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 5Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov [ebp+var_4C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_44] ecx +
mov ecx [ebp+arg_10] +
push ebx  +
mov [ebp+var_50] edx +
mov edx [ebp+arg_14] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_48] ecx +
mov ecx [ebp+arg_1C] +
push esi  +
push edi  +
mov [ebp+var_5C] edx +
mov [ebp+var_54] eax +
mov [ebp+var_58] ecx +
call sub_4245D0  +
xor ebx ebx +
push 1Dh  +
mov edi 0Fh +
push offset aC_slcoreserv_1  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41BC60  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41BC9A  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41BCB8  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41BCF1  +
push offset aFailedToFin_13  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_58] +
mov ecx [ebp+var_54] +
mov edx [ebp+var_5C] +
push eax  +
mov eax [ebp+var_48] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_50] +
push eax  +
mov eax [ebp+var_44] +
push ecx  +
mov ecx [ebp+var_4C] +
push edx  +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 20h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 50h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
mov [ebp+var_44] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_40] ecx +
mov ecx [ebp+arg_10] +
push esi  +
push edi  +
mov [ebp+var_50] edx +
mov [ebp+var_48] eax +
mov [ebp+var_4C] ecx +
call sub_4245D0  +
xor ebx ebx +
push 1Eh  +
mov edi 0Fh +
push offset aC_slcoreserv_2  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
jmp loc_41BDA0  +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41BDA0  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41BDDA  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41BDF8  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41BE31  +
push offset aFailedToFin_14  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_14] +
mov ecx [ebp+var_4C] +
mov edx [ebp+var_48] +
push eax  +
mov eax [ebp+var_50] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_44] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 18h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 1Fh  +
mov edi 0Fh +
push offset aC_slcoreserv_3  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41BEB3  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41BEED  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41BF0B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41BF41  +
push offset aFailedToFin_15  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
call sub_4245D0  +
xor ebx ebx +
push 20h  +
mov edi 0Fh +
push offset aC_slcoreserv_4  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41BFC0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41BFFA  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C018  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41C051  +
push offset aFailedToFin_16  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 8 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
mov [ebp+var_48] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [ebp+var_40] ecx +
mov [ebp+var_44] edx +
mov [ebp+var_4C] eax +
call sub_4245D0  +
xor ebx ebx +
push 21h  +
mov edi 0Fh +
push offset aC_slcoreserv_5  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41C0D5  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea ecx [ebp+var_20] +
push ecx  +
lea edx [ebp+var_3C] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41C10F  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C12D  +
mov ecx [ebp+var_20] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41C166  +
push offset aFailedToFin_17  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_4C] +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_48] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
mov [ebp+var_48] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [ebp+var_40] ecx +
mov [ebp+var_44] edx +
mov [ebp+var_4C] eax +
call sub_4245D0  +
xor ebx ebx +
push 21h  +
mov edi 0Fh +
push offset aC_slcoreserv_6  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41C1F5  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea ecx [ebp+var_20] +
push ecx  +
lea edx [ebp+var_3C] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41C22F  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C24D  +
mov ecx [ebp+var_20] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41C286  +
push offset aFailedToFin_18  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_4C] +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_48] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 21h  +
mov edi 0Fh +
push offset aC_slcoreserv_7  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41C310  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41C34A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C368  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41C3A1  +
push offset aFailedToFin_19  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_48] +
mov edx [ebp+var_44] +
mov eax [ebp+var_40] +
push ecx  +
push edx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 21h  +
mov edi 0Fh +
push offset aC_slcoreserv_8  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41C430  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41C46A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C488  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41C4C1  +
push offset aFailedToFin_20  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_48] +
mov edx [ebp+var_44] +
mov eax [ebp+var_40] +
push ecx  +
push edx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
call sub_4245D0  +
xor ebx ebx +
push 1Ch  +
mov edi 0Fh +
push offset aC_slcoreser_10  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41C670  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41C6AA  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C6C8  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41C701  +
push offset aFailedToFin_22  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 8 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
call sub_4245D0  +
xor ebx ebx +
push 16h  +
mov edi 0Fh +
push offset aC_slcoreser_11  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41C780  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41C7BA  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C7D8  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41C811  +
push offset aFailedToFin_23  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 8 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 1Ah  +
mov edi 0Fh +
push offset aC_slcoreser_12  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41C883  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41C8BD  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41C8DB  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41C914  +
push offset aFailedToFin_24  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+arg_4] +
mov eax [ebp+var_40] +
push edx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
add esp 8 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
call sub_4245D0  +
xor ebx ebx +
push 1Fh  +
mov edi 0Fh +
push offset aC_slcoreser_13  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41C9A0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41C9DA  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41C9F8  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41CA31  +
push offset aFailedToFin_25  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 8 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
mov [ebp+var_48] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov [ebp+var_40] ecx +
mov [ebp+var_44] edx +
mov [ebp+var_4C] eax +
call sub_4245D0  +
xor ebx ebx +
push 21h  +
mov edi 0Fh +
push offset aC_slcoreser_14  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41CAB5  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea ecx [ebp+var_20] +
push ecx  +
lea edx [ebp+var_3C] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41CAEF  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41CB0D  +
mov ecx [ebp+var_20] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41CB46  +
push offset aFailedToFin_26  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_4C] +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_48] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 23h  +
mov edi 0Fh +
push offset aC_slcoreser_15  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41CBD0  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41CC0A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41CC28  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41CC61  +
push offset aFailedToFin_27  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+arg_C] +
mov edx [ebp+var_48] +
mov eax [ebp+var_44] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 23h  +
mov edi 0Fh +
push offset aC_slcoreser_16  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41CCF0  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41CD2A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41CD48  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41CD81  +
push offset aFailedToFin_28  +
push offset aSlcore  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 8209h +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_48] +
mov edx [ebp+var_44] +
mov eax [ebp+var_40] +
push ecx  +
push edx  +
push eax  +
call esi  +
mov ecx [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 3Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
call sub_4245D0  +
xor ebx ebx +
push 1Ah  +
mov edi 0Fh +
push offset aC_launchcaches  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41CE00  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea eax [ebp+var_3C] +
push eax  +
lea ecx [ebp+var_20] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41CE3A  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41CE58  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41CE8E  +
push offset aFailedToFin_29  +
push offset aLaunchCache  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 48h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
mov [ebp+var_48] edx +
call sub_4245D0  +
xor ebx ebx +
push 13h  +
mov edi 0Fh +
push offset aC_lc_setcaches  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41CF10  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41CF4A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41CF68  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41CFA1  +
push offset aFailedToFin_30  +
push offset aLaunchCache  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+arg_C] +
mov edx [ebp+var_48] +
mov eax [ebp+var_44] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 4Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
mov [ebp+var_48] eax +
mov eax [ebp+arg_C] +
xor ebx ebx +
push esi  +
mov [ebp+var_40] ecx +
mov [ebp+var_44] edx +
mov [ebp+var_4C] eax +
cmp eax ebx +
jz loc_41D006  +
mov dword ptr [eax] 1 +
push edi  +
call sub_4245D0  +
push 13h  +
mov edi 0Fh +
push offset aC_lc_getcaches  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41D040  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41D07A  +
mov edx [ebp+var_3C] +
push edx  +
call sub_42520B  +
add esp 4 +
cmp [ebp+var_C] edi +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
pop edi  +
jb loc_41D099  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41D0D1  +
push offset aFailedToFin_31  +
push offset aLaunchCache  +
call sub_41D360  +
add esp 8 +
pop esi  +
mov eax 0ABAD10ADh +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4C] +
mov edx [ebp+var_44] +
mov eax [ebp+var_40] +
push ecx  +
mov ecx [ebp+var_48] +
push edx  +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 10h +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 0Ch  +
mov edi 0Fh +
push offset aC_amtrelease  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41D153  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41D18D  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41D1AB  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41D1DF  +
push offset aFailedToFin_32  +
push offset aServiceloader  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax 1004h +
call sub_429690  +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push ecx  +
push eax  +
test esi esi +
jnz loc_41D275  +
lea eax [ebp+OutputString] +
push 0FFDh  +
push eax  +
call sub_429666  +
add esp 10h +
test eax eax +
jle loc_41D248  +
lea eax [ebp+eax+OutputString] +
jmp loc_41D250  +
cmp eax 0FFFFFFFFh +
jnz loc_41D284  +
lea eax [ebp-7] +
lea ecx [ebp+OutputString] +
mov word ptr [eax] 0A0Dh +
push ecx  +
mov byte ptr [eax+2] 0 +
call ds:OutputDebugStringA  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
push esi  +
call sub_42959B  +
push esi  +
call sub_426D87  +
add esp 10h +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
lea edx [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41D2B0  +
push ebx  +
mov ebx [ebp+arg_4] +
sub eax edx +
push esi  +
mov edx eax +
mov eax ebx +
push edi  +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41D2C6  +
sub eax esi +
lea edi [eax+edx+3] +
push 1  +
push edi  +
call sub_4286D9  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_41D34F  +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
lea ebx [ebx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41D2F0  +
sub eax edx +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
push edi  +
push esi  +
call sub_41A2F0  +
push 2  +
push offset unk_445FB0  +
push edi  +
push esi  +
call sub_41A350  +
mov eax ebx +
add esp 20h +
lea ecx [eax+1] +
jmp loc_41D320  +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_41D320  +
sub eax ecx +
push eax  +
push ebx  +
push edi  +
push esi  +
call sub_41A350  +
push 1  +
push offset unk_443EA8  +
push edi  +
push esi  +
call sub_41A350  +
mov ecx [ebp+arg_8] +
push ecx  +
push esi  +
push 0  +
call sub_41D200  +
add esp 2Ch +
push esi  +
call sub_425BC2  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push ecx  +
push edx  +
call sub_41D2A0  +
add esp 0Ch +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 1Fh  +
mov edi 0Fh +
push offset aC_amtloggingse  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41D3D3  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41D40D  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41D42B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41D461  +
push offset aFailedToFin_33  +
push offset aLogging  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
call sub_4245D0  +
xor ebx ebx +
push 1Ch  +
mov edi 0Fh +
push offset aC_amtlogging_0  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41D4E0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41D51A  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41D538  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41D56C  +
push offset aFailedToFin_34  +
push offset aLogging  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 8 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 22h  +
mov edi 0Fh +
push offset aC_amtlogging_1  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41D5E3  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_41D61D  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_41D63B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_41D66F  +
push offset aFailedToFin_35  +
push offset aLogging  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 44h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
mov [ebp+var_44] ecx +
call sub_4245D0  +
xor ebx ebx +
push 2Ah  +
mov edi 0Fh +
push offset aC_amtloggercre  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41D6F0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41D72A  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41D748  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41D77E  +
push offset aFailedToFin_36  +
push offset aLogging  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
push eax  +
push ecx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 8 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 50h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_C] +
push ebx  +
mov [ebp+var_44] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_40] ecx +
mov ecx [ebp+arg_14] +
push esi  +
push edi  +
mov [ebp+var_50] edx +
mov [ebp+var_48] eax +
mov [ebp+var_4C] ecx +
call sub_4245D0  +
xor ebx ebx +
push 9  +
mov edi 0Fh +
push offset aC_amtlogv  +
lea ecx [ebp+var_20] +
mov esi eax +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
call sub_402230  +
mov [ebp+var_28] edi +
mov edi off_44FEF0 +
mov eax edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
lea ecx [eax+1] +
jmp loc_41D810  +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41D810  +
sub eax ecx +
push eax  +
push edi  +
lea ecx [ebp+var_3C] +
call sub_402230  +
lea edx [ebp+var_20] +
push edx  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_28] edi +
jb loc_41D84A  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp [ebp+var_C] edi +
jb loc_41D868  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp esi ebx +
jnz loc_41D89C  +
push offset aFailedToFin_37  +
push offset aLogging  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_48] +
mov edx [ebp+var_50] +
push eax  +
mov eax [ebp+arg_8] +
push ecx  +
mov ecx [ebp+var_40] +
push edx  +
mov edx [ebp+var_44] +
push eax  +
push ecx  +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 18h +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_10] +
mov edx [ebp+arg_C] +
lea eax [ebp+arg_14] +
push eax  +
mov eax [ebp+arg_8] +
push ecx  +
mov ecx [ebp+arg_4] +
push edx  +
mov edx [ebp+arg_0] +
push eax  +
push ecx  +
push edx  +
call sub_41D7A0  +
add esp 18h +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F3F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi] +
mov ebx [ebp+arg_0] +
cmp ebx [eax+4] +
jbe loc_41D9A8  +
mov esi offset unk_454B44 +
mov [ebp+var_10] esi +
mov eax [eax] +
mov [ebp+var_4] 0 +
mov [ebp+arg_0] eax +
test ebx ebx +
jz loc_41D978  +
xor ecx ecx +
lea eax [ebx+0Fh] +
shr eax 2 +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425CDC  +
mov esi eax +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov byte ptr [eax+esi+8] 0 +
add esp 4 +
mov [esi+4] ebx +
mov eax [edi] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
lea eax [esi+8] +
push eax  +
call loc_425490  +
mov eax [edi] +
add esp 0Ch +
mov [edi] esi +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_41D9A8  +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F148  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx] +
mov ecx [eax+4] +
mov esi [ebp+arg_4] +
cmp esi ecx +
ja loc_41DA19  +
lea edx [esi+esi*2+18h] +
cmp ecx edx +
ja loc_41DA19  +
mov ecx [ebp+arg_0] +
push esi  +
push ecx  +
add eax 8 +
push eax  +
call loc_425800  +
mov edx [ebx] +
mov [edx] esi +
mov eax [ebx] +
add esp 0Ch +
mov byte ptr [eax+esi+8] 0 +
jmp loc_41DA83  +
mov edi offset unk_454B44 +
mov [ebp+arg_4] edi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_41DA57  +
xor ecx ecx +
lea eax [esi+0Fh] +
shr eax 2 +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425CDC  +
mov edi eax +
mov [edi] esi +
mov byte ptr [edi+esi+8] 0 +
add esp 4 +
mov [edi+4] esi +
mov eax [ebp+arg_0] +
push esi  +
push eax  +
lea ecx [edi+8] +
push ecx  +
call loc_425490  +
mov eax [ebx] +
add esp 0Ch +
mov [ebx] edi +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_41DA83  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
mov edi [eax] +
add edi ebx +
cmp edi [eax+4] +
jbe loc_41DAC1  +
mov eax [eax+4] +
add eax edi +
push eax  +
call sub_41D900  +
mov eax [esi] +
mov ecx [ebp+arg_0] +
mov edx [eax] +
push ebx  +
push ecx  +
lea eax [edx+eax+8] +
push eax  +
call loc_425800  +
mov ecx [esi] +
mov [ecx] edi +
mov edx [esi] +
add esp 0Ch +
mov byte ptr [edx+edi+8] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov dword ptr [ecx] offset off_44614C +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_44614C +
jz loc_41DB1B  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_41DB40  +
sub eax edi +
push eax  +
push esi  +
add ecx 18h +
call sub_41D9C0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
cmp [eax+10h] ecx +
jz loc_41DB71  +
xor al al +
pop ebp  +
retn 4  +
mov edx [eax+28h] +
test edx edx +
jz loc_41DB82  +
push esi  +
mov esi [eax+24h] +
mov [edx+24h] esi +
pop esi  +
jmp loc_41DB88  +
mov edx [eax+24h] +
mov [ecx+1Ch] edx +
mov edx [eax+24h] +
test edx edx +
jz loc_41DBA5  +
mov ecx [eax+28h] +
mov [edx+28h] ecx +
mov edx [eax] +
mov ecx eax +
mov eax [edx] +
push 1  +
call eax  +
mov al 1 +
pop ebp  +
retn 4  +
mov edx [eax+28h] +
mov [ecx+18h] edx +
mov edx [eax] +
mov ecx eax +
mov eax [edx] +
push 1  +
call eax  +
mov al 1 +
pop ebp  +
retn 4  +
***
mov eax [ecx+18h] +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_41DC21  +
mov eax [ecx+18h] +
pop ebp  +
retn 4  +
mov eax [eax+28h] +
pop ebp  +
retn 4  +
***
test esi esi +
jz loc_41DC4C  +
mov eax [esi] +
mov edx [eax+18h] +
mov ecx esi +
call edx  +
test eax eax +
jnz loc_41DC50  +
mov esi [esi+28h] +
test esi esi +
jnz loc_41DC38  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi] +
mov edx [eax+18h] +
mov ecx esi +
pop esi  +
jmp edx  +
***
test esi esi +
jz loc_41DC7B  +
mov eax [esi] +
mov edx [eax+10h] +
mov ecx esi +
call edx  +
test eax eax +
jnz loc_41DC7F  +
mov esi [esi+10h] +
test esi esi +
jnz loc_41DC67  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi] +
mov edx [eax+10h] +
mov ecx esi +
pop esi  +
jmp edx  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi ecx +
mov edx [edi+4Ch] +
lea ecx [edi+2Ch] +
mov eax edx +
sub eax ecx +
neg eax  +
sbb eax eax +
and eax edx +
mov edx [ebx] +
push eax  +
mov eax [edx+4] +
push edi  +
mov ecx ebx +
call eax  +
test al al +
jz loc_41DCD7  +
push esi  +
mov esi [edi+18h] +
test esi esi +
jz loc_41DCD6  +
mov edx [esi] +
mov eax [edx+40h] +
push ebx  +
mov ecx esi +
call eax  +
test al al +
jz loc_41DCD6  +
mov esi [esi+28h] +
test esi esi +
jnz loc_41DCC1  +
pop esi  +
mov edx [ebx] +
mov eax [edx+0Ch] +
push edi  +
mov ecx ebx +
call eax  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+18h] +
test ecx ecx +
jz loc_41DD09  +
mov eax [ecx] +
mov edx [eax+30h] +
call edx  +
test eax eax +
jz loc_41DD09  +
mov eax [eax+20h] +
add eax 8 +
retn   +
xor eax eax +
retn   +
***
push esi  +
mov esi ecx +
cmp byte ptr [esi+44h] 0 +
push edi  +
mov edi [ebp+arg_0] +
jz loc_41DD44  +
push edi  +
push 0EFh  +
call sub_426800  +
push edi  +
push 0BBh  +
call sub_426800  +
push edi  +
push 0BFh  +
call sub_426800  +
add esp 18h +
mov eax [esi] +
mov edx [eax+4] +
push 0  +
push edi  +
mov ecx esi +
call edx  +
push edi  +
call sub_4296DB  +
add esp 4 +
neg eax  +
sbb eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ecx+18h] +
test esi esi +
jz loc_41DDA5  +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi] +
mov edx [eax+4] +
push ebx  +
push edi  +
mov ecx esi +
call edx  +
push offset unk_445FB4  +
push edi  +
call sub_429703  +
mov esi [esi+28h] +
add esp 8 +
test esi esi +
jnz loc_41DD83  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov edx [eax+8] +
mov ebx ecx +
push ebx  +
mov ecx edi +
call edx  +
test al al +
jz loc_41DDE6  +
push esi  +
mov esi [ebx+18h] +
test esi esi +
jz loc_41DDE5  +
mov eax [esi] +
mov edx [eax+40h] +
push edi  +
mov ecx esi +
call edx  +
test al al +
jz loc_41DDE5  +
mov esi [esi+28h] +
test esi esi +
jnz loc_41DDD0  +
pop esi  +
mov eax [edi] +
mov edx [eax+10h] +
push ebx  +
mov ecx edi +
call edx  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
test esi esi +
jle loc_41DE23  +
push offset asc_446164  +
push edi  +
call sub_429703  +
add esp 8 +
dec esi  +
jnz loc_41DE12  +
mov eax [ebx+20h] +
add eax 8 +
push eax  +
push offset aS  +
push edi  +
call sub_429703  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ecx  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [edx+18h] +
call eax  +
pop ebp  +
retn 4  +
***
push ecx  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [edx+1Ch] +
call eax  +
pop ebp  +
retn 4  +
***
push ecx  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [edx+20h] +
call eax  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
test esi esi +
jle loc_41DEC3  +
push offset asc_446164  +
push edi  +
call sub_429703  +
add esp 8 +
dec esi  +
jnz loc_41DEB2  +
mov eax [ebx+20h] +
add eax 8 +
push eax  +
push offset aS_0  +
push edi  +
call sub_429703  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ecx  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [edx+14h] +
call eax  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov [eax+20h] ecx +
mov edx [ecx+1Ch] +
mov [eax+1Ch] edx +
mov edx [ecx+1Ch] +
mov [edx+20h] eax +
mov [ecx+1Ch] eax +
pop ebp  +
retn 4  +
***
mov eax [ecx+20h] +
push ebx  +
push esi  +
push edi  +
cmp eax ecx +
jz loc_41DF68  +
mov edi [ebp+arg_0] +
mov edx [eax+14h] +
mov esi edi +
add edx 8 +
mov bl [edx] +
cmp bl [esi] +
jnz loc_41DF58  +
test bl bl +
jz loc_41DF54  +
mov bl [edx+1] +
cmp bl [esi+1] +
jnz loc_41DF58  +
add edx 2 +
add esi 2 +
test bl bl +
jnz loc_41DF38  +
xor edx edx +
jmp loc_41DF5D  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jz loc_41DF6A  +
mov eax [eax+20h] +
cmp eax ecx +
jnz loc_41DF30  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_4] +
lea eax [ebp+arg_C] +
push eax  +
mov eax [ebp+arg_0] +
push ecx  +
push edx  +
push 20h  +
push eax  +
call sub_42777E  +
add esp 14h +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F18E  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
or eax 0FFFFFFFFh +
xor ebx ebx +
mov [esi+8] eax +
mov [esi+4] eax +
mov [esi+0Ch] ebx +
lea ecx [esi+14h] +
mov dword ptr [esi] offset off_446178 +
mov [ebp+var_4] ebx +
mov dword ptr [ecx] offset unk_454B44 +
mov dword ptr [esi+18h] offset unk_454B44 +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
mov byte ptr [ebp+var_4] 2 +
mov [ebp+var_10] edx +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_41E001  +
sub eax [ebp+var_10] +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
call sub_41D9C0  +
mov edx [ebp+arg_4] +
mov eax edx +
lea ecx [eax+1] +
mov [ebp+arg_0] ecx +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_41E020  +
sub eax [ebp+arg_0] +
lea ecx [esi+18h] +
push eax  +
push edx  +
call sub_41D9C0  +
mov [esi+10h] ebx +
mov [esi+20h] ebx +
mov [esi+1Ch] ebx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 2Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [eax] +
push ebx  +
mov ebx [edx] +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_2C] eax +
test ebx ebx +
jle loc_41E1A0  +
lea ebx [ebx+0] +
mov cl [edx+esi+8] +
lea eax [edx+esi+8] +
cmp cl 26h +
jnz loc_41E0FC  +
lea ecx [ebx-2] +
cmp esi ecx +
jge loc_41E0EB  +
cmp byte ptr [edx+esi+9] 23h +
jnz loc_41E0EB  +
cmp byte ptr [edx+esi+0Ah] 78h +
jnz loc_41E0EB  +
dec ebx  +
cmp esi ebx +
jge loc_41E191  +
jmp loc_41E0C0  +
push 1  +
push eax  +
mov ecx edi +
call sub_41DAA0  +
mov edx [ebp+var_2C] +
mov ecx [edx] +
inc esi  +
cmp byte ptr [ecx+esi+8] 3Bh +
lea eax [ecx+esi+8] +
jz loc_41E191  +
mov ecx [ecx] +
dec ecx  +
cmp esi ecx +
jl loc_41E0C0  +
jmp loc_41E191  +
mov edx dword_44FFC0 +
mov eax off_44FFBC +
push edx  +
jmp loc_41E188  +
cmp cl 3Ch +
jnz loc_41E111  +
mov ecx dword_44FFCC +
mov edx off_44FFC8 +
push ecx  +
push edx  +
jmp loc_41E189  +
cmp cl 3Eh +
jnz loc_41E125  +
mov eax dword_44FFD8 +
mov ecx off_44FFD4 +
push eax  +
push ecx  +
jmp loc_41E189  +
cmp cl 22h +
jnz loc_41E138  +
mov edx dword_44FFE4 +
mov eax off_44FFE0 +
push edx  +
jmp loc_41E188  +
cmp cl 27h +
jnz loc_41E14D  +
mov ecx dword_44FFF0 +
mov edx off_44FFEC +
push ecx  +
push edx  +
jmp loc_41E189  +
cmp cl 20h +
jnb loc_41E180  +
movzx eax cl +
push eax  +
push offset aX02x  +
lea ecx [ebp+var_24] +
push 20h  +
push ecx  +
call sub_41DF80  +
lea eax [ebp+var_24] +
add esp 10h +
lea edx [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41E170  +
sub eax edx +
push eax  +
lea edx [ebp+var_24] +
push edx  +
jmp loc_41E189  +
mov byte ptr [ebp+var_28] cl +
push 1  +
lea eax [ebp+var_28] +
push eax  +
mov ecx edi +
call sub_41DAA0  +
inc esi  +
mov ecx [ebp+var_2C] +
mov edx [ecx] +
mov ebx [edx] +
cmp esi ebx +
jl loc_41E090  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
mov eax ecx +
or ecx 0FFFFFFFFh +
mov [eax+8] ecx +
mov [eax+4] ecx +
xor ecx ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] offset off_446194 +
mov dword ptr [eax+20h] offset unk_454B44 +
mov [eax+10h] ecx +
mov [eax+14h] edx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
mov [eax+24h] ecx +
mov [eax+28h] ecx +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F1C3  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov dword ptr [edi] offset off_446194 +
mov esi [edi+18h] +
mov [ebp+var_4] 1 +
test esi esi +
jz loc_41E251  +
mov edi edi +
mov ecx esi +
mov eax [ecx] +
mov edx [eax] +
mov esi [esi+28h] +
push 1  +
call edx  +
test esi esi +
jnz loc_41E240  +
mov eax [edi+20h] +
mov byte ptr [ebp+var_4] 0 +
cmp eax offset unk_454B44 +
jz loc_41E268  +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [edi] offset off_44614C +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
cmp dword ptr [eax+14h] 0 +
push edi  +
mov edi ecx +
jnz loc_41E2FD  +
mov edx [eax] +
push esi  +
mov ecx eax +
mov eax [edx] +
push 1  +
call eax  +
mov esi edi +
test edi edi +
jz loc_41E2EA  +
mov edx [esi] +
mov eax [edx+10h] +
mov ecx esi +
call eax  +
test eax eax +
jnz loc_41E2BA  +
mov esi [esi+10h] +
test esi esi +
jnz loc_41E2A0  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov edx [esi] +
mov eax [edx+10h] +
mov ecx esi +
call eax  +
test eax eax +
jz loc_41E2EA  +
mov edx [edi] +
mov eax [edx+10h] +
mov ecx edi +
call eax  +
test eax eax +
jnz loc_41E2F2  +
mov edi [edi+10h] +
test edi edi +
jnz loc_41E2C7  +
push 0  +
push 0  +
push 0  +
push 10h  +
mov ecx eax +
call sub_41FD10  +
pop esi  +
xor eax eax +
pop edi  +
pop ebp  +
retn 4  +
mov edx [edi] +
mov eax [edx+10h] +
mov ecx edi +
call eax  +
jmp loc_41E2DB  +
mov [eax+10h] edi +
mov ecx [edi+1Ch] +
mov [eax+24h] ecx +
mov dword ptr [eax+28h] 0 +
mov ecx [edi+1Ch] +
test ecx ecx +
jz loc_41E31F  +
mov [ecx+28h] eax +
mov [edi+1Ch] eax +
pop edi  +
pop ebp  +
retn 4  +
mov [edi+18h] eax +
mov [edi+1Ch] eax +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+14h] 0 +
jnz loc_41E3A6  +
push esi  +
mov esi edi +
test edi edi +
jz loc_41E393  +
mov eax [esi] +
mov edx [eax+10h] +
mov ecx esi +
call edx  +
test eax eax +
jnz loc_41E360  +
mov esi [esi+10h] +
test esi esi +
jnz loc_41E346  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
mov eax [esi] +
mov edx [eax+10h] +
mov ecx esi +
call edx  +
test eax eax +
jz loc_41E393  +
mov esi edi +
nop   +
mov eax [esi] +
mov edx [eax+10h] +
mov ecx esi +
call edx  +
test eax eax +
jnz loc_41E39B  +
mov esi [esi+10h] +
test esi esi +
jnz loc_41E370  +
push 0  +
push 0  +
push 0  +
push 10h  +
mov ecx eax +
call sub_41FD10  +
pop esi  +
xor eax eax +
pop edi  +
pop ebp  +
retn 4  +
mov eax [esi] +
mov edx [eax+10h] +
mov ecx esi +
call edx  +
jmp loc_41E384  +
mov eax [ecx] +
mov edx [eax+3Ch] +
call edx  +
test eax eax +
jnz loc_41E3B6  +
pop edi  +
pop ebp  +
retn 4  +
push eax  +
mov ecx edi +
call sub_41E280  +
pop edi  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
mov esi [edi+18h] +
xor ebx ebx +
cmp esi ebx +
jz loc_41E3F1  +
mov edi edi +
mov ecx esi +
mov eax [ecx] +
mov edx [eax] +
mov esi [esi+28h] +
push 1  +
call edx  +
cmp esi ebx +
jnz loc_41E3E0  +
mov [edi+18h] ebx +
mov [edi+1Ch] ebx +
lea esi [edi+2Ch] +
lea ebx [ebx+0] +
mov ecx [esi+20h] +
cmp ecx esi +
jz loc_41E444  +
cmp ecx ebx +
jz loc_41E444  +
mov eax ecx +
cmp eax esi +
jz loc_41E436  +
cmp eax ecx +
jz loc_41E41E  +
mov eax [eax+20h] +
cmp eax esi +
jnz loc_41E411  +
jmp loc_41E436  +
mov edx [eax+1Ch] +
mov edi [eax+20h] +
mov [edx+20h] edi +
mov edx [eax+20h] +
mov edi [eax+1Ch] +
mov [edx+1Ch] edi +
mov [eax+20h] ebx +
mov [eax+1Ch] ebx +
cmp ecx ebx +
jz loc_41E400  +
mov eax [ecx] +
mov edx [eax] +
push 1  +
call edx  +
jmp loc_41E400  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [ebp+arg_0] +
push eax  +
add ecx 2Ch +
call sub_41DF20  +
test eax eax +
jz loc_41E46D  +
mov eax [eax+18h] +
add eax 8 +
pop ebp  +
retn 4  +
xor eax eax +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F1EB  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ebx [ebp+arg_0] +
lea edi [esi+2Ch] +
push ebx  +
mov ecx edi +
call sub_41DF20  +
test eax eax +
jz loc_41E4E8  +
mov esi [ebp+arg_4] +
mov ecx esi +
lea edi [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_41E4C1  +
sub ecx edi +
push ecx  +
push esi  +
lea ecx [eax+18h] +
call sub_41D9C0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
push 24h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41E50E  +
mov ecx [ebp+arg_4] +
push ecx  +
push ebx  +
mov ecx eax +
call sub_41DFA0  +
jmp loc_41E510  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_41E541  +
mov [eax+20h] edi +
mov edx [edi+1Ch] +
mov [eax+1Ch] edx +
mov ecx [edi+1Ch] +
mov [ecx+20h] eax +
mov [edi+1Ch] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
test esi esi +
jz loc_41E589  +
mov edx [esi] +
mov eax [edx+10h] +
mov ecx esi +
call eax  +
test eax eax +
jnz loc_41E56D  +
mov esi [esi+10h] +
test esi esi +
jnz loc_41E545  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov edx [esi] +
mov eax [edx+10h] +
mov ecx esi +
call eax  +
test eax eax +
jz loc_41E589  +
push 0  +
push 0  +
push 0  +
push 3  +
mov ecx eax +
call sub_41FD10  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov ebx ecx +
test edi edi +
jle loc_41E5C3  +
push offset asc_446164  +
push esi  +
call sub_429703  +
add esp 8 +
dec edi  +
jnz loc_41E5B2  +
mov eax [ebx+20h] +
add eax 8 +
push eax  +
push offset aS_3  +
push esi  +
call sub_429703  +
mov edi [ebx+4Ch] +
lea eax [ebx+2Ch] +
add esp 0Ch +
cmp edi eax +
jz loc_41E623  +
test edi edi +
jz loc_41E623  +
jmp loc_41E5F0  +
push offset unk_445FB8  +
push esi  +
call sub_429703  +
mov eax [ebp+arg_4] +
mov edx [edi] +
mov edx [edx+4] +
add esp 8 +
push eax  +
push esi  +
mov ecx edi +
call edx  +
mov edi [edi+20h] +
mov eax [edi+18h] +
cmp dword ptr [eax] 0 +
jnz loc_41E61F  +
mov ecx [edi+14h] +
cmp dword ptr [ecx] 0 +
jz loc_41E623  +
test edi edi +
jnz loc_41E5F0  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_41E63F  +
push offset asc_4461E4  +
push esi  +
call sub_429703  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
cmp eax [ebx+1Ch] +
jnz loc_41E67B  +
mov ecx eax +
mov edx [ecx] +
mov eax [edx+2Ch] +
call eax  +
test eax eax +
jz loc_41E67B  +
push offset asc_4461E0  +
push esi  +
call sub_429703  +
mov eax [ebp+arg_4] +
mov ecx [ebx+18h] +
mov edx [ecx] +
mov edx [edx+4] +
add esp 8 +
inc eax  +
push eax  +
push esi  +
call edx  +
mov eax [ebx+20h] +
add eax 8 +
push eax  +
jmp loc_41E6F8  +
push offset asc_4461E0  +
push esi  +
call sub_429703  +
mov edi [ebx+18h] +
add esp 8 +
test edi edi +
jz loc_41E6C1  +
mov edx [edi] +
mov eax [edx+2Ch] +
mov ecx edi +
call eax  +
test eax eax +
jnz loc_41E6AB  +
push offset unk_445FB4  +
push esi  +
call sub_429703  +
add esp 8 +
mov eax [ebp+arg_4] +
mov edx [edi] +
inc eax  +
push eax  +
mov eax [edx+4] +
push esi  +
mov ecx edi +
call eax  +
mov edi [edi+28h] +
test edi edi +
jnz loc_41E690  +
push offset unk_445FB4  +
push esi  +
call sub_429703  +
mov edi [ebp+arg_4] +
add esp 8 +
test edi edi +
jle loc_41E6F1  +
jmp loc_41E6E0  +
push offset asc_446164  +
push esi  +
call sub_429703  +
add esp 8 +
dec edi  +
jnz loc_41E6E0  +
mov ecx [ebx+20h] +
add ecx 8 +
push ecx  +
push offset aS_1  +
push esi  +
call sub_429703  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx ecx +
mov ecx [ebx+20h] +
add ecx 8 +
push esi  +
mov eax ecx +
push edi  +
lea esi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_41E723  +
mov edi [ebp+arg_0] +
sub eax esi +
push eax  +
push ecx  +
lea ecx [edi+20h] +
call sub_41D9C0  +
mov eax [ebx+0Ch] +
mov [edi+0Ch] eax +
mov esi [ebx+4Ch] +
lea eax [ebx+2Ch] +
cmp esi eax +
jz loc_41E77C  +
test esi esi +
jz loc_41E77C  +
lea ecx [ecx+0] +
mov ecx [esi+18h] +
mov edx [esi+14h] +
add ecx 8 +
push ecx  +
add edx 8 +
push edx  +
mov ecx edi +
call sub_41E480  +
mov esi [esi+20h] +
mov eax [esi+18h] +
cmp dword ptr [eax] 0 +
jnz loc_41E778  +
mov ecx [esi+14h] +
cmp dword ptr [ecx] 0 +
jz loc_41E77C  +
test esi esi +
jnz loc_41E750  +
mov esi [ebx+18h] +
test esi esi +
jz loc_41E79B  +
mov edx [esi] +
mov eax [edx+3Ch] +
mov ecx esi +
call eax  +
push eax  +
mov ecx edi +
call sub_41E280  +
mov esi [esi+28h] +
test esi esi +
jnz loc_41E783  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F223  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
xor ebx ebx +
or eax 0FFFFFFFFh +
mov [esi+8] eax +
mov [esi+4] eax +
mov [esi+0Ch] ebx +
mov dword ptr [esi+20h] offset unk_454B44 +
mov [esi+10h] ebx +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov [esi+1Ch] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
lea ecx [esi+34h] +
mov dword ptr [esi] offset off_442A44 +
mov [ebp+var_4] ebx +
mov dword ptr [ecx] offset unk_454B44 +
mov [esi+40h] eax +
mov [esi+3Ch] eax +
push ebx  +
push offset unk_441AD0  +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [esi+38h] 4 +
mov [esi+44h] bl +
mov [esi+2Ch] bl +
mov [esi+30h] ebx +
call sub_41D9C0  +
mov [esi+40h] ebx +
mov [esi+3Ch] ebx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F248  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_41E8B4  +
push ebx  +
push ebx  +
push ebx  +
push 2  +
call sub_41FD10  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov esi [edi+18h] +
test esi esi +
jz loc_41E8D1  +
jmp loc_41E8C0  +
mov ecx esi +
mov eax [ecx] +
mov edx [eax] +
mov esi [esi+28h] +
push 1  +
call edx  +
test esi esi +
jnz loc_41E8C0  +
xor ecx ecx +
push 2  +
or eax 0FFFFFFFFh +
push ecx  +
mov [edi+18h] ecx +
mov [edi+1Ch] ecx +
push ebx  +
mov [edi+8] eax +
mov [edi+4] eax +
call sub_428F25  +
push ebx  +
call sub_4299A3  +
push 0  +
push 0  +
push ebx  +
mov edi eax +
call sub_428F25  +
add esp 1Ch +
test edi edi +
jg loc_41E92A  +
mov ecx [ebp+var_14] +
push 0  +
push 0  +
push 0  +
push 0Dh  +
call sub_41FD10  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov [ebp+var_10] offset unk_454B44 +
push edi  +
lea ecx [ebp+var_10] +
mov [ebp+var_4] 0 +
call sub_41D900  +
lea eax [edi+1] +
push eax  +
call sub_425CDC  +
push ebx  +
mov esi eax +
push 1  +
push edi  +
push esi  +
mov [ebp+arg_0] esi +
mov byte ptr [esi] 0 +
call sub_4291EB  +
add esp 14h +
cmp eax 1 +
jz loc_41E9AD  +
push esi  +
call sub_42520B  +
mov ecx [ebp+var_14] +
add esp 4 +
push 0  +
push 0  +
push 0  +
push 2  +
call sub_41FD10  +
mov eax [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_41E997  +
push eax  +
call sub_42520B  +
add esp 4 +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ebx [ebp+arg_0] +
mov byte ptr [ebx+edi] 0 +
cmp byte ptr [ebx] 0 +
mov eax esi +
jz loc_41EA17  +
jmp loc_41E9C0  +
mov cl [esi] +
cmp cl 0Ah +
jnz loc_41E9DB  +
mov ecx esi +
sub ecx eax +
inc ecx  +
push ecx  +
push eax  +
lea ecx [ebp+var_10] +
call sub_41DAA0  +
inc esi  +
mov eax esi +
jmp loc_41EA12  +
cmp cl 0Dh +
jnz loc_41EA11  +
mov ecx esi +
sub ecx eax +
test ecx ecx +
jle loc_41E9F2  +
push ecx  +
push eax  +
lea ecx [ebp+var_10] +
call sub_41DAA0  +
push 1  +
lea edx [ebp+arg_0] +
push edx  +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+arg_0] 0Ah +
call sub_41DAA0  +
cmp byte ptr [esi+1] 0Ah +
jnz loc_41E9D6  +
add esi 2 +
mov eax esi +
jmp loc_41EA12  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_41E9C0  +
sub esi eax +
jz loc_41EA25  +
push esi  +
push eax  +
lea ecx [ebp+var_10] +
call sub_41DAA0  +
push ebx  +
call sub_42520B  +
mov ecx [ebp+arg_4] +
mov esi [ebp+var_14] +
mov edx [ebp+var_10] +
mov eax [esi] +
mov eax [eax+8] +
add esp 4 +
push ecx  +
push 0  +
add edx 8 +
push edx  +
mov ecx esi +
call eax  +
cmp byte ptr [esi+2Ch] 0 +
mov eax [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
jnz loc_41E987  +
cmp eax offset unk_454B44 +
jz loc_41EA6B  +
push eax  +
call sub_42520B  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push edi  +
mov edi ecx +
mov ecx [edi+20h] +
add ecx 8 +
mov eax ecx +
lea esi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_41EAA2  +
sub eax esi +
mov esi [ebp+arg_0] +
push eax  +
push ecx  +
lea ecx [esi+20h] +
call sub_41D9C0  +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov cl [edi+2Ch] +
mov [esi+2Ch] cl +
mov edx [edi+30h] +
mov [esi+30h] edx +
mov eax [edi+34h] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
lea ecx [esi+34h] +
call sub_41D9C0  +
mov edx [edi+38h] +
mov [esi+38h] edx +
mov eax [edi+3Ch] +
mov [esi+3Ch] eax +
mov ecx [edi+40h] +
mov [esi+40h] ecx +
mov dl [edi+44h] +
mov [esi+44h] dl +
mov edi [edi+18h] +
test edi edi +
jz loc_41EB18  +
jmp loc_41EB00  +
mov eax [edi] +
mov edx [eax+3Ch] +
mov ecx edi +
call edx  +
push eax  +
mov ecx esi +
call sub_41E280  +
mov edi [edi+28h] +
test edi edi +
jnz loc_41EB00  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F27B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 48h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41EB6A  +
mov ecx eax +
call sub_41E7B0  +
mov esi eax +
jmp loc_41EB6C  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jnz loc_41EB8A  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push esi  +
mov ecx edi +
call sub_41EA90  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F2B0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] offset unk_454B44 +
mov [ebp+var_4] 0 +
mov [ebp+var_10] offset unk_454B44 +
lea eax [ebp+var_14] +
push eax  +
lea ecx [esi+14h] +
push ecx  +
mov byte ptr [ebp+var_4] 1 +
call sub_41E060  +
lea edx [ebp+var_10] +
push edx  +
add esi 18h +
push esi  +
call sub_41E060  +
mov esi [esi] +
add esp 10h +
cmp dword ptr [esi] 0 +
jbe loc_41EC3C  +
mov cl [esi+8] +
lea eax [esi+8] +
test cl cl +
jz loc_41EC3C  +
nop   +
cmp cl 22h +
jz loc_41EC2F  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_41EC20  +
jmp loc_41EC3C  +
sub eax esi +
sub eax 8 +
cmp eax ds:dword_446144 +
jnz loc_41ECA3  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_41EC5F  +
mov ecx [ebp+var_10] +
mov edx [ebp+var_14] +
add ecx 8 +
push ecx  +
add edx 8 +
push edx  +
push offset aSS  +
push eax  +
call sub_429703  +
add esp 10h +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_41ED0B  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
mov ecx esi +
call sub_41DAA0  +
push 2  +
push offset asc_446200  +
mov ecx esi +
call sub_41DAA0  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
mov ecx esi +
call sub_41DAA0  +
push 1  +
push offset asc_4461FC  +
jmp loc_41ED04  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_41ECC6  +
mov ecx [ebp+var_10] +
mov edx [ebp+var_14] +
add ecx 8 +
push ecx  +
add edx 8 +
push edx  +
push offset aSS_0  +
push eax  +
call sub_429703  +
add esp 10h +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_41ED0B  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
mov ecx esi +
call sub_41DAA0  +
push 2  +
push offset asc_4461F0  +
mov ecx esi +
call sub_41DAA0  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
mov ecx esi +
call sub_41DAA0  +
push 1  +
push offset asc_4461EC  +
mov ecx esi +
call sub_41DAA0  +
mov eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 0 +
cmp eax offset unk_454B44 +
jz loc_41ED22  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_14] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_41ED3C  +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
retn   +
***
push 0FFFFFFFFh  +
mov edx [ebp+arg_4] +
mov eax [ecx] +
mov eax [eax+44h] +
push 0  +
push edx  +
mov edx [ebp+arg_0] +
push edx  +
call eax  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_41EE7D  +
push offset a?xml  +
push ebx  +
call sub_429703  +
add esp 8 +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_41EE92  +
push 6  +
push offset a?xml  +
mov ecx esi +
call sub_41DAA0  +
mov eax [edi+2Ch] +
cmp dword ptr [eax] 0 +
jz loc_41EEE1  +
test ebx ebx +
jz loc_41EEB0  +
add eax 8 +
push eax  +
push offset aVersionS  +
push ebx  +
call sub_429703  +
add esp 0Ch +
test esi esi +
jz loc_41EEE1  +
push 9  +
push offset aVersion  +
mov ecx esi +
call sub_41DAA0  +
mov eax [edi+2Ch] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
mov ecx esi +
call sub_41DAA0  +
push 2  +
push offset asc_446300  +
mov ecx esi +
call sub_41DAA0  +
mov eax [edi+30h] +
cmp dword ptr [eax] 0 +
jz loc_41EF30  +
test ebx ebx +
jz loc_41EEFF  +
add eax 8 +
push eax  +
push offset aEncodingS  +
push ebx  +
call sub_429703  +
add esp 0Ch +
test esi esi +
jz loc_41EF30  +
push 0Ah  +
push offset aEncoding  +
mov ecx esi +
call sub_41DAA0  +
mov eax [edi+30h] +
mov edx [eax] +
push edx  +
add eax 8 +
push eax  +
mov ecx esi +
call sub_41DAA0  +
push 2  +
push offset asc_446300  +
mov ecx esi +
call sub_41DAA0  +
mov eax [edi+34h] +
cmp dword ptr [eax] 0 +
jz loc_41EF7F  +
test ebx ebx +
jz loc_41EF4E  +
add eax 8 +
push eax  +
push offset aStandaloneS  +
push ebx  +
call sub_429703  +
add esp 0Ch +
test esi esi +
jz loc_41EF7F  +
push 0Ch  +
push offset aStandalone  +
mov ecx esi +
call sub_41DAA0  +
mov edi [edi+34h] +
mov eax [edi] +
push eax  +
add edi 8 +
push edi  +
mov ecx esi +
call sub_41DAA0  +
push 2  +
push offset asc_446300  +
mov ecx esi +
call sub_41DAA0  +
test ebx ebx +
jz loc_41EF91  +
push offset unk_4462BC  +
push ebx  +
call sub_429703  +
add esp 8 +
test esi esi +
jz loc_41EFA3  +
push 2  +
push offset unk_4462BC  +
mov ecx esi +
call sub_41DAA0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push edi  +
mov edi ecx +
mov ecx [edi+20h] +
add ecx 8 +
mov eax ecx +
lea esi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_41EFC2  +
sub eax esi +
mov esi [ebp+arg_0] +
push eax  +
push ecx  +
lea ecx [esi+20h] +
call sub_41D9C0  +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+2Ch] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
lea ecx [esi+2Ch] +
call sub_41D9C0  +
mov eax [edi+30h] +
mov edx [eax] +
push edx  +
add eax 8 +
push eax  +
lea ecx [esi+30h] +
call sub_41D9C0  +
mov edi [edi+34h] +
mov eax [edi] +
push eax  +
add edi 8 +
push edi  +
lea ecx [esi+34h] +
call sub_41D9C0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax ebx +
push edi  +
mov dword ptr [esi] 0 +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_41F0A6  +
sub eax edx +
mov edi eax +
jz loc_41F0E4  +
xor ecx ecx +
lea eax [edi+0Fh] +
shr eax 2 +
mov edx 4 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_425CDC  +
mov [esi] eax +
mov [eax] edi +
mov eax [esi] +
mov byte ptr [eax+edi+8] 0 +
mov ecx [esi] +
add esp 4 +
mov [ecx+4] edi +
jmp loc_41F0EA  +
mov dword ptr [esi] offset unk_454B44 +
mov eax [esi] +
mov edx [eax] +
push edx  +
add eax 8 +
push ebx  +
push eax  +
call loc_425490  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
push 0  +
push eax  +
push edx  +
call sub_41EBB0  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43F2E3  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [esi+18h] +
mov [ebp+var_4] 1 +
cmp eax offset unk_454B44 +
jz loc_41F173  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [esi+14h] +
mov byte ptr [ebp+var_4] 0 +
cmp eax offset unk_454B44 +
jz loc_41F18A  +
push eax  +
call sub_42520B  +
add esp 4 +
test [ebp+arg_0] 1 +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_44614C +
jz loc_41F1A6  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_446214 +
call sub_41E200  +
test [ebp+arg_0] 1 +
jz loc_41F1E0  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
or ecx 0FFFFFFFFh +
mov [eax+8] ecx +
mov [eax+4] ecx +
xor ecx ecx +
mov edx offset unk_454B44 +
mov [eax+0Ch] ecx +
mov [eax+20h] edx +
mov [eax+10h] ecx +
mov dword ptr [eax+14h] 5 +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
mov [eax+24h] ecx +
mov [eax+28h] ecx +
mov dword ptr [eax] offset off_446274 +
mov [eax+2Ch] edx +
mov [eax+30h] edx +
mov [eax+34h] edx +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F31E  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_446274 +
mov eax [esi+34h] +
mov [ebp+var_4] 2 +
cmp eax offset unk_454B44 +
jz loc_41F279  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [esi+30h] +
mov byte ptr [ebp+var_4] 1 +
cmp eax offset unk_454B44 +
jz loc_41F290  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [esi+2Ch] +
mov byte ptr [ebp+var_4] 0 +
cmp eax offset unk_454B44 +
jz loc_41F2A7  +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx esi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41E200  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_41F230  +
test [ebp+arg_0] 1 +
jz loc_41F2EA  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_446354 +
call sub_41E200  +
test [ebp+arg_0] 1 +
jz loc_41F320  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_41E200  +
test [ebp+arg_0] 1 +
jz loc_41F34A  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F353  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
or ecx 0FFFFFFFFh +
mov [esi+8] ecx +
mov [esi+4] ecx +
xor edx edx +
mov [esi+0Ch] edx +
mov dword ptr [esi+20h] offset unk_454B44 +
mov ebx 1 +
mov [esi+10h] edx +
mov [esi+14h] ebx +
mov [esi+24h] edx +
mov [esi+28h] edx +
lea eax [esi+2Ch] +
mov dword ptr [esi] offset off_44639C +
mov [eax+8] ecx +
mov [eax+4] ecx +
mov ecx offset unk_454B44 +
mov [eax+0Ch] edx +
mov dword ptr [eax] offset off_446178 +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov [ebp+var_4] edx +
mov [eax+10h] edx +
mov [eax+20h] eax +
mov [eax+1Ch] eax +
mov ecx [ebp+arg_0] +
mov eax ecx +
mov byte ptr [ebp+var_4] bl +
lea ebx [eax+1] +
mov [esi+1Ch] edx +
mov [esi+18h] edx +
mov [ebp+arg_0] ebx +
mov bl [eax] +
inc eax  +
cmp bl dl +
jnz loc_41F3F4  +
sub eax [ebp+arg_0] +
push eax  +
push ecx  +
lea ecx [esi+20h] +
call sub_41D9C0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F396  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_44639C +
mov [ebp+var_4] 1 +
call sub_41E3D0  +
lea edi [esi+2Ch] +
mov [ebp+var_14] edi +
mov eax [edi+18h] +
mov byte ptr [ebp+var_4] 3 +
cmp eax offset unk_454B44 +
jz loc_41F47B  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [edi+14h] +
mov byte ptr [ebp+var_4] 2 +
cmp eax offset unk_454B44 +
jz loc_41F492  +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx esi +
mov dword ptr [edi] offset off_44614C +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41E200  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F27B  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 50h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41F511  +
mov edx [edi+20h] +
add edx 8 +
push edx  +
mov ecx eax +
call sub_41F360  +
mov esi eax +
jmp loc_41F513  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jnz loc_41F531  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push esi  +
mov ecx edi +
call sub_41E710  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edi  +
push 2Ch  +
mov edi ecx +
call sub_425CDC  +
mov esi eax +
xor eax eax +
add esp 4 +
cmp esi eax +
jz loc_41F5D0  +
or ecx 0FFFFFFFFh +
mov [esi+8] ecx +
mov [esi+4] ecx +
mov [esi+0Ch] eax +
mov dword ptr [esi+20h] offset unk_454B44 +
lea ecx [esi+20h] +
mov [esi+10h] eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+24h] eax +
mov [esi+28h] eax +
mov dword ptr [esi+14h] 2 +
mov dword ptr [esi] offset off_446214 +
mov edx [edi+20h] +
add edx 8 +
mov eax edx +
push ebx  +
lea ebx [eax+1] +
mov [ebp+var_4] ebx +
jmp loc_41F5B0  +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_41F5B0  +
sub eax [ebp+var_4] +
push eax  +
push edx  +
call sub_41D9C0  +
mov eax [edi+0Ch] +
pop ebx  +
mov [esi+0Ch] eax +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F3CB  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 30h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41F630  +
push offset unk_441AD0  +
mov ecx eax +
call sub_40FAD0  +
mov esi eax +
jmp loc_41F632  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jnz loc_41F651  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [edi+20h] +
add ecx 8 +
mov eax ecx +
lea ebx [eax+1] +
lea esp [esp+0] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_41F660  +
sub eax ebx +
push eax  +
push ecx  +
lea ecx [esi+20h] +
call sub_41D9C0  +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov cl [edi+2Ch] +
mov [esi+2Ch] cl +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 38h  +
mov edi ecx +
call sub_425CDC  +
mov esi eax +
xor eax eax +
add esp 4 +
cmp esi eax +
jz loc_41F6FC  +
or ecx 0FFFFFFFFh +
mov [esi+8] ecx +
mov [esi+4] ecx +
mov ecx offset unk_454B44 +
mov [esi+0Ch] eax +
mov [esi+20h] ecx +
mov [esi+10h] eax +
mov dword ptr [esi+14h] 5 +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+24h] eax +
mov [esi+28h] eax +
mov dword ptr [esi] offset off_446274 +
mov [esi+2Ch] ecx +
mov [esi+30h] ecx +
mov [esi+34h] ecx +
push esi  +
mov ecx edi +
call sub_41EFB0  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push ecx  +
push esi  +
push edi  +
push 2Ch  +
mov edi ecx +
call sub_425CDC  +
mov esi eax +
xor eax eax +
add esp 4 +
cmp esi eax +
jz loc_41F790  +
or ecx 0FFFFFFFFh +
mov [esi+8] ecx +
mov [esi+4] ecx +
mov [esi+0Ch] eax +
mov dword ptr [esi+20h] offset unk_454B44 +
lea ecx [esi+20h] +
mov [esi+10h] eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+24h] eax +
mov [esi+28h] eax +
mov dword ptr [esi+14h] 3 +
mov dword ptr [esi] offset off_446354 +
mov edx [edi+20h] +
add edx 8 +
mov eax edx +
push ebx  +
lea ebx [eax+1] +
mov [ebp+var_4] ebx +
jmp loc_41F770  +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_41F770  +
sub eax [ebp+var_4] +
push eax  +
push edx  +
call sub_41D9C0  +
mov eax [edi+0Ch] +
pop ebx  +
mov [esi+0Ch] eax +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_41F420  +
test [ebp+arg_0] 1 +
jz loc_41F7BA  +
push esi  +
call sub_42520B  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov bl [ebp+arg_0] +
movzx eax bl +
push eax  +
call sub_427E50  +
add esp 4 +
test eax eax +
jnz loc_41F7F4  +
cmp bl 0Ah +
jz loc_41F7F4  +
cmp bl 0Dh +
jz loc_41F7F4  +
pop ebx  +
pop ebp  +
retn   +
mov eax 1 +
pop ebx  +
pop ebp  +
retn   +
***
sub esp 20h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_20] edx +
mov [ebp+var_1C] edx +
mov [ebp+var_18] 0C0h +
mov [ebp+var_14] 0E0h +
mov [ebp+var_10] 0F0h +
mov [ebp+var_C] 0F8h +
mov [ebp+var_8] 0FCh +
cmp ecx 80h +
jnb loc_41F855  +
mov dword ptr [esi] 1 +
jmp loc_41F883  +
cmp ecx 800h +
jnb loc_41F865  +
mov dword ptr [esi] 2 +
jmp loc_41F883  +
cmp ecx 10000h +
jnb loc_41F875  +
mov dword ptr [esi] 3 +
jmp loc_41F883  +
cmp ecx 200000h +
jnb loc_41F8D8  +
mov dword ptr [esi] 4 +
mov edx [esi] +
add eax edx +
dec edx  +
cmp edx 3 +
ja loc_41F8DA  +
jmp ds:off_41F8EC[edx*4]  +
mov dl cl +
and dl 3Fh +
dec eax  +
or dl 80h +
mov [eax] dl +
shr ecx 6 +
mov dl cl +
and dl 3Fh +
dec eax  +
or dl 80h +
mov [eax] dl +
shr ecx 6 +
mov dl cl +
and dl 3Fh +
dec eax  +
or dl 80h +
mov [eax] dl +
shr ecx 6 +
mov edx [esi] +
mov dl byte ptr [ebp+edx*4+var_20] +
or dl cl +
mov [eax-1] dl +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov [esi] edx +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov al [ebp+arg_0] +
cmp al 7Fh +
jnb loc_41F918  +
movzx eax al +
push eax  +
call sub_427BCC  +
add esp 4 +
pop ebp  +
retn   +
mov eax 1 +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+0Ch] 1 +
push ebx  +
jl loc_41F9FA  +
mov eax [ecx+4] +
push esi  +
mov esi [ecx+8] +
push edi  +
mov edi [ecx] +
cmp esi [ebp+arg_0] +
jnb loc_41F9F0  +
movzx edx byte ptr [esi] +
cmp edx 0EFh +
ja loc_41F9CB  +
movzx ebx ds:byte_41FA18[edx] +
jmp ds:off_41FA00[ebx*4]  +
inc esi  +
inc edi  +
xor eax eax +
cmp byte ptr [esi] 0Ah +
jnz loc_41F9E7  +
inc esi  +
jmp loc_41F9E7  +
inc esi  +
inc edi  +
xor eax eax +
cmp byte ptr [esi] 0Dh +
jnz loc_41F9E7  +
inc esi  +
jmp loc_41F9E7  +
mov ebx [ecx+0Ch] +
cdq   +
idiv  ebx +
inc esi  +
inc eax  +
imul eax ebx +
jmp loc_41F9E7  +
cmp [ebp+arg_4] 1 +
jnz loc_41F9E5  +
mov bl [esi+1] +
test bl bl +
jz loc_41F9E7  +
mov dl [esi+2] +
test dl dl +
jz loc_41F9E7  +
cmp bl 0BBh +
jnz loc_41F9A9  +
cmp dl 0BFh +
jnz loc_41F9A9  +
add esi 3 +
jmp loc_41F9E7  +
cmp bl 0BFh +
jnz loc_41F9C6  +
cmp dl 0BEh +
jnz loc_41F9B8  +
add esi 3 +
jmp loc_41F9E7  +
cmp bl 0BFh +
jnz loc_41F9C6  +
cmp dl bl +
jnz loc_41F9C6  +
add esi 3 +
jmp loc_41F9E7  +
add esi 3 +
jmp loc_41F9E6  +
cmp [ebp+arg_4] 1 +
jnz loc_41F9E5  +
mov edx ds:dword_446408[edx*4] +
test edx edx +
jnz loc_41F9E1  +
mov edx 1 +
add esi edx +
jmp loc_41F9E6  +
inc esi  +
inc eax  +
cmp esi [ebp+arg_0] +
jb loc_41F941  +
mov [ecx] edi +
mov [ecx+4] eax +
mov [ecx+8] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41FBC2  +
mov bl [esi] +
test bl bl +
jz loc_41FBC2  +
cmp [ebp+arg_4] 1 +
jnz loc_41FB95  +
cmp bl 0EFh +
jnz loc_41FB64  +
mov al [esi+1] +
cmp al 0BBh +
jnz loc_41FB47  +
cmp byte ptr [esi+2] 0BFh +
jnz loc_41FB47  +
add esi 3 +
jmp loc_41FB89  +
cmp al 0BFh +
jnz loc_41FB64  +
cmp byte ptr [esi+2] 0BEh +
jnz loc_41FB56  +
add esi 3 +
jmp loc_41FB89  +
cmp al 0BFh +
jnz loc_41FB64  +
cmp [esi+2] al +
jnz loc_41FB64  +
add esi 3 +
jmp loc_41FB89  +
movzx eax bl +
push eax  +
call sub_427E50  +
add esp 4 +
test eax eax +
jnz loc_41FB88  +
cmp bl 0Ah +
jz loc_41FB88  +
cmp bl 0Dh +
jz loc_41FB88  +
mov al [esi] +
cmp al 0Ah +
jz loc_41FB88  +
cmp al 0Dh +
jnz loc_41FB8F  +
inc esi  +
mov bl [esi] +
test bl bl +
jnz loc_41FB30  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov bl [esi] +
test bl bl +
jz loc_41FBB5  +
movzx ecx bl +
push ecx  +
call sub_427E50  +
add esp 4 +
test eax eax +
jnz loc_41FBBF  +
cmp bl 0Ah +
jz loc_41FBBF  +
cmp bl 0Dh +
jz loc_41FBBF  +
mov al [esi] +
cmp al 0Ah +
jz loc_41FBBF  +
cmp al 0Dh +
jnz loc_41FB8F  +
inc esi  +
jmp loc_41FB95  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push 0  +
push offset unk_441AD0  +
mov ecx ebx +
call sub_41D9C0  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41FC57  +
mov al [esi] +
test al al +
jz loc_41FC57  +
cmp al 7Fh +
jnb loc_41FC0C  +
movzx eax al +
push eax  +
call sub_427BCC  +
add esp 4 +
test eax eax +
jnz loc_41FC0C  +
cmp byte ptr [esi] 5Fh +
jnz loc_41FC57  +
push edi  +
mov edi esi +
nop   +
mov al [esi] +
test al al +
jz loc_41FC3F  +
cmp al 7Fh +
jnb loc_41FC3C  +
movzx ecx al +
push ecx  +
call sub_427ED4  +
add esp 4 +
test eax eax +
jnz loc_41FC3C  +
mov al [esi] +
cmp al 5Fh +
jz loc_41FC3C  +
cmp al 2Dh +
jz loc_41FC3C  +
cmp al 2Eh +
jz loc_41FC3C  +
cmp al 3Ah +
jnz loc_41FC3F  +
inc esi  +
jnz loc_41FC10  +
mov eax esi +
sub eax edi +
test eax eax +
jle loc_41FC50  +
push eax  +
push edi  +
mov ecx ebx +
call sub_41D9C0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_41FCFD  +
cmp byte ptr [eax] 0 +
jz loc_41FCFD  +
cmp [ebp+arg_8] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_41FCD8  +
mov esi [ebp+arg_4] +
mov ebx eax +
sub ebx esi +
cmp byte ptr [esi] 0 +
jz loc_41FCD1  +
cmp [ebp+arg_C] 1 +
movsx eax byte ptr [ebx+esi] +
jnz loc_41FC9D  +
cmp eax 80h +
jge loc_41FCA6  +
push eax  +
call sub_429B1D  +
add esp 4 +
cmp [ebp+arg_C] 1 +
mov edi eax +
movsx eax byte ptr [esi] +
jnz loc_41FCB8  +
cmp eax 80h +
jge loc_41FCC1  +
push eax  +
call sub_429B1D  +
add esp 4 +
cmp edi eax +
jnz loc_41FCCC  +
inc esi  +
cmp byte ptr [ebx+esi] 0 +
jnz loc_41FC87  +
cmp byte ptr [esi] 0 +
jnz loc_41FCF6  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn   +
mov edx [ebp+arg_4] +
jmp loc_41FCE0  +
mov cl [edx] +
test cl cl +
jz loc_41FCD1  +
cmp [eax] cl +
jnz loc_41FCF1  +
inc eax  +
inc edx  +
cmp byte ptr [eax] 0 +
jnz loc_41FCE0  +
cmp byte ptr [edx] 0 +
jmp loc_41FCCF  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn   +
xor al al +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
cmp byte ptr [esi+2Ch] 0 +
jnz loc_41FD73  +
mov eax [ebp+arg_0] +
mov [esi+30h] eax +
mov byte ptr [esi+2Ch] 1 +
mov ecx off_44FFF8[eax*4] +
mov eax ecx +
push edi  +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_41FD33  +
sub eax edi +
push eax  +
push ecx  +
lea ecx [esi+34h] +
call sub_41D9C0  +
or eax 0FFFFFFFFh +
mov [esi+40h] eax +
mov [esi+3Ch] eax +
mov eax [ebp+arg_4] +
pop edi  +
test eax eax +
jz loc_41FD73  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_41FD73  +
mov edx [ebp+arg_C] +
push edx  +
push eax  +
call sub_41F920  +
mov eax [ecx] +
mov [esi+3Ch] eax +
mov ecx [ecx+4] +
mov [esi+40h] ecx +
pop esi  +
pop ebp  +
retn 10h  +
***
push ebx  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call sub_41DC60  +
push 0  +
lea ecx [edi+20h] +
push offset unk_441AD0  +
mov [ebp+var_4] eax +
mov [ebp+var_8] ecx +
call sub_41D9C0  +
mov ebx [ebp+arg_8] +
mov eax [ebp+arg_0] +
push ebx  +
push eax  +
call sub_41FB10  +
mov ecx [ebp+arg_4] +
add esp 8 +
mov esi eax +
test ecx ecx +
jz loc_41FED0  +
push ebx  +
push esi  +
call sub_41F920  +
mov edx [ecx] +
mov [edi+4] edx +
mov eax [ecx+4] +
mov [edi+8] eax +
mov eax offset asc_446344 +
test esi esi +
jz loc_41FEF9  +
cmp byte ptr [esi] 0 +
jz loc_41FEF9  +
mov edi esi +
sub edi eax +
mov dl [eax] +
test dl dl +
jz loc_41FF11  +
cmp [edi+eax] dl +
jnz loc_41FEF4  +
inc eax  +
cmp byte ptr [edi+eax] 0 +
jnz loc_41FEE2  +
cmp byte ptr [eax] 0 +
jz loc_41FF11  +
push ebx  +
push ecx  +
mov ecx [ebp+var_4] +
push esi  +
push 0Bh  +
call sub_41FD10  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ebx [ebp+var_8] +
push 0  +
push offset unk_441AD0  +
mov ecx ebx +
call sub_41D9C0  +
add esi 4 +
jz loc_41FF73  +
mov edi esi +
sub edi offset asc_446340 +
nop   +
cmp byte ptr [esi] 0 +
jz loc_41FF70  +
mov eax offset asc_446340 +
lea ebx [ebx+0] +
mov cl [eax] +
test cl cl +
jz loc_41FF70  +
cmp [edi+eax] cl +
jnz loc_41FF52  +
inc eax  +
cmp byte ptr [edi+eax] 0 +
jnz loc_41FF40  +
cmp byte ptr [eax] 0 +
jz loc_41FF70  +
push 1  +
push esi  +
mov ecx ebx +
call sub_41DAA0  +
inc edi  +
inc esi  +
jnz loc_41FF30  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
add esi 3 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_43F462  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] ebx +
mov edi [ebp+arg_4] +
mov eax [ebp+arg_0] +
push edi  +
push eax  +
call sub_41FB10  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_420452  +
mov al [esi] +
test al al +
jz loc_420452  +
cmp al 3Ch +
jnz loc_420452  +
mov ecx ebx +
call sub_41DC60  +
push edi  +
push esi  +
mov [ebp+arg_4] eax +
call sub_41FB10  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_420452  +
cmp byte ptr [esi] 0 +
jz loc_420452  +
push edi  +
push 1  +
push offset a?xml_0  +
push esi  +
call sub_41FC60  +
add esp 10h +
test al al +
jz loc_42025B  +
push 38h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4203CC  +
mov ecx eax +
call sub_41F1F0  +
jmp loc_4203CE  +
mov bl [esi] +
mov eax offset asc_446344 +
test bl bl +
jz loc_4202BC  +
mov edx esi +
sub edx eax +
lea ebx [ebx+0] +
mov cl [eax] +
test cl cl +
jz loc_420287  +
cmp [edx+eax] cl +
jnz loc_420282  +
inc eax  +
cmp byte ptr [edx+eax] 0 +
jnz loc_420270  +
cmp byte ptr [eax] 0 +
jnz loc_4202BC  +
push 2Ch  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] 1 +
test esi esi +
jz loc_4202B5  +
push 2  +
mov ecx esi +
call sub_41E1C0  +
mov dword ptr [esi] offset off_446214 +
jmp loc_4203D0  +
xor esi esi +
jmp loc_4203D0  +
mov eax offset aCdata +
test bl bl +
jz loc_42031F  +
mov edx esi +
sub edx eax +
lea esp [esp+0] +
mov cl [eax] +
test cl cl +
jz loc_4202E7  +
cmp [edx+eax] cl +
jnz loc_4202E2  +
inc eax  +
cmp byte ptr [edx+eax] 0 +
jnz loc_4202D0  +
cmp byte ptr [eax] 0 +
jnz loc_42031F  +
push 30h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 2 +
test eax eax +
jz loc_420314  +
push offset unk_441AD0  +
mov ecx eax +
call sub_40FAD0  +
mov byte ptr [eax+2Ch] 1 +
jmp loc_4203CE  +
xor eax eax +
mov byte ptr [eax+2Ch] 1 +
jmp loc_4203CE  +
mov eax offset unk_446808 +
test bl bl +
jz loc_420376  +
mov edx esi +
sub edx eax +
lea esp [esp+0] +
mov cl [eax] +
test cl cl +
jz loc_420347  +
cmp [edx+eax] cl +
jnz loc_420342  +
inc eax  +
cmp byte ptr [edx+eax] 0 +
jnz loc_420330  +
cmp byte ptr [eax] 0 +
jnz loc_420376  +
push 2Ch  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] 3 +
test esi esi +
jz loc_4202B5  +
push 3  +
mov ecx esi +
call sub_41E1C0  +
mov dword ptr [esi] offset off_446354 +
jmp loc_4203D0  +
movzx ecx byte ptr [esi+1] +
push edi  +
push ecx  +
call sub_41F900  +
add esp 8 +
test eax eax +
jnz loc_4203A6  +
cmp byte ptr [esi+1] 5Fh +
jz loc_4203A6  +
push 2Ch  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] 5 +
jmp loc_42035D  +
push 50h  +
call sub_425CDC  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 4 +
test eax eax +
jz loc_4203CC  +
push offset unk_441AD0  +
mov ecx eax +
call sub_41F360  +
jmp loc_4203CE  +
xor eax eax +
mov esi eax +
or ebx 0FFFFFFFFh +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_4203F6  +
mov edx [ebp+var_10] +
mov [esi+10h] edx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_42043C  +
cmp byte ptr [eax+2Ch] 0 +
jnz loc_42043C  +
mov byte ptr [eax+2Ch] 1 +
mov dword ptr [eax+30h] 3 +
mov edx off_450004 +
mov eax edx +
lea edi [eax+1] +
lea esp [esp+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_420420  +
sub eax edi +
mov edi [ebp+arg_4] +
push eax  +
push edx  +
lea ecx [edi+34h] +
call sub_41D9C0  +
mov [edi+40h] ebx +
mov [edi+3Ch] ebx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43F493  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
call sub_41DC60  +
mov ebx [ebp+arg_8] +
mov esi eax +
mov eax [ebp+arg_0] +
push ebx  +
push eax  +
mov [ebp+var_14] esi +
mov [ebp+arg_0] eax +
call sub_41FB10  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_42060D  +
mov al [edi] +
test al al +
jz loc_42064C  +
cmp al 3Ch +
jz loc_420599  +
push 30h  +
call sub_425CDC  +
mov esi eax +
add esp 4 +
mov [ebp+var_18] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_420516  +
push 4  +
mov ecx esi +
call sub_41E1C0  +
push 0  +
push offset unk_441AD0  +
lea ecx [esi+20h] +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [esi] offset off_443314 +
call sub_41D9C0  +
mov byte ptr [esi+2Ch] 0 +
jmp loc_420518  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_420662  +
cmp byte_44FF24 0 +
mov ecx [ebp+arg_4] +
mov eax [esi] +
push ebx  +
push ecx  +
mov ecx esi +
jz loc_420541  +
mov edx [eax+8] +
push edi  +
call edx  +
jmp loc_42054A  +
mov edx [ebp+arg_0] +
mov eax [eax+8] +
push edx  +
call eax  +
mov [ebp+arg_0] eax +
mov eax [esi+20h] +
xor edi edi +
cmp [eax] edi +
jbe loc_42057F  +
mov bl [eax+edi+8] +
movzx ecx bl +
push ecx  +
call sub_427E50  +
add esp 4 +
test eax eax +
jnz loc_420574  +
cmp bl 0Ah +
jz loc_420574  +
cmp bl 0Dh +
jnz loc_42058B  +
mov eax [esi+20h] +
inc edi  +
cmp edi [eax] +
jb loc_420556  +
mov ebx [ebp+arg_8] +
mov edx [esi] +
mov eax [edx] +
push 1  +
mov ecx esi +
call eax  +
jmp loc_4205F0  +
mov ecx [ebp+var_10] +
push esi  +
call sub_41E280  +
mov ebx [ebp+arg_8] +
jmp loc_4205F0  +
mov eax offset asc_44632C +
mov ecx edi +
sub ecx eax +
mov dl [eax] +
test dl dl +
jz loc_42064C  +
cmp [ecx+eax] dl +
jnz loc_4205B8  +
inc eax  +
cmp byte ptr [ecx+eax] 0 +
jnz loc_4205A2  +
cmp byte ptr [eax] 0 +
jz loc_42064C  +
mov ecx [ebp+var_10] +
push ebx  +
push edi  +
call sub_4201A0  +
mov esi eax +
test esi esi +
jz loc_4206A1  +
mov eax [ebp+arg_4] +
mov edx [esi] +
mov edx [edx+8] +
push ebx  +
push eax  +
push edi  +
mov ecx esi +
call edx  +
mov ecx [ebp+var_10] +
push esi  +
mov [ebp+arg_0] eax +
call sub_41E280  +
mov eax [ebp+arg_0] +
push ebx  +
push eax  +
mov [ebp+arg_0] eax +
call sub_41FB10  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_4204C2  +
mov esi [ebp+var_14] +
test esi esi +
jz loc_42064C  +
cmp byte ptr [esi+2Ch] 0 +
jnz loc_42064C  +
mov byte ptr [esi+2Ch] 1 +
mov dword ptr [esi+30h] 6 +
mov edx off_450010 +
mov eax edx +
lea ebx [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_420630  +
sub eax ebx +
push eax  +
push edx  +
lea ecx [esi+34h] +
call sub_41D9C0  +
or eax 0FFFFFFFFh +
mov [esi+40h] eax +
mov [esi+3Ch] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov esi [ebp+var_14] +
test esi esi +
jz loc_4206A1  +
cmp byte ptr [esi+2Ch] 0 +
jnz loc_4206A1  +
mov byte ptr [esi+2Ch] 1 +
mov dword ptr [esi+30h] 3 +
mov edx off_450004 +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_420685  +
sub eax edi +
push eax  +
push edx  +
lea ecx [esi+34h] +
call sub_41D9C0  +
or eax 0FFFFFFFFh +
mov [esi+40h] eax +
mov [esi+3Ch] eax +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebp+arg_C] +
mov edx [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
cmp ecx 1 +
jnz loc_4206FB  +
movzx eax byte ptr [edi] +
mov eax ds:dword_446408[eax*4] +
mov [edx] eax +
cmp eax 1 +
jnz loc_42070E  +
mov al [edi] +
cmp al 26h +
jnz loc_420703  +
push ecx  +
mov ecx [ebp+arg_4] +
push edx  +
push ecx  +
push edi  +
call sub_41FF80  +
add esp 10h +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [edx] 1 +
jmp loc_4206E3  +
mov edx [ebp+arg_4] +
mov [edx] al +
lea eax [edi+1] +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jz loc_42073A  +
xor ecx ecx +
cmp [edi] cl +
jz loc_420733  +
push esi  +
mov esi [ebp+arg_4] +
mov eax edi +
sub esi edi +
push ebx  +
cmp ecx [edx] +
jge loc_420731  +
mov bl [eax] +
mov [esi+eax] bl +
inc eax  +
inc ecx  +
cmp byte ptr [eax] 0 +
jnz loc_420721  +
pop ebx  +
pop esi  +
mov eax [edx] +
add eax edi +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 0  +
push offset unk_441AD0  +
mov ecx edi +
call sub_41D9C0  +
cmp byte ptr [ebp+arg_8] 0 +
jz loc_420858  +
cmp byte_44FF24 0 +
jz loc_420858  +
mov eax [ebp+arg_14] +
mov ecx [ebp+arg_0] +
push eax  +
push ecx  +
mov byte ptr [ebp+arg_8+3] 0 +
call sub_41FB10  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_420851  +
nop   +
cmp byte ptr [esi] 0 +
jz loc_4208B5  +
mov edx [ebp+arg_14] +
mov eax [ebp+arg_10] +
mov ecx [ebp+arg_C] +
push edx  +
push eax  +
push ecx  +
push esi  +
call sub_41FC60  +
add esp 10h +
test al al +
jnz loc_4208B5  +
mov bl [esi] +
cmp bl 0Dh +
jz loc_420842  +
cmp bl 0Ah +
jz loc_420842  +
movzx edx bl +
push edx  +
call sub_427E50  +
add esp 4 +
test eax eax +
jnz loc_420842  +
cmp bl 0Ah +
jz loc_420842  +
cmp bl 0Dh +
jz loc_420842  +
cmp byte ptr [ebp+arg_8+3] al +
jz loc_4207FA  +
push 1  +
lea eax [ebp+arg_8] +
push eax  +
mov ecx edi +
mov byte ptr [ebp+arg_8] 20h +
call sub_41DAA0  +
mov byte ptr [ebp+arg_8+3] 0 +
mov ecx [ebp+arg_14] +
push ecx  +
lea edx [ebp+var_8] +
push edx  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
mov [ebp+var_4] 0 +
call sub_4206C0  +
mov esi eax +
mov eax [ebp+var_8] +
add esp 10h +
cmp eax 1 +
jnz loc_420834  +
mov cl byte ptr [ebp+var_4] +
push eax  +
lea edx [ebp+arg_0] +
mov byte ptr [ebp+arg_0] cl +
push edx  +
mov ecx edi +
call sub_41DAA0  +
jmp loc_420847  +
push eax  +
lea eax [ebp+var_4] +
push eax  +
mov ecx edi +
call sub_41DAA0  +
jmp loc_420847  +
inc esi  +
mov byte ptr [ebp+arg_8+3] 1 +
test esi esi +
jnz loc_420790  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_42084F  +
mov ebx [ebp+arg_14] +
mov edi [ebp+arg_10] +
cmp byte ptr [esi] 0 +
jz loc_4208B5  +
mov ecx [ebp+arg_C] +
push ebx  +
push edi  +
push ecx  +
push esi  +
call sub_41FC60  +
add esp 10h +
test al al +
jnz loc_4208B5  +
push ebx  +
lea edx [ebp+arg_0] +
push edx  +
lea eax [ebp+arg_8] +
push eax  +
push esi  +
mov [ebp+arg_8] 0 +
call sub_4206C0  +
mov ecx [ebp+arg_0] +
add esp 10h +
push ecx  +
mov ecx [ebp+arg_4] +
lea edx [ebp+arg_8] +
push edx  +
mov esi eax +
call sub_41DAA0  +
test esi esi +
jnz loc_420865  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_C] +
lea edx [eax+1] +
jmp loc_4208C0  +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4208C0  +
sub eax edx +
pop edi  +
add eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
push esi  +
lea ecx [edi+34h] +
push offset unk_441AD0  +
mov byte ptr [edi+2Ch] 0 +
mov [edi+30h] esi +
call sub_41D9C0  +
mov eax [ebp+arg_0] +
mov [edi+40h] esi +
mov [edi+3Ch] esi +
cmp eax esi +
jz loc_420B37  +
cmp byte ptr [eax] 0 +
jz loc_420B37  +
or ecx 0FFFFFFFFh +
mov [edi+8] ecx +
mov [edi+4] ecx +
mov ecx [ebp+arg_4] +
cmp ecx esi +
jz loc_420938  +
mov edx [ecx] +
mov [edi+4] edx +
mov ecx [ecx+4] +
mov [edi+8] ecx +
jmp loc_42093E  +
mov [edi+4] esi +
mov [edi+8] esi +
mov edx [edi+38h] +
mov ecx [edi+4] +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+var_4] edx +
mov edx [edi+8] +
mov [ebp+var_8] eax +
mov [ebp+var_10] ecx +
mov [ebp+var_C] edx +
mov [edi+4] ecx +
mov [edi+8] edx +
cmp ebx esi +
jnz loc_42098C  +
mov cl [eax] +
test cl cl +
jz loc_42098C  +
cmp cl 0EFh +
jnz loc_42098C  +
mov cl [eax+1] +
test cl cl +
jz loc_42098C  +
cmp cl 0BBh +
jnz loc_42098C  +
mov cl [eax+2] +
test cl cl +
jz loc_42098C  +
cmp cl 0BFh +
jnz loc_42098C  +
mov ebx 1 +
mov [edi+44h] bl +
push ebx  +
push eax  +
call sub_41FB10  +
add esp 8 +
mov [ebp+arg_0] eax +
cmp eax esi +
jnz loc_4209D5  +
cmp byte ptr [edi+2Ch] 0 +
jnz loc_420B2C  +
mov byte ptr [edi+2Ch] 1 +
mov dword ptr [edi+30h] 0Dh +
mov edx off_45002C +
mov eax edx +
lea ebx [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4209C0  +
jmp loc_420B17  +
mov eax [ebp+arg_0] +
xor esi esi +
cmp byte ptr [eax] 0 +
jz loc_420AED  +
push ebx  +
push eax  +
mov ecx edi +
call sub_4201A0  +
mov esi eax +
test esi esi +
jz loc_420AE8  +
mov eax [esi] +
mov edx [ebp+arg_0] +
mov eax [eax+8] +
push ebx  +
lea ecx [ebp+var_10] +
push ecx  +
push edx  +
mov ecx esi +
call eax  +
push esi  +
mov ecx edi +
mov [ebp+arg_0] eax +
call sub_41E280  +
test ebx ebx +
jnz loc_420AD0  +
mov edx [esi] +
mov eax [edx+34h] +
mov ecx esi +
call eax  +
test eax eax +
jz loc_420AD0  +
mov edx [esi] +
mov eax [edx+34h] +
mov ecx esi +
call eax  +
mov ebx [eax+30h] +
add ebx 8 +
cmp byte ptr [ebx] 0 +
mov [ebp+arg_8] ebx +
jnz loc_420A48  +
mov ebx 1 +
jmp loc_420AD0  +
mov esi offset aUtf8 +
sub ebx esi +
nop   +
cmp byte ptr [esi] 0 +
jz loc_420A7F  +
movsx eax byte ptr [ebx+esi] +
push eax  +
call sub_429B1D  +
mov [ebp+arg_4] eax +
movsx eax byte ptr [esi] +
push eax  +
call sub_429B1D  +
add esp 8 +
cmp [ebp+arg_4] eax +
jnz loc_420A7A  +
inc esi  +
cmp byte ptr [ebx+esi] 0 +
jnz loc_420A50  +
cmp byte ptr [esi] 0 +
jnz loc_420A86  +
mov ebx 1 +
jmp loc_420AD0  +
mov ebx [ebp+arg_8] +
cmp byte ptr [ebx] 0 +
mov esi offset aUtf8_0 +
jz loc_420ACB  +
sub ebx esi +
cmp byte ptr [esi] 0 +
jz loc_420AC4  +
movsx eax byte ptr [ebx+esi] +
push eax  +
call sub_429B1D  +
mov [ebp+arg_4] eax +
movsx eax byte ptr [esi] +
push eax  +
call sub_429B1D  +
add esp 8 +
cmp [ebp+arg_4] eax +
jnz loc_420ABF  +
inc esi  +
cmp byte ptr [ebx+esi] 0 +
jnz loc_420A95  +
cmp byte ptr [esi] 0 +
jnz loc_420ACB  +
mov ebx 1 +
jmp loc_420AD0  +
mov ebx 2 +
mov ecx [ebp+arg_0] +
push ebx  +
push ecx  +
call sub_41FB10  +
add esp 8 +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_4209D0  +
mov eax [ebp+arg_0] +
xor esi esi +
cmp [edi+18h] esi +
jnz loc_420B2E  +
cmp byte ptr [edi+2Ch] 0 +
jnz loc_420B2C  +
mov byte ptr [edi+2Ch] 1 +
mov dword ptr [edi+30h] 0Dh +
mov edx off_45002C +
mov eax edx +
lea ebx [eax+1] +
mov edi edi +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_420B10  +
sub eax ebx +
push eax  +
push edx  +
lea ecx [edi+34h] +
call sub_41D9C0  +
or eax 0FFFFFFFFh +
mov [edi+40h] eax +
mov [edi+3Ch] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp byte ptr [edi+2Ch] 0 +
jnz loc_420B6F  +
mov byte ptr [edi+2Ch] 1 +
mov dword ptr [edi+30h] 0Dh +
mov edx off_45002C +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_420B53  +
sub eax esi +
push eax  +
push edx  +
lea ecx [edi+34h] +
call sub_41D9C0  +
or eax 0FFFFFFFFh +
mov [edi+40h] eax +
mov [edi+3Ch] eax +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43F4B8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov ebx [ebp+arg_8] +
mov eax [ebp+arg_0] +
push ebx  +
push eax  +
call sub_41FB10  +
add esp 8 +
mov ecx esi +
mov edi eax +
call sub_41DC60  +
mov esi eax +
mov [ebp+var_14] esi +
test edi edi +
jz loc_420F11  +
cmp byte ptr [edi] 0 +
jz loc_420F11  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_420BF8  +
push ebx  +
push edi  +
call sub_41F920  +
mov edx [ecx] +
mov eax [ebp+var_10] +
mov [eax+4] edx +
mov edx [ecx+4] +
mov [eax+8] edx +
cmp byte ptr [edi] 3Ch +
jz loc_420C16  +
test esi esi +
jz loc_420F4D  +
push ebx  +
push ecx  +
push edi  +
push 4  +
mov ecx esi +
call sub_41FD10  +
jmp loc_420F4D  +
lea eax [edi+1] +
push ebx  +
push eax  +
call sub_41FB10  +
mov ecx [ebp+var_10] +
add ecx 20h +
push ebx  +
push ecx  +
push eax  +
mov [ebp+arg_0] eax +
call sub_41FBD0  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_420EF9  +
cmp byte ptr [edi] 0 +
jz loc_420EF9  +
push offset asc_44632C  +
lea ecx [ebp+arg_8] +
call sub_41F090  +
mov eax [ebp+var_10] +
mov eax [eax+20h] +
mov ecx [eax] +
push ecx  +
add eax 8 +
push eax  +
lea ecx [ebp+arg_8] +
mov [ebp+var_4] 0 +
call sub_41DAA0  +
push 1  +
push offset asc_4461E0  +
lea ecx [ebp+arg_8] +
call sub_41DAA0  +
nop   +
cmp byte ptr [edi] 0 +
jz loc_420EC5  +
push ebx  +
push edi  +
mov [ebp+arg_0] edi +
call sub_41FB10  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_420EAD  +
mov al [edi] +
test al al +
jz loc_420EAD  +
cmp al 2Fh +
jz loc_420D4C  +
cmp al 3Eh +
jz loc_420DB9  +
push 24h  +
call sub_425CDC  +
mov esi eax +
xor eax eax +
add esp 4 +
cmp esi eax +
jz loc_420E4F  +
or ecx 0FFFFFFFFh +
mov [esi+8] ecx +
mov [esi+4] ecx +
mov [esi+0Ch] eax +
mov dword ptr [esi] offset off_446178 +
mov ecx offset unk_454B44 +
mov [esi+14h] ecx +
mov [esi+18h] ecx +
mov [esi+20h] eax +
mov [esi+1Ch] eax +
mov eax [ebp+var_14] +
mov edx [esi] +
mov edx [edx+8] +
mov [esi+10h] eax +
mov eax [ebp+arg_4] +
push ebx  +
push eax  +
push edi  +
mov ecx esi +
mov [ebp+arg_0] edi +
call edx  +
mov edi eax +
test edi edi +
jz loc_420E87  +
cmp byte ptr [edi] 0 +
jz loc_420E87  +
mov eax [esi+14h] +
mov ecx [ebp+var_10] +
add eax 8 +
add ecx 2Ch +
push eax  +
call sub_41DF20  +
test eax eax +
jnz loc_420E6A  +
mov ecx [ebp+var_10] +
push esi  +
add ecx 2Ch +
call sub_41DF00  +
mov esi [ebp+var_14] +
jmp loc_420C80  +
inc edi  +
cmp byte ptr [edi] 3Eh +
jz loc_420D88  +
test esi esi +
jz loc_420D65  +
mov eax [ebp+arg_4] +
push ebx  +
push eax  +
push edi  +
push 8  +
mov ecx esi +
call sub_41FD10  +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_420F4D  +
push eax  +
call sub_42520B  +
add esp 4 +
jmp loc_420F4D  +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_420DA2  +
push eax  +
call sub_42520B  +
add esp 4 +
lea eax [edi+1] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+arg_4] +
push ebx  +
push ecx  +
mov ecx [ebp+var_10] +
inc edi  +
push edi  +
call sub_420470  +
mov edi eax +
test edi edi +
jz loc_420E3A  +
cmp byte ptr [edi] 0 +
jz loc_420E3A  +
mov ecx [ebp+arg_8] +
add ecx 8 +
sub eax ecx +
mov dl [ecx] +
test dl dl +
jz loc_420DF2  +
cmp [eax+ecx] dl +
jnz loc_420DED  +
inc ecx  +
cmp byte ptr [eax+ecx] 0 +
jnz loc_420DDB  +
cmp byte ptr [ecx] 0 +
jnz loc_420E25  +
mov ecx [ebp+arg_8] +
add edi [ecx] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp ecx offset unk_454B44 +
jz loc_420E0F  +
push ecx  +
call sub_42520B  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
test esi esi +
jz loc_420D65  +
mov edx [ebp+arg_4] +
push ebx  +
push edx  +
push edi  +
push 9  +
jmp loc_420D5E  +
test esi esi +
jz loc_420D65  +
mov eax [ebp+arg_4] +
push ebx  +
push eax  +
push edi  +
push 9  +
jmp loc_420D5E  +
mov ecx [ebp+var_14] +
cmp ecx eax +
jz loc_420D65  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
push edx  +
push eax  +
push 3  +
jmp loc_420D60  +
mov ecx [esi+18h] +
add ecx 8 +
push ecx  +
mov ecx eax +
call sub_41DB30  +
mov edx [esi] +
mov eax [edx] +
push 1  +
mov ecx esi +
call eax  +
jmp loc_420D65  +
mov ecx [ebp+var_14] +
test ecx ecx +
jz loc_420E9E  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
push edx  +
push eax  +
push 4  +
call sub_41FD10  +
mov edx [esi] +
mov eax [edx] +
push 1  +
mov ecx esi +
call eax  +
jmp loc_420D65  +
test esi esi +
jz loc_420D65  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push ebx  +
push ecx  +
push edx  +
push 7  +
jmp loc_420D5E  +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_420E0F  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
test esi esi +
jz loc_420F4D  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push ebx  +
push eax  +
push ecx  +
push 5  +
mov ecx esi +
call sub_41FD10  +
jmp loc_420F4D  +
test esi esi +
jz loc_420F4D  +
cmp byte ptr [esi+2Ch] 0 +
jnz loc_420F4D  +
mov byte ptr [esi+2Ch] 1 +
mov dword ptr [esi+30h] 4 +
mov edx off_450008 +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_420F31  +
sub eax edi +
push eax  +
push edx  +
lea ecx [esi+34h] +
call sub_41D9C0  +
or eax 0FFFFFFFFh +
mov [esi+40h] eax +
mov [esi+3Ch] eax +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
push edi  +
push eax  +
mov ebx ecx +
call sub_41FB10  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_4210F9  +
cmp byte ptr [esi] 0 +
jz loc_4210F9  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_420FB6  +
push edi  +
push esi  +
call sub_41F920  +
mov eax ecx +
mov ecx [eax] +
mov [ebx+4] ecx +
mov edx [eax+4] +
mov [ebx+8] edx +
push edi  +
lea eax [ebx+14h] +
push eax  +
push esi  +
call sub_41FBD0  +
add esp 0Ch +
test eax eax +
jz loc_4210E5  +
cmp byte ptr [eax] 0 +
jz loc_4210E5  +
push edi  +
push eax  +
call sub_41FB10  +
add esp 8 +
test eax eax +
jz loc_4210C8  +
mov cl [eax] +
test cl cl +
jz loc_4210C8  +
cmp cl 3Dh +
jnz loc_4210C8  +
inc eax  +
push edi  +
push eax  +
call sub_41FB10  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_4210E5  +
mov al [esi] +
test al al +
jz loc_4210E5  +
cmp al 27h +
jnz loc_421027  +
push edi  +
push 0  +
push offset asc_4461EC  +
jmp loc_421033  +
cmp al 22h +
jnz loc_42104E  +
push edi  +
push 0  +
push offset asc_4461FC  +
push 0  +
add ebx 18h +
push ebx  +
inc esi  +
push esi  +
call sub_420740  +
add esp 18h +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
lea ecx [ebx+18h] +
push offset unk_441AD0  +
call sub_40FAA0  +
jmp loc_421060  +
movzx eax byte ptr [esi] +
test al al +
jz loc_421045  +
push eax  +
call sub_41F7D0  +
add esp 4 +
test al al +
jnz loc_421045  +
mov al [esi] +
cmp al 0Ah +
jz loc_421045  +
cmp al 0Dh +
jz loc_421045  +
cmp al 2Fh +
jz loc_421045  +
cmp al 3Eh +
jz loc_421045  +
cmp al 27h +
jz loc_4210AB  +
cmp al 22h +
jz loc_4210AB  +
push 1  +
lea ecx [ebp+arg_8] +
push ecx  +
lea ecx [ebx+18h] +
mov byte ptr [ebp+arg_8] al +
call sub_41DAA0  +
inc esi  +
jnz loc_421060  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_4210F9  +
mov edx [ebp+arg_4] +
push edi  +
push edx  +
push esi  +
push 7  +
call sub_41FD10  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_4210F9  +
mov edx [ebp+arg_4] +
push edi  +
push edx  +
push eax  +
push 7  +
call sub_41FD10  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_4210F9  +
mov eax [ebp+arg_4] +
push edi  +
push eax  +
push esi  +
push 7  +
call sub_41FD10  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43F4E8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0  +
lea ecx [esi+20h] +
push offset unk_441AD0  +
mov [ebp+var_10] ecx +
call sub_41D9C0  +
mov ecx esi +
call sub_41DC60  +
mov ebx [ebp+arg_4] +
mov edi [ebp+arg_0] +
mov [ebp+var_14] eax +
test ebx ebx +
jz loc_421177  +
mov eax [ebp+arg_8] +
push eax  +
push edi  +
mov ecx ebx +
call sub_41F920  +
mov ecx [ebx] +
mov [esi+4] ecx +
mov edx [ebx+4] +
mov [esi+8] edx +
cmp byte ptr [esi+2Ch] 0 +
jnz loc_4211DA  +
mov eax offset aCdata +
test edi edi +
jz loc_4211A7  +
cmp byte ptr [edi] 0 +
jz loc_4211A7  +
mov ecx edi +
sub ecx eax +
nop   +
mov dl [eax] +
test dl dl +
jz loc_4211DA  +
cmp [ecx+eax] dl +
jnz loc_4211A2  +
inc eax  +
cmp byte ptr [ecx+eax] 0 +
jnz loc_421190  +
cmp byte ptr [eax] 0 +
jz loc_4211DA  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_10] +
push eax  +
push 0  +
push offset asc_446328  +
push 1  +
push ecx  +
push edi  +
call sub_420740  +
add esp 18h +
test eax eax +
jz loc_421217  +
dec eax  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov byte ptr [esi+2Ch] 1 +
mov eax offset aCdata +
test edi edi +
jz loc_421207  +
cmp byte ptr [edi] 0 +
jz loc_421207  +
mov esi edi +
sub esi eax +
mov dl [eax] +
test dl dl +
jz loc_42122D  +
cmp [esi+eax] dl +
jnz loc_421202  +
inc eax  +
cmp byte ptr [esi+eax] 0 +
jnz loc_4211F0  +
cmp byte ptr [eax] 0 +
jz loc_42122D  +
mov edx [ebp+arg_8] +
mov ecx [ebp+var_14] +
push edx  +
push ebx  +
push edi  +
push 0Fh  +
call sub_41FD10  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
add edi 9 +
jz loc_421271  +
mov esi edi +
sub esi offset asc_446330 +
mov dl [edi] +
test dl dl +
jz loc_421271  +
mov eax offset asc_446330 +
mov cl [eax] +
test cl cl +
jz loc_421271  +
cmp [esi+eax] cl +
jnz loc_421257  +
inc eax  +
cmp byte ptr [esi+eax] 0 +
jnz loc_421245  +
cmp byte ptr [eax] 0 +
jz loc_421271  +
mov ecx [ebp+var_10] +
push 1  +
lea eax [ebp+arg_4] +
push eax  +
mov byte ptr [ebp+arg_4] dl +
call sub_41DAA0  +
inc esi  +
inc edi  +
jnz loc_42123A  +
mov [ebp+arg_0] offset unk_454B44 +
mov ecx [ebp+arg_8] +
push ecx  +
push 0  +
push offset asc_446330  +
push 0  +
lea edx [ebp+arg_0] +
push edx  +
push edi  +
mov [ebp+var_4] 0 +
call sub_420740  +
mov esi eax +
mov eax [ebp+arg_0] +
add esp 18h +
mov [ebp+var_4] 0FFFFFFFFh +
cmp eax offset unk_454B44 +
jz loc_4212B5  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43F54B  +
mov eax large fs:0 +
push eax  +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] ebx +
mov edi [ebp+arg_8] +
mov eax [ebp+arg_0] +
push edi  +
push eax  +
call sub_41FB10  +
add esp 8 +
mov ecx ebx +
mov esi eax +
call sub_41DC60  +
xor ebx ebx +
mov [ebp+arg_0] eax +
cmp esi ebx +
jz loc_42163D  +
cmp [esi] bl +
jz loc_42163D  +
push edi  +
push 1  +
push offset a?xml_0  +
push esi  +
call sub_41FC60  +
add esp 10h +
test al al +
jz loc_42163A  +
mov ecx [ebp+arg_4] +
cmp ecx ebx +
jz loc_421362  +
push edi  +
push esi  +
call sub_41F920  +
mov edx [ecx] +
mov eax [ebp+var_10] +
mov [eax+4] edx +
mov ecx [ecx+4] +
mov [eax+8] ecx +
jmp loc_421365  +
mov eax [ebp+var_10] +
push ebx  +
lea ecx [eax+2Ch] +
push offset unk_441AD0  +
add esi 5 +
mov [ebp+var_14] ecx +
call sub_41D9C0  +
mov ecx [ebp+var_10] +
push ebx  +
add ecx 30h +
push offset unk_441AD0  +
mov [ebp+var_18] ecx +
call sub_41D9C0  +
mov ecx [ebp+var_10] +
push ebx  +
add ecx 34h +
push offset unk_441AD0  +
mov [ebp+var_10] ecx +
call sub_41D9C0  +
cmp esi ebx +
jz loc_42167F  +
lea esp [esp+0] +
mov al [esi] +
cmp al bl +
jz loc_42167F  +
cmp al 3Eh +
jz loc_421623  +
push edi  +
push esi  +
call sub_41FB10  +
push edi  +
push 1  +
mov esi eax +
push offset aVersion_0  +
push esi  +
call sub_41FC60  +
add esp 18h +
test al al +
jz loc_421492  +
or eax 0FFFFFFFFh +
mov [ebp+var_34] eax +
mov [ebp+var_38] eax +
mov eax offset unk_454B44 +
mov [ebp+var_30] ebx +
mov [ebp+var_3C] offset off_446178 +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_2C] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_20] ebx +
mov edx [ebp+arg_4] +
push edi  +
push edx  +
push esi  +
lea ecx [ebp+var_3C] +
mov [ebp+var_4] ebx +
call sub_420F70  +
mov edi [ebp+var_24] +
add edi 8 +
mov esi eax +
mov eax edi +
lea ecx [eax+1] +
lea esp [esp+0] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_421430  +
sub eax ecx +
mov ecx [ebp+var_14] +
push eax  +
push edi  +
call sub_41D9C0  +
mov eax [ebp+var_24] +
mov [ebp+var_4] 2 +
cmp eax offset unk_454B44 +
jz loc_42145D  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_28] +
mov byte ptr [ebp+var_4] 1 +
cmp eax offset unk_454B44 +
jz loc_421474  +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_3C] offset off_44614C +
mov edi [ebp+arg_8] +
cmp esi ebx +
jnz loc_4213B0  +
jmp loc_42167F  +
push edi  +
push 1  +
push offset aEncoding_0  +
push esi  +
call sub_41FC60  +
add esp 10h +
test al al +
jz loc_42154B  +
or eax 0FFFFFFFFh +
mov [ebp+var_58] eax +
mov [ebp+var_5C] eax +
mov eax offset unk_454B44 +
mov [ebp+var_54] ebx +
mov [ebp+var_60] offset off_446178 +
mov [ebp+var_4C] eax +
mov [ebp+var_48] eax +
mov [ebp+var_50] ebx +
mov [ebp+var_40] ebx +
mov [ebp+var_44] ebx +
mov eax [ebp+arg_4] +
push edi  +
push eax  +
push esi  +
lea ecx [ebp+var_60] +
mov [ebp+var_4] 3 +
call sub_420F70  +
mov edi [ebp+var_48] +
add edi 8 +
mov esi eax +
mov eax edi +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_4214F4  +
sub eax ecx +
mov ecx [ebp+var_18] +
push eax  +
push edi  +
call sub_41D9C0  +
mov eax [ebp+var_48] +
mov [ebp+var_4] 5 +
cmp eax offset unk_454B44 +
jz loc_421521  +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+var_4C] +
mov byte ptr [ebp+var_4] 4 +
cmp eax offset unk_454B44 +
jz loc_421538  +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_60] offset off_44614C +
jmp loc_421482  +
push edi  +
push 1  +
push offset aStandalone_0  +
push esi  +
call sub_41FC60  +
add esp 10h +
test al al +
jz loc_4215DA  +
or eax 0FFFFFFFFh +
mov [ebp+var_7C] eax +
mov [ebp+var_80] eax +
mov eax offset unk_454B44 +
mov [ebp+var_78] ebx +
mov [ebp+var_84] offset off_446178 +
mov [ebp+var_70] eax +
mov [ebp+var_6C] eax +
mov [ebp+var_74] ebx +
mov [ebp+var_64] ebx +
mov [ebp+var_68] ebx +
mov ecx [ebp+arg_4] +
push edi  +
push ecx  +
push esi  +
lea ecx [ebp+var_84] +
mov [ebp+var_4] 6 +
call sub_420F70  +
mov edi [ebp+var_6C] +
add edi 8 +
mov esi eax +
mov eax edi +
lea ecx [eax+1] +
nop   +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_4215B0  +
sub eax ecx +
mov ecx [ebp+var_10] +
push eax  +
push edi  +
call sub_41D9C0  +
lea ecx [ebp+var_84] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_41F020  +
jmp loc_421482  +
cmp esi ebx +
jz loc_42167F  +
mov al [esi] +
mov byte ptr [ebp+arg_0+3] al +
cmp al bl +
jz loc_421485  +
cmp al 3Eh +
jz loc_421485  +
movzx edx al +
push edx  +
call sub_427E50  +
add esp 4 +
test eax eax +
jnz loc_421485  +
mov al byte ptr [ebp+arg_0+3] +
cmp al 0Ah +
jz loc_421485  +
cmp al 0Dh +
jz loc_421485  +
inc esi  +
jnz loc_4215E2  +
jmp loc_42167F  +
lea eax [esi+1] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_42167F  +
cmp [eax+2Ch] bl +
jnz loc_42167F  +
mov byte ptr [eax+2Ch] 1 +
mov dword ptr [eax+30h] 0Ch +
mov esi off_450028 +
mov ecx esi +
lea edi [ecx+1] +
lea esp [esp+0] +
mov dl [ecx] +
inc ecx  +
cmp dl bl +
jnz loc_421660  +
sub ecx edi +
push ecx  +
push esi  +
lea ecx [eax+34h] +
call sub_41D9C0  +
mov eax [ebp+arg_0] +
or ecx 0FFFFFFFFh +
mov [eax+40h] ecx +
mov [eax+3Ch] ecx +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jz loc_42174A  +
push 0  +
push ebx  +
call sub_428020  +
mov edi eax +
push 2Dh  +
push ebx  +
mov [ebp+arg_0] edi +
call sub_428020  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_42174A  +
cmp esi ebx +
jz loc_42174A  +
cmp esi edi +
jz loc_42174A  +
lea edi [esi+1] +
push 2Dh  +
push edi  +
call sub_428020  +
add esp 8 +
test eax eax +
jz loc_42174A  +
cmp eax edi +
jz loc_42174A  +
cmp eax [ebp+arg_0] +
jz loc_42174A  +
lea edi [eax+1] +
push 2Dh  +
push edi  +
call sub_428020  +
add esp 8 +
test eax eax +
jz loc_42174A  +
cmp eax edi +
jz loc_42174A  +
mov ecx [ebp+arg_0] +
cmp eax ecx +
jz loc_42174A  +
inc eax  +
cmp ecx eax +
jz loc_42174A  +
push 2Dh  +
push eax  +
call sub_428020  +
add esp 8 +
test eax eax +
jnz loc_42174A  +
sub esi ebx +
cmp esi 40h +
jb loc_42172F  +
mov esi 3Fh +
mov edi [ebp+arg_4] +
push esi  +
push ebx  +
push 40h  +
push edi  +
call sub_41A2F0  +
add esp 10h +
mov byte ptr [esi+edi] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
***
sub esp 3Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
call sub_4245D0  +
xor ebx ebx +
push 15h  +
mov edi 0Fh +
push offset aC_amtstringlis  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
lea ecx [ecx+0] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_4217B0  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea eax [ebp+var_3C] +
push eax  +
lea ecx [ebp+var_20] +
push ecx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_4217EA  +
mov edx [ebp+var_20] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_421808  +
mov eax [ebp+var_3C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_42183E  +
push offset aFailedToFin_38  +
push offset aStringlist  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 14h  +
mov edi 0Fh +
push offset aC_amtstringl_0  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_4218B3  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_4218ED  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_42190B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_421941  +
push offset aFailedToFin_39  +
push offset aStringlist  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 15h  +
mov edi 0Fh +
push offset aC_amtstringl_1  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_4219B3  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_4219ED  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_421A0B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_421A3F  +
push offset aFailedToFin_40  +
push offset aStringlist  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_40] eax +
call sub_4245D0  +
xor ebx ebx +
push 19h  +
mov edi 0Fh +
push offset aC_amtstringl_2  +
lea ecx [ebp+var_3C] +
mov esi eax +
mov [ebp+var_28] edi +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_421AB3  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_20] +
call sub_402230  +
lea ecx [ebp+var_3C] +
push ecx  +
lea edx [ebp+var_20] +
push edx  +
mov ecx esi +
call sub_422420  +
mov edi 10h +
mov esi eax +
cmp [ebp+var_C] edi +
jb loc_421AED  +
mov eax [ebp+var_20] +
push eax  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_C] 0Fh +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_20] bl +
cmp [ebp+var_28] edi +
jb loc_421B0B  +
mov ecx [ebp+var_3C] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] ebx +
mov byte ptr [ebp+var_3C] bl +
cmp esi ebx +
jnz loc_421B41  +
push offset aFailedToFin_41  +
push offset aStringlist  +
call sub_41D360  +
add esp 8 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
mov edx [ebp+var_40] +
push edx  +
call esi  +
mov ecx [ebp+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax ecx +
mov edx [eax] +
cmp byte ptr [edx+2Dh] 0 +
jnz locret_421BAA  +
mov ecx [edx+8] +
cmp byte ptr [ecx+2Dh] 0 +
jnz loc_421B8D  +
mov edx [ecx] +
cmp byte ptr [edx+2Dh] 0 +
jnz loc_421B8A  +
jmp loc_421B80  +
mov ecx edx +
mov edx [ecx] +
cmp byte ptr [edx+2Dh] 0 +
jz loc_421B80  +
mov [eax] ecx +
retn   +
mov edx [edx+4] +
cmp byte ptr [edx+2Dh] 0 +
jnz loc_421BA8  +
mov ecx [eax] +
cmp ecx [edx+8] +
jnz loc_421BA8  +
mov [eax] edx +
mov edx [edx+4] +
cmp byte ptr [edx+2Dh] 0 +
jz loc_421B96  +
mov [eax] edx +
retn   +
***
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+2Dh] 0 +
jnz loc_421BCA  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_421BE6  +
mov [ecx+4] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_421BFB  +
mov [ecx+8] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
sub esp 408h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+38h] 0 +
mov [ebp+var_408] ecx +
jz loc_421C46  +
mov al 1 +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [esi+30h] 10h +
push edi  +
lea edi [esi+1Ch] +
jb loc_421C54  +
mov eax [edi] +
jmp loc_421C56  +
mov eax edi +
lea ecx [ebp+MultiByteStr] +
push ecx  +
push eax  +
call sub_41A6D0  +
add esp 8 +
test eax eax +
jz loc_421CCE  +
lea edx [ebp+MultiByteStr] +
push ebx  +
push edx  +
call sub_41A220  +
add esp 4 +
mov ebx eax +
push ebx  +
call ds:LoadLibraryW  +
push ebx  +
mov [esi+38h] eax +
call sub_425BC2  +
add esp 4 +
cmp dword ptr [esi+38h] 0 +
pop ebx  +
jz loc_421CAA  +
pop edi  +
mov al 1 +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [edi+14h] 10h +
jb loc_421CB2  +
mov edi [edi] +
mov eax [ebp+var_408] +
push edi  +
push offset aFailedToOpenLi  +
push offset unk_446258  +
push 2  +
push eax  +
call sub_4225D0  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
xor al al +
pop esi  +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
mov eax [ecx+4] +
push edi  +
mov edi [eax+4] +
cmp byte ptr [edi+2Dh] 0 +
mov [ebp+var_4] eax +
jnz loc_421D6E  +
mov edx [ebp+arg_0] +
mov eax [edx+14h] +
push ebx  +
mov ebx [edx+10h] +
push esi  +
mov [ebp+var_8] eax +
jmp loc_421D19  +
mov edx [ebp+arg_0] +
cmp [ebp+var_8] 10h +
lea eax [edi+0Ch] +
jb loc_421D24  +
mov edx [edx] +
mov esi [eax+10h] +
mov ecx esi +
cmp ecx esi +
jnb $+2  +
mov ecx esi +
cmp esi ebx +
jb loc_421D35  +
mov ecx ebx +
cmp dword ptr [eax+14h] 10h +
jb loc_421D3D  +
mov eax [eax] +
push ecx  +
push edx  +
push eax  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_421D57  +
cmp esi ebx +
jb loc_421D59  +
cmp esi ebx +
setnz al  +
test eax eax +
jns loc_421D5E  +
mov edi [edi+8] +
jmp loc_421D63  +
mov [ebp+var_4] edi +
mov edi [edi] +
cmp byte ptr [edi+2Dh] 0 +
jz loc_421D16  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
mov eax [ecx+4] +
push edi  +
mov edi [eax+4] +
cmp byte ptr [edi+79h] 0 +
mov [ebp+var_4] eax +
jnz loc_421DFE  +
mov edx [ebp+arg_0] +
mov eax [edx+14h] +
push ebx  +
mov ebx [edx+10h] +
push esi  +
mov [ebp+var_8] eax +
jmp loc_421DA9  +
mov edx [ebp+arg_0] +
cmp [ebp+var_8] 10h +
lea eax [edi+0Ch] +
jb loc_421DB4  +
mov edx [edx] +
mov esi [eax+10h] +
mov ecx esi +
cmp ecx esi +
jnb $+2  +
mov ecx esi +
cmp esi ebx +
jb loc_421DC5  +
mov ecx ebx +
cmp dword ptr [eax+14h] 10h +
jb loc_421DCD  +
mov eax [eax] +
push ecx  +
push edx  +
push eax  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_421DE7  +
cmp esi ebx +
jb loc_421DE9  +
cmp esi ebx +
setnz al  +
test eax eax +
jns loc_421DEE  +
mov edi [edi+8] +
jmp loc_421DF3  +
mov [ebp+var_4] edi +
mov edi [edi] +
cmp byte ptr [edi+79h] 0 +
jz loc_421DA6  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+14h] 10h +
jb loc_421E24  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
mov esi ecx +
call sub_421CF0  +
mov [ebp+arg_4] eax +
cmp eax [esi+4] +
jz loc_421E8C  +
mov ecx [eax+1Ch] +
add eax 0Ch +
cmp dword ptr [eax+14h] 10h +
jb loc_421E67  +
mov eax [eax] +
push ecx  +
push eax  +
mov eax [edi+10h] +
push eax  +
push 0  +
mov ecx edi +
call sub_40AA10  +
test eax eax +
js loc_421E8C  +
lea eax [ebp+arg_4] +
mov edx [eax] +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [esi+4] +
lea eax [ebp+var_4] +
mov [ebp+var_4] ecx +
mov edx [eax] +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43F586  +
mov eax large fs:0 +
push eax  +
sub esp 0C3Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea eax [ebp+var_410] +
push eax  +
mov edi ecx +
call sub_41AB00  +
add esp 4 +
xor ebx ebx +
test eax eax +
jz loc_421F60  +
lea eax [ebp+var_410] +
mov [ebp+var_C34] 0Fh +
mov [ebp+var_C38] ebx +
mov byte ptr [ebp+var_C48] bl +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_421F14  +
sub eax edx +
push eax  +
lea ecx [ebp+var_410] +
push ecx  +
lea ecx [ebp+var_C48] +
call sub_402230  +
lea edx [ebp+var_C48] +
push edx  +
mov ecx edi +
mov [ebp+var_4] ebx +
call sub_422DD0  +
cmp [ebp+var_C34] 10h +
mov [ebp+var_4] 0FFFFFFFFh +
jb loc_421F60  +
mov eax [ebp+var_C48] +
push eax  +
call sub_42520B  +
add esp 4 +
lea ecx [ebp+WideCharStr] +
push 400h  +
push ecx  +
call sub_429C85  +
add esp 8 +
test eax eax +
jz loc_421FF2  +
lea edx [ebp+WideCharStr] +
push edx  +
call sub_41A280  +
mov esi eax +
add esp 4 +
cmp esi ebx +
jz loc_421FF2  +
mov [ebp+var_C18] 0Fh +
mov [ebp+var_C1C] ebx +
mov byte ptr [ebp+var_C2C] bl +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_421FA6  +
sub eax edx +
push eax  +
push esi  +
lea ecx [ebp+var_C2C] +
call sub_402230  +
lea eax [ebp+var_C2C] +
push eax  +
mov ecx edi +
mov [ebp+var_4] 1 +
call sub_422DD0  +
cmp [ebp+var_C18] 10h +
jb loc_421FE9  +
mov ecx [ebp+var_C2C] +
push ecx  +
call sub_42520B  +
add esp 4 +
push esi  +
call sub_425BC2  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+8] +
push ebx  +
push esi  +
push edi  +
cmp eax 7FFFFFEh +
jb loc_422057  +
mov esi [ebp+arg_C] +
cmp dword ptr [esi+20h] 10h +
jb loc_422035  +
mov eax [esi+0Ch] +
push eax  +
call sub_42520B  +
add esp 4 +
xor ebx ebx +
mov dword ptr [esi+20h] 0Fh +
mov [esi+1Ch] ebx +
push esi  +
mov [esi+0Ch] bl +
call sub_42520B  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_424688  +
mov edi [ebp+arg_C] +
inc eax  +
mov [ecx+8] eax +
mov eax [ebp+arg_8] +
mov [edi+4] eax +
mov edx [ecx+4] +
xor ebx ebx +
cmp eax edx +
jnz loc_42207D  +
mov [edx+4] edi +
mov edx [ecx+4] +
mov [edx] edi +
mov eax [ecx+4] +
mov [eax+8] edi +
jmp loc_42209D  +
cmp [ebp+arg_4] bl +
jz loc_42208F  +
mov [eax] edi +
mov edx [ecx+4] +
cmp eax [edx] +
jnz loc_42209D  +
mov [edx] edi +
jmp loc_42209D  +
mov [eax+8] edi +
mov edx [ecx+4] +
cmp eax [edx+8] +
jnz loc_42209D  +
mov [edx+8] edi +
mov edx [edi+4] +
mov eax edi +
cmp [edx+2Ch] bl +
jnz loc_42223F  +
jmp loc_4220B0  +
mov edx [eax+4] +
mov esi [edx+4] +
cmp edx [esi] +
jnz loc_42217F  +
mov esi [esi+8] +
cmp [esi+2Ch] bl +
jnz loc_4220E2  +
mov byte ptr [edx+2Ch] 1 +
mov byte ptr [esi+2Ch] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+2Ch] bl +
mov eax [eax+4] +
mov eax [eax+4] +
jmp loc_422233  +
cmp eax [edx+8] +
jnz loc_422121  +
mov eax edx +
mov edx [eax+8] +
mov esi [edx] +
mov [eax+8] esi +
mov esi [edx] +
cmp [esi+2Dh] bl +
jnz loc_4220FB  +
mov [esi+4] eax +
mov esi [eax+4] +
mov [edx+4] esi +
mov esi [ecx+4] +
cmp eax [esi+4] +
jnz loc_42210E  +
mov [esi+4] edx +
jmp loc_42211C  +
mov esi [eax+4] +
cmp eax [esi] +
jnz loc_422119  +
mov [esi] edx +
jmp loc_42211C  +
mov [esi+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov edx [eax+4] +
mov byte ptr [edx+2Ch] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+2Ch] bl +
mov edx [eax+4] +
mov edx [edx+4] +
mov esi [edx] +
mov edi [esi+8] +
mov [edx] edi +
mov edi [esi+8] +
cmp [edi+2Dh] bl +
jnz loc_422149  +
mov [edi+4] edx +
mov edi [edx+4] +
mov [esi+4] edi +
mov edi [ecx+4] +
cmp edx [edi+4] +
jnz loc_422162  +
mov [edi+4] esi +
mov [esi+8] edx +
jmp loc_42222D  +
mov edi [edx+4] +
cmp edx [edi+8] +
jnz loc_422175  +
mov [edi+8] esi +
mov [esi+8] edx +
jmp loc_42222D  +
mov [edi] esi +
mov [esi+8] edx +
jmp loc_42222D  +
mov esi [esi] +
cmp [esi+2Ch] bl +
jnz loc_4221A2  +
mov byte ptr [edx+2Ch] 1 +
mov byte ptr [esi+2Ch] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+2Ch] bl +
mov eax [eax+4] +
mov eax [eax+4] +
jmp loc_422233  +
cmp eax [edx] +
jnz loc_4221E2  +
mov eax edx +
mov edx [eax] +
mov esi [edx+8] +
mov [eax] esi +
mov esi [edx+8] +
cmp [esi+2Dh] bl +
jnz loc_4221BA  +
mov [esi+4] eax +
mov esi [eax+4] +
mov [edx+4] esi +
mov esi [ecx+4] +
cmp eax [esi+4] +
jnz loc_4221CD  +
mov [esi+4] edx +
jmp loc_4221DC  +
mov esi [eax+4] +
cmp eax [esi+8] +
jnz loc_4221DA  +
mov [esi+8] edx +
jmp loc_4221DC  +
mov [esi] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov edx [eax+4] +
mov byte ptr [edx+2Ch] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+2Ch] bl +
mov edx [eax+4] +
mov edx [edx+4] +
mov esi [edx+8] +
mov edi [esi] +
mov [edx+8] edi +
mov edi [esi] +
cmp [edi+2Dh] bl +
jnz loc_42220A  +
mov [edi+4] edx +
mov edi [edx+4] +
mov [esi+4] edi +
mov edi [ecx+4] +
cmp edx [edi+4] +
jnz loc_42221D  +
mov [edi+4] esi +
jmp loc_42222B  +
mov edi [edx+4] +
cmp edx [edi] +
jnz loc_422228  +
mov [edi] esi +
jmp loc_42222B  +
mov [edi+8] esi +
mov [esi] edx +
mov edi [ebp+arg_C] +
mov [edx+4] esi +
mov edx [eax+4] +
cmp [edx+2Ch] bl +
jz loc_4220B0  +
mov eax [ecx+4] +
mov ecx [eax+4] +
mov eax [ebp+arg_0] +
mov [eax] edi +
pop edi  +
pop esi  +
mov byte ptr [ecx+2Ch] 1 +
pop ebx  +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43F5C1  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
push 30h  +
call sub_425CDC  +
mov edi eax +
xor eax eax +
add esp 4 +
mov [ebp-14h] edi +
cmp edi eax +
jz loc_422313  +
mov ecx [esi+4] +
mov [edi] ecx +
mov edx [esi+4] +
mov [edi+4] edx +
mov ecx [esi+4] +
lea esi [edi+0Ch] +
mov [edi+8] ecx +
mov [edi+2Ch] ax +
mov [ebp-4] eax +
mov [ebp-18h] esi +
mov [ebp-1Ch] esi +
mov byte ptr [ebp-4] 1 +
cmp esi eax +
jz loc_4222E8  +
mov ebx [ebp+8] +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] eax +
push ebx  +
mov ecx esi +
mov [esi] al +
call sub_402420  +
mov edx [ebx+1Ch] +
mov [esi+1Ch] edx +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp-14h] +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
push eax  +
push eax  +
call sub_425C90  +
lea ecx [ebp+8] +
push ecx  +
lea ecx [ebp-28h] +
mov [ebp+8] eax +
call sub_4252D5  +
push offset unk_44B0F0  +
lea edx [ebp-28h] +
push edx  +
mov dword ptr [ebp-28h] offset off_4419DC +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43E008  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_421CF0  +
mov ebx eax +
cmp ebx [esi+4] +
jz loc_42239E  +
cmp dword ptr [ebx+20h] 10h +
mov ecx [ebx+1Ch] +
lea eax [ebx+0Ch] +
jb loc_42238B  +
mov eax [eax] +
push ecx  +
push eax  +
mov eax [edi+10h] +
push eax  +
push 0  +
mov ecx edi +
call sub_40AA10  +
test eax eax +
jns loc_4223F3  +
push edi  +
lea ecx [ebp+var_30] +
mov [ebp+var_1C] 0Fh +
mov [ebp+var_20] 0 +
mov byte ptr [ebp+var_30] 0 +
call sub_402420  +
xor eax eax +
mov [ebp+var_14] eax +
lea ecx [ebp+var_30] +
push ecx  +
mov ecx esi +
mov [ebp+var_4] eax +
call loc_422260  +
push eax  +
push ebx  +
lea edx [ebp+var_34] +
push edx  +
mov ecx esi +
call sub_40DF40  +
cmp [ebp+var_1C] 10h +
mov esi [ebp+var_34] +
jb loc_4223EE  +
mov eax [ebp+var_30] +
push eax  +
call sub_42520B  +
add esp 4 +
lea eax [esi+28h] +
jmp loc_4223F6  +
lea eax [ebx+28h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43DBF8  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov esi ecx +
push edi  +
mov [ebp+var_38] esi +
call sub_421D80  +
mov [ebp+var_34] eax +
cmp eax [esi+4] +
jz loc_42248A  +
mov ecx [eax+1Ch] +
add eax 0Ch +
cmp dword ptr [eax+14h] 10h +
jb loc_422472  +
mov eax [eax] +
push ecx  +
push eax  +
mov eax [edi+10h] +
push eax  +
push 0  +
mov ecx edi +
call sub_40AA10  +
test eax eax +
js loc_42248A  +
lea eax [ebp+var_34] +
jmp loc_422493  +
mov ecx [esi+4] +
mov [ebp+var_30] ecx +
lea eax [ebp+var_30] +
mov eax [eax] +
cmp eax [esi+4] +
jnz loc_4224CB  +
mov eax 10h +
cmp [edi+14h] eax +
jb loc_4224A6  +
mov edi [edi] +
cmp [ebx+14h] eax +
jb loc_4224AD  +
mov ebx [ebx] +
push edi  +
push ebx  +
push offset aSymbolSCanTBeF  +
push offset aSS_1  +
push 5  +
push esi  +
call sub_4225D0  +
add esp 18h +
xor eax eax +
jmp loc_4225B0  +
cmp dword ptr [eax+60h] 0 +
lea esi [eax+28h] +
jnz loc_4224E1  +
mov ecx [ebp+var_38] +
push esi  +
call sub_421C10  +
test al al +
jz loc_4224C4  +
push ebx  +
lea edx [ebp+var_34] +
lea ecx [esi+3Ch] +
push edx  +
mov [ebp+var_30] ecx +
call sub_421E40  +
mov eax [eax] +
cmp eax [esi+40h] +
jz loc_422506  +
mov eax [eax+28h] +
test eax eax +
jz loc_422506  +
mov esi eax +
jmp loc_4225AE  +
cmp dword ptr [ebx+14h] 10h +
jb loc_422510  +
mov eax [ebx] +
jmp loc_422512  +
mov eax ebx +
push eax  +
mov eax [esi+38h] +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_422552  +
mov eax 10h +
cmp [edi+14h] eax +
jb loc_42252F  +
mov edi [edi] +
cmp [ebx+14h] eax +
jb loc_422536  +
mov ebx [ebx] +
mov ecx [ebp+var_38] +
push edi  +
push ebx  +
push offset aUnableToLocate  +
push offset aSS_1  +
push 2  +
push ecx  +
call sub_4225D0  +
add esp 18h +
jmp loc_4225AE  +
mov edi 10h +
cmp [ebx+14h] edi +
jb loc_42255E  +
mov ebx [ebx] +
mov eax ebx +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_422575  +
sub eax edx +
push eax  +
push ebx  +
lea ecx [ebp+var_2C] +
call sub_402230  +
mov ecx [ebp+var_30] +
lea edx [ebp+var_2C] +
push edx  +
mov [ebp+var_4] 0 +
call sub_422340  +
mov [eax] esi +
cmp [ebp+var_18] edi +
jb loc_4225AE  +
mov eax [ebp+var_2C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
cmp byte ptr [eax+3Dh] 0 +
jz loc_422602  +
mov edx [ebp+arg_C] +
mov eax [ebp+arg_8] +
lea ecx [ebp+arg_10] +
push ecx  +
mov ecx [ebp+arg_4] +
push edx  +
mov edx dword_454B34 +
push eax  +
push ecx  +
push offset aServiceloader  +
push edx  +
call sub_41D7A0  +
add esp 18h +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
cmp eax 4 +
jge loc_422623  +
test eax eax +
jz loc_422623  +
mov ecx [ebp+arg_C] +
lea eax [ebp+arg_10] +
push eax  +
push ecx  +
push offset aServiceloader  +
call sub_41D2A0  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
cmp byte ptr [ecx+79h] 0 +
jnz loc_42264B  +
nop   +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+79h] 0 +
jz loc_422640  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [eax] +
cmp byte ptr [ecx+79h] 0 +
jnz loc_42266A  +
mov edi edi +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+79h] 0 +
jz loc_422660  +
pop ebp  +
retn   +
***
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+79h] 0 +
jz loc_422680  +
mov ecx [ecx+8] +
mov [eax] ecx +
retn   +
mov edx [ecx] +
cmp byte ptr [edx+79h] 0 +
jnz loc_42269F  +
mov ecx [edx+8] +
cmp byte ptr [ecx+79h] 0 +
jnz loc_4226C1  +
mov edx ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+79h] 0 +
jz loc_422691  +
mov [eax] edx +
retn   +
mov edx [ecx+4] +
cmp byte ptr [edx+79h] 0 +
jnz loc_4226B9  +
mov ecx [eax] +
cmp ecx [edx] +
jnz loc_4226B9  +
mov [eax] edx +
mov edx [edx+4] +
cmp byte ptr [edx+79h] 0 +
jz loc_4226A8  +
mov ecx [eax] +
cmp byte ptr [ecx+79h] 0 +
jnz locret_4226C3  +
mov [eax] edx +
retn   +
***
mov eax ecx +
mov edx [eax] +
cmp byte ptr [edx+79h] 0 +
jnz locret_42271A  +
mov ecx [edx+8] +
cmp byte ptr [ecx+79h] 0 +
jnz loc_4226FD  +
mov edx [ecx] +
cmp byte ptr [edx+79h] 0 +
jnz loc_4226FA  +
jmp loc_4226F0  +
mov ecx edx +
mov edx [ecx] +
cmp byte ptr [edx+79h] 0 +
jz loc_4226F0  +
mov [eax] ecx +
retn   +
mov edx [edx+4] +
cmp byte ptr [edx+79h] 0 +
jnz loc_422718  +
mov ecx [eax] +
cmp ecx [edx+8] +
jnz loc_422718  +
mov [eax] edx +
mov edx [edx+4] +
cmp byte ptr [edx+79h] 0 +
jz loc_422706  +
mov [eax] edx +
retn   +
***
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+79h] 0 +
jnz loc_42273A  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_422755  +
mov [ecx+4] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_422767  +
mov [ecx] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+79h] 0 +
jnz loc_42279A  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_4227B6  +
mov [ecx+4] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_4227CB  +
mov [ecx+8] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
push edi  +
mov edi [ebp+arg_0] +
cmp edi [ebp+arg_4] +
jz loc_42284B  +
push ebx  +
push esi  +
mov edi edi +
mov edx [ebp+arg_8] +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4227F8  +
sub eax esi +
mov esi [edi+10h] +
mov ebx eax +
mov eax esi +
cmp eax esi +
jnb $+2  +
mov ecx esi +
cmp esi ebx +
jb loc_422814  +
mov ecx ebx +
cmp dword ptr [edi+14h] 10h +
jb loc_42281E  +
mov eax [edi] +
jmp loc_422820  +
mov eax edi +
push ecx  +
push edx  +
push eax  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_42283C  +
cmp esi ebx +
jb loc_42283C  +
cmp esi ebx +
setnz al  +
test eax eax +
jz loc_422844  +
add edi 1Ch +
cmp edi [ebp+arg_4] +
jnz loc_4227F0  +
pop esi  +
pop ebx  +
mov eax edi +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43F5F1  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
push 30h  +
call sub_425CDC  +
mov edi eax +
xor eax eax +
add esp 4 +
mov [ebp-14h] edi +
cmp edi eax +
jz loc_422906  +
mov ecx [esi+4] +
mov [edi] ecx +
mov edx [esi+4] +
mov [edi+4] edx +
mov ecx [esi+4] +
lea esi [edi+0Ch] +
mov [edi+8] ecx +
mov [edi+2Ch] ax +
mov [ebp-4] eax +
mov [ebp-18h] esi +
mov [ebp-1Ch] esi +
mov byte ptr [ebp-4] 1 +
cmp esi eax +
jz loc_4228DB  +
mov ebx [ebp+8] +
push 0FFFFFFFFh  +
push eax  +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] eax +
push ebx  +
mov ecx esi +
mov [esi] al +
call sub_402110  +
mov edx [ebx+1Ch] +
mov [esi+1Ch] edx +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp-14h] +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
push eax  +
push eax  +
call sub_425C90  +
lea ecx [ebp+8] +
push ecx  +
lea ecx [ebp-28h] +
mov [ebp+8] eax +
call sub_4252D5  +
push offset unk_44B0F0  +
lea edx [ebp-28h] +
push edx  +
mov dword ptr [ebp-28h] offset off_4419DC +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43F610  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_18] ebx +
mov edi [ebp+arg_0] +
cmp byte ptr [edi+2Dh] 0 +
mov eax [ebx+4] +
mov [ebp+var_14] eax +
jnz loc_4229B7  +
lea ecx [edi+0Ch] +
push ecx  +
mov ecx ebx +
call loc_422850  +
mov edx [ebp+arg_4] +
mov ecx [ebp+var_14] +
mov esi eax +
mov [esi+4] edx +
mov al [edi+2Ch] +
mov [esi+2Ch] al +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_422994  +
mov [ebp+var_14] esi +
mov edx [edi] +
push esi  +
push edx  +
mov ecx ebx +
mov [ebp+var_4] 0 +
call sub_422930  +
mov [esi] eax +
mov eax [edi+8] +
push esi  +
push eax  +
mov ecx ebx +
call sub_422930  +
mov [esi+8] eax +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+4] +
mov eax [eax+4] +
push esi  +
push edi  +
mov esi ecx +
mov edi [esi+4] +
push edi  +
push eax  +
call sub_422930  +
mov [edi+4] eax +
mov ecx [ebx+8] +
mov edx [esi+4] +
mov [esi+8] ecx +
mov eax [edx+4] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_422A58  +
mov ecx [eax] +
cmp byte ptr [ecx+2Dh] 0 +
jnz loc_422A32  +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+2Dh] 0 +
jz loc_422A28  +
mov [edx] eax +
mov esi [esi+4] +
mov ecx [esi+4] +
mov eax [ecx+8] +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_422A4E  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+2Dh] 0 +
jz loc_422A43  +
pop edi  +
mov [esi+8] ecx +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov [edx] edx +
mov esi [esi+4] +
pop edi  +
mov [esi+8] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43F638  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
mov [ebp-14h] esi +
xor edi edi +
push 30h  +
mov [esi+8] edi +
call sub_425CDC  +
add esp 4 +
cmp eax edi +
jz loc_422B15  +
mov [esi+4] eax +
mov [eax] eax +
mov eax [esi+4] +
mov [eax+4] eax +
mov eax [esi+4] +
mov [eax+8] eax +
mov ecx [esi+4] +
mov al 1 +
mov [ecx+2Ch] al +
mov edx [esi+4] +
mov [edx+2Dh] al +
mov [ebp-4] edi +
mov [ebp-4] al +
mov eax [ebp+8] +
push eax  +
mov ecx esi +
call sub_4229F0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp-14h] +
mov eax [ecx+4] +
mov edx [eax] +
push eax  +
push edx  +
lea edx [ebp+8] +
push edx  +
call sub_40A3B0  +
xor edi edi +
push edi  +
push edi  +
call sub_425C90  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-24h] +
mov [ebp-18h] edi +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-24h] +
push ecx  +
mov dword ptr [ebp-24h] offset off_4419DC +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43F67B  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
xor ebx ebx +
mov [ebp+var_4] ebx +
lea edi [esi+3Ch] +
mov [ebp+var_14] edi +
mov eax [edi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_18] +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 2 +
call sub_40A3B0  +
mov ecx [edi+4] +
push ecx  +
call sub_42520B  +
mov edi 10h +
add esp 4 +
cmp [esi+30h] edi +
jb loc_422BB0  +
mov edx [esi+1Ch] +
push edx  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+30h] 0Fh +
mov [esi+2Ch] ebx +
mov [esi+1Ch] bl +
cmp [esi+14h] edi +
jb loc_422BCD  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] ebx +
mov [esi] bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov esi ecx +
call sub_402110  +
push 0FFFFFFFFh  +
push 0  +
lea eax [edi+1Ch] +
push eax  +
lea ecx [esi+1Ch] +
call sub_402110  +
mov ecx [edi+38h] +
lea eax [edi+3Ch] +
lea ebx [esi+3Ch] +
mov [esi+38h] ecx +
cmp ebx eax +
jz loc_422C42  +
mov eax [ebx+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea edx [ebp+arg_0] +
push edx  +
mov ecx ebx +
call sub_40A3B0  +
lea eax [edi+3Ch] +
push eax  +
mov ecx ebx +
call sub_4229F0  +
mov al [edi+4Ch] +
mov [esi+4Ch] al +
mov cl [edi+4Dh] +
pop edi  +
mov [esi+4Dh] cl +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F6B3  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push edi  +
mov byte ptr [esi] 0 +
call sub_402110  +
push 0FFFFFFFFh  +
lea ecx [esi+1Ch] +
push 0  +
lea eax [edi+1Ch] +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov [ebp+var_4] 0 +
mov byte ptr [ecx] 0 +
call sub_402110  +
mov ecx [edi+38h] +
lea edx [edi+3Ch] +
mov [esi+38h] ecx +
push edx  +
lea ecx [esi+3Ch] +
mov byte ptr [ebp+var_4] 1 +
call loc_422A70  +
mov al [edi+4Ch] +
mov [esi+4Ch] al +
mov cl [edi+4Dh] +
mov [esi+4Dh] cl +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43F6E3  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-14h] esi +
xor ebx ebx +
mov eax 0Fh +
mov [esi+14h] eax +
mov [esi+10h] ebx +
mov [esi] bl +
mov [esi+30h] eax +
mov [esi+2Ch] ebx +
mov [ebp-4] ebx +
mov [esi+1Ch] bl +
mov [esi+38h] ebx +
push 30h  +
mov byte ptr [ebp-4] 1 +
mov [esi+44h] ebx +
call sub_425CDC  +
add esp 4 +
cmp eax ebx +
jz loc_422DA5  +
mov [esi+40h] eax +
mov [eax] eax +
mov eax [esi+40h] +
mov [eax+4] eax +
mov eax [esi+40h] +
mov [eax+8] eax +
mov eax [esi+40h] +
mov byte ptr [eax+2Ch] 1 +
mov ecx [esi+40h] +
mov byte ptr [ecx+2Dh] 1 +
mov [esi+4Ch] bx +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
lea edx [ebp-10h] +
push edx  +
lea ecx [ebp-20h] +
mov [ebp-10h] ebx +
call sub_4252D5  +
push offset unk_44B0F0  +
lea eax [ebp-20h] +
push eax  +
mov dword ptr [ebp-20h] offset off_4419DC +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43F70B  +
mov eax large fs:0 +
push eax  +
sub esp 420h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+14h] 10h +
mov esi ecx +
jb loc_422E0B  +
mov eax [eax] +
lea ecx [ebp+var_410] +
push ecx  +
push eax  +
call sub_41A6D0  +
add esp 8 +
test eax eax +
jz loc_422EC8  +
mov edi [esi+14h] +
mov eax [esi+10h] +
lea edx [ebp+var_410] +
push edx  +
lea ebx [esi+10h] +
push edi  +
push eax  +
call sub_4227E0  +
add esp 0Ch +
cmp eax edi +
jnz loc_422EC8  +
lea eax [ebp+var_410] +
push eax  +
push offset aAddingSearchPa  +
push offset unk_446258  +
push 4  +
push esi  +
call sub_4225D0  +
add esp 14h +
xor esi esi +
lea eax [ebp+var_410] +
mov [ebp+var_418] 0Fh +
mov [ebp+var_41C] esi +
mov byte ptr [ebp+var_42C] 0 +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_422E83  +
sub eax edx +
push eax  +
lea ecx [ebp+var_410] +
push ecx  +
lea ecx [ebp+var_42C] +
call sub_402230  +
lea edx [ebp+var_42C] +
push edx  +
mov ecx ebx +
mov [ebp+var_4] esi +
call sub_40F280  +
cmp [ebp+var_418] 10h +
jb loc_422EC8  +
mov eax [ebp+var_42C] +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_43F748  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [esi+1Ch] +
mov [ebp+var_4] 0 +
call sub_422B40  +
cmp dword ptr [esi+14h] 10h +
jb loc_422F39  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43F778  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx+8] +
mov edi [ebp+arg_C] +
cmp eax 25ED096h +
jb loc_422FDC  +
lea esi [edi+0Ch] +
mov [ebp+arg_4] esi +
xor ebx ebx +
lea ecx [esi+1Ch] +
mov [ebp+var_4] ebx +
call sub_422B40  +
cmp dword ptr [esi+14h] 10h +
mov [ebp+var_4] 0FFFFFFFFh +
jb loc_422FBD  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] ebx +
push edi  +
mov [esi] bl +
call sub_42520B  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_424688  +
inc eax  +
mov [ecx+8] eax +
mov eax [ebp+arg_8] +
mov [edi+4] eax +
mov edx [ecx+4] +
xor ebx ebx +
cmp eax edx +
jnz loc_422FFF  +
mov [edx+4] edi +
mov edx [ecx+4] +
mov [edx] edi +
mov eax [ecx+4] +
mov [eax+8] edi +
jmp loc_42301F  +
cmp byte ptr [ebp+arg_4] bl +
jz loc_423011  +
mov [eax] edi +
mov edx [ecx+4] +
cmp eax [edx] +
jnz loc_42301F  +
mov [edx] edi +
jmp loc_42301F  +
mov [eax+8] edi +
mov edx [ecx+4] +
cmp eax [edx+8] +
jnz loc_42301F  +
mov [edx+8] edi +
mov edx [edi+4] +
mov eax edi +
cmp [edx+78h] bl +
jnz loc_4231BF  +
lea ecx [ecx+0] +
mov edx [eax+4] +
mov esi [edx+4] +
cmp edx [esi] +
jnz loc_4230FF  +
mov esi [esi+8] +
cmp [esi+78h] bl +
jnz loc_423062  +
mov byte ptr [edx+78h] 1 +
mov byte ptr [esi+78h] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+78h] bl +
mov eax [eax+4] +
mov eax [eax+4] +
jmp loc_4231B3  +
cmp eax [edx+8] +
jnz loc_4230A1  +
mov eax edx +
mov edx [eax+8] +
mov esi [edx] +
mov [eax+8] esi +
mov esi [edx] +
cmp [esi+79h] bl +
jnz loc_42307B  +
mov [esi+4] eax +
mov esi [eax+4] +
mov [edx+4] esi +
mov esi [ecx+4] +
cmp eax [esi+4] +
jnz loc_42308E  +
mov [esi+4] edx +
jmp loc_42309C  +
mov esi [eax+4] +
cmp eax [esi] +
jnz loc_423099  +
mov [esi] edx +
jmp loc_42309C  +
mov [esi+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov edx [eax+4] +
mov byte ptr [edx+78h] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+78h] bl +
mov edx [eax+4] +
mov edx [edx+4] +
mov esi [edx] +
mov edi [esi+8] +
mov [edx] edi +
mov edi [esi+8] +
cmp [edi+79h] bl +
jnz loc_4230C9  +
mov [edi+4] edx +
mov edi [edx+4] +
mov [esi+4] edi +
mov edi [ecx+4] +
cmp edx [edi+4] +
jnz loc_4230E2  +
mov [edi+4] esi +
mov [esi+8] edx +
jmp loc_4231AD  +
mov edi [edx+4] +
cmp edx [edi+8] +
jnz loc_4230F5  +
mov [edi+8] esi +
mov [esi+8] edx +
jmp loc_4231AD  +
mov [edi] esi +
mov [esi+8] edx +
jmp loc_4231AD  +
mov esi [esi] +
cmp [esi+78h] bl +
jnz loc_423122  +
mov byte ptr [edx+78h] 1 +
mov byte ptr [esi+78h] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+78h] bl +
mov eax [eax+4] +
mov eax [eax+4] +
jmp loc_4231B3  +
cmp eax [edx] +
jnz loc_423162  +
mov eax edx +
mov edx [eax] +
mov esi [edx+8] +
mov [eax] esi +
mov esi [edx+8] +
cmp [esi+79h] bl +
jnz loc_42313A  +
mov [esi+4] eax +
mov esi [eax+4] +
mov [edx+4] esi +
mov esi [ecx+4] +
cmp eax [esi+4] +
jnz loc_42314D  +
mov [esi+4] edx +
jmp loc_42315C  +
mov esi [eax+4] +
cmp eax [esi+8] +
jnz loc_42315A  +
mov [esi+8] edx +
jmp loc_42315C  +
mov [esi] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov edx [eax+4] +
mov byte ptr [edx+78h] 1 +
mov edx [eax+4] +
mov edx [edx+4] +
mov [edx+78h] bl +
mov edx [eax+4] +
mov edx [edx+4] +
mov esi [edx+8] +
mov edi [esi] +
mov [edx+8] edi +
mov edi [esi] +
cmp [edi+79h] bl +
jnz loc_42318A  +
mov [edi+4] edx +
mov edi [edx+4] +
mov [esi+4] edi +
mov edi [ecx+4] +
cmp edx [edi+4] +
jnz loc_42319D  +
mov [edi+4] esi +
jmp loc_4231AB  +
mov edi [edx+4] +
cmp edx [edi] +
jnz loc_4231A8  +
mov [edi] esi +
jmp loc_4231AB  +
mov [edi+8] esi +
mov [esi] edx +
mov edi [ebp+arg_C] +
mov [edx+4] esi +
mov edx [eax+4] +
cmp [edx+78h] bl +
jz loc_423030  +
mov eax [ecx+4] +
mov ecx [eax+4] +
mov eax [ebp+arg_0] +
mov byte ptr [ecx+78h] 1 +
mov [eax] edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43F7B9  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
push 7Ch  +
call sub_425CDC  +
mov edi eax +
xor eax eax +
add esp 4 +
mov [ebp-14h] edi +
cmp edi eax +
jz loc_4232B0  +
mov ecx [esi+4] +
mov [edi] ecx +
mov edx [esi+4] +
mov [edi+4] edx +
mov ecx [esi+4] +
lea esi [edi+0Ch] +
mov [edi+8] ecx +
mov [edi+78h] ax +
mov [ebp-4] eax +
mov [ebp-18h] esi +
mov [ebp-1Ch] esi +
mov byte ptr [ebp-4] 1 +
cmp esi eax +
jz loc_423285  +
mov ebx [ebp+8] +
push 0FFFFFFFFh  +
push eax  +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] eax +
push ebx  +
mov ecx esi +
mov [esi] al +
call sub_402110  +
add ebx 1Ch +
push ebx  +
lea ecx [esi+1Ch] +
mov byte ptr [ebp-4] 2 +
call sub_422C60  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp-14h] +
push edx  +
call sub_42520B  +
add esp 4 +
xor eax eax +
push eax  +
push eax  +
call sub_425C90  +
mov [ebp+8] eax +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-28h] +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-28h] +
push ecx  +
mov dword ptr [ebp-28h] offset off_4419DC +
call sub_425C90  +
push 0FFFFFFFFh  +
push offset loc_43F7E8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ebx [ebp+arg_4] +
cmp byte ptr [ebx+79h] 0 +
jz loc_42331E  +
push offset aInvalidMapSetT  +
call sub_4246D5  +
lea ecx [ebp+arg_4] +
mov [ebp+var_14] ebx +
call sub_4226D0  +
mov ecx [ebx] +
cmp byte ptr [ecx+79h] 0 +
jz loc_423336  +
mov edi [ebx+8] +
jmp loc_42334D  +
mov eax [ebx+8] +
cmp byte ptr [eax+79h] 0 +
jz loc_423343  +
mov edi ecx +
jmp loc_42334D  +
mov eax [ebp+arg_4] +
mov edi [eax+8] +
cmp eax ebx +
jnz loc_4233BF  +
cmp byte ptr [edi+79h] 0 +
mov esi [ebx+4] +
jnz loc_423359  +
mov [edi+4] esi +
mov ecx [ebp+var_10] +
mov eax [ecx+4] +
cmp [eax+4] ebx +
jnz loc_423369  +
mov [eax+4] edi +
jmp loc_423374  +
cmp [esi] ebx +
jnz loc_423371  +
mov [esi] edi +
jmp loc_423374  +
mov [esi+8] edi +
mov eax [ecx+4] +
cmp [eax] ebx +
jnz loc_423396  +
cmp byte ptr [edi+79h] 0 +
jz loc_423385  +
mov eax esi +
jmp loc_423391  +
push edi  +
call sub_422650  +
mov ecx [ebp+var_10] +
add esp 4 +
mov edx [ecx+4] +
mov [edx] eax +
mov ecx [ecx+4] +
mov [ebp+var_18] ecx +
cmp [ecx+8] ebx +
jnz loc_423419  +
cmp byte ptr [edi+79h] 0 +
jz loc_4233AE  +
mov eax esi +
mov [ecx+8] eax +
jmp loc_423419  +
push edi  +
call sub_422630  +
mov ecx [ebp+var_18] +
add esp 4 +
mov [ecx+8] eax +
jmp loc_423419  +
mov [ecx+4] eax +
mov ecx [ebx] +
mov [eax] ecx +
cmp eax [ebx+8] +
jnz loc_4233CF  +
mov esi eax +
jmp loc_4233E9  +
cmp byte ptr [edi+79h] 0 +
mov esi [eax+4] +
jnz loc_4233DB  +
mov [edi+4] esi +
mov [esi] edi +
mov ecx [ebx+8] +
mov [eax+8] ecx +
mov edx [ebx+8] +
mov [edx+4] eax +
mov ecx [ebp+var_10] +
mov ecx [ecx+4] +
cmp [ecx+4] ebx +
jnz loc_4233F9  +
mov [ecx+4] eax +
jmp loc_423407  +
mov ecx [ebx+4] +
cmp [ecx] ebx +
jnz loc_423404  +
mov [ecx] eax +
jmp loc_423407  +
mov [ecx+8] eax +
mov edx [ebx+4] +
mov [eax+4] edx +
mov dl [ebx+78h] +
mov cl [eax+78h] +
mov [eax+78h] dl +
mov [ebx+78h] cl +
mov eax [ebp+var_14] +
mov bl 1 +
cmp [eax+78h] bl +
jnz loc_423521  +
mov ecx [ebp+var_10] +
mov edx [ecx+4] +
cmp edi [edx+4] +
jz loc_42351E  +
cmp [edi+78h] bl +
jnz loc_42351E  +
mov eax [esi] +
cmp edi eax +
jnz loc_4234AA  +
mov eax [esi+8] +
cmp byte ptr [eax+78h] 0 +
jnz loc_423461  +
mov [eax+78h] bl +
push esi  +
mov byte ptr [esi+78h] 0 +
call sub_422720  +
mov eax [esi+8] +
mov ecx [ebp+var_10] +
cmp byte ptr [eax+79h] 0 +
jnz loc_4234DB  +
mov edx [eax] +
cmp [edx+78h] bl +
jnz loc_423476  +
mov edx [eax+8] +
cmp [edx+78h] bl +
jz loc_4234D7  +
mov edx [eax+8] +
cmp [edx+78h] bl +
jnz loc_423493  +
mov edx [eax] +
mov [edx+78h] bl +
push eax  +
mov byte ptr [eax+78h] 0 +
call sub_422780  +
mov eax [esi+8] +
mov ecx [ebp+var_10] +
mov dl [esi+78h] +
mov [eax+78h] dl +
mov [esi+78h] bl +
mov eax [eax+8] +
push esi  +
mov [eax+78h] bl +
call sub_422720  +
jmp loc_42351E  +
cmp byte ptr [eax+78h] 0 +
jnz loc_4234C2  +
mov [eax+78h] bl +
push esi  +
mov byte ptr [esi+78h] 0 +
call sub_422780  +
mov eax [esi] +
mov ecx [ebp+var_10] +
cmp byte ptr [eax+79h] 0 +
jnz loc_4234DB  +
mov edx [eax+8] +
cmp [edx+78h] bl +
jnz loc_4234EE  +
mov edx [eax] +
cmp [edx+78h] bl +
jnz loc_4234EE  +
mov byte ptr [eax+78h] 0 +
mov eax [ecx+4] +
mov edi esi +
mov esi [esi+4] +
cmp edi [eax+4] +
jnz loc_423436  +
jmp loc_42351E  +
mov edx [eax] +
cmp [edx+78h] bl +
jnz loc_42350A  +
mov edx [eax+8] +
mov [edx+78h] bl +
push eax  +
mov byte ptr [eax+78h] 0 +
call sub_422720  +
mov eax [esi] +
mov ecx [ebp+var_10] +
mov dl [esi+78h] +
mov [eax+78h] dl +
mov [esi+78h] bl +
mov eax [eax] +
push esi  +
mov [eax+78h] bl +
call sub_422780  +
mov [edi+78h] bl +
mov esi [ebp+var_14] +
add esi 0Ch +
mov [ebp+var_18] esi +
xor edi edi +
lea ecx [esi+1Ch] +
mov [ebp+var_4] edi +
call sub_422B40  +
cmp dword ptr [esi+14h] 10h +
jb loc_423548  +
mov ecx [esi] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov edx [ebp+var_14] +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] edi +
push edx  +
mov byte ptr [esi] 0 +
call sub_42520B  +
mov ecx [ebp+var_10] +
mov eax [ecx+8] +
add esp 4 +
cmp eax edi +
jbe loc_42356F  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43F833  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov ebx [ebp+arg_0] +
cmp byte ptr [ebx+79h] 0 +
mov esi ebx +
jnz loc_4236AF  +
jmp loc_4235D6  +
mov ebx [ebp+arg_0] +
mov esi [ebp+var_10] +
mov eax [esi+8] +
mov ecx [ebp+var_14] +
push eax  +
call sub_423590  +
mov ecx [esi] +
add ebx 0Ch +
mov [ebp+var_10] ecx +
mov [ebp+var_18] ebx +
lea esi [ebx+1Ch] +
mov [ebp+var_4] 0 +
mov [ebp+var_1C] esi +
lea edi [esi+3Ch] +
mov [ebp+var_20] edi +
mov eax [edi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea edx [ebp+var_24] +
push edx  +
mov ecx edi +
mov byte ptr [ebp+var_4] 3 +
call sub_40A3B0  +
mov edi [edi+4] +
push edi  +
call sub_42520B  +
mov edi 10h +
add esp 4 +
cmp [esi+30h] edi +
jb loc_423638  +
mov eax [esi+1Ch] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+30h] 0Fh +
mov dword ptr [esi+2Ch] 0 +
mov byte ptr [esi+1Ch] 0 +
cmp [esi+14h] edi +
jb loc_42365A  +
mov eax [esi] +
push eax  +
call sub_42520B  +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
cmp [ebx+14h] edi +
jb loc_423682  +
mov eax [ebx] +
push eax  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+arg_0] +
mov dword ptr [ebx+14h] 0Fh +
mov dword ptr [ebx+10h] 0 +
push ecx  +
mov byte ptr [ebx] 0 +
call sub_42520B  +
mov eax [ebp+var_10] +
add esp 4 +
cmp byte ptr [eax+79h] 0 +
mov [ebp+arg_0] eax +
jz loc_4235D0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F858  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
mov [ebp+var_18] edx +
mov eax [edx+4] +
mov ecx [eax+4] +
mov ebx [ebp+arg_4] +
mov edi eax +
add ebx 0Ch +
cmp byte ptr [ecx+79h] 0 +
mov al 1 +
mov [ebp+var_10] ecx +
mov byte ptr [ebp+var_14] al +
jnz loc_4237FA  +
jmp loc_423723  +
mov ecx [ebp+var_10] +
cmp [ebp+arg_8] 0 +
mov [ebp+var_1C] ecx +
lea eax [ecx+0Ch] +
jz loc_42378C  +
cmp dword ptr [ebx+14h] 10h +
jb loc_423739  +
mov edx [ebx] +
jmp loc_42373B  +
mov edx ebx +
mov esi [eax+10h] +
mov ecx esi +
cmp ecx esi +
jnb $+2  +
mov edi [ebx+10h] +
mov ecx esi +
cmp esi edi +
jb loc_42374F  +
mov ecx edi +
cmp dword ptr [eax+14h] 10h +
jb loc_423757  +
mov eax [eax] +
push ecx  +
push edx  +
push eax  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_423782  +
cmp esi edi +
jnb loc_423779  +
or eax 0FFFFFFFFh +
test eax eax +
sets al  +
test al al +
setz al  +
jmp loc_4237D4  +
xor eax eax +
cmp esi edi +
setnz al  +
test eax eax +
sets al  +
test al al +
setz al  +
jmp loc_4237D4  +
cmp dword ptr [eax+14h] 10h +
mov edi [eax+10h] +
jb loc_423797  +
mov eax [eax] +
mov esi [ebx+10h] +
mov ecx esi +
mov edx esi +
cmp esi edi +
jb loc_4237A4  +
mov edx edi +
cmp dword ptr [ebx+14h] 10h +
jb loc_4237AE  +
mov ecx [ebx] +
jmp loc_4237B0  +
mov ecx ebx +
push edx  +
push eax  +
push ecx  +
call sub_409580  +
add esp 0Ch +
test eax eax +
jnz loc_4237D1  +
cmp esi edi +
jnb loc_4237C8  +
or eax 0FFFFFFFFh +
jmp loc_4237CF  +
xor eax eax +
cmp esi edi +
setnz al  +
test eax eax +
sets al  +
mov ecx [ebp+var_10] +
mov byte ptr [ebp+var_14] al +
test al al +
jz loc_4237E2  +
mov edx [ecx] +
jmp loc_4237E5  +
mov edx [ecx+8] +
mov ecx edx +
cmp byte ptr [ecx+79h] 0 +
mov [ebp+var_10] edx +
jz loc_423720  +
mov edi [ebp+var_1C] +
mov edx [ebp+var_18] +
mov esi edi +
mov dword ptr [ebp+arg_8] esi +
test al al +
jz loc_423843  +
mov eax [edx+4] +
lea ecx [ebp+arg_8] +
cmp edi [eax] +
jnz loc_42383B  +
mov eax [ebp+arg_4] +
push eax  +
push edi  +
push 1  +
push ecx  +
mov ecx edx +
call sub_422F60  +
mov edx [eax] +
mov eax [ebp+arg_0] +
mov [eax] edx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
call sub_422670  +
mov esi dword ptr [ebp+arg_8] +
cmp dword ptr [ebx+14h] 10h +
mov edx [ebx+10h] +
lea ecx [esi+0Ch] +
jb loc_423853  +
mov eax [ebx] +
jmp loc_423855  +
mov eax ebx +
push edx  +
push eax  +
mov eax [ecx+10h] +
push eax  +
push 0  +
call sub_40AA10  +
test eax eax +
jns loc_42389A  +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_18] +
push edi  +
push edx  +
lea eax [ebp+arg_4] +
push eax  +
call sub_422F60  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov dword ptr [ebp+arg_8] ebx +
xor edi edi +
lea ecx [ebx+1Ch] +
mov [ebp+var_4] edi +
call sub_422B40  +
cmp dword ptr [ebx+14h] 10h +
jb loc_4238BB  +
mov edx [ebx] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax [ebp+arg_4] +
mov dword ptr [ebx+14h] 0Fh +
mov [ebx+10h] edi +
push eax  +
mov byte ptr [ebx] 0 +
call sub_42520B  +
mov eax [ebp+arg_0] +
add esp 4 +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 8 +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi ecx +
cmp dword ptr [esi+8] 0 +
mov eax [esi+4] +
push edi  +
lea edi [ebx+0Ch] +
jnz loc_423932  +
mov edi [ebp+arg_0] +
push ebx  +
push eax  +
push 1  +
push edi  +
call sub_422F60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_42397B  +
cmp dword ptr [ecx+20h] 10h +
lea eax [ecx+0Ch] +
mov ecx [eax+10h] +
jb loc_423947  +
mov eax [eax] +
push ecx  +
mov ecx [edi+10h] +
push eax  +
push ecx  +
push 0  +
mov ecx edi +
call sub_40AA10  +
test eax eax +
jns loc_423A9C  +
mov edx [ebp+arg_4] +
mov edi [ebp+arg_0] +
push ebx  +
push edx  +
push 1  +
push edi  +
mov ecx esi +
call sub_422F60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp ecx eax +
jnz loc_4239B6  +
mov eax [eax+8] +
add eax 0Ch +
push edi  +
push eax  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_423A9C  +
mov eax [esi+4] +
mov ecx [eax+8] +
mov edi [ebp+arg_0] +
push ebx  +
push ecx  +
push 0  +
push edi  +
mov ecx esi +
call sub_422F60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
add ecx 0Ch +
push ecx  +
push edi  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_423A24  +
mov edx [ebp+arg_4] +
lea ecx [ebp+arg_8] +
mov [ebp+arg_8] edx +
call sub_422670  +
mov eax [ebp+arg_8] +
push edi  +
add eax 0Ch +
push eax  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_423A24  +
mov eax [ebp+arg_8] +
mov ecx [eax+8] +
cmp byte ptr [ecx+79h] 0 +
mov edi [ebp+arg_0] +
push ebx  +
mov ecx esi +
jz loc_423A0D  +
push eax  +
push 0  +
push edi  +
call sub_422F60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [ebp+arg_4] +
push edx  +
push 1  +
push edi  +
call sub_422F60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_4] +
push edi  +
add eax 0Ch +
push eax  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_423A9C  +
mov ecx [ebp+arg_4] +
mov [ebp+arg_8] ecx +
lea ecx [ebp+arg_8] +
call sub_4226D0  +
mov eax [ebp+arg_8] +
cmp eax [esi+4] +
jz loc_423A60  +
add eax 0Ch +
push eax  +
push edi  +
mov ecx esi +
call sub_40AC60  +
test al al +
jz loc_423A9C  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [ecx+8] +
cmp byte ptr [edx+79h] 0 +
mov edi [ebp+arg_0] +
push ebx  +
jz loc_423A86  +
push ecx  +
push 0  +
push edi  +
mov ecx esi +
call sub_422F60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push eax  +
push 1  +
push edi  +
mov ecx esi +
call sub_422F60  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push 0  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
mov ecx esi +
call sub_4236D0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov edx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_423B0C  +
cmp edx eax +
jnz loc_423B0C  +
mov eax [eax+4] +
push eax  +
mov ecx esi +
call sub_423590  +
mov eax [esi+4] +
mov [eax+4] eax +
mov eax [esi+4] +
mov [eax] eax +
mov eax [esi+4] +
mov [eax+8] eax +
mov ecx [esi+4] +
mov eax [ebp+arg_0] +
mov dword ptr [esi+8] 0 +
mov edx [ecx] +
mov [eax] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp ecx edx +
jz loc_423B72  +
cmp byte ptr [ecx+79h] 0 +
mov edx ecx +
jnz loc_423B5E  +
mov eax [ecx+8] +
cmp byte ptr [eax+79h] 0 +
jnz loc_423B3F  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+79h] 0 +
jnz loc_423B3A  +
jmp loc_423B30  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+79h] 0 +
jz loc_423B30  +
mov [ebp+arg_4] ecx +
jmp loc_423B5E  +
mov eax [ecx+4] +
cmp byte ptr [eax+79h] 0 +
jnz loc_423B5B  +
cmp ecx [eax+8] +
jnz loc_423B5B  +
mov ecx eax +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
cmp byte ptr [eax+79h] 0 +
jz loc_423B48  +
mov [ebp+arg_4] eax +
push edx  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_4232E0  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_423B10  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_43F8A3  +
mov eax large fs:0 +
push eax  +
sub esp 0C4h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_421D80  +
mov ebx eax +
cmp ebx [esi+4] +
jz loc_423BE5  +
cmp dword ptr [ebx+20h] 10h +
mov ecx [ebx+1Ch] +
lea eax [ebx+0Ch] +
jb loc_423BCE  +
mov eax [eax] +
push ecx  +
push eax  +
mov eax [edi+10h] +
push eax  +
push 0  +
mov ecx edi +
call sub_40AA10  +
test eax eax +
jns loc_423C93  +
lea ecx [ebp+var_CC] +
call loc_422D10  +
mov [ebp+var_D0] eax +
xor eax eax +
push 0FFFFFFFFh  +
push eax  +
push edi  +
lea ecx [ebp+var_7C] +
mov [ebp+var_4] eax +
mov [ebp+var_68] 0Fh +
mov [ebp+var_6C] eax +
mov byte ptr [ebp+var_7C] al +
call sub_402110  +
mov ecx [ebp+var_D0] +
push ecx  +
lea ecx [ebp+var_60] +
mov byte ptr [ebp+var_4] 1 +
call sub_422C60  +
lea edx [ebp+var_7C] +
push edx  +
mov ecx esi +
mov byte ptr [ebp+var_4] 2 +
call loc_4231F0  +
push eax  +
push ebx  +
lea eax [ebp+var_D0] +
push eax  +
mov ecx esi +
call sub_423900  +
mov esi [ebp+var_D0] +
lea ecx [ebp+var_60] +
mov byte ptr [ebp+var_4] 3 +
call sub_422B40  +
cmp [ebp+var_68] 10h +
jb loc_423C6A  +
mov ecx [ebp+var_7C] +
push ecx  +
call sub_42520B  +
add esp 4 +
lea ecx [ebp+var_CC] +
mov [ebp+var_68] 0Fh +
mov [ebp+var_6C] 0 +
mov byte ptr [ebp+var_7C] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_422B40  +
lea eax [esi+28h] +
jmp loc_423C96  +
lea eax [ebx+28h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_43F93E  +
mov eax large fs:0 +
push eax  +
sub esp 8BCh +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov eax [ebp+arg_4] +
xor ebx ebx +
push esi  +
mov edi ecx +
mov [ebp+var_8C0] esi +
mov [ebp+var_8C4] eax +
mov [ebp+var_8B5] bl +
call sub_421D80  +
mov [ebp+var_8BC] eax +
cmp eax [edi+4] +
jz loc_423D43  +
mov ecx [eax+1Ch] +
add eax 0Ch +
cmp dword ptr [eax+14h] 10h +
jb loc_423D29  +
mov eax [eax] +
push ecx  +
mov ecx [esi+10h] +
push eax  +
push ecx  +
push ebx  +
mov ecx esi +
call sub_40AA10  +
test eax eax +
js loc_423D43  +
lea eax [ebp+var_8BC] +
jmp loc_423D52  +
mov edx [edi+4] +
mov [ebp+var_8C8] edx +
lea eax [ebp+var_8C8] +
mov eax [eax] +
cmp eax [edi+4] +
jz loc_423D63  +
inc byte ptr [eax+75h]  +
mov [ebp+var_8B5] 1 +
lea ecx [ebp+var_8B4] +
call loc_422D10  +
mov [ebp+var_4] ebx +
mov [ebp+var_818] 0Fh +
mov [ebp+var_81C] ebx +
mov [ebp+MultiByteStr] 0 +
cmp [ebp+var_8B5] 0 +
mov eax [edi+10h] +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_8BC] eax +
jnz loc_42436B  +
mov ebx 10h +
cmp dword ptr [edi+30h] 0 +
jnz loc_423DEF  +
mov ecx [ebp+var_8BC] +
cmp ecx [edi+14h] +
jz loc_4242EE  +
push offset asc_441A28  +
mov edx ecx +
push edx  +
lea eax [ebp+var_864] +
push eax  +
call sub_411060  +
mov ecx [ebp+var_8C0] +
push ecx  +
push eax  +
lea edx [ebp+var_848] +
push edx  +
mov byte ptr [ebp+var_4] 2 +
call sub_411140  +
add esp 18h +
mov esi eax +
jmp loc_423E21  +
push offset asc_441A28  +
lea edx [edi+20h] +
push edx  +
lea eax [ebp+var_864] +
push eax  +
call sub_411060  +
mov ecx [ebp+var_8C0] +
push ecx  +
push eax  +
lea edx [ebp+var_848] +
push edx  +
mov byte ptr [ebp+var_4] 4 +
call sub_411140  +
add esp 18h +
mov esi eax +
lea eax [ebp+MultiByteStr] +
cmp eax esi +
jz loc_423EAA  +
cmp [ebp+var_818] ebx +
jb loc_423E42  +
mov ecx dword ptr [ebp+MultiByteStr] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_818] 0Fh +
mov [ebp+var_81C] 0 +
mov [ebp+MultiByteStr] 0 +
cmp [esi+14h] ebx +
jnb loc_423E79  +
mov eax [esi+10h] +
inc eax  +
push eax  +
lea edx [ebp+MultiByteStr] +
push esi  +
push edx  +
call loc_425800  +
add esp 0Ch +
jmp loc_423E87  +
mov eax [esi] +
mov dword ptr [ebp+MultiByteStr] eax +
mov dword ptr [esi] 0 +
mov ecx [esi+10h] +
mov [ebp+var_81C] ecx +
mov edx [esi+14h] +
mov [ebp+var_818] edx +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp [ebp+var_834] ebx +
jb loc_423EC1  +
mov eax [ebp+var_848] +
push eax  +
call sub_42520B  +
add esp 4 +
mov byte ptr [ebp+var_4] 1 +
mov byte ptr [ebp+var_848] 0 +
mov [ebp+var_838] 0 +
mov [ebp+var_834] 0Fh +
cmp [ebp+var_850] ebx +
jb loc_423EF7  +
mov ecx [ebp+var_864] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov eax dword ptr [ebp+MultiByteStr] +
cmp [ebp+var_818] ebx +
jnb loc_423F0B  +
lea eax [ebp+MultiByteStr] +
push eax  +
push offset aLookingForLibr  +
push offset unk_446258  +
push 5  +
push edi  +
call sub_4225D0  +
mov eax dword ptr [ebp+MultiByteStr] +
add esp 14h +
cmp [ebp+var_818] ebx +
jnb loc_423F35  +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_41A570  +
add esp 4 +
test eax eax +
jz loc_4240B7  +
mov eax dword ptr [ebp+MultiByteStr] +
cmp [ebp+var_818] ebx +
jnb loc_423F5A  +
lea eax [ebp+MultiByteStr] +
lea edx [ebp+var_810] +
push edx  +
push eax  +
call sub_41A6D0  +
add esp 8 +
test eax eax +
jz loc_42408D  +
lea eax [ebp+var_810] +
push eax  +
push offset aFoundLibraryS  +
push offset unk_446258  +
push 5  +
push edi  +
call sub_4225D0  +
mov eax [ebp+var_8BC] +
add esp 14h +
cmp dword ptr [edi+30h] 0 +
jz loc_423F9D  +
lea eax [edi+20h] +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_8B4] +
call sub_402110  +
lea eax [ebp+var_810] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_423FB6  +
sub eax ecx +
push eax  +
lea ecx [ebp+var_810] +
push ecx  +
lea ecx [ebp+var_898] +
call sub_402230  +
mov edx [ebp+var_8C0] +
inc [ebp+var_867]  +
push edx  +
mov ecx edi +
call sub_423B80  +
push 0FFFFFFFFh  +
mov esi eax +
push 0  +
lea eax [ebp+var_8B4] +
push eax  +
mov ecx esi +
call sub_402110  +
push 0FFFFFFFFh  +
push 0  +
lea ecx [ebp+var_898] +
push ecx  +
lea ecx [esi+1Ch] +
call sub_402110  +
mov edx [ebp+var_87C] +
lea ebx [esi+3Ch] +
lea eax [ebp+var_878] +
mov [esi+38h] edx +
cmp ebx eax +
jz loc_424046  +
mov eax [ebx+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea ecx [ebp+var_8C8] +
push ecx  +
mov ecx ebx +
call sub_40A3B0  +
lea edx [ebp+var_878] +
push edx  +
mov ecx ebx +
call sub_4229F0  +
mov al [ebp+var_868] +
mov [esi+4Ch] al +
mov cl [ebp+var_867] +
mov [esi+4Dh] cl +
mov [ebp+var_8B5] 1 +
mov ebx 10h +
mov esi [ebp+var_8C4] +
cmp dword ptr [edi+30h] 0 +
jnz loc_4242F4  +
add [ebp+var_8BC] 1Ch +
cmp [ebp+var_8B5] 0 +
jz loc_423DA7  +
jmp loc_424354  +
mov eax dword ptr [ebp+MultiByteStr] +
cmp [ebp+var_818] ebx +
jnb loc_4240A1  +
lea eax [ebp+MultiByteStr] +
push eax  +
push offset aFoundLibrarySB  +
push offset unk_446258  +
push 2  +
push edi  +
call sub_4225D0  +
add esp 14h +
cmp [ebp+var_8B5] 0 +
jnz loc_424064  +
mov esi [ebp+var_8C4] +
cmp dword ptr [esi+10h] 0 +
jz loc_42406A  +
cmp dword ptr [edi+30h] 0 +
push offset asc_441A28  +
jnz loc_42415E  +
mov edx [ebp+var_8BC] +
push edx  +
lea eax [ebp+var_864] +
push eax  +
call sub_411060  +
push esi  +
push eax  +
lea ecx [ebp+var_848] +
push ecx  +
mov byte ptr [ebp+var_4] 6 +
call sub_411140  +
add esp 18h +
push eax  +
lea ecx [ebp+MultiByteStr] +
mov byte ptr [ebp+var_4] 7 +
call sub_402420  +
cmp [ebp+var_834] ebx +
jb loc_42412A  +
mov edx [ebp+var_848] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_834] 0Fh +
mov [ebp+var_838] 0 +
mov byte ptr [ebp+var_848] 0 +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_850] ebx +
jb loc_4241E0  +
mov eax [ebp+var_864] +
push eax  +
jmp loc_4241D8  +
lea ecx [edi+20h] +
push ecx  +
lea edx [ebp+var_864] +
push edx  +
call sub_411060  +
push esi  +
push eax  +
lea eax [ebp+var_848] +
push eax  +
mov byte ptr [ebp+var_4] 8 +
call sub_411140  +
add esp 18h +
push eax  +
lea ecx [ebp+MultiByteStr] +
mov byte ptr [ebp+var_4] 9 +
call sub_402420  +
cmp [ebp+var_834] ebx +
jb loc_4241AA  +
mov ecx [ebp+var_848] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_834] 0Fh +
mov [ebp+var_838] 0 +
mov byte ptr [ebp+var_848] 0 +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_850] ebx +
jb loc_4241E0  +
mov edx [ebp+var_864] +
push edx  +
call sub_42520B  +
add esp 4 +
mov eax dword ptr [ebp+MultiByteStr] +
cmp [ebp+var_818] ebx +
jnb loc_4241F4  +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_41A570  +
add esp 4 +
test eax eax +
jz loc_42406A  +
mov eax dword ptr [ebp+MultiByteStr] +
cmp [ebp+var_818] ebx +
jnb loc_424219  +
lea eax [ebp+MultiByteStr] +
lea ecx [ebp+var_410] +
push ecx  +
push eax  +
call sub_41A6D0  +
add esp 8 +
test eax eax +
jz loc_4242BF  +
lea edx [ebp+var_410] +
push edx  +
push offset aFoundLibraryS  +
push offset unk_446258  +
push 5  +
push edi  +
call sub_4225D0  +
mov eax [ebp+var_8BC] +
add esp 14h +
cmp dword ptr [edi+30h] 0 +
jz loc_42425C  +
lea eax [edi+20h] +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_8B4] +
call sub_402110  +
lea eax [ebp+var_410] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_424275  +
sub eax edx +
push eax  +
lea eax [ebp+var_410] +
push eax  +
lea ecx [ebp+var_898] +
call sub_402230  +
mov edx [ebp+var_8C0] +
inc [ebp+var_867]  +
lea ecx [ebp+var_8B4] +
push ecx  +
push edx  +
mov ecx edi +
call sub_423B80  +
mov ecx eax +
call sub_422BF0  +
mov [ebp+var_8B5] 1 +
jmp loc_42406A  +
mov eax dword ptr [ebp+MultiByteStr] +
cmp [ebp+var_818] ebx +
jnb loc_4242D3  +
lea eax [ebp+MultiByteStr] +
push eax  +
push offset aFoundLibrarySB  +
push offset unk_446258  +
push 2  +
push edi  +
call sub_4225D0  +
add esp 14h +
jmp loc_42406A  +
mov esi [ebp+var_8C4] +
cmp [ebp+var_8B5] 0 +
mov eax [ebp+var_8C0] +
jnz loc_424354  +
cmp dword ptr [esi+10h] 0 +
jz loc_424335  +
cmp [esi+14h] ebx +
jb loc_424312  +
mov ecx [esi] +
jmp loc_424314  +
mov ecx esi +
cmp [eax+14h] ebx +
jb loc_42431B  +
mov eax [eax] +
push ecx  +
push eax  +
mov eax dword_44FF1C +
push offset aFailedToFindSO  +
push eax  +
push 3  +
push edi  +
call sub_4225D0  +
add esp 18h +
jmp loc_424354  +
cmp [eax+14h] ebx +
jb loc_42433C  +
mov eax [eax] +
mov ecx dword_44FF1C +
push eax  +
push offset aFailedToFindS  +
push ecx  +
push 3  +
push edi  +
call sub_4225D0  +
add esp 14h +
cmp [ebp+var_818] ebx +
jb loc_42436B  +
mov edx dword ptr [ebp+MultiByteStr] +
push edx  +
call sub_42520B  +
add esp 4 +
lea ecx [ebp+var_8B4] +
mov [ebp+var_818] 0Fh +
mov [ebp+var_81C] 0 +
mov [ebp+MultiByteStr] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_422B40  +
mov al [ebp+var_8B5] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_43F980  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
xor ebx ebx +
cmp [esi+3Ch] bl +
jnz loc_42448D  +
push ebx  +
mov edi 0Fh +
push offset unk_441AD0  +
lea ecx [ebp+var_48] +
mov [ebp+var_34] edi +
mov [ebp+var_38] ebx +
mov byte ptr [ebp+var_48] bl +
call sub_402230  +
mov edx off_44FEF0 +
mov eax edx +
mov [ebp+var_18] edi +
mov [ebp+var_4] ebx +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
lea edi [eax+1] +
jmp loc_424430  +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_424430  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_2C] +
call sub_402230  +
lea eax [ebp+var_48] +
push eax  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp+var_4] 1 +
call sub_423CC0  +
mov edi 10h +
mov [esi+3Ch] al +
cmp [ebp+var_18] edi +
jb loc_42446F  +
mov edx [ebp+var_2C] +
push edx  +
call sub_42520B  +
add esp 4 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_2C] bl +
cmp [ebp+var_34] edi +
jb loc_42448D  +
mov eax [ebp+var_48] +
push eax  +
call sub_42520B  +
add esp 4 +
mov al [esi+3Ch] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_425BB3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_43F9B8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_14] +
push eax  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_423AC0  +
mov ecx [esi+4] +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_43F9FE  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-14h] esi +
xor ebx ebx +
push 7Ch  +
mov [esi+8] ebx +
call sub_425CDC  +
add esp 4 +
cmp eax ebx +
jz loc_4245A9  +
mov [esi+4] eax +
mov [eax] eax +
mov eax [esi+4] +
mov [eax+4] eax +
mov eax [esi+4] +
mov [eax+8] eax +
mov ecx [esi+4] +
mov al 1 +
mov [ecx+78h] al +
mov edx [esi+4] +
mov [edx+79h] al +
mov [ebp-4] ebx +
mov [esi+10h] ebx +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov dword ptr [esi+34h] 0Fh +
mov [esi+30h] ebx +
mov [esi+20h] bl +
mov ecx esi +
mov byte ptr [ebp-4] 2 +
mov [esi+3Ch] bx +
call sub_421EB0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-10h] +
push eax  +
lea ecx [ebp-20h] +
mov [ebp-10h] ebx +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-20h] +
push ecx  +
mov dword ptr [ebp-20h] offset off_4419DC +
call sub_425C90  +
push 0FFFFFFFFh  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
call sub_42A2F1  +
mov esi [eax+8] +
call sub_42A2CB  +
mov edx eax +
mov eax esi +
pop esi  +
retn   +
***
push edi  +
push offset unk_45007C  +
mov edi ecx +
call ds:InterlockedIncrement  +
test eax eax +
jnz loc_4248F3  +
push esi  +
mov esi offset unk_454B58 +
push esi  +
call sub_42516E  +
add esi 18h +
pop ecx  +
cmp esi offset unk_454BB8 +
jl loc_4248E0  +
pop esi  +
mov eax edi +
pop edi  +
retn   +
***
mov edi edi +
mov eax [ecx] +
mov ecx [ecx+4] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42A448  +
push 0  +
lea ecx [ebp-10h] +
call sub_424920  +
mov edi [ebp+8] +
and dword ptr [ebp-4] 0 +
mov esi [edi+0Ch] +
jmp loc_424A5C  +
mov eax [edi+8] +
dec esi  +
lea eax [eax+esi*4] +
cmp dword ptr [eax] 0 +
jz loc_424A5C  +
mov ecx [eax] +
call sub_404AA0  +
test eax eax +
jz loc_424A5C  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
test esi esi +
jnz loc_424A3D  +
push dword ptr [edi+8]  +
call sub_425BC2  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp-10h] +
call sub_424948  +
call sub_42A4B1  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42A448  +
mov edi edi +
call sub_42A448  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call sub_42517E  +
push dword ptr [esi]  +
call sub_42520B  +
pop ecx  +
pop ecx  +
pop esi  +
retn   +
***
push dword ptr [ecx]  +
call sub_42518E  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push ds:off_446E38[eax*4]  +
push [ebp+arg_0]  +
call sub_427F04  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_425035  +
***
mov edi edi +
neg eax  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_450170 0 +
jnz loc_4251C2  +
pop ebp  +
jmp sub_42C0BA  +
push [ebp+arg_0]  +
dec dword_450170  +
call ds:EncodePointer  +
mov ecx dword_450170 +
mov dword_454DE8[ecx*4] eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_425BC2  +
***
push edi  +
mov edi edi +
mov eax [ecx+4] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword ptr [ecx] offset off_446EF8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add ecx 9 +
push ecx  +
add eax 9 +
push eax  +
call sub_42C1E0  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
inc eax  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi [ebp+0Ch] +
mov ecx [ebp+10h] +
mov edi [ebp+8] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_4254B0  +
cmp edi eax +
jb loc_425650  +
cmp ecx 80h +
jb loc_4254D4  +
cmp dword_455DD4 0 +
jz loc_4254D4  +
push edi  +
push esi  +
and edi 0Fh +
and esi 0Fh +
cmp edi esi +
pop esi  +
pop edi  +
jnz loc_4254D4  +
jmp loc_42C268  +
***
test edi 3 +
jnz loc_4254F0  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_425510  +
movs   +
jmp ds:off_425600[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_425508  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_425510+4)[eax*4]  +
***
jmp ds:dword_425610[ecx*4]  +
***
jmp ds:off_425594[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_425510  +
movs   +
jmp ds:off_425600[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_425510  +
movs   +
jmp ds:off_425600[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_425510  +
movs   +
jmp ds:off_425600[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_425600[edx*4]  +
***
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_425684  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_425678  +
std   +
movs   +
cld   +
jmp ds:off_42579C[edx*4]  +
neg ecx  +
jmp ds:off_42574C[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_42569C  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_42569C+4)[eax*4]  +
***
jmp ds:off_42579C[ecx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_425678  +
std   +
movs   +
cld   +
jmp ds:off_42579C[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_425678  +
std   +
movs   +
cld   +
jmp ds:off_42579C[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_425678  +
std   +
movs   +
cld   +
jmp ds:off_42579C[edx*4]  +
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_42579C[edx*4]  +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi [ebp+0Ch] +
mov ecx [ebp+10h] +
mov edi [ebp+8] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_425820  +
cmp edi eax +
jb loc_4259C0  +
cmp ecx 80h +
jb loc_425844  +
cmp dword_455DD4 0 +
jz loc_425844  +
push edi  +
push esi  +
and edi 0Fh +
and esi 0Fh +
cmp edi esi +
pop esi  +
pop edi  +
jnz loc_425844  +
jmp loc_42C268  +
***
test edi 3 +
jnz loc_425860  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_425880  +
movs   +
jmp ds:off_425970[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_425878  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_425880+4)[eax*4]  +
***
jmp ds:dword_425980[ecx*4]  +
***
jmp ds:off_425904[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_425880  +
movs   +
jmp ds:off_425970[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_425880  +
movs   +
jmp ds:off_425970[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_425880  +
movs   +
jmp ds:off_425970[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_425970[edx*4]  +
***
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_425A0C+4)[eax*4]  +
***
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
cmp ecx dword_450240 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
call sub_42CC00  +
cmp dword ptr [ebp-1Ch] 0 +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
pop eax  +
mov edi edi +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp+var_4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_42BEF0  +
add esp 20h +
mov [ebp+var_8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_450240 +
and [ebp+var_18] 0 +
lea ecx [ebp+var_18] +
xor eax ecx +
mov ecx [ebp+arg_0] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+var_14] offset loc_425EEB +
mov [ebp+var_8] ecx +
mov [ebp+var_4] eax +
mov eax large fs:0 +
mov [ebp+var_18] eax +
lea eax [ebp+var_18] +
mov large fs:0 eax +
push [ebp+arg_10]  +
push ecx  +
push [ebp+arg_8]  +
call sub_42D270  +
mov ecx eax +
mov eax [ebp+var_18] +
mov large fs:0 eax +
mov eax ecx +
leave   +
retn   +
***
mov edx [esp+arg_8] +
mov edi edi +
mov edi edi +
call sub_42CC00  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CF9F  +
mov ecx [eax+6Ch] +
cmp ecx off_450958 +
jz loc_426405  +
mov ecx dword_450710 +
test [eax+70h] ecx +
jnz loc_426405  +
call sub_42D8BF  +
mov eax off_4502A8 +
retn   +
***
mov eax [esp+arg_8] +
push ebx  +
test eax eax +
jz loc_42646B  +
mov edx [esp+4+arg_0] +
xor ebx ebx +
mov bl [esp+4+arg_4] +
test edx 3 +
jz loc_426441  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_4264A6  +
sub eax 1 +
jz loc_42646B  +
test edx 3 +
jnz loc_42642B  +
sub eax 4 +
jb loc_426458  +
push edi  +
mov edi ebx +
shl ebx 8 +
add ebx edi +
mov edi ebx +
shl ebx 10h +
add ebx edi +
jmp loc_426472  +
pop edi  +
add eax 4 +
jz loc_42646B  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_4264A6  +
sub eax 1 +
jnz loc_42645D  +
pop ebx  +
retn   +
sub eax 4 +
jb loc_426457  +
mov ecx [edx] +
xor ecx ebx +
mov edi 7EFEFEFFh +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor ecx edi +
add edx 4 +
and ecx 81010100h +
jz loc_42646D  +
mov ecx [edx-4] +
xor cl bl +
jz loc_4264B7  +
xor ch bl +
jz loc_4264B1  +
shr ecx 10h +
xor cl bl +
jz loc_4264AB  +
xor ch bl +
jz loc_4264A5  +
jmp loc_42646D  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
lea eax [edx-2] +
pop edi  +
pop ebx  +
retn   +
lea eax [edx-3] +
pop edi  +
pop ebx  +
retn   +
lea eax [edx-4] +
pop edi  +
pop ebx  +
retn   +
***
push esi  +
mov edi edi +
mov edi edi +
mov eax offset sub_42F181 +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
retn   +
***
mov edi edi +
call sub_42CC00  +
pop ecx  +
call sub_42CC00  +
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov eax dword_456E00 +
call sub_426DDA  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
mov eax lpMem +
push dword ptr [eax+esi*4]  +
push esi  +
call sub_426BCE  +
pop ecx  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_42CC00  +
pop ecx  +
pop ecx  +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
lea eax [edx-1] +
pop ebx  +
retn   +
***
xor eax eax +
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_454E3C 2 +
jz loc_4280F1  +
call sub_42CAF9  +
push [ebp+arg_0]  +
call sub_42C94A  +
push 0FFh  +
call sub_42C664  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov [ebp-20h] eax +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_428253  +
push eax  +
call sub_42C8D2  +
call sub_42C8F7  +
***
call sub_434320  +
call sub_42CC00  +
cmp dword ptr [ebp-20h] 0 +
test eax eax +
mov eax [ecx] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CF26  +
call sub_42CF26  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_4295BA  +
add esp 14h +
pop ebp  +
retn   +
***
sub ecx eax +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CF9F  +
mov edi edi +
call sub_42CF9F  +
call sub_42CF9F  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
mov ecx [ebp-0Ch] +
mov edi edi +
call sub_42CC00  +
pop ecx  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
mov ebx [ebp-24h] +
pop ecx  +
pop ecx  +
retn   +
***
push ebx  +
call sub_42D727  +
pop ecx  +
pop ecx  +
***
retn   +
***
mov ecx [esp+arg_0] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+4] +
test eax eax +
jz loc_42B377  +
lea edx [eax+8] +
cmp byte ptr [edx] 0 +
jz loc_42B377  +
mov esi [ebp+arg_4] +
mov ecx [esi+4] +
cmp eax ecx +
jz loc_42B356  +
add ecx 8 +
push ecx  +
push edx  +
call sub_42C1E0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42B356  +
xor eax eax +
jmp loc_42B37A  +
test byte ptr [esi] 2 +
jz loc_42B360  +
test byte ptr [edi] 8 +
jz loc_42B352  +
mov eax [ebp+arg_8] +
mov eax [eax] +
test al 1 +
jz loc_42B36E  +
test byte ptr [edi] 1 +
jz loc_42B352  +
test al 2 +
jz loc_42B377  +
test byte ptr [edi] 2 +
jz loc_42B352  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
call sub_42CF9F  +
and dword ptr [eax+90h] 0 +
jmp sub_42CB69  +
***
call sub_42CC00  +
call sub_42CF9F  +
mov eax [eax] +
call sub_42CC00  +
xor eax eax +
mov esp [ebp-18h] +
mov edi edi +
call sub_42CF9F  +
mov edi edi +
call sub_42A47B  +
call sub_42CC00  +
mov ebx ecx +
mov edi [ebp+0Ch] +
mov esi [ebp+8] +
mov [ebp-1Ch] ebx +
and dword ptr [ebp-34h] 0 +
mov eax [edi-4] +
mov [ebp-24h] eax +
push dword ptr [esi+18h]  +
lea eax [ebp-3Ch] +
push eax  +
call sub_426107  +
pop ecx  +
pop ecx  +
mov [ebp-28h] eax +
call sub_42CF9F  +
mov eax [eax+88h] +
mov [ebp-2Ch] eax +
call sub_42CF9F  +
mov eax [eax+8Ch] +
mov [ebp-30h] eax +
call sub_42CF9F  +
mov [eax+88h] esi +
call sub_42CF9F  +
mov ecx [ebp+10h] +
mov [eax+8Ch] ecx +
and dword ptr [ebp-4] 0 +
xor eax eax +
inc eax  +
mov [ebp+10h] eax +
mov [ebp-4] eax +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push ebx  +
push dword ptr [ebp+14h]  +
push edi  +
call sub_4261AC  +
add esp 14h +
mov [ebp-1Ch] eax +
and dword ptr [ebp-4] 0 +
jmp loc_42B73B  +
mov eax [ebp-14h] +
call sub_42B4A9  +
retn   +
mov esp [ebp-18h] +
call sub_42CF9F  +
and dword ptr [eax+20Ch] 0 +
mov esi [ebp+14h] +
mov edi [ebp+0Ch] +
cmp dword ptr [esi+4] 80h +
jg loc_42B6F9  +
movsx ecx byte ptr [edi+8] +
jmp loc_42B6FC  +
mov ecx [edi+8] +
mov ebx [esi+10h] +
and dword ptr [ebp-20h] 0 +
mov eax [ebp-20h] +
cmp eax [esi+0Ch] +
jnb loc_42B723  +
imul eax eax +
mov edx [eax+ebx+4] +
cmp ecx edx +
jle loc_42B757  +
cmp ecx [eax+ebx+8] +
jg loc_42B757  +
mov eax [esi+8] +
mov ecx [eax+edx*8+8] +
push ecx  +
push esi  +
push 0  +
push edi  +
call sub_42B3CD  +
add esp 10h +
and dword ptr [ebp-1Ch] 0 +
and dword ptr [ebp-4] 0 +
mov esi [ebp+8] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov dword ptr [ebp+10h] 0 +
call sub_42B762  +
mov eax [ebp-1Ch] +
call sub_42CC45  +
retn   +
***
mov eax [ebp-24h] +
call sub_42CC00  +
call sub_42CC00  +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4397F3  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
test edx 3 +
jnz loc_42C22C  +
mov eax [edx] +
cmp al [ecx] +
jnz loc_42C224  +
or al al +
jz loc_42C220  +
cmp ah [ecx+1] +
jnz loc_42C224  +
or ah ah +
jz loc_42C220  +
shr eax 10h +
cmp al [ecx+2] +
jnz loc_42C224  +
or al al +
jz loc_42C220  +
cmp ah [ecx+3] +
jnz loc_42C224  +
add ecx 4 +
add edx 4 +
or ah ah +
jnz loc_42C1F0  +
mov edi edi +
xor eax eax +
retn   +
sbb eax eax +
shl eax 1 +
add eax 1 +
retn   +
test edx 1 +
jz loc_42C24C  +
mov al [edx] +
add edx 1 +
cmp al [ecx] +
jnz loc_42C224  +
add ecx 1 +
or al al +
jz loc_42C220  +
test edx 2 +
jz loc_42C1F0  +
mov ax [edx] +
add edx 2 +
cmp al [ecx] +
jnz loc_42C224  +
or al al +
jz loc_42C220  +
cmp ah [ecx+1] +
jnz loc_42C224  +
or ah ah +
jz loc_42C220  +
add ecx 2 +
jmp loc_42C1F0  +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_42C2E5  +
jmp loc_42C288  +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_42C288  +
test ecx ecx +
jz loc_42C332  +
mov edx ecx +
shr edx 4 +
test edx edx +
jz loc_42C309  +
lea ebx [ebx+0] +
movdqa xmm0 oword ptr [esi] +
movdqa oword ptr [edi] xmm0 +
lea esi [esi+10h] +
lea edi [edi+10h] +
dec edx  +
jnz loc_42C2F8  +
and ecx 0Fh +
jz loc_42C332  +
mov eax ecx +
shr ecx 2 +
jz loc_42C322  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec ecx  +
jnz loc_42C315  +
mov ecx eax +
and ecx 3 +
jz loc_42C332  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42C329  +
pop eax  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword_455DD4 eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_42C4D8  +
add esp 14h +
retn   +
***
push 0  +
mov edi edi +
mov edi edi +
pop ecx  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
cmp dword ptr [ebp+10h] 0 +
jz locret_42C8B5  +
push 8  +
call sub_42F893  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CC00  +
call sub_42CF9F  +
call sub_42CC00  +
mov dword_4557E8 eax +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
retn   +
***
call ds:TlsAlloc  +
mov edi edi +
mov eax dword_450700 +
call sub_42CC00  +
pop ecx  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
pop ecx  +
mov edi edi +
push edi  +
push offset aKernel32_dll  +
call ds:GetModuleHandleW  +
mov edi eax +
test edi edi +
jnz loc_42D105  +
call sub_42CE35  +
xor eax eax +
pop edi  +
retn   +
push esi  +
mov esi ds:GetProcAddress +
push offset aFlsalloc  +
push edi  +
call esi  +
push offset aFlsgetvalue  +
push edi  +
mov dword_4557EC eax +
call esi  +
push offset aFlssetvalue  +
push edi  +
mov lpTlsValue eax +
call esi  +
push offset aFlsfree  +
push edi  +
mov dword_4557F4 eax +
call esi  +
cmp dword_4557EC 0 +
mov esi ds:TlsSetValue +
mov dword_4557F8 eax +
jz loc_42D165  +
cmp lpTlsValue 0 +
jz loc_42D165  +
cmp dword_4557F4 0 +
jz loc_42D165  +
test eax eax +
jnz loc_42D189  +
mov eax ds:TlsGetValue +
mov lpTlsValue eax +
mov eax ds:TlsFree +
mov dword_4557EC offset sub_42CDF8 +
mov dword_4557F4 esi +
mov dword_4557F8 eax +
call ds:TlsAlloc  +
mov dwTlsIndex eax +
cmp eax 0FFFFFFFFh +
jz loc_42D25E  +
push lpTlsValue  +
push eax  +
call esi  +
test eax eax +
jz loc_42D25E  +
call sub_42C68E  +
push dword_4557EC  +
mov esi ds:EncodePointer +
call esi  +
push lpTlsValue  +
mov dword_4557EC eax +
call esi  +
push dword_4557F4  +
mov lpTlsValue eax +
call esi  +
push dword_4557F8  +
mov dword_4557F4 eax +
call esi  +
mov dword_4557F8 eax +
call sub_42F7F2  +
test eax eax +
jz loc_42D259  +
mov edi ds:DecodePointer +
push offset sub_42CFB9  +
push dword_4557EC  +
call edi  +
call eax  +
mov dword_450700 eax +
cmp eax 0FFFFFFFFh +
jz loc_42D259  +
push 214h  +
push 1  +
call sub_42A35C  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_42D259  +
push esi  +
push dword_450700  +
push dword_4557F4  +
call edi  +
call eax  +
test eax eax +
jz loc_42D259  +
push 0  +
push esi  +
call sub_42CE72  +
pop ecx  +
pop ecx  +
call ds:GetCurrentThreadId  +
or dword ptr [esi+4] 0FFFFFFFFh +
mov [esi] eax +
xor eax eax +
inc eax  +
jmp loc_42D260  +
call sub_42CE35  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
sub esp 4 +
push ebx  +
push ecx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebp  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_8] +
mov ebp [ebp+var_4] +
call sub_439E3C  +
push esi  +
push edi  +
call eax  +
pop edi  +
pop esi  +
mov ebx ebp +
pop ebp  +
mov ecx [ebp+arg_8] +
push ebp  +
mov ebp ebx +
cmp ecx 100h +
jnz loc_42D2AF  +
mov ecx 2 +
push ecx  +
call sub_439E3C  +
pop ebp  +
pop ecx  +
pop ebx  +
leave   +
retn 0Ch  +
***
pxor xmm0 xmm0 +
push ecx  +
push ebx  +
mov eax ecx +
and eax 0Fh +
test eax eax +
jnz loc_42D34A  +
mov eax edx +
and edx 7Fh +
shr eax 7 +
jz loc_42D30C  +
lea esp [esp+0] +
movdqa oword ptr [ecx] xmm0 +
movdqa oword ptr [ecx+10h] xmm0 +
movdqa oword ptr [ecx+20h] xmm0 +
movdqa oword ptr [ecx+30h] xmm0 +
movdqa oword ptr [ecx+40h] xmm0 +
movdqa oword ptr [ecx+50h] xmm0 +
movdqa oword ptr [ecx+60h] xmm0 +
movdqa oword ptr [ecx+70h] xmm0 +
lea ecx [ecx+80h] +
dec eax  +
jnz loc_42D2DC  +
test edx edx +
jz loc_42D347  +
mov eax edx +
shr eax 4 +
jz loc_42D326  +
jmp loc_42D31C  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
test byte ptr [ecx+0Ch] 40h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 280h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi [ebp+arg_C] +
push [ebp+arg_8]  +
lea ecx [ebp+var_25C] +
mov [ebp+var_230] esi +
mov [ebp+var_21C] edi +
mov [ebp+var_24C] eax +
mov [ebp+var_210] eax +
mov [ebp+var_238] eax +
mov [ebp+var_218] eax +
mov [ebp+var_234] eax +
mov [ebp+var_244] eax +
mov [ebp+var_23C] eax +
call sub_427AEF  +
call sub_428D04  +
mov [ebp+var_26C] eax +
test esi esi +
jnz loc_42DB70  +
call sub_428D04  +
mov dword ptr [eax] 16h +
call sub_42C505  +
cmp [ebp+var_250] 0 +
jz loc_42DB68  +
mov eax [ebp+var_254] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_42E6A7  +
test byte ptr [esi+0Ch] 40h +
jnz loc_42DBD4  +
push esi  +
call sub_42F34F  +
pop ecx  +
mov edx offset unk_450998 +
cmp eax 0FFFFFFFFh +
jz loc_42DBA2  +
cmp eax 0FFFFFFFEh +
jz loc_42DBA2  +
mov ecx eax +
and ecx 1Fh +
mov esi eax +
sar esi 5 +
shl ecx 6 +
add ecx dword_455CC0[esi*4] +
jmp loc_42DBA4  +
mov ecx edx +
test byte ptr [ecx+24h] 7Fh +
jnz loc_42DB45  +
cmp eax 0FFFFFFFFh +
jz loc_42DBC8  +
cmp eax 0FFFFFFFEh +
jz loc_42DBC8  +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
shl eax 6 +
add eax dword_455CC0[ecx*4] +
jmp loc_42DBCA  +
mov eax edx +
test byte ptr [eax+24h] 80h +
jnz loc_42DB45  +
xor ecx ecx +
cmp ebx ecx +
jz loc_42DB45  +
mov dl [ebx] +
mov [ebp+var_224] ecx +
mov [ebp+var_228] ecx +
mov [ebp+lpMem] ecx +
mov [ebp+var_211] dl +
test dl dl +
jz loc_42E68E  +
inc ebx  +
xor esi esi +
mov [ebp+var_240] ebx +
cmp [ebp+var_224] esi +
jl loc_42E68E  +
lea eax [edx-20h] +
cmp al 58h +
ja loc_42DC2B  +
movsx eax dl +
movsx eax ds:byte_4486E0[eax] +
and eax 0Fh +
jmp loc_42DC2D  +
xor eax eax +
movsx eax ds:byte_448700[ecx+eax*8] +
push 7  +
sar eax 4 +
pop ecx  +
mov [ebp+var_274] eax +
cmp eax ecx +
ja loc_42E669  +
jmp ds:off_42E6B7[eax*4]  +
or [ebp+var_218] 0FFFFFFFFh +
mov [ebp+var_278] esi +
mov [ebp+var_244] esi +
mov [ebp+var_238] esi +
mov [ebp+var_234] esi +
mov [ebp+var_210] esi +
mov [ebp+var_23C] esi +
jmp loc_42E669  +
movsx eax dl +
sub eax 20h +
jz loc_42DCD2  +
sub eax 3 +
jz loc_42DCC3  +
sub eax 8 +
jz loc_42DCB7  +
dec eax  +
dec eax  +
jz loc_42DCAB  +
sub eax 3 +
jnz loc_42E669  +
or [ebp+var_210] 8 +
jmp loc_42E669  +
or [ebp+var_210] 4 +
jmp loc_42E669  +
or [ebp+var_210] 1 +
jmp loc_42E669  +
or [ebp+var_210] 80h +
jmp loc_42E669  +
or [ebp+var_210] 2 +
jmp loc_42E669  +
cmp dl 2Ah +
jnz loc_42DD0F  +
add edi 4 +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
mov [ebp+var_238] edi +
cmp edi esi +
jge loc_42E669  +
or [ebp+var_210] 4 +
neg [ebp+var_238]  +
jmp loc_42E669  +
mov eax [ebp+var_238] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp+var_238] eax +
jmp loc_42E669  +
mov [ebp+var_218] esi +
jmp loc_42E669  +
cmp dl 2Ah +
jnz loc_42DD60  +
add edi 4 +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
mov [ebp+var_218] edi +
cmp edi esi +
jge loc_42E669  +
or [ebp+var_218] 0FFFFFFFFh +
jmp loc_42E669  +
mov eax [ebp+var_218] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp+var_218] eax +
jmp loc_42E669  +
cmp dl 49h +
jz loc_42DDD5  +
cmp dl 68h +
jz loc_42DDC9  +
cmp dl 6Ch +
jz loc_42DDA2  +
cmp dl 77h +
jnz loc_42E669  +
or [ebp+var_210] 800h +
jmp loc_42E669  +
cmp byte ptr [ebx] 6Ch +
jnz loc_42DDBD  +
inc ebx  +
or [ebp+var_210] 1000h +
mov [ebp+var_240] ebx +
jmp loc_42E669  +
or [ebp+var_210] 10h +
jmp loc_42E669  +
or [ebp+var_210] 20h +
jmp loc_42E669  +
mov al [ebx] +
cmp al 36h +
jnz loc_42DDF9  +
cmp byte ptr [ebx+1] 34h +
jnz loc_42DDF9  +
add ebx 2 +
or [ebp+var_210] 8000h +
mov [ebp+var_240] ebx +
jmp loc_42E669  +
cmp al 33h +
jnz loc_42DE1B  +
cmp byte ptr [ebx+1] 32h +
jnz loc_42DE1B  +
add ebx 2 +
and [ebp+var_210] 0FFFF7FFFh +
mov [ebp+var_240] ebx +
jmp loc_42E669  +
cmp al 64h +
jz loc_42E669  +
cmp al 69h +
jz loc_42E669  +
cmp al 6Fh +
jz loc_42E669  +
cmp al 75h +
jz loc_42E669  +
cmp al 78h +
jz loc_42E669  +
cmp al 58h +
jz loc_42E669  +
mov [ebp+var_274] esi +
and [ebp+var_23C] esi +
lea eax [ebp+var_25C] +
push eax  +
movzx eax dl +
push eax  +
call sub_435E09  +
pop ecx  +
test eax eax +
mov al [ebp+var_211] +
pop ecx  +
jz loc_42DE95  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
call sub_42DA9C  +
mov al [ebx] +
inc ebx  +
mov [ebp+var_240] ebx +
test al al +
jz loc_42DB45  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
call sub_42DA9C  +
jmp loc_42E669  +
movsx eax dl +
cmp eax 64h +
jg loc_42E06D  +
jz loc_42E115  +
cmp eax 53h +
jg loc_42DF80  +
jz loc_42DF14  +
sub eax 41h +
jz loc_42DEDD  +
dec eax  +
dec eax  +
jz loc_42DEF5  +
dec eax  +
dec eax  +
jz loc_42DEDD  +
dec eax  +
dec eax  +
jnz loc_42E488  +
add dl 20h +
mov [ebp+var_278] 1 +
mov [ebp+var_211] dl +
jmp loc_42E14B  +
test [ebp+var_210] 830h +
jnz loc_42DFA3  +
or [ebp+var_210] 800h +
jmp loc_42DFA3  +
test [ebp+var_210] 830h +
jnz loc_42DF2A  +
or [ebp+var_210] 800h +
mov ecx [ebp+var_218] +
cmp ecx 0FFFFFFFFh +
jnz loc_42DF3A  +
mov ecx 7FFFFFFFh +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
mov [ebp+var_220] edi +
jz loc_42E45A  +
test edi edi +
jnz loc_42DF6B  +
mov eax off_450968 +
mov [ebp+var_220] eax +
mov eax [ebp+var_220] +
mov [ebp+var_23C] 1 +
jmp loc_42E44C  +
sub eax 58h +
jz loc_42E2AB  +
dec eax  +
dec eax  +
jz loc_42E00C  +
sub eax ecx +
jz loc_42E14B  +
dec eax  +
dec eax  +
jnz loc_42E488  +
mov edi [ebp+var_21C] +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_21C] edi +
jz loc_42DFE8  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp+UsedDefaultChar] +
push eax  +
lea eax [ebp+var_228] +
push eax  +
call sub_43A028  +
add esp 10h +
test eax eax +
jz loc_42DFFB  +
mov [ebp+var_244] 1 +
jmp loc_42DFFB  +
mov al [edi-4] +
mov byte ptr [ebp+UsedDefaultChar] al +
mov [ebp+var_228] 1 +
lea eax [ebp+UsedDefaultChar] +
mov [ebp+var_220] eax +
jmp loc_42E488  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test eax eax +
jz loc_42E056  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_42E056  +
test [ebp+var_210] 800h +
movsx eax word ptr [eax] +
mov [ebp+var_220] ecx +
jz loc_42E04B  +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_23C] 1 +
jmp loc_42E482  +
and [ebp+var_23C] esi +
jmp loc_42E482  +
mov eax off_450964 +
mov [ebp+var_220] eax +
push eax  +
call sub_42B1D0  +
pop ecx  +
jmp loc_42E482  +
cmp eax 70h +
jg loc_42E2B3  +
jz loc_42E2A1  +
cmp eax 65h +
jl loc_42E488  +
cmp eax 67h +
jle loc_42E145  +
cmp eax 69h +
jz loc_42E10F  +
cmp eax 6Eh +
jz loc_42E0C6  +
cmp eax 6Fh +
jnz loc_42E488  +
test byte ptr [ebp+var_210] 80h +
mov edi [ebp+var_21C] +
mov [ebp+var_228] 8 +
jz loc_42E126  +
or [ebp+var_210] 200h +
jmp loc_42E126  +
add [ebp+var_21C] 4 +
mov eax [ebp+var_21C] +
mov esi [eax-4] +
call sub_439EBD  +
test eax eax +
jz loc_42DB45  +
test byte ptr [ebp+var_210] 20h +
jz loc_42E0F8  +
mov ax word ptr [ebp+var_224] +
mov [esi] ax +
jmp loc_42E100  +
mov eax [ebp+var_224] +
mov [esi] eax +
mov [ebp+var_244] 1 +
jmp loc_42E64D  +
mov edi [ebp+var_21C] +
or [ebp+var_210] 40h +
mov [ebp+var_228] 0Ah +
mov ecx [ebp+var_210] +
test ecx 8000h +
jz loc_42E318  +
mov eax [edi] +
mov edx [edi+4] +
add edi 8 +
jmp loc_42E351  +
mov edi [ebp+var_21C] +
or [ebp+var_210] 40h +
lea ebx [ebp+UsedDefaultChar] +
mov eax 200h +
mov [ebp+var_220] ebx +
mov [ebp+var_260] eax +
cmp [ebp+var_218] esi +
jge loc_42E17D  +
mov [ebp+var_218] 6 +
jmp loc_42E1E7  +
jnz loc_42E190  +
cmp dl 67h +
jnz loc_42E1E7  +
mov [ebp+var_218] 1 +
jmp loc_42E1E7  +
cmp [ebp+var_218] eax +
jle loc_42E19E  +
mov [ebp+var_218] eax +
cmp [ebp+var_218] 0A3h +
jle loc_42E1E7  +
mov esi [ebp+var_218] +
add esi 15Dh +
push esi  +
call sub_42A317  +
mov dl [ebp+var_211] +
pop ecx  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_42E1DD  +
mov [ebp+var_220] eax +
mov [ebp+var_260] esi +
mov ebx eax +
jmp loc_42E1E7  +
mov [ebp+var_218] 0A3h +
mov eax [edi] +
mov esi ds:DecodePointer +
add edi 8 +
mov [ebp+var_280] eax +
mov eax [edi-4] +
mov [ebp+var_27C] eax +
lea eax [ebp+var_25C] +
push eax  +
push [ebp+var_278]  +
movsx eax dl +
push [ebp+var_218]  +
mov [ebp+var_21C] edi +
push eax  +
push [ebp+var_260]  +
lea eax [ebp+var_280] +
push ebx  +
push eax  +
push off_450984  +
call esi  +
call eax  +
mov edi [ebp+var_210] +
add esp 1Ch +
and edi 80h +
jz loc_42E264  +
cmp [ebp+var_218] 0 +
jnz loc_42E264  +
lea eax [ebp+var_25C] +
push eax  +
push ebx  +
push off_450990  +
call esi  +
call eax  +
pop ecx  +
pop ecx  +
cmp [ebp+var_211] 67h +
jnz loc_42E285  +
test edi edi +
jnz loc_42E285  +
lea eax [ebp+var_25C] +
push eax  +
push ebx  +
push off_45098C  +
call esi  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [ebx] 2Dh +
jnz loc_42E29B  +
or [ebp+var_210] 100h +
inc ebx  +
mov [ebp+var_220] ebx +
push ebx  +
jmp loc_42E062  +
mov [ebp+var_218] 8 +
mov [ebp+var_24C] ecx +
jmp loc_42E2DD  +
sub eax 73h +
jz loc_42DF2A  +
dec eax  +
dec eax  +
jz loc_42E11C  +
sub eax 3 +
jnz loc_42E488  +
mov edi [ebp+var_21C] +
mov [ebp+var_24C] 27h +
test byte ptr [ebp+var_210] 80h +
mov [ebp+var_228] 10h +
jz loc_42E126  +
mov al byte ptr [ebp+var_24C] +
add al 51h +
mov byte ptr [ebp+var_22C] 30h +
mov byte ptr [ebp+var_22C+1] al +
mov [ebp+var_234] 2 +
jmp loc_42E126  +
test ecx 1000h +
jnz loc_42E138  +
add edi 4 +
test cl 20h +
jz loc_42E344  +
mov [ebp+var_21C] edi +
test cl 40h +
jz loc_42E33D  +
movsx eax word ptr [edi-4] +
jmp loc_42E341  +
movzx eax word ptr [edi-4] +
cdq   +
jmp loc_42E357  +
mov eax [edi-4] +
test cl 40h +
jz loc_42E34F  +
cdq   +
jmp loc_42E351  +
xor edx edx +
mov [ebp+var_21C] edi +
test cl 40h +
jz loc_42E376  +
test edx edx +
jg loc_42E376  +
jl loc_42E366  +
test eax eax +
jnb loc_42E376  +
neg eax  +
adc edx esi +
neg edx  +
or [ebp+var_210] 100h +
test [ebp+var_210] 9000h +
mov edi edx +
mov ebx eax +
jnz loc_42E388  +
xor edi edi +
cmp [ebp+var_218] esi +
jge loc_42E39C  +
mov [ebp+var_218] 1 +
jmp loc_42E3B6  +
and [ebp+var_210] 0FFFFFFF7h +
mov eax 200h +
cmp [ebp+var_218] eax +
jle loc_42E3B6  +
mov [ebp+var_218] eax +
mov eax ebx +
or eax edi +
jnz loc_42E3C2  +
and [ebp+var_234] esi +
lea esi [ebp+var_D] +
mov eax [ebp+var_218] +
dec [ebp+var_218]  +
test eax eax +
jg loc_42E3DB  +
mov eax ebx +
or eax edi +
jz loc_42E408  +
mov eax [ebp+var_228] +
cdq   +
push edx  +
push eax  +
push edi  +
push ebx  +
call sub_4343C0  +
add ecx 30h +
mov [ebp+var_260] ebx +
mov ebx eax +
mov edi edx +
cmp ecx 39h +
jle loc_42E403  +
add ecx [ebp+var_24C] +
mov [esi] cl +
dec esi  +
jmp loc_42E3C5  +
lea eax [ebp+var_D] +
sub eax esi +
inc esi  +
test [ebp+var_210] 200h +
mov [ebp+var_228] eax +
mov [ebp+var_220] esi +
jz loc_42E488  +
test eax eax +
jz loc_42E431  +
mov ecx esi +
cmp byte ptr [ecx] 30h +
jz loc_42E488  +
dec [ebp+var_220]  +
mov ecx [ebp+var_220] +
mov byte ptr [ecx] 30h +
inc eax  +
jmp loc_42E482  +
dec ecx  +
cmp [eax] si +
jz loc_42E450  +
add eax 2 +
test ecx ecx +
jnz loc_42E443  +
sub eax [ebp+var_220] +
sar eax 1 +
jmp loc_42E482  +
test edi edi +
jnz loc_42E469  +
mov eax off_450964 +
mov [ebp+var_220] eax +
mov eax [ebp+var_220] +
jmp loc_42E478  +
dec ecx  +
cmp byte ptr [eax] 0 +
jz loc_42E47C  +
inc eax  +
test ecx ecx +
jnz loc_42E471  +
sub eax [ebp+var_220] +
mov [ebp+var_228] eax +
cmp [ebp+var_244] 0 +
jnz loc_42E64D  +
mov ecx [ebp+var_210] +
test cl 40h +
jz loc_42E4D5  +
test ecx 100h +
jz loc_42E4B1  +
mov byte ptr [ebp+var_22C] 2Dh +
jmp loc_42E4CB  +
test cl 1 +
jz loc_42E4BF  +
mov byte ptr [ebp+var_22C] 2Bh +
jmp loc_42E4CB  +
test cl 2 +
jz loc_42E4D5  +
mov byte ptr [ebp+var_22C] 20h +
mov [ebp+var_234] 1 +
mov eax [ebp+var_238] +
sub eax [ebp+var_228] +
sub eax [ebp+var_234] +
mov [ebp+var_260] eax +
test cl 0Ch +
jnz loc_42E517  +
mov edi eax +
jmp loc_42E513  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
mov al 20h +
dec edi  +
call sub_42DA9C  +
cmp [ebp+var_224] 0FFFFFFFFh +
jz loc_42E517  +
test edi edi +
jg loc_42E4F6  +
push [ebp+var_234]  +
mov edi [ebp+var_26C] +
mov ebx [ebp+var_230] +
lea eax [ebp+var_22C] +
push eax  +
lea eax [ebp+var_224] +
call sub_4307D8  +
test byte ptr [ebp+var_210] 8 +
pop ecx  +
pop ecx  +
jz loc_42E574  +
test byte ptr [ebp+var_210] 4 +
jnz loc_42E574  +
mov edi [ebp+var_260] +
jmp loc_42E570  +
lea esi [ebp+var_224] +
mov ecx ebx +
mov al 30h +
dec edi  +
call sub_42DA9C  +
cmp [ebp+var_224] 0FFFFFFFFh +
jz loc_42E574  +
test edi edi +
jg loc_42E557  +
cmp [ebp+var_23C] 0 +
mov eax [ebp+var_228] +
jz loc_42E5F8  +
test eax eax +
jle loc_42E5F8  +
mov esi [ebp+var_220] +
mov [ebp+var_268] eax +
movzx eax word ptr [esi] +
dec [ebp+var_268]  +
push eax  +
push 6  +
lea eax [ebp+var_D+1] +
push eax  +
lea eax [ebp+var_270] +
push eax  +
add esi 2 +
call sub_43A028  +
add esp 10h +
test eax eax +
jnz loc_42E5EF  +
cmp [ebp+var_270] eax +
jz loc_42E5EF  +
push [ebp+var_270]  +
mov edi [ebp+var_26C] +
mov ebx [ebp+var_230] +
lea eax [ebp+var_D+1] +
push eax  +
lea eax [ebp+var_224] +
call sub_4307D8  +
cmp [ebp+var_268] 0 +
pop ecx  +
pop ecx  +
jnz loc_42E593  +
jmp loc_42E612  +
or [ebp+var_224] 0FFFFFFFFh +
jmp loc_42E612  +
mov edi [ebp+var_26C] +
push eax  +
push [ebp+var_220]  +
lea eax [ebp+var_224] +
call sub_4307D8  +
pop ecx  +
pop ecx  +
cmp [ebp+var_224] 0 +
jl loc_42E64D  +
test byte ptr [ebp+var_210] 4 +
jz loc_42E64D  +
mov edi [ebp+var_260] +
jmp loc_42E649  +
mov ecx [ebp+var_230] +
lea esi [ebp+var_224] +
mov al 20h +
dec edi  +
call sub_42DA9C  +
cmp [ebp+var_224] 0FFFFFFFFh +
jz loc_42E64D  +
test edi edi +
jg loc_42E62C  +
cmp [ebp+lpMem] 0 +
jz loc_42E669  +
push [ebp+lpMem]  +
call sub_425BC2  +
and [ebp+lpMem] 0 +
pop ecx  +
mov ebx [ebp+var_240] +
mov al [ebx] +
mov [ebp+var_211] al +
test al al +
jz loc_42E68E  +
mov ecx [ebp+var_274] +
mov edi [ebp+var_21C] +
mov dl al +
jmp loc_42DC00  +
cmp [ebp+var_250] 0 +
jz loc_42E6A1  +
mov eax [ebp+var_254] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax [ebp+var_224] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_42E6D7  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
push esi  +
push edi  +
xor esi esi +
mov edi offset unk_455800 +
cmp dword_4509DC[esi*8] 1 +
jnz loc_42F824  +
lea eax lpCriticalSection[esi*8] +
mov [eax] edi +
push 0FA0h  +
push dword ptr [eax]  +
add edi 18h +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jz loc_42F830  +
inc esi  +
cmp esi 24h +
jl loc_42F7FD  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
retn   +
and lpCriticalSection[esi*8] 0 +
xor eax eax +
jmp loc_42F82D  +
***
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
call sub_42CC00  +
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
retn   +
***
mov eax [esp+arg_C] +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
test byte ptr [ebx+0Ch] 40h +
push esi  +
mov esi eax +
mov eax [edi] +
mov [ebp+var_4] eax +
jz loc_4307F9  +
cmp dword ptr [ebx+8] 0 +
jnz loc_4307F9  +
mov eax [ebp+arg_4] +
add [esi] eax +
jmp loc_430837  +
and dword ptr [edi] 0 +
cmp [ebp+arg_4] 0 +
jle loc_430832  +
mov eax [ebp+arg_0] +
mov al [eax] +
dec [ebp+arg_4]  +
mov ecx ebx +
call sub_42DA9C  +
inc [ebp+arg_0]  +
cmp dword ptr [esi] 0FFFFFFFFh +
jnz loc_430827  +
cmp dword ptr [edi] 2Ah +
jnz loc_43082D  +
mov ecx ebx +
mov al 3Fh +
call sub_42DA9C  +
cmp [ebp+arg_4] 0 +
jg loc_430802  +
cmp dword ptr [edi] 0 +
jnz loc_430837  +
mov eax [ebp+var_4] +
mov [edi] eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 280h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
xor eax eax +
push edi  +
mov edi [ebp+14h] +
push dword ptr [ebp+10h]  +
lea ecx [ebp-254h] +
mov [ebp-230h] esi +
mov [ebp-21Ch] edi +
mov [ebp-258h] eax +
mov [ebp-210h] eax +
mov [ebp-238h] eax +
mov [ebp-218h] eax +
mov [ebp-234h] eax +
mov [ebp-25Ch] eax +
mov [ebp-23Ch] eax +
call sub_427AEF  +
call sub_428D04  +
mov [ebp-264h] eax +
test esi esi +
jnz loc_4308DC  +
call sub_428D04  +
mov dword ptr [eax] 16h +
call sub_42C505  +
cmp byte ptr [ebp-248h] 0 +
jz loc_4308D4  +
mov eax [ebp-24Ch] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_43143D  +
test byte ptr [esi+0Ch] 40h +
jnz loc_430940  +
push esi  +
call sub_42F34F  +
pop ecx  +
mov edx offset unk_450998 +
cmp eax 0FFFFFFFFh +
jz loc_43090E  +
cmp eax 0FFFFFFFEh +
jz loc_43090E  +
mov ecx eax +
and ecx 1Fh +
mov esi eax +
sar esi 5 +
shl ecx 6 +
add ecx dword_455CC0[esi*4] +
jmp loc_430910  +
mov ecx edx +
test byte ptr [ecx+24h] 7Fh +
jnz loc_4308B1  +
cmp eax 0FFFFFFFFh +
jz loc_430934  +
cmp eax 0FFFFFFFEh +
jz loc_430934  +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
shl eax 6 +
add eax dword_455CC0[ecx*4] +
jmp loc_430936  +
mov eax edx +
test byte ptr [eax+24h] 80h +
jnz loc_4308B1  +
xor esi esi +
cmp ebx esi +
jz loc_4308B1  +
mov dl [ebx] +
mov [ebp-224h] esi +
mov [ebp-228h] esi +
mov [ebp-244h] esi +
mov [ebp-260h] esi +
mov [ebp-211h] dl +
test dl dl +
jz loc_431424  +
inc ebx  +
mov [ebp-240h] ebx +
cmp [ebp-224h] esi +
jl loc_43140E  +
lea eax [edx-20h] +
cmp al 58h +
ja loc_43099B  +
movsx eax dl +
movzx eax ds:byte_448748[eax] +
and eax 0Fh +
jmp loc_43099D  +
xor eax eax +
mov ecx [ebp-244h] +
imul eax eax +
movzx eax ds:byte_448768[eax+ecx] +
push 8  +
shr eax 4 +
pop esi  +
mov [ebp-244h] eax +
cmp eax esi +
jz loc_4308B1  +
push 7  +
pop ecx  +
cmp eax ecx +
ja loc_4313ED  +
jmp ds:off_43144F[eax*4]  +
xor eax eax +
or dword ptr [ebp-218h] 0FFFFFFFFh +
mov [ebp-274h] eax +
mov [ebp-25Ch] eax +
mov [ebp-238h] eax +
mov [ebp-234h] eax +
mov [ebp-210h] eax +
mov [ebp-23Ch] eax +
jmp loc_4313ED  +
movsx eax dl +
sub eax 20h +
jz loc_430A56  +
sub eax 3 +
jz loc_430A47  +
sub eax esi +
jz loc_430A3B  +
dec eax  +
dec eax  +
jz loc_430A2F  +
sub eax 3 +
jnz loc_4313ED  +
or [ebp-210h] esi +
jmp loc_4313ED  +
or dword ptr [ebp-210h] 4 +
jmp loc_4313ED  +
or dword ptr [ebp-210h] 1 +
jmp loc_4313ED  +
or dword ptr [ebp-210h] 80h +
jmp loc_4313ED  +
or dword ptr [ebp-210h] 2 +
jmp loc_4313ED  +
cmp dl 2Ah +
jnz loc_430A93  +
add edi 4 +
mov [ebp-21Ch] edi +
mov edi [edi-4] +
mov [ebp-238h] edi +
test edi edi +
jns loc_4313ED  +
or dword ptr [ebp-210h] 4 +
neg dword ptr [ebp-238h]  +
jmp loc_4313ED  +
mov eax [ebp-238h] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp-238h] eax +
jmp loc_4313ED  +
and dword ptr [ebp-218h] 0 +
jmp loc_4313ED  +
cmp dl 2Ah +
jnz loc_430AE5  +
add edi 4 +
mov [ebp-21Ch] edi +
mov edi [edi-4] +
mov [ebp-218h] edi +
test edi edi +
jns loc_4313ED  +
or dword ptr [ebp-218h] 0FFFFFFFFh +
jmp loc_4313ED  +
mov eax [ebp-218h] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp-218h] eax +
jmp loc_4313ED  +
cmp dl 49h +
jz loc_430B5A  +
cmp dl 68h +
jz loc_430B4E  +
cmp dl 6Ch +
jz loc_430B27  +
cmp dl 77h +
jnz loc_4313ED  +
or dword ptr [ebp-210h] 800h +
jmp loc_4313ED  +
cmp byte ptr [ebx] 6Ch +
jnz loc_430B42  +
inc ebx  +
or dword ptr [ebp-210h] 1000h +
mov [ebp-240h] ebx +
jmp loc_4313ED  +
or dword ptr [ebp-210h] 10h +
jmp loc_4313ED  +
or dword ptr [ebp-210h] 20h +
jmp loc_4313ED  +
mov al [ebx] +
cmp al 36h +
jnz loc_430B7E  +
cmp byte ptr [ebx+1] 34h +
jnz loc_430B7E  +
add ebx 2 +
or dword ptr [ebp-210h] 8000h +
mov [ebp-240h] ebx +
jmp loc_4313ED  +
cmp al 33h +
jnz loc_430BA0  +
cmp byte ptr [ebx+1] 32h +
jnz loc_430BA0  +
add ebx 2 +
and dword ptr [ebp-210h] 0FFFF7FFFh +
mov [ebp-240h] ebx +
jmp loc_4313ED  +
cmp al 64h +
jz loc_4313ED  +
cmp al 69h +
jz loc_4313ED  +
cmp al 6Fh +
jz loc_4313ED  +
cmp al 75h +
jz loc_4313ED  +
cmp al 78h +
jz loc_4313ED  +
cmp al 58h +
jz loc_4313ED  +
and dword ptr [ebp-244h] 0 +
and dword ptr [ebp-23Ch] 0 +
lea eax [ebp-254h] +
push eax  +
movzx eax dl +
push eax  +
call sub_435E09  +
pop ecx  +
test eax eax +
mov al [ebp-211h] +
pop ecx  +
jz loc_430C1C  +
mov ecx [ebp-230h] +
lea esi [ebp-224h] +
call sub_42DA9C  +
mov al [ebx] +
inc ebx  +
mov [ebp-240h] ebx +
test al al +
jz loc_4308B1  +
mov ecx [ebp-230h] +
lea esi [ebp-224h] +
call sub_42DA9C  +
jmp loc_4313ED  +
movsx eax dl +
cmp eax 64h +
jg loc_430DF5  +
jz loc_430E99  +
cmp eax 53h +
jg loc_430D07  +
jz loc_430C9B  +
sub eax 41h +
jz loc_430C64  +
dec eax  +
dec eax  +
jz loc_430C7C  +
dec eax  +
dec eax  +
jz loc_430C64  +
dec eax  +
dec eax  +
jnz loc_43120C  +
add dl 20h +
mov dword ptr [ebp-274h] 1 +
mov [ebp-211h] dl +
jmp loc_430ECF  +
test dword ptr [ebp-210h] 830h +
jnz loc_430D2A  +
or dword ptr [ebp-210h] 800h +
jmp loc_430D2A  +
test dword ptr [ebp-210h] 830h +
jnz loc_430CB1  +
or dword ptr [ebp-210h] 800h +
mov ecx [ebp-218h] +
cmp ecx 0FFFFFFFFh +
jnz loc_430CC1  +
mov ecx 7FFFFFFFh +
add edi 4 +
test dword ptr [ebp-210h] 810h +
mov [ebp-21Ch] edi +
mov edi [edi-4] +
mov [ebp-220h] edi +
jz loc_4311DE  +
test edi edi +
jnz loc_430CF2  +
mov eax off_450968 +
mov [ebp-220h] eax +
mov eax [ebp-220h] +
mov dword ptr [ebp-23Ch] 1 +
jmp loc_4311D0  +
sub eax 58h +
jz loc_43102C  +
dec eax  +
dec eax  +
jz loc_430D93  +
sub eax ecx +
jz loc_430ECF  +
dec eax  +
dec eax  +
jnz loc_43120C  +
mov edi [ebp-21Ch] +
add edi 4 +
test dword ptr [ebp-210h] 810h +
mov [ebp-21Ch] edi +
jz loc_430D6F  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-228h] +
push eax  +
call sub_43A028  +
add esp 10h +
test eax eax +
jz loc_430D82  +
mov dword ptr [ebp-25Ch] 1 +
jmp loc_430D82  +
mov al [edi-4] +
mov [ebp-20Ch] al +
mov dword ptr [ebp-228h] 1 +
lea eax [ebp-20Ch] +
mov [ebp-220h] eax +
jmp loc_43120C  +
mov eax [edi] +
add edi 4 +
mov [ebp-21Ch] edi +
test eax eax +
jz loc_430DDE  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_430DDE  +
test dword ptr [ebp-210h] 800h +
movsx eax word ptr [eax] +
mov [ebp-220h] ecx +
jz loc_430DD2  +
cdq   +
sub eax edx +
sar eax 1 +
mov dword ptr [ebp-23Ch] 1 +
jmp loc_431206  +
and dword ptr [ebp-23Ch] 0 +
jmp loc_431206  +
mov eax off_450964 +
mov [ebp-220h] eax +
push eax  +
call sub_42B1D0  +
pop ecx  +
jmp loc_431206  +
cmp eax 70h +
jg loc_431034  +
jz loc_431026  +
cmp eax 65h +
jl loc_43120C  +
cmp eax 67h +
jle loc_430EC9  +
cmp eax 69h +
jz loc_430E93  +
cmp eax 6Eh +
jz loc_430E4A  +
cmp eax 6Fh +
jnz loc_43120C  +
test byte ptr [ebp-210h] 80h +
mov edi [ebp-21Ch] +
mov [ebp-228h] esi +
jz loc_430EAA  +
or dword ptr [ebp-210h] 200h +
jmp loc_430EAA  +
add dword ptr [ebp-21Ch] 4 +
mov eax [ebp-21Ch] +
mov esi [eax-4] +
call sub_439EBD  +
test eax eax +
jz loc_4308B1  +
test byte ptr [ebp-210h] 20h +
jz loc_430E7C  +
mov ax [ebp-224h] +
mov [esi] ax +
jmp loc_430E84  +
mov eax [ebp-224h] +
mov [esi] eax +
mov dword ptr [ebp-25Ch] 1 +
jmp loc_4313D1  +
mov edi [ebp-21Ch] +
or dword ptr [ebp-210h] 40h +
mov dword ptr [ebp-228h] 0Ah +
mov ecx [ebp-210h] +
test ecx 8000h +
jz loc_431099  +
add edi esi +
mov eax [edi-8] +
mov edx [edi-4] +
jmp loc_4310D2  +
mov edi [ebp-21Ch] +
or dword ptr [ebp-210h] 40h +
cmp dword ptr [ebp-218h] 0 +
lea ebx [ebp-20Ch] +
mov eax 200h +
mov [ebp-220h] ebx +
mov [ebp-268h] eax +
jge loc_430F02  +
mov dword ptr [ebp-218h] 6 +
jmp loc_430F6C  +
jnz loc_430F15  +
cmp dl 67h +
jnz loc_430F6C  +
mov dword ptr [ebp-218h] 1 +
jmp loc_430F6C  +
cmp [ebp-218h] eax +
jle loc_430F23  +
mov [ebp-218h] eax +
cmp dword ptr [ebp-218h] 0A3h +
jle loc_430F6C  +
mov esi [ebp-218h] +
add esi 15Dh +
push esi  +
call sub_42A317  +
mov dl [ebp-211h] +
pop ecx  +
mov [ebp-260h] eax +
test eax eax +
jz loc_430F62  +
mov [ebp-220h] eax +
mov [ebp-268h] esi +
mov ebx eax +
jmp loc_430F6C  +
mov dword ptr [ebp-218h] 0A3h +
mov eax [edi] +
mov esi ds:DecodePointer +
add edi 8 +
mov [ebp-280h] eax +
mov eax [edi-4] +
mov [ebp-27Ch] eax +
lea eax [ebp-254h] +
push eax  +
push dword ptr [ebp-274h]  +
movsx eax dl +
push dword ptr [ebp-218h]  +
mov [ebp-21Ch] edi +
push eax  +
push dword ptr [ebp-268h]  +
lea eax [ebp-280h] +
push ebx  +
push eax  +
push off_450984  +
call esi  +
call eax  +
mov edi [ebp-210h] +
add esp 1Ch +
and edi 80h +
jz loc_430FE9  +
cmp dword ptr [ebp-218h] 0 +
jnz loc_430FE9  +
lea eax [ebp-254h] +
push eax  +
push ebx  +
push off_450990  +
call esi  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [ebp-211h] 67h +
jnz loc_43100A  +
test edi edi +
jnz loc_43100A  +
lea eax [ebp-254h] +
push eax  +
push ebx  +
push off_45098C  +
call esi  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [ebx] 2Dh +
jnz loc_431020  +
or dword ptr [ebp-210h] 100h +
inc ebx  +
mov [ebp-220h] ebx +
push ebx  +
jmp loc_430DEA  +
***
mov [ebp-218h] esi +
mov [ebp-258h] ecx +
jmp loc_43105E  +
sub eax 73h +
jz loc_430CB1  +
dec eax  +
dec eax  +
jz loc_430EA0  +
sub eax 3 +
jnz loc_43120C  +
mov edi [ebp-21Ch] +
mov dword ptr [ebp-258h] 27h +
test byte ptr [ebp-210h] 80h +
mov dword ptr [ebp-228h] 10h +
jz loc_430EAA  +
mov al [ebp-258h] +
add al 51h +
mov byte ptr [ebp-22Ch] 30h +
mov [ebp-22Bh] al +
mov dword ptr [ebp-234h] 2 +
jmp loc_430EAA  +
***
test ecx 1000h +
jnz loc_430EBC  +
add edi 4 +
test cl 20h +
jz loc_4310C5  +
mov [ebp-21Ch] edi +
test cl 40h +
jz loc_4310BE  +
movsx eax word ptr [edi-4] +
jmp loc_4310C2  +
movzx eax word ptr [edi-4] +
cdq   +
jmp loc_4310D8  +
mov eax [edi-4] +
test cl 40h +
jz loc_4310D0  +
cdq   +
jmp loc_4310D2  +
xor edx edx +
mov [ebp-21Ch] edi +
test cl 40h +
jz loc_4310F8  +
test edx edx +
jg loc_4310F8  +
jl loc_4310E7  +
test eax eax +
jnb loc_4310F8  +
neg eax  +
adc edx 0 +
neg edx  +
or dword ptr [ebp-210h] 100h +
test dword ptr [ebp-210h] 9000h +
mov edi edx +
mov ebx eax +
jnz loc_43110A  +
xor edi edi +
cmp dword ptr [ebp-218h] 0 +
jge loc_43111F  +
mov dword ptr [ebp-218h] 1 +
jmp loc_431139  +
and dword ptr [ebp-210h] 0FFFFFFF7h +
mov eax 200h +
cmp [ebp-218h] eax +
jle loc_431139  +
mov [ebp-218h] eax +
mov eax ebx +
or eax edi +
jnz loc_431145  +
and [ebp-234h] eax +
lea esi [ebp-0Dh] +
mov eax [ebp-218h] +
dec dword ptr [ebp-218h]  +
test eax eax +
jg loc_43115E  +
mov eax ebx +
or eax edi +
jz loc_43118B  +
mov eax [ebp-228h] +
cdq   +
push edx  +
push eax  +
push edi  +
push ebx  +
call sub_4343C0  +
add ecx 30h +
mov [ebp-268h] ebx +
mov ebx eax +
mov edi edx +
cmp ecx 39h +
jle loc_431186  +
add ecx [ebp-258h] +
mov [esi] cl +
dec esi  +
jmp loc_431148  +
***
lea eax [ebp-0Dh] +
sub eax esi +
inc esi  +
test dword ptr [ebp-210h] 200h +
mov [ebp-228h] eax +
mov [ebp-220h] esi +
jz loc_43120C  +
test eax eax +
jz loc_4311B4  +
mov ecx esi +
cmp byte ptr [ecx] 30h +
jz loc_43120C  +
dec dword ptr [ebp-220h]  +
mov ecx [ebp-220h] +
mov byte ptr [ecx] 30h +
inc eax  +
jmp loc_431206  +
dec ecx  +
cmp word ptr [eax] 0 +
jz loc_4311D4  +
add eax 2 +
test ecx ecx +
jnz loc_4311C6  +
sub eax [ebp-220h] +
sar eax 1 +
jmp loc_431206  +
test edi edi +
jnz loc_4311ED  +
mov eax off_450964 +
mov [ebp-220h] eax +
mov eax [ebp-220h] +
jmp loc_4311FC  +
dec ecx  +
cmp byte ptr [eax] 0 +
jz loc_431200  +
inc eax  +
test ecx ecx +
jnz loc_4311F5  +
sub eax [ebp-220h] +
mov [ebp-228h] eax +
cmp dword ptr [ebp-25Ch] 0 +
jnz loc_4313D1  +
mov ecx [ebp-210h] +
test cl 40h +
jz loc_431259  +
test ecx 100h +
jz loc_431235  +
mov byte ptr [ebp-22Ch] 2Dh +
jmp loc_43124F  +
test cl 1 +
jz loc_431243  +
mov byte ptr [ebp-22Ch] 2Bh +
jmp loc_43124F  +
test cl 2 +
jz loc_431259  +
mov byte ptr [ebp-22Ch] 20h +
mov dword ptr [ebp-234h] 1 +
mov eax [ebp-238h] +
sub eax [ebp-228h] +
sub eax [ebp-234h] +
mov [ebp-268h] eax +
test cl 0Ch +
jnz loc_43129B  +
mov edi eax +
jmp loc_431297  +
mov ecx [ebp-230h] +
lea esi [ebp-224h] +
mov al 20h +
dec edi  +
call sub_42DA9C  +
cmp dword ptr [ebp-224h] 0FFFFFFFFh +
jz loc_43129B  +
test edi edi +
jg loc_43127A  +
push dword ptr [ebp-234h]  +
mov edi [ebp-264h] +
mov ebx [ebp-230h] +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-224h] +
call sub_4307D8  +
test byte ptr [ebp-210h] 8 +
pop ecx  +
pop ecx  +
jz loc_4312F8  +
test byte ptr [ebp-210h] 4 +
jnz loc_4312F8  +
mov edi [ebp-268h] +
jmp loc_4312F4  +
lea esi [ebp-224h] +
mov ecx ebx +
mov al 30h +
dec edi  +
call sub_42DA9C  +
cmp dword ptr [ebp-224h] 0FFFFFFFFh +
jz loc_4312F8  +
test edi edi +
jg loc_4312DB  +
cmp dword ptr [ebp-23Ch] 0 +
mov eax [ebp-228h] +
jz loc_43137C  +
test eax eax +
jle loc_43137C  +
mov esi [ebp-220h] +
mov [ebp-270h] eax +
movzx eax word ptr [esi] +
dec dword ptr [ebp-270h]  +
push eax  +
push 6  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-278h] +
push eax  +
add esi 2 +
call sub_43A028  +
add esp 10h +
test eax eax +
jnz loc_431373  +
cmp [ebp-278h] eax +
jz loc_431373  +
push dword ptr [ebp-278h]  +
mov edi [ebp-264h] +
mov ebx [ebp-230h] +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-224h] +
call sub_4307D8  +
cmp dword ptr [ebp-270h] 0 +
pop ecx  +
pop ecx  +
jnz loc_431317  +
jmp loc_431396  +
or dword ptr [ebp-224h] 0FFFFFFFFh +
jmp loc_431396  +
mov edi [ebp-264h] +
push eax  +
push dword ptr [ebp-220h]  +
lea eax [ebp-224h] +
call sub_4307D8  +
pop ecx  +
pop ecx  +
cmp dword ptr [ebp-224h] 0 +
jl loc_4313D1  +
test byte ptr [ebp-210h] 4 +
jz loc_4313D1  +
mov edi [ebp-268h] +
jmp loc_4313CD  +
mov ecx [ebp-230h] +
lea esi [ebp-224h] +
mov al 20h +
dec edi  +
call sub_42DA9C  +
cmp dword ptr [ebp-224h] 0FFFFFFFFh +
jz loc_4313D1  +
test edi edi +
jg loc_4313B0  +
cmp dword ptr [ebp-260h] 0 +
jz loc_4313ED  +
push dword ptr [ebp-260h]  +
call sub_425BC2  +
and dword ptr [ebp-260h] 0 +
pop ecx  +
mov ebx [ebp-240h] +
mov al [ebx] +
mov [ebp-211h] al +
test al al +
jz loc_43140E  +
mov edi [ebp-21Ch] +
xor esi esi +
mov dl al +
jmp loc_430972  +
***
cmp dword ptr [ebp-244h] 0 +
jz loc_431424  +
cmp dword ptr [ebp-244h] 7 +
jnz loc_4308B1  +
cmp byte ptr [ebp-248h] 0 +
jz loc_431437  +
mov eax [ebp-24Ch] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax [ebp-224h] +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
call sub_42CC00  +
pop ecx  +
retn   +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_431ED9  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_431F21  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_431F3D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_431F59  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_431F9A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_431F67  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_431F95  +
cmp edx [esp+arg_4] +
ja loc_431F95  +
jb loc_431F96  +
cmp eax [esp+arg_0] +
jbe loc_431F96  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_431FA4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
mov edi edi +
mov edi edi +
dec dword ptr [edx+4]  +
mov edi edi +
mov edi edi +
sub eax 3A4h +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
retn   +
***
jmp loc_4337DA  +
***
cmp dword_455DCC 0 +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_433D85  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_425BB3  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_433CB0  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
mov edi edi +
xor eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_450240 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_434352  +
test eax ebx +
jz loc_434352  +
not eax  +
mov dword_450244 eax +
jmp loc_4343B7  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:__imp_GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jnz loc_434398  +
mov esi 0BB40E64Fh +
jmp loc_4343A8  +
test esi ebx +
jnz loc_4343A8  +
mov eax esi +
or eax 4711h +
shl eax 10h +
or esi eax +
mov dword_450240 esi +
not esi  +
mov dword_450244 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
or eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
cmp [ebp-1Ch] edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
retn   +
***
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
call sub_42CC00  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_435E09  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_429690  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
mov eax dword_450240 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
xor ecx ecx +
push esi  +
xor esi esi +
mov [ebp+var_78] eax +
mov eax [ebp+arg_4] +
inc esi  +
push edi  +
mov [ebp+var_70] eax +
lea edi [ebp+var_20] +
mov [ebp+var_74] ecx +
mov [ebp+var_68] esi +
mov [ebp+var_4C] ecx +
mov [ebp+var_58] ecx +
mov [ebp+var_5C] ecx +
mov [ebp+var_60] ecx +
mov [ebp+var_64] ecx +
mov [ebp+var_50] ecx +
mov [ebp+var_6C] ecx +
cmp [ebp+arg_1C] ecx +
jnz loc_435EEB  +
call sub_428D04  +
mov dword ptr [eax] 16h +
call sub_42C505  +
xor eax eax +
jmp loc_436527  +
mov edx [ebp+arg_8] +
mov [ebp+var_54] edx +
mov al [edx] +
cmp al 20h +
jz loc_435F03  +
cmp al 9 +
jz loc_435F03  +
cmp al 0Ah +
jz loc_435F03  +
cmp al 0Dh +
jnz loc_435F06  +
inc edx  +
jmp loc_435EF1  +
push ebx  +
mov bl 30h +
mov al [edx] +
inc edx  +
cmp ecx 0Bh +
ja loc_436131  +
jmp ds:off_436538[ecx*4]  +
lea ecx [eax-31h] +
cmp cl 8 +
ja loc_435F2A  +
push 3  +
pop ecx  +
dec edx  +
jmp loc_435F09  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jnz loc_435F40  +
push 5  +
pop ecx  +
jmp loc_435F09  +
movsx eax al +
sub eax 2Bh +
jz loc_435F65  +
dec eax  +
dec eax  +
jz loc_435F59  +
sub eax 3 +
jnz loc_4360D1  +
mov ecx esi +
jmp loc_435F09  +
push 2  +
pop ecx  +
mov [ebp+var_74] 8000h +
jmp loc_435F09  +
and [ebp+var_74] 0 +
push 2  +
pop ecx  +
jmp loc_435F09  +
lea ecx [eax-31h] +
mov [ebp+var_58] esi +
cmp cl 8 +
jbe loc_435F24  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jnz loc_435F8E  +
push 4  +
jmp loc_435F3D  +
cmp al 2Bh +
jz loc_435FB4  +
cmp al 2Dh +
jz loc_435FB4  +
cmp al bl +
jz loc_435F55  +
cmp al 43h +
jle loc_4360D1  +
cmp al 45h +
jle loc_435FB0  +
sub al 64h +
cmp al 1 +
ja loc_4360D1  +
push 6  +
jmp loc_435F3D  +
dec edx  +
push 0Bh  +
jmp loc_435F3D  +
lea ecx [eax-31h] +
cmp cl 8 +
jbe loc_435F24  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jz loc_435F3B  +
cmp al bl +
jz loc_435F55  +
mov edx [ebp+var_54] +
jmp loc_4360FA  +
mov [ebp+var_58] esi +
jmp loc_436009  +
cmp al 39h +
jg loc_43600D  +
cmp [ebp+var_4C] 19h +
jnb loc_436003  +
inc [ebp+var_4C]  +
sub al bl +
mov [edi] al +
inc edi  +
jmp loc_436006  +
inc [ebp+var_50]  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_435FEF  +
mov ecx [ebp+arg_1C] +
mov ecx [ecx] +
mov ecx [ecx+0BCh] +
mov ecx [ecx] +
cmp al [ecx] +
jz loc_435F8A  +
cmp al 2Bh +
jz loc_435FB4  +
cmp al 2Dh +
jz loc_435FB4  +
jmp loc_435F9A  +
cmp [ebp+var_4C] 0 +
mov [ebp+var_58] esi +
mov [ebp+var_5C] esi +
jnz loc_436061  +
jmp loc_436043  +
dec [ebp+var_50]  +
mov al [edx] +
inc edx  +
cmp al bl +
jz loc_43603D  +
jmp loc_436061  +
cmp al 39h +
jg loc_436022  +
cmp [ebp+var_4C] 19h +
jnb loc_43605E  +
inc [ebp+var_4C]  +
sub al bl +
mov [edi] al +
inc edi  +
dec [ebp+var_50]  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_436049  +
jmp loc_436022  +
sub al bl +
mov [ebp+var_5C] esi +
cmp al 9 +
ja loc_435FE2  +
push 4  +
jmp loc_435F26  +
lea ecx [edx-2] +
mov [ebp+var_54] ecx +
lea ecx [eax-31h] +
cmp cl 8 +
ja loc_436090  +
push 9  +
jmp loc_435F26  +
movsx eax al +
sub eax 2Bh +
jz loc_4360B8  +
dec eax  +
dec eax  +
jz loc_4360AC  +
sub eax 3 +
jnz loc_435FE2  +
push 8  +
jmp loc_435F3D  +
or [ebp+var_68] 0FFFFFFFFh +
push 7  +
pop ecx  +
jmp loc_435F09  +
push 7  +
jmp loc_435F3D  +
mov [ebp+var_60] esi +
jmp loc_4360C7  +
mov al [edx] +
inc edx  +
cmp al bl +
jz loc_4360C4  +
sub al 31h +
cmp al 8 +
jbe loc_436089  +
dec edx  +
jmp loc_4360FA  +
lea ecx [eax-31h] +
cmp cl 8 +
jbe loc_436089  +
cmp al bl +
jmp loc_43609F  +
cmp [ebp+arg_18] 0 +
jz loc_43612D  +
movsx eax al +
sub eax 2Bh +
lea ecx [edx-1] +
mov [ebp+var_54] ecx +
jz loc_4360B8  +
dec eax  +
dec eax  +
jz loc_4360AC  +
mov edx ecx +
cmp [ebp+var_58] 0 +
mov eax [ebp+var_70] +
mov [eax] edx +
jz loc_4364E1  +
push 18h  +
pop eax  +
cmp [ebp+var_4C] eax +
jbe loc_436121  +
cmp [ebp+var_9] 5 +
jl loc_43611A  +
inc [ebp+var_9]  +
dec edi  +
inc [ebp+var_50]  +
mov [ebp+var_4C] eax +
cmp [ebp+var_4C] 0 +
jbe loc_436508  +
jmp loc_436186  +
push 0Ah  +
pop ecx  +
dec edx  +
cmp ecx 0Ah +
jnz loc_435F09  +
jmp loc_4360FA  +
mov [ebp+var_60] esi +
xor ecx ecx +
jmp loc_43615C  +
cmp al 39h +
jg loc_436167  +
imul ecx ecx +
movsx esi al +
lea ecx [ecx+esi-30h] +
cmp ecx 1450h +
jg loc_436162  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_436143  +
jmp loc_436167  +
mov ecx 1451h +
mov [ebp+var_64] ecx +
jmp loc_436177  +
cmp al 39h +
jg loc_4360D1  +
mov al [edx] +
inc edx  +
cmp al bl +
jge loc_43616C  +
jmp loc_4360D1  +
dec [ebp+var_4C]  +
inc [ebp+var_50]  +
dec edi  +
cmp byte ptr [edi] 0 +
jz loc_436180  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+var_4C]  +
lea eax [ebp+var_20] +
push eax  +
call sub_43B7DB  +
mov eax [ebp+var_64] +
xor edx edx +
add esp 0Ch +
cmp [ebp+var_68] edx +
jge loc_4361AB  +
neg eax  +
add eax [ebp+var_50] +
cmp [ebp+var_60] edx +
jnz loc_4361B6  +
add eax [ebp+arg_10] +
cmp [ebp+var_5C] edx +
jnz loc_4361BE  +
sub eax [ebp+arg_14] +
cmp eax 1450h +
jg loc_4364EA  +
cmp eax 0FFFFEBB0h +
jl loc_436501  +
mov ecx offset unk_451350 +
sub ecx 60h +
mov [ebp+var_54] eax +
cmp eax edx +
jz loc_4364CF  +
jge loc_4361F6  +
neg eax  +
mov ecx offset unk_4514B0 +
mov [ebp+var_54] eax +
sub ecx 60h +
cmp [ebp+arg_C] edx +
jnz loc_436201  +
xor eax eax +
mov word ptr [ebp+var_3C] ax +
cmp [ebp+var_54] edx +
jz loc_4364CF  +
jmp loc_436211  +
mov ecx [ebp+var_7C] +
xor edx edx +
mov eax [ebp+var_54] +
sar [ebp+var_54] 3 +
add ecx 54h +
and eax 7 +
mov [ebp+var_7C] ecx +
cmp eax edx +
jz loc_4364C5  +
imul eax eax +
lea ebx [ecx+eax] +
mov eax 8000h +
cmp [ebx] ax +
jb loc_436247  +
mov esi ebx +
lea edi [ebp+var_48] +
movs   +
movs   +
movs   +
dec [ebp+var_48+2]  +
lea ebx [ebp+var_48] +
mov edx [ebp+var_32] +
xor eax eax +
mov [ebp+var_50] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
movzx eax word ptr [ebx+0Ah] +
mov esi eax +
xor esi [ebp+var_32] +
mov ecx 7FFFh +
and edx ecx +
and eax ecx +
and esi 8000h +
mov edi 7FFFh +
lea ecx [eax+edx] +
mov [ebp+var_70] esi +
movzx ecx cx +
cmp dx di +
jnb loc_4364A7  +
cmp ax di +
jnb loc_4364A7  +
mov edi 0BFFDh +
cmp cx di +
ja loc_4364A7  +
mov esi 3FBFh +
cmp cx si +
ja loc_4362B5  +
xor eax eax +
mov [ebp+var_38] eax +
mov [ebp+var_3C] eax +
jmp loc_4364C2  +
xor esi esi +
cmp dx si +
jnz loc_4362DB  +
inc ecx  +
test dword ptr [ebp-34h] 7FFFFFFFh +
jnz loc_4362DB  +
cmp [ebp+var_38] esi +
jnz loc_4362DB  +
cmp [ebp+var_3C] esi +
jnz loc_4362DB  +
xor eax eax +
mov word ptr [ebp+var_32] ax +
jmp loc_4364C5  +
cmp ax si +
jnz loc_436301  +
inc ecx  +
test dword ptr [ebx+8] 7FFFFFFFh +
jnz loc_436301  +
cmp [ebx+4] esi +
jnz loc_436301  +
cmp [ebx] esi +
jnz loc_436301  +
mov [ebp-34h] esi +
mov [ebp+var_38] esi +
mov [ebp+var_3C] esi +
jmp loc_4364C5  +
mov [ebp+var_68] esi +
lea edi [ebp+var_28] +
mov [ebp+var_58] 5 +
mov eax [ebp+var_68] +
mov edx [ebp+var_58] +
add eax eax +
mov [ebp+var_64] edx +
test edx edx +
jle loc_43636F  +
lea eax [ebp+eax+var_3C] +
mov [ebp+var_5C] eax +
lea eax [ebx+8] +
mov [ebp+var_60] eax +
mov eax [ebp+var_60] +
mov edx [ebp+var_5C] +
movzx edx word ptr [edx] +
movzx eax word ptr [eax] +
and [ebp+var_4C] 0 +
imul eax edx +
mov edx [edi-4] +
lea esi [edx+eax] +
cmp esi edx +
jb loc_43634B  +
cmp esi eax +
jnb loc_436352  +
mov [ebp+var_4C] 1 +
cmp [ebp+var_4C] 0 +
mov [edi-4] esi +
jz loc_43635E  +
inc word ptr [edi]  +
add [ebp+var_5C] 2 +
sub [ebp+var_60] 2 +
dec [ebp+var_64]  +
cmp [ebp+var_64] 0 +
jg loc_43632A  +
add edi 2 +
inc [ebp+var_68]  +
dec [ebp+var_58]  +
cmp [ebp+var_58] 0 +
jg loc_43630E  +
add ecx 0C002h +
test cx cx +
jle loc_4363C0  +
mov edi [ebp+var_24] +
test edi edi +
js loc_4363BB  +
mov esi [ebp+var_28] +
mov eax [ebp+var_2C] +
shl [ebp+var_2C] 1 +
shr eax 1Fh +
mov edx esi +
add esi esi +
or esi eax +
shr edx 1Fh +
lea eax [edi+edi] +
or eax edx +
add ecx 0FFFFh +
mov [ebp+var_28] esi +
mov [ebp+var_24] eax +
test cx cx +
jg loc_436389  +
test cx cx +
jg loc_43640D  +
add ecx 0FFFFh +
test cx cx +
jns loc_43640D  +
mov eax ecx +
neg eax  +
movzx esi ax +
add ecx esi +
test byte ptr [ebp+var_2C] 1 +
jz loc_4363DD  +
inc [ebp+var_50]  +
mov eax [ebp+var_24] +
mov edi [ebp+var_28] +
mov edx [ebp+var_28] +
shr [ebp+var_24] 1 +
shl eax 1Fh +
shr edi 1 +
or edi eax +
mov eax [ebp+var_2C] +
shl edx 1Fh +
shr eax 1 +
or eax edx +
dec esi  +
mov [ebp+var_28] edi +
mov [ebp+var_2C] eax +
jnz loc_4363D4  +
cmp [ebp+var_50] esi +
jz loc_43640D  +
or word ptr [ebp+var_2C] 1 +
mov eax 8000h +
cmp word ptr [ebp+var_2C] ax +
ja loc_436429  +
mov edx [ebp+var_2C] +
and edx 1FFFFh +
cmp edx 18000h +
jnz loc_43645D  +
cmp [ebp+var_2C+2] 0FFFFFFFFh +
jnz loc_43645A  +
and [ebp+var_2C+2] 0 +
cmp [ebp+var_28+2] 0FFFFFFFFh +
jnz loc_436455  +
and [ebp+var_28+2] 0 +
mov edx 0FFFFh +
cmp word ptr [ebp+var_24+2] dx +
jnz loc_43644F  +
mov word ptr [ebp+var_24+2] ax +
inc ecx  +
jmp loc_43645D  +
inc word ptr [ebp+var_24+2]  +
jmp loc_43645D  +
inc [ebp+var_28+2]  +
jmp loc_43645D  +
inc [ebp+var_2C+2]  +
mov eax 7FFFh +
cmp cx ax +
jb loc_43648A  +
xor eax eax +
xor ecx ecx +
cmp word ptr [ebp+var_70] ax +
mov [ebp+var_38] eax +
setz cl  +
mov [ebp+var_3C] eax +
dec ecx  +
and ecx 80000000h +
add ecx 7FFF8000h +
mov [ebp-34h] ecx +
jmp loc_4364C5  +
mov ax word ptr [ebp+var_2C+2] +
or ecx [ebp+var_70] +
mov word ptr [ebp+var_3C] ax +
mov eax [ebp+var_28] +
mov [ebp+var_3C+2] eax +
mov eax [ebp+var_24] +
mov [ebp+var_38+2] eax +
mov word ptr [ebp+var_32] cx +
jmp loc_4364C5  +
xor eax eax +
test si si +
setz al  +
and [ebp+var_38] 0 +
dec eax  +
and eax 80000000h +
add eax 7FFF8000h +
and [ebp+var_3C] 0 +
mov [ebp-34h] eax +
cmp [ebp+var_54] 0 +
jnz loc_43620C  +
mov eax [ebp-34h] +
movzx ecx word ptr [ebp+var_3C] +
mov esi [ebp+var_3C+2] +
mov edx [ebp+var_38+2] +
shr eax 10h +
jmp loc_436510  +
mov [ebp+var_6C] 4 +
jmp loc_436508  +
xor esi esi +
mov eax 7FFFh +
mov edx 80000000h +
xor ecx ecx +
mov [ebp+var_6C] 2 +
jmp loc_436510  +
mov [ebp+var_6C] 1 +
xor ecx ecx +
xor eax eax +
xor edx edx +
xor esi esi +
mov edi [ebp+var_78] +
or eax [ebp+var_74] +
mov [edi] cx +
mov [edi+0Ah] ax +
mov eax [ebp+var_6C] +
mov [edi+2] esi +
mov [edi+6] edx +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_425BB3  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push dword ptr [esi+4]  +
sub eax 3 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov eax edi +
sub eax 0 +
jz loc_4396B8  +
dec eax  +
jz loc_4396A7  +
dec eax  +
jz loc_43967B  +
dec eax  +
jz loc_439637  +
dec eax  +
jz loc_4395B6  +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
push 20h  +
pop edx  +
jmp loc_43865E  +
mov esi [eax] +
cmp esi [ecx] +
jz loc_4382A6  +
movzx esi byte ptr [eax] +
movzx ebx byte ptr [ecx] +
sub esi ebx +
jz loc_43824F  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+1] +
movzx ebx byte ptr [ecx+1] +
sub esi ebx +
jz loc_43826E  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+2] +
movzx ebx byte ptr [ecx+2] +
sub esi ebx +
jz loc_43828D  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+3] +
movzx ebx byte ptr [ecx+3] +
sub esi ebx +
jz loc_4382A8  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_4382A8  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov esi [eax+4] +
cmp esi [ecx+4] +
jz loc_43832E  +
movzx esi byte ptr [eax+4] +
movzx ebx byte ptr [ecx+4] +
sub esi ebx +
jz loc_4382D7  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+5] +
movzx ebx byte ptr [ecx+5] +
sub esi ebx +
jz loc_4382F6  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+6] +
movzx ebx byte ptr [ecx+6] +
sub esi ebx +
jz loc_438315  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+7] +
movzx ebx byte ptr [ecx+7] +
sub esi ebx +
jz loc_438330  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_438330  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov esi [eax+8] +
cmp esi [ecx+8] +
jz loc_4383B6  +
movzx esi byte ptr [eax+8] +
movzx ebx byte ptr [ecx+8] +
sub esi ebx +
jz loc_43835F  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+9] +
movzx ebx byte ptr [ecx+9] +
sub esi ebx +
jz loc_43837E  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+0Ah] +
movzx ebx byte ptr [ecx+0Ah] +
sub esi ebx +
jz loc_43839D  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+0Bh] +
movzx ebx byte ptr [ecx+0Bh] +
sub esi ebx +
jz loc_4383B8  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_4383B8  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov esi [eax+0Ch] +
cmp esi [ecx+0Ch] +
jz loc_43843E  +
movzx esi byte ptr [eax+0Ch] +
movzx ebx byte ptr [ecx+0Ch] +
sub esi ebx +
jz loc_4383E7  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+0Dh] +
movzx ebx byte ptr [ecx+0Dh] +
sub esi ebx +
jz loc_438406  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+0Eh] +
movzx ebx byte ptr [ecx+0Eh] +
sub esi ebx +
jz loc_438425  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+0Fh] +
movzx ebx byte ptr [ecx+0Fh] +
sub esi ebx +
jz loc_438440  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_438440  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov esi [eax+10h] +
cmp esi [ecx+10h] +
jz loc_4384C6  +
movzx ebx byte ptr [ecx+10h] +
movzx esi byte ptr [eax+10h] +
sub esi ebx +
jz loc_43846F  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+11h] +
movzx ebx byte ptr [ecx+11h] +
sub esi ebx +
jz loc_43848E  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+12h] +
movzx ebx byte ptr [ecx+12h] +
sub esi ebx +
jz loc_4384AD  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+13h] +
movzx ebx byte ptr [ecx+13h] +
sub esi ebx +
jz loc_4384C8  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_4384C8  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov esi [eax+14h] +
cmp esi [ecx+14h] +
jz loc_43854E  +
movzx esi byte ptr [eax+14h] +
movzx ebx byte ptr [ecx+14h] +
sub esi ebx +
jz loc_4384F7  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+15h] +
movzx ebx byte ptr [ecx+15h] +
sub esi ebx +
jz loc_438516  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+16h] +
movzx ebx byte ptr [ecx+16h] +
sub esi ebx +
jz loc_438535  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+17h] +
movzx ebx byte ptr [ecx+17h] +
sub esi ebx +
jz loc_438550  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_438550  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov esi [eax+18h] +
cmp esi [ecx+18h] +
jz loc_4385D6  +
movzx esi byte ptr [eax+18h] +
movzx ebx byte ptr [ecx+18h] +
sub esi ebx +
jz loc_43857F  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+19h] +
movzx ebx byte ptr [ecx+19h] +
sub esi ebx +
jz loc_43859E  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+1Ah] +
movzx ebx byte ptr [ecx+1Ah] +
sub esi ebx +
jz loc_4385BD  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+1Bh] +
movzx ebx byte ptr [ecx+1Bh] +
sub esi ebx +
jz loc_4385D8  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_4385D8  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov esi [eax+1Ch] +
cmp esi [ecx+1Ch] +
jz loc_438652  +
movzx esi byte ptr [eax+1Ch] +
movzx ebx byte ptr [ecx+1Ch] +
sub esi ebx +
jz loc_438603  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+1Dh] +
movzx ebx byte ptr [ecx+1Dh] +
sub esi ebx +
jz loc_43861E  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+1Eh] +
movzx ebx byte ptr [ecx+1Eh] +
sub esi ebx +
jz loc_438639  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax+1Fh] +
movzx ebx byte ptr [ecx+1Fh] +
sub esi ebx +
jz loc_438654  +
xor ebx ebx +
test esi esi +
setnle bl  +
lea esi [ebx+ebx-1] +
jmp loc_438654  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
add eax edx +
add ecx edx +
sub edi edx +
cmp edi edx +
jnb loc_43822C  +
add eax edi +
add ecx edi +
cmp edi 1Fh +
ja loc_438A17  +
jmp ds:off_4396C0[edi*4]  +
mov eax esi +
jmp loc_438A19  +
mov edx [eax-1Ch] +
cmp edx [ecx-1Ch] +
jz loc_4386F2  +
movzx esi dl +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_4386A3  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Bh] +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_4386BE  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Ah] +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_4386D9  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-19h] +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_4386F4  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_4386F4  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-18h] +
cmp edx [ecx-18h] +
jz loc_438775  +
movzx esi dl +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_43871E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-17h] +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_43873D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-16h] +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_43875C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-15h] +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_438777  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438777  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-14h] +
cmp edx [ecx-14h] +
jz loc_4387FC  +
movzx esi dl +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_4387A5  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-13h] +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_4387C4  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-12h] +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_4387E3  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-11h] +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_4387FE  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_4387FE  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-10h] +
cmp edx [ecx-10h] +
jz loc_438883  +
movzx esi dl +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_43882C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Fh] +
movzx edx byte ptr [ecx-0Fh] +
sub esi edx +
jz loc_43884B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Eh] +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_43886A  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Dh] +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_438885  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438885  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-0Ch] +
cmp edx [ecx-0Ch] +
jz loc_43890B  +
movzx edx byte ptr [ecx-0Ch] +
movzx esi byte ptr [eax-0Ch] +
sub esi edx +
jz loc_4388B4  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Bh] +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_4388D3  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Ah] +
movzx edx byte ptr [ecx-0Ah] +
sub esi edx +
jz loc_4388F2  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-9] +
movzx edx byte ptr [ecx-9] +
sub esi edx +
jz loc_43890D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_43890D  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-8] +
cmp edx [ecx-8] +
jz loc_438992  +
movzx esi dl +
movzx edx byte ptr [ecx-8] +
sub esi edx +
jz loc_43893B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-7] +
movzx edx byte ptr [ecx-7] +
sub esi edx +
jz loc_43895A  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-6] +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_438979  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-5] +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_438994  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438994  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-4] +
cmp edx [ecx-4] +
jz loc_438A11  +
movzx esi dl +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_4389BE  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jnz loc_4389F4  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_4389D9  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jnz loc_4389F4  +
movzx esi byte ptr [eax-2] +
movzx edx byte ptr [ecx-2] +
sub esi edx +
jz loc_4389F8  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jz loc_4389F8  +
mov eax edx +
jmp loc_438A13  +
movzx eax byte ptr [eax-1] +
movzx ecx byte ptr [ecx-1] +
sub eax ecx +
jz loc_438A13  +
xor ecx ecx +
test eax eax +
setnle cl  +
lea eax [ecx+ecx-1] +
jmp loc_438A13  +
xor eax eax +
test eax eax +
jnz loc_438A19  +
xor eax eax +
pop ebx  +
jmp loc_4396BA  +
mov edx [eax-1Dh] +
cmp edx [ecx-1Dh] +
jz loc_438A9C  +
movzx esi dl +
movzx edx byte ptr [ecx-1Dh] +
sub esi edx +
jz loc_438A45  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Ch] +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_438A64  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Bh] +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_438A83  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Ah] +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_438A9E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438A9E  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-19h] +
cmp edx [ecx-19h] +
jz loc_438B23  +
movzx esi dl +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_438ACC  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-18h] +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_438AEB  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-17h] +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_438B0A  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-16h] +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_438B25  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438B25  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-15h] +
cmp edx [ecx-15h] +
jz loc_438BAA  +
movzx esi dl +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_438B53  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-14h] +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_438B72  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-13h] +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_438B91  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-12h] +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_438BAC  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438BAC  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-11h] +
cmp edx [ecx-11h] +
jz loc_438C31  +
movzx esi dl +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_438BDA  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-10h] +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_438BF9  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Fh] +
movzx edx byte ptr [ecx-0Fh] +
sub esi edx +
jz loc_438C18  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Eh] +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_438C33  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438C33  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-0Dh] +
cmp edx [ecx-0Dh] +
jz loc_438CB8  +
movzx esi dl +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_438C61  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Ch] +
movzx edx byte ptr [ecx-0Ch] +
sub esi edx +
jz loc_438C80  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Bh] +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_438C9F  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Ah] +
movzx edx byte ptr [ecx-0Ah] +
sub esi edx +
jz loc_438CBA  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438CBA  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-9] +
cmp edx [ecx-9] +
jz loc_438D40  +
movzx edx byte ptr [ecx-9] +
movzx esi byte ptr [eax-9] +
sub esi edx +
jz loc_438CE9  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-8] +
movzx edx byte ptr [ecx-8] +
sub esi edx +
jz loc_438D08  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-7] +
movzx edx byte ptr [ecx-7] +
sub esi edx +
jz loc_438D27  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-6] +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_438D42  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438D42  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-5] +
cmp edx [ecx-5] +
jz loc_438DC7  +
movzx esi dl +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_438D70  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-4] +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_438D8F  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_438DAE  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-2] +
movzx edx byte ptr [ecx-2] +
sub esi edx +
jz loc_438DC9  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438DC9  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
movzx ecx byte ptr [ecx-1] +
movzx eax byte ptr [eax-1] +
sub eax ecx +
jz loc_438A19  +
xor ecx ecx +
test eax eax +
setnle cl  +
lea eax [ecx+ecx-1] +
jmp loc_438A19  +
mov edx [eax-1Eh] +
cmp edx [ecx-1Eh] +
jz loc_438E6E  +
movzx esi dl +
movzx edx byte ptr [ecx-1Eh] +
sub esi edx +
jz loc_438E17  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Dh] +
movzx edx byte ptr [ecx-1Dh] +
sub esi edx +
jz loc_438E36  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Ch] +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_438E55  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Bh] +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_438E70  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438E70  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-1Ah] +
cmp edx [ecx-1Ah] +
jz loc_438EF5  +
movzx esi dl +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_438E9E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-19h] +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_438EBD  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-18h] +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_438EDC  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-17h] +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_438EF7  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438EF7  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-16h] +
cmp edx [ecx-16h] +
jz loc_438F7C  +
movzx esi dl +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_438F25  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-15h] +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_438F44  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-14h] +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_438F63  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-13h] +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_438F7E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_438F7E  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-12h] +
cmp edx [ecx-12h] +
jz loc_439003  +
movzx esi dl +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_438FAC  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-11h] +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_438FCB  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-10h] +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_438FEA  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Fh] +
movzx edx byte ptr [ecx-0Fh] +
sub esi edx +
jz loc_439005  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_439005  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-0Eh] +
cmp edx [ecx-0Eh] +
jz loc_43908A  +
movzx esi dl +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_439033  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Dh] +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_439052  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Ch] +
movzx edx byte ptr [ecx-0Ch] +
sub esi edx +
jz loc_439071  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Bh] +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_43908C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_43908C  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-0Ah] +
cmp edx [ecx-0Ah] +
jz loc_439112  +
movzx edx byte ptr [ecx-0Ah] +
movzx esi byte ptr [eax-0Ah] +
sub esi edx +
jz loc_4390BB  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx edx byte ptr [ecx-9] +
movzx esi byte ptr [eax-9] +
sub esi edx +
jz loc_4390DA  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx edx byte ptr [ecx-8] +
movzx esi byte ptr [eax-8] +
sub esi edx +
jz loc_4390F9  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx edx byte ptr [ecx-7] +
movzx esi byte ptr [eax-7] +
sub esi edx +
jz loc_439114  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_439114  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-6] +
cmp edx [ecx-6] +
jz loc_439199  +
movzx esi dl +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_439142  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-5] +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_439161  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-4] +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_439180  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_43919B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_43919B  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov dx [eax-2] +
cmp dx [ecx-2] +
jz loc_438A17  +
movzx edx byte ptr [ecx-2] +
movzx esi byte ptr [eax-2] +
sub esi edx +
jz loc_438DD1  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jnz loc_4395AF  +
jmp loc_438DD1  +
mov edx [eax-1Fh] +
cmp edx [ecx-1Fh] +
jz loc_439257  +
movzx edx byte ptr [ecx-1Fh] +
movzx esi byte ptr [eax-1Fh] +
sub esi edx +
jz loc_439200  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Eh] +
movzx edx byte ptr [ecx-1Eh] +
sub esi edx +
jz loc_43921F  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Dh] +
movzx edx byte ptr [ecx-1Dh] +
sub esi edx +
jz loc_43923E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Ch] +
movzx edx byte ptr [ecx-1Ch] +
sub esi edx +
jz loc_439259  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_439259  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-1Bh] +
cmp edx [ecx-1Bh] +
jz loc_4392DE  +
movzx esi dl +
movzx edx byte ptr [ecx-1Bh] +
sub esi edx +
jz loc_439287  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-1Ah] +
movzx edx byte ptr [ecx-1Ah] +
sub esi edx +
jz loc_4392A6  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-19h] +
movzx edx byte ptr [ecx-19h] +
sub esi edx +
jz loc_4392C5  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-18h] +
movzx edx byte ptr [ecx-18h] +
sub esi edx +
jz loc_4392E0  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_4392E0  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-17h] +
cmp edx [ecx-17h] +
jz loc_439365  +
movzx esi dl +
movzx edx byte ptr [ecx-17h] +
sub esi edx +
jz loc_43930E  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-16h] +
movzx edx byte ptr [ecx-16h] +
sub esi edx +
jz loc_43932D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-15h] +
movzx edx byte ptr [ecx-15h] +
sub esi edx +
jz loc_43934C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-14h] +
movzx edx byte ptr [ecx-14h] +
sub esi edx +
jz loc_439367  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_439367  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-13h] +
cmp edx [ecx-13h] +
jz loc_4393EC  +
movzx esi dl +
movzx edx byte ptr [ecx-13h] +
sub esi edx +
jz loc_439395  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-12h] +
movzx edx byte ptr [ecx-12h] +
sub esi edx +
jz loc_4393B4  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-11h] +
movzx edx byte ptr [ecx-11h] +
sub esi edx +
jz loc_4393D3  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-10h] +
movzx edx byte ptr [ecx-10h] +
sub esi edx +
jz loc_4393EE  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_4393EE  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-0Fh] +
cmp edx [ecx-0Fh] +
jz loc_439474  +
movzx edx byte ptr [ecx-0Fh] +
movzx esi byte ptr [eax-0Fh] +
sub esi edx +
jz loc_43941D  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Eh] +
movzx edx byte ptr [ecx-0Eh] +
sub esi edx +
jz loc_43943C  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Dh] +
movzx edx byte ptr [ecx-0Dh] +
sub esi edx +
jz loc_43945B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Ch] +
movzx edx byte ptr [ecx-0Ch] +
sub esi edx +
jz loc_439476  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_439476  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-0Bh] +
cmp edx [ecx-0Bh] +
jz loc_4394FB  +
movzx esi dl +
movzx edx byte ptr [ecx-0Bh] +
sub esi edx +
jz loc_4394A4  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-0Ah] +
movzx edx byte ptr [ecx-0Ah] +
sub esi edx +
jz loc_4394C3  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-9] +
movzx edx byte ptr [ecx-9] +
sub esi edx +
jz loc_4394E2  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-8] +
movzx edx byte ptr [ecx-8] +
sub esi edx +
jz loc_4394FD  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_4394FD  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
mov edx [eax-7] +
cmp edx [ecx-7] +
jz loc_439582  +
movzx esi dl +
movzx edx byte ptr [ecx-7] +
sub esi edx +
jz loc_43952B  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-6] +
movzx edx byte ptr [ecx-6] +
sub esi edx +
jz loc_43954A  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-5] +
movzx edx byte ptr [ecx-5] +
sub esi edx +
jz loc_439569  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-4] +
movzx edx byte ptr [ecx-4] +
sub esi edx +
jz loc_439584  +
xor edx edx +
test esi esi +
setnle dl  +
lea esi [edx+edx-1] +
jmp loc_439584  +
xor esi esi +
test esi esi +
jnz loc_43867A  +
movzx esi byte ptr [eax-3] +
movzx edx byte ptr [ecx-3] +
sub esi edx +
jz loc_4391B1  +
xor edx edx +
test esi esi +
setnle dl  +
lea edx [edx+edx-1] +
test edx edx +
jz loc_4391B1  +
mov eax edx +
jmp loc_438A19  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [esi] +
sub eax edx +
jz loc_4395D9  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_4396BA  +
movzx eax byte ptr [ecx+1] +
movzx edx byte ptr [esi+1] +
sub eax edx +
jz loc_4395F8  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_4396BA  +
movzx eax byte ptr [ecx+2] +
movzx edx byte ptr [esi+2] +
sub eax edx +
jz loc_439617  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_4396BA  +
movzx eax byte ptr [ecx+3] +
movzx ecx byte ptr [esi+3] +
sub eax ecx +
jz loc_4396BA  +
xor ecx ecx +
test eax eax +
setnle cl  +
lea eax [ecx+ecx-1] +
jmp loc_4396BA  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [esi] +
sub eax edx +
jz loc_439656  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_4396BA  +
movzx eax byte ptr [ecx+1] +
movzx edx byte ptr [esi+1] +
sub eax edx +
jz loc_439671  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_4396BA  +
movzx eax byte ptr [ecx+2] +
movzx ecx byte ptr [esi+2] +
jmp loc_43961F  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx eax byte ptr [ecx] +
movzx edx byte ptr [esi] +
sub eax edx +
jz loc_43969A  +
xor edx edx +
test eax eax +
setnle dl  +
lea eax [edx+edx-1] +
test eax eax +
jnz loc_4396BA  +
movzx eax byte ptr [ecx+1] +
movzx ecx byte ptr [esi+1] +
jmp loc_43961F  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
movzx eax byte ptr [eax] +
movzx ecx byte ptr [ecx] +
jmp loc_43961F  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov edi edi +
mov edi edi +
mov edi edi +
retn   +
***
call sub_42CC00  +
cmp dword ptr [ebp-1Ch] 0 +
pop ecx  +
cmp ebx 8 +
jz loc_43998A  +
cmp ebx 0Bh +
jz loc_43998A  +
cmp ebx 4 +
jnz loc_43999B  +
mov eax [ebp-2Ch] +
mov [edi+60h] eax +
cmp ebx 8 +
jnz loc_43999B  +
mov eax [ebp-30h] +
mov [edi+64h] eax +
xor eax eax +
***
and dword_455CB8 0 +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_455C90 eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_4399D6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_4399D2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jz loc_439A3D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_439A35  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_439A3F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_439A25  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
js loc_439D17  +
cmp ecx 2 +
jle loc_439D0A  +
cmp ecx 3 +
jnz loc_439D17  +
mov eax dword_454E3C +
pop ebp  +
retn   +
mov eax dword_454E3C +
mov dword_454E3C ecx +
pop ebp  +
retn   +
call sub_428D04  +
mov dword ptr [eax] 16h +
call sub_42C505  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_439D48  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_439D50  +
push large dword ptr fs:0  +
mov eax dword_450240 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_439E07  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_439DDA  +
cmp esi [esp+18h+arg_4] +
jbe loc_439E07  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_439E05  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_439E45  +
mov eax [ebx+esi*4+8] +
call sub_439E64  +
jmp loc_439DBE  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebx offset unk_451310 +
mov ebx offset unk_451310 +
mov edi edi +
mov eax dword_450240 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
movzx eax word ptr [ecx+6] +
push ebx  +
mov ebx eax +
shr ebx 4 +
and eax 8000h +
push esi  +
mov edx 7FFh +
and ebx edx +
push edi  +
mov [ebp+arg_4] eax +
mov eax [ecx+4] +
mov ecx [ecx] +
movzx edi bx +
mov esi 80000000h +
and eax 0FFFFFh +
mov [ebp+var_4] esi +
test edi edi +
jz loc_43A298  +
cmp edi edx +
jz loc_43A291  +
add ebx 3C00h +
jmp loc_43A2B9  +
mov edi 7FFFh +
jmp loc_43A2BC  +
xor edx edx +
cmp eax edx +
jnz loc_43A2B0  +
cmp ecx edx +
jnz loc_43A2B0  +
mov eax [ebp+arg_0] +
mov cx word ptr [ebp+arg_4] +
mov [eax+4] edx +
mov [eax] edx +
jmp loc_43A2F2  +
add ebx 3C01h +
mov [ebp+var_4] edx +
movzx edi bx +
mov edx ecx +
shr edx 15h +
shl eax 0Bh +
or edx eax +
or edx [ebp+var_4] +
mov eax [ebp+arg_0] +
shl ecx 0Bh +
jmp loc_43A2E4  +
mov ecx [eax] +
mov ebx ecx +
shr ebx 1Fh +
add edx edx +
or edx ebx +
add ecx ecx +
add edi 0FFFFh +
mov [eax] ecx +
mov [eax+4] edx +
test edx esi +
jz loc_43A2D1  +
mov ecx [ebp+arg_4] +
or ecx edi +
pop edi  +
pop esi  +
mov [eax+8] cx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_450240 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+14h] +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov [ebp-24h] eax +
push edi  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-30h] +
push eax  +
call sub_43A248  +
pop ecx  +
pop ecx  +
lea eax [ebp-20h] +
push eax  +
push 0  +
push 11h  +
sub esp 0Ch +
lea esi [ebp-30h] +
mov edi esp +
movs   +
movs   +
movs   +
call sub_43BAF4  +
mov esi [ebp-24h] +
mov [ebx+8] eax +
movsx eax byte ptr [ebp-1Eh] +
mov [ebx] eax +
movsx eax word ptr [ebp-20h] +
mov [ebx+4] eax +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push esi  +
call sub_42C10E  +
add esp 24h +
test eax eax +
jnz loc_43A37C  +
mov ecx [ebp-4] +
pop edi  +
mov [ebx+0Ch] esi +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_425BB3  +
leave   +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_42C4B3  +
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_43A3B4  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_43A3D0  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_43A3FC  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_43A443  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_43A40A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_43A438  +
cmp edx [esp+arg_4] +
ja loc_43A438  +
jb loc_43A441  +
cmp eax [esp+arg_0] +
jbe loc_43A441  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_43A455  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_43A469  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_427AEF  +
push [ebp+cchMultiByte]  +
lea eax [ebp+var_10] +
push [ebp+lpMultiByteStr]  +
push [ebp+LCType]  +
push [ebp+Locale]  +
push eax  +
call sub_43A8AC  +
add esp 14h +
cmp [ebp+var_4] 0 +
jz locret_43A9BE  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
push offset sub_42CC60  +
push large dword ptr fs:0  +
mov eax [esp+10h] +
mov [esp+10h] ebp +
lea ebp [esp+10h] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_450240 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
xor eax eax +
mov edi edi +
xor eax eax +
mov eax hObject +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jbe loc_43CA0F  +
mov ecx [ebp+arg_0] +
cmp word ptr [ecx] 0 +
jz loc_43CA0F  +
inc eax  +
add ecx 2 +
cmp eax [ebp+arg_4] +
jb loc_43CA00  +
pop ebp  +
retn   +
***
push edi  +
call sub_42CC00  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B184 +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B210 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_43D2A8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_421E10  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B264 +
jmp sub_425EB5  +
***
lea ecx [ebp+0Ch] +
mov eax [ebp-4Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B2A8 +
jmp sub_425EB5  +
***
lea ecx [ebp-448h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-59Ch] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B2CC +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B418 +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B498 +
jmp sub_425EB5  +
***
mov eax [ebp-138h] +
lea ecx [ebp-12Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-144h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B4CC +
jmp sub_425EB5  +
***
mov ecx [ebp-14h] +
add ecx 4 +
jmp sub_424FDD  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B554 +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B5AC +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1Ch +
jmp loc_405150  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B5E0 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1Ch +
jmp loc_405150  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B638 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B68C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
sub ecx 48h +
jmp loc_404C80  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B6B8 +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B748 +
jmp sub_425EB5  +
***
lea ecx [ebp-10h] +
jmp sub_404AF0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B774 +
jmp sub_425EB5  +
***
lea ecx [ebp-18h] +
jmp sub_424948  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B7A0 +
jmp sub_425EB5  +
***
mov eax [ebp-14h] +
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
jmp loc_404AE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B7E4 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B810 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-2Ch] +
jmp loc_404D60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B858 +
jmp sub_425EB5  +
***
lea ecx [ebp-70h] +
lea ecx [ebp-48h] +
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B8F8 +
jmp sub_425EB5  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-48h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B93C +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_405170  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B960 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-48h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44B9D4 +
jmp sub_425EB5  +
***
mov eax [ebp-30h] +
lea ecx [ebp-0D4h] +
lea ecx [ebp-0CCh] +
mov ecx [ebp-0E8h] +
lea ecx [ebp-0E4h] +
jmp sub_406DE0  +
***
lea ecx [ebp-0F4h] +
jmp sub_406DE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F8h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BA64 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BA90 +
jmp sub_425EB5  +
***
lea ecx [ebp-0ACh] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ACh] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BABC +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 9Ch +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BAE0 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BB3C +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BB68 +
jmp sub_425EB5  +
***
lea ecx [ebp-26Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-284h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BB8C +
jmp sub_425EB5  +
***
mov ecx offset unk_451A68 +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BBE0 +
jmp sub_425EB5  +
***
mov ecx offset unk_451A78 +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BC0C +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BC38 +
jmp sub_425EB5  +
***
lea ecx [ebp+10h] +
jmp sub_404AF0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BC64 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BC90 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BCBC +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BCE8 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 10h +
jmp sub_40B8A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BD2C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
jmp sub_405170  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BD60 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-30h] +
jmp sub_4146B0  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BD9C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BDE0 +
jmp sub_425EB5  +
***
mov ecx [ebp-40h] +
mov ecx [ebp-40h] +
mov ecx [ebp-40h] +
add ecx 14h +
jmp sub_421E10  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BE14 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
sub ecx 48h +
jmp loc_404C50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BEB0 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-2Ch] +
jmp loc_404D60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BEF8 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_43DE8B  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
add ecx 8 +
jmp loc_404C60  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BF54 +
jmp sub_425EB5  +
***
lea ecx [ebp-0A0h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-48h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A4h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BF90 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_405170  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BFD4 +
jmp sub_425EB5  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-0E4h] +
lea ecx [ebp-0ACh] +
lea ecx [ebp-90h] +
lea ecx [ebp-58h] +
lea ecx [ebp-138h] +
lea ecx [ebp-0C8h] +
lea ecx [ebp-74h] +
lea ecx [ebp-100h] +
lea ecx [ebp-154h] +
lea ecx [ebp-11Ch] +
lea ecx [ebp-274h] +
lea ecx [ebp-170h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-278h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44BFF8 +
jmp sub_425EB5  +
***
lea ecx [ebp-30h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C08C +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-48h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C0B0 +
jmp sub_425EB5  +
***
lea ecx [ebp+8] +
lea ecx [ebp-0A2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A30h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C19C +
jmp sub_425EB5  +
***
mov ecx offset unk_451AA0 +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C1C8 +
jmp sub_425EB5  +
***
mov ecx offset unk_451AB0 +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C1F4 +
jmp sub_425EB5  +
***
mov eax [ebp+10h] +
push eax  +
mov ecx [ebp-10h] +
push ecx  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C230 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C25C +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C2B4 +
jmp sub_425EB5  +
***
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
mov ecx [ebp-10h] +
push ecx  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C2E8 +
jmp sub_425EB5  +
***
lea ecx [ebp-42Ch] +
lea ecx [ebp-448h] +
lea ecx [ebp-464h] +
lea ecx [ebp-480h] +
lea ecx [ebp-480h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-488h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C30C +
jmp sub_425EB5  +
***
lea ecx [ebp+8] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C370 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp sub_41E200  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C39C +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-2Ch] +
jmp loc_404D60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C3E4 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-2Ch] +
jmp loc_404D60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C45C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
add ecx 0BCh +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C4B8 +
jmp sub_425EB5  +
***
lea ecx [ebp-144h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-80h] +
lea ecx [ebp-48h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-0D4h] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-64h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-148h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C4DC +
jmp sub_425EB5  +
***
lea ecx [ebp-114h] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
jmp loc_40FB60  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_43E548  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_421E10  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C5F4 +
jmp sub_425EB5  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C620 +
jmp sub_425EB5  +
***
push ebx  +
cld   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
mov dh [esi+edi*8-37CC0001h] +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C64C +
jmp sub_425EB5  +
***
lea ecx [ebp-2B8h] +
lea ecx [ebp-264h] +
lea ecx [ebp-29Ch] +
lea ecx [ebp-280h] +
lea ecx [ebp-280h] +
lea ecx [ebp-29Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2BCh] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C670 +
jmp sub_425EB5  +
***
lea ecx [ebp+8] +
lea ecx [ebp-488h] +
lea ecx [ebp-46Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-490h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C6E4 +
jmp sub_425EB5  +
***
lea ecx [ebp-0F0h] +
lea ecx [ebp-160h] +
lea ecx [ebp-0D4h] +
lea ecx [ebp-144h] +
lea ecx [ebp-128h] +
lea ecx [ebp-10Ch] +
lea ecx [ebp-2F8h] +
lea ecx [ebp-240h] +
lea ecx [ebp-160h] +
lea ecx [ebp-160h] +
lea ecx [ebp-160h] +
lea ecx [ebp-17Ch] +
lea ecx [ebp-2F8h] +
lea ecx [ebp-198h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2FCh] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C708 +
jmp sub_425EB5  +
***
mov eax [ebp-470h] +
lea ecx [ebp-514h] +
lea ecx [ebp-50Ch] +
mov ecx [ebp-528h] +
lea ecx [ebp-524h] +
jmp sub_406DE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-52Ch] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C79C +
jmp sub_425EB5  +
***
lea ecx [ebp-160h] +
lea ecx [ebp-10Ch] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-0D4h] +
lea ecx [ebp-144h] +
lea ecx [ebp-128h] +
mov eax [ebp-184h] +
lea ecx [ebp-220h] +
lea ecx [ebp-218h] +
mov ecx [ebp-234h] +
lea ecx [ebp-230h] +
lea ecx [ebp-30h] +
jmp sub_421E10  +
***
lea ecx [ebp-128h] +
lea ecx [ebp-10Ch] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-0D4h] +
lea ecx [ebp-1D8h] +
jmp sub_406DE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1DCh] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C89C +
jmp sub_425EB5  +
***
lea ecx [ebp-104h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-1ACh] +
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1ACh] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C908 +
jmp sub_425EB5  +
***
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C934 +
jmp sub_425EB5  +
***
mov ecx offset unk_451ADC +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C960 +
jmp sub_425EB5  +
***
mov ecx offset unk_451AEC +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C98C +
jmp sub_425EB5  +
***
lea ecx [ebp+10h] +
mov eax [ebp+0Ch] +
mov eax [ebp-10h] +
and eax 1 +
jz locret_43EA2B  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_4146B0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C9C8 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp sub_416590  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44C9F4 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp loc_414930  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CA20 +
jmp sub_425EB5  +
***
lea ecx [ebp-18h] +
lea ecx [ebp+8] +
lea ecx [ebp-30h] +
mov eax [ebp-1Ch] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CA64 +
jmp sub_425EB5  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp+0Ch] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-24h] +
lea ecx [ebp+0Ch] +
mov eax [ebp-14h] +
and eax 1 +
jz locret_43EB48  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_416190  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CA88 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov eax [ebp-14h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CB38 +
jmp sub_425EB5  +
***
lea ecx [ebp+8] +
jmp sub_404AF0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CB98 +
jmp sub_425EB5  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
jmp loc_404D60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CBE0 +
jmp sub_425EB5  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
jmp loc_404D60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CC70 +
jmp sub_425EB5  +
***
lea ecx [ebp-6Ch] +
lea ecx [ebp-58h] +
mov eax [ebp-4Ch] +
mov ecx [ebp-4Ch] +
mov eax [ebp-2Ch] +
mov ecx [ebp-2Ch] +
jmp sub_4184F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CC94 +
jmp sub_425EB5  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-48h] +
mov eax [ebp-3Ch] +
mov ecx [ebp-3Ch] +
mov eax [ebp-3Ch] +
mov ecx [ebp-3Ch] +
jmp sub_4184F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CCE8 +
jmp sub_425EB5  +
***
lea ecx [ebp-30h] +
jmp loc_414940  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CD44 +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CD9C +
jmp sub_425EB5  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-18h] +
jmp sub_418860  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CDD0 +
jmp sub_425EB5  +
***
lea ecx [ebp-1Ch] +
jmp loc_414990  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CDFC +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CE28 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CE64 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
push 0Ch  +
mov eax [ebp-10h] +
add eax 38h +
push eax  +
call sub_425DC5  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CE98 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
lea ecx [ebp+0Ch] +
jmp sub_418860  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CECC +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CEF8 +
jmp sub_425EB5  +
***
mov eax [ebp-24h] +
push eax  +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CF24 +
jmp sub_425EB5  +
***
mov eax [ebp+10h] +
push eax  +
call sub_425D5C  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CF50 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp sub_419D20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CF7C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp sub_419D20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CFA8 +
jmp sub_425EB5  +
***
mov eax dword_451B18 +
and eax 0FFFFFFFEh +
mov dword_451B18 eax +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44CFD4 +
jmp sub_425EB5  +
***
lea ecx [ebp-30h] +
jmp loc_414A80  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D000 +
jmp sub_425EB5  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp+10h] +
mov eax [ebp-14h] +
and eax 1 +
jz locret_43F018  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_418860  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D03C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp sub_4184F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D068 +
jmp sub_425EB5  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
jmp loc_404D60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D0D0 +
jmp sub_425EB5  +
***
mov eax [ebp-14h] +
mov eax [ebp-14h] +
mov eax [ebp-14h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D10C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp sub_416590  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D138 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
jmp loc_419460  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D164 +
jmp sub_425EB5  +
***
lea ecx [ebp+0Ch] +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D190 +
jmp sub_425EB5  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 18h +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D1CC +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 20h +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D200 +
jmp sub_425EB5  +
***
mov eax [ebp+8] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D22C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 34h +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D260 +
jmp sub_425EB5  +
***
lea ecx [ebp-10h] +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D28C +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D2B8 +
jmp sub_425EB5  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D2EC +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 14h +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D320 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 30h +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D35C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 2Ch +
jmp sub_41F020  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D390 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 14h +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D3D4 +
jmp sub_425EB5  +
***
mov eax [ebp-10h] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D400 +
jmp sub_425EB5  +
***
lea ecx [ebp-10h] +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D42C +
jmp sub_425EB5  +
***
mov eax [ebp+8] +
mov eax [ebp+8] +
mov eax [ebp+8] +
mov eax [ebp+8] +
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
call sub_42520B  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D450 +
jmp sub_425EB5  +
***
mov eax [ebp-18h] +
mov ecx [ebp-18h] +
jmp sub_41E200  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D4B4 +
jmp sub_425EB5  +
***
lea ecx [ebp+10h] +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D4E0 +
jmp sub_425EB5  +
***
lea ecx [ebp+8] +
jmp loc_40C270  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D50C +
jmp sub_425EB5  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-60h] +
lea ecx [ebp-60h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-84h] +
jmp sub_41F020  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-88h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D530 +
jmp sub_425EB5  +
***
lea ecx [ebp-0C48h] +
lea ecx [ebp-0C2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C4Ch] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D59C +
jmp sub_425EB5  +
***
mov eax [ebp-18h] +
push eax  +
mov ecx [ebp-1Ch] +
push ecx  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D5FC +
jmp sub_425EB5  +
***
mov eax [ebp-18h] +
push eax  +
mov ecx [ebp-1Ch] +
push ecx  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D65C +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D6B4 +
jmp sub_425EB5  +
***
mov ecx [ebp-14h] +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D714 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D750 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1Ch +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D784 +
jmp sub_425EB5  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 1Ch +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D7B8 +
jmp sub_425EB5  +
***
lea ecx [ebp-42Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-430h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D7E4 +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D810 +
jmp sub_425EB5  +
***
mov ecx [ebp+0Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D83C +
jmp sub_425EB5  +
***
mov eax [ebp-18h] +
mov ecx [ebp-1Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D8A4 +
jmp sub_425EB5  +
***
mov ecx [ebp-18h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D8D0 +
jmp sub_425EB5  +
***
mov ecx [ebp-18h] +
mov ecx [ebp-1Ch] +
mov ecx [ebp-1Ch] +
mov ecx [ebp-20h] +
jmp loc_401280  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D914 +
jmp sub_425EB5  +
***
mov ecx [ebp+10h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D940 +
jmp sub_425EB5  +
***
lea ecx [ebp-0CCh] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-7Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D4h] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D984 +
jmp sub_425EB5  +
***
lea ecx [ebp-8B4h] +
lea ecx [ebp-82Ch] +
lea ecx [ebp-864h] +
lea ecx [ebp-848h] +
lea ecx [ebp-864h] +
lea ecx [ebp-848h] +
lea ecx [ebp-864h] +
lea ecx [ebp-848h] +
lea ecx [ebp-864h] +
lea ecx [ebp-848h] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8CCh] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44D9A8 +
jmp sub_425EB5  +
***
lea ecx [ebp-48h] +
lea ecx [ebp-2Ch] +
jmp sub_421E10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_425BB3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44DA2C +
jmp sub_425EB5  +
***
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44DA58 +
jmp sub_425EB5  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 20h +
jmp sub_421E10  +
***
lea ecx [ebp-10h] +
jmp sub_424948  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_405150  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44DB6C +
jmp sub_425EB5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_425BB3  +
mov eax offset unk_44DF88 +
jmp sub_425EB5  +
***
call nullsub_1  +
push offset nullsub_2  +
call sub_4263AD  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push 30h  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_43FB00  +
mov dword_451A6C eax +
mov [eax] eax +
mov eax dword_451A6C +
mov [eax+4] eax +
mov eax dword_451A6C +
mov [eax+8] eax +
mov ecx dword_451A6C +
mov al 1 +
mov [ecx+2Ch] al +
mov edx dword_451A6C +
push offset sub_4400B0  +
mov [edx+2Dh] al +
call sub_4263AD  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-10h] +
push ecx  +
mov dword ptr [ebp-10h] offset off_4419DC +
call sub_425C90  +
push ebp  +
mov ebp esp +
sub esp 10h +
push 30h  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_43FB80  +
mov dword_451A7C eax +
mov [eax] eax +
mov eax dword_451A7C +
mov [eax+4] eax +
mov eax dword_451A7C +
mov [eax+8] eax +
mov ecx dword_451A7C +
mov al 1 +
mov [ecx+2Ch] al +
mov edx dword_451A7C +
push offset sub_440110  +
mov [edx+2Dh] al +
call sub_4263AD  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-10h] +
push ecx  +
mov dword ptr [ebp-10h] offset off_4419DC +
call sub_425C90  +
jmp fword ptr [eax+70h]  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push 30h  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_43FC20  +
mov dword_451AA4 eax +
mov [eax] eax +
mov eax dword_451AA4 +
mov [eax+4] eax +
mov eax dword_451AA4 +
mov [eax+8] eax +
mov ecx dword_451AA4 +
mov al 1 +
mov [ecx+2Ch] al +
mov edx dword_451AA4 +
push offset sub_440180  +
mov [edx+2Dh] al +
call sub_4263AD  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-10h] +
push ecx  +
mov dword ptr [ebp-10h] offset off_4419DC +
call sub_425C90  +
push ebp  +
mov ebp esp +
sub esp 10h +
push 30h  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_43FCA0  +
mov dword_451AB4 eax +
mov [eax] eax +
mov eax dword_451AB4 +
mov [eax+4] eax +
mov eax dword_451AB4 +
mov [eax+8] eax +
mov ecx dword_451AB4 +
mov al 1 +
mov [ecx+2Ch] al +
mov edx dword_451AB4 +
push offset sub_4401E0  +
mov [edx+2Dh] al +
call sub_4263AD  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-10h] +
push ecx  +
mov dword ptr [ebp-10h] offset off_4419DC +
call sub_425C90  +
push ebp  +
mov ebp esp +
sub esp 10h +
push 30h  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_43FD20  +
mov dword_451AE0 eax +
mov [eax] eax +
mov eax dword_451AE0 +
mov [eax+4] eax +
mov eax dword_451AE0 +
mov [eax+8] eax +
mov ecx dword_451AE0 +
mov al 1 +
mov [ecx+2Ch] al +
mov edx dword_451AE0 +
push offset sub_440460  +
mov [edx+2Dh] al +
call sub_4263AD  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-10h] +
push ecx  +
mov dword ptr [ebp-10h] offset off_4419DC +
call sub_425C90  +
push ebp  +
mov ebp esp +
sub esp 10h +
push 30h  +
call sub_425CDC  +
add esp 4 +
test eax eax +
jz loc_43FDA0  +
mov dword_451AF0 eax +
mov [eax] eax +
mov eax dword_451AF0 +
mov [eax+4] eax +
mov eax dword_451AF0 +
mov [eax+8] eax +
mov ecx dword_451AF0 +
mov al 1 +
mov [ecx+2Ch] al +
mov edx dword_451AF0 +
push offset sub_4404C0  +
mov [edx+2Dh] al +
call sub_4263AD  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-4] +
push eax  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
call sub_4252D5  +
push offset unk_44B0F0  +
lea ecx [ebp-10h] +
push ecx  +
mov dword ptr [ebp-10h] offset off_4419DC +
call sub_425C90  +
mov ecx offset dword_44FA6C +
call sub_402230  +
push offset loc_4402D0  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FA88 +
call sub_402230  +
push offset loc_4402A0  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FAA4 +
call sub_402230  +
push offset loc_440270  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FAC0 +
call sub_402230  +
push offset sub_440240  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FADC +
call sub_402230  +
push offset loc_440300  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FAF8 +
call sub_402230  +
push offset loc_440330  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FB14 +
call sub_401F20  +
push offset loc_440360  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FB30 +
call sub_402230  +
push offset loc_4403A0  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FB4C +
call sub_402230  +
push offset loc_4403D0  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FB68 +
call sub_402230  +
push offset loc_440400  +
call sub_4263AD  +
pop ecx  +
retn   +
***
mov ecx offset dword_44FB84 +
call sub_402230  +
push offset loc_440430  +
call sub_4263AD  +
pop ecx  +
retn   +
***
push offset aParam  +
push offset unk_451B10  +
call sub_416460  +
push offset sub_440520  +
call sub_4263AD  +
add esp 14h +
retn   +
***
push offset aName_0  +
push offset unk_451B0C  +
call sub_416460  +
push offset sub_440530  +
call sub_4263AD  +
add esp 14h +
retn   +
***
mov eax off_44FF18 +
mov dword_454B3C eax +
retn   +
***
mov eax lpValue +
mov dword_454B40 eax +
retn   +
***
jmp fword ptr [eax+4Ah]  +
***
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
jmp fword ptr (byte_4405FF-440676h)[eax]  +
***
push offset dword_454C20  +
mov ecx offset unk_454CC8 +
jmp loc_4250E8  +
***
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DB3A  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_451A6C +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_10] +
push eax  +
mov ecx offset unk_451A68 +
mov [ebp+var_4] 0 +
call sub_40A3B0  +
mov ecx dword_451A6C +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43DB6A  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_451A7C +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_10] +
push eax  +
mov ecx offset unk_451A78 +
mov [ebp+var_4] 0 +
call sub_40A3B0  +
mov ecx dword_451A7C +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E15A  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_451AA4 +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_10] +
push eax  +
mov ecx offset unk_451AA0 +
mov [ebp+var_4] 0 +
call sub_40A3B0  +
mov ecx dword_451AA4 +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E18A  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_451AB4 +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_10] +
push eax  +
mov ecx offset unk_451AB0 +
mov [ebp+var_4] 0 +
call sub_40A3B0  +
mov ecx dword_451AB4 +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_44FAD4 10h +
jb loc_440257  +
mov eax dword_44FAC0 +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FAD4 0Fh +
mov dword_44FAD0 eax +
mov byte ptr dword_44FAC0 al +
retn   +
***
cmp dword_44FAB8 10h +
jb loc_440287  +
mov eax dword_44FAA4 +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FAB8 0Fh +
mov dword_44FAB4 eax +
mov byte ptr dword_44FAA4 al +
retn   +
***
cmp dword_44FA9C 10h +
jb loc_4402B7  +
mov eax dword_44FA88 +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FA9C 0Fh +
mov dword_44FA98 eax +
mov byte ptr dword_44FA88 al +
retn   +
***
cmp dword_44FA80 10h +
jb loc_4402E7  +
mov eax dword_44FA6C +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FA80 0Fh +
mov dword_44FA7C eax +
mov byte ptr dword_44FA6C al +
retn   +
***
cmp dword_44FAF0 10h +
jb loc_440317  +
mov eax dword_44FADC +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FAF0 0Fh +
mov dword_44FAEC eax +
mov byte ptr dword_44FADC al +
retn   +
***
cmp dword_44FB0C 10h +
jb loc_440347  +
mov eax dword_44FAF8 +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FB0C 0Fh +
mov dword_44FB08 eax +
mov byte ptr dword_44FAF8 al +
retn   +
***
cmp dword_44FB28 8 +
jb loc_440377  +
mov eax dword_44FB14 +
push eax  +
call sub_42520B  +
add esp 4 +
xor ecx ecx +
mov dword_44FB28 7 +
mov dword_44FB24 0 +
mov word ptr dword_44FB14 cx +
retn   +
***
cmp dword_44FB44 10h +
jb loc_4403B7  +
mov eax dword_44FB30 +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FB44 0Fh +
mov dword_44FB40 eax +
mov byte ptr dword_44FB30 al +
retn   +
***
cmp dword_44FB60 10h +
jb loc_4403E7  +
mov eax dword_44FB4C +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FB60 0Fh +
mov dword_44FB5C eax +
mov byte ptr dword_44FB4C al +
retn   +
***
cmp dword_44FB7C 10h +
jb loc_440417  +
mov eax dword_44FB68 +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FB7C 0Fh +
mov dword_44FB78 eax +
mov byte ptr dword_44FB68 al +
retn   +
***
cmp dword_44FB98 10h +
jb loc_440447  +
mov eax dword_44FB84 +
push eax  +
call sub_42520B  +
add esp 4 +
xor eax eax +
mov dword_44FB98 0Fh +
mov dword_44FB94 eax +
mov byte ptr dword_44FB84 al +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E9AA  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_451AE0 +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_10] +
push eax  +
mov ecx offset unk_451ADC +
mov [ebp+var_4] 0 +
call sub_40A3B0  +
mov ecx dword_451AE0 +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_43E9DA  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_450240 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_451AF0 +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_10] +
push eax  +
mov ecx offset unk_451AEC +
mov [ebp+var_4] 0 +
call sub_40A3B0  +
mov ecx dword_451AF0 +
push ecx  +
call sub_42520B  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx offset unk_451B10 +
jmp sub_418860  +
***
mov ecx offset unk_451B0C +
jmp sub_418860  +
***
mov ecx offset unk_451B14 +
jmp sub_416490  +
***
mov ecx offset unk_454BB8 +
jmp loc_4248F7  +
***
mov ecx offset dword_454BDC +
jmp sub_404AF0  +
***
mov ecx offset unk_454BE4 +
jmp loc_424A7B  +
***
mov off_45014C offset off_446D8C +
retn   +
***
mov off_450154 offset off_446D8C +
retn   +
***
mov off_45015C offset off_446D8C +
retn   +
***
mov ecx offset unk_454CC9 +
jmp loc_4248F7  +
***
mov ecx offset dword_454C78 +
jmp loc_404CB0  +
***
mov ecx offset dword_454C20 +
jmp sub_40B8A0  +
***
mov ecx offset unk_454E10 +
jmp loc_4248F7  +
***
mov ecx offset unk_454E11 +
jmp loc_4251E0  +
***
mov dword_454E14 offset off_4419DC +
mov ecx offset dword_454E14 +
jmp sub_425331  +
***
