mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 110h  +
lea eax [ebp+VersionInformation.dwMajorVersion] +
push 0  +
xor esi esi +
push eax  +
inc esi  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call ds:GetVersionExW  +
test eax eax +
jz loc_100243B  +
push 5  +
pop eax  +
cmp eax [ebp+VersionInformation.dwMajorVersion] +
sbb esi esi +
inc esi  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1005ACE  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1002470  +
cmp dword ptr [eax] 1 +
jz loc_1002470  +
cmp dword ptr [eax+8] 0 +
jz loc_1002470  +
mov eax [eax+88h] +
test eax eax +
jnz loc_1002474  +
xor eax eax +
jmp loc_1002489  +
push off_100B004  +
push eax  +
call ds:wcsstr  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10024B5  +
cmp [ebp+arg_0] eax +
jz loc_10024B5  +
push [ebp+arg_4]  +
call ds:SysStringLen  +
push 40h  +
pop ecx  +
cmp ecx eax +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
imul eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
add esi eax +
jmp loc_10024DA  +
sub esi [ebp+arg_4] +
mov ecx esi +
call [ebp+arg_C]  +
dec [ebp+arg_8]  +
jns loc_10024D2  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
dec [ebp+arg_8]  +
js loc_1002505  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx esi +
call [ebp+arg_C]  +
add esi [ebp+arg_4] +
dec [ebp+arg_8]  +
jns loc_10024F7  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1002543  +
cmp [ebp+arg_4] eax +
jz loc_100253F  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_100253F  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1002522  +
test esi esi +
jnz loc_100254B  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002559  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_1002578  +
mov eax 80004005h +
jmp loc_1002584  +
jle loc_1002584  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jnz loc_10025A5  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jz loc_10025D8  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
jmp loc_10025DD  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
push esi  +
call ds:VariantClear  +
test eax eax +
jge loc_10025FF  +
push 0Ah  +
pop ecx  +
mov [esi] cx +
mov [esi+8] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1002618  +
pop ebp  +
jmp ds:SysFreeString  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1002633  +
pop ebp  +
jmp ds:LocalFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100264E  +
pop ebp  +
jmp ds:COMCTL32_321  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
push 44h  +
pop eax  +
xor edi edi +
push eax  +
push edi  +
mov [ebp+var_10] ecx +
xor ebx ebx +
mov [ebp+var_8] edi +
mov [ebp+var_C] eax +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jnz loc_1002687  +
mov ebx 8007000Eh +
jmp loc_10026CB  +
push esi  +
lea ecx [ebp+var_C] +
push ecx  +
push eax  +
push edi  +
push 16h  +
call ds:CreateWellKnownSid  +
mov esi ds:GetLastError +
test eax eax +
jnz loc_10026AE  +
call esi  +
push eax  +
call sub_1002565  +
mov ebx eax +
cmp ebx edi +
jl loc_10026CA  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+hMem]  +
push edi  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_10026CA  +
call esi  +
push eax  +
call sub_1002565  +
mov ebx eax +
pop esi  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov ecx [ebp+var_10] +
xor eax eax +
cmp [ebp+var_8] edi +
pop edi  +
setz al  +
mov [ecx+10h] eax +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 2 +
push edi  +
mov edi ecx +
jz loc_1002720  +
push esi  +
push offset sub_1008FD1  +
lea esi [edi-4] +
push dword ptr [esi]  +
push 8  +
push edi  +
call sub_10024BE  +
test [ebp+arg_0] 1 +
jz loc_100271B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
jmp loc_1002734  +
call sub_1008FD1  +
test [ebp+arg_0] 1 +
jz loc_1002732  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1002751  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100276C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1002787  +
pop ebp  +
jmp ds:CoTaskMemFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax ecx +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
js loc_10027B2  +
mov dword ptr [ecx] 1 +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10027D1  +
cmp edx 7FFFFFFFh +
jbe loc_10027D6  +
mov eax 80070057h +
test eax eax +
jl loc_10027EC  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100250E  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_1002810  +
cmp edx 7FFFFFFFh +
jbe loc_1002812  +
mov eax ecx +
test eax eax +
jl loc_100283B  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_100282B  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_100283B  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_100250E  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_100285D  +
cmp edx ebx +
jbe loc_1002862  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_1002899  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_1002886  +
cmp [eax] cx +
jz loc_1002882  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1002878  +
cmp esi ecx +
jnz loc_100288F  +
mov [ebp+arg_4] 80070057h +
jmp loc_1002893  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_100289B  +
xor ecx ecx +
test eax eax +
jl loc_10028AF  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_100250E  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp word ptr [esi] 3 +
jz loc_10028D3  +
call sub_10025E6  +
push 3  +
pop eax  +
mov [esi] ax +
mov eax [ebp+arg_0] +
mov [esi+8] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_10028F9  +
push eax  +
call sub_1002606  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1002914  +
push eax  +
call sub_1002621  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_100292F  +
push eax  +
call sub_100263C  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100291B  +
mov eax [ebp+arg_0] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax]  +
call sub_1002606  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_100297E  +
push eax  +
call sub_100275A  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1002999  +
push eax  +
call sub_1002775  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push offset unk_100B3AC  +
mov esi ecx +
mov eax [esi] +
push 7FFFFFFFh  +
push eax  +
call ds:COMCTL32_324  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10029D4  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call sub_10029E1  +
push eax  +
call sub_100273E  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov ecx [ecx] +
push ecx  +
call ds:COMCTL32_323  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+8] +
call sub_10028E5  +
lea ecx [esi+4] +
pop esi  +
jmp sub_10028E5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1002936  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
mov [ebp+Buffer] ebx +
js loc_1002A92  +
push edi  +
mov edi ds:GetLastError +
push ebx  +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
call edi  +
push eax  +
push ebx  +
push 13FFh  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_1002A7F  +
call edi  +
push eax  +
call sub_1002565  +
mov esi eax +
cmp esi ebx +
pop edi  +
jl loc_1002A92  +
push [ebp+arg_4]  +
mov eax [ebp+Buffer] +
push eax  +
call sub_10025AE  +
mov esi eax +
lea ecx [ebp+Buffer] +
call sub_1002900  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Buffer] 0 +
push esi  +
lea eax [ebp+Arguments] +
push eax  +
push 0  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push 0  +
push [ebp+lpSource]  +
push 500h  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_1002AE4  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov esi eax +
test esi esi +
jl loc_1002AF2  +
push [ebp+arg_0]  +
mov eax [ebp+Buffer] +
push eax  +
call sub_10025AE  +
mov esi eax +
lea ecx [ebp+Buffer] +
call sub_1002900  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+lpSource]  +
push [ebp+arg_0]  +
call sub_1002AA7  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 644h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_624] eax +
xor eax eax +
push ebx  +
mov [ebp+UniversalTime.wYear] ax +
push esi  +
push edi  +
lea edi [ebp+UniversalTime.wMonth] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+Date.wYear] ax +
lea edi [ebp+Date.wMonth] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov esi 206h +
xor ebx ebx +
push esi  +
mov word ptr [ebp+Arguments] ax +
lea eax [ebp-412h] +
push ebx  +
push eax  +
mov [ebp+var_620] ebx +
call memset  +
xor eax eax +
push esi  +
mov [ebp+DateStr] ax +
lea eax [ebp-61Ah] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
push esi  +
mov [ebp+Source] ax +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
call memset  +
mov esi [ebp+var_624] +
add esp 24h +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
js loc_1002CD5  +
lea eax [ebp+UniversalTime] +
push eax  +
call ds:GetSystemTime  +
lea eax [ebp+Date] +
push eax  +
lea eax [ebp+UniversalTime] +
push eax  +
push ebx  +
call ds:SystemTimeToTzSpecificLocalTime  +
push eax  +
call sub_100258D  +
mov esi eax +
cmp esi ebx +
jl loc_1002CD5  +
mov edi 104h +
push edi  +
lea eax [ebp+Arguments] +
push eax  +
push ebx  +
lea eax [ebp+Date] +
push eax  +
push ebx  +
push 400h  +
call ds:GetTimeFormatW  +
push eax  +
call sub_100258D  +
mov esi eax +
cmp esi ebx +
jl loc_1002CD5  +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
push ebx  +
lea eax [ebp+Date] +
push eax  +
push ebx  +
push 400h  +
call ds:GetDateFormatW  +
push eax  +
call sub_100258D  +
mov esi eax +
cmp esi ebx +
jl loc_1002CD5  +
push edi  +
lea eax [ebp+Source] +
push eax  +
push 1C2h  +
push ebx  +
call ds:GetModuleHandleW  +
push eax  +
call ds:LoadStringW  +
push eax  +
call sub_100258D  +
mov esi eax +
cmp esi ebx +
jl loc_1002CD5  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebp+Source] +
push eax  +
lea eax [ebp+var_620] +
push eax  +
call sub_1002B06  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jl loc_1002CD5  +
xor eax eax +
cmp [ebp+var_620] ebx +
jz loc_1002CCD  +
mov eax [ebp+var_620] +
mov [ebp+var_620] ebx +
mov ecx [ebp+var_624] +
mov [ecx] eax +
lea ecx [ebp+var_620] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov ebx ecx +
call ds:GetModuleHandleW  +
mov esi eax +
xor eax eax +
push 206h  +
mov [ebp+Buffer] ax +
lea eax [ebp-20Ah] +
push edi  +
push eax  +
mov [ebp+var_210] edi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push esi  +
call ds:LoadStringW  +
push eax  +
call sub_100258D  +
mov esi eax +
cmp esi edi +
jl loc_1002DBA  +
lea eax [ebp+var_210] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10025AE  +
mov esi eax +
cmp esi edi +
jl loc_1002DBA  +
mov eax [ebp+var_210] +
mov [ebp+var_214] eax +
lea eax [ebp+var_214] +
push eax  +
lea ecx [ebx+0Ch] +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_1002DBA  +
cmp [ebp+var_210] edi +
jz loc_1002DBA  +
mov [ebp+var_210] edi +
lea ecx [ebp+var_210] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 0  +
mov [ebp+var_218] ecx +
call ds:GetModuleHandleW  +
and [ebp+var_210] 0 +
mov esi eax +
xor eax eax +
push 206h  +
push eax  +
mov [ebp+Source] ax +
lea eax [ebp-20Ah] +
push eax  +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Source] +
push eax  +
push [ebp+uID]  +
push esi  +
call ds:LoadStringW  +
test eax eax +
jnz loc_1002E58  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov esi eax +
test esi esi +
jl loc_1002EB6  +
push edi  +
lea eax [ebp+Source] +
push eax  +
lea eax [ebp+var_210] +
push eax  +
call sub_1002B06  +
mov esi eax +
add esp 0Ch +
test esi esi +
jl loc_1002EB6  +
mov ecx [ebp+var_218] +
mov edi [ebp+var_210] +
lea eax [ebp+var_214] +
push eax  +
add ecx 0Ch +
mov [ebp+var_214] edi +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_1002EB6  +
test edi edi +
jz loc_1002EB6  +
and [ebp+var_210] 0 +
lea ecx [ebp+var_210] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1005ACE  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov ebx ecx +
call ds:GetModuleHandleW  +
mov esi eax +
xor eax eax +
push 206h  +
mov [ebp+Source] ax +
lea eax [ebp-20Ah] +
push edi  +
push eax  +
mov [ebp+var_210] edi +
mov dword ptr [ebp+Arguments] edi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Source] +
push eax  +
push [ebp+uID]  +
push esi  +
call ds:LoadStringW  +
test eax eax +
jnz loc_1002F53  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov esi eax +
cmp esi edi +
jl loc_1002FCA  +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_1002A32  +
mov esi eax +
cmp esi edi +
jl loc_1002FCA  +
push dword ptr [ebp+Arguments]  +
lea eax [ebp+Source] +
push eax  +
lea eax [ebp+var_210] +
push eax  +
call sub_1002B06  +
mov esi eax +
add esp 0Ch +
cmp esi edi +
jl loc_1002FCA  +
mov eax [ebp+var_210] +
mov [ebp+var_218] eax +
lea eax [ebp+var_218] +
push eax  +
lea ecx [ebx+0Ch] +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_1002FCA  +
cmp [ebp+var_210] edi +
jz loc_1002FCA  +
mov [ebp+var_210] edi +
lea ecx [ebp+Arguments] +
call sub_10028E5  +
lea ecx [ebp+var_210] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_218] ecx +
call ds:GetModuleHandleW  +
mov esi eax +
xor eax eax +
push 206h  +
mov [ebp+Source] ax +
lea eax [ebp-20Ah] +
push edi  +
push eax  +
mov [ebp+var_210] edi +
mov [ebp+var_214] edi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Source] +
push eax  +
push [ebp+uID]  +
push esi  +
call ds:LoadStringW  +
test eax eax +
jnz loc_100307A  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov esi eax +
cmp esi edi +
jl loc_10030F8  +
mov ecx [ebp+var_218] +
lea eax [ebp+var_214] +
push eax  +
push [ebp+arg_0]  +
call sub_1002A32  +
mov esi eax +
cmp esi edi +
jl loc_10030F8  +
push [ebp+var_214]  +
lea eax [ebp+Source] +
push ebx  +
push eax  +
lea eax [ebp+var_210] +
push eax  +
call sub_1002B06  +
mov esi eax +
add esp 10h +
cmp esi edi +
jl loc_10030F8  +
mov ecx [ebp+var_218] +
mov ebx [ebp+var_210] +
lea eax [ebp+var_21C] +
push eax  +
add ecx 0Ch +
mov [ebp+var_21C] ebx +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_10030F8  +
cmp ebx edi +
jz loc_10030F8  +
mov [ebp+var_210] edi +
lea ecx [ebp+var_214] +
call sub_10028E5  +
lea ecx [ebp+var_210] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
xor eax eax +
xor edi edi +
push 206h  +
mov [ebp+FileName] ax +
lea eax [ebp-20Ah] +
push edi  +
push eax  +
mov ebx ecx +
mov [ebp+var_210] edi +
mov [ebp+NumberOfBytesWritten] edi +
call memset  +
add esp 0Ch +
cmp [ebx+14h] edi +
jz loc_10033EB  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
mov esi 104h +
push esi  +
call ds:GetTempPathW  +
test eax eax +
jnz loc_10031A6  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_10033EA  +
lea eax [ebp+FileName] +
cmp [ebx+10h] edi +
jz loc_10031B9  +
push off_100B018  +
jmp loc_10031BF  +
push off_100B01C  +
push esi  +
push eax  +
call sub_1002844  +
cmp eax edi +
mov [ebp+var_210] eax +
jl loc_10033EA  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
xor eax eax +
cmp ecx edi +
setz al  +
and [ebp+var_214] edi +
add ebx 0Ch +
mov [ebp+var_218] ecx +
mov [ebp+var_21C] ebx +
mov esi eax +
mov eax [ebx] +
mov ecx [ebp+var_214] +
cmp ecx [eax] +
jge loc_100322F  +
push ecx  +
mov ecx ebx +
call sub_10029E1  +
push dword ptr [eax]  +
call ds:SysStringLen  +
inc [ebp+var_214]  +
lea esi [esi+eax+2] +
jmp loc_1003207  +
test esi esi +
jle loc_1003237  +
inc esi  +
inc esi  +
test esi esi +
jz loc_1003268  +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
mov edi eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ecx  +
mov [ebp+var_210] eax +
jmp loc_100326E  +
mov eax [ebp+var_210] +
test eax eax +
jl loc_10033EA  +
cmp esi 4 +
jle loc_10033EA  +
test edi edi +
jz loc_10033EA  +
xor ebx ebx +
cmp [ebp+var_218] ebx +
jnz loc_100329A  +
mov eax 0FEFFh +
mov [edi] ax +
inc ebx  +
push 0Dh  +
pop ecx  +
push 0Ah  +
lea eax [esi-4] +
mov [edi+eax*2] cx +
pop ecx  +
push 0Dh  +
mov [edi+esi*2-6] cx +
pop ecx  +
mov [edi+esi*2-4] cx +
add esi esi +
and [ebp+var_214] 0 +
push 0Ah  +
pop ecx  +
mov [ebp+var_220] eax +
mov [ebp+var_224] esi +
mov [esi+edi-2] cx +
mov ecx [ebp+var_21C] +
mov ecx [ecx] +
mov edx [ebp+var_214] +
cmp edx [ecx] +
jge loc_1003384  +
cmp ebx eax +
jge loc_1003384  +
mov ecx [ebp+var_21C] +
and [ebp+var_218] 0 +
push edx  +
call sub_10029E1  +
push dword ptr [eax]  +
mov esi ds:SysStringLen +
call esi  +
test eax eax +
jbe loc_100335D  +
cmp ebx [ebp+var_220] +
jge loc_100335D  +
push [ebp+var_214]  +
mov ecx [ebp+var_21C] +
call sub_10029E1  +
mov eax [eax] +
mov ecx [ebp+var_218] +
mov ax [eax+ecx*2] +
push [ebp+var_214]  +
mov ecx [ebp+var_21C] +
mov [edi+ebx*2] ax +
inc ebx  +
inc [ebp+var_218]  +
call sub_10029E1  +
push dword ptr [eax]  +
call esi  +
cmp [ebp+var_218] eax +
jb loc_1003310  +
mov esi [ebp+var_224] +
push 0Dh  +
pop eax  +
mov [edi+ebx*2] ax +
inc ebx  +
push 0Ah  +
pop eax  +
mov [edi+ebx*2] ax +
mov eax [ebp+var_220] +
inc ebx  +
inc [ebp+var_214]  +
jmp loc_10032D1  +
push 0  +
push 80h  +
push 4  +
push 0  +
push 1  +
push 40000000h  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateFileW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_10033BC  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov [ebp+var_210] eax +
xor eax eax +
cmp [ebp+var_210] eax +
jl loc_10033EA  +
push 2  +
push eax  +
push eax  +
push ebx  +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push esi  +
push edi  +
push ebx  +
call ds:WriteFile  +
push ebx  +
call ds:CloseHandle  +
pop esi  +
push edi  +
call ??3@YAXPAX@Z  +
mov eax [ebp+var_210] +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push offset unk_100B3B0  +
mov esi ecx +
mov eax [esi] +
push 7FFFFFFFh  +
push eax  +
call ds:COMCTL32_324  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_100343F  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call sub_10029E1  +
push eax  +
call sub_100273E  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push offset unk_100B3B4  +
mov esi ecx +
mov eax [esi] +
push 7FFFFFFFh  +
push eax  +
call ds:COMCTL32_324  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1003480  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call sub_10029E1  +
push eax  +
call sub_100273E  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10h  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_10034AA  +
mov dword ptr [eax] 1 +
and dword ptr [eax+4] 0 +
jmp loc_10034AC  +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10029FB  +
test [ebp+arg_0] 1 +
jz loc_10034E2  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
call sub_10028E5  +
test [ebp+arg_0] 1 +
jz loc_100350B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
mov ebx ecx +
mov eax [ebx] +
cmp dword ptr [eax] 0 +
jz loc_1003544  +
push esi  +
mov esi [eax] +
push 0  +
push eax  +
call ds:COMCTL32_323  +
test esi esi +
jle loc_1003543  +
push edi  +
mov edi eax +
push edi  +
call sub_1002952  +
add edi 4 +
dec esi  +
jnz loc_1003536  +
pop edi  +
pop esi  +
push dword ptr [ebx]  +
call ds:COMCTL32_327  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] ebx +
jz loc_100356F  +
cmp [ebp+arg_4] ebx +
jz loc_100356F  +
mov al 1 +
jmp loc_1003571  +
xor al al +
mov esi ds:GetLastError +
xor ecx ecx +
cmp al bl +
setnz cl  +
dec ecx  +
and ecx 80070057h +
mov edi ecx +
jl loc_10035AB  +
push [ebp+arg_4]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
call ds:GetGPOListW  +
test eax eax +
jnz loc_10035A7  +
call esi  +
push eax  +
call sub_1002565  +
mov edi eax +
cmp edi ebx +
jge loc_10035C5  +
mov eax [ebp+var_4] +
cmp [eax+14h] ebx +
jz loc_10035C5  +
push 264h  +
call esi  +
mov ecx [ebp+var_4] +
push eax  +
call sub_1002ED8  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
push edi  +
mov edi ds:GetLastError +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ebx +
js loc_100369B  +
lea eax [ebp+var_4] +
push eax  +
push 40000010h  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call ds:DsGetDcNameW  +
test eax eax +
jz loc_1003625  +
call edi  +
push eax  +
call sub_1002565  +
mov esi eax +
test esi esi +
jl loc_1003690  +
mov eax [ebp+var_4] +
push 185h  +
push dword ptr [eax+1Ch]  +
call ds:ldap_initW  +
mov ebx eax +
mov esi ebx +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
pop ecx  +
pop ecx  +
js loc_1003690  +
push 486h  +
push 0  +
push 0  +
push ebx  +
call ds:ldap_bind_sW  +
add esp 10h +
test eax eax +
jz loc_1003673  +
call edi  +
push eax  +
call sub_1002565  +
mov esi eax +
test esi esi +
jl loc_1003690  +
push 0  +
push ebx  +
call ds:ldap_connect  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003690  +
call edi  +
push eax  +
call sub_1002565  +
mov esi eax +
mov eax [ebp+arg_0] +
mov [eax] ebx +
test esi esi +
jge loc_10036B5  +
xor ebx ebx +
mov eax [ebp+var_8] +
cmp [eax+14h] ebx +
jz loc_10036B5  +
push 266h  +
call edi  +
mov ecx [ebp+var_8] +
push eax  +
call sub_1002ED8  +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov ebx ecx +
mov eax [ebx+4] +
xor esi esi +
mov [ebp+var_28] esi +
mov [ebp+var_2C] esi +
mov eax [eax] +
mov [ebp+var_30] eax +
mov eax [ebx+10h] +
push edi  +
neg eax  +
push 9  +
push off_100B008  +
sbb eax eax +
add eax 80000002h +
push eax  +
lea ecx [ebp+var_18] +
mov [ebp+var_24] esi +
mov [ebp+var_34] 1 +
call sub_1009E06  +
lea ecx [ebp+var_18] +
call sub_1009379  +
mov edi eax +
cmp edi esi +
jl loc_1003829  +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push offset word_10014F4  +
lea ecx [ebp+var_18] +
call sub_1009BCE  +
mov edi eax +
cmp edi esi +
jl loc_1003829  +
cmp [ebp+var_2C] esi +
jle loc_1003829  +
mov [ebp+var_34] esi +
mov [ebp+var_20] esi +
mov eax [ebp+var_28] +
lea ecx [eax+esi*8] +
call sub_1008EF7  +
cmp eax 4 +
jbe loc_100381A  +
and [ebp+var_1C] 0 +
cmp [ebp+var_30] 0 +
jle loc_10037CA  +
jmp loc_1003774  +
mov esi [ebp+var_20] +
mov eax [ebp+var_28] +
push [ebp+var_1C]  +
mov esi [eax+esi*8+4] +
lea ecx [ebx+4] +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
mov eax [eax] +
mov cx [eax] +
cmp cx [esi] +
jnz loc_10037B3  +
test cx cx +
jz loc_10037AF  +
mov cx [eax+2] +
cmp cx [esi+2] +
jnz loc_10037B3  +
add eax 4 +
add esi 4 +
test cx cx +
jnz loc_100378D  +
xor eax eax +
jmp loc_10037B8  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10037C7  +
inc [ebp+var_1C]  +
mov eax [ebp+var_1C] +
cmp eax [ebp+var_30] +
jl loc_1003771  +
mov esi [ebp+var_20] +
mov eax [ebp+var_30] +
cmp [ebp+var_1C] eax +
jnz loc_100381A  +
mov eax [ebp+var_28] +
mov eax [eax+esi*8+4] +
lea ecx [ebp+var_24] +
push ecx  +
push eax  +
call sub_10025AE  +
mov edi eax +
test edi edi +
jl loc_100381A  +
mov eax [ebp+var_24] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebx+8] +
call sub_10029A0  +
mov edi eax +
inc edi  +
neg edi  +
sbb edi edi +
and edi 7FF8FFF2h +
add edi 8007000Eh +
js loc_100381A  +
cmp [ebp+var_24] 0 +
jz loc_100381A  +
and [ebp+var_24] 0 +
inc esi  +
cmp esi [ebp+var_2C] +
mov [ebp+var_20] esi +
jl loc_1003751  +
xor esi esi +
mov ecx [ebp+var_28] +
cmp ecx esi +
jz loc_1003837  +
push 3  +
call sub_10026ED  +
cmp [ebx+14h] esi +
jz loc_100389C  +
cmp edi esi +
jl loc_1003882  +
lea esi [ebx+8] +
mov eax [esi] +
cmp dword ptr [eax] 0 +
jle loc_1003874  +
and [ebp+var_20] 0 +
mov eax [esi] +
mov ecx [ebp+var_20] +
cmp ecx [eax] +
jge loc_100389C  +
push ecx  +
mov ecx esi +
call sub_10029E1  +
push dword ptr [eax]  +
mov ecx ebx +
push 20Dh  +
call sub_1002DDD  +
inc [ebp+var_20]  +
mov edi eax +
jmp loc_100384E  +
push 20Eh  +
mov ecx ebx +
call sub_1002CF8  +
jmp loc_100389A  +
cmp [ebp+var_34] esi +
jnz loc_1003874  +
push 269h  +
call ds:GetLastError  +
push eax  +
mov ecx ebx +
call sub_1002ED8  +
mov edi eax +
lea ecx [ebp+var_18] +
call sub_1009643  +
lea ecx [ebp+var_24] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 440h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor eax eax +
push 40Eh  +
mov word ptr [ebp+var_414] ax +
lea eax [ebp+var_414+2] +
push edi  +
push eax  +
mov esi ecx +
mov [ebp+var_430] edi +
mov [ebp+var_440] edi +
mov [ebp+var_438] edi +
mov [ebp+var_43C] edi +
call memset  +
add esp 0Ch +
lea ebx [esi+4] +
cmp [esi+10h] edi +
jz loc_10039E2  +
mov eax [ebx] +
cmp edi [eax] +
jge loc_1003ADF  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
call AddPrinterConnectionW  +
test eax eax +
jnz loc_10039A1  +
call ds:GetLastError  +
cmp dword ptr [esi+14h] 0 +
mov [ebp+var_434] eax +
jz loc_100397B  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
mov ecx esi +
push 26Ah  +
push [ebp+var_434]  +
call sub_1002FF8  +
mov [ebp+var_430] eax +
push edi  +
mov ecx ebx +
call sub_10029E1  +
push [ebp+var_434]  +
mov [ebp+var_42C] eax +
call sub_1002565  +
mov ecx [ebp+var_42C] +
mov ecx [ecx] +
mov [ecx+0Ch] eax +
jmp loc_10039DC  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
and dword ptr [eax+0Ch] 0 +
cmp dword ptr [esi+14h] 0 +
jz loc_10039D6  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
mov ecx esi +
push 1F9h  +
call sub_1002DDD  +
mov [ebp+var_430] eax +
inc [ebp+var_438]  +
inc edi  +
jmp loc_1003920  +
mov eax [ebx] +
cmp edi [eax] +
jge loc_1003ADF  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
push 0  +
lea ecx [ebp+var_43C] +
push ecx  +
push 208h  +
add eax 4 +
mov eax [eax] +
lea ecx [ebp+var_414] +
push ecx  +
push eax  +
call sub_100A180  +
push edi  +
mov ecx ebx +
mov [ebp+var_430] eax +
call sub_10029E1  +
mov eax [eax] +
push 0  +
push [ebp+var_43C]  +
add eax 4 +
mov eax [eax] +
push eax  +
push 0  +
call WINSPOOL_207  +
test eax eax +
jnz loc_1003A9E  +
call ds:GetLastError  +
cmp dword ptr [esi+14h] 0 +
mov [ebp+var_434] eax +
jz loc_1003A78  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
mov ecx esi +
push 26Bh  +
push [ebp+var_434]  +
call sub_1002FF8  +
mov [ebp+var_430] eax +
push edi  +
mov ecx ebx +
call sub_10029E1  +
push [ebp+var_434]  +
mov [ebp+var_42C] eax +
call sub_1002565  +
mov ecx [ebp+var_42C] +
mov ecx [ecx] +
mov [ecx+0Ch] eax +
jmp loc_1003AD9  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
and dword ptr [eax+0Ch] 0 +
inc [ebp+var_438]  +
cmp dword ptr [esi+14h] 0 +
jz loc_1003AD9  +
push edi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
mov ecx esi +
push 1FAh  +
call sub_1002DDD  +
mov [ebp+var_430] eax +
inc edi  +
jmp loc_10039E2  +
xor eax eax +
mov [ebp+var_42C] eax +
lea edi [esi+8] +
cmp [esi+10h] eax +
jz loc_1003B77  +
mov eax [edi] +
mov ecx [ebp+var_42C] +
cmp ecx [eax] +
jge loc_1003C17  +
push ecx  +
mov ecx edi +
call sub_10029E1  +
push dword ptr [eax]  +
call DeletePrinterConnectionW  +
test eax eax +
jnz loc_1003B4B  +
call ds:GetLastError  +
cmp dword ptr [esi+14h] 0 +
mov [ebp+var_434] eax +
jz loc_1003B6C  +
push [ebp+var_42C]  +
mov ecx edi +
call sub_10029E1  +
push dword ptr [eax]  +
mov ecx esi +
push 26Bh  +
push [ebp+var_434]  +
call sub_1002FF8  +
jmp loc_1003B6C  +
cmp dword ptr [esi+14h] 0 +
jz loc_1003B6C  +
push [ebp+var_42C]  +
mov ecx edi +
call sub_10029E1  +
push dword ptr [eax]  +
mov ecx esi +
push 1FBh  +
call sub_1002DDD  +
inc [ebp+var_42C]  +
jmp loc_1003AF3  +
mov eax [edi] +
mov ecx [ebp+var_42C] +
cmp ecx [eax] +
jge loc_1003C17  +
cmp [ebp+var_430] 0 +
jl loc_1003C0C  +
push ecx  +
mov ecx edi +
call sub_10029E1  +
push dword ptr [eax]  +
push 0  +
call WINSPOOL_209  +
test eax eax +
jnz loc_1003BE5  +
call ds:GetLastError  +
cmp dword ptr [esi+14h] 0 +
mov [ebp+var_434] eax +
jz loc_1003BD8  +
push [ebp+var_42C]  +
mov ecx edi +
call sub_10029E1  +
push dword ptr [eax]  +
mov ecx esi +
push 26Bh  +
push [ebp+var_434]  +
call sub_1002FF8  +
push [ebp+var_434]  +
call sub_1002565  +
jmp loc_1003C06  +
cmp dword ptr [esi+14h] 0 +
jz loc_1003C0C  +
push [ebp+var_42C]  +
mov ecx edi +
call sub_10029E1  +
push dword ptr [eax]  +
mov ecx esi +
push 1FCh  +
call sub_1002DDD  +
mov [ebp+var_430] eax +
inc [ebp+var_42C]  +
jmp loc_1003B77  +
mov eax [ebp+var_438] +
test eax eax +
jle loc_1003C61  +
xor ecx ecx +
push 8  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1003C85  +
mov ecx [ebp+var_438] +
push offset sub_1008EBF  +
push ecx  +
lea edi [eax+4] +
push 8  +
push edi  +
mov [eax] ecx +
call sub_10024E9  +
jmp loc_1003C7D  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1003C85  +
lea edi [eax+4] +
mov ecx edi +
mov dword ptr [eax] 1 +
call sub_1008EBF  +
mov [ebp+var_430] edi +
jmp loc_1003C8C  +
and [ebp+var_430] 0 +
mov edi [ebp+var_430] +
neg edi  +
sbb edi edi +
and edi 7FF8FFF2h +
add edi 8007000Eh +
js loc_1003D93  +
mov eax [esi+10h] +
neg eax  +
push 6  +
push off_100B008  +
sbb eax eax +
add eax 80000002h +
push eax  +
lea ecx [ebp+var_428] +
call sub_1009E06  +
lea ecx [ebp+var_428] +
call sub_1009379  +
mov edi eax +
xor esi esi +
cmp edi esi +
jl loc_1003D88  +
cmp [ebp+var_438] esi +
jle loc_1003D4D  +
mov eax [ebp+var_430] +
and [ebp+var_434] esi +
mov [ebp+var_42C] eax +
mov eax [ebx] +
cmp esi [eax] +
jge loc_1003D69  +
mov eax [ebp+var_438] +
cmp [ebp+var_434] eax +
jge loc_1003D69  +
push esi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
cmp dword ptr [eax+0Ch] 0 +
jl loc_1003D46  +
push esi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
mov ecx [ebp+var_42C] +
add eax 4 +
push dword ptr [eax]  +
call sub_1009196  +
inc [ebp+var_434]  +
add [ebp+var_42C] 8 +
mov edi eax +
inc esi  +
test edi edi +
jge loc_1003CF9  +
jmp loc_1003D69  +
mov ecx [ebp+var_430] +
push offset word_10014F4  +
call sub_1009196  +
mov edi eax +
mov [ebp+var_438] 1 +
test edi edi +
jl loc_1003D88  +
push [ebp+var_430]  +
lea ecx [ebp+var_428] +
push [ebp+var_438]  +
push 0  +
call sub_1009ECF  +
mov edi eax +
lea ecx [ebp+var_428] +
call sub_1009643  +
mov ecx [ebp+var_430] +
test ecx ecx +
jz loc_1003DA4  +
push 3  +
call sub_10026ED  +
lea ecx [ebp+var_440] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 23Ch +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor edi edi +
push 206h  +
mov [ebp+Source] ax +
lea eax [ebp-20Ah] +
mov ebx ecx +
push edi  +
push eax  +
mov [ebp+var_23C] ebx +
xor esi esi +
mov dword ptr [ebp+Arguments] edi +
mov [ebp+var_224] edi +
call memset  +
add esp 0Ch +
push edi  +
call ds:GetModuleHandleW  +
mov [ebp+hInstance] eax +
mov dword ptr [ebp+Data] edi +
cmp [ebp+arg_0] edi +
jz loc_1003E34  +
mov dword ptr [ebx+14h] 1 +
jmp loc_1003E93  +
push 9  +
push off_100B00C  +
lea ecx [ebp+var_220] +
push 80000002h  +
call sub_1009E06  +
lea ecx [ebp+var_220] +
call sub_1009379  +
cmp eax edi +
jl loc_1003E86  +
lea eax [ebp+Data] +
push eax  +
push lpValueName  +
lea ecx [ebp+var_220] +
call sub_1009B46  +
cmp eax edi +
jl loc_1003E86  +
xor eax eax +
cmp dword ptr [ebp+Data] 1 +
setz al  +
mov [ebx+14h] eax +
lea ecx [ebp+var_220] +
xor esi esi +
call sub_1009643  +
cmp [ebx+14h] edi +
jz loc_1004145  +
push 104h  +
lea eax [ebp+Source] +
push eax  +
push 64h  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
push eax  +
call sub_100258D  +
mov esi eax +
cmp esi edi +
jl loc_1004145  +
lea eax [ebp+var_224] +
push eax  +
lea eax [ebp+Source] +
push eax  +
call sub_10025AE  +
mov esi eax +
cmp esi edi +
jl loc_1004145  +
mov eax [ebp+var_224] +
mov [ebp+var_228] eax +
lea eax [ebp+var_228] +
lea ecx [ebx+0Ch] +
push eax  +
mov [ebp+var_230] ecx +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
mov ebx 7FF8FFF2h +
and esi ebx +
mov edi 8007000Eh +
add esi edi +
js loc_1004145  +
cmp [ebp+var_224] 0 +
jz loc_1003F2F  +
and [ebp+var_224] 0 +
push 104h  +
lea eax [ebp+Source] +
push eax  +
push 65h  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_1004145  +
lea eax [ebp+var_224] +
push eax  +
lea eax [ebp+Source] +
push eax  +
call sub_10025AE  +
mov esi eax +
test esi esi +
jl loc_1004145  +
mov eax [ebp+var_224] +
mov ecx [ebp+var_230] +
mov [ebp+var_228] eax +
lea eax [ebp+var_228] +
push eax  +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi ebx +
add esi edi +
js loc_1004145  +
cmp [ebp+var_224] 0 +
jz loc_1003FB5  +
and [ebp+var_224] 0 +
lea eax [ebp+var_224] +
push eax  +
push offset asc_10014F8  +
call sub_10025AE  +
mov esi eax +
test esi esi +
jl loc_1004145  +
mov eax [ebp+var_224] +
mov ecx [ebp+var_230] +
mov [ebp+var_228] eax +
lea eax [ebp+var_228] +
push eax  +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi ebx +
add esi edi +
js loc_1004145  +
xor eax eax +
cmp [ebp+var_224] eax +
jz loc_100400F  +
mov [ebp+var_224] eax +
cmp dword ptr [ebp+Data] eax +
push 104h  +
lea eax [ebp+Source] +
push eax  +
jz loc_100402A  +
push 1C4h  +
jmp loc_100402F  +
push 1C5h  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_1004145  +
lea eax [ebp+var_224] +
push eax  +
lea eax [ebp+Source] +
push eax  +
call sub_10025AE  +
mov esi eax +
test esi esi +
jl loc_1004145  +
mov eax [ebp+var_224] +
mov ecx [ebp+var_230] +
mov [ebp+var_228] eax +
lea eax [ebp+var_228] +
push eax  +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi ebx +
add esi edi +
js loc_1004145  +
cmp [ebp+var_224] 0 +
jz loc_10040A7  +
and [ebp+var_224] 0 +
push 104h  +
lea eax [ebp+Source] +
push eax  +
push 1C3h  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_1004145  +
mov ecx [ebp+var_23C] +
lea eax [ebp+Arguments] +
push eax  +
call sub_1002B21  +
mov esi eax +
test esi esi +
jl loc_1004145  +
push dword ptr [ebp+Arguments]  +
lea eax [ebp+Source] +
push eax  +
lea eax [ebp+var_224] +
push eax  +
call sub_1002B06  +
mov esi eax +
add esp 0Ch +
test esi esi +
jl loc_1004145  +
mov eax [ebp+var_224] +
mov ecx [ebp+var_230] +
mov [ebp+var_23C] eax +
lea eax [ebp+var_23C] +
push eax  +
call sub_10029A0  +
mov esi eax +
inc esi  +
neg esi  +
sbb esi esi +
and esi ebx +
add esi edi +
js loc_1004145  +
cmp [ebp+var_224] 0 +
jz loc_1004145  +
and [ebp+var_224] 0 +
lea ecx [ebp+var_224] +
call sub_10028E5  +
lea ecx [ebp+Arguments] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push 4  +
call ds:COMCTL32_320  +
push eax  +
mov ecx esi +
call sub_1002A16  +
mov eax [esi] +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push esi  +
call ds:InterlockedDecrement  +
mov ebx eax +
test ebx ebx +
jnz loc_10041E7  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
mov [ebp+var_4] 1 +
call sub_1002790  +
test eax eax +
jl loc_10041E7  +
cmp [ebp+var_4] ebx +
jz loc_10041E7  +
test esi esi +
jz loc_10041E7  +
push 1  +
mov ecx esi +
call sub_10034C8  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push esi  +
call ds:InterlockedDecrement  +
mov ebx eax +
test ebx ebx +
jnz loc_1004231  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
mov [ebp+var_4] 1 +
call sub_1002790  +
test eax eax +
jl loc_1004231  +
cmp [ebp+var_4] ebx +
jz loc_1004231  +
test esi esi +
jz loc_1004231  +
push 1  +
mov ecx esi +
call sub_10034EE  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_100425D  +
mov dword ptr [eax] 1 +
and dword ptr [eax+4] 0 +
and dword ptr [eax+8] 0 +
jmp loc_100425F  +
xor eax eax +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1004295  +
call sub_1003517  +
mov ecx esi +
call sub_100291B  +
and dword ptr [esi] 0 +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
and dword ptr [esi] 0 +
call sub_1004173  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+lpAddend] +
test ecx ecx +
jz loc_10042CE  +
call sub_10041F2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+lpAddend] +
test ecx ecx +
jz loc_10042E8  +
call sub_10041A8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax]  +
call sub_10042D7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax]  +
call sub_10042BD  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1004335  +
push eax  +
call sub_10042D7  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1004350  +
push eax  +
call sub_10042BD  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
mov ebx ecx +
mov eax [ebx] +
cmp dword ptr [eax] 0 +
jz loc_1004384  +
push esi  +
mov esi [eax] +
push 0  +
push eax  +
call ds:COMCTL32_323  +
test esi esi +
jle loc_1004383  +
push edi  +
mov edi eax +
push edi  +
call sub_10042F1  +
add edi 4 +
dec esi  +
jnz loc_1004376  +
pop edi  +
pop esi  +
push dword ptr [ebx]  +
call ds:COMCTL32_327  +
pop ebx  +
retn   +
***
mov edi edi +
push ebx  +
mov ebx ecx +
mov eax [ebx] +
cmp dword ptr [eax] 0 +
jz loc_10043C0  +
push esi  +
mov esi [eax] +
push 0  +
push eax  +
call ds:COMCTL32_323  +
test esi esi +
jle loc_10043BF  +
push edi  +
mov edi eax +
push edi  +
call sub_1004309  +
add edi 4 +
dec esi  +
jnz loc_10043B2  +
pop edi  +
pop esi  +
push dword ptr [ebx]  +
call ds:COMCTL32_327  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_10043E9  +
call sub_1004357  +
mov ecx esi +
call sub_100291B  +
and dword ptr [esi] 0 +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_100440C  +
call sub_1004393  +
mov ecx esi +
call sub_100291B  +
and dword ptr [esi] 0 +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 20h  +
mov esi ecx +
call sub_100429E  +
push 20h  +
lea ecx [esi+4] +
call sub_100429E  +
push 20h  +
lea ecx [esi+8] +
call sub_100429E  +
push 20h  +
lea ecx [esi+0Ch] +
call sub_100429E  +
and dword ptr [esi+14h] 0 +
and dword ptr [esi+18h] 0 +
mov dword ptr [esi+10h] 1 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+18h] +
push edi  +
test eax eax +
jz loc_100446B  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
lea edi [esi+0Ch] +
mov ecx edi +
call sub_100427B  +
mov ecx edi +
call sub_100291B  +
lea edi [esi+8] +
mov ecx edi +
call sub_100427B  +
mov ecx edi +
call sub_100291B  +
lea edi [esi+4] +
mov ecx edi +
call sub_10043F2  +
mov ecx edi +
call sub_100291B  +
mov ecx esi +
call sub_10043CF  +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_100291B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ebx +
neg esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
mov eax [eax] +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
mov [ebp+var_C] edi +
mov [ebp+var_8] eax +
js loc_100459A  +
and [ebp+arg_0] 0 +
test eax eax +
jbe loc_100453F  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_10029E1  +
mov eax [eax] +
mov ecx [ebx+8] +
add eax 4 +
mov eax [eax] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100452B  +
test dx dx +
jz loc_1004527  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100452B  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1004505  +
xor eax eax +
jmp loc_1004530  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_100453F  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_8] +
jb loc_10044F1  +
mov eax [ebp+var_8] +
cmp [ebp+arg_0] eax +
jnz loc_100459A  +
lea eax [ebp+var_4] +
push eax  +
call sub_100423C  +
mov esi eax +
test esi esi +
jl loc_100459A  +
mov edi [ebp+var_4] +
lea eax [edi+4] +
push eax  +
push dword ptr [ebx+8]  +
call sub_10025AE  +
mov esi eax +
test esi esi +
jl loc_100459A  +
lea eax [edi+8] +
push eax  +
push dword ptr [ebx+10h]  +
call sub_10025AE  +
mov esi eax +
test esi esi +
jl loc_100459A  +
mov ecx [ebp+var_C] +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+arg_0] edi +
call sub_100340B  +
mov esi eax +
test esi esi +
jl loc_100459A  +
test edi edi +
jz loc_100459A  +
and [ebp+var_4] 0 +
lea ecx [ebp+var_4] +
call sub_1004321  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ecx +
mov eax [ebx] +
mov ecx [eax] +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
mov [ebp+var_8] ecx +
cmp [ebp+arg_0] esi +
jz loc_10045D6  +
cmp [ebp+arg_4] esi +
jz loc_10045D6  +
mov al 1 +
jmp loc_10045D8  +
xor al al +
xor edx edx +
test al al +
setnz dl  +
dec edx  +
and edx 80070057h +
mov edi edx +
jl loc_1004690  +
cmp ecx esi +
jbe loc_1004639  +
push esi  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
mov ecx [ebp+arg_4] +
add eax 4 +
mov eax [eax] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100462A  +
test dx dx +
jz loc_1004626  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100462A  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1004604  +
xor eax eax +
jmp loc_100462F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1004639  +
inc esi  +
cmp esi [ebp+var_8] +
jb loc_10045F2  +
cmp esi [ebp+var_8] +
jnz loc_1004690  +
lea eax [ebp+var_4] +
push eax  +
call sub_100423C  +
mov edi eax +
test edi edi +
jl loc_1004690  +
mov esi [ebp+var_4] +
lea eax [esi+4] +
push eax  +
push [ebp+arg_4]  +
call sub_10025AE  +
mov edi eax +
test edi edi +
jl loc_1004690  +
lea eax [esi+8] +
push eax  +
push [ebp+arg_0]  +
call sub_10025AE  +
mov edi eax +
test edi edi +
jl loc_1004690  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx ebx +
mov [ebp+arg_4] esi +
call sub_100340B  +
mov edi eax +
test edi edi +
jl loc_1004690  +
test esi esi +
jz loc_1004690  +
and [ebp+var_4] 0 +
lea ecx [ebp+var_4] +
call sub_1004321  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_8] 0 +
push ebx  +
lea ebx [ecx+4] +
mov eax [ebx] +
mov eax [eax] +
push esi  +
mov [ebp+var_C] eax +
mov eax [ebp+arg_0] +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
js loc_1004794  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10046DC  +
push edi  +
sub eax edx +
push 4  +
sar eax 1 +
pop edi  +
cmp eax edi +
jbe loc_1004793  +
and [ebp+var_4] 0 +
cmp [ebp+var_C] 0 +
jbe loc_100474B  +
push [ebp+var_4]  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
mov ecx [ebp+arg_0] +
add eax edi +
mov eax [eax] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1004737  +
test dx dx +
jz loc_1004733  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1004737  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_1004713  +
xor eax eax +
jmp loc_100473C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_100474B  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_C] +
jb loc_1004700  +
mov eax [ebp+var_C] +
cmp [ebp+var_4] eax +
jnz loc_1004793  +
lea eax [ebp+var_8] +
push eax  +
call sub_100348D  +
mov esi eax +
test esi esi +
jl loc_1004793  +
mov edi [ebp+var_8] +
lea eax [edi+4] +
push eax  +
push [ebp+arg_0]  +
call sub_10025AE  +
mov esi eax +
test esi esi +
jl loc_1004793  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx ebx +
mov [ebp+arg_0] edi +
call sub_100344C  +
mov esi eax +
test esi esi +
jl loc_1004793  +
test edi edi +
jz loc_1004793  +
and [ebp+var_8] 0 +
pop edi  +
lea ecx [ebp+var_8] +
call sub_100433C  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov eax [ebx] +
mov eax [eax] +
xor edx edx +
cmp eax edx +
push 6  +
pop ecx  +
mov esi offset aCnMachine +
lea edi [ebp+var_1C] +
mov [ebp+var_20] edx +
mov [ebp+ld] edx +
mov [ebp+var_34] edx +
mov [ebp+var_30] eax +
mov [ebp+res] edx +
movs   +
jle loc_1004967  +
lea eax [ebp+ld] +
push eax  +
mov ecx ebx +
call sub_10035D3  +
and [ebp+var_28] 0 +
cmp [ebp+var_30] 0 +
mov [ebp+var_20] eax +
jle loc_1004955  +
push [ebp+var_28]  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
mov esi ds:SysStringLen +
add eax 4 +
push dword ptr [eax]  +
call esi  +
cmp dword ptr [ebx+10h] 0 +
push [ebp+var_28]  +
mov ecx ebx +
jz loc_100483B  +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
mov eax [eax] +
lea edi [eax+0Eh] +
jmp loc_10048A3  +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
call esi  +
mov esi eax +
add esi 1Ah +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_100487B  +
lea eax [ebp+var_1C] +
push eax  +
push esi  +
push edi  +
call sub_10027BB  +
mov [ebp+var_20] eax +
jmp loc_1004882  +
mov [ebp+var_20] 8007000Eh +
cmp [ebp+var_20] 0 +
jl loc_10048D9  +
push [ebp+var_28]  +
mov ecx ebx +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
push esi  +
push edi  +
call sub_1002844  +
mov [ebp+var_20] eax +
xor esi esi +
cmp [ebp+var_20] esi +
jl loc_10048DB  +
lea eax [ebp+res] +
push eax  +
push esi  +
push esi  +
push offset filter  +
push 2  +
push edi  +
push [ebp+ld]  +
call ds:ldap_search_sW  +
add esp 1Ch +
test eax eax +
jz loc_10048DB  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov [ebp+var_20] eax +
jmp loc_10048DB  +
xor esi esi +
cmp [ebx+10h] esi +
jnz loc_10048E7  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp+var_20] esi +
jl loc_1004937  +
push [ebp+res]  +
push [ebp+ld]  +
call ds:ldap_first_entry  +
pop ecx  +
mov [ebp+res] eax +
pop ecx  +
cmp eax esi +
jz loc_1004946  +
push offset attr  +
push eax  +
push [ebp+ld]  +
call ds:ldap_get_valuesW  +
mov eax [eax] +
add esp 0Ch +
cmp eax esi +
jz loc_1004924  +
push eax  +
mov ecx ebx +
call sub_10046A6  +
mov [ebp+var_20] eax +
cmp [ebp+var_20] esi +
jl loc_1004937  +
push [ebp+res]  +
push [ebp+ld]  +
call ds:ldap_next_entry  +
jmp loc_10048F8  +
cmp [ebp+res] esi +
jz loc_1004946  +
push [ebp+res]  +
call ds:ldap_msgfree  +
pop ecx  +
inc [ebp+var_28]  +
mov eax [ebp+var_28] +
cmp eax [ebp+var_30] +
jl loc_1004806  +
cmp [ebp+ld] 0 +
jz loc_1004965  +
push [ebp+ld]  +
call ds:ldap_unbind  +
pop ecx  +
xor edx edx +
cmp [ebx+14h] edx +
jz loc_10049C7  +
cmp [ebp+var_20] edx +
jl loc_10049B1  +
lea esi [ebx+4] +
mov eax [esi] +
cmp [eax] edx +
jle loc_10049A3  +
xor edi edi +
mov eax [esi] +
cmp edi [eax] +
jge loc_10049C7  +
push edi  +
mov ecx esi +
call sub_10029E1  +
mov eax [eax] +
add eax 4 +
push dword ptr [eax]  +
mov ecx ebx +
push 20Ah  +
call sub_1002DDD  +
mov [ebp+var_20] eax +
inc edi  +
jmp loc_100497C  +
push 20Bh  +
mov ecx ebx +
call sub_1002CF8  +
jmp loc_10049C4  +
push 267h  +
call ds:GetLastError  +
push eax  +
mov ecx ebx +
call sub_1002ED8  +
mov [ebp+var_20] eax +
lea ecx [ebp+var_34] +
call sub_10028E5  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_20] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
xor edi edi +
push 15h  +
push edi  +
push offset rclsid  +
mov ebx ecx +
mov [ebp+ppv] edi +
mov [ebp+var_10] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi edi +
jl loc_1004ADF  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi edi +
jl loc_1004ADF  +
lea eax [ebp+var_10] +
push eax  +
push offset dword_100186C  +
push offset dword_100188C  +
call sub_1006421  +
mov esi eax +
cmp esi edi +
jl loc_1004ADF  +
mov ecx [ebp+var_10] +
mov eax [ebp+ppv] +
mov edx [ecx] +
lea esi [ebp+var_8] +
push esi  +
cmp [ebx+10h] edi +
jnz loc_1004A69  +
push 1  +
jmp loc_1004A6A  +
push edi  +
push eax  +
push ecx  +
call dword ptr [edx+14h]  +
mov esi eax +
jmp loc_1004AC3  +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
call ds:SysStringLen  +
cmp eax 3 +
jbe loc_1004AAD  +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
mov ecx ebx +
call sub_10046A6  +
mov esi eax +
cmp esi edi +
jl loc_1004AAD  +
cmp [ebx+14h] edi +
jz loc_1004AAD  +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
mov ecx ebx +
push 20Ch  +
call sub_1002DDD  +
mov esi eax +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
call ds:SysFreeString  +
lea ecx [ebp+var_4] +
call sub_1002985  +
mov [ebp+var_4] edi +
cmp esi edi +
jl loc_1004ADF  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jz loc_1004A73  +
jge loc_1004AF9  +
cmp [ebx+14h] edi +
jz loc_1004AF9  +
push 268h  +
call ds:GetLastError  +
push eax  +
mov ecx ebx +
call sub_1002ED8  +
mov esi eax +
lea ecx [ebp+var_4] +
call sub_1002985  +
lea ecx [ebp+var_8] +
call sub_100296A  +
lea ecx [ebp+var_10] +
call sub_100296A  +
lea ecx [ebp+ppv] +
call sub_100296A  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
mov ebx ds:VariantClear +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
xor edi edi +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
mov [ebp+var_8] ecx +
mov [ebp+var_4] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
mov word ptr [ebp+pvarg] ax +
mov word ptr [ebp+var_38] ax +
mov [ebp+var_14] edi +
js loc_1004C48  +
lea eax [ebp+var_10] +
push eax  +
push offset aName  +
call sub_10025AE  +
mov esi eax +
cmp esi edi +
jl loc_1004C48  +
lea eax [ebp+var_C] +
push eax  +
push offset aId  +
call sub_10025AE  +
mov esi eax +
cmp esi edi +
jl loc_1004C48  +
lea ecx [ebp+var_4] +
call sub_100296A  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_4] edi +
call ebx  +
lea eax [ebp+var_38] +
push eax  +
call ebx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp+var_18] eax +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1004C3F  +
mov ecx [eax] +
push edi  +
push edi  +
lea edx [ebp+pvarg] +
push edx  +
push edi  +
push [ebp+var_10]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi edi +
jl loc_1004C3F  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push edi  +
lea edx [ebp+var_38] +
push edx  +
push edi  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi edi +
jl loc_1004C3F  +
cmp word ptr [ebp+pvarg] 8 +
jnz loc_1004C3F  +
cmp word ptr [ebp+var_38] 8 +
jnz loc_1004C3F  +
push [ebp+var_30]  +
mov ecx [ebp+var_8] +
push dword ptr [ebp-20h]  +
call sub_1002492  +
test eax eax +
jz loc_1004C3F  +
push dword ptr [ebp-20h]  +
mov ecx [ebp+var_8] +
push 208h  +
call sub_1002DDD  +
push [ebp+var_30]  +
mov ecx [ebp+var_8] +
push dword ptr [ebp-20h]  +
call sub_10045B0  +
mov esi eax +
cmp [ebp+var_18] edi +
jz loc_1004B9A  +
lea eax [ebp+var_38] +
push eax  +
call ebx  +
lea eax [ebp+pvarg] +
push eax  +
call ebx  +
lea ecx [ebp+var_C] +
call sub_10028E5  +
lea ecx [ebp+var_10] +
call sub_10028E5  +
lea ecx [ebp+var_4] +
call sub_100296A  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ebx +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
push edi  +
mov edi ecx +
js loc_1004CC1  +
test ebx ebx +
jz loc_1004CC1  +
push ebx  +
mov ecx edi +
call sub_100244F  +
test eax eax +
jz loc_1004CB5  +
push ebx  +
mov ecx edi +
call sub_10044B3  +
mov esi eax +
test esi esi +
jl loc_1004CC1  +
mov ebx [ebx+80h] +
jmp loc_1004C9B  +
xor ebx ebx +
cmp [edi+14h] ebx +
jz loc_1004D1B  +
cmp esi ebx +
jl loc_1004D06  +
mov eax [edi] +
cmp [eax] ebx +
jle loc_1004CF8  +
mov eax [edi] +
cmp ebx [eax] +
jge loc_1004D1B  +
push ebx  +
mov ecx edi +
call sub_10029E1  +
mov eax [eax] +
add eax 8 +
push dword ptr [eax]  +
mov ecx edi +
push 208h  +
call sub_1002DDD  +
mov esi eax +
inc ebx  +
jmp loc_1004CD2  +
push 209h  +
mov ecx edi +
call sub_1002CF8  +
jmp loc_1004D19  +
push 264h  +
call ds:GetLastError  +
push eax  +
mov ecx edi +
call sub_1002ED8  +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
xor esi esi +
push offset stru_10016DC  +
push 1  +
push esi  +
mov ebx ecx +
push offset stru_10017AC  +
mov [ebp+var_18] ebx +
mov [ebp+ppv] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jl loc_1004DDB  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push dword ptr [ebx+18h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_1004DDB  +
lea eax [ebp+var_8] +
push eax  +
push offset aWql  +
call sub_10025AE  +
mov edi eax +
cmp edi esi +
jl loc_1004DDB  +
lea eax [ebp+var_4] +
push eax  +
push off_100B014  +
call sub_10025AE  +
mov edi eax +
cmp edi esi +
jl loc_1004DDB  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
mov edx [ebp+var_10] +
mov edi [edx] +
lea ebx [ebp+var_C] +
push ebx  +
push esi  +
push 30h  +
push eax  +
push ecx  +
push edx  +
call dword ptr [edi+50h]  +
mov edi eax +
cmp edi esi +
jl loc_1004DDB  +
push [ebp+var_C]  +
mov ecx [ebp+var_18] +
call sub_1004B25  +
mov edi eax +
cmp edi esi +
jge loc_1004DF8  +
mov ebx [ebp+var_18] +
cmp [ebx+14h] esi +
jz loc_1004DF8  +
push 263h  +
call ds:GetLastError  +
push eax  +
mov ecx ebx +
call sub_1002ED8  +
mov edi eax +
lea ecx [ebp+var_4] +
call sub_10028E5  +
lea ecx [ebp+var_8] +
call sub_10028E5  +
lea ecx [ebp+var_C] +
call sub_100296A  +
lea ecx [ebp+var_10] +
call sub_100296A  +
lea ecx [ebp+ppv] +
call sub_100296A  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push esi  +
push esi  +
push esi  +
push 3  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
xor eax eax +
push esi  +
mov [ebp+var_8] ecx +
mov [ebp+ppv] esi +
mov [ebp+var_C] esi +
mov [ebp+var_30] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_24] esi +
mov [ebp+var_20] esi +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
mov [ebp+var_2C] esi +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov [ebp+var_4] esi +
call ds:CoInitializeSecurity  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_10016DC  +
push 1  +
push esi  +
push offset stru_10017AC  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
lea ecx [ebp+var_4] +
call sub_10028E5  +
lea eax [ebp+var_4] +
push eax  +
push offset aRootRsop  +
mov [ebp+var_4] esi +
call sub_10025AE  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_4] +
mov ecx [ebp+ppv] +
mov edx [ecx] +
lea edi [ebp+var_C] +
push edi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
lea ecx [ebp+var_4] +
call sub_10028E5  +
lea eax [ebp+var_4] +
push eax  +
push offset aRsoploggingmod  +
mov [ebp+var_4] esi +
call sub_10025AE  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_C] +
mov edx [ecx] +
push esi  +
lea edi [ebp+var_1C] +
push edi  +
push esi  +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+18h]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
lea ecx [ebp+var_4] +
call sub_10028E5  +
lea eax [ebp+var_4] +
push eax  +
mov ebx offset aRsopcreatesess +
push ebx  +
mov [ebp+var_4] esi +
call sub_10025AE  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_1C] +
mov edx [ecx] +
push esi  +
lea edi [ebp+var_24] +
push edi  +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+4Ch]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_24] +
cmp eax esi +
jnz loc_1004F71  +
mov edi 80004005h +
cmp edi esi +
jl loc_100513E  +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
lea ecx [ebp+var_4] +
call sub_10028E5  +
lea eax [ebp+var_4] +
push eax  +
push offset aRsopdeletesess  +
mov [ebp+var_4] esi +
call sub_10025AE  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_1C] +
mov edx [ecx] +
push esi  +
lea edi [ebp+var_20] +
push edi  +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+4Ch]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_20] +
cmp eax esi +
jnz loc_1004FDA  +
mov edi 80004005h +
cmp edi esi +
jl loc_100513E  +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
lea ecx [ebp+var_4] +
call sub_10028E5  +
lea eax [ebp+var_4] +
push eax  +
push offset aFlags  +
mov [ebp+var_4] esi +
call sub_10025AE  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
push 1  +
lea ecx [ebp+pvarg] +
call sub_10028BA  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_18] +
mov edx [ecx] +
push esi  +
lea edi [ebp+pvarg] +
push edi  +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+14h]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov edx [ecx] +
push esi  +
lea edi [ebp+var_10] +
push edi  +
push eax  +
push esi  +
push esi  +
push ebx  +
push offset aRsoploggingmod  +
push ecx  +
call dword ptr [edx+60h]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov ebx ds:VariantClear +
lea eax [ebp+pvarg] +
push eax  +
call ebx  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push esi  +
push esi  +
lea edx [ebp+pvarg] +
push edx  +
push esi  +
push offset aHresult  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
cmp dword ptr [ebp+pvarg.anonymous_0+8] esi +
jge loc_1005098  +
mov edi dword ptr [ebp+pvarg.anonymous_0+8] +
cmp edi esi +
jl loc_100513E  +
lea eax [ebp+pvarg] +
push eax  +
call ebx  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push esi  +
push esi  +
lea edx [ebp+pvarg] +
push edx  +
push esi  +
push offset aNamespace  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
push dword ptr [ebp+pvarg.anonymous_0+8]  +
call ds:SysStringLen  +
mov ebx eax +
add ebx 0Ah +
xor ecx ecx +
push 2  +
pop edx  +
mov eax ebx +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx [ebp+var_8] +
mov [ecx+18h] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
mov edi eax +
js loc_100513E  +
push dword ptr [ebp+pvarg.anonymous_0+8]  +
call ds:SysStringLen  +
push eax  +
push dword ptr [ebp+pvarg.anonymous_0+8]  +
mov eax [ebp+var_8] +
push ebx  +
push dword ptr [eax+18h]  +
call sub_10027F5  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov eax [ebp+var_8] +
push offset aComputer  +
push ebx  +
push dword ptr [eax+18h]  +
call sub_1002844  +
mov edi eax +
cmp edi esi +
jl loc_100513E  +
mov ecx [ebp+var_8] +
call sub_1004D29  +
mov edi eax +
mov eax [ebp+var_8] +
mov eax [eax+18h] +
cmp eax esi +
jz loc_1005185  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1005185  +
mov ecx [ebp+var_14] +
cmp ecx esi +
jz loc_1005185  +
mov edx [ecx] +
push esi  +
lea ebx [ebp+pvarg] +
push ebx  +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+14h]  +
test eax eax +
jl loc_1005185  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov edx [ecx] +
push esi  +
lea ebx [ebp+var_2C] +
push ebx  +
push eax  +
push esi  +
push esi  +
push offset aRsopdeletesess  +
push offset aRsoploggingmod  +
push ecx  +
call dword ptr [edx+60h]  +
lea ecx [ebp+var_4] +
call sub_10028E5  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
lea ecx [ebp+var_2C] +
call sub_100296A  +
lea ecx [ebp+var_10] +
call sub_100296A  +
lea ecx [ebp+var_14] +
call sub_100296A  +
lea ecx [ebp+var_18] +
call sub_100296A  +
lea ecx [ebp+var_20] +
call sub_100296A  +
lea ecx [ebp+var_24] +
call sub_100296A  +
lea ecx [ebp+var_1C] +
call sub_100296A  +
lea ecx [ebp+var_30] +
call sub_100296A  +
lea ecx [ebp+var_C] +
call sub_100296A  +
lea ecx [ebp+ppv] +
call sub_100296A  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hObject] +
push eax  +
xor ebx ebx +
push 0F01FFh  +
mov esi ecx +
mov [ebp+hObject] ebx +
mov [ebp+var_4] ebx +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1005233  +
call ds:GetLastError  +
push eax  +
call sub_1002565  +
mov edi eax +
cmp edi ebx +
jl loc_1005264  +
mov ecx esi +
cmp [esi+10h] ebx +
jnz loc_1005241  +
call sub_1004E2C  +
jmp loc_1005262  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+hObject]  +
call sub_1003553  +
mov edi eax +
cmp edi ebx +
jl loc_1005264  +
cmp [ebp+var_4] ebx +
jz loc_1005264  +
push [ebp+var_4]  +
mov ecx esi +
call sub_1004C7A  +
mov edi eax +
cmp [ebp+hObject] ebx +
jz loc_1005272  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+var_4] ebx +
jz loc_1005280  +
push [ebp+var_4]  +
call ds:FreeGPOListW  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
cmp ecx edx +
jnz loc_10052A3  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
jmp loc_10052C3  +
mov eax offset word_10014F4 +
test ecx ecx +
jnz loc_10052AE  +
mov ecx eax +
test edx edx +
jnz loc_10052B4  +
mov edx eax +
push edx  +
push ecx  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test ecx ecx +
jz loc_100531A  +
mov eax [ebp+arg_4] +
cmp eax 7FFFFFFFh +
ja loc_100531A  +
push edi  +
xor edi edi +
mov edx eax +
test eax eax +
jz loc_10052FF  +
cmp [ecx] di +
jz loc_10052FB  +
inc ecx  +
inc ecx  +
dec edx  +
jnz loc_10052F1  +
test edx edx +
jnz loc_1005304  +
mov edi 80070057h +
test esi esi +
jz loc_1005315  +
test edi edi +
jl loc_1005312  +
sub eax edx +
mov [esi] eax +
jmp loc_1005315  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
jmp loc_100531F  +
mov eax 80070057h +
test eax eax +
jge loc_100532A  +
test esi esi +
jz loc_100532A  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
call ds:GetModuleHandleW  +
mov [ebp+hInstance] eax +
xor eax eax +
push 206h  +
mov [ebp+Buffer] ax +
lea eax [ebp-20Ah] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
push 0FFFFFFF5h  +
mov [ebp+nNumberOfCharsToWrite] esi +
mov [ebp+NumberOfCharsWritten] esi +
call ds:GetStdHandle  +
mov ebx ds:LoadStringW +
mov esi eax +
mov [ebp+hConsoleOutput] esi +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
mov [ebp+uID] 64h +
mov edi 104h +
js loc_1005451  +
cmp [ebp+uID] 65h +
jg loc_1005451  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push [ebp+hInstance]  +
call ebx  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_1005443  +
lea eax [ebp+nNumberOfCharsToWrite] +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10052CE  +
mov esi eax +
test esi esi +
jl loc_1005443  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+nNumberOfCharsToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleOutput]  +
call ds:WriteConsoleW  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_1005443  +
push offset asc_100160C  +
call ds:wprintf  +
pop ecx  +
inc [ebp+uID]  +
test esi esi +
jge loc_10053C0  +
push offset asc_100160C  +
call ds:wprintf  +
pop ecx  +
test esi esi +
jl loc_10054D3  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 66h  +
push [ebp+hInstance]  +
call ebx  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_10054D3  +
lea eax [ebp+nNumberOfCharsToWrite] +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10052CE  +
mov esi eax +
test esi esi +
jl loc_10054D3  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+nNumberOfCharsToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleOutput]  +
call ds:WriteConsoleW  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_10054D3  +
push offset asc_100160C  +
call ds:wprintf  +
pop ecx  +
mov [ebp+uID] 67h +
test esi esi +
jl loc_1005660  +
cmp [ebp+uID] 68h +
jg loc_1005572  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push [ebp+hInstance]  +
call ebx  +
push eax  +
call sub_100258D  +
mov esi eax +
test esi esi +
jl loc_1005558  +
lea eax [ebp+nNumberOfCharsToWrite] +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10052CE  +
mov esi eax +
test esi esi +
jl loc_1005558  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+nNumberOfCharsToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleOutput]  +
call ds:WriteConsoleW  +
push eax  +
call sub_100258D  +
mov esi eax +
push offset asc_100160C  +
call ds:wprintf  +
inc [ebp+uID]  +
pop ecx  +
test esi esi +
jge loc_10054E5  +
test esi esi +
jl loc_1005660  +
mov esi ds:wprintf +
push offset asc_100160C  +
call esi  +
pop ecx  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 69h  +
push [ebp+hInstance]  +
call ebx  +
push eax  +
call sub_100258D  +
test eax eax +
jl loc_1005660  +
lea eax [ebp+nNumberOfCharsToWrite] +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10052CE  +
test eax eax +
jl loc_1005660  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+nNumberOfCharsToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleOutput]  +
call ds:WriteConsoleW  +
push eax  +
call sub_100258D  +
test eax eax +
jl loc_1005660  +
push offset asc_1001604  +
call esi  +
pop ecx  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 6Ah  +
push [ebp+hInstance]  +
call ebx  +
push eax  +
call sub_100258D  +
test eax eax +
jl loc_1005660  +
lea eax [ebp+nNumberOfCharsToWrite] +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10052CE  +
test eax eax +
jl loc_1005660  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+nNumberOfCharsToWrite]  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleOutput]  +
call ds:WriteConsoleW  +
push eax  +
call sub_100258D  +
test eax eax +
jl loc_1005660  +
push offset asc_100160C  +
call esi  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
xor ebx ebx +
inc ebx  +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
js loc_100571E  +
cmp [ebp+arg_0] ebx +
push edi  +
mov edi ebx +
jle loc_100571D  +
push esi  +
mov eax [ebp+arg_4] +
lea esi [eax+edi*4] +
mov eax [esi] +
movzx ecx word ptr [eax] +
cmp cx 2Fh +
jz loc_10056BC  +
cmp cx 2Dh +
jnz loc_1005702  +
cmp word ptr [eax+2] 3Fh +
jz loc_1005713  +
lea ecx [ebp+var_4] +
push ecx  +
push offset aLog  +
push eax  +
call sub_100528C  +
cmp [ebp+var_4] 0 +
jnz loc_10056DF  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
jmp loc_100570B  +
lea eax [ebp+var_4] +
push eax  +
push offset aLog_0  +
push dword ptr [esi]  +
call sub_100528C  +
mov ecx [ebp+arg_8] +
xor eax eax +
cmp [ebp+var_4] eax +
setz al  +
cmp [ebp+var_4] 0 +
mov [ecx] eax +
jz loc_100570B  +
call sub_1005334  +
and [ebp+var_8] 0 +
inc edi  +
cmp edi [ebp+arg_0] +
jl loc_10056A5  +
jmp loc_100571C  +
and [ebp+var_8] 0 +
call sub_1005334  +
pop esi  +
pop edi  +
mov eax [ebp+var_8] +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
lea ecx [ebp+var_20] +
call sub_1004415  +
and [ebp+var_4] 0 +
push 0  +
call ds:CoInitialize  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1005674  +
test eax eax +
jz loc_10057C2  +
lea ecx [ebp+var_20] +
call sub_10023E5  +
test eax eax +
jz loc_10057C2  +
lea ecx [ebp+var_20] +
call sub_1002657  +
test eax eax +
jl loc_10057BA  +
push [ebp+var_4]  +
lea ecx [ebp+var_20] +
call sub_1003DC5  +
lea ecx [ebp+var_20] +
call sub_10051F3  +
test eax eax +
jl loc_1005791  +
lea ecx [ebp+var_20] +
call sub_10047A9  +
lea ecx [ebp+var_20] +
call sub_10049E6  +
lea ecx [ebp+var_20] +
call sub_10036C3  +
lea ecx [ebp+var_20] +
call sub_10038C2  +
test eax eax +
jl loc_10057BA  +
push 0  +
call SetDefaultPrinterW  +
push eax  +
call sub_100258D  +
lea ecx [ebp+var_20] +
call sub_1003126  +
call ds:CoUninitialize  +
lea ecx [ebp+var_20] +
call sub_1004457  +
xor eax eax +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
mov esi [ebp-4] +
push 9  +
pop ecx  +
lea edi [ebp-28h] +
movs   +
mov eax [ebp-28h] +
and eax 0F9930520h +
or eax 19930520h +
mov [ebp-28h] eax +
lea eax [ebp-28h] +
mov [ebp-4] eax +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
mov eax [ebp-4] +
call ds:__CxxFrameHandler  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1005847  +
test eax eax +
jnz loc_100584C  +
mov ecx [esi] +
test ecx ecx +
jz loc_1005844  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1005838  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100B3DC +
push offset dword_100B3CC  +
push dword_100B3D8  +
mov dword_100B3CC eax +
push offset dword_100B3BC  +
push offset dword_100B3C0  +
push offset dword_100B3B8  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100B3C8 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10058D4  +
cmp eax esi +
jnz loc_10058C7  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10058D7  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10058AE  +
xor esi esi +
inc esi  +
mov eax dword_100B748 +
cmp eax esi +
jnz loc_10058EA  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1005925  +
mov eax dword_100B748 +
test eax eax +
jnz loc_100591F  +
mov dword_100B748 esi +
push offset dword_10011F0  +
push offset dword_10011E4  +
call sub_100582B  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005925  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10059EF  +
mov dword_100B3D4 esi +
mov eax dword_100B748 +
cmp eax esi +
jnz loc_1005949  +
push offset dword_10011E0  +
push offset dword_10011D8  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100B748 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1005956  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100B754 ebx +
jz loc_1005977  +
push offset dword_100B754  +
call sub_1005EE9  +
pop ecx  +
test eax eax +
jz loc_1005977  +
push ebx  +
push 2  +
push ebx  +
call dword_100B754  +
push dword_100B3BC  +
push dword_100B3C0  +
push dword_100B3B8  +
call sub_100572B  +
add esp 0Ch +
mov dword_100B3D0 eax +
cmp dword_100B3C4 ebx +
jnz loc_10059D5  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100B3D0 eax +
xor ebx ebx +
cmp dword_100B3C4 ebx +
jnz loc_10059D5  +
push eax  +
call ds:_exit  +
cmp dword_100B3D4 ebx +
jnz loc_10059E3  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100B3D0 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1005A0C  +
xor eax eax +
jmp loc_1005A59  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1005A08  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1005A46  +
cmp ecx 20Bh +
jnz loc_1005A08  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1005A08  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1005A54  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1005A08  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100B3C4 eax +
call sub_1006082  +
push eax  +
call ds:__set_app_type  +
or dword_100B740 0FFFFFFFFh +
or dword_100B744 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100B3E4 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100B3E0 +
mov [eax] ecx +
call sub_1006014  +
cmp dword_100B038 0 +
jnz loc_1005AB2  +
push offset sub_1006014  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1005FFC  +
xor eax eax +
retn   +
***
call sub_10060C1  +
jmp sub_100588C  +
***
cmp ecx dword_100B020 +
jnz loc_1005AD9  +
retn 0  +
jmp loc_1006157  +
***
push edi  +
mov ebp [ecx] +
push edi  +
mov ebp edx +
push ebx  +
push edx  +
push ecx  +
push [esp+8+arg_4]  +
call __local_unwind4  +
add esp 0Ch +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebx+8] +
xor esi [eax] +
push edi  +
mov eax [esi] +
mov [ebp+var_1] 0 +
mov [ebp+var_C] 1 +
lea edi [ebx+10h] +
cmp eax 0FFFFFFFEh +
jz loc_1005CA6  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+arg_8] +
test byte ptr [eax+4] 66h +
jnz loc_1005DD3  +
lea ecx [ebp+var_18] +
mov [ebx-4] ecx +
mov ebx [ebx+0Ch] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_14] eax +
cmp ebx 0FFFFFFFEh +
jz loc_1005D38  +
jmp loc_1005CE0  +
lea edx [ebx+ebx*2] +
mov ecx [esi+edx*4+14h] +
lea eax [esi+edx*4+10h] +
mov [ebp+var_10] eax +
mov eax [eax] +
mov [ebp+var_8] eax +
test ecx ecx +
jz loc_1005D0B  +
mov edx edi +
call @_EH4_CallFilterFunc@8  +
mov [ebp+var_1] 1 +
test eax eax +
jl loc_1005D42  +
jg loc_1005D4B  +
mov eax [ebp+var_8] +
mov ebx eax +
cmp eax 0FFFFFFFEh +
jnz loc_1005CE0  +
cmp [ebp+var_1] 0 +
jz loc_1005D38  +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_1005D2A  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov [ebp+var_C] 0 +
jmp loc_1005D18  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1005D7F  +
cmp dword_100B750 0 +
jz loc_1005D7F  +
push offset dword_100B750  +
call sub_1005EE9  +
add esp 4 +
test eax eax +
jz loc_1005D7F  +
mov ecx [ebp+arg_8] +
push 1  +
push ecx  +
call dword_100B750  +
add esp 8 +
mov ecx [ebp+arg_C] +
call @_EH4_GlobalUnwind@4  +
mov eax [ebp+arg_C] +
cmp [eax+0Ch] ebx +
jz loc_1005DA0  +
mov edx [ebp+arg_0] +
push edx  +
push edi  +
mov edx ebx +
mov ecx eax +
call @_EH4_LocalUnwind@16  +
mov eax [ebp+arg_C] +
mov ecx [ebp+var_8] +
mov [eax+0Ch] ecx +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_1005DB8  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+var_10] +
mov ecx [eax+8] +
mov edx edi +
call @_EH4_TransferToHandler@8  +
mov edx 0FFFFFFFEh +
cmp [ebx+0Ch] edx +
jz loc_1005D38  +
mov ecx [ebp+arg_0] +
push ecx  +
push edi  +
mov ecx ebx +
call @_EH4_LocalUnwind@16  +
jmp loc_1005D18  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1005E34  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1005E34  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1005E2E  +
cmp eax 19930521h +
jz loc_1005E2E  +
cmp eax 19930522h +
jz loc_1005E2E  +
cmp eax 1994000h +
jnz loc_1005E34  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1005DF4+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1005E76  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1005E72  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1005EDD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1005ED5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1005EDF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1005EC5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1005E60  +
pop ecx  +
test eax eax +
jz loc_1005F46  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1005EA0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005F46  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1005F4F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1005ACE  +
push offset dword_100B020  +
call sub_1005C70  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1006075  +
cmp ecx 0FFFFFFFFh +
jz loc_1006075  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100606E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100606E  +
cmp edx 10000000h +
jnb loc_100606E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100606E  +
jmp loc_1006069  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10060B7  +
push eax  +
call sub_100601C  +
test eax eax +
jz loc_10060B7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10060AC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10060B7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100B020 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10060F3  +
test eax ebx +
jz loc_10060F3  +
not eax  +
mov dword_100B024 eax +
jmp loc_100614E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100613A  +
test dword_100B020 ebx +
jnz loc_100613F  +
mov esi 0BB40E64Fh +
mov dword_100B020 esi +
not esi  +
mov dword_100B024 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_100B4E8 eax +
mov dword_100B4E4 ecx +
mov dword_100B4E0 edx +
mov dword_100B4DC ebx +
mov dword_100B4D8 esi +
mov dword_100B4D4 edi +
mov word_100B500 ss +
mov word_100B4F4 cs +
mov word_100B4D0 ds +
mov word_100B4CC es +
mov word_100B4C8 fs +
mov word_100B4C4 gs +
pushf   +
pop dword_100B4F8  +
mov eax [ebp+0] +
mov dword_100B4EC eax +
mov eax [ebp+4] +
mov dword_100B4F0 eax +
lea eax [ebp+8] +
mov dword_100B4FC eax +
mov eax [ebp-320h] +
mov dword_100B438 10001h +
mov eax dword_100B4F0 +
mov dword_100B3F4 eax +
mov dword_100B3E8 0C0000409h +
mov dword_100B3EC 1 +
mov eax dword_100B020 +
mov [ebp-328h] eax +
mov eax dword_100B024 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push esi  +
mov eax [esp+14h] +
or eax eax +
jnz loc_1006271  +
mov ecx [esp+10h] +
mov eax [esp+0Ch] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+8] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  dword ptr [esp+10h] +
mov ecx eax +
mov eax esi +
mul  dword ptr [esp+10h] +
add edx ecx +
jmp loc_10062B8  +
mov ecx eax +
mov ebx [esp+10h] +
mov edx [esp+0Ch] +
mov eax [esp+8] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_100627F  +
div  ebx +
mov esi eax +
mul  dword ptr [esp+14h] +
mov ecx eax +
mov eax [esp+10h] +
mul  esi +
add edx ecx +
jb loc_10062AD  +
cmp edx [esp+0Ch] +
ja loc_10062AD  +
jb loc_10062B6  +
cmp eax [esp+8] +
jbe loc_10062B6  +
dec esi  +
sub eax [esp+10h] +
sbb edx [esp+14h] +
xor ebx ebx +
sub eax [esp+8] +
sbb edx [esp+0Ch] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov ebx offset unk_100B040 +
retn   +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_1006329  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_8] +
mov eax 80040111h +
cmp edi 1 +
jnz loc_10063AC  +
mov edi eax +
test ebx ebx +
jz loc_10063A7  +
and dword ptr [ebx] 0 +
jmp loc_10063AC  +
mov edi 80004003h +
test ebx ebx +
jz loc_1006414  +
cmp dword ptr [ebx] 0 +
jnz loc_1006414  +
mov edi [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 4  +
pop ecx  +
xor edx edx +
cmps   +
jnz loc_1006411  +
push offset unk_100B718  +
push 14h  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10063E2  +
mov ecx eax +
call sub_100731D  +
mov esi eax +
jmp loc_10063E4  +
xor esi esi +
test esi esi +
jz loc_10063F3  +
mov ecx esi +
call sub_1006014  +
mov edi eax +
jmp loc_10063F8  +
mov edi 8007000Eh +
test edi edi +
jl loc_1006402  +
mov [ebx] esi +
xor esi esi +
xor edi edi +
test esi esi +
jz loc_1006413  +
lea ecx [esi+4] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
jmp loc_1006413  +
mov edi eax +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi ebx +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
js loc_1006476  +
and dword ptr [ebx] 0 +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push [ebp+arg_0]  +
push offset dword_100188C  +
call sub_1006385  +
mov esi eax +
test esi esi +
jl loc_1006476  +
push edi  +
mov edi [ebp+var_4] +
mov eax [edi] +
push ebx  +
push [ebp+arg_4]  +
push edi  +
call dword ptr [eax]  +
mov esi eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov dword ptr [ecx] offset off_10018B4 +
add ecx 4 +
mov dword ptr [ecx] offset off_10018AC +
jmp sub_1008C46  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
push 2  +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+10h]  +
mov [ebp-0Ch] eax +
push dword ptr [ebp+0Ch]  +
mov [ebp-4] eax +
add eax 4 +
push eax  +
mov dword ptr [ebp-10h] offset dword_1001E74 +
mov dword ptr [ebp-8] offset dword_100186C +
call sub_1008D0B  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
lea esi [ecx+4] +
mov dword ptr [ecx] offset off_10018D4 +
mov ecx [ecx+18h] +
mov dword ptr [esi] offset off_10018CC +
test ecx ecx +
jz loc_10064F8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx esi +
pop esi  +
jmp sub_1008C46  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
push 2  +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+10h]  +
mov [ebp-0Ch] eax +
push dword ptr [ebp+0Ch]  +
mov [ebp-4] eax +
add eax 4 +
push eax  +
mov dword ptr [ebp-10h] offset dword_1001E74 +
mov dword ptr [ebp-8] offset dword_100187C +
call sub_1008D0B  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
push eax  +
call sub_1008C5D  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
push eax  +
call sub_1008C78  +
pop ebp  +
retn 4  +
***
inc eax  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1009643  +
test [ebp+arg_0] 1 +
jz loc_100659B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
and dword ptr [ecx+10h] 0 +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10088BF  +
test [ebp+arg_0] 1 +
jz loc_10065CD  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [esi+10h] +
push edi  +
xor edi edi +
test ecx ecx +
jz loc_100662A  +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_1006624  +
test ebx ebx +
jbe loc_1006619  +
mov ecx [esi+10h] +
call sub_10083EA  +
test eax eax +
jnz loc_1006619  +
mov ecx [esi+10h] +
call sub_10083A8  +
inc edi  +
cmp edi ebx +
jb loc_1006600  +
xor eax eax +
cmp edi ebx +
setnz al  +
mov edi eax +
jmp loc_1006629  +
call sub_10087DC  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
and dword ptr [ecx+14h] 0 +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax ecx +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
js loc_1006664  +
push dword ptr [ecx]  +
call sub_10089A5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jz loc_1006680  +
mov edx [ebp+arg_8] +
cmp edx eax +
jnz loc_1006687  +
mov eax 80070057h +
jmp loc_10066A1  +
xor ecx ecx +
cmp [ebp+arg_0] eax +
jbe loc_10066A1  +
push esi  +
cmp [edx+ecx*4] eax +
jl loc_100669A  +
mov esi [ebp+arg_4] +
mov [edx+ecx*4] esi +
inc ecx  +
cmp ecx [ebp+arg_0] +
jb loc_100668F  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_220] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_18] +
push ebx  +
mov [ebp+var_224] eax +
xor eax eax +
xor ebx ebx +
cmp [ebp+arg_4] ebx +
push esi  +
mov esi [ebp+arg_0] +
setnz al  +
push edi  +
mov edi [ebp+arg_10] +
push 206h  +
push ebx  +
inc eax  +
mov [ebp+var_228] eax +
xor eax eax +
mov word ptr [ebp+var_20C] ax +
lea eax [ebp+var_20C+2] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+hKey] ebx +
mov [ebp+var_210] ebx +
cmp esi ebx +
jz loc_100673E  +
cmp [ebp+var_220] ebx +
jz loc_100673E  +
cmp edi ebx +
jz loc_100673E  +
cmp [ebp+var_21C] ebx +
jz loc_100673E  +
cmp [ebp+var_224] ebx +
jnz loc_1006748  +
mov esi 80004005h +
jmp loc_1006869  +
mov eax [esi] +
lea ecx [ebp+var_210] +
push ecx  +
push offset riid  +
push esi  +
call dword ptr [eax]  +
mov esi eax +
cmp esi ebx +
jl loc_1006855  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_218] +
push edx  +
push eax  +
call dword ptr [ecx+48h]  +
mov esi eax +
cmp esi ebx +
jl loc_1006855  +
cmp [ebp+var_218] 2 +
jnz loc_10067C7  +
mov eax [ebp+var_210] +
push 104h  +
lea edx [ebp+var_20C] +
push edx  +
push [ebp+var_228]  +
mov [edi] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
cmp esi ebx +
jl loc_1006855  +
mov ecx [ebp+var_21C] +
lea eax [ebp+var_20C] +
push eax  +
call sub_1009196  +
mov esi eax +
cmp esi ebx +
jl loc_1006855  +
xor eax eax +
inc eax  +
cmp [ebp+var_218] ebx +
jz loc_10067E2  +
cmp [ebp+var_218] eax +
jnz loc_100683D  +
lea edx [ebp+hKey] +
push edx  +
push [ebp+var_228]  +
mov [edi] eax +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1006855  +
mov ecx [ebp+var_224] +
xor eax eax +
cmp [ebp+arg_8] ebx +
setnz al  +
lea eax [eax+eax+7] +
push eax  +
push offset aSoftwarePolici  +
push [ebp+hKey]  +
call sub_1009B0A  +
mov esi eax +
cmp esi ebx +
jge loc_1006841  +
and eax 0FFFFh +
cmp eax 2 +
jnz loc_100683D  +
cmp [ebp+arg_8] ebx +
jz loc_100683D  +
xor esi esi +
cmp esi ebx +
jl loc_1006855  +
mov eax [ebp+var_210] +
mov ecx [ebp+var_220] +
mov [ecx] eax +
mov [ebp+var_210] ebx +
cmp [ebp+hKey] ebx +
jz loc_1006869  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push [ebp+var_210]  +
call sub_100275A  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_C] 0 +
push esi  +
mov esi [ebp+arg_0] +
jz loc_10068B3  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset unk_100B340  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_10068C7  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_100123C  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push esi  +
call dword ptr [eax+1Ch]  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10068ED  +
push dword ptr [esi]  +
call ds:SysFreeString  +
push esi  +
call ds:CoTaskMemFree  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor edx edx +
push edi  +
cmp ecx edx +
jz loc_100690F  +
mov edi [ebp+arg_4] +
cmp edi edx +
jnz loc_1006916  +
mov edx 80004005h +
jmp loc_1006927  +
cmp ecx edx +
jbe loc_100691E  +
xor eax eax +
stos   +
mov eax [ebp+arg_8] +
cmp eax edx +
jz loc_1006927  +
mov [eax] edx +
mov eax edx +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1006968  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1006967  +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jbe loc_100695C  +
push dword ptr [edi+esi*4]  +
call sub_10068D1  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_100694E  +
mov eax [ebp+arg_8] +
pop esi  +
test eax eax +
jz loc_1006967  +
and dword ptr [eax] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_1006984  +
call sub_100A09B  +
mov [esi+4] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_10069A3  +
mov ecx [ebp+arg_0] +
call sub_100A04E  +
jmp loc_10069A8  +
mov eax 80070057h +
test eax eax +
jl loc_10069B7  +
push [ebp+arg_0]  +
lea ecx [esi+4] +
call sub_100A0BE  +
pop esi  +
pop ebp  +
retn 4  +
***
sub ecx 4 +
jmp loc_1006A35  +
***
sub ecx 4 +
jmp loc_1006A0F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax ecx +
mov edx ecx +
shl edx 10h +
and eax 0FF00h +
or eax edx +
mov edx ecx +
and edx 0FF0000h +
shr ecx 10h +
or edx ecx +
shl eax 8 +
shr edx 8 +
or eax edx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1006483  +
test byte ptr [ebp+8] 1 +
jz loc_1006A29  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10064D9  +
test byte ptr [ebp+8] 1 +
jz loc_1006A4F  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+18h] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+18h] +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
pop ebp  +
retn 8  +
***
mov eax 80004001h +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 70706332h  +
mov dword ptr [esi] offset off_10018F0 +
call sub_10069DB  +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_8]  +
mov edi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10068F9  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jl loc_1006B1F  +
cmp [ebp+arg_0] ebx +
jbe loc_1006B04  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] eax +
push [ebp+var_4]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
mov esi eax +
test esi esi +
jnz loc_1006B06  +
add [ebp+var_4] 4 +
inc ebx  +
cmp ebx [ebp+arg_0] +
jb loc_1006AEA  +
test esi esi +
jl loc_1006B1F  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1006B11  +
mov [eax] ebx +
xor eax eax +
cmp ebx [ebp+arg_0] +
setnz al  +
mov esi eax +
test esi esi +
jge loc_1006B2D  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006933  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1006A9D  +
push 70706333h  +
mov dword ptr [esi] offset off_1001904 +
call sub_10069DB  +
mov [esi+8] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10018F0 +
jz loc_1006B7C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008496  +
test [ebp+arg_0] 1 +
jz loc_1006BA2  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
lea ecx [ebp+var_20] +
mov [ebp+var_30] esi +
mov [ebp+var_28] eax +
mov [ebp+var_24] edi +
xor ebx ebx +
mov dword ptr [ebp+Data] edi +
call sub_100934C  +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
cmp esi edi +
jz loc_1006BF2  +
cmp [ebp+var_28] edi +
jnz loc_1006BFC  +
mov esi 80070057h +
jmp loc_1006D0F  +
push esi  +
lea ecx [ebp+var_44] +
call sub_1009504  +
lea ecx [ebp+var_44] +
call sub_1009563  +
mov esi eax +
cmp esi edi +
jl loc_1006D07  +
lea ecx [ebp+var_44] +
call sub_1009591  +
lea ecx [ebp+var_44] +
call sub_1009606  +
test eax eax +
jnz loc_1006D07  +
lea eax [ebp+var_24] +
push eax  +
lea ecx [ebp+var_44] +
call sub_1009614  +
mov esi eax +
cmp esi edi +
jl loc_1006CEB  +
mov ecx [ebp+var_30] +
push 9  +
push [ebp+var_24]  +
call sub_10065D9  +
push eax  +
lea ecx [ebp+var_20] +
call sub_1009B0A  +
mov esi eax +
cmp esi edi +
jl loc_1006CEB  +
lea eax [ebp+var_C] +
push eax  +
push offset aUncname_0  +
lea ecx [ebp+var_20] +
call sub_1009B6A  +
mov esi eax +
cmp esi edi +
jl loc_1006CEB  +
lea eax [ebp+Data] +
push eax  +
push offset ValueName  +
lea ecx [ebp+var_20] +
call sub_1009B46  +
mov esi eax +
cmp esi edi +
jl loc_1006CEB  +
push 5Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax edi +
jz loc_1006CC4  +
push dword ptr [ebp+Data]  +
mov ecx eax +
push edi  +
push edi  +
push [ebp+var_8]  +
push [ebp+var_24]  +
push offset aLocalgpo  +
push offset aLocal  +
push offset aLocalGroupPoli  +
call sub_1008AF9  +
mov ebx eax +
jmp loc_1006CC6  +
xor ebx ebx +
cmp ebx edi +
jz loc_1006CD5  +
mov ecx ebx +
call sub_1008AA5  +
mov esi eax +
jmp loc_1006CDA  +
mov esi 8007000Eh +
cmp esi edi +
jl loc_1006CEB  +
mov ecx [ebp+var_28] +
push ebx  +
call sub_100698B  +
mov esi eax +
xor ebx ebx +
cmp ebx edi +
jz loc_1006CF7  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax]  +
lea ecx [ebp+var_44] +
call sub_10095CA  +
cmp esi edi +
jge loc_1006C1F  +
lea ecx [ebp+var_44] +
call sub_1009582  +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
lea ecx [ebp+var_20] +
call sub_1009643  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1006D5A  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1006D5A  +
cmp [ebp+arg_8] 0 +
jz loc_1006D5A  +
mov edi [ebp+arg_C] +
test edi edi +
jnz loc_1006D61  +
mov ebx 80070057h +
jmp loc_1006D92  +
push dword ptr [esi+38h]  +
call sub_1009196  +
mov ebx eax +
test ebx ebx +
jl loc_1006D92  +
mov eax [esi+4Ch] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov esi [esi+18h] +
push offset aLocalGroupPoli  +
push esi  +
call ds:_wcsicmp  +
neg eax  +
sbb eax eax +
and eax 3 +
pop ecx  +
inc eax  +
pop ecx  +
mov [edi] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+10h] +
mov dword ptr [esi] offset off_1001918 +
test ecx ecx +
jz loc_1006DB9  +
push 1  +
call sub_10065B3  +
mov dword ptr [esi] offset off_10018F0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_1006DDE  +
mov ebx [ebp+arg_8] +
cmp ebx edi +
jnz loc_1006DE5  +
mov esi 80070057h +
jmp loc_1006E33  +
push 4  +
pop ecx  +
mul  ecx +
mov [ebx] edi +
cmp edx edi +
ja loc_1006E14  +
jb loc_1006DF7  +
cmp eax 0FFFFFFFFh +
ja loc_1006E14  +
push eax  +
call ds:CoTaskMemAlloc  +
mov edi eax +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
jmp loc_1006E19  +
mov esi 80004005h +
test esi esi +
jl loc_1006E33  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100666D  +
mov esi eax +
test esi esi +
jl loc_1006E33  +
mov [ebx] edi +
xor edi edi +
push edi  +
call ds:CoTaskMemFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+var_30] +
call sub_100934C  +
lea ecx [ebp+var_14] +
call sub_1008EBF  +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
lea ecx [ebp+var_1C] +
call sub_1008EBF  +
test ebx ebx +
jz loc_1006E8B  +
test edi edi +
jnz loc_1006E95  +
mov esi 80004003h +
jmp loc_1006F3B  +
lea eax [ebp+var_14] +
push eax  +
call sub_100A13E  +
mov esi eax +
test esi esi +
jl loc_1006F3B  +
push edi  +
call sub_10089A5  +
mov esi eax +
test esi esi +
jl loc_1006F3B  +
push 0  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1008D8B  +
mov esi eax +
test esi esi +
jl loc_1006F3B  +
push 7  +
push [ebp+var_10]  +
mov ecx ebx +
call sub_10065D9  +
push eax  +
lea ecx [ebp+var_30] +
call sub_1009B0A  +
mov esi eax +
test esi esi +
jl loc_1006F3B  +
push edi  +
push offset aUncname_0  +
lea ecx [ebp+var_30] +
call sub_1009B98  +
mov esi eax +
test esi esi +
jl loc_1006F3B  +
push [ebp+lpData]  +
lea ecx [ebp+var_30] +
push offset aServername  +
call sub_1009B98  +
mov esi eax +
test esi esi +
jl loc_1006F3B  +
push [ebp+var_18]  +
lea ecx [ebp+var_30] +
push offset aPrintername  +
call sub_1009B98  +
mov esi eax +
test esi esi +
jl loc_1006F3B  +
push dword ptr [ebp+Data]  +
lea ecx [ebp+var_30] +
push offset ValueName  +
call sub_1009B7A  +
mov esi eax +
lea ecx [ebp+var_1C] +
call sub_1008FD1  +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
lea ecx [ebp+var_14] +
call sub_1008FD1  +
lea ecx [ebp+var_30] +
call sub_1009643  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+ppObject] 0 +
and [ebp+var_28] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+var_C] +
mov [ebp+lpszPathName] esi +
mov [ebp+var_30] edi +
call sub_1008EBF  +
lea ecx [ebp+var_14] +
call sub_1008EBF  +
lea ecx [ebp+var_1C] +
call sub_1008EBF  +
lea ecx [ebp+var_24] +
call sub_1008EBF  +
test esi esi +
jz loc_1006FC3  +
test edi edi +
jnz loc_1006FCD  +
mov esi 80070057h +
jmp loc_1007133  +
lea eax [ebp+var_C] +
push eax  +
call sub_100A13E  +
mov esi eax +
test esi esi +
jl loc_1007133  +
push ebx  +
push [ebp+var_8]  +
mov ebx offset aCn +
push ebx  +
mov edi offset aSS +
lea eax [ebp+var_C] +
push edi  +
push eax  +
call sub_1009331  +
mov esi eax +
add esp 10h +
test esi esi +
jl loc_1007132  +
push offset aPushedprinterc  +
push ebx  +
lea eax [ebp+var_14] +
push edi  +
push eax  +
call sub_1009331  +
mov esi eax +
xor ebx ebx +
add esp 10h +
cmp esi ebx +
jl loc_1007132  +
push [ebp+var_30]  +
call sub_10089A5  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
push ebx  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_30]  +
call sub_1008D8B  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
lea eax [ebp+ppObject] +
push eax  +
mov edi offset stru_1001EC4 +
push edi  +
push [ebp+lpszPathName]  +
call ADsGetObject  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_10]  +
push offset aContainer  +
push [ebp+ppObject]  +
call sub_1008204  +
push [ebp+ppObject]  +
mov esi eax +
call sub_100275A  +
cmp esi ebx +
mov [ebp+ppObject] ebx +
jl loc_1007132  +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+ppObject] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx]  +
push [ebp+var_28]  +
mov esi eax +
call sub_100275A  +
cmp esi ebx +
mov [ebp+var_28] ebx +
jl loc_1007132  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_8]  +
push offset aMsprintConnect  +
push [ebp+ppObject]  +
call sub_1008204  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
push [ebp+var_30]  +
push offset aUncname_0  +
push [ebp+var_28]  +
call sub_10082B6  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
push [ebp+var_18]  +
push offset aServername  +
push [ebp+var_28]  +
call sub_10082B6  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
push [ebp+var_20]  +
push offset aPrintername  +
push [ebp+var_28]  +
call sub_10082B6  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
push [ebp+arg_8]  +
push offset ValueName  +
push [ebp+var_28]  +
call sub_1008321  +
mov esi eax +
cmp esi ebx +
jl loc_1007132  +
mov eax [ebp+var_28] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
mov esi eax +
pop ebx  +
lea ecx [ebp+var_24] +
call sub_1008FD1  +
lea ecx [ebp+var_1C] +
call sub_1008FD1  +
lea ecx [ebp+var_14] +
call sub_1008FD1  +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1005ACE  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
and [ebp+var_28] 0 +
and [ebp+var_24] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_C] +
mov [ebp+var_2C] eax +
call sub_1008EBF  +
lea ecx [ebp+var_20] +
call sub_100934C  +
push edi  +
lea ecx [ebp+var_40] +
call sub_1009504  +
test ebx ebx +
jz loc_10071B4  +
test edi edi +
jnz loc_10071BB  +
mov esi 80004003h +
jmp loc_10071C5  +
lea ecx [ebp+var_40] +
call sub_1009563  +
mov esi eax +
lea ecx [ebp+var_40] +
call sub_1009591  +
jmp loc_1007255  +
test esi esi +
jl loc_1007272  +
cmp [ebp+var_24] 0 +
jnz loc_1007265  +
lea eax [ebp+var_28] +
push eax  +
lea ecx [ebp+var_40] +
call sub_1009614  +
mov esi eax +
test esi esi +
jl loc_100724D  +
push 9  +
push [ebp+var_28]  +
mov ecx edi +
call sub_10065D9  +
push eax  +
lea ecx [ebp+var_20] +
call sub_1009B0A  +
mov esi eax +
test esi esi +
jl loc_100724D  +
lea eax [ebp+var_C] +
push eax  +
push offset aUncname_0  +
lea ecx [ebp+var_20] +
call sub_1009B6A  +
push [ebp+var_2C]  +
push [ebp+var_8]  +
call ds:_wcsicmp  +
mov esi eax +
neg esi  +
sbb esi esi +
neg esi  +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_100724D  +
push [ebp+var_28]  +
mov ecx ebx +
call sub_1009196  +
mov [ebp+var_24] 1 +
lea ecx [ebp+var_40] +
call sub_10095CA  +
lea ecx [ebp+var_40] +
call sub_1009606  +
test eax eax +
jz loc_10071D2  +
test esi esi +
jl loc_1007272  +
cmp [ebp+var_24] 0 +
jnz loc_1007272  +
xor esi esi +
inc esi  +
lea ecx [ebp+var_40] +
call sub_1009582  +
lea ecx [ebp+var_20] +
call sub_1009643  +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_0] esi +
jz loc_10072B5  +
cmp [ebp+arg_C] esi +
jnz loc_10072BC  +
mov edi 80070057h +
jmp loc_100730A  +
push ebx  +
push 0Ch  +
call ds:CoTaskMemAlloc  +
mov esi eax +
mov edi esi +
neg edi  +
sbb edi edi +
and edi 7FF8FFF2h +
mov ebx 8007000Eh +
add edi ebx +
js loc_1007309  +
mov eax [ebp+arg_4] +
push [ebp+arg_0]  +
mov [esi+4] eax +
mov eax [ebp+arg_8] +
mov [esi+8] eax +
call ds:SysAllocString  +
mov [esi] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax ebx +
mov edi eax +
js loc_1007309  +
mov eax [ebp+arg_C] +
mov [eax] esi +
xor esi esi +
pop ebx  +
push esi  +
call sub_10068D1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
mov ecx edi +
call sub_1008CB2  +
push 70706331h  +
mov dword ptr [esi] offset off_10018B4 +
mov dword ptr [edi] offset off_10018AC +
call sub_10069DB  +
mov [esi+10h] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
mov ecx [eax+18h] +
push dword ptr [ebp+0Ch]  +
call sub_1006ABE  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
mov dword ptr [esi] offset off_1001938 +
test eax eax +
jz loc_100738B  +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_1007399  +
push 1  +
call sub_1006B88  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_10073A7  +
push 1  +
call sub_1006581  +
mov dword ptr [esi] offset off_10018F0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ebx +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
push edi  +
mov edi ecx +
js loc_100741F  +
mov eax [edi+10h] +
lea ecx [eax+1] +
mov [edi+10h] ecx +
test eax eax +
jnz loc_10073FA  +
mov eax [edi] +
push 0  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jl loc_1007491  +
mov eax [edi+1Ch] +
mov ecx [eax] +
xor edx edx +
inc edx  +
test ecx ecx +
jz loc_1007416  +
xor edx edx +
cmp [eax+4] ecx +
setz dl  +
xor eax eax +
test edx edx +
setnz al  +
mov esi eax +
test esi esi +
jnz loc_1007491  +
and [ebp+var_10] esi +
and [ebp+var_14] esi +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
mov eax [edi+1Ch] +
mov eax [eax+4] +
lea ecx [ebp+var_18] +
push ecx  +
lea ecx [ebp+var_14] +
push ecx  +
lea ecx [ebp+var_C] +
push ecx  +
push eax  +
mov ecx edi +
call sub_1006D37  +
mov esi eax +
test esi esi +
jl loc_1007481  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_18]  +
push [ebp+var_14]  +
push [ebp+var_8]  +
call sub_10072A2  +
mov esi eax +
test esi esi +
jl loc_1007481  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jl loc_1007481  +
mov eax [ebp+var_10] +
and [ebp+var_10] 0 +
mov [ebx] eax +
push [ebp+var_10]  +
call sub_10068D1  +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push ebx  +
push esi  +
mov ebx ecx +
jz loc_10074C5  +
cmp [ebp+arg_4] 0 +
jz loc_10074C5  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_10074CC  +
mov eax 80070057h +
jmp loc_100750D  +
mov ecx esi +
call sub_1006971  +
push edi  +
mov eax [esi] +
test eax eax +
jz loc_10074FF  +
mov edi [esi+4] +
xor ecx ecx +
cmp edi eax +
setz cl  +
mov eax ecx +
test eax eax +
jnz loc_10074FF  +
mov ecx esi +
call sub_100847B  +
test edi edi +
jz loc_10074D4  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
jmp loc_10074D4  +
push [ebp+arg_4]  +
mov ecx ebx +
push [ebp+arg_0]  +
call sub_1006BAE  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1006DA0  +
test byte ptr [ebp+8] 1 +
jz loc_1007532  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ebx +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
push edi  +
mov edi ecx +
js loc_100759F  +
mov eax [edi+14h] +
lea ecx [eax+1] +
mov [edi+14h] ecx +
test eax eax +
jnz loc_1007584  +
mov eax [edi] +
push 0  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jl loc_100764B  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_100759C  +
call sub_10083EA  +
test eax eax +
jz loc_10075A7  +
xor esi esi +
inc esi  +
test esi esi +
jnz loc_100764B  +
and [ebp+var_1C] 0 +
and [ebp+var_18] 0 +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
lea ecx [ebp+var_14] +
call sub_1008EBF  +
mov ecx [edi+10h] +
lea eax [ebp+var_C] +
push eax  +
push offset aUncname_0  +
call sub_1008889  +
mov esi eax +
test esi esi +
jl loc_1007633  +
mov ecx [edi+10h] +
lea eax [ebp+var_1C] +
push eax  +
push offset ValueName  +
call sub_10088A4  +
mov esi eax +
test esi esi +
jl loc_1007633  +
mov ecx [edi+10h] +
lea eax [ebp+var_14] +
push eax  +
push offset aCn  +
call sub_1008889  +
mov esi eax +
test esi esi +
jl loc_1007633  +
lea eax [ebp+var_18] +
push eax  +
push 4  +
push [ebp+var_1C]  +
push [ebp+var_8]  +
call sub_10072A2  +
mov esi eax +
test esi esi +
jl loc_1007633  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jl loc_1007633  +
mov eax [ebp+var_18] +
and [ebp+var_18] 0 +
mov [ebx] eax +
push [ebp+var_18]  +
call sub_10068D1  +
lea ecx [ebp+var_14] +
call sub_1008FD1  +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push ebx  +
push esi  +
cmp [ebp+arg_4] eax +
jz loc_100768E  +
cmp [ebp+arg_8] eax +
jz loc_100768E  +
cmp [ebp+arg_C] eax +
jz loc_100768E  +
mov esi [ebp+arg_10] +
cmp esi eax +
jz loc_100768E  +
cmp [ebp+arg_14] eax +
jz loc_100768E  +
mov ebx [ebp+arg_18] +
cmp ebx eax +
jnz loc_1007695  +
mov eax 80070057h +
jmp loc_10076DC  +
push edi  +
xor edi edi +
cmp [ebp+arg_C] eax +
jbe loc_10076DB  +
push esi  +
call sub_1006643  +
test eax eax +
jl loc_10076C4  +
cmp [ebp+arg_0] 0 +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
jz loc_10076BC  +
push [ebp+arg_4]  +
call sub_1006E48  +
jmp loc_10076C4  +
push [ebp+arg_8]  +
call sub_1006F73  +
mov [ebx+edi*4] eax +
test eax eax +
jl loc_10076D0  +
mov eax [ebp+arg_14] +
inc dword ptr [eax]  +
inc edi  +
add esi 0Ch +
cmp edi [ebp+arg_C] +
jb loc_100769D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_10] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
test edi edi +
jz loc_1007716  +
test ebx ebx +
jnz loc_1007738  +
mov esi 80070057h +
jmp loc_100775F  +
push [ebp+lpSubKey]  +
mov ecx edi +
call sub_10065D9  +
push eax  +
call sub_1009E49  +
test eax eax +
jl loc_1007738  +
mov [ebp+var_10] 1 +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push edi  +
call sub_100716A  +
mov esi eax +
test esi esi +
jz loc_100771D  +
cmp esi 1 +
jnz loc_1007750  +
xor esi esi +
test esi esi +
jl loc_100775F  +
cmp [ebp+var_10] 0 +
jnz loc_100775F  +
mov esi 80070002h +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi] 0 +
lea eax [esi+0Ch] +
push 656C7073h  +
mov [esi+4] eax +
call sub_10069DB  +
mov [esi+8] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+10h] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
xor ebx ebx +
mov [ebp-38h] eax +
mov eax [ebp+20h] +
push edi  +
mov edi [ebp+1Ch] +
lea ecx [ebp-20h] +
mov [ebp-34h] eax +
mov [ebp-28h] ebx +
mov [ebp-30h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-24h] ebx +
call sub_100934C  +
lea ecx [ebp-0Ch] +
call sub_1008EBF  +
cmp esi ebx +
jz loc_10077FA  +
cmp [ebp+18h] ebx +
jz loc_10077FA  +
cmp edi ebx +
jz loc_10077FA  +
cmp [ebp-34h] ebx +
jnz loc_1007804  +
mov esi 80070057h +
jmp loc_1007893  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push ebx  +
push dword ptr [ebp+14h]  +
push esi  +
call sub_10066AA  +
mov esi eax +
cmp esi ebx +
jl loc_1007893  +
lea eax [ebp-24h] +
push eax  +
push 80040007h  +
push dword ptr [ebp+18h]  +
call sub_1006DC6  +
mov esi eax +
cmp esi ebx +
jl loc_1007893  +
mov esi [ebp-24h] +
push esi  +
lea eax [ebp-30h] +
push eax  +
push edi  +
push dword ptr [ebp+18h]  +
lea eax [ebp-20h] +
push dword ptr [ebp-8]  +
push eax  +
push dword ptr [ebp-28h]  +
call sub_1007663  +
cmp [ebp-30h] ebx +
jz loc_100786E  +
push 1  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-2Ch]  +
call sub_100688C  +
cmp eax ebx +
jge loc_1007889  +
push esi  +
cmp [ebp-28h] ebx +
jz loc_100787F  +
push 80004005h  +
jmp loc_1007881  +
push 1  +
push dword ptr [ebp+18h]  +
call sub_100666D  +
mov eax [ebp-34h] +
mov [eax] esi +
mov [ebp-24h] ebx +
xor esi esi +
push dword ptr [ebp-2Ch]  +
call sub_100275A  +
push dword ptr [ebp-24h]  +
call ds:CoTaskMemFree  +
lea ecx [ebp-0Ch] +
call sub_1008FD1  +
lea ecx [ebp-20h] +
call sub_1009643  +
mov ecx [ebp-4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
call sub_1006A9D  +
push 70706334h  +
mov dword ptr [esi] offset off_1001938 +
call sub_10069DB  +
mov [esi+8] eax +
mov eax [ebp+arg_0] +
xor edi edi +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
mov dword ptr [esi+0Ch] 80004005h +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
mov [esi+1Ch] edi +
js loc_10079AF  +
push ebx  +
push 14h  +
call ??2@YAPAXI@Z  +
mov ebx eax +
pop ecx  +
cmp ebx edi +
jz loc_100793D  +
mov ecx [ebp+arg_0] +
push 9  +
push edi  +
call sub_10065D9  +
push eax  +
mov ecx ebx +
call sub_1009E06  +
jmp loc_100793F  +
xor eax eax +
mov [esi+14h] eax +
mov ebx 8007000Eh +
cmp eax edi +
jz loc_1007954  +
mov ecx eax +
call sub_1009379  +
jmp loc_1007956  +
mov eax ebx +
cmp eax edi +
jl loc_10079AE  +
push 14h  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax edi +
jz loc_100796F  +
mov ecx eax +
call sub_1008928  +
jmp loc_1007971  +
xor eax eax +
mov [esi+18h] eax +
cmp eax edi +
jz loc_10079AC  +
push 8  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax edi +
jz loc_1007991  +
mov ecx [esi+18h] +
add ecx 4 +
mov [eax] ecx +
mov [eax+4] edi +
jmp loc_1007993  +
xor eax eax +
mov [esi+1Ch] eax +
cmp eax edi +
jz loc_10079AC  +
mov eax [eax] +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
jmp loc_10079AE  +
mov eax ebx +
pop ebx  +
mov [esi+0Ch] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1007372  +
test byte ptr [ebp+8] 1 +
jz loc_10079D9  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
test ebx ebx +
jz loc_1007A28  +
xor edi edi +
test ebx ebx +
jbe loc_1007A1D  +
mov ecx [esi+1Ch] +
mov eax [ecx] +
test eax eax +
jz loc_1007A1D  +
xor edx edx +
cmp [ecx+4] eax +
setz dl  +
mov eax edx +
test eax eax +
jnz loc_1007A1D  +
call sub_100847B  +
inc edi  +
cmp edi ebx +
jb loc_10079FC  +
xor eax eax +
cmp edi ebx +
setnz al  +
mov edi eax +
jmp loc_1007A44  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
call sub_10074A9  +
mov edi eax +
test edi edi +
jl loc_1007A44  +
mov ecx [esi+1Ch] +
call sub_1006971  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
call sub_100777F  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov esi ecx +
mov [ebp+var_20] ebx +
call sub_1006A9D  +
push 70706335h  +
mov dword ptr [esi] offset off_1001918 +
call sub_10069DB  +
mov [esi+8] eax +
lea ecx [ebp+var_14] +
mov dword ptr [esi+0Ch] 80004005h +
mov [esi+10h] ebx +
mov [esi+14h] ebx +
mov [ebp+var_20] ebx +
mov [ebp+ppObject] ebx +
call sub_1008EBF  +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
mov eax edi +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
js loc_1007C1C  +
mov ecx offset aLdap +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_18] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1007AE8  +
sub eax [ebp+var_18] +
sar eax 1 +
lea eax [edi+eax*2+6] +
push eax  +
push offset aPushedprinterc  +
mov edi offset aCn +
push edi  +
push ecx  +
lea eax [ebp+var_14] +
push offset aSSSS  +
push eax  +
call sub_1009331  +
add esp 18h +
cmp eax ebx +
jl loc_1007C1C  +
lea eax [ebp+ppObject] +
push eax  +
push offset stru_1001EB4  +
push [ebp+lpszPathName]  +
call ADsGetObject  +
cmp eax ebx +
jl loc_1007C1C  +
mov eax [ebp+ppObject] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push offset stru_1001EC4  +
push eax  +
call dword ptr [ecx]  +
cmp eax ebx +
jl loc_1007C2E  +
push offset aMsprintConnect  +
push offset aObjectcategory  +
lea eax [ebp+var_C] +
push offset aSS_0  +
push eax  +
call sub_1009331  +
add esp 10h +
cmp eax ebx +
jl loc_1007C2E  +
push 38h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_18] eax +
cmp eax ebx +
jz loc_1007BBF  +
lea eax [ebp+var_38] +
push eax  +
call sub_1007A52  +
mov ecx [eax] +
mov [eax+ecx*4+0Ch] edi +
inc dword ptr [eax]  +
mov ecx [eax] +
mov dword ptr [eax+ecx*4+0Ch] offset aUncname_0 +
inc dword ptr [eax]  +
mov ecx [eax] +
mov dword ptr [eax+ecx*4+0Ch] offset ValueName +
inc dword ptr [eax]  +
mov ecx [ebp+var_18] +
push eax  +
push [ebp+var_8]  +
push [ebp+ppObject]  +
call sub_100894A  +
jmp loc_1007BC1  +
xor eax eax +
mov [esi+10h] eax +
cmp eax ebx +
jz loc_1007BD1  +
mov ecx eax +
call sub_1008386  +
jmp loc_1007BD6  +
mov eax 8007000Eh +
cmp eax ebx +
jl loc_1007C2E  +
mov ecx [esi+10h] +
push 1  +
push 5  +
call sub_10085FA  +
test eax eax +
jl loc_1007C15  +
mov ecx [esi+10h] +
push 1  +
push ebx  +
call sub_10085FA  +
test eax eax +
jl loc_1007C15  +
mov ecx [esi+10h] +
push 64h  +
push 7  +
call sub_10085FA  +
test eax eax +
jl loc_1007C15  +
mov ecx [esi+10h] +
call sub_100868B  +
test eax eax +
jge loc_1007C2C  +
mov eax 80004005h +
jmp loc_1007C2E  +
mov ecx eax +
and ecx 0FFFFh +
cmp ecx 2030h +
jnz loc_1007C2E  +
xor eax eax +
lea ecx [ebp+var_C] +
mov [esi+0Ch] eax +
call sub_1008FD1  +
lea ecx [ebp+var_14] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
lea ecx [ebp+var_1C] +
mov [ebp+var_8] edi +
mov [ebp+var_74] ebx +
mov [ebp+ppObject] ebx +
mov [ebp+var_78] ebx +
call sub_1008EBF  +
lea ecx [ebp+var_24] +
call sub_1008EBF  +
lea ecx [ebp+var_14] +
call sub_1008EBF  +
cmp esi ebx +
jz loc_1007CA2  +
cmp edi ebx +
jnz loc_1007CAC  +
mov esi 80070057h +
jmp loc_1007E71  +
mov ecx offset aLdap +
mov eax ecx +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di bx +
jnz loc_1007CB6  +
sub eax edx +
sar eax 1 +
lea eax [esi+eax*2+6] +
push eax  +
push offset aPushedprinterc  +
mov edi offset aCn +
push edi  +
push ecx  +
lea eax [ebp+var_1C] +
push offset aSSSS  +
push eax  +
call sub_1009331  +
mov esi eax +
add esp 18h +
cmp esi ebx +
jl loc_1007E71  +
lea eax [ebp+ppObject] +
push eax  +
push offset stru_1001EB4  +
push [ebp+lpszPathName]  +
call ADsGetObject  +
mov esi eax +
cmp esi ebx +
jl loc_1007E71  +
mov eax [ebp+ppObject] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push offset stru_1001EC4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_1007E71  +
lea eax [ebp+var_14] +
push eax  +
push offset a5c  +
push 5Ch  +
push [ebp+var_8]  +
call sub_1009EDF  +
mov esi eax +
cmp esi ebx +
jl loc_1007E71  +
push [ebp+var_10]  +
mov ebx offset aMsprintConnect +
push offset aUncname_0  +
push ebx  +
push offset aObjectcategory  +
lea eax [ebp+var_24] +
push offset aSSSS_0  +
push eax  +
call sub_1009331  +
mov esi eax +
add esp 18h +
test esi esi +
jl loc_1007E71  +
lea eax [ebp+var_34] +
push eax  +
call sub_1007A52  +
mov ecx [eax] +
mov [eax+ecx*4+0Ch] edi +
inc dword ptr [eax]  +
push eax  +
push [ebp+var_20]  +
lea ecx [ebp+var_6C] +
push [ebp+ppObject]  +
call sub_100894A  +
lea ecx [ebp+var_6C] +
call sub_1008386  +
mov esi eax +
test esi esi +
jl loc_1007DD0  +
push 1  +
push 5  +
lea ecx [ebp+var_6C] +
call sub_10085FA  +
push 1  +
push 0  +
lea ecx [ebp+var_6C] +
call sub_10085FA  +
push 1F4h  +
push 7  +
lea ecx [ebp+var_6C] +
call sub_10085FA  +
lea ecx [ebp+var_6C] +
call sub_100868B  +
mov esi eax +
lea ecx [ebp+var_6C] +
call sub_10087DC  +
jmp loc_1007E56  +
lea ecx [ebp+var_6C] +
call sub_10083EA  +
test eax eax +
jnz loc_1007E5A  +
lea ecx [ebp+var_2C] +
call sub_1008EBF  +
lea eax [ebp+var_2C] +
push eax  +
push edi  +
lea ecx [ebp+var_6C] +
call sub_1008889  +
mov esi eax +
test esi esi +
jl loc_1007E46  +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
push [ebp+var_28]  +
lea eax [ebp+var_C] +
push edi  +
push offset aSS  +
push eax  +
call sub_1009331  +
mov esi eax +
add esp 10h +
test esi esi +
jl loc_1007E3E  +
push [ebp+var_8]  +
mov eax [ebp+var_74] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov esi eax +
test esi esi +
jl loc_1007E3E  +
mov [ebp+var_78] 1 +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
lea ecx [ebp+var_2C] +
call sub_1008FD1  +
lea ecx [ebp+var_6C] +
call sub_10083A8  +
test esi esi +
jge loc_1007DDA  +
lea ecx [ebp+var_6C] +
call sub_10088BF  +
test esi esi +
jl loc_1007E71  +
cmp [ebp+var_78] 0 +
jnz loc_1007E71  +
mov esi 80070002h +
push [ebp+ppObject]  +
call sub_100275A  +
push [ebp+var_74]  +
call sub_100275A  +
lea ecx [ebp+var_14] +
call sub_1008FD1  +
lea ecx [ebp+var_24] +
call sub_1008FD1  +
lea ecx [ebp+var_1C] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov ecx esi +
call sub_1008CB2  +
push 70706332h  +
mov dword ptr [edi] offset off_10018D4 +
mov dword ptr [esi] offset off_10018CC +
call sub_10069DB  +
mov [edi+10h] eax +
xor eax eax +
lea ecx [ebp+var_20] +
mov dword ptr [edi+14h] 80004005h +
mov [edi+18h] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
call sub_100934C  +
lea ecx [ebp+var_C] +
call sub_1008EBF  +
mov esi ebx +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
js loc_1007FBA  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push 1  +
push [ebp+arg_4]  +
push ebx  +
call sub_10066AA  +
mov esi eax +
test esi esi +
jl loc_1007FBA  +
cmp [ebp+var_28] 0 +
jz loc_1007F89  +
lea ecx [ebp+var_20] +
call sub_10065D9  +
test eax eax +
jz loc_1007F74  +
push 20h  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1007FA1  +
lea ecx [ebp+var_20] +
push ecx  +
mov ecx eax +
call sub_10078CC  +
jmp loc_1007FA3  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1007FA1  +
mov ecx eax +
call sub_1006B3B  +
jmp loc_1007FA3  +
push 18h  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1007FA1  +
push [ebp+var_8]  +
mov ecx eax +
call sub_1007A6B  +
jmp loc_1007FA3  +
xor eax eax +
mov ecx eax +
mov [edi+18h] eax +
test ecx ecx +
jz loc_1007FB5  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov esi eax +
jmp loc_1007FBA  +
mov esi 8007000Eh +
push [ebp+var_24]  +
call sub_100275A  +
lea ecx [ebp+var_C] +
mov [edi+14h] esi +
call sub_1008FD1  +
lea ecx [ebp+var_20] +
call sub_1009643  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push ebx  +
push esi  +
cmp [ebp+arg_4] eax +
jz loc_1008018  +
cmp [ebp+arg_8] eax +
jz loc_1008018  +
cmp [ebp+arg_C] eax +
jz loc_1008018  +
mov esi [ebp+arg_10] +
cmp esi eax +
jz loc_1008018  +
cmp [ebp+arg_14] eax +
jz loc_1008018  +
mov ebx [ebp+arg_18] +
cmp ebx eax +
jnz loc_100801F  +
mov eax 80070057h +
jmp loc_1008066  +
push edi  +
xor edi edi +
cmp [ebp+arg_C] eax +
jbe loc_1008065  +
push esi  +
call sub_1006643  +
test eax eax +
jl loc_100804E  +
cmp [ebp+arg_0] 0 +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
jz loc_1008046  +
push [ebp+arg_4]  +
call sub_10076E7  +
jmp loc_100804E  +
push [ebp+arg_8]  +
call sub_1007C59  +
mov [ebx+edi*4] eax +
test eax eax +
jl loc_100805A  +
mov eax [ebp+arg_14] +
inc dword ptr [eax]  +
inc edi  +
add esi 0Ch +
cmp edi [ebp+arg_C] +
jb loc_1008027  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+10h] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
xor ebx ebx +
mov [ebp-38h] eax +
mov eax [ebp+20h] +
push edi  +
mov edi [ebp+1Ch] +
lea ecx [ebp-20h] +
mov [ebp-34h] eax +
mov [ebp-28h] ebx +
mov [ebp-30h] ebx +
mov [ebp-2Ch] ebx +
mov [ebp-24h] ebx +
call sub_100934C  +
lea ecx [ebp-0Ch] +
call sub_1008EBF  +
cmp esi ebx +
jz loc_10080C8  +
cmp [ebp+18h] ebx +
jz loc_10080C8  +
cmp edi ebx +
jz loc_10080C8  +
cmp [ebp-34h] ebx +
jnz loc_10080D2  +
mov esi 80070057h +
jmp loc_1008161  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push ebx  +
push dword ptr [ebp+14h]  +
push esi  +
call sub_10066AA  +
mov esi eax +
cmp esi ebx +
jl loc_1008161  +
lea eax [ebp-24h] +
push eax  +
push 80040007h  +
push dword ptr [ebp+18h]  +
call sub_1006DC6  +
mov esi eax +
cmp esi ebx +
jl loc_1008161  +
mov esi [ebp-24h] +
push esi  +
lea eax [ebp-30h] +
push eax  +
push edi  +
push dword ptr [ebp+18h]  +
lea eax [ebp-20h] +
push dword ptr [ebp-8]  +
push eax  +
push dword ptr [ebp-28h]  +
call sub_1007FED  +
cmp [ebp-30h] ebx +
jz loc_100813C  +
push 1  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-2Ch]  +
call sub_100688C  +
cmp eax ebx +
jge loc_1008157  +
push esi  +
cmp [ebp-28h] ebx +
jz loc_100814D  +
push 80004005h  +
jmp loc_100814F  +
push 1  +
push dword ptr [ebp+18h]  +
call sub_100666D  +
mov eax [ebp-34h] +
mov [eax] esi +
mov [ebp-24h] ebx +
xor esi esi +
push dword ptr [ebp-2Ch]  +
call sub_100275A  +
push dword ptr [ebp-24h]  +
call ds:CoTaskMemFree  +
lea ecx [ebp-0Ch] +
call sub_1008FD1  +
lea ecx [ebp-20h] +
call sub_1009643  +
mov ecx [ebp-4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push esi  +
push edi  +
jz loc_10081AE  +
mov edi [ebp+14h] +
test edi edi +
jnz loc_10081B5  +
mov esi 80070057h +
jmp loc_10081F7  +
push 1Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_10081D0  +
push dword ptr [ebp+10h]  +
mov ecx eax +
push dword ptr [ebp+0Ch]  +
call sub_1007EB1  +
jmp loc_10081D2  +
xor eax eax +
test eax eax +
jz loc_10081DB  +
mov ecx [eax+14h] +
jmp loc_10081E0  +
mov ecx 8007000Eh +
mov esi ecx +
test esi esi +
jl loc_10081EA  +
mov [edi] eax +
xor eax eax +
test eax eax +
jz loc_10081F7  +
lea ecx [eax+4] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
and [ebp+var_8] 0 +
xor eax eax +
push esi  +
mov [ebp+var_4] eax +
test ecx ecx +
jz loc_1008226  +
cmp [ebp+arg_4] eax +
jz loc_1008226  +
cmp [ebp+arg_8] eax +
jnz loc_100822D  +
mov esi 80004003h +
jmp loc_1008275  +
mov eax [ecx] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ecx  +
call dword ptr [eax+38h]  +
mov esi eax +
test esi esi +
jl loc_1008272  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset stru_1001EB4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_1008272  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100826C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
mov esi eax +
mov eax [ebp+var_4] +
test esi esi +
jge loc_1008287  +
jmp loc_1008275  +
mov eax [ebp+var_4] +
mov ecx esi +
and ecx 0FFFFh +
cmp ecx 1392h +
jnz loc_1008287  +
xor esi esi +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_100829A  +
test eax eax +
jz loc_100829A  +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
push [ebp+var_8]  +
call sub_100275A  +
push [ebp+var_4]  +
call sub_100275A  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jz loc_10082CE  +
cmp [ebp+arg_4] 0 +
jnz loc_10082D5  +
mov esi 80004003h +
jmp loc_1008313  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
push 8  +
pop eax  +
push [ebp+arg_8]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call ds:SysAllocString  +
sub esp 10h +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebx] +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call dword ptr [eax+40h]  +
mov esi eax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
test ebx ebx +
jz loc_1008339  +
cmp [ebp+arg_4] 0 +
jnz loc_1008340  +
mov esi 80004003h +
jmp loc_1008378  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
push 3  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+arg_8] +
sub esp 10h +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebx] +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call dword ptr [eax+40h]  +
mov esi eax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100A027  +
mov dword ptr [esi] offset off_10019A4 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
mov eax ecx +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
js loc_10083E2  +
mov eax [esi+8] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+1Ch]  +
test eax eax +
jl loc_10083E2  +
cmp eax 5012h +
jnz loc_10083E2  +
mov dword ptr [esi+18h] 1 +
pop esi  +
leave   +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
and [ebp+var_14] 0 +
xor eax eax +
push esi  +
push edi  +
lea edi [ebp+var_10] +
stos   +
stos   +
stos   +
stos   +
mov esi ecx +
mov ecx [esi+0Ch] +
mov eax ecx +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
js loc_1008470  +
mov eax [esi+8] +
mov edx [eax] +
lea edi [ebp+var_14] +
push edi  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call dword ptr [edx+28h]  +
test eax eax +
jl loc_1008470  +
cmp [ebp+var_10] 0 +
jle loc_1008463  +
cmp [ebp+var_10] 4 +
jle loc_1008455  +
cmp [ebp+var_10] 7 +
jnz loc_1008463  +
mov eax [ebp+var_C] +
mov eax [eax+8] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_1008463  +
mov eax [ebp+var_C] +
push dword ptr [eax+8]  +
mov ecx [ebp+arg_8] +
call sub_1009196  +
mov esi [esi+8] +
mov eax [esi] +
lea ecx [ebp+var_14] +
push ecx  +
push esi  +
call dword ptr [eax+2Ch]  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+4] +
test ecx ecx +
jz loc_100848F  +
call sub_100A09B  +
mov [esi+4] eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
lea esi [ecx+4] +
push edi  +
mov ecx esi +
call sub_100A09B  +
mov edi eax +
cmp edi esi +
jz loc_10084C7  +
push ebx  +
mov ecx edi +
mov ebx edi +
call sub_100A09B  +
mov edi eax +
test ebx ebx +
jz loc_10084C2  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax]  +
cmp edi esi +
jnz loc_10084AB  +
pop ebx  +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_100A0A4  +
***
mov edi edi +
push esi  +
lea esi [ecx+4] +
mov ecx esi +
call sub_100A09B  +
xor ecx ecx +
cmp esi eax +
setz cl  +
pop esi  +
mov eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_100850A  +
mov ecx [ebp+arg_0] +
call sub_100A04E  +
jmp loc_100850F  +
mov eax 80070057h +
test eax eax +
jl loc_1008525  +
push [ebp+arg_0]  +
lea ecx [esi+4] +
call sub_10065D9  +
mov ecx eax +
call sub_100A0BE  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
test edi edi +
jz loc_100854E  +
cmp [ebp+arg_4] 0 +
jz loc_100854E  +
mov ebx [ebp+arg_8] +
cmp dword ptr [ebx] 0 +
jnz loc_1008555  +
mov eax 80070057h +
jmp loc_10085CC  +
push [ebp+arg_4]  +
lea ecx [esi+1Ch] +
call sub_1009196  +
test eax eax +
jl loc_10085CC  +
mov eax [edi] +
lea ecx [esi+8] +
push ecx  +
push offset dword_1001ED4  +
push edi  +
call dword ptr [eax]  +
test eax eax +
jl loc_10085CC  +
mov edi [ebx] +
xor ecx ecx +
push 8  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
mov [esi+14h] edi +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_10085B9  +
push offset sub_1008EBF  +
push edi  +
lea ebx [eax+4] +
push 8  +
push ebx  +
mov [eax] edi +
call sub_10024E9  +
mov eax ebx +
jmp loc_10085BB  +
xor eax eax +
mov [esi+10h] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
xor edi edi +
jmp loc_10085EA  +
cmp edi [esi+14h] +
jnb loc_10085EE  +
mov eax [ebp+arg_8] +
mov eax [eax+4] +
push dword ptr [eax+edi*4]  +
mov eax [esi+10h] +
lea ecx [eax+edi*8] +
call sub_1009196  +
inc edi  +
test eax eax +
jge loc_10085D0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 30h  +
mov edi ecx +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1008618  +
mov ecx eax +
call sub_100838F  +
jmp loc_100861A  +
xor eax eax +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_100864C  +
mov ecx [ebp+arg_0] +
mov [eax+10h] ecx +
mov ecx [ebp+arg_4] +
mov [eax+20h] ecx +
push eax  +
lea ecx [edi+24h] +
mov dword ptr [eax+18h] 7 +
call sub_10084F2  +
xor eax eax +
test eax eax +
jz loc_1008658  +
mov edx [eax] +
push 1  +
mov ecx eax +
call dword ptr [edx]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100A0A4  +
test byte ptr [ebp+8] 1 +
jz loc_100867F  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
lea ecx [esi+24h] +
mov [ebp+var_10] esi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
call sub_10084D5  +
test eax eax +
jnz loc_10087C5  +
lea eax [esi+28h] +
mov esi eax +
neg esi  +
sbb esi esi +
mov ebx 7FFFBFFBh +
mov [ebp+var_14] edi +
and esi ebx +
mov edi 80004005h +
add esi edi +
mov [ebp+var_18] eax +
js loc_10087C7  +
test eax eax +
jz loc_10086E4  +
mov ecx eax +
call sub_100A09B  +
mov [ebp+var_14] eax +
mov eax [ebp+var_18] +
test eax eax +
jz loc_1008706  +
xor ecx ecx +
cmp [ebp+var_14] eax +
setz cl  +
mov eax ecx +
test eax eax +
jnz loc_1008706  +
inc [ebp+var_4]  +
lea ecx [ebp+var_18] +
call sub_100847B  +
jmp loc_10086E4  +
mov eax [ebp+var_4] +
xor ecx ecx +
push 28h  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
mov esi eax +
mov [ebp+var_8] esi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
pop ecx  +
js loc_10087C7  +
mov eax [ebp+var_10] +
add eax 28h +
mov ecx eax +
xor eax eax +
mov esi ecx +
neg esi  +
sbb esi esi +
and esi ebx +
add esi edi +
mov [ebp+var_18] ecx +
mov [ebp+var_14] eax +
js loc_10087C7  +
mov [ebp+var_C] eax +
cmp ecx eax +
jz loc_1008764  +
call sub_100A09B  +
mov [ebp+var_14] eax +
mov ebx [ebp+var_8] +
add ebx 20h +
cmp [ebp+var_18] 0 +
jz loc_10087AF  +
xor ecx ecx +
cmp eax [ebp+var_18] +
setz cl  +
test ecx ecx +
jnz loc_10087AF  +
test eax eax +
jz loc_100879C  +
mov ecx [ebp+var_C] +
cmp ecx [ebp+var_4] +
jnb loc_100879C  +
mov ecx [eax+10h] +
mov [ebx-20h] ecx +
push 6  +
lea esi [eax+18h] +
lea edi [ebx-18h] +
pop ecx  +
movs   +
and dword ptr [ebx] 0 +
lea ecx [ebp+var_18] +
call sub_100847B  +
inc [ebp+var_C]  +
mov eax [ebp+var_14] +
add ebx 28h +
jmp loc_100876A  +
push [ebp+var_4]  +
mov eax [ebp+var_10] +
mov eax [eax+8] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
jmp loc_10087C7  +
xor esi esi +
push [ebp+var_8]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
neg eax  +
sbb eax eax +
and eax 80004005h +
jl loc_100887B  +
mov eax [esi+14h] +
push ebx  +
push edi  +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
mov ebx eax +
mov edi ebx +
neg edi  +
sbb edi edi +
pop ecx  +
and edi 7FF8FFF2h +
add edi 8007000Eh +
push 0  +
pop eax  +
js loc_1008853  +
cmp eax [esi+14h] +
jnb loc_100883C  +
mov ecx [esi+10h] +
mov ecx [ecx+eax*8+4] +
mov [ebx+eax*4] ecx +
inc eax  +
jmp loc_100882A  +
mov ecx [esi+20h] +
mov eax [esi+8] +
mov edi [eax] +
lea edx [esi+0Ch] +
push edx  +
push dword ptr [esi+14h]  +
push ebx  +
push ecx  +
push eax  +
call dword ptr [edi+10h]  +
mov edi eax +
push ebx  +
call ??3@YAXPAX@Z  +
pop ecx  +
test edi edi +
pop edi  +
pop ebx  +
jl loc_100887B  +
mov eax [esi+8] +
push dword ptr [esi+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_100887B  +
cmp eax 5012h +
jz loc_100887B  +
xor eax eax +
jmp loc_100887E  +
xor eax eax +
inc eax  +
mov [esi+18h] eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 0  +
push [ebp+arg_0]  +
call sub_10083F3  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 1  +
push [ebp+arg_0]  +
call sub_10083F3  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
test eax eax +
jz loc_10088DF  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_10088DF  +
cmp dword ptr [esi+18h] 0 +
jnz loc_10088DF  +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+14h]  +
mov eax [esi+8] +
test eax eax +
jz loc_10088F4  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_10088F4  +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+30h]  +
push dword ptr [esi+8]  +
call sub_100275A  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_100890A  +
push 3  +
call sub_10026ED  +
and dword ptr [esi+0Ch] 0 +
and dword ptr [esi+8] 0 +
lea ecx [esi+24h] +
call sub_1008496  +
lea ecx [esi+1Ch] +
pop esi  +
jmp sub_1008FD1  +
***
mov edi edi +
push esi  +
push 746C7374h  +
mov esi ecx +
call sub_10069DB  +
lea ecx [esi+4] +
mov [esi] eax +
call sub_100A027  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 69616466h  +
mov esi ecx +
call sub_10069DB  +
mov [esi] eax +
xor eax eax +
lea ecx [esi+1Ch] +
mov dword ptr [esi+4] 80004005h +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov [esi+18h] eax +
call sub_1008EBF  +
lea ecx [esi+24h] +
call sub_1008928  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100852F  +
mov [esi+4] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 80070057h +
test ecx ecx +
jz loc_1008A41  +
xor eax eax +
cmp word ptr [ecx] 5Ch +
mov [ebp+var_4] 80070709h +
jnz loc_1008A41  +
cmp word ptr [ecx+2] 5Ch +
jnz loc_1008A41  +
push ebx  +
push esi  +
lea esi [ecx+4] +
push edi  +
mov edx esi +
movzx ecx word ptr [edx] +
push 2  +
pop edi  +
mov ebx edi +
test cx cx +
jz loc_1008A3E  +
cmp cx 2Ch +
jz loc_1008A0D  +
cmp cx 21h +
jz loc_1008A0D  +
cmp cx 5Ch +
jnz loc_1008A02  +
inc ebx  +
cmp ebx 3 +
jnz loc_1008A02  +
mov eax edx +
inc edi  +
inc edx  +
inc edx  +
movzx ecx word ptr [edx] +
test cx cx +
jnz loc_10089E8  +
xor ecx ecx +
cmp [edx] cx +
jnz loc_1008A3E  +
cmp ebx edi +
jz loc_1008A3E  +
cmp ebx 3 +
jb loc_1008A3E  +
add edi 0FFFFFFFBh +
cmp edi 207h +
ja loc_1008A3E  +
cmp esi eax +
jz loc_1008A3E  +
cmp eax ecx +
jz loc_1008A3E  +
cmp [eax] cx +
jz loc_1008A3E  +
cmp [eax+2] cx +
jz loc_1008A3E  +
mov [ebp+var_4] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+54h] +
mov dword ptr [esi] offset off_1001E24 +
call sub_1008FD1  +
lea ecx [esi+44h] +
call sub_1008FD1  +
lea ecx [esi+3Ch] +
call sub_1008FD1  +
lea ecx [esi+34h] +
call sub_1008FD1  +
lea ecx [esi+2Ch] +
call sub_1008FD1  +
lea ecx [esi+24h] +
call sub_1008FD1  +
lea ecx [esi+1Ch] +
call sub_1008FD1  +
lea ecx [esi+14h] +
call sub_1008FD1  +
mov ecx esi +
pop esi  +
jmp sub_100A0A4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+arg_0] 0 +
jz loc_1008AC5  +
cmp [ebp+arg_4] 0 +
jz loc_1008AC5  +
cmp [ebp+arg_8] 0 +
jnz loc_1008ACC  +
mov eax 80070057h +
jmp loc_1008AF0  +
mov ecx [ebp+arg_8] +
push 0  +
call sub_1009196  +
test eax eax +
jl loc_1008AF0  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_1  +
push [ebp+arg_8]  +
call sub_1009331  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_100A027  +
push 74636F6Eh  +
mov dword ptr [esi] offset off_1001E24 +
call sub_10069DB  +
lea edi [esi+14h] +
mov ecx edi +
mov [esi+10h] eax +
call sub_1008EBF  +
lea ecx [esi+1Ch] +
call sub_1008EBF  +
lea ecx [esi+24h] +
call sub_1008EBF  +
lea ebx [esi+2Ch] +
mov ecx ebx +
call sub_1008EBF  +
lea ecx [esi+34h] +
call sub_1008EBF  +
lea ecx [esi+3Ch] +
call sub_1008EBF  +
lea ecx [esi+44h] +
call sub_1008EBF  +
lea ecx [esi+54h] +
mov dword ptr [esi+50h] 80004005h +
call sub_1008EBF  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1008B76  +
cmp word ptr [eax] 0 +
jz loc_1008B76  +
push eax  +
jmp loc_1008B7B  +
push offset aLocalGroupPoli  +
mov ecx edi +
call sub_1009196  +
test eax eax +
jl loc_1008C0F  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1008BA1  +
cmp word ptr [eax] 0 +
jz loc_1008BA1  +
push eax  +
mov ecx ebx +
call sub_1009196  +
jmp loc_1008BA7  +
push ebx  +
call sub_100A13E  +
test eax eax +
jl loc_1008C0F  +
push [ebp+arg_4]  +
lea ecx [esi+1Ch] +
call sub_1009196  +
test eax eax +
jl loc_1008C0F  +
push [ebp+arg_8]  +
lea ecx [esi+24h] +
call sub_1009196  +
test eax eax +
jl loc_1008C0F  +
push [ebp+arg_10]  +
lea ecx [esi+34h] +
call sub_1009196  +
test eax eax +
jl loc_1008C0F  +
push [ebp+arg_14]  +
lea ecx [esi+3Ch] +
call sub_1009196  +
test eax eax +
jl loc_1008C0F  +
push [ebp+arg_18]  +
lea ecx [esi+44h] +
call sub_1009196  +
test eax eax +
jl loc_1008C0F  +
mov eax [ebp+arg_1C] +
mov ecx [esi+18h] +
lea edx [esi+54h] +
mov [esi+4Ch] eax +
mov eax [esi+38h] +
push edx  +
push eax  +
push ecx  +
mov ecx esi +
call sub_1008AAE  +
mov [esi+50h] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008A4D  +
test byte ptr [ebp+8] 1 +
jz loc_1008C3A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call ds:InterlockedDecrement  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jnz loc_1008C98  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
test ecx ecx +
jz locret_1008CAC  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push 756E6B6Eh  +
mov dword ptr [esi] offset off_1001E34 +
call sub_10069DB  +
mov [esi+4] eax +
push offset Addend  +
mov dword ptr [esi+8] 1 +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008C46  +
test byte ptr [ebp+8] 1 +
jz loc_1008CFF  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 80004003h +
test eax eax +
jz loc_1008D7F  +
mov edx [ebp+arg_C] +
test edx edx +
jz loc_1008D7F  +
and dword ptr [eax] 0 +
xor eax eax +
mov [ebp+var_4] 80004002h +
cmp [ebp+arg_10] eax +
jbe loc_1008D7F  +
push ebx  +
push esi  +
push edi  +
mov edi [edx+eax*8] +
mov esi [ebp+arg_4] +
push 4  +
pop ecx  +
xor ebx ebx +
cmps   +
jz loc_1008D5A  +
mov esi [ebp+arg_4] +
push 4  +
pop ecx  +
mov edi offset dword_1001E74 +
xor ebx ebx +
cmps   +
jnz loc_1008D61  +
cmp dword ptr [edx+eax*8+4] 0 +
jnz loc_1008D69  +
inc eax  +
cmp eax [ebp+arg_10] +
jb loc_1008D3A  +
jmp loc_1008D7C  +
mov eax [edx+eax*8+4] +
mov ecx [ebp+arg_8] +
and [ebp+var_4] 0 +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_4] +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
and [ebp+var_10] 0 +
mov [ebp+var_1C] ecx +
mov ecx [ebp+arg_8] +
mov [ebp+var_24] ecx +
mov ecx [ebp+arg_C] +
mov [ebp+var_20] ecx +
push eax  +
lea ecx [ebp+var_C] +
call sub_10092AF  +
lea ecx [ebp+var_C] +
call sub_1008EE0  +
mov [ebp+var_14] eax +
test eax eax +
jl loc_1008EA1  +
mov eax [ebp+var_8] +
cmp word ptr [eax] 5Ch +
push ebx  +
push esi  +
mov esi ds:wcschr +
push edi  +
mov [ebp+var_18] eax +
jnz loc_1008E1B  +
cmp word ptr [eax+2] 5Ch +
jnz loc_1008E1B  +
lea ebx [eax+4] +
push 5Ch  +
push ebx  +
call esi  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_1008E07  +
xor eax eax +
mov [edi] ax +
inc edi  +
inc edi  +
jmp loc_1008E21  +
push 2Ch  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1008E21  +
mov [ebp+var_14] 80070057h +
jmp loc_1008E21  +
and [ebp+var_18] 0 +
mov edi eax +
xor ebx ebx +
cmp [ebp+var_14] ebx +
jl loc_1008E9E  +
cmp edi ebx +
jz loc_1008E60  +
cmp [edi] bx +
jz loc_1008E60  +
push 2Ch  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_1008E60  +
cmp eax edi +
jnz loc_1008E54  +
lea eax [edi+2] +
push 2Ch  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_1008E60  +
mov ecx [ebp+var_10] +
xor eax eax +
add [ebp+var_10] 2 +
mov [ecx] ax +
mov ecx [ebp+var_1C] +
cmp ecx ebx +
jz loc_1008E72  +
push [ebp+var_18]  +
call sub_1009196  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] ebx +
jl loc_1008E9E  +
mov ecx [ebp+var_24] +
cmp ecx ebx +
jz loc_1008E87  +
push edi  +
call sub_1009196  +
mov [ebp+var_14] eax +
cmp [ebp+var_14] ebx +
jl loc_1008E9E  +
mov ecx [ebp+var_20] +
cmp ecx ebx +
jz loc_1008E9E  +
push [ebp+var_10]  +
call sub_1009196  +
mov [ebp+var_14] eax +
pop edi  +
pop esi  +
pop ebx  +
lea ecx [ebp+var_C] +
call sub_1008FD1  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_14] +
xor ecx ebp +
call sub_1005ACE  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
push 73747267h  +
mov esi ecx +
call sub_10069DB  +
mov [esi] eax +
mov dword ptr [esi+4] offset unk_100B714 +
mov eax esi +
pop esi  +
retn   +
***
cmp dword ptr [ecx+4] offset unk_100B716 +
jz loc_1008EEC  +
xor eax eax +
retn   +
mov eax 8007000Eh +
retn   +
***
mov eax [ecx+4] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1008EFD  +
sub eax ecx +
sar eax 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] offset unk_100B714 +
jz loc_1008F31  +
cmp [ebp+arg_0] offset unk_100B716 +
jz loc_1008F31  +
push [ebp+arg_0]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_1008F64  +
test [ebp+arg_8] 1000h +
jz loc_1008F64  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_1008FAC  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_1008F94  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_1008FAC  +
test esi esi +
jbe loc_1008FC5  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_1008FC5  +
test [ebp+arg_8] 800h +
jz loc_1008FC5  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_14] +
push esi  +
xor esi esi +
and edx 100h +
push edi  +
mov edi [ebp+arg_4] +
mov eax 80070057h +
jz loc_1009013  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1009007  +
test edi edi +
jnz loc_100900F  +
cmp edi 7FFFFFFFh +
jbe loc_1009026  +
mov esi eax +
jmp loc_1009026  +
xor esi esi +
test edi edi +
jz loc_1009021  +
cmp edi 7FFFFFFFh +
jbe loc_1009023  +
mov esi eax +
mov ecx [ebp+arg_0] +
test esi esi +
jl loc_10090A3  +
push ebx  +
xor esi esi +
mov ebx edi +
mov [ebp+arg_4] ecx +
mov [ebp+var_4] ebx +
cmp edx esi +
jz loc_1009045  +
cmp [ebp+arg_8] esi +
jnz loc_1009045  +
mov [ebp+arg_8] offset word_10014F4 +
test [ebp+arg_14] 0FFFFE000h +
jz loc_10090AB  +
mov esi eax +
test edi edi +
jz loc_1009059  +
xor eax eax +
mov [ecx] ax +
test [ebp+arg_14] 1C00h +
jz loc_1009081  +
test edi edi +
jz loc_1009081  +
push [ebp+arg_14]  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [edi+edi] +
mov edi [ebp+arg_0] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1008F3A  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_100908D  +
cmp esi 8007007Ah +
jnz loc_10090A2  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1009099  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_10090A2  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
test edi edi +
jnz loc_10090C4  +
mov edx [ebp+arg_8] +
cmp [edx] di +
jz loc_100908D  +
mov esi ecx +
neg esi  +
sbb esi esi +
and esi 23h +
add esi eax +
jmp loc_1009059  +
and [ebp+arg_4] 0 +
push 7FFFFFFEh  +
lea eax [ebp+arg_4] +
push eax  +
mov eax [ebp+arg_8] +
mov edx edi +
call sub_100250E  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov eax [ebp+arg_4] +
mov ebx edi +
sub ebx eax +
lea ecx [ecx+eax*2] +
mov [ebp+arg_4] ecx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_1009059  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_100908D  +
cmp ebx 1 +
jbe loc_100908D  +
lea ecx [ebx+ebx] +
cmp ecx 2 +
jbe loc_100908D  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_4] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_100908D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100914C  +
cmp ecx 7FFFFFFFh +
jbe loc_1009151  +
mov eax 80070057h +
test eax eax +
jl loc_100918D  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100917D  +
cmp eax esi +
ja loc_100917D  +
jnz loc_1009188  +
jmp loc_1009182  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
mov [ebp+var_4] edi +
test eax eax +
jz loc_1009226  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10091AF  +
push ebx  +
sub eax edx +
sar eax 1 +
push offset unk_100B718  +
lea ebx [eax+1] +
xor ecx ecx +
push 2  +
pop edx  +
mov eax ebx +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
mov edi eax +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
pop ecx  +
pop ecx  +
js loc_1009218  +
push [ebp+arg_0]  +
push ebx  +
push edi  +
call sub_10027BB  +
mov esi eax +
test esi esi +
jl loc_1009218  +
mov ebx [ebp+var_4] +
push dword ptr [ebx+4]  +
mov ecx ebx +
call sub_1008F11  +
mov [ebx+4] edi +
xor edi edi +
jmp loc_100921B  +
mov ebx [ebp+var_4] +
push edi  +
mov ecx ebx +
call sub_1008F11  +
pop ebx  +
jmp loc_1009235  +
push dword ptr [edi+4]  +
call sub_1008F11  +
mov dword ptr [edi+4] offset unk_100B714 +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov eax 100h +
push edi  +
mov ebx eax +
mov esi offset unk_100B718 +
jmp loc_1009280  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push ebx  +
push edi  +
call sub_1009136  +
test eax eax +
jge loc_10092A1  +
test edi edi +
jz loc_1009274  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
add ebx ebx +
cmp ebx 19000h +
jg loc_100929F  +
mov eax ebx +
push esi  +
push 2  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_1009258  +
jmp loc_10092A1  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 73747267h  +
mov esi ecx +
call sub_10069DB  +
push [ebp+arg_0]  +
mov ecx esi +
mov [esi] eax +
mov dword ptr [esi+4] offset unk_100B714 +
call sub_1009196  +
test eax eax +
jge loc_10092DF  +
mov dword ptr [esi+4] offset unk_100B716 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
push [ebp+arg_0]  +
call sub_1009242  +
mov ebx eax +
mov esi ebx +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_1009323  +
push dword ptr [edi+4]  +
mov ecx edi +
call sub_1008F11  +
mov [edi+4] ebx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_10092EB  +
pop ebp  +
retn   +
***
mov edi edi +
push esi  +
push 72656720h  +
mov esi ecx +
call sub_10069DB  +
lea ecx [esi+4] +
mov [esi] eax +
call sub_1008EBF  +
and dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 80004005h +
mov eax esi +
pop esi  +
retn   +
***
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1009399  +
push eax  +
call ds:RegCloseKey  +
and dword ptr [esi+0Ch] 0 +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpcbMaxSubKeyLen] +
push edi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push esi  +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
mov ebx eax +
cmp ebx edi +
jnz loc_10093F4  +
inc dword ptr [esi]  +
mov eax [esi] +
push offset unk_100B718  +
xor ecx ecx +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
pop ecx  +
pop ecx  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
cmp eax edi +
jnz loc_10093F4  +
push 0Eh  +
pop ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
cmp edi eax +
jz loc_1009422  +
cmp [ebp+arg_4] eax +
jz loc_1009422  +
mov edx [ebp+arg_8] +
cmp edx eax +
jz loc_1009422  +
cmp edx [ebp+arg_4] +
jbe loc_1009429  +
mov eax 80070057h +
jmp loc_1009457  +
push esi  +
mov esi edx +
cmp edx eax +
jbe loc_1009440  +
lea ecx [edi+edx*2-2] +
cmp [ecx] ax +
jz loc_1009440  +
dec esi  +
dec ecx  +
dec ecx  +
cmp esi eax +
ja loc_1009434  +
cmp esi eax +
pop esi  +
jnz loc_1009457  +
cmp [ebp+arg_4] edx +
jbe loc_1009452  +
xor ecx ecx +
mov [edi+edx*2] cx +
jmp loc_1009457  +
mov eax 8007007Ah +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
xor esi esi +
test ecx ecx +
jz loc_1009478  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_100947F  +
mov eax 80070057h +
jmp loc_10094A8  +
push edi  +
cmp word ptr [ecx] 0 +
jz loc_10094A3  +
mov eax ecx +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_100948B  +
sub eax edx +
sar eax 1 +
inc eax  +
lea ecx [ecx+eax*2] +
add esi eax +
test ecx ecx +
jnz loc_1009480  +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
push edi  +
xor edi edi +
test ecx ecx +
jz loc_10094CA  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_10094D1  +
mov eax 80070057h +
jmp loc_10094F9  +
push esi  +
cmp word ptr [ecx] 0 +
jz loc_10094F4  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10094DD  +
sub eax esi +
sar eax 1 +
lea ecx [ecx+eax*2+2] +
inc edi  +
test ecx ecx +
jnz loc_10094D2  +
mov [ebx] edi +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
lea ecx [esi+4] +
lea edx [esi+0Ch] +
mov [esi] edi +
mov [ecx] edi +
mov [esi+8] edi +
mov [edx] edi +
mov dword ptr [esi+10h] 80004005h +
cmp eax edi +
jz loc_1009532  +
mov ebx [eax+10h] +
jmp loc_1009537  +
mov ebx 80070057h +
cmp ebx edi +
mov [esi+10h] ebx +
jl loc_1009555  +
mov eax [eax+0Ch] +
push edx  +
push ecx  +
push edi  +
push eax  +
mov [esi] eax +
call sub_10093A2  +
push eax  +
call sub_100A008  +
mov [esi+10h] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax [ecx+10h] +
test eax eax +
jge locret_100957C  +
mov ecx eax +
and ecx 0FFFFh +
cmp ecx 103h +
jnz locret_100957C  +
xor eax eax +
retn   +
***
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
mov [ebp+cbName] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
lea ecx [ebp+cbName] +
push ecx  +
push dword ptr [esi+4]  +
mov [esi+8] eax +
push eax  +
push dword ptr [esi]  +
call ds:RegEnumKeyExW  +
push eax  +
call sub_100A008  +
mov [esi+10h] eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
inc dword ptr [esi+8]  +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
lea ecx [ebp+cbName] +
push ecx  +
push dword ptr [esi+4]  +
mov [ebp+cbName] eax +
mov eax [esi+8] +
push eax  +
push dword ptr [esi]  +
call ds:RegEnumKeyExW  +
push eax  +
call sub_100A008  +
mov [esi+10h] eax +
pop esi  +
leave   +
retn   +
***
xor eax eax +
cmp [ecx+10h] eax +
setl al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax edx +
neg eax  +
sbb eax eax +
and eax 7FF8FFA9h +
add eax 80070057h +
js loc_100963A  +
mov eax [ecx+10h] +
test eax eax +
jl loc_100963A  +
mov ecx [ecx+4] +
mov [edx] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1009382  +
lea ecx [esi+4] +
pop esi  +
jmp sub_1008FD1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
and edx 3 +
push 57h  +
mov [ebp+dwDisposition] edi +
pop esi  +
jz loc_10096C0  +
test byte ptr [ebp+arg_4] 4 +
jz loc_100969B  +
mov eax [ecx+8] +
lea esi [ebp+dwDisposition] +
push esi  +
add ecx 0Ch +
push ecx  +
push edi  +
push samDesired[edx*4]  +
push edi  +
push edi  +
push edi  +
push eax  +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
jmp loc_10096BA  +
test byte ptr [ebp+arg_4] 8 +
jz loc_10096C0  +
mov eax [ecx+8] +
add ecx 0Ch +
push ecx  +
push samDesired[edx*4]  +
push edi  +
push eax  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
mov esi eax +
cmp esi edi +
jle loc_10096CC  +
and esi 0FFFFh +
or esi 80070000h +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+Type] +
mov eax [edi] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push 0  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push [ebp+lpValueName]  +
mov [ebp+Type] esi +
push dword ptr [ecx+0Ch]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1009718  +
cmp [ebp+Type] esi +
jz loc_1009713  +
push 57h  +
pop eax  +
mov ecx [ebp+cbData] +
mov [edi] ecx +
pop edi  +
pop esi  +
test eax eax +
jle locret_1009728  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+cbData] +
push esi  +
mov esi [ebp+Type] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push [ebp+lpValueName]  +
mov [ebp+Type] esi +
push dword ptr [ecx+0Ch]  +
call ds:RegQueryValueExW  +
mov edx [ebp+Type] +
test eax eax +
jnz loc_100976A  +
cmp edx esi +
jz loc_100976A  +
push 57h  +
pop eax  +
mov ecx [ebp+arg_10] +
test ecx ecx +
jz loc_1009776  +
mov esi [ebp+cbData] +
mov [ecx] esi +
mov ecx [ebp+arg_14] +
pop esi  +
test ecx ecx +
jz loc_1009780  +
mov [ecx] edx +
test eax eax +
jle loc_100978E  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
push 1FEh  +
mov word ptr [ebp+Data] ax +
xor ebx ebx +
lea eax [ebp-202h] +
push ebx  +
push eax  +
mov [ebp+var_20C] ecx +
mov [ebp+lpValueName] esi +
mov [ebp+var_214] edi +
call memset  +
mov ecx [ebp+var_20C] +
add esp 0Ch +
push ebx  +
lea eax [ebp+var_208] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 200h  +
push 1  +
push esi  +
mov [ebp+var_208] ebx +
call sub_1009731  +
mov esi eax +
cmp esi ebx +
jl loc_1009853  +
mov eax [ebp+var_208] +
mov ecx [ebp+var_20C] +
shr eax 1 +
push eax  +
push 100h  +
lea eax [ebp+Data] +
push eax  +
call sub_1009402  +
mov esi eax +
cmp esi ebx +
jl loc_1009853  +
lea eax [ebp+Data] +
push eax  +
mov ecx edi +
call sub_1009196  +
mov esi eax +
cmp esi ebx +
jge loc_10098F4  +
mov eax esi +
and eax 0FFFFh +
cmp eax 7Ah +
jz loc_100986A  +
cmp eax 0EAh +
jnz loc_10098F4  +
mov edi [ebp+var_208] +
add edi 3 +
and edi 0FFFFFFFEh +
push offset unk_100B718  +
push edi  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
pop ecx  +
pop ecx  +
mov [ebp+var_208] eax +
js loc_10098F4  +
mov ecx [ebp+var_20C] +
push ebx  +
push ebx  +
push eax  +
push edi  +
push 1  +
push [ebp+lpValueName]  +
call sub_1009731  +
mov esi eax +
cmp esi ebx +
jl loc_10098E8  +
mov ecx [ebp+var_20C] +
shr edi 1 +
push edi  +
push edi  +
push [ebp+var_208]  +
call sub_1009402  +
mov esi eax +
cmp esi ebx +
jl loc_10098E8  +
push [ebp+var_208]  +
mov ecx [ebp+var_214] +
call sub_1009196  +
mov esi eax +
push [ebp+var_208]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005ACE  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+cbData]  +
push [ebp+lpData]  +
push [ebp+dwType]  +
push 0  +
push [ebp+lpValueName]  +
push dword ptr [ecx+0Ch]  +
call ds:RegSetValueExW  +
test eax eax +
jle loc_1009936  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+phkResult] +
push eax  +
push 0F003Fh  +
xor edi edi +
push edi  +
push [ebp+lpSubKey]  +
mov [ebp+phkResult] edi +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
mov esi eax +
mov ebx 0FFFFh +
jmp loc_10099C0  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+lpName] +
push eax  +
push [ebp+lpSubKey]  +
mov [ebp+lpName] edi +
push [ebp+phkResult]  +
mov [ebp+cbMaxSubKeyLen] edi +
call sub_10093A2  +
mov esi eax +
cmp esi edi +
jnz loc_10099C4  +
push edi  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
push [ebp+lpName]  +
push edi  +
push [ebp+phkResult]  +
call ds:RegEnumKeyExW  +
mov esi eax +
cmp esi edi +
jnz loc_10099B7  +
push [ebp+lpName]  +
push [ebp+phkResult]  +
call sub_100993F  +
mov esi eax +
and esi ebx +
push [ebp+lpName]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp esi edi +
jz loc_100996E  +
cmp [ebp+phkResult] edi +
jz loc_10099D2  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
cmp esi 103h +
jnz loc_10099DC  +
xor esi esi +
cmp esi edi +
jnz loc_10099F0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegDeleteKeyW  +
mov esi eax +
cmp esi edi +
jle loc_10099FA  +
and esi ebx +
or esi 80070000h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+arg_0] esi +
jz loc_1009A24  +
cmp [ebp+arg_4] esi +
jz loc_1009A24  +
cmp [ebp+arg_8] esi +
jnz loc_1009A2E  +
mov edi 80070057h +
jmp loc_1009AFD  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_10094B3  +
mov edi eax +
cmp edi esi +
jl loc_1009AFD  +
mov edi [ebp+var_4] +
push ebx  +
push offset unk_100B718  +
xor ecx ecx +
push 8  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
xor eax eax +
add ecx 4 +
setb al  +
neg eax  +
or eax ecx +
push eax  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
pop ecx  +
pop ecx  +
cmp eax esi +
jz loc_1009A8C  +
push offset sub_1008EBF  +
push edi  +
lea esi [eax+4] +
push 8  +
push esi  +
mov [eax] edi +
call sub_10024E9  +
mov ebx esi +
jmp loc_1009A8E  +
xor ebx ebx +
mov edi ebx +
neg edi  +
sbb edi edi +
and edi 7FF8FFF2h +
add edi 8007000Eh +
js loc_1009AEF  +
mov esi [ebp+arg_0] +
mov [ebp+arg_0] ebx +
test esi esi +
jz loc_1009ADC  +
cmp word ptr [esi] 0 +
jz loc_1009ADC  +
mov ecx [ebp+arg_0] +
push esi  +
call sub_1009196  +
mov edi eax +
mov eax esi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1009AC2  +
add [ebp+arg_0] 8 +
sub eax ecx +
sar eax 1 +
lea esi [esi+eax*2+2] +
test edi edi +
jge loc_1009AA8  +
test edi edi +
jl loc_1009AEF  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [eax] ebx +
mov eax [ebp+var_4] +
mov [ecx] eax +
xor ebx ebx +
test ebx ebx +
jz loc_1009AFC  +
push 3  +
mov ecx ebx +
call sub_10026ED  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1009382  +
push [ebp+arg_4]  +
lea ecx [esi+4] +
call sub_1009196  +
mov [esi+10h] eax +
test eax eax +
jl loc_1009B39  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+hKey]  +
call sub_100965B  +
mov [esi+10h] eax +
mov eax [esi+10h] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpData] +
xor edx edx +
push edx  +
push edx  +
push eax  +
push 4  +
push 4  +
push [ebp+lpValueName]  +
mov [eax] edx +
call sub_1009731  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1009797  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 4  +
push [ebp+lpValueName]  +
call sub_100990C  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpData] +
lea edx [eax+2] +
push esi  +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1009BA4  +
push [ebp+lpData]  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push 1  +
push [ebp+lpValueName]  +
call sub_100990C  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_10] ecx +
mov [ebp+Type] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
cmp [ebp+lpValueName] ebx +
jz loc_1009BF8  +
cmp [ebp+arg_4] ebx +
jz loc_1009BF8  +
cmp [ebp+arg_8] ebx +
jnz loc_1009C02  +
mov esi 80070057h +
jmp loc_1009C88  +
lea eax [ebp+Type] +
push eax  +
push 7  +
push [ebp+lpValueName]  +
call sub_10096D9  +
mov esi eax +
cmp esi ebx +
jl loc_1009C88  +
push edi  +
mov edi [ebp+Type] +
add edi 3 +
and edi 0FFFFFFFEh +
push offset unk_100B718  +
push edi  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
mov esi eax +
mov [ebp+var_4] esi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
pop ecx  +
pop ecx  +
js loc_1009C87  +
mov ecx [ebp+var_10] +
push ebx  +
push ebx  +
push eax  +
push edi  +
push 7  +
push [ebp+lpValueName]  +
call sub_1009731  +
mov esi eax +
cmp esi ebx +
jl loc_1009C87  +
mov ecx [ebp+var_10] +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_4]  +
call sub_1009A08  +
mov esi eax +
cmp esi ebx +
jl loc_1009C87  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov eax [ebp+var_14] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov [ebp+var_8] ebx +
pop edi  +
push [ebp+var_4]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov ecx [ebp+var_8] +
cmp ecx ebx +
jz loc_1009C9F  +
push 3  +
call sub_10026ED  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hKey] 0 +
mov eax 80004005h +
jz loc_1009CE9  +
cmp [ebp+lpSubKey] 0 +
jz loc_1009CE9  +
cmp [ebp+arg_8] 0 +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
jnz loc_1009CE4  +
call ds:RegDeleteKeyW  +
test eax eax +
jle loc_1009CE9  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1009CE9  +
call sub_100993F  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp ebx edi +
jz loc_1009D15  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1009D15  +
cmp [ebp+arg_8] edi +
jnz loc_1009D1F  +
mov esi 80070057h +
jmp loc_1009DEF  +
cmp ebx edi +
jbe loc_1009D34  +
mov ecx esi +
call sub_1008EF7  +
add esi 8 +
dec ebx  +
lea edi [edi+eax+1] +
jnz loc_1009D23  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
js loc_1009DEF  +
push offset unk_100B718  +
xor ecx ecx +
push 2  +
lea ebx [edi+1] +
pop edx  +
mov eax ebx +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
mov esi eax +
mov [ebp+var_4] esi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
pop ecx  +
pop ecx  +
js loc_1009DEF  +
and [ebp+var_8] 0 +
mov [ebp+var_C] ebx +
mov ebx [ebp+arg_4] +
mov edi eax +
mov eax [ebp+var_8] +
cmp eax [ebp+arg_0] +
jnb loc_1009DDA  +
mov ecx ebx +
call sub_1008EF7  +
test eax eax +
jz loc_1009DD0  +
mov eax [ebx+4] +
push 0  +
lea ecx [ebp+var_C] +
push ecx  +
push 0  +
push eax  +
push [ebp+var_C]  +
push edi  +
call sub_1008FDF  +
mov esi eax +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1009DBE  +
sub eax ecx +
sar eax 1 +
lea edi [edi+eax*2+2] +
inc [ebp+var_8]  +
add ebx 8 +
test esi esi +
jge loc_1009D8F  +
test esi esi +
jl loc_1009DEF  +
mov ecx [ebp+arg_8] +
xor eax eax +
mov [edi] ax +
mov eax [ebp+var_4] +
and [ebp+var_4] 0 +
mov [ecx] eax +
push [ebp+var_4]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 72656720h  +
mov esi ecx +
call sub_10069DB  +
lea ecx [esi+4] +
mov [esi] eax +
call sub_1008EBF  +
push [ebp+arg_8]  +
and dword ptr [esi+0Ch] 0 +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+hKey]  +
mov dword ptr [esi+10h] 80004005h +
call sub_1009B0A  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call sub_1009CAC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+lpData] 0 +
and [ebp+var_8] 0 +
push esi  +
push edi  +
lea eax [ebp+lpData] +
push eax  +
push [ebp+arg_8]  +
mov edi ecx +
push [ebp+arg_4]  +
call sub_1009CF2  +
mov esi eax +
test esi esi +
jl loc_1009EC2  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+lpData]  +
mov ecx edi +
call sub_1009461  +
mov esi eax +
test esi esi +
jl loc_1009EB9  +
push [ebp+lpData]  +
mov eax [ebp+var_8] +
lea eax [eax+eax+2] +
push eax  +
push 7  +
push [ebp+lpValueName]  +
mov ecx edi +
call sub_100990C  +
mov esi eax +
push [ebp+lpData]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1009E64  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
cmp edi ebx +
jz loc_1009EFD  +
cmp [ebp+arg_8] ebx +
jnz loc_1009F07  +
mov esi 80070057h +
jmp loc_1009FF1  +
mov ecx [ebp+arg_C] +
push ebx  +
call sub_1009196  +
mov esi eax +
test esi esi +
jl loc_1009FF1  +
movzx eax word ptr [edi] +
mov ecx edi +
test ax ax +
jz loc_1009F8E  +
movzx eax ax +
cmp ax [ebp+arg_4] +
jnz loc_1009F30  +
inc [ebp+var_4]  +
inc ebx  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1009F27  +
cmp [ebp+var_4] 0 +
jz loc_1009F8E  +
mov eax [ebp+arg_8] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1009F47  +
sub eax edx +
sar eax 1 +
dec eax  +
imul eax [ebp+var_4] +
push offset unk_100B718  +
xor ecx ecx +
push 2  +
lea eax [eax+ebx+1] +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXIABUnothrow_t@std@@@Z  +
mov esi eax +
mov [ebp+var_8] esi +
neg esi  +
sbb esi esi +
pop ecx  +
and esi 7FF8FFF2h +
pop ecx  +
add esi 8007000Eh +
test esi esi +
jl loc_1009FF1  +
cmp [ebp+var_4] 0 +
jz loc_1009FF1  +
cmp word ptr [edi] 0 +
mov ecx [ebp+var_8] +
mov esi edi +
jz loc_1009FDB  +
push 2  +
pop edi  +
movzx eax word ptr [esi] +
cmp ax [ebp+arg_4] +
jnz loc_1009FCE  +
mov edx [ebp+arg_8] +
movzx eax word ptr [edx] +
test ax ax +
jz loc_1009FD3  +
movzx eax ax +
add edx edi +
mov [ecx] ax +
movzx eax word ptr [edx] +
add ecx edi +
test ax ax +
jnz loc_1009FBD  +
jmp loc_1009FD3  +
mov [ecx] ax +
add ecx edi +
add esi edi +
cmp word ptr [esi] 0 +
jnz loc_1009FA6  +
test ecx ecx +
jz loc_1009FE4  +
xor eax eax +
mov [ecx] ax +
push [ebp+var_8]  +
mov ecx [ebp+arg_C] +
call sub_1009196  +
mov esi eax +
push [ebp+var_8]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jle loc_100A01E  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 746C6E6Bh  +
mov dword ptr [esi] offset off_10019A4 +
call sub_10069DB  +
mov [esi+4] eax +
mov [esi+8] esi +
mov [esi+0Ch] esi +
mov eax esi +
pop esi  +
retn   +
***
xor eax eax +
cmp [ecx+8] eax +
jz loc_100A05A  +
cmp [ecx+0Ch] eax +
jnz locret_100A05F  +
mov eax 80004005h +
retn   +
***
cmp [ecx+8] ecx +
jz loc_100A072  +
cmp [ecx+0Ch] ecx +
jz loc_100A072  +
xor eax eax +
retn   +
mov eax 80004005h +
retn   +
***
mov eax [ecx+8] +
mov edx [ecx+0Ch] +
mov [eax+0Ch] edx +
mov eax [ecx+0Ch] +
mov edx [ecx+8] +
mov [eax+8] edx +
mov [ecx+8] ecx +
mov [ecx+0Ch] ecx +
retn   +
***
retn   +
***
mov dword ptr [ecx] offset off_10019A4 +
call sub_100A065  +
test eax eax +
jl locret_100A0B8  +
jmp sub_100A07D  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov eax 80004005h +
test ecx ecx +
jz loc_100A0F4  +
call sub_100A065  +
test eax eax +
jl loc_100A0E0  +
call sub_100A07D  +
mov eax [esi+8] +
mov [eax+0Ch] ecx +
mov eax [esi+8] +
mov [ecx+8] eax +
mov [ecx+0Ch] esi +
mov [esi+8] ecx +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+pv] 0 +
push esi  +
lea eax [ebp+pv] +
push eax  +
push [ebp+rclsid]  +
call ds:StringFromIID  +
mov esi eax +
test esi esi +
jl loc_100A132  +
push [ebp+pv]  +
mov ecx [ebp+arg_4] +
call sub_1009196  +
push [ebp+pv]  +
mov esi eax +
call ds:CoTaskMemFree  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_100B020 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+rclsid] +
push eax  +
call ds:CoCreateGuid  +
test eax eax +
jl loc_100A16C  +
push esi  +
lea eax [ebp+rclsid] +
push eax  +
call sub_100A0FE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1005ACE  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea ecx [eax-1] +
push ecx  +
push [ebp+arg_0]  +
mov edi offset word_10014F4 +
push eax  +
push esi  +
mov ebx esi +
mov [ebp+arg_4] edi +
call sub_10027F5  +
mov [ebp+arg_8] eax +
test eax eax +
jl loc_100A200  +
push esi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_100A1EB  +
push 5Ch  +
pop eax  +
cmp ax [esi] +
jnz loc_100A1EB  +
cmp ax [esi+2] +
jnz loc_100A1EB  +
push eax  +
lea eax [esi+4] +
push eax  +
mov [ebp+arg_4] esi +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_100A1E4  +
mov ebx esi +
mov [ebp+arg_4] edi +
jmp loc_100A1EB  +
xor eax eax +
mov [ebx] ax +
inc ebx  +
inc ebx  +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_100A1F4  +
mov [eax] ebx +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_100A200  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax [ebp+arg_8] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call __EH_prolog3_catch  +
and dword ptr [ebp-14h] 0 +
mov eax offset $LN7 +
retn   +
***
jmp ds:_purecall  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100B020 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_1005ACE  +
mov eax offset dword_100A368 +
jmp loc_10057D9  +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 756EF42Fh  +
***
