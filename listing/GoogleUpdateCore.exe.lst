call sub_401269  +
call sub_4052B1  +
pop ecx  +
mov eax dword_430B94 +
mov eax dword_430B94 +
push offset sub_41E95B  +
push offset sub_41E965  +
mov eax dword_430B94 +
mov ecx offset unk_42FC80 +
mov ecx offset unk_4307D8 +
pop ecx  +
pop ecx  +
pop ecx  +
mov ecx offset unk_4309D0 +
call loc_41BDE2  +
push offset sub_41E9AB  +
call sub_40A24E  +
pop ecx  +
retn   +
***
push 0  +
push esi  +
cmp byte ptr [ecx+8] 0 +
push [ebp+dwBytes]  +
cmp [ebp+lpMem] 0 +
mov eax [ebp+dwFlags] +
push [ebp+lpMem]  +
push esi  +
mov edx ecx +
mov eax dword_430B3C +
mov edx [ebp+arg_0] +
cmp [ebp+lpMem] 0 +
mov edx [ebp+arg_4] +
push esi  +
test edx edx +
js loc_4013DC  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_4013DC  +
inc edx  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_4013DC  +
mov eax esi +
mul  [ebp+arg_8] +
test edx edx +
ja loc_4013DC  +
jb loc_4013BC  +
cmp eax 0FFFFFFFFh +
ja loc_4013DC  +
cmp eax 0FFFFFFEFh +
ja loc_4013DC  +
mov ecx [ecx+4] +
add eax 10h +
push eax  +
push [ebp+dwFlags]  +
call sub_4011D9  +
test eax eax +
jz loc_4013DC  +
lea ecx [esi-1] +
mov [eax+8] ecx +
jmp loc_4013DE  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
test [ebp+arg_0] 1 +
sub esp 14h +
sub esp 44h +
mov ecx [ecx] +
and esp 0FFFFFFF8h +
xor eax eax +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
push ecx  +
test ecx ecx +
mov eax [ebp+arg_4] +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
cmp [ebp+arg_0] 0 +
xor eax eax +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ebx  +
mov eax [ecx] +
mov edx [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
push ebx  +
push esi  +
push ebx  +
push edi  +
push esi  +
mov eax [ebp+arg_4] +
push esi  +
push ecx  +
int 3  +
***
push esi  +
mov eax [ebp+arg_4] +
push esi  +
xor eax eax +
push ecx  +
push ecx  +
push esi  +
sub esp 20h +
sub esp 18h +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push 4  +
push esi  +
push [ebp+cbData]  +
sub esp 14h +
sub esp 0Ch +
push ecx  +
mov eax 8008h +
push edi  +
push esi  +
push esi  +
push ebx  +
cmp [ebp+lpString2] 0 +
mov eax [ebp+arg_0] +
push ecx  +
mov eax [ebp+arg_4] +
int 3  +
***
push esi  +
mov edx [ecx+8] +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_41E7A0  +
call ds:GetLastError  +
push esi  +
mov eax [ebp+arg_C] +
call ds:GetLastError  +
mov dword ptr [esi] offset off_42A764 +
push esi  +
sub esp 50h +
mov ecx [esi+5Ch] +
push ebx  +
push esi  +
cmp byte ptr [ecx+48h] 0 +
lea ecx [esi+50h] +
push esi  +
lea ebx [ecx+4] +
push esi  +
sub esp 0Ch +
sub esp 10h +
cmp dword ptr [esi+6Ch] 0 +
mov eax [ebp+arg_0] +
xor eax eax +
push esi  +
mov dword ptr [esi] offset off_42A72C +
push esi  +
push edi  +
mov eax [ebp+arg_0] +
push [ebp+arg_0]  +
sub esp 1Ch +
push esi  +
push esi  +
push ecx  +
cmp byte ptr [ecx+70h] 0 +
push esi  +
sub esp 0Ch +
sub esp 24h +
sub esp 1Ch +
push 14h  +
push ecx  +
push ebx  +
push esi  +
mov eax [ebp+TokenHandle] +
cmp dword ptr [esi+8] 0 +
push esi  +
mov ecx [ebp+arg_0] +
mov eax dword_4316EC +
push ecx  +
sub esp 90h +
sub esp 0Ch +
sub esp 210h +
sub esp 54h +
sub esp 0DCh +
push edi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
sub esp 0Ch +
mov edi ecx +
push esi  +
mov eax [ebp+arg_4] +
push ecx  +
push esi  +
push ebx  +
push ecx  +
mov edx [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
push ebx  +
mov edx [ebp+arg_0] +
sub esp 10h +
mov eax [ebp+arg_0] +
mov ebx edx +
push ecx  +
push ecx  +
movzx eax word ptr [ecx] +
cmp ecx 80h +
push ebx  +
mov eax [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
xor eax eax +
mov edx [ebp+arg_0] +
push ebx  +
push ecx  +
push esi  +
push ecx  +
push esi  +
mov edx [ebp+arg_4] +
push ecx  +
sub esp 0Ch +
sub esp 54h +
sub esp 10h +
push esi  +
test [ebp+arg_0] 1 +
cmp dword_430B80 0 +
push edi  +
lea eax [esi+4] +
push esi  +
lea eax [esi+4] +
lea eax [ecx+4] +
push ecx  +
lea eax [ecx+4] +
sub esp 1Ch +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push edi  +
push ecx  +
push ecx  +
sub esp 28h +
sub esp 28h +
mov ebx edx +
sub esp 28h +
push esi  +
sub esp 38h +
sub esp 10h +
push ecx  +
push ecx  +
sub esp 20h +
push ecx  +
call sub_40A970  +
sub esp 14h +
push ecx  +
push ecx  +
push ecx  +
cmp dword ptr [esi+0D4h] 0 +
call sub_40A970  +
push ecx  +
call sub_40A970  +
call sub_40A970  +
push ecx  +
call sub_40A970  +
push ecx  +
push esi  +
call sub_40A970  +
mov edx [ecx+8Ch] +
push esi  +
push esi  +
push ecx  +
test [ebp+arg_0] 1 +
mov al byte ptr [ebp+lpFileName] +
push esi  +
cmp byte ptr [esi+8] 0 +
cmp dword ptr [esi+18h] 0 +
sub esp 24h +
sub esp 0BCh +
push ecx  +
push ecx  +
sub esp 7Ch +
and esp 0FFFFFFF8h +
cmp dword ptr [esi+10h] 0 +
mov eax [ebp+arg_0] +
push ebx  +
sub esp 128h +
push 6  +
mov eax dword_42FA70 +
sub esp 128h +
mov eax dword_42F008 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 118h  +
xor edi edi +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
lea eax [ebp+VersionInformation.dwMajorVersion] +
push edi  +
push eax  +
call sub_40AB40  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
call ds:GetVersionExW  +
test eax eax +
jz loc_406B1A  +
mov ebx [ebp+VersionInformation.dwMajorVersion] +
cmp ebx 6 +
jz loc_406B42  +
cmp ebx 0Ah +
jz loc_406B42  +
cmp ebx 5 +
jnz loc_406B1A  +
cmp [ebp+VersionInformation.dwMinorVersion] 2 +
jnz loc_406B2B  +
cmp [ebp+var_6] 1 +
jnz loc_406B0D  +
call sub_406A4B  +
cmp eax 9 +
jz loc_406B3D  +
test dword ptr [ebp-8] 8000h +
jz loc_406BB8  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_409FC1  +
leave   +
retn   +
cmp [ebp+VersionInformation.dwMinorVersion] 1 +
jnz loc_406B1A  +
test dword ptr [ebp-8] 200h +
jnz loc_406B1A  +
xor eax eax +
inc eax  +
jmp loc_406B1C  +
mov eax [ebp+VersionInformation.dwMinorVersion] +
mov ecx offset ModuleName +
mov [ebp+var_124] edi +
mov [ebp+var_128] eax +
call sub_4040EC  +
mov esi eax +
test esi esi +
jz loc_406B1A  +
push offset aGetproductinfo  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_406B88  +
lea ecx [ebp+var_124] +
push ecx  +
push edi  +
push edi  +
push [ebp+var_128]  +
push ebx  +
call eax  +
mov edi eax +
push esi  +
call ds:FreeLibrary  +
test edi edi +
jz loc_406B1A  +
mov eax [ebp+var_124] +
cmp eax 1Bh +
ja loc_406BC0  +
jz loc_406C0A  +
dec eax  +
cmp eax 18h +
ja loc_406B1A  +
movzx eax ds:byte_406C23[eax] +
jmp ds:off_406C13[eax*4]  +
push 2  +
pop eax  +
jmp loc_406B1C  +
cmp eax 54h +
ja loc_406BE0  +
jz loc_406C0A  +
sub eax 30h +
jz loc_406B3D  +
sub eax 16h +
jz loc_406C0A  +
dec eax  +
sub eax 1 +
jz loc_406C0A  +
jmp loc_406B1A  +
cmp eax 79h +
jb loc_406B1A  +
cmp eax 7Ah +
jbe loc_406C0E  +
cmp eax 7Ch +
jbe loc_406B1A  +
cmp eax 7Eh +
jbe loc_406C0A  +
add eax 0FFFFFF7Fh +
cmp eax 1 +
ja loc_406B1A  +
push 3  +
jmp loc_406BBA  +
push 4  +
jmp loc_406BBA  +
***
push ebx  +
push ecx  +
push ecx  +
mov eax [edi] +
push esi  +
mov esi eax +
sub esp 0Ch +
push ecx  +
sub esp 34h +
push edi  +
call sub_40A970  +
sub esp 80Ch +
push ecx  +
push esi  +
add ecx 8 +
mov eax [ecx+28h] +
mov eax [ebp+arg_0] +
and esp 0FFFFFFF8h +
cmp ecx 0FFFFFFFDh +
push esi  +
push ebx  +
push ecx  +
sub ecx 8 +
push ecx  +
mov edi ecx +
push esi  +
mov eax [ebp+arg_0] +
push [ebp+arg_C]  +
push dword ptr [esi+1Ch]  +
push esi  +
sub esp 14h +
sub esp 18h +
xor eax eax +
push edi  +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
call sub_401269  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call sub_401ACE  +
mov eax [edi] +
dec eax  +
cmp eax 1Eh +
ja loc_407ADC  +
jmp ds:off_407AE5[eax*4]  +
mov ecx esi +
call sub_40188F  +
jmp loc_407ADC  +
push offset unk_42B468  +
lea ecx [ebp+arg_0] +
call sub_401834  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_407B61  +
mov ecx [ebp+arg_0] +
lea ecx [ecx-10h] +
call sub_401251  +
lea eax [ebp+var_4] +
mov ecx esi +
push eax  +
call sub_4017E6  +
mov ecx [ebp+var_4] +
lea ecx [ecx-10h] +
jmp loc_407AD7  +
push offset aSvc  +
jmp loc_407955  +
push offset aRegserver  +
jmp loc_407955  +
push offset aUnregserver  +
jmp loc_407955  +
push offset aCrash  +
jmp loc_407955  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_407B8E  +
push eax  +
mov ecx esi +
call sub_4017E6  +
mov ecx [ebp+arg_0] +
jmp loc_407983  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_407D81  +
jmp loc_4079B2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_407E56  +
jmp loc_4079B2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_407EA6  +
jmp loc_4079B2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_407FB0  +
jmp loc_4079B2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_408052  +
jmp loc_4079B2  +
push offset aCr  +
jmp loc_407955  +
push offset aEmbedding  +
lea ecx [ebp+arg_0] +
call sub_401834  +
lea eax [ebp+arg_0] +
jmp loc_4079B2  +
push offset aRegisterproduc  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_407CAC  +
jmp loc_407A17  +
push offset aUnregisterprod  +
jmp loc_407A21  +
push offset aRegsvc  +
jmp loc_407955  +
push offset aUnregsvc  +
jmp loc_407955  +
push offset aCrashhandler  +
jmp loc_407955  +
push offset aBroker  +
jmp loc_407A0F  +
push offset aOndemand  +
jmp loc_407A0F  +
push offset aMedsvc  +
jmp loc_407955  +
push offset aUninstall  +
jmp loc_407955  +
call sub_401269  +
push eax  +
lea ecx [ebp+arg_0] +
call sub_401ACE  +
push dword ptr [edi+24h]  +
lea eax [ebp+arg_0] +
push offset aPing  +
push offset aSS_0  +
push eax  +
call sub_40492E  +
add esp 10h +
jmp loc_407A17  +
push offset aHealthcheck  +
lea ecx [ebp+arg_0] +
call sub_401834  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_407B61  +
mov ecx [ebp+arg_0] +
lea ecx [ecx-10h] +
call sub_401251  +
lea eax [ebp+var_4] +
mov ecx esi +
push eax  +
call sub_4017E6  +
mov ecx [ebp+var_4] +
add ecx 0FFFFFFF0h +
call sub_401251  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
call sub_401269  +
push ecx  +
push ecx  +
push ecx  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
mov edx [ecx+10h] +
or edi 0FFFFFFFFh +
sub esp 34h +
push ecx  +
test [ebp+arg_0] 1 +
mov ecx [ecx+4] +
push esi  +
mov esi ecx +
mov edi ecx +
push ecx  +
push ecx  +
sub esp 14h +
sub esp 10h +
sub esp 10h +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
push esi  +
push esi  +
push ecx  +
push esi  +
push esi  +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
sub esp 1Ch +
push ecx  +
push esi  +
sub esp 10h +
push ecx  +
push ecx  +
and esp 0FFFFFFF8h +
sub esp 0E0h +
mov edx ecx +
mov eax [ecx] +
push ecx  +
push ecx  +
push ecx  +
push esi  +
push esi  +
push esi  +
mov edx [ebp+arg_0] +
push ecx  +
push ecx  +
push ecx  +
push esi  +
push esi  +
push ecx  +
mov ecx [esi+2Ch] +
push esi  +
test ecx ecx +
mov ecx [ecx+0Ch] +
test [ebp+arg_0] 1 +
sub esp 0Ch +
sub esp 0Ch +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [ecx+4] +
sub esp 0Ch +
mov edx [ebp+arg_0] +
mov edx [ebp+arg_0] +
push esi  +
mov esi [edx+8] +
mov eax [esi] +
mov [edx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_409E66  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [ecx] +
cmp edx [eax+4] +
jnz loc_409E78  +
mov [eax+4] esi +
jmp loc_409E86  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_409E83  +
mov [eax] esi +
jmp loc_409E86  +
mov [eax+8] esi +
mov [esi] edx +
mov [edx+4] esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_409EFC  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_40AB40  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
cmp eax [esi+30h] +
jg loc_409F8E  +
test eax eax +
js loc_409F8E  +
cmp eax [esi+30h] +
jnz loc_409F81  +
mov esi [esi+8] +
jmp loc_409F90  +
push eax  +
lea ecx [esi+2Ch] +
call sub_409F35  +
mov esi [eax] +
jmp loc_409F90  +
xor esi esi +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp ecx dword_42F008 +
mov eax dword_42F008 +
mov eax [ebp+arg_0] +
test eax eax +
cmp [ebp+arg_0] 0 +
cmp byte_42FCC5 0 +
call sub_40A970  +
call sub_40A778  +
cmp byte_42FCC4 0 +
mov eax dword_42F008 +
push [ebp+arg_0]  +
push [ebp+arg_0]  +
call sub_40E833  +
call sub_40A91A  +
call sub_40A8D4  +
push eax  +
call sub_40EABB  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_40A8D7  +
test al al +
jz loc_40A4A9  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_40A482  +
call sub_40DDDF  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_40AA1D  +
push 0  +
sub esp 324h +
push 17h  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_40A4FD  +
push 2  +
pop ecx  +
int 29h  +
mov dword_42FDE0 eax +
mov dword_42FDDC ecx +
mov dword_42FDD8 edx +
mov dword_42FDD4 ebx +
mov dword_42FDD0 esi +
mov dword_42FDCC edi +
mov word_42FDF8 ss +
mov word_42FDEC cs +
mov word_42FDC8 ds +
mov word_42FDC4 es +
mov word_42FDC0 fs +
mov word_42FDBC gs +
pushf   +
pop dword_42FDF0  +
mov eax [ebp+0] +
mov dword_42FDE4 eax +
mov eax [ebp+4] +
mov dword_42FDE8 eax +
lea eax [ebp+arg_0] +
mov dword_42FDF4 eax +
mov eax [ebp+var_324] +
mov dword_42FD30 10001h +
mov eax dword_42FDE8 +
mov dword_42FCEC eax +
mov dword_42FCE0 0C0000409h +
mov dword_42FCE4 1 +
mov dword_42FCF0 1 +
push 4  +
pop eax  +
imul eax eax +
mov dword_42FCF4[eax] 2 +
push 4  +
pop eax  +
imul eax eax +
mov ecx dword_42F008 +
mov [ebp+eax+var_8] ecx +
push 4  +
pop eax  +
shl eax 0 +
mov ecx dword_42F004 +
mov [ebp+eax+var_8] ecx +
push offset ExceptionInfo  +
call sub_40A4BC  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
and dword_42FFFC 0 +
sub esp 24h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_42F00C ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_40A76F  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_42F00C 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_42FFFC ebx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-20h] +
mov [ebp-0Ch] eax +
xor edi 756E6547h +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-1Ch] +
xor eax 6C65746Eh +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
or eax [ebp-8] +
or eax edi +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_40A6B9  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_40A6A8  +
cmp eax 20660h +
jz loc_40A6A8  +
cmp eax 20670h +
jz loc_40A6A8  +
cmp eax 30650h +
jz loc_40A6A8  +
cmp eax 30660h +
jz loc_40A6A8  +
cmp eax 30670h +
jnz loc_40A6B9  +
mov edi dword_430000 +
or edi 1 +
mov dword_430000 edi +
jmp loc_40A6BF  +
mov edi dword_430000 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-1Ch] +
mov [ebp-4] eax +
jl loc_40A6FD  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_40A700  +
or edi 2 +
mov dword_430000 edi +
jmp loc_40A700  +
mov ebx [ebp-10h] +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_40A76F  +
or dword_42F00C 4 +
mov dword_42FFFC 2 +
test eax 8000000h +
jz loc_40A76F  +
test eax 10000000h +
jz loc_40A76F  +
xor ecx ecx +
xor eax eax +
sub esp 324h +
sub esp 44h +
test eax eax +
retn   +
***
mov eax [ebp+arg_0] +
and dword_430004 0 +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_42F008 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
sub esp 14h +
mov ecx dword_42F008 +
retn   +
***
push 0  +
call sub_404928  +
xor eax eax +
mov esi offset unk_42CAB8 +
mov esi offset unk_42CAC0 +
mov ebx offset unk_42CAC0 +
cmp esi ebx +
jnb loc_40AB2E  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_40AB26  +
mov ecx edi +
call ds:off_41F2BC  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_40AB16  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_40AC93  +
imul eax eax +
cmp ecx 20h +
jbe loc_40AC45  +
cmp ecx 80h +
jb loc_40ABFD  +
bt dword_430000 1 +
jnb loc_40AB85  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_42F00C 1 +
jnb loc_40AC45  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jbe loc_40ABFD  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_40ABC0  +
jmp loc_40AC10  +
bt dword_42F00C 1 +
jnb loc_40AC45  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_40AC31  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_40AC15  +
test ecx 1Fh +
jz loc_40AC93  +
lea edi [edi+ecx-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_40AC5B  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_40AC4D  +
test ecx 4 +
jz loc_40AC6B  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_40AC93  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_40AC80  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_40ACC0  +
cmp edi eax +
jb loc_40AF54  +
cmp ecx 20h +
jb loc_40B19B  +
cmp ecx 80h +
jnb loc_40ACE4  +
bt dword_42F00C 1 +
jb loc_40B16D  +
jmp loc_40AEC7  +
bt dword_430000 1 +
jnb loc_40ACF7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_40AD10  +
bt dword_42F00C 1 +
jb loc_40B0F0  +
bt dword_430000 0 +
jnb loc_40AEC7  +
test edi 3 +
jnz loc_40AEC7  +
test esi 3 +
jnz loc_40AEE2  +
bt edi 2 +
jnb loc_40AD49  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_40AD60  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_40ADCD  +
bt esi 3 +
jnb loc_40AE26  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_40AE7C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_40AE94  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_40AE7C  +
***
bt ecx 2 +
jnb loc_40AEA7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_40AEBE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_40AF04[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_40AEE2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_40AECF  +
mov edx ecx +
cmp ecx 20h +
jb loc_40B19B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_40AF04[edx*4]  +
jmp dword ptr ds:loc_40AF14[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_40B0B4  +
bt dword_42F00C 1 +
jb loc_40B005  +
test edi 3 +
jz loc_40AF8D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_40AF80  +
cmp ecx 20h +
jb loc_40B0B4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_40AFB0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_40B01C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_40B00D  +
cmp ecx 80h +
jb loc_40B08C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_40B01C  +
cmp ecx 20h +
jb loc_40B0B4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_40B091  +
test ecx 0FFFFFFFCh +
jz loc_40B0D1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_40B0BC  +
test ecx ecx +
jz loc_40B0E4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_40B0D5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_40B16D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_40B110  +
test ecx ecx +
jz loc_40B1D0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_40B19B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_40B180  +
and ecx 1Fh +
jz loc_40B1D0  +
mov eax ecx +
shr ecx 2 +
jz loc_40B1B6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_40B1A7  +
mov ecx eax +
and ecx 3 +
jz loc_40B1D0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_40B1BD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
call sub_40B873  +
cmp [ebp+arg_0] 0 +
jnz loc_40B258  +
call sub_40B529  +
call sub_40B580  +
push 0  +
call sub_40B841  +
pop ecx  +
mov al 1 +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_40B27F  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_409FC1  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_409FC1  +
***
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_40B464  +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
mov edi offset stru_430040 +
test esi esi +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov ecx offset dword_43007C +
cmp [ebp+arg_0] 0 +
mov eax dword_42F008 +
mov dword_43007C eax +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_40B955  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_409FC1  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_40B880  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
push ebx  +
mov ebp edx +
xor eax eax +
xor ebx ebx +
xor edx edx +
xor esi esi +
xor edi edi +
call ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov ebp edx +
mov esi ecx +
mov eax ecx +
push 1  +
call sub_40BB6C  +
xor eax eax +
xor ebx ebx +
xor ecx ecx +
xor edx edx +
xor edi edi +
jmp esi  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push edx  +
push offset loc_40B9C9  +
push ecx  +
call ds:RtlUnwind  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edx  +
mov eax ds:off_41F2BC +
mov eax ds:off_41F2BC +
cmp eax offset nullsub_1 +
jz loc_40BA42  +
mov ecx large fs:18h +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
cmp eax [ecx+8] +
jb loc_40BA3D  +
cmp eax [ecx+4] +
jbe loc_40BA42  +
push 0Dh  +
pop ecx  +
int 29h  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_40BA69  +
push dword ptr [ebp+8]  +
call ds:RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_40BA71  +
push large dword ptr fs:0  +
mov eax dword_42F008 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_40BB28  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_40BAFB  +
cmp esi [esp+18h+arg_4] +
jbe loc_40BB28  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_40BB26  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_40BB6C  +
mov eax [ebx+esi*4+8] +
call sub_40BB8B  +
jmp loc_40BADF  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_40BA71 +
jnz locret_40BB5C  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_40BB5C  +
mov eax 1 +
retn   +
***
mov ebx offset unk_42F030 +
jmp loc_40BB77  +
***
mov ebx offset unk_42F030 +
mov edx dword_43007C +
mov esi eax +
push ecx  +
sub esp 18h +
sub esp 40h +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_409FC1  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_40BEC3  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_40BF2D  +
jmp loc_40BF2D  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_40CC9E  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_40BF01  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_40BDA3  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_40BC8D  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_40CC9E  +
add esp 20h +
mov [ebp-8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_40BF90  +
cmp edi eax +
jb loc_40C224  +
cmp ecx 20h +
jb loc_40C46B  +
cmp ecx 80h +
jnb loc_40BFB4  +
bt dword_42F00C 1 +
jb loc_40C43D  +
jmp loc_40C197  +
bt dword_430000 1 +
jnb loc_40BFC7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_40BFE0  +
bt dword_42F00C 1 +
jb loc_40C3C0  +
bt dword_430000 0 +
jnb loc_40C197  +
test edi 3 +
jnz loc_40C197  +
test esi 3 +
jnz loc_40C1B2  +
bt edi 2 +
jnb loc_40C019  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_40C030  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_40C09D  +
bt esi 3 +
jnb loc_40C0F6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_40C14C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_40C164  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_40C14C  +
***
bt ecx 2 +
jnb loc_40C177  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_40C18E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_40C1D4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_40C1B2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_40C19F  +
mov edx ecx +
cmp ecx 20h +
jb loc_40C46B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_40C1D4[edx*4]  +
jmp dword ptr ds:loc_40C1E4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_40C384  +
bt dword_42F00C 1 +
jb loc_40C2D5  +
test edi 3 +
jz loc_40C25D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_40C250  +
cmp ecx 20h +
jb loc_40C384  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_40C280[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_40C2EC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_40C2DD  +
cmp ecx 80h +
jb loc_40C35C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_40C2EC  +
cmp ecx 20h +
jb loc_40C384  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_40C361  +
test ecx 0FFFFFFFCh +
jz loc_40C3A1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_40C38C  +
test ecx ecx +
jz loc_40C3B4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_40C3A5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_40C43D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_40C3E0  +
test ecx ecx +
jz loc_40C4A0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_40C46B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_40C450  +
and ecx 1Fh +
jz loc_40C4A0  +
mov eax ecx +
shr ecx 2 +
jz loc_40C486  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_40C477  +
mov ecx eax +
and ecx 3 +
jz loc_40C4A0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_40C48D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
call sub_40A970  +
call sub_40A970  +
mov esp [ebp-18h] +
cmp [ebp+arg_18] 0 +
sub esp 68h +
sub esp 38h +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
lea eax [ecx+4] +
mov eax [ebp+arg_0] +
push esi  +
call sub_40A970  +
mov eax [ebp-30h] +
call sub_41B81C  +
push 0FFFFFFFFh  +
call sub_40A970  +
call sub_40B456  +
cmp dword ptr [eax+18h] 0 +
jle locret_40D19D  +
call sub_40B456  +
dec dword ptr [eax+18h]  +
retn   +
***
sub esp 18h +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
mov eax [ecx+4] +
test eax eax +
jnz locret_40D278  +
mov eax offset aUnknownExcepti +
retn   +
***
sub esp 4 +
mov esi [eax+4] +
mov eax [ebp+arg_8] +
mov eax [ebp+arg_0] +
call sub_40A970  +
mov esp [ebp-18h] +
mov ecx [ebp+arg_0] +
call sub_40B456  +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push edi  +
push esi  +
sub esp 20h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_40D7B8  +
add esp 14h +
retn   +
***
test eax eax +
mov edi edi +
mov edi edi +
call sub_411831  +
call sub_411831  +
mov edi edi +
mov edi edi +
call sub_40A970  +
mov eax [ebp+10h] +
mov edi edi +
call sub_40A970  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
xor ecx ecx +
cmp eax 0E06D7363h +
setz cl  +
mov [ebp-1Ch] ecx +
mov eax [ebp-1Ch] +
retn   +
***
mov esp [ebp-18h] +
call sub_40EAF0  +
int 3  +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_41E815  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_42F008 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
cmp dword ptr [ebp+10h] 0 +
jnz loc_40DCA3  +
call sub_40A8D7  +
test al al +
jz loc_40DCA3  +
push dword ptr [ebp+8]  +
call sub_40DD4E  +
pop ecx  +
lea eax [ebp+0Ch] +
mov byte ptr [ebp-0Dh] 0 +
mov [ebp-24h] eax +
lea eax [ebp+10h] +
mov [ebp-20h] eax +
lea eax [ebp-0Dh] +
mov [ebp-1Ch] eax +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-0Eh] +
push 2  +
pop eax  +
mov [ebp-14h] eax +
mov [ebp-18h] eax +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
call sub_40DB0D  +
cmp dword ptr [ebp+10h] 0 +
jz loc_40DCED  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
leave   +
retn   +
***
push dword ptr [ebp+8]  +
call sub_40DCFB  +
mov edi edi +
call sub_411B07  +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_41E832  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_42F008 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_40DDAE  +
push offset aCorexitprocess  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_40DDAE  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_41F2BC  +
call esi  +
cmp [ebp+hLibModule] 0 +
jz loc_40DDBD  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_0]  +
call loc_40DC64  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_4302E0 0 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_40E31F  +
mov eax [esi] +
push edi  +
mov edi esi +
jmp loc_40E313  +
push eax  +
call sub_411368  +
lea edi [edi+4] +
mov eax [edi] +
pop ecx  +
test eax eax +
jnz loc_40E307  +
push esi  +
call sub_411368  +
pop ecx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp eax dword_4302E4 +
jz loc_40E356  +
push eax  +
call sub_40E2F3  +
pop ecx  +
pop ebp  +
retn   +
***
call sub_40E33D  +
push dword_4302E8  +
call sub_40E2F3  +
push dword_4302E4  +
call sub_40E2F3  +
add esp 0Ch +
call sub_41B7D3  +
retn   +
***
call sub_40A970  +
mov eax [ebp+10h] +
call sub_40A970  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41B7E8  +
lea eax [ebp+8] +
mov [ebp-18h] eax +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-0Dh] +
push 2  +
pop eax  +
mov [ebp-14h] eax +
mov [ebp-1Ch] eax +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call sub_40E3AE  +
call sub_41B7D3  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_43031C offset off_42F058 +
mov [esp+4+var_4] offset unk_4302F8 +
call sub_40E694  +
pop ecx  +
mov al 1 +
retn   +
***
pop ecx  +
retn   +
mov edi edi +
call sub_4131B8  +
mov edi edi +
mov edi edi +
mov eax dword_42F008 +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_43049C +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
mov eax [ebp+10h] +
mov edi edi +
xor eax eax +
mov edi edi +
mov edi edi +
mov eax dword_430314 +
mov edi edi +
call sub_40A970  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4133B7  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
call sub_4111C6  +
test al al +
jz loc_4102AF  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_41045E  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov dword ptr [eax+18h] 16h +
push dword ptr [esi+8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_40D7EF  +
add esp 18h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax [esi+0Ch] +
and dword ptr [esi+34h] 0 +
mov byte ptr [esi+18h] 0 +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov [esi+2Eh] cx +
test cx cx +
jz loc_41045E  +
mov edi ecx +
lea eax [esi+14h] +
mov ebx [eax] +
test ebx ebx +
js loc_41044F  +
movzx eax byte ptr [esi+18h] +
mov ecx esi +
push eax  +
push edi  +
call sub_41011D  +
mov [esi+18h] al +
cmp al 8 +
jnb loc_410479  +
movzx eax al +
cmp eax 7 +
ja loc_4102AF  +
jmp ds:off_410499[eax*4]  +
mov byte ptr [esi+38h] 1 +
mov ecx [esi+448h] +
mov eax [ecx+8] +
cmp eax [ecx+4] +
jnz loc_410337  +
cmp byte ptr [ecx+0Ch] 0 +
lea ecx [esi+14h] +
jz loc_41032D  +
lea eax [ebx+1] +
jmp loc_410330  +
or eax 0FFFFFFFFh +
mov [ecx] eax +
jmp loc_410431  +
lea eax [ebx+1] +
mov [esi+14h] eax +
inc dword ptr [ecx+8]  +
lea ecx [esi+448h] +
mov eax [ecx] +
mov eax [eax] +
mov [eax] di +
mov eax [ecx] +
add dword ptr [eax] 2 +
jmp loc_410431  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+1Ch] 0 +
or dword ptr [esi+24h] 0FFFFFFFFh +
and dword ptr [esi+28h] 0 +
mov byte ptr [esi+2Ch] 0 +
mov byte ptr [esi+38h] 0 +
jmp loc_410431  +
movzx eax di +
sub eax 20h +
jz loc_4103B6  +
sub eax 3 +
jz loc_4103B0  +
sub eax 8 +
jz loc_4103A7  +
dec eax  +
sub eax 1 +
jz loc_41039E  +
sub eax 3 +
jnz loc_410431  +
or dword ptr [esi+1Ch] 8 +
jmp loc_410431  +
or dword ptr [esi+1Ch] 4 +
jmp loc_410431  +
or dword ptr [esi+1Ch] 1 +
jmp loc_410431  +
or dword ptr [esi+1Ch] 20h +
jmp loc_410431  +
or dword ptr [esi+1Ch] 2 +
jmp loc_410431  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_4103D1  +
lea eax [esi+20h] +
push eax  +
mov ecx esi +
call sub_4101EF  +
jmp loc_410429  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+20h] eax +
test eax eax +
jns loc_4103EB  +
or dword ptr [esi+1Ch] 4 +
neg eax  +
mov [esi+20h] eax +
mov al 1 +
jmp loc_410429  +
and dword ptr [esi+24h] 0 +
jmp loc_410431  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_410402  +
lea eax [esi+24h] +
jmp loc_4103C7  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+24h] eax +
test eax eax +
jns loc_4103EB  +
or dword ptr [esi+24h] 0FFFFFFFFh +
jmp loc_4103EB  +
mov ecx esi +
call sub_4106F9  +
jmp loc_410429  +
mov ecx esi +
call sub_410887  +
test al al +
jz loc_4102AF  +
mov eax [esi+0Ch] +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov edi ecx +
mov [esi+2Eh] cx +
lea eax [esi+14h] +
test cx cx +
jnz loc_4102DC  +
mov al [esi+18h] +
test al al +
jz loc_41045E  +
cmp al 7 +
jnz loc_41028C  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_4102B6  +
mov eax [esi+14h] +
jmp loc_4102B2  +
mov ecx [esi+8] +
mov byte ptr [ecx+1Ch] 1 +
mov dword ptr [ecx+18h] 16h +
xor ecx ecx +
push dword ptr [esi+8]  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
jmp loc_4102A7  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
call sub_4111C6  +
test al al +
jz loc_4104FF  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_41069F  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov dword ptr [eax+18h] 16h +
push dword ptr [esi+8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_40D7EF  +
add esp 18h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax [esi+0Ch] +
and dword ptr [esi+34h] 0 +
mov byte ptr [esi+18h] 0 +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov [esi+2Eh] cx +
test cx cx +
jz loc_41069F  +
mov edi ecx +
lea eax [esi+14h] +
mov ebx [eax] +
test ebx ebx +
js loc_41069F  +
movzx eax byte ptr [esi+18h] +
mov ecx esi +
push eax  +
push edi  +
call sub_410159  +
mov [esi+18h] al +
cmp al 8 +
jnb loc_4106BA  +
movzx eax al +
cmp eax 7 +
ja loc_4104FF  +
jmp ds:off_4106D9[eax*4]  +
mov byte ptr [esi+38h] 1 +
mov ecx [esi+448h] +
mov eax [ecx+8] +
cmp eax [ecx+4] +
jnz loc_410587  +
cmp byte ptr [ecx+0Ch] 0 +
lea ecx [esi+14h] +
jz loc_41057D  +
lea eax [ebx+1] +
jmp loc_410580  +
or eax 0FFFFFFFFh +
mov [ecx] eax +
jmp loc_410681  +
lea eax [ebx+1] +
mov [esi+14h] eax +
inc dword ptr [ecx+8]  +
lea ecx [esi+448h] +
mov eax [ecx] +
mov eax [eax] +
mov [eax] di +
mov eax [ecx] +
add dword ptr [eax] 2 +
jmp loc_410681  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+1Ch] 0 +
or dword ptr [esi+24h] 0FFFFFFFFh +
and dword ptr [esi+28h] 0 +
mov byte ptr [esi+2Ch] 0 +
mov byte ptr [esi+38h] 0 +
jmp loc_410681  +
movzx eax di +
sub eax 20h +
jz loc_410606  +
sub eax 3 +
jz loc_410600  +
sub eax 8 +
jz loc_4105F7  +
dec eax  +
sub eax 1 +
jz loc_4105EE  +
sub eax 3 +
jnz loc_410681  +
or dword ptr [esi+1Ch] 8 +
jmp loc_410681  +
or dword ptr [esi+1Ch] 4 +
jmp loc_410681  +
or dword ptr [esi+1Ch] 1 +
jmp loc_410681  +
or dword ptr [esi+1Ch] 20h +
jmp loc_410681  +
or dword ptr [esi+1Ch] 2 +
jmp loc_410681  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_410621  +
lea eax [esi+20h] +
push eax  +
mov ecx esi +
call sub_4101EF  +
jmp loc_410679  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+20h] eax +
test eax eax +
jns loc_41063B  +
or dword ptr [esi+1Ch] 4 +
neg eax  +
mov [esi+20h] eax +
mov al 1 +
jmp loc_410679  +
and dword ptr [esi+24h] 0 +
jmp loc_410681  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_410652  +
lea eax [esi+24h] +
jmp loc_410617  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+24h] eax +
test eax eax +
jns loc_41063B  +
or dword ptr [esi+24h] 0FFFFFFFFh +
jmp loc_41063B  +
mov ecx esi +
call sub_4106F9  +
jmp loc_410679  +
mov ecx esi +
call sub_410887  +
test al al +
jz loc_4104FF  +
mov eax [esi+0Ch] +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov edi ecx +
mov [esi+2Eh] cx +
lea eax [esi+14h] +
test cx cx +
jnz loc_41052C  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_410506  +
mov eax [esi+14h] +
jmp loc_410502  +
mov ecx [esi+8] +
mov byte ptr [ecx+1Ch] 1 +
mov dword ptr [ecx+18h] 16h +
xor ecx ecx +
push dword ptr [esi+8]  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
jmp loc_4104F7  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_410CD5  +
movzx eax ds:byte_410CF0[eax] +
jmp ds:off_410CDC[eax*4]  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
pop eax  +
pop ebp  +
retn   +
push 4  +
jmp loc_410CCA  +
push 8  +
jmp loc_410CCA  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+1Ch] +
mov dword ptr [ecx+28h] 0Ah +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
add eax 0FFFFFFFEh +
mov [ecx] eax +
mov cx [ebp+arg_0] +
test cx cx +
jz loc_411146  +
cmp [eax] cx +
jz loc_411146  +
call sub_40D947  +
mov dword ptr [eax] 16h +
call sub_40D86C  +
pop ebp  +
retn 4  +
***
mov edi edi +
cmp dword ptr [ecx] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
lea ecx [ebp+var_28] +
push esi  +
push [ebp+arg_14]  +
call sub_40D560  +
push [ebp+arg_18]  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_40EF0E  +
add esp 1Ch +
lea ecx [ebp+var_28] +
mov esi eax +
call sub_40D5A8  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
test eax eax +
jz loc_411356  +
inc edx  +
sub ebx 1 +
jbe loc_411356  +
test dl 3 +
jnz loc_411310  +
lea eax [ecx+edx] +
and eax 0FFFh +
cmp eax 0FFCh +
ja loc_411310  +
mov eax [ecx+edx] +
cmp eax [edx] +
jnz loc_411310  +
sub ebx 4 +
jbe loc_411356  +
lea esi [eax-1010101h] +
add edx 4 +
not eax  +
and eax esi +
test eax 80808080h +
jz loc_411327  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
call sub_40A970  +
mov eax [ebp+10h] +
call sub_40A970  +
mov eax [ebp+10h] +
call sub_40A970  +
mov eax [ebp+10h] +
call sub_40A970  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_42F050 +
mov edi edi +
mov edi edi +
mov dword_42F050 eax +
mov eax dword_42F050 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jbe loc_411BA7  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
pop ecx  +
retn   +
***
cmp byte_430484 0 +
call sub_4116E0  +
mov edi edi +
mov edi edi +
call ds:GetCommandLineA  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push offset aLcmapstringex  +
push offset aLocalenametolc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_42F008 +
mov edi edi +
call ds:GetProcessHeap  +
and hHeap 0 +
mov al 1 +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 48h +
lea eax [ebp-48h] +
push eax  +
call ds:GetStartupInfoW  +
cmp word ptr [ebp-16h] 0 +
jz locret_41307A  +
push ebx  +
mov ebx [ebp-14h] +
test ebx ebx +
jz loc_413079  +
push esi  +
mov esi [ebx] +
lea eax [ebx+4] +
add eax esi +
mov [ebp-4] eax +
mov eax 2000h +
cmp esi eax +
jl loc_413005  +
mov esi eax +
push esi  +
call sub_413B68  +
mov eax dword_430780 +
pop ecx  +
cmp esi eax +
jle loc_413017  +
mov esi eax +
push edi  +
xor edi edi +
test esi esi +
jz loc_413077  +
mov eax [ebp-4] +
mov ecx [eax] +
cmp ecx 0FFFFFFFFh +
jz loc_41306C  +
cmp ecx 0FFFFFFFEh +
jz loc_41306C  +
mov dl [edi+ebx+4] +
test dl 1 +
jz loc_41306C  +
test dl 8 +
jnz loc_413046  +
push ecx  +
call ds:GetFileType  +
test eax eax +
jz loc_413069  +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul edx eax +
mov eax [ebp-4] +
add edx dword_430580[ecx*4] +
mov eax [eax] +
mov [edx+18h] eax +
mov al [edi+ebx+4] +
mov [edx+28h] al +
mov eax [ebp-4] +
inc edi  +
add eax 4 +
mov [ebp-4] eax +
cmp edi esi +
jnz loc_413021  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_430580[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_4130A9  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_4130A9  +
or byte ptr [esi+28h] 80h +
jmp loc_41311E  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_4130C4  +
sub eax 1 +
jz loc_4130C0  +
sub eax 1 +
push 0FFFFFFF4h  +
jmp loc_4130C6  +
push 0FFFFFFF5h  +
jmp loc_4130C6  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_413100  +
test ebx ebx +
jz loc_413100  +
push ebx  +
call ds:GetFileType  +
test eax eax +
jz loc_413100  +
movzx eax al +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_4130F5  +
or byte ptr [esi+28h] 40h +
jmp loc_41311E  +
cmp eax 3 +
jnz loc_41311E  +
or byte ptr [esi+28h] 8 +
jmp loc_41311E  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax dword_43079C +
test eax eax +
jz loc_41311E  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_413083  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
cmp [eax-1] bh +
jmp fword ptr [edx+7]  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
pop ecx  +
call sub_40A970  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
mov esi [ebp+8] +
cmp byte ptr [ebp-19h] 0 +
jz locret_413596  +
push 3  +
call sub_411AF0  +
pop ecx  +
retn   +
***
call sub_40A970  +
mov eax [ebp+10h] +
call sub_40A970  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov eax dword_430798 +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 20h +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push 38h  +
push 40h  +
call sub_411B38  +
mov esi eax +
xor ebx ebx +
mov [ebp+var_8] esi +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_413ADB  +
mov esi ebx +
jmp loc_413B26  +
lea eax [esi+0E00h] +
cmp esi eax +
jz loc_413B26  +
push edi  +
lea edi [esi+20h] +
mov esi eax +
push ebx  +
push 0FA0h  +
lea eax [edi-20h] +
push eax  +
call sub_412E4D  +
or dword ptr [edi-8] 0FFFFFFFFh +
and byte ptr [edi+0Dh] 0F8h +
mov [edi] ebx +
lea edi [edi+38h] +
mov [edi-34h] ebx +
lea eax [edi-20h] +
mov dword ptr [edi-30h] 0A0A0000h +
mov byte ptr [edi-2Ch] 0Ah +
mov [edi-2Ah] ebx +
mov [edi-26h] bl +
cmp eax esi +
jnz loc_413AEB  +
mov esi [ebp+var_8] +
pop edi  +
push ebx  +
call sub_411368  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call sub_40A970  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_4307A8 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp esi 0FFFFFFE0h +
ja loc_41400B  +
test esi esi +
jnz loc_413FF6  +
inc esi  +
jmp loc_413FF6  +
call sub_40EAB4  +
test eax eax +
jz loc_41400B  +
push esi  +
call sub_413260  +
pop ecx  +
test eax eax +
jz loc_41400B  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_413FE2  +
jmp loc_414018  +
call sub_40D947  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_42FFFC +
push esi  +
push edi  +
cmp eax 5 +
jl loc_4140A6  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_414048  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_41405B  +
cmp byte ptr [eax] 0 +
jz loc_41405B  +
inc eax  +
cmp eax ecx +
jnz loc_414051  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_414137  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFE0h +
add edi eax +
cmp eax 1 +
jl loc_41411D  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_4140C7  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_4140DA  +
cmp byte ptr [eax] 0 +
jz loc_4140DA  +
inc eax  +
cmp eax ecx +
jnz loc_4140D0  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_414137  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFF0h +
xorps xmm1 xmm1 +
add edi eax +
cmp eax edi +
jz loc_414108  +
movups xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_414108  +
add ecx 10h +
cmp ecx edi +
jnz loc_4140F2  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_414115  +
cmp byte ptr [ecx] 0 +
jz loc_414119  +
inc ecx  +
cmp ecx eax +
jnz loc_41410F  +
sub ecx esi +
jmp loc_414137  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_414135  +
cmp byte ptr [ecx] 0 +
jz loc_414135  +
inc ecx  +
cmp ecx eax +
jnz loc_41412B  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_42FFFC +
push esi  +
push edi  +
cmp eax 5 +
jl loc_4141D5  +
mov eax [ebp+8] +
test al 1 +
jz loc_41416E  +
mov ecx eax +
xor edx edx +
cmp [ecx] dx +
jz loc_414167  +
add ecx 2 +
jmp loc_41415D  +
***
sub ecx eax +
jmp loc_41425D  +
mov esi eax +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
xor edx edx +
and esi eax +
mov eax [ebp+8] +
shr esi 1 +
mov ecx eax +
lea edi [eax+esi*2] +
cmp eax edi +
jz loc_41419A  +
cmp [ecx] dx +
jz loc_41419A  +
add ecx 2 +
cmp ecx edi +
jnz loc_41418E  +
sub ecx eax +
sar ecx 1 +
cmp ecx esi +
jnz loc_41425F  +
lea ecx [eax+ecx*2] +
cmp eax 1 +
jl loc_41424B  +
mov eax [ebp+8] +
test al 1 +
jz loc_4141F3  +
mov ecx eax +
xor edx edx +
cmp [ecx] dx +
jz loc_414167  +
add ecx 2 +
jmp loc_4141E5  +
***
mov esi eax +
and esi 0Fh +
push 10h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
xor edx edx +
and esi eax +
mov eax [ebp+8] +
shr esi 1 +
mov ecx eax +
lea edi [eax+esi*2] +
cmp eax edi +
jz loc_41421F  +
cmp [ecx] dx +
jz loc_41421F  +
add ecx 2 +
cmp ecx edi +
jnz loc_414213  +
sub ecx eax +
sar ecx 1 +
cmp ecx esi +
jnz loc_41425F  +
lea ecx [eax+ecx*2] +
xorps xmm1 xmm1 +
movaps xmm0 xmm1 +
pcmpeqw xmm0 oword ptr [ecx] +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_414241  +
add ecx 10h +
jmp loc_41422D  +
***
cmp [ecx] dx +
jz loc_41425A  +
add ecx 2 +
jmp loc_414241  +
***
mov ecx [ebp+8] +
xor edx edx +
cmp [ecx] dx +
jz loc_41425A  +
add ecx 2 +
jmp loc_414250  +
***
sub ecx [ebp+8] +
sar ecx 1 +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_42FFFC +
push esi  +
push edi  +
cmp eax 5 +
jl loc_414331  +
mov ecx [ebp+8] +
test cl 1 +
jz loc_4142A3  +
mov edx ecx +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
shr edx 1 +
cmp eax edx +
jnb loc_4142BE  +
mov edx eax +
mov esi [ebp+8] +
lea edi [ecx+edx*2] +
xor eax eax +
cmp esi edi +
jz loc_4142D6  +
cmp [ecx] ax +
jz loc_4142D6  +
add ecx 2 +
cmp ecx edi +
jnz loc_4142CA  +
sub ecx esi +
sar ecx 1 +
cmp ecx edx +
jnz loc_41440F  +
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
and eax 0FFFFFFE0h +
add eax ecx +
mov eax [ebp+0Ch] +
mov esi ecx +
lea edx [ecx+eax*2] +
cmp esi edx +
jz loc_41429C  +
xor eax eax +
cmp [ecx] ax +
jz loc_41429C  +
add ecx 2 +
cmp ecx edx +
jnz loc_414354  +
jmp loc_41429C  +
***
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
xorps xmm1 xmm1 +
and eax 0FFFFFFF0h +
add eax ecx +
lea ecx [esi+eax*2] +
jmp loc_4143CB  +
movups xmm0 oword ptr [edi] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_4143CF  +
add edi 10h +
cmp edi ecx +
jnz loc_4143B9  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_4143E7  +
xor eax eax +
cmp [edi] ax +
jz loc_4143E7  +
add edi 2 +
cmp edi ecx +
jnz loc_4143DB  +
mov ecx edi +
jmp loc_41429C  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_42F008 +
xor eax eax +
or ecx 1 +
cmp dword_4307BC ecx +
setz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_42F008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_104] esi +
mov [ebp+var_108] ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_100] edi +
test esi esi +
jnz loc_415C1F  +
test ecx ecx +
jz loc_415C1F  +
call sub_40D947  +
mov dword ptr [eax] 16h +
call sub_40D86C  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_409FC1  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_415BFE  +
test ebx ebx +
jz loc_415BFE  +
mov [ebp+var_118] 0 +
cmp ecx 2 +
jb loc_415C0E  +
dec ecx  +
imul ecx edi +
add ecx esi +
mov [ebp+var_F8] ecx +
mov eax ecx +
xor edx edx +
sub eax esi +
div  edi +
inc eax  +
cmp eax 8 +
ja loc_415D0A  +
cmp ecx esi +
jbe loc_416083  +
lea edx [edi+esi] +
mov [ebp+var_110] edx +
mov eax esi +
mov esi edx +
mov [ebp+var_FC] eax +
cmp esi ecx +
ja loc_415CA2  +
push eax  +
push esi  +
mov ecx ebx +
call ds:off_41F2BC  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_415C90  +
mov eax esi +
mov [ebp+var_FC] eax +
jmp loc_415C96  +
mov eax [ebp+var_FC] +
mov ecx [ebp+var_F8] +
add esi edi +
cmp esi ecx +
jbe loc_415C73  +
mov [ebp+var_10C] edi +
mov edx ecx +
cmp eax ecx +
jz loc_415CE9  +
sub eax ecx +
mov ebx edi +
mov [ebp+var_FC] eax +
jmp loc_415CC0  +
mov cl [eax+edx] +
lea edx [edx+1] +
mov esi [ebp+var_FC] +
mov al [edx-1] +
mov [esi+edx-1] al +
mov eax esi +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_415CC0  +
mov ebx [ebp+var_108] +
mov ecx [ebp+var_F8] +
mov esi [ebp+var_104] +
sub ecx edi +
mov edx [ebp+var_110] +
mov [ebp+var_F8] ecx +
cmp ecx esi +
ja loc_415C65  +
jmp loc_416083  +
shr eax 1 +
mov ecx ebx +
imul eax edi +
mov [ebp+var_FC] eax +
lea edi [eax+esi] +
push edi  +
push esi  +
mov [ebp+var_114] edi +
call ds:off_41F2BC  +
call ebx  +
mov esi [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_104] +
jle loc_415D8A  +
mov [ebp+var_10C] esi +
mov [ebp+var_110] edi +
cmp eax edi +
jz loc_415D8A  +
mov ebx [ebp+var_10C] +
mov esi edi +
mov edi [ebp+var_FC] +
jmp loc_415D60  +
mov al [esi] +
mov edx esi +
sub edx edi +
mov cl [edx] +
mov [edx] al +
mov [esi] cl +
inc esi  +
sub ebx 1 +
jnz loc_415D60  +
mov edi [ebp+var_114] +
mov ebx [ebp+var_108] +
mov esi [ebp+var_100] +
mov eax [ebp+var_104] +
push [ebp+var_F8]  +
mov ecx ebx +
push eax  +
call ds:off_41F2BC  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
jle loc_415DF1  +
mov eax [ebp+var_104] +
mov [ebp+var_114] esi +
mov esi edx +
cmp eax edx +
jz loc_415DF1  +
mov ebx [ebp+var_114] +
sub eax edx +
mov [ebp+var_110] eax +
mov edx eax +
lea ebx [ebx+0] +
mov al [esi] +
lea esi [esi+1] +
mov cl [edx+esi-1] +
mov [edx+esi-1] al +
mov [esi-1] cl +
sub ebx 1 +
jnz loc_415DD0  +
mov ebx [ebp+var_108] +
mov edx [ebp+var_F8] +
push edx  +
push edi  +
mov ecx ebx +
call ds:off_41F2BC  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_415E45  +
mov ebx eax +
mov esi edx +
cmp edi edx +
jz loc_415E45  +
mov eax edi +
sub eax edx +
mov [ebp+var_114] eax +
mov edx eax +
mov al [esi] +
lea esi [esi+1] +
mov cl [edx+esi-1] +
mov [edx+esi-1] al +
mov [esi-1] cl +
sub ebx 1 +
jnz loc_415E24  +
mov eax [ebp+var_100] +
mov edx [ebp+var_F8] +
mov esi [ebp+var_104] +
mov ebx edx +
mov [ebp+var_FC] edx +
cmp edi esi +
jbe loc_415E95  +
jmp loc_415E60  +
add esi eax +
mov [ebp+var_10C] esi +
cmp esi edi +
jnb loc_415E8F  +
mov ecx [ebp+var_108] +
push edi  +
push esi  +
call ds:off_41F2BC  +
call [ebp+var_108]  +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_415E60  +
jmp loc_415ED1  +
mov edx [ebp+var_F8] +
mov ebx [ebp+var_108] +
jmp loc_415EA0  +
add esi eax +
cmp esi edx +
ja loc_415EC5  +
push edi  +
push esi  +
mov ecx ebx +
call ds:off_41F2BC  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_415EA0  +
mov ebx [ebp+var_FC] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_108] +
jmp loc_415EE0  +
mov eax [ebp+var_100] +
mov ecx ebx +
sub ebx eax +
mov [ebp+var_FC] ecx +
cmp ebx edi +
jbe loc_415F13  +
push edi  +
push ebx  +
mov ecx esi +
call ds:off_41F2BC  +
call esi  +
add esp 8 +
test eax eax +
jg loc_415EE0  +
mov eax [ebp+var_100] +
mov ecx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_FC] ebx +
cmp ebx esi +
jb loc_415F6D  +
mov [ebp+var_110] eax +
mov edx ebx +
jz loc_415F58  +
sub esi ebx +
mov ebx eax +
mov al [edx] +
lea edx [edx+1] +
mov cl [esi+edx-1] +
mov [esi+edx-1] al +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_415F31  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_FC] +
mov eax [ebp+var_100] +
mov edx [ebp+var_F8] +
cmp edi ebx +
jnz loc_415E53  +
mov edi esi +
jmp loc_415E53  +
cmp edi ecx +
jnb loc_415FAD  +
mov ebx [ebp+var_108] +
jmp loc_415F80  +
sub ecx eax +
mov [ebp+var_FC] ecx +
cmp ecx edi +
jbe loc_415FAD  +
push edi  +
push ecx  +
mov ecx ebx +
call ds:off_41F2BC  +
call ebx  +
mov ecx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jz loc_415F80  +
jmp loc_415FF1  +
mov ebx [ebp+var_108] +
mov esi [ebp+var_104] +
lea esp [esp+0] +
sub ecx eax +
mov [ebp+var_FC] ecx +
cmp ecx esi +
jbe loc_415FEB  +
push edi  +
push ecx  +
mov ecx ebx +
call ds:off_41F2BC  +
call ebx  +
mov ecx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jz loc_415FC0  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov ecx edx +
mov edi [ebp+var_FC] +
sub ecx esi +
mov eax edi +
sub eax [ebp+var_104] +
cmp eax ecx +
jl loc_41604A  +
mov eax [ebp+var_104] +
cmp eax edi +
jnb loc_41602F  +
mov ecx [ebp+var_118] +
mov [ebp+ecx*4+var_7C] eax +
mov [ebp+ecx*4+var_F4] edi +
inc ecx  +
mov [ebp+var_118] ecx +
mov ecx [ebp+var_F8] +
mov edi [ebp+var_100] +
cmp esi ecx +
jnb loc_416083  +
mov [ebp+var_104] esi +
jmp loc_415C42  +
cmp esi edx +
jnb loc_416066  +
mov eax [ebp+var_118] +
mov [ebp+eax*4+var_7C] esi +
mov [ebp+eax*4+var_F4] edx +
inc eax  +
mov [ebp+var_118] eax +
mov esi [ebp+var_104] +
cmp esi edi +
jnb loc_41607D  +
mov ecx edi +
mov edi [ebp+var_100] +
jmp loc_415C3C  +
mov edi [ebp+var_100] +
mov eax [ebp+var_118] +
sub eax 1 +
mov [ebp+var_118] eax +
js loc_415C0E  +
mov esi [ebp+eax*4+var_7C] +
mov ecx [ebp+eax*4+var_F4] +
mov [ebp+var_104] esi +
jmp loc_415C3C  +
***
add edx 1 +
bts [esp] eax +
jmp loc_4160C4  +
***
mov edi edi +
mov edi edi +
call sub_412673  +
mov edi edi +
mov edi edi +
call sub_40A970  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_41E889  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_42F008 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
mov edx eax +
mov esi [ebp+arg_8] +
and eax 3Fh +
mov ebx [ebp+arg_10] +
imul ecx eax +
sar edx 6 +
mov [ebp+var_60] esi +
mov [ebp+var_3C] ebx +
mov [ebp+var_50] edx +
mov eax dword_430580[edx*4] +
mov [ebp+var_44] ecx +
mov eax [eax+ecx+18h] +
mov [ebp+hFile] eax +
mov eax [ebp+arg_C] +
add eax esi +
mov [ebp+var_54] eax +
call ds:GetConsoleOutputCP  +
cmp byte ptr [ebx+14h] 0 +
mov [ebp+CodePage] eax +
jnz loc_41654A  +
mov ecx ebx +
call sub_411150  +
mov eax [ebx+0Ch] +
mov esi [ebp+arg_0] +
mov edi esi +
mov eax [eax+8] +
mov [ebp+var_68] eax +
xor eax eax +
stos   +
stos   +
stos   +
mov eax [ebp+var_60] +
mov edx eax +
mov [ebp+var_30] edx +
cmp eax [ebp+var_54] +
jnb loc_416882  +
mov edi [ebp+var_44] +
xor ebx ebx +
mov [ebp+var_48] ebx +
cmp [ebp+var_68] 0FDE9h +
mov al [edx] +
mov [ebp+var_31] al +
mov eax [ebp+var_50] +
mov dword ptr [ebp+WideCharStr] ebx +
mov [ebp+cchWideChar] 1 +
mov ecx dword_430580[eax*4] +
mov [ebp+var_4C] ecx +
jnz loc_4166D3  +
add ecx 2Eh +
mov eax ebx +
add ecx edi +
cmp [ecx] bl +
jz loc_4165B1  +
inc eax  +
inc ecx  +
cmp eax 5 +
jl loc_4165A6  +
mov edi [ebp+var_54] +
sub edi edx +
mov [ebp+cchWideChar] eax +
test eax eax +
jz loc_416678  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_44] +
add eax 2Eh +
add eax ecx +
mov [ebp+var_4C] eax +
movzx eax byte ptr [eax] +
movsx eax byte_42F758[eax] +
inc eax  +
mov [ebp+var_38] eax +
sub eax [ebp+cchWideChar] +
mov [ebp+var_48] eax +
cmp eax edi +
jg loc_416809  +
mov ecx [ebp+cchWideChar] +
mov edi ebx +
mov esi [ebp+var_4C] +
mov al [esi] +
mov byte ptr [ebp+edi+var_18] al +
inc edi  +
inc esi  +
cmp edi ecx +
jl loc_4165F3  +
mov edi [ebp+var_48] +
test edi edi +
jle loc_416619  +
push edi  +
lea eax [ebp+var_18] +
add eax ecx +
push edx  +
push eax  +
call loc_40BF70  +
mov ecx [ebp+cchWideChar] +
add esp 0Ch +
mov edi [ebp+var_44] +
mov edx ebx +
mov esi [ebp+var_50] +
mov eax dword_430580[esi*4] +
add eax edi +
mov [eax+edx+2Eh] bl +
inc edx  +
cmp edx ecx +
jl loc_416621  +
push [ebp+var_3C]  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_18] +
mov [ebp+var_6C] eax +
lea ecx [ebp+var_78] +
xor eax eax +
mov [ebp+var_78] ebx +
cmp [ebp+var_38] 4 +
push ecx  +
setz al  +
mov [ebp+var_74] ebx +
inc eax  +
push eax  +
mov [ebp+cchWideChar] eax +
lea eax [ebp+var_6C] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_418DFD  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_416882  +
mov eax [ebp+var_30] +
add eax [ebp+var_48] +
jmp loc_4166CD  +
movzx eax byte ptr [edx] +
movsx ecx byte_42F758[eax] +
inc ecx  +
mov [ebp+var_4C] ecx +
cmp ecx edi +
jg loc_416838  +
push [ebp+var_3C]  +
xor eax eax +
mov [ebp+var_80] ebx +
cmp ecx 4 +
mov [ebp+var_7C] ebx +
lea ecx [ebp+var_80] +
mov [ebp+var_38] edx +
setz al  +
inc eax  +
push ecx  +
push eax  +
mov [ebp+cchWideChar] eax +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_418DFD  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_416882  +
mov eax [ebp+var_30] +
add eax [ebp+var_4C] +
mov edi [ebp+var_44] +
dec eax  +
jmp loc_416758  +
mov ah [edi+ecx+2Dh] +
test ah 4 +
jz loc_4166FA  +
mov al [edi+ecx+2Eh] +
and ah 0FBh +
push [ebp+var_3C]  +
mov byte ptr [ebp+var_20] al +
mov al [edx] +
mov byte ptr [ebp+var_20+1] al +
mov [edi+ecx+2Dh] ah +
lea eax [ebp+var_20] +
push 2  +
push eax  +
jmp loc_416740  +
mov eax [ebp+var_3C] +
movzx ecx byte ptr [edx] +
mov eax [eax+0Ch] +
mov eax [eax] +
cmp [eax+ecx*2] bx +
jge loc_41673A  +
lea eax [edx+1] +
mov [ebp+var_38] eax +
cmp eax [ebp+var_54] +
jnb loc_416859  +
push [ebp+var_3C]  +
lea eax [ebp+WideCharStr] +
push 2  +
push edx  +
push eax  +
call sub_415A50  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_416882  +
mov eax [ebp+var_38] +
jmp loc_416758  +
push [ebp+var_3C]  +
push 1  +
push edx  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_415A50  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_416882  +
mov eax [ebp+var_30] +
push ebx  +
push ebx  +
inc eax  +
push 5  +
mov [ebp+var_30] eax +
lea eax [ebp+MultiByteStr] +
push eax  +
push [ebp+cchWideChar]  +
lea eax [ebp+WideCharStr] +
push eax  +
push ebx  +
push [ebp+CodePage]  +
call sub_412A50  +
add esp 20h +
mov [ebp+var_38] eax +
test eax eax +
jz loc_416882  +
push ebx  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [ebp+MultiByteStr] +
push eax  +
push [ebp+hFile]  +
call ds:WriteFile  +
test eax eax +
jz loc_41687A  +
mov edx [ebp+var_30] +
mov ecx edx +
sub ecx [ebp+var_60] +
mov eax [esi+8] +
add eax ecx +
mov [ebp+var_48] eax +
mov [esi+4] eax +
mov eax [ebp+var_38] +
cmp [ebp+NumberOfBytesWritten] eax +
jb loc_416882  +
cmp [ebp+var_31] 0Ah +
jnz loc_4167FE  +
push 0Dh  +
pop eax  +
push ebx  +
mov word ptr [ebp+var_58] ax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+var_58] +
push eax  +
push [ebp+hFile]  +
call ds:WriteFile  +
test eax eax +
jz loc_41687A  +
cmp [ebp+NumberOfBytesWritten] 1 +
jb loc_416882  +
inc dword ptr [esi+8]  +
inc dword ptr [esi+4]  +
mov eax [esi+4] +
mov edx [ebp+var_30] +
mov [ebp+var_48] eax +
cmp edx [ebp+var_54] +
jb loc_416576  +
jmp loc_416882  +
test edi edi +
jle loc_416833  +
mov eax [ebp+var_30] +
mov esi [ebp+cchWideChar] +
mov edx [ebp+var_50] +
mov edx dword_430580[edx*4] +
add edx ecx +
mov cl [ebx+eax] +
add edx ebx +
inc ebx  +
mov [edx+esi+2Eh] cl +
mov ecx [ebp+var_44] +
cmp ebx edi +
jl loc_416813  +
mov esi [ebp+arg_0] +
add [esi+4] edi +
jmp loc_416882  +
test edi edi +
jle loc_416833  +
mov esi [ebp+var_44] +
mov eax [ebp+var_50] +
mov ecx dword_430580[eax*4] +
mov al [ebx+edx] +
add ecx esi +
mov [ecx+ebx+2Eh] al +
inc ebx  +
cmp ebx edi +
jl loc_41683F  +
jmp loc_416830  +
mov eax [ebp+var_4C] +
mov cl [edx] +
mov [edi+eax+2Eh] cl +
mov eax [ebp+var_50] +
mov eax dword_430580[eax*4] +
or byte ptr [eax+edi+2Dh] 4 +
mov eax [ebp+var_48] +
inc eax  +
mov [esi+4] eax +
jmp loc_416882  +
call ds:GetLastError  +
mov [esi] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_409FC1  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
mov [ebp+lpBuffer] eax +
mov [ebp+nNumberOfBytesToWrite] ecx +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test ecx ecx +
jz loc_416F80  +
test eax eax +
jnz loc_416DDA  +
xor eax eax +
mov byte ptr [ebx+24h] 1 +
push ebx  +
push eax  +
push eax  +
push eax  +
mov [ebx+20h] eax +
push eax  +
mov byte ptr [ebx+1Ch] 1 +
push eax  +
mov dword ptr [ebx+18h] 16h +
call sub_40D7EF  +
add esp 18h +
or eax 0FFFFFFFFh +
jmp loc_416F82  +
mov eax edi +
mov esi edi +
and eax 3Fh +
sar esi 6 +
imul edx eax +
mov [ebp+var_10] esi +
mov eax dword_430580[esi*4] +
mov [ebp+var_30] eax +
mov [ebp+var_14] edx +
mov al [edx+eax+29h] +
mov [ebp+var_1] al +
cmp al 2 +
jz loc_416E06  +
cmp al 1 +
jnz loc_416E0E  +
mov eax ecx +
not eax  +
test al 1 +
jz loc_416DB0  +
mov eax [ebp+var_30] +
xor esi esi +
test byte ptr [edx+eax+28h] 20h +
jz loc_416E28  +
push ebx  +
push 2  +
push esi  +
push esi  +
push edi  +
call sub_418FA4  +
add esp 14h +
push ebx  +
push edi  +
call sub_41690B  +
pop ecx  +
pop ecx  +
test al al +
jz loc_416E75  +
mov al [ebp+var_1] +
test al al +
jz loc_416E5F  +
dec al  +
cmp al 1 +
ja loc_416F48  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_2C] +
push [ebp+lpBuffer]  +
push eax  +
call sub_4168A3  +
add esp 0Ch +
mov esi eax +
jmp loc_416F06  +
push ebx  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_2C] +
push [ebp+lpBuffer]  +
push edi  +
push eax  +
call sub_4164D1  +
add esp 14h +
jmp loc_416E58  +
mov eax [ebp+var_10] +
mov ecx dword_430580[eax*4] +
mov eax [ebp+var_14] +
cmp byte ptr [eax+ecx+28h] 0 +
jge loc_416ED8  +
movsx eax [ebp+var_1] +
sub eax esi +
jz loc_416EC6  +
sub eax 1 +
jz loc_416EB4  +
sub eax 1 +
jnz loc_416F48  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_2C] +
push [ebp+lpBuffer]  +
push edi  +
push eax  +
call sub_416A64  +
add esp 10h +
jmp loc_416E58  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_2C] +
push [ebp+lpBuffer]  +
push edi  +
push eax  +
call sub_416B4D  +
jmp loc_416EAF  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_2C] +
push [ebp+lpBuffer]  +
push edi  +
push eax  +
call sub_416989  +
jmp loc_416EAF  +
mov ecx [eax+ecx+18h] +
lea edi [ebp+var_2C] +
xor eax eax +
stos   +
push esi  +
stos   +
stos   +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+nNumberOfBytesToWrite]  +
push [ebp+lpBuffer]  +
push ecx  +
call ds:WriteFile  +
test eax eax +
jnz loc_416F03  +
call ds:GetLastError  +
mov [ebp+var_2C] eax +
lea esi [ebp+var_2C] +
lea edi [ebp+var_20] +
movs   +
movs   +
movs   +
mov eax [ebp+var_1C] +
test eax eax +
jnz loc_416F7B  +
mov eax [ebp+var_20] +
test eax eax +
jz loc_416F46  +
push 5  +
pop ecx  +
cmp eax ecx +
jnz loc_416F38  +
mov byte ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+18h] 9 +
mov byte ptr [ebx+24h] 1 +
mov [ebx+20h] ecx +
jmp loc_416DD2  +
push ebx  +
push eax  +
call sub_40D910  +
pop ecx  +
pop ecx  +
jmp loc_416DD2  +
xor esi esi +
mov eax [ebp+var_10] +
mov ecx [ebp+var_14] +
mov eax dword_430580[eax*4] +
test byte ptr [ecx+eax+28h] 40h +
jz loc_416F64  +
mov eax [ebp+lpBuffer] +
cmp byte ptr [eax] 1Ah +
jz loc_416F80  +
mov byte ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+18h] 1Ch +
mov byte ptr [ebx+24h] 1 +
mov [ebx+20h] esi +
jmp loc_416DD2  +
sub eax [ebp+var_18] +
jmp loc_416F82  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call sub_40A970  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ecx ecx +
test edi edi +
jnz loc_4172ED  +
mov eax [ebp+arg_18] +
push 16h  +
pop esi  +
push eax  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
mov byte ptr [eax+1Ch] 1 +
mov [eax+18h] esi +
call sub_40D7EF  +
add esp 18h +
mov eax esi +
jmp loc_4173B0  +
push ebx  +
cmp [ebp+arg_4] ecx +
jbe loc_417311  +
mov edx [ebp+arg_8] +
mov eax edx +
mov [edi] cl +
test edx edx +
jg loc_417300  +
mov eax ecx +
inc eax  +
cmp [ebp+arg_4] eax +
ja loc_41730A  +
push 22h  +
jmp loc_417313  +
mov ebx [ebp+arg_C] +
test ebx ebx +
jnz loc_417330  +
push 16h  +
mov eax [ebp+arg_18] +
pop esi  +
push eax  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
mov [eax+18h] esi +
push ecx  +
mov byte ptr [eax+1Ch] 1 +
call sub_40D7EF  +
add esp 18h +
mov eax esi +
jmp loc_4173AF  +
mov eax [ebx+8] +
lea esi [edi+1] +
mov [ebp+var_4] eax +
mov byte ptr [edi] 30h +
test edx edx +
jle loc_417356  +
mov bl [eax] +
test bl bl +
jz loc_417349  +
inc eax  +
jmp loc_41734B  +
mov bl 30h +
mov [esi] bl +
inc esi  +
dec edx  +
test edx edx +
jg loc_417340  +
mov ebx [ebp+arg_C] +
mov [esi] cl +
test edx edx +
js loc_417384  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push dword ptr [ebx]  +
push eax  +
push [ebp+var_4]  +
call sub_41723C  +
add esp 14h +
test al al +
jz loc_417384  +
jmp loc_417379  +
mov byte ptr [esi] 30h +
dec esi  +
mov al [esi] +
cmp al 39h +
jz loc_417376  +
inc al  +
mov [esi] al +
cmp byte ptr [edi] 31h +
jnz loc_41738E  +
inc dword ptr [ebx+4]  +
jmp loc_4173AD  +
lea esi [edi+1] +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_417396  +
sub ecx edx +
lea eax [ecx+1] +
push eax  +
push esi  +
push edi  +
call loc_40ACA0  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
call sub_419718  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_40A970  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_419149  +
pop ecx  +
test eax eax +
jnz loc_4191F9  +
mov eax [ebp+arg_0] +
mov edx [ebp+var_8] +
mov ecx [ebp+var_4] +
mov [eax] edx +
or edx 1Fh +
mov [eax+4] ecx +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_8] edx +
call sub_419166  +
pop ecx  +
test eax eax +
jnz loc_4191F9  +
call sub_4149CD  +
xor eax eax +
leave   +
retn   +
xor eax eax +
inc eax  +
leave   +
retn   +
***
cmp dword_431708 0 +
jz loc_41923B  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_419230  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_41923B  +
jmp sub_419EE0  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_41A668  +
call sub_419258  +
add esp 0Ch +
retn   +
***
jz loc_4192AB  +
cmp dword_431708 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_42F008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] eax +
push edi  +
test esi esi +
jnz loc_419A1D  +
mov esi offset unk_4307C0 +
xor edx edx +
xor edi edi +
inc edx  +
test ecx ecx +
jnz loc_419A5D  +
mov ecx offset unk_42A3AA +
mov [ebp+var_28] edi +
mov eax edx +
mov [ebp+var_18] ecx +
mov [ebp+arg_8] eax +
xor eax eax +
cmp [esi+6] ax +
jnz loc_419AB6  +
mov bl [ecx] +
inc ecx  +
mov [ebp+var_18] ecx +
test bl bl +
js loc_419A79  +
test edi edi +
jz loc_419A51  +
movzx eax bl +
mov [edi] eax +
xor eax eax +
test bl bl +
setnz al  +
jmp loc_419B9C  +
mov edi ecx +
mov [ebp+var_18] ecx +
neg edi  +
sbb edi edi +
and edi ebx +
cmp [ebp+arg_8] 0 +
mov [ebp+var_28] edi +
jnz loc_419A36  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_419B9C  +
mov al bl +
and al 0E0h +
cmp al 0C0h +
jnz loc_419A85  +
mov bh 2 +
jmp loc_419A9F  +
mov al bl +
and al 0F0h +
cmp al 0E0h +
jnz loc_419A91  +
mov bh 3 +
jmp loc_419A9F  +
mov al bl +
and al 0F8h +
cmp al 0F0h +
jnz loc_419B91  +
mov bh 4 +
push 7  +
movzx eax bh +
pop ecx  +
sub ecx eax +
mov [ebp+var_11] bh +
shl edx cl +
mov cl bh +
dec edx  +
movzx eax bl +
and edx eax +
jmp loc_419ADB  +
mov bh [esi+4] +
mov edx [esi] +
mov al bh +
mov cl [esi+6] +
sub al 2 +
cmp al 2 +
ja loc_419B91  +
cmp cl 1 +
jb loc_419B91  +
cmp cl bh +
jnb loc_419B91  +
movzx eax cl +
mov [ebp+var_24] eax +
mov eax [ebp+arg_8] +
cmp [ebp+var_24] eax +
jnb loc_419AEF  +
mov eax [ebp+var_24] +
mov [ebp+arg_8] eax +
mov edi [ebp+var_18] +
sub edi [ebp+var_20] +
mov [ebp+var_20] edi +
cmp edi eax +
mov edi [ebp+var_28] +
jnb loc_419B26  +
mov eax [ebp+var_18] +
mov bl [eax] +
inc eax  +
inc [ebp+var_20]  +
mov [ebp+var_18] eax +
mov al bl +
and al 0C0h +
cmp al 80h +
jnz loc_419B91  +
movzx eax bl +
and eax 3Fh +
shl edx 6 +
or edx eax +
mov eax [ebp+arg_8] +
cmp [ebp+var_20] eax +
jb loc_419AFF  +
cmp eax [ebp+var_24] +
jnb loc_419B45  +
movzx eax bh +
mov [esi+4] ax +
mov eax [ebp+arg_8] +
sub cl al +
movzx eax cl +
mov [esi] edx +
mov [esi+6] ax +
jmp loc_419A71  +
cmp edx 0D800h +
jb loc_419B55  +
cmp edx 0DFFFh +
jbe loc_419B91  +
cmp edx 10FFFFh +
ja loc_419B91  +
movzx eax bh +
mov [ebp+var_10] 80h +
mov [ebp+var_C] 800h +
mov [ebp+var_8] 10000h +
cmp edx [ebp+eax*4+var_18] +
jb loc_419B91  +
test edi edi +
jz loc_419B81  +
mov [edi] edx +
neg edx  +
push esi  +
sbb edx edx +
and edx [ebp+var_24] +
push edx  +
call sub_4199B7  +
jmp loc_419B9A  +
push [ebp+var_1C]  +
push esi  +
call sub_4199CB  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_409FC1  +
leave   +
retn   +
***
xor eax eax +
mov ecx hObject +
mov eax hObject +
mov edi edi +
call sub_40A970  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_431708 eax +
xor eax eax +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_419EFE  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_422AD0 +
movapd xmm2 oword ptr ds:oword_422AE0 +
movapd xmm3 oword ptr ds:oword_422B40 +
movapd xmm4 oword ptr ds:oword_422AF0 +
movapd xmm6 oword ptr ds:oword_422B00 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_423100[eax] +
movapd xmm7 oword ptr ds:oword_422CF0[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_41A056  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_422B90 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_422BA0 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_422BB0 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_422B10 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_422B20[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_422BC0 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_422B50 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_41A0BB  +
cmp ecx 0FFFFFFFFh +
jz loc_41A0D6  +
cmp ecx 7FEh +
ja loc_41A0EC  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_422AD0 +
movapd xmm2 oword ptr ds:oword_422B40 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_41A0B4  +
fld  ds:dbl_422B78 +
retn   +
mov edx 3E9h +
jmp loc_41A10A  +
movlpd xmm2 oword ptr ds:oword_422B40 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_422B70 +
mov edx 8 +
jmp loc_41A10A  +
movlpd xmm1 oword ptr ds:oword_422B60 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_419F03  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_41A137  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_41A7C3  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_41A0FD  +
mov edx 3E9h +
jmp loc_41A10A  +
***
lea esp [esp+0] +
jmp loc_41A170  +
mov byte ptr [ebp-90h] 0FEh +
or ch ch +
jnz loc_41A1C5  +
fxch  st(1) +
fyl2x   +
jmp loc_41A19D  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_41A2CD  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_41A1B3  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_41A1BA  +
fscale   +
or ch ch +
jz loc_41A1C0  +
fchs   +
jmp loc_41A494  +
***
call sub_41A310  +
or eax eax +
jz loc_41A1E2  +
xor ch ch +
cmp eax 2 +
jz loc_41A1D7  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_41A17D  +
***
jmp loc_41A4CD  +
***
jmp loc_41A590  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_422BD0 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_41A1E2  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_422BDA +
retn   +
***
or cl cl +
jnz loc_41A27A  +
retn   +
***
fldlg2   +
jmp loc_41A22E  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_41A1E2  +
fyl2x   +
retn   +
***
jmp loc_41A4CD  +
***
call sub_41A310  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_41A257  +
fldz   +
cmp eax 1 +
jnz locret_41A256  +
or ch ch +
jz locret_41A256  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_422BD0 +
cmp eax 1 +
jnz locret_41A256  +
or ch ch +
jz locret_41A256  +
fchs   +
jmp locret_41A256  +
***
fstp  st +
***
jmp loc_41A4BA  +
***
fstp  st +
jmp loc_41A592  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_41A2A2  +
fstp  st +
fld  ds:tbyte_422BD0 +
or ch ch +
jz locret_41A2A1  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_41A4BA  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_41A336  +
fld  st +
fmul  ds:dbl_422C02 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_41A33D  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_41A335  +
mov eax 2 +
jmp locret_41A335  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_41AAD4  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_41A375  +
jmp sub_41A5A3  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_41A397  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_41A39B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_422C5E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_41F2BC  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_41A40C  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_41A410  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_422C5E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_41F2BC  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
call sub_41A5A3  +
***
fxch  st(1) +
lea esp [esp+0] +
lea ecx [ecx+0] +
fstp  st +
lea esp [esp+0] +
lea esp [esp+0] +
retn   +
***
call sub_41A5A3  +
jmp loc_41A4A0  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_41A4CC  +
fchs   +
retn   +
***
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_41A4FD  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_422C4E +
retn   +
***
jmp loc_41A510  +
fxch  st(1) +
lea esp [esp+0] +
lea esp [esp+0] +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_41A53E  +
mov byte ptr [ebp-90h] 0 +
jmp loc_41A545  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_41A585  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_41A585  +
mov byte ptr [ebp-90h] 0 +
jmp loc_41A58C  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_422C44 +
or ch ch +
jz loc_41A5C0  +
fchs   +
or cl cl +
jz locret_41A5CC  +
fld  ds:dbl_422C56 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_41A5D3  +
fchs   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_41A679  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_41A689  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_41A6B3  +
and ax 20h +
jz loc_41A6B0  +
fstsw  ax +
and ax 20h +
jz loc_41A6B0  +
mov eax 8 +
call sub_41A787  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  [esp+8+var_8] +
mov eax dword ptr [esp+8+var_8+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_41A71A  +
cmp eax 7FF00000h +
jz loc_41A743  +
mov ax [esp+0] +
cmp ax 27Fh +
jz loc_41A718  +
and ax 20h +
jnz loc_41A715  +
fstsw  ax +
and ax 20h +
jz loc_41A715  +
mov eax 8 +
cmp edx 1Dh +
jz loc_41A70E  +
call sub_41A787  +
pop edx  +
retn   +
call sub_41A770  +
pop edx  +
retn   +
fldcw  word ptr [esp+0] +
pop edx  +
retn   +
fld  ds:dbl_422C9C +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_422C8C +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_41A702  +
fmul  ds:dbl_422CAC +
jmp loc_41A702  +
fld  ds:dbl_422C94 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_422C84 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_41A702  +
fmul  ds:dbl_422CA4 +
jmp loc_41A702  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
cmp dword_4307CC 0 +
push esi  +
push edi  +
jz loc_41A7E6  +
push dword_431704  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_41A7EB  +
mov edi offset sub_40E869 +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_41A8D5  +
jz loc_41A8C9  +
cmp eax 0Eh +
jg loc_41A867  +
jz loc_41A854  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_41A845  +
sub eax 1 +
jz loc_41A839  +
sub eax 5 +
jz loc_41A82A  +
sub eax 1 +
jnz loc_41A9B3  +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_41A92B  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_41A978  +
mov [ebp+var_1C] offset unk_422CB4 +
jmp loc_41A92B  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset unk_422CB4 +
jmp loc_41A978  +
mov [ebp+var_20] 3 +
mov [ebp+var_1C] offset aExp +
jmp loc_41A978  +
sub eax 0Fh +
jz loc_41A8C0  +
sub eax 9 +
jz loc_41A8B4  +
sub eax 1 +
jnz loc_41A9B3  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_41F2BC  +
call edi  +
pop ecx  +
jmp loc_41A9AE  +
mov [ebp+var_20] 3 +
jmp loc_41A971  +
mov [ebp+var_1C] offset aExp +
jmp loc_41A881  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_41A9B3  +
sub eax 1Bh +
jz loc_41A96A  +
sub eax 1 +
jz loc_41A924  +
sub eax 15h +
jz loc_41A91B  +
sub eax 9 +
jz loc_41A912  +
sub eax 3 +
jz loc_41A909  +
sub eax 3ABh +
jz loc_41A902  +
sub eax 1 +
jnz loc_41A9B3  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_41A8CB  +
mov [ebp+var_1C] offset aAsin +
jmp loc_41A92B  +
mov [ebp+var_1C] offset aAcos +
jmp loc_41A92B  +
mov [ebp+var_1C] offset aSqrt +
jmp loc_41A92B  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_41F2BC  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_41A9AE  +
call sub_40D947  +
mov dword ptr [eax] 21h +
jmp loc_41A9AE  +
mov [ebp+var_20] 2 +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_41F2BC  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_41A9AE  +
call sub_40D947  +
mov dword ptr [eax] 22h +
fld  [ebp+var_8] +
fstp  qword ptr [esi] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_41B6CC  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_41B6C4  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_41B6CE  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_41B6B4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_42D150  +
push offset sub_40B2A0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_42F008 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_41B7A0  +
add esp 4 +
test eax eax +
jz loc_41B77F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_41B690  +
add esp 8 +
test eax eax +
jz loc_41B77F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
mov ecx [ebp-0Ch] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_42F008 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
or eax eax +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4236CC +
jz loc_41B911  +
push 0Ch  +
push esi  +
call sub_40A263  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_41B939  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_41B982  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_41B9C3  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_41B990  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_41B9BE  +
cmp edx [esp+arg_4] +
ja loc_41B9BE  +
jb loc_41B9BF  +
cmp eax [esp+arg_0] +
jbe loc_41B9BF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41BB20  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41BB20  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_41BA24  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_41BA40  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_41BA6C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_41BAB3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_41BA7A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_41BAA8  +
cmp edx [esp+arg_4] +
ja loc_41BAA8  +
jb loc_41BAB1  +
cmp eax [esp+arg_0] +
jbe loc_41BAB1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_41BAC5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_41BAD9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_41BAFA  +
cmp cl 20h +
jnb loc_41BAF0  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_41BB1A  +
cmp cl 20h +
jnb loc_41BB10  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_41BB44  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_41BB34  +
***
cmp dword_42FFFC 0 +
jmp loc_41BC17  +
pop ebp  +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
and dword ptr [ecx+4] 0 +
sub esp 0Ch +
sub esp 0Ch +
push ecx  +
push esi  +
push ecx  +
push esi  +
push esi  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
lea ecx [ebp+var_C] +
push [ebp+arg_0]  +
call sub_41BD83  +
push offset unk_42D238  +
lea eax [ebp+var_C] +
push eax  +
call sub_40D4D8  +
int 3  +
xor eax eax +
push edi  +
mov edi ecx +
inc eax  +
xadd dword_42F874 eax +
jnz loc_41BE0B  +
push esi  +
mov esi offset stru_4307E0 +
push esi  +
call sub_41C282  +
add esi 18h +
pop ecx  +
cmp esi offset unk_4308A0 +
jl loc_41BDF8  +
pop esi  +
mov eax edi +
pop edi  +
retn   +
***
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_41F2BC  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41BE64  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_41F2BC  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push esi  +
jmp loc_41BE82  +
mov eax [esi] +
mov ecx esi +
mov dword_4308C8 eax +
call sub_41BE36  +
push 8  +
push esi  +
call sub_40A263  +
pop ecx  +
pop ecx  +
mov esi dword_4308C8 +
test esi esi +
jnz loc_41BE6A  +
pop esi  +
retn   +
***
push esi  +
push [ebp+lpCriticalSection]  +
push 0  +
push 0FFFFFFFFh  +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_41D243  +
sub eax 1 +
jz loc_41D235  +
sub eax 1 +
jz loc_41D21B  +
sub eax 1 +
jz loc_41D1EF  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_41D19C  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_41C684  +
mov eax [esi] +
cmp eax [edx] +
jz loc_41C3C1  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jnz loc_41C395  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jnz loc_41C395  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_41C3A5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C3C3  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_41C3C3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C3C3  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_41C422  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jnz loc_41C3F6  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jnz loc_41C3F6  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_41C406  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C424  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_41C424  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C424  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_41C483  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jnz loc_41C457  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jnz loc_41C457  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_41C467  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C485  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_41C485  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C485  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_41C4E4  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jnz loc_41C4B8  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jnz loc_41C4B8  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_41C4C8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C4E6  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_41C4E6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C4E6  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_41C546  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jnz loc_41C51A  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jnz loc_41C51A  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_41C52A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C548  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_41C548  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C548  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_41C5A7  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jnz loc_41C57B  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jnz loc_41C57B  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_41C58B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C5A9  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_41C5A9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C5A9  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_41C608  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jnz loc_41C5DC  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jnz loc_41C5DC  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_41C5EC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C60A  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_41C60A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C60A  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_41C669  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jnz loc_41C63D  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jnz loc_41C63D  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_41C64D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C66B  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_41C66B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C66B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_41C36D  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_41C938  +
jmp ds:off_41D24A[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_41C6EF  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_41C6C3  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_41C6C3  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_41C6D3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C6F1  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_41C6F1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C6F1  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_41C750  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_41C724  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_41C724  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_41C734  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C752  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_41C752  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C752  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_41C7B1  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_41C785  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_41C785  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_41C795  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C7B3  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_41C7B3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C7B3  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_41C812  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_41C7E6  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jnz loc_41C7E6  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_41C7F6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C814  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_41C814  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C814  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_41C874  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jnz loc_41C848  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_41C848  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_41C858  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C876  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_41C876  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C876  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_41C8D5  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_41C8A9  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_41C8A9  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_41C8B9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C8D7  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_41C8D7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C8D7  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_41C932  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_41C906  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_41C906  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_41C916  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C934  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_41C934  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C934  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_41D245  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_41C999  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_41C96D  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_41C96D  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_41C97D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C99B  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_41C99B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C99B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_41C9F6  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_41C9CA  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_41C9CA  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_41C9DA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C9F8  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_41C9F8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C9F8  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_41CA57  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_41CA2B  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_41CA2B  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_41CA3B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CA59  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_41CA59  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CA59  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_41CAB8  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_41CA8C  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_41CA8C  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_41CA9C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CABA  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_41CABA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CABA  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_41CB19  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_41CAED  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jnz loc_41CAED  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_41CAFD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CB1B  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_41CB1B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CB1B  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_41CB7B  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_41CB4F  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_41CB4F  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_41CB5F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CB7D  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_41CB7D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CB7D  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_41CBDC  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_41CBB0  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_41CBB0  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_41CBC0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CBDE  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_41CBDE  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CBDE  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_41C93A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41C93A  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_41CC60  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_41CC34  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_41CC34  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_41CC44  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CC62  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_41CC62  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CC62  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_41CCC1  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_41CC95  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_41CC95  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_41CCA5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CCC3  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_41CCC3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CCC3  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_41CD22  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_41CCF6  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_41CCF6  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_41CD06  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CD24  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_41CD24  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CD24  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_41CD83  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_41CD57  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_41CD57  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_41CD67  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CD85  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_41CD85  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CD85  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_41CDE4  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_41CDB8  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_41CDB8  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_41CDC8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CDE6  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_41CDE6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CDE6  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_41CE46  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jnz loc_41CE1A  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_41CE1A  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_41CE2A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CE48  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_41CE48  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CE48  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_41CEA7  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_41CE7B  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_41CE7B  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_41CE8B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CEA9  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_41CEA9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CEA9  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_41C938  +
jmp loc_41D179  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_41CF1C  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jnz loc_41CEF0  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_41CEF0  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_41CF00  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CF1E  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_41CF1E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CF1E  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_41CF7D  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_41CF51  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_41CF51  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_41CF61  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CF7F  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_41CF7F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CF7F  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_41CFDE  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_41CFB2  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_41CFB2  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_41CFC2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41CFE0  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_41CFE0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CFE0  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_41D03F  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_41D013  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_41D013  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_41D023  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41D041  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_41D041  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D041  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_41D0A1  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jnz loc_41D075  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_41D075  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_41D085  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41D0A3  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_41D0A3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D0A3  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_41D102  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_41D0D6  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jnz loc_41D0D6  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_41D0E6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41D104  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_41D104  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D104  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_41D163  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_41D137  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_41D137  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_41D147  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41D165  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_41D165  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D165  +
xor ecx ecx +
test ecx ecx +
jnz loc_41C93A  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_41D189  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_41CBE6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41C93A  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jnz loc_41D1C1  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jnz loc_41D1C1  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_41D1D1  +
xor ecx ecx +
test esi esi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41D1EB  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_41D1EB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_41D245  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_41D20B  +
movzx edx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
sub edx eax +
jz loc_41D211  +
xor ecx ecx +
test edx edx +
jmp loc_41D1C5  +
movzx ecx byte ptr [ecx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_41D1D9  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_41D20B  +
movzx ecx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_41D1D9  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_41D1D9  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
cmp dword_42FFFC 1 +
jb loc_41D338  +
movzx eax byte ptr [esp+8] +
mov edx eax +
shl eax 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov edx [esp+4] +
mov ecx 0Fh +
or eax 0FFFFFFFFh +
and ecx edx +
shl eax cl +
sub edx ecx +
movdqu xmm1 qword ptr [edx] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
por xmm2 xmm1 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_41D327  +
or eax 0FFFFFFFFh +
add edx 10h +
jmp loc_41D303  +
***
bsf eax ecx +
add eax edx +
movd edx xmm3 +
xor ecx ecx +
cmp dl [eax] +
cmovnz eax ecx +
retn   +
***
xor eax eax +
mov al [esp+8] +
push ebx  +
mov ebx eax +
shl eax 8 +
mov edx [esp+8] +
test edx 3 +
jz loc_41D365  +
mov cl [edx] +
add edx 1 +
cmp cl bl +
jz loc_41D3B2  +
test cl cl +
jz loc_41D3AE  +
test edx 3 +
jnz loc_41D350  +
or ebx eax +
push edi  +
mov eax ebx +
shl ebx 10h +
push esi  +
or ebx eax +
mov ecx [edx] +
mov edi 7EFEFEFFh +
mov eax ecx +
mov esi edi +
xor ecx ebx +
add esi eax +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor eax 0FFFFFFFFh +
xor ecx edi +
xor eax esi +
add edx 4 +
and ecx 81010100h +
jnz loc_41D3B7  +
and eax 81010100h +
jz loc_41D370  +
and eax 1010100h +
jnz loc_41D3AC  +
and esi 80000000h +
jnz loc_41D370  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
***
lea eax [edx-1] +
pop ebx  +
retn   +
***
mov eax [edx-4] +
cmp al bl +
jz loc_41D3F4  +
test al al +
jz loc_41D3AC  +
cmp ah bl +
jz loc_41D3ED  +
test ah ah +
jz loc_41D3AC  +
shr eax 10h +
cmp al bl +
jz loc_41D3E6  +
test al al +
jz loc_41D3AC  +
cmp ah bl +
jz loc_41D3DF  +
test ah ah +
jz loc_41D3AC  +
jmp loc_41D370  +
***
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-4] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_42FFFC 1 +
jb loc_41D50E  +
mov edi [ebp+8] +
ja loc_41D48D  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_41D46D  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_41D43D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_41D4CE  +
xor eax eax +
test edi 0Fh +
jz loc_41D4B4  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_41D4CB  +
inc edi  +
test edi 0Fh +
jnz loc_41D49F  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_41D507  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_41D4F3  +
bsf edx edi +
add eax edx +
jmp loc_41D4CB  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_41D531  +
xor eax eax +
jmp loc_41D533  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
pop edi  +
add eax 4 +
jz loc_41D59B  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_41D5D6  +
sub eax 1 +
jnz loc_41D58D  +
pop ebx  +
retn   +
***
xor ch bl +
jz loc_41D5E1  +
shr ecx 10h +
xor cl bl +
jz loc_41D5DB  +
xor ch bl +
jz loc_41D5D5  +
jmp loc_41D59D  +
***
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop edi  +
pop ebx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_42F008 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 4  +
pop eax  +
call sub_41BB20  +
mov eax esp +
lea ecx [ebp+Buffer] +
push 1Ch  +
push ecx  +
push eax  +
mov [ebp+var_C] eax +
call ds:VirtualQuery  +
test eax eax +
jz loc_41D722  +
mov eax [ebp+Buffer.AllocationBase] +
mov [ebp+var_10] eax +
lea eax [ebp+SystemInfo] +
push eax  +
call ds:GetSystemInfo  +
mov ebx [ebp+SystemInfo.dwPageSize] +
lea eax [ebp+var_8] +
xor esi esi +
push eax  +
mov [ebp+var_8] esi +
call sub_412F26  +
test eax eax +
jz loc_41D6D1  +
cmp [ebp+var_8] esi +
jbe loc_41D6D1  +
mov esi [ebp+var_8] +
dec esi  +
mov edi ebx +
neg edi  +
add esi ebx +
and esi edi +
jz loc_41D6DE  +
add esi ebx +
lea eax [ebx+ebx] +
cmp esi eax +
jnb loc_41D6E7  +
mov esi eax +
and edi [ebp+var_C] +
mov eax [ebp+var_10] +
sub edi esi +
add eax ebx +
cmp edi eax +
jb loc_41D722  +
push 4  +
push 1000h  +
push esi  +
push edi  +
call ds:VirtualAlloc  +
test eax eax +
jz loc_41D722  +
lea eax [ebp+flOldProtect] +
push eax  +
push 104h  +
push esi  +
push edi  +
call ds:VirtualProtect  +
test eax eax +
jz loc_41D722  +
xor eax eax +
inc eax  +
jmp loc_41D724  +
xor eax eax +
lea esp [ebp-60h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_409FC1  +
leave   +
retn   +
***
mov ecx [esp+4] +
test ecx 3 +
jz loc_41D770  +
mov al [ecx] +
add ecx 1 +
test al al +
jz loc_41D7A3  +
test ecx 3 +
jnz loc_41D74C  +
add eax 0 +
lea esp [esp+0] +
lea esp [esp+0] +
mov eax [ecx] +
mov edx 7EFEFEFFh +
add edx eax +
xor eax 0FFFFFFFFh +
xor eax edx +
add ecx 4 +
test eax 81010100h +
jz loc_41D770  +
mov eax [ecx-4] +
test al al +
jz loc_41D7C1  +
test ah ah +
jz loc_41D7B7  +
test eax 0FF0000h +
jz loc_41D7AD  +
test eax 0FF000000h +
jz loc_41D7A3  +
jmp loc_41D770  +
***
lea eax [ecx-1] +
mov ecx [esp+4] +
sub eax ecx +
retn   +
***
lea eax [ecx-2] +
mov ecx [esp+4] +
sub eax ecx +
retn   +
***
lea eax [ecx-3] +
mov ecx [esp+4] +
sub eax ecx +
retn   +
***
lea eax [ecx-4] +
mov ecx [esp+4] +
sub eax ecx +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
mov edx [ebp+0Ch] +
lea ecx [ecx+0] +
mov al [edx] +
or al al +
jz loc_41D7F3  +
add edx 1 +
bts [esp] eax +
jmp loc_41D7E4  +
***
mov esi [ebp+8] +
or ecx 0FFFFFFFFh +
lea ecx [ecx+0] +
add ecx 1 +
mov al [esi] +
or al al +
jz loc_41D80E  +
add esi 1 +
bt [esp] eax +
jnb loc_41D7FC  +
mov eax ecx +
add esp 20h +
pop esi  +
leave   +
retn   +
***
cmp dword_431708 0 +
jz loc_41D85B  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_41D850  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_41D85B  +
jmp loc_41DAA0  +
***
sub esp 14h +
fxch  st(1) +
fstp  qword ptr [esp] +
fst  qword ptr [esp+8] +
mov eax [esp+0Ch] +
call sub_41D87D  +
add esp 14h +
retn   +
***
mov ecx eax +
fld  st +
mov dword_430A74 7080h +
xor eax eax +
mov dword_430A78 1 +
mov dword_430A7C 0FFFFF1F0h +
mov dword_430A80 offset off_42FA60 +
mov dword_430A84 offset off_42FA68 +
retn   +
***
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_425420 +
movlpd xmm2 oword ptr ds:oword_425430 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_4254D0[eax*4] +
movlpd xmm5 oword ptr ds:oword_4254D0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_4258E0[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_41DE07  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_425470+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_425420 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_4260F0[eax*4] +
mulsd xmm5 ds:qword_4260F0[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_426500[eax*4] +
orpd xmm4 oword ptr ds:oword_425430 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_425470+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_425480 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_426D10[eax*4] +
mulsd xmm2 ds:qword_426D10[eax*4] +
addpd xmm6 oword ptr ds:oword_427520[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_425470+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_41E178  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_41E53A  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_425470+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_428530 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_428540 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_41E2BE  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_425410 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_425410 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_428550[eax] +
movapd xmm6 oword ptr ds:oword_425450 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_425470 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_425460 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_425440 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_41DF10  +
or eax ecx +
cmp eax 0 +
jz loc_41E235  +
cmp edx 0 +
jge loc_41DF4F  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_41E038  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_41E131  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_425440 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_4254A0 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_41DF54  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_425420 +
movlpd xmm2 oword ptr ds:oword_425430 +
jmp loc_41DB36  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_41E1AD  +
ja loc_41E11F  +
cmp edx 0 +
ja loc_41E11F  +
jmp loc_41E1AD  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_425420 +
movlpd xmm2 oword ptr ds:oword_425430 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_41DFDA  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_425440 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_4254D0[eax*4] +
movlpd xmm5 oword ptr ds:oword_4254D0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_4258E0[eax*4] +
mov edx 43E7Fh +
jmp loc_41DB36  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_41DF88  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_41E027  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_425430 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_41E28E  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_41E0D9  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_425420 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_41E11F  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_41E103  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_41E0E7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_425440 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_41E0E7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_41E0E0  +
fld  qword ptr ds:oword_4254A0 +
retn   +
fld  ds:dbl_425498 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_41E21F  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_41E21F  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_41E28E  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_41DFDA  +
movlpd xmm1 oword ptr ds:oword_425480+8 +
movlpd xmm0 oword ptr ds:oword_4254C0 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_41E28E  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_41E1AD  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_41E28B  +
cmp edx 0BFF00000h +
jnz loc_41E1AD  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_425420 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_41E226  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_41E28B  +
cmp eax 0 +
jz loc_41E20B  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_41E21F  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_41E21F  +
fldz   +
retn   +
fld  ds:dbl_425490 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_41E28E  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_425430 +
mov edx 1Ah +
cmp eax 0 +
jz loc_41E28E  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_41E28E  +
jb loc_41E27A  +
cmp ecx 0 +
ja loc_41E28E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_41A7C3  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_41E2EB  +
cmp eax 40000h +
jnb loc_41E50A  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_41E311  +
cmp eax 0FFFC0200h +
jle loc_41E4E7  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_425410 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_425410 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_428550[eax] +
movapd xmm6 oword ptr ds:oword_425450 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_425470 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_425460 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_41E49D  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_41E28E  +
mov edx 19h +
cmp eax 0 +
jz loc_41E28E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_41E28E  +
mov edx 19h +
cmp eax 0 +
jz loc_41E28E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4254B0+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_41E28E  +
mov edx 18h +
cmp ecx 0 +
jz loc_41E529  +
movlpd xmm0 oword ptr ds:oword_4254A0+8 +
mulsd xmm0 qword ptr ds:oword_4254B0 +
jmp loc_41E28E  +
movlpd xmm0 oword ptr ds:oword_4254B0 +
mulsd xmm0 xmm0 +
jmp loc_41E28E  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_41DC88  +
cmp eax 80000000h +
jb loc_41E58E  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_41E4E7  +
jmp loc_41E50A  +
***
push edi  +
push esi  +
push ebx  +
xor edi edi +
mov eax [esp+14h] +
or eax eax +
jge loc_41E5E1  +
inc edi  +
mov edx [esp+10h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+14h] eax +
mov [esp+10h] edx +
mov eax [esp+1Ch] +
or eax eax +
jge loc_41E5FD  +
inc edi  +
mov edx [esp+18h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+1Ch] eax +
mov [esp+18h] edx +
or eax eax +
jnz loc_41E619  +
mov ecx [esp+18h] +
mov eax [esp+14h] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+10h] +
div  ecx +
mov edx ebx +
jmp loc_41E65A  +
mov ebx eax +
mov ecx [esp+18h] +
mov edx [esp+14h] +
mov eax [esp+10h] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_41E627  +
div  ecx +
mov esi eax +
mul  dword ptr [esp+1Ch] +
mov ecx eax +
mov eax [esp+18h] +
mul  esi +
add edx ecx +
jb loc_41E655  +
cmp edx [esp+14h] +
ja loc_41E655  +
jb loc_41E656  +
cmp eax [esp+10h] +
jbe loc_41E656  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_41E664  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
push ecx  +
cmp dword_42FFFC 1 +
jl loc_41E795  +
cmp [ebp+arg_0] 0C00002B4h +
jz loc_41E741  +
cmp [ebp+arg_0] 0C00002B5h +
jnz loc_41E795  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
xor eax 3Fh +
test al 81h +
jz loc_41E78E  +
test eax 204h +
jnz loc_41E75D  +
mov eax 0C000008Eh +
leave   +
retn   +
test eax 102h +
jz loc_41E78E  +
test eax 408h +
jnz loc_41E772  +
mov eax 0C0000091h +
leave   +
retn   +
test eax 810h +
jnz loc_41E780  +
mov eax 0C0000093h +
leave   +
retn   +
test eax 1020h +
jnz loc_41E795  +
mov eax 0C000008Fh +
leave   +
retn   +
mov eax 0C0000090h +
leave   +
retn   +
mov eax [ebp+arg_0] +
leave   +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_42F008 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_409FC1  +
mov eax offset unk_42CC8C +
jmp loc_40BF30  +
***
push esp  +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_409FC1  +
mov eax offset unk_42CD88 +
jmp loc_40BF30  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_409FC1  +
mov eax offset unk_42CD5C +
jmp loc_40BF30  +
***
jmp loc_40BF30  +
***
jmp loc_40BF30  +
***
push esp  +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_409FC1  +
mov ecx [edx-4] +
xor ecx eax +
call sub_409FC1  +
mov eax offset unk_42CD5C +
jmp loc_40BF30  +
***
mov ecx offset dword_430B40 +
mov ecx dword_430DD8 +
mov ecx dword_430DDC +
jmp loc_41E90A  +
mov ecx offset off_42FAE8 +
mov ecx offset off_42FB08 +
mov ecx offset off_42FB28 +
mov ecx offset off_42FB44 +
mov ecx offset off_42FB60 +
mov ecx offset unk_42FC80 +
mov ecx offset unk_4307D8 +
mov ecx offset unk_4308C4 +
mov ecx offset unk_4308BC +
mov ecx offset unk_4309D1 +
mov ecx offset unk_4309D0 +
jmp loc_41BE0F  +
***
