mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov [ebp+var_4] esi +
mov ebx 10000h +
mov edi 80000000h +
push 1  +
xor eax eax +
push eax  +
push eax  +
push eax  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_1001E8C  +
lea ecx [esi+0DA8h] +
call sub_1001E31  +
mov ecx esi +
call sub_1001E13  +
jmp loc_1001DC7  +
***
mov edi edi +
push esi  +
mov esi ecx +
xor eax eax +
cmp [esi+0A54h] eax +
jnz loc_1024093  +
pop esi  +
retn   +
***
add ecx 98h +
call sub_1001DF9  +
test eax eax +
jnz nullsub_8  +
jmp ds:WaitMessage  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp byte ptr [esi+28h] 0 +
jz loc_1003D74  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_1001E87  +
call ds:GetTickCount  +
mov edx eax +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
mov [ebp+var_8] edx +
test eax eax +
jz loc_1001E87  +
cmp edx eax +
jb loc_1001E87  +
mov ecx [esi+4] +
mov [ebp+var_4] ecx +
mov ecx edx +
sub ecx eax +
inc ecx  +
mov byte ptr [ebp+arg_0+3] 0 +
cmp ecx 2 +
jnb sub_1003CE5  +
pop esi  +
leave   +
retn 4  +
***
cmp [ebp+Msg.message] 12h +
jz loc_105684B  +
lea eax [ebp+Msg] +
push eax  +
lea ecx [esi+0DA8h] +
call sub_1001E47  +
mov ecx [ebp+Msg.message] +
cmp ecx 100h +
jz loc_1040F60  +
cmp ecx 201h +
jz loc_1036E66  +
cmp ecx 202h +
jz loc_1036E66  +
lea eax [esi+0D04h] +
cmp dword ptr [eax] 0 +
jnz loc_10567D2  +
lea eax [ebp+Msg] +
push eax  +
lea ecx [esi+0AF8h] +
call sub_1001F48  +
test eax eax +
jz loc_1001DC7  +
lea eax [esi+0D0Ch] +
cmp dword ptr [eax] 0 +
jz loc_1001F0A  +
cmp [ebp+Msg.message] 100h +
jz loc_1040F6F  +
mov eax [esi+0CACh] +
test eax eax +
jz loc_1001F2A  +
lea ecx [ebp+Msg] +
push ecx  +
push eax  +
push dword ptr [esi+4]  +
call ds:TranslateAcceleratorW  +
test eax eax +
jnz loc_1001DC7  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
jmp loc_1001DC7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_1001F63  +
mov eax [ecx+7Ch] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1001F66  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+2Ch] 0 +
jz loc_104D4B7  +
mov ecx [esi+60h] +
test ecx ecx +
jnz loc_104CDCC  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-0Ch] +
call sub_1001FA7  +
neg eax  +
sbb eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
mov ebx [ebp+hWnd] +
mov eax [ebx+4] +
push esi  +
push edi  +
mov esi ecx +
cmp eax 201h +
jz loc_1036E5C  +
cmp eax 204h +
jz loc_1036E5C  +
cmp dword ptr [esi+94h] 0 +
jnz loc_103B9D2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
cmp ecx dword_10B1090 +
jnz loc_107B60F  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx 81h +
cmp edi ebx +
jz loc_102A921  +
mov ebx [ebp+8] +
push 0  +
push ebx  +
call ds:GetWindowLongW  +
mov esi eax +
test esi esi +
jz loc_105D020  +
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
push dword ptr [ebp+14h]  +
mov eax [esi] +
push dword ptr [ebp+10h]  +
mov ecx esi +
push edi  +
push ebx  +
call dword ptr [eax+8]  +
mov [ebp+14h] eax +
cmp edi 82h +
jz loc_105D00D  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [ebp+14h] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
inc eax  +
retn 4  +
***
pop eax  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_8C] eax +
mov ebx ecx +
mov ecx [ebp+arg_C] +
lea eax [ebp+var_58] +
push eax  +
mov [ebp+var_88] ecx +
lea eax [ebp+var_94] +
lea ecx [ebx+0AF8h] +
xor esi esi +
push eax  +
mov [ebp+hWndParent] edx +
mov [ebp+var_58] esi +
mov [ebp+var_94] edx +
mov [ebp+var_90] edi +
mov [ebp+hdc] ecx +
call sub_100221E  +
test eax eax +
jz loc_1002264  +
mov eax [ebx+0D04h] +
cmp eax esi +
jnz loc_1009B86  +
mov eax [ebp+var_88] +
mov ecx [ebp+var_8C] +
mov edx eax +
mov [ebp+wParam] ecx +
mov [ebp+lParam] edx +
cmp edi 24h +
jbe loc_1002269  +
mov edx 4E6h +
cmp edi edx +
ja loc_1009B58  +
jz loc_100A1E0  +
mov edx 112h +
cmp edi edx +
ja loc_100232F  +
jz loc_1009FFF  +
mov edx 85h +
cmp edi edx +
ja loc_100DBB4  +
jz loc_1010D93  +
cmp edi 4Eh +
ja loc_1034BD1  +
jz loc_100E65C  +
cmp edi 2Bh +
jb loc_10021D4  +
cmp edi 2Ch +
jbe loc_104EBDE  +
cmp edi 46h +
jz loc_100DAD0  +
cmp edi 47h +
jz loc_103425B  +
cmp edi 48h +
jz loc_10516FC  +
cmp edi 4Ah +
jz loc_101110B  +
cmp [ebx+0D54h] edi +
jz loc_1009BB0  +
cmp [ebx+0DF4h] edi +
jz loc_100A3DC  +
cmp [ebx+0DF8h] edi +
jz loc_100A3F6  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push edi  +
push [ebp+hWndParent]  +
call ds:DefWindowProcW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_100223C  +
push [ebp+arg_4]  +
mov eax [ecx+7Ch] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jz loc_100223F  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+60h] +
test ecx ecx +
jnz loc_105D9EA  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+var_58] +
jmp loc_1002208  +
jz loc_1009CAC  +
cmp edi 11h +
jbe loc_100D7F8  +
mov edx edi +
sub edx 14h +
jnz loc_100DA35  +
cmp [ebx+0D14h] esi +
jz loc_10021F8  +
cmp [ebx+2Ch] esi +
jz loc_10282B4  +
xor eax eax +
inc eax  +
jmp loc_1002208  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+0Ch] +
xor ecx ecx +
push edi  +
cmp [ebx+29Ch] ecx +
jz loc_102A5A2  +
cmp [ebx+2ACh] ecx +
jz loc_102A5A2  +
cmp [ebx+2BCh] ecx +
jz loc_102A5A2  +
test byte ptr dword_10B110C 1 +
jz loc_102DD1F  +
mov eax 318h +
cmp esi eax +
ja loc_100DA75  +
jz loc_1035664  +
cmp esi 48h +
ja loc_1010B18  +
jz loc_1010BC3  +
cmp esi 0Fh +
jbe loc_1010D22  +
cmp esi 14h +
jnz loc_1010DAA  +
cmp [ebx+34Ch] ecx +
jz loc_105B29B  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edx 2A0h +
cmp edi edx +
jbe loc_100D9DD  +
mov edx 31Eh +
cmp edi edx +
ja loc_100DCC4  +
jz loc_10510DC  +
mov edx edi +
sub edx 2A2h +
jz loc_104EC01  +
sub edx 0Fh +
jz loc_1051AD3  +
sub edx 61h +
jz loc_103F939  +
sub edx 6 +
jnz loc_100A118  +
mov [ebp+hdc] ecx +
cmp ecx esi +
jz loc_1010D57  +
lea eax [ebp+EventTrack] +
push eax  +
push [ebp+hWndParent]  +
call ds:GetClientRect  +
cmp [ebx+0D14h] esi +
jz loc_100A12C  +
lea eax [ebp+pt] +
push eax  +
push [ebp+hdc]  +
call ds:GetClipBox  +
cmp eax 1 +
jz loc_1002CD2  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_10023CA  +
push esi  +
lea eax [ebp+pt] +
push eax  +
push [ebp+hdc]  +
call ds:SHLWAPI_197  +
lea eax [ebp+pt] +
push eax  +
lea eax [ebp+EventTrack] +
push eax  +
push esi  +
push dword ptr [ebx+0CD8h]  +
mov ecx ebx +
call sub_103547D  +
push eax  +
push [ebp+hdc]  +
push dword ptr [ebx+0D14h]  +
call ds:DrawThemeBackground  +
test byte ptr [ebx+40h] 1 +
jnz loc_1002400  +
push [ebp+hdc]  +
mov ecx ebx +
call sub_10354AF  +
cmp [ebp+wParam] esi +
jnz loc_1002264  +
lea eax [ebp+Paint] +
push eax  +
push [ebp+hWndParent]  +
call ds:EndPaint  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+5Ch] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1063EA6  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 5Ch +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov eax [esi+28h] +
test eax eax +
jz loc_1002C8E  +
cmp [ebp+0Ch] eax +
jnz loc_1002C8E  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1003840  +
***
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
xor eax eax +
jmp loc_10024CD  +
***
jz loc_1008AB2  +
mov ecx 114h +
cmp eax ecx +
ja loc_1034983  +
jz loc_1008A22  +
cmp eax 47h +
jbe loc_1010BD6  +
sub eax 4Ah +
jz loc_102E9C5  +
sub eax 4 +
jz loc_10024DE  +
sub eax 2Dh +
jz loc_10089D3  +
sub eax 6 +
jz loc_102AC24  +
dec eax  +
jz loc_10089C1  +
dec eax  +
dec eax  +
jz loc_1044AB8  +
sub eax 8Fh +
jnz sub_10024B0  +
cmp ebx 5 +
jb loc_10024DE  +
cmp ebx 9 +
ja loc_10084E0  +
push 0  +
mov ecx esi +
call sub_1002F76  +
mov edi eax +
mov eax [esi+48h] +
lea ecx [eax+8] +
mov eax [ecx] +
push edi  +
call dword ptr [eax+0Ch]  +
test edi edi +
jnz loc_1052F3D  +
push ebx  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
test edi edi +
jnz loc_10024DE  +
cmp ebx 9 +
jnb loc_10024DE  +
push edi  +
push 3E8h  +
inc ebx  +
push ebx  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
jmp loc_10024DE  +
***
sub dword ptr [esp+4] 8 +
jmp loc_100273D  +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_10027C8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1002D72  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_10027AD  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1002A39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22A4 0FFFFFFFFh +
jz loc_102A8A2  +
mov eax dword_10B22A4 +
test eax eax +
jz loc_105CCC9  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwBytes]  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+0Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jz loc_1002BE7  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
test eax eax +
jz loc_1002C05  +
and dword ptr [ecx] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+14h] +
test eax eax +
jz loc_1002C74  +
mov eax [eax] +
pop ebp  +
retn 4  +
***
xor ecx ecx +
jmp loc_1002DAB  +
***
mov [ebp-8] ebx +
jmp loc_100ACD6  +
***
xor eax eax +
jmp loc_1004582  +
***
xor eax eax +
jmp loc_1006090  +
***
mov [ebp+var_8] eax +
jmp loc_1005955  +
***
xor eax eax +
jmp loc_1005A12  +
***
mov [ebp-10h] ecx +
jmp loc_1005EE7  +
***
cmp [ebp-4] eax +
jnz loc_1005F11  +
jmp loc_1005F14  +
***
xor ecx ecx +
jmp loc_1004CC2  +
***
mov [ebp-4] ecx +
jmp loc_10097C8  +
***
xor eax eax +
jmp loc_1002C1F  +
***
mov [ebp-4] ecx +
jmp loc_100D3FF  +
***
cmp [ebp-8] ebx +
jnz loc_100DDF7  +
jmp loc_100DE02  +
***
mov eax [esi+2Ch] +
test eax eax +
jz loc_1002C9E  +
cmp [ebp+0Ch] eax +
jz loc_10517E3  +
push edi  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-48h]  +
call ds:DefWindowProcW  +
jmp loc_10024CD  +
***
lea esi [ebp+EventTrack] +
lea edi [ebp+pt] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
jmp loc_10023B2  +
mov [ebp+var_58] eax +
jmp loc_1002264  +
***
xor eax eax +
jmp loc_10040CE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1002D46  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jz loc_1015B33  +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1002D39  +
***
test esi esi +
jz loc_10027E6  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
jmp loc_10027E6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov ecx [esi+4] +
add ecx 18h +
mov ecx [ecx] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_1002C23  +
mov ecx [ecx] +
cmp [esi+8] ecx +
jl loc_1002EEE  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1002DDC  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
push offset dword_1002E10  +
add eax 0FFFFFFF8h +
push eax  +
call sub_1002E25  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 14h  +
mov edi 8007000Eh +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1002E68  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_1002E71  +
mov esi eax +
test esi esi +
jz loc_1002E60  +
push [ebp+arg_8]  +
mov eax [esi] +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor esi esi +
jmp loc_1002E49  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi+4] 1 +
mov dword ptr [esi] offset off_1002970 +
mov dword ptr [esi+8] offset off_10029C0 +
mov [esi+0Ch] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1002ECB  +
test byte ptr [ebp+8] 1 +
jz loc_1002EBF  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+0Ch] +
push eax  +
mov dword ptr [esi] offset off_1002970 +
mov dword ptr [esi+8] offset off_10029C0 +
call sub_1002BEE  +
mov dword ptr [esi] offset off_1002788 +
pop esi  +
retn   +
***
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
mov ecx [esi+4] +
mov ecx [ecx+18h] +
mov edx [esi+8] +
mov ecx [ecx+4] +
push dword ptr [ecx+edx*4]  +
push eax  +
call ds:__imp_IUnknown_Set  +
xor eax eax +
inc dword ptr [esi+8]  +
jmp loc_1002DB4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
xor edi edi +
mov [ebp+rcSrc.left] 28h +
cmp [ebp+hMonitor] edi +
jz loc_1002F63  +
lea eax [ebp+rcSrc] +
push eax  +
push [ebp+hMonitor]  +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_1002F63  +
cmp [ebp+lprc] edi +
jz loc_1002F5B  +
lea eax [ebp-14h] +
cmp [ebp+arg_8] edi +
jnz loc_1002F51  +
lea eax [ebp+rcSrc.top] +
push eax  +
push [ebp+lprc]  +
call ds:CopyRect  +
xor eax eax +
inc eax  +
pop edi  +
leave   +
retn 0Ch  +
cmp [ebp+lprc] edi +
jz loc_105C66D  +
jmp loc_105C651  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_1002FD8  +
call ds:GetForegroundWindow  +
mov edi eax +
mov eax [esi+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+60h]  +
cmp edi ebx +
jz loc_1002FAB  +
cmp edi eax +
jz loc_1002FD8  +
mov eax [esi+94h] +
lea edx [ebp+arg_0] +
push edx  +
push ebx  +
mov [ebp+arg_0] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
test eax eax +
jl loc_1002FD8  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+var_C] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx esi +
call sub_100304E  +
mov [ebp+var_8] eax +
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_1002FEE  +
mov ebx [eax] +
xor edi edi +
test ebx ebx +
jle loc_100303F  +
cmp [ebp+var_8] 0 +
jnz loc_100303F  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
and [ebp+var_4] 0 +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_100303A  +
and [ebp+arg_0] 0 +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_100334E  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc edi  +
cmp edi ebx +
jl loc_1002FF4  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+lParam] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi ecx +
push 2  +
push dword ptr [esi+4]  +
call ds:MonitorFromWindow  +
push dword ptr [esi+34h]  +
mov [ebp+var_4] eax +
call ds:IsWindow  +
test eax eax +
jnz loc_1052DD5  +
lea eax [ebp+lParam] +
push eax  +
push offset EnumFunc  +
call ds:EnumWindows  +
mov eax [ebp+var_8] +
mov [esi+34h] eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+0CB4h] +
mov [ebp+var_4] ecx +
test eax eax +
jz locret_1003119  +
push edi  +
mov edi [eax] +
test edi edi +
jz loc_1003118  +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
dec edi  +
push edi  +
push dword ptr [ecx+0CB4h]  +
call ds:off_1002B68  +
mov esi eax +
test esi esi +
jz loc_100310E  +
mov eax [esi] +
cmp [ebp+arg_8] eax +
jz loc_100310E  +
push eax  +
call ds:IsWindow  +
test eax eax +
jz loc_105601E  +
cmp [ebp+arg_0] 0 +
jz loc_10030FB  +
push 2  +
push dword ptr [esi]  +
call ds:MonitorFromWindow  +
cmp [ebp+arg_0] eax +
jnz loc_100310E  +
cmp [ebp+arg_4] 2 +
jnz sub_10367DB  +
cmp [esi+1Ch] ebx +
jnz loc_1052CF6  +
test edi edi +
jnz loc_1052CFE  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
cmp dword_10B10F8 ebx +
jnz loc_103643B  +
cmp [esi+0C6Ch] ebx +
jnz loc_103643B  +
mov eax [esi+14h] +
mov ecx [ebp+8] +
mov [ebp-4] eax +
xor eax eax +
mov [ebp-14h] ebx +
lea edi [ebp-10h] +
stos   +
stos   +
stos   +
mov eax [esi+0C6Ch] +
mov [esi+0C00h] ecx +
mov [ebp-8] eax +
cmp ecx ebx +
jnz loc_1052DF9  +
lea eax [ebp-14h] +
push eax  +
push offset loc_10031A3  +
push ebx  +
lea edi [esi-8] +
push ebx  +
mov [ebp-0Ch] edi +
call ds:EnumDisplayMonitors  +
mov eax [ebp-4] +
cmp eax [esi+14h] +
jnz loc_1052D06  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi [ebp+14h] +
xor ebx ebx +
push edi  +
mov edi [ebp+8] +
cmp dword_10B10F8 ebx +
jnz loc_10031D4  +
cmp [esi+0Ch] ebx +
jnz loc_10031D4  +
cmp [esi+4] edi +
jz loc_1052DF1  +
cmp [esi] ebx +
jnz loc_1056719  +
xor eax eax +
mov ecx [esi+8] +
cmp edi [ecx+0CF8h] +
jnz loc_10031E4  +
mov [ecx+1Ch] eax +
mov ecx [esi+8] +
push eax  +
push ebx  +
push 2  +
push edi  +
call sub_100309D  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+hwnd] +
push 2  +
push edi  +
call ds:MonitorFromWindow  +
test eax eax +
jz loc_1003236  +
mov esi [ebp+arg_4] +
mov ecx [esi] +
test ecx ecx +
jnz loc_1052E50  +
push dword ptr [esi+8]  +
push edi  +
push eax  +
call sub_10032F1  +
test eax eax +
jnz loc_1052E46  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp esi dword_10B10EC +
jz loc_100330D  +
push offset String  +
push esi  +
call ds:GetPropW  +
test eax eax +
jnz loc_100330D  +
mov edi [ebp+hMonitor] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push edi  +
call sub_1002F19  +
push 0FFFFFFF0h  +
push esi  +
call ds:GetWindowLongW  +
mov ecx eax +
mov eax 0C40000h +
and ecx eax +
cmp ecx eax +
lea eax [ebp+Points] +
push eax  +
push esi  +
jz loc_1003334  +
call ds:GetWindowRect  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Points] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call ds:UnionRect  +
lea eax [ebp+Points] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call ds:EqualRect  +
test eax eax +
jz loc_100330D  +
cmp [ebp+arg_8] edi +
jnz loc_100330D  +
push esi  +
call sub_1052D9F  +
test eax eax +
jz loc_100330D  +
push esi  +
call sub_1052E29  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_100330F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
push esi  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_100323F  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+8] +
and al 4 +
xor ecx ecx +
cmp al 4 +
setz cl  +
mov eax ecx +
pop ebp  +
retn 4  +
***
call ds:GetClientRect  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push esi  +
call ds:MapWindowPoints  +
jmp loc_1003292  +
***
cmp [ebp+var_8] 0 +
jnz loc_1003031  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
test eax eax +
jnz loc_106308A  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_100301C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push esi  +
mov esi [ecx+14h] +
xor eax eax +
test esi esi +
jz loc_10033B9  +
mov edx esi +
test edx edx +
jz loc_10033BE  +
mov edx [edx] +
test edx edx +
jle loc_10033B9  +
mov edx [ebp+0Ch] +
test edx edx +
jl loc_10033B9  +
mov ecx esi +
test ecx ecx +
jz loc_10033C2  +
mov ecx [ecx] +
cmp edx ecx +
jge loc_10033B9  +
mov eax [esi+4] +
mov eax [eax+edx*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
pop esi  +
pop ebp  +
retn 8  +
***
xor edx edx +
jmp loc_1003396  +
***
xor ecx ecx +
jmp loc_10033A9  +
***
mov esi [ebp+8] +
lea edi [esi+18h] +
xor ebx ebx +
cmp [edi] ebx +
jnz loc_10033EC  +
mov eax [esi+10h] +
mov ecx [eax] +
push edi  +
push offset dword_1003400  +
push eax  +
call dword ptr [ecx]  +
cmp eax ebx +
jl loc_10033F9  +
cmp [edi] ebx +
jz loc_1052BD9  +
lea eax [esi+4] +
mov ecx [ebp+10h] +
mov [ecx] eax +
jmp loc_1052B63  +
***
mov [edi] ebx +
jmp loc_1052BDE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1003498  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1003475  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+30h] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-4] +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+190h]  +
call ds:IUnknown_GetWindow  +
mov eax [ebp-4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [eax-14h] +
push dword ptr [eax+0A4h]  +
push dword ptr [eax+0A0h]  +
call sub_1003593  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jnz loc_1064CFC  +
mov eax [ebp+arg_C] +
cmp eax edi +
jz loc_10035B1  +
mov [eax] edi +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 80070490h +
cmp esi edi +
jz loc_1003612  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jz loc_1003611  +
and [ebp+var_4] edi +
cmp [ebp+arg_C] edi +
jz loc_10035F5  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
cmp [ebp+arg_4] edi +
jl loc_100361B  +
cmp [ebp+arg_4] eax +
jge loc_100361B  +
push [ebp+arg_4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0ACh]  +
mov edi eax +
cmp [ebp+arg_8] 0 +
mov esi ds:__imp_IUnknown_Set +
jnz loc_1064D03  +
cmp [ebp+arg_C] 0 +
jz loc_1003611  +
push edi  +
push [ebp+arg_C]  +
call esi  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 10h  +
mov [ebp+var_4] 80004005h +
jmp loc_1003611  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
lea ecx [ebp+8] +
push ecx  +
push dword ptr [ebp+0Ch]  +
xor edi edi +
push esi  +
call dword ptr [eax+20h]  +
mov ebx eax +
test ebx ebx +
jge loc_1003AF3  +
mov ecx [esi+14h] +
mov eax 80000000h +
and ecx eax +
cmp ecx eax +
jz loc_100366D  +
cmp [ebp+10h] edi +
jnz loc_100B7B8  +
cmp [ebp+14h] edi +
jnz loc_100B610  +
mov eax [ebp+18h] +
mov [eax] edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor ecx ecx +
push edi  +
mov edi [ebp+8] +
mov [eax] ecx +
mov dword ptr [ebp-8] 80004005h +
cmp [edi+10h] ecx +
jz loc_10036F4  +
mov eax [edi+10h] +
cmp eax ecx +
jz loc_1003B2A  +
mov eax [eax] +
mov [ebp+8] eax +
xor eax eax +
cmp [ebp+8] ecx +
mov [ebp-4] eax +
jle loc_10036F4  +
push ebx  +
push esi  +
mov ecx [edi+10h] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
test esi esi +
jz loc_10036E6  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
mov ebx eax +
cmp ebx [ebp+0Ch] +
jz loc_1003B17  +
push ebx  +
call sub_10037E7  +
test eax eax +
jnz loc_10641BE  +
mov eax [ebp-4] +
inc eax  +
cmp eax [ebp+8] +
mov [ebp-4] eax +
jl loc_10036BA  +
pop esi  +
pop ebx  +
mov eax [ebp-8] +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_10] +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
cmp eax esi +
jz loc_1003719  +
mov [eax] esi +
mov eax [ebp+arg_14] +
cmp eax esi +
jz loc_1003722  +
mov [eax] esi +
mov eax [edi+0A8h] +
mov [ebp+var_4] 80004005h +
cmp eax esi +
jz loc_100B608  +
mov eax [eax] +
mov [ebp+var_C] eax +
mov ebx ds:__imp_IUnknown_Set +
xor eax eax +
cmp [ebp+var_C] esi +
mov [ebp+var_10] eax +
jle loc_10037AA  +
cmp [ebp+var_4] esi +
jge loc_10037D8  +
mov ecx [edi+0A8h] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
test esi esi +
jz loc_1003792  +
mov eax [esi] +
and [ebp+var_8] 0 +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_14] +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+1Ch]  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_1003B32  +
mov [ebp+var_4] 80004005h +
mov eax [ebp+var_10] +
inc eax  +
cmp eax [ebp+var_C] +
mov [ebp+var_10] eax +
jge loc_10037A2  +
xor esi esi +
jmp loc_100374C  +
cmp [ebp+var_4] 0 +
jge loc_10037D8  +
xor esi esi +
cmp [ebp+arg_C] 4 +
jnz loc_10037D8  +
mov eax [edi+0A4h] +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
lea edx [ebp+arg_8] +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax esi +
mov [ebp+var_4] eax +
jge loc_100B5D4  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 0FFFFh +
sub esp 28h +
cmp word_10B1080 ax +
jz loc_102AA72  +
push 0FFFFFFE0h  +
push [ebp+hWnd]  +
call ds:GetClassLongW  +
movzx eax ax +
test ax ax +
jz loc_1003821  +
cmp ax word_10B1080 +
jz loc_10518BA  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax 8004h +
cmp edi eax +
mov esi ecx +
jg loc_103F47D  +
jz loc_10040DA  +
cmp edi 6 +
jg loc_10517BB  +
jz loc_100639F  +
dec edi  +
jz loc_100B8C8  +
dec edi  +
jnz loc_10040D2  +
push [ebp+hWnd]  +
call sub_1008F6E  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+28h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+14h] +
pop ebp  +
retn 4  +
***
mov eax [ebp+1Ch] +
test eax eax +
jz loc_1003B06  +
push dword ptr [ebp+8]  +
and [eax] edi +
push eax  +
call ds:__imp_IUnknown_Set  +
mov eax [ebp+8] +
mov ecx [eax] +
push 4  +
pop edi  +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_100366D  +
***
push esi  +
push dword ptr [ebp+10h]  +
call ds:__imp_IUnknown_Set  +
and dword ptr [ebp-8] 0 +
jmp loc_10036F2  +
***
mov [ebp+8] ecx +
jmp loc_10036AE  +
***
mov eax [ebp+arg_C] +
cmp [ebp+var_14] eax +
jl loc_100378B  +
cmp [ebp+arg_10] 0 +
jz loc_1003B4A  +
push esi  +
push [ebp+arg_10]  +
call ebx  +
cmp [ebp+var_8] 0 +
jz loc_1003792  +
cmp [ebp+arg_14] 0 +
jz loc_1003B62  +
push [ebp+var_8]  +
push [ebp+arg_14]  +
call ebx  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1003792  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 8 +
push eax  +
call sub_10027AD  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 8 +
push eax  +
call sub_10027C8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov edx [ebp+10h] +
and dword ptr [ebp-4Ch] 0 +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
mov eax 117h +
push edi  +
mov edi [ebp+14h] +
mov [ebp-50h] ecx +
mov [ebp-48h] edx +
cmp ebx eax +
ja loc_10349BA  +
jz loc_10662EE  +
cmp ebx 3Dh +
ja loc_1004105  +
jz loc_1052A7F  +
cmp ebx 0Bh +
jbe loc_10080B1  +
cmp ebx 0Fh +
jnz loc_1010C94  +
cmp dword ptr [esi+58h] 0 +
jnz loc_106635E  +
test edx edx +
jnz loc_102EFC2  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [esi+4]  +
call ds:BeginPaint  +
push dword ptr [ebp-44h]  +
mov ecx esi +
call sub_1004AE4  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [esi+4]  +
call ds:EndPaint  +
mov ecx [ebp-4] +
mov eax [ebp-4Ch] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi [esi+8] +
push 64h  +
pop eax  +
sub eax edi +
imul eax [esi+4] +
mov ebx edi +
imul ebx ecx +
add eax ebx +
mov bl [esi+28h] +
mov [esi+4] eax +
test bl bl +
jnz loc_1003D49  +
mov eax [esi+4] +
xor edx edx +
push 64h  +
pop edi  +
div  edi +
mov edx [esi+0Ch] +
mov [esi+4] eax +
cmp eax edx +
ja loc_1036821  +
and dword ptr [esi+14h] 0 +
mov byte ptr [esi+1Ch] 0 +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_1036848  +
cmp byte ptr [ebp+0Bh] 0 +
jnz loc_10513B5  +
mov eax [ebp-8] +
pop edi  +
mov byte ptr [esi+28h] 0 +
mov [esi+24h] eax +
pop ebx  +
jmp loc_1001E87  +
sub edx [esi+20h] +
cmp edx [esi+30h] +
jbe loc_1003D04  +
mov edx [ebp-4] +
imul edx edx +
cmp edx eax +
jbe loc_1003D04  +
mov eax [esi+2Ch] +
imul eax edi +
push 64h  +
pop edx  +
sub edx eax +
imul eax ecx +
imul edx [ebp-4] +
add edx eax +
mov [esi+4] edx +
jmp loc_1003D04  +
***
mov byte ptr [esi+28h] 1 +
call ds:GetTickCount  +
mov [esi+20h] eax +
jmp loc_1001E40  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2290 0FFFFFFFFh +
jz loc_102A83E  +
mov eax dword_10B2290 +
test eax eax +
jz loc_105CCA0  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2294 0FFFFFFFFh +
jz loc_102A852  +
mov eax dword_10B2294 +
test eax eax +
jz loc_105CCA6  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push 7FFFFFFFh  +
push dword ptr [ecx]  +
call ds:off_1003DB4  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B228C 0FFFFFFFFh +
jz loc_102A82A  +
mov eax dword_10B228C +
test eax eax +
jz loc_105CC94  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push 10h  +
call ds:off_1003E00  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi] eax +
pop esi  +
mov eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jnz loc_10047B7  +
mov eax [ebp+8] +
mov eax [eax+20h] +
mov ecx [ebp+10h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+18h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B231C 0FFFFFFFFh +
jz loc_102A7BF  +
mov eax dword_10B231C +
test eax eax +
jz loc_105CC70  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4] +
and al 10h +
xor ecx ecx +
cmp al 10h +
setz cl  +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetSystemMetrics +
mov esi ecx +
mov eax esi +
neg eax  +
sbb eax eax +
and eax 26h +
add eax 0Bh +
push eax  +
call edi  +
mov ebx [ebp+0Ch] +
neg esi  +
sbb esi esi +
and esi 26h +
add esi 0Ch +
push esi  +
mov [ebx] eax +
call edi  +
pop edi  +
pop esi  +
mov [ebx+4] eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_1003FE4  +
mov dword ptr [eax] 2 +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-8] +
push eax  +
lea ecx [esi-14h] +
call sub_1004007  +
mov eax [esi+64h] +
add eax [esi+60h] +
pop esi  +
add eax [ebp-4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
xor eax eax +
mov [edx] eax +
mov [edx+4] eax +
cmp [ecx+38h] eax +
jz loc_1004025  +
mov eax [ecx+38h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+60h]  +
pop ebp  +
retn 4  +
***
mov eax [esi+0B8h] +
jmp loc_100560C  +
***
xor eax eax +
inc eax  +
jmp loc_100552F  +
***
mov [ebp+var_234] 1 +
jmp loc_1004DC8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx eax +
and eax [ebp+10h] +
not edx  +
and edx [ecx+8] +
or edx eax +
mov [ecx+8] edx +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22F8 0FFFFFFFFh +
jz loc_102A8B6  +
mov eax dword_10B22F8 +
test eax eax +
jz loc_105CCCF  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_1002CEB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
test eax eax +
jnz loc_1002CEB  +
inc eax  +
pop ebp  +
retn 8  +
***
dec edi  +
dec edi  +
jnz loc_10542A5  +
push 1  +
push [ebp+hWnd]  +
call sub_1009692  +
jmp loc_1003885  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetTickCount  +
mov ecx [ebp+8] +
mov [ecx+0Ch] eax +
xor eax eax +
pop ebp  +
retn 4  +
***
mov eax 100h +
cmp ebx eax +
ja loc_100AC6D  +
jz loc_102EF7F  +
sub ebx 4Eh +
jz loc_1044A7E  +
sub ebx 2Dh +
jz loc_10661C7  +
sub ebx 7 +
jz loc_102EF74  +
dec ebx  +
dec ebx  +
jnz loc_1003CD0  +
movsx eax di +
mov [ebp-54h] eax +
shr edi 10h +
movsx eax di +
mov [ebp-50h] eax +
lea eax [ebp-54h] +
push eax  +
push dword ptr [esi+4]  +
call ds:ScreenToClient  +
push dword ptr [ebp-50h]  +
mov ecx esi +
push dword ptr [ebp-54h]  +
call sub_1044C68  +
jmp loc_1003CE0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+1Ch] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
or eax 0FFFFFFFFh +
cmp dword ptr [ebp+0Ch] 0 +
push esi  +
mov esi [ebp+8] +
jz loc_10041A2  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
push dword ptr [ebp+10h]  +
mov ecx [esi] +
push eax  +
push esi  +
call dword ptr [ecx+30h]  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax-10h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_1004207  +
imul eax eax +
xor ecx ecx +
cmp dword_10B2A78[eax] 1 +
setz cl  +
mov eax ecx +
test eax eax +
jz loc_100421C  +
mov ecx [ebp+8] +
add ecx 0FFFFFFE4h +
call sub_1004226  +
test al 8 +
jz loc_100421C  +
xor eax eax +
pop ebp  +
retn 8  +
***
xor eax eax +
inc eax  +
jmp loc_1004218  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
cmp dword ptr [ecx+38h] 0 +
jz loc_1004243  +
mov eax [ecx+38h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+5Ch]  +
mov eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+2Ch] +
not eax  +
and eax 1 +
pop ebp  +
retn 4  +
***
xor eax eax +
inc eax  +
cmp dword ptr [ecx+38h] 0 +
jz locret_1004278  +
mov eax [ecx+38h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
inc edi  +
cmp dword ptr [esi+0FCh] 0 +
jz loc_10042D6  +
push dword ptr [ebp+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_10042D6  +
and [ebp+8] eax +
mov eax [esi+0FCh] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
mov eax [ebp+8] +
test edi edi +
jl loc_10042CB  +
test eax eax +
jnz loc_10069E5  +
xor edi edi +
inc edi  +
test eax eax +
jnz loc_1006A02  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
xor ecx ecx +
cmp [esi+18h] ecx +
jz loc_1006C7E  +
mov eax [esi+18h] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
mov edi ecx +
call sub_1004007  +
mov esi [edi+108h] +
add esi [edi+7Ch] +
mov ecx edi +
add esi [edi+80h] +
xor ebx ebx +
add esi [ebp+var_8] +
call sub_1004226  +
test al 2 +
jz loc_10647A7  +
mov ebx [edi+70h] +
add ebx [edi+6Ch] +
sub ebx [edi+7Ch] +
sub ebx [edi+80h] +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1004396  +
mov ecx edi +
mov [eax] ebx +
call sub_1004226  +
test al 2 +
jz loc_1004396  +
mov ecx edi +
call sub_1004266  +
test eax eax +
jz loc_1004396  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [edi+4]  +
call ds:GetParent  +
push eax  +
call ds:GetWindowRect  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov ecx edi +
push eax  +
call sub_10043A5  +
cmp eax 1 +
jg loc_10647CE  +
pop edi  +
lea eax [ebx+esi] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ecx+68h] +
add esi [ecx+64h] +
lea edx [ebp+var_4] +
lea eax [ecx+14h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edx [ebp+var_4] +
mov ecx eax +
mov eax edx +
sub eax esi +
add eax [ebp+arg_0] +
add ecx edx +
cdq   +
idiv  ecx +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+2Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+34h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov cl [ebp+arg_18] +
sub esp 10h +
push edi  +
xor edi edi +
cmp cl 0FFh +
jnz loc_1007EF6  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:DrawThemeBackground  +
mov edi eax +
mov eax edi +
pop edi  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+24h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+60h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_10044DA  +
push ecx  +
call ds:off_10044DC  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22E0 0FFFFFFFFh +
jz loc_10283C9  +
mov eax dword_10B22E0 +
test eax eax +
jz loc_105CC9A  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ecx+10h] eax +
setnz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
xor ebx ebx +
push edi  +
mov edi [ebp+18h] +
cmp [ebp+14h] ebx +
jnz loc_10064BC  +
cmp edi ebx +
jz loc_10064E4  +
mov eax [esi] +
push edi  +
push dword ptr [ebp+10h]  +
push esi  +
call dword ptr [eax+40h]  +
mov ebx eax +
test ebx ebx +
jl loc_100455F  +
cmp dword ptr [edi] 0FFFFFFFEh +
jz loc_10064BC  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10h] +
test eax eax +
jz loc_1002C32  +
mov eax [eax] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
xor ecx ecx +
mov [eax] ecx +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+8] +
mov [eax] ecx +
cmp [ebx+10h] ecx +
jz loc_1004602  +
mov eax [ebx+10h] +
cmp eax ecx +
jz loc_1053573  +
mov eax [eax] +
push edi  +
lea edi [eax-1] +
cmp edi ecx +
jl loc_1004601  +
push esi  +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+90h]  +
test eax eax +
jnz loc_105357A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+74h]  +
test eax eax +
jg loc_105356E  +
dec edi  +
jns loc_10045D5  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
mov edi [ebp+arg_8] +
cmp dword ptr [edi] 0 +
mov ebx ecx +
mov [ebp+nNumerator] ebx +
jnz loc_1004641  +
push 1  +
mov ecx edi +
call sub_1003E30  +
test eax eax +
jz loc_1066CDB  +
mov ecx [ebx+10h] +
push esi  +
call sub_1004266  +
mov esi eax +
mov eax [ebx+10h] +
add eax 1Ch +
mov ecx [eax] +
push 0Dh  +
push eax  +
call dword ptr [ecx+10h]  +
neg eax  +
sbb eax eax +
inc eax  +
cmp [ebp+arg_0] 1 +
mov [ebp+var_18] eax +
jnz loc_1005DFD  +
push [ebp+arg_4]  +
mov ecx ebx +
test eax eax +
jz loc_1066CE7  +
push 1  +
call sub_10049CB  +
and [ebp+arg_0] 0 +
or [ebp+var_8] 0FFFFFFFFh +
mov [ebp+nDenominator] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
mov ecx ebx +
call sub_1004970  +
push [ebp+arg_4]  +
mov edi ds:off_1003D88 +
push dword ptr [ebx+18h]  +
call edi  +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:CopyRect  +
test esi esi +
jz loc_1066D31  +
mov esi [ebp+rcSrc.right] +
mov eax [ebp+arg_0] +
sub esi [ebp+rcSrc.left] +
and [ebp+nNumerator] 0 +
cmp eax [ebp+var_8] +
mov [ebp+arg_4] eax +
jg loc_1004739  +
or [ebp+var_C] 0FFFFFFFFh +
sub [ebp+var_C] eax +
cmp [ebp+var_4] 0 +
jl loc_1004751  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
call ds:CopyRect  +
mov eax [ebp+arg_0] +
cmp [ebp+arg_4] eax +
jg loc_1066CF7  +
mov ecx [ebp+arg_8] +
lea eax [ebp+rcDst] +
push eax  +
call sub_1003DE4  +
cmp eax 0FFFFFFFFh +
jz loc_1066D25  +
cmp [ebp+var_18] 0 +
jz loc_1005E3C  +
push [ebp+arg_4]  +
mov ecx ebx +
push 1  +
call sub_10048C3  +
add [ebp+nNumerator] eax +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_8] +
jle loc_10046DA  +
cmp [ebp+var_4] 0 +
jl loc_1004751  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1004745  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1004751  +
mov ecx [ebp+var_8] +
mov [eax] ecx +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+18h] +
push edi  +
test eax eax +
jz loc_1004798  +
mov ebx [eax] +
xor edi edi +
test ebx ebx +
jle loc_100478F  +
push edi  +
push dword ptr [esi+18h]  +
call ds:off_1003D88  +
mov eax [eax+10h] +
cmp eax 0FFFFFFFFh +
jnz loc_10666BD  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
xor ebx ebx +
jmp loc_1004773  +
***
inc edi  +
cmp edi ebx +
jge loc_100478F  +
jmp loc_1004779  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+1Ch] +
pop ebp  +
retn 4  +
***
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
jmp loc_1003E6E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
lea esi [edi+0Ch] +
mov eax [esi] +
xor ebx ebx +
mov [ebp-4] ebx +
cmp eax ebx +
jnz loc_10364A8  +
cmp [edi+34h] ebx +
jnz loc_10530FE  +
mov eax [edi+10h] +
cmp eax ebx +
jz loc_102AC44  +
mov eax [eax] +
cmp eax ebx +
jle loc_100484B  +
lea eax [ebp+8] +
push eax  +
push offset riid  +
push 3  +
push ebx  +
push offset rclsid  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_100484B  +
mov eax [edi+10h] +
mov eax [eax+4] +
mov ecx [ebp+8] +
mov eax [eax] +
mov edi [ecx] +
mov ecx [eax] +
push ebx  +
push ebx  +
push esi  +
push ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push dword ptr [ebp+8]  +
call dword ptr [edi+28h]  +
test eax eax +
jl loc_1004842  +
mov eax [esi] +
mov [ebp-4] eax +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax [esi+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test eax eax +
jnz loc_1005A6F  +
mov ebx [ebp+var_4] +
test ebx ebx +
jnz loc_1005A6F  +
mov eax [esi+1Ch] +
mov eax [eax+4] +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
jmp loc_1005A6F  +
***
mov ecx [ebp+8] +
mov ecx [ecx+40h] +
jmp loc_1004AD6  +
***
mov eax 80070057h +
jmp loc_1004ADB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+nNumber] 1 +
push ebx  +
push esi  +
push edi  +
mov edi 0C8h +
mov esi ecx +
mov ebx edi +
jnz loc_10070D2  +
push [ebp+nNumerator]  +
push dword ptr [esi+1Ch]  +
call ds:off_1002B68  +
lea edx [ebp+nNumber] +
push edx  +
mov [ebp+nNumerator] eax +
mov eax [esi+10h] +
push 0Dh  +
push [ebp+nNumerator]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_100D51D  +
mov eax [esi+10h] +
lea edx [ebp+nNumber] +
push edx  +
push 10h  +
push [ebp+nNumerator]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_100D51D  +
mov eax [esi+10h] +
lea edx [ebp+nNumber] +
push edx  +
push 11h  +
push [ebp+nNumerator]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10364F5  +
mov eax [esi+10h] +
lea edx [ebp+nNumber] +
push edx  +
push 12h  +
push [ebp+nNumerator]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10364F5  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx ds:off_1003D88 +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
test eax eax +
jg loc_10666CB  +
push [ebp+arg_0]  +
push dword ptr [esi+18h]  +
call ebx  +
mov eax [eax+10h] +
cmp eax 0FFFFFFFFh +
jnz loc_10049B1  +
mov esi [esi+1Ch] +
test esi esi +
jz loc_10049C2  +
mov esi [esi] +
lea eax [esi-1] +
test eax eax +
jl loc_10666DB  +
mov ecx [ebp+arg_4] +
mov [ecx] edi +
mov ecx [ebp+arg_8] +
pop edi  +
pop esi  +
mov [ecx] eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
xor esi esi +
jmp loc_10049A6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+nNumerator] +
push eax  +
push [ebp+arg_4]  +
xor ebx ebx +
mov edi ecx +
mov [ebp+nNumerator] ebx +
call sub_1004970  +
mov esi [ebp+nNumerator] +
cmp esi [ebp+var_4] +
jg loc_1004A08  +
push esi  +
push [ebp+nNumber]  +
mov ecx edi +
call sub_10048C3  +
add ebx eax +
inc esi  +
jmp loc_10049F3  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
sub eax [ebp-78h] +
push eax  +
push dword ptr [ebp+8]  +
call ds:off_1003D88  +
push eax  +
lea eax [ebp-8Ch] +
push eax  +
call ds:CopyRect  +
push dword ptr [ebp-4]  +
lea eax [ebp-8Ch] +
push dword ptr [ebp-8]  +
push eax  +
call edi  +
lea eax [ebp-9Ch] +
push eax  +
mov ecx esi +
call sub_1005931  +
lea eax [ebp-9Ch] +
push eax  +
mov ecx esi +
call sub_100575B  +
mov eax [ebp-90h] +
cmp eax [ebp-74h] +
jnz loc_1004A77  +
mov eax [ebp-98h] +
dec eax  +
cmp [ebp-7Ch] eax +
jnz loc_1004A77  +
mov eax [ebp-58h] +
mov [ebp-84h] eax +
lea eax [ebp-9Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_1004C89  +
mov eax [ebp-90h] +
inc eax  +
jmp loc_100544C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+10h] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
shr ecx 10h +
xor eax eax +
test cx cx +
jz loc_10048A9  +
cmp cx 1 +
jnz loc_10048B4  +
mov ecx [ebp+8] +
mov ecx [ecx+44h] +
mov edx [ebp+10h] +
mov [edx] ecx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
lea esi [ebx+8Ch] +
xor edi edi +
cmp [esi] edi +
jz loc_10285E4  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetParent  +
push eax  +
call ds:GetWindowRect  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [ebx+4]  +
push edi  +
call ds:MapWindowPoints  +
lea eax [ebp+rc] +
push eax  +
push [ebp+arg_0]  +
call ds:GetClipBox  +
cmp eax 1 +
jz loc_1051029  +
lea eax [ebp+hDC] +
push eax  +
push edi  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+hDC] edi +
call ds:BeginBufferedPaint  +
mov [ebp+var_20] eax +
cmp eax edi +
jz loc_1004C7B  +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
cmp [ebx+3Ch] edi +
jz loc_10653DB  +
cmp [ebx+4Ch] edi +
jz loc_1004B82  +
push edi  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hDC]  +
call ds:SHLWAPI_197  +
mov ecx ebx +
call sub_1005646  +
test eax eax +
jz loc_10653C6  +
lea eax [ebx+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
sub eax edi +
jz loc_10653B6  +
dec eax  +
jz loc_10653A6  +
dec eax  +
jz loc_1065396  +
dec eax  +
jnz loc_1004BCA  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Points] +
push eax  +
push edi  +
push 1  +
push [ebp+hDC]  +
push dword ptr [ebx+3Ch]  +
call ds:DrawThemeBackground  +
mov eax [ebx+90h] +
cmp eax edi +
jz loc_10285F5  +
mov eax [eax] +
mov [ebp+var_8] eax +
mov ecx ebx +
call sub_1005671  +
xor ecx ecx +
cmp eax 1 +
setnle cl  +
cmp [ebp+var_8] edi +
mov [ebp+arg_0] edi +
mov [ebp+var_C] ecx +
jle loc_1004C59  +
mov eax [ebx+90h] +
mov eax [eax+4] +
mov ecx [ebp+arg_0] +
mov esi [eax+ecx*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
test eax eax +
jz loc_1004C4E  +
cmp [ebp+var_C] edi +
jnz loc_1004C1D  +
cmp esi [ebx+164h] +
jz loc_1004C4E  +
cmp esi [ebx+0A8h] +
jz loc_1044C94  +
or edi 0FFFFFFFFh +
push esi  +
mov ecx ebx +
call sub_10055DA  +
lea ecx [ebp+rc] +
push ecx  +
mov [ebp+var_1C] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+80h]  +
test eax eax +
jnz loc_10056AE  +
xor edi edi +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_8] +
jl loc_1004BF7  +
mov eax [ebx+164h] +
cmp eax edi +
jnz loc_1065421  +
cmp [ebx+3Ch] edi +
jz loc_10654B7  +
push 1  +
push [ebp+var_20]  +
call ds:EndBufferedPaint  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2F4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+hDC] eax +
mov eax [ebx+1Ch] +
push edi  +
mov [ebp+var_254] esi +
test eax eax +
jz loc_1002C65  +
mov ecx [eax] +
mov eax [esi+0Ch] +
and [ebp+var_238] 0 +
and [ebp+var_258] 0 +
test eax eax +
jl loc_1004D42  +
cmp eax ecx +
jge loc_1004D42  +
mov ecx [ebx+1Ch] +
mov ecx [ecx+4] +
mov edi [ecx+eax*4] +
mov eax [edi] +
push edi  +
mov [ebp+var_258] edi +
call dword ptr [eax+0Ch]  +
push 1  +
mov [ebp+var_238] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
cmp dword ptr [esi+8] 1 +
jnz loc_1004D42  +
mov ecx [ebx+10h] +
call sub_1004226  +
test al 2 +
jz loc_1004D42  +
mov eax [ebx+10h] +
push 0  +
push 0Dh  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10052D8  +
mov eax [ebx+10h] +
push 0  +
push 10h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10052D8  +
push dword ptr [esi+0Ch]  +
mov ecx ebx +
call sub_10059F8  +
xor edx edx +
mov [ebp+var_260] eax +
mov eax [esi+2Ch] +
cmp eax 0FFFFFFFFh +
setnz dl  +
or [ebp+nNumber] 0FFFFFFFFh +
xor ecx ecx +
mov [ebp+nNumerator] edx +
cmp [esi+64h] ecx +
jnz loc_10540A7  +
cmp [esi+68h] ecx +
jnz loc_10540A7  +
xor edi edi +
mov [ebp+var_24C] ecx +
inc edi  +
cmp [esi+8] edi +
jnz loc_1005F28  +
mov edi [esi+0Ch] +
xor ecx ecx +
cmp edi eax +
mov eax [esi+30h] +
setz cl  +
mov [ebp+var_214] ecx +
cmp edi eax +
jz loc_1004047  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_1004047  +
cmp eax 0FFFFFFFEh +
jz loc_1066E4A  +
and [ebp+var_234] 0 +
mov edi [ebp+var_238] +
xor eax eax +
cmp edi eax +
jz loc_1066E8D  +
mov eax [edi] +
push edi  +
call dword ptr [eax+64h]  +
mov [ebp+var_218] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+6Ch]  +
cmp [ebp+var_218] 0FFFFh +
mov [ebp+var_268] eax +
jz loc_1066E57  +
mov eax [ebx+10h] +
xor edi edi +
cmp [eax+3Ch] edi +
jz loc_1066FB6  +
mov eax [esi+24h] +
mov ecx [esi+28h] +
cmp eax ecx +
jnz loc_1066E9E  +
mov [ebp+var_224] 5 +
mov eax [esi+8] +
cmp eax 2 +
jz loc_10060C3  +
cmp [ebp+var_24C] 0 +
jnz loc_10540B5  +
mov ecx [ebp+var_234] +
push 0  +
push [ebp+nNumerator]  +
push [ebp+var_214]  +
push eax  +
call sub_1005BC0  +
mov [ebp+var_220] eax +
cmp [ebp+var_218] 0 +
jnz loc_10441DE  +
mov eax [esi+88h] +
test eax eax +
jnz loc_10540CC  +
cmp [ebp+var_24C] 0 +
jnz loc_10540C4  +
cmp byte ptr [esi+82h] 0 +
jbe loc_1004EA7  +
movzx eax word ptr [ebx+2Eh] +
test ax ax +
jge loc_10442E8  +
cmp ax 0FFFEh +
jz loc_1066EE7  +
mov al [esi+54h] +
or [ebp+var_230] 0FFFFFFFFh +
xor edi edi +
mov byte ptr [ebp+var_228] al +
cmp [ebp+var_24C] edi +
jnz loc_1004ECF  +
mov al [esi+81h] +
test al al +
ja loc_1066F46  +
cmp [ebp+var_220] 0FFFFFFFFh +
jz loc_1004F00  +
push [ebp+var_228]  +
lea eax [esi+10h] +
push edi  +
push eax  +
push [ebp+var_220]  +
mov eax [ebx+10h] +
push [ebp+var_224]  +
push [ebp+hDC]  +
push dword ptr [eax+3Ch]  +
call sub_100445D  +
cmp [ebp+var_230] 0FFFFFFFFh +
jnz loc_1066F83  +
cmp [esi+74h] edi +
jg loc_10456D0  +
cmp [esi+7Ch] edi +
jg loc_100C7FB  +
mov ecx [ebx+10h] +
call sub_1004226  +
test al 2 +
jz loc_106703B  +
and [ebp+var_218] 0 +
mov esi [ebp+var_254] +
mov ecx [ebx+10h] +
lea eax [ebp+nDenominator] +
push eax  +
push dword ptr [esi+8]  +
call sub_1004304  +
mov ecx [ebx+10h] +
sub eax [ecx+108h] +
add esi 10h +
sub eax [ebp+nDenominator] +
lea edi [ebp+rcSrc] +
movs   +
movs   +
movs   +
mov [ebp+var_220] eax +
mov eax [ebp+var_254] +
cmp dword ptr [eax] 0 +
movs   +
jz loc_1067062  +
mov ecx [ebx+10h] +
mov eax [ecx+78h] +
mov [ebp+Rect.bottom] eax +
mov eax [ecx+74h] +
mov [ebp+Rect.right] eax +
call sub_1004226  +
test al 2 +
jz loc_10670AF  +
mov eax [ebx+10h] +
mov edi [eax+7Ch] +
mov esi [eax+80h] +
mov ecx [ebp+rcSrc.right] +
mov eax [ebp+rcSrc.bottom] +
sub eax [ebp+rcSrc.top] +
sub ecx esi +
sub eax [ebp+Rect.right] +
sub ecx edi +
sub ecx [ebp+rcSrc.left] +
sub eax [ebp+Rect.bottom] +
mov [ebp+var_230] ecx +
mov [ebp+var_214] eax +
test ecx ecx +
jle loc_10052D8  +
test eax eax +
jle loc_10052D8  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
mov eax [ebp+Rect.right] +
add [ebp-244h] eax +
mov eax [ebp+Rect.bottom] +
sub [ebp-23Ch] eax +
mov ecx [ebx+10h] +
add [ebp+rc] edi +
sub [ebp-240h] esi +
and [ebp+var_220] 0 +
and [ebp+var_224] 0 +
lea eax [ebp+var_2F4] +
push eax  +
call sub_1004007  +
mov eax [ebp+var_2F4] +
cmp [ebp+var_230] eax +
mov ecx [ebp+var_2F0] +
mov [ebp+var_250] eax +
mov [ebp+var_294] ecx +
jl loc_1067147  +
cmp [ebp+var_214] ecx +
jl loc_1067147  +
xor esi esi +
cmp [ebp+var_218] esi +
jnz loc_10671BD  +
mov ecx [ebp-240h] +
sub ecx [ebp+rc] +
mov eax [ebp+var_250] +
cmp ecx eax +
jle loc_10050BA  +
sub eax [ebp-240h] +
push esi  +
add eax [ebp+rc] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov eax [ebp+var_254] +
cmp [eax+8Ch] esi +
jnz loc_104569C  +
mov eax [ebx+10h] +
mov eax [eax+38h] +
mov ecx [eax] +
lea edx [ebp+var_228] +
push edx  +
push esi  +
push [ebp+var_260]  +
push dword ptr [ebx+14h]  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_10052A9  +
cmp [ebp+var_228] 0FFFFFFFEh +
jz loc_10052A9  +
mov eax [ebx+10h] +
mov eax [eax+38h] +
mov ecx [eax] +
lea edx [ebp+var_22C] +
push edx  +
push [ebp+var_228]  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_10052A9  +
and [ebp+nNumerator] 0 +
lea eax [ebp+nNumerator] +
push eax  +
push offset dword_1004590  +
push [ebp+var_22C]  +
call ds:off_1003E90  +
test eax eax +
jl loc_1005299  +
push 40h  +
lea eax [ebp+var_2D4] +
push 0  +
push eax  +
mov [ebp+var_2D8] 44h +
call memset  +
mov eax [ebp+var_22C] +
mov [ebp+var_2D4] eax +
movzx eax word ptr [ebp+var_228] +
mov [ebp+var_2D0] eax +
mov eax [ebp+hDC] +
mov [ebp+var_2CC] eax +
mov eax [ebp+rc] +
mov [ebp+var_2C8] eax +
mov eax [ebp-244h] +
mov [ebp+var_2C4] eax +
mov eax 0FF000000h +
add esp 0Ch +
mov [ebp+var_2B0] eax +
mov [ebp+var_2AC] eax +
mov eax [ebp+var_250] +
cmp [ebp+var_230] eax +
push 8  +
mov [ebp+var_2A8] 1 +
pop esi  +
jl loc_106729E  +
mov eax [ebp+var_294] +
cmp [ebp+var_214] eax +
jl loc_10672BB  +
mov eax [ebx+10h] +
lea edx [ebp+var_214] +
push edx  +
push 0  +
add eax 1Ch +
mov ecx [eax] +
lea edi [ebx+8] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10456F0  +
mov eax [ebx+10h] +
lea edx [ebp+var_214] +
push edx  +
push 1  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10456F0  +
mov eax [ebp+var_254] +
mov al [eax+54h] +
cmp al 0FFh +
jnz loc_1007F7E  +
cmp [ebp+var_260] 0 +
jnz loc_1005245  +
or [ebp+var_2A8] 8000h +
mov eax [ebp+nNumerator] +
mov ecx [eax] +
lea edx [ebp+var_2D8] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
cmp eax 8000000Ah +
jz loc_1053156  +
test byte ptr [ebp+var_2A0] 8 +
jnz loc_1005299  +
mov ecx [ebx+10h] +
call sub_1004226  +
test al 10h +
jnz loc_1005299  +
mov eax [ebp+var_238] +
test eax eax +
jz loc_1005F6F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0C0h]  +
mov esi eax +
test esi esi +
jnz loc_10672C4  +
mov eax [ebp+nNumerator] +
test eax eax +
jz loc_10052A9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [ebp+var_250] +
mov eax [ebp+var_230] +
add esi 4 +
sub eax esi +
test eax eax +
jle loc_10052CB  +
cmp [ebp+var_218] 0 +
jnz loc_1067394  +
cmp [ebp+var_220] 0 +
jnz loc_10675AB  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 9Ch +
push esi  +
lea ecx [ebp-9Ch] +
call sub_10056C7  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
mov [ebp-94h] eax +
cmp eax 4 +
jz loc_1005488  +
mov ecx [esi+8] +
push ebx  +
call sub_1004266  +
mov [ebp-9Ch] eax +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov ebx eax +
mov eax [esi+10h] +
neg ebx  +
sbb ebx ebx +
inc ebx  +
test eax eax +
jz loc_100603A  +
mov eax [eax] +
mov [ebp-98h] eax +
mov eax [ebp+10h] +
mov [ebp-70h] eax +
mov eax [ebp+14h] +
mov [ebp-6Ch] eax +
test ebx ebx +
jz loc_1005386  +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
push 0  +
sbb edx edx +
push 6  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1067665  +
push edi  +
xor eax eax +
lea edi [ebp-8] +
stos   +
stos   +
mov eax [ebp+18h] +
test eax eax +
jnz loc_1067674  +
mov edi [ebp-4] +
test ebx ebx +
jz loc_10053C4  +
mov eax [esi+8] +
lea edx [ebp-0Ch] +
push edx  +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
sbb edx edx +
push 0Bh  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1067684  +
lea eax [ebp-58h] +
push eax  +
push dword ptr [ebp-94h]  +
add esi 0FFFFFFF8h +
mov ecx esi +
call sub_1005AD0  +
push edi  +
push dword ptr [ebp-8]  +
mov edi ds:OffsetRect +
lea eax [ebp-58h] +
push eax  +
call edi  +
lea eax [ebp-9Ch] +
push eax  +
mov ecx esi +
call sub_10057CF  +
mov eax [ebp-94h] +
cmp eax 1 +
jnz loc_1005F80  +
mov eax [ebp-98h] +
and dword ptr [ebp-7Ch] 0 +
test eax eax +
jle loc_1005471  +
lea eax [ebp-9Ch] +
push eax  +
lea eax [ebp-8] +
push eax  +
mov ecx esi +
call sub_1005795  +
and dword ptr [ebp+8] 0 +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-78h] +
push eax  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-7Ch]  +
mov ecx esi +
push dword ptr [ebp-94h]  +
call sub_1004615  +
test eax eax +
jl loc_1005463  +
mov eax [ebp-78h] +
cmp eax [ebp-74h] +
mov [ebp-90h] eax +
jle loc_1004A11  +
lea ecx [ebp+8] +
call sub_10044C2  +
mov eax [ebp-98h] +
inc dword ptr [ebp-7Ch]  +
cmp [ebp-7Ch] eax +
jl loc_1005413  +
dec eax  +
mov [ebp-7Ch] eax +
lea eax [ebp-9Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_1005492  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
cmp dword ptr [esi+8] 1 +
push edi  +
mov ebx ecx +
jnz loc_10054B4  +
mov ecx [ebx+10h] +
call sub_1004226  +
test al 2 +
jz loc_10054F0  +
lea edi [ebx+8] +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [ebp+arg_4] +
sub eax [ebp+var_4] +
js loc_1008433  +
cmp eax 1 +
jg loc_1008428  +
xor edi edi +
inc edi  +
mov eax [ebx+10h] +
xor ecx ecx +
cmp [eax+3Ch] ecx +
jz loc_10339F7  +
mov eax [esi+8] +
cmp eax 2 +
jz loc_1005559  +
xor edx edx +
inc edx  +
cmp edi edx +
mov [ebp+arg_4] ecx +
jg loc_100843B  +
cmp [esi+8Ch] ecx +
jnz loc_100403F  +
cmp dword ptr [esi+30h] 0FFFFFFFFh +
jnz loc_100403F  +
xor eax eax +
push ecx  +
lea edx [esi+44h] +
push edx  +
xor edx edx +
cmp eax ecx +
mov eax [ebx+10h] +
setnz dl  +
push edi  +
add edx 0Dh +
push edx  +
push [ebp+hdc]  +
push dword ptr [eax+3Ch]  +
call ds:DrawThemeBackground  +
cmp [ebp+arg_4] 0 +
jnz loc_10339E1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
mov esi ds:GetWindowRect +
push edi  +
lea eax [ebp-10h] +
push eax  +
push hWnd  +
call esi  +
mov edi [ebp+8] +
lea eax [ebp-20h] +
push eax  +
push dword ptr [edi-1Ch]  +
call esi  +
mov eax [edi] +
push edi  +
call dword ptr [eax+64h]  +
pop edi  +
pop esi  +
test eax eax +
jz loc_1062D91  +
mov ecx [ebp-4] +
mov eax [ebp-14h] +
sub ecx [ebp-0Ch] +
sub eax [ebp-1Ch] +
sub eax ecx +
neg eax  +
sbb eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+28h] +
mov eax [eax+0CD8h] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+0E8h] +
cmp dword ptr [eax] 0 +
push edi  +
mov edi [ebp+arg_0] +
jz loc_10055FD  +
cmp edi [esi+0E4h] +
jz loc_10644A0  +
cmp edi [esi+0B4h] +
jz loc_1004034  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
cmp dword ptr [eax+20h] 0 +
mov dword ptr [ebp-4] 3 +
jz loc_100563A  +
mov eax [eax+20h] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
mov eax [ebp-4] +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+38h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_1005668  +
mov ecx esi +
call sub_1004226  +
test al 2 +
jz loc_1005668  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
xor edi edi +
mov ecx esi +
inc edi  +
call sub_1004266  +
test eax eax +
jz loc_10056A8  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov ecx esi +
push eax  +
call sub_10043A5  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov eax [esi] +
push 0  +
push [ebp+var_1C]  +
push edi  +
push [ebp+hDC]  +
push esi  +
call dword ptr [eax+48h]  +
jmp loc_1004C4C  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
or dword ptr [esi+0Ch] 0FFFFFFFFh +
push edi  +
mov edi ds:SetRectEmpty +
lea eax [esi+10h] +
xor ebx ebx +
push eax  +
mov [esi] ebx +
mov [esi+4] ebx +
mov dword ptr [esi+8] 4 +
call edi  +
or dword ptr [esi+2Ch] 0FFFFFFFFh +
or dword ptr [esi+30h] 0FFFFFFFFh +
lea eax [esi+34h] +
push eax  +
mov [esi+20h] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
call edi  +
lea eax [esi+44h] +
push eax  +
call edi  +
pop edi  +
mov [esi+58h] ebx +
mov [esi+5Ch] ebx +
mov [esi+60h] ebx +
mov [esi+64h] ebx +
mov [esi+68h] ebx +
mov [esi+6Ch] ebx +
mov [esi+70h] ebx +
mov [esi+74h] ebx +
mov [esi+78h] bl +
mov [esi+7Ch] ebx +
mov [esi+80h] bl +
mov [esi+81h] bl +
mov [esi+84h] ebx +
mov [esi+88h] ebx +
mov [esi+8Ch] ebx +
mov byte ptr [esi+54h] 0FFh +
mov byte ptr [esi+82h] 0FFh +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ecx+10h] +
mov eax ecx +
add ecx 8 +
neg eax  +
sbb eax eax +
and eax ecx +
xor ecx ecx +
cmp [edx+0BCh] eax +
setz cl  +
mov eax ecx +
mov ecx [ebp+arg_0] +
test eax eax +
jnz loc_104567F  +
mov [ecx+8Ch] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov edx [eax+20h] +
push esi  +
push edx  +
push dword ptr [ecx+18h]  +
lea esi [eax+34h] +
call ds:off_1003D88  +
push eax  +
push esi  +
call ds:CopyRect  +
mov eax [ebp+arg_0] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push esi  +
call ds:OffsetRect  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+10h] +
add eax 1Ch +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi [ebp+arg_0] +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
inc ebx  +
cmp dword ptr [esi+8] 1 +
jnz loc_100585D  +
mov ecx [edi+10h] +
call sub_1004226  +
test al 2 +
jz loc_100585D  +
mov eax [edi+1Ch] +
test eax eax +
jz loc_10446D8  +
mov eax [eax] +
cmp eax 1 +
jnz loc_100585D  +
mov eax [edi+1Ch] +
mov eax [eax+4] +
mov eax [eax] +
lea edx [ebp+var_4] +
push edx  +
mov [ebp+arg_0] eax +
mov eax [edi+10h] +
push 0Eh  +
push [ebp+arg_0]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1007F73  +
mov eax [edi+10h] +
lea edx [ebp+var_4] +
push edx  +
push 0Fh  +
push [ebp+arg_0]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1007F73  +
mov eax ds:nDenominator +
lea ecx [esi+6Ch] +
mov [ecx] eax +
test ebx ebx +
jz loc_1005886  +
mov eax [edi+10h] +
push ecx  +
push 8  +
lea ecx [edi+8] +
add eax 1Ch +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+24h]  +
test eax eax +
jz loc_1044DD4  +
xor eax eax +
mov [esi+58h] eax +
test ebx ebx +
jz loc_10058AD  +
mov eax [edi+10h] +
lea edx [esi+70h] +
push edx  +
push 9  +
lea edx [edi+8] +
add eax 1Ch +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1066847  +
xor eax eax +
cmp dword ptr [esi+58h] 0 +
mov [esi+5Ch] eax +
jnz loc_10058DA  +
test ebx ebx +
jz loc_10058DA  +
mov eax [edi+10h] +
lea ecx [esi+6Ch] +
push ecx  +
push 0Ah  +
lea ecx [edi+8] +
add eax 1Ch +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+24h]  +
test eax eax +
jz loc_10446D2  +
xor eax eax +
lea edx [ebp+var_8] +
push edx  +
mov [esi+60h] eax +
mov eax [edi+10h] +
push 4  +
add eax 1Ch +
mov ecx [eax] +
lea ebx [edi+8] +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_106684D  +
cmp dword ptr [esi+8] 2 +
jz loc_10060B7  +
mov eax [edi+10h] +
lea ecx [ebp+var_8] +
push ecx  +
push 5  +
lea ecx [edi+8] +
add eax 1Ch +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+24h]  +
test eax eax +
jz loc_100C74E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov ecx [edi+1Ch] +
xor eax eax +
xor ebx ebx +
mov [ebp+var_C] eax +
cmp ecx eax +
jz loc_1002C40  +
mov ecx [ecx] +
mov [ebp+var_8] ecx +
mov esi [ebp+arg_0] +
mov ecx [esi+0Ch] +
cmp ecx eax +
mov [esi+64h] eax +
mov [esi+68h] eax +
mov [esi+88h] eax +
jl loc_100597F  +
cmp ecx [ebp+var_8] +
jge loc_100597F  +
mov eax [edi+1Ch] +
mov eax [eax+4] +
mov ebx [eax+ecx*4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0Ch]  +
cmp dword ptr [esi+8] 1 +
jnz loc_1005E46  +
test eax eax +
jz loc_1005E46  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
mov ecx 20000h +
and eax ecx +
sub eax ecx +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp+var_C] eax +
mov eax [edi+10h] +
and [ebp+arg_0] 0 +
lea edx [ebp+arg_0] +
push edx  +
push 13h  +
add eax 1Ch +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_103F381  +
mov eax [edi+10h] +
lea edx [ebp+arg_0] +
push edx  +
push 15h  +
add eax 1Ch +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_103F7D4  +
cmp [ebp+var_C] 0 +
jnz loc_105410E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
xor ebx ebx +
push edi  +
cmp eax ebx +
jz loc_1002C48  +
mov eax [eax] +
mov ecx [ebp+arg_0] +
cmp ecx ebx +
mov [ebp+var_4] ebx +
jl loc_1005A32  +
cmp ecx eax +
jge loc_1005A32  +
mov eax [esi+1Ch] +
mov eax [eax+4] +
mov eax [eax+ecx*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_4] eax +
lea edi [esi+8] +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_1005A50  +
mov ecx [esi+10h] +
call sub_1004226  +
test al 2 +
jz loc_1066AD4  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 2 +
jz loc_1005A6F  +
mov eax [esi+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+80h]  +
test eax eax +
jz loc_1004878  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
xor ebx ebx +
xor edi edi +
mov eax [esi+10h] +
test eax eax +
jz loc_1005AC7  +
mov eax [eax] +
cmp edi eax +
jge loc_1005ABE  +
push edi  +
push dword ptr [esi+10h]  +
call ds:off_1003D88  +
push dword ptr [ebp+0Ch]  +
push eax  +
lea eax [ebp-10h] +
push eax  +
call ds:IntersectRect  +
test eax eax +
jnz loc_1005ABB  +
inc edi  +
jmp loc_1005A8F  +
***
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
xor eax eax +
jmp loc_1005A98  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+10h] +
mov esi [eax+108h] +
mov eax [edi+18h] +
test eax eax +
jz loc_10364B8  +
mov eax [eax] +
dec eax  +
push eax  +
push dword ptr [edi+18h]  +
call ds:off_1003D88  +
mov ebx [ebp+lprcDst] +
push eax  +
push ebx  +
call ds:CopyRect  +
mov eax [ebx+8] +
sub eax esi +
cmp [ebp+arg_0] 1 +
mov [ebx] eax +
jnz loc_1005B24  +
mov ecx [edi+10h] +
call sub_1004226  +
test al 2 +
jz loc_10666E2  +
lea esi [edi+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
lea edx [ebp+lprcDst] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [ebp+lprcDst] +
sub eax [ebp+arg_0] +
cmp eax 1 +
jg loc_1008421  +
xor ecx ecx +
inc ecx  +
cmp ecx 3 +
jge loc_10364B0  +
cmp eax 1 +
jg loc_1005B6E  +
xor eax eax +
inc eax  +
mov ecx [edi+10h] +
cmp dword ptr [ecx+3Ch] 0 +
mov ecx edi +
jz loc_10666EA  +
push 0  +
push eax  +
call sub_1005B99  +
push eax  +
push ebx  +
call ds:OffsetRect  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea edx [eax-1] +
cmp edx 2 +
ja loc_1005BB7  +
mov ecx [ecx+10h] +
mov eax [ecx+eax*4+138h] +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_1005BB3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor edx edx +
or eax 0FFFFFFFFh +
cmp [ebp+arg_C] edx +
jnz loc_1066554  +
cmp [ebp+arg_0] 2 +
jz loc_10060A1  +
cmp [ebp+arg_4] edx +
jnz loc_1044CAE  +
cmp [ebp+arg_8] edx +
jnz loc_1066564  +
neg ecx  +
sbb ecx ecx +
and ecx 3 +
inc ecx  +
mov eax ecx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+10h]  +
call ds:SetRectEmpty  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
test eax eax +
jz loc_1005CC8  +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+0Ch]  +
mov [ebp+8] eax +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
push 0Dh  +
push eax  +
call dword ptr [ecx+10h]  +
xor edi edi +
test eax eax +
jnz loc_1005C61  +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
push edi  +
sbb edx edx +
push 6  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1066DF0  +
push ebx  +
mov ebx [ebp+0Ch] +
cmp ebx 0FFFFFFFFh +
jz loc_10364E6  +
cmp ebx 0FFFFFFFEh +
jz loc_10336F6  +
cmp dword ptr [ebp+8] 3 +
jz loc_10336F6  +
push edi  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
add esi 0FFFFFFF8h +
push ebx  +
mov ecx esi +
mov [ebp+0Ch] edi +
call sub_1004760  +
push eax  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_1004615  +
test eax eax +
jl loc_1005CC6  +
sub ebx [ebp+8] +
push ebx  +
push dword ptr [ebp+0Ch]  +
call ds:off_1003D88  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:CopyRect  +
lea ecx [ebp+0Ch] +
call sub_10044C2  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
push esi  +
xor edi edi +
call ds:IsWindow  +
test eax eax +
jz loc_1005CFA  +
cmp esi hWnd +
jz loc_1005CFA  +
cmp esi dword_10B10EC +
jz loc_1005CFA  +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+14h] +
push edi  +
test eax eax +
jz loc_100811D  +
mov ebx [eax] +
xor edi edi +
test ebx ebx +
jle loc_1005D46  +
push edi  +
push dword ptr [esi+14h]  +
call ds:off_1002B68  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax [ebp+0Ch] +
jnz loc_1008472  +
mov [ebp-4] edi +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_1005D6D  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ecx +
mov eax [ebx+90h] +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp eax edi +
jz loc_102ACF6  +
mov eax [eax] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jle loc_1005DB4  +
push esi  +
mov eax [ebx+90h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
cmp eax [ebp+arg_0] +
jz loc_1005DBD  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_1005D96  +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
mov [ebp+var_8] esi +
test eax eax +
jz loc_1005DB3  +
mov [eax] edi +
jmp loc_1005DB3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-8] +
call sub_1004760  +
push eax  +
push dword ptr [esi+10h]  +
call ds:off_1003D88  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:CopyRect  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
lea edx [ebp+rcDst] +
push edx  +
lea eax [ebx+8] +
mov ecx [eax] +
xor esi esi +
push esi  +
push eax  +
call dword ptr [ecx+34h]  +
lea eax [ebp+rcDst] +
push eax  +
mov ecx edi +
call sub_1003DE4  +
cmp eax 0FFFFFFFFh +
jz loc_1066DD6  +
mov eax [ebp+arg_C] +
cmp eax esi +
jnz loc_1066DE2  +
mov eax [ebp+arg_10] +
cmp eax esi +
jz loc_1004751  +
jmp loc_1066DE9  +
mov eax 0C8h +
jmp loc_1004725  +
***
xor eax eax +
cmp [ebp+var_8] eax +
mov [ebp+var_10] eax +
mov [ebp+var_4] eax +
jle loc_10059A8  +
mov eax [edi+1Ch] +
mov eax [eax+4] +
mov ecx [ebp+var_4] +
mov eax [eax+ecx*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_14] eax +
test eax eax +
jz loc_1005EA1  +
cmp [ebp+var_10] 0 +
jnz loc_1005E8A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test eax 40000h +
jnz loc_103F496  +
mov eax [ebp+var_14] +
cmp [ebp+var_C] 0 +
jnz loc_1005EA1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test eax 20000h +
jnz loc_103F4AE  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jl loc_1005E57  +
jmp loc_10059A8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+10h] +
xor ecx ecx +
mov [ebp-4] ecx +
mov [ebp-8] ecx +
mov [ebp-14h] ecx +
cmp eax ecx +
jz loc_1005ED3  +
or dword ptr [eax] 0FFFFFFFFh +
push edi  +
mov edi [ebp+8] +
mov eax [edi+14h] +
cmp eax ecx +
jz loc_1002C4F  +
mov eax [eax] +
mov [ebp-10h] eax +
cmp [ebp-10h] ecx +
mov [ebp-0Ch] ecx +
jg loc_1033601  +
mov eax 0FFFFh +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_1005F14  +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_1002C57  +
cmp [ebp-4] eax +
jz loc_1066C2A  +
or dword ptr [ecx] 0FFFFFFFFh +
mov eax [ebp+0Ch] +
pop edi  +
test eax eax +
jz loc_1005F21  +
mov ecx [ebp-8] +
mov [eax] ecx +
mov eax [ebp-4] +
leave   +
retn 0Ch  +
***
cmp dword ptr [esi+30h] 0FFFFFFFFh +
mov [ebp+var_214] edx +
jnz loc_10336C5  +
mov [ebp+var_234] ecx +
cmp [esi+8Ch] ecx +
jnz loc_10336C5  +
lea edx [ebp+nNumber] +
push edx  +
lea edx [ebp+var_268] +
lea eax [ebx+8] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+9Ch]  +
mov [ebp+var_218] eax +
jmp loc_1004E00  +
mov eax [ebx+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
jmp loc_100528F  +
***
jle loc_1005486  +
cmp eax 3 +
jg loc_1005486  +
xor ebx ebx +
push ebx  +
push ebx  +
lea ecx [ebp+8] +
push ecx  +
push ebx  +
push eax  +
mov ecx esi +
mov [ebp+8] ebx +
call sub_1004615  +
test eax eax +
jl loc_1005486  +
push ebx  +
push dword ptr [ebp+8]  +
call ds:off_1003D88  +
push eax  +
lea eax [ebp-8Ch] +
push eax  +
call ds:CopyRect  +
push dword ptr [ebp-4]  +
lea eax [ebp-8Ch] +
push dword ptr [ebp-8]  +
push eax  +
call edi  +
mov eax [ebp-58h] +
lea ecx [ebp+8] +
mov [ebp-84h] eax +
call sub_10044C2  +
lea eax [ebp-9Ch] +
push eax  +
lea eax [ebp-8] +
push eax  +
mov ecx esi +
mov [ebp-7Ch] ebx +
call sub_1005795  +
lea eax [ebp-9Ch] +
push eax  +
mov ecx esi +
mov dword ptr [ebp-90h] 0FFFFFFFEh +
mov [ebp-78h] ebx +
mov [ebp-74h] ebx +
call sub_1005931  +
lea eax [ebp-9Ch] +
push eax  +
mov ecx esi +
call sub_100575B  +
lea eax [ebp-9Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_1004C89  +
jmp loc_1005475  +
***
and dword ptr [ebp-98h] 0 +
jmp loc_1005354  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push esi  +
add ecx 0FFFFFFF8h +
xor esi esi +
call sub_1006072  +
test eax eax +
jnz loc_1033677  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ecx+18h] +
push edi  +
xor edi edi +
mov [ebp+var_C] ecx +
mov [ebp+var_4] edi +
cmp eax edi +
jz loc_1002C39  +
mov eax [eax] +
cmp eax edi +
mov [ebp+var_8] eax +
jg sub_1033687  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn   +
***
cmp ecx edx +
jnz loc_1066558  +
cmp [ebp+arg_4] edx +
jz loc_1005BF9  +
jmp loc_106655C  +
***
mov byte ptr [esi+82h] 0 +
jmp loc_1005907  +
***
cmp byte ptr [esi+81h] 0 +
jbe loc_1004E32  +
jmp loc_1066EC9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100DCB2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+74h]  +
test eax eax +
jnz loc_100DCB2  +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor eax eax +
push ebx  +
mov edi ecx +
mov [ebp+var_4] eax +
mov [ebp+wParam] eax +
mov [ebp+var_8] eax +
call sub_1005D55  +
mov esi eax +
test esi esi +
jz loc_100ED40  +
push [ebp+arg_4]  +
lea ebx [edi+18h] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+50h]  +
push [ebp+arg_4]  +
mov [ebp+var_C] eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+54h]  +
cmp [ebp+var_C] 0 +
mov ebx eax +
jz loc_100615F  +
push [ebp+arg_4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_100B981  +
cmp [edi+0E4h] esi +
jz loc_1065BFC  +
cmp [ebp+var_4] 0 +
jnz loc_100B975  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
test eax eax +
jz loc_10061B5  +
mov eax [esi] +
xor ebx ebx +
cmp [ebp+var_8] ebx +
jnz loc_10541C5  +
cmp [ebp+var_C] ebx +
jz loc_1053E20  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+1Ch]  +
mov ecx [esi] +
lea edx [ebp+rc2] +
push edx  +
push eax  +
push esi  +
call dword ptr [ecx+30h]  +
push ebx  +
lea eax [ebp+rc2] +
push eax  +
push dword ptr [edi+4]  +
call ds:InvalidateRect  +
cmp [ebp+wParam] 0 +
mov ebx 80000000h +
jnz loc_100EC49  +
cmp [ebp+var_8] 0 +
jnz loc_100B9BE  +
mov ebx [ebp+arg_4] +
cmp [ebp+arg_8] 0 +
jnz loc_100B646  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+14h] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax [ebp+8] +
mov eax [eax+70h] +
push ebx  +
push edi  +
xor ebx ebx +
xor edi edi +
mov dword ptr [ebp-8] 80070057h +
cmp eax ebx +
jz loc_1007A29  +
mov eax [eax] +
mov [ebp-4] eax +
cmp [ebp-4] ebx +
jle loc_10062B3  +
push esi  +
mov eax [ebp+8] +
mov eax [eax+70h] +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
cmp eax [ebp+0Ch] +
jz loc_10062BC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
inc ebx  +
cmp ebx [ebp-4] +
lea edi [edi+eax+1] +
jl loc_1006288  +
pop esi  +
mov eax [ebp-8] +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
cmp dword ptr [ebp+10h] 0 +
jnz loc_1007A17  +
mov eax [ebp+14h] +
and dword ptr [ebp-8] 0 +
mov [eax] edi +
jmp loc_10062B2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2278 0FFFFFFFFh +
jz loc_1028377  +
mov eax dword_10B2278 +
test eax eax +
jz loc_105CC3F  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100806C  +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100805E  +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
push esi  +
xor edi edi +
call sub_1005CD2  +
test eax eax +
jz loc_1006397  +
push esi  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1006397  +
push ebx  +
push 0FFFFFFECh  +
push esi  +
call ds:GetWindowLongW  +
push 4  +
push esi  +
mov ebx eax +
call ds:GetWindow  +
test eax eax +
jnz loc_10364CA  +
test bl bl +
js loc_1006396  +
xor edi edi +
inc edi  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [ebp+hWnd] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push 4  +
xor ebx ebx +
push ebx  +
push ebx  +
push [ebp+hWnd]  +
call sub_1003701  +
test eax eax +
jl loc_1003885  +
cmp edi 8006h +
jz loc_103F48E  +
mov esi [esi+94h] +
mov eax [esi] +
push ebx  +
push [ebp+hWnd]  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+18h]  +
mov eax [ebp+hWnd] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1003885  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
test byte ptr [ebp+14h] 1 +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi 20000h +
jnz loc_100AA10  +
test esi esi +
jz loc_105331F  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test eax edi +
jnz loc_100AA10  +
mov eax [esi] +
mov ebx 10000h +
push ebx  +
push ebx  +
push esi  +
call dword ptr [eax+5Ch]  +
mov eax [ebp+8] +
lea esi [eax+0D8h] +
cmp dword ptr [esi] 0 +
jnz loc_1006457  +
push 0  +
push 64h  +
push 1  +
push dword ptr [eax-10h]  +
call ds:SetTimer  +
mov [esi] eax +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100803D  +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 0FF000000h  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+4Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+20h] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
push esi  +
add ecx 0FFFFFFE0h +
call sub_100A5CB  +
test edi edi +
jz loc_100455F  +
mov eax [esi] +
push edi  +
push dword ptr [ebp+10h]  +
push esi  +
call dword ptr [eax+40h]  +
mov ebx eax +
jmp loc_100455F  +
***
mov ebx 80070057h +
jmp loc_1004552  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:off_10062D4  +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1002A39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22AC 0FFFFFFFFh +
jz loc_102685A  +
mov eax dword_10B22AC +
test eax eax +
jz loc_105CCDD  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22A8 0FFFFFFFFh +
jz loc_102A8CA  +
mov eax dword_10B22A8 +
test eax eax +
jz loc_105CCD6  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push 7FFFFFFFh  +
push dword ptr [ecx]  +
call ds:off_10065E0  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_100B915  +
cmp eax 0FFFFFFFFh +
jz loc_100B91C  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1002B98  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10066BD  +
cmp ecx 7FFFFFFFh +
ja loc_10066BD  +
test eax eax +
jl loc_10066B9  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_10066C4  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [esi+edi] +
test ecx ecx +
jz loc_10066AB  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_10066AB  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1006693  +
pop edi  +
test esi esi +
jz loc_10066C4  +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax 80070057h +
jmp loc_1006675  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
jmp loc_10066B0  +
***
mov [esi+18h] ebx +
jmp loc_1006CC7  +
***
push [ebp+hIcon]  +
push 0FFFFFFFFh  +
push dword ptr [esi+60h]  +
call ds:off_10062D4  +
jmp loc_100A81D  +
***
xor eax eax +
jmp loc_10092E6  +
***
xor edi edi +
jmp loc_100AF24  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
lea eax [esi+0FCh] +
inc edi  +
cmp dword ptr [eax] 0 +
jz loc_100677E  +
mov eax [eax] +
and dword ptr [ebp+8] 0 +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
test edi edi +
jl loc_10541FD  +
cmp dword ptr [ebp+8] 0 +
jnz loc_10541E1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
cmp [ebp+arg_8] 0 +
mov [ebp+var_21C] 1 +
jnz loc_100839C  +
dec dword ptr [edi+208h]  +
jnz loc_1008480  +
push ebx  +
push dword ptr [esi]  +
call ds:off_10067B4  +
jmp loc_1007881  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2298 0FFFFFFFFh +
jz loc_10249C3  +
mov eax dword_10B2298 +
test eax eax +
jz loc_105CCAD  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
push edi  +
xor edi edi +
inc ebx  +
cmp [esi+0FCh] edi +
jz loc_1006836  +
cmp [ebp+14h] edi +
jle loc_1006836  +
mov eax [esi+0FCh] +
and dword ptr [ebp+8] 0 +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
mov edx [ebp+10h] +
push dword ptr [edx+edi*4]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_100CBE8  +
cmp dword ptr [ebp+8] 0 +
jnz loc_100CBD7  +
inc edi  +
cmp edi [ebp+14h] +
jl loc_1006801  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B227C 0FFFFFFFFh +
jz loc_10283A2  +
mov eax dword_10B227C +
test eax eax +
jz loc_105CC4C  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 208h +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz locret_10069E1  +
push ebx  +
push esi  +
push edi  +
push 1E8h  +
xor edi edi +
lea eax [ebp+var_200] +
push edi  +
push eax  +
call memset  +
lea eax [ebp+arg_4] +
mov [ebp+var_1F8] eax +
lea eax [ebp+var_14] +
add esp 0Ch +
mov [ebp+var_1E8] eax +
lea eax [ebp+arg_C] +
push 4  +
pop ebx  +
mov [ebp+var_1D8] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_14] 0Bh +
mov [ebp+var_18] edi +
mov [ebp+var_C] edi +
mov dword ptr [ebp+String] 30h +
mov [ebp+var_208] offset unk_10B2488 +
mov [ebp+var_204] edi +
mov [ebp+var_200] 10h +
mov [ebp+var_1FC] edi +
mov [ebp+var_1F4] edi +
mov [ebp+var_1F0] ebx +
mov [ebp+var_1EC] edi +
mov [ebp+var_1E4] edi +
mov [ebp+var_1E0] ebx +
mov [ebp+var_1DC] edi +
mov [ebp+var_1D4] edi +
mov [ebp+var_1D0] ebx +
mov [ebp+var_1CC] edi +
mov [ebp+var_8] edi +
mov [ebp+arg_8] eax +
lea esi [ebp+var_1BC] +
mov ecx [ebp+var_8] +
mov [esi-8] edi +
mov [esi-4] ebx +
mov [esi] edi +
cmp ecx [ebp+arg_C] +
jnb loc_10084B9  +
mov edx [eax] +
mov [esi-0Ch] eax +
lea ecx [eax+4] +
cmp edx 1 +
jnz loc_101228D  +
mov [esi+4] ecx +
mov [esi+8] edi +
mov [esi+0Ch] ebx +
mov [esi+10h] edi +
lea ecx [eax+4] +
cmp edx 2 +
jz loc_1012295  +
lea ecx [ebp+String] +
mov eax ecx +
push ecx  +
mov [ebp+var_10] eax +
call ds:lstrlenW  +
mov ecx [ebp+var_10] +
inc [ebp+var_8]  +
add [ebp+arg_8] 84h +
mov [esi+20h] edi +
lea eax [eax+eax+2] +
mov [esi+1Ch] eax +
mov [esi+18h] edi +
mov [esi+14h] ecx +
add esi 30h +
cmp [ebp+var_8] 9 +
jnb loc_10069C0  +
mov eax [ebp+arg_8] +
jmp loc_1006949  +
lea eax [ebp+var_208] +
push eax  +
push 1Fh  +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventWrite  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
cmp dword ptr [ebp+14h] 0 +
jz loc_10042CE  +
push dword ptr [ebp+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
mov eax [ebp+8] +
jmp loc_10042CE  +
***
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10042D6  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_100273D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
test byte ptr [esi+0FCh] 1 +
jnz loc_100CBB5  +
test byte ptr [esi+0FCh] 2 +
jz loc_1006A53  +
push dword ptr [esi-24h]  +
call ds:UpdateWindow  +
and dword ptr [esi+0FCh] 0FFFFFFFDh +
test byte ptr [esi+0FCh] 4 +
jnz loc_1065DB7  +
test byte ptr [esi+0FCh] 8 +
jnz loc_1065DD2  +
test byte ptr [esi+0FCh] 10h +
jnz loc_1065DEA  +
test edi edi +
jnz loc_1065DFE  +
cmp dword_10B24CC 0 +
jz loc_1006AB9  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1046256  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_1046218  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
and dword ptr [ebp-4] 0 +
push edi  +
push 0  +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov edi eax +
test edi edi +
jl loc_1006B1E  +
mov eax [ebp-4] +
and dword ptr [ebp+0Ch] 0 +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push offset dword_1006B34  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jl loc_1006B11  +
push dword ptr [ebp+10h]  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+38h]  +
mov edi eax +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_1006B1E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
test eax eax +
jz loc_1006B2B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B24CC 0 +
jz loc_1006B87  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10461F6  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_10461BE  +
pop esi  +
mov eax [ebp+8] +
and dword ptr [eax+0FCh] 0 +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
and ecx 1Fh +
or [eax+108h] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0A91Bh  +
push [ebp+hWnd]  +
call ds:GetPropW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+8] +
xor ecx ecx +
mov esi 80004005h +
cmp [edi+10h] ecx +
jz loc_1006C76  +
mov eax [edi+10h] +
cmp eax ecx +
jz loc_10462DD  +
mov eax [eax] +
mov [ebp-4] eax +
cmp [ebp-4] ecx +
mov [ebp+8] ecx +
jle loc_1006C76  +
push ebx  +
mov ebx 80000000h +
mov eax [edi+10h] +
mov eax [eax+4] +
mov ecx [ebp+0Ch] +
mov edx [ebp+8] +
cmp [eax+edx*4] ecx +
jnz loc_1006C6A  +
cmp dword_10B24CC 0 +
jz loc_1006C53  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10462E5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx ebx +
or eax ecx +
jnz loc_1046292  +
push dword ptr [ebp+8]  +
xor esi esi +
push dword ptr [edi+10h]  +
call ds:off_10065B4  +
lea eax [ebp+0Ch] +
push eax  +
call sub_1002BEE  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-4] +
jl loc_1006C10  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov eax [esi+14h] +
cmp eax ecx +
jz loc_100EE6D  +
mov eax [eax] +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jg loc_1033719  +
jz loc_10066E0  +
cmp eax ebx +
jg loc_1033729  +
mov eax [esi+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al bl +
jnz loc_100CC1A  +
mov eax [esi+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 6 +
jnz loc_10665A5  +
pop ebx  +
jmp loc_10042F7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
and dword ptr [eax+18h] 0 +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
and [ebp+var_1C] 0 +
push esi  +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
lea eax [ebp+rc] +
push eax  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_100700A  +
push ebx  +
xor ebx ebx +
cmp dword_10B10A0 ebx +
jnz loc_10285FD  +
mov eax [esi+90h] +
cmp eax ebx +
jz loc_102861F  +
mov eax [eax] +
cmp eax ebx +
mov [ebp+var_4] eax +
push edi  +
jle loc_1006FF5  +
lea edx [ebp+var_30] +
lea eax [esi+14h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov [ebp+var_2C] eax +
mov eax [esi+5Ch] +
add [ebp+rc] eax +
mov eax [esi+64h] +
add [ebp-3Ch] eax +
mov eax [esi+60h] +
sub [ebp-38h] eax +
mov eax [esi+68h] +
sub [ebp-34h] eax +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetParent  +
push eax  +
call ds:GetWindowRect  +
mov eax [ebp+Rect.top] +
neg eax  +
push eax  +
mov eax [ebp+Rect.left] +
neg eax  +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call ds:OffsetRect  +
mov ecx esi +
call sub_1004266  +
mov ecx esi +
test eax eax +
jz loc_10657BB  +
mov edi [ebp+Rect.right] +
sub edi [esi+60h] +
mov eax [ebp+Rect.bottom] +
sub edi [esi+5Ch] +
sub eax [ebp+Rect.top] +
sub edi [ebp+Rect.left] +
push eax  +
push edi  +
call sub_10072EA  +
mov [ebp+var_10] eax +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov ecx esi +
push eax  +
call sub_10043A5  +
mov ebx eax +
cmp [ebp+var_10] ebx +
jg loc_10655EA  +
cmp dword_10B39B0 0 +
jnz loc_1006DFD  +
mov eax [esi+0CCh] +
xor ecx ecx +
cmp [ebp+var_10] ebx +
setnle cl  +
cmp ecx eax +
jnz loc_1065607  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+var_10]  +
mov ecx esi +
call sub_1007046  +
cmp dword_10B24CC 0 +
mov [ebp+var_24] eax +
jz loc_1006E4A  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1028626  +
mov edx dword_10B24B8 +
mov edi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and edi eax +
or edx edi +
jnz loc_1046658  +
mov ecx esi +
call sub_1004226  +
test al 1 +
jz loc_1006E8B  +
mov ecx esi +
call sub_1004226  +
xor ebx ebx +
test al 2 +
jz loc_106561D  +
cmp [ebp+var_4] ebx +
jle loc_1006E8B  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov edi [eax+ebx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
test eax eax +
jnz loc_1033D04  +
inc ebx  +
cmp ebx [ebp+var_4] +
jl loc_1006E6B  +
xor edi edi +
xor ebx ebx +
cmp [ebp+var_4] edi +
mov [ebp+var_14] edi +
mov [ebp+var_28] ebx +
jle loc_1006ED9  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
push 1  +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+28h]  +
add [ebp+var_14] eax +
mov eax [ebp+var_4] +
dec eax  +
cmp edi eax +
jge loc_10070C3  +
push 2  +
pop eax  +
add [ebp+var_14] eax +
add ebx [ebp+var_28] +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_1006E9A  +
mov [ebp+var_28] ebx +
fld1   +
mov edx [ebp-38h] +
mov ecx [ebp+rc] +
fstp  [ebp+var_24] +
xor edi edi +
cmp [esi+0CCh] edi +
jnz loc_1028633  +
mov eax edx +
sub eax ecx +
imul eax [ebp+var_10] +
cmp eax [ebp+var_14] +
jl loc_105423B  +
mov eax [ebp-3Ch] +
or [ebp+var_C] 0FFFFFFFFh +
mov [ebp+var_28] edx +
mov edx [ebp+var_2C] +
mov [ebp+var_5C] eax +
add eax edx +
cmp [ebp+var_4] edi +
mov [ebp+var_60] ecx +
mov [ebp+var_54] eax +
mov [ebp+var_8] edi +
mov [ebp+var_10] edi +
mov [ebp+var_20] edi +
jle loc_1006FCB  +
cmp [ebp+var_1C] 0 +
jl loc_1006FCB  +
mov eax [esi+90h] +
mov ecx [eax+4] +
mov eax [ebp+var_20] +
mov edi [ecx+eax*4] +
cmp eax [ebp+var_8] +
jz loc_10070CA  +
or eax 0FFFFFFFFh +
mov ecx [edi] +
lea edx [ebp+var_18] +
push edx  +
push 1  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
push edi  +
call dword ptr [ecx+28h]  +
fild  [ebp+var_18] +
sub eax [ebp+var_18] +
fmul  [ebp+var_24] +
mov ebx eax +
call _ftol2_sse  +
add ebx eax +
mov [ebp+var_18] eax +
mov eax [ebp+var_60] +
add eax ebx +
cmp eax [ebp+var_28] +
jg loc_106568C  +
lea ecx [ebp+var_60] +
push ecx  +
mov ecx [ebp+var_20] +
sub ecx [ebp+var_8] +
push 0FFFFFFFFh  +
neg ecx  +
sbb ecx ecx +
not ecx  +
and ecx [ebp+var_10] +
mov [ebp+var_58] eax +
mov eax [edi] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
push 0  +
add ebx 2 +
mov [ebp+var_1C] eax +
push ebx  +
lea eax [ebp+var_60] +
push eax  +
call ds:OffsetRect  +
mov ecx [ebp+rc] +
mov ebx [ebp+var_20] +
inc ebx  +
cmp ebx [ebp+var_4] +
mov [ebp+var_20] ebx +
jl loc_1006F2D  +
mov eax [ebp+var_28] +
mov [ebp+var_58] eax +
lea eax [ebp+var_60] +
push eax  +
mov eax [ebp+var_4] +
push 0FFFFFFFFh  +
dec eax  +
push eax  +
push [ebp+var_C]  +
mov [ebp+var_60] ecx +
push [ebp+var_8]  +
mov ecx esi +
push [ebp+var_10]  +
call sub_100739E  +
cmp [ebp+var_1C] 0 +
jl loc_1007008  +
cmp dword ptr [esi+58h] 0 +
jnz loc_1007008  +
push 0  +
push 0  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
pop edi  +
pop ebx  +
xor eax eax +
cmp [ebp+var_1C] eax +
pop esi  +
setnl al  +
leave   +
retn   +
***
mov ecx [ebp+arg_8] +
mov [ebp+var_10] ecx +
jmp loc_10073E8  +
mov ecx [ebp+arg_10] +
jmp loc_10073F4  +
xor eax eax +
jmp loc_1007414  +
mov eax [ebp+arg_8] +
jmp loc_1007526  +
mov eax [ebp+var_18] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
mov ebx ecx +
call sub_1004266  +
mov [ebp+Y] eax +
mov eax [ebx+64h] +
add eax [ebx+68h] +
lea edx [ebp+var_10] +
mov [ebp+var_18] eax +
lea eax [ebx+14h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp [ebp+Y] 0 +
mov esi [ebp+arg_4] +
mov [ebp+var_14] eax +
jz loc_10070BA  +
mov eax [esi+0Ch] +
sub eax [esi+4] +
mov ecx ebx +
push eax  +
call sub_10043A5  +
mov [ebp+var_8] eax +
mov edx [ebp+arg_0] +
xor ecx ecx +
cmp [ebp+var_8] edx +
lea eax [ebx+0CCh] +
setl cl  +
mov [ebp+arg_0] ecx +
cmp ecx [eax] +
jnz loc_1064966  +
test ecx ecx +
jnz loc_1064970  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov [ebp+var_8] 1 +
jmp loc_100708D  +
***
xor eax eax +
jmp loc_1006ECA  +
mov eax [ebp+var_C] +
jmp loc_1006F52  +
***
cmp [ebp+nNumber] 4 +
jnz loc_1004962  +
jmp loc_10665CB  +
***
mov [ebp+10h] ebx +
jmp loc_1007165  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ecx [esi+8] +
push edi  +
call sub_1004266  +
mov [ebp+8] eax +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
push 0Dh  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
mov eax [esi] +
neg edi  +
sbb edi edi +
push esi  +
inc edi  +
call dword ptr [eax+0Ch]  +
xor ebx ebx +
mov [ebp-4] eax +
cmp [ebp+14h] ebx +
jz loc_1066616  +
cmp edi ebx +
jz loc_100713F  +
cmp [ebp+18h] ebx +
jz loc_100713F  +
cmp eax 3 +
jz loc_10336D0  +
cmp dword ptr [ebp+0Ch] 0FFFFFFFFh +
jnz loc_1007148  +
mov [ebp+0Ch] ebx +
cmp dword ptr [ebp+10h] 0FFFFFFFFh +
jnz loc_1007165  +
cmp dword ptr [ebp-4] 1 +
jnz loc_10070E1  +
mov eax [esi+14h] +
cmp eax ebx +
jz loc_100D540  +
mov eax [eax] +
dec eax  +
mov [ebp+10h] eax +
cmp [ebp+8] ebx +
jz loc_106663C  +
mov ecx [esi+8] +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp-4]  +
call sub_1004304  +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov [ebp+8] ebx +
cmp eax ebx +
jz loc_100718C  +
mov [eax] ebx +
mov ecx [ebp+0Ch] +
mov ebx ds:MulDiv +
mov [ebp+0Ch] ecx +
cmp ecx [ebp+10h] +
jg loc_10071EA  +
test edi edi +
jz loc_1066651  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-8] +
push dword ptr [ebp-4]  +
call sub_10048C3  +
push 0C8h  +
push eax  +
push dword ptr [ebp+14h]  +
mov [ebp-0Ch] eax +
call ebx  +
add [ebp+8] eax +
cmp dword ptr [ebp+1Ch] 0 +
jz loc_100D547  +
push 0C8h  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-8]  +
call ebx  +
mov ecx [ebp+1Ch] +
add [ecx] eax +
mov eax ecx +
inc dword ptr [ebp+0Ch]  +
mov ecx [ebp+0Ch] +
jmp loc_1007198  +
***
test edi edi +
jz loc_1007233  +
cmp dword ptr [ebp+18h] 0 +
jz loc_1007233  +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edi [esi-8] +
neg edi  +
lea edx [ebp+10h] +
push edx  +
sbb edi edi +
push 6  +
and edi esi +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1066669  +
mov eax [esi+8] +
lea edx [ebp+10h] +
push edx  +
push 7  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1066669  +
cmp dword ptr [ebp+8] 0 +
pop edi  +
pop esi  +
pop ebx  +
jle loc_100D534  +
mov eax [ebp+8] +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
mov esi [ebp+8] +
lea ebx [esi+10h] +
cmp dword ptr [ebx] 0 +
jz loc_100EE9D  +
mov eax [ebx] +
test eax eax +
jz loc_100EEB3  +
mov eax [eax] +
cmp [ebp+0Ch] eax +
push edi  +
jge loc_100EE74  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx]  +
call ds:off_1003D88  +
push dword ptr [ebp+14h]  +
mov edi [ebp+10h] +
push eax  +
mov [eax+10h] edi +
call ds:CopyRect  +
mov eax [esi] +
push esi  +
mov dword ptr [ebp+14h] 1 +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_10072E0  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
cmp edi 0FFFFFFFFh +
jnz loc_100EEBA  +
inc dword ptr [ebp+0Ch]  +
mov eax [ebx] +
test eax eax +
jz loc_100EEC8  +
mov eax [eax] +
cmp [ebp+0Ch] eax +
jl loc_1066703  +
pop edi  +
mov eax [ebp-4] +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov eax [ebp+14h] +
jmp loc_10072B5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
mov [ebp+var_10] edi +
mov [ebp+var_4] 1 +
call sub_10043A5  +
mov esi [ebp+arg_0] +
mov [ebp+var_20] eax +
mov eax [edi+90h] +
xor ecx ecx +
cmp eax ecx +
jz loc_1007389  +
mov eax [eax] +
mov [ebp+var_C] eax +
cmp [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
jle loc_1007374  +
push ebx  +
mov eax [edi+90h] +
mov eax [eax+4] +
mov ecx [ebp+var_8] +
mov edi [eax+ecx*4] +
mov eax [edi] +
lea ecx [ebp+var_14] +
push ecx  +
push 1  +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push edi  +
call dword ptr [eax+28h]  +
mov ebx eax +
sub ebx [ebp+var_14] +
mov eax [ebp+var_C] +
sub esi ebx +
dec eax  +
cmp [ebp+var_8] eax +
jge loc_100735B  +
dec esi  +
dec esi  +
test esi esi +
jl loc_1064814  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_C] +
jge loc_1007373  +
mov edi [ebp+var_10] +
jmp loc_1007328  +
pop ebx  +
mov eax [ebp+var_20] +
cmp eax [ebp+var_4] +
pop edi  +
pop esi  +
jg loc_10648E3  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
mov [ebp+var_C] ecx +
jmp loc_100731F  +
***
mov ecx [ebp+arg_8] +
mov [ebp+var_10] ecx +
jmp loc_10074C3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_14] +
push ebx  +
push esi  +
push edi  +
mov esi eax +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_4] +
xor ebx ebx +
cmp esi [ebp+arg_C] +
mov [ebp+var_8] ecx +
mov [ebp+var_18] 1 +
mov [ebp+var_4] ebx +
jg loc_1007425  +
mov eax [ebp+var_8] +
mov eax [eax+90h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
cmp esi [ebp+arg_4] +
jz loc_1007015  +
or [ebp+var_10] 0FFFFFFFFh +
cmp esi [ebp+arg_C] +
jz loc_1007020  +
or ecx 0FFFFFFFFh +
mov edx [eax] +
lea edi [ebp+var_14] +
push edi  +
push 1  +
push 1  +
push ecx  +
push [ebp+var_10]  +
push eax  +
call dword ptr [edx+28h]  +
add ebx eax +
cmp esi [ebp+arg_C] +
jge loc_1007028  +
push 2  +
pop eax  +
add ebx eax +
mov eax [ebp+var_14] +
add [ebp+var_4] eax +
inc esi  +
cmp esi [ebp+arg_C] +
jle loc_10073CC  +
mov eax [ebp+arg_14] +
mov edi [eax+8] +
fld1   +
sub ebx [ebp+var_4] +
fstp  [ebp+var_C] +
sub edi [eax] +
mov [ebp+var_14] ebx +
cmp edi ebx +
jl loc_10648EB  +
cmp [ebp+var_4] 0 +
jz loc_1007464  +
mov eax edi +
sub eax ebx +
mov [ebp+arg_14] eax +
fild  [ebp+arg_14] +
fidiv  [ebp+var_4] +
fld1   +
fcom  st(1) +
fnstsw  ax +
test ah 41h +
jz loc_1054213  +
fstp  st(1) +
fstp  [ebp+var_C] +
cmp dword_10B24CC 0 +
jz loc_100749B  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104653F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_10464F1  +
and [ebp+arg_14] 0 +
mov esi [ebp+arg_4] +
cmp esi [ebp+arg_C] +
jg loc_10074F6  +
mov eax [ebp+var_8] +
mov eax [eax+90h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
cmp esi [ebp+arg_4] +
jz loc_100738E  +
or [ebp+var_10] 0FFFFFFFFh +
cmp esi [ebp+arg_C] +
jz loc_10074F1  +
or ecx 0FFFFFFFFh +
mov edx [eax] +
lea ebx [ebp+var_4] +
push ebx  +
push 1  +
push 1  +
push ecx  +
push [ebp+var_10]  +
push eax  +
call dword ptr [edx+28h]  +
fild  [ebp+var_4] +
fmul  [ebp+var_C] +
call _ftol2_sse  +
add [ebp+arg_14] eax +
mov [ebp+var_4] eax +
inc esi  +
jmp loc_10074A2  +
mov ecx [ebp+arg_10] +
jmp loc_10074CB  +
sub edi [ebp+arg_14] +
mov ebx [ebp+arg_4] +
sub edi [ebp+var_14] +
mov [ebp+var_4] edi +
cmp ebx [ebp+arg_C] +
jg loc_1007037  +
mov eax [ebp+var_8] +
mov eax [eax+90h] +
mov eax [eax+4] +
mov edi [eax+ebx*4] +
cmp ebx [ebp+arg_4] +
jz loc_100702F  +
or eax 0FFFFFFFFh +
cmp ebx [ebp+arg_C] +
jz loc_10075B8  +
or [ebp+var_10] 0FFFFFFFFh +
mov ecx [edi] +
lea edx [ebp+arg_14] +
push edx  +
push 1  +
push 1  +
push [ebp+var_10]  +
push eax  +
push edi  +
call dword ptr [ecx+28h]  +
sub eax [ebp+arg_14] +
xor ecx ecx +
cmp [ebp+arg_14] ecx +
mov esi eax +
jle loc_1007561  +
fld1   +
fcomp  [ebp+var_C] +
fnstsw  ax +
test ah 41h +
jz loc_105421A  +
mov [ebp+var_14] ecx +
fild  [ebp+arg_14] +
fmul  [ebp+var_C] +
call _ftol2_sse  +
cmp [ebp+var_14] 0 +
mov [ebp+arg_14] eax +
jnz loc_105422F  +
lea ecx [ebp+rc] +
push ecx  +
push [ebp+var_10]  +
add esi eax +
mov eax [ebp+rc.left] +
mov ecx ebx +
sub ecx [ebp+arg_4] +
add eax esi +
neg ecx  +
sbb ecx ecx +
not ecx  +
and ecx [ebp+arg_0] +
mov [ebp+rc.right] eax +
mov eax [edi] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
push 0  +
add esi 2 +
push esi  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
inc ebx  +
jmp loc_1007502  +
mov ecx [ebp+arg_10] +
mov [ebp+var_10] ecx +
jmp loc_1007533  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_10075F2  +
mov esi [esi+14h] +
test esi esi +
jz loc_1033D19  +
mov esi [esi] +
cmp esi 1 +
jg loc_1033D11  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi-10h]  +
call ds:GetParent  +
push eax  +
call ds:GetClientRect  +
mov eax [ebp-4] +
sub eax [ebp-0Ch] +
push 14h  +
push eax  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
push eax  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [esi-10h]  +
call ds:SetWindowPos  +
lea ecx [esi-14h] +
call sub_1006CED  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
add esi 10h +
cmp dword ptr [esi] 0 +
push edi  +
jz loc_100810F  +
mov ebx [ebp+0Ch] +
mov edi ds:off_100407C +
push ebx  +
push dword ptr [esi]  +
mov dword ptr [ebp-4] 80070057h +
call edi  +
cmp eax 0FFFFFFFFh +
jnz loc_10076F2  +
push dword ptr [ebp+10h]  +
push dword ptr [esi]  +
call edi  +
push 0  +
mov ecx esi +
push ebx  +
cmp eax 0FFFFFFFFh +
jnz loc_1053EE6  +
call sub_1006610  +
mov [ebp-4] eax +
test eax eax +
jl loc_10076F2  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
cmp dword_10B24CC 0 +
jz loc_10076F2  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1053EF1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_1046418  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
call dword ptr [eax+24h]  +
mov ebx eax +
test ebx ebx +
jl loc_100773A  +
cmp [ebp+var_4] 0 +
jnz loc_100773A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+6Ch]  +
test eax 80000001h +
jz loc_100D54F  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
xor eax eax +
cmp [ecx+98h] eax +
jz locret_100777C  +
cmp dword ptr [ecx+0A0h] 0C8h +
jnb locret_100777C  +
cmp byte_10B39B8 al +
jnz locret_100777C  +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 248h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp+var_224] esi +
add esi 9Ch +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_220] eax +
cmp [esi] ebx +
jz loc_1027384  +
mov eax [edi] +
push edi  +
call dword ptr [eax+90h]  +
test eax eax +
jnz loc_10535B8  +
mov eax [esi] +
mov [ebp+var_21C] ebx +
mov [ebp+var_218] 1 +
cmp eax ebx +
jz loc_102739A  +
mov eax [eax] +
lea ebx [eax-1] +
mov [ebp+var_214] ebx +
test ebx ebx +
jl loc_1007821  +
push ebx  +
push dword ptr [esi]  +
call ds:off_1003D88  +
push [ebp+var_220]  +
mov edi eax +
push edi  +
call ds:__imp_StrCmpICW  +
test eax eax +
jz loc_1006786  +
dec ebx  +
mov [ebp+var_214] ebx +
jns loc_10077F8  +
cmp [ebp+arg_8] 0 +
jz loc_100786A  +
cmp [ebp+var_21C] 0 +
jnz loc_100786A  +
push [ebp+var_220]  +
lea eax [ebp+var_210] +
push 104h  +
push eax  +
call sub_100665F  +
lea eax [ebp+var_210] +
push eax  +
mov ecx esi +
mov [ebp+var_8] 1 +
call sub_1003DE4  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov [ebp+var_218] ecx +
xor eax eax +
cmp [ebp+var_218] eax +
jz loc_1007920  +
cmp [ebp+arg_8] eax +
jz loc_1033915  +
mov eax [ebp+var_224] +
xor ecx ecx +
cmp [ebp+arg_8] ecx +
setnz cl  +
lea ecx [ecx+ecx-1] +
add [eax+0A0h] ecx +
mov eax [eax+0A0h] +
xor edi edi +
mov [ebp+var_248] eax +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_10273BE  +
mov eax [eax] +
cmp edi eax +
jg loc_1007A10  +
lea eax [edi-1] +
push eax  +
push dword ptr [esi]  +
call ds:off_1003D88  +
mov eax [eax+208h] +
mov [ebp+edi*4+var_248] eax +
inc edi  +
cmp edi 9 +
jl loc_10078A8  +
push [ebp+var_228]  +
push [ebp+var_22C]  +
push [ebp+var_230]  +
push [ebp+var_234]  +
push [ebp+var_238]  +
push [ebp+var_23C]  +
push [ebp+var_240]  +
push [ebp+var_244]  +
push [ebp+var_248]  +
push 0B9Ch  +
push offset dword_1007748  +
call sub_1007936  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4A8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 4A0h  +
lea eax [ebp+var_4A4] +
push 0  +
push eax  +
call memset  +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_8] +
mov [ebp+var_420] ecx +
mov ecx [ebp+arg_10] +
mov [ebp+var_39C] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+var_318] ecx +
mov ecx [ebp+arg_18] +
mov [ebp+var_4A4] eax +
mov [ebp+var_294] ecx +
mov ecx [ebp+arg_1C] +
xor eax eax +
inc eax  +
add esp 0Ch +
mov [ebp+var_210] ecx +
mov ecx [ebp+arg_20] +
push 9  +
mov [ebp+var_4A8] eax +
mov [ebp+var_424] eax +
mov [ebp+var_3A0] eax +
mov [ebp+var_31C] eax +
mov [ebp+var_298] eax +
mov [ebp+var_214] eax +
mov [ebp+var_190] eax +
mov [ebp+var_10C] eax +
mov [ebp+var_88] eax +
lea eax [ebp+var_4A8] +
mov [ebp+var_18C] ecx +
mov ecx [ebp+arg_24] +
push eax  +
push [ebp+arg_4]  +
mov [ebp+var_108] ecx +
mov ecx [ebp+arg_28] +
push esi  +
mov [ebp+var_84] ecx +
call sub_1006870  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 2Ch  +
***
xor eax eax +
jmp loc_10078CE  +
***
push dword ptr [ebp+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
lea edi [edi+eax+1] +
jmp loc_10062C6  +
***
mov [ebp-4] ebx +
jmp loc_1006282  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
lea eax [edi+1Ch] +
mov ecx [eax] +
xor ebx ebx +
push eax  +
inc ebx  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_1007C7E  +
push esi  +
xor esi esi +
cmp [edi+58h] esi +
jnz loc_1007C7D  +
mov ecx edi +
call sub_1007C95  +
cmp [edi+118h] esi +
jz loc_1007C7D  +
cmp [edi+120h] esi +
jz loc_1007C7D  +
mov esi [ebp+arg_8] +
test byte ptr [esi+1Ch] 2 +
jnz loc_100C692  +
mov eax [esi+1Ch] +
test al 1 +
jnz loc_1065341  +
test al 8 +
jnz loc_1065361  +
mov ecx [esi+4] +
mov eax [esi+10h] +
and [ebp+arg_8] 0 +
mov [ebp+nNumber] eax +
cmp ecx 0FFFFFFFFh +
jz loc_1007ADF  +
mov eax [edi+118h] +
mov edx [eax] +
lea ebx [ebp+arg_8] +
push ebx  +
push ecx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [edx+24h]  +
mov ebx eax +
test ebx ebx +
jl loc_10544F6  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_105447C  +
mov eax [edi+118h] +
fild  dword ptr [esi+8] +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push ecx  +
push ecx  +
fstp  [esp+48h+var_48] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C70  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C70  +
mov eax [edi+118h] +
and [ebp+var_4] 0 +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C63  +
fld  dword ptr [esi+18h] +
and dword ptr [ebp+var_10+4] 0 +
mov eax [edi+120h] +
mov ecx [eax] +
lea edx [ebp+var_10+4] +
push edx  +
mov edx [ebp+nNumber] +
sub esp 20h +
fstp  [esp+84h+var_6C] +
fld  dword ptr [esi+14h] +
fstp  [esp+84h+var_74] +
fild  dword ptr [esi+0Ch] +
fstp  [esp+84h+var_7C] +
fild  [ebp+nNumber] +
test edx edx +
jl loc_106538B  +
fdiv  ds:dbl_1007C88 +
fstp  [esp+84h+var_84] +
push eax  +
call dword ptr [ecx+28h]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C56  +
push dword ptr [ebp+var_10+4]  +
mov eax [ebp+var_4] +
push [ebp+arg_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C56  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C56  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
and [ebp+nNumber] 0 +
lea edx [ebp+nNumber] +
push edx  +
push offset dword_10065A4  +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C49  +
mov eax [ebp+var_4] +
push [ebp+nNumber]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C49  +
mov edi [edi+11Ch] +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
call dword ptr [eax+20h]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C49  +
mov eax [ebp+var_4] +
fld  [ebp+var_18] +
mov ecx [eax] +
push 0  +
push ecx  +
push ecx  +
fstp  [esp+0C8h+var_C8] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_1007C49  +
cmp dword_10B24CC 0 +
jz loc_1007C49  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1046638  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_10465E5  +
mov eax [ebp+nNumber] +
test eax eax +
jz loc_1007C56  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax dword ptr [ebp+var_10+4] +
test eax eax +
jz loc_1007C63  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1007C70  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1007C7D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+110h] 0 +
jz sub_1023989  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
mov eax 80070057h +
test ecx ecx +
jl loc_1007CE3  +
cmp ecx 25h +
jnb loc_1007CE3  +
mov eax ecx +
imul eax eax +
add eax offset unk_10B2A58 +
push eax  +
push ecx  +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
add ecx 0FFFFFFE4h +
call sub_1007A36  +
pop ebp  +
retn 0Ch  +
***
mov ecx eax +
call sub_1005671  +
cmp eax 1 +
jnz loc_1007DAF  +
mov eax [esi+4] +
mov eax [eax+10h] +
push dword ptr [eax+16Ch]  +
push dword ptr [eax+168h]  +
lea eax [ebp-10h] +
push eax  +
call ds:OffsetRect  +
jmp loc_1007DAF  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+4] 0 +
jz loc_1007DDC  +
mov eax [esi+4] +
mov eax [eax+10h] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+0Ch]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_1007DDC  +
mov eax [ebp+8] +
add eax 0FFFFFFF3h +
cmp eax 0Ch +
ja loc_1007DDC  +
movzx eax ds:byte_1007D24[eax] +
jmp ds:off_1007D18[eax*4]  +
mov eax [esi+4] +
lea edx [ebp-10h] +
push edx  +
push dword ptr [esi+8]  +
add eax 8 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [esi+4] +
test eax eax +
jz loc_100CBD0  +
lea ecx [eax+8] +
mov eax [eax+10h] +
cmp [eax+164h] ecx +
jz loc_1007CE7  +
mov eax [esi+4] +
mov eax [eax+10h] +
push 0  +
lea ecx [ebp-10h] +
add eax 14h +
push ecx  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ds:InvalidateRect  +
push 2  +
mov eax [esi+4] +
mov eax [eax+10h] +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 5 +
jz loc_1007E50  +
xor eax eax +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1007E0A  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1007E28  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+10h]  +
or dword ptr [ebp+10h] 0FFFFFFFFh +
cmp dword ptr [esi+4] 0 +
jz loc_1007EB7  +
mov eax [esi+4] +
mov eax [eax+10h] +
lea edx [ebp+10h] +
push edx  +
push dword ptr [ebp+0Ch]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_1007EB7  +
cmp dword ptr [ebp+10h] 0Dh +
push 10h  +
pop edi  +
jz loc_1051978  +
cmp dword ptr [ebp+10h] 0Fh +
jz loc_100D594  +
cmp [ebp+10h] edi +
jz loc_100CBFE  +
cmp dword ptr [ebp+10h] 12h +
jz loc_100CBFE  +
cmp dword ptr [ebp+10h] 18h +
jz loc_1066C9F  +
cmp dword_10B24CC 0 +
jz loc_1007EEE  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104304F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_1042FFF  +
pop edi  +
pop esi  +
pop ebx  +
jmp loc_1007DF3  +
***
test cl cl +
jbe loc_100448E  +
xor eax eax +
lea edi [ebp+arg_18] +
stos   +
mov [ebp+arg_18] al +
lea edi [ebp+var_10] +
stos   +
stos   +
stos   +
stos   +
push esi  +
lea eax [ebp+arg_18] +
mov [ebp+var_4] eax +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push 2  +
push [ebp+arg_10]  +
mov [ebp+arg_1B] 1 +
push [ebp+arg_4]  +
mov [ebp+arg_1A] cl +
mov [ebp+var_10] 10h +
mov [ebp+var_C] 1 +
call ds:BeginBufferedPaint  +
mov esi eax +
test esi esi +
jz loc_1064258  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:DrawThemeBackground  +
push 1  +
push esi  +
mov edi eax +
call ds:EndBufferedPaint  +
pop esi  +
jmp loc_100448E  +
***
mov al byte ptr [ebp+var_4] +
mov [esi+54h] al +
jmp loc_100585D  +
***
movzx eax al +
or [ebp+var_2A0] esi +
mov [ebp+var_29C] eax +
jmp loc_1005232  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1008296  +
cmp [ebp+arg_4] eax +
jz loc_1007FCC  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1007FCC  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1007FAF  +
test esi esi +
jz loc_1008296  +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_100828F  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22F0 0FFFFFFFFh +
jz loc_102A87A  +
mov eax dword_10B22F0 +
test eax eax +
jz loc_105CCBD  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:off_1007FEC  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi] eax +
pop esi  +
mov eax ecx +
pop ebp  +
retn 4  +
***
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [eax+24h] ecx +
jmp loc_100647E  +
***
mov eax [ebp+8] +
mov eax [eax+1Ch] +
jmp loc_100A5BB  +
***
push 0FFFFFFFEh  +
pop eax  +
jmp loc_100A8C5  +
***
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [eax+1Ch] ecx +
jmp loc_1006346  +
***
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [eax+20h] ecx +
jmp loc_100631D  +
***
xor edi edi +
jmp loc_100A632  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi] +
push edi  +
xor esi esi +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_10080A9  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A8h]  +
mov esi eax +
dec esi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jz loc_100ED08  +
dec ebx  +
jz loc_102EF50  +
dec ebx  +
jz loc_102EF68  +
sub ebx 5 +
jz loc_102EF5C  +
dec ebx  +
jnz loc_1003CD0  +
jmp loc_10661B2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:off_10065E0  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_10678C1  +
cmp eax 0FFFFFFFFh +
jz loc_1008108  +
xor eax eax +
pop ebp  +
retn 0Ch  +
mov eax 8007000Eh +
jmp loc_1008104  +
***
push 1  +
mov ecx esi +
call sub_100801C  +
jmp loc_100767A  +
***
xor ebx ebx +
jmp loc_1005D24  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_1058D37  +
mov eax [ebp+arg_0] +
jb loc_1008146  +
cmp eax 0FFFFFFFFh +
ja loc_1058D37  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_1058D47  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_18] +
xor ecx ecx +
and eax 100h +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_8] eax +
mov eax 7FFFFFFFh +
jz loc_100826C  +
cmp [ebp+arg_0] ecx +
jz loc_1058D6F  +
cmp edi eax +
ja loc_1058D77  +
mov esi ecx +
test ecx ecx +
jl loc_1008264  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_C] +
push ebx  +
mov [ebp+var_4] ecx +
mov ebx edi +
xor ecx ecx +
mov [ebp+arg_4] ebx +
cmp edx eax +
jnb loc_1058D81  +
cmp [ebp+var_8] ecx +
jz loc_10081E1  +
cmp [ebp+arg_8] ecx +
jz loc_1058D8B  +
xor eax eax +
cmp ecx eax +
mov esi ecx +
jl loc_100827B  +
test [ebp+arg_18] 0FFFFE000h +
jnz loc_1058D99  +
cmp edi eax +
jz loc_1058DAA  +
mov ebx [ebp+arg_0] +
mov [ebp+arg_4] eax +
push edx  +
lea eax [ebp+arg_4] +
push eax  +
mov eax [ebp+arg_8] +
mov edx edi +
mov ecx ebx +
call sub_1007F97  +
mov esi eax +
mov eax [ebp+arg_4] +
lea ecx [ebx+eax*2] +
mov ebx edi +
sub ebx eax +
mov [ebp+var_4] ecx +
mov [ebp+arg_4] ebx +
test esi esi +
jl loc_1058E0B  +
test [ebp+arg_18] 200h +
jz loc_1008245  +
cmp ebx 1 +
ja loc_1058DD4  +
test esi esi +
jl loc_1058E0B  +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_1058E40  +
mov eax [ebp+arg_14] +
test eax eax +
jnz loc_1058E4A  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 1Ch  +
xor ecx ecx +
test edi edi +
jnz loc_10081A8  +
jmp loc_1058D77  +
cmp edi eax +
jnz loc_1058DFE  +
jmp loc_1008245  +
***
cmp esi 8007007Ah +
jz loc_100824D  +
jmp loc_1008263  +
***
mov [ecx] edi +
jmp loc_1007FE4  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
jmp loc_1007FD4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1055F4D  +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_18  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_100D5D2  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2300 0FFFFFFFFh +
jz loc_102A8DE  +
mov eax dword_10B2300 +
test eax eax +
jz loc_105CCED  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_100833A  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call ds:off_10082EC  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22A0 0FFFFFFFFh +
jz loc_102A88E  +
mov eax dword_10B22A0 +
test eax eax +
jz loc_105CCC3  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_100839A  +
push 0  +
push offset loc_105416D  +
push ecx  +
call ds:off_10082EC  +
and dword ptr [esi] 0 +
push 0  +
call ds:off_1008340  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
inc dword ptr [edi+208h]  +
xor ebx ebx +
cmp [ebp+var_214] ebx +
jle loc_1007821  +
push ebx  +
push dword ptr [esi]  +
call ds:off_1003D88  +
mov ecx [edi+208h] +
cmp ecx [eax+208h] +
jb loc_10363AC  +
push edi  +
push 104h  +
lea eax [ebp+var_210] +
push eax  +
call sub_100665F  +
mov eax [edi+208h] +
mov [ebp+var_8] eax +
lea eax [ebp+var_210] +
push eax  +
push ebx  +
push dword ptr [esi]  +
call ds:off_1003DB4  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov [ebp+var_218] ecx +
test ecx ecx +
jz loc_10633E2  +
mov eax [ebp+var_214] +
inc eax  +
push eax  +
push dword ptr [esi]  +
call ds:off_10067B4  +
jmp loc_1007821  +
***
mov ecx eax +
jmp loc_1005B5D  +
***
push 2  +
pop edi  +
cmp eax edi +
jz loc_10054F3  +
push 3  +
pop edi  +
jmp loc_10054F3  +
cmp eax 3 +
jnz loc_1008455  +
cmp [esi+7Ch] ecx +
jle loc_1008455  +
cmp [esi+80h] cl +
jbe loc_1008455  +
mov [ebp+arg_4] edx +
jmp loc_1005517  +
cmp byte ptr [esi+82h] 0 +
jbe loc_1005517  +
cmp word ptr [ebx+2Eh] 0FFFFh +
jz loc_1005517  +
jmp loc_10675E3  +
***
inc edi  +
cmp edi ebx +
jl loc_1005D2A  +
jmp loc_1005D46  +
***
mov eax [esi] +
test eax eax +
jz loc_10273A1  +
mov eax [eax] +
lea ebx [eax-1] +
cmp ebx [ebp+var_214] +
jle loc_1007881  +
push ebx  +
push dword ptr [esi]  +
call ds:off_1003D88  +
mov ecx [edi+208h] +
cmp ecx [eax+208h] +
jbe loc_10338C0  +
dec ebx  +
jmp loc_100848F  +
***
lea eax [ebp+var_18] +
mov [esi-0Ch] eax +
lea eax [ebp+var_C] +
mov [esi+4] eax +
lea eax [ebp+String] +
push eax  +
mov [esi+8] edi +
mov [esi+0Ch] ebx +
mov [esi+10h] edi +
call ds:lstrlenW  +
lea ecx [ebp+String] +
jmp loc_1006998  +
***
cmp ebx 0Ah +
jnz loc_10024DE  +
push eax  +
mov ecx esi +
call sub_10091DD  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B230C 0FFFFFFFFh +
jz loc_102A76E  +
mov eax dword_10B230C +
test eax eax +
jz loc_105CC52  +
pop ebp  +
jmp eax  +
***
shr eax 10h +
test ax ax +
jnz loc_100D45E  +
dec [ebp+var_4]  +
push [ebp+var_4]  +
mov eax [esi] +
push [ebp+var_8]  +
push esi  +
call dword ptr [eax+44h]  +
jmp loc_100D45E  +
xor eax eax +
jmp loc_100D13E  +
***
lea eax [esi+0ACh] +
cmp [eax] edi +
jz loc_10085E5  +
mov [eax] edi +
mov eax [esi+0B8h] +
cmp eax edi +
jz loc_10085DF  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
push 4  +
push edi  +
push edi  +
push eax  +
mov ecx esi +
call sub_1003701  +
test eax eax +
jl loc_10085DF  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10085CD  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_10085CD  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax [ebp+var_4] +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
ja loc_106303F  +
call dword ptr [ecx+1Ch]  +
mov ecx [ebp+var_4] +
sub ecx eax +
mov eax [ebp+var_8] +
push ecx  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push 2  +
push offset dword_10092EC  +
call sub_1009311  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push edi  +
call sub_1008635  +
cmp ebx edi +
jnz loc_1009287  +
mov eax [esi+0B0h] +
imul eax eax +
jmp loc_100928D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_100862C  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz loc_100862C  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_1008628  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi offset dword_10086A8 +
push esi  +
call sub_1008600  +
test al al +
jz loc_1008695  +
push 80h  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_0] +
mov [ebp+var_84] eax +
add esp 0Ch +
xor eax eax +
inc eax  +
push eax  +
mov [ebp+var_88] eax +
lea eax [ebp+var_88] +
push eax  +
push 0E6Bh  +
push esi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov dword ptr [eax] 1 +
mov eax [esi+0B8h] +
cmp eax edi +
jz loc_10086F2  +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
push 4  +
push edi  +
push edi  +
push eax  +
mov ecx esi +
call sub_1003701  +
test eax eax +
jl loc_10086F2  +
mov eax [ebp+arg_0] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 1  +
jmp loc_10085E0  +
***
mov eax 80000000h +
and edi eax +
cmp edi eax +
jnz loc_10024DE  +
push 4  +
jmp loc_10516CE  +
***
lea eax [ebp-64h] +
push eax  +
push dword ptr [ebp-48h]  +
call ds:GetClientRect  +
push 10h  +
lea eax [ebp-64h] +
push eax  +
push ebx  +
call ds:FillRect  +
jmp loc_1021790  +
***
push edi  +
call sub_1052D9F  +
test eax eax +
jnz loc_100256B  +
push 1  +
push edi  +
call ds:SwitchToThisWindow  +
jmp loc_100256B  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
push edi  +
push ebx  +
push 82h  +
jmp loc_1002CA3  +
***
push 2000000h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_10024DE  +
mov eax [esi+94h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
jmp sub_10024B0  +
***
mov eax [edi] +
cmp eax [esi+84h] +
jnz sub_10024B0  +
mov eax [edi+8] +
test eax eax +
jz loc_10024DE  +
push dword ptr [edi+4]  +
mov ecx esi +
push eax  +
call sub_1098A75  +
jmp loc_10024CD  +
***
mov edx ebx +
shr edx 10h +
push edx  +
movzx edx bx +
push edx  +
push 1  +
jmp loc_1008A62  +
cmp eax 232h +
ja sub_10024B0  +
mov esi [esi+94h] +
push edi  +
push ebx  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+38h]  +
push eax  +
call ds:SendMessageW  +
jmp loc_10024DE  +
***
mov edx ebx +
shr edx 10h +
push edx  +
movzx edx bx +
push edx  +
push 0  +
lea eax [esi+20h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+7Ch]  +
jmp loc_10024DE  +
***
lea eax [ebp-64h] +
push eax  +
push dword ptr [ebp-48h]  +
call ds:GetClientRect  +
push 10h  +
lea eax [ebp-64h] +
push eax  +
push ebx  +
call ds:FillRect  +
jmp loc_1021BF7  +
***
push 10h  +
push 206h  +
push 2C7h  +
push dword ptr [esi+4]  +
push hInstance  +
call ds:ShellMessageBoxW  +
add esp 14h +
jmp loc_10024DE  +
***
push edi  +
call ds:IsWindow  +
test eax eax +
jz loc_10024DE  +
lea eax [ebp-48h] +
push eax  +
xor eax eax +
push eax  +
push 4  +
push eax  +
push eax  +
push edi  +
mov ecx esi +
call sub_1003701  +
test eax eax +
jge loc_1008AF0  +
push 0  +
push 0  +
lea eax [ebp-48h] +
push eax  +
push edi  +
mov ecx esi +
call sub_100B0DF  +
test eax eax +
jl loc_10024DE  +
mov eax [ebp-48h] +
mov ecx [eax] +
xor edx edx +
test ebx ebx +
setnz dl  +
push edx  +
push eax  +
call dword ptr [ecx+44h]  +
push edi  +
call sub_1052D9F  +
test eax eax +
jz loc_1008B26  +
mov eax [ebp-48h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
mov esi [esi+48h] +
neg eax  +
sbb eax eax +
and eax edi +
lea ecx [esi+8] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
mov eax [ebp-48h] +
jmp loc_1051FB5  +
***
mov ecx esi +
mov ecx esi +
mov ecx esi +
mov esi [esi+94h] +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
mov ecx esi +
mov ecx esi +
mov esi [esi+94h] +
mov esi [esi+94h] +
mov eax [esi] +
push esi  +
call dword ptr [eax+8Ch]  +
jmp loc_10024DE  +
***
call sub_1009088  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+10h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1008E17  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
lea edi [esi+14h] +
mov eax [edi] +
xor ebx ebx +
inc ebx  +
mov ecx 80004005h +
mov [ebp-4] ecx +
mov [ebp+8] edi +
cmp eax ebx +
jz loc_105CE8A  +
cmp eax 3 +
jz loc_105CE92  +
test eax eax +
jnz loc_1008DC5  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp eax 3 +
jz loc_105CE9A  +
cmp [edi] ebx +
jnz loc_1008DBA  +
and dword ptr [ebp-8] 0 +
test byte ptr [esi+18h] 4 +
mov edi ds:ActivateKeyboardLayout +
mov ebx 80h +
jnz loc_105CEA7  +
mov eax [esi] +
push esi  +
call dword ptr [eax+20h]  +
test byte ptr [esi+18h] 4 +
mov [ebp-4] eax +
jnz loc_105CEBD  +
xor ecx ecx +
cmp [ebp-4] ecx +
jl loc_1008DB7  +
mov eax [ebp+8] +
mov eax [eax] +
cmp eax 1 +
jnz loc_1008DCF  +
test byte ptr [esi+18h] 4 +
mov [ebp-8] ecx +
jnz loc_105CEC8  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test byte ptr [esi+18h] 4 +
mov [ebp-4] eax +
jnz loc_105CEDD  +
mov edi [ebp+8] +
cmp dword ptr [edi] 2 +
jz loc_1008DDA  +
mov dword ptr [edi] 4 +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
cmp eax 2 +
jz loc_105CEE8  +
jmp loc_1008DB7  +
***
cmp dword ptr [ebp-4] 8000000Ah +
jnz loc_1008DBF  +
jmp loc_1008DC5  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+20h] +
mov dword ptr [esi] offset off_10038C8 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
test eax eax +
jnz loc_105CE75  +
pop esi  +
retn   +
***
test esi esi +
jz loc_1008CFF  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+34h]  +
jmp loc_1008CFF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+14h] 0 +
push 0  +
mov dword ptr [esi] offset off_10038C8 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov dword ptr [esi+10h] 1 +
mov [esi+18h] eax +
call ds:GetKeyboardLayout  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+24h] 0 +
mov [esi+1Ch] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 10h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_1062DA2  +
mov eax [ebp+arg_0] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor edi edi +
lea esi [ecx+78h] +
cmp [esi] edi +
jz loc_102AACF  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push 0  +
push dword ptr [eax+28h]  +
push 454h  +
push dword ptr [eax+2Ch]  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008F49  +
test byte ptr [ebp+8] 1 +
jz loc_1008F3D  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1003A18 +
mov dword ptr [ecx+4] offset off_1008CAC +
mov dword ptr [ecx+8] offset off_1008CBC +
mov dword ptr [ecx+0Ch] offset off_1008CCC +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
xor edi edi +
push edi  +
push edi  +
push [ebp+arg_0]  +
xor ebx ebx +
mov esi ecx +
inc ebx  +
call sub_1003701  +
test eax eax +
jge loc_100CD18  +
push 30h  +
mov [ebp+var_C] edi +
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_100CD56  +
push dword ptr [esi+4]  +
mov ecx eax +
push [ebp+arg_0]  +
call sub_1009015  +
push eax  +
lea ecx [ebp+var_C] +
call sub_1008EBC  +
mov ebx [ebp+var_C] +
cmp ebx edi +
jz loc_1008FF2  +
mov ecx esi +
call sub_1008EDD  +
test eax eax +
jl loc_1008FEC  +
mov esi [esi+78h] +
mov eax [esi] +
push 10000000h  +
push edi  +
push offset dword_1009000  +
push ebx  +
push esi  +
call dword ptr [eax+0Ch]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_0] +
mov [esi+28h] eax +
mov eax [ebp+arg_4] +
mov [esi+2Ch] eax +
mov dword ptr [esi] offset off_1003A18 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 4  +
push 0  +
push 0  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1003701  +
test eax eax +
jge loc_100CD5D  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor eax eax +
push edi  +
inc eax  +
mov [ebp+var_14] eax +
mov [ebp+var_1C] eax +
lea eax [ebp+nIndex] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 4  +
xor edi edi +
push edi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1003701  +
mov ebx ds:GetTickCount +
test eax eax +
jge loc_100CE09  +
mov eax [esi+0A8h] +
cmp eax edi +
jz loc_1052E7C  +
mov eax [eax] +
mov [ebp+var_18] eax +
cmp [ebp+var_18] edi +
mov [ebp+var_10] edi +
jle loc_1009133  +
cmp [ebp+var_14] edi +
jz loc_1009133  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov ecx [ebp+var_10] +
mov eax [eax+ecx*4] +
lea edx [ebp+var_8] +
push edx  +
mov [ebp+var_C] eax +
mov [ebp+var_8] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1009123  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+nIndex] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_10091B0  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc [ebp+var_10]  +
mov eax [ebp+var_10] +
cmp eax [ebp+var_18] +
jl loc_10090DD  +
cmp [ebp+var_1C] edi +
jz loc_1009189  +
mov eax [esi+0B8h] +
cmp eax [ebp+arg_0] +
jz loc_1063460  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1009057  +
cmp [ebp+var_14] edi +
jz loc_100915C  +
push [ebp+arg_0]  +
mov ecx [esi+48h] +
call sub_1009195  +
push edi  +
mov ecx esi +
call sub_1002F76  +
mov edi eax +
mov eax [esi+48h] +
lea ecx [eax+8] +
mov eax [ecx] +
push edi  +
call dword ptr [eax+0Ch]  +
test edi edi +
jnz loc_1052E5D  +
mov esi [esi+48h] +
mov eax [ebp+arg_0] +
cmp [esi+38h] eax +
jz loc_100C9EB  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0CD4h] +
test eax eax +
jnz loc_10563DC  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp [ebp+var_14] edi +
jz loc_100911A  +
mov eax [ebp+nIndex] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test al 2 +
jnz loc_1054251  +
mov eax [ebp+nIndex] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1009105  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
mov esi ecx +
call ds:GetTickCount  +
xor edi edi +
mov [ebp+var_4] eax +
mov [ebp+plii.cbSize] 8 +
cmp [esi+0B4h] edi +
jnz loc_100929B  +
lea eax [ebp+plii] +
push eax  +
call ds:GetLastInputInfo  +
test eax eax +
jz loc_100929B  +
push ebx  +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push edi  +
push 10h  +
xor ebx ebx +
call CallNtPowerInformation  +
test eax eax +
jl loc_100923D  +
mov eax [ebp+var_C] +
and al 2 +
cmp al 2 +
setz bl  +
cmp ebx edi +
jnz loc_1009271  +
cmp [ebp+arg_0] edi +
jnz loc_102AB2F  +
xor eax eax +
inc eax  +
cmp [ebp+plii.dwTime] eax +
jbe loc_10249EF  +
mov eax [ebp+var_4] +
cmp [ebp+plii.dwTime] eax +
ja loc_102AB3D  +
sub eax [ebp+plii.dwTime] +
cmp eax [esi+0B0h] +
sbb ebx ebx +
neg ebx  +
jz loc_100854A  +
lea eax [esi+0ACh] +
cmp [eax] edi +
jz loc_10086B8  +
cmp ebx edi +
jz loc_100854A  +
mov eax [esi+0B0h] +
push edi  +
push eax  +
push 0Ah  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov edx [ecx+14h] +
mov eax 80000000h +
and edx eax +
cmp edx eax +
jz loc_10066FB  +
mov ecx [ecx+28h] +
test ecx ecx +
jz loc_10066FB  +
cmp word ptr [ecx] 2Ah +
jz loc_10066FB  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset stru_10092FC  +
mov esi 80004005h +
call sub_100934A  +
test eax eax +
jz loc_100933E  +
push [ebp+arg_C]  +
mov ecx [eax] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp Destination 0 +
jz loc_1023E0A  +
mov ecx Destination +
mov eax ecx +
inc eax  +
neg eax  +
sbb eax eax +
and eax ecx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ecx+14h] eax +
setnz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+idChild] +
mov ebx ecx +
cmp eax esi +
jz loc_1009A95  +
push edi  +
test eax eax +
jz loc_100940E  +
cmp [ebp+arg_4] 0 +
jl loc_100940E  +
or [ebp+idChild] 0FFFFFFFFh +
lea edi [ebx+20h] +
mov ecx [edi] +
mov [ebp+var_4] ecx +
lea ecx [ebp+idChild] +
push ecx  +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
mov eax [ebp+var_4] +
push edi  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_100940E  +
mov edi [ebp+arg_0] +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_10093F0  +
mov eax [ebp+idChild] +
mov ecx [ebp+arg_4] +
lea eax [ecx+eax+1] +
mov [ebp+idChild] eax +
cmp edi esi +
jz loc_10363BE  +
inc [ebp+idChild]  +
push [ebp+idChild]  +
push 0FFFFFFFCh  +
push dword ptr [ebx+4]  +
push 800Ah  +
call ds:NotifyWinEvent  +
test esi esi +
jz loc_10094B2  +
cmp [ebp+arg_C] 0 +
jl loc_10094B2  +
or [ebp+arg_4] 0FFFFFFFFh +
lea edi [ebx+20h] +
mov eax [edi] +
mov [ebp+idChild] eax +
lea eax [ebp+arg_4] +
push eax  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
mov eax [ebp+idChild] +
push edi  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_100947B  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_100945C  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_C] +
lea eax [ecx+eax+1] +
mov [ebp+arg_4] eax +
cmp [ebp+arg_0] esi +
jz loc_10363D2  +
inc [ebp+arg_4]  +
push [ebp+arg_4]  +
push 0FFFFFFFCh  +
push dword ptr [ebx+4]  +
push 800Ah  +
call ds:NotifyWinEvent  +
cmp dword_10B24CC 0 +
jz loc_10094B2  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104674B  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_10466B0  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx ds:__imp_IUnknown_Set +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi+0B4h]  +
lea eax [ebp+var_4] +
push eax  +
call ebx  +
push [ebp+arg_0]  +
lea edi [esi+0B8h] +
mov eax [edi] +
mov [ebp+var_8] eax +
lea eax [esi+0B4h] +
push eax  +
call ebx  +
mov ebx [ebp+arg_4] +
mov eax [esi+0E4h] +
mov [edi] ebx +
mov edi [ebp+arg_0] +
test eax eax +
jnz loc_1064773  +
test edi edi +
jz loc_10095A6  +
test ebx ebx +
jl loc_10095A6  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+0ACh]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [esi+94h] eax +
push ebx  +
push edi  +
push [ebp+var_8]  +
mov ecx esi +
push [ebp+var_4]  +
call sub_100938E  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
push 0  +
push 0  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
push ebx  +
push edi  +
mov ecx esi +
call sub_100956D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0CCh] 0 +
jnz sub_10644C8  +
pop esi  +
leave   +
retn 8  +
***
mov eax [ebp+var_8] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push 1  +
push offset dword_10092EC  +
call sub_1009311  +
jmp loc_1009903  +
***
and dword ptr [esi+94h] 0 +
jmp loc_1009533  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+10h]  +
lea ebx [esi-14h] +
mov ecx ebx +
mov [ebp+8] ebx +
call sub_1009667  +
mov edi eax +
xor eax eax +
cmp [ebp+0Ch] eax +
jz loc_100E783  +
cmp edi eax +
jz loc_100E783  +
cmp [esi+138h] eax +
jnz loc_1065C18  +
cmp edi [ebp+10h] +
jnz loc_1065C79  +
mov eax [edi] +
push edi  +
call dword ptr [eax+18h]  +
mov eax [edi] +
push 0  +
push 40000h  +
push edi  +
call dword ptr [eax+5Ch]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+58h]  +
mov ebx 80000000h +
test eax 20000h +
jnz loc_1065C8A  +
mov esi [ebp+0Ch] +
mov eax [esi] +
push esi  +
call dword ptr [eax+6Ch]  +
and eax ebx +
cmp eax ebx +
jz loc_1009659  +
mov ecx [ebp+8] +
push 0  +
push edi  +
push esi  +
call sub_1006102  +
mov ecx [ebp+8] +
push esi  +
call sub_1005D55  +
mov esi eax +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+1Ch]  +
mov ecx [ebp+8] +
push eax  +
push esi  +
call sub_10094BE  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1009686  +
lea eax [ecx+18h] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jz loc_10644B8  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+hWnd] +
xor ebx ebx +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push 4  +
push ebx  +
push ebx  +
push edi  +
mov esi ecx +
mov [ebp+var_18] ebx +
call sub_1003701  +
test eax eax +
jl loc_10096CB  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
test eax eax +
jnz loc_1053E7A  +
cmp [ebp+lpdwProcessId] ebx +
jz loc_10096DB  +
push edi  +
mov ecx esi +
call sub_1002F76  +
mov [ebp+var_18] eax +
push ebx  +
push 3E8h  +
push 5  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
cmp [ebp+var_C] ebx +
jz loc_100E6B4  +
cmp edi ebx +
jz loc_100970D  +
push offset aItasklist_dele  +
push edi  +
call ds:GetPropW  +
test eax eax +
jnz loc_1053E72  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_1009815  +
cmp [ebp+var_C] ebx +
jz loc_1009731  +
push [ebp+hWnd]  +
push ebx  +
push 4F3h  +
push hWnd  +
call ds:PostMessageW  +
mov eax [esi+48h] +
push [ebp+var_18]  +
lea ecx [eax+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+8] +
mov eax [edi+7Ch] +
xor ebx ebx +
cmp eax ebx +
jz loc_10097A0  +
mov eax [eax] +
mov [ebp+8] eax +
cmp [ebp+8] ebx +
jle loc_100979A  +
push esi  +
mov eax [edi+7Ch] +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+24h]  +
push esi  +
push dword ptr [edi+7Ch]  +
call ds:off_100407C  +
test eax eax +
jl loc_1064D73  +
inc ebx  +
cmp ebx [ebp+8] +
jl loc_1009772  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov [ebp+8] ebx +
jmp loc_100976C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+8] +
mov eax [esi+14h] +
xor ecx ecx +
cmp eax ecx +
jz loc_1002C6C  +
mov eax [eax] +
mov [ebp-4] eax +
cmp [ebp-4] ecx +
mov [ebp+8] ecx +
jle loc_100980B  +
push ebx  +
push edi  +
mov eax [esi+14h] +
mov eax [eax+4] +
mov ecx [ebp+8] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
mov ebx eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
push eax  +
mov [ebp-0Ch] eax +
call ds:IsWindow  +
test eax eax +
jz loc_100D49C  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-4] +
jl loc_10097D2  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_10099B7  +
xor edi edi +
push edi  +
mov ecx esi +
call sub_10091DD  +
mov [ebp+var_14] eax +
mov eax [esi+0B8h] +
mov [ebp+var_C] edi +
mov [ebp+var_4] edi +
cmp eax edi +
jz loc_1009858  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+var_C] +
push ecx  +
push 4  +
push edi  +
push edi  +
push eax  +
mov ecx esi +
call sub_1003701  +
mov ebx [ebp+hWnd] +
cmp ebx edi +
jz loc_100E767  +
push ebx  +
call sub_1005CD2  +
test eax eax +
jz loc_100E767  +
push edi  +
call sub_1009ADE  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
push edi  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1003701  +
test eax eax +
jl loc_105281D  +
push [ebp+var_10]  +
mov eax [esi+94h] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp [esi+0ACh] edi +
jz loc_10098B9  +
mov eax [ebp+var_10] +
push [ebp+var_14]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
cmp [esi+0BCh] edi +
jnz loc_1054466  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_1009903  +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_100958A  +
mov ecx [eax] +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_100958A  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [esi+0ACh] edi +
jz loc_1009986  +
cmp [ebp+var_4] edi +
jz loc_1009986  +
mov eax [ebp+var_C] +
cmp eax edi +
jz loc_1009986  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_1009986  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1009986  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi ds:GetTickCount +
mov ebx eax +
call edi  +
cmp ebx eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
ja loc_1063832  +
call dword ptr [ecx+1Ch]  +
mov ebx eax +
call edi  +
sub eax ebx +
push eax  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push 2  +
push offset dword_10092EC  +
call sub_1009311  +
mov ebx [ebp+hWnd] +
xor edi edi +
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
cmp ebx edi +
jz loc_10099A2  +
mov eax [esi+48h] +
mov [eax+38h] ebx +
pop edi  +
mov [esi+0B8h] ebx +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+94h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0A0h]  +
and [ebp+var_14] 0 +
mov edi ds:PeekMessageW +
mov ebx 980002h +
mov eax [esi+0A8h] +
test eax eax +
jz loc_1054555  +
mov eax [eax] +
mov ecx [ebp+var_14] +
cmp ecx eax +
jge loc_1009A3A  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov eax [eax+ecx*4] +
and [ebp+var_8] 0 +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1009A35  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1009A3F  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc [ebp+var_14]  +
jmp loc_10099E2  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+hWnd] eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+0A4h] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push [ebp+hWnd]  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jge loc_103646B  +
push [ebp+hWnd]  +
call ds:IsWindow  +
test eax eax +
jnz loc_1009A1B  +
mov [ebp+var_C] 1 +
cmp [ebp+var_C] 0 +
jz loc_1009A1B  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_1008F6E  +
jmp loc_1009A1B  +
***
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_C] +
jz loc_10094B3  +
jmp loc_10093A6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
cmp dword_10B10EC ebx +
jz loc_1009AD3  +
xor eax eax +
cmp dword_10B10F8 ebx +
setz al  +
cmp [ebp+arg_0] eax +
jz loc_105225C  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 579h  +
push hWnd  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
push eax  +
mov ecx ebx +
call sub_1009B0F  +
jmp loc_1002208  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1009B28  +
lea eax [ecx+0DE4h] +
cmp edx [eax] +
jz loc_1009B28  +
and dword ptr [eax] 0 +
xor eax eax +
cmp [ecx+0DE4h] eax +
setz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_10641A8  +
mov ecx [ebp+8] +
mov [ecx+14h] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
lea edx [edi-4E7h] +
cmp edx 0D2h +
ja loc_10021D4  +
movzx edx ds:byte_100A4B9[edx] +
jmp ds:off_100A405[edx*4]  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_1009AAB  +
jmp loc_1002264  +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
lea edx [ebp+var_94] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_1026729  +
push esi  +
push esi  +
push dword_10B10EC  +
mov ecx ebx +
call sub_1070EFD  +
jmp loc_1002264  +
push esi  +
push esi  +
call ds:ExitWindowsEx  +
jmp loc_10021F8  +
push 0FFFFFFFFh  +
push 0B9Bh  +
push offset dword_100A590  +
call sub_104B3E5  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push 0B9Ch  +
push offset dword_1007748  +
call sub_1007936  +
test byte ptr [ebp+wParam] 1 +
mov byte_10B39B8 1 +
jz loc_10021F8  +
cmp dword_10B3AD8 esi +
jnz loc_1009C07  +
mov ecx ebx +
call sub_1070AB4  +
mov ecx ebx +
call sub_106FD38  +
jmp loc_1002208  +
push 7F8Ah  +
push esi  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
jmp loc_1002298  +
mov ecx ebx +
call sub_106FDDB  +
jmp loc_1021198  +
mov ecx ebx +
call sub_1070AB4  +
jmp loc_1002264  +
lea eax [ebp-6Ch] +
push eax  +
call sub_103099F  +
test eax eax +
jl loc_1009C62  +
push dword ptr [ebp-6Ch]  +
push 52Ch  +
push offset dword_102F510  +
call sub_101588E  +
cmp [ebp+wParam] esi +
jz loc_1002264  +
test [ebp+lParam] 80000000h +
jz loc_1009C82  +
mov ecx ebx +
mov dword ptr [ebx+30h] 1 +
call sub_1051D33  +
mov ecx ebx +
call sub_1070AB4  +
mov edi ds:ShowWindow +
push esi  +
push dword ptr [ebx+4]  +
call edi  +
push esi  +
push dword_10B10EC  +
call edi  +
push dword ptr [ebx+4]  +
call ds:DestroyWindow  +
jmp loc_1002264  +
mov ecx dword_10B10C8 +
mov [eax+18h] ecx +
mov eax dword_10B10CC +
mov [edx+1Ch] eax +
jmp loc_1002264  +
dec edx  +
dec edx  +
jz loc_1009CE6  +
dec edx  +
jnz loc_1010D8C  +
cmp dword ptr [eax+4] 14h +
jnz loc_1010D8C  +
push dword ptr [eax+8]  +
mov ecx ebx +
call sub_1072D67  +
jmp loc_1002208  +
push eax  +
push dword ptr [ebx+0C04h]  +
lea ecx [ebx+98h] +
call sub_10755BA  +
jmp loc_1002208  +
cmp [ebx+0C84h] esi +
jnz loc_1002208  +
lea eax [ebp+EventTrack] +
push eax  +
push [ebp+hWndParent]  +
call ds:GetClientRect  +
push 2  +
lea eax [ebp+EventTrack] +
push eax  +
push esi  +
push [ebp+hWndParent]  +
call ds:MapWindowPoints  +
cmp [ebx+0D14h] esi +
jz loc_1009DE1  +
mov eax [ebx+0CD8h] +
sub eax esi +
jz loc_1009DB8  +
dec eax  +
jz loc_1009D93  +
dec eax  +
jz loc_1009D6E  +
dec eax  +
jnz loc_1002264  +
mov eax [ebx+0C18h] +
add eax [ebp+EventTrack.dwFlags] +
push dword ptr [ebp-6Ch]  +
mov [ebp+EventTrack.dwHoverTime] eax +
push dword ptr [ebp-70h]  +
lea eax [ebp+EventTrack] +
push eax  +
call ds:PtInRect  +
neg eax  +
sbb eax eax +
and eax 0Ah +
jmp loc_1009DDB  +
mov eax [ebx+0C18h] +
add eax [ebp+EventTrack.cbSize] +
push dword ptr [ebp-6Ch]  +
mov [ebp+EventTrack.hwndTrack] eax +
push dword ptr [ebp-70h]  +
lea eax [ebp+EventTrack] +
push eax  +
call ds:PtInRect  +
neg eax  +
sbb eax eax +
and eax 8 +
jmp loc_1009DDB  +
mov eax [ebp+EventTrack.dwHoverTime] +
sub eax [ebx+0C18h] +
push dword ptr [ebp-6Ch]  +
mov [ebp+EventTrack.dwFlags] eax +
push dword ptr [ebp-70h]  +
lea eax [ebp+EventTrack] +
push eax  +
call ds:PtInRect  +
neg eax  +
sbb eax eax +
and eax 0Dh +
jmp loc_1009DDB  +
mov eax [ebp+EventTrack.hwndTrack] +
sub eax [ebx+0C18h] +
push dword ptr [ebp-6Ch]  +
mov [ebp+EventTrack.cbSize] eax +
push dword ptr [ebp-70h]  +
lea eax [ebp+EventTrack] +
push eax  +
call ds:PtInRect  +
neg eax  +
sbb eax eax +
and eax 9 +
inc eax  +
jmp loc_100229A  +
mov ecx ebx +
call sub_106FBF7  +
test eax eax +
jz loc_10021F8  +
push 2  +
pop eax  +
jmp loc_1002208  +
push eax  +
push ecx  +
push 83h  +
push [ebp+hWndParent]  +
call ds:DefWindowProcW  +
mov ebx [ebx] +
push ebx  +
push ebx  +
push [ebp+lParam]  +
call ds:InflateRect  +
jmp loc_1010D8C  +
push eax  +
push 0A3h  +
mov ecx ebx +
call sub_104E961  +
test eax eax +
jnz loc_1002264  +
push dword ptr [ebx+0C04h]  +
push [ebp+lParam]  +
call sub_104EF41  +
test eax eax +
jz loc_1002264  +
push [ebp+lParam]  +
mov ecx ebx +
call sub_104E85A  +
jmp loc_1002264  +
mov ecx [ebp+hdc] +
call sub_10372F5  +
test eax eax +
jnz loc_10021F8  +
push esi  +
push 1  +
push 0F3h  +
push dword ptr [ebx+0B10h]  +
jmp loc_104E84A  +
cmp [ebx+0D14h] esi +
jz loc_10021F8  +
cmp byte ptr [ebx+0DE8h] 0 +
jnz loc_10021F8  +
mov ecx [ebp+hdc] +
call sub_10372F5  +
test eax eax +
jnz loc_10021F8  +
mov ecx ebx +
call sub_10409D2  +
test eax eax +
jz loc_10021F8  +
mov ecx ebx +
call sub_1052E89  +
test eax eax +
jnz loc_10021F8  +
mov ecx ebx +
call sub_103717C  +
test eax eax +
jnz loc_10021F8  +
mov ecx [ebp+hdc] +
push 2  +
call sub_10370F8  +
mov eax [ebx+4] +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 12h +
mov [ebp+EventTrack.hwndTrack] eax +
mov [ebp+EventTrack.dwHoverTime] esi +
jmp loc_104E612  +
call ds:GetFocus  +
push eax  +
push dword ptr [esi]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jz loc_104EF2B  +
lea eax [ebp+var_58] +
push eax  +
push [ebp+lParam]  +
push [ebp+wParam]  +
jmp loc_104EBF0  +
mov eax 80000h +
push eax  +
push eax  +
push 0FFFFFFF0h  +
push [ebp+hWndParent]  +
call ds:SHLWAPI_165  +
push esi  +
push [ebp+hWndParent]  +
call ds:GetSystemMenu  +
mov [ebp+hdc] eax +
cmp eax esi +
jz loc_1009FC0  +
mov edi ds:EnableMenuItem +
push 3  +
push 0F120h  +
push eax  +
call edi  +
push 3  +
push 0F030h  +
push [ebp+hdc]  +
call edi  +
push 3  +
push 0F020h  +
push [ebp+hdc]  +
call edi  +
mov eax [ebx+0D28h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 3 +
push eax  +
push 0F010h  +
push [ebp+hdc]  +
call edi  +
mov eax [ebx+0D28h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 3 +
push eax  +
push 0F000h  +
push [ebp+hdc]  +
call edi  +
push [ebp+hdc]  +
lea ecx [ebx+0AF8h] +
call sub_106F013  +
cmp eax esi +
jz loc_1009FC0  +
push esi  +
push eax  +
push 112h  +
push dword ptr [ebx+4]  +
call ds:SendMessageW  +
push esi  +
push 80000h  +
push 0FFFFFFF0h  +
push [ebp+hWndParent]  +
call ds:SHLWAPI_165  +
jmp loc_1002264  +
lea ecx [ebx+98h] +
call sub_1076E0D  +
jmp loc_102675E  +
cmp [ebx+0C94h] esi +
jz loc_1002264  +
push eax  +
push ecx  +
push edi  +
call SndVolSSO_3  +
jmp loc_1002264  +
and ecx 0FFF0h +
cmp ecx 0F060h +
jz loc_1009B9C  +
jmp loc_10021F8  +
push eax  +
push ecx  +
push 113h  +
mov ecx ebx +
call sub_106F97C  +
jmp loc_1002208  +
mov edi ds:SendMessageW +
mov [ebx+0C50h] esi +
mov [ebx+20h] esi +
cmp pvParam esi +
jnz loc_100A04D  +
push esi  +
push 1  +
push 0Bh  +
push dword ptr [ebx+0CA8h]  +
call edi  +
push esi  +
push esi  +
push 5  +
push [ebp+hWndParent]  +
call ds:PostMessageW  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 232h  +
push dword ptr [ebx+0C10h]  +
call edi  +
mov ecx ebx +
mov dword_10B39B0 esi +
call sub_106FDDB  +
jmp loc_1002264  +
lea edi [ebx+0D2Ch] +
push edi  +
mov dword_10B39B0 1 +
call ds:GetCursorPos  +
mov eax [edi] +
mov [ebx+0D34h] eax +
mov eax [ebx+0D30h] +
push 0Ch  +
mov [ebx+0D38h] eax +
call ds:GetSystemMetrics  +
push eax  +
push 0Bh  +
call ds:GetSystemMetrics  +
push eax  +
push edi  +
call ds:InflateRect  +
push esi  +
mov ecx ebx +
call sub_1015CA1  +
mov eax [ebx+0CF8h] +
or dword ptr [ebx+0CE4h] 0FFFFFFFFh +
mov edi ds:SendMessageW +
mov [ebx+0CFCh] eax +
mov dword ptr [ebx+0C50h] 1 +
cmp pvParam esi +
jnz loc_100A102  +
push esi  +
push esi  +
push 0Bh  +
push dword ptr [ebx+0CA8h]  +
call edi  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 231h  +
push dword ptr [ebx+0C10h]  +
jmp loc_1050E42  +
dec edx  +
dec edx  +
jnz loc_10021D4  +
mov ecx ebx +
call sub_101E74B  +
jmp loc_1002264  +
push 10h  +
lea eax [ebp+EventTrack] +
push eax  +
push [ebp+hdc]  +
call ds:FillRect  +
push 2  +
lea eax [ebp+EventTrack] +
push eax  +
push [ebp+hWndParent]  +
push esi  +
call ds:MapWindowPoints  +
push dy  +
lea eax [ebp+EventTrack] +
push dword_10B10B8  +
push eax  +
call ds:InflateRect  +
push 3  +
push 6  +
lea eax [ebp+EventTrack] +
push eax  +
push [ebp+hdc]  +
call ds:DrawEdge  +
jmp loc_10023F0  +
movzx eax word ptr [ebp+wParam] +
push eax  +
call sub_1070D78  +
jmp loc_1002264  +
push eax  +
push ecx  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_107088E  +
jmp loc_1002208  +
push esi  +
push esi  +
lea eax [ebp-6Ch] +
push eax  +
push offset dword_100E458  +
push offset stru_101DD90  +
push dword ptr [ebx+3Ch]  +
call sub_101EA9C  +
test eax eax +
jl loc_1002264  +
mov eax [ebp-6Ch] +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 320h  +
push [ebp+hWndParent]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp-6Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1002264  +
push ecx  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_106F451  +
jmp loc_1002208  +
push ecx  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_106F3DA  +
jmp loc_1002208  +
push eax  +
push ecx  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_1070E3F  +
jmp loc_1002208  +
push ecx  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_106F3F7  +
jmp loc_1002208  +
push ecx  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_106F847  +
jmp loc_1002208  +
push eax  +
push 2  +
mov ecx ebx +
call sub_10716E1  +
jmp loc_1002208  +
call sub_107A68E  +
jmp loc_1002264  +
push eax  +
push ecx  +
push edi  +
mov ecx ebx +
call sub_106F8D5  +
jmp loc_1002264  +
lea eax [ebp-6Ch] +
push eax  +
push pUnk  +
mov [ebp-6Ch] esi +
push ecx  +
call ds:__imp_CoMarshalInterThreadInterfaceInStream  +
mov eax [ebp-6Ch] +
jmp loc_1002208  +
push eax  +
push ecx  +
push edi  +
jmp loc_100A01D  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_1070EC0  +
jmp loc_1002208  +
mov ecx ebx +
call sub_1070C25  +
jmp loc_1002264  +
push 13h  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push ecx  +
call ds:SetWindowPos  +
jmp loc_1002264  +
cmp [ebx+0C50h] esi +
jz loc_100A2BE  +
cmp pvParam esi +
jnz loc_1002264  +
cmp ecx esi +
jz loc_100A2D3  +
push esi  +
mov ecx ebx +
call sub_1071F95  +
test ax ax +
jz loc_1002264  +
push 40h  +
push 206h  +
push 2C1h  +
push [ebp+hWndParent]  +
push hInstance  +
call ds:ShellMessageBoxW  +
add esp 14h +
jmp loc_1002264  +
push eax  +
mov ecx ebx +
call sub_107295F  +
jmp loc_1002264  +
xor eax eax +
cmp dword_10B10F8 esi +
push 1  +
setz al  +
push eax  +
jmp loc_1009B7A  +
dec ecx  +
jz loc_100A33B  +
dec ecx  +
jz loc_100A334  +
dec ecx  +
jz loc_100A32D  +
dec ecx  +
jnz loc_1002264  +
push 10h  +
jmp loc_1048F08  +
push 4  +
jmp loc_1048F08  +
push 8  +
jmp loc_1048F08  +
push 2  +
jmp loc_1048F08  +
mov eax [ebx+0C54h] +
jmp loc_1002208  +
mov ecx ebx +
call sub_1070AB4  +
call sub_106DDD9  +
mov ecx ebx +
call sub_106FD38  +
jmp loc_1002264  +
mov ecx ebx +
call sub_106FB11  +
jmp loc_1002264  +
lea eax [ebx+0D04h] +
push eax  +
call sub_1002BEE  +
lea eax [ebx+0D08h] +
push eax  +
call sub_1002BEE  +
mov eax [ebp+wParam] +
mov edi [ebp+lParam] +
cmp eax esi +
jz loc_100A3AF  +
cmp edi esi +
jz loc_100A3B7  +
mov [ebx+0D04h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov [ebx+0D08h] edi +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
cmp edi esi +
jnz loc_1002264  +
push 1  +
mov ecx ebx +
call sub_10342AE  +
jmp loc_1002264  +
mov ebx [ebx+3Ch] +
cmp ebx esi +
jz loc_1002264  +
push ecx  +
push ebx  +
call sub_101ED96  +
jmp loc_1002264  +
push esi  +
push [ebp+wParam]  +
push 40Bh  +
push dword ptr [ebx+0C04h]  +
call ds:PostMessageW  +
jmp loc_10021F8  +
push [ebp+wParam]  +
mov ecx ebx +
call sub_106FC67  +
jmp loc_10021F8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100804B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov ecx [ebp+10h] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
test byte ptr [ecx+24h] 10h +
mov [ebp+var_8] ecx +
mov [ebp+var_4] offset off_100A6D8 +
jnz loc_100A5EA  +
mov [ebp+var_4] offset off_100A6A0 +
and [ebp+var_28] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
mov eax [esi] +
push esi  +
mov [ebp+var_10] esi +
call dword ptr [eax+80h]  +
mov [ebp+var_18] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
mov [ebp+var_1C] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+50h]  +
mov ebx [ebp+arg_4] +
mov [ebp+var_20] eax +
test ebx ebx +
jz loc_100807A  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
mov edi eax +
test edi edi +
jz loc_100A656  +
push 3  +
push edi  +
mov [ebp+var_28] edi +
call ds:GetAncestor  +
push eax  +
mov [ebp+arg_0] eax +
call sub_1006351  +
test eax eax +
jz loc_10364BF  +
mov [ebp+var_24] edi +
mov eax [esi] +
lea ecx [ebp+var_14] +
push ecx  +
push ebx  +
push esi  +
call dword ptr [eax+40h]  +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push ebx  +
push esi  +
call dword ptr [eax+38h]  +
mov edi [ebp+var_4] +
push 8  +
pop ebx  +
cmp ebx [ebp+var_C] +
jl loc_100A68D  +
push ebx  +
push dword ptr [edi+4]  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_8]  +
call dword ptr [edi]  +
cmp eax 0FFFFFFFEh +
jnz loc_100A8CB  +
dec ebx  +
add edi 8 +
cmp ebx 1 +
jg loc_100A672  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push dword ptr [esi]  +
mov edi ds:IsWindow +
call edi  +
test eax eax +
jz loc_100A775  +
push dword ptr [esi+4]  +
call edi  +
test eax eax +
jz loc_100A775  +
push 10h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_100A77E  +
push dword ptr [ebp+8]  +
mov ecx eax +
push dword ptr [ebp+14h]  +
push dword ptr [esi]  +
call sub_100A787  +
mov edi eax +
test edi edi +
jz loc_100A775  +
push edi  +
push offset loc_100A8FE  +
push 0  +
push dword ptr [ebp+10h]  +
push 7Fh  +
push dword ptr [esi+4]  +
call ds:SendMessageCallbackW  +
test eax eax +
jz loc_10635F9  +
push 0FFFFFFFEh  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
xor edi edi +
jmp loc_100A753  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi+4] eax +
mov eax [ebp+arg_4] +
mov [esi+8] eax +
mov eax [ebp+arg_8] +
mov dword ptr [esi] offset off_1006324 +
mov [esi+0Ch] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
push 0FFFFFFFEh  +
mov esi ecx +
pop edi  +
jz loc_100A833  +
push ebx  +
lea edx [ebp+var_C] +
lea eax [esi+20h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+60h]  +
and [ebp+hIcon] 0 +
lea eax [ebp+hIcon] +
push eax  +
push [ebp+var_8]  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call ds:off_100A854  +
mov ebx eax +
test ebx ebx +
jl loc_100A832  +
mov edi [ebp+arg_4] +
test edi edi +
jl loc_10066E8  +
mov eax edi +
shr eax 10h +
test ax ax +
jnz loc_10066E8  +
push [ebp+hIcon]  +
lea ecx [esi+60h] +
push edi  +
call sub_10064F3  +
cmp eax 0FFFFFFFFh +
jz loc_1063083  +
movzx edi ax +
cmp ebx 1 +
jnz loc_10539EB  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+18h] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B232C 0FFFFFFFFh +
jz loc_1026846  +
mov eax dword_10B232C +
test eax eax +
jz loc_105CC8B  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push dword ptr [esi]  +
mov edi ds:IsWindow +
call edi  +
test eax eax +
jz loc_1008056  +
push dword ptr [esi+4]  +
call edi  +
test eax eax +
jz loc_1008056  +
push dword ptr [ebp+10h]  +
push dword ptr [esi+4]  +
call ds:GetClassLongW  +
push dword ptr [esi+14h]  +
mov ecx [ebp+8] +
push eax  +
call sub_100A7B8  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov ecx [esi] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [ecx+44h]  +
mov eax [esi] +
push ebx  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+3Ch]  +
cmp [ebp+arg_4] 0 +
jnz loc_100A696  +
mov ecx [ebp+var_8] +
push 0  +
push esi  +
call sub_1006489  +
jmp loc_100A696  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+10h] +
test esi esi +
jz loc_100A924  +
push dword ptr [esi+8]  +
mov ecx [esi+0Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [esi+4]  +
call sub_100A92E  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 658h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov ebx ecx +
lea ecx [ebp+var_620] +
push ecx  +
lea ecx [ebp+var_624] +
push ecx  +
push 4  +
xor esi esi +
push esi  +
push esi  +
push eax  +
mov ecx ebx +
mov [ebp+var_64C] edi +
call sub_1003701  +
test eax eax +
jl loc_100A9AF  +
mov eax [ebp+var_620] +
cmp eax esi +
jz loc_100A997  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
cmp [ebp+arg_8] eax +
jl loc_100A997  +
push edi  +
call sub_100A9F5  +
test eax eax +
jnz loc_100AAF8  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_624] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
mov dword ptr [esi] offset off_1006324 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
test byte ptr [ebp+8] 1 +
jz loc_100A9E9  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
xor edi edi +
cmp [ebp+hIcon] edi +
jnz loc_100AABA  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
mov ebx [ebp+hIcon] +
push [ebp+arg_4]  +
and [ebp+var_4] 0 +
lea ecx [ebx-14h] +
call sub_1005D55  +
mov [ebp+arg_8] eax +
test esi esi +
jz loc_100AA67  +
mov ebx [ebp+arg_C] +
mov eax [esi] +
and ebx 2 +
push esi  +
mov [ebp-8] ebx +
call dword ptr [eax+58h]  +
and eax edi +
sub eax edi +
neg eax  +
sbb eax eax +
xor ecx ecx +
inc eax  +
cmp ebx 2 +
setz cl  +
mov ebx 10000h +
cmp ecx eax +
jnz loc_103F518  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test eax ebx +
jnz loc_105193C  +
mov ebx [ebp+hIcon] +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1006457  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
test eax eax +
jz loc_1006457  +
mov edi [ebp+arg_8] +
mov eax [edi] +
lea ecx [ebp+rc] +
push ecx  +
push esi  +
push edi  +
call dword ptr [eax+2Ch]  +
cmp edi [ebx+150h] +
jz loc_1064B4F  +
push 0  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx-10h]  +
call ds:InvalidateRect  +
cmp [ebx+0D0h] edi +
jnz loc_1006457  +
jmp loc_1064B6A  +
and [ebp+rc.top] edi +
xor eax eax +
lea edi [ebp+rc.right] +
stos   +
stos   +
stos   +
push esi  +
stos   +
lea eax [ebp+rc.top] +
push eax  +
push [ebp+hIcon]  +
call ds:GetIconInfo  +
cmp dword ptr [ebp-8] 0 +
mov esi ds:DeleteObject +
mov edi eax +
jz loc_100AAE7  +
push dword ptr [ebp-8]  +
call esi  +
cmp [ebp+var_4] 0 +
jz loc_100AAF2  +
push [ebp+var_4]  +
call esi  +
pop esi  +
jmp loc_100AA09  +
***
mov eax [ebp+var_620] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push eax  +
push edi  +
mov ecx ebx +
call sub_100A7B8  +
cmp eax esi +
jl loc_100A997  +
mov ecx [ebp+var_624] +
mov edx [ecx] +
push eax  +
push [ebp+var_620]  +
push ecx  +
call dword ptr [edx+44h]  +
push [ebp+arg_8]  +
mov eax [ebp+var_624] +
push [ebp+var_620]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
push [ebp+var_620]  +
mov ecx ebx +
push [ebp+var_624]  +
call sub_1006489  +
mov eax [ebx+94h] +
mov ecx [eax] +
push 1  +
push [ebp+var_620]  +
push [ebp+var_624]  +
push eax  +
call dword ptr [ecx+18h]  +
lea eax [ebp+hKey] +
push eax  +
mov eax [ebp+var_624] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
push 2  +
push 42h  +
call ds:AssocQueryKeyW  +
test eax eax +
jl loc_100A997  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push esi  +
push offset SubKey  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_1052607  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_100A997  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 30h +
dec eax  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
jnz loc_1044629  +
lea ebx [esi+0ECh] +
push dword ptr [ebx]  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
xor edi edi +
mov [ebx] edi +
mov eax [esi+90h] +
cmp eax edi +
jz loc_10446CA  +
mov eax [eax] +
mov [ebp+arg_0] eax +
xor ebx ebx +
cmp [ebp+arg_0] edi +
jle loc_100AC66  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov eax [eax+ebx*4] +
mov ecx [eax] +
cmp eax [esi+164h] +
jz loc_1064FB0  +
push edi  +
push eax  +
call dword ptr [ecx+44h]  +
inc ebx  +
cmp ebx [ebp+arg_0] +
jl loc_100AC41  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
sub ebx 102h +
jz loc_102EF8D  +
sub ebx 4 +
jz loc_102EF8D  +
sub ebx 0Dh +
jnz loc_1003CD0  +
push edx  +
mov ecx esi +
call sub_100ABFB  +
jmp loc_1003CBC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+0Ch] +
mov ecx [eax] +
push edi  +
xor ebx ebx +
push eax  +
mov [ebp-4] ebx +
call dword ptr [ecx+6Ch]  +
mov edi 10000h +
test eax edi +
jnz loc_1053308  +
mov eax [esi+14h] +
cmp eax ebx +
jz loc_1002C2A  +
mov eax [eax] +
mov [ebp-8] eax +
cmp [ebp-8] ebx +
mov [ebp+8] ebx +
jle loc_100AD0D  +
mov eax [esi+14h] +
mov eax [eax+4] +
mov ecx [ebp+8] +
mov eax [eax+ecx*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
test ebx ebx +
jz loc_100AD00  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+58h]  +
test eax edi +
jnz loc_100AD1D  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-8] +
jl loc_100ACDE  +
xor ebx ebx +
cmp [ebp-4] ebx +
jnz loc_100DC00  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax [ebx] +
push 0  +
push edi  +
push ebx  +
call dword ptr [eax+5Ch]  +
mov eax [esi+8] +
mov eax [eax+38h] +
mov ecx [eax] +
push 0  +
push 1  +
push ebx  +
push dword ptr [esi+0Ch]  +
push eax  +
call dword ptr [ecx+10h]  +
cmp dword ptr [ebp-4] 0 +
jnz loc_100AD79  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_1033B7A  +
mov eax [esi] +
lea ecx [ebp-18h] +
push ecx  +
push dword ptr [ebp+8]  +
push esi  +
call dword ptr [eax+30h]  +
mov eax [ebp+0Ch] +
test eax eax +
jnz loc_106671F  +
push 0  +
lea eax [ebp-18h] +
push eax  +
mov eax [esi+8] +
push dword ptr [eax+4]  +
call ds:InvalidateRect  +
mov ecx [esi+8] +
lea eax [esi-8] +
neg eax  +
sbb eax eax +
and eax esi +
cmp [ecx+0E4h] eax +
jnz loc_100AD00  +
jmp loc_1066733  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
call sub_100ADB3  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 3  +
push 0  +
push offset rclsid  +
mov edi ecx +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_100AE54  +
push esi  +
push 428h  +
call sub_1002B98  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_100AE4A  +
mov eax [edi+28h] +
mov [esi] eax +
lea eax [esi+424h] +
push eax  +
lea eax [esi+420h] +
push eax  +
lea eax [esi+414h] +
push eax  +
mov eax 104h +
push eax  +
lea ecx [esi+20Ch] +
push ecx  +
push eax  +
lea eax [esi+4] +
push eax  +
push dword ptr [edi+28h]  +
mov ecx edi +
push [ebp+ppv]  +
call sub_100AE67  +
test eax eax +
jl loc_100AE57  +
mov eax [edi+30h] +
push esi  +
mov [esi+418h] eax +
mov eax [edi+34h] +
push 0  +
push 44Ah  +
mov [esi+41Ch] eax +
push dword ptr [edi+2Ch]  +
call ds:PostMessageW  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
pop edi  +
leave   +
retn   +
push 1  +
mov ecx esi +
call sub_100B5AC  +
jmp loc_100AE4A  +
***
mov edi edi +
call sub_100B273  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100AF6E  +
test byte ptr [ebp+8] 1 +
jz loc_100AF62  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_10039E0 +
mov dword ptr [ecx+4] offset off_1008CAC +
mov dword ptr [ecx+8] offset off_1008CBC +
mov dword ptr [ecx+0Ch] offset off_1008CCC +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push esi  +
mov esi [ebp+dwProcessId] +
jbe loc_100AFA7  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+dwProcessId] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowThreadProcessId  +
test eax eax +
jz loc_105D12F  +
push [ebp+arg_8]  +
push esi  +
push [ebp+dwProcessId]  +
call sub_100AFD2  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_8] 0 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
jbe loc_100AFF7  +
xor eax eax +
mov [esi] ax +
push [ebp+dwProcessId]  +
push 0  +
push 1000h  +
call ds:OpenProcess  +
mov edi eax +
test edi edi +
jz loc_105D114  +
lea eax [ebp+var_210] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push 0  +
push edi  +
mov [ebp+var_210] 104h +
call ds:QueryFullProcessImageNameW  +
test eax eax +
jz loc_100B061  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+arg_8]  +
push esi  +
call sub_100665F  +
mov esi eax +
push edi  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
mov esi 80004005h +
jmp loc_100B048  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+dwProcessId] +
push edi  +
push [ebp+cchBuffer]  +
push esi  +
push [ebp+hWnd]  +
call sub_100AF93  +
mov edi eax +
test edi edi +
jl loc_100B09E  +
push esi  +
call ds:__imp_PathIsNetworkPathW  +
test eax eax +
jnz loc_100B09E  +
push [ebp+cchBuffer]  +
push esi  +
push esi  +
call sub_100B0AB  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+cchBuffer]  +
xor esi esi +
push [ebp+lpszLongPath]  +
push [ebp+lpszShortPath]  +
call ds:GetLongPathNameW  +
test eax eax +
jz loc_10687E8  +
cmp eax [ebp+cchBuffer] +
ja loc_10687F4  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
test eax eax +
jnz loc_1053C65  +
mov ebx [ebp+hWnd] +
push ebx  +
mov [ebp+var_4] ebx +
call sub_10037E7  +
test eax eax +
jnz sub_1063440  +
xor eax eax +
mov edi 8000000Ah +
cmp [ebp+var_4] eax +
jz loc_100B1F0  +
lea ecx [ebp+hWnd] +
push ecx  +
lea ecx [ebp+var_C] +
push ecx  +
push 4  +
push eax  +
push eax  +
push ebx  +
mov ecx esi +
call sub_1003701  +
mov edi eax +
test edi edi +
jge loc_105304D  +
lea eax [ebp+hWnd] +
push eax  +
push offset dword_100B210  +
push ebx  +
call sub_100B73C  +
mov edi eax +
test edi edi +
jl loc_100B1DE  +
mov eax [esi+0A4h] +
mov ecx [eax] +
push 0  +
push [ebp+hWnd]  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jl loc_100B1DE  +
and [ebp+var_8] 0 +
push 38h  +
mov edi 8007000Eh +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1053C6D  +
push [ebp+arg_C]  +
mov ecx eax +
push [ebp+arg_8]  +
push dword ptr [esi+4]  +
push [ebp+var_4]  +
call sub_100B225  +
push eax  +
lea ecx [ebp+var_8] +
call sub_1008EBC  +
mov ebx [ebp+var_8] +
test ebx ebx +
jz loc_100B1DE  +
mov ecx esi +
call sub_1008EDD  +
mov edi eax +
test edi edi +
jl loc_100B1CA  +
mov eax [esi+78h] +
mov ecx [eax] +
push 10000000h  +
push 0  +
push offset dword_100B200  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
test edi edi +
jl loc_100B1DE  +
cmp [ebp+arg_4] 0 +
jnz loc_1053C74  +
lea eax [ebp+hWnd] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_0] +
mov [esi+28h] eax +
mov eax [ebp+arg_4] +
mov [esi+2Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+30h] eax +
mov eax [ebp+arg_C] +
mov [esi+34h] eax +
mov dword ptr [esi] offset off_10039E0 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
xor ebx ebx +
cmp [edi+94h] ebx +
jz loc_100B4D5  +
push 1388h  +
push 0FFFFFFFFh  +
call sub_100B4EE  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 4  +
push ebx  +
push ebx  +
push dword ptr [esi]  +
mov ecx edi +
mov [ebp+var_18] ebx +
mov [ebp+var_10] ebx +
call sub_1003701  +
test eax eax +
jl loc_100B4A3  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov ecx eax +
mov eax 80000000h +
and ecx eax +
cmp ecx eax +
jnz loc_105306E  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov ecx eax +
mov eax 80000000h +
and ecx eax +
cmp ecx eax +
jnz loc_1053175  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+var_C] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_100B4A3  +
push [ebp+var_C]  +
mov ecx edi +
call sub_1007701  +
push ebx  +
lea ecx [ebp+arg_0] +
push ecx  +
push 1  +
lea eax [esi+20Ch] +
push eax  +
push dword ptr [esi+414h]  +
mov ecx edi +
push dword ptr [esi]  +
mov [ebp+var_1C] ebx +
mov [ebp+arg_0] ebx +
call sub_1003701  +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_100B396  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_100EAF4  +
lea eax [esi+20Ch] +
push eax  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi+414h]  +
call sub_100EBBF  +
cmp eax ebx +
mov [ebp+var_4] eax +
jl loc_106363C  +
mov edx [esi+424h] +
mov eax [ebp+arg_0] +
mov ecx [eax] +
neg edx  +
sbb edx edx +
and edx 8 +
push edx  +
push 8  +
push eax  +
mov [ebp+var_1C] 1 +
call dword ptr [ecx+70h]  +
mov eax [esi+41Ch] +
cmp eax ebx +
jnz loc_1053D70  +
cmp [ebp+var_4] ebx +
jl loc_106363C  +
mov eax [esi+418h] +
cmp eax ebx +
jnz loc_1053EFE  +
cmp [ebp+var_4] ebx +
jl loc_106363C  +
cmp [esi+420h] ebx +
jnz loc_106361E  +
push [ebp+var_18]  +
mov eax [ebp+arg_0] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+var_4] eax +
jl loc_106363C  +
cmp [ebp+var_1C] ebx +
jz loc_100B420  +
lea ecx [edi+0A8h] +
cmp [ecx] ebx +
jz loc_1063630  +
push ebx  +
push [ebp+arg_0]  +
lea ecx [edi+0A8h] +
call sub_1006610  +
cmp eax ebx +
mov [ebp+var_4] eax +
jl loc_106363C  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+var_10] +
cmp eax ebx +
jnz loc_1053DA4  +
cmp [ebp+var_4] ebx +
jl loc_106363C  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov ecx eax +
mov eax 80000000h +
and ecx eax +
cmp ecx eax +
jnz loc_100B457  +
push [ebp+var_8]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_100A5CB  +
push [ebp+var_8]  +
mov eax [edi+94h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push dword ptr [edi+88h]  +
push dword ptr [esi]  +
call ds:PostMessageW  +
mov ecx edi +
call sub_100775D  +
test eax eax +
jz loc_100B49A  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 1  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
mov ecx edi +
call sub_1007782  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_18] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_10] +
push eax  +
call sub_1002BEE  +
mov ecx edi +
call sub_10075FE  +
mov ecx edi +
call sub_100B55A  +
cmp esi ebx +
jz loc_100B4E2  +
push 1  +
mov ecx esi +
call sub_100B5AC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+54h] 0FFFFFFFDh +
jnz loc_100B550  +
push edi  +
call ds:GetCurrentThread  +
mov edi eax +
push edi  +
call ds:GetThreadPriority  +
mov ecx [ebp+arg_0] +
cmp eax ecx +
jz loc_100B54F  +
cmp [ebp+arg_4] 0 +
mov [esi+54h] eax +
mov [esi+58h] ecx +
jz loc_100B545  +
movzx ecx word ptr [ebp+arg_4] +
movzx eax ax +
shl eax 10h +
or eax ecx +
push eax  +
call ds:GetCurrentThreadId  +
push eax  +
push 41Ah  +
call ds:GetShellWindow  +
push eax  +
call ds:SendMessageW  +
push dword ptr [esi+58h]  +
push edi  +
call ds:SetThreadPriority  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push 0FFFFFFFDh  +
mov esi ecx +
pop ebx  +
cmp [esi+54h] ebx +
jz loc_100B5A4  +
push edi  +
call ds:GetCurrentThread  +
mov edi eax +
push edi  +
call ds:GetThreadPriority  +
cmp eax [esi+58h] +
jnz loc_100B59D  +
push dword ptr [esi+54h]  +
push edi  +
call ds:SetThreadPriority  +
push 0  +
push 0  +
push 41Ah  +
call ds:GetShellWindow  +
push eax  +
call ds:SendMessageW  +
mov [esi+54h] ebx +
mov [esi+58h] ebx +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+414h]  +
call ds:__imp_SHELL32_155  +
test [ebp+arg_0] 1 +
jz loc_100B5CD  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp [ebp+arg_10] esi +
jz loc_100B5E4  +
push dword ptr [edi+0A4h]  +
push [ebp+arg_10]  +
call ebx  +
cmp [ebp+arg_C] esi +
jz loc_10037D8  +
cmp [ebp+arg_14] esi +
jz loc_100B5FA  +
push [ebp+arg_C]  +
push [ebp+arg_14]  +
call ebx  +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10037D8  +
mov [ebp+var_C] esi +
jmp loc_100373C  +
***
push 1  +
push 0FFFFFFFFh  +
push dword ptr [ebp+14h]  +
push 0FFFFFFFFh  +
push dword ptr [esi+28h]  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_100366D  +
xor ebx ebx +
cmp [ebp+10h] ebx +
jz loc_1036433  +
cmp [esi+18h] ebx +
jz loc_1036433  +
push eax  +
pop edi  +
jmp loc_100366D  +
***
test ebx ebx +
jz loc_10061DB  +
call ds:GetForegroundWindow  +
mov esi eax +
test esi esi +
jz loc_10061DB  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
cmp eax esi +
jnz loc_10061DB  +
push ebx  +
push [ebp+arg_0]  +
add edi 14h +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
jmp loc_10061DB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push 1  +
push dword ptr [ebp+10h]  +
add ecx 0FFFFFFECh +
push dword ptr [ebp+0Ch]  +
call sub_1006102  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_100B6C0  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B24CC 0 +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
jz loc_100B716  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10467A1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_1046768  +
mov esi [ebp+8] +
mov [esi+4] ebx +
call ds:GetTickCount  +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov dword ptr [esi+1Ch] 0FFFFFFFEh +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 88h  +
mov edi 8007000Eh +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_100B791  +
mov ecx eax +
call sub_100B79A  +
mov esi eax +
test esi esi +
jz loc_100B789  +
push [ebp+arg_0]  +
lea eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_100B783  +
push [ebp+arg_8]  +
mov eax [esi] +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor esi esi +
jmp loc_100B760  +
***
mov eax ecx +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] offset off_1002960 +
mov dword ptr [eax+8] offset off_1002650 +
mov dword ptr [eax+28h] 0FF000000h +
retn   +
***
mov eax [esi+18h] +
test eax eax +
jz loc_1003664  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:__imp_SHELL32_21  +
test eax eax +
jz loc_1003664  +
push 3  +
pop edi  +
xor ebx ebx +
jmp loc_100366D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+hWnd]  +
mov esi ecx +
call sub_1006351  +
test eax eax +
jz loc_102ABC2  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_100B0DF  +
test eax eax +
jl loc_102ABC2  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_100B82A  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push [ebp+hWnd]  +
mov [ebp+var_8] ecx +
xor esi esi +
xor ebx ebx +
call sub_1006BBB  +
test eax eax +
jnz loc_100B8AB  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_10066D0  +
push [ebp+hWnd]  +
mov [ebp+var_4] esi +
call ds:__imp_SHGetPropertyStoreForWindow  +
mov ebx eax +
cmp ebx esi +
jl loc_100B89E  +
push edi  +
xor eax eax +
lea edi [ebp+pvar] +
stos   +
stos   +
stos   +
lea edx [ebp+pvar] +
push edx  +
stos   +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_100B8B4  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
cmp ebx esi +
jl loc_100B893  +
mov eax 1013h +
cmp [ebp+pvar.vt] ax +
jz loc_10637D6  +
lea eax [ebp+pvar] +
push eax  +
call ds:__imp_PropVariantClear  +
pop edi  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100B8AB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
push [ebp+hWnd]  +
call sub_10037E7  +
test eax eax +
jnz loc_1003885  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_100B8EC  +
jmp loc_1003885  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset aItasklist_dele  +
push [ebp+hWnd]  +
mov esi ecx +
call ds:GetPropW  +
test eax eax +
jnz loc_100B910  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_100B7E4  +
pop esi  +
pop ebp  +
retn 4  +
***
mov [ecx] eax +
jmp loc_1006630  +
mov eax 8007000Eh +
jmp loc_100663B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+idChild] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+idChild] +
push eax  +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ebx ecx +
mov ecx [eax] +
lea esi [ebx+20h] +
mov edi [esi] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push esi  +
call dword ptr [edi+10h]  +
test eax eax +
jl loc_100B96E  +
inc [ebp+idChild]  +
push [ebp+idChild]  +
push 0FFFFFFFCh  +
push dword ptr [ebx+4]  +
push 8000h  +
call ds:NotifyWinEvent  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov ecx edi +
call sub_1006CED  +
jmp loc_10061B5  +
cmp [edi+0A8h] esi +
jz loc_1065BE5  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push [ebp+arg_4]  +
xor ecx ecx +
cmp eax 3 +
mov eax [esi] +
setnz cl  +
push esi  +
mov [ebp+var_4] ecx +
call dword ptr [eax+18h]  +
push [ebp+arg_4]  +
mov ecx edi +
push esi  +
call sub_100B92B  +
mov [ebp+var_8] 1 +
jmp loc_100615F  +
cmp dword_10B24CC 0 +
jz loc_10061CE  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_102AD64  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax 10000h +
and ecx ebx +
or eax ecx +
jz loc_10061CE  +
mov edx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax edx +
and eax 10000h +
and ecx ebx +
cmp eax edx +
jnz loc_10061CE  +
cmp ecx dword_10B24C4 +
jnz loc_10061CE  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ebx [ebp+arg_4] +
push ebx  +
mov [ebp+wParam] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
push eax  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+3Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [ebp+wParam] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
mov eax esi +
cdq   +
push edx  +
push eax  +
push dword ptr [edi+4]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
push eax  +
push offset dword_100BA78  +
push dword_10B247C  +
push dword_10B2478  +
call sub_104630D  +
jmp loc_10061D1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
mov esi [ebp+8] +
push edi  +
lea edi [esi+14h] +
cmp dword ptr [edi] 0 +
jnz loc_100BAAB  +
push 1  +
mov ecx edi +
call sub_100801C  +
or dword ptr [ebp-8] 0FFFFFFFFh +
push 1Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_10519BA  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-8] +
push ecx  +
mov ecx eax +
call sub_100BC1D  +
test eax eax +
jz loc_100BC0F  +
add eax 8 +
push ebx  +
mov [ebp-4] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
mov ebx eax +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp-4]  +
mov ecx edi +
call sub_1006610  +
test eax eax +
jl loc_100BBFD  +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
cmp ebx 2 +
jz loc_1036493  +
cmp ebx 4 +
jz loc_1036493  +
test ebx ebx +
jnz loc_103373E  +
mov ecx [esi+8] +
mov dword ptr [ebp+8] 0Dh +
call sub_1004226  +
test al 2 +
jz loc_100BBEB  +
mov eax [esi+8] +
mov edi 90h +
add eax edi +
lea ecx [esi-8] +
neg ecx  +
sbb ecx ecx +
and ecx esi +
push ecx  +
push dword ptr [eax]  +
mov dword ptr [ebp+8] 0Eh +
call ds:off_100407C  +
dec eax  +
js loc_100BBEB  +
mov ecx [esi+8] +
add ecx edi +
push eax  +
push dword ptr [ecx]  +
call ds:off_1002B68  +
mov edi eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
test eax eax +
jz loc_100BBEB  +
mov eax [edi] +
push edi  +
call dword ptr [eax+98h]  +
mov ecx [edi] +
lea edx [ebp-30h] +
push edx  +
push eax  +
push edi  +
mov [ebp-10h] eax +
call dword ptr [ecx+34h]  +
mov eax [esi+8] +
push 0  +
push 0  +
add eax 14h +
mov ecx [eax] +
push 0Bh  +
push eax  +
call dword ptr [ecx+38h]  +
mov ebx ds:SendMessageW +
push eax  +
call ebx  +
mov ecx [esi+8] +
mov [ebp-0Ch] eax +
call sub_1006CED  +
mov eax [esi+8] +
push 0  +
push dword ptr [ebp-0Ch]  +
add eax 14h +
mov ecx [eax] +
push 0Bh  +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ebx  +
mov eax [edi] +
lea ecx [ebp-20h] +
push ecx  +
push dword ptr [ebp-10h]  +
push edi  +
call dword ptr [eax+34h]  +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-30h] +
push eax  +
call ds:EqualRect  +
test eax eax +
jz loc_10519AE  +
push dword ptr [ebp+8]  +
mov eax [esi+8] +
push dword ptr [ebp-4]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov edi [ebp+0Ch] +
mov eax [edi] +
push edi  +
call dword ptr [eax+64h]  +
pop ebx  +
test eax eax +
jnz loc_10677A7  +
mov eax [ebp-8] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
mov ecx [ebp+arg_0] +
xor eax eax +
inc eax  +
mov [esi+4] eax +
mov [esi+18h] eax +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi] offset off_1002990 +
mov dword ptr [esi+8] offset off_10027FC +
mov dword ptr [esi+0Ch] offset off_1006524 +
mov [esi+10h] ecx +
call ds:__imp_IUnknown_Set  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi [ebp+0Ch] +
mov eax [esi+10h] +
push edi  +
xor ecx ecx +
push 0FFFFFFFEh  +
pop edi  +
mov [ebp-218h] ecx +
cmp eax ecx +
jz loc_1052FB0  +
lea edx [ebp-214h] +
push edx  +
lea edx [ebp-210h] +
push edx  +
push offset dword_100671C  +
push eax  +
push ecx  +
call ds:__imp_SHBindToFolderIDListParent  +
test eax eax +
jl loc_100BD0C  +
mov eax [ebx+74h] +
push 0  +
test eax eax +
jz loc_106329B  +
lea ecx [ebp-21Ch] +
push ecx  +
push dword ptr [esi+18h]  +
push dword ptr [ebx+4]  +
push offset sub_10531FA  +
push dword ptr [ebp-214h]  +
push dword ptr [ebp-210h]  +
push eax  +
call SHELL32_787  +
mov [ebp-218h] eax +
test eax eax +
jl loc_1053334  +
movzx edi word ptr [ebp-21Ch] +
or edi 10000h +
mov eax [ebp-210h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
cmp [ebx+44h] eax +
jnz loc_102AB46  +
cmp edi 0FFFFFFFEh +
jz loc_100BD7A  +
cmp [ebx+74h] eax +
jz loc_100BD7A  +
cmp dword ptr [ebp-218h] 8000000Ah +
jz loc_100BD7A  +
lea ecx [ebp-210h] +
push ecx  +
mov [ebp-210h] eax +
mov eax [ebx+64h] +
push offset dword_100670C  +
push eax  +
call ds:off_1003E90  +
test eax eax +
jl loc_100BD6A  +
mov ecx [ebp-210h] +
mov edx [ecx] +
movzx eax di +
push 1  +
push eax  +
push ecx  +
call dword ptr [edx+94h]  +
test eax eax +
jl loc_105336A  +
mov eax [ebp-210h] +
test eax eax +
jz loc_100BD7A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
cmp dword ptr [esi] 54h +
push edi  +
mov [ebp+var_10] 1 +
jnz loc_1036402  +
mov eax [esi+38h] +
test eax 0FFFFFFFCh +
jnz loc_1036402  +
test al 3 +
jz loc_1036402  +
and [ebp+var_C] 0 +
and [ebp+var_8] 0 +
lea eax [esi+4] +
push eax  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_100C1E8  +
mov eax [esi+38h] +
xor ecx ecx +
test al 1 +
jnz loc_103F0C0  +
test al 2 +
jz loc_100BE08  +
cmp [esi+48h] ecx +
jle loc_100BE08  +
cmp [esi+4Ch] ecx +
jle loc_100BE08  +
cmp byte ptr [esi+50h] 0 +
jbe loc_100BE08  +
mov [ebp+var_8] 1 +
cmp [ebp+var_C] ecx +
jnz loc_100BE18  +
cmp [ebp+var_8] ecx +
jz loc_100C1E8  +
xor ecx ecx +
xor ebx ebx +
mov [ebp+arg_4] ecx +
cmp [ebp+var_C] ecx +
jnz loc_103F30C  +
cmp [ebp+var_8] ecx +
jz loc_100BE3F  +
mov eax [esi+48h] +
cmp [ebp+arg_4] eax +
jg loc_100BE36  +
mov [ebp+arg_4] eax +
mov eax [esi+4Ch] +
cmp ebx eax +
jg loc_100BE3F  +
mov ebx eax +
mov edi [esi+24h] +
mov eax [esi+28h] +
push [ebp+arg_0]  +
mov [ebp+var_48] edi +
mov [ebp+var_44] eax +
call ds:GetLayout  +
test al 1 +
jnz loc_1064264  +
mov eax [ebp+var_44] +
mov [ebp+rcSrc2.left] edi +
mov [ebp+rcSrc2.top] eax +
inc edi  +
inc eax  +
push ebx  +
push [ebp+arg_4]  +
mov [ebp+rcSrc2.bottom] eax +
lea eax [ebp+rcSrc2] +
push eax  +
mov [ebp+rcSrc2.right] edi +
call ds:InflateRect  +
lea eax [esi+4] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
call ds:CopyRect  +
lea eax [ebp+rcSrc2] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
push eax  +
call ds:IntersectRect  +
test eax eax +
jz loc_100C1E8  +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_103F31A  +
xor edi edi +
mov [ebp+var_20] edi +
add edi 64h +
xor ecx ecx +
push 4  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_100664F  +
pop ecx  +
mov [ebp+var_28] eax +
cmp eax ebx +
jz loc_10363F6  +
cmp edi ebx +
mov [ebp+var_10] ebx +
jle loc_100BFD2  +
lea edi [eax+1] +
mov eax [ebp+var_10] +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
cmp edx 32h +
mov [ebp+var_1C] edx +
fild  [ebp+var_1C] +
fmul  ds:dbl_100C1A8 +
fdiv  ds:dbl_100C1F8 +
fstp  [ebp+arg_4] +
fld  [ebp+arg_4] +
jg loc_100C25A  +
call _CIcos  +
fstp  [ebp+arg_4] +
fld  [ebp+arg_4] +
fmul  ds:dbl_100C1A0 +
call _ftol2  +
mov cl 40h +
sub cl al +
mov byte ptr [ebp+arg_4+3] cl +
cmp [ebp+var_C] ebx +
jnz loc_103F334  +
cmp [ebp+var_8] ebx +
jz loc_100BF55  +
mov al [esi+50h] +
cmp al 0FFh +
jnb loc_100BF55  +
movzx ecx byte ptr [ebp+arg_4+3] +
movzx eax al +
imul eax ecx +
xor edx edx +
mov ecx 0FFh +
div  ecx +
mov byte ptr [ebp+arg_4+3] al +
cmp byte ptr [ebp+arg_4+3] 0 +
jbe loc_100BFBD  +
mov al [esi+2Dh] +
mov bl [esi+2Ch] +
mov [ebp+var_1] al +
mov al [esi+2Eh] +
mov [ebp+var_2] al +
mov eax [ebp+var_1C] +
cmp eax [esi+34h] +
jl loc_100C210  +
mov cl byte ptr [ebp+arg_4+3] +
cmp cl 0FFh +
jz loc_10363E6  +
movzx edx cl +
movzx eax bl +
imul eax edx +
xor edx edx +
mov ebx 0FFh +
div  ebx +
movzx edx cl +
mov [edi+1] al +
movzx eax [ebp+var_1] +
imul eax edx +
xor edx edx +
div  ebx +
movzx edx cl +
mov [edi] al +
movzx eax [ebp+var_2] +
imul eax edx +
xor edx edx +
div  ebx +
mov [edi-1] al +
mov [edi+2] cl +
xor ebx ebx +
mov eax [ebp+var_20] +
add edi 4 +
inc [ebp+var_10]  +
add eax 64h +
cmp [ebp+var_10] eax +
jl loc_100BEE3  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
mov byte ptr [ebp+var_14] al +
lea edi [ebp+var_78] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_14] +
mov [ebp+var_6C] eax +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_78] +
push eax  +
push 2  +
lea eax [ebp+rcSrc1] +
push eax  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_14+3] 1 +
mov byte ptr [ebp+var_14+2] 0FFh +
mov [ebp+var_78] 10h +
mov [ebp+var_74] 1 +
call ds:BeginBufferedPaint  +
mov [ebp+var_3C] eax +
cmp eax ebx +
jz loc_1064293  +
lea ecx [ebp+var_30] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
call ds:GetBufferedPaintBits  +
cmp eax ebx +
mov [ebp+var_10] eax +
jl loc_100C1D4  +
push [ebp+arg_0]  +
call ds:GetLayout  +
mov ebx [ebp+rcSrc1.right] +
mov edx [ebp+rcSrc1.left] +
test al 1 +
jnz loc_106427E  +
mov edi [ebp+arg_4] +
mov ecx [ebp+rcSrc1.bottom] +
mov eax [ebp+rcSrc1.top] +
cmp eax ecx +
mov [ebp+var_38] ecx +
mov [ebp+var_34] edx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] eax +
jge loc_100C1D0  +
mov [ebp+var_24] edx +
sub [ebp+var_24] ebx +
sub eax [ebp+var_44] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_34] +
mov [ebp+arg_0] eax +
cmp eax [ebp+var_18] +
jge loc_100C1B0  +
cmp [ebp+var_8] 0 +
jz loc_100C0B4  +
cmp dword ptr [esi+14h] 1 +
jle loc_100C0A1  +
mov eax [ebp+arg_0] +
cmp eax [esi+4] +
jz loc_100C3A7  +
cmp dword ptr [esi+18h] 1 +
jle loc_100C0B4  +
mov eax [esi+0Ch] +
dec eax  +
cmp [ebp+arg_0] eax +
jz loc_100C3A7  +
cmp [ebp+var_C] 0 +
jz loc_100C142  +
mov ecx [esi+3Ch] +
mov ebx [esi+40h] +
cmp ecx ebx +
jle loc_100C0CA  +
mov ebx ecx +
mov eax [ebp+arg_0] +
sub eax [ebp+var_48] +
cdq   +
xor eax edx +
sub eax edx +
imul eax ebx +
cdq   +
idiv  ecx +
mov [ebp+var_2C] eax +
mov eax [ebp+var_1C] +
cdq   +
xor eax edx +
sub eax edx +
imul eax ebx +
cdq   +
idiv  dword ptr [esi+40h] +
mov ecx [ebp+var_2C] +
imul ecx ecx +
imul eax eax +
add eax ecx +
mov ecx ebx +
imul ecx ebx +
cmp eax ecx +
mov [ebp+var_2C] eax +
jg loc_100C142  +
fild  [ebp+var_2C] +
call _CIsqrt  +
call _ftol2_sse  +
imul eax eax +
cdq   +
idiv  ebx +
cmp eax 64h +
jge loc_100C142  +
mov ecx [ebp+var_28] +
mov edx [edi] +
lea eax [ecx+eax*4] +
or cl 0FFh +
sub cl [eax+3] +
mov eax [eax] +
mov [edi] eax +
jz loc_100C13F  +
movzx eax cl +
push eax  +
push edx  +
call sub_100C350  +
mov ecx [ebp+arg_4] +
add [ecx] eax +
mov edi [ebp+arg_4] +
mov eax [esi+4] +
add eax [esi+14h] +
cmp [ebp+arg_0] eax +
jl loc_100C2A6  +
mov eax [esi+0Ch] +
sub eax [esi+18h] +
cmp [ebp+arg_0] eax +
jge loc_100C2A6  +
mov ecx [esi+1Ch] +
add ecx [esi+8] +
cmp [ebp+var_10] ecx +
jl loc_100C2A6  +
mov ecx [esi+10h] +
sub ecx [esi+20h] +
cmp [ebp+var_10] ecx +
jge loc_100C2A6  +
cmp [ebp+var_C] 0 +
jz loc_100C7DE  +
add edi 4 +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
mov [ebp+arg_4] edi +
jmp loc_100C080  +
mov eax [ebp+var_30] +
mov ecx [ebp+var_24] +
add eax ecx +
inc [ebp+var_10]  +
inc [ebp+var_1C]  +
lea edi [edi+eax*4] +
mov eax [ebp+var_10] +
cmp eax [ebp+var_38] +
mov [ebp+arg_4] edi +
jl loc_100C07A  +
and [ebp+var_10] 0 +
push 1  +
push [ebp+var_3C]  +
call ds:EndBufferedPaint  +
push [ebp+var_28]  +
call sub_100C205  +
pop ecx  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1002BCA  +
***
mov ecx [esi+34h] +
mov eax ecx +
sub eax [ebp+var_1C] +
movzx edx bl +
mov [ebp+var_1C] eax +
movzx eax byte ptr [esi+30h] +
sub eax edx +
imul eax [ebp+var_1C] +
cdq   +
idiv  ecx +
movzx edx [ebp+var_1] +
add bl al +
movzx eax byte ptr [esi+31h] +
sub eax edx +
imul eax [ebp+var_1C] +
cdq   +
idiv  ecx +
movzx edx [ebp+var_2] +
add [ebp+var_1] al +
movzx eax byte ptr [esi+32h] +
sub eax edx +
imul eax [ebp+var_1C] +
cdq   +
idiv  ecx +
add [ebp+var_2] al +
jmp loc_100BF76  +
call _CIcos  +
fstp  [ebp+arg_4] +
fld  [ebp+arg_4] +
fadd  ds:dbl_100C280 +
fmul  ds:dbl_100C288 +
call _ftol2  +
mov byte ptr [ebp+arg_4+3] al +
jmp loc_100BF2A  +
***
cmp [ebp+var_8] 0 +
jz loc_100C188  +
mov ecx [esi+48h] +
mov ebx [esi+4Ch] +
cmp ecx ebx +
jg loc_103F34E  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_48] +
cdq   +
xor eax edx +
sub eax edx +
imul eax ebx +
cdq   +
idiv  ecx +
mov [ebp+var_2C] eax +
mov eax [ebp+var_1C] +
cdq   +
xor eax edx +
sub eax edx +
imul eax ebx +
cdq   +
idiv  dword ptr [esi+4Ch] +
mov ecx [ebp+var_2C] +
imul ecx ecx +
imul eax eax +
add eax ecx +
mov ecx ebx +
imul ecx ebx +
cmp eax ecx +
mov [ebp+var_2C] eax +
jg loc_100C188  +
fild  [ebp+var_2C] +
call _CIsqrt  +
call _ftol2_sse  +
imul eax eax +
cdq   +
idiv  ebx +
cmp eax 64h +
jge loc_100C188  +
mov ecx [ebp+var_20] +
mov edx [edi] +
add eax ecx +
mov ecx [ebp+var_28] +
lea eax [ecx+eax*4] +
or cl 0FFh +
sub cl [eax+3] +
mov eax [eax] +
mov [edi] eax +
jz loc_100C340  +
movzx eax cl +
push eax  +
push edx  +
call sub_100C350  +
mov ecx [ebp+arg_4] +
add [ecx] eax +
mov edi [ebp+arg_4] +
jmp loc_100C188  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx eax +
shr eax 8 +
mov ecx 0FF00FFh +
and edx ecx +
imul edx [ebp+arg_4] +
and eax ecx +
imul eax [ebp+arg_4] +
push esi  +
mov esi 800080h +
add edx esi +
add eax esi +
mov esi eax +
mov eax edx +
shr eax 8 +
and eax ecx +
add eax edx +
mov edx esi +
shr edx 8 +
and edx 0FFFF00FFh +
add edx esi +
shr eax 8 +
xor eax edx +
mov edx esi +
shr edx 8 +
and edx ecx +
add edx esi +
and eax ecx +
xor eax edx +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword ptr [esi+1Ch] 1 +
jle loc_100C3B9  +
mov eax [ebp+var_10] +
cmp eax [esi+8] +
jz loc_100C188  +
cmp dword ptr [esi+20h] 1 +
jle loc_100C0B4  +
mov eax [esi+10h] +
dec eax  +
cmp [ebp+var_10] eax +
jnz loc_100C0B4  +
jmp loc_100C188  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 5 +
jz loc_100C6BF  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor eax eax +
push esi  +
mov esi [ebp+8] +
mov ecx [esi+8] +
push edi  +
lea edi [ebp-8] +
stos   +
stos   +
lea eax [esi-8] +
neg eax  +
sbb eax eax +
and eax esi +
cmp [ecx+164h] eax +
jz loc_10667C4  +
mov ebx [ebp-4] +
xor edi edi +
mov eax [esi+10h] +
test eax eax +
jz loc_100C472  +
mov eax [eax] +
cmp edi eax +
jge loc_100C46B  +
push edi  +
push dword ptr [esi+10h]  +
call ds:off_1003D88  +
push eax  +
lea eax [ebp-18h] +
push eax  +
call ds:CopyRect  +
push ebx  +
push dword ptr [ebp-8]  +
lea eax [ebp-18h] +
push eax  +
call ds:OffsetRect  +
push 0  +
lea eax [ebp-18h] +
push eax  +
mov eax [esi+8] +
push dword ptr [eax+4]  +
call ds:InvalidateRect  +
inc edi  +
jmp loc_100C426  +
***
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
xor eax eax +
jmp loc_100C42F  +
***
push 1  +
jmp loc_100C575  +
mov eax [edi] +
lea ecx [ebp-8] +
push ecx  +
push edi  +
call dword ptr [eax+48h]  +
test eax eax +
jl loc_100C567  +
mov edi dword_10B2AF8 +
fld  qword ptr [ebp-8] +
fmul  ds:dbl_100C520 +
mov eax edi +
mov [ebp+0Ch] eax +
fild  dword ptr [ebp+0Ch] +
test eax eax +
jge loc_100C4B0  +
fadd  ds:dbl_1069928 +
fdivp st(1) st +
call _ftol2_sse  +
mov ecx eax +
xor edx edx +
mov eax 196FB8h +
div  edi +
cmp ecx eax +
jl loc_100C567  +
lea eax [edi-3E8h] +
imul eax eax +
xor edx edx +
div  edi +
cmp ecx eax +
jge loc_100C567  +
lea eax [esi-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_100C589  +
mov eax [esi+4] +
push 0  +
push 0  +
push dword ptr [eax+4]  +
call ds:InvalidateRect  +
jmp loc_100C573  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+4] +
push edi  +
mov edi [ebp+0Ch] +
lea edx [ebp+8] +
push edx  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_100C581  +
mov eax [ebp+8] +
cmp eax 0Ch +
ja loc_100C581  +
movzx eax ds:byte_100C512[eax] +
jmp ds:off_100C502[eax*4]  +
lea eax [esi-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+84h]  +
push 2  +
mov esi [esi+4] +
lea eax [esi+1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
cmp eax 2 +
jnz loc_100C567  +
jmp loc_100C581  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov eax [esi] +
lea ecx [ebp+0Ch] +
push ecx  +
push dword ptr [ebp+10h]  +
push esi  +
call dword ptr [eax+48h]  +
mov ebx eax +
test ebx ebx +
jl loc_100C5D7  +
push edi  +
mov edi [ebp+8] +
cmp ebx 1 +
jz loc_1033D4F  +
test ebx ebx +
jnz loc_100C5D6  +
mov eax [ebp+0Ch] +
cmp eax offset __ImageBase +
jz loc_1033B8D  +
mov ecx [ebp+14h] +
mov [ecx] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
xor eax eax +
inc eax  +
test ecx ecx +
jnz loc_10541AF  +
mov ecx [ebp+8] +
mov ecx [ecx+24h] +
cmp ecx 0FF000000h +
jz loc_10340E9  +
mov eax [ebp+10h] +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 8 +
jmp loc_100C625  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_100C644  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
imul eax ecx +
cdq   +
idiv  ebx +
xor edx edx +
mov [esi+7Ch] eax +
mov eax edi +
div  dword_10B2B1C +
mov ecx eax +
mov eax [ebp+arg_0] +
imul eax eax +
cdq   +
idiv  ecx +
jmp loc_100C7D3  +
***
push 0  +
push [ebp+arg_4]  +
lea eax [edi+1Ch] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
jmp loc_1007A91  +
***
mov eax [esi+8] +
add eax 1Ch +
lea edx [esi-8] +
neg edx  +
sbb edx edx +
push 5  +
and edx esi +
push edx  +
jmp loc_100BBF7  +
***
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+10h]  +
mov eax [esi+4] +
or dword ptr [ebp+10h] 0FFFFFFFFh +
lea edx [ebp+10h] +
push edx  +
push dword ptr [ebp+0Ch]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_100C710  +
mov eax [ebp+10h] +
dec eax  +
jz loc_1066B4D  +
dec eax  +
jz loc_1066B22  +
dec eax  +
jz loc_1066AF3  +
sub eax 6 +
jz loc_1066ADC  +
dec eax  +
jz loc_10447CC  +
***
cmp dword_10B24CC 0 +
jz loc_100C747  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10447D8  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_10467C0  +
pop edi  +
pop esi  +
jmp loc_100C3E9  +
***
mov edi [edi+10h] +
lea eax [edi+14h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edx dword_10B2B14 +
mov edi dword_10B2B18 +
mov ecx eax +
mov eax [ebp+var_8] +
imul ecx ecx +
sub eax edx +
imul eax eax +
sub edi edx +
cdq   +
idiv  edi +
mov edi 493E0h +
xor edx edx +
mov [ebp+arg_0] eax +
mov eax edi +
div  dword_10B2B1C +
mov ebx eax +
mov eax [ebp+arg_0] +
cmp eax ebx +
jl loc_100C66C  +
sub eax ebx +
imul eax ecx +
mov edx 3E8h +
sub edx ebx +
mov ebx edx +
cdq   +
idiv  ebx +
xor edx edx +
sub ecx eax +
mov eax edi +
mov [esi+7Ch] ecx +
div  dword_10B2B1C +
mov edi 3E8h +
mov ecx eax +
sub eax [ebp+arg_0] +
sub edi ecx +
imul eax eax +
cdq   +
idiv  edi +
dec al  +
mov [esi+80h] al +
jmp loc_1005925  +
***
cmp eax [ebp+var_18] +
jge loc_100C99D  +
mov ecx [ebp+arg_0] +
sub eax ecx +
lea ecx [ecx+eax-1] +
mov [ebp+arg_0] ecx +
lea edi [edi+eax*4] +
jmp loc_100C18B  +
***
cmp byte ptr [esi+80h] 0 +
jbe loc_1004F1F  +
push esi  +
push [ebp+hDC]  +
mov ecx ebx +
call sub_100C820  +
jmp loc_1004F1F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
push ebx  +
xor eax eax +
push esi  +
mov esi [ebp+arg_4] +
inc eax  +
push edi  +
mov edi ecx +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
cmp [esi+8] eax +
jnz loc_100C857  +
mov eax [esi+0Ch] +
xor ecx ecx +
cmp eax [esi+24h] +
setz cl  +
mov [ebp+var_4] ecx +
xor ecx ecx +
cmp eax [esi+28h] +
setz cl  +
mov [ebp+var_8] ecx +
mov ebx ds:CopyRect +
lea eax [esi+10h] +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call ebx  +
xor eax eax +
cmp [ebp+var_4] eax +
jz loc_100C879  +
cmp [esi] eax +
jz loc_100C985  +
inc [ebp+rcSrc.left]  +
cmp [ebp+var_8] eax +
jz loc_100C889  +
cmp [esi] eax +
jz loc_100C98D  +
dec [ebp+rcSrc.right]  +
cmp [esi] eax +
jz loc_100C995  +
push 0FFFFFFFFh  +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:InflateRect  +
push 54h  +
lea eax [ebp+var_6C] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
mov [ebp+var_6C] 54h +
call ebx  +
mov eax [edi+10h] +
push 2  +
pop ebx  +
add eax 14h +
push 0  +
mov [ebp+var_58] ebx +
mov [ebp+var_54] ebx +
mov [ebp+var_50] ebx +
mov [ebp+var_4C] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
cdq   +
and edx 7 +
add eax edx +
mov edx [esi+10h] +
mov ecx eax +
mov eax [esi+18h] +
sub eax edx +
mov [ebp+arg_4] edx +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+arg_4] +
sar ecx 3 +
mov [ebp+var_48] eax +
mov eax [esi+1Ch] +
sub eax ecx +
mov [ebp+var_44] eax +
mov eax [edi+10h] +
mov eax [eax+38h] +
mov eax [eax] +
mov [ebp+arg_4] eax +
lea eax [ebp+var_40] +
push eax  +
push dword ptr [esi+0Ch]  +
mov ecx edi +
call sub_10059F8  +
push eax  +
push dword ptr [edi+14h]  +
mov eax [edi+10h] +
push dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
call dword ptr [eax+18h]  +
test eax eax +
jl loc_1066DFC  +
mov ecx [esi+74h] +
mov [ebp+var_3C] 0FFFFFFh +
mov [ebp+var_38] 1Eh +
test ecx ecx +
jg loc_1066E08  +
mov ecx [esi+7Ch] +
test ecx ecx +
jle loc_100C96C  +
mov al [esi+80h] +
test al al +
jbe loc_100C96C  +
or [ebp+var_34] ebx +
mov [ebp+var_20] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] al +
cmp [ebp+var_34] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz locret_100C981  +
lea eax [ebp+var_6C] +
push eax  +
push [ebp+arg_0]  +
call sub_100BD92  +
leave   +
retn 8  +
inc [ebp+rcSrc.top]  +
jmp loc_100C879  +
dec [ebp+rcSrc.bottom]  +
jmp loc_100C889  +
push eax  +
push 0FFFFFFFFh  +
jmp loc_100C894  +
***
mov eax [ebp+var_18] +
jmp loc_100C7E7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi [esi+0B4h] +
jz loc_100D021  +
cmp edi [esi+0A8h] +
jz loc_1065574  +
cmp [ebp+arg_8] 0 +
jz loc_100C9E4  +
cmp edi [esi+184h] +
jz loc_1065588  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
and dword ptr [esi+38h] 0 +
jmp loc_1009189  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+idChild] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+idChild] +
push eax  +
push [ebp+arg_4]  +
mov eax [esi] +
lea edi [ecx+20h] +
mov ebx [edi] +
push esi  +
mov [ebp+var_8] ecx +
call dword ptr [eax+14h]  +
push eax  +
push edi  +
call dword ptr [ebx+10h]  +
test eax eax +
jl loc_100CA41  +
inc [ebp+idChild]  +
push [ebp+idChild]  +
mov eax [ebp+var_8] +
push 0FFFFFFFCh  +
push dword ptr [eax+4]  +
push 8001h  +
call ds:NotifyWinEvent  +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100D60C  +
cmp dword_10B24CC eax +
jz loc_100CA83  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1046891  +
mov edx dword_10B24B8 +
mov edi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and edi eax +
or edx edi +
jnz loc_104680A  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+2Ch] 0 +
mov ebx [esi+4] +
push edi  +
jnz loc_105374C  +
push ebx  +
call sub_1006BBB  +
mov edi eax +
test edi edi +
jnz loc_105375A  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100CAEB  +
test byte ptr [ebp+8] 1 +
jz loc_100CADF  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+48h] +
push edi  +
mov dword ptr [esi] offset off_1002960 +
mov dword ptr [esi+8] offset off_1002650 +
test eax eax +
jnz loc_1064142  +
mov eax [esi+68h] +
test eax eax +
jnz loc_106414E  +
push dword ptr [esi+40h]  +
call ds:LocalFree  +
push dword ptr [esi+74h]  +
mov edi ds:__imp_CoTaskMemFree +
call edi  +
push dword ptr [esi+70h]  +
call edi  +
cmp dword_10B24CC 0 +
jz loc_100CB60  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_100CB69  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_106415A  +
pop edi  +
mov dword ptr [esi] offset off_1002788 +
pop esi  +
retn   +
test al al +
jz loc_100CB3F  +
jmp loc_100CB60  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
and [ebp+var_4] 0 +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jl loc_100CBA1  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100CBAE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100CBAE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
lea ecx [esi-28h] +
call sub_1006CED  +
and dword ptr [esi+0FCh] 0FFFFFFFEh +
jmp loc_1006A3A  +
***
push 1  +
jmp loc_1007DCD  +
***
xor ecx ecx +
jmp loc_1007DA0  +
***
push dword ptr [ebp+8]  +
lea ecx [esi-1Ch] +
call sub_100CB74  +
test eax eax +
jl loc_100CBE8  +
xor ebx ebx +
mov eax [ebp+8] +
test eax eax +
jz loc_1006830  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1006830  +
***
lea eax [esi-0Ch] +
neg eax  +
lea ecx [esi-4] +
sbb eax eax +
and eax ecx +
mov ecx [esi+4] +
push 1  +
push eax  +
call sub_100D1B5  +
jmp loc_1007EB7  +
***
mov dword ptr [esi+18h] 2 +
jmp loc_1006CC7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-14h] +
call sub_1005D55  +
mov ebx [ebp+10h] +
mov edi eax +
test edi edi +
jz loc_100CCED  +
cmp [esi+0D0h] edi +
jz loc_1065E64  +
test ebx ebx +
jz loc_100CC7D  +
mov eax [esi+138h] +
test eax eax +
jnz loc_1065E88  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A8h]  +
cmp eax 1 +
jg loc_100CC95  +
cmp [esi+0CCh] edi +
jz loc_1065EBF  +
cmp [esi+150h] edi +
jz loc_1065EE2  +
test ebx ebx +
jz loc_1065EF5  +
lea eax [esi+4] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jz loc_1053799  +
push ebx  +
push edi  +
lea ecx [esi-14h] +
call sub_100C9F9  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+1Ch]  +
mov [ebp+0Ch] eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
cmp eax [esi+3Ch] +
jz loc_1065F35  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+20h]  +
xor ecx ecx +
test eax eax +
setz cl  +
push ecx  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-14h] +
push edi  +
call sub_100C9AA  +
test ebx ebx +
jz loc_100CD03  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+54h]  +
cmp eax [esi+0BCh] +
jz loc_1065F49  +
cmp [esi+0D0h] edi +
jz loc_1065F5B  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax [ebp+var_8] +
cmp eax [esi+0A4h] +
mov eax [esi+0A4h] +
mov ecx [eax] +
jz loc_1063031  +
push edi  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx edi +
jnz loc_1008F9C  +
jmp loc_1008FF2  +
xor eax eax +
jmp loc_1008FBC  +
***
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov ecx eax +
mov eax 80000000h +
and ecx eax +
cmp ecx eax +
jz loc_100CD94  +
mov ecx esi +
call sub_100775D  +
test eax eax +
jz loc_100CD94  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
mov ecx esi +
call sub_1007782  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push offset loc_1053805  +
push 0  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+8Ch]  +
push [ebp+arg_0]  +
mov eax [esi+94h] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
test eax eax +
jnz loc_10536F0  +
mov eax [ebp+var_4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_100CDF2  +
push [ebp+var_4]  +
mov ecx esi +
call sub_1007701  +
mov ecx esi +
call sub_10075FE  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_100907E  +
***
lea edx [ebp+var_18] +
push edx  +
push [ebp+arg_0]  +
lea edi [esi+0A4h] +
mov eax [edi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_1052E73  +
mov edi [edi] +
push [ebp+var_18]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+0B8h] +
cmp eax [ebp+arg_0] +
jnz loc_100CEB3  +
push 0  +
mov ecx esi +
call sub_10091DD  +
cmp dword ptr [esi+0ACh] 0 +
jz loc_100CEAC  +
mov eax [ebp+nIndex] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_100CEAC  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_100CEAC  +
mov eax [ebp+nIndex] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
call ebx  +
cmp edi eax +
mov eax [ebp+nIndex] +
mov ecx [eax] +
push eax  +
ja loc_106344F  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
call ebx  +
sub eax edi +
push eax  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push 2  +
push offset dword_10092EC  +
call sub_1009311  +
and dword ptr [esi+0B8h] 0 +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1009057  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+nIndex] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor edi edi +
jmp loc_100912E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_1053819  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+74h]  +
test eax eax +
jg loc_1053819  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
and dword ptr [ebp-4] 0 +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_100D019  +
mov ecx [esi+14h] +
mov ecx [ecx+4] +
push edi  +
mov edi [ecx+eax*4] +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
push 10h  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_103394B  +
mov eax [esi] +
push ebx  +
push esi  +
or ebx 0FFFFFFFFh +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_100CF91  +
mov eax [esi+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jnz loc_103654F  +
mov ecx [esi+8] +
call sub_1004226  +
test al 2 +
jz loc_1066CB2  +
mov eax [esi+8] +
push 0  +
push 0Dh  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1066CB2  +
push 0Fh  +
pop ebx  +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
push 0  +
sbb edx edx +
push 4  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp ebx 0FFFFFFFFh +
jz loc_100CFC9  +
mov eax [esi+8] +
push ebx  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jnz loc_100CFC9  +
mov dword ptr [ebp-4] 1 +
mov eax [esi+8] +
push 7  +
lea edx [ebp-24h] +
push edx  +
add eax 1Ch +
push edi  +
mov dword ptr [ebp-24h] 13h +
mov dword ptr [ebp-20h] 14h +
mov dword ptr [ebp-1Ch] 15h +
mov dword ptr [ebp-18h] 16h +
mov dword ptr [ebp-14h] 17h +
mov dword ptr [ebp-10h] 19h +
mov dword ptr [ebp-0Ch] 18h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
cmp dword ptr [ebp-4] 0 +
pop ebx  +
jz loc_103394B  +
***
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 8  +
***
cmp ebx 0FFFFFFFFh +
jz loc_100D034  +
mov eax [esi+0B8h] +
cmp ebx eax +
jnz loc_10339BB  +
push 0FFFFFFFFh  +
push 0  +
call sub_10094BE  +
jmp loc_100C9C6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+38h] ebx +
jz loc_100D0AE  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
push edi  +
call dword ptr [eax+30h]  +
mov [ebp+arg_0] eax +
mov eax [esi+38h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+48h]  +
cmp [ebp+arg_0] ebx +
jl loc_100D0AD  +
mov eax [ebp+arg_0] +
shr eax 10h +
test ax ax +
jnz loc_100D0AD  +
mov eax [esi+90h] +
cmp eax ebx +
jz loc_100D08A  +
mov ebx [eax] +
xor edi edi +
test ebx ebx +
jle loc_100D0AD  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8Ch]  +
inc edi  +
cmp edi ebx +
jl loc_100D090  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
and dword ptr [eax+8] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
mov ecx [ebp+8] +
push eax  +
add ecx 0FFFFFFE0h +
call sub_100D0FB  +
mov eax [esi] +
push 0FFFFFFFEh  +
push esi  +
call dword ptr [eax+34h]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
push edi  +
mov edi ecx +
jl loc_100D1AA  +
mov eax [ebp+arg_0] +
shr eax 10h +
test ax ax +
jnz loc_100D1AA  +
push [ebp+arg_0]  +
push dword ptr [edi+60h]  +
call ds:off_1006840  +
push esi  +
mov eax [edi+0A8h] +
test eax eax +
jz loc_1008543  +
mov eax [eax] +
cmp ebx eax +
jge loc_100D1A9  +
mov eax [edi+0A8h] +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push 0  +
push esi  +
call dword ptr [eax+40h]  +
test eax eax +
jl loc_100D172  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jle loc_100D172  +
shr eax 10h +
test ax ax +
jz loc_106301E  +
and [ebp+var_C] 0 +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
test eax eax +
jl loc_100D1A6  +
and [ebp+var_8] 0 +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_100D441  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc ebx  +
jmp loc_100D12E  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
push edi  +
push dword ptr [esi+1Ch]  +
call ds:off_100407C  +
mov ebx eax +
mov eax [esi+10h] +
add eax 1Ch +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_100D24F  +
mov eax [esi+10h] +
push 0Dh  +
pop ecx  +
push ecx  +
mov [ebp+var_34] ecx +
lea ecx [ebp+var_34] +
push ecx  +
add eax 1Ch +
push edi  +
mov [ebp+var_30] 0Eh +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_28] 10h +
mov [ebp+var_24] 11h +
mov [ebp+var_20] 12h +
mov [ebp+var_1C] 13h +
mov [ebp+var_18] 14h +
mov [ebp+var_14] 15h +
mov [ebp+var_10] 16h +
mov [ebp+var_C] 17h +
mov [ebp+var_8] 19h +
mov [ebp+var_4] 18h +
mov edx [eax] +
push eax  +
call dword ptr [edx+30h]  +
cmp [ebp+arg_4] 0 +
jz loc_100D264  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
mov ecx [esi+10h] +
push eax  +
call sub_100D047  +
push ebx  +
push dword ptr [esi+1Ch]  +
call ds:off_10065B4  +
mov eax [edi] +
push edi  +
call dword ptr [eax+18h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
xor ecx ecx +
cmp [ebp+arg_4] ecx +
jz loc_100D297  +
cmp [esi+24h] ecx +
jnz loc_1033926  +
mov ecx [esi+10h] +
push ebx  +
lea eax [esi+8] +
push eax  +
call sub_100D2A3  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
push [ebp+arg_4]  +
mov edi ecx +
push esi  +
call sub_100C9AA  +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jnz loc_100D37A  +
cmp [edi+0E4h] esi +
jz loc_1065DA7  +
push ebx  +
push 0  +
push esi  +
mov ecx edi +
call sub_100C9F9  +
lea ebx [edi+1Ch] +
mov eax [ebx] +
push 0FFFFFFFFh  +
push ebx  +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_100D35B  +
and [ebp+var_34] eax +
mov eax [ebx] +
push 0Dh  +
lea ecx [ebp+var_34] +
push ecx  +
push esi  +
push ebx  +
mov [ebp+var_30] 1 +
mov [ebp+var_2C] 2 +
mov [ebp+var_28] 3 +
mov [ebp+var_24] 4 +
mov [ebp+var_20] 5 +
mov [ebp+var_1C] 6 +
mov [ebp+var_18] 7 +
mov [ebp+var_14] 8 +
mov [ebp+var_10] 9 +
mov [ebp+var_C] 0Ah +
mov [ebp+var_8] 0Bh +
mov [ebp+var_4] 0Ch +
call dword ptr [eax+30h]  +
push esi  +
lea ebx [edi+90h] +
push dword ptr [ebx]  +
call ds:off_100407C  +
push eax  +
push dword ptr [ebx]  +
call ds:off_10065B4  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop ebx  +
mov ecx edi +
call sub_1006CED  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D3B2  +
test byte ptr [ebp+8] 1 +
jz loc_100D3A6  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi] offset off_1002990 +
mov dword ptr [esi+8] offset off_10027FC +
mov dword ptr [esi+0Ch] offset off_1006524 +
call sub_1002BEE  +
mov dword ptr [esi] offset off_1002788 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
mov eax [esi+14h] +
xor ecx ecx +
cmp eax ecx +
jz loc_1002C78  +
mov eax [eax] +
mov [ebp-4] eax +
cmp [ebp-4] ecx +
mov [ebp+8] ecx +
jle loc_100D43C  +
push ebx  +
push edi  +
mov eax [esi+14h] +
mov eax [eax+4] +
mov ecx [ebp+8] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
mov ebx eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+30h]  +
cmp eax [ebp+0Ch] +
mov [ebp-10h] eax +
jg loc_100DD94  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-4] +
jl loc_100D409  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push [ebp+var_8]  +
push esi  +
call dword ptr [eax+40h]  +
test eax eax +
jl loc_100D45E  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jg loc_1008523  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_100D188  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
push 0  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_100D515  +
cmp eax 802A000Ah +
jz loc_100D515  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov eax [esi+8] +
push 0Fh  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jnz loc_10097FE  +
mov eax [esi+8] +
push 10h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jnz loc_10097FE  +
mov eax [esi+8] +
push 12h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jnz loc_10097FE  +
mov eax [esi+8] +
mov eax [eax+38h] +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push 0  +
push dword ptr [ebp-0Ch]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10665B1  +
cmp [ebp-8] ebx +
jnz loc_10665B1  +
lea eax [ebp-8] +
push eax  +
call sub_1002BEE  +
jmp loc_10097FE  +
***
xor eax eax +
inc eax  +
jmp loc_100D498  +
***
push ds:nDenominator  +
push edi  +
push [ebp+nNumber]  +
call ds:MulDiv  +
mov ebx eax +
jmp loc_1004962  +
***
mov dword ptr [ebp+8] 1 +
jmp loc_1007240  +
***
xor eax eax +
jmp loc_1007161  +
***
mov eax [ebp+1Ch] +
jmp loc_10071E2  +
***
xor ecx ecx +
jmp loc_100D557  +
xor eax eax +
jmp loc_100D563  +
mov eax [edi+0A8h] +
test eax eax +
jz loc_100D553  +
mov eax [eax] +
cmp ecx eax +
jge loc_100773A  +
mov eax [edi+0A8h] +
mov eax [eax+4] +
cmp [eax+ecx*4] esi +
jz loc_100D57C  +
inc ecx  +
jmp loc_100D557  +
push ecx  +
push dword ptr [edi+0A8h]  +
call ds:off_10065B4  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
jmp loc_100773A  +
***
mov eax [esi+4] +
mov ecx [eax+10h] +
call sub_1004226  +
test al 2 +
jz loc_1007E9A  +
mov eax [esi+4] +
mov eax [eax+10h] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-0Ch] +
neg edx  +
sbb edx edx +
push edi  +
lea ebx [esi-4] +
and edx ebx +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax 1 +
jnz loc_1007E9A  +
jmp loc_1066C97  +
***
call sub_100D5EC  +
test al al +
jnz loc_10082EA  +
mov ecx esi +
pop esi  +
jmp sub_1008370  +
***
mov edi edi +
push ebx  +
xor ebx ebx +
cmp dword_10B1130 ebx +
jz loc_102A955  +
call dword_10B1130  +
test al al +
setnz bl  +
mov al bl +
pop ebx  +
retn   +
***
cmp dword_10B24CC eax +
jz loc_100CA83  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1046884  +
mov edx dword_10B24B8 +
mov edi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and edi eax +
or edx edi +
jz loc_100CA83  +
jmp loc_10645D9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D677  +
test byte ptr [ebp+8] 1 +
jz loc_100D66B  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002980 +
mov dword ptr [esi+8] offset off_10025A0 +
cmp dword_10B24CC 0 +
push edi  +
jz loc_100D6BD  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_100D701  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_1064202  +
push dword ptr [esi+0Ch]  +
mov edi ds:__imp_CoTaskMemFree +
call edi  +
push dword ptr [esi+14h]  +
call edi  +
push dword ptr [esi+30h]  +
call edi  +
push dword ptr [esi+10h]  +
call edi  +
push dword ptr [esi+20h]  +
call ds:__imp_SHELL32_155  +
push 0  +
lea edi [esi+18h] +
push offset loc_1040149  +
mov ecx edi +
call sub_100831C  +
mov ecx edi +
call sub_10082DC  +
pop edi  +
mov dword ptr [esi] offset off_1002788 +
pop esi  +
retn   +
test al al +
jz loc_100D69C  +
jmp loc_100D6BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100D732  +
test byte ptr [ebp+8] 1 +
jz loc_100D726  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+1Ch] +
mov dword ptr [esi] offset off_10029A0 +
mov dword ptr [esi+8] offset off_1002818 +
mov dword ptr [esi+0Ch] offset off_1006538 +
mov eax [edi] +
xor ebx ebx +
cmp eax ebx +
jz loc_100D78D  +
mov eax [eax] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] ebx +
jg loc_10677C1  +
lea ecx [esi+18h] +
call sub_10044C2  +
lea eax [esi+14h] +
push eax  +
call sub_1002BEE  +
mov ecx edi +
call sub_10082DC  +
pop edi  +
mov dword ptr [esi] offset off_1002788 +
pop esi  +
pop ebx  +
leave   +
retn   +
mov [ebp+var_4] ebx +
jmp loc_100D761  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2398 0FFFFFFFFh +
jz loc_102A816  +
mov eax dword_10B2398 +
test eax eax +
jz loc_105CC85  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub eax 3Dh +
jz loc_103620F  +
sub eax 45h +
jz loc_1018BD6  +
sub eax 103Fh +
jz loc_1012393  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
pop ebp  +
retn 18h  +
***
jz loc_1009BBD  +
mov eax edi +
dec eax  +
jz loc_102CCEC  +
dec eax  +
jz loc_1026736  +
sub eax 3 +
jz loc_1015EBD  +
dec eax  +
jz loc_1011F10  +
dec eax  +
jz loc_1012009  +
sub eax 8 +
jz loc_1002378  +
dec eax  +
jnz loc_10021D4  +
jmp loc_1009B9C  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov ecx [ebp+1Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D89B  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi 200h +
mov esi ecx +
cmp ebx edi +
ja loc_100E2AE  +
jz loc_10365E7  +
cmp ebx 10h +
jz loc_104F8EE  +
cmp ebx 1Ah +
jz loc_1020F5B  +
cmp ebx 46h +
jz loc_1034191  +
mov eax 0F2h +
cmp ebx eax +
jz loc_10372D3  +
mov edi 0F3h +
cmp ebx edi +
jz loc_1037DE3  +
mov edi [ebp+lParam] +
mov eax ebx +
sub eax 201h +
jz loc_103730B  +
sub eax 3 +
jz loc_103730B  +
sub eax 3 +
jz loc_103730B  +
push 2  +
pop ecx  +
xor ebx ebx +
cmp [esi+6Ch] ecx +
jz loc_10518FD  +
mov edx [ebp+arg_4] +
mov eax 100h +
cmp edx eax +
ja loc_100E2E2  +
jz loc_1040F98  +
mov eax edx +
sub eax ecx +
jz loc_104F906  +
sub eax 1Fh +
jz loc_1051929  +
sub eax 5Ah +
jz loc_104F8CA  +
sub eax 7 +
jz sub_10579CC  +
sub eax ecx +
jnz loc_100D990  +
call ds:GetDoubleClickTime  +
push eax  +
push dword ptr [esi+70h]  +
call sub_10365B7  +
test eax eax +
jz loc_10365E0  +
mov esi [esi+78h] +
mov eax [esi] +
mov ecx edi +
shr ecx 10h +
movsx ecx cx +
push ecx  +
movsx ecx di +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+hWndTo]  +
call sub_100D797  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub eax 46h +
push esi  +
mov esi [ebp+14h] +
jz loc_1034173  +
sub eax 3Ch +
jz loc_1059426  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
pop esi  +
pop ebp  +
retn 18h  +
***
jz loc_104E83C  +
mov edx 214h +
cmp edi edx +
ja loc_1034A50  +
jz loc_1020748  +
mov edx edi +
sub edx 113h +
jz loc_100DE10  +
sub edx 4 +
jz loc_104EBDE  +
sub edx 9 +
jz loc_104EBDE  +
sub edx 0F1h +
jz loc_104EF76  +
dec edx  +
jnz loc_10021D4  +
mov ecx ebx +
call sub_104E418  +
jmp loc_1002264  +
dec edx  +
jz loc_10511DE  +
dec edx  +
jz loc_1009C43  +
dec edx  +
dec edx  +
jz loc_10282A8  +
dec edx  +
dec edx  +
jz loc_1020F9D  +
sub edx 4 +
jz loc_10515D0  +
dec edx  +
dec edx  +
jnz loc_10021D4  +
cmp [ebx+0CB0h] esi +
jz loc_10021F8  +
jmp loc_1009C13  +
***
mov eax 409h +
cmp esi eax +
jbe loc_1034233  +
mov edi 43Fh +
cmp esi edi +
jbe loc_1015BFC  +
mov eax esi +
sub eax 440h +
jz loc_1051C04  +
sub eax 13h +
jz loc_105235E  +
sub eax 7 +
jz loc_101201A  +
sub eax 0Ah +
jnz loc_10109C0  +
push dword ptr [ebp+14h]  +
mov ecx ebx +
push dword ptr [ebp+10h]  +
call sub_101FB45  +
jmp loc_1002328  +
***
xor eax eax +
jmp loc_1002328  +
***
push eax  +
mov ecx ebx +
call sub_100DAE2  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0CE4h] 0FFFFFFFFh +
push edi  +
mov edi [ebp+hDC] +
jnz loc_102D6B8  +
mov eax [esi+0C50h] +
test eax eax +
jnz loc_10587B1  +
cmp [esi+24h] eax +
jz loc_10340F4  +
test byte ptr [edi+18h] 4 +
jz loc_10341A3  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
jz loc_10413CB  +
mov eax ecx +
dec eax  +
jz loc_1018098  +
dec eax  +
jz loc_1018E56  +
sub eax 4 +
jz loc_1037E7B  +
dec eax  +
jz loc_103B218  +
sub eax 9 +
jnz loc_100DF55  +
jmp loc_105E92B  +
***
mov edx 0A5h +
cmp edi edx +
ja loc_1037088  +
jz loc_104EEF4  +
mov ecx edi +
sub ecx 86h +
jnz loc_10367B8  +
cmp [ebx+0E00h] esi +
jle loc_10021F8  +
jmp loc_1002298  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
and eax 3 +
cmp al 3 +
jz loc_105754C  +
pop esi  +
retn   +
***
xor edi edi +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_1033B86  +
mov eax [eax] +
cmp edi eax +
jge loc_100DC47  +
push edi  +
push dword ptr [esi+10h]  +
call ds:off_1003D88  +
push eax  +
lea eax [ebp-18h] +
push eax  +
call ds:CopyRect  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jnz loc_1066760  +
push ebx  +
lea eax [ebp-18h] +
push eax  +
mov eax [esi+8] +
push dword ptr [eax+4]  +
call ds:InvalidateRect  +
inc edi  +
jmp loc_100DC02  +
***
mov ecx [esi+8] +
lea eax [esi-8] +
neg eax  +
sbb eax eax +
and eax esi +
cmp [ecx+0E4h] eax +
jnz loc_100AD16  +
jmp loc_1066774  +
***
cmp [ebp+arg_0] 2Ah +
jnz loc_1020DC9  +
jmp loc_1020DC4  +
***
jz loc_1020ECD  +
jmp loc_104DE3C  +
***
mov [ebp+var_4] offset __ImageBase +
jmp loc_1033DE6  +
mov edi 80004005h +
jmp loc_1033DFB  +
***
xor eax eax +
jmp loc_10060F9  +
***
mov edx edi +
sub edx 320h +
jz loc_100A197  +
sub edx 0ECh +
jz loc_1026779  +
dec edx  +
jnz loc_100DCEE  +
mov ecx [ebp+hdc] +
call sub_1015930  +
jmp loc_1002264  +
sub edx 0D8h +
jnz loc_10021D4  +
jmp loc_100A186  +
***
mov eax esi +
sub eax 31Ah +
jz loc_101EFE0  +
sub eax 0E7h +
jz loc_102A5D5  +
dec eax  +
jz loc_102A5B9  +
dec eax  +
jnz loc_10109C0  +
cmp [ebp+14h] eax +
jz loc_100DAC9  +
push dword ptr [ebx+18h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_100DAC9  +
push 0  +
push 0  +
push 465h  +
push dword ptr [ebx+18h]  +
call ds:SendMessageW  +
jmp loc_100DAC9  +
***
push 213h  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push edi  +
push dword ptr [ebx+0B10h]  +
call ds:SetWindowPos  +
jmp loc_1034313  +
***
mov eax [esi+8] +
push 0Fh  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jnz loc_100DDD1  +
mov eax [esi+8] +
push 10h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jnz loc_100DDD1  +
mov eax [esi+8] +
push 12h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jz loc_100D42F  +
mov eax [esi+8] +
mov eax [eax+38h] +
mov edi [eax] +
mov [ebp-0Ch] eax +
lea eax [ebp-8] +
push eax  +
mov eax [ebx] +
push 0  +
push ebx  +
call dword ptr [eax+4Ch]  +
push eax  +
push dword ptr [ebp-0Ch]  +
call dword ptr [edi+0Ch]  +
test eax eax +
jge loc_1002C80  +
mov ecx [ebp-10h] +
mov eax [ebx] +
dec ecx  +
push ecx  +
push ebx  +
call dword ptr [eax+34h]  +
lea eax [ebp-8] +
push eax  +
call sub_1002BEE  +
jmp loc_100D42F  +
***
cmp ecx 0Eh +
jb loc_100DE1E  +
cmp ecx 0Fh +
jbe loc_100A016  +
push ecx  +
mov ecx ebx +
call sub_100DE30  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
cmp eax 12h +
jbe loc_1024B62  +
sub eax 15h +
jnz loc_100DE5A  +
call SHELL32_733  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
dec eax  +
dec eax  +
jz loc_100DE78  +
dec eax  +
jnz loc_1057F92  +
call ds:CoFreeUnusedLibraries  +
push 18h  +
push dword ptr [ebx+4]  +
call ds:KillTimer  +
jmp loc_100DE53  +
lea esi [ebx+0D90h] +
xor edi edi +
cmp [esi] edi +
jnz loc_10331E8  +
push 17h  +
push dword ptr [ebx+4]  +
call ds:KillTimer  +
mov [ebx+0D94h] edi +
jmp loc_100DE53  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push edi  +
mov edi [ebp+14h] +
cmp ebx 81h +
jz loc_101857A  +
push 0FFFFFFEBh  +
push dword ptr [ebp+8]  +
call ds:GetWindowLongW  +
cmp ebx 82h +
jz loc_1018F7F  +
test eax eax +
jz loc_101859A  +
push edi  +
push dword ptr [ebp+10h]  +
mov ecx eax +
push ebx  +
call sub_100DEEF  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+Msg] +
xor ebx ebx +
push edi  +
cmp [esi+6Ch] ebx +
jnz loc_104D30C  +
mov edi [ebp+hWnd] +
mov edx [ebp+wParam] +
cmp ecx 47h +
ja loc_100E269  +
jz loc_1036C19  +
cmp ecx 14h +
jbe loc_100DB80  +
mov eax ecx +
sub eax 15h +
jz loc_1050F68  +
sub eax 3 +
jz loc_103D441  +
dec eax  +
dec eax  +
jz loc_1020EAF  +
dec eax  +
dec eax  +
jz loc_1034693  +
sub eax 2Ah +
jz loc_1014660  +
push [ebp+hWnd]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push dword ptr [esi+38h]  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
push 0FFFFFFEBh  +
push ebx  +
call ds:GetWindowLongW  +
cmp dword ptr [ebp+0Ch] 81h +
mov edi [ebp+14h] +
mov esi eax +
jz loc_101A4DD  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push ebx  +
test esi esi +
jz loc_101A4EE  +
push esi  +
call sub_100DFBB  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+Msg] +
cmp esi 20h +
jz loc_10613DE  +
cmp esi 113h +
jz loc_103C3DA  +
cmp esi 202h +
jz loc_1061351  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push esi  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
push 0FFFFFFEBh  +
push edi  +
call ds:GetWindowLongW  +
mov ebx [ebp+14h] +
mov esi eax +
test esi esi +
jz loc_102BC83  +
push ebx  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
call sub_100E03A  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+hWnd] +
push edi  +
or edi 0FFFFFFFFh +
cmp ecx 4Eh +
ja loc_100E356  +
jz loc_102187E  +
cmp ecx 0Fh +
ja loc_100E163  +
jz loc_100E392  +
mov eax ecx +
dec eax  +
jz loc_102DEB0  +
dec eax  +
jz loc_102DEBC  +
sub eax 6 +
jz loc_105C1BC  +
sub eax 3 +
jz loc_105C1B0  +
push [ebp+lParam]  +
push [ebp+Msg]  +
push ecx  +
push dword ptr [esi]  +
call ds:DefWindowProcW  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+hWnd] +
mov ecx [ebp+lParam] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push 0  +
push eax  +
mov [ebp+pvParam] eax +
mov dword ptr [ebp+String] ecx +
call ds:GetWindowLongW  +
and [ebp+var_48] 0 +
mov edi [ebp+Msg] +
mov ebx eax +
test ebx ebx +
jz loc_102C9A9  +
xor ecx ecx +
inc ecx  +
mov eax 113h +
cmp edi eax +
ja loc_100E318  +
jz loc_1067DAE  +
cmp edi 3Dh +
ja loc_1050F46  +
jz loc_1036243  +
mov eax edi +
dec eax  +
jz loc_102C978  +
dec eax  +
jz loc_1067CCB  +
sub eax 6 +
jz loc_1067C55  +
sub eax 7 +
jz loc_1067C03  +
sub eax 5 +
jz loc_102C9D3  +
sub eax 6 +
jz loc_1020F3E  +
push esi  +
push dword ptr [ebp+String]  +
push edi  +
push [ebp+pvParam]  +
call ds:DefWindowProcW  +
mov [ebp+var_48] eax +
mov ecx [ebp-4] +
mov eax [ebp+var_48] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
cmp ecx 10h +
jz loc_105C1F2  +
cmp ecx 14h +
jz loc_102DD78  +
cmp ecx 1Ah +
jz loc_1020E61  +
cmp ecx 3Dh +
jnz loc_100E089  +
cmp [ebp+lParam] 0FFFFFFFCh +
jz loc_105C1D0  +
push [ebp+lParam]  +
push [ebp+Msg]  +
push 3Dh  +
jmp loc_100E090  +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
test eax eax +
jz loc_1055A18  +
mov ecx eax +
pop ebp  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+Msg] +
sub eax 11h +
push ebx  +
mov ebx ecx +
mov ecx [ebp+hWnd] +
push esi  +
mov [ebp+var_208] ebx +
mov [ebp+var_20C] ecx +
jz loc_105599E  +
sub eax 5 +
jz loc_1055896  +
sub eax 6Ch +
jz loc_1055874  +
push [ebp+arg_C]  +
push [ebp+lParam]  +
push [ebp+Msg]  +
push [ebp+var_20C]  +
call ds:__imp_SHLWAPI_240  +
mov ecx [ebp-4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
mov eax ecx +
sub eax 218h +
jz loc_105168A  +
sub eax 102h +
jz loc_104DE7C  +
sub eax 4 +
jz loc_105103A  +
sub eax 7CE2h +
jnz loc_100DF55  +
push [ebp+lParam]  +
mov ecx esi +
call sub_10345FD  +
jmp loc_100DF55  +
mov eax 113h +
cmp ecx eax +
ja loc_100E22E  +
jz loc_10416CC  +
mov eax ecx +
sub eax 4Eh +
jz loc_103C237  +
sub eax 2Dh +
jz loc_104DE56  +
sub eax 3 +
jz loc_1050F68  +
sub eax 6 +
jz loc_10413DB  +
sub eax 8Eh +
jnz loc_100DF55  +
jmp loc_105E940  +
mov eax ebx +
sub eax 2A3h +
jz loc_1036F60  +
sub eax 77h +
jz loc_100E2C9  +
sub eax 4 +
jnz loc_100D8E6  +
push [ebp+arg_C]  +
push [ebp+lParam]  +
push ebx  +
call sub_101E506  +
test al al +
jz loc_100D8E6  +
jmp loc_10365E0  +
mov eax edx +
sub eax 113h +
jz loc_10371E2  +
sub eax 0EEh +
jz sub_103A089  +
sub eax 7DFFh +
jz loc_104F912  +
dec eax  +
jz loc_1057A09  +
dec eax  +
jnz loc_100D990  +
jmp loc_10579FD  +
mov eax 2A3h +
cmp edi eax +
jbe loc_105163D  +
mov eax edi +
sub eax 2CCh +
jz loc_102C9D3  +
sub eax 4Ch +
jz loc_1067E74  +
dec eax  +
dec eax  +
jnz loc_100E3C5  +
mov ecx ebx +
call sub_1020764  +
mov ecx ebx +
call sub_1020ACF  +
jmp loc_100E14F  +
mov eax 31Ah +
cmp ecx eax +
ja loc_100E3A1  +
jz loc_101E9BB  +
mov edx ecx +
mov eax 84h +
sub edx eax +
jz loc_105C24C  +
sub edx 7Ch +
jz loc_105C22D  +
sub edx 11h +
jz loc_105C207  +
sub edx 207h +
jnz loc_100E089  +
push [ebp+Msg]  +
mov ecx esi +
call sub_102DD96  +
jmp loc_100E098  +
mov eax ecx +
sub eax 31Eh +
jz loc_1051139  +
sub eax 7CE3h +
jz loc_102DEF2  +
dec eax  +
jnz loc_100E089  +
jmp loc_102DEE4  +
***
sub eax 4 +
jz loc_10209C8  +
sub eax 9 +
jnz loc_100E13E  +
jmp loc_1067E2E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+8] +
push edi  +
xor edi edi +
cmp [ebx+4] edi +
jz loc_1055A20  +
push esi  +
mov esi ds:GetMessageW +
push edi  +
push edi  +
push edi  +
lea eax [ebp-1Ch] +
push eax  +
call esi  +
test eax eax +
jz loc_1055A1F  +
lea eax [ebp-1Ch] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp-1Ch] +
push eax  +
call ds:DispatchMessageW  +
jmp loc_100E400  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
lea edi [esi+8] +
push edi  +
call ds:InterlockedDecrement  +
mov ebx eax +
test ebx ebx +
jz loc_1054690  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
xor edx edx +
cmps   +
pop edi  +
jz loc_100E56E  +
test eax eax +
jge loc_100E51D  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_100E51D  +
push dword ptr [ebp+10h]  +
mov ebx [ebx+0Ch] +
push dword ptr [ebp+0Ch]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax]  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset loc_100E53C  +
push eax  +
call dword ptr [ecx]  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov eax [ebp+10h] +
mov [eax] ebx +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_100E505  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
jz loc_100E5C3  +
push [ebp+arg_0]  +
call sub_100E551  +
mov esi eax +
test esi esi +
jz loc_100E5C3  +
push edi  +
push [ebp+arg_14]  +
mov ecx esi +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_100E5CC  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
xor eax eax +
jmp loc_100E5BE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea ebx [edi+1Ch] +
cmp dword ptr [ebx] 0 +
jz sub_1027DC4  +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_C] +
cmp eax 2Bh +
jb loc_100E617  +
cmp eax 2Ch +
jbe loc_1036F95  +
cmp eax 4Eh +
jnz loc_1036F83  +
mov eax [esi+8] +
cmp eax 0FFFFFCACh +
jz loc_10546C5  +
cmp eax 0FFFFFFF2h +
jz loc_1044A91  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_100E458  +
push edi  +
call dword ptr [eax]  +
test eax eax +
jl loc_1027DE0  +
push [ebp+arg_10]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
test esi esi +
setnl al  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
lea edx [ebp+var_58] +
push edx  +
push eax  +
push ecx  +
push 4Eh  +
push [ebp+hWndParent]  +
push dword ptr [ebx+3Ch]  +
call sub_100E582  +
test eax eax +
jnz loc_1002264  +
mov ecx [ebp+lParam] +
mov eax [ecx+8] +
cmp eax 0FFFFFFEAh +
jz loc_101114A  +
add eax 0Ah +
cmp eax 1 +
ja loc_1002264  +
push ecx  +
mov ecx ebx +
call sub_104092C  +
jmp loc_1002264  +
***
mov eax [esi+0A8h] +
mov [ebp+var_1C] ebx +
mov [ebp+var_10] 1 +
cmp eax ebx +
jz loc_1053E8A  +
mov eax [eax] +
mov [ebp+var_14] eax +
cmp [ebp+var_14] ebx +
mov [ebp+var_8] ebx +
jg loc_100E739  +
jmp loc_10096F5  +
cmp [ebp+var_10] ebx +
jz loc_100E71E  +
mov eax [ebp+lpdwProcessId] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
mov edi eax +
and edi 1 +
jnz loc_10529E4  +
cmp [ebp+var_1C] ebx +
jnz loc_100E704  +
test al 2 +
jnz loc_10529E4  +
mov eax [ebp+lpdwProcessId] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+lpdwProcessId] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_100E6DE  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov edi [ebp+hWnd] +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jge loc_10096F5  +
cmp [ebp+var_10] ebx +
jz loc_10096F5  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov ecx [ebp+var_8] +
mov eax [eax+ecx*4] +
lea edx [ebp+var_4] +
push edx  +
mov [ebp+var_4] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_100E72A  +
mov [ebp+lpdwProcessId] ebx +
jmp loc_100E70D  +
***
cmp [esi+3Ch] edi +
jnz loc_1063818  +
mov eax [esi+94h] +
mov ecx [eax] +
push edi  +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_1009915  +
***
cmp [esi+40h] eax +
jnz loc_1009659  +
cmp [esi+0CCh] eax +
jnz loc_1009659  +
push 0FFFFFFFFh  +
push eax  +
mov ecx ebx +
jmp loc_1009654  +
***
mov edi edi +
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz sub_104B46F  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
***
sub eax 118h +
jnz loc_10269E3  +
push edi  +
mov ecx esi +
call sub_1052787  +
jmp loc_10024DE  +
***
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHIsChildOrSelf  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
push dword ptr [eax-14h]  +
call sub_100E838  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+28h] +
xor ecx ecx +
cmp eax ecx +
jz loc_100E8B9  +
mov edx [ebp+0Ch] +
sub edx ecx +
jz loc_1054CC8  +
dec edx  +
jnz loc_100E8B9  +
mov cl [ebp+10h] +
mov [eax+28h] cl +
mov ecx [ebp+14h] +
mov [eax+10h] ecx +
mov ecx [ebp+18h] +
mov [eax+14h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+18h] ecx +
mov ecx [ebp+20h] +
mov dword ptr [eax+24h] 1 +
mov [eax+1Ch] ecx +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx eax +
and eax [ebp+10h] +
not edx  +
and edx [ecx+14h] +
or edx eax +
mov [ecx+14h] edx +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi+0Ch]  +
xor edi edi +
mov [esi+3Ch] edi +
call ds:__imp_PathIsNetworkPathW  +
test eax eax +
jnz loc_100E93C  +
lea eax [ebp+hKey] +
push eax  +
push edi  +
push dword ptr [esi+0Ch]  +
push 2  +
push 42h  +
call ds:AssocQueryKeyW  +
test eax eax +
jl loc_100E93C  +
push edi  +
push edi  +
push edi  +
push offset pszValue  +
push edi  +
push [ebp+hKey]  +
call ds:__imp_SHGetValueW  +
test eax eax +
jz loc_10530F2  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100E992  +
push [ebp+arg_C]  +
sub eax ecx +
push 1  +
sar eax 1 +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E9BD  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_14] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_14] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_1008156  +
mov edi eax +
test edi edi +
jl loc_100EA0D  +
push esi  +
push [ebp+arg_14]  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100EA1A  +
mov edi eax +
test edi edi +
jl loc_100EA0D  +
push 300h  +
push 0  +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_14]  +
push dword ptr [esi]  +
call sub_100817B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+cb] +
and dword ptr [esi] 0 +
lea eax [ebp+cb] +
push eax  +
mov eax [ebp+arg_8] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_1008129  +
test eax eax +
jl loc_100EA4C  +
push esi  +
push [ebp+cb]  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100EA56  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+cb]  +
call ds:__imp_CoTaskMemAlloc  +
mov esi [ebp+arg_C] +
mov [esi] eax +
test eax eax +
jz loc_100EA7F  +
test [ebp+arg_4] 1 +
jnz loc_1058D57  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
mov eax 8007000Eh +
jmp loc_100EA7A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
add esi 28h +
push dword ptr [esi]  +
xor edi edi +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+0Ch] +
mov [esi] edi +
cmp eax edi +
jz loc_100EABA  +
cmp [eax] di +
jz loc_100EABA  +
push esi  +
push eax  +
call ds:__imp_SHStrDupW  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_100EAE4  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov dword ptr [esi+20h] 0FFFFFFFEh +
jz loc_100EB32  +
lea eax [esi+18h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_10082A8  +
mov ebx eax +
test ebx ebx +
jl loc_100EB95  +
lea eax [esi+4] +
push eax  +
push dword ptr [ebp+10h]  +
mov [ebp+0Ch] eax +
call sub_100EBA2  +
mov ebx eax +
test ebx ebx +
jl loc_100EB95  +
lea ecx [esi-8] +
call sub_100E8E7  +
push dword ptr [ebp+14h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+64h]  +
mov ebx eax +
test ebx ebx +
jl loc_100EB95  +
cmp dword_10B24CC 0 +
jz loc_100EB95  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104309B  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_104305C  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
push 0  +
call sub_100E987  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 40h  +
mov edi 8007000Eh +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_100EC17  +
mov ecx eax +
call sub_100EC20  +
mov esi eax +
test esi esi +
jz loc_100EC0F  +
push [ebp+arg_8]  +
lea eax [esi+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_100EC09  +
push [ebp+arg_10]  +
mov eax [esi] +
push [ebp+arg_C]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
xor esi esi +
jmp loc_100EBE0  +
***
mov eax ecx +
xor ecx ecx +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] offset off_1002980 +
mov dword ptr [eax+8] offset off_10025A0 +
mov [eax+18h] ecx +
mov dword ptr [eax+2Ch] 0FF000000h +
mov [eax+34h] ecx +
mov [eax+38h] ecx +
retn   +
***
cmp dword_10B24CC 0 +
jz loc_10061C4  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_102AD57  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax 10000h +
and ecx ebx +
or eax ecx +
jz loc_10061C4  +
mov edx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax edx +
and eax 10000h +
and ecx ebx +
cmp eax edx +
jnz loc_10061C4  +
cmp ecx dword_10B24C4 +
jnz loc_10061C4  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
push 0  +
mov [ebp+wParam] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
push eax  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+3Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [ebp+wParam] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
mov eax esi +
cdq   +
push edx  +
push eax  +
push dword ptr [edi+4]  +
push offset dword_100ECF8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10430BD  +
jmp loc_10061C4  +
***
mov eax [esi+58h] +
xor ebx ebx +
test eax eax +
setz bl  +
test edx edx +
jz loc_100ED34  +
test eax eax +
jz loc_100ED34  +
push 1  +
xor edi edi +
push edi  +
push edi  +
push dword ptr [esi+4]  +
call ds:RedrawWindow  +
mov [esi+58h] edi +
mov [ebp-4Ch] ebx +
jmp loc_1003CBC  +
***
xor eax eax +
test edx edx +
setz al  +
mov [esi+58h] eax +
jmp loc_100ED2C  +
***
push 7FFFFFFFh  +
push ebx  +
mov ecx edi +
call sub_100ED83  +
mov esi eax +
test esi esi +
jz loc_10061DB  +
cmp [ebp+arg_4] 0 +
mov [ebp+var_4] 1 +
jz loc_102AD0D  +
push 0  +
push esi  +
mov ecx edi +
call sub_100B92B  +
mov [ebp+wParam] 1 +
jmp loc_100612D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+90h] +
cmp dword ptr [esi] 0 +
jz loc_102ACE0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
push edi  +
call sub_100EDD6  +
test eax eax +
jl loc_100EDC8  +
push 0  +
push [ebp+var_4]  +
mov ecx esi +
push [ebp+arg_4]  +
call sub_10080DF  +
test eax eax +
jl loc_1064765  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 30h  +
xor esi esi +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_100EE0A  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
call sub_100EE1A  +
test eax eax +
jz loc_100EE0E  +
mov ecx [ebp+arg_8] +
add eax 8 +
mov [ecx] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_100EDF7  +
mov esi 8007000Eh +
jmp loc_100EE03  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
mov [esi+10h] eax +
xor eax eax +
mov dword ptr [esi+4] 1 +
mov dword ptr [esi] offset off_10029A0 +
mov dword ptr [esi+8] offset off_1002818 +
mov dword ptr [esi+0Ch] offset off_1006538 +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+20h] eax +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi+2Ch] 0FFFF0000h +
call ds:__imp_IUnknown_Set  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
xor eax eax +
jmp loc_1006C8B  +
***
mov esi [ebp+14h] +
mov eax [ebp+10h] +
lea edi [ebp-18h] +
movs   +
movs   +
movs   +
movs   +
mov [ebp-8] eax +
lea eax [ebp-18h] +
push eax  +
mov ecx ebx +
call sub_1003DE4  +
cmp eax 0FFFFFFFFh +
jnz loc_10072D6  +
jmp loc_1066713  +
***
push 1  +
mov ecx ebx +
call sub_100EED4  +
test eax eax +
jnz loc_1007269  +
jmp loc_10666F7  +
***
xor eax eax +
jmp loc_1007275  +
***
dec eax  +
cmp edi eax +
jz loc_10072BE  +
jmp loc_10072D6  +
***
xor eax eax +
jmp loc_10072CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push 14h  +
call ds:off_1003E00  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi] eax +
pop esi  +
mov eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+34h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1018C3D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub eax 0Fh +
jz loc_103862F  +
sub eax 73h +
jz loc_1018C19  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 4Eh +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
push edi  +
jz loc_10543EB  +
push ebx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 82h +
jz loc_1018C54  +
mov eax 200h +
cmp [ebp+0Ch] eax +
jz loc_103DF0A  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push 0  +
push esi  +
call ds:GetWindowLongW  +
mov ebx [ebp+0Ch] +
mov edi eax +
cmp ebx 81h +
jz loc_1060695  +
test edi edi +
jz loc_106076A  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax 138h +
cmp ebx eax +
ja loc_100F341  +
jz loc_10606CB  +
cmp ebx 4Eh +
ja loc_1034432  +
jnz loc_100F1D9  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 4Eh  +
push esi  +
call sub_10122A2  +
mov esi eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 34h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 81h +
cmp [ebp+0Ch] eax +
jz loc_101AA24  +
pop ebp  +
jmp loc_100F12E  +
***
cmp ebx 14h +
ja loc_101139D  +
jz loc_10384E3  +
mov eax ebx +
dec eax  +
jz loc_101765B  +
dec eax  +
jz loc_1018EC5  +
sub eax 3 +
jz loc_10156ED  +
dec eax  +
dec eax  +
jz loc_106069C  +
push dword ptr [ebp+14h]  +
mov eax [edi] +
push dword ptr [ebp+10h]  +
mov ecx edi +
push ebx  +
push esi  +
call dword ptr [eax+98h]  +
jmp loc_100F18F  +
***
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_100F238  +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
mov edi [ebp+14h] +
mov esi ecx +
cmp ebx 1Ah +
jz loc_1020EE9  +
cmp ebx 4Eh +
jz loc_1012564  +
cmp ebx 8000h +
jz loc_1010302  +
push edi  +
push dword ptr [ebp+10h]  +
push ebx  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+1Ch] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_100F6C5  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
inc eax  +
retn   +
***
mov eax 408h +
cmp ebx eax +
jbe loc_100F392  +
mov eax 40Dh +
cmp ebx eax +
jbe loc_100F733  +
mov ecx ebx +
mov eax 40Eh +
sub ecx eax +
jz loc_101D3C2  +
dec ecx  +
dec ecx  +
jz loc_103B333  +
sub ecx 7BF1h +
jnz loc_100F209  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 8001h  +
push esi  +
call sub_103D241  +
jmp loc_100F18F  +
***
jz loc_1043C2C  +
add eax 0FFFFFFFBh +
cmp ebx eax +
ja loc_10606FF  +
jz loc_1043C2C  +
mov ecx ebx +
mov eax 318h +
sub ecx eax +
jz loc_1038FAF  +
sub ecx 0E8h +
jnz loc_10142CB  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 400h  +
push esi  +
call sub_100FB29  +
jmp loc_100F18F  +
***
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi ecx +
mov ecx [esi+19Ch] +
mov [ebp+var_8] ecx +
mov ecx [esi+60h] +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
mov [ebp+var_18] ecx +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 10A2h  +
push dword ptr [esi+0B0h]  +
mov [ebp+lParam] 28h +
mov [ebp+var_20] 3 +
mov [ebp+var_24] 7 +
mov [ebp+var_10] 2 +
mov [ebp+var_C] eax +
mov [ebp+var_4] eax +
mov [ebp+var_14] eax +
mov [ebp+var_1C] edi +
call ds:SendMessageW  +
mov [esi+140h] edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
sbb eax offset SHLWAPI_632 +
push esi  +
push edi  +
mov esi ecx +
push 0Ch  +
lea edi [esi+1D8h] +
call ebx  +
cmp [edi] eax +
jnz loc_10131CD  +
mov eax [esi+158h] +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
mov [ebp+var_4] 4 +
push 0  +
push 10h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHRegGetValueW  +
test eax eax +
jle locret_100F68A  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 10h  +
***
mov dword ptr [ecx+158h] 1 +
retn   +
***
retn   +
***
test esi esi +
jz loc_100F333  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
jmp loc_100F333  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22B0 0FFFFFFFFh +
jz loc_10283DD  +
mov eax dword_10B22B0 +
test eax eax +
jz loc_105CCE3  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22B4 0FFFFFFFFh +
jz loc_10283F1  +
mov eax dword_10B22B4 +
test eax eax +
jz loc_105CCE9  +
pop ebp  +
jmp eax  +
***
jz loc_1013040  +
mov ecx ebx +
add eax 0FFFFFFFCh +
sub ecx eax +
jz loc_1043C2C  +
dec ecx  +
jz loc_1042AD6  +
dec ecx  +
jnz loc_106074B  +
push dword ptr [ebp+10h]  +
mov ecx edi +
call sub_100F8BC  +
xor esi esi +
jmp loc_100F191  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
test byte ptr [esi+2Ch] 10h +
jnz loc_100F782  +
mov ecx [esi+28h] +
push esi  +
call sub_100F7A7  +
mov eax [esi+28h] +
mov eax [eax+44h] +
test eax eax +
jz loc_100F79B  +
push esi  +
push 0  +
push 400h  +
push eax  +
call ds:PostMessageW  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+44h]  +
call ds:GetWindowRect  +
mov eax [ebp+Rect.right] +
sub eax [esi+8Ch] +
mov ecx esi +
sub eax [esi+88h] +
sub eax [ebp+Rect.left] +
push eax  +
call sub_100F527  +
mov ebx [ebp+arg_0] +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+20h]  +
lea edi [esi+98h] +
push edi  +
call ds:EnterCriticalSection  +
test ebx ebx +
jz loc_100F7FD  +
test byte ptr [ebx+2Ch] 10h +
jnz loc_100F80E  +
push esi  +
push offset loc_101022E  +
lea ecx [esi+0D4h] +
call sub_100F821  +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
test eax eax +
jz loc_100F83D  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call ds:off_100F844  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_100F839  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B233C 0FFFFFFFFh +
jz loc_1028405  +
mov eax dword_10B233C +
test eax eax +
jz loc_105CCF1  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov dword ptr [esi] offset off_1003900 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov [esi+28h] eax +
mov [esi+2Ch] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
xlat   +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea esi [ecx+0E4h] +
push edi  +
push dword ptr [esi]  +
xor ebx ebx +
call ds:off_100407C  +
test eax eax +
jl loc_100FABF  +
mov ebx [edi+2Ch] +
push eax  +
push dword ptr [esi]  +
call ds:off_10065B4  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100FAF3  +
test byte ptr [ebp+8] 1 +
jz loc_100FAE7  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+28h] +
mov dword ptr [esi] offset off_1003900 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx esi +
pop esi  +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_C]  +
mov esi ecx +
call sub_100FA8D  +
mov [ebp+arg_C] eax +
test al 10h +
jnz loc_100FB7C  +
mov eax [esi] +
and dword ptr [esi+7Ch] 0 +
push edi  +
xor edi edi +
inc edi  +
mov ecx esi +
mov [esi+158h] edi +
call dword ptr [eax+128h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+108h]  +
test eax eax +
jz loc_1060618  +
test byte ptr [ebp+arg_C] 8 +
jz loc_10605DF  +
mov ecx esi +
call sub_100FB88  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
lea eax [esi+160h] +
mov [ebp+var_8] edi +
cmp [eax] edi +
jnz loc_10131E9  +
mov eax [esi+0D0h] +
cmp eax edi +
jz loc_1053E9E  +
mov ecx [eax] +
mov eax [esi+0D4h] +
cmp eax edi +
jz loc_1053EA5  +
mov eax [eax] +
cmp ecx eax +
jnz loc_101D3B6  +
mov eax [esi+0DCh] +
cmp eax edi +
jz loc_1053EAC  +
mov ecx [eax] +
mov eax [esi+0E0h] +
cmp eax edi +
jz loc_1053EB3  +
mov eax [eax] +
cmp ecx eax +
jnz loc_101D3B6  +
mov eax [esi+0D0h] +
cmp eax edi +
jz loc_1053EBA  +
mov eax [eax] +
mov [ebp+var_4] eax +
xor ebx ebx +
cmp [ebp+var_4] edi +
jle loc_100FC43  +
mov eax [esi+0D0h] +
mov eax [eax+4] +
mov edx ebx +
shl edx 2 +
mov ecx [edx+eax] +
mov eax [esi+0D4h] +
mov eax [eax+4] +
add eax edx +
mov edx [ecx] +
push edi  +
push dword ptr [eax]  +
call dword ptr [edx+0Ch]  +
test eax eax +
jz loc_1053E92  +
inc ebx  +
cmp ebx [ebp+var_4] +
jl loc_100FC11  +
mov eax [esi+0DCh] +
cmp eax edi +
jz loc_1053EC2  +
mov eax [eax] +
xor ecx ecx +
cmp eax edi +
mov [ebp+var_4] eax +
jg loc_106055E  +
cmp [ebp+var_8] edi +
jnz loc_1013127  +
push edi  +
push offset loc_1035FD6  +
push dword ptr [esi+0D4h]  +
call ds:off_100F708  +
mov eax [esi+0D4h] +
cmp eax edi +
jz loc_100FC8C  +
push eax  +
call ds:off_100F6DC  +
push edi  +
push offset loc_108ECDD  +
lea ebx [esi+0E0h] +
push dword ptr [ebx]  +
call ds:off_100F708  +
mov ebx [ebx] +
cmp ebx edi +
jz loc_100FCAD  +
push ebx  +
call ds:off_100F6DC  +
mov eax [esi] +
mov ecx esi +
mov [esi+15Ch] edi +
call dword ptr [eax+68h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
xor eax eax +
mov [ebp+var_4] esi +
test ebx ebx +
jz loc_100FD55  +
mov ecx [esi+4] +
cmp ecx 0FFFFFFFEh +
jz loc_100FD69  +
cmp dword ptr [ebx+4] 0FFFFFFFEh +
jz loc_100FD69  +
mov edx [esi+38h] +
test edx edx +
jz loc_100FD55  +
mov ecx [ebx+38h] +
test ecx ecx +
jz loc_100FD55  +
push ecx  +
push edx  +
call ds:__imp_StrCmpICW  +
neg eax  +
sbb eax eax +
inc eax  +
jz loc_100FD55  +
cmp [ebp+arg_4] 0 +
jnz loc_100FD55  +
push edi  +
push dword ptr [esi+30h]  +
mov edi ds:__imp_SHELL32_152 +
call edi  +
push dword ptr [ebx+30h]  +
mov [ebp+arg_0] eax +
call edi  +
mov ecx [ebp+arg_0] +
cmp ecx eax +
jnz loc_100FD5B  +
mov esi [esi+30h] +
mov edi [ebx+30h] +
xor eax eax +
cmps   +
mov esi [ebp+var_4] +
setz al  +
pop edi  +
test eax eax +
jz loc_100FD55  +
mov esi [esi+2Ch] +
test esi esi +
jz loc_100FD5F  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_100FD5F  +
push eax  +
push esi  +
call ds:__imp_SHELL32_21  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor eax eax +
jmp loc_100FD3A  +
xor eax eax +
cmp esi [ebx+2Ch] +
jmp loc_106077D  +
xor eax eax +
cmp ecx [ebx+4] +
jmp loc_106077D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
cmp dword_10B24CC 0 +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov ebx 80000000h +
jz loc_100FDBC  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1028569  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx ebx +
or eax ecx +
jnz loc_1060A1B  +
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx esi +
call sub_100FEC9  +
mov eax [esi+24h] +
add eax [ebp-10h] +
cmp dword ptr [ebp-10h] 0 +
jg loc_1060A59  +
mov ecx [esi+20h] +
mov edx [ecx] +
and dword ptr [ebp-0Ch] 0 +
lea edi [ebp-20h] +
push edi  +
lea edi [ebp-18h] +
push edi  +
lea edi [ebp-8] +
push edi  +
push eax  +
push ecx  +
call dword ptr [edx+18h]  +
test eax eax +
jl loc_1010159  +
and dword ptr [ebp-4] 0 +
push 4  +
lea ecx [ebp-4] +
call sub_100801C  +
mov edi eax +
neg edi  +
sbb edi edi +
and edi 7FF8FFF2h +
add edi 8007000Eh +
js loc_100FE73  +
mov eax [ebp-18h] +
mov ecx [eax] +
push 0  +
lea edx [ebp-14h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1060A5F  +
mov eax [ebp-20h] +
mov [esi+0Ch] eax +
mov eax [ebp-1Ch] +
mov [esi+10h] eax +
test edi edi +
jl loc_100FE73  +
push dword ptr [ebp-4]  +
mov eax [esi+18h] +
push offset loc_10102EF  +
push dword ptr [ebp-4]  +
push 0  +
push 8000h  +
push dword ptr [eax+44h]  +
call ds:SendMessageCallbackW  +
test eax eax +
jz loc_100FE73  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-8] +
mov ecx [eax] +
push 0  +
lea edx [ebp-58h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_101013F  +
lea eax [ebp-58h] +
push eax  +
call sub_100FF9B  +
mov edi eax +
test edi edi +
jz loc_100FE73  +
cmp dword_10B1150 0 +
jz loc_102855A  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_100FEBB  +
inc dword ptr [ebp-0Ch]  +
push edi  +
push dword ptr [ebp+8]  +
call sub_101026B  +
mov ecx edi +
call sub_100F319  +
jmp loc_100FE73  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push 40000069h  +
mov esi ecx +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_1060788  +
lea eax [ebp+pcbData] +
push eax  +
add esi 24h +
push esi  +
push 0  +
push offset aStart_minmfu  +
push offset pszSubKey  +
push 80000001h  +
mov [ebp+pcbData] 4 +
call ds:__imp_SHGetValueW  +
test eax eax +
jz loc_100FF15  +
mov dword ptr [esi] 0Ah +
pop esi  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
add ecx 1DCh +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+8]  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1010206  +
or dword ptr [esi+10h] 4 +
or dword ptr [esi+60h] 0FFFFFFFFh +
mov dword ptr [esi] offset off_100F46C +
mov eax esi +
pop esi  +
retn   +
***
cmp dword ptr [ecx+4] 0FFFFFFFEh +
jz loc_1060785  +
push dword ptr [ecx+30h]  +
push dword ptr [ecx+2Ch]  +
call ds:__imp_SHELL32_25  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_106086C  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
add ecx 1DCh +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+0Ch]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push 64h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_101003C  +
mov ecx eax +
call sub_100FF33  +
mov ebx eax +
test ebx ebx +
jz loc_1010035  +
mov edx [ebp+arg_0] +
push esi  +
push edi  +
push 9  +
pop ecx  +
lea esi [edx+0Ch] +
lea edi [ebx+3Ch] +
movs   +
mov eax [edx+30h] +
mov [ebx+4] eax +
mov eax [edx+34h] +
mov [ebx+24h] eax +
mov eax [ebx+4] +
pop edi  +
pop esi  +
cmp eax 0FFFFFFFEh +
jz loc_1010035  +
cmp eax 0FFFFFFFFh +
jnz loc_1060881  +
mov eax [edx] +
test eax eax +
jz loc_1010043  +
lea ecx [ebx+2Ch] +
push ecx  +
push eax  +
call sub_10082A8  +
mov edx [ebp+arg_0] +
test eax eax +
jl loc_1010047  +
lea eax [ebx+30h] +
push eax  +
push dword ptr [edx+4]  +
call sub_10082A8  +
test eax eax +
jl loc_1010047  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+28h]  +
mov [ebx+34h] eax +
test eax eax +
jz loc_1010047  +
lea eax [ebx+38h] +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+8]  +
call sub_1010058  +
test eax eax +
jl loc_1010047  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
xor ebx ebx +
jmp loc_100FFBA  +
xor eax eax +
jmp loc_1010000  +
mov ecx ebx +
call sub_100F319  +
jmp loc_106088A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
push 0  +
call sub_1010075  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1010080  +
push [ebp+arg_C]  +
sub eax ecx +
push 1  +
sar eax 1 +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10100AB  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_14] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_14] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_1008156  +
mov edi eax +
test edi edi +
jl loc_10100FB  +
push esi  +
push [ebp+arg_14]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1010108  +
mov edi eax +
test edi edi +
jl loc_10100FB  +
push 300h  +
push 0  +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_14]  +
push dword ptr [esi]  +
call sub_100817B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+uBytes] +
and dword ptr [esi] 0 +
lea eax [ebp+uBytes] +
push eax  +
mov eax [ebp+arg_8] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_1008129  +
test eax eax +
jl loc_101013A  +
push esi  +
push [ebp+uBytes]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1010373  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [ebp-8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp-4] +
call sub_100FF70  +
push dword ptr [ebp-0Ch]  +
mov ecx esi +
push dword ptr [ebp-10h]  +
call sub_10101AE  +
cmp dword_10B24CC 0 +
mov dword_10B1150 1 +
jz loc_10101A2  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1028576  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx ebx +
or eax ecx +
jnz loc_1060A9A  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+18h] 0 +
jz loc_10101FC  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
test edi edi +
setnz al  +
push 0Ah  +
push offset aStart_minmfu  +
push offset pszSubKey  +
sub esi eax +
sub esi edi +
call sub_10103A4  +
lea ecx [esi+edi] +
cmp ecx eax +
jge loc_10101EB  +
sub eax edi +
mov esi eax +
mov eax [ebx+18h] +
mov [eax+1A8h] edi +
pop edi  +
mov [eax+1ACh] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax ecx +
and dword ptr [eax+20h] 0FFFFFFE8h +
or ecx 0FFFFFFFFh +
mov dword ptr [eax] offset off_100F3DC +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+14h] ecx +
mov dword ptr [eax+1Ch] 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push esi  +
mov esi [ebp+8] +
inc eax  +
mov ecx 1C0h +
test [esi+20h] al +
jnz loc_105EE7B  +
mov edx [ebp+0Ch] +
test [edx+20h] al +
jnz loc_101025F  +
mov ecx [ebp+10h] +
mov eax [ecx] +
push edx  +
push esi  +
call dword ptr [eax+30h]  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
test [edx+10h] ecx +
jnz loc_1010250  +
jmp loc_101025A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea ebx [esi+98h] +
push ebx  +
mov edi 80004004h +
call ds:EnterCriticalSection  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10102CD  +
test eax eax +
jz loc_10102B8  +
push 0  +
push [ebp+arg_4]  +
lea ecx [esi+0D4h] +
call sub_1006610  +
mov edi eax +
test edi edi +
jl loc_10102B8  +
mov eax [ebp+arg_4] +
add eax 1Ch +
push eax  +
call ds:InterlockedIncrement  +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_10102E6  +
test byte ptr [ecx+2Ch] 10h +
jnz loc_105EE74  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+14h] 0 +
jz loc_10609E4  +
pop ebp  +
retn 10h  +
***
push edi  +
call sub_1010312  +
jmp loc_100F274  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
mov eax [edi] +
mov [ebp+arg_0] ebx +
test eax eax +
jnz loc_1060891  +
xor eax eax +
test eax eax +
jnz loc_1060898  +
test ebx ebx +
jz loc_101036A  +
mov eax [ebx] +
test eax eax +
jnz loc_1060898  +
push eax  +
push offset loc_1091795  +
lea ecx [ebp+arg_0] +
call sub_100831C  +
lea ecx [ebp+arg_0] +
call sub_10082DC  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
xor eax eax +
jmp loc_1010342  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+uBytes]  +
mov eax [ebp+arg_4] +
and eax 40h +
push eax  +
call ds:LocalAlloc  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 80000001h  +
call sub_100F656  +
test eax eax +
jge loc_10103E1  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 80000002h  +
call sub_100F656  +
test eax eax +
mov eax [ebp+arg_8] +
jge loc_10103E1  +
leave   +
retn 0Ch  +
mov eax [ebp+var_4] +
jmp locret_10103DD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax 80070057h +
cmp edx 8 +
jnb loc_101040E  +
lea ecx [ecx+edx*4+0D6Ch] +
mov edx [ecx] +
test edx edx +
jnz loc_10360AB  +
pop ebp  +
retn 4  +
***
push ecx  +
mov ecx ebx +
cmp eax esi +
jz loc_10360C8  +
call sub_101042C  +
jmp loc_1002208  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov ebx ecx +
mov edi 80070057h +
cmp eax 8 +
jnb loc_10104A4  +
push eax  +
call sub_10103EB  +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
mov [ebp+var_8] ecx +
mov [ebp+var_4] eax +
mov ecx 8003h +
test eax eax +
jz loc_1010467  +
mov ecx 9003h +
lea eax [ebp+var_8] +
push eax  +
mov eax [esi] +
push 1  +
add eax 565h +
push eax  +
push dword ptr [esi+4]  +
push ecx  +
push dword ptr [ebx+4]  +
call ds:SHELL32_2  +
mov ecx [esi] +
mov [ebx+ecx*4+0D6Ch] eax +
mov eax [esi] +
mov edi [ebx+eax*4+0D6Ch] +
neg edi  +
sbb edi edi +
and edi 7FFFBFFBh +
add edi 80004005h +
push dword ptr [esi+8]  +
call ds:__imp_SHELL32_155  +
push esi  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
lea eax [ebp-4] +
push eax  +
push 10h  +
push 40h  +
push 0  +
call sub_1010373  +
mov ebx eax +
test ebx ebx +
jl loc_1010524  +
mov eax [ebp+0Ch] +
push esi  +
mov esi [ebp-4] +
push edi  +
mov [esi] eax +
mov eax [ebp+10h] +
lea edi [esi+8] +
mov [esi+4] eax +
mov eax [ebp+18h] +
push edi  +
push dword ptr [ebp+14h]  +
mov [esi+0Ch] eax +
call sub_10082A8  +
mov ebx eax +
test ebx ebx +
jl loc_1010522  +
mov eax [ebp+8] +
push 1  +
push esi  +
push 56Dh  +
push dword ptr [eax-10h]  +
call ds:SendNotifyMessageW  +
test eax eax +
jz loc_1057FA4  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call SHELL32_95  +
mov ebx eax +
test ebx ebx +
jnz loc_105CE4D  +
push [ebp+arg_4]  +
call SHELL32_95  +
mov esi eax +
test esi esi +
jnz loc_103642B  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHELL32_21  +
push ebx  +
mov edi eax +
call SHELL32_155  +
push esi  +
call SHELL32_155  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
xor edi edi +
mov ebx ecx +
cmp eax edi +
jz loc_10105AF  +
mov [eax] edi +
mov eax [ebx+0A8h] +
mov [ebp+var_8] 80004005h +
cmp eax edi +
jz loc_102AAC7  +
mov eax [eax] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jle loc_1010606  +
push esi  +
cmp [ebp+var_8] 0 +
jge loc_1010605  +
mov eax [ebx+0A8h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+80h]  +
test eax eax +
jz loc_10105FF  +
push eax  +
push [ebp+pidl]  +
call sub_1010614  +
test eax eax +
jnz loc_1052518  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_10105CF  +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
xor esi esi +
push [ebp+pidl]  +
call SHELL32_21  +
test eax eax +
jnz loc_10524FC  +
push [ebp+arg_4]  +
push [ebp+pidl]  +
call sub_101053B  +
test eax eax +
jnz loc_10524FC  +
push [ebp+arg_4]  +
push [ebp+pidl]  +
call sub_1010661  +
test eax eax +
jnz loc_10524FC  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+pidl] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+pszPath] +
push ecx  +
push eax  +
xor esi esi +
call SHGetPathFromIDListW  +
test eax eax +
jz loc_10106BE  +
lea eax [ebp+var_20C] +
push eax  +
push edi  +
call SHGetPathFromIDListW  +
test eax eax +
jz loc_10106BE  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call SHELL32_850  +
mov esi eax +
dec esi  +
dec esi  +
neg esi  +
sbb esi esi +
inc esi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
jnz loc_1010981  +
lea eax [ecx+29Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+18h]  +
mov ecx [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10108C6  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
cmp [ebp+arg_4] 82h +
push ebx  +
push edi  +
mov edi ecx +
jz loc_105AF0B  +
xor ebx ebx +
cmp [edi+330h] ebx +
jnz loc_105AF20  +
push esi  +
push [ebp+hWndFrom]  +
mov ecx edi +
call sub_1010957  +
cmp [ebp+arg_4] 4Eh +
mov esi eax +
jz loc_105AF36  +
cmp [ebp+arg_4] 7Bh +
jz loc_105B0ED  +
cmp [ebp+arg_4] 100h +
jz loc_105B09E  +
cmp [ebp+arg_4] 215h +
jz loc_105B08A  +
mov eax [ebp+arg_4] +
lea ecx [eax-200h] +
cmp ecx 0Eh +
jbe loc_105B074  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+hWndFrom]  +
call sub_100D797  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea edx [ecx+2ACh] +
xor esi esi +
push esi  +
call sub_1010881  +
test eax eax +
jz loc_101099D  +
mov edi [eax] +
cmp edi [ebp+arg_0] +
jnz loc_101099D  +
mov edx eax +
pop edi  +
mov eax edx +
pop esi  +
pop ebp  +
retn 4  +
dec eax  +
jnz loc_101098F  +
lea eax [ecx+2ACh] +
jmp loc_1010898  +
dec eax  +
jnz loc_1010984  +
lea eax [ecx+2BCh] +
jmp loc_1010898  +
inc esi  +
cmp esi 3 +
jl loc_1010966  +
jmp loc_1010979  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 0Ch +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push esi  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
jmp loc_1002328  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+0Ch] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_105C310  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
xor edi edi +
mov eax 101h +
mov esi ecx +
mov [ebp-4] edi +
cmp ebx eax +
ja loc_1010B5B  +
jz loc_102E1D0  +
cmp ebx 47h +
ja loc_1021B97  +
jz loc_1022B1C  +
xor eax eax +
inc eax  +
cmp ebx eax +
jz loc_102E1B9  +
cmp ebx 6 +
ja loc_1010DDF  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ebx  +
push dword ptr [esi+4]  +
call ds:DefWindowProcW  +
mov [ebp-4] eax +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+18h]  +
mov ecx [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1010A95  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
cmp edi 82h +
jz loc_105ABD8  +
xor ebx ebx +
cmp [esi+330h] ebx +
jnz loc_1010B02  +
mov eax edi +
sub eax 7 +
jz loc_105AD9A  +
dec eax  +
jz loc_105AD9A  +
sub eax 35h +
jz loc_1052B54  +
sub eax 11h +
jz loc_105ACE9  +
sub eax 0B2h +
jz loc_105AC6D  +
sub eax 13h +
jz loc_105AC3E  +
lea eax [edi-200h] +
cmp eax 0Eh +
jbe loc_105ABED  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push edi  +
push [ebp+hWnd]  +
call sub_100D797  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov eax 113h +
cmp esi eax +
ja loc_1010B9B  +
jz loc_1023702  +
mov eax esi +
sub eax 4Eh +
jnz loc_1010D6C  +
push dword ptr [ebp+14h]  +
mov ecx ebx +
call sub_1010F90  +
jmp loc_1002328  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push dword ptr [eax+30h]  +
call ds:IsWindowVisible  +
pop ebp  +
retn 4  +
***
mov eax 2CCh +
cmp ebx eax +
jbe loc_1034AAE  +
mov eax ebx +
sub eax 318h +
jz loc_1021A6B  +
dec eax  +
dec eax  +
jz loc_101F0B2  +
sub eax 125h +
jz loc_101ECD0  +
sub eax 25h +
jnz loc_1036934  +
call sub_101F81E  +
jmp loc_1010A5E  +
***
mov eax esi +
sub eax 201h +
jz loc_105B2E6  +
sub eax 3 +
jz loc_105B2E6  +
sub eax 3 +
jz loc_105B2E6  +
sub eax 11h +
jnz loc_10109C0  +
push dword ptr [ebp+14h]  +
mov ecx ebx +
push dword ptr [ebp+10h]  +
push esi  +
call sub_1011BFF  +
jmp loc_10109C0  +
***
jz loc_1021748  +
mov ecx eax +
dec ecx  +
jz loc_102E994  +
dec ecx  +
jz loc_102E9B9  +
sub ecx 5 +
jz loc_102E9AD  +
sub ecx 8 +
jz loc_1021BC8  +
sub ecx 5 +
jz loc_1021786  +
dec ecx  +
dec ecx  +
jz loc_102E9A0  +
sub ecx 0Bh +
jnz sub_10024B0  +
push ecx  +
push ecx  +
push 5B9h  +
push hWnd  +
call ds:SendMessageW  +
mov [ebp-4Ch] eax +
lea eax [ebp-54h] +
push eax  +
call ds:GetCursorPos  +
lea eax [ebp-64h] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetWindowRect  +
cmp di 1 +
jnz sub_10024B0  +
push dword ptr [ebp-50h]  +
lea eax [ebp-64h] +
push dword ptr [ebp-54h]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz sub_10024B0  +
mov eax edi +
shr eax 10h +
mov ecx 204h +
cmp ax cx +
jz loc_1010C8C  +
add ecx 0FFFFFFFDh +
cmp ax cx +
jnz sub_10024B0  +
cmp dword ptr [ebp-4Ch] 0 +
jnz sub_10024B0  +
push 3  +
pop eax  +
jmp loc_10024CD  +
***
cmp ebx 14h +
jz loc_1021C13  +
cmp ebx 1Ah +
jnz loc_1003CD0  +
push edx  +
mov ecx esi +
call sub_1020DB5  +
jmp loc_1003CBC  +
***
push esi  +
mov ecx ebx +
call sub_1010CC5  +
jmp loc_1011007  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
xor edi edi +
mov ebx ecx +
mov [ebp+var_4] edi +
cmp [ebx+330h] edi +
jnz loc_1010D19  +
push esi  +
mov esi [ebp+nIndex] +
cmp dword ptr [esi+0Ch] 3 +
jnz loc_1010D18  +
push dword ptr [ebx+14h]  +
call ds:GetWindowTheme  +
mov [ebp+nIndex] eax +
cmp eax edi +
jz loc_105944D  +
mov eax [esi+28h] +
mov edi ds:DrawThemeBackground +
test al 10h +
jnz loc_1059491  +
cmp dword ptr [ebx+320h] 0 +
jnz loc_10594B9  +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
jz loc_1035664  +
mov eax esi +
dec eax  +
jz loc_102C3AE  +
dec eax  +
jz loc_10267FA  +
sub eax 3 +
jz loc_1022B08  +
dec eax  +
dec eax  +
jz loc_105B20E  +
sub eax 4 +
jnz loc_10109C0  +
jmp loc_105B1FF  +
***
lea eax [ebp+Paint] +
push eax  +
push [ebp+hWndParent]  +
call ds:BeginPaint  +
mov [ebp+hdc] eax +
jmp loc_1002383  +
***
sub eax 36h +
jz loc_104E582  +
sub eax 7Ch +
jz loc_105B2D4  +
sub eax 11h +
jnz loc_10109C0  +
jmp loc_105B2AA  +
***
xor eax eax +
jmp loc_1002208  +
cmp [ebx+0D14h] esi +
jz loc_10021F8  +
push dword ptr [ebx+4]  +
call ds:UpdateWindow  +
jmp loc_1010D8C  +
***
cmp esi 1Ah +
jz loc_1010BC3  +
cmp esi 1Eh +
jz loc_1010BC3  +
cmp esi 47h +
jnz loc_10109C0  +
cmp dword ptr [ebx+334h] 0 +
jnz loc_105B28D  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 47h  +
jmp loc_10109C7  +
***
cmp ebx 8 +
jbe loc_105C3D7  +
cmp ebx 0Fh +
jz loc_1021A6B  +
cmp ebx 14h +
jz loc_1010A5E  +
cmp ebx 1Ah +
jz loc_1020E7D  +
cmp ebx 3Dh +
jnz loc_1010A4E  +
cmp dword ptr [ebp+14h] 0FFFFFFFCh +
jnz loc_1010A4E  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
call sub_1052C0A  +
mov edi eax +
neg edi  +
sbb edi edi +
inc edi  +
test edi edi +
jz loc_1010A61  +
jmp loc_1010A4E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1010E9A  +
cmp edx ebx +
ja loc_1010E9A  +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_1010EAA  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_1010EA1  +
cmp [eax] cx +
jz loc_1010E74  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1010E6A  +
cmp esi ecx +
jz loc_1010EA1  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
test eax eax +
jl loc_1010E94  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1007F97  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax 80070057h +
jmp loc_1010E54  +
mov [ebp+arg_4] 80070057h +
jmp loc_1010E7C  +
xor ecx ecx +
jmp loc_1010E80  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov esi ecx +
push 418h  +
push dword ptr [esi]  +
mov [ebp+var_4] edi +
call ds:SendMessageW  +
cmp [ebp+arg_0] 2 +
jz loc_1011156  +
jle loc_1010EEF  +
cmp [ebp+arg_0] 4 +
jg loc_1010EEF  +
lea ebx [eax-1] +
cmp ebx edi +
jge loc_102013A  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov edx ecx +
call sub_1010F1F  +
and eax [edx+0Ch] +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor eax eax +
sub ecx eax +
jnz loc_1021F90  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push edi  +
push 7  +
mov edx ecx +
xor eax eax +
pop ecx  +
lea edi [ebp+var_1C] +
mov [ebp+lParam] 20h +
stos   +
and [ebp+var_C] eax +
mov [ebp+var_1C] 10h +
pop edi  +
cmp [ebp+arg_4] eax +
jz loc_1010F70  +
mov [ebp+var_1C] 80000010h +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
push 43Fh  +
push dword ptr [edx]  +
call ds:SendMessageW  +
mov eax [ebp+var_C] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+8] +
mov ebx ecx +
xor edx edx +
mov ecx 0FFFFFD37h +
push edi  +
mov [ebp+var_4] edx +
cmp eax ecx +
jbe loc_1021825  +
cmp eax 0FFFFFD42h +
jz loc_1047B8A  +
cmp eax 0FFFFFDF6h +
jz loc_1047B10  +
cmp eax 0FFFFFFF1h +
jz loc_105A607  +
cmp eax 0FFFFFFF4h +
jnz loc_101100A  +
mov edx [esi] +
cmp edx [ebx+14h] +
jz loc_1010CB3  +
xor edi edi +
mov [ebp+arg_0] edi +
push edi  +
mov ecx ebx +
call sub_1010881  +
cmp [eax] edx +
jz loc_1011014  +
inc edi  +
cmp edi 3 +
jb loc_1010FE9  +
cmp [ebp+arg_0] 0 +
jz loc_101100A  +
push esi  +
call sub_1011022  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov [ebp+arg_0] 1 +
jmp loc_1010FF5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov eax [ecx+0Ch] +
push edi  +
xor edi edi +
dec eax  +
mov [ebp+var_4] edi +
jz loc_101106D  +
sub eax 10000h +
jnz loc_1059A2E  +
mov [ebp+var_4] 40000h +
cmp [esi+34Ch] edi +
jz loc_1011076  +
mov esi [esi+3BCh] +
cmp esi 2 +
jz loc_1011076  +
cmp esi 3 +
jz loc_1011076  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov [ebp+var_4] 20h +
jmp loc_1011064  +
test byte ptr [ecx+28h] 40h +
jnz loc_1059A97  +
jmp loc_1059A9E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_10] +
mov esi ecx +
push eax  +
push dword ptr [esi]  +
mov [ebp+var_1] 1 +
call ds:off_10110E0  +
test eax eax +
jz loc_1058EA7  +
mov edi ds:GetSystemMetrics +
push 31h  +
call edi  +
push 32h  +
mov ebx eax +
call edi  +
mov [ebp+var_C] eax +
cmp ebx [ebp+var_10] +
jnz loc_1058EB2  +
cmp eax [ebp+var_14] +
jnz loc_1058EB2  +
mov al [ebp+var_1] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B234C 0FFFFFFFFh +
jz loc_102681C  +
mov eax dword_10B234C +
test eax eax +
jz loc_105CC5E  +
pop ebp  +
jmp eax  +
***
cmp eax esi +
jz loc_1010D8C  +
mov edx [eax] +
sub edx esi +
jz loc_1034F66  +
dec edx  +
jnz loc_1009CC2  +
lea edx [ebp+hdc] +
push edx  +
push eax  +
push ecx  +
push dword ptr [ebx+0C04h]  +
lea ecx [ebx+98h] +
mov [ebp+hdc] esi +
call sub_1021CE0  +
mov [ebp+var_58] eax +
cmp [ebp+hdc] esi +
jz loc_1002264  +
mov ecx ebx +
call sub_10214C3  +
jmp loc_1002264  +
***
mov [ebp+var_4] eax +
jmp loc_1010EEF  +
cmp [ebp+arg_0] 4 +
jz loc_1058E9B  +
jmp loc_1020168  +
test eax eax +
jz loc_1020165  +
jmp loc_1020168  +
cmp [ebp+var_4] eax +
jl loc_1020174  +
jmp loc_1010EEF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov ecx [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov edx [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor eax eax +
xor esi esi +
or eax ecx +
or edx esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:off_10084F8  +
pop ebp  +
retn 4  +
***
mov eax edi +
sub eax 1Eh +
jz loc_105160F  +
sub eax 1Fh +
jz loc_104E79B  +
sub eax 0Bh +
jz loc_102D92A  +
sub eax 39h +
jz loc_102D920  +
dec eax  +
jnz loc_1035794  +
jmp loc_1058CE5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+SystemTime] +
push eax  +
mov esi ecx +
call ds:GetLocalTime  +
mov ax [ebp+SystemTime.wHour] +
mov [esi+1A8h] ax +
mov ax [ebp+SystemTime.wMinute] +
mov [esi+1AAh] ax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
push 0FFFFFFEBh  +
push ebx  +
call ds:GetWindowLongW  +
mov edi [ebp+0Ch] +
mov ecx eax +
mov eax 81h +
lea esi [eax+1] +
test ecx ecx +
jz loc_10199D1  +
cmp edi 4Eh +
ja loc_1013652  +
jz loc_101131D  +
mov eax edi +
dec eax  +
jz loc_1019CD9  +
sub eax 4 +
jz loc_101A1C0  +
sub eax 0Fh +
jz loc_1038C5C  +
dec eax  +
jz loc_105120E  +
sub eax 5 +
jz loc_10210F8  +
sub eax 16h +
jz loc_1062A6F  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edi  +
push ebx  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 81h +
cmp [ebp+0Ch] eax +
jz loc_1019B37  +
pop ebp  +
jmp loc_100F12E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 81h +
cmp [ebp+0Ch] eax +
jz loc_1017B51  +
pop ebp  +
jmp loc_100F12E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+Msg] 4Eh +
mov eax [ebp+lParam] +
jz loc_10140EC  +
push eax  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
call sub_101132C  +
jmp loc_10112AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 50h +
push ebx  +
mov ebx ecx +
mov ecx [eax] +
push esi  +
mov esi [ebx+24h] +
push edi  +
cmp ecx esi +
jz loc_1014780  +
cmp ecx [ebx+5Ch] +
jz loc_10119C8  +
cmp ecx [ebx+28h] +
jz loc_106287D  +
mov edx [eax+8] +
mov ecx 0DFh +
cmp edx ecx +
ja loc_103752A  +
jz loc_101A20E  +
sub edx 0D5h +
jz loc_1051517  +
dec edx  +
jz loc_104D26A  +
dec edx  +
jz loc_104E228  +
sub edx 6 +
jz loc_103A580  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax ebx +
sub eax 15h +
jz loc_1051221  +
sub eax 5 +
jz loc_1020EDC  +
sub eax 11h +
jz loc_10606BE  +
dec eax  +
jnz loc_100F209  +
jmp loc_10606B1  +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push ebx  +
push edi  +
call sub_10113DF  +
jmp loc_1011887  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
cmp dword ptr [ecx+40h] 0 +
jnz loc_106204F  +
mov eax [ebp+var_4] +
leave   +
retn 10h  +
***
cmp edx 1Ah +
jz loc_1020F2B  +
cmp edx 2Bh +
jz loc_1039097  +
cmp edx 4Eh +
jnz loc_101176C  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edx  +
push esi  +
call sub_10144BF  +
jmp loc_101177A  +
***
call ds:IsProcessDPIAware  +
cmp nNumerator 0FFFFFFFFh +
jz loc_102A9CE  +
cmp dword_10B1138 eax +
jnz loc_102A9CE  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
mov esi ds:SHELL32_68 +
push 1  +
push 0  +
lea eax [ebp+var_20] +
push eax  +
call esi  +
push 0  +
push 2000h  +
lea eax [ebp+var_20] +
push eax  +
call esi  +
mov eax [ebp+var_20] +
shl eax 14h +
sar eax 1Fh +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push 0FFFFFFEBh  +
push esi  +
call ds:GetWindowLongW  +
mov edi [ebp+0Ch] +
mov ebx [ebp+10h] +
mov ecx eax +
cmp edi 4Eh +
ja loc_1013612  +
jz loc_1014456  +
mov eax edi +
dec eax  +
jz loc_101A676  +
sub eax 13h +
jz loc_1037FE1  +
dec eax  +
jz loc_1011BE7  +
sub eax 5 +
jz loc_1011BE7  +
sub eax 2Ch +
jz loc_1037A71  +
push dword ptr [ebp+14h]  +
push ebx  +
push edi  +
push esi  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:DefWindowProcW  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push 0FFFFFFEBh  +
push esi  +
call ds:GetWindowLongW  +
mov edi [ebp+0Ch] +
mov ecx eax +
cmp edi 4Eh +
ja loc_1013756  +
jz loc_101436F  +
mov eax edi +
dec eax  +
jz loc_101B755  +
sub eax 4 +
jz loc_1016258  +
sub eax 0Fh +
jz loc_104BD38  +
dec eax  +
jz loc_1051265  +
sub eax 5 +
jz loc_1020F18  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edi  +
push esi  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1011618  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_C] +
and dword ptr [esi] 0 +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_C] 80004002h +
test eax eax +
jz loc_10116E9  +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1011700  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_10116E9  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push esi  +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_C] eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 0FFFFFFEBh  +
push esi  +
call ds:GetWindowLongW  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp edx 7Bh +
ja loc_10136B9  +
jz loc_1062C7A  +
cmp edx 15h +
ja loc_10113FA  +
jz loc_10512AA  +
mov eax edx +
dec eax  +
jz loc_101B12F  +
dec eax  +
jz loc_1050D05  +
sub eax 3 +
jz loc_101CB7A  +
sub eax 0Fh +
jz loc_103974A  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edx  +
push esi  +
call ds:DefWindowProcW  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
push 0FFFFFFEBh  +
push edi  +
call ds:GetWindowLongW  +
and dword ptr [ebp+8] 0 +
mov esi eax +
test esi esi +
jz loc_10117B0  +
mov eax [esi] +
lea ecx [ebp+8] +
push ecx  +
push offset stru_1002CB4  +
push esi  +
call dword ptr [eax]  +
mov edx [ebp+0Ch] +
mov ebx [ebp+14h] +
mov eax 81h +
cmp edx eax +
ja loc_10138F4  +
jz loc_101C4F6  +
mov eax edx +
dec eax  +
jz loc_101C350  +
sub eax 13h +
jz loc_104BF0E  +
sub eax 33h +
jz loc_104AB9C  +
sub eax 7 +
jz loc_1014591  +
sub eax 2Dh +
jz loc_1061C4E  +
push ebx  +
push dword ptr [ebp+10h]  +
push edx  +
push edi  +
call ds:DefWindowProcW  +
mov esi eax +
mov eax [ebp+8] +
test eax eax +
jz loc_1011811  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
push 0FFFFFFEBh  +
push edi  +
call ds:GetWindowLongW  +
mov ebx [ebp+0Ch] +
mov esi eax +
cmp ebx 4Eh +
ja loc_1013711  +
jz loc_1014603  +
mov eax ebx +
dec eax  +
jz loc_101C906  +
dec eax  +
jz loc_1050BA0  +
sub eax 12h +
jz loc_10424CF  +
dec eax  +
jz loc_10113C6  +
sub eax 5 +
jz loc_10113C6  +
sub eax 2Ch +
jz loc_1037AE2  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ebx  +
push edi  +
call ds:DefWindowProcW  +
***
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
push 0FFFFFFEBh  +
push edi  +
call ds:GetWindowLongW  +
mov esi eax +
test esi esi +
jz loc_101BEF5  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
push esi  +
call sub_10118CB  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+Msg] +
sub esp 18h +
push ebx  +
mov eax 81h +
push esi  +
push edi  +
cmp ecx eax +
ja loc_10143D5  +
jz loc_101AE5D  +
mov eax ecx +
dec eax  +
dec eax  +
jz loc_1050557  +
sub eax 12h +
jz loc_1038D9E  +
sub eax 33h +
jz loc_10398B9  +
sub eax 7 +
jz loc_1014529  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
test eax eax +
jnz loc_1052088  +
call sub_1011979  +
test eax eax +
jnz loc_1011970  +
push 1000h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_1052088  +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jz loc_10119B7  +
cmp [ebp+var_6] 3 +
jz loc_10119C3  +
cmp [ebp+var_6] 2 +
jz loc_10119C3  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
xor eax eax +
inc eax  +
jmp loc_10119B7  +
***
mov ecx ebx +
call sub_10119EC  +
test eax eax +
jz loc_1011394  +
push 0  +
push 0  +
mov ecx ebx +
call sub_1015EF7  +
jmp loc_1011394  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3E4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov eax [esi+54h] +
push edi  +
xor edi edi +
mov [ebp+var_3B4] edi +
cmp eax edi +
jz loc_1011A64  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [esi+54h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [esi+54h] +
mov ecx [eax] +
lea edx [ebp+var_3B0] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_1062425  +
cmp [ebp+var_3B0] edi +
jz loc_1062425  +
call sub_1011941  +
test eax eax +
jz loc_105217D  +
mov eax [ebp+var_3B0] +
cmp eax [esi+44h] +
jnz sub_101A095  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_3B4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+28h] 0 +
jz loc_1011A9E  +
push 0  +
call sub_1011451  +
push eax  +
push 401h  +
push dword ptr [esi+28h]  +
call ds:SendMessageW  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+38h] 0 +
jz loc_1011AC6  +
push 0  +
call sub_1011451  +
push eax  +
push 401h  +
push dword ptr [esi+38h]  +
call ds:SendMessageW  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
call sub_101142C  +
mov esi [ebp+arg_0] +
mov edi ds:MulDiv +
push 60h  +
push nNumerator  +
push dword ptr [esi]  +
call edi  +
push 60h  +
mov [esi] eax +
push dword_10B109C  +
push dword ptr [esi+4]  +
call edi  +
pop edi  +
mov [esi+4] eax +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [esi+38h]  +
call ds:SHLWAPI_178  +
jmp loc_100DF55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 3  +
push [ebp+arg_C]  +
mov esi ecx +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHLWAPI_178  +
push [ebp+arg_C]  +
mov eax [esi] +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+98h]  +
pop esi  +
pop ebp  +
retn 10h  +
***
push esi  +
mov ecx edi +
call sub_1011B2B  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 3  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHLWAPI_178  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1011AA5  +
push 3  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHLWAPI_178  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov ecx [ebx+0CF8h] +
mov [eax] ecx +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
xor ecx ecx +
cmp [eax+40h] ecx +
setnz cl  +
mov eax ecx +
pop ebp  +
retn 4  +
***
push 3  +
push dword ptr [ebp+14h]  +
push ebx  +
push edi  +
push esi  +
call ds:SHLWAPI_178  +
jmp loc_10114DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+Msg] 1Ah +
push edi  +
mov edi ecx +
jnz loc_10515D9  +
cmp dword ptr [edi+330h] 0 +
jnz loc_1011C25  +
lea ecx [edi+2CCh] +
call sub_101108A  +
cmp [ebp+lParam] 0 +
jnz loc_1021212  +
mov eax [edi+18h] +
pop edi  +
test eax eax +
jz loc_1011C47  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push eax  +
call ds:SendMessageW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_4] +
mov [ebp+lParam] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_8] eax +
lea eax [ebp+lParam] +
push eax  +
push offset sub_1011C88  +
push [ebp+hWndParent]  +
mov [ebp+var_4] ecx +
call ds:EnumChildWindows  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+hWnd]  +
mov esi [ebp+arg_4] +
mov eax [esi+0Ch] +
push dword ptr [eax+0CA8h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jz loc_1011CB8  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_0] +
mov [edi+84h] eax +
or dword ptr [esi+10h] 0FFFFFFFFh +
mov eax [edi+8Ch] +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
lea edx [ebp+arg_C] +
push edx  +
mov [ebp+arg_0] eax +
mov eax [edi+8Ch] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+34h]  +
mov ebx [ebp+arg_C] +
mov eax [ebp+arg_4] +
lea ecx [eax+ebx] +
add ecx [ebp+arg_0] +
test byte ptr [ebp+arg_8] 1 +
mov [esi+20h] ecx +
jnz loc_1062DCC  +
cmp dword ptr [edi+48h] 0 +
jz loc_1011D76  +
fld  ds:dbl_1011D88 +
fimul  [ebp+arg_0] +
call _ftol2_sse  +
mov ecx [ebp+arg_4] +
mov [esi+4] eax +
mov eax [ebp+arg_0] +
add ebx eax +
add ecx eax +
mov [esi+8] ebx +
mov [esi+18h] ecx +
and dword ptr [esi] 0FFFFFFEFh +
mov edx [ebp+arg_8] +
mov dword ptr [esi+224h] 418h +
mov eax [edi+8Ch] +
mov ecx [edi+44h] +
mov [edi+44h] edx +
test eax eax +
jz loc_1011D6D  +
cmp edx ecx +
jnz loc_1062E0C  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
fld  ds:dbl_1011D80 +
jmp loc_1011D2A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+1Ch] +
and dword ptr [eax] 0 +
cmp dword ptr [ebp+10h] 1Ah +
jnz loc_10510B4  +
mov ecx [ebp+8] +
push 0  +
push dword ptr [ebp+18h]  +
add ecx 0FFFFFFE8h +
push dword ptr [ebp+14h]  +
call sub_1020CCA  +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword_10B113C 0 +
jz loc_103302B  +
xor eax eax +
cmp dword_10B113C 1 +
setz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push offset dword_1011E74  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_1011E6E  +
push eax  +
lea eax [ebp+pvParam] +
push eax  +
push 0  +
push 1042h  +
call ds:SystemParametersInfoW  +
mov eax [ebp+pvParam] +
test eax eax +
jz loc_1011E62  +
call sub_1011DC8  +
test eax eax +
jnz loc_105C6AC  +
push 2001h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_105C6AC  +
push 1  +
push offset aTaskbaranimati  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
xor eax eax +
jmp loc_1011E62  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+4]  +
mov eax [eax+4] +
pop ebp  +
retn 4  +
***
push dword ptr [ebx+0CD8h]  +
mov ecx ebx +
push [ebp+hWndParent]  +
call sub_10341E3  +
cmp [ebp+wParam] esi +
jz loc_1011FE5  +
mov ecx ebx +
call sub_100DBEB  +
push esi  +
mov ecx ebx +
call sub_10342AE  +
jmp loc_10021D4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1011F68  +
push dword ptr [ebp+8]  +
call QISearch  +
test eax eax +
jge loc_1029EE1  +
pop ebp  +
jmp loc_1011F95  +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
xor ebx ebx +
push 4  +
xor eax eax +
mov eax [ebp+8] +
pop ecx  +
mov edi offset dword_100E7B4 +
cmps   +
jz loc_1029ED7  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_100E7A4 +
xor edx edx +
cmps   +
jz loc_1029ED7  +
mov ecx [ebp+10h] +
and [ecx] edx +
mov ebx 80004002h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push 30001h  +
push 127h  +
push [ebp+hWndParent]  +
call ds:SendMessageW  +
push esi  +
push esi  +
push dword ptr [ebx+3Ch]  +
call ds:SHLWAPI_479  +
jmp loc_1011F30  +
push esi  +
push 1  +
push dword ptr [ebx+3Ch]  +
call ds:SHLWAPI_479  +
jmp loc_1002264  +
***
cmp [ebp+10h] ecx +
jz loc_105B4D5  +
cmp [ebx+330h] ecx +
jnz loc_100DAC9  +
cmp [ebx+384h] ecx +
jnz loc_100DAC9  +
push 0  +
push 0BB8h  +
push 5  +
push dword ptr [ebx+10h]  +
call ds:SetTimer  +
jmp loc_100DAC9  +
***
push esi  +
push ecx  +
push 45Ah  +
push dword ptr [ebx+0C04h]  +
call ds:PostMessageW  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp hModule 0 +
jz loc_105CC16  +
push [ebp+lpProcName]  +
push hModule  +
call ds:__imp_GetProcAddress  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 82h +
jz loc_105C18B  +
push dword ptr [ebp+14h]  +
mov ecx [ebp+1Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1012128  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 68h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx [ebp+arg_C] +
mov eax 100h +
mov [ebp+hWnd] edi +
mov [ebp+var_4C] ecx +
cmp edx eax +
ja loc_102A5F2  +
jz loc_105C0A6  +
mov eax edx +
sub eax 7 +
jz loc_105C091  +
dec eax  +
jz loc_105C091  +
sub eax 7 +
jz loc_105C06A  +
sub eax 3Fh +
jz loc_105C03E  +
add edx 0FFFFFE00h +
cmp edx 0Eh +
jbe loc_105C0CE  +
push [ebp+var_4C]  +
push ebx  +
push [ebp+arg_4]  +
push edi  +
call sub_100D797  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push offset aExplorerAeroan  +
call SLGetWindowsInformationDWORD  +
test eax eax +
jl loc_105C674  +
xor eax eax +
cmp [ebp+var_4] eax +
setnz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 1 +
mov ecx [ebp+arg_0] +
jbe loc_101224A  +
mov edx [ebp+arg_8] +
movzx eax word ptr [edx] +
test ax ax +
jz loc_101224A  +
mov [ecx] ax +
inc ecx  +
inc ecx  +
inc edx  +
inc edx  +
dec [ebp+arg_4]  +
cmp [ebp+arg_4] 1 +
ja loc_1012232  +
xor eax eax +
mov [ecx] ax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1029EA5  +
cmp word ptr [eax] 0 +
jz loc_1029EA5  +
push esi  +
mov esi [ebp+arg_0] +
push eax  +
push 40h  +
lea eax [esi+4] +
push eax  +
call sub_1012221  +
mov dword ptr [esi] 2 +
pop esi  +
pop ebp  +
retn 8  +
***
lea ecx [ebp+var_C] +
jmp loc_100696E  +
add eax 4 +
jmp loc_100698B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
mov ebx ecx +
mov edx [ebx+0B0h] +
push esi  +
mov esi [ebp+arg_C] +
mov eax [esi+8] +
cmp [esi] edx +
jnz loc_1014140  +
cmp eax 0FFFFFF91h +
jbe loc_103BD47  +
cmp eax 0FFFFFF93h +
jz loc_104D25F  +
cmp eax 0FFFFFFF4h +
jnz loc_10123AF  +
push esi  +
call sub_1012409  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov eax [ebx] +
push esi  +
push [ebp+lpRect]  +
mov ecx ebx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+98h]  +
jmp loc_10122E3  +
***
mov edi edi +
push esi  +
lea esi [ecx+0D8h] +
mov eax [esi] +
test eax eax +
jnz loc_105F487  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1012335  +
lea eax [esi+1Ch] +
push eax  +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax [ebp+arg_0] +
and [ebp+var_34] 0 +
push esi  +
mov esi ecx +
mov [ebp+var_38] eax +
mov [ebp+lParam] 4 +
test eax eax +
jl loc_103DE61  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 104Bh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_103DE61  +
push [ebp+var_1C]  +
mov ecx esi +
call sub_101231E  +
pop esi  +
leave   +
retn 4  +
***
mov eax [ebp+1Ch] +
test eax eax +
jz loc_100D7E3  +
cmp dword ptr [eax+10h] 0 +
jz loc_100D7E3  +
xor eax eax +
jmp loc_100D7F4  +
***
cmp eax 0FFFFFFF8h +
jz loc_103C3CB  +
cmp eax 0FFFFFFFCh +
jz loc_104D255  +
cmp eax 0FFFFFFFDh +
jz loc_104D24D  +
cmp eax 0FFFFFFFEh +
jnz loc_10122E9  +
push esi  +
call sub_103E7C3  +
jmp loc_10122E3  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_1050DDE  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push edi  +
call sub_1012474  +
jmp loc_101242F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
dec eax  +
mov esi ecx +
jz loc_10123FC  +
dec eax  +
jz loc_1012435  +
sub eax 0FFFFh +
jnz loc_1038758  +
push edi  +
call sub_10382B4  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax [esi] +
push edi  +
call dword ptr [eax+10Ch]  +
push edi  +
mov ecx esi +
call sub_101244D  +
jmp loc_101242F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+1B4h] +
test byte ptr [esi] 1 +
jnz loc_1038546  +
shr dword ptr [esi] 1 +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_1012490  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_10124C6  +
mov eax [esi] +
and dword ptr [esi+19Ch] 0 +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_101581D  +
xor eax eax +
add [esi+19Ch] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_1015825  +
mov eax [esi+68h] +
add [esi+19Ch] eax +
push dword ptr [esi+140h]  +
mov ecx esi +
call sub_100F527  +
mov eax [ebp+arg_0] +
add eax 14h +
push eax  +
call ds:IsRectEmpty  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
mov ecx esi +
call sub_10124FC  +
mov eax 30030h +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ecx+1B4h] +
mov ecx [eax] +
add ecx ecx +
or ecx [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
call dword ptr [eax+12Ch]  +
test eax eax +
jnz loc_105F784  +
mov edi [esi+60h] +
imul edi [ebp+arg_0] +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [esi+0ECh] +
test ebx ebx +
jg loc_1013837  +
pop ebx  +
mov ecx [esi+148h] +
mov eax [ebp+arg_4] +
mov [eax+4] edi +
pop edi  +
mov [eax] ecx +
pop esi  +
leave   +
retn 8  +
***
push edi  +
call sub_1012574  +
jmp loc_100F274  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0CBh +
jz loc_101258B  +
xor eax eax +
pop ebp  +
retn 4  +
push eax  +
call sub_1091850  +
jmp loc_1012587  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 108h +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
and dword ptr [edi] 0 +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push offset dword_100671C  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHBindToFolderIDListParent  +
mov esi eax +
test esi esi +
jl loc_101260B  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_108] +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jl loc_1012602  +
push edi  +
push [ebp+arg_C]  +
lea eax [ebp+var_108] +
push eax  +
call StrRetToStrW  +
mov esi eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_10125A3  +
mov eax [ebp+arg_C] +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx edi +
call dword ptr [eax+20h]  +
push [ebp+arg_4]  +
test eax eax +
mov eax [esi] +
mov ecx esi +
jl loc_105F405  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push edi  +
call dword ptr [eax+0ACh]  +
mov esi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+4] 0FFFFFFFEh +
jz loc_106081C  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset dword_100671C  +
push dword ptr [ecx+34h]  +
push 0  +
call ds:__imp_SHBindToFolderIDListParent  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_10126D7  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
test dword ptr [ebp+14h] 8000h +
push esi  +
mov esi ecx +
jnz loc_101270A  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1012728  +
test eax eax +
jnz loc_10607E6  +
mov eax [ebp-4] +
test eax eax +
jnz loc_101271E  +
push dword ptr [ebp+14h]  +
mov ecx [esi+18h] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1012623  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+pv] +
push esi  +
xor esi esi +
cmp [eax+4] esi +
jge loc_10607A2  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1002D39  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1002A39  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1003475  +
***
test eax eax +
jge loc_10128E8  +
jmp loc_105DA4E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx ds:IUnknown_QueryService +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_10128F0 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_1013B54  +
push 4  +
pop ecx  +
mov edi offset dword_1036958 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_105D9FA  +
mov ecx [ebp+8] +
cmp [ecx+0A0h] edx +
jnz loc_10128D9  +
push 4  +
pop ecx  +
mov edi offset dword_1036948 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_103BB06  +
push 4  +
pop ecx  +
mov edi offset loc_10362A8 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_103BD99  +
push 4  +
pop ecx  +
mov edi offset dword_1036970 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_1038C7F  +
push 4  +
pop ecx  +
mov edi offset dword_1036980 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_103BFEC  +
push 4  +
pop ecx  +
mov edi offset dword_1036990 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_103BFEC  +
push 4  +
pop ecx  +
mov edi offset dword_10369B0 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_103CCD4  +
push 4  +
pop ecx  +
mov edi offset dword_10369A0 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_105DA0F  +
push 4  +
pop ecx  +
mov edi offset dword_10369D0 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_105DA24  +
push 4  +
pop ecx  +
mov edi offset dword_10369C0 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_1036AA6  +
push 4  +
pop ecx  +
mov edi offset dword_103B7C8 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_105DA39  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+20h]  +
call ebx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_100F1A5  +
***
sub dword ptr [esp+4] 8 +
jmp loc_100F065  +
***
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
mov dword ptr [eax] 20h +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+38h]  +
mov ebx eax +
cmp ebx [esi+54h] +
jz loc_1012AAB  +
push edi  +
mov ecx esi +
call sub_10170FD  +
or edi 0FFFFFFFFh +
mov [esi+54h] ebx +
cmp ebx 2 +
jz loc_101969D  +
test ebx ebx +
jnz loc_101A358  +
push 31h  +
call ds:GetSystemMetrics  +
mov edi [esi+54h] +
neg edi  +
sbb edi edi +
lea ebx [esi+50h] +
and edi 0FFFFFFFDh +
mov [ebx] eax +
mov [esi+4Ch] eax +
add edi 3 +
lea eax [ebp+var_4] +
push eax  +
push offset dword_100670C  +
push edi  +
call ds:SHELL32_727  +
test eax eax +
jl loc_1012A79  +
push dword ptr [ebx]  +
mov eax [ebp+var_4] +
push dword ptr [esi+4Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+80h]  +
test eax eax +
mov eax [ebp+var_4] +
jl loc_10196B6  +
mov [esi+48h] eax +
cmp dword ptr [esi+48h] 0 +
jz loc_1012AAA  +
mov ecx esi +
call sub_1015BB6  +
test eax eax +
jnz loc_10196C1  +
cmp dword ptr [esi+54h] 2 +
jz loc_1012AAA  +
push dword ptr [esi+48h]  +
push 0  +
push 1003h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+54h] 2 +
mov eax [esi+50h] +
push edi  +
mov [ebp+var_4] eax +
jz loc_10165E6  +
push ebx  +
push dword ptr [esi+0B0h]  +
call ds:GetDC  +
mov ebx eax +
xor edi edi +
cmp ebx edi +
jz loc_1012B39  +
push edi  +
push edi  +
push 31h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov edi ds:SelectObject +
push eax  +
push ebx  +
call edi  +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push offset dword_1012BB4  +
push ebx  +
call ds:GetTextExtentPointW  +
test eax eax +
jz loc_1012B24  +
mov eax [ebp+var_10.cy] +
cmp [ebp+var_4] eax +
jl loc_105EE44  +
push [ebp+var_8]  +
push ebx  +
call edi  +
push ebx  +
push dword ptr [esi+0B0h]  +
call ds:ReleaseDC  +
xor edi edi +
push 2Dh  +
call ds:GetSystemMetrics  +
mov ecx [esi+148h] +
lea eax [ecx+eax*2] +
mov ecx [esi+54h] +
mov [esi+5Ch] eax +
pop ebx  +
cmp ecx 2 +
jz loc_1012B5E  +
mov edx [esi+4Ch] +
add edx eax +
mov [esi+5Ch] edx +
mov edx [ebp+var_4] +
xor eax eax +
cmp ecx 2 +
setnz al  +
lea eax [eax+eax+1] +
imul eax [esi+14Ch] +
add eax edx +
mov [esi+60h] eax +
cmp ecx 2 +
jz loc_10165F3  +
cmp [ebp+arg_0] edi +
jz loc_1012BA0  +
xor edx edx +
xor ecx ecx +
inc edx  +
cmp [ebp+arg_0] edx +
lea eax [esi+0CCh] +
setz cl  +
cmp ecx [eax] +
jnz loc_105EE4C  +
cmp [esi+0CCh] edi +
jnz loc_105EE5F  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SendMessageW +
xor ebx ebx +
push ebx  +
push ebx  +
mov esi ecx +
push 0Bh  +
push dword ptr [esi+0B0h]  +
call edi  +
push ebx  +
push ebx  +
push 1009h  +
push dword ptr [esi+0B0h]  +
call edi  +
push ebx  +
push ebx  +
push 10A0h  +
push dword ptr [esi+0B0h]  +
call edi  +
mov ecx esi +
call sub_10129F0  +
push ebx  +
mov ecx esi +
call sub_1012AB4  +
push ebx  +
push dword ptr [esi+0DCh]  +
mov [ebp+var_30] ebx +
mov [ebp+var_28] ebx +
mov [ebp+wParam] ebx +
mov [ebp+var_18] ebx +
call ds:off_1002B68  +
cmp eax ebx +
jnz loc_10602EF  +
push ebx  +
push [ebp+wParam]  +
push 109Dh  +
push dword ptr [esi+0B0h]  +
call edi  +
lea ecx [esi+0E8h] +
mov [ebp+var_18] ebx +
mov [ebp+var_38] ebx +
call sub_10123E3  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:GetClientRect  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+5Ch]  +
test eax eax +
jz loc_1012C72  +
mov eax [esi+144h] +
sub [ebp+Rect.bottom] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
or [ebp+var_14] 0FFFFFFFFh +
or [ebp+var_20] 0FFFFFFFFh +
mov [ebp+var_40] eax +
mov [ebp+var_3C] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1060323  +
push ebx  +
push dword ptr [esi+0D0h]  +
mov [ebp+var_8] ebx +
mov [ebp+wParam] ebx +
mov [ebp+var_4] ebx +
call ds:off_1002B68  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_1012D5C  +
or [ebp+var_C] 0FFFFFFFFh +
cmp [ebp+var_40] ebx +
jz loc_1012CC9  +
mov eax [esi+60h] +
add eax [ebp+var_18] +
cmp eax [ebp+Rect.bottom] +
jg loc_1012D5C  +
cmp [ebp+var_38] ebx +
jnz loc_101D375  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+12Ch]  +
test eax eax +
jnz loc_1060341  +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+4] 0FFFFFFFEh +
jz loc_101D6E8  +
cmp [ebp+arg_0] ebx +
jnz loc_1060440  +
push [ebp+var_10]  +
mov ecx esi +
push [ebp+var_4]  +
call sub_1012F16  +
test eax eax +
jl loc_1012D3F  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_10] +
inc [ebp+var_4]  +
inc [ebp+var_C]  +
mov [eax+8] ecx +
mov ecx [esi+60h] +
add [ebp+var_18] ecx +
test byte ptr [eax+20h] 1 +
jnz loc_106044A  +
inc [ebp+var_28]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+12Ch]  +
test eax eax +
jnz loc_1060452  +
inc [ebp+wParam]  +
push [ebp+wParam]  +
push dword ptr [esi+0D0h]  +
call ds:off_1002B68  +
mov [ebp+var_10] eax +
cmp eax ebx +
jnz loc_1012CB5  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+12Ch]  +
test eax eax +
jnz loc_1060474  +
mov ecx [ebp+var_4] +
cmp ecx ebx +
mov eax [esi+0ECh] +
jl loc_1012D87  +
dec ecx  +
mov [ebp+arg_0] ecx +
cmp eax ebx +
jg loc_101D389  +
mov eax [ebp+var_30] +
mov ecx esi +
mov [esi+0B8h] eax +
call sub_1012DBF  +
push ebx  +
push 1  +
push 0Bh  +
push dword ptr [esi+0B0h]  +
call edi  +
push 1  +
push ebx  +
push dword ptr [esi+0B0h]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx ds:SendMessageW +
push esi  +
push edi  +
push 0  +
push 0  +
mov edi ecx +
push 1004h  +
push dword ptr [edi+0B0h]  +
call ebx  +
mov esi eax +
dec esi  +
js loc_1012E2B  +
push esi  +
mov ecx edi +
call sub_1012341  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1012DE5  +
lea ecx [ebp+var_C] +
push ecx  +
push dword ptr [eax+8]  +
mov ecx edi +
call sub_1012519  +
movzx eax [ebp+var_8] +
movzx ecx word ptr [ebp+var_C] +
shl eax 10h +
or eax ecx +
push eax  +
push esi  +
push 100Fh  +
push dword ptr [edi+0B0h]  +
call ebx  +
mov ecx [ebp+var_4] +
call sub_100F319  +
jmp loc_1012DE5  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push offset aStart_largemfu  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov esi ecx +
mov ecx edi +
call dword ptr [eax+14h]  +
mov [ebp+arg_0] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1012F03  +
mov eax [edi] +
push ebx  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_4] +
xor ebx ebx +
push ecx  +
mov ecx edi +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1012F0C  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
test eax eax +
jz sub_105F76F  +
mov eax [esi+58h] +
cmp eax ebx +
jz loc_1012EF9  +
push ebx  +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
push dword ptr [esi+44h]  +
push offset sub_1013062  +
push [ebp+var_8]  +
push [ebp+var_4]  +
push eax  +
call SHELL32_787  +
test eax eax +
jl loc_1012EF9  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call sub_10130D9  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
pop ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov [ebp+arg_0] ebx +
jmp loc_1012F02  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov eax [edi] +
mov esi ecx +
push 1  +
push dword ptr [esi+1A4h]  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
test eax eax +
jnz loc_105F7ED  +
mov eax [esi] +
push edi  +
mov ecx esi +
or ebx 0FFFFFFFFh +
mov [ebp+lParam] 7 +
call dword ptr [eax+100h]  +
push 0  +
push edi  +
mov ecx esi +
mov [ebp+var_20] eax +
call sub_1012646  +
mov [ebp+pv] eax +
test eax eax +
jz loc_1012FA0  +
mov eax [edi+14h] +
cmp eax ebx +
jnz loc_105F7FA  +
mov eax [ebp+arg_0] +
and [ebp+var_34] 0 +
mov [ebp+var_38] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 104Dh  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_1C] edi +
call ds:SendMessageW  +
push [ebp+pv]  +
mov ebx eax +
call ds:__imp_CoTaskMemFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov [ebp+var_20] eax +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
mov edi ecx +
push 1053h  +
push dword ptr [edi+0B0h]  +
xor ebx ebx +
inc ebx  +
mov [ebp+lParam] ebx +
call esi  +
mov [ebp+wParam] eax +
test eax eax +
jl loc_1013037  +
mov eax [ebp+arg_8] +
and [ebp+var_5C] 0 +
mov [ebp+var_48] eax +
lea eax [ebp+var_64] +
push eax  +
push 0  +
push 104Ch  +
push dword ptr [edi+0B0h]  +
mov [ebp+var_64] 2 +
call esi  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+wParam]  +
mov [ebp+Rect.left] ebx +
push 100Eh  +
push dword ptr [edi+0B0h]  +
call esi  +
test eax eax +
jz loc_1013037  +
push ebx  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [edi+0B0h]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 10h  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push eax  +
push esi  +
call sub_1012FAE  +
jmp loc_100F18F  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+hWnd]  +
call ds:IsWindow  +
test eax eax +
jz locret_10130D0  +
push 0  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
test eax eax +
jz locret_10130D0  +
and [ebp+var_4] 0 +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_100670C  +
push dword ptr [eax+48h]  +
call ds:off_1003E90  +
test eax eax +
jl loc_10130AF  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0  +
push [ebp+wParam]  +
push eax  +
call dword ptr [ecx+94h]  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 40Dh  +
push [ebp+hWnd]  +
call ds:PostMessageW  +
mov eax [ebp+var_4] +
test eax eax +
jz locret_10130D0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
mov esi ecx +
push offset dword_100670C  +
push dword ptr [esi+48h]  +
call ds:off_1003E90  +
test eax eax +
jl loc_1013115  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 1  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+94h]  +
test eax eax +
jl loc_105F727  +
mov eax [ebp+var_4] +
pop esi  +
test eax eax +
jz locret_1013123  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 8  +
***
mov ecx esi +
call sub_1012304  +
mov ebx ds:off_100F708 +
push edi  +
push offset loc_1035FD6  +
push dword ptr [esi+0D0h]  +
call ebx  +
mov eax [esi+0D0h] +
cmp eax edi +
jz loc_1013153  +
push eax  +
call ds:off_100F6DC  +
push edi  +
push offset loc_108ECDD  +
push dword ptr [esi+0DCh]  +
call ebx  +
mov eax [esi+0DCh] +
cmp eax edi +
jz loc_1013172  +
push eax  +
call ds:off_100F6DC  +
mov ecx [esi+0D0h] +
mov [esi+0D0h] edi +
lea eax [esi+0D4h] +
mov edx [eax] +
mov [eax] ecx +
mov [esi+0D0h] edx +
mov ecx [esi+0DCh] +
mov [esi+0DCh] edi +
lea eax [esi+0E0h] +
mov edx [eax] +
mov [eax] ecx +
push edi  +
mov ecx esi +
mov [ebp+var_4] edi +
mov [esi+0DCh] edx +
mov [ebp+var_8] edi +
call sub_1012BBD  +
lea ecx [ebp+var_8] +
call sub_10082DC  +
lea ecx [ebp+var_4] +
call sub_10082DC  +
jmp loc_100FCAD  +
***
push 0Ch  +
call ebx  +
and dword ptr [esi+158h] 0 +
mov [edi] eax +
mov dword ptr [esi+160h] 1 +
jmp loc_100F647  +
***
mov [eax] edi +
jmp loc_1013127  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+28h] edi +
jz loc_101324D  +
mov eax [esi+8] +
cmp eax offset aStarttop +
jz loc_101324A  +
cmp eax offset aStartbottom +
jz loc_101324A  +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
mov eax [esi+38h] +
add eax [esi+34h] +
mov ecx [ebp+Rect.bottom] +
add eax [esi+24h] +
sub ecx [ebp+Rect.top] +
cmp ecx eax +
jge loc_101324A  +
mov esi [esi+0F0h] +
add esi 0FFFFFFFEh +
cmp esi 2 +
ja loc_101324D  +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push esi  +
push edi  +
lea eax [ebp+rcSrc2] +
mov edi ecx +
push eax  +
mov ecx offset unk_10B1460 +
xor esi esi +
call sub_10135EE  +
push 50h  +
call ds:GetSystemMetrics  +
cmp eax 1 +
jnz loc_1056BFA  +
lea eax [ebp+rc2] +
push eax  +
push dword ptr [edi+18h]  +
call ds:GetWindowRgnBox  +
test eax eax +
jnz loc_1056BE9  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
push ebx  +
push esi  +
lea eax [ebp+var_30] +
push eax  +
mov esi ecx +
call sub_1013534  +
push dword ptr [esi+18h]  +
call ds:GetDC  +
xor ebx ebx +
mov [ebp+hDC] eax +
cmp eax ebx +
jz loc_1013486  +
push eax  +
call ds:CreateCompatibleDC  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_101347A  +
push edi  +
push 0Ah  +
pop ecx  +
xor eax eax +
push 28h  +
lea edi [ebp+var_84.bmiHeader.biWidth] +
stos   +
pop edi  +
inc eax  +
push 20h  +
mov [ebp+var_84.bmiHeader.biPlanes] ax +
pop eax  +
mov [ebp+var_84.bmiHeader.biSize] edi +
mov [ebp+var_84.bmiHeader.biBitCount] ax +
mov [ebp+var_84.bmiHeader.biCompression] ebx +
cmp [esi+28h] ebx +
jz loc_1040AB2  +
mov eax [esi+40h] +
mov [ebp+var_84.bmiHeader.biWidth] eax +
mov eax [esi+48h] +
push ebx  +
push ebx  +
neg eax  +
push ebx  +
mov [ebp+var_84.bmiHeader.biHeight] eax +
push ebx  +
lea eax [ebp+var_84] +
push eax  +
push ebx  +
call ds:CreateDIBSection  +
mov [ebp+var_1C] eax +
cmp eax ebx +
jz loc_1013470  +
push eax  +
push [ebp+var_4]  +
call ds:SelectObject  +
mov [ebp+var_20] eax +
mov eax [esi+20h] +
mov [ebp+var_14] eax +
mov eax [esi+24h] +
mov [ebp+var_10] eax +
lea eax [ebp+var_30] +
mov [ebp+var_50] eax +
lea eax [ebp+var_14] +
mov [ebp+var_4C] eax +
lea eax [ebp+var_28] +
mov [ebp+var_58] edi +
mov edi [ebp+var_4] +
mov [ebp+var_44] eax +
lea eax [ebp+var_8] +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov byte ptr [ebp+var_8] bl +
mov byte ptr [ebp+var_8+1] bl +
mov byte ptr [ebp+var_8+2] 0FFh +
mov byte ptr [ebp+var_8+3] 1 +
mov [ebp+var_54] ebx +
mov [ebp+var_48] edi +
mov [ebp+var_40] ebx +
mov [ebp+var_3C] eax +
mov [ebp+var_38] ebx +
mov [ebp+var_34] ebx +
cmp [esi+28h] ebx +
jz loc_105755D  +
mov ecx esi +
call sub_10131F5  +
test eax eax +
jz loc_1013607  +
mov eax [esi+38h] +
add eax [esi+34h] +
add [ebp+var_10] eax +
mov eax [esi+0F0h] +
xor edx edx +
push 2  +
inc edx  +
pop ecx  +
or edi 0FFFFFFFFh +
sub eax ecx +
mov [ebp+var_C] edx +
jz loc_103728F  +
sub eax ecx +
jz loc_1040AA8  +
mov [ebp+var_C] ebx +
push ebx  +
push [ebp+arg_0]  +
mov ecx esi +
push [ebp+var_4]  +
call sub_1013491  +
cmp [ebp+var_C] ebx +
jz loc_101342E  +
call ds:GetTickCount64  +
sub eax [esi+0F8h] +
push 12Ch  +
push eax  +
push 0FFh  +
mov byte ptr [ebp+arg_0] bl +
mov byte ptr [ebp+arg_0+1] bl +
call ds:MulDiv  +
or cl 0FFh +
sub cl al +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
push [ebp+var_4]  +
mov byte ptr [ebp+arg_0+2] cl +
mov ecx esi +
mov byte ptr [ebp+arg_0+3] bl +
call sub_1013491  +
mov [ebp+var_38] 2 +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
mov ecx esi +
call sub_1013258  +
mov edi eax +
lea eax [ebp+var_58] +
push eax  +
push dword ptr [esi+18h]  +
call ds:UpdateLayeredWindowIndirect  +
cmp edi ebx +
jnz loc_10575A8  +
push [ebp+var_20]  +
push [ebp+var_4]  +
call ds:SelectObject  +
push [ebp+var_1C]  +
call ds:DeleteObject  +
push [ebp+var_4]  +
call ds:DeleteDC  +
pop edi  +
push [ebp+hDC]  +
push dword ptr [esi+18h]  +
call ds:ReleaseDC  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+28h] ebx +
jz loc_1013529  +
cmp [esi+3Ch] ebx +
jz loc_1013529  +
push edi  +
push [ebp+arg_0]  +
call ds:CreateCompatibleDC  +
mov edi eax +
mov [ebp+var_4] edi +
cmp edi ebx +
jz loc_1013528  +
push dword ptr [esi+3Ch]  +
push edi  +
call ds:SelectObject  +
cmp [ebp+arg_4] 3 +
mov [ebp+var_8] eax +
jz loc_1039F4E  +
xor eax eax +
cmp [ebp+arg_4] 2 +
setz al  +
mov [ebp+arg_4] eax +
mov eax [ebp+arg_8] +
cmp eax ebx +
jnz loc_1037261  +
mov eax [esi+44h] +
push 0CC0020h  +
push 3  +
pop ecx  +
cdq   +
idiv  ecx +
imul eax [ebp+arg_4] +
push eax  +
push ebx  +
push edi  +
push dword ptr [esi+48h]  +
push dword ptr [esi+40h]  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
call ds:BitBlt  +
push [ebp+var_8]  +
push [ebp+var_4]  +
call ds:SelectObject  +
push [ebp+var_4]  +
call ds:DeleteDC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_10B10CC +
push ebx  +
cdq   +
push esi  +
push edi  +
mov esi ecx +
mov ebx [esi+20h] +
sub eax edx +
mov edi eax +
sar edi 1 +
mov [ebp+var_4] ebx +
call sub_10131F5  +
mov [ebp+var_8] eax +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
lea eax [ebp+rc] +
push eax  +
mov ecx offset unk_10B1460 +
call sub_10135EE  +
mov eax [esi+8] +
cmp eax offset aStarttop +
jz loc_1056B0B  +
cmp eax offset aStartbottom +
jz loc_1056B45  +
cmp dword ptr [esi+28h] 0 +
jz loc_1056BAA  +
mov eax dword_10B2138 +
dec eax  +
jz loc_10135AC  +
dec eax  +
dec eax  +
jnz loc_1056B78  +
call sub_10344B4  +
test eax eax +
jnz loc_1056BA0  +
mov eax [ebp+Rect.left] +
mov ecx [ebp+arg_0] +
mov edi [ebp+Rect.top] +
mov [ecx] eax +
mov eax [ebp+Rect.bottom] +
sub eax [esi+24h] +
sub eax edi +
cdq   +
sub eax edx +
sar eax 1 +
add eax edi +
cmp [ebp+var_8] 0 +
mov [ecx+4] eax +
jz loc_10135E2  +
sub eax [esi+34h] +
mov [ecx+4] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+lprc]  +
push dword ptr [ecx+0CF8h]  +
call sub_1002F19  +
pop ebp  +
retn 4  +
***
mov eax [esi+34h] +
mov [ebp+var_24] eax +
jmp loc_10133B9  +
***
mov edx edi +
mov eax 81h +
sub edx eax +
jz loc_101C644  +
dec edx  +
jz loc_105067A  +
sub edx 0A6h +
jz loc_104BF35  +
sub edx 1F0h +
jnz loc_10136A3  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 318h  +
push esi  +
call sub_1037FFC  +
jmp loc_10114EA  +
***
mov edx edi +
sub edx 7Eh +
jz loc_1050FA5  +
sub edx 3 +
jz loc_1019C2C  +
dec edx  +
jz loc_1050C95  +
sub edx 8Fh +
jz loc_104D10C  +
dec edx  +
dec edx  +
jz loc_104D12E  +
sub edx 205h +
jnz loc_10112A1  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 318h  +
push ebx  +
call sub_1039653  +
jmp loc_10112AF  +
***
sub edx 7CE9h +
jnz loc_10114DE  +
call sub_103D26E  +
jmp loc_10114EA  +
***
mov eax edx +
sub eax 7Eh +
jz loc_1050F92  +
sub eax 3 +
jz loc_101CA9C  +
dec eax  +
jz loc_1050730  +
sub eax 8Fh +
jz loc_1042168  +
dec eax  +
dec eax  +
jz loc_104260B  +
sub eax 22h +
jz loc_10393D4  +
sub eax 1E3h +
jnz loc_101176C  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 318h  +
push esi  +
call sub_10395D6  +
jmp loc_101177A  +
***
mov ecx ebx +
mov eax 81h +
sub ecx eax +
jz loc_101C70B  +
dec ecx  +
jz loc_10506E3  +
sub ecx 28Fh +
jz loc_10113C6  +
sub ecx 7 +
jz loc_10420E8  +
sub ecx 7CE9h +
jnz loc_1011879  +
mov ecx esi +
call sub_103D292  +
xor eax eax +
jmp loc_1011887  +
***
mov edx edi +
sub edx 7Bh +
jz loc_10616AA  +
sub edx 3 +
jz loc_1050F7F  +
sub edx 3 +
jz loc_101C29C  +
dec edx  +
jz loc_1050A6E  +
sub edx 296h +
jnz loc_1011559  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 318h  +
push esi  +
call sub_104BD01  +
jmp loc_1011567  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jl loc_105F6B5  +
cmp eax [ecx+4] +
jge loc_105F6B5  +
mov ecx [ecx] +
lea eax [ecx+eax*4] +
pop ebp  +
retn 4  +
***
push [ebp+var_4]  +
lea ecx [esi+0E8h] +
call sub_1013815  +
mov ecx [ebp+arg_0] +
cmp [eax] ecx +
jb loc_1013859  +
inc [ebp+var_4]  +
cmp [ebp+var_4] ebx +
jl loc_1013837  +
jmp loc_101254F  +
mov eax [esi+64h] +
sub eax [esi+60h] +
add edi eax +
jmp loc_101384C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 38h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 14h +
jmp loc_101389D  +
***
mov ecx edx +
mov eax 82h +
sub ecx eax +
jz loc_1050633  +
sub ecx 296h +
jz loc_104C874  +
sub ecx 0E9h +
jz loc_1061CB2  +
dec ecx  +
dec ecx  +
jz loc_1061C81  +
sub ecx 7BFEh +
jnz loc_10117F6  +
mov ecx esi +
call sub_1036DAD  +
push ebx  +
push dword ptr [ebp+10h]  +
push 8001h  +
jmp loc_10117FB  +
***
xchg eax edx +
sbb ebx 0FFFFFFF1h +
xor [ebx-30h] esi +
adc [ecx+ebx*4+2DC9A000h] ecx +
mov edi 909090E8h +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 44h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+44h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1050645  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1013A58  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 14h +
jmp loc_10139F5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1013B08  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1013AE9  +
***
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFECh +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
jmp loc_10127B7  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1002D39  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1002A39  +
***
mov eax [ebp+18h] +
mov eax [ebp+18h] +
mov ecx [ebp+8] +
push dword ptr [eax+8]  +
add ecx 0FFFFFFE8h +
call sub_10897FE  +
jmp loc_1013CB5  +
***
mov esi [ebp+8] +
mov eax [esi+30h] +
cmp eax ebx +
jz loc_1013BD6  +
push eax  +
lea ecx [esi-18h] +
call sub_1040FCB  +
mov [esi+30h] ebx +
lea ecx [esi-18h] +
call sub_1039D59  +
jmp loc_1014019  +
push ecx  +
lea ecx [esi-18h] +
call sub_1040FCB  +
mov [esi+30h] ebx +
mov eax offset dword_1013948 +
jmp loc_103CD0F  +
***
call ds:VariantToBooleanWithDefault  +
mov ecx [ebp+8] +
mov [ecx+6B4h] eax +
jmp loc_1014019  +
push ebx  +
push dword ptr [eax+6C0h]  +
jmp loc_1040F2E  +
mov esi [ebp+8] +
cmp [esi+9Ch] ebx +
jz loc_1013C4F  +
push ebx  +
push dword ptr [esi+6Ch]  +
lea eax [esi+5Ch] +
push eax  +
push ebx  +
lea ecx [esi-18h] +
call sub_1039ADD  +
jmp loc_1014019  +
cmp dword ptr [esi+6BCh] 3 +
jnz loc_1013C60  +
cmp [esi+6E8h] bl +
jnz loc_1013C6B  +
push ebx  +
push 3  +
lea ecx [esi-18h] +
call sub_1037C30  +
lea eax [esi+6B0h] +
cmp [eax] ebx +
jz loc_1014019  +
push 9  +
pop ecx  +
mov [eax] ebx +
xor eax eax +
mov [ebp-3Ch] ebx +
lea edi [ebp-38h] +
stos   +
push 0D09h  +
lea eax [ebp-3Ch] +
push eax  +
push dword ptr [esi+240h]  +
lea ecx [esi-18h] +
mov [ebp-2Ch] ebx +
call sub_10381F8  +
jmp loc_1014019  +
push ebx  +
push dword ptr [esi+6C4h]  +
mov ecx edi +
call sub_1037C30  +
mov [ebp-4] eax +
jmp loc_1014019  +
push 1  +
jmp loc_1013DFA  +
mov ecx [ebp+18h] +
mov ecx [ecx+8] +
mov [ebp+1Ch] ecx +
cmp ecx ebx +
jz loc_1013DD9  +
mov esi [ebp+8] +
lea edi [esi-18h] +
neg edi  +
lea ecx [esi-0Ch] +
sbb edi edi +
and edi ecx +
lea ecx [ebp-14h] +
push ecx  +
push ebx  +
push ebx  +
push 14Dh  +
push eax  +
push offset dword_1036958  +
push edi  +
call ds:SHLWAPI_484  +
test eax eax +
jl loc_1013DAA  +
cmp dword ptr [esi+6BCh] 3 +
jnz loc_1013D6F  +
push dword ptr [ebp-0Ch]  +
mov eax [ebp+1Ch] +
push dword ptr [eax+8]  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_1013D3A  +
mov edi [ebp+1Ch] +
push dword ptr [edi+8]  +
mov esi ds:__imp_CoTaskMemFree +
call esi  +
push dword ptr [edi+4]  +
call esi  +
push dword ptr [edi+0Ch]  +
call esi  +
jmp loc_1013D9B  +
cmp dword ptr [esi+6BCh] 3 +
jnz loc_1013D6F  +
lea ecx [esi-18h] +
call sub_104132C  +
test eax eax +
jz loc_1013D59  +
push 3  +
lea ecx [esi-18h] +
call sub_1041BEC  +
cmp dword ptr [esi+6BCh] 3 +
jnz loc_1013D6F  +
cmp [esi+9Ch] ebx +
jnz loc_1013D6F  +
xor eax eax +
inc eax  +
jmp loc_1013D71  +
xor eax eax +
push ebx  +
push dword ptr [ebp+18h]  +
push eax  +
push 14Ch  +
push offset dword_1013948  +
push offset dword_1036958  +
push edi  +
call ds:SHLWAPI_484  +
push ebx  +
push dword ptr [ebp+18h]  +
lea ecx [esi-18h] +
mov [ebp-4] eax +
call sub_1089A90  +
lea eax [ebp-14h] +
push eax  +
call ds:VariantClear  +
jmp loc_1014019  +
push ebx  +
push dword ptr [ebp+18h]  +
push ebx  +
push 14Ch  +
push offset dword_1013948  +
push offset dword_1036958  +
push edi  +
call ds:SHLWAPI_484  +
push ebx  +
push dword ptr [ebp+18h]  +
lea ecx [esi-18h] +
mov [ebp-4] eax +
call sub_1089A90  +
jmp loc_1014019  +
mov eax [ebp+8] +
push ebx  +
push dword ptr [eax+6C4h]  +
lea esi [eax-18h] +
mov ecx esi +
call sub_1037C30  +
mov ecx esi +
call sub_10502DB  +
jmp loc_1014019  +
push ebx  +
mov ecx [ebp+8] +
push dword ptr [ebp+18h]  +
add ecx 0FFFFFFE8h +
call sub_108A0B7  +
jmp loc_1013CB5  +
mov eax [ebp+18h] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1014019  +
push dword ptr [eax+8]  +
mov ecx [ebp+8] +
push dword ptr [eax+0Ch]  +
add ecx 0FFFFFFE8h +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_1039ADD  +
jmp loc_1013CB5  +
push ebx  +
push dword ptr [eax+6C4h]  +
jmp loc_1040F2E  +
mov ecx [ebp+18h] +
movsx ecx word ptr [ecx+8] +
mov eax [ebp+8] +
mov eax [eax+20h] +
mov [ebp-8] ecx +
mov [ebp-14h] eax +
mov [ebp-10h] ebx +
mov dword ptr [ebp-0Ch] 0E2h +
lea ecx [ebp-14h] +
jmp loc_10514FD  +
test dword ptr [edi+8] 20000h +
jz loc_1039018  +
push dword ptr [esi+30h]  +
lea ecx [esi-18h] +
call sub_1040FCB  +
mov eax [esi+1C8h] +
mov [esi+30h] eax +
mov eax offset dword_1013948 +
jmp loc_1039018  +
push dword ptr [esi+30h]  +
lea ecx [esi-18h] +
call sub_1040FCB  +
mov eax [esi+1A0h] +
mov [esi+30h] eax +
mov eax offset dword_1013948 +
jmp loc_103CD74  +
sbb [eax] bl +
add [eax] ebx +
sbb [eax] bl +
sbb [eax] bl +
add al [ebx] +
sbb [eax+ebx] al +
sbb [eax] bl +
add eax 18181818h +
sbb [eax] bl +
sbb [esi] al +
sbb [edi] al +
or [eax] bl +
sbb [ecx] cl +
or bl [eax] +
sbb [ebx] cl +
or al 0Dh +
push cs  +
movups xmm2 oword ptr [ecx] +
sbb [eax] bl +
sbb [eax] bl +
sbb [eax] bl +
sbb [eax] bl +
sbb [edx] dl +
adc ebx [eax] +
adc al 15h +
push ss  +
pop ss  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor ebx ebx +
push 4  +
pop ecx  +
mov esi offset stru_1014024 +
xor eax eax +
cmps   +
mov [ebp-4] ebx +
jz loc_10514DA  +
mov edi [ebp+0Ch] +
push 4  +
mov eax offset dword_1013948 +
pop ecx  +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1014019  +
mov ecx [ebp+10h] +
add ecx 0FFFFFED4h +
cmp ecx 38h +
ja loc_1014019  +
movzx ecx ds:byte_1013F14[ecx] +
jmp ds:off_1013EB0[ecx*4]  +
mov esi [ebp+8] +
xor eax eax +
lea edi [ebp-14h] +
stos   +
stos   +
stos   +
stos   +
mov eax [esi+6BCh] +
imul eax eax +
add eax esi +
mov ecx [eax+258h] +
mov [ebp-0Ch] ecx +
mov [ebp-14h] ecx +
mov edx [eax+25Ch] +
mov [ebp-8] edx +
mov [ebp-10h] edx +
add ecx [eax+250h] +
push 2  +
mov [ebp-0Ch] ecx +
add edx [eax+254h] +
lea eax [ebp-14h] +
push eax  +
push dword ptr [esi+20h]  +
mov [ebp-8] edx +
push ebx  +
call ds:MapWindowPoints  +
mov eax [ebp-0Ch] +
sub eax [ebp-14h] +
movzx ecx word ptr [ebp-14h] +
movzx eax ax +
shl eax 10h +
or eax ecx +
mov ecx [ebp+1Ch] +
mov [ecx+8] eax +
mov [ebp-4] ebx +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
push 3  +
pop eax  +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
push 0  +
push 0  +
push 12Fh  +
push offset dword_1014084  +
push offset dword_10128F0  +
push dword ptr [ecx+20h]  +
call ds:SHLWAPI_484  +
pop edi  +
test eax eax +
jl locret_1014080  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov [ecx] edx +
leave   +
retn 4  +
***
cmp dword ptr [eax+8] 0D5h +
jnz loc_1011309  +
and dword ptr [ecx+158h] 0 +
jmp loc_1011309  +
***
call SHELL32_902  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
mov ecx 0D7h +
cmp eax ecx +
ja loc_10143FF  +
jz loc_103DAED  +
sub eax 0C8h +
jz loc_1017EFE  +
dec eax  +
jz loc_1037D69  +
sub eax 5 +
jz loc_103A555  +
dec eax  +
dec eax  +
jz loc_1039E91  +
dec eax  +
dec eax  +
jnz loc_1054441  +
mov ecx ebx +
call sub_103D3A5  +
jmp loc_10122E3  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 48h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+78h] 0 +
jz loc_101421B  +
mov ecx [eax+78h] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
sub eax 0 +
jz loc_1014210  +
dec eax  +
jz loc_1055C3C  +
dec eax  +
mov eax [ebp+arg_4] +
jz loc_1014208  +
mov dword ptr [eax] 80000000h +
xor eax eax +
pop ebp  +
retn 8  +
mov dword ptr [eax] 60000000h +
jmp loc_1014202  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 40000000h +
jmp loc_1014202  +
mov eax 80004005h +
jmp loc_1014204  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+38h] 0 +
jz loc_10142AE  +
mov eax [esi+30h] +
mov [ebp+var_2C] eax +
mov eax [esi+34h] +
mov [ebp+var_28] eax +
mov eax dword_10B23D0 +
mov [ebp+var_14] eax +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+lParam] 30h +
mov [ebp+var_30] 11h +
call sub_1014039  +
test eax eax +
jl loc_10142AE  +
push edi  +
mov edi ds:SendMessageW +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 433h  +
push dword ptr [esi+38h]  +
call edi  +
cmp [ebp+var_4] 0 +
lea eax [esi+2CCh] +
jz loc_10427A3  +
mov [ebp+var_10] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 432h  +
push dword ptr [esi+38h]  +
call edi  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
lea esi [ecx+1A4h] +
mov eax [esi] +
test eax eax +
jnz loc_105F27B  +
pop esi  +
retn   +
***
dec ecx  +
jz loc_10606EF  +
dec ecx  +
jnz loc_100F209  +
jmp loc_10606DF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+4] 0FFFFFFFEh +
mov eax 80004005h +
jz loc_1014310  +
mov eax [ecx+24h] +
test eax eax +
jz loc_101D427  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset dword_100671C  +
push eax  +
call ds:__imp_SHBindToParent  +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1013A3B  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 4Eh  +
push esi  +
call sub_1014387  +
jmp loc_1011567  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
mov esi ecx +
mov eax [esi+30h] +
push edi  +
mov edi [ebp+lParam] +
mov ecx [edi+8] +
cmp [edi] eax +
jnz loc_101455F  +
cmp ecx 0FFFFFFF8h +
jz loc_106167B  +
cmp ecx 0FFFFFFFCh +
jz loc_106166F  +
cmp ecx 0FFFFFFFEh +
jz loc_106165E  +
push edi  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov eax 82h +
cmp ecx eax +
jz loc_1050587  +
cmp ecx 318h +
jz loc_1038D9E  +
cmp ecx 400h +
jnz loc_1011911  +
jmp loc_10612B3  +
***
cmp eax 0DFh +
jz loc_1017EE4  +
cmp eax 0E0h +
jz loc_1060671  +
cmp eax 0E1h +
jz loc_1060660  +
cmp eax 0E2h +
jz loc_106064A  +
cmp eax 0E3h +
jnz loc_1037DAC  +
mov ebx [ebx+3Ch] +
cmp ebx 6 +
jz loc_1014447  +
cmp ebx 7 +
jnz loc_103BD92  +
push [ebp+lpRect]  +
push edx  +
call ds:GetWindowRect  +
jmp loc_103BD92  +
***
push dword ptr [ebp+14h]  +
push ebx  +
push 4Eh  +
push esi  +
call sub_1014474  +
test eax eax +
jl loc_10114DE  +
jmp loc_10114EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_C] +
push edi  +
mov edi 80004005h +
test ecx ecx +
jz loc_10144B2  +
mov eax [ecx+8] +
sub eax 0D2h +
jz loc_103D40E  +
sub eax 5 +
jz loc_10397AE  +
sub eax 8 +
jz loc_10199C0  +
sub eax 4 +
jz loc_1037D56  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push esi  +
mov esi ecx +
mov ecx [eax+8] +
push edi  +
xor edi edi +
cmp ecx 0D2h +
jz loc_103D5CD  +
cmp ecx 0D7h +
jz loc_1041D34  +
cmp ecx 0D9h +
jz loc_10424ED  +
cmp ecx 0DFh +
jz loc_101A707  +
cmp ecx 0E1h +
jz loc_104213C  +
cmp ecx 0E4h +
jz loc_10412D8  +
cmp ecx 0FFFFFFF8h +
jz loc_104205D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov ecx [ebp+lParam] +
mov eax [ecx+8] +
sub eax 0D0h +
jz loc_1039E16  +
sub eax 0Fh +
jnz loc_1011911  +
mov eax [ebp+arg_0] +
push dword ptr [ecx+0Ch]  +
mov edx [eax] +
push eax  +
call dword ptr [edx+0Ch]  +
test eax eax +
jl loc_1011911  +
xor eax eax +
inc eax  +
jmp loc_1011923  +
***
cmp ecx 0CEh +
jz loc_101A64D  +
cmp ecx 0D7h +
jz loc_101A640  +
cmp ecx 0DFh +
jz loc_101A626  +
cmp ecx 0FFFFFFF8h +
jnz loc_10143BF  +
jmp loc_106167B  +
***
push ebx  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push 4Eh  +
push edi  +
call sub_10145A9  +
jmp loc_1011802  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+lParam] +
push esi  +
xor esi esi +
test ebx ebx +
jz loc_10145E9  +
mov eax [ebx+8] +
cmp eax 0C9h +
jz loc_104BEE1  +
cmp eax 0D7h +
jz loc_104BF03  +
cmp eax 0DFh +
jz loc_101A65A  +
cmp eax 0FFFFFFF8h +
jz loc_1061C11  +
push ebx  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push 4Eh  +
push edi  +
call sub_1014625  +
test eax eax +
jge loc_1011887  +
jmp loc_10113C6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_C] +
sub esp 10h +
push esi  +
mov eax 80004005h +
test edx edx +
jz loc_101465B  +
mov esi [edx+8] +
sub esi 0C9h +
jz loc_1042765  +
sub esi 0Eh +
jz loc_1042789  +
sub esi 8 +
jz loc_101A6C5  +
pop esi  +
leave   +
retn 10h  +
***
mov eax [ebp+hWnd] +
xor ebx ebx +
test byte ptr [eax+18h] 4 +
jz loc_10146B0  +
mov edi [ebp+hWnd] +
test byte ptr [edi+18h] 2 +
jz loc_1037C8B  +
test ebx ebx +
jnz loc_10146A9  +
test byte ptr [edi+18h] 40h +
jz loc_100DF55  +
lea edi [esi+94h] +
cmp [edi] ebx +
jnz loc_101469E  +
push ebx  +
push 0FFFFFFFCh  +
push dword ptr [esi+38h]  +
push 6  +
call ds:NotifyWinEvent  +
mov dword ptr [edi] 1 +
jmp loc_100DF55  +
xor eax eax +
jmp loc_100DF67  +
mov ecx esi +
call sub_10345AB  +
mov edi eax +
test edi edi +
jz loc_101466B  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+2Ch]  +
test eax eax +
jl loc_10146EB  +
cmp [ebp+var_4] 20000000h +
jz loc_10146DD  +
cmp [ebp+var_4] 80000000h +
jnz loc_10146EB  +
mov eax hWnd +
mov ecx [ebp+hWnd] +
xor ebx ebx +
mov [ecx+4] eax +
inc ebx  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
jmp loc_101466B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+lParam] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+lParam] +
push eax  +
push 0  +
mov esi ecx +
push 1608h  +
push dword ptr [esi+24h]  +
mov [ebp+lParam] 8 +
call ds:SendMessageW  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+24h]  +
call ds:GetClientRect  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_18] +
test eax eax +
jz loc_1014758  +
lea esi [ebp+Rect] +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
sub [eax+8] ecx +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_101476F  +
lea esi [ebp+Rect] +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
mov edx [eax+8] +
sub edx ecx +
mov [eax] edx +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
cmp dword ptr [eax+8] 0FFFFFFF4h +
jnz loc_1011394  +
push eax  +
mov ecx ebx +
call sub_103897A  +
jmp loc_1011396  +
***
mov edi eax +
jmp loc_10144B2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+18h]  +
call ds:GetClientRect  +
xor ebx ebx +
cmp [esi+1Ch] ebx +
jz loc_1014879  +
push edi  +
cmp [ebp+arg_0] ebx +
jz loc_101481A  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+X] ax +
xor eax eax +
lea edi [ebp+X+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+X] +
push eax  +
push ebx  +
push ebx  +
push 15Eh  +
push offset dword_10141A8  +
push offset dword_10128F0  +
push dword ptr [esi+4]  +
call ds:SHLWAPI_484  +
xor eax eax +
cmp word ptr [ebp+var_8] bx +
setz al  +
cmp eax ebx +
jz loc_1014878  +
mov ebx [esi+38h] +
mov eax [ebp+Rect.right] +
mov ecx [ebp+Rect.bottom] +
sub ecx [esi+30h] +
mov edi [esi+34h] +
sub eax ebx +
sub eax [ebp+Rect.left] +
push 2  +
cdq   +
sub eax edx +
sar eax 1 +
add ebx eax +
mov [ebp+X] eax +
sub ecx edi +
sub ecx [ebp+Rect.top] +
lea eax [ebp+X] +
push eax  +
push 0  +
push dword ptr [esi+18h]  +
add edi ecx +
mov [ebp-0Ch] ecx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] edi +
call ds:MapWindowPoints  +
mov eax [ebp+var_4] +
sub eax [ebp-0Ch] +
push 0  +
push eax  +
mov eax [ebp+var_8] +
sub eax [ebp+X] +
push eax  +
push dword ptr [ebp-0Ch]  +
push [ebp+X]  +
push dword ptr [esi+1Ch]  +
call ds:MoveWindow  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1002D39  +
***
mov eax [ecx+158h] +
retn   +
***
push dword ptr [ecx+18h]  +
call ds:GetAncestor  +
push eax  +
call ds:GetWindow  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
call sub_101142C  +
mov esi [ebp+arg_0] +
mov edi ds:MulDiv +
test esi esi +
jz loc_101492A  +
push 60h  +
push nNumerator  +
push dword ptr [esi]  +
call edi  +
mov [esi] eax +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_101493F  +
push 60h  +
push dword_10B109C  +
push dword ptr [esi]  +
call edi  +
mov [esi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push 40h  +
lea eax [ebp+Src] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_1014992  +
lea eax [ebp+Src] +
push eax  +
call ds:StrToIntW  +
test eax eax +
jz loc_1014992  +
mov [esi] eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B1148 0 +
push esi  +
jz loc_102AA1E  +
cmp dword_10B1144 0 +
jz loc_102AA1E  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
imul eax dword_10B1148 +
cdq   +
push 60h  +
pop esi  +
idiv  esi +
mov [ecx] eax +
mov eax [ecx+4] +
imul eax dword_10B1144 +
cdq   +
idiv  esi +
pop esi  +
mov [ecx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hWnd] 0 +
jz loc_1014A23  +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
cmp [ebp+arg_8] 0 +
jnz loc_1014A27  +
mov ecx [ebp+arg_4] +
not ecx  +
and eax ecx +
push eax  +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
pop ebp  +
retn 0Ch  +
or eax [ebp+arg_4] +
jmp loc_1014A17  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [ebp+wLanguage]  +
shr eax 4 +
inc eax  +
movzx eax ax +
push eax  +
push 6  +
push [ebp+hModule]  +
call ds:FindResourceExW  +
test eax eax +
jz loc_1014D89  +
push eax  +
push [ebp+hModule]  +
call ds:LoadResource  +
test eax eax +
jz loc_1014D89  +
push eax  +
call ds:LockResource  +
test eax eax +
jz loc_1014D82  +
and [ebp+arg_4] 0Fh +
jbe loc_1014D53  +
mov ecx [ebp+arg_4] +
dec ecx  +
movzx edx word ptr [eax] +
lea eax [eax+edx*2+2] +
jnz loc_1014D49  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_1014D79  +
push esi  +
movzx esi word ptr [eax] +
neg esi  +
sbb esi esi +
lea edx [eax+2] +
and esi edx +
mov [ecx] esi +
mov ecx [ebp+arg_10] +
pop esi  +
mov ax [eax] +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 14h  +
mov ecx [ebp+arg_10] +
test ecx ecx +
jnz loc_1014D6D  +
jmp loc_1014D73  +
mov eax 80004005h +
jmp loc_1014D75  +
call sub_107B7D7  +
jmp loc_1014D75  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_14] +
and dword ptr [edi] 0 +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push dword ptr [ebp+wLanguage]  +
push [ebp+arg_4]  +
push [ebp+hModule]  +
call sub_1014D05  +
mov ebx eax +
test ebx ebx +
jl loc_1014DFB  +
push esi  +
movzx esi word ptr [ebp+arg_14] +
lea eax [ebp+wLanguage] +
push eax  +
add esi esi +
lea eax [esi+2] +
push eax  +
push [ebp+arg_10]  +
call [ebp+arg_C]  +
mov ebx eax +
test ebx ebx +
jl loc_1014DFA  +
push esi  +
push [ebp+arg_4]  +
push dword ptr [ebp+wLanguage]  +
call memcpy  +
movzx eax word ptr [ebp+arg_14] +
mov edx dword ptr [ebp+wLanguage] +
add esp 0Ch +
xor ecx ecx +
mov [edx+eax*2] cx +
mov eax dword ptr [ebp+wLanguage] +
mov [edi] eax +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 0C0h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1014EC5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+1Ch]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_101A4CE  +
push edi  +
push dword ptr [esi+1Ch]  +
call ds:GetDC  +
push dword ptr [ebp+arg_4]  +
mov edi eax +
push dword ptr [ebp+arg_0]  +
mov ecx esi +
push edi  +
call sub_1014F8F  +
push edi  +
push dword ptr [esi+1Ch]  +
call ds:ReleaseDC  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push ebx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:CreateCompatibleDC  +
xor ebx ebx +
mov [ebp+var_8] eax +
mov [ebp+var_C] ebx +
cmp eax ebx +
jz loc_10150A8  +
push edi  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+1Ch]  +
call ds:GetClientRect  +
push 0Ah  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_60.bmiHeader.biWidth] +
stos   +
mov eax [ebp+Rect.right] +
mov edi [ebp+var_8] +
mov [ebp+var_60.bmiHeader.biWidth] eax +
mov eax [ebp+Rect.bottom] +
mov [ebp+var_60.bmiHeader.biHeight] eax +
xor eax eax +
push 20h  +
inc eax  +
mov [ebp+var_60.bmiHeader.biPlanes] ax +
pop eax  +
push ebx  +
push ebx  +
mov [ebp+var_60.bmiHeader.biBitCount] ax +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
lea eax [ebp+var_60] +
push eax  +
push edi  +
mov [ebp+var_60.bmiHeader.biSize] 28h +
mov [ebp+var_60.bmiHeader.biCompression] ebx +
call ds:CreateDIBSection  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_1015017  +
push eax  +
push edi  +
call ds:SelectObject  +
mov [ebp+var_C] eax +
cmp [ebp+arg_4] bl +
jz loc_101502A  +
push dword ptr [ebp+arg_4]  +
mov ecx esi +
push dword ptr [esi+50h]  +
push edi  +
call sub_10150B3  +
cmp [ebp+arg_8] bl +
jz loc_101503D  +
push dword ptr [ebp+arg_8]  +
mov ecx esi +
push dword ptr [esi+4Ch]  +
push edi  +
call sub_10150B3  +
xor eax eax +
mov [ebp+var_1C] ebx +
lea edi [ebp+var_18] +
stos   +
mov eax [esi+38h] +
mov [ebp+var_24] eax +
mov eax [esi+34h] +
push 2  +
mov [ebp+var_20] eax +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_8]  +
lea eax [ebp+var_24] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] bl +
push dword ptr [esi+1Ch]  +
mov byte ptr [ebp+var_4+1] bl +
mov byte ptr [ebp+var_4+2] 0FFh +
mov byte ptr [ebp+var_4+3] 1 +
call ds:UpdateLayeredWindow  +
pop edi  +
cmp [ebp+var_C] ebx +
jz loc_1015091  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call ds:SelectObject  +
cmp [ebp+var_10] ebx +
jz loc_101509F  +
push [ebp+var_10]  +
call ds:DeleteObject  +
push [ebp+var_8]  +
call ds:DeleteDC  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4h +
push ebx  +
push esi  +
mov esi ecx +
push dword ptr [esi+1Ch]  +
call ds:GetDC  +
push eax  +
mov [ebp+hDC] eax +
call ds:CreateCompatibleDC  +
xor ebx ebx +
mov [ebp+var_4] eax +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
cmp eax ebx +
jz loc_10151DC  +
push edi  +
cmp [esi+58h] ebx +
jz loc_10151F4  +
cmp [ebp+arg_4] 0FFFFFFFFh +
jz loc_10151F4  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+1Ch]  +
call ds:GetClientRect  +
push 0Ah  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_78.bmiHeader.biWidth] +
stos   +
mov eax [ebp+Rect.right] +
mov [ebp+var_78.bmiHeader.biWidth] eax +
mov eax [ebp+Rect.bottom] +
mov [ebp+var_78.bmiHeader.biHeight] eax +
xor eax eax +
push 20h  +
inc eax  +
mov [ebp+var_78.bmiHeader.biPlanes] ax +
pop eax  +
push ebx  +
push ebx  +
mov [ebp+var_78.bmiHeader.biBitCount] ax +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
lea eax [ebp+var_78] +
push eax  +
push [ebp+var_4]  +
mov [ebp+var_78.bmiHeader.biSize] 28h +
mov [ebp+var_78.bmiHeader.biCompression] ebx +
call ds:CreateDIBSection  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_101515F  +
push eax  +
push [ebp+var_4]  +
call ds:SelectObject  +
mov [ebp+var_C] eax +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
push 12001h  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push eax  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push eax  +
push ebx  +
push ebx  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
push dword ptr [esi+58h]  +
call ds:off_10151F0  +
mov al [ebp+arg_8] +
mov ecx [esi+38h] +
mov byte ptr [ebp+arg_4+2] al +
mov eax [esi+34h] +
mov byte ptr [ebp+arg_4] bl +
mov byte ptr [ebp+arg_4+1] bl +
mov byte ptr [ebp+arg_4+3] bl +
push [ebp+arg_4]  +
push eax  +
push ecx  +
push ebx  +
push ebx  +
push [ebp+var_4]  +
push eax  +
push ecx  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
call ds:GdiAlphaBlend  +
pop edi  +
cmp [ebp+var_C] ebx +
jz loc_10151C5  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call ds:SelectObject  +
cmp [ebp+var_10] ebx +
jz loc_10151D3  +
push [ebp+var_10]  +
call ds:DeleteObject  +
push [ebp+var_4]  +
call ds:DeleteDC  +
push [ebp+hDC]  +
push dword ptr [esi+1Ch]  +
call ds:ReleaseDC  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
cmp dword_10B1154 ebx +
jz loc_1015187  +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [esi+1Ch]  +
call ds:GetClientRect  +
push 0Ah  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_A4.bmiHeader.biWidth] +
stos   +
mov eax [ebp+var_1C] +
mov [ebp+var_A4.bmiHeader.biWidth] eax +
mov eax [ebp+var_18] +
mov [ebp+var_A4.bmiHeader.biHeight] eax +
xor eax eax +
push 20h  +
inc eax  +
mov [ebp+var_A4.bmiHeader.biPlanes] ax +
pop eax  +
push ebx  +
push ebx  +
mov [ebp+var_A4.bmiHeader.biBitCount] ax +
lea eax [ebp+var_4C] +
push eax  +
push ebx  +
lea eax [ebp+var_A4] +
push eax  +
push [ebp+var_4]  +
mov [ebp+var_A4.bmiHeader.biSize] 28h +
mov [ebp+var_A4.bmiHeader.biCompression] ebx +
call ds:CreateDIBSection  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_1015277  +
push eax  +
push [ebp+var_4]  +
call ds:SelectObject  +
mov [ebp+var_C] eax +
mov eax [ebp+var_18] +
sub eax [esi+34h] +
mov ecx [esi+24h] +
sub eax [ebp+var_20] +
push [ebp+var_4]  +
cdq   +
sub eax edx +
mov edi eax +
mov eax [ebp+var_1C] +
sub eax [esi+38h] +
sar edi 1 +
sub eax [ebp+var_24] +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
mov [ebp+var_2C] eax +
mov eax [esi+2Ch] +
add eax edi +
mov [ebp+var_30] ecx +
mov [ebp+var_8] eax +
call ds:CreateCompatibleDC  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jz loc_1015187  +
push dword_10B1154  +
push eax  +
call ds:SelectObject  +
push 0CC0020h  +
push ebx  +
push ebx  +
push [ebp+arg_4]  +
mov [ebp+var_14] eax +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+40h]  +
push [ebp+var_8]  +
push [ebp+var_30]  +
push [ebp+var_4]  +
call ds:BitBlt  +
cmp dword ptr [esi+38h] 30h +
jz loc_101537A  +
mov eax dword_10B1158 +
cmp eax ebx +
jz loc_1015360  +
lea ecx [ebp+var_48] +
push ecx  +
push 18h  +
push eax  +
call ds:GetObjectW  +
test eax eax +
jz loc_1015360  +
push dword_10B1158  +
push [ebp+arg_4]  +
call ds:SelectObject  +
mov ecx [ebp+var_18] +
mov edx [ebp+var_1C] +
mov byte ptr [ebp+var_8] bl +
mov byte ptr [ebp+var_8+1] bl +
mov byte ptr [ebp+var_8+2] 0FFh +
mov byte ptr [ebp+var_8+3] 1 +
push [ebp+var_8]  +
lea eax [edi+edi] +
push [ebp+Rect.left]  +
sub ecx eax +
push [ebp+var_44]  +
sub ecx [ebp+var_20] +
mov eax [ebp+var_2C] +
push ebx  +
push ebx  +
push [ebp+arg_4]  +
push ecx  +
lea ecx [eax+eax] +
sub edx ecx +
sub edx [ebp+var_24] +
push edx  +
push edi  +
push eax  +
push [ebp+var_4]  +
call ds:GdiAlphaBlend  +
push [ebp+var_14]  +
push [ebp+arg_4]  +
call ds:SelectObject  +
push [ebp+arg_4]  +
call ds:DeleteDC  +
jmp loc_1015187  +
cmp dword ptr [esi+34h] 30h +
jnz loc_10152F5  +
jmp loc_1015360  +
***
push offset aAdvanced  +
push 40000020h  +
push 80000001h  +
call sub_1015454  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
call SHELL32_100  +
cmp eax 1 +
jz loc_1015480  +
cmp eax 2 +
jz loc_105CFDC  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+lpszFile]  +
push [ebp+arg_0]  +
call sub_1015489  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+lpszFile]  +
push [ebp+arg_0]  +
call sub_10154B4  +
cmp eax 0FFFFFFFFh +
jnz loc_105CFBA  +
mov eax [ebp+arg_C] +
and eax 1 +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpszFile] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push eax  +
push offset szDir  +
lea eax [ebp+pszSubKey] +
push eax  +
mov [ebp+pcbData] 104h +
call PathCombineW  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
lea eax [ebp+pdwType] +
push eax  +
push edi  +
lea eax [ebp+pszSubKey] +
push eax  +
push esi  +
call SHGetValueW  +
pop edi  +
pop esi  +
test eax eax +
jz loc_105CF9A  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_10155D8  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 14h +
jmp loc_10156D7  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 2Ch +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 5  +
push esi  +
call sub_1015707  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0B0h] +
test eax eax +
jz loc_101577B  +
mov eax [ebp+arg_C] +
mov ecx [esi+8Ch] +
mov edx [esi+94h] +
push ebx  +
push edi  +
movsx edi ax +
shr eax 10h +
movsx ebx ax +
mov eax [esi+88h] +
add ecx eax +
sub edi ecx +
mov ecx [esi+90h] +
push 20Ch  +
add edx ecx +
sub ebx edx +
push ebx  +
push edi  +
push ecx  +
push eax  +
push 0  +
push dword ptr [esi+0B0h]  +
call ds:SetWindowPos  +
push edi  +
mov ecx esi +
call sub_100F527  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
test eax eax +
jnz loc_1015782  +
cmp [esi+1C0h] eax +
jnz loc_1015782  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
push ebx  +
mov ecx esi +
call sub_101579C  +
push dword ptr [esi+1C0h]  +
call sub_1012BBD  +
jmp loc_1015779  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ecx+0ECh] +
mov edx edi +
test edx edx +
jnz loc_10157BB  +
cmp [ecx+1A8h] edi +
ja loc_105F809  +
mov esi [ecx+60h] +
xor eax eax +
test esi esi +
jle loc_10157E2  +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ecx+64h] +
imul ebx edx +
sub eax ebx +
cdq   +
idiv  esi +
pop ebx  +
sub eax [ecx+0B8h] +
sub eax edi +
js loc_105F80F  +
pop edi  +
mov [ecx+0BCh] eax +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
push esi  +
mov esi ecx +
inc eax  +
cmp dword ptr [esi] 0 +
jnz loc_105D8B6  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+84h] 0 +
jz loc_101582C  +
pop ebp  +
jmp loc_101ED0D  +
***
mov eax [esi+68h] +
jmp loc_10124A8  +
xor eax eax +
jmp loc_10124C0  +
***
pop ebp  +
retn 4  +
***
push edi  +
push offset stru_10148A8  +
push 1  +
push ebx  +
push offset stru_10148B8  +
call ds:__imp_CoCreateInstance  +
cmp eax ebx +
jl loc_100FA3B  +
mov edi [edi] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_10148C8  +
push edi  +
call dword ptr [eax]  +
cmp eax ebx +
jl loc_100FA3B  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 2  +
push 2  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jge loc_100F9B5  +
jmp loc_100FA3B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz locret_1015927  +
push esi  +
push 38h  +
xor esi esi +
lea eax [ebp+var_3C] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
push 4  +
lea ecx [ebp+var_4] +
mov [ebp+var_24] ecx +
lea eax [ebp+arg_4] +
lea ecx [ebp+arg_8] +
mov [ebp+var_34] eax +
pop eax  +
mov [ebp+var_14] ecx +
lea ecx [ebp+var_44] +
push ecx  +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_4] 5 +
push dword_10B247C  +
mov [ebp+var_44] offset unk_10B2488 +
push dword_10B2478  +
mov [ebp+var_40] esi +
mov [ebp+var_3C] 10h +
mov [ebp+var_38] esi +
mov [ebp+var_30] esi +
mov [ebp+var_2C] eax +
mov [ebp+var_28] esi +
mov [ebp+var_20] esi +
mov [ebp+var_1C] eax +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] eax +
mov [ebp+var_8] esi +
call ds:EventWrite  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov dword ptr [esi+64h] 1 +
call sub_1034C6B  +
mov ecx [esi+78h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx esi +
call sub_1019585  +
push hWnd  +
lea edi [esi+84h] +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [esi+7Ch] +
push eax  +
lea eax [esi+80h] +
push eax  +
call sub_10189FD  +
push esi  +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
push 0  +
push [ebp+var_4]  +
call sub_1017489  +
pop edi  +
pop esi  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
mov edi ecx +
mov esi 40Dh +
push 3  +
push esi  +
push esi  +
push dword ptr [edi-4]  +
lea eax [ebp-1Ch] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_10159A3  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push 0  +
lea eax [ebp+pvParam] +
push eax  +
push 5Ch  +
push 1Fh  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_10159FD  +
lea eax [ebp+pvParam] +
push eax  +
call ds:CreateFontIndirectW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
xor eax eax +
jmp loc_10159F1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+48h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1015A1F  +
push eax  +
call ds:DeleteObject  +
push edi  +
call sub_10159C1  +
mov edi ds:SendMessageW +
push ebx  +
push eax  +
push 30h  +
push dword ptr [esi+24h]  +
mov [esi+48h] eax +
call edi  +
mov eax [esi+28h] +
cmp eax ebx +
jz loc_1015A47  +
push ebx  +
push dword ptr [esi+48h]  +
push 30h  +
push eax  +
call edi  +
pop edi  +
cmp [ebp+arg_4] ebx +
jz loc_1015A62  +
push 1  +
push ebx  +
push dword ptr [esi+20h]  +
call ds:InvalidateRect  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_1015EF7  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call ds:__imp_IUnknown_Set  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
test ecx ecx +
jnz loc_104D437  +
pop ebp  +
retn 4  +
***
test esi esi +
jz loc_1015B40  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
xor eax eax +
jmp loc_1002D61  +
***
call sub_1015B5C  +
mov eax dword_10B10A4 +
retn   +
***
call sub_1015B80  +
cmp dword_10B10A4 0FFFFFFFFh +
jz near ptr loc_102AE45+1  +
cmp dword_10B1170 eax +
jnz near ptr loc_102AE45+1  +
retn   +
***
mov edi edi +
push esi  +
xor esi esi +
inc esi  +
test byte ptr dword_10B1178 1 +
jz loc_102ADE1  +
cmp dword_10B1174 0FFFFFFFFh +
jz loc_102ADF3  +
mov eax dword_10B1174 +
test eax eax +
jz loc_1015BAD  +
call eax  +
mov esi eax +
mov eax esi +
pop esi  +
retn   +
***
cmp dword ptr [ecx+54h] 2 +
jnz loc_1017D55  +
call sub_10165DB  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
jz loc_101EF20  +
mov eax esi +
sub eax 40Ah +
jz loc_10267EF  +
dec eax  +
jz loc_105B47B  +
sub eax 9 +
jnz loc_105B457  +
mov eax [ebx+28h] +
jmp loc_1002328  +
***
add ebx 0E00h +
cmp [ebx] esi +
jle loc_10021F8  +
jmp loc_1009DF8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
mov esi ecx +
call ds:GetWindowRect  +
mov eax dword_10B2138 +
dec eax  +
jz loc_1056680  +
dec eax  +
dec eax  +
jnz loc_1015C79  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
cmp eax [esi+24h] +
jl loc_1056676  +
mov eax offset aStartmiddle +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov edi ecx +
xor ebx ebx +
cmp [edi+24h] ebx +
jnz loc_1015CE1  +
cmp [edi+0C50h] ebx +
jnz loc_1015CE1  +
push 50h  +
call ds:GetSystemMetrics  +
cmp eax 1 +
jg loc_1015CCC  +
mov [ebp+arg_0] ebx +
push esi  +
cmp [ebp+arg_0] ebx +
jnz sub_1056AF7  +
xor esi esi +
push esi  +
mov ecx edi +
call sub_1015CEC  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push edi  +
mov esi ecx +
call sub_1015D2A  +
test eax eax +
jnz loc_1015D20  +
xor edi edi +
test edi edi +
jnz loc_1056A8B  +
lea eax [esi+0C68h] +
cmp dword ptr [eax] 0 +
jnz loc_1056AE1  +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov edi [ebp+arg_0] +
jmp loc_1015D03  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push ebx  +
push esi  +
mov esi ds:GetSystemMetrics +
push edi  +
push 50h  +
mov edi ecx +
xor ebx ebx +
call esi  +
cmp eax 1 +
jg loc_10569FB  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+0CD8h] +
push edi  +
push 1  +
shl eax 4 +
lea eax [eax+esi+44h] +
push eax  +
lea edi [esi+0CE8h] +
push edi  +
push 0  +
call sub_1034D92  +
mov eax [esi+0CD8h] +
shl eax 4 +
lea esi [eax+esi+44h] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov eax [esi+8] +
sub eax edx +
mov [esi] eax +
jmp loc_101F6DE  +
mov eax [esi] +
add eax edx +
mov [esi+8] eax +
jmp loc_101F6DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B229C 0FFFFFFFFh +
jz loc_102A866  +
mov eax dword_10B229C +
test eax eax +
jz loc_105CCB3  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push esi  +
lea esi [ecx+0E08h] +
cmp dword ptr [esi] 0 +
jz loc_102A0E0  +
mov eax [esi] +
test eax eax +
jz loc_1015DF7  +
push eax  +
call ds:off_1015DA8  +
push esi  +
push offset fnEnum  +
push 0  +
push 0  +
call ds:EnumDisplayMonitors  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
mov ecx [ebp+arg_C] +
call sub_1003DE4  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push 0FFFFFFF0h  +
push dword ptr [esi+4]  +
call ds:GetWindowLongW  +
test eax 20000000h +
jnz loc_1057A6F  +
xor ebx ebx +
cmp [esi+0C50h] ebx +
jnz loc_1057A7F  +
cmp pvParam ebx +
jz loc_1015EB3  +
mov ecx esi +
call sub_10214C3  +
cmp [esi+0C50h] ebx +
jnz loc_1015EA3  +
cmp [esi+24h] ebx +
jnz loc_1015EA3  +
push dword ptr [esi+4]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1015EA3  +
test byte ptr [esi+40h] 1 +
jnz loc_1057B32  +
mov ecx esi +
call sub_1015D58  +
push 1  +
mov ecx esi +
call sub_1015CA1  +
lea ecx [esi+0AF8h] +
call sub_1020505  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
cmp [esi+0C50h] ebx +
jz loc_1015E68  +
jmp loc_1015EA3  +
***
mov ecx ebx +
call sub_1015E31  +
jmp loc_1002264  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1015C3F  +
cmp dword ptr [esi+28h] 0 +
jz loc_1015EE7  +
cmp eax [esi+8] +
jnz loc_1057993  +
push 1  +
mov ecx esi +
call sub_10132A7  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
push esi  +
mov ebx ecx +
xor esi esi +
cmp [ebx+24h] esi +
jz loc_1015FF0  +
push edi  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+20h]  +
call ds:GetClientRect  +
mov eax [ebx+2Ch] +
cmp eax esi +
jz loc_10623C3  +
lea ecx [ebp+X] +
push ecx  +
push esi  +
push 0E12h  +
push esi  +
push dword ptr [ebx+3Ch]  +
push esi  +
push eax  +
call ds:GetThemeMargins  +
test eax eax +
jl loc_10623C3  +
mov ecx [ebp+Rect.bottom] +
mov edi [ebp+Y] +
sub ecx [ebp+var_C] +
mov esi [ebp+Rect.right] +
sub ecx [ebp+Rect.top] +
sub esi [ebp+Rect.left] +
sub ecx edi +
sub esi [ebp+X] +
lea eax [ebp+var_8] +
sub esi [ebp+var_14] +
mov edi ecx +
push eax  +
mov ecx ebx +
call sub_1016002  +
xor ecx ecx +
cmp [ebp+var_8] ecx +
jz loc_1015FF8  +
cmp [ebp+var_8] esi +
jg loc_1015FF8  +
cmp [ebp+cy] edi +
jg loc_10623F6  +
mov [ebp+cy] edi +
push 214h  +
push [ebp+cy]  +
push [ebp+var_8]  +
push [ebp+Y]  +
push [ebp+X]  +
push ecx  +
push dword ptr [ebx+24h]  +
call ds:SetWindowPos  +
xor esi esi +
cmp [ebx+28h] esi +
jz loc_1015FEF  +
push 30h  +
pop edi  +
push edi  +
lea eax [ebp+lParam] +
push esi  +
push eax  +
call memset  +
mov eax [ebx+24h] +
add esp 0Ch +
mov [ebp+var_50] eax +
push esi  +
lea eax [ebp+var_48] +
push eax  +
mov ecx ebx +
mov [ebp+lParam] edi +
mov [ebp+var_4C] 62h +
call sub_10146FB  +
lea eax [ebp+lParam] +
push eax  +
push esi  +
push 434h  +
push dword ptr [ebx+28h]  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
mov [ebp+var_8] esi +
jmp loc_1015F81  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1F4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov [edi] ebx +
mov [edi+4] ebx +
mov [ebp+var_1A4] edi +
cmp [esi+2Ch] ebx +
jz loc_1062364  +
push dword ptr [esi+24h]  +
call ds:GetWindowDC  +
mov [ebp+hDC] eax +
cmp eax ebx +
jz loc_10161C7  +
xor eax eax +
lea edi [ebp+var_1B8] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_1B8] +
push eax  +
xor eax eax +
cmp dword ptr [esi+3Ch] 0Eh +
push ebx  +
setnz al  +
push 0E12h  +
push ebx  +
add eax 25h +
push eax  +
push [ebp+hDC]  +
push dword ptr [esi+2Ch]  +
call ds:GetThemeMargins  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+lParam] +
stos   +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 1603h  +
push dword ptr [esi+24h]  +
mov [ebp+var_19C] ebx +
mov [ebp+var_1A8] ebx +
mov ebx ds:SendMessageW +
call ebx  +
cmp [ebp+lParam] 0 +
jnz loc_1062319  +
push 0C8h  +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi+24h]  +
call ds:GetWindowTextW  +
push dword ptr [esi+48h]  +
push [ebp+hDC]  +
call ds:SelectObject  +
mov [ebp+var_1A0] eax +
xor eax eax +
lea edi [ebp+var_1C8] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_1C8] +
push eax  +
push 0  +
push 20h  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
xor eax eax +
cmp dword ptr [esi+3Ch] 0Eh +
push 1  +
setnz al  +
add eax 25h +
push eax  +
push [ebp+hDC]  +
push dword ptr [esi+2Ch]  +
call ds:GetThemeTextExtent  +
xor eax eax +
lea edi [ebp+var_1F4] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_1F4] +
push eax  +
push 0  +
push 1608h  +
push dword ptr [esi+24h]  +
mov [ebp+var_1F4] 8 +
call ebx  +
mov ecx [ebp+var_1E8] +
mov eax ecx +
sub eax [ebp+var_1C8] +
shl ecx 2 +
add eax [ebp+var_1B4] +
add eax [ebp+var_1C0] +
add eax [ebp+var_1B8] +
add eax [ebp+var_19C] +
cmp eax ecx +
jl loc_1052176  +
mov ecx [ebp+var_1A4] +
push [ebp+var_1A0]  +
mov [ecx] eax +
mov eax [ebp+var_1AC] +
sub eax [ebp+var_1C4] +
push [ebp+hDC]  +
add eax [ebp+var_1BC] +
add eax [ebp+var_1B0] +
mov [ecx+4] eax +
call ds:SelectObject  +
push [ebp+hDC]  +
push dword ptr [esi+24h]  +
call ds:ReleaseDC  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push 0  +
push offset loc_101621B  +
push dword ptr [ebp+wLanguage]  +
push [ebp+arg_4]  +
push [ebp+hModule]  +
call sub_1014D95  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_1016234  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+cb]  +
call ds:__imp_CoTaskMemAlloc  +
test eax eax +
jz loc_1016251  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
mov eax 8007000Eh +
jmp loc_101624D  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 5  +
push esi  +
call sub_1016270  +
jmp loc_1011567  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+3Ch] +
mov edx [esi+40h] +
mov ebx [esi+48h] +
push edi  +
movsx edi ax +
add edx ecx +
shr eax 10h +
sub edi edx +
mov edx [esi+44h] +
cwde   +
add ebx edx +
sub eax ebx +
test edi edi +
jl loc_1061650  +
test eax eax +
jl loc_1061657  +
push 204h  +
push eax  +
push edi  +
push edx  +
push ecx  +
push 0  +
push dword ptr [esi+30h]  +
call ds:SetWindowPos  +
push edi  +
mov ecx esi +
call sub_10162D2  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+var_14] 0 +
push 3  +
pop eax  +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_1C] eax +
mov eax [ecx+54h] +
mov [ebp+var_18] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 10A2h  +
push dword ptr [ecx+30h]  +
mov [ebp+lParam] 28h +
call ds:SendMessageW  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
mov edi ecx +
push 2  +
push dword ptr [edi+44h]  +
call ds:GetAncestor  +
push eax  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_104BF61  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
pop edi  +
leave   +
retn 10h  +
***
call sub_101142C  +
mov eax dword_10B1134 +
retn   +
***
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_4] eax +
jmp loc_1012AD0  +
cmp [esi+38h] edi +
jz loc_1012B82  +
inc eax  +
mov [esi+60h] eax +
jmp loc_1012B82  +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:__imp_CoTaskMemFree +
push edi  +
mov edi [ebp+arg_0] +
push dword ptr [edi+4]  +
call esi  +
push dword ptr [edi+8]  +
call esi  +
push dword ptr [edi+1Ch]  +
call esi  +
push dword ptr [edi+20h]  +
call esi  +
push dword ptr [edi+24h]  +
call esi  +
push dword ptr [edi+28h]  +
call esi  +
push dword ptr [edi+2Ch]  +
call esi  +
push dword ptr [edi+30h]  +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
mov [esi] eax +
mov edx [ecx+68h] +
cmp edx eax +
jnz loc_1060C32  +
mov ecx [ecx+4Ch] +
cmp ecx eax +
jnz loc_101702E  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push 6  +
pop ecx  +
push dword ptr [ebx+34h]  +
mov esi offset a_shouldshow +
lea edi [ebp+var_1C] +
movs   +
call ds:lstrlenW  +
mov esi eax +
add esi 0Dh +
lea eax [esi+esi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jz loc_10166FE  +
push dword ptr [ebx+34h]  +
push esi  +
push edi  +
call sub_100665F  +
lea eax [ebp+var_1C] +
push eax  +
push esi  +
push edi  +
call sub_1010E3B  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
push eax  +
call ds:SHLWAPI_618  +
test eax eax +
jz loc_10167F5  +
jmp loc_1060C53  +
xor eax eax +
jmp loc_1016813  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+hMem] +
and dword ptr [eax] 0 +
push edi  +
mov edi ecx +
mov eax [edi+28h] +
test eax eax +
jz loc_101676A  +
push eax  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_101673C  +
mov eax [edi+2Ch] +
test eax eax +
jnz loc_1016818  +
mov eax [edi+34h] +
push esi  +
mov esi [edi+38h] +
and esi 3 +
test eax eax +
jz loc_10167EA  +
push ebx  +
lea ecx [ebp+pcbData] +
push ecx  +
lea ecx [ebp+pvData] +
push ecx  +
push 0  +
push 18h  +
push eax  +
mov ebx offset aSoftwareMicr_0 +
push ebx  +
mov [ebp+pcbData] 4 +
call ds:__imp_SHRegGetValueFromHKCUHKLM  +
test eax eax +
jz loc_1060C3A  +
mov ecx edi +
call sub_10166A5  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_10167E9  +
lea ecx [ebp+pcbData] +
push ecx  +
lea ecx [ebp+pvData] +
push ecx  +
push 0  +
push eax  +
push ebx  +
push 80000001h  +
mov [ebp+pcbData] 4 +
call ds:__imp_SHGetValueW  +
test eax eax +
jz loc_1060C4B  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop ebx  +
mov eax [edi+30h] +
test eax eax +
jnz loc_1016728  +
and esi 3 +
cmp esi 2 +
jz loc_1060C5B  +
cmp esi 1 +
jnz loc_1016810  +
test byte ptr [edi+38h] 10h +
jnz loc_1060C6D  +
mov eax esi +
pop esi  +
pop edi  +
leave   +
retn 4  +
push eax  +
call ds:SHLWAPI_618  +
test eax eax +
jz loc_1016775  +
jmp loc_101673C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
lea ecx [ebp+var_220] +
push ecx  +
push ebx  +
push offset dword_1016950  +
lea ecx [ebp+var_224] +
push ecx  +
mov [ebp+var_224] eax +
mov eax [ebp+arg_C] +
push 1  +
push ebx  +
mov [ebp+psz1] eax +
mov eax [edi] +
push edi  +
mov [ebp+var_218] ebx +
mov [ebp+hIcon] ebx +
call dword ptr [eax+28h]  +
cmp eax ebx +
jl loc_1060D7B  +
mov eax [ebp+var_220] +
mov ecx [eax] +
lea edx [ebp+var_228] +
push edx  +
lea edx [ebp+var_21C] +
push edx  +
mov esi 104h +
push esi  +
lea edx [ebp+psz2] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
cmp ebx 1 +
jz loc_1060D53  +
mov eax [ebp+arg_10] +
cmp eax [ebp+var_21C] +
jz loc_1016960  +
test ebx ebx +
jl loc_101690C  +
push [ebp+arg_8]  +
mov eax [ebp+var_220] +
mov ecx [eax] +
lea edx [ebp+hIcon] +
push edx  +
lea edx [ebp+var_218] +
push edx  +
push [ebp+var_21C]  +
lea edx [ebp+psz2] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov ebx eax +
cmp ebx 1 +
jz loc_101D443  +
mov eax [ebp+var_220] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test ebx ebx +
jl loc_1060D79  +
xor ebx ebx +
cmp [ebp+hIcon] ebx +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1016939  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_218] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 14h  +
cmp eax 0FFFFFFFFh +
jz loc_10168D3  +
cmp [ebp+psz1] 0 +
jz loc_10168D3  +
lea eax [ebp+psz2] +
push eax  +
push [ebp+psz1]  +
call ds:StrCmpIW  +
test eax eax +
jnz loc_10168D3  +
jmp loc_1060D72  +
***
push esi  +
mov esi ecx +
call sub_10169C1  +
test [ebp+arg_0] 1 +
jz loc_10169B5  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ds:__imp_SHELL32_155 +
mov esi ecx +
push dword ptr [esi+24h]  +
mov dword ptr [esi] offset off_100F40C +
call edi  +
push dword ptr [esi+28h]  +
call edi  +
push dword ptr [esi+2Ch]  +
call edi  +
push dword ptr [esi+3Ch]  +
mov edi ds:__imp_CoTaskMemFree +
call edi  +
push dword ptr [esi+18h]  +
mov dword ptr [esi] offset off_100F3DC +
call edi  +
pop edi  +
pop esi  +
retn   +
***
add eax 0EBD2AE50h +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
call sub_1010206  +
mov eax [ebp+ppbc] +
and dword ptr [ebx+24h] 0 +
mov dword ptr [ebx] offset off_100F40C +
mov [ebx+30h] eax +
cmp dword ptr [eax] 0FFFFFFFFh +
jz loc_1016D9D  +
lea esi [eax+4] +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
xor edx edx +
mov [ebp+ppbc] esi +
cmps   +
jz loc_1016DC1  +
test dword ptr [eax+38h] 1000h +
jz loc_1016EBD  +
lea eax [ebx+2Ch] +
push eax  +
push edx  +
push 4100h  +
push [ebp+ppbc]  +
call SHGetKnownFolderIDList  +
mov eax [ebx+30h] +
add eax 14h +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_101701D  +
or dword ptr [ebx+34h] 0FFFFFFFFh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1016AB5  +
mov eax [ebp+arg_0] +
mov ecx [eax+54h] +
test ecx ecx +
jnz loc_1016EA9  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
lea eax [ebx+1D8h] +
xor edi edi +
cmp [eax] edi +
jnz loc_1016B0E  +
lea esi [ebx+1D4h] +
mov dword ptr [eax] 1 +
mov [ebp-4] edi +
cmp [esi] edi +
ja loc_1060F3E  +
mov eax [ebx] +
push ebx  +
mov [esi] edi +
call dword ptr [eax+4]  +
push edi  +
push ebx  +
push offset loc_101A011  +
call ds:QueueUserWorkItem  +
test eax eax +
jz loc_1060F58  +
mov ecx ebx +
mov [ebx+1E0h] edi +
mov dword ptr [ebp-14h] 1 +
mov [ebp-10h] edi +
mov [ebp-18h] edi +
mov [ebp-1Ch] edi +
call sub_1015BB6  +
test eax eax +
jz loc_1016B3A  +
push 0FFFFFFFFh  +
push dword ptr [ebx+48h]  +
call ds:off_1006840  +
mov [ebp-8] edi +
mov dword ptr [ebp-4] offset unk_10B2F90 +
mov dword ptr [ebp-20h] 18h +
mov esi [ebp-4] +
lea eax [ebp-24h] +
push eax  +
mov ecx esi +
call sub_1016748  +
mov [ebp-0Ch] eax +
lea eax [esi+4] +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_1016B83  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset sub_10169FC +
xor eax eax +
cmps   +
jz loc_1017067  +
xor edi edi +
cmp [ebp-0Ch] edi +
jz loc_1016C56  +
push 40h  +
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_101707D  +
push dword ptr [ebp-4]  +
mov ecx eax +
call sub_1016A11  +
mov esi eax +
cmp esi edi +
jz loc_1016C56  +
cmp dword ptr [esi+4] 0FFFFFFFEh +
jz loc_1016DA9  +
cmp [esi+24h] edi +
jz loc_101A087  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-4]  +
call sub_1016A9C  +
test eax eax +
jz loc_1016C4F  +
mov edi [ebp-0Ch] +
or dword ptr [esi+10h] 10h +
mov eax [esi+10h] +
and edi 3 +
cmp edi 2 +
jz loc_1060F63  +
mov eax [ebp-4] +
add eax 4 +
test dword ptr [eax+34h] 200h +
jnz loc_1017014  +
cmp dword ptr [esi+4] 0FFFFFFFEh +
jz loc_1016C19  +
xor eax eax +
cmp [esi+24h] eax +
jz loc_101A1D7  +
push esi  +
mov ecx ebx +
call sub_1016CE5  +
xor eax eax +
cmp dword ptr [esi+4] 0FFFFFFFEh +
push esi  +
push dword ptr [ebp+8]  +
setz al  +
mov ecx ebx +
mov [ebp-14h] eax +
call sub_101026B  +
test eax eax +
jl loc_1016C4F  +
cmp dword ptr [ebp-14h] 0 +
jnz loc_1016C4F  +
mov eax [esi+30h] +
mov eax [eax+64h] +
inc dword ptr [ebp-10h]  +
or [ebp-18h] eax +
cmp edi 2 +
jz loc_1060F6E  +
mov ecx esi +
call sub_100F319  +
add dword ptr [ebp-4] 6Ch +
dec dword ptr [ebp-20h]  +
jnz loc_1016B4B  +
lea eax [ebx+1DCh] +
cmp dword ptr [eax] 0 +
jnz loc_1016C98  +
push dword ptr [ebp-18h]  +
mov dword ptr [eax] 1 +
push 235h  +
push offset dword_1016CC0  +
call sub_101588E  +
push dword ptr [ebp-1Ch]  +
push 2A2h  +
push offset dword_1016CD0  +
call sub_101588E  +
mov eax [ebp-10h] +
and dword ptr [ebx+1A8h] 0 +
mov [ebx+1ACh] eax +
mov eax [ebp-8] +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz locret_1016CB8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+24h] +
push edi  +
mov edi ecx +
mov [ebp+var_4] 80004005h +
test eax eax +
jz loc_1016D94  +
push ebx  +
mov ebx ds:__imp_SHBindToParent +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
push offset dword_100671C  +
push eax  +
call ebx  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1016D93  +
mov ecx [esi+30h] +
lea eax [esi+3Ch] +
push eax  +
call sub_1016678  +
test eax eax +
jnz loc_1016D48  +
lea eax [esi+3Ch] +
push eax  +
push 0  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_10125A3  +
mov [ebp+var_4] eax +
mov ecx edi +
call sub_1015BB6  +
test eax eax +
jz loc_1016D8A  +
mov eax [esi+30h] +
cmp dword ptr [eax+24h] 0 +
jnz loc_1060E90  +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [edi+4Ch]  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_1016831  +
mov ebx eax +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [edi+48h]  +
call ds:off_10062D4  +
push ebx  +
mov [esi+34h] eax +
call ds:DestroyIcon  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov dword ptr [ebx+4] 0FFFFFFFEh +
jmp loc_1016A70  +
***
cmp [ebp-14h] edi +
jnz loc_1016BBC  +
cmp dword ptr [ebp-10h] 1 +
jg loc_1016BD7  +
jmp loc_1016BBC  +
***
lea eax [ebp+ppbc] +
push eax  +
push 1000h  +
call sub_1016E0A  +
test eax eax +
jl loc_1016A70  +
mov eax [ebx+30h] +
mov ecx [eax] +
mov eax ecx +
inc eax  +
neg eax  +
push 0  +
sbb eax eax +
and eax ecx +
push 0  +
lea ecx [ebx+24h] +
push ecx  +
push [ebp+ppbc]  +
push eax  +
call ds:__imp_SHParseDisplayName  +
mov eax [ebp+ppbc] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1016A70  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+ppbc]  +
push [ebp+arg_0]  +
push 0  +
call sub_1016E25  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+ppbc] +
mov [edi] esi +
test esi esi +
jnz loc_105D2EC  +
push edi  +
push 0  +
call CreateBindCtx  +
mov ebx eax +
test ebx ebx +
jl loc_1016E81  +
and [ebp+var_C] 0 +
mov ebx [ebp+arg_4] +
and [ebp+var_4] 0 +
mov [ebp+var_10] 10h +
mov [ebp+var_8] ebx +
test esi esi +
jnz loc_105D2F7  +
mov eax [edi] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
test ebx ebx +
jl loc_105D309  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
call ds:SHLWAPI_413  +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
test dword ptr [eax+38h] 100h +
jnz loc_1060B94  +
call ecx  +
jmp loc_1016AB8  +
***
lea eax [ebx+24h] +
push eax  +
push 0  +
push 0  +
jmp loc_1016A68  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_260] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+30h] +
push edi  +
lea edi [ebp+var_260] +
push edi  +
add eax 4 +
mov ebx ecx +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+18h]  +
mov edi eax +
test edi edi +
jl loc_1016FF1  +
mov eax [ebp+var_260] +
mov ecx [eax] +
lea edx [ebp+var_258] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
test edi edi +
jl loc_1016FF1  +
cmp [ebp+var_230] 0 +
jz loc_1016F71  +
push 0  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+var_230]  +
call ds:SHLoadIndirectString  +
mov edi eax +
test edi edi +
jl loc_1016FE5  +
lea eax [esi+3Ch] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call ds:__imp_SHStrDupW  +
mov edi eax +
test edi edi +
jl loc_1016FE5  +
cmp [ebp+pszIconFile] 0 +
jz loc_1016FE5  +
push [ebp+pszIconFile]  +
call ds:PathParseIconLocationW  +
mov ecx ebx +
mov [ebp+hIcon] eax +
call sub_1015BB6  +
test eax eax +
jz loc_1060F22  +
push dword ptr [ebx+4Ch]  +
lea eax [ebp+hIcon] +
push 0  +
push eax  +
push 2  +
push [ebp+hIcon]  +
push [ebp+pszIconFile]  +
call ds:CheckEscapesW  +
mov edi eax +
test edi edi +
jl loc_1016FE5  +
push [ebp+hIcon]  +
push 0FFFFFFFFh  +
push dword ptr [ebx+48h]  +
call ds:off_10062D4  +
push [ebp+hIcon]  +
mov [esi+34h] eax +
call ds:DestroyIcon  +
lea eax [ebp+var_258] +
push eax  +
call sub_1016635  +
mov eax [ebp+var_260] +
test eax eax +
jz loc_1017001  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
or dword ptr [esi+10h] 4 +
jmp loc_1016C00  +
***
lea ecx [ebx+28h] +
push ecx  +
push edx  +
push edx  +
push eax  +
call SHGetKnownFolderIDList  +
jmp loc_1016A8A  +
***
push esi  +
push ecx  +
push dword_10B23D0  +
call sub_101704E  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
jmp loc_101669B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+hModule]  +
call sub_10161F5  +
pop ebp  +
retn 0Ch  +
***
xor edi edi +
cmp [ebp-0Ch] edi +
setnz al  +
movzx eax al +
push eax  +
call sub_1017089  +
jmp loc_1016B85  +
***
xor esi esi +
jmp loc_1016BAA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] al +
setnz al  +
push eax  +
push 0EEEh  +
push offset dword_10170B0  +
call sub_101588E  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+48h] ebx +
jnz loc_1018BEA  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
jnb loc_101713B  +
lea eax [ecx+eax*4+164h] +
mov ecx [eax] +
test ecx ecx +
jnz loc_1018C2E  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2284 0FFFFFFFFh +
jz loc_102A796  +
mov eax dword_10B2284 +
test eax eax +
jz loc_105CC6A  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push esi  +
call sub_1015AFD  +
cmp dword ptr [esi+4] 0 +
jnz loc_10171D5  +
push edi  +
lea eax [esi+38h] +
push eax  +
mov dword ptr [esi+80h] 1 +
call sub_1015B1D  +
lea edi [esi+0C8h] +
mov dword ptr [ebp+0Ch] 0Ah +
mov eax [edi] +
test eax eax +
jnz loc_1018BC2  +
add edi 28h +
dec dword ptr [ebp+0Ch]  +
jnz loc_10171AD  +
mov eax [esi+8] +
pop edi  +
test eax eax +
jz loc_10171CE  +
push eax  +
call ds:DestroyWindow  +
and dword ptr [esi+80h] 0 +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 30h +
jmp loc_1002A39  +
***
call ds:IsCompositionActive  +
test eax eax +
mov eax offset aStartmenuplace +
jz loc_105219C  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 1  +
push offset aAllowconsentto  +
push [ebp+hWnd]  +
mov esi ecx +
and dword ptr [esi+6E0h] 0 +
call ds:SetPropW  +
mov ecx esi +
call sub_1017349  +
neg eax  +
sbb eax eax +
neg eax  +
dec eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
cmp eax 0Ah +
jz sub_1017C7E  +
cmp eax 0Ch +
jz sub_1017C7E  +
pop esi  +
retn   +
***
mov ecx [ebp+hMenu] +
imul ecx ecx +
lea esi [ecx+edi] +
mov ebx [esi+0DCh] +
mov [esi+0FCh] eax +
or ebx 44000000h +
call sub_101410A  +
test eax eax +
jnz loc_105DB8A  +
xor ecx ecx +
lea eax [esi+0D8h] +
push eax  +
push ecx  +
push [ebp+hMenu]  +
push [ebp+hWnd]  +
push dword ptr [esi+0E8h]  +
push dword ptr [esi+0E4h]  +
push ecx  +
push ecx  +
push ebx  +
push ecx  +
push dword ptr [eax]  +
push ecx  +
call ds:CreateWindowExW  +
mov esi eax +
test esi esi +
jz loc_10173A9  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
test eax eax +
jz loc_10173A9  +
mov eax [ebp+hMenu] +
add eax 6 +
imul eax eax +
mov [eax+edi] esi +
mov eax [edi+38h] +
mov [ebp+lParam] eax +
lea eax [edi+0Ch] +
mov [ebp+var_C] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 4Eh  +
push esi  +
mov [ebp+var_10] 0DFh +
call ds:SendMessageW  +
jmp loc_1017386  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call sub_10185B2  +
mov eax [edi+38h] +
and [ebp+hMenu] 0 +
mov [ebp+hWnd] eax +
mov eax [edi+0B4h] +
test eax eax +
jz loc_10172A6  +
mov ecx [ebp+hMenu] +
imul ecx ecx +
cmp byte ptr ds:dword_1014A30[ecx] 0 +
jnz loc_10172A6  +
inc [ebp+hMenu]  +
cmp [ebp+hMenu] 0Ah +
jb loc_1017365  +
mov eax [edi+6DCh] +
mov [edi+6D4h] eax +
mov [edi+6D8h] eax +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
xor eax eax +
jmp loc_10173A4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax ecx +
mov dword ptr [eax+10h] offset off_1014E08 +
mov dword ptr [eax+14h] offset off_1014E78 +
mov dword ptr [eax+24h] offset off_1015AE0 +
xor ecx ecx +
mov [eax+28h] ecx +
mov dword ptr [eax+2Ch] offset off_1017480 +
mov [eax+30h] ecx +
mov [eax+0C8h] edx +
mov dword ptr [eax] offset off_100EEF8 +
mov dword ptr [eax+4] offset off_10170E0 +
mov dword ptr [eax+8] offset off_1012900 +
mov dword ptr [eax+0Ch] offset off_1012940 +
mov dword ptr [eax+10h] offset off_1014AF8 +
mov dword ptr [eax+14h] offset off_1014E94 +
mov dword ptr [eax+24h] offset off_1015A80 +
mov dword ptr [eax+2Ch] offset off_1014120 +
mov dword ptr [eax+34h] 1 +
mov [eax+7Ch] ecx +
mov [eax+80h] ecx +
mov [eax+0D0h] ecx +
mov [eax+0D4h] ecx +
mov [eax+0DCh] ecx +
mov [eax+0E0h] ecx +
mov [eax+0E4h] ecx +
lea edx [eax+0E8h] +
mov [edx] ecx +
mov [edx+4] ecx +
mov [edx+8] ecx +
or dword ptr [eax+130h] 0FFFFFFFFh +
or dword ptr [eax+150h] 0FFFFFFFFh +
or dword ptr [eax+1B0h] 0FFFFFFFFh +
mov [eax+158h] ecx +
mov [eax+1A4h] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 80004003h +
test ecx ecx +
jz loc_10174A2  +
push [ebp+arg_4]  +
call sub_10174AB  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+38h] edi +
jnz loc_10174F3  +
mov eax [ebp+arg_0] +
and eax 1 +
mov [esi+0B4h] eax +
call sub_1017507  +
cmp eax edi +
jz loc_10174FB  +
push 3  +
lea ecx [ebp+var_C] +
push ecx  +
push edi  +
push 4Eh  +
push eax  +
mov [esi+38h] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] edi +
mov [ebp+var_4] 0C8h +
call ds:SHLWAPI_178  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov edi 8007000Eh +
jmp loc_10174F3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
push 104h  +
lea eax [ebp+WindowName] +
push eax  +
cmp [esi+0B4h] edi +
jz loc_101A331  +
push 200h  +
push hInstance  +
call ds:LoadStringW  +
mov ecx esi +
call sub_1018B01  +
cmp [esi+0B4h] edi +
jz loc_101A33B  +
mov dword ptr [esi+6DCh] 4 +
mov eax [esi+6DCh] +
mov ecx esi +
mov [esi+6D4h] eax +
mov [esi+6C4h] edi +
call sub_1018673  +
mov ebx 80h +
call sub_10344B4  +
test eax eax +
jnz loc_105E982  +
mov eax 86000000h +
cmp [esi+0B4h] edi +
jz loc_101A34A  +
call ds:IsCompositionActive  +
neg eax  +
sbb eax eax +
and eax 40000h +
add eax 86800000h +
or ebx 80000h +
push esi  +
push hInstance  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push eax  +
lea eax [ebp+WindowName] +
push eax  +
push offset aDv2controlhost  +
push ebx  +
call sub_103510B  +
mov ebx eax +
cmp ebx edi +
jz loc_101762C  +
mov [esi+0B0h] edi +
mov [esi+38h] ebx +
cmp [esi+0B4h] edi +
jz loc_1019FBA  +
push 0FFFFFFE6h  +
push ebx  +
call ds:GetClassLongW  +
and eax 0FFFDFFFFh +
push eax  +
push 0FFFFFFE6h  +
push ebx  +
call ds:SetClassLongW  +
mov eax [esi+38h] +
cmp eax edi +
jz loc_101762C  +
push eax  +
lea ecx [esi+1Ch] +
call sub_1017642  +
push 1  +
push dword ptr [esi+38h]  +
call sub_1017D35  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
push offset loc_100D7BE  +
push [ebp+arg_0]  +
call sub_10351CD  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 1  +
push esi  +
call sub_1017675  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+nWidth] +
mov esi ecx +
push eax  +
push dword ptr [esi+44h]  +
call ds:GetClientRect  +
xor edi edi +
lea eax [esi+98h] +
inc edi  +
push eax  +
mov [esi+20h] edi +
call ds:InitializeCriticalSection  +
mov ecx [esi+38h] +
xor ebx ebx +
cmp ecx ebx +
jz loc_105FEC6  +
lea eax [esi+88h] +
push eax  +
lea eax [ebp+nWidth] +
push eax  +
push 0E12h  +
push ebx  +
push dword ptr [esi+3Ch]  +
push ebx  +
push ecx  +
call ds:GetThemeMargins  +
mov edi ds:GetThemeMetric +
lea eax [esi+68h] +
push eax  +
push 970h  +
push ebx  +
push 1Eh  +
push ebx  +
push dword ptr [esi+38h]  +
call edi  +
lea eax [esi+6Ch] +
push eax  +
push 970h  +
push ebx  +
push 19h  +
push ebx  +
push dword ptr [esi+38h]  +
call edi  +
lea eax [esi+70h] +
push eax  +
push 970h  +
push ebx  +
push 1Bh  +
push ebx  +
push dword ptr [esi+38h]  +
call edi  +
lea eax [esi+74h] +
push eax  +
push 971h  +
push ebx  +
push 1Ah  +
push ebx  +
push dword ptr [esi+38h]  +
call edi  +
lea eax [esi+78h] +
push eax  +
push 971h  +
push ebx  +
push 1Bh  +
push ebx  +
push dword ptr [esi+38h]  +
call edi  +
xor edi edi +
inc edi  +
mov ecx esi +
call sub_101728A  +
test byte ptr [esi+0C8h] 8 +
mov [esi+0C0h] edi +
mov eax 56002047h +
jnz loc_10196ED  +
push ebx  +
push dword_10B23CC  +
push ebx  +
push dword ptr [esi+44h]  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-10h]  +
push dword ptr [esi+90h]  +
push dword ptr [esi+88h]  +
push eax  +
push ebx  +
push offset aSyslistview32  +
push ebx  +
call sub_103510B  +
mov [esi+0B0h] eax +
cmp eax ebx +
jz loc_102E5C5  +
push esi  +
push ebx  +
push offset loc_100F0F4  +
push eax  +
call sub_10351CD  +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+64h]  +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:SetWindowTheme  +
push dword ptr [esi+0B0h]  +
lea ecx [esi+10h] +
call sub_1017642  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 1061h  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_3C] edi +
mov edi ds:SendMessageW +
mov [ebp+lParam] 2 +
call edi  +
test eax eax +
jl loc_102E5C5  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 1061h  +
push dword ptr [esi+0B0h]  +
call edi  +
test eax eax +
jl loc_102E5C5  +
push ebx  +
push ebx  +
push 104Eh  +
push dword ptr [esi+0B0h]  +
call edi  +
mov [esi+0B4h] eax +
cmp eax ebx +
jz loc_1017825  +
push 213h  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push eax  +
call ds:SetWindowPos  +
push esi  +
push ebx  +
push offset loc_100F0C4  +
push dword ptr [esi+0B0h]  +
call sub_10351CD  +
mov ecx esi +
call sub_1017DBF  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_10196F7  +
mov eax [esi] +
mov ecx esi +
mov [esi+19Ch] ebx +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_101A35F  +
mov eax [esi+68h] +
add [esi+19Ch] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jnz loc_101A366  +
xor eax eax +
add [esi+19Ch] eax +
lea eax [esi+10Ch] +
push eax  +
push offset stru_1017D20  +
push 1  +
push ebx  +
push offset stru_1017D10  +
call ds:__imp_CoCreateInstance  +
lea eax [esi+110h] +
push eax  +
push offset stru_1017B0C  +
push 1  +
push ebx  +
push offset stru_1017D10  +
call ds:__imp_CoCreateInstance  +
push esi  +
push dword ptr [esi+0B0h]  +
call ds:RegisterDragDrop  +
push esi  +
push ebx  +
push offset loc_100F090  +
push dword ptr [esi+0B0h]  +
call sub_10351CD  +
test eax eax +
jz loc_105FF52  +
cmp dword_10B114C ebx +
jz loc_102E5A3  +
push 4  +
lea ecx [esi+0D0h] +
call sub_100801C  +
test eax eax +
jz loc_102E5C5  +
push 4  +
lea ecx [esi+0D4h] +
call sub_100801C  +
test eax eax +
jz loc_102E5C5  +
push 4  +
lea ecx [esi+0DCh] +
call sub_100801C  +
test eax eax +
jz loc_102E5C5  +
push 4  +
lea ecx [esi+0E0h] +
call sub_100801C  +
test eax eax +
jz loc_102E5C5  +
push 1  +
lea ecx [esi+0E4h] +
call sub_100801C  +
test eax eax +
jz loc_102E5C5  +
mov ecx esi +
mov dword ptr [esi+54h] 3 +
call sub_10129F0  +
push ebx  +
push ebx  +
push 8000h  +
push 9  +
mov ecx esi +
call sub_1017D5D  +
push 2Dh  +
call ds:GetSystemMetrics  +
push 2Eh  +
mov [esi+148h] eax +
call ds:GetSystemMetrics  +
push 2  +
mov ecx esi +
mov [esi+14Ch] eax +
call sub_1012AB4  +
cmp [esi+38h] ebx +
jz loc_102E5B8  +
push dword ptr [esi+0B0h]  +
xor eax eax +
mov [ebp+var_8] ebx +
lea edi [ebp+wParam] +
stos   +
call ds:GetDC  +
mov edi eax +
cmp edi ebx +
jz loc_10179DB  +
lea eax [ebp+var_8] +
push eax  +
push 2  +
push ebx  +
push ebx  +
push dword ptr [esi+40h]  +
push edi  +
push dword ptr [esi+38h]  +
call ds:GetThemePartSize  +
push edi  +
push dword ptr [esi+0B0h]  +
call ds:ReleaseDC  +
mov eax [ebp+wParam] +
mov edi ds:SendMessageW +
mov [esi+144h] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+5Ch]  +
test eax eax +
mov eax [esi+144h] +
jnz loc_101A36E  +
inc eax  +
push dword ptr [ebp-10h]  +
mov ecx esi +
mov [esi+64h] eax +
call sub_100F527  +
push 1000h  +
mov [ebp+wParam] 4000420h +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_1017A39  +
push 2001h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_1017A39  +
mov [ebp+wParam] 4010420h +
push [ebp+wParam]  +
push [ebp+wParam]  +
push 1036h  +
push dword ptr [esi+0B0h]  +
call edi  +
mov eax [esi+38h] +
cmp eax ebx +
jz loc_105FF63  +
lea ecx [esi+154h] +
push ecx  +
push 65Bh  +
push ebx  +
push dword ptr [esi+3Ch]  +
push eax  +
call ds:GetThemeColor  +
or dword ptr [esi+150h] 0FFFFFFFFh +
lea eax [ebp+wParam] +
push eax  +
push 0EDBh  +
push ebx  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call ds:GetThemeColor  +
push [ebp+wParam]  +
push ebx  +
push 1024h  +
push dword ptr [esi+0B0h]  +
call edi  +
push dword ptr [esi+154h]  +
push ebx  +
push 10B1h  +
push dword ptr [esi+0B0h]  +
call edi  +
push dword ptr [esi+150h]  +
push ebx  +
push 1001h  +
push dword ptr [esi+0B0h]  +
call edi  +
push dword ptr [esi+150h]  +
push ebx  +
push 1026h  +
push dword ptr [esi+0B0h]  +
call edi  +
push ebx  +
push 4  +
push 108Eh  +
push dword ptr [esi+0B0h]  +
call edi  +
push 1  +
call ds:GetSystemMetrics  +
xor ecx ecx +
cmp eax 1E0h +
setle cl  +
xor eax eax +
mov [esi+1C0h] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
and dword ptr [ecx+1ECh] 0 +
mov dword ptr [ecx+1F8h] 4 +
xor eax eax +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_1017B69  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lParam] +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
push dword ptr [edi+24h]  +
call sub_1017BD3  +
mov esi eax +
test esi esi +
jz loc_1017BCA  +
mov ebx [ebp+hWnd] +
push esi  +
push 0  +
push ebx  +
call ds:SetWindowLongW  +
lea eax [esi+8] +
push eax  +
lea eax [edi+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
mov [esi+44h] ebx +
mov eax [edi+14h] +
mov [esi+38h] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_1017BCA  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push ebx  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
xor eax eax +
jmp loc_1017BC3  +
***
mov edi edi +
push 0  +
push offset LibFileName  +
call ds:LoadLibraryExW  +
mov ebx eax +
test ebx ebx +
jz loc_1017CEE  +
mov eax [esi+6Ch] +
push edi  +
mov edi ds:LoadImageW +
push 0  +
push eax  +
push eax  +
push 1  +
push 13ECh  +
push ebx  +
call edi  +
push 0  +
mov [esi+0F8h] eax +
mov eax [esi+6Ch] +
push eax  +
push eax  +
push 1  +
push 13EDh  +
push ebx  +
call edi  +
cmp dword ptr [esi+3Ch] 0Ch +
mov [esi+0FCh] eax +
jnz loc_1017CE6  +
mov eax [esi+6Ch] +
push 0  +
push eax  +
push eax  +
push 1  +
push 13EEh  +
push ebx  +
call edi  +
mov [esi+100h] eax +
push ebx  +
call ds:__imp_FreeLibrary  +
pop edi  +
pop ebx  +
jmp loc_10172A4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push 4  +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
push eax  +
push 0Ch  +
push [ebp+arg_0]  +
call ds:DwmSetWindowAttribute  +
pop ebp  +
retn 8  +
***
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi 0Ah +
jnb loc_1017DB6  +
push edi  +
call sub_101711D  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_8] +
mov [ebp+var_8] ecx +
mov [ebp+var_4] eax +
mov ecx 8003h +
test eax eax +
jnz loc_105F3FB  +
lea eax [ebp+var_8] +
push eax  +
push 1  +
lea eax [edi+401h] +
push eax  +
push [ebp+arg_4]  +
push ecx  +
push dword ptr [esi+44h]  +
call ds:SHELL32_2  +
mov [esi+edi*4+164h] eax +
pop edi  +
pop esi  +
leave   +
retn 10h  +
xor eax eax +
jmp loc_1017DB0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
push dword ptr [esi+0B0h]  +
call ds:GetDC  +
mov ebx eax +
test ebx ebx +
jz loc_1017ECC  +
push edi  +
push 0  +
push 0  +
push 31h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov edi ds:SelectObject +
push eax  +
push ebx  +
call edi  +
mov [ebp+var_64] eax +
test eax eax +
jz loc_1017EBE  +
lea eax [ebp+var_A8] +
push eax  +
push ebx  +
call ds:GetTextMetricsW  +
test eax eax +
jz loc_1017EB8  +
push 5Ch  +
lea eax [ebp+var_60] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+var_A8.tmAscent] +
add esp 0Ch +
push offset aMarlett  +
mov [ebp+var_60.lfHeight] eax +
push 20h  +
lea eax [ebp+var_60.lfFaceName] +
push eax  +
mov [ebp+var_60.lfWeight] 190h +
mov [ebp+var_60.lfCharSet] 2 +
call sub_100665F  +
lea eax [ebp+var_60] +
push eax  +
call ds:CreateFontIndirectW  +
mov [esi+198h] eax +
test eax eax +
jz loc_1017EB8  +
push eax  +
push ebx  +
call edi  +
lea eax [ebp+var_A8] +
push eax  +
push ebx  +
call ds:GetTextMetricsW  +
test eax eax +
jz loc_1017EB8  +
mov eax [ebp+var_A8.tmAscent] +
mov [esi+1A0h] eax +
lea eax [ebp+var_6C] +
push eax  +
push 1  +
push offset word_1017EE0  +
push ebx  +
call ds:GetTextExtentPointW  +
test eax eax +
jz loc_1017EB8  +
mov eax [ebp+var_6C._cx] +
add eax 4 +
mov [esi+19Ch] eax +
push [ebp+var_64]  +
push ebx  +
call edi  +
push ebx  +
push dword ptr [esi+0B0h]  +
call ds:ReleaseDC  +
pop edi  +
mov eax [esi+19Ch] +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
push dword ptr [esi+0Ch]  +
add ebx 24h +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0Ch]  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
jmp loc_10122E3  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+50h]  +
test eax eax +
jz loc_10122E9  +
push 3  +
mov ecx ebx +
call sub_100F8BC  +
jmp loc_10122E9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+var_10] +
push eax  +
push 138Ah  +
push 0  +
push dword ptr [esi+8]  +
mov edi ecx +
push dword ptr [esi+14h]  +
call ds:GetThemeRect  +
test eax eax +
jl loc_1017F64  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
cmp eax [edi+0D4h] +
jz loc_1017F6A  +
sub ecx [ebp+var_10] +
sub eax [ebp+var_C] +
mov [esi+0Ch] ecx +
mov [esi+10h] eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
cmp ecx [edi+0D0h] +
jnz loc_1017F58  +
jmp loc_1017F64  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
and dword ptr [esi+6D0h] 0 +
push edi  +
call sub_10345AB  +
mov edi eax +
test edi edi +
jz loc_1017FB2  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+2Ch]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_4] +
or [esi+6D0h] eax +
cmp dword ptr [esi+6D0h] 80000000h +
jz loc_101A290  +
call ds:IsCompositionActive  +
test eax eax +
mov eax offset aStartpanelcomp +
jz loc_105210A  +
push eax  +
push dword ptr [esi+38h]  +
call ds:OpenThemeData  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov eax ecx +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax+1Ch] offset off_1014E08 +
mov dword ptr [eax+20h] offset off_1014E78 +
and dword ptr [eax+34h] 0 +
mov dword ptr [eax+30h] offset off_1015AE0 +
mov dword ptr [eax] offset off_10029D4 +
mov dword ptr [eax+8] offset off_1002A44 +
mov dword ptr [eax+0Ch] offset off_1001D94 +
mov dword ptr [eax+10h] offset off_1014094 +
mov dword ptr [eax+14h] offset off_1012744 +
mov dword ptr [eax+18h] offset off_1013958 +
mov dword ptr [eax+1Ch] offset off_1014BF8 +
mov dword ptr [eax+20h] offset off_1014BD8 +
mov dword ptr [eax+30h] offset off_1015BCC +
retn   +
***
push dword ptr [esi+38h]  +
mov ecx esi +
call sub_1017253  +
jmp loc_100DF67  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+var_28] 0 +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
mov eax dword_10B23CC +
push 7F00h  +
push 0  +
mov [ebp+var_24] offset loc_10112D9 +
mov [ebp+var_1C] 4 +
mov [ebp+var_18] eax +
call ds:LoadCursorW  +
mov [ebp+var_10] eax +
lea eax [ebp+var_28] +
push eax  +
mov [ebp+var_4] offset aDesktopdestina +
call ds:SHLWAPI_237  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+var_28] 0 +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
mov eax dword_10B23CC +
push 7F00h  +
push 0  +
mov [ebp+var_24] offset loc_100F1C0 +
mov [ebp+var_1C] 4 +
mov [ebp+var_18] eax +
call ds:LoadCursorW  +
mov [ebp+var_10] eax +
lea eax [ebp+var_28] +
push eax  +
mov [ebp+var_4] offset aDesktopprogram +
call ds:SHLWAPI_237  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+var_28] 0 +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
mov eax dword_10B23CC +
push 7F00h  +
push 0  +
mov [ebp+var_24] offset loc_10112BB +
mov [ebp+var_1C] 4 +
mov [ebp+var_18] eax +
call ds:LoadCursorW  +
mov [ebp+var_10] eax +
lea eax [ebp+var_28] +
push eax  +
mov [ebp+var_4] offset aDesktopspecial +
call ds:SHLWAPI_237  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 2Ch  +
lea eax [ebp+var_30.style] +
push 0  +
push eax  +
call memset  +
mov eax dword_10B23CC +
add esp 0Ch +
push 7F00h  +
push 0  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4000h +
mov [ebp+var_30.lpfnWndProc] offset loc_1011507 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszClassName] offset aDesktopTopMatc +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
sub dword ptr [esp+4] 30h +
jmp loc_1002D39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 2Ch  +
lea eax [ebp+var_30.style] +
push 0  +
push eax  +
call memset  +
mov eax dword_10B23CC +
add esp 0Ch +
push 7F00h  +
push 0  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4000h +
mov [ebp+var_30.lpfnWndProc] offset loc_1011784 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszClassName] offset aDesktopSearchO +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 30h  +
lea eax [ebp+var_30] +
push 0  +
push eax  +
call memset  +
mov eax dword_10B23CC +
add esp 0Ch +
push 7F00h  +
push 0  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4000h +
mov [ebp+var_30.lpfnWndProc] offset loc_1011488 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
and [ebp+var_30.hbrBackground] 0 +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszClassName] offset aDesktopOpenbox +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
mov eax dword_10B23CC +
push 7F00h  +
push 0  +
mov [ebp+var_28] 4000h +
mov [ebp+var_1C] 4 +
mov [ebp+var_24] offset loc_101181F +
mov [ebp+var_18] eax +
call ds:LoadCursorW  +
mov [ebp+var_10] eax +
lea eax [ebp+var_28] +
push eax  +
mov [ebp+var_4] offset aDesktopNschost +
call ds:SHLWAPI_237  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 30h  +
lea eax [ebp+var_30] +
push 0  +
push eax  +
call memset  +
mov eax dword_10B23CC +
add esp 0Ch +
push 7F00h  +
push 0  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4000h +
mov [ebp+var_30.lpfnWndProc] offset loc_1011235 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszClassName] offset aDesktoplogoffp +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 30h  +
lea eax [ebp+var_30] +
push 0  +
push eax  +
call memset  +
mov eax dword_10B23CC +
add esp 0Ch +
push 7F00h  +
push 0  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4000h +
mov [ebp+var_30.lpfnWndProc] offset loc_1011715 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
and [ebp+var_30.hbrBackground] 0 +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszClassName] offset aDesktopMorePro +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
push esi  +
mov esi [edi] +
test esi esi +
jz loc_101858D  +
mov eax [ebp+8] +
mov [esi+38h] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
push esi  +
push 0FFFFFFEBh  +
push dword ptr [ebp+8]  +
call ds:SetWindowLongW  +
pop esi  +
push edi  +
push dword ptr [ebp+10h]  +
push ebx  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
jmp loc_100DEE4  +
***
call sub_1018133  +
call sub_10180AC  +
call sub_10181AF  +
call sub_1018975  +
call sub_10184E5  +
call sub_1018461  +
call sub_10183E7  +
call sub_1018357  +
call sub_10182C4  +
call sub_1018231  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 30h  +
lea eax [ebp+var_30] +
push 0  +
push eax  +
call memset  +
mov eax dword_10B23CC +
add esp 0Ch +
push 7F00h  +
push 0  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4000h +
mov [ebp+var_30.lpfnWndProc] offset loc_100DF73 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
and [ebp+var_30.hbrBackground] 0 +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszClassName] offset aDesktopUserPic +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push 66h  +
pop ecx  +
lea edi [ebx+0D0h] +
mov [ebp+var_C] edi +
mov esi offset dword_10187D8 +
movs   +
lea edi [ebx+0E8h] +
push edi  +
push 2042h  +
mov ecx ebx +
call sub_101494A  +
lea eax [ebx+1D8h] +
push eax  +
push 2043h  +
mov ecx ebx +
call sub_101494A  +
lea eax [ebx+228h] +
push eax  +
push 2044h  +
mov ecx ebx +
call sub_101494A  +
and [ebp+var_4] 0 +
lea eax [ebx+0E4h] +
mov [ebp+var_10] eax +
mov [ebp+var_8] eax +
mov esi 190h +
mov eax [ebp+var_C] +
push esi  +
push dword ptr [eax]  +
mov eax [ebp+var_4] +
push ds:dword_10187EC[eax]  +
call ds:MulDiv  +
mov ecx [ebp+var_8] +
add [ebp+var_4] 28h +
add [ebp+var_8] 28h +
mov [ecx] eax +
cmp [ebp+var_4] esi +
jb loc_10186E1  +
mov ecx [edi] +
mov eax [ebx+0D4h] +
sub eax ecx +
sub eax [ebx+228h] +
xor edi edi +
mov [ebx+200h] eax +
add eax ecx +
mov [ebx+138h] eax +
cmp [ebx+40h] edi +
jnz loc_1018742  +
call ds:SHLWAPI_193  +
cmp eax 8 +
jbe loc_1018742  +
mov ecx ebx +
call sub_1017F79  +
mov [ebx+40h] eax +
mov eax [ebx+40h] +
cmp eax edi +
jz loc_10187AF  +
lea ecx [ebp+var_20] +
push ecx  +
push 138Ah  +
push edi  +
push edi  +
push eax  +
call ds:GetThemeRect  +
test eax eax +
jl loc_10187AF  +
mov eax [ebp+var_18] +
sub eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov [ecx] eax +
mov eax [ebp+var_14] +
sub eax [ebp+var_1C] +
lea esi [ebx+0F4h] +
mov [ebx+0D4h] eax +
mov [ebp+var_8] 0Ah +
push edi  +
push dword ptr [esi-14h]  +
push dword ptr [ebx+40h]  +
call ds:IsThemePartDefined  +
mov [esi] eax +
cmp eax edi +
jz loc_10187CE  +
mov eax [ebx+40h] +
mov [esi-8] eax +
lea eax [esi-1Ch] +
push eax  +
mov ecx ebx +
call sub_1017F20  +
add esi 28h +
dec [ebp+var_8]  +
jnz loc_1018783  +
push [ebp+var_C]  +
call sub_10149A6  +
mov esi [ebp+var_10] +
push 0Ah  +
pop edi  +
push esi  +
call sub_10149A6  +
add esi 28h +
dec edi  +
jnz loc_10187BD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov [esi-0Ch] edi +
mov [esi-10h] edi +
jmp loc_10187A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 30h  +
lea eax [ebp+var_30] +
push 0  +
push eax  +
call memset  +
mov eax dword_10B23CC +
add esp 0Ch +
push 7F00h  +
push 0  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4000h +
mov [ebp+var_30.lpfnWndProc] offset loc_1011893 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
and [ebp+var_30.hbrBackground] 0 +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszClassName] offset aDesktopUserPan +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
push esi  +
push edi  +
push 808h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1018A92  +
mov ecx eax +
call sub_1018037  +
mov esi eax +
test esi esi +
jz loc_1018A96  +
mov eax [ebp+arg_8] +
push [ebp+arg_10]  +
mov ecx esi +
mov [eax] esi +
call sub_1018AA2  +
mov edi eax +
test edi edi +
jl loc_1018A7C  +
push [ebp+arg_0]  +
mov eax [esi] +
push offset stru_1003500  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jl loc_1018A7C  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_1003440  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jl loc_1018A7C  +
push [ebp+arg_C]  +
mov eax [esi] +
push offset stru_1002CB4  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
test edi edi +
jl loc_105E900  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
xor esi esi +
jmp loc_1018A2E  +
mov edi 8007000Eh +
jmp loc_1018A82  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push 1  +
mov esi ecx +
and dword ptr [esi+0BCh] 0 +
push offset aStart_autocasc  +
push offset aSoftwareMicr_0  +
mov [esi+3Ch] eax +
call SHRegGetBoolValueFromHKCUHKLM  +
mov [esi+0A0h] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
push offset aCmbdragcancel  +
mov esi ecx +
call ds:RegisterWindowMessageW  +
mov [esi+8Ch] eax +
mov eax hInstance +
xor esi esi +
push 7F00h  +
push esi  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 20000h +
mov [ebp+var_30.lpfnWndProc] offset loc_100DEA0 +
mov [ebp+var_30.cbClsExtra] esi +
mov [ebp+var_30.cbWndExtra] esi +
mov [ebp+var_30.hInstance] eax +
mov [ebp+var_30.hIcon] esi +
call ds:LoadCursorW  +
push 5  +
mov [ebp+var_30.hCursor] eax +
call ds:GetStockObject  +
mov [ebp+var_30.hbrBackground] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.lpszMenuName] esi +
mov [ebp+var_30.lpszClassName] offset aDv2controlhost +
mov [ebp+var_30.hIconSm] esi +
call ds:RegisterClassExW  +
xor edx edx +
xor ecx ecx +
cmp cx ax +
setnz dl  +
pop esi  +
mov eax edx +
leave   +
retn   +
***
push 0  +
push eax  +
call ds:__imp_IUnknown_SetSite  +
push edi  +
call sub_1002BEE  +
jmp loc_10171B7  +
***
push 0  +
push offset loc_100D7BE  +
push dword ptr [ebp+8]  +
call sub_103519B  +
jmp loc_100D7E3  +
***
cmp dword ptr [esi+54h] 2 +
jz loc_1050D32  +
push dword ptr [esi+48h]  +
call ds:off_1017144  +
push dword ptr [esi+48h]  +
test eax 100h +
jnz loc_105EEA4  +
call ds:off_1035224  +
mov [esi+48h] ebx +
jmp loc_1017114  +
***
push dword ptr [ebp+18h]  +
push offset loc_100F090  +
push dword ptr [ebp+8]  +
call sub_103519B  +
jmp loc_100F0AA  +
***
and dword ptr [eax] 0 +
push ecx  +
call ds:SHELL32_4  +
jmp loc_101713D  +
***
test esi esi +
jz loc_100F083  +
lea ecx [esi+24h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax+14h]  +
jmp loc_100F083  +
***
push dword ptr [ebp+18h]  +
push offset loc_100F0F4  +
push dword ptr [ebp+8]  +
call sub_103519B  +
jmp loc_100F114  +
***
sub dword ptr [esp+4] 24h +
jmp loc_100F065  +
***
sub dword ptr [esp+4] 24h +
jmp loc_100F1A5  +
***
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+0Ch] +
push eax  +
mov dword ptr [esi] offset off_1014E08 +
mov dword ptr [esi+4] offset off_1014E78 +
call sub_1002BEE  +
add esi 8 +
push esi  +
call sub_1002BEE  +
pop esi  +
retn   +
***
mov ecx esi +
call sub_1018E67  +
jmp loc_100DF55  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ds:RemovePropW +
mov esi ecx +
push offset aAllowconsentto  +
push dword ptr [esi+38h]  +
call edi  +
push offset aStartmenutag  +
push dword ptr [esi+38h]  +
call edi  +
and dword ptr [esi+38h] 0 +
push 0  +
mov ecx esi +
call sub_1018E9C  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
test eax eax +
jz loc_1018EB6  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+40h] 0 +
cmp [ebp+arg_0] 0 +
jnz loc_104820D  +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 2  +
push esi  +
call sub_1018EDF  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+0B0h] +
test eax eax +
jz loc_1018EF5  +
push eax  +
call ds:RevokeDragDrop  +
pop ebp  +
jmp ds:DefWindowProcW  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 82h  +
push esi  +
call sub_1018F19  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
xor ebx ebx +
push ebx  +
push ebx  +
push [ebp+hWnd]  +
mov [ebp+lParam] eax +
call ds:SetWindowLongW  +
cmp esi ebx +
jz loc_1018F76  +
push edi  +
xor edi edi +
push edi  +
mov ecx esi +
call sub_101711D  +
inc edi  +
cmp edi 0Ah +
jb loc_1018F4B  +
lea edi [esi+58h] +
mov eax [edi] +
mov [esi+0B0h] ebx +
mov [esi+44h] ebx +
cmp eax ebx +
jnz loc_10504F8  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
mov eax [ebp+lParam] +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
test eax eax +
jz loc_1018F89  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 0  +
push 0FFFFFFEBh  +
push dword ptr [ebp+8]  +
call ds:SetWindowLongW  +
jmp loc_101859A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push dword ptr [esi+4]  +
mov edi ds:__imp_CoTaskMemFree +
call edi  +
push dword ptr [esi+8]  +
xor ebx ebx +
mov [esi+4] ebx +
call edi  +
push dword ptr [esi+0Ch]  +
mov [esi+8] ebx +
call edi  +
push dword ptr [esi+24h]  +
mov edi ds:__imp_SHELL32_155 +
mov [esi+0Ch] ebx +
call edi  +
push dword ptr [esi+28h]  +
mov [esi+24h] ebx +
call edi  +
pop edi  +
mov [esi+28h] ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
sub ecx 24h +
jmp loc_1018FF7  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101901D  +
test [ebp+arg_4] 1 +
jz loc_1019011  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+1F0h] +
mov ecx edi +
mov dword ptr [esi] offset off_1008700 +
mov dword ptr [esi+4] offset off_10170E0 +
mov dword ptr [esi+8] offset off_1012900 +
mov dword ptr [esi+0Ch] offset off_1012954 +
mov dword ptr [esi+10h] offset off_1014B68 +
mov dword ptr [esi+14h] offset off_1014E94 +
mov dword ptr [esi+24h] offset off_1015A98 +
mov dword ptr [esi+2Ch] offset off_1014120 +
call sub_10157F3  +
lea ebx [esi+1F4h] +
mov ecx ebx +
call sub_10157F3  +
lea eax [esi+1FCh] +
push eax  +
call sub_1018FA0  +
lea eax [esi+228h] +
push eax  +
call sub_1018FA0  +
mov ecx ebx +
call sub_10190AA  +
mov ecx edi +
call sub_10190AA  +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_1018C8C  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_105D8D2  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10190E5  +
test byte ptr [ebp+8] 1 +
jz loc_10190D9  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+68h] +
lea edi [esi+1Ch] +
push eax  +
mov dword ptr [esi] offset off_10029D4 +
mov dword ptr [esi+8] offset off_1002A44 +
mov dword ptr [esi+0Ch] offset off_1001D94 +
mov dword ptr [esi+10h] offset off_1014094 +
mov dword ptr [esi+14h] offset off_1012744 +
mov dword ptr [esi+18h] offset off_1013958 +
mov dword ptr [edi] offset off_1014BF8 +
mov dword ptr [esi+20h] offset off_1014BD8 +
mov dword ptr [esi+30h] offset off_1015BCC +
call sub_1015B1D  +
lea eax [esi+6Ch] +
push eax  +
call sub_1015B1D  +
mov eax [esi+38h] +
test eax eax +
jnz loc_105E787  +
mov ecx [esi+6F8h] +
test ecx ecx +
jnz loc_105E797  +
lea eax [esi+34h] +
push eax  +
mov dword ptr [esi+30h] offset off_1015AE0 +
call sub_1002BEE  +
mov ecx edi +
call sub_1018E30  +
pop edi  +
mov dword ptr [esi] offset off_1002798 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push 10000012h  +
push [ebp+arg_8]  +
mov [ebp+var_4] 4 +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHRegGetValueW  +
test eax eax +
jz loc_1030E3D  +
cmp eax 0EAh +
jz loc_105CBD7  +
test eax eax +
jle locret_10191C8  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 10h  +
***
call CoInitializeEx  +
cmp eax 1 +
jz loc_100E825  +
push esi  +
mov esi 80010106h +
cmp eax esi +
jz loc_105CE2B  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1019213  +
call CoUninitialize  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1013A10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push esi  +
call sub_1015AFD  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_10192EF  +
add esi 1Ch +
mov eax [esi] +
test eax eax +
jz loc_10192EF  +
push 0  +
push eax  +
call ds:__imp_IUnknown_SetSite  +
push esi  +
call sub_1002BEE  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2270 0FFFFFFFFh +
jz loc_102A71D  +
mov eax dword_10B2270 +
test eax eax +
jz loc_105CC33  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebx  +
mov ebx ds:__imp_IUnknown_SetSite +
push esi  +
push edi  +
mov edi ecx +
push 0  +
lea esi [edi+84h] +
push dword ptr [esi]  +
call ebx  +
mov eax [esi] +
test eax eax +
jz loc_10195AD  +
and dword ptr [esi] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 0  +
lea esi [edi+80h] +
push dword ptr [esi]  +
call ebx  +
mov eax [esi] +
test eax eax +
jz loc_10195C8  +
and dword ptr [esi] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [edi+7Ch] +
test eax eax +
jz loc_10195D9  +
and dword ptr [edi+7Ch] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push esi  +
call sub_1015AFD  +
xor ebx ebx +
mov [ebp+8] eax +
cmp [ebp+0Ch] ebx +
jz loc_101965C  +
push edi  +
lea edi [esi-18h] +
push 0FFFFFFFFh  +
mov ecx edi +
call sub_10162D2  +
push ebx  +
lea eax [esi+40h] +
push eax  +
push ebx  +
mov ecx edi +
call sub_101A563  +
mov ebx eax +
cmp ebx 4 +
jnb loc_1019654  +
push 0  +
add esi 248h +
push esi  +
push 1  +
mov ecx edi +
call sub_101A563  +
add ebx eax +
cmp ebx 4 +
jnb loc_1019654  +
push 4  +
pop eax  +
sub eax ebx +
push eax  +
mov ecx edi +
call sub_101C1EF  +
add ebx eax +
cmp ebx 4 +
jnb loc_1019654  +
mov ecx edi +
call sub_101C0BD  +
mov ecx edi +
call sub_101A4FE  +
pop edi  +
mov eax [ebp+8] +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push esi  +
call sub_1015AFD  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_10505F0  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1015AFD  +
***
push 40h  +
pop ecx  +
lea ebx [esi+50h] +
lea eax [esi+4Ch] +
push ebx  +
push eax  +
mov [ebx] ecx +
mov [eax] ecx +
call sub_1014903  +
jmp loc_1012A46  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1012A79  +
push dword ptr [esi+48h]  +
call ds:off_1017144  +
push dword ptr [esi+48h]  +
mov edi eax +
call ds:off_1035224  +
push 2  +
push 8  +
push edi  +
push dword ptr [ebx]  +
push dword ptr [esi+4Ch]  +
call ds:off_10192F8  +
mov [esi+48h] eax +
jmp loc_1012A8E  +
***
mov eax 56002247h +
jmp loc_101774D  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jnz loc_101784D  +
jmp loc_1017882  +
***
cmp [ebp+var_8] eax +
jnz loc_1019AAD  +
jmp loc_1060B37  +
cmp [ebp+var_4] eax +
jmp loc_10199E1  +
and [ebp+var_8] 0 +
jmp loc_1019A2F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 124h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov esi 11Ch +
push esi  +
xor edi edi +
lea eax [ebp-120h] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp-120h] +
push eax  +
mov [ebp-120h] esi +
mov dword ptr [ebp-11Ch] 6 +
mov dword ptr [ebp-118h] 1 +
call ds:GetVersionExW  +
lea eax [ebp-124h] +
push eax  +
push edi  +
push edi  +
push dword ptr [ebp-118h]  +
push dword ptr [ebp-11Ch]  +
call ds:RtlGetProductInfo  +
test al al +
jz loc_10197CB  +
cmp dword ptr [ebp-124h] 0ABCDABCDh +
jz loc_10197CB  +
push 18h  +
mov esi offset unk_10B2F90 +
pop edi  +
push dword ptr [ebp-124h]  +
mov ecx esi +
call sub_10199F1  +
add esi 6Ch +
dec edi  +
jnz loc_10197B8  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 24h +
jmp loc_10139F5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [eax] +
push esi  +
mov [ebp+var_230] eax +
mov esi ecx +
mov eax esi +
neg eax  +
sbb eax eax +
lea ecx [esi+14h] +
push edi  +
and eax ecx +
push eax  +
lea eax [ebx+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
xor ecx ecx +
mov [ebp+var_21C] ecx +
xor eax eax +
lea edi [ebp+var_218] +
stos   +
stos   +
stos   +
mov ebx [ebx+14h] +
mov [esi+48h] ebx +
cmp ebx ecx +
jz loc_1061DC8  +
lea eax [ebp+var_21C] +
push eax  +
push ecx  +
push 0E12h  +
push ecx  +
push dword ptr [esi+58h]  +
push ecx  +
push ebx  +
call ds:GetThemeMargins  +
xor ebx ebx +
call sub_101410A  +
test eax eax +
jnz loc_1019985  +
push ebx  +
push ebx  +
push 31h  +
push dword ptr [esi+40h]  +
call ds:GetParent  +
mov edi ds:SendMessageW +
push eax  +
call edi  +
push ebx  +
push eax  +
push 30h  +
push dword ptr [esi+40h]  +
call edi  +
lea edi [esi+34h] +
push edi  +
push offset stru_10199B0  +
push 1  +
push ebx  +
push offset stru_10199A0  +
call ds:__imp_CoCreateInstance  +
mov ebx eax +
test ebx ebx +
jl loc_1019985  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+40h]  +
call ds:GetClientRect  +
mov eax [ebp+var_21C] +
add [ebp+Rect.left] eax +
mov eax [ebp+var_214] +
add [ebp+Rect.top] eax +
mov eax [ebp+var_218] +
sub [ebp+Rect.right] eax +
mov eax [ebp+var_210] +
sub [ebp+Rect.bottom] eax +
mov eax [edi] +
mov ecx [eax] +
lea edx [ebp+Rect] +
push edx  +
push dword ptr [esi+40h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_1019985  +
mov eax [edi] +
mov ecx [eax] +
push 0ACh  +
push eax  +
call dword ptr [ecx+10h]  +
mov ebx eax +
test ebx ebx +
jl loc_1019985  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push 2036h  +
push dword_10B23D0  +
call ds:LoadStringW  +
mov eax [edi] +
mov ecx [eax] +
push 0  +
lea edx [ebp+Buffer] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov ebx eax +
test ebx ebx +
jl loc_1019985  +
lea eax [esi+24h] +
push eax  +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
add esi 38h +
push esi  +
push dword ptr [edi]  +
call ds:IUnknown_GetWindow  +
mov ebx eax +
mov ecx [ebp+var_4] +
xor eax eax +
test ebx ebx +
setnl al  +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
dec eax  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
push dword ptr [ecx+0Ch]  +
lea eax [esi+18h] +
mov edx [eax] +
push eax  +
call dword ptr [edx+0Ch]  +
jmp loc_10147A8  +
***
cmp edi eax +
jz loc_101125E  +
jmp loc_104D121  +
***
cmp [ebp+var_4] eax +
jz loc_1019AAD  +
jmp loc_1060B1E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 1Dh  +
mov ebx ecx +
mov [ebp+var_8] 1 +
call ds:IsOS  +
push 4  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
pop ecx  +
cmp eax ecx +
jz loc_1019721  +
cmp eax 1Bh +
jz loc_1019721  +
cmp eax 2Fh +
ja loc_1060B07  +
cmp [ebp+var_4] 0 +
jnz loc_1060B15  +
lea edx [ebx+4] +
mov edi offset dword_100D864 +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1019AB4  +
push 4  +
pop ecx  +
mov edi offset dword_1014324 +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1019B1E  +
push 4  +
pop ecx  +
mov edi offset dword_1014314 +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1019B1E  +
push 4  +
pop ecx  +
mov edi offset sub_10169FC +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1019B1E  +
push 4  +
pop ecx  +
mov edi offset dword_1019340 +
mov esi edx +
xor eax eax +
cmps   +
jz loc_101970B  +
push 4  +
pop ecx  +
mov edi offset dword_1019330 +
mov esi edx +
xor eax eax +
cmps   +
jz loc_10199DE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov eax [ebx] +
cmp eax 0FFFFFFFFh +
jz loc_1019AAD  +
test eax eax +
jz loc_1019AAD  +
push eax  +
push offset a2559a1f321d711  +
call ds:__imp_StrCmpICW  +
test eax eax +
jz loc_1019719  +
mov ecx [ebx] +
mov esi ds:StrCmpW +
mov eax ecx +
inc eax  +
neg eax  +
sbb eax eax +
and eax ecx +
push eax  +
push offset psz1  +
call esi  +
test eax eax +
jz loc_1019B1E  +
mov ecx [ebx] +
mov eax ecx +
inc eax  +
neg eax  +
sbb eax eax +
and eax ecx +
push eax  +
push offset a26ee0668A00a_0  +
call esi  +
test eax eax +
jz loc_1019B29  +
mov ecx [ebx] +
mov eax ecx +
inc eax  +
neg eax  +
sbb eax eax +
and eax ecx +
push eax  +
push offset aE44e5d18065245  +
call esi  +
test eax eax +
jnz loc_1019AAD  +
cmp [ebp+var_4] 0 +
jz loc_1019AAD  +
jmp loc_1060B37  +
cmp [ebp+var_4] eax +
jz loc_1019AAD  +
jmp loc_1060B2C  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_1019B4F  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lParam] +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
call sub_1019BB6  +
mov esi eax +
test esi esi +
jz loc_1019BAD  +
mov ebx [ebp+hWnd] +
push esi  +
push 0  +
push ebx  +
call ds:SetWindowLongW  +
lea eax [esi+8] +
push eax  +
lea eax [edi+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
mov [esi+44h] ebx +
mov eax [edi+14h] +
mov [esi+38h] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_1019BAD  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push ebx  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
xor eax eax +
jmp loc_1019BA6  +
***
pop ecx  +
test eax eax +
jz loc_10611B8  +
mov ecx eax +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push esi  +
push 58h  +
mov esi ecx +
call sub_10173B2  +
and dword ptr [esi+1DCh] 0 +
mov dword ptr [esi] offset off_1008838 +
mov dword ptr [esi+4] offset off_10170E0 +
mov dword ptr [esi+8] offset off_1012900 +
mov dword ptr [esi+0Ch] offset off_1012968 +
mov dword ptr [esi+10h] offset off_1014AF8 +
mov dword ptr [esi+14h] offset off_1014E94 +
mov dword ptr [esi+24h] offset off_1015AB0 +
mov dword ptr [esi+2Ch] offset off_1014120 +
mov dword ptr [esi+3Ch] 9 +
mov dword ptr [esi+40h] 0Bh +
mov eax esi +
pop esi  +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push ebx  +
call sub_1019C43  +
jmp loc_10112AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 60h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1019C79  +
push [ebp+hWnd]  +
mov ecx eax +
call sub_1019C82  +
test eax eax +
jz loc_10623BD  +
push eax  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
pop ebp  +
jmp ds:DefWindowProcW  +
xor eax eax +
jmp loc_1019C5E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax+4] 1 +
and dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] offset off_1015AE0 +
and dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+18h] offset off_1017480 +
mov dword ptr [eax] offset off_1002A14 +
mov dword ptr [eax+8] offset off_1002A90 +
mov dword ptr [eax+0Ch] offset off_1006580 +
mov dword ptr [eax+10h] offset off_1014128 +
mov dword ptr [eax+18h] offset off_1014778 +
mov [eax+20h] ecx +
mov dword ptr [eax+3Ch] 0Eh +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
call sub_1019CEB  +
jmp loc_10112AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 54h +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
mov esi ecx +
mov eax esi +
neg eax  +
sbb eax eax +
lea ecx [esi+8] +
and eax ecx +
push eax  +
lea eax [edi+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
mov ecx esi +
call sub_1019EE8  +
mov eax [edi+14h] +
xor ebx ebx +
push ebx  +
mov [esi+2Ch] eax +
push dword_10B23CC  +
push 62h  +
push dword ptr [esi+20h]  +
push 1Eh  +
push 64h  +
push 1  +
push 1  +
push 5600400Ch  +
push ebx  +
push offset aButton  +
push ebx  +
call sub_103510B  +
mov [esi+24h] eax +
cmp eax ebx +
jz loc_1019EDE  +
push dword ptr [esi+20h]  +
mov [ebp+arg_0] ebx +
call ds:GetWindowDC  +
mov edi eax +
cmp edi ebx +
jz loc_1019D7B  +
push edi  +
call ds:GetLayout  +
push edi  +
push dword ptr [esi+20h]  +
and eax 1 +
mov [ebp+arg_0] eax +
call ds:ReleaseDC  +
xor eax eax +
lea edi [ebp+lParam] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
and eax 3Fh +
add eax 38h +
mov [ebp+var_20] eax +
mov eax [esi+2Ch] +
mov [ebp+lParam] 5 +
mov [ebp+var_1C] 2 +
cmp eax ebx +
jz loc_1019DDB  +
xor ecx ecx +
cmp dword ptr [esi+3Ch] 0Eh +
lea edx [ebp+var_18] +
push edx  +
setnz cl  +
push 1  +
push ebx  +
push ebx  +
add ecx 17h +
push ecx  +
push ebx  +
push eax  +
call ds:GetThemePartSize  +
test eax eax +
jl loc_1019DDB  +
lea eax [ebp+var_18] +
push eax  +
call sub_1011ACD  +
or [ebp+lParam] 8 +
mov [ebp+var_14] ebx +
mov edi ds:SendMessageW +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 1607h  +
push dword ptr [esi+24h]  +
call edi  +
mov eax offset byte_1002CD0 +
push eax  +
push eax  +
push dword ptr [esi+24h]  +
call ds:SetWindowTheme  +
push ebx  +
push dword_10B23D0  +
mov eax 80000000h +
push ebx  +
push dword ptr [esi+20h]  +
push eax  +
push eax  +
push eax  +
push eax  +
push 80000002h  +
push ebx  +
push offset aTooltips_class  +
push 20h  +
call sub_103510B  +
mov [esi+28h] eax +
cmp eax ebx +
jz loc_1019EBE  +
push 30h  +
lea eax [ebp+var_54] +
push ebx  +
push eax  +
call memset  +
mov eax [esi+24h] +
add esp 0Ch +
mov [ebp+var_4C] eax +
push ebx  +
lea eax [ebp+var_44] +
push eax  +
mov ecx esi +
mov [ebp+var_54] 30h +
mov [ebp+var_50] 10h +
mov [ebp+var_48] 62h +
mov [ebp+var_30] offset byte_1002CD0 +
call sub_10146FB  +
lea eax [ebp+var_54] +
push eax  +
push ebx  +
push 432h  +
push dword ptr [esi+28h]  +
call edi  +
mov eax [esi+20h] +
mov [ebp+var_4C] eax +
lea eax [ebp+var_54] +
push eax  +
push ebx  +
push 432h  +
push dword ptr [esi+28h]  +
mov [ebp+var_50] 20h +
mov [ebp+var_48] 1 +
call edi  +
push 4  +
pop eax  +
mov [ebp+var_10] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
push 41Ah  +
push dword ptr [esi+28h]  +
call edi  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_1015A06  +
mov ecx esi +
call sub_10119EC  +
mov ecx esi +
call sub_1011A7D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
or eax 0FFFFFFFFh +
jmp loc_1019ED7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push offset aDontloadauthui  +
push offset szDir  +
xor ebx ebx +
push 80000002h  +
mov edi ecx +
mov [ebp+var_4] ebx +
call sub_101917B  +
test eax eax +
jge loc_106249D  +
push esi  +
lea esi [edi+54h] +
push esi  +
push offset stru_1035250  +
push 1  +
push ebx  +
push offset stru_1035260  +
call ds:__imp_CoCreateInstance  +
mov ebx eax +
test ebx ebx +
jl loc_10624F8  +
mov ebx 400781h +
call sub_1011941  +
test eax eax +
jz loc_1019F61  +
push 1Dh  +
call ds:IsOS  +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
and ebx 0FFDFFFB0h +
add ebx 6207D7h +
mov eax [esi] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [esi] +
mov ecx [eax] +
lea esi [edi+58h] +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov ebx eax +
test ebx ebx +
jl loc_10624D4  +
mov eax [esi] +
mov ecx [eax] +
push 0  +
push dword ptr [edi+20h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
test ebx ebx +
jl loc_10624B0  +
mov esi [esi] +
mov eax [esi] +
add edi 5Ch +
push edi  +
push esi  +
call dword ptr [eax+10h]  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
retn   +
***
push 1  +
push offset aStartmenutag  +
mov dword_10B10F4 ebx +
push dword ptr [esi+38h]  +
call ds:SetPropW  +
jmp loc_1017612  +
***
mov eax [esi] +
mov ecx esi +
mov dword ptr [esi+80h] 1 +
call dword ptr [eax+0B4h]  +
mov eax [esi+0D4h] +
cmp eax ebx +
jz loc_103EF12  +
mov eax [eax] +
cmp eax ebx +
jnz loc_10605B0  +
mov [esi+80h] ebx +
jmp loc_100F9BF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
call sub_10191D1  +
mov esi [ebp+8] +
mov [ebp-14h] eax +
test eax eax +
jl loc_101A06B  +
push ebx  +
mov ebx ds:LocalFree +
push edi  +
mov edi offset unk_10B2F90 +
mov [ebp-8] edi +
mov dword ptr [ebp-0Ch] 18h +
lea eax [ebp-10h] +
push eax  +
mov ecx edi +
call sub_1016748  +
test dword ptr [edi+38h] 100h +
mov [ebp+8] eax +
jnz loc_1060C75  +
mov edi [ebp-8] +
add edi 6Ch +
dec dword ptr [ebp-0Ch]  +
mov [ebp-8] edi +
jnz loc_101A040  +
pop edi  +
pop ebx  +
push dword ptr [ebp-14h]  +
call sub_1019203  +
mov eax [esi] +
and dword ptr [esi+1D8h] 0 +
push esi  +
call dword ptr [eax+8]  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
push 237h  +
push offset dword_101A1B0  +
mov [esi+44h] eax +
mov dword ptr [ebp-3B4h] 1 +
call sub_101588E  +
mov eax [esi+54h] +
mov ecx [eax] +
mov ebx 0C8h +
push ebx  +
lea edx [ebp-194h] +
push edx  +
mov edx [ebp-3B0h] +
push edi  +
and edx 0FFFDFFFFh +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_101A0EB  +
lea eax [ebp-194h] +
push eax  +
push dword ptr [esi+24h]  +
call ds:SetWindowTextW  +
test dword ptr [ebp-3B0h] 20000h +
jnz loc_106244D  +
push edi  +
mov edi ds:SendMessageW +
push 1  +
push 0F7h  +
push dword ptr [esi+24h]  +
call edi  +
cmp dword ptr [esi+28h] 0 +
jz loc_101A1A3  +
mov eax [esi+54h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-194h] +
push edx  +
push dword ptr [ebp-3B0h]  +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jl loc_101A1A3  +
push 30h  +
pop ebx  +
push ebx  +
lea eax [ebp-3E4h] +
push 0  +
push eax  +
call memset  +
mov eax [esi+24h] +
mov [ebp-3DCh] eax +
add esp 0Ch +
lea eax [ebp-194h] +
mov [ebp-3C0h] eax +
lea eax [ebp-3E4h] +
push eax  +
mov [ebp-3E4h] ebx +
push 0  +
mov ebx 439h +
push ebx  +
push dword ptr [esi+28h]  +
mov dword ptr [ebp-3D8h] 62h +
call edi  +
mov eax [esi+20h] +
mov [ebp-3DCh] eax +
lea eax [ebp-3E4h] +
push eax  +
push 0  +
push ebx  +
push dword ptr [esi+28h]  +
mov dword ptr [ebp-3D8h] 1 +
call edi  +
pop ebx  +
jmp loc_1011A64  +
***
mov eax [ebp+14h] +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
call sub_1015EF7  +
jmp loc_10112AF  +
***
cmp [ebp-8] eax +
jz loc_101A1EC  +
push esi  +
push dword ptr [ebp-8]  +
mov ecx ebx +
call sub_1016ECF  +
jmp loc_1016C19  +
***
lea ecx [ebp-8] +
push ecx  +
push offset dword_1016620  +
push 1  +
push eax  +
push offset dword_1016610  +
call ds:__imp_CoCreateInstance  +
cmp dword ptr [ebp-8] 0 +
jnz loc_101A1DC  +
jmp loc_1016C19  +
***
push dword ptr [eax+0Ch]  +
lea ecx [ebx+10h] +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+0Ch]  +
test eax eax +
jge loc_101A223  +
jmp loc_1011394  +
xor eax eax +
inc eax  +
jmp loc_1011396  +
***
call ds:IsCompositionActive  +
test eax eax +
jz loc_10520BA  +
mov eax offset aStartpanelco_0 +
jmp loc_1017FD5  +
***
mov eax [ebp+8] +
mov ecx [eax+6BCh] +
cmp ecx 4 +
jz loc_1013BF9  +
mov edx [ebp+18h] +
imul ecx ecx +
mov esi [edx+8] +
mov [ecx+eax+2CCh] esi +
mov ecx [edx+8] +
mov [eax+6ACh] ecx +
jmp loc_1014016  +
***
push 1FEh  +
jmp loc_1017540  +
mov dword ptr [esi+6DCh] 1 +
jmp loc_1017569  +
cmp [esi+40h] edi +
jnz loc_10175BF  +
jmp loc_105E98C  +
***
push 0Bh  +
jmp loc_1012A2B  +
***
xor eax eax +
jmp loc_1017865  +
mov eax [esi+68h] +
jmp loc_101787C  +
shl eax 2 +
jmp loc_1017A00  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_100F4F4 +
and dword ptr [eax+4] 0 +
mov [eax+18h] ecx +
pop ebp  +
retn 4  +
***
adc eax offset IsCompositionActive +
test eax eax +
mov eax offset aStartmenucom_0 +
jz loc_1052132  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
push esi  +
push dword_10B23CC  +
xor edi edi +
push edi  +
push dword ptr [esi+18h]  +
push dword ptr [esi+34h]  +
push dword ptr [esi+38h]  +
push edi  +
push edi  +
push 80000000h  +
push offset WindowName  +
push offset aDesktopUserPic  +
push 80088h  +
call sub_103510B  +
mov [esi+1Ch] eax +
cmp eax edi +
jz loc_101A4AD  +
mov ecx esi +
call sub_10148E9  +
push 413h  +
push edi  +
push edi  +
push edi  +
push edi  +
push eax  +
push dword ptr [esi+1Ch]  +
call ds:SetWindowPos  +
push 1  +
push dword ptr [esi+1Ch]  +
call sub_1017D35  +
mov eax dword_10B1158 +
cmp eax edi +
jz loc_101A456  +
push eax  +
call ds:DeleteObject  +
mov esi 1B65h +
call sub_1015B4C  +
cmp eax 0C0h +
jge loc_1061212  +
cmp eax 90h +
jge loc_106121A  +
cmp eax 78h +
jge loc_1061224  +
push 2000h  +
push edi  +
push edi  +
movzx eax si +
push edi  +
push eax  +
push dword_10B23CC  +
call ds:LoadImageW  +
mov dword_10B1158 eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop edi  +
pop esi  +
retn   +
mov eax 80004005h +
jmp loc_101A4AA  +
***
cmp dword ptr [esi+50h] 0FFFFFFFFh +
jz loc_1014F5E  +
jmp loc_1014F83  +
***
mov esi [edi] +
push esi  +
push 0FFFFFFEBh  +
push ebx  +
call ds:SetWindowLongW  +
jmp loc_100DF99  +
***
call ds:DefWindowProcW  +
jmp loc_100DFAF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push 0  +
push 0  +
mov esi ecx +
push 1004h  +
push dword ptr [esi+30h]  +
call ds:SendMessageW  +
push 3  +
pop ecx  +
mov word ptr [ebp+pvarg.anonymous_0] cx +
mov ecx [esi+54h] +
imul ecx eax +
add ecx [esi+48h] +
push 0  +
add ecx [esi+44h] +
lea eax [ebp+pvarg] +
push eax  +
push 0  +
push 13Ch  +
push offset dword_10138E4  +
push offset dword_10128F0  +
push dword ptr [esi+1Ch]  +
mov dword ptr [ebp+pvarg.anonymous_0+8] ecx +
call ds:SHLWAPI_484  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_101A95D  +
test eax eax +
jz loc_101A61D  +
push ebx  +
push 38h  +
lea eax [ebp+var_54] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_4] +
mov ebx ds:SendMessageW +
add esp 0Ch +
mov [ebp+var_44] eax +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 1053h  +
push dword ptr [edi+30h]  +
mov [ebp+var_58] 5 +
mov [ebp+var_38] esi +
mov [ebp+lParam] 1 +
mov [ebp+var_14] esi +
call ebx  +
mov [ebp+var_54] eax +
test eax eax +
jge loc_101A61C  +
cmp [ebp+arg_4] 0 +
jz loc_101A61C  +
or [ebp+var_58] 2 +
mov [ebp+var_3C] 16h +
cmp esi 1 +
jz loc_1061534  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_1061544  +
lea eax [ebp+var_58] +
push eax  +
push 0  +
push 104Dh  +
push dword ptr [edi+30h]  +
mov [ebp+var_54] esi +
call ebx  +
push [ebp+arg_8]  +
lea eax [edi+esi*4+470h] +
push eax  +
call ds:__imp_IUnknown_Set  +
mov [ebp+var_4] 1 +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
push dword ptr [edi+0Ch]  +
lea eax [esi+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
jmp loc_10143CF  +
push edi  +
mov ecx esi +
call sub_1092A2C  +
jmp loc_10143CF  +
push edi  +
mov ecx esi +
call sub_109299B  +
jmp loc_10143CF  +
***
push dword ptr [ebx+0Ch]  +
lea eax [ecx+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10145FB  +
xor esi esi +
inc esi  +
jmp loc_10145FB  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 1  +
push esi  +
call sub_1019808  +
jmp loc_10114EA  +
***
sub dword ptr [esp+4] 10h +
jmp loc_10156D7  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10156D7  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10156D7  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_10156D7  +
***
push dword ptr [edx+0Ch]  +
lea eax [ecx+1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
jmp loc_101465B  +
***
xor eax eax +
push eax  +
push dword_10B23CC  +
push eax  +
push dword ptr [ecx+34h]  +
push eax  +
push eax  +
push eax  +
push eax  +
push 800003h  +
push eax  +
push offset aTooltips_class  +
push eax  +
call sub_103510B  +
retn   +
***
push dword ptr [eax+0Ch]  +
lea ecx [esi+1Ch] +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+0Ch]  +
test eax eax +
jl loc_1014521  +
xor edi edi +
inc edi  +
jmp loc_1014521  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov edi offset aUsedefaulttile +
push edi  +
mov esi offset aSoftwareMicr_5 +
push esi  +
push 80000002h  +
call sub_101917B  +
test eax eax +
jge loc_101A7A4  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push esi  +
push 80000001h  +
call sub_101917B  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpDst] 0 +
mov eax 80070057h +
jz loc_101A802  +
push [ebp+nSize]  +
push [ebp+lpDst]  +
push offset Src  +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jz loc_1068407  +
cmp [ebp+nSize] eax +
sbb eax eax +
and eax 8007007Ah +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 630h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov [ebp+var_630] ecx +
mov esi 80070057h +
test eax eax +
jz loc_101A910  +
push edi  +
push eax  +
mov edi 201h +
push edi  +
lea eax [ebp+Start] +
push eax  +
call sub_100665F  +
mov esi eax +
test esi esi +
jl loc_101A90F  +
push ebx  +
push 5Ch  +
lea eax [ebp+Start] +
push eax  +
call StrChrW  +
mov ebx eax +
test ebx ebx +
jz loc_101A8F3  +
lea ecx [ebp+Start] +
sub eax ecx +
sar eax 1 +
push eax  +
mov eax ecx +
push eax  +
push 100h  +
lea eax [ebp+String2] +
push eax  +
call sub_101CD02  +
mov esi eax +
test esi esi +
jl loc_101A90E  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+nSize] 10h +
call ds:GetComputerNameW  +
cmp eax 1 +
jnz loc_10684E7  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_10684D4  +
push 2Bh  +
pop eax  +
mov [ebx] ax +
test esi esi +
jl loc_101A90E  +
lea eax [ebp+Start] +
push eax  +
push [ebp+arg_8]  +
push [ebp+var_630]  +
call sub_100665F  +
mov esi eax +
pop ebx  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
cmp [ebp+arg_0] 1 +
jnz loc_101A941  +
push offset dword_101A948  +
call ds:SHLWAPI_618  +
test eax eax +
jz loc_101A971  +
xor esi esi +
inc esi  +
jmp loc_101A971  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jnz loc_101A92C  +
call sub_101A97D  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ds:SHLWAPI_618 +
push edi  +
push offset dword_101A9F0  +
xor edi edi +
call esi  +
test eax eax +
jnz loc_101A9D9  +
push offset dword_101A9E0  +
call esi  +
test eax eax +
jnz loc_101A9D9  +
inc eax  +
mov edi eax +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push 18h  +
push offset aStart_searchfi  +
push offset aSoftwareMicr_0  +
mov [ebp+var_8] 4 +
call ds:__imp_SHRegGetValueFromHKCUHKLM  +
test eax eax +
jnz loc_101A9D9  +
cmp [ebp+var_4] eax +
setnz al  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_101AA3C  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lParam] +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
call sub_101AAA3  +
mov esi eax +
test esi esi +
jz loc_101AA9A  +
mov ebx [ebp+hWnd] +
push esi  +
push 0  +
push ebx  +
call ds:SetWindowLongW  +
lea eax [esi+8] +
push eax  +
lea eax [edi+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
mov [esi+44h] ebx +
mov eax [edi+14h] +
mov [esi+38h] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_101AA9A  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push ebx  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
xor eax eax +
jmp loc_101AA93  +
***
pop ecx  +
test eax eax +
jz loc_1060AF8  +
mov ecx eax +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push esi  +
push 0Ah  +
mov esi ecx +
call sub_10173B2  +
push esi  +
lea ecx [esi+1DCh] +
mov dword ptr [esi] offset off_101AC28 +
mov dword ptr [esi+4] offset off_101AC0C +
mov dword ptr [esi+8] offset off_101ABFC +
mov dword ptr [esi+0Ch] offset off_101ABE8 +
mov dword ptr [esi+10h] offset off_101AB78 +
mov dword ptr [esi+14h] offset off_101AB58 +
mov dword ptr [esi+24h] offset off_101AB40 +
mov dword ptr [esi+2Ch] offset off_1014120 +
mov dword ptr [esi+1D4h] offset off_101AB30 +
call sub_101A37B  +
or dword ptr [esi+1D8h] 0FFFFFFFFh +
mov dword ptr [esi+3Ch] 6 +
mov dword ptr [esi+40h] 8 +
mov eax esi +
pop esi  +
retn   +
***
add ecx 1DCh +
mov eax [ecx] +
jmp dword ptr [eax+4]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10h  +
call GdipAlloc  +
test eax eax +
jz loc_10611CB  +
mov ecx eax +
pop ebp  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
mov dword ptr [esi] offset off_101B714 +
call GdipCreateBitmapFromHBITMAP  +
mov [esi+8] eax +
mov eax [ebp+var_4] +
mov [esi+4] eax +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+TokenHandle] +
and dword ptr [ebx] 0 +
push esi  +
mov esi ds:GetCurrentThread +
push edi  +
push ebx  +
push 0  +
push [ebp+DesiredAccess]  +
call esi  +
mov edi ds:OpenThreadToken +
push eax  +
call edi  +
test eax eax +
jnz loc_101AE2B  +
call sub_101AE40  +
test eax eax +
jge loc_101AE2D  +
cmp [ebp+arg_4] 0 +
jnz loc_105D3D4  +
cmp eax 800703F0h +
jnz loc_101AE2D  +
push ebx  +
push [ebp+DesiredAccess]  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_101AE34  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
call sub_101AE40  +
jmp loc_101AE2D  +
***
call ds:__imp_GetLastError  +
test eax eax +
jle loc_101AE56  +
and eax 0FFFFh +
or eax 80070000h +
test eax eax +
jge loc_1054888  +
retn   +
***
push [ebp+lParam]  +
mov ecx [ebp+arg_0] +
push [ebp+hDC]  +
push eax  +
push [ebp+hWnd]  +
call sub_101AE79  +
jmp loc_1011923  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi+18h] eax +
mov eax [ebp+arg_C] +
mov eax [eax] +
mov ecx [eax+14h] +
mov [esi+20h] ecx +
lea ecx [esi+8] +
push ecx  +
add eax 20h +
push eax  +
call ds:__imp_IUnknown_Set  +
push 1  +
mov ecx esi +
call sub_101AECC  +
test eax eax +
jl loc_10612A1  +
push 0  +
push 0FFh  +
mov ecx esi +
call sub_1014F45  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 42Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+20h] +
xor ecx ecx +
xor ebx ebx +
inc ecx  +
mov [ebp+var_41C] ebx +
mov [ebp+var_418] ecx +
cmp eax ebx +
jz loc_101AF1E  +
lea edx [ebp+var_418] +
push edx  +
push 1389h  +
push ebx  +
push ecx  +
push eax  +
call ds:GetThemeBool  +
cmp [ebp+var_418] ebx +
jz loc_101B0D9  +
push edi  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Start] +
push eax  +
push 2  +
mov [ebp+nSize] 201h +
call GetUserNameExW  +
test al al +
jz loc_101B076  +
push ebx  +
push ebx  +
lea eax [ebp+var_420] +
push eax  +
push ebx  +
lea eax [ebp+Start] +
push eax  +
call sub_101B58B  +
test eax eax +
jl loc_101B076  +
lea ecx [ebp+var_414] +
call sub_101BEB3  +
cmp [ebp+var_414] ebx +
jz loc_101B06B  +
push ebx  +
push [ebp+var_420]  +
call sub_101AD75  +
mov edi eax +
mov [ebp+var_428] edi +
cmp edi ebx +
jz loc_101B05F  +
push 30h  +
pop eax  +
mov ecx edi +
mov [esi+3Ch] eax +
mov [esi+40h] eax +
call sub_101BC95  +
mov ecx edi +
mov ebx eax +
call sub_101B0FD  +
mov ecx edi +
cmp ebx eax +
ja loc_1061241  +
call sub_101B0FD  +
mov ecx edi +
mov ebx eax +
call sub_101BC95  +
cmp ebx eax +
ja loc_1061260  +
push 8  +
pop eax  +
push 40h  +
lea edi [esi+24h] +
mov [edi] eax +
lea ebx [esi+28h] +
mov [ebx] eax +
mov [esi+30h] eax +
mov [esi+2Ch] eax +
pop eax  +
mov [ebp+var_410] eax +
mov [ebp+var_40C] eax +
lea eax [ebp+var_410] +
push eax  +
call sub_10149A6  +
lea eax [esi+3Ch] +
push eax  +
lea eax [esi+40h] +
push eax  +
call sub_1014903  +
lea eax [esi+2Ch] +
push eax  +
push edi  +
call sub_1014903  +
lea eax [esi+30h] +
push eax  +
push ebx  +
call sub_1014903  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+var_40C] +
mov [esi+34h] eax +
mov eax [ebp+var_410] +
mov [esi+38h] eax +
jz loc_101B044  +
mov ecx esi +
call sub_101A3E3  +
mov [ebp+var_41C] eax +
push [ebp+arg_0]  +
mov edi [ebp+var_428] +
push edi  +
mov ecx esi +
call sub_101BDC9  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
xor ebx ebx +
push [ebp+var_420]  +
call ds:DeleteObject  +
lea ecx [ebp+var_414] +
call sub_101BE8D  +
cmp [esi+44h] ebx +
jnz loc_101B0AB  +
lea eax [ebp+var_410] +
push eax  +
push 1  +
push 400h  +
push 4000000h  +
push 8002h  +
push dword ptr [esi+18h]  +
mov [ebp+var_40C] ebx +
mov [ebp+var_410] ebx +
call ds:SHELL32_2  +
mov [esi+44h] eax +
lea eax [ebp+var_42C] +
push eax  +
lea edi [esi+68h] +
push edi  +
mov [ebp+var_42C] 101h +
call SheShortenPathA  +
push edi  +
push dword ptr [esi+1Ch]  +
call ds:SetWindowTextW  +
pop edi  +
cmp [ebp+arg_0] ebx +
jz loc_1061281  +
push 1  +
mov ecx esi +
call sub_10147B4  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_41C] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call GdipGetImageHeight  +
push eax  +
mov ecx esi +
call sub_101BCC1  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 1  +
push esi  +
call sub_101B147  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+hWnd] eax +
mov eax [ebp+arg_C] +
mov ebx [eax] +
push esi  +
mov esi ecx +
mov eax esi +
neg eax  +
sbb eax eax +
lea ecx [esi+18h] +
push edi  +
and eax ecx +
push eax  +
lea eax [ebx+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
mov eax [ebx+14h] +
mov ebx ds:GetSystemMetrics +
xor edi edi +
mov [esi+3Ch] eax +
cmp eax edi +
jz loc_1062C30  +
lea ecx [esi+54h] +
push ecx  +
push 0EDBh  +
push edi  +
push dword ptr [esi+6CCh]  +
push eax  +
call ds:GetThemeColor  +
push 5  +
call ds:GetStockObject  +
mov [esi+4Ch] eax +
lea eax [esi+94h] +
push eax  +
push edi  +
push 0E12h  +
push edi  +
push dword ptr [esi+6CCh]  +
mov dword ptr [esi+60h] 1Dh +
push edi  +
push dword ptr [esi+3Ch]  +
mov dword ptr [esi+64h] 0Eh +
call ds:GetThemeMargins  +
lea eax [ebp+var_7C] +
push eax  +
push 1  +
push edi  +
push edi  +
push 4  +
push edi  +
push dword ptr [esi+3Ch]  +
mov [ebp+var_7C] edi +
mov [ebp+var_78] edi +
call ds:GetThemePartSize  +
mov eax [ebp+var_7C] +
mov [esi+90h] eax +
push 40000068h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_101B531  +
mov edi ds:LoadStringW +
push 80h  +
lea eax [esi+0CCh] +
push eax  +
push 2022h  +
push dword_10B23D0  +
call edi  +
test eax eax +
jz loc_101B544  +
push 80h  +
lea eax [esi+1CCh] +
push eax  +
push 2031h  +
push dword_10B23D0  +
call edi  +
test eax eax +
jz loc_101B544  +
push 100h  +
lea eax [esi+2CCh] +
push eax  +
push 2023h  +
push dword_10B23D0  +
call edi  +
test eax eax +
jz loc_101B544  +
push 100h  +
lea eax [esi+4CCh] +
push eax  +
push 2035h  +
push dword_10B23D0  +
call edi  +
test eax eax +
jz loc_101B544  +
lea eax [esi+0CCh] +
push eax  +
call sub_101B54E  +
mov edi ds:CharUpperW +
movzx eax ax +
push eax  +
call edi  +
mov [esi+0C8h] ax +
lea eax [esi+1CCh] +
push eax  +
call sub_101B54E  +
movzx eax ax +
push eax  +
call edi  +
mov [esi+0CAh] ax +
call sub_10159C1  +
push [ebp+hWnd]  +
mov [esi+40h] eax +
call ds:GetDC  +
mov [ebp+hDC] eax +
test eax eax +
jz loc_101B419  +
push dword ptr [esi+40h]  +
push eax  +
call ds:SelectObject  +
mov [ebp+var_78] eax +
test eax eax +
jz loc_101B40D  +
mov edi ds:lstrlenW +
lea eax [ebp+var_88] +
push eax  +
lea eax [esi+0CCh] +
push eax  +
call edi  +
push eax  +
lea eax [esi+0CCh] +
push eax  +
push [ebp+hDC]  +
call ds:GetTextExtentPoint32W  +
push 2Dh  +
call ebx  +
add eax [ebp+var_88._cx] +
mov [esi+84h] eax +
lea eax [ebp+var_88] +
push eax  +
lea eax [esi+1CCh] +
push eax  +
call edi  +
push eax  +
lea eax [esi+1CCh] +
push eax  +
push [ebp+hDC]  +
call ds:GetTextExtentPoint32W  +
push 2Dh  +
call ebx  +
add eax [ebp+var_88._cx] +
mov edi ds:GetTextMetricsW +
mov [esi+88h] eax +
lea eax [ebp+var_C4] +
push eax  +
push [ebp+hDC]  +
call edi  +
test eax eax +
jz loc_101B401  +
mov eax [ebp+var_C4.tmAscent] +
push 5Ch  +
mov [esi+7Ch] eax +
lea eax [ebp+var_60] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+var_C4.tmAscent] +
add esp 0Ch +
push offset aMarlett  +
mov [ebp+var_60.lfHeight] eax +
push 20h  +
lea eax [ebp+var_60.lfFaceName] +
push eax  +
mov [ebp+var_60.lfWeight] 190h +
mov [ebp+var_60.lfCharSet] 2 +
call sub_100665F  +
lea eax [ebp+var_60] +
push eax  +
call ds:CreateFontIndirectW  +
mov [esi+44h] eax +
test eax eax +
jz loc_101B401  +
push eax  +
push [ebp+hDC]  +
call ds:SelectObject  +
lea eax [ebp+var_C4] +
push eax  +
push [ebp+hDC]  +
call edi  +
test eax eax +
jz loc_101B401  +
mov eax [ebp+var_C4.tmAscent] +
mov [esi+80h] eax +
push [ebp+var_78]  +
push [ebp+hDC]  +
call ds:SelectObject  +
push [ebp+hDC]  +
push [ebp+hWnd]  +
call ds:ReleaseDC  +
cmp dword ptr [esi+80h] 0 +
jz loc_101B544  +
push 1  +
push offset aStart_largemfu  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
mov edi eax +
lea eax [ebp+X] +
push eax  +
push dword ptr [esi+30h]  +
call ds:GetClientRect  +
mov eax [esi+94h] +
add [ebp+X] eax +
mov eax [esi+98h] +
sub [ebp-6Ch] eax +
mov eax [esi+9Ch] +
add [ebp-70h] eax +
mov eax [esi+0A0h] +
sub [ebp-68h] eax +
neg edi  +
sbb edi edi +
and edi 0FFFFFFDAh +
add edi 31h +
push edi  +
call ebx  +
push 2Dh  +
mov edi eax +
call ebx  +
imul eax eax +
mov ecx [ebp-68h] +
add edi eax +
mov eax ecx +
sub eax [esi+7Ch] +
sub ecx [ebp-70h] +
sub eax [ebp-70h] +
mov [esi+8Ch] edi +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+0A4h] eax +
mov eax [ebp-6Ch] +
sub eax [ebp+X] +
xor edi edi +
push edi  +
push dword_10B23CC  +
push 1  +
push dword ptr [esi+30h]  +
push ecx  +
push eax  +
push dword ptr [ebp-70h]  +
lea eax [esi+0CCh] +
push [ebp+X]  +
push 5600000Bh  +
push eax  +
push offset aButton  +
push edi  +
call sub_103510B  +
mov [esi+34h] eax +
cmp eax edi +
jz loc_101B544  +
push eax  +
lea ecx [esi+4] +
call sub_1017642  +
mov eax [esi+40h] +
cmp eax edi +
jz loc_101B4F8  +
push edi  +
push eax  +
push 30h  +
push dword ptr [esi+34h]  +
call ds:SendMessageW  +
lea eax [esi+50h] +
push eax  +
push offset stru_1017D20  +
push 1  +
push edi  +
push offset stru_1017D10  +
call ds:__imp_CoCreateInstance  +
push esi  +
push dword ptr [esi+34h]  +
call ds:RegisterDragDrop  +
mov ecx esi +
call sub_101A6E4  +
mov ecx esi +
mov [esi+38h] eax +
call sub_1014233  +
mov ecx esi +
call sub_1011AA5  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
or eax 0FFFFFFFFh +
jmp loc_101B533  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpStart] +
push esi  +
movzx esi word ptr [eax] +
push 26h  +
push eax  +
call StrChrW  +
test eax eax +
jnz loc_101B56E  +
mov ax si +
pop esi  +
pop ebp  +
retn 4  +
movzx ecx word ptr [eax+2] +
test ecx ecx +
jz loc_101B566  +
jmp loc_105CFE3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+hMem]  +
lea eax [ebp+arg_C] +
push [ebp+arg_C]  +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+arg_4]  +
push offset aBmp  +
push [ebp+lpStart]  +
call sub_101D041  +
mov esi eax +
test esi esi +
jl loc_101B5CE  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push [ebp+hMem]  +
call sub_101B5E5  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_101B6FF  +
mov eax [ebp+arg_8] +
cmp eax ebx +
jz loc_101B6FF  +
push ebx  +
mov [eax] ebx +
call ds:CreateCompatibleDC  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1068426  +
mov eax [esi+0Ah] +
lea ecx [eax+esi] +
push edi  +
mov [ebp+var_C] ecx +
cmp eax 0Eh +
jb loc_101B6F8  +
mov edi [ebp+arg_4] +
cmp edi eax +
jb loc_101B6F8  +
add eax 0FFFFFFF2h +
push eax  +
call CoTaskMemAlloc  +
mov [ebp+arg_0] eax +
cmp eax ebx +
jz loc_101B6EA  +
mov ecx [esi+0Ah] +
sub ecx 0Eh +
push ecx  +
lea ecx [esi+0Eh] +
push ecx  +
push eax  +
call memcpy  +
mov eax edi +
sub eax [esi+0Ah] +
add esp 0Ch +
push eax  +
call CoTaskMemAlloc  +
mov [ebp+pv] eax +
cmp eax ebx +
jz loc_101B6F1  +
mov ecx edi +
sub ecx [esi+0Ah] +
push ecx  +
push [ebp+var_C]  +
push eax  +
call memcpy  +
add esp 0Ch +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
push [ebp+var_4]  +
call ds:CreateDIBSection  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jz loc_106841A  +
sub edi [esi+0Ah] +
push ebx  +
push [ebp+arg_0]  +
push [ebp+pv]  +
push edi  +
push ebx  +
push eax  +
push [ebp+var_4]  +
call ds:SetDIBits  +
test eax eax +
jz loc_1068411  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov esi ebx +
push [ebp+pv]  +
call CoTaskMemFree  +
push [ebp+arg_0]  +
call CoTaskMemFree  +
push [ebp+var_4]  +
call ds:DeleteDC  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov esi 8007000Eh +
jmp loc_101B6D8  +
mov esi 8007000Eh +
jmp loc_101B6D0  +
mov esi 8000FFFFh +
jmp loc_101B6D8  +
mov esi 80004003h +
jmp loc_101B6E2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+4]  +
mov dword ptr [esi] offset off_101B714 +
call GdipDisposeImage  +
test byte ptr [ebp+8] 1 +
jz loc_101B743  +
push esi  +
call GdipFree  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 1  +
push esi  +
call sub_101B76D  +
jmp loc_1011567  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov edi [eax] +
mov esi ecx +
mov eax esi +
neg eax  +
sbb eax eax +
lea ecx [esi+14h] +
and eax ecx +
push eax  +
lea eax [edi+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:GetClientRect  +
mov eax [edi+14h] +
xor ebx ebx +
mov [esi+34h] eax +
mov dword ptr [esi+10h] 1 +
cmp eax ebx +
jz loc_1061604  +
lea edi [esi+3Ch] +
push edi  +
lea ecx [ebp+Rect] +
push ecx  +
push 0E12h  +
push ebx  +
push 16h  +
push ebx  +
push eax  +
call ds:GetThemeMargins  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
push ebx  +
push dword_10B23CC  +
push ebx  +
push dword ptr [esi+2Ch]  +
push eax  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push eax  +
push dword ptr [esi+44h]  +
push dword ptr [edi]  +
push 5600204Fh  +
push ebx  +
push offset aSyslistview32  +
push ebx  +
call sub_103510B  +
mov [esi+30h] eax +
cmp eax ebx +
jz loc_1052146  +
push 1000h  +
mov edi 420h +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_101B833  +
push 2001h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_101B833  +
mov edi 10420h +
push edi  +
push edi  +
mov edi ds:SendMessageW +
push 1036h  +
push dword ptr [esi+30h]  +
call edi  +
mov eax [esi+34h] +
cmp eax ebx +
jz loc_1061621  +
lea ecx [esi+4Ch] +
push ecx  +
push 65Bh  +
push ebx  +
push 16h  +
push eax  +
call ds:GetThemeColor  +
lea eax [ebp+lParam] +
push eax  +
push 0EDBh  +
push ebx  +
push 16h  +
push dword ptr [esi+34h]  +
call ds:GetThemeColor  +
push [ebp+lParam]  +
or dword ptr [esi+50h] 0FFFFFFFFh +
push ebx  +
push 1024h  +
push dword ptr [esi+30h]  +
call edi  +
push dword ptr [esi+50h]  +
push ebx  +
push 1001h  +
push dword ptr [esi+30h]  +
call edi  +
push dword ptr [esi+50h]  +
push ebx  +
push 1026h  +
push dword ptr [esi+30h]  +
call edi  +
push dword ptr [esi+4Ch]  +
push ebx  +
push 10B1h  +
push dword ptr [esi+30h]  +
call edi  +
call ds:IsCompositionActive  +
test eax eax +
mov eax offset aTopmatchcompos +
jz loc_105213C  +
push ebx  +
push eax  +
push dword ptr [esi+30h]  +
call ds:SetWindowTheme  +
push 32h  +
call ds:GetSystemMetrics  +
mov [esi+54h] eax +
lea eax [ebp+arg_C] +
push eax  +
push offset dword_100670C  +
push 0FFFFFFFFh  +
call ds:SHELL32_727  +
test eax eax +
jl loc_101B914  +
mov eax [esi+54h] +
mov ecx [ebp+arg_C] +
mov edx [ecx] +
push eax  +
push eax  +
push ecx  +
call dword ptr [edx+80h]  +
test eax eax +
mov eax [ebp+arg_C] +
jl loc_105214E  +
mov [esi+468h] eax +
push ebx  +
push 4  +
push 108Eh  +
push dword ptr [esi+30h]  +
call edi  +
cmp [esi+468h] ebx +
jz loc_1052146  +
push 2Eh  +
call ds:GetSystemMetrics  +
push dword ptr [esi+468h]  +
lea eax [eax+eax+2] +
add [esi+54h] eax +
push ebx  +
push 1003h  +
push dword ptr [esi+30h]  +
call edi  +
call sub_101B9CF  +
mov edi 104h +
test eax eax +
push edi  +
lea eax [esi+58h] +
push eax  +
jz loc_1052159  +
push 2032h  +
push dword_10B23D0  +
call ds:LoadStringW  +
push edi  +
lea eax [esi+260h] +
push eax  +
push 2034h  +
push dword_10B23D0  +
call ds:LoadStringW  +
push dword ptr [esi+30h]  +
mov ecx esi +
call sub_1017642  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_210] +
push eax  +
push offset dword_101A23C  +
sub esp 10h +
mov edi esp +
mov esi offset dword_101A22C +
movs   +
movs   +
movs   +
xor ebx ebx +
mov [ebp+var_214] ebx +
mov [ebp+var_210] ebx +
movs   +
call AssocCreate  +
test eax eax +
jl loc_101BA81  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push ebx  +
push ebx  +
push offset aSearch  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_101BA81  +
mov eax [ebp+var_210] +
lea edx [ebp+var_218] +
push edx  +
lea edx [ebp+pszPath] +
push edx  +
push ebx  +
push 2  +
push ebx  +
mov [ebp+var_218] 104h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_101BA81  +
lea eax [ebp+pszPath] +
push eax  +
call PathFindFileNameW  +
push offset aExplorer_exe  +
push eax  +
call StrCmpICW  +
test eax eax +
jnz loc_101BA81  +
mov [ebp+var_214] 1 +
mov eax [ebp+var_210] +
cmp eax ebx +
jz loc_101BA91  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_214] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_C] +
push esi  +
xor esi esi +
mov [eax] esi +
mov [ebp+hObject] esi +
cmp [ebp+TokenHandle] esi +
jnz loc_101BB11  +
lea eax [ebp+hObject] +
push eax  +
push [ebp+hMem]  +
push 8  +
call sub_101ADD3  +
cmp eax esi +
jl loc_101BB6A  +
mov eax [ebp+hObject] +
mov [ebp+TokenHandle] eax +
push ebx  +
lea ecx [ebp+hMem] +
mov eax 800h +
push ecx  +
push eax  +
mov [ebp+uBytes] eax +
call sub_101BB7F  +
mov ebx eax +
cmp ebx esi +
jl loc_101BB58  +
mov esi ds:GetTokenInformation +
push edi  +
lea eax [ebp+uBytes] +
push eax  +
push [ebp+uBytes]  +
push [ebp+hMem]  +
push [ebp+TokenInformationClass]  +
push [ebp+TokenHandle]  +
call esi  +
test eax eax +
jz loc_105D3FC  +
test ebx ebx +
jl loc_101BB6F  +
mov eax [ebp+hMem] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
pop edi  +
cmp [ebp+hObject] 0 +
jz loc_101BB67  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax ebx +
pop ebx  +
pop esi  +
leave   +
retn 10h  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_101BB57  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+uBytes]  +
push 40h  +
push 0  +
call sub_1010373  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_4] +
push eax  +
push 0  +
push 1  +
push [ebp+TokenHandle]  +
call sub_101BAE2  +
mov edi eax +
test edi edi +
jl loc_101BBD9  +
push esi  +
mov esi [ebp+arg_4] +
push dword ptr [esi]  +
call ConvertSidToStringSidW  +
test eax eax +
jz loc_105D459  +
push esi  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi ds:__imp_CoCreateInstance +
mov esi ecx +
lea eax [esi+8] +
push eax  +
push offset stru_100DD00  +
push 1  +
push 0  +
push offset stru_100DD10  +
call edi  +
mov [ebp-4] eax +
test eax eax +
jl loc_101BC76  +
push ebx  +
lea ebx [esi+20h] +
push ebx  +
push offset stru_101BC80  +
push 3  +
push 0  +
push offset rclsid  +
call edi  +
xor edi edi +
cmp eax edi +
mov [ebp-4] eax +
jl loc_101BC75  +
lea ecx [ebp-8] +
mov [ebp-8] edi +
mov [esi+4] edi +
call sub_10082DC  +
mov ecx [esi+18h] +
cmp ecx edi +
jz loc_101BC75  +
mov eax [ebx] +
mov edx [eax] +
add ecx 1D4h +
push ecx  +
push eax  +
call dword ptr [edx+1Ch]  +
mov ecx [esi+18h] +
mov eax [ecx+44h] +
push edi  +
push edi  +
push 4000000h  +
push edi  +
mov [esi+1Ch] eax +
call sub_1017D5D  +
pop ebx  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call GdipGetImageWidth  +
push eax  +
mov ecx esi +
call sub_101BCC1  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_10611BB  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov esi ecx +
call GdipCreateFromHDC  +
mov [esi+4] eax +
mov eax [ebp+var_4] +
mov [esi] eax +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push dword ptr [esi]  +
call GdipSetCompositingMode  +
push eax  +
mov ecx esi +
call sub_101BD38  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_10611C3  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push dword ptr [esi]  +
call GdipSetInterpolationMode  +
push eax  +
mov ecx esi +
call sub_101BD38  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
test eax eax +
jz loc_101BDB5  +
mov eax [eax+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push dword ptr [esi]  +
call GdipDrawImageRectI  +
push eax  +
mov ecx esi +
call sub_101BD38  +
pop esi  +
pop ebp  +
retn 14h  +
xor eax eax +
jmp loc_101BD94  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
mov esi ecx +
push dword ptr [esi+1Ch]  +
call ds:GetDC  +
push eax  +
mov [ebp+hDC] eax +
call ds:CreateCompatibleDC  +
xor ebx ebx +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_101BE6B  +
mov eax dword_10B1154 +
push edi  +
cmp eax ebx +
jz loc_1028583  +
cmp [ebp+arg_4] ebx +
jz loc_106122E  +
cmp eax ebx +
jz loc_1028583  +
mov edi ds:SelectObject +
push eax  +
push [ebp+var_4]  +
call edi  +
push [ebp+var_4]  +
lea ecx [ebp+Rect.right] +
mov [ebp+arg_4] eax +
call sub_101BCDC  +
push 1  +
lea ecx [ebp+Rect.right] +
call sub_101BD14  +
push 6  +
lea ecx [ebp+Rect.right] +
call sub_101BD53  +
push dword ptr [esi+3Ch]  +
lea ecx [ebp+Rect.right] +
push dword ptr [esi+40h]  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
call sub_101BD82  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
call edi  +
push [ebp+Rect.right]  +
call GdipDeleteGraphics  +
push [ebp+var_4]  +
call ds:DeleteDC  +
pop edi  +
push [ebp+hDC]  +
push dword ptr [esi+1Ch]  +
call ds:ReleaseDC  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_101BEA1  +
push eax  +
call GdiplusShutdown  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
xor edi edi +
push edi  +
lea eax [ebp+var_10] +
mov esi ecx +
push eax  +
push esi  +
mov [ebp+var_10] 1 +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
call GdiplusStartup  +
test eax eax +
jnz loc_1068400  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
cmp dword ptr [ebp+0Ch] 82h +
jz loc_106133C  +
push 26Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_101BF31  +
mov ecx eax +
call sub_101BF3A  +
mov esi eax +
push esi  +
push 0FFFFFFEBh  +
push edi  +
call ds:SetWindowLongW  +
test esi esi +
jnz loc_10118B0  +
jmp loc_106133C  +
***
xor esi esi +
jmp loc_101BF1A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi ds:__imp_SHRegGetValueFromHKCUHKLM +
lea edx [ebp+var_4] +
push edx  +
lea eax [esi+5Ch] +
push eax  +
xor ecx ecx +
push ecx  +
push 0FFFFh  +
mov [esi+4] ecx +
mov dword ptr [esi+10h] offset off_1017480 +
mov [esi+14h] ecx +
or dword ptr [esi+50h] 0FFFFFFFFh +
push offset aStartpanel_fad  +
mov ebx offset aSoftwareMicr_2 +
mov dword ptr [esi] offset off_101C07C +
mov dword ptr [esi+8] offset off_101C06C +
mov dword ptr [esi+0Ch] offset off_101C058 +
mov dword ptr [esi+10h] offset off_101C054 +
push ebx  +
mov dword ptr [esi+4Ch] 0FFFFFFFFh +
mov dword ptr [esi+48h] 1 +
mov [ebp+var_4] 4 +
mov dword ptr [eax] 15Eh +
call edi  +
lea ecx [ebp+var_4] +
push ecx  +
lea eax [esi+60h] +
push eax  +
push 0  +
push 0FFFFh  +
push offset aStartpanel_f_0  +
push ebx  +
mov [ebp+var_4] 4 +
mov dword ptr [eax] 0FAh +
call edi  +
lea ecx [ebp+var_4] +
push ecx  +
lea eax [esi+64h] +
push eax  +
push 0  +
push 0FFFFh  +
push offset aStartpanel_f_1  +
push ebx  +
mov [ebp+var_4] 4 +
mov dword ptr [eax] 190h +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea eax [ebp+var_418] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
xor esi esi +
push esi  +
push 0FFFFh  +
push offset aInternetextens  +
push offset aSoftwareMic_10  +
mov edi ecx +
mov [ebp+var_418] 208h +
call ds:__imp_SHRegGetValueFromHKCUHKLM  +
test eax eax +
jz loc_1061559  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_101C27C  +
push 1  +
xor esi esi +
push esi  +
push offset stru_101C26C  +
mov edi ecx +
xor ebx ebx +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_101C262  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset stru_101C28C  +
push [ebp+arg_0]  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_101C259  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_101C250  +
cmp [ebp+var_8] esi +
ja loc_1061593  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 81h  +
push esi  +
call sub_101C2B7  +
jmp loc_1011567  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 48Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_101C2F0  +
push [ebp+hWnd]  +
mov ecx eax +
call sub_101C2F9  +
test eax eax +
jz loc_10616A4  +
push eax  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
pop ebp  +
jmp ds:DefWindowProcW  +
xor eax eax +
jmp loc_101C2D5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
and dword ptr [eax+1Ch] 0 +
mov ecx [ebp+arg_0] +
mov dword ptr [eax+18h] offset off_1015AE0 +
and dword ptr [eax+28h] 0 +
mov dword ptr [eax+24h] offset off_1017480 +
mov dword ptr [eax] offset off_10137A0 +
mov dword ptr [eax+4] offset off_1014EEC +
mov dword ptr [eax+14h] offset off_10138B4 +
mov dword ptr [eax+18h] offset off_1019270 +
mov dword ptr [eax+20h] offset off_10138D0 +
mov dword ptr [eax+24h] offset off_10161E8 +
mov [eax+2Ch] ecx +
mov dword ptr [eax+38h] 1 +
pop ebp  +
retn 4  +
***
push ebx  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push 1  +
push edi  +
call sub_101C368  +
jmp loc_1011802  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov eax esi +
xor edi edi +
neg eax  +
sbb eax eax +
lea ecx [esi+8] +
and eax ecx +
push eax  +
mov eax [ebp+arg_C] +
mov eax [eax] +
add eax 20h +
push eax  +
call ds:__imp_IUnknown_Set  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_101C3AD  +
test eax eax +
jl loc_10616F4  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov esi ecx +
push edi  +
mov [esi+78h] eax +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push offset aShellDaf95313E  +
call ds:__imp_SHParseDisplayName  +
cmp eax edi +
mov [ebp+arg_0] eax +
jl loc_101C42F  +
mov edi ds:SHCreateShellItemArrayFromIDLists +
push ebx  +
lea eax [esi+44h] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
call edi  +
push [ebp+var_4]  +
mov ebx ds:__imp_SHELL32_155 +
mov [ebp+arg_0] eax +
call ebx  +
xor eax eax +
cmp [ebp+arg_0] eax +
jl loc_101C42E  +
push eax  +
push eax  +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
push offset aShellE345f35f9  +
call ds:__imp_SHParseDisplayName  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_101C42E  +
add esi 48h +
push esi  +
lea eax [ebp+var_8] +
push eax  +
push 1  +
call edi  +
push [ebp+var_8]  +
mov [ebp+arg_0] eax +
call ebx  +
pop ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
push 0CCh  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104BF22  +
mov ecx eax +
call sub_101C546  +
mov esi eax +
test esi esi +
jz loc_1061C62  +
push esi  +
push 0FFFFFFEBh  +
push edi  +
call ds:SetWindowLongW  +
mov eax ebx +
mov eax [eax] +
mov eax [eax+14h] +
mov [esi+64h] eax +
mov eax [ebp+8] +
test eax eax +
jnz loc_1061C76  +
xor eax eax +
inc eax  +
jmp loc_1011813  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea eax [ebp+var_4] +
push eax  +
xor ebx ebx +
lea edi [esi+0A4h] +
push edi  +
push ebx  +
mov dword ptr [esi+4] 1 +
mov dword ptr [esi+14h] offset off_1015AE0 +
mov [esi+18h] ebx +
mov dword ptr [esi+38h] offset off_1017480 +
mov [esi+3Ch] ebx +
push 0FFFFh  +
push offset aStartpanel_top  +
push offset aSoftwareMicr_2  +
mov dword ptr [esi] offset off_10029F4 +
mov dword ptr [esi+8] offset off_1002A70 +
mov dword ptr [esi+0Ch] offset off_1006570 +
mov dword ptr [esi+10h] offset off_101434C +
mov dword ptr [esi+14h] offset off_1012754 +
mov dword ptr [esi+1Ch] offset off_100F2F8 +
mov dword ptr [esi+20h] offset off_101278C +
mov dword ptr [esi+24h] offset off_10161D8 +
mov dword ptr [esi+28h] offset off_101297C +
mov dword ptr [esi+2Ch] offset off_101954C +
mov dword ptr [esi+30h] offset off_10171DC +
mov dword ptr [esi+34h] offset off_10345E0 +
mov dword ptr [esi+38h] offset off_10161EC +
mov [edi] ebx +
mov [ebp+var_4] 4 +
call ds:__imp_SHRegGetValueFromHKCUHKLM  +
mov eax [edi] +
cmp eax 2 +
jz loc_101C60B  +
cmp eax 3 +
jz loc_101C60B  +
cmp eax 1 +
jz loc_101C60B  +
cmp eax ebx +
jnz loc_1061833  +
or dword ptr [esi+0A8h] 0FFFFFFFFh +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push esi  +
call sub_101C65B  +
jmp loc_10114EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 60h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_101C691  +
push [ebp+hWnd]  +
mov ecx eax +
call sub_101C69A  +
test eax eax +
jz loc_1062020  +
push eax  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
pop ebp  +
jmp ds:DefWindowProcW  +
xor eax eax +
jmp loc_101C676  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax ecx +
and dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+18h] offset off_1015AE0 +
mov dword ptr [eax+2Ch] offset off_1017480 +
xor ecx ecx +
inc ecx  +
mov [eax+30h] ecx +
mov dword ptr [eax] offset off_1013970 +
mov dword ptr [eax+4] offset off_1014F08 +
mov dword ptr [eax+14h] offset off_1013AB0 +
mov dword ptr [eax+18h] offset off_1019224 +
mov dword ptr [eax+20h] offset off_1013AD0 +
mov dword ptr [eax+24h] offset off_10140B8 +
mov dword ptr [eax+28h] offset off_1014798 +
mov dword ptr [eax+2Ch] offset off_1014124 +
mov [eax+40h] edx +
mov [eax+44h] ecx +
mov dword ptr [eax+58h] 12h +
mov dword ptr [eax+5Ch] 5 +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push eax  +
push edi  +
call sub_101C724  +
jmp loc_1011887  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 7Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_101C757  +
mov ecx eax +
call sub_101C760  +
test eax eax +
jz loc_1062166  +
push eax  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
pop ebp  +
jmp ds:DefWindowProcW  +
xor eax eax +
jmp loc_101C73C  +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi+20h] 0 +
mov dword ptr [esi+1Ch] offset off_1015AE0 +
and dword ptr [esi+28h] 0 +
mov dword ptr [esi+24h] offset off_1017480 +
mov dword ptr [esi] offset off_100F4A0 +
mov dword ptr [esi+4] offset off_1015BE4 +
mov dword ptr [esi+8] offset off_10129AC +
mov dword ptr [esi+0Ch] offset off_101955C +
mov dword ptr [esi+10h] offset off_10155A0 +
mov dword ptr [esi+14h] offset off_1015590 +
mov dword ptr [esi+18h] offset off_101557C +
mov dword ptr [esi+1Ch] offset off_1015AC8 +
mov dword ptr [esi+24h] offset off_10148A4 +
mov dword ptr [esi+2Ch] 1 +
call sub_101C7CE  +
mov eax esi +
pop esi  +
retn   +
***
cmp word_10B1086 0 +
jz loc_102924F  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+38h] +
push esi  +
push offset stru_101C8C4  +
push 1  +
push 0  +
push offset stru_101C8B4  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_101C8AC  +
push edi  +
push dword ptr [esi]  +
call ds:__imp_IUnknown_SetSite  +
mov eax [esi] +
mov ecx [eax] +
lea edx [edi+40h] +
push edx  +
push offset dword_100E458  +
push eax  +
call dword ptr [ecx]  +
mov eax [esi] +
mov ecx [eax] +
lea edx [edi+5Ch] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_101C8AC  +
push ebx  +
mov ecx edi +
mov ebx 584808h +
call sub_1015433  +
test eax eax +
jnz loc_106216C  +
push 1  +
push offset aStart_sortbyna  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
test eax eax +
jz loc_101C865  +
or ebx 2000h +
mov eax [esi] +
mov ecx [eax] +
push ebx  +
push 0  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebx  +
test eax eax +
jl loc_101C8AC  +
mov eax [esi] +
mov ecx [eax] +
push 1  +
push 1  +
push eax  +
call dword ptr [ecx+60h]  +
call ds:IsCompositionActive  +
mov ecx offset aStartmenuhover +
test eax eax +
jz loc_10521BC  +
mov eax [esi] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+44h]  +
add edi 44h +
push edi  +
push dword ptr [esi]  +
call ds:IUnknown_GetWindow  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push 1  +
push edi  +
call sub_101C920  +
jmp loc_1011887  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+var_210] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov edi [eax] +
mov esi ecx +
mov eax esi +
neg eax  +
sbb eax eax +
lea ecx [esi+14h] +
and eax ecx +
push eax  +
lea eax [edi+20h] +
push eax  +
call ds:__imp_IUnknown_Set  +
mov edi [edi+14h] +
xor ebx ebx +
mov [esi+48h] edi +
cmp edi ebx +
jz loc_1062176  +
lea eax [esi+64h] +
push eax  +
push 658h  +
push ebx  +
push 11h  +
push edi  +
mov edi ds:GetThemeColor +
call edi  +
lea eax [esi+60h] +
push eax  +
push 659h  +
push ebx  +
push 11h  +
push dword ptr [esi+48h]  +
call edi  +
lea eax [esi+4Ch] +
push eax  +
push ebx  +
push 0E12h  +
push ebx  +
push 11h  +
push ebx  +
push dword ptr [esi+48h]  +
call ds:GetThemeMargins  +
push [ebp+var_210]  +
mov ecx esi +
call sub_101C7E2  +
cmp eax ebx +
mov [ebp+var_210] eax +
jl loc_101C9EF  +
push 104h  +
lea eax [ebp+String] +
push eax  +
push 2022h  +
push dword_10B23D0  +
call ds:LoadStringW  +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi+44h]  +
call ds:SetWindowTextW  +
cmp [esi+48h] ebx +
jz loc_101CA67  +
push dword ptr [esi+44h]  +
xor eax eax +
mov [ebp+var_218] ebx +
lea edi [ebp+var_214] +
stos   +
call ds:GetDC  +
mov edi eax +
cmp edi ebx +
jz loc_101CA33  +
lea eax [ebp+var_218] +
push eax  +
push 2  +
push ebx  +
push ebx  +
push 8  +
push edi  +
push dword ptr [esi+48h]  +
call ds:GetThemePartSize  +
push edi  +
push dword ptr [esi+44h]  +
call ds:ReleaseDC  +
mov eax [ebp+var_214] +
push 1  +
push offset aStart_notifyne  +
push offset aSoftwareMicr_0  +
mov [esi+70h] eax +
call SHRegGetBoolValueFromHKCUHKLM  +
mov ecx [ebp+var_4] +
pop edi  +
mov [esi+74h] eax +
mov eax [ebp+var_210] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
push 2Eh  +
call ds:GetSystemMetrics  +
jmp loc_101CA39  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 81h  +
push esi  +
call sub_101CAB7  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 6D0h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_101CAF0  +
push [ebp+hWnd]  +
mov ecx eax +
call sub_101CAF9  +
test eax eax +
jz loc_1062C2A  +
push eax  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
pop ebp  +
jmp ds:DefWindowProcW  +
xor eax eax +
jmp loc_101CAD5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax+4] offset off_1014E08 +
mov dword ptr [eax+8] offset off_1014E78 +
and dword ptr [eax+20h] 0 +
mov dword ptr [eax+1Ch] offset off_1015AE0 +
and dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+28h] offset off_1017480 +
or dword ptr [eax+54h] 0FFFFFFFFh +
or dword ptr [eax+5Ch] 0FFFFFFFFh +
mov dword ptr [eax] offset off_1014C74 +
mov dword ptr [eax+4] offset off_1014C90 +
mov dword ptr [eax+8] offset off_1014F24 +
mov dword ptr [eax+18h] offset off_1014EB0 +
mov dword ptr [eax+1Ch] offset off_1019288 +
mov dword ptr [eax+24h] offset off_1014890 +
mov dword ptr [eax+28h] offset off_101477C +
mov [eax+30h] ecx +
mov dword ptr [eax+0C0h] 1 +
mov dword ptr [eax+6CCh] 2 +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 5  +
push esi  +
call sub_101CB92  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ecx+0A0h] +
push esi  +
mov esi [ecx+94h] +
push edi  +
mov edi [ecx+98h] +
movsx edx ax +
shr eax 10h +
add edi esi +
sub edx edi +
mov edi [ecx+9Ch] +
push 20Ch  +
cwde   +
add ebx edi +
sub eax ebx +
push eax  +
push edx  +
push edi  +
push esi  +
push 0  +
push dword ptr [ecx+34h]  +
call ds:SetWindowPos  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpStart] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 101h  +
lea ecx [ebp+var_408] +
push ecx  +
push 100h  +
lea ecx [ebp+var_204] +
push ecx  +
push eax  +
call sub_101CC51  +
mov esi eax +
test esi esi +
jl loc_101CC3A  +
cmp word ptr [ebp+var_204] 0 +
jz loc_1068467  +
mov esi 80070002h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
mov edi [ebp+lpStart] +
mov [ebp+nSize] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_2C] eax +
mov ebx 80004005h +
test edi edi +
jz loc_101CCEB  +
push esi  +
push 5Ch  +
push edi  +
call StrChrW  +
mov esi eax +
test esi esi +
jz loc_106843A  +
lea eax [esi+2] +
push eax  +
push [ebp+arg_10]  +
push [ebp+var_2C]  +
call sub_100665F  +
mov ebx eax +
test ebx ebx +
jl loc_101CCEA  +
sub esi edi +
sar esi 1 +
push esi  +
mov esi [ebp+nSize] +
push edi  +
push [ebp+arg_8]  +
push esi  +
call sub_101CD02  +
mov ebx eax +
test ebx ebx +
jl loc_101CCEA  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+nSize] 10h +
call ds:GetComputerNameW  +
cmp eax 1 +
jnz loc_101CCEA  +
push esi  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_1068432  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_101CD42  +
cmp edx 7FFFFFFFh +
ja loc_101CD42  +
test eax eax +
jl loc_101CD3E  +
cmp [ebp+arg_C] 7FFFFFFEh +
ja loc_105D2DD  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_1007F97  +
pop ebp  +
retn 10h  +
mov eax ecx +
jmp loc_101CD1D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+lpStart]  +
xor edi edi +
call sub_101CBE6  +
test eax eax +
jge loc_10684F3  +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call sub_101BB9C  +
test eax eax +
jl loc_101CDB7  +
push esi  +
lea eax [ebp+Sids] +
push eax  +
push [ebp+var_10]  +
call ConvertStringSidToSidW  +
mov esi ds:LocalFree +
test eax eax +
jz loc_101CDB1  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+Sids]  +
call sub_101CDC3  +
test eax eax +
jl loc_101CDAC  +
cmp [ebp+var_14] 1F5h +
jz loc_1068524  +
push [ebp+Sids]  +
call esi  +
push [ebp+var_10]  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+pSid]  +
xor edi edi +
call ds:IsValidSid  +
test eax eax +
jz loc_101CE03  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_101CE03  +
push [ebp+pSid]  +
call ds:GetSidSubAuthorityCount  +
movzx eax byte ptr [eax] +
dec eax  +
push eax  +
push [ebp+pSid]  +
call ds:GetSidSubAuthority  +
mov eax [eax] +
mov [esi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov edi 80004005h +
jmp loc_101CDFB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 104h  +
lea eax [ebp+Dst] +
push eax  +
call sub_101A7CF  +
test eax eax +
jl loc_101CE5A  +
push offset aMicrosoftUserA  +
lea eax [ebp+Dst] +
push eax  +
push offset aSS  +
push [ebp+arg_4]  +
push esi  +
call sub_10343CA  +
add esp 14h +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 104h  +
lea eax [ebp+Dst] +
push eax  +
call sub_101A7CF  +
test eax eax +
jl loc_101CECD  +
push offset aUser_bmp  +
push offset aMicrosoftUserA  +
lea eax [ebp+Dst] +
push eax  +
push offset aSSS  +
push [ebp+arg_4]  +
push esi  +
call sub_10343CA  +
add esp 18h +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov [ebp+var_424] ecx +
mov ecx [ebp+arg_8] +
push edi  +
mov [ebp+var_428] ecx +
mov esi 104h +
push esi  +
lea ecx [ebp+var_414] +
push ecx  +
push eax  +
call sub_101A829  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jl loc_101D018  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_101CE0F  +
mov edi eax +
cmp edi ebx +
jl loc_101D018  +
push offset dword_101D038  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1010E3B  +
mov edi eax +
cmp edi ebx +
jl loc_101D018  +
lea eax [ebp+var_414] +
push eax  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1010E3B  +
mov edi eax +
cmp edi ebx +
jl loc_101D018  +
push offset a_dat  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1010E3B  +
mov edi eax +
cmp edi ebx +
jl loc_101D018  +
push ebx  +
push 80h  +
push 3  +
push ebx  +
push 1  +
push 1  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateFileW  +
mov [ebp+hFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_10685EE  +
lea ecx [ebp+FileSizeHigh] +
push ecx  +
push eax  +
mov [ebp+FileSizeHigh] ebx +
call ds:GetFileSize  +
mov esi eax +
cmp [ebp+FileSizeHigh] ebx +
ja loc_101D007  +
cmp esi ebx +
jnz loc_1068578  +
mov edi 800703EEh +
push [ebp+hFile]  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
push esi  +
mov esi 80070057h +
cmp eax ebx +
jz loc_101D124  +
cmp [ebp+arg_10] ebx +
jz loc_101D124  +
mov [eax] ebx +
mov eax [ebp+arg_14] +
cmp eax ebx +
jnz loc_1068656  +
cmp [ebp+arg_8] 1 +
jz loc_101D138  +
cmp [ebp+arg_8] 2 +
jz loc_101D138  +
call sub_101A76A  +
test eax eax +
jnz loc_1068660  +
cmp [ebp+lpStart] ebx +
jz loc_101D124  +
push edi  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+lpStart]  +
mov [ebp+var_8] ebx +
call sub_101CBE6  +
cmp eax ebx +
jge loc_106867A  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+uBytes] +
push eax  +
push [ebp+lpStart]  +
mov [ebp+uBytes] ebx +
mov [ebp+var_10] ebx +
call sub_101CF07  +
mov esi eax +
cmp esi ebx +
jge loc_1068751  +
cmp [ebp+arg_8] 3 +
jz loc_101D0E4  +
xor esi esi +
mov [ebp+var_8] 1 +
pop edi  +
cmp [ebp+var_8] ebx +
jz loc_101D0FD  +
push [ebp+lpStart]  +
call sub_101CD4B  +
xor ecx ecx +
test eax eax +
setnz cl  +
inc ecx  +
mov [ebp+arg_8] ecx +
cmp esi ebx +
jl loc_101D124  +
cmp [ebp+arg_8] 1 +
jnz loc_101D13C  +
cmp [ebp+arg_8] 2 +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
jz loc_10687C9  +
call sub_101D149  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
cmp esi ebx +
jl loc_101D0B5  +
jmp loc_101D0E4  +
cmp esi ebx +
jl loc_101D0D5  +
jmp loc_101D0E4  +
xor esi esi +
jmp loc_101D0FD  +
cmp [ebp+arg_8] 2 +
jz loc_101D107  +
jmp loc_101D124  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
call sub_101CE7D  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_101D1A5  +
push edi  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_101D1C1  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_101D1A5  +
test ebx ebx +
jnz loc_1068634  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
xor edi edi +
push edi  +
push 80h  +
push 3  +
push edi  +
push 1  +
push 1  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_1068627  +
push ebx  +
push esi  +
lea ecx [ebp+FileSizeHigh] +
push ecx  +
push eax  +
mov [ebp+FileSizeHigh] edi +
call ds:GetFileSize  +
mov ebx [ebp+NumberOfBytesRead] +
mov [ebx] eax +
cmp [ebp+FileSizeHigh] edi +
ja loc_101D255  +
cmp eax 0FFFFFFFFh +
jz loc_101D255  +
mov esi [ebp+arg_4] +
push esi  +
push eax  +
call sub_101BB7F  +
cmp eax edi +
mov [ebp+lpFileName] eax +
jl loc_101D242  +
push edi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push dword ptr [ebx]  +
push dword ptr [esi]  +
push [ebp+hObject]  +
call ds:ReadFile  +
test eax eax +
jz loc_1068610  +
mov eax [ebp+NumberOfBytesRead] +
cmp eax [ebx] +
jnz loc_10685FA  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop esi  +
pop ebx  +
mov eax [ebp+lpFileName] +
pop edi  +
leave   +
retn 0Ch  +
mov [ebp+lpFileName] 800703EEh +
jmp loc_101D242  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 250h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_248] 0 +
push ebx  +
mov ebx ds:SendMessageW +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+Str1] +
mov [ebp+pv] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
mov esi ecx +
push 104Bh  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_210] 1 +
mov [ebp+var_24C] edi +
mov [ebp+lParam] 5 +
mov [ebp+var_238] 104h +
call ebx  +
test eax eax +
jz loc_101D356  +
push [ebp+var_230]  +
mov ecx esi +
call sub_101231E  +
xor ecx ecx +
mov [ebp+var_214] eax +
cmp eax ecx +
jz loc_101D36D  +
push ecx  +
mov [ebp+var_248] ecx +
push eax  +
mov ecx esi +
mov [ebp+var_24C] edi +
mov [ebp+lParam] 1 +
call sub_1012646  +
mov [ebp+pv] eax +
test eax eax +
jz loc_101D34B  +
push 104h  +
push eax  +
lea eax [ebp+Str1] +
push eax  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_105F8EE  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov ecx [ebp+var_214] +
call sub_100F319  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
mov [ebp+var_210] ecx +
jmp loc_101D356  +
***
mov eax [ebp+var_28] +
cmp eax [esi+1ACh] +
jb loc_1012CD2  +
jmp loc_1012D5C  +
dec eax  +
push eax  +
lea ecx [esi+0E8h] +
mov [ebp+var_40] eax +
call sub_1013815  +
mov eax [eax] +
cmp eax [ebp+arg_0] +
jnz loc_1012D87  +
jmp loc_10604A8  +
test eax eax +
jz loc_1012CFA  +
jmp loc_1012D3F  +
***
mov [ebp+var_8] 1 +
jmp loc_100FC60  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push eax  +
push esi  +
call sub_101D4B4  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_0] +
mov [esi+28h] eax +
mov eax [ebp+arg_4] +
mov [esi+2Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+30h] eax +
mov dword ptr [esi] offset off_1003970 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
retn   +
***
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_10142FE  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset dword_100671C  +
push ecx  +
jmp loc_101430A  +
***
push [ebp+arg_8]  +
lea eax [ebp+hIcon] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
push [ebp+var_228]  +
lea eax [ebp+psz2] +
push [ebp+var_21C]  +
push eax  +
call ds:CheckEscapesW  +
mov ebx eax +
jmp loc_101690C  +
***
push [ebp+var_4]  +
mov ecx esi +
call sub_101D26E  +
mov ecx esi +
call sub_1015BB6  +
test eax eax +
jz loc_105FEAC  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
cmp eax 0FFFFFFFFh +
jz loc_101D50D  +
mov eax [edi] +
push edi  +
mov ecx edi +
call dword ptr [eax+14h]  +
push eax  +
push ebx  +
push dword ptr [esi+44h]  +
mov ecx esi +
call sub_1012FAE  +
jmp loc_101D50D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov esi ecx +
push 1004h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
cmp eax edi +
mov [ebp+var_8] eax +
mov [ebp+var_4] edi +
jle loc_101D520  +
push ebx  +
mov ebx 40Dh +
push [ebp+var_4]  +
mov ecx esi +
call sub_1012341  +
mov edi eax +
test edi edi +
jz loc_101D514  +
push [ebp+arg_C]  +
mov eax [esi] +
push [ebp+arg_8]  +
mov ecx esi +
push edi  +
call dword ptr [eax+0ECh]  +
test eax eax +
jz loc_101D474  +
mov ecx edi +
call sub_100F319  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jl loc_101D4E4  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
push 34h  +
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_101D544  +
push dword ptr [esi+4Ch]  +
mov ecx eax +
push ebx  +
push dword ptr [esi+44h]  +
call sub_101D3DB  +
mov edi eax +
test edi edi +
jz loc_101D5C1  +
mov eax [esi+58h] +
mov ecx [eax] +
push 10000000h  +
push esi  +
push offset dword_101D568  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
jmp loc_101D5C1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor ebx ebx +
mov [ebp+var_4] offset unk_10B2F90 +
mov [ebp+var_8] 18h +
mov ecx [ebp+var_4] +
lea eax [ebp+hMem] +
push eax  +
call sub_1016748  +
test eax eax +
jz loc_101D5C1  +
xor edi edi +
cmp [esi+58h] edi +
jz loc_101D5C1  +
mov eax [ebp+var_4] +
test dword ptr [eax+38h] 1000h +
jnz loc_101D528  +
add [ebp+var_4] 6Ch +
inc ebx  +
dec [ebp+var_8]  +
jnz loc_101D59A  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
cmp [ebp+var_4] ebx +
jz loc_101D63A  +
lea edi [esi+18h] +
push dword ptr [edi]  +
call ds:__imp_CoTaskMemFree  +
push edi  +
push [ebp+var_4]  +
mov [edi] ebx +
call ds:__imp_SHStrDupW  +
push [ebp+var_4]  +
call ds:SHStripMneumonicW  +
movzx eax ax +
push eax  +
call ds:CharUpperW  +
mov [esi+38h] ax +
jmp loc_101D63A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov edi ecx +
mov [ebp+var_4] ebx +
cmp [ebp+arg_C] ebx +
jnz loc_101D644  +
mov eax [esi+3Ch] +
cmp eax ebx +
jz loc_101D644  +
mov [esi+3Ch] ebx +
mov [ebp+var_4] eax +
mov eax [esi+30h] +
test byte ptr [eax+38h] 80h +
jnz loc_101D5D2  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
mov ecx [esi+30h] +
lea eax [ebp+var_4] +
push eax  +
call sub_1016678  +
test eax eax +
jnz loc_101D631  +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_1012623  +
jmp loc_101D62E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+30h] +
sub eax offset unk_10B2F90 +
push 6Ch  +
mov [ebp+var_8] ecx +
cdq   +
pop ecx  +
idiv  ecx +
mov [ebp+var_4] 1 +
cmp [ebp+arg_8] eax +
jz loc_101D69C  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 0Ch  +
push ebx  +
push esi  +
push dword ptr [edi+24h]  +
call ds:__imp_SHELL32_155  +
mov esi [ebp+arg_4] +
mov eax [esi] +
xor ebx ebx +
mov [edi+24h] eax +
mov [esi] ebx +
cmp [esi+4] ebx +
jnz loc_1060BA3  +
mov eax [esi+8] +
cmp eax ebx +
jz loc_101D6E4  +
push eax  +
mov eax [ebp+var_8] +
push 0FFFFFFFFh  +
push dword ptr [eax+48h]  +
call ds:off_10062D4  +
mov [edi+34h] eax +
push dword ptr [esi+8]  +
call ds:DestroyIcon  +
mov [esi+8] ebx +
mov [ebp+var_4] ebx +
pop esi  +
pop ebx  +
jmp loc_101D694  +
***
mov eax [ebp+var_4] +
cmp eax ebx +
mov [ebp+var_38] 1 +
jle loc_1012D3F  +
mov [ebp+var_34] eax +
lea eax [ebp+var_34] +
push eax  +
lea ecx [esi+0E8h] +
call sub_101D725  +
inc [ebp+var_4]  +
inc [ebp+var_C]  +
mov eax [esi+64h] +
inc [ebp+var_8]  +
add [ebp+var_18] eax +
jmp loc_1012D3F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [esi+8] +
push edi  +
mov edi [esi+4] +
lea eax [edi+1] +
test eax eax +
jle loc_10602E8  +
push ebx  +
cmp edi ecx +
jnz loc_101D773  +
cmp edi 3FFFFFFFh +
jg loc_101D793  +
cmp edi 1FFFFFFFh +
ja loc_101D793  +
test ecx ecx +
jz loc_101D78E  +
lea ebx [edi+edi] +
mov eax ebx +
shl eax 2 +
push eax  +
push dword ptr [esi]  +
call realloc  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101D793  +
mov [esi+8] ebx +
mov [esi] eax +
push [ebp+arg_0]  +
lea eax [edi+1] +
push edi  +
mov ecx esi +
mov [esi+4] eax +
call sub_1035205  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor ebx ebx +
inc ebx  +
jmp loc_101D75B  +
xor eax eax +
jmp loc_101D787  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101D7C2  +
test byte ptr [ebp+8] 1 +
jz loc_101D7B6  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1003970 +
mov dword ptr [ecx+4] offset off_1008CAC +
mov dword ptr [ecx+8] offset off_1008CBC +
mov dword ptr [ecx+0Ch] offset off_1008CCC +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 478h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
push 0Ch  +
mov [ebp-474h] ebx +
call sub_1002B98  +
mov edi eax +
xor esi esi +
pop ecx  +
cmp edi esi +
jz loc_101D9FB  +
mov eax [ebx+2Ch] +
imul eax eax +
push edi  +
push esi  +
add eax offset unk_10B2F90 +
add eax 4 +
push esi  +
push eax  +
mov [ebp-46Ch] eax +
call SHGetKnownFolderIDList  +
cmp eax esi +
jl loc_101D9F3  +
lea eax [ebp-478h] +
push eax  +
lea eax [ebp-468h] +
push eax  +
push offset dword_100671C  +
push dword ptr [edi]  +
call ds:__imp_SHBindToParent  +
cmp eax esi +
jl loc_101D9F3  +
lea eax [edi+4] +
push eax  +
push esi  +
push dword ptr [ebp-478h]  +
push dword ptr [ebp-468h]  +
call sub_10125A3  +
mov ebx eax +
cmp ebx esi +
jl loc_101D9BF  +
lea eax [ebp-470h] +
push eax  +
push offset dword_1016620  +
push 1  +
push esi  +
push offset dword_1016610  +
mov [ebp-470h] esi +
call ds:__imp_CoCreateInstance  +
mov ebx eax +
cmp ebx esi +
jl loc_101D9AF  +
mov eax [ebp-470h] +
lea edx [ebp-464h] +
push edx  +
push dword ptr [ebp-46Ch]  +
mov [ebp-464h] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
cmp ebx esi +
jl loc_101D99F  +
mov eax [ebp-464h] +
mov ecx [eax] +
lea edx [ebp-460h] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov ebx eax +
cmp ebx esi +
jl loc_101D99F  +
cmp [ebp-438h] esi +
jz loc_101D93B  +
push esi  +
push 104h  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [ebp-438h]  +
call ds:SHLoadIndirectString  +
mov ebx eax +
cmp ebx esi +
jl loc_101D93B  +
lea eax [ebp-414h] +
push eax  +
push dword ptr [edi+4]  +
call ds:StrCmpW  +
test eax eax +
jnz loc_101D93B  +
push dword ptr [edi+4]  +
call ds:__imp_CoTaskMemFree  +
mov [edi+4] esi +
push dword ptr [ebp-434h]  +
call ds:PathParseIconLocationW  +
mov [ebp-46Ch] eax +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-434h]  +
call ds:SHLWAPI_460  +
test eax eax +
jz loc_101D993  +
push dword ptr [ebp-46Ch]  +
lea eax [ebp-20Ch] +
push eax  +
mov eax [ebp-474h] +
push dword ptr [eax+30h]  +
push dword ptr [ebp-478h]  +
push dword ptr [ebp-468h]  +
call sub_1016831  +
mov [edi+8] eax +
lea eax [ebp-460h] +
push eax  +
call sub_1016635  +
mov eax [ebp-464h] +
cmp eax esi +
jz loc_101D9AF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-470h] +
cmp eax esi +
jz loc_101D9BF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-468h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx esi +
jl loc_101D9F3  +
mov eax [ebp-474h] +
push edi  +
push offset sub_101DA13  +
push dword ptr [eax+2Ch]  +
push edi  +
push 40Eh  +
push dword ptr [eax+28h]  +
call ds:SendMessageCallbackW  +
test eax eax +
jz loc_101D9F3  +
xor edi edi +
cmp edi esi +
jnz loc_1060E82  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_101DA26  +
push 1  +
call sub_101DA2F  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101DA55  +
test [ebp+arg_0] 1 +
jz loc_101DA49  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call ds:__imp_SHELL32_155  +
push dword ptr [esi+4]  +
call ds:__imp_CoTaskMemFree  +
mov esi [esi+8] +
test esi esi +
jnz loc_1060AFB  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi 80004005h +
test eax eax +
jz loc_101DB04  +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push offset dword_101DB18  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
test esi esi +
jl loc_101DB04  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_101DAFB  +
push edi  +
mov edi [ebp+arg_8] +
push 4  +
xor eax eax +
pop ecx  +
lea esi [ebp+var_14] +
cmps   +
setnz al  +
pop edi  +
mov esi eax +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+0Ch] +
mov eax 80040100h +
test edi edi +
jz loc_101DB98  +
push esi  +
push 4  +
pop ecx  +
mov esi offset dword_1035354 +
xor edx edx +
cmps   +
jnz loc_101DB97  +
cmp dword ptr [ebp+10h] 6 +
jnz loc_101DB95  +
mov eax [ebp+18h] +
test eax eax +
jz loc_101DB95  +
cmp word ptr [eax] 8 +
jnz loc_101DB95  +
mov esi [ebp+8] +
lea edi [esi-1Ch] +
mov ecx edi +
call sub_101E939  +
test eax eax +
mov eax offset aTaskband2compo +
jz loc_1052192  +
push 0  +
push eax  +
push dword ptr [esi-18h]  +
call ds:SetWindowTheme  +
mov ecx edi +
call sub_101E21C  +
mov ecx edi +
call sub_101E028  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn 18h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1002458  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
xor ebx ebx +
xor edi edi +
cmp [ebp+0Ch] ebx +
jz loc_1064D86  +
cmp [esi-0Ch] ebx +
jnz loc_101DC85  +
lea edi [esi-10h] +
mov ecx edi +
call sub_102EEA5  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov [ebp+8] ebx +
call ds:IUnknown_GetWindow  +
cmp [ebp+8] ebx +
jz loc_1064D7C  +
push edi  +
push hInstance  +
push ebx  +
push dword ptr [ebp+8]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 56000000h  +
push ebx  +
push offset aMstasklistwcla  +
push ebx  +
call sub_103510B  +
cmp eax ebx +
jz loc_1064D7C  +
lea eax [ebp-4] +
push eax  +
push offset dword_1002D04  +
push hInstance  +
call sub_102F117  +
mov edi eax +
cmp edi ebx +
jl loc_101DC9E  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [esi-10h] +
neg edx  +
sbb edx edx +
lea edi [esi+8] +
and edx edi +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_101DC6A  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [esi+0D8h] +
push edx  +
push offset dword_102BDB4  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jl loc_101DC9E  +
lea ecx [esi-10h] +
call sub_101E4AD  +
mov edi eax +
cmp edi ebx +
jl loc_101DC9E  +
add esi 28h +
push esi  +
call sub_1002BEE  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push offset dword_101DCA8  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1002458  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
add eax 0FFFFFFF8h +
push offset off_101DD00  +
push eax  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
and cl bl +
sub eax 0D07B2601h +
adc [ecx+ebp*4+2DC9A000h] ecx +
mov edi 909090E8h +
nop   +
nop   +
sub dword ptr [esp+4] 8 +
jmp loc_100242D  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_100242D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi offset stru_101DD90 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1002458  +
***
sub dword ptr [esp+4] 14h +
jmp loc_100242D  +
***
mov ecx [ebp+var_18] +
cmp ecx [ebp+arg_4] +
jg loc_101FA2D  +
mov [esi] eax +
mov eax [ebx] +
cmp ecx eax +
jle loc_101DDF4  +
mov eax ecx +
mov [ebx] eax +
jmp loc_101FA2D  +
***
cmp eax [ebp+var_4] +
jle loc_101F810  +
cmp [ebp+arg_14] 0 +
mov [esi+4] eax +
jz loc_101F810  +
sub eax [ebp+var_4] +
movzx eax ax +
shl eax 10h +
or eax 0FFFFh +
push eax  +
push 0  +
push 457h  +
push [ebp+hWnd]  +
call ebx  +
movzx eax word ptr [esi+4] +
movzx ecx word ptr [esi] +
shl eax 10h +
or eax ecx +
push eax  +
push 0  +
push 41Fh  +
push [ebp+hWnd]  +
call ebx  +
jmp loc_101F810  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp [ebp+arg_0] edi +
jz loc_1056E25  +
call sub_1015B4C  +
mov ecx esi +
mov ebx eax +
call sub_1015C3F  +
cmp ebx 78h +
jge loc_1056D20  +
push 36h  +
pop ecx  +
push 7  +
mov [esi+24h] ecx +
mov [esi+20h] ecx +
pop ecx  +
mov [esi+34h] ecx +
mov [esi+38h] ecx +
cmp eax offset aStarttop +
jz loc_1056CFE  +
cmp eax offset aStartbottom +
jz loc_1056D0F  +
mov ebx 1A95h +
mov eax [esi+3Ch] +
cmp eax edi +
jz loc_101DEB9  +
push eax  +
call ds:DeleteObject  +
push 2000h  +
push edi  +
push edi  +
movzx eax bx +
push edi  +
push eax  +
push hInstance  +
call ds:LoadImageW  +
mov [esi+3Ch] eax +
cmp eax edi +
jz loc_101DF02  +
lea ecx [ebp+lParam] +
push ecx  +
push 18h  +
push eax  +
call ds:GetObjectW  +
test eax eax +
jz loc_1056E14  +
mov eax [ebp+var_18] +
mov [esi+40h] eax +
mov eax [ebp+var_14] +
mov [esi+44h] eax +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
mov [esi+48h] eax +
mov eax [esi+34h] +
add eax [esi+38h] +
sub [esi+24h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+28h]  +
call sub_101DE4F  +
mov ecx esi +
call sub_10215E1  +
mov ecx offset unk_10B1460 +
pop esi  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
mov esi ecx +
mov eax [esi+0CD8h] +
shl eax 4 +
lea eax [eax+esi+44h] +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call sub_102055D  +
lea eax [ebp+var_8] +
push eax  +
mov ecx esi +
call sub_102169F  +
mov eax [esi+0CD8h] +
test al 1 +
jz loc_105740C  +
mov ecx [esi+0B1Ch] +
add ecx [ebp+var_4] +
lea edx [esi+0CE0h] +
cmp ecx [edx] +
jle loc_101DFA6  +
push eax  +
mov [edx] ecx +
push dword ptr [esi+0CE0h]  +
push dword ptr [esi+0CDCh]  +
lea ecx [ebp+rcSrc] +
shl eax 4 +
push ecx  +
lea eax [eax+esi+44h] +
push eax  +
mov ecx esi +
call sub_101F680  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1FCh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
mov edi [esi+0E00h] +
mov [esi+0E00h] ebx +
cmp [esi+0D14h] ebx +
jz loc_1056325  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp edi [esi+0E00h] +
pop edi  +
setnz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov [ebp+var_4] eax +
mov [ebp+var_C] edi +
jmp loc_10204B5  +
push [ebp+arg_8]  +
lea eax [ebp+rcSrc] +
push [ebp+var_4]  +
mov ecx ebx +
push [ebp+var_8]  +
push eax  +
push [ebp+lprcDst]  +
call sub_101F680  +
jmp loc_10204D0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ecx+8Ch] +
sub esp 10h +
xor eax eax +
cmp edx 0FFFFFFFFh +
jz locret_101E06B  +
push edi  +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
push 3  +
stos   +
pop eax  +
mov word ptr [ebp+var_10] ax +
xor eax eax +
push eax  +
mov [ebp+var_8] edx +
lea edx [ebp+var_10] +
push edx  +
push eax  +
push eax  +
push offset dword_1035354  +
push dword ptr [ecx+90h]  +
call ds:IUnknown_Exec  +
pop edi  +
leave   +
retn   +
***
call sub_101E028  +
mov ecx offset unk_10B1460 +
jmp sub_10214C3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+34Ch] 0 +
push edi  +
jz loc_105951A  +
push offset aButton  +
push dword ptr [esi+14h]  +
call ds:OpenThemeData  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_101E123  +
push ebx  +
push dword ptr [esi+14h]  +
call ds:GetDC  +
lea edi [esi+368h] +
push edi  +
push 1  +
push 0  +
push 5  +
push 1  +
push eax  +
push [ebp+var_8]  +
mov [ebp+hDC] eax +
call ds:GetThemePartSize  +
mov ebx ds:GetDeviceCaps +
push 60h  +
push 58h  +
push [ebp+hDC]  +
call ebx  +
push eax  +
push dword ptr [edi]  +
call ds:MulDiv  +
push 60h  +
push 5Ah  +
push [ebp+hDC]  +
mov [edi] eax +
lea edi [esi+36Ch] +
call ebx  +
push eax  +
push dword ptr [edi]  +
call ds:MulDiv  +
push [ebp+hDC]  +
mov [edi] eax +
push dword ptr [esi+14h]  +
call ds:ReleaseDC  +
push [ebp+var_8]  +
call ds:CloseThemeData  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
mov [ebp+var_8] esi +
cmp [esi+34Ch] ebx +
jz loc_101E1B9  +
mov [ebp+var_4] ebx +
call ds:IsCompositionActive  +
test eax eax +
jz loc_101E15A  +
cmp dword_10B2074 ebx +
jz loc_101E15A  +
inc ebx  +
push edi  +
push 0FFFFFFECh  +
push hWnd  +
add esi 364h +
mov edi [esi] +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_1059B7B  +
mov eax edi +
sub eax 0 +
pop edi  +
jz loc_102A4F0  +
dec eax  +
jz loc_1059BB5  +
dec eax  +
jz loc_1059B99  +
dec eax  +
jnz loc_101E1A8  +
test ebx ebx +
jz loc_1023B2B  +
mov [ebp+var_4] offset aTraynotifyhori +
mov eax [ebp+var_8] +
push 0  +
push [ebp+var_4]  +
push dword ptr [eax+14h]  +
call ds:SetWindowTheme  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+94h] edi +
jz loc_101E270  +
cmp [esi+50h] edi +
jz loc_1062D72  +
lea edx [ebp+var_4] +
lea eax [esi+20h] +
mov ecx [eax] +
push edx  +
push eax  +
mov [ebp+var_4] edi +
call dword ptr [ecx+54h]  +
cmp eax edi +
jl loc_1062D72  +
mov eax [esi+94h] +
mov ecx [eax] +
push edi  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ds:SetWindowTheme  +
cmp eax edi +
jl loc_1062D72  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1023AE4  +
cmp dword ptr [esi+0C14h] 0 +
jz loc_1023AE4  +
xor eax eax +
inc eax  +
test byte ptr [esi+0CD8h] 1 +
jz loc_102A07E  +
test eax eax +
jz loc_105208B  +
mov eax offset aTaskbarcomposi +
push eax  +
push dword ptr [esi+3Ch]  +
call sub_101E2C6  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx 80004005h +
test edi edi +
jz loc_101EA85  +
push esi  +
push edi  +
call sub_100E551  +
mov esi eax +
test esi esi +
jz loc_101E2FD  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_101E57D  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
xor esi esi +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
push edi  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_101EA84  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push offset stru_1002CB4  +
push [ebp+var_4]  +
push edi  +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_101E36D  +
push 8  +
pop eax  +
push [ebp+arg_4]  +
mov word ptr [ebp+var_14] ax +
call ds:SysAllocString  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_101EA8D  +
push 0  +
lea eax [ebp+var_14] +
push eax  +
push 0  +
push 6  +
push offset dword_1035354  +
push [ebp+arg_0]  +
call ds:IUnknown_Exec  +
push [ebp+var_C]  +
call ds:SysFreeString  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc esi  +
jmp loc_101E2FF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_101E394  +
push eax  +
call ds:CloseThemeData  +
mov [esi+3Ch] edi +
push ebx  +
push offset aTaskband2  +
push dword ptr [esi+4]  +
call ds:OpenThemeData  +
lea ecx [esi+4Ch] +
mov [esi+3Ch] eax +
mov [ecx] edi +
cmp eax edi +
jz loc_1065D44  +
push ecx  +
push 89Ch  +
push edi  +
push edi  +
push eax  +
call ds:GetThemeBool  +
lea eax [esi+5Ch] +
push eax  +
push edi  +
push 0E12h  +
push edi  +
mov ecx esi +
call sub_1004266  +
mov ebx ds:GetThemeMargins +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 3 +
push eax  +
push edi  +
push dword ptr [esi+3Ch]  +
call ebx  +
lea eax [esi+6Ch] +
push eax  +
push edi  +
push 0E12h  +
push 1  +
push 5  +
push edi  +
push dword ptr [esi+3Ch]  +
call ebx  +
lea eax [esi+7Ch] +
push eax  +
push edi  +
push 0E11h  +
push 1  +
push 5  +
push edi  +
push dword ptr [esi+3Ch]  +
call ebx  +
inc dword ptr [esi+7Ch]  +
inc dword ptr [esi+80h]  +
inc dword ptr [esi+88h]  +
inc dword ptr [esi+84h]  +
lea eax [esi+108h] +
push eax  +
push 1  +
push edi  +
push edi  +
push 0Dh  +
push edi  +
push dword ptr [esi+3Ch]  +
call ds:GetThemePartSize  +
lea ecx [esi+13Ch] +
xor eax eax +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
push 0E12h  +
inc eax  +
push eax  +
push 0Dh  +
push edi  +
push dword ptr [esi+3Ch]  +
mov [ebp+var_8] eax +
call ebx  +
test eax eax +
jl loc_101E46D  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov eax [ebp+var_8] +
add [ebp+var_4] 4 +
cmp eax 3 +
jb loc_101E44A  +
pop ebx  +
cmp [esi+1A0h] edi +
jz loc_101E489  +
mov ecx esi +
call sub_101E4AD  +
mov ecx esi +
call sub_1006CED  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_101E60A  +
push dword ptr [esi+4]  +
lea edi [esi+1A0h] +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [esi+1A8h] +
push eax  +
lea eax [esi+1A4h] +
push eax  +
call sub_10189FD  +
mov ebx eax +
test ebx ebx +
jl loc_101E4FA  +
add esi 18h +
push esi  +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
push 1  +
push [ebp+var_4]  +
call sub_1017489  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 31Eh +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+28h] +
setz [ebp+var_1]  +
xor ebx ebx +
cmp eax ebx +
jz loc_101E52E  +
push eax  +
call ds:CloseThemeData  +
mov [esi+28h] ebx +
push offset aButton  +
push dword ptr [esi+18h]  +
call ds:OpenThemeData  +
mov [esi+28h] eax +
cmp eax ebx +
jz loc_101E55B  +
mov ecx esi +
call sub_101DF17  +
push 1  +
mov ecx esi +
call sub_10132A7  +
pop esi  +
mov al bl +
pop ebx  +
leave   +
retn 0Ch  +
cmp [ebp+var_1] bl +
jnz loc_101E553  +
jmp loc_1057912  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx+2Ch] +
push dword ptr [esi]  +
call ds:__imp_CoTaskMemFree  +
and dword ptr [esi] 0 +
cmp [ebp+arg_0] 0 +
jz loc_101E5A1  +
push esi  +
push [ebp+arg_0]  +
call ds:__imp_SHStrDupW  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
inc edi  +
cmp dword ptr [esi+0C14h] 0 +
mov [ebp+var_10] 3 +
jz loc_1023ADB  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1023ADB  +
mov [ebp+var_C] edi +
and [ebp+var_8] 0 +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+4]  +
mov [ebp+var_4] edi +
call ds:DwmEnableBlurBehindWindow  +
pop edi  +
pop esi  +
leave   +
retn   +
***
push eax  +
call ds:DestroyIcon  +
jmp loc_1018DD1  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ds:__imp_IUnknown_SetSite +
mov esi ecx +
push 0  +
lea ebx [esi+1A0h] +
push dword ptr [ebx]  +
call edi  +
push ebx  +
call sub_1002BEE  +
push 0  +
lea ebx [esi+1A4h] +
push dword ptr [ebx]  +
call edi  +
push ebx  +
call sub_1002BEE  +
lea eax [esi+1A8h] +
push eax  +
call sub_1002BEE  +
add esi 0E0h +
push esi  +
call sub_1002BEE  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
sub dword ptr [esp+4] 18h +
jmp loc_1003C0B  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1003BF1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1023AF5  +
cmp dword ptr [esi+0C14h] 0 +
jz loc_1023AF5  +
push offset aTaskbar  +
push offset aTaskbar2compos  +
push offset aSS_0  +
lea eax [ebp+var_44] +
push 20h  +
push eax  +
call sub_10343CA  +
add esp 14h +
lea eax [ebp+var_44] +
push eax  +
push dword ptr [esi+4]  +
call ds:OpenThemeData  +
mov ecx [ebp+var_4] +
mov [esi+0D14h] eax +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+0D14h] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_101E76A  +
push eax  +
call ds:CloseThemeData  +
mov [esi+0D14h] edi +
push ebx  +
mov ebx [esi+40h] +
and ebx 2 +
jnz loc_1057FB8  +
mov ecx esi +
call sub_101E69C  +
mov ecx esi +
call sub_101E7EF  +
mov ecx esi +
call sub_101E279  +
mov ecx esi +
call sub_101DFAE  +
push 1  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
call sub_101EBD5  +
xor eax eax +
cmp [esi+0D14h] edi +
setz al  +
push eax  +
push 840000h  +
push dword ptr [esi+4]  +
call sub_10149F4  +
push 37h  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+4]  +
call ds:SetWindowPos  +
push 1  +
push edi  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
mov ecx esi +
call sub_101ED56  +
cmp ebx edi +
pop ebx  +
jnz loc_1057FC5  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0D14h] 0 +
jz loc_101E831  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1023AEB  +
cmp dword ptr [esi+0C14h] 0 +
mov eax offset aTaskbarcomposi +
jz loc_1023AEB  +
push eax  +
push 0  +
push 200Bh  +
push dword ptr [esi+0CA8h]  +
call ds:SendMessageW  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
lea ecx [esi-20h] +
call sub_101E939  +
test eax eax +
mov eax [esi] +
push esi  +
jz loc_1023B3A  +
test byte ptr [esi+4] 10h +
jnz loc_1062E34  +
call dword ptr [eax+64h]  +
test eax eax +
mov eax [ebp+0Ch] +
jz loc_1023B59  +
mov dword ptr [eax] offset aTaskband2compo +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+50h] +
test eax eax +
jz loc_101E8C4  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+50h] 0 +
mov ecx esi +
call sub_101E939  +
test eax eax +
jz loc_1023C00  +
push offset aTaskband2com_1  +
push 0  +
call ds:OpenThemeData  +
mov ecx esi +
mov [esi+50h] eax +
call sub_10075FE  +
mov ecx esi +
pop esi  +
jmp sub_101E072  +
***
cmp dword_10B2074 0 +
jz loc_1023B37  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1023B37  +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101E9A8  +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_1020548  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_101E9A8  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1002458  +
***
mov ecx esi +
call sub_101E9DF  +
push dword ptr [esi]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_101E9D3  +
jmp loc_105C272  +
xor edi edi +
jmp loc_100E09A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
call sub_101EA47  +
mov esi offset aFlyout +
lea edi [ebp+var_14] +
movs   +
movs   +
lea eax [ebp+var_14] +
movs   +
push eax  +
push dword ptr [ebx]  +
movs   +
call ds:OpenThemeData  +
push 0  +
push 0  +
push dword ptr [ebx]  +
mov [ebx+18h] eax +
call ds:InvalidateRect  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+18h] +
test eax eax +
jz loc_101EA5E  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+18h] 0 +
pop esi  +
retn   +
***
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
mov ebx 8007000Eh +
jmp loc_101E364  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi 80004005h +
mov [ebp+var_8] eax +
cmp esi eax +
jz loc_101EB15  +
mov ecx [esi] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
push esi  +
mov [ebp+var_4] eax +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_101EB15  +
push ebx  +
mov ebx [ebp+arg_14] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call sub_101DA9D  +
test eax eax +
jnz loc_101EB00  +
inc [ebp+var_8]  +
mov eax [ebp+arg_0] +
xor edi edi +
cmp ebx edi +
jnz loc_1029E4C  +
cmp [ebp+arg_C] edi +
jz loc_101EB00  +
push [ebp+arg_C]  +
mov ecx [esi] +
push [ebp+arg_8]  +
push eax  +
push esi  +
call dword ptr [ecx+20h]  +
mov edi eax +
inc [ebp+var_4]  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push [ebp+var_4]  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jge loc_101EACC  +
pop ebx  +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_1029E53  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+hWnd] +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset stru_1035344  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_101EBA5  +
lea eax [ebp+hWnd] +
push eax  +
push [ebp+var_4]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_101EB9C  +
push offset stru_101DD90  +
push [ebp+arg_4]  +
push esi  +
call sub_101DA9D  +
test eax eax +
jnz loc_101EB7E  +
push 5  +
push [ebp+hWnd]  +
call ds:GetWindow  +
mov [ebp+hWnd] eax +
xor eax eax +
cmp [ebp+hWnd] eax +
jz loc_101EB9C  +
push eax  +
cmp [ebp+arg_8] eax +
jnz loc_10546DA  +
push offset loc_106CA25  +
push [ebp+hWnd]  +
call sub_103519B  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
leave   +
retn 0Ch  +
***
xor eax eax +
cmp [ecx+0D14h] eax +
jz locret_101EBCF  +
cmp [ecx+0D28h] eax +
jnz loc_1055D65  +
test byte ptr [ecx+40h] 1 +
jnz loc_1055D71  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+hDC] +
xor ebx ebx +
mov esi ecx +
cmp dword_10B108C edi +
jnz loc_101EBF5  +
cmp [ebp+arg_4] ebx +
jz loc_101EC75  +
mov eax [esi+3Ch] +
mov dword_10B108C edi +
cmp eax ebx +
jz loc_101EC1F  +
xor ecx ecx +
inc ecx  +
mov edx edi +
not edx  +
and edx ecx +
push edx  +
push eax  +
mov [esi+28h] ecx +
call sub_101E975  +
mov ecx esi +
call sub_101E279  +
mov [esi+28h] ebx +
push edi  +
push ebx  +
push 43Fh  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
cmp [esi+0D14h] ebx +
jz loc_101EC75  +
push dword ptr [esi+4]  +
call ds:GetDC  +
lea edi [esi+0C18h] +
push edi  +
push 971h  +
push ebx  +
push ebx  +
push eax  +
push dword ptr [esi+0D14h]  +
mov [ebp+hDC] eax +
call ds:GetThemeMetric  +
push [ebp+hDC]  +
push dword ptr [esi+4]  +
call ds:ReleaseDC  +
mov eax [edi] +
mov [esi+42Ch] eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1023B24  +
cmp dword_10B2074 0 +
jz loc_1023B24  +
xor eax eax +
inc eax  +
mov ecx [esi+364h] +
not ecx  +
test cl 1 +
jnz loc_102DB6B  +
test eax eax +
mov eax offset aTraynotifyhori +
jz loc_1023BD4  +
push 0  +
push eax  +
push dword ptr [esi+10h]  +
call ds:SetWindowTheme  +
pop esi  +
retn   +
***
test byte ptr [ebp+14h] 1 +
mov eax offset aShowdesktop +
jz loc_102A690  +
push edi  +
push eax  +
push dword ptr [esi+4]  +
call ds:SetWindowTheme  +
jmp loc_1010A61  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+38h] 0 +
jz loc_105F91E  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax-4] +
mov edx [ebp+0Ch] +
mov [edx] ecx +
mov eax [eax-4] +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_101EBAF  +
push 0  +
push dword ptr [esi+4]  +
mov edi eax +
call ds:GetWindowThreadProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
cmp ebx eax +
jnz loc_105655A  +
mov esi [esi+3Ch] +
test esi esi +
jz loc_101ED8D  +
push edi  +
push esi  +
call sub_101ED96  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea ecx [ebp+arg_0] +
xor ebx ebx +
push ecx  +
xor edi edi +
push ebx  +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_101EDC9  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call sub_101EB2D  +
lea ecx [ebp+arg_0] +
inc edi  +
push ecx  +
push edi  +
jmp loc_101EDAB  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_101EDEF  +
push ebx  +
cmp [ebp+arg_4] ebx +
jnz sub_10546ED  +
push offset loc_106CA25  +
push [ebp+var_4]  +
call sub_103519B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+1ACh] +
test eax eax +
jz loc_101EE1B  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+1ACh] 0 +
cmp [ebp+arg_0] 0 +
jz loc_101EE35  +
push offset aClock  +
push dword ptr [esi+4]  +
call ds:OpenThemeData  +
mov [esi+1ACh] eax +
push 1  +
push 0  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov ebx ecx +
xor esi esi +
cmp [ebx+34Ch] esi +
jz loc_101EED6  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1023B18  +
mov [ebp+lParam] offset aTraynotifycomp +
cmp dword_10B2074 esi +
jz loc_1023B18  +
push edi  +
push esi  +
push [ebp+lParam]  +
push dword ptr [ebx+18h]  +
call ds:SetWindowTheme  +
mov [ebp+var_4] esi +
mov esi ds:SendMessageW +
mov edi 200Bh +
push [ebp+lParam]  +
mov ecx ebx +
push 0  +
push edi  +
push [ebp+var_4]  +
call sub_1010881  +
push dword ptr [eax]  +
call esi  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 3 +
jl loc_101EEAB  +
push offset aTraynotify  +
push 0  +
push edi  +
push dword ptr [ebx+20h]  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push dword ptr [ebp+14h]  +
mov ecx ebx +
call sub_101EF3D  +
push dword ptr [ebp+14h]  +
push 0  +
push edi  +
push dword ptr [ebx+28h]  +
jmp loc_100DD6C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
mov [esi+364h] ebx +
xor edi edi +
inc edi  +
lea eax [ebp+lParam] +
push eax  +
not ebx  +
and ebx edi +
push ebx  +
push 463h  +
push dword ptr [esi+29Ch]  +
mov [ebp+lParam] edi +
mov [ebp+var_4] edi +
call ds:SendMessageW  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 463h  +
push dword ptr [esi+2BCh]  +
mov [ebp+lParam] edi +
mov [ebp+var_4] edi +
call ds:SendMessageW  +
mov ecx esi +
call sub_101EC81  +
push [ebp+arg_0]  +
lea ecx [esi+2Ch] +
call sub_101EFBD  +
push edi  +
push dword ptr [esi+320h]  +
mov ecx esi +
call sub_102179D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
xor ecx ecx +
cmp eax [esi+24h] +
mov [esi+24h] eax +
setnz cl  +
test ecx ecx +
jnz loc_102A5DD  +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx ebx +
call sub_101EFF1  +
jmp loc_100DAC9  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+34Ch] +
test eax eax +
jz loc_101F00E  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+34Ch] 0 +
push offset aTraynotify_0  +
push dword ptr [esi+10h]  +
call ds:OpenThemeData  +
mov ecx esi +
mov [esi+34Ch] eax +
call sub_101E086  +
mov ecx esi +
call sub_101E12C  +
mov ecx esi +
call sub_101EE59  +
xor eax eax +
cmp [esi+34Ch] eax +
setz al  +
push eax  +
push 20000h  +
push dword ptr [esi+10h]  +
call sub_101F07B  +
push 0  +
push 0  +
push dword ptr [esi+10h]  +
call ds:InvalidateRect  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hWnd] 0 +
jz loc_101F0AE  +
push 0FFFFFFECh  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
cmp [ebp+arg_8] 0 +
jnz loc_105C67D  +
mov ecx [ebp+arg_4] +
not ecx  +
and eax ecx +
push eax  +
push 0FFFFFFECh  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
pop ebp  +
retn 0Ch  +
***
call sub_101F0C1  +
jmp loc_1010A61  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+54h] +
test eax eax +
jz loc_101F0D8  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+54h] 0 +
call ds:IsThemeActive  +
test eax eax +
jz loc_101F0FE  +
push offset aButton  +
push dword ptr [esi+4]  +
call ds:OpenThemeData  +
mov [esi+54h] eax +
mov eax [esi+58h] +
test eax eax +
jnz loc_105C2AD  +
push 0  +
push 0  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
mov eax [esi+24h] +
xor edx edx +
mov ecx eax +
and cl 1 +
cmp cl 1 +
setz dl  +
mov ecx eax +
and cl 2 +
push edi  +
mov [ebp+var_4] edx +
xor edx edx +
cmp cl 2 +
setz dl  +
mov ecx eax +
and cl 8 +
mov [ebp+var_8] edx +
xor edx edx +
cmp cl 8 +
setz dl  +
xor ecx ecx +
and al 10h +
cmp al 10h +
setz cl  +
mov [ebp+var_C] edx +
mov [ebp+var_10] ecx +
mov ecx esi +
call sub_101F1CE  +
cmp [ebp+arg_0] 0 +
jnz loc_1063739  +
mov edi [esi+24h] +
mov eax edi +
and al 1 +
xor ecx ecx +
cmp al 1 +
setz cl  +
cmp [ebp+var_4] ecx +
jnz loc_1063739  +
mov eax edi +
and al 2 +
xor ecx ecx +
cmp al 2 +
setz cl  +
cmp [ebp+var_8] ecx +
jnz loc_1063739  +
mov eax [esi+24h] +
and al 8 +
xor ecx ecx +
cmp al 8 +
setz cl  +
cmp [ebp+var_C] ecx +
jnz loc_1063751  +
mov eax [esi+24h] +
and al 10h +
xor ecx ecx +
cmp al 10h +
setz cl  +
cmp [ebp+var_10] ecx +
jnz loc_106378C  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 2  +
pop edi  +
mov esi ecx +
and dword ptr [esi+24h] 0FFFFFFFCh +
push 40000056h  +
mov [ebp+var_4] edi +
call ds:__imp_SHELL32_100  +
mov ebx offset aSoftwareMicr_0 +
test eax eax +
jnz loc_101F225  +
and [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push offset aTaskbarglomlev  +
push ebx  +
push 80000001h  +
call sub_100F656  +
cmp [ebp+var_4] edi +
jnb loc_101F284  +
or dword ptr [esi+24h] 1 +
cmp [ebp+var_4] 0 +
mov eax [esi+24h] +
jnz loc_101F225  +
or eax edi +
mov [esi+24h] eax +
mov eax edi +
sub eax [ebp+var_4] +
push eax  +
push 267h  +
push offset dword_101F298  +
mov [ebp+var_4] eax +
call sub_101588E  +
call sub_1011DEE  +
test eax eax +
jz loc_101F28D  +
or dword ptr [esi+24h] 8 +
push 0  +
push offset aTaskbarsmallic  +
push ebx  +
call SHRegGetBoolValueFromHKCUHKLM  +
test eax eax +
jnz loc_1062D69  +
and dword ptr [esi+24h] 0FFFFFFEFh +
mov eax [esi+24h] +
xor ecx ecx +
and al 10h +
cmp al 10h +
setz cl  +
push ecx  +
push 10A2h  +
push offset dword_101F2A8  +
call sub_101588E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov [ebp+var_4] edi +
cmp edi edi +
jb loc_101F213  +
jmp loc_101F225  +
and dword ptr [esi+24h] 0FFFFFFF7h +
jmp loc_101F24A  +
***
push 0  +
lea ecx [ebp+pvParam] +
mov eax 1F8h +
push ecx  +
push eax  +
push 29h  +
mov [ebp+pvParam] eax +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_10356A7  +
push ebx  +
lea eax [ebp+var_1E4] +
push eax  +
mov [ebp+var_1E4.lfWeight] 190h +
call ds:CreateFontIndirectW  +
mov ebx eax +
test ebx ebx +
jz loc_101F3B4  +
add esi 1B0h +
mov eax [esi] +
test eax eax +
jz loc_101F3B2  +
push eax  +
call ds:DeleteObject  +
mov [esi] ebx +
pop ebx  +
jmp loc_10356A7  +
***
push 28h  +
push eax  +
push 1003h  +
push 400h  +
call ebx  +
xor eax eax +
mov [esi+104h] ax +
jmp loc_101F88B  +
push 28h  +
push eax  +
push 1Fh  +
push 400h  +
call ebx  +
xor eax eax +
mov [esi+60h] ax +
jmp loc_101F898  +
***
cmp [ebp+var_4] 1 +
jnz loc_1027ECC  +
cmp dword_10B10EC 0 +
jz loc_1027ECC  +
push 2  +
pop eax  +
push eax  +
lea eax [ebp+rc1] +
push eax  +
push 1  +
push 2Fh  +
call esi  +
lea eax [ebp+rc1] +
push eax  +
call sub_101F442  +
jmp loc_1034E0E  +
***
mov [ebp+var_4] 1 +
jmp loc_1034EEC  +
mov [ebp+var_4] esi +
jmp loc_1034EEC  +
***
mov [ebp+var_4] ecx +
jmp loc_1034DDC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B10EC 0 +
jz loc_101F460  +
push 43h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_1055E19  +
pop ebp  +
retn 4  +
***
push ecx  +
push eax  +
mov ecx ebx +
call sub_101F477  +
jmp loc_1002208  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
push [ebp+arg_0]  +
mov ebx 80004005h +
call ds:SHLockShared  +
mov esi eax +
xor ecx ecx +
cmp esi ecx +
jz loc_101F4C9  +
lea eax [edi+0C1Ch] +
cmp [eax] ecx +
jz loc_101F4B6  +
mov eax [eax] +
mov edx [eax] +
push ecx  +
push ecx  +
push dword ptr [esi+10h]  +
push 2  +
push esi  +
push eax  +
call dword ptr [edx+10h]  +
mov ebx eax +
push esi  +
call ds:SHUnlockShared  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHFreeShared  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+0D94h] +
cmp dword ptr [eax] 0 +
jnz loc_101F561  +
mov dword ptr [eax] 1 +
call SHELL32_753  +
push 0  +
push 7530h  +
push 17h  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
pop esi  +
retn   +
***
push eax  +
push ecx  +
mov ecx ebx +
call sub_101F519  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+ppv]  +
call ds:SHELL32_644  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_101F55C  +
test [ebp+arg_4] 300Ah +
jz loc_1056F78  +
mov ecx esi +
call sub_101F4D7  +
push [ebp+var_C]  +
call ds:SHELL32_645  +
pop esi  +
leave   +
retn 8  +
***
mov dword ptr [esi+0D90h] 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+3Ch] edi +
jz loc_101F5D4  +
mov eax [esi+3Ch] +
lea edx [ebp+var_10] +
push edx  +
mov [ebp+var_10] 2 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
cmp [esi+0D28h] edi +
jnz loc_1055CE9  +
mov ecx [ebp+var_8] +
mov eax ecx +
or eax 181h +
xor ecx eax +
jnz loc_1029FF9  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1035439  +
mov [esi+0D28h] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 1 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_1055C4A  +
mov eax [edi+8] +
push dword ptr [edi+0Ch]  +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push 464h  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
mov ecx [ebp+arg_C] +
and dword ptr [ecx+4] 0 +
mov ebx [edi+8] +
movzx edx ax +
sub ebx edx +
mov [ecx] ebx +
shr eax 10h +
mov [ecx+0Ch] eax +
mov eax [edi+8] +
mov [ecx+8] eax +
mov eax [ebp+arg_8] +
and dword ptr [eax+4] 0 +
mov ebx dword_10B10C8 +
mov edx [esi+0D14h] +
inc ebx  +
neg edx  +
sbb edx edx +
not edx  +
and edx ebx +
add edx [esi+0B18h] +
mov [eax] edx +
mov ecx [ecx] +
mov [eax+8] ecx +
mov ecx [edi+0Ch] +
pop edi  +
pop esi  +
mov [eax+0Ch] ecx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lprcDst] +
push edi  +
push [ebp+lprcSrc]  +
mov edi ecx +
push esi  +
call ds:CopyRect  +
cmp dword ptr [edi+0D14h] 0 +
jz loc_1055CC3  +
mov edx [ebp+arg_8] +
test edx edx +
jl loc_1055CDB  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jl loc_1055CE2  +
mov eax [ebp+arg_10] +
sub eax 0 +
jz loc_1015D9C  +
dec eax  +
jz loc_10215F9  +
dec eax  +
jz loc_1015D90  +
dec eax  +
jnz loc_101F6DE  +
mov eax [esi+0Ch] +
sub eax ecx +
mov [esi+4] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_64] eax +
xor eax eax +
lea edi [ebp+Date.wMonth] +
stos   +
stos   +
stos   +
mov esi [ebp+arg_4] +
stos   +
push 5  +
mov eax 7D1h +
mov [ebp+Date.wYear] ax +
pop eax  +
push 28h  +
mov [ebp+Date.wMonth] ax +
mov [ebp+Date.wDay] ax +
lea eax [ebp+DateStr] +
push eax  +
mov ebx ecx +
lea eax [ebx+10h] +
push eax  +
lea eax [ebp+Date] +
push eax  +
push 40h  +
push 400h  +
call ds:GetDateFormatW  +
mov [ebp+var_60] eax +
test eax eax +
jle loc_101F74F  +
dec [ebp+var_60]  +
push offset a00  +
push 2Bh  +
lea eax [ebp+DateStr] +
push eax  +
call sub_1010E3B  +
and [ebp+rc.left] 0 +
xor eax eax +
lea edi [ebp+rc.top] +
stos   +
stos   +
stos   +
lea eax [ebp+rc] +
push eax  +
mov eax [ebp+var_60] +
add eax 2 +
push eax  +
lea eax [ebp+DateStr] +
push eax  +
push [ebp+var_64]  +
mov ecx ebx +
call sub_10356BB  +
mov eax [ebp+rc.right] +
mov ecx [ebp+var_4] +
mov [esi] eax +
mov eax [ebp+rc.bottom] +
pop edi  +
mov [esi+4] eax +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SendMessageW +
push esi  +
push edi  +
push 0  +
push 0  +
push 43Ah  +
push [ebp+hWnd]  +
call ebx  +
mov esi [ebp+arg_0] +
mov edi ds:GetSystemMetrics +
movzx ecx ax +
shr eax 10h +
push 31h  +
mov [esi] ecx +
mov [esi+4] eax +
call edi  +
push 32h  +
call edi  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
mov eax [eax+4] +
cmp eax [ebp+var_4] +
jl loc_101F810  +
cmp [ebp+arg_10] 0 +
jle loc_101F810  +
cmp [ebp+arg_8] 0 +
jnz loc_10594D6  +
cdq   +
idiv  [ebp+arg_10] +
cmp eax [esi+4] +
jnz loc_101DDFB  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
call ds:IsThemeActive  +
test eax eax +
jz sub_105C2BD  +
push 56h  +
call ds:GetSystemMetrics  +
cmp eax 1 +
jz loc_105C2F4  +
push 0Fh  +
pop eax  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push edi  +
mov edi ds:GetWindowLongW +
mov esi ecx +
push 0FFFFFFF0h  +
push dword ptr [esi+4]  +
call edi  +
test eax 10000000h +
jz loc_1058CD6  +
lea eax [esi+0B4h] +
cmp word ptr [eax] 0 +
push ebx  +
mov ebx ds:GetLocaleInfoW +
jz loc_101F3BA  +
lea eax [esi+10h] +
cmp word ptr [eax] 0 +
jz loc_101F3D7  +
push [ebp+arg_4]  +
lea eax [ebp+hDC] +
push [ebp+arg_0]  +
mov ecx esi +
push eax  +
call sub_101F94D  +
push 6  +
call ds:GetSystemMetrics  +
mov ecx [ebp+var_4] +
lea eax [ecx+eax*4] +
push eax  +
push [ebp+hDC.unused]  +
xor ebx ebx +
push ebx  +
push ebx  +
lea eax [ebp+Rect] +
push eax  +
call ds:SetRect  +
push 0FFFFFFECh  +
push dword ptr [esi+4]  +
call edi  +
push eax  +
push ebx  +
push 0FFFFFFF0h  +
push dword ptr [esi+4]  +
call edi  +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call ds:AdjustWindowRectEx  +
mov esi [esi+1ACh] +
cmp esi ebx +
jz loc_101F90F  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push ebx  +
push 1  +
push ebx  +
push esi  +
call ds:GetThemeBackgroundExtent  +
test eax eax +
jl loc_101F90F  +
lea esi [ebp+var_10] +
lea edi [ebp+Rect] +
movs   +
movs   +
movs   +
movs   +
mov ecx dword_10B10C0 +
mov eax dy +
mov edx [ebp+Rect.top] +
add eax ecx +
mov ecx [ebp+Rect.bottom] +
mov esi ecx +
sub esi edx +
cmp esi eax +
pop ebx  +
jl loc_1058CDD  +
sub ecx edx +
movzx eax cx +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
shl eax 10h +
movzx ecx cx +
or eax ecx +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+hDC] +
and dword ptr [ebx] 0 +
push esi  +
push edi  +
lea esi [ebx+4] +
xor eax eax +
mov edi esi +
stos   +
push dword ptr [ecx+4]  +
mov [ebp+var_4] ecx +
call ds:GetDC  +
xor edi edi +
mov [ebp+hDC] eax +
cmp eax edi +
jz loc_101FA51  +
mov ecx [ebp+var_4] +
push edi  +
call sub_1035678  +
mov eax [ebp+var_4] +
mov eax [eax+1B0h] +
mov [ebp+var_C] edi +
cmp eax edi +
jz loc_101F9A5  +
push eax  +
push [ebp+hDC]  +
call ds:SelectObject  +
mov [ebp+var_C] eax +
mov eax dword_10B2138 +
not eax  +
and eax 1 +
mov [ebp+var_8] edi +
mov [ebp+var_10] eax +
jnz loc_102A18F  +
mov ecx [ebp+var_4] +
push ebx  +
push [ebp+hDC]  +
mov [ebp+var_18] edi +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
call sub_101FFF5  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_18] +
push eax  +
push [ebp+hDC]  +
call sub_101F6E9  +
cmp [ebp+var_10] 0 +
mov eax [ebp+var_14] +
mov ecx [ebp+var_18] +
mov edi [ebp+var_8] +
jnz loc_101F9FE  +
mov edx [esi] +
add edx eax +
add edx edi +
cmp edx [ebp+arg_8] +
jg loc_101FA2D  +
cmp ecx [ebp+arg_4] +
jg loc_101FA2D  +
add eax edi +
add [esi] eax +
mov eax [ebx] +
cmp ecx eax +
jg loc_1058CCF  +
mov ecx [ebp+var_4] +
mov [ebx] eax +
lea eax [ebp+var_18] +
push eax  +
push [ebp+hDC]  +
call sub_101FA5F  +
mov eax [esi] +
add eax [ebp+var_14] +
add eax edi +
cmp eax [ebp+arg_8] +
jle loc_101DDDE  +
mov esi [ebp+var_4] +
cmp dword ptr [esi+1B0h] 0 +
jz loc_101FA45  +
push [ebp+var_C]  +
push [ebp+hDC]  +
call ds:SelectObject  +
push [ebp+hDC]  +
push dword ptr [esi+4]  +
call ds:ReleaseDC  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push edi  +
mov [ebp+var_60] eax +
xor eax eax +
and dword ptr [esi+4] 0 +
lea edi [ebp+Date.wMonth] +
stos   +
stos   +
stos   +
stos   +
mov eax 7D1h +
push 3  +
mov [ebp+Date.wYear] ax +
pop eax  +
mov [ebp+var_5C] ecx +
mov [ebp+Date.wMonth] ax +
mov [ebp+var_58] 1 +
mov ax word ptr [ebp+var_58] +
push 25h  +
mov [ebp+Date.wDay] ax +
lea eax [ebp+DateStr] +
push eax  +
push offset Format  +
lea eax [ebp+Date] +
push eax  +
push 40h  +
push 400h  +
call ds:GetDateFormatW  +
mov ebx eax +
test ebx ebx +
jz loc_101FAD6  +
dec ebx  +
push offset a00  +
push 28h  +
lea eax [ebp+DateStr] +
push eax  +
call sub_1010E3B  +
and [ebp+rc.left] 0 +
mov ecx [ebp+var_5C] +
xor eax eax +
lea edi [ebp+rc.top] +
stos   +
stos   +
stos   +
lea eax [ebp+rc] +
push eax  +
add ebx 2 +
push ebx  +
lea eax [ebp+DateStr] +
push eax  +
push [ebp+var_60]  +
call sub_10356BB  +
mov eax [esi] +
cmp eax [ebp+rc.right] +
jle loc_101FB3B  +
mov [esi] eax +
mov eax [esi+4] +
cmp eax [ebp+rc.bottom] +
jg loc_101FB1D  +
mov eax [ebp+rc.bottom] +
inc [ebp+var_58]  +
cmp word ptr [ebp+var_58] 7 +
mov [esi+4] eax +
jbe loc_101FAAB  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
mov eax [ebp+rc.right] +
jmp loc_101FB10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+wParam] +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetWindowLongW +
mov esi ecx +
push 0FFFFFFF0h  +
push dword ptr [esi+18h]  +
mov [esi+350h] eax +
mov eax [ebp+lParam] +
mov [esi+354h] eax +
call edi  +
mov ebx 10000000h +
test eax ebx +
jz loc_10599A9  +
push dword ptr [esi+10h]  +
mov edi ds:IsWindowVisible +
call edi  +
test eax eax +
jz loc_1027C4B  +
push 0  +
push 0  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+lParam]  +
mov ecx esi +
push [ebp+wParam]  +
call sub_101FBBF  +
movzx eax [ebp+var_4] +
movzx ecx [ebp+var_8] +
shl eax 10h +
or eax ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D0h +
push ebx  +
mov ebx ecx +
mov eax [ebx+364h] +
mov eax dword_10B14E4[eax*4] +
push esi  +
mov [ebp+var_24] eax +
push edi  +
lea eax [ebp+Rect] +
push eax  +
call ds:SetRectEmpty  +
mov esi ds:GetWindowLongW +
push 0FFFFFFECh  +
push dword ptr [ebx+4]  +
call esi  +
push eax  +
xor edi edi +
push edi  +
push 0FFFFFFF0h  +
push dword ptr [ebx+4]  +
call esi  +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call ds:AdjustWindowRectEx  +
mov eax [ebp+Rect.left] +
sub eax [ebp+Rect.right] +
and [ebp+var_38] 0 +
add eax [ebp+wParam] +
mov [ebp+var_C0] edi +
mov [ebp+var_B8] eax +
mov eax [ebp+Rect.top] +
sub eax [ebp+Rect.bottom] +
mov [ebp+var_BC] edi +
add eax [ebp+lParam] +
lea esi [ebp+var_C0] +
mov [ebp+var_B4] eax +
mov eax [ebx+330h] +
lea edi [ebp+var_78] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
test eax eax +
jnz loc_1025760  +
cmp [ebx+324h] esi +
jz loc_1025760  +
mov ecx [ebx+368h] +
mov [ebp+var_30] ecx +
cmp eax esi +
jnz loc_1025767  +
cmp [ebx+324h] esi +
jz loc_1025767  +
mov eax [ebx+36Ch] +
mov [ebp+var_2C] eax +
mov [ebp+var_4C] eax +
mov eax [ebx+34Ch] +
mov [ebp+var_50] ecx +
cmp eax esi +
jz loc_101FCC1  +
lea ecx [ebp+var_78] +
push ecx  +
lea ecx [ebp+var_C0] +
push ecx  +
push esi  +
push 1  +
push esi  +
push eax  +
call ds:GetThemeBackgroundContentRect  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 464h  +
push dword ptr [ebx+18h]  +
call ds:SendMessageW  +
movzx ecx ax +
shr eax 10h +
mov [ebp+dy] eax +
mov eax [ebx+364h] +
mov [ebp+var_60] ecx +
mov ecx [ebx+34Ch] +
not eax  +
and eax 1 +
mov [ebp+var_64] esi +
mov [ebp+var_68] esi +
mov [ebp+var_28] eax +
cmp ecx esi +
jz loc_102A324  +
mov eax [ebx+394h] +
cdq   +
sub eax edx +
sar eax 1 +
cmp [ebp+var_78] eax +
jge loc_102A324  +
sub eax [ebp+var_78] +
mov [ebp+var_10] eax +
cmp ecx esi +
jz loc_102A32C  +
mov eax [ebx+394h] +
cdq   +
sub eax edx +
sar eax 1 +
cmp [ebp+var_74] eax +
jge loc_102A32C  +
sub eax [ebp+var_74] +
mov [ebp+var_C] eax +
mov ecx [ebp+var_28] +
mov edx [ebp+var_70] +
mov esi [ebp+var_28] +
neg ecx  +
sbb ecx ecx +
and ecx [ebp+var_10] +
mov eax edx +
sub eax ecx +
sub eax [ebp+var_78] +
mov ecx [ebp+var_6C] +
neg esi  +
sbb esi esi +
not esi  +
and esi [ebp+var_C] +
mov [ebp+var_8] eax +
mov eax ecx +
sub eax esi +
sub eax [ebp+var_74] +
lea esi [ebp+var_78] +
lea edi [ebp+var_98] +
movs   +
movs   +
mov [ebp+cy] eax +
mov eax [ebx+364h] +
sub eax 0 +
movs   +
movs   +
jz loc_102A334  +
dec eax  +
jz loc_10598B8  +
dec eax  +
jz loc_10598A5  +
dec eax  +
jnz loc_101FDAA  +
mov eax [ebp+var_C] +
mov ecx [ebp+var_74] +
add eax ecx +
mov [ebp+var_94] eax +
push [ebp+arg_C]  +
mov eax [ebp+var_8] +
push [ebp+var_24]  +
mov [ebp+var_58] eax +
mov eax [ebp+cy] +
mov [ebp+var_54] eax +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_28]  +
lea esi [ebx+29Ch] +
push dword ptr [esi]  +
lea eax [ebp+var_10] +
push eax  +
mov ecx ebx +
call sub_101F7AB  +
push [ebp+arg_C]  +
lea eax [ebp+var_58] +
push [ebp+var_24]  +
lea edi [ebx+2BCh] +
push eax  +
push [ebp+var_28]  +
lea eax [ebp+var_B0] +
push dword ptr [edi]  +
mov ecx ebx +
push eax  +
call sub_101F7AB  +
cmp [ebp+var_28] 0 +
jnz loc_101FE09  +
cmp [ebp+arg_C] 0 +
jnz loc_10229BC  +
cmp [ebp+var_30] 0 +
mov eax [ebp+var_C] +
mov ecx [ebp+var_10] +
jle loc_101FE2B  +
cmp [ebp+var_2C] 0 +
jle loc_101FE2B  +
cmp [ebp+var_30] ecx +
jg loc_101FE23  +
mov [ebp+var_50] ecx +
cmp [ebp+var_2C] eax +
jg loc_101FE2B  +
mov [ebp+var_4C] eax +
push eax  +
push ecx  +
push [ebp+cy]  +
lea eax [ebp+var_10] +
push [ebp+var_8]  +
mov ecx ebx +
push esi  +
push eax  +
call sub_101FFA3  +
push [ebp+var_AC]  +
mov ecx [eax] +
push [ebp+var_B0]  +
mov eax [eax+4] +
push [ebp+var_54]  +
mov [ebp+cy] eax +
push [ebp+var_58]  +
lea eax [ebp+var_B0] +
push edi  +
mov [ebp+var_8] ecx +
push eax  +
mov ecx ebx +
call sub_101FFA3  +
mov esi [eax] +
mov eax [eax+4] +
mov [ebp+var_54] eax +
xor eax eax +
lea edi [ebp+var_20] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
cmp [ebp+var_28] 0 +
lea edi [ebp+rc] +
stos   +
stos   +
stos   +
stos   +
jnz loc_102A350  +
cmp dword ptr [ebx+364h] 3 +
mov eax [ebp+var_74] +
mov ecx [ebp+var_6C] +
mov [ebp+y] eax +
mov eax [ebp+var_94] +
mov [ebp+var_7C] ecx +
mov ecx [ebp+var_8C] +
mov [ebp+var_64] eax +
mov [ebp+rc.top] eax +
mov [ebp+var_1C] eax +
mov [ebp+dy] ecx +
jnz loc_102A342  +
mov ecx [ebp+var_4C] +
add ecx eax +
mov [ebp+var_34] eax +
mov [ebp+var_2C] ecx +
mov ecx [ebp+cy] +
mov edi [ebp+arg_8] +
mov edx [ebp+var_30] +
add ecx eax +
mov [ebp+var_14] ecx +
mov ecx [ebp+var_54] +
add ecx eax +
mov eax [ebp+lParam] +
mov [edi+0Ch] eax +
mov eax [ebp+var_78] +
mov [ebp+rc.bottom] ecx +
xor ecx ecx +
cmp edx eax +
mov [edi+4] ecx +
mov [ebp+rc.right] esi +
mov [ebp+lParam] edx +
jle loc_102576E  +
mov eax [ebp+wParam] +
sub eax [ebp+lParam] +
mov edx [ebp+var_8] +
sub eax esi +
cmp edx eax +
mov [ebp+var_18] edx +
jge loc_1059994  +
push ecx  +
push ecx  +
push 464h  +
push dword ptr [ebx+28h]  +
mov [ebp+x] ecx +
call ds:SendMessageW  +
mov esi ds:OffsetRect +
push 0  +
push [ebp+lParam]  +
mov [ebp+var_80] eax +
lea eax [ebp+rc] +
push eax  +
call esi  +
push 0  +
push [ebp+rc.right]  +
lea eax [ebp+var_20] +
push eax  +
call esi  +
push 0  +
push [ebp+var_18]  +
lea eax [ebp+var_68] +
push eax  +
call esi  +
push 0  +
push [ebp+var_60]  +
lea eax [ebp+x] +
push eax  +
call esi  +
mov eax [ebp+var_80] +
sub eax [ebp+Rect.left] +
and dword ptr [edi] 0 +
add eax [ebp+Rect.right] +
mov [edi+8] eax +
cmp [ebp+arg_C] 0 +
jnz loc_10229DF  +
xor esi esi +
cmp [ebp+arg_10] esi +
jnz loc_102263C  +
cmp [ebp+arg_C] esi +
jnz loc_1022AD1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor eax eax +
mov edi ebx +
stos   +
push 0FFFFFFFFh  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push 3  +
stos   +
call sub_1010EB3  +
cmp [ebp+arg_10] 0 +
mov ecx eax +
jle loc_101FFD8  +
cmp [ebp+arg_14] 0 +
jle loc_101FFD8  +
test ecx ecx +
jg loc_102017C  +
mov eax [ebx] +
test eax eax +
jle loc_101FFE3  +
add eax 6 +
mov [ebx] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_60] eax +
mov eax [ebp+arg_4] +
and [ebp+rc.left] 0 +
push ebx  +
mov [ebp+var_64] eax +
xor eax eax +
push esi  +
push edi  +
mov [ebp+Time.wYear] ax +
and [ebp+var_74] 0 +
lea edi [ebp+Time.wMonth] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+rc.top] +
stos   +
stos   +
stos   +
mov esi ds:GetTimeFormatW +
xor eax eax +
lea edi [ebp+var_70] +
stos   +
stos   +
push 0Bh  +
stos   +
pop eax  +
push 25h  +
mov [ebp+Time.wHour] ax +
lea eax [ecx+0B4h] +
mov [ebp+var_58] ecx +
lea ecx [ebp+TimeStr] +
push ecx  +
push eax  +
lea eax [ebp+Time] +
push eax  +
push 2  +
mov edi 400h +
push edi  +
call esi  +
mov [ebp+var_5C] eax +
test eax eax +
jz loc_1020083  +
dec [ebp+var_5C]  +
mov ebx offset a00 +
push ebx  +
push 28h  +
lea eax [ebp+TimeStr] +
push eax  +
call sub_1010E3B  +
mov ecx [ebp+var_58] +
lea eax [ebp+rc] +
push eax  +
mov eax [ebp+var_5C] +
add eax 2 +
push eax  +
lea eax [ebp+TimeStr] +
push eax  +
push [ebp+var_60]  +
call sub_10356BB  +
push 17h  +
pop eax  +
mov [ebp+Time.wHour] ax +
push 25h  +
lea eax [ebp+TimeStr] +
push eax  +
mov eax [ebp+var_58] +
add eax 0B4h +
push eax  +
lea eax [ebp+Time] +
push eax  +
push 2  +
push edi  +
call esi  +
mov esi eax +
test esi esi +
jz loc_10200DA  +
dec esi  +
push ebx  +
push 28h  +
lea eax [ebp+TimeStr] +
push eax  +
call sub_1010E3B  +
mov ecx [ebp+var_58] +
lea eax [ebp+var_74] +
push eax  +
add esi 2 +
push esi  +
lea eax [ebp+TimeStr] +
push eax  +
push [ebp+var_60]  +
call sub_10356BB  +
mov eax [ebp+rc.right] +
cmp eax [ebp+var_6C] +
pop edi  +
pop esi  +
pop ebx  +
jle loc_1058CC7  +
mov ecx [ebp+var_64] +
mov [ecx] eax +
mov eax [ebp+rc.bottom] +
cmp eax [ebp+var_68] +
jg loc_1020122  +
mov eax [ebp+var_68] +
mov [ecx+4] eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 8  +
***
push 1  +
push ebx  +
mov ecx esi +
call sub_1010F3D  +
mov edi eax +
test edi edi +
jz loc_1020168  +
cmp [ebp+arg_0] 3 +
jnz loc_101115E  +
push 0  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jnz loc_101115E  +
inc [ebp+var_4]  +
mov eax [ebp+arg_4] +
cmp eax 0FFFFFFFFh +
jnz loc_101117A  +
dec ebx  +
jns loc_102013A  +
jmp loc_1010EEF  +
***
mov eax [esi+364h] +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_1059864  +
mov eax dword_10B14E4[eax*4] +
cmp eax ecx +
mov edx eax +
jge loc_10233DC  +
cmp edx ebx +
jg loc_1059893  +
mov edi ebx +
push edi  +
push ecx  +
call sub_10201CD  +
mov esi eax +
imul esi [ebp+arg_10] +
imul edi [ebp+arg_14] +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov [eax+4] edi +
mov ebx eax +
jmp loc_101FFD8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cdq   +
idiv  [ebp+arg_4] +
test edx edx +
jg loc_105C020  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
push ebx  +
mov ebx ecx +
xor ecx ecx +
cmp [ebp+arg_8] 3 +
mov [ebp+var_C] ecx +
ja loc_1057B76  +
push esi  +
push edi  +
mov edi [ebp+lprcDst] +
cmp edi ecx +
jz loc_10216E2  +
cmp [ebx+0D28h] ecx +
jnz loc_10216FB  +
cmp [ebx+24h] ecx +
jz loc_10216E2  +
mov eax [ebx+40h] +
and eax 2 +
mov [ebp+var_54] eax +
jnz loc_1057B85  +
push edi  +
lea eax [ebp+rcSrc] +
push eax  +
mov ecx ebx +
call sub_102055D  +
cmp [ebp+hDC] 0 +
jz loc_1020291  +
cmp dword ptr [ebx+0D14h] 0 +
lea esi [ebp+rcSrc] +
lea edi [ebp+var_3C] +
movs   +
movs   +
movs   +
movs   +
jz loc_1057B92  +
mov eax [ebp+arg_8] +
sub eax 0 +
jz loc_1057BC3  +
dec eax  +
jz loc_1057BB8  +
dec eax  +
jz loc_1057BAD  +
dec eax  +
mov edi [ebp+lprcDst] +
jnz loc_1020291  +
mov ecx [ebp+var_30] +
mov eax edi +
mov edx ecx +
sub edx [eax+0Ch] +
mov [eax+0Ch] ecx +
add [eax+4] edx +
mov eax [ebp+rcSrc.right] +
sub eax [ebp+rcSrc.left] +
mov ecx [edi+8] +
sub ecx [edi] +
cdq   +
sub eax edx +
sar eax 1 +
cmp ecx eax +
mov [ebp+var_8] ecx +
jl loc_10202AB  +
mov [ebp+var_8] eax +
mov eax [ebp+rcSrc.bottom] +
sub eax [ebp+rcSrc.top] +
mov ecx [edi+0Ch] +
sub ecx [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
cmp ecx eax +
mov [ebp+var_4] ecx +
jge loc_1057BD3  +
push [ebp+arg_8]  +
lea eax [ebp+rcSrc] +
push [ebp+var_4]  +
mov ecx ebx +
push [ebp+var_8]  +
push eax  +
push edi  +
call sub_101F680  +
mov edx [ebp+arg_8] +
xor edi edi +
cmp dword_10B108C edx +
jnz loc_1057BDB  +
mov eax [ebx+3Ch] +
cmp eax edi +
jz loc_10204D0  +
cmp [ebx+34h] edi +
jz loc_10204D0  +
mov ecx [eax] +
lea edx [ebp+var_50] +
push edx  +
push offset dword_1020548  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_10204D0  +
mov esi [ebp+lprcDst] +
mov eax [ebp+arg_8] +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
movs   +
shl eax 4 +
lea esi [eax+ebx+44h] +
lea edi [ebp+var_3C] +
movs   +
movs   +
movs   +
movs   +
xor edi edi +
cmp [ebx+0D14h] edi +
jz loc_1057C64  +
mov eax [ebp+rc.top] +
mov esi ds:OffsetRect +
neg eax  +
push eax  +
mov eax [ebp+rc.left] +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call esi  +
mov eax [ebp+var_38] +
neg eax  +
push eax  +
mov eax [ebp+var_3C] +
neg eax  +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
call esi  +
lea eax [ebp+var_88] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push [ebp+arg_8]  +
mov ecx ebx +
call sub_101F5F4  +
lea eax [ebp+var_88] +
push eax  +
lea eax [ebp+var_68] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+arg_8]  +
mov ecx ebx +
call sub_101F5F4  +
mov eax [ebp+var_18] +
neg eax  +
push eax  +
mov eax [ebp+var_1C] +
neg eax  +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
call esi  +
mov eax [ebp+var_64] +
neg eax  +
push eax  +
mov eax [ebp+var_68] +
neg eax  +
push eax  +
lea eax [ebp+var_68] +
push eax  +
call esi  +
cmp [ebx+0D28h] edi +
jnz loc_1057C9B  +
push dword ptr [ebx+0CA8h]  +
call sub_1020605  +
test byte ptr [ebp+arg_8] 1 +
mov [ebp+var_58] eax +
jz loc_102A118  +
lea eax [ebp+hDC] +
push eax  +
push edi  +
push 43Eh  +
push dword ptr [ebx+0C10h]  +
mov [ebp+hDC] edi +
call ds:SendMessageW  +
mov edi [ebp+hDC] +
mov esi eax +
add esi edi +
cmp esi 1 +
jl loc_1057CB8  +
mov eax [ebp+rcSrc.bottom] +
sub eax [ebp+rcSrc.top] +
cdq   +
sub eax edx +
sar eax 1 +
cdq   +
idiv  esi +
cmp [ebp+arg_C] 0 +
mov ecx eax +
jz loc_102828B  +
mov eax [ebp+arg_8] +
mov eax [ebx+eax*4+84h] +
cmp eax ecx +
jge loc_1020437  +
mov ecx eax +
mov eax [ebp+var_58] +
imul ecx esi +
sub ecx edi +
cmp ecx eax +
jg loc_1057CC0  +
mov [ebp+var_10] eax +
mov eax [ebp+arg_8] +
xor edi edi +
inc edi  +
and eax edi +
mov [ebp+hDC] eax +
jz loc_1057CD0  +
mov eax [ebp+var_18] +
mov [ebp+rc.top] eax +
mov eax [ebp+var_10] +
mov [ebp+rc.bottom] eax +
cmp dword ptr [ebx+0D14h] 0 +
jz loc_1057CE1  +
mov eax [ebp+var_10] +
sub eax [ebp+var_18] +
jz loc_102049B  +
mov eax [ebp+var_5C] +
sub eax [ebp+var_64] +
jz loc_102049B  +
mov eax [ebp+var_30] +
sub eax [ebp+var_38] +
mov ecx [ebp+rc.bottom] +
sub ecx [ebp+rc.top] +
imul eax eax +
cmp ecx eax +
jg loc_1057D10  +
xor esi esi +
cmp [ebp+hDC] esi +
jz loc_1057D22  +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
cmp [ebp+var_4] eax +
jnz loc_101DFFC  +
cmp [ebp+hDC] esi +
jz loc_1057D22  +
mov eax [ebp+var_50] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_C] esi +
jnz loc_101E007  +
mov eax [ebp+arg_8] +
mov esi [ebp+lprcDst] +
shl eax 4 +
cmp [ebp+var_54] 0 +
lea edi [eax+ebx+44h] +
movs   +
movs   +
movs   +
movs   +
jnz loc_1057D3C  +
lea ecx [ebx+0AF8h] +
call sub_1020505  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+1Ch] 0 +
jnz loc_1055EB4  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
test ecx ecx +
jnz loc_1064590  +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_1020544  +
mov edx [eax+54h] +
add edx [eax+50h] +
mov [ecx] edx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+8] +
add eax [esi] +
push edi  +
cdq   +
sub eax edx +
mov edi eax +
mov eax [esi+0Ch] +
add eax [esi+4] +
sar edi 1 +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push edi  +
push [ebp+lprcDst]  +
call sub_1020593  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+0E08h] 0 +
jz loc_10205F2  +
mov eax [edi+0E08h] +
test eax eax +
jz loc_10205EE  +
mov eax [eax] +
lea ebx [eax-1] +
test ebx ebx +
jl loc_10205F2  +
push ebx  +
push dword ptr [edi+0E08h]  +
call ds:off_1003D88  +
push [ebp+pt.y]  +
mov esi eax +
push [ebp+pt.x]  +
push esi  +
call ds:PtInRect  +
test eax eax +
jz loc_1056699  +
mov edi [ebp+lprcDst] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
xor eax eax +
jmp loc_10205B5  +
push [ebp+lprcDst]  +
call ds:SetRectEmpty  +
jmp loc_10566A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
push ebx  +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp [ebp+hWnd] ebx +
jz loc_1020675  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push ebx  +
push ebx  +
push 40Ch  +
push [ebp+hWnd]  +
call esi  +
xor edi edi +
mov [ebp+var_8] eax +
test eax eax +
jle loc_1020670  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 41Ch  +
push [ebp+hWnd]  +
mov [ebp+lParam] 64h +
mov [ebp+var_68] 21h +
call esi  +
test [ebp+var_64] 8 +
jnz loc_102066A  +
test [ebp+var_64] 1 +
jnz loc_1055EF0  +
cmp edi [ebp+var_44] +
jnb loc_102066A  +
mov edi [ebp+var_44] +
inc ebx  +
cmp ebx [ebp+var_8] +
jl loc_1020635  +
add [ebp+var_4] edi +
pop edi  +
pop esi  +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 4  +
***
lea edx [ebp-4Ch] +
add esi 94h +
mov eax [esi] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi [esi] +
lea ecx [ebp-48h] +
push ecx  +
push 0  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+34h]  +
test edi edi +
jz loc_10206A8  +
mov eax [ebp-4Ch] +
mov [edi] eax +
mov eax [ebp-48h] +
add eax ebx +
jmp loc_10024CD  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
xor eax eax +
inc eax  +
xor esi esi +
push edi  +
mov edi eax +
cmp dword_10B1FBC esi +
jz loc_1020740  +
cmp dword_10B1480 esi +
jnz loc_1020740  +
xor edi edi +
test byte_10B14A0 2 +
jnz loc_1020740  +
cmp dword_10B39B0 esi +
jnz loc_1020740  +
mov dword_10B1484 eax +
lea eax [ebp-10h] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
lea eax [ebp-10h] +
push eax  +
push 3  +
push 214h  +
push hWnd  +
call ds:SendMessageW  +
mov eax [ebp-4] +
sub eax [ebp-0Ch] +
push 14h  +
push eax  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
push eax  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-10h]  +
push esi  +
push hWnd  +
call ds:SetWindowPos  +
mov dword_10B1484 esi +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
push dword ptr [ebx+24h]  +
push dword ptr [ebx+0CD8h]  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_10201EA  +
jmp loc_1002CE3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+5Ch] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_1020781  +
push eax  +
call ds:CloseThemeData  +
push offset aTaskbandextend  +
push dword ptr [esi+30h]  +
call ds:OpenThemeData  +
mov [esi+5Ch] eax +
cmp eax edi +
jz loc_10677DE  +
lea ebx [esi+100h] +
push ebx  +
push 1  +
push edi  +
push edi  +
push 0Ah  +
push edi  +
push eax  +
call ds:GetThemePartSize  +
test eax eax +
jl loc_10677DE  +
push ebx  +
call sub_1011ACD  +
lea eax [esi+108h] +
push eax  +
push edi  +
push 9  +
push edi  +
call sub_10208CB  +
lea eax [esi+1B0h] +
push eax  +
push edi  +
push 32h  +
push edi  +
call sub_10208CB  +
lea eax [esi+1B4h] +
push eax  +
push edi  +
push 1F4h  +
push edi  +
call sub_10208CB  +
lea ebx [esi+148h] +
push ebx  +
mov [ebx] edi +
call ds:DwmIsCompositionEnabled  +
cmp [ebx] edi +
jz loc_102081F  +
xor eax eax +
inc eax  +
mov [ebp+var_10] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+30h]  +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
call ds:DwmEnableBlurBehindWindow  +
mov ecx [esi+5Ch] +
cmp ecx edi +
jz loc_10677F9  +
mov ebx ds:GetThemeMargins +
lea eax [esi+98h] +
push eax  +
push edi  +
push 0E12h  +
push edi  +
push 2  +
push edi  +
push ecx  +
call ebx  +
lea eax [esi+0A8h] +
push eax  +
push edi  +
push 0E12h  +
push edi  +
push 1  +
push edi  +
push dword ptr [esi+5Ch]  +
call ebx  +
mov eax [esi+98h] +
add [esi+0A8h] eax +
mov eax [esi+9Ch] +
add [esi+0ACh] eax +
mov eax [esi+0A4h] +
add [esi+0B4h] eax +
mov eax [esi+0A0h] +
add [esi+0B0h] eax +
lea eax [esi+0B8h] +
push eax  +
push edi  +
push 0E12h  +
push edi  +
push 5  +
push edi  +
push dword ptr [esi+5Ch]  +
call ebx  +
mov ecx [esi+5Ch] +
neg ecx  +
sbb ecx ecx +
mov eax 400000h +
and ecx 0FFC00000h +
add ecx eax +
push ecx  +
push eax  +
push 0FFFFFFF0h  +
push dword ptr [esi+30h]  +
call ds:SHLWAPI_165  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
call sub_101142C  +
mov edi [ebp+arg_8] +
mov esi ds:MulDiv +
test edi edi +
jnz loc_1020A7D  +
mov edi [ebp+arg_C] +
test edi edi +
jz loc_10208FE  +
push 60h  +
push dword_10B109C  +
push [ebp+nNumber]  +
call esi  +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
push edi  +
push 1  +
mov edi ecx +
call sub_10209D9  +
mov ecx edi +
call sub_1020764  +
lea esi [edi+148h] +
and dword ptr [esi] 0 +
push esi  +
call ds:DwmIsCompositionEnabled  +
cmp dword ptr [esi] 0 +
jz loc_102097B  +
mov ecx edi +
call sub_1020CA7  +
test eax eax +
mov eax offset byte_1002CD0 +
jnz loc_102096F  +
mov eax offset aVertical +
push 0  +
push eax  +
push dword ptr [edi+30h]  +
call ds:SetWindowTheme  +
mov ecx edi +
pop edi  +
pop esi  +
jmp sub_1020ACF  +
***
mov eax hhk +
test eax eax +
jnz loc_106786F  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ecx+24h] esi +
jz loc_10209C1  +
push [ebp+arg_4]  +
mov eax [ecx+24h] +
push [ebp+arg_0]  +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+30h]  +
test eax eax +
jz loc_10678AB  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov ecx ebx +
call sub_1020931  +
jmp loc_100E14F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
mov esi ecx +
push 7D7h  +
push dword ptr [esi+30h]  +
call ds:KillTimer  +
xor ebx ebx +
cmp [esi+2Ch] ebx +
jnz loc_1020A64  +
push edi  +
xor edi edi +
push 3  +
lea eax [ebp+var_18] +
inc edi  +
push eax  +
mov ecx esi +
mov [esi+2Ch] edi +
mov [ebp+var_18] 1Ah +
mov [ebp+var_14] 1Bh +
mov [ebp+var_10] 1Ch +
call sub_102099C  +
push ebx  +
push ebx  +
push 1Fh  +
push dword ptr [esi+30h]  +
call ds:SendMessageW  +
mov eax [esi] +
push esi  +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1067A79  +
pop edi  +
cmp [ebp+arg_0] ebx +
jz loc_1020A53  +
cmp [esi+68h] ebx +
jnz loc_1067B9B  +
mov ecx esi +
mov [esi+2Ch] ebx +
call sub_1020989  +
mov ecx esi +
call sub_1020A6F  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax dword_10B39C4 +
test eax eax +
jnz loc_1067882  +
retn   +
***
push 60h  +
push nNumerator  +
push [ebp+arg_0]  +
call esi  +
mov [edi] eax +
jmp loc_10208E8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lprc] +
push 1  +
push esi  +
push 2  +
push hWnd  +
call ds:MonitorFromWindow  +
push eax  +
call sub_1002F19  +
push esi  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_106784E  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+rc] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+rc] +
push eax  +
mov esi ecx +
call sub_1020A96  +
mov eax [esi+78h] +
lea ecx [ebp+yBottom] +
push ecx  +
lea ecx [ebp+xRight] +
push ecx  +
push eax  +
push eax  +
call sub_10208CB  +
push [ebp+yBottom]  +
xor edi edi +
push [ebp+xRight]  +
lea eax [ebp+nDenominator] +
push edi  +
push edi  +
push eax  +
call ds:SetRect  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+nNumerator] +
push eax  +
call ds:CopyRect  +
push 1  +
lea eax [ebp+nDenominator] +
push eax  +
lea eax [ebp+nNumerator] +
push eax  +
mov ecx esi +
call sub_1020B99  +
mov eax [ebp-10h] +
sub eax [ebp+nNumerator] +
mov dword ptr [esi+0ECh] 5 +
mov [esi+0C8h] eax +
mov eax [ebp-0Ch] +
sub eax [ebp-14h] +
mov [esi+0CCh] eax +
lea eax [esi+0E8h] +
push eax  +
push edi  +
push dword ptr [esi+7Ch]  +
push edi  +
call sub_10208CB  +
lea eax [ebp+yBottom] +
push eax  +
lea eax [ebp+xRight] +
push eax  +
push dword ptr [esi+94h]  +
push dword ptr [esi+90h]  +
call sub_10208CB  +
mov eax [ebp+xRight] +
mov [esi+0E0h] eax +
mov eax [ebp+yBottom] +
pop edi  +
mov [esi+0E4h] eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+nNumerator] +
push edi  +
mov edi [ebp+nDenominator] +
mov ebx [edi+0Ch] +
sub ebx [edi+4] +
push esi  +
mov [ebp+var_4] ebx +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_10678B1  +
push edi  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_10678B1  +
mov ebx [edi+8] +
sub ebx [edi] +
mov ecx [esi+8] +
sub ecx [esi] +
mov [ebp+var_C] ebx +
fild  [ebp+var_C] +
mov [ebp+nDenominator] ecx +
mov edx [esi+0Ch] +
sub edx [esi+4] +
fidiv  [ebp+nDenominator] +
mov [ebp+nNumber] edx +
fstp  [ebp+nDenominator] +
fld  [ebp+nDenominator] +
fild  [ebp+var_4] +
fidiv  [ebp+nNumber] +
fstp  [ebp+nDenominator] +
fld  [ebp+nDenominator] +
fcompp st(1) st +
fnstsw  ax +
test ah 1 +
jnz loc_1020C85  +
mov [ebp+nNumerator] ebx +
mov [ebp+nDenominator] ecx +
push [ebp+nDenominator]  +
mov ebx ds:MulDiv +
push [ebp+nNumerator]  +
push ecx  +
call ebx  +
push [ebp+nDenominator]  +
mov [ebp+var_10] eax +
push [ebp+nNumerator]  +
push [ebp+nNumber]  +
call ebx  +
mov ecx [esi] +
mov ebx [esi+4] +
mov edx [ebp+var_10] +
add eax ebx +
mov [esi+0Ch] eax +
add edx ecx +
mov [esi+8] edx +
mov eax [edi+4] +
sub eax ebx +
push eax  +
mov eax ecx +
sub eax edx +
add eax [ebp+var_C] +
cdq   +
sub eax edx +
sar eax 1 +
sub eax ecx +
add eax [edi] +
push eax  +
push esi  +
call ds:OffsetRect  +
mov ebx [ebp+var_4] +
cmp [ebp+arg_8] 0 +
jz loc_1020C7E  +
mov eax ebx +
sub eax [esi+0Ch] +
add eax [esi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push 0  +
push esi  +
call ds:OffsetRect  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov eax [ebp+var_4] +
mov [ebp+nNumerator] eax +
mov [ebp+nDenominator] edx +
jmp loc_1020C11  +
***
cmp dword ptr [ecx+1A0h] 0 +
jnz loc_1020CC2  +
mov ecx [ecx+164h] +
xor eax eax +
inc eax  +
cmp ecx 3 +
jz locret_1020CC4  +
cmp ecx eax +
jz locret_1020CC4  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+94h] +
push ebx  +
mov ebx [ebp+lParam] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
push ebx  +
push 1Ah  +
mov [ebp+var_4] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ds:SendMessageW  +
mov esi ds:__imp_StrCmpICW +
cmp ebx 2Ah +
jz loc_1020D0A  +
test ebx ebx +
jnz loc_1020D1D  +
test edi edi +
jnz loc_105367A  +
xor eax eax +
cmp [ebp+arg_8] eax +
jnz loc_102ABF2  +
mov ecx [ebp+var_4] +
call sub_101E072  +
cmp edi 1003h +
jz loc_1020D39  +
cmp edi 103Fh +
jz loc_1020D39  +
test ebx ebx +
jnz loc_1020DA7  +
test edi edi +
jnz loc_105368F  +
cmp dword_10B24CC 0 +
mov edi 10000h +
mov esi 80000000h +
jz loc_1020D70  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_102AC0A  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jnz loc_1063988  +
mov ecx [ebp+var_4] +
push 0  +
call sub_101F112  +
cmp dword_10B24CC 0 +
jz loc_1020DA7  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_102AC17  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jnz loc_10639C6  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_100DC6F  +
call sub_1021416  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_10212BA  +
xor esi esi +
inc esi  +
push 0  +
push offset pvParam  +
push 0  +
push 26h  +
call ds:SystemParametersInfoW  +
test esi esi +
jz loc_10212D0  +
mov esi ds:GetSystemMetrics +
push 2Dh  +
call esi  +
push 2Eh  +
mov dword_10B10B8 eax +
call esi  +
mov dy eax +
imul eax eax +
cdq   +
sub eax edx +
sar eax 1 +
push 1Fh  +
mov dword_10B10C4 eax +
call esi  +
push 2  +
mov dword_10B10C0 eax +
call esi  +
push 3  +
mov dword_10B10D4 eax +
call esi  +
push 20h  +
mov dword_10B10D8 eax +
call esi  +
push 21h  +
mov dword_10B10C8 eax +
call esi  +
push 39h  +
mov dword_10B10CC eax +
call esi  +
mov dword_10B10D0 eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword ptr [esi+1Ch] 0 +
jnz loc_102DEC8  +
cmp dword ptr [esi+20h] 0 +
jnz loc_102DEC8  +
xor eax eax +
inc eax  +
jmp loc_100E09C  +
***
cmp [ebp+14h] edi +
jnz loc_102125A  +
push edi  +
push edi  +
push offset aDisablepreview  +
push offset aSoftwareMicr_3  +
call ds:SHRegGetBoolUSValueW  +
xor ecx ecx +
test eax eax +
setz cl  +
add ecx ecx +
xor ecx [esi+74h] +
and ecx 2 +
xor [esi+74h] ecx +
jmp loc_1010A61  +
***
cmp edx 2Fh +
jz loc_1051387  +
cmp edx 18h +
jz loc_10269C8  +
cmp edx ebx +
jnz loc_1020ECD  +
cmp edi ebx +
jnz loc_1053651  +
push 3  +
push [ebp+hWnd]  +
push [ebp+wParam]  +
push 1Ah  +
jmp loc_1011B18  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 1Ah  +
jmp loc_1011B62  +
***
cmp dword ptr [ebp+10h] 0 +
jnz loc_1021275  +
test edi edi +
jnz loc_1021275  +
cmp dword ptr [esi+20h] 0 +
jz loc_1020F0A  +
mov eax [esi+20h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
push 1  +
mov ecx esi +
call sub_1051314  +
jmp loc_100F266  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 1Ah  +
push esi  +
call sub_1011B74  +
jmp loc_1011567  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 1Ah  +
push esi  +
call sub_1011B98  +
jmp loc_101177A  +
***
cmp dword ptr [ebp+String] 14h +
jz loc_100E14F  +
mov ecx ebx +
call sub_1021347  +
mov ecx ebx +
call sub_1021381  +
jmp loc_10209C8  +
***
push [ebp+lParam]  +
push [ebp+arg_8]  +
call sub_1020F78  +
test al al +
jz loc_100D8F3  +
jmp loc_10365E0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
xor bl bl +
cmp dword ptr [esi+28h] 0 +
jz loc_1057936  +
call sub_1011DEE  +
mov [esi+68h] eax +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 8  +
***
cmp [ebx+0DA0h] esi +
jnz loc_1002264  +
cmp eax esi +
jnz loc_1021182  +
push esi  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 1Ah  +
push [ebp+hWndParent]  +
push dword ptr [ebx+3Ch]  +
call sub_100E582  +
push [ebp+lParam]  +
mov ecx ebx +
push [ebp+wParam]  +
push 1Ah  +
push [ebp+hWndParent]  +
call sub_1011C50  +
push [ebp+lParam]  +
mov ecx ebx +
push [ebp+wParam]  +
push [ebp+hWndParent]  +
call sub_1020FF1  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
push ebx  +
push [ebp+hWnd]  +
mov esi ecx +
call sub_1020DD2  +
cmp [ebp+hWnd] 2Ah +
mov edi ds:__imp_StrCmpICW +
jz loc_1021021  +
cmp [ebp+hWnd] 0 +
jnz loc_1021028  +
test ebx ebx +
jnz loc_105363C  +
mov ecx esi +
call sub_1051181  +
test ebx ebx +
jnz loc_1021156  +
call SHELL32_711  +
test ebx ebx +
jnz loc_1021310  +
push ebx  +
push [ebp+hWnd]  +
call ds:ShellAboutW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push dword ptr [ebp+14h]  +
push ebx  +
call sub_1021061  +
jmp loc_1035770  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi ds:__imp_StrCmpICW +
mov esi ecx +
test ebx ebx +
jnz loc_10211C8  +
push 1  +
mov ecx esi +
call sub_1035678  +
test ebx ebx +
jnz loc_10211E7  +
xor eax eax +
mov [esi+0B4h] ax +
mov [esi+10h] ax +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
mov ecx offset unk_10B1460 +
call sub_10214C3  +
mov eax hWnd +
and [ebp+var_3C] 0 +
or [ebp+var_1C] 0FFFFFFFFh +
mov [ebp+var_38] eax +
mov eax [esi+4] +
mov [ebp+var_34] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 439h  +
push dword_10B206C  +
mov [ebp+lParam] 30h +
call ds:SendMessageW  +
mov ecx esi +
call sub_103678E  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 1Ah  +
push ebx  +
call sub_1021110  +
jmp loc_10112AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 3  +
push [ebp+arg_C]  +
mov esi ecx +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHLWAPI_178  +
mov ecx esi +
call sub_1011A7D  +
xor eax eax +
cmp [ebp+arg_8] 2Ah +
jz loc_1021145  +
cmp [ebp+arg_8] eax +
jnz loc_102114F  +
cmp [ebp+arg_C] eax +
jnz loc_102114F  +
push 1  +
push eax  +
mov ecx esi +
call sub_1015A06  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
push offset aExtensions  +
push ebx  +
call edi  +
test eax eax +
jnz loc_1021035  +
jmp loc_1021030  +
***
mov edi ds:__imp_StrCmpICW +
push offset aTraysettings  +
push eax  +
call edi  +
test eax eax +
jz loc_1009C2B  +
push offset aSavetaskbar  +
push [ebp+lParam]  +
call edi  +
test eax eax +
jnz loc_1020FB1  +
jmp loc_1009C37  +
***
push offset aWindowmetrics  +
push ebx  +
call edi  +
test eax eax +
jz loc_102107F  +
cmp [ebp+arg_0] 2Ah +
jnz loc_1021088  +
jmp loc_102107F  +
push offset aIntl  +
push ebx  +
call edi  +
test eax eax +
jz loc_1021090  +
cmp [ebp+arg_0] 22h +
jnz loc_10210EF  +
jmp loc_1021090  +
***
mov eax [ebp+lParam] +
mov ecx offset aPresentationmo +
mov dx [eax] +
cmp dx [ecx] +
jz loc_1059AA6  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1011C2F  +
jmp loc_1059ACF  +
***
push offset aTraysettings  +
push dword ptr [ebp+14h]  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_1010A61  +
jmp loc_105C3D0  +
***
test edi edi +
jz loc_100F266  +
push 10h  +
push offset aSoftwareClient  +
push edi  +
call ds:__imp_StrCmpNICW  +
test eax eax +
jnz loc_100F266  +
jmp loc_1020EFB  +
***
cmp word ptr [edi] 0 +
jz loc_1020DE4  +
xor esi esi +
cmp [ebp+arg_0] 25h +
jz loc_1020DE7  +
push offset aWindowmetrics  +
push edi  +
call ds:__imp_StrCmpICW  +
test eax eax +
jz loc_1020E00  +
cmp [ebp+arg_0] 2Ah +
jnz loc_1020E5B  +
jmp loc_1020E00  +
***
push offset aTraysettings  +
push ebx  +
call edi  +
test eax eax +
jnz loc_102103D  +
jmp loc_1058790  +
***
mov edi edi +
push ebx  +
mov ebx ds:DeleteObject +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+1BCh] +
mov eax [esi] +
test eax eax +
jz loc_1021366  +
push eax  +
call ebx  +
and dword ptr [esi] 0 +
lea esi [edi+1C0h] +
mov eax [esi] +
test eax eax +
jz loc_1021378  +
push eax  +
call ebx  +
and dword ptr [esi] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+pvParam.lfHeight] 0 +
push esi  +
push 58h  +
lea eax [ebp+pvParam.lfWidth] +
push 0  +
push eax  +
mov esi ecx +
call memset  +
add esp 0Ch +
push 0  +
lea eax [ebp+pvParam] +
push eax  +
push 5Ch  +
push 1Fh  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_1021404  +
push edi  +
mov edi ds:CreateFontIndirectW +
lea eax [ebp+pvParam] +
push eax  +
call edi  +
mov [esi+1C0h] eax +
test eax eax +
jz loc_10213E3  +
push 0  +
push eax  +
push 30h  +
push dword ptr [esi+30h]  +
call ds:SendMessageW  +
push offset aMarlett  +
push 20h  +
lea eax [ebp+pvParam.lfFaceName] +
push eax  +
mov [ebp+pvParam.lfCharSet] 2 +
call sub_100665F  +
lea eax [ebp+pvParam] +
push eax  +
call edi  +
mov [esi+1BCh] eax +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1FCh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 0  +
mov esi ecx +
lea ecx [ebp+pvParam] +
mov eax 1F8h +
push ecx  +
push eax  +
push 29h  +
mov [ebp+pvParam] eax +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_10214B1  +
push ebx  +
push edi  +
mov edi ds:CreateFontIndirectW +
lea eax [ebp+var_1E4] +
push eax  +
mov [ebp+var_1E4.lfWeight] 2BCh +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_1021481  +
mov eax [esi+44h] +
test eax eax +
jz loc_102147E  +
push eax  +
call ds:DeleteObject  +
mov [esi+44h] ebx +
lea eax [ebp+var_1E4] +
push eax  +
mov [ebp+var_1E4.lfWeight] 190h +
call edi  +
mov edi eax +
test edi edi +
jz loc_10214AF  +
mov eax [esi+40h] +
test eax eax +
jz loc_10214A8  +
push eax  +
call ds:DeleteObject  +
and dword ptr [esi+48h] 0 +
mov [esi+40h] edi +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+0CA8h] edi +
jz loc_10215D8  +
cmp [esi+4] edi +
jz loc_10215D8  +
cmp [esi+0C04h] edi +
jz loc_10215D8  +
push ebx  +
mov ebx [esi+40h] +
and ebx 2 +
mov [ebp+var_4] ebx +
jnz loc_1057A4C  +
cmp [esi+0D10h] edi +
jnz loc_1057A4C  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
call sub_102160B  +
lea ecx [esi+0AF8h] +
call sub_10215E1  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+x] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
call sub_101F5F4  +
push 2  +
call ds:BeginDeferWindowPos  +
cmp eax edi +
jz loc_10215AE  +
mov ecx [ebp+var_8] +
sub ecx [ebp+y] +
mov ebx 114h +
push ebx  +
push ecx  +
mov ecx [ebp+var_C] +
sub ecx [ebp+x] +
push ecx  +
push [ebp+y]  +
push [ebp+x]  +
push edi  +
push dword ptr [esi+0CA8h]  +
mov edi ds:DeferWindowPos +
push eax  +
call edi  +
mov ecx [ebp+var_18] +
sub ecx [ebp+var_20] +
push ebx  +
push ecx  +
mov ecx [ebp+var_1C] +
sub ecx [ebp+var_24] +
push ecx  +
push [ebp+var_20]  +
push [ebp+var_24]  +
push 0  +
push dword ptr [esi+0C04h]  +
push eax  +
call edi  +
push eax  +
call ds:EndDeferWindowPos  +
mov ebx [ebp+var_4] +
xor edi edi +
push 1  +
push edi  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
push dword ptr [esi+4]  +
call ds:UpdateWindow  +
cmp ebx edi +
pop ebx  +
jnz loc_1057A5E  +
cmp [esi+0D10h] edi +
jnz loc_1057A5E  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+28h] 0 +
jz loc_1027B4C  +
pop esi  +
leave   +
retn   +
***
mov eax [esi+4] +
add eax ecx +
mov [esi+0Ch] eax +
jmp loc_101F6DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax ebx +
push esi  +
shl eax 4 +
mov esi ecx +
lea eax [eax+esi+44h] +
test bl 1 +
jz loc_10569EB  +
mov ecx [eax+0Ch] +
sub ecx [eax+4] +
mov [esi+0CE0h] ecx +
lea eax [ebp+rcSrc] +
push eax  +
push ebx  +
mov ecx esi +
call sub_1021675  +
lea eax [ebx-2] +
and eax 3 +
push eax  +
push dword ptr [esi+0CE0h]  +
lea ecx [ebp+rcSrc] +
push dword ptr [esi+0CDCh]  +
shl eax 4 +
push ecx  +
lea eax [eax+esi+44h] +
push eax  +
mov ecx esi +
call sub_101F680  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+lprc]  +
mov esi ecx +
push dword ptr [esi+0CF8h]  +
call sub_1002F19  +
test eax eax +
jz loc_10566F3  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetSystemMetrics +
push edi  +
push 7  +
call esi  +
push 8  +
mov edi eax +
call esi  +
push 5  +
mov ebx eax +
call esi  +
push 6  +
mov [ebp+var_4] eax +
call esi  +
mov ecx eax +
mov eax [ebp+var_4] +
lea edx [eax+edi] +
mov eax [ebp+arg_0] +
add ecx ebx +
pop edi  +
add edx edx +
add ecx ecx +
pop esi  +
mov [eax] edx +
mov [eax+4] ecx +
pop ebx  +
leave   +
retn 4  +
***
mov eax [ebp+arg_8] +
shl eax 4 +
lea esi [eax+ebx+44h] +
lea edi [ebp+var_78] +
movs   +
movs   +
movs   +
lea eax [ebp+var_78] +
movs   +
mov [ebp+lprcDst] eax +
mov edi eax +
cmp [ebx+24h] ecx +
jnz loc_1020229  +
lea eax [ebp+var_8] +
push eax  +
mov ecx ebx +
call sub_102169F  +
mov edx [ebp+arg_8] +
mov eax [ebp+var_4] +
mov ecx [ebp+var_8] +
test dl 1 +
jz loc_102A10D  +
add eax [ebx+0B1Ch] +
mov esi [edi+0Ch] +
sub esi [edi+4] +
cmp esi eax +
jge loc_10511B0  +
shl edx 4 +
lea esi [edx+ebx+44h] +
movs   +
movs   +
movs   +
xor eax eax +
movs   +
inc eax  +
jmp loc_10204F9  +
***
push ebx  +
mov ecx esi +
call sub_1021770  +
push 0  +
push 3E8h  +
push 5  +
push dword ptr [esi+4]  +
mov edi eax +
call ds:SetTimer  +
mov eax edi +
jmp loc_10024CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1 +
jz loc_1021780  +
call sub_10075FE  +
xor eax eax +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+50h] 0 +
jz loc_1008986  +
xor eax eax +
inc eax  +
jmp loc_10024CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor eax eax +
mov esi ecx +
push edi  +
xor edi edi +
cmp ebx [esi+320h] +
mov [ebp+var_4] edi +
setnz al  +
mov [ebp+arg_0] eax +
cmp [esi+330h] edi +
jnz loc_102181B  +
push 0FFFFFFFFh  +
push 3  +
lea ecx [esi+2ACh] +
call sub_1010EB3  +
test eax eax +
jle loc_1027C60  +
xor eax eax +
inc eax  +
cmp [esi+324h] eax +
jnz loc_10267AA  +
mov [esi+320h] ebx +
cmp [ebp+var_4] edi +
jnz loc_10217FC  +
cmp [ebp+arg_4] edi +
jz loc_1021812  +
cmp [esi+324h] edi +
jz loc_1021812  +
mov ecx esi +
call sub_101E12C  +
mov ecx esi +
call sub_101E086  +
cmp [ebp+arg_0] edi +
jnz loc_1059E09  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi 0FFFFFB1Fh +
jz loc_105A5E7  +
cmp eax edi +
jz loc_105A5CD  +
cmp eax 0FFFFFC7Ah +
jnz loc_1046938  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+29Ch]  +
call ds:GetWindowRect  +
mov eax [esi+0Ch] +
dec eax  +
jnz loc_105A5B8  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
mov [esi+10h] eax +
jmp loc_101100A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 0FFFFFFF4h +
pop ebp  +
jmp sub_1010F90  +
***
push [ebp+lParam]  +
mov ecx esi +
call sub_1021892  +
jmp loc_100E098  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
mov esi [edx] +
or eax 0FFFFFFFFh +
cmp esi [ecx+10h] +
jz loc_105C15E  +
cmp dword ptr [ecx+3Ch] 0 +
jz loc_10218B8  +
mov ecx [ecx+3Ch] +
mov eax [ecx] +
push edx  +
call dword ptr [eax+0Ch]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx ecx +
mov eax [ebx+40h] +
and eax 2 +
push esi  +
mov [ebp+var_4] eax +
jnz loc_10585F0  +
mov eax [ebx+0CD8h] +
push edi  +
push [ebp+arg_8]  +
mov ecx eax +
shl ecx 4 +
lea esi [ecx+ebx+44h] +
lea edi [ebp+X] +
movs   +
movs   +
movs   +
movs   +
push eax  +
xor esi esi +
push esi  +
push esi  +
mov ecx ebx +
call sub_10201EA  +
mov eax [ebx+0CD8h] +
shl eax 4 +
lea eax [eax+ebx+44h] +
push eax  +
lea eax [ebp+X] +
push eax  +
call ds:EqualRect  +
test eax eax +
jnz loc_1021988  +
cmp [ebp+arg_0] esi +
jz loc_1021932  +
mov ecx ebx +
call sub_100DBEB  +
mov ecx ebx +
call sub_10214C3  +
mov eax [ebx+0CD8h] +
shl eax 4 +
lea esi [eax+ebx+44h] +
mov eax [ebx+40h] +
lea edi [ebp+X] +
movs   +
movs   +
movs   +
and eax 3 +
movs   +
cmp al 3 +
jz loc_102197F  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
push 114h  +
push eax  +
mov eax [ebp-0Ch] +
sub eax [ebp+X] +
mov dword ptr [ebx+24h] 1 +
push eax  +
push dword ptr [ebp-10h]  +
push [ebp+X]  +
push 0  +
push dword ptr [ebx+4]  +
call ds:SetWindowPos  +
and dword ptr [ebx+24h] 0 +
mov ecx ebx +
call sub_1015D58  +
xor esi esi +
pop edi  +
cmp [ebp+arg_0] esi +
jz loc_1021995  +
mov ecx ebx +
call sub_10214C3  +
cmp [ebp+var_4] esi +
jnz loc_1058602  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
lea eax [ebp+Paint] +
push eax  +
push dword ptr [esi+10h]  +
call ds:BeginPaint  +
cmp [esi+328h] ebx +
jz loc_1024634  +
push [ebp+Paint.left]  +
call ds:CreateCompatibleDC  +
mov edi eax +
cmp edi ebx +
jz loc_1021A59  +
mov eax [ebp-30h] +
sub eax [ebp+Paint.bottom] +
push eax  +
mov eax [ebp-34h] +
sub eax [ebp+Paint.right] +
push eax  +
push [ebp+Paint.left]  +
call ds:CreateCompatibleBitmap  +
mov [ebp+var_48] eax +
cmp eax ebx +
jz loc_1024643  +
push eax  +
push edi  +
call ds:SelectObject  +
push ebx  +
push [ebp+Paint.bottom]  +
mov [ebp+var_4C] eax +
push [ebp+Paint.right]  +
push edi  +
call ds:OffsetWindowOrgEx  +
mov ebx edi +
jmp loc_1035606  +
test edi edi +
jz loc_1021A59  +
mov eax [ebp-30h] +
sub eax [ebp+Paint.bottom] +
push 0CC0020h  +
push [ebp+Paint.bottom]  +
push [ebp+Paint.right]  +
push edi  +
push eax  +
mov eax [ebp-34h] +
sub eax [ebp+Paint.right] +
push eax  +
push [ebp+Paint.bottom]  +
push [ebp+Paint.right]  +
push [ebp+Paint.left]  +
call ds:BitBlt  +
push [ebp+var_4C]  +
push edi  +
call ds:SelectObject  +
push [ebp+var_48]  +
call ds:DeleteObject  +
push edi  +
call ds:DeleteDC  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [esi+10h]  +
call ds:EndPaint  +
jmp loc_1035651  +
***
push dword ptr [ebp+10h]  +
call sub_1021A7D  +
jmp loc_1010E29  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+rc.left] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+rc.top] +
stos   +
stos   +
mov esi ecx +
mov [ebp+var_48] ebx +
stos   +
test ebx ebx +
jnz loc_1021ABD  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [esi+4]  +
call ds:BeginPaint  +
mov ebx eax +
test ebx ebx +
jz loc_1021B0C  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
xor eax eax +
lea edi [ebp+var_6C] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+hdc] +
push eax  +
lea eax [ebp+var_6C] +
push eax  +
push 0  +
lea eax [ebp+rc] +
push eax  +
push ebx  +
mov [ebp+var_6C] 10h +
call ds:BeginBufferedPaint  +
mov edi eax +
lea eax [ebp+rc] +
mov ecx esi +
push eax  +
test edi edi +
jz loc_1021B30  +
push [ebp+hdc]  +
call sub_1021B3D  +
push 1  +
push edi  +
call ds:EndBufferedPaint  +
cmp [ebp+var_48] 0 +
jnz loc_1021B1F  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [esi+4]  +
call ds:EndPaint  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
push ebx  +
call sub_1021B3D  +
jmp loc_1021B0C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
mov [ebp+var_4] edi +
cmp [edi+54h] esi +
jz loc_105C31C  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1051003  +
cmp dword_10B2074 esi +
jz loc_1051003  +
push esi  +
push [ebp+lprc]  +
push [ebp+hdc]  +
call ds:SHLWAPI_197  +
push esi  +
push [ebp+lprc]  +
push dword ptr [edi+10h]  +
push 1  +
push [ebp+hdc]  +
push dword ptr [edi+54h]  +
call ds:DrawThemeBackground  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov eax ebx +
sub eax 4Eh +
jz loc_105C457  +
sub eax 2Dh +
jz loc_105C427  +
sub eax 6 +
jz loc_102A686  +
dec eax  +
jz loc_102E1C6  +
dec eax  +
dec eax  +
jnz loc_1010A4E  +
jmp loc_105C41A  +
***
xor ecx ecx +
cmp eax 0Fh +
jnz loc_1021BE2  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [ebp-48h]  +
call ds:BeginPaint  +
mov ebx [ebp-44h] +
lea ecx [ebp-3Ch] +
cmp dword ptr [esi+50h] 0 +
jz loc_1008A70  +
push ecx  +
push ebx  +
push dword ptr [ebp-48h]  +
call ds:DrawThemeParentBackground  +
cmp dword ptr [ebp+0Ch] 0Fh +
jnz loc_10024DE  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [ebp-48h]  +
call ds:EndPaint  +
jmp loc_10024DE  +
***
mov dword ptr [ebp-4Ch] 1 +
jmp loc_1003CBC  +
***
mov edi edi +
push esi  +
push edi  +
mov eax ecx +
push 4  +
lea esi [eax+438h] +
pop ecx  +
xor eax eax +
mov edi offset dword_100D864 +
cmps   +
pop edi  +
setnz al  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ebx ecx +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
xor eax eax +
cmps   +
jz loc_1021E84  +
mov esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
lea ecx [ebx+29Ch] +
mov [ebp+arg_8] ecx +
movs   +
call sub_1022531  +
test eax eax +
jl loc_102453E  +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_C] +
mov [edx] ecx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
inc edx  +
dec ebx  +
xchg eax esi +
lods   +
mov ebx 8A8444EEh +
cmp dl [ebp-15AEA628h] +
inc ebx  +
dec ebx  +
xchg eax esi +
lods   +
mov ebx 8A8444EEh +
cmp dl [ebp-15AEA628h] +
***
test eax eax +
jl loc_1021C96  +
mov ecx [ebp+arg_C] +
mov [ecx] ebx +
jmp loc_1021C96  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi 0A0h +
jz loc_1021D17  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1021D17  +
cmp dword ptr [eax+4] 5CCh +
jb loc_1021D17  +
mov eax [eax+8] +
cmp dword ptr [eax] 34753423h +
jnz loc_1021D17  +
push [ebp+arg_C]  +
push eax  +
call sub_1021D2F  +
mov esi eax +
push esi  +
call ds:SetLastError  +
xor eax eax +
test esi esi +
setz al  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov edx ecx +
mov ecx [ebp+arg_0] +
mov [ebp+var_18] edx +
mov [ebp+var_28] ecx +
mov [ebp+var_24] eax +
test eax eax +
jz loc_1021D59  +
and dword ptr [eax] 0 +
push ebx  +
lea ebx [ecx+8] +
cmp dword ptr [ebx] 3BCh +
jb loc_105AE20  +
cmp dword ptr [edx+330h] 0 +
jnz loc_105AE2A  +
test byte ptr [ebx+0Ch] 20h +
push esi  +
lea esi [ebx+3A8h] +
jz loc_1021F27  +
push edi  +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
push 4  +
pop ecx  +
mov edi offset loc_1021CB0 +
lea esi [ebp+var_14] +
xor eax eax +
cmps   +
jz loc_1021F31  +
push 4  +
pop ecx  +
mov edi offset dword_1021CA0 +
lea esi [ebp+var_14] +
xor eax eax +
cmps   +
jz loc_1021F31  +
push 4  +
pop ecx  +
mov edi offset loc_1021CC0 +
lea esi [ebp+var_14] +
xor eax eax +
cmps   +
jz loc_1021F31  +
and [ebp+var_20] eax +
lea eax [ebp+var_1C] +
push eax  +
push dword ptr [ebx+8]  +
lea eax [ebp+var_14] +
push dword ptr [ebx+4]  +
mov ecx edx +
push eax  +
call sub_1021C47  +
mov ecx [ebp+var_28] +
mov esi eax +
mov eax [ecx+4] +
xor edi edi +
sub eax edi +
jz loc_1022CA7  +
dec eax  +
jnz loc_1021F3B  +
cmp esi edi +
jl loc_1021E62  +
mov edi [ebp+var_1C] +
test edi edi +
jz loc_1021E62  +
push esi  +
mov ecx edi +
call sub_1022144  +
or [ebp+var_1C] 0FFFFFFFFh +
cmp [ebp+var_24] 0 +
jz loc_1021E2A  +
push 0FFFFFFFFh  +
push 2  +
mov ecx edi +
call sub_1010EB3  +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_18] +
push 0  +
push esi  +
push ebx  +
push edi  +
call sub_1022180  +
mov [ebp+var_20] eax +
test eax eax +
jz loc_1021E5A  +
mov esi [ebp+var_24] +
test esi esi +
jz loc_1021E5A  +
push 0FFFFFFFFh  +
push 2  +
mov ecx edi +
call sub_1010EB3  +
xor ecx ecx +
cmp [ebp+var_1C] eax +
setnz cl  +
mov [esi] ecx +
mov ecx [ebp+var_18] +
call sub_10220EA  +
mov eax [ebp+var_20] +
neg eax  +
sbb eax eax +
and eax 0FFFFFF60h +
add eax 0A0h +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
push [ebp+arg_8]  +
lea esi [ebx+29Ch] +
push [ebp+arg_4]  +
mov ecx esi +
call sub_1021ED7  +
test eax eax +
jge loc_1047099  +
push [ebp+arg_8]  +
lea esi [ebx+2ACh] +
push [ebp+arg_4]  +
mov ecx esi +
call sub_1021ED7  +
test eax eax +
jge loc_1047099  +
push [ebp+arg_8]  +
add ebx 2BCh +
push [ebp+arg_4]  +
mov ecx ebx +
call sub_1021ED7  +
jmp loc_1021CD0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 0FFFFFFFFh  +
push 2  +
mov ebx ecx +
call sub_1010EB3  +
mov esi eax +
dec esi  +
js loc_1021F22  +
push 1  +
push esi  +
mov ecx ebx +
call sub_1010F3D  +
mov edi eax +
test edi edi +
jz loc_1021EEC  +
mov ecx edi +
call sub_1021C24  +
test eax eax +
jnz loc_1021EEC  +
mov eax [edi] +
cmp eax [ebp+arg_0] +
jnz loc_1021EEC  +
mov eax [edi+4] +
cmp eax [ebp+arg_4] +
jnz loc_1021EEC  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
or eax 0FFFFFFFFh +
jmp loc_1021F1B  +
***
mov esi offset dword_100D864 +
jmp loc_1021D87  +
mov eax 0A0h +
jmp loc_1021E73  +
dec eax  +
jnz loc_1023506  +
cmp esi edi +
jl loc_1021E62  +
cmp [ebp+var_1C] edi +
jz loc_1021E62  +
mov ecx [ebp+var_1C] +
push esi  +
call sub_1022144  +
mov ecx [ebp+var_18] +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 0  +
push esi  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_1C]  +
call sub_1047269  +
mov [ebp+var_20] eax +
test eax eax +
jz loc_1021E5A  +
mov eax [ebp+var_24] +
test eax eax +
jz loc_1021E5A  +
mov [eax] edi +
jmp loc_1021E5A  +
***
dec ecx  +
jz loc_1022C5D  +
dec ecx  +
jz loc_1022778  +
dec ecx  +
jz loc_10220BA  +
dec ecx  +
jz loc_1022464  +
dec ecx  +
jnz loc_1022821  +
mov eax 400000h +
jmp loc_1010F34  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
cmp [ebp+arg_4] 0 +
mov [ebp+lParam] 20h +
mov [ebp+var_1C] 1 +
jz loc_1021FE5  +
mov [ebp+var_1C] 80000001h +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
push 43Fh  +
push dword ptr [ecx]  +
call ds:SendMessageW  +
mov eax [ebp+var_14] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_8] 0FFFFFFFFh +
xor eax eax +
mov [ebp+var_C] ecx +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
cmp [ebp+arg_0] eax +
jz loc_102206C  +
push ebx  +
push esi  +
mov [ebp+var_4] eax +
push edi  +
cmp [ebp+var_8] 0FFFFFFFFh +
jnz loc_1022069  +
push [ebp+var_4]  +
mov ecx [ebp+var_C] +
call sub_1010881  +
mov esi eax +
push 0FFFFFFFFh  +
push 2  +
mov ecx esi +
call sub_1010EB3  +
mov ebx eax +
xor edi edi +
test ebx ebx +
jle loc_1022060  +
push 1  +
push edi  +
mov ecx esi +
call sub_1010F3D  +
cmp eax [ebp+arg_0] +
jz loc_1022073  +
inc edi  +
cmp edi ebx +
jl loc_102204C  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 3 +
jl loc_1022026  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_8] +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
mov [eax] esi +
mov [ebp+var_8] edi +
jmp loc_1022060  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+arg_4] +
or [ebp+var_4] 0FFFFFFFFh +
mov [ebp+var_8] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+lParam] 20h +
push 440h  +
push dword ptr [ecx]  +
mov [ebp+var_1C] 80000002h +
call ds:SendMessageW  +
leave   +
retn 8  +
***
push 2  +
pop eax  +
jmp loc_1010F34  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+35Ch] edi +
jnz sub_1059624  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+3BCh] edi +
jnz loc_105ADAF  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+lParam] 20h +
push 440h  +
push dword ptr [ecx]  +
mov [ebp+var_1C] 80000001h +
call ds:SendMessageW  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+wParam]  +
call sub_1010F3D  +
mov ecx eax +
call sub_1022163  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101118D  +
mov [esi+6F0h] eax +
mov [esi+6F4h] edx +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
push edi  +
push 1  +
push [ebp+wParam]  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
call sub_1010F3D  +
mov edi eax +
test edi edi +
jz loc_102233A  +
cmp [ebp+arg_C] 0 +
push ebx  +
mov ebx ds:SHLWAPI_618 +
push esi  +
mov esi [ebp+arg_4] +
jnz loc_10221C1  +
cmp dword ptr [esi+0Ch] 30h +
jz loc_105A83F  +
mov eax [esi+0Ch] +
shr eax 7 +
and eax 1 +
mov [edi+6D4h] eax +
mov eax [ebp+var_4] +
cmp dword ptr [eax+330h] 0 +
jnz loc_10221E7  +
lea ecx [eax+2CCh] +
call sub_101108A  +
push offset sub_1022454  +
call ebx  +
test eax eax +
jnz loc_105A870  +
test byte ptr [esi+0Ch] 8 +
jz loc_1022253  +
mov eax [esi+11Ch] +
mov ebx [edi+0Ch] +
test eax 0FFFFFFFCh +
jnz loc_105A88C  +
mov edx [esi+118h] +
mov ecx eax +
not ecx  +
and ecx ebx +
and edx eax +
or ecx edx +
mov [edi+0Ch] ecx +
test byte ptr [esi+11Ch] 1 +
jnz loc_105A893  +
mov eax [esi+118h] +
xor eax ebx +
test al 2 +
jz loc_1022245  +
test bl 2 +
jnz loc_105A8EC  +
mov eax [esi+118h] +
xor eax ebx +
and eax 1 +
or [ebp+var_8] eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1022335  +
cmp [ebp+wParam] 0 +
jl loc_1022335  +
test byte ptr [esi+0Ch] 2 +
jz loc_102229F  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_C]  +
push dword ptr [esi+14h]  +
push [ebp+wParam]  +
call sub_1022369  +
xor ebx ebx +
push ebx  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jnz loc_102229F  +
cmp [ebp+arg_C] ebx +
jnz loc_102229F  +
mov ecx [ebp+var_4] +
push ebx  +
push 2  +
push edi  +
call sub_1022473  +
test byte ptr [esi+0Ch] 1 +
jz loc_10222AB  +
mov eax [esi+10h] +
mov [edi+8] eax +
test byte ptr [esi+0Ch] 4 +
jz loc_10222D2  +
mov ecx [ebp+arg_0] +
lea ebx [esi+18h] +
push ebx  +
push [ebp+wParam]  +
call sub_1022082  +
push ebx  +
push 80h  +
lea eax [edi+22Ch] +
push eax  +
call sub_100665F  +
cmp [ebp+var_8] 0 +
jnz loc_10232AF  +
test byte ptr [esi+0Ch] 10h +
mov ebx 80000000h +
jnz loc_104819F  +
cmp [ebp+arg_C] 0 +
jnz loc_1022335  +
mov ecx [ebp+var_4] +
push 0FFFFFFFFh  +
push [ebp+wParam]  +
push 1  +
push [ebp+arg_0]  +
call sub_10220C7  +
cmp dword_10B24CC 0 +
jz loc_1022335  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10232D8  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx ebx +
or eax ecx +
jnz loc_105A9CC  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov edx ecx +
call sub_1010F1F  +
cmp [ebp+arg_4] 0 +
jz loc_1022C67  +
or [edx+0Ch] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
mov ss word ptr [eax-37h] +
push ss  +
mov edi [ebp+72h] +
dec ecx  +
popf   +
call dword ptr [edx-22F6F9FDh]  +
retf   +
***
mov eax 10000000h +
jmp loc_1010F34  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov ebx ecx +
mov [ebp+var_4] edi +
cmp esi edi +
jz loc_105A6F0  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1022005  +
mov [ebp+wParam] eax +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov ecx ebx +
push esi  +
call sub_10224D0  +
mov [ebp+var_10] eax +
cmp [ebp+var_4] edi +
jnz loc_10232E5  +
cmp eax 4 +
jz loc_10232E5  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
and dword ptr [ebx] 0 +
push esi  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
push 5  +
pop esi  +
test ecx ecx +
jz loc_1022524  +
mov eax [ebp+arg_4] +
push edi  +
test eax eax +
jz loc_1059B5D  +
xor edi edi +
inc edi  +
cmp eax edi +
jz loc_1059B1A  +
jle loc_1022523  +
cmp eax 4 +
jg loc_102323F  +
push 0  +
call sub_1010EFE  +
test eax eax +
jnz loc_1022523  +
mov ecx [ebp+arg_0] +
push edi  +
push 5  +
call sub_1022344  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea esi [ebp+arg_0] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov [ebp+var_18] ecx +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
lea esi [ebp+var_14] +
xor eax eax +
cmps   +
jz loc_1058F96  +
mov ecx [ebp+var_18] +
push ebx  +
push 0FFFFFFFFh  +
push 2  +
call sub_1010EB3  +
mov ebx eax +
dec ebx  +
js loc_1024536  +
mov ecx [ebp+var_18] +
push 1  +
push ebx  +
call sub_1010F3D  +
mov esi eax +
test esi esi +
jz loc_1022576  +
mov ecx esi +
call sub_1021C24  +
test eax eax +
jz loc_1022576  +
push 4  +
add esi 438h +
pop ecx  +
lea edi [ebp+var_14] +
xor eax eax +
cmps   +
jnz loc_1022576  +
mov eax ebx +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
or edi 0FFFFFFFFh +
cmp dword ptr [esi] 0 +
jz loc_102A205  +
cmp [ebp+arg_4] edi +
jz loc_1058E78  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push dword ptr [esi]  +
call ds:off_10065E0  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+10h]  +
call ds:GetWindowRect  +
push [ebp+arg_4]  +
lea eax [ebp+Rect] +
push [ebp+arg_0]  +
mov ecx esi +
push eax  +
mov eax [ebp-4] +
sub eax [ebp-0Ch] +
push eax  +
mov eax [ebp-8] +
sub eax [ebp+Rect] +
push eax  +
call sub_101FBBF  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
cmp [ebx+320h] esi +
jz loc_101FF8E  +
jmp loc_105999C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:off_1002B68  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_1022696  +
push [ebp+arg_0]  +
call sub_1022652  +
test eax eax +
jz loc_102268B  +
push eax  +
call sub_1002BCA  +
pop ecx  +
push [ebp+arg_0]  +
push dword ptr [esi]  +
call ds:off_10065B4  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
or [ebp+var_C] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
mov [ebp+var_10] esi +
cmp [esi] ebx +
jz loc_102276F  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx edi +
call sub_1021C24  +
mov [ebp+var_14] eax +
cmp eax ebx +
jnz loc_10226D9  +
cmp [edi+24h] bx +
jz loc_102276E  +
mov [ebp+hIcon] ebx +
mov [ebp+var_4] ebx +
mov eax [esi] +
test eax eax +
jz loc_10529C3  +
mov ecx [eax] +
cmp [ebp+var_4] ecx +
jge loc_1022764  +
push [ebp+var_4]  +
push eax  +
call ds:off_1002B68  +
cmp [ebp+var_14] 0 +
mov ebx eax +
jnz loc_1022716  +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
lea esi [ebx+42Ch] +
xor eax eax +
cmps   +
jz loc_1022736  +
mov edi [ebp+arg_0] +
push 4  +
add edi 438h +
pop ecx  +
lea esi [ebx+42Ch] +
xor eax eax +
cmps   +
jz loc_102275E  +
inc [ebp+var_4]  +
mov esi [ebp+var_10] +
jmp loc_10226DF  +
mov esi [ebp+arg_0] +
push 1  +
push 0FFFFFFFFh  +
push ebx  +
push 0FFFFFFFFh  +
lea eax [esi+24h] +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_102272E  +
mov eax [ebx+208h] +
cmp eax [esi+4] +
jnz loc_1052918  +
mov eax [ebp+var_4] +
mov [ebp+var_C] eax +
cmp [ebp+hIcon] 0 +
jnz loc_10529B5  +
pop edi  +
mov eax [ebp+var_C] +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax 200000h +
jmp loc_1010F34  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+2ACh] +
xor ebx ebx +
cmp [ebp+arg_0] eax +
push 0  +
push dword ptr [esi+320h]  +
setz bl  +
call sub_102179D  +
mov edi eax +
test edi edi +
jnz loc_102464F  +
test ebx ebx +
jz loc_102464F  +
xor eax eax +
push ebx  +
push eax  +
mov ecx esi +
call sub_10225FE  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
or edi 0FFFFFFFFh +
cmp dword ptr [esi+458h] 7FFFFFFFh +
mov ebx ecx +
jnb loc_1022814  +
push 8  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102281D  +
mov byte ptr [eax] 0 +
mov [eax+4] esi +
test eax eax +
jz loc_1022814  +
push [ebp+arg_4]  +
mov ecx ebx +
push eax  +
call sub_10225C3  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_1022803  +
***
dec ecx  +
jnz loc_1010F34  +
mov eax 800000h +
jmp loc_1010F34  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 418h  +
push [ebp+hWnd]  +
call esi  +
mov ebx eax +
shl eax 2 +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+var_8] eax +
mov [ebp+lParam] 20h +
mov [ebp+var_24] 80000020h +
mov [ebp+var_4] edi +
cmp eax edi +
jz loc_10228D4  +
test ebx ebx +
jle loc_102289C  +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 43Fh  +
push [ebp+hWnd]  +
call esi  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_8] +
mov [ecx+edi*4] eax +
inc edi  +
cmp edi ebx +
jl loc_102287F  +
push 1  +
push ebx  +
push [ebp+var_8]  +
call sub_10228E4  +
test ebx ebx +
jle loc_10228C0  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_4] +
cmp ecx [eax] +
jnz loc_10228C0  +
inc [ebp+var_4]  +
add eax 4 +
cmp [ebp+var_4] ebx +
jl loc_10228AE  +
push [ebp+var_8]  +
call ds:__imp_free  +
pop ecx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
xor edi edi +
test ebx ebx +
jle loc_10228CA  +
jmp loc_105C864  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
sub esp 0F0h +
cmp ecx 2 +
jnb loc_1022BF1  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
or edi 0FFFFFFFFh +
cmp dword ptr [esi+700h] 7FFFFFFFh +
mov ebx ecx +
jnb loc_1022943  +
push 8  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102294C  +
mov byte ptr [eax] 1 +
mov [eax+4] esi +
test eax eax +
jz loc_1022943  +
push [ebp+arg_4]  +
mov ecx ebx +
push eax  +
call sub_10225C3  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_1022932  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
push 1  +
push [ebp+wParam]  +
mov esi ecx +
mov ecx [ebp+arg_0] +
call sub_1010F3D  +
mov edi eax +
test edi edi +
jz loc_10229B3  +
push ebx  +
push 6  +
mov ecx edi +
or ebx 0FFFFFFFFh +
call sub_1010EFE  +
test eax eax +
jnz loc_10248A0  +
cmp [esi+2E8h] eax +
jnz loc_10248A0  +
cmp [esi+2ECh] eax +
jz loc_10248A0  +
lea eax [esi+2ACh] +
cmp eax [ebp+arg_0] +
jnz loc_1046C85  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
lea eax [ebp+var_D0] +
push eax  +
movzx eax word ptr [ebp+var_24] +
or eax 10000h +
push eax  +
push 427h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
jmp loc_101FE09  +
push 5  +
call ds:BeginDeferWindowPos  +
xor edi edi +
mov esi 114h +
cmp eax edi +
jz loc_1022AA6  +
mov ecx [ebp+var_7C] +
sub ecx [ebp+y] +
push esi  +
push ecx  +
mov ecx [ebp+var_80] +
sub ecx [ebp+x] +
push ecx  +
push [ebp+y]  +
push [ebp+x]  +
push edi  +
push dword ptr [ebx+28h]  +
mov edi ds:DeferWindowPos +
push eax  +
call edi  +
mov ecx [ebp+dy] +
sub ecx [ebp+var_64] +
push 14h  +
push ecx  +
mov ecx [ebp+var_60] +
sub ecx [ebp+var_68] +
push ecx  +
push [ebp+var_64]  +
push [ebp+var_68]  +
push 0  +
push dword ptr [ebx+18h]  +
push eax  +
call edi  +
mov edx [ebp+rc.bottom] +
sub edx [ebp+rc.top] +
mov ecx [ebx+2BCh] +
push esi  +
push edx  +
mov edx [ebp+rc.right] +
sub edx [ebp+rc.left] +
push edx  +
push [ebp+rc.top]  +
push [ebp+rc.left]  +
push 0  +
push ecx  +
push eax  +
call edi  +
mov ecx [ebp+var_14] +
sub ecx [ebp+var_1C] +
push esi  +
push ecx  +
mov ecx [ebp+var_18] +
sub ecx [ebp+var_20] +
push ecx  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
push 0  +
push dword ptr [ebx+1Ch]  +
push eax  +
call edi  +
mov ecx [ebp+var_2C] +
sub ecx [ebp+var_34] +
push esi  +
push ecx  +
mov ecx [ebp+var_30] +
sub ecx [ebp+var_38] +
push ecx  +
push [ebp+var_34]  +
push [ebp+var_38]  +
push 0  +
push dword ptr [ebx+14h]  +
push eax  +
call edi  +
push eax  +
call ds:EndDeferWindowPos  +
xor edi edi +
push esi  +
push [ebp+cy]  +
push [ebp+var_8]  +
push edi  +
push edi  +
push edi  +
push dword ptr [ebx+29Ch]  +
call ds:SetWindowPos  +
push edi  +
push edi  +
push 0C8h  +
push dword ptr [ebx+1Ch]  +
call ds:SendMessageW  +
jmp loc_101FF83  +
cmp [ebp+var_28] 0 +
mov esi [ebp+arg_8] +
lea edi [ebp+var_98] +
movs   +
movs   +
movs   +
movs   +
jnz loc_102A4E2  +
mov eax [ebp+var_18] +
mov [ebp+var_90] eax +
push 0  +
lea eax [ebp+var_98] +
push eax  +
push dword ptr [ebx+10h]  +
call ds:InvalidateRect  +
jmp loc_101FF97  +
***
push dword ptr [ebx+320h]  +
mov ecx ebx +
push 1  +
call sub_10225FE  +
jmp loc_100DAC9  +
***
mov eax [ebp+14h] +
mov eax [eax+18h] +
and eax 3 +
cmp al 3 +
jz loc_1010A4E  +
or dword ptr [esi+74h] 8 +
jmp loc_1010A4E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+338h] edi +
jnz loc_1047AC0  +
push edi  +
push edi  +
push 1  +
mov ecx offset unk_10B1460 +
call sub_10218C2  +
cmp [ebp+arg_0] edi +
jnz loc_1059DC9  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ecx] al +
jnz loc_1022B88  +
mov edx [ebp+arg_0] +
cmp edx [ecx+4] +
jnz loc_1022B88  +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp eax ebx +
jz loc_1022BDA  +
push edi  +
mov edi [eax] +
cmp edi ebx +
jle loc_1022BD9  +
push ebx  +
mov ecx esi +
call sub_1022652  +
mov ecx eax +
test ecx ecx +
jz loc_1022BD4  +
push [ebp+arg_0]  +
call sub_1022B74  +
test al al +
jnz loc_1022BE3  +
cmp [ebp+arg_4] al +
jnz loc_1022BEB  +
inc [ebp+var_4]  +
inc ebx  +
cmp ebx edi +
jl loc_1022BB2  +
pop edi  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
jmp loc_1022BD9  +
cmp [ecx] al +
jz loc_1022BD4  +
jmp loc_1022BD1  +
***
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
push ebx  +
push esi  +
lea edx [eax+ecx*4-4] +
push edi  +
mov ecx edx +
sub ecx eax +
sar ecx 2 +
inc ecx  +
cmp ecx 8 +
ja loc_105C788  +
cmp edx eax +
jbe loc_1022C36  +
lea edi [eax+4] +
cmp [ebp+arg_8] 0 +
mov ecx eax +
mov esi edi +
jnz loc_1022C23  +
jmp loc_1022C54  +
cmp esi edx +
jbe loc_1022C47  +
mov ebx [edx] +
mov esi [ecx] +
mov [ecx] ebx +
mov [edx] esi +
sub edx 4 +
cmp edx eax +
ja loc_1022C17  +
dec [ebp+arg_4]  +
jns loc_105C772  +
pop edi  +
pop esi  +
pop ebx  +
jmp locret_10228FB  +
mov ebx [esi] +
cmp ebx [ecx] +
jle loc_1022C4F  +
mov ecx esi +
add esi 4 +
jmp loc_1022C23  +
cmp esi edx +
ja loc_1022C27  +
jmp loc_105C762  +
***
mov eax 100000h +
jmp loc_1010F34  +
***
not eax  +
and [edx+0Ch] eax +
jmp loc_1022360  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
xor eax eax +
lea esi [edi+0B1Ch] +
cmp dword ptr [esi] 2 +
setz al  +
push eax  +
push 6  +
call sub_1022344  +
xor eax eax +
cmp dword ptr [esi] 1 +
mov ecx edi +
setz al  +
push eax  +
push 1  +
call sub_1022344  +
pop edi  +
pop esi  +
retn   +
***
cmp esi edi +
jge loc_1021E62  +
push ecx  +
mov ecx [ebp+var_18] +
call sub_1022CDE  +
mov [ebp+var_20] eax +
cmp eax edi +
jz loc_1021E5A  +
mov eax [ebp+var_24] +
cmp eax edi +
jz loc_1021E5A  +
mov dword ptr [eax] 1 +
jmp loc_1021E5A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
lea esi [eax+8] +
push 0B20h  +
mov [ebp+var_30] ecx +
mov [ebp+var_2C] eax +
mov [ebp+var_3C] esi +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_10248DA  +
mov ecx eax +
call sub_102317E  +
mov ebx eax +
test ebx ebx +
jz loc_105AA40  +
mov eax [esi+4] +
mov [ebx] eax +
mov eax [esi+8] +
mov [ebx+4] eax +
test byte ptr [esi+0Ch] 20h +
jnz loc_10248AD  +
mov esi offset dword_100D864 +
push edi  +
lea edi [ebx+438h] +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+var_3C] +
mov esi [ebp+var_30] +
and dword ptr [ebx+10h] 0 +
and dword ptr [ebx+18h] 0 +
push ebx  +
push edi  +
mov ecx esi +
call sub_10231A9  +
call sub_101118D  +
mov [ebx+6F0h] eax +
mov [ebx+6F4h] edx +
cmp dword ptr [esi+370h] 0 +
jnz loc_105AA47  +
mov ecx [ebp+var_2C] +
add ecx 3C4h +
push ecx  +
lea eax [ebx+24h] +
push 104h  +
push eax  +
call sub_100665F  +
test byte ptr [edi+0Ch] 4 +
jz loc_10234F8  +
mov ecx ebx +
call sub_1021C24  +
test eax eax +
jnz loc_10234F8  +
lea ecx [edi+18h] +
push ecx  +
lea eax [ebx+708h] +
push 104h  +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_10234F8  +
mov eax [edi+0Ch] +
test al 2 +
jz loc_10248E1  +
mov ecx [edi+14h] +
mov [ebp+var_2C] ecx +
push [ebp+var_2C]  +
and al 4 +
movzx eax al +
neg eax  +
lea edx [edi+18h] +
sbb eax eax +
and eax edx +
push eax  +
push ebx  +
lea ecx [esi+2E0h] +
mov [ebp+var_38] edx +
call sub_102312E  +
mov [ebp+var_28] eax +
test eax eax +
jl loc_1022E28  +
mov ecx ebx +
call sub_1021C24  +
test eax eax +
jz loc_1022E28  +
push [ebp+var_28]  +
lea ecx [esi+2E0h] +
push ebx  +
call sub_102473F  +
test eax eax +
jz loc_105AA57  +
and [ebp+var_34] 0 +
cmp [ebp+var_28] 0 +
jl loc_1046CF7  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+var_3C] +
or [ebp+lParam] 0FFFFFFFFh +
or [ebp+var_8] 0FFFFFFFFh +
and dword ptr [eax+11Ch] 0DFFFFFFFh +
lea edi [esi+2E0h] +
cmp dword ptr [edi+8] 0 +
mov [ebp+var_C] ebx +
mov [ebp+var_F] 0 +
mov [ebp+var_10] 4 +
jnz loc_1022E78  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_1022E78  +
mov ecx ebx +
call sub_1022C76  +
lea eax [esi+2ACh] +
push 6  +
mov ecx ebx +
mov [ebp+var_1C] eax +
call sub_1010EFE  +
test eax eax +
jnz loc_10248B8  +
cmp [edi+8] eax +
jnz loc_10248B8  +
cmp [edi+0Ch] eax +
jz loc_10248B8  +
mov eax [ebp+var_1C] +
mov ecx [eax+0Ch] +
mov [ebp+var_30] ecx +
test ecx ecx +
jz loc_1046CBE  +
cmp [ebp+var_28] 0 +
jl loc_1046CB4  +
push 1  +
push ecx  +
push [ebp+var_28]  +
mov ecx edi +
call sub_1024583  +
mov [ebp+wParam] eax +
test eax eax +
jl loc_1046CBE  +
mov eax [ebp+var_1C] +
mov eax [eax] +
push eax  +
mov [ebp+hWnd] eax +
call sub_1022837  +
xor edi edi +
push edi  +
mov ecx esi +
mov [ebp+var_14] eax +
mov [ebp+var_2C] 1 +
call sub_10230CE  +
push edi  +
push dword ptr [ebx]  +
mov [ebp+var_44] eax +
mov [ebp+var_1D] 0 +
call ds:GetWindowThreadProcessId  +
mov [ebp+var_38] eax +
cmp eax edi +
jz loc_1022F6F  +
mov ecx [ebp+var_1C] +
push 0FFFFFFFFh  +
push 2  +
call sub_1010EB3  +
dec eax  +
mov [ebp+var_40] eax +
js loc_1022F49  +
mov ecx [ebp+var_1C] +
push 1  +
push eax  +
call sub_1010F3D  +
cmp eax edi +
jz loc_1022F40  +
mov ecx [eax+6D8h] +
cmp ecx [ebp+var_38] +
jz loc_102497B  +
dec [ebp+var_40]  +
jns loc_10248D2  +
push [ebp+var_38]  +
push edi  +
push 100000h  +
call ds:OpenThread  +
cmp eax edi +
jz loc_1022F60  +
mov [ebp+var_1D] 1 +
mov ecx [ebp+var_38] +
mov [ebx+6D8h] ecx +
mov [ebx+6DCh] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
push 443h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
test eax eax +
jz loc_102305B  +
mov ecx [ebp+var_30] +
cmp ecx edi +
jz loc_1022FBB  +
cmp [ebp+var_28] edi +
mov eax 7FFFFFFFh +
jl loc_1046CE0  +
push edi  +
push ecx  +
push [ebp+var_28]  +
lea ecx [esi+2E0h] +
call sub_1024583  +
mov ecx [ebp+var_30] +
push eax  +
push ebx  +
call sub_1022904  +
mov ecx [ebp+var_1C] +
push edi  +
call nullsub_2  +
push 1  +
push [ebp+wParam]  +
mov ecx esi +
push [ebp+var_3C]  +
push [ebp+var_1C]  +
call sub_1022180  +
test eax eax +
jz loc_105AAF9  +
cmp [ebp+var_28] 0FFFFFFFFh +
jz loc_1023006  +
push [ebp+var_28]  +
mov ecx esi +
push 0FFFFFFFFh  +
push 2  +
push [ebp+var_1C]  +
call sub_10220C7  +
push [ebp+var_30]  +
lea ecx [esi+2E0h] +
push [ebp+var_28]  +
call sub_1024671  +
push edi  +
push 5  +
push ebx  +
mov ecx esi +
call sub_1022473  +
test eax eax +
jz loc_105AB1B  +
push [ebp+var_1C]  +
mov ecx esi +
call sub_1022787  +
cmp dword_10B24CC edi +
jz loc_102305B  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1024902  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_105AB2C  +
xor edi edi +
push [ebp+var_44]  +
mov ecx esi +
call sub_10230CE  +
cmp [ebp+var_2C] edi +
jz loc_10230B5  +
push 0FFFFFFFFh  +
push [ebp+wParam]  +
mov ecx esi +
push edi  +
mov edi [ebp+var_1C] +
push edi  +
call sub_10220C7  +
cmp [ebp+var_1D] 0 +
jz loc_102308E  +
push dword ptr [ebx+6DCh]  +
mov ecx esi +
call sub_10231F1  +
lea eax [esi+2ACh] +
cmp edi eax +
jnz loc_10230B5  +
lea eax [ebp+var_44] +
push eax  +
push ebx  +
mov ecx esi +
call sub_1022005  +
test eax eax +
jl loc_10230B5  +
cmp [ebp+var_44] edi +
jnz loc_10230B5  +
push ebx  +
mov ecx esi +
call sub_10233E8  +
mov eax [ebp+var_2C] +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+328h] +
mov eax [esi] +
mov [ebp+var_4] eax +
mov eax [ebp+wParam] +
xor ebx ebx +
push ebx  +
push eax  +
push 0Bh  +
push dword ptr [edi+29Ch]  +
mov [esi] eax +
call ds:SendMessageW  +
cmp [esi] ebx +
jz loc_10231CE  +
cmp [edi+32Ch] ebx +
jz loc_102311F  +
push ebx  +
push ebx  +
push dword ptr [edi+10h]  +
call ds:InvalidateRect  +
push dword ptr [edi+10h]  +
call ds:UpdateWindow  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
push edi  +
jz loc_1046CAC  +
push [ebp+arg_8]  +
push [ebp+lpStart]  +
push [ebp+arg_0]  +
call sub_10226A0  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1046CAC  +
push edi  +
push dword ptr [esi]  +
call ds:off_1002B68  +
test eax eax +
jz loc_1023171  +
push [ebp+arg_0]  +
mov ecx esi +
push eax  +
call sub_10245B5  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov eax ecx +
lea edi [eax+438h] +
mov esi offset dword_100D864 +
movs   +
movs   +
movs   +
movs   +
and dword ptr [eax+6E0h] 0 +
and dword ptr [eax+0B1Ch] 0 +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
mov ebx [ebp+arg_0] +
test byte ptr [ebx+0Ch] 20h +
jnz loc_10247B9  +
xor eax eax +
test eax eax +
jnz loc_10247CA  +
pop ebx  +
leave   +
retn 8  +
***
mov [edi+32Ch] ebx +
jmp loc_102311F  +
***
mov dword ptr [eax] 1 +
jmp loc_1022436  +
mov [ebp+arg_8] ebx +
jmp loc_102244B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+39Ch] +
cmp dword ptr [esi] 0 +
jz loc_1027345  +
mov eax [esi] +
test eax eax +
jz loc_102679C  +
mov eax [eax] +
test eax eax +
jz loc_1026786  +
mov eax [esi] +
test eax eax +
jz loc_10267A3  +
mov eax [eax] +
cmp eax 40h +
jge loc_1023239  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx esi +
call sub_1003DE4  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp eax 6 +
jg loc_1059AED  +
push 0  +
call sub_1010EFE  +
test eax eax +
jnz loc_102325E  +
mov ecx [ebp+arg_0] +
push edi  +
push 5  +
call sub_1022344  +
mov eax [ebp+var_4] +
xor ecx ecx +
cmp [eax+2E8h] ecx +
jnz loc_1022523  +
cmp [eax+2ECh] ecx +
jz loc_1022523  +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_1010EFE  +
test eax eax +
jnz loc_1022523  +
mov ecx [ebp+arg_0] +
call sub_1022C76  +
mov ecx [ebp+arg_0] +
push 6  +
call sub_1010EFE  +
mov esi eax +
neg esi  +
sbb esi esi +
neg esi  +
inc esi  +
inc esi  +
mov [ebx] edi +
jmp loc_1022523  +
***
cmp [ebp+arg_C] 0 +
jnz loc_10222DC  +
jmp loc_105A90A  +
xor eax eax +
inc eax  +
jmp loc_10481D8  +
cmp dword_10B24CC 0 +
jnz loc_105A953  +
jmp loc_10222EB  +
test al al +
jz loc_1022319  +
jmp loc_1022335  +
***
push 2  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jnz loc_105A6F7  +
cmp [ebx+320h] edi +
jnz loc_105A719  +
cmp [ebp+var_10] 4 +
jz loc_105A726  +
cmp [ebp+wParam] edi +
jl loc_102332C  +
cmp [ebp+var_C] edi +
jz loc_102332C  +
push edi  +
mov ecx esi +
call sub_1010EFE  +
mov ecx [ebp+var_C] +
push eax  +
push 8  +
push [ebp+wParam]  +
call sub_1023383  +
cmp [ebp+var_4] edi +
jz loc_10224C1  +
cmp [ebp+wParam] edi +
jl loc_10224C1  +
cmp [ebp+var_C] edi +
jz loc_10224C1  +
push edi  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jnz loc_10224C1  +
push [ebp+arg_8]  +
mov ecx ebx +
push 1  +
push [ebp+wParam]  +
push [ebp+var_C]  +
call sub_1022955  +
cmp [ebp+arg_4] 6 +
jnz loc_10224C1  +
jmp loc_105A76F  +
test eax eax +
jnz loc_1023302  +
jmp loc_102330C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
mov esi ds:SendMessageW +
push edi  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov edi ecx +
push 43Fh  +
push dword ptr [edi]  +
mov [ebp+lParam] 20h +
mov [ebp+var_1C] 80000004h +
call esi  +
cmp [ebp+arg_8] 0 +
mov al [ebp+var_10] +
mov cl al +
jnz loc_1058E51  +
mov dl [ebp+arg_4] +
not dl  +
and al dl +
mov [ebp+var_10] al +
xor al cl +
jnz loc_1058E59  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edx ecx +
jmp loc_102019E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_8] ecx +
call sub_101118D  +
mov ecx [ebp+arg_0] +
push 1  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edx +
call sub_1010EFE  +
mov esi eax +
neg esi  +
sbb esi esi +
push offset dword_10234B0  +
neg esi  +
call ds:SHLWAPI_618  +
mov ecx [ebp+arg_0] +
mov edi eax +
neg edi  +
sbb edi edi +
push 0  +
and edi 2 +
call sub_1010EFE  +
mov ebx eax +
mov eax [ebp+var_C] +
neg ebx  +
sbb ebx ebx +
and ebx 4 +
or ebx edi +
or ebx esi +
mov esi [ebp+var_8] +
cmp eax [esi+3A4h] +
ja loc_1047047  +
jb loc_1023465  +
mov ecx [ebp+var_10] +
cmp ecx [esi+3A0h] +
jnb loc_1047047  +
push 10h  +
pop ecx  +
mov edi [ebp+arg_0] +
or ebx ecx +
cmp eax [edi+6FCh] +
jbe loc_105A7D6  +
xor eax eax +
push 0FFFFFFFFh  +
push 2  +
lea ecx [esi+2BCh] +
or ebx eax +
call sub_1010EB3  +
test eax eax +
jg loc_1052903  +
xor eax eax +
or ebx eax +
jnz loc_10234C0  +
push ebx  +
push edi  +
mov ecx esi +
call sub_1046F0C  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
cmp dword_10B24CC 0 +
jz loc_10234A6  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_105290B  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_10234A6  +
jmp loc_105A7EF  +
***
xor eax eax +
mov [ebx+708h] ax +
jmp loc_1022DCD  +
***
dec eax  +
jz loc_105AE45  +
dec eax  +
jnz loc_1021E62  +
cmp esi edi +
jl loc_1021E62  +
cmp [ebp+var_1C] edi +
jz loc_1021E62  +
mov ecx [ebp+var_1C] +
push esi  +
call sub_1022144  +
mov ecx [ebp+var_18] +
push esi  +
push ebx  +
push [ebp+var_1C]  +
call sub_1023548  +
mov [ebp+var_20] eax +
jmp loc_1021E62  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
push 1  +
push [ebp+wParam]  +
xor esi esi +
call sub_1010F3D  +
test eax eax +
jz loc_102357C  +
mov ecx [ebp+arg_4] +
mov ecx [ecx+320h] +
test ecx ecx +
jz loc_1023576  +
lea edx [ecx-3] +
cmp edx 1 +
ja loc_102357C  +
xor esi esi +
mov [eax+10h] ecx +
inc esi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push offset Name  +
xor esi esi +
push esi  +
push 100000h  +
call ds:OpenEventW  +
cmp eax esi +
jnz loc_1056239  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi ds:SystemParametersInfoW +
xor esi esi +
push esi  +
lea eax [ebp+pvParam] +
push eax  +
push esi  +
push 101Ah  +
mov [ebp+pvParam] esi +
mov [ebp+var_C] esi +
call edi  +
push esi  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push 100Eh  +
call edi  +
cmp [ebp+pvParam] esi +
jz loc_105D09A  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
push 5  +
pop ebx  +
xor edi edi +
push edi  +
lea eax [ebp+pvParam] +
push eax  +
push edi  +
push 72h  +
mov esi ecx +
mov [ebp+pvParam] edi +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_1023675  +
cmp [ebp+pvParam] edi +
jnz loc_10236D1  +
cmp [esi+0D98h] edi +
jnz loc_10236D1  +
mov eax [esi+0DA4h] +
cmp eax 4 +
jz loc_10236D1  +
cmp eax 2 +
jz loc_10236D1  +
mov ecx esi +
call sub_1023588  +
test eax eax +
jnz loc_1057100  +
call sub_1023603  +
test eax eax +
jnz loc_1057104  +
mov eax [esi+0C08h] +
cmp eax edi +
jnz loc_1057108  +
lea ecx [esi+378h] +
call sub_10236DB  +
test eax eax +
jnz loc_1057150  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
xor ebx ebx +
inc ebx  +
jmp loc_10236CA  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call sub_101118D  +
mov esi [edi+28h] +
mov ecx [edi+2Ch] +
add esi 61C46800h +
adc ecx 8 +
cmp edx ecx +
jbe loc_10590A5  +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_102394D  +
jmp loc_100DAC9  +
***
xor esi esi +
cmp [ebx+320h] esi +
jz loc_1023980  +
call sub_1074F0B  +
test eax eax +
jz loc_1023763  +
cmp [ebx+334h] esi +
jz loc_1023738  +
push esi  +
mov ecx ebx +
call sub_1074787  +
lea ecx [ebx+2Ch] +
call sub_10795C8  +
push 1  +
mov ecx ebx +
call sub_10763CA  +
cmp [ebx+334h] esi +
jz loc_1023980  +
push 1  +
mov ecx ebx +
call sub_1074787  +
jmp loc_1023980  +
push esi  +
push 190h  +
push 2  +
push dword ptr [ebx+10h]  +
call ds:SetTimer  +
jmp loc_1023980  +
push 0  +
push 1Eh  +
push 3  +
jmp loc_102376B  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1047BF4  +
cmp edx edi +
jnz loc_1047BF4  +
push offset dword_1023918  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1047BF4  +
push 4  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
mov esi [ebx+338h] +
and dword ptr [ebx+380h] 0 +
test esi esi +
jz loc_1023980  +
push 0  +
push 1  +
jmp loc_10238CB  +
push 402h  +
jmp loc_10237E1  +
push 6  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
lea esi [ebx+338h] +
cmp dword ptr [esi] 0 +
jz loc_102383E  +
cmp dword ptr [ebx+378h] 0 +
jz loc_102383E  +
push 22Bh  +
push offset nullsub_3  +
call sub_1034B2D  +
mov esi [esi] +
push 402h  +
push 1  +
push 1  +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
and dword ptr [ebx+378h] 0 +
jmp loc_1023980  +
cmp eax esi +
jz loc_1047A41  +
mov eax [ebp+plii.dwTime] +
cmp eax [ebx+8Ch] +
jnb loc_1047A41  +
lea eax [ebx+390h] +
cmp [eax] esi +
jnz loc_1023880  +
push 21Eh  +
push offset dword_1023938  +
mov dword ptr [eax] 1 +
call sub_1034B2D  +
push 3E8h  +
push 7  +
mov ecx ebx +
call sub_104808B  +
jmp loc_1023980  +
mov [ebx+90h] esi +
jmp loc_1023980  +
push 0Ch  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
mov esi [ebx+338h] +
test esi esi +
jz loc_1023980  +
cmp dword ptr [ebx+388h] 7 +
jnz loc_1023980  +
push 402h  +
push 0  +
push 1  +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
jmp loc_1023980  +
***
mov edi edi +
push edi  +
lea eax [esi+118h] +
push eax  +
push offset stru_1023ABC  +
push 1  +
push 0  +
push offset stru_1023AAC  +
call ebx  +
mov edi eax +
test edi edi +
jl loc_1023A40  +
lea eax [esi+11Ch] +
push eax  +
push offset stru_1023A9C  +
push 1  +
push 0  +
push offset stru_1023A8C  +
call ebx  +
mov edi eax +
test edi edi +
jl loc_1023A40  +
mov eax [esi+118h] +
and dword ptr [ebp-4] 0 +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push offset dword_1023A7C  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jl loc_1023A16  +
mov eax [esi+11Ch] +
mov ecx [eax] +
push 1  +
push dword ptr [ebp-4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_1023A16  +
mov eax [esi+11Ch] +
mov ecx [eax] +
lea edx [esi+28h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
mov eax [ebp-4] +
test eax eax +
jz loc_1023A23  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jl loc_1023A40  +
lea eax [esi+120h] +
push eax  +
push offset stru_1023A6C  +
push 1  +
push 0  +
push offset stru_1023A5C  +
call ebx  +
mov edi eax +
test edi edi +
pop edi  +
mov dword ptr [esi+110h] 1 +
pop ebx  +
jge loc_1007CAB  +
jmp loc_10647D9  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1003BF1  +
***
and [ebp+var_C] 0 +
jmp loc_101E5E1  +
***
xor eax eax +
jmp loc_101E29C  +
***
mov eax offset aTaskbar +
jmp loc_101E81D  +
***
push offset aTaskbar  +
push offset aTaskbar2  +
jmp loc_101E6D6  +
***
mov [ebp+lParam] offset aTraynotify +
jmp loc_101EE8F  +
***
xor eax eax +
jmp loc_101ECA4  +
***
mov [ebp+var_4] offset aTraynotifyho_0 +
jmp loc_101E1A8  +
***
xor eax eax +
retn   +
***
test byte ptr [esi+4] 10h +
jnz loc_1062E54  +
call dword ptr [eax+64h]  +
test eax eax +
mov eax [ebp+0Ch] +
jz loc_1023B64  +
mov dword ptr [eax] offset dword_1023B70 +
jmp loc_101E872  +
***
mov dword ptr [eax] offset aTaskband2com_0 +
jmp loc_101E872  +
***
mov dword ptr [eax] offset aTaskband2verti +
jmp loc_101E872  +
***
mov eax offset aTraynotifyho_0 +
jmp loc_101ECC2  +
***
push offset aTaskband2_0  +
jmp loc_101E8D8  +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [eax+4] +
push esi  +
mov esi [eax+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi [eax+0Ch] +
mov eax [eax+10h] +
mov ecx offset __ImageBase +
sub edi ecx +
sar edi 2 +
add esi ecx +
mov edx [esi] +
lea eax __ImageBase[eax+edi*4] +
add ebx ecx +
mov ecx [eax] +
mov [ebp+8] edx +
lea eax (__ImageBase+2)[ecx] +
test ecx ecx +
js loc_102A6EF  +
mov [ebp-8] eax +
test edx edx +
jnz loc_1023CC8  +
push edx  +
push edx  +
push ebx  +
call LoadLibraryExA  +
mov edi eax +
mov [ebp+8] edi +
test edi edi +
jz loc_105C8A9  +
push 0  +
push edi  +
push esi  +
call InterlockedCompareExchange  +
mov esi eax +
test esi esi +
jnz loc_105C89B  +
push 8  +
pop ecx  +
lea edi [ebp-28h] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
mov eax ds:dword_1023D14 +
mov dword ptr [ebp-2Ch] 24h +
mov [ebp-20h] ebx +
test eax eax +
jnz loc_105C88E  +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jz loc_105C8D0  +
cmp dword ptr [ebp+8] 0 +
jz loc_105C8EC  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_105C8D9  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jz loc_105C8EC  +
cmp dword ptr [ebp-4] 0 +
jz loc_1023D0B  +
mov eax [ebp+0Ch] +
mov [eax] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+14h] +
cmp dword ptr [esi] 0 +
jnz loc_1023D95  +
push esi  +
push offset stru_10120BC  +
push 1  +
push 0  +
push offset stru_1023DB4  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1023D90  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset dword_1023DA4  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1023D90  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword ptr [esi] 0 +
jz loc_1023D9D  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi] +
pop edi  +
pop esi  +
leave   +
retn   +
***
lea ecx [edi-20h] +
call sub_1023DDE  +
test eax eax +
jge loc_1033B9A  +
jmp loc_1062E28  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push 65Bh  +
push 0  +
mov esi ecx +
push 5  +
push dword ptr [esi+50h]  +
call ds:GetThemeColor  +
test eax eax +
jl loc_1023E07  +
mov ecx [ebp+var_4] +
mov [esi+68h] ecx +
pop esi  +
leave   +
retn   +
***
lea eax [ebp+Exchange] +
push eax  +
push offset stru_1023E54  +
push 403h  +
push 0  +
push [ebp+rclsid]  +
call CoCreateInstance  +
test eax eax +
jl loc_1023E4B  +
push [ebp+rclsid]  +
call SHPinDllOfCLSID  +
push 0  +
push [ebp+Exchange]  +
push offset Destination  +
call ds:__imp_InterlockedCompareExchange  +
test eax eax +
jz loc_100935D  +
jmp loc_105D04F  +
or [ebp+Exchange] 0FFFFFFFFh +
jmp loc_1023E2E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov dword ptr [esi] 1 +
push edi  +
push [ebp+arg_4]  +
mov edi ecx +
mov eax [edi+0C48h] +
mov [esi+4] eax +
mov eax [edi+0C54h] +
mov [esi+8] eax +
mov eax [edi+3C8h] +
mov [esi+20h] eax +
mov eax [edi+380h] +
mov [esi+24h] eax +
mov eax [edi+384h] +
mov [esi+28h] eax +
mov eax [edi+40h] +
push 0FFFFFFFFh  +
mov [esi+30h] eax +
call sub_1023EF2  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
push 4  +
lea eax [edi+0C58h] +
pop edx  +
mov [esi+2Ch] ecx +
lea ecx [esi+10h] +
mov esi [eax] +
mov [ecx] esi +
add eax 4 +
add ecx 4 +
dec edx  +
jnz loc_1023EDA  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
test ebx ebx +
jnz loc_1048B75  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+1Ch]  +
mov eax [ebp+8] +
push dword ptr [ebp+18h]  +
mov eax [eax+10h] +
push dword ptr [ebp+14h]  +
mov ecx [eax] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+14h]  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push 3  +
pop ecx  +
mov edi offset dword_1024004 +
lea esi [eax+4] +
xor edx edx +
cmps   +
pop edi  +
pop esi  +
jnz loc_102405B  +
mov eax [eax] +
cmp eax ds:dword_1024000 +
jb loc_102405B  +
cmp eax ds:dword_1024010 +
ja loc_102405B  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_1024057  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1003BF1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor eax eax +
push edi  +
mov edi [ebp+arg_8] +
mov [edi] ax +
mov eax [ebp+arg_18] +
xor ebx ebx +
mov [ebp+var_8] ecx +
cmp eax ebx +
jz loc_1024108  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+arg_10] +
cmp eax ebx +
jz loc_1024114  +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+arg_8] +
push eax  +
push offset dword_100DC8C  +
push [ebp+arg_0]  +
call ds:__imp_SHCreateItemFromIDList  +
mov esi eax +
cmp esi ebx +
jl loc_10241E4  +
push [ebp+pv]  +
mov [ebp+var_4] 1 +
push edi  +
push [ebp+arg_8]  +
call ds:SHELL32_895  +
mov esi eax +
cmp esi ebx +
jl sub_10633ED  +
mov edi [ebp+arg_18] +
cmp edi ebx +
jz loc_1024181  +
cmp [edi] bx +
jnz loc_1024181  +
lea eax [ebp+pv] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
call ds:__imp_SHGetNameFromIDList  +
test eax eax +
jl loc_1024181  +
push [ebp+pv]  +
push [ebp+arg_1C]  +
push edi  +
call sub_100665F  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
cmp esi ebx +
jl loc_10241DB  +
cmp [ebp+arg_10] ebx +
jz loc_10241DB  +
cmp [ebp+var_4] ebx +
jz loc_102AB87  +
cmp [ebp+arg_4] ebx +
jnz loc_102AB6F  +
mov edi [ebp+var_8] +
mov ecx edi +
call sub_1052509  +
mov esi eax +
cmp esi ebx +
jl loc_10241DB  +
mov eax [edi+7Ch] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_10241DB  +
push [ebp+arg_0]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
call sub_100665F  +
push [ebp+arg_0]  +
mov esi eax +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
add esi 8 +
push dword ptr [esi]  +
xor edi edi +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+0Ch] +
mov [esi] edi +
cmp eax edi +
jz loc_1024221  +
cmp [eax] di +
jz loc_1024221  +
push esi  +
push eax  +
call ds:__imp_SHStrDupW  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
push edi  +
test eax eax +
jnz loc_1049E8A  +
push dword ptr [esi]  +
mov edi ds:__imp_CoTaskMemFree +
call edi  +
push dword ptr [esi+4]  +
call edi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx+4] +
push dword ptr [esi]  +
call ds:__imp_CoTaskMemFree  +
push esi  +
push [ebp+arg_0]  +
call sub_10242D2  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_102428D  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor eax eax +
mov [ecx+8] eax +
mov [ecx] eax +
mov [ecx+4] eax +
lea edi [ecx+18h] +
mov esi offset dword_100D864 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call ds:__imp_CoTaskMemFree  +
push esi  +
push [ebp+arg_0]  +
call sub_10242D2  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jz loc_10242EF  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
push eax  +
call sub_100E987  +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_10242EB  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 1Ch +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1024334  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+1Ch] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1054AC0  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+14h] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_10243AB  +
mov eax [ebp+14h] +
mov ecx [eax] +
push esi  +
push dword ptr [ebp+10h]  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
xor eax eax +
mov [ebp+SystemTime.wYear] ax +
lea edi [ebp+SystemTime.wMonth] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+SystemTime] +
push eax  +
mov esi ecx +
call ds:GetLocalTime  +
mov esi [esi+4] +
xor ecx ecx +
test esi esi +
jbe loc_10243FF  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
cmp dx [ebp+SystemTime.wYear] +
jnz loc_1059075  +
cmp ax [ebp+SystemTime.wMonth] +
jnz loc_1059075  +
cmp ecx esi +
sbb eax eax +
pop edi  +
neg eax  +
pop esi  +
leave   +
retn 8  +
***
inc ecx  +
cmp ecx esi +
jnb loc_10243FF  +
jmp loc_10243EB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
xor ebx ebx +
cmp eax ebx +
jz loc_104A00D  +
mov ecx [ebp+arg_0] +
cmp ecx ebx +
jl loc_104A00D  +
cmp ecx [eax] +
jge loc_104A00D  +
push ecx  +
push eax  +
call ds:off_1002B68  +
mov esi eax +
cmp esi ebx +
jz loc_10244A7  +
movzx eax word ptr [esi+216h] +
push eax  +
movzx eax word ptr [esi+214h] +
push eax  +
mov ecx edi +
call sub_10243B8  +
test eax eax +
jz loc_10244BB  +
mov eax [esi+44Ch] +
cmp eax [ebp+arg_8] +
jb loc_10244BB  +
jbe loc_10244B0  +
mov ebx [ebp+arg_C] +
push esi  +
mov ecx ebx +
call sub_102D9C5  +
mov esi [esi+428h] +
cmp esi 0FFFFFFFFh +
jz loc_102449B  +
push 0  +
push esi  +
push dword ptr [edi+10h]  +
call ds:off_10084F8  +
mov [ebx+8] eax +
mov eax [ebp+arg_10] +
mov dword ptr [eax] 1 +
xor ebx ebx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [esi+448h] +
cmp eax [ebp+arg_4] +
jnb loc_1024476  +
mov eax [ebp+arg_10] +
mov [eax] ebx +
jmp loc_10244A4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
lea esi [eax+42Ch] +
xor edx edx +
cmps   +
pop edi  +
pop esi  +
jz loc_102A270  +
lea ecx [eax+45Ch] +
call sub_102450A  +
test eax eax +
jz loc_102A270  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp [ecx] ax +
jnz locret_102452B  +
mov edx 200Dh +
cmp [ecx+2] dx +
jnz locret_102452B  +
movzx ecx word ptr [ecx+4] +
cmp ecx 8F21h +
jnz loc_102452C  +
xor eax eax +
inc eax  +
retn   +
cmp ecx 0B0FEh +
jz loc_1024528  +
jmp locret_102452B  +
***
or eax 0FFFFFFFFh +
jmp loc_10225AD  +
***
mov esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
lea ecx [ebx+2ACh] +
mov [ebp+arg_8] ecx +
movs   +
call sub_1022531  +
test eax eax +
jge loc_105938B  +
mov esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
add ebx 2BCh +
mov ecx ebx +
movs   +
call sub_1022531  +
jmp loc_1021CD0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
or esi 0FFFFFFFFh +
push dword ptr [ecx]  +
call ds:off_1002B68  +
test eax eax +
jz loc_10245A9  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_4] +
push eax  +
call sub_1022B91  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+210h] +
mov [esi+0B1Ch] eax +
cmp dword ptr [ecx+8] 0 +
jnz loc_10245E1  +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_10245E1  +
mov ecx esi +
call sub_1022C76  +
mov eax [edi+440h] +
mov [esi+6E8h] eax +
mov eax [edi+444h] +
mov [esi+6ECh] eax +
mov eax [edi+458h] +
mov [esi+700h] eax +
mov eax [edi+450h] +
mov [esi+6F8h] eax +
mov eax [edi+454h] +
push 2  +
mov ecx esi +
mov [esi+6FCh] eax +
call sub_1010EFE  +
test eax eax +
jnz loc_105919B  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov dword ptr [esi+32Ch] 1 +
jmp loc_1035606  +
push edi  +
call ds:DeleteDC  +
jmp loc_1035606  +
***
push 0  +
mov ecx esi +
call sub_1022B3B  +
test edi edi +
jnz loc_1024664  +
test ebx ebx +
jnz loc_10227BE  +
xor eax eax +
inc eax  +
jmp loc_10227C0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
push dword ptr [edi]  +
call ds:off_1002B68  +
mov ebx eax +
test ebx ebx +
jz loc_10246DC  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_10246B6  +
push esi  +
lea esi [ebx+428h] +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_10246B5  +
push eax  +
push ecx  +
call ds:off_1006840  +
test eax eax +
jz loc_10246B5  +
push dword ptr [esi]  +
mov ecx edi +
call sub_10246F2  +
pop esi  +
cmp [ebp+arg_4] 0 +
jz loc_10246D5  +
mov ecx [ebp+arg_4] +
push 0  +
push ebx  +
call sub_1022B91  +
cmp eax 0FFFFFFFFh +
jz loc_10246D5  +
mov ecx [ebp+arg_4] +
push eax  +
call sub_102266B  +
push ebx  +
call sub_1002BCA  +
pop ecx  +
push [ebp+arg_0]  +
push dword ptr [edi]  +
call ds:off_10065B4  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1024730  +
push ebx  +
mov ebx [eax] +
push edi  +
xor edi edi +
test ebx ebx +
jle loc_102472E  +
push edi  +
push dword ptr [esi]  +
call ds:off_1002B68  +
test eax eax +
jz loc_1024729  +
add eax 428h +
mov ecx [eax] +
cmp ecx [ebp+arg_0] +
jg loc_1059193  +
jz loc_1024735  +
inc edi  +
cmp edi ebx +
jl loc_102470A  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_1024729  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push [ebp+arg_4]  +
push dword ptr [ecx]  +
call ds:off_1002B68  +
mov esi eax +
test esi esi +
jz loc_10247AB  +
push esi  +
mov [ebp+arg_4] 1 +
call sub_10244C7  +
test eax eax +
jz loc_10591D4  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
push 1  +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
lea ebx [edi+24h] +
push ebx  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_10591E8  +
add esi 45Ch +
add edi 910h +
mov ecx 82h +
movs   +
mov [ebp+var_4] 1 +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 8  +
***
test eax eax +
jnz loc_10247A2  +
jmp loc_10247A9  +
***
lea eax [ebx+3A8h] +
push eax  +
call sub_1024025  +
jmp loc_10231C1  +
push esi  +
push edi  +
push 0  +
lea eax [ebp+var_34] +
push eax  +
mov ecx offset unk_10B1460 +
call sub_1023E74  +
push offset dword_1024860  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_10597E7  +
cmp [ebp+var_24] eax +
jnz loc_10597E7  +
push offset dword_1024870  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_1059801  +
cmp [ebp+var_20] eax +
jnz loc_1059801  +
push offset dword_1024880  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_105981B  +
cmp [ebp+var_1C] eax +
jnz loc_105981B  +
push offset dword_1024890  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_1059835  +
cmp [ebp+var_18] eax +
jnz loc_1059835  +
mov eax [ebp+arg_4] +
pop edi  +
mov dword ptr [eax+10h] 4 +
pop esi  +
jmp loc_10231C9  +
***
lea eax [esi+29Ch] +
xor ebx ebx +
jmp loc_10229A9  +
***
add esi 3A8h +
jmp loc_1022D3F  +
lea eax [esi+29Ch] +
mov [ebp+var_1C] eax +
jmp loc_1022EA4  +
***
mov ecx ebx +
call sub_1023649  +
jmp loc_1002208  +
***
mov eax [ebp+var_40] +
jmp loc_1022F22  +
xor ebx ebx +
jmp loc_1022D1D  +
and [ebp+var_2C] 0 +
jmp loc_1022DDE  +
xor edi edi +
jmp loc_1046D05  +
cmp [esi+2ECh] edi +
jz loc_1023019  +
jmp loc_1023023  +
test al al +
jz loc_1023038  +
jmp loc_102305B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp [esi] eax +
jnz loc_1024941  +
push [ebp+lpName]  +
push 1  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov [esi] eax +
test eax eax +
jz loc_102493E  +
push eax  +
call ds:SetEvent  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
pop ecx  +
jmp eax  +
***
push 4  +
call ds:off_1007FEC  +
mov [edi+0CB4h] eax +
test eax eax +
jnz loc_1035056  +
xor eax eax +
jmp loc_1035099  +
xor eax eax +
jmp loc_1035098  +
***
mov eax [eax+6DCh] +
cmp eax edi +
jnz loc_1022F60  +
jmp loc_1022F49  +
***
push 5  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
mov esi [ebx+338h] +
mov dword ptr [ebx+384h] 1 +
test esi esi +
jz loc_1023980  +
jmp loc_10237E8  +
test al al +
jz loc_1047BD3  +
jmp loc_1047BF4  +
***
push 146h  +
push offset dword_10B2298  +
call sub_1012091  +
jmp loc_10067CF  +
***
push eax  +
push esi  +
push 506h  +
push [ebp+hWndParent]  +
call ds:PostMessageW  +
mov eax [ebp+lParam] +
jmp loc_1002208  +
***
mov [ebp+plii.dwTime] eax +
jmp loc_1009252  +
***
cmp [ebx+3Ch] esi +
jz loc_1010D8C  +
push eax  +
mov ecx ebx +
call sub_1024A12  +
jmp loc_1002208  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_18] ecx +
mov ecx [ebp+arg_0] +
mov eax ecx +
shr eax 10h +
push esi  +
push edi  +
mov edx offset stru_1024AAC +
test ax ax +
jnz loc_1057330  +
test cx cx +
jz loc_1024A54  +
cmp cx 1 +
jz loc_1024A54  +
cmp cx 2 +
jnz loc_105734A  +
mov esi edx +
lea edi [ebp+rclsid] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
test cx cx +
jz loc_1057354  +
cmp cx 1 +
jz loc_1057354  +
cmp cx 2 +
jnz loc_1024A9A  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1035344  +
push 1  +
push esi  +
push edx  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_1024A9A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
jz loc_1057F77  +
dec eax  +
dec eax  +
jz loc_1057E9F  +
dec eax  +
jz loc_1057E27  +
sub eax 5 +
jnz loc_1057DBC  +
push 8  +
push dword ptr [ebx+4]  +
call ds:KillTimer  +
push 0  +
push 0  +
push 559h  +
push dword ptr [ebx+4]  +
call ds:PostMessageW  +
jmp loc_100DE53  +
***
push ecx  +
call sub_1024914  +
test eax eax +
jz locret_1024C31  +
cmp dword_10B24CC 0 +
jz loc_1024C2A  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1024C32  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 4010000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1024C29  +
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1024C28  +
cmp edx edi +
jnz loc_1024C28  +
push offset dword_1024C38  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
push 0  +
call sub_1024C6D  +
retn   +
test al al +
jnz loc_1024C2A  +
jmp loc_1024BD8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push offset off_1024ACC  +
call sub_1024C88  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 488h  +
lea eax [ebp+var_48C] +
push 0  +
push eax  +
call memset  +
mov eax [esi+0Ch] +
add esp 0Ch +
mov [ebp+var_48C] 488h +
mov [ebp+var_460] 20000h +
mov [ebp+var_44C] eax +
mov [ebp+var_420] 78h +
mov [ebp+var_41C] 280h +
test ebx ebx +
jnz loc_1024CF2  +
mov ebx [esi] +
lea eax [ebp+var_48C] +
push eax  +
push ebx  +
push 0  +
push 0  +
call ds:StopTraceW  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C84h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 104h +
push esi  +
lea eax [ebp+FileName] +
push eax  +
push 0  +
push 0  +
push offset loc_1024DEC  +
call SHGetFolderPathEx  +
test eax eax +
jnz loc_1024DD5  +
push edi  +
push 20h  +
lea eax [ebp+FileName] +
push eax  +
call ds:__imp_StrChrW  +
mov edi eax +
test edi edi +
jz loc_1024DD4  +
lea eax [ebp+FileName] +
push eax  +
push esi  +
lea eax [ebp+var_61C] +
push eax  +
call sub_100665F  +
xor eax eax +
mov [edi] ax +
lea eax [ebp+FileName] +
push eax  +
push esi  +
lea eax [ebp+String1] +
push eax  +
call sub_100665F  +
lea ecx [ebp+FileName] +
mov eax edi +
sub eax ecx +
sar eax 1 +
push offset a_  +
mov ecx esi +
sub ecx eax +
push ecx  +
push edi  +
call sub_100665F  +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1057631  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov ecx ebx +
call sub_1024E18  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+0C6Ch] ebx +
jnz loc_1024EDE  +
call ds:GetShellWindow  +
test eax eax +
jz sub_1057794  +
push edi  +
lea edi [esi+0C1Ch] +
push edi  +
xor eax eax +
push offset nullsub_1  +
inc eax  +
push eax  +
push ebx  +
push offset stru_1024EE4  +
mov [esi+0C6Ch] eax +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1024E79  +
mov edi [edi] +
mov eax [edi] +
push ebx  +
push ebx  +
push ebx  +
push 2  +
push offset dword_1024ABC  +
push edi  +
call dword ptr [eax+10h]  +
mov ecx esi +
call sub_1024D19  +
mov ecx esi +
call sub_1024BB1  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_4] +
mov [ebp+var_C] eax +
push 14h  +
lea eax [ebp+var_18] +
push eax  +
push 38h  +
mov [ebp+var_4] 12Ch +
mov [ebp+var_14] 6B756843h +
mov [ebp+var_18] 17h +
mov [ebp+var_10] 3 +
mov [ebp+var_8] 4 +
call ds:NtSetSystemInformation  +
push ebx  +
push dword ptr [esi+4]  +
push ebx  +
call WinStationRegisterConsoleNotification  +
lea ecx [esi+0DA8h] +
call sub_1034D06  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_28] eax +
lea eax [ebp+hKey] +
push eax  +
push 1  +
xor ebx ebx +
push ebx  +
push offset aSoftwarePolici  +
push 80000002h  +
mov [ebp+var_40] ebx +
mov [ebp+var_44] ebx +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_1055500  +
xor eax eax +
cmp [ebp+var_40] ebx +
setz al  +
push eax  +
call ds:SetProcessDEPPolicy  +
cmp [ebp+var_44] ebx +
jnz loc_1024F6A  +
push ebx  +
push ebx  +
push 1  +
push ebx  +
call ds:HeapSetInformation  +
mov esi offset unk_10B2378 +
push esi  +
call sub_1030A5D  +
push offset aMicrosoftShell  +
mov dword_10B10B0 (offset loc_102532F+1) +
mov off_10B1088 esi +
call sub_10310A4  +
push offset dword_10B2478  +
push offset unk_10B24A8  +
push offset loc_100E878  +
push offset aN30UDarqRAB  +
call sub_1030B61  +
lea eax [ebp+var_34] +
push eax  +
mov edi offset aExplorerstartu +
push edi  +
push offset szDir  +
mov esi 80000001h +
push esi  +
mov [ebp+var_34] ebx +
call sub_101917B  +
cmp [ebp+var_34] ebx +
jz loc_1055532  +
mov edi 80000000h +
cmp dword_10B24CC ebx +
jz loc_1025033  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10252CF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 4010000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1025033  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx edi +
cmp ecx eax +
jnz loc_1025033  +
cmp edx dword_10B24C4 +
jnz loc_1025033  +
push (offset aN30UDarqRAB+10h)  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push ebx  +
push ebx  +
push offset aSoftwareMic_11  +
push esi  +
call ds:RegDeleteKeyExW  +
push 1  +
call ds:SetErrorMode  +
push 80h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:SetPriorityClass  +
push [ebp+var_28]  +
call sub_1032F59  +
mov eax [ebp+var_28] +
push ebx  +
push eax  +
push ebx  +
mov ecx offset unk_10B23C8 +
mov hInstance eax +
call sub_10323A6  +
test eax eax +
jl loc_1055755  +
push ebx  +
push ebx  +
call sub_1020DD2  +
push offset phkResult  +
push offset szDir  +
push esi  +
call ds:RegCreateKeyW  +
mov [ebp+ppv] ebx +
call sub_10324D5  +
mov esi eax +
cmp esi 1 +
jnz loc_10250D5  +
push offset aLocalExploreri  +
push ebx  +
push ebx  +
call ds:CreateMutexW  +
mov [ebp+ppv] eax +
cmp eax ebx +
jz loc_10250C4  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
call sub_1025571  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 2 +
add esi 3 +
push esi  +
call ds:SHELL32_899  +
cmp esi 3 +
jnz loc_105554B  +
cmp dword_10B24CC ebx +
jz loc_102514A  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10252DC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 2010000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_102514A  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx esi +
cmp ecx eax +
jnz loc_102514A  +
cmp edx dword_10B24C4 +
jnz loc_102514A  +
push offset loc_1025320  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor esi esi +
inc esi  +
push esi  +
call ds:FreeIconList  +
push ebx  +
push 3  +
call ds:SetProcessShutdownParameters  +
call sub_1030A85  +
push ebx  +
push 12h  +
push 12h  +
push ebx  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
call sub_1032291  +
push ebx  +
mov [ebp+var_38] eax +
call ds:OleInitialize  +
mov [ebp+var_30] eax +
call sub_1030C77  +
push esi  +
call ds:SHELL32_660  +
call sub_102FDD5  +
call sub_102F680  +
call sub_1030085  +
call sub_10300F1  +
call sub_10302ED  +
call sub_102F625  +
call sub_102FE6F  +
call sub_102FD51  +
push ebx  +
call sub_102F926  +
call EXPLORERFRAME_110  +
lea ecx [ebp+var_50] +
call sub_102FCF9  +
call sub_1025571  +
test eax eax +
jnz loc_1055697  +
call sub_1025631  +
mov [ebp+var_28] eax +
cmp [ebp+ppv] ebx +
jz loc_10251F7  +
push [ebp+ppv]  +
call ds:ReleaseMutex  +
push [ebp+ppv]  +
call ds:CloseHandle  +
cmp [ebp+var_28] ebx +
jz loc_105571D  +
push ebx  +
push esi  +
push 590h  +
push hWnd  +
call ds:PostMessageW  +
call sub_10272EA  +
push 20h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:SetPriorityClass  +
push 80000008h  +
push offset byte_1002CD0  +
call ds:RegisterApplicationRestart  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1026660  +
push esi  +
push ebx  +
push offset stru_10266A0  +
mov [ebp+ppv] ebx +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1025262  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset loc_102555C  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword_10B24CC ebx +
jz loc_10252E9  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_105569F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov esi 4010000h +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_10252C2  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx esi +
and edx edi +
cmp ecx eax +
jnz loc_10252C2  +
cmp edx dword_10B24C4 +
jnz loc_10252C2  +
push offset dword_1025310  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push [ebp+var_28]  +
call SHELL32_201  +
jmp loc_10556AC  +
cmp al bl +
jz loc_1024FE8  +
jmp loc_1025033  +
cmp al bl +
jz loc_10250FA  +
jmp loc_102514A  +
mov esi 4010000h +
jmp loc_10252C2  +
***
pop esi  +
push 0  +
adc [ecx+eax] al +
pop esi  +
push 0  +
add [ecx] al +
add al [eax] +
add [ecx] al +
cmp byte ptr [edx] 55h +
sub [ebx] ecx +
dec esi  +
retf 0A145h  +
***
inc edx  +
retf 0C01Fh  +
***
mov edi edi +
push esi  +
mov esi ds:FindWindowW +
push 0  +
push offset ClassName  +
call esi  +
test eax eax +
jnz loc_1025595  +
push eax  +
push offset aProxyDesktop  +
call esi  +
test eax eax +
jnz loc_1025595  +
pop esi  +
retn   +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
xor ebx ebx +
call sub_102FF75  +
cmp hWnd ebx +
jnz loc_1025655  +
mov ecx offset unk_10B1460 +
call sub_1027AF5  +
test eax eax +
jz loc_102572A  +
cmp dword_10B10EC ebx +
jnz loc_102572A  +
push esi  +
push edi  +
mov edi 4010000h +
mov esi 80000000h +
cmp dword_10B24CC ebx +
jz loc_10256C6  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_102572E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10256C6  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_10256C6  +
cmp edx ebx +
jnz loc_10256C6  +
push offset dword_1025740  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push offset unk_10B209C  +
call SHELL32_200  +
cmp dword_10B24CC 0 +
mov ebx eax +
jz loc_1025728  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1025738  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1025728  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1025728  +
cmp edx edi +
jnz loc_1025728  +
push offset dword_1025750  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
test al al +
jz loc_1025682  +
jmp loc_10256C6  +
test al al +
jnz loc_1025728  +
jmp loc_10256E4  +
***
xor ecx ecx +
jmp loc_101FC7B  +
xor eax eax +
jmp loc_101FC98  +
mov [ebp+lParam] eax +
jmp loc_101FF00  +
***
lea eax [ebp+var_208] +
push eax  +
push 1Fh  +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventWrite  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
sub esp 208h +
or edx ecx +
jz locret_10257A9  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz locret_10257A9  +
push ebx  +
push esi  +
push edi  +
push 1E8h  +
xor edi edi +
lea eax [ebp+var_200] +
push edi  +
push eax  +
call memset  +
mov eax ds:dword_1012BB4 +
mov dword ptr [ebp+String] eax +
lea eax [ebp+arg_4] +
mov [ebp+var_1F8] eax +
lea eax [ebp+var_14] +
add esp 0Ch +
mov [ebp+var_1E8] eax +
lea eax [ebp+arg_C] +
push 4  +
pop ebx  +
mov [ebp+var_1D8] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_14] 0Bh +
mov [ebp+var_18] edi +
mov [ebp+var_C] edi +
mov [ebp+var_208] offset unk_10B2488 +
mov [ebp+var_204] edi +
mov [ebp+var_200] 10h +
mov [ebp+var_1FC] edi +
mov [ebp+var_1F4] edi +
mov [ebp+var_1F0] ebx +
mov [ebp+var_1EC] edi +
mov [ebp+var_1E4] edi +
mov [ebp+var_1E0] ebx +
mov [ebp+var_1DC] edi +
mov [ebp+var_1D4] edi +
mov [ebp+var_1D0] ebx +
mov [ebp+var_1CC] edi +
mov [ebp+var_8] edi +
mov [ebp+arg_8] eax +
lea esi [ebp+var_1BC] +
mov ecx [ebp+var_8] +
mov [esi-8] edi +
mov [esi-4] ebx +
mov [esi] edi +
cmp ecx [ebp+arg_C] +
jb loc_10258ED  +
lea eax [ebp+var_18] +
mov [esi-0Ch] eax +
lea eax [ebp+var_C] +
mov [esi+4] eax +
lea eax [ebp+String] +
push eax  +
mov [esi+8] edi +
mov [esi+0Ch] ebx +
mov [esi+10h] edi +
call ds:lstrlenW  +
lea ecx [ebp+String] +
inc [ebp+var_8]  +
add [ebp+arg_8] 84h +
mov [esi+20h] edi +
lea eax [eax+eax+2] +
mov [esi+1Ch] eax +
mov [esi+18h] edi +
mov [esi+14h] ecx +
add esi 30h +
cmp [ebp+var_8] 9 +
jnb loc_1025788  +
mov eax [ebp+arg_8] +
jmp loc_102588F  +
mov edx [eax] +
mov [esi-0Ch] eax +
lea ecx [eax+4] +
cmp edx 1 +
jz loc_10258FD  +
lea ecx [ebp+var_C] +
mov [esi+4] ecx +
mov [esi+8] edi +
mov [esi+0Ch] ebx +
mov [esi+10h] edi +
lea ecx [eax+4] +
cmp edx 2 +
jnz loc_1025923  +
add eax 4 +
push ecx  +
mov [ebp+var_10] eax +
call ds:lstrlenW  +
mov ecx [ebp+var_10] +
jmp loc_10258C1  +
lea ecx [ebp+String] +
mov eax ecx +
jmp loc_1025914  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1008EA1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
mov edi ecx +
xor ebx ebx +
mov [ebp+var_C] edi +
cmp [edi+0C00h] bl +
jz loc_1025AF0  +
cmp [edi+0DE9h] bl +
jz loc_1025AF0  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push offset aDontloadauthui  +
push offset szDir  +
xor esi esi +
push 80000002h  +
inc esi  +
mov [ebp+var_4] ebx +
call sub_101917B  +
test eax eax +
jge loc_1056898  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1025B38  +
push 1  +
push ebx  +
push offset stru_1025B48  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1025AF4  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_1025A04  +
xor esi esi +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jnz loc_1025AF4  +
cmp dword_10B24CC ebx +
jz loc_1025A7B  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1025B05  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 2010000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1025A7B  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1025A78  +
cmp edx edi +
jnz loc_1025A78  +
push offset dword_1025B28  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov edi [ebp+var_C] +
push offset aShelldesktopsw  +
add edi 0D40h +
push edi  +
call sub_1024914  +
test eax eax +
jz loc_1025AEF  +
cmp dword_10B24CC ebx +
jz loc_1025AEF  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1025B12  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 4010000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1025AEF  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1025AEF  +
cmp edx edi +
jnz loc_1025AEF  +
push offset dword_1025B18  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
cmp [edi+0D40h] ebx +
jz loc_10568A6  +
jmp loc_1025A15  +
cmp al bl +
jz loc_1025A2A  +
jmp loc_1025A7B  +
cmp al bl +
jnz loc_1025AEF  +
jmp loc_1025AA1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
sub esp 10h +
or edx ecx +
jz locret_1025BDF  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz locret_1025BDF  +
mov ecx [ebp+arg_4] +
xor edx edx +
cmp ecx edx +
jz loc_105D479  +
push esi  +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
cmp si dx +
jnz loc_1025BA4  +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push [ebp+arg_0]  +
mov [ebp+var_10] ecx +
push dword_10B247C  +
mov [ebp+var_C] edx +
push dword_10B2478  +
mov [ebp+var_4] edx +
call ds:EtwEventWrite  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1025C04  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+14h] +
and dword ptr [edx] 0 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
xor ebx ebx +
mov edi offset dword_10264B8 +
cmps   +
pop edi  +
pop esi  +
mov eax 80004005h +
pop ebx  +
jz loc_102692A  +
mov ecx [ebp+8] +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_1025C6C  +
push edx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push ecx  +
call ds:IUnknown_QueryService  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1F8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_0] +
mov [ebp+var_198] ecx +
mov ecx [ebp+arg_10] +
push ebx  +
mov [ebp+var_1B4] ecx +
mov ecx [ebp+arg_18] +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+var_1A8] ecx +
mov ecx [ebp+arg_1C] +
push edi  +
mov [ebp+var_1B0] ecx +
lea ecx [ebp+var_1B8] +
push ecx  +
push 70C58008h  +
lea ecx [ebp+var_1A4] +
push ecx  +
xor ebx ebx +
push ebx  +
push eax  +
mov [ebp+pszPath] eax +
call ds:__imp_SHParseDisplayName  +
mov edi eax +
cmp edi ebx +
jl loc_1025F00  +
lea eax [ebp+var_194] +
push eax  +
push offset dword_1011ED0  +
push ebx  +
push [ebp+var_1A4]  +
call sub_102841E  +
mov edi eax +
cmp edi ebx +
jl loc_1025EF4  +
call ds:CreatePopupMenu  +
mov [ebp+hMenu] eax +
cmp eax ebx +
jz loc_1025EE8  +
push 3Ch  +
lea eax [ebp+var_1F4] +
push ebx  +
push eax  +
mov [ebp+hMem] ebx +
call memset  +
mov eax [ebp+arg_C] +
mov [ebp+var_1E0] eax +
mov eax [ebp+var_198] +
mov [ebp+var_1C8] eax +
mov eax [ebp+var_1B4] +
mov [ebp+var_1F0] eax +
add esp 0Ch +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+var_1F8] +
push eax  +
mov [ebp+var_1F8] 40h +
mov [ebp+var_1F4] 4500h +
mov [ebp+var_1CC] esi +
call sub_10286FB  +
mov edi eax +
cmp edi ebx +
jl loc_1025EDC  +
push 18h  +
call sub_1002B98  +
pop ecx  +
cmp eax ebx +
jz loc_1025F13  +
push [ebp+var_1B0]  +
mov ecx eax +
call sub_1028523  +
mov [ebp+var_198] eax +
mov esi [ebp+var_198] +
push [ebp+var_1A8]  +
cmp esi ebx +
jz loc_1025DC7  +
lea eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push esi  +
push [ebp+var_194]  +
call ds:__imp_IUnknown_SetSite  +
mov eax [ebp+var_194] +
mov ecx [eax] +
xor esi esi +
inc esi  +
push esi  +
push 7FFFh  +
push esi  +
push ebx  +
push [ebp+hMenu]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_1025EA1  +
push ebx  +
push ebx  +
push [ebp+hMenu]  +
call ds:GetMenuDefaultItem  +
cmp eax ebx +
jz loc_1025F1E  +
dec eax  +
movzx eax ax +
mov [ebp+var_1EC] eax +
mov eax [ebp+var_194] +
mov ecx [eax] +
lea edx [ebp+var_1F8] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
push 188h  +
mov edi eax +
lea eax [ebp+var_18C] +
push ebx  +
push eax  +
mov [ebp+var_190] ebx +
call memset  +
add esp 0Ch +
push [ebp+pszPath]  +
call ds:__imp_PathFindFileNameW  +
push eax  +
lea eax [ebp+var_190] +
push eax  +
call sub_1012258  +
xor eax eax +
cmp edi 800702E4h +
setz al  +
push 3  +
mov [ebp+var_10C] esi +
mov [ebp+var_88] esi +
mov [ebp+var_108] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_84] eax +
lea eax [ebp+var_190] +
push eax  +
push 74Dh  +
push offset dword_1026640  +
call sub_10257B2  +
push ebx  +
push [ebp+var_194]  +
call ds:__imp_IUnknown_SetSite  +
mov esi [ebp+var_198] +
cmp esi ebx +
jz loc_1025EC8  +
lea eax [esi+8] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
cmp [ebp+hMem] ebx +
jz loc_1025EDC  +
push [ebp+hMem]  +
call ds:LocalFree  +
push [ebp+hMenu]  +
call ds:DestroyMenu  +
mov eax [ebp+var_194] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_1A4]  +
call ds:__imp_SHELL32_155  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 20h  +
mov [ebp+var_198] ebx +
jmp loc_1025DAD  +
mov edi 8000FFFFh +
jmp loc_1025EA1  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1025F49  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1025F68  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1025FB1  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 14h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1025FD8  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+14h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1026E19  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_0] +
and dword ptr [ecx] 0 +
cmp dword ptr [eax+4] 0 +
jnz loc_1026020  +
mov eax 80004005h +
pop ebp  +
retn 0Ch  +
mov eax [eax+4] +
mov edx [eax] +
push ecx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [edx]  +
jmp loc_102601C  +
***
sub dword ptr [esp+4] 8 +
jmp loc_102603F  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+10h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_102693B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 43h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_10260E0  +
lea eax [ebp-4] +
push eax  +
call sub_102893A  +
call sub_1028476  +
test eax eax +
jnz loc_10260B6  +
mov eax [ebp-4] +
mov ecx eax +
add eax 8 +
neg ecx  +
sbb ecx ecx +
and ecx eax +
push ecx  +
call sub_1028F5D  +
mov eax [ebp-4] +
mov ecx eax +
add eax 8 +
neg ecx  +
sbb ecx ecx +
and ecx eax +
push ecx  +
call sub_1026106  +
call sub_1026F99  +
test eax eax +
jnz loc_10260D3  +
mov eax [ebp-4] +
mov ecx eax +
add eax 8 +
neg ecx  +
sbb ecx ecx +
and ecx eax +
push ecx  +
call sub_1027174  +
mov eax [ebp-4] +
test eax eax +
jz loc_10260E0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call sub_1026873  +
push 0  +
push 0  +
push 578h  +
push hWnd  +
call ds:PostMessageW  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push 4  +
push offset dword_1026120  +
call sub_1026165  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
test edi edi +
jle loc_10261A9  +
push esi  +
mov esi [ebp+arg_0] +
add esi 4 +
push dword ptr [esi-4]  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_10261A2  +
mov eax [esi] +
push eax  +
push offset loc_10264CD  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push eax  +
call sub_10261B6  +
mov ebx eax +
add esi 10h +
dec edi  +
jnz loc_102617C  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4E4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
mov ecx [ebp+hKey] +
mov [ebp+var_4DC] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_4E4] eax +
mov eax [ebp+arg_8] +
xor edx edx +
inc edx  +
and eax edx +
push esi  +
mov esi [ebp+lpSubKey] +
mov [ebp+var_4D0] eax +
neg eax  +
push edi  +
sbb eax eax +
mov [ebp+var_4C4] edx +
lea edx [ebp+phkResult] +
push edx  +
and eax 10006h +
add eax 20019h +
push eax  +
xor edi edi +
push edi  +
push esi  +
push ecx  +
mov [ebp+var_4BC] ecx +
mov [ebp+var_4C8] esi +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10287BB  +
push ebx  +
push esi  +
push offset dword_1025930  +
mov [ebp+var_4B8] edi +
call sub_1025B68  +
xor ebx ebx +
mov esi 104h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push ebx  +
push [ebp+phkResult]  +
mov [ebp+cbValueName] 50h +
mov [ebp+cbData] 208h +
call ds:RegEnumValueW  +
cmp eax 0EAh +
jz loc_1028895  +
cmp eax edi +
jz loc_10287DB  +
cmp eax 103h +
jnz loc_105D722  +
mov esi [ebp+var_4B8] +
cmp esi edi +
jnz loc_10262E7  +
push [ebp+var_4C8]  +
push offset dword_1025940  +
call sub_1025B68  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_4C4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 18h  +
xor eax eax +
push 1FEh  +
mov word ptr [ebp+var_2A4] ax +
lea eax [ebp+var_2A4+2] +
push edi  +
push eax  +
call memset  +
mov ebx 80000002h +
add esp 0Ch +
cmp [ebp+var_4BC] ebx +
jz loc_105D72D  +
mov ecx [esi] +
xor eax eax +
cmp ecx edi +
mov [ebp+var_4E0] ecx +
mov [ebp+var_4BC] eax +
jle loc_102639B  +
mov ecx [ebp+var_4B8] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
cmp [ebp+var_4D0] edi +
jnz loc_105D76E  +
cmp word ptr [ebp+var_2A4] di +
jnz loc_105D79F  +
push [ebp+arg_14]  +
lea eax [esi+410h] +
push [ebp+var_4DC]  +
lea edi [esi+208h] +
push [ebp+arg_8]  +
push eax  +
push edi  +
push esi  +
call [ebp+var_4E4]  +
cmp [ebp+var_4D0] 0 +
jnz loc_105D805  +
push esi  +
call ds:LocalFree  +
xor edi edi +
mov eax [ebp+var_4BC] +
inc eax  +
cmp eax [ebp+var_4E0] +
mov [ebp+var_4BC] eax +
jl loc_102632A  +
push [ebp+var_4B8]  +
call ds:off_1008340  +
jmp loc_10262B4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+8] +
push eax  +
mov eax [ebp+8] +
push offset dword_1026440  +
push offset dword_1026450  +
push dword ptr [eax-8]  +
call ds:IUnknown_QueryService  +
mov esi [ebp+0Ch] +
test eax eax +
jge loc_1054892  +
mov eax [esi] +
push 4  +
push esi  +
call dword ptr [eax+14h]  +
push 4000006Ah  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_1026429  +
mov eax [esi] +
lea ecx [ebp+0Ch] +
push ecx  +
push offset dword_1026430  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_1026429  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+14h] +
and dword ptr [edx] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_10264B8 +
xor eax eax +
cmps   +
jz loc_10266CE  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1026450 +
xor eax eax +
cmps   +
jz loc_10266CE  +
mov eax [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax-4]  +
call ds:IUnknown_QueryService  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1026500  +
mov esi eax +
test esi esi +
jl loc_105D465  +
mov eax esi +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+pv] +
push esi  +
push edi  +
push offset aSoftwareMicr_4  +
push [ebp+arg_0]  +
mov [ebp+pv] eax +
xor esi esi +
call ds:__imp_StrCmpICW  +
test eax eax +
jz loc_105D69F  +
push [ebp+arg_10]  +
push [ebp+pv]  +
push [ebp+Handles]  +
call sub_102654A  +
mov edi eax +
test esi esi +
jnz loc_105D6B2  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+Handles] +
test esi esi +
jz loc_1026589  +
cmp word ptr [esi] 0 +
jz loc_1026589  +
push ebx  +
mov ebx [ebp+arg_4] +
test bl 20h +
jnz loc_105D68E  +
push [ebp+arg_8]  +
mov eax ebx +
and eax 2 +
push eax  +
and ebx 8 +
push ebx  +
push esi  +
call sub_1026595  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
test eax eax +
jl loc_102656A  +
jmp loc_102657D  +
mov eax 80004005h +
jmp loc_102657E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+Handles] +
lea eax [ebp+var_8] +
push eax  +
xor esi esi +
push esi  +
lea eax [ebp+pv] +
push eax  +
push edi  +
call ds:SHEvaluateSystemCommandTemplate  +
mov ebx eax +
cmp ebx esi +
jl loc_1026626  +
push edi  +
push offset dword_1027CB8  +
call sub_1025B68  +
lea eax [ebp+Handles] +
push eax  +
push [ebp+arg_C]  +
push esi  +
push esi  +
push 1  +
push esi  +
push [ebp+var_8]  +
push [ebp+pv]  +
call sub_1025C75  +
mov ebx eax +
cmp ebx esi +
jl loc_105D67D  +
cmp [ebp+Handles] esi +
jz loc_105D67D  +
cmp [ebp+arg_8] esi +
jnz loc_105D66D  +
push edi  +
push [ebp+Handles]  +
call ds:GetProcessId  +
push eax  +
push offset dword_1026630  +
call sub_1026899  +
push [ebp+Handles]  +
call ds:CloseHandle  +
push [ebp+pv]  +
mov esi ds:__imp_CoTaskMemFree +
call esi  +
push [ebp+var_8]  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1025FB1  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1025FB1  +
***
mov eax [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFF8h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
jmp loc_10264AF  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1025FD8  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1025FD8  +
***
push esi  +
push esi  +
mov dword ptr [ebx+0D64h] 1 +
push 40Ah  +
jmp loc_1012059  +
mov ecx ebx +
mov byte ptr [ebx+0C00h] 1 +
call sub_1025984  +
jmp loc_1010D8C  +
test eax eax +
jnz loc_100213D  +
jmp loc_1002264  +
mov ecx ebx +
call sub_1072559  +
jmp loc_1002208  +
cmp ecx 20h +
jz loc_1009F19  +
jmp loc_1002264  +
cmp ecx 1Bh +
jz loc_1009FD6  +
jmp loc_10021F8  +
test eax eax +
jnz loc_1010D8C  +
jmp loc_10021F8  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_1072E05  +
jmp loc_1002264  +
mov ecx [ebp+hdc] +
call sub_1034C6B  +
jmp loc_1002264  +
***
push eax  +
push 7530h  +
push 0Bh  +
push dword ptr [edi+10h]  +
call ds:SetTimer  +
jmp loc_102321D  +
xor eax eax +
jmp loc_1023215  +
xor eax eax +
jmp loc_1023229  +
***
mov [esi+324h] eax +
cmp eax edi +
jz loc_1059DD5  +
xor eax eax +
mov [esi+398h] eax +
mov eax [esi+324h] +
neg eax  +
sbb eax eax +
and eax 5 +
push eax  +
push dword ptr [esi+14h]  +
call ds:ShowWindow  +
cmp [esi+324h] edi +
jz loc_1059DEC  +
mov [ebp+var_4] 1 +
jmp loc_10217EC  +
***
mov [ebx+370h] ecx +
jmp loc_100DAC9  +
***
mov ecx ebx +
call sub_1076249  +
jmp loc_1002328  +
***
push offset aImagelist_geti  +
push offset dword_10B234C  +
call sub_1012091  +
jmp loc_10110FB  +
***
push 189h  +
push offset dword_10B232C  +
call sub_1012091  +
jmp loc_100A86F  +
***
push 150h  +
push offset dword_10B22AC  +
call sub_1012091  +
jmp loc_10065CF  +
***
push offset dword_1026884  +
call sub_1026165  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
sub esp 20h +
or edx ecx +
jz locret_1026926  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
test al al +
jz locret_1026926  +
mov ecx [ebp+arg_8] +
and [ebp+var_1C] 0 +
and [ebp+var_14] 0 +
lea eax [ebp+arg_4] +
mov [ebp+var_20] eax +
mov [ebp+var_18] 4 +
test ecx ecx +
jz loc_1026904  +
mov eax ecx +
push esi  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10268E3  +
and [ebp+var_C] 0 +
sub eax esi +
sar eax 1 +
and [ebp+var_4] 0 +
lea eax [eax+eax+2] +
mov [ebp+var_10] ecx +
mov [ebp+var_8] eax +
pop esi  +
lea eax [ebp+var_20] +
push eax  +
xor eax eax +
test ecx ecx +
setnz al  +
inc eax  +
push eax  +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EtwEventWrite  +
leave   +
retn 0Ch  +
***
mov eax [ebp+8] +
mov ecx [eax] +
push edx  +
push dword ptr [ebp+10h]  +
push eax  +
call dword ptr [ecx]  +
jmp loc_1025C6C  +
***
test esi esi +
jz loc_102605D  +
lea ecx [esi+8] +
mov eax [ecx] +
push 1  +
call dword ptr [eax+14h]  +
jmp loc_102605D  +
***
sub dword ptr [esp+4] 4 +
jmp loc_102603F  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1008EA1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [ebp+8] +
push eax  +
push offset dword_1025F90  +
push offset dword_10264B8  +
push dword ptr [esi+8]  +
call ds:IUnknown_QueryService  +
mov edi [ebp+0Ch] +
test eax eax +
jl loc_10269B0  +
mov eax [ebp+8] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+10h] +
test eax eax +
jz loc_10269C4  +
mov ecx [edi] +
push eax  +
push edi  +
call dword ptr [ecx+0Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
xor eax eax +
jmp loc_10269BE  +
***
cmp edi ebx +
jz loc_104DE3C  +
push offset aDesktop  +
push edi  +
call ds:__imp_StrCmpICW  +
test eax eax +
jmp loc_100DC7E  +
***
dec eax  +
jnz sub_10024B0  +
mov ecx esi +
call sub_101E072  +
jmp loc_10024DE  +
***
sub ecx 8 +
jmp loc_1026A05  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1026A2B  +
test [ebp+arg_4] 1 +
jz loc_1026A1F  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1008E8C +
mov dword ptr [ecx+4] offset off_1025960 +
mov dword ptr [ecx+8] offset off_1015A68 +
mov dword ptr [ecx+8] offset off_1015AE0 +
add ecx 0Ch +
push ecx  +
call sub_1002BEE  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3F4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
lea ecx [ebp-3B0h] +
push ecx  +
xor ebx ebx +
push ebx  +
push offset stru_1026650  +
mov [ebp-3ACh] eax +
mov eax [ebp+10h] +
lea ecx [ebp-3ACh] +
push ecx  +
mov [ebp-3B4h] eax +
push 1  +
xor eax eax +
push ebx  +
mov [ebp-20Ch] ax +
mov eax [esi] +
push esi  +
mov [ebp-39Ch] esi +
mov [ebp-3A4h] ebx +
call dword ptr [eax+28h]  +
test eax eax +
jl loc_1054E49  +
mov eax [ebp-3B0h] +
mov ecx [eax] +
lea edx [ebp-3A4h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp-3B0h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_1026B0C  +
push ebx  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push 8000h  +
push dword ptr [ebp-3A4h]  +
call sub_10270A3  +
push dword ptr [ebp-3A4h]  +
call ds:__imp_SHELL32_155  +
mov edi 4010000h +
mov esi 80000000h +
cmp dword_10B24CC ebx +
jz loc_1026B78  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1026D82  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1026B78  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_1026B78  +
cmp edx dword_10B24C4 +
jnz loc_1026B78  +
lea eax [ebp-20Ch] +
push eax  +
push offset dword_1026D98  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1026DBD  +
mov eax [ebp-39Ch] +
mov ecx [eax] +
lea edx [ebp-3A0h] +
push edx  +
push ebx  +
push offset dword_1011ED0  +
lea edx [ebp-3ACh] +
push edx  +
push 1  +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_1026D12  +
call ds:CreatePopupMenu  +
mov [ebp-3A8h] eax +
cmp eax ebx +
jz loc_1026D06  +
mov eax [ebp-3A0h] +
mov ecx [eax] +
push 1  +
push 7FFFh  +
push 1  +
push ebx  +
push dword ptr [ebp-3A8h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
push ebx  +
push ebx  +
push dword ptr [ebp-3A8h]  +
call ds:GetMenuDefaultItem  +
mov [ebp-39Ch] eax +
cmp eax ebx +
jz loc_1026CFA  +
push 3Ch  +
lea eax [ebp-3F0h] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp-39Ch] +
add esp 0Ch +
push dword ptr [ebp-3B4h]  +
dec eax  +
push dword ptr [ebp-3A0h]  +
movzx eax ax +
mov dword ptr [ebp-3F4h] 40h +
mov dword ptr [ebp-3F0h] 400h +
mov [ebp-3E8h] eax +
mov dword ptr [ebp-3DCh] 1 +
call ds:__imp_IUnknown_SetSite  +
mov eax [ebp-3A0h] +
mov ecx [eax] +
lea edx [ebp-3F4h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov [ebp-39Ch] eax +
cmp [ebp-20Ch] bx +
jz loc_1026CE1  +
push 188h  +
lea eax [ebp-394h] +
push ebx  +
push eax  +
mov [ebp-398h] ebx +
call memset  +
add esp 0Ch +
lea eax [ebp-20Ch] +
push eax  +
call sub_102704C  +
cmp eax ebx +
jz loc_1054E63  +
push eax  +
lea eax [ebp-398h] +
push eax  +
call sub_1012258  +
xor eax eax +
cmp dword ptr [ebp-39Ch] 800702E4h +
push 3  +
setz al  +
mov [ebp-28Ch] ebx +
mov [ebp-310h] eax +
xor eax eax +
inc eax  +
mov [ebp-314h] eax +
mov [ebp-290h] eax +
lea eax [ebp-398h] +
push eax  +
push 74Dh  +
push offset dword_1026640  +
call sub_1006870  +
cmp [ebp-39Ch] ebx +
jl loc_1054E6D  +
push ebx  +
push dword ptr [ebp-3A0h]  +
call ds:__imp_IUnknown_SetSite  +
push dword ptr [ebp-3A8h]  +
call ds:DestroyMenu  +
mov eax [ebp-3A0h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword_10B24CC ebx +
jz loc_1026D6E  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1026D8F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1026D6E  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1026D6E  +
cmp edx edi +
jnz loc_1026D6E  +
lea eax [ebp-20Ch] +
push eax  +
push offset dword_1026DA8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1026DBD  +
mov ecx [ebp-4] +
pop edi  +
xor eax eax +
pop esi  +
xor ecx ebp +
inc eax  +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 14h  +
***
cmp al bl +
jz loc_1026B2B  +
jmp loc_1026B78  +
***
cmp al bl +
jnz loc_1026D6E  +
jmp loc_1026D23  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_C] +
sub esp 10h +
test ecx ecx +
jz loc_1026E14  +
mov eax ecx +
push esi  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1026DD2  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
test ecx ecx +
jz loc_1054CE3  +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push [ebp+arg_8]  +
mov [ebp+var_10] ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EventWrite  +
leave   +
retn 10h  +
push 0Ah  +
pop eax  +
jmp loc_1026DE5  +
***
mov ecx esi +
call sub_1026E2A  +
jmp loc_1025FF6  +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov esi ecx +
push esi  +
push offset StartAddress  +
push edi  +
push edi  +
call ds:CreateThread  +
cmp eax edi +
jz loc_1054A9C  +
push eax  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
call sub_1026E71  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
test eax eax +
ja loc_10548F8  +
mov eax [esi+18h] +
test eax eax +
jnz loc_105490A  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+14h]  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1026ECC  +
test [ebp+arg_0] 1 +
jz loc_1026EC0  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx+8] offset off_1025F28 +
mov dword ptr [ecx+0Ch] offset off_10263AC +
mov dword ptr [ecx+10h] offset off_1025950 +
mov dword ptr [ecx] offset off_1015AE0 +
add ecx 4 +
push ecx  +
call sub_1002BEE  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+8] +
lea eax [ebp+8] +
push eax  +
push offset dword_1025F90  +
push offset dword_10264B8  +
push dword ptr [edi-0Ch]  +
call ds:IUnknown_QueryService  +
mov esi [ebp+0Ch] +
test eax eax +
jge loc_1054AA8  +
mov eax [esi] +
lea ecx [ebp-4] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_1026F5D  +
mov eax [esi] +
lea ecx [ebp+0Ch] +
push ecx  +
push esi  +
call dword ptr [eax+14h]  +
mov esi ds:CloseHandle +
test eax eax +
jl loc_1026F58  +
push dword ptr [ebp+0Ch]  +
lea ecx [edi-10h] +
push dword ptr [ebp-4]  +
call sub_1026F6A  +
push dword ptr [ebp+0Ch]  +
call esi  +
push dword ptr [ebp-4]  +
call esi  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
xor eax eax +
push edi  +
cmp [esi+18h] eax +
jnz loc_1054A2B  +
xor edi edi +
inc edi  +
push [ebp+hThread]  +
call ds:ResumeThread  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
call sub_1026FD5  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+hKey] +
inc ebx  +
cmp dword ptr [edi] 0 +
jnz loc_102703A  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
mov esi 20006h +
push esi  +
mov [edi] ebx +
call ds:SHELL32_723  +
test eax eax +
jl loc_1027039  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
xor eax eax +
push eax  +
push esi  +
push ebx  +
push eax  +
push eax  +
push [ebp+phkResult]  +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
mov esi ds:RegCloseKey +
test eax eax +
jnz loc_1027034  +
push [ebp+phkResult]  +
call esi  +
cmp [ebp+dwDisposition] ebx +
jnz loc_1027034  +
mov dword ptr [edi] 2 +
push [ebp+hKey]  +
call esi  +
pop esi  +
xor eax eax +
cmp [edi] ebx +
pop edi  +
setz al  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
push [ebp+pszPath]  +
xor ebx ebx +
call PathFindFileNameW  +
mov edi eax +
test edi edi +
jz loc_102708C  +
push esi  +
push edi  +
call PathFindExtensionW  +
mov esi eax +
test esi esi +
jz loc_102708B  +
cmp word ptr [esi] 2Eh +
jnz loc_102708B  +
push offset a_exe  +
push esi  +
call StrCmpICW  +
test eax eax +
jnz loc_105CF83  +
mov ebx edi +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
test esi esi +
jz loc_10270B8  +
xor eax eax +
mov [esi] ax +
call sub_10191D1  +
mov ebx eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
push offset dword_100671C  +
push [ebp+arg_0]  +
call SHBindToParent  +
mov edi eax +
test edi edi +
jl loc_102710A  +
test esi esi +
jz loc_10270F2  +
push [ebp+arg_C]  +
push esi  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
call sub_102711E  +
mov edi eax +
test edi edi +
jl loc_1027101  +
mov esi [ebp+arg_10] +
test esi esi +
jnz loc_105CFF9  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push ebx  +
call sub_1019203  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 108h +
push esi  +
mov esi [ebp+arg_C] +
lea edx [ebp+var_108] +
push edx  +
push [ebp+arg_8]  +
xor eax eax +
push [ebp+arg_4]  +
mov [esi] ax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_102715F  +
push [ebp+arg_10]  +
lea eax [ebp+var_108] +
push esi  +
push [ebp+arg_4]  +
push eax  +
call StrRetToBufW  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 0  +
lea esi dword_10271C0[ebx] +
push dword ptr [esi]  +
push 0  +
call ds:SHELL32_89  +
mov edi eax +
test edi edi +
jz loc_10271AF  +
push dword ptr [esi]  +
push offset loc_1026A55  +
push [ebp+arg_0]  +
push 60h  +
push edi  +
call sub_10271CD  +
push edi  +
call ds:__imp_SHELL32_155  +
add ebx 4 +
cmp ebx 8 +
jb loc_102717E  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea eax [ebp+var_4] +
push eax  +
push offset dword_100671C  +
push 0  +
push [ebp+pv]  +
push 0  +
call ds:__imp_SHBindToObject  +
test eax eax +
jl locret_1027274  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push [ebp+arg_4]  +
push 0  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_102726B  +
mov eax [ebp+arg_4] +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push 1  +
mov [ebp+var_8] 1 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_1027262  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push [ebp+pv]  +
push [ebp+var_4]  +
call [ebp+arg_C]  +
push [ebp+pv]  +
mov esi eax +
call ds:__imp_CoTaskMemFree  +
test esi esi +
jz loc_1027261  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1027228  +
pop esi  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 14h  +
***
mov edi edi +
push esi  +
push offset loc_10272AF  +
push 202Ah  +
mov esi ecx +
push esi  +
push offset loc_100E3E1  +
call ds:__imp_SHCreateThread  +
mov eax [esi+4] +
mov dword_10B10E8 eax +
xor eax eax +
cmp [esi+4] eax +
pop esi  +
setnz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push esi  +
call ds:InterlockedIncrement  +
push esi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push offset loc_100E1A3  +
call SHCreateWorkerWindowW  +
mov [esi+4] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
push 0Ch  +
xor edi edi +
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_1027320  +
mov dword ptr [eax] 1 +
mov [eax+8] edi +
mov esi eax +
cmp esi edi +
jz loc_102731B  +
mov ecx esi +
call sub_102727D  +
mov ecx esi +
mov edi eax +
call sub_1027329  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
xor esi esi +
jmp loc_1027307  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
push esi  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1055860  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push 4  +
mov ecx esi +
call sub_1027361  +
cmp dword ptr [esi] 0 +
jnz loc_1023209  +
jmp loc_1023239  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push 4  +
call ds:off_1003E00  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi] eax +
pop esi  +
mov eax ecx +
pop ebp  +
retn 4  +
***
push 0Ah  +
mov ecx esi +
call sub_10273CA  +
cmp [esi] ebx +
jnz loc_10077BE  +
jmp loc_1007920  +
xor eax eax +
jmp loc_10077EB  +
xor eax eax +
jmp loc_100848C  +
***
inc dword ptr [edi+208h]  +
jmp loc_1007821  +
mov eax [ebp+var_224] +
jmp loc_1007899  +
***
xor eax eax +
jmp loc_10078B4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push 20Ch  +
call ds:off_1003E00  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi] eax +
pop esi  +
mov eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_10B24CC 0 +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov ebx 4010000h +
mov edi 80000000h +
jz loc_1027475  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10279DD  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_1027475  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1027475  +
cmp edx dword_10B24C4 +
jnz loc_1027475  +
push offset dword_1027A40  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
lea eax [esi+0CBCh] +
push eax  +
call ds:InitializeCriticalSection  +
call sub_102FC7B  +
call sub_1029C66  +
mov [esi+0DF0h] eax +
lea eax [esi+0DFCh] +
push eax  +
lea eax [esi+10h] +
push eax  +
call ds:CoRegisterMessageFilter  +
mov ecx esi +
call sub_102A025  +
call sub_102D1AF  +
cmp dword_10B24CC 0 +
jz loc_102750B  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10279EA  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_102750B  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx ebx +
and edx edi +
cmp ecx eax +
jnz loc_102750B  +
cmp edx dword_10B24C4 +
jnz loc_102750B  +
push offset dword_1027A60  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ecx esi +
call sub_102D3ED  +
cmp dword_10B24CC 0 +
jz loc_102756F  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10279F7  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_102756F  +
mov edx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax edx +
and eax ebx +
and ecx edi +
cmp eax edx +
jnz loc_102756F  +
cmp ecx dword_10B24C4 +
jnz loc_102756F  +
push offset dword_1027A70  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor eax eax +
cmp [esi+4] eax +
jz loc_10276F0  +
cmp [esi+3Ch] eax +
jz loc_10276F0  +
push eax  +
mov ecx esi +
call sub_10342AE  +
mov ecx esi +
call sub_102A0FC  +
mov ecx esi +
call sub_1027BB1  +
push 1  +
mov ecx esi +
call sub_1015CA1  +
mov ecx esi +
call sub_1028237  +
cmp dword_10B24CC 0 +
jz loc_1027605  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1027A04  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_1027605  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1027605  +
cmp edx dword_10B24C4 +
jnz loc_1027605  +
push offset dword_1027A80  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ecx esi +
call sub_1028E39  +
cmp dword_10B24CC 0 +
jz loc_1027668  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1027A11  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_1027668  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1027668  +
cmp edx dword_10B24C4 +
jnz loc_1027668  +
push offset dword_1027A90  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push dword ptr [esi+3Ch]  +
call sub_1028655  +
mov eax [esi+40h] +
and al 2 +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 3 +
add eax 5 +
push eax  +
push dword ptr [esi+4]  +
call ds:ShowWindow  +
push dword ptr [esi+4]  +
call ds:UpdateWindow  +
push 5  +
push dword ptr [esi+0B10h]  +
call ds:ShowWindow  +
lea ecx [esi+0AF8h] +
call sub_1028270  +
lea ecx [esi+0AF8h] +
call sub_1015ECE  +
push 1  +
push dword ptr [esi+4]  +
call sub_1017D35  +
push 1  +
push dword ptr [esi+0B10h]  +
call sub_1017D35  +
mov ecx esi +
mov byte ptr [esi+0DE9h] 1 +
call sub_1025984  +
push 0  +
push 1388h  +
push 8  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
cmp dword_10B24CC 0 +
jz loc_102774B  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1027A1E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_102774B  +
mov edx dword_10B24C0 +
mov eax edx +
and eax ebx +
mov ebx dword_10B24C4 +
mov ecx ebx +
and ecx edi +
cmp eax edx +
jnz loc_102774B  +
cmp ecx ebx +
jnz loc_102774B  +
push offset dword_1027A50  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov edi offset nullsub_4 +
push edi  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
xor ebx ebx +
test al al +
jz loc_102789C  +
cmp [esi+380h] ebx +
jnz loc_1027A2B  +
cmp [esi+384h] ebx +
jz loc_1027A2B  +
xor eax eax +
inc eax  +
mov ecx [esi+0C64h] +
mov edx [esi+0C60h] +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFFE0h +
add ecx 20h +
neg edx  +
sbb edx edx +
and edx 0FFFFFFF0h +
add edx 10h +
or ecx edx +
mov edx [esi+0C5Ch] +
neg edx  +
sbb edx edx +
and edx 0FFFFFFF8h +
add edx 8 +
or ecx edx +
mov edx [esi+0C58h] +
neg edx  +
sbb edx edx +
and edx 0FFFFFFFCh +
add edx 4 +
or ecx edx +
mov edx [esi+0C54h] +
neg edx  +
sbb edx edx +
and edx 0FFFFFFFEh +
inc edx  +
inc edx  +
or ecx edx +
or ecx eax +
push ecx  +
push 22Ah  +
push edi  +
call sub_101588E  +
cmp [esi+0D28h] ebx +
jnz loc_1058610  +
xor eax eax +
inc eax  +
mov ecx [esi+40h] +
and ecx 1 +
or ecx 2 +
add ecx ecx +
or ecx eax +
push ecx  +
push 229h  +
push offset dword_1027AC0  +
call sub_101588E  +
mov eax [esi+0CD8h] +
sub eax ebx +
jz loc_1058628  +
dec eax  +
jz loc_1058624  +
dec eax  +
jz loc_1058620  +
dec eax  +
jnz loc_1027887  +
inc eax  +
push eax  +
push 1BFh  +
push offset dword_1027AD0  +
call sub_101588E  +
mov ecx [esi+0CD8h] +
mov eax ecx +
add ecx 5 +
shl ecx 4 +
mov cx [ecx+esi] +
shl eax 4 +
add eax esi +
sub cx [eax+48h] +
mov dx [eax+4Ch] +
sub dx [eax+44h] +
movzx ecx cx +
movzx eax dx +
shl ecx 10h +
or ecx eax +
push ecx  +
push 1C1h  +
push offset dword_1027AE0  +
call sub_101588E  +
call sub_1028C75  +
push eax  +
push 0D26h  +
push offset dword_1027AB0  +
call sub_101588E  +
cmp [esi+3Ch] ebx +
jz loc_10279CC  +
push offset dword_1028C60  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz loc_10279CC  +
mov eax [esi+3Ch] +
mov ecx [eax] +
lea edx [ebp+var_218] +
push edx  +
push ebx  +
push eax  +
mov [ebp+var_214] ebx +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_10279CC  +
mov edi 104h +
mov eax [esi+3Ch] +
mov ecx [eax] +
push edi  +
lea edx [ebp+String] +
push edx  +
push ebx  +
lea edx [ebp+var_210] +
push edx  +
push [ebp+var_218]  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_10279A8  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_21C] +
push edx  +
push offset dword_101DA78  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1027939  +
mov eax [ebp+var_21C] +
mov ecx [eax] +
xor ebx ebx +
push eax  +
inc ebx  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_224] +
push edx  +
push offset sub_1027B3C  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jge loc_1058630  +
cmp [ebp+String] 0 +
jnz loc_102798D  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+hWnd] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_102798D  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowTextW  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_1028BDD  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor ebx ebx +
inc [ebp+var_214]  +
mov eax [esi+3Ch] +
mov ecx [eax] +
lea edx [ebp+var_218] +
push edx  +
push [ebp+var_214]  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jge loc_10278E8  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
test al al +
jz loc_102742F  +
jmp loc_1027475  +
test al al +
jz loc_10274C5  +
jmp loc_102750B  +
test al al +
jz loc_1027528  +
jmp loc_102756F  +
test al al +
jz loc_10275BF  +
jmp loc_1027605  +
test al al +
jz loc_1027622  +
jmp loc_1027668  +
test al al +
jz loc_1027706  +
jmp loc_102774B  +
xor eax eax +
jmp loc_1027788  +
***
test eax eax +
jz loc_10277FC  +
jmp loc_10277F9  +
***
mov edi edi +
push esi  +
push offset loc_1027B28  +
push 282Ah  +
mov esi ecx +
push esi  +
push offset loc_10288A0  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_1027B1F  +
cmp dword ptr [esi+4] 0 +
jz loc_1027B1F  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
call sub_10273F5  +
pop ebp  +
retn 4  +
***
enter 0FFFFE80Ch 7Fh +
inc edi  +
retn 11D0h  +
***
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetClientRect  +
mov eax [ebp+Rect.right] +
cmp eax [esi+20h] +
mov eax offset byte_1002CD0 +
jl loc_1027B6F  +
lea eax [esi+8Ch] +
push eax  +
push dword ptr [esi+18h]  +
call ds:SetWindowTextW  +
mov ecx [esi+78h] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
test eax eax +
jnz loc_1027B8E  +
mov ecx [esi+24h] +
test ecx ecx +
jl loc_1027B8E  +
mov eax ecx +
mov [esi+24h] eax +
jmp loc_10215F6  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_101F58F  +
call sub_102D03D  +
push dword ptr [esi+3Ch]  +
call sub_102B83C  +
xor edi edi +
inc edi  +
push edi  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
call sub_101EBD5  +
push dword ptr [esi+3Ch]  +
call sub_1027DEC  +
push edi  +
push dword ptr [esi+3Ch]  +
call sub_1027E32  +
push 0  +
push 0  +
lea ebx [esi+0D0Ch] +
push ebx  +
push offset stru_1035344  +
push offset stru_101DD90  +
push dword ptr [esi+3Ch]  +
call sub_101EA9C  +
lea eax [esi+0C10h] +
push eax  +
push dword ptr [ebx]  +
call ds:IUnknown_GetWindow  +
push dword ptr [esi+0C10h]  +
push offset aTaskbandhwnd  +
push dword ptr [esi+4]  +
call ds:SetPropW  +
xor ebx ebx +
push ebx  +
push edi  +
push ebx  +
mov ecx esi +
mov [esi+34h] edi +
mov [esi+24h] edi +
call sub_10218C2  +
pop edi  +
mov [esi+24h] ebx +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_101ED56  +
***
push hWnd  +
call edi  +
test eax eax +
jz loc_101FB91  +
jmp loc_1059A0F  +
***
cmp dword ptr [esi+3BCh] 2 +
jz loc_10217DD  +
xor eax eax +
jmp loc_10217E0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 43h  +
xor esi esi +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_1027CAA  +
push [ebp+pcbData]  +
push [ebp+pvData]  +
push esi  +
push [ebp+pszValue]  +
push [ebp+pszSubKey]  +
push [ebp+hkey]  +
call ds:__imp_SHGetValueW  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
call ds:IUnknown_GetWindow  +
jmp loc_100E5E3  +
***
cmp dword ptr [esi+0Ch] 0FFFFFFFFh +
jz loc_1044AA5  +
jmp loc_1036FB0  +
xor eax eax +
jmp loc_100E655  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1027E29  +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset nullsub_1  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1027E29  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 0  +
push 0  +
push 0  +
push 0  +
push offset dword_1035354  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1027E65  +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_1020548  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1027E65  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 8  +
***
mov eax ecx +
xor edx edx +
xor ecx ecx +
inc ecx  +
mov [eax+4] edx +
mov dword ptr [eax] offset off_1027EB4 +
mov dword ptr [eax+8] offset off_1025F28 +
mov dword ptr [eax+0Ch] offset off_10263AC +
mov dword ptr [eax+10h] offset off_1025950 +
mov [eax+14h] ecx +
mov [eax+18h] edx +
mov dword ptr [eax+1Ch] 3Ch +
mov [eax+20h] edx +
mov dword ptr [eax+30h] 4000h +
mov [eax+34h] edx +
mov [eax+38h] ecx +
retn   +
***
xor eax eax +
jmp loc_101F408  +
***
push 0  +
push 0  +
push 43Eh  +
push eax  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 40000044h  +
mov edi ecx +
call ds:__imp_SHELL32_100  +
mov [ebp+var_90] eax +
lea eax [ebp+var_94] +
push eax  +
lea eax [ebp+Start] +
push eax  +
push 0  +
push 2  +
push offset aDisabledhotkey  +
push offset aSoftwareMicr_0  +
push 80000001h  +
mov [ebp+var_94] 86h +
call ds:RegGetValueW  +
test eax eax +
jz loc_1027F52  +
xor eax eax +
mov [ebp+Start] ax +
mov ebx 1F4h +
mov esi offset dword_1027FBC +
test byte ptr [esi] 8 +
jz loc_1027F6A  +
cmp [ebp+var_90] 0 +
jnz loc_1027F97  +
movzx eax word ptr [esi-4] +
push eax  +
lea eax [ebp+Start] +
push eax  +
call ds:StrChrIW  +
test eax eax +
jnz loc_1027F97  +
movzx eax word ptr [esi-4] +
push eax  +
mov eax [esi] +
or eax 4000h +
push eax  +
push ebx  +
push dword ptr [edi+4]  +
call ds:RegisterHotKey  +
add esi 8 +
inc ebx  +
cmp esi (offset aDisabledhotkey+4) +
jl loc_1027F5C  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_1028213  +
mov eax [ebp+8] +
mov eax [eax+4] +
test eax eax +
jz loc_102820E  +
mov eax [eax+4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
and dword ptr [ecx] 0 +
jmp loc_1028208  +
***
mov eax 80070057h +
jmp loc_102820A  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov dword_10B10EC eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
lea edi [esi+0DDCh] +
push edi  +
push offset stru_101BC80  +
push 3  +
push 0  +
push offset rclsid  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1028268  +
mov eax [edi] +
mov ecx [eax] +
add esi 14h +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1015C3F  +
push 0  +
push eax  +
push dword ptr [esi+18h]  +
mov [esi+8] eax +
call ds:SetWindowTheme  +
pop esi  +
retn   +
***
mov eax [ebp+var_10] +
add eax edi +
cdq   +
idiv  esi +
cmp eax ecx +
jge loc_1028299  +
mov ecx eax +
mov eax [ebp+arg_8] +
mov [ebx+eax*4+84h] ecx +
jmp loc_1020437  +
***
mov ecx ebx +
call sub_1015D58  +
jmp loc_1002264  +
lea eax [ebp+EventTrack] +
push eax  +
push [ebp+hWndParent]  +
mov edi ecx +
call ds:GetClientRect  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_10282D9  +
push esi  +
lea eax [ebp+EventTrack] +
push eax  +
push edi  +
call ds:SHLWAPI_197  +
push esi  +
lea eax [ebp+EventTrack] +
push eax  +
push esi  +
push dword ptr [ebx+0CD8h]  +
mov ecx ebx +
call sub_103547D  +
push eax  +
push edi  +
push dword ptr [ebx+0D14h]  +
call ds:DrawThemeBackground  +
mov dword ptr [ebx+2Ch] 1 +
jmp loc_1002298  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
mov esi offset aCheckassociati +
push esi  +
xor edi edi +
push edi  +
push phkResult  +
mov dword ptr [ebp+Data] edi +
mov [ebp+pcbData] 4 +
call sub_1027C79  +
test eax eax +
jnz loc_105C620  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
***
push offset aImagelist_repl  +
push offset dword_10B2278  +
call sub_1012091  +
jmp loc_10062EF  +
***
push offset aImagelist_remo  +
push offset dword_10B227C  +
call sub_1012091  +
jmp loc_100685B  +
***
push 141h  +
push offset dword_10B22E0  +
call sub_1012091  +
jmp loc_10044F7  +
***
push 151h  +
push offset dword_10B22B0  +
call sub_1012091  +
jmp loc_100F6F7  +
***
push 181h  +
push offset dword_10B22B4  +
call sub_1012091  +
jmp loc_100F723  +
***
push 152h  +
push offset dword_10B233C  +
call sub_1012091  +
jmp loc_100F85F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push offset dword_100671C  +
push [ebp+arg_0]  +
call SHBindToParent  +
mov edi eax +
test edi edi +
jl loc_1028469  +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push esi  +
push 0  +
push [ebp+arg_8]  +
lea edx [ebp+arg_0] +
push edx  +
push 1  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
xor edi edi +
inc edi  +
cmp dword_10B1140 0 +
jnz loc_10284E8  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
mov esi 20006h +
push esi  +
mov dword_10B1140 edi +
call ds:SHELL32_723  +
test eax eax +
jl loc_10284E7  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
push 0  +
push esi  +
push edi  +
push 0  +
push 0  +
push offset aRunstuffhasbee  +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
mov esi ds:RegCloseKey +
test eax eax +
jnz loc_10284E2  +
push [ebp+phkResult]  +
call esi  +
cmp [ebp+dwDisposition] edi +
jnz loc_10284E2  +
mov dword_10B1140 2 +
push [ebp+hKey]  +
call esi  +
pop esi  +
xor eax eax +
cmp dword_10B1140 edi +
pop edi  +
setz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
and dword ptr [eax+0Ch] 0 +
mov ecx [ebp+arg_0] +
mov dword ptr [eax+8] offset off_1015AE0 +
mov dword ptr [eax] offset off_1008E8C +
mov dword ptr [eax+4] offset off_1025960 +
mov dword ptr [eax+8] offset off_1015A68 +
mov dword ptr [eax+10h] 1 +
mov [eax+14h] ecx +
pop ebp  +
retn 4  +
***
test byte ptr [edi+20h] 1 +
jz loc_100FEA8  +
jmp loc_1060A83  +
***
test al al +
jz loc_100FDA0  +
jmp loc_100FDBC  +
***
test al al +
jz loc_1010186  +
jmp loc_10101A2  +
***
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+1Ch]  +
call ds:GetClientRect  +
push 0Ah  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_44.bmiHeader.biWidth] +
stos   +
mov eax [ebp+Rect.right] +
mov [ebp+var_44.bmiHeader.biWidth] eax +
mov eax [ebp+Rect.bottom] +
mov [ebp+var_44.bmiHeader.biHeight] eax +
xor eax eax +
push 20h  +
inc eax  +
mov [ebp+var_44.bmiHeader.biPlanes] ax +
pop eax  +
push ebx  +
push ebx  +
mov [ebp+var_44.bmiHeader.biBitCount] ax +
lea eax [ebp+arg_4] +
push eax  +
push ebx  +
lea eax [ebp+var_44] +
push eax  +
push [ebp+hDC]  +
mov [ebp+var_44.bmiHeader.biSize] 28h +
mov [ebp+var_44.bmiHeader.biCompression] ebx +
call ds:CreateDIBSection  +
mov dword_10B1154 eax +
cmp eax ebx +
jnz loc_101BE10  +
jmp loc_101BE61  +
***
call ds:BufferedPaintInit  +
mov dword ptr [esi] 1 +
jmp loc_1004B01  +
mov [ebp+var_8] edi +
jmp loc_1004BDD  +
***
mov ecx esi +
call sub_1005671  +
push eax  +
push 1902h  +
push offset dword_1028640  +
call sub_101588E  +
mov dword_10B10A0 ebx +
jmp loc_1006D2A  +
xor eax eax +
jmp loc_1006D3A  +
test al al +
jz loc_1006E28  +
jmp loc_1006E4A  +
fldz   +
jmp loc_1054249  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1028691  +
push esi  +
push [ebp+arg_0]  +
call sub_100E551  +
mov esi eax +
test esi esi +
jz loc_1028690  +
push 0  +
push 0  +
push 0  +
push 5  +
push offset dword_1035354  +
mov ecx esi +
mov dword ptr [esi+24h] 1 +
call sub_102869A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jge loc_10286BC  +
pop edi  +
pop esi  +
leave   +
retn 14h  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset nullsub_1  +
push [ebp+var_8]  +
push esi  +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_10286F3  +
push [ebp+arg_10]  +
mov eax [ebp+var_4] +
push [ebp+arg_C]  +
mov ecx [eax] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc edi  +
jmp loc_10286A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx ds:WideCharToMultiByte +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
mov [eax] esi +
push dword ptr [edi+2Ch]  +
push esi  +
push esi  +
call ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [edi+30h]  +
mov [ebp+arg_0] eax +
push esi  +
push esi  +
call ebx  +
lea ecx [ebp+uBytes] +
push ecx  +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_8] eax +
call sub_1008156  +
mov ebx eax +
cmp ebx esi +
jl loc_1028788  +
xor ebx ebx +
cmp [ebp+uBytes] esi +
jz loc_1028788  +
push [ebp+arg_4]  +
push [ebp+uBytes]  +
call sub_101BB7F  +
mov ebx eax +
cmp ebx esi +
jl loc_1028788  +
mov eax [ebp+arg_4] +
push [ebp+arg_0]  +
mov esi [eax] +
push esi  +
push dword ptr [edi+2Ch]  +
call sub_1028796  +
push [ebp+var_8]  +
mov [edi+10h] eax +
mov eax [ebp+arg_0] +
add esi eax +
push esi  +
push dword ptr [edi+30h]  +
call sub_1028796  +
mov [edi+14h] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10287B7  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:__imp_SHUnicodeToAnsi  +
mov eax [ebp+arg_4] +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_10287B3  +
***
mov [ebp+var_4C4] edi +
jmp loc_10262D1  +
cmp eax esi +
jbe loc_10287F5  +
jmp loc_1028895  +
push edi  +
call ds:LocalFree  +
jmp loc_1028893  +
cmp [ebp+Type] 1 +
jnz loc_105D6BF  +
cmp [ebp+Type] 2 +
jz loc_105D6D1  +
push 43h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_105D70F  +
push 618h  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jz loc_1028893  +
push [ebp+var_4C8]  +
push esi  +
push edi  +
call sub_100665F  +
test eax eax +
jl loc_1028893  +
lea eax [ebp+ValueName] +
push eax  +
push esi  +
lea eax [edi+208h] +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_1028893  +
lea eax [ebp+Data] +
push eax  +
push esi  +
lea eax [edi+410h] +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_1028893  +
cmp [ebp+var_4B8] 0 +
jnz loc_1028878  +
push 5  +
call ds:off_1007FEC  +
mov [ebp+var_4B8] eax +
test eax eax +
jz loc_10287CF  +
push edi  +
push 7FFFFFFFh  +
push [ebp+var_4B8]  +
call ds:off_10065E0  +
cmp eax 0FFFFFFFFh +
jz loc_10287CF  +
xor edi edi +
inc ebx  +
jmp loc_1026247  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push esi  +
call SHChangeNotifyRegisterThread  +
mov ebx [ebp+8] +
cmp [ebx+4] esi +
jz loc_10288F7  +
mov ecx ebx +
call sub_1028D69  +
cmp dword_10B24CC esi +
jz loc_10288F0  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1028924  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_10568BF  +
mov ecx ebx +
call sub_1001DAD  +
push 1  +
call SHChangeNotifyRegisterThread  +
call sub_106CC4C  +
push 0  +
push dword ptr [ebx+0DFCh]  +
call ds:CoRegisterMessageFilter  +
push dword ptr [ebx+0DF0h]  +
call sub_107D51F  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
***
test al al +
jz loc_10288CF  +
jmp loc_10288F0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
and dword ptr [ebx] 0 +
push esi  +
push 3Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1028981  +
mov ecx eax +
call sub_1027E6E  +
mov esi eax +
test esi esi +
jz loc_1054A14  +
push edi  +
mov ecx esi +
call sub_102898A  +
mov edi eax +
test edi edi +
jl loc_1054A1E  +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
xor esi esi +
jmp loc_102895C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor ebx ebx +
push ebx  +
push offset aSoftwareMic_12  +
push 80000002h  +
mov esi ecx +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10289CA  +
push [ebp+hKey]  +
mov ecx esi +
call sub_1028A75  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
cmp [esi+1Ch] ebx +
ja sub_10548AA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:RegGetValueW +
push edi  +
push 4  +
pop edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
xor ebx ebx +
push ebx  +
push 10h  +
push offset aDelay_sec  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_C] ecx +
mov [ebp+var_4] edi +
call esi  +
test eax eax +
jnz loc_1028ABB  +
mov eax [ebp+var_8] +
cmp eax 418937h +
jnb loc_1028ABB  +
mov ecx [ebp+var_C] +
mov [ecx+1Ch] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push 10h  +
push offset aBoxedpriorityc  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_4] edi +
call esi  +
test eax eax +
jnz loc_1028AED  +
mov eax [ebp+var_8] +
cmp eax 20h +
jz loc_1028AE7  +
cmp eax 4000h +
jnz loc_1028B4F  +
mov ecx [ebp+var_C] +
mov [ecx+30h] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push 10h  +
push offset aBoxediopriorit  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_4] edi +
call esi  +
test eax eax +
jnz loc_1028B18  +
mov eax [ebp+var_8] +
cmp eax 2 +
ja loc_1028B18  +
mov ecx [ebp+var_C] +
mov [ecx+34h] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push 10h  +
push offset aBoxedpageprior  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_4] edi +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jnz locret_1028B4B  +
mov eax [ebp+var_8] +
cmp eax 8 +
jnb locret_1028B4B  +
cmp eax 5 +
ja locret_1028B4B  +
mov ecx [ebp+var_C] +
mov [ecx+38h] eax +
leave   +
retn 4  +
cmp eax 40h +
jnz loc_1028AED  +
jmp loc_1028AE7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi offset dword_1028C60 +
push esi  +
call sub_1008600  +
test al al +
jz loc_1028C50  +
push 104h  +
lea eax [ebp+var_108] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_0] +
add esp 0Ch +
mov [ebp+var_108] eax +
push edi  +
lea eax [ebp+var_88] +
push eax  +
mov [ebp+var_10C] 1 +
call sub_1012258  +
push 2  +
lea eax [ebp+var_10C] +
push eax  +
push 182Ch  +
push esi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push esi  +
lea eax [ebp+pvParam] +
push eax  +
push esi  +
push 82h  +
mov [ebp+pvParam] esi +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_1028CCF  +
cmp [ebp+pvParam] esi +
jz loc_1028CCF  +
push offset dword_1028CF4  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_1028CCF  +
push esi  +
push esi  +
push offset aDisallowshakin  +
push offset aSoftwareMicr_0  +
call ds:SHRegGetBoolUSValueW  +
test eax eax +
jnz loc_1028CCF  +
call sub_1028D09  +
test eax eax +
jz loc_1028CCF  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn   +
xor eax eax +
jmp loc_1028CCC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push offset aExplorerAerosh  +
call SLGetWindowsInformationDWORD  +
test eax eax +
jl loc_1056630  +
xor eax eax +
cmp [ebp+var_4] eax +
setnz al  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push 0FBh  +
push hInstance  +
mov esi ecx +
call ds:LoadAcceleratorsW  +
mov ecx esi +
mov [esi+0CACh] eax +
call sub_1027EE9  +
call sub_1028DC9  +
cmp dword ptr [esi+0D5Ch] 0 +
jnz loc_105670D  +
push 1  +
call ds:GetCurrentThread  +
push eax  +
call ds:SetThreadPriority  +
push 0  +
push 1  +
push 4F2h  +
push dword ptr [esi+4]  +
call ds:ChangeWindowMessageFilterEx  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
push 0  +
push offset loc_102606A  +
call ds:__imp_SHCreateThread  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi ds:RegisterDragDrop +
lea ebx [esi+0C20h] +
push ebx  +
push dword ptr [esi+0B10h]  +
call edi  +
mov ecx ebx +
call sub_1028E1B  +
lea eax [esi+0C30h] +
push eax  +
push dword ptr [esi+4]  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
add ecx 0Ch +
push ecx  +
push offset stru_100DD00  +
push 1  +
push 0  +
push offset stru_100DD10  +
call ds:__imp_CoCreateInstance  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi+4]  +
call ds:UpdateWindow  +
lea ecx [esi+0AF8h] +
call sub_1015930  +
mov ecx esi +
call sub_1028DE3  +
call sub_102830B  +
test eax eax +
jnz loc_1057526  +
xor esi esi +
push esi  +
push esi  +
push offset aTaskbarcreated  +
call ds:RegisterWindowMessageW  +
push eax  +
push 0FFFFh  +
call ds:SendNotifyMessageW  +
push 4  +
pop ebx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
mov esi ds:__imp_SHRegGetValueFromHKCUHKLM +
push 18h  +
push offset aStart_trackpro  +
mov edi offset pszSubKey +
push edi  +
mov byte ptr [ebp+var_10] 1 +
mov [ebp+var_4] ebx +
call esi  +
test eax eax +
jz loc_1057530  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 0  +
push 18h  +
push offset aStart_trackdoc  +
push edi  +
mov byte ptr [ebp+var_C] 1 +
mov [ebp+var_4] ebx +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_105753E  +
push [ebp+var_C]  +
push [ebp+var_10]  +
call sub_1028F13  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx ecx [ebp+arg_4] +
xor eax eax +
cmp [ebp+arg_0] al +
setnz al  +
neg ecx  +
sbb ecx ecx +
and ecx 2 +
or eax ecx +
push eax  +
push 0EEDh  +
push offset dword_1028F48  +
call sub_101588E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
push 40000047h  +
mov [ebp+var_218] eax +
mov [ebp+var_20C] esi +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_102908B  +
push 43h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_102908B  +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
xor ebx ebx +
inc ebx  +
push ebx  +
push esi  +
push offset aSoftwareMic_13  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_102908A  +
push edi  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
lea eax [ebp+pdwType] +
push eax  +
push offset aLoad  +
push esi  +
push [ebp+hKey]  +
mov esi ds:__imp_SHGetValueW +
mov [ebp+pcbData] 1FEh +
call esi  +
mov edi offset dword_1025930 +
test eax eax +
jnz loc_1029047  +
cmp [ebp+pdwType] ebx +
jnz loc_1029047  +
mov ebx offset aSoftwareMic_14 +
push ebx  +
push edi  +
call sub_1025B68  +
push [ebp+var_218]  +
lea eax [ebp+pvData] +
push 7  +
push eax  +
call sub_1029197  +
test eax eax +
jnz loc_105D559  +
push ebx  +
push offset dword_1025940  +
call sub_1025B68  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
lea eax [ebp+pdwType] +
push eax  +
push offset aRun  +
push 0  +
push [ebp+hKey]  +
mov [ebp+pcbData] 1FEh +
call esi  +
test eax eax +
jz loc_105D568  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_20C] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
and [ebp+var_21C] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_220] eax +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetWindowsDirectoryW  +
test eax eax +
jz loc_1029224  +
push 43h  +
call ds:GetSystemMetrics  +
mov [ebp+var_214] eax +
test eax eax +
jnz loc_1029224  +
push ebx  +
push edi  +
mov edi offset dword_1026630 +
xor ecx ecx +
cmp [esi] cx +
mov ebx esi +
mov [ebp+var_210] ebx +
jnz loc_1029239  +
cmp [ebx] cx +
jnz loc_1029248  +
mov [ebp+var_214] 1 +
cmp [esi] cx +
jnz loc_105D4A9  +
cmp [ebp+var_214] 0 +
lea esi [ebx+2] +
jz loc_10291EF  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_21C] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
movzx eax word ptr [ebx] +
cmp ax 20h +
jnz loc_105D495  +
jmp loc_10291FE  +
xor eax eax +
mov [ebx] ax +
jmp loc_102920D  +
***
push offset szFormat  +
call ds:RegisterClipboardFormatW  +
mov word_10B1086 ax +
jmp locret_101C7DC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0FACh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 4Bh  +
lea eax [ebp-357h] +
push ebx  +
push eax  +
mov [ebp-358h] bl +
call memset  +
add esp 0Ch +
lea eax [ebp-358h] +
push eax  +
call GetPwrCapabilities  +
cmp [ebp-33Ah] bl +
jnz loc_1055012  +
xor eax eax +
push eax  +
push 25Fh  +
push offset dword_1029748  +
call sub_101588E  +
push 220h  +
push ebx  +
call ShellExecuteA  +
neg eax  +
sbb eax eax +
neg eax  +
push eax  +
push 24h  +
push offset dword_1029768  +
call sub_101588E  +
call sub_102FF12  +
push eax  +
push 260h  +
push offset dword_1029758  +
call sub_101588E  +
lea eax [ebp-0F30h] +
push eax  +
call sub_103099F  +
test eax eax +
jl loc_102934B  +
push dword ptr [ebp-0F30h]  +
push 52Ch  +
push offset dword_102F510  +
call sub_101588E  +
lea eax [ebp-0F34h] +
push eax  +
call ds:DwmIsCompositionEnabled  +
test eax eax +
jl loc_1029371  +
push dword ptr [ebp-0F34h]  +
push 52Dh  +
push offset dword_1029798  +
call sub_101588E  +
mov edi ds:RegOpenKeyExW +
lea eax [ebp-0F24h] +
push eax  +
push 20019h  +
push ebx  +
push offset aSoftwareMic_15  +
mov esi 80000001h +
push esi  +
call edi  +
test eax eax +
jnz loc_10293E5  +
lea eax [ebp-0F1Ch] +
push eax  +
lea eax [ebp-0F14h] +
push eax  +
push ebx  +
push ebx  +
push offset aThemeactive  +
push dword ptr [ebp-0F24h]  +
mov dword ptr [ebp-0F1Ch] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_10293D9  +
push dword ptr [ebp-0F14h]  +
push 52Eh  +
push offset dword_10297A8  +
call sub_101588E  +
push dword ptr [ebp-0F24h]  +
call ds:RegCloseKey  +
call WinSqmIsOptedIn  +
test eax eax +
jz loc_1029460  +
xor eax eax +
push 0FEh  +
mov [ebp-104h] ax +
lea eax [ebp-102h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
call sub_102FADB  +
push 80h  +
lea eax [ebp-104h] +
push eax  +
call sub_1030716  +
cmp eax ebx +
jl loc_1055026  +
lea eax [ebp-104h] +
push eax  +
push 11F2h  +
push ebx  +
call WinSqmSetString  +
call sub_102FAEC  +
lea eax [ebp-0F20h] +
push eax  +
push offset aStartuppage  +
push offset aSoftwareMicr_6  +
push esi  +
call sub_101917B  +
test eax eax +
jge loc_1055045  +
xor eax eax +
push 0C6h  +
mov [ebp-0F10h] ax +
lea eax [ebp-0F0Eh] +
push ebx  +
push eax  +
mov dword ptr [ebp-0FACh] offset aAutoruninflega +
mov dword ptr [ebp-0FA8h] 468h +
mov dword ptr [ebp-0FA4h] offset aHandlecdburnin +
mov dword ptr [ebp-0FA0h] 46Ch +
mov dword ptr [ebp-0F9Ch] offset aHandledvdburni +
mov dword ptr [ebp-0F98h] 46Dh +
mov dword ptr [ebp-0F94h] offset aMixedcontenton +
mov dword ptr [ebp-0F90h] 46Eh +
mov dword ptr [ebp-0F8Ch] offset aPlaycdaudioona +
mov dword ptr [ebp-0F88h] 464h +
mov dword ptr [ebp-0F84h] offset aPlaydvdaudioon +
mov dword ptr [ebp-0F80h] 46Fh +
mov dword ptr [ebp-0F7Ch] offset aPlaydvdmovieon +
mov dword ptr [ebp-0F78h] 466h +
mov dword ptr [ebp-0F74h] offset aPlayenhancedcd +
mov dword ptr [ebp-0F70h] 465h +
mov dword ptr [ebp-0F6Ch] offset aPlayenhanceddv +
mov dword ptr [ebp-0F68h] 467h +
mov dword ptr [ebp-0F64h] offset aPlaymusicfiles +
mov dword ptr [ebp-0F60h] 46Ah +
mov dword ptr [ebp-0F5Ch] offset aPlaysupervideo +
mov dword ptr [ebp-0F58h] 471h +
mov dword ptr [ebp-0F54h] offset aPlayvideocdmov +
mov dword ptr [ebp-0F50h] 470h +
mov dword ptr [ebp-0F4Ch] offset aPlayvideofiles +
mov dword ptr [ebp-0F48h] 46Bh +
mov dword ptr [ebp-0F44h] offset aShowpictureson +
mov dword ptr [ebp-0F40h] 469h +
mov dword ptr [ebp-0F3Ch] offset aPlayhddvdonarr +
mov dword ptr [ebp-0F38h] 6DEh +
call memset  +
push 0AF0h  +
lea eax [ebp-0E48h] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
lea eax [ebp-0F24h] +
push eax  +
push 20019h  +
push ebx  +
push offset aSoftwareMic_16  +
push esi  +
mov [ebp-0F1Ch] ebx +
call edi  +
test eax eax +
jnz loc_10296B5  +
lea eax [ebp-0F18h] +
push eax  +
lea eax [ebp-0F14h] +
push eax  +
push ebx  +
push ebx  +
push offset aDisableautopla  +
push dword ptr [ebp-0F24h]  +
mov [ebp-0F14h] ebx +
mov dword ptr [ebp-0F18h] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1029623  +
cmp [ebp-0F14h] ebx +
setz al  +
mov [ebp-0F1Ch] eax +
xor eax eax +
push 206h  +
mov [ebp-30Ch] ax +
lea eax [ebp-30Ah] +
push ebx  +
push eax  +
mov [ebp-0F20h] ebx +
call memset  +
lea eax [ebp-0F10h] +
add esp 0Ch +
xor esi esi +
mov [ebp-0F28h] eax +
push dword ptr [ebp+esi*8-0FACh]  +
lea eax [ebp-30Ch] +
push offset aUserchosenexec  +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 10h +
lea eax [ebp-0F20h] +
push eax  +
push 20019h  +
push ebx  +
lea eax [ebp-30Ch] +
push eax  +
push dword ptr [ebp-0F24h]  +
call edi  +
test eax eax +
jz loc_10550BD  +
add dword ptr [ebp-0F28h] 0C8h +
inc esi  +
cmp esi 0Fh +
jb loc_1029655  +
push dword ptr [ebp-0F24h]  +
call ds:RegCloseKey  +
push dword ptr [ebp-0F1Ch]  +
push 463h  +
push offset dword_1029778  +
call sub_101588E  +
xor edi edi +
lea esi [ebp-0F10h] +
cmp [esi] bx +
jnz loc_1055107  +
push offset aUndefined  +
push dword ptr [ebp+edi*8-0FA8h]  +
push offset dword_1029788  +
call sub_102F74B  +
inc edi  +
add esi 0C8h +
cmp edi 0Fh +
jb loc_10296D2  +
lea eax [ebp-0F2Ch] +
push eax  +
push offset dword_10297B8  +
push 3  +
push ebx  +
push offset dword_1029C40  +
call ds:__imp_CoCreateInstance  +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jl loc_1029736  +
mov eax [ebp-0F2Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov eax [ebp-0F2Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp-4] +
xor ecx ebp +
xor eax eax +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push 1  +
push 8  +
call sub_1029C92  +
mov esi eax +
test esi esi +
jl loc_1029C89  +
push 2  +
call InitThread  +
mov esi eax +
test esi esi +
jl loc_105D066  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 1  +
push offset __ImageBase  +
push [ebp+arg_0]  +
call InitProcessPriv  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+hKey] +
push eax  +
push offset aStreams  +
push phkResult  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_1029E38  +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push offset aDesktop  +
push [ebp+hKey]  +
call ds:SHELL32_85  +
push [ebp+hKey]  +
mov esi eax +
call ds:RegCloseKey  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
xor eax eax +
jmp locret_1029E34  +
***
mov [ebx] eax +
jmp loc_101EAEC  +
mov ecx [ebp+var_8] +
mov [eax] ecx +
jmp loc_101EB20  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
lea edx [esi+10h] +
push edx  +
push offset stru_100E478  +
mov [esi+0Ch] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ecx +
mov dword ptr [eax] offset off_100E428 +
mov dword ptr [eax+4] offset off_100F504 +
mov dword ptr [eax+8] 1 +
retn   +
***
mov eax offset aNull +
jmp loc_1012272  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov edx [ecx+8] +
push esi  +
mov esi [ebp+0Ch] +
mov [esi] edx +
cmp dword ptr [ecx+8] 0 +
mov eax 80004005h +
pop esi  +
jz loc_1029ED3  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov ecx [ebp+10h] +
mov [ecx] eax +
jmp loc_1011FD6  +
***
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_1034A04 +
mov dword ptr [eax+4] 1 +
mov [eax+8] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
push hInstance  +
mov esi ecx +
push ebx  +
push dword ptr [esi+4]  +
mov eax 80000000h +
push eax  +
push eax  +
push eax  +
push eax  +
push 80000003h  +
push ebx  +
push offset aTooltips_class  +
push 20h  +
call sub_103510B  +
mov [esi+0C0Ch] eax +
cmp eax ebx +
jz loc_1029FB0  +
push edi  +
mov edi ds:SendMessageW +
push offset aTaskbar  +
push ebx  +
push 200Bh  +
push eax  +
call edi  +
push 2Ch  +
lea eax [ebp+var_2C] +
push ebx  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+4] +
mov [ebp+var_28] eax +
mov eax [esi+0B10h] +
mov [ebp+var_24] eax +
mov eax hInstance +
add esp 0Ch +
mov [ebp+var_10] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 432h  +
push dword ptr [esi+0C0Ch]  +
mov [ebp+var_2C] 4011h +
mov [ebp+var_C] 215h +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SystemParametersInfoW +
push edi  +
xor eax eax +
mov [ebp+pvParam] 14h +
lea edi [ebp+var_10] +
stos   +
stos   +
stos   +
push 0  +
stos   +
lea eax [ebp+pvParam] +
push eax  +
push 14h  +
push 2Bh  +
call esi  +
or [ebp+var_4] 8 +
push 0  +
lea eax [ebp+pvParam] +
push eax  +
push 14h  +
push 2Ch  +
call esi  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov [ebp+var_8] eax +
mov eax [esi+3Ch] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push edi  +
push edi  +
push edi  +
push edi  +
push offset dword_1035354  +
push dword ptr [esi+3Ch]  +
call ds:IUnknown_Exec  +
jmp loc_101F5D4  +
***
mov edi edi +
push esi  +
push 49h  +
mov esi ecx +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_1055D79  +
mov dword ptr [esi+0D18h] 190h +
mov dword ptr [esi+0D1Ch] 0C8h +
mov ecx esi +
pop esi  +
jmp sub_101F5DD  +
***
mov edi edi +
push esi  +
lea esi [ecx+0CB8h] +
cmp dword ptr [esi] 0 +
jnz loc_102A075  +
push 0  +
push 0Ch  +
call ds:off_1003E00  +
mov [esi] eax +
xor eax eax +
cmp [esi] eax +
pop esi  +
setnz al  +
retn   +
***
test eax eax +
mov eax offset aTaskbarvertcom +
jnz loc_101E2B6  +
mov eax offset aTaskbarvert +
jmp loc_101E2B6  +
***
push 2  +
mov ecx esi +
call sub_1003E30  +
cmp dword ptr [esi] 0 +
jnz loc_1015DEA  +
jmp loc_1015E07  +
***
mov edi edi +
push esi  +
mov esi ecx +
test byte ptr [esi+40h] 1 +
jnz loc_1057A19  +
pop esi  +
retn   +
***
add ecx [ebx+0B18h] +
jmp loc_1021727  +
cmp [ebp+var_14] eax +
jle loc_1057CC8  +
jmp loc_102044A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [esi+0C14h] +
cmp [eax] ecx +
jz loc_102A150  +
mov [eax] ecx +
mov ecx esi +
call sub_101E5AD  +
mov ecx esi +
call sub_101E74B  +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [ebp+xRight] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:GetTextExtentPointW  +
push dword ptr [ebp-4]  +
push [ebp+xRight]  +
push 0  +
push 0  +
push [ebp+lprc]  +
call ds:SetRect  +
jmp locret_10356EC  +
***
push 6  +
call ds:GetSystemMetrics  +
add eax eax +
mov [ebp+var_8] eax +
jmp loc_101F9BB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ds:SendMessageW +
push 0  +
push 0  +
mov esi ecx +
push 423h  +
push dword ptr [esi]  +
call edi  +
mov [esi+4] eax +
test eax eax +
jz loc_102A1E7  +
movzx ecx [ebp+arg_0] +
push ecx  +
push 2  +
push 403h  +
push eax  +
call edi  +
push 1  +
push 1  +
push 0FFFFFFF0h  +
push dword ptr [esi+4]  +
call ds:SHLWAPI_165  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp byte ptr [ecx] 0 +
mov eax [ecx+4] +
jnz loc_1058E71  +
mov eax [eax+664h] +
retn   +
***
push 0Ah  +
call ds:off_1007FEC  +
mov [esi] eax +
test eax eax +
jnz loc_10225D8  +
jmp loc_10225F1  +
***
mov edi edi +
push esi  +
push 4  +
mov esi ecx +
call sub_1002B98  +
pop ecx  +
mov [esi+0Ch] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
cmp [ebp+hKey] eax +
jz locret_102A26C  +
push esi  +
mov esi [ebp+lpData] +
lea ecx [ebp+cbData] +
push ecx  +
push esi  +
push eax  +
push eax  +
push [ebp+lpValueName]  +
mov [ebp+cbData] 8 +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1059065  +
pop esi  +
leave   +
retn 14h  +
***
xor eax eax +
jmp loc_1024501  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 4 +
jz loc_1059094  +
xor eax eax +
cmp [ebp+arg_0] 5 +
setnz al  +
dec eax  +
and eax 0FFFFFDD4h +
add eax 668h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 4 +
jz loc_102A2C3  +
cmp [ebp+arg_0] 5 +
jz loc_102A2C3  +
cmp [ebp+arg_0] 7 +
jnz loc_105909E  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101118D  +
add eax 6B49D200h +
adc edx 0 +
mov [esi+3A0h] eax +
mov [esi+3A4h] edx +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+2E8h] 0 +
jnz loc_102A31A  +
cmp dword ptr [ecx+2ECh] 0 +
jz loc_102A31A  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+10h] 2 +
lea eax [ecx+2ACh] +
jnz loc_102A320  +
lea eax [ecx+29Ch] +
pop ebp  +
retn 4  +
***
mov [ebp+var_10] esi +
jmp loc_101FD1D  +
mov [ebp+var_C] esi +
jmp loc_101FD3F  +
sub edx [ebp+var_10] +
mov [ebp+var_90] edx +
jmp loc_101FDAA  +
mov [ebp+var_2C] ecx +
sub ecx [ebp+var_4C] +
mov [ebp+var_34] ecx +
jmp loc_101FECE  +
mov eax [ebp+var_78] +
mov edi [ebp+var_98] +
mov [ebp+x] eax +
mov eax [ebp+var_70] +
mov [ebp+var_80] eax +
mov eax [ebp+var_90] +
mov [ebp+var_60] eax +
mov eax [ebp+var_8] +
add eax edi +
cmp dword ptr [ebx+364h] 2 +
mov [ebp+var_C] eax +
mov [ebp+var_18] eax +
lea eax [esi+edi] +
mov [ebp+var_68] edi +
mov [ebp+rc.left] edi +
mov [ebp+var_20] edi +
mov [ebp+rc.right] eax +
jz loc_10598C6  +
cmp dword ptr [ebx+364h] 0 +
jnz loc_102A3B7  +
push 0FFFFFFECh  +
push hWnd  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_10598DF  +
mov eax [ebp+var_90] +
and [ebp+var_24] 0 +
mov [ebp+var_30] eax +
sub eax [ebp+var_50] +
mov [ebp+var_38] eax +
mov [ebp+rc.right] eax +
sub eax esi +
mov ecx [ebp+var_74] +
mov edx [ebp+var_54] +
add edx ecx +
mov [ebp+rc.bottom] edx +
mov edx [ebp+var_8] +
add esi edx +
mov edx [ebp+var_90] +
add esi [ebp+var_50] +
sub edx edi +
cmp esi edx +
mov [ebp+rc.left] eax +
mov [ebp+var_1C] ecx +
mov [ebp+rc.top] ecx +
jl loc_10598FC  +
cmp [ebp+var_24] 0 +
jnz loc_1059968  +
mov eax [ebp+var_90] +
mov [ebp+var_18] eax +
sub eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov edi [ebp+var_4C] +
mov eax [ebp+var_54] +
cmp edi eax +
jg loc_1059976  +
cdq   +
sub eax edx +
mov esi eax +
mov eax edi +
cdq   +
sub eax edx +
sar esi 1 +
sar eax 1 +
sub esi eax +
mov eax [ebp+rc.bottom] +
add esi ecx +
mov [ebp+var_34] esi +
add esi edi +
cmp esi eax +
mov [ebp+var_2C] esi +
mov [ebp+var_1C] esi +
jg loc_102A449  +
mov [ebp+var_1C] eax +
mov eax [ebp+var_64] +
sub eax [ebp+var_1C] +
mov ecx [ebp+lParam] +
sub eax [ebp+dy] +
add eax ecx +
cmp [ebp+cy] eax +
jl loc_105997D  +
mov ecx [ebp+var_1C] +
mov edi [ebp+arg_8] +
add eax ecx +
mov ecx [ebp+wParam] +
mov [ebp+var_14] eax +
xor eax eax +
push eax  +
push eax  +
push 464h  +
mov [edi] eax +
mov [edi+8] ecx +
push dword ptr [ebx+28h]  +
mov [ebp+y] eax +
call ds:SendMessageW  +
mov [ebp+var_7C] eax +
mov eax [ebp+var_14] +
cmp eax esi +
mov ecx eax +
jg loc_102A499  +
mov ecx esi +
cmp [ebp+rc.bottom] ecx +
jg loc_1059985  +
cmp eax esi +
jg loc_105998D  +
push esi  +
mov esi ds:OffsetRect +
push 0  +
lea eax [ebp+var_68] +
push eax  +
call esi  +
push [ebp+dy]  +
lea eax [ebp+x] +
push 0  +
push eax  +
call esi  +
mov eax [ebp+var_7C] +
sub eax [ebp+Rect.top] +
and dword ptr [edi+4] 0 +
add eax [ebp+Rect.bottom] +
mov [edi+0Ch] eax +
jmp loc_101FF79  +
mov eax [ebp+var_14] +
mov [ebp+var_8C] eax +
jmp loc_1022AF1  +
***
mov [ebp+var_4] offset aTraynotifyvert +
test ebx ebx +
jnz loc_101E1A8  +
mov [ebp+var_4] offset aTraynotifyve_0 +
jmp loc_101E1A8  +
***
mov edi edi +
push esi  +
push 0  +
push 0  +
push 0  +
push offset pfnWinEventProc  +
push 0  +
push 7  +
push 4  +
mov esi ecx +
call ds:SetWinEventHook  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi+0A58h] eax +
pop esi  +
mov eax ecx +
retn   +
***
cmp esi 1 +
jz loc_10022D8  +
cmp esi 2 +
jz loc_10022D8  +
jmp loc_10109C0  +
***
mov eax [ebp+14h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFBh +
add eax 5 +
push eax  +
push dword ptr [ebx+18h]  +
call ds:ShowWindow  +
jmp loc_100DAC9  +
***
mov eax [ebx+18h] +
jmp loc_1002328  +
***
push dword ptr [esi]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_101EFDB  +
jmp loc_105C026  +
***
cmp edx 113h +
jz loc_102A61F  +
cmp edx 215h +
jz loc_105C12F  +
cmp edx 318h +
jnz loc_1012188  +
push ebx  +
mov ecx esi +
call sub_107962B  +
jmp loc_10121A4  +
cmp ebx 0Bh +
jz loc_105C13E  +
jmp loc_1012197  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+WndClass.lpfnWndProc] +
stos   +
mov eax [ebp+arg_0] +
push 7F00h  +
push 0  +
mov [ebp+WndClass.style] 3 +
mov [ebp+WndClass.lpfnWndProc] offset loc_100DFFF +
mov [ebp+WndClass.hInstance] eax +
mov [ebp+WndClass.hbrBackground] 6 +
call ds:LoadCursorW  +
mov [ebp+WndClass.hCursor] eax +
lea eax [ebp+WndClass] +
push eax  +
mov [ebp+WndClass.lpszClassName] offset aNotifyiconover +
call ds:RegisterClassW  +
pop edi  +
leave   +
retn 4  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
jmp loc_1010A4E  +
***
mov eax offset aVerticalshowde +
jmp loc_101ECDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 21h  +
pop esi  +
push 0FFFFFFECh  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_105C647  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
movzx eax cx +
jmp loc_1023C74  +
***
cmp eax 0B6h +
jz loc_1023CF1  +
jmp loc_1023CF8  +
***
push offset aImagelist_crea  +
push offset dword_10B2270  +
call sub_1012091  +
jmp loc_1019313  +
***
push offset aImagelist_dest  +
push offset dword_10B2274  +
call sub_1012091  +
jmp loc_103523F  +
***
push offset aImagelist_ge_0  +
push offset dword_10B230C  +
call sub_1012091  +
jmp loc_1008513  +
***
push offset aImagelist_getf  +
push offset dword_10B2284  +
call sub_1012091  +
jmp loc_101715F  +
***
push offset aHimagelist_que  +
push offset dword_10B231C  +
call sub_1012091  +
jmp loc_1003EAB  +
***
push 19Ah  +
push offset dword_10B22D8  +
call sub_1012091  +
jmp loc_10351DF  +
***
push 19Ch  +
push offset dword_10B2288  +
call sub_1012091  +
jmp loc_10351AD  +
***
push 19Dh  +
push offset dword_10B2398  +
call sub_1012091  +
jmp loc_100D7A9  +
***
push 140h  +
push offset dword_10B228C  +
call sub_1012091  +
jmp loc_1003E1B  +
***
push 143h  +
push offset dword_10B2290  +
call sub_1012091  +
jmp loc_1003DA3  +
***
push 144h  +
push offset dword_10B2294  +
call sub_1012091  +
jmp loc_1003DCF  +
***
push 147h  +
push offset dword_10B229C  +
call sub_1012091  +
jmp loc_1015DC3  +
***
push 148h  +
push offset dword_10B22F0  +
call sub_1012091  +
jmp loc_1008007  +
***
push 149h  +
push offset dword_10B22A0  +
call sub_1012091  +
jmp loc_100835B  +
***
push 14Ch  +
push offset dword_10B22A4  +
call sub_1012091  +
jmp loc_1002B83  +
***
push 14Dh  +
push offset dword_10B22F8  +
call sub_1012091  +
jmp loc_1004097  +
***
push 14Eh  +
push offset dword_10B22A8  +
call sub_1012091  +
jmp loc_10065FB  +
***
push 182h  +
push offset dword_10B2300  +
call sub_1012091  +
jmp loc_1008307  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [eax] +
mov eax [eax+4] +
mov edx ecx +
or edx eax +
jz loc_102A91D  +
push [ebp+arg_0]  +
push eax  +
push ecx  +
call ds:EventEnabled  +
test al al +
jz loc_102A91D  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_102A919  +
***
mov eax [ebp+14h] +
mov esi [eax] +
test esi esi +
jz loc_102A94E  +
mov edi [ebp+8] +
push esi  +
push 0  +
push edi  +
mov [esi+4] edi +
call ds:SetWindowLongW  +
push dword ptr [ebp+14h]  +
mov eax [esi] +
push dword ptr [ebp+10h]  +
mov ecx esi +
push ebx  +
push edi  +
call dword ptr [eax+8]  +
jmp loc_1002057  +
***
xor eax eax +
jmp loc_1002057  +
***
push offset ModuleName  +
call ds:GetModuleHandleW  +
cmp eax ebx +
jz loc_102A975  +
push offset ProcName  +
push eax  +
call ds:__imp_GetProcAddress  +
mov dword_10B1130 eax +
cmp dword_10B1130 ebx +
jz loc_100D608  +
jmp loc_100D5FD  +
***
movzx eax ax +
push 0Dh  +
sub eax 61h +
push eax  +
call sub_10331A0  +
add eax 61h +
jmp loc_1033127  +
***
push edi  +
push 0  +
mov dword_10B1138 eax +
call ds:GetDC  +
mov edi eax +
test edi edi +
jz loc_102AA18  +
push esi  +
mov esi ds:GetDeviceCaps +
push 58h  +
push edi  +
call esi  +
push 5Ah  +
push edi  +
mov nNumerator eax +
call esi  +
mov dword_10B109C eax +
xor eax eax +
cmp nNumerator 60h +
push edi  +
setnz al  +
push 0  +
mov dword_10B1134 eax +
call ds:ReleaseDC  +
pop esi  +
pop edi  +
jmp locret_101144B  +
***
push edi  +
push 0  +
call ds:GetDC  +
mov esi ds:GetDeviceCaps +
mov edi eax +
push 58h  +
push edi  +
call esi  +
push 5Ah  +
push edi  +
mov dword_10B1148 eax +
call esi  +
push edi  +
push 0  +
mov dword_10B1144 eax +
call ds:ReleaseDC  +
pop edi  +
jmp loc_10149C6  +
***
lea eax [ebp+WndClass] +
push eax  +
push offset aGhost  +
push 0  +
call ds:GetClassInfoW  +
mov word_10B1080 ax +
jmp loc_1003801  +
***
call ds:IsChild  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_1062DAD  +
pop esi  +
retn   +
***
mov [ebp+var_4] edi +
jmp loc_10105C9  +
***
push esi  +
push offset stru_10148A8  +
push 1  +
push edi  +
push offset stru_10148B8  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_1008EF2  +
mov esi [esi] +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_10148C8  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jl loc_1008EF2  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 2  +
push 2  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1008EF2  +
***
cmp [ebp+plii.dwTime] edi +
jz loc_100854A  +
jmp loc_1009246  +
sub eax [ebp+plii.dwTime] +
dec eax  +
jmp loc_1009261  +
***
cmp dword ptr [ebp-218h] 8000000Ah +
jnz loc_100BD17  +
jmp loc_10632EB  +
***
test eax eax +
jge loc_100BCF3  +
jmp loc_100BD00  +
***
xor eax eax +
jmp loc_1053392  +
***
mov eax [ebp+var_8] +
mov eax [eax+6Ch] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+2Ch]  +
jmp loc_10241BC  +
cmp [ebp+arg_4] ebx +
jnz loc_1024193  +
jmp loc_10241DB  +
***
sub dword ptr [esp+4] 18h +
jmp loc_101DCE0  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1002458  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1002458  +
***
xor eax eax +
jmp loc_100B820  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+hWnd]  +
call ds:GhostWindowFromHungWindow  +
test eax eax +
jnz loc_102ABEB  +
push [ebp+hWnd]  +
mov ecx [ebp+arg_4] +
call sub_100B7E4  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
push eax  +
push eax  +
mov eax [ebp+var_4] +
push 433h  +
push dword ptr [eax+4]  +
call ds:PostMessageW  +
jmp loc_1020D1D  +
test al al +
jz loc_1020D59  +
jmp loc_1020D70  +
test al al +
jz loc_1020D90  +
jmp loc_1020DA7  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
push edi  +
push ebx  +
push 81h  +
jmp loc_1002CA3  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_100242D  +
***
xor eax eax +
jmp loc_10047FB  +
***
push dword ptr [esi]  +
call ds:__imp_CoTaskMemFree  +
jmp loc_10641FA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+var_4] +
mov [ebp+var_C] eax +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_4] 1 +
mov [ebp+var_10] 10h +
mov [ebp+var_8] 4 +
call ds:SetWindowCompositionAttribute  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax-14h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi] 0 +
test eax eax +
jz loc_102ACC7  +
mov ecx [eax] +
push esi  +
push offset dword_102ACD0  +
push eax  +
call dword ptr [ecx]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 4  +
mov ecx esi +
call sub_100801C  +
test eax eax +
jnz loc_100EDA0  +
jmp loc_100EDC8  +
***
mov [ebp+var_4] edi +
jmp loc_1005D90  +
***
mov eax [ebx] +
push ebx  +
call dword ptr [eax+6Ch]  +
test al 1 +
jz loc_100ED68  +
push esi  +
lea ebx [edi+90h] +
push dword ptr [ebx]  +
call ds:off_100407C  +
dec eax  +
js loc_102AD46  +
push eax  +
push dword ptr [ebx]  +
call ds:off_1002B68  +
mov ebx eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
test eax eax +
jnz loc_1065B56  +
push 0  +
lea eax [edi+1Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_100ED68  +
test al al +
jz loc_100EC63  +
jmp loc_10061C4  +
test al al +
jz loc_100B9D8  +
jmp loc_10061CE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
xor eax eax +
cmp edx [ecx+20h] +
mov [ecx+20h] edx +
setnz al  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+6Ch] 0 +
jnz loc_102ADAD  +
call ds:BufferedPaintInit  +
mov dword ptr [esi+6Ch] 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+20h] +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1003C0B  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1003BF1  +
***
or dword_10B1178 esi +
or dword_10B1174 0FFFFFFFFh +
jmp loc_1015B93  +
push offset sub_102AE30  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_1015BA0  +
push offset aIsprocessdpiaw  +
push eax  +
call ds:__imp_GetProcAddress  +
mov dword_10B1174 eax +
jmp loc_1015BA0  +
***
inc ebp  +
add [edx+0] dl +
xor eax [eax] +
xor al [eax] +
add cs:[eax+eax+4Ch] al +
add [eax+eax+0] cl +
add [edi+6Ah] dl +
add byte ptr dword_10B1170[ebx] ah +
call ds:GetDC  +
mov edi eax +
test edi edi +
jz loc_1068354  +
push esi  +
mov esi ds:GetDeviceCaps +
push 58h  +
push edi  +
call esi  +
push 5Ah  +
push edi  +
mov dword_10B10A4 eax +
call esi  +
mov dword_10B10A8 eax +
xor eax eax +
cmp dword_10B10A4 60h +
push edi  +
setnle al  +
push 0  +
mov dword_10B116C eax +
call ds:ReleaseDC  +
pop esi  +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp+0Ch]  +
add edi 0FFFFFFECh +
mov ecx edi +
mov ebx 80004005h +
call sub_1005D6D  +
mov esi eax +
test esi esi +
jz loc_102AEF0  +
push dword ptr [ebp+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+64h]  +
test eax eax +
jz loc_102AF04  +
lea eax [ebp+10h] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
push esi  +
mov ecx edi +
call sub_102AF0E  +
mov ecx [ebp+8] +
mov eax [ebp+0Ch] +
cmp ecx eax +
jl loc_102AEF9  +
mov eax [ebp+10h] +
cmp ecx eax +
jg loc_102AEF9  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp eax 0FFFFFFFFh +
jg loc_1065E09  +
jmp loc_102AEF0  +
***
xor ebx ebx +
inc ebx  +
jmp loc_102AEF0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+90h] +
push edi  +
xor edi edi +
mov [ebp+var_8] esi +
cmp eax edi +
jz loc_102AF84  +
mov ebx [eax] +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov eax [ebp+arg_8] +
mov [eax] ebx +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+60h]  +
mov [ebp+var_4] eax +
cmp eax 0FFFFFFFFh +
jz loc_102AF78  +
cmp ebx edi +
jle loc_102AF78  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+60h]  +
cmp esi [ebp+arg_0] +
jz loc_102AF73  +
cmp eax 0FFFFFFFFh +
jz loc_102AF73  +
cmp eax [ebp+var_4] +
jge loc_102AF88  +
mov ecx [ebp+arg_4] +
lea eax [edi+1] +
mov [ecx] eax +
inc edi  +
cmp edi ebx +
jl loc_102AF7F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov esi [ebp+var_8] +
jmp loc_102AF4A  +
xor ebx ebx +
jmp loc_102AF2B  +
jle loc_102AF73  +
jmp loc_1064D0E  +
***
mov edi edi +
dec ebp  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax hWnd +
push esi  +
push 28h  +
mov [ebp+var_4] eax +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102B077  +
mov ecx eax +
call sub_102B080  +
mov esi eax +
test esi esi +
jz loc_102B072  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_1020548  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_102B06C  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_102B063  +
mov [esi+18h] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
leave   +
retn 4  +
xor esi esi +
jmp loc_102B029  +
***
call sub_1029EEC  +
and dword ptr [edx+1Ch] 0 +
mov dword ptr [edx] offset off_102B0E8 +
mov dword ptr [edx+0Ch] offset off_102B0D0 +
mov dword ptr [edx+10h] offset off_102B0C0 +
mov dword ptr [edx+14h] offset off_102B0B0 +
mov eax edx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_102B11E  +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+4]  +
mov eax [ecx+4] +
jz loc_1055BD0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov ecx [ebp+0Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_102B15A  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
push edi  +
lea ecx [ebp+var_2C] +
call sub_102427A  +
lea eax [ebp+var_30] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push 0  +
push 0  +
push [ebp+arg_0]  +
lea edi [esi+2E0h] +
mov ecx edi +
call sub_1024417  +
test eax eax +
jz loc_102B1BB  +
cmp [ebp+var_30] 0 +
jz loc_102B1BB  +
lea eax [ebp+var_2C] +
push eax  +
mov ecx esi +
call sub_102A2F4  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_102B1BB  +
push eax  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_102B1DB  +
lea ecx [ebp+var_2C] +
call sub_102422E  +
mov ecx [ebp+var_4] +
xor eax eax +
pop edi  +
xor ecx ebp +
inc eax  +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:off_1002B68  +
mov ecx [ebp+arg_4] +
push eax  +
call sub_102B1FD  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
mov [ebp+var_4] 7FFFFFFFh +
test eax eax +
jz loc_102B242  +
push ebx  +
mov ebx [eax] +
push edi  +
xor edi edi +
test ebx ebx +
jle loc_102B240  +
push edi  +
mov ecx esi +
call sub_1022652  +
test eax eax +
jz loc_102B23B  +
mov ecx eax +
call sub_102A1F2  +
mov ecx [ebp+arg_0] +
cmp eax [ecx+664h] +
ja loc_102B254  +
inc edi  +
cmp edi ebx +
jl loc_102B21D  +
pop edi  +
pop ebx  +
push [ebp+var_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_10227D5  +
pop esi  +
leave   +
retn 4  +
mov [ebp+var_4] edi +
jmp loc_102B240  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 104h +
push esi  +
push edi  +
push edi  +
call sub_103311F  +
lea eax [edi+218h] +
push esi  +
push eax  +
push eax  +
call sub_103311F  +
push edi  +
call sub_10244C7  +
test eax eax +
jz loc_102B2A5  +
lea eax [edi+462h] +
push 101h  +
push eax  +
push eax  +
call sub_103311F  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
lea eax [edi+45Ch] +
push esi  +
jmp loc_102B298  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
cmp [ebp+hKey] 1 +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov edi offset aSoftwareClasse +
mov esi 80000001h +
jz loc_105926E  +
push [ebp+hKey]  +
push offset aIconstreams  +
push edi  +
push esi  +
call ds:SHOpenRegStream2W  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_102B33F  +
push eax  +
call ds:IStream_Reset  +
test eax eax +
jl loc_102B33F  +
cmp [ebp+hKey] 0 +
push [ebp+arg_8]  +
mov ecx ebx +
push [ebp+arg_4]  +
push [ebp+var_4]  +
jnz loc_10592AD  +
call sub_102B350  +
test eax eax +
jl loc_10592A1  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_8] 0 +
jnz loc_10592D2  +
cmp dword ptr [ebx+30h] 0 +
jnz loc_1059309  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
cmp [ebp+hKey] 0 +
jz loc_10592C6  +
jmp loc_102B32E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor esi esi +
mov [ebp+var_28] esi +
lea edi [ebp+var_24] +
stos   +
stos   +
stos   +
stos   +
mov edi [ebp+arg_0] +
push 14h  +
lea eax [ebp+var_28] +
push eax  +
mov ebx ecx +
push edi  +
mov [ebp+var_4] ebx +
call ds:IStream_Read  +
cmp eax esi +
mov [ebp+var_8] eax +
jl loc_102B4C4  +
cmp [ebp+var_28] 14h +
jnz loc_102B4E1  +
push [ebp+var_24]  +
mov ecx ebx +
call sub_102A2A8  +
test eax eax +
jz loc_102B4E1  +
cmp [ebp+var_20] 10001h +
jnz loc_102B4E1  +
cmp [ebp+var_1C] esi +
jbe loc_102B4E1  +
mov eax [ebp+var_18] +
mov ecx [edi] +
push esi  +
push esi  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+14h]  +
mov [ebp+var_8] eax +
cmp eax esi +
jnz loc_102B4C4  +
cmp [ebx] esi +
jnz loc_102B3E8  +
push 0Ah  +
mov ecx ebx +
call sub_100801C  +
test eax eax +
jz loc_102B4E1  +
cmp [ebp+var_24] 7 +
jb loc_10590B7  +
mov eax [ebp+var_1C] +
cmp eax esi +
mov [ebp+var_14] eax +
mov [ebp+var_C] esi +
jle loc_102B4B2  +
push 668h  +
call sub_1002B98  +
mov ebx eax +
pop ecx  +
mov ecx [ebp+var_4] +
cmp ebx esi +
jz loc_105914D  +
push [ebp+var_24]  +
call sub_102A27C  +
push eax  +
push ebx  +
push [ebp+arg_0]  +
call ds:IStream_Read  +
cmp eax esi +
mov [ebp+var_8] eax +
jl loc_102B471  +
cmp [ebp+var_24] 4 +
jz loc_10590C3  +
cmp [ebp+var_24] 7 +
jb loc_10590D9  +
push ebx  +
call sub_102B25E  +
mov eax [ebx+210h] +
test al 4 +
jnz loc_105911B  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_102B46B  +
push 2  +
pop ecx  +
cmp eax ecx +
jnz loc_102B4CE  +
mov [ebx+210h] ecx +
cmp [ebp+var_8] esi +
mov [ebp+var_10] esi +
jl loc_102B4D6  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
call sub_1006610  +
test eax eax +
jl loc_102B4D6  +
cmp [ebp+arg_4] esi +
jz loc_102B49B  +
push esi  +
push 2  +
push [ebp+arg_8]  +
push [ebp+var_10]  +
call [ebp+arg_4]  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_14] +
jl loc_102B403  +
cmp [ebp+var_8] esi +
jl loc_102B4C4  +
mov ebx [ebp+var_4] +
push [ebp+var_20]  +
mov ecx ebx +
call sub_102CAC4  +
test eax eax +
jz loc_105916C  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov [ebx+210h] esi +
jmp loc_102B471  +
push ebx  +
call sub_1002BCA  +
jmp loc_105912A  +
mov eax 80004005h +
jmp loc_102B4C7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor ebx ebx +
lea edi [esi+6Ch] +
mov [ebp+var_10] ebx +
cmp [edi] ebx +
jnz loc_102B525  +
push edi  +
push offset stru_100DD00  +
push 1  +
push ebx  +
push offset stru_1029D80  +
call ds:__imp_CoCreateInstance  +
cmp eax ebx +
mov [ebp+var_10] eax +
jl loc_102B6A0  +
push offset dword_1029DA0  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_102B6A0  +
mov edi [edi] +
mov eax [edi] +
lea ecx [ebp+var_20] +
push ecx  +
push edi  +
call dword ptr [eax+14h]  +
mov eax [ebp+var_20] +
cmp [esi+70h] eax +
jz loc_102B6A0  +
push 3  +
lea ecx [ebp+var_C] +
mov [esi+70h] eax +
mov [ebp+var_C] ebx +
call sub_100801C  +
test eax eax +
jz loc_102B698  +
mov [ebp+var_14] ebx +
mov eax [esi+0A8h] +
cmp eax ebx +
jnz loc_1063A64  +
xor eax eax +
mov ecx [ebp+var_14] +
cmp ecx eax +
jl loc_1063A6B  +
mov eax [esi+6Ch] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
mov [ebp+var_10] eax +
jl loc_102B681  +
xor edi edi +
inc edi  +
push edi  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] ebx +
call sub_100801C  +
test eax eax +
jz loc_102B670  +
mov [ebp+var_18] ebx +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+pidl] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_102B659  +
cmp dword_10B115C ebx +
jnz loc_102B5E7  +
push 0Bh  +
push ebx  +
push [ebp+pidl]  +
push offset dword_10B2478  +
call sub_102E3FE  +
push edi  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+pidl]  +
mov ecx esi +
call sub_102B6DC  +
push [ebp+pidl]  +
mov [ebp+var_10] eax +
call ds:__imp_SHELL32_155  +
cmp [ebp+var_10] ebx +
jl loc_102B5B8  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call ds:off_100407C  +
cmp eax ebx +
jge loc_1063A93  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_102B636  +
cmp [ebp+var_24] ebx +
jg loc_1063AA2  +
push [ebp+var_18]  +
mov eax [esi+94h] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
inc [ebp+var_18]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_102B5B8  +
mov [ebp+var_18] ebx +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_102B6CF  +
mov ecx [eax] +
mov edx [ebp+var_18] +
cmp edx ecx +
jl loc_1063ABC  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_14] +
call sub_10082DC  +
mov [ebp+var_18] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_102B6D3  +
mov ecx [eax] +
mov edx [ebp+var_18] +
cmp edx ecx +
jl loc_1063B17  +
lea ecx [ebp+var_C] +
call sub_10082DC  +
mov edi 446h +
push 980003h  +
push edi  +
push edi  +
push dword ptr [esi+4]  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_102B6A5  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
mov dword_10B115C 1 +
pop ebx  +
leave   +
retn   +
xor ecx ecx +
jmp loc_102B665  +
xor ecx ecx +
jmp loc_102B68D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 620h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+pidl] +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
cmp [ebp+arg_C] 0 +
push edi  +
mov edi ecx +
jz loc_102B71A  +
push esi  +
push ebx  +
call sub_1010599  +
mov [ebp+var_620] eax +
test eax eax +
jge loc_106364B  +
mov eax 104h +
push eax  +
lea ecx [ebp+var_414] +
push ecx  +
push eax  +
lea ecx [ebp+var_20C] +
push ecx  +
push eax  +
lea eax [ebp+var_61C] +
push eax  +
push [ebp+arg_C]  +
mov ecx edi +
push ebx  +
call sub_10240E5  +
mov [ebp+var_620] eax +
test eax eax +
jl loc_102B806  +
cmp dword ptr [esi] 0 +
jnz loc_102B82B  +
push esi  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
mov ecx edi +
call sub_102BCCC  +
mov [ebp+var_620] eax +
test eax eax +
jge loc_102B82B  +
push esi  +
push offset dword_100EAF4  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_61C] +
push eax  +
push ebx  +
call sub_100EBBF  +
mov [ebp+var_620] eax +
test eax eax +
jl loc_102B806  +
lea ebx [edi+0A8h] +
cmp dword ptr [ebx] 0 +
jz loc_102B81D  +
push 0  +
push dword ptr [esi]  +
mov ecx ebx +
call sub_1006610  +
xor ebx ebx +
cmp eax ebx +
mov [ebp+var_620] eax +
jl loc_102B7C6  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_414] +
push edx  +
push eax  +
call dword ptr [ecx+7Ch]  +
push ebx  +
push dword ptr [esi]  +
mov ecx edi +
call sub_100A5CB  +
mov eax [esi] +
mov edx [eax] +
xor ecx ecx +
cmp [ebp+arg_8] ebx +
setnz cl  +
inc ecx  +
push ecx  +
push ecx  +
push eax  +
call dword ptr [edx+70h]  +
cmp [ebp+arg_8] ebx +
jnz loc_102B806  +
mov edi [edi+94h] +
mov eax [edi] +
push ebx  +
push dword ptr [esi]  +
push edi  +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_620] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
push 1  +
mov ecx ebx +
call sub_100801C  +
jmp loc_102B7A7  +
cmp [ebp+arg_8] 0 +
jz loc_1063660  +
jmp loc_102B806  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jge loc_102B86A  +
push 1  +
mov ecx offset unk_10B1460 +
call sub_102A12B  +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push offset stru_1035344  +
push [ebp+var_4]  +
push esi  +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_102B891  +
push [ebp+arg_0]  +
call sub_102CC9D  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc edi  +
jmp loc_102B849  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push esi  +
push edi  +
mov esi ecx +
call sub_102B901  +
or dword ptr [esi+0CE4h] 0FFFFFFFFh +
push 0Ah  +
pop ecx  +
xor eax eax +
mov [ebp+rc.left] 2Ch +
lea edi [ebp+rc.top] +
stos   +
xor edi edi +
push edi  +
lea eax [ebp-10h] +
push eax  +
mov ecx esi +
mov [ebp+rc.right] edi +
call sub_1034137  +
push dword ptr [esi+0C54h]  +
push edi  +
push 403h  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
call ds:SetWindowPlacement  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 264h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetSystemMetrics +
push 1  +
mov esi ecx +
call edi  +
push eax  +
xor ebx ebx +
push ebx  +
call edi  +
push eax  +
push ebx  +
push ebx  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:SetRect  +
push offset aButton  +
push offset aStartbottom  +
push offset aSS_0  +
lea eax [ebp+var_20C] +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 14h +
lea eax [ebp+var_20C] +
push eax  +
push ebx  +
call ds:OpenThemeData  +
mov edi eax +
push edi  +
lea ecx [esi+0AF8h] +
call sub_101DE4F  +
cmp edi ebx +
jz loc_102B985  +
push edi  +
call ds:CloseThemeData  +
lea eax [ebp+var_214] +
push eax  +
mov ecx esi +
call sub_102169F  +
mov edi [esi+0B18h] +
mov ebx [esi+0B1Ch] +
add ebx [ebp+var_210] +
add edi [ebp+var_214] +
and dword ptr [esi+40h] 0 +
push 38h  +
pop eax  +
mov [ebp+pcbData] eax +
mov [ebp+var_218] eax +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push offset aSettings  +
push offset aStuckrects2  +
mov [esi+0CDCh] edi +
mov [esi+0CE0h] ebx +
mov dword ptr [esi+0CD8h] 3 +
push phkResult  +
mov [ebp+var_210] 2 +
call sub_1027C79  +
test eax eax +
jz loc_1057445  +
cmp [ebp+pvData] 28h +
jb loc_102BBE1  +
cmp [ebp+var_250] 0 +
jge loc_102BBE1  +
cmp [ebp+var_248] 3 +
ja loc_102BBE1  +
lea eax [ebp+var_23C] +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
mov ecx esi +
call sub_102055D  +
mov eax [ebp+var_248] +
mov edi [ebp+var_244] +
mov ebx [ebp+var_240] +
mov [esi+0CD8h] eax +
mov eax [ebp+var_24C] +
mov [ebp+var_210] eax +
cmp [esi+0CDCh] edi +
jl loc_10574DE  +
lea eax [esi+0CE0h] +
cmp [eax] ebx +
jl loc_10574E9  +
mov eax [ebp+var_210] +
shr eax 2 +
and eax 1 +
push 40000070h  +
mov [esi+0C48h] eax +
call ds:__imp_SHELL32_100  +
test eax eax +
mov eax [ebp+var_210] +
jnz loc_102BBF3  +
test al 8 +
jnz loc_102BBF3  +
xor edi edi +
xor ecx ecx +
inc edi  +
mov [esi+0C54h] ecx +
mov ecx eax +
shr ecx 4 +
and ecx edi +
mov [esi+0C58h] ecx +
mov ecx eax +
shr ecx 5 +
and ecx edi +
mov [esi+0C5Ch] ecx +
mov ecx eax +
shr ecx 6 +
and ecx edi +
mov [esi+0C60h] ecx +
mov ecx eax +
and al 1 +
movzx eax al +
shr ecx 8 +
and ecx edi +
neg eax  +
sbb eax eax +
mov [esi+0C64h] ecx +
and eax 3 +
mov ecx esi +
mov [esi+40h] eax +
call sub_101F5DD  +
and [ebp+var_210] 0 +
lea ebx [esi+44h] +
push [ebp+var_210]  +
lea eax [ebp+rcSrc] +
push dword ptr [esi+0CE0h]  +
mov ecx esi +
push dword ptr [esi+0CDCh]  +
push eax  +
push ebx  +
call sub_101F680  +
inc [ebp+var_210]  +
add ebx 10h +
cmp [ebp+var_210] 3 +
jbe loc_102BB15  +
mov ebx [esi+0CD8h] +
cmp dword_10B108C ebx +
jz loc_102BBBE  +
mov eax [esi+3Ch] +
mov dword_10B108C ebx +
test eax eax +
jnz loc_10574F0  +
push ebx  +
push 0  +
push 43Fh  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
cmp dword ptr [esi+0D14h] 0 +
jz loc_102BBBE  +
push dword ptr [esi+4]  +
call ds:GetDC  +
lea edi [esi+0C18h] +
push edi  +
push 971h  +
push 0  +
push 0  +
mov ebx eax +
push ebx  +
push dword ptr [esi+0D14h]  +
call ds:GetThemeMetric  +
push ebx  +
push dword ptr [esi+4]  +
call ds:ReleaseDC  +
mov eax [edi] +
mov [esi+42Ch] eax +
mov ecx esi +
call sub_102BC02  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
test eax eax +
jnz loc_102BA09  +
jmp loc_102BA69  +
cmp [ebp+pvData] 38h +
jz loc_105746D  +
jmp loc_102BA69  +
xor edi edi +
inc edi  +
mov ecx edi +
jmp loc_102BABB  +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
push 9  +
mov esi ecx +
pop ecx  +
xor eax eax +
mov [ebp+mi.cbSize] 28h +
lea edi [ebp+mi.rcMonitor] +
stos   +
lea eax [ebp+mi] +
push eax  +
push dword ptr [esi+0CF8h]  +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_102BC7A  +
xor eax eax +
inc eax  +
test byte ptr [ebp+mi.dwFlags] al +
jz loc_102BC7A  +
mov [esi+0D00h] eax +
pop edi  +
pop esi  +
leave   +
retn   +
and dword ptr [esi+0D00h] 0 +
jmp loc_102BC76  +
***
cmp dword ptr [ebp+0Ch] 1 +
jz loc_102BC9C  +
push ebx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
call ds:DefWindowProcW  +
jmp loc_100E02E  +
***
mov esi [ebx] +
push esi  +
push 0FFFFFFEBh  +
push edi  +
mov [esi] edi +
call ds:SetWindowLongW  +
jmp loc_100E020  +
***
jg near ptr loc_102BCC0+1  +
call fword ptr [edx+59h]  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
push edi  +
xor edi edi +
mov ebx ecx +
cmp eax edi +
jz loc_102BCE2  +
mov [eax] edi +
mov eax [ebp+arg_0] +
mov [ebp+var_8] 80004005h +
cmp [eax] di +
jz loc_102BD3F  +
mov eax [ebx+0A8h] +
cmp eax edi +
jz loc_102BD48  +
mov eax [eax] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jle loc_102BD3F  +
push esi  +
mov eax [ebx+0A8h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
test esi esi +
jz loc_102BD38  +
mov eax [esi] +
push esi  +
call dword ptr [eax+5Ch]  +
test eax eax +
jz loc_102BD38  +
mov eax [esi] +
push esi  +
call dword ptr [eax+5Ch]  +
push eax  +
push [ebp+arg_0]  +
call ds:__imp_StrCmpICW  +
test eax eax +
jz loc_1062F5C  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_102BD06  +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
mov [ebp+var_4] edi +
jmp loc_102BD00  +
***
sub dword ptr [esp+4] 4 +
jmp loc_102BD5E  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_102BD7C  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi+8] offset off_1002788 +
mov dword ptr [esi+0Ch] 1 +
mov dword ptr [esi] offset off_1003B70 +
mov dword ptr [esi+4] offset off_10120E0 +
mov dword ptr [esi+8] offset off_1029DC0 +
mov dword ptr [esi+10h] offset off_102CA58 +
mov dword ptr [esi+14h] offset off_102CA2C +
mov dword ptr [esi+18h] offset off_101E668 +
mov dword ptr [esi+1Ch] offset off_1024070 +
and dword ptr [esi+68h] 0 +
lea ecx [esi+70h] +
call sub_102BE3C  +
push 0FFFFFFF6h  +
pop eax  +
mov [esi+118h] eax +
mov [esi+11Ch] eax +
mov [esi+120h] eax +
mov [esi+124h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
push 10h  +
push offset pvData  +
mov ebx offset aSoftwareMic_17 +
push ebx  +
mov edi 80000001h +
push edi  +
mov esi ecx +
call sub_102C18D  +
push 0Ah  +
push offset aMinthumbsizepx  +
push ebx  +
push edi  +
mov [esi] eax +
call sub_102C18D  +
push 0C8h  +
push offset aMaxthumbsizepx  +
push ebx  +
push edi  +
mov [esi+4] eax +
call sub_102C18D  +
push 30h  +
push offset aTextheightpx  +
push ebx  +
push edi  +
mov [esi+8] eax +
call sub_102C18D  +
push 10h  +
push offset aTopmarginpx  +
push ebx  +
push edi  +
mov [esi+0Ch] eax +
call sub_102C18D  +
push 10h  +
push offset aLeftmarginpx  +
push ebx  +
push edi  +
mov [esi+10h] eax +
call sub_102C18D  +
push 10h  +
push offset aRightmarginpx  +
push ebx  +
push edi  +
mov [esi+14h] eax +
call sub_102C18D  +
push 10h  +
push offset aBottommarginpx  +
push ebx  +
push edi  +
mov [esi+18h] eax +
call sub_102C18D  +
push 11h  +
push offset aThumbspacingxp  +
push ebx  +
push edi  +
mov [esi+1Ch] eax +
call sub_102C18D  +
push 18h  +
push offset aThumbspacingyp  +
push ebx  +
push edi  +
mov [esi+20h] eax +
call sub_102C18D  +
mov ecx [esi] +
xor edx edx +
inc edx  +
cmp ecx edx +
push 20h  +
mov [esi+24h] eax +
pop edi  +
jl loc_1068030  +
cmp ecx edi +
jg loc_1068037  +
mov edx [esi+4] +
cmp edx edi +
mov ecx 200h +
jge loc_102BFD4  +
mov [esi+4] edi +
mov edi [esi+8] +
mov edx [esi+4] +
cmp edi edx +
jl loc_1068046  +
cmp edi ecx +
jg loc_106804E  +
mov edx [esi+10h] +
push 4  +
pop ebx  +
cmp edx ebx +
mov ecx 100h +
jl loc_1068056  +
cmp edx ecx +
jg loc_106805E  +
mov edi [esi+0Ch] +
cmp edi ebx +
jl loc_1068066  +
mov edx [esi+10h] +
cmp edi edx +
jle loc_102BF6A  +
mov [esi+0Ch] edx +
mov edx [esi+14h] +
push 8  +
pop edi  +
cmp edx edi +
jl loc_106806E  +
cmp edx ecx +
jg loc_1068076  +
mov edx [esi+18h] +
cmp edx edi +
jl loc_106807E  +
cmp edx ecx +
jg loc_1068086  +
mov edx [esi+1Ch] +
cmp edx edi +
jl loc_106808E  +
cmp edx ecx +
jg loc_1068096  +
mov edx [esi+20h] +
cmp edx ebx +
mov ecx 80h +
jl loc_106809E  +
cmp edx ecx +
jg loc_10680A6  +
cmp eax edi +
jl loc_10680AE  +
cmp eax ecx +
jg loc_10680B6  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
cmp edx ecx +
jle loc_102BF24  +
jmp loc_106803E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push 4  +
pop eax  +
mov [ebp+pdwType] eax +
mov [ebp+pcbData] eax +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
lea eax [ebp+pdwType] +
push eax  +
push [ebp+pvData]  +
push [ebp+pszSubKey]  +
push [ebp+hkey]  +
call ds:__imp_SHGetValueW  +
test eax eax +
mov eax [ebp+arg_C] +
jz loc_1064250  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
xor edi edi +
push edi  +
push offset aSoftwareClasse  +
push 80000001h  +
mov esi ecx +
mov [ebp+hKey] edi +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1059322  +
push 6  +
lea eax [esi+4] +
push eax  +
push offset aIconCleanupTim  +
push [ebp+hKey]  +
mov ecx esi +
call sub_102C375  +
push 493E0h  +
lea eax [esi+14h] +
push eax  +
push offset aIcondemotetime  +
push [ebp+hKey]  +
mov ecx esi +
call sub_102C375  +
push edi  +
push edi  +
lea ebx [esi+20h] +
push ebx  +
push offset aLastadvertisem  +
push [ebp+hKey]  +
mov ecx esi +
call sub_102A238  +
push 0  +
push 0  +
lea edi [esi+28h] +
push edi  +
push offset aUserstarttime  +
push [ebp+hKey]  +
mov ecx esi +
call sub_102A238  +
push 93A80h  +
lea eax [esi+1Ch] +
push eax  +
push offset aIconexpiration  +
push [ebp+hKey]  +
mov ecx esi +
call sub_102C375  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebx] +
or eax [ebx+4] +
mov ecx esi +
jz loc_105934E  +
push 3  +
call sub_1034CCA  +
push edx  +
push eax  +
mov ecx esi +
call sub_1034C92  +
call sub_101118D  +
mov ebx [edi] +
mov ecx [edi+4] +
mov [ebp+var_8] edx +
mov edx ebx +
or edx ecx +
jz loc_102C2F1  +
cmp ecx [ebp+var_8] +
jnb loc_1059354  +
push 40000055h  +
call ds:__imp_SHELL32_100  +
neg eax  +
sbb eax eax +
neg eax  +
mov ecx esi +
mov [esi+8] eax +
call sub_102DAF7  +
push [ebp+arg_C]  +
xor edi edi +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
mov [esi+0Ch] eax +
push edi  +
call sub_102B2B3  +
cmp [esi+10h] edi +
jz loc_1059367  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
mov [edi] eax +
mov eax [ebp+var_8] +
mov [edi+4] eax +
jmp loc_102C2B0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
cmp [ebp+hKey] eax +
jz locret_102C3AA  +
push esi  +
mov esi [ebp+lpData] +
lea ecx [ebp+cbData] +
push ecx  +
push esi  +
push eax  +
push eax  +
push [ebp+lpValueName]  +
mov [ebp+cbData] 4 +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jz loc_102C3A9  +
mov eax [ebp+arg_C] +
mov [esi] eax +
pop esi  +
leave   +
retn 10h  +
***
push dword ptr [ebp+8]  +
mov ecx ebx +
call sub_102C3C2  +
jmp loc_1002328  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
or [ebp+var_14] 0FFFFFFFFh +
push ebx  +
mov ebx ecx +
mov eax 7FFFh +
push esi  +
xor esi esi +
mov [ebx+350h] eax +
mov [ebx+354h] eax +
xor eax eax +
inc eax  +
push edi  +
push 4000006Ah  +
mov [ebx+328h] eax +
mov [ebx+370h] eax +
mov [ebx+340h] esi +
mov [ebx+344h] esi +
mov [ebx+348h] eax +
mov [ebx+320h] esi +
mov [ebx+374h] esi +
mov [ebx+378h] esi +
mov [ebx+380h] esi +
mov [ebx+90h] esi +
mov [ebx+390h] esi +
mov [ebx+384h] esi +
mov dword ptr [ebx+388h] 4 +
mov [ebx+38Ch] esi +
mov [ebx+37Ch] esi +
call ds:__imp_SHELL32_100  +
neg eax  +
sbb eax eax +
or dword ptr [ebx+358h] 0FFFFFFFFh +
neg eax  +
mov ecx ebx +
mov [ebx+330h] eax +
call sub_102A2CF  +
mov eax [ebp+arg_0] +
mov [ebx+10h] eax +
push hInstance  +
push 12Fh  +
push eax  +
call sub_102D891  +
mov [ebx+18h] eax +
push hInstance  +
push 133h  +
push dword ptr [ebx+10h]  +
call sub_102DC69  +
push dword ptr [ebx+10h]  +
mov [ebx+28h] eax +
push hInstance  +
lea ecx [ebx+2Ch] +
call sub_102DBA5  +
push esi  +
push esi  +
push esi  +
push dword ptr [ebx+10h]  +
lea eax [ebx+0Ch] +
push esi  +
push esi  +
push esi  +
push esi  +
push 56010001h  +
push esi  +
push offset aSyspager  +
push esi  +
mov [ebx+68h] eax +
call sub_103510B  +
mov esi ds:GetSystemMetrics +
push 31h  +
mov [ebx+1Ch] eax +
call esi  +
cdq   +
sub eax edx +
mov edi eax +
push 32h  +
sar edi 1 +
call esi  +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+dwExStyle] eax +
push 31h  +
call esi  +
push 32h  +
mov dword ptr [ebp+var_24] eax +
call esi  +
push [ebp+dwExStyle]  +
mov esi 5E0h +
push edi  +
push 251h  +
push hInstance  +
lea ecx [ebx+29Ch] +
push esi  +
push dword ptr [ebx+1Ch]  +
mov dword ptr [ebp+var_20] eax +
call sub_102C86F  +
push dword ptr [ebp+var_20]  +
mov [ebp+var_18] eax +
push dword ptr [ebp+var_24]  +
mov eax [ebx+2Ch] +
push 24Fh  +
push hInstance  +
lea ecx [ebx+2ACh] +
push esi  +
push eax  +
call sub_102C86F  +
push [ebp+dwExStyle]  +
lea ecx [ebx+2BCh] +
push edi  +
push 24Eh  +
push hInstance  +
mov [ebp+var_1C] eax +
push esi  +
push dword ptr [ebx+10h]  +
call sub_102C86F  +
lea esi [ebx+2CCh] +
lea edi [ebx+29Ch] +
push edi  +
mov ecx esi +
mov dword ptr [ebp+var_20] eax +
call sub_102DA4B  +
mov byte ptr [ebp+arg_0+3] al +
test al al +
jz loc_102C59E  +
lea eax [ebx+2ACh] +
push eax  +
mov ecx esi +
call sub_102DAA1  +
lea eax [ebx+2BCh] +
push eax  +
mov ecx esi +
call sub_102DAA1  +
lea ecx [ebx+2ACh] +
mov eax [ecx] +
mov [ebx+38h] eax +
mov [ebx+64h] ecx +
call sub_102A221  +
mov ecx edi +
call sub_102A221  +
lea edi [ebx+814h] +
mov esi offset dword_1021CA0 +
movs   +
movs   +
movs   +
mov ecx ebx +
movs   +
call sub_102A575  +
xor edi edi +
push edi  +
push hInstance  +
push 5DEh  +
push dword ptr [ebx+10h]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 50000000h  +
push edi  +
push offset aButton  +
push edi  +
call sub_103510B  +
mov [ebx+14h] eax +
mov eax [ebx+10h] +
cmp eax edi +
jz loc_102C65E  +
push 0FFFFFFECh  +
push eax  +
mov [ebp+dwExStyle] edi +
call ds:GetWindowLongW  +
mov ecx 400000h +
test eax ecx +
jnz loc_105B1F7  +
push edi  +
push hInstance  +
mov esi offset aTooltips_class +
push edi  +
push dword ptr [ebx+10h]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 80000003h  +
push edi  +
push esi  +
push [ebp+dwExStyle]  +
call sub_103510B  +
push edi  +
mov [ebx+24h] eax +
push hInstance  +
push edi  +
push dword ptr [ebx+10h]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 800006C3h  +
push edi  +
push esi  +
push [ebp+dwExStyle]  +
call sub_103510B  +
mov [ebx+20h] eax +
cmp [ebp+var_18] edi +
jz loc_102C84D  +
cmp [ebp+var_1C] edi +
jz loc_102C84D  +
cmp dword ptr [ebp+var_20] edi +
jz loc_102C84D  +
mov eax [ebx+10h] +
cmp eax edi +
jz loc_102C84D  +
cmp byte ptr [ebp+arg_0+3] 0 +
jz loc_102C84D  +
cmp [ebx+1Ch] edi +
jz loc_102C84D  +
cmp [ebx+14h] edi +
jz loc_102C84D  +
cmp [ebx+24h] edi +
jz loc_102C84D  +
cmp [ebx+20h] edi +
jz loc_102C84D  +
cmp [ebx+18h] edi +
jz loc_102C84D  +
cmp [ebx+28h] edi +
jz loc_102C84D  +
push 104h  +
lea ecx [ebx+94h] +
push ecx  +
push eax  +
call sub_100AF93  +
mov esi ds:SendMessageW +
push edi  +
push 1  +
push 200Ch  +
push dword ptr [ebx+20h]  +
call esi  +
push edi  +
push 1  +
push 200Ch  +
push dword ptr [ebx+24h]  +
call esi  +
push 2Ch  +
lea eax [ebp+var_50] +
push edi  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov eax [ebx+10h] +
add esp 0Ch +
push edi  +
push 6  +
push 2007h  +
push dword ptr [ebx+20h]  +
mov [ebp+var_4C] eax +
mov [ebp+var_50] 121h +
mov [ebp+var_48] eax +
mov [ebp+var_10] edi +
mov [ebp+var_C] 0FFFFFFFEh +
mov [ebp+var_8] edi +
mov [ebp+dwExStyle] edi +
call esi  +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 432h  +
push dword ptr [ebx+20h]  +
call esi  +
push 12Ch  +
push edi  +
push 418h  +
push dword ptr [ebx+20h]  +
call esi  +
lea eax [ebp+var_10] +
push eax  +
push edi  +
push 41Ah  +
push dword ptr [ebx+20h]  +
call esi  +
push 0Ah  +
lea ecx [ebx+33Ch] +
call sub_100801C  +
push dword ptr [ebx+29Ch]  +
push edi  +
push 1401h  +
push dword ptr [ebx+1Ch]  +
call esi  +
mov [ebp+arg_0] edi +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_1010881  +
mov ecx eax +
push 2710h  +
mov dword ptr [ebp+var_20] ecx +
call sub_102A1A6  +
mov eax dword ptr [ebp+var_20] +
push ebx  +
push edi  +
push offset loc_10108A1  +
push dword ptr [eax]  +
call sub_10351CD  +
inc [ebp+arg_0]  +
cmp [ebp+arg_0] 3 +
jb loc_102C788  +
push ebx  +
push edi  +
push offset loc_100D9AB  +
push dword ptr [ebx+20h]  +
call sub_10351CD  +
mov eax [ebx+14h] +
or [ebp+var_30] 0FFFFFFFFh +
mov [ebp+var_4C] eax +
mov [ebp+var_48] eax +
mov eax hInstance +
mov [ebp+var_34] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 432h  +
push dword ptr [ebx+24h]  +
mov [ebp+lParam] 30h +
mov [ebp+var_50] 4001h +
call esi  +
push ebx  +
push edi  +
push offset loc_1010A70  +
push dword ptr [ebx+14h]  +
call sub_10351CD  +
mov eax [ebx+2A8h] +
mov ecx [ebx+29Ch] +
push eax  +
push ebx  +
push offset loc_102B13B  +
push ecx  +
call sub_102A6C9  +
push eax  +
lea ecx [ebx+2E0h] +
call sub_102C1CC  +
call sub_102DB2F  +
test eax eax +
jz loc_102C84A  +
push edi  +
push 7530h  +
push 9  +
push dword ptr [ebx+10h]  +
call ds:SetTimer  +
mov [ebp+var_14] edi +
mov eax [ebp+var_14] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+hInstance] +
mov eax [ebp+hWndParent] +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
push edx  +
mov esi ecx +
mov ecx [ebp+hMenu] +
push ecx  +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 56008B4Ch  +
push ebx  +
push offset aToolbarwindow3  +
push 80h  +
call sub_103510B  +
mov [esi] eax +
cmp eax ebx +
jz loc_102C93F  +
push edi  +
push 40h  +
lea eax [ebp+String] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi]  +
call ds:SetWindowTextW  +
mov edi ds:SendMessageW +
push ebx  +
push 14h  +
push 41Eh  +
push dword ptr [esi]  +
call edi  +
movzx eax [ebp+arg_14] +
movzx ecx [ebp+arg_10] +
shl eax 10h +
or eax ecx +
push eax  +
push ebx  +
push 457h  +
push dword ptr [esi]  +
call edi  +
push ebx  +
push ebx  +
push 43Ch  +
push dword ptr [esi]  +
call edi  +
push ebx  +
push 6  +
push 2007h  +
push dword ptr [esi]  +
call edi  +
push ebx  +
push 2  +
push 42Fh  +
push dword ptr [esi]  +
call edi  +
push 2A0h  +
push ebx  +
push 454h  +
push dword ptr [esi]  +
call edi  +
pop edi  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [esi] ebx +
pop esi  +
setnz al  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
push 1C8h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102C9B9  +
mov ecx eax +
call sub_102BDC9  +
mov esi eax +
test esi esi +
jz loc_102C9BD  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
push [ebp+pvParam]  +
mov ecx esi +
call sub_102F247  +
jmp loc_100E14C  +
xor ecx ecx +
inc ecx  +
cmp edi ecx +
jnz loc_100E13E  +
jmp loc_100E0E8  +
xor esi esi +
jmp loc_102C990  +
or [ebp+var_48] 0FFFFFFFFh +
jmp loc_100E14F  +
mov eax [ebx] +
push 0  +
push ebx  +
call dword ptr [eax+44h]  +
jmp loc_100E14F  +
mov [ebp+var_48] ecx +
jmp loc_100E14F  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1003BF1  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1003BF1  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1003BF1  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1003C0B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
push offset aPasticonsstrea  +
push offset aSoftwareClasse  +
push 80000001h  +
mov [ebp+var_4] ecx +
call ds:SHOpenRegStream2W  +
mov esi eax +
cmp esi ebx +
jz loc_102CB53  +
push edi  +
xor eax eax +
mov [ebp+var_18] ebx +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
push 14h  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
call ds:IStream_Read  +
test eax eax +
jl loc_102CB4C  +
cmp [ebp+var_18] 14h +
jnz loc_102CB4C  +
mov edi [ebp+var_4] +
push [ebp+var_14]  +
mov ecx edi +
call sub_102A2A8  +
test eax eax +
jz loc_102CB4C  +
mov eax [ebp+var_10] +
cmp eax [ebp+arg_0] +
jnz loc_102CB4C  +
cmp [ebp+var_C] ebx +
jbe loc_102CB4C  +
mov eax [ebp+var_8] +
mov ecx [esi] +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+14h]  +
test eax eax +
jnz loc_102CB4C  +
push esi  +
call ds:off_102CB64  +
mov [edi+10h] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ecx+10h] ebx +
pop esi  +
setnz al  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2280 0FFFFFFFFh +
jnz loc_102CB8A  +
push offset aImagelist_read  +
push offset dword_10B2280  +
call sub_1012091  +
mov eax dword_10B2280 +
test eax eax +
jz loc_105CC58  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
xor esi esi +
mov [ebp-1Ch] edi +
cmp [ebx+24h] esi +
jnz loc_102CBE6  +
push esi  +
push esi  +
push esi  +
push 4  +
push offset dword_1035354  +
push edi  +
call ds:IUnknown_Exec  +
cmp dword_10B20D8 esi +
jnz loc_1054700  +
mov eax [ebx+10h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax esi +
mov [ebp-18h] eax +
jl loc_102CC71  +
mov eax [edi] +
lea ecx [ebp-20h] +
push ecx  +
push offset sub_1027B3C  +
push edi  +
call dword ptr [eax]  +
test eax eax +
jge loc_1054741  +
mov eax [ebx+2Ch] +
cmp eax esi +
jnz loc_105477B  +
push 0FFFFFFECh  +
push dword ptr [ebx+1Ch]  +
call ds:GetWindowLongW  +
test al 20h +
jnz loc_105479E  +
movsx eax word ptr [ebp-18h] +
lea ecx [ebp-1Ch] +
push ecx  +
push offset dword_102CC88  +
mov [ebp-24h] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax]  +
test eax eax +
jge loc_10547B3  +
call sub_1035439  +
test eax eax +
jnz loc_1054809  +
push edi  +
call sub_102CC9D  +
mov ecx offset unk_10B1460 +
call sub_101F58F  +
mov ecx [ebp-4] +
mov eax [ebp-18h] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
call ds:IsAppThemed  +
test eax eax +
jz loc_102CCE8  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_102CCE8  +
xor esi esi +
inc esi  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset dword_101DA78  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_102CCE3  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
leave   +
retn 4  +
xor esi esi +
jmp loc_102CCBB  +
***
mov ecx ebx +
call sub_102CCFD  +
jmp loc_1002208  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov esi ecx +
mov eax [esi+4] +
inc ebx  +
push ebx  +
push offset aAllowconsentto  +
mov hWnd eax +
push dword ptr [esi+4]  +
call ds:SetPropW  +
mov ecx esi +
call sub_1015DD8  +
push dword ptr [esi+4]  +
call SndVolSSO_1  +
xor edi edi +
push edi  +
push 3  +
push 127h  +
push dword ptr [esi+4]  +
mov [esi+0C94h] eax +
call ds:SendMessageW  +
mov ecx esi +
call sub_1029FB9  +
xor eax eax +
cmp [esi+0D14h] edi +
setz al  +
push eax  +
push 840000h  +
push dword ptr [esi+4]  +
call sub_10149F4  +
push 27h  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+4]  +
call ds:SetWindowPos  +
mov ecx esi +
call sub_102A05B  +
test eax eax +
jz loc_102CD95  +
mov ecx esi +
call sub_102CDD8  +
mov [ebp+var_4] eax +
push 4  +
pop edi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
push 8  +
push dword ptr [esi+4]  +
mov [ebp+var_8] ebx +
call ds:DwmSetWindowAttribute  +
lea eax [ebp+var_C] +
mov [ebp+var_14] eax +
lea eax [ebp+var_18] +
push eax  +
push dword ptr [esi+4]  +
mov [ebp+var_C] ebx +
mov [ebp+var_18] 10h +
mov [ebp+var_10] edi +
call ds:SetWindowCompositionAttribute  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
call sub_102D589  +
test eax eax +
jz loc_102CF9C  +
mov ecx esi +
call sub_102D23D  +
test eax eax +
jz loc_102CF9C  +
mov ecx esi +
call sub_101E74B  +
mov ecx esi +
call sub_102B899  +
mov ecx esi +
call sub_1029F0F  +
push dword ptr [esi+0C54h]  +
xor ebx ebx +
push ebx  +
push 402h  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
call sub_102AF94  +
mov [esi+3Ch] eax +
cmp eax ebx +
jz loc_102CF9C  +
push edi  +
lea edi [esi+0CA8h] +
push edi  +
push eax  +
call ds:IUnknown_GetWindow  +
mov ecx esi +
call sub_101E7EF  +
push ebx  +
push 400h  +
push dword ptr [edi]  +
call sub_10149F4  +
push 1  +
push 10h  +
push dword ptr [edi]  +
call sub_10149F4  +
mov edi ds:__imp_SHELL32_100 +
push 40000071h  +
call edi  +
test eax eax +
jnz loc_102CE8F  +
push ebx  +
push 927C0h  +
push 15h  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
push 40000057h  +
call edi  +
mov ebx ds:SHELL32_2 +
test eax eax +
jnz loc_102CF00  +
lea eax [ebp+var_4] +
push eax  +
xor eax eax +
push eax  +
push eax  +
push 803Bh  +
push eax  +
call ds:SHGetFolderLocation  +
test eax eax +
jl loc_102CF00  +
push [ebp+var_4]  +
call ds:__imp_SHELL32_17  +
test eax eax +
jz loc_102CF00  +
mov ecx [ebp+var_4] +
mov [ebp+var_C] ecx +
xor eax eax +
lea ecx [ebp+var_C] +
push ecx  +
inc eax  +
push eax  +
push 551h  +
push 800300Ah  +
push 8003h  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
call ebx  +
mov ecx esi +
mov [esi+0D68h] eax +
call sub_101F4D7  +
push [ebp+var_4]  +
call ds:__imp_SHELL32_155  +
push 40000065h  +
call edi  +
test eax eax +
jnz loc_1058ADC  +
lea eax [ebp+var_C] +
push eax  +
push 1  +
push 551h  +
push 4000000h  +
push 8002h  +
push dword ptr [esi+4]  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
call ebx  +
mov [esi+0D8Ch] eax +
push offset loc_102CFC0  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_102CF75  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push 10h  +
push offset aRestarttimer  +
push offset szDir  +
push 80000002h  +
mov [ebp+var_4] 4 +
call ds:__imp_SHRegGetValueW  +
test eax eax +
jz loc_1058AF6  +
mov eax [esi+3Ch] +
cmp eax edi +
jz loc_102CF88  +
push eax  +
call sub_102CFD5  +
mov [esi+0DECh] eax +
xor eax eax +
cmp [esi+0DECh] edi +
pop edi  +
setnz al  +
lea eax [eax+eax-1] +
pop esi  +
pop ebx  +
leave   +
retn   +
or eax 0FFFFFFFFh +
jmp loc_102CF98  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
call sub_100E551  +
test eax eax +
jz loc_102CFF2  +
mov ecx eax +
call sub_102CFFE  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
lea esi [ecx+18h] +
cmp dword ptr [esi] 0 +
jnz loc_102D02C  +
push edi  +
call sub_1023D3E  +
mov edi eax +
test edi edi +
jz loc_102D026  +
mov eax [edi] +
push esi  +
push offset iid  +
push edi  +
call dword ptr [eax]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
cmp dword ptr [esi] 0 +
pop edi  +
jz loc_102D034  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi] +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push pUnk  +
call sub_100E551  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jz loc_102D10F  +
push edi  +
push offset aTaskbarwinxp  +
push ebx  +
mov [ebp+var_8] 80004005h +
call sub_1029DF2  +
mov edi eax +
cmp edi ebx +
jz loc_1054827  +
push esi  +
push edi  +
call sub_102D122  +
mov [ebp+var_8] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
cmp [ebp+var_8] ebx +
jl loc_1054827  +
cmp [ebp+var_8] 0 +
mov [ebp+var_4] ebx +
mov ebx offset dword_100D864 +
mov edi offset stru_101DD90 +
jl loc_1054857  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push ebx  +
push edi  +
push esi  +
call sub_101EA9C  +
test eax eax +
jl loc_1054857  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push ebx  +
push edi  +
push esi  +
call sub_101EA9C  +
cmp [ebp+var_4] 1 +
jg loc_102D113  +
mov ecx esi +
call sub_102CFFE  +
mov edi eax +
test edi edi +
jz loc_102D101  +
mov eax [edi] +
push 1Ah  +
push offset dword_1023F70  +
push offset dword_1023F40  +
push edi  +
call dword ptr [eax+1Ch]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [esi] +
push esi  +
mov dword ptr [esi+20h] 1 +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
test eax eax +
jge loc_1054869  +
jmp loc_102D0DC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push esi  +
lea edx [ebp+arg_4] +
push edx  +
push offset stru_101DA88  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_102D15B  +
mov eax [ebp+arg_4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
xor esi esi +
jmp loc_102D154  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_102D18A  +
test byte ptr [ebp+8] 1 +
jz loc_102D17E  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1003890 +
mov dword ptr [ecx+4] offset off_1008CAC +
mov dword ptr [ecx+8] offset off_1008CBC +
mov dword ptr [ecx+0Ch] offset off_1008CCC +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 430h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
and [ebp+pvData] 0 +
push esi  +
push edi  +
push 4  +
pop edi  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push offset aStartmenuinit  +
mov ebx offset aSoftwareMicr_0 +
push ebx  +
mov esi 80000001h +
push esi  +
mov [ebp+pcbData] edi +
call ds:__imp_SHGetValueW  +
cmp [ebp+pvData] edi +
jb loc_1055A2F  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
push hInstance  +
mov esi ecx +
push 12Fh  +
push dword ptr [esi+4]  +
lea ecx [esi+98h] +
call sub_102D29D  +
push dword ptr [esi+0CD8h]  +
mov edi ds:SendMessageW +
push 0  +
push 43Fh  +
push eax  +
mov [esi+0C04h] eax +
call edi  +
push 0  +
push 0  +
push 401h  +
push dword ptr [esi+0C04h]  +
call edi  +
mov [esi+0DE0h] eax +
mov eax [esi+0C04h] +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
push 2Ch  +
xor edi edi +
lea eax [ebp+var_34.style] +
push edi  +
push eax  +
mov [ebp+lpParam] ecx +
mov [ebp+var_34.cbSize] 30h +
call memset  +
mov ebx [ebp+arg_8] +
add esp 0Ch +
push 7F00h  +
mov esi offset aTraynotifywnd +
push edi  +
mov [ebp+var_34.lpszClassName] esi +
mov [ebp+var_34.style] 8 +
mov [ebp+var_34.lpfnWndProc] offset loc_1001FFD +
mov [ebp+var_34.hInstance] ebx +
call ds:LoadCursorW  +
mov [ebp+var_34.hCursor] eax +
lea eax [ebp+var_34] +
push eax  +
mov [ebp+var_34.cbWndExtra] 4 +
call ds:RegisterClassExW  +
push ebx  +
call sub_102D80B  +
push ebx  +
call sub_102D351  +
push [ebp+lpParam]  +
push ebx  +
push [ebp+hMenu]  +
push [ebp+hWndParent]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 56000000h  +
push edi  +
push esi  +
push edi  +
call sub_103510B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+WndClass.lpfnWndProc] +
stos   +
mov eax [ebp+arg_0] +
push 7F00h  +
push 0  +
mov [ebp+WndClass.lpszClassName] offset aTrayshowdeskto +
mov [ebp+WndClass.style] 0Bh +
mov [ebp+WndClass.lpfnWndProc] offset loc_1001FFD +
mov [ebp+WndClass.hInstance] eax +
call ds:LoadCursorW  +
and [ebp+WndClass.hbrBackground] 0 +
mov [ebp+WndClass.hCursor] eax +
lea eax [ebp+WndClass] +
push eax  +
mov [ebp+WndClass.cbWndExtra] 4 +
call ds:RegisterClassW  +
movzx eax ax +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call sub_102D507  +
mov edi ds:RegisterWindowMessageW +
push offset aEnableBalloonT  +
call edi  +
push offset aShowonlyquickl  +
mov [esi+0DF4h] eax +
call edi  +
push 4000006Bh  +
mov [esi+0DF8h] eax +
call ds:__imp_SHELL32_100  +
mov edi ds:SHLWAPI_618 +
neg eax  +
sbb eax eax +
neg eax  +
push offset dword_1023F90  +
mov [esi+0C78h] eax +
call edi  +
neg eax  +
sbb eax eax +
neg eax  +
push offset dword_1023F50  +
mov [esi+0C7Ch] eax +
call edi  +
neg eax  +
sbb eax eax +
neg eax  +
push offset dword_1023F60  +
mov [esi+0C80h] eax +
call edi  +
neg eax  +
sbb eax eax +
neg eax  +
mov [esi+0C84h] eax +
call sub_10344B4  +
push esi  +
push hInstance  +
neg eax  +
sbb eax eax +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push 82000000h  +
push ecx  +
and eax 400000h +
or eax 180h +
push offset sub_102D568  +
push eax  +
call sub_103510B  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+WndClass.lpfnWndProc] +
stos   +
mov eax hInstance +
push 7F00h  +
push 0  +
mov [ebp+WndClass.lpszClassName] offset sub_102D568 +
mov [ebp+WndClass.style] 8 +
mov [ebp+WndClass.lpfnWndProc] offset loc_1001FFD +
mov [ebp+WndClass.hInstance] eax +
call ds:LoadCursorW  +
mov [ebp+WndClass.hCursor] eax +
lea eax [ebp+WndClass] +
push eax  +
mov [ebp+WndClass.cbWndExtra] 4 +
mov [ebp+WndClass.hbrBackground] 10h +
call ds:RegisterClassW  +
movzx eax ax +
pop edi  +
leave   +
retn   +
***
add gs:[eax+eax+6Ch] ch +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push offset aLogoffUser  +
mov esi ecx +
call ds:RegisterWindowMessageW  +
push dword ptr [esi+4]  +
lea ecx [esi+0AF8h] +
mov [esi+0D54h] eax +
call sub_102D5ED  +
mov esi eax +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 8  +
push esi  +
mov [ebp+var_4] 1 +
call ds:DwmSetWindowAttribute  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0FFFFFFECh  +
push [ebp+hWndParent]  +
mov esi ecx +
call ds:GetWindowLongW  +
xor edi edi +
push edi  +
push hInstance  +
and eax 403000h +
push edi  +
push [ebp+hWndParent]  +
or eax 80080h +
push 1  +
push 1  +
push edi  +
push edi  +
push 84000C00h  +
push edi  +
push offset aButton  +
push eax  +
call sub_103510B  +
mov [esi+18h] eax +
cmp eax edi +
jz loc_102D68A  +
push 130h  +
push offset aStartbuttontag  +
push eax  +
call ds:SetPropW  +
push edi  +
push edi  +
push 200Ch  +
push dword ptr [esi+18h]  +
call ds:SendMessageW  +
push esi  +
push edi  +
push offset loc_100D879  +
push dword ptr [esi+18h]  +
call sub_10351CD  +
push 32h  +
lea edi [esi+8Ch] +
push edi  +
push 253h  +
push hInstance  +
call ds:LoadStringW  +
push edi  +
push dword ptr [esi+18h]  +
call ds:SetWindowTextW  +
mov eax [esi+18h] +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
call sub_102D6C8  +
jmp loc_100DB15  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
mov eax [esi+0CE4h] +
cmp eax 0FFFFFFFFh +
jz loc_102D801  +
cmp dword ptr [esi+28h] 0 +
jnz loc_102D801  +
cmp dword ptr [esi+0C50h] 0 +
jnz loc_1058674  +
push ebx  +
push edi  +
mov edi [ebp+hDC] +
mov ecx [edi+8] +
mov ebx [edi+10h] +
mov edx [edi+0Ch] +
add ebx ecx +
shl eax 4 +
mov [ebp+rc2.right] ebx +
lea ebx [eax+esi+44h] +
mov [ebp+rc2.left] ecx +
mov ecx [edi+14h] +
lea eax [ebp+rc2] +
push eax  +
add ecx edx +
push ebx  +
mov [ebp+rc2.top] edx +
mov [ebp+rc2.bottom] ecx +
call ds:EqualRect  +
test eax eax +
jz loc_1058680  +
push 2  +
push ebx  +
call ds:MonitorFromRect  +
mov ecx esi +
mov [esi+0CF8h] eax +
call sub_102BC37  +
mov eax [ebx] +
mov [edi+8] eax +
mov eax [ebx+4] +
mov [edi+0Ch] eax +
mov eax [ebx+8] +
sub eax [ebx] +
mov [edi+10h] eax +
mov eax [ebx+0Ch] +
sub eax [ebx+4] +
and dword ptr [edi+18h] 0FFFFFFFCh +
mov [edi+14h] eax +
test byte ptr [esi+40h] 1 +
jnz loc_105869D  +
mov eax [esi+0CE4h] +
cmp eax 3 +
ja loc_102D795  +
lea edi [esi+0CD8h] +
cmp eax [edi] +
jnz loc_10586B4  +
mov eax [esi+0CE4h] +
mov [edi] eax +
mov edi [esi+0CD8h] +
or dword ptr [esi+0CE4h] 0FFFFFFFFh +
cmp dword_10B108C edi +
jz loc_102D7DC  +
mov eax [esi+3Ch] +
mov dword_10B108C edi +
test eax eax +
jnz loc_10586CB  +
push edi  +
push 0  +
push 43Fh  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
cmp dword ptr [esi+0D14h] 0 +
jnz loc_10586EE  +
push 0  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
push ebx  +
push 0  +
call sub_10201EA  +
test byte ptr [esi+40h] 1 +
pop edi  +
pop ebx  +
jnz loc_1058730  +
mov ecx esi +
call sub_101E5AD  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+WndClass.lpfnWndProc] +
stos   +
mov eax [ebp+arg_0] +
push 7F00h  +
push 0  +
mov [ebp+WndClass.lpszClassName] offset aTrayclockwclas +
mov [ebp+WndClass.style] 3 +
mov [ebp+WndClass.lpfnWndProc] offset loc_1001FFD +
mov [ebp+WndClass.hInstance] eax +
call ds:LoadCursorW  +
mov [ebp+WndClass.hCursor] eax +
lea eax [ebp+WndClass] +
push eax  +
mov [ebp+WndClass.hbrBackground] 10h +
mov [ebp+WndClass.cbWndExtra] 4 +
call ds:RegisterClassW  +
movzx eax ax +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 1D0h  +
xor edi edi +
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_102D8E5  +
mov ecx eax +
call sub_102D8EE  +
mov esi eax +
cmp esi edi +
jz loc_102D8DD  +
push esi  +
push [ebp+hInstance]  +
push [ebp+hMenu]  +
push [ebp+hWndParent]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 54000000h  +
push edi  +
push offset aTrayclockwclas  +
push edi  +
call sub_103510B  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor esi esi +
jmp loc_102D8B2  +
***
mov eax ecx +
and dword ptr [eax+1C4h] 0 +
and dword ptr [eax+1C8h] 0 +
xor ecx ecx +
inc ecx  +
mov dword ptr [eax] offset off_102D914 +
mov [eax+8] ecx +
mov [eax+1C0h] ecx +
retn   +
***
call sub_102D94F  +
jmp loc_1035770  +
***
cmp ebx 3 +
jz loc_105160F  +
jmp loc_1035812  +
***
cmp dword ptr [esi+1B4h] 0 +
jz loc_1058D24  +
jmp loc_1035794  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
lea eax [esi+1CCh] +
push eax  +
push offset stru_102D9A0  +
push 1  +
push 0  +
push offset stru_102D9B0  +
call ds:__imp_CoCreateInstance  +
push 0  +
mov ecx esi +
call sub_1035678  +
push offset aClock  +
push dword ptr [esi+4]  +
call ds:OpenThemeData  +
mov ecx esi +
mov [esi+1ACh] eax +
call sub_1011202  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_102D9E9  +
call sub_102422E  +
mov ecx esi +
call sub_102428D  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_102D9F5  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_102DA40  +
and dword ptr [edi+0Ch] 0 +
mov eax [esi+208h] +
mov [edi+14h] eax +
mov eax [esi+210h] +
and dword ptr [edi+8] 0 +
push esi  +
mov [edi+10h] eax +
call sub_10242AF  +
lea eax [esi+218h] +
push eax  +
mov ecx edi +
call sub_1024256  +
add esi 42Ch +
add edi 18h +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
push edi  +
push 1  +
push 0  +
push eax  +
mov edi ecx +
mov [ebp+var_1] 0 +
call sub_102A6C9  +
mov esi ds:GetSystemMetrics +
push eax  +
push 32h  +
call esi  +
push eax  +
push 31h  +
call esi  +
push eax  +
call ds:off_10192F8  +
mov [edi] eax +
test eax eax +
jz loc_102DA92  +
push ebx  +
mov ecx edi +
call sub_102DAA1  +
mov [ebp+var_1] 1 +
mov al [ebp+var_1] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+10h] +
cmp eax 3 +
jnb loc_102DAC0  +
mov edx [ebp+arg_0] +
inc eax  +
mov [ecx+10h] eax +
mov [ecx+eax*4] edx +
push ecx  +
mov ecx edx +
call sub_102DAC9  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+8] eax +
test eax eax +
jz loc_102DAEE  +
mov ecx [ecx] +
test ecx ecx +
jz loc_102DAEE  +
push dword ptr [eax]  +
push 0  +
push 430h  +
push ecx  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
push offset szDir  +
call SHRegGetBoolValueFromHKCUHKLM  +
retn   +
***
call WinSqmEventEnabled  +
retn   +
***
test eax eax +
jnz loc_1059B71  +
mov eax offset aTraynotifyve_1 +
jmp loc_101ECC2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+dwExStyle] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+dwStyle] +
mov esi ecx +
push edi  +
mov [ebp+var_4] 80004005h +
mov [esi+8] edi +
mov [esi+4] eax +
call sub_102A632  +
xor ebx ebx +
test ax ax +
jz loc_102DC2B  +
mov [ebp+dwExStyle] 80h +
call sub_10344B4  +
test eax eax +
jnz loc_105C2A1  +
mov [ebp+dwStyle] 80820000h +
call ds:IsCompositionActive  +
test eax eax +
jz loc_102DBFC  +
mov [ebp+dwStyle] 80860000h +
push esi  +
push edi  +
push ebx  +
push ebx  +
mov eax 80000000h +
push eax  +
push eax  +
push eax  +
push eax  +
push [ebp+dwStyle]  +
push ebx  +
push offset aNotifyiconover  +
push [ebp+dwExStyle]  +
call sub_103510B  +
test eax eax +
jz loc_102DC2B  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov [esi+4] ebx +
jmp loc_102DC21  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 78h  +
xor edi edi +
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_102DCBA  +
mov ecx eax +
call sub_102DCC3  +
mov esi eax +
cmp esi edi +
jz loc_102DCB2  +
push esi  +
push [ebp+hInstance]  +
push [ebp+hMenu]  +
push [ebp+hWndParent]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 54000000h  +
push edi  +
push offset aTrayshowdeskto  +
push edi  +
call sub_103510B  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor esi esi +
jmp loc_102DC87  +
***
mov eax ecx +
or dword ptr [eax+4Ch] 0FFFFFFFFh +
or dword ptr [eax+74h] 128h +
xor ecx ecx +
inc ecx  +
mov dword ptr [eax] offset off_102DD04 +
mov dword ptr [eax+8] offset off_102DCE8 +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
retn   +
***
sub dword ptr [esp+4] 8 +
jmp loc_10109AA  +
***
mov esi offset dword_1024000 +
mov edi offset unk_10B2898 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1029D90 +
mov edi offset unk_10B28A8 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_102DD68 +
mov edi offset unk_10B28B8 +
movs   +
movs   +
or dword_10B110C 1 +
movs   +
movs   +
mov esi offset dword_1024010 +
mov edi offset unk_10B28C8 +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+0Ch] +
xor ecx ecx +
jmp loc_10022E5  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_105C1DC  +
push [ebp+Msg]  +
mov ecx esi +
call sub_102DD96  +
jmp loc_100E09A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx ecx +
mov [ebp+var_60] eax +
mov [ebp+hDC] edi +
mov [ebp+var_4C] edi +
cmp eax edi +
jz loc_105BF48  +
lea ecx [ebp+Paint.rcPaint] +
push ecx  +
push eax  +
mov [ebp+hDC] eax +
call ds:GetClipBox  +
cmp [ebp+hDC] edi +
jz loc_102DE84  +
mov esi ds:GetClientRect +
lea eax [ebp+rcSrc1] +
push eax  +
push dword ptr [ebx]  +
call esi  +
lea eax [ebp+rcSrc2] +
push eax  +
push dword ptr [ebx+10h]  +
call esi  +
push 2  +
lea eax [ebp+rcSrc2] +
push eax  +
push dword ptr [ebx]  +
push dword ptr [ebx+10h]  +
call ds:MapWindowPoints  +
mov eax [ebx+18h] +
mov esi offset dword_102DEA0 +
lea edi [ebp+var_80] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
cmp eax esi +
jnz loc_105BF9D  +
mov eax [ebp+var_78] +
sub [ebp+rcSrc2.top] eax +
mov eax [ebp+var_74] +
add [ebp+rcSrc2.bottom] eax +
mov eax [ebp+rcSrc1.right] +
sub eax [ebp+rcSrc1.left] +
mov [ebp+rcSrc2.left] esi +
lea esi [ebp+rcSrc1] +
lea edi [ebp+rc] +
movs   +
mov [ebp+rcSrc2.right] eax +
movs   +
lea eax [ebp+rcSrc2] +
push eax  +
lea eax [ebp+rcSrc1] +
movs   +
push eax  +
lea eax [ebp+rc] +
push eax  +
movs   +
call ds:SubtractRect  +
xor esi esi +
cmp [ebx+18h] esi +
jnz loc_105BFB9  +
mov esi ds:FillRect +
push 6  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hDC]  +
call esi  +
push 10h  +
lea eax [ebp+rcSrc2] +
push eax  +
push [ebp+hDC]  +
call esi  +
xor edi edi +
cmp [ebp+var_60] edi +
jz loc_105BFFF  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov ecx esi +
call sub_102DF0B  +
jmp loc_100E098  +
mov ecx esi +
call sub_1079563  +
jmp loc_100E098  +
push 1  +
mov ecx esi +
call sub_1078EAD  +
jmp loc_1020E75  +
cmp eax 2 +
jz loc_1020E75  +
jmp loc_100E09C  +
push 0  +
mov ecx esi +
call sub_107935D  +
jmp loc_100E09A  +
cmp [ebp+lParam] 403h +
jge loc_105C27E  +
jmp loc_100E09A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 240h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+var_210] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea ebx [esi+44h] +
push ebx  +
push 358h  +
push dword ptr [esi+8]  +
call sub_102E137  +
xor edi edi +
mov [esi+40h] eax +
cmp eax edi +
jz loc_102E0CC  +
cmp [ebx] edi +
jle loc_102E0CC  +
push offset aAIdCustomize  +
mov ebx 104h +
push ebx  +
lea eax [ebp+WindowName] +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_102E0E1  +
push dword ptr [esi+40h]  +
lea eax [ebp+WindowName] +
push ebx  +
push eax  +
call sub_1010E3B  +
test eax eax +
jl loc_102E0E1  +
push offset aA  +
push ebx  +
lea eax [ebp+WindowName] +
push eax  +
call sub_1010E3B  +
test eax eax +
jl loc_102E0E1  +
push edi  +
push dword ptr [esi+8]  +
mov eax 80000000h +
push edi  +
push dword ptr [esi]  +
push 1  +
push 1  +
push eax  +
push eax  +
push 40000001h  +
lea eax [ebp+WindowName] +
push eax  +
push offset aSyslink  +
push edi  +
call sub_103510B  +
mov [esi+10h] eax +
cmp eax edi +
jz loc_102E092  +
push esi  +
push edi  +
push offset loc_10120F9  +
push eax  +
call sub_10351CD  +
push 0FFFFFFECh  +
push dword ptr [esi+10h]  +
xor ebx ebx +
call ds:GetWindowLongW  +
mov ecx 400000h +
test eax ecx +
jnz loc_105C1A0  +
push edi  +
push hInstance  +
push edi  +
push dword ptr [esi+10h]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 80000003h  +
push edi  +
push offset aTooltips_class  +
push ebx  +
call sub_103510B  +
mov [esi+14h] eax +
cmp eax edi +
jz loc_102E092  +
mov ebx ds:SendMessageW +
push edi  +
push 1  +
push 200Ch  +
push eax  +
call ebx  +
push 2Ch  +
lea eax [ebp+var_23C] +
push edi  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+10h] +
mov [ebp+var_238] eax +
mov [ebp+var_234] eax +
mov eax hInstance +
add esp 0Ch +
mov [ebp+var_220] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 432h  +
push dword ptr [esi+14h]  +
mov [ebp+var_23C] 4001h +
mov [ebp+var_21C] 256h +
call ebx  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_102E0AA  +
push edi  +
push offset aComposited  +
push dword ptr [esi]  +
call ds:SetWindowTheme  +
cmp [esi+10h] edi +
jz loc_102E0E1  +
cmp [esi+14h] edi +
jz loc_102E0E1  +
mov ecx esi +
call sub_101E9DF  +
push 5  +
push dword ptr [esi+10h]  +
call ds:ShowWindow  +
mov [ebp+var_210] edi +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
push dword ptr [esi+40h]  +
call sub_100C205  +
jmp loc_105C1A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hInstance] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push 104h  +
lea ecx [ebp+Buffer] +
push ecx  +
push [ebp+uID]  +
xor edi edi +
push eax  +
call ds:LoadStringW  +
mov [esi] eax +
test eax eax +
jle loc_102E1A7  +
xor ecx ecx +
push 2  +
inc eax  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_100664F  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_102E1A7  +
lea eax [ebp+Buffer] +
push eax  +
mov eax [esi] +
inc eax  +
push eax  +
push edi  +
call sub_100665F  +
test eax eax +
jl loc_105C17B  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
push dword ptr [ebp+8]  +
call sub_102E1FB  +
jmp loc_1010A5E  +
***
call sub_1079D95  +
jmp loc_1010A61  +
***
push dword ptr [ebp+10h]  +
call sub_107A283  +
jmp loc_1010A4E  +
***
push dword ptr [ebp+14h]  +
call sub_107A2A2  +
jmp loc_1010A61  +
***
mov dword ptr [ebp-4] 1 +
jmp loc_1010A61  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hWndParent] +
or [ebp+var_A8] 0FFFFFFFFh +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [esi+4] eax +
cmp eax edi +
jz loc_102E33A  +
push ebx  +
push edi  +
push hInstance  +
mov [ebp+var_A8] edi +
push edi  +
push eax  +
mov eax 80000000h +
push eax  +
push eax  +
push eax  +
push eax  +
push 80000001h  +
push edi  +
push offset aTooltips_class  +
push edi  +
call sub_103510B  +
mov [esi+50h] eax +
cmp eax edi +
jz loc_102E2B2  +
mov eax [esi+4] +
mov [esi+24h] eax +
mov [esi+28h] eax +
push 50h  +
lea eax [ebp+Buffer] +
push eax  +
lea ebx [esi+1Ch] +
push 35Ah  +
mov dword ptr [ebx] 30h +
mov dword ptr [esi+20h] 0A1h +
push hInstance  +
call ds:LoadStringW  +
push ebx  +
push edi  +
push 432h  +
push dword ptr [esi+50h]  +
lea eax [ebp+Buffer] +
mov [esi+40h] eax +
call ds:SendMessageW  +
push 1  +
push dword ptr [esi+50h]  +
call sub_1017D35  +
push edi  +
push edi  +
push offset aDisablepreview  +
mov ebx offset aSoftwareMicr_3 +
push ebx  +
call ds:SHRegGetBoolUSValueW  +
xor ecx ecx +
cmp eax edi +
setz cl  +
push 1F4h  +
push offset aDesktoplivepre  +
push ebx  +
add ecx ecx +
xor ecx [esi+74h] +
and ecx 2 +
xor [esi+74h] ecx +
call sub_10103A4  +
mov [esi+60h] eax +
call ds:BufferedPaintInit  +
xor ecx ecx +
cmp eax edi +
setz cl  +
lea eax [esi+8] +
push eax  +
push dword ptr [esi+4]  +
shl ecx 4 +
xor ecx [esi+74h] +
and ecx 10h +
xor [esi+74h] ecx +
call ds:RegisterDragDrop  +
push 0Ch  +
xor eax eax +
lea ecx [ebp+var_B4] +
push ecx  +
inc eax  +
push eax  +
push edi  +
push dword ptr [esi+4]  +
mov [ebp+var_B4] edi +
mov [ebp+var_B0] edi +
mov [ebp+var_AC] eax +
call ds:SetGestureConfig  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_A8] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
push esi  +
mov esi offset aComctl32_dll +
push esi  +
call sub_102E3C7  +
mov hModule eax +
test eax eax +
jz loc_105CC00  +
pop esi  +
jmp loc_10350B1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_10350C0  +
test eax eax +
jz locret_102E3F5  +
push esi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryW  +
push [ebp+var_4]  +
mov esi eax +
call sub_10350F3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push offset dword_1034D68  +
call sub_102A8F7  +
test al al +
jz loc_102E442  +
lea eax [ebp+pv] +
push eax  +
push 80058000h  +
push [ebp+pv]  +
call SHGetNameFromIDList  +
test eax eax +
jl loc_102E442  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+pv]  +
push [ebp+arg_0]  +
call sub_102E44B  +
push [ebp+pv]  +
call CoTaskMemFree  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 398h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi offset dword_1034D68 +
push esi  +
call sub_102A8F7  +
test al al +
jz loc_102E4FF  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push ebx  +
call SHELL32_892  +
test eax eax +
jz loc_102E4FF  +
and [ebp+var_398] 0 +
push 188h  +
lea eax [ebp+var_394] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_398] +
push eax  +
call sub_1012258  +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+var_310] eax +
mov [ebp+var_314] 1 +
call sub_102E515  +
push eax  +
lea eax [ebp+var_290] +
push eax  +
call sub_1012258  +
push 3  +
lea eax [ebp+var_398] +
push eax  +
push 0C67h  +
push esi  +
call sub_10257B2  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
test esi esi +
jnz loc_105CF67  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
xor esi esi +
call ds:GetUserDefaultUILanguage  +
mov word_10B1084 ax +
test ax ax +
jz loc_102E54C  +
movzx eax ax +
push eax  +
call sub_102E56B  +
mov esi eax +
xor eax eax +
test esi esi +
setz al  +
inc eax  +
push eax  +
push offset Target  +
call ds:InterlockedExchange  +
pop esi  +
jmp loc_10344D3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push 10h  +
lea eax [ebp+LCData] +
push eax  +
push 58h  +
push [ebp+Locale]  +
xor esi esi +
call ds:GetLocaleInfoW  +
test eax eax +
jle loc_102E59C  +
mov esi [ebp+var_14] +
mov eax 8000000h +
and esi eax +
sub esi eax +
neg esi  +
sbb esi esi +
inc esi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
push offset aDropdescriptio  +
call ds:RegisterClipboardFormatW  +
mov dword_10B114C eax +
jmp loc_10178E9  +
push 2Eh  +
call ds:GetSystemMetrics  +
jmp loc_10179E4  +
or eax 0FFFFFFFFh +
jmp loc_1017B02  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+8] +
cmp [ebp+0Ch] esi +
jz loc_102E68B  +
cmp [edi-8] esi +
jnz loc_102E673  +
push ebx  +
lea ebx [edi-0Ch] +
mov ecx ebx +
call sub_101F1CE  +
mov ecx ebx +
call sub_102E69C  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp+0Ch]  +
call ds:IUnknown_GetWindow  +
push ebx  +
push hInstance  +
push esi  +
push dword ptr [ebp+8]  +
push esi  +
push esi  +
push esi  +
push esi  +
push 56000000h  +
push esi  +
push offset aMstaskswwclass  +
push esi  +
call sub_103510B  +
mov ecx ebx +
mov [ebp-4] eax +
call sub_101E939  +
test eax eax +
pop ebx  +
mov eax offset aTaskband2compo +
jnz loc_102E668  +
mov eax offset aTaskband2_0 +
push esi  +
push eax  +
push dword ptr [ebp-4]  +
call ds:SetWindowTheme  +
push dword ptr [ebp+0Ch]  +
add edi 84h +
push edi  +
call ds:__imp_IUnknown_Set  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov eax [edi-8] +
cmp eax esi +
jz loc_102E673  +
jmp loc_1062DBD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
push 2Ch  +
lea eax [ebp+var_30.style] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_30] +
push eax  +
mov esi offset aMstaskswwclass +
push esi  +
push hInstance  +
mov [ebp+var_30.cbSize] 30h +
call ds:GetClassInfoExW  +
test eax eax +
jnz loc_1062D61  +
mov eax hInstance +
push 7F00h  +
push 0  +
mov [ebp+var_30.lpszClassName] esi +
mov [ebp+var_30.lpfnWndProc] offset loc_1001FFD +
mov [ebp+var_30.cbWndExtra] 4 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.hbrBackground] 10h +
call ds:RegisterClassExW  +
movzx eax ax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
push edi  +
mov edi 8007000Eh +
jnz loc_1063E9C  +
push esi  +
push 0C0h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102E79B  +
mov ecx eax +
call sub_102E8D4  +
mov esi eax +
test esi esi +
jz loc_102E793  +
push offset unk_10B1460  +
mov ecx esi +
call sub_102E7A4  +
mov edi eax +
test edi edi +
jl loc_102E793  +
mov eax [ebp+0Ch] +
add esi 8 +
mov [eax] esi +
xor edi edi +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
xor esi esi +
jmp loc_102E773  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+48h] eax +
add ecx 0A4h +
push ecx  +
push offset dword_100EAF4  +
call sub_102E7C9  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 40h  +
mov edi 8007000Eh +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102E81F  +
mov ecx eax +
call sub_100EC20  +
mov esi eax +
test esi esi +
jz loc_102E817  +
mov eax 80000000h +
push eax  +
lea ecx [esi+8] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+70h]  +
mov edi eax +
test edi edi +
jl loc_102E811  +
push [ebp+arg_4]  +
mov eax [esi] +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor esi esi +
jmp loc_102E7EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
lea edi [esi+64h] +
push edi  +
call sub_1002BEE  +
test byte ptr [esi+24h] 10h +
push edi  +
push offset dword_1004590  +
jnz loc_102E899  +
push 0  +
call ds:SHELL32_727  +
lea edi [esi+60h] +
mov ecx edi +
call sub_102AAB6  +
lea edx [ebp+var_8] +
lea eax [esi+20h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+60h]  +
mov esi [esi+94h] +
mov eax [esi] +
push 4  +
push 4  +
push esi  +
call dword ptr [eax+38h]  +
push eax  +
call sub_102A6C9  +
push eax  +
push [ebp+var_4]  +
mov ecx edi +
push [ebp+var_8]  +
call sub_102E8A2  +
mov ecx offset unk_10B1460 +
call sub_10214C3  +
pop edi  +
pop esi  +
leave   +
retn   +
push 3  +
jmp loc_102E84A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_10]  +
mov esi ecx +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:off_10192F8  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi] eax +
pop esi  +
mov eax ecx +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
xor eax eax +
xor edi edi +
mov dword ptr [esi] offset off_100241C +
mov dword ptr [esi+8] offset off_100F030 +
mov dword ptr [esi+0Ch] offset off_10120CC +
mov dword ptr [esi+10h] offset off_102E97C +
mov dword ptr [esi+14h] offset off_1002060 +
mov dword ptr [esi+18h] offset off_100E6A0 +
mov dword ptr [esi+1Ch] offset off_101DCB8 +
mov dword ptr [esi+20h] offset off_1003EC0 +
mov dword ptr [esi+54h] 0FFFFFFFDh +
inc edi  +
mov [esi+5Ch] edi +
mov [esi+60h] eax +
or dword ptr [esi+8Ch] 0FFFFFFFFh +
mov dword ptr [esi+68h] 0FF000000h +
mov [esi+78h] eax +
mov [esi+9Ch] eax +
mov [esi+0A8h] eax +
push 5  +
mov [esi+0ACh] edi +
mov dword ptr [esi+0B0h] 0EA60h +
mov [esi+0B4h] eax +
mov [esi+0B8h] eax +
mov [esi+0BCh] eax +
call sub_1008635  +
push edi  +
call sub_1008635  +
push edi  +
mov ecx esi +
call sub_10091DD  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov ecx esi +
call sub_102E9DF  +
jmp loc_10024CD  +
***
test ebx ebx +
jnz loc_1008970  +
jmp loc_10024DE  +
***
mov ecx esi +
call sub_1096DE5  +
jmp loc_10024DE  +
***
mov ecx esi +
call sub_10974C6  +
jmp loc_10024CD  +
***
test edi edi +
jnz loc_10089F9  +
jmp sub_10024B0  +
***
mov eax [esi+30h] +
jmp loc_10024CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi ds:RegisterWindowMessageW +
push offset aHarderror  +
mov esi ecx +
call edi  +
push offset aTaskbarbuttonc  +
mov [esi+84h] eax +
call edi  +
lea edi [esi+94h] +
push edi  +
mov [esi+88h] eax +
call sub_102ED91  +
test eax eax +
jl loc_102EC51  +
lea eax [esi+20h] +
push eax  +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
mov eax [edi] +
mov ecx [eax] +
lea edx [ebp+pDropTarget] +
push edx  +
push offset dword_100DB28  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_102EA6A  +
push [ebp+pDropTarget]  +
push dword ptr [esi+4]  +
call ds:RegisterDragDrop  +
mov eax [ebp+pDropTarget] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [edi] +
mov ecx [eax] +
push ebx  +
push 0  +
push 0  +
push 0Bh  +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ds:SendMessageW  +
mov ecx esi +
mov [ebp+lParam] eax +
mov dword ptr [esi+44h] 1 +
call sub_101E8AD  +
mov ecx esi +
call sub_101E21C  +
mov ecx esi +
call sub_102E828  +
lea ebx [esi+74h] +
push ebx  +
push offset stru_10148A8  +
push 1  +
push 0  +
push offset stru_10148B8  +
call ds:__imp_CoCreateInstance  +
mov eax [ebx] +
test eax eax +
jz loc_102EAF1  +
mov ecx [eax] +
lea edx [ebp+var_A8] +
push edx  +
push offset dword_10148C8  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_102EAF1  +
mov eax [ebp+var_A8] +
mov ecx [eax] +
push 2  +
push 2  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+var_A8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ebx ds:RegisterWindowMessageW +
push offset aShellhook  +
call ebx  +
mov ecx esi +
mov [esi+28h] eax +
call sub_102AAA1  +
test eax eax +
jz loc_102EC43  +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_102EC3C  +
push offset dword_1007748  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz loc_102EC3C  +
xor eax eax +
inc eax  +
push 3  +
push dword ptr [esi+4]  +
mov [esi+98h] eax +
call ds:SHELL32_181  +
push offset aSysfrostedwind  +
call ebx  +
mov [esi+2Ch] eax +
push 1  +
xor ebx ebx +
push ebx  +
push ebx  +
mov ecx esi +
call sub_1020CCA  +
or dword ptr [esi+70h] 0FFFFFFFFh +
mov ecx esi +
call sub_102B4ED  +
push esi  +
push offset sub_102ABCE  +
call ds:EnumWindows  +
lea eax [ebp+var_B8] +
push eax  +
push 1  +
push 43Ah  +
push 0C008000h  +
push 8002h  +
push dword ptr [esi+4]  +
mov [ebp+var_B4] ebx +
mov [ebp+var_B8] ebx +
call ds:SHELL32_2  +
mov [esi+80h] eax +
push 50h  +
lea eax [ebp+String] +
push eax  +
push 252h  +
push hInstance  +
call ds:LoadStringW  +
mov ebx ds:SetWindowTextW +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi+4]  +
call ebx  +
mov eax [edi] +
lea ecx [ebp+String] +
push ecx  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ebx  +
mov ecx esi +
call sub_102ECD5  +
xor ebx ebx +
cmp [esi+0B4h] ebx +
jnz loc_102EC10  +
push ebx  +
push dword ptr [esi+0B0h]  +
push 0Ah  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov edi [edi] +
push ebx  +
push [ebp+lParam]  +
mov [esi+44h] ebx +
mov eax [edi] +
push 0Bh  +
push edi  +
call dword ptr [eax+38h]  +
push eax  +
call ds:SendMessageW  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
xor eax eax +
jmp loc_102EB3D  +
push dword ptr [esi+4]  +
call ds:RegisterShellHookWindow  +
jmp loc_102EB58  +
or eax 0FFFFFFFFh +
jmp loc_102EC2E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push 1  +
push 0  +
push 0  +
push 1  +
mov ebx ecx +
call ds:SHLWAPI_635  +
mov [ebp+hKey] eax +
test eax eax +
jz loc_102ED36  +
push esi  +
push edi  +
lea edi [ebx+0B0h] +
push edi  +
push offset aIdletime  +
mov esi offset aUserassistSett +
push esi  +
push eax  +
call sub_100F656  +
add ebx 0B4h +
push ebx  +
push offset aNeveridle  +
push esi  +
push [ebp+hKey]  +
call sub_101917B  +
cmp dword ptr [edi] 0 +
jl loc_1062D56  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 1ACh  +
mov edi 8007000Eh +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102EDD0  +
mov ecx eax +
call sub_102EDD9  +
mov esi eax +
test esi esi +
jz loc_102EDC8  +
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
mov eax [ebp+arg_0] +
add esi 14h +
mov [eax] esi +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor esi esi +
jmp loc_102EDB5  +
***
mov edi edi +
push ebx  +
xor eax eax +
inc eax  +
push esi  +
mov esi ecx +
mov dword ptr [esi+8] offset off_1002788 +
mov [esi+0Ch] eax +
mov dword ptr [esi] offset off_1003BE0 +
mov dword ptr [esi+8] offset off_10347B0 +
mov dword ptr [esi+10h] offset off_102CA08 +
mov dword ptr [esi+14h] offset off_1002AC0 +
mov dword ptr [esi+18h] offset off_10043D8 +
mov dword ptr [esi+1Ch] offset off_1003F40 +
mov dword ptr [esi+20h] offset off_1006208 +
mov dword ptr [esi+24h] offset off_102C9DC +
mov dword ptr [esi+28h] offset off_100650C +
mov dword ptr [esi+2Ch] offset off_1034964 +
mov dword ptr [esi+30h] offset off_100DB48 +
mov dword ptr [esi+34h] offset off_102EE8C +
and dword ptr [esi+90h] 0 +
or dword ptr [esi+0B0h] 0FFFFFFFFh +
mov [esi+0A4h] eax +
mov [esi+114h] eax +
and dword ptr [esi+14Ch] 0 +
call sub_10121BA  +
xor edx edx +
lea ecx dword_10B2A78[edx] +
cmp dword ptr [ecx] 0 +
jnz loc_102EE7C  +
xor ebx ebx +
test eax eax +
setz bl  +
inc ebx  +
mov [ecx] ebx +
add edx 24h +
cmp edx 534h +
jb loc_102EE67  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
push 2Ch  +
lea eax [ebp+var_30.style] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_30] +
push eax  +
mov esi offset aMstasklistwcla +
push esi  +
push hInstance  +
mov [ebp+var_30.cbSize] 30h +
call ds:GetClassInfoExW  +
test eax eax +
jnz loc_10642A0  +
mov eax hInstance +
push 7F00h  +
push 0  +
mov [ebp+var_30.lpszClassName] esi +
mov [ebp+var_30.style] 8 +
mov [ebp+var_30.lpfnWndProc] offset loc_1001FFD +
mov [ebp+var_30.cbWndExtra] 4 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadCursorW  +
mov [ebp+var_30.hCursor] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30.hbrBackground] 10h +
call ds:RegisterClassExW  +
movzx eax ax +
pop esi  +
leave   +
retn   +
***
mov ecx esi +
call sub_102EFE0  +
jmp loc_1003CE0  +
***
mov ecx esi +
call sub_109C052  +
jmp loc_1003CBC  +
***
mov ecx esi +
call sub_109C08B  +
jmp loc_1003CBC  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
jmp loc_1003CBC  +
***
push edi  +
push edx  +
mov ecx esi +
call sub_109FD7D  +
jmp loc_1003CBC  +
***
push edx  +
mov ecx esi +
call sub_109ADE3  +
jmp loc_1003CBC  +
***
push edi  +
push edx  +
mov ecx esi +
call sub_109D721  +
jmp loc_1003CBC  +
***
mov ecx esi +
call sub_109B0B8  +
jmp loc_1003CBC  +
***
push edi  +
push edx  +
mov ecx esi +
call sub_109B763  +
jmp loc_1003CBC  +
***
push edx  +
mov ecx esi +
call sub_1004AE4  +
jmp loc_1003CBC  +
***
mov dword ptr [ebp-4Ch] 10000h +
jmp loc_1003CBC  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_1021416  +
mov edi ds:GetSystemMetrics +
lea eax [esi+134h] +
push eax  +
lea eax [esi+130h] +
push eax  +
push 45h  +
call edi  +
add eax eax +
push eax  +
push 44h  +
call edi  +
add eax eax +
push eax  +
call sub_10208CB  +
xor ebx ebx +
push ebx  +
push offset aDisableprevi_0  +
mov edi offset aSoftwareMicr_0 +
push edi  +
call SHRegGetBoolValueFromHKCUHKLM  +
push ebx  +
push offset aExtendeduihove  +
push edi  +
mov [esi+0D8h] eax +
call sub_10103A4  +
push ebx  +
push offset aLastactiveclic  +
push edi  +
mov [esi+0DCh] eax +
call SHRegGetBoolValueFromHKCUHKLM  +
push ebx  +
mov [esi+148h] eax +
push hInstance  +
push ebx  +
push dword ptr [esi+4]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 80000003h  +
push ebx  +
push offset aTooltips_class  +
push 20h  +
call sub_103510B  +
add esi 98h +
mov [esi] eax +
cmp eax ebx +
jz loc_102F098  +
push 12Ch  +
push ebx  +
push 418h  +
push eax  +
call ds:SendMessageW  +
push 1  +
push dword ptr [esi]  +
call sub_1017D35  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+hInstance]  +
mov edi 80004005h +
call sub_102F45F  +
test eax eax +
jz loc_102F14E  +
push esi  +
call sub_102F15A  +
mov esi eax +
test esi esi +
jz loc_102F14D  +
push [ebp+arg_8]  +
mov eax [esi] +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 82000000h  +
push esi  +
push offset aTasklistthumbn  +
push 80088h  +
call sub_103510B  +
cmp eax esi +
jz loc_102F18A  +
push esi  +
push eax  +
call ds:GetWindowLongW  +
mov esi eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax word_10B1168 +
sub esp 28h +
test ax ax +
jnz loc_102F20D  +
and [ebp+WndClass.style] 0 +
push edi  +
push 9  +
xor eax eax +
pop ecx  +
lea edi [ebp+WndClass.lpfnWndProc] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+WndClass.hInstance] eax +
lea eax [ebp+WndClass] +
push eax  +
mov [ebp+WndClass.lpszClassName] offset aTasklistoverla +
mov [ebp+WndClass.lpfnWndProc] offset loc_10A1A94 +
mov [ebp+WndClass.cbWndExtra] 4 +
call ds:RegisterClassW  +
mov word_10B1168 ax +
pop edi  +
xor ecx ecx +
test ax ax +
setnz cl  +
mov eax ecx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+hWnd] +
mov esi ecx +
push esi  +
xor ebx ebx +
push ebx  +
push edi  +
call ds:SetWindowLongW  +
lea eax [esi+14h] +
push eax  +
push edi  +
mov [esi+30h] edi +
call ds:RegisterDragDrop  +
mov ecx esi +
call sub_102AD95  +
mov ecx esi +
call sub_1020764  +
mov ecx esi +
call sub_1020ACF  +
push 2  +
push ebx  +
push ebx  +
push dword ptr [esi+30h]  +
call ds:SetLayeredWindowAttributes  +
test eax eax +
jz loc_102F368  +
push dword ptr [esi+30h]  +
call sub_102AC5D  +
lea edi [esi+110h] +
push edi  +
lea eax [esi+10h] +
push eax  +
call sub_102F3E5  +
test eax eax +
jl loc_10679EB  +
push 1  +
push dword ptr [esi+30h]  +
mov [ebp+var_4] ebx +
call sub_1017D35  +
push 0FAh  +
push offset aThumbnaillivep  +
push offset aSoftwareMicr_0  +
call sub_10103A4  +
mov edi ds:EventEnabled +
mov [esi+168h] eax +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_102F374  +
push offset dword_1029CB0  +
push ecx  +
push eax  +
call edi  +
test al al +
jz loc_102F374  +
xor eax eax +
inc eax  +
mov [esi+17Ch] eax +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_102F378  +
push offset dword_102F380  +
push ecx  +
push eax  +
call edi  +
test al al +
jz loc_102F378  +
xor eax eax +
inc eax  +
mov [esi+180h] eax +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_102F37C  +
push offset dword_102F3D0  +
push ecx  +
push eax  +
call edi  +
test al al +
jz loc_102F37C  +
xor eax eax +
inc eax  +
pop edi  +
mov [esi+184h] eax +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov ecx esi +
call sub_10A39A1  +
jmp loc_102F2C9  +
xor eax eax +
jmp loc_102F30A  +
xor eax eax +
jmp loc_102F331  +
xor eax eax +
jmp loc_102F358  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
jz loc_102F429  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_102F429  +
and dword ptr [esi] 0 +
push 10h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102F41E  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_102F435  +
test eax eax +
jz loc_102F422  +
mov [esi] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_102F411  +
mov eax 8007000Eh +
jmp loc_102F419  +
mov eax 80004003h +
jmp loc_102F419  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_1010760 +
mov dword ptr [eax+4] offset off_10352FC +
mov [eax+8] ecx +
mov dword ptr [eax+0Ch] 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+hInstance]  +
call sub_102F1BF  +
test eax eax +
jz loc_1067EA4  +
push [ebp+hInstance]  +
call sub_102F490  +
test eax eax +
jz loc_1067EAB  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax word_10B1164 +
sub esp 28h +
test ax ax +
jnz loc_102F4EE  +
and [ebp+WndClass.style] 0 +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+WndClass.lpfnWndProc] +
stos   +
mov eax [ebp+arg_0] +
push 7F00h  +
push 0  +
mov [ebp+WndClass.hInstance] eax +
mov [ebp+WndClass.lpszClassName] offset aTasklistthumbn +
mov [ebp+WndClass.lpfnWndProc] offset loc_100E0A7 +
call ds:LoadCursorW  +
mov [ebp+WndClass.hCursor] eax +
lea eax [ebp+WndClass] +
push eax  +
mov [ebp+WndClass.cbWndExtra] 4 +
call ds:RegisterClassW  +
mov word_10B1164 ax +
pop edi  +
xor ecx ecx +
test ax ax +
setnz cl  +
mov eax ecx +
leave   +
retn 4  +
***
lea eax [ecx+18h] +
push eax  +
push 1  +
push 5  +
push ecx  +
add ecx 4 +
push ecx  +
call ds:CoRegisterClassObject  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [eax] offset off_102F60C +
lea edi [eax+4] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
mov [eax+14h] ecx +
mov dword ptr [eax+1Ch] 1 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ds:SHGetSpecialFolderPathW +
push 1  +
push 10h  +
lea eax [ebp+szPath] +
push eax  +
push 0  +
call esi  +
push 1  +
push 2  +
lea eax [ebp+szPath] +
push eax  +
push 0  +
call esi  +
push 1  +
push 0Bh  +
lea eax [ebp+szPath] +
push eax  +
push 0  +
call esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
push 0  +
call ds:GetDC  +
mov esi eax +
push 5Ah  +
push esi  +
call ds:GetDeviceCaps  +
push esi  +
push 0  +
mov [ebp+var_C] eax +
call ds:ReleaseDC  +
mov esi ds:__imp_SHGetValueW +
push 4  +
pop edi  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push offset aApplieddpi  +
push offset aControlPanelDe  +
push 80000001h  +
mov [ebp+pcbData] edi +
call esi  +
test eax eax +
jnz loc_1054BB5  +
mov edi [ebp+var_C] +
cmp edi [ebp+pvData] +
jnz loc_1054BE6  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
push eax  +
push dword_10B247C  +
mov [ebp+var_88] eax +
push dword_10B2478  +
mov [ebp+var_90] ecx +
call ds:EventEnabled  +
test al al +
jz loc_102F896  +
push ebx  +
push esi  +
push edi  +
push 38h  +
xor ebx ebx +
lea eax [ebp+var_C8] +
push ebx  +
push eax  +
call memset  +
mov esi offset aNull +
lea edi [ebp+String] +
movs   +
movs   +
movs   +
push 72h  +
lea eax [ebp+var_76] +
push ebx  +
push eax  +
mov [ebp+var_8C] 0Ah +
movs   +
call memset  +
mov eax [ebp+var_90] +
add esp 18h +
cmp eax ebx +
jz loc_102F7E8  +
cmp [eax] bx +
jz loc_102F7E8  +
push eax  +
push 40h  +
lea eax [ebp+String] +
push eax  +
call sub_1012221  +
lea eax [ebp+arg_4] +
mov [ebp+var_C0] eax +
push 4  +
lea eax [ebp+var_8C] +
pop esi  +
mov [ebp+var_B0] eax +
lea eax [ebp+String] +
push eax  +
mov [ebp+var_D0] offset unk_10B2488 +
mov [ebp+var_CC] ebx +
mov [ebp+var_C8] 10h +
mov [ebp+var_C4] ebx +
mov [ebp+var_BC] ebx +
mov [ebp+var_B8] esi +
mov [ebp+var_B4] ebx +
mov [ebp+var_AC] ebx +
mov [ebp+var_A8] esi +
mov [ebp+var_A4] ebx +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
mov [ebp+var_98] eax +
lea eax [ebp+var_D0] +
push eax  +
push esi  +
push [ebp+var_88]  +
lea ecx [ebp+String] +
push dword_10B247C  +
mov [ebp+var_A0] ecx +
push dword_10B2478  +
mov [ebp+var_9C] ebx +
mov [ebp+var_94] ebx +
call ds:EventWrite  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz locret_102F91D  +
push ebx  +
push esi  +
push edi  +
push 6  +
xor ebx ebx +
pop ecx  +
xor eax eax +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ebx +
lea edi [ebp+var_24] +
stos   +
lea eax [ebp+TokenHandle] +
xor esi esi +
push eax  +
inc esi  +
push 8  +
mov [ebp+var_C] esi +
mov [ebp+TokenHandle] ebx +
mov [ebp+ReturnLength] ebx +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_102F91A  +
lea eax [ebp+ReturnLength] +
push eax  +
push ebx  +
push ebx  +
push esi  +
push [ebp+TokenHandle]  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_1054CED  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push offset ValueName  +
push phkResult  +
call ds:RegSetValueExW  +
cmp dword ptr [ebp+Data] 0 +
jnz loc_1054F07  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi ds:NtQueryInformationToken +
xor esi esi +
inc esi  +
mov [ebx] esi +
and dword ptr [eax] 0 +
lea eax [ebp+arg_8] +
push eax  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 12h  +
push [ebp+nIndex]  +
mov [ebp+var_4] esi +
call edi  +
test eax eax +
jl loc_102F9EA  +
cmp [ebp+var_4] 2 +
jz loc_102F9F1  +
cmp [ebp+var_4] esi +
jz loc_1062C8D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov ecx [ebp+arg_4] +
mov [ecx] esi +
jmp loc_102F9EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B1188 0 +
jnz loc_102FA2F  +
push offset dword_10B1188  +
push 20019h  +
push 0  +
push offset aSoftwareMic_18  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10680BE  +
mov eax [ebp+arg_0] +
mov ecx dword_10B1188 +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
cmp ecx [edx] +
jz loc_10680F2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
retn   +
***
mov eax dword_10B1188 +
push esi  +
mov esi ds:RegCloseKey +
test eax eax +
jz loc_102FB06  +
push eax  +
call esi  +
and dword_10B1188 0 +
mov eax hKey +
test eax eax +
jz loc_102FB19  +
push eax  +
call esi  +
and hKey 0 +
push offset CriticalSection  +
call ds:DeleteCriticalSection  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
mov esi 80040203h +
push 0  +
push 0  +
push [ebp+lpValueName]  +
mov [ebp+cbData] 2Ch +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_102FB5B  +
xor esi esi +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
lea eax [ebp+Data] +
push eax  +
push offset aTzi  +
push [ebp+hKey]  +
call sub_102FB2B  +
mov ebx eax +
test ebx ebx +
jl loc_102FC06  +
mov eax dword ptr [ebp+Data] +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi+4] 0 +
mov [esi] eax +
lea eax [ebp+arg_4] +
push eax  +
push offset aIsobsolete  +
push [ebp+hKey]  +
call sub_102FC49  +
test eax eax +
jnz loc_10680D2  +
and dword ptr [esi+8] 0 +
lea eax [ebp+arg_4] +
push eax  +
push offset aIscustom  +
push [ebp+hKey]  +
call sub_102FC49  +
test eax eax +
jnz loc_10680E2  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
mov [ebp+cbData] 4 +
push 0  +
push 0  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
neg eax  +
sbb eax eax +
inc eax  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov edi offset dword_10B2834 +
xor esi esi +
push 20h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102FCC0  +
push ds:off_102FCC8[esi]  +
mov ecx eax +
push ds:off_102FCC4[esi]  +
call sub_102F5DE  +
mov [edi] eax +
test eax eax +
jz loc_102FCB2  +
mov ecx eax +
call sub_102F5C5  +
add esi 8 +
add edi 4 +
cmp esi 20h +
jb loc_102FC86  +
pop edi  +
pop esi  +
retn   +
xor eax eax +
jmp loc_102FCA5  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_102FD1B  +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_102FD48 +
call ds:SHELL32_176  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+4] +
and dword ptr [eax] 0 +
lea edi [esi+8] +
push edi  +
push eax  +
mov dword ptr [esi] offset off_102FD48 +
call ds:SHCreateThreadRef  +
push dword ptr [edi]  +
call ds:SHSetThreadRef  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp dword_10B10DC 0 +
jnz loc_102FDA5  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset ValueName  +
push phkResult  +
mov dword_10B10DC 1 +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_102FDA5  +
cmp [ebp+Type] 4 +
jnz loc_102FDA5  +
cmp dword ptr [ebp+Data] eax +
jz loc_1054B4F  +
xor eax eax +
cmp dword_10B10DC 1 +
setz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push offset aSchemelangid  +
push offset aControlPanelAp  +
push 80000001h  +
mov [ebp+pcbData] 2 +
call ds:__imp_SHGetValueW  +
test eax eax +
jnz loc_1054B6C  +
call ds:GetUserDefaultUILanguage  +
cmp word ptr [ebp+pvData] ax +
jnz loc_1054B6C  +
leave   +
retn   +
***
test eax eax +
jnz locret_102FE9F  +
push esi  +
push offset aLocal_fcanregi  +
push 1  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov esi eax +
call sub_102FEED  +
test esi esi +
jz loc_102FE9E  +
push esi  +
call ds:CloseHandle  +
pop esi  +
retn   +
***
test eax eax +
jnz loc_102FEFF  +
push eax  +
call SHELL32_885  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp dword_10B10E4 0 +
jnz loc_102FF51  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
call NetGetJoinInformation  +
test eax eax +
jnz loc_102FF5F  +
cmp [ebp+Buffer] eax +
jz loc_102FF42  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
xor eax eax +
cmp [ebp+var_8] 3 +
setnz al  +
inc eax  +
mov dword_10B10E4 eax +
xor eax eax +
cmp dword_10B10E4 1 +
setz al  +
leave   +
retn   +
and [ebp+var_8] 0 +
jmp loc_102FF42  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push offset dword_1030010  +
call sub_102F8A9  +
push 291h  +
push offset dword_1030020  +
call sub_1034B2D  +
push offset dword_102F500  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz locret_1030008  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_10148A8  +
push 3  +
push 0  +
push offset stru_1030040  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl locret_1030008  +
push esi  +
push 28h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_103000A  +
mov ecx eax +
call sub_1030055  +
mov esi eax +
test esi esi +
jz loc_102FFFE  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0  +
push 0FFFFFFFFh  +
push offset dword_1030030  +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
leave   +
retn   +
xor esi esi +
jmp loc_102FFE1  +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov dword ptr [esi] offset off_1003890 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
push 4  +
pop ebx  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push offset aServeradminui  +
mov edi offset aSoftwareMicr_0 +
push edi  +
mov esi 80000001h +
push esi  +
mov [ebp+pcbData] ebx +
call ds:__imp_SHGetValueW  +
cmp eax 2 +
jz loc_1054F1E  +
cmp eax 3 +
jz loc_1054F1E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi ds:__imp_SHGetValueW +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+Src] +
push eax  +
xor ebx ebx +
push ebx  +
push offset aFlags  +
push offset aControlPanelAc  +
mov esi 80000001h +
push esi  +
mov [ebp+var_234] ebx +
mov [ebp+pcbData] 14h +
call edi  +
test eax eax +
jnz loc_1030153  +
lea eax [ebp+Src] +
push eax  +
call ds:StrToIntW  +
mov [ebp+var_234] eax +
push 0Ch  +
pop eax  +
push ebx  +
lea ecx [ebp+pvParam] +
push ecx  +
push eax  +
push 42h  +
mov [ebp+pvParam] eax +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_10301E5  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push ebx  +
push offset aInstallhighcon  +
mov ebx offset aSoftwareMic_19 +
push ebx  +
push esi  +
mov [ebp+pcbData] 208h +
call edi  +
test eax eax +
jz loc_1055142  +
test byte ptr [ebp+var_22C] 1 +
mov [ebp+pcbData] 208h +
jnz loc_1055154  +
xor eax eax +
mov word ptr [ebp+pvData] ax +
cmp word ptr [ebp+pvData] 0 +
jnz loc_10551F2  +
mov eax [ebp+var_22C] +
mov ecx eax +
xor ecx [ebp+var_234] +
test cl 1 +
jnz loc_105522A  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
call sub_1030320  +
test eax eax +
jnz loc_10552F0  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+var_8] +
xor esi esi +
push eax  +
push esi  +
mov [ebp+var_4] esi +
call sub_1030467  +
test eax eax +
jl loc_10303B9  +
cmp [ebp+var_8] esi +
jl loc_10303B9  +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp [ebp+var_8] ebx +
jg loc_10303B8  +
push edi  +
push 40000048h  +
call ds:__imp_SHELL32_100  +
push ebx  +
push offset aSoftwareMic_20  +
mov esi 80000002h +
push esi  +
mov edi eax +
call sub_103042D  +
test eax eax +
jnz loc_105D65D  +
test edi edi +
jnz loc_10303B7  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push edi  +
push offset aSoftwareMicr_4  +
push esi  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10303B7  +
xor esi esi +
push esi  +
lea eax [ebp+pcValues] +
push eax  +
push esi  +
push esi  +
push [ebp+hKey]  +
call ds:SHQueryInfoKeyW  +
test eax eax +
jnz loc_10303AE  +
cmp [ebp+pcValues] esi +
ja loc_105D665  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push 9  +
pop eax  +
cmp [ebp+phkResult] esi +
jz loc_105D622  +
lea ecx [ebp+phkResult] +
push ecx  +
push eax  +
push esi  +
push [ebp+cSubKeys]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_105D62C  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+nIndex] ebx +
jnz loc_10304AE  +
lea eax [ebp+nIndex] +
push eax  +
push ebx  +
push 8  +
push 0FFFFFFFEh  +
call ds:NtOpenThreadToken  +
mov edi eax +
cmp edi 0C000007Ch +
jnz loc_10304A4  +
lea eax [ebp+nIndex] +
push eax  +
push 8  +
push 0FFFFFFFFh  +
call ds:NtOpenProcessToken  +
mov edi eax +
cmp edi ebx +
jl loc_1030506  +
mov eax [ebp+nIndex] +
mov [ebp+var_4] eax +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+nIndex]  +
call sub_102F9A5  +
mov edi eax +
cmp edi ebx +
jl loc_10304F8  +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+var_8] ebx +
jnz loc_1062CB8  +
xor eax eax +
cmp [ebp+var_C] ebx +
setz al  +
inc eax  +
mov [esi] eax +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+nIndex]  +
call sub_1030513  +
mov edi eax +
cmp edi ebx +
jl loc_10304F7  +
cmp [ebp+arg_4] ebx +
jnz loc_1062CBF  +
pop esi  +
cmp [ebp+var_4] ebx +
jz loc_1030506  +
push [ebp+var_4]  +
call ds:NtClose  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push 4  +
pop eax  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_0] +
push eax  +
push 1Ah  +
push [ebp+arg_0]  +
call ds:NtQueryInformationToken  +
test eax eax +
jl loc_1030547  +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
setnz cl  +
mov [esi] ecx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2C0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_2B4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push 1ACh  +
lea eax [ebp+var_2B0] +
push 0  +
push eax  +
mov [ebp+var_2BC] esi +
call memset  +
xor eax eax +
mov [esi] ax +
add esp 0Ch +
lea eax [ebp+var_2B4] +
push eax  +
call ds:GetDynamicTimeZoneInformation  +
cmp eax 0FFFFFFFFh +
jz loc_1068230  +
lea eax [ebp+hKey] +
push eax  +
call sub_102F9FD  +
mov ebx eax +
test ebx ebx +
jl loc_10306CC  +
push edi  +
push offset CriticalSection  +
call ds:EnterCriticalSection  +
push 6Ch  +
mov eax offset unk_10B11A8 +
pop ecx  +
mov edi eax +
lea esi [ebp+var_2B4] +
xor edx edx +
cmps   +
jz loc_1030696  +
push eax  +
lea eax [ebp+var_2B4] +
push eax  +
call sub_102FAB5  +
test eax eax +
jnz loc_1030696  +
push 0FEh  +
mov word ptr [ebp+var_104] ax +
xor edi edi +
lea eax [ebp+var_104+2] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
mov esi 80h +
cmp [ebp+SubKey] di +
jz loc_1068201  +
lea eax [ebp+phkResult] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
call sub_10306E3  +
mov ebx eax +
test ebx ebx +
jl loc_1068201  +
push [ebp+phkResult]  +
inc edi  +
call ds:RegCloseKey  +
test ebx ebx +
jl loc_10306C0  +
lea eax [ebp+SubKey] +
test edi edi +
jz loc_106821B  +
push eax  +
push esi  +
push offset unk_10B1358  +
call sub_100665F  +
mov ebx eax +
xor eax eax +
test edi edi +
setz al  +
push 6Ch  +
pop ecx  +
lea esi [ebp+var_2B4] +
mov edi offset unk_10B11A8 +
mov dword_10B1458 eax +
movs   +
test ebx ebx +
jl loc_10306C0  +
push offset unk_10B1358  +
push [ebp+arg_4]  +
push [ebp+var_2BC]  +
call sub_100665F  +
mov ebx eax +
test ebx ebx +
jl loc_10306C0  +
cmp dword_10B1458 0 +
jnz loc_1068226  +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+phkResult]  +
mov esi 80040204h +
push 20019h  +
push 0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_103070A  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi 80070057h +
test ebx ebx +
jz loc_1030818  +
cmp [ebp+arg_4] 0 +
jbe loc_1030818  +
push edi  +
xor eax eax +
push 0FEh  +
push eax  +
mov [ebp+SubKey] ax +
lea eax [ebp-102h] +
push eax  +
call memset  +
xor eax eax +
add esp 0Ch +
mov [ebx] ax +
mov edi 80h +
push edi  +
lea eax [ebp+SubKey] +
push eax  +
call sub_1030551  +
mov esi eax +
test esi esi +
jl loc_1030817  +
lea eax [ebp+hKey] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
push dword_10B1188  +
call sub_10306E3  +
mov esi eax +
test esi esi +
jl loc_1030817  +
lea eax [ebp+var_118] +
push eax  +
push [ebp+hKey]  +
call sub_102FBA2  +
push [ebp+hKey]  +
mov esi eax +
call ds:RegCloseKey  +
test esi esi +
jl loc_1030817  +
and [ebp+var_108] 0 +
lea eax [ebp+var_108] +
push eax  +
call sub_103082F  +
mov esi eax +
test esi esi +
jl loc_1030817  +
cmp [ebp+var_108] 0 +
jnz loc_106831F  +
test esi esi +
jl loc_1030817  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+arg_4]  +
push ebx  +
call sub_100665F  +
mov esi eax +
test esi esi +
jl loc_1030817  +
cmp [ebp+var_114] 0 +
jnz loc_1068338  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1CCh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
lea eax [ebp+Data] +
xor esi esi +
push eax  +
mov [ebp+var_1BC] esi +
mov [ebx] esi +
call sub_10308E9  +
cmp eax esi +
mov [ebp+var_1B8] eax +
jl loc_1030894  +
lea eax [ebp+Data] +
push eax  +
push offset aDynamicdayligh  +
push dword ptr [ebp+Data]  +
call sub_102FC49  +
test eax eax +
jz loc_1068255  +
cmp dword ptr [ebp+Data] esi +
jnz loc_106824B  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1B8] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp hKey 0 +
jnz loc_103091B  +
push offset hKey  +
push 20019h  +
push 0  +
push offset aSystemCurrentc  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10680C8  +
mov eax [ebp+arg_0] +
mov ecx hKey +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
lea eax [ebp+var_1C] +
push eax  +
call ds:DwmpGetColorizationParameters  +
mov esi eax +
test esi esi +
jl loc_10309C4  +
push [ebp+arg_0]  +
lea eax [ebp+var_1C] +
push eax  +
call sub_10309D0  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ecx] +
mov eax 0FF000000h +
mov edx esi +
and edx eax +
cmp edx eax +
jz loc_106836E  +
mov eax [ebp+arg_4] +
mov [eax] esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 264h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+CommandLine] +
push eax  +
xor esi esi +
push esi  +
push offset aTaskman  +
push offset aSoftwareMic_21  +
push 80000002h  +
mov [ebp+pcbData] 208h +
call ds:__imp_SHGetValueW  +
test eax eax +
jz loc_1054AD7  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
mov ecx [eax] +
or ecx [eax+4] +
jnz loc_1054CDC  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EventRegister  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp+pszPath] +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
mov esi ds:__imp_PathFindFileNameW +
lea eax [ebp+pszPath] +
push eax  +
call esi  +
push offset FileName  +
push edi  +
mov ebx eax +
lea eax [ebp+ReturnedString] +
push eax  +
push ebx  +
push offset KeyName  +
push offset AppName  +
call ds:GetPrivateProfileStringW  +
lea eax [ebp+ReturnedString] +
push eax  +
call ds:PathRemoveArgsW  +
lea eax [ebp+ReturnedString] +
push eax  +
call ds:PathRemoveBlanksW  +
lea eax [ebp+ReturnedString] +
push eax  +
call esi  +
push ebx  +
mov esi eax +
call ds:lstrlenW  +
push eax  +
push ebx  +
push esi  +
call ds:StrCmpNIW  +
test eax eax +
jnz loc_1054E88  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
xor eax eax +
cmp [esi] ax +
jnz loc_1030C29  +
jmp loc_1030C26  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1030CB4  +
push 1  +
push 0  +
push offset stru_1030CC4  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl locret_1030CAF  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 2  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1030D20 +
mov dword ptr [esi+4] offset off_1030D10 +
mov [esi+78h] eax +
mov dword ptr [esi+0F0h] 1 +
call sub_1011DEE  +
mov [esi+68h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push offset dword_10B1128  +
push dword_10B39D4  +
mov dword_10B1128 eax +
push offset unk_10B2458  +
push offset unk_10B245C  +
push offset unk_10B2454  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_10B1124 eax +
retn   +
***
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_10B1090 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jnz loc_105CB88  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1030E36  +
test dword_10B1090 ebx +
jz loc_1030E36  +
mov dword_10B1090 esi +
not esi  +
mov dword_10B1094 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
mov esi 0BB40E64Fh +
jmp loc_1030E23  +
***
cmp [ebp+arg_4] 4 +
push 0Dh  +
pop eax  +
jnz loc_1030E6B  +
cmp [ebp+arg_8] 0 +
jz loc_1030E56  +
cmp [ebp+arg_8] 1 +
jnz loc_10191BE  +
mov ecx [ebp+arg_C] +
xor eax eax +
cmp [ebp+arg_8] 1 +
setz al  +
mov [ecx] eax +
xor eax eax +
jmp locret_10191C8  +
cmp [ebp+var_4] 4 +
jnz loc_10191BE  +
jmp loc_105CBAB  +
***
retn 0FF3Ah  +
***
call dword ptr [eax-6F6F6F70h]  +
push offset loc_10ABC67  +
call sub_1032C60  +
pop ecx  +
retn   +
***
lea eax [eax+eax+2FA8h] +
mov dword_10B1160 eax +
retn   +
***
mov dword_10B2D10 eax +
mov dword_10B2D14 eax +
mov dword_10B2D34 eax +
mov dword_10B2D38 eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp esi [ebp+arg_4] +
jnb loc_1030EF2  +
test eax eax +
jnz loc_1030EF2  +
mov ecx [esi] +
test ecx ecx +
jz loc_1030EED  +
call ecx  +
add esi 4 +
jmp loc_1030EDC  +
pop esi  +
pop ebp  +
retn   +
***
call sub_1030DB3  +
push 5Ch  +
push offset dword_1031030  +
call sub_1032CCC  +
xor ebx ebx +
mov [ebp-1Ch] ebx +
mov [ebp-4] ebx +
lea eax [ebp-6Ch] +
push eax  +
call ds:GetStartupInfoW  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov dword ptr [ebp-4] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp-20h] ebx +
mov edi offset dword_10B22CC +
push ebx  +
push esi  +
push edi  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax ebx +
jnz loc_105C9E2  +
xor esi esi +
inc esi  +
mov eax dword_10B117C +
cmp eax esi +
jz loc_105CA01  +
mov eax dword_10B117C +
test eax eax +
jnz loc_1031085  +
mov dword_10B117C esi +
push offset dword_103102C  +
push offset dword_1031020  +
call sub_1030ED1  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_105CABB  +
mov eax dword_10B117C +
cmp eax esi +
jnz loc_1030FAD  +
push offset dword_103101C  +
push offset dword_1030FF0  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10B117C 2 +
cmp [ebp-20h] ebx +
jnz loc_1030FBA  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10B39E4 ebx +
jnz loc_105CA0E  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_105CABB  +
mov eax [eax] +
mov [ebp-24h] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
jbe loc_1031058  +
cmp cx 22h +
jz loc_105CA58  +
inc eax  +
inc eax  +
jmp loc_1030FD5  +
cmp cx bx +
jnz loc_1031090  +
movzx ecx word ptr [eax] +
cmp cx bx +
jnz loc_105CA30  +
test byte ptr [ebp-40h] 1 +
jz loc_103109A  +
movzx ecx word ptr [ebp-3Ch] +
push ecx  +
push eax  +
push ebx  +
push offset __ImageBase  +
call sub_1024F06  +
jmp loc_105CA44  +
mov dword_10B3D38 esi +
jmp loc_1030F89  +
cmp [ebp-1Ch] ebx +
jz loc_103105D  +
jmp loc_1030FE1  +
push 0Ah  +
pop ecx  +
jmp loc_1031073  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi off_10B1088 +
push edi  +
mov edi offset dword_10B10B0 +
test esi esi +
jz loc_10310E7  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_106D53B  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:RegisterTraceGuidsW  +
mov esi [esi] +
jmp loc_10310B8  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi offset dword_1030A08 +
mov edi offset unk_10B2F94 +
movs   +
movs   +
movs   +
movs   +
mov ebx offset dword_100D864 +
mov esi ebx +
mov edi offset unk_10B2FA4 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_101206C +
mov edi offset unk_10B3000 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3010 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1014324 +
mov edi offset unk_10B306C +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B307C +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1014314 +
mov edi offset unk_10B30D8 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B30E8 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1031CC8 +
mov edi offset unk_10B3144 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3154 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1032D64 +
mov edi offset unk_10B31B0 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B31C0 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1031CA8 +
mov edi offset unk_10B321C +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B322C +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1031CB8 +
mov edi offset unk_10B3288 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3298 +
movs   +
movs   +
movs   +
movs   +
xor edx edx +
push 7  +
xor eax eax +
pop ecx  +
mov edi offset unk_10B32FA +
stos   +
stos   +
mov dword_10B3318 edx +
mov dword_10B331C edx +
mov dword_10B3320 edx +
mov dword_10B3324 edx +
mov dword_10B332C edx +
mov dword_10B3330 edx +
mov dword_10B3334 edx +
mov dword_10B3338 edx +
mov dword_10B333C edx +
mov dword_10B3340 edx +
mov dword_10B3344 edx +
mov dword_10B3348 edx +
mov dword_10B334C edx +
mov dword_10B3350 edx +
mov dword_10B3354 edx +
mov dword_10B3358 edx +
mov dword_10B335C edx +
xor eax eax +
inc eax  +
mov dword_10B3328 eax +
mov esi offset dword_1019340 +
mov edi offset unk_10B3360 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3370 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B3380 edx +
mov dword_10B3384 offset dword_1031CE8 +
mov dword_10B3388 edx +
mov dword_10B338C edx +
mov dword_10B3390 offset aStart_showmyga +
mov dword_10B3394 0E09h +
mov dword_10B3398 edx +
mov dword_10B339C edx +
mov dword_10B33A0 edx +
mov dword_10B33A4 edx +
mov dword_10B33A8 edx +
mov dword_10B33AC 138h +
mov dword_10B33B0 edx +
mov dword_10B33B4 edx +
mov dword_10B33B8 offset dword_1031C88 +
mov dword_10B33BC 358h +
mov dword_10B33C0 400000h +
mov dword_10B33C4 edx +
mov dword_10B33C8 edx +
mov esi offset dword_1031C98 +
mov edi offset unk_10B33CC +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B33DC +
movs   +
movs   +
movs   +
movs   +
mov dword_10B33EC edx +
mov dword_10B33F0 offset dword_1031CF8 +
mov dword_10B33F4 edx +
mov dword_10B33F8 edx +
mov dword_10B33FC offset aStartmenufavor +
mov dword_10B3400 1A98h +
mov dword_10B3404 edx +
mov dword_10B3408 offset aSoftwareMicr_1 +
mov dword_10B340C edx +
mov dword_10B3410 edx +
mov dword_10B3414 202Bh +
mov dword_10B3418 edx +
mov dword_10B341C edx +
mov dword_10B3420 edx +
mov dword_10B3424 offset dword_1031BE8 +
mov dword_10B3428 8Fh +
mov dword_10B342C 4 +
mov dword_10B3430 edx +
mov dword_10B3434 edx +
mov esi offset sub_10169FC +
mov edi offset unk_10B3438 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3448 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B3458 offset a0c39a5cf1a7a40 +
mov dword_10B345C offset dword_1023FC4 +
mov dword_10B3460 edx +
mov dword_10B3464 edx +
mov dword_10B3468 offset aStart_showrece +
mov dword_10B346C 98h +
mov dword_10B3470 offset loc_1092461 +
mov dword_10B3474 edx +
mov dword_10B3478 2 +
mov dword_10B347C edx +
mov dword_10B3480 202Ch +
mov dword_10B3484 12Dh +
mov dword_10B3488 edx +
mov dword_10B348C edx +
mov dword_10B3490 offset dword_1031BF8 +
mov dword_10B3494 20Bh +
mov dword_10B3498 4000h +
mov dword_10B349C edx +
mov dword_10B34A0 edx +
mov esi offset dword_10309F8 +
mov edi offset unk_10B34A4 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B34B4 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B34C4 edx +
mov dword_10B34C8 offset dword_1031D08 +
mov dword_10B34CC edx +
mov dword_10B34D0 edx +
mov dword_10B34D4 offset aStart_showmyco +
mov dword_10B34D8 409h +
mov dword_10B34DC offset loc_109256D +
mov dword_10B34E0 edx +
mov dword_10B34E4 edx +
mov dword_10B34E8 edx +
mov dword_10B34EC edx +
mov dword_10B3504 eax +
mov dword_10B34F0 130h +
mov dword_10B34F4 edx +
mov dword_10B34F8 offset a20d04fe03aea10 +
mov dword_10B34FC offset dword_1031C78 +
mov dword_10B3500 20Ah +
mov dword_10B3508 edx +
mov dword_10B350C edx +
mov esi offset dword_1019330 +
mov edi offset unk_10B3510 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3520 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B3530 edx +
mov dword_10B3534 offset dword_1031D18 +
mov dword_10B3538 edx +
mov dword_10B353C edx +
mov dword_10B3540 offset aStart_shownetp +
mov dword_10B3544 edx +
mov dword_10B3548 edx +
mov dword_10B354C edx +
mov dword_10B3550 edx +
mov dword_10B3554 edx +
mov dword_10B3558 2029h +
mov dword_10B355C edx +
mov dword_10B3560 edx +
mov dword_10B3564 edx +
mov dword_10B3568 offset dword_1031C18 +
mov dword_10B356C 233h +
mov dword_10B3570 100h +
mov dword_10B3574 edx +
mov dword_10B3578 offset psz1 +
mov esi ebx +
mov edi offset unk_10B357C +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B358C +
movs   +
movs   +
movs   +
movs   +
or dword_10B35E4 0FFFFFFFFh +
xor eax eax +
push 7  +
mov dword_10B359C edx +
mov dword_10B35A0 offset dword_1031D28 +
mov dword_10B35A4 offset dword_103227C +
mov dword_10B35A8 edx +
mov dword_10B35AC offset aStart_shownetc +
mov dword_10B35B0 edx +
mov dword_10B35B4 edx +
mov dword_10B35B8 edx +
mov dword_10B35BC edx +
mov dword_10B35C0 edx +
mov dword_10B35C4 edx +
mov dword_10B35C8 13Eh +
mov dword_10B35CC edx +
mov dword_10B35D0 edx +
mov dword_10B35D4 offset dword_1031C68 +
mov dword_10B35D8 234h +
mov dword_10B35DC 80h +
mov dword_10B35E0 edx +
mov dword_10B35E8 edx +
mov word_10B35EC ax +
pop ecx  +
mov edi offset unk_10B35EE +
stos   +
stos   +
mov dword_10B360C edx +
mov dword_10B3610 edx +
mov dword_10B3614 edx +
mov dword_10B3618 edx +
mov dword_10B3620 edx +
mov dword_10B3624 edx +
mov dword_10B3628 edx +
mov dword_10B362C edx +
mov dword_10B3630 edx +
mov dword_10B3634 edx +
mov dword_10B3638 edx +
mov dword_10B363C edx +
mov dword_10B3640 edx +
mov dword_10B3644 edx +
mov dword_10B3648 edx +
mov dword_10B364C edx +
mov dword_10B3650 offset a5399e6946ce54d +
xor eax eax +
inc eax  +
mov dword_10B361C eax +
mov esi ebx +
mov edi offset unk_10B3654 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_101207C +
mov edi offset unk_10B3664 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B3674 edx +
mov dword_10B3678 offset dword_1031CD8 +
mov dword_10B3680 edx +
mov dword_10B3684 offset aStart_showcont +
mov dword_10B3688 89h +
mov dword_10B368C offset loc_109250D +
mov dword_10B3690 edx +
mov dword_10B3694 edx +
mov dword_10B3698 edx +
mov dword_10B369C 202Ah +
mov dword_10B36A0 133h +
mov dword_10B36A4 edx +
mov dword_10B36A8 offset a5399e6946ce5_0 +
mov dword_10B36AC offset dword_1031BD8 +
mov dword_10B36B0 80h +
mov dword_10B36B4 2 +
mov dword_10B36B8 edx +
mov dword_10B36BC offset a26ee0668A00a44 +
mov ecx offset dword_103227C +
mov dword_10B367C ecx +
mov esi ebx +
mov edi offset unk_10B36C0 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B36D0 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B36E0 edx +
mov dword_10B36E4 edx +
mov dword_10B36E8 ecx +
mov dword_10B36EC edx +
mov dword_10B36F0 offset aStart_showprin +
mov dword_10B36F4 eax +
mov dword_10B36F8 edx +
mov dword_10B36FC edx +
mov dword_10B3700 edx +
mov dword_10B3704 edx +
mov dword_10B3708 edx +
mov dword_10B370C edx +
mov dword_10B3710 edx +
mov dword_10B3714 edx +
mov dword_10B3718 offset dword_1031C28 +
mov dword_10B371C 8Ah +
mov dword_10B3720 400h +
mov dword_10B3724 edx +
mov dword_10B3728 offset aE44e5d18065245 +
mov esi ebx +
mov edi offset unk_10B372C +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B373C +
movs   +
movs   +
movs   +
movs   +
mov dword_10B374C edx +
mov dword_10B3750 offset dword_1031D38 +
mov dword_10B3754 edx +
mov dword_10B3758 edx +
mov dword_10B375C offset aStart_showsetp +
mov dword_10B3760 eax +
mov dword_10B3764 edx +
mov dword_10B3768 edx +
mov dword_10B376C edx +
mov dword_10B3770 edx +
mov dword_10B3774 edx +
mov dword_10B3778 13Ch +
mov dword_10B377C edx +
mov dword_10B3780 edx +
mov dword_10B3784 offset dword_1031C38 +
mov dword_10B3788 85h +
mov dword_10B378C 1000h +
mov dword_10B3790 edx +
mov dword_10B3794 offset a26ee0668A00a_0 +
mov esi ebx +
mov edi offset unk_10B3798 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B37A8 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B37B8 edx +
mov dword_10B37BC edx +
mov dword_10B37C0 edx +
mov dword_10B37C4 edx +
mov dword_10B37C8 offset aStart_admint_0 +
mov dword_10B37CC 18h +
mov dword_10B37D0 edx +
mov dword_10B37D4 edx +
mov dword_10B37D8 edx +
mov dword_10B37DC edx +
mov dword_10B37E0 edx +
mov dword_10B37E4 edx +
mov dword_10B37E8 edx +
mov dword_10B37EC edx +
mov dword_10B37F0 offset dword_1031C48 +
mov dword_10B37F4 8Ch +
mov dword_10B37F8 2000h +
mov dword_10B37FC edx +
mov dword_10B3800 offset a2559a1f121d711 +
mov esi ebx +
mov edi offset unk_10B3804 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3814 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B3824 edx +
mov dword_10B3828 offset dword_1031D48 +
mov dword_10B382C edx +
mov dword_10B3830 edx +
mov dword_10B3834 offset aStart_showhelp +
mov dword_10B3838 81h +
mov dword_10B383C edx +
mov dword_10B3840 edx +
mov dword_10B3844 edx +
mov dword_10B3848 edx +
mov dword_10B384C edx +
mov dword_10B3850 edx +
mov dword_10B3854 edx +
mov dword_10B3858 edx +
mov dword_10B385C offset dword_1031C08 +
mov dword_10B3860 83h +
mov dword_10B3864 8 +
mov dword_10B3868 edx +
mov dword_10B386C offset a2559a1f321d711 +
mov esi ebx +
mov edi offset unk_10B3870 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3880 +
movs   +
movs   +
movs   +
movs   +
or dword_10B38D8 0FFFFFFFFh +
mov dword_10B3890 edx +
mov dword_10B3894 offset dword_10351F0 +
mov dword_10B3898 edx +
mov dword_10B389C offset dword_1031D58 +
mov dword_10B38A0 offset aStart_showrun +
mov dword_10B38A4 80h +
mov dword_10B38A8 edx +
mov dword_10B38AC edx +
mov dword_10B38B0 edx +
mov dword_10B38B4 edx +
mov dword_10B38B8 edx +
mov dword_10B38BC edx +
mov dword_10B38C0 edx +
mov dword_10B38C4 edx +
mov dword_10B38C8 offset dword_1031C58 +
mov dword_10B38CC 8Bh +
mov dword_10B38D0 200000h +
mov dword_10B38D4 edx +
mov dword_10B38DC edx +
xor eax eax +
mov word_10B38E0 ax +
push 7  +
pop ecx  +
mov edi offset unk_10B38E2 +
stos   +
stos   +
mov dword_10B3900 edx +
mov dword_10B3904 edx +
mov dword_10B3908 edx +
mov dword_10B390C edx +
mov dword_10B3910 1 +
mov dword_10B3914 edx +
mov dword_10B3918 edx +
mov dword_10B391C edx +
mov dword_10B3920 edx +
mov dword_10B3924 edx +
mov dword_10B3928 edx +
mov dword_10B392C edx +
mov dword_10B3930 edx +
mov dword_10B3934 edx +
mov dword_10B3938 edx +
mov dword_10B393C edx +
mov dword_10B3940 edx +
mov dword_10B3944 offset a2559a1f221d711 +
mov esi ebx +
mov edi offset unk_10B3948 +
movs   +
movs   +
movs   +
movs   +
mov esi ebx +
mov edi offset unk_10B3958 +
movs   +
movs   +
movs   +
movs   +
mov dword_10B3968 edx +
pop edi  +
pop esi  +
mov dword_10B396C offset dword_1031D68 +
mov dword_10B3970 edx +
mov dword_10B3974 edx +
mov dword_10B3978 edx +
mov dword_10B397C 81h +
mov dword_10B3980 edx +
mov dword_10B3984 edx +
mov dword_10B3988 edx +
mov dword_10B398C edx +
mov dword_10B3990 edx +
mov dword_10B3994 145h +
mov dword_10B3998 (offset dword_1016E98+2) +
mov dword_10B399C edx +
mov dword_10B39A0 edx +
mov dword_10B39A4 edx +
mov dword_10B39A8 edx +
mov dword_10B39AC edx +
pop ebx  +
retn   +
***
call sub_10322A0  +
jmp sub_10191D1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword_10B10E0 0 +
jnz loc_1054B5E  +
push edi  +
lea eax [ebp+hObject] +
push eax  +
push offset aGlobalScmcreat  +
push 0  +
push 1  +
call sub_103233F  +
mov edi eax +
test edi edi +
jl loc_10322F7  +
push ebx  +
push 0EA60h  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
push [ebp+hObject]  +
mov ebx eax +
call ds:CloseHandle  +
test ebx ebx +
jnz loc_10322FC  +
mov dword_10B10E0 1 +
xor edi edi +
pop ebx  +
mov eax edi +
pop edi  +
leave   +
retn   +
cmp ebx 102h +
jnz loc_10322F6  +
jmp loc_1054B62  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ds:OpenEventW +
push edi  +
push [ebp+lpName]  +
mov edi 100002h +
push 0  +
push edi  +
call esi  +
mov [ebp+TargetHandle] eax +
test eax eax +
jnz loc_1032386  +
push ebx  +
call ds:__imp_GetLastError  +
lea ebx [edi-2] +
cmp eax 5 +
jnz loc_103237B  +
push [ebp+lpName]  +
push 0  +
push ebx  +
call esi  +
mov [ebp+TargetHandle] eax +
cmp [ebp+TargetHandle] 0 +
jz loc_105CEFC  +
pop ebx  +
mov eax [ebp+TargetHandle] +
mov ecx [ebp+arg_C] +
pop edi  +
mov [ecx] eax +
pop esi  +
test eax eax +
jz loc_103239A  +
xor eax eax +
leave   +
retn 10h  +
call sub_101AE40  +
jmp locret_1032396  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov dword ptr [ecx+70h] offset unk_10B2498 +
push [ebp+arg_0]  +
mov dword_10B10AC ecx +
push ecx  +
mov dword ptr [ecx] 84h +
mov dword ptr [ecx+64h] 300h +
call sub_10323ED  +
test eax eax +
jl loc_10323E4  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1055002  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call sub_1032CCC  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jz loc_1054D7B  +
mov eax [ebp+0Ch] +
mov [esi+10h] eax +
mov eax [ebp+10h] +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov [esi+4] eax +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov [ebp-4] ebx +
lea eax [esi+1Ch] +
push eax  +
mov edi ds:InitializeCriticalSection +
call edi  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov dword ptr [ebp-4] 1 +
lea eax [esi+34h] +
push eax  +
call edi  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov dword ptr [ebp-4] 2 +
lea eax [esi+4Ch] +
push eax  +
call edi  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [esi+68h] ebx +
mov byte ptr [esi+6Ch] 1 +
mov [esi+74h] ebx +
mov [esi+7Ch] ebx +
mov [esi+78h] ebx +
mov [esi+80h] ebx +
mov edi [esi+10h] +
cmp edi ebx +
jnz loc_1054D93  +
xor eax eax +
call sub_10324BC  +
retn 0Ch  +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
call ds:GetCommandLineW  +
push eax  +
call ds:PathGetArgsW  +
mov edx eax +
test edx edx +
jz loc_1032506  +
cmp word ptr [edx] 0 +
jnz loc_1054EBC  +
call sub_1030B8D  +
test eax eax +
jz loc_1054EFF  +
call sub_1025571  +
test eax eax +
jnz loc_1032538  +
call sub_1032544  +
test eax eax +
jnz loc_1032538  +
xor ebx ebx +
inc ebx  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
push 5  +
jmp loc_1054F01  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 1Ah  +
call ds:GetCurrentProcess  +
push eax  +
call ds:NtQueryInformationProcess  +
test eax eax +
jl loc_103256F  +
cmp [ebp+var_4] 0 +
jnz loc_1054D76  +
xor eax eax +
leave   +
retn   +
***
lea ecx [eax-0C20h] +
mov [eax+4] ecx +
lea eax [esi+0C30h] +
mov dword ptr [eax] offset off_10326B0 +
lea ecx [eax-0C30h] +
mov [eax+4] ecx +
lea eax [esi+0C3Ch] +
mov dword ptr [eax] offset off_10326CC +
lea ecx [eax-0C3Ch] +
mov [eax+4] ecx +
xor edi edi +
inc edi  +
lea ecx [esi+0DA8h] +
mov [esi+0C90h] ebx +
mov [esi+0C94h] ebx +
mov [esi+0D28h] edi +
mov [esi+0D64h] ebx +
mov [esi+0D9Ch] edi +
mov [esi+0DA4h] edi +
call sub_103276D  +
or dword ptr [esi+0E04h] 0FFFFFFFFh +
mov [esi+0DE4h] ebx +
mov eax edi +
mov dword ptr [esi+0DF0h] 80004005h +
mov [esi+0E08h] ebx +
lea ecx [esi+84h] +
mov edi ecx +
stos   +
stos   +
stos   +
stos   +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
push esi  +
mov esi ecx +
mov [esi] eax +
mov [esi+4] eax +
mov dword ptr [esi+8] 8 +
mov dword ptr [esi+0Ch] 0C8h +
mov dword ptr [esi+10h] 1388h +
mov [esi+14h] eax +
mov dword ptr [esi+18h] 2710h +
mov [esi+1Ch] al +
mov [esi+20h] eax +
mov [esi+24h] eax +
mov [esi+28h] al +
mov dword ptr [esi+2Ch] 2 +
mov dword ptr [esi+30h] 0FAh +
call sub_10327BE  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMic_22  +
push 80000002h  +
mov ebx ecx +
call ds:RegOpenKeyW  +
test eax eax +
jnz loc_1032934  +
push esi  +
push edi  +
mov edi ds:RegQueryValueExW +
push 4  +
pop esi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aMintriggerperi  +
push [ebp+hKey]  +
mov [ebp+cbData] esi +
call edi  +
test eax eax +
jnz loc_1032826  +
cmp [ebp+Type] esi +
jnz loc_1032826  +
cmp [ebp+cbData] esi +
jnz loc_1032826  +
mov eax dword ptr [ebp+Data] +
cmp eax 3E8h +
jb loc_1032826  +
mov [ebx+18h] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aLatencythresho  +
push [ebp+hKey]  +
mov [ebp+cbData] esi +
call edi  +
test eax eax +
jnz loc_103285A  +
cmp [ebp+Type] esi +
jnz loc_103285A  +
cmp [ebp+cbData] esi +
jnz loc_103285A  +
mov eax dword ptr [ebp+Data] +
cmp eax 64h +
jb loc_103285A  +
mov [ebx+0Ch] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aLatencypeak  +
push [ebp+hKey]  +
mov [ebp+cbData] esi +
call edi  +
test eax eax +
jnz loc_103288E  +
cmp [ebp+Type] esi +
jnz loc_103288E  +
cmp [ebp+cbData] esi +
jnz loc_103288E  +
mov eax dword ptr [ebp+Data] +
cmp eax [ebx+0Ch] +
jbe loc_103288E  +
mov [ebx+10h] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aLatencyaverage  +
push [ebp+hKey]  +
mov [ebp+cbData] esi +
call edi  +
test eax eax +
jnz loc_10328C2  +
cmp [ebp+Type] esi +
jnz loc_10328C2  +
cmp [ebp+cbData] esi +
jnz loc_10328C2  +
mov eax dword ptr [ebp+Data] +
cmp eax 32h +
jnb loc_10328C2  +
mov [ebx+8] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aLatencyweigthb  +
push [ebp+hKey]  +
mov [ebp+cbData] esi +
call edi  +
test eax eax +
jnz loc_10328F5  +
cmp [ebp+Type] esi +
jnz loc_10328F5  +
cmp [ebp+cbData] esi +
jnz loc_10328F5  +
mov eax dword ptr [ebp+Data] +
test eax eax +
jbe loc_10328F5  +
mov [ebx+2Ch] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aIdlethreshold  +
push [ebp+hKey]  +
mov [ebp+cbData] esi +
call edi  +
test eax eax +
jnz loc_1032929  +
cmp [ebp+Type] esi +
jnz loc_1032929  +
cmp [ebp+cbData] esi +
jnz loc_1032929  +
mov eax dword ptr [ebp+Data] +
cmp eax 32h +
jbe loc_1032929  +
mov [ebx+30h] eax +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
lea ecx [esi+2Ch] +
mov dword ptr [esi] offset off_1032B5C +
mov dword ptr [esi+8] offset off_1032B44 +
mov dword ptr [esi+0Ch] offset off_1032B28 +
call sub_1032B6D  +
xor ecx ecx +
lea eax [esi+2E0h] +
mov [eax] ecx +
mov [eax+10h] ecx +
mov [eax+34h] ecx +
mov [esi+33Ch] ecx +
mov [esi+39Ch] ecx +
mov [esi+0A50h] ecx +
mov eax esi +
pop esi  +
retn   +
***
mov eax ecx +
mov dword ptr [eax+24h] 3 +
mov dword ptr [eax+2Ch] 1 +
retn   +
***
mov eax 5A4Dh +
cmp word ptr ds:__ImageBase ax +
jnz loc_1032C24  +
mov eax ds:dword_100003C +
lea eax __ImageBase[eax] +
cmp dword ptr [eax] 4550h +
jnz loc_1032C24  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jnz loc_105CACD  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1032C24  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_10B1120 eax +
call sub_1032EA9  +
push eax  +
call ds:__set_app_type  +
or dword_10B1180 0FFFFFFFFh +
or dword_10B1184 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10B39E0 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10B39DC +
mov [eax] ecx +
call sub_100D861  +
cmp dword_10B39D0 0 +
jz loc_105CAF3  +
call sub_1032C2D  +
xor eax eax +
retn   +
***
xor eax eax +
jmp loc_1032BCB  +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
call sub_1032C60  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_1032C7C  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
call sub_1032CCC  +
mov eax dword_10B1184 +
mov [ebp-1Ch] eax +
cmp eax 0FFFFFFFFh +
jnz loc_105CB04  +
push dword ptr [ebp+8]  +
call ds:_onexit  +
pop ecx  +
call sub_10324BC  +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_10B1090 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_1030A18 +
mov edi offset unk_10B2988 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_101206C +
mov edi offset unk_10B299C +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1014324 +
mov edi offset unk_10B29B0 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1014314 +
mov edi offset unk_10B29C4 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1032D64 +
mov edi offset unk_10B29D8 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi (offset dword_1030A18+20h) +
mov edi offset unk_10B29F0 +
movs   +
movs   +
movs   +
movs   +
mov esi (offset dword_1030A18+10h) +
mov edi offset unk_10B2A04 +
movs   +
movs   +
movs   +
movs   +
mov esi (offset dword_1030A18+30h) +
mov edi offset unk_10B2A18 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1032E2C +
mov edi offset unk_10B2A2C +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1032DC8 +
mov edi offset unk_10B2A40 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi (offset dword_1030A18+20h) +
mov edi offset unk_10B2920 +
movs   +
movs   +
movs   +
movs   +
mov esi (offset dword_1030A18+10h) +
mov edi offset unk_10B2934 +
movs   +
movs   +
movs   +
movs   +
mov esi (offset dword_1030A18+30h) +
mov edi offset unk_10B2948 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1032E2C +
mov edi offset unk_10B295C +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1032DC8 +
mov edi offset unk_10B2970 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi offset unk_10B2888 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1032ED7  +
push eax  +
call sub_1032EE1  +
test eax eax +
jz loc_1032ED7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_105CB79  +
push 2  +
pop eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
call sub_1032CCC  +
xor eax eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1032F30  +
cmp ecx 0FFFFFFFFh +
jz loc_1032F30  +
and [ebp-4] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1032F29  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1032F29  +
cmp edx 10000000h +
jnb loc_1032F29  +
lea eax [edx+ecx] +
mov [ebp-1Ch] eax +
cmp dword ptr [eax] 4550h +
jnz loc_105CB6F  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_10324BC  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 7Bh  +
push [ebp+hModule]  +
call sub_1032F75  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 22Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_10B39C8 0FFFFFFFFh +
push esi  +
mov esi [ebp+hModule] +
jnz loc_1033010  +
and [ebp+var_22C] 0 +
push edi  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_228] +
stos   +
pop edi  +
test esi esi +
jz loc_105CCFD  +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push esi  +
call ds:GetModuleFileNameW  +
lea eax [ebp+Filename] +
mov [ebp+var_224] eax +
movzx eax [ebp+arg_4] +
mov [ebp+var_218] eax +
lea eax [ebp+var_22C] +
push eax  +
mov [ebp+var_22C] 20h +
mov [ebp+var_228] 88h +
mov [ebp+var_210] esi +
call ds:CreateActCtxW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_105CD0B  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp dword_10B39C8 0FFFFFFFFh +
pop esi  +
setnz al  +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 8  +
***
lea eax [ebp-1] +
push eax  +
push 0FFFFFFFFh  +
push 0  +
mov [ebp+var_1] 0 +
call WinStationIsSessionRemoteable  +
xor eax eax +
cmp [ebp+var_1] al +
setz al  +
inc eax  +
mov dword_10B113C eax +
jmp loc_1011DDB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1033131  +
movzx eax ax +
jmp loc_1033175  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
push 0  +
pop eax  +
dec edi  +
mov [esi+edi*2] ax +
mov [ebp+arg_4] esi +
mov eax 0FFFFh +
jz loc_103317F  +
push ebx  +
mov ebx [ebp+arg_0] +
dec edi  +
test ax ax +
jz loc_103317E  +
movzx eax word ptr [ebx] +
inc ebx  +
lea ecx [eax-61h] +
inc ebx  +
cmp cx 19h +
jbe loc_102A9B8  +
lea ecx [eax-41h] +
cmp cx 19h +
jbe loc_1033188  +
mov [esi] ax +
inc esi  +
inc esi  +
test edi edi +
ja loc_1033154  +
pop ebx  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
movzx eax ax +
push 0Dh  +
sub eax 41h +
push eax  +
call sub_10331A0  +
add eax 41h +
jmp loc_1033127  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cdq   +
push 1Ah  +
pop ecx  +
idiv  ecx +
mov eax edx +
test eax eax +
jl loc_105D2AE  +
pop ebp  +
retn 8  +
***
call SHELL32_753  +
mov [esi] edi +
jmp loc_100DE53  +
***
pop edi  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
mov ebx ecx +
mov [ebp+var_8] esi +
cmp [ebx+34h] esi +
jnz loc_1033222  +
call sub_10334C1  +
cmp [ebx+34h] esi +
jz loc_10331F5  +
mov [ebp+var_4] esi +
push edi  +
mov eax [ebx+34h] +
test eax eax +
jz loc_103325C  +
mov eax [eax] +
cmp [ebp+var_4] eax +
jge loc_10331F4  +
push [ebp+var_4]  +
push dword ptr [ebx+34h]  +
call ds:off_1003D88  +
mov edi [ebp+arg_0] +
push 4  +
mov esi eax +
pop ecx  +
xor eax eax +
cmps   +
jz loc_1033253  +
inc [ebp+var_4]  +
jmp loc_1033226  +
mov [ebp+var_8] 1 +
jmp loc_103324E  +
xor eax eax +
jmp loc_103322F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea eax [ecx+438h] +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
mov esi eax +
xor edx edx +
cmps   +
pop edi  +
pop esi  +
jz loc_1033299  +
push [ebp+cbMax]  +
push [ebp+lpsz]  +
push eax  +
call ds:__imp_StringFromGUID2  +
test eax eax +
jz loc_1033299  +
pop ebp  +
retn 8  +
push offset byte_1002CD0  +
push [ebp+cbMax]  +
push [ebp+lpsz]  +
call sub_100665F  +
jmp loc_1033295  +
***
push 9  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
mov ecx ebx +
call sub_10332C7  +
jmp loc_1023980  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_88] 0 +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_94] ecx +
inc esi  +
push [ebp+var_88]  +
mov ecx [ebp+var_94] +
call sub_1010881  +
push 0FFFFFFFFh  +
mov ecx eax +
push 2  +
mov [ebp+var_90] ecx +
call sub_1010EB3  +
and [ebp+wParam] 0 +
mov [ebp+var_98] eax +
test eax eax +
jle loc_103346A  +
mov ecx [ebp+var_90] +
push esi  +
push [ebp+wParam]  +
call sub_1010F3D  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jz loc_1033452  +
push 40h  +
lea eax [ebp+sz] +
push eax  +
mov ecx edi +
call sub_1033265  +
push 40h  +
lea eax [ebp+var_D8] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [edi+24h] +
push eax  +
call ds:__imp_PathFindFileNameW  +
push eax  +
lea eax [ebp+var_D8] +
push eax  +
call sub_1033491  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+var_D0] +
push eax  +
call sub_1033491  +
mov eax [edi+4] +
mov [ebp+var_C4] eax +
mov eax [ebp+var_88] +
mov [ebp+var_BC] eax +
mov eax [ebp+wParam] +
mov [ebp+var_B4] eax +
mov eax [ebp+var_98] +
mov [ebp+var_AC] eax +
mov eax [ebp+var_94] +
lea ecx [eax+29Ch] +
mov [ebp+var_C8] esi +
mov [ebp+var_C0] esi +
mov [ebp+var_B8] esi +
mov [ebp+var_B0] esi +
cmp [ebp+var_90] ecx +
jnz loc_1033416  +
push 3  +
pop ebx  +
lea ecx [edi+438h] +
push ecx  +
lea ecx [eax+2E0h] +
call sub_1033203  +
test eax eax +
jz loc_1033416  +
lea eax [edi+438h] +
push eax  +
call sub_1024025  +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
inc ebx  +
inc ebx  +
push 0  +
mov ecx edi +
mov [ebp+var_A4] ebx +
mov [ebp+var_A8] esi +
call sub_1010EFE  +
neg eax  +
sbb eax eax +
neg eax  +
mov [ebp+var_9C] eax +
lea eax [ebp+var_D8] +
push eax  +
push 8  +
push 111Fh  +
push 0  +
mov [ebp+var_A0] esi +
call WinSqmAddToStream  +
inc [ebp+wParam]  +
mov eax [ebp+wParam] +
cmp eax [ebp+var_98] +
jl loc_1033326  +
inc [ebp+var_88]  +
cmp [ebp+var_88] 3 +
jl loc_10332EF  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_10334B5  +
cmp word ptr [eax] 0 +
mov ecx eax +
jz loc_10334B5  +
mov eax [ebp+arg_0] +
mov [eax+4] ecx +
mov dword ptr [eax] 2 +
pop ebp  +
retn 8  +
mov ecx offset aNull +
jmp loc_10334A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 424h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax ecx +
push esi  +
lea esi [eax+34h] +
cmp dword ptr [esi] 0 +
jnz loc_10334F3  +
push 4  +
mov ecx esi +
call sub_1003E30  +
cmp dword ptr [esi] 0 +
jz loc_1033577  +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
push offset aPromotediconca  +
push offset aSoftwareClasse  +
push 80000001h  +
call sub_103358D  +
test eax eax +
jl loc_1033576  +
push ebx  +
push edi  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_103311F  +
lea ebx [ebp+var_414] +
push offset word_1033584  +
push ebx  +
call ds:wcsstr  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_103354F  +
xor eax eax +
mov [edi] ax +
inc edi  +
inc edi  +
lea eax [ebp+pclsid] +
push eax  +
push ebx  +
call ds:CLSIDFromString  +
test eax eax +
jl loc_103356F  +
lea eax [ebp+pclsid] +
push eax  +
mov ecx esi +
call sub_1003DE4  +
mov ebx edi +
test edi edi +
jnz loc_1033534  +
pop ebx  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push 2  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10335B1  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
mov edi [ebp+arg_10] +
cmp esi 7FFFFFFFh +
ja loc_10335FA  +
lea eax [esi+esi] +
mov [ebp+arg_14] eax +
lea eax [ebp+arg_14] +
push eax  +
push edi  +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHRegGetValueW  +
test eax eax +
jnz loc_105CBDF  +
pop edi  +
pop esi  +
test eax eax +
jg loc_105CBF1  +
pop ebp  +
retn 18h  +
mov eax 216h +
jmp loc_10335E4  +
***
push ebx  +
push esi  +
mov eax [edi+14h] +
mov eax [eax+4] +
mov ecx [ebp-0Ch] +
mov ebx [eax+ecx*4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0Ch]  +
mov esi eax +
test esi esi +
jz loc_1033640  +
mov eax [esi] +
push esi  +
call dword ptr [eax+64h]  +
mov [ebp-18h] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+6Ch]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [ebp-18h] +
test ecx ecx +
jnz loc_1066B80  +
mov edi [ebp+8] +
inc dword ptr [ebp-0Ch]  +
mov eax [ebp-0Ch] +
cmp eax [ebp-10h] +
jl loc_1033603  +
cmp dword ptr [ebp-8] 0 +
pop esi  +
pop ebx  +
jz loc_1005EF3  +
jmp loc_1066C13  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+64h] +
pop ebp  +
retn 4  +
***
pop esi  +
pop ebx  +
jmp loc_100609B  +
***
mov eax [ecx+18h] +
mov ebx [ebp-4] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
test ebx ebx +
jz loc_10336C0  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0C8h]  +
mov ecx [ebx] +
push ebx  +
mov [ebp-10h] eax +
call dword ptr [ecx+0C8h]  +
mov ecx [ebp-10h] +
cmp eax ecx +
jb loc_10336C0  +
inc edi  +
cmp edi [ebp-8] +
jge loc_1033670  +
mov ecx [ebp-0Ch] +
jmp loc_1033689  +
mov [ebp-4] esi +
jmp loc_10336B5  +
***
mov [ebp+var_234] edi +
jmp loc_1005F4A  +
***
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
push ebx  +
sbb edx edx +
push 6  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_100713F  +
jmp loc_1066616  +
***
push edi  +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
push edi  +
push dword ptr [ebp+8]  +
lea ecx [esi-8] +
mov [ebp+0Ch] edi +
call sub_1004615  +
test eax eax +
jl loc_1005CC6  +
push edi  +
jmp loc_1005CAB  +
***
cmp [esi+1Ch] ecx +
jz loc_10066E0  +
cmp eax ebx +
jmp loc_1006C97  +
***
cmp [esi+1Ch] ecx +
jz loc_1006CA5  +
mov dword ptr [esi+18h] 3 +
jmp loc_1006CC7  +
***
cmp ebx 1 +
jnz loc_1033753  +
mov ecx [esi+8] +
call sub_1004226  +
test al 2 +
jz loc_100BB1A  +
cmp ebx 3 +
jz loc_100C6A8  +
mov ecx [esi+8] +
call sub_1004226  +
test al 2 +
jz loc_100BBFD  +
jmp loc_100C6A8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
cmp [esi+1Ch] eax +
jz loc_10337B2  +
mov [esi+1Ch] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
mov ecx [esi+8] +
call sub_1004226  +
test al 2 +
jz loc_106657E  +
mov ecx [esi+8] +
lea eax [esi-8] +
neg eax  +
sbb eax eax +
and eax esi +
push eax  +
call sub_10337BC  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+idChild] +
mov eax [esi] +
push edi  +
push esi  +
mov edi ecx +
call dword ptr [eax+0Ch]  +
sub eax 3 +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp+var_8] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
mov ebx eax +
mov eax [edi+20h] +
dec ebx  +
neg ebx  +
sbb ebx ebx +
or [ebp+idChild] 0FFFFFFFFh +
add eax 10h +
mov [ebp+var_4] eax +
lea eax [ebp+idChild] +
push eax  +
mov eax [esi] +
push 0  +
push esi  +
inc ebx  +
call dword ptr [eax+14h]  +
push eax  +
lea eax [edi+20h] +
push eax  +
mov eax [ebp+var_4] +
call dword ptr [eax]  +
test eax eax +
jl loc_103386A  +
cmp [ebp+var_8] 0 +
jz loc_103395B  +
inc [ebp+idChild]  +
push [ebp+idChild]  +
mov ebx ds:NotifyWinEvent +
push 0FFFFFFFCh  +
push dword ptr [edi+4]  +
push 8002h  +
call ebx  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
mov [ebp+var_C] eax +
mov [ebp+var_4] ecx +
jl loc_103386A  +
mov eax [ebp+idChild] +
mov ecx [ebp+var_4] +
add ecx eax +
push ecx  +
push 0FFFFFFFCh  +
push dword ptr [edi+4]  +
push 8003h  +
call ebx  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_C] +
jle loc_103384A  +
cmp [ebp+var_8] 0 +
jnz loc_1033CD8  +
push 0  +
push 0Ch  +
lea eax [edi+1Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp dword_10B24CC 0 +
jz loc_10338B9  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1033CF7  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov ebx 80000000h +
and eax edx +
and ecx ebx +
or eax ecx +
jnz loc_1064660  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
push edi  +
push 104h  +
lea eax [ebp+var_210] +
push eax  +
call sub_100665F  +
mov eax [edi+208h] +
mov [ebp+var_8] eax +
lea eax [ebp+var_210] +
push eax  +
inc ebx  +
push ebx  +
push dword ptr [esi]  +
call ds:off_1003DB4  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov [ebp+var_218] ecx +
test ecx ecx +
jz loc_10273A8  +
push [ebp+var_214]  +
push dword ptr [esi]  +
call ds:off_10067B4  +
jmp loc_100786A  +
cmp [ebp+var_21C] eax +
jnz loc_1007881  +
jmp loc_10273B3  +
mov eax [esi+1Ch] +
cmp eax ecx +
jz loc_1033947  +
mov eax [eax] +
cmp eax 1 +
jnz loc_100D28A  +
lea eax [esi+8] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+58h]  +
jmp loc_100D28A  +
xor eax eax +
jmp loc_103392F  +
push 1  +
push edi  +
lea ecx [esi-8] +
call sub_100D1B5  +
jmp loc_100D018  +
test ebx ebx +
jz loc_1033874  +
inc [ebp+idChild]  +
push [ebp+idChild]  +
mov ebx ds:NotifyWinEvent +
push 0FFFFFFFCh  +
push dword ptr [edi+4]  +
push 8003h  +
call ebx  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
mov [ebp+var_C] eax +
mov [ebp+var_4] ecx +
jl loc_1033874  +
mov eax [ebp+idChild] +
mov ecx [ebp+var_4] +
add ecx eax +
push ecx  +
push 0FFFFFFFCh  +
push dword ptr [edi+4]  +
push 8002h  +
call ebx  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_C] +
jg loc_103386A  +
jmp loc_1033995  +
***
cmp [ebp+arg_8] 0 +
jz loc_100C9C6  +
test ebx ebx +
jl loc_100C9C6  +
cmp ebx eax +
jge loc_100C9C6  +
dec eax  +
mov [esi+0B8h] eax +
jmp loc_100C9C6  +
***
push edi  +
push 0FFh  +
push esi  +
push [ebp+hdc]  +
mov ecx ebx +
call sub_1033A0A  +
jmp loc_1005559  +
cmp edi 1 +
jg loc_1067605  +
jmp loc_1005559  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
push 54h  +
pop esi  +
push esi  +
lea eax [ebp+var_58] +
push 0  +
push eax  +
mov edi ecx +
call memset  +
mov [ebp+var_58] esi +
mov esi [ebp+arg_4] +
add esp 0Ch +
lea eax [esi+44h] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
push 2  +
pop ebx  +
push [ebp+arg_C]  +
mov ecx edi +
mov [ebp+var_44] ebx +
mov [ebp+var_3C] ebx +
mov [ebp+var_40] ebx +
mov [ebp+var_38] ebx +
call sub_1005B99  +
mov ecx [esi+4Ch] +
sub ecx [esi+44h] +
and [ebp+var_44] 0 +
sub ecx eax +
mov eax [ebp+arg_C] +
dec eax  +
mov [ebp+arg_4] eax +
mov eax ecx +
mov ecx [ebp+arg_4] +
cdq   +
idiv  ecx +
push 0FFFFFFFFh  +
push 0  +
mov [ebp+arg_4] eax +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov eax [ebp+rc.left] +
mov ecx [ebp+arg_4] +
lea eax [ecx+eax-1] +
mov [ebp+rc.right] eax +
mov eax [edi+10h] +
add eax 14h +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+2Ch]  +
cdq   +
and edx 7 +
add eax edx +
mov edx [esi+10h] +
mov ecx eax +
mov eax [esi+18h] +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
add eax [esi+10h] +
sar ecx 3 +
mov [ebp+var_34] eax +
mov eax [esi+1Ch] +
sub eax ecx +
mov [ebp+var_30] eax +
mov eax [edi+10h] +
mov eax [eax+38h] +
mov eax [eax] +
add eax 18h +
mov [ebp+var_4] eax +
lea eax [ebp+var_2C] +
push eax  +
push dword ptr [esi+0Ch]  +
mov ecx edi +
call sub_10059F8  +
push eax  +
push dword ptr [edi+14h]  +
mov eax [edi+10h] +
push dword ptr [eax+38h]  +
mov eax [ebp+var_4] +
call dword ptr [eax]  +
test eax eax +
jl loc_1066E25  +
mov eax [esi+7Ch] +
movzx ecx [ebp+arg_8] +
mov [ebp+var_C] eax +
mov [ebp+var_10] eax +
movzx eax byte ptr [esi+80h] +
imul eax ecx +
cdq   +
mov ecx 0FFh +
idiv  ecx +
push 0FFFFFFECh  +
mov [ebp+var_28] 0FFFFFFh +
mov [ebp+var_24] 1Eh +
mov [ebp+var_20] ebx +
mov [ebp+var_8] al +
mov eax [edi+10h] +
push dword ptr [eax+4]  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_1066E31  +
xor esi esi +
inc esi  +
mov eax [ebp+arg_C] +
cmp eax 4 +
jge loc_1066E42  +
cmp esi eax +
jge loc_1033B73  +
lea eax [ebp+var_58] +
push eax  +
push [ebp+arg_0]  +
call sub_100BD92  +
push 0  +
push [ebp+arg_4]  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
inc esi  +
jmp loc_1033B45  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov dword ptr [ebp-4] 1 +
jmp loc_100AD79  +
***
xor eax eax +
jmp loc_100DC0F  +
***
cmp dword ptr [edi+48h] 0FF000000h +
jz loc_1023DC4  +
mov eax [edi+48h] +
jmp loc_100C5D1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-14h] +
mov dword ptr [ebp-4] 80004005h +
call sub_1005D55  +
mov edi eax +
test edi edi +
jz loc_1033CCF  +
mov eax [edi] +
push ebx  +
xor ebx ebx +
inc ebx  +
push edi  +
mov [ebp-4] ebx +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jnz loc_10440D3  +
mov eax [edi] +
lea ecx [ebp-8] +
push ecx  +
push 0  +
push edi  +
call dword ptr [eax+9Ch]  +
cmp eax 0FFFFh +
jz loc_1064D18  +
push 0  +
push 0Ch  +
add esi 8 +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1064D43  +
xor ebx ebx +
cmp [ebp+14h] ebx +
jnz loc_1033C25  +
cmp [ebp+10h] ebx +
jnz loc_10440DD  +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_10440D3  +
mov esi offset dword_1033C98 +
push esi  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz loc_10440D3  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1033CB1  +
and [ebp+0Ch] ebx +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_1033CA8  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
test eax eax +
jnz loc_1064D54  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1033C64  +
***
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_1064D5A  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_10440DD  +
cmp ebx 1 +
jg loc_1064D63  +
pop ebx  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov ebx [edi+14h] +
mov eax [esi] +
push 0  +
push 0  +
push esi  +
add ebx 98h +
call dword ptr [eax+14h]  +
push eax  +
lea eax [edi+14h] +
push eax  +
call dword ptr [ebx]  +
jmp loc_1033882  +
test al al +
jz loc_1033898  +
jmp loc_10338B9  +
***
mov eax [edi] +
push 1  +
push edi  +
call dword ptr [eax+58h]  +
jmp loc_1006E85  +
***
xor eax eax +
inc eax  +
jmp loc_10075F4  +
***
xor esi esi +
jmp loc_10075E9  +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi] 0 +
push 10h  +
call sub_100801C  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1008370  +
mov ecx esi +
pop esi  +
jmp sub_10082DC  +
***
push dword ptr [ebp+10h]  +
lea ecx [edi-20h] +
push esi  +
call sub_1033D7E  +
mov ebx eax +
test ebx ebx +
jl loc_100C5D6  +
mov eax [esi] +
lea ecx [ebp+0Ch] +
push ecx  +
push dword ptr [ebp+10h]  +
push esi  +
call dword ptr [eax+48h]  +
mov ebx eax +
jmp loc_100C5BF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea esi [ecx+20h] +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push 0  +
push [ebp+arg_4]  +
push ebx  +
push esi  +
call dword ptr [eax+10h]  +
mov edi eax +
test edi edi +
jl loc_1033DFB  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_1033DFB  +
movzx eax word ptr [ebp+arg_0] +
push 8001h  +
push eax  +
push [ebp+var_8]  +
call ds:off_10084F8  +
mov esi eax +
test esi esi +
jz loc_100DCA8  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call sub_1033E09  +
test eax eax +
jz loc_100DC9C  +
push [ebp+var_4]  +
mov eax [ebx] +
push [ebp+arg_4]  +
push ebx  +
call dword ptr [eax+4Ch]  +
push esi  +
mov edi eax +
call ds:DestroyIcon  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A8h +
push ebx  +
push esi  +
mov esi ds:GetSystemMetrics +
push edi  +
xor edi edi +
push 0Bh  +
mov [ebp+var_20] edi +
call esi  +
mov ebx eax +
push 0Ch  +
mov [ebp+var_C] ebx +
call esi  +
push edi  +
mov esi eax +
call ds:CreateCompatibleDC  +
lea ecx [ebp+hdc] +
push ecx  +
push edi  +
push 2  +
lea ecx [ebp+var_3C] +
push ecx  +
push eax  +
mov [ebp+var_28] eax +
mov [ebp+var_3C] edi +
mov [ebp+var_38] edi +
mov [ebp+var_34] ebx +
mov [ebp+var_30] esi +
call ds:BeginBufferedPaint  +
mov [ebp+var_18] eax +
cmp eax edi +
jz loc_103408A  +
lea ecx [ebp+var_3C] +
push ecx  +
push eax  +
call ds:BufferedPaintClear  +
push 3  +
push edi  +
push edi  +
push esi  +
push ebx  +
push [ebp+nDenominator]  +
push edi  +
push edi  +
push [ebp+hdc]  +
call ds:DrawIconEx  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_18]  +
call ds:GetBufferedPaintBits  +
lea ebx [ebp+var_A8] +
mov [ebp+nDenominator] 1Ah +
mov ecx ebx +
call sub_1033D25  +
add ebx 4 +
dec [ebp+nDenominator]  +
jns loc_1033EA1  +
cmp esi edi +
jle loc_1033F92  +
mov ecx [ebp+var_8] +
mov [ebp+var_10] esi +
mov esi [ebp+var_C] +
cmp esi edi +
jle loc_1033F7D  +
mov dl [ecx+3] +
test dl dl +
jbe loc_1033F70  +
movzx eax byte ptr [ecx+2] +
imul eax eax +
movzx edi dl +
cdq   +
idiv  edi +
mov [ecx+2] al +
mov ecx [ebp+var_8] +
movzx eax byte ptr [ecx+1] +
movzx edi byte ptr [ecx+3] +
imul eax eax +
cdq   +
idiv  edi +
mov [ecx+1] al +
mov ecx [ebp+var_8] +
movzx eax byte ptr [ecx] +
movzx edi byte ptr [ecx+3] +
imul eax eax +
cdq   +
idiv  edi +
mov [ecx] al +
mov ecx [ebp+var_8] +
mov al [ecx] +
mov bl [ecx+1] +
mov byte ptr [ebp+nDenominator+3] al +
cmp bl al +
ja loc_1054173  +
mov dl [ecx+2] +
cmp dl al +
ja loc_1054181  +
mov al byte ptr [ebp+nDenominator+3] +
mov [ebp+var_1] bl +
cmp bl al +
ja loc_1033F3E  +
mov [ebp+var_1] al +
mov al byte ptr [ebp+nDenominator+3] +
cmp bl al +
jb loc_10340DB  +
cmp dl al +
jb loc_10340E2  +
mov al byte ptr [ebp+nDenominator+3] +
cmp bl al +
jb loc_105417A  +
movzx edi [ebp+var_1] +
movzx eax al +
sub edi eax +
cmp edi 30h +
jg loc_105412C  +
xor edi edi +
add ecx 4 +
dec esi  +
mov [ebp+var_8] ecx +
jnz loc_1033EC9  +
mov eax [ebp+var_24] +
sub eax [ebp+var_C] +
dec [ebp+var_10]  +
lea ecx [ecx+eax*4] +
mov [ebp+var_8] ecx +
jnz loc_1033EBE  +
or eax 0FFFFFFFFh +
mov [ebp+nDenominator] edi +
xor esi esi +
mov ecx [ebp+esi*4+var_A8] +
cmp ecx edi +
jz loc_103409B  +
mov edx [ecx] +
add [ebp+nDenominator] edx +
cmp eax 0FFFFFFFFh +
jz loc_1034094  +
mov ecx [ebp+eax*4+var_A8] +
cmp ecx edi +
jz loc_10340A2  +
mov ecx [ecx] +
cmp edx ecx +
jg loc_1034094  +
inc esi  +
cmp esi 1Bh +
jb loc_1033F9A  +
lea eax [ebp+eax*4+var_A8] +
mov eax [eax] +
xor esi esi +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
mov [ebp+var_C] edi +
cmp eax edi +
jz loc_10340A9  +
mov edx [eax] +
cmp edx edi +
jle loc_1034020  +
mov ecx [eax+4] +
mov [ebp+var_1C] edx +
mov esi edx +
mov eax [ecx] +
movzx edi byte ptr [eax+2] +
add [ebp+var_C] edi +
movzx edi byte ptr [eax+1] +
movzx eax byte ptr [eax] +
add [ebp+var_10] edi +
add [ebp+var_14] eax +
add ecx 4 +
dec [ebp+var_1C]  +
jnz loc_1034000  +
xor edi edi +
push [ebp+nDenominator]  +
push 64h  +
push edx  +
call ds:MulDiv  +
cmp eax 7 +
jl loc_1034062  +
mov eax [ebp+var_14] +
cdq   +
idiv  esi +
mov [ebp+var_20] 1 +
movzx ecx al +
mov eax [ebp+var_10] +
cdq   +
idiv  esi +
shl ecx 8 +
movzx eax al +
or ecx eax +
mov eax [ebp+var_C] +
cdq   +
idiv  esi +
shl ecx 8 +
movzx eax al +
or ecx eax +
mov eax [ebp+arg_4] +
mov [eax] ecx +
push edi  +
push [ebp+var_18]  +
call ds:EndBufferedPaint  +
push [ebp+var_28]  +
call ds:DeleteDC  +
push offset loc_1033D3D  +
push 1Bh  +
push 4  +
lea eax [ebp+var_A8] +
push eax  +
call sub_10340B5  +
mov eax [ebp+var_20] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax esi +
jmp loc_1033FD0  +
xor edx edx +
jmp loc_1033FAB  +
xor ecx ecx +
jmp loc_1033FC8  +
xor edx edx +
jmp loc_1033FF4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
imul eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
add esi eax +
dec [ebp+arg_8]  +
js loc_10340D6  +
sub esi [ebp+arg_4] +
mov ecx esi +
call [ebp+arg_C]  +
jmp loc_10340C7  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov al bl +
jmp loc_1033F49  +
mov al dl +
jmp loc_1033F5C  +
***
mov ecx [ebp+10h] +
and dword ptr [ecx] 0 +
jmp loc_100C610  +
***
test eax eax +
jnz loc_10587B1  +
push dword ptr [esi+0C50h]  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1034137  +
mov eax [ebp+rc.left] +
mov edx [ebp+rc.right] +
mov ecx [ebp+rc.top] +
sub edx eax +
mov [edi+8] eax +
mov eax [ebp+rc.bottom] +
sub eax ecx +
and dword ptr [edi+18h] 0FFFFFFFCh +
mov [edi+0Ch] ecx +
mov [edi+10h] edx +
mov [edi+14h] eax +
jmp loc_100DB15  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
push ebx  +
jnz loc_1055F23  +
mov ebx [ecx+0CD8h] +
push esi  +
push edi  +
mov edi [ebp+lprc] +
mov eax ebx +
shl eax 4 +
lea esi [eax+ecx+44h] +
movs   +
movs   +
movs   +
movs   +
mov eax [ecx+40h] +
pop edi  +
pop esi  +
test al 1 +
jnz loc_1055F37  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax [esi+18h] +
test al 4 +
jnz loc_100D9C9  +
or dword ptr [esi+4] 0FFFFFFFFh +
or eax 400h +
mov [esi+18h] eax +
xor eax eax +
jmp loc_100D9D8  +
***
mov edi [ebp+lParam] +
test byte ptr [edi+18h] 2 +
jnz loc_100D8F6  +
jmp loc_10579A4  +
***
mov eax [esi+0B10h] +
mov [edi+4] eax +
jmp loc_100DB1F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
call sub_1034205  +
test eax eax +
jnz loc_105603F  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 4 +
jnb loc_1056038  +
push esi  +
lea esi [ecx+eax*4+0D44h] +
push dword ptr [esi]  +
call ds:IsWindow  +
test eax eax +
jnz loc_103422C  +
and [esi] eax +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
jz loc_105B41C  +
add eax 0FFFFFFFBh +
cmp esi eax +
ja loc_1052CCC  +
jnz loc_100DD20  +
cmp [ebx+338h] ecx +
jz loc_100DAC9  +
jmp loc_105B30B  +
***
push dword ptr [ebx+0CD8h]  +
mov ecx ebx +
push [ebp+hWndParent]  +
call sub_10341E3  +
push esi  +
push esi  +
push 404h  +
push dword ptr [ebx+0C04h]  +
call ds:SendMessageW  +
cmp byte ptr [ebx+0DE9h] 0 +
jz loc_10021F8  +
mov eax [ebp+lParam] +
mov eax [eax+18h] +
and eax 3 +
cmp al 3 +
jz loc_10021F8  +
mov ecx [ebp+hdc] +
call sub_1015ECE  +
jmp loc_10021F8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx ecx +
cmp dword_10B10F8 edi +
jnz loc_10342D3  +
cmp [ebx+0C74h] edi +
jnz loc_10342D3  +
cmp [ebx+1Ch] edi +
jnz loc_1052F53  +
or edi 0FFFFFFFFh +
mov ecx ebx +
call sub_1034301  +
mov esi eax +
neg esi  +
sbb esi esi +
neg esi  +
dec esi  +
dec esi  +
cmp edi esi +
jnz loc_100DD77  +
cmp [ebp+arg_0] 0 +
jnz loc_1034313  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call ds:GetWindowLongW  +
shr eax 3 +
and eax 1 +
retn   +
***
push edi  +
push dword ptr [ebx+4]  +
call sub_1034368  +
cmp edi esi +
jz loc_103670E  +
push edi  +
push offset sub_1034337  +
call ds:EnumWindows  +
jmp loc_10342F5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hWnd] +
cmp esi hWnd +
jz loc_103435B  +
push esi  +
call ds:GetParent  +
cmp eax hWnd +
jz loc_1036637  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
push [ebp+hWndInsertAfter]  +
push esi  +
call sub_10343A5  +
mov edi eax +
test edi edi +
jz loc_1034398  +
cmp [ebp+hWndInsertAfter] 0FFFFFFFFh +
jnz loc_1034398  +
push 0FFFFFFECh  +
push esi  +
call ds:GetWindowLongW  +
test al 8 +
jz loc_105CD9F  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 213h  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push [ebp+hWndInsertAfter]  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1034416  +
cmp ecx 7FFFFFFFh +
ja loc_1034416  +
test eax eax +
jl loc_1034414  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:__imp__vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_103441D  +
cmp eax esi +
ja loc_103441D  +
jz loc_1054ACC  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
mov eax 80070057h +
jmp loc_10343E0  +
mov ebx 8007007Ah +
jmp loc_1054ACC  +
***
mov eax 117h +
cmp ebx eax +
jbe loc_1034469  +
mov ecx ebx +
mov eax 120h +
sub ecx eax +
jz loc_1043C38  +
dec ecx  +
jnz loc_1034C34  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 121h  +
push esi  +
call sub_104323F  +
jmp loc_100F18F  +
***
jz loc_1043C38  +
mov eax ebx +
sub eax 7Bh +
jz loc_1043C17  +
sub eax 3 +
jz loc_1050F72  +
sub eax 4 +
jz loc_1018EFC  +
sub eax 91h +
jnz loc_100F209  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 113h  +
push esi  +
call sub_10408B2  +
jmp loc_100F18F  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp Target 0 +
jz loc_102E52D  +
cmp Target 1 +
jz loc_105D035  +
xor eax eax +
cmp Target 1 +
setz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1034540  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+14h] +
and dword ptr [edx] 0 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
xor ebx ebx +
mov edi offset dword_100DB38 +
cmps   +
pop edi  +
pop esi  +
mov eax 80004005h +
pop ebx  +
jz loc_10345CE  +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 4 +
jmp sub_100209D  +
***
sub dword ptr [esp+4] 4 +
jmp sub_10020BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
mov eax offset dword_100DB38 +
push eax  +
push eax  +
push dword ptr [ecx+34h]  +
call ds:IUnknown_QueryService  +
mov eax [ebp+var_4] +
leave   +
retn   +
***
mov eax [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFFCh +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
jmp loc_1034584  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+6E0h] ebx +
jnz loc_103468D  +
push edi  +
mov dword ptr [esi+6E0h] 1 +
mov [ebp+var_4] ebx +
mov edi 8000h +
push 980003h  +
push edi  +
push edi  +
push dword ptr [esi+38h]  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_1034626  +
mov ecx esi +
call sub_10345AB  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_103465B  +
cmp [ebp+arg_0] ebx +
jnz loc_103465B  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp [ebp+var_4] ebx +
jnz loc_103467D  +
cmp [esi+94h] ebx +
jnz sub_103D2D9  +
push dword ptr [esi+38h]  +
call ds:IsWindowVisible  +
test eax eax +
jnz sub_103D2D9  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
mov [esi+6E0h] ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
cmp edx ebx +
jnz loc_100DF55  +
cmp [esi+6CCh] ebx +
jnz loc_100DF55  +
lea eax [ebp+pgui] +
push eax  +
push ebx  +
mov [ebp+pgui.cbSize] 30h +
call ds:GetGUIThreadInfo  +
test eax eax +
jz loc_100DF55  +
mov eax [ebp+pgui.hwndActive] +
jmp loc_10346ED  +
***
mov edi edi +
jmp loc_100E25D  +
***
cmp eax ebx +
jz sub_10346DC  +
push eax  +
call ds:GetParent  +
cmp eax [esi+38h] +
jnz loc_10346E2  +
jmp loc_105E939  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [eax] edi +
cmp [esi+0E4h] edi +
jz loc_103474D  +
push ebx  +
lea eax [ebp+arg_0+3] +
push eax  +
lea ecx [esi-30h] +
call sub_103475A  +
test eax eax +
jnz loc_1064704  +
lea edx [esi-30h] +
neg edx  +
push edi  +
sbb edx edx +
push 23h  +
lea ebx [esi-1Ch] +
and edx ebx +
lea eax [esi-14h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_106470E  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+1A4h] +
test eax eax +
jz loc_103478A  +
lea ecx [ebp+hWnd] +
push ecx  +
push eax  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_103478A  +
push [ebp+hWnd]  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_1064424  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
add eax 0FFFFFFF8h +
push offset off_10347E8  +
push eax  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
lea ebx [edi+20h] +
push ebx  +
call sub_1002BEE  +
lea esi [edi+1Ch] +
push esi  +
call sub_1002BEE  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_10348BF  +
mov ecx [eax] +
push esi  +
push offset dword_10348CC  +
push eax  +
call dword ptr [ecx]  +
mov [ebp-4] eax +
test eax eax +
jl loc_10348BF  +
mov eax [esi] +
mov ecx [eax] +
push ebx  +
push offset dword_10348DC  +
push eax  +
call dword ptr [ecx]  +
mov esi [esi] +
mov eax [esi] +
push 0FFFFFFECh  +
push esi  +
call dword ptr [eax+44h]  +
push eax  +
call ds:GetWindowLongW  +
push eax  +
push 403000h  +
push 0FFFFFFECh  +
push dword ptr [edi+2Ch]  +
call ds:SHLWAPI_165  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_100DB38 +
xor edx edx +
cmps   +
pop edi  +
mov eax 80004005h +
pop esi  +
jnz loc_1034921  +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFDCh +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 30h +
jmp loc_1003C0B  +
***
sub dword ptr [esp+4] 30h +
jmp loc_1003BF1  +
***
sub dword ptr [esp+4] 10h +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 2Ch +
jmp loc_1003BF1  +
***
mov ecx 434h +
cmp eax ecx +
ja loc_10366C2  +
jz loc_1040254  +
mov ecx 318h +
cmp eax ecx +
jbe loc_1034A82  +
sub eax 31Ah +
jnz loc_100E802  +
mov ecx esi +
call sub_101E8AD  +
jmp loc_10024DE  +
***
mov eax 2A1h +
cmp ebx eax +
ja loc_1035310  +
jz loc_1066347  +
mov eax 207h +
cmp ebx eax +
ja loc_1045840  +
jz loc_1034B04  +
mov eax ebx +
sub eax 200h +
jnz loc_1034AF3  +
mov eax edi +
shr eax 10h +
cwde   +
push eax  +
movsx eax di +
push eax  +
mov ecx esi +
call sub_1045335  +
jmp loc_1003CBC  +
***
cmp edi 31Ah +
jnz loc_1035794  +
push ebx  +
call sub_101EDFB  +
jmp loc_1035812  +
***
mov edx edi +
sub edx 216h +
jz loc_102676B  +
dec edx  +
dec edx  +
jz loc_10516FC  +
dec edx  +
jz loc_1034D15  +
sub edx 18h +
jz loc_100A07F  +
dec edx  +
jnz loc_10021D4  +
jmp loc_100A029  +
***
jz loc_1021BC8  +
cmp eax 115h +
jz loc_1008A56  +
cmp eax 218h +
jz loc_10516B5  +
cmp eax 230h +
jbe sub_10024B0  +
jmp loc_1008A30  +
***
jz loc_102E1EA  +
mov eax ebx +
sub eax 113h +
jz loc_105C56F  +
sub eax 0EDh +
jz loc_102E1DD  +
dec eax  +
jz loc_105C545  +
dec eax  +
jz loc_105C4CE  +
sub eax 0Fh +
jz loc_105C4B8  +
sub eax 92h +
jnz loc_1010A4E  +
jmp loc_105C471  +
***
dec eax  +
jz loc_1034B04  +
dec eax  +
jz loc_104585E  +
dec eax  +
jnz loc_1003CD0  +
xor eax eax +
cmp ebx 203h +
setz al  +
mov ecx esi +
push eax  +
mov eax edi +
shr eax 10h +
cwde   +
push eax  +
movsx eax di +
push eax  +
push edx  +
call sub_10455CA  +
jmp loc_1003CBC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz locret_1034BCD  +
push esi  +
push 38h  +
xor esi esi +
lea eax [ebp+var_40] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
push 4  +
lea ecx [ebp+var_4] +
mov [ebp+var_28] ecx +
lea eax [ebp+arg_4] +
lea ecx [ebp+var_8] +
mov [ebp+var_38] eax +
pop eax  +
mov [ebp+var_18] ecx +
lea ecx [ebp+var_48] +
push ecx  +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_4] 6 +
push dword_10B247C  +
mov [ebp+var_8] 1 +
push dword_10B2478  +
mov [ebp+var_48] offset unk_10B2488 +
mov [ebp+var_44] esi +
mov [ebp+var_40] 10h +
mov [ebp+var_3C] esi +
mov [ebp+var_34] esi +
mov [ebp+var_30] eax +
mov [ebp+var_2C] esi +
mov [ebp+var_24] esi +
mov [ebp+var_20] eax +
mov [ebp+var_1C] esi +
mov [ebp+var_14] esi +
mov [ebp+var_10] eax +
mov [ebp+var_C] esi +
call ds:EventWrite  +
pop esi  +
leave   +
retn 8  +
***
mov edx edi +
sub edx 50h +
jz loc_1010D8C  +
sub edx 2Bh +
jz loc_104EF00  +
sub edx 3 +
jz loc_1050DF8  +
sub edx 5 +
jz loc_1015C27  +
dec edx  +
jnz loc_10021D4  +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
mov [ebp-70h] ecx +
push ecx  +
mov ecx ebx +
mov [ebp-6Ch] eax +
call sub_1036598  +
push 2  +
pop eax  +
mov [ebp+var_58] eax +
test [ebx+40h] al +
jnz loc_1002208  +
cmp [ebx+0D28h] esi +
jz loc_1002208  +
jmp loc_1009CFD  +
***
sub ecx 7 +
jnz loc_100F209  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 128h  +
push esi  +
call sub_1016317  +
jmp loc_100F18F  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+80h] +
cmp dword ptr [eax] 0 +
jz loc_1034C8B  +
mov eax [eax] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+24h]  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101118D  +
add [ebp+arg_0] eax +
mov eax [esi+24h] +
mov ecx [esi+20h] +
adc [ebp+arg_4] edx +
cmp eax [ebp+arg_4] +
jb loc_1034D78  +
jbe loc_1034D83  +
mov [esi+20h] ecx +
mov [esi+24h] eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor edx edx +
xor ecx ecx +
mov eax offset unk_10B28DC +
push esi  +
mov esi [eax-4] +
cmp esi [ebp+arg_0] +
jz loc_1034CFD  +
add eax 0Ch +
cmp eax offset unk_10B2924 +
jl loc_1034CD9  +
push edx  +
push 989680h  +
push edx  +
push ecx  +
call sub_100E7E5  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [eax] +
jmp loc_1034CE1  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:GetCurrentThreadId  +
mov [esi] eax +
pop esi  +
retn   +
***
push eax  +
push ecx  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_1034D36  +
mov [ebp+var_58] eax +
cmp eax esi +
jz loc_10021F8  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 18h +
jz loc_105707D  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
jmp loc_1034CBA  +
cmp ecx [ebp+arg_0] +
jbe loc_1034D78  +
jmp loc_1034CBA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov esi ds:MonitorFromRect +
push edi  +
xor edi edi +
mov ebx ecx +
mov [ebp+var_4] edi +
cmp [ebp+arg_4] edi +
jz loc_1034DE5  +
cmp [ebp+arg_C] edi +
jz loc_10519C1  +
mov edi [ebx+0CFCh] +
test edi edi +
jz loc_1034DE5  +
lea eax [ebp+rc1] +
push eax  +
push edi  +
push [ebp+wParam]  +
mov ecx ebx +
call sub_1034E43  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_101F435  +
cmp eax 2 +
jz loc_1055E47  +
cmp [ebp+lprc] 0 +
jz loc_1034DFE  +
push 0  +
push [ebp+lprc]  +
call esi  +
test eax eax +
jz loc_1034DFE  +
cmp eax edi +
jnz loc_1055E53  +
test byte ptr [ebp+var_4] 1 +
mov esi ds:SystemParametersInfoW +
jnz loc_101F3EE  +
test byte ptr [ebp+var_4] 2 +
jnz loc_1055E8F  +
pop edi  +
xor ecx ecx +
pop esi  +
pop ebx  +
cmp [ebp+arg_C] ecx +
jz loc_10519CF  +
mov eax dword_10B10EC +
cmp eax ecx +
jz locret_1034E3A  +
push ecx  +
push ecx  +
push 5  +
push eax  +
call ds:SendMessageW  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
xor esi esi +
mov ebx ecx +
push edi  +
mov [ebp+var_4] esi +
mov [ebp+mi.cbSize] 28h +
cmp [ebx+30h] esi +
jnz loc_1055DE6  +
mov edi [ebp+hMonitor] +
push edi  +
push [ebp+wParam]  +
push 550h  +
push dword ptr [ebx+4]  +
call ds:PostMessageW  +
lea eax [ebp+mi] +
push eax  +
push edi  +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_101F42D  +
test byte ptr [ebx+40h] 1 +
jnz loc_1055E0A  +
cmp edi [ebx+0CF8h] +
jnz loc_1055E0A  +
cmp [ebx+0D98h] esi +
jnz loc_1055E0A  +
mov eax [ebx+0CD8h] +
shl eax 4 +
lea eax [eax+ebx+44h] +
push eax  +
lea eax [ebp+mi.rcMonitor] +
push eax  +
push [ebp+lprc1]  +
call ds:SubtractRect  +
push [ebp+lprc1]  +
mov ecx ebx +
push [ebp+hMonitor]  +
call sub_1034EFB  +
lea eax [ebp+mi.rcWork] +
push eax  +
push [ebp+lprc1]  +
call ds:EqualRect  +
test eax eax +
jz loc_101F421  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0CB4h] +
test eax eax +
jz loc_1034F50  +
push ebx  +
mov ebx [eax] +
test ebx ebx +
jz loc_1034F4F  +
push edi  +
dec ebx  +
push ebx  +
push dword ptr [esi+0CB4h]  +
call ds:off_1002B68  +
mov edi eax +
push 0  +
lea eax [edi+8] +
push eax  +
call ds:MonitorFromRect  +
cmp [ebp+arg_0] eax +
jnz loc_1034F4A  +
cmp dword ptr [esi+0D98h] 0 +
jnz loc_1034F4A  +
push [ebp+arg_4]  +
mov ecx esi +
push edi  +
call sub_10367F4  +
test ebx ebx +
jnz loc_1034F15  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
push ecx  +
push 1  +
push eax  +
mov ecx ebx +
call sub_100309D  +
jmp loc_1002264  +
push eax  +
mov ecx ebx +
call sub_1035000  +
jmp loc_1002208  +
***
push eax  +
call sub_106F5B0  +
jmp loc_1051A47  +
push eax  +
call sub_106F6E2  +
jmp loc_1051A47  +
lea eax [ecx+0C3Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_1035024  +
push dword ptr [eax+20h]  +
call sub_1072CFB  +
jmp loc_1051A47  +
push eax  +
call sub_106F509  +
jmp loc_1051A47  +
push eax  +
call sub_106F7FC  +
jmp loc_1051A47  +
push dword ptr [eax+0Ch]  +
call sub_1034205  +
jmp loc_1035024  +
push eax  +
call sub_106F7D3  +
jmp loc_1035024  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
mov edx [eax+28h] +
cmp edx 0Ah +
ja loc_1051A4F  +
jmp ds:off_1034FCF[edx*4]  +
push eax  +
call sub_103502D  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [edi+0CB4h] 0 +
jz loc_1024957  +
push dword ptr [ebx+4]  +
call sub_1051AA5  +
test eax eax +
jnz loc_102496D  +
push esi  +
push 20h  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_1024974  +
mov eax [ebx+4] +
mov [esi] eax +
mov eax [ebx+8] +
or dword ptr [esi+18h] 0FFFFFFFFh +
push esi  +
push 7FFFFFFFh  +
mov [esi+4] eax +
push dword ptr [edi+0CB4h]  +
call ds:off_10065E0  +
cmp eax 0FFFFFFFFh +
jz loc_105602C  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax hModule +
test eax eax +
jz loc_102E388  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
and dword ptr [esi] 0 +
cmp dword_10B39C8 0FFFFFFFFh +
jnz loc_105CD53  +
mov eax dword_10B39CC +
test eax eax +
jnz loc_105CD2E  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_105CCF7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_10350C0  +
test eax eax +
jz locret_103515F  +
push esi  +
call sub_10350A4  +
push [ebp+lpParam]  +
push [ebp+hInstance]  +
push [ebp+hMenu]  +
push [ebp+hWndParent]  +
push [ebp+nHeight]  +
push [ebp+nWidth]  +
push [ebp+Y]  +
push [ebp+X]  +
push [ebp+dwStyle]  +
push [ebp+lpWindowName]  +
push [ebp+lpClassName]  +
push [ebp+dwExStyle]  +
call ds:CreateWindowExW  +
push [ebp+var_4]  +
mov esi eax +
call sub_10350F3  +
mov eax esi +
pop esi  +
leave   +
retn 30h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2288 0FFFFFFFFh +
jz loc_102A802  +
mov eax dword_10B2288 +
test eax eax +
jz loc_105CC7F  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22D8 0FFFFFFFFh +
jz loc_102A7EE  +
mov eax dword_10B22D8 +
test eax eax +
jz loc_105CC79  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
mov ecx [ebp+arg_0] +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_103521D  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2274 0FFFFFFFFh +
jz loc_102A745  +
mov eax dword_10B2274 +
test eax eax +
jz loc_105CC39  +
pop ebp  +
jmp eax  +
***
sub ebx 2A3h +
jz loc_1044921  +
sub ebx 29h +
jz loc_102EFCF  +
sub ebx 4Ch +
jz loc_1003C86  +
dec ebx  +
dec ebx  +
jnz loc_1045CF7  +
mov ecx esi +
call sub_101E375  +
jmp loc_1003CBC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
pop ebp  +
retn 0Ch  +
***
mov eax 80004001h +
retn 8  +
***
push offset aSoftwareMicr_5  +
call SHRegGetBoolValueFromHKCUHKLM  +
retn   +
***
call sub_1035409  +
test eax eax +
jnz loc_105C6A9  +
push 1  +
push offset aTaskbarsizemov  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_1055D5D  +
dec eax  +
jz loc_1055D59  +
dec eax  +
jz loc_1055D55  +
dec eax  +
jnz loc_1055D4E  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
cmp [esi+0D14h] ebx +
jz loc_1056246  +
cmp [esi+0B20h] ebx +
jz loc_10355BE  +
lea edi [esi+0B34h] +
cmp [edi] ebx +
jz loc_10355BE  +
push [ebp+wParam]  +
call ds:CreateCompatibleDC  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_10355BE  +
push dword ptr [edi]  +
mov edi ds:SelectObject +
push eax  +
call edi  +
mov [ebp+var_C] eax +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+0B10h]  +
call ds:GetWindowRect  +
mov eax [ebp+rc.top] +
sub eax [ebp+rc.bottom] +
sub eax [ebp+rc.left] +
add eax [ebp+rc.right] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push ebx  +
mov ebx ds:InflateRect +
lea eax [ebp+rc] +
push eax  +
call ebx  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
push 0  +
call ds:MapWindowPoints  +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
push 0FFFFFFECh  +
cdq   +
pop ecx  +
idiv  ecx +
push eax  +
mov eax [ebp+rc.right] +
sub eax [ebp+rc.left] +
cdq   +
idiv  ecx +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ebx  +
mov eax [esi+0B3Ch] +
mov [ebp+var_4] 0 +
mov byte ptr [ebp-3] 0 +
mov [ebp+var_2] 0FFh +
mov [ebp+var_1] 1 +
push dword ptr [ebp+var_4]  +
cdq   +
push 3  +
pop ecx  +
idiv  ecx +
push eax  +
push dword ptr [esi+0B38h]  +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
push 0  +
push 0  +
push [ebp+var_8]  +
push eax  +
mov eax [ebp+rc.right] +
sub eax [ebp+rc.left] +
push eax  +
push [ebp+rc.top]  +
push [ebp+rc.left]  +
push [ebp+wParam]  +
call ds:GdiAlphaBlend  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call edi  +
push [ebp+var_8]  +
call ds:DeleteDC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_50] eax +
mov [ebp+var_48] ebx +
mov [ebp+var_4C] ebx +
cmp eax ebx +
jz loc_10219A4  +
lea ecx [ebp+Paint.right] +
push ecx  +
push eax  +
mov ebx eax +
call ds:GetClipBox  +
test ebx ebx +
jz loc_1035647  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+10h]  +
call ds:GetClientRect  +
cmp dword ptr [esi+34Ch] 0 +
jz loc_105943B  +
push 0  +
push ebx  +
push dword ptr [esi+4]  +
call ds:DrawThemeParentBackground  +
push 0  +
lea eax [ebp+rc] +
push eax  +
push 0  +
push 1  +
push ebx  +
push dword ptr [esi+34Ch]  +
call ds:DrawThemeBackground  +
cmp [ebp+var_50] 0 +
jz loc_1021A12  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_10355CA  +
jmp loc_1002328  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1FCh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jnz loc_101F35C  +
cmp dword ptr [esi+1B0h] 0 +
jz loc_101F35C  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ecx+1ACh] +
test eax eax +
jz loc_102A164  +
push [ebp+lprc]  +
push [ebp+lprc]  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 0  +
push 1  +
push [ebp+arg_0]  +
push eax  +
call ds:GetThemeTextExtent  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+8]  +
mov eax [eax+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov eax 84h +
mov esi ecx +
cmp edi eax +
ja loc_10357A4  +
jz loc_104E57A  +
cmp edi 1Ah +
ja loc_10111CB  +
jz loc_102104E  +
cmp edi 7 +
jb loc_1035794  +
cmp edi 8 +
jbe loc_104E2CD  +
cmp edi 0Dh +
jz loc_102D938  +
cmp edi 0Fh +
jz loc_1035819  +
cmp edi 14h +
jnz loc_1035DF5  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+8]  +
mov eax [ecx+8] +
jz loc_1058B23  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+14h]  +
push ebx  +
push edi  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
jmp loc_1035770  +
***
mov eax 464h +
cmp edi eax +
ja loc_1052EF7  +
jnz loc_10357BE  +
push dword ptr [ebp+14h]  +
push ebx  +
call sub_101F850  +
jmp loc_1035770  +
***
mov eax 100h +
cmp edi eax +
jz loc_1058CEF  +
jbe loc_1035794  +
cmp edi 102h +
jbe loc_1058CF9  +
cmp edi 103h +
jbe loc_1035794  +
cmp edi 106h +
jbe loc_1058CF9  +
cmp edi 113h +
jnz loc_1034A28  +
mov eax ebx +
dec eax  +
jnz loc_1035819  +
push 1  +
push dword ptr [ebp+8]  +
call ds:KillTimer  +
push 1  +
mov ecx esi +
call sub_104E299  +
xor eax eax +
jmp loc_1035770  +
***
xor eax eax +
cmp edi 0Fh +
setz al  +
push eax  +
call sub_1035831  +
jmp loc_1035770  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 108h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor esi esi +
push edi  +
xor eax eax +
mov [ebp+var_CC.left] esi +
lea edi [ebp+var_CC.top] +
stos   +
stos   +
mov ebx ecx +
stos   +
mov [ebp+uElapse] esi +
mov [ebp+var_4C] esi +
mov [ebp+var_80] esi +
cmp [ebp+arg_0] esi +
jz loc_1035E10  +
mov [ebp+var_54] esi +
cmp [ebx+1B4h] esi +
jz loc_1035E10  +
cmp [ebp+arg_0] esi +
jz loc_1035F88  +
lea eax [ebp+hDC] +
push eax  +
push dword ptr [ebx+4]  +
mov [ebp+hDC] esi +
call ds:BeginPaint  +
cmp [ebp+hDC] esi +
jz loc_1035CE4  +
push [ebp+hDC]  +
call ds:CreateCompatibleDC  +
mov esi eax +
xor edi edi +
mov [ebp+var_4C] esi +
cmp esi edi +
jz loc_1035CC7  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1050FE7  +
cmp [ebx+1ACh] edi +
jz loc_1050FE7  +
push 0Ah  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_108.bmiHeader.biWidth] +
stos   +
mov eax [ebp-34h] +
sub eax [ebp-3Ch] +
push 20h  +
mov [ebp+var_108.bmiHeader.biWidth] eax +
mov eax [ebp-38h] +
sub eax [ebp-30h] +
mov [ebp+var_108.bmiHeader.biSize] 28h +
mov [ebp+var_108.bmiHeader.biHeight] eax +
xor eax eax +
inc eax  +
mov [ebp+var_108.bmiHeader.biPlanes] ax +
pop eax  +
mov [ebp+var_108.bmiHeader.biBitCount] ax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
mov [ebp+var_108.bmiHeader.biCompression] eax +
lea eax [ebp+var_108] +
push eax  +
push esi  +
call ds:CreateDIBSection  +
xor edi edi +
mov [ebp+var_58] eax +
cmp eax edi +
jz loc_1058B74  +
push eax  +
push esi  +
call ds:SelectObject  +
push edi  +
push dword ptr [ebp-38h]  +
mov [ebp+var_80] eax +
push dword ptr [ebp-3Ch]  +
push esi  +
call ds:OffsetWindowOrgEx  +
cmp esi edi +
jz loc_1035CC7  +
mov eax [ebx+4] +
lea ecx [ebp-3Ch] +
push ecx  +
push esi  +
push eax  +
push eax  +
call ds:GetParent  +
push eax  +
call sub_1035D05  +
push edi  +
mov ecx ebx +
call sub_1035678  +
cmp [ebp+var_54] edi +
jnz loc_1035E7E  +
cmp [ebx+104h] di +
jz loc_1035E7E  +
lea eax [ebp+var_CC] +
push eax  +
push esi  +
call ds:GetClipBox  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_1051015  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetClientRect  +
cmp [ebx+1ACh] edi +
jz loc_10359F2  +
mov eax [ebx+1C0h] +
mov [ebp+dy] eax +
cmp [ebx+1BCh] edi +
jnz loc_104E31A  +
lea eax [ebp+var_CC] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+dy]  +
push 1  +
push esi  +
push dword ptr [ebx+1ACh]  +
call ds:DrawThemeBackground  +
mov eax [ebx+1B0h] +
mov [ebp+var_A8] edi +
cmp eax edi +
jz loc_1035A10  +
push eax  +
push esi  +
call ds:SelectObject  +
mov [ebp+var_A8] eax +
mov edi ds:GetSysColor +
push 0Fh  +
call edi  +
push eax  +
push esi  +
call ds:SetBkColor  +
push 12h  +
call edi  +
push eax  +
push esi  +
call ds:SetTextColor  +
xor eax eax +
xor ecx ecx +
mov [ebp+var_6C] ecx +
lea edi [ebp+var_68] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+var_A4] ecx +
lea edi [ebp+var_A0] +
stos   +
stos   +
stos   +
mov [ebp+var_90] ecx +
xor eax eax +
lea edi [ebp+var_8C] +
stos   +
mov [ebp+var_AC] ecx +
mov [ebp+var_94] ecx +
stos   +
lea ecx [ebp+var_6C] +
push ecx  +
push dword ptr [ebx+0B0h]  +
stos   +
lea eax [ebx+104h] +
push eax  +
push esi  +
mov ecx ebx +
call sub_10356BB  +
lea ecx [ebp+var_A4] +
push ecx  +
push dword ptr [ebx+0Ch]  +
lea eax [ebx+60h] +
push eax  +
push esi  +
mov ecx ebx +
call sub_10356BB  +
lea ecx [ebp+var_90] +
push ecx  +
push dword ptr [ebx+154h]  +
lea eax [ebx+158h] +
push eax  +
push esi  +
mov ecx ebx +
call sub_10356BB  +
test byte ptr dword_10B2138 1 +
jz loc_1058B91  +
mov eax [ebp+var_A0] +
mov esi [ebp+var_98] +
mov ecx [ebp+var_60] +
sub eax esi +
sub eax [ebp+Rect.top] +
push 3  +
sub eax ecx +
add eax [ebp+Rect.bottom] +
pop edi  +
add eax [ebp+var_68] +
cdq   +
idiv  edi +
mov edi eax +
mov eax ecx +
sub eax [ebp+var_68] +
cdq   +
sub eax edx +
sar eax 1 +
cmp eax edi +
jl loc_105108C  +
mov [ebp+var_50] edi +
sub ecx [ebp+var_68] +
mov eax [ebp+var_84] +
add ecx [ebp+var_50] +
sub eax [ebp+var_8C] +
mov edx [ebp+Rect.bottom] +
sub edx [ebp+Rect.top] +
lea edi [ecx+eax] +
cmp edi edx +
mov [ebp+dy] edx +
jg loc_1035B51  +
mov edi [ebp+Rect.right] +
mov edx [ebp+var_9C] +
sub edi [ebp+Rect.left] +
sub edx [ebp+var_A4] +
cmp edx edi +
jg loc_1035B51  +
sub esi [ebp+var_A0] +
xor edx edx +
add esi [ebp+var_50] +
inc edx  +
add ecx esi +
add eax ecx +
cmp eax [ebp+dy] +
mov [ebp+var_AC] edx +
jle loc_1058BA9  +
sub ecx [ebp+var_50] +
mov eax [ebp+Rect.bottom] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
test eax eax +
jle loc_1051094  +
mov [ebp+dy] eax +
mov eax [ebp+Rect.right] +
sub eax [ebp+var_64] +
lea esi [ebp+var_6C] +
add eax [ebp+var_6C] +
lea edi [ebp+rc] +
movs   +
movs   +
cdq   +
sub eax edx +
movs   +
sar eax 1 +
movs   +
test eax eax +
jle loc_1058BCD  +
push [ebp+dy]  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx+0B0h]  +
lea eax [ebx+104h] +
push eax  +
push [ebp+var_4C]  +
mov ecx ebx +
call sub_1035DC4  +
mov eax [ebp+var_60] +
mov ecx eax +
sub ecx [ebp+var_68] +
add ecx [ebp+var_50] +
add [ebp+dy] ecx +
cmp [ebp+var_94] 0 +
jnz loc_1058BD4  +
cmp [ebp+var_AC] 0 +
jz loc_1035C37  +
mov eax [ebp+Rect.right] +
sub eax [ebp+var_9C] +
lea esi [ebp+var_A4] +
add eax [ebp+var_A4] +
lea edi [ebp+rc] +
movs   +
movs   +
cdq   +
sub eax edx +
movs   +
sar eax 1 +
movs   +
test eax eax +
jle loc_1058C47  +
push [ebp+dy]  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx+0Ch]  +
lea eax [ebx+60h] +
push eax  +
push [ebp+var_4C]  +
mov ecx ebx +
call sub_1035DC4  +
mov eax [ebp+var_60] +
mov ecx [ebp+var_64] +
sub ecx [ebp+var_6C] +
cmp ecx [ebp+Rect.right] +
jg loc_105109D  +
sub eax [ebp+var_68] +
cmp eax [ebp+Rect.bottom] +
jg loc_105109D  +
xor eax eax +
cmp dword ptr [ebx+1B0h] 0 +
mov [ebx+1B8h] eax +
jz loc_1035C72  +
push [ebp+var_A8]  +
push [ebp+var_4C]  +
call ds:SelectObject  +
cmp dword ptr [ebx+1ACh] 0 +
jz loc_1058C4E  +
mov esi [ebp+var_4C] +
xor edi edi +
mov eax [ebp-30h] +
sub eax [ebp-38h] +
push 0CC0020h  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-3Ch]  +
push esi  +
push eax  +
mov eax [ebp-34h] +
sub eax [ebp-3Ch] +
push eax  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp-3Ch]  +
push [ebp+hDC]  +
call ds:BitBlt  +
push [ebp+var_80]  +
push esi  +
call ds:SelectObject  +
push [ebp+var_58]  +
call ds:DeleteObject  +
push esi  +
call ds:DeleteDC  +
cmp [ebp+hDC] edi +
jz loc_1035CE2  +
cmp [ebp+arg_0] edi +
jz loc_1035FC0  +
lea eax [ebp+hDC] +
push eax  +
push dword ptr [ebx+4]  +
call ds:EndPaint  +
xor esi esi +
cmp [ebp+var_54] esi +
jnz loc_1035E51  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1035D4F  +
push edi  +
push edi  +
push edi  +
push edi  +
call ds:CreateRectRgn  +
mov edi eax +
push edi  +
push ebx  +
call ds:GetClipRgn  +
test eax eax +
jnz loc_1035D3D  +
push edi  +
call ds:DeleteObject  +
xor edi edi +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push ebx  +
call ds:IntersectClipRect  +
lea eax [ebp+Points] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push [ebp+hWndTo]  +
push 0  +
call ds:MapWindowPoints  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
call ds:GetViewportOrgEx  +
mov eax [ebp-4] +
sub eax [ebp+Points.y] +
mov esi ds:SetViewportOrgEx +
push 0  +
push eax  +
mov eax [ebp+var_8] +
sub eax [ebp+Points.x] +
push eax  +
push ebx  +
call esi  +
push 4  +
push ebx  +
push 318h  +
push [ebp+hWndTo]  +
call ds:SendMessageW  +
push 0  +
push dword ptr [ebp-4]  +
push [ebp+var_8]  +
push ebx  +
call esi  +
test edi edi +
jnz loc_105C685  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+1ACh] +
xor ecx ecx +
cmp eax ecx +
jz loc_1058B31  +
push [ebp+arg_C]  +
push ecx  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ecx  +
push 1  +
push [ebp+arg_0]  +
push eax  +
call ds:DrawThemeText  +
pop ebp  +
retn 10h  +
***
cmp edi 18h +
jnz loc_1035794  +
test ebx ebx +
jnz loc_1035812  +
call sub_103678E  +
jmp loc_1035812  +
***
mov [ebp+var_54] 1 +
jmp loc_103587F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
xor ecx ecx +
cmp [ebp+uElapse] ecx +
jz loc_103674A  +
push ecx  +
push [ebp+uElapse]  +
push ecx  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov dword ptr [esi+1B4h] 1 +
pop esi  +
pop ebp  +
retn 4  +
***
push [ebp+uElapse]  +
mov ecx ebx +
call sub_1035E21  +
cmp [ebp+var_4C] esi +
jz loc_1035CED  +
cmp [ebp+uElapse] esi +
jz loc_10510A5  +
push 1  +
push esi  +
push dword ptr [ebx+4]  +
call ds:InvalidateRect  +
jmp loc_1035CED  +
mov ecx ebx +
call sub_1035E92  +
mov [ebp+uElapse] eax +
jmp loc_1035992  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+Date] +
push eax  +
mov esi ecx +
call ds:GetLocalTime  +
mov cx [ebp+Date.wMinute] +
mov dx [ebp+Date.wHour] +
lea eax [esi+1AAh] +
cmp cx [eax] +
jz loc_1036769  +
push ebx  +
push edi  +
push 28h  +
mov [eax] cx +
lea eax [esi+104h] +
push eax  +
lea eax [esi+0B4h] +
push eax  +
lea eax [ebp+Date] +
push eax  +
push 2  +
mov edi 400h +
push edi  +
mov [esi+1A8h] dx +
call ds:GetTimeFormatW  +
mov ebx ds:GetDateFormatW +
push 28h  +
mov [esi+0B0h] eax +
lea eax [esi+60h] +
push eax  +
lea eax [esi+10h] +
push eax  +
lea eax [ebp+Date] +
push eax  +
push 40h  +
push edi  +
call ebx  +
push 28h  +
mov [esi+0Ch] eax +
lea eax [esi+158h] +
push eax  +
push offset Format  +
lea eax [ebp+Date] +
push eax  +
push 40h  +
push edi  +
call ebx  +
mov ecx [esi+0B0h] +
pop edi  +
mov [esi+154h] eax +
pop ebx  +
test ecx ecx +
jle loc_1035F3E  +
dec ecx  +
mov [esi+0B0h] ecx +
mov ecx [esi+0Ch] +
test ecx ecx +
jle loc_1035F49  +
dec ecx  +
mov [esi+0Ch] ecx +
test eax eax +
jle loc_1035F54  +
dec eax  +
mov [esi+154h] eax +
lea eax [esi+104h] +
push eax  +
push dword ptr [esi+4]  +
call ds:SetWindowTextW  +
push 0  +
push 0FFFFFFFCh  +
push dword ptr [esi+4]  +
push 800Eh  +
call ds:NotifyWinEvent  +
movzx ecx [ebp+Date.wSecond] +
push 3Ch  +
pop eax  +
sub eax ecx +
imul eax eax +
pop esi  +
leave   +
retn   +
***
push dword ptr [ebx+4]  +
call ds:GetDC  +
mov [ebp+hDC] eax +
call ds:IsCompositionActive  +
test eax eax +
jz loc_105107A  +
cmp [ebx+1ACh] esi +
jz loc_105107A  +
lea eax [ebp-3Ch] +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetClientRect  +
jmp loc_1035898  +
push [ebp+hDC]  +
push dword ptr [ebx+4]  +
call ds:ReleaseDC  +
jmp loc_1035CE2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
call sub_100F319  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1036015  +
test byte ptr [ebp+8] 1 +
jz loc_1036009  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ds:__imp_SHELL32_155 +
mov esi ecx +
push dword ptr [esi+2Ch]  +
mov dword ptr [esi] offset off_100F46C +
call edi  +
push dword ptr [esi+30h]  +
call edi  +
push dword ptr [esi+34h]  +
call edi  +
push dword ptr [esi+38h]  +
call ds:LocalFree  +
push dword ptr [esi+18h]  +
mov dword ptr [esi] offset off_100F3DC +
call ds:__imp_CoTaskMemFree  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
xor ecx ecx +
mov [eax-7Ch] ecx +
cmp [ebp+0Ch] ecx +
jnz loc_10408FF  +
push ecx  +
push ecx  +
push 40Bh  +
push dword ptr [eax-190h]  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push 0  +
push dword ptr [ebp+0Ch]  +
push 56Dh  +
push dword ptr [eax-10h]  +
call ds:SendNotifyMessageW  +
xor eax eax +
pop ebp  +
retn 8  +
***
and dword ptr [ecx] 0 +
push edx  +
call ds:SHELL32_4  +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
jmp loc_101040E  +
***
call sub_10103EB  +
jmp loc_1002208  +
push eax  +
push ecx  +
push edi  +
mov ecx ebx +
call sub_10360E6  +
jmp loc_1002264  +
***
mov edi edi +
mov ecx esi +
call sub_1036185  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 640h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
lea ecx [ebp+var_638] +
push ecx  +
lea ecx [ebp+var_62C] +
push ecx  +
push [ebp+arg_4]  +
xor edi edi +
push eax  +
mov [ebp+var_62C] edi +
call ds:SHELL32_644  +
mov [ebp+var_63C] eax +
mov eax [ebp+var_62C] +
cmp [eax] edi +
jz loc_10361F3  +
mov ecx [ebp+var_638] +
dec ecx  +
jz loc_103640E  +
sub ecx 3 +
jz loc_103640E  +
sub ecx 1FFCh +
jz loc_105240E  +
push [ebp+var_63C]  +
call ds:SHELL32_645  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
cmp dword ptr [ebp+14h] 0FFFFFFFCh +
jnz loc_100D7E3  +
mov ecx [ebp+1Ch] +
push 0FFFFFFFCh  +
push dword ptr [ebp+8]  +
call sub_103C4A7  +
test eax eax +
jl loc_100D7F4  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+10h]  +
push offset stru_103639C  +
call LresultFromObject  +
jmp loc_100D7F4  +
***
mov eax [ebx+110h] +
test eax eax +
jz loc_100E13E  +
cmp esi 0FFFFFFFCh +
jnz loc_100E13E  +
jmp loc_1067CDD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 4 +
jz loc_1036277  +
dec eax  +
jz loc_1036281  +
dec eax  +
jnz loc_10362A0  +
inc dword_10B1108  +
pop ebp  +
retn 1Ch  +
cmp dword_10B1108 0 +
jbe loc_103627D  +
dec dword_10B1108  +
jnz loc_103627D  +
cmp dword_10B1818 0 +
jz loc_103627D  +
jmp loc_1059A1F  +
dec eax  +
jnz loc_103627D  +
jmp loc_1036281  +
***
inc esi  +
push edx  +
mov dh 0B2h +
sbb ebx esp +
cmps   +
dec esi  +
cdq   +
push es  +
movs   +
test dh dh +
sbb eax 9090CC94h +
nop   +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_10362E0  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10362BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+60h] 0 +
jnz loc_103BAF5  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
pop ecx  +
xor eax eax +
cmp [ebp+0Ch] ecx +
jz loc_1056600  +
pop ebp  +
retn 14h  +
***
inc ebx  +
cmp ebx [ebp+var_214] +
jl loc_10083B0  +
jmp loc_1007821  +
***
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_100940E  +
jmp loc_10093F8  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_100947B  +
jmp loc_1009465  +
***
mov al [ebp+var_1] +
mov [edi] al +
mov al [ebp+var_2] +
mov [edi+1] bl +
jmp loc_100BFB5  +
mov [ebp+var_10] 8007000Eh +
jmp loc_100C1E8  +
mov [ebp+var_10] 80070057h +
jmp loc_100C1E8  +
***
lea ecx [ebp+var_620] +
push ecx  +
push dword ptr [eax]  +
mov ecx esi +
call sub_1010599  +
test eax eax +
jl loc_10361F3  +
jmp loc_1063ED4  +
***
mov [ebp+arg_4] esi +
jmp loc_1010567  +
***
xor edi edi +
inc edi  +
jmp loc_100366D  +
***
mov [ebp+8] ebx +
jmp loc_1003149  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+10h]  +
add ecx 0FFFFFFE0h +
push 4  +
push 0  +
push 0  +
push dword ptr [ebp+0Ch]  +
call sub_1003701  +
pop ebp  +
retn 10h  +
***
mov eax [esi+78h] +
mov ecx [eax] +
push offset dword_100D864  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jz sub_1054505  +
and [ebp+var_C] 0 +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1009A83  +
***
mov ecx [esi+8] +
call sub_1004226  +
test al 2 +
jnz loc_100C6A8  +
jmp loc_10677A0  +
***
mov [ebp-4] eax +
jmp loc_100484B  +
***
push 3  +
pop eax  +
jmp loc_1005B6E  +
xor eax eax +
jmp loc_1005AF1  +
***
mov eax [ebp+arg_0] +
mov [ebp+var_24] eax +
jmp loc_100A656  +
***
test ebx 40000h +
jnz loc_100638F  +
jmp loc_1006396  +
***
push dword ptr [ebp+10h]  +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+34h]  +
jmp loc_1005CC6  +
***
mov ecx [esi+10h] +
call sub_1004266  +
test eax eax +
jz loc_1004962  +
mov ecx [esi+10h] +
push 0  +
push 2  +
call sub_1004304  +
mov ecx [esi+10h] +
push 0  +
push 1  +
mov [ebp+nNumerator] eax +
call sub_1004304  +
push ds:nDenominator  +
mov esi ds:MulDiv +
push eax  +
mov [ebp+nDenominator] eax +
sub eax [ebp+nNumerator] +
push eax  +
push edi  +
call esi  +
push eax  +
push [ebp+nNumber]  +
call esi  +
push [ebp+nDenominator]  +
mov ebx eax +
push [ebp+nNumerator]  +
push edi  +
call esi  +
add ebx eax +
jmp loc_1004962  +
***
mov eax [esi+0Ch] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_100CF65  +
mov eax [esi+0Ch] +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
lea edx [ebp+0Ch] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_100CF65  +
mov eax [ebp+8] +
sub eax [ebp+0Ch] +
cmp eax 1 +
jnz loc_100CF65  +
push 12h  +
jmp loc_100CF90  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
test al 1 +
jnz loc_1055F84  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetTickCount  +
sub eax [ebp+arg_0] +
cmp [ebp+arg_4] eax +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 0FFFFFFF8h +
pop ebp  +
jmp sub_1036598  +
***
xor eax eax +
jmp loc_100D99F  +
xor ebx ebx +
cmp [esi+28h] ebx +
jz loc_10365E0  +
cmp [esi+10h] ebx +
jnz loc_10365E0  +
cmp [esi+14h] ebx +
jnz loc_10365E0  +
mov ecx offset unk_10B1460 +
call sub_103717C  +
test eax eax +
jnz loc_10365E0  +
push 2  +
pop edi  +
push edi  +
mov ecx esi +
call sub_10370F8  +
mov eax [ebp+hWndTo] +
mov [ebp-8] eax +
lea eax [ebp+Point] +
push eax  +
mov [ebp+Point.x] 10h +
mov [ebp+Point.y] edi +
mov [ebp-4] ebx +
call ds:TrackMouseEvent  +
mov dword ptr [esi+10h] 1 +
jmp loc_10365E0  +
***
push offset aTooltips_class  +
push esi  +
call sub_1036669  +
test eax eax +
jz loc_103435B  +
push 213h  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push [ebp+hWndInsertAfter]  +
push esi  +
call ds:SetWindowPos  +
jmp loc_103435B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hWnd] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 40h  +
lea ecx [ebp+ClassName] +
push ecx  +
push eax  +
xor esi esi +
call ds:GetClassNameW  +
test eax eax +
jz loc_10366B0  +
push edi  +
lea eax [ebp+ClassName] +
push eax  +
call StrCmpICW  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
sub eax 435h +
jz loc_104047C  +
dec eax  +
jz loc_1008A8F  +
dec eax  +
jz loc_103D439  +
dec eax  +
jnz loc_1042B75  +
mov edi ds:SHELL32_137 +
xor ebx ebx +
push ebx  +
call edi  +
add esi 94h +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov esi [esi] +
mov eax [esi] +
push ebx  +
push ebx  +
push esi  +
call dword ptr [eax+14h]  +
push 1  +
call edi  +
jmp loc_10024DE  +
***
push 213h  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push edi  +
push dword ptr [ebx+0B10h]  +
call ds:SetWindowPos  +
jmp loc_1034324  +
***
push 1  +
mov ecx ebx +
call sub_10342AE  +
push esi  +
push 2BF20h  +
push 18h  +
push dword ptr [ebx+4]  +
call ds:SetTimer  +
jmp loc_1002264  +
***
lea eax [esi+1B4h] +
cmp [eax] ecx +
jz loc_1035E4C  +
push ecx  +
push dword ptr [esi+4]  +
mov [eax] ecx +
call ds:KillTimer  +
jmp loc_1035E4C  +
***
cmp dx [esi+1A8h] +
jnz loc_1035EBE  +
cmp word ptr [esi+104h] 0 +
jnz loc_1035F76  +
jmp loc_1035EBE  +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call sub_1035E21  +
push 0  +
push 0  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
pop esi  +
retn   +
***
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call ds:PostMessageW  +
jmp loc_100310E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+18h] +
sub ecx 0 +
jz loc_1055DD1  +
dec ecx  +
jz loc_1055DBA  +
dec ecx  +
jz loc_1055DA3  +
dec ecx  +
jz loc_1055D8C  +
pop ebp  +
retn 8  +
***
cmp byte ptr [esi+1Ch] 0 +
jz loc_1036867  +
mov eax [ebp-8] +
sub eax [esi+24h] +
add [esi+14h] eax +
mov eax [esi+14h] +
test bl bl +
jnz loc_103685A  +
mov eax [esi+14h] +
cmp eax [esi+18h] +
jbe loc_1003D24  +
jmp loc_10565A3  +
cmp ecx [esi+10h] +
jbe loc_1003D2E  +
mov byte ptr [ebp+0Bh] 1 +
jmp loc_1003D2E  +
mov edx [esi+20h] +
sub edx [ebp-8] +
add edx eax +
mov [esi+14h] edx +
jmp loc_1036837  +
cmp [ebp-4] edx +
ja loc_1003D24  +
mov byte ptr [esi+1Ch] 1 +
mov [esi+14h] ecx +
jmp loc_1003D24  +
***
xor eax eax +
inc eax  +
retn 10h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1036898  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_10368B4  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
lea esi [ecx+0BCh] +
mov eax [esi] +
test eax eax +
jnz loc_104827E  +
pop esi  +
retn   +
***
sub dword ptr [esp+4] 14h +
jmp loc_10155B9  +
***
sub dword ptr [esp+4] 14h +
jmp loc_103690E  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+2Ch] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1050690  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub eax 154h +
jnz loc_1010A4E  +
or dword ptr [esi+74h] 8 +
jmp loc_1010A61  +
***
call ebx  +
jmp loc_10127B7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1036970 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_1036A13  +
push 4  +
pop ecx  +
mov edi offset dword_10369C0 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_103C5EE  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
add eax 0FFFFFFF8h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_100F065  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_100F1A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
mov ebx 80070057h +
test edi edi +
jz loc_1036A9E  +
push esi  +
push 4  +
pop ecx  +
mov esi offset dword_1036348 +
xor eax eax +
cmps   +
jnz loc_1036A9D  +
mov eax [ebp+arg_8] +
sub eax 12Eh +
jz loc_1040E95  +
sub eax 3 +
jz loc_106083F  +
sub eax 6 +
jnz loc_103995B  +
mov eax [ebp+arg_0] +
xor ebx ebx +
cmp [eax+1D4h] ebx +
setz bl  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+134h]  +
jmp loc_1036968  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
test byte ptr [edi+4] 41h +
jnz loc_106218F  +
mov esi [ebp+arg_0] +
push ebx  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push 137h  +
push offset dword_1036B1C  +
push offset dword_10369C0  +
push dword ptr [esi+18h]  +
call ds:SHLWAPI_484  +
mov ebx [ebp+arg_10] +
test eax eax +
jz loc_10621B9  +
push 4000002Dh  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_10621DD  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov eax 80004001h +
retn 10h  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1013A10  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1013A3B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+48h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_1050511  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1036B5C  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1036B9F  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1036BBC  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1002A39  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1002D39  +
***
test byte ptr [edi+18h] 80h +
jz loc_100DF55  +
cmp [esi+0B0h] ebx +
jnz loc_100DF55  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_18] ax +
xor eax eax +
push ebx  +
mov [ebp+var_10] ax +
lea eax [ebp+var_18] +
push eax  +
push ebx  +
push 143h  +
push offset dword_1013948  +
push offset loc_10362A8  +
lea eax [esi+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
jmp loc_100DF55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+0C0h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_10506FB  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1036CB0  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1036C65  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1036C93  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1036D1C  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+38h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_10505BB  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1036D53  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1036D70  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+40h] +
cmp dword ptr [esi] 0 +
jnz loc_104AED2  +
mov ecx edi +
call sub_1036DD7  +
add edi 4Ch +
push edi  +
call sub_1002BEE  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
lea esi [ecx+54h] +
mov eax [esi] +
test eax eax +
jnz loc_104AEAF  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
sub esp 0Ch +
push edi  +
xor edi edi +
sub ecx edi +
mov eax 80004001h +
jz loc_103E278  +
dec ecx  +
jnz loc_105E7A3  +
mov eax [ebp+arg_0] +
cmp [eax+0A0h] edi +
jnz loc_1036E2D  +
cmp [eax+6C4h] edi +
jnz loc_1036E2D  +
push 1  +
lea ecx [eax-8] +
call sub_10345FD  +
xor eax eax +
pop edi  +
leave   +
retn 8  +
***
cmp dword ptr [ecx+0B4h] 0 +
jnz locret_1036E5B  +
push esi  +
call sub_10345AB  +
mov esi eax +
test esi esi +
jz loc_1036E5A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+24h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
retn   +
***
call sub_1036E39  +
jmp loc_1001FD0  +
***
mov eax off_10B1088 +
cmp eax offset off_10B1088 +
jz loc_1036E7C  +
test byte ptr [eax+1Ch] 8 +
jnz loc_10567BA  +
cmp dword_10B24CC 0 +
jz loc_1001ECC  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1040F7E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_1001ECC  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
mov edx esi +
and ecx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1036EE1  +
cmp edx esi +
jnz loc_1036EE1  +
push [ebp+Msg.message]  +
push offset dword_1036EF0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
mov esi [ebp+var_4] +
jmp loc_1001ECC  +
***
sub dword ptr [esp+4] 10h +
jmp loc_100F065  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1036C65  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1002D39  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1002D39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push dword ptr [ebp+8]  +
push 401h  +
push dword ptr [ecx+0C04h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
xor ebx ebx +
cmp [esi+28h] ebx +
jz loc_1036F70  +
cmp [esi+14h] ebx +
jz loc_1040A88  +
mov [esi+10h] ebx +
jmp loc_10365E0  +
***
cmp eax 117h +
jz loc_1036F95  +
cmp eax 120h +
jnz loc_100E617  +
cmp dword ptr [edi+14h] 0 +
jz loc_100E617  +
push [ebp+arg_10]  +
mov edi [edi+14h] +
mov ecx [edi] +
push esi  +
push [ebp+arg_8]  +
push eax  +
push edi  +
call dword ptr [ecx+1Ch]  +
xor eax eax +
inc eax  +
jmp loc_100E655  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea edi [esi+0E4h] +
mov eax [edi] +
test eax eax +
jnz loc_106459D  +
cmp dword ptr [esi+0D0h] 0 +
jnz loc_10645AF  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov esi [ebp+ppv] +
mov eax 1A3h +
push edi  +
mov ebx ecx +
cmp esi eax +
ja loc_1051DA8  +
jz loc_1058216  +
add eax 0FFFFFFF4h +
cmp esi eax +
ja loc_104E423  +
jz loc_1058198  +
cmp esi 130h +
jz loc_103A0AB  +
cmp esi 131h +
jz loc_1058165  +
cmp esi 132h +
jz loc_103B08A  +
cmp esi 191h +
jz loc_104E449  +
mov eax 192h +
cmp esi eax +
jz loc_1058115  +
ja loc_1058068  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
cmp edi 0FEh +
jb loc_10021D4  +
cmp edi 0FFh +
jbe loc_1009FE6  +
cmp edi 100h +
jz loc_1026750  +
cmp edi 106h +
jz loc_1026742  +
mov edx 111h +
cmp edi edx +
jnz loc_10021D4  +
lea esi [ebp+var_58] +
push esi  +
push eax  +
push ecx  +
push edx  +
push [ebp+hWndParent]  +
push dword ptr [ebx+3Ch]  +
call sub_100E582  +
test eax eax +
jnz loc_1002264  +
movzx eax word ptr [ebp+wParam] +
push [ebp+lParam]  +
mov ecx ebx +
push eax  +
call sub_103700A  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+0F0h] +
cmp ebx eax +
jz loc_1037171  +
push edi  +
push 3  +
pop ecx  +
push 2  +
pop edi  +
cmp ebx edi +
jnz loc_1040A77  +
cmp eax ecx +
jz loc_1037170  +
cmp dword ptr [esi+68h] 0 +
jz loc_1057601  +
cmp ebx edi +
jnz loc_1037138  +
cmp eax 4 +
jz loc_10575B9  +
cmp ebx 4 +
jz loc_1040AC0  +
call ds:GetTickCount64  +
push 0  +
push 0Ah  +
push edi  +
push dword ptr [esi+18h]  +
mov [esi+0F8h] eax +
mov [esi+0FCh] edx +
call ds:SetTimer  +
mov [esi+0F0h] ebx +
push 1  +
mov ecx esi +
call sub_10132A7  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
mov esi [esi+94h] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A4h]  +
mov [edi] eax +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+0D4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
pop ebp  +
retn 4  +
***
call ds:KillTimer  +
retn   +
***
mov eax [ebp+lParam] +
dec eax  +
jz loc_104F91E  +
dec eax  +
jnz loc_100D990  +
mov ecx esi +
call sub_1037204  +
jmp loc_100D990  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
call ds:GetTickCount64  +
mov ecx [esi+0F0h] +
mov edi eax +
mov [ebp+var_8] edi +
mov eax edx +
cmp ecx 2 +
jnz loc_1037299  +
mov edx [esi+0F8h] +
push ebx  +
mov ebx [esi+0FCh] +
sub edi edx +
mov ecx eax +
sbb ecx ebx +
test ecx ecx +
ja loc_10372A7  +
jb loc_1037248  +
cmp edi 12Ch +
jnb loc_10372A7  +
cmp eax ebx +
jb loc_10372A7  +
ja loc_1037253  +
cmp [ebp+var_8] edx +
jb loc_10372A7  +
push 1  +
mov ecx esi +
call sub_10132A7  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
push dword ptr [eax]  +
mov ecx [esi+48h] +
mov edi [esi+40h] +
mov eax [esi+44h] +
push ecx  +
push edi  +
push 3  +
pop esi  +
cdq   +
idiv  esi +
imul eax [ebp+arg_4] +
push eax  +
push ebx  +
push [ebp+var_4]  +
push ecx  +
push edi  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
call ds:GdiAlphaBlend  +
jmp loc_1013513  +
mov [ebp+arg_0] ecx +
mov edi edx +
jmp loc_10133DE  +
cmp ecx 4 +
jz loc_1037227  +
mov ecx esi +
call sub_10371D6  +
jmp loc_103725D  +
mov ecx esi +
call sub_10371D6  +
cmp dword ptr [esi+14h] 0 +
jnz loc_1057620  +
cmp dword ptr [esi+0F0h] 2 +
jnz loc_1040ACD  +
mov dword ptr [esi+0F0h] 3 +
push 2  +
jmp loc_1037255  +
***
xor ebx ebx +
push ebx  +
push ebx  +
push eax  +
push [ebp+hWndTo]  +
call sub_100D797  +
mov ecx [esi+10h] +
neg ecx  +
sbb ecx ecx +
and ecx edi +
or eax ecx +
jmp loc_100D99F  +
***
push 0F2h  +
push dword ptr [ecx+18h]  +
call ds:SendMessageW  +
and eax 4 +
retn   +
***
push edi  +
push [ebp+hWndTo]  +
mov ecx esi +
call sub_1037328  +
test eax eax +
jz loc_100D915  +
jmp loc_10365E0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
and [ebp+var_4] 0 +
push esi  +
mov esi ecx +
mov ecx [esi+1Ch] +
test ecx ecx +
jnz loc_1055BDE  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push 18h  +
push [ebp+arg_0]  +
mov [ebp+var_4] 4 +
push offset pszSubKey  +
call SHRegGetValueFromHKCUHKLM  +
test eax eax +
mov eax [ebp+arg_4] +
jz loc_105D2BD  +
mov edx [ebp+arg_8] +
mov ecx eax +
cmp eax edx +
jbe loc_105D2C5  +
cmp ecx [ebp+arg_C] +
jnb loc_10373C8  +
cmp eax edx +
jbe loc_105D2CC  +
leave   +
retn 10h  +
mov eax [ebp+arg_C] +
jmp locret_10373C4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push 18h  +
push [ebp+arg_0]  +
mov [ebp+var_4] 4 +
push offset pszSubKey  +
call SHRegGetValueFromHKCUHKLM  +
test eax eax +
mov eax [ebp+arg_4] +
jz loc_105D2B5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
and edi 1 +
and [ebp+var_418] 0 +
mov eax offset a_default +
test edi edi +
jnz loc_1037442  +
mov eax offset aExplorer +
push ebx  +
push eax  +
push offset aAppeventsSchem  +
lea eax [ebp+pszSubKey] +
push 104h  +
push eax  +
call sub_10343CA  +
mov esi eax +
add esp 14h +
test esi esi +
jl loc_1051D02  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push 0  +
lea eax [ebp+pszSubKey] +
push eax  +
push 80000001h  +
mov [ebp+pcbData] 208h +
call SHGetValueW  +
test eax eax +
jz loc_1051CBE  +
test esi esi +
jnz loc_1051D02  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
cmp edx 0E0h +
jz loc_105152B  +
cmp edx 0E1h +
jz loc_1062A5A  +
cmp edx 0FFFFFFF8h +
jnz loc_1011394  +
jmp loc_1062A53  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+6D4h] +
mov ecx [ebp+arg_0] +
cmp eax ecx +
setnz bl  +
push edi  +
test bl bl +
jnz loc_1040BD5  +
mov eax [esi+6D4h] +
xor edi edi +
cmp eax edi +
jl loc_105DDB4  +
cmp eax 5 +
jnb loc_105DDB4  +
mov eax [esi+6D4h] +
cmp eax 4 +
jz loc_105DDC3  +
cmp [esi+40h] edi +
jz loc_105DDC3  +
mov eax [esi+6BCh] +
mov [ebp+var_10] eax +
mov eax [esi+6C0h] +
mov [ebp+var_C] eax +
mov eax [esi+6B4h] +
mov [ebp+var_8] eax +
mov eax [esi+6B8h] +
mov [ebp+hWinPosInfo] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov ecx esi +
call sub_1037B7A  +
mov ecx esi +
call sub_103772C  +
test bl bl +
jnz loc_1040BE6  +
call sub_101410A  +
test eax eax +
jnz loc_105DDF1  +
push 0Ah  +
call ds:BeginDeferWindowPos  +
mov [ebp+hWinPosInfo] eax +
cmp eax edi +
jz loc_1037692  +
mov [ebp+arg_0] 10h +
cmp [ebp+arg_4] edi +
jz loc_1037627  +
cmp byte ptr [esi+700h] 0 +
jnz loc_1037627  +
mov [ebp+arg_0] 50h +
xor ebx ebx +
lea edi [esi+0F0h] +
mov eax [esi+6D4h] +
imul eax eax +
lea ecx [eax+ebx] +
mov eax ecx +
imul eax eax +
add eax esi +
cmp byte ptr [eax+278h] 0 +
jz loc_103771D  +
mov edx [ebp+arg_0] +
or edx 0Ch +
add ecx 20h +
imul ecx ecx +
push edx  +
push dword ptr [ecx+esi]  +
push dword ptr [eax+27Ch]  +
push dword ptr [eax+288h]  +
push dword ptr [eax+284h]  +
push 0  +
push dword ptr [edi]  +
push [ebp+hWinPosInfo]  +
call ds:DeferWindowPos  +
inc ebx  +
add edi 28h +
cmp ebx 0Ah +
jb loc_103762F  +
push [ebp+hWinPosInfo]  +
call ds:EndDeferWindowPos  +
xor edi edi +
mov [ebp+arg_0] edi +
lea edi [esi+0F0h] +
mov ebx 10000000h +
mov eax [esi+6D4h] +
imul eax eax +
add eax [ebp+arg_0] +
xor ecx ecx +
imul eax eax +
cmp [eax+esi+278h] cl +
setnz cl  +
push ecx  +
push dword ptr [edi]  +
call ds:EnableWindow  +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10376E5  +
mov ecx [esi+6D4h] +
imul ecx ecx +
add ecx [ebp+arg_0] +
imul ecx ecx +
cmp [ecx+esi+278h] al +
jz loc_10376E5  +
mov eax ebx +
push eax  +
push ebx  +
push 0FFFFFFF0h  +
push dword ptr [edi]  +
call ds:SHLWAPI_165  +
inc [ebp+arg_0]  +
add edi 28h +
cmp [ebp+arg_0] 0Ah +
jb loc_10376A0  +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1037714  +
push 485h  +
push eax  +
push eax  +
push dword ptr [esi+38h]  +
call ds:RedrawWindow  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
mov edx 8Fh +
jmp loc_1037655  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+40h] edi +
jz loc_1037954  +
cmp [esi+0B4h] edi +
jnz loc_1037954  +
mov eax [esi+6D4h] +
imul eax eax +
push ebx  +
add eax esi +
push dword ptr [eax+26Ch]  +
mov ecx [eax+340h] +
mov eax [eax+268h] +
add eax ecx +
push eax  +
push edi  +
push ecx  +
call ds:CreateRectRgn  +
mov ebx ds:UnionRect +
mov [ebp+hRgn] eax +
cmp eax edi +
jz loc_1037871  +
mov eax [esi+38h] +
mov [ebp+var_24] edi +
mov [ebp+var_4] edi +
mov [ebp+lParam] eax +
mov [ebp+var_20] 0C9h +
lea edi [esi+0F0h] +
mov eax [esi+6D4h] +
mov ecx eax +
imul ecx ecx +
add ecx [ebp+var_4] +
imul ecx ecx +
cmp byte ptr [ecx+esi+278h] 0 +
jz loc_10377E1  +
push [ebp+var_4]  +
mov ecx esi +
push eax  +
lea eax [ebp+rc] +
push eax  +
call sub_1037B2A  +
lea eax [ebp+lParam] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push 4Eh  +
push dword ptr [edi]  +
call ds:SendMessageW  +
inc [ebp+var_4]  +
add edi 28h +
cmp [ebp+var_4] 0Ah +
jb loc_10377A5  +
mov ecx [esi+6D4h] +
cmp ecx 1 +
jnz loc_1041CE4  +
and [ebp+rcSrc1.left] 0 +
xor eax eax +
lea edi [ebp+rcSrc1.top] +
stos   +
stos   +
push 0  +
stos   +
push ecx  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1037B2A  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
push eax  +
call ebx  +
push 7  +
push dword ptr [esi+6D4h]  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1037B2A  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
push eax  +
call ebx  +
push 8  +
push dword ptr [esi+6D4h]  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1037B2A  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
push eax  +
call ebx  +
push 0  +
push 9  +
lea eax [ebp+lParam] +
push eax  +
lea eax [ebp+rcSrc1] +
push dword ptr [esi+40h]  +
push eax  +
call sub_1037CB3  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1037920  +
lea eax [esi+6E8h] +
push eax  +
call ds:SetRectEmpty  +
mov eax [esi+38h] +
mov [ebp+rcSrc1.top] eax +
lea eax [esi+0F0h] +
mov [ebp+rcSrc1.bottom] 0E3h +
mov [ebp+var_4] eax +
mov [ebp+var_8] 0Ah +
and [ebp+rc.left] 0 +
xor eax eax +
lea edi [ebp+rc.top] +
stos   +
stos   +
stos   +
lea eax [ebp+rcSrc1.top] +
push eax  +
lea eax [ebp+rc] +
push eax  +
mov eax [ebp+var_4] +
push 4Eh  +
push dword ptr [eax]  +
call ds:SendMessageW  +
mov edi ds:IsRectEmpty +
lea eax [ebp+rc] +
push eax  +
call edi  +
test eax eax +
jz loc_1037C18  +
add [ebp+var_4] 28h +
dec [ebp+var_8]  +
jnz loc_10378A9  +
lea ebx [esi+6E8h] +
push ebx  +
call edi  +
test eax eax +
jnz loc_1037914  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+38h]  +
call ds:GetWindowRect  +
mov eax [ebp+rc.top] +
neg eax  +
push eax  +
mov eax [ebp+rc.left] +
neg eax  +
push eax  +
push ebx  +
call ds:OffsetRect  +
push [ebp+hRgn]  +
mov ecx esi +
push 1  +
call sub_103795D  +
cmp byte ptr [esi+700h] 0 +
pop ebx  +
jnz loc_103794A  +
call ds:IsCompositionActive  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
push [ebp+hRgn]  +
push dword ptr [esi+38h]  +
call ds:SetWindowRgn  +
test eax eax +
jz loc_103794A  +
and [ebp+hRgn] 0 +
cmp [ebp+hRgn] 0 +
jnz loc_104136F  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp [ebp+arg_0] edi +
jz loc_1037A35  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1041AE6  +
cmp [esi+40h] edi +
jz loc_1041AE6  +
xor eax eax +
inc eax  +
mov [ebp+arg_0] eax +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push ebx  +
mov [ebp+var_C] eax +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+38h]  +
mov [ebp+var_10] 10h +
mov [ebp+var_8] 4 +
call ds:SetWindowCompositionAttribute  +
mov ebx ds:CreateRectRgnIndirect +
cmp [ebp+arg_4] edi +
jz loc_105DC01  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
call ds:CreateRectRgn  +
mov edi eax +
test edi edi +
jz loc_10379FE  +
push 5  +
push 0  +
push [ebp+arg_4]  +
push edi  +
call ds:CombineRgn  +
push 0FFFFFFECh  +
push dword_10B10F4  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_105DBCE  +
lea eax [esi+6E8h] +
push eax  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_1037A34  +
lea eax [esi+6E8h] +
push eax  +
call ebx  +
mov ebx eax +
test ebx ebx +
jz loc_1037A34  +
test edi edi +
jz loc_1037A2D  +
push 4  +
push ebx  +
push edi  +
push edi  +
call ds:CombineRgn  +
push ebx  +
call ds:DeleteObject  +
pop ebx  +
mov ecx [esi+6F8h] +
test ecx ecx +
jnz loc_1041AD1  +
mov eax [ebp+arg_0] +
and [ebp+var_14] 0 +
mov [ebp+var_1C] eax +
lea eax [ebp+var_20] +
push eax  +
push dword ptr [esi+38h]  +
mov [ebp+var_20] 3 +
mov [ebp+var_18] edi +
call ds:DwmEnableBlurBehindWindow  +
push edi  +
call ds:DeleteObject  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
push dword ptr [ebp+14h]  +
push ebx  +
push 46h  +
push esi  +
call sub_1037A87  +
jmp loc_10114EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
cmp dword ptr [ecx+34h] 0 +
mov [ebp+var_4] ecx +
jz loc_1037ADC  +
push edi  +
mov edi [ebp+arg_C] +
mov eax [edi+18h] +
and eax 1 +
cmp al 1 +
jz loc_1037ADB  +
push ebx  +
mov ebx ds:GetClientRect +
push esi  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ebx  +
mov esi [edi+10h] +
sub esi [ebp+Rect.right] +
mov edi [edi+14h] +
sub edi [ebp+Rect.bottom] +
add esi [ebp+Rect.left] +
add edi [ebp+Rect.top] +
test esi esi +
jnz loc_1061CBE  +
test edi edi +
jnz loc_1061CBE  +
pop esi  +
pop ebx  +
pop edi  +
xor eax eax +
leave   +
retn 10h  +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push 46h  +
push edi  +
call sub_1037AFC  +
jmp loc_1011887  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi ecx +
cmp dword ptr [esi+38h] 0 +
jz loc_1037B1D  +
mov eax [ebp+arg_C] +
test byte ptr [eax+18h] 1 +
jz loc_1042454  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
imul eax eax +
add edx eax +
mov eax edx +
imul eax eax +
add edx 20h +
imul edx edx +
push esi  +
add eax ecx +
mov esi [eax+288h] +
mov ecx [edx+ecx] +
push edi  +
mov edi [eax+284h] +
mov eax [eax+27Ch] +
add ecx esi +
push ecx  +
add eax edi +
push eax  +
push esi  +
push edi  +
push [ebp+lprc]  +
call ds:SetRect  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp+rcSrc1.left] ebx +
lea edi [ebp+rcSrc1.top] +
stos   +
stos   +
stos   +
lea eax [ebp+rcSrc1] +
mov esi ecx +
push eax  +
push dword ptr [esi+38h]  +
call ds:GetWindowRect  +
cmp [esi+0B4h] ebx +
jnz loc_105DA56  +
mov [ebp+var_4] ebx +
call ds:IsCompositionActive  +
mov edi [ebp+arg_4] +
mov [ebp+var_8] eax +
mov eax [ebp+rcSrc1.right] +
sub eax [ebp+rcSrc1.left] +
cmp eax [edi] +
jl loc_103A1D9  +
mov eax [ebp+rcSrc1.bottom] +
sub eax [ebp+rcSrc1.top] +
cmp eax [edi+4] +
jl loc_103A1D9  +
xor eax eax +
mov [ebp+arg_4] ebx +
inc eax  +
cmp [ebp+var_4] ebx +
jnz loc_105DA78  +
mov eax [ebp+arg_0] +
push ebx  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push dword ptr [esi+38h]  +
call ds:MoveWindow  +
cmp [ebp+var_4] ebx +
jnz loc_105DAA8  +
cmp [ebp+var_8] ebx +
jz loc_105DACA  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
lea eax [ebp+rc] +
push eax  +
lea eax [esi+6E8h] +
push eax  +
push eax  +
call ebx  +
jmp loc_10378DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov ebx ecx +
push 2  +
push dword ptr [ebx+38h]  +
xor esi esi +
mov [ebp+var_4] esi +
call ds:KillTimer  +
cmp byte ptr [ebx+700h] 0 +
jnz loc_105E260  +
mov eax [ebx+6D4h] +
cmp eax [ebp+arg_0] +
jnz loc_1040C0B  +
cmp [ebp+arg_0] 2 +
jz loc_104BC68  +
mov ecx ebx +
cmp [ebp+var_4] esi +
jnz loc_1041BDA  +
push 1  +
push [ebp+arg_0]  +
call sub_1037555  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push 160h  +
push offset dword_1013948  +
push offset loc_10362A8  +
lea eax [esi+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
jmp loc_1014678  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_0]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push 0  +
push [ebp+arg_4]  +
call ds:GetThemeBackgroundRegion  +
test eax eax +
jl loc_1037D26  +
cmp [ebp+arg_10] 0 +
jz loc_1037D26  +
push ebx  +
push edi  +
push [ebp+arg_0]  +
call ds:CreateRectRgnIndirect  +
mov ebx ds:DeleteObject +
mov edi eax +
test edi edi +
jz loc_1037D1F  +
push esi  +
mov esi ds:CombineRgn +
push 3  +
push edi  +
push [ebp+arg_10]  +
push [ebp+arg_10]  +
call esi  +
test eax eax +
jz loc_1037D1B  +
cmp eax 1 +
jz loc_1037D1B  +
mov eax [ebp+arg_8] +
mov eax [eax+0Ch] +
push 3  +
push [ebp+arg_10]  +
push eax  +
push eax  +
call esi  +
push edi  +
call ebx  +
pop esi  +
push [ebp+arg_10]  +
call ebx  +
pop edi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
sub eax 0Ah +
jnz loc_103BE74  +
mov esi [ebp+arg_0] +
push dword ptr [esi+10h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_103BE74  +
push 0  +
lea ecx [esi-0Ch] +
call sub_10147B4  +
jmp loc_103BE74  +
***
push [ebp+lpRect]  +
push dword ptr [esi+38h]  +
call ds:GetWindowRect  +
xor eax eax +
jmp loc_10144B4  +
***
mov eax [ebx+3Ch] +
cmp eax 9 +
jz loc_10122E9  +
cmp eax 0Ah +
jz loc_10122E9  +
cmp eax 0Ch +
jz loc_10122E9  +
mov esi [ebp+lpRect] +
push edi  +
lea edi [ebp+var_10] +
movs   +
push 0  +
push eax  +
push [ebp+arg_C]  +
movs   +
push dword ptr [ebx+38h]  +
movs   +
lea eax [ebp+var_10] +
push eax  +
movs   +
call sub_1037CB3  +
xor eax eax +
pop edi  +
jmp loc_10122E3  +
cmp eax 0FFFFFFF8h +
jnz loc_10122E9  +
mov ecx ebx +
call sub_103C3B3  +
and [ebp+var_40] 0 +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 102Bh  +
push dword ptr [ebx+0B0h]  +
mov [ebp+var_3C] 3 +
call ds:SendMessageW  +
jmp loc_10122E9  +
***
xor ebx ebx +
cmp [ebp+arg_8] ebx +
jnz loc_103A02D  +
cmp dword ptr [esi+54h] 1 +
jz loc_103A9C4  +
cmp [esi+58h] ebx +
jz loc_103A9C4  +
lea eax [ebp-8] +
push eax  +
call ds:GetCursorPos  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+18h]  +
call ds:GetWindowRect  +
push dword ptr [ebp-4]  +
lea eax [ebp+rc] +
push dword ptr [ebp-8]  +
mov [esi+14h] ebx +
push eax  +
call ds:PtInRect  +
push [ebp+lParam]  +
neg eax  +
sbb eax eax +
push ebx  +
and eax 2 +
push edi  +
push [ebp+hWndTo]  +
inc eax  +
mov [esi+0F0h] eax +
call sub_100D797  +
push dword ptr [ebp-4]  +
mov edi eax +
push dword ptr [ebp-8]  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
xor ecx ecx +
test eax eax +
setnz cl  +
inc ecx  +
push ecx  +
mov ecx esi +
call sub_10132A7  +
mov ecx [esi+78h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+54h] ebx +
mov eax edi +
jmp loc_100D99F  +
***
mov ecx esi +
cmp dx bx +
jnz loc_103A401  +
call sub_103D45A  +
push 3  +
push edi  +
call ds:GetAncestor  +
cmp [esi+6CCh] ebx +
jnz loc_100DF55  +
cmp [esi+38h] eax +
jz loc_100DF55  +
cmp eax [esi+3Ch] +
jnz loc_1037EC0  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_103D615  +
test eax eax +
jnz loc_100DF55  +
cmp [esi+6Ch] ebx +
jnz loc_100DF55  +
push dword ptr [esi+38h]  +
call ds:IsWindowEnabled  +
test eax eax +
jnz sub_10346DC  +
jmp loc_100DF55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
mov eax [ebp+arg_0] +
jz loc_103D2A5  +
mov dword ptr [eax+6Ch] 1 +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp+Rect.left] ebx +
lea edi [ebp+Rect.top] +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
mov esi ecx +
call ds:GetClientRect  +
mov edi [ebp+hDC] +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
call ds:WindowFromDC  +
test eax eax +
jnz loc_1038054  +
push ebx  +
lea eax [ebp+Rect] +
push eax  +
push edi  +
mov [ebp+var_4] edi +
call ds:SHLWAPI_197  +
cmp [ebp+var_4] ebx +
jz loc_1037F71  +
test byte ptr [esi+4] 1 +
jz loc_1037F84  +
mov eax [esi] +
lea ecx [ebp+Rect] +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
push [ebp+hWnd]  +
call dword ptr [eax]  +
cmp [ebp+var_8] ebx +
pop edi  +
pop esi  +
pop ebx  +
jnz loc_1038085  +
xor eax eax +
inc eax  +
leave   +
retn 10h  +
push 0FFFFFFECh  +
push dword_10B10F4  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_1037F61  +
jmp loc_105E9BA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov ebx ecx +
xor esi esi +
cmp [ebx+1Ch] esi +
jz loc_1061D53  +
call sub_101410A  +
test eax eax +
jnz loc_1061CF4  +
push esi  +
push dword ptr [ebp+10h]  +
push esi  +
push dword ptr [ebx+2Ch]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx+1Ch]  +
call ds:DrawThemeBackground  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push dword ptr [ebp+14h]  +
add ecx 2Ch +
push dword ptr [ebp+10h]  +
push 14h  +
push esi  +
call sub_1037F08  +
jmp loc_10114EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+hDC]  +
lea ecx [esi+2Ch] +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call sub_1037F08  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push [ebp+Msg]  +
push dword ptr [esi+38h]  +
push dword ptr [esi+40h]  +
push 0  +
call sub_1038038  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push ebx  +
xor ebx ebx +
xor eax eax +
test byte ptr [ebp+lParam] 10h +
jnz loc_103944D  +
pop ebx  +
leave   +
retn 18h  +
***
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
push edi  +
mov [ebp+var_28] 10h +
mov [ebp+var_24] 1 +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
call ds:BeginBufferedPaint  +
mov [ebp+var_8] eax +
jmp loc_1037F56  +
push 1  +
push [ebp+var_8]  +
call ds:EndBufferedPaint  +
jmp loc_1037F7D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx ecx +
mov ecx [ebx+0Ch] +
xor edx edx +
push esi  +
push edi  +
cmp ecx edx +
jz loc_105EF88  +
mov eax [ebx+10h] +
cmp eax 9 +
jnz loc_1038DB8  +
push 3  +
pop eax  +
mov [ebp-10h] ax +
xor eax eax +
mov esi ds:SHLWAPI_484 +
lea edi [ebp-0Eh] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp-10h] +
push eax  +
push edx  +
push edx  +
push 156h  +
push offset dword_1036BDC  +
push offset loc_10362A8  +
push dword ptr [ebx-4]  +
call esi  +
test eax eax +
jl loc_1038142  +
mov eax [ebp+10h] +
mov edi [eax+0Ch] +
add edi [ebp-8] +
push 13h  +
pop eax  +
mov [ebp-10h] ax +
lea eax [ebp-10h] +
push eax  +
push 0  +
push 0  +
push 161h  +
push offset dword_1036BDC  +
push offset dword_10128F0  +
push dword ptr [ebx-4]  +
call esi  +
test eax eax +
jl loc_1038142  +
mov eax [ebp-8] +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp-8] +
push eax  +
push edi  +
push 9  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+0Ch]  +
call sub_103814E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
push [ebp+hWndFrom]  +
call ds:GetParent  +
mov ecx [ebp+arg_18] +
mov ebx eax +
xor eax eax +
lea edi [ebp+rc] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_14] +
mov [ebp+rc.left] eax +
add eax ecx +
xor esi esi +
mov [ebp+rc.right] eax +
cmp ebx esi +
jz loc_10381EA  +
mov edi [ebp+arg_8] +
push 1  +
push edi  +
mov [ebp+Points] esi +
mov [ebp-4] esi +
call ds:SetBkMode  +
push 1  +
lea eax [ebp+Points] +
push eax  +
push ebx  +
push [ebp+hWndFrom]  +
call ds:MapWindowPoints  +
mov eax [ebp+Points] +
push esi  +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
mov eax [ebp+arg_10] +
mov [ebp+rc.bottom] eax +
lea eax [ebp+Points] +
push eax  +
push dword ptr [ebp-4]  +
push esi  +
push edi  +
call ds:OffsetWindowOrgEx  +
push esi  +
lea eax [ebp+rc] +
push eax  +
push esi  +
push [ebp+arg_C]  +
push edi  +
push [ebp+arg_0]  +
call ds:DrawThemeBackground  +
push esi  +
push dword ptr [ebp-4]  +
push [ebp+Points]  +
push edi  +
call ds:SetWindowOrgEx  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lParam] +
mov esi ecx +
test edi edi +
jz loc_1039AA0  +
mov eax [esi+38h] +
and dword ptr [edi+4] 0 +
mov ebx [ebp+hWnd] +
push edi  +
mov [edi] eax +
mov eax [ebp+arg_8] +
push 0  +
mov dword ptr [edi+8] 0D7h +
mov [edi+20h] eax +
mov eax [esi+0C0h] +
push 4Eh  +
push ebx  +
mov [edi+24h] eax +
call ds:SendMessageW  +
xor ecx ecx +
mov [ebp+lParam] eax +
cmp eax ecx +
jz loc_103B7D8  +
cmp ebx [esi+230h] +
jz loc_103B7D8  +
cmp [ebp+lParam] 0 +
jz loc_103826B  +
mov eax [edi+20h] +
test eax 100h +
jnz loc_103C1F9  +
test dword ptr [edi+20h] 800h +
jz loc_10382A5  +
cmp [ebp+lParam] 0 +
jz loc_1040B92  +
mov eax [esi+48h] +
cmp eax ebx +
jz loc_10382A5  +
test eax eax +
jnz loc_105DD47  +
mov eax [esi+1E0h] +
cmp ebx eax +
jnz loc_103C88A  +
cmp dword ptr [esi+48h] 0 +
jnz loc_103C88A  +
mov eax [ebp+lParam] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push dword ptr [esi+2Ch]  +
xor ebx ebx +
mov edi ecx +
mov [ebp+var_4] ebx +
call sub_101231E  +
mov [ebp+arg_0] eax +
cmp eax ebx +
jz loc_105F956  +
cmp [edi+38h] ebx +
jz loc_10382ED  +
push esi  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_1038398  +
cmp [edi+38h] ebx +
mov ebx ds:GetSysColor +
jz loc_105F968  +
test byte ptr [esi+28h] 41h +
jnz loc_103DD1A  +
push 0  +
push 0  +
push 103Dh  +
push dword ptr [edi+0B0h]  +
call ds:SendMessageW  +
cmp [esi+24h] eax +
jz loc_103DD1A  +
and dword ptr [esi+28h] 0FFFFFFEEh +
test byte ptr [esi+28h] 40h +
jnz loc_103DE4B  +
push 0  +
push 0  +
push 103Dh  +
push dword ptr [edi+0B0h]  +
call ds:SendMessageW  +
cmp [esi+24h] eax +
jz loc_103DE33  +
mov eax [esi+24h] +
cmp eax [edi+128h] +
jz loc_10384D1  +
mov esi 10000h +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_103838A  +
mov eax [ecx+10h] +
test al 1 +
jnz loc_105F9A5  +
cmp dword ptr [ecx+18h] 0 +
jnz loc_1038940  +
test al 10h +
jz loc_1039584  +
call sub_100F319  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
mov ebx ecx +
test byte ptr [ebx+1B4h] 1 +
push esi  +
push edi  +
jz loc_1038478  +
cmp [ebp+arg_0] 0 +
jz loc_1038478  +
mov edi [ebp+arg_4] +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_1038484  +
mov esi ds:SendMessageW +
and [ebp+rcSrc.left] 0 +
lea eax [ebp+rcSrc] +
push eax  +
push dword ptr [edi+24h]  +
push 100Eh  +
push dword ptr [ebx+0B0h]  +
call esi  +
test eax eax +
jz loc_103DDBC  +
test byte ptr [edi+28h] 41h +
jnz loc_103DD40  +
mov eax [edi+24h] +
push 0  +
push 0  +
push 103Dh  +
push dword ptr [ebx+0B0h]  +
mov [ebp+wParam] eax +
call esi  +
cmp [ebp+wParam] eax +
jz loc_103DD40  +
push 1  +
push [ebp+wParam]  +
push 102Ch  +
push dword ptr [ebx+0B0h]  +
call esi  +
test al 1 +
jnz loc_103DD40  +
mov esi [ebp+arg_0] +
mov eax [esi+20h] +
test al 8 +
jnz loc_103DD43  +
test al 2 +
jnz loc_105F0E2  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
test eax eax +
jnz loc_105F103  +
push dword ptr [ebx+44h]  +
mov eax [esi] +
push dword ptr [ebx+58h]  +
mov ecx esi +
call dword ptr [eax+4]  +
test eax eax +
jnz loc_103968A  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
push 2  +
push dword ptr [eax+24h]  +
mov esi ecx +
push 102Ch  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov ecx [ebp+arg_0] +
test al 2 +
jnz loc_103DBD4  +
xor eax eax +
inc eax  +
test byte ptr [ecx+20h] 8 +
jnz loc_105F0BE  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
pop esi  +
pop ebp  +
retn 14h  +
***
cmp dword ptr [edi+11Ch] 0 +
jz loc_103835C  +
jmp loc_103DE59  +
***
push dword ptr [ebp+14h]  +
lea ecx [edi+2Ch] +
push dword ptr [ebp+10h]  +
push 14h  +
push esi  +
call sub_1037F08  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+Rect] +
push eax  +
mov esi ecx +
call sub_1038524  +
test eax eax +
jnz loc_105FE1C  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
lea ebx [edi+130h] +
cmp dword ptr [ebx] 0 +
jge loc_105FDE0  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
push [ebp+arg_0]  +
call sub_10384FE  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_1038562  +
jmp loc_1012465  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ecx +
mov ebx [esi+0ECh] +
push edi  +
mov edi [ebp+arg_0] +
test ebx ebx +
jle loc_10385C4  +
push [ebp+var_4]  +
lea ecx [esi+0E8h] +
call sub_1013815  +
lea ecx [ebp+var_C] +
push ecx  +
push dword ptr [eax]  +
mov ecx esi +
call sub_1012519  +
mov eax [esi+64h] +
sub eax [esi+144h] +
mov ecx esi +
cdq   +
sub eax edx +
sar eax 1 +
add [ebp+var_8] eax +
push [ebp+var_8]  +
push [ebp+var_C]  +
push dword ptr [edi+10h]  +
call sub_10385DF  +
inc [ebp+var_4]  +
cmp [ebp+var_4] ebx +
jl loc_1038580  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+5Ch]  +
test eax eax +
jnz loc_103958C  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
push esi  +
mov esi [ecx+140h] +
add esi eax +
mov [ebp+qrc.left] eax +
mov eax [ecx+144h] +
add eax edx +
mov [ebp+qrc.bottom] eax +
mov eax [ecx+38h] +
mov [ebp+qrc.right] esi +
mov [ebp+qrc.top] edx +
pop esi  +
test eax eax +
jz loc_105F5C8  +
push 0  +
lea edx [ebp+qrc] +
push edx  +
push 0  +
push dword ptr [ecx+40h]  +
push [ebp+hdc]  +
push eax  +
call ds:DrawThemeBackground  +
leave   +
retn 0Ch  +
***
push esi  +
mov esi [ebp+1Ch] +
inc dword ptr [esi+1B8h]  +
mov eax [esi+1B8h] +
push edi  +
cmp eax 1 +
jnz loc_1038657  +
mov eax [esi+10Ch] +
test eax eax +
jz loc_1038657  +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+1Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 0Fh  +
push dword ptr [ebp+8]  +
call sub_100D797  +
cmp dword ptr [esi+1B8h] 1 +
mov edi eax +
jnz loc_1038684  +
mov eax [esi+10Ch] +
test eax eax +
jz loc_1038684  +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+1Ch]  +
dec dword ptr [esi+1B8h]  +
mov eax edi +
pop edi  +
pop esi  +
jmp loc_100F0BB  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_10386A6  +
jmp loc_1001FDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 2  +
mov esi ecx +
pop edi  +
cmp [esi+6D4h] edi +
jz loc_1040B53  +
lea eax [esi+9Ch] +
cmp dword ptr [eax] 0 +
jz loc_103C796  +
movsx eax word ptr [ebx+0Ch] +
mov [ebp+Point.x] eax +
movsx eax word ptr [ebx+0Eh] +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [ebx]  +
call ds:ClientToScreen  +
movzx edi word ptr [ebp+Point.y] +
movzx eax word ptr [ebp+Point.x] +
mov ecx [esi+0C0h] +
shl edi 10h +
or edi eax +
test ecx ecx +
jz loc_1040F3B  +
cmp [esi+0C4h] edi +
jnz loc_103C7BD  +
cmp ecx [ebx] +
jnz loc_104137D  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101410A  +
test eax eax +
jnz loc_105D9E6  +
call ds:GetFocus  +
push eax  +
push dword ptr [esi+1E0h]  +
call ds:SHIsChildOrSelf  +
neg eax  +
sbb eax eax +
inc eax  +
pop esi  +
retn   +
***
dec eax  +
jnz loc_10604CB  +
push edi  +
call sub_103876F  +
jmp loc_101242F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push dword ptr [ebx+2Ch]  +
mov esi ecx +
mov [ebp+var_C] esi +
call sub_101231E  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_103886A  +
test byte ptr [esi+1B4h] 1 +
jz loc_1038862  +
cmp dword ptr [esi+38h] 0 +
jz sub_105F28E  +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [ebx+24h]  +
mov [ebp+lParam] 2 +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_1038862  +
push edi  +
push dword ptr [ebx+40h]  +
push dword ptr [ebx+10h]  +
call ds:SetBkColor  +
push dword ptr [ebx+30h]  +
mov [ebp+var_1C] eax +
push dword ptr [ebx+10h]  +
call ds:SetTextColor  +
push 1  +
push dword ptr [ebx+10h]  +
mov [ebp+var_18] eax +
call ds:SetBkMode  +
push dword ptr [ebx+10h]  +
mov [ebp+var_14] eax +
call ds:GetLayout  +
mov edi eax +
mov eax [ebp+arg_0] +
and edi 1 +
test byte ptr [eax+10h] 1 +
jnz loc_105F29C  +
mov eax [ebp+arg_0] +
mov eax [eax+18h] +
test eax eax +
jnz loc_1038872  +
mov ecx [ebp+arg_0] +
mov eax [ecx+10h] +
pop edi  +
test al al +
js loc_105F3D0  +
test eax 100h +
jnz loc_105F3DE  +
push [ebp+var_14]  +
push dword ptr [ebx+10h]  +
call ds:SetBkMode  +
push [ebp+var_18]  +
push dword ptr [ebx+10h]  +
call ds:SetTextColor  +
push [ebp+var_1C]  +
push dword ptr [ebx+10h]  +
call ds:SetBkColor  +
mov ecx [ebp+arg_0] +
call sub_100F319  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
test dword ptr [ebx+28h] 200h +
jz loc_1038824  +
mov ecx [esi+19Ch] +
sub [ebp+var_24] ecx +
add [ebp+lParam] 2 +
mov [ebp+var_4] 42010h +
test edi edi +
jnz loc_105F3A5  +
mov ecx [ebp+var_4] +
lea esi [ebp+lParam] +
lea edi [ebp+Rect] +
movs   +
movs   +
or ecx 400h +
push ecx  +
lea ecx [ebp+Rect] +
push ecx  +
movs   +
push 0FFFFFFFFh  +
push eax  +
push dword ptr [ebx+10h]  +
movs   +
mov edi ds:DrawTextW +
call edi  +
mov eax [ebp+Rect.top] +
sub eax [ebp+Rect.bottom] +
mov esi [ebp+var_C] +
sub eax [ebp+var_28] +
add eax [ebp+var_20] +
cdq   +
sub eax edx +
sar eax 1 +
add [ebp+var_28] eax +
cmp dword ptr [esi+38h] 0 +
jz loc_105F3B1  +
push 3Ch  +
lea eax [ebp+var_78] +
push 0  +
push eax  +
mov [ebp+var_7C] 40h +
call memset  +
add esp 0Ch +
call ds:IsCompositionActive  +
neg eax  +
sbb eax eax +
and eax 2000h +
mov [ebp+var_78] eax +
lea eax [ebp+var_7C] +
push eax  +
lea eax [ebp+lParam] +
push eax  +
mov eax [ebp+var_4] +
or eax 200000h +
push eax  +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push dword ptr [eax+18h]  +
push dword ptr [ebx+50h]  +
push dword ptr [esi+3Ch]  +
push dword ptr [ebx+10h]  +
push dword ptr [esi+38h]  +
call ds:DrawThemeTextEx  +
mov eax [esi+19Ch] +
add [ebp+var_24] eax +
jmp loc_1038824  +
***
or esi 30h +
jmp loc_103837D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+14h] +
test eax eax +
jz loc_10622EF  +
push 0  +
push dword ptr [ebp+10h]  +
push 0  +
push dword ptr [ecx+24h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:DrawThemeBackground  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
xor ebx ebx +
xor eax eax +
mov [ebp+var_1A0] ecx +
cmp [esi+2Ch] ebx +
jz loc_1038C4C  +
cmp dword ptr [ecx+0Ch] 3 +
jnz loc_1038C4C  +
push edi  +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+24h]  +
mov [ebp+wParam] ebx +
mov [ebp+var_1E0] 10h +
mov [ebp+var_1DC] 1 +
mov [ebp+var_1D8] ebx +
mov [ebp+var_1D4] ebx +
call ds:GetClientRect  +
mov edi [ebp+var_1A0] +
lea eax [ebp+wParam] +
push eax  +
lea eax [ebp+var_1E0] +
push eax  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [edi+10h]  +
call ds:BeginBufferedPaint  +
mov [ebp+var_1C0] eax +
cmp eax ebx +
jz loc_1038C48  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_1BC] +
push eax  +
mov ecx esi +
call sub_10146FB  +
mov eax [edi+28h] +
test al 1 +
jnz loc_106253C  +
cmp [esi+34h] ebx +
jnz loc_104D692  +
mov [ebp+var_19C] 1 +
test al 10h +
jnz loc_104D692  +
push 1  +
push [ebp+wParam]  +
mov [ebp+Points] ebx +
mov [ebp-1A8h] ebx +
call ds:SetBkMode  +
push 1  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [esi+20h]  +
push dword ptr [esi+24h]  +
call ds:MapWindowPoints  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [ebp-1A8h]  +
push [ebp+Points]  +
push [ebp+wParam]  +
call ds:OffsetWindowOrgEx  +
push ebx  +
push [ebp+wParam]  +
push 14h  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
push ebx  +
push dword ptr [ebp-1A8h]  +
push [ebp+Points]  +
push [ebp+wParam]  +
call ds:SetWindowOrgEx  +
mov edi ds:DrawThemeBackground +
push ebx  +
lea eax [ebp+var_1BC] +
push eax  +
push [ebp+var_19C]  +
xor eax eax +
cmp dword ptr [esi+3Ch] 0Eh +
setnz al  +
add eax 25h +
push eax  +
push [ebp+wParam]  +
push dword ptr [esi+2Ch]  +
call edi  +
cmp [esi+38h] ebx +
jnz loc_104D6A1  +
mov eax [ebp+var_19C] +
push ebx  +
lea ecx [ebp+var_218] +
push ecx  +
push eax  +
xor eax eax +
cmp dword ptr [esi+3Ch] 0Eh +
setnz al  +
add eax 17h +
push eax  +
push [ebp+wParam]  +
push dword ptr [esi+2Ch]  +
call edi  +
lea eax [ebp+var_1BC] +
push eax  +
push eax  +
push [ebp+var_19C]  +
xor eax eax +
cmp dword ptr [esi+3Ch] 0Eh +
setnz al  +
add eax 25h +
push eax  +
push [ebp+wParam]  +
push dword ptr [esi+2Ch]  +
call ds:GetThemeBackgroundContentRect  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+lParam] +
stos   +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 1603h  +
push dword ptr [esi+24h]  +
call ds:SendMessageW  +
cmp [ebp+lParam] ebx +
jnz loc_106254B  +
push 0C8h  +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi+24h]  +
call ds:GetWindowTextW  +
push dword ptr [esi+48h]  +
mov edi ds:SelectObject +
push [ebp+wParam]  +
call edi  +
push 3Ch  +
mov [ebp+var_1A0] eax +
lea eax [ebp+var_254] +
push ebx  +
push eax  +
mov [ebp+var_258] 40h +
call memset  +
add esp 0Ch +
call ds:IsCompositionActive  +
neg eax  +
sbb eax eax +
and eax 2000h +
mov [ebp+var_254] eax +
lea eax [ebp+var_258] +
push eax  +
lea eax [ebp+var_1BC] +
push eax  +
push 108025h  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_19C]  +
xor eax eax +
cmp dword ptr [esi+3Ch] 0Eh +
setnz al  +
add eax 25h +
push eax  +
push [ebp+wParam]  +
push dword ptr [esi+2Ch]  +
call ds:DrawThemeTextEx  +
push [ebp+var_1A0]  +
push [ebp+wParam]  +
call edi  +
push 1  +
push [ebp+var_1C0]  +
call ds:EndBufferedPaint  +
push 4  +
pop eax  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
push dword ptr [ebp+14h]  +
add ecx 18h +
push dword ptr [ebp+10h]  +
push 14h  +
push ebx  +
call sub_1037F08  +
jmp loc_10112AF  +
***
test eax eax +
jz loc_103BB24  +
jmp loc_1040F58  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+1FCh]  +
jmp loc_1036968  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
mov ebx 80070057h +
test edi edi +
jz loc_1038CF0  +
push esi  +
push 4  +
pop ecx  +
mov esi offset dword_103BE80 +
xor eax eax +
cmps   +
jnz loc_1038CEF  +
cmp [ebp+arg_8] 149h +
jz loc_1060DEC  +
cmp [ebp+arg_8] 156h +
jnz loc_1038CEF  +
lea eax [ebp+Rect] +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+38h]  +
call ds:GetClientRect  +
mov eax [ebp+arg_14] +
mov ecx [ebp+Rect.bottom] +
mov [eax+8] ecx +
xor ebx ebx +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx ecx +
xor ecx ecx +
push esi  +
push edi  +
cmp [ebx+10h] ecx +
jz loc_10611E8  +
push 3  +
pop eax  +
mov [ebp-10h] ax +
xor eax eax +
lea edi [ebp-0Eh] +
stos   +
stos   +
stos   +
stos   +
mov edi ds:SHLWAPI_484 +
lea eax [ebp-10h] +
push eax  +
push ecx  +
push ecx  +
push 156h  +
push offset dword_10141A8  +
push offset dword_1036970  +
push dword ptr [ebx-0Ch]  +
call edi  +
test eax eax +
jl loc_1038D97  +
mov eax [ebp+10h] +
mov esi [eax+0Ch] +
add esi [ebp-8] +
push 13h  +
pop eax  +
mov [ebp-10h] ax +
lea eax [ebp-10h] +
push eax  +
push 0  +
push 0  +
push 161h  +
push offset dword_10141A8  +
push offset dword_10128F0  +
push dword ptr [ebx-0Ch]  +
call edi  +
test eax eax +
jl loc_1038D97  +
mov eax [ebp-8] +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp-8] +
push eax  +
push esi  +
push 9  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+10h]  +
call sub_103814E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push [ebp+lParam]  +
push [ebp+hDC]  +
push ecx  +
mov ecx [ebp+arg_0] +
push [ebp+hWnd]  +
add ecx 10h +
call sub_1037F08  +
jmp loc_1011923  +
***
cmp eax 0Ch +
jz loc_105EF00  +
push edx  +
push dword ptr [ebp+10h]  +
push edx  +
push eax  +
push dword ptr [ebp+0Ch]  +
push ecx  +
call ds:DrawThemeBackground  +
jmp loc_1038142  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
mov esi ecx +
push 2000000h  +
push dword ptr [esi+38h]  +
call sub_10149F4  +
mov eax [ebp+arg_0] +
mov [ebp+hDC] eax +
cmp eax ebx +
jnz loc_1038E15  +
push dword ptr [esi+38h]  +
call ds:GetDC  +
mov [ebp+hDC] eax +
cmp eax ebx +
jz loc_1038E9E  +
push edi  +
xor eax eax +
mov [ebp+Rect.left] ebx +
lea edi [ebp+Rect.top] +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+38h]  +
call ds:GetClientRect  +
lea eax [ebp+wParam] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hDC]  +
mov [ebp+var_18] 10h +
mov [ebp+var_14] 1 +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
call ds:BeginBufferedPaint  +
mov edi eax +
cmp edi ebx +
jz loc_1038E8C  +
mov ecx [esi+6F8h] +
push [ebp+wParam]  +
cmp ecx ebx +
jnz loc_1041B18  +
mov ecx esi +
call sub_1038EB8  +
push 1  +
push edi  +
call ds:EndBufferedPaint  +
cmp [esi+6F8h] ebx +
jnz loc_1041B7F  +
pop edi  +
cmp [ebp+arg_0] ebx +
jnz loc_1038E9E  +
push [ebp+hDC]  +
push dword ptr [esi+38h]  +
call ds:ReleaseDC  +
push 1  +
push 2000000h  +
push dword ptr [esi+38h]  +
call sub_10149F4  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx ds:SetViewportOrgEx +
push esi  +
mov esi ecx +
lea eax [esi+0F0h] +
push edi  +
mov [ebp+var_8] eax +
mov eax [esi+6D4h] +
imul eax eax +
add eax [ebp+var_4] +
imul eax eax +
cmp byte ptr [eax+esi+278h] 0 +
jz loc_1038F97  +
mov eax [esi+6D4h] +
mov edi [ebp+var_4] +
imul eax eax +
add eax edi +
imul eax eax +
push 0  +
add eax esi +
push dword ptr [eax+288h]  +
push dword ptr [eax+284h]  +
push [ebp+wParam]  +
call ebx  +
mov eax [esi+6D4h] +
imul eax eax +
lea ecx [eax+edi] +
mov eax ecx +
imul eax eax +
add ecx 20h +
imul ecx ecx +
mov ecx [ecx+esi] +
add eax esi +
mov edx [eax+288h] +
mov edi [eax+284h] +
mov eax [eax+27Ch] +
add ecx edx +
push ecx  +
add eax edi +
push eax  +
push edx  +
push edi  +
call ds:CreateRectRgn  +
mov edi eax +
test edi edi +
jz loc_1038F8D  +
push edi  +
push [ebp+wParam]  +
call ds:SelectClipRgn  +
mov eax [ebp+var_8] +
push 1Ch  +
push [ebp+wParam]  +
push 318h  +
push dword ptr [eax]  +
call ds:SendMessageW  +
push 0  +
push [ebp+wParam]  +
call ds:SelectClipRgn  +
push edi  +
call ds:DeleteObject  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+wParam]  +
call ebx  +
inc [ebp+var_4]  +
add [ebp+var_8] 28h +
cmp [ebp+var_4] 0Ah +
jb loc_1038ED7  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push eax  +
push esi  +
call sub_1038FC8  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+hDC]  +
lea ecx [esi+2Ch] +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call sub_1037F08  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push [ebp+Msg]  +
push dword ptr [esi+0B0h]  +
push dword ptr [esi+44h]  +
push 0  +
call sub_1038038  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov esi [ebp+8] +
cmp dword ptr [esi+6BCh] 2 +
mov edi [ebp+18h] +
jz loc_1013E67  +
push dword ptr [ebp+1Ch]  +
push edi  +
push dword ptr [ebp+14h]  +
push 130h  +
push eax  +
push offset dword_1036980  +
jmp loc_103C091  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 16h  +
pop eax  +
mov [ebp-10h] ax +
mov eax [ebp+10h] +
neg eax  +
sbb eax eax +
and eax 20000h +
push 0  +
mov [ebp-8] eax +
lea eax [ebp-10h] +
push eax  +
mov eax [ebp+8] +
push 0  +
push 163h  +
push offset dword_103B768  +
push offset dword_10128F0  +
push dword ptr [eax-0Ch]  +
call ds:SHLWAPI_484  +
leave   +
retn 0Ch  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1013A10  +
***
sub dword ptr [esp+4] 28h +
jmp loc_10139F5  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2Bh  +
push esi  +
call sub_10390AF  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+50h] 0 +
jz loc_10390CE  +
mov eax [ebx+50h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+1Ch]  +
push esi  +
mov esi [ebp+arg_C] +
test byte ptr [esi+0Ch] 45h +
jz loc_1039356  +
push edi  +
push dword ptr [esi+18h]  +
call ds:CreateCompatibleDC  +
mov edi eax +
mov [ebp+hDC] edi +
test edi edi +
jz loc_1039355  +
mov ecx [esi+28h] +
sub ecx [esi+20h] +
mov eax [esi+24h] +
sub eax [esi+1Ch] +
and [ebp+Rect.left] 0 +
and [ebp+Rect.top] 0 +
push ecx  +
push eax  +
push dword ptr [esi+18h]  +
mov [ebp+Rect.right] eax +
mov [ebp+Rect.bottom] ecx +
call sub_1039375  +
mov [ebp+var_40] eax +
test eax eax +
jz loc_103934E  +
push eax  +
push edi  +
call ds:SelectObject  +
push dword ptr [esi+18h]  +
mov [ebp+var_44] eax +
call ds:GetLayout  +
and eax 1 +
mov [ebp+var_3C] eax +
mov [ebp+var_38] 0 +
jnz loc_1062ADA  +
push dword ptr [ebx+40h]  +
push edi  +
call ds:SelectObject  +
xor ecx ecx +
mov [ebp+var_48] eax +
cmp eax ecx +
jz loc_103933B  +
test byte ptr [esi+10h] 50h +
jnz loc_1041D1C  +
cmp [ebx+68h] ecx +
jnz loc_1041D1C  +
mov [ebp+var_8] ecx +
cmp [ebx+0C4h] ecx +
jnz loc_1041D1C  +
lea eax [ebp+var_10] +
push eax  +
mov ecx ebx +
mov [ebp+var_10] 1 +
call sub_1014039  +
mov eax [ebx+3Ch] +
xor ecx ecx +
mov [ebp+var_14] 1 +
cmp eax ecx +
jz loc_1062AF2  +
cmp [ebp+var_8] ecx +
jnz loc_1041D28  +
cmp [ebx+0BCh] ecx +
jnz loc_1062AE6  +
push ecx  +
lea ecx [ebp+Rect] +
push ecx  +
push [ebp+var_14]  +
push 10h  +
push edi  +
push eax  +
call ds:DrawThemeBackground  +
push 1  +
push edi  +
call ds:SetBkMode  +
cmp [ebp+var_10] 0 +
mov [ebp+var_4C] eax +
jz loc_1041FF7  +
mov edx [ebx+84h] +
mov eax [ebp+Rect.right] +
mov ecx [ebx+8Ch] +
sub eax edx +
sub eax [ebp+Rect.left] +
cmp ecx eax +
jg loc_1062B55  +
add [ebp+Rect.left] ecx +
cmp [ebp+var_10] 0 +
mov [ebp+uFormat] 2024h +
lea edi [ebx+0CCh] +
jz loc_1042002  +
xor eax eax +
cmp [ebp+var_3C] eax +
jnz loc_1062B67  +
test dword ptr [esi+10h] 100h +
jz loc_1039236  +
or [ebp+uFormat] 100000h +
cmp [ebx+3Ch] eax +
jz loc_1062B73  +
push 3Ch  +
push eax  +
lea eax [ebp+var_88] +
push eax  +
mov [ebp+var_8C] 40h +
call memset  +
add esp 0Ch +
call ds:IsCompositionActive  +
neg eax  +
sbb eax eax +
and eax 2000h +
mov [ebp+var_88] eax +
lea eax [ebp+var_8C] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+uFormat]  +
push 0FFFFFFFFh  +
push edi  +
push [ebp+var_14]  +
push 10h  +
push [ebp+hDC]  +
push dword ptr [ebx+3Ch]  +
call ds:DrawThemeTextEx  +
lea esi [ebp+Rect] +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
push 2Dh  +
movs   +
call ds:GetSystemMetrics  +
mov ecx [ebx+3Ch] +
xor esi esi +
mov [ebp+rc.left] eax +
cmp ecx esi +
jz loc_1062B93  +
mov eax [ebx+0A4h] +
cmp eax esi +
jl loc_1062B8B  +
mov eax [ebx+90h] +
add eax [ebp+rc.left] +
push esi  +
mov [ebp+rc.right] eax +
lea eax [ebp+rc] +
push eax  +
mov eax [ebp+var_8] +
neg eax  +
sbb eax eax +
and eax 2 +
push eax  +
mov eax [ebp+var_10] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFEFh +
add eax 15h +
push eax  +
push [ebp+hDC]  +
push ecx  +
call ds:DrawThemeBackground  +
mov eax [ebp+arg_C] +
mov ecx [eax+20h] +
mov edx [eax+1Ch] +
push 0CC0020h  +
push esi  +
push esi  +
push [ebp+hDC]  +
mov esi [eax+28h] +
sub esi ecx +
push esi  +
mov esi [eax+24h] +
sub esi edx +
push esi  +
push ecx  +
push edx  +
push dword ptr [eax+18h]  +
call ds:BitBlt  +
push [ebp+var_48]  +
push [ebp+hDC]  +
call ds:SelectObject  +
push [ebp+var_4C]  +
push [ebp+hDC]  +
call ds:SetBkMode  +
mov edi [ebp+hDC] +
push [ebp+var_44]  +
push edi  +
call ds:SelectObject  +
push [ebp+var_40]  +
call ds:DeleteObject  +
push edi  +
call ds:DeleteDC  +
pop edi  +
cmp dword ptr [ebx+50h] 0 +
pop esi  +
jz loc_1039368  +
mov ebx [ebx+50h] +
mov eax [ebx] +
push 1  +
push ebx  +
call dword ptr [eax+1Ch]  +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
call ds:IsCompositionActive  +
test eax eax +
jz loc_105E9A6  +
push edi  +
push 0Ah  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_2C.bmiHeader.biWidth] +
stos   +
mov eax [ebp+arg_4] +
mov [ebp+var_2C.bmiHeader.biWidth] eax +
mov eax [ebp+arg_8] +
neg eax  +
mov [ebp+var_2C.bmiHeader.biHeight] eax +
xor eax eax +
push 20h  +
inc eax  +
mov [ebp+var_2C.bmiHeader.biPlanes] ax +
pop eax  +
mov [ebp+var_2C.bmiHeader.biBitCount] ax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
mov [ebp+var_2C.bmiHeader.biCompression] eax +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_2C.bmiHeader.biSize] 28h +
call ds:CreateDIBSection  +
pop edi  +
leave   +
retn 0Ch  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 135h  +
push esi  +
call sub_10393EF  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+54h] +
cmp eax 0FFFFFFFFh +
jz loc_1039409  +
push eax  +
push [ebp+arg_8]  +
call ds:SetTextColor  +
mov eax [esi+5Ch] +
cmp eax 0FFFFFFFFh +
jnz loc_1062A7E  +
mov eax [esi+4Ch] +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+14h] +
test eax eax +
jz loc_1062A8D  +
push 0  +
push dword ptr [ebp+10h]  +
push 0  +
push dword ptr [ecx+6A4h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:DrawThemeBackground  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push edi  +
mov esi ds:GetClientRect +
mov [ebp+Rect.left] ebx +
lea edi [ebp+Rect.top] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+Points.x] ebx +
lea edi [ebp+Points.y] +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWndTo]  +
call esi  +
lea eax [ebp+Points] +
push eax  +
push [ebp+hWnd]  +
call esi  +
xor eax eax +
mov [ebp+var_10] ebx +
lea edi [ebp-0Ch] +
push 2  +
stos   +
lea eax [ebp+Points] +
push eax  +
push [ebp+hWndTo]  +
push [ebp+hWnd]  +
call ds:MapWindowPoints  +
mov esi [ebp+arg_10] +
lea eax [ebp+var_10] +
push eax  +
mov eax [ebp+Points.y] +
sub eax [ebp+Rect.top] +
push eax  +
mov eax [ebp+Points.x] +
sub eax [ebp+Rect.left] +
push eax  +
push esi  +
call ds:OffsetViewportOrgEx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call ds:CreateRectRgn  +
mov [ebp+hWndTo] eax +
cmp eax ebx +
jz loc_103952F  +
push eax  +
push esi  +
call ds:GetClipRgn  +
cmp eax 1 +
jnz loc_103952F  +
xor eax eax +
mov [ebp+var_20.x] ebx +
lea edi [ebp+var_20.y] +
stos   +
stos   +
stos   +
lea eax [ebp+var_20] +
push eax  +
push [ebp+hWndTo]  +
call ds:GetRgnBox  +
test eax eax +
jz loc_103952F  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+var_24] +
add eax [ebp-14h] +
push eax  +
mov eax [ebp+var_28] +
sub eax [ebp+Rect.right] +
add eax [ebp-18h] +
push eax  +
mov eax [ebp+var_20.y] +
sub eax [ebp+Rect.top] +
add eax [ebp+Points.y] +
push eax  +
mov eax [ebp+var_20.x] +
sub eax [ebp+Rect.left] +
add eax [ebp+Points.x] +
push eax  +
call ds:CreateRectRgn  +
mov edi eax +
cmp edi ebx +
jz loc_103952F  +
push edi  +
push esi  +
call ds:SelectClipRgn  +
push edi  +
call ds:DeleteObject  +
push esi  +
call ds:GetLayout  +
mov edi ds:SetViewportOrgEx +
mov [ebp+arg_10] eax +
cmp [ebp+arg_0] ebx +
jnz loc_105D234  +
push [ebp+lParam]  +
push esi  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp [ebp+hWndTo] ebx +
jz loc_1039570  +
push [ebp+hWndTo]  +
push esi  +
call ds:SelectClipRgn  +
push [ebp+hWndTo]  +
call ds:DeleteObject  +
push ebx  +
push dword ptr [ebp-0Ch]  +
push [ebp+var_10]  +
push esi  +
call edi  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
jmp loc_103804F  +
***
or esi 10h +
jmp loc_1038385  +
***
lea eax [ebp+var_C] +
push eax  +
push 0  +
mov ecx esi +
call sub_1012519  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:GetClientRect  +
mov eax [ebp+Rect.bottom] +
sub eax [esi+144h] +
mov ecx esi +
push eax  +
push [ebp+var_C]  +
mov [ebp+Rect.bottom] eax +
push dword ptr [edi+10h]  +
call sub_10385DF  +
jmp loc_10385D3  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+hDC]  +
lea ecx [esi+28h] +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call sub_1037F08  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push [ebp+Msg]  +
push dword ptr [esi+34h]  +
push dword ptr [esi+30h]  +
push 0  +
call sub_1038038  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_1039643  +
lea eax [ebp+rcSrc] +
push eax  +
push [ebp+lprc]  +
call ds:CopyRect  +
mov eax [ebp+rcSrc.right] +
sub eax [esi+68h] +
mov ecx [ebp+lprc] +
mov [ecx] eax +
mov eax [ebp+lprc] +
pop esi  +
pop ebp  +
retn 14h  +
push [ebp+lprc]  +
call ds:SetRectEmpty  +
jmp loc_103963B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+hDC]  +
lea ecx [esi+18h] +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call sub_1037F08  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push [ebp+Msg]  +
push dword ptr [esi+24h]  +
push dword ptr [esi+20h]  +
push 0  +
call sub_1038038  +
pop esi  +
pop ebp  +
retn 10h  +
***
push edi  +
push esi  +
mov ecx ebx +
call sub_103969D  +
jmp loc_1038478  +
***
mov edi edi +
mov ecx [ebp+1Ch] +
push 0Bh  +
pop eax  +
mov [ecx] ax +
mov eax [ebp+8] +
cmp [eax+8Ch] ebx +
jnz loc_105150F  +
cmp [eax+6E8h] bl +
jnz loc_105150F  +
mov [ecx+8] bx +
jmp loc_1014019  +
***
push dword ptr [ebp+14h]  +
add ecx 28h +
push dword ptr [ebp+10h]  +
push 14h  +
push esi  +
call sub_1037F08  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+60h] 0 +
jnz loc_1039780  +
xor ecx ecx +
inc ecx  +
push ecx  +
mov [eax+60h] ecx +
call ds:LockSetForegroundWindow  +
xor eax eax +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+0B4h] 0 +
jnz locret_10397AD  +
push esi  +
call sub_10345AB  +
mov esi eax +
test esi esi +
jz loc_10397AC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+28h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
retn   +
***
push ecx  +
mov ecx esi +
call sub_10397C0  +
jmp loc_10147A8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
or dword ptr [esi+20h] 7800h +
mov ebx ecx +
mov ecx [esi+20h] +
mov eax ecx +
and eax 0Fh +
push edi  +
cmp eax 2 +
jz loc_1062003  +
jbe loc_1040BC1  +
cmp eax 4 +
ja loc_1040BAA  +
push 1  +
push esi  +
mov ecx ebx +
call sub_1039824  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
or dword ptr [esi+20h] 8000h +
mov eax [esi+20h] +
push edi  +
xor edi edi +
inc edi  +
cmp [ebp+arg_4] edi +
jnz loc_1039897  +
or eax 20000h +
mov [esi+10h] edi +
mov [esi+20h] eax +
cmp dword ptr [ecx+34h] 0 +
jz loc_1039897  +
mov ecx [ecx+34h] +
and [ebp+arg_0] 0 +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_1034A40  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
mov eax [ebp+arg_0] +
jl loc_1061E17  +
push dword ptr [esi+0Ch]  +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+arg_0] +
and dword ptr [esi+20h] 0FFFFFEFFh +
test eax eax +
jz loc_103988F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_1039891  +
***
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+hWndTo]  +
call sub_100D797  +
mov esi eax +
call ds:ReleaseCapture  +
mov eax esi +
jmp loc_100D99F  +
***
xor esi esi +
cmp [ebp+lParam] esi +
jz loc_1011911  +
mov eax [ebp+lParam] +
mov eax [eax+18h] +
mov ebx [ebp+arg_0] +
test al 40h +
jz loc_1039974  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_18] ax +
xor eax eax +
lea edi [ebp+var_18+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_18] +
push eax  +
push esi  +
push esi  +
push 147h  +
push offset dword_10141A8  +
push offset dword_10128F0  +
push dword ptr [ebx+4]  +
call ds:SHLWAPI_484  +
cmp [ebp+var_10] si +
jnz loc_103993C  +
push dword ptr [ebx+18h]  +
call ds:GetParent  +
push eax  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_103993C  +
push 1  +
push dword ptr [ebx+1Ch]  +
call ds:EnableWindow  +
push 457h  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push dword ptr [ebx+1Ch]  +
call ds:SetWindowPos  +
mov eax [ebp+lParam] +
mov eax [eax+18h] +
and eax 3 +
cmp al 3 +
jz loc_1011911  +
push 1  +
mov ecx ebx +
call sub_10147B4  +
jmp loc_1011911  +
***
sub eax 18h +
jnz loc_1060826  +
mov ecx [ebp+arg_0] +
add ecx 0FFFFFFF4h +
call sub_1012304  +
jmp loc_1036A9D  +
***
test al al +
jns loc_103993C  +
push esi  +
push dword ptr [ebx+1Ch]  +
call ds:EnableWindow  +
push 497h  +
jmp loc_103992E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov ebx ecx +
xor esi esi +
push edi  +
mov dword ptr [ebp-4] 10h +
cmp [ebx+1Ch] esi +
jnz loc_105691D  +
push 17h  +
call ds:GetSystemMetrics  +
xor ecx ecx +
test eax eax +
setnz cl  +
inc ecx  +
push ecx  +
call ds:GetKeyState  +
test ax ax +
jge loc_10399CC  +
mov [ebp-4] esi +
cmp [ebx+80h] esi +
jz loc_1056927  +
push 0FFFFFFECh  +
push dword ptr [ebx+18h]  +
call ds:GetWindowLongW  +
mov edi ds:SetWindowPos +
test al 8 +
jz loc_1056933  +
mov [ebp-0Ch] esi +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebx+80h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_1039A22  +
push 13h  +
push esi  +
push esi  +
push esi  +
push esi  +
push 1  +
push dword ptr [ebp-8]  +
call edi  +
push 13h  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [ebp-8]  +
call edi  +
lea eax [ebp-24h] +
push eax  +
mov ecx ebx +
call sub_1039FA1  +
mov eax [ebp-24h] +
mov [ebp-14h] eax +
mov eax [ebp-20h] +
mov [ebp-10h] eax +
mov eax [ebx+80h] +
cmp eax esi +
jz loc_1039A7F  +
push dword ptr [ebp-4]  +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_1039A7F  +
cmp dword ptr [ebp-4] 10h +
jz loc_1056977  +
push 214h  +
push offset dword_1039A90  +
call sub_1034B2D  +
cmp [ebp-0Ch] esi +
jnz loc_10569AF  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
cmp dword ptr [ebp-4] 10h +
jnz loc_10569A4  +
jmp loc_1056990  +
***
lea edi [ebp+var_38] +
jmp loc_1038210  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+30h] 0 +
jz loc_105E996  +
push 1  +
push [ebp+arg_C]  +
lea ecx [esi-8] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1039ADD  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+38h] ebx +
jz loc_1039D18  +
push edi  +
cmp [esi+0B4h] ebx +
jnz loc_1039B62  +
cmp dword_10B24CC ebx +
jz loc_1039B62  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1039D05  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 2010000h +
mov edi 80010000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1039B62  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx edi +
cmp ecx eax +
jnz loc_1039B62  +
cmp edx dword_10B24C4 +
jnz loc_1039B62  +
push offset dword_1039D20  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103AE17  +
mov eax [esi+38h] +
push 3  +
lea ecx [ebp+var_14] +
push ecx  +
push ebx  +
push 4Eh  +
push eax  +
mov [ebp+var_14] eax +
mov [ebp+var_10] ebx +
mov [ebp+var_C] 0DDh +
call ds:SHLWAPI_178  +
cmp [esi+0B4h] ebx +
jnz loc_105E4AD  +
push 4Ch  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [esi+38h]  +
call ds:SetWindowPos  +
cmp [ebp+arg_C] ebx +
jz loc_1039BCA  +
push 1  +
push dword ptr [esi+6DCh]  +
mov ecx esi +
call sub_1037C30  +
push ebx  +
mov ecx esi +
call sub_1038DDB  +
mov ecx esi +
call sub_10345AB  +
mov edi eax +
cmp edi ebx +
jz loc_1039BE5  +
mov eax [edi] +
push 1  +
push edi  +
call dword ptr [eax+18h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
xor eax eax +
mov [ebp+Point.x] ebx +
lea edi [ebp+Point.y] +
stos   +
lea eax [ebp+Point] +
push eax  +
call ds:GetCursorPos  +
push [ebp+Point.y]  +
push [ebp+Point.x]  +
call ds:WindowFromPoint  +
movzx ecx word ptr [ebp+Point.x] +
mov [esi+0C0h] eax +
movzx eax word ptr [ebp+Point.y] +
shl eax 10h +
or eax ecx +
xor ecx ecx +
mov [esi+0C4h] eax +
lea eax [esi+94h] +
cmp [eax] ebx +
mov dword ptr [eax] 1 +
setz cl  +
mov [esi+98h] ebx +
mov [esi+9Ch] ebx +
mov [esi+90h] ebx +
mov edi ecx +
cmp [esi+0B4h] ebx +
jnz loc_1039C5A  +
mov ecx esi +
call sub_1039D59  +
mov ecx esi +
call sub_1039DF2  +
mov eax [esi+38h] +
push 3  +
lea ecx [ebp+var_20] +
push ecx  +
push ebx  +
push 4Eh  +
push eax  +
mov [ebp+var_20] eax +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] 0D0h +
call ds:SHLWAPI_178  +
push 2  +
push offset aMenupopup  +
call sub_103740C  +
cmp edi ebx +
jnz loc_105E4F9  +
mov ecx esi +
call sub_103978B  +
cmp [esi+0B4h] ebx +
jnz loc_1039CFC  +
cmp dword_10B24CC ebx +
jz loc_1039CFC  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1039D12  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 2010000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1039CFC  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1039CFC  +
cmp edx edi +
jnz loc_1039CFC  +
push offset dword_1039D30  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
cmp al bl +
jz loc_1039B12  +
jmp loc_1039B62  +
cmp al bl +
jz loc_1039CAE  +
jmp loc_1039CFC  +
mov eax 80004005h +
jmp loc_1039CFF  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+94h] 0 +
jz loc_105DDB2  +
cmp dword ptr [esi+0B4h] 0 +
jnz loc_105DD9C  +
call sub_101410A  +
mov ecx esi +
test eax eax +
jnz loc_105DDAA  +
push 103h  +
push eax  +
push dword ptr [esi+1E0h]  +
call sub_10381F8  +
pop esi  +
retn   +
***
mov eax [ebp+1Ch] +
mov edx [ebp+8] +
push 0Bh  +
pop ecx  +
mov [eax] cx +
xor ecx ecx +
cmp [edx+6E8h] bl +
setz cl  +
dec ecx  +
mov [eax+8] cx +
jmp loc_1014019  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+38h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 5 +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push 0  +
call sub_1014903  +
mov eax [esi+60h] +
add eax [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+90h] 0 +
jnz loc_1039E13  +
cmp dword ptr [esi+88h] 0 +
jnz loc_105D8FA  +
pop esi  +
leave   +
retn   +
***
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_18] ax +
xor eax eax +
lea edi [ebp+var_18+2] +
stos   +
stos   +
stos   +
stos   +
mov edi [ebp+arg_0] +
lea eax [ebp+var_18] +
push eax  +
xor esi esi +
push esi  +
push esi  +
push 147h  +
push offset dword_10141A8  +
push offset dword_10128F0  +
push dword ptr [edi+4]  +
call ds:SHLWAPI_484  +
cmp [ebp+var_10] si +
jnz loc_1011911  +
push 1  +
mov ecx edi +
call sub_10147B4  +
push 1  +
push dword ptr [edi+1Ch]  +
call ds:EnableWindow  +
mov ecx edi +
call sub_10148E9  +
mov edi [edi+1Ch] +
mov ecx 653h +
cmp eax edi +
jz loc_10612A9  +
push ecx  +
push esi  +
push esi  +
push esi  +
push esi  +
push eax  +
push edi  +
call ds:SetWindowPos  +
jmp loc_1011911  +
***
mov ecx ebx +
call sub_1039EA2  +
jmp loc_10122E9  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1039ED8  +
test byte ptr [esi+0C8h] 20h +
jnz loc_1060633  +
cmp dword ptr [esi+7Ch] 0 +
jnz loc_1039ED1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+108h]  +
test eax eax +
jz loc_103B75A  +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+158h] ebx +
jz loc_1039F28  +
test byte ptr [esi+0C8h] 10h +
jz loc_1039F28  +
push edi  +
push ebx  +
push ebx  +
push 1004h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov edi eax +
dec edi  +
js loc_1039F27  +
cmp [esi+158h] ebx +
jz loc_1039F27  +
push edi  +
mov ecx esi +
call sub_1012341  +
cmp eax ebx +
jz loc_1039F2B  +
mov ecx eax +
call sub_100F319  +
jmp loc_1039F07  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov [esi+158h] ebx +
jmp loc_1039F07  +
***
push 0  +
push 130h  +
push 111h  +
push dword ptr [ecx-4]  +
call ds:SendMessageW  +
retn   +
***
mov [ebp+arg_4] 2 +
jmp loc_10134E2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push dword ptr [ecx+3Ch]  +
call ds:SHLWAPI_479  +
pop ebp  +
jmp ds:SetFocus  +
***
test byte ptr dword_10B1104 1 +
push edi  +
mov edi ecx +
jz loc_1050378  +
mov eax dword_10B1100 +
test eax eax +
jnz loc_1056570  +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+rcSrc2] +
mov ebx ecx +
push eax  +
push dword ptr [ebx+18h]  +
call ds:GetWindowRect  +
push 0  +
lea eax [ebp+rcSrc2] +
push eax  +
call ds:MonitorFromRect  +
push 0  +
lea ecx [ebp+rc] +
push ecx  +
push eax  +
call sub_1002F19  +
mov esi dword_10B2138 +
mov [ebp+var_4] esi +
shl esi 4 +
add esi offset unk_10B14A4 +
lea edi [ebp+var_24] +
movs   +
movs   +
movs   +
movs   +
call sub_10344B4  +
test eax eax +
jnz loc_1056908  +
mov eax [ebp+var_24] +
mov [ebp+rcSrc2.left] eax +
mov eax [ebp+var_4] +
dec eax  +
pop edi  +
pop esi  +
pop ebx  +
jz loc_103A00C  +
dec eax  +
dec eax  +
jnz loc_103A018  +
mov eax [ebp+var_20] +
mov [ebp+rcSrc2.top] eax +
mov eax [ebp+var_18] +
mov [ebp+rcSrc2.bottom] eax +
lea eax [ebp+rcSrc2] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push [ebp+lprcDst]  +
call ds:IntersectRect  +
leave   +
retn 4  +
***
push 128h  +
push 3  +
push dword ptr [ebp+8]  +
call ds:GetAncestor  +
push eax  +
call ds:SendMessageW  +
jmp loc_103989B  +
***
push 0  +
push 132h  +
push 111h  +
push dword ptr [ebx+4]  +
call ds:PostMessageW  +
jmp loc_1037081  +
***
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_105D8ED  +
xor eax eax +
cmp dword_10B2138 2 +
setz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+wParam] +
stos   +
mov eax [ebp+arg_0] +
mov [ebp+lParam] eax +
mov eax [ebp+arg_4] +
mov ecx [eax+4] +
mov eax [eax+8] +
mov [ebp+var_C] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_14] 0CEh +
push 4Eh  +
push [ebp+hWnd]  +
mov [ebp+var_10] ecx +
call ds:SendMessageW  +
mov eax [ebp+arg_C] +
pop edi  +
test eax eax +
jz loc_103A149  +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+var_C] +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
imul eax eax +
add edx eax +
mov eax edx +
imul eax eax +
add eax ecx +
push esi  +
mov esi [ebp+arg_8] +
add edx 20h +
mov [eax+284h] esi +
imul edx edx +
mov esi [ebp+arg_C] +
mov [eax+288h] esi +
mov esi [ebp+arg_10] +
mov [eax+27Ch] esi +
mov eax [ebp+arg_14] +
mov [edx+ecx] eax +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+var_10] +
push eax  +
push 138Ah  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:GetThemeRect  +
test eax eax +
jl locret_103A1D5  +
mov ecx [ebp+var_8] +
sub ecx [ebp+var_10] +
mov eax [ebp+arg_8] +
mov [eax] ecx +
mov ecx [ebp+var_4] +
sub ecx [ebp+var_C] +
mov [eax+4] ecx +
leave   +
retn 0Ch  +
***
xor eax eax +
inc eax  +
mov [ebp+arg_4] eax +
jmp loc_1037BDF  +
***
lea eax [ebp+nNumerator] +
push eax  +
mov [ebp+nDenominator] 1E0h +
push 2049h  +
jmp loc_103A82F  +
lea eax [ebp+nNumerator] +
push eax  +
push 2047h  +
jmp loc_103B005  +
lea eax [ebp+nNumerator] +
push eax  +
push 2046h  +
jmp loc_103B005  +
lea esi dword_103A228[eax] +
lea edi [edx-0DCh] +
jmp loc_103A750  +
***
lea esi dword_103A308[eax] +
lea edi [edx-294h] +
jmp loc_103A750  +
***
mov ecx [ebp+var_10] +
lea eax [esi+25h] +
imul eax eax +
mov [eax+ebx] ecx +
jmp loc_103A97E  +
***
mov eax [esi+448h] +
mov [esi+420h] eax +
mov eax [esi+4D8h] +
add eax [ebp+var_4] +
mov [esi+424h] eax +
jmp loc_103AC78  +
***
call sub_103B248  +
jmp loc_100DF55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+84h] 0 +
jnz loc_105EA97  +
push edi  +
push 3Ch  +
push 0  +
push 0Ah  +
push offset aStart_jumplist  +
call sub_1037379  +
mov ecx esi +
mov edi eax +
call sub_1039DC0  +
mov ecx [esi+90h] +
add edi 4 +
imul eax edi +
add eax [esi+94h] +
mov edi [ebp+arg_0] +
add eax ecx +
mov [edi+10h] eax +
mov [edi+18h] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0E8h]  +
add eax [esi+5Ch] +
mov [edi+14h] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+0E4h] +
push edi  +
test eax eax +
jz loc_103A54E  +
mov eax [eax] +
test eax eax +
jg loc_105FD0D  +
mov edx [esi+1A8h] +
mov eax [esi+1ACh] +
mov ecx [esi+0ECh] +
add eax edx +
test ecx ecx +
jnz loc_103A4C1  +
test edx edx +
ja loc_105FD6C  +
mov edi [esi+64h] +
mov ebx ds:SendMessageW +
imul edi ecx +
mov ecx [esi+60h] +
imul ecx eax +
push 0  +
push 0  +
push 1098h  +
push dword ptr [esi+0B0h]  +
add edi ecx +
call ebx  +
mov [ebp+var_8] eax +
test eax eax +
jg loc_105FD72  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+5Ch]  +
test eax eax +
jz loc_103A502  +
add edi [esi+144h] +
mov eax [esi+94h] +
add eax [esi+90h] +
mov ebx [ebp+arg_0] +
or dword ptr [ebx+18h] 0FFFFFFFFh +
add edi eax +
mov [ebx+10h] edi +
mov ecx [esi+0BCh] +
mov eax [esi+1ACh] +
cmp ecx eax +
jnb loc_103A535  +
sub eax ecx +
imul eax [esi+60h] +
sub edi eax +
mov [ebx+18h] edi +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0E8h]  +
add eax [esi+5Ch] +
pop edi  +
mov [ebx+14h] eax +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
xor eax eax +
jmp loc_103A499  +
***
mov eax [ebx] +
push esi  +
mov ecx ebx +
call dword ptr [eax+114h]  +
jmp loc_10122E3  +
***
mov edi edi +
push esi  +
lea esi [ecx+1E0h] +
cmp dword ptr [esi] 0 +
jz loc_104FF11  +
mov eax [esi] +
pop esi  +
retn   +
***
cmp [ebx+58h] edx +
jz loc_1011394  +
and [ebp+arg_0] edx +
lea eax [ebp+arg_0] +
push eax  +
push offset aUpdatecount  +
push offset aSoftwareMic_23  +
push 80000002h  +
mov dword ptr [ebx+50h] 1 +
call sub_100F656  +
test eax eax +
jl loc_1011394  +
jmp loc_1062956  +
***
test ebx ebx +
jz loc_10024DE  +
mov esi [esi+94h] +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+6Ch]  +
jmp loc_10024DE  +
***
lea esi dword_103A688[eax] +
mov edi edx +
jmp loc_103A750  +
***
push 5  +
jmp loc_103A875  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_14] +
push eax  +
push 2042h  +
mov ebx ecx +
call sub_101494A  +
lea eax [ebp+var_18] +
push eax  +
push 2043h  +
mov ecx ebx +
call sub_101494A  +
lea eax [ebp+var_1C] +
push eax  +
push 2044h  +
mov ecx ebx +
call sub_101494A  +
push 50h  +
lea eax [ebp+var_7C] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
cmp dword ptr [ebx+40h] 0 +
jz loc_103A7ED  +
lea edi [ebp+var_7C] +
lea esi [ebx+0E0h] +
mov [ebp+var_10] 0Ah +
push 0  +
push dword ptr [esi]  +
push dword ptr [ebx+40h]  +
call ds:IsThemePartDefined  +
mov [esi+14h] eax +
test eax eax +
jz loc_103A7E2  +
mov eax [ebx+40h] +
push edi  +
push dword ptr [esi]  +
mov ecx ebx +
push eax  +
mov [esi+0Ch] eax +
call sub_103A19E  +
add edi 8 +
add esi 28h +
dec [ebp+var_10]  +
jnz loc_103A7BD  +
and [ebp+var_4] 0 +
mov eax [ebp+var_4] +
xor esi esi +
sub eax esi +
mov [ebp+nNumerator] esi +
jz loc_103A207  +
dec eax  +
jz loc_103A1F9  +
dec eax  +
jz loc_103AFFC  +
dec eax  +
mov ecx ebx +
jz loc_103A1E4  +
dec eax  +
lea eax [ebp+nNumerator] +
push eax  +
jnz loc_105DC3B  +
mov [ebp+nDenominator] 0E6h +
push 204Ah  +
call sub_101494A  +
mov [ebp+var_10] esi +
lea edx [ebx+50Ch] +
xor eax eax +
mov ecx [ebp+var_4] +
sub ecx 0 +
jz loc_103A2F0  +
dec ecx  +
jz loc_103B139  +
dec ecx  +
jz loc_103A215  +
dec ecx  +
jz loc_103A67B  +
dec ecx  +
push 5  +
jnz loc_105DC45  +
lea esi dword_1014A30[eax] +
lea edi [edx+0DCh] +
inc [ebp+var_10]  +
add eax 14h +
pop ecx  +
add edx 14h +
movs   +
cmp eax 0C8h +
jb loc_103A83F  +
mov eax [ebp+var_4] +
imul eax eax +
lea esi [eax+ebx] +
mov eax [ebp+var_14] +
mov [esi+280h] eax +
mov eax [ebp+var_18] +
mov [esi+2F8h] eax +
mov eax [ebp+var_1C] +
mov [esi+320h] eax +
lea edi [esi+27Ch] +
mov [ebp+var_10] 0Ah +
push [ebp+nDenominator]  +
push [ebp+nNumerator]  +
push dword ptr [edi]  +
call ds:MulDiv  +
mov [edi] eax +
add edi 14h +
dec [ebp+var_10]  +
jnz loc_103A8BC  +
mov eax [ebx+40h] +
xor edi edi +
cmp eax edi +
jz loc_103A94F  +
lea ecx [ebp+var_2C] +
push ecx  +
push 138Ah  +
push edi  +
push edi  +
push eax  +
call ds:GetThemeRect  +
test eax eax +
jl loc_103A94F  +
mov eax [ebp+var_24] +
sub eax [ebp+var_2C] +
xor ecx ecx +
mov [esi+268h] eax +
mov eax [ebp+var_20] +
sub eax [ebp+var_28] +
mov [esi+26Ch] eax +
mov eax [ebp+var_4] +
imul eax eax +
mov edx ecx +
imul edx edx +
cmp [edx+ebx+0F4h] edi +
jz loc_103A932  +
lea edx [eax+ecx] +
imul edx edx +
add edx ebx +
cmp byte ptr [edx+278h] 0 +
jnz loc_103A996  +
lea edx [eax+ecx+20h] +
imul edx edx +
mov [edx+ebx] edi +
lea edx [eax+ecx] +
imul edx edx +
mov [edx+ebx+27Ch] edi +
inc ecx  +
cmp ecx 0Ah +
jb loc_103A913  +
mov esi [ebp+var_4] +
imul esi esi +
lea eax [esi+edi+20h] +
imul eax eax +
mov eax [eax+ebx] +
mov [ebp+var_10] eax +
lea eax [esi+edi] +
imul eax eax +
lea eax [eax+ebx+27Ch] +
push eax  +
call sub_10149A6  +
cmp edi 5 +
jz loc_103A3D0  +
inc edi  +
cmp edi 0Ah +
jb loc_103A955  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 5 +
jb loc_103A7F1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov esi [ebp+ecx*8+var_7C] +
mov [edx+27Ch] esi +
mov esi [ebp+ecx*8+var_78] +
mov [edx+280h] esi +
cmp ecx 5 +
jnz loc_103A949  +
mov edx [ebx+6C4h] +
cmp edx edi +
jz loc_103A949  +
lea esi [eax+25h] +
imul esi esi +
mov [esi+ebx] edx +
jmp loc_103A949  +
***
push [ebp+lParam]  +
mov dword ptr [esi+54h] 2 +
push ebx  +
push edi  +
push [ebp+hWndTo]  +
call ds:DefWindowProcW  +
jmp loc_100D99F  +
***
mov eax [esi+5C4h] +
add eax [ebp+arg_0] +
mov [esi+4FCh] eax +
mov eax [esi+5B4h] +
add eax [ebp+var_4] +
and [ebp+arg_4] 0 +
mov [esi+500h] eax +
jmp loc_103AC78  +
mov [edx] eax +
mov [esi+3F8h] eax +
jmp loc_103ABA0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_103A75C  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov eax [ecx+10h] +
mov ebx [edx+4] +
sub eax [edx+0Ch] +
sub ebx [ecx+8] +
cmp ebx eax +
jle loc_105DF54  +
xor edi edi +
mov [ebp+var_8] edi +
cmp [esi+0B4h] edi +
jnz loc_103AABD  +
mov ecx esi +
call sub_10345AB  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_103AABD  +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_103AAB4  +
cmp [ebp+var_C] 80000000h +
jnz loc_103AAB4  +
cmp [esi+40h] edi +
jz loc_103AAB1  +
cmp [esi+0A4h] edi +
jnz loc_103AAB1  +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+arg_0] edi +
call ds:DwmIsCompositionEnabled  +
cmp [ebp+arg_0] edi +
jz loc_103AAB1  +
lea eax [ebp+arg_4] +
push eax  +
push edi  +
mov [ebp+arg_4] 46h +
call sub_1014903  +
mov eax [ebp+arg_4] +
sub eax [esi+35Ch] +
mov [ebp+var_8] eax +
sub ebx [ebp+var_8] +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+35Ch] +
push edi  +
push dword ptr [esi+140h]  +
mov [ebp+arg_4] eax +
lea eax [esi+37Ch] +
push eax  +
push dword ptr [esi+38h]  +
call sub_103A0F5  +
add eax [esi+3ACh] +
mov [ebp+var_24] edi +
mov [ebp+var_4] eax +
xor eax eax +
lea edi [ebp+var_20] +
stos   +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [esi+208h]  +
lea eax [esi+3E0h] +
push eax  +
push dword ptr [esi+38h]  +
call sub_103A0F5  +
push 0  +
push dword ptr [esi+258h]  +
mov [ebp+arg_0] eax +
lea eax [esi+5C0h] +
push eax  +
push dword ptr [esi+38h]  +
call sub_103A0F5  +
sub eax [ebp+arg_4] +
mov ecx [esi+3FCh] +
mov [ebp+dwStyle] eax +
mov edx ebx +
sub edx [esi+3D4h] +
mov eax ebx +
sub eax ecx +
sub eax [esi+35Ch] +
mov edi ebx +
sub edi [esi+5B4h] +
cmp [ebp+var_4] edx +
mov [ebp+var_C] edi +
jg loc_105DF5B  +
cmp [ebp+arg_0] eax +
jg loc_105DF63  +
cmp eax [ebp+var_C] +
jge loc_105DFCE  +
mov edi [ebp+dwStyle] +
mov edx [ebp+arg_0] +
cmp edx edi +
jle loc_105DFD6  +
cmp eax edx +
jl loc_105DFDD  +
cmp [ebp+arg_0] edi +
jle loc_103AB83  +
mov edi [ebp+arg_0] +
mov eax [ebp+var_24] +
lea edx [esi+31Ch] +
cmp [edx] eax +
jl loc_103AA05  +
cmp [esi+3F8h] eax +
jl loc_103AA05  +
mov eax [esi+380h] +
mov ebx [ebp+var_4] +
mov [ebp+arg_0] eax +
mov eax [esi+3D4h] +
mov edx eax +
sub edx ecx +
add edx ebx +
mov ebx [ebp+arg_4] +
add edi ebx +
cmp edi edx +
mov [ebp+var_4] edi +
jg loc_103ABC7  +
mov [ebp+var_4] edx +
sub ecx eax +
add ecx [ebp+var_4] +
mov edx [esi+498h] +
mov eax ecx +
mov ecx [esi+49Ch] +
mov [ebp+var_8] eax +
sub eax ecx +
mov [ebp+var_C] eax +
mov eax [esi+448h] +
mov [ebp+var_14] eax +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
mov [ebp+var_18] ecx +
mov [ebp+var_1C] edx +
stos   +
xor ebx ebx +
test ebx ebx +
jl loc_103AC78  +
cmp ebx 1 +
jle loc_103ADE5  +
cmp ebx 2 +
jz loc_103A3E1  +
cmp ebx 3 +
jz loc_103A9DE  +
cmp ebx 4 +
jnz loc_103AC78  +
and [ebp+var_24] 0 +
xor eax eax +
lea edi [ebp+var_20] +
stos   +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [esi+258h]  +
lea eax [esi+69Ch] +
push eax  +
push dword ptr [esi+38h]  +
call sub_103A0F5  +
xor ecx ecx +
mov [ebp+var_4] eax +
mov [ebp+arg_0] ecx +
mov [ebp+arg_4] ecx +
cmp [esi+0B4h] ecx +
jnz loc_105DFE4  +
mov ecx [esi+6A0h] +
cmp [ebp+var_24] ecx +
jg loc_105E025  +
mov [esi+5D8h] ecx +
mov [esi+5DCh] eax +
mov [ebp+var_4] eax +
push [ebp+arg_4]  +
mov eax ebx +
imul eax eax +
lea edi [eax+esi] +
mov eax [edi+268h] +
sub eax [ebp+arg_0] +
mov ecx esi +
push eax  +
push 0  +
push [ebp+arg_0]  +
push 0  +
push ebx  +
call sub_103A155  +
mov eax [ebp+var_8] +
sub eax [edi+2D0h] +
push eax  +
push [ebp+arg_0]  +
push 0  +
push 0  +
push 2  +
push ebx  +
call sub_103A155  +
mov eax [ebp+var_8] +
sub eax [edi+2D0h] +
push eax  +
push [ebp+arg_0]  +
push 0  +
push 0  +
push 3  +
push ebx  +
call sub_103A155  +
mov eax [edi+2D0h] +
mov ecx [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
sub ecx eax +
push ecx  +
push 0  +
push 4  +
push ebx  +
mov ecx esi +
call sub_103A155  +
push [ebp+var_C]  +
push [ebp+var_14]  +
push 0  +
push 0  +
push 1  +
push ebx  +
call sub_103A155  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
push [ebp+var_C]  +
push 0  +
push 5  +
push ebx  +
call sub_103A155  +
push dword ptr [edi+2F8h]  +
push [ebp+arg_0]  +
push [ebp+var_8]  +
push 0  +
push 6  +
push ebx  +
call sub_103A155  +
mov eax [ebp+var_4] +
sub eax [ebp+arg_4] +
push eax  +
mov eax [edi+268h] +
sub eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 7  +
push ebx  +
call sub_103A155  +
push dword ptr [edi+320h]  +
mov eax [edi+268h] +
sub eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push 8  +
push ebx  +
call sub_103A155  +
mov eax [ebp+Rect.top] +
sub eax [ebp+Rect.bottom] +
sub eax [ebp+arg_4] +
add eax [ebp+var_4] +
push eax  +
mov eax [edi+268h] +
sub eax [ebp+Rect.right] +
sub eax [ebp+arg_0] +
add eax [ebp+Rect.left] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 9  +
push ebx  +
call sub_103A155  +
inc ebx  +
cmp ebx 5 +
jb loc_103ABFC  +
xor ebx ebx +
cmp [esi+0A4h] ebx +
jnz loc_105E02D  +
mov ecx [esi+40h] +
cmp ecx ebx +
jz loc_103ADD4  +
xor eax eax +
lea edi [ebp+var_4C] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_4C] +
push eax  +
push ebx  +
push 9  +
push ebx  +
push ecx  +
call ds:GetThemeBackgroundExtent  +
mov eax [ebp+var_24] +
mov [esi+720h] eax +
pop edi  +
mov dword ptr [esi+0BCh] 1 +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax ebx +
imul eax eax +
add eax esi +
mov ecx [eax+31Ch] +
add ecx [ebp+arg_0] +
mov [eax+268h] ecx +
mov ecx [eax+320h] +
add ecx [ebp+var_4] +
mov [eax+26Ch] ecx +
jmp loc_103AC78  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi ecx +
xor ecx ecx +
xor eax eax +
test esi esi +
jz loc_103AE4E  +
mov ebx [esi] +
mov eax [esi+8] +
sub eax ebx +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [esi+0Ch] +
sar ecx 1 +
add ecx ebx +
mov ebx [esi+4] +
sub eax ebx +
cdq   +
sub eax edx +
sar eax 1 +
add eax ebx +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_103AE5A  +
mov ecx [edx] +
mov eax [edx+4] +
push 2  +
push eax  +
push ecx  +
call ds:MonitorFromPoint  +
lea ecx [ebp+mi] +
push ecx  +
push eax  +
mov [ebp+mi.cbSize] 28h +
call ds:GetMonitorInfoW  +
mov ebx ds:CopyRect +
test esi esi +
jz loc_105E370  +
push esi  +
lea eax [ebp+rcSrc] +
push eax  +
call ebx  +
lea eax [ebp+mi.rcMonitor] +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call sub_103B018  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [edi+74h] +
push eax  +
call ebx  +
mov esi [ebp+arg_8] +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+mi] +
push eax  +
mov ecx edi +
mov [edi+84h] esi +
call sub_103AA17  +
xor eax eax +
and esi 0E0000000h +
mov [ebp+arg_4] 0FFFFFD98h +
sub [ebp+arg_4] edi +
mov [ebp+arg_8] esi +
mov [ebp+var_4] eax +
mov [ebp+arg_0] eax +
mov [ebp+var_8] eax +
lea esi [edi+268h] +
mov eax [ebp+arg_0] +
mov ecx [ebp+rcSrc.bottom] +
mov edx [esi] +
mov ebx [esi+4] +
cmp [ebp+var_4] eax +
jz loc_103AEFE  +
mov eax [ebp+var_8] +
cmp edx [eax+edi+268h] +
jg loc_103AFC4  +
cmp [ebp+arg_8] 40000000h +
jz loc_103AFEA  +
cmp [ebp+arg_8] 60000000h +
jz loc_103AFEA  +
mov edx [ebp+rcSrc.top] +
mov eax ebx +
neg eax  +
add edx eax +
cmp edx [ebp+mi.rcMonitor.top] +
jl loc_105E3B9  +
mov ecx edx +
mov eax [ebp+rcSrc.left] +
cmp dword ptr [edi+0B4h] 0 +
jnz loc_105E39C  +
mov edx [esi] +
add edx eax +
cmp edx [ebp+mi.rcMonitor.right] +
jg loc_105E3AF  +
cmp eax [ebp+mi.rcMonitor.left] +
jl loc_105E457  +
and dword ptr [esi+0D8h] 0 +
inc [ebp+arg_0]  +
mov ebx 0DCh +
mov [esi+8] eax +
mov [esi+0Ch] ecx +
add esi ebx +
cmp [ebp+arg_0] 5 +
jb loc_103AEDE  +
mov eax [ebp+var_4] +
imul eax eax +
add eax edi +
mov ecx [eax+268h] +
mov [edi+6B4h] ecx +
mov ecx [eax+26Ch] +
mov [edi+6B8h] ecx +
mov ecx [eax+270h] +
mov [edi+6BCh] ecx +
mov eax [eax+274h] +
mov ecx edi +
mov [edi+6C0h] eax +
call sub_103A0CA  +
test eax eax +
jnz loc_105E45F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
cmp dword ptr [edi+0B4h] 0 +
jnz loc_103AFD7  +
cmp [ebp+arg_0] 4 +
jz loc_103AEFE  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
add eax esi +
mov [ebp+var_8] eax +
jmp loc_103AEFE  +
cmp dword ptr [edi+0B4h] 0 +
jnz loc_105E411  +
jmp loc_105E415  +
***
lea eax [ebp+nNumerator] +
push eax  +
push 2048h  +
mov ecx ebx +
mov [ebp+nDenominator] 195h +
jmp loc_103A82F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+8]  +
mov edx [ebp+arg_0] +
push dword ptr [ecx]  +
push dword ptr [edx]  +
call sub_103B06C  +
mov [edx] eax +
push dword ptr [ecx+8]  +
push dword ptr [ecx]  +
push dword ptr [edx+8]  +
call sub_103B06C  +
mov [edx+8] eax +
push dword ptr [ecx+0Ch]  +
push dword ptr [ecx+4]  +
push dword ptr [edx+4]  +
call sub_103B06C  +
mov [edx+4] eax +
push dword ptr [ecx+0Ch]  +
push dword ptr [ecx+4]  +
push dword ptr [edx+0Ch]  +
call sub_103B06C  +
mov [edx+0Ch] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jl loc_105C699  +
cmp eax [ebp+arg_8] +
jg loc_105C6A1  +
pop ebp  +
retn 0Ch  +
***
call sub_1039F7D  +
mov eax dword_10B10F4 +
test eax eax +
jz loc_103B0B5  +
push eax  +
call ds:IsWindow  +
test eax eax +
jz loc_103B0B5  +
call ds:GetForegroundWindow  +
cmp eax dword_10B10F4 +
jz loc_1058145  +
lea ecx [ebx+0AF8h] +
call sub_10372F5  +
test eax eax +
jz loc_1037081  +
push dword ptr [ebx+0B10h]  +
mov ecx ebx +
call sub_1039F5F  +
mov ecx ebx +
call sub_103B0E6  +
jmp loc_1037081  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+0C10h] +
xor ebx ebx +
push edi  +
mov edi ds:SendMessageW +
cmp eax ebx +
jz loc_103B109  +
push ebx  +
push ebx  +
push 438h  +
push eax  +
call edi  +
push ebx  +
push ebx  +
push 1Fh  +
push dword ptr [esi+4]  +
call edi  +
push dword ptr [esi+4]  +
call ds:SetActiveWindow  +
push ebx  +
push 1  +
push 43Fh  +
push dword ptr [esi+0C10h]  +
call edi  +
pop edi  +
lea ecx [esi+0AF8h] +
pop esi  +
pop ebx  +
jmp loc_103998E  +
***
lea esi dword_103B150[eax] +
lea edi [edx-1B8h] +
jmp loc_103A750  +
***
push edx  +
mov ecx esi +
call sub_103B22A  +
jmp loc_100DF55  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_103B248  +
test eax eax +
jnz loc_103B23F  +
mov ecx esi +
call sub_1039D59  +
pop esi  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi+44h]  +
xor edi edi +
call ds:IsWindow  +
test eax eax +
jnz loc_105DBAB  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
lea esi [ecx+1E8h] +
cmp dword ptr [esi] 0 +
jnz loc_103B280  +
call sub_103B289  +
mov [esi] eax +
mov eax [esi] +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0E4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi+0B0h]  +
xor ebx ebx +
mov [ebp+var_8C] ebx +
call ds:GetWindowDC  +
mov edi ds:SendMessageW +
push ebx  +
push ebx  +
push 31h  +
push dword ptr [esi+0B0h]  +
mov [ebp+hDC] eax +
call edi  +
push eax  +
push [ebp+hDC]  +
call ds:SelectObject  +
push ebx  +
push ebx  +
push 1004h  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_98] eax +
call edi  +
mov ebx eax +
dec ebx  +
jns loc_104FFC4  +
push [ebp+var_98]  +
push [ebp+hDC]  +
call ds:SelectObject  +
push [ebp+hDC]  +
push dword ptr [esi+0B0h]  +
call ds:ReleaseDC  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_8C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 410h  +
push esi  +
call sub_103B3D7  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
call ds:__imp_CoTaskMemFree  +
pop ebp  +
retn 10h  +
***
push [ebp+arg_8]  +
mov ecx esi +
call sub_103B446  +
test eax eax +
jz loc_103B39D  +
xor edi edi +
jmp loc_103B39D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+38h] +
push edi  +
mov edi 80004005h +
test eax eax +
jz loc_103B39D  +
push [ebp+psz2]  +
push eax  +
call ds:StrCmpW  +
test eax eax +
jz loc_103B362  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
and [ebp+Rect.left] eax +
lea eax [ebp+Rect] +
push eax  +
push ebx  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call edi  +
test eax eax +
jz loc_103B42A  +
push 1  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:InvalidateRect  +
jmp loc_103B42A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SendMessageW +
xor ebx ebx +
push ebx  +
push ebx  +
mov esi ecx +
push 1004h  +
push dword ptr [esi+0B0h]  +
call edi  +
mov [ebp+var_8] eax +
test eax eax +
jle loc_103B438  +
push ebx  +
mov ecx esi +
call sub_1012341  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_103B432  +
push [ebp+arg_C]  +
mov edx [esi] +
push [ebp+arg_8]  +
mov ecx esi +
push eax  +
call dword ptr [edx+0F0h]  +
test eax eax +
jz loc_103B3A5  +
mov ecx [ebp+var_4] +
call sub_100F319  +
inc ebx  +
cmp ebx [ebp+var_8] +
jl loc_103B402  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp [ecx+28h] eax +
jnz loc_103B459  +
xor eax eax +
pop ebp  +
retn 4  +
mov [ecx+28h] eax +
xor eax eax +
inc eax  +
jmp loc_103B455  +
***
test eax eax +
jnz loc_103B4CB  +
push 1  +
push offset aStart_trackdoc  +
call sub_10373D2  +
test eax eax +
jz loc_103B4CB  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:__imp_CoCreateInstance +
lea eax [ebp-8] +
push eax  +
push offset stru_103B494  +
push 3  +
xor ebx ebx +
push ebx  +
push offset stru_103B464  +
mov [ebp-0Ch] ebx +
call esi  +
cmp eax ebx +
jl loc_103B58D  +
push edi  +
lea eax [ebp-4] +
push eax  +
push offset stru_103B484  +
push 3  +
push ebx  +
push offset stru_103B474  +
call esi  +
mov esi [ebp+8] +
mov edi eax +
cmp edi ebx +
jl loc_103B55D  +
mov eax [ebp-8] +
push dword ptr [esi+28h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_103B554  +
mov eax [ebp-4] +
mov ecx [eax] +
push ebx  +
push ebx  +
push dword ptr [esi+28h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_103B554  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
call sub_103B59A  +
mov [ebp-0Ch] eax +
mov eax [ebp-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
pop edi  +
jl loc_103B58D  +
mov eax [esi+28h] +
push eax  +
push offset loc_103B350  +
push dword ptr [ebp-0Ch]  +
push eax  +
push 410h  +
push dword ptr [esi+2Ch]  +
call ds:SendMessageCallbackW  +
test eax eax +
jz loc_103B58D  +
mov [esi+28h] ebx +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push 3Ch  +
xor ebx ebx +
push ebx  +
push 0Ah  +
push offset aStart_jumplist  +
mov [ebp+var_4] ebx +
call sub_1037379  +
mov esi eax +
call sub_103B4A9  +
test eax eax +
jz loc_103B626  +
mov [ebp+var_8] 1 +
cmp esi ebx +
jbe loc_103B626  +
mov esi [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
test eax eax +
jl loc_103B5E8  +
push edi  +
xor edi edi +
cmp [ebp+var_C] ebx +
ja loc_103B603  +
pop edi  +
cmp [ebp+var_4] ebx +
pop esi  +
pop ebx  +
jnz loc_103B5FC  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
mov eax [esi] +
lea ecx [ebp+var_1C] +
push ecx  +
push ebx  +
push edi  +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_103B62B  +
cmp [ebp+var_1C] 2 +
jnz loc_106410A  +
mov [ebp+var_4] 1 +
jmp loc_103B5E7  +
mov [ebp+var_8] ebx +
jmp loc_103B5CE  +
inc edi  +
cmp edi [ebp+var_C] +
jnb loc_103B5E7  +
jmp loc_103B603  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_103B65E  +
test byte ptr [ebp+8] 1 +
jz loc_103B652  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+28h]  +
mov dword ptr [esi] offset off_1003938 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
call ds:__imp_CoTaskMemFree  +
mov ecx esi +
pop esi  +
jmp sub_1008DEA  +
***
push 0Ch  +
call edi  +
mov [esi+60h] eax +
mov eax [esi+38h] +
test eax eax +
jz loc_103B8BC  +
push ebx  +
mov ebx [ebp+8] +
test ebx ebx +
jz loc_103B6FC  +
lea ecx [ebp+8] +
push ecx  +
push eax  +
call ds:__imp_SHStrDupW  +
test eax eax +
jl loc_103B6FC  +
push 30h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_103B702  +
push dword ptr [ebp+8]  +
mov ecx eax +
push dword ptr [ebp+0Ch]  +
call sub_103B71D  +
mov edi eax +
test edi edi +
jz loc_103B6F3  +
mov eax [ebx] +
push 10000000h  +
push esi  +
push offset dword_103B708  +
push edi  +
push ebx  +
call dword ptr [eax+0Ch]  +
and dword ptr [ebp+8] 0 +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
push dword ptr [ebp+8]  +
call ds:__imp_CoTaskMemFree  +
pop ebx  +
jmp loc_103B8BC  +
***
xor edi edi +
jmp loc_103B6D3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_4] +
mov [esi+28h] eax +
mov eax [ebp+arg_0] +
mov [esi+2Ch] eax +
mov dword ptr [esi] offset off_1003938 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push eax  +
mov ecx esi +
call sub_100F8BC  +
jmp loc_1039ED1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1036948 +
xor eax eax +
cmps   +
mov esi [ebp+8] +
jnz loc_103D002  +
push dword ptr [ebp+14h]  +
lea eax [esi-14h] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_103D002  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+8] +
mov eax [eax+6BCh] +
jmp loc_1014010  +
***
cmp [ebp+arg_8] 8 +
jnz loc_1038257  +
cmp dword ptr [esi+6D4h] 3 +
jnz loc_1038257  +
jmp loc_105DCCD  +
***
mov ecx [ebp+18h] +
mov ecx [ecx+8] +
sub ecx ebx +
jz loc_1040F1B  +
dec ecx  +
jnz loc_104201D  +
mov eax [ebp+8] +
cmp dword ptr [eax+6BCh] 2 +
jnz loc_1014019  +
jmp loc_1013C22  +
***
mov edi eax +
jmp loc_1014521  +
***
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_10] +
add ecx 0FFFFFFF4h +
cmp word ptr [eax+8] 0 +
jnz loc_1042074  +
call sub_103D3CF  +
jmp loc_103BE72  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_10369B0 +
xor eax eax +
cmps   +
mov esi [ebp+8] +
jnz loc_1042D89  +
push dword ptr [ebp+14h]  +
lea eax [esi-14h] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1042D89  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ds:SHLWAPI_632 +
push 0Ch  +
mov esi ecx +
call edi  +
cmp [esi+60h] eax +
jnz loc_103B68F  +
push dword ptr [esi+28h]  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_103B8D5  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jnz loc_1064122  +
mov eax [ebp+arg_10] +
pop ebp  +
retn 14h  +
***
sub ecx 205h +
jz loc_105E546  +
sub ecx 5 +
jz loc_104C3F9  +
sub ecx 97h +
jz loc_103C948  +
dec ecx  +
dec ecx  +
jnz loc_103BAB3  +
cmp dword ptr [esi+6D4h] 2 +
push edi  +
mov ecx esi +
push ebx  +
jz loc_104C3EF  +
call sub_1041ECB  +
jmp loc_103BAB3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_10369A0 +
xor eax eax +
cmps   +
mov esi [ebp+8] +
jz loc_1040DC8  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi+8]  +
call ds:IUnknown_QueryService  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_103B98F  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
pop ebp  +
retn 8  +
mov eax 80004005h +
jmp loc_103B98B  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1002A39  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1002A39  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1003475  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1003475  +
***
cmp dword ptr [esi+98h] 0 +
jnz loc_1001FDD  +
push dword ptr [ebx]  +
push dword ptr [esi+38h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jz loc_103BA11  +
call ds:GetCapture  +
test eax eax +
jnz loc_1001FDD  +
cmp dword ptr [ebx+4] 200h +
jnz loc_1001FDD  +
xor eax eax +
inc eax  +
jmp loc_1001FDF  +
push dword ptr [ebx]  +
mov edi ds:GetParent +
call edi  +
mov [ebp+hWnd] eax +
test eax eax +
jz loc_103BAF0  +
push eax  +
call edi  +
mov [ebp+Points.y] eax +
cmp eax [esi+118h] +
jz loc_1040F58  +
cmp eax [esi+140h] +
jz loc_1040F58  +
cmp eax [esi+168h] +
jz loc_1040F58  +
cmp eax [esi+38h] +
jz loc_103BAF0  +
push eax  +
call edi  +
cmp eax [esi+38h] +
jz loc_103BB1B  +
test eax eax +
jz loc_103BB1B  +
cmp eax [esi+118h] +
jz loc_103BB1B  +
push eax  +
jmp loc_103BA5A  +
mov ecx [ebx+4] +
mov eax 204h +
cmp ecx eax +
ja loc_103B8EC  +
jz loc_103C197  +
sub ecx 200h +
jz loc_1038693  +
dec ecx  +
jz loc_103C197  +
dec ecx  +
jz loc_1040EAC  +
dec ecx  +
jz loc_105E50C  +
test edi edi +
jz loc_1001FDD  +
mov eax [ebx+4] +
cmp eax 7Bh +
jz loc_104C415  +
cmp eax 100h +
jz loc_104B725  +
cmp eax 102h +
jz sub_104B6E5  +
add eax 0FFFFFEFCh +
cmp eax 2 +
ja loc_1001FDD  +
jmp loc_105E5AD  +
mov edi [ebp+hWnd] +
jmp loc_103BA7C  +
***
and dword ptr [eax+60h] 0 +
push 2  +
call ds:LockSetForegroundWindow  +
jmp loc_103636F  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+1D4h]  +
jmp loc_1036968  +
***
cmp eax [esi+38h] +
jnz loc_1038C72  +
and [ebp+var_18] 0 +
mov eax 4000h +
mov ecx eax +
mov word ptr [ebp+var_20] ax +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push 0  +
push 132h  +
push offset dword_1013948  +
mov word ptr [ebp+var_30] cx +
mov ecx [ebp+Points.y] +
push offset dword_1036948  +
lea eax [esi+0Ch] +
push eax  +
mov [ebp+var_28] ecx +
call ds:SHLWAPI_484  +
mov edi [ebp+var_18] +
mov [ebp+hWnd] edi +
jmp loc_103BA7C  +
***
sub dword ptr [esp+4] 20h +
jmp loc_10139F5  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1013A10  +
***
lea ecx [ebx-20h] +
call sub_103D0AC  +
mov [ebp+var_210] eax +
jmp loc_103BD30  +
call sub_101410A  +
test eax eax +
jnz loc_103BD29  +
mov eax [ebx+14h] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
cmp [ebp+var_20C] 0 +
jz loc_103BD29  +
mov ebx [ebx+14h] +
mov eax [ebx] +
push 3  +
push offset byte_1002CD0  +
push ebx  +
call dword ptr [eax+34h]  +
mov ecx [ebp+var_214] +
xor eax eax +
mov [ecx+8] ax +
jmp loc_103BD29  +
mov ecx [ebx+14h] +
push 2  +
mov dword ptr [ebx+30h] 1 +
push dword ptr [eax+8]  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+34h]  +
and dword ptr [ebx+30h] 0 +
jmp loc_103BD30  +
call sub_101410A  +
test eax eax +
jz loc_103BC1F  +
xor eax eax +
mov [ebp+var_20C] ax +
jmp loc_103BC34  +
mov ebx [ebx+14h] +
mov eax [ebx] +
push 104h  +
lea ecx [ebp+var_20C] +
push ecx  +
push ebx  +
call dword ptr [eax+30h]  +
push [ebp+var_214]  +
lea eax [ebp+var_20C] +
push eax  +
call sub_103D1E0  +
jmp loc_103BB91  +
push 2  +
add ebx 4 +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+28h]  +
jmp loc_103BD29  +
push 3  +
jmp loc_103BC4D  +
push 1  +
jmp loc_103BC4D  +
push 4  +
jmp loc_103BC4D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_14] +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_214] ecx +
push 4  +
pop ecx  +
mov esi offset dword_103B768 +
xor edx edx +
cmps   +
mov [ebp+var_210] 80070057h +
jnz loc_103BD30  +
mov ecx [ebp+arg_8] +
add ecx 0FFFFFED4h +
cmp ecx 16h +
ja loc_103BD30  +
movzx ecx ds:byte_103BC93[ecx] +
jmp ds:off_103BC67[ecx*4]  +
push dword ptr [eax+8]  +
push dword ptr [ebx+20h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jnz loc_103BD29  +
mov eax [ebx+20h] +
mov ecx [ebp+var_214] +
mov [ecx+8] eax +
and [ebp+var_210] 0 +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
jz loc_104D25F  +
cmp eax 0FFFFFF46h +
jz loc_104D242  +
cmp eax 0FFFFFF50h +
jz loc_104D237  +
cmp eax 0FFFFFF51h +
jz loc_104D22C  +
cmp eax 0FFFFFF62h +
jz loc_103ECBF  +
cmp eax 0FFFFFF65h +
jz loc_104D221  +
cmp eax 0FFFFFF87h +
jnz loc_10122E9  +
call sub_103C3B3  +
xor eax eax +
jmp loc_10122E3  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+0E4h]  +
jmp loc_1036968  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset loc_10362A8 +
xor eax eax +
cmps   +
mov esi [ebp+8] +
jnz loc_10611D1  +
push dword ptr [ebp+14h]  +
lea eax [esi-8] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_10611D1  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1036B5C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 4  +
pop ecx  +
mov esi offset dword_10141A8 +
xor eax eax +
cmps   +
mov ebx 80070057h +
jnz loc_103BE74  +
mov eax [ebp+arg_8] +
sub eax 139h +
jz loc_103C379  +
dec eax  +
jz loc_103C368  +
sub eax 9 +
jz loc_103B83D  +
sub eax 13h +
jnz loc_1037D2A  +
lea eax [ebp+Rect] +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+0Ch]  +
call ds:GetClientRect  +
mov eax [ebp+arg_14] +
mov ecx [ebp+Rect.bottom] +
mov [eax+8] ecx +
xor ebx ebx +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 18h  +
***
lea eax [ebx-8] +
jmp loc_103BEA0  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+10Ch]  +
jmp loc_1036968  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_20C] eax +
mov eax [ebp+arg_14] +
mov [ebp+pszPath] eax +
push 4  +
mov eax offset dword_103BE90 +
pop ecx  +
mov esi eax +
xor edx edx +
cmps   +
mov [ebp+var_208] 80070057h +
jnz loc_103C07A  +
mov ecx [ebp+arg_8] +
sub ecx 12Ch +
jz loc_103CE9F  +
dec ecx  +
jz loc_1061B31  +
sub ecx 3 +
jnz loc_1061A5A  +
xor esi esi +
cmp [ebx+3Ch] esi +
jnz loc_104BEA1  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_208] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
lea eax [esi-18h] +
add esi 0FFFFFFF4h +
neg eax  +
sbb eax eax +
and eax esi +
push eax  +
call ds:SHLWAPI_484  +
jmp loc_1014019  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push 0  +
push offset loc_103C0D4  +
push dword ptr [ebp+wLanguage]  +
push [ebp+arg_4]  +
push [ebp+hModule]  +
call sub_1014D95  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_103C0ED  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 2 +
jb loc_103C11C  +
add eax 0FFFFFFFEh +
push eax  +
push 0  +
call ds:SysAllocStringByteLen  +
test eax eax +
jz loc_103C115  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
mov eax 8007000Eh +
jmp loc_103C111  +
mov eax 80070057h +
jmp loc_103C111  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_4] 0 +
jz loc_105F6AB  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+8] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov ebx eax +
test ebx ebx +
jnz loc_103C192  +
mov eax [ebp+var_4] +
test eax eax +
jle loc_103C17E  +
dec eax  +
lea edi [esi-10h] +
mov [ebp+var_4] eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_103C179  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_103C192  +
mov eax [ebp+var_4] +
add eax eax +
mov ecx [ebp+arg_4] +
mov [esi+0B4h] eax +
pop edi  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+var_4] +
jmp loc_103C17E  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_103C1AA  +
jmp loc_1001FDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+lParam] 0 +
push edi  +
mov edx ecx +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov [ebp+var_C] ecx +
movsx ecx word ptr [eax+0Ch] +
mov [ebp+var_1C] eax +
movsx eax word ptr [eax+0Eh] +
mov [ebp+var_10] eax +
push 117h  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov [ebp+var_14] ecx +
mov ecx edx +
call sub_10381F8  +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
leave   +
retn 8  +
***
test eax 80000h +
jnz loc_103C20C  +
push 5  +
push ebx  +
call ds:GetWindow  +
mov [edi+24h] eax +
push dword ptr [edi+24h]  +
call ds:SetFocus  +
cmp ebx [esi+1B8h] +
jz loc_105DCEE  +
cmp dword ptr [esi+6D4h] 2 +
jz loc_103826B  +
and dword ptr [esi+48h] 0 +
jmp loc_103826B  +
***
mov ecx [edi+8] +
mov eax 0D4h +
cmp ecx eax +
jbe loc_103C2A8  +
sub ecx 0D8h +
jz loc_104DE24  +
dec ecx  +
dec ecx  +
jz loc_103E458  +
sub ecx 7 +
jnz loc_100DF55  +
jmp loc_105E960  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
test esi esi +
jz loc_103C2E9  +
mov edi [ebp+hWnd] +
push edi  +
mov [esi] edi +
call ds:GetDlgCtrlID  +
mov ecx [ebp+arg_4] +
push esi  +
push eax  +
push 4Eh  +
push edi  +
mov [esi+4] eax +
mov [esi+8] ecx +
call ds:GetParent  +
push eax  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
jz loc_105E952  +
sub ecx 0CAh +
jz loc_104DE63  +
dec ecx  +
dec ecx  +
jnz loc_103C2CB  +
push edi  +
mov ecx esi +
call sub_103E223  +
jmp loc_100DF67  +
sub ecx 3 +
jz loc_1042A5D  +
sub ecx 4 +
jnz loc_100DF55  +
mov ecx esi +
call sub_1043273  +
jmp loc_100DF55  +
lea esi [ebp+var_C] +
jmp loc_103C27B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax 4000h +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
mov edi ds:SHLWAPI_484 +
mov esi ecx +
mov eax [esi+48h] +
push 0  +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push 0  +
push 13Ah  +
push offset dword_103BE80  +
mov ebx offset loc_10362A8 +
push ebx  +
push dword ptr [esi+28h]  +
call edi  +
push 3  +
pop eax  +
mov word ptr [ebp+var_10] ax +
mov eax [ebp+arg_0] +
push 0  +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push 0  +
push 139h  +
push offset dword_103BE80  +
push ebx  +
push dword ptr [esi+28h]  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax [ebp+arg_10] +
mov eax [eax+8] +
mov ecx [ebp+arg_0] +
mov [ecx+4Ch] eax +
jmp loc_103BE72  +
mov eax [ebp+arg_10] +
mov esi [ebp+arg_0] +
mov eax [eax+8] +
cmp [esi+48h] eax +
jz loc_103BE72  +
push 1  +
push dword ptr [esi+10h]  +
mov [esi+48h] eax +
call ds:KillTimer  +
push 0  +
push dword ptr [esi+58h]  +
push 1  +
push dword ptr [esi+10h]  +
call ds:SetTimer  +
jmp loc_103BE72  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+38h] 0 +
jz loc_105F49A  +
pop esi  +
leave   +
retn   +
***
mov eax [ebx] +
push 0FFFFFFFFh  +
call dword ptr [eax+0E4h]  +
jmp loc_1037DB5  +
***
cmp [ebp+wParam] 1 +
jnz loc_100DFE5  +
push 1  +
push [ebp+hWnd]  +
call ds:KillTimer  +
mov ecx [ebp+ppv] +
call sub_103C401  +
jmp loc_100DFE5  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4Ch] +
mov eax [edi] +
cmp eax [esi+50h] +
jnz loc_103E140  +
mov eax [edi] +
cmp eax [esi+54h] +
jnz loc_103E140  +
pop edi  +
pop esi  +
retn   +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1003475  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_103C463  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+34h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
mov eax 80004005h +
jmp loc_103C45D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_103C49B  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+38h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
mov eax 80004005h +
jmp loc_103C495  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
lea edi [ecx+0Ch] +
cmp dword ptr [edi] 0 +
jz loc_105318C  +
xor eax eax +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_103C4E3  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
pop ebp  +
retn 8  +
mov eax 80004005h +
jmp loc_103C4DF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_103C50A  +
mov eax [eax+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
pop ebp  +
retn 4  +
mov eax 80004005h +
jmp loc_103C506  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp word ptr [ebp+0Ch] 3 +
push edi  +
mov edi 80070057h +
jnz loc_103C561  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_103C561  +
push esi  +
mov esi [ebp+8] +
lea eax [ebp+8] +
push eax  +
lea ecx [esi-4] +
call sub_1014039  +
mov edi eax +
test edi edi +
jl loc_103C560  +
cmp dword ptr [ebp+8] 0 +
lea eax [esi+0C8h] +
jz loc_1042600  +
push eax  +
call ds:SysAllocString  +
mov ecx [ebp+1Ch] +
mov [ecx] eax +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 18h  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1014EC5  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1036C93  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_103C5B7  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+28h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
mov eax 80004005h +
jmp loc_103C5B1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_103C5E7  +
push [ebp+arg_C]  +
mov eax [eax+8] +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 10h  +
mov eax 80004005h +
jmp loc_103C5E3  +
***
push 4  +
pop ecx  +
push dword ptr [ebp+14h]  +
mov edi offset dword_1036958 +
push dword ptr [ebp+10h]  +
mov esi eax +
xor edx edx +
cmps   +
jz loc_1036A19  +
mov ecx [ebp+8] +
add ecx 0FFFFFFF8h +
mov edx [ecx] +
push eax  +
call dword ptr [edx+110h]  +
jmp loc_1036A24  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
stos   +
and al 0B1h +
and ss:48B4649h eax +
and eax 9E62C8C8h +
pop ecx  +
nop   +
nop   +
nop   +
nop   +
nop   +
sub [esp-4+arg_4] 10h +
jmp loc_100F1A5  +
***
sub dword ptr [esp+4] 10h +
jmp loc_10362BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_424] eax +
cmp eax esi +
jz loc_1060102  +
mov eax [ebx] +
lea ecx [ebp+var_428] +
push ecx  +
push ebx  +
mov [ebp+var_41C] esi +
call dword ptr [eax+20h]  +
mov [ebp+var_418] eax +
cmp eax esi +
jnz loc_103C74B  +
mov [ebp+var_418] 80004005h +
cmp [ebp+arg_C] esi +
jz loc_103C770  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103C9E6  +
test eax eax +
jz sub_103E96F  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CA26  +
mov ebx [ebx+8] +
mov eax [ebx] +
lea ecx [ebp+var_41C] +
push ecx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call dword ptr [eax+28h]  +
mov [ebp+var_418] eax +
mov eax [ebp+var_41C] +
mov ecx [ebp+var_424] +
mov [ecx] eax +
mov eax [ebp+var_418] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
mov ebx [ebx+2Ch] +
cmp ebx 6 +
jnz loc_103CB09  +
lea eax [ebp+var_41C] +
push eax  +
push esi  +
push 141h  +
push dword_10B23D0  +
call sub_103C0AE  +
jmp loc_103C745  +
***
mov dword ptr [eax] 1 +
mov eax [ebx] +
mov [ebp+EventTrack.hwndTrack] eax +
mov [esi+64h] eax +
lea eax [ebp+EventTrack] +
push eax  +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] edi +
call ds:TrackMouseEvent  +
jmp loc_10386D4  +
mov eax [ebx] +
mov [esi+0C4h] edi +
xor edi edi +
mov [esi+0C0h] eax +
cmp [ebp+hWnd] edi +
jz loc_1041391  +
mov [ebp+lParam] edi +
push 9  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_3C] +
stos   +
mov eax [ebx] +
mov ecx esi +
mov [ebp+var_34] ebx +
mov [ebp+var_24] eax +
call sub_103872C  +
movsx ecx word ptr [ebx+0Ch] +
neg eax  +
sbb eax eax +
and eax 700h +
add eax 100h +
or eax 7 +
push eax  +
mov [ebp+var_2C] ecx +
movsx ecx word ptr [ebx+0Eh] +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov [ebp+var_28] ecx +
mov ecx esi +
call sub_10381F8  +
mov edi [ebp+var_20] +
mov [ebp+arg_0] eax +
and edi 2000h +
xor eax eax +
cmp [esi+0A0h] eax +
jz loc_103C876  +
mov ecx [ebx] +
push eax  +
mov [ebp+EventTrack.hwndTrack] ecx +
lea ecx [ebp+EventTrack.dwHoverTime] +
push ecx  +
push eax  +
push 6Ah  +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 1 +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_105DD93  +
cmp byte ptr [esi+700h] 0 +
jnz loc_1041399  +
lea eax [ebp+EventTrack] +
push eax  +
call ds:TrackMouseEvent  +
test edi edi +
jnz loc_103C883  +
cmp [ebp+arg_0] edi +
jz loc_10413B2  +
xor eax eax +
jmp loc_1038720  +
***
push 16h  +
pop ecx  +
mov [esi+48h] ebx +
mov word ptr [ebp+var_10] cx +
mov ecx [edi+20h] +
mov [ebp+var_8] ecx +
cmp ebx eax +
jz loc_105DD54  +
push 0  +
lea eax [ebp+var_10] +
push eax  +
push 0  +
push 130h  +
push offset dword_1013948  +
push offset dword_1036980  +
add esi 0Ch +
push esi  +
call ds:SHLWAPI_484  +
jmp loc_10382A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+1Ch] +
push esi  +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+8]  +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
movs   +
call sub_103C437  +
test eax eax +
jl loc_103C904  +
cmp word ptr [ebx] 3 +
jnz loc_103C904  +
cmp dword ptr [ebx+8] 2Bh +
jnz loc_103C904  +
mov dword ptr [ebx+8] 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+1Ch] +
push esi  +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+8]  +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
movs   +
call sub_103C46F  +
test eax eax +
jl loc_103C941  +
cmp word ptr [ebx] 3 +
jnz loc_103C941  +
or dword ptr [ebx+8] 40000000h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_103C95B  +
jmp loc_1001FDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx ecx +
xor eax eax +
sub esp 28h +
cmp [edx+700h] al +
jnz loc_103C9AA  +
cmp [ebp+hWnd] eax +
jz loc_103C9AA  +
push edi  +
push 9  +
pop ecx  +
mov [ebp+lParam] eax +
lea edi [ebp+var_24] +
stos   +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov [ebp+var_C] ecx +
movsx ecx word ptr [eax+0Ch] +
mov [ebp+var_1C] eax +
movsx eax word ptr [eax+0Eh] +
mov [ebp+var_10] eax +
push 8  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov [ebp+var_14] ecx +
mov ecx edx +
call sub_10381F8  +
pop edi  +
xor eax eax +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_103C9DA  +
push [ebp+arg_C]  +
mov eax [eax+8] +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+60h]  +
pop ebp  +
retn 10h  +
mov eax 80004005h +
jmp loc_103C9D6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_103CA06  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_103CADB  +
mov eax [esi+0C4h] +
cdq   +
sub eax edx +
sar eax 1 +
inc eax  +
xor ecx ecx +
cmp [ebp+arg_8] eax +
setl cl  +
mov eax ecx +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_1042D4F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_14] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_105FE53  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_103CACB  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103C9E6  +
test eax eax +
jz loc_103E832  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CA26  +
mov eax [ebx+8] +
mov ebx [ebp+arg_14] +
mov ecx [eax] +
push ebx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+34h]  +
test eax eax +
jnz loc_103CACB  +
cmp word ptr [ebx] 3 +
jnz loc_103CACB  +
mov ecx [ebx+8] +
sub ecx 21h +
jz loc_103CAD2  +
dec ecx  +
jnz loc_103CACB  +
mov dword ptr [ebx+8] 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
mov dword ptr [ebx+8] 0Bh +
jmp loc_103CACB  +
***
inc eax  +
jmp loc_103CA1C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1013AE9  +
***
cmp ebx 7 +
jz loc_103C77C  +
lea eax [ebp+var_41C] +
push eax  +
push esi  +
push 157h  +
jmp loc_103C789  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_14] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_1060034  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+var_10] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_103CC10  +
mov [ebp+arg_0] 80070057h +
cmp [ebp+arg_C] eax +
jz loc_103CC1A  +
lea eax [ebp+arg_4] +
lea ecx [ebx-10h] +
push eax  +
call sub_103CC47  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_103CC10  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
lea esi [ebx-10h] +
mov ecx esi +
call sub_103C9E6  +
test eax eax +
jz sub_103E88D  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx esi +
call sub_103CA26  +
push [ebp+arg_14]  +
mov eax [ebx+8] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+38h]  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_103CC08  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103C9E6  +
test eax eax +
jz loc_103CC08  +
mov esi [ebp+arg_14] +
cmp word ptr [esi] 3 +
jnz loc_103CC08  +
mov ecx [ebp+var_4] +
test byte ptr [ecx+10h] 1 +
jnz loc_103E863  +
mov eax [ebx+2Ch] +
cmp eax 6 +
jz loc_103E850  +
cmp eax 7 +
jz loc_103E850  +
mov ecx [ebp+var_4] +
call sub_100F319  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
push [ebp+arg_14]  +
mov ebx [ebx+8] +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call dword ptr [eax+38h]  +
mov [ebp+arg_0] eax +
jmp loc_103CC10  +
***
inc eax  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+8] 0 +
push edi  +
mov ebx ecx +
jz loc_103CC77  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_103CC80  +
push eax  +
mov ecx ebx +
call sub_1012341  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_103CC70  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov ebx ecx +
mov eax [ebx] +
push edi  +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_103CC9E  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_103CCCF  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_0] +
movs   +
movs   +
movs   +
mov ecx ebx +
movs   +
call sub_103C9E6  +
test eax eax +
jnz loc_103CCCF  +
mov eax [ebx+0C4h] +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [ebp+arg_8] +
sar ecx 1 +
sub eax ecx +
pop edi  +
pop esi  +
dec eax  +
pop ebx  +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_8] +
jmp loc_103CCC7  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+1ACh]  +
jmp loc_1036968  +
***
mov esi [ebp+8] +
mov ecx [esi+30h] +
cmp ecx [esi+1C8h] +
jz loc_1014019  +
cmp ecx [esi+100h] +
jz loc_1014019  +
cmp ecx ebx +
jnz loc_1013BE3  +
push 16h  +
pop ecx  +
push ebx  +
mov [ebp-14h] cx +
lea ecx [ebp-14h] +
push ecx  +
push ebx  +
push 130h  +
push eax  +
lea eax [esi-18h] +
neg eax  +
lea ecx [esi-0Ch] +
sbb eax eax +
push offset dword_1036980  +
and eax ecx +
push eax  +
mov dword ptr [ebp-0Ch] 20000h +
call ds:SHLWAPI_484  +
cmp dword ptr [esi+6BCh] 2 +
jnz loc_1014019  +
mov eax [esi+1C8h] +
mov [esi+30h] eax +
jmp loc_1014019  +
mov esi [ebp+8] +
cmp dword ptr [esi+6BCh] 2 +
mov edi [ebp+18h] +
jnz loc_103CD74  +
cmp [edi+8] ebx +
jge loc_1013E92  +
push dword ptr [ebp+1Ch]  +
push edi  +
push dword ptr [ebp+14h]  +
push 13Dh  +
push eax  +
push offset dword_10369B0  +
jmp loc_103C091  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 4  +
pop ecx  +
mov esi offset dword_10138E4 +
xor edx edx +
cmps   +
mov eax 80070057h +
jnz loc_103CE06  +
mov ecx [ebp+arg_8] +
sub ecx 12Dh +
jz loc_106150A  +
sub ecx 10h +
jnz loc_10614B2  +
push 0  +
push [ebp+arg_10]  +
call ds:VariantToInt32WithDefault  +
test eax eax +
jge loc_10614D7  +
mov eax [ebp+arg_0] +
and dword ptr [eax+44Ch] 0 +
and [ebp+var_30] 0 +
lea ecx [ebp+lParam] +
push ecx  +
push 0FFFFFFFFh  +
push 102Bh  +
push dword ptr [eax+10h]  +
mov [ebp+var_2C] 2 +
call ds:SendMessageW  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
sub dword ptr [esp+4] 20h +
jmp loc_101389D  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1036D1C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
or [ebp+var_24] 0FFFFFFFFh +
push edi  +
push 3  +
pop eax  +
xor edi edi +
push edi  +
mov word ptr [ebp+var_2C] ax +
lea eax [ebp+var_2C] +
push eax  +
push edi  +
push 164h  +
push offset dword_103BE90  +
mov ebx ecx +
push offset dword_10128F0  +
push dword ptr [ebx+18h]  +
call ds:SHLWAPI_484  +
mov ecx [ebp+arg_0] +
lea eax [ebx+80h] +
mov esi [eax] +
mov [eax] ecx +
mov eax [ebx+4Ch] +
cmp eax edi +
jz loc_103CE8E  +
cmp [ebp+arg_4] edi +
jnz loc_104BE89  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi ds:VariantToStringAlloc +
lea eax [ebp+pszPath] +
push eax  +
push [ebp+var_20C]  +
xor esi esi +
mov [ebx+84h] esi +
mov [ebp+pszPath] esi +
call edi  +
cmp eax esi +
mov [ebp+var_208] eax +
jl loc_103C07A  +
mov eax [ebp+pszPath] +
cmp eax esi +
jz loc_103C07A  +
cmp [eax] si +
jz loc_103D521  +
cmp [ebx+30h] esi +
jz loc_104BECE  +
cmp [ebp+var_208] esi +
jl loc_103CFF1  +
cmp [ebx+30h] esi +
jz loc_103CFF1  +
push 0FFh  +
lea eax [ebp+var_204] +
push eax  +
push esi  +
push 1B74h  +
mov [ebx+7Ch] esi +
mov [ebx+80h] esi +
mov [ebx+90h] esi +
push dword_10B23D0  +
call sub_104B670  +
mov eax [ebx+30h] +
mov ecx [eax] +
lea edx [ebp+var_204] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+pv] +
push eax  +
push [ebp+var_20C]  +
call edi  +
cmp eax esi +
mov [ebp+var_208] eax +
jl loc_103CFE7  +
push [ebp+pv]  +
call ds:PathStripToRootW  +
push [ebp+pv]  +
call ds:PathIsRootW  +
test eax eax +
jnz loc_104AF0F  +
mov eax [ebp+pv] +
movzx eax word ptr [eax] +
push eax  +
call iswalpha  +
pop ecx  +
test eax eax +
jnz loc_1061BCB  +
push [ebp+pszPath]  +
lea ecx [ebx-10h] +
call sub_104B7B2  +
push 3  +
pop eax  +
push esi  +
mov word ptr [ebp+var_224] ax +
lea eax [ebp+var_224] +
push eax  +
push esi  +
push 14Bh  +
push offset dword_103BE90  +
push offset dword_10128F0  +
push dword ptr [ebx+8]  +
mov [ebp+var_21C] esi +
call ds:SHLWAPI_484  +
push [ebp+pv]  +
mov [ebp+var_208] eax +
call ds:__imp_CoTaskMemFree  +
mov dword ptr [ebx+8Ch] 1 +
push [ebp+pszPath]  +
call ds:__imp_CoTaskMemFree  +
jmp loc_103C07A  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi+8]  +
call ds:IUnknown_QueryService  +
jmp loc_103B7B2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test byte ptr [ebp+14h] 9 +
jz loc_103D09D  +
mov ecx [ebp+8] +
cmp [ecx+2Ch] eax +
jnz loc_103D09D  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_103D092  +
cmp word ptr [eax] 0 +
jz loc_103D092  +
call ds:GetCurrentThreadId  +
push eax  +
push offset dword_10B2464  +
call ds:InterlockedExchange  +
push offset unk_10B2480  +
call ds:GetSystemTimeAsFileTime  +
cmp dword_10B24CC 0 +
jz loc_103D092  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_103D0A1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_1061D77  +
pop esi  +
mov ecx [ebp+8] +
add ecx 0FFFFFFDCh +
call sub_103D0AC  +
pop ebp  +
retn 10h  +
***
test al al +
jz loc_103D06F  +
jmp loc_103D092  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_418] 0 +
push esi  +
mov esi ecx +
call sub_101410A  +
test eax eax +
jnz loc_103D1C8  +
mov eax [esi+34h] +
mov ecx [eax] +
push ebx  +
mov ebx 104h +
push ebx  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_418] eax +
test eax eax +
jl loc_103D1C7  +
push edi  +
lea edi [esi+54h] +
mov eax [edi] +
test eax eax +
jz loc_103D11D  +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call ds:StrCmpCW  +
test eax eax +
jz loc_103D1C6  +
push dword ptr [edi]  +
call ds:__imp_CoTaskMemFree  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
call ds:__imp_SHStrDupW  +
push ebx  +
lea eax [ebp+pszPath] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call ds:SHLWAPI_460  +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveBlanksW  +
lea eax [ebp+pvarg] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call sub_103D1E0  +
mov [ebp+var_418] eax +
test eax eax +
jl loc_103D1C6  +
mov edi ds:SHLWAPI_484 +
push 0  +
lea eax [ebp+pvarg] +
push eax  +
push 0  +
push 12Ch  +
mov ebx offset dword_103B768 +
push ebx  +
push offset dword_1036980  +
push dword ptr [esi+1Ch]  +
call edi  +
mov [ebp+var_418] eax +
lea eax [ebp+pvarg] +
push eax  +
push 0  +
push 0  +
push 12Ch  +
push ebx  +
push offset dword_10128F0  +
push dword ptr [esi+1Ch]  +
call edi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_418] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
push 8  +
pop eax  +
push esi  +
mov [edi] ax +
call ds:SysAllocString  +
neg esi  +
sbb esi esi +
and esi 0FFFFFFB7h +
mov [edi+8] eax +
add esi 80070057h +
neg eax  +
sbb eax eax +
not eax  +
and eax esi +
mov esi eax +
jl loc_105EA2A  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
lea esi [ecx+0C8h] +
mov eax [esi] +
test eax eax +
jnz loc_105DBBF  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1012304  +
push [ebp+arg_C]  +
mov eax [esi] +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+98h]  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+34h] 0 +
jz loc_103D286  +
push dword ptr [esi+54h]  +
call ds:__imp_CoTaskMemFree  +
and dword ptr [esi+54h] 0 +
mov eax 80004005h +
pop esi  +
retn   +
***
cmp dword ptr [ecx+38h] 0 +
jz loc_103D2A1  +
mov eax [ecx+38h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
xor eax eax +
inc eax  +
retn   +
***
cmp dword ptr [eax+6Ch] 2 +
jz loc_1037EFD  +
mov ecx [eax] +
and dword ptr [eax+6Ch] 0 +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_1037EFD  +
***
mov edi edi +
call ds:ShowWindow  +
cmp [esi+0B4h] ebx +
jnz sub_105E318  +
push 1  +
push dword ptr [esi+6DCh]  +
mov ecx esi +
call sub_1037C30  +
mov ecx esi +
call sub_1036E39  +
cmp [esi+94h] ebx +
jz loc_103467D  +
push 2  +
push ebx  +
push ebx  +
push 8001h  +
push dword ptr [esi+38h]  +
mov [esi+94h] ebx +
call ds:SHLWAPI_178  +
mov eax [esi+6Ch] +
cmp eax ebx +
jnz loc_105E330  +
push 3  +
xor eax eax +
lea edi [ebp-10h] +
stos   +
lea ecx [ebp-14h] +
push ecx  +
stos   +
mov eax [esi+38h] +
push ebx  +
push 4Eh  +
push eax  +
mov [ebp-14h] eax +
mov dword ptr [ebp-0Ch] 0D2h +
call ds:SHLWAPI_178  +
mov ecx esi +
call sub_103D227  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_103795D  +
mov edi [ebp-8] +
cmp edi ebx +
jz loc_103D37C  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+18h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+20h]  +
push ebx  +
push 0FFFFFFFCh  +
push dword ptr [esi+38h]  +
mov [esi+44h] ebx +
push 7  +
call ds:NotifyWinEvent  +
lea eax [esi+0ACh] +
cmp [eax] ebx +
jz loc_103467D  +
jmp loc_105E340  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10142B6  +
cmp dword ptr [esi+15Ch] 0 +
jnz loc_1060627  +
mov dword ptr [esi+0C0h] 1 +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+4Ch] +
push edi  +
or eax 0FFFFFFFFh +
xor edi edi +
cmp ecx eax +
jnz loc_103B7F4  +
cmp [esi+50h] eax +
jnz loc_103B7F4  +
push edi  +
push dword ptr [esi+1Ch]  +
call ds:EnableWindow  +
push 497h  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+1Ch]  +
call ds:SetWindowPos  +
pop edi  +
pop esi  +
retn   +
***
call sub_101410A  +
test eax eax +
jnz loc_10144B2  +
cmp [esi+34h] eax +
jz loc_10144B2  +
mov esi [esi+34h] +
mov eax [esi] +
push 3  +
push offset byte_1002CD0  +
push esi  +
call dword ptr [eax+34h]  +
jmp loc_10144B2  +
***
mov [esi+38h] edi +
jmp loc_10024DE  +
***
cmp edx ebx +
jnz loc_100DF55  +
mov ecx esi +
call sub_103D45A  +
jmp loc_100DF55  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+44h] 0 +
jz loc_103D467  +
pop esi  +
retn   +
push edi  +
call ds:GetFocus  +
mov edi eax +
test edi edi +
jz loc_103D485  +
push edi  +
push dword ptr [esi+38h]  +
call ds:IsChild  +
test eax eax +
jz loc_103D485  +
mov [esi+44h] edi +
pop edi  +
jmp loc_103D465  +
***
add ecx 0FFFFFFF8h +
call sub_103D4B0  +
push 0  +
push 1  +
push 590h  +
push hWnd  +
call ds:PostMessageW  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+0AF8h] +
call sub_103D4F3  +
mov eax [esi+0C10h] +
test eax eax +
jz loc_103D4DA  +
push 0  +
push 0  +
push 437h  +
push eax  +
call ds:SendMessageW  +
push 0  +
push 0  +
push 582h  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
pop esi  +
retn   +
***
cmp dword_10B10FC 0 +
jnz locret_103D520  +
push 0  +
push 0  +
xor eax eax +
push 0F3h  +
push dword ptr [ecx+18h]  +
inc eax  +
mov dword_10B10FC eax +
mov [ecx+58h] eax +
call ds:SendMessageW  +
and dword_10B10FC 0 +
retn   +
***
lea ecx [ebx-10h] +
mov [ebp+var_20C] ecx +
call sub_103D5AC  +
lea edi [ebx+9Ch] +
push dword ptr [edi]  +
mov dword ptr [ebx+7Ch] 1 +
call ds:__imp_CoTaskMemFree  +
mov [edi] esi +
cmp [ebx+8Ch] esi +
jnz loc_104AEFF  +
push 3  +
pop eax  +
push esi  +
mov word ptr [ebp+var_224] ax +
lea eax [ebp+var_224] +
push eax  +
push esi  +
push 14Bh  +
push offset dword_103BE90  +
push offset dword_10128F0  +
push dword ptr [ebx+8]  +
mov [ebp+var_21C] 1 +
call ds:SHLWAPI_484  +
cmp eax esi +
mov [ebp+var_208] eax +
jl loc_103CFF1  +
mov ecx [ebp+var_20C] +
push esi  +
push esi  +
call sub_103CE2F  +
jmp loc_103CFF1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+0B8h] edi +
jnz loc_103D5C9  +
cmp [esi+4Ch] edi +
jnz loc_104AF20  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov ecx esi +
call sub_103D5DE  +
jmp loc_103B836  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+0CCh] +
push eax  +
push dword ptr [esi+34h]  +
call ds:SetWindowTextW  +
mov ecx esi +
call sub_1014233  +
push 1  +
push dword ptr [esi+30h]  +
call ds:KillTimer  +
and dword ptr [esi+0A8h] 0 +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+6Ch] 0 +
jnz loc_105D95A  +
push esi  +
push offset aStartmenuballo  +
push [ebp+hWnd]  +
call ds:GetPropW  +
mov esi eax +
test esi esi +
jnz loc_105D962  +
mov esi [ebp+hWnd] +
push esi  +
call ds:GetParent  +
test eax eax +
jnz loc_103D68C  +
push 4  +
push esi  +
call ds:GetWindow  +
test eax eax +
jnz loc_103D68C  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov esi eax +
cmp eax [ebx+38h] +
jnz loc_103D643  +
jmp loc_105D980  +
***
mov eax [esi] +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_103D6AB  +
mov dword ptr [esi+0C0h] 1 +
push 0  +
push 0  +
push 1004h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
dec eax  +
mov [edi+10h] eax +
jmp loc_104D2F5  +
call sub_103E1B8  +
cmp eax 0FFFFFFFFh +
jnz loc_103D727  +
mov eax [esi+0D8h] +
test eax eax +
jz loc_103D727  +
push dword ptr [eax+8]  +
mov ecx esi +
call sub_108F92B  +
mov [edi+10h] eax +
xor ebx ebx +
inc ebx  +
mov [esi+0C0h] ebx +
push dword ptr [edi+10h]  +
push 0FFFFFFFCh  +
push dword ptr [esi+0B0h]  +
push 8005h  +
call ds:NotifyWinEvent  +
mov eax [edi+0Ch] +
cmp dword ptr [eax+8] 25h +
jnz loc_103D720  +
mov ecx esi +
call sub_108F504  +
mov ecx esi +
call sub_1012304  +
mov eax ebx +
jmp loc_103DAE6  +
mov eax [edi+14h] +
mov ebx ds:SendMessageW +
mov [ebp+var_3C] eax +
mov eax [edi+18h] +
mov [ebp+var_38] eax +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 1053h  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_34] 26h +
mov [ebp+lParam] 40h +
call ebx  +
mov [ebp+arg_0] eax +
cmp eax 0FFFFFFFFh +
jnz loc_103D789  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+12Ch]  +
test eax eax +
jz loc_103D789  +
push 0  +
push 0  +
push 10AFh  +
push dword ptr [esi+0B0h]  +
call ebx  +
test eax eax +
jz loc_103D789  +
and [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
push eax  +
mov ecx esi +
mov [edi+10h] eax +
call sub_1012341  +
mov ebx eax +
test ebx ebx +
jz loc_103D7CB  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_103D7C4  +
test dword ptr [ebx+10h] 3C0h +
jnz loc_103D7C4  +
mov eax [edi+0Ch] +
xor ecx ecx +
cmp dword ptr [eax+8] 25h +
setz cl  +
inc ecx  +
mov [esi+0C0h] ecx +
mov ecx ebx +
call sub_100F319  +
mov eax [esi+0C4h] +
mov ecx [edi+10h] +
cdq   +
sub eax edx +
sar eax 1 +
lea eax [ecx+eax+1] +
push eax  +
push 0FFFFFFFCh  +
push dword ptr [esi+0B0h]  +
push 8005h  +
call ds:NotifyWinEvent  +
xor eax eax +
cmp [edi+10h] eax +
setnl al  +
jmp loc_103DAE6  +
test eax eax +
jnz loc_103D806  +
xor ebx ebx +
jmp loc_103D80E  +
call sub_103E1B8  +
mov ebx eax +
inc ebx  +
mov eax [edi+0Ch] +
movzx eax word ptr [eax+8] +
push eax  +
call ds:CharUpperW  +
push 0  +
push 0  +
movzx eax ax +
push 1004h  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_8] eax +
call ds:SendMessageW  +
cmp ebx eax +
mov [ebp+var_4] eax +
jge loc_104D305  +
push ebx  +
mov ecx esi +
call sub_1012341  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_103D86B  +
mov edx [esi] +
push ebx  +
push eax  +
mov ecx esi +
call dword ptr [edx+0CCh]  +
mov ecx [ebp+arg_0] +
cmp ax word ptr [ebp+var_8] +
jz loc_103D877  +
call sub_100F319  +
inc ebx  +
cmp ebx [ebp+var_4] +
jge loc_104D305  +
jmp loc_103D842  +
mov [edi+10h] ebx +
jmp loc_104D2F0  +
mov eax [edi+0Ch] +
cmp dword ptr [eax+8] 28h +
jnz loc_103D8B0  +
call sub_103E1B8  +
cmp eax 0FFFFFFFFh +
jnz loc_103D8B0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_103D8A7  +
mov dword ptr [esi+0C0h] 1 +
and dword ptr [edi+10h] 0 +
jmp loc_104D2F5  +
push edi  +
mov ecx esi +
call sub_109058D  +
jmp loc_103DAE6  +
test byte ptr [eax+10h] 10h +
jnz loc_103D8D0  +
cmp dword ptr [esi+0C0h] 2 +
jnz loc_103D8D0  +
mov ecx esi +
jmp loc_103D8EA  +
cmp dword ptr [esi+0C0h] 3 +
mov ecx esi +
jnz loc_103D8E3  +
push 150h  +
push eax  +
jmp loc_103D8FF  +
push 1  +
jmp loc_104D2E7  +
push 1  +
push ebx  +
call sub_108FA82  +
jmp loc_104D2ED  +
push 150h  +
push [ebp+arg_0]  +
call sub_1090378  +
jmp loc_104D2ED  +
push 12h  +
pop ebx  +
jmp loc_103EAA0  +
mov ecx esi +
call sub_103E1B8  +
mov ebx eax +
push ebx  +
mov ecx esi +
call sub_1012341  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_103D9BE  +
push 38h  +
lea eax [ebp+wParam] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_84] +
push eax  +
push 0  +
push 104Bh  +
push dword ptr [esi+0B0h]  +
mov [ebp+wParam] ebx +
mov ebx ds:SendMessageW +
mov [ebp+var_84] 2 +
call ebx  +
test eax eax +
jz loc_103D9B4  +
push [ebp+var_68]  +
mov eax [esi] +
push [ebp+arg_0]  +
mov ecx esi +
call dword ptr [eax+40h]  +
lea edi [esi+1C4h] +
xor eax eax +
cmp edi eax +
jz loc_103D987  +
mov [edi] eax +
mov eax edi +
push eax  +
push [ebp+wParam]  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ebx  +
test eax eax +
jz loc_103D9AD  +
push 0  +
push dword ptr [esi+148h]  +
push edi  +
call ds:InflateRect  +
jmp loc_103D9B4  +
push edi  +
call ds:SetRectEmpty  +
mov ecx [ebp+arg_0] +
call sub_100F319  +
jmp loc_103D9E3  +
push dword ptr [edi+18h]  +
lea ebx [esi+1C4h] +
push dword ptr [edi+14h]  +
push ebx  +
call ds:PtInRect  +
test eax eax +
jnz loc_103D9E3  +
push ebx  +
call ds:SetRectEmpty  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+44h]  +
push 0  +
push 0  +
push 422h  +
push dword ptr [esi+0B4h]  +
call ds:SendMessageW  +
jmp loc_104D2F5  +
push edi  +
call sub_1090820  +
jmp loc_104D2F5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+20h] +
and eax 0Fh +
mov esi ecx +
cmp eax 0Bh +
ja loc_104D305  +
jmp ds:off_103DA08[eax*4]  +
mov eax [edi+14h] +
mov [ebp+pt.x] eax +
mov eax [edi+18h] +
mov [ebp+pt.y] eax +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:GetClientRect  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_103DAC3  +
mov eax [esi+148h] +
push 0  +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov eax [ebp+rc.right] +
cmp [ebp+pt.x] eax +
jg loc_104D2FD  +
mov eax [ebp+rc.left] +
cmp [ebp+pt.x] eax +
jl loc_104D2FD  +
lea eax [ebp+pt] +
push eax  +
push 0  +
push 1012h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [edi+10h] eax +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
push esi  +
mov ecx ebx +
call sub_103DAFF  +
jmp loc_10122E3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_103DA3D  +
xor ebx ebx +
mov [ebp+arg_0] eax +
cmp eax ebx +
jz loc_103EAB8  +
mov ecx [esi+20h] +
test ecx 900h +
jz loc_103DBAC  +
push 2  +
pop eax  +
test ecx 100h +
jz loc_103DB3E  +
push 3  +
pop eax  +
mov ebx ds:SendMessageW +
mov [ebp+var_78] eax +
mov [ebp+var_7C] eax +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+10h]  +
push 102Bh  +
push dword ptr [edi+0B0h]  +
call ebx  +
mov eax [esi+20h] +
and eax 0Fh +
cmp al 7 +
jnz loc_1060547  +
push 38h  +
lea eax [ebp+var_48] +
push 0  +
push eax  +
call memset  +
mov eax [esi+10h] +
add esp 0Ch +
mov [ebp+var_48] eax +
lea eax [ebp+var_4C] +
push eax  +
push 0  +
push 104Bh  +
push dword ptr [edi+0B0h]  +
mov [ebp+var_4C] 2 +
call ebx  +
push [ebp+var_30]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0E4h]  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
pop ebp  +
retn 14h  +
***
mov eax [ecx+20h] +
test al 10h +
jnz loc_105F0A3  +
mov esi [esi+0C0h] +
cmp esi 2 +
jz loc_105F0A3  +
test al 20h +
jnz loc_105F085  +
push 3  +
pop edx  +
cmp esi edx +
jz loc_105F085  +
mov eax [ebp+arg_8] +
mov [eax] edx +
mov eax [ecx+20h] +
mov ecx [ebp+arg_10] +
and eax 8 +
or eax 4 +
shr eax 2 +
mov [ecx] eax +
mov eax [ebp+arg_C] +
mov [eax] edx +
jmp loc_10384CC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
push [ebp+wParam]  +
mov ebx ecx +
xor esi esi +
call sub_1012341  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_103DCAC  +
test dword ptr [eax+10h] 3C0h +
jnz loc_103DCA4  +
push 40000065h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_103DCA4  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+lParam] esi +
push 100Eh  +
push dword ptr [ebx+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_103DCA4  +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
lea esi [ebp+lParam] +
movs   +
movs   +
movs   +
lea ecx [ebp+rc] +
push ecx  +
mov ecx ebx +
movs   +
call dword ptr [eax+78h]  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_100F319  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov ebx ecx +
push 100Eh  +
push dword ptr [ebx+0B0h]  +
xor esi esi +
mov [ebp+lParam] esi +
call ds:SendMessageW  +
test eax eax +
jz loc_103DD11  +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
lea esi [ebp+lParam] +
movs   +
movs   +
movs   +
lea ecx [ebp+rc] +
push ecx  +
mov ecx ebx +
movs   +
call dword ptr [eax+7Ch]  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
or dword ptr [esi+28h] 8 +
cmp dword ptr [edi+38h] 0 +
jz loc_105F997  +
push 1Dh  +
call ebx  +
mov [esi+40h] eax +
mov [esi+34h] eax +
jmp loc_1038321  +
***
pop eax  +
retn   +
***
mov esi [ebp+arg_0] +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
call ds:CopyRect  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+58h]  +
test eax eax +
jnz loc_105F121  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_105F1B2  +
cmp dword ptr [ebx+38h] 0 +
jz loc_1038463  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+58h]  +
test eax eax +
jnz loc_105F248  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_105F25F  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+94h]  +
push 0  +
lea ecx [ebp+rcDst] +
push ecx  +
push [ebp+var_10]  +
push eax  +
push dword ptr [edi+10h]  +
push dword ptr [ebx+38h]  +
call ds:DrawThemeBackground  +
jmp loc_1038463  +
mov esi [ebp+arg_0] +
jmp loc_1038463  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+wParam] +
xor ebx ebx +
cmp edi ebx +
mov esi ecx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] eax +
mov [ebp+var_C] edi +
jl loc_103DE29  +
lea eax [ebp+Points] +
push eax  +
push edi  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
mov [ebp+Points.x] ebx +
call ds:SendMessageW  +
test eax eax +
jz loc_103DE29  +
push edi  +
mov ecx esi +
call sub_1012341  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jz loc_103DE29  +
test byte ptr [eax+10h] 1 +
jnz loc_105F4EB  +
mov ecx [ebp+arg_4] +
call sub_100F319  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push 0Dh  +
call ebx  +
mov [esi+34h] eax +
mov [esi+40h] eax +
mov eax [edi+154h] +
mov [esi+30h] eax +
jmp loc_103834D  +
cmp dword ptr [edi+154h] 0FFFFFFFFh +
jnz loc_103DE33  +
jmp loc_103832F  +
mov esi [ebp+var_4] +
jmp loc_1038361  +
***
xor eax eax +
jmp loc_101238E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_4] esi +
jz loc_103DF03  +
cmp [ebp+arg_8] esi +
jz loc_103DF03  +
cmp [ebp+arg_C] esi +
jz loc_103DF03  +
cmp [ebp+arg_10] esi +
jz loc_103DF03  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
mov [ebp+arg_0] eax +
cmp eax esi +
jnz loc_103DEF9  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_14] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
mov [ebp+arg_0] 80070057h +
movs   +
call sub_103C9E6  +
test eax eax +
jz loc_10601C6  +
lea eax [ebp+arg_14] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CA26  +
mov ebx [ebx+8] +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
push [ebp+arg_10]  +
lea esi [ebp+arg_14] +
push [ebp+arg_C]  +
movs   +
push [ebp+arg_8]  +
movs   +
push [ebp+arg_4]  +
movs   +
push ebx  +
movs   +
call dword ptr [eax+58h]  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
mov eax 80004003h +
jmp loc_103DEFC  +
***
push dword ptr [ebp+14h]  +
mov ecx [ebp+1Ch] +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_103DF26  +
jmp loc_100F114  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0  +
mov esi ecx +
push 103Dh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov [ebp+wParam] eax +
mov eax [ebp+arg_C] +
movsx ebx ax +
shr eax 10h +
cwde   +
push eax  +
push ebx  +
push [ebp+wParam]  +
mov ecx esi +
mov [ebp+Rect.bottom] eax +
call sub_103DC26  +
push [ebp+Rect.bottom]  +
mov ecx esi +
push ebx  +
push [ebp+wParam]  +
mov edi eax +
call sub_103DCBA  +
push [ebp+wParam]  +
mov ecx esi +
mov [ebp+arg_C] eax +
call sub_1012341  +
mov ebx eax +
test ebx ebx +
jnz loc_105F857  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22D0 0FFFFFFFFh +
jz loc_1043DB4  +
mov eax dword_10B22D0 +
test eax eax +
jz loc_105CC46  +
pop ebp  +
jmp eax  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jl loc_105460C  +
mov eax [esp+arg_C] +
or eax eax +
jl loc_1054625  +
or eax eax +
jnz loc_105463E  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
dec edi  +
jz loc_1054684  +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp ecx [esi+5Ch] +
jb loc_103E0C9  +
push 0  +
push 0FFh  +
mov ecx esi +
call sub_1014F45  +
jmp loc_103E118  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
lea eax [ebp+Frequency] +
push eax  +
mov esi ecx +
call ds:QueryPerformanceFrequency  +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
lea edi [esi+4Ch] +
mov eax [edi] +
mov ecx [esi+50h] +
mov [ebp+var_10] ecx +
mov ecx [edi] +
mov [ebp+var_C] eax +
cmp eax ecx +
jnz loc_103E119  +
push ebx  +
mov eax [ebp+var_10] +
cmp eax [esi+50h] +
jnz loc_103E118  +
lea eax [ebp+var_18] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount] +
sub [ebp+var_18] eax +
mov eax dword ptr [ebp+PerformanceCount+4] +
push 0  +
sbb [ebp+var_14] eax +
push 3E8h  +
push [ebp+var_14]  +
push [ebp+var_18]  +
call sub_100E7E5  +
push dword ptr [ebp+Frequency+4]  +
push dword ptr [ebp+Frequency]  +
push edx  +
push eax  +
call sub_103DFDB  +
mov ecx eax +
cmp ecx [esi+60h] +
jnb loc_103E023  +
mov ebx [esi+5Ch] +
cmp ecx ebx +
jnb loc_103E13A  +
mov eax ecx +
imul eax eax +
xor edx edx +
div  ebx +
mov byte ptr [ebp+var_8] al +
cmp ecx [esi+60h] +
jnb loc_103E134  +
mov ebx [esi+60h] +
mov eax ebx +
sub eax ecx +
imul eax eax +
xor edx edx +
div  ebx +
mov byte ptr [ebp+var_4] al +
push [ebp+var_4]  +
mov ecx esi +
push [ebp+var_8]  +
call sub_1014F45  +
push 0Ah  +
call ds:Sleep  +
mov eax [edi] +
cmp [ebp+var_C] eax +
jz loc_103E07D  +
pop ebx  +
mov eax [edi] +
cmp [ebp+var_C] eax +
jnz loc_103E130  +
mov esi [esi+50h] +
cmp [ebp+var_10] esi +
jnz loc_103E130  +
push esi  +
push edi  +
call ds:InterlockedExchange  +
pop edi  +
pop esi  +
leave   +
retn   +
mov byte ptr [ebp+var_4] 0 +
jmp loc_103E0F8  +
mov byte ptr [ebp+var_8] 0 +
jmp loc_103E0DF  +
***
mov eax [esi+54h] +
push ebx  +
mov ebx ds:GetSystemMetrics +
push 1000h  +
mov [esi+50h] eax +
call ebx  +
test eax eax +
jnz loc_106131F  +
push 2001h  +
call ebx  +
test eax eax +
jnz loc_106131F  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
push 0  +
push 2000h  +
push esi  +
push offset loc_103DFBE  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_1061314  +
pop ebx  +
jmp loc_103C420  +
***
mov ecx [ebp+8] +
mov esi [ebp+1Ch] +
push 0Bh  +
pop eax  +
add ecx 0FFFFFFE8h +
mov [esi] ax +
call sub_103872C  +
neg eax  +
sbb eax eax +
mov [esi+8] ax +
jmp loc_1014019  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
xor edi edi +
push edi  +
push edi  +
push 135h  +
push offset dword_1036BDC  +
mov esi ecx +
push offset dword_10128F0  +
push dword ptr [esi+28h]  +
call ds:SHLWAPI_484  +
test eax eax +
jl loc_104D1F8  +
cmp [ebp+var_8] di +
jz loc_104D1F8  +
push edi  +
push edi  +
push 103Dh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call sub_1036E39  +
push 2  +
push offset aMenucommand  +
call sub_103740C  +
lea eax [esi+8] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+24h]  +
mov ecx esi +
mov edi eax +
call sub_103872C  +
test eax eax +
jnz loc_105DE88  +
mov eax edi +
pop edi  +
pop esi  +
retn 4  +
***
mov ecx [ebp+arg_0] +
push edi  +
add ecx 0FFFFFFF8h +
jmp loc_1036E28  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+20h]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_103E2CA  +
mov eax [esi+30h] +
cmp dword ptr [eax+5Ch] 0 +
jz loc_103E2BA  +
push dword ptr [eax+60h]  +
push dword ptr [eax+5Ch]  +
call sub_1034B2D  +
mov eax [esi+30h] +
cmp dword ptr [eax+60h] 83h +
jz loc_10503EC  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
or [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_103E347  +
mov edx [eax+30h] +
test edx edx +
jz loc_103E347  +
push ebx  +
push esi  +
push edi  +
lea eax [edx+4] +
push 4  +
pop ecx  +
mov edi offset dword_101206C +
mov esi eax +
xor ebx ebx +
cmps   +
jz loc_103EFA0  +
push 4  +
pop ecx  +
mov edi offset dword_1014324 +
mov esi eax +
xor ebx ebx +
cmps   +
jz loc_1060F79  +
push 4  +
pop ebx  +
mov esi eax +
mov ecx ebx +
mov edi offset dword_1014314 +
xor eax eax +
cmps   +
jz loc_1060FEA  +
mov ecx ebx +
mov edi offset dword_101207C +
lea esi [edx+14h] +
xor eax eax +
cmps   +
jz loc_1051407  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
sub eax ecx +
push esi  +
push edi  +
jz loc_103F030  +
dec eax  +
jz loc_106111B  +
dec eax  +
jz loc_10610AE  +
dec eax  +
jz loc_1051488  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
xor edi edi +
call sub_1012341  +
mov ebx eax +
test ebx ebx +
jz loc_103E3C2  +
push 10h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_103E3CB  +
push ebx  +
push [ebp+arg_0]  +
mov ecx eax +
push esi  +
call sub_103E3D4  +
mov edi eax +
mov ecx ebx +
call sub_100F319  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
xor edi edi +
jmp loc_103E3BB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_103E40C +
mov [esi+4] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+arg_8] +
mov [esi+0Ch] eax +
add eax 1Ch +
push eax  +
call ds:InterlockedIncrement  +
mov eax [ebp+arg_4] +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_103E43B  +
test byte ptr [ebp+8] 1 +
jz loc_103E42F  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov dword ptr [esi] offset off_103E40C +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [esi+0Ch] +
pop esi  +
jmp sub_100F319  +
***
push edi  +
mov ecx esi +
call sub_103E46A  +
jmp loc_100DF55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_10345AB  +
mov ecx [ebp+arg_0] +
mov [ecx+0Ch] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_10] +
push eax  +
mov esi ecx +
push 0DAh  +
push dword ptr [esi+44h]  +
call sub_103C26A  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_103E4B9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
test [ebp+arg_4] 1 +
jnz loc_10604E4  +
push eax  +
push [ebp+wParam]  +
mov ecx esi +
call sub_103DDC9  +
test eax eax +
jnz loc_103E502  +
push [ebp+wParam]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+104h]  +
mov esi eax +
test esi esi +
jz loc_103E502  +
push 0  +
push 2008h  +
push esi  +
push offset loc_103E50E  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_10604EC  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov ecx [esi+4] +
push esi  +
call sub_103E534  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+0Ch] 0 +
mov esi ecx +
jz loc_103E6C2  +
cmp dword_10B24CC 0 +
push ebx  +
jz loc_103E5B5  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_103E6C8  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx 80010000h +
or eax ecx +
jz loc_103E5B5  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx 80010000h +
cmp ecx eax +
jnz loc_103E5B5  +
cmp edx ebx +
jnz loc_103E5B5  +
push offset dword_103E6E0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push dword ptr [edi+0Ch]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+130h]  +
push dword ptr [edi+0Ch]  +
mov [ebp+var_C] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0DCh]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+48h]  +
mov [ebp+var_8] eax +
mov ebx 80004005h +
test eax eax +
jnz loc_105FFB0  +
mov ecx [edi+0Ch] +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_103E654  +
cmp [ebp+var_8] 0 +
jnz loc_103E643  +
mov eax [ebp+arg_0] +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
mov [ebp+var_8] offset __ImageBase +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_105FFC7  +
push [ebp+var_4]  +
mov ecx esi +
push [ebp+arg_0]  +
push dword ptr [edi+8]  +
call sub_103E705  +
mov ebx eax +
cmp ebx 800704C7h +
jz loc_105FFE0  +
test ebx ebx +
jl loc_1060005  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword_10B24CC 0 +
jz loc_103E6B4  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_103E6D5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov ebx 80010000h +
and eax edx +
and ecx ebx +
or eax ecx +
jz loc_103E6B4  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx ebx +
cmp ecx eax +
jnz loc_103E6B4  +
cmp edx edi +
jnz loc_103E6B4  +
push offset dword_103E6F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push [ebp+var_C]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+134h]  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
test al al +
jz loc_103E564  +
jmp loc_103E5B5  +
test al al +
jnz loc_103E6B4  +
jmp loc_103E666  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push 2  +
push dword ptr [esi+44h]  +
call ds:GetAncestor  +
mov edi ds:GetAsyncKeyState +
push 10h  +
mov ebx eax +
call edi  +
test ax ax +
jl loc_105FC98  +
xor eax eax +
neg eax  +
sbb eax eax +
and eax offset aRunas +
push eax  +
push 100h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 0  +
push ebx  +
call ds:SHLWAPI_571  +
mov ebx eax +
test ebx ebx +
jl loc_103E7AB  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
and [ebp+Points.x] eax +
lea eax [ebp+Points] +
push eax  +
push [ebp+wParam]  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push dword ptr [esi+0B0h]  +
call ds:MapWindowPoints  +
lea eax [ebp+var_1C] +
push eax  +
push 0CCh  +
push dword ptr [esi+44h]  +
call sub_103C26A  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
cmp ebx 800704C7h +
jz loc_103E758  +
jmp loc_103E7A2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push dword ptr [esi+0Ch]  +
mov edi ecx +
call sub_1012341  +
and [ebp+arg_0] 0 +
mov ebx eax +
test ebx ebx +
jz loc_103E828  +
push dword ptr [esi+24h]  +
mov ecx edi +
push dword ptr [esi+20h]  +
push dword ptr [esi+0Ch]  +
call sub_103DC26  +
mov ecx edi +
test eax eax +
jnz loc_1060511  +
push dword ptr [esi+24h]  +
push dword ptr [esi+20h]  +
push dword ptr [esi+0Ch]  +
call sub_103DCBA  +
test eax eax +
jnz loc_1060520  +
push 0  +
push dword ptr [esi+0Ch]  +
mov ecx edi +
call sub_103E483  +
mov [ebp+arg_0] eax +
mov ecx ebx +
call sub_100F319  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
cmp [ebp+arg_C] eax +
jz loc_103CA8A  +
mov ecx [ebp+arg_14] +
push 3  +
pop edx  +
mov [ecx] dx +
mov dword ptr [ecx+8] 2Bh +
jmp loc_103CACB  +
***
push dword ptr [ebx+34h]  +
mov eax [ecx] +
push dword ptr [ebx+48h]  +
call dword ptr [eax+4]  +
test eax eax +
jz loc_103CC08  +
or dword ptr [esi+8] 40000000h +
jmp loc_103CC08  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1036C65  +
***
sub esp 10h +
sub esp 10h +
mov edi esp +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
movs   +
lea edi [ebx-10h] +
mov ecx edi +
call sub_103EA68  +
test eax eax +
lea eax [ebp+0Ch] +
mov ecx edi +
push eax  +
jnz loc_106010C  +
call sub_103CC47  +
mov esi eax +
mov [ebp-420h] esi +
test esi esi +
jz loc_103C74B  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_1042D7A  +
push dword ptr [ebx+34h]  +
mov eax [esi] +
push dword ptr [ebx+48h]  +
mov ecx esi +
call dword ptr [eax+4]  +
test eax eax +
jz loc_1042D7A  +
mov esi 104h +
push esi  +
lea eax [ebp-414h] +
push eax  +
push 14Eh  +
push dword_10B23D0  +
call ds:LoadStringW  +
push 0  +
push dword ptr [ebp-420h]  +
mov ecx edi +
call sub_1012646  +
mov edi eax +
test edi edi +
jz loc_10601B7  +
push edi  +
lea eax [ebp-414h] +
push eax  +
lea eax [ebp-20Ch] +
push esi  +
push eax  +
call sub_10343CA  +
add esp 10h +
mov [ebp-418h] eax +
test eax eax +
jl loc_103EA4C  +
lea eax [ebp-20Ch] +
push eax  +
call ds:SysAllocString  +
mov [ebp-41Ch] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
mov [ebp-418h] eax +
push edi  +
call ds:__imp_CoTaskMemFree  +
mov ecx [ebp-420h] +
call sub_100F319  +
jmp loc_103C74B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_105F5EA  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [esi] +
call dword ptr [eax+3Ch]  +
test eax eax +
jz loc_103D911  +
xor ebx ebx +
test dword ptr [edi+20h] 400h +
jnz loc_103D909  +
mov ecx esi +
call sub_103E1B8  +
push ebx  +
push eax  +
mov ecx esi +
mov [edi+10h] eax +
call sub_103DDC9  +
jmp loc_103DAE6  +
***
or dword ptr [esi+20h] 4000h +
mov ecx edi +
call sub_103E1B8  +
cmp eax ebx +
jl loc_103EB0C  +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
push 100Eh  +
push dword ptr [edi+0B0h]  +
mov [ebp+var_10] ebx +
call ds:SendMessageW  +
test eax eax +
jz loc_103EB0C  +
mov ecx [ebp+var_10] +
mov eax [ebp+var_8] +
add eax ecx +
mov ecx [ebp+var_C] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+14h] eax +
mov eax [ebp+var_4] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+18h] eax +
jmp loc_103DBAC  +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
jmp loc_103DBAC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_18] +
test edi edi +
jz loc_105F605  +
mov esi [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+arg_18] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_103EB63  +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_105F60F  +
mov eax [esi+8] +
mov ecx [eax] +
push edi  +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+5Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jz loc_105FE5D  +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_103EC41  +
mov eax [ebx+8] +
mov ecx [eax] +
push edi  +
mov edi [ebp+arg_8] +
push esi  +
push edi  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+60h]  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_103EC4A  +
lea ecx [ebx-10h] +
push esi  +
call sub_103EC58  +
mov [ebp+arg_8] eax +
xor eax eax +
cmp [ebp+arg_8] eax +
jz loc_105FE9B  +
cmp [ebp+arg_0] eax +
jnz loc_103EC38  +
mov eax [ebp+arg_4] +
mov [ebp+pt.x] eax +
lea eax [ebp+pt] +
push eax  +
push dword ptr [ebx+0A0h]  +
mov [ebp+pt.y] edi +
call ds:ScreenToClient  +
push [ebp+pt.y]  +
lea edi [ebp+var_1C] +
push [ebp+pt.x]  +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_14] +
dec eax  +
lea esi [ebx-10h] +
push eax  +
mov ecx esi +
call sub_103DC26  +
test eax eax +
jnz loc_105FE67  +
mov esi [ebp+arg_C] +
push [ebp+pt.y]  +
lea edi [ebp+var_1C] +
push [ebp+pt.x]  +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_14] +
dec eax  +
lea esi [ebx-10h] +
push eax  +
mov ecx esi +
call sub_103DCBA  +
test eax eax +
jnz loc_105FE76  +
mov ecx [ebp+arg_8] +
call sub_100F319  +
pop edi  +
mov eax [ebp+arg_0] +
pop ebx  +
pop esi  +
leave   +
retn 10h  +
mov [ebp+arg_0] 80070057h +
jmp loc_103EC40  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+8] 0 +
jz loc_103EC82  +
push edi  +
lea edi [ebp+var_10] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_8] +
dec eax  +
push eax  +
call sub_1012341  +
pop edi  +
pop esi  +
leave   +
retn 4  +
xor eax eax +
jmp loc_103EC7D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx+30h] +
mov eax [eax+50h] +
push [ebp+nBufferMax]  +
push [ebp+lpBuffer]  +
test eax eax +
jz loc_103ECB4  +
push eax  +
push dword_10B23D0  +
call ds:LoadStringW  +
pop ebp  +
retn 10h  +
push [ebp+arg_4]  +
push edx  +
call sub_108F261  +
jmp loc_103ECB0  +
***
push esi  +
call sub_103ECCF  +
jmp loc_10122E3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
push edi  +
mov edi ecx +
xor ecx ecx +
mov [eax] cx +
call sub_1011451  +
test eax eax +
jz loc_103EDA1  +
push dword ptr [esi+18h]  +
mov ecx edi +
call sub_1012341  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_103EDA1  +
test byte ptr [eax+10h] 1 +
jnz loc_103ED99  +
test byte ptr [esi+0Ch] 1 +
push ebx  +
jz loc_105FCAD  +
xor ebx ebx +
and [ebp+arg_0] 0 +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+18h]  +
mov [ebp+lParam] 2 +
push 100Eh  +
push dword ptr [edi+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_103ED6A  +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [esi+18h]  +
mov ecx edi +
call sub_103EDBA  +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_C] +
sub eax [ebp+var_24] +
sub ecx [ebp+lParam] +
xor edx edx +
cmp eax ecx +
setnle dl  +
mov [ebp+arg_0] edx +
mov eax [edi+3Ch] +
cmp eax 6 +
jz loc_103EDA9  +
cmp eax 7 +
jz loc_103EDA9  +
mov eax [esi+14h] +
cmp ebx eax +
jge loc_103ED98  +
mov edx [edi] +
sub eax ebx +
push eax  +
mov eax [esi+10h] +
lea eax [eax+ebx*2] +
push eax  +
push [ebp+arg_0]  +
mov ecx edi +
push [ebp+var_4]  +
call dword ptr [edx+0BCh]  +
pop ebx  +
mov ecx [ebp+var_4] +
call sub_100F319  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
cmp [ebp+arg_0] 0 +
jnz loc_105FCE0  +
jmp loc_103ED98  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi+0B0h]  +
mov [ebp+lpRect] eax +
call ds:GetWindowDC  +
mov edi ds:SendMessageW +
push 0  +
push 0  +
push 31h  +
push dword ptr [esi+0B0h]  +
mov [ebp+hDC] eax +
call edi  +
mov ebx ds:SelectObject +
push eax  +
push [ebp+hDC]  +
call ebx  +
cmp [ebp+hDC] 0 +
mov [ebp+var_210] eax +
jz loc_103EE81  +
and [ebp+var_244] 0 +
lea eax [ebp+String] +
mov [ebp+var_238] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_234] 100h +
push 1073h  +
push dword ptr [esi+0B0h]  +
call edi  +
mov edi [ebp+lpRect] +
xor eax eax +
stos   +
stos   +
push 400h  +
push [ebp+lpRect]  +
stos   +
stos   +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push [ebp+hDC]  +
call ds:DrawTextW  +
push [ebp+var_210]  +
push [ebp+hDC]  +
call ebx  +
push [ebp+hDC]  +
push dword ptr [esi+0B0h]  +
call ds:ReleaseDC  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
call sub_100F7A7  +
jmp loc_10605BC  +
***
test al al +
jnz loc_100FA72  +
jmp loc_100FA51  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_100FA72  +
cmp edx edi +
jnz loc_100FA72  +
push offset dword_103EF90  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_100FA72  +
***
cmp dword_10B24CC ebx +
jz loc_103F001  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_103F009  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 2010000h +
mov eax 80010000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_103F001  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_103F001  +
cmp ecx edi +
jnz loc_103F001  +
push offset dword_103F020  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
and [ebp+var_4] ebx +
jmp loc_103E344  +
test al al +
jz loc_103EFB1  +
jmp loc_103F001  +
test al al +
jnz loc_105146C  +
jmp loc_105141C  +
***
cmp dword_10B24CC ecx +
jz loc_103E37C  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10514CD  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 2010000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_103E37C  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_103E37C  +
cmp ecx edi +
jnz loc_103E37C  +
push offset dword_103F0B0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_103E37C  +
***
cmp [esi+3Ch] ecx +
jle loc_100BDED  +
cmp [esi+40h] ecx +
jle loc_100BDED  +
cmp [esi+44h] cl +
jbe loc_100BDED  +
mov [ebp+var_C] 1 +
jmp loc_100BDED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
push 54h  +
pop esi  +
push esi  +
xor ebx ebx +
lea eax [ebp+var_58] +
mov edi ecx +
push ebx  +
push eax  +
mov [ebp+var_4] edi +
call memset  +
add esp 0Ch +
mov [ebp+var_58] esi +
mov esi [ebp+lprcSrc] +
push esi  +
lea eax [ebp+rcDst] +
push eax  +
call ds:CopyRect  +
xor eax eax +
push 2  +
cmp [ebp+arg_10] ebx +
jz loc_1066454  +
cmp [ebp+arg_14] ebx +
setnz al  +
inc eax  +
mov [ebp+var_44] eax +
xor eax eax +
cmp [ebp+arg_18] ebx +
pop ebx  +
setnz al  +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] ebx +
inc eax  +
mov [ebp+var_40] eax +
cmp [ebp+arg_10] 0 +
jz loc_1066476  +
mov eax [esi+0Ch] +
mov [ebp+var_30] eax +
mov eax [esi] +
add eax [ebp+arg_C] +
mov [ebp+var_34] eax +
cmp [ebp+arg_1C] 0 +
jz loc_104430D  +
mov [ebp+var_2C] 66E5FFh +
mov ecx [edi+10h] +
call sub_1004226  +
mov ecx [ebp+var_2C] +
shr ecx 10h +
mov edi 0FFh +
movzx edx cl +
push 3  +
test al bl +
jz loc_10664A1  +
mov ax word ptr [ebp+var_2C] +
shr ax 8 +
mov word ptr [ebp+arg_14+2] ax +
mov eax edi +
sub eax edx +
imul eax eax +
cdq   +
pop ebx  +
and edx ebx +
add eax edx +
movzx edx byte ptr [ebp+arg_14+2] +
sar eax 2 +
add al cl +
movzx ecx al +
mov eax edi +
sub eax edx +
imul eax eax +
cdq   +
and edx ebx +
add eax edx +
movzx edx byte ptr [ebp+var_2C] +
sar eax 2 +
add al byte ptr [ebp+arg_14+2] +
shl ecx 8 +
movzx eax al +
or ecx eax +
mov eax edi +
sub eax edx +
imul eax eax +
cdq   +
and edx ebx +
add eax edx +
sar eax 2 +
add al byte ptr [ebp+var_2C] +
shl ecx 8 +
movzx eax al +
or ecx eax +
mov eax [ebp+var_4] +
mov eax [eax+10h] +
add eax 14h +
push 0  +
mov [ebp+var_28] ecx +
mov [ebp+var_24] 1Eh +
mov [ebp+var_20] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov ecx eax +
mov eax [esi+8] +
sub eax [esi] +
cmp eax ecx +
jle loc_10664E0  +
imul eax eax +
cdq   +
and edx ebx +
add eax edx +
mov ebx eax +
mov eax [esi+0Ch] +
sub eax [esi+4] +
sar ebx 2 +
cmp eax ecx +
mov [ebp+var_1C] ebx +
jg loc_103F239  +
mov eax ecx +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
mov ecx eax +
sar ecx 2 +
cmp [ebp+arg_1C] 0 +
mov [ebp+var_18] ecx +
jz loc_103F270  +
movzx esi [ebp+arg_20] +
mov eax esi +
imul eax ebx +
cdq   +
mov ebx edi +
idiv  ebx +
mov ebx eax +
mov eax esi +
imul eax ecx +
cdq   +
idiv  edi +
mov [ebp+var_1C] ebx +
mov ecx eax +
mov [ebp+var_18] ecx +
mov al [ebp+arg_20] +
mov [ebp+var_14] al +
mov eax ebx +
imul eax eax +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_10] eax +
mov eax ecx +
imul eax eax +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_C] eax +
mov al [ebp+arg_20] +
mov [ebp+var_8] al +
lea eax [ebp+var_58] +
push eax  +
push [ebp+arg_0]  +
call sub_100BD92  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 20h +
push ebx  +
shr eax 10h +
push esi  +
mov ebx ecx +
test ax ax +
jge loc_1044330  +
push edi  +
push 0FFFFFFFEh  +
pop edi  +
cmp ax di +
jnz loc_1044339  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_10664F4  +
cmp dword ptr [ecx] 0 +
jz loc_10664E7  +
movzx esi word ptr [ecx+10h] +
mov ax [ecx+18h] +
sub ax si +
cwde   +
cdq   +
sub eax edx +
sar eax 1 +
sub ax [ecx+34h] +
add ax si +
movzx eax ax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax [esi+3Ch] +
mov ebx [esi+40h] +
mov [ebp+arg_4] eax +
jmp loc_100BE26  +
cmp [ebp+var_8] ebx +
jz loc_100BEAB  +
mov al [esi+44h] +
cmp al [esi+50h] +
jz loc_100BEAB  +
jmp loc_1064276  +
cmp [ebp+var_10] 64h +
jge loc_100BF33  +
mov al [esi+44h] +
cmp al 0FFh +
jb loc_100BF3F  +
jmp loc_100BF33  +
mov ebx ecx +
jmp loc_100C2BE  +
***
cmp [esi+68h] eax +
jnz loc_1053FC6  +
cmp [esi+58h] eax +
jz loc_1044341  +
push ds:nDenominator  +
movzx eax [ebp+arg_8] +
push eax  +
push dword ptr [esi+6Ch]  +
jmp loc_1053FDA  +
***
and [ebp+var_8] eax +
and [ebp+var_14] eax +
lea edx [ebp+var_8] +
push edx  +
mov dword ptr [esi+64h] 1 +
mov eax [edi+10h] +
push 14h  +
add eax 1Ch +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_103F79D  +
mov ecx ds:dword_103F358 +
cmp [ebp+arg_0] ecx +
mov eax ds:nDenominator +
jle loc_103F785  +
mov [esi+84h] eax +
mov ecx ds:dword_103F358 +
cmp [ebp+var_8] ecx +
mov eax ds:nDenominator +
jle loc_103F791  +
mov edi ds:GetCaretBlinkTime +
mov [esi+88h] eax +
call edi  +
mov ecx ds:dword_103F358 +
lea eax [ecx+eax*2] +
cmp [ebp+arg_0] eax +
jl loc_10059EC  +
call edi  +
add eax eax +
mov ecx eax +
mov eax [ebp+arg_0] +
sub eax ecx +
sub eax ds:dword_103F358 +
mov [esi+84h] eax +
mov ecx ds:nDenominator +
mov edx ds:dword_103F358 +
mov edi ecx +
imul edi edi +
add edi edx +
add edi edi +
cmp eax edi +
jg loc_103F4F1  +
lea ecx [edx+ecx*4] +
cdq   +
idiv  ecx +
mov [esi+84h] edx +
mov eax ds:nDenominator +
lea ecx [eax+eax] +
cmp edx ecx +
jg loc_103F4BA  +
shl eax 2 +
sub eax edx +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
cmp [ebp+var_14] 0 +
mov [esi+84h] eax +
mov [esi+88h] eax +
jz loc_10059EC  +
mov eax ds:nDenominator +
sub eax [esi+84h] +
mov [esi+84h] eax +
jmp loc_10059EC  +
***
cmp edi 8006h +
jnz loc_1003885  +
jmp loc_100639F  +
push 3  +
pop ebx  +
jmp loc_10063C9  +
***
mov eax [edi+1Ch] +
mov eax [eax+4] +
mov ecx [ebp+var_4] +
mov ebx [eax+ecx*4] +
mov [ebp+var_10] 1 +
jmp loc_1005E87  +
mov [ebp+var_C] 1 +
jmp loc_1005EA1  +
mov edi ds:dword_103F358 +
add ecx edi +
cmp edx ecx +
jl loc_103F4CF  +
mov eax edx +
sub eax edi +
jmp loc_103F448  +
cdq   +
sub eax edx +
sar eax 1 +
jmp loc_103F451  +
and dword ptr [esi+84h] 0 +
jmp loc_103F826  +
and dword ptr [esi+88h] 0 +
jmp loc_10059EC  +
mov [ebp+var_14] 1 +
jmp loc_103F42B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+28h] +
call sub_100DBEB  +
xor eax eax +
pop ebp  +
retn 4  +
***
cmp dword ptr [ebp-8] 2 +
mov eax [esi] +
jnz loc_103F85C  +
push edi  +
push edi  +
push esi  +
call dword ptr [eax+5Ch]  +
call ds:GetForegroundWindow  +
mov edi eax +
test edi edi +
jz loc_103F560  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
cmp eax edi +
jz loc_103F560  +
mov ecx [esi] +
mov eax 40000h +
push eax  +
push eax  +
push esi  +
call dword ptr [ecx+5Ch]  +
mov eax [ebp+hIcon] +
mov eax [eax+24h] +
mov ecx [eax] +
push eax  +
mov [ebp+var_4] 1 +
call dword ptr [ecx+2Ch]  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_103F570  +
mov ecx [eax] +
push 13h  +
push esi  +
push eax  +
call dword ptr [ecx+7Ch]  +
cmp dword_10B24CC 0 +
jz loc_100AA56  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_105195E  +
mov ecx dword_10B24B8 +
mov edx dword_10B24BC +
mov eax 80000000h +
and ecx ebx +
and edx eax +
or ecx edx +
jz loc_100AA56  +
jmp loc_1064A9F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
sub esp 24h +
mov ecx 80070057h +
test eax eax +
jl loc_103F64A  +
cmp eax 25h +
jnb loc_103F64A  +
mov edx [ebp+14h] +
push ebx  +
mov ebx [edx] +
test ebx 0FFFFFF80h +
jnz loc_103F649  +
push esi  +
mov esi eax +
imul esi esi +
push edi  +
push 9  +
add esi offset unk_10B2A58 +
pop ecx  +
lea edi [ebp-24h] +
movs   +
pop edi  +
pop esi  +
test bl 1 +
jnz loc_10655A8  +
test bl 2 +
jz loc_103F607  +
mov ecx [edx+8] +
mov [ebp-1Ch] ecx +
test bl 4 +
jnz loc_10655B3  +
test bl 8 +
jnz loc_10655BE  +
test bl 10h +
jnz loc_10655C9  +
test bl 20h +
jnz loc_10655D4  +
test bl 40h +
jnz loc_10655DF  +
lea ecx [ebp-24h] +
push ecx  +
mov ecx [ebp+8] +
push eax  +
push dword ptr [ebp+0Ch]  +
add ecx 0FFFFFFE4h +
call sub_1007A36  +
mov ecx eax +
pop ebx  +
mov eax ecx +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
push 13h  +
push eax  +
mov ebx 80004005h +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_103F77D  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_103F77D  +
mov ecx [esi+14h] +
mov ecx [ecx+4] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push edi  +
mov edi [ecx+eax*4] +
mov eax [ebp+10h] +
and dword ptr [ebp+0Ch] 0 +
imul eax eax +
mov ebx dword_10B2A5C[eax] +
mov eax [esi+8] +
and dword ptr [ebp+8] 0 +
lea edx [ebp+0Ch] +
push edx  +
push ebx  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_103F733  +
mov eax [esi+8] +
push 0  +
push ebx  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp dword ptr [ebp+10h] 15h +
jnz loc_103F8B3  +
mov eax ds:dword_103F358 +
cmp [ebp+0Ch] eax +
jle loc_10667A0  +
and dword ptr [ebp+0Ch] 0 +
mov eax [esi+8] +
lea edx [ebp+8] +
push edx  +
push 14h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_103F733  +
mov eax [esi+8] +
push 0  +
push 14h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax ds:dword_103F358 +
cmp [ebp+8] eax +
mov dword ptr [ebp-4] 16h +
jle loc_10667B2  +
and dword ptr [ebp+8] 0 +
mov eax [ebp+0Ch] +
lea edx [ebp-28h] +
push edx  +
push dword ptr [ebp+10h]  +
mov [ebp-20h] eax +
mov eax [esi+8] +
add eax 1Ch +
push edi  +
mov dword ptr [ebp-28h] 2 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
test ebx ebx +
jl loc_103F77C  +
cmp dword ptr [ebp-4] 0FFFFFFFFh +
jz loc_103F77C  +
mov eax [ebp+8] +
mov esi [esi+8] +
lea edx [ebp-28h] +
push edx  +
push dword ptr [ebp-4]  +
mov [ebp-20h] eax +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
imul eax [ebp+arg_0] +
cdq   +
idiv  ecx +
jmp loc_103F3BD  +
imul eax [ebp+var_8] +
cdq   +
idiv  ecx +
jmp loc_103F3D7  +
mov eax ds:dword_103F7D0 +
mov ecx ds:dword_103F358 +
add ecx eax +
cmp [ebp+arg_0] ecx +
jge loc_1066A77  +
cmp [ebp+arg_0] eax +
jl loc_103F3A9  +
mov edi [edi+10h] +
push 14h  +
lea eax [edi+1Ch] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_103F3A9  +
***
and [ebp+var_C] eax +
lea edx [ebp+var_C] +
push edx  +
mov dword ptr [esi+68h] 1 +
mov eax [edi+10h] +
push 16h  +
add eax 1Ch +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_1066A84  +
mov edi ds:dword_103F858 +
imul edi ds:dword_103F358 +
cmp [ebp+arg_0] edi +
jg loc_103F4D9  +
mov ecx ds:nDenominator +
mov eax ecx +
imul eax [ebp+arg_0] +
cdq   +
idiv  edi +
sub ecx eax +
mov [esi+84h] ecx +
mov edi ds:dword_103F858 +
imul edi ds:dword_103F358 +
cmp [ebp+var_C] edi +
jg loc_103F4E5  +
mov ecx ds:nDenominator +
mov eax ecx +
imul eax [ebp+var_C] +
cdq   +
idiv  edi +
sub ecx eax +
mov [esi+88h] ecx +
jmp loc_10059EC  +
***
push 0  +
push edi  +
push esi  +
call dword ptr [eax+5Ch]  +
mov eax [ebp+arg_8] +
or [ebp+arg_C] 2 +
test eax eax +
jz loc_103F877  +
mov ecx [eax] +
push 15h  +
push esi  +
push eax  +
call dword ptr [ecx+7Ch]  +
cmp dword_10B24CC 0 +
jz loc_100AA56  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_105196B  +
mov ecx dword_10B24B8 +
mov edx dword_10B24BC +
mov eax 80000000h +
and ecx ebx +
and edx eax +
or ecx edx +
jz loc_100AA56  +
jmp loc_1064AE7  +
***
mov edx ds:dword_103F858 +
mov ecx ds:dword_103F358 +
mov eax [ebp+0Ch] +
imul edx ecx +
cmp eax edx +
jg loc_103F933  +
cdq   +
idiv  ds:dword_103F858 +
sub ecx eax +
mov [ebp+0Ch] ecx +
mov eax [esi+8] +
lea edx [ebp+8] +
push edx  +
push 16h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_103F733  +
mov eax [esi+8] +
push 0  +
push 16h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edx ds:dword_103F858 +
mov ecx ds:dword_103F358 +
mov eax [ebp+8] +
imul edx ecx +
cmp eax edx +
jg loc_103F72F  +
cdq   +
idiv  ds:dword_103F858 +
mov dword ptr [ebp-4] 14h +
sub ecx eax +
mov [ebp+8] ecx +
jmp loc_103F733  +
***
and dword ptr [ebp+0Ch] 0 +
jmp loc_103F8D5  +
***
mov eax [ebp+hdc] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
cmp [ebp+wParam] 1F4h +
mov ecx ebx +
jb loc_100A177  +
push [ebp+lParam]  +
push [ebp+wParam]  +
call sub_103FBB7  +
jmp loc_1002264  +
***
call ds:SwitchToThisWindow  +
push dword ptr [esi+4]  +
call ds:SetForegroundWindow  +
push 0  +
push 30002h  +
push 127h  +
lea edi [esi+0C04h] +
push dword ptr [edi]  +
call ds:SendMessageW  +
push dword ptr [edi]  +
mov ecx esi +
call sub_1039F5F  +
jmp loc_103FBF3  +
***
call ds:GetForegroundWindow  +
push edi  +
push offset dword_10B39EC  +
xor edi edi +
call sub_106FF09  +
jmp loc_103FBF3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi [esi+0E04h] +
jz loc_103FBFA  +
lea eax [edi-1F4h] +
mov [esi+0E04h] edi +
cmp eax 41h +
ja sub_10407E0  +
movzx eax ds:byte_103FB48[eax] +
jmp ds:off_103FB0C[eax*4]  +
call sub_103FF1D  +
or dword ptr [esi+0E04h] 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub eax 6 +
jz loc_103FEF3  +
sub eax 48h +
jz loc_103FEDA  +
sub eax 34h +
jz loc_103FEC5  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp-48h] +
mov ebx ecx +
push eax  +
push dword ptr [ebx+0CF8h]  +
mov [ebp-10h] ebx +
mov dword ptr [ebp-48h] 28h +
call ds:GetMonitorInfoW  +
xor edi edi +
test eax eax +
jz loc_1056438  +
mov esi [ebp+8] +
lea eax [ebp-44h] +
push eax  +
push esi  +
lea eax [ebp-20h] +
push eax  +
call ds:IntersectRect  +
test eax eax +
jz loc_105644B  +
mov eax [esi+4] +
mov edx [esi+0Ch] +
mov ecx [esi] +
push edi  +
push hInstance  +
sub edx eax +
push edi  +
push edi  +
push edx  +
mov edx [esi+8] +
sub edx ecx +
push edx  +
push eax  +
push ecx  +
push edi  +
push edi  +
push offset aStatic  +
mov ebx 80h +
push ebx  +
call sub_103510B  +
mov [ebp-8] eax +
cmp eax edi +
jz loc_103FD89  +
push 1  +
push offset aAllowconsentto  +
push eax  +
call ds:SetPropW  +
push 0A0h  +
push offset aShell32  +
call ds:GetModuleHandleW  +
push eax  +
call ds:LoadIconW  +
push eax  +
push 1  +
push ebx  +
push dword ptr [ebp-8]  +
call ds:SendMessageW  +
push edi  +
push edi  +
push offset loc_103FC05  +
push dword ptr [ebp-8]  +
mov [ebp-0Ch] edi +
mov [ebp-4] edi +
mov [ebp+8] edi +
call sub_10351CD  +
push 40000061h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_103FD3A  +
lea eax [ebp+8] +
push eax  +
push edi  +
push edi  +
push offset dword_103FDA4  +
call SHGetKnownFolderIDList  +
test eax eax +
jl loc_103FD3A  +
mov dword ptr [ebp-0Ch] 1 +
cmp [ebp+8] edi +
jz loc_10564A2  +
push edi  +
push edi  +
push 2D2h  +
push dword ptr [ebp+8]  +
push edi  +
push dword ptr [ebp-8]  +
call sub_103FDB9  +
cmp [ebp+8] edi +
jz loc_103FD69  +
push dword ptr [ebp+8]  +
cmp [ebp-0Ch] edi +
jz loc_103FD9A  +
call ds:__imp_SHELL32_155  +
cmp [ebp-4] edi +
jnz loc_105650D  +
push offset aAllowconsentto  +
push dword ptr [ebp-8]  +
call ds:RemovePropW  +
push dword ptr [ebp-8]  +
call ds:DestroyWindow  +
push esi  +
call sub_1002BCA  +
pop ecx  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 4  +
***
call ds:SHUnlockShared  +
jmp loc_103FD69  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 614h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+arg_14] 4 +
push ebx  +
push esi  +
mov esi [ebp+pidl] +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
xor ebx ebx +
mov [ebp+var_614] edi +
mov [ebp+szPath] ax +
cmp [ebp+arg_4] ebx +
jnz loc_105636B  +
mov [ebp+var_610] ebx +
cmp esi ebx +
jz loc_105639C  +
lea eax [ebp+szPath] +
push eax  +
push esi  +
call ds:__imp_SHGetPathFromIDListW  +
test eax eax +
jz loc_105639C  +
cmp [ebp+szPath] bx +
jz loc_103FE4D  +
lea eax [ebp+szPath] +
push eax  +
call ds:PathGetDriveNumberW  +
cmp eax 0FFFFFFFFh +
jz loc_103FE4D  +
push eax  +
call ds:SHELL32_64  +
cmp eax 2 +
jz loc_1056387  +
cmp eax 5 +
jz loc_1056387  +
lea eax [ebp+szPath] +
push eax  +
call ds:PathIsDirectoryW  +
test eax eax +
jz loc_105639C  +
mov esi ds:LoadStringW +
mov edi 100h +
cmp [ebp+uID] ebx +
jz loc_103FE8B  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call esi  +
lea ebx [ebp+Buffer] +
xor eax eax +
cmp [ebp+arg_10] eax +
jnz loc_10563B2  +
push [ebp+arg_14]  +
push eax  +
push ebx  +
lea eax [ebp+szPath] +
push eax  +
push [ebp+var_610]  +
push [ebp+var_614]  +
call ds:SHELL32_61  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
push dword ptr [ebp+18h]  +
push offset loc_103FC05  +
push dword ptr [ebp+8]  +
call sub_103519B  +
jmp loc_103FC28  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 4Eh  +
push hWnd  +
call ds:SendMessageW  +
jmp loc_103FC39  +
***
cmp dword ptr [ebp+10h] 1 +
jnz loc_103FC28  +
mov eax dword_10B10EC +
test eax eax +
jz loc_103FC28  +
push eax  +
call ds:SetForegroundWindow  +
xor eax eax +
jmp loc_103FC39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_10B24CC 0 +
push ebx  +
push esi  +
mov ebx ecx +
jz loc_103FF6D  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_103FFF2  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_10571BE  +
push offset dword_10351F0  +
push dword ptr [ebx+4]  +
call sub_10409B1  +
test eax eax +
jnz loc_103FFE4  +
push 104h  +
lea eax [ebp+WindowName] +
push eax  +
push 2D2h  +
push hInstance  +
call ds:LoadStringW  +
lea eax [ebp+WindowName] +
push eax  +
push 8002h  +
call ds:FindWindowW  +
mov esi eax +
test esi esi +
jnz loc_10571F6  +
push 10h  +
call sub_1002B98  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_103FFE4  +
push esi  +
lea ecx [ebx+0AF8h] +
call sub_1040997  +
push 0  +
push 2008h  +
push esi  +
push offset loc_1040004  +
call ds:__imp_SHCreateThread  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
test al al +
jz loc_103FF4C  +
jmp loc_103FF6D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx offset unk_10B1460 +
pop ebp  +
jmp loc_103FC42  +
***
mov eax [ecx+0C10h] +
test eax eax +
jz loc_104003B  +
push 0  +
push 0  +
push 434h  +
push eax  +
call ds:SendMessageW  +
test eax eax +
jz loc_104003B  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
or dword ptr [ecx+0BFCh] 1 +
xor eax eax +
lea edx [ecx+0DE4h] +
cmp [edx] eax +
jnz loc_105659C  +
mov edx [ecx+0C10h] +
cmp edx eax +
jz loc_104007B  +
push [ebp+lParam]  +
push dword ptr [ecx+4]  +
push 435h  +
push edx  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:SystemParametersInfoW +
push 0  +
lea eax [ebp+pvParam] +
push eax  +
push 8  +
push 48h  +
mov [ebp+pvParam] 8 +
call esi  +
mov eax [ebp+arg_0] +
mov ebx [ebp+var_4] +
push 0  +
mov [ebp+var_4] eax +
lea eax [ebp+pvParam] +
push eax  +
push 8  +
push 49h  +
call esi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
push esi  +
xor edi edi +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1040137  +
push esi  +
call ds:IsIconic  +
test eax eax +
jnz loc_1040137  +
push esi  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1040137  +
push 0FFFFFFF0h  +
push esi  +
call ds:GetWindowLongW  +
test eax 20000h +
jz loc_1040137  +
mov ecx 0C80000h +
and eax ecx +
cmp eax ecx +
jnz loc_104013F  +
push edi  +
push esi  +
call ds:GetSystemMenu  +
cmp eax edi +
jz loc_1040137  +
push edi  +
push 0F020h  +
push eax  +
call ds:GetMenuState  +
cmp eax 0FFFFFFFFh +
jz loc_104013F  +
shr eax 1 +
not eax  +
and eax 1 +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor edi edi +
inc edi  +
jmp loc_1040137  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_104015B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0CD4h] 0 +
jnz loc_104018A  +
push 8  +
push 40h  +
call ds:LocalAlloc  +
mov [esi+0CD4h] eax +
mov eax [esi+0CD4h] +
test eax eax +
jz loc_10401E4  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [esi+0CD4h] +
mov eax [eax+4] +
test eax eax +
jnz loc_10563D0  +
push 4  +
push 34h  +
call ds:off_1003E00  +
mov ecx [esi+0CD4h] +
mov [ecx+4] eax +
mov eax [esi+0CD4h] +
cmp dword ptr [eax+4] 0 +
jz loc_10401E4  +
mov ecx [esi+4] +
mov [ebp+lParam] ecx +
mov eax [eax+4] +
mov [ebp+var_4] eax +
lea eax [ebp+lParam] +
push eax  +
push offset sub_10401EE  +
call ds:EnumWindows  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
mov esi [ebp+hWnd] +
push esi  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_104020D  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
push edi  +
mov edi [ebp+arg_4] +
cmp esi [edi] +
jz loc_1040251  +
cmp esi dword_10B10EC +
jz loc_1040251  +
lea eax [ebp+wndpl] +
push eax  +
push esi  +
mov [ebp+wndpl.length] 2Ch +
call ds:GetWindowPlacement  +
cmp [ebp+wndpl.showCmd] 2 +
jz loc_1040251  +
lea eax [ebp+var_34] +
push eax  +
push 7FFFFFFFh  +
push dword ptr [edi+4]  +
mov [ebp+var_34] esi +
mov [ebp+var_30] 1 +
call ds:off_1003DB4  +
pop edi  +
jmp loc_1040205  +
***
push 0  +
push 0  +
mov ecx esi +
call sub_1040269  +
jmp loc_10024CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub esp 10h +
push esi  +
push edi  +
mov edi ecx +
xor ecx ecx +
cmp eax ecx +
jnz loc_10630C0  +
mov eax [edi+0A8h] +
mov [ebp+var_C] ecx +
cmp eax ecx +
jz loc_1040330  +
mov eax [eax] +
mov [ebp+var_10] eax +
xor esi esi +
cmp [ebp+var_10] ecx +
jle loc_1040327  +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp [ebp+var_C] ecx +
jnz loc_1040326  +
mov eax [edi+0A8h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
cmp [ebp+arg_0] ecx +
jnz loc_1040338  +
lea edx [ebp+var_8] +
push edx  +
mov [ebp+var_8] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_104031E  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_1040315  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call sub_10400C8  +
test eax eax +
jz loc_10402F9  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test al 2 +
jnz loc_10630C7  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10402D2  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor ecx ecx +
inc esi  +
cmp esi [ebp+var_10] +
jl loc_10402A7  +
pop ebx  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
leave   +
retn 8  +
mov [ebp+var_10] ecx +
jmp loc_1040298  +
cmp eax [ebp+arg_0] +
jz loc_10402BD  +
jmp loc_1040320  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push 5  +
mov ebx 8007000Eh +
call sub_100801C  +
test eax eax +
jz loc_1040419  +
mov eax [esi+0A8h] +
xor edi edi +
xor ebx ebx +
cmp eax edi +
jz loc_1040406  +
mov eax [eax] +
mov [ebp+var_C] eax +
cmp [ebp+var_C] edi +
jle loc_10403FD  +
test ebx ebx +
jl loc_10637C2  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
and [ebp+var_8] 0 +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
test ebx ebx +
jl loc_10403EF  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10403E6  +
mov eax [esi+48h] +
test byte ptr [eax+0BFCh] 2 +
jnz loc_106379F  +
mov ecx [ebp+arg_0] +
push 0  +
push [ebp+var_4]  +
call sub_1006610  +
mov ebx eax +
test ebx ebx +
jge loc_10403B0  +
jmp loc_104040E  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc edi  +
cmp edi [ebp+var_C] +
jl loc_1040384  +
test ebx ebx +
jl loc_10637C2  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
mov [ebp+var_C] edi +
jmp loc_104037F  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10403E6  +
mov ecx [ebp+arg_0] +
call sub_1008370  +
jmp loc_10403FD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
mov ebx [ebp+8] +
lea eax [ebp-2Ch] +
push eax  +
push dword ptr [ebx]  +
mov dword ptr [ebp-2Ch] 2Ch +
mov dword ptr [ebx+4] 1 +
call ds:GetWindowPlacement  +
test eax eax +
jz loc_104046F  +
push esi  +
push edi  +
push 0Bh  +
pop ecx  +
lea edi [ebp-2Ch] +
lea esi [ebx+8] +
xor eax eax +
cmps   +
pop edi  +
pop esi  +
jz loc_1040477  +
mov dword_10B20D0 1 +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn 8  +
***
and [ebx+4] eax +
jmp loc_104046F  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_104048F  +
jmp loc_10024CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov ecx [ebx+48h] +
xor edi edi +
push 219h  +
inc edi  +
call sub_1040167  +
push 14h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104051C  +
and dword ptr [eax] 0 +
mov esi eax +
test esi esi +
jz loc_104050E  +
push esi  +
mov ecx ebx +
call sub_1040344  +
test eax eax +
jl loc_1063E80  +
mov eax [ebp+arg_4] +
mov [esi+0Ch] eax +
mov eax dword_10B10EC +
mov [esi+4] eax +
mov eax [ebp+arg_0] +
push 0  +
mov [esi+8] eax +
mov eax [ebx+48h] +
mov eax [eax+0BFCh] +
push 2001h  +
push esi  +
push offset loc_1040525  +
mov [esi+10h] eax +
call ds:__imp_SHCreateThread  +
mov edi eax +
neg edi  +
sbb edi edi +
inc edi  +
jnz loc_1063E80  +
xor eax eax +
test edi edi +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
pop ebp  +
retn 8  +
xor esi esi +
jmp loc_10404BA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
mov eax [ebx+10h] +
push esi  +
mov [ebp-218h] eax +
and dword ptr [ebp-218h] 2 +
push edi  +
mov [ebp-224h] eax +
mov edi 10000h +
mov esi 80000000h +
jnz loc_1063C1D  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_1063C92  +
push 0  +
mov byte ptr [ebp-20Dh] 1 +
call sub_1040084  +
mov [ebp-220h] eax +
mov eax [ebx] +
test eax eax +
jz loc_1040899  +
mov eax [eax] +
dec eax  +
mov [ebp-21Ch] eax +
js loc_104060B  +
mov ecx [ebx] +
mov ecx [ecx+4] +
mov eax [ecx+eax*4] +
mov [ebp-228h] eax +
test eax eax +
jz loc_1040603  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov [ebp-214h] eax +
call sub_10400C8  +
test eax eax +
jz loc_1040880  +
push 7  +
push dword ptr [ebp-214h]  +
call ds:ShowWindow  +
push dword ptr [ebp-214h]  +
call ds:IsIconic  +
test eax eax +
jnz loc_1040603  +
push 0FFFFFFFFh  +
push 0F020h  +
push 112h  +
push dword ptr [ebp-214h]  +
call ds:SendMessageW  +
test eax eax +
jnz loc_1063CC3  +
mov eax [ebp-21Ch] +
jmp loc_1040590  +
***
cmp byte ptr [ebp-20Dh] 0 +
jz loc_104061F  +
push dword ptr [ebp-220h]  +
call sub_1040084  +
push 0  +
push dword ptr [ebp-224h]  +
push 564h  +
push hWnd  +
call ds:PostMessageW  +
push 0  +
push offset loc_1040149  +
mov ecx ebx +
call sub_100831C  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_104065F  +
push 0  +
push dword ptr [ebx+8]  +
push 453h  +
push dword ptr [ebx+4]  +
call ds:PostMessageW  +
push 1  +
mov ecx ebx +
call sub_10406BA  +
cmp dword ptr [ebp-218h] 2 +
jz loc_1063D7D  +
cmp dword_10B24CC 0 +
jz loc_10406A2  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10408A0  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jnz loc_1063DFB  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10082DC  +
test [ebp+arg_0] 1 +
jz loc_10406D4  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push ecx  +
mov ecx ebx +
call sub_10406EE  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0CD4h] +
and dword ptr [esi+0C70h] 0 +
test eax eax +
jz loc_104071C  +
mov eax [eax+4] +
test eax eax +
jz loc_104071C  +
push 0  +
push offset loc_1040428  +
push eax  +
call ds:off_104072C  +
test [ebp+arg_0] 2 +
jnz loc_1055FF7  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B22E8 0FFFFFFFFh +
jnz loc_1040752  +
push 183h  +
push offset dword_10B22E8  +
call sub_1012091  +
mov eax dword_10B22E8 +
test eax eax +
jz loc_105CCB9  +
pop ebp  +
jmp eax  +
***
push edi  +
call sub_1071526  +
jmp loc_103FBF3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi offset dword_1040870 +
push esi  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz loc_1040860  +
push 80h  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_0] +
mov [ebp+var_84] eax +
add esp 0Ch +
xor eax eax +
inc eax  +
push eax  +
mov [ebp+var_88] eax +
lea eax [ebp+var_88] +
push eax  +
push 0EAAh  +
push esi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov eax [ebp-228h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test al 2 +
jz loc_1040603  +
jmp loc_1063CB3  +
***
xor eax eax +
jmp loc_1040590  +
***
test al al +
jz loc_104068B  +
jmp loc_10406A2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push esi  +
dec eax  +
dec eax  +
push edi  +
mov edi [ebp+hWnd] +
mov esi ecx +
jz loc_105F909  +
dec eax  +
jnz loc_10408E5  +
push 3  +
push edi  +
call ds:KillTimer  +
push 0  +
push 0  +
push 40Bh  +
push edi  +
call ds:PostMessageW  +
push [ebp+arg_C]  +
mov eax [esi] +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push edi  +
call dword ptr [eax+98h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
lea ecx [eax-1D4h] +
call sub_1040914  +
jmp loc_103607F  +
***
push 3  +
push dword ptr [ecx+44h]  +
call ds:SetTimer  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
lea eax [ecx+0CB0h] +
xor ecx ecx +
cmp dword ptr [edx+8] 0FFFFFFF7h +
setz cl  +
lea ecx [ecx+ecx-1] +
add [eax] ecx +
js loc_1056140  +
mov eax [eax] +
neg eax  +
sbb eax eax +
and eax 8Ah +
add eax 7F00h +
push eax  +
push 0  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpRect]  +
push dword ptr [ecx+18h]  +
call ds:GetWindowRect  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_105C5FA  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
xor eax eax +
test byte ptr [esi+40h] 2 +
jnz loc_1040A6B  +
mov eax [esi+0CD8h] +
mov ecx eax +
shl ecx 4 +
mov ecx [ecx+esi+48h] +
mov [ebp+rc.top] ecx +
test al 1 +
jz loc_1056261  +
add eax 5 +
shl eax 4 +
mov eax [eax+esi] +
mov [ebp+rc.bottom] eax +
call sub_10344B4  +
test eax eax +
jnz loc_1056273  +
mov ecx [esi+0CD8h] +
mov eax ecx +
shl eax 4 +
mov eax [eax+esi+44h] +
mov [ebp+rc.left] eax +
mov edx ecx +
test cl 1 +
jz loc_1040A6E  +
shl ecx 4 +
mov ecx [ecx+esi+44h] +
add ecx [esi+0B18h] +
cmp dword ptr [esi+0D28h] 0 +
mov [ebp+rc.right] ecx +
jnz loc_105629F  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
pop esi  +
leave   +
retn   +
shl ecx 4 +
mov ecx [ecx+esi+4Ch] +
jmp loc_1040A42  +
***
cmp ebx 4 +
jnz loc_1037170  +
cmp eax 1 +
jmp loc_103711F  +
***
mov ecx offset unk_10B1460 +
call sub_10409D2  +
test eax eax +
jnz loc_1036F70  +
push 4  +
mov ecx esi +
call sub_10370F8  +
jmp loc_1036F70  +
***
mov [ebp+arg_0] edx +
mov edi ecx +
jmp loc_10133DE  +
mov eax [esi+20h] +
mov [ebp+var_84.bmiHeader.biWidth] eax +
mov eax [esi+24h] +
jmp loc_101331C  +
***
cmp eax edi +
jnz loc_1037141  +
jmp loc_10575B9  +
***
xor eax eax +
inc eax  +
mov [esi+0F0h] eax +
push eax  +
jmp loc_1037255  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_10482D1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_104822B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+9Ch] 0 +
jz loc_10386C5  +
mov eax [esi+64h] +
cmp [ebx] eax +
jz loc_10386C5  +
mov [ebp+EventTrack.hwndTrack] eax +
lea eax [ebp+EventTrack] +
push eax  +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 80000002h +
call ds:TrackMouseEvent  +
and dword ptr [esi+9Ch] 0 +
jmp loc_10386C5  +
***
cmp dword ptr [esi+6D4h] 2 +
mov ebx [esi+1E0h] +
jnz loc_103827E  +
jmp loc_105DD1A  +
***
cmp eax 5 +
jz loc_1061ECC  +
cmp eax 6 +
jz loc_1040BC8  +
cmp eax 7 +
jz loc_1039804  +
xor eax eax +
jmp loc_103980E  +
test ecx 400h +
jz loc_1040BC1  +
jmp loc_1061E2A  +
***
mov [esi+6D8h] eax +
mov [esi+6D4h] ecx +
jmp loc_1037578  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_18] ax +
mov eax [ebp+arg_4] +
neg eax  +
sbb eax eax +
mov [ebp+arg_0] edi +
mov edi ds:SHLWAPI_484 +
mov word ptr [ebp+var_10] ax +
mov ebx offset dword_1013948 +
jmp loc_1040D40  +
***
cmp eax 3 +
jz loc_105E273  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1037C66  +
mov ecx ebx +
call sub_104132C  +
test eax eax +
jz loc_1037C66  +
mov [ebp+var_4] 1 +
jmp loc_1037C66  +
***
mov eax [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jz loc_103BD30  +
cmp eax [ebx+3Ch] +
jz loc_103BD30  +
and [ebp+var_210] edx +
mov [ebx+3Ch] eax +
cmp eax 3 +
jz loc_104BF29  +
cmp eax 2 +
jz loc_104BF29  +
mov dword ptr [ebx+38h] 12h +
jmp loc_103BD30  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_103B7C8 +
xor eax eax +
cmps   +
mov esi [ebp+8] +
jnz loc_106239A  +
push dword ptr [ebp+14h]  +
lea eax [esi-8] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_106239A  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
push 4  +
pop ecx  +
mov esi offset dword_1040D14 +
xor edx edx +
cmps   +
pop edi  +
mov eax 80070057h +
pop esi  +
jnz loc_1040D0E  +
cmp dword ptr [ebp+10h] 12Eh +
jnz loc_1040D0E  +
cmp dword ptr [ebp+14h] 0FFFFFFFFh +
jz loc_1040D0E  +
cmp dword ptr [ebp+14h] 3 +
jz loc_104BF44  +
cmp dword ptr [ebp+14h] 2 +
jz loc_104BF44  +
push 0Eh  +
mov eax [ebp+8] +
pop ecx  +
cmp [eax+30h] ecx +
jnz loc_104ABBB  +
xor eax eax +
pop ebp  +
retn 18h  +
***
push 0  +
lea ecx [ebp+var_18] +
push ecx  +
push eax  +
push 12Eh  +
push ebx  +
push offset dword_103B7C8  +
push dword ptr [esi+238h]  +
call edi  +
jmp loc_1040D81  +
mov eax [esi+6D4h] +
mov ecx eax +
imul ecx ecx +
add ecx [ebp+arg_0] +
imul ecx ecx +
cmp byte ptr [ecx+esi+278h] 0 +
jz loc_1040D81  +
cmp [ebp+arg_0] 2 +
jz loc_1040E78  +
cmp [ebp+arg_0] 4 +
jz loc_1040DAB  +
cmp [ebp+arg_0] 3 +
jz loc_10426C3  +
cmp [ebp+arg_0] 8 +
jz loc_1040D24  +
cmp [ebp+arg_0] 6 +
jz loc_1040D91  +
inc [ebp+arg_0]  +
cmp [ebp+arg_0] 0Ah +
jb loc_1040D40  +
xor edi edi +
jmp loc_10375EB  +
push 0  +
lea ecx [ebp+var_18] +
push ecx  +
push eax  +
push 12Eh  +
push ebx  +
push offset dword_1036948  +
push dword ptr [esi+1E8h]  +
jmp loc_1040D3C  +
push 0  +
lea ecx [ebp+var_18] +
push ecx  +
push eax  +
push 12Eh  +
push ebx  +
push offset dword_10369A0  +
push dword ptr [esi+198h]  +
jmp loc_1040D3C  +
***
push dword ptr [ebp+14h]  +
lea eax [esi-18h] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jge loc_103B966  +
jmp loc_103B954  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1036C65  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1014EC5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 4  +
pop ecx  +
mov esi offset dword_1014084 +
xor edx edx +
cmps   +
pop edi  +
mov eax 80070057h +
pop esi  +
jnz loc_1040E44  +
cmp [ebp+arg_8] 12Eh +
jnz loc_1040E44  +
cmp [ebp+arg_C] 0FFFFFFFFh +
jz loc_1040E44  +
mov ecx [ebp+arg_0] +
push [ebp+arg_C]  +
add ecx 0FFFFFFDCh +
call sub_1040E4D  +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 3  +
pop eax  +
cmp [ebp+arg_0] eax +
jz loc_1062AA1  +
cmp [ebp+arg_0] 0 +
mov dword ptr [ecx+6CCh] 2 +
jz loc_1042794  +
xor eax eax +
pop ebp  +
retn 4  +
***
push 0  +
lea ecx [ebp+var_18] +
push ecx  +
push eax  +
push 12Eh  +
push ebx  +
push offset dword_10369C0  +
push dword ptr [esi+148h]  +
jmp loc_1040D3C  +
***
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [ebp+arg_C] 3 +
setz al  +
add eax 6 +
mov [ecx+30h] eax +
jmp loc_1036A9D  +
***
lea eax [esi+0B8h] +
cmp dword ptr [eax] 0 +
jnz loc_105E51B  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1040ECE  +
jmp loc_1001FDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+lParam] 0 +
push edi  +
mov edx ecx +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov [ebp+var_C] ecx +
movsx ecx word ptr [eax+0Ch] +
mov [ebp+var_1C] eax +
movsx eax word ptr [eax+0Eh] +
mov [ebp+var_10] eax +
push 6  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov [ebp+var_14] ecx +
mov ecx edx +
call sub_10381F8  +
neg eax  +
sbb eax eax +
neg eax  +
pop edi  +
leave   +
retn 8  +
***
mov eax [ebp+8] +
cmp dword ptr [eax+6BCh] 2 +
jz loc_1014019  +
push ebx  +
push 2  +
***
lea ecx [eax-18h] +
call sub_1037C30  +
jmp loc_1014019  +
***
lea eax [esi+0C4h] +
cmp [eax] ecx +
jnz loc_1038709  +
mov ecx [ebx] +
mov [esi+0C0h] ecx +
mov [eax] edi +
jmp loc_103871D  +
***
mov [ebp+hWnd] eax +
jmp loc_103BAF0  +
***
cmp [ebp+Msg.wParam] 0Dh +
jnz loc_1001ECC  +
jmp loc_1056747  +
cmp [ebp+Msg.wParam] 9 +
jnz loc_1001F0A  +
jmp loc_105680C  +
test al al +
jz loc_1036E96  +
jmp loc_1001ECC  +
test eax eax +
jnz loc_1001EDB  +
jmp loc_1001DC7  +
***
mov esi ds:GetAncestor +
push ebx  +
push 10002h  +
push 128h  +
push 3  +
push [ebp+hWndTo]  +
call esi  +
push eax  +
call ds:SendMessageW  +
cmp [ebp+arg_8] 0Dh +
jnz loc_103989B  +
jmp sub_10579DF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:GetDlgCtrlID +
push edi  +
mov edi ds:SendMessageW +
mov [ebp+var_4] ecx +
test ebx ebx +
jnz sub_1041308  +
mov ecx [ebp+var_4] +
call sub_103872C  +
test eax eax +
jnz loc_1041024  +
push eax  +
push eax  +
mov eax [ebp+var_4] +
push dword ptr [eax+38h]  +
call ds:GetNextDlgTabItem  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1041024  +
push 5  +
push eax  +
call ds:GetWindow  +
mov ebx eax +
test ebx ebx +
jnz loc_104242C  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
push 0Ah  +
lea esi [ecx+0F0h] +
pop edi  +
mov eax [esi] +
mov [ebp+EventTrack.hwndTrack] eax +
lea eax [ebp+EventTrack] +
push eax  +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 80000001h +
call ds:TrackMouseEvent  +
add esi 28h +
dec edi  +
jnz loc_1041044  +
mov edi ds:PeekMessageW +
mov ebx 49F0003h +
mov esi 200h +
push ebx  +
push esi  +
push esi  +
push 0  +
lea eax [ebp+Msg] +
push eax  +
call edi  +
test eax eax +
jnz loc_1041077  +
mov esi 2A1h +
push ebx  +
push esi  +
push esi  +
push 0  +
lea eax [ebp+Msg] +
push eax  +
call edi  +
test eax eax +
jnz loc_104108B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax [ebx+708h] +
imul eax eax +
push 37h  +
lea esi [ebx+724h] +
lea edi [eax+ebx+268h] +
pop ecx  +
movs   +
lea esi [ebx+6F8h] +
mov ecx [esi] +
xor edi edi +
cmp ecx edi +
jz loc_10410D2  +
push 1  +
call sub_1041A75  +
push dword ptr [ebx+38h]  +
mov [esi] edi +
mov byte ptr [ebx+700h] 0 +
call ds:IsWindowVisible  +
test eax eax +
jz loc_104113A  +
mov eax [ebx+708h] +
imul eax eax +
cmp byte ptr [eax+ebx+278h] 0 +
jz loc_104112B  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_1C] ax +
or eax 0FFFFFFFFh +
push edi  +
mov [ebp+var_14] ax +
lea eax [ebp+var_1C] +
push eax  +
push edi  +
push 143h  +
push offset dword_1013948  +
push offset loc_10362A8  +
lea eax [ebx+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
push 1  +
push dword ptr [ebx+708h]  +
mov ecx ebx +
call sub_1037555  +
mov ecx ebx +
call sub_1041030  +
mov eax [ebx+38h] +
push 3  +
lea ecx [ebp+var_C] +
push ecx  +
push edi  +
push 4Eh  +
push eax  +
mov [ebp+var_C] eax +
mov [ebp+var_8] edi +
mov [ebp+var_4] 0E4h +
call ds:SHLWAPI_178  +
cmp dword_10B24CC edi +
jz loc_10412C5  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10411B1  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_10412C5  +
jmp loc_105E1F4  +
test al al +
jz loc_10418F9  +
jmp loc_104191B  +
xor eax eax +
jmp loc_1041952  +
test al al +
jz loc_1041176  +
jmp loc_10412C5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
fldz   +
sub esp 1Ch +
fcomp  [ebp+arg_0] +
push ebx  +
mov ebx ecx +
inc dword ptr [ebx+710h]  +
push esi  +
push edi  +
fnstsw  ax +
test ah 44h +
jnp loc_10418E3  +
fld1   +
fcomp  [ebp+arg_0] +
fnstsw  ax +
test ah 44h +
jnp loc_104109F  +
fld  [ebp+arg_0] +
fmul  ds:dbl_10412D0 +
fmul  ds:dbl_1041540 +
call _CIsin  +
fstp  [ebp+arg_0] +
mov eax [ebx+6D4h] +
fld  [ebp+arg_0] +
imul eax eax +
lea eax [eax+ebx+268h] +
push eax  +
push ecx  +
push ecx  +
lea eax [ebx+724h] +
mov ecx ebx +
fstp  [esp+34h+var_34] +
push eax  +
mov eax [ebx+704h] +
imul eax eax +
lea eax [eax+ebx+268h] +
push eax  +
call sub_104157C  +
push 0  +
push dword ptr [ebx+6D4h]  +
mov ecx ebx +
call sub_1037555  +
mov ecx [ebx+6F8h] +
test ecx ecx +
jz loc_10412C5  +
mov eax [ebx+708h] +
imul eax eax +
push dword ptr [eax+ebx+26Ch]  +
push dword ptr [eax+ebx+268h]  +
push 1  +
call sub_104175B  +
mov esi eax +
test esi esi +
jz loc_104129B  +
push esi  +
mov ecx ebx +
call sub_1038EB8  +
mov ecx [ebx+6F8h] +
push esi  +
call sub_1041A4A  +
push dword ptr [ebx+720h]  +
fld  [ebp+arg_0] +
push ecx  +
push ecx  +
mov ecx [ebx+6F8h] +
fstp  [esp+34h+var_34] +
call sub_104140C  +
test eax eax +
jz loc_10412C5  +
push 1  +
push 0  +
push dword ptr [ebx+38h]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
call esi  +
lea ecx [ebp-10h] +
push ecx  +
push eax  +
push 4Eh  +
push ebx  +
mov [ebp-0Ch] eax +
mov dword ptr [ebp-8] 0FFFFFFF8h +
call edi  +
jmp loc_1040FF0  +
***
cmp dword ptr [ecx+40h] 0 +
jz loc_1041352  +
call sub_1011DEE  +
test eax eax +
jz loc_1041352  +
call sub_10121BA  +
test eax eax +
jz loc_1041352  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1041352  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnz loc_105DC1B  +
pop ebp  +
retn 10h  +
***
push [ebp+hRgn]  +
call ds:DeleteObject  +
jmp loc_1037954  +
***
mov eax [ebp+hWnd] +
cmp eax [esi+118h] +
jnz loc_103C7BD  +
jmp loc_105DD86  +
mov [ebp+arg_0] edi +
jmp loc_103C82C  +
or [ebp+EventTrack.dwFlags] 80000000h +
jmp loc_103C86C  +
test eax eax +
jz loc_103C7BD  +
jmp loc_103871D  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_1040FCB  +
jmp loc_103C883  +
***
mov eax [ebp+arg_4] +
mov eax [eax] +
jmp loc_10416A3  +
***
push edx  +
mov ecx esi +
call sub_1038DDB  +
xor eax eax +
inc eax  +
jmp loc_100DF67  +
***
push edi  +
push edx  +
push 84h  +
push dword ptr [esi+38h]  +
call ds:DefWindowProcW  +
cmp [esi+0B4h] ebx +
jz loc_100DF67  +
jmp loc_104DE48  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+14h] +
xor ebx ebx +
cmp eax ebx +
jz loc_10414F4  +
cmp [esi+0Ch] ebx +
jz loc_10414F4  +
cmp [esi+10h] ebx +
jz loc_10414F4  +
mov ecx [esi+18h] +
imul ecx [esi+1Ch] +
shl ecx 2 +
push ecx  +
push ebx  +
push eax  +
mov [ebp+var_10] 1 +
call memset  +
mov eax [esi+20h] +
add esp 0Ch +
cmp eax [esi+28h] +
jnz loc_105EA0B  +
cmp [esi+40h] ebx +
jnz loc_105EA1A  +
mov eax [esi+30h] +
mov [ebp+var_8] ebx +
mov ecx ebx +
dec eax  +
cmp [esi+1Ch] ebx +
mov [ebp+var_4] eax +
mov [ebp+arg_8] ebx +
jle loc_10414EB  +
push edi  +
mov eax [esi+18h] +
imul eax [ebp+arg_8] +
shl eax 2 +
cmp ecx [ebp+var_4] +
jg loc_10414DF  +
lea edi [eax+ecx*4] +
mov eax [ebp+var_4] +
sub eax ecx +
inc eax  +
mov [ebp+var_C] eax +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
fld  [ebp+arg_0] +
push ecx  +
push ecx  +
mov ecx [esi+10h] +
fstp  [esp+24h+var_24] +
lea eax [ebx+edi] +
movzx eax byte ptr [eax+ecx] +
mov ecx [esi+0Ch] +
push eax  +
lea eax [ebx+edi] +
movzx eax byte ptr [eax+ecx] +
push eax  +
call sub_1041500  +
mov edx [esi+14h] +
lea ecx [edi+ebx] +
inc ebx  +
cmp ebx 4 +
mov [ecx+edx] al +
jl loc_10414A0  +
add edi 4 +
xor ebx ebx +
dec [ebp+var_C]  +
jnz loc_10414A0  +
mov ecx [ebp+var_8] +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
cmp eax [esi+1Ch] +
jl loc_104147D  +
pop edi  +
mov eax [ebp+var_10] +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov [ebp+var_10] ebx +
jmp loc_10414EB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov al byte ptr [ebp+arg_0] +
cmp al byte ptr [ebp+arg_4] +
jnz loc_1041511  +
pop ebp  +
retn 10h  +
fld1   +
movzx eax al +
fsub  [ebp+arg_8] +
mov [ebp+arg_0] eax +
movzx eax byte ptr [ebp+arg_4] +
fild  [ebp+arg_0] +
mov [ebp+arg_4] eax +
fmulp st(1) st +
fild  [ebp+arg_4] +
fmul  [ebp+arg_8] +
faddp st(1) st +
fadd  ds:dbl_1041540 +
call _ftol2  +
jmp loc_104150D  +
***
test al al +
jz loc_1041551  +
mov eax [ebx+4] +
jmp loc_1041563  +
cmp byte ptr [esi+edi-8] 0 +
jz loc_10416A6  +
test al al +
jnz loc_104154C  +
mov eax [esi+edi] +
mov [edi] eax +
cmp byte ptr [ebx-4] 0 +
jz loc_10413C1  +
mov eax [ebx+0Ch] +
jmp loc_10416A3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
fld  [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push ecx  +
push ecx  +
fstp  [esp+20h+var_20] +
push dword ptr [esi]  +
push dword ptr [edi]  +
call sub_104135A  +
fld  [ebp+arg_8] +
mov ebx [ebp+arg_10] +
push ecx  +
push ecx  +
fstp  [esp+20h+var_20] +
mov [ebx] eax +
push dword ptr [esi+4]  +
push dword ptr [edi+4]  +
call sub_104135A  +
fld  [ebp+arg_8] +
push ecx  +
push ecx  +
fstp  [esp+20h+var_20] +
mov [ebx+4] eax +
push dword ptr [esi+8]  +
push dword ptr [edi+8]  +
call sub_104135A  +
fld  [ebp+arg_8] +
push ecx  +
push ecx  +
fstp  [esp+20h+var_20] +
mov [ebx+8] eax +
push dword ptr [esi+0Ch]  +
push dword ptr [edi+0Ch]  +
call sub_104135A  +
fld  [ebp+arg_8] +
push ecx  +
push ecx  +
fstp  [esp+20h+var_20] +
mov [ebx+0Ch] eax +
push dword ptr [esi+0D8h]  +
push dword ptr [edi+0D8h]  +
call sub_104135A  +
mov [ebx+0D8h] eax +
lea eax [esi+20h] +
mov [ebp+arg_4] eax +
lea eax [ebx+18h] +
mov [ebp+arg_0] esi +
sub [ebp+arg_0] edi +
mov [ebp+var_8] eax +
mov [ebp+arg_10] ebx +
sub [ebp+arg_10] edi +
lea eax [edi+14h] +
mov [ebp+var_4] eax +
sub esi ebx +
mov [ebp+var_C] 0Ah +
fld  [ebp+arg_8] +
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
fstp  [esp+20h+var_20] +
push dword ptr [ecx+eax]  +
push dword ptr [eax]  +
call sub_104135A  +
fld  [ebp+arg_8] +
mov ecx [ebp+arg_10] +
mov ebx [ebp+var_4] +
mov edi [ebp+var_8] +
push ecx  +
push ecx  +
fstp  [esp+20h+var_20] +
mov [ecx+ebx] eax +
push dword ptr [edi+esi+4]  +
push dword ptr [ebx+8]  +
call sub_104135A  +
mov [edi+4] eax +
mov al [ebx-4] +
test al al +
jz loc_1041551  +
cmp byte ptr [esi+edi-8] 0 +
jz loc_1041548  +
fld  [ebp+arg_8] +
push ecx  +
push ecx  +
fstp  [esp+20h+var_20] +
push dword ptr [esi+edi]  +
push dword ptr [ebx+4]  +
call sub_104135A  +
fld  [ebp+arg_8] +
push ecx  +
mov [edi] eax +
mov eax [ebp+arg_4] +
push ecx  +
fstp  [esp+20h+var_20] +
push dword ptr [eax]  +
push dword ptr [ebx+0Ch]  +
call sub_104135A  +
mov [edi+8] eax +
add [ebp+arg_4] 14h +
add ebx 14h +
add edi 14h +
dec [ebp+var_C]  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] edi +
jz loc_10416C3  +
mov eax [ebp+var_4] +
jmp loc_104162B  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 14h  +
***
mov eax edx +
dec eax  +
jz loc_104DE70  +
dec eax  +
jnz loc_100DF55  +
call ds:GetTickCount64  +
sub eax [esi+718h] +
mov dword ptr [ebp+Paint.rgbReserved+14h] ebx +
sbb edx [esi+71Ch] +
mov dword ptr [ebp+Paint.rgbReserved+1Ch] eax +
mov dword ptr [ebp+Paint.rgbReserved+18h] edx +
and dword ptr [ebp+Paint.rgbReserved+18h] 80000000h +
and edx 7FFFFFFFh +
mov [ebp-4] edx +
fild  qword ptr [ebp+Paint.rgbReserved+1Ch] +
fild  qword ptr [ebp+Paint.rgbReserved+14h] +
fchs   +
faddp st(1) st +
fidiv  dword ptr [esi+714h] +
fstp  qword ptr [ebp+Paint.rgbReserved+14h] +
fld1   +
fcomp  qword ptr [ebp+Paint.rgbReserved+14h] +
fnstsw  ax +
test ah 41h +
jnz loc_1041747  +
push dword ptr [esi+38h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1041747  +
fld  qword ptr [ebp+Paint.rgbReserved+14h] +
push ecx  +
push ecx  +
mov ecx esi +
fstp  qword ptr [esp+0] +
call sub_10411BF  +
jmp loc_100DF55  +
push 2  +
push dword ptr [esi+38h]  +
call ds:KillTimer  +
fld1   +
jmp loc_1041736  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+hDC] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor edi edi +
sub eax ebx +
mov esi ecx +
jz loc_10417DA  +
dec eax  +
jnz loc_1041782  +
mov eax [ebp+arg_4] +
mov edi [esi+4] +
mov [esi+28h] eax +
mov eax [ebp+arg_8] +
mov [esi+2Ch] eax +
push ebx  +
call ds:GetDC  +
mov [ebp+hDC] eax +
test eax eax +
jz loc_10417B8  +
push eax  +
call ds:CreateCompatibleDC  +
mov ebx eax +
test ebx ebx +
jz loc_10417A8  +
push edi  +
push ebx  +
call ds:SelectObject  +
mov [esi+34h] eax +
push [ebp+hDC]  +
call ds:GetDesktopWindow  +
push eax  +
call ds:ReleaseDC  +
push 0FFFFFFECh  +
push dword_10B10F4  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_105E9F2  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov edi [esi] +
mov [esi+20h] eax +
mov [esi+24h] ecx +
mov [esi+30h] eax +
jmp loc_1041782  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
mov ecx [eax] +
lea edi [esi+18h] +
mov [edi] ecx +
mov eax [eax+4] +
push esi  +
mov [edi+4] eax +
lea eax [esi+0Ch] +
push eax  +
push edi  +
push 0  +
call sub_1041857  +
test eax eax +
jl loc_1041840  +
lea eax [esi+4] +
push eax  +
lea eax [esi+10h] +
push eax  +
push edi  +
push 0  +
call sub_1041857  +
test eax eax +
jl loc_1041840  +
lea eax [esi+8] +
push eax  +
lea eax [esi+14h] +
push eax  +
push edi  +
push 0  +
call sub_1041857  +
mov ecx [ebp+arg_4] +
mov [esi+40h] ecx +
mov ecx [ebp+arg_8] +
pop edi  +
mov [esi+3Ch] ecx +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
xor esi esi +
push 2Ch  +
lea eax [ebp+var_2C] +
push esi  +
push eax  +
mov [edi] esi +
call memset  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov eax [eax+4] +
mov ebx [ebp+arg_0] +
mov [ebp+var_2C.bmiHeader.biHeight] eax +
xor eax eax +
add esp 0Ch +
inc eax  +
push 20h  +
mov [ebp+var_2C.bmiHeader.biPlanes] ax +
pop eax  +
mov [ebp+var_2C.bmiHeader.biSize] 28h +
mov [ebp+var_2C.bmiHeader.biWidth] ecx +
mov [ebp+var_2C.bmiHeader.biBitCount] ax +
mov [ebp+var_2C.bmiHeader.biCompression] esi +
cmp ebx esi +
jnz loc_10418B2  +
push esi  +
call ds:GetDC  +
mov ebx eax +
cmp ebx esi +
jz loc_10418D2  +
push esi  +
push esi  +
push [ebp+arg_8]  +
lea eax [ebp+var_2C] +
push esi  +
push eax  +
push ebx  +
call ds:CreateDIBSection  +
mov [edi] eax +
cmp [ebp+arg_0] ebx +
jz loc_10418D2  +
push ebx  +
push esi  +
call ds:ReleaseDC  +
cmp [edi] esi +
jz loc_105D2D3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
cmp dword_10B24CC 0 +
jz loc_104191B  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104119D  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jnz loc_105E05E  +
mov ecx [ebx+6F8h] +
xor esi esi +
cmp ecx esi +
jnz loc_105E09D  +
push 44h  +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_10411AA  +
mov [eax] esi +
mov [eax+4] esi +
mov [eax+8] esi +
mov [eax+0Ch] esi +
mov [eax+10h] esi +
mov [eax+14h] esi +
mov [eax+34h] esi +
mov [eax+38h] esi +
mov [ebx+6F8h] eax +
cmp eax esi +
jz loc_10419D9  +
push 0FFFFFFECh  +
push dword_10B10F4  +
xor edi edi +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_105E0A9  +
cmp dword_10B2138 2 +
jz loc_105E0BF  +
mov ecx [ebx+6F8h] +
push edi  +
push esi  +
lea eax [ebx+6B4h] +
push eax  +
call sub_10417F2  +
mov eax [ebx+704h] +
mov ecx [ebx+6F8h] +
imul eax eax +
push dword ptr [eax+ebx+26Ch]  +
push dword ptr [eax+ebx+268h]  +
push 0  +
call sub_104175B  +
mov esi eax +
test esi esi +
jz loc_10419D9  +
push esi  +
mov ecx ebx +
call sub_1038EB8  +
mov ecx [ebx+6F8h] +
push esi  +
call sub_1041A4A  +
cmp byte ptr [ebx+800h] 0 +
jnz loc_105E0C9  +
push 0  +
lea esi [ebx+708h] +
push dword ptr [esi]  +
mov ecx ebx +
call sub_1037555  +
mov ecx [ebx+6F8h] +
test ecx ecx +
jz loc_10412C5  +
mov eax [esi] +
imul eax eax +
push dword ptr [eax+ebx+26Ch]  +
push dword ptr [eax+ebx+268h]  +
push 1  +
call sub_104175B  +
mov esi eax +
test esi esi +
jz loc_10412C5  +
push esi  +
mov ecx ebx +
call sub_1038EB8  +
mov ecx [ebx+6F8h] +
push esi  +
call sub_1041A4A  +
jmp loc_10412C5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+34h]  +
push [ebp+arg_0]  +
call ds:SelectObject  +
push [ebp+arg_0]  +
call ds:DeleteDC  +
and dword ptr [esi+34h] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1041A9B  +
test [ebp+arg_0] 1 +
jz loc_1041A8F  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
mov edi ds:DeleteObject +
test eax eax +
jz loc_1041AB0  +
push eax  +
call edi  +
mov eax [esi+4] +
test eax eax +
jz loc_1041ABA  +
push eax  +
call edi  +
mov eax [esi+8] +
test eax eax +
jz loc_1041AC4  +
push eax  +
call edi  +
mov esi [esi+38h] +
test esi esi +
jz loc_1041ACE  +
push esi  +
call edi  +
pop edi  +
pop esi  +
retn   +
***
cmp [ebp+arg_0] 0 +
jz loc_1037A43  +
push edi  +
call sub_1041AF3  +
jmp loc_1037A6B  +
mov [ebp+arg_0] edi +
jmp loc_1037A35  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+38h] +
test eax eax +
jz loc_1041B0D  +
push eax  +
call ds:DeleteObject  +
and dword ptr [esi+38h] 0 +
mov eax [ebp+arg_0] +
mov [esi+38h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_1041B27  +
jmp loc_1038E77  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:CreateCompatibleDC  +
mov ebx eax +
test ebx ebx +
jz loc_1041B79  +
push edi  +
push dword ptr [esi+8]  +
mov edi ds:SelectObject +
push ebx  +
call edi  +
push 0CC0020h  +
mov [ebp+var_4] eax +
xor eax eax +
push eax  +
push eax  +
push ebx  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push eax  +
push eax  +
push [ebp+arg_0]  +
call ds:BitBlt  +
push [ebp+var_4]  +
push ebx  +
call edi  +
push ebx  +
call ds:DeleteDC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
call ds:IsCompositionActive  +
test eax eax +
jz loc_1038E8C  +
push dword ptr [esi+38h]  +
mov ecx [esi+6F8h] +
call sub_1041BA5  +
jmp loc_1038E8C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+38h] +
sub esp 10h +
test eax eax +
jz locret_1041BD6  +
and [ebp+var_4] 0 +
mov [ebp+var_8] eax +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_10] 3 +
mov [ebp+var_C] 1 +
call ds:DwmEnableBlurBehindWindow  +
leave   +
retn 4  +
***
push [ebp+arg_0]  +
call sub_1041BEC  +
jmp loc_1037C85  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push 2  +
push dword ptr [ebx+38h]  +
call ds:KillTimer  +
mov esi [ebp+arg_0] +
lea edi [ebx+6D4h] +
mov eax [edi] +
mov byte ptr [ebx+700h] 1 +
mov dword ptr [ebx+714h] 12Ch +
mov dword ptr [ebx+70Ch] 1Eh +
mov [ebx+704h] eax +
mov [ebx+708h] esi +
call ds:GetTickCount64  +
imul esi esi +
and dword ptr [ebx+710h] 0 +
mov [ebx+718h] eax +
mov eax [edi] +
imul eax eax +
add eax ebx +
mov [ebx+71Ch] edx +
mov edx [eax+268h] +
lea ecx [esi+ebx] +
lea esi [ecx+268h] +
cmp edx [esi] +
jnz loc_1041CCD  +
mov eax [eax+26Ch] +
cmp eax [ecx+26Ch] +
jnz loc_1041CCD  +
xor eax eax +
push 37h  +
pop ecx  +
mov [ebx+800h] al +
lea edi [ebx+724h] +
movs   +
mov ecx ebx +
call sub_1041030  +
xor esi esi +
push esi  +
push esi  +
push dword ptr [ebx+38h]  +
call ds:SetWindowRgn  +
fldz   +
push ecx  +
push ecx  +
mov ecx ebx +
fstp  [esp+14h+var_14] +
call sub_10411BF  +
push esi  +
push dword ptr [ebx+70Ch]  +
push 2  +
push dword ptr [ebx+38h]  +
call ds:SetTimer  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1041C7F  +
***
push 67E693CFh  +
fst  dword ptr [edx] +
inc ecx  +
xchg esp [ebx-67h] +
pop ss  +
sub ch dh +
pop esi  +
pop edx  +
***
test ecx ecx +
jz loc_10377FC  +
cmp ecx 3 +
jz loc_105DC63  +
cmp ecx 2 +
jnz loc_1037871  +
push 8  +
push ecx  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1037B2A  +
push 0  +
lea eax [ebp+lParam] +
push 0Eh  +
push eax  +
lea eax [ebp+rc] +
jmp loc_1037868  +
***
mov [ebp+var_8] 1 +
jmp loc_1039182  +
mov [ebp+var_14] 2 +
jmp loc_10391BD  +
***
push eax  +
mov ecx esi +
call sub_1041E26  +
jmp loc_103B836  +
***
xor eax eax +
jmp loc_1041E80  +
mov eax [edi+0Ch] +
cmp eax ecx +
jz loc_1041DDD  +
movzx eax word ptr [eax+8] +
push eax  +
call ds:CharUpperW  +
movzx eax ax +
mov [ebp+var_4] eax +
lea eax [ebp+pvParam] +
push eax  +
mov ecx esi +
mov [ebp+pvParam] ebx +
call sub_1014039  +
cmp [ebp+pvParam] 0 +
jz loc_1041D81  +
movzx eax word ptr [esi+0C8h] +
jmp loc_1041D88  +
movzx eax word ptr [esi+0CAh] +
cmp word ptr [ebp+var_4] ax +
jnz loc_1041DDB  +
push ebx  +
push edi  +
mov ecx esi +
call sub_1095D00  +
jmp loc_1041E7E  +
lea eax [ebp+pvParam] +
push eax  +
mov ecx esi +
mov [ebp+pvParam] ebx +
call sub_1014039  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_1041DC1  +
cmp dword ptr [eax+8] 27h +
jnz loc_1041DC1  +
cmp [ebp+pvParam] 0 +
jnz loc_1042415  +
cmp dword ptr [eax+8] 25h +
jnz loc_1041DDB  +
cmp [ebp+pvParam] 0 +
jz loc_1042415  +
jmp loc_1041DDB  +
and [ebp+pvParam] eax +
jmp loc_104268F  +
xor ecx ecx +
or dword ptr [edi+20h] 4000h +
mov [edi+14h] ecx +
mov [edi+18h] ecx +
xor eax eax +
jmp loc_1041E7E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push 40000068h  +
mov esi ecx +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_1041D41  +
push ebx  +
xor ebx ebx +
lea eax [esi+0C4h] +
xor ecx ecx +
inc ebx  +
push edi  +
mov edi [ebp+pvParam] +
cmp [eax] ecx +
jnz loc_1041E63  +
test dword ptr [edi+20h] 800h +
jnz sub_1042659  +
mov eax [edi+20h] +
and eax 0Fh +
cmp eax 0Bh +
ja loc_1041DDD  +
jmp ds:off_1041DF1[eax*4]  +
mov [edi+10h] ecx +
mov eax ebx +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_1041EBF  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+arg_10]  +
lea esi [ebp+arg_14] +
push [ebp+arg_C]  +
movs   +
push [ebp+arg_8]  +
movs   +
push [ebp+arg_4]  +
movs   +
push eax  +
movs   +
call dword ptr [ecx+58h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 24h  +
mov eax 80004005h +
jmp loc_1041EB9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
mov [esi+9Ch] ebx +
cmp [esi+6Ch] ebx +
jnz loc_1041F6C  +
mov eax [esi+64h] +
mov ecx [ebp+arg_0] +
cmp eax [ecx] +
jnz loc_1041F6C  +
push edi  +
xor eax eax +
lea edi [ebp+var_8] +
stos   +
stos   +
mov edi [ebp+hWnd] +
push edi  +
mov [ebp+lParam] edi +
call ds:GetDlgCtrlID  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 4Eh  +
push edi  +
mov [ebp+var_8] eax +
mov [ebp+var_4] 0E1h +
call ds:SendMessageW  +
test eax eax +
jnz loc_1041F6B  +
push edi  +
mov ecx esi +
call sub_1040FCB  +
cmp edi [esi+1E0h] +
jz loc_1041F6B  +
mov ecx esi +
call sub_103872C  +
test eax eax +
jz loc_1041F6B  +
push 16h  +
pop eax  +
push ebx  +
mov word ptr [ebp+var_1C] ax +
lea eax [ebp+var_1C] +
push eax  +
push ebx  +
push 130h  +
push offset dword_1013948  +
push offset dword_1036980  +
lea eax [esi+0Ch] +
push eax  +
mov [ebp+var_14] 20000h +
call ds:SHLWAPI_484  +
pop edi  +
mov [esi+0C0h] ebx +
mov [esi+0C4h] ebx +
mov [esi+64h] ebx +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
lea edi [ebp-10h] +
movs   +
movs   +
movs   +
movs   +
mov esi ds:GetSystemMetrics +
push 2Dh  +
mov ebx ecx +
call esi  +
add eax [ebx+28h] +
push 2Dh  +
add [ebp-10h] eax +
call esi  +
sub eax [ebx+2Ch] +
xor edi edi +
add [ebp-8] eax +
mov eax [ebp-4] +
sub eax [ebx+4Ch] +
mov [ebp-0Ch] eax +
mov eax [ebx+24h] +
cmp eax edi +
jz loc_106206D  +
mov esi ds:DrawThemeBackground +
push edi  +
push dword ptr [ebp+10h]  +
push edi  +
push 11h  +
push dword ptr [ebp+0Ch]  +
push eax  +
call esi  +
push edi  +
lea eax [ebp-10h] +
push eax  +
push edi  +
push 8  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx+24h]  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov ecx [ebp+8] +
add ecx 0FFFFFFE8h +
call sub_103978B  +
jmp loc_1014019  +
***
dec ecx  +
jnz loc_1014019  +
mov esi [ebp+8] +
push ebx  +
push ebx  +
push ebx  +
push 14Fh  +
push eax  +
lea eax [esi-18h] +
neg eax  +
lea ecx [esi-0Ch] +
sbb eax eax +
push offset dword_10369C0  +
and eax ecx +
push eax  +
call ds:SHLWAPI_484  +
xor eax eax +
cmp [esi+6BCh] ebx +
push ebx  +
setz al  +
lea ecx [esi-18h] +
push eax  +
jmp loc_1040F31  +
***
push 1  +
push edi  +
push dword ptr [esi+34h]  +
mov [esi+0C4h] edi +
call ds:InvalidateRect  +
jmp loc_1014521  +
***
call sub_1042083  +
jmp loc_103BE72  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
xor edi edi +
push edi  +
push edi  +
push 147h  +
push offset dword_10141A8  +
mov esi ecx +
push offset dword_10128F0  +
push dword ptr [esi+4]  +
call ds:SHLWAPI_484  +
cmp [ebp+var_8] di +
jnz loc_10420E4  +
push 1  +
push dword ptr [esi+1Ch]  +
call ds:EnableWindow  +
push 457h  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+1Ch]  +
call ds:SetWindowPos  +
pop edi  +
pop esi  +
leave   +
retn   +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push 318h  +
push edi  +
call sub_1042105  +
jmp loc_1011887  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+hDC]  +
lea ecx [esi+24h] +
push [ebp+Msg]  +
push [ebp+hWndTo]  +
call sub_1037F08  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push [ebp+Msg]  +
push dword ptr [esi+44h]  +
push [ebp+hWndTo]  +
push 0  +
call sub_1038038  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov ecx esi +
call sub_104214D  +
jmp loc_1014521  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 1  +
push dword ptr [esi+30h]  +
call ds:KillTimer  +
and dword ptr [esi+0A8h] 0 +
xor eax eax +
pop esi  +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 111h  +
push esi  +
call sub_1042183  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ecx +
mov ecx [ebp+hDC] +
movzx eax cx +
dec eax  +
mov [ebp+var_4] esi +
jnz loc_10423BF  +
shr ecx 10h +
test cx cx +
jnz loc_10423BF  +
push 1  +
push dword ptr [esi+30h]  +
call ds:KillTimer  +
lea eax [ebp+hDC] +
push eax  +
mov ecx esi +
call sub_1014039  +
test eax eax +
jl loc_10423BF  +
push ebx  +
xor ebx ebx +
push edi  +
mov esi 10000h +
mov edi 80010000h +
cmp [ebp+hDC] ebx +
jz loc_10424FA  +
push 20Fh  +
push offset dword_10423C8  +
call sub_1034B2D  +
cmp dword_10B24CC ebx +
jz loc_1042247  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10427BB  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_1042247  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx esi +
and edx edi +
cmp ecx eax +
jnz loc_1042247  +
cmp edx ebx +
jnz loc_1042247  +
push offset dword_10423D8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor ecx ecx +
xor eax eax +
cmp [ebp+hDC] eax +
mov ebx ds:SHLWAPI_484 +
setz cl  +
push 3  +
mov [ebp+var_C] 2 +
mov [ebp+hDC] ecx +
pop ecx  +
push eax  +
mov word ptr [ebp+var_14] cx +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
mov eax [ebp+var_4] +
push 14Bh  +
push offset dword_1014084  +
push offset dword_10128F0  +
push dword ptr [eax+20h]  +
call ebx  +
test eax eax +
jl loc_10422A5  +
xor eax eax +
push eax  +
push eax  +
push eax  +
mov eax [ebp+var_4] +
push 146h  +
push offset dword_1014084  +
push offset dword_10128F0  +
push dword ptr [eax+20h]  +
call ebx  +
cmp [ebp+hDC] 0 +
mov ebx [ebp+var_4] +
jz loc_10427AE  +
lea eax [ebx+0CCh] +
push eax  +
push dword ptr [ebx+34h]  +
call ds:SetWindowTextW  +
mov ecx ebx +
call sub_1014233  +
push 0  +
call sub_1011451  +
push eax  +
push 401h  +
push dword ptr [ebx+38h]  +
call ds:SendMessageW  +
xor eax eax +
cmp [ebp+hDC] eax +
jnz loc_1042588  +
cmp dword_10B24CC eax +
jz loc_104234D  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10427D5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov ebx 80080000h +
and eax esi +
and ecx ebx +
or eax ecx +
jz loc_104234A  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx esi +
and edx ebx +
cmp ecx eax +
jnz loc_104234A  +
cmp edx dword_10B24C4 +
jnz loc_104234A  +
push offset dword_10426A8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ebx [ebp+var_4] +
and dword ptr [ebx+0BCh] 0 +
push 0  +
push 0CFh  +
push dword ptr [ebx+30h]  +
call sub_103C26A  +
cmp dword_10B24CC 0 +
jz loc_10423BD  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10427E2  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_10423BD  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx esi +
mov esi dword_10B24C4 +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_10423BD  +
cmp edx esi +
jnz loc_10423BD  +
push offset dword_10423E8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
mov edi [edi+0Ch] +
cmp edi ecx +
jz loc_1042415  +
cmp dword ptr [edi+4] 202h +
jnz loc_1042415  +
mov eax [edi] +
cmp eax [esi+34h] +
jnz loc_1042415  +
call ds:ReleaseCapture  +
push dword ptr [esi+34h]  +
push ebx  +
push 111h  +
push dword ptr [esi+30h]  +
call ds:PostMessageW  +
jmp loc_1041E7C  +
push ebx  +
call ds:SetFocus  +
push ebx  +
mov [ebp+var_10] ebx +
call esi  +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
push 4Eh  +
push [ebp+arg_0]  +
mov [ebp+var_C] eax +
mov [ebp+var_8] 0FFFFFFF8h +
call edi  +
jmp loc_1041024  +
push ebx  +
mov ebx [eax+10h] +
sub ebx [esi+50h] +
push edi  +
mov edi [eax+14h] +
mov eax [esi+38h] +
sub edi [esi+58h] +
mov ecx [eax] +
sub edi [esi+54h] +
sub ebx [esi+4Ch] +
lea edx [ebp+var_8] +
push edx  +
push offset loc_1041CD4  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_10424B3  +
mov eax [ebp+var_8] +
or [ebp+arg_C] 0FFFFFFFFh +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_10424AA  +
cmp [ebp+arg_C] 1 +
jle loc_10424AA  +
mov eax edi +
cdq   +
idiv  [ebp+arg_C] +
test edx edx +
jz loc_10424AA  +
sub edi edx +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 4  +
push edi  +
push ebx  +
push dword ptr [esi+54h]  +
push dword ptr [esi+4Ch]  +
push 0  +
push dword ptr [esi+44h]  +
call ds:SetWindowPos  +
pop edi  +
pop ebx  +
jmp loc_1037B1D  +
push [ebp+arg_C]  +
lea ecx [esi+24h] +
push [ebp+hDC]  +
push 14h  +
push edi  +
call sub_1037F08  +
jmp loc_1011887  +
xor eax eax +
inc eax  +
jmp loc_10412FD  +
push eax  +
mov ecx esi +
call sub_1095D3B  +
jmp loc_103B836  +
push 210h  +
push offset dword_1042568  +
call sub_1034B2D  +
cmp dword_10B24CC ebx +
jz loc_1042247  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10427C8  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_1042247  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx esi +
and edx edi +
cmp ecx eax +
jnz loc_1042247  +
cmp edx ebx +
jnz loc_1042247  +
push offset dword_1042578  +
jmp loc_1042236  +
cmp [ebp+hDC] 1 +
jnz loc_10423BD  +
cmp dword_10B24CC eax +
jz loc_10423BD  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10427EF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_10423BD  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx esi +
mov esi dword_10B24C4 +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_10423BD  +
cmp edx esi +
jnz loc_10423BD  +
push offset dword_10425F0  +
jmp loc_10423AC  +
***
lea eax [esi+1C8h] +
jmp loc_103C554  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 113h  +
push esi  +
call sub_1042626  +
jmp loc_101177A  +
***
mov edi edi +
push dword ptr [esi+34h]  +
mov [eax] ebx +
call ds:InvalidateRect  +
xor ecx ecx +
jmp loc_1041E63  +
***
cmp [esi+0A8h] ecx +
jnz loc_1041E7C  +
push ecx  +
lea eax [ebp+pvParam] +
push eax  +
push ecx  +
push 66h  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_1041DD3  +
mov eax [ebp+pvParam] +
push 0  +
add eax eax +
push eax  +
push ebx  +
push dword ptr [esi+30h]  +
call ds:SetTimer  +
jmp loc_1041E7C  +
***
push 0  +
lea ecx [ebp+var_18] +
push ecx  +
push eax  +
push 12Eh  +
push ebx  +
push offset dword_10369D0  +
push dword ptr [esi+170h]  +
jmp loc_1040D3C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push esi  +
add ecx 0FFFFFFF0h +
xor esi esi +
call sub_1015433  +
test eax eax +
jnz loc_1042711  +
push 1  +
push offset aStart_sortbyna  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
test eax eax +
jz loc_1042716  +
mov esi 80004005h +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+14h] +
and dword ptr [esi] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jge loc_1062098  +
pop esi  +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 18h +
jmp loc_103690E  +
***
sub dword ptr [esp+4] 18h +
jmp loc_10156D7  +
***
mov esi [ebp+arg_8] +
push edi  +
lea edi [ebp+var_10] +
movs   +
push 0  +
movs   +
push 11h  +
push edx  +
push dword ptr [ecx+48h]  +
movs   +
lea eax [ebp+var_10] +
push eax  +
movs   +
call sub_1037CB3  +
xor eax eax +
pop edi  +
jmp loc_101465B  +
push edx  +
call sub_10957E9  +
jmp loc_101465B  +
***
mov dword ptr [ecx+0A8h] 1 +
jmp loc_1040E72  +
***
lea eax [esi+4CCh] +
jmp loc_101429A  +
***
mov eax [ebp+var_4] +
add eax 1CCh +
jmp loc_10422B8  +
test al al +
jz loc_1042203  +
jmp loc_1042247  +
test al al +
jz loc_1042522  +
jmp loc_1042247  +
test al al +
jz loc_10422FF  +
jmp loc_104234D  +
test al al +
jz loc_1042379  +
jmp loc_10423BD  +
test al al +
jz loc_10425AB  +
jmp loc_10423BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_10369D0 +
xor eax eax +
cmps   +
jz loc_1042858  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1042848 +
xor eax eax +
cmps   +
jz loc_1042858  +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax+0Ch]  +
call ds:IUnknown_QueryService  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFECh +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
jmp loc_104283F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push 4  +
mov ebx offset dword_1036B1C +
pop ecx  +
mov esi ebx +
xor eax eax +
cmps   +
mov [ebp+var_4] 80070057h +
jnz loc_10428B5  +
cmp [ebp+arg_8] 12Eh +
jnz loc_10428B5  +
xor edi edi +
cmp [ebp+arg_C] edi +
jnz loc_10621FE  +
mov ecx [ebp+arg_0] +
add ecx 0FFFFFFE8h +
call sub_10428C4  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+78h] edi +
jnz loc_1042961  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push offset dword_1042968  +
call sub_104299D  +
mov edi eax +
test edi edi +
jl loc_1042961  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_100DC8C  +
push [ebp+var_8]  +
call ds:__imp_SHCreateItemFromIDList  +
mov edi eax +
test edi edi +
jl loc_1042958  +
lea edi [esi+3Ch] +
push edi  +
push offset stru_1042988  +
push 1  +
push 0  +
push offset stru_1042978  +
call ds:__imp_CoCreateInstance  +
mov eax [edi] +
test eax eax +
jz loc_1042930  +
lea ecx [esi+14h] +
push ecx  +
push eax  +
call ds:__imp_IUnknown_SetSite  +
push dword ptr [edi]  +
mov eax [esi+38h] +
mov ecx [eax] +
push 3  +
push 60h  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
test edi edi +
jl loc_104294F  +
mov dword ptr [esi+78h] 1 +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_8]  +
call ds:__imp_SHELL32_155  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+rguid] eax +
mov eax [ebp+arg_4] +
xor ecx ecx +
push esi  +
push edi  +
mov [ebp+var_6C] eax +
cmp eax ecx +
jnz loc_105CE55  +
mov [ebx] ecx +
mov esi offset aShell_0 +
lea edi [ebp+var_64] +
movs   +
movs   +
movs   +
movs   +
push 4Ch  +
push ecx  +
lea eax [ebp+var_52] +
push eax  +
movs   +
call memset  +
add esp 0Ch +
push 27h  +
lea eax [ebp-54h] +
push eax  +
push [ebp+rguid]  +
call StringFromGUID2  +
xor esi esi +
push esi  +
lea eax [ebp+rguid] +
push eax  +
lea eax [ebp+var_64] +
push eax  +
call SHELL32_28  +
mov edi eax +
cmp edi esi +
jl loc_1042A2B  +
cmp [ebp+var_6C] esi +
jnz loc_105CE5C  +
cmp edi esi +
jl loc_1042A23  +
mov eax [ebp+rguid] +
mov [ebx] eax +
mov [ebp+rguid] esi +
push [ebp+rguid]  +
call SHELL32_155  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov ecx esi +
call sub_1042A6E  +
jmp loc_100DF55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ecx+88h] 0 +
lea eax [ebp+pvData] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
push 8  +
lea eax [ebp+pvData] +
push eax  +
push 3  +
push offset aStartmenu_ball  +
push offset aSoftwareMicr_2  +
push 80000001h  +
call ds:__imp_SHSetValueW  +
leave   +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 40Ah  +
push esi  +
mov ecx edi +
call sub_1042AF3  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
mov esi ecx +
push [ebp+arg_8]  +
call ds:SHELL32_644  +
mov edi eax +
test edi edi +
jz loc_1042B49  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1042B49  +
mov ecx [ebp+arg_4] +
add ecx 0FFFFFBFFh +
cmp ecx 9 +
jb loc_105FF9B  +
jnz loc_1042B42  +
push dword ptr [eax+4]  +
mov ecx esi +
push dword ptr [eax]  +
call sub_1042B56  +
push edi  +
call ds:SHELL32_645  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+2] 0FFFFFFFFh +
jz loc_105F9C3  +
push [ebp+arg_4]  +
call ds:RealShellExecuteA  +
pop ebp  +
retn 8  +
***
dec eax  +
jz loc_102E9D2  +
dec eax  +
jnz sub_10024B0  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1042B96  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
xor ebx ebx +
mov [ebp+var_10] esi +
mov [ebp+var_4] ebx +
call ds:SHELL32_644  +
mov [ebp+var_14] eax +
cmp eax ebx +
jz loc_1042C57  +
cmp [ebp+arg_4] 8000h +
jnz loc_10636B5  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1042C4E  +
cmp [eax+4] ebx +
jnz loc_1063715  +
cmp [eax] ebx +
jz loc_1042C5D  +
mov eax [eax] +
mov eax [eax+2] +
mov [ebp+arg_0] eax +
cmp eax 0FFFFFFFFh +
jz loc_1042C5D  +
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_1042C66  +
mov eax [eax] +
mov [ebp+var_8] eax +
push edi  +
xor edi edi +
cmp [ebp+var_8] ebx +
jle loc_1042C4D  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push ebx  +
push esi  +
call dword ptr [eax+40h]  +
test eax eax +
jl loc_1042C42  +
mov eax [ebp+var_C] +
shr eax 10h +
cmp ax 1 +
jnz loc_1042C42  +
movzx eax word ptr [ebp+var_C] +
cmp eax [ebp+arg_0] +
jz loc_1063723  +
inc edi  +
cmp edi [ebp+var_8] +
jge loc_1042C4D  +
mov esi [ebp+var_10] +
jmp loc_1042C0E  +
pop edi  +
push [ebp+var_14]  +
call ds:SHELL32_645  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov ecx esi +
call sub_1098D4B  +
jmp loc_1042C4E  +
mov [ebp+var_8] ebx +
jmp loc_1042C06  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_1042C9C  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
mov eax 80004005h +
jmp loc_1042C96  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
cmp word ptr [ebp+0Ch] 3 +
mov eax [ebp+1Ch] +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov [ebp-418h] eax +
jnz loc_105ED00  +
xor edi edi +
cmp [ebp+14h] edi +
jnz loc_105ED00  +
mov esi 104h +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
push 158h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_1042D3C  +
push dword ptr [ebx+1F8h]  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-414h] +
push esi  +
push eax  +
call sub_10343CA  +
mov edi eax +
add esp 10h +
test edi edi +
jl loc_1042D3C  +
lea eax [ebp-414h] +
push eax  +
call ds:SysAllocString  +
mov ecx [ebp-418h] +
mov [ecx] eax +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov ebx [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov esi ebx +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+var_4] +
mov ecx esi +
call sub_103C9E6  +
test eax eax +
jz loc_105FE3C  +
mov eax [ebx+8] +
mov [ebx+8] eax +
jmp loc_103CA3F  +
***
mov dword ptr [ebp-418h] 1 +
jmp loc_103EA53  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi+8]  +
call ds:IUnknown_QueryService  +
jmp loc_103B895  +
***
sub dword ptr [esp+4] 4 +
jmp loc_101389D  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1036D1C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+8] +
push ebx  +
mov ebx [ebp+1Ch] +
push esi  +
mov ecx [eax] +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+34h]  +
test eax eax +
jl loc_1042E03  +
cmp word ptr [ebx] 3 +
jnz loc_1042E03  +
mov ecx [ebx+8] +
sub ecx 21h +
jz loc_1042E0A  +
dec ecx  +
jnz loc_1042E03  +
mov dword ptr [ebx+8] 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov dword ptr [ebx+8] 0Bh +
jmp loc_1042E03  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
lea edx [ebp-4] +
push edx  +
mov esi 20000000h +
push esi  +
push eax  +
mov [ebp-4] esi +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1042E3E  +
test [ebp-4] esi +
jnz loc_1042E55  +
mov eax [ebp+10h] +
mov dword ptr [eax+8] 0Ch +
push 3  +
pop ecx  +
mov [eax] cx +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov eax [ebp+10h] +
mov dword ptr [eax+8] 24h +
jmp loc_1042E48  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1003BF1  +
***
push edi  +
push offset stru_1003410  +
push 0FFFFFFFCh  +
push offset aButton  +
push dword ptr [esi+4]  +
call CreateStdAccessibleProxyW  +
test eax eax +
jl loc_1052C3E  +
push 20h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1042EB3  +
push esi  +
push dword ptr [edi]  +
mov ecx eax +
call sub_1042EBC  +
mov [esi+70h] eax +
cmp [edi] ebx +
jnz loc_1052C21  +
jmp loc_1052C3E  +
xor eax eax +
jmp loc_1042EA3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1052C83  +
mov eax [ebp+arg_4] +
mov [esi+1Ch] eax +
mov dword ptr [esi] offset off_1042EF0 +
mov dword ptr [esi+4] offset off_1052A54 +
mov dword ptr [esi+8] offset off_1034D4C +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push ebx  +
add esi 20h +
push esi  +
call sub_1042F80  +
test eax eax +
jge loc_1052A97  +
jmp loc_10661BF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
jz loc_1042FC4  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_1042FC4  +
and dword ptr [esi] 0 +
push 10h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1042FB9  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_1042FD0  +
test eax eax +
jz loc_1042FBD  +
mov [esi] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_1042FAC  +
mov eax 8007000Eh +
jmp loc_1042FB4  +
mov eax 80004003h +
jmp loc_1042FB4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10106E8 +
mov dword ptr [esi+4] offset off_10352E8 +
mov [esi+8] eax +
mov dword ptr [esi+0Ch] 1 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1007EEE  +
cmp edx ebx +
jnz loc_1007EEE  +
push dword ptr [ebp+10h]  +
lea eax [esi-0Ch] +
add esi 0FFFFFFFCh +
neg eax  +
push 0  +
sbb eax eax +
and eax esi +
push eax  +
push offset dword_1046278  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046175  +
jmp loc_1007EEE  +
***
test al al +
jz loc_1007ECD  +
jmp loc_1007EEE  +
***
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1043095  +
cmp edx edi +
jnz loc_1043095  +
mov eax [ebp+0Ch] +
push 0  +
push dword ptr [eax]  +
push offset dword_10430A8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_104647D  +
pop edi  +
jmp loc_100EB95  +
***
test al al +
jnz loc_100EB95  +
jmp loc_100EB74  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push esi  +
mov esi [ebp+arg_18] +
xor ecx ecx +
lea eax [ebp+arg_C] +
push 4  +
mov [ebp+var_60] eax +
pop edx  +
lea eax [ebp+arg_10] +
mov [ebp+var_5C] ecx +
mov [ebp+var_58] edx +
mov [ebp+var_54] ecx +
mov [ebp+var_50] eax +
mov [ebp+var_4C] ecx +
mov [ebp+var_48] 8 +
mov [ebp+var_44] ecx +
cmp esi ecx +
jz loc_104316A  +
push ebx  +
mov eax esi +
push edi  +
lea ebx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di cx +
jnz loc_10430FB  +
sub eax ebx +
sar eax 1 +
pop edi  +
lea eax [eax+eax+2] +
pop ebx  +
cmp esi ecx +
jz loc_10645C5  +
mov [ebp+var_38] eax +
lea eax [ebp+arg_1C] +
mov [ebp+var_30] eax +
lea eax [ebp+arg_20] +
mov [ebp+var_20] eax +
lea eax [ebp+arg_24] +
mov [ebp+var_10] eax +
lea eax [ebp+var_60] +
push eax  +
push 6  +
push [ebp+arg_8]  +
mov [ebp+var_40] esi +
push [ebp+arg_4]  +
mov [ebp+var_3C] ecx +
push [ebp+arg_0]  +
mov [ebp+var_34] ecx +
mov [ebp+var_2C] ecx +
mov [ebp+var_28] edx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] edx +
mov [ebp+var_14] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
mov [ebp+var_4] ecx +
call ds:EventWrite  +
pop esi  +
leave   +
retn 28h  +
push 0Ah  +
pop eax  +
jmp loc_104310F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
push [ebp+hMenu]  +
xor eax eax +
inc eax  +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
call ds:GetMenuItemCount  +
mov edi ds:DeleteMenu +
mov esi eax +
mov ebx 400h +
dec esi  +
test esi esi +
jle loc_10431BE  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+hMenu]  +
call sub_10431DE  +
test eax eax +
jnz loc_104327F  +
and [ebp+var_C] 0 +
jmp loc_104319E  +
push 0  +
push 0  +
push [ebp+hMenu]  +
call sub_10431DE  +
test eax eax +
jnz sub_105CD8F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_1043235  +
and dword ptr [esi] 0 +
push 2Ch  +
lea eax [ebp+var_30.fMask] +
push 0  +
push eax  +
mov [ebp+var_30.cbSize] 30h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_30] +
push eax  +
push 1  +
push [ebp+arg_4]  +
mov [ebp+var_30.fMask] 12h +
push [ebp+arg_0]  +
call ds:GetMenuItemInfoW  +
test eax eax +
jz loc_104322E  +
test [ebp+var_30.fType] 800h +
jnz loc_104329C  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
lea esi [ebp+arg_8] +
jmp loc_10431EE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 2 +
push ebx  +
mov ebx ecx +
jnz loc_104325A  +
cmp dword ptr [ebx+1BCh] 0 +
jnz loc_1043B60  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax 80004001h +
retn 0Ch  +
***
mov eax [ecx+6Ch] +
test eax eax +
jnz loc_104D1C0  +
retn   +
***
xor eax eax +
cmp [ebp+var_C] eax +
jnz loc_105CD64  +
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
mov [ebp+var_C] 1 +
jmp loc_104319E  +
***
mov eax 0FFFFh +
cmp word ptr [ebp+var_30.wID] ax +
jz loc_10432BA  +
cmp [ebp+var_30.wID] 0 +
jz loc_10432BA  +
xor eax eax +
inc eax  +
mov [esi] eax +
xor eax eax +
inc eax  +
jmp loc_1043230  +
xor eax eax +
jmp loc_10432B0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 314h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push offset byte_1002CD0  +
push [ebp+arg_C]  +
mov [ebp+var_314] edi +
push edi  +
call sub_100665F  +
cmp [ebp+arg_C] 41h +
jb loc_105CDCE  +
push [ebp+arg_C]  +
mov eax [esi] +
push edi  +
push 0  +
push 4  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_104F958  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push [ebp+hMenu]  +
call sub_104337A  +
cmp eax 0FFFFFFFFh +
jz loc_1043AFE  +
push 400h  +
push eax  +
push [ebp+hMenu]  +
call ds:DeleteMenu  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 138h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+hMenu] +
mov [ebp+var_104] ecx +
mov ecx [ebp+arg_C] +
push eax  +
mov [ebp+var_100] eax +
mov [ebp+var_108] ecx +
call ds:GetMenuItemCount  +
and [ebp+var_F8] 0 +
mov [ebp+var_FC] eax +
test eax eax +
jle loc_10434EA  +
push ebx  +
push esi  +
mov esi ds:GetMenuItemInfoW +
push edi  +
push 30h  +
pop ebx  +
mov edi 400h +
push 2Ch  +
lea eax [ebp+var_138.fMask] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_138] +
push eax  +
push edi  +
push [ebp+var_F8]  +
mov [ebp+var_138.cbSize] ebx +
push [ebp+var_100]  +
mov [ebp+var_138.fMask] 12h +
call esi  +
test eax eax +
jz loc_10434CF  +
test [ebp+var_138.fType] 800h +
jnz loc_10434CF  +
mov eax [ebp+var_138.wID] +
test eax 0FFFF0000h +
jnz loc_10434CF  +
cmp eax [ebp+arg_8] +
jb loc_10434CF  +
xor eax eax +
mov word ptr [ebp+var_54] ax +
lea eax [ebp+var_54] +
mov [ebp+var_138.dwTypeData] eax +
lea eax [ebp+var_138] +
push eax  +
push edi  +
push [ebp+var_F8]  +
mov [ebp+var_138.cbSize] ebx +
push [ebp+var_100]  +
mov [ebp+var_138.fMask] 40h +
mov [ebp+var_138.cch] 28h +
call esi  +
test eax eax +
jz loc_1043497  +
push offset aA4756f804ae74a  +
lea eax [ebp+var_54] +
push eax  +
call StrCmpICW  +
test eax eax +
jz loc_10434CF  +
push 50h  +
lea eax [ebp+var_F4] +
push eax  +
mov eax [ebp+var_138.wID] +
sub eax [ebp+arg_8] +
push eax  +
push [ebp+var_104]  +
call sub_10432C3  +
test eax eax +
jl loc_10434CF  +
push [ebp+var_108]  +
lea eax [ebp+var_F4] +
push eax  +
call StrCmpICW  +
test eax eax +
jz loc_10434E7  +
inc [ebp+var_F8]  +
mov eax [ebp+var_F8] +
cmp eax [ebp+var_FC] +
jl loc_10433D7  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_FC] +
cmp [ebp+var_F8] eax +
jz loc_1043AF2  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_F8] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 284h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [ebp+hWnd] eax +
call sub_1015433  +
test eax eax +
jnz loc_105F9D7  +
cmp dword_10B24CC 0 +
push ebx  +
push edi  +
jz loc_10435CA  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1043AAF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_105F9DE  +
mov eax [esi] +
push esi  +
mov dword ptr [esi+1BCh] 1 +
call dword ptr [eax+4]  +
push 0  +
push 0D3h  +
push dword ptr [esi+44h]  +
call sub_103C26A  +
and [ebp+uID] 0 +
lea eax [ebp+var_23C] +
push eax  +
push [ebp+lParam]  +
mov ecx esi +
call sub_1043BAC  +
mov [ebp+var_21C] eax +
test eax eax +
jl loc_1043A8A  +
push eax  +
mov ecx esi +
call sub_1012341  +
mov [ebp+var_214] eax +
test eax eax +
jz loc_1043A8A  +
mov ecx [eax+10h] +
mov edi 100h +
test ecx edi +
jnz loc_1043A83  +
test cl cl +
js loc_1043A83  +
lea ecx [ebp+var_210] +
push ecx  +
push offset dword_1011ED0  +
mov ecx eax +
call sub_1043B15  +
test eax eax +
jl loc_105FA1C  +
call ds:CreatePopupMenu  +
mov ebx eax +
mov [ebp+hMenu] ebx +
test ebx ebx +
jz loc_1043A71  +
and [ebp+uPosition] 0 +
push 10h  +
call ds:GetKeyState  +
test ax ax +
jl loc_105FA2B  +
test byte ptr [esi+0C8h] 8 +
jz loc_1043696  +
or [ebp+uPosition] 10h +
mov eax [esi] +
lea ecx [ebp+var_244] +
push ecx  +
push [ebp+var_210]  +
mov ecx esi +
push [ebp+var_214]  +
call dword ptr [eax+0A0h]  +
test eax eax +
mov eax [ebp+var_210] +
jge loc_105FA36  +
push [ebp+uPosition]  +
mov ecx [eax] +
push 7000h  +
push edi  +
push 0  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push offset aLink  +
push edi  +
push ebx  +
push [ebp+var_210]  +
call sub_1043341  +
push offset aCut  +
push edi  +
push ebx  +
push [ebp+var_210]  +
call sub_1043341  +
push offset aDelete  +
push edi  +
push [ebp+var_210]  +
push ebx  +
call sub_104337A  +
and [ebp+uFlags] 0 +
lea ecx [ebp+uItem] +
push ecx  +
lea ecx [ebp+uFlags] +
push ecx  +
push [ebp+var_214]  +
mov [ebp+uPosition] eax +
mov eax [esi] +
mov ecx esi +
mov [ebp+uItem] 1 +
call dword ptr [eax+0D8h]  +
mov [ebp+uID] eax +
mov eax [ebp+var_23C] +
mov [ebp+pt.x] eax +
mov eax [ebp+var_238] +
mov [ebp+pt.y] eax +
lea eax [ebp+pt] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:ScreenToClient  +
cmp [ebp+uID] 0 +
jz loc_105FAAC  +
push 104h  +
lea eax [ebp+NewItem] +
push eax  +
push [ebp+uID]  +
push dword_10B23D0  +
call ds:LoadStringW  +
test eax eax +
jz loc_10437D4  +
cmp [ebp+uPosition] 0FFFFFFFFh +
jz loc_105FA4D  +
lea eax [ebp+NewItem] +
push eax  +
push [ebp+uItem]  +
mov eax [ebp+uFlags] +
or eax 400h +
push eax  +
push [ebp+uPosition]  +
push ebx  +
call ds:ModifyMenuW  +
push [ebp+pt.y]  +
mov ecx esi +
push [ebp+pt.x]  +
push [ebp+var_21C]  +
call sub_103DC26  +
test eax eax +
jnz loc_105FAC3  +
push [ebp+pt.y]  +
mov ecx esi +
push [ebp+pt.x]  +
push [ebp+var_21C]  +
call sub_103DCBA  +
test eax eax +
jnz loc_105FAFF  +
push [ebp+uFlags]  +
mov eax [esi] +
push ebx  +
push [ebp+var_214]  +
mov ecx esi +
push [ebp+var_210]  +
call dword ptr [eax+9Ch]  +
push ebx  +
call sub_1043174  +
mov ecx [ebp+var_210] +
mov edx [ecx] +
lea eax [esi+104h] +
push eax  +
push offset dword_104332C  +
push ecx  +
call dword ptr [edx]  +
mov ecx [ebp+var_210] +
mov edx [ecx] +
lea eax [esi+108h] +
push eax  +
push offset stru_10120BC  +
push ecx  +
call dword ptr [edx]  +
push 0  +
push [ebp+hWnd]  +
push [ebp+var_238]  +
push [ebp+var_23C]  +
push 102h  +
push ebx  +
call ds:TrackPopupMenuEx  +
mov ebx eax +
lea eax [esi+104h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+108h] +
push eax  +
call sub_1002BEE  +
cmp dword ptr [esi+44h] 0 +
jz loc_1043A4B  +
test ebx ebx +
jz loc_1043A4B  +
mov eax ebx +
dec eax  +
jz loc_105FB1D  +
dec eax  +
jz loc_105FB16  +
dec eax  +
lea eax [ebp+NewItem] +
jz loc_105FB0F  +
push 104h  +
push eax  +
lea eax [ebx-100h] +
push eax  +
push [ebp+var_210]  +
call sub_10432C3  +
mov eax [ebp+hWnd] +
mov [ebp+var_27C] eax +
xor eax eax +
mov [ebp+var_274] eax +
mov [ebp+var_270] eax +
mov [ebp+var_268] eax +
mov [ebp+var_264] eax +
mov [ebp+var_260] eax +
mov [ebp+var_258] eax +
mov [ebp+var_254] eax +
mov [ebp+var_250] eax +
mov eax [ebp+var_23C] +
sub ebx edi +
test byte ptr [esi+0C8h] 8 +
mov edi ds:__imp_StrCmpICW +
mov [ebp+var_24C] eax +
mov eax [ebp+var_238] +
mov [ebp+var_284] 40h +
mov [ebp+var_280] 4100000h +
mov [ebp+var_278] ebx +
mov [ebp+var_26C] 0Ah +
mov [ebp+var_25C] ebx +
mov [ebp+var_248] eax +
jz loc_104398F  +
push offset aRename  +
lea eax [ebp+NewItem] +
push eax  +
call edi  +
test eax eax +
jz loc_105FB38  +
push offset aStartpin  +
lea eax [ebp+NewItem] +
push eax  +
call edi  +
test eax eax +
jz loc_1043ABC  +
push offset aStartunpin  +
lea eax [ebp+NewItem] +
push eax  +
call edi  +
test eax eax +
jz loc_1043ABC  +
push offset dword_1034D68  +
call sub_1008600  +
test al al +
jz loc_1043A21  +
push offset aStartpin  +
lea eax [ebp+NewItem] +
push eax  +
call edi  +
test eax eax +
jz loc_105FBB8  +
push offset aStartunpin  +
lea eax [ebp+NewItem] +
push eax  +
call edi  +
test eax eax +
jz loc_105FBD1  +
push offset aTaskbarpin  +
lea eax [ebp+NewItem] +
push eax  +
call edi  +
test eax eax +
jz loc_105FBEA  +
push offset aTaskbarunpin  +
lea eax [ebp+NewItem] +
push eax  +
call edi  +
test eax eax +
jz loc_105FC03  +
mov eax [esi] +
lea ecx [ebp+NewItem] +
push ecx  +
lea ecx [ebp+var_284] +
push ecx  +
push [ebp+var_210]  +
mov ecx esi +
push [ebp+var_21C]  +
push [ebp+var_214]  +
call dword ptr [eax+0A4h]  +
mov eax [ebp+var_214] +
test byte ptr [eax+10h] 40h +
jnz loc_105FC33  +
push [ebp+hMenu]  +
call ds:DestroyMenu  +
mov [ebp+uID] 1 +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_214] +
mov ecx eax +
call sub_100F319  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
xor eax eax +
pop edi  +
pop ebx  +
cmp [ebp+uID] eax +
jz loc_105FC47  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 10h  +
test al al +
jz loc_10435A9  +
jmp loc_10435CA  +
cmp dword_10B24CC 0 +
jz loc_10439BB  +
jmp loc_105FB4A  +
***
or [ebp+var_F8] 0FFFFFFFFh +
jmp loc_10434FC  +
***
mov eax 80070490h +
jmp loc_1043371  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
mov eax [ecx] +
push edi  +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_4] +
push edx  +
call dword ptr [eax+20h]  +
mov edi eax +
test edi edi +
jl loc_1043B58  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push esi  +
push 0  +
push [ebp+arg_0]  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
push 0  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
cmp dword_10B24CC 0 +
jz loc_1043B95  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1043BA1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_105EEB4  +
pop esi  +
and dword ptr [ebx+1BCh] 0 +
jmp loc_104325A  +
test al al +
jz loc_1043B72  +
jmp loc_1043B95  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movsx eax word ptr [ebp+arg_0] +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov [esi] eax +
mov eax [ebp+arg_0] +
shr eax 10h +
cmp [ebp+arg_0] 0FFFFFFFFh +
cwde   +
push edi  +
mov edi ecx +
mov [esi+4] eax +
jz loc_105F417  +
mov eax [esi] +
mov [ebp+lParam] eax +
mov eax [esi+4] +
push 1  +
mov [ebp-14h] eax +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [edi+0B0h]  +
push 0  +
call ds:MapWindowPoints  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1012h  +
push dword ptr [edi+0B0h]  +
call ds:SendMessageW  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 7Bh  +
push esi  +
call sub_1043563  +
jmp loc_100F18F  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
jmp loc_1042AE1  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push esi  +
mov ecx edi +
call sub_1043C51  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
lea eax [esi+108h] +
cmp dword ptr [eax] 0 +
jz loc_1043C82  +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jge loc_105F3EC  +
lea eax [esi+104h] +
cmp dword ptr [eax] 0 +
jz loc_1043CA6  +
push [ebp+lParam]  +
mov eax [eax] +
push [ebp+wParam]  +
mov ecx [eax] +
push [ebp+Msg]  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jge loc_105F3F4  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+30h] +
mov eax [eax+58h] +
test eax eax +
jz loc_1043CEB  +
push eax  +
call sub_1043CF4  +
test eax eax +
jz loc_1060BBD  +
mov eax 2050h +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_1043CE7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
push offset aSoftwareMicr_8  +
call SHRegGetBoolValueFromHKCUHKLM  +
pop ebp  +
retn 4  +
***
push offset aImagelist_draw  +
push offset dword_10B22D0  +
call sub_1012091  +
jmp loc_103DFA9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset aDelete  +
push [ebp+pvData]  +
mov esi ecx +
call ds:__imp_StrCmpICW  +
test eax eax +
jz loc_1060BC8  +
push [ebp+pvData]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1043E91  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
mov esi ecx +
call ds:ActivateActCtx  +
mov ebx [ebp+arg_C] +
lea eax [ebx+4] +
push eax  +
call sub_1043EFD  +
mov edi [ebp+arg_8] +
mov eax esi +
add esi 8 +
neg eax  +
sbb eax eax +
and eax esi +
mov esi ds:__imp_IUnknown_SetSite +
push eax  +
push edi  +
call esi  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+10h]  +
push 0  +
push edi  +
mov ebx eax +
call esi  +
cmp [ebp+var_4] 0 +
jz loc_1043EEF  +
push [ebp+var_4]  +
push 0  +
call ds:DeactivateActCtx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetKeyState +
push edi  +
push 10h  +
call esi  +
mov edi [ebp+arg_0] +
test ax ax +
jl loc_105CDB8  +
push 11h  +
call esi  +
test ax ax +
jl loc_105CDC3  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_1043F40  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
cmp [ebp+arg_4] 0FFFEh +
push edi  +
mov esi ecx +
ja loc_1043F73  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
call sub_1003701  +
test eax eax +
jge loc_104415C  +
cmp dword_10B24CC ebx +
jz loc_1043FA9  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10441D1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_10630DC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_1043FC3  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
xor edi edi +
push edi  +
push edi  +
push [ebp+arg_0]  +
mov [ebp+var_C] ecx +
call sub_1003701  +
test eax eax +
jge loc_1063130  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
push edi  +
mov edi [ebp+arg_0] +
jz loc_104408E  +
push esi  +
mov esi offset dword_10440A0 +
push esi  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz loc_104408D  +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
mov edi eax +
test edi edi +
jz loc_104408D  +
push ebx  +
push edi  +
call ds:__imp_PathFindFileNameW  +
mov ebx eax +
cmp ebx edi +
jz loc_104408C  +
and [ebp+var_88] 0 +
push 80h  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
lea eax [ebp+var_88] +
push eax  +
call sub_1012258  +
push 1  +
lea eax [ebp+var_88] +
push eax  +
push 0FF3h  +
push esi  +
call sub_1006870  +
pop ebx  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
xor eax eax +
cmp [ecx+24h] edx +
setnz al  +
test eax eax +
jz loc_10440CF  +
mov [ecx+24h] edx +
pop ebp  +
retn 8  +
***
cmp dword ptr [ebp+10h] 0 +
jz loc_1033CCE  +
push dword ptr [ebp+10h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A0h]  +
mov [ebp-4] eax +
jmp loc_1033CCE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push ebx  +
push esi  +
mov dword ptr [ebp-4] 80004005h +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_1044153  +
mov ecx [esi+14h] +
mov ecx [ecx+4] +
push edi  +
mov edi [ecx+eax*4] +
mov eax [ebx] +
push ebx  +
mov dword ptr [ebp-4] 1 +
call dword ptr [eax+64h]  +
cmp eax 0FFFFh +
jz loc_1066C48  +
mov eax [esi+8] +
push 0  +
push 17h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1066C80  +
pop edi  +
mov eax [ebp-4] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
test eax eax +
jnz loc_10441CD  +
cmp [ebp+arg_4] ebx +
jz loc_10441CD  +
push [ebp+var_8]  +
xor edi edi +
mov ecx esi +
inc edi  +
call sub_1043FF7  +
mov eax [ebp+var_4] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+60h]  +
test eax eax +
jz loc_10441B6  +
push edi  +
push [ebp+var_4]  +
add esi 94h +
mov eax [esi] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+98h]  +
test eax eax +
jz loc_10441B6  +
mov esi [esi] +
mov eax [esi] +
push ebx  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push esi  +
call dword ptr [eax+18h]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1043F73  +
xor edi edi +
jmp loc_104417B  +
cmp al bl +
jz loc_1043F88  +
jmp loc_1043FA9  +
***
cmp [ebp+nNumber] 0FFFFFFFFh +
movzx eax byte ptr [esi+54h] +
push eax  +
lea eax [esi+10h] +
mov ecx ebx +
push eax  +
jnz loc_1066ED1  +
push [ebp+var_268]  +
push [ebp+var_218]  +
push [ebp+hDC]  +
call sub_1044217  +
jmp loc_1004E6C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ecx+10h] +
cmp dword ptr [eax+3Ch] 0 +
mov [ebp+var_4] ecx +
jz locret_10442DA  +
push edi  +
mov edi [ebp+arg_4] +
cmp edi 0FFFFh +
jz loc_10442D9  +
push ebx  +
push esi  +
mov esi [ebp+nNumber] +
push esi  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
push 0  +
lea eax [ebp+arg_4] +
push eax  +
mov [ebp+arg_4] 4 +
call sub_1014903  +
mov ecx [esi+8] +
sub ecx [esi] +
mov ebx 0FFFEh +
push ebx  +
lea eax [edi-1] +
mov edi ds:MulDiv +
push ecx  +
push eax  +
mov [ebp+nNumber] eax +
call edi  +
cmp eax [ebp+arg_4] +
jle loc_10442DE  +
mov eax [esi+8] +
sub eax [esi] +
push ebx  +
push eax  +
push [ebp+nNumber]  +
call edi  +
mov ecx [ebp+rc.left] +
add eax ecx +
mov [ebp+rc.right] eax +
lea eax [ebp+rc] +
push eax  +
call ds:IsRectEmpty  +
pop esi  +
pop ebx  +
test eax eax +
jnz loc_10442D9  +
cmp [ebp+arg_8] 2 +
push 9  +
pop eax  +
jz loc_1066572  +
cmp [ebp+arg_8] 1 +
jz loc_1066576  +
push [ebp+arg_10]  +
lea ecx [ebp+rc] +
push 0  +
push ecx  +
push 0  +
push eax  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov eax [eax+10h] +
push dword ptr [eax+3Ch]  +
call sub_100445D  +
pop edi  +
leave   +
retn 14h  +
mov eax [ebp+arg_4] +
jmp loc_104428D  +
***
movsx ecx ax +
cmp ecx [esi+20h] +
jnz loc_1004E9D  +
cmp [ebp+var_214] 0 +
jz loc_10446DF  +
push esi  +
push [ebp+var_260]  +
jmp loc_1053F72  +
***
mov eax [edi+10h] +
mov eax [eax+38h] +
mov ecx [eax] +
lea edx [ebp+var_2C] +
push edx  +
push [ebp+arg_4]  +
push dword ptr [edi+14h]  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jge loc_103F173  +
jmp loc_1066495  +
***
movzx eax word ptr [ebp+arg_0] +
jmp loc_103F306  +
or eax 0FFFFFFFFh +
jmp loc_103F305  +
***
cmp [esi+60h] eax +
jnz loc_103F36E  +
cmp dword ptr [esi+2Ch] 0FFFFFFFFh +
jnz loc_1053FDF  +
jmp loc_10540A0  +
mov eax [esi+38h] +
sub eax [esi+14h] +
jmp loc_1054018  +
inc [ebp+rcSrc.top]  +
jmp loc_105405C  +
dec [ebp+rcSrc.bottom]  +
jmp loc_105406C  +
push eax  +
push 0FFFFFFFFh  +
jmp loc_1054077  +
push dword ptr [ecx+2Ch]  +
call sub_103F2AE  +
cmp dword ptr [esi+5Ch] 0 +
movsx ebx ax +
jz loc_1054009  +
jmp loc_1066A98  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
cmp [esi+0C8h] ebx +
jnz loc_10443BA  +
cmp [esi+0F0h] ebx +
jz loc_1044420  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
push dword ptr [esi+0F0h]  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
lea edi [esi+0F4h] +
push dword ptr [edi]  +
mov [esi+0F0h] ebx +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov [edi] ebx +
cmp [esi+0C8h] ebx +
jnz loc_1044419  +
cmp [ebp+arg_0] ebx +
jz loc_1044419  +
push ebx  +
push 3E8h  +
push 2  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov [esi+0F0h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
cmp [ebp+arg_4] ebx +
jz loc_10642A8  +
cmp [ebp+arg_0] ebx +
jnz loc_10443BA  +
jmp loc_10642A8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
mov esi ecx +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] ebx +
jz loc_1044465  +
push [ebp+arg_0]  +
call sub_1044B21  +
mov [ebp+dy] 1 +
test eax eax +
jnz loc_1044468  +
mov [ebp+dy] ebx +
cmp [ebp+arg_8] ebx +
jnz loc_106521A  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-8] 0 +
lea ebx [esi+0A8h] +
mov eax [ebx] +
xor ecx ecx +
cmp eax [ebp+arg_0] +
setz cl  +
mov [ebp-0Ch] ecx +
test ecx ecx +
jnz loc_106524E  +
test eax eax +
jz loc_10444AC  +
cmp dword ptr [esi+0B0h] 0FFFFFFFFh +
jz loc_10444AC  +
push eax  +
lea eax [ebp-8] +
push eax  +
call ds:__imp_IUnknown_Set  +
push [ebp+arg_0]  +
push ebx  +
call ds:__imp_IUnknown_Set  +
mov eax [ebx] +
test eax eax +
jz loc_10444DB  +
cmp edi 0FFFFFFFFh +
jz loc_10444DB  +
push eax  +
lea eax [ebp-4] +
jmp loc_10444D4  +
cmp ecx ecx +
jz loc_10444DB  +
cmp edi 0FFFFFFFFh +
jnz loc_10444DB  +
push eax  +
lea eax [ebp-8] +
push eax  +
call ds:__imp_IUnknown_Set  +
call ds:GetFocus  +
cmp eax [esi+4] +
jz loc_1065272  +
mov eax [ebp-4] +
test eax eax +
jz loc_10447E5  +
xor edx edx +
cmp [ebp+lprc] edx +
setz dl  +
push edx  +
push edi  +
push 1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov eax [ebp-8] +
test eax eax +
jz loc_104451D  +
mov ecx [eax] +
xor edx edx +
cmp [ebp+lprc] edx +
setz dl  +
push edx  +
push eax  +
call dword ptr [ecx+74h]  +
lea eax [ebp-4] +
push eax  +
call sub_1002BEE  +
lea eax [ebp-8] +
push eax  +
call sub_1002BEE  +
cmp dword ptr [ebp-0Ch] 0 +
jnz loc_10652CE  +
cmp [esi+0B0h] edi +
jz loc_10652E6  +
push [ebp+arg_8]  +
lea eax [esi+0ACh] +
push eax  +
call ds:__imp_IUnknown_Set  +
push 1  +
push 1  +
mov ecx esi +
mov [esi+0B0h] edi +
call sub_104439B  +
cmp [ebp+lprc] 0 +
jz loc_104458A  +
cmp edi 0FFFFFFFFh +
jz loc_10447F4  +
cmp [ebp+dy] 0 +
jnz loc_104458A  +
mov ecx esi +
call sub_1004226  +
test al 2 +
jz loc_10447F4  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
mov dx [ebp+var_20] +
mov eax [ebp+var_28] +
mov ecx [ebp+var_24] +
mov [esi+4] dx +
mov dx [ebp+var_1C] +
mov [esi+6] dx +
movsx edx ax +
mov [esi] ax +
mov eax [ebp+var_18] +
cmp edx eax +
mov [esi+2] cx +
jl loc_106304D  +
movsx edx word ptr [esi] +
mov eax [ebp+dy] +
cmp edx eax +
jg loc_106305A  +
mov eax [ebp+var_14] +
movsx ecx cx +
cmp ecx eax +
jl loc_1063067  +
movsx ecx word ptr [esi+2] +
mov eax [ebp-0Ch] +
cmp ecx eax +
jle loc_105434F  +
jmp loc_1063075  +
push [ebp+lprc]  +
mov ecx [eax] +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx+2Ch]  +
push 0FFFFFFECh  +
call ds:GetDesktopWindow  +
push eax  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_1064A7E  +
push 2  +
push [ebp+lprc]  +
push 0  +
push dword ptr [esi-10h]  +
call ds:MapWindowPoints  +
xor edi edi +
jmp loc_105429D  +
dec eax  +
jz loc_10449BE  +
dec eax  +
jz loc_1044665  +
dec eax  +
jz loc_1064DBB  +
dec eax  +
jnz loc_1064D9D  +
lea ebx [esi+0FCh] +
push dword ptr [ebx]  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
xor edi edi +
lea eax [esi+14h] +
mov ecx [eax] +
push edi  +
push eax  +
mov [ebx] edi +
call dword ptr [ecx+6Ch]  +
jmp loc_100AC66  +
push dword ptr [esi+0F4h]  +
mov ebx ds:KillTimer +
push dword ptr [esi+4]  +
call ebx  +
xor edi edi +
cmp [esi+0C8h] edi +
jnz loc_1064E87  +
cmp [esi+0F0h] edi +
jnz loc_1064E87  +
mov eax [esi+0A8h] +
cmp eax edi +
jnz loc_1064E16  +
push edi  +
push edi  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
jmp loc_100AC66  +
cmp eax edi +
jz loc_104469E  +
jmp loc_10449F1  +
cmp eax 2 +
jz loc_10449F1  +
jmp loc_104469E  +
mov [ebp+arg_0] edi +
jmp loc_100AC3A  +
inc eax  +
jmp loc_10058DC  +
xor eax eax +
jmp loc_1005813  +
cmp dword ptr [esi+60h] 0 +
jz loc_1004EA7  +
mov eax [esi+8] +
xor ecx ecx +
cmp eax 3 +
setz cl  +
test ecx ecx +
jnz loc_1044301  +
cmp eax 1 +
jnz loc_1004EA7  +
lea edi [ebx+8] +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
lea edx [ebp+var_22C] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
lea edx [ebp+var_294] +
push edx  +
lea edx [ebp+var_228] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov ecx [ebx+10h] +
call sub_1004226  +
test al 2 +
jz loc_1044756  +
mov eax [ebp+var_22C] +
sub eax [ebp+var_228] +
cmp eax 1 +
jg loc_1044301  +
push esi  +
push dword ptr [ebx+2Ch]  +
mov ecx ebx +
call sub_103F2AE  +
movsx edi ax +
lea eax [esi+10h] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
cmp dword ptr [esi] 0 +
jz loc_1066F04  +
mov eax ds:dword_10442E4 +
cdq   +
sub eax edx +
sar eax 1 +
push 0  +
push eax  +
sub edi eax +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov eax [esi+34h] +
push 0  +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
cmp edi [ebp+rc.left] +
jl loc_1004EA7  +
cmp edi [ebp+rc.right] +
jl loc_1044301  +
jmp loc_1004EA7  +
mov dword ptr [esi+20h] 0FFFF0000h +
jmp loc_100C710  +
test al al +
jz loc_100C726  +
jmp loc_100C747  +
mov eax [ebx] +
test eax eax +
jz loc_1044507  +
jmp loc_10652BD  +
mov eax [esi+0E4h] +
test eax eax +
jz loc_104458A  +
jmp loc_10652FA  +
***
cmp dword ptr [ebp-0Ch] 0 +
jz loc_1044545  +
jmp loc_1044566  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
cmp [esi+0C8h] ebx +
jnz loc_10448F3  +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
test eax eax +
jnz loc_10448F3  +
cmp [esi+0CCh] ebx +
jnz loc_10654E0  +
push edi  +
lea edi [esi+0E0h] +
mov eax [edi] +
cmp eax ebx +
jnz loc_1065563  +
push 1  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [esi+0CCh]  +
lea ecx [esi-18h] +
call sub_1044438  +
mov eax [esi+0D0h] +
pop edi  +
cmp eax ebx +
jz loc_10448A0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jnz loc_10448A0  +
push ebx  +
push 190h  +
push 5  +
push dword ptr [esi-14h]  +
call ds:SetTimer  +
mov [esi+0E4h] eax +
cmp [ebp+0Ch] ebx +
jnz loc_10448ED  +
cmp [esi+0D0h] ebx +
jz loc_10448ED  +
cmp [esi+164h] ebx +
jnz loc_10448ED  +
mov eax [esi-14h] +
mov [ebp-8] eax +
lea eax [ebp-10h] +
push eax  +
mov dword ptr [ebp-10h] 10h +
mov dword ptr [ebp-0Ch] 80000003h +
call ds:TrackMouseEvent  +
mov [esi+88h] ebx +
mov [esi+84h] ebx +
mov esi [esi+0D0h] +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+44h]  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
cmp [ebp+0Ch] ebx +
jnz loc_1065516  +
jmp loc_10448A5  +
***
test eax eax +
jnz loc_1044850  +
jmp loc_10448A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ecx+3Ch] eax +
setnz al  +
pop ebp  +
retn 4  +
***
add esi 18h +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+2Ch]  +
jmp loc_1003CBC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi] +
push edi  +
call dword ptr [eax+84h]  +
mov eax [edi+8] +
add eax 1Ch +
mov ecx [eax] +
lea esi [edi-8] +
neg esi  +
push 0  +
sbb esi esi +
push 9  +
and esi edi +
push esi  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [edi+8] +
push 0Ah  +
add eax 1Ch +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jnz loc_1066448  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+144h] 0 +
jnz loc_1067838  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor ebx ebx +
cmp [ebp+0Ch] ebx +
jz loc_10678C8  +
pop ebx  +
leave   +
retn 8  +
***
push dword ptr [esi+0F0h]  +
mov ebx ds:KillTimer +
push dword ptr [esi+4]  +
call ebx  +
xor edi edi +
mov [esi+0F0h] edi +
cmp [esi+0C8h] edi +
jnz loc_1064F53  +
mov eax [esi+0A8h] +
cmp eax edi +
jnz loc_1064EC1  +
push 2Ch  +
lea eax [ebp+var_2C] +
push edi  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+4] +
mov ebx ds:SendMessageW +
or dword ptr [ebp-0Ch] 0FFFFFFFFh +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov eax hInstance +
add esp 0Ch +
mov [ebp+dy] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 432h  +
push dword ptr [esi+98h]  +
mov [ebp+var_2C] 121h +
call ebx  +
push dword ptr [esi+98h]  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_1064F3F  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 411h  +
push dword ptr [esi+98h]  +
call ebx  +
push edi  +
push 1388h  +
push 3  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov [esi+0F4h] eax +
jmp loc_100AC66  +
***
mov eax [esi+0A8h] +
test eax eax +
jz loc_1003CBC  +
jmp loc_10661E7  +
***
mov eax [ebx] +
cmp eax [esi] +
jnz loc_100E617  +
cmp dword ptr [esi+1Ch] 3 +
jnz loc_1027DD1  +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1036FB0  +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_1036FB0  +
***
push edi  +
push ebx  +
push 84h  +
push dword ptr [ebp-48h]  +
call ds:DefWindowProcW  +
cmp eax 7 +
jz loc_10024CD  +
cmp eax 6 +
jz loc_10024CD  +
or eax 0FFFFFFFFh +
jmp loc_10024CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_1045A60  +
push dword ptr [ebp+14h]  +
mov ecx [eax] +
push dword ptr [ebp+10h]  +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:InternalGetWindowText  +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
push esi  +
mov edi ecx +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_1044B6A  +
mov ecx edi +
call sub_1004226  +
test al 2 +
jz loc_1044B62  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_1044B62  +
cmp [ebp+arg_0] 1 +
jg loc_1044B6A  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1044B64  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push ebx  +
push 0  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+10h]  +
mov [ebp+8] eax +
test eax eax +
jl loc_1044BD7  +
push edi  +
mov edi [ebp+10h] +
cmp edi 0FFFFFFFEh +
jz loc_1044BC0  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-20h] +
call sub_1005D55  +
test eax eax +
jz loc_1044BC0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0A8h]  +
test edi edi +
jl loc_1044BCE  +
cmp edi eax +
jge loc_1044BCE  +
inc edi  +
add [ebx] edi +
mov eax [ebp+8] +
pop edi  +
test eax eax +
jl loc_1044BD7  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov dword ptr [ebp+8] 80004005h +
jmp loc_1044BC0  +
***
or dword ptr [ebx] 0FFFFFFFFh +
jmp loc_1044BC8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
mov esi [ebp+8] +
push 0  +
lea eax [ebp-4] +
push eax  +
mov eax [ebp+0Ch] +
push dword ptr [eax+4]  +
lea ecx [esi-20h] +
push dword ptr [eax]  +
call sub_1045203  +
test eax eax +
jz loc_1044C2D  +
cmp dword ptr [ebp-4] 0FFFFFFFFh +
jz loc_1044C2D  +
push edi  +
mov edi [esi] +
lea ecx [ebp-4] +
push ecx  +
push dword ptr [ebp-4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push esi  +
call dword ptr [edi+14h]  +
pop edi  +
test eax eax +
jl loc_1064C68  +
mov eax [ebp-4] +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push esi  +
push dword ptr [ebp+0Ch]  +
add ecx 0FFFFFFE0h +
xor esi esi +
call sub_1005D55  +
test eax eax +
jz loc_1044C5C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ecx+0D4h] eax +
jnz loc_1064FCD  +
push eax  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1045203  +
neg eax  +
sbb eax eax +
and eax 2 +
dec eax  +
pop ebp  +
retn 8  +
***
mov edi [ebx+0B0h] +
jmp loc_1004C2C  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_10041B6  +
***
neg ecx  +
sbb ecx ecx +
and ecx 3 +
add ecx 3 +
jmp loc_1005BF7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ecx [esi+8] +
call sub_1004266  +
mov [ebp-4] eax +
mov eax [esi+24h] +
mov [ebp-8] eax +
mov dword ptr [esi+24h] 0FFFF0000h +
mov eax [esi+10h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1044DB3  +
mov eax [eax] +
mov [ebp+8] eax +
cmp [ebp+8] ebx +
jle loc_1044DAD  +
push edi  +
mov edi ds:InflateRect +
push ebx  +
push dword ptr [esi+10h]  +
call ds:off_1003D88  +
push eax  +
mov [ebp-0Ch] eax +
lea eax [ebp-1Ch] +
push eax  +
call ds:CopyRect  +
xor ecx ecx +
cmp [ebp-4] ecx +
jz loc_10667E9  +
mov eax ds:dword_10442E4 +
cdq   +
sub eax edx +
push ecx  +
sar eax 1 +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call edi  +
push dword ptr [ebp+10h]  +
lea eax [ebp-1Ch] +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_1044DBB  +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
push 8  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_10667FA  +
cmp [ebp-4] eax +
jz loc_1044DC6  +
mov eax [ebp+0Ch] +
sub eax [ebp-1Ch] +
movzx eax ax +
movzx ecx bx +
movzx eax ax +
shl ecx 10h +
or ecx eax +
mov [esi+24h] ecx +
mov eax [ebp-8] +
cmp eax [esi+24h] +
jz loc_1044DAC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 2 +
jz loc_1066828  +
mov eax [esi+8] +
push 0  +
push dword ptr [ebp-0Ch]  +
push dword ptr [eax+4]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov [ebp+8] ebx +
jmp loc_1044CF9  +
***
inc ebx  +
cmp ebx [ebp+8] +
jge loc_1044DAC  +
jmp loc_1044D09  +
***
mov eax [ebp+10h] +
sub eax [ebp-18h] +
jmp loc_1044D73  +
***
test eax eax +
jz loc_1044D9B  +
jmp loc_1044DAC  +
***
inc eax  +
jmp loc_1005888  +
***
mov eax [esi+14h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_10450B7  +
mov [ebp-4] edi +
jmp loc_10450B7  +
***
xor eax eax +
jmp loc_1045031  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+pvarg] +
test esi esi +
jz loc_1067ED9  +
cmp [ebp+arg_8] 3 +
jnz loc_1044E56  +
push esi  +
call ds:VariantInit  +
and dword ptr [esi+8] 0 +
push 3  +
pop eax  +
mov [esi] ax +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
test eax eax +
jz loc_1067EE3  +
mov ecx [ebp+arg_10] +
test ecx ecx +
jnz loc_1044E60  +
mov ecx [ebp+arg_4] +
sub ecx 7 +
jz loc_1067F02  +
dec ecx  +
jz loc_1067EED  +
mov eax 80070057h +
pop esi  +
pop ebp  +
retn 1Ch  +
dec ecx  +
jns loc_1067F0A  +
jmp loc_1044E56  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+pvarg] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_8] +
push edi  +
mov ebx 80004005h +
mov [ebp+var_4] eax +
test esi esi +
jz loc_1044EE7  +
push esi  +
call ds:VariantInit  +
mov edi [ebp+arg_0] +
and dword ptr [esi+8] 0 +
push 3  +
pop eax  +
mov [esi] ax +
cmp dword ptr [edi+8] 0 +
jz loc_1044ED9  +
mov eax [edi+8] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
push eax  +
call ds:ScreenToClient  +
test eax eax +
jz loc_1044ED9  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
xor ebx ebx +
cmp eax ebx +
jl loc_1044EE2  +
inc eax  +
mov [esi+8] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
mov [esi+8] ebx +
jmp loc_1044ED9  +
mov ebx 80004003h +
jmp loc_1044ED9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx 80004005h +
test esi esi +
jz loc_1044F37  +
mov eax [ebp+arg_0] +
and dword ptr [esi] 0 +
cmp dword ptr [eax+8] 0 +
jz loc_1044F2F  +
mov eax [eax+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jz loc_1044F2F  +
push esi  +
push offset stru_1052A44  +
push 0  +
push eax  +
call AccessibleObjectFromWindow  +
mov ebx eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
mov ebx 80004003h +
jmp loc_1044F2F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+pvarg] +
push edi  +
mov [ebp+var_4] 80070057h +
test esi esi +
jz loc_1045E81  +
cmp [ebp+arg_4] 3 +
jnz loc_1044FD2  +
mov ebx [ebp+arg_C] +
push esi  +
call ds:VariantInit  +
push 3  +
pop eax  +
mov [esi] ax +
test ebx ebx +
jz loc_1045E72  +
mov edi [ebp+arg_0] +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
lea edx [ebp+pvarg] +
push edx  +
dec ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1044FD2  +
mov eax [edi+8] +
push [ebp+pvarg]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
sub eax 3 +
neg eax  +
sbb eax eax +
and [ebp+var_4] 0 +
and eax 0FFFFFFF2h +
add eax 39h +
mov [esi+8] eax +
mov eax [ebp+pvarg] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1044FD2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi 80070490h +
test esi esi +
jz loc_104501A  +
mov eax [ebp+8] +
and dword ptr [esi] 0 +
cmp dword ptr [eax+4] 0 +
jz loc_1045013  +
mov eax [eax+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov [esi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi 80004005h +
jmp loc_104500B  +
***
mov edi 80004003h +
jmp loc_104500B  +
***
mov [ebp-8] ebx +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_1044DF9  +
mov eax [eax] +
cmp [ebp-8] eax +
jge loc_10451C9  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp-8]  +
lea ecx [esi-8] +
push 1  +
mov [ebp-0Ch] ebx +
call sub_1004615  +
test eax eax +
jl loc_10450C1  +
mov edi [ebp-18h] +
cmp edi [ebp-14h] +
jg loc_10450B9  +
push ebx  +
push dword ptr [ebp-0Ch]  +
call ds:off_1003D88  +
push eax  +
lea eax [ebp-28h] +
push eax  +
call ds:CopyRect  +
xor ecx ecx +
cmp [ebp-10h] ecx +
jz loc_1067782  +
mov eax ds:dword_10442E4 +
cdq   +
sub eax edx +
push ecx  +
sar eax 1 +
push eax  +
lea eax [ebp-28h] +
push eax  +
call ds:InflateRect  +
push dword ptr [ebp+10h]  +
lea eax [ebp-28h] +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_1044DDA  +
inc edi  +
inc ebx  +
cmp edi [ebp-14h] +
jle loc_1045062  +
xor ebx ebx +
lea ecx [ebp-0Ch] +
call sub_10044C2  +
inc dword ptr [ebp-8]  +
jmp loc_1045024  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+0Ch]  +
mov [ebp+8] eax +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
neg edi  +
sbb edi edi +
inc edi  +
jz loc_10451ED  +
cmp dword ptr [ebp+8] 2 +
jnz loc_10451ED  +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
xor ebx ebx +
lea edx [esi-8] +
neg edx  +
push ebx  +
sbb edx edx +
push 1  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10676A2  +
mov ecx [esi+8] +
call sub_1004266  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-10h] eax +
cmp edi ebx +
jz loc_104514A  +
cmp dword ptr [ebp+8] 3 +
jz loc_10676AA  +
cmp dword ptr [ebp+8] 1 +
jz loc_1045021  +
jle loc_10451C9  +
cmp dword ptr [ebp+8] 4 +
jg loc_10451C9  +
push ebx  +
push ebx  +
lea eax [ebp-8] +
push eax  +
push ebx  +
push dword ptr [ebp+8]  +
lea ecx [esi-8] +
mov [ebp-8] ebx +
call sub_1004615  +
test eax eax +
jl loc_10451C9  +
push ebx  +
push dword ptr [ebp-8]  +
call ds:off_1003D88  +
push eax  +
lea eax [ebp-28h] +
push eax  +
call ds:CopyRect  +
cmp [ebp-10h] ebx +
jz loc_10676D7  +
mov eax ds:dword_10442E4 +
cdq   +
sub eax edx +
push ebx  +
sar eax 1 +
push eax  +
lea eax [ebp-28h] +
push eax  +
call ds:InflateRect  +
push dword ptr [ebp+10h]  +
lea eax [ebp-28h] +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_10676E8  +
lea ecx [ebp-8] +
call sub_10044C2  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_10676F4  +
mov edi [ebp+14h] +
cmp edi ebx +
jnz loc_1067713  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
xor ebx ebx +
jmp loc_104512D  +
***
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_104521A  +
mov [ebp+var_4] ebx +
jmp loc_1045229  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
xor ebx ebx +
push edi  +
mov edi ecx +
mov [ebp+var_8] ebx +
cmp eax ebx +
jnz loc_10451F4  +
mov eax [edi+90h] +
cmp eax ebx +
jz loc_10451F9  +
mov eax [eax] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] ebx +
jle loc_1045259  +
push esi  +
push [ebp+arg_C]  +
mov eax [edi+90h] +
push [ebp+arg_4]  +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
push [ebp+arg_0]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A4h]  +
cmp eax 0FFFFFFFFh +
jnz loc_1045262  +
inc ebx  +
cmp ebx [ebp+var_4] +
jl loc_104522F  +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_104526E  +
mov [ebp+var_8] esi +
jmp loc_1045258  +
mov [ecx] eax +
jmp loc_1045269  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov edi ds:__imp_IUnknown_Set +
push eax  +
push dword ptr [ebp+10h]  +
call edi  +
mov eax [esi] +
dec ebx  +
push ebx  +
push esi  +
call dword ptr [eax+0ACh]  +
push eax  +
push dword ptr [ebp+14h]  +
call edi  +
mov eax [ebp+18h] +
test eax eax +
jz loc_104529E  +
mov [eax] ebx +
xor eax eax +
jmp loc_1045318  +
mov [ebp-4] edi +
jmp loc_10452D3  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+10h] +
push edi  +
xor edi edi +
mov [ecx] edi +
mov ecx [ebp+14h] +
mov [ecx] edi +
mov ecx [ebp+8] +
mov ecx [ecx+70h] +
mov eax 80070057h +
cmp ecx edi +
jz loc_10452A2  +
mov ecx [ecx] +
mov [ebp-4] ecx +
cmp [ebp-4] edi +
jle loc_104531A  +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
test ebx ebx +
jl loc_1045318  +
mov eax [ebp+8] +
mov eax [eax+70h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
test ebx ebx +
jz loc_1045B27  +
cmp ebx eax +
jle loc_1045272  +
or ecx 0FFFFFFFFh +
sub ecx eax +
add ebx ecx +
inc edi  +
cmp edi [ebp-4] +
mov eax 80070490h +
jl loc_10452DD  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 14h  +
***
mov eax [esi+160h] +
cmp eax [ebp+nDenominator] +
jz loc_104540F  +
jmp loc_104534C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
mov edi [ebp+nNumber] +
mov esi ecx +
cmp [esi+15Ch] edi +
jz loc_104531F  +
mov eax [ebp+nDenominator] +
push ebx  +
mov [esi+15Ch] edi +
mov [esi+160h] eax +
call ds:GetCapture  +
cmp eax [esi+4] +
jz loc_1065F6C  +
xor ebx ebx +
cmp [esi+9Ch] ebx +
jz loc_1046089  +
or [ebp+nNumber] 0FFFFFFFFh +
push ebx  +
lea eax [ebp+nNumber] +
push eax  +
push [ebp+nDenominator]  +
mov ecx esi +
push edi  +
call sub_1045203  +
mov ecx [ebp+nNumber] +
mov edi eax +
mov eax [esi+0A8h] +
mov [ebp+nDenominator] edi +
cmp edi eax +
jnz loc_10460B2  +
cmp ecx [esi+0B0h] +
jnz loc_10460A4  +
cmp [esi+0F0h] ebx +
jz loc_10453C2  +
push 1  +
push 1  +
mov ecx esi +
call sub_104439B  +
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_10453E7  +
cmp dword ptr [esi+0B0h] 0FFFFFFFFh +
jz loc_10453E7  +
push dword ptr [esi+160h]  +
mov ecx [eax] +
push dword ptr [esi+15Ch]  +
push eax  +
call dword ptr [ecx+6Ch]  +
cmp [esi+50h] ebx +
jnz loc_104540E  +
cmp [esi+0E4h] ebx +
jnz loc_10660BA  +
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_104540E  +
cmp [esi+0A0h] ebx +
jz loc_1066124  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
xor edi edi +
inc edi  +
test esi esi +
jz loc_1045F2E  +
and dword ptr [esi] 0 +
mov eax [eax+8] +
test eax eax +
jz loc_1067FF5  +
cmp [ebp+arg_4] 3 +
jnz loc_1045F24  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_1045EEB  +
mov edx [eax] +
push ebx  +
push 0  +
lea ebx [ebp+var_210] +
push ebx  +
lea ebx [ebp+var_214] +
push ebx  +
dec ecx  +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
pop ebx  +
test eax eax +
jl loc_10454EA  +
mov eax [ebp+var_214] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+Buffer] +
push edx  +
push [ebp+var_210]  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
test edi edi +
jl loc_10454CE  +
push 0Ah  +
lea eax [ebp+Buffer] +
push eax  +
call ds:__imp_StrChrW  +
test eax eax +
jnz loc_1067FFF  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1045501  +
mov edi eax +
mov eax [ebp+var_214] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_210] +
test eax eax +
jz loc_10454EA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1058B19  +
push eax  +
call ds:SysAllocString  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
***
mov ecx ebx +
call sub_1052E89  +
jmp loc_1002208  +
***
call ds:GetMessageExtraInfo  +
mov ecx 0FF515780h +
and eax ecx +
sub eax ecx +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
xor ecx ecx +
and al 1 +
cmp al 1 +
push ebx  +
setz cl  +
push esi  +
push edi  +
mov edi [ebp+8] +
xor ebx ebx +
mov esi ecx +
cmp [edi+0C0h] ebx +
jnz loc_10455BE  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jz loc_1064480  +
cmp [edi+38h] ebx +
jnz loc_1064480  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov ebx eax +
test ebx ebx +
jz loc_106447E  +
xor eax eax +
cmp ebx [edi+0B8h] +
setz al  +
cmp esi eax +
jnz loc_106444A  +
xor eax eax +
test eax eax +
jl loc_106447E  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
cmp [esi+0A0h] ebx +
jz loc_1045605  +
mov eax [esi+4] +
mov [ebp+EventTrack.hwndTrack] eax +
lea eax [ebp+EventTrack] +
push eax  +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 80000001h +
call ds:TrackMouseEvent  +
mov [esi+0A0h] ebx +
lea edi [esi+0F8h] +
mov eax [edi] +
cmp eax ebx +
jnz loc_1064FBC  +
mov edi [esi+4] +
call ds:GetCapture  +
cmp eax edi +
jz loc_1045678  +
push edi  +
call ds:SetCapture  +
mov edx [ebp+arg_C] +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
push ebx  +
mov [esi+0C4h] edx +
lea edx [esi+0C0h] +
push edx  +
push ecx  +
mov [esi+158h] ecx +
push eax  +
mov ecx esi +
mov [esi+154h] eax +
mov [esi+150h] ebx +
call sub_1045203  +
push eax  +
add esi 0BCh +
push esi  +
call ds:__imp_IUnknown_Set  +
mov esi [esi] +
cmp esi ebx +
jz loc_1045678  +
mov eax [esi] +
push esi  +
call dword ptr [eax+84h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
cmp dword ptr [ecx+8] 1 +
jnz loc_1005786  +
mov eax [ecx+0Ch] +
sub eax [edx+0C0h] +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1005786  +
***
push 1  +
push 1  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
jmp loc_10050CC  +
test al 2 +
jz loc_1004DC1  +
jmp loc_1004047  +
***
cmp edi [ebp+rc.bottom] +
jl loc_1044301  +
jmp loc_1004EA7  +
***
cmp byte ptr [esi+78h] 0 +
jbe loc_1004F16  +
jmp loc_100C808  +
cmp [ebp+var_218] esi +
jz loc_1005084  +
jmp loc_10050BA  +
mov eax [ebp+var_214] +
jmp loc_1007F81  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+10h] +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+4Ch]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+90h]  +
mov edi eax +
test edi edi +
jnz loc_106354F  +
push ebx  +
call ds:IsWindow  +
test eax eax +
jz loc_10635E9  +
cmp dword ptr [ebp+14h] 0 +
push esi  +
jz loc_1063582  +
mov ecx [ebp+8] +
add ecx 0FFFFFFE0h +
call sub_1045759  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push esi  +
mov [ebp+var_C] ecx +
call dword ptr [eax+4Ch]  +
mov ebx eax +
push ebx  +
mov [ebp+hWnd] ebx +
call sub_1005CD2  +
test eax eax +
jz loc_1045808  +
push edi  +
xor edi edi +
push edi  +
call sub_1009ADE  +
push edi  +
push edi  +
push 8000h  +
push dword_10B10F4  +
call ds:SendMessageW  +
mov eax [esi] +
push esi  +
mov [ebp+arg_0] ebx +
mov [ebp+var_4] edi +
call dword ptr [eax+90h]  +
cmp eax edi +
jnz loc_1062CDB  +
push 3  +
push ebx  +
call ds:GetAncestor  +
push eax  +
call ds:GetLastActivePopup  +
mov edi eax +
test edi edi +
jz loc_10457D3  +
cmp edi ebx +
jnz loc_1062CE8  +
push [ebp+arg_0]  +
call sub_1045813  +
pop edi  +
test eax eax +
jnz loc_1062D46  +
push 1  +
push [ebp+arg_0]  +
call ds:SwitchToThisWindow  +
cmp [ebp+var_4] 0 +
jnz loc_1062D46  +
mov eax [ebp+var_C] +
mov eax [eax+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+hWnd]  +
xor esi esi +
call ds:IsIconic  +
test eax eax +
jz loc_1045839  +
push [ebp+hWnd]  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1062CD5  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax ebx +
sub eax 208h +
jz loc_104585E  +
sub eax 29h +
jz loc_1066336  +
dec eax  +
jnz loc_1003CD0  +
jmp loc_10662FE  +
***
call sub_1045540  +
push eax  +
xor eax eax +
cmp ebx 208h +
setz al  +
mov ecx esi +
push eax  +
mov eax edi +
shr eax 10h +
cwde   +
push eax  +
movsx eax di +
push eax  +
push dword ptr [ebp-48h]  +
call sub_104588F  +
jmp loc_1003CBC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
call ds:GetCapture  +
cmp eax [esi+4] +
jnz loc_104591F  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
push edi  +
xor ebx ebx +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
call sub_1045203  +
mov edi eax +
cmp [esi+150h] ebx +
jnz loc_1065E1E  +
cmp edi ebx +
jz loc_10458F6  +
xor ecx ecx +
cmp [ebp+arg_C] ebx +
jnz loc_1045924  +
test [ebp+arg_0] 4 +
jnz loc_1045924  +
test [ebp+arg_0] 8 +
jnz loc_1065E5C  +
push [ebp+arg_10]  +
push ebx  +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
push edi  +
call sub_1045930  +
lea edi [esi+0BCh] +
mov eax [edi] +
cmp eax ebx +
jz loc_104590B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+84h]  +
push edi  +
mov [esi+0C4h] ebx +
call sub_1002BEE  +
call ds:ReleaseCapture  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 14h  +
push 3  +
jmp loc_1065E5E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 1C0h  +
push offset dword_1045A50  +
mov esi ecx +
call sub_1034B2D  +
xor ebx ebx +
cmp [esi+0C8h] ebx +
jnz loc_1045960  +
cmp [esi+0F0h] ebx +
jz loc_1064FD3  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
mov ebx ds:KillTimer +
lea edi [esi+0F0h] +
push dword ptr [edi]  +
push dword ptr [esi+4]  +
call ebx  +
and dword ptr [edi] 0 +
lea edi [esi+0F4h] +
push dword ptr [edi]  +
push dword ptr [esi+4]  +
call ebx  +
and dword ptr [edi] 0 +
xor ebx ebx +
mov edi [ebp+arg_0] +
mov [esi+0A4h] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 2 +
jz loc_1045A3D  +
cmp [ebp+arg_8] 3 +
jz loc_1045A3D  +
push edi  +
mov ecx esi +
call sub_1044B21  +
test eax eax +
jnz loc_1065055  +
cmp [ebp+arg_8] 1 +
jz loc_106518A  +
cmp [ebp+arg_8] 2 +
jz loc_106518A  +
push [ebp+arg_4]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0ACh]  +
mov ebx eax +
mov [ebp+arg_8] ebx +
test ebx ebx +
jz loc_1045A36  +
push 0  +
lea eax [esi+18h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+48h]  +
cmp dword ptr [esi+0C4h] 0 +
jnz loc_1045A1D  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
cmp eax [esi+94h] +
jz loc_106519E  +
xor eax eax +
inc eax  +
mov ecx [esi+38h] +
mov ebx [ecx] +
push eax  +
push [ebp+arg_8]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
push eax  +
push dword ptr [esi+38h]  +
call dword ptr [ebx+1Ch]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
cmp [esi+0C4h] ebx +
jnz loc_1045A36  +
jmp loc_10651F7  +
***
mov eax [ebp+8] +
push esi  +
lea esi [eax+8] +
cmp dword ptr [esi] 0 +
jz loc_10641EE  +
push dword ptr [esi]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_100665F  +
pop esi  +
jmp loc_1044B18  +
***
test eax eax +
jge loc_1045A70  +
jmp loc_1045A7D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
lea edi [esi+0E4h] +
mov eax [edi] +
xor ebx ebx +
cmp eax ebx +
jnz loc_106440A  +
cmp [ebp+0Ch] ebx +
jnz loc_1045B1B  +
cmp [esi+0D0h] ebx +
jz loc_1045B1B  +
cmp [esi+164h] ebx +
jnz loc_1045B1B  +
mov eax [esi-14h] +
mov [ebp-8] eax +
mov eax [esi+0C4h] +
mov dword ptr [ebp-10h] 10h +
mov dword ptr [ebp-0Ch] 3 +
cmp eax ebx +
jnz loc_1045B22  +
push ebx  +
lea eax [ebp-4] +
push eax  +
push ebx  +
push 66h  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_106441B  +
lea eax [ebp-10h] +
push eax  +
call ds:TrackMouseEvent  +
mov [esi+88h] eax +
mov [esi+84h] eax +
mov esi [esi+0D0h] +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+40h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov [ebp-4] eax +
jmp loc_1045AF7  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:__imp_IUnknown_Set  +
mov eax [ebp+18h] +
test eax eax +
jz loc_104529E  +
mov dword ptr [eax] 0FFFFFFFEh +
jmp loc_104529E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+8] +
mov eax [ebx] +
lea ecx [ebp+8] +
push ecx  +
lea ecx [ebp-8] +
push ecx  +
lea ecx [ebp+0Ch] +
push ecx  +
push dword ptr [ebp+0Ch]  +
mov byte ptr [ebp-1] 0 +
push ebx  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_1045C1B  +
push esi  +
push edi  +
push dword ptr [ebp+0Ch]  +
lea edi [ebx-20h] +
mov ecx edi +
call sub_1005D55  +
mov esi eax +
test esi esi +
jz loc_1045BC6  +
cmp dword ptr [ebp+8] 0FFFFFFFEh +
jz loc_1064C2A  +
push dword ptr [ebp+10h]  +
mov eax [esi] +
push dword ptr [ebp+8]  +
push esi  +
call dword ptr [eax+30h]  +
mov ecx edi +
call sub_1004266  +
test eax eax +
jz loc_1045C23  +
push 0  +
push 1  +
push dword ptr [ebp+10h]  +
call ds:InflateRect  +
mov byte ptr [ebp-1] 1 +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-8] +
pop edi  +
pop esi  +
test eax eax +
jz loc_1045BDE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp byte ptr [ebp-1] 0 +
jz loc_1045C1B  +
push dword ptr [ebp+10h]  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_1045C1B  +
push 0FFFFFFECh  +
call ds:GetDesktopWindow  +
push eax  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_1064C47  +
push 2  +
push dword ptr [ebp+10h]  +
push 0  +
push dword ptr [ebx-1Ch]  +
call ds:MapWindowPoints  +
mov al [ebp-1] +
pop ebx  +
leave   +
retn 0Ch  +
***
push 1  +
push 0  +
jmp loc_1045BB9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
mov eax [ebx+70h] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp eax edi +
jz loc_1045C73  +
mov eax [eax] +
mov [ebp+8] eax +
cmp [ebp+8] edi +
jle loc_1045C6A  +
mov eax [ebx+70h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0A8h]  +
inc edi  +
cmp edi [ebp+8] +
lea esi [esi+eax+1] +
jl loc_1045C4E  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov [ebp+8] edi +
jmp loc_1045C49  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
and dword ptr [edi] 0 +
lea ecx [esi+88h] +
cmp dword ptr [ecx] 0 +
mov eax 80070490h +
jnz loc_1064C71  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
xor ecx ecx +
lea eax [esi+0C8h] +
mov [ebx] ecx +
push edi  +
mov dword ptr [ebp-4] 80070490h +
cmp [eax] ecx +
jz loc_1045CDE  +
lea edi [esi+0C4h] +
cmp [edi] ecx +
jnz loc_1064CA0  +
lea eax [esi+94h] +
cmp dword ptr [eax] 0 +
jnz loc_1064CCB  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
sub ebx 121h +
jz loc_102EFB4  +
sub ebx 18h +
jz loc_102EFA8  +
sub ebx 7 +
jz loc_102EF9A  +
jmp loc_1003CD0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
cmp dword ptr [ebp+10h] 0FFFFFFFFh +
jz loc_1045D64  +
push esi  +
push edi  +
cmp [ebp+0Ch] ebx +
jz loc_1045D6B  +
mov esi [ebp+8] +
cmp [ebp+14h] ebx +
jnz loc_1066378  +
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
sbb edx edx +
push 8  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
test ebx ebx +
jnz loc_10663D1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
cmp [ebp+14h] ebx +
jnz loc_10663D6  +
jmp loc_1045D62  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_4] +
push ebx  +
xor ecx ecx +
push esi  +
push edi  +
mov [ebp+var_4] 80020003h +
cmp eax ecx +
jz loc_1045E29  +
mov ebx [ebp+arg_8] +
cmp ebx ecx +
jz loc_1045E29  +
mov edi [ebp+arg_C] +
cmp edi ecx +
jz loc_1045E29  +
mov esi [ebp+arg_10] +
cmp esi ecx +
jz loc_1045E29  +
mov [eax] ecx +
mov eax [ebp+arg_0] +
mov [ebx] ecx +
mov [edi] ecx +
mov [esi] ecx +
mov eax [eax+8] +
cmp eax ecx +
jz loc_1067EB5  +
cmp [ebp+arg_14] 3 +
jnz loc_1045E20  +
mov edx [ebp+arg_1C] +
cmp edx ecx +
jz loc_1067EC1  +
lea ecx [edx-1] +
mov [ebp+arg_8] ecx +
cmp ecx 0FFFFFFF6h +
jz loc_1045E16  +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx+18h]  +
test al al +
jz loc_1045E16  +
mov eax [ebp+var_14] +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_C] +
mov [ecx] eax +
mov ecx [ebp+var_10] +
sub edx eax +
mov eax [ebp+var_8] +
mov [ebx] ecx +
sub eax ecx +
and [ebp+var_4] 0 +
mov [edi] edx +
mov [esi] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
mov [ebp+var_4] 80070057h +
jmp loc_1045E16  +
mov [ebp+var_4] 80004003h +
jmp loc_1045E16  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_1045E6B  +
mov eax [ebp+arg_0] +
cmp [eax+8] edi +
jz loc_1045E62  +
mov eax [eax+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov [esi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov [esi] edi +
mov edi 80004005h +
jmp loc_1045E5A  +
mov edi 80004003h +
jmp loc_1045E5A  +
***
and [ebp+var_4] ebx +
mov dword ptr [esi+8] 16h +
jmp loc_1044FD2  +
mov [ebp+var_4] 80004003h +
jmp loc_1044FD2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ecx+8] +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
xor esi esi +
call dword ptr [ecx+44h]  +
test eax eax +
jge loc_1067F42  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ecx+8] +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
xor esi esi +
call dword ptr [ecx+3Ch]  +
test eax eax +
jge loc_1067F75  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push 252h  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jle loc_10454EA  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1045501  +
mov edi eax +
jmp loc_10454EA  +
mov edi 80070057h +
jmp loc_10454EA  +
mov edi 80004003h +
jmp loc_10454EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+pvarg] +
mov [ebp+var_4] 80070057h +
test esi esi +
jz loc_1046006  +
push esi  +
call ds:VariantInit  +
mov ebx [ebp+arg_0] +
push 3  +
pop eax  +
mov [esi] ax +
mov eax [ebx+8] +
test eax eax +
jz loc_1068009  +
cmp [ebp+arg_4] 3 +
jnz loc_1045FF5  +
mov ecx [eax] +
and [ebp+arg_0] 0 +
and [ebp+var_4] 0 +
push edi  +
mov edi [ebp+arg_C] +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
call ds:GetFocus  +
sub esi eax +
neg esi  +
sbb esi esi +
inc esi  +
test edi edi +
jz loc_1068015  +
dec edi  +
js loc_1045FEB  +
mov eax [ebx+8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_10] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1045FEB  +
cmp [ebp+var_8] 0 +
jz loc_1045FE4  +
push esi  +
push [ebp+var_C]  +
mov ecx ebx +
push [ebp+var_8]  +
call sub_1046014  +
mov [ebp+arg_0] eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_1045FFE  +
mov eax [ebp+pvarg] +
mov ecx [ebp+arg_0] +
mov [eax+8] ecx +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1045FEB  +
mov [ebp+var_4] 80004003h +
jmp loc_1045FF5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
xor edi edi +
call dword ptr [ecx+2Ch]  +
dec eax  +
mov ebx [ebp+arg_4] +
jnz loc_1046079  +
mov edi 40000000h +
test ebx ebx +
jge loc_1046040  +
mov edi 40008000h +
cmp [ebp+arg_8] 0 +
jnz sub_1067FC1  +
push ebx  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1045E92  +
test eax eax +
jnz loc_1067FE2  +
push ebx  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1045EC1  +
test eax eax +
jnz loc_1067FEA  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
dec eax  +
jnz loc_1067FA3  +
test ebx ebx +
jl loc_1046040  +
jmp loc_1067FB6  +
***
cmp [esi+17Ch] ebx +
jnz loc_1045379  +
lea eax [esi+18h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
jmp loc_1045379  +
cmp edi eax +
jnz loc_10460B2  +
jmp loc_10460C9  +
mov [esi+0A4h] ebx +
jmp loc_10460C9  +
cmp [esi+150h] ebx +
jnz loc_10460AA  +
cmp [esi+50h] ebx +
jnz loc_10460AA  +
mov dword ptr [esi+0A4h] 1 +
push 1  +
push ebx  +
push ecx  +
push edi  +
mov ecx esi +
call sub_1044438  +
jmp loc_10453C2  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10109AA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
mov esi [ebp+8] +
push 0  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10679F2  +
lea eax [ebp-8] +
push eax  +
call ds:GetCursorPos  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1067A09  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ecx+24h] esi +
jz loc_1046169  +
mov eax [ecx+24h] +
mov edx [eax] +
push edi  +
lea edi [ebp+arg_0] +
push edi  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call dword ptr [edx+24h]  +
pop edi  +
test eax eax +
jz loc_1067895  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
lea eax [ebp+arg_C] +
mov [ebp+var_20] eax +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+var_14] eax +
mov [ebp+var_C] eax +
mov [ebp+var_4] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push [ebp+arg_8]  +
lea ecx [ebp+arg_14] +
push [ebp+arg_4]  +
mov [ebp+var_18] 8 +
push [ebp+arg_0]  +
mov [ebp+var_10] ecx +
mov [ebp+var_8] 4 +
call ds:EventWrite  +
leave   +
retn 18h  +
***
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10461F0  +
cmp edx edi +
jnz loc_10461F0  +
push offset dword_1046208  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
jmp loc_1006B86  +
***
test al al +
jnz loc_1006B87  +
jmp loc_1006B64  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1006AB9  +
cmp edx edi +
jnz loc_1006AB9  +
push offset dword_1046268  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1006AB9  +
***
test al al +
jnz loc_1006AB9  +
jmp loc_1006A98  +
***
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx ebx +
cmp ecx eax +
jnz loc_1006C53  +
cmp edx esi +
jnz loc_1006C53  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push dword ptr [edi+4]  +
push offset dword_10462F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_104647D  +
jmp loc_1006C53  +
***
mov [ebp-4] ecx +
jmp loc_1006C02  +
***
test al al +
jnz loc_1006C53  +
jmp loc_1006C37  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
lea eax [ebp+arg_C] +
xor ecx ecx +
push esi  +
mov esi [ebp+arg_1C] +
mov [ebp+var_70] eax +
lea eax [ebp+arg_10] +
push 4  +
pop edx  +
mov [ebp+var_60] eax +
lea eax [ebp+arg_14] +
mov [ebp+var_6C] ecx +
mov [ebp+var_68] edx +
mov [ebp+var_64] ecx +
mov [ebp+var_5C] ecx +
mov [ebp+var_58] edx +
mov [ebp+var_54] ecx +
mov [ebp+var_50] eax +
mov [ebp+var_4C] ecx +
mov [ebp+var_48] 8 +
mov [ebp+var_44] ecx +
cmp esi ecx +
jz loc_10463C9  +
push ebx  +
mov eax esi +
push edi  +
lea ebx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di cx +
jnz loc_104635A  +
sub eax ebx +
sar eax 1 +
pop edi  +
lea eax [eax+eax+2] +
pop ebx  +
cmp esi ecx +
jz loc_10645CF  +
mov [ebp+var_38] eax +
lea eax [ebp+arg_20] +
mov [ebp+var_30] eax +
lea eax [ebp+arg_24] +
mov [ebp+var_20] eax +
lea eax [ebp+arg_28] +
mov [ebp+var_10] eax +
lea eax [ebp+var_70] +
push eax  +
push 7  +
push [ebp+arg_8]  +
mov [ebp+var_40] esi +
push [ebp+arg_4]  +
mov [ebp+var_3C] ecx +
push [ebp+arg_0]  +
mov [ebp+var_34] ecx +
mov [ebp+var_2C] ecx +
mov [ebp+var_28] edx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] edx +
mov [ebp+var_14] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
mov [ebp+var_4] ecx +
call ds:EventWrite  +
pop esi  +
leave   +
retn 2Ch  +
push 0Ah  +
pop eax  +
jmp loc_104636E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
sub esp 10h +
lea edx [ebp-10h] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [ebp-10h] +
inc eax  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
sub esp 10h +
lea edx [ebp-10h] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [ebp-0Ch] +
inc eax  +
leave   +
retn 8  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10076F2  +
cmp edx edi +
jnz loc_10076F2  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+4]  +
push offset dword_1046468  +
push dword_10B247C  +
push dword_10B2478  +
call sub_104647D  +
jmp loc_10076F2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push edi  +
mov edi [ebp+arg_C] +
test edi edi +
jnz loc_10464D8  +
push 0Ah  +
pop eax  +
mov ecx edi +
test edi edi +
jnz loc_104649B  +
mov ecx offset aNull_0 +
and [ebp+var_1C] 0 +
and [ebp+var_14] 0 +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
mov [ebp+var_18] eax +
lea eax [ebp+arg_10] +
mov [ebp+var_10] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push [ebp+arg_8]  +
mov [ebp+var_20] ecx +
push [ebp+arg_4]  +
mov [ebp+var_8] 4 +
push [ebp+arg_0]  +
call ds:EventWrite  +
pop edi  +
leave   +
retn 14h  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10464DD  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
jmp loc_1046490  +
***
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx esi +
cmp ecx eax +
jnz loc_100749B  +
cmp edx ebx +
jnz loc_100749B  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_14]  +
push edi  +
push offset dword_1046550  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046565  +
jmp loc_100749B  +
test al al +
jnz loc_100749B  +
jmp loc_100747A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push 4  +
lea eax [ebp+arg_C] +
mov [ebp+var_60] eax +
pop eax  +
mov [ebp+var_58] eax +
mov [ebp+var_48] eax +
mov [ebp+var_38] eax +
mov [ebp+var_28] eax +
mov [ebp+var_18] eax +
mov [ebp+var_8] eax +
lea edx [ebp+arg_10] +
mov [ebp+var_50] edx +
lea eax [ebp+var_60] +
push eax  +
xor ecx ecx +
push 6  +
push [ebp+arg_8]  +
lea edx [ebp+arg_14] +
push [ebp+arg_4]  +
mov [ebp+var_40] edx +
push [ebp+arg_0]  +
lea edx [ebp+arg_18] +
mov [ebp+var_30] edx +
lea edx [ebp+arg_1C] +
mov [ebp+var_20] edx +
lea edx [ebp+arg_20] +
mov [ebp+var_5C] ecx +
mov [ebp+var_54] ecx +
mov [ebp+var_4C] ecx +
mov [ebp+var_44] ecx +
mov [ebp+var_3C] ecx +
mov [ebp+var_34] ecx +
mov [ebp+var_2C] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] edx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] ecx +
call ds:EventWrite  +
leave   +
retn 24h  +
***
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_1007C49  +
cmp edx esi +
jnz loc_1007C49  +
push [ebp+arg_4]  +
push 0  +
push [ebp+arg_0]  +
push offset dword_1046648  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046175  +
jmp loc_1007C49  +
test eax eax +
jnz loc_1007AA4  +
jmp loc_1007C7D  +
test al al +
jz loc_1007C28  +
jmp loc_1007C49  +
***
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edi edx +
and edi ecx +
mov ecx ebx +
and ecx eax +
cmp edi edx +
jnz loc_1006E4A  +
cmp ecx ebx +
jnz loc_1006E4A  +
push [ebp+var_10]  +
push [ebp+var_24]  +
push offset dword_10466A0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
jmp loc_1006E4A  +
***
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx edi +
cmp ecx eax +
jnz loc_10094B2  +
cmp edx dword_10B24C4 +
jnz loc_10094B2  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
push [ebp+arg_C]  +
mov [ebp+arg_0] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+0ACh]  +
push [ebp+arg_C]  +
mov edi [esi] +
push esi  +
mov [ebp+idChild] eax +
call dword ptr [edi+0ACh]  +
push eax  +
push esi  +
call dword ptr [edi+40h]  +
push eax  +
push [ebp+arg_C]  +
push esi  +
call dword ptr [edi+0ACh]  +
push eax  +
push esi  +
call dword ptr [edi+3Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
mov eax [ebp+idChild] +
mov ecx [eax] +
push 0  +
push esi  +
push dword ptr [ebx+4]  +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push offset dword_1046758  +
push dword_10B247C  +
push dword_10B2478  +
call sub_104630D  +
jmp loc_10094B2  +
test al al +
jnz loc_10094B2  +
jmp loc_1009491  +
***
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_104679B  +
cmp edx edi +
jnz loc_104679B  +
push ebx  +
push offset dword_10467B0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
pop edi  +
jmp loc_100B716  +
***
test al al +
jnz loc_100B716  +
jmp loc_100B6F5  +
***
mov eax dword_10B24C0 +
push ebx  +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1046804  +
cmp edx ebx +
jnz loc_1046804  +
push [ebp+arg_8]  +
lea eax [esi-0Ch] +
add esi 0FFFFFFFCh +
neg eax  +
push 0  +
sbb eax eax +
and eax esi +
push eax  +
push offset dword_1046278  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046175  +
pop ebx  +
jmp loc_100C747  +
***
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edi edx +
and edi ecx +
mov ecx ebx +
and ecx eax +
cmp edi edx +
jnz loc_100CA83  +
cmp ecx ebx +
jnz loc_100CA83  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ebx [ebp+arg_4] +
push ebx  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
push eax  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+3Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
push eax  +
mov eax esi +
cdq   +
push edx  +
push eax  +
mov eax [ebp+var_8] +
push dword ptr [eax+4]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
push eax  +
push offset dword_10468A0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_104630D  +
jmp loc_100CA83  +
test al al +
jz loc_100D625  +
jmp loc_100CA83  +
test al al +
jnz loc_100CA83  +
jmp loc_100CA61  +
***
xor eax eax +
inc eax  +
cmp [ecx+340h] eax +
jz loc_10468CA  +
cmp dword ptr [ecx+344h] 0 +
jnz loc_10468CA  +
retn   +
xor eax eax +
jmp locret_10468C9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
cmp [edi+330h] esi +
jnz loc_104690C  +
cmp [ebp+wParam] esi +
jz loc_10468F4  +
call sub_10468B5  +
test eax eax +
jz loc_104690C  +
push [ebp+wParam]  +
mov ecx edi +
push esi  +
call sub_1010881  +
mov ecx eax +
call sub_1046917  +
inc esi  +
cmp esi 3 +
jb loc_10468F4  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+4] +
test eax eax +
jz loc_1046934  +
push 0  +
push [ebp+wParam]  +
push 401h  +
push eax  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
cmp eax 0FFFFFD2Ch +
jz loc_105A557  +
cmp eax 0FFFFFD35h +
jnz loc_101100A  +
mov edi [esi+1Ch] +
test edi edi +
jz loc_101100A  +
mov eax [edi+6E0h] +
mov [ebp+var_8] eax +
test eax eax +
jz loc_1047651  +
and [edi+6E0h] edx +
push 7  +
pop ecx  +
xor eax eax +
mov [ebp+lParam] 20h +
lea edi [ebp+var_24] +
stos   +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+0Ch]  +
mov [ebp+var_24] 10h +
push 440h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
cmp [ebp+var_8] 0 +
jnz loc_101100A  +
push 1  +
mov ecx ebx +
call sub_10468D3  +
jmp loc_101100A  +
***
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
jmp loc_1046A11  +
cmp byte ptr [ecx] 0 +
jnz loc_1046A09  +
jmp loc_1046A0C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp eax ebx +
jz loc_1046A12  +
push edi  +
mov edi [eax] +
cmp edi ebx +
jle loc_1046A11  +
push ebx  +
mov ecx esi +
call sub_1022652  +
mov ecx eax +
test ecx ecx +
jz loc_1046A03  +
push [ebp+arg_0]  +
call sub_1046A20  +
test al al +
jnz loc_10469B4  +
cmp [ebp+arg_4] 0 +
jnz loc_10469BC  +
inc [ebp+var_4]  +
inc ebx  +
cmp ebx edi +
jl loc_10469E9  +
pop edi  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ecx] al +
jz loc_1046A34  +
mov edx [ebp+arg_0] +
cmp edx [ecx+4] +
jnz loc_1046A34  +
inc eax  +
pop ebp  +
retn 4  +
***
mov eax [ecx+33Ch] +
test eax eax +
jz loc_10595EC  +
mov eax [eax] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 1  +
push [ebp+wParam]  +
mov esi ecx +
call sub_1021FC2  +
mov ecx [esi+8] +
push eax  +
call sub_10111B5  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 150h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
and [ebp+var_A4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push 0  +
mov ebx ecx +
mov [ebp+var_A8] edi +
mov [ebp+var_AC] eax +
call sub_10468D3  +
push 1  +
push [ebp+wParam]  +
mov ecx edi +
call sub_1021FC2  +
push 0  +
push [ebp+wParam]  +
mov dword ptr [esi+6E0h] 1 +
push 416h  +
push dword ptr [edi]  +
mov [ebp+var_A0] eax +
call ds:SendMessageW  +
xor eax eax +
lea edi [ebp+var_94] +
stos   +
stos   +
stos   +
stos   +
mov edi [ebp+var_AC] +
mov eax [ebp+var_A0] +
push dword ptr [edi]  +
or [ebp+var_88] 0FFFFFFFFh +
mov [ebp+var_8C] esi +
mov [ebp+lParam] eax +
mov [ebp+var_8F] 0 +
mov [ebp+var_90] 4 +
call sub_1022837  +
mov [ebp+var_94] eax +
cmp [ebp+var_A8] edi +
jz loc_1059C38  +
lea eax [ebx+2BCh] +
mov [ebp+var_99] 0 +
cmp [ebp+var_A8] eax +
jnz loc_1046BA8  +
mov ecx [ebx+2B8h] +
push 1  +
lea edi [ebx+3E8h] +
push edi  +
call sub_1022B91  +
cmp eax 0FFFFFFFFh +
jz loc_1046BA8  +
cmp [ebp+arg_10] 0FFFFFFFFh +
jnz loc_1046B8E  +
mov ecx [ebx+2B8h] +
push 0  +
push edi  +
mov [ebp+arg_10] eax +
call sub_1022B91  +
mov ecx [ebx+2B8h] +
push eax  +
push esi  +
call sub_1022904  +
mov [ebp+var_99] 1 +
mov ecx [ebx+2B8h] +
push 0  +
push edi  +
call sub_1022B91  +
mov ecx [ebx+2B8h] +
push eax  +
call sub_102266B  +
mov eax [ebp+var_AC] +
mov eax [eax] +
lea ecx [ebp+lParam] +
push ecx  +
push [ebp+arg_10]  +
mov edi 443h +
push edi  +
push eax  +
call ds:SendMessageW  +
test eax eax +
jz loc_1059C4C  +
cmp [ebp+var_99] 0 +
jnz loc_1046BE4  +
mov ecx [ebp+var_A8] +
push esi  +
call sub_1046EBD  +
lea eax [ebp+var_A0] +
push eax  +
push esi  +
mov ecx ebx +
call sub_1022005  +
lea ecx [esi+22Ch] +
push ecx  +
mov ecx [ebp+var_A0] +
push eax  +
mov [ebp+var_B0] eax +
call sub_1022082  +
cmp [ebp+var_99] 0 +
jnz loc_1046C24  +
push [ebp+arg_10]  +
mov ecx [ebp+var_A0] +
push esi  +
call sub_1046EEE  +
cmp [ebp+arg_18] 0FFFFFFFFh +
jnz loc_1059C9E  +
cmp [ebp+arg_14] 0 +
jnz loc_1059DAA  +
push 1  +
mov ecx ebx +
call sub_10468D3  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_A4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 20h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 0  +
push dword ptr [esi+320h]  +
call sub_102179D  +
push 0  +
mov ecx esi +
call sub_1022B3B  +
push 1  +
push 1  +
mov ecx esi +
call sub_10225FE  +
pop esi  +
retn   +
***
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push 0  +
push ebx  +
push eax  +
push [ebp+wParam]  +
push edi  +
push [ebp+arg_0]  +
call sub_1046A78  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [ebp+var_4] ecx +
jmp loc_10229B2  +
***
or eax 0FFFFFFFFh +
jmp loc_1023173  +
***
cmp [ebp+var_34] 0 +
jnz loc_105AACA  +
mov ecx [ebp+var_1C] +
lea eax [esi+29Ch] +
cmp ecx eax +
jz loc_105AADA  +
push 0FFFFFFFFh  +
push 2  +
call sub_1010EB3  +
mov [ebp+wParam] eax +
jmp loc_1022ED7  +
cmp [ebp+var_34] edi +
jnz loc_105AAE3  +
cmp [ebp+wParam] edi +
jnz loc_1022FB1  +
jmp loc_105AAF2  +
mov eax [edi+0Ch] +
test al 2 +
jz loc_10248EA  +
mov edi [edi+14h] +
and al 4 +
movzx eax al +
neg eax  +
sbb eax eax +
and eax [ebp+var_38] +
push edi  +
push eax  +
push ebx  +
mov ecx esi +
call sub_1046D41  +
mov edi eax +
mov [ebp+var_34] edi +
test edi edi +
jnz loc_105AA67  +
mov ecx ebx +
call sub_1021C24  +
test eax eax +
jz loc_1022E36  +
jmp loc_105AAA5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_14] ecx +
xor edi edi +
mov ecx esi +
mov [ebp+var_4] edi +
call sub_1021C24  +
test eax eax +
jnz loc_1059797  +
cmp [esi+24h] di +
jz loc_1046EAF  +
push ebx  +
mov [ebp+hIcon] edi +
mov [ebp+var_10] edi +
push [ebp+var_10]  +
mov ecx [ebp+var_14] +
call sub_1010881  +
mov ebx eax +
push 0FFFFFFFFh  +
push 2  +
mov ecx ebx +
call sub_1010EB3  +
cmp eax edi +
mov [ebp+var_18] eax +
mov [ebp+wParam] edi +
jle loc_1046DCA  +
push 1  +
push [ebp+wParam]  +
mov ecx ebx +
call sub_1010F3D  +
mov edi eax +
test edi edi +
jz loc_1046DB5  +
mov ecx edi +
call sub_1021C24  +
test eax eax +
jz loc_1046DDB  +
inc [ebp+wParam]  +
mov eax [ebp+wParam] +
cmp eax [ebp+var_18] +
jl loc_1046D98  +
cmp [ebp+var_4] 0 +
jnz loc_1046EA4  +
inc [ebp+var_10]  +
cmp [ebp+var_10] 3 +
jge loc_1046EA4  +
xor edi edi +
jmp loc_1046D76  +
lea eax [edi+24h] +
cmp word ptr [eax] 0 +
jz loc_1046DB5  +
push 1  +
push 0FFFFFFFFh  +
lea ecx [esi+24h] +
push ecx  +
push 0FFFFFFFFh  +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_1046DB5  +
mov eax [edi+4] +
cmp eax [esi+4] +
jz loc_10597C7  +
cmp [ebp+var_4] 0 +
jnz loc_1046EA4  +
cmp [ebp+arg_8] 0 +
jz loc_1046E6C  +
cmp [ebp+hIcon] 0 +
jnz loc_1046E30  +
mov ecx [ebp+var_14] +
push [ebp+arg_8]  +
add ecx 2E0h +
call sub_1052842  +
mov [ebp+hIcon] eax +
push [ebp+wParam]  +
mov ecx ebx +
call sub_1046A53  +
cmp [ebp+hIcon] 0 +
mov esi eax +
jz loc_1046E58  +
test esi esi +
jz loc_1046E69  +
push esi  +
push [ebp+hIcon]  +
call ds:SHLWAPI_548  +
test eax eax +
jnz loc_10597CF  +
test esi esi +
jz loc_1046E63  +
push esi  +
call ds:DestroyIcon  +
cmp [ebp+var_4] 0 +
jnz loc_1046EA4  +
mov esi [ebp+arg_0] +
cmp [ebp+lpStart] 0 +
jz loc_1046DB5  +
push [ebp+lpStart]  +
mov ecx edi +
call sub_10528DD  +
test eax eax +
jnz loc_10597D7  +
push [ebp+lpStart]  +
mov ecx edi +
call sub_10528DD  +
test eax eax +
jnz loc_10597DF  +
cmp [ebp+var_4] 0 +
jz loc_1046DB5  +
cmp [ebp+hIcon] 0 +
pop ebx  +
jnz loc_10528F5  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_1046EE4  +
push 0  +
push [ebp+arg_0]  +
call sub_10469C8  +
cmp eax 0FFFFFFFFh +
jz loc_1046EE4  +
mov ecx [esi+0Ch] +
push eax  +
call sub_102266B  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0Ch] 0 +
jnz sub_1058F9E  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push 0FFFFFFFFh  +
lea edi [esi+2BCh] +
push 2  +
mov ecx edi +
call sub_1010EB3  +
mov ebx [ebp+arg_0] +
test eax eax +
jg loc_1059E19  +
lea eax [ebp+wParam] +
push eax  +
push ebx  +
mov ecx esi +
call sub_1022005  +
push 0  +
lea edi [esi+2B8h] +
mov ecx [edi] +
push ebx  +
mov [ebp+wParam] eax +
call sub_10469C8  +
mov ecx [edi] +
push eax  +
lea eax [esi+3E8h] +
push eax  +
call sub_10227D5  +
xor edi edi +
push edi  +
push 0FFFFFFFFh  +
push edi  +
push edi  +
lea eax [esi+2BCh] +
push eax  +
push [ebp+wParam]  +
lea eax [esi+2ACh] +
push ebx  +
push eax  +
mov ecx esi +
call sub_1046A78  +
cmp eax edi +
jl loc_1059E3F  +
push 8  +
push dword ptr [esi+10h]  +
call ds:KillTimer  +
mov ecx esi +
call sub_1046C5D  +
call sub_101118D  +
mov ebx [esi+3A4h] +
mov edi eax +
add edi 20C85580h +
mov ecx edx +
adc ecx 0 +
mov [ebp+var_C] edi +
cmp ebx ecx +
jnb loc_1059E47  +
mov ebx [ebp+arg_0] +
mov [esi+3A4h] ecx +
add eax 0B2D05E00h +
push 0  +
pop ecx  +
adc edx ecx +
mov [esi+3A0h] edi +
mov [ebx+6F8h] eax +
mov [ebx+6FCh] edx +
cmp [ebp+arg_4] ecx +
jnz loc_1046FFF  +
push ecx  +
push 0AFC8h  +
push 8  +
push dword ptr [esi+10h]  +
call ds:SetTimer  +
cmp dword_10B24CC 0 +
jz loc_1047032  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1047041  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_1059E69  +
xor eax eax +
cmp [ebp+var_4] eax +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn 8  +
test al al +
jz loc_1047011  +
jmp loc_1047032  +
***
xor ecx ecx +
jmp loc_1023468  +
***
cmp word ptr [ecx+24h] 0 +
jz loc_1047069  +
push 5  +
call sub_1010EFE  +
test eax eax +
jz loc_1047069  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+10h] +
test ecx ecx +
jz loc_1047094  +
cmp [ebp+arg_4] 0 +
jz loc_1047094  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push ecx  +
call ds:off_10062D4  +
pop ebp  +
retn 8  +
or eax 0FFFFFFFFh +
jmp loc_1047090  +
***
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_1021C96  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx ecx +
call sub_1046A3D  +
cmp dword ptr [ebx+33Ch] 0 +
mov [ebp+var_8] eax +
jz loc_10470D0  +
and [ebp+var_4] 0 +
test eax eax +
jg loc_10596A5  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_4] edi +
push edi  +
mov ecx esi +
call sub_1010881  +
test eax eax +
jz loc_1047109  +
lea ecx [ebp+var_4] +
push ecx  +
push [ebp+arg_4]  +
mov ecx esi +
push ebx  +
push eax  +
call sub_104721F  +
inc edi  +
cmp edi 3 +
jl loc_10470ED  +
cmp [ebp+var_4] 1 +
ja loc_1047155  +
mov eax [esi+39Ch] +
test eax eax +
jz loc_10529D6  +
mov eax [eax] +
lea edi [eax-1] +
test edi edi +
jl loc_1047155  +
push edi  +
push dword ptr [esi+39Ch]  +
call ds:off_1003D88  +
cmp ebx [eax] +
jnz loc_10529CA  +
push edi  +
push dword ptr [esi+39Ch]  +
call ds:off_10067B4  +
push ebx  +
call ds:CloseHandle  +
mov eax [esi+39Ch] +
test eax eax +
jz loc_10529DD  +
mov eax [eax] +
test eax eax +
jz loc_1059776  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+8] +
pop ebp  +
jmp loc_1047189  +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0FFFFFFFFh +
push esi  +
mov esi ecx +
jz loc_10471C7  +
push [ebp+arg_0]  +
push dword ptr [esi]  +
call ds:off_1006840  +
test eax eax +
jz loc_10471C7  +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jbe loc_10471C6  +
push edi  +
lea edi [esi+4] +
push [ebp+arg_0]  +
mov ecx [edi] +
call sub_10471D1  +
inc ebx  +
add edi 4 +
cmp ebx [esi+10h] +
jb loc_10471B2  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0FFFFFFFFh  +
push 2  +
mov edi ecx +
call sub_1010EB3  +
mov esi eax +
dec esi  +
js loc_1047203  +
push 1  +
push esi  +
mov ecx edi +
call sub_1021FC2  +
cmp eax [ebp+arg_0] +
jle loc_10471E5  +
dec eax  +
push eax  +
push esi  +
mov ecx edi +
call sub_102210B  +
jmp loc_10471E5  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp [ebp+arg_8] 0 +
jnz loc_1059729  +
mov eax [ebp+arg_C] +
inc dword ptr [eax]  +
jmp loc_1047258  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 0FFFFFFFFh  +
mov [ebp+var_8] ecx +
mov ecx [ebp+arg_0] +
push 2  +
call sub_1010EB3  +
dec eax  +
mov [ebp+var_4] eax +
js loc_104725D  +
mov ecx [ebp+arg_0] +
push 1  +
push eax  +
call sub_1010F3D  +
test eax eax +
jz loc_1047258  +
mov ecx [eax+6DCh] +
cmp ecx [ebp+arg_4] +
jz loc_1047209  +
mov eax [ebp+var_4] +
jmp loc_1047238  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
mov ebx ecx +
push edi  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
cmp [ebx+330h] esi +
jnz loc_105A376  +
mov edi [ebp+arg_0] +
lea eax [ebx+2BCh] +
cmp edi eax +
jz loc_105A37D  +
mov eax [edi] +
push 0FFFFFFFFh  +
push [ebp+wParam]  +
mov ecx ebx +
push 2  +
push edi  +
mov [ebp+hWnd] eax +
call sub_10220C7  +
push 1  +
push [ebp+wParam]  +
mov ecx edi +
call sub_1010F3D  +
mov esi eax +
mov [ebp+var_C] esi +
test esi esi +
jz loc_10473FE  +
push 0  +
push dword ptr [esi+4]  +
lea eax [esi+438h] +
push dword ptr [esi]  +
mov ecx ebx +
push eax  +
call sub_10470A8  +
mov ecx [ebx+338h] +
test ecx ecx +
jnz loc_105A3C9  +
cmp [ebp+hIcon] 0 +
mov eax [edi+0Ch] +
mov [ebp+arg_0] eax +
jz loc_1047408  +
mov ecx esi +
call sub_1047053  +
test eax eax +
jz loc_1047408  +
mov ecx esi +
call sub_1047426  +
test eax eax +
jnz loc_1047408  +
push [ebp+wParam]  +
mov ecx edi +
call sub_1046A53  +
push eax  +
mov [ebp+hIcon] eax +
lea eax [esi+22Ch] +
push eax  +
lea ecx [ebx+2E0h] +
push esi  +
call sub_10226A0  +
mov [ebp+var_C] eax +
cmp eax 0FFFFFFFFh +
jnz loc_105A423  +
push [ebp+arg_0]  +
lea ecx [ebx+2E0h] +
push [ebp+hIcon]  +
push esi  +
call sub_1047437  +
test eax eax +
jz loc_104736A  +
push 0  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov ecx ebx +
call sub_10220C7  +
cmp [ebp+hIcon] 0 +
jz loc_1047379  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
mov ecx esi +
call sub_1047426  +
test eax eax +
jnz loc_105A47C  +
cmp dword_10B24CC 0 +
jz loc_10473BA  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1047417  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx 80000000h +
or eax ecx +
jnz loc_105A488  +
push 0  +
push dword ptr [esi+6DCh]  +
mov ecx ebx +
call sub_10470DA  +
xor esi esi +
push esi  +
push [ebp+wParam]  +
push 416h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
push esi  +
mov ecx edi +
mov [ebp+var_8] eax +
call nullsub_2  +
cmp [ebp+arg_C] esi +
jnz loc_10473FE  +
mov ecx ebx +
cmp [ebp+var_4] esi +
jnz loc_105A4E9  +
push edi  +
call sub_1022787  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_0] 0 +
jnz loc_105A446  +
jmp loc_1047379  +
test al al +
jz loc_104739A  +
jmp loc_10473BA  +
***
xor eax eax +
cmp [ecx+0B18h] eax +
setnz al  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi] edi +
jz loc_1059254  +
push 668h  +
call sub_1002B98  +
mov ebx eax +
pop ecx  +
cmp ebx edi +
jz loc_10474C4  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
push ebx  +
call sub_10474CD  +
test eax eax +
jz loc_10474B9  +
push edi  +
push ebx  +
push edi  +
mov ecx esi +
call sub_10080DF  +
test eax eax +
jl loc_10474B9  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_10474AF  +
push edi  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10469C8  +
cmp eax 0FFFFFFFFh +
jz loc_10474AF  +
push eax  +
push ebx  +
mov ecx esi +
call sub_10227D5  +
push edi  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10469C8  +
push eax  +
mov ecx esi +
call sub_102266B  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
push ebx  +
call sub_1002BCA  +
jmp loc_1059268  +
xor eax eax +
jmp loc_10474B2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
mov [ebp+SystemTime.wYear] ax +
lea edi [ebp+SystemTime.wMonth] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+SystemTime] +
push eax  +
mov esi ecx +
call ds:GetLocalTime  +
mov edi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
lea eax [edi+24h] +
push eax  +
push 104h  +
push ebx  +
call sub_100665F  +
test eax eax +
jl loc_1047625  +
mov eax [edi+4] +
mov [ebx+208h] eax +
mov eax [edi+0B1Ch] +
mov [ebx+210h] eax +
mov ax [ebp+SystemTime.wYear] +
mov [ebx+214h] ax +
mov ax [ebp+SystemTime.wMonth] +
push 2  +
mov ecx edi +
mov [ebx+216h] ax +
call sub_1010EFE  +
push [ebp+arg_8]  +
mov ecx esi +
push 0FFFFFFFFh  +
mov [ebx+424h] eax +
call sub_1047071  +
lea esi [edi+438h] +
mov [ebx+428h] eax +
lea edi [ebx+42Ch] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_4] +
lea eax [esi+22Ch] +
push eax  +
mov edi 104h +
push edi  +
lea eax [ebx+218h] +
push eax  +
call sub_100665F  +
mov eax [esi+6E8h] +
mov [ebx+440h] eax +
mov eax [esi+6ECh] +
mov [ebx+444h] eax +
mov eax [esi+700h] +
mov [ebx+458h] eax +
mov eax [esi+6F8h] +
mov [ebx+450h] eax +
mov eax [esi+6FCh] +
mov [ebx+454h] eax +
mov eax [esi+6F0h] +
mov [ebx+448h] eax +
mov eax [esi+6F4h] +
mov [ebx+44Ch] eax +
mov eax [esi+704h] +
mov ecx esi +
mov [ebx+664h] eax +
call sub_104762E  +
test eax eax +
jnz loc_1059228  +
lea eax [esi+708h] +
push eax  +
push edi  +
lea eax [ebx+45Ch] +
push eax  +
call sub_100665F  +
push 2  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jnz loc_1059243  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
xor eax eax +
jmp loc_104761E  +
***
mov edi edi +
push esi  +
push edi  +
mov eax ecx +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
lea esi [eax+438h] +
xor edx edx +
cmps   +
pop edi  +
pop esi  +
jnz loc_1058E84  +
xor eax eax +
retn   +
***
push eax  +
mov ecx ebx +
call sub_10468D3  +
push 3  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jnz loc_1047681  +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
mov ecx ebx +
call sub_1022005  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1047681  +
push dword ptr [esi+10h]  +
call sub_1047179  +
mov eax [edi+18h] +
test eax eax +
jnz loc_105A543  +
lea eax [ebx+3B8h] +
cmp edi [eax] +
jz loc_105A54F  +
push 1  +
mov ecx edi +
call sub_10476AD  +
jmp loc_1046970  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10476D3  +
test [ebp+arg_0] 1 +
jz loc_10476C7  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1047426  +
test eax eax +
jnz loc_1059543  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_18] 0 +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+arg_0] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
mov ebx ecx +
cmp dword ptr [ebx+330h] 0 +
movs   +
mov edi [ebp+arg_10] +
mov [ebp+wParam] edi +
jnz loc_1059ED2  +
mov esi [ebx+338h] +
test esi esi +
jz loc_1047806  +
push [ebp+lParam]  +
lea eax [ebp+var_14] +
push edi  +
push eax  +
mov ecx esi +
call sub_104781C  +
test al al +
jz loc_1048192  +
mov eax [esi+29Ch] +
and al 40h +
xor ecx ecx +
cmp al 40h +
setz cl  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+lParam]  +
lea eax [ebp+var_14] +
push edi  +
push eax  +
mov [ebp+var_28] ecx +
mov ecx ebx +
call sub_1021C47  +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_1047786  +
mov ecx [ebp+var_20] +
test ecx ecx +
jz loc_1047786  +
push 1  +
push eax  +
call sub_1010F3D  +
mov esi eax +
mov edi [ebp+arg_18] +
and [ebp+pvParam] 0 +
test edi edi +
jnz loc_104812A  +
test esi esi +
jz loc_104817E  +
push 0  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jnz loc_104817E  +
test edi edi +
jnz loc_1047DAD  +
push [ebp+pvParam]  +
xor eax eax +
inc eax  +
push eax  +
push [ebp+arg_20]  +
mov ecx ebx +
push esi  +
mov [ebx+90h] eax +
call sub_1047969  +
xor edi edi +
cmp [ebp+pvParam] edi +
jnz loc_105A04F  +
cmp dword ptr [ebx+388h] 6 +
jz loc_105A04F  +
lea eax [ebx+340h] +
cmp dword ptr [eax] 2 +
jz loc_10477F3  +
mov [eax] edi +
push 1  +
mov ecx ebx +
call sub_10468D3  +
cmp [ebp+var_18] 0 +
jnz loc_105A0F3  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov eax ecx +
push 4  +
pop ecx  +
mov edi eax +
mov esi offset dword_100D864 +
xor edx edx +
cmps   +
jnz loc_105954B  +
mov ecx [eax+10h] +
cmp ecx [ebp+arg_4] +
jnz loc_1047852  +
mov eax [eax+14h] +
cmp eax [ebp+arg_8] +
jnz loc_1047852  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_104784C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp [esi+8] eax +
jz loc_104788F  +
cmp [esi] eax +
jz loc_104788F  +
cmp dword ptr [esi+10h] 4 +
jnb loc_1059393  +
mov ecx [esi+4] +
mov eax [ebp+lParam] +
push eax  +
push ecx  +
push dword ptr [esi+8]  +
push dword ptr [esi]  +
call ds:SendNotifyMessageW  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ecx +
lea eax [esi+338h] +
cmp dword ptr [eax] 0 +
jz loc_1047961  +
mov eax [eax] +
lea ecx [ebp+var_4] +
push ecx  +
push dword ptr [eax+14h]  +
mov ecx esi +
push dword ptr [eax+10h]  +
push eax  +
call sub_1021C47  +
mov edx eax +
cmp edx 0FFFFFFFFh +
jz loc_1047961  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_1047961  +
xor eax eax +
push ebx  +
push edi  +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
mov edi ds:SendMessageW +
lea eax [esi+2ACh] +
cmp ecx eax +
jz loc_10595C4  +
mov ebx [ecx] +
lea eax [ebp+Rect] +
push eax  +
push edx  +
push 41Dh  +
push ebx  +
call edi  +
test eax eax +
jz loc_104791E  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
push 0  +
push ebx  +
call ds:MapWindowPoints  +
mov ecx [ebp+Rect.right] +
mov ebx [ebp+Rect.left] +
mov eax ecx +
sub eax ebx +
test eax eax +
jle loc_104795F  +
mov edx [ebp+Rect.bottom] +
mov eax [ebp+Rect.top] +
add eax edx +
cdq   +
sub eax edx +
sar eax 1 +
movzx eax ax +
shl eax 10h +
mov [ebp+var_4] eax +
lea eax [ebx+ecx] +
mov ecx [ebp+var_4] +
cdq   +
sub eax edx +
sar eax 1 +
movzx eax ax +
or ecx eax +
push ecx  +
push 0  +
push 412h  +
push dword ptr [esi+20h]  +
call edi  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lParam] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp [ebp+arg_0] edi +
jz loc_104799E  +
cmp ebx edi +
jz loc_10479E7  +
push edi  +
push edi  +
push edi  +
push ebx  +
push [ebp+arg_0]  +
call sub_104785B  +
cmp ebx edi +
jnz loc_1047AD5  +
cmp [ebp+arg_C] edi +
jnz loc_1047AD5  +
cmp [ebp+arg_8] edi +
jz loc_10479B7  +
mov eax 403h +
cmp ebx eax +
jz loc_1059EB9  +
mov ecx esi +
call sub_10479C3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
lea eax [ecx+37Ch] +
cmp dword ptr [eax] 3 +
jz loc_10479D4  +
mov dword ptr [eax] 1 +
push 0  +
push 0  +
push 411h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
mov dword ptr [esi+388h] 3 +
jmp loc_104798D  +
***
push 7  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
xor esi esi +
cmp [ebx+90h] esi +
jnz loc_1023893  +
cmp [ebx+338h] esi +
jz loc_1023893  +
xor eax eax +
mov [ebp+plii.cbSize] 8 +
lea edi [ebp+plii.dwTime] +
stos   +
lea eax [ebp+plii] +
push eax  +
call ds:GetLastInputInfo  +
mov ecx [ebx+338h] +
cmp [ecx+2A0h] esi +
jz loc_102384A  +
push 1388h  +
push 5  +
push 403h  +
push dword ptr [ebx+20h]  +
call ds:SendMessageW  +
mov eax [ebx+338h] +
push esi  +
push esi  +
push esi  +
mov dword ptr [ebx+340h] 2 +
mov dword ptr [ebx+388h] 3 +
push dword ptr [eax+14h]  +
mov esi eax +
push dword ptr [eax+10h]  +
mov ecx ebx +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
and dword ptr [ebx+37Ch] 0 +
and dword ptr [ebx+90h] 0 +
push 21Ch  +
push offset dword_1047AB0  +
call sub_1034B2D  +
jmp loc_1023980  +
***
push edi  +
push edi  +
push 406h  +
push dword ptr [esi+10h]  +
call ds:PostMessageW  +
jmp loc_1022B52  +
***
cmp dword ptr [esi+3BCh] 4 +
jz loc_1047B05  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1022005  +
push edi  +
push 0FFFFFFFFh  +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1022955  +
test eax eax +
jz loc_1047B05  +
mov ecx esi +
call sub_1046C5D  +
mov [esi+340h] edi +
jmp loc_104799E  +
***
mov eax [esi] +
cmp eax [ebx+20h] +
jnz loc_101100A  +
mov esi [esi+4] +
cmp esi 0FFFFFFFFh +
jz loc_105A616  +
cmp esi 0FFFFFFFEh +
jz loc_105A627  +
cmp dword ptr [ebx+37Ch] 1 +
jz loc_105A671  +
cmp dword_10B24CC 0 +
jz loc_1047B70  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1047B84  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_105A633  +
push 0  +
push 32h  +
push 3  +
push dword ptr [ebx+10h]  +
call ds:SetTimer  +
jmp loc_101100A  +
test al al +
jz loc_1047B4F  +
jmp loc_1047B70  +
mov [ebx+318h] edx +
jmp loc_101100A  +
***
mov ecx ebx +
call sub_1047899  +
jmp loc_100DAC9  +
***
push dword ptr [ebx+20h]  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_1023779  +
push 3  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
cmp dword_10B24CC 0 +
jz loc_1047BF4  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10249B6  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_1023781  +
mov ecx ebx +
call sub_1047C05  +
jmp loc_1023980  +
***
mov edi edi +
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
push edi  +
mov ecx esi +
call sub_1010881  +
test eax eax +
jz loc_1047CA7  +
lea ecx [esi+2ACh] +
cmp eax ecx +
jz loc_1047CA7  +
push dword ptr [eax]  +
call ds:UpdateWindow  +
inc edi  +
cmp edi 3 +
jl loc_1047C89  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_8] ecx +
cmp [eax] si +
jz loc_105A357  +
push 2A4h  +
mov [ebp+var_4] esi +
call sub_1002B98  +
mov ebx eax +
pop ecx  +
cmp ebx esi +
jz loc_1047D94  +
mov esi [ebp+arg_0] +
mov eax [ebp+arg_4] +
push [ebp+arg_C]  +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
mov [ebx+10h] eax +
mov eax [ebp+arg_8] +
mov [ebx+14h] eax +
mov eax [ebp+arg_14] +
mov [ebx+29Ch] eax +
mov eax [ebp+arg_1C] +
mov [ebx+2A0h] eax +
push 100h  +
lea eax [ebx+98h] +
push eax  +
call sub_100665F  +
push [ebp+arg_10]  +
lea eax [ebx+18h] +
push 40h  +
push eax  +
call sub_100665F  +
mov esi [ebp+var_8] +
mov edi [esi+338h] +
test edi edi +
jnz loc_1047D9B  +
mov ecx esi +
call sub_1046A3D  +
test eax eax +
jnz loc_1047D9B  +
cmp [ebx+2A0h] eax +
jz loc_1047D62  +
lea eax [ebp+var_4] +
push eax  +
call sub_10480C7  +
test eax eax +
jz loc_105A183  +
push dword ptr [esi+338h]  +
call sub_1002BCA  +
pop ecx  +
mov ecx [ebp+var_8] +
push 0  +
push [ebp+arg_18]  +
mov [esi+338h] ebx +
push 1  +
push dword ptr [ebx+14h]  +
mov esi ebx +
push dword ptr [ebx+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
cmp dword ptr [ebx+2A0h] 0 +
jnz loc_105A217  +
jmp loc_105A22B  +
***
cmp [ebp+arg_1C] 0 +
jnz loc_1059F71  +
lea eax [ebp+var_18] +
push eax  +
mov ecx ebx +
call sub_10480C7  +
test eax eax +
jz loc_105A040  +
xor edi edi +
cmp esi edi +
jz loc_1047DDE  +
push edi  +
push 4  +
push esi  +
mov ecx ebx +
call sub_1022473  +
mov edi [esi+20h] +
and [ebp+pvParam] 0 +
test esi esi +
jz loc_1047E2E  +
mov eax [ebx+338h] +
mov eax [eax+29Ch] +
and al 0Fh +
cmp al 4 +
jz loc_1059F8A  +
push 6  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jnz loc_1047E18  +
lea eax [ebx+2ACh] +
cmp [ebp+var_20] eax +
jz loc_1059FA4  +
lea eax [ebx+2BCh] +
cmp [ebp+var_20] eax +
jnz loc_1047E2E  +
push 8  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
push edi  +
push [ebp+pvParam]  +
mov ecx ebx +
call sub_1047E9F  +
cmp dword_10B24CC 0 +
mov edi eax +
jz loc_1047E6F  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1048185  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax 10000h +
and ecx 80000000h +
or eax ecx +
jnz loc_1059FDE  +
test esi esi +
jz loc_10477FC  +
mov [esi+20h] edi +
xor edi edi +
push edi  +
push edi  +
push edi  +
push 402h  +
push esi  +
mov ecx ebx +
call sub_104785B  +
cmp [ebp+var_28] edi +
jz loc_10477FC  +
jmp loc_105A033  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] eax +
mov eax [esi+338h] +
push edi  +
mov edi ds:SendMessageW +
test eax eax +
jz loc_1047EEF  +
cmp [ebp+pvParam] 0 +
jnz loc_104803D  +
mov edx [eax+29Ch] +
mov ecx edx +
and ecx 0Fh +
test dl 20h +
jnz loc_10595EF  +
add eax 18h +
push eax  +
push ecx  +
push 421h  +
push dword ptr [esi+20h]  +
call edi  +
mov eax [esi+338h] +
mov ebx ds:GetTickCount +
test eax eax +
jz loc_1047F25  +
test byte ptr [eax+29Ch] 10h +
jnz loc_1047F25  +
call ebx  +
sub eax [ebp+arg_4] +
cmp eax 1388h +
jb loc_1047F25  +
call ebx  +
push 2  +
push offset aSystemnotifica  +
mov [ebp+var_4] eax +
call sub_103740C  +
mov ecx esi +
call sub_1047899  +
mov ecx offset unk_10B1460 +
call sub_100DBEB  +
push 2Ch  +
lea eax [ebp+var_30] +
push 0  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov ecx [esi+338h] +
add esp 0Ch +
test ecx ecx +
jz loc_1047F79  +
mov eax [esi+10h] +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 439h  +
push dword ptr [esi+20h]  +
add ecx 98h +
mov [ebp+var_10] ecx +
call edi  +
cmp dword ptr [esi+338h] 0 +
mov dword ptr [esi+340h] 1 +
jz loc_1048033  +
and dword ptr [esi+390h] 0 +
push 21Bh  +
push offset dword_1048050  +
call sub_1034B2D  +
push 0  +
lea eax [ebp+pvParam] +
push eax  +
push 0  +
push 2016h  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_1047FD4  +
mov eax [ebp+pvParam] +
imul eax eax +
mov [ebp+pvParam] eax +
cmp eax 2328h +
jnb loc_10595F7  +
mov eax 0BB8h +
add eax 3E8h +
push eax  +
push 7  +
mov ecx esi +
call sub_104808B  +
test eax eax +
jz loc_1048033  +
and dword ptr [esi+90h] 0 +
call ebx  +
push 3E8h  +
push 4  +
mov ebx 403h +
push ebx  +
push dword ptr [esi+20h]  +
mov [esi+8Ch] eax +
call edi  +
push 1388h  +
push 5  +
push ebx  +
push dword ptr [esi+20h]  +
call edi  +
push 0  +
push 0  +
add ebx 0Eh +
push ebx  +
push dword ptr [esi+20h]  +
call edi  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push ebx  +
push dword ptr [esi+20h]  +
call edi  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
add eax 18h +
push eax  +
push [ebp+pvParam]  +
jmp loc_1047EE5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+uElapse]  +
mov esi ecx +
push [ebp+nIDEvent]  +
mov [ebp+var_4] esi +
push dword ptr [esi+10h]  +
call ds:SetTimer  +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
neg ebx  +
jz loc_10594E7  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+384h] 0 +
jz loc_1048126  +
cmp dword ptr [ecx+380h] 0 +
jnz loc_1048126  +
cmp dword ptr [ecx+378h] 0 +
jnz loc_1048126  +
mov ecx offset unk_10B1460 +
call sub_1023649  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_1059619  +
cmp eax 2 +
jz loc_1048120  +
cmp eax 3 +
jz loc_1048120  +
cmp eax 4 +
jz loc_105960F  +
add eax 0FFFFFFFBh +
cmp eax ecx +
ja loc_1059601  +
mov eax ecx +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
or dword ptr [eax] 40h +
xor eax eax +
jmp loc_104811C  +
***
test esi esi +
jz loc_104817E  +
cmp dword ptr [ebx+348h] 0 +
jz loc_1059EDE  +
push 1  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jnz loc_1059EDE  +
test edi edi +
jz loc_1047795  +
cmp [ebp+var_28] 0 +
jnz loc_1059EFB  +
test edi edi +
jz loc_1047795  +
mov eax [ebx+338h] +
test byte ptr [eax+29Ch] 80h +
jz loc_1047795  +
jmp loc_1059F41  +
xor edi edi +
jmp loc_10477AE  +
test al al +
jz loc_1047E51  +
jmp loc_1047E6F  +
test esi esi +
jnz loc_105A0D3  +
jmp loc_1047806  +
***
mov eax [esi+3A4h] +
test al 4 +
jnz loc_105A91A  +
test al 0Fh +
jz loc_105A945  +
push 0  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jnz loc_10232C6  +
cmp [ebp+arg_C] eax +
jnz loc_10232BE  +
cmp [ebp+var_8] eax +
jnz loc_10232BE  +
mov ecx [esi+0Ch] +
and ecx 40h +
push ecx  +
mov ecx [ebp+var_4] +
push eax  +
push dword ptr [esi+3A4h]  +
lea eax [esi+324h] +
push eax  +
add esi 120h +
push esi  +
push dword ptr [edi+4]  +
lea eax [edi+438h] +
push dword ptr [edi]  +
push eax  +
call sub_1047CB5  +
jmp loc_10222EB  +
***
call ds:SHLWAPI_193  +
cmp eax 8 +
jbe loc_1018EC0  +
mov ecx esi +
call sub_1017F79  +
mov [esi+40h] eax +
jmp loc_1018EC0  +
***
test esi esi +
jz loc_1040B4B  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+10h]  +
jmp loc_1040B4B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+0Ch] +
push eax  +
mov dword ptr [esi] offset off_1002774 +
call sub_1002BEE  +
test [ebp+arg_0] 1 +
jz loc_104826A  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_1050628  +
***
push eax  +
call sub_1048291  +
and dword ptr [esi] 0 +
jmp loc_10368EC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_0] 0 +
jz locret_10482CD  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1040B18  +
push 1  +
push 0  +
push offset stru_1040B08  +
call CoCreateInstance  +
test eax eax +
jl locret_10482CD  +
mov eax [ebp+ppv] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 4  +
***
test esi esi +
jz loc_1040AFF  +
push 1  +
mov ecx esi +
call sub_10482EC  +
jmp loc_1040AFF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi] offset off_100275C +
call ds:DeleteCriticalSection  +
test [ebp+arg_0] 1 +
jz loc_1048311  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
retn 18h  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov ecx [ebp+0Ch] +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov esi [ebp+8] +
mov eax [esi+4] +
mov [ebp-18h] ecx +
mov ecx [ebp+14h] +
push edi  +
mov edi [esi+18h] +
mov [ebp-10h] ecx +
xor ecx ecx +
push ecx  +
mov [ebp-0Ch] ecx +
mov [ebp-8] ecx +
mov [ebp-4] ecx +
lea ecx [ebp+8] +
push ecx  +
push dword ptr [ebp+14h]  +
lea edx [ebp-1Ch] +
push ebx  +
push dword ptr [ebp+0Ch]  +
mov [esi+18h] edx +
mov edx [esi] +
push eax  +
mov ecx esi +
mov [ebp-1Ch] eax +
mov [ebp-14h] ebx +
call dword ptr [edx]  +
mov [esi+18h] edi +
test eax eax +
jnz loc_1048399  +
cmp dword ptr [ebp+0Ch] 82h +
jz loc_1048AAA  +
push dword ptr [ebp+14h]  +
mov ecx esi +
push ebx  +
push dword ptr [ebp+0Ch]  +
call sub_10483A8  +
mov [ebp+8] eax +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push dword ptr [ecx+4]  +
push dword ptr [ecx+1Ch]  +
call ds:CallWindowProcW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword ptr [ebp+0Ch] 110h +
push edi  +
mov edi [ebp+14h] +
jz loc_1048E04  +
push 8  +
push dword ptr [ebp+8]  +
call ds:GetWindowLongW  +
test eax eax +
jz loc_10483F6  +
mov esi [eax+1Ch] +
xor eax eax +
test esi esi +
jz loc_104840D  +
push edi  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1048418  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
sub eax 15h +
jz loc_1048476  +
sub eax 39h +
jz loc_1048444  +
sub eax 0C2h +
jz loc_1048DD7  +
dec eax  +
jz loc_1048584  +
xor eax eax +
leave   +
retn 10h  +
mov edx [ebp+arg_C] +
mov eax [edx+8] +
cmp eax 0FFFFFF36h +
jz loc_1048DF7  +
cmp eax 0FFFFFF37h +
jz loc_1048476  +
cmp eax 0FFFFFF38h +
jz loc_1048476  +
cmp eax 0FFFFFFFCh +
jz loc_105BC05  +
cmp eax 0FFFFFFFEh +
jnz loc_104843E  +
jmp loc_105BC05  +
xor eax eax +
inc eax  +
jmp locret_1048440  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_104848D  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10B1110 +
push [ebp+lpMem]  +
cmp eax 1 +
jz loc_105C8FC  +
push eax  +
call dword_10B1114  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword ptr [ebp+0Ch] 110h +
push edi  +
mov edi [ebp+14h] +
jz loc_104F2A1  +
push 8  +
push dword ptr [ebp+8]  +
call ds:GetWindowLongW  +
test eax eax +
jz loc_10484DE  +
mov esi [eax+1Ch] +
xor eax eax +
test esi esi +
jz loc_10484F5  +
push edi  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1048500  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 4Eh +
push esi  +
jz loc_1048527  +
sub eax 0C2h +
jz loc_104F2ED  +
dec eax  +
jz loc_104A40D  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
mov esi [ebp+arg_C] +
mov edx [esi+8] +
mov eax 0FFFFFF36h +
cmp edx eax +
jz loc_104F301  +
jbe loc_1048520  +
cmp edx 0FFFFFF38h +
jbe loc_1048557  +
cmp edx 0FFFFFFFCh +
jz loc_105BE61  +
cmp edx 0FFFFFFFEh +
jnz loc_1048520  +
jmp loc_105BE61  +
xor eax eax +
inc eax  +
jmp loc_1048522  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 468h  +
push [ebp+wParam]  +
call ds:GetParent  +
push eax  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_8] +
movzx ecx ax +
cmp ecx 474h +
jz loc_104A154  +
add ecx 0FFFFFB8Ah +
cmp ecx 1 +
jbe loc_105BBF3  +
push [ebp+hDlg]  +
call sub_1048561  +
jmp loc_104843E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+hWnd]  +
call ds:GetParent  +
mov esi eax +
test esi esi +
jz loc_1048607  +
push 0FFFFFFECh  +
push esi  +
call ds:GetWindowLongW  +
or eax 40000h +
push eax  +
push 0FFFFFFECh  +
push esi  +
call ds:SetWindowLongW  +
push 28h  +
push offset aShell32  +
call ds:GetModuleHandleW  +
push eax  +
call ds:LoadIconW  +
push eax  +
push 0  +
push 80h  +
push esi  +
call ds:SendMessageW  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [esi+8] +
push edi  +
mov edi [esi+4] +
lea eax [edi+1] +
test eax eax +
jle loc_105BCEA  +
push ebx  +
cmp edi ecx +
jnz loc_1048660  +
cmp edi 3FFFFFFFh +
jg loc_1048680  +
cmp edi 1FFFFFFFh +
ja loc_1048680  +
test ecx ecx +
jz loc_104867B  +
lea ebx [edi+edi] +
mov eax ebx +
shl eax 2 +
push eax  +
push dword ptr [esi]  +
call ds:__imp_realloc  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1048680  +
mov [esi+8] ebx +
mov [esi] eax +
push [ebp+arg_0]  +
lea eax [edi+1] +
push edi  +
mov ecx esi +
mov [esi+4] eax +
call sub_1035205  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor ebx ebx +
inc ebx  +
jmp loc_1048647  +
xor eax eax +
jmp loc_1048674  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
test esi esi +
jz loc_105B616  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_105B616  +
mov [esi] eax +
call ds:GetCurrentThreadId  +
mov edi [ebp+arg_0] +
lea ebx [edi+34h] +
push ebx  +
mov [esi+4] eax +
call ds:EnterCriticalSection  +
mov eax [edi+68h] +
mov [esi+8] eax +
push ebx  +
mov [edi+68h] esi +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea ebx [edi+34h] +
push ebx  +
call ds:EnterCriticalSection  +
mov esi [edi+68h] +
test esi esi +
jz loc_1048718  +
call ds:GetCurrentThreadId  +
xor ecx ecx +
cmp [esi+4] eax +
jnz loc_1048729  +
mov eax [esi+8] +
test ecx ecx +
jnz loc_1048734  +
mov [edi+68h] eax +
mov eax [esi] +
mov [ebp+var_4] eax +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov ecx esi +
mov esi [esi+8] +
test esi esi +
jz loc_1048718  +
jmp loc_1048704  +
mov [ecx+8] eax +
jmp loc_1048713  +
***
cmp dword_10B1110 0 +
push esi  +
jz loc_104F6CC  +
mov eax dword_10B1110 +
cmp eax 1 +
jz loc_105C967  +
push eax  +
call dword_10B1118  +
test eax eax +
jz loc_105C97E  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_1048788  +
call sub_104873E  +
mov [esi] eax +
test eax eax +
jz loc_104879F  +
cmp [ebp+arg_0] 0 +
jz loc_104A628  +
push [ebp+arg_4]  +
mov ecx [esi] +
push [ebp+arg_0]  +
call sub_10487A9  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov [ecx+4] eax +
mov eax [ebp+arg_0] +
sub eax ecx +
push 0Dh  +
sub eax 0Dh +
push ecx  +
mov dword ptr [ecx] 42444C7h +
mov byte ptr [ecx+8] 0E9h +
mov [ecx+9] eax +
call ds:GetCurrentProcess  +
push eax  +
call ds:FlushInstructionCache  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_1048A6F  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 1 +
jz loc_10495B1  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+8] +
mov [ebp-4] ecx +
test eax eax +
jz loc_10488F3  +
push ebx  +
mov ebx [eax] +
push esi  +
push edi  +
lea esi [eax+4] +
lea edi [ebp-14h] +
movs   +
movs   +
movs   +
shr ebx 2 +
movs   +
and bl 1 +
call sub_10344B4  +
mov esi [ebp-4] +
neg eax  +
sbb eax eax +
and eax 400000h +
mov edi 80h +
or eax edi +
test bl bl +
jnz loc_10577AA  +
add esi 0CA0h +
mov ecx [ebp-8] +
sub ecx [ebp-10h] +
xor ebx ebx +
push ebx  +
push hInstance  +
push ebx  +
push ebx  +
push ecx  +
mov ecx [ebp-0Ch] +
sub ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
push ebx  +
push ebx  +
push offset aStatic  +
push eax  +
call sub_103510B  +
mov [esi] eax +
cmp eax ebx +
jz loc_10488E6  +
push 28h  +
push offset aShell32  +
call ds:GetModuleHandleW  +
push eax  +
call ds:LoadIconW  +
push eax  +
push 1  +
push edi  +
push dword ptr [esi]  +
mov [ebp-4] eax +
call ds:SendMessageW  +
push dword ptr [ebp+8]  +
push dword ptr [esi]  +
call sub_10488FF  +
mov eax [esi] +
push eax  +
mov [esi] ebx +
call ds:DestroyWindow  +
cmp [ebp-4] ebx +
jz loc_10488E6  +
push dword ptr [ebp-4]  +
call ds:DestroyIcon  +
mov ecx [ebp+8] +
push 1  +
call sub_1048A84  +
pop edi  +
pop esi  +
pop ebx  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 298h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi] +
test al 0Ch +
jnz loc_105BED0  +
push ebx  +
push 6  +
pop ebx  +
test al 1 +
jnz loc_1048933  +
test al 2 +
jz loc_1048997  +
mov ebx 0CDh +
and [ebp+ppv] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset iid  +
push dword ptr [esi+14h]  +
call ds:__imp_CoGetInterfaceAndReleaseStream  +
test eax eax +
jl loc_1048957  +
and dword ptr [esi+14h] 0 +
push [ebp+ppv]  +
lea ecx [ebp+var_294] +
push dword ptr [esi]  +
push [ebp+arg_0]  +
push ebx  +
call sub_104925E  +
push [ebp+arg_0]  +
lea ecx [ebp+var_294] +
call sub_10489A6  +
lea ecx [ebp+var_294] +
call sub_1048B24  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
test al 10h +
jnz loc_105BF25  +
jmp loc_1048933  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
and dword ptr [esi+24h] 0FFFFFBFFh +
cmp dword ptr [esi+28h] 0 +
push edi  +
jz loc_105BCC8  +
lea edi [esi+54h] +
mov eax [edi] +
mov [esi+40h] eax +
mov eax [esi+58h] +
mov [esi+38h] eax +
push esi  +
lea eax [esi+8] +
push eax  +
push offset unk_10B23C8  +
call sub_1048689  +
lea eax [esi+20h] +
push eax  +
call ds:off_1048A04  +
and dword ptr [esi+38h] 0 +
and dword ptr [esi+40h] 0 +
mov ecx edi +
mov [ebp+arg_0] eax +
call sub_10487E5  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
cmp dword_10B22BC 0FFFFFFFFh +
mov [ebp+var_4] esi +
jnz loc_1048A31  +
push offset aPropertysheetw  +
push offset dword_10B22BC  +
call sub_1012091  +
cmp dword_10B22BC esi +
jz loc_1048A56  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call sub_1049220  +
push [ebp+arg_0]  +
call dword_10B22BC  +
push [ebp+var_4]  +
mov esi eax +
call sub_1048B0B  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
push eax  +
call ds:__imp_free  +
and dword ptr [esi] 0 +
pop ecx  +
jmp loc_10487F4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 0 +
jnz loc_10571B0  +
test [ebp+arg_0] 1 +
jz loc_1048AA3  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi ds:GetWindowLongW +
push 0FFFFFFFCh  +
push dword ptr [esi+4]  +
call edi  +
push dword ptr [ebp+14h]  +
mov ecx esi +
push ebx  +
push 82h  +
mov [ebp+0Ch] eax +
call sub_10483A8  +
mov [ebp+8] eax +
mov eax [esi+1Ch] +
cmp eax ds:DefWindowProcW +
jz loc_1048AF2  +
push 0FFFFFFFCh  +
push dword ptr [esi+4]  +
call edi  +
cmp eax [ebp+0Ch] +
jnz loc_1048AF2  +
push dword ptr [esi+1Ch]  +
push 0FFFFFFFCh  +
push dword ptr [esi+4]  +
call ds:SetWindowLongW  +
mov eax [esi+4] +
mov edx [esi] +
and dword ptr [esi+4] 0 +
push eax  +
mov ecx esi +
call dword ptr [edx+8]  +
jmp loc_1048399  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push 0  +
call ds:DeactivateActCtx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+28Ch] +
push eax  +
mov dword ptr [esi] offset off_100D83C +
call sub_1002BEE  +
lea ecx [esi+27Ch] +
call sub_10487E5  +
mov ecx esi +
pop esi  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+58h] +
test eax eax +
jg loc_105BC99  +
lea ecx [esi+54h] +
call sub_10487E5  +
mov esi [esi+14h] +
test esi esi +
jz loc_1048B73  +
push esi  +
call sub_1048480  +
pop esi  +
retn   +
***
push offset dword_1048BC0  +
call ds:SHLWAPI_618  +
cmp eax 0FFFFFFFFh +
jnz loc_1056522  +
mov eax [esi+0DECh] +
mov ecx [eax] +
push edi  +
lea edx [ebp+arg_4] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push 0  +
push 0  +
push 1Ah  +
mov edi offset dword_1023F70 +
push edi  +
mov esi offset dword_1023F40 +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jge loc_105652A  +
pop edi  +
jmp loc_1023F0B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
cmp dword_10B24CC 0 +
push esi  +
push edi  +
jz loc_1048C16  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1048DBC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_105B874  +
push ebx  +
push [ebp+arg_8]  +
lea eax [ebp+var_40] +
push eax  +
mov ecx offset unk_10B1460 +
call sub_1023E74  +
mov eax [ebp+var_10] +
mov edi ds:CheckDlgButton +
and eax 1 +
push eax  +
push 44Eh  +
push [ebp+hDlg]  +
call edi  +
call sub_1035439  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
mov esi 451h +
push esi  +
push [ebp+hDlg]  +
call edi  +
call sub_1035409  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
push esi  +
push [ebp+hDlg]  +
mov esi ds:GetDlgItem +
call esi  +
mov ebx ds:EnableWindow +
push eax  +
call ebx  +
lea eax [ebp+var_8] +
push eax  +
push offset aMicrosoftWindo  +
call SLGetWindowsInformationDWORD  +
test eax eax +
jl loc_105B8B2  +
cmp [ebp+var_8] 0 +
jz loc_105B8B2  +
push 0  +
push offset aDisableprevi_1  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
test eax eax +
jnz loc_1048CB6  +
push 1  +
push 475h  +
push [ebp+hDlg]  +
call edi  +
push 0  +
push offset aTaskbarsmallic  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
test eax eax +
jnz loc_105B8F0  +
push offset dword_1023F60  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_105B901  +
mov eax dword_10B2138 +
sub eax 0 +
jz loc_1048DC9  +
dec eax  +
jz loc_105B919  +
dec eax  +
jz loc_105B915  +
xor eax eax +
push eax  +
push 4  +
push 58Ch  +
mov edi 476h +
push edi  +
push [ebp+hDlg]  +
call sub_1048FC9  +
push offset dword_1023F50  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_105B921  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+wParam] +
push eax  +
push 0  +
push 0FFFFh  +
push offset aTaskbarglomlev  +
push offset aSoftwareMicr_0  +
mov [ebp+var_C] 4 +
call ds:__imp_SHRegGetValueFromHKCUHKLM  +
test eax eax +
jz loc_1048D57  +
and [ebp+wParam] 0 +
push [ebp+wParam]  +
mov edi 477h +
push 3  +
push 582h  +
push edi  +
push [ebp+hDlg]  +
call sub_1048FC9  +
push 40000056h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_105B931  +
cmp dword_10B24CC 0 +
pop ebx  +
jz loc_1048DB6  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1048DD1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_105B953  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
test al al +
jz loc_1048BF5  +
jmp loc_1048C16  +
xor eax eax +
inc eax  +
jmp loc_1048D00  +
test al al +
jz loc_1048D95  +
jmp loc_1048DB6  +
***
push dword ptr [ecx+28Ch]  +
mov eax [ebp+hDlg] +
push dword ptr [ecx+270h]  +
mov [ecx+274h] eax +
push eax  +
call sub_1048BD5  +
jmp loc_104843E  +
push [ebp+hDlg]  +
call sub_1077C4B  +
jmp loc_1048476  +
***
push dword ptr [ebp+8]  +
call sub_10485B7  +
push dword ptr [ebp+8]  +
call sub_1048E2D  +
push edi  +
push 8  +
push dword ptr [ebp+8]  +
call ds:SetWindowLongW  +
mov esi [edi+1Ch] +
jmp loc_10483F6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 475h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
mov esi eax +
test esi esi +
jz loc_1048E54  +
call sub_1048E5E  +
push eax  +
push esi  +
call ds:EnableWindow  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call ds:DwmIsCompositionEnabled  +
test eax eax +
jl loc_1048E99  +
cmp [ebp+var_4] 0 +
jz loc_1048E99  +
push 1  +
push 0  +
push offset aEnableaeropeek  +
push offset aSoftwareMic_24  +
call ds:SHRegGetBoolUSValueW  +
test eax eax +
jz loc_1048E99  +
xor eax eax +
inc eax  +
leave   +
retn   +
xor eax eax +
leave   +
retn   +
***
sub ecx esi +
jnz loc_100A316  +
push 1  +
mov ecx ebx +
call sub_104945C  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push [ebp+nIDDlgItem]  +
mov eax [ebp+hDlg] +
push eax  +
call ds:GetDlgItem  +
mov [ebp+hWnd] eax +
test eax eax +
jz loc_1049051  +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi ds:SendMessageW +
push edi  +
xor edi edi +
test ebx ebx +
jbe loc_1049035  +
push 3Ch  +
lea eax [ebp+lParam] +
push eax  +
mov eax [ebp+arg_8] +
add eax edi +
push eax  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_1049030  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 143h  +
push [ebp+hWnd]  +
call esi  +
inc edi  +
cmp edi ebx +
jb loc_1049004  +
dec ebx  +
cmp [ebp+wParam] ebx +
ja loc_105B60D  +
push 0  +
push [ebp+wParam]  +
push 14Eh  +
push [ebp+hWnd]  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
call dword ptr [eax+4]  +
push esi  +
lea edi [esi+14h] +
push eax  +
mov ecx edi +
call sub_1048770  +
test eax eax +
jz loc_10490B4  +
push dword ptr [edi]  +
mov edi [ebp+hWnd] +
push 0FFFFFFFCh  +
push edi  +
call ds:SetWindowLongW  +
test eax eax +
jz loc_10490B4  +
mov [esi+1Ch] eax +
xor eax eax +
mov [esi+4] edi +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_10490AE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
lea ecx [eax+4] +
cmp dword ptr [ecx] 0 +
jnz loc_105BB80  +
mov ecx [ebp+lParam] +
mov [eax+34h] ecx +
mov ecx [eax+24h] +
and ecx 0FFFFFFFEh +
or ecx [ebp+wParam] +
mov [eax+24h] ecx +
pop ebp  +
retn 8  +
***
lea eax [ecx+4] +
cmp dword ptr [eax] 0 +
jnz loc_105BCD3  +
mov eax [ecx+58h] +
retn   +
***
mov eax (offset dword_1048324+3) +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ds:DefWindowProcW +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
mov [esi+4] edi +
mov [esi+14h] edi +
push 34h  +
mov [esi+18h] edi +
mov [esi+1Ch] eax +
lea ebx [esi+20h] +
push edi  +
push ebx  +
mov [esi+54h] edi +
mov [esi+58h] edi +
mov [esi+5Ch] edi +
call memset  +
mov dword ptr [ebx] 34h +
mov dword ptr [esi+24h] 100h +
mov eax dword_10B23D0 +
mov [esi+2Ch] eax +
mov eax [ebp+arg_0] +
mov [esi+34h] eax +
mov eax [ebp+arg_4] +
mov [esi+3Ch] eax +
mov eax [ebp+arg_8] +
add esp 0Ch +
mov [esi+40h] edi +
mov [esi+38h] edi +
mov [esi+28h] eax +
pop edi  +
mov dword ptr [esi+44h] offset loc_1048803 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
lea ecx [eax+4] +
cmp dword ptr [ecx] 0 +
jnz loc_105BE1E  +
lea ecx [ebp+lParam] +
push ecx  +
lea ecx [eax+54h] +
call sub_1048611  +
pop ebp  +
retn 4  +
***
push ecx  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_10493D5  +
mov eax [ebp+arg_4] +
jmp loc_10493A0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
xor esi esi +
push eax  +
mov [ebp+var_4] esi +
call sub_10350C0  +
cmp dword_10B22B8 0FFFFFFFFh +
jz loc_104F2BD  +
cmp dword_10B22B8 esi +
jz loc_104920C  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 30h +
jbe loc_1049203  +
or dword ptr [eax+4] 4000h +
mov ecx dword_10B39C8 +
mov [eax+30h] ecx +
push eax  +
call dword_10B22B8  +
mov esi eax +
push [ebp+var_4]  +
call sub_10350F3  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
push eax  +
push [ebp+arg_0]  +
call ds:ActivateActCtx  +
pop ebp  +
retn 8  +
***
mov ecx ebx +
call sub_10490EB  +
cmp eax 1 +
jle loc_10493D5  +
mov ecx ebx +
call sub_10490EB  +
dec eax  +
mov [ebx+3Ch] eax +
jmp loc_10493D5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_4]  +
xor esi esi +
push esi  +
push ecx  +
mov eax esp +
mov ebx ecx +
mov [eax] esi +
call sub_104910B  +
mov eax [ebp+arg_8] +
mov [ebx+270h] eax +
mov dword ptr [ebx] offset off_100D83C +
mov [ebx+274h] esi +
mov [ebx+278h] esi +
lea eax [ebx+27Ch] +
mov [eax] esi +
mov [eax+4] esi +
mov [eax+8] esi +
mov eax [ebp+arg_C] +
mov [ebx+28Ch] eax +
mov eax offset dword_1023F90 +
push 104h  +
mov [ebp+var_6C] eax +
mov [ebp+var_44] eax +
lea eax [ebx+68h] +
push eax  +
push 32Ah  +
push hInstance  +
mov edi offset dword_100D864 +
mov [ebp+var_74] 6 +
mov [ebp+var_70] offset loc_10483CB +
mov [ebp+var_68] edi +
mov [ebp+var_64] esi +
mov [ebp+var_60] 0CDh +
mov [ebp+var_5C] offset loc_10484B3 +
mov [ebp+var_58] edi +
mov [ebp+var_54] edi +
mov [ebp+var_50] esi +
mov [ebp+var_4C] 0Ah +
mov [ebp+var_48] offset loc_1049757 +
mov [ebp+var_40] offset loc_10493EC +
mov [ebp+var_3C] 4000006Bh +
call ds:LoadStringW  +
push esi  +
lea eax [ebx+68h] +
push eax  +
mov ecx ebx +
call sub_10490BD  +
push 34h  +
lea eax [ebp+var_34] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
or dword ptr [ebx+24h] 2000000h +
mov eax hInstance +
mov [ebp+var_30] eax +
lea eax [ebp+var_68] +
mov [ebp+var_38] 38h +
mov [ebp+var_34] esi +
mov [ebp+arg_4] eax +
mov [ebp+arg_8] 3 +
mov esi [eax-4] +
push 4  +
pop ecx  +
xor edx edx +
mov [ebp+arg_C] esi +
cmps   +
jz loc_104937E  +
push [ebp+arg_C]  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_10493D5  +
mov eax [ebp+arg_4] +
mov esi [eax] +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
xor edx edx +
mov [ebp+arg_C] esi +
cmps   +
jnz loc_104943C  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_10491A5  +
movzx ecx word ptr [eax-0Ch] +
mov eax [eax-8] +
mov [ebp+var_20] eax +
lea eax [ebp+var_38] +
push eax  +
mov [ebp+var_2C] ecx +
mov [ebp+var_1C] ebx +
call dword ptr ds:loc_10493F7+5  +
test eax eax +
jz loc_10493D5  +
push eax  +
mov ecx ebx +
call sub_1049182  +
mov eax [ebp+arg_4] +
mov eax [eax-0Ch] +
cmp eax [ebp+arg_0] +
jz loc_1049239  +
add [ebp+arg_4] 14h +
dec [ebp+arg_8]  +
jz loc_1049400  +
mov eax [ebp+arg_4] +
mov edi offset dword_100D864 +
jmp loc_104935F  +
dec esi  +
sbb dword ptr [ebx-5Eh] 41137145h +
xchg eax ecx +
push ss  +
pop es  +
mov esi [ecx-3E1BB063h] +
xchg eax ecx +
add al 1 +
cmp dword_10B24CC 0 +
jz loc_1049433  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1049451  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_105BE7C  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
push [ebp+arg_C]  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_10493D5  +
mov eax [ebp+arg_4] +
jmp loc_1049395  +
test al al +
jz loc_1049412  +
jmp loc_1049433  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
push offset loc_104958C  +
push dword ptr [ebx+4]  +
mov [ebp+var_4] ebx +
call sub_10409B1  +
test eax eax +
jnz loc_1049569  +
mov eax [ebp+arg_0] +
shr eax 2 +
push edi  +
lea edi [ebx+0CA4h] +
test al 1 +
jnz loc_1049494  +
lea edi [ebx+0CA0h] +
push esi  +
push 5  +
pop esi  +
cmp dword ptr [edi] 0FFFFFFFFh +
jz loc_104956E  +
cmp dword ptr [edi] 0FFFFFFFFh +
jz loc_1057FE3  +
mov eax [edi] +
test eax eax +
jnz loc_1057FEB  +
cmp dword_10B24CC 0 +
jz loc_10494EB  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104957E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_1058000  +
push 18h  +
call sub_1002B98  +
xor esi esi +
pop ecx  +
cmp eax esi +
jz loc_10494FE  +
mov [eax+14h] esi +
mov esi eax +
test esi esi +
jz loc_1049567  +
and [ebp+var_4] 0 +
lea eax [esi+4] +
push eax  +
lea ecx [ebx+0AF8h] +
call sub_1040997  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax [ebx+0DECh] +
xor ebx ebx +
cmp eax ebx +
jz loc_1049541  +
lea ecx [esi+14h] +
push ecx  +
push eax  +
push offset stru_1049060  +
call ds:__imp_CoMarshalInterThreadInterfaceInStream  +
cmp eax ebx +
mov [ebp+var_4] eax +
jl loc_1058046  +
or dword ptr [edi] 0FFFFFFFFh +
push ebx  +
push 2008h  +
push esi  +
push offset loc_10495A1  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_1058039  +
cmp [ebp+var_4] ebx +
jl loc_1058046  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
mov eax esi +
dec esi  +
test eax eax +
jnz loc_1057FD3  +
jmp loc_10494A1  +
test al al +
jnz loc_10494EB  +
jmp loc_10494CA  +
***
clc   +
jnb loc_104960E  +
mov byte ptr [ebx+ebp*4+2Fh] 42h +
mov ecx 0AB573C52h +
leave   +
sal dword ptr [edi] 90h +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx offset unk_10B1460 +
pop ebp  +
jmp loc_104881D  +
***
push esi  +
push offset unk_10B23C8  +
call sub_10486DB  +
push dword ptr [ebp+8]  +
mov esi eax +
mov ecx esi +
call sub_1049075  +
and dword ptr [esi+38h] 0 +
and dword ptr [esi+40h] 0 +
lea ecx [esi+54h] +
call sub_10487E5  +
mov ecx esi +
call sub_10495EA  +
pop esi  +
jmp loc_1048812  +
***
push offset aShell32_dll40  +
push offset aSystemrootSyst  +
push offset aMicrosoft_wind  +
push dword ptr [ecx+4]  +
call ds:SHELL32_893  +
retn   +
***
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword ptr [ebp+0Ch] 110h +
push edi  +
mov edi [ebp+14h] +
jz loc_1049B28  +
push 8  +
push dword ptr [ebp+8]  +
call ds:GetWindowLongW  +
test eax eax +
jz loc_1049782  +
mov esi [eax+1Ch] +
xor eax eax +
test esi esi +
jz loc_1049799  +
push edi  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10497BD  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
cmp [ebp+arg_4] 110h +
jnz loc_1049814  +
push dword ptr [esi+270h]  +
push [ebp+wParam]  +
call sub_1049C38  +
jmp loc_1049814  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_4] 4Eh +
push esi  +
mov esi ecx +
jnz loc_104979F  +
mov eax [ebp+arg_C] +
mov ecx [eax+8] +
cmp ecx 0FFFFFE64h +
jz loc_1049887  +
cmp ecx 0FFFFFF35h +
jz loc_104987A  +
cmp ecx 0FFFFFF36h +
jz loc_105BDBC  +
cmp ecx 0FFFFFF37h +
jz loc_104981B  +
cmp ecx 0FFFFFF38h +
jz loc_104981B  +
add ecx 3 +
cmp ecx 1 +
jbe loc_104998E  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
xor eax eax +
inc eax  +
jmp loc_1049816  +
push 1  +
push 0  +
mov ecx esi +
call sub_104989B  +
jmp loc_1049814  +
push 20h  +
pop ecx  +
cmp cx [eax+0Ch] +
jz loc_105BDD3  +
jmp loc_104981B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
xor edi edi +
cmp [ebx+278h] edi +
jz loc_104993A  +
mov eax [ebx+280h] +
cmp eax edi +
mov [ebp+var_C] eax +
mov [ebp+var_8] edi +
jle loc_104993A  +
push 38h  +
lea eax [ebp+var_44] +
push edi  +
push eax  +
mov [ebp+lParam] 16h +
call memset  +
add esp 0Ch +
push [ebp+var_8]  +
lea ecx [ebx+27Ch] +
call sub_1013815  +
mov eax [eax] +
mov [ebp+var_44] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 113Eh  +
push dword ptr [ebx+278h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_104992F  +
mov eax [ebp+var_24] +
mov [ebp+lpMem] eax +
cmp eax edi +
jz loc_104992F  +
cmp [ebp+arg_0] edi +
jnz loc_105BC20  +
cmp [ebp+lpMem] edi +
jz loc_104992F  +
cmp [ebp+arg_4] edi +
jz loc_104992F  +
push [ebp+lpMem]  +
call sub_1002BCA  +
pop ecx  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_C] +
jl loc_10498C6  +
cmp [ebp+arg_4] edi +
jz loc_1049987  +
push 0FFFF0000h  +
push edi  +
push 1101h  +
push dword ptr [ebx+278h]  +
call ds:SendMessageW  +
mov esi ds:RemovePropW +
push offset aMsaastateimage  +
push dword ptr [ebx+278h]  +
call esi  +
push offset aMsaastateima_0  +
push dword ptr [ebx+278h]  +
call esi  +
mov ebx [ebx+288h] +
cmp ebx edi +
jz loc_1049987  +
push ebx  +
call ds:off_1035224  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
cmp dword ptr [eax+4] 471h +
jnz loc_104981B  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp-0Ch] eax +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+278h]  +
mov [ebp+lParam] ecx +
call ds:ScreenToClient  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1111h  +
push dword ptr [esi+278h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_104981B  +
push eax  +
push dword ptr [esi+278h]  +
call sub_1049A03  +
test eax eax +
jz loc_104981B  +
push [ebp+wParam]  +
call sub_1048561  +
jmp loc_104981B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push edi  +
push 38h  +
xor edi edi +
lea eax [ebp+var_38] +
push edi  +
push eax  +
mov [ebp+lParam] 32h +
call memset  +
mov eax [ebp+arg_4] +
mov esi ds:SendMessageW +
add esp 0Ch +
mov [ebp+var_38] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 113Eh  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jz loc_1049A63  +
xor eax eax +
cmp [ebp+var_24] edi +
setz al  +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 113Fh  +
push [ebp+hWnd]  +
call esi  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
push ebx  +
push esi  +
push edi  +
push 14h  +
mov [ebp+var_4] ecx +
call sub_1002B98  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_1049A9E  +
mov esi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
mov [ebx+10h] eax +
push 38h  +
lea eax [ebp+var_3C] +
push 0  +
push eax  +
mov [ebp+var_40] 27h +
call memset  +
mov eax [ebp+arg_8] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_C] +
add esp 0Ch +
mov [ebp+var_2C] eax +
xor eax eax +
cmp [ebp+arg_10] eax +
push 0Fh  +
setz al  +
pop ecx  +
mov [ebp+lParam] 0FFFF0000h +
mov [ebp+var_80] 0FFFF0002h +
lea esi [ebp+var_40] +
lea edi [ebp+var_7C] +
mov [ebp+var_1C] ebx +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
movs   +
mov esi [ebp+var_4] +
push 1132h  +
push dword ptr [esi+278h]  +
call ds:SendMessageW  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1049B21  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [esi+27Ch] +
call sub_1048611  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
push dword ptr [ebp+8]  +
call sub_10485B7  +
push edi  +
push 8  +
push dword ptr [ebp+8]  +
call ds:SetWindowLongW  +
mov esi [edi+1Ch] +
jmp loc_1049782  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_220] 0 +
push ebx  +
push esi  +
mov esi ecx +
mov ebx [esi+280h] +
push edi  +
mov edi ds:SendMessageW +
test ebx ebx +
jg loc_105BD3B  +
push 0FFFF0000h  +
push 0  +
push 1101h  +
push dword ptr [esi+278h]  +
call edi  +
cmp dword ptr [esi+28Ch] 0 +
jz loc_1049C24  +
mov eax [esi+28Ch] +
mov ecx [eax] +
mov edi offset dword_1023F40 +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_1049C24  +
mov ebx 104h +
mov eax [esi+28Ch] +
lea edx [ebp+var_228] +
push edx  +
lea edx [ebp+var_22C] +
push edx  +
lea edx [ebp+var_220] +
push edx  +
lea edx [ebp+var_20C] +
push edx  +
lea edx [ebp+var_224] +
push edx  +
lea edx [ebp+var_21C] +
push edx  +
push edi  +
mov [ebp+var_220] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_1049C24  +
push [ebp+var_228]  +
lea eax [ebp+var_20C] +
push [ebp+var_220]  +
mov ecx esi +
push eax  +
push [ebp+var_224]  +
lea eax [ebp+var_21C] +
push eax  +
call sub_1049A70  +
jmp loc_1049BBA  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ds:GetDlgItem +
push 471h  +
push [ebp+hIcon]  +
mov esi ecx +
call edi  +
mov [esi+278h] eax +
test eax eax +
jz loc_1049D2D  +
push ebx  +
push 472h  +
push [ebp+hIcon]  +
call edi  +
mov edi eax +
push 0FFFFFFF0h  +
push edi  +
call ds:GetWindowLongW  +
or eax 100h +
push eax  +
push 0FFFFFFF0h  +
push edi  +
call ds:SetWindowLongW  +
push 0  +
push 2  +
push 1108h  +
push edi  +
mov edi ds:SendMessageW +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_1049CFE  +
push ebx  +
call ds:off_1049D44  +
push ebx  +
mov ebx ds:off_1035224 +
mov [esi+288h] eax +
call ebx  +
push 0  +
push 2  +
push dword ptr [esi+288h]  +
call ds:off_10084F8  +
mov [ebp+hIcon] eax +
test eax eax +
jz loc_1049CE1  +
push eax  +
push 0  +
push dword ptr [esi+288h]  +
call ds:off_10062D4  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
push dword ptr [esi+288h]  +
push 0  +
push 1109h  +
push dword ptr [esi+278h]  +
call edi  +
test eax eax +
jnz loc_105BDB4  +
mov edi ds:SetPropW +
push 2  +
push offset aMsaastateimage  +
push dword ptr [esi+278h]  +
call edi  +
push offset dword_1049D34  +
push offset aMsaastateima_0  +
push dword ptr [esi+278h]  +
call edi  +
mov ecx esi +
call sub_1049B49  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B2360 0FFFFFFFFh +
jnz loc_1049D6A  +
push offset aImagelist_dupl  +
push offset dword_10B2360  +
call sub_1012091  +
mov eax dword_10B2360 +
test eax eax +
jz loc_105CC64  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
cmp [esi+328h] edi +
jnz loc_1049E82  +
lea ebx [esi+354h] +
push ebx  +
call sub_1002BEE  +
mov eax [ebp+0Ch] +
mov [ebx] eax +
cmp eax edi +
jz loc_1049E6F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov [ebp-38h] edi +
push dword ptr [ebp-38h]  +
lea ecx [esi-8] +
call sub_1010881  +
mov [ebp-3Ch] eax +
cmp eax edi +
jz loc_104A01F  +
lea ecx [ebp-2Ch] +
mov [ebp-30h] edi +
mov [ebp-34h] edi +
call sub_102427A  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push edi  +
mov ecx [ebp-3Ch] +
call sub_1049E9B  +
test eax eax +
jz loc_104A017  +
inc dword ptr [ebp-30h]  +
cmp [ebp-34h] edi +
jz loc_1049E3B  +
mov eax [ebx] +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
lea eax [ebp-2Ch] +
push eax  +
lea ecx [esi-8] +
call sub_1049FD2  +
lea ecx [ebp-2Ch] +
call sub_102422E  +
lea ecx [ebp-2Ch] +
call sub_102427A  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp-30h]  +
jmp loc_1049E0A  +
***
sub dword ptr [esp+4] 8 +
jmp sub_100209D  +
***
lea ecx [ebp-2Ch] +
call sub_102422E  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov [esi+354h] edi +
jmp loc_1049E6F  +
***
push eax  +
call ds:DestroyIcon  +
jmp loc_102423F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0CCh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+wParam] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi ecx +
mov [ebp+var_A8] esi +
jl loc_1049FF8  +
push 0FFFFFFFFh  +
push 2  +
call sub_1010EB3  +
cmp [ebp+wParam] eax +
jge loc_1049FF8  +
xor eax eax +
push 9Eh  +
push eax  +
mov word ptr [ebp+var_A4] ax +
lea eax [ebp+var_A4+2] +
push eax  +
mov [ebp+lParam] 20h +
mov [ebp+var_C8] 80000013h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_A4] +
mov [ebp+var_B4] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_B0] 50h +
push 43Fh  +
push dword ptr [edi]  +
call ds:SendMessageW  +
cmp eax 0FFFFFFFFh +
jz loc_104A005  +
mov esi [ebp+var_B8] +
test esi esi +
jz loc_1049FFF  +
push 0  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jnz loc_1049FFF  +
mov eax [esi] +
push [ebp+var_C0]  +
mov [ebx+0Ch] eax +
mov eax [esi+4] +
mov [ebx+14h] eax +
mov ecx [edi+8] +
call sub_10111B5  +
mov [ebx+8] eax +
mov eax esi +
mov ecx [eax+0B1Ch] +
mov [ebx+10h] ecx +
lea esi [eax+438h] +
lea edi [ebx+18h] +
movs   +
movs   +
movs   +
add eax 24h +
push eax  +
mov ecx ebx +
movs   +
call sub_10242AF  +
lea eax [ebp+var_A4] +
push eax  +
mov ecx ebx +
call sub_1024256  +
mov ecx [ebp+var_A8] +
xor eax eax +
inc eax  +
mov [ecx] eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [eax+4] +
test ecx ecx +
jz loc_1059562  +
xor edx edx +
cmp dx [ecx] +
jz loc_1059562  +
pop edi  +
pop ebp  +
retn 4  +
***
and dword ptr [esi] 0 +
xor eax eax +
jmp loc_1049FBC  +
mov esi [ebp+var_A8] +
and dword ptr [esi] 0 +
xor eax eax +
inc eax  +
jmp loc_1049FBC  +
***
mov eax [ebp+arg_10] +
mov [eax] ebx +
jmp loc_10244A7  +
***
lea ecx [ebp-2Ch] +
call sub_102422E  +
inc dword ptr [ebp-38h]  +
cmp dword ptr [ebp-38h] 3 +
jl loc_1049DDD  +
add esi 2D8h +
mov ecx esi +
call sub_104A09F  +
lea ecx [ebp-2Ch] +
mov [ebp-40h] eax +
mov [ebp-3Ch] edx +
mov [ebp-30h] edi +
mov [ebp-34h] edi +
call sub_102427A  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-40h]  +
push edi  +
mov ecx esi +
call sub_1024417  +
test eax eax +
jz loc_1049E67  +
inc dword ptr [ebp-30h]  +
cmp [ebp-34h] edi +
jnz loc_10595B2  +
lea ecx [ebp-2Ch] +
call sub_102422E  +
lea ecx [ebp-2Ch] +
call sub_102427A  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-40h]  +
push dword ptr [ebp-30h]  +
jmp loc_104A05C  +
***
mov eax [ecx+1Ch] +
mov ecx 989680h +
mul  ecx +
push esi  +
push edi  +
mov esi eax +
mov edi edx +
call sub_101118D  +
sub eax esi +
sbb edx edi +
pop edi  +
pop esi  +
retn   +
***
sub dword ptr [esp+4] 8 +
jmp sub_10020BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+8] eax +
jnz loc_1059539  +
mov ecx [ebp+0Ch] +
mov dword ptr [ecx] offset unk_10B1500 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
add eax 0FFFFFFF8h +
push offset off_104A134  +
push eax  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
push edi  +
xor eax eax +
lea edi [ebp+var_8] +
stos   +
stos   +
lea eax [ebp+var_8] +
push eax  +
push 1  +
push 1121h  +
push 0  +
mov [ebp+var_4] 3 +
mov [ebp+var_8] 1 +
call WinSqmAddToStream  +
lea eax [ebp+hDlg] +
push eax  +
push offset stru_104A0BC  +
push 1  +
push 0  +
push offset stru_104A0CC  +
call ds:__imp_CoCreateInstance  +
pop edi  +
test eax eax +
jl loc_104843E  +
mov eax [ebp+hDlg] +
mov ecx [eax] +
push 0  +
push 0  +
push offset aMicrosoft_noti  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+hDlg] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_104843E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetWindowLongW +
push 0  +
push 0  +
push [ebp+wParam]  +
mov esi ecx +
call edi  +
mov ecx [ebp+arg_4] +
mov eax [ecx+8] +
xor ebx ebx +
inc ebx  +
cmp eax 0FFFFFE64h +
jz loc_104A283  +
cmp eax 0FFFFFFFBh +
jz loc_104A274  +
add eax 3 +
cmp eax ebx +
jbe loc_105B761  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
cmp dword ptr [ecx+4] 463h +
jz loc_105B7CD  +
jmp loc_104A26B  +
cmp word ptr [ecx+0Ch] 20h +
jz loc_105B7D2  +
jmp loc_104A26B  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov ecx [ebp+10h] +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
mov eax [esi+4] +
mov [ebp-14h] ecx +
mov ecx [ebp+14h] +
push edi  +
mov edi [esi+18h] +
mov [ebp-10h] ecx +
xor ecx ecx +
push ecx  +
mov [ebp-0Ch] ecx +
mov [ebp-8] ecx +
mov [ebp-4] ecx +
lea ecx [ebp+14h] +
push ecx  +
push dword ptr [ebp+14h]  +
lea edx [ebp-1Ch] +
push dword ptr [ebp+10h]  +
mov [esi+18h] edx +
mov edx [esi] +
push ebx  +
push eax  +
mov ecx esi +
mov [ebp-1Ch] eax +
mov [ebp-18h] ebx +
call dword ptr [edx]  +
mov [esi+18h] edi +
test eax eax +
jnz loc_105BCF1  +
cmp ebx 82h +
jz loc_104A508  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+4]  +
mov eax [ecx+4] +
jz loc_104A5A7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+1Ch] 0 +
jnz loc_104A340  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_104A34B  +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub esp 18h +
sub eax 4Eh +
push edi  +
jnz loc_104A36C  +
push [ebp+arg_C]  +
push [ebp+bEnable]  +
call sub_104A22F  +
pop edi  +
leave   +
retn 10h  +
sub eax 0C2h +
jz loc_104A82C  +
dec eax  +
jz loc_104A389  +
sub eax 0F3h +
jz loc_105BB86  +
xor eax eax +
jmp loc_104A367  +
push [ebp+bEnable]  +
mov eax [ebp+hWnd] +
push [ebp+arg_C]  +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp+hWnd] +
push eax  +
call sub_104A3A7  +
jmp loc_104A367  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+nResult] +
dec eax  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
jz loc_105B6A3  +
dec eax  +
jz loc_104A564  +
sub eax 40Bh +
jz loc_105B648  +
sub eax 10Eh +
jz loc_104A63A  +
dec eax  +
dec eax  +
jnz loc_104A64C  +
cmp [ebp+Translated] 200h +
jz loc_105B628  +
cmp dword ptr [edi+30h] 0 +
jnz loc_104A404  +
cmp [ebp+Translated] 300h +
jnz loc_104A404  +
push [ebp+wParam]  +
call sub_1048561  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov ecx [ebp+arg_8] +
movzx eax cx +
cmp eax 46Bh +
jnz loc_105BE24  +
push 38h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104F2FA  +
push [ebp+wParam]  +
mov ecx eax +
call sub_104A6F8  +
mov esi eax +
test esi esi +
jz loc_1048520  +
push 0  +
push [ebp+wParam]  +
mov ecx esi +
call sub_104A475  +
cmp eax 1 +
jz loc_105BE54  +
push 0  +
push dword ptr [esi+24h]  +
call ds:__imp_IUnknown_SetSite  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1048520  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push 0  +
push 0  +
lea ecx [esi+14h] +
call sub_1048770  +
test eax eax +
jz loc_105BCDA  +
push esi  +
add esi 8 +
push esi  +
push offset unk_10B23C8  +
call sub_1048689  +
push [ebp+dwInitParam]  +
push offset DialogFunc  +
push [ebp+hWndParent]  +
push 40Ch  +
push dword_10B23D0  +
call sub_104A4C5  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_10350C0  +
test eax eax +
jz locret_104A504  +
push esi  +
call sub_10350A4  +
push [ebp+dwInitParam]  +
push [ebp+lpDialogFunc]  +
push [ebp+hWndParent]  +
push [ebp+lpTemplateName]  +
push [ebp+hInstance]  +
call ds:DialogBoxParamW  +
push [ebp+var_4]  +
mov esi eax +
call sub_10350F3  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov eax [esi+4] +
mov edx [esi] +
and dword ptr [esi+4] 0 +
push eax  +
mov ecx esi +
call dword ptr [edx+8]  +
jmp loc_104A2F9  +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
mov esi offset aStart_admintoo +
cmp [ecx+28h] edi +
jnz loc_105B5DC  +
push esi  +
call sub_104A543  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+pszValue]  +
push offset pszSubKey  +
push 80000001h  +
call ds:SHDeleteValueW  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov ecx edi +
call sub_104A521  +
lea esi [edi+24h] +
mov eax [esi] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+10h]  +
push esi  +
call sub_1002BEE  +
push [ebp+nResult]  +
mov ecx edi +
call sub_104A592  +
jmp loc_104A404  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+nResult]  +
push dword ptr [ecx+4]  +
call ds:EndDialog  +
pop ebp  +
retn 4  +
***
add ecx 0FFFFFFE4h +
jz loc_104A5B3  +
push 1  +
call sub_104A5BF  +
xor eax eax +
jmp loc_104A31B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_104A5E5  +
test [ebp+arg_0] 1 +
jz loc_104A5D9  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_100D848 +
mov dword ptr [ecx+1Ch] offset off_1011EA8 +
mov ecx [ecx+14h] +
test ecx ecx +
jz locret_104A5FF  +
push ecx  +
call sub_1048480  +
retn   +
***
cmp [ebp+arg_4] 0 +
jnz loc_1048792  +
xor eax eax +
inc eax  +
jmp loc_104879F  +
***
cmp [ebp+Translated] 200h +
jnz loc_104A3ED  +
jmp loc_105B63D  +
xor eax eax +
inc eax  +
jmp loc_104A406  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push offset unk_10B23C8  +
call sub_10486DB  +
mov ebx [ebp+arg_0] +
mov esi eax +
mov eax [esi] +
mov ecx esi +
mov [esi+4] ebx +
call dword ptr [eax+4]  +
push esi  +
lea edi [esi+14h] +
push eax  +
mov ecx edi +
call sub_1048770  +
mov edi [edi] +
push edi  +
push 4  +
push ebx  +
call ds:SetWindowLongW  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
lea ecx [ebp+var_20C] +
push ecx  +
xor ecx ecx +
push ecx  +
push ecx  +
push dword ptr [eax+4]  +
push ecx  +
call ds:SHGetFolderPathW  +
mov ecx [ebp+var_4] +
neg eax  +
sbb eax eax +
inc eax  +
mov [esi] eax +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
xor ecx ecx +
mov [eax+4] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_100D848 +
mov dword ptr [eax+1Ch] offset off_1011EA8 +
mov dword ptr [eax+20h] 1 +
mov [eax+34h] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
add eax 0FFFFFFE4h +
push offset off_104A750  +
push eax  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov eax (offset byte_104A294+1) +
retn   +
***
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_104A790 +
xor eax eax +
cmps   +
jnz loc_104A789  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push offset off_10B2470  +
jmp loc_104A7C8  +
mov eax 80004005h +
jmp loc_104A7CD  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_104A7D8 +
xor eax eax +
cmps   +
jnz loc_104A76B  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push offset off_10B2468  +
call sub_104A7ED  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset off_104A80C  +
push [ebp+arg_0]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
and bl [ecx] +
push edx  +
test eax 4D440812h +
sahf   +
retn   +
***
push [ebp+bEnable]  +
call sub_104A83E  +
jmp loc_104A367  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetDlgItem +
push 1Eh  +
push 0  +
push 465h  +
push 519h  +
push [ebp+bEnable]  +
mov esi ecx +
mov dword ptr [esi+30h] 1 +
call edi  +
mov ebx ds:SendMessageW +
push eax  +
call ebx  +
push 0Ah  +
push offset aStart_minmfu  +
call sub_10373D2  +
push 0  +
push eax  +
push 51Bh  +
push [ebp+bEnable]  +
call ds:SetDlgItemInt  +
push 470h  +
push dword ptr [esi+34h]  +
call ds:IsDlgButtonChecked  +
test eax eax +
jz loc_105B812  +
push 3Ch  +
push 0  +
push 465h  +
push 51Ch  +
push [ebp+bEnable]  +
call edi  +
push eax  +
call ebx  +
push 3Ch  +
push 0  +
push 0Ah  +
push offset aStart_jumplist  +
call sub_1037379  +
push 0  +
push eax  +
push 51Dh  +
push [ebp+bEnable]  +
call ds:SetDlgItemInt  +
push 46Fh  +
push dword ptr [esi+34h]  +
call ds:IsDlgButtonChecked  +
test eax eax +
jz loc_105B83A  +
lea eax [esi+24h] +
push eax  +
push offset stru_104A9B8  +
push 1  +
push 0  +
push offset stru_104A9C8  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_105B862  +
push 463h  +
push [ebp+bEnable]  +
call edi  +
mov ecx esi +
mov edi eax +
call sub_104A9DD  +
lea eax [esi+1Ch] +
push eax  +
push dword ptr [esi+24h]  +
call ds:__imp_IUnknown_SetSite  +
mov eax [esi+24h] +
mov ecx [eax] +
push 0  +
push offset aSoftwareMic_25  +
push 80000002h  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
push 0  +
push 0  +
push 110Ah  +
push edi  +
call ebx  +
push eax  +
push 5  +
push 110Bh  +
push edi  +
call ebx  +
and dword ptr [esi+30h] 0 +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_10373D2  +
test eax eax +
jnz loc_105B5D4  +
push 0  +
push offset aStartmenuadmin  +
call sub_10373D2  +
neg eax  +
sbb eax eax +
neg eax  +
push eax  +
push offset aStart_admintoo  +
call sub_104AA14  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push [ebp+pszValue]  +
push offset pszSubKey  +
push 80000001h  +
call ds:__imp_SHSetValueW  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov ds:0E462112Ah al +
jmp loc_104AA16  +
***
cmp [ebx+0C0h] eax +
jnz loc_104AA71  +
push 2Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104AA84  +
mov ecx eax +
call sub_104BD95  +
mov [ebx+0C0h] eax +
mov eax [ebx+0C0h] +
test eax eax +
jnz loc_103BEA0  +
jmp loc_103BF6B  +
***
xor eax eax +
jmp loc_104AA6B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
lea ebx [esi+50h] +
cmp [ebx] edi +
jnz loc_104AB66  +
push ebx  +
push offset stru_10148A8  +
push 3  +
push edi  +
push offset stru_10148B8  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_104AB66  +
mov eax [ebx] +
mov ecx [eax] +
push 0FFFFFFFEh  +
push 1  +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx [ebx] +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_10148C8  +
push ebx  +
call dword ptr [eax]  +
test eax eax +
jl loc_104AB04  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 2  +
push 2  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+64h] +
xor ecx ecx +
cmp eax ecx +
jz loc_10617F6  +
lea edx [esi+68h] +
push edx  +
push ecx  +
push 0E12h  +
push ecx  +
push 14h  +
push ecx  +
push eax  +
call ds:GetThemeMargins  +
lea ebx [esi+5Ch] +
push ebx  +
push offset stru_104AB8C  +
push 1  +
push 0  +
push offset stru_104AB7C  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_104AB6D  +
mov eax [ebx] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_104AB6D  +
lea eax [esi+58h] +
push eax  +
push offset dword_104BB34  +
call SHELL32_849  +
mov edi eax +
test edi edi +
jl loc_104AB6D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
lea eax [esi+50h] +
push eax  +
call sub_1002BEE  +
jmp loc_1061813  +
***
test ebx ebx +
jz loc_10117F6  +
test byte ptr [ebx+18h] 1 +
jnz loc_10117F6  +
push ebx  +
mov ecx esi +
call sub_104BDFF  +
jmp loc_1011802  +
***
push 0  +
mov [eax+30h] ecx +
push 0  +
lea ecx [eax-0Ch] +
call sub_1015EF7  +
jmp loc_1040D0C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_104ABF0  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor ebx ebx +
xor edi edi +
cmp [esi+8Ch] ebx +
jz loc_10618C6  +
mov [esi+0A0h] ebx +
mov [esi+9Ch] ebx +
call sub_1036DAD  +
lea edi [esi+88h] +
mov ecx [edi] +
cmp ecx ebx +
jnz loc_10618DE  +
mov ecx esi +
call sub_104AC85  +
mov edi eax +
cmp edi ebx +
jl loc_104AC77  +
mov eax [esi+40h] +
mov ecx [eax] +
lea edx [esi+60h] +
push edx  +
lea edx [esi+1Ch] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
cmp edi ebx +
jl loc_104AC77  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov ecx esi +
call sub_1036DAD  +
jmp loc_104AC71  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
lea esi [ebx+40h] +
push esi  +
push offset stru_104AD8C  +
push 1  +
push 0  +
push offset stru_104AD6C  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_104AD64  +
mov eax [esi] +
and [ebp+var_4] 0 +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset dword_104AD7C  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_104ACD9  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 10h  +
push 10h  +
push eax  +
call dword ptr [ecx+0Ch]  +
lea eax [ebx+8] +
push eax  +
push dword ptr [esi]  +
call ds:__imp_IUnknown_SetSite  +
mov eax [esi] +
mov ecx [eax] +
push 10h  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
test edi edi +
jl loc_104AD57  +
and [ebp+Rect.left] 0 +
mov esi [esi] +
xor eax eax +
lea edi [ebp+Rect.top] +
stos   +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+Rect] +
stos   +
push ecx  +
push dword ptr [ebx+78h]  +
mov [ebp+var_C] 4 +
mov [ebp+var_8] 11000000h +
stos   +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
mov edi eax +
test edi edi +
jl loc_104AD57  +
mov ecx ebx +
call sub_104AA8D  +
mov edi eax +
test edi edi +
jl loc_104AD57  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+78h]  +
call ds:GetClientRect  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov ecx ebx +
push eax  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push eax  +
call sub_104ADA1  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_104AD64  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx ecx +
mov eax [ebx+68h] +
mov [ebp+var_D0] eax +
mov eax [ebx+70h] +
mov [ebp+var_CC] eax +
mov eax [ebp+arg_0] +
sub eax [ebx+6Ch] +
push esi  +
push edi  +
mov [ebp+var_C8] eax +
mov eax [ebp+arg_4] +
sub eax [ebx+74h] +
sub esp 10h +
mov [ebp+var_C4] eax +
mov eax [ebx+40h] +
mov ecx [eax] +
mov edi esp +
lea esi [ebp+var_D0] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
cmp [ebx+4Ch] esi +
jz loc_104AE9E  +
mov eax [ebx+4Ch] +
mov ecx [eax] +
lea edx [ebp+var_C0] +
push edx  +
push offset dword_104BB44  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_104AE9E  +
push 0A0h  +
lea eax [ebp+var_A4] +
push esi  +
push eax  +
mov [ebp+var_BC] 0B8h +
mov [ebp+var_B4] esi +
mov [ebp+var_AC] esi +
mov [ebp+var_A8] esi +
call memset  +
mov eax [ebp+var_C8] +
sub eax [ebp+var_D0] +
add esp 0Ch +
mov [ebp+var_B8] 1 +
mov [ebp+var_B0] eax +
cmp [ebx+0B0h] esi +
jnz loc_10617E3  +
mov eax [ebp+var_C0] +
mov ecx [eax] +
lea edx [ebp+var_BC] +
push edx  +
push offset loc_104CDB8  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_C0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
push 0  +
lea edx [ecx+7Ch] +
push edx  +
push eax  +
push 0  +
push offset loc_104AA40  +
add ecx 20h +
push ecx  +
call ds:ConnectToConnectionPoint  +
push esi  +
call sub_1002BEE  +
jmp loc_1036DE7  +
***
call sub_103D5AC  +
mov eax [esi] +
push dword ptr [edi+60h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
push 0  +
push dword ptr [esi]  +
call ds:__imp_IUnknown_SetSite  +
push esi  +
call sub_1002BEE  +
jmp loc_1036DBF  +
***
mov ecx [ebp+var_20C] +
call sub_104AC15  +
jmp loc_103D552  +
cmp [ebx+0A4h] esi +
jz loc_1061BEB  +
jmp loc_103CF96  +
***
mov ecx [esi+0C8h] +
cmp ecx edi +
jz loc_104AF2F  +
call sub_104AF6A  +
mov esi [esi+4Ch] +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset nullsub_1  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_103D5C9  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push edi  +
push edi  +
push 17h  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_103D5C9  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_10616BD  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] 75h +
cmp dword ptr [ecx+4Ch] 0 +
jnz loc_104AF9D  +
mov dword ptr [eax] 0F5h +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0Ch] 0 +
jz loc_104B14B  +
push ebx  +
push edi  +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
cmp [ebp+arg_0] 0 +
mov eax [esi+8] +
mov ebx [esi+0Ch] +
mov [ebp+var_4] eax +
mov eax [esi+10h] +
mov [ebp+SystemTimeAsFileTime.dwHighDateTime] eax +
jz loc_104B875  +
and dword ptr [esi+0Ch] 0 +
push edi  +
call ds:LeaveCriticalSection  +
test ebx ebx +
jz loc_104B149  +
cmp [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
mov esi 10000h +
mov edi 80010000h +
jnz loc_104B066  +
cmp dword_10B24CC 0 +
jz loc_104B066  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104B881  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_104B066  +
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov eax edx +
mov ecx ebx +
and eax esi +
and ecx edi +
cmp eax edx +
jnz loc_104B066  +
cmp ecx ebx +
jnz loc_104B066  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push offset dword_104B160  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
cmp [ebp+arg_0] 0 +
jz loc_104B149  +
cmp dword_10B24CC 0 +
jz loc_104B0D1  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104B88E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_104B0D1  +
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov eax edx +
mov ecx ebx +
and eax esi +
and ecx edi +
cmp eax edx +
jnz loc_104B0D1  +
cmp ecx ebx +
jnz loc_104B0D1  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push offset dword_104B170  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
push offset dword_104B150  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz loc_104B149  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
lea eax [ebp+arg_0] +
push eax  +
push offset unk_10B2480  +
call sub_104B44B  +
mov edi eax +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
mov ebx edx +
call sub_104B44B  +
sub eax edi +
sbb edx ebx +
push edx  +
push eax  +
call sub_1008129  +
push 0  +
push offset dword_10B2464  +
mov edi eax +
call ds:InterlockedExchange  +
test eax eax +
jz loc_104B149  +
test edi edi +
jl loc_1061716  +
push [ebp+arg_0]  +
push 7B3h  +
push offset dword_104B150  +
call sub_104B3E5  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
sub dword ptr [esp+4] 20h +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 34h +
jmp loc_1002D39  +
***
sub dword ptr [esp+4] 34h +
jmp loc_1002A39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 0CFh +
jz loc_104B1F4  +
sub eax 10h +
jz loc_104B4A7  +
xor eax eax +
pop ebp  +
retn 24h  +
push 0  +
mov ecx [ebp+arg_0] +
add ecx 0FFFFFFE0h +
call sub_104B208  +
jmp loc_104B1CA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+80h] edi +
jnz loc_104B3B0  +
mov eax [esi+0A4h] +
push ebx  +
mov [ebp+var_4] eax +
mov eax [esi+90h] +
lea edx [ebp+var_14] +
push edx  +
mov [ebp+var_18] eax +
mov eax [esi+4Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_10619CF  +
mov eax [esi+4Ch] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset stru_104B1D0  +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax edi +
mov [ebp+arg_0] eax +
jl loc_104B345  +
cmp [esi+0ACh] edi +
jz loc_104B2D0  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push offset dword_104B1E0  +
push [ebp+var_14]  +
push eax  +
call dword ptr [ecx+44h]  +
cmp eax edi +
mov [ebp+arg_0] eax +
jl loc_104B2D0  +
push offset byte_1002CD0  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantToStringWithDefault  +
push eax  +
push dword ptr [esi+0ACh]  +
call ds:StrCmpW  +
test eax eax +
jnz loc_104B2C6  +
cmp [esi+90h] edi +
jz loc_104B9DE  +
or [ebp+var_4] 0FFFFFFFFh +
mov dword ptr [esi+90h] 1 +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
cmp [esi+90h] edi +
jz loc_104B33C  +
mov eax [esi+0A4h] +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jz loc_104B2ED  +
cmp eax edi +
jnz loc_1061962  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push offset dword_104B3CC  +
push [ebp+var_14]  +
push eax  +
call dword ptr [ecx+44h]  +
cmp eax edi +
mov [ebp+arg_0] eax +
jl loc_104B33C  +
push offset byte_1002CD0  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantToStringWithDefault  +
mov edi ds:__imp_StrCmpICW +
mov ebx eax +
push ebx  +
push offset aPrograms  +
call edi  +
test eax eax +
jnz loc_1061989  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
xor edi edi +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_4] 0FFFFFFFFh +
jnz loc_104B36D  +
cmp [ebp+var_18] edi +
jz loc_104B90C  +
cmp [ebp+arg_0] edi +
jl loc_104B36D  +
cmp [esi+90h] edi +
jz loc_104B36D  +
cmp [esi+94h] edi +
jnz loc_10619C2  +
push [ebp+var_14]  +
call ds:__imp_SHELL32_155  +
cmp [esi+90h] edi +
jz loc_104B3AF  +
cmp [ebp+var_18] edi +
mov edi ds:SHLWAPI_484 +
push 3  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+var_4] +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov ebx offset dword_103BE90 +
jz loc_104B9A8  +
lea eax [esi+94h] +
xor ecx ecx +
cmp [eax] ecx +
jnz loc_1061A07  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 80h  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_8] +
mov [ebp+var_84] eax +
add esp 0Ch +
xor eax eax +
inc eax  +
push eax  +
mov [ebp+var_88] eax +
lea eax [ebp+var_88] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
mov ebx eax +
mov eax [esp+arg_0] +
mul  [esp+arg_C] +
add ebx eax +
mov eax [esp+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
push 1  +
call sub_104AFA8  +
xor eax eax +
pop ebp  +
retn 8  +
***
push 1  +
jmp loc_104B1F6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+24h] +
mov ecx [eax] +
push 9  +
push eax  +
call dword ptr [ecx+2Ch]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push offset Addend  +
call ds:InterlockedIncrement  +
cmp dword_10B24CC 0 +
mov ebx eax +
jz loc_104B5CC  +
mov dl byte_10B24D0 +
mov edi 10000h +
mov esi 80010000h +
cmp dl 4 +
jb loc_104B5F7  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_104B578  +
mov eax dword_10B24C0 +
mov ecx dword_10B24C4 +
and eax edi +
and ecx esi +
cmp eax dword_10B24C0 +
jnz loc_104B578  +
cmp ecx dword_10B24C4 +
jnz loc_104B578  +
push ebx  +
push offset dword_104B610  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
mov dl byte_10B24D0 +
cmp dword_10B24CC 0 +
jz loc_104B5CC  +
cmp dl 4 +
jb loc_104B604  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_104B5CC  +
mov edx dword_10B24C0 +
mov eax edx +
and eax edi +
mov edi dword_10B24C4 +
mov ecx edi +
and ecx esi +
cmp eax edx +
jnz loc_104B5CC  +
cmp ecx edi +
jnz loc_104B5CC  +
push ebx  +
push offset dword_104B620  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
mov esi [ebp+arg_0] +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
and dword ptr [esi+10h] 0 +
push edi  +
mov dword ptr [esi+0Ch] 1 +
mov [esi+8] ebx +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
test dl dl +
jz loc_104B529  +
jmp loc_104B578  +
test dl dl +
jnz loc_104B5CC  +
jmp loc_104B586  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
push 0  +
call sub_104AFA8  +
xor eax eax +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1002D39  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1002A39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_10]  +
mov edi [ebp+arg_C] +
push [ebp+wLanguage]  +
push [ebp+arg_4]  +
push [ebp+hModule]  +
call sub_104B694  +
pop edi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
mov ecx esi +
call sub_104B6F8  +
jmp loc_1001FDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi]  +
mov edi ecx +
push dword ptr [edi+1E0h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jnz loc_105DD60  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
xor edi edi +
cmp [esi+48h] edi +
jz loc_104B73D  +
mov ecx esi +
call sub_103872C  +
test eax eax +
jz loc_104B73D  +
mov eax [esi+48h] +
mov [ebp+hWnd] eax +
mov eax [ebx+8] +
cmp eax 20h +
jbe loc_105E5C0  +
cmp eax 25h +
jb loc_104B769  +
cmp eax 28h +
jbe loc_105E706  +
cmp eax 5Dh +
jz sub_104C408  +
cmp eax 70h +
jz loc_105E6F1  +
call ds:GetFocus  +
push eax  +
push dword ptr [esi+1E0h]  +
call ds:SHIsChildOrSelf  +
mov ecx esi +
test eax eax +
jnz loc_105E718  +
call sub_104B797  +
mov eax edi +
jmp loc_1001FDF  +
***
push 127h  +
push dword ptr [ecx+38h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 0  +
mov esi ecx +
mov edi [esi+80h] +
push 0  +
call sub_103CE2F  +
lea ebx [esi+0ACh] +
push dword ptr [ebx]  +
call ds:__imp_CoTaskMemFree  +
push ebx  +
push [ebp+arg_0]  +
call ds:__imp_SHStrDupW  +
mov ebx eax +
test ebx ebx +
jl loc_104B827  +
mov eax [esi+4Ch] +
test eax eax +
jz loc_104C918  +
cmp edi 1 +
jz loc_104C918  +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_104B4B0  +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
test ebx ebx +
jl loc_104B827  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_104B835  +
mov ebx eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
xor ecx ecx +
mov eax 80004005h +
cmp [esi+0ACh] ecx +
jz loc_104B870  +
lea eax [esi+0C8h] +
cmp [eax] ecx +
jz loc_104B85F  +
mov eax [eax] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
mov esi [esi+0ACh] +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [esi+10h] 1 +
jmp loc_104AFE6  +
test al al +
jz loc_104B01B  +
jmp loc_104B066  +
test al al +
jz loc_104B086  +
jmp loc_104B0D1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+5Ch] +
push edi  +
xor edi edi +
inc edi  +
test eax eax +
jnz loc_104B8BB  +
cmp [esi+60h] eax +
jnz loc_104B8BB  +
xor edi edi +
cmp eax 1 +
jz loc_10616D9  +
and dword ptr [esi+60h] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword ptr [ebp+10h] 1 +
jz loc_106178E  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1002A39  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1002D39  +
***
xchg eax edi +
mov al ds:0C5DF5BD7h +
sub al 45h +
mov ds:1F353F59h al +
dec ebp  +
pop esi  +
push ecx  +
lods   +
test dword ptr [ecx] 0CD9572C4h +
inc edx  +
scas   +
add eax 2784D03Bh +
or al 0B1h +
***
push 0  +
lea eax [ebp+pvarg] +
push eax  +
push 0  +
push 164h  +
push ebx  +
push offset dword_10128F0  +
push dword ptr [esi+18h]  +
call edi  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
jmp loc_104B39F  +
test bl bl +
jz loc_104B9FA  +
jmp loc_104BA16  +
test bl bl +
jz loc_104BA24  +
jmp loc_104BA70  +
cmp dword_10B24CC edi +
jz loc_104B2B8  +
mov bl byte_10B24D0 +
mov edi 10000h +
cmp bl 4 +
jb loc_104B9CF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 80000000h +
and eax edi +
and ecx edx +
or eax ecx +
jnz loc_106191A  +
cmp dword_10B24CC 0 +
jz loc_104BA70  +
cmp bl 4 +
jb loc_104B9D5  +
mov eax dword_10B24B8 +
mov edx dword_10B24BC +
mov ecx 80010000h +
and eax edi +
and edx ecx +
or eax edx +
jz loc_104BA70  +
mov ebx dword_10B24C0 +
mov edx dword_10B24C4 +
mov eax ebx +
and eax edi +
and edx ecx +
cmp eax ebx +
jnz loc_104BA70  +
cmp edx dword_10B24C4 +
jnz loc_104BA70  +
push offset dword_104BA78  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor edi edi +
jmp loc_104B2B8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_104BB87  +
cmp word ptr [eax] 0 +
jz loc_104BB87  +
xor eax eax +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_104BB83  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+ppv] +
and dword ptr [edi] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104BC24  +
push 1  +
push 0  +
push offset stru_104BC04  +
call CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_104BBFA  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_104BC14  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_104BBF1  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+ppv]  +
push [ebp+riid]  +
push 1  +
push 0  +
push offset stru_104BC58  +
call CoCreateInstance  +
pop ebp  +
retn 8  +
***
cmp [ebx+6D4h] esi +
jz loc_105E2E9  +
push 248h  +
push offset dword_104BC88  +
call sub_1034B2D  +
jmp loc_1037C70  +
***
lea eax [ebp+Rect] +
push eax  +
push ebx  +
push 100Eh  +
push dword ptr [edi+0B0h]  +
mov [ebp+Rect.left] 2 +
call esi  +
test eax eax +
jz loc_104BFDC  +
push 1  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [edi+0B0h]  +
call ds:InvalidateRect  +
jmp loc_104BFDC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+10h] +
test eax eax +
jz loc_106144E  +
push 0  +
push dword ptr [ebp+10h]  +
push 0  +
push 16h  +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:DrawThemeBackground  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+hDC]  +
lea ecx [esi+24h] +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call sub_1037F08  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push [ebp+Msg]  +
push dword ptr [esi+30h]  +
push dword ptr [esi+2Ch]  +
push 0  +
call sub_1038038  +
pop esi  +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
add ecx 24h +
push dword ptr [ebp+10h]  +
push 14h  +
push esi  +
call sub_1037F08  +
jmp loc_1011567  +
***
cmp dword ptr [ecx+64h] 0 +
mov eax 90A18240h +
jz locret_104BD63  +
mov eax 90A18340h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+2Ch] +
test eax eax +
jz loc_10616FC  +
push 0  +
push dword ptr [ebp+10h]  +
push 0  +
push 14h  +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:DrawThemeBackground  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi] offset off_100275C +
mov dword ptr [esi+4] 1 +
call ds:InitializeCriticalSection  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
mov ecx [eax] +
lea edi [esi+54h] +
push edi  +
push offset stru_1002CF4  +
push 0  +
push eax  +
call dword ptr [ecx+3Ch]  +
test eax eax +
jl loc_104BDF4  +
push 0  +
lea eax [esi+7Ch] +
push eax  +
push dword ptr [edi]  +
add esi 20h +
push 1  +
push offset loc_104AA40  +
push esi  +
call ds:ConnectToConnectionPoint  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ecx+40h] eax +
jz loc_104BE1C  +
mov eax [ebp+arg_0] +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_104ADA1  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
push 10h  +
mov [ebx] esi +
mov edi 8007000Eh +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_104BE5A  +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_1002774 +
mov dword ptr [eax+4] 1 +
mov [eax+8] ecx +
mov esi eax +
test esi esi +
jz loc_104BE80  +
lea eax [esi+0Ch] +
push eax  +
push esi  +
call ds:CoCreateFreeThreadedMarshaler  +
mov edi eax +
test edi edi +
jl loc_104BE7A  +
mov eax [esi] +
push ebx  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
xor edx edx +
inc edx  +
cmp ecx edx +
jz loc_1061880  +
cmp esi edx +
jnz loc_103CE8E  +
jmp loc_106189F  +
***
cmp [ebx+70h] esi +
jnz loc_1061AD5  +
mov eax [ebp+var_20C] +
test dword ptr [eax+8] 20000h +
jz loc_1061A86  +
cmp [ebx+80h] esi +
jz loc_103C07A  +
jmp loc_1061AA0  +
lea ecx [ebx-10h] +
call sub_104AC15  +
mov [ebp+var_208] eax +
jmp loc_103CEF0  +
***
mov esi [ebp+wParam] +
push edi  +
lea edi [ebp+var_10] +
movs   +
push 0  +
movs   +
push 14h  +
push ebx  +
push dword ptr [ecx+64h]  +
movs   +
lea eax [ebp+var_10] +
push eax  +
movs   +
call sub_1037CB3  +
pop edi  +
jmp loc_10145E9  +
push ebx  +
call sub_1094A20  +
jmp loc_10145F9  +
***
push ebx  +
push dword ptr [ebp+10h]  +
lea ecx [esi+38h] +
push 14h  +
push edi  +
call sub_1037F08  +
jmp loc_1011802  +
***
xor esi esi +
jmp loc_101C512  +
***
mov dword ptr [ebx+38h] 13h +
jmp loc_103BD30  +
***
cmp dword ptr [ecx+5Ch] 2 +
jnz loc_10114DE  +
jmp loc_1062026  +
***
push 0Fh  +
jmp loc_1040CFF  +
***
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ds:GetSystemMetrics +
push 1000h  +
call esi  +
mov ebx 10000h +
test eax eax +
jnz loc_104BF8B  +
push 2001h  +
call esi  +
test eax eax +
jnz loc_104BF8B  +
mov [ebp+var_4] ebx +
mov esi ds:SendMessageW +
push 0  +
push 0  +
push 1037h  +
push dword ptr [edi+0B0h]  +
call esi  +
and eax ebx +
cmp eax [ebp+var_4] +
jnz loc_105F9AD  +
push 0  +
push 0  +
push 1004h  +
push dword ptr [edi+0B0h]  +
call esi  +
mov ebx eax +
dec ebx  +
js loc_104BFE6  +
push ebx  +
mov ecx edi +
call sub_1012341  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_104BFC0  +
cmp dword ptr [eax+18h] 0 +
jnz loc_104BC98  +
mov ecx [ebp+var_4] +
call sub_100F319  +
jmp loc_104BFC0  +
pop esi  +
pop ebx  +
jmp loc_101633C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+ppv]  +
push [ebp+arg_0]  +
push offset dword_104C088  +
push [ebp+arg_0]  +
call sub_104C016  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+ppv] +
and dword ptr [ebx] 0 +
push esi  +
lea eax [ebp+ppv] +
push eax  +
push [ebp+arg_8]  +
call sub_104C0A1  +
mov esi eax +
test esi esi +
jl loc_104C07B  +
mov edx [ebp+arg_4] +
mov eax [edx+10h] +
cmp eax ds:dword_104C098 +
jnz loc_104C083  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_104C088 +
mov esi edx +
xor eax eax +
cmps   +
pop edi  +
jnz loc_104C083  +
push 5  +
pop eax  +
push ebx  +
push offset dword_104BB14  +
push [ebp+ppv]  +
or eax 2 +
push eax  +
push edx  +
push 0  +
push [ebp+arg_0]  +
call SHELL32_818  +
mov esi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
push 4  +
jmp loc_104C057  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+ppv] +
and dword ptr [esi] 0 +
push edi  +
push offset dword_104C108  +
call sub_104C13D  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104C128  +
call sub_104BC39  +
mov edi eax +
test edi edi +
jl loc_104C0F5  +
push 0  +
call ds:GetKeyboardLayout  +
mov ecx [ebp+ppv] +
mov edx [ecx] +
push esi  +
movzx eax ax +
push offset dword_104BB24  +
push eax  +
push [ebp+arg_0]  +
push ecx  +
call dword ptr [edx+0Ch]  +
mov edi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push offset dword_104C118  +
call sub_104C13D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_104C166  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jnz loc_105D314  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_104BAB8  +
push 0  +
push [ebp+arg_0]  +
push 0  +
call ds:__imp_SHBindToObject  +
mov edi eax +
test edi edi +
jl loc_104C1AB  +
push [ebp+arg_8]  +
lea eax [ebp+arg_4] +
push 1  +
push eax  +
push 2  +
push [ebp+var_4]  +
call sub_104C1C4  +
mov edi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_104C1B8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
push edi  +
lea edx [ebp+var_8] +
push edx  +
xor edi edi +
mov [eax] edi +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov ebx offset dword_104BAB8 +
push ebx  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jl loc_104C264  +
mov esi [ebp+arg_C] +
neg esi  +
sbb esi esi +
and esi 7FF8FFA9h +
add esi 80070057h +
mov [ebp+var_4] edi +
js loc_104C253  +
cmp edi [ebp+arg_C] +
jge loc_104C23F  +
cmp [ebp+var_4] 0 +
jnz loc_105D332  +
test esi esi +
jl loc_104C23A  +
push [ebp+var_4]  +
call SHELL32_155  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
mov edx [ebp+arg_8] +
push 0  +
push [ebp+arg_4]  +
push dword ptr [edx+edi*4]  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
inc edi  +
test esi esi +
jge loc_104C205  +
test esi esi +
jl loc_104C253  +
push [ebp+arg_10]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_104C272  +
mov esi eax +
push [ebp+var_4]  +
call SHELL32_155  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_0]  +
call SHGetIDListFromObject  +
mov edi eax +
test edi edi +
jl loc_104C2A7  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
call sub_104C2B4  +
push [ebp+arg_8]  +
mov edi eax +
call SHELL32_155  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHELL32_25  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
sub esp 20h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp eax ebx +
jz loc_104C301  +
mov [eax] ebx +
mov eax [ebp+arg_C] +
cmp eax ebx +
jnz loc_105D354  +
mov edi [ebp+arg_0] +
mov eax [edi] +
lea ecx [ebp+var_1C] +
push ecx  +
push offset dword_104BAA8  +
push edi  +
call dword ptr [eax]  +
mov esi eax +
cmp esi ebx +
jl loc_104C3DB  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_C] +
push edx  +
push ebx  +
push eax  +
mov [ebp+var_10] ebx +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_104C3D2  +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call SHGetIDListFromObject  +
mov esi eax +
cmp esi ebx +
jl loc_104C3C1  +
mov [ebp+var_14] 1 +
mov [ebp+var_8] ebx +
mov edi offset dword_104BAB8 +
push [ebp+arg_0]  +
call sub_104BB6F  +
test eax eax +
jnz loc_104C3B9  +
cmp [ebp+var_10] ebx +
jnz loc_104C3B9  +
cmp [ebp+var_14] ebx +
jz loc_105D35B  +
cmp [ebp+var_C] ebx +
jz loc_105D35B  +
push [ebp+arg_0]  +
call SHELL32_16  +
lea edx [ebp+var_4] +
push edx  +
mov [ebp+var_18] eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_14] ebx +
mov esi eax +
cmp esi ebx +
jge loc_105D371  +
push [ebp+arg_0]  +
call SHELL32_17  +
inc [ebp+var_8]  +
cmp esi ebx +
jge loc_104C362  +
push [ebp+arg_0]  +
call SHELL32_155  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jge loc_105D3C1  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
call sub_10897FE  +
jmp loc_104B769  +
***
cmp dword ptr [ebx+0Ch] 0FFFFFFFFh +
jz loc_105E722  +
jmp loc_1001FDD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+6Ch] ebx +
jnz loc_104C4D5  +
mov eax [esi+64h] +
mov ecx [ebp+arg_0] +
cmp eax [ecx] +
jnz loc_104C4D5  +
push edi  +
xor eax eax +
lea edi [ebp+var_8] +
stos   +
stos   +
mov edi [ebp+hWnd] +
push edi  +
mov [esi+9Ch] ebx +
mov [ebp+lParam] edi +
call ds:GetDlgCtrlID  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 4Eh  +
push edi  +
mov [ebp+var_8] eax +
mov [ebp+var_4] 0E1h +
call ds:SendMessageW  +
pop edi  +
test eax eax +
jnz loc_104C4C6  +
push dword ptr [esi+48h]  +
mov ecx esi +
call sub_1040FCB  +
push 16h  +
pop eax  +
push ebx  +
mov word ptr [ebp+var_1C] ax +
lea eax [ebp+var_1C] +
push eax  +
push ebx  +
push 130h  +
push offset dword_1013948  +
push offset dword_1036980  +
lea eax [esi+0Ch] +
push eax  +
mov [ebp+var_14] 20000h +
call ds:SHLWAPI_484  +
mov eax [esi+1E0h] +
mov [esi+48h] eax +
mov [esi+0C0h] ebx +
mov [esi+0C4h] ebx +
mov [esi+64h] ebx +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10368D9  +
add esi 0BCh +
push esi  +
push offset loc_104C508  +
push [ebp+arg_0]  +
call sub_104C51D  +
pop esi  +
pop ebp  +
retn 4  +
***
psubq mm4 qword ptr [ecx+7Dh] +
retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+ppv] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1040B18  +
push 1  +
push 0  +
push offset stru_1040B08  +
call CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_104C562  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push edi  +
push dword ptr [ebp+10h]  +
mov edi [ebp+0Ch] +
push edi  +
push offset off_104C5B8  +
push ebx  +
call QISearch  +
test eax eax +
jge loc_104C5B2  +
push esi  +
push 4  +
pop ecx  +
mov esi offset dword_104C5C8 +
xor edx edx +
cmps   +
pop esi  +
jnz loc_104C5B2  +
cmp [ebx+0Ch] edx +
jz loc_104C5B2  +
push dword ptr [ebp+10h]  +
mov eax [ebx+0Ch] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov [ebp+var_A0] eax +
mov [eax] ebx +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104BAD8  +
push 1  +
push ebx  +
mov edi ecx +
push offset stru_104BA88  +
mov [ebp+var_8C] edi +
mov [ebp+ppv] ebx +
call ds:__imp_CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_104C818  +
mov eax [ebp+ppv] +
lea edx [ebp+var_90] +
push edx  +
push offset dword_104BAC8  +
push dword ptr [edi+44h]  +
mov [ebp+var_90] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_104C83B  +
lea eax [ebp+var_94] +
push eax  +
push offset dword_104BB04  +
push offset aItem  +
mov [ebp+var_94] ebx +
call sub_104BB91  +
mov esi eax +
cmp esi ebx +
jl loc_104C7F8  +
lea eax [ebp+var_84] +
push eax  +
push offset loc_104C854  +
push dword ptr [edi+78h]  +
mov [ebp+var_84] ebx +
call sub_104BE25  +
mov esi eax +
cmp esi ebx +
jl loc_104C7E8  +
push [ebp+var_84]  +
mov ecx edi +
call sub_104C4E0  +
push 78h  +
lea eax [ebp+pv] +
push ebx  +
push eax  +
mov [ebp+var_80] ebx +
call memset  +
mov esi offset nullsub_6 +
lea edi [ebp+var_78] +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+var_8C] +
add esp 0Ch +
mov ecx edi +
call sub_104BD53  +
mov [ebp+var_64] eax +
mov eax [ebp+var_90] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_94] +
mov [ebp+var_20] eax +
lea eax [ebp+pv] +
push eax  +
push ebx  +
push 2036h  +
push dword_10B23D0  +
call sub_10161F5  +
lea eax [ebp+var_88] +
push eax  +
push offset stru_104BAE8  +
push 1  +
push ebx  +
push offset stru_104BA98  +
mov [ebp+var_88] ebx +
call ds:__imp_CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_104C7C7  +
mov eax [ebp+var_88] +
lea edx [ebp+var_98] +
push edx  +
push offset dword_104C864  +
lea edx [ebp+var_80] +
push edx  +
mov [ebp+var_98] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_104C7B7  +
mov eax [ebp+var_88] +
mov ecx [eax] +
lea edx [ebp+var_8C] +
push edx  +
push ebx  +
push [ebp+var_98]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jl loc_104C7B7  +
push [ebp+var_A0]  +
push offset dword_100DC8C  +
push [ebp+var_8C]  +
call ds:__imp_SHCreateItemFromIDList  +
mov esi eax +
cmp esi ebx +
jl loc_104C7AB  +
push [ebp+var_84]  +
lea eax [edi+0C4h] +
push eax  +
call ds:__imp_IUnknown_Set  +
push [ebp+var_8C]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_98] +
cmp eax ebx +
jz loc_104C7C7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
cmp esi ebx +
jl loc_1061827  +
mov eax [ebp+var_88] +
cmp eax ebx +
jz loc_104C7E8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_84] +
cmp eax ebx +
jz loc_104C7F8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_94] +
cmp eax ebx +
jz loc_104C808  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_90] +
cmp eax ebx +
jz loc_104C818  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_104C828  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
mov esi 80004005h +
jmp loc_104C808  +
***
psubq mm4 qword ptr [ecx+7Dh] +
retf   +
***
push ebx  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push 318h  +
push edi  +
call sub_104C88F  +
jmp loc_1011802  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push [ebp+lParam]  +
mov esi ecx +
push [ebp+hDC]  +
lea ecx [esi+38h] +
push [ebp+arg_4]  +
push [ebp+hWndTo]  +
call sub_1037F08  +
cmp dword ptr [esi+4Ch] 0 +
mov edi eax +
jz loc_104C8FE  +
mov esi [esi+4Ch] +
mov eax [esi] +
lea ecx [ebp+arg_4] +
push ecx  +
push offset dword_104C908  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_104C8FE  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+hWnd] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_104C8F5  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push 318h  +
push [ebp+hWnd]  +
push [ebp+hWndTo]  +
push 0  +
call sub_1038038  +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
and [ebp+var_4] 0 +
cmp dword_10B24CC 0 +
jz loc_104C9E7  +
mov dl byte_10B24D0 +
mov ebx 10000h +
mov edi 80010000h +
cmp dl 4 +
jb loc_104CA5A  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_104C990  +
mov eax dword_10B24C0 +
mov ecx dword_10B24C4 +
and eax ebx +
and ecx edi +
cmp eax dword_10B24C0 +
jnz loc_104C990  +
cmp ecx dword_10B24C4 +
jnz loc_104C990  +
push offset dword_104CA88  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov dl byte_10B24D0 +
cmp dword_10B24CC 0 +
jz loc_104C9E7  +
cmp dl 4 +
jb loc_104CA67  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_104C9E7  +
mov edx dword_10B24C0 +
mov eax edx +
and eax ebx +
mov ebx dword_10B24C4 +
mov ecx ebx +
and ecx edi +
cmp eax edx +
jnz loc_104C9E7  +
cmp ecx ebx +
jnz loc_104C9E7  +
push offset dword_104CA78  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_104C5DD  +
mov ebx eax +
test ebx ebx +
jl loc_104CA4A  +
and [ebp+arg_0] 0 +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
mov ecx esi +
call sub_104CA9D  +
mov ebx eax +
test ebx ebx +
jl loc_104CA3D  +
mov eax [esi+40h] +
mov ecx [eax] +
push 0Ch  +
push eax  +
call dword ptr [ecx+2Ch]  +
push 8000000h  +
push [ebp+arg_0]  +
lea edi [esi+0B8h] +
mov esi [esi+40h] +
mov dword ptr [edi] 1 +
mov eax [esi] +
push esi  +
call dword ptr [eax+38h]  +
and dword ptr [edi] 0 +
mov ebx eax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_104CA4A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jnz loc_104B821  +
jmp loc_104B827  +
test dl dl +
jz loc_104C942  +
jmp loc_104C990  +
test dl dl +
jnz loc_104C9E7  +
jmp loc_104C9A2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
mov [eax] esi +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push [ebp+arg_0]  +
mov edi ecx +
xor ebx ebx +
mov [ebp+var_4] esi +
call sub_104C2EB  +
test eax eax +
jge loc_1061843  +
mov eax [edi+0ACh] +
cmp eax esi +
jz loc_104CB5D  +
cmp [eax] si +
jz loc_104CB5D  +
cmp [ebp+var_4] esi +
jnz loc_104CAF4  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call ds:__imp_SHGetIDListFromObject  +
mov ebx eax +
cmp ebx esi +
jl loc_104CB9B  +
lea eax [ebp+ppv] +
push eax  +
push dword ptr [edi+0ACh]  +
mov [ebp+ppv] esi +
call sub_104BFF5  +
mov ebx eax +
cmp ebx esi +
jl loc_104CB50  +
lea eax [ebp+pv] +
push eax  +
push [ebp+ppv]  +
mov ecx edi +
push [ebp+var_4]  +
mov [ebp+pv] esi +
call sub_104C16F  +
mov ebx eax +
cmp ebx esi +
jl loc_104CB43  +
mov eax [ebp+pv] +
mov [ebp+var_14] eax +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_4] +
mov [ebp+pv] esi +
call sub_104CBB6  +
mov eax [ebp+pv] +
push eax  +
mov [ebp+pv] esi +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_104CB5D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx esi +
jl loc_104CB9B  +
cmp [ebp+var_4] esi +
jz loc_106186D  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_100DC8C  +
push [ebp+var_4]  +
mov [ebp+arg_0] esi +
call ds:__imp_SHCreateItemFromIDList  +
mov ebx eax +
cmp ebx esi +
jl loc_104CB90  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [ebp+arg_0] esi +
mov [ecx] eax +
mov eax [ebp+arg_0] +
cmp eax esi +
jnz loc_1061862  +
mov eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] esi +
call ds:__imp_CoTaskMemFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
push eax  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
and dword ptr [ebx+8Ch] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea esi [ebx+24h] +
push esi  +
mov [ebp+var_20] edi +
call sub_1002BEE  +
lea ecx [ebx-28h] +
call sub_1036DD7  +
push edi  +
lea ecx [ebx-28h] +
call sub_104BDBA  +
xor eax eax +
cmp dword ptr [ebx+58h] 1 +
push esi  +
setz al  +
push offset dword_104CD80  +
push edi  +
mov [ebx+88h] eax +
mov eax [edi] +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jl loc_104CD11  +
cmp dword ptr [ebx+3Ch] 0 +
jz loc_104CC88  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push offset loc_1041CD4  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jl loc_104CD11  +
call ds:IsCompositionActive  +
mov ecx offset aStartmenucompo +
test eax eax +
jz loc_10618F8  +
mov eax [ebp+var_1C] +
mov edx [eax] +
push 0  +
push ecx  +
push eax  +
call dword ptr [edx+28h]  +
mov edi eax +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jl loc_104CD11  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+50h]  +
call ds:GetClientRect  +
push [ebp+Rect.bottom]  +
lea edi [ebx-28h] +
push [ebp+Rect.right]  +
mov ecx edi +
call sub_104ADA1  +
mov ecx edi +
call sub_104BD53  +
mov ecx [esi] +
mov edx [ecx] +
push eax  +
push eax  +
push ecx  +
call dword ptr [edx+60h]  +
mov edi eax +
test edi edi +
jl loc_104CD11  +
mov eax [esi] +
mov ecx [eax] +
push 4  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jl loc_104CD11  +
mov esi [esi] +
mov eax [esi] +
lea ecx [ebp+var_1C] +
push ecx  +
push offset dword_104BB44  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jl loc_104CD11  +
mov eax [ebp+var_1C] +
push 5  +
pop ecx  +
push 1  +
lea edx [ebp+var_18] +
mov esi offset loc_104CDB8 +
lea edi [ebp+var_18] +
push edx  +
movs   +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
test edi edi +
setl al  +
cmp dword ptr [ebx+58h] 1 +
mov [ebx+8Ch] eax +
jz loc_104CD51  +
mov eax [ebp+var_20] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push offset dword_104B4B0  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jl loc_104CD51  +
push [ebp+var_1C]  +
lea ecx [ebx-28h] +
call sub_104B835  +
mov edi eax +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 1  +
push dword ptr [ebx+58h]  +
lea esi [ebx-28h] +
mov ecx esi +
call sub_103CE2F  +
mov eax [ebx+60h] +
test eax eax +
jnz loc_1061902  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
xor cl dh +
and eax 1A47EFB7h +
adc [ebp-739FFD0Fh] ah +
sahf   +
jmp loc_104CD74  +
***
push dword ptr [ebp+0Ch]  +
call sub_104CDF1  +
cmp eax 80004005h +
jz loc_104D4A7  +
test eax eax +
jnz loc_1001F8D  +
jmp loc_1001F9D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx+8] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor edx edx +
mov esi ecx +
push 9  +
inc ebx  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_34] +
mov [ebp+lParam] edx +
mov [ebp+var_8] ebx +
stos   +
mov [ebp+hWnd] edx +
cmp [ebp+arg_4] edx +
jz loc_104D640  +
mov eax [ebp+arg_0] +
mov edi [ebp+uElapse] +
cmp [eax+1Ch] edx +
jnz loc_105DE94  +
movsx eax word ptr [edi+0Ch] +
mov [ebp+Points.x] eax +
movsx eax word ptr [edi+0Eh] +
mov [ebp+Points.y] eax +
lea eax [ebp+Points] +
push eax  +
push dword ptr [esi+38h]  +
call ds:ScreenToClient  +
push ebx  +
push [ebp+Points.y]  +
mov ebx ds:ChildWindowFromPointEx +
push [ebp+Points.x]  +
push dword ptr [esi+38h]  +
call ebx  +
mov ecx [esi+38h] +
mov [ebp+hWnd] eax +
cmp eax ecx +
jz loc_105DE9B  +
test eax eax +
jz loc_104D638  +
mov edi ds:MapWindowPoints +
push 1  +
lea edx [ebp+Points] +
push edx  +
push eax  +
push ecx  +
call edi  +
mov ecx [ebp+Points.y] +
mov eax [ebp+Points.x] +
push 1  +
push ecx  +
push eax  +
push [ebp+hWnd]  +
mov [ebp+var_24] eax +
mov [ebp+var_20] ecx +
call ebx  +
mov ebx eax +
push 1  +
lea eax [ebp+var_24] +
push eax  +
push ebx  +
push [ebp+hWnd]  +
call edi  +
mov edi [ebp+hWnd] +
push 107h  +
lea eax [ebp+lParam] +
push eax  +
push edi  +
mov ecx esi +
mov [ebp+var_1C] ebx +
call sub_10381F8  +
test eax eax +
jz loc_105DEA3  +
mov eax [ebp+var_28] +
cmp eax [esi+54h] +
jz loc_104D628  +
push 4  +
pop eax  +
mov edi [ebp+uElapse] +
dec eax  +
jz loc_104D661  +
dec eax  +
jz loc_105DEFB  +
dec eax  +
jz loc_104D647  +
dec eax  +
jnz loc_104CF5E  +
mov eax [edi+4] +
mov ebx 201h +
cmp eax ebx +
jz loc_104D1DC  +
cmp eax 204h +
jz loc_104D1DC  +
mov eax [ebp+hWnd] +
cmp eax [esi+60h] +
jz loc_105DEB3  +
mov [esi+60h] eax +
mov eax [ebp+var_28] +
xor edi edi +
push edi  +
mov [esi+5Ch] eax +
lea eax [ebp+uElapse] +
push eax  +
push edi  +
push 6Ah  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_105DEC4  +
push edi  +
push [ebp+uElapse]  +
push 1  +
push dword ptr [esi+38h]  +
call ds:SetTimer  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push esi  +
call sub_1015AFD  +
lea eax [esi-10h] +
push eax  +
push dword ptr [esi+8]  +
call ds:__imp_IUnknown_SetSite  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_104CF9B  +
add esi 0Ch +
push esi  +
call sub_1002BEE  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+wParam] +
push 0  +
push eax  +
push 1606h  +
push dword ptr [ecx+24h]  +
mov [ecx+38h] eax +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 8 +
jmp loc_104CFD8  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_104D0EC  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
dec eax  +
push ebx  +
push esi  +
push edi  +
jz loc_104D6A9  +
sub eax 3 +
jz loc_106263B  +
dec eax  +
jnz loc_104D02C  +
mov eax [ebp+18h] +
test byte ptr [eax] 4 +
jz loc_104D023  +
or dword ptr [eax+0Ch] 0FFFFFFFFh +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
sub eax 8 +
jz loc_106261F  +
sub eax 1Eh +
jz loc_104D56E  +
xor eax eax +
inc eax  +
jmp loc_104D025  +
***
mov ecx [esi+14h] +
test ecx ecx +
jz loc_104D07D  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+0Ch]  +
call sub_104CE0B  +
jmp loc_104D098  +
xor eax eax +
inc eax  +
jmp loc_104D098  +
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 0Ch +
push esi  +
mov esi [ebp+8] +
jz loc_105DF1E  +
cmp dword ptr [ebp+10h] 34h +
jz loc_104D043  +
cmp dword ptr [esi+10h] 0 +
jz loc_104D05A  +
push dword ptr [ebp+18h]  +
mov esi [esi+10h] +
push dword ptr [ebp+14h]  +
mov eax [esi] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+0Ch]  +
pop esi  +
pop ebp  +
retn 14h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_104D0AE  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_104D0CC  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
push dword ptr [ebp+14h]  +
movzx eax word ptr [ebp+10h] +
push dword ptr [ebp+10h]  +
push eax  +
call sub_104D140  +
jmp loc_10112AF  +
***
cmp edi esi +
jz loc_101125E  +
jmp loc_10112A1  +
***
push dword ptr [ebp+10h]  +
call sub_1095C99  +
jmp loc_10112AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub esp 1Ch +
push ebx  +
push esi  +
shr eax 10h +
xor esi esi +
sub eax esi +
mov ebx ecx +
jz loc_106276C  +
dec eax  +
dec eax  +
jz loc_104DFAC  +
sub eax 5 +
jnz loc_104D182  +
cmp [ebp+arg_0] 62h +
jnz loc_104D182  +
call sub_104D18F  +
cmp [ebx+34h] esi +
jz loc_104D182  +
cmp [ebx+38h] esi +
jz loc_1062759  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 1  +
push dword ptr [esi+20h]  +
call ds:KillTimer  +
cmp dword ptr [esi+40h] 0 +
jnz loc_1062613  +
pop esi  +
retn   +
***
push esi  +
lea esi [ecx+0A8h] +
inc dword ptr [esi]  +
mov eax [eax+4] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+24h]  +
dec dword ptr [esi]  +
pop esi  +
jmp locret_104327E  +
***
mov ecx esi +
call sub_1043273  +
mov eax [ebp+hWnd] +
cmp eax [esi+58h] +
jz loc_105DECC  +
and [ebp+var_8] 0 +
jmp loc_104CF5E  +
***
push 1  +
push 0FFFFFFFFh  +
push 100Ch  +
jmp loc_103E20E  +
***
mov eax [ebx+1B0h] +
inc eax  +
push eax  +
push 0FFFFFFFCh  +
push esi  +
push 8005h  +
call ds:NotifyWinEvent  +
jmp loc_105445A  +
push esi  +
call sub_108F462  +
jmp loc_10122E3  +
push esi  +
call sub_108F2F0  +
jmp loc_10122E3  +
push esi  +
call sub_108F3A0  +
jmp loc_10122E3  +
push esi  +
call sub_108F2AF  +
jmp loc_10122E3  +
xor eax eax +
inc eax  +
jmp loc_10122E3  +
call sub_1090F75  +
jmp loc_10122E3  +
push esi  +
call sub_108FC5A  +
jmp loc_10122E3  +
***
xor esi esi +
push esi  +
mov ecx ebx +
call sub_104CFA7  +
cmp [ebx+34h] esi +
jz loc_1011394  +
push esi  +
push esi  +
push dword ptr [ebx+24h]  +
mov [ebx+34h] esi +
call ds:InvalidateRect  +
jmp loc_1011394  +
***
call sub_103E1B8  +
mov ebx eax +
test ebx ebx +
jl loc_104D305  +
push ebx  +
mov ecx esi +
call sub_1012341  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_104D2F5  +
test dword ptr [edi+20h] 400h +
jnz loc_103D8BD  +
push dword ptr [edi+18h]  +
mov ecx esi +
push dword ptr [edi+14h]  +
push ebx  +
call sub_103DC26  +
mov ecx esi +
test eax eax +
jnz loc_103D8EA  +
push dword ptr [edi+18h]  +
push dword ptr [edi+14h]  +
push ebx  +
call sub_103DCBA  +
mov ecx esi +
test eax eax +
jnz loc_103D8F7  +
push 0  +
push ebx  +
call sub_103E483  +
mov ecx [ebp+arg_0] +
call sub_100F319  +
xor eax eax +
inc eax  +
jmp loc_103DAE6  +
mov [ebp+pt.x] eax +
jmp loc_103DAC3  +
xor eax eax +
jmp loc_103DAE6  +
***
mov eax [esi+38h] +
mov [ebp+pgui.hwndMenuOwner] eax +
mov eax ecx +
mov [ebp+pgui.hwndMoveSize] eax +
mov eax [ebp+wParam] +
mov [ebp+pgui.hwndCaret] eax +
mov eax [ebp+hWnd] +
mov [ebp+pgui.rcCaret.left] eax +
xor eax eax +
lea edi [ebp+pgui.rcCaret.top] +
stos   +
stos   +
stos   +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+pgui.hwndMenuOwner] +
push eax  +
mov ecx esi +
call sub_104D35D  +
test eax eax +
jz loc_105E923  +
mov eax [ebp+pgui.hwndCaret] +
mov ecx [ebp+Msg] +
mov [ebp+wParam] eax +
mov eax [ebp+pgui.rcCaret.left] +
mov [ebp+hWnd] eax +
mov edi eax +
jmp loc_100DF0D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+4] +
mov esi ecx +
xor ebx ebx +
cmp eax [esi+8Ch] +
jz loc_105D988  +
push [ebp+arg_4]  +
mov ecx [esi+6Ch] +
push edi  +
call sub_104D39E  +
test ebx ebx +
jnz loc_105D9DB  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ecx+8] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_104D3E1  +
test byte ptr [ebp+8] 1 +
jz loc_104D3D5  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+1Ch] +
push eax  +
mov dword ptr [esi] offset off_1002A24 +
mov dword ptr [esi+8] offset off_1002AA0 +
mov dword ptr [esi+0Ch] offset off_1006560 +
mov dword ptr [esi+10h] offset off_1014334 +
call sub_1002BEE  +
push 0  +
lea edi [esi+18h] +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
push edi  +
call sub_1002BEE  +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi+10h] offset off_1015AE0 +
call sub_1002BEE  +
pop edi  +
mov dword ptr [esi] offset off_1002798 +
pop esi  +
retn   +
***
and dword ptr [eax] 0 +
dec dword ptr [ecx]  +
jnz loc_1015B2F  +
push 1  +
call sub_104D453  +
jmp loc_1015B2F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_104D479  +
test [ebp+arg_0] 1 +
jz loc_104D46D  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
push 0  +
lea edi [esi+4] +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
push edi  +
call sub_1002BEE  +
lea eax [esi+8] +
push eax  +
call sub_1002BEE  +
add esi 0Ch +
push esi  +
call sub_1002BEE  +
pop edi  +
pop esi  +
retn   +
***
lea ecx [esi-0Ch] +
call sub_104D4C6  +
xor eax eax +
inc eax  +
jmp loc_104CDDF  +
***
mov eax 80004005h +
jmp loc_1001F9D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
lea eax [esi+6Ch] +
push eax  +
call sub_1015B1D  +
and dword ptr [esi+58h] 0 +
and dword ptr [esi+60h] 0 +
push 1  +
push dword ptr [esi+38h]  +
call ds:KillTimer  +
mov esi [esi+38h] +
and [ebp+var_8] 0 +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push 0  +
push 4Eh  +
push esi  +
mov [ebp+var_C] esi +
mov [ebp+var_4] 0D6h +
call ds:SHLWAPI_178  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_104D53D  +
test byte ptr [ebp+8] 1 +
jz loc_104D531  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+0Ch] +
push eax  +
mov dword ptr [esi] offset off_1002A04 +
mov dword ptr [esi+8] offset off_1002A80 +
call sub_1002BEE  +
mov eax [esi+10h] +
test eax eax +
jz loc_104D566  +
push eax  +
call ds:DestroyMenu  +
mov dword ptr [esi] offset off_1002798 +
pop esi  +
retn   +
***
mov esi [ebp+8] +
xor ebx ebx +
cmp [esi+0Ch] ebx +
jnz loc_104D58A  +
push ebx  +
push 1  +
push 15B7h  +
push offset dword_104D1B0  +
call sub_104D5A4  +
mov [esi+0Ch] ebx +
jmp loc_104D023  +
***
cmp al bl +
jz loc_104D71F  +
jmp loc_104D76D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 104h  +
lea eax [ebp+var_108] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_108] eax +
xor eax eax +
add esp 0Ch +
inc eax  +
push 2  +
mov [ebp+var_10C] eax +
mov [ebp+var_88] eax +
lea eax [ebp+var_10C] +
push eax  +
push [ebp+arg_4]  +
mov [ebp+var_84] ecx +
push esi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
cmp edi [esi+58h] +
jnz loc_104CEE9  +
push 3  +
jmp loc_104CEEB  +
xor eax eax +
inc eax  +
jmp loc_104CEEF  +
xor eax eax +
jmp loc_104CEEC  +
cmp dword ptr [edi+4] 204h +
jz loc_105DEEB  +
cmp dword ptr [edi+4] 201h +
jz loc_104D1EF  +
mov eax [esi+54h] +
and dword ptr [esi+60h] 0 +
and dword ptr [esi+5Ch] 0 +
mov [ebp+var_28] eax +
push 109h  +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+58h]  +
mov ecx esi +
call sub_10381F8  +
push 1  +
push dword ptr [esi+38h]  +
call ds:KillTimer  +
jmp loc_104CF5E  +
***
mov [ebp+var_19C] 2 +
jmp loc_1038A63  +
push 3  +
pop eax  +
jmp loc_1038B17  +
***
mov eax [ebp+0Ch] +
xor ebx ebx +
cmp [eax+1Ch] ebx +
jz loc_104D03E  +
mov eax [eax+1Ch] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push offset stru_104D618  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_104D03E  +
mov edi [ebp+8] +
cmp [edi+8] ebx +
jnz loc_104D6EE  +
call ds:CreatePopupMenu  +
mov [edi+8] eax +
cmp eax ebx +
jz loc_104D6EE  +
mov ecx [edi+4] +
push eax  +
call sub_104D79D  +
mov edx [edi+4] +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push ebx  +
push dword ptr [edx+20h]  +
push dword ptr [edi+8]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword_10B24CC ebx +
jz loc_104D76D  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104D592  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_104D76D  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx esi +
cmp ecx eax +
jnz loc_104D76D  +
cmp edx ebx +
jnz loc_104D76D  +
push offset dword_104D788  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [edi+8] +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
jmp loc_104D025  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1D0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+54h] 0 +
mov [ebp+hMenu] eax +
jz loc_104D91E  +
mov eax [ebx+54h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebx+54h] +
mov ecx [eax] +
lea edx [ebp+var_19C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_104D91E  +
mov eax [ebp+var_19C] +
mov ecx [eax] +
push 0  +
lea edx [ebp+var_198] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_104D907  +
push esi  +
push edi  +
test [ebp+var_198] 400000h +
jnz loc_104D92D  +
mov esi [ebp+var_198] +
mov eax [ebx+44h] +
and esi 0C0000h +
neg esi  +
sbb esi esi +
and [ebp+var_198] 0FFF3FFFFh +
neg esi  +
cmp [ebp+var_198] eax +
jz loc_104D8E6  +
and eax 0FFFDFFFFh +
cmp [ebp+var_198] eax +
jz loc_104D8E6  +
mov eax [ebx+54h] +
mov ecx [eax] +
push 0C8h  +
lea edx [ebp+var_194] +
push edx  +
push 1  +
push [ebp+var_198]  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_104D8E6  +
push 2Ch  +
lea eax [ebp+var_1D0.fMask] +
push 0  +
push eax  +
mov [ebp+var_1D0.cbSize] 30h +
call memset  +
and [ebp+var_1D0.fType] 0 +
mov eax [ebp+var_198] +
add esp 0Ch +
neg esi  +
sbb esi esi +
mov [ebp+var_1D0.wID] eax +
and esi 3 +
lea eax [ebp+var_194] +
mov [ebp+var_1D0.fMask] 13h +
mov [ebp+var_1D0.fState] esi +
mov [ebp+var_1D0.dwTypeData] eax +
lea eax [ebp+var_1D0] +
push eax  +
push 1  +
push 0FFFFh  +
push [ebp+hMenu]  +
call ds:InsertMenuItemW  +
mov eax [ebp+var_19C] +
mov ecx [eax] +
push 0  +
lea edx [ebp+var_198] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_104D80C  +
pop edi  +
pop esi  +
push [ebp+hMenu]  +
call sub_1043174  +
mov eax [ebp+var_19C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1D0.fState] +
mov [ebp+var_1D0.cbSize] 30h +
mov [ebp+var_1D0.fMask] 10h +
mov [ebp+var_1D0.fType] 800h +
stos   +
jmp loc_104D8CC  +
***
and eax 0FFFFFEFFh +
mov [esi+20h] eax +
xor eax eax +
inc eax  +
jmp loc_104D9DF  +
xor eax eax +
jmp loc_104D9DF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+20h] +
push edi  +
mov edi ecx +
mov ecx eax +
and ecx 0Fh +
add ecx 0FFFFFFFEh +
cmp ecx 9 +
ja loc_104D96A  +
jmp ds:off_104DB0E[ecx*4]  +
push dword ptr [esi+18h]  +
mov ecx edi +
push dword ptr [esi+14h]  +
push dword ptr [esi+1Ch]  +
call sub_104DB3B  +
mov ecx [esi+0Ch] +
mov [esi+10h] eax +
test ecx ecx +
jz loc_104D9D7  +
sub eax 62h +
jz loc_104D9F8  +
dec eax  +
jnz loc_104D9D7  +
cmp dword ptr [ecx+4] 201h +
jnz loc_104D9D7  +
push dword ptr [edi+24h]  +
push 20063h  +
push 111h  +
push dword ptr [edi+20h]  +
call ds:PostMessageW  +
xor eax eax +
cmp [esi+10h] eax +
setnl al  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx edi +
mov dword ptr [esi+10h] 62h +
call sub_1095CCC  +
jmp loc_104D965  +
mov eax [ecx+4] +
sub eax 200h +
jz loc_104DA0A  +
dec eax  +
jnz loc_104D9D7  +
push eax  +
push 1  +
jmp loc_104DA16  +
xor eax eax +
cmp dword ptr [ecx+8] 1 +
push 0  +
setz al  +
push eax  +
push 0F3h  +
push dword ptr [edi+24h]  +
call ds:SendMessageW  +
jmp loc_104D9D7  +
mov ecx [esi+0Ch] +
mov ecx [ecx+8] +
cmp ecx 25h +
jb loc_104D96A  +
cmp ecx 26h +
jbe loc_104DA67  +
cmp ecx 27h +
jz loc_104DA4A  +
cmp ecx 28h +
jnz loc_104D96A  +
jmp loc_104DA67  +
or eax 1000h +
push 1  +
mov ecx edi +
mov dword ptr [esi+10h] 63h +
mov [esi+20h] eax +
call sub_104DFC6  +
jmp loc_104D965  +
and dword ptr [edi+34h] 0 +
jmp loc_104D96A  +
test eax 400h +
jnz loc_104DA90  +
push dword ptr [esi+18h]  +
mov ecx edi +
push dword ptr [esi+14h]  +
push dword ptr [esi+1Ch]  +
call sub_104DB3B  +
cmp eax 62h +
jnz loc_104D96A  +
push dword ptr [edi+24h]  +
push 62h  +
push 111h  +
push dword ptr [edi+20h]  +
call ds:PostMessageW  +
jmp loc_104D965  +
push dword ptr [esi+18h]  +
mov ecx edi +
push dword ptr [esi+14h]  +
push dword ptr [esi+1Ch]  +
call sub_104DB3B  +
mov [esi+10h] eax +
test eax eax +
jl loc_104D96A  +
or dword ptr [esi+20h] 800h +
cmp eax 63h +
jnz loc_104D965  +
push 0  +
push 0  +
push 0F2h  +
push dword ptr [edi+24h]  +
call ds:SendMessageW  +
test al 4 +
jnz loc_104D965  +
push dword ptr [edi+24h]  +
push 20063h  +
jmp loc_104DA95  +
push 0  +
push 1  +
push 0F3h  +
push dword ptr [edi+24h]  +
call ds:SendMessageW  +
jmp loc_104D965  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 20h +
push edi  +
or edi 0FFFFFFFFh +
cmp eax [ecx+24h] +
jnz loc_104DB7B  +
push esi  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_10146FB  +
push [ebp+pt.y]  +
mov esi ds:PtInRect +
push [ebp+pt.x]  +
lea eax [ebp+rc] +
push eax  +
call esi  +
test eax eax +
jz loc_106237F  +
push 63h  +
pop edi  +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push 20h  +
mov esi ecx +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104DBE8  +
push esi  +
mov ecx eax +
call sub_104DBF1  +
mov esi eax +
test esi esi +
jz loc_104DBE3  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [esi+18h] +
push ecx  +
push edi  +
call dword ptr [eax+10h]  +
test eax eax +
jl loc_104DBDC  +
push [ebp+arg_0]  +
mov eax [edi] +
push [ebp+var_4]  +
lea ecx [esi+8] +
push [ebp+var_8]  +
push ecx  +
push edi  +
call dword ptr [eax+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
leave   +
retn 4  +
xor esi esi +
jmp loc_104DBA7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi+4] 1 +
and dword ptr [esi+14h] 0 +
mov dword ptr [esi+10h] offset off_1015AE0 +
mov dword ptr [esi] offset off_1002A24 +
mov dword ptr [esi+8] offset off_1002AA0 +
mov dword ptr [esi+0Ch] offset off_1006560 +
mov dword ptr [esi+10h] offset off_1014334 +
mov [esi+1Ch] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
and dword ptr [edi] 0 +
push 10h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104DC89  +
mov dword ptr [eax] 1 +
mov esi eax +
test esi esi +
jz loc_104DC8D  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+ppv]  +
push [ebp+arg_0]  +
call sub_104DC99  +
mov ebx eax +
test ebx ebx +
jl loc_105E35A  +
mov [edi] esi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
xor esi esi +
jmp loc_104DC60  +
mov ebx 8007000Eh +
jmp loc_104DC80  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:__imp_CoCreateInstance +
push esi  +
push edi  +
lea esi [ecx+4] +
push esi  +
push offset stru_1003500  +
push 1  +
push 0  +
push offset stru_104DDF0  +
mov [ebp+var_4] ecx +
call ebx  +
mov edi eax +
test edi edi +
jl loc_104DDD4  +
push [ebp+ppv]  +
push dword ptr [esi]  +
call ds:__imp_IUnknown_SetSite  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100E478  +
push 1  +
push 0  +
push offset stru_104DDE0  +
call ebx  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jl loc_104DDD4  +
mov esi [esi] +
push [ebp+ppv]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov esi [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
jl loc_104DD64  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push offset stru_1035344  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_104DD64  +
mov eax [ebp+ppv] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_104DD5B  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_104DD5B  +
mov edx [ebp+var_4] +
mov eax [ebp+ppv] +
mov ecx [eax] +
add edx 8 +
push edx  +
push offset dword_1003440  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jl loc_104DDD4  +
mov eax [esi] +
lea ecx [ebp+ppv] +
push ecx  +
push offset dword_104DE14  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_104DDBB  +
call ds:IsAppThemed  +
mov edi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
mov edx edi +
neg edx  +
sbb edx edx +
and edx offset aStartmenu +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
xor edx edx +
cmp edi ebx +
setnz dl  +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi] +
push ebx  +
push [ebp+arg_8]  +
push ebx  +
push esi  +
call dword ptr [eax+1Ch]  +
mov eax [ebp+var_4] +
mov [eax+0Ch] esi +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push edi  +
mov ecx esi +
call sub_104DE87  +
jmp loc_10146A9  +
jz sub_10346DC  +
jmp loc_100DF55  +
***
mov ecx esi +
call sub_108974A  +
jmp loc_1020ECD  +
***
cmp eax 1 +
jnz loc_10146A9  +
jmp loc_100DF67  +
push edi  +
mov ecx esi +
call sub_108A204  +
jmp loc_10146A9  +
***
push edi  +
mov ecx esi +
call sub_1089C07  +
jmp loc_100DF67  +
***
mov ecx esi +
call sub_1089B31  +
jmp loc_10146A9  +
push edx  +
jmp loc_105105B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
mov [edi+58h] eax +
mov eax [esi+20h] +
and dword ptr [edi+60h] 0 +
and dword ptr [edi+5Ch] 0 +
mov [edi+54h] eax +
mov eax [esi+24h] +
and eax 0E0000000h +
mov [ebp+arg_0] eax +
jnz loc_104DED2  +
push 0FFFFFFECh  +
push dword ptr [edi+38h]  +
call ds:GetWindowLongW  +
shl eax 7 +
not eax  +
and eax 20000000h +
or eax 40000000h +
mov [ebp+arg_0] eax +
mov ecx edi +
call sub_103D227  +
lea ebx [edi+6Ch] +
mov eax [ebx] +
test eax eax +
jnz loc_105E7E3  +
push ebx  +
call sub_1015B1D  +
mov eax [edi+58h] +
and [ebp+var_4] 0 +
cmp eax [edi+1E0h] +
jz loc_105E7F3  +
push dword ptr [esi+0Ch]  +
mov ecx edi +
call sub_104DB87  +
push ebx  +
push dword ptr [edi+38h]  +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_104DC3E  +
xor ebx ebx +
cmp eax ebx +
jl loc_104DF83  +
mov eax [esi+24h] +
or eax [ebp+arg_0] +
mov ecx [edi+6Ch] +
push eax  +
add esi 10h +
push esi  +
call sub_104DF91  +
mov [ebp+arg_0] eax +
cmp [ebp+var_4] ebx +
jnz loc_105E847  +
cmp dword_10B24CC ebx +
jz loc_104DF6E  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104DF7D  +
mov ecx dword_10B24B8 +
mov edx dword_10B24BC +
mov eax 10000h +
mov esi 80000000h +
and ecx eax +
and edx esi +
or ecx edx +
jnz loc_105E8B1  +
cmp [ebp+arg_0] 0 +
jl loc_104DF83  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
test al al +
jz loc_104DF4C  +
jmp loc_104DF6E  +
mov ecx edi +
call sub_104D4C6  +
jmp loc_104DF74  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ecx+4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+20h]  +
pop ebp  +
retn 8  +
***
cmp [ebp+arg_0] 63h +
jnz loc_104D182  +
push esi  +
call sub_104DFC6  +
jmp loc_104D182  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx ecx +
cmp dword_10B24CC edi +
jz loc_104E03B  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104E179  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov esi 10000h +
mov edx 80010000h +
and eax esi +
and ecx edx +
or eax ecx +
jz loc_104E03B  +
mov edi dword_10B24C0 +
mov eax edi +
and eax esi +
mov esi dword_10B24C4 +
mov ecx esi +
and ecx edx +
cmp eax edi +
jnz loc_104E039  +
cmp ecx esi +
jnz loc_104E039  +
push offset dword_104E1A0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor edi edi +
cmp [ebx+50h] edi +
jz loc_104E0B3  +
cmp dword_10B24CC 0 +
mov edi 400000h +
mov esi 80000000h +
jz loc_104E077  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104E186  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jnz loc_10626D0  +
mov eax [ebx+58h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp dword_10B24CC 0 +
jz loc_104E0AD  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104E193  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jnz loc_1062711  +
and dword ptr [ebx+50h] 0 +
xor edi edi +
cmp [ebx+38h] edi +
jnz loc_104E172  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104D618  +
push 1  +
push edi  +
push offset stru_1014024  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_104E172  +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_8] edi +
call sub_104E1B5  +
test eax eax +
jl loc_104E169  +
mov eax [ebp+ppv] +
mov esi [ebp+var_8] +
mov ecx [eax] +
push 10000047h  +
push 0FFFFFFFFh  +
push edi  +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_104E163  +
mov ecx ebx +
call sub_104D18F  +
mov eax [ebx+28h] +
cmp eax edi +
jz loc_104E121  +
push edi  +
push edi  +
push 41Ch  +
push eax  +
call ds:SendMessageW  +
push 1  +
mov ecx ebx +
call sub_104CFA7  +
xor eax eax +
cmp [ebp+arg_0] edi +
jnz loc_106274F  +
mov [ebp+var_C] eax +
mov eax [ebp+ppv] +
mov [ebp+var_24] eax +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+24h]  +
mov [ebp+var_10] 63h +
call ds:GetWindowRect  +
lea eax [ebp+var_30] +
push eax  +
push 0D8h  +
push dword ptr [ebx+20h]  +
call sub_103C26A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
test al al +
jz loc_104DFEA  +
jmp loc_104E03B  +
test al al +
jz loc_104E060  +
jmp loc_104E077  +
test al al +
jnz loc_104E0AD  +
jmp loc_104E096  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 18h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104E1F0  +
push [ebp+arg_4]  +
mov ecx eax +
call sub_104E1F9  +
lea ecx [eax+8] +
neg eax  +
sbb eax eax +
and eax ecx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_104E1D0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi+4] 1 +
mov dword ptr [esi] offset off_1002A04 +
mov dword ptr [esi+8] offset off_1002A80 +
mov [esi+0Ch] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push eax  +
mov ecx ebx +
call sub_104E23A  +
jmp loc_1011396  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
mov ebx ecx +
call sub_104D973  +
xor ecx ecx +
mov [ebp+arg_0] eax +
cmp eax ecx +
jz loc_1062828  +
mov eax [esi+20h] +
test eax 900h +
jz loc_104E28B  +
or eax 80000h +
mov [esi+20h] eax +
mov eax [ebx+24h] +
mov [esi+24h] eax +
cmp [ebx+34h] ecx +
jnz loc_104E28B  +
push ecx  +
push ecx  +
push dword ptr [ebx+24h]  +
mov dword ptr [ebx+34h] 1 +
call ds:InvalidateRect  +
mov eax [ebp+arg_0] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+1CCh] 0 +
mov eax 80004005h +
jz loc_104E2C8  +
cmp [ebp+arg_0] 0 +
jnz loc_104E80A  +
mov esi [esi+1CCh] +
mov eax [esi] +
push esi  +
call dword ptr [eax+18h]  +
pop esi  +
leave   +
retn 4  +
***
xor eax eax +
cmp edi 7 +
setz al  +
push 1  +
xor edi edi +
push edi  +
push dword ptr [esi+4]  +
mov [esi+1BCh] eax +
call ds:InvalidateRect  +
cmp [esi+1BCh] edi +
jz loc_104E309  +
push edi  +
call ds:GetDoubleClickTime  +
push eax  +
push 1  +
push dword ptr [ebp+8]  +
call ds:SetTimer  +
jmp loc_1035812  +
***
push 1  +
push dword ptr [ebp+8]  +
call ds:KillTimer  +
push edi  +
jmp loc_103580B  +
***
cmp eax 1 +
jnz loc_10359D5  +
push edi  +
push edi  +
push 129h  +
push dword ptr [ebx+4]  +
call ds:SendMessageW  +
test al 1 +
jnz loc_10359D5  +
jmp loc_1058B85  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+hMenu] +
movsx eax di +
mov [ebp+Point.x] eax +
mov eax edi +
shr eax 10h +
mov esi ecx +
cwde   +
push 1  +
push dword ptr [esi+4]  +
mov [ebp+Point.y] eax +
call ds:SwitchToThisWindow  +
push dword ptr [esi+4]  +
call ds:SetForegroundWindow  +
lea ecx [esi+8] +
mov eax [ecx] +
xor ebx ebx +
push ebx  +
mov [ebp+var_4] ecx +
call dword ptr [eax]  +
cmp edi 0FFFFFFFFh +
jz loc_10588BC  +
push [ebp+Point.y]  +
push [ebp+Point.x]  +
call ds:WindowFromPoint  +
push eax  +
push dword ptr [esi+0CA8h]  +
call sub_100E838  +
test eax eax +
jnz sub_10588A7  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_104ED13  +
mov [ebp+hMenu] eax +
cmp eax ebx +
jz loc_104E403  +
push 190h  +
push ebx  +
push ebx  +
push eax  +
push dword ptr [esi+3Ch]  +
call sub_104EB6F  +
push ebx  +
push dword ptr [esi+4]  +
mov eax edi +
shr eax 10h +
push ebx  +
cwde   +
push eax  +
movsx eax di +
push eax  +
push 102h  +
push [ebp+hMenu]  +
call ds:TrackPopupMenu  +
push [ebp+hMenu]  +
mov edi eax +
call ds:DestroyMenu  +
push [ebp+arg_4]  +
mov ecx esi +
push edi  +
call sub_104E48B  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
test byte ptr [ecx+40h] 1 +
jnz loc_1055F6D  +
retn   +
***
sub esi 198h +
jnz loc_10581B0  +
push 1  +
xor eax eax +
push eax  +
push eax  +
push offset aTimedate_cpl  +
push eax  +
push dword ptr [ebx+4]  +
call ds:ShellExecuteW  +
jmp loc_1037081  +
call sub_103FF1D  +
jmp loc_1037081  +
test eax eax +
jz loc_103B0B5  +
jmp loc_1037081  +
call sub_107A68E  +
jmp loc_1037081  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+ppv] +
push esi  +
mov esi ecx +
test eax eax +
jz loc_104E4AE  +
cmp eax 190h +
jl loc_1058892  +
push [ebp+arg_4]  +
push eax  +
call sub_103700A  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpRect]  +
push dword ptr [ecx+4]  +
call ds:GetWindowRect  +
mov eax dword_10B2138 +
sub eax 0 +
jz loc_104E4EF  +
dec eax  +
jz loc_1058CA8  +
dec eax  +
mov eax [ebp+arg_4] +
jz loc_104E4E7  +
and dword ptr [eax] 0 +
pop ebp  +
retn 8  +
mov dword ptr [eax] 1 +
jmp loc_104E4E3  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 2 +
jmp loc_104E4E3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
xor eax eax +
test byte ptr [esi+40h] 2 +
jnz loc_104E548  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+0DE0h]  +
call ds:GetWindowRect  +
cmp dword ptr [esi+0D28h] 0 +
jnz loc_10562E2  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+1Ch] +
push 1  +
push dword ptr [eax+4]  +
call ds:GetAncestor  +
push dword ptr [ebp+0Ch]  +
push offset stru_1002CF4  +
push 0FFFFFFFCh  +
push eax  +
call AccessibleObjectFromWindow  +
pop ebp  +
retn 8  +
***
or eax 0FFFFFFFFh +
jmp loc_1035770  +
***
or eax 0FFFFFFFFh +
jmp loc_1002328  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
sub esp 10h +
mov edi esp +
push [ebp+arg_10]  +
lea esi [ebp+arg_14] +
push [ebp+arg_C]  +
movs   +
push [ebp+arg_8]  +
movs   +
push [ebp+arg_4]  +
movs   +
push eax  +
movs   +
call dword ptr [ecx+58h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 24h  +
***
mov ecx ebx +
call sub_104E4FF  +
test eax eax +
jz loc_1009E77  +
cmp byte ptr [ebx+0DE8h] 0 +
jnz loc_10021F8  +
mov ecx [ebp+hdc] +
call sub_10372F5  +
test eax eax +
jnz loc_10021F8  +
push 2  +
mov ecx ebx +
call sub_104E62D  +
mov eax [ebx+4] +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 13h +
mov [ebp+EventTrack.hwndTrack] eax +
call ds:GetDoubleClickTime  +
mov [ebp+EventTrack.dwHoverTime] eax +
lea eax [ebp+EventTrack] +
push eax  +
call ds:TrackMouseEvent  +
mov byte ptr [ebx+0DE8h] 1 +
jmp loc_1010D8C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+wParam]  +
push 468h  +
push dword ptr [ecx+0DE0h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+1Ch]  +
push 354h  +
push dword ptr [ebp+8]  +
call sub_104E66F  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push hInstance  +
call sub_104E68E  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+hModule]  +
call sub_103C0AE  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_104E6EF  +
test eax eax +
jl loc_104E6E3  +
cmp word ptr [ebx] 3 +
jnz loc_104E6E3  +
cmp dword ptr [ebx+8] 2Bh +
jnz loc_104E6E3  +
mov dword ptr [ebx+8] 3Dh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+34h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_0] +
push esi  +
call sub_104E773  +
mov edi eax +
xor edx edx +
cmp edi edx +
jl loc_104E765  +
cmp word ptr [ebx] 3 +
jnz loc_104E765  +
mov eax [esi+1Ch] +
mov ecx [eax+1C0h] +
dec ecx  +
jz loc_104E8E6  +
dec ecx  +
jnz loc_104E765  +
mov dword ptr [ebx+8] 80h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+38h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
cmp dword ptr [ebp+14h] 0FFFFFFFCh +
jnz loc_1035812  +
and dword ptr [ebp+14h] 0 +
lea eax [ebp+14h] +
push eax  +
push ebx  +
call sub_104E7C8  +
test eax eax +
jz loc_1035812  +
mov eax [ebp+14h] +
jmp loc_1035770  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+1C4h] +
cmp dword ptr [edi] 0 +
jz loc_104E9DF  +
mov esi [esi+1C8h] +
test esi esi +
jz loc_104EA25  +
push esi  +
push [ebp+wParam]  +
push offset stru_103639C  +
call LresultFromObject  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call sub_104E4B8  +
mov esi [esi+1CCh] +
mov eax [esi] +
lea ecx [ebp+Rect] +
push ecx  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+14h]  +
jmp loc_104E2C8  +
***
xor eax eax +
test ebx ebx +
setnz al  +
push eax  +
jmp loc_103580D  +
***
push esi  +
push 1  +
push 467h  +
push dword ptr [ebx+0DE0h]  +
call ds:SendMessageW  +
jmp loc_1010D8C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
lea eax [ebp+Rect] +
mov ebx ecx +
push eax  +
push dword ptr [ebx+0DE0h]  +
call ds:GetWindowRect  +
mov eax [ebp+arg_0] +
cmp eax 0FFFFFFFFh +
jz loc_104E8E1  +
cmp dword ptr [ebx+0D28h] 0 +
push edi  +
lea esi [ebp+Rect] +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
jnz loc_1057154  +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
mov esi eax +
test esi esi +
jz loc_104E8D9  +
lea ecx [ebx+0AF8h] +
call sub_1034C6B  +
push 3  +
mov ecx ebx +
call sub_104E62D  +
push 0  +
push 1  +
push 466h  +
push dword ptr [ebx+0DE0h]  +
call ds:SendMessageW  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
xor esi esi +
inc esi  +
jmp loc_104E8AC  +
***
cmp [eax+1BCh] edx +
jz loc_104E765  +
jmp loc_1058B50  +
***
mov eax offset __imp_CreateStdAccessibleProxyW +
jmp loc_10531E4  +
***
mov eax offset __imp_AccessibleObjectFromWindow +
jmp loc_10531E4  +
***
mov ecx ebx +
call sub_10409D2  +
test eax eax +
jnz loc_1009E54  +
push [ebp+lParam]  +
mov ecx ebx +
call sub_104E85A  +
test eax eax +
jnz loc_1002264  +
push [ebp+lParam]  +
mov ecx ebx +
push edi  +
call sub_104E961  +
test eax eax +
jnz loc_1002264  +
mov ecx ebx +
call sub_104E4FF  +
test eax eax +
jz loc_10021F8  +
push 2  +
mov ecx ebx +
call sub_104E62D  +
jmp loc_10021F8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hWnd] +
push eax  +
mov esi ecx +
call sub_104E98D  +
test eax eax +
jnz loc_10561B8  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 10h +
push ebx  +
movsx ebx word ptr [eax] +
push esi  +
push edi  +
movsx edi word ptr [eax+2] +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push 0  +
push dword ptr [esi+4]  +
call ds:MapWindowPoints  +
push edi  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_1056148  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
push edi  +
push offset stru_1003410  +
push 0FFFFFFFCh  +
push offset aButton  +
push dword ptr [esi+4]  +
call CreateStdAccessibleProxyW  +
test eax eax +
jl loc_104EA25  +
push 20h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_104EA21  +
push 0  +
push dword ptr [edi]  +
mov ecx eax +
push esi  +
call sub_104EA31  +
cmp dword ptr [edi] 0 +
mov [esi+1C8h] eax +
jnz loc_104E7E0  +
jmp loc_104EA25  +
xor eax eax +
jmp loc_104EA10  +
xor eax eax +
jmp loc_104E804  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
call sub_1052C83  +
mov eax [ebp+arg_0] +
mov [esi+1Ch] eax +
mov dword ptr [esi] offset off_104EA68 +
mov dword ptr [esi+4] offset off_1052A54 +
mov dword ptr [esi+8] offset off_1034D4C +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
xor edi edi +
cmp ebx edi +
setz al  +
push eax  +
call sub_104E299  +
xor eax eax +
cmp ebx edi +
setnz al  +
mov ecx esi +
push eax  +
call sub_104EB04  +
jmp loc_1035812  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+1CCh] 0 +
mov eax 80004005h +
jz loc_104EB47  +
cmp [ebp+arg_0] 0 +
jz loc_1058CB6  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call sub_104E4B8  +
mov esi [esi+1CCh] +
mov eax [esi] +
lea ecx [ebp+Rect] +
push ecx  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+0Ch]  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
push [ebp+arg_0]  +
mov ebx 80004005h +
call sub_100E551  +
mov edi eax +
test edi edi +
jz loc_104EBBD  +
push esi  +
mov ecx edi +
call sub_1023D3E  +
mov esi eax +
test esi esi +
jz loc_104EBB6  +
mov eax [esi] +
push 20000h  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+0Ch]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ecx  +
push offset sub_104ECF2  +
call ds:EnumWindows  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
cmp [ebx+0B54h] esi +
jnz loc_1002264  +
lea edx [ebp+var_58] +
push edx  +
push eax  +
push ecx  +
push edi  +
push [ebp+hWndParent]  +
push dword ptr [ebx+3Ch]  +
call sub_100E582  +
jmp loc_1002264  +
push dword ptr [ebx+0DE0h]  +
push eax  +
call sub_104EF41  +
test eax eax +
jnz loc_104EC56  +
push 1  +
mov ecx ebx +
call sub_104E62D  +
push esi  +
push esi  +
push 467h  +
push dword ptr [ebx+0DE0h]  +
call ds:SendMessageW  +
cmp [ebx+0D14h] esi +
jz loc_104EC56  +
mov ecx [ebp+hdc] +
call sub_10372F5  +
test eax eax +
jnz loc_104EC56  +
mov ecx ebx +
call sub_10409D2  +
test eax eax +
jnz loc_104EC56  +
mov ecx [ebp+hdc] +
push 4  +
call sub_10370F8  +
mov byte ptr [ebx+0DE8h] 0 +
jmp loc_1010D8C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+lpMenuName]  +
xor edi edi +
push hInstance  +
call ds:LoadMenuW  +
mov esi eax +
test esi esi +
jz loc_104ECB0  +
push edi  +
push esi  +
call ds:GetSubMenu  +
mov edi eax +
test edi edi +
jz loc_104ECA9  +
push 400h  +
push 0  +
push esi  +
call ds:RemoveMenu  +
test eax eax +
jz loc_105C5F3  +
push esi  +
call ds:DestroyMenu  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
call ds:IsIconic  +
test eax eax +
jnz loc_104ED06  +
push 0FFFFFFF0h  +
push esi  +
call ds:GetWindowLongW  +
mov ecx eax +
mov eax 0C00000h +
and ecx eax +
cmp ecx eax +
jnz loc_104ED06  +
mov eax [ebp+arg_4] +
cmp esi [eax+4] +
jz loc_104ED06  +
cmp esi dword_10B10EC +
jz loc_104ED06  +
xor eax eax +
jmp loc_104ED09  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hWnd] +
push esi  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_104ECB8  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov ebx ecx +
push 0CDh  +
mov [ebp+lParam] ebx +
call sub_104EC67  +
mov esi eax +
mov [ebp+hMenu] esi +
test esi esi +
jz loc_104EE61  +
cmp [ebp+arg_0] 0 +
push edi  +
jz loc_10577C8  +
cmp dword ptr [ebx+3C8h] 0 +
jnz loc_10577B5  +
cmp dword ptr [ebx+0C7Ch] 0 +
jnz loc_10577E1  +
mov eax [ebx+0D28h] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF8h +
add eax 8 +
push eax  +
mov esi 1A8h +
push esi  +
push [ebp+hMenu]  +
call ds:CheckMenuItem  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetClientRect  +
call sub_1035409  +
test eax eax +
jnz loc_104EE71  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
jz loc_104EE71  +
xor eax eax +
mov edi ds:EnableMenuItem +
push eax  +
push esi  +
push [ebp+hMenu]  +
call edi  +
cmp dword ptr [ebx+0C70h] 0 +
mov esi ds:LoadStringW +
mov ebx ds:ModifyMenuW +
jnz loc_1057808  +
push 0  +
push 1A0h  +
push [ebp+hMenu]  +
call ds:DeleteMenu  +
cmp dword_10B10F8 0 +
jnz loc_105788D  +
mov ecx [ebp+lParam] +
call sub_104EBCA  +
test eax eax +
jz loc_10578C0  +
lea eax [ebp+var_10C] +
push eax  +
lea eax [ebp+var_108] +
push eax  +
push 0  +
push 10h  +
push offset aDisabletaskmgr  +
push offset aSoftwareMicr_9  +
push 80000001h  +
mov [ebp+var_10C] 4 +
call ds:__imp_SHRegGetValueW  +
test eax eax +
jz loc_10578F2  +
mov eax [ebp+hMenu] +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
push 3  +
pop eax  +
jmp loc_104EDC5  +
***
mov eax [ebx+0C10h] +
push 7Bh  +
pop edi  +
mov [ebp+wParam] eax +
push 2000000h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_1002264  +
lea esi [ebx+0C04h] +
push dword ptr [esi]  +
push [ebp+lParam]  +
call sub_104EF41  +
test eax eax +
jz loc_1009EF3  +
push 1  +
push [ebp+lParam]  +
mov ecx ebx +
call sub_104E345  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 10h +
push esi  +
movsx esi ax +
push edi  +
shr eax 10h +
movsx edi ax +
lea eax [ebp+rc] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
push edi  +
push esi  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov ecx ebx +
call sub_104EF87  +
jmp loc_1002264  +
***
test byte ptr [ecx+40h] 1 +
jnz loc_1055F5D  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 788h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [eax+78h] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor ebx ebx +
inc ebx  +
mov [ebp+var_72C] eax +
mov [eax+5Ch] ebx +
mov eax [ecx] +
xor edi edi +
push edi  +
mov [ebp+hWnd] esi +
call dword ptr [eax+0Ch]  +
push esi  +
call ds:SetForegroundWindow  +
push ebx  +
push 0Bh  +
push esi  +
call ds:SHELL32_89  +
lea ecx [ebp+var_748] +
push ecx  +
lea ecx [ebp+var_734] +
push ecx  +
push offset dword_100671C  +
push eax  +
mov [ebp+pidl] eax +
call ds:__imp_SHBindToParent  +
test eax eax +
jl loc_104F221  +
call ds:CreatePopupMenu  +
mov [ebp+hMenu] eax +
cmp eax edi +
jz loc_104F215  +
mov eax [ebp+var_734] +
mov ecx [eax] +
lea edx [ebp+var_728] +
push edx  +
push edi  +
push offset dword_1011ED0  +
lea edx [ebp+var_748] +
push edx  +
push ebx  +
push esi  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_104F209  +
lea eax [ebp+var_740] +
push eax  +
push offset dword_1011ED0  +
push offset aOpen  +
push [ebp+var_728]  +
call sub_104FCA9  +
test eax eax +
jl loc_104F1FD  +
mov eax [ebp+var_728] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_740] +
push 2  +
push 7FEFh  +
push 2  +
push edi  +
push [ebp+hMenu]  +
mov [ebp+var_728] eax +
mov [ebp+var_740] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_104F1FD  +
mov ebx ds:LoadStringW +
push 104h  +
lea eax [ebp+NewItem] +
push eax  +
push 2D0h  +
push hInstance  +
call ebx  +
mov esi ds:AppendMenuW +
lea eax [ebp+NewItem] +
push eax  +
push 7FF3h  +
push edi  +
push [ebp+hMenu]  +
call esi  +
cmp [ebp+arg_C] edi +
jz loc_10588E5  +
push 104h  +
lea eax [ebp+NewItem] +
push eax  +
push 2CFh  +
push hInstance  +
call ebx  +
lea eax [ebp+NewItem] +
push eax  +
push 7FF1h  +
push edi  +
push [ebp+hMenu]  +
call esi  +
push offset aOpen_0  +
push 2  +
push [ebp+hMenu]  +
push [ebp+var_728]  +
call sub_1043341  +
push [ebp+hMenu]  +
call sub_1043174  +
cmp [ebp+arg_8] 0FFFFFFFFh +
jz loc_105899D  +
mov esi [ebp+var_72C] +
mov ecx [esi+78h] +
mov eax [ecx] +
push edi  +
call dword ptr [eax]  +
mov ebx 102h +
call sub_10344B4  +
test eax eax +
jnz loc_10589B5  +
mov eax [ebp+arg_8] +
push edi  +
push [ebp+hWnd]  +
shr eax 10h +
push edi  +
cwde   +
push eax  +
movsx eax word ptr [ebp+arg_8] +
push eax  +
push ebx  +
push [ebp+hMenu]  +
call ds:TrackPopupMenu  +
mov ecx [esi+78h] +
mov ebx eax +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax ebx +
sub eax edi +
jz loc_104F1FD  +
sub eax 7FF0h +
jz loc_1058AAF  +
dec eax  +
jz loc_1058A9F  +
dec eax  +
dec eax  +
jnz loc_10589BF  +
push 2  +
call sub_104F291  +
mov eax [ebp+var_728] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+hMenu]  +
call ds:DestroyMenu  +
mov eax [ebp+var_734] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+pidl]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_72C] +
mov ecx [ebp+var_4] +
mov [eax+5Ch] edi +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+38h] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_104F284  +
test esi esi +
jz loc_104F284  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx offset unk_10B1460 +
pop ebp  +
jmp sub_104945C  +
***
push dword ptr [ebp+8]  +
call sub_10485B7  +
push edi  +
push 8  +
push dword ptr [ebp+8]  +
call ds:SetWindowLongW  +
mov esi [edi+1Ch] +
jmp loc_10484DE  +
***
push offset aCreateproperty  +
push offset dword_10B22B8  +
call sub_1012091  +
jmp loc_10491E3  +
***
push [ebp+wParam]  +
call sub_104F313  +
jmp loc_1048520  +
xor esi esi +
jmp loc_104A43A  +
push [ebp+wParam]  +
call sub_1078C7F  +
jmp loc_1048557  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp dword_10B24CC esi +
jz loc_104F356  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104F428  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_105BA98  +
push 7  +
pop ecx  +
xor eax eax +
push esi  +
mov [ebp+var_20] esi +
lea edi [ebp+var_1C] +
stos   +
push 200000h  +
lea eax [ebp+var_20] +
push eax  +
call ds:SHELL32_68  +
push offset dword_1023FC4  +
call ds:SHLWAPI_618  +
mov ebx ds:EnableWindow +
test eax eax +
jnz loc_105BAD6  +
push 40000002h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_105BAD6  +
push 1  +
push offset aStart_trackdoc  +
call sub_10373D2  +
mov esi ds:CheckDlgButton +
push eax  +
push 46Fh  +
push [ebp+hDlg]  +
call esi  +
push offset dword_104F43C  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_105BAFC  +
push 1  +
push offset aStart_trackpro  +
call sub_10373D2  +
push eax  +
push 470h  +
push [ebp+hDlg]  +
call esi  +
push [ebp+hDlg]  +
call sub_104F451  +
cmp dword_10B24CC 0 +
jz loc_104F421  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_104F435  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jnz loc_105BB1D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
test al al +
jz loc_104F335  +
jmp loc_104F356  +
test al al +
jnz loc_104F421  +
jmp loc_104F400  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1ACh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hDlg] +
push edi  +
push 46Dh  +
push eax  +
call ds:GetDlgItem  +
mov [ebp+hWnd] eax +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1035250  +
push 1  +
xor edi edi +
push edi  +
push offset stru_1035260  +
mov [ebp+var_1AC] edi +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_105BA86  +
push esi  +
push 1000h  +
call ds:GetSystemMetrics  +
mov [ebp+var_1A8] eax +
cmp eax edi +
jnz loc_105B9B8  +
mov esi 301h +
call sub_1011941  +
test eax eax +
jz loc_104F4E5  +
call sub_1011979  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 0FFE1FFB0h +
add esi 200357h +
push esi  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_1A4] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_104F656  +
mov eax [ebp+var_1A4] +
mov ecx [eax] +
push ebx  +
push edi  +
lea edx [ebp+var_198] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi ds:SendMessageW +
mov ebx 0C8h +
test eax eax +
jnz loc_104F5A2  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+lParam] +
push edx  +
push edi  +
push [ebp+var_198]  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_104F58A  +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 143h  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_104F58A  +
push [ebp+var_198]  +
push eax  +
push 151h  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_1AC] 1 +
mov eax [ebp+var_1A4] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_198] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_104F52F  +
mov eax [ebp+var_1A4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_1AC] edi +
jz loc_104F655  +
cmp [ebp+var_1A8] edi +
jnz loc_105B9BF  +
call sub_1011979  +
mov edi eax +
lea eax [ebp+var_1A8] +
push eax  +
neg edi  +
sbb edi edi +
lea eax [ebp+var_198] +
push eax  +
inc edi  +
push offset dword_104F68C  +
inc edi  +
mov [ebp+var_1A8] 4 +
call ds:SHLWAPI_560  +
test eax eax +
jl loc_104F607  +
cmp [ebp+var_198] 0 +
jnz loc_105B9E0  +
push edi  +
push offset aStart_powerbut  +
call sub_10373D2  +
push ebx  +
lea edx [ebp+lParam] +
push edx  +
mov [ebp+var_198] eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0  +
push [ebp+var_198]  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_104F67E  +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 14Dh  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_104F67E  +
xor edi edi +
pop ebx  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
cmp [ebp+var_1AC] edi +
jz loc_105BA86  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_1001FEB  +
leave   +
retn 4  +
cmp [ebp+var_198] edi +
jz loc_104F653  +
jmp loc_105BA36  +
***
call sub_104F6E3  +
test eax eax +
jnz loc_104874C  +
jmp loc_105C995  +
***
mov edi edi +
push ebx  +
push edi  +
push offset aKernel32_dll  +
call ds:LoadLibraryA  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jz loc_105C910  +
push esi  +
mov esi ds:__imp_GetProcAddress +
push offset aIsprocessorfea  +
push edi  +
call esi  +
cmp eax ebx +
jz loc_104F77A  +
push 0Ch  +
call eax  +
cmp eax ebx +
jz loc_105C917  +
push offset aInterlockedpop  +
push edi  +
call esi  +
push offset aInterlockedpus  +
push edi  +
mov dword_10B1118 eax +
call esi  +
push offset aInterlockedcom  +
push edi  +
mov dword_10B1114 eax +
call esi  +
mov dword_10B111C eax +
cmp dword_10B1114 ebx +
jz loc_104F77E  +
cmp dword_10B1118 ebx +
jz loc_104F77E  +
cmp eax ebx +
jz loc_104F77E  +
mov eax large fs:18h +
mov esi [eax+30h] +
add esi 34h +
mov eax [esi] +
cmp eax ebx +
jz loc_105C924  +
mov dword_10B1110 eax +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
xor eax eax +
jmp loc_104F715  +
xor eax eax +
jmp loc_104F776  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_104F82C  +
test [ebp+arg_0] 1 +
jz loc_104F820  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
mov dword ptr [esi] offset off_1013864 +
mov dword ptr [esi+4] offset off_10531D0 +
mov dword ptr [esi+8] offset off_104EFC4 +
mov dword ptr [esi+0Ch] offset off_104EFB0 +
mov dword ptr [esi+10h] offset off_104EF94 +
mov dword ptr [esi+14h] offset off_1013888 +
test eax eax +
jz loc_104F867  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+20h] +
test eax eax +
jz loc_104F874  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+24h] +
test eax eax +
jz loc_104F881  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+28h] +
test eax eax +
jz loc_104F88E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_104F89B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+30h] +
test eax eax +
jz loc_104F8A8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+34h] +
test eax eax +
jz loc_104F8B5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+18h] +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
retn   +
***
push 2000000h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_10365E0  +
mov eax [esi] +
push 1  +
push edi  +
push [ebp+hWndTo]  +
push esi  +
call dword ptr [eax+10h]  +
jmp loc_10365E0  +
mov ecx [esi+78h] +
mov eax [ecx] +
call dword ptr [eax+24h]  +
jmp loc_10365E0  +
push [ebp+lParam]  +
push [ebp+arg_8]  +
jmp loc_103A9CF  +
mov ecx esi +
call sub_106F2D1  +
jmp loc_100D990  +
***
mov ecx esi +
call sub_10215E1  +
jmp loc_10365E0  +
mov ecx esi +
call sub_106E8B1  +
jmp loc_100D990  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset dword_104F948  +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 8  +
***
cmp edi 8007007Ah +
jz loc_1043319  +
mov eax [esi] +
push 41h  +
lea ecx [ebp+var_108] +
push ecx  +
push 0  +
push 0  +
push [ebp+arg_4]  +
mov byte ptr [ebp+var_108] 0 +
push esi  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_1043319  +
jmp loc_105CE11  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+24h] 0 +
jz loc_104F9BF  +
push [ebp+arg_14]  +
mov eax [eax+24h] +
push [ebp+arg_10]  +
mov ecx [eax] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 18h  +
mov eax 80004005h +
jmp loc_104F9BB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+24h] 0 +
jz loc_104F9F5  +
push [ebp+arg_14]  +
mov eax [eax+24h] +
push [ebp+arg_10]  +
mov ecx [eax] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+14h]  +
pop ebp  +
retn 18h  +
mov eax 80004005h +
jmp loc_104F9F1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_0] +
and dword ptr [ecx] 0 +
cmp dword ptr [eax+24h] 0 +
jz loc_104FA26  +
mov eax [eax+24h] +
mov edx [eax] +
push ecx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [edx+14h]  +
pop ebp  +
retn 0Ch  +
mov eax 80004005h +
jmp loc_104FA22  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test dword ptr [eax+8] 800h +
jnz loc_104FA59  +
mov eax [eax+10h] +
test eax 0FFFF0000h +
jnz loc_104FA59  +
cmp eax [ebp+arg_4] +
jb loc_104FA59  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_104FA55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push 2Ch  +
push eax  +
mov word ptr [ebp+var_54] ax +
lea eax [ebp+var_84.fMask] +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_54] +
mov [ebp+var_84.dwTypeData] eax +
lea eax [ebp+var_84] +
push eax  +
push 400h  +
push [ebp+arg_4]  +
mov [ebp+var_84.cbSize] 30h +
push esi  +
mov [ebp+var_84.fMask] 40h +
mov [ebp+var_84.cch] 27h +
call ds:GetMenuItemInfoW  +
pop esi  +
test eax eax +
jz loc_104FADF  +
push offset aA4756f804ae74a  +
lea eax [ebp+var_54] +
push eax  +
call StrCmpICW  +
test eax eax +
jz loc_105D15B  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0E8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
xor edi edi +
mov [ebp-0ACh] eax +
cmp [ebx+3Ch] edi +
jz loc_104FB45  +
lea edx [ebp-0B4h] +
push edx  +
lea eax [ebx+10h] +
mov ecx [eax] +
mov esi 200h +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_104FB45  +
test [ebp-0B4h] esi +
jnz loc_105D161  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-0ACh]  +
push ebx  +
call sub_104F995  +
mov [ebp-0B8h] eax +
test eax eax +
jl loc_104FC6B  +
push dword ptr [ebp-0ACh]  +
call ds:GetMenuItemCount  +
and dword ptr [ebp-0A8h] 0 +
mov [ebp-0B0h] eax +
test eax eax +
jle loc_104FC6B  +
push 2Ch  +
xor edi edi +
lea eax [ebp-0E4h] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp-0E8h] +
push eax  +
mov esi 400h +
push esi  +
push dword ptr [ebp-0A8h]  +
mov dword ptr [ebp-0E8h] 30h +
push dword ptr [ebp-0ACh]  +
mov dword ptr [ebp-0E4h] 12h +
call ds:GetMenuItemInfoW  +
test eax eax +
jz loc_104FC53  +
push dword ptr [ebp+14h]  +
lea eax [ebp-0E8h] +
push eax  +
call sub_104FA32  +
test al al +
jz loc_104FC53  +
push dword ptr [ebp-0A8h]  +
push dword ptr [ebp-0ACh]  +
call sub_104FA62  +
test al al +
jnz loc_104FC53  +
push 50h  +
lea eax [ebp-0A4h] +
push eax  +
mov eax [ebp-0D8h] +
sub eax [ebp+14h] +
push eax  +
push dword ptr [ebx+24h]  +
call sub_10432C3  +
test eax eax +
jl loc_104FC82  +
mov esi [ebx+3Ch] +
cmp [esi] di +
jz loc_104FC9D  +
test edi edi +
jnz loc_104FC53  +
push esi  +
lea eax [ebp-0A4h] +
push eax  +
call StrCmpICW  +
mov edi eax +
neg edi  +
sbb edi edi +
push esi  +
inc edi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_104FC26  +
test edi edi +
jz loc_104FC9D  +
inc dword ptr [ebp-0A8h]  +
mov eax [ebp-0A8h] +
cmp eax [ebp-0B0h] +
jl loc_104FB8C  +
mov ecx [ebp-4] +
mov eax [ebp-0B8h] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
push esi  +
push dword ptr [ebp-0A8h]  +
push dword ptr [ebp-0ACh]  +
call ds:DeleteMenu  +
dec dword ptr [ebp-0A8h]  +
jmp loc_104FC53  +
***
push 400h  +
jmp loc_104FC83  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_C] +
mov ebx 80004003h +
mov [edi] esi +
cmp [ebp+arg_4] esi +
jz loc_104FCF2  +
push 40h  +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_104FCDD  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
call sub_104FD00  +
mov esi eax +
test esi esi +
jz loc_104FCF2  +
mov eax [esi] +
push edi  +
push [ebp+arg_8]  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_104FE0D  +
mov eax [ebp+arg_4] +
mov [esi+3Ch] eax +
mov dword ptr [esi] offset off_104FD48 +
mov dword ptr [esi+4] offset off_10531D0 +
mov dword ptr [esi+8] offset off_104EFC4 +
mov dword ptr [esi+0Ch] offset off_104EFB0 +
mov dword ptr [esi+10h] offset off_104EF94 +
mov dword ptr [esi+14h] offset off_1013888 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi [ebp+8] +
mov eax [edi+18h] +
mov ecx [eax] +
push esi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+8] eax +
test eax eax +
jl loc_104FDB2  +
push ebx  +
mov ebx [esi] +
push esi  +
push dword ptr [ebp+0Ch]  +
push offset off_104FDC0  +
push edi  +
call QISearch  +
test eax eax +
jl loc_105D14C  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop ebx  +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1013864 +
mov dword ptr [esi+4] offset off_10531D0 +
mov dword ptr [esi+8] offset off_104EFC4 +
mov dword ptr [esi+0Ch] offset off_104EFB0 +
mov dword ptr [esi+10h] offset off_104EF94 +
mov dword ptr [esi+14h] offset off_1013888 +
mov dword ptr [esi+38h] 1 +
mov [esi+18h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [esi+1Ch] +
push edx  +
push offset dword_1002D04  +
push eax  +
call dword ptr [ecx]  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [esi+20h] +
push edx  +
push offset dword_104FED0  +
push eax  +
call dword ptr [ecx]  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [esi+24h] +
push edx  +
push offset dword_1011ED0  +
push eax  +
call dword ptr [ecx]  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [esi+28h] +
push edx  +
push offset dword_104332C  +
push eax  +
call dword ptr [ecx]  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [esi+2Ch] +
push edx  +
push offset stru_10120BC  +
push eax  +
call dword ptr [ecx]  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [esi+30h] +
push edx  +
push offset dword_104FEE0  +
push eax  +
call dword ptr [ecx]  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [esi+34h] +
push edx  +
push offset dword_104FEF0  +
push eax  +
call dword ptr [ecx]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx+30h] +
mov eax [eax+38h] +
and eax 400h +
retn   +
***
call sub_103B289  +
mov [esi] eax +
jmp loc_103A57C  +
***
mov eax [ebp+var_90] +
test dword ptr [eax+10h] 3C0h +
jnz loc_105F5DE  +
mov eax [esi+19Ch] +
mov ecx [ebp+Rect.left] +
and [ebp+var_DC] 0 +
lea eax [eax+ecx+4] +
mov [ebp+var_94] eax +
lea eax [ebp+String] +
mov [ebp+var_D0] eax +
lea eax [ebp+var_E4] +
push eax  +
push ebx  +
push 1073h  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_CC] 40h +
call edi  +
push 400h  +
lea eax [ebp+Rect] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push [ebp+hDC]  +
call ds:DrawTextW  +
mov eax [ebp+Rect.right] +
mov ecx [ebp+var_94] +
add eax ecx +
cmp [ebp+var_8C] eax +
jg loc_105001D  +
mov [ebp+var_8C] eax +
jmp loc_105001D  +
test eax eax +
jnz loc_104FF30  +
jmp loc_104FF36  +
cmp [ebp+hDC] 0 +
jz loc_103B2F3  +
lea eax [ebp+Rect] +
push eax  +
push ebx  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
mov [ebp+Rect.left] 2 +
call edi  +
test eax eax +
jz loc_103B2F3  +
push ebx  +
mov ecx esi +
call sub_1012341  +
mov [ebp+var_90] eax +
test eax eax +
jz loc_103B2F3  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+8]  +
test eax eax +
jz loc_104FF1D  +
mov ecx [ebp+var_90] +
call sub_100F319  +
jmp loc_103B2F3  +
***
mov eax [ebp+8] +
cmp [eax+0A4h] ebx +
jz loc_1013B88  +
mov eax [eax+5B0h] +
jmp loc_1014010  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+230h] +
test ecx ecx +
jnz loc_105EAA4  +
cmp [esi+204h] ecx +
jnz loc_105012F  +
test ecx ecx +
jnz loc_105EAA4  +
pop esi  +
retn   +
and dword ptr [esi+158h] 0 +
jmp loc_105012D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov ebx ecx +
mov eax [ebx+1ECh] +
xor esi esi +
push esi  +
push esi  +
neg eax  +
push esi  +
sbb eax eax +
add eax 14Fh +
push eax  +
push offset dword_1050368  +
push offset dword_10128F0  +
push dword ptr [ebx+28h]  +
call ds:SHLWAPI_484  +
mov [ebp+var_4] eax +
cmp [ebx+204h] esi +
jnz loc_105EADC  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_1050228  +
push 9  +
mov [ebp-4] eax +
pop ecx  +
xor eax eax +
lea edi [ebp-34h] +
stos   +
lea ecx [esi+1F0h] +
call sub_10157F3  +
lea ecx [esi+1F4h] +
call sub_10157F3  +
mov eax [esi+230h] +
xor ebx ebx +
cmp eax ebx +
jnz loc_105ED1A  +
mov eax [ebp-18h] +
mov ecx [ebp-28h] +
lea edi [ecx+eax] +
add edi [ebp-30h] +
add edi [ebp-20h] +
add edi [ebp-34h] +
cmp [esi+84h] ebx +
jnz loc_105EDBC  +
mov eax [ebp+8] +
test byte ptr [eax+2Ch] 10h +
jnz loc_105021C  +
cmp [esi+22Ch] ebx +
jnz loc_105EDE3  +
xor eax eax +
cmp eax edi +
sbb eax eax +
neg eax  +
mov [esi+1A8h] ebx +
mov [esi+1ACh] edi +
mov [esi+1ECh] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+84h] 0 +
jnz loc_105EA36  +
mov eax [edi] +
call dword ptr [eax+0F8h]  +
mov ecx edi +
mov esi eax +
call sub_1039DC0  +
mov ecx eax +
mov eax esi +
cdq   +
idiv  ecx +
mov esi eax +
push esi  +
push offset aMaxentries  +
push offset aSoftwareMicr_7  +
push 80000001h  +
call sub_1050279  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push [ebp+pszValue]  +
push [ebp+pszSubKey]  +
push [ebp+hkey]  +
call SHSetValueW  +
push eax  +
call sub_10502A3  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jg loc_105CB9C  +
pop ebp  +
retn 4  +
***
mov esi [ebp+8] +
lea edi [esi-18h] +
mov ecx edi +
call sub_10502DB  +
cmp dword ptr [esi+6BCh] 3 +
jnz loc_1014016  +
jmp loc_1013CA7  +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
mov eax ecx +
push 14Fh  +
add ecx 0Ch +
neg eax  +
push offset dword_1013948  +
sbb eax eax +
push offset dword_10369C0  +
and eax ecx +
push eax  +
call ds:SHLWAPI_484  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
push 3  +
pop eax  +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
push 0  +
push 0  +
push 15Fh  +
push offset dword_1050368  +
mov esi ecx +
push offset dword_10128F0  +
push dword ptr [esi+28h]  +
call ds:SHLWAPI_484  +
test eax eax +
jl loc_105035B  +
mov eax [ebp+var_8] +
sub eax [esi+94h] +
sub eax [esi+90h] +
pop edi  +
pop esi  +
leave   +
retn   +
mov ecx esi +
call sub_108ED6B  +
jmp loc_1050357  +
***
or dword_10B1104 1 +
push 0  +
push 0  +
push 0  +
push offset aStartmenuforce  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:__imp_SHGetValueW  +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_10B1100 eax +
jmp loc_1039F92  +
***
mov eax offset __imp_LresultFromObject +
jmp loc_10531E4  +
***
mov eax offset __imp_CreateStdAccessibleObject +
jmp loc_10531E4  +
***
push offset aHelp_entry_id_  +
call sub_1050459  +
jmp loc_103E2CA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
push edi  +
mov edi [ebp+arg_0] +
jz loc_10504D5  +
push esi  +
mov esi offset dword_10504E8 +
push esi  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz loc_10504D4  +
and [ebp+var_88] 0 +
push 80h  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push edi  +
lea eax [ebp+var_88] +
push eax  +
call sub_1012258  +
push 1  +
lea eax [ebp+var_88] +
push eax  +
push 38Fh  +
push esi  +
call sub_1006870  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov ecx [eax] +
push ebx  +
push 0FFFFFFFFh  +
push offset dword_100D864  +
push eax  +
call dword ptr [ecx+10h]  +
push edi  +
call sub_1002BEE  +
jmp loc_1018F6F  +
***
test esi esi +
jz loc_1036B7A  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+14h]  +
jmp loc_1036B7A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_1015AE0 +
call sub_1002BEE  +
test [ebp+arg_0] 1 +
jz loc_1050550  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi [ebp+arg_0] +
mov eax [edi+44h] +
xor esi esi +
cmp eax esi +
jz loc_105056D  +
push eax  +
call ds:SHELL32_4  +
mov [edi+44h] esi +
mov eax [edi+1Ch] +
cmp eax esi +
jz loc_1011911  +
push eax  +
call ds:DestroyWindow  +
mov [edi+1Ch] esi +
jmp loc_1011911  +
push [ebp+lParam]  +
push [ebp+hDC]  +
push eax  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
xor esi esi +
push esi  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
mov edi eax +
call ds:SetWindowLongW  +
mov eax [ebp+arg_0] +
cmp eax esi +
jz loc_10505B4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
jmp loc_1011923  +
***
test esi esi +
jz loc_1036D3A  +
lea ecx [esi+18h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax+14h]  +
jmp loc_1036D3A  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1036D1C  +
***
sub dword ptr [esp+4] 18h +
jmp loc_101389D  +
***
lea ecx [esi-14h] +
call sub_1036DAD  +
lea eax [esi+30h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+34h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+3Ch] +
push eax  +
call sub_1002BEE  +
lea eax [esi+44h] +
push eax  +
call sub_1002BEE  +
add esi 48h +
cmp dword ptr [esi] 0 +
jnz loc_1048271  +
push esi  +
call sub_1002BEE  +
jmp loc_1019686  +
***
push ebx  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push eax  +
push edi  +
call sub_1050A89  +
jmp loc_1011802  +
***
test esi esi +
jz loc_1013A2E  +
lea ecx [esi+18h] +
mov eax [ecx] +
push 1  +
call dword ptr [eax+14h]  +
jmp loc_1013A2E  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1013A10  +
***
sub dword ptr [esp+4] 18h +
jmp loc_10139F5  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 82h  +
push esi  +
call sub_1050A89  +
jmp loc_10114EA  +
***
test esi esi +
jz loc_103692C  +
lea ecx [esi+1Ch] +
mov eax [ecx] +
push 1  +
call dword ptr [eax+14h]  +
jmp loc_103692C  +
***
sub dword ptr [esp+4] 4 +
jmp loc_103690E  +
***
sub dword ptr [esp+4] 8 +
jmp loc_103690E  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_103690E  +
***
sub dword ptr [esp+4] 10h +
jmp loc_103690E  +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push 82h  +
push edi  +
call sub_1050A89  +
jmp loc_1011887  +
***
test esi esi +
jz loc_1036C86  +
lea ecx [esi+1Ch] +
mov eax [ecx] +
push 1  +
call dword ptr [eax+14h]  +
jmp loc_1036C86  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1014EC5  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1036C65  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 82h  +
push esi  +
call sub_1050A89  +
jmp loc_101177A  +
***
sub ecx 24h +
jmp loc_1050755  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_105077B  +
test [ebp+arg_4] 1 +
jz loc_105076F  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+1DCh] +
call sub_1050798  +
mov ecx esi +
pop esi  +
jmp sub_1018C8C  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push 0  +
lea ebx [esi+4] +
push offset loc_1091795  +
mov ecx ebx +
mov dword ptr [esi] offset off_100F4F4 +
call sub_100831C  +
lea edi [esi+20h] +
mov eax [edi] +
test eax eax +
jz loc_10507CD  +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+1Ch]  +
push edi  +
call sub_1002BEE  +
add esi 8 +
push esi  +
call sub_1002BEE  +
pop edi  +
pop esi  +
mov ecx ebx +
pop ebx  +
jmp sub_10082DC  +
***
sub ecx 18h +
jmp loc_10507EF  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1050815  +
test [ebp+arg_4] 1 +
jz loc_1050809  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+468h] +
mov eax [edi] +
mov dword ptr [esi] offset off_10137A0 +
mov dword ptr [esi+4] offset off_1014EEC +
mov dword ptr [esi+14h] offset off_10138B4 +
mov dword ptr [esi+18h] offset off_1019270 +
mov dword ptr [esi+20h] offset off_10138D0 +
mov dword ptr [esi+24h] offset off_10161E8 +
test eax eax +
jz loc_105085B  +
push eax  +
call ds:off_1035224  +
and dword ptr [edi] 0 +
push 7  +
lea edi [esi+470h] +
pop ebx  +
push edi  +
call sub_1002BEE  +
add edi 4 +
dec ebx  +
jnz loc_1050864  +
lea eax [esi+1Ch] +
push eax  +
mov dword ptr [esi+18h] offset off_1015AE0 +
call sub_1002BEE  +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_1018E30  +
***
sub ecx 18h +
jmp loc_1050899  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10508BF  +
test [ebp+arg_4] 1 +
jz loc_10508B3  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+34h] +
push eax  +
mov dword ptr [esi] offset off_1013970 +
mov dword ptr [esi+4] offset off_1014F08 +
mov dword ptr [esi+14h] offset off_1013AB0 +
mov dword ptr [esi+18h] offset off_1019224 +
mov dword ptr [esi+20h] offset off_1013AD0 +
mov dword ptr [esi+24h] offset off_10140B8 +
mov dword ptr [esi+28h] offset off_1014798 +
mov dword ptr [esi+2Ch] offset off_1014124 +
call sub_1002BEE  +
push dword ptr [esi+54h]  +
call ds:__imp_CoTaskMemFree  +
lea eax [esi+1Ch] +
push eax  +
mov dword ptr [esi+18h] offset off_1015AE0 +
call sub_1002BEE  +
mov ecx esi +
pop esi  +
jmp sub_1018E30  +
***
sub ecx 1Ch +
jmp loc_1050934  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_105095A  +
test [ebp+arg_4] 1 +
jz loc_105094E  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+68h] +
push eax  +
mov dword ptr [esi] offset off_100F4A0 +
mov dword ptr [esi+4] offset off_1015BE4 +
mov dword ptr [esi+8] offset off_10129AC +
mov dword ptr [esi+0Ch] offset off_101955C +
mov dword ptr [esi+10h] offset off_10155A0 +
mov dword ptr [esi+14h] offset off_1015590 +
mov dword ptr [esi+18h] offset off_101557C +
mov dword ptr [esi+1Ch] offset off_1015AC8 +
mov dword ptr [esi+24h] offset off_10148A4 +
call sub_1002BEE  +
mov dword ptr [esi+1Ch] offset off_1015AE0 +
add esi 20h +
push esi  +
call sub_1002BEE  +
pop esi  +
retn   +
***
sub ecx 1Ch +
jmp loc_10509C7  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10509ED  +
test [ebp+arg_4] 1 +
jz loc_10509E1  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
mov ebx ds:DeleteObject +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
push edi  +
lea edi [esi+4] +
mov dword ptr [esi] offset off_1014C74 +
mov dword ptr [edi] offset off_1014C90 +
mov dword ptr [esi+8] offset off_1014F24 +
mov dword ptr [esi+18h] offset off_1014EB0 +
mov dword ptr [esi+1Ch] offset off_1019288 +
mov dword ptr [esi+24h] offset off_1014890 +
mov dword ptr [esi+28h] offset off_101477C +
test eax eax +
jz loc_1050A36  +
push eax  +
call ebx  +
mov eax [esi+48h] +
test eax eax +
jnz loc_1062AD2  +
mov eax [esi+44h] +
test eax eax +
jz loc_1050A4B  +
push eax  +
call ebx  +
lea eax [esi+50h] +
push eax  +
call sub_1002BEE  +
mov dword ptr [esi+1Ch] offset off_1015AE0 +
add esi 20h +
push esi  +
call sub_1002BEE  +
mov ecx edi +
pop edi  +
pop esi  +
pop ebx  +
jmp sub_1018E30  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 82h  +
push esi  +
call sub_1050A89  +
jmp loc_1011567  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
mov esi ecx +
call ds:SetWindowLongW  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
mov edi eax +
test esi esi +
jz loc_1050ABD  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1050AF0  +
test byte ptr [ebp+8] 1 +
jz loc_1050AE4  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+88h] +
mov dword ptr [esi] offset off_10029F4 +
mov dword ptr [esi+8] offset off_1002A70 +
mov dword ptr [esi+0Ch] offset off_1006570 +
mov dword ptr [esi+10h] offset off_101434C +
mov dword ptr [esi+14h] offset off_1012754 +
mov dword ptr [esi+1Ch] offset off_100F2F8 +
mov dword ptr [esi+20h] offset off_101278C +
mov dword ptr [esi+24h] offset off_10161D8 +
mov dword ptr [esi+28h] offset off_101297C +
mov dword ptr [esi+2Ch] offset off_101954C +
mov dword ptr [esi+30h] offset off_10171DC +
mov dword ptr [esi+34h] offset off_10345E0 +
mov dword ptr [esi+38h] offset off_10161EC +
test ecx ecx +
jnz loc_10618EC  +
push dword ptr [esi+0ACh]  +
call ds:__imp_CoTaskMemFree  +
mov ecx esi +
call sub_10368D9  +
lea eax [esi+0C4h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+0C8h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+18h] +
push eax  +
mov dword ptr [esi+14h] offset off_1015AE0 +
call sub_1002BEE  +
mov dword ptr [esi] offset off_1002798 +
pop esi  +
retn   +
***
push dword ptr [ebp+14h]  +
mov ecx esi +
push dword ptr [ebp+10h]  +
push 2  +
push edi  +
call sub_1050BBA  +
jmp loc_1011887  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+38h] +
cmp dword ptr [edi] 0 +
jz loc_1050BD3  +
mov eax [edi] +
push dword ptr [esi+5Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push 0  +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
push edi  +
call sub_1002BEE  +
lea eax [esi+40h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+3Ch] +
push eax  +
call sub_1002BEE  +
lea eax [esi+34h] +
push eax  +
call sub_1002BEE  +
push dword ptr [esi+30h]  +
call ds:__imp_SHELL32_155  +
pop edi  +
xor eax eax +
pop esi  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1050C39  +
test byte ptr [ebp+8] 1 +
jz loc_1050C2D  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+54h] +
push eax  +
mov dword ptr [esi] offset off_1002A14 +
mov dword ptr [esi+8] offset off_1002A90 +
mov dword ptr [esi+0Ch] offset off_1006580 +
mov dword ptr [esi+10h] offset off_1014128 +
mov dword ptr [esi+18h] offset off_1014778 +
call sub_1002BEE  +
lea eax [esi+58h] +
push eax  +
call sub_1002BEE  +
mov eax [esi+30h] +
test eax eax +
jnz loc_10623B1  +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi+10h] offset off_1015AE0 +
call sub_1002BEE  +
mov dword ptr [esi] offset off_1002798 +
pop esi  +
retn   +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push esi  +
push ebx  +
call sub_1050CAC  +
jmp loc_10112AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
push [ebp+lParam]  +
mov esi eax +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
mov edi eax +
test esi esi +
jz loc_1050CFD  +
mov eax [esi+48h] +
test eax eax +
jz loc_1050CEA  +
push eax  +
call ds:DeleteObject  +
and dword ptr [esi+48h] 0 +
push 0  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
push esi  +
call sub_1050D1D  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ecx+34h]  +
call ds:RevokeDragDrop  +
pop ebp  +
jmp ds:DefWindowProcW  +
***
push edi  +
mov eax 4000h +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
push ebx  +
stos   +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
push 13Ah  +
push offset dword_1036BDC  +
push offset loc_10362A8  +
push dword ptr [esi+28h]  +
mov [ebp+var_8] ebx +
call ds:SHLWAPI_484  +
pop edi  +
jmp loc_1018BF4  +
***
sub ecx 24h +
jmp loc_1050D7C  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1050DA2  +
test [ebp+arg_4] 1 +
jz loc_1050D96  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1008838 +
mov dword ptr [ecx+4] offset off_10170E0 +
mov dword ptr [ecx+8] offset off_1012900 +
mov dword ptr [ecx+0Ch] offset off_1012968 +
mov dword ptr [ecx+10h] offset off_1014AF8 +
mov dword ptr [ecx+14h] offset off_1014E94 +
mov dword ptr [ecx+24h] offset off_1015AB0 +
mov dword ptr [ecx+2Ch] offset off_1014120 +
jmp sub_1018C8C  +
***
push eax  +
call free  +
and dword ptr [esi] 0 +
pop ecx  +
jmp loc_10123F2  +
***
cmp [ebx+0DA0h] esi +
jnz loc_1002264  +
mov ecx ebx +
call sub_1015DD8  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_1050E4E  +
mov edi ds:PostMessageW +
push esi  +
push esi  +
push 40Dh  +
push dword ptr [ebx+4]  +
call edi  +
push esi  +
push esi  +
push 414h  +
push dword ptr [ebx+0C04h]  +
call ds:SendMessageW  +
push esi  +
push esi  +
push 5B8h  +
push eax  +
call edi  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
push esi  +
push edi  +
push 9  +
mov ebx ecx +
pop ecx  +
xor eax eax +
mov [ebp+mi.cbSize] 28h +
lea edi [ebp+mi.rcMonitor] +
stos   +
lea eax [ebp+mi] +
push eax  +
push dword ptr [ebx+0CF8h]  +
xor edi edi +
xor esi esi +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_1057D9E  +
test byte ptr [ebp+mi.dwFlags] 1 +
jz loc_1057D4A  +
lea eax [ebx+44h] +
push eax  +
mov ecx ebx +
call sub_1050EFC  +
cmp [ebp+hWnd] edi +
jz loc_1050EB2  +
push 14h  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
cmp esi edi +
jnz loc_1057DAD  +
mov ecx ebx +
call sub_10214C3  +
mov eax [ebx+0CD8h] +
mov ecx eax +
shl ecx 4 +
lea esi [ecx+ebx+44h] +
lea edi [ebp+rcDst] +
movs   +
movs   +
push 0  +
push eax  +
movs   +
lea eax [ebp+rcDst] +
push eax  +
push 0  +
mov ecx ebx +
movs   +
call sub_10201EA  +
push 1  +
mov ecx ebx +
call sub_1015CA1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+rcSrc] +
mov esi ecx +
push eax  +
push dword ptr [esi+0CD8h]  +
call sub_1021675  +
mov edi [ebp+lprcDst] +
xor ebx ebx +
push ebx  +
push dword ptr [esi+0CE0h]  +
lea eax [ebp+rcSrc] +
push dword ptr [esi+0CDCh]  +
mov ecx esi +
push eax  +
push edi  +
call sub_101F680  +
inc ebx  +
add edi 10h +
cmp ebx 3 +
jbe loc_1050F1D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax edi +
sub eax 4Eh +
jz loc_1067D6C  +
sub eax 2Dh +
jz loc_1067D4A  +
sub eax 3 +
jz loc_10209C8  +
jmp loc_1067D15  +
***
push 3  +
push edi  +
push edx  +
push ecx  +
jmp loc_1011B18  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 7Eh  +
jmp loc_1011B62  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 7Eh  +
push esi  +
call sub_1011B74  +
jmp loc_1011567  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 7Eh  +
push esi  +
call sub_1011B98  +
jmp loc_101177A  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 7Eh  +
push ebx  +
call sub_1050FBD  +
jmp loc_10112AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 3  +
push [ebp+arg_C]  +
mov esi ecx +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHLWAPI_178  +
mov ecx esi +
call sub_1011A7D  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [ebp-30h] +
sub eax [ebp-38h] +
push eax  +
mov eax [ebp-34h] +
sub eax [ebp-3Ch] +
push eax  +
push [ebp+hDC]  +
call ds:CreateCompatibleBitmap  +
jmp loc_1035932  +
***
push esi  +
push [ebp+hdc]  +
push dword ptr [edi+4]  +
call ds:DrawThemeParentBackground  +
jmp loc_1021B7C  +
***
cmp [ebp+arg_0] edi +
jnz loc_10359AB  +
mov [ebp+uElapse] edi +
mov [ebp+var_54] ecx +
jmp loc_1035C84  +
***
lea esi [ebp+Points] +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
movs   +
xor edi edi +
jmp loc_1004B3B  +
***
lea eax [esi+6E4h] +
mov ecx [eax] +
cmp ecx 1 +
jz loc_105E96C  +
cmp ecx 4 +
jz loc_105E977  +
call ds:IsCompositionActive  +
push eax  +
mov ecx esi +
call sub_1018E9C  +
push ebx  +
push ebx  +
push 40Dh  +
push hWnd  +
call ds:PostMessageW  +
jmp loc_100DF55  +
***
lea eax [ebp-3Ch] +
push eax  +
push [ebp+hDC]  +
call ds:GetClipBox  +
jmp loc_1035898  +
mov [ebp+var_50] eax +
jmp loc_1035AFA  +
and [ebp+dy] 0 +
jmp loc_1035B69  +
xor eax eax +
inc eax  +
jmp loc_1035C54  +
cmp [ebp+arg_0] esi +
jnz loc_1035E6D  +
push esi  +
jmp loc_1035E6F  +
***
cmp dword ptr [ebp+10h] 4Eh +
jz loc_10510CC  +
cmp dword ptr [ebp+10h] 575h +
jnz loc_1011DBD  +
jmp loc_1063A28  +
***
mov eax [ebp+18h] +
test eax eax +
jnz loc_1063A3A  +
jmp loc_1011DBD  +
***
mov ecx ebx +
call sub_101E5AD  +
mov ecx ebx +
call sub_101E74B  +
push esi  +
push esi  +
lea eax [ebp-6Ch] +
push eax  +
push offset dword_100E458  +
push offset stru_101DD90  +
push dword ptr [ebx+3Ch]  +
call sub_101EA9C  +
test eax eax +
jl loc_105112A  +
mov eax [ebp-6Ch] +
mov ecx [eax] +
lea edx [ebp+var_58] +
push edx  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 31Eh  +
push [ebp+hWndParent]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp-6Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+hdc] +
push 1  +
call sub_10132A7  +
jmp loc_1002264  +
***
mov edi ds:IsCompositionActive +
call edi  +
push eax  +
push 40000h  +
push dword ptr [esi]  +
call sub_10149F4  +
call edi  +
test eax eax +
mov eax offset aComposited +
jz loc_10520B0  +
push 0  +
push eax  +
push dword ptr [esi]  +
call ds:SetWindowTheme  +
jmp loc_101E9D3  +
***
sub dword ptr [esp+4] 18h +
jmp loc_100242D  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call sub_101DFAE  +
xor edi edi +
test eax eax +
jnz loc_1058756  +
lea ecx [esi+0AF8h] +
call sub_101DF17  +
push 1  +
push edi  +
push 1  +
mov ecx esi +
call sub_10218C2  +
pop edi  +
pop esi  +
retn   +
***
mov eax [edi+8] +
sub eax [edi] +
cmp eax ecx +
jl loc_1021735  +
cmp dword ptr [ebx+0C7Ch] 0 +
jnz loc_1021735  +
cmp dword ptr [ebx+0C84h] 0 +
jnz loc_1057B7D  +
xor ecx ecx +
jmp loc_1020229  +
***
cmp [ebx+0DA0h] esi +
jnz loc_1051201  +
mov ecx ebx +
call sub_1051181  +
push esi  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 15h  +
push [ebp+hWndParent]  +
push dword ptr [ebx+3Ch]  +
call sub_100E582  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 15h  +
jmp loc_10367A9  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 15h  +
push ebx  +
call sub_1011B74  +
jmp loc_10112AF  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 15h  +
push esi  +
call sub_105123B  +
jmp loc_100F18F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+38h] 0 +
jz loc_105F6C7  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1011B2B  +
pop esi  +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 15h  +
push esi  +
call sub_105127D  +
jmp loc_1011567  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+34h] 0 +
jz sub_1061462  +
push 3  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHLWAPI_178  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 15h  +
push esi  +
call sub_10512C2  +
jmp loc_101177A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+3Ch] 0 +
jz loc_1062AAC  +
push 3  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SHLWAPI_178  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+8] +
cmp dword ptr [eax+6BCh] 3 +
jnz loc_1014019  +
jmp loc_1013E36  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov ecx [esi+18h] +
call sub_1051367  +
mov eax [esi+18h] +
push 0  +
push 0  +
push 0  +
push 154h  +
push offset dword_1036348  +
push offset dword_10128F0  +
push dword ptr [eax+28h]  +
call ds:SHLWAPI_484  +
mov eax [esi+18h] +
push 0  +
push 8  +
push 40Bh  +
push dword ptr [eax+44h]  +
call ds:PostMessageW  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and dword ptr [ecx+158h] 0 +
cmp [ebp+arg_0] 0 +
jz loc_1051383  +
mov dword ptr [ecx+160h] 1 +
pop ebp  +
retn 4  +
***
mov ecx esi +
mov [ebp+var_4] ebx +
call sub_10345AB  +
mov edi eax +
cmp edi ebx +
jz loc_10513A7  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+2Ch]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_4] +
cmp eax [esi+6D0h] +
jmp loc_100DC7E  +
***
and dword ptr [esi+14h] 0 +
xor eax eax +
mov byte ptr [esi+1Ch] 0 +
mov [ebp+8] ax +
cmp dword_10B24CC eax +
jz loc_1003D38  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10513FE  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 2010000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1003D38  +
jmp loc_10565AC  +
test al al +
jz loc_10513D8  +
jmp loc_1003D38  +
***
cmp dword_10B24CC eax +
jz loc_105146C  +
mov al byte_10B24D0 +
cmp al bl +
jb loc_103F00F  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 2010000h +
mov eax 80010000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_105146C  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_105146C  +
cmp ecx edi +
jnz loc_105146C  +
push offset dword_1051478  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov [ebp+var_4] 3 +
jmp loc_103E344  +
***
cmp dword_10B24CC ecx +
jz loc_103E37C  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10514C4  +
mov ecx dword_10B24B8 +
mov edx dword_10B24BC +
mov esi 10000h +
mov eax 80000000h +
and ecx esi +
and edx eax +
or ecx edx +
jz loc_103E37C  +
jmp loc_1061080  +
cmp al cl +
jz loc_105149D  +
jmp loc_103E37C  +
cmp al cl +
jz loc_103F049  +
jmp loc_103E37C  +
***
cmp dword ptr [ebp+10h] 10000000h +
jnz loc_1014019  +
mov eax [ebp+8] +
mov eax [eax+20h] +
mov [ebp-10h] eax +
mov [ebp-0Ch] ebx +
mov dword ptr [ebp-8] 0D5h +
lea ecx [ebp-10h] +
push 3  +
push ecx  +
push ebx  +
push 4Eh  +
push eax  +
call ds:SHLWAPI_178  +
jmp loc_1014019  +
***
or ebx 0FFFFFFFFh +
jmp loc_1039741  +
***
mov ecx ebx +
call sub_10119EC  +
test eax eax +
jz loc_101A223  +
jmp loc_1062A43  +
mov ecx ebx +
call sub_1095CCC  +
jmp loc_1011394  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+0AF8h] +
call sub_1051560  +
mov ecx esi +
call sub_101F5DD  +
mov ecx esi +
pop esi  +
jmp sub_101F58F  +
***
mov eax [ecx+80h] +
xor ecx ecx +
cmp eax ecx +
jz locret_1051580  +
push ecx  +
push ecx  +
push ecx  +
push 10000000h  +
push offset stru_1014024  +
push eax  +
call ds:IUnknown_Exec  +
retn   +
***
mov ecx esi +
call sub_105153C  +
call ds:SHUpdateRecycleBinIcon  +
mov ecx esi +
call sub_105159F  +
jmp loc_1051BB5  +
***
mov edi edi +
push esi  +
call sub_10191D1  +
push 1  +
push offset dword_10515C0  +
mov esi eax +
call ds:SHEnableServiceObject  +
push esi  +
call sub_1019203  +
pop esi  +
retn   +
***
push eax  +
push ecx  +
push 1Eh  +
jmp loc_10367A9  +
***
cmp [ebp+Msg] 218h +
jnz loc_1011C2F  +
cmp [ebp+wParam] 12h +
jnz loc_1011C2F  +
push esi  +
lea esi [edi+2E0h] +
push 4  +
mov ecx esi +
call sub_1034CCA  +
push edx  +
push eax  +
mov ecx esi +
call sub_1034C92  +
pop esi  +
jmp loc_1011C2F  +
***
call sub_105161E  +
jmp loc_1035770  +
***
mov edi edi +
push esi  +
mov esi ecx +
xor eax eax +
mov [esi+104h] ax +
call sub_1011202  +
mov ecx esi +
call sub_103678E  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
jz loc_102C9C6  +
mov eax edi +
sub eax 200h +
jz loc_1067E0F  +
dec eax  +
jz loc_1067DE6  +
dec eax  +
jz loc_1067DBD  +
sub eax 5 +
jz loc_1067DE6  +
dec eax  +
jz loc_1067DBD  +
sub eax 10h +
jnz loc_100E13E  +
mov ecx ebx +
call sub_10516DD  +
mov [ebp+var_48] 1 +
jmp loc_100E14F  +
cmp edx 4 +
jz loc_1051F5B  +
cmp edx 7 +
jnz loc_100DF55  +
lea eax [esi+6E4h] +
xor ecx ecx +
cmp dword ptr [eax] 3 +
setz cl  +
lea ecx [ecx+ecx+2] +
mov [eax] ecx +
jmp loc_100DF55  +
***
cmp ebx 4 +
jz loc_1051F6A  +
cmp ebx 12h +
jz loc_10516CC  +
cmp ebx 7 +
jnz loc_10024DE  +
push 3  +
call sub_1008635  +
jmp loc_10024DE  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+5Ch] 0 +
mov eax [esi] +
push esi  +
jz loc_1067BEA  +
call dword ptr [eax+30h]  +
test eax eax +
jnz loc_1067BC5  +
pop esi  +
retn   +
***
push eax  +
push ecx  +
push edi  +
push [ebp+hWndParent]  +
mov ecx ebx +
call sub_1011C50  +
push [ebp+lParam]  +
mov ecx ebx +
push [ebp+wParam]  +
push edi  +
call sub_1051721  +
jmp loc_10021F8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 48h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
jz loc_1051F49  +
cmp [ebp+arg_0] 218h +
jnz loc_10517B4  +
cmp dword_10B24CC 0 +
jz loc_1051776  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_1051F3C  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jnz loc_105605F  +
mov eax [ebp+wParam] +
sub eax 4 +
jz loc_1051F2D  +
dec eax  +
dec eax  +
jz loc_1051791  +
dec eax  +
jz loc_1051791  +
dec eax  +
jz loc_1051791  +
sub eax 0Ah +
jnz loc_1051798  +
and dword ptr [ebx+0C90h] 0 +
mov eax [ebx+0C10h] +
test eax eax +
jz loc_10517B4  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 218h  +
push eax  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
sub edi 7 +
jz loc_10638E7  +
sub edi 3 +
jz loc_10638D8  +
dec edi  +
dec edi  +
jz loc_10638BF  +
sub edi 3 +
jnz loc_1003885  +
jmp loc_10638A1  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_10517F6  +
jmp loc_10024CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
cmp [ebp+arg_0] ebx +
jz loc_1051841  +
push edi  +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_0]  +
lea edi [esi+0A4h] +
mov eax [edi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jge loc_1063867  +
mov edi [ebp+hWnd] +
cmp edi ebx +
jz loc_1051836  +
push edi  +
call sub_1006351  +
test eax eax +
jnz loc_1051849  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1009057  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+hWnd] +
push eax  +
push 4  +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1003701  +
mov ecx esi +
test eax eax +
jl loc_1063880  +
push edi  +
call sub_1009057  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+48h]  +
mov esi [esi+94h] +
mov eax [esi] +
push 5  +
push [ebp+arg_0]  +
push [ebp+hWnd]  +
push esi  +
call dword ptr [eax+18h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+hWnd] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1051840  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+4] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
xor eax eax +
inc eax  +
jmp locret_1003823  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_10518F6  +
push [ebp+arg_18]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+5Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
mov eax 80004005h +
jmp loc_10518F0  +
***
mov eax [ebp+arg_4] +
add eax 0FFFFFE00h +
cmp eax 0Eh +
ja loc_100D923  +
mov ecx esi +
mov [esi+6Ch] ebx +
call sub_1034C6B  +
push [ebp+hWndTo]  +
call ds:SetFocus  +
push 2  +
pop ecx  +
jmp loc_100D923  +
cmp [esi+6Ch] ebx +
jz loc_100D990  +
mov [esi+6Ch] ecx +
mov eax ecx +
jmp loc_100D99F  +
***
mov eax [esi] +
push 0  +
push ebx  +
push esi  +
call dword ptr [eax+5Ch]  +
mov eax [ebp+hIcon] +
mov eax [eax+24h] +
mov ecx [eax] +
push 0  +
push 1  +
push esi  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_100AA64  +
test al al +
jz loc_103F58A  +
jmp loc_100AA56  +
test al al +
jz loc_103F891  +
jmp loc_100AA56  +
***
mov eax [esi+4] +
mov ecx [eax+10h] +
call sub_1004226  +
test al 2 +
jz loc_1007E90  +
mov eax [esi+4] +
mov eax [eax+10h] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-0Ch] +
neg edx  +
sbb edx edx +
push 0Eh  +
lea ebx [esi-4] +
and edx ebx +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_1007E9A  +
***
mov dword ptr [ebp+8] 0Dh +
jmp loc_100BBEB  +
***
xor eax eax +
jmp loc_100BACD  +
***
push 2  +
push [ebp+arg_4]  +
call esi  +
mov edi eax +
jmp loc_1034DBE  +
cmp [ebp+var_4] 4 +
jnz locret_1034E3A  +
jmp loc_1034E26  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push [ebp+arg_0]  +
mov ebx ecx +
push dword ptr [ebx+0CB4h]  +
call ds:off_1002B68  +
test eax eax +
jz loc_1051A3C  +
mov ecx [eax] +
push esi  +
push edi  +
lea esi [eax+8] +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
push eax  +
mov [ebp+var_4] ecx +
movs   +
call ds:LocalFree  +
push [ebp+arg_0]  +
push dword ptr [ebx+0CB4h]  +
call ds:off_10065B4  +
push 0  +
push 0  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_4]  +
mov ecx ebx +
call sub_1034D92  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
push eax  +
call sub_1051A5B  +
xor eax eax +
inc eax  +
jmp loc_1035024  +
xor eax eax +
jmp loc_1035024  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi ecx +
mov eax [edi+0CB4h] +
test eax eax +
jz loc_1051A9B  +
push esi  +
mov esi [eax] +
test esi esi +
jz loc_1051A9A  +
dec esi  +
push esi  +
push dword ptr [edi+0CB4h]  +
call ds:off_1002B68  +
test eax eax +
jz loc_1051A70  +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp ecx [eax] +
jnz loc_1051A70  +
push esi  +
mov ecx edi +
call sub_10519E3  +
jmp loc_1051A70  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+0CB4h] +
test eax eax +
jz loc_1051AC2  +
mov esi [eax] +
test esi esi +
jnz loc_1056003  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+arg_0] +
cmp ecx [eax] +
jnz loc_1051ABA  +
jmp loc_1051AC4  +
***
push eax  +
push ecx  +
mov ecx ebx +
call sub_1051AE6  +
jmp loc_1002CE3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B24CC 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
jz loc_1051B2A  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_10520A3  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_1057087  +
mov eax [esi+0D9Ch] +
mov [ebp+arg_0] eax +
xor eax eax +
inc eax  +
mov [esi+0DA4h] ebx +
cmp ebx eax +
jz loc_1051C64  +
cmp ebx 3 +
jz loc_1051C64  +
cmp ebx 8 +
jz loc_1051C64  +
cmp ebx 2 +
jz loc_1051B65  +
cmp ebx 4 +
jz loc_1051B65  +
cmp ebx 7 +
jnz loc_1051B6C  +
and dword ptr [esi+0D9Ch] 0 +
mov edi ds:PostMessageW +
cmp ebx eax +
jz loc_1051581  +
cmp ebx 3 +
jz loc_1051581  +
cmp ebx 7 +
jz loc_1051CA6  +
cmp ebx 8 +
jnz loc_1052095  +
push eax  +
push offset aWindowslogon  +
call sub_103740C  +
xor eax eax +
cmp ebx 7 +
setz al  +
push 0  +
push eax  +
push 581h  +
push dword ptr [esi+4]  +
call edi  +
mov eax [esi+0D9Ch] +
cmp [ebp+arg_0] eax +
jz loc_1051BD7  +
xor ecx ecx +
test eax eax +
setz cl  +
push 0  +
push ecx  +
push 440h  +
push dword ptr [esi+0C04h]  +
call edi  +
cmp ebx 1 +
jz loc_1051C6F  +
cmp ebx 8 +
jz loc_1051C6F  +
cmp ebx 2 +
jz loc_1051BF3  +
cmp ebx 7 +
jnz loc_1051BFA  +
and dword ptr [esi+0DA8h] 0 +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_1051C18  +
jmp loc_100DAC9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jnz loc_1051C5F  +
push edi  +
lea edi [esi+2E0h] +
push 5  +
mov ecx edi +
call sub_1034CCA  +
push edx  +
push eax  +
mov ecx edi +
call sub_1034C92  +
cmp dword ptr [esi+330h] 0 +
pop edi  +
jnz loc_1051C5F  +
cmp dword ptr [esi+348h] 0 +
jz loc_1051C5F  +
cmp dword ptr [esi+338h] 0 +
jnz loc_1059B65  +
pop esi  +
pop ebp  +
retn 4  +
***
mov [esi+0D9Ch] eax +
jmp loc_1051B6C  +
lea ecx [esi+0DA8h] +
call sub_1034D06  +
jmp loc_1051BFA  +
***
lea eax [ebx+0D98h] +
cmp [eax] ecx +
jz loc_1002264  +
mov [eax] ecx +
mov [ebx+30h] esi +
cmp ecx esi +
jnz loc_1002264  +
mov ecx ebx +
call sub_1051D33  +
jmp loc_1002264  +
***
cmp dword ptr [esi+0C90h] 0 +
jnz loc_1051BA0  +
push eax  +
push offset aWindowslogoff  +
jmp loc_1051B9B  +
***
cmp [ebp+pcbData] eax +
jz loc_103749C  +
cmp word ptr [ebp+pvData] ax +
jz loc_103749C  +
mov eax edi +
neg eax  +
sbb eax eax +
and eax 0FFC00000h +
add eax 400000h +
or eax 292013h +
push eax  +
push 0  +
push ebx  +
call __imp_PlaySoundW  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
jmp loc_103749C  +
test byte ptr [ebp+arg_4] 2 +
jz loc_10374A4  +
jmp loc_105D075  +
***
mov edi edi +
push ecx  +
push offset sub_1051D4B  +
push 0  +
push 0  +
call ds:EnumDisplayMonitors  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_C] +
sub esp 10h +
lea eax [ebp+rcUpdate] +
push eax  +
push [ebp+hMonitor]  +
push 0  +
call sub_1034E43  +
cmp eax 1 +
jz loc_1055EFA  +
xor eax eax +
inc eax  +
leave   +
retn 10h  +
***
test [esi] ebx +
std   +
call fword ptr [edx+59h]  +
jmp eax  +
***
mov eax 1388h +
cmp esi eax +
ja loc_1058477  +
jz loc_1058455  +
sub esi 1A4h +
jz loc_104E460  +
dec esi  +
jz loc_105842B  +
sub esi 3 +
jz loc_1058349  +
sub esi 4Fh +
jnz loc_1058227  +
xor esi esi +
push esi  +
call ds:CoInitialize  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1051E64  +
push 17h  +
push esi  +
push offset stru_1051E74  +
mov [ebp+ppv] esi +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1051E2E  +
push offset MultiByteStr  +
lea ecx [ebp+arg_4] +
call sub_1051E89  +
cmp [ebp+arg_4] esi +
jz loc_1051E25  +
mov eax [ebp+ppv] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push [ebp+arg_4]  +
call ds:SysFreeString  +
call ds:__imp_CoUninitialize  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_1037081  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1037081  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
mov esi ecx +
call sub_1051EA9  +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+lpMultiByteStr] edi +
jz loc_1051F14  +
cmp [ebp+cchMultiByte] edi +
jz loc_1051F14  +
mov esi ds:MultiByteToWideChar +
push edi  +
push edi  +
push [ebp+cchMultiByte]  +
mov [ebp+var_4] edi +
push [ebp+lpMultiByteStr]  +
push edi  +
push edi  +
call esi  +
cmp [ebp+cchMultiByte] 0FFFFFFFFh +
mov ebx eax +
jnz loc_1051EDF  +
lea eax [ebx-1] +
push eax  +
push edi  +
call ds:SysAllocStringLen  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_1051F02  +
push ebx  +
push eax  +
push [ebp+cchMultiByte]  +
push [ebp+lpMultiByteStr]  +
push edi  +
push edi  +
call esi  +
cmp eax ebx +
jnz loc_105742F  +
lea ecx [ebp+var_4] +
call sub_1051F1D  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor eax eax +
jmp loc_1051F0D  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_1056639  +
pop esi  +
retn   +
***
mov dword ptr [ebx+0C90h] 1 +
jmp loc_1051798  +
test al al +
jz loc_1051754  +
jmp loc_1051776  +
cmp dword_10B24CC 0 +
jnz loc_10560A4  +
jmp loc_10517B4  +
***
mov dword ptr [esi+6E4h] 1 +
jmp loc_100DF55  +
***
xor edi edi +
push edi  +
push edi  +
mov ecx esi +
call sub_1009692  +
push 2  +
mov dword ptr [esi+0BCh] 1 +
call sub_1008635  +
mov esi [esi+94h] +
lea ecx [ebp-48h] +
push ecx  +
push offset dword_10348DC  +
mov [ebp-48h] edi +
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_1051FAA  +
mov eax [ebp-48h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp-48h] +
cmp eax edi +
jz loc_10024DE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+8] +
xor eax eax +
lea ecx [esi+100h] +
cmp [ecx] eax +
jz loc_1052002  +
mov ecx [ecx] +
mov eax [ecx] +
lea edx [ebp-8] +
push edx  +
push ecx  +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1052002  +
mov eax [esi+0FCh] +
fld  qword ptr [ebp-8] +
mov ecx [eax] +
push 0  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
push eax  +
call dword ptr [ecx+20h]  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+104h] +
push eax  +
call sub_1002BEE  +
lea edi [esi+0FCh] +
mov eax [edi] +
test eax eax +
jz loc_105205B  +
mov ecx [eax] +
fldz   +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+34h]  +
mov eax [edi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
lea eax [esi+100h] +
push eax  +
call sub_1002BEE  +
push edi  +
call sub_1002BEE  +
and dword ptr [esi+0F4h] 0 +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1003C0B  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1003C0B  +
***
xor eax eax +
retn   +
***
mov eax offset aTaskbar +
jmp loc_101E2B6  +
***
cmp ebx 9 +
jnz loc_1051BB5  +
jmp loc_10570CB  +
test al al +
jz loc_1051B09  +
jmp loc_1051B2A  +
***
mov eax offset byte_1002CD0 +
jmp loc_105115D  +
***
mov eax offset aStartpanelbott +
jmp loc_1017FD5  +
***
mov eax offset aStartpanelpriv +
jmp loc_1017FD5  +
***
mov eax offset aStartmenu_0 +
jmp locret_101A3AE  +
***
mov eax offset aTopmatch +
jmp loc_101B8C7  +
or eax 0FFFFFFFFh +
jmp loc_101B99A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_101B914  +
push 2033h  +
jmp loc_101B969  +
***
mov eax ecx +
jmp loc_1016183  +
***
test [ebp+var_3B0] 220056h +
jz loc_1011A55  +
jmp loc_106243E  +
***
mov eax offset aTaskband2_0 +
jmp loc_101DB7B  +
***
mov eax offset aStartmenu_0 +
jmp locret_1017213  +
***
mov ecx offset aStartmenuhov_0 +
jmp loc_101C897  +
***
push eax  +
mov ecx ebx +
call sub_10521F8  +
jmp loc_1002264  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ds:SHELL32_137 +
push edi  +
not eax  +
and eax 1 +
xor edi edi +
push edi  +
mov ebx ecx +
mov dword_10B10F8 eax +
call esi  +
push edi  +
cmp dword_10B10F8 edi +
jnz loc_1040762  +
lea ecx [ebx+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push 1  +
call esi  +
mov [ebx+0C74h] edi +
cmp dword_10B10F8 edi +
jnz loc_1040777  +
push edi  +
push edi  +
push 582h  +
push dword ptr [ebx+4]  +
call ds:PostMessageW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
lea eax [esi+0C74h] +
cmp [eax] ebx +
jnz loc_1009AD3  +
push edi  +
xor edi edi +
inc edi  +
mov [eax] edi +
xor eax eax +
cmp [ebp+arg_0] ebx +
setz al  +
push eax  +
push dword ptr [esi+4]  +
mov [ebp+lParam] eax +
push 453h  +
push dword ptr [esi+0C04h]  +
call ds:PostMessageW  +
cmp [ebp+arg_0] ebx +
jz loc_105236B  +
cmp dword_10B24CC ebx +
jz loc_10522CF  +
mov al byte_10B24D0 +
cmp al 4 +
jb loc_105238C  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jnz loc_1057248  +
call ds:GetForegroundWindow  +
mov ebx eax +
test ebx ebx +
jz loc_1057286  +
lea edi [esi+0D20h] +
cmp dword ptr [edi] 0 +
jnz loc_10522F3  +
push ebx  +
call ds:GetLastActivePopup  +
mov [edi] eax +
push dword ptr [edi]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_105728E  +
mov ecx esi +
call sub_1040019  +
mov [esi+0D24h] eax +
test eax eax +
jz loc_1052328  +
push 1  +
mov ecx esi +
call sub_1040043  +
mov edi eax +
neg edi  +
sbb edi edi +
inc edi  +
test edi edi +
jz loc_105233F  +
push [ebp+lParam]  +
push dword ptr [esi+4]  +
push 453h  +
push dword_10B10EC  +
call ds:PostMessageW  +
pop edi  +
jmp loc_1009AD3  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+314h] 0 +
jnz loc_105AB98  +
pop esi  +
retn   +
***
lea ecx [ebx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_100DAC9  +
***
cmp [ebp+arg_4] ebx +
jnz loc_1057295  +
mov [esi+0D20h] ebx +
lea ebx [esi+0CD4h] +
push dword ptr [ebx]  +
call sub_105239E  +
and dword ptr [ebx] 0 +
jmp loc_1052324  +
test al al +
jz loc_10522AE  +
jmp loc_10522CF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10523BB  +
push dword ptr [esi+4]  +
call ds:off_10044DC  +
push esi  +
call ds:LocalFree  +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
push 1  +
push 0  +
push offset stru_100DD10  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_103614D  +
cmp [ebp+var_4] esi +
jnz loc_1052403  +
mov eax [ebp+var_8] +
mov eax [eax] +
push eax  +
push eax  +
mov ecx [ebp+ppv] +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+30h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_103614D  +
cmp [ebp+var_4] 1 +
jnz loc_10523F5  +
jmp loc_1057070  +
***
lea ecx [ebp+var_620] +
push ecx  +
push dword ptr [eax]  +
mov ecx esi +
call sub_1010599  +
test eax eax +
jl loc_10361F3  +
mov eax 104h +
push eax  +
lea ecx [ebp+var_20C] +
push ecx  +
push eax  +
lea ecx [ebp+var_414] +
push ecx  +
push eax  +
lea eax [ebp+var_61C] +
push eax  +
mov eax [ebp+var_62C] +
push edi  +
push dword ptr [eax]  +
mov ecx esi +
call sub_10240E5  +
test eax eax +
jl loc_10524EB  +
push edi  +
lea eax [ebp+var_414] +
push eax  +
push [ebp+var_620]  +
mov ecx esi +
call sub_105253A  +
test eax eax +
jz loc_10524EB  +
mov eax [esi+94h] +
push [ebp+var_620]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+7Ch]  +
mov eax [ebp+var_620] +
mov ecx [eax] +
lea edx [ebp+var_61C] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
mov eax [ebp+var_620] +
mov ecx [eax] +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+7Ch]  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push edi  +
push edi  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push 0FFFFFFFEh  +
push edi  +
push eax  +
call dword ptr [ecx+44h]  +
push edi  +
push [ebp+var_620]  +
mov ecx esi +
call sub_100A5CB  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jnz loc_1063EBC  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10361F3  +
***
xor esi esi +
inc esi  +
jmp loc_1010655  +
***
lea eax [ecx+7Ch] +
cmp dword ptr [eax] 0 +
jz loc_10525F1  +
xor eax eax +
retn   +
***
and [ebp+var_8] 0 +
cmp [ebp+arg_4] 0 +
jz loc_10105FF  +
push esi  +
push [ebp+arg_4]  +
call ds:__imp_IUnknown_Set  +
jmp loc_10105FF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
xor edi edi +
push esi  +
mov ebx ecx +
inc edi  +
call dword ptr [eax+5Ch]  +
test eax eax +
jz loc_1063BA9  +
mov eax [esi] +
push esi  +
call dword ptr [eax+5Ch]  +
push eax  +
push [ebp+arg_4]  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_1063BA9  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
lea esi [edi+4] +
push dword ptr [esi]  +
xor ebx ebx +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+0Ch] +
and [esi] ebx +
test eax eax +
jz loc_10525BA  +
cmp [eax] bx +
jz loc_10525BA  +
push esi  +
push eax  +
call ds:__imp_SHStrDupW  +
mov ebx eax +
test ebx ebx +
jl loc_10525BA  +
lea ecx [edi-8] +
call sub_100E8E7  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push esi  +
mov esi [ebp+8] +
jz loc_10646F1  +
lea eax [esi+0CCh] +
cmp dword ptr [eax] 0 +
jnz loc_10646E0  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
push eax  +
push offset riid  +
push 3  +
push 0  +
push offset rclsid  +
call ds:__imp_CoCreateInstance  +
retn   +
***
push 206h  +
mov [ebp+SubKey] ax +
lea eax [ebp-20Ah] +
push esi  +
push eax  +
mov [ebp+var_63C] esi +
call memset  +
add esp 0Ch +
lea eax [ebp+ftLastWriteTime] +
push eax  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
push esi  +
push [ebp+phkResult]  +
mov [ebp+cbName] 104h +
call ds:RegEnumKeyExW  +
test eax eax +
jz loc_105266D  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
jmp loc_100ABB7  +
lea eax [ebp+var_630] +
push eax  +
push 20019h  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+phkResult]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1052747  +
push 206h  +
mov [ebp+szFile] ax +
lea eax [ebp-412h] +
push esi  +
push eax  +
call memset  +
mov edi ds:RegQueryValueExW +
add esp 0Ch +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+szFile] +
push eax  +
push esi  +
push esi  +
push offset aIconpath  +
push [ebp+var_630]  +
mov [ebp+cbData] 208h +
call edi  +
test eax eax +
jnz loc_105273B  +
lea eax [ebp+szFile] +
push eax  +
mov [ebp+hIcon] esi +
call ds:PathParseIconLocationW  +
push 1  +
lea ecx [ebp+hIcon] +
push ecx  +
push esi  +
push eax  +
lea eax [ebp+szFile] +
push eax  +
call ds:ExtractIconExW  +
cmp [ebp+hIcon] esi +
jz loc_105273B  +
push [ebp+var_64C]  +
push [ebp+hIcon]  +
call ds:SHLWAPI_548  +
test eax eax +
jnz loc_10632F5  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
push [ebp+var_630]  +
call ds:RegCloseKey  +
inc [ebp+var_63C]  +
lea eax [ebp+ftLastWriteTime] +
push eax  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+var_63C]  +
jmp loc_1052642  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+0A8h] +
test eax eax +
jz loc_1052819  +
mov ebx [eax] +
xor esi esi +
test ebx ebx +
jle loc_10527E6  +
mov eax [edi+0A8h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
and [ebp+var_8] 0 +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_10527E1  +
and [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_10527ED  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc esi  +
cmp esi ebx +
jl loc_10527A5  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
cmp eax [ebp+arg_0] +
mov eax [ebp+var_4] +
mov ecx [eax] +
jz loc_1052813  +
push 0  +
push 1  +
push eax  +
call dword ptr [ecx+5Ch]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10527C7  +
push 3  +
push 3  +
jmp loc_1052804  +
xor ebx ebx +
jmp loc_105279F  +
***
push edi  +
push edi  +
push edi  +
push ebx  +
mov ecx esi +
call sub_100B0DF  +
test eax eax +
jl loc_1009915  +
push ebx  +
mov ecx esi +
call sub_100B82A  +
jmp loc_1009915  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1052885  +
cmp [ebp+arg_0] ebx +
jz loc_1052885  +
push edi  +
push [ebp+arg_0]  +
push 0FFFFFFFFh  +
push eax  +
call ds:off_10062D4  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1052884  +
push ebx  +
push edi  +
push dword ptr [esi+10h]  +
call ds:off_10084F8  +
push edi  +
push dword ptr [esi+10h]  +
mov ebx eax +
call ds:off_1006840  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+lpStart] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10528A1  +
sub eax edx +
push 0Ah  +
sar eax 1 +
push edi  +
mov esi eax +
call ds:__imp_StrChrW  +
test eax eax +
jnz loc_1059089  +
push esi  +
push [ebp+lpStr2]  +
push edi  +
call ds:StrCmpNIW  +
neg eax  +
sbb eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 708h +
push ecx  +
push [ebp+lpStart]  +
call sub_1052892  +
pop ebp  +
retn 4  +
***
push [ebp+hIcon]  +
call ds:DestroyIcon  +
jmp loc_1046EAF  +
***
push 40h  +
pop eax  +
jmp loc_1023496  +
test al al +
jz loc_10234D6  +
jmp loc_10234A6  +
***
xor edi edi +
cmp [ebp+arg_8] edi +
jz loc_1052978  +
cmp [ebp+hIcon] edi +
jnz loc_1052932  +
push [ebp+arg_8]  +
mov ecx [ebp+var_10] +
call sub_1052842  +
mov [ebp+hIcon] eax +
mov eax [ebx+428h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_105294F  +
push edi  +
push eax  +
mov eax [ebp+var_10] +
push dword ptr [eax+10h]  +
call ds:off_10084F8  +
mov esi eax +
cmp [ebp+hIcon] 0 +
jz loc_1052965  +
test esi esi +
jz loc_1052978  +
push esi  +
push [ebp+hIcon]  +
call ds:SHLWAPI_548  +
mov edi eax +
test esi esi +
jz loc_1052970  +
push esi  +
call ds:DestroyIcon  +
test edi edi +
jnz loc_102275E  +
cmp [ebp+lpStart] 0 +
jz loc_102272E  +
lea eax [ebx+218h] +
push eax  +
push [ebp+lpStart]  +
call sub_1052892  +
test eax eax +
jnz loc_102275E  +
add ebx 45Ch +
push ebx  +
push [ebp+lpStart]  +
call sub_1052892  +
test eax eax +
jz loc_102272E  +
jmp loc_102275E  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
jmp loc_102276E  +
xor ecx ecx +
jmp loc_10226EB  +
***
dec edi  +
jns loc_104712C  +
jmp loc_1047155  +
xor eax eax +
jmp loc_1047125  +
xor eax eax +
jmp loc_1047165  +
***
lea eax [ebp+dwProcessId] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowThreadProcessId  +
lea eax [ebp+var_24] +
push eax  +
mov eax [ebp+lpdwProcessId] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:GetWindowThreadProcessId  +
mov eax [ebp+dwProcessId] +
cmp eax [ebp+var_24] +
jnz loc_100E704  +
jmp loc_1063843  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+0Ch] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jz loc_105D1EE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1052A1B  +
***
cmp edi 0FFFFFFFCh +
jnz loc_1003CD0  +
lea ebx [esi+128h] +
cmp dword ptr [ebx] 0 +
jz loc_1042F64  +
mov ebx [ebx] +
test ebx ebx +
jz loc_1003CD0  +
and dword ptr [ebp-58h] 0 +
mov eax [ebx] +
lea ecx [ebp-58h] +
push ecx  +
mov esi offset stru_1003410 +
push esi  +
push ebx  +
call dword ptr [eax]  +
test eax eax +
jl loc_1003CD0  +
push dword ptr [ebp-58h]  +
push dword ptr [ebp-48h]  +
push esi  +
call LresultFromObject  +
mov [ebp-4Ch] eax +
mov eax [ebp-58h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1003CBC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 3 +
jnz loc_1052C74  +
cmp [ebp+arg_C] 0 +
jz loc_1052C74  +
mov ecx [ebp+arg_14] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_1052B05  +
and dword ptr [ecx] 0 +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1052B2C  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
cmp [ebp+arg_C] 0FFFFFFFCh +
jnz loc_1010B02  +
jmp loc_105AD8E  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_1052BDE  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
push 4  +
pop edx  +
mov ecx edx +
mov edi offset dword_100E7B4 +
mov esi eax +
xor ebx ebx +
cmps   +
jz loc_1052BF8  +
mov ecx edx +
mov edi offset stru_1052A44 +
mov esi eax +
xor ebx ebx +
cmps   +
jz loc_1052BF8  +
mov ecx edx +
mov edi offset stru_103639C +
mov esi eax +
xor ebx ebx +
cmps   +
jz loc_1052BF8  +
mov ecx edx +
mov edi offset dword_1052BE8 +
mov esi eax +
xor ebx ebx +
cmps   +
jz loc_105D204  +
mov esi eax +
mov ecx edx +
mov edi offset dword_100E7A4 +
xor eax eax +
cmps   +
jz loc_10033C6  +
mov eax 80004002h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov esi [ebp+8] +
mov eax [ebp+10h] +
mov [eax] esi +
jmp loc_1052B63  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor ebx ebx +
lea edi [esi+6Ch] +
cmp [edi] ebx +
jz loc_1042E70  +
mov esi [esi+70h] +
test esi esi +
jz loc_1052C3E  +
push esi  +
push [ebp+wParam]  +
push offset stru_103639C  +
call LresultFromObject  +
mov ecx [ebp+arg_4] +
xor ebx ebx +
mov [ecx] eax +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+24h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov eax 80070057h +
jmp loc_1052B05  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+14h] 0 +
and dword ptr [esi+18h] 0 +
mov dword ptr [esi] offset off_1010808 +
mov dword ptr [esi+4] offset off_1052A54 +
mov dword ptr [esi+8] offset off_1034D4C +
mov dword ptr [esi+0Ch] 1 +
mov [esi+10h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax esi +
sub eax 405h +
jz loc_105B3D9  +
dec eax  +
jz loc_1047B95  +
dec eax  +
jnz loc_105B32E  +
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_1052D3F  +
jmp loc_100DAC9  +
***
mov [esi+1Ch] ebx +
jmp sub_10367DB  +
mov ecx [ebp+var_4] +
jmp loc_10030BC  +
***
push ebx  +
mov ecx edi +
call sub_10342AE  +
push dword ptr [esi+14h]  +
lea edi [esi+0BFCh] +
push ebx  +
mov ebx ds:SendMessageW +
push 403h  +
push dword ptr [edi]  +
call ebx  +
push 0  +
push dword ptr [esi+14h]  +
push 407h  +
push dword ptr [edi]  +
call ebx  +
jmp loc_1003197  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
mov ecx [ebp+arg_0] +
lea eax [ebx+374h] +
push esi  +
push edi  +
cmp [eax] ecx +
jz loc_1052D93  +
xor edi edi +
mov [ebx+378h] edi +
mov [eax] ecx +
cmp ecx edi +
jnz loc_1052D70  +
cmp [ebx+338h] edi +
jnz loc_105A777  +
push 7  +
push dword ptr [ebx+10h]  +
mov dword ptr [ebx+90h] 1 +
call ds:KillTimer  +
mov esi [ebx+338h] +
cmp esi edi +
jnz loc_105A797  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
call ds:GetForegroundWindow  +
mov esi ds:GetWindowThreadProcessId +
push 0  +
push [ebp+hWnd]  +
mov edi eax +
call esi  +
push 0  +
push edi  +
mov ebx eax +
call esi  +
cmp ebx eax +
jnz loc_105455C  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+34h]  +
call EnumFunc  +
test eax eax +
jnz loc_1003080  +
mov eax [ebp+var_8] +
jmp loc_1003095  +
***
xor eax eax +
inc eax  +
jmp loc_10031D6  +
***
lea eax [ebp-24h] +
push eax  +
push ecx  +
call ds:GetWindowRect  +
test eax eax +
jz loc_1003174  +
push ebx  +
push dword ptr [ebp+8]  +
lea eax [ebp-24h] +
mov [ebp-14h] eax +
call ds:MonitorFromWindow  +
mov [ebp-10h] eax +
jmp loc_1003174  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aLivepreviewwin  +
push [ebp+hWnd]  +
call ds:GetPropW  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov [esi+4] edi +
xor eax eax +
jmp loc_1003239  +
cmp ecx eax +
jz loc_1003224  +
jmp loc_1003236  +
***
push 0FFFFFFECh  +
push edi  +
call ds:GetWindowLongW  +
test al 8 +
jnz loc_100917A  +
jmp loc_106350C  +
and [ebp+var_1C] 0 +
jmp loc_100CEBD  +
mov [ebp+var_18] edi +
jmp loc_10090D5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
lea ecx [esi+0AF8h] +
call sub_1052EC8  +
test eax eax +
jnz loc_1052EBE  +
lea eax [ebp+hWnd] +
push eax  +
push dword ptr [esi+0D08h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jge loc_1055D38  +
xor eax eax +
pop esi  +
leave   +
retn   +
xor eax eax +
inc eax  +
jmp loc_1052EBB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+hWnd] +
push eax  +
push dword ptr [ecx+80h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_1052EF3  +
push [ebp+hWnd]  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_1055D33  +
xor eax eax +
leave   +
retn   +
***
mov eax edi +
sub eax 465h +
jz loc_1035E06  +
dec eax  +
jz loc_104EADC  +
dec eax  +
jz loc_104E82F  +
dec eax  +
jnz loc_1035794  +
lea eax [esi+1C0h] +
mov ecx ebx +
cmp ecx [eax] +
jz loc_1035812  +
push 1  +
push 0  +
push dword ptr [ebp+8]  +
mov [eax] ecx +
call ds:InvalidateRect  +
jmp loc_1035812  +
***
push 0FFFFFFECh  +
push edi  +
call ds:GetWindowLongW  +
test al 8 +
jnz loc_100256B  +
jmp loc_10089A5  +
***
call sub_1052F76  +
test eax eax +
jnz loc_10342D6  +
mov edi [ebx+1Ch] +
neg edi  +
sbb edi edi +
and edi 3 +
dec edi  +
dec edi  +
jmp loc_10342D6  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
call ds:GetForegroundWindow  +
test eax eax +
jz loc_1052F9B  +
cmp eax [esi+4] +
jz loc_1052FAB  +
push 4  +
push eax  +
call ds:GetWindow  +
cmp eax [esi+4] +
jz loc_1052FAB  +
mov ecx esi +
call sub_1052E89  +
test eax eax +
jnz loc_1052FAB  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
xor edi edi +
inc edi  +
jmp loc_1052FA6  +
***
call sub_1053022  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
push eax  +
push eax  +
push 4  +
push eax  +
push eax  +
push [ebp+hWnd]  +
mov esi ecx +
call sub_1003701  +
test eax eax +
jl loc_1053048  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_100B7E4  +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ebp+var_C] +
lea eax [esi+0A4h] +
cmp ecx [eax] +
jz loc_100B165  +
mov eax [eax] +
push [ebp+hWnd]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_100B165  +
***
mov eax [ebp+var_C] +
mov ecx [eax] +
push 1  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push 0FFFFFFFFh  +
lea eax [esi+20Ch] +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jz loc_100B4A3  +
jmp loc_100B2DA  +
***
cmp edi 8000000Ah +
jz loc_100AEE0  +
push dword ptr [ebp+dwProcessId]  +
push offset aPid08x  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
call sub_10343CA  +
mov edi eax +
add esp 10h +
cmp edi ebx +
jl loc_100AF2D  +
mov [ebp+arg_8] 1 +
jmp loc_100AEE0  +
cmp eax ebx +
jl loc_100AEF5  +
jmp loc_100AF16  +
***
mov dword ptr [esi+3Ch] 1 +
jmp loc_100E933  +
***
push dword ptr [edi+4]  +
call ds:lstrlenW  +
mov ebx eax +
add ebx 3 +
lea eax [ebx+ebx] +
push eax  +
call ds:__imp_CoTaskMemAlloc  +
mov [esi] eax +
test eax eax +
jz loc_100484B  +
push dword ptr [edi+4]  +
push ebx  +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_102AC4B  +
push offset a0  +
push ebx  +
push dword ptr [esi]  +
call sub_1010E3B  +
test eax eax +
jl loc_102AC4B  +
mov eax [esi] +
jmp loc_10364A8  +
***
mov eax [ebx+10h] +
mov eax [eax+38h] +
mov ecx [eax] +
lea edx [ebp+var_228] +
push edx  +
push 1  +
push 0  +
push dword ptr [ebx+14h]  +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_1005263  +
***
push [ebp+var_8]  +
mov eax [edi+94h] +
push [ebp+var_C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_100B2F4  +
***
push esi  +
lea esi [ecx+8] +
push esi  +
push offset stru_1003410  +
push [ebp+idObject]  +
push [ebp+hwnd]  +
call CreateStdAccessibleObject  +
test eax eax +
jl loc_10531BE  +
mov eax [esi] +
mov ecx [eax] +
push edi  +
push offset dword_1003430  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jl loc_105EA00  +
mov eax edi +
pop esi  +
jmp loc_103C4BB  +
***
push ecx  +
push edx  +
push eax  +
push offset OLEACC_dll_import_table  +
call near ptr byte_1023C28+1  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+hWnd]  +
call ds:IsWindow  +
test eax eax +
jz locret_105328B  +
cmp [ebp+arg_8] 0 +
jl locret_105328B  +
push 0  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
test eax eax +
jz locret_105328B  +
mov eax [eax+24h] +
xor ecx ecx +
and al 10h +
cmp al 10h +
setnz cl  +
neg ecx  +
sbb ecx ecx +
and [ebp+var_4] 0 +
and ecx 0FFFFFFFDh +
add ecx 3 +
mov eax ecx +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_100670C  +
push eax  +
call ds:SHELL32_727  +
test eax eax +
jl loc_105327E  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx+94h]  +
push [ebp+lParam]  +
movzx eax word ptr [ebp+arg_8] +
or eax 10000h +
push eax  +
push 442h  +
push [ebp+hWnd]  +
call ds:PostMessageW  +
mov eax [ebp+var_4] +
test eax eax +
jz locret_105328B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 10h  +
***
push edi  +
push ebx  +
mov ecx esi +
call sub_10532A2  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push esi  +
push dword ptr [ebx+0A8h]  +
call ds:off_100407C  +
cmp eax 0FFFFFFFFh +
jz loc_1053300  +
mov eax [esi] +
push edi  +
lea ecx [ebp+arg_4] +
push ecx  +
xor edi edi +
push edi  +
push esi  +
call dword ptr [eax+38h]  +
cmp [ebp+arg_4] 3 +
jl loc_10532FF  +
push [ebp+arg_0]  +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+44h]  +
mov eax [esi] +
push 3  +
push edi  +
push esi  +
call dword ptr [eax+3Ch]  +
push edi  +
push esi  +
mov ecx ebx +
call sub_1006489  +
mov eax [ebx+94h] +
mov ecx [eax] +
push edi  +
push edi  +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax [esi+0Ch] +
mov ecx [eax] +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+70h]  +
mov dword ptr [ebp-4] 1 +
jmp loc_100ACC6  +
***
mov eax [ebp+0Ch] +
mov ecx [eax] +
mov ebx 10000h +
push ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+70h]  +
jmp loc_1006438  +
***
cmp eax 8000000Ah +
jz loc_100BCF3  +
jmp loc_100BD00  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008DEA  +
test [ebp+arg_0] 1 +
jz loc_1053363  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
and dword ptr [ebp-214h] 0 +
push 34h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_102AB68  +
movzx edx di +
push edx  +
push dword ptr [esi+18h]  +
mov ecx eax +
push dword ptr [ebx+4]  +
call sub_10533E5  +
push eax  +
lea ecx [ebp-214h] +
call sub_1008EBC  +
mov esi [ebp-214h] +
test esi esi +
jz loc_100BD6A  +
mov eax [ebx+74h] +
mov ecx [eax] +
push 10000000h  +
push ebx  +
push offset loc_10533D0  +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
jmp loc_100BD6A  +
***
push ds  +
inc ebx  +
aam  6Fh +
inc esp  +
retn 4E72h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_8] +
mov [esi+28h] eax +
mov eax [ebp+arg_0] +
mov [esi+2Ch] eax +
mov eax [ebp+arg_4] +
mov [esi+30h] eax +
mov dword ptr [esi] offset off_1053428 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+28h] +
push ecx  +
push ecx  +
push dword ptr [eax+30h]  +
push dword ptr [eax+2Ch]  +
call sub_10531FA  +
xor eax eax +
pop ebp  +
retn 4  +
***
cmp [esi+8] ecx +
jz loc_100BD0C  +
xor eax eax +
push 206h  +
mov [ebp-20Ch] ax +
push ecx  +
lea eax [ebp-20Ah] +
push eax  +
call memset  +
add esp 0Ch +
push dword ptr [esi+8]  +
mov dword ptr [ebp-210h] 208h +
call ds:__imp_PathIsNetworkPathW  +
test eax eax +
jnz loc_10534DB  +
lea eax [ebp-214h] +
push eax  +
push 0  +
push dword ptr [esi+8]  +
push 2  +
push 42h  +
call ds:AssocQueryKeyW  +
test eax eax +
jge loc_1053509  +
mov eax [esi+8] +
cmp word ptr [eax] 2Ah +
jz loc_100BD0C  +
push 0  +
push 0  +
push eax  +
call ds:Shell_GetCachedImageIndexW  +
test eax eax +
jl loc_100BD0C  +
movzx edi ax +
or edi 10000h +
jmp loc_100BD0C  +
***
lea eax [ebp-210h] +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
push 0  +
push offset aTaskbargroupic  +
push 0  +
push dword ptr [ebp-214h]  +
call ds:__imp_SHGetValueW  +
test eax eax +
jz loc_10632B8  +
push dword ptr [ebp-214h]  +
call ds:RegCloseKey  +
cmp edi 0FFFFFFFEh +
jnz loc_100BD0C  +
jmp loc_10534DB  +
***
mov eax [ebp+0Ch] +
jmp loc_105357D  +
xor eax eax +
jmp loc_10045CC  +
***
mov eax [ebp+10h] +
inc dword ptr [eax]  +
jmp loc_10045FD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+30h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
add eax 30h +
push eax  +
call ds:__imp_IUnknown_Set  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov eax [edi] +
push edi  +
call dword ptr [eax+90h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+74h]  +
cmp eax 1 +
jg loc_10077CF  +
jmp loc_1007920  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
add eax 2Ch +
push eax  +
call ds:__imp_IUnknown_Set  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
xor esi esi +
cmp [edi+2Ch] esi +
jnz loc_10537C5  +
push dword ptr [edi+4]  +
call sub_1006BBB  +
cmp eax esi +
jz loc_1053634  +
push ebx  +
push eax  +
call sub_105388E  +
mov ebx eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
mov esi eax +
sub esi ebx +
pop ebx  +
neg esi  +
sbb esi esi +
inc esi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aWindowmetrics  +
push ebx  +
call edi  +
test eax eax +
jnz loc_1021028  +
jmp loc_1021021  +
***
push offset aPolicy  +
push edi  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_1020ECD  +
jmp loc_104DE3C  +
***
push offset aWindowmetrics  +
push edi  +
call esi  +
test eax eax +
jnz loc_1020D1D  +
jmp loc_1020D0A  +
push offset aWindows  +
push edi  +
call esi  +
test eax eax +
jz loc_1020D39  +
push offset aVisualeffects  +
push edi  +
call esi  +
test eax eax +
jz loc_1020D39  +
push offset aTraysettings  +
push edi  +
call esi  +
test eax eax +
jnz loc_1020DA7  +
jmp loc_1020D39  +
***
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+7Ch]  +
jmp loc_100CDD1  +
***
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+84h]  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [esi+2Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
jmp loc_100CAAD  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test al 40h +
jnz loc_1053792  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test al al +
jns loc_100CAB7  +
push edi  +
call ds:IsIconic  +
test eax eax +
jnz loc_100CAB7  +
mov eax [esi] +
push esi  +
call dword ptr [eax+94h]  +
test eax eax +
jz loc_100CAB7  +
mov ebx edi +
jmp loc_100CAB7  +
***
mov eax [edi] +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
mov [ebp+0Ch] eax +
call dword ptr [eax+98h]  +
push eax  +
mov eax [ebp+0Ch] +
push edi  +
call dword ptr [eax+30h]  +
push 0  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi-10h]  +
call ds:InvalidateRect  +
jmp loc_100CCED  +
***
mov eax [edi+2Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8Ch]  +
mov esi eax +
lea eax [edi-8] +
neg eax  +
sbb eax eax +
and eax edi +
sub esi eax +
jmp loc_105362F  +
***
call sub_1008F6E  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_1009057  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+8] +
mov eax [ebx+10h] +
test eax eax +
jz loc_1053831  +
mov eax [eax] +
push edi  +
lea edi [eax-1] +
test edi edi +
jl loc_1053877  +
push esi  +
jmp loc_105383B  +
xor eax eax +
jmp loc_1053826  +
***
test eax eax +
jz loc_1053866  +
jmp loc_1053873  +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+90h]  +
test eax eax +
jz loc_1053873  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_105385C  +
cmp eax [ebp+0Ch] +
jnz loc_1053873  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_10641DC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
push dword ptr [ebp+18h]  +
call dword ptr [ebp+14h]  +
dec edi  +
jns loc_105383B  +
pop esi  +
pop edi  +
pop ebx  +
jmp loc_100CEF9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_10066D0  +
push [ebp+arg_0]  +
xor esi esi +
and [ebp+var_4] esi +
call SHGetPropertyStoreForWindow  +
test eax eax +
jl loc_10538E5  +
push edi  +
xor eax eax +
lea edi [ebp+pvar] +
stos   +
stos   +
stos   +
lea edx [ebp+pvar] +
push edx  +
stos   +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_10538FC  +
push eax  +
call dword ptr [ecx+14h]  +
pop edi  +
test eax eax +
jl loc_10538DC  +
cmp [ebp+pvar.vt] 13h +
jnz loc_10538DC  +
mov esi dword ptr [ebp+pvar.anonymous_0] +
lea eax [ebp+pvar] +
push eax  +
call PropVariantClear  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_10538F2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
push edi  +
lea edi [eax+70h] +
movs   +
movs   +
push 8  +
movs   +
push 8  +
push eax  +
movs   +
call dword ptr [ecx+5Ch]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov ecx esi +
call sub_1053967  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
push edi  +
xor edi edi +
mov ebx ecx +
mov [ebp+dwProcessId] esi +
cmp [ebp+arg_4] esi +
jz loc_105399C  +
lea eax [ebp+dwProcessId] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowThreadProcessId  +
push esi  +
push [ebp+dwProcessId]  +
push [ebp+arg_4]  +
call ds:SHLWAPI_510  +
mov edi eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 4  +
push esi  +
push esi  +
push [ebp+hWnd]  +
mov ecx ebx +
call sub_1003701  +
mov ebx eax +
cmp ebx esi +
jl loc_10539D7  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0D4h]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi esi +
jz loc_10539E2  +
push edi  +
call ds:SHUnlockShared  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
push [ebp+hIcon]  +
call ds:DestroyIcon  +
jmp loc_100A832  +
***
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+80h]  +
jmp loc_1053E17  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov al [ebp+0Ch] +
xor ecx ecx +
test al 1 +
jnz loc_10641AE  +
test al 2 +
jz loc_1053A26  +
or ecx 20h +
test al 4 +
jnz loc_10641B6  +
test al 8 +
jz loc_1053A38  +
or ecx 80h +
mov eax [ebp+8] +
mov edx [eax] +
push ecx  +
push 0F0h  +
push eax  +
call dword ptr [edx+5Ch]  +
xor eax eax +
pop ebp  +
retn 8  +
***
call sub_1053A93  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov ebx 80070057h +
cmp [ebp+hWnd] edi +
jz loc_1053B04  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
push edi  +
push edi  +
push [ebp+hWnd]  +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
call sub_1003701  +
mov ebx eax +
cmp ebx edi +
jl loc_1053AF2  +
push [ebp+hWnd]  +
call sub_1053B12  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+88h]  +
push [ebp+var_4]  +
mov eax [esi+94h] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aItasklist_tabp  +
push [ebp+hWnd]  +
call ds:GetPropW  +
pop ebp  +
retn 4  +
***
call sub_1053B6E  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
mov [ebp+var_8] 80070057h +
cmp [ebp+arg_0] esi +
jz loc_1053C5C  +
push ebx  +
push [ebp+arg_0]  +
call sub_105388E  +
mov ebx eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push 4  +
push esi  +
push esi  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_1003701  +
test eax eax +
jl loc_1053C5B  +
mov [ebp+var_C] esi +
mov [ebp+arg_0] esi +
mov [ebp+var_8] esi +
cmp ebx esi +
jz loc_1053BDD  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 4  +
push esi  +
push esi  +
push ebx  +
mov ecx edi +
call sub_1003701  +
cmp eax esi +
mov [ebp+var_8] eax +
jl loc_1053C37  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8Ch]  +
mov ebx eax +
mov eax [ebp+arg_0] +
cmp ebx eax +
jz loc_1053C37  +
cmp eax esi +
jz loc_1053C14  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
cmp eax [ebp+var_4] +
jnz loc_1053C37  +
mov eax [ebp+arg_0] +
cmp eax esi +
jz loc_1053C14  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+80h]  +
push [ebp+arg_0]  +
mov eax [edi+94h] +
mov ecx [eax] +
push ebx  +
push [ebp+var_4]  +
push [ebp+var_10]  +
push eax  +
call dword ptr [ecx+20h]  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_10] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
pop ebx  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov ecx esi +
call sub_1053C98  +
jmp loc_10024DE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov ebx ecx +
mov edi 80070057h +
cmp [ebp+hWnd] esi +
jz loc_1053D67  +
push [ebp+hWnd]  +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
mov [ebp+var_10] esi +
mov [ebp+var_14] esi +
call sub_1006BBB  +
cmp eax esi +
jz loc_1053D43  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+var_C] +
push ecx  +
push 4  +
push esi  +
push esi  +
push eax  +
mov ecx ebx +
call sub_1003701  +
mov edi eax +
cmp edi esi +
jl loc_1053D43  +
cmp [ebp+arg_4] esi +
jnz loc_1053EC9  +
cmp edi esi +
jl loc_1053D43  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push 4  +
push esi  +
push esi  +
push [ebp+hWnd]  +
mov ecx ebx +
call sub_1003701  +
mov edi eax +
cmp edi esi +
jge loc_1063528  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+hWnd]  +
mov ecx ebx +
call sub_100B0DF  +
mov edi eax +
lea eax [ebp+var_18] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_10] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_14] +
push eax  +
call sub_1002BEE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
lea ecx [ebp+var_10] +
push ecx  +
lea ecx [ebp+var_14] +
push ecx  +
push 4  +
push ebx  +
push ebx  +
push eax  +
mov ecx edi +
mov [ebp+var_14] ebx +
call sub_1003701  +
mov [ebp+var_4] eax +
mov eax [ebp+var_14] +
cmp eax [ebp+hWnd] +
jnz loc_1063606  +
lea eax [ebp+var_14] +
push eax  +
call sub_1002BEE  +
jmp loc_100B3A4  +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+78h]  +
mov [ebp+var_4] eax +
jmp loc_100B42B  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+hWnd] +
mov eax [esi] +
push esi  +
mov [ebp+var_4] 80070057h +
call dword ptr [eax+90h]  +
test eax eax +
jnz loc_1053E18  +
push edi  +
mov edi [ebp+arg_4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+90h]  +
test eax eax +
jnz loc_1053E17  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+94h]  +
lea ecx [esi-8] +
neg ecx  +
sbb ecx ecx +
and ecx esi +
push ecx  +
mov ebx eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+84h]  +
inc dword ptr [esi+34h]  +
test ebx ebx +
mov [ebp+var_4] eax +
pop ebx  +
jnz loc_10539F9  +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 8  +
push esi  +
call dword ptr [eax+98h]  +
jmp loc_100619C  +
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
push [ebp+arg_4]  +
lea ebx [esi-14h] +
mov ecx ebx +
call sub_1005D55  +
mov edi eax +
test edi edi +
jz loc_1053E69  +
mov eax [esi+138h] +
test eax eax +
jnz loc_1064BD0  +
cmp [esi+0D0h] edi +
jz loc_1064BEE  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 14h  +
mov [ebp+hWnd] ebx +
jmp loc_100970D  +
mov [ebp+var_18] edi +
cmp edi ebx +
jz loc_10096CB  +
jmp loc_10096DB  +
mov [ebp+var_14] ebx +
jmp loc_100E6D1  +
mov [ebp+var_8] 1 +
jmp loc_100FC43  +
xor ecx ecx +
jmp loc_100FBB7  +
xor eax eax +
jmp loc_100FBC7  +
xor ecx ecx +
jmp loc_100FBDF  +
xor eax eax +
jmp loc_100FBEF  +
mov [ebp+var_4] edi +
jmp loc_100FC0A  +
xor eax eax +
jmp loc_100FC53  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push 4  +
push esi  +
push esi  +
push [ebp+arg_4]  +
mov ecx ebx +
call sub_1003701  +
mov edi eax +
jmp loc_1053CF0  +
***
push eax  +
call sub_10080DF  +
jmp loc_10076AE  +
***
test al al +
jz loc_10076D1  +
jmp loc_10076F2  +
***
lea ecx [ebp+var_18] +
push ecx  +
lea ecx [ebp+var_14] +
push ecx  +
push [ebp+var_10]  +
mov ecx edi +
push [ebp+arg_0]  +
mov [ebp+var_14] ebx +
push eax  +
call sub_1053F39  +
mov [ebp+var_4] eax +
mov eax [ebp+var_14] +
cmp eax [ebp+arg_0] +
jnz loc_1063612  +
lea eax [ebp+var_14] +
push eax  +
call sub_1002BEE  +
jmp loc_100B3BB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_10] +
push edi  +
xor edi edi +
mov [ebx] edi +
mov [eax] edi +
cmp [ebp+arg_0] edi +
jz loc_1062F8C  +
push ebx  +
push eax  +
push 4  +
push edi  +
push edi  +
push [ebp+arg_0]  +
call sub_1003701  +
mov [ebp+var_C] eax +
mov eax [ebp+var_C] +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
push [ebp+hDC]  +
mov ecx ebx +
call sub_1053F89  +
jmp loc_1004EA7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_8] +
movzx eax byte ptr [esi+54h] +
push edi  +
mov edi ds:MulDiv +
mov ebx 0FFh +
push ebx  +
push eax  +
movzx eax byte ptr [esi+82h] +
push eax  +
mov [ebp+var_4] ecx +
call edi  +
mov [ebp+arg_8] al +
xor eax eax +
mov [ebp+var_8] eax +
cmp [esi+64h] eax +
jz loc_103F35C  +
push ds:nDenominator  +
mov [ebp+var_8] 1 +
push ebx  +
push dword ptr [esi+84h]  +
call edi  +
mov [ebp+arg_8] al +
cmp [ebp+arg_8] 0 +
jbe loc_10540A0  +
cmp [ebp+var_8] 0 +
mov ecx [ebp+var_4] +
push esi  +
jz loc_104437C  +
movzx eax word ptr [esi+0Ch] +
or eax 0FFFE0000h +
push eax  +
call sub_103F2AE  +
movsx ebx ax +
cmp dword ptr [esi] 0 +
jz loc_1044359  +
mov eax [esi+34h] +
sub eax [esi+10h] +
xor edi edi +
inc edi  +
add ebx eax +
mov [ebp+var_C] edi +
cmp [esi+8] edi +
jnz loc_105403D  +
mov eax [esi+0Ch] +
xor ecx ecx +
cmp eax [esi+24h] +
setz cl  +
mov edi ecx +
xor ecx ecx +
cmp eax [esi+28h] +
setz cl  +
mov [ebp+var_C] ecx +
lea eax [esi+10h] +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:CopyRect  +
xor eax eax +
cmp edi eax +
jz loc_105405C  +
cmp [esi] eax +
jz loc_1044364  +
inc [ebp+rcSrc.left]  +
cmp [ebp+var_C] eax +
jz loc_105406C  +
cmp [esi] eax +
jz loc_104436C  +
dec [ebp+rcSrc.right]  +
cmp [esi] eax +
jz loc_1044374  +
push 0FFFFFFFFh  +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:InflateRect  +
push dword ptr [ebp+arg_8]  +
mov ecx [ebp+var_4] +
push [ebp+var_8]  +
lea eax [ebp+rcSrc] +
push [ebp+var_C]  +
push edi  +
push dword ptr [esi]  +
push ebx  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103F0EC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
xor edi edi +
inc edi  +
mov [ebp+var_24C] edi +
jmp loc_1004D87  +
mov [ebp+var_220] 1 +
jmp loc_1004E5F  +
push esi  +
push 0  +
jmp loc_1053F72  +
push ds:nDenominator  +
movzx ecx byte ptr [esi+54h] +
push ecx  +
push eax  +
call ds:MulDiv  +
mov byte ptr [ebp+var_22C] al +
push [ebp+var_22C]  +
lea eax [esi+10h] +
push 0  +
push eax  +
mov eax [ebx+10h] +
push 7  +
push [ebp+var_224]  +
push [ebp+hDC]  +
push dword ptr [eax+3Ch]  +
call sub_100445D  +
jmp loc_1004E7A  +
***
and dword ptr [esi+84h] 0 +
mov eax ds:nDenominator +
mov [esi+88h] eax +
mov dword ptr [esi+64h] 1 +
jmp loc_10059EC  +
***
push 0  +
push ecx  +
movzx eax dl +
cdq   +
push 56h  +
pop ecx  +
idiv  ecx +
push 56h  +
pop edi  +
mov ecx eax +
movzx eax bl +
imul ecx ecx +
cdq   +
idiv  edi +
add ecx eax +
movzx eax byte ptr [ebp+nDenominator+3] +
imul ecx ecx +
cdq   +
idiv  edi +
add ecx eax +
lea ecx [ebp+ecx*4+var_A8] +
call sub_1006610  +
mov ecx [ebp+var_8] +
jmp loc_1033F6E  +
***
xor eax eax +
inc eax  +
retn 8  +
***
mov al bl +
jmp loc_1033F26  +
mov al bl +
jmp loc_1033F5C  +
mov [ebp+var_1] dl +
jmp loc_1033F3E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov ecx [ecx+20h] +
xor eax eax +
inc eax  +
cmp ecx 0FF000000h +
jz loc_10541BD  +
mov eax [ebp+0Ch] +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+10h]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+38h]  +
jmp loc_100C610  +
***
mov ecx [ebp+0Ch] +
and dword ptr [ecx] 0 +
jmp loc_10541AB  +
***
lea ecx [ebp+rc2] +
push ecx  +
push 0FFFFFFFEh  +
push esi  +
call dword ptr [eax+30h]  +
mov eax [esi] +
lea ecx [ebp+rc2] +
push ecx  +
push 0FFFFFFFFh  +
push ebx  +
push esi  +
call dword ptr [eax+38h]  +
jmp loc_10061A7  +
***
push dword ptr [ebp+8]  +
lea ecx [esi-1Ch] +
call sub_100CB74  +
mov edi eax +
test edi edi +
jl loc_10541FD  +
mov eax [ebp+14h] +
test eax eax +
jnz loc_1064802  +
mov eax [ebp+8] +
test eax eax +
jz loc_100677E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_100677E  +
***
fstp  st +
jmp loc_1007461  +
cmp [ebp+var_4] ecx +
mov [ebp+var_14] 1 +
jg loc_1007564  +
jmp loc_1007561  +
inc eax  +
dec [ebp+var_4]  +
mov [ebp+arg_14] eax +
jmp loc_100757C  +
***
sub eax [ebp+var_14] +
add eax ebx +
mov [ebp+var_24] eax +
fild  [ebp+var_24] +
fidiv  [ebp+var_28] +
fstp  [ebp+var_24] +
jmp loc_1006F03  +
***
mov eax [ebp+nIndex] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:GetWindowLongW  +
cmp eax [ebp+arg_0] +
jnz loc_10091CA  +
mov [ebp+var_14] edi +
jmp loc_10091CA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-14h] +
mov edi 80004005h +
call sub_1005D55  +
test eax eax +
jnz loc_10445EC  +
***
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
dec edi  +
jnz loc_1003885  +
mov eax [ebp+hWnd] +
lea ecx [eax+4] +
push ecx  +
push dword ptr [eax]  +
mov ecx esi +
call sub_10542C9  +
xor eax eax +
inc eax  +
jmp loc_1003887  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
lea eax [ebp+Points] +
mov edi ecx +
push eax  +
push dword ptr [edi+4]  +
call ds:GetClientRect  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push dword ptr [edi+4]  +
call ds:MapWindowPoints  +
mov esi [ebp+arg_4] +
mov ax word ptr [ebp+Points.x] +
mov [esi] ax +
mov ax word ptr [ebp+Points.y] +
mov [esi+2] ax +
mov ax [ebp-10h] +
mov [esi+4] ax +
mov ax [ebp-0Ch] +
mov [esi+6] ax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
push 0  +
push 0  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_1003701  +
test eax eax +
jl loc_1054361  +
mov edi [edi+94h] +
mov eax [edi] +
lea ecx [ebp+var_28] +
push ecx  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push edi  +
call dword ptr [eax+10h]  +
test eax eax +
jge loc_1044591  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push 4  +
lea eax [ebp+arg_C] +
mov [ebp+var_20] eax +
pop eax  +
mov [ebp+var_18] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push [ebp+arg_8]  +
xor ecx ecx +
push [ebp+arg_4]  +
lea edx [ebp+arg_10] +
push [ebp+arg_0]  +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] edx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] ecx +
call ds:EventWrite  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
lea eax [ebp+arg_C] +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push [ebp+arg_8]  +
mov [ebp+var_8] 4 +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EventWrite  +
leave   +
retn 10h  +
***
cmp dword ptr [ebx+8] 0FFFFFDEEh +
jnz loc_100F0D9  +
mov esi [ebp+1Ch] +
mov ecx esi +
call sub_103E1B8  +
push eax  +
mov ecx esi +
call sub_1012341  +
mov edi eax +
test edi edi +
jz loc_100F0D9  +
mov eax [edi+20h] +
and dword ptr [ebp+14h] 0 +
test al 10h +
jnz loc_105F816  +
test al 20h +
jnz loc_105F829  +
mov ecx edi +
call sub_100F319  +
cmp dword ptr [ebp+14h] 0 +
jz loc_100F0D9  +
jmp loc_105F846  +
***
sub eax 4 +
jnz loc_10122E9  +
mov esi edx +
call ds:GetFocus  +
cmp esi eax +
jz loc_104D206  +
or dword ptr [ebx+1B0h] 0FFFFFFFFh +
jmp loc_103BD92  +
***
mov [esi+0BCh] edi +
jmp loc_1009903  +
***
mov eax [ebx+0B10h] +
jmp loc_1002208  +
***
push eax  +
push eax  +
push dword ptr [esi+4]  +
lea eax [ebp-34h] +
push eax  +
call edi  +
test eax eax +
jnz loc_1036481  +
push ebx  +
mov eax 456h +
push eax  +
push eax  +
push dword ptr [esi+4]  +
lea eax [ebp-34h] +
push eax  +
call edi  +
test eax eax +
jnz loc_1036481  +
push ebx  +
mov eax 454h +
push eax  +
push eax  +
push dword ptr [esi+4]  +
lea eax [ebp-34h] +
push eax  +
call edi  +
test eax eax +
jnz loc_1036481  +
jmp loc_1063280  +
***
xor eax eax +
jmp loc_10099F2  +
***
push edi  +
push [ebp+hWnd]  +
call sub_1054574  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1052DCE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+hWnd] +
test eax eax +
jz loc_105458E  +
cmp eax [ebp+arg_0] +
jz loc_1054597  +
push eax  +
call ds:GetParent  +
jmp loc_105457C  +
mov eax 80004005h +
pop ebp  +
retn 8  +
xor eax eax +
jmp loc_1054593  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_1054603  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_10545F5  +
***
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
jmp loc_103DFEC  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
jmp loc_103DFF8  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_105464C  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_105467A  +
cmp edx [esp+arg_4] +
ja loc_105467A  +
jb loc_105467B  +
cmp eax [esp+arg_0] +
jbe loc_105467B  +
dec esi  +
xor edx edx +
mov eax esi +
jmp loc_103E016  +
neg edx  +
neg eax  +
sbb edx 0 +
jmp loc_103E01D  +
***
mov dword ptr [edi] 3E8h +
cmp [esi+10h] eax +
jz loc_10546AA  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [esi+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10546B7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+2Ch]  +
jmp loc_100E4AC  +
***
push 40000017h  +
call ds:__imp_SHELL32_100  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
jmp loc_1036FB0  +
***
push dword ptr [ebp-4]  +
call sub_10351CD  +
jmp loc_101EDEF  +
***
lea eax [ebp-14h] +
push eax  +
push edi  +
call ds:SHLWAPI_175  +
cmp eax esi +
mov [ebp-18h] eax +
jl loc_102CC71  +
xor eax eax +
push 4  +
pop ecx  +
mov edi offset stru_101DD90 +
lea esi [ebp-14h] +
cmps   +
setz al  +
dec eax  +
and eax 80004005h +
mov [ebp-18h] eax +
jl loc_102CC71  +
mov edi [ebp-1Ch] +
xor esi esi +
jmp loc_102CBF2  +
***
mov eax [ebp-20h] +
lea edx [ebp-60h] +
push edx  +
mov dword ptr [ebp-60h] 1 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_105476D  +
mov eax [ebp-20h] +
or dword ptr [ebp-58h] 100h +
mov ecx [eax] +
lea edx [ebp-60h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp-20h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_102CC19  +
***
push 8  +
pop ecx  +
push esi  +
mov [ebp-34h] eax +
lea eax [ebp-3Ch] +
push eax  +
push esi  +
push 6  +
push offset dword_1035354  +
push edi  +
mov [ebp-3Ch] cx +
call ds:IUnknown_Exec  +
jmp loc_102CC24  +
***
push 1  +
push offset loc_106C82A  +
push dword ptr [ebx+1Ch]  +
call ds:EnumChildWindows  +
jmp loc_102CC37  +
***
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
push esi  +
push dword ptr [ebp-24h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10547FB  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [ebx+10h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_10547FB  +
push esi  +
push dword ptr [ebp-24h]  +
mov esi ds:SendMessageW +
push 410h  +
push dword ptr [ebp-28h]  +
call esi  +
push dword ptr [ebp-2Ch]  +
push eax  +
push 42Ch  +
push dword ptr [ebp-28h]  +
call esi  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_102CC54  +
***
movsx eax word ptr [ebp-18h] +
push 1  +
push eax  +
push ebx  +
call sub_101EB2D  +
jmp loc_102CC61  +
***
mov eax [esi] +
push 1  +
call dword ptr [eax+2Ch]  +
jmp loc_102AFEC  +
***
push esi  +
call sub_106C86B  +
push offset aTaskbar_0  +
push ebx  +
call sub_1029DF2  +
mov edi eax +
cmp edi ebx +
jz loc_102D093  +
push esi  +
push edi  +
call sub_102D122  +
mov [ebp+var_8] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
jmp loc_102D093  +
push esi  +
call sub_106C86B  +
mov ecx esi +
call sub_106C91D  +
jmp loc_102D0C4  +
push [ebp+var_8]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
jmp loc_102D0C4  +
***
mov eax 80004005h +
jmp locret_101AE5C  +
***
call ds:CreateJobObjectW  +
mov edi eax +
mov [esi+18h] edi +
cmp edi ebx +
jnz loc_10548C5  +
call sub_101AE40  +
jmp loc_10289D5  +
push 2Ch  +
lea eax [ebp-30h] +
push ebx  +
push eax  +
mov [ebp-34h] ebx +
call memset  +
mov eax [esi+30h] +
add esp 0Ch +
push 30h  +
mov [ebp-10h] eax +
lea eax [ebp-34h] +
push eax  +
push 2  +
push edi  +
mov dword ptr [ebp-24h] 20h +
call ds:SetInformationJobObject  +
jmp loc_10289D3  +
***
imul eax eax +
push eax  +
call ds:Sleep  +
jmp loc_1026E8A  +
push ebx  +
mov ebx ds:QueryInformationJobObject +
push edi  +
push 0  +
push 0Ch  +
lea edi [ebp+JobObjectInformation] +
mov ecx edi +
push ecx  +
push 3  +
push eax  +
call ebx  +
test eax eax +
jnz loc_1054975  +
call ds:__imp_GetLastError  +
cmp eax 0EAh +
jnz loc_1054973  +
mov eax [ebp+JobObjectInformation] +
cmp eax [ebp+var_10] +
jbe loc_1054973  +
lea eax ds:8[eax*4] +
push eax  +
push 40h  +
mov [ebp+cbJobObjectInformationLength] eax +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jz loc_1054975  +
push 0  +
push [ebp+cbJobObjectInformationLength]  +
push edi  +
push 3  +
push dword ptr [esi+18h]  +
call ebx  +
test eax eax +
jz loc_105496C  +
mov eax [edi+4] +
cmp eax [ebp+JobObjectInformation] +
jz loc_1054975  +
push edi  +
call ds:LocalFree  +
xor edi edi +
and [ebp+var_84] 0 +
push 6Ch  +
lea eax [ebp+var_80] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 70h  +
lea eax [ebp+var_84] +
push eax  +
push 9  +
push dword ptr [esi+18h]  +
mov [ebp+var_74] 1000h +
call ds:SetInformationJobObject  +
push dword ptr [esi+18h]  +
call ds:CloseHandle  +
xor eax eax +
mov [esi+18h] eax +
cmp edi eax +
jz loc_1054A0D  +
mov [ebp+cbJobObjectInformationLength] eax +
cmp [edi+4] eax +
jbe loc_10549FF  +
lea ebx [edi+8] +
push dword ptr [ebx]  +
push 0  +
push 200h  +
call ds:OpenProcess  +
mov [ebp+hObject] eax +
test eax eax +
jz loc_10549F1  +
push 1  +
lea ecx [esi+24h] +
push ecx  +
push eax  +
mov ecx esi +
call sub_106CBC0  +
push [ebp+hObject]  +
call ds:CloseHandle  +
inc [ebp+cbJobObjectInformationLength]  +
mov eax [ebp+cbJobObjectInformationLength] +
add ebx 4 +
cmp eax [edi+4] +
jb loc_10549C4  +
lea eax [ebp+JobObjectInformation] +
cmp edi eax +
jz loc_1054A0D  +
push edi  +
call ds:LocalFree  +
pop edi  +
pop ebx  +
jmp loc_1026E95  +
***
mov eax 8007000Eh +
jmp loc_102897B  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
jmp loc_102897A  +
***
cmp [esi+1Ch] eax +
jz loc_1026F7F  +
mov ebx [ebp+hProcess] +
cmp [esi+20h] eax +
jnz loc_1054A57  +
lea eax [esi+24h] +
push eax  +
push ebx  +
call sub_106CB5B  +
mov edi eax +
test edi edi +
jl loc_1026F82  +
mov dword ptr [esi+20h] 1 +
push ebx  +
push dword ptr [esi+18h]  +
call ds:AssignProcessToJobObject  +
test eax eax +
jnz loc_1054A71  +
call sub_101AE40  +
mov edi eax +
jmp loc_1026F82  +
push 0  +
lea eax [esi+30h] +
push eax  +
push ebx  +
mov ecx esi +
call sub_106CBC0  +
mov edi eax +
test edi edi +
jge loc_1026F82  +
push 1  +
lea eax [esi+24h] +
push eax  +
push ebx  +
mov ecx esi +
call sub_106CBC0  +
jmp loc_1026F82  +
***
mov [esi+1Ch] edi +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_1026E71  +
***
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1026F23  +
***
push esi  +
call sub_1002BCA  +
pop ecx  +
jmp loc_1024367  +
***
xor eax eax +
mov [edi+esi*2] ax +
jmp loc_103440F  +
***
cmp [ebp+CommandLine] si +
jz loc_1030AD3  +
push 40h  +
lea eax [ebp+StartupInfo.lpReserved] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
mov [ebp+StartupInfo.wShowWindow] ax +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
push esi  +
mov [ebp+StartupInfo.cb] 44h +
call ds:CreateProcessW  +
test eax eax +
jz loc_1030AD3  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-21Ch]  +
call esi  +
jmp loc_1030AD3  +
***
mov dword_10B10DC 2 +
jmp loc_102FDA5  +
***
xor eax eax +
leave   +
retn   +
mov edi 80004011h +
jmp loc_10322F6  +
***
push esi  +
push offset aDesk_cpl  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_1054B97  +
push offset sub_1054BA0  +
push esi  +
call ds:__imp_GetProcAddress  +
test eax eax +
jz loc_1054B90  +
call eax  +
push esi  +
call ds:__imp_FreeLibrary  +
pop esi  +
jmp locret_102FE1A  +
***
popa   +
jz loc_1054C0B  +
inc ebx  +
push 65737261h  +
jz loc_1054BF1  +
push 65676E61h  +
jnb $+2  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push 0  +
push offset aOriginaldpi  +
push offset aSoftwareMic_26  +
push 80000002h  +
mov [ebp-8] edi +
call esi  +
test eax eax +
jz loc_102F6D8  +
mov eax [ebp-0Ch] +
mov [ebp-4] eax +
jmp loc_102F6D8  +
push offset aDesk_cpl  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_102F6E4  +
push offset aUpdateuifontsd  +
push esi  +
call ds:__imp_GetProcAddress  +
test eax eax +
jz loc_1054C11  +
push edi  +
push dword ptr [ebp-4]  +
call eax  +
push esi  +
call ds:__imp_FreeLibrary  +
jmp loc_102F6E4  +
***
mov [eax+24h] ecx +
mov [eax+28h] cl +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
jmp loc_100E8B6  +
***
xor eax eax +
jmp loc_1030B84  +
***
mov ecx offset aNull_0 +
jmp loc_1026DED  +
***
push [ebp+ReturnLength]  +
mov edi ds:GetProcessHeap +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_102F91A  +
lea eax [ebp+ReturnLength] +
push eax  +
push [ebp+ReturnLength]  +
push esi  +
push 1  +
push [ebp+TokenHandle]  +
call ds:GetTokenInformation  +
test eax eax +
jz loc_1054D66  +
lea eax [ebp+var_C] +
mov [ebp+var_2C] eax +
mov [ebp+var_28] ebx +
mov [ebp+var_24] 4 +
mov [ebp+var_20] ebx +
push dword ptr [esi]  +
call ds:GetLengthSid  +
mov ecx [esi] +
mov [ebp+var_14] eax +
lea eax [ebp+var_2C] +
push eax  +
push 2  +
push [ebp+arg_0]  +
mov [ebp+var_1C] ecx +
push dword_10B247C  +
mov [ebp+var_18] ebx +
push dword_10B2478  +
mov [ebp+var_10] ebx +
call ds:EventWrite  +
push esi  +
push ebx  +
call edi  +
push eax  +
call ds:HeapFree  +
jmp loc_102F91A  +
***
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov esi [ebp+8] +
lea ebx [esi+34h] +
push ebx  +
mov edi ds:DeleteCriticalSection +
call edi  +
lea eax [esi+1Ch] +
mov [ebp+8] eax +
push eax  +
call edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [esi+4Ch] +
stos   +
push 6  +
pop ecx  +
mov edi ebx +
stos   +
mov edi [ebp+8] +
jmp loc_1054E33  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000017h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov esi [ebp+8] +
lea ebx [esi+1Ch] +
push ebx  +
call ds:DeleteCriticalSection  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [esi+34h] +
stos   +
mov edi ebx +
jmp loc_1054E33  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000017h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov edi [ebp+8] +
add edi 1Ch +
push 6  +
pop ecx  +
stos   +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax 0C0000017h +
jmp loc_103247F  +
***
lea eax [ebp-3A4h] +
push eax  +
push dword ptr [ebp-3ACh]  +
push esi  +
call sub_104C272  +
mov esi eax +
jmp loc_1026ADF  +
***
mov eax offset aUnknown +
jmp loc_1026C92  +
***
call sub_106D629  +
jmp loc_1026CED  +
***
push offset aInstall_exe  +
push esi  +
call ds:__imp_StrCmpICW  +
test eax eax +
jz loc_1030C26  +
jmp loc_1030C38  +
***
push 2  +
pop ebx  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_20] +
stos   +
lea eax [ebp+var_20] +
push eax  +
push edx  +
call sub_106D127  +
test eax eax +
jz loc_1032528  +
push esi  +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
lea esi [ebp+var_14] +
xor eax eax +
cmps   +
pop esi  +
jz loc_1054EF1  +
push 4  +
pop ebx  +
push [ebp+var_20]  +
call ds:__imp_SHELL32_155  +
jmp loc_1032528  +
push 2  +
pop ebx  +
jmp loc_1032528  +
***
cmp dword_10B3AC8 0 +
jnz loc_102F950  +
call sub_106D93C  +
jmp loc_102F950  +
***
call sub_1011979  +
test eax eax +
jz loc_1054F9C  +
push 220h  +
push 0  +
call ShellExecuteA  +
test eax eax +
jnz loc_1054F93  +
push 225h  +
push eax  +
call ShellExecuteA  +
test eax eax +
jnz loc_1054F93  +
push 227h  +
push eax  +
call ShellExecuteA  +
test eax eax +
jnz loc_1054F93  +
push 22Ch  +
push eax  +
call ShellExecuteA  +
test eax eax +
jnz loc_1054F93  +
and [ebp+pvData] eax +
lea eax [ebp+var_C] +
push eax  +
push 0  +
call sub_1030467  +
test eax eax +
jnz loc_1054FA0  +
mov eax [ebp+var_C] +
xor ecx ecx +
inc ecx  +
test eax eax +
jz loc_1054F8E  +
cmp eax ecx +
jz loc_1054F8E  +
cmp eax 10h +
jz loc_1054F8E  +
cmp eax 11h +
jnz loc_1054FA0  +
mov [ebp+pvData] ecx +
jmp loc_1054FA0  +
mov [ebp+pvData] 1 +
jmp loc_1054FA0  +
and [ebp+pvData] 0 +
push ebx  +
lea eax [ebp+pvData] +
push eax  +
push ebx  +
push offset aServeradminui  +
push edi  +
push esi  +
call ds:__imp_SHSetValueW  +
cmp [ebp+pvData] 0 +
jz loc_10300C9  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push 0  +
push offset aStartmenuadmin  +
push edi  +
push esi  +
mov [ebp+pcbData] ebx +
call ds:__imp_SHGetValueW  +
push 2  +
pop ecx  +
cmp eax ecx +
jz loc_1054FE7  +
cmp eax 3 +
jnz loc_10300C9  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push offset aStartmenuadmin  +
push edi  +
push esi  +
mov [ebp+var_C] ecx +
call ds:__imp_SHSetValueW  +
jmp loc_10300C9  +
***
push edi  +
mov edi offset unk_10B3AB8 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
jmp loc_10323E1  +
***
cmp [ebp-339h] bl +
jnz loc_10292E1  +
xor eax eax +
inc eax  +
jmp loc_10292E3  +
***
push eax  +
push offset a0x_8x  +
lea eax [ebp-104h] +
push 80h  +
push eax  +
call sub_10343CA  +
add esp 10h +
jmp loc_102942A  +
***
xor eax eax +
cmp [ebp-0F20h] ebx +
setz al  +
inc eax  +
mov [ebp-0F14h] eax +
cmp [ebp-0F20h] ebx +
jz loc_10550A7  +
lea eax [ebp-0F1Ch] +
push eax  +
push offset aAllitemsiconvi  +
push offset aSoftwareMicr_6  +
push esi  +
mov dword ptr [ebp-0F18h] 2 +
call sub_101917B  +
test eax eax +
jl loc_1055096  +
cmp [ebp-0F1Ch] ebx +
jz loc_1055096  +
mov dword ptr [ebp-0F18h] 1 +
push dword ptr [ebp-0F18h]  +
push 1117h  +
push ebx  +
call WinSqmSetDWORD  +
push dword ptr [ebp-0F14h]  +
push 1118h  +
push ebx  +
call WinSqmSetDWORD  +
jmp loc_1029460  +
***
lea eax [ebp-0F18h] +
push eax  +
push dword ptr [ebp-0F28h]  +
mov dword ptr [ebp-0F18h] 0C8h +
push ebx  +
push ebx  +
push offset byte_1002CD0  +
push dword ptr [ebp-0F20h]  +
call ds:RegQueryValueExW  +
test eax eax +
jz loc_10550F6  +
mov ecx [ebp-0F28h] +
xor eax eax +
mov [ecx] ax +
push dword ptr [ebp-0F20h]  +
call ds:RegCloseKey  +
jmp loc_1029699  +
***
push esi  +
jmp loc_10296E0  +
***
cmp word ptr [ebp+pvData] ax +
jz loc_10301A0  +
jmp loc_10551F2  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push offset aCurrent  +
push offset aControlPanelAp  +
push esi  +
call edi  +
test eax eax +
jnz loc_10301B7  +
mov edi ds:__imp_StrCmpICW +
push offset a@themeui_dll85  +
lea eax [ebp+pvData] +
push eax  +
call edi  +
test eax eax +
jz loc_10301B7  +
push offset a@themeui_dll_0  +
lea eax [ebp+pvData] +
push eax  +
call edi  +
test eax eax +
jz loc_10301B7  +
push offset a@themeui_dll_1  +
lea eax [ebp+pvData] +
push eax  +
call edi  +
test eax eax +
jz loc_10301B7  +
push offset a@themeui_dll_2  +
lea eax [ebp+pvData] +
push eax  +
call edi  +
test eax eax +
jz loc_10301B7  +
push offset a@themeui_dll_1  +
push 104h  +
lea eax [ebp+pvData] +
push eax  +
call sub_100665F  +
jmp loc_10301C0  +
or [ebp+var_22C] 1 +
lea eax [ebp+pvData] +
push 3  +
mov [ebp+var_228] eax +
lea eax [ebp+pvParam] +
push eax  +
push 0Ch  +
push 43h  +
call ds:SystemParametersInfoW  +
push offset aInstallhighcon  +
push ebx  +
push esi  +
call ds:SHDeleteValueW  +
jmp loc_10301E5  +
xor eax 1 +
or eax 1000h +
push 2  +
mov [ebp+var_22C] eax +
lea eax [ebp+pvParam] +
push eax  +
push 0Ch  +
push 43h  +
call ds:SystemParametersInfoW  +
jmp loc_10301E5  +
***
call sub_1028476  +
test eax eax +
jnz loc_103030F  +
push ebx  +
push esi  +
push edi  +
push 44h  +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
call memset  +
xor eax eax +
lea edi [ebp+Handles] +
stos   +
stos   +
stos   +
add esp 0Ch +
cmp dword_10B24CC 0 +
stos   +
mov edi 4010000h +
mov esi 80000000h +
jz loc_1055382  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105533E  +
test al al +
jnz loc_1055382  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1055382  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_1055382  +
cmp edx ebx +
jnz loc_1055382  +
push offset dword_10554B0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
call ds:SHELL32_680  +
test eax eax +
jz loc_1055407  +
mov ebx 104h +
push ebx  +
lea eax [ebp+CommandLine] +
push eax  +
call ds:GetSystemDirectoryW  +
dec eax  +
cmp eax 102h +
ja loc_1055447  +
push offset pMore  +
lea eax [ebp+CommandLine] +
push eax  +
call ds:PathAppendW  +
test eax eax +
jz loc_1055447  +
push offset aExplorer_0  +
push ebx  +
lea eax [ebp+CommandLine] +
push eax  +
call sub_1010E3B  +
mov ebx eax +
test ebx ebx +
jl loc_1055447  +
lea eax [ebp+Handles] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
lea ecx [ebp+CommandLine] +
push ecx  +
push eax  +
call ds:CreateProcessW  +
test eax eax +
jz loc_1055417  +
jmp loc_105541E  +
lea eax [ebp+Handles] +
push eax  +
call sub_1096401  +
test eax eax +
jz loc_1055422  +
call sub_101AE40  +
mov ebx eax +
test ebx ebx +
jl loc_1055447  +
push 0FFFFFFFFh  +
push [ebp+Handles]  +
push 0  +
call sub_106D7BD  +
push dword ptr [ebp-218h]  +
mov ebx ds:CloseHandle +
call ebx  +
push [ebp+Handles]  +
call ebx  +
cmp dword_10B24CC 0 +
jz loc_10554A1  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105545D  +
test al al +
jnz loc_10554A1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10554A1  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10554A1  +
cmp edx edi +
jnz loc_10554A1  +
push offset dword_10554C0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
pop ebx  +
jmp loc_103030F  +
***
lea eax [ebp+var_40] +
push eax  +
push offset aNodataexecutio  +
push ebx  +
push [ebp+hKey]  +
call sub_101917B  +
lea eax [ebp+var_44] +
push eax  +
push offset aNoheapterminat  +
push ebx  +
push [ebp+hKey]  +
call sub_101917B  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_1024F4B  +
push ebx  +
call sub_1080A1F  +
push 1  +
push edi  +
push offset szDir  +
push esi  +
call sub_107B73B  +
jmp loc_1024FCE  +
cmp [ebp+ppv] ebx +
jz loc_1055562  +
push [ebp+ppv]  +
call ds:ReleaseMutex  +
push [ebp+ppv]  +
call ds:CloseHandle  +
push 20h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:SetPriorityClass  +
cmp esi 5 +
jnz loc_1055580  +
call sub_106D6B5  +
jmp loc_105574B  +
call sub_10191D1  +
cmp eax ebx +
mov [ebp+var_30] eax +
jl loc_105574B  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+Msg] +
stos   +
call ds:GetCommandLineW  +
push eax  +
call ds:PathGetArgsW  +
lea ecx [ebp+Msg] +
push ecx  +
push eax  +
call sub_106D127  +
test eax eax +
jz loc_105568A  +
call sub_1030C77  +
cmp esi 4 +
jnz loc_1055601  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1026660  +
push 1  +
push ebx  +
push offset stru_10266A0  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1055681  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+Msg.lParam] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10555FC  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+ppv] +
jmp loc_105567B  +
lea eax [ebp+var_28] +
push eax  +
push offset stru_10557C0  +
push 1  +
push ebx  +
push offset stru_1055850  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1055681  +
push 40h  +
lea eax [ebp+StartupInfo.lpReserved] +
push ebx  +
push eax  +
mov [ebp+StartupInfo.cb] 44h +
call memset  +
add esp 0Ch +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
xor eax eax +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
lea edi [ebp+var_38] +
mov [ebp+var_3C] ebx +
stos   +
jz loc_105565A  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_105565D  +
push 0Ah  +
pop ecx  +
mov eax [ebp+var_28] +
mov edx [eax] +
push ecx  +
push [ebp+var_38]  +
push [ebp+var_3C]  +
push [ebp+Msg.wParam]  +
push [ebp+Msg.hwnd]  +
push offset dword_1055840  +
push eax  +
call dword ptr [edx+0Ch]  +
mov eax [ebp+var_28] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+Msg.hwnd]  +
call ds:__imp_SHELL32_155  +
push [ebp+var_30]  +
call sub_1019203  +
jmp loc_105574B  +
mov [ebp+var_28] ebx +
jmp loc_10251E0  +
cmp al bl +
jz loc_1025277  +
jmp loc_10252E9  +
cmp dword_10B24CC ebx +
jz loc_1055705  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10556C1  +
cmp al bl +
jnz loc_1055705  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_1055705  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx esi +
mov esi dword_10B24C4 +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_1055705  +
cmp edx esi +
jnz loc_1055705  +
push offset dword_10557B0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
lea ecx [ebp+var_50] +
call sub_106D8E9  +
lea eax [ebp+ppv] +
push eax  +
call sub_1002BEE  +
push 1  +
call sub_102F926  +
call EXPLORERFRAME_111  +
cmp [ebp+var_30] ebx +
jl loc_105572D  +
call ds:OleUninitialize  +
push [ebp+var_38]  +
call sub_1019203  +
push ebx  +
call ds:FreeIconList  +
lea ecx [ebp+var_50] +
mov [ebp+var_50] offset off_102FD48 +
call sub_106D8E9  +
push offset unk_10B23C8  +
call sub_106D809  +
call ds:GetCommandLineW  +
push eax  +
call ds:PathGetArgsW  +
push eax  +
call sub_106CFDB  +
call sub_107BE7B  +
mov ecx offset unk_10B1460 +
call sub_1019FB7  +
push ebx  +
call sub_1024C6D  +
push offset dword_10B2478  +
call sub_106D78C  +
call sub_106D5E4  +
cmp dword_10B39E8 ebx +
pop edi  +
pop esi  +
pop ebx  +
jz loc_105579F  +
push 1  +
call ds:ExitProcess  +
mov ecx [ebp+var_4] +
xor eax eax +
xor ecx ebp +
inc eax  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
test esi esi +
jz loc_1027340  +
push esi  +
call sub_1002BCA  +
pop ecx  +
jmp loc_1027340  +
***
xor esi esi +
push esi  +
push esi  +
push ecx  +
call ds:SetWindowLongW  +
mov dword_10B10E8 esi +
push esi  +
mov [ebx+4] esi +
call ds:PostQuitMessage  +
xor eax eax +
jmp loc_100E21E  +
xor eax eax +
cmp [ebp+lParam] eax +
jz loc_1055990  +
test [ebp+arg_C] 40000000h +
jnz loc_1055990  +
cmp [ebx+8] eax +
jz loc_1055990  +
push edi  +
mov edi 4010000h +
mov esi 80000000h +
cmp dword_10B24CC eax +
jz loc_1055921  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10558D7  +
test al al +
jnz loc_1055921  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1055921  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_105591B  +
cmp edx ebx +
jnz loc_105591B  +
push offset dword_10559F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ebx [ebp+var_208] +
push 0FFFFFFFFh  +
push dword ptr [ebx+8]  +
call ds:WaitForSingleObject  +
push dword ptr [ebx+8]  +
call ds:CloseHandle  +
cmp dword_10B24CC 0 +
jz loc_105598F  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105594B  +
test al al +
jnz loc_105598F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_105598F  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_105598F  +
cmp edx edi +
jnz loc_105598F  +
push offset dword_1055A08  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
push dword ptr [ebx+4]  +
call ds:DestroyWindow  +
jmp loc_100E209  +
mov esi [ebp+arg_C] +
test esi 40000000h +
jnz loc_10559EC  +
push 100h  +
lea eax [ebp+Buffer] +
push eax  +
push 2DBh  +
push hInstance  +
call ds:LoadStringW  +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [ebx+4]  +
call ds:ShutdownBlockReasonCreate  +
and esi 80000000h +
neg esi  +
sbb esi esi +
inc esi  +
inc esi  +
push esi  +
add ebx 8 +
push ebx  +
call sub_107B307  +
xor eax eax +
inc eax  +
jmp loc_100E21E  +
***
pop ebp  +
jmp ds:__imp_SHLWAPI_240  +
***
pop esi  +
mov ecx ebx +
call sub_1027329  +
pop edi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
cmp [ebp+pvData] 0 +
jnz loc_1055AB2  +
push offset szFile  +
push offset szDir  +
lea eax [ebp+pszSubKey] +
push eax  +
mov [ebp+var_424] 104h +
call ds:__imp_PathCombineW  +
lea eax [ebp+var_424] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+pdwType] +
push eax  +
push offset aUpdateurl  +
lea eax [ebp+pszSubKey] +
push eax  +
push 80000002h  +
call ds:__imp_SHGetValueW  +
test eax eax +
jnz loc_1055AB2  +
cmp word ptr [ebp+var_20C] ax +
jz loc_1055AB2  +
push edi  +
lea eax [ebp+var_418] +
push eax  +
push edi  +
push offset aStartmenulogof  +
push ebx  +
push esi  +
mov [ebp+var_418] 1 +
call ds:__imp_SHSetValueW  +
push 1  +
call sub_1086A7D  +
call sub_1081DF7  +
call sub_1089357  +
call sub_1084785  +
call sub_1084720  +
push offset aUserstarttime  +
push offset aSoftwareClasse  +
push esi  +
call ds:SHDeleteValueW  +
and [ebp+var_420] 0 +
lea eax [ebp+var_42C] +
push eax  +
lea eax [ebp+var_420] +
push eax  +
push 0  +
push 18h  +
push offset aAuditinprogres  +
push offset aSystemSetup  +
push 80000002h  +
mov [ebp+var_42C] edi +
call ds:__imp_SHRegGetValueW  +
test eax eax +
jnz loc_1055B22  +
cmp [ebp+var_420] eax +
jnz loc_102D20A  +
push edi  +
lea eax [ebp+var_418] +
push eax  +
push edi  +
push offset aStartmenuinit  +
push ebx  +
push esi  +
mov [ebp+var_418] edi +
call ds:__imp_SHSetValueW  +
jmp loc_102D20A  +
***
mov eax [ecx] +
push 1  +
call dword ptr [eax+20h]  +
xor eax eax +
jmp loc_102B132  +
***
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
movsx edi ax +
shr eax 10h +
movsx ebx ax +
lea eax [ebp+rc] +
push eax  +
push ecx  +
call ds:GetWindowRect  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hWndTo]  +
push 0  +
call ds:MapWindowPoints  +
push ebx  +
push edi  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
pop edi  +
pop ebx  +
test eax eax +
jz loc_1037342  +
push 0  +
push dword ptr [esi+1Ch]  +
call ds:ShowWindow  +
mov ecx esi +
call sub_106E8B1  +
mov [ebp+var_4] 1 +
jmp loc_1037342  +
***
mov eax [ebp+arg_4] +
mov dword ptr [eax] 20000000h +
jmp loc_1014202  +
***
mov eax [edi+0Ch] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push dword ptr [edi+8]  +
push 464h  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
mov ebx [edi+0Ch] +
mov ecx [ebp+arg_C] +
mov edx eax +
shr edx 10h +
sub ebx edx +
xor edx edx +
mov [ecx+4] ebx +
mov [ecx] edx +
mov ebx [edi+0Ch] +
movzx eax ax +
mov [ecx+0Ch] ebx +
mov [ecx+8] eax +
cmp [esi+0B20h] edx +
jz loc_1055C9D  +
mov eax [esi+0B30h] +
add eax [esi+0B2Ch] +
jmp loc_1055C9F  +
xor eax eax +
mov esi [esi+0B1Ch] +
add esi eax +
add esi dword_10B10C4 +
mov eax [ebp+arg_8] +
mov [eax+4] esi +
mov [eax] edx +
mov edx [edi+8] +
mov [eax+8] edx +
mov ecx [ecx+4] +
jmp loc_101F671  +
***
push dy  +
push dword_10B10B8  +
push esi  +
call ds:InflateRect  +
jmp loc_101F6A3  +
neg edx  +
jmp loc_101F6AE  +
neg ecx  +
jmp loc_101F6B9  +
***
push 40000017h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_101F5C2  +
mov eax [esi+3Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov ecx [ebp+var_8] +
cmp eax 1 +
mov eax ecx +
jnz loc_1055D24  +
and eax 0FFFFFEFFh +
or eax 81h +
jmp loc_101F5CC  +
and eax 0FFFFFEFEh +
or eax 80h +
jmp loc_101F5CC  +
***
xor eax eax +
inc eax  +
leave   +
retn   +
***
push [ebp+hWnd]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1052EB9  +
jmp loc_1052EBE  +
***
xor eax eax +
jmp loc_10354A6  +
push 2  +
jmp loc_1055D5F  +
push 3  +
jmp loc_1055D5F  +
push 4  +
pop eax  +
jmp loc_10354A6  +
***
cmp [ecx+0C84h] eax +
jnz loc_101EBC5  +
xor eax eax +
inc eax  +
jmp locret_101EBCF  +
***
and dword ptr [esi+0D18h] 0 +
and dword ptr [esi+0D1Ch] 0 +
jmp loc_102A04E  +
***
mov ecx [ebp+arg_4] +
mov eax [eax+0Ch] +
cmp eax [ecx+0Ch] +
jge loc_103681D  +
mov [ecx+0Ch] eax +
jmp loc_103681D  +
mov ecx [ebp+arg_4] +
mov eax [eax+8] +
cmp eax [ecx+8] +
jge loc_103681D  +
mov [ecx+8] eax +
jmp loc_103681D  +
mov ecx [ebp+arg_4] +
mov eax [eax+14h] +
cmp eax [ecx+4] +
jle loc_103681D  +
mov [ecx+4] eax +
jmp loc_103681D  +
mov eax [eax+10h] +
mov ecx [ebp+arg_4] +
cmp eax [ecx] +
jle loc_103681D  +
mov [ecx] eax +
jmp loc_103681D  +
***
lea eax [ebp+mi] +
push eax  +
push [ebp+hMonitor]  +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_1034EEC  +
mov edi [ebp+lprc1] +
lea esi [ebp+mi.rcMonitor] +
movs   +
movs   +
movs   +
movs   +
jmp loc_1034ED7  +
mov edi [ebp+lprc1] +
lea esi [ebp+mi.rcMonitor] +
movs   +
movs   +
movs   +
movs   +
jmp loc_1034ECA  +
***
push 2  +
push [ebp+lprcUpdate]  +
push dword_10B10EC  +
push 0  +
call ds:MapWindowPoints  +
push 85h  +
push 0  +
push [ebp+lprcUpdate]  +
push dword_10B10EC  +
call ds:RedrawWindow  +
jmp loc_101F460  +
***
mov [ebp+var_4] 4 +
jmp loc_1034DE5  +
lea ecx [ebp+rcUpdate] +
push ecx  +
push eax  +
push [ebp+wParam]  +
mov ecx ebx +
call sub_1034E43  +
cmp eax 1 +
jnz loc_1055E70  +
or [ebp+var_4] 2 +
jmp loc_1034DFE  +
cmp eax 2 +
jnz loc_1034DFE  +
cmp [ebp+var_4] 0 +
jnz loc_1034DFE  +
mov [ebp+var_4] 4 +
jmp loc_1034DFE  +
mov eax dword_10B10EC +
neg eax  +
sbb eax eax +
and eax 2 +
push eax  +
lea eax [ebp+rcUpdate] +
push eax  +
push 1  +
push 2Fh  +
call esi  +
lea eax [ebp+rcUpdate] +
push eax  +
call sub_101F442  +
jmp loc_1034E18  +
***
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+18h]  +
call ds:GetWindowRect  +
mov ecx [ebp+Rect.right] +
mov eax [ebp+Rect.left] +
add eax ecx +
movzx ecx word ptr [ebp+Rect.top] +
cdq   +
sub eax edx +
sar eax 1 +
movzx eax ax +
shl ecx 10h +
or eax ecx +
push eax  +
push 0  +
push 412h  +
push dword ptr [esi+1Ch]  +
call ds:SendMessageW  +
jmp loc_102051A  +
***
add [ebp+var_4] edi +
xor edi edi +
jmp loc_1020662  +
***
mov eax dword_10B10EC +
neg eax  +
sbb eax eax +
and eax 2 +
push eax  +
lea eax [ebp+rcUpdate] +
push eax  +
push 1  +
push 2Fh  +
call ds:SystemParametersInfoW  +
lea eax [ebp+rcUpdate] +
push eax  +
call sub_101F442  +
jmp loc_1051D6D  +
***
mov ebx [ecx+0CE4h] +
cmp ebx 0FFFFFFFFh +
jz loc_1034147  +
jmp loc_103414D  +
test al 2 +
jz loc_103416C  +
push ebx  +
push [ebp+lprc]  +
call sub_106F125  +
jmp loc_103416C  +
***
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
mov eax 80070057h +
jmp loc_10082D3  +
***
push 2  +
push dword ptr [ecx+4]  +
call ds:KillTimer  +
jmp locret_104EF91  +
***
push 0  +
push 1F4h  +
push 2  +
push dword ptr [ecx+4]  +
call ds:SetTimer  +
jmp locret_104E422  +
***
test al 2 +
jz loc_10365AD  +
mov eax [ebp+arg_4] +
sub eax [esi+0C9Ch] +
push ebx  +
mov ebx ds:GetSystemMetrics +
push edi  +
mov edi [ebp+arg_0] +
sub edi [esi+0C98h] +
push 25h  +
mov [ebp+var_4] eax +
call ebx  +
push 24h  +
mov [ebp+var_8] eax +
call ebx  +
mov ecx [ebp+var_8] +
imul ecx eax +
mov eax [ebp+var_4] +
mov edx edi +
imul eax eax +
imul edx edi +
add eax edx +
cmp eax ecx +
pop edi  +
pop ebx  +
jle loc_10365AD  +
push 0  +
push 32h  +
push 3  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov eax [ebp+arg_0] +
mov [esi+0C98h] eax +
mov eax [ebp+arg_4] +
mov [esi+0C9Ch] eax +
jmp loc_10365AD  +
***
and dword ptr [esi+0C70h] 0 +
jmp loc_1040726  +
***
dec esi  +
push esi  +
push dword ptr [edi+0CB4h]  +
call ds:off_1002B68  +
test eax eax +
jnz loc_1051ACA  +
jmp loc_1051ABA  +
***
mov ecx [ebp+var_4] +
push edi  +
call sub_10519E3  +
jmp loc_100310E  +
***
push esi  +
call ds:LocalFree  +
jmp loc_1024974  +
***
xor eax eax +
jmp loc_103422F  +
***
cmp eax [ebp+arg_0] +
jz loc_10341FB  +
push [ebp+lParam]  +
push eax  +
push 552h  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
jmp loc_10341FB  +
***
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_1051776  +
cmp ecx edi +
jnz loc_1051776  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push offset dword_1056130  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
jmp loc_1051776  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10560B5  +
test al al +
jnz loc_10517B4  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_10517B4  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_10517B4  +
cmp ecx edi +
jnz loc_10517B4  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push offset dword_1056120  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
jmp loc_10517B4  +
***
and dword ptr [eax] 0 +
jmp loc_104094F  +
***
lea eax [ebp+rc] +
push eax  +
push edi  +
push ebx  +
mov ecx esi +
call sub_106FB35  +
cmp eax 12h +
jnz loc_104E9D6  +
mov eax [ebp+rc] +
cmp ebx eax +
jge loc_1056170  +
mov ecx dword_10B10B8 +
lea ebx [ecx+eax] +
jmp loc_105617F  +
mov eax [ebp-8] +
cmp ebx eax +
jle loc_105617F  +
sub eax dword_10B10B8 +
mov ebx eax +
mov eax [ebp-0Ch] +
cmp edi eax +
jge loc_1056191  +
mov ecx dy +
lea edi [ecx+eax] +
jmp loc_10561A0  +
mov eax [ebp-4] +
cmp edi eax +
jle loc_10561A0  +
sub eax dy +
mov edi eax +
movzx eax di +
movzx ecx bx +
shl eax 10h +
or eax ecx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
inc eax  +
jmp loc_104E9D8  +
***
mov eax [ebp+hWnd] +
mov edi ds:MapWindowPoints +
movsx ebx ax +
shr eax 10h +
cwde   +
push 1  +
mov [ebp+Y] eax +
mov [ebp+Points.y] eax +
lea eax [ebp+Points] +
push eax  +
push dword ptr [esi+4]  +
mov [ebp+Points.x] ebx +
push 0  +
call edi  +
push [ebp+Points.y]  +
push [ebp+Points.x]  +
push dword ptr [esi+4]  +
call sub_106FBBD  +
mov [ebp+hWnd] eax +
test eax eax +
jz loc_104E97F  +
push [ebp+Y]  +
push ebx  +
call ds:SetCursorPos  +
push 1  +
lea eax [ebp+Points] +
push eax  +
push [ebp+hWnd]  +
push dword ptr [esi+4]  +
call edi  +
movzx eax word ptr [ebp+Points.y] +
movzx ecx word ptr [ebp+Points.x] +
shl eax 10h +
or eax ecx +
push eax  +
mov eax [ebp+arg_0] +
push 0  +
add eax 160h +
push eax  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
xor eax eax +
inc eax  +
jmp loc_104E981  +
***
push eax  +
inc esi  +
call ds:CloseHandle  +
jmp loc_10235A6  +
***
push 4  +
push [ebp+wParam]  +
push 318h  +
push dword ptr [esi+0B10h]  +
call ds:SendMessageW  +
jmp loc_10355BE  +
***
shl eax 4 +
mov eax [eax+esi+48h] +
add eax [esi+0B1Ch] +
jmp loc_1040A0C  +
mov edx [esi+0CD8h] +
mov eax edx +
shl eax 4 +
lea ecx [eax+esi] +
test dl 1 +
jz loc_1056291  +
mov eax [ecx+4Ch] +
sub eax [esi+0B18h] +
jmp loc_1056294  +
mov eax [ecx+44h] +
mov [ebp+rc.left] eax +
mov ecx [ecx+4Ch] +
jmp loc_1040A42  +
sub edx 0 +
jz loc_10562D4  +
dec edx  +
jz loc_10562C6  +
dec edx  +
jz loc_10562B8  +
mov eax [esi+0C18h] +
add [ebp+rc.top] eax +
jmp loc_1040A52  +
add eax [esi+0C18h] +
mov [ebp+rc.left] eax +
jmp loc_1040A52  +
mov eax [esi+0C18h] +
sub [ebp+rc.bottom] eax +
jmp loc_1040A52  +
sub ecx [esi+0C18h] +
mov [ebp+rc.right] ecx +
jmp loc_1040A52  +
***
mov eax [esi+0CD8h] +
sub eax 0 +
jz loc_1056317  +
dec eax  +
jz loc_1056309  +
dec eax  +
mov eax [esi+0C18h] +
jz loc_1056301  +
add [ebp+rc.top] eax +
jmp loc_104E52F  +
add [ebp+rc.left] eax +
jmp loc_104E52F  +
mov eax [esi+0C18h] +
sub [ebp+rc.bottom] eax +
jmp loc_104E52F  +
mov eax [esi+0C18h] +
sub [ebp+rc.right] eax +
jmp loc_104E52F  +
***
push 1F4h  +
lea eax [ebp+var_1F8] +
push ebx  +
push eax  +
mov [ebp+pvParam] 1F8h +
call memset  +
add esp 0Ch +
push ebx  +
lea eax [ebp+pvParam] +
push eax  +
push ebx  +
push 29h  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_101DFE2  +
mov eax [ebp+var_8] +
mov [esi+0E00h] eax +
jmp loc_101DFE2  +
***
movzx eax word ptr [ebp+arg_4] +
push eax  +
push hInstance  +
call ds:LoadIconW  +
mov [ebp+var_610] eax +
jmp loc_103FDFB  +
lea eax [ebp+szPath] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_103FE4D  +
push ebx  +
push 10h  +
lea eax [ebp+szPath] +
push eax  +
push edi  +
call ds:SHGetSpecialFolderPathW  +
jmp loc_103FE62  +
push edi  +
lea eax [ebp+var_60C] +
push eax  +
push [ebp+arg_10]  +
push hInstance  +
call esi  +
lea eax [ebp+var_60C] +
jmp loc_103FE96  +
***
push eax  +
call ds:off_1015DA8  +
jmp loc_10401BD  +
***
mov eax [eax+4] +
push edi  +
mov edi [eax] +
jmp loc_1056410  +
push edi  +
push dword ptr [eax+4]  +
call ds:off_1003D88  +
mov eax [eax] +
cmp eax [ebp+arg_0] +
jz loc_1056400  +
push eax  +
call ds:IsWindow  +
test eax eax +
jnz loc_1056410  +
mov eax [esi+0CD4h] +
push edi  +
push dword ptr [eax+4]  +
call ds:off_10067B4  +
dec edi  +
mov eax [esi+0CD4h] +
jns loc_10563E4  +
mov ecx [eax+4] +
cmp dword ptr [ecx] 0 +
pop edi  +
jnz loc_10091AB  +
push eax  +
call sub_105239E  +
and dword ptr [esi+0CD4h] 0 +
jmp loc_10091AB  +
***
push edi  +
lea eax [ebp-44h] +
push eax  +
push edi  +
push 30h  +
call ds:SystemParametersInfoW  +
jmp loc_103FC73  +
***
mov eax [ebx+0CDCh] +
mov ecx [ebx+0CE0h] +
mov edx [esi] +
sub eax dword_10B10C8 +
sub ecx dword_10B10CC +
cmp edx [ebp-44h] +
jge loc_105646D  +
dec eax  +
jmp loc_1056484  +
mov edx [esi+4] +
cmp edx [ebp-40h] +
jge loc_105647A  +
xor eax eax +
dec ecx  +
jmp loc_1056494  +
mov edx [esi+8] +
cmp edx [ebp-3Ch] +
jle loc_1056488  +
neg eax  +
xor ecx ecx +
jmp loc_1056494  +
mov edx [esi+0Ch] +
cmp edx [ebp-38h] +
jle loc_1056494  +
xor eax eax +
neg ecx  +
push ecx  +
push eax  +
push esi  +
call ds:OffsetRect  +
jmp loc_103FC8D  +
***
mov eax [ebp-10h] +
mov ebx [eax+38h] +
cmp ebx edi +
jz loc_103FD43  +
push ebx  +
call ds:IsIconic  +
test eax eax +
jnz loc_103FD43  +
push ebx  +
call sub_107C1ED  +
test eax eax +
jz loc_103FD43  +
lea eax [ebp-4] +
push eax  +
push 1F4h  +
push 3  +
push edi  +
call ds:GetCurrentProcessId  +
push eax  +
push 40Ch  +
push ebx  +
call ds:SendMessageTimeoutW  +
cmp [ebp-4] edi +
jz loc_103FD43  +
call ds:GetCurrentProcessId  +
push eax  +
push dword ptr [ebp-4]  +
call ds:SHLockShared  +
mov [ebp+8] eax +
jmp loc_103FD43  +
***
call ds:GetCurrentProcessId  +
push eax  +
push dword ptr [ebp-4]  +
call ds:SHFreeShared  +
jmp loc_103FD72  +
***
mov [ebp+arg_0] eax +
jmp loc_1048B89  +
mov eax [ebp+arg_0] +
cmp eax 0FFFFFFFFh +
jz loc_1056547  +
cmp [ebp+arg_4] eax +
jz loc_1056547  +
mov eax [ebx] +
push 1Ah  +
push edi  +
push esi  +
push ebx  +
call dword ptr [eax+14h]  +
mov eax [ebp+arg_0] +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jnz loc_1048BB8  +
or [ebp+var_4] 0FFFFFFFFh +
jmp loc_1048BB8  +
***
push 0  +
push edi  +
push 5B6h  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
jmp loc_101ED8D  +
***
push 10h  +
call ds:GetAsyncKeyState  +
test ax ax +
jge loc_1039F9A  +
push 0  +
push offset byte_1002CD0  +
push 3  +
push offset dword_1068F74  +
call sub_1009311  +
mov ecx edi +
pop edi  +
jmp sub_105153C  +
***
mov [edx] eax +
jmp loc_104005F  +
***
mov byte ptr [ebp+0Bh] 1 +
jmp loc_1003D24  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1003D38  +
cmp edx ebx +
jnz loc_1003D38  +
lea eax [ebp+8] +
push eax  +
push dword ptr [esi]  +
push offset dword_10565F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_106F0AC  +
jmp loc_1003D38  +
***
push esi  +
mov esi [ebp+18h] +
push edi  +
add esi ecx +
mov edi offset dword_1056620 +
xor edx edx +
cmps   +
pop edi  +
pop esi  +
jnz loc_103638D  +
inc eax  +
jmp loc_103638D  +
***
and [ebp+var_4] 0 +
jmp loc_1028D25  +
***
mov eax [esi] +
mov ecx [eax] +
push eax  +
mov [esi] ecx +
call sub_107085D  +
jmp loc_1051F22  +
***
mov eax [esi+4Ch] +
add eax [edi] +
push 2  +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [esi+50h] +
add eax [esi+48h] +
sar ecx 1 +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push ecx  +
call ds:MonitorFromPoint  +
mov [esi+0CF8h] eax +
jmp loc_102BC22  +
***
mov eax offset aStartbottom +
jmp loc_1015C7E  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
cmp eax [esi+24h] +
mov eax offset aStarttop +
jge loc_1015C79  +
jmp loc_1015C7E  +
***
dec ebx  +
js loc_10205F2  +
jmp loc_10205BC  +
push 2  +
push [ebp+pt.y]  +
push [ebp+pt.x]  +
call ds:MonitorFromPoint  +
mov edx eax +
test edx edx +
jz loc_10205E7  +
push 9  +
pop ecx  +
xor eax eax +
mov [ebp+rcSrc.left] 28h +
lea edi [ebp+rcSrc.top] +
stos   +
lea eax [ebp+rcSrc] +
push eax  +
push edx  +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_10205E7  +
lea eax [ebp+rcSrc.top] +
push eax  +
push [ebp+lprcDst]  +
call ds:CopyRect  +
jmp loc_10205E7  +
***
mov eax [ebp+arg_0] +
shl eax 4 +
lea eax [eax+esi+44h] +
push eax  +
push [ebp+lprc]  +
mov ecx esi +
call sub_102055D  +
jmp loc_1021695  +
***
mov ecx esi +
call sub_106FA36  +
jmp loc_1028D9E  +
***
push ebx  +
lea eax [ebp-10h] +
push eax  +
push edi  +
call sub_1002F19  +
push dword ptr [esi]  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
call ds:IntersectRect  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
call ds:EqualRect  +
jmp loc_10031D6  +
***
cmp dword_10B24CC 0 +
jz loc_1001ECC  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1056765  +
test al al +
jnz loc_1001ECC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_1001ECC  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
mov edx esi +
and ecx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1036EE1  +
cmp edx esi +
jnz loc_1036EE1  +
push offset dword_1056878  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1036EE1  +
push ecx  +
push offset dword_1056888  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_106E885  +
jmp loc_1036E7C  +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+Msg] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 80004005h +
jnz loc_1040F8B  +
mov eax [esi+0C10h] +
test eax eax +
jz loc_1001EDB  +
push 0  +
push 0  +
push 438h  +
push eax  +
call ds:SendMessageW  +
jmp loc_1001EDB  +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1034A40  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_105683C  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+Msg] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov [ebp+var_C] eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_C] 0 +
jnz loc_1001F0A  +
jmp loc_1001DC7  +
mov eax [esi+4] +
test eax eax +
jz loc_105686C  +
push eax  +
call ds:IsWindow  +
test eax eax +
jz loc_105686C  +
push 0  +
push 1  +
push 16h  +
push dword ptr [esi+4]  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
cmp [ebp+var_4] ebx +
jz loc_10259D4  +
jmp loc_1025AF4  +
call sub_106D66E  +
test eax eax +
jnz loc_1025A15  +
push ebx  +
push ebx  +
call sub_107B307  +
jmp loc_1025A15  +
***
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10568F1  +
cmp edx edi +
jnz loc_10568F1  +
push offset dword_10568F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
jmp loc_10288F0  +
***
test byte ptr [ebp+var_4] 1 +
jz loc_1039FF9  +
mov eax [ebp+var_1C] +
sub eax [ebx+20h] +
jmp loc_1039FFC  +
***
call sub_106E8B1  +
jmp loc_10399AD  +
mov ecx ebx +
call sub_1015930  +
jmp loc_10399D8  +
mov eax [ebx+8] +
cmp eax offset aStartbottom +
jz loc_1056948  +
cmp eax offset aStarttop +
jnz loc_10399F1  +
push 213h  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push hWnd  +
mov dword ptr [ebp-0Ch] 1 +
call edi  +
push 213h  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [ebx+18h]  +
call edi  +
jmp loc_10399F4  +
push esi  +
push 10002h  +
push 128h  +
push dword ptr [ebx+18h]  +
call ds:SendMessageW  +
jmp loc_1039A62  +
push esi  +
push 10002h  +
push 128h  +
push dword ptr [ebx+18h]  +
call ds:SendMessageW  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+20h]  +
jmp loc_1039A71  +
push 213h  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFEh  +
push hWnd  +
call edi  +
push 213h  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFEh  +
push dword ptr [ebx+18h]  +
call edi  +
push 213h  +
push esi  +
push esi  +
push esi  +
push esi  +
push dword ptr [ebx+18h]  +
push hWnd  +
call edi  +
jmp loc_1039A7A  +
***
mov ecx [eax+8] +
sub ecx [eax] +
mov [esi+0CDCh] ecx +
jmp loc_1021638  +
***
push 0  +
lea eax [ebp+rc] +
push eax  +
mov ecx edi +
inc ebx  +
call sub_1034137  +
lea eax [ebp+rcSrc1] +
push eax  +
push dword ptr [edi+0CD8h]  +
mov ecx edi +
call sub_1021675  +
push 4Ch  +
call esi  +
push 4Dh  +
mov [ebp+var_10] eax +
call esi  +
push 4Eh  +
mov [ebp+var_C] eax +
call esi  +
add eax [ebp+var_10] +
push 4Fh  +
mov [ebp+var_8] eax +
call esi  +
add eax [ebp+var_C] +
mov esi ds:IntersectRect +
mov [ebp+var_4] eax +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call esi  +
test eax eax +
jz loc_1015D4C  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+rc2] +
push eax  +
call esi  +
test eax eax +
jz loc_1015D4C  +
lea eax [ebp+rc2] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call ds:EqualRect  +
test eax eax +
jz loc_1015D4C  +
xor ebx ebx +
jmp loc_1015D4C  +
***
push ebx  +
mov eax esi +
push eax  +
mov ecx edi +
call sub_1070AF8  +
jmp loc_1015CD8  +
***
mov ebx [esi+38h] +
add ebx [esi+34h] +
add ebx [esi+24h] +
call sub_10344B4  +
test eax eax +
jz loc_1056B25  +
mov eax [ebp+Rect.right] +
sub eax [ebp+var_4] +
jmp loc_1056B28  +
mov eax [ebp+Rect.left] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax [ebp+Rect.bottom] +
mov edx eax +
sub edx [ebp+rc.top] +
cmp edx edi +
jg loc_1056B69  +
mov eax [ebp+Rect.top] +
sub eax ebx +
sub eax edi +
jmp loc_10135DF  +
call sub_10344B4  +
test eax eax +
jz loc_1056B55  +
mov eax [ebp+Rect.right] +
sub eax ebx +
jmp loc_1056B58  +
mov eax [ebp+Rect.left] +
mov ecx [ebp+arg_0] +
mov edx [ebp+rc.bottom] +
mov [ecx] eax +
mov eax [ebp+Rect.top] +
sub edx eax +
cmp edx edi +
jle loc_1056B71  +
sub eax [esi+0Ch] +
jmp loc_10135DF  +
add eax edi +
jmp loc_10135DF  +
mov eax [ebp+Rect.right] +
sub eax [esi+20h] +
mov ecx [ebp+arg_0] +
sub eax [ebp+Rect.left] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+Rect.left] +
mov [ecx] eax +
mov eax dword_10B10C4 +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+Rect.top] +
jmp loc_10135DF  +
mov eax [ebp+Rect.right] +
sub eax ebx +
jmp loc_10135BC  +
mov ebx ds:GetSystemMetrics +
push 8  +
call ebx  +
push 6  +
mov edi eax +
call ebx  +
mov ebx eax +
call sub_10344B4  +
test eax eax +
jz loc_1056BD1  +
mov eax [ebp+Rect.right] +
sub eax [esi+20h] +
sub eax ebx +
sub eax edi +
jmp loc_1056BD7  +
lea eax [ebx+edi] +
add eax [ebp+Rect.left] +
mov ecx [ebp+arg_0] +
add ebx edi +
add ebx [ebp+Rect.top] +
mov [ecx] eax +
mov [ecx+4] ebx +
jmp loc_10135E2  +
***
push 1  +
push esi  +
push dword ptr [edi+18h]  +
call ds:SetWindowRgn  +
jmp loc_101329A  +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov ecx [ecx+4] +
push ebx  +
mov ebx [edx] +
add ebx eax +
mov [ebp+rc2.left] eax +
mov eax [edx+4] +
add eax ecx +
mov [ebp+rc2.bottom] eax +
lea eax [ebp+rcSrc2] +
push eax  +
lea eax [ebp+rc2] +
push eax  +
lea eax [ebp+rc] +
push eax  +
mov [ebp+rc2.top] ecx +
mov [ebp+rc2.right] ebx +
call ds:IntersectRect  +
lea eax [ebp+rc2] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:EqualRect  +
test eax eax +
jz loc_1056C66  +
lea eax [ebp+var_40] +
push eax  +
push dword ptr [edi+18h]  +
call ds:GetWindowRgnBox  +
test eax eax +
jz loc_1056CF8  +
push 1  +
push 0  +
push dword ptr [edi+18h]  +
call ds:SetWindowRgn  +
jmp loc_1056CF8  +
mov edx [ebp+rc] +
mov esi [ebp-0Ch] +
mov ebx dword_10B2138 +
mov eax edx +
mov ecx esi +
neg eax  +
neg ecx  +
sub ebx 0 +
jz loc_1056C8F  +
dec ebx  +
jnz loc_1056C9A  +
sub esi [ebp-4] +
sub esi [ebp+rc2.top] +
add esi [ebp+rc2.bottom] +
add ecx esi +
jmp loc_1056C9A  +
sub edx [ebp-8] +
sub edx [ebp+rc2.left] +
add edx [ebp+rc2.right] +
add eax edx +
push ecx  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
push 0FFFFFFECh  +
push dword ptr [edi+18h]  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_1056CCB  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov ecx eax +
sub ecx [ebp-8] +
sub eax [ebp+rc] +
mov [ebp-8] ecx +
mov [ebp+rc] eax +
lea eax [ebp+rc] +
push eax  +
call ds:CreateRectRgnIndirect  +
mov esi eax +
lea eax [ebp+rcSrc2] +
push eax  +
lea eax [ebp+rc] +
push eax  +
mov ecx edi +
call sub_106F1FB  +
test eax eax +
jnz loc_1056CF8  +
push 1  +
push esi  +
push dword ptr [edi+18h]  +
call ds:SetWindowRgn  +
xor esi esi +
pop ebx  +
jmp loc_101329A  +
***
mov ebx 1A99h +
mov dword ptr [esi+0Ch] 26h +
jmp loc_101DEAB  +
mov ebx 1A91h +
mov dword ptr [esi+0Ch] 0Eh +
jmp loc_101DEAB  +
cmp ebx 90h +
jge loc_1056D74  +
push 42h  +
pop ecx  +
push 0Ah  +
mov [esi+24h] ecx +
mov [esi+20h] ecx +
pop ecx  +
mov [esi+34h] ecx +
mov [esi+38h] ecx +
cmp eax offset aStarttop +
jnz loc_1056D52  +
mov ebx 1A9Ah +
mov dword ptr [esi+0Ch] 2Fh +
jmp loc_101DEAB  +
cmp eax offset aStartbottom +
jnz loc_1056D6A  +
mov ebx 1A92h +
mov dword ptr [esi+0Ch] 14h +
jmp loc_101DEAB  +
mov ebx 1A96h +
jmp loc_101DEAB  +
cmp ebx 0C0h +
jge loc_1056DC8  +
push 51h  +
pop ecx  +
push 0Eh  +
mov [esi+24h] ecx +
mov [esi+20h] ecx +
pop ecx  +
mov [esi+34h] ecx +
mov [esi+38h] ecx +
cmp eax offset aStarttop +
jnz loc_1056DA6  +
mov ebx 1A9Bh +
mov dword ptr [esi+0Ch] 3Ah +
jmp loc_101DEAB  +
cmp eax offset aStartbottom +
jnz loc_1056DBE  +
mov ebx 1A93h +
mov dword ptr [esi+0Ch] 19h +
jmp loc_101DEAB  +
mov ebx 1A97h +
jmp loc_101DEAB  +
push 6Ah  +
pop ecx  +
push 13h  +
mov [esi+24h] ecx +
mov [esi+20h] ecx +
pop ecx  +
mov [esi+34h] ecx +
mov [esi+38h] ecx +
cmp eax offset aStarttop +
jnz loc_1056DF2  +
mov ebx 1A9Ch +
mov dword ptr [esi+0Ch] 4Bh +
jmp loc_101DEAB  +
cmp eax offset aStartbottom +
jnz loc_1056E0A  +
mov ebx 1A94h +
mov dword ptr [esi+0Ch] 1Eh +
jmp loc_101DEAB  +
mov ebx 1A98h +
jmp loc_101DEAB  +
mov eax [esi+20h] +
mov [esi+40h] eax +
mov eax [esi+24h] +
mov [esi+44h] eax +
jmp loc_101DEFF  +
call ds:SHLWAPI_193  +
push 8  +
pop ecx  +
push 2000h  +
cmp ecx eax +
push edi  +
sbb ebx ebx +
push edi  +
add ebx 412h +
movzx eax bx +
push edi  +
push eax  +
push offset aShellbrd  +
call BrandingLoadImage  +
mov [ebp+var_4] eax +
cmp eax edi +
jz loc_1056F20  +
lea ecx [ebp+var_34] +
push ecx  +
push 18h  +
push eax  +
call ds:GetObjectW  +
test eax eax +
jz loc_1056F17  +
mov [ebp+lParam] edi +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax [esi+74h] +
test eax eax +
jz loc_1056E89  +
push eax  +
call ds:off_1035224  +
xor edi edi +
mov [ebp+arg_0] 20h +
cmp ebx 412h +
jnz loc_1056EB9  +
push 1  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push 413h  +
push offset aShellbrd  +
mov [ebp+arg_0] 9 +
call BrandingLoadImage  +
mov edi eax +
push 0FFFFFFECh  +
push dword ptr [esi+18h]  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_1056ED2  +
or [ebp+arg_0] 2000h +
push 1  +
push 1  +
push [ebp+arg_0]  +
push [ebp+var_2C]  +
push [ebp+var_30]  +
call ds:off_10192F8  +
push edi  +
push [ebp+var_4]  +
mov [esi+74h] eax +
push eax  +
mov [ebp+lParam] eax +
call ds:off_106C7A4  +
test edi edi +
jz loc_1056F01  +
push edi  +
call ds:DeleteObject  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1602h  +
push dword ptr [esi+18h]  +
call ds:SendMessageW  +
xor edi edi +
push [ebp+var_4]  +
call ds:DeleteObject  +
mov eax [esi+4Ch] +
cmp eax edi +
jz loc_1056F2E  +
push eax  +
call ds:DeleteObject  +
mov ecx esi +
call sub_106EAB1  +
mov ebx ds:SendMessageW +
push 1  +
push eax  +
push 30h  +
push dword ptr [esi+18h]  +
mov [esi+4Ch] eax +
call ebx  +
lea eax [esi+20h] +
push eax  +
push edi  +
push 1601h  +
push dword ptr [esi+18h]  +
mov [esi+24h] edi +
mov [eax] edi +
call ebx  +
jmp loc_101DF0B  +
***
test [ebp+arg_4] 8000000h +
jz loc_1056FBF  +
push 0  +
push 0  +
lea eax [ebp+ppv] +
push eax  +
push offset dword_1057050  +
push offset dword_1057060  +
push dword ptr [esi+3Ch]  +
call sub_101EA9C  +
test eax eax +
jl loc_101F553  +
mov eax [ebp+var_4] +
push dword ptr [eax+4]  +
mov ecx [ebp+ppv] +
push dword ptr [eax]  +
mov edx [ecx] +
push [ebp+arg_4]  +
push ecx  +
call dword ptr [edx+0Ch]  +
mov eax [ebp+ppv] +
jmp loc_1057042  +
cmp [ebp+arg_4] 4000000h +
jnz loc_101F553  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_101F553  +
mov eax [eax] +
test eax eax +
jz loc_101F553  +
cmp dword ptr [eax+2] 0Eh +
jnz loc_101F553  +
mov esi ds:__imp_CoCreateInstance +
push edi  +
lea eax [ebp+ppv] +
push eax  +
mov edi offset stru_100DD00 +
push edi  +
push 1  +
push 0  +
push offset stru_100DD10  +
call esi  +
test eax eax +
jl loc_105701D  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push 1  +
push 0  +
push offset stru_1029D80  +
call esi  +
pop edi  +
test eax eax +
jl loc_101F553  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_101F553  +
***
mov eax [ebp+var_8] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
jmp loc_10523EC  +
***
call sub_105153C  +
jmp loc_1034D45  +
***
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx edi +
cmp ecx eax +
jnz loc_1051B2A  +
cmp edx dword_10B24C4 +
jnz loc_1051B2A  +
push [ebp+arg_4]  +
push ebx  +
push offset dword_10570F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
jmp loc_1051B2A  +
push 1000h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_1051BB5  +
lea ecx [esi+0AF8h] +
call sub_1015930  +
jmp loc_1051BB5  +
***
push 4  +
jmp loc_105714A  +
push 3  +
jmp loc_105714A  +
push edi  +
push eax  +
call ds:MonitorFromWindow  +
mov edx eax +
cmp edx edi +
jz loc_10236CA  +
push 9  +
pop ecx  +
xor eax eax +
mov [ebp+mi.cbSize] 28h +
lea edi [ebp+mi.rcMonitor] +
stos   +
lea eax [ebp+mi] +
push eax  +
push edx  +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_10236CA  +
test byte ptr [ebp+mi.dwFlags] 1 +
jz loc_10236CA  +
push 2  +
pop ebx  +
jmp loc_10236CA  +
push 6  +
jmp loc_105714A  +
***
mov ecx [ebx+0CD8h] +
sub ecx 0 +
jz loc_105719F  +
dec ecx  +
jz loc_105718E  +
dec ecx  +
jz loc_105717D  +
dec ecx  +
jnz loc_104E897  +
mov ecx [ebx+0C18h] +
add ecx [ebp+Rect.top] +
mov [ebp+rc.top] ecx +
jmp loc_104E897  +
mov ecx [ebx+0C18h] +
add ecx [ebp+Rect.left] +
mov [ebp+rc.left] ecx +
jmp loc_104E897  +
mov ecx [ebp+Rect.bottom] +
sub ecx [ebx+0C18h] +
mov [ebp+rc.bottom] ecx +
jmp loc_104E897  +
mov ecx [ebp+Rect.right] +
sub ecx [ebx+0C18h] +
mov [ebp+rc.right] ecx +
jmp loc_104E897  +
***
mov eax [esi+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1048A96  +
***
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10571F0  +
cmp edx edi +
jnz loc_10571F0  +
push offset dword_1057238  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
jmp loc_103FF6D  +
lea eax [ebp+dwProcessId] +
push eax  +
push esi  +
call ds:GetWindowThreadProcessId  +
call ds:GetCurrentProcessId  +
cmp [ebp+dwProcessId] eax +
jnz loc_103FFB7  +
push esi  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_103FFB7  +
push esi  +
call ds:SetForegroundWindow  +
jmp loc_103FFE4  +
***
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_10522CF  +
cmp edx ebx +
jnz loc_10522CF  +
push offset dword_10572D8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_10522CF  +
mov ebx [esi+4] +
jmp loc_10522DF  +
mov [edi] ebx +
jmp loc_1052303  +
cmp dword ptr [esi+0D24h] 0 +
mov ebx [esi+0D20h] +
jz loc_10572B4  +
push 1  +
mov ecx esi +
call sub_1071205  +
mov edi eax +
neg edi  +
sbb edi edi +
inc edi  +
push ebx  +
call ds:SetForegroundWindow  +
cmp ebx [esi+4] +
jnz loc_10572CD  +
push dword ptr [esi+0B10h]  +
mov ecx esi +
call sub_1039F5F  +
xor ebx ebx +
jmp loc_1052374  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1057319  +
cmp edx edi +
jnz loc_1057319  +
push offset dword_1057320  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor edi edi +
jmp loc_1052245  +
***
cmp ax 1 +
jnz loc_105734A  +
test cx cx +
jz loc_1057340  +
cmp cx ax +
jnz loc_105734A  +
mov esi offset loc_10573FC +
jmp loc_1024A56  +
mov esi 80070057h +
jmp loc_1024A9A  +
push ebx  +
xor ebx ebx +
cmp cx 1 +
setz bl  +
xor esi esi +
mov [ebp+var_20] esi +
xor edi edi +
mov eax [ebp+var_18] +
mov eax [eax+3Ch] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_1057398  +
lea eax [ebp+rclsid] +
push eax  +
push [ebp+var_20]  +
mov eax [ebp+var_18] +
push dword ptr [eax+3Ch]  +
call sub_101DA9D  +
test eax eax +
jnz loc_1057393  +
xor edi edi +
inc edi  +
inc esi  +
test edi edi +
jz loc_1057365  +
xor esi esi +
cmp ebx esi +
pop ebx  +
jz loc_10573DD  +
cmp edi esi +
jnz loc_1024A9A  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1035344  +
push 1  +
push esi  +
lea eax [ebp+rclsid] +
push eax  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_1024A9A  +
mov eax [ebp+var_18] +
mov eax [eax+3Ch] +
push [ebp+ppv]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
jmp loc_1024A91  +
cmp edi esi +
jz loc_1024A9A  +
mov eax [ebp+var_18] +
mov eax [eax+3Ch] +
push [ebp+var_20]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
jmp loc_1024A9A  +
***
mov ds:0C22ECBD5h ebx +
mov [ebx-5Bh] al +
push ebx  +
jmp esi  +
***
mov edx [esi+0B18h] +
add edx [ebp+var_8] +
lea ecx [esi+0CDCh] +
cmp edx [ecx] +
jle loc_101DFA6  +
push eax  +
push dword ptr [ecx+4]  +
mov [ecx] edx +
push edx  +
jmp loc_101DF93  +
***
push [ebp+var_8]  +
call ds:SysFreeString  +
lea ecx [ebp+var_4] +
call sub_1051F1D  +
jmp loc_1051F14  +
***
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push offset aSettings  +
push offset aStuckrects  +
push phkResult  +
call sub_1027C79  +
jmp loc_102BBD4  +
mov ecx [ebp+var_224] +
cmp ecx 3 +
ja loc_102BA69  +
test [ebp+var_238] 1 +
mov eax [ebp+var_220] +
mov [esi+0CD8h] ecx +
mov [ebp+var_210] eax +
jz loc_10574A0  +
or eax 1 +
mov [ebp+var_210] eax +
sub ecx 0 +
jz loc_10574D3  +
dec ecx  +
jz loc_10574C8  +
dec ecx  +
jz loc_10574BD  +
dec ecx  +
jnz loc_102BA69  +
mov ebx [ebp+var_23C] +
jmp loc_102BA69  +
mov edi [ebp+var_244] +
jmp loc_102BA69  +
mov ebx [ebp+var_240] +
jmp loc_102BA69  +
mov edi [ebp+var_248] +
jmp loc_102BA69  +
mov [esi+0CDCh] edi +
jmp loc_102BA75  +
mov [eax] ebx +
jmp loc_102BA83  +
mov ecx ebx +
not ecx  +
and ecx edi +
push ecx  +
push eax  +
mov [esi+28h] edi +
call sub_101E975  +
mov ecx esi +
call sub_101E279  +
and dword ptr [esi+28h] 0 +
jmp loc_102BB67  +
***
call SHELL32_711  +
jmp loc_1028E6E  +
cmp [ebp+var_8] eax +
setnz al  +
mov byte ptr [ebp+var_10] al +
jmp loc_1028EB9  +
cmp [ebp+var_8] eax +
setnz al  +
mov byte ptr [ebp+var_C] al +
jmp loc_1028EDF  +
***
call sub_1071EBA  +
and dword ptr [esi+40h] 0FFFFFFFDh +
mov ecx esi +
pop esi  +
jmp sub_104E418  +
***
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+18h]  +
mov [ebp+var_38] 4 +
call ds:GetWindowRect  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
cmp eax [esi+24h] +
jz loc_1057592  +
lea eax [ebp+var_58] +
push eax  +
push dword ptr [esi+18h]  +
call ds:UpdateLayeredWindowIndirect  +
push 4  +
push edi  +
push 318h  +
push dword ptr [esi+18h]  +
call ds:SendMessageW  +
jmp loc_1013435  +
push 1  +
push edi  +
push dword ptr [esi+18h]  +
call ds:SetWindowRgn  +
jmp loc_101345B  +
***
call ds:GetTickCount64  +
mov edi eax +
sub edi [esi+0F8h] +
mov ecx edx +
sbb ecx [esi+0FCh] +
test ecx ecx +
ja loc_10575EE  +
jb loc_10575DD  +
cmp edi 12Ch +
jnb loc_10575EE  +
add edi eax +
adc ecx edx +
add edi 0FFFFFED4h +
adc ecx 0FFFFFFFFh +
mov eax edi +
jmp loc_10575F0  +
mov ecx edx +
mov [esi+0F8h] eax +
mov [esi+0FCh] ecx +
jmp loc_1037161  +
cmp ebx edi +
jnz loc_1057611  +
mov [esi+0F0h] ecx +
push edi  +
jmp loc_1037169  +
xor eax eax +
inc eax  +
mov [esi+0F0h] eax +
push eax  +
jmp loc_1037169  +
***
mov dword ptr [esi+0F0h] 5 +
push 3  +
jmp loc_1037255  +
***
mov edi 410h +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push esi  +
lea eax [ebp+String2] +
push eax  +
call sub_100665F  +
lea eax [ebp+String2] +
push eax  +
call ds:PathRemoveFileSpecW  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push esi  +
lea eax [ebp+String2] +
push eax  +
call sub_1010E3B  +
mov eax [ebp+FindFileData.dwFileAttributes] +
and eax edi +
xor ebx ebx +
cmp eax edi +
jnz loc_10576E1  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1026650  +
lea eax [ebp+String2] +
push eax  +
push offset stru_1057784  +
call sub_107DC69  +
test eax eax +
jl loc_10576E1  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
push ebx  +
push esi  +
lea edx [ebp+var_824] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10576D5  +
push 1  +
push 0FFFFFFFFh  +
lea eax [ebp+var_61C] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+var_824] +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_10576D5  +
inc ebx  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jz loc_1057702  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_1057733  +
test ebx ebx +
jnz loc_1057733  +
push offset aRogueprogramna  +
push 5  +
lea eax [ebp+String2] +
push eax  +
push offset loc_10727D7  +
push 14h  +
push hInstance  +
call ds:GetDesktopWindow  +
push eax  +
call ds:SHLWAPI_292  +
cmp eax 5 +
jz loc_105774E  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1057637  +
push [ebp+hFindFile]  +
call ds:FindClose  +
pop ebx  +
jmp loc_1024DD4  +
***
push 8  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
jmp loc_1024EDE  +
***
add esi 0CA4h +
jmp loc_104886E  +
***
push 400h  +
push 1  +
push esi  +
call ds:DeleteMenu  +
jmp loc_104ED64  +
push 2  +
pop edi  +
push 400h  +
push edi  +
push esi  +
call ds:DeleteMenu  +
dec edi  +
js loc_104ED64  +
jmp loc_10577CB  +
mov edi ds:EnableMenuItem +
push 1  +
push 1A8h  +
push esi  +
call edi  +
cmp [ebp+arg_0] 0 +
jnz loc_104EDD5  +
push 1  +
push 19Dh  +
push esi  +
jmp loc_104EDD3  +
mov eax [ebp+lParam] +
cmp dword ptr [eax+0CD4h] 0 +
jz loc_104EDEE  +
cmp dword_10B10F8 0 +
jnz loc_104EDEE  +
push 1Eh  +
lea eax [ebp+var_7C] +
push eax  +
push 216h  +
push hInstance  +
call esi  +
push 1Eh  +
lea eax [ebp+var_40] +
push eax  +
mov eax [ebp+lParam] +
mov eax [eax+0CD4h] +
push dword ptr [eax]  +
push hInstance  +
call esi  +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_7C] +
push eax  +
lea eax [ebp+var_FC] +
push 40h  +
push eax  +
call sub_10343CA  +
add esp 10h +
lea eax [ebp+var_FC] +
push eax  +
mov eax 1A0h +
push eax  +
push 0  +
push eax  +
push [ebp+hMenu]  +
call ebx  +
jmp loc_104EE01  +
push 40h  +
lea eax [ebp+var_FC] +
push eax  +
push 352h  +
push hInstance  +
call esi  +
lea eax [ebp+var_FC] +
push eax  +
mov eax 197h +
push eax  +
push 0  +
push eax  +
push [ebp+hMenu]  +
call ebx  +
jmp loc_104EE0E  +
push 3  +
push 193h  +
push [ebp+hMenu]  +
call edi  +
push 3  +
push 194h  +
push [ebp+hMenu]  +
call edi  +
push 3  +
push 195h  +
push [ebp+hMenu]  +
call edi  +
jmp loc_104EE21  +
cmp [ebp+var_108] eax +
jz loc_104EE5A  +
push 3  +
push 1A4h  +
push [ebp+hMenu]  +
call edi  +
jmp loc_104EE5A  +
***
push [ebp+arg_8]  +
mov [esi+8] ebx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [esi+18h]  +
call sub_100D797  +
mov ecx esi +
call sub_101DF17  +
xor ebx ebx +
inc ebx  +
push ebx  +
jmp loc_101E54C  +
***
cmp [ebp+arg_0] 2Fh +
jz loc_105795E  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 1Ah  +
push dword ptr [esi+18h]  +
call sub_100D797  +
mov ecx esi +
call sub_101DF17  +
xor ebx ebx +
inc ebx  +
push ebx  +
mov ecx esi +
call sub_10132A7  +
cmp [ebp+arg_4] 0 +
jz loc_1020F8D  +
push offset aTraysettings  +
push [ebp+arg_4]  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_1020F8D  +
push eax  +
push eax  +
push 8002h  +
push dword ptr [esi+18h]  +
call ds:PostMessageW  +
jmp loc_1020F8D  +
***
push 0  +
push eax  +
push dword ptr [esi+18h]  +
mov [esi+8] eax +
call ds:SetWindowTheme  +
pop esi  +
retn   +
***
push dword ptr [ebp+8]  +
push 111h  +
push 3  +
push dword ptr [ebp+8]  +
call esi  +
push eax  +
call ds:PostMessageW  +
jmp loc_103989B  +
***
mov ecx esi +
call sub_1015ECE  +
jmp loc_10365E0  +
movzx eax word ptr [esi+24h] +
movzx ecx word ptr [esi+20h] +
shl eax 10h +
jmp loc_10372E9  +
***
mov dword ptr [esi+40h] 3 +
call sub_100DBEB  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
push 1  +
push dword ptr [esi+4]  +
call sub_106F784  +
test eax eax +
jnz loc_102A10B  +
push eax  +
mov ecx esi +
call sub_1071F95  +
jmp loc_102A10B  +
***
push edi  +
call sub_1072C80  +
mov dword ptr [esi+20h] 1 +
jmp loc_102150E  +
push 1  +
mov ecx esi +
call sub_1072C80  +
mov [esi+20h] edi +
jmp loc_10215D8  +
***
push 9  +
push dword ptr [esi+4]  +
call ds:ShowWindow  +
jmp loc_1015E52  +
mov eax [esi+40h] +
and eax 3 +
cmp al 3 +
jz loc_1015E60  +
push ebx  +
mov ecx esi +
call sub_1071B92  +
mov edi eax +
mov [esi+0CD8h] edi +
cmp dword_10B108C edi +
jz loc_1015E60  +
mov eax [esi+3Ch] +
mov dword_10B108C edi +
cmp eax ebx +
jz loc_1057AD3  +
xor ecx ecx +
inc ecx  +
mov edx edi +
not edx  +
and edx ecx +
push edx  +
push eax  +
mov [esi+28h] ecx +
call sub_101E975  +
mov ecx esi +
call sub_101E279  +
mov [esi+28h] ebx +
push edi  +
push ebx  +
push 43Fh  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
cmp [esi+0D14h] ebx +
jz loc_1015E60  +
push dword ptr [esi+4]  +
call ds:GetDC  +
lea edi [esi+0C18h] +
push edi  +
push 971h  +
push ebx  +
push ebx  +
push eax  +
push dword ptr [esi+0D14h]  +
mov [ebp+hDC] eax +
call ds:GetThemeMetric  +
push [ebp+hDC]  +
push dword ptr [esi+4]  +
call ds:ReleaseDC  +
mov eax [edi] +
mov [esi+42Ch] eax +
jmp loc_1015E60  +
mov edi [esi+0CD8h] +
push edi  +
mov ecx esi +
call sub_1034205  +
cmp eax ebx +
jz loc_1057B50  +
xor ecx ecx +
cmp eax [esi+4] +
setnz cl  +
mov eax ecx +
jmp loc_1057B62  +
push edi  +
push 1  +
push dword ptr [esi+4]  +
mov ecx esi +
call sub_106F784  +
neg eax  +
sbb eax eax +
inc eax  +
cmp eax ebx +
jz loc_1015E93  +
mov ecx esi +
call sub_106F1DE  +
jmp loc_1015E93  +
***
xor eax eax +
jmp loc_10204FB  +
mov edx [ebp+arg_8] +
jmp loc_1021735  +
push ecx  +
mov ecx ebx +
call sub_1072C80  +
jmp loc_1020238  +
push dy  +
lea eax [ebp+var_3C] +
push dword_10B10B8  +
push eax  +
call ds:InflateRect  +
jmp loc_1020261  +
mov eax [ebp+var_34] +
mov ecx [ebp+lprcDst] +
mov [ecx+8] eax +
jmp loc_1057BCB  +
mov eax [ebp+var_38] +
mov ecx [ebp+lprcDst] +
mov [ecx+4] eax +
jmp loc_1057BCB  +
mov eax [ebp+var_3C] +
mov ecx [ebp+lprcDst] +
mov [ecx] eax +
mov edi [ebp+lprcDst] +
jmp loc_1020291  +
mov [ebp+var_4] eax +
jmp loc_10202C7  +
mov eax [ebx+3Ch] +
mov dword_10B108C edx +
cmp eax edi +
jz loc_1057C03  +
xor ecx ecx +
inc ecx  +
not edx  +
and edx ecx +
push edx  +
push eax  +
mov [ebx+28h] ecx +
call sub_101E975  +
mov ecx ebx +
call sub_101E279  +
mov [ebx+28h] edi +
push [ebp+arg_8]  +
push edi  +
push 43Fh  +
push dword ptr [ebx+0C04h]  +
call ds:SendMessageW  +
cmp [ebx+0D14h] edi +
jz loc_10202ED  +
push dword ptr [ebx+4]  +
call ds:GetDC  +
lea esi [ebx+0C18h] +
push esi  +
push 971h  +
push edi  +
push edi  +
push eax  +
push dword ptr [ebx+0D14h]  +
mov [ebp+hDC] eax +
call ds:GetThemeMetric  +
push [ebp+hDC]  +
push dword ptr [ebx+4]  +
call ds:ReleaseDC  +
mov eax [esi] +
mov [ebx+42Ch] eax +
jmp loc_10202ED  +
mov eax dword_10B10CC +
mov esi ds:InflateRect +
neg eax  +
push eax  +
mov eax dword_10B10C8 +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call esi  +
mov eax dword_10B10CC +
neg eax  +
push eax  +
mov eax dword_10B10C8 +
neg eax  +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
call esi  +
jmp loc_1020340  +
mov eax [ebp+var_10] +
sub eax [ebp+var_18] +
jz loc_102044A  +
mov eax [ebp+var_14] +
sub eax [ebp+var_1C] +
jnz loc_10203CC  +
jmp loc_102044A  +
xor esi esi +
inc esi  +
jmp loc_102040D  +
mov [ebp+var_10] ecx +
jmp loc_102044A  +
mov [ebp+var_14] eax +
jmp loc_102044A  +
mov eax [ebp+var_1C] +
mov [ebp+rc.left] eax +
mov eax [ebp+var_14] +
mov [ebp+rc.right] eax +
jmp loc_1020467  +
push dword_10B10CC  +
mov esi ds:InflateRect +
push dword_10B10C8  +
lea eax [ebp+rc] +
push eax  +
call esi  +
push dword_10B10CC  +
lea eax [ebp+var_3C] +
push dword_10B10C8  +
push eax  +
call esi  +
jmp loc_1020474  +
lea esi [ebp+var_3C] +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
movs   +
xor edi edi +
inc edi  +
jmp loc_102049B  +
mov eax [ebp+rc.right] +
sub eax [ebp+rc.left] +
cmp [ebp+var_8] eax +
jz loc_10204BE  +
mov [ebp+var_8] eax +
mov [ebp+var_C] edi +
jmp loc_10204BE  +
push 1  +
mov ecx ebx +
call sub_1072C80  +
jmp loc_10204EB  +
***
cmp [ebx+0D00h] edi +
jz loc_1050E92  +
mov esi ds:GetSystemMetrics +
push 1  +
call esi  +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push edi  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:SetRect  +
mov [ebp+var_4] edi +
lea esi [ebx+44h] +
push [ebp+var_4]  +
lea eax [ebp+rcSrc] +
push dword ptr [ebx+0CE0h]  +
mov ecx ebx +
push dword ptr [ebx+0CDCh]  +
push eax  +
push esi  +
call sub_101F680  +
inc [ebp+var_4]  +
add esi 10h +
cmp [ebp+var_4] 3 +
jbe loc_1057D77  +
xor esi esi +
mov ecx ebx +
inc esi  +
call sub_102BC02  +
jmp loc_1050E92  +
mov ecx ebx +
mov [ebx+30h] edi +
call sub_1051D33  +
jmp loc_1050EBA  +
***
sub eax 4 +
jz loc_1057DE1  +
sub eax 5 +
jnz loc_100DE53  +
push 11h  +
push dword ptr [ebx+4]  +
call ds:KillTimer  +
mov ecx ebx +
call sub_1070AB4  +
jmp loc_100DE53  +
push dword ptr [ebx+4]  +
call ds:SetForegroundWindow  +
push 0Ch  +
push dword ptr [ebx+4]  +
call ds:KillTimer  +
mov esi ds:SHELL32_137 +
push 0  +
call esi  +
push 0  +
push 1  +
push 0F3h  +
add ebx 0B10h +
push dword ptr [ebx]  +
call ds:SendMessageW  +
push dword ptr [ebx]  +
call ds:UpdateWindow  +
push 1  +
call esi  +
jmp loc_100DE53  +
cmp dword ptr [ebx+0C50h] 0 +
jnz loc_100DE53  +
test byte ptr [ebx+40h] 1 +
jz loc_100DE53  +
push 3  +
push dword ptr [ebx+4]  +
call ds:KillTimer  +
mov eax 0FFFFF001h +
mov [ebx+0C98h] eax +
mov [ebx+0C9Ch] eax +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetWindowRect  +
test byte ptr [ebx+40h] 2 +
jz loc_100DE53  +
lea eax [ebp+pt] +
push eax  +
call ds:GetCursorPos  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_100DE53  +
mov ecx ebx +
call sub_100DBEB  +
jmp loc_100DE53  +
cmp dword ptr [ebx+0C50h] 0 +
jnz loc_100DE53  +
mov eax [ebx+40h] +
test al 1 +
jz loc_100DE53  +
test al 2 +
jnz loc_100DE53  +
push dword ptr [ebx+3Ch]  +
call sub_106F249  +
test eax eax +
jz loc_100DE53  +
lea ecx [ebx+98h] +
call sub_1070875  +
test eax eax +
jz loc_100DE53  +
lea eax [ebp+pt] +
push eax  +
call ds:GetCursorPos  +
mov eax [ebx+0CD8h] +
shl eax 4 +
lea esi [eax+ebx+44h] +
mov eax dy +
lea edi [ebp+rc] +
movs   +
shl eax 2 +
push eax  +
mov eax dword_10B10B8 +
movs   +
shl eax 2 +
movs   +
push eax  +
lea eax [ebp+rc] +
push eax  +
movs   +
call ds:InflateRect  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_100DE53  +
mov ecx ebx +
call sub_1052F76  +
test eax eax +
jnz loc_100DE53  +
cmp dword ptr [ebx+0B64h] 1 +
jz loc_100DE53  +
push eax  +
push eax  +
push 439h  +
push dword ptr [ebx+0C10h]  +
call ds:SendMessageW  +
test eax eax +
jnz loc_100DE53  +
mov ecx ebx +
call sub_1071F18  +
jmp loc_100DE53  +
push 12h  +
push dword ptr [ebx+4]  +
call ds:KillTimer  +
push 0  +
push 0  +
mov ecx ebx +
call sub_10406EE  +
jmp loc_100DE53  +
dec eax  +
dec eax  +
jnz loc_100DE53  +
call sub_1072047  +
jmp loc_100DE53  +
***
push dword ptr [edi]  +
call ds:__imp_SHELL32_155  +
push esi  +
call ds:LocalFree  +
jmp loc_1010522  +
***
push edi  +
mov ecx esi +
call sub_1072C80  +
jmp loc_101E777  +
push 1  +
mov ecx esi +
call sub_1072C80  +
jmp loc_101E7E7  +
***
push 3E8h  +
call ds:Sleep  +
jmp loc_1049498  +
and dword ptr [edi] 0 +
jmp loc_10494AA  +
push 1  +
push eax  +
call ds:GetLastActivePopup  +
push eax  +
call ds:SwitchToThisWindow  +
jmp loc_1049567  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx esi +
cmp ecx eax +
jnz loc_1058031  +
cmp edx ebx +
jnz loc_1058031  +
push offset dword_1058058  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ebx [ebp+var_4] +
jmp loc_10494EB  +
call sub_101AE40  +
mov [ebp+var_4] eax +
jmp loc_104955E  +
push 1  +
mov ecx esi +
call sub_1048A84  +
mov [edi] ebx +
jmp loc_1049567  +
***
cmp esi 195h +
ja loc_1037081  +
call sub_104EBCA  +
test eax eax +
jz loc_1037081  +
cmp esi 193h +
jnz loc_1058090  +
mov eax 217h +
jmp loc_10580A2  +
xor eax eax +
cmp esi 194h +
setnz al  +
lea eax [eax+eax+218h] +
push eax  +
mov ecx ebx +
call sub_1040167  +
push 1  +
xor edi edi +
push edi  +
push 3  +
push edi  +
mov ecx ebx +
call sub_100309D  +
push edi  +
push edi  +
push edi  +
cmp esi 193h +
jnz loc_10580D4  +
push edi  +
call ds:GetDesktopWindow  +
push eax  +
call ds:CascadeWindows  +
jmp loc_10580ED  +
xor eax eax +
cmp esi 194h +
setnz al  +
push eax  +
call ds:GetDesktopWindow  +
push eax  +
call ds:TileWindows  +
push edi  +
push 1F4h  +
push 12h  +
push dword ptr [ebx+4]  +
mov [ebx+0C70h] edi +
call ds:SetTimer  +
push edi  +
push edi  +
push 3  +
push edi  +
mov ecx ebx +
call sub_100309D  +
jmp loc_1037081  +
push dword ptr [ebx+4]  +
call ds:UpdateWindow  +
push 64h  +
call ds:Sleep  +
mov ecx ebx +
mov byte_10B39B8 1 +
call sub_1070AB4  +
push dword_10B10EC  +
call ds:SHELL32_54  +
jmp loc_1037081  +
call ds:GetActiveWindow  +
mov ecx dword_10B10F4 +
cmp eax ecx +
jnz loc_103B0B5  +
push ecx  +
call ds:IsWindowVisible  +
jmp loc_104E453  +
push dword ptr [ebx+4]  +
call ds:SetForegroundWindow  +
mov esi ds:SendMessageW +
push 0  +
push 1  +
mov edi 0F3h +
push edi  +
push dword ptr [ebx+0B10h]  +
call esi  +
push 0  +
push 0  +
push edi  +
push dword ptr [ebx+0B10h]  +
call esi  +
jmp loc_1037081  +
xor eax eax +
cmp dword_10B10F8 eax +
push 1  +
setz al  +
push eax  +
call sub_1009AAB  +
jmp loc_1037081  +
dec esi  +
dec esi  +
jz loc_10581FD  +
dec esi  +
jz loc_10581F3  +
dec esi  +
dec esi  +
jz loc_10581DD  +
dec esi  +
dec esi  +
jz loc_10581D1  +
dec esi  +
jnz loc_1037081  +
push esi  +
call sub_1071205  +
jmp loc_1037081  +
push 0  +
call sub_1040043  +
jmp loc_1037081  +
cmp [ebp+arg_4] 0 +
jz loc_10581E7  +
push 8  +
jmp loc_10581E9  +
push 1  +
call sub_104945C  +
jmp loc_1037081  +
call sub_107046A  +
jmp loc_1037081  +
push 0  +
push 2001h  +
push 0  +
push offset loc_107003D  +
call ds:__imp_SHCreateThread  +
jmp loc_1037081  +
push 1  +
push 1F5h  +
call sub_103FBB7  +
jmp loc_1037081  +
sub esi 3 +
jz loc_105831A  +
sub esi 0Bh +
jnz loc_1037081  +
cmp dword_10B24CC esi +
jz loc_1058302  +
mov dl byte_10B24D0 +
mov edi 400000h +
mov esi 80000000h +
cmp dl 4 +
jnb loc_105825E  +
test dl dl +
jnz loc_10582AB  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10582AB  +
mov ebx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax ebx +
and eax edi +
and ecx esi +
cmp eax ebx +
jnz loc_10582AB  +
cmp ecx dword_10B24C4 +
jnz loc_10582AB  +
push offset dword_1068970  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov dl byte_10B24D0 +
cmp dword_10B24CC 0 +
jz loc_1058302  +
cmp dl 4 +
jnb loc_10582BD  +
test dl dl +
jnz loc_1058302  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1058302  +
mov edx dword_10B24C0 +
mov eax edx +
and eax edi +
mov edi dword_10B24C4 +
mov ecx edi +
and ecx esi +
cmp eax edx +
jnz loc_1058302  +
cmp ecx edi +
jnz loc_1058302  +
push offset dword_1068960  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
call sub_1070539  +
test eax eax +
jz loc_1037081  +
call ds:LockWorkStation  +
jmp loc_1037081  +
push dword ptr [ebx+4]  +
call ds:UpdateWindow  +
push 64h  +
call ds:Sleep  +
push [ebp+arg_4]  +
mov ecx ebx +
push 0  +
push dword_10B10EC  +
mov byte_10B39B8 1 +
call sub_1070EFD  +
jmp loc_1037081  +
cmp dword_10B24CC 0 +
mov esi 80000000h +
mov edi 10000h +
jz loc_10583AF  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1058369  +
test al al +
jnz loc_10583AF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10583AF  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_10583AF  +
cmp edx dword_10B24C4 +
jnz loc_10583AF  +
push offset dword_10585D0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push 2  +
mov ecx ebx +
call sub_10712E0  +
cmp dword_10B24CC 0 +
jz loc_1037081  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10583D6  +
test al al +
jnz loc_1037081  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1037081  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1037081  +
cmp edx edi +
jnz loc_1037081  +
push offset dword_10585E0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1037081  +
push 4  +
call sub_104945C  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
inc eax  +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
push 1121h  +
push 0  +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
call WinSqmAddToStream  +
jmp loc_1037081  +
push dword ptr [ebx+4]  +
call ds:UpdateWindow  +
push 64h  +
call ds:Sleep  +
push dword_10B10EC  +
call ds:SHELL32_254  +
jmp loc_1037081  +
sub esi 1389h +
jz loc_10585AC  +
sub esi 8CA7h +
jz loc_10584BD  +
sub esi 35h +
jz loc_10584B3  +
sub esi 20h +
jz loc_10584A9  +
dec esi  +
jnz loc_1037081  +
push esi  +
push esi  +
call ds:SHELL32_91  +
jmp loc_1037081  +
call sub_106FEB0  +
jmp loc_1037081  +
call sub_105153C  +
jmp loc_1037081  +
and [ebp+var_24] 0 +
mov [ebp+var_20] 100h +
mov [ebp+var_1C] 9 +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
call ds:GetFocus  +
mov edi ds:SendMessageW +
push 0  +
push 0  +
push 414h  +
push dword ptr [ebx+0C04h]  +
mov esi eax +
call edi  +
push 0  +
push 10002h  +
push 128h  +
push dword ptr [ebx+4]  +
mov [ebp+arg_4] eax +
call edi  +
push 10h  +
call ds:GetAsyncKeyState  +
xor ecx ecx +
test ax ax +
setl cl  +
mov edi ecx +
test esi esi +
jz loc_1058589  +
push esi  +
push dword ptr [ebx+0B10h]  +
call sub_100E838  +
test eax eax +
jz loc_1058549  +
test edi edi +
jnz loc_1058564  +
lea eax [ebp+var_24] +
push eax  +
push 1  +
push dword ptr [ebx+3Ch]  +
call ds:SHLWAPI_479  +
jmp loc_1037081  +
cmp esi [ebp+arg_4] +
jnz loc_105856E  +
test edi edi +
jz loc_1058564  +
mov ecx ebx +
push dword ptr [ebx+0C04h]  +
call sub_1039F5F  +
jmp loc_1037081  +
call sub_106FE89  +
jmp loc_1037081  +
push esi  +
push dword ptr [ebx+0C04h]  +
call sub_100E838  +
test eax eax +
jz loc_1058589  +
test edi edi +
jnz loc_1058535  +
push [ebp+arg_4]  +
mov ecx ebx +
jmp loc_105855A  +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [ebx+3Ch]  +
call ds:SHLWAPI_478  +
test eax eax +
jz loc_1037081  +
mov ecx ebx +
test edi edi +
jz loc_1058554  +
push dword ptr [ebx+0B10h]  +
jmp loc_105855A  +
push 3  +
call ds:SHLWAPI_413  +
test eax eax +
jz loc_1037081  +
xor eax eax +
push eax  +
push eax  +
push 0Dh  +
push 0FFFFFFFFh  +
push eax  +
call WinStationSetInformationW  +
jmp loc_1037081  +
***
mov esi [ebx+24h] +
push 0  +
call sub_1072C80  +
mov [ebx+24h] esi +
jmp loc_10218DD  +
push 1  +
mov ecx ebx +
call sub_1072C80  +
jmp loc_102199E  +
***
push 40000017h  +
call ds:__imp_SHELL32_100  +
jmp loc_1027A32  +
push 4  +
jmp loc_105862A  +
push 3  +
jmp loc_105862A  +
push 2  +
pop eax  +
jmp loc_1027839  +
push offset aShellfolderban  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_100665F  +
mov eax [ebp+var_224] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1027958  +
***
mov dword ptr [esi+20h] 1 +
jmp loc_102D6F9  +
lea eax [ebp+rc2] +
push eax  +
mov ecx esi +
call sub_1071B92  +
mov [esi+0CE4h] eax +
shl eax 4 +
lea ebx [eax+esi+44h] +
jmp loc_102D734  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
push 0  +
push dword ptr [esi+4]  +
call sub_106F784  +
jmp loc_102D774  +
push 0  +
push 0  +
push 40Dh  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
jmp loc_102D78D  +
xor ecx ecx +
inc ecx  +
mov edx edi +
not edx  +
and edx ecx +
push edx  +
push eax  +
mov [esi+28h] ecx +
call sub_101E975  +
mov ecx esi +
call sub_101E279  +
and dword ptr [esi+28h] 0 +
jmp loc_102D7BB  +
push dword ptr [esi+4]  +
call ds:GetDC  +
lea edi [esi+0C18h] +
push edi  +
push 971h  +
push 0  +
push 0  +
push eax  +
push dword ptr [esi+0D14h]  +
mov [ebp+hDC] eax +
call ds:GetThemeMetric  +
push [ebp+hDC]  +
push dword ptr [esi+4]  +
call ds:ReleaseDC  +
mov eax [edi] +
mov [esi+42Ch] eax +
jmp loc_102D7DC  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
push 1  +
push dword ptr [esi+4]  +
call sub_106F784  +
test eax eax +
jnz loc_102D7FA  +
mov ecx esi +
call sub_106F1DE  +
jmp loc_102D7FA  +
***
xor eax eax +
cmp [esi+0D14h] edi +
setz al  +
push eax  +
push 840000h  +
push dword ptr [esi+4]  +
call sub_10149F4  +
push 37h  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+4]  +
call ds:SetWindowPos  +
push 1  +
push edi  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
jmp loc_1051196  +
***
mov ecx esi +
call sub_105153C  +
xor eax eax +
inc eax  +
push eax  +
push 0  +
push eax  +
mov ecx esi +
mov [esi+24h] eax +
call sub_10218C2  +
and dword ptr [esi+24h] 0 +
jmp loc_102103D  +
***
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetWindowRect  +
mov eax [edi+18h] +
test al 2 +
jnz loc_10587D1  +
mov ecx [edi+8] +
mov [ebp+rc.left] ecx +
mov ecx [edi+0Ch] +
mov [ebp+rc.top] ecx +
test al 1 +
jnz loc_10587E7  +
mov eax [edi+10h] +
add eax [ebp+rc.left] +
mov [ebp+rc.right] eax +
mov eax [edi+14h] +
add eax [ebp+rc.top] +
mov [ebp+rc.bottom] eax +
push ebx  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1071B92  +
mov ebx eax +
mov [esi+0CD8h] ebx +
cmp dword_10B108C ebx +
jz loc_105888C  +
mov eax [esi+3Ch] +
mov dword_10B108C ebx +
test eax eax +
jz loc_1058832  +
xor ecx ecx +
inc ecx  +
mov edx ebx +
not edx  +
and edx ecx +
push edx  +
push eax  +
mov [esi+28h] ecx +
call sub_101E975  +
mov ecx esi +
call sub_101E279  +
and dword ptr [esi+28h] 0 +
push ebx  +
push 0  +
push 43Fh  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
cmp dword ptr [esi+0D14h] 0 +
jz loc_105888C  +
push dword ptr [esi+4]  +
call ds:GetDC  +
lea ebx [esi+0C18h] +
push ebx  +
push 971h  +
push 0  +
push 0  +
push eax  +
push dword ptr [esi+0D14h]  +
mov [ebp+hDC] eax +
call ds:GetThemeMetric  +
push [ebp+hDC]  +
push dword ptr [esi+4]  +
call ds:ReleaseDC  +
mov eax [ebx] +
mov [esi+42Ch] eax +
pop ebx  +
jmp loc_10340FC  +
***
push ebx  +
push 7Bh  +
push dword ptr [esi+4]  +
push dword ptr [esi+3Ch]  +
call sub_100E582  +
jmp loc_104E403  +
***
call ds:GetFocus  +
lea ecx [ebp+Point] +
push ecx  +
push eax  +
mov [ebp+Point.y] ebx +
mov [ebp+Point.x] ebx +
call ds:ClientToScreen  +
movzx edi word ptr [ebp+Point.y] +
movzx eax word ptr [ebp+Point.x] +
shl edi 10h +
or edi eax +
jmp loc_104E3AE  +
***
push 400000h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_104F174  +
lea eax [ebp+NewItem] +
push eax  +
push edi  +
push edi  +
push 16h  +
push edi  +
call ds:SHGetFolderPathW  +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp+var_738] eax +
jz loc_104F174  +
lea eax [ebp+var_744] +
push eax  +
push edi  +
call sub_1030467  +
test eax eax +
jnz loc_105894F  +
mov eax [ebp+var_744] +
cmp eax edi +
jz loc_1058945  +
cmp eax 1 +
jz loc_1058945  +
cmp eax 10h +
jz loc_1058945  +
cmp eax 11h +
jnz loc_105894F  +
mov [ebp+var_738] 1 +
cmp [ebp+var_738] edi +
jz loc_104F174  +
push edi  +
push edi  +
push 800h  +
push [ebp+hMenu]  +
call esi  +
push 104h  +
lea eax [ebp+NewItem] +
push eax  +
push 2CEh  +
push hInstance  +
call ebx  +
lea eax [ebp+NewItem] +
push eax  +
push 7FF0h  +
push edi  +
push [ebp+hMenu]  +
call esi  +
jmp loc_104F174  +
push [ebp+hMenu]  +
mov ecx [ebp+var_72C] +
call sub_106F013  +
mov ebx eax +
jmp loc_104F1D6  +
mov ebx 8102h +
jmp loc_104F1A9  +
push 104h  +
lea eax [ebp+var_720] +
push eax  +
lea eax [ebx-2] +
push eax  +
push [ebp+var_728]  +
call sub_10432C3  +
push offset aFind  +
lea eax [ebp+var_720] +
push eax  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_1058A01  +
push edi  +
push offset loc_1058ACC  +
push edi  +
call sub_106F866  +
jmp loc_104F1FD  +
push 3Ch  +
lea eax [ebp+var_784] +
push edi  +
push eax  +
call memset  +
mov eax [ebp+hWnd] +
mov [ebp+var_780] eax +
add ebx 0FFFFFFFEh +
movzx eax bx +
add esp 0Ch +
mov [ebp+var_77C] eax +
lea eax [ebp+pszPath] +
push eax  +
push [ebp+pidl]  +
mov [ebp+var_788] 40h +
mov [ebp+var_770] 1 +
call ds:SHGetPathFromIDListA  +
lea eax [ebp+var_518] +
push eax  +
push [ebp+pidl]  +
call ds:__imp_SHGetPathFromIDListW  +
or [ebp+var_784] 4000h +
lea eax [ebp+pszPath] +
mov [ebp+var_774] eax +
lea eax [ebp+var_518] +
mov [ebp+var_758] eax +
mov eax [ebp+var_728] +
mov ecx [eax] +
lea edx [ebp+var_788] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_104F1FD  +
mov ecx [ebp+var_72C] +
call sub_106FE75  +
jmp loc_104F1FD  +
mov ecx [ebp+var_72C] +
call sub_106FE4F  +
jmp loc_104F1FD  +
***
sal dword ptr [edi] 1 +
add ebx [ecx] +
retf 21B8h  +
***
push offset dword_1029DA0  +
call ds:SHLWAPI_618  +
test eax eax +
jz loc_102CF0F  +
xor edi edi +
jmp loc_102CF37  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_102CF75  +
imul eax eax +
push edi  +
push eax  +
push 1Ah  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
jmp loc_102CF75  +
***
mov eax offset byte_1002CD0 +
jmp loc_1045511  +
***
push ecx  +
call sub_1002BCA  +
pop ecx  +
xor eax eax +
jmp loc_1035790  +
***
mov eax [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ecx  +
push 2  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call sub_107E637  +
jmp loc_1035DF1  +
***
push edx  +
push edx  +
push 129h  +
push dword ptr [eax+4]  +
call ds:SendMessageW  +
test al 1 +
jnz loc_104E765  +
or dword ptr [ebx+8] 80h +
jmp loc_104E765  +
***
push esi  +
call ds:DeleteDC  +
mov [ebp+var_4C] edi +
mov esi edi +
jmp loc_1035956  +
mov [ebp+dy] 2 +
jmp loc_10359D5  +
push 6  +
call ds:GetSystemMetrics  +
mov ecx [ebp+var_60] +
mov esi [ebp+var_98] +
add eax eax +
jmp loc_105108C  +
mov esi [ebp+var_88] +
sub esi [ebp+var_90] +
cmp esi edi +
jg loc_1035B51  +
mov ecx [ebp+var_50] +
mov [ebp+var_94] edx +
add ecx eax +
jmp loc_1035B51  +
xor eax eax +
jmp loc_1035B8C  +
mov eax [ebp+Rect.right] +
sub eax [ebp+var_88] +
lea esi [ebp+var_90] +
add eax [ebp+var_90] +
lea edi [ebp+rc] +
movs   +
movs   +
cdq   +
sub eax edx +
movs   +
sar eax 1 +
movs   +
test eax eax +
jg loc_1058BFE  +
xor eax eax +
push [ebp+dy]  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx+154h]  +
lea eax [ebx+158h] +
push eax  +
push [ebp+var_4C]  +
mov ecx ebx +
call sub_1035DC4  +
mov eax [ebp+var_84] +
sub eax [ebp+var_8C] +
add eax [ebp+var_50] +
add [ebp+dy] eax +
mov eax [ebp+var_60] +
jmp loc_1035BD6  +
xor eax eax +
jmp loc_1035C0B  +
cmp dword ptr [ebx+1BCh] 0 +
jz loc_1035C7F  +
push 0  +
push 0  +
push 129h  +
push dword ptr [ebx+4]  +
call ds:SendMessageW  +
test al 1 +
jnz loc_1035C7F  +
lea esi [ebp+Rect] +
lea edi [ebp+var_DC] +
movs   +
movs   +
push 0  +
movs   +
push 0FFFFFFFEh  +
lea eax [ebp+var_DC] +
push eax  +
movs   +
call ds:InflateRect  +
lea eax [ebp+var_DC] +
push eax  +
push [ebp+var_4C]  +
call ds:DrawFocusRect  +
jmp loc_1035C7F  +
***
mov eax [ebp+arg_4] +
mov dword ptr [eax] 3 +
jmp loc_104E4E3  +
***
mov esi [esi+1CCh] +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
jmp loc_104EB47  +
***
mov eax [ebp+var_6C] +
jmp loc_102010F  +
***
mov eax ecx +
jmp loc_101FA0C  +
***
xor eax eax +
jmp loc_101F942  +
lea ecx [eax+edx] +
jmp loc_101F92F  +
***
call sub_1072F73  +
jmp loc_1035770  +
***
cmp ebx 0Dh +
jz loc_1058D30  +
cmp ebx 20h +
jz loc_1058D30  +
push dword ptr [ebp+14h]  +
push ebx  +
push edi  +
push dword ptr [esi+4]  +
call ds:GetParent  +
push eax  +
call ds:SendMessageW  +
test eax eax +
jz loc_1035812  +
cmp edi 0Dh +
jz loc_102D938  +
jmp loc_1035794  +
***
mov ecx esi +
call sub_1035E92  +
jmp loc_1035794  +
***
push 1  +
jmp loc_104EAF5  +
***
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
jmp loc_100814D  +
***
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
jmp loc_1008172  +
***
push eax  +
call sub_107313B  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
jmp loc_100EA78  +
***
test edi edi +
jz loc_10081A8  +
mov ecx 80070057h +
jmp loc_10081B0  +
mov ecx 80070057h +
jmp loc_10081E1  +
mov [ebp+arg_8] offset byte_1002CD0 +
xor edx edx +
jmp loc_10081E1  +
mov esi 80070057h +
cmp edi eax +
jz loc_1058E0B  +
mov ecx [ebp+arg_0] +
mov [ecx] ax +
jmp loc_1058E0B  +
cmp edx eax +
jz loc_1008245  +
mov ecx [ebp+arg_8] +
cmp [ecx] ax +
jz loc_1008245  +
cmp [ebp+arg_0] eax +
jnz loc_1058DCA  +
mov esi 80070057h +
jmp loc_1058E0B  +
mov esi 8007007Ah +
jmp loc_1008245  +
lea eax [ebx+ebx] +
cmp eax 2 +
jbe loc_1008245  +
add eax 0FFFFFFFEh +
push eax  +
mov eax [ebp+arg_18] +
and eax 0FFh +
push eax  +
add ecx 2 +
push ecx  +
call memset  +
add esp 0Ch +
jmp loc_1008245  +
mov ecx [ebp+arg_0] +
xor eax eax +
mov [ecx] ax +
jmp loc_1008245  +
test [ebp+arg_18] 1C00h +
jz loc_1058E33  +
test edi edi +
jz loc_1058E33  +
push [ebp+arg_18]  +
lea eax [ebp+var_4] +
push eax  +
lea eax [edi+edi] +
mov edi [ebp+arg_0] +
push eax  +
lea ebx [ebp+arg_4] +
xor ecx ecx +
call sub_1073177  +
mov ebx [ebp+arg_4] +
test esi esi +
jl loc_1008285  +
jmp loc_100824D  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
jmp loc_1008258  +
mov [eax] ebx +
jmp loc_1008263  +
***
or al [ebp+arg_4] +
jmp loc_10233C9  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
push 440h  +
push dword ptr [edi]  +
call esi  +
xor eax eax +
inc eax  +
jmp loc_10233D6  +
***
mov eax [eax+704h] +
retn   +
***
mov [ebp+arg_4] 7FFFFFFFh +
jmp loc_10225E1  +
***
lea ecx [eax+910h] +
call sub_102450A  +
test eax eax +
jz loc_104764E  +
xor eax eax +
inc eax  +
retn   +
***
mov ecx edi +
call sub_107344F  +
jmp loc_101116D  +
***
and [ebp+var_10] eax +
and [ebp+var_14] eax +
jmp loc_10110B3  +
lea edi [esi+4] +
mov eax [edi] +
mov eax [eax] +
push 1  +
push 0  +
push eax  +
call sub_102A6C9  +
push eax  +
push [ebp+var_C]  +
push ebx  +
call ds:off_10192F8  +
mov [ebp+lParam] eax +
test eax eax +
jz loc_10110D8  +
push dword ptr [esi]  +
call ds:off_106C7A8  +
and [ebp+var_C] 0 +
mov [ebp+var_18] eax +
mov eax [ebp+var_C] +
cmp eax [ebp+var_18] +
jge loc_1058F2C  +
push 0  +
push eax  +
push dword ptr [esi]  +
call ds:off_10084F8  +
mov ebx eax +
test ebx ebx +
jz loc_1058F1F  +
push ebx  +
push 0FFFFFFFFh  +
push [ebp+lParam]  +
call ds:off_10062D4  +
cmp eax 0FFFFFFFFh +
jnz loc_1058F16  +
mov [ebp+var_1] 0 +
push ebx  +
call ds:DestroyIcon  +
jmp loc_1058F23  +
mov [ebp+var_1] 0 +
inc [ebp+var_C]  +
cmp [ebp+var_1] 0 +
jnz loc_1058EE8  +
cmp [ebp+var_1] 0 +
jz loc_1058F88  +
push dword ptr [esi]  +
call ds:off_1035224  +
mov eax [ebp+lParam] +
and [ebp+var_C] 0 +
cmp dword ptr [esi+10h] 0 +
mov [esi] eax +
jbe loc_10110D8  +
mov ebx edi +
mov edi ds:SendMessageW +
push [ebp+lParam]  +
mov eax [ebx] +
push 0  +
push 430h  +
push dword ptr [eax]  +
call edi  +
mov eax [ebx] +
push 0  +
push 0  +
push 421h  +
push dword ptr [eax]  +
call edi  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add ebx 4 +
cmp eax [esi+10h] +
jnb loc_10110D8  +
jmp loc_1058F55  +
push [ebp+lParam]  +
call ds:off_1035224  +
jmp loc_10110D8  +
***
mov edi [ebp+0Ch] +
mov ebx 7FFFFFFFh +
test edi edi +
jl loc_1058FD2  +
push 0FFFFFFFFh  +
push 2  +
call sub_1010EB3  +
dec eax  +
cmp edi eax +
jge loc_1058FD2  +
push 1  +
inc edi  +
push edi  +
mov ecx esi +
call sub_1010F3D  +
mov ecx [esi+0Ch] +
push 0  +
push eax  +
call sub_10469C8  +
mov ebx eax +
mov ecx [esi+0Ch] +
push ebx  +
push dword ptr [ebp+8]  +
call sub_1022904  +
pop edi  +
pop ebx  +
jmp loc_1046F00  +
***
mov ecx [esi+8] +
push 1  +
push [ebp+arg_4]  +
call sub_10736B7  +
mov ebx eax +
xor eax eax +
cmp ebx 0FFFFFFFFh +
setnz al  +
mov [ebp+arg_8] eax +
jmp loc_1022436  +
push edi  +
mov ecx esi +
call sub_1047179  +
or ebx 0FFFFFFFFh +
mov [ebp+arg_8] 1 +
jmp loc_1022403  +
push 0FFFFFFFFh  +
push 2  +
mov ecx esi +
call sub_1010EB3  +
mov [ebp+var_C] eax +
test eax eax +
jle loc_102241C  +
push 1  +
push edi  +
mov ecx esi +
call sub_1021FC2  +
cmp eax [ebp+var_8] +
jnz loc_1059059  +
push 1  +
push edi  +
mov ecx esi +
call sub_1010F3D  +
mov ecx [ebp+arg_4] +
push ebx  +
mov [eax+14h] ecx +
push edi  +
mov ecx esi +
call sub_102210B  +
inc edi  +
cmp edi [ebp+var_C] +
jge loc_102241C  +
jmp loc_1059031  +
***
mov eax [ebp+arg_C] +
mov [esi] eax +
mov eax [ebp+arg_10] +
mov [esi+4] eax +
jmp loc_102A26B  +
***
inc eax  +
cmp ax 0Ch +
jbe loc_102440B  +
xor eax eax +
inc edx  +
inc eax  +
jmp loc_102440B  +
***
sub eax edi +
sar eax 1 +
mov esi eax +
jmp loc_10528C2  +
***
mov eax 42Ch +
jmp loc_102A29F  +
***
xor eax eax +
jmp loc_102A2C6  +
***
jb loc_10590AF  +
cmp eax esi +
jnb loc_10236FD  +
xor eax eax +
inc eax  +
jmp loc_10236FF  +
***
mov dword ptr [ebx+30h] 1 +
jmp loc_102B3F2  +
lea edi [ebx+42Ch] +
mov esi offset dword_100D864 +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
jmp loc_102B43F  +
xor eax eax +
mov [ebx+440h] esi +
mov [ebx+444h] esi +
mov [ebx+458h] esi +
mov [ebx+448h] esi +
mov [ebx+44Ch] esi +
mov dword ptr [ebx+664h] 7FFFFFFFh +
mov [ebx+45Ch] ax +
mov [ebx+450h] esi +
mov [ebx+454h] esi +
jmp loc_102B44F  +
mov dword ptr [ebx+210h] 4 +
jmp loc_102B471  +
pop ecx  +
mov ecx [ebp+var_4] +
push esi  +
push offset loc_1074664  +
call sub_100831C  +
mov ecx [ebp+var_4] +
call sub_107397F  +
mov [ebp+var_8] 80004005h +
jmp loc_102B4C4  +
push esi  +
push offset loc_1074664  +
call sub_100831C  +
mov ecx [ebp+var_4] +
call sub_107397F  +
mov [ebp+var_8] 8007000Eh +
jmp loc_102B4AA  +
mov eax [ebx] +
cmp eax esi +
jz loc_102B4C4  +
mov edi [eax] +
jmp loc_105918A  +
push edi  +
push dword ptr [ebx]  +
call ds:off_1002B68  +
or dword ptr [eax+428h] 0FFFFFFFFh +
dec edi  +
js loc_102B4C4  +
jmp loc_105917A  +
***
dec ecx  +
mov [eax] ecx +
jmp loc_1024729  +
***
cmp dword ptr [edi+424h] 0 +
jz loc_10591C8  +
lea eax [edi+420h] +
mov edx [eax] +
lea ecx [esi+434h] +
mov [ecx] edx +
mov edx 0DF2h +
cmp [eax] edx +
jbe loc_102462E  +
mov [ecx] edx +
jmp loc_102462E  +
and dword ptr [esi+434h] 0 +
jmp loc_102462E  +
***
push esi  +
lea ecx [esi+45Ch] +
call sub_1073C26  +
mov [ebp+arg_4] eax +
jmp loc_1024770  +
cmp [ebp+arg_4] 0 +
jz loc_10247A9  +
add edi 910h +
push ebx  +
mov ecx edi +
call sub_1073C26  +
test eax eax +
jz loc_10247A9  +
mov ecx edi +
call sub_1073920  +
test eax eax +
jz loc_10247A9  +
add esi 45Ch +
push esi  +
call sub_1073944  +
jmp loc_10247B3  +
***
add esi 910h +
lea edi [ebx+45Ch] +
mov ecx 82h +
movs   +
mov esi [ebp+arg_4] +
jmp loc_104760A  +
mov eax [esi+434h] +
mov [ebx+420h] eax +
jmp loc_104761B  +
***
push 0Ah  +
call sub_100801C  +
cmp [esi] edi +
jnz loc_104744B  +
jmp loc_10474C4  +
pop ecx  +
jmp loc_10474C4  +
***
push 8  +
lea eax [ebx+20h] +
push eax  +
push 0Bh  +
push 48h  +
push offset aLastadvertisem  +
push edi  +
push esi  +
call ds:SHLWAPI_631  +
push 8  +
lea eax [ebx+28h] +
push eax  +
push 0Bh  +
push 48h  +
push offset aUserstarttime  +
push edi  +
push esi  +
call ds:SHLWAPI_631  +
jmp loc_102B2D7  +
mov dword ptr [ebx+30h] 1 +
jmp loc_102B31B  +
call sub_10742E2  +
test eax eax +
jge loc_102B31B  +
mov [ebp+var_8] 1 +
jmp loc_102B31B  +
mov dword ptr [ebx+30h] 1 +
jmp loc_102B324  +
lea eax [ebp+hKey] +
push eax  +
push 20006h  +
push 0  +
push edi  +
push esi  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_102B32E  +
push offset aIconstreams  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_102B32E  +
cmp [ebp+arg_C] 0 +
jz loc_1059319  +
push [ebp+arg_C]  +
mov ecx ebx +
call sub_1074089  +
and dword ptr [ebx+30h] 0 +
jmp loc_102B338  +
***
lea ebx [esi+20h] +
mov [ebx] edi +
mov [ebx+4] edi +
lea edi [esi+28h] +
and dword ptr [edi] 0 +
and dword ptr [edi+4] 0 +
mov dword ptr [esi+4] 6 +
mov dword ptr [esi+14h] 493E0h +
mov dword ptr [esi+1Ch] 93A80h +
jmp loc_102C277  +
push eax  +
jmp loc_102C286  +
ja loc_102C2F1  +
cmp ebx eax +
ja loc_102C2F1  +
jmp loc_102C2B0  +
push 1  +
push edi  +
push [ebp+arg_0]  +
mov edi ds:GetSystemMetrics +
push 32h  +
call edi  +
push eax  +
push 31h  +
call edi  +
push eax  +
call ds:off_10192F8  +
mov [esi+10h] eax +
jmp loc_102C2EA  +
***
mov ecx [ebp+arg_8] +
jmp loc_1021C91  +
***
mov ecx [ebp+arg_8] +
cmp ecx 0FFFFFFFFh +
jnz loc_10593BC  +
lea eax [ebp+Point] +
push eax  +
call ds:GetCursorPos  +
movzx edx word ptr [ebp+Point.x] +
mov ecx eax +
movzx eax word ptr [ebp+Point.y] +
shl eax 10h +
or eax edx +
neg ecx  +
sbb ecx ecx +
and ecx eax +
jmp loc_1059414  +
cmp ecx 0FFFFFFFEh +
jnz loc_1059414  +
lea eax [ebp+Points] +
push eax  +
push [ebp+wParam]  +
push 41Dh  +
push [ebp+hWndFrom]  +
call ds:SendMessageW  +
test eax eax +
jz loc_1059412  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push [ebp+hWndFrom]  +
call ds:MapWindowPoints  +
mov ecx [ebp+Point.y] +
mov eax [ebp+Points.y] +
add eax ecx +
cdq   +
sub eax edx +
mov edx [ebp+Point.x] +
sar eax 1 +
movzx ecx ax +
mov eax [ebp+Points.x] +
add eax edx +
cdq   +
sub eax edx +
sar eax 1 +
movzx eax ax +
shl ecx 10h +
or ecx eax +
jmp loc_1059414  +
xor ecx ecx +
movzx eax word ptr [esi+4] +
movzx edx word ptr [ebp+lParam] +
shl eax 10h +
or eax edx +
jmp loc_1047882  +
***
push dword ptr [ebp+18h]  +
push offset loc_100D9AB  +
push dword ptr [ebp+8]  +
call sub_103519B  +
jmp loc_100D9C9  +
***
push 10h  +
lea eax [ebp+rc] +
push eax  +
push ebx  +
call ds:FillRect  +
jmp loc_1035647  +
***
xor eax eax +
cmp [ebx+320h] edi +
jz loc_105945B  +
push 10h  +
jmp loc_1059463  +
test byte ptr [esi+28h] 50h +
jz loc_1059464  +
push 8  +
pop eax  +
mov ebx [ebx+364h] +
sub ebx edi +
jz loc_105947F  +
dec ebx  +
dec ebx  +
jz loc_105947A  +
dec ebx  +
jnz loc_1059482  +
or eax 20h +
jmp loc_1059482  +
or eax 4 +
jmp loc_1059482  +
or eax 24h +
push eax  +
lea eax [esi+14h] +
push eax  +
push dword ptr [esi+10h]  +
call sub_107AB79  +
jmp loc_10594CA  +
test eax 200h +
jz loc_1010D0B  +
lea eax [esi+14h] +
push eax  +
push eax  +
push 2  +
push 1  +
push dword ptr [esi+10h]  +
push [ebp+nIndex]  +
call edi  +
mov [ebp+var_4] 4 +
jmp loc_1010D0B  +
lea eax [esi+14h] +
push eax  +
push eax  +
push 3  +
push 1  +
push dword ptr [esi+10h]  +
push [ebp+nIndex]  +
call edi  +
mov [ebp+var_4] 4 +
jmp loc_1010D18  +
***
push 32h  +
call edi  +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_4] +
jmp loc_101F807  +
***
lea eax [esi+338h] +
cmp [eax] edi +
jz loc_10480B9  +
mov esi [eax] +
push 404h  +
push edi  +
push edi  +
push dword ptr [esi+14h]  +
mov ecx [ebp+var_4] +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
jmp loc_10480B9  +
***
mov edi ds:GetSystemMetrics +
push 31h  +
call edi  +
push 32h  +
mov [esi+368h] eax +
call edi  +
mov [esi+36Ch] eax +
jmp loc_101E123  +
***
mov eax 80040110h +
jmp loc_104A109  +
***
mov ecx esi +
pop esi  +
jmp sub_1073234  +
***
mov edi [ebp+arg_0] +
push 4  +
pop ecx  +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1047839  +
jmp loc_1047849  +
***
lea ecx [ebp+arg_0] +
push ecx  +
push dword ptr [eax+14h]  +
add eax 18h +
push dword ptr [eax-0Ch]  +
mov ecx edi +
push eax  +
call sub_1021C47  +
test eax eax +
jl loc_1049FF3  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1049FF3  +
push 1  +
push eax  +
call sub_1010F3D  +
test eax eax +
jz loc_1049FF3  +
push 0  +
push 0  +
push 0  +
push 200h  +
push eax  +
mov ecx edi +
call sub_104785B  +
jmp loc_1049FF3  +
***
mov eax [ebx] +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_104A077  +
***
cmp dword ptr [esi+320h] 0 +
jnz loc_10478FC  +
mov eax [esi+14h] +
test eax eax +
jz loc_104791E  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
call ds:GetWindowRect  +
jmp loc_104791E  +
***
xor eax eax +
retn   +
***
add ecx 3 +
jmp loc_1047EE0  +
add eax 0FFFFE890h +
jmp loc_1047FD9  +
***
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_105963C  +
mov ecx eax +
call sub_102427A  +
mov ebx eax +
jmp loc_105963E  +
xor ebx ebx +
cmp ebx edi +
jz loc_1059668  +
cmp dword ptr [ebp+10h] 0FFFFFFFFh +
mov [ebp-4] edi +
jz loc_105966E  +
mov ecx [ebp+8] +
lea eax [ebp-4] +
push eax  +
push ebx  +
push dword ptr [ebp+10h]  +
call sub_1049E9B  +
test eax eax +
jnz loc_105968C  +
push 1  +
mov ecx ebx +
call sub_1074704  +
pop ebx  +
jmp loc_10220DF  +
cmp dword ptr [ebp+14h] 0FFFFFFFFh +
jz loc_105965F  +
lea eax [ebp-4] +
push eax  +
push ebx  +
push edi  +
push edi  +
push dword ptr [ebp+14h]  +
lea ecx [esi+2E0h] +
mov [ebp-4] edi +
call sub_1024417  +
cmp [ebp-4] edi +
jz loc_105965F  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push 409h  +
push dword ptr [esi+10h]  +
call ds:PostMessageW  +
jmp loc_1059668  +
***
push esi  +
push edi  +
push [ebp+var_4]  +
push dword ptr [ebx+33Ch]  +
call ds:off_1002B68  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_1059717  +
mov edi [ebp+arg_0] +
push 4  +
pop ecx  +
mov esi offset dword_100D864 +
xor edx edx +
cmps   +
jz loc_10596DC  +
mov edi [ebp+arg_0] +
push 4  +
pop ecx  +
mov esi eax +
xor edx edx +
cmps   +
jz loc_10596EC  +
mov ecx [eax+10h] +
cmp ecx [ebp+arg_4] +
jnz loc_1059717  +
mov eax [eax+14h] +
cmp eax [ebp+arg_8] +
jnz loc_1059717  +
push [ebp+var_4]  +
push dword ptr [ebx+33Ch]  +
call ds:off_10065B4  +
push [ebp+lpMem]  +
call sub_1002BCA  +
cmp [ebp+arg_C] 0 +
pop ecx  +
jnz loc_1059722  +
dec [ebp+var_4]  +
mov ecx ebx +
call sub_1046A3D  +
mov [ebp+var_8] eax +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jl loc_10596A7  +
pop edi  +
pop esi  +
jmp loc_10470D0  +
***
lea ebx [eax+438h] +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
mov esi ebx +
xor edx edx +
cmps   +
mov ecx [ebp+arg_0] +
jnz loc_105974E  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_1021ED7  +
jmp loc_105975E  +
sub esp 10h +
mov edi esp +
mov esi ebx +
movs   +
movs   +
movs   +
movs   +
call sub_1022531  +
mov ecx [ebp+var_8] +
push 1  +
push 1  +
push 0  +
push eax  +
push ebx  +
push [ebp+arg_0]  +
call sub_1047269  +
jmp loc_1047258  +
***
push 0Bh  +
push dword ptr [esi+10h]  +
call ds:KillTimer  +
jmp loc_104716D  +
***
push 1  +
push dword ptr [edi+eax*4]  +
mov ecx esi +
call sub_10470DA  +
jmp loc_10240CA  +
***
mov ecx [ebp+var_14] +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
push edi  +
add esi 438h +
push esi  +
call sub_1021C47  +
cmp eax edi +
jl loc_1046EAF  +
mov ecx [ebp+arg_0] +
push 1  +
push eax  +
call sub_1010F3D  +
mov [ebp+var_4] eax +
jmp loc_1046EAF  +
mov [ebp+var_4] edi +
jmp loc_1046E06  +
mov [ebp+var_4] edi +
jmp loc_1046E58  +
mov [ebp+var_4] edi +
jmp loc_1046E88  +
mov [ebp+var_4] edi +
jmp loc_1046E9A  +
***
push 4  +
pop ecx  +
lea edi [ebx+3A8h] +
mov esi offset dword_1024000 +
xor eax eax +
cmps   +
jnz loc_10247F8  +
jmp loc_105984D  +
push 4  +
pop ecx  +
lea edi [ebx+3A8h] +
mov esi offset dword_1029D90 +
xor eax eax +
cmps   +
jnz loc_1024814  +
jmp loc_105984D  +
push 4  +
pop ecx  +
lea edi [ebx+3A8h] +
mov esi offset dword_102DD68 +
xor eax eax +
cmps   +
jnz loc_1024830  +
jmp loc_105984D  +
push 4  +
pop ecx  +
lea edi [ebx+3A8h] +
mov esi offset dword_1024010 +
xor eax eax +
cmps   +
jnz loc_102484C  +
or dword ptr [ebx+0Ch] 8 +
or dword ptr [ebx+11Ch] 1 +
or dword ptr [ebx+118h] 1 +
jmp loc_102484C  +
***
mov eax [ebp+arg_8] +
cdq   +
idiv  [ebp+arg_10] +
cmp eax ecx +
mov edx eax +
jl loc_1059873  +
mov edx ecx +
cmp edx ebx +
jle loc_1059883  +
cmp eax ecx +
jge loc_105987F  +
mov esi eax +
jmp loc_1059885  +
mov esi ecx +
jmp loc_1059885  +
mov esi ebx +
push esi  +
push ecx  +
call sub_10201CD  +
mov edi eax +
jmp loc_10201B1  +
cmp eax ecx +
jge loc_105989E  +
mov edi eax +
jmp loc_10201A8  +
mov edi ecx +
jmp loc_10201A8  +
***
mov eax [ebp+var_10] +
mov ecx [ebp+var_78] +
add eax ecx +
mov [ebp+var_98] eax +
jmp loc_101FDAA  +
sub ecx [ebp+var_C] +
mov [ebp+var_8C] ecx +
jmp loc_101FDAA  +
push 0FFFFFFECh  +
push hWnd  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_102A395  +
mov eax [ebp+var_50] +
add eax edi +
lea ecx [eax+esi] +
mov [ebp+var_24] 1 +
mov [ebp+var_38] edi +
mov [ebp+var_30] eax +
mov [ebp+rc.right] ecx +
jmp loc_102A3CF  +
cmp [ebp+var_24] 0 +
jz loc_1059912  +
mov eax [ebp+rc.right] +
mov edx [ebp+var_8] +
mov [ebp+var_20] eax +
add eax edx +
mov [ebp+var_18] eax +
jmp loc_105991B  +
mov [ebp+var_18] eax +
sub eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov edi [ebp+var_4C] +
mov esi [ebp+var_54] +
cmp edi esi +
mov edx edi +
jg loc_1059929  +
mov edx esi +
mov eax [ebp+cy] +
cmp eax edx +
jg loc_1059938  +
cmp edi esi +
mov eax edi +
jg loc_1059938  +
mov eax esi +
cdq   +
sub eax edx +
mov esi eax +
mov eax edi +
cdq   +
sub eax edx +
sar esi 1 +
sar eax 1 +
sub esi eax +
mov eax [ebp+lParam] +
add esi ecx +
mov [ebp+var_34] esi +
add esi edi +
sub eax ecx +
cmp [ebp+cy] eax +
mov [ebp+var_2C] esi +
jge loc_102A463  +
mov eax [ebp+cy] +
jmp loc_102A463  +
mov eax [ebp+var_C] +
mov [ebp+var_20] edi +
mov [ebp+var_18] eax +
jmp loc_102A414  +
mov eax edi +
jmp loc_102A422  +
mov eax [ebp+cy] +
jmp loc_102A460  +
mov esi [ebp+rc.bottom] +
jmp loc_102A4AA  +
mov esi eax +
jmp loc_102A4AA  +
mov [ebp+var_18] eax +
jmp loc_101FF16  +
lea ecx [ebx+2Ch] +
call sub_1079A2E  +
jmp loc_101FF8E  +
***
push 0FFFFFFFFh  +
push 3  +
lea ecx [esi+29Ch] +
call sub_1010EB3  +
test eax eax +
jnz loc_101FB7E  +
push 0FFFFFFFFh  +
push 3  +
lea ecx [esi+2ACh] +
call sub_1010EB3  +
test eax eax +
jnz loc_101FB7E  +
push 0FFFFFFFFh  +
push 3  +
lea ecx [esi+2BCh] +
call sub_1010EB3  +
test eax eax +
jnz loc_101FB7E  +
push 0FFFFFFF0h  +
push dword ptr [esi+28h]  +
call edi  +
test eax ebx +
jnz loc_101FB7E  +
push 0  +
push dword ptr [esi+10h]  +
call ds:ShowWindow  +
xor eax eax +
jmp loc_101FBB3  +
push 5  +
push dword ptr [esi+10h]  +
call ds:ShowWindow  +
jmp loc_101FB91  +
***
mov ecx offset unk_10B14F8 +
call sub_10748C0  +
jmp loc_103627D  +
***
dec eax  +
jnz loc_1011064  +
cmp [esi+34Ch] edi +
jnz loc_1011064  +
push ebx  +
call ds:GetFocus  +
mov edx eax +
xor ebx ebx +
push edi  +
mov ecx esi +
call sub_1010881  +
cmp [eax] edx +
jnz loc_1059A5B  +
xor ebx ebx +
inc ebx  +
inc edi  +
cmp edi 3 +
jb loc_1059A4C  +
test ebx ebx +
pop ebx  +
jz loc_1011064  +
push 0  +
push 0  +
push 129h  +
push edx  +
call ds:SendMessageW  +
test al 1 +
jnz loc_1011064  +
mov eax [ebp+arg_0] +
lea ecx [eax+14h] +
push ecx  +
push dword ptr [eax+10h]  +
call ds:DrawFocusRect  +
jmp loc_1011064  +
mov [ebp+var_4] 40010h +
mov [ecx+28h] edi +
jmp loc_1011064  +
***
test dx dx +
jz loc_1059AC8  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1021226  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_102121A  +
xor eax eax +
jmp loc_102122B  +
mov ecx offset unk_10B1460 +
call sub_1023588  +
test eax eax +
jnz loc_1011C2F  +
mov ecx edi +
call sub_10749CF  +
jmp loc_1011C2F  +
***
cmp eax 7 +
jnz loc_1022523  +
push 0  +
call sub_1010EFE  +
test eax eax +
jnz loc_1022523  +
mov ecx [ebp+arg_0] +
push 3  +
pop esi  +
push edi  +
push 6  +
call sub_1022344  +
mov [ebx] edi +
jmp loc_1022518  +
push edi  +
push esi  +
call sub_1022344  +
mov eax [ebp+var_4] +
mov [ebx] edi +
cmp dword ptr [eax+2E8h] 0 +
jnz loc_1059B59  +
cmp dword ptr [eax+2ECh] 0 +
jz loc_1059B59  +
mov ecx [ebp+arg_0] +
call sub_1022C76  +
mov ecx [ebp+arg_0] +
push 6  +
call sub_1010EFE  +
mov esi eax +
neg esi  +
sbb esi esi +
neg esi  +
inc esi  +
inc esi  +
jmp loc_1022523  +
push 3  +
jmp loc_1059B5F  +
push 4  +
pop esi  +
jmp loc_1022523  +
***
mov ecx esi +
call sub_10749CF  +
jmp loc_1051C5F  +
***
mov eax offset aTraynotifyve_2 +
jmp loc_101ECC2  +
***
mov esi [esi] +
sub esi 0 +
jz loc_1059B91  +
dec esi  +
dec esi  +
jnz loc_101E17C  +
xor edi edi +
jmp loc_101E17C  +
push 2  +
pop edi  +
jmp loc_101E17C  +
test ebx ebx +
jz loc_1059BA9  +
mov [ebp+var_4] offset aTraynotifyve_2 +
jmp loc_101E1A8  +
mov [ebp+var_4] offset aTraynotifyve_1 +
jmp loc_101E1A8  +
test ebx ebx +
jz loc_1059BC5  +
mov [ebp+var_4] offset aTraynotifyho_1 +
jmp loc_101E1A8  +
mov [ebp+var_4] offset aTraynotifyho_2 +
jmp loc_101E1A8  +
***
mov eax [ebp+arg_10] +
cmp eax [ebp+wParam] +
jle loc_1046B35  +
dec [ebp+arg_10]  +
jmp loc_1046B35  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_1059C60  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_A4] eax +
test eax eax +
jl loc_1059C74  +
mov [ebp+var_A4] 80004005h +
mov esi [ebp+var_A8] +
push dword ptr [esi]  +
call sub_1022837  +
mov [ebp+var_94] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push edi  +
push dword ptr [esi]  +
call ds:SendMessageW  +
jmp loc_1046C38  +
call sub_102DB2F  +
test eax eax +
jz loc_1046C2E  +
push 40h  +
lea eax [ebp+sz] +
push eax  +
mov ecx esi +
call sub_1033265  +
push 0A0h  +
lea eax [ebp+var_150] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [esi+24h] +
push eax  +
call ds:__imp_PathFindFileNameW  +
push eax  +
lea eax [ebp+var_150] +
push eax  +
call sub_106DE20  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+var_140] +
push eax  +
call sub_106DE20  +
push dword ptr [esi+4]  +
lea eax [ebp+var_130] +
push eax  +
call sub_106DDFC  +
xor eax eax +
lea edi [ebx+29Ch] +
cmp [ebp+var_A8] edi +
setnz al  +
push eax  +
lea eax [ebp+var_120] +
push eax  +
call sub_106DDFC  +
push [ebp+wParam]  +
lea eax [ebp+var_110] +
push eax  +
call sub_106DDFC  +
xor eax eax +
cmp [ebp+var_AC] edi +
setnz al  +
push eax  +
lea eax [ebp+var_100] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_10]  +
lea eax [ebp+var_F0] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_1C]  +
lea eax [ebp+var_E0] +
push eax  +
call sub_106DDFC  +
push dword ptr [esi+0B1Ch]  +
lea eax [ebp+var_D0] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_18]  +
lea eax [ebp+var_C0] +
push eax  +
call sub_106DDFC  +
push 0  +
lea eax [ebp+var_150] +
push eax  +
push 0Ah  +
push 111Eh  +
push 0  +
call WinSqmAddToStreamEx  +
jmp loc_1046C2E  +
push 0FFFFFFFFh  +
push [ebp+var_B0]  +
mov ecx ebx +
push 80000000h  +
push [ebp+var_A0]  +
call sub_10220C7  +
jmp loc_1046C38  +
***
mov ecx esi +
call sub_1047C81  +
jmp loc_1022B69  +
***
call ds:GetFocus  +
cmp eax [esi+14h] +
jnz loc_10267B8  +
xor eax eax +
inc eax  +
jmp loc_10267BA  +
cmp [esi+320h] edi +
jz loc_10267E3  +
push edi  +
push edi  +
lea ecx [esi+2Ch] +
call sub_1079C31  +
xor ebx ebx +
jmp loc_10267E3  +
push edi  +
push edi  +
push dword ptr [esi+14h]  +
call ds:InvalidateRect  +
jmp loc_102181B  +
***
push 1  +
push 0  +
mov ecx edi +
call sub_1010F3D  +
cmp eax ebx +
jz loc_1047032  +
push 0  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov ecx esi +
call sub_1022955  +
jmp loc_1046F39  +
mov [ebp+var_4] eax +
jmp loc_1046FFF  +
ja loc_1059E54  +
mov edi [esi+3A0h] +
cmp edi [ebp+var_C] +
jbe loc_1059E61  +
mov edi [esi+3A0h] +
mov ecx ebx +
jmp loc_1046FC4  +
mov edi [ebp+var_C] +
jmp loc_1046FC4  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1047032  +
cmp edx edi +
jnz loc_1047032  +
push [ebp+var_4]  +
push dword ptr [ebx]  +
add ebx 438h +
push dword ptr [ebx-434h]  +
push ebx  +
push offset dword_10688F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A0A  +
jmp loc_1047032  +
***
push 0FFFFh  +
push 5  +
push eax  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
jmp loc_10479B0  +
***
mov [ebp+var_18] 4 +
jmp loc_105A0F6  +
push esi  +
mov ecx ebx +
call sub_1074BE5  +
mov [ebp+var_18] 2 +
xor edi edi +
mov [ebp+pvParam] 1 +
jmp loc_104814C  +
push esi  +
mov ecx ebx +
call sub_1074C61  +
or [ebp+var_18] eax +
jz loc_104815E  +
push esi  +
mov ecx ebx +
call sub_1074BE5  +
xor edi edi +
test [ebp+var_18] 1000h +
mov [ebp+pvParam] 1 +
jz loc_1047795  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push 408h  +
push esi  +
mov ecx ebx +
call sub_104785B  +
jmp loc_104815E  +
lea ecx [ebx+2E0h] +
call sub_10236DB  +
test eax eax +
jz loc_1047795  +
or [ebp+var_18] 4000h +
push esi  +
mov ecx ebx +
call sub_1074BE5  +
xor edi edi +
mov [ebp+pvParam] 1 +
jmp loc_1047795  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 405h  +
push dword ptr [ebx+10h]  +
call ds:PostMessageW  +
jmp loc_10477FC  +
mov eax [esi+18h] +
test eax eax +
jnz loc_1059F9C  +
mov eax [esi+14h] +
test eax eax +
jz loc_1047DFC  +
mov [ebp+pvParam] eax +
jmp loc_1047DFC  +
cmp dword ptr [ebx+320h] 0 +
jnz loc_1047E18  +
push offset dword_10234B0  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_1047E18  +
push 8  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
push 1  +
push esi  +
mov ecx ebx +
call sub_1046F0C  +
jmp loc_1047E2E  +
mov edx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax edx +
and eax 10000h +
and ecx 80000000h +
cmp eax edx +
jnz loc_1047E6F  +
cmp ecx dword_10B24C4 +
jnz loc_1047E6F  +
push [ebp+var_18]  +
lea eax [ebp+var_14] +
push [ebp+wParam]  +
push [ebp+lParam]  +
push eax  +
push offset dword_1068900  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A0A  +
jmp loc_1047E6F  +
push esi  +
mov ecx ebx +
call sub_107467E  +
jmp loc_10477FC  +
mov dword ptr [ebx+388h] 7 +
jmp loc_10477FC  +
push dword ptr [ebx+338h]  +
call sub_1002BCA  +
pop ecx  +
push edi  +
mov [ebx+338h] edi +
push dword ptr [esi+4]  +
mov ecx ebx +
push dword ptr [esi]  +
add esi 438h +
push esi  +
call sub_10470A8  +
cmp dword ptr [ebx+388h] 6 +
jz loc_105A088  +
mov dword ptr [ebx+388h] 5 +
mov ecx ebx +
call sub_1046A3D  +
test eax eax +
jbe loc_10477E6  +
push edi  +
push dword ptr [ebx+33Ch]  +
call ds:off_10065B4  +
push edi  +
push dword ptr [ebx+388h]  +
mov ecx ebx +
mov [ebx+338h] eax +
call sub_10746C8  +
push eax  +
push 4  +
push dword ptr [ebx+10h]  +
call ds:SetTimer  +
mov dword ptr [ebx+380h] 1 +
jmp loc_10477E6  +
cmp [ebp+arg_18] 0 +
jnz loc_1047806  +
push 1  +
push [ebp+lParam]  +
lea eax [ebp+var_14] +
push edi  +
push eax  +
mov ecx ebx +
call sub_10470A8  +
jmp loc_10477FC  +
mov edi [ebp+wParam] +
cmp dword_10B24CC 0 +
jz loc_1047806  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105A114  +
test al al +
jnz loc_1047806  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax 10000h +
and ecx 80000000h +
or eax ecx +
jz loc_1047806  +
mov edx dword_10B24C0 +
mov esi dword_10B24C4 +
mov eax edx +
mov ecx esi +
and eax 10000h +
and ecx 80000000h +
cmp eax edx +
jnz loc_1047806  +
cmp ecx esi +
jnz loc_1047806  +
push [ebp+var_18]  +
lea eax [ebp+var_14] +
push edi  +
push [ebp+lParam]  +
push eax  +
push offset dword_1068900  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A0A  +
jmp loc_1047806  +
***
or [ebp+var_4] 10h +
push ebx  +
mov ecx esi +
call sub_1074C1D  +
cmp dword_10B24CC edi +
jz loc_105A2C7  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105A1AC  +
test al al +
jnz loc_105A2C7  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_105A2C7  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_105A2C7  +
cmp edx esi +
jnz loc_105A2C7  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push offset dword_1068900  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A0A  +
jmp loc_105A2C7  +
push ebx  +
mov ecx esi +
mov [ebp+var_4] 10h +
call sub_1074C1D  +
jmp loc_105A2C7  +
test edi edi +
jz loc_105A2AE  +
push [ebp+arg_8]  +
mov ecx edi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_104781C  +
test al al +
jz loc_105A2AE  +
lea eax [ebp+arg_0] +
push eax  +
mov dword ptr [esi+37Ch] 3 +
push dword ptr [edi+14h]  +
mov ecx esi +
push dword ptr [edi+10h]  +
push [ebp+arg_0]  +
call sub_1021C47  +
xor edi edi +
cmp eax 0FFFFFFFFh +
jz loc_105A279  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_105A279  +
push 1  +
push eax  +
call sub_1010F3D  +
mov edi eax +
push 0FFFFh  +
push 5  +
push 403h  +
push dword ptr [esi+20h]  +
mov dword ptr [esi+90h] 1 +
call ds:SendMessageW  +
push 0  +
push 1  +
push 404h  +
push edi  +
mov ecx esi +
call sub_1047969  +
jmp loc_1047D62  +
push 0  +
push ebx  +
lea ecx [esi+33Ch] +
call sub_1006610  +
test eax eax +
jge loc_105A2CE  +
mov [ebp+var_4] 80000000h +
push ebx  +
call sub_1002BCA  +
pop ecx  +
cmp dword_10B24CC 0 +
jz loc_1047D94  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105A2EC  +
test al al +
jnz loc_1047D94  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1047D94  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_1047D94  +
cmp edx esi +
jnz loc_1047D94  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push offset dword_1068900  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A0A  +
jmp loc_1047D94  +
push 403h  +
push esi  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
mov dword ptr [ecx+388h] 6 +
jmp loc_1047D86  +
***
xor eax eax +
jmp loc_1047401  +
push 8  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
push 1  +
push [ebp+wParam]  +
mov ecx edi +
call sub_1010F3D  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+wParam]  +
mov ecx ebx +
push edi  +
mov [ebp+arg_0] eax +
call sub_1022955  +
mov [ebp+var_4] eax +
lea eax [ebp+wParam] +
push eax  +
push [ebp+arg_0]  +
mov ecx ebx +
mov [ebp+wParam] esi +
call sub_1022005  +
mov ecx [ebp+wParam] +
mov [ebp+arg_0] ecx +
mov [ebp+wParam] eax +
mov edi ecx +
jmp loc_104729B  +
push esi  +
call sub_1075807  +
test al al +
jz loc_10472EB  +
push 0FFFFh  +
push 5  +
mov edi 403h +
push edi  +
push dword ptr [ebx+20h]  +
mov dword ptr [ebx+388h] 6 +
call ds:SendMessageW  +
mov esi [ebx+338h] +
push edi  +
push 1  +
push 0  +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
mov edi [ebp+arg_0] +
mov esi [ebp+var_C] +
jmp loc_10472EB  +
push eax  +
push 0FFFFFFFFh  +
push 2  +
push edi  +
mov ecx ebx +
call sub_10220C7  +
push [ebp+arg_0]  +
lea ecx [ebx+2E0h] +
push [ebp+var_C]  +
call sub_1024671  +
jmp loc_1047346  +
push 1  +
push [ebp+wParam]  +
mov ecx edi +
call sub_1010F3D  +
test eax eax +
jz loc_1047379  +
mov ecx [ebp+arg_0] +
push 0  +
push eax  +
call sub_10469C8  +
cmp eax 0FFFFFFFFh +
jz loc_1047379  +
mov ecx [ebp+arg_0] +
push eax  +
call sub_102266B  +
jmp loc_1047379  +
mov ecx esi +
call sub_1073234  +
jmp loc_1047388  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx 80000000h +
cmp ecx eax +
jnz loc_10473BA  +
cmp edx dword_10B24C4 +
jnz loc_10473BA  +
push [ebp+arg_14]  +
xor ecx ecx +
push dword ptr [esi]  +
lea eax [ebx+29Ch] +
push dword ptr [esi+4]  +
cmp edi eax +
setnz cl  +
lea eax [esi+438h] +
push eax  +
push ecx  +
push offset dword_105A4F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074ADE  +
jmp loc_10473BA  +
call sub_1046C5D  +
jmp loc_10473FE  +
***
push edi  +
push dword ptr [ebx+33Ch]  +
call ds:off_10065B4  +
push edi  +
push dword ptr [ebx+388h]  +
mov ecx ebx +
mov [ebx+338h] eax +
call sub_10746C8  +
push eax  +
push 4  +
push dword ptr [ebx+10h]  +
call ds:SetTimer  +
mov dword ptr [ebx+380h] 1 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push eax  +
call ds:DestroyIcon  +
jmp loc_104768C  +
and dword ptr [eax] 0 +
jmp loc_104769A  +
mov eax [esi+10h] +
xor edi edi +
inc edi  +
mov [ebp+var_4] edi +
cmp eax 0FFFFFFFFh +
jz loc_105A56D  +
cmp eax edi +
jnz loc_101100A  +
mov esi [esi] +
xor ecx ecx +
cmp eax edi +
setz cl  +
mov eax ecx +
cmp [ebx+29Ch] esi +
jnz loc_105A585  +
push eax  +
push 4  +
jmp loc_105A5A1  +
cmp [ebx+2ACh] esi +
jnz loc_105A592  +
push eax  +
push 0  +
jmp loc_105A5A1  +
cmp [ebx+2BCh] esi +
jnz loc_101100A  +
push eax  +
push 3  +
mov ecx ebx +
call sub_107586E  +
test eax eax +
jnz loc_101100A  +
and [ebp+var_4] eax +
jmp loc_101100A  +
dec eax  +
jnz loc_101100A  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov [esi+14h] eax +
jmp loc_101100A  +
cmp [ebx+34Ch] edx +
jnz loc_105A5E5  +
mov eax [ebx+14h] +
cmp [esi] eax +
jnz loc_105A5E5  +
push edx  +
push edx  +
push eax  +
call ds:InvalidateRect  +
xor edx edx +
cmp [esi+8] edi +
jnz loc_105A5F1  +
mov eax [esi+0Ch] +
jmp loc_105A5F4  +
mov eax [esi+14h] +
test al 20h +
jz loc_101100A  +
mov [ebx+344h] edx +
jmp loc_10469A6  +
mov dword ptr [ebx+318h] 1 +
jmp loc_101100A  +
push 6Ah  +
push offset dword_105A6E0  +
call sub_1034B2D  +
jmp loc_1047B30  +
mov ecx ebx +
call sub_1075AD3  +
jmp loc_1047B30  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1047B70  +
cmp edx edi +
jnz loc_1047B70  +
push offset dword_105A6D0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1047B70  +
mov eax [ebx+338h] +
test eax eax +
jz loc_105A6C3  +
cmp dword ptr [ebx+388h] 3 +
jnz loc_105A6C3  +
cmp dword ptr [ebx+340h] 2 +
jnz loc_105A6C3  +
lea ecx [ebp+arg_0] +
push ecx  +
push dword ptr [eax+14h]  +
mov ecx ebx +
push dword ptr [eax+10h]  +
push eax  +
call sub_1021C47  +
test eax eax +
jl loc_105A6C3  +
mov ecx [ebp+arg_0] +
push 1  +
push eax  +
call sub_1010F3D  +
test eax eax +
jz loc_105A6C3  +
push 0  +
push 0  +
push 404h  +
push eax  +
mov ecx ebx +
call sub_1047969  +
mov ecx ebx +
call sub_1047C05  +
jmp loc_101100A  +
***
xor eax eax +
jmp loc_10224C4  +
push 6  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jz loc_105A70E  +
cmp [ebp+var_10] 4 +
jnz loc_10232F6  +
mov [esi+434h] edi +
jmp loc_10232F6  +
push edi  +
mov ecx esi +
call sub_1010EFE  +
jmp loc_1023378  +
mov esi [ebx+338h] +
cmp esi edi +
jz loc_105A767  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1075807  +
test al al +
jz loc_105A767  +
push 403h  +
push edi  +
push edi  +
mov dword ptr [ebx+388h] 5 +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
xor edi edi +
mov esi [ebp+arg_0] +
jmp loc_102330C  +
mov [ebp+var_4] eax +
jmp loc_10224C1  +
***
push edi  +
push 2710h  +
push 6  +
push dword ptr [ebx+10h]  +
call ds:SetTimer  +
mov dword ptr [ebx+378h] 1 +
jmp loc_1052D93  +
cmp [esi+2A0h] edi +
jz loc_105A7C1  +
push 404h  +
push edi  +
push edi  +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
jmp loc_1052D93  +
push edi  +
push edi  +
push 411h  +
push dword ptr [ebx+20h]  +
call ds:SendMessageW  +
jmp loc_1052D93  +
***
jb loc_105A7E7  +
mov eax [ebp+var_10] +
cmp eax [edi+6F8h] +
jnb loc_1023479  +
push 20h  +
pop eax  +
jmp loc_102347B  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10234A6  +
cmp edx edi +
jnz loc_10234A6  +
mov eax [ebp+arg_0] +
push ebx  +
push dword ptr [eax]  +
add eax 438h +
push dword ptr [eax-434h]  +
push eax  +
push offset dword_10688F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A0A  +
jmp loc_10234A6  +
***
lea eax [esi+3A8h] +
push eax  +
call sub_1024025  +
test eax eax +
jz loc_10221C1  +
push offset sub_1022454  +
call ebx  +
test eax eax +
jnz loc_105A88C  +
push eax  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jz loc_10221C1  +
jmp loc_105A88C  +
test byte ptr [esi+0Ch] 10h +
jz loc_10221F6  +
mov ecx [ebp+var_4] +
push edi  +
call sub_1074BE5  +
and dword ptr [esi+0Ch] 0FFFFFFEFh +
jmp loc_10221F6  +
xor eax eax +
jmp loc_1022338  +
push 0  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jz loc_105A8B5  +
mov ecx [ebp+arg_0] +
push 0  +
push 4  +
push [ebp+wParam]  +
call sub_1023383  +
push 0  +
push 0  +
jmp loc_105A8CE  +
cmp [ebp+arg_C] 0 +
jnz loc_105A8D7  +
mov ecx [ebp+arg_0] +
push 1  +
push 4  +
push [ebp+wParam]  +
call sub_1023383  +
push 0  +
push 1  +
mov ecx [ebp+var_4] +
push edi  +
call sub_1022473  +
mov ecx [ebp+var_4] +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_1022005  +
mov [ebp+wParam] eax +
jmp loc_1022230  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1022245  +
push 0FFFFFFFFh  +
push [ebp+wParam]  +
call sub_102210B  +
and dword ptr [edi+14h] 0 +
jmp loc_1022245  +
push [ebp+arg_0]  +
mov ecx [ebp+var_4] +
call sub_1022787  +
jmp loc_10222DC  +
mov eax [edi+18h] +
test eax eax +
jz loc_105A928  +
push eax  +
call ds:DestroyIcon  +
mov eax [esi+3B8h] +
test eax eax +
jz loc_10481B5  +
push eax  +
call ds:CopyIcon  +
mov [edi+18h] eax +
jmp loc_10481B5  +
and eax 0FFFFFFDFh +
mov [esi+3A4h] eax +
jmp loc_10481B5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105A964  +
test al al +
jnz loc_10222EB  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx ebx +
or eax ecx +
jz loc_10222EB  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx ebx +
cmp ecx eax +
jnz loc_10222EB  +
cmp edx esi +
jnz loc_10222EB  +
push 8  +
push dword ptr [edi]  +
lea eax [edi+438h] +
push dword ptr [edi+4]  +
push eax  +
push offset dword_1068900  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A0A  +
jmp loc_10222EB  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx ebx +
cmp ecx eax +
jnz loc_1022335  +
cmp edx esi +
jnz loc_1022335  +
mov eax [ebp+var_4] +
push dword ptr [edi]  +
add eax 29Ch +
push dword ptr [edi+4]  +
xor ecx ecx +
cmp [ebp+arg_0] eax +
setnz cl  +
add edi 438h +
push edi  +
mov eax ecx +
push eax  +
push offset dword_105AA30  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A74  +
jmp loc_1022335  +
***
xor eax eax +
jmp loc_10230B9  +
push 1  +
push 2  +
mov ecx ebx +
call sub_1022344  +
jmp loc_1022D7F  +
push 1  +
mov ecx ebx +
call sub_10476AD  +
xor eax eax +
jmp loc_10230B8  +
mov eax [edi+0B1Ch] +
push ebx  +
mov ecx edi +
mov [ebx+0B1Ch] eax +
call sub_10733A0  +
mov ecx edi +
call sub_104762E  +
test eax eax +
jz loc_1046D28  +
lea esi [edi+910h] +
lea edi [ebx+910h] +
mov ecx 82h +
movs   +
mov esi [ebp+var_30] +
jmp loc_1046D28  +
lea edi [ebx+910h] +
mov ecx edi +
call sub_102450A  +
test eax eax +
jnz loc_1022E36  +
lea eax [ebx+24h] +
push eax  +
mov ecx edi +
call sub_1073C26  +
jmp loc_1022E36  +
push 1  +
push [ebp+var_34]  +
call sub_10469C8  +
inc eax  +
jmp loc_1022ECC  +
and [ebp+wParam] 0 +
jmp loc_1022ED7  +
push edi  +
push [ebp+var_34]  +
call sub_10469C8  +
inc eax  +
jmp loc_1022FB1  +
xor eax eax +
jmp loc_1022FB1  +
mov eax [ebp+var_3C] +
push 2  +
push edi  +
push edi  +
push [ebp+wParam]  +
add eax 3A8h +
push eax  +
push [ebp+var_1C]  +
mov ecx esi +
call sub_1047269  +
mov [ebp+var_2C] edi +
jmp loc_102305B  +
cmp [esi+2E8h] edi +
jz loc_10248F1  +
jmp loc_1023019  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx edi +
cmp ecx eax +
jnz loc_1023059  +
cmp edx dword_10B24C4 +
jnz loc_1023059  +
push dword ptr [ebx]  +
xor ecx ecx +
push dword ptr [ebx+4]  +
lea eax [esi+29Ch] +
cmp [ebp+var_1C] eax +
lea eax [ebx+438h] +
setnz cl  +
push eax  +
push ecx  +
push offset dword_105AB88  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1074A74  +
jmp loc_1023059  +
***
cmp dword ptr [esi+328h] 0 +
jz loc_105ABAB  +
push 0  +
lea ecx [esi-0Ch] +
call sub_1074787  +
push edi  +
lea ecx [esi+20h] +
call sub_10795C8  +
lea edi [esi-0Ch] +
push 1  +
mov ecx edi +
call sub_10763CA  +
cmp dword ptr [esi+328h] 0 +
jz loc_105ABD2  +
push 1  +
mov ecx edi +
call sub_1074787  +
pop edi  +
jmp loc_105235C  +
***
push [ebp+arg_10]  +
push offset loc_1010A70  +
push [ebp+hWnd]  +
call sub_103519B  +
jmp loc_1010AB1  +
lea edi [esi+334h] +
cmp [edi] ebx +
jz loc_105AC01  +
push ebx  +
mov ecx esi +
call sub_1074787  +
mov [edi] ebx +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_28] +
stos   +
mov eax [ebp+arg_C] +
mov [ebp+Y] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_28] eax +
mov eax [ebp+hWnd] +
mov [ebp+lParam] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 407h  +
push dword ptr [esi+24h]  +
call ds:SendMessageW  +
mov edi [ebp+arg_4] +
jmp loc_1010B02  +
cmp [ebp+arg_8] 0Ah +
jnz loc_1010B02  +
push 0Ah  +
push [ebp+hWnd]  +
call ds:KillTimer  +
cmp [esi+334h] ebx +
jz loc_1010B02  +
push 1  +
mov ecx esi +
call sub_1074787  +
jmp loc_1010B02  +
mov eax [ebp+arg_8] +
cmp eax 0Dh +
jz loc_105ACC6  +
cmp eax 1Bh +
jz loc_105ACA2  +
cmp eax 20h +
jz loc_105ACC6  +
cmp eax 24h +
jbe loc_1010B02  +
cmp eax 28h +
ja loc_1010B02  +
push eax  +
push 2  +
mov ecx esi +
call sub_1075E23  +
xor eax eax +
jmp loc_1010B11  +
mov ecx esi +
call sub_1076E0D  +
test eax eax +
jnz loc_105AC9B  +
cmp [esi+320h] ebx +
jz loc_1010B02  +
push ebx  +
mov ecx esi +
call sub_10763CA  +
xor eax eax +
inc eax  +
jmp loc_105ACD9  +
push ebx  +
mov ecx esi +
call sub_10763CA  +
xor eax eax +
cmp [esi+320h] ebx +
setz al  +
push eax  +
mov ecx esi +
mov [esi+334h] eax +
call sub_1074787  +
jmp loc_105AC9B  +
mov eax [ebp+arg_C] +
mov ecx [eax+8] +
cmp ecx 0FFFFFDEEh +
jz loc_105AD76  +
cmp ecx 0FFFFFDF7h +
jnz loc_1010B02  +
push ebx  +
push ebx  +
push 0Ah  +
mov [ebp+arg_8] ebx +
call sub_1075711  +
cmp [esi+334h] ebx +
jz loc_105AD6E  +
cmp [esi+320h] ebx +
jnz loc_105AD6E  +
mov edi ds:GetWindowRect +
lea eax [ebp+Y] +
push eax  +
push dword ptr [esi+10h]  +
call edi  +
lea eax [ebp+X] +
push eax  +
push dword ptr [esi+24h]  +
call edi  +
mov eax dword_10B2138 +
dec eax  +
jz loc_105AD53  +
dec eax  +
dec eax  +
jnz loc_105AD6E  +
mov eax [ebp+var_C] +
sub eax [ebp+var_4] +
push 15h  +
add eax [ebp-1Ch] +
push ebx  +
push ebx  +
push eax  +
jmp loc_105AD5A  +
push 15h  +
push ebx  +
push ebx  +
push dword ptr [ebp-14h]  +
push [ebp+X]  +
push ebx  +
push dword ptr [esi+24h]  +
call ds:SetWindowPos  +
mov [ebp+arg_8] 1 +
mov eax [ebp+arg_8] +
jmp loc_1010B11  +
mov ecx [esi+320h] +
neg ecx  +
sbb ecx ecx +
add ecx 21Fh +
mov [eax+0Ch] ecx +
jmp loc_105AC9B  +
mov ecx esi +
call sub_1075671  +
jmp loc_1010B02  +
xor eax eax +
cmp edi 7 +
setz al  +
mov ecx esi +
push eax  +
call sub_1074861  +
jmp loc_1010B02  +
***
mov ecx [esi+3B8h] +
cmp ecx edi +
jz loc_105AE08  +
push edi  +
call sub_1010EFE  +
test eax eax +
jnz loc_105AE02  +
mov eax [esi+3ACh] +
mov ecx [esi+3A8h] +
push 1  +
push eax  +
call sub_1010F3D  +
mov ecx [esi+3B8h] +
cmp ecx eax +
jz loc_105AE08  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
mov ecx esi +
call sub_1022005  +
mov ecx [esi+3A8h] +
mov [esi+3ACh] eax +
cmp ecx [ebp+var_4] +
jnz loc_105AE02  +
cmp eax edi +
jge loc_105AE08  +
mov [esi+3B8h] edi +
cmp [esi+3B8h] edi +
jnz loc_1022102  +
mov ecx esi +
call sub_1076E0D  +
jmp loc_1022102  +
***
mov eax 0A0h +
jmp loc_1021E75  +
cmp dword ptr [ecx+4] 3 +
jnz loc_105AE3E  +
mov edx [edx+18h] +
test edx edx +
jz loc_105AE3E  +
push edx  +
call ds:SetFocus  +
xor eax eax +
jmp loc_1021E75  +
cmp esi edi +
jl loc_105AEEE  +
mov edi [ebp+var_1C] +
test edi edi +
jz loc_105AEEE  +
push esi  +
mov ecx edi +
call sub_1022144  +
mov ecx [ebp+var_18] +
call sub_1074BA3  +
test eax eax +
jnz loc_105AED4  +
push 1  +
push esi  +
mov ecx edi +
call sub_1010F3D  +
mov ebx eax +
test ebx ebx +
jz loc_105AE8C  +
cmp dword ptr [ebx+10h] 4 +
jb loc_105AE8C  +
mov ecx [ebp+var_18] +
push 0  +
call sub_10468D3  +
push hWnd  +
call ds:SetForegroundWindow  +
mov ecx [ebp+var_18] +
push esi  +
push edi  +
call sub_1075354  +
test eax eax +
jz loc_105AEB2  +
push 0  +
push esi  +
mov ecx edi +
call sub_10732AC  +
jmp loc_105AEBE  +
mov ecx [ebp+var_18] +
push 1  +
push 5  +
call sub_107586E  +
test ebx ebx +
jz loc_105AEDF  +
cmp dword ptr [ebx+10h] 4 +
jb loc_105AEDF  +
mov ecx [ebp+var_18] +
push 1  +
call sub_10468D3  +
jmp loc_105AEDF  +
push hWnd  +
call sub_107A759  +
mov eax [ebp+var_24] +
test eax eax +
jz loc_105AEFF  +
mov dword ptr [eax] 1 +
jmp loc_105AEFF  +
mov eax [ebp+var_18] +
mov eax [eax+18h] +
test eax eax +
jz loc_105AEFF  +
push eax  +
call ds:SetFocus  +
mov [ebp+var_20] 1 +
jmp loc_1021E62  +
***
push [ebp+arg_10]  +
push offset loc_10108A1  +
push [ebp+hWndFrom]  +
call sub_103519B  +
jmp loc_10108DF  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+hWndFrom]  +
call sub_100D797  +
jmp loc_101094C  +
mov eax [ebp+arg_C] +
push ebx  +
push dword ptr [eax+4]  +
mov ecx esi +
call sub_1010F3D  +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_1010928  +
mov edx [eax+10h] +
cmp edx 4 +
sbb cl cl +
inc cl  +
mov [ebp+var_1] cl +
cmp edx 4 +
jb loc_105AF6C  +
mov byte ptr [ebp+arg_10+3] bl +
cmp [eax+6D4h] ebx +
jz loc_105AF70  +
mov byte ptr [ebp+arg_10+3] 1 +
mov edx [esi+4] +
mov [ebp+var_10] edx +
mov edx [ebp+arg_C] +
mov edx [edx+8] +
cmp edx 0FFFFFDF6h +
jz loc_105B057  +
cmp edx 0FFFFFDF7h +
jnz loc_1010928  +
xor edx edx +
lea ecx [edi+29Ch] +
cmp esi ecx +
setnz dl  +
push ebx  +
push eax  +
mov ecx edx +
push ecx  +
call sub_1075711  +
cmp [ebp+var_1] bl +
jz loc_105B036  +
mov eax [ebp+arg_C] +
mov esi ds:SendMessageW +
push ebx  +
push dword ptr [eax+4]  +
push 419h  +
push [ebp+hWndFrom]  +
call esi  +
mov [ebp+wParam] eax +
cmp eax 0FFFFFFFFh +
jz loc_105B036  +
lea eax [ebp+rc.right] +
push eax  +
call ds:GetCursorPos  +
mov eax [ebp+rc.right] +
mov [ebp+pt.x] eax +
mov eax [ebp+rc.bottom] +
push 1  +
mov [ebp+pt.y] eax +
lea eax [ebp+pt] +
push eax  +
push [ebp+hWndFrom]  +
push ebx  +
call ds:MapWindowPoints  +
lea eax [ebp+pt] +
push eax  +
push ebx  +
push 445h  +
push [ebp+hWndFrom]  +
call esi  +
cmp [ebp+wParam] eax +
jnz loc_105B01F  +
movzx eax word ptr [ebp+rc.bottom] +
movzx ecx word ptr [ebp+rc.right] +
push ebx  +
shl eax 10h +
push ebx  +
or eax ecx +
push eax  +
jmp loc_105B027  +
push [ebp+wParam]  +
push [ebp+hWndFrom]  +
push 0FFFFFFFEh  +
push 406h  +
push [ebp+var_C]  +
mov ecx edi +
call sub_104785B  +
cmp byte ptr [ebp+arg_10+3] bl +
jnz loc_1010928  +
push 16h  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+var_10]  +
call ds:SetWindowPos  +
xor eax eax +
inc eax  +
jmp loc_101094B  +
cmp cl bl +
jz loc_1010928  +
push ebx  +
push ebx  +
push ebx  +
push 407h  +
push eax  +
mov ecx edi +
call sub_104785B  +
jmp loc_1010904  +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+arg_8]  +
push eax  +
push [ebp+hWndFrom]  +
call sub_10771CE  +
jmp loc_101093A  +
mov ecx edi +
call sub_1076E0D  +
test eax eax +
jnz loc_105B1F0  +
jmp loc_101093A  +
push ebx  +
push ebx  +
push 447h  +
push [ebp+hWndFrom]  +
call ds:SendMessageW  +
cmp eax 0FFFFFFFFh +
jz loc_105B0D9  +
push 1  +
push eax  +
mov ecx esi +
call sub_1010F3D  +
cmp eax ebx +
jz loc_105B0D9  +
xor edx edx +
lea ecx [edi+29Ch] +
cmp esi ecx +
setnz dl  +
push 3  +
push eax  +
mov ecx edx +
push ecx  +
call sub_1075711  +
xor eax eax +
cmp [ebp+arg_8] 0Dh +
setz al  +
mov [edi+31Ch] eax +
jmp loc_101093A  +
push ebx  +
push ebx  +
push 447h  +
push [ebp+hWndFrom]  +
call ds:SendMessageW  +
mov [ebp+arg_10] eax +
cmp eax 0FFFFFFFFh +
jz loc_105B1B1  +
push 1  +
push eax  +
mov ecx esi +
call sub_1010F3D  +
cmp [ebp+arg_C] 0FFFFFFFFh +
mov esi eax +
jnz loc_105B125  +
mov dword ptr [edi+318h] 1 +
cmp [edi+318h] ebx +
jz loc_105B140  +
cmp dword ptr [esi+10h] 4 +
jnb loc_105B140  +
push [ebp+arg_10]  +
mov ecx edi +
push [ebp+hWndFrom]  +
call sub_107472A  +
push ebx  +
push ebx  +
push 41Ch  +
push [ebp+hWndFrom]  +
call ds:SendMessageW  +
cmp esi ebx +
jz loc_105B1F0  +
push dword ptr [esi]  +
call sub_107A759  +
mov eax [esi+10h] +
cmp eax 3 +
jb loc_105B187  +
cmp eax 4 +
jb loc_105B17C  +
cmp [edi+318h] ebx +
jz loc_105B179  +
push 0FFFFFFFEh  +
pop ebx  +
jmp loc_105B17C  +
mov ebx [ebp+arg_C] +
push [ebp+arg_10]  +
push [ebp+hWndFrom]  +
push ebx  +
push 7Bh  +
jmp loc_105B1A7  +
cmp [edi+318h] ebx +
jz loc_105B1F0  +
push ebx  +
push ebx  +
push ebx  +
push 204h  +
push esi  +
mov ecx edi +
call sub_104785B  +
push ebx  +
push ebx  +
push ebx  +
push 205h  +
push esi  +
mov ecx edi +
call sub_104785B  +
jmp loc_105B1F0  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hWndFrom]  +
call ds:GetWindowRect  +
test eax eax +
jz loc_101093A  +
lea eax [ebp+pt] +
push eax  +
call ds:GetCursorPos  +
test eax eax +
jz loc_101093A  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_101093A  +
xor eax eax +
jmp loc_101094B  +
***
mov [ebp+dwExStyle] ecx +
jmp loc_102C617  +
***
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_10230CE  +
jmp loc_1002328  +
***
lea eax [ebx+398h] +
cmp [eax] ecx +
jz loc_105B21F  +
mov [eax] ecx +
jmp loc_100DAC9  +
***
cmp [ebx+330h] ecx +
jz loc_105B235  +
push dword ptr [ebx+18h]  +
call ds:SetFocus  +
jmp loc_100DAC9  +
***
mov eax [ebx+338h] +
cmp eax ecx +
jz loc_105B27D  +
lea ecx [ebp+10h] +
push ecx  +
push dword ptr [eax+14h]  +
mov ecx ebx +
push dword ptr [eax+10h]  +
push eax  +
call sub_1021C47  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_105B27D  +
cmp dword ptr [ebp+10h] 0 +
jz loc_105B27D  +
push esi  +
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_1075354  +
test eax eax +
jz loc_105B27D  +
mov ecx [ebp+10h] +
push 0  +
push esi  +
call sub_10732AC  +
jmp loc_100DAC9  +
***
push 1  +
push 5  +
mov ecx ebx +
call sub_107586E  +
jmp loc_100DAC9  +
***
push 0  +
mov ecx ebx +
call sub_1074787  +
jmp loc_1010DD2  +
***
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_10355CA  +
jmp loc_100DAC9  +
***
cmp [ebx+330h] eax +
jnz loc_100DAC9  +
mov eax [ebp+10h] +
shr eax 10h +
push eax  +
push dword ptr [ebp+14h]  +
movzx eax word ptr [ebp+10h] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx ebx +
call sub_1076E35  +
jmp loc_100DAC9  +
***
push dword ptr [ebp+14h]  +
mov ecx ebx +
push dword ptr [ebp+10h]  +
call sub_107710D  +
jmp loc_1002328  +
***
xor eax eax +
cmp esi 204h +
setz al  +
mov ecx ebx +
push eax  +
mov eax [ebp+14h] +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
call sub_10766D4  +
jmp loc_100DAC9  +
***
cmp [ebx+330h] ecx +
jnz loc_100DAC9  +
push 0  +
push 0  +
push 406h  +
push dword ptr [ebx+10h]  +
call ds:PostMessageW  +
jmp loc_100DAC9  +
***
dec eax  +
jnz loc_10109C0  +
cmp [ebx+330h] eax +
jnz loc_100DAC9  +
mov ecx ebx +
call sub_10748AA  +
test eax eax +
jnz loc_105B35B  +
mov ecx offset unk_10B1460 +
call sub_106FDDB  +
jmp loc_100DAC9  +
***
mov ecx ebx +
call sub_10758CD  +
xor esi esi +
push esi  +
push esi  +
push esi  +
lea eax [ebp+14h] +
push eax  +
lea eax [ebp+10h] +
push eax  +
push esi  +
push offset aDontsavenotifi  +
push offset aSoftwareMic_27  +
mov [ebp+10h] esi +
mov dword ptr [ebp+14h] 4 +
call SHRegGetUSValueW  +
cmp [ebp+10h] esi +
jnz loc_100DAC9  +
xor edi edi +
push edi  +
mov ecx ebx +
call sub_1010881  +
mov ecx [eax+0Ch] +
cmp ecx esi +
jz loc_105B3BA  +
lea edx [ebx+2E0h] +
push edx  +
push offset loc_1073C82  +
push eax  +
push offset loc_107378C  +
call sub_10734B8  +
inc edi  +
cmp edi 3 +
jl loc_105B394  +
push esi  +
push ebx  +
push offset loc_1075E74  +
push 1  +
lea ecx [ebx+2E0h] +
call sub_102B2B3  +
jmp loc_100DAC9  +
***
mov esi [ebx+338h] +
cmp esi ecx +
jz loc_100DAC9  +
mov ecx [ebp+10h] +
cmp [esi+10h] ecx +
jnz loc_100DAC9  +
mov eax [ebp+14h] +
cmp [esi+14h] eax +
jnz loc_100DAC9  +
push 0  +
push 0  +
push 1  +
push eax  +
push ecx  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
mov ecx ebx +
movs   +
call sub_10476EC  +
jmp loc_100DAC9  +
***
mov esi [ebp+14h] +
cmp esi ecx +
jz loc_100DAC9  +
mov eax [ebx+35Ch] +
cmp eax ecx +
jz loc_105B449  +
mov ecx [eax] +
push esi  +
push dword ptr [ebp+10h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_105B449  +
push esi  +
mov ecx ebx +
call sub_1049FD2  +
push 1  +
mov ecx esi +
call sub_1074704  +
jmp loc_100DAC9  +
***
dec eax  +
jnz loc_10109C0  +
push 0FFFFFFFFh  +
push 3  +
lea ecx [ebx+2BCh] +
call sub_1010EB3  +
xor ecx ecx +
test eax eax +
setnle cl  +
mov eax ecx +
jmp loc_1002328  +
***
cmp [ebp+10h] ecx +
jnz loc_105B4C7  +
cmp [ebx+330h] ecx +
jnz loc_105B4C7  +
lea eax [ebx+348h] +
cmp [eax] ecx +
jz loc_105B4C7  +
mov esi [ebx+338h] +
cmp esi ecx +
jz loc_105B4C7  +
push 403h  +
xor ecx ecx +
push ecx  +
mov [eax] ecx +
mov dword ptr [ebx+388h] 4 +
push ecx  +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
mov eax [ebp+10h] +
mov [ebx+348h] eax +
jmp loc_100DAC9  +
***
push 5  +
push dword ptr [ebx+10h]  +
call ds:KillTimer  +
and dword ptr [ebx+384h] 0 +
jmp loc_100DAC9  +
***
push 2  +
pop eax  +
jmp loc_104AA03  +
***
push edi  +
push esi  +
call sub_10373D2  +
xor ecx ecx +
cmp eax 1 +
jl loc_105B5F2  +
inc edi  +
cmp eax 2 +
jnz loc_105B5F2  +
push eax  +
pop ecx  +
push ecx  +
push offset aStart_admint_0  +
call sub_104AA14  +
push edi  +
push offset aStartmenuadmin  +
call sub_104AA14  +
jmp loc_104A535  +
***
and [ebp+wParam] 0 +
jmp loc_104903F  +
***
push 0  +
push 0  +
push 1  +
push 0C0000005h  +
call ds:RaiseException  +
int 3  +
push 3Ch  +
push eax  +
push 51Dh  +
push [ebp+wParam]  +
call sub_1077773  +
jmp loc_104A404  +
***
push 1Eh  +
push 0  +
push 51Bh  +
jmp loc_105B630  +
mov eax [edi+24h] +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi ds:IsDlgButtonChecked +
push 470h  +
push dword ptr [edi+34h]  +
call esi  +
mov ebx ds:SetDlgItemInt +
test eax eax +
jz loc_105B67B  +
push 0  +
push 0Ah  +
push 51Bh  +
push [ebp+wParam]  +
call ebx  +
push 46Fh  +
push dword ptr [edi+34h]  +
call esi  +
test eax eax +
jz loc_105B697  +
push 0  +
push 0Ah  +
push 51Dh  +
push [ebp+wParam]  +
call ebx  +
mov dword ptr [edi+28h] 1 +
jmp loc_104A64C  +
cmp dword ptr [edi+28h] 0 +
jz loc_105B6B4  +
mov eax [edi+24h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+10h]  +
mov ebx ds:GetDlgItem +
mov esi 51Bh +
push esi  +
push [ebp+wParam]  +
call ebx  +
test eax eax +
jz loc_105B705  +
push eax  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_105B705  +
push 0  +
lea eax [ebp+Translated] +
push eax  +
push esi  +
push [ebp+wParam]  +
call ds:GetDlgItemInt  +
cmp [ebp+Translated] 0 +
jz loc_105B705  +
xor ecx ecx +
cmp ecx eax +
sbb ecx ecx +
and ecx eax +
cmp ecx 1Eh +
jb loc_105B6FA  +
push 1Eh  +
pop ecx  +
push ecx  +
push offset aStart_minmfu  +
call sub_104AA14  +
mov esi 51Dh +
push esi  +
push [ebp+wParam]  +
call ebx  +
test eax eax +
jz loc_104A564  +
push eax  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_104A564  +
push 0  +
lea eax [ebp+wParam] +
push eax  +
push esi  +
push [ebp+wParam]  +
call ds:GetDlgItemInt  +
cmp [ebp+wParam] 0 +
jz loc_104A564  +
xor ecx ecx +
cmp ecx eax +
sbb ecx ecx +
and ecx eax +
cmp ecx 3Ch +
jb loc_105B751  +
push 3Ch  +
pop ecx  +
push ecx  +
push offset aStart_jumplist  +
call sub_104AA14  +
jmp loc_104A564  +
***
mov eax 463h +
cmp [ecx+4] eax +
jnz loc_104A26B  +
push eax  +
push [ebp+wParam]  +
call ds:GetDlgItem  +
mov edi eax +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp-0Ch] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
mov [ebp+lParam] ecx +
call ds:ScreenToClient  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1111h  +
push edi  +
call ds:SendMessageW  +
test eax eax +
jz loc_104A26B  +
mov ecx [esi+24h] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+14h]  +
push [ebp+wParam]  +
mov [esi+28h] ebx +
call sub_1048561  +
jmp loc_104A26B  +
xor ebx ebx +
inc ebx  +
jmp loc_105B805  +
push 463h  +
push [ebp+wParam]  +
call ds:GetDlgItem  +
push 0  +
push 9  +
push 110Ah  +
push eax  +
call ds:SendMessageW  +
mov ecx [esi+24h] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+14h]  +
push [ebp+wParam]  +
mov [esi+28h] ebx +
call sub_1048561  +
push ebx  +
push 0  +
push [ebp+wParam]  +
call edi  +
jmp loc_104A26B  +
***
push eax  +
push eax  +
push 51Bh  +
push [ebp+bEnable]  +
call ds:SetDlgItemInt  +
push 0  +
push 51Bh  +
push [ebp+bEnable]  +
call edi  +
push eax  +
call ds:EnableWindow  +
jmp loc_104A8A4  +
push eax  +
push eax  +
push 51Dh  +
push [ebp+bEnable]  +
call ds:SetDlgItemInt  +
push 0  +
push 51Dh  +
push [ebp+bEnable]  +
call edi  +
push eax  +
call ds:EnableWindow  +
jmp loc_104A8F1  +
push 2  +
push dword ptr [esi+4]  +
call ds:EndDialog  +
xor eax eax +
jmp loc_104A965  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1048C16  +
cmp edx edi +
jnz loc_1048C16  +
push offset dword_105B998  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1048C16  +
push 0  +
push 475h  +
push [ebp+hDlg]  +
call esi  +
push eax  +
call ds:ShowWindow  +
push 0  +
push 479h  +
push [ebp+hDlg]  +
call esi  +
push eax  +
call ds:ShowWindow  +
push 0  +
push 478h  +
push [ebp+hDlg]  +
call esi  +
push eax  +
call ds:ShowWindow  +
jmp loc_1048CB6  +
push 1  +
push 473h  +
push [ebp+hDlg]  +
call edi  +
jmp loc_1048CCF  +
push 0  +
push 473h  +
push [ebp+hDlg]  +
call esi  +
push eax  +
call ebx  +
jmp loc_1048CE2  +
push 2  +
jmp loc_105B91B  +
push 3  +
pop eax  +
jmp loc_1048D00  +
push 0  +
push edi  +
push [ebp+hDlg]  +
call esi  +
push eax  +
call ebx  +
jmp loc_1048D29  +
push edi  +
push [ebp+hDlg]  +
call esi  +
push 0  +
push 2  +
mov esi eax +
push 14Eh  +
push esi  +
call ds:SendMessageW  +
push 0  +
push esi  +
call ebx  +
jmp loc_1048D82  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1048DB6  +
cmp edx edi +
jnz loc_1048DB6  +
push offset dword_105B9A8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1048DB6  +
***
push 1  +
jmp loc_104F4E6  +
push edi  +
push edi  +
push 14Eh  +
push [ebp+hWnd]  +
call esi  +
push edi  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
jmp loc_104F655  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+lParam] +
push edx  +
push 0  +
push [ebp+var_198]  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_104F607  +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 14Dh  +
push [ebp+hWnd]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_104F607  +
push 0  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
jmp loc_104F653  +
push edi  +
push offset aStart_powerbut  +
mov [ebp+var_198] edi +
call sub_104AA14  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+lParam] +
push edx  +
push 0  +
push [ebp+var_198]  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_104F653  +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 14Dh  +
push [ebp+hWnd]  +
call esi  +
jmp loc_104F653  +
push edi  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
jmp loc_104F66F  +
***
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_104F356  +
cmp edx ebx +
jnz loc_104F356  +
push offset dword_105BB60  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_104F356  +
push esi  +
mov esi ds:CheckDlgButton +
mov edi 46Fh +
push edi  +
push [ebp+hDlg]  +
call esi  +
push 0  +
push edi  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ebx  +
jmp loc_104F3BC  +
push 0  +
mov edi 470h +
push edi  +
push [ebp+hDlg]  +
call esi  +
push 0  +
push edi  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ebx  +
jmp loc_104F3E6  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_104F421  +
cmp edx edi +
jnz loc_104F421  +
push offset dword_105BB70  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_104F421  +
***
pop ebp  +
jmp loc_10778BD  +
***
push 463h  +
push [ebp+bEnable]  +
call ds:GetDlgItem  +
mov edi [ebp+hWnd] +
cmp edi eax +
jnz loc_104A385  +
mov eax [ebp+arg_C] +
movsx ecx ax +
shr eax 10h +
cwde   +
push esi  +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
push eax  +
push edi  +
mov [ebp+Point.x] ecx +
call ds:ScreenToClient  +
mov eax [ebp+Point.x] +
mov esi ds:SendMessageW +
mov [ebp+lParam] eax +
mov eax [ebp+Point.y] +
mov [ebp+var_14] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1111h  +
push edi  +
call esi  +
test eax eax +
jz loc_105BBEA  +
push eax  +
push 9  +
push 110Bh  +
push edi  +
call esi  +
xor eax eax +
inc eax  +
pop esi  +
jmp loc_104A367  +
***
shr eax 10h +
cmp ax 1 +
jz loc_10485A5  +
jmp loc_104843E  +
mov eax 45Ah +
cmp ax [edx+4] +
jnz loc_1048476  +
push 1  +
call sub_1077F45  +
jmp loc_1048476  +
***
mov ecx [ebx+28Ch] +
mov edx [ecx] +
cmp [ebp+var_30] edi +
jnz loc_105BC3F  +
push dword ptr [eax+10h]  +
push eax  +
push offset dword_1023F40  +
push ecx  +
call dword ptr [edx+18h]  +
jmp loc_104991C  +
lea esi [eax+10h] +
push dword ptr [esi]  +
push eax  +
push offset dword_1023F40  +
push ecx  +
call dword ptr [edx+1Ch]  +
test eax eax +
jl loc_104991C  +
cmp [esi] edi +
jz loc_104991C  +
mov esi [ebp+lpMem] +
push 4  +
pop ecx  +
mov edi offset dword_1023F70 +
xor eax eax +
cmps   +
jnz loc_105BC92  +
push [ebp+lpMem]  +
call sub_1002BCA  +
and [ebp+lpMem] 0 +
pop ecx  +
push [ebp+var_44]  +
push 0  +
push 1101h  +
push dword ptr [ebx+278h]  +
call ds:SendMessageW  +
xor edi edi +
jmp loc_104991C  +
***
push edi  +
xor edi edi +
test eax eax +
jle loc_105BCBB  +
push ebx  +
lea ebx [esi+54h] +
push edi  +
mov ecx ebx +
call sub_1013815  +
push dword ptr [eax]  +
call ds:off_105BCC4  +
inc edi  +
cmp edi [esi+58h] +
jl loc_105BCA4  +
pop ebx  +
pop edi  +
jmp loc_1048B5E  +
***
mov eax [ebp+arg_0] +
mov [esi+28h] eax +
jmp loc_10489C0  +
***
mov ecx eax +
jmp loc_10780A5  +
***
push 0Eh  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_104A4BB  +
***
xor eax eax +
jmp loc_1048675  +
***
cmp ebx 2Eh +
jb loc_105BD25  +
cmp ebx 2Fh +
jbe loc_105BD1D  +
cmp ebx 37h +
jz loc_105BD1D  +
cmp ebx 39h +
jz loc_105BD1D  +
cmp ebx 110h +
jz loc_105BD1D  +
cmp ebx 131h +
jbe loc_105BD25  +
cmp ebx 138h +
ja loc_105BD25  +
mov eax [ebp+14h] +
jmp loc_104A2FB  +
***
push dword ptr [ebp+14h]  +
push 0  +
push dword ptr [esi+4]  +
call ds:SetWindowLongW  +
xor eax eax +
inc eax  +
jmp loc_104A2FB  +
***
push 38h  +
lea eax [ebp+var_264] +
push 0  +
push eax  +
mov [ebp+var_268] 16h +
call memset  +
add esp 0Ch +
push [ebp+var_220]  +
lea ecx [esi+27Ch] +
call sub_1013815  +
mov eax [eax] +
mov [ebp+var_264] eax +
lea eax [ebp+var_268] +
push eax  +
push 0  +
push 113Eh  +
push dword ptr [esi+278h]  +
call edi  +
test eax eax +
jz loc_105BDA0  +
cmp [ebp+lpMem] 0 +
jz loc_105BDA0  +
push [ebp+lpMem]  +
call sub_1002BCA  +
pop ecx  +
inc [ebp+var_220]  +
cmp [ebp+var_220] ebx +
jge loc_1049B7E  +
jmp loc_105BD3B  +
***
push eax  +
call ebx  +
jmp loc_1049CFE  +
***
xor ecx ecx +
cmp [eax+0Ch] ecx +
setnz cl  +
push ecx  +
push 1  +
mov ecx esi +
call sub_104989B  +
jmp loc_104981B  +
push 0  +
push 9  +
push 110Ah  +
push dword ptr [esi+278h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_104981B  +
push eax  +
push dword ptr [esi+278h]  +
call sub_1049A03  +
test eax eax +
jz loc_104981B  +
push [ebp+wParam]  +
call sub_1048561  +
push 1  +
push 0  +
push [ebp+wParam]  +
call ds:SetWindowLongW  +
jmp loc_104981B  +
***
pop ebp  +
jmp loc_10778DE  +
***
cmp eax 46Dh +
jz loc_105BE46  +
add eax 0FFFFFB91h +
cmp eax 1 +
ja loc_1048520  +
push [ebp+wParam]  +
call sub_1048561  +
jmp loc_1048520  +
shr ecx 10h +
cmp cx 1 +
jz loc_105BE39  +
jmp loc_1048520  +
push [ebp+wParam]  +
call sub_1048561  +
jmp loc_104A457  +
mov eax 45Ch +
cmp ax [esi+4] +
jnz loc_1048557  +
push 2  +
call sub_1077F45  +
jmp loc_1048557  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1049433  +
cmp edx edi +
jnz loc_1049433  +
push offset dword_105BEC0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1049433  +
***
lea eax [ebp+ppv] +
push eax  +
push offset stru_104A0BC  +
push 1  +
push 0  +
push offset stru_104A0CC  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1048988  +
test byte ptr [esi] 4 +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0  +
jz loc_105BF06  +
push 0  +
jmp loc_105BF0B  +
push offset aSystemicons  +
push offset aMicrosoft_noti  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1048988  +
push 0Ah  +
pop ebx  +
jmp loc_1048933  +
***
lea eax [ebp+Paint] +
push eax  +
push dword ptr [ebx]  +
call ds:BeginPaint  +
mov esi eax +
cmp [ebx+2Ch] edi +
jz loc_105BF8E  +
call ds:IsCompositionActive  +
neg eax  +
lea ecx [ebp+hDC] +
push ecx  +
sbb eax eax +
push edi  +
and eax 2 +
push eax  +
lea eax [ebp+Paint.rcPaint] +
push eax  +
push [ebp+Paint.hdc]  +
call ds:BeginBufferedPaint  +
mov [ebp+var_4C] eax +
cmp eax edi +
jnz loc_102DDD4  +
mov [ebp+hDC] esi +
jmp loc_102DDD4  +
mov dword ptr [ebx+30h] 1 +
mov [ebp+hDC] edi +
jmp loc_102DDD4  +
lea ecx [ebp+var_80] +
push ecx  +
push esi  +
push 0E12h  +
push esi  +
push 7  +
push [ebp+hDC]  +
push eax  +
call ds:GetThemeMargins  +
jmp loc_102DE1E  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_105BFD1  +
push esi  +
lea eax [ebp+rcSrc1] +
push eax  +
push [ebp+hDC]  +
call ds:SHLWAPI_197  +
mov edi ds:DrawThemeBackground +
push esi  +
lea eax [ebp+rc] +
push eax  +
push esi  +
push 6  +
push [ebp+hDC]  +
push dword ptr [ebx+18h]  +
call edi  +
push esi  +
lea eax [ebp+rcSrc2] +
push eax  +
push esi  +
push 7  +
push [ebp+hDC]  +
push dword ptr [ebx+18h]  +
call edi  +
jmp loc_102DE82  +
cmp [ebp+var_4C] edi +
jz loc_105C00F  +
push 1  +
push [ebp+var_4C]  +
call ds:EndBufferedPaint  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [ebx]  +
call ds:EndPaint  +
jmp loc_102DE8D  +
***
inc eax  +
jmp loc_10201E1  +
***
mov ecx esi +
call sub_1079437  +
push 0  +
push 0  +
push dword ptr [esi]  +
call ds:InvalidateRect  +
jmp loc_101EFDB  +
***
test ecx ecx +
jz loc_1012197  +
cmp dword ptr [ecx+8] 0FFFFFDF7h +
jnz loc_1012197  +
mov esi [esi+3Ch] +
test esi esi +
jz loc_1012197  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
jmp loc_1012197  +
lea eax [ebp+Paint] +
push eax  +
push edi  +
call ds:BeginPaint  +
push eax  +
mov ecx esi +
call sub_107962B  +
mov esi eax +
lea eax [ebp+Paint] +
push eax  +
push edi  +
call ds:EndPaint  +
mov eax esi +
jmp loc_10121A4  +
xor eax eax +
cmp edx 7 +
setz al  +
mov ecx esi +
push eax  +
call sub_10795E5  +
jmp loc_1012197  +
mov ecx [esi+3Ch] +
and [ebp+hWnd] 0 +
test ecx ecx +
jz loc_1012197  +
mov eax [ecx] +
lea edx [ebp+hWnd] +
push edx  +
push ebx  +
call dword ptr [eax+14h]  +
cmp [ebp+hWnd] 0 +
jnz loc_10121A4  +
jmp loc_1012197  +
xor edi edi +
cmp [esi+4Ch] edi +
jz loc_105C0E0  +
push edi  +
mov ecx esi +
call sub_10790DA  +
mov [esi+4Ch] edi +
cmp [ebp+arg_4] 200h +
jnz loc_105C0F4  +
push [ebp+var_4C]  +
mov ecx esi +
push ebx  +
call sub_1078FC4  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_64] +
stos   +
mov eax [ebp+var_4C] +
mov [ebp+var_5C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_64] eax +
mov eax [ebp+hWnd] +
mov [ebp+lParam] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 407h  +
push dword ptr [esi+14h]  +
mov [ebp+var_60] ebx +
call ds:SendMessageW  +
mov edi [ebp+hWnd] +
jmp loc_1012197  +
and dword ptr [esi+50h] 0 +
and dword ptr [esi+54h] 0 +
xor eax eax +
jmp loc_10121A4  +
push ebx  +
push edi  +
call ds:KillTimer  +
cmp dword ptr [esi+4Ch] 0 +
jz loc_1012197  +
push 1  +
mov ecx esi +
call sub_10790DA  +
jmp loc_1012197  +
***
mov esi [edx+8] +
cmp esi 0FFFFFFFCh +
jz loc_105C16F  +
cmp esi 0FFFFFFFEh +
jnz loc_10218A9  +
call sub_10797DD  +
xor eax eax +
jmp loc_10218B8  +
***
push edi  +
call sub_100C205  +
xor edi edi +
and [esi] edi +
pop ecx  +
jmp loc_102E1A7  +
***
push dword ptr [ebp+18h]  +
push offset loc_10120F9  +
push dword ptr [ebp+8]  +
call sub_103519B  +
jmp loc_101210B  +
***
mov ebx ecx +
jmp loc_102DFFE  +
pop ecx  +
mov [esi+40h] edi +
jmp loc_102E0CC  +
***
mov dword ptr [esi+2Ch] 1 +
jmp loc_101E9D3  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_101E9D3  +
mov eax [ecx] +
call dword ptr [eax]  +
jmp loc_101E9D3  +
mov ecx esi +
call sub_1079820  +
jmp loc_100E191  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_102DD82  +
xor edi edi +
inc edi  +
jmp loc_100E09A  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_101E9D3  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_101E9D3  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_100E09A  +
mov edx [ebp+Msg] +
mov eax [ecx] +
shr edx 10h +
push edx  +
push [ebp+lParam]  +
movzx edx word ptr [ebp+Msg] +
push edx  +
push dword ptr [esi]  +
call dword ptr [eax+10h]  +
jmp loc_101E9D3  +
cmp [ebp+Msg] 1Bh +
jnz loc_100E09A  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_100E09A  +
mov eax [ecx] +
call dword ptr [eax+8]  +
jmp loc_101E9D3  +
push [ebp+lParam]  +
push [ebp+Msg]  +
push eax  +
push dword ptr [esi]  +
call ds:DefWindowProcW  +
cmp eax 0Ah +
jl loc_102DED6  +
cmp eax 11h +
jg loc_102DED6  +
jmp loc_1020E75  +
mov ecx esi +
call sub_1079A2E  +
jmp loc_101E9D3  +
cmp [ebp+lParam] 405h +
jg loc_100E09A  +
push 0  +
push 0  +
push 8002h  +
push dword ptr [esi]  +
call ds:PostMessageW  +
jmp loc_100E09A  +
***
mov [ebp+dwExStyle] 400080h +
jmp loc_102DBE4  +
***
mov esi ds:GetSystemMetrics +
push 5  +
call esi  +
mov ebx eax +
push 31h  +
add ebx ebx +
call esi  +
mov edi eax +
push 6  +
add edi ebx +
call esi  +
mov ebx eax +
push 32h  +
add ebx ebx +
call esi  +
add eax ebx +
cmp edi eax +
pop esi  +
pop ebx  +
jle loc_101F848  +
mov eax edi +
jmp loc_101F848  +
***
and [ebp+var_4] 0 +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_8] 18h +
call sub_1011ACD  +
mov eax [ebp+var_8] +
jmp loc_101F848  +
***
push esi  +
call sub_1002BCA  +
pop ecx  +
jmp loc_10109F8  +
***
mov esi [ebp+lprc] +
push 10h  +
push esi  +
push [ebp+hdc]  +
call ds:FillRect  +
mov edi [edi+10h] +
cmp edi 2 +
jnz loc_105C33C  +
push 200Fh  +
push 4  +
jmp loc_105C348  +
cmp edi 3 +
jnz loc_105C352  +
push 200Fh  +
push 8  +
push esi  +
push [ebp+hdc]  +
call ds:DrawEdge  +
mov edi [esi] +
push ebx  +
mov ebx ds:GetSystemMetrics +
push 31h  +
mov [ebp+lprc] edi +
call ebx  +
mov ecx [esi+8] +
sub ecx edi +
sub ecx eax +
mov eax ecx +
cdq   +
sub eax edx +
mov edi eax +
mov eax [esi+4] +
sar edi 1 +
add edi [ebp+lprc] +
push 32h  +
mov [ebp+lprc] eax +
call ebx  +
mov ecx [esi+0Ch] +
sub ecx [ebp+lprc] +
mov ebx [ebp+var_4] +
sub ecx eax +
mov eax ecx +
cdq   +
sub eax edx +
mov esi eax +
sar esi 1 +
add esi [ebp+lprc] +
add ebx 58h +
xor eax eax +
cmp [ebx] eax +
jnz loc_105C3B2  +
push 1  +
push ebx  +
push eax  +
push 0FFFFFF92h  +
push offset LibFileName  +
call ds:ExtractIconExW  +
xor eax eax +
mov ebx [ebx] +
cmp ebx eax +
jz loc_105C3CA  +
push 3  +
push eax  +
push eax  +
push eax  +
push eax  +
push ebx  +
push esi  +
push edi  +
push [ebp+hdc]  +
call ds:DrawIconEx  +
pop ebx  +
jmp loc_1021B91  +
***
xor edi edi +
jmp loc_1020E86  +
***
xor ecx ecx +
cmp ebx 7 +
setz cl  +
shl ecx 2 +
xor ecx [esi+74h] +
and ecx 4 +
xor [esi+74h] ecx +
test byte ptr [esi+74h] 5 +
jz loc_105C3F4  +
push 2  +
pop eax  +
push eax  +
mov ecx esi +
call sub_1079E2A  +
mov eax [esi+74h] +
shr eax 2 +
shl eax 2 +
not eax  +
and eax 4 +
or eax 1 +
push eax  +
mov ecx esi +
call sub_1079ED5  +
jmp loc_1010A61  +
***
push dword ptr [ebp+14h]  +
call sub_107A128  +
jmp loc_1010A5E  +
***
push 0D5h  +
call sub_104EC67  +
mov [esi+5Ch] eax +
test eax eax +
jz loc_1010A61  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call sub_107A525  +
push dword ptr [esi+5Ch]  +
call ds:DestroyMenu  +
and [esi+5Ch] edi +
jmp loc_1010A61  +
***
mov eax [ebp+14h] +
cmp dword ptr [eax+8] 0FFFFFDF7h +
jnz loc_1010A4E  +
call sub_107A1B0  +
jmp loc_1010A5E  +
***
and dword ptr [esi+74h] 0FFFFFFFEh +
push 1  +
push edi  +
call sub_107A03D  +
push 4  +
mov ecx esi +
call sub_1079ED5  +
mov ecx esi +
call sub_1079E90  +
mov ecx esi +
call sub_1079EB1  +
or dword ptr [esi+74h] 120h +
mov eax [esi+74h] +
or dword ptr [esi+4Ch] 0FFFFFFFFh +
test al 4 +
jnz loc_1010A61  +
push 1  +
mov ecx esi +
call sub_1079E2A  +
jmp loc_1010A61  +
***
test byte ptr [esi+74h] 4 +
jz loc_1010A4E  +
push edi  +
call ds:SetFocus  +
jmp loc_1010A4E  +
***
call sub_1045540  +
test eax eax +
jnz loc_105C539  +
call ds:GetCapture  +
cmp eax [esi+4] +
jnz loc_1010A61  +
call ds:ReleaseCapture  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call sub_1079E50  +
mov edi eax +
xor eax eax +
test edi edi +
setnz al  +
mov ecx esi +
inc eax  +
push eax  +
call sub_1079E2A  +
test edi edi +
jz loc_1010A61  +
mov ecx esi +
call sub_1079E90  +
push 1  +
push 0  +
mov ecx esi +
call sub_107A03D  +
mov ecx esi +
call sub_107A076  +
push 0  +
call sub_10407F3  +
and dword ptr [esi+74h] 0FFFFFFDFh +
jmp loc_1010A61  +
***
mov ecx esi +
call sub_107A49B  +
jmp loc_1010A61  +
***
push 3  +
call sub_1079E2A  +
call sub_1045540  +
test eax eax +
jnz loc_105C563  +
push dword ptr [esi+4]  +
call ds:SetCapture  +
jmp loc_1010A61  +
***
mov ecx esi +
call sub_1079DE6  +
jmp loc_1010A61  +
***
mov eax [ebp+10h] +
dec eax  +
jz loc_105C5EC  +
dec eax  +
jz loc_105C5E5  +
dec eax  +
jz loc_105C5A8  +
dec eax  +
jnz loc_1010A61  +
test byte ptr [esi+74h] 80h +
jz loc_1010A61  +
call sub_1079EB1  +
push 6  +
push 1  +
mov ecx esi +
call sub_107A03D  +
and dword ptr [esi+74h] 0FFFFFEFFh +
jmp loc_1010A61  +
***
test byte ptr [esi+74h] 40h +
jz loc_1010A61  +
call sub_1079E90  +
test byte ptr [esi+74h] 20h +
jz loc_1010A61  +
mov ecx offset unk_10B1F58 +
call sub_10372F5  +
test eax eax +
jnz loc_1010A61  +
push 1  +
push 1  +
mov ecx esi +
call sub_107A03D  +
push 2  +
jmp loc_105C52B  +
***
push 3  +
jmp loc_105C410  +
***
push 2  +
jmp loc_105C410  +
***
xor edi edi +
jmp loc_104ECA9  +
***
push 10h  +
push 244h  +
push 245h  +
push [ebp+arg_0]  +
push hInstance  +
call ds:ShellMessageBoxW  +
xor eax eax +
add esp 14h +
inc eax  +
jmp loc_10409C9  +
***
cmp dword ptr [ebp+Data] edi +
jz loc_1028342  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push edi  +
push phkResult  +
mov dword ptr [ebp+Data] edi +
call sub_107A624  +
xor eax eax +
inc eax  +
jmp loc_1028344  +
***
mov esi 2021h +
jmp loc_102A6E8  +
***
push esi  +
mov esi ds:GetSystemMetrics +
push 1  +
call esi  +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push edi  +
push [ebp+lprc]  +
call ds:SetRect  +
pop esi  +
xor eax eax +
jmp loc_1002F5E  +
***
and [ebp+var_4] 0 +
jmp loc_10121D6  +
***
or eax [ebp+arg_4] +
jmp loc_101F0A2  +
***
push edi  +
push ebx  +
call ds:SelectClipRgn  +
push edi  +
call ds:DeleteObject  +
jmp loc_1035DB5  +
***
mov eax [ebp+arg_4] +
jmp loc_103B07D  +
mov eax [ebp+arg_8] +
jmp loc_103B086  +
***
xor eax eax +
retn   +
***
mov eax large fs:18h +
mov eax [eax+30h] +
push dword ptr [eax+1D4h]  +
lea eax [ebp+var_20C] +
push offset aSoftwareMic_28  +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 10h +
push 1  +
push offset aTaskbaranimati  +
lea eax [ebp+var_20C] +
push eax  +
jmp loc_1011E5D  +
***
mov ebx [ecx] +
cmp ebx [esi] +
jle loc_105C76A  +
mov ecx esi +
add esi 4 +
jmp loc_1022C54  +
mov ecx [ebp+arg_4] +
shl ecx 2 +
mov eax [ebp+ecx+var_78] +
mov edx [ebp+ecx+var_F0] +
jmp loc_1022BFF  +
mov edi [eax] +
shr ecx 1 +
lea ecx [eax+ecx*4] +
mov esi [ecx] +
mov [ecx] edi +
mov [eax] esi +
mov esi eax +
lea ecx [edx+4] +
cmp [ebp+arg_8] 0 +
jz loc_105C7BF  +
add esi 4 +
mov [ebp+arg_0] esi +
cmp esi edx +
ja loc_105C7B0  +
mov edi [esi] +
cmp edi [eax] +
jle loc_105C7A0  +
sub ecx 4 +
cmp ecx eax +
jbe loc_105C7DC  +
mov edi [eax] +
cmp edi [ecx] +
jg loc_105C7DC  +
jmp loc_105C7B0  +
add esi 4 +
mov [ebp+arg_0] esi +
cmp esi edx +
ja loc_105C7CF  +
mov edi [eax] +
cmp edi [esi] +
jle loc_105C7BF  +
sub ecx 4 +
cmp ecx eax +
jbe loc_105C7DC  +
mov edi [ecx] +
cmp edi [eax] +
jle loc_105C7CF  +
cmp ecx esi +
jb loc_105C7EA  +
mov ebx [ecx] +
mov edi [esi] +
mov [esi] ebx +
mov [ecx] edi +
jmp loc_105C79A  +
mov edi [ecx] +
mov esi [eax] +
mov [eax] edi +
mov [ecx] esi +
mov esi ecx +
sub esi eax +
mov edi edx +
sub edi [ebp+arg_0] +
sub esi 4 +
and esi 0FFFFFFFCh +
and edi 0FFFFFFFCh +
cmp esi edi +
jl loc_105C836  +
lea esi [eax+4] +
cmp esi ecx +
jnb loc_105C826  +
mov esi [ebp+arg_4] +
shl esi 2 +
add ecx 0FFFFFFFCh +
inc [ebp+arg_4]  +
mov [ebp+esi+var_78] eax +
mov [ebp+esi+var_F0] ecx +
mov eax [ebp+arg_0] +
cmp eax edx +
jb loc_1022BFF  +
jmp loc_1022C36  +
mov esi [ebp+arg_0] +
cmp esi edx +
jnb loc_105C851  +
mov edi [ebp+arg_4] +
shl edi 2 +
inc [ebp+arg_4]  +
mov [ebp+edi+var_78] esi +
mov [ebp+edi+var_F0] edx +
lea edx [eax+4] +
cmp edx ecx +
jnb loc_1022C36  +
lea edx [ecx-4] +
jmp loc_1022BFF  +
***
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 43Fh  +
push [ebp+hWnd]  +
call esi  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_20] +
jz loc_105C886  +
inc edi  +
cmp edi ebx +
jge loc_10228CA  +
jmp loc_105C864  +
inc [ebp+var_4]  +
jmp loc_10228D4  +
***
lea ecx [ebp-2Ch] +
push ecx  +
push 5  +
call eax  +
jmp loc_1023CC8  +
***
push edi  +
call FreeLibrary  +
mov [ebp+8] esi +
jmp loc_1023CC8  +
***
call GetLastError  +
cmp eax 7Eh +
jz loc_105C8BA  +
cmp eax 0C1h +
jnz loc_105C8EC  +
push 0  +
push 0FFFFFFFFh  +
push esi  +
call InterlockedCompareExchange  +
test eax eax +
jz loc_105C8D0  +
mov [ebp+8] eax +
jmp loc_1023CC8  +
***
mov dword ptr [ebp-4] 1 +
jmp loc_105C8EC  +
call GetLastError  +
cmp eax 7Fh +
jnz loc_102A6F7  +
jmp loc_1023CF1  +
***
push dword ptr [ebp-8]  +
push ebx  +
call DelayLoadFailureHook  +
mov esi eax +
jmp loc_1023D00  +
***
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_10484AA  +
***
xor eax eax +
jmp loc_104F777  +
xor eax eax +
inc eax  +
mov dword_10B1110 eax +
jmp loc_104F776  +
push 8  +
push ebx  +
mov ebx ds:GetProcessHeap +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
xor eax eax +
cmp edi eax +
jz loc_104F77E  +
push eax  +
push edi  +
push esi  +
mov [edi] eax +
mov [edi+4] eax +
call dword_10B111C  +
test eax eax +
jz loc_105C960  +
push edi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [esi] +
jmp loc_104F76E  +
***
push 0Dh  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_105C995  +
pop esi  +
retn   +
push 40h  +
mov eax 1000h +
push eax  +
push eax  +
push 0  +
call ds:VirtualAlloc  +
mov esi eax +
test esi esi +
jnz loc_105C999  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi] +
push edi  +
push dword_10B1110  +
call dword_10B1118  +
mov edi eax +
test edi edi +
jz loc_105C9BE  +
push 8000h  +
push 0  +
push esi  +
call ds:VirtualFree  +
jmp loc_105C9DA  +
mov edi esi +
add esi 0FF0h +
push edi  +
push dword_10B1110  +
call dword_10B1114  +
add edi 10h +
cmp edi esi +
jb loc_105C9C6  +
mov eax edi +
pop edi  +
jmp loc_1048769  +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_10B3D34 eax +
xor ebx ebx +
cmp dword_10B1120 ebx +
jnz loc_105CA98  +
push eax  +
call ds:_exit  +
***
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax 0FFh +
call sub_10324BC  +
retn   +
***
cmp ecx 20Bh +
jnz loc_1032C24  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1032C24  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1032BC6  +
***
push offset sub_100D861  +
call ds:__setusermatherr  +
pop ecx  +
jmp loc_1032C1C  +
***
push 8  +
call _lock  +
pop ecx  +
and dword ptr [ebp-4] 0 +
mov eax dword_10B1184 +
mov [ebp-1Ch] eax +
mov eax dword_10B1180 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+8]  +
call __dllonexit  +
add esp 0Ch +
mov [ebp-24h] eax +
mov eax [ebp-1Ch] +
mov dword_10B1184 eax +
mov eax [ebp-20h] +
mov dword_10B1180 eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_105CB5F  +
mov eax [ebp-24h] +
jmp loc_1032CA3  +
***
pop ecx  +
xor eax eax +
mov [ebp-1Ch] eax +
jmp loc_1032F29  +
***
cmp ax 3 +
jnz loc_1032ED7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
***
test eax ebx +
jz loc_1030DDC  +
not eax  +
mov dword_10B1094 eax +
jmp loc_1030E32  +
***
and eax 0FFFFh +
or eax 80070000h +
jmp loc_10502B3  +
***
push 30h  +
pop ecx  +
cmp cx word ptr [ebp+arg_8] +
jz loc_105CBC1  +
push 31h  +
pop ecx  +
cmp cx word ptr [ebp+arg_8] +
jnz loc_10191BE  +
push 31h  +
pop eax  +
xor ecx ecx +
cmp ax word ptr [ebp+arg_8] +
mov eax [ebp+arg_C] +
setz cl  +
mov [eax] ecx +
jmp loc_1030E64  +
push 0Dh  +
pop eax  +
jmp loc_10191BA  +
***
test esi esi +
jbe loc_10335EC  +
xor ecx ecx +
mov [edi] cx +
jmp loc_10335EC  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_10335F6  +
***
call sub_107BE7B  +
push esi  +
call ds:LoadLibraryW  +
mov hModule eax +
jmp loc_102E3A1  +
***
call sub_10350A4  +
cmp hModule 0 +
jnz loc_10120A3  +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
jmp loc_10120B7  +
***
xor eax eax +
pop ebp  +
retn 14h  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 28h  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
xor eax eax +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
mov eax 80004005h +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
xor eax eax +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
mov eax 80004005h +
pop ebp  +
retn 10h  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
or eax 0FFFFFFFFh +
pop ebp  +
retn 8  +
***
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
pop ebp  +
retn 0Ch  +
***
pop ebp  +
retn 0Ch  +
***
xor eax eax +
pop ebp  +
retn 0Ch  +
***
pop ebp  +
jmp sub_1048B0B  +
***
push eax  +
call ds:GetModuleHandleW  +
mov esi eax +
jmp loc_1032FB5  +
push 0FFFFFFFFh  +
push esi  +
push offset dword_10B39C8  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax 0FFFFFFFFh +
jz loc_105CD24  +
push esi  +
call sub_107BE6A  +
call sub_10350A4  +
jmp loc_1033010  +
***
cmp eax 0FFFFFFFFh +
jnz loc_105CD3A  +
xor eax eax +
jmp loc_10350E9  +
push dword_10B3D3C  +
push eax  +
call sub_1032F75  +
cmp dword_10B39C8 0FFFFFFFFh +
jz loc_10350E6  +
push esi  +
push dword_10B39C8  +
call sub_1049220  +
jmp loc_10350E9  +
***
push esi  +
push dword ptr [ebp+8]  +
call edi  +
push esi  +
push esi  +
jmp loc_10431C2  +
***
push esi  +
push offset sub_107BF95  +
call ds:EnumWindows  +
push 0FFFFFFFFh  +
push esi  +
call sub_10343A5  +
jmp loc_1034398  +
***
or dword ptr [edi] 10000000h +
jmp loc_1043F1A  +
or dword ptr [edi] 40000000h +
jmp loc_1043F27  +
***
push 41h  +
lea ecx [ebp+var_310] +
push ecx  +
push 0  +
push 4  +
push [ebp+arg_4]  +
xor eax eax +
mov word ptr [ebp+var_310] ax +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_104F958  +
lea eax [ebp+var_310] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_314]  +
call sub_100665F  +
jmp loc_104330F  +
push [ebp+arg_C]  +
lea eax [ebp+var_108] +
push [ebp+var_314]  +
push eax  +
call SHAnsiToUnicode  +
jmp loc_1043319  +
***
push 4  +
push 0  +
call CoInitializeEx  +
cmp eax 1 +
jnz loc_105CE3D  +
xor eax eax +
pop esi  +
retn   +
cmp eax esi +
jnz loc_10191F1  +
xor eax eax +
inc eax  +
jmp loc_10191F1  +
***
mov [ebp+arg_0] ebx +
jmp loc_1010555  +
***
mov [eax] ecx +
jmp loc_10429CB  +
push [ebp+var_6C]  +
push offset dword_100671C  +
push esi  +
push [ebp+rguid]  +
push esi  +
call SHBindToObject  +
mov edi eax +
jmp loc_1042A17  +
***
push eax  +
call ds:SetEvent  +
push dword ptr [esi+20h]  +
call ds:CloseHandle  +
jmp loc_1008E15  +
***
mov [ebp-4] ebx +
jmp loc_1008DC5  +
***
mov [ebp-4] ecx +
jmp loc_1008DC5  +
***
mov dword ptr [edi] 4 +
xor eax eax +
jmp loc_1008DC8  +
***
push 0  +
call ds:GetKeyboardLayout  +
push ebx  +
push dword ptr [esi+1Ch]  +
mov [ebp-8] eax +
call edi  +
jmp loc_1008D73  +
***
push ebx  +
push dword ptr [ebp-8]  +
call edi  +
jmp loc_1008D86  +
***
push ecx  +
call ds:GetKeyboardLayout  +
push ebx  +
push dword ptr [esi+1Ch]  +
mov [ebp-8] eax +
call edi  +
jmp loc_1008DA4  +
***
push ebx  +
push dword ptr [ebp-8]  +
call edi  +
jmp loc_1008DB7  +
***
push ecx  +
mov ecx esi +
call sub_107CA37  +
mov dword ptr [ebp-4] 8000000Ah +
jmp loc_1008DB7  +
***
push [ebp+lpName]  +
push [ebp+bInitialState]  +
push [ebp+bManualReset]  +
push edi  +
call sub_107CFCF  +
mov [ebp+bInitialState] eax +
test eax eax +
jz loc_105CF35  +
mov esi ds:GetCurrentProcess +
push 1  +
push 0  +
push edi  +
lea eax [ebp+TargetHandle] +
push eax  +
call esi  +
push eax  +
push [ebp+bInitialState]  +
call esi  +
push eax  +
call ds:DuplicateHandle  +
jmp loc_1032385  +
push [ebp+lpName]  +
push 0  +
push edi  +
call esi  +
mov [ebp+TargetHandle] eax +
test eax eax +
jnz loc_1032385  +
call ds:__imp_GetLastError  +
cmp eax 5 +
jnz loc_1032385  +
push [ebp+lpName]  +
push 0  +
push ebx  +
call esi  +
mov [ebp+TargetHandle] eax +
jmp loc_1032385  +
***
push esi  +
call PathIsFileSpecW  +
test eax eax +
jnz loc_105CF7C  +
push esi  +
call PathFindFileNameW  +
jmp loc_102E528  +
mov eax esi +
jmp loc_102E528  +
***
push esi  +
call ds:lstrlenW  +
cmp eax 5 +
jg loc_102708B  +
mov ebx esi +
jmp loc_102708B  +
***
cmp [ebp+pdwType] 4 +
jnz loc_105CFB1  +
cmp [ebp+pvData] eax +
setnz al  +
jmp loc_1015520  +
cmp word ptr [ebp+pvData] ax +
jmp loc_105CFA9  +
***
test eax eax +
jz loc_105CFD2  +
cmp eax 1 +
jnz loc_10154A5  +
movzx eax byte ptr [ebp+arg_C] +
shr eax 1 +
jmp loc_10154A8  +
mov al byte ptr [ebp+arg_C] +
not al  +
movzx eax al +
jmp loc_105CFCB  +
***
xor eax eax +
jmp loc_1015480  +
***
cmp ecx 26h +
jnz loc_105CFF0  +
add eax 4 +
jmp loc_101B55A  +
mov ax [eax+2] +
jmp loc_101B569  +
***
push dword ptr [esi]  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
call sub_107C97A  +
mov [esi] eax +
jmp loc_1027101  +
***
xor edi edi +
push edi  +
push edi  +
push ebx  +
call ds:SetWindowLongW  +
mov [esi+4] edi +
jmp loc_100204E  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edi  +
push ebx  +
call SHLWAPI_240  +
mov [ebp+14h] eax +
jmp loc_1002054  +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10344E0  +
mov cx word_10B1084 +
mov [eax] cx +
jmp loc_10344E0  +
***
mov eax [ebp+Exchange] +
cmp eax 0FFFFFFFFh +
jz loc_100935D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_100935D  +
***
push offset __ImageBase  +
call UnInitProcessPriv  +
jmp loc_1029C89  +
***
cmp [ebp+var_418] 0 +
jnz loc_10374A4  +
xor eax eax +
test edi edi +
setz al  +
mov [ebp+var_418] 1 +
mov edi eax +
jmp loc_1037434  +
***
cmp [ebp+var_C] esi +
jnz loc_102363E  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_105D104  +
push 1  +
push esi  +
push offset stru_105D0F4  +
call CoCreateInstance  +
test eax eax +
jl loc_102363E  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+48h]  +
test eax eax +
jnz loc_105D0E5  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
mov esi eax +
sub esi 88760245h +
neg esi  +
sbb esi esi +
inc esi  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_102363E  +
***
call ds:__imp_GetLastError  +
test eax eax +
jle loc_105D128  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100B04F  +
***
call ds:__imp_GetLastError  +
test eax eax +
jle loc_100AFC8  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100AFC8  +
***
and dword ptr [esi] 0 +
mov dword ptr [ebp+8] 80004002h +
jmp loc_104FDAB  +
***
inc eax  +
jmp loc_104FAE1  +
***
mov esi [ebx+3Ch] +
mov [ebp-0A8h] edi +
jmp loc_105D17D  +
inc dword ptr [ebp-0A8h]  +
push esi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp [esi] di +
jnz loc_105D16C  +
mov eax [ebp-0A8h] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1002B98  +
mov edi eax +
pop ecx  +
mov [ebp-0B0h] edi +
test edi edi +
jz loc_104FB45  +
mov esi [ebx+3Ch] +
jmp loc_105D1C2  +
mov [edi] esi +
push esi  +
add edi 4 +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_105D1B2  +
push dword ptr [ebp-0A8h]  +
lea eax [ebx+14h] +
push dword ptr [ebp-0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push dword ptr [ebp-0B0h]  +
call sub_1002BCA  +
pop ecx  +
jmp loc_104FB45  +
***
test esi esi +
jz loc_1052A39  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+70h]  +
jmp loc_1052A39  +
***
mov esi [ebp+8] +
lea edi [esi+14h] +
cmp [edi] ebx +
jnz loc_105D22C  +
mov eax [esi+10h] +
mov ecx [eax] +
push edi  +
push offset dword_1003430  +
push eax  +
call dword ptr [ecx]  +
cmp eax ebx +
jl loc_10033F9  +
cmp [edi] ebx +
jz loc_1052BD9  +
lea eax [esi+8] +
jmp loc_10033EF  +
***
test al 1 +
jz loc_1039548  +
lea eax [ebp-18h] +
push eax  +
push esi  +
call ds:GetViewportOrgEx  +
lea eax [ebp+var_50] +
push eax  +
push esi  +
call ds:GetClipBox  +
mov eax [ebp+var_50.right] +
mov [ebp+var_8.x] eax +
mov eax [ebp+var_50.top] +
mov [ebp+var_8.y] eax +
push 1  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
call ds:LPtoDP  +
mov eax [ebp+arg_10] +
and eax 0FFFFFFFEh +
push eax  +
push esi  +
call ds:SetLayout  +
mov eax [ebp+var_8.x] +
push ebx  +
push [ebp+var_8.y]  +
inc eax  +
push eax  +
push esi  +
call edi  +
push [ebp+lParam]  +
push esi  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
push ebx  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-18h]  +
push esi  +
call edi  +
push [ebp+arg_10]  +
push esi  +
call ds:SetLayout  +
jmp loc_1039558  +
***
add eax ecx +
jmp loc_10331BD  +
***
mov eax [ebp+arg_0] +
jmp locret_1037403  +
***
mov eax [ebp+arg_0] +
jmp loc_10373AA  +
mov ecx edx +
jmp loc_10373B7  +
mov eax edx +
jmp locret_10373C4  +
***
mov eax 8007000Eh +
jmp loc_10418DC  +
***
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_101CD3E  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
jmp loc_1016E4E  +
mov eax [esi] +
lea ecx [ebp+var_10] +
push ecx  +
push esi  +
call dword ptr [eax+1Ch]  +
mov [ebp+var_8] ebx +
jmp loc_1016E6B  +
push edi  +
call sub_1002BEE  +
jmp loc_1016E81  +
***
push 0  +
push 0  +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventWrite  +
jmp loc_104C166  +
***
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push 0  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call SHBindToObject  +
mov esi eax +
jmp loc_104C214  +
***
mov [eax] ebx +
jmp loc_104C30C  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call SHBindToParent  +
jmp loc_104C3A0  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+arg_4]  +
push [ebp+var_18]  +
push [ebp+var_4]  +
call sub_107F92E  +
test eax eax +
jl loc_105D3B3  +
mov eax [ebp+arg_8] +
mov [ebp+var_10] 1 +
cmp eax ebx +
jz loc_105D39A  +
mov ecx [ebp+var_8] +
mov [eax] ecx +
cmp [ebp+arg_C] ebx +
mov ebx [ebp+var_20] +
jz loc_105D3AB  +
push ebx  +
push [ebp+arg_C]  +
call IUnknown_Set  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
xor ebx ebx +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_104C3AA  +
cmp [ebp+var_10] ebx +
jnz loc_104C3D2  +
mov esi 80004005h +
jmp loc_104C3D2  +
***
cmp eax 80070005h +
jnz loc_101AE0F  +
push ebx  +
push 1  +
push [ebp+DesiredAccess]  +
call esi  +
push eax  +
call edi  +
test eax eax +
jnz loc_101AE2B  +
call sub_101AE40  +
jmp loc_101AE0F  +
***
mov edi ds:__imp_GetLastError +
call edi  +
cmp eax 7Ah +
jnz loc_105D444  +
push [ebp+hMem]  +
call ds:LocalFree  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+uBytes]  +
call sub_101BB7F  +
mov ebx eax +
test ebx ebx +
jl loc_101BB6F  +
lea eax [ebp+uBytes] +
push eax  +
push [ebp+uBytes]  +
push [ebp+hMem]  +
push [ebp+TokenInformationClass]  +
push [ebp+TokenHandle]  +
call esi  +
test eax eax +
jnz loc_101BB4B  +
call edi  +
test eax eax +
jle loc_105D452  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_101BB4B  +
***
call sub_101AE40  +
mov edi eax +
jmp loc_101BBD2  +
***
test byte ptr [ebp+14h] 1 +
jnz loc_10264F4  +
call sub_106D629  +
jmp loc_10264F4  +
***
push edx  +
push edx  +
push [ebp+arg_0]  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EtwEventWrite  +
jmp locret_1025BDF  +
***
cmp ax 2Ch +
jz loc_10291FE  +
inc ebx  +
inc ebx  +
cmp [ebx] cx +
jmp loc_10291F6  +
push esi  +
push offset dword_1027CB8  +
call sub_1025B68  +
lea eax [ebp+hObject] +
push eax  +
push [ebp+var_220]  +
xor eax eax +
push eax  +
push eax  +
push [ebp+arg_4]  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
push esi  +
call sub_1025C75  +
test eax eax +
jge loc_105D51B  +
push offset aExplorer_exe_0  +
call ds:GetModuleHandleA  +
push esi  +
push 0  +
push edi  +
mov ebx eax +
call sub_1026899  +
test ebx ebx +
jz loc_105D510  +
push esi  +
push 1030h  +
push 20Ch  +
push 203h  +
push 0  +
push ebx  +
call ds:ShellMessageBoxW  +
add esp 18h +
mov ebx [ebp+var_210] +
jmp loc_1029216  +
push esi  +
push [ebp+hObject]  +
call ds:GetProcessId  +
push eax  +
push edi  +
call sub_1026899  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov [ebp+var_21C] 1 +
jmp loc_1029216  +
***
mov [ebp+var_20C] 1 +
jmp loc_1029039  +
cmp [ebp+pdwType] ebx +
jnz loc_102907D  +
mov esi offset aSoftwareMic_29 +
push esi  +
push edi  +
call sub_1025B68  +
push [ebp+var_218]  +
lea eax [ebp+pvData] +
push ebx  +
push eax  +
call sub_1029197  +
test eax eax +
jz loc_105D59D  +
mov [ebp+var_20C] ebx +
push esi  +
push offset dword_1025940  +
call sub_1025B68  +
jmp loc_102907D  +
***
mov eax 209h +
jmp loc_1030441  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cSubKeys] +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+phkResult]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jnz loc_105D64F  +
cmp [ebp+cSubKeys] esi +
setnz al  +
mov esi eax +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
jmp loc_103045B  +
***
mov [ebp+var_4] ebx +
jmp loc_10303B7  +
mov [ebp+var_4] ebx +
jmp loc_10303AE  +
***
push 0FFFFFFFFh  +
push [ebp+Handles]  +
push esi  +
call sub_106D7BD  +
jmp loc_10265F8  +
push edi  +
push esi  +
push offset dword_1026630  +
call sub_1026899  +
jmp loc_1026616  +
***
mov eax ebx +
and eax 2 +
push eax  +
push esi  +
call sub_1080BA1  +
jmp loc_1026583  +
***
lea eax [ebp+pv] +
push eax  +
push [ebp+Handles]  +
call sub_1080B37  +
mov esi eax +
jmp loc_1026525  +
push 0  +
call ds:SetTermsrvAppInstallMode  +
jmp loc_102653D  +
***
cmp [ebp+Type] 2 +
jz loc_10287E8  +
jmp loc_1028895  +
lea eax [ebp+Data] +
push eax  +
push esi  +
lea eax [ebp+var_2AC] +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_1028895  +
push esi  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+var_2AC] +
push eax  +
call ds:SHLWAPI_460  +
cmp eax edi +
jnz loc_10287C6  +
jmp loc_1028895  +
cmp [ebp+ValueName] 2Ah +
jz loc_1028805  +
jmp loc_1028895  +
mov [ebp+var_4C4] edi +
jmp loc_10262AA  +
push 1  +
push 0FFFFFFFFh  +
push [ebp+var_4C8]  +
push 0FFFFFFFFh  +
push offset aSoftwareMicr_4  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_1026316  +
push 100h  +
lea eax [ebp+var_2A4] +
push eax  +
push offset aFirstrequiresu  +
push offset aSoftwareMic_30  +
push ebx  +
call sub_103358D  +
jmp loc_1026316  +
lea eax [esi+208h] +
cmp word ptr [eax] 21h +
jz loc_1026342  +
push eax  +
push [ebp+phkResult]  +
call ds:RegDeleteValueW  +
test eax eax +
jz loc_1026342  +
push esi  +
call ds:LocalFree  +
jmp loc_1026386  +
push 1  +
push 0FFFFFFFFh  +
lea eax [ebp+var_2A4] +
push eax  +
push 0FFFFFFFFh  +
lea eax [esi+208h] +
push eax  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_102634F  +
push offset aShelldesktopsw  +
push 1  +
push 1  +
push edi  +
call ds:CreateEventW  +
mov edi eax +
test edi edi +
jz loc_105D7E6  +
push edi  +
call ds:SetEvent  +
push edi  +
call ds:CloseHandle  +
push offset aFirstrequiresu  +
push offset aSoftwareMic_30  +
push ebx  +
call ds:SHDeleteValueW  +
xor eax eax +
mov word ptr [ebp+var_2A4] ax +
jmp loc_102634F  +
cmp word ptr [edi] 21h +
jnz loc_102637D  +
push edi  +
push [ebp+phkResult]  +
call ds:RegDeleteValueW  +
jmp loc_102637D  +
***
push 0  +
push offset loc_10868E9  +
call sub_100831C  +
push dword ptr [esi]  +
call ds:off_1008340  +
and dword ptr [esi] 0 +
jmp loc_1015802  +
***
call sub_100D5EC  +
test al al +
jnz loc_10190B8  +
mov ecx esi +
pop esi  +
jmp sub_10157F3  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp dword_10B2138 eax +
jmp loc_103A0EC  +
***
push dword ptr [esi+38h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1039E13  +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push offset aStart_notifyne  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
test eax eax +
jz loc_105D954  +
dec dword ptr [esi+88h]  +
and [ebp+var_C] 0 +
push 3  +
lea eax [ebp+var_10] +
push eax  +
push 0  +
mov [esi+90h] edi +
mov esi [esi+38h] +
push 4Eh  +
push esi  +
mov [ebp+var_10] esi +
mov [ebp+var_8] 0D9h +
mov [ebp+var_4] edi +
call ds:SHLWAPI_178  +
pop edi  +
jmp loc_1039E13  +
***
xor eax eax +
inc eax  +
jmp loc_103D65E  +
push 0  +
push 0  +
push 41Ch  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp esi 1 +
jnz loc_105D980  +
mov ecx ebx +
call sub_1042A6E  +
xor eax eax +
inc eax  +
jmp loc_103D65D  +
***
test eax eax +
jz loc_104D37E  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+38h]  +
call ds:GetWindowRect  +
test eax eax +
jz loc_104D37E  +
lea eax [ebp+pt] +
push eax  +
call ds:GetCursorPos  +
test eax eax +
jz loc_104D37E  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_104D37E  +
inc ebx  +
inc dword ptr [esi+0A8h]  +
jmp loc_104D37E  +
dec dword ptr [esi+0A8h]  +
jmp loc_104D392  +
***
xor eax eax +
pop esi  +
retn   +
***
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_104D39E  +
jmp loc_1002260  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+24Ch]  +
jmp loc_1036968  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+184h]  +
jmp loc_1036968  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+15Ch]  +
jmp loc_1036968  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+224h]  +
jmp loc_1036968  +
***
mov eax [ebp+0Ch] +
jmp loc_10128D9  +
***
push 0FFFFFFECh  +
push dword ptr [esi+38h]  +
call ds:GetWindowLongW  +
mov [ebp+var_4] 1 +
test eax 80000h +
jz loc_1037BAD  +
jmp loc_1037BB0  +
cmp [ebp+var_8] ebx +
jz loc_1037BE8  +
cmp [ebp+arg_4] ebx +
jz loc_1037BE8  +
mov [ebp+rcSrc2.left] eax +
mov [ebp+rcSrc2.top] eax +
lea eax [ebp+rcSrc2] +
push eax  +
push dword ptr [esi+38h]  +
mov [ebp+rcSrc2.right] ebx +
mov [ebp+rcSrc2.bottom] ebx +
call ds:DwmEnableBlurBehindWindow  +
jmp loc_1037BE8  +
cmp [ebp+var_8] ebx +
jnz loc_1037C11  +
cmp [ebp+arg_4] ebx +
jz loc_105DACA  +
push dword ptr [esi+38h]  +
call ds:UpdateWindow  +
call ds:GdiFlush  +
jmp loc_1037C08  +
mov eax [ebp+rcSrc1.right] +
sub eax [ebp+rcSrc1.left] +
cmp eax [edi] +
jg loc_105DAE3  +
mov eax [ebp+rcSrc1.bottom] +
sub eax [ebp+rcSrc1.top] +
cmp eax [edi+4] +
jle loc_1037C11  +
mov eax [esi+6D4h] +
imul eax eax +
add eax esi +
lea ecx [eax+270h] +
mov edx [ecx] +
mov [ebp+rcSrc2.left] edx +
lea edx [eax+274h] +
mov edi [edx] +
mov [ebp+rcSrc2.top] edi +
mov edi [eax+268h] +
add edi [ecx] +
mov [ebp+rcSrc2.right] edi +
mov eax [eax+26Ch] +
add eax [edx] +
mov [ebp+rcSrc2.bottom] eax +
lea eax [ebp+rcSrc2] +
cmp [esi+0B4h] ebx +
jnz loc_105DB5E  +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
lea eax [ebp+rcUpdate] +
push eax  +
call ds:SubtractRect  +
test eax eax +
jz loc_1037C11  +
push 485h  +
push ebx  +
lea eax [ebp+rcUpdate] +
push eax  +
push dword ptr [esi+38h]  +
call ds:GetParent  +
push eax  +
call ds:RedrawWindow  +
jmp loc_1037C11  +
mov edi ds:RedrawWindow +
mov ebx 485h +
push ebx  +
push 0  +
push eax  +
push dword ptr [esi+38h]  +
call edi  +
push ebx  +
push 0  +
lea eax [ebp+rcSrc1] +
push eax  +
push dword ptr [esi+38h]  +
call ds:GetParent  +
push eax  +
call edi  +
jmp loc_1037C11  +
***
cmp [ebp+hMenu] 6 +
jnz loc_105DB96  +
or ebx 8000000h +
cmp [ebp+hMenu] 2 +
jnz loc_10172CE  +
or ebx 10000h +
jmp loc_10172CE  +
***
mov eax [esi+44h] +
push eax  +
mov [esi+44h] edi +
call ds:SetFocus  +
mov edi eax +
jmp loc_103B261  +
***
push eax  +
call ds:DestroyWindow  +
and dword ptr [esi] 0 +
jmp loc_103D23A  +
***
mov ecx [esi+6D4h] +
mov eax [esi+6B4h] +
imul ecx ecx +
sub eax [ecx+esi+268h] +
cmp dword_10B2138 0 +
jnz loc_105DBF2  +
neg eax  +
push 0  +
push eax  +
push edi  +
call ds:OffsetRgn  +
jmp loc_10379FE  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+38h]  +
call ds:GetClientRect  +
lea eax [ebp+Rect] +
push eax  +
call ebx  +
mov edi eax +
jmp loc_10379FE  +
***
fld1   +
fsub  [ebp+arg_8] +
fimul  [ebp+arg_0] +
fild  [ebp+arg_4] +
fmul  [ebp+arg_8] +
faddp st(1) st +
fadd  ds:dbl_1041540 +
call _ftol2_sse  +
jmp loc_104136B  +
***
push 2047h  +
jmp loc_103B007  +
mov ecx [ebp+var_4] +
imul ecx ecx +
add ecx [ebp+var_10] +
lea esi dword_103B150[eax] +
imul ecx ecx +
lea edi [ecx+ebx+278h] +
jmp loc_103A875  +
***
and [ebp+rcSrc1.left] 0 +
xor eax eax +
lea edi [ebp+rcSrc1.top] +
stos   +
stos   +
push 0  +
stos   +
push ecx  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1037B2A  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
push eax  +
call ebx  +
push 9  +
push dword ptr [esi+6D4h]  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1037B2A  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
push eax  +
call ebx  +
push 8  +
push dword ptr [esi+6D4h]  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
call sub_1037B2A  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
push eax  +
call ebx  +
push 0  +
push 0Ah  +
jmp loc_1037861  +
***
push ecx  +
push ecx  +
push ecx  +
push 14Ch  +
push offset dword_1013948  +
push offset dword_1036958  +
lea eax [esi+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
jmp loc_1038257  +
push ebx  +
mov [ebp+var_C] ebx +
call ds:GetDlgCtrlID  +
lea ecx [ebp+var_C] +
push ecx  +
push eax  +
push 4Eh  +
push dword ptr [esi+118h]  +
mov [ebp+var_8] eax +
mov [ebp+var_4] 0FFFFFFF8h +
call ds:SendMessageW  +
jmp loc_103C221  +
mov eax [esi+48h] +
cmp eax [esi+118h] +
jz loc_105DD31  +
cmp eax [esi+1B8h] +
jnz loc_103827E  +
push eax  +
mov ecx esi +
call sub_1040FCB  +
mov eax [esi+1E0h] +
mov [esi+48h] eax +
jmp loc_103827E  +
push eax  +
mov ecx esi +
call sub_1040FCB  +
jmp loc_103828D  +
or [ebp+var_8] 20000h +
jmp loc_103C8A2  +
***
push 100h  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov ecx edi +
mov [ebp+var_1C] esi +
call sub_1089FEF  +
test eax eax +
jz loc_104B71D  +
xor eax eax +
inc eax  +
jmp loc_104B71F  +
***
push ecx  +
push eax  +
call ds:IsChild  +
jmp loc_10413A5  +
or [ebp+EventTrack.dwHoverTime] 0FFFFFFFFh +
jmp loc_103C85F  +
***
push dword ptr [esi+258h]  +
call ds:SetFocus  +
pop esi  +
retn   +
push dword ptr [esi+48h]  +
call sub_1040FCB  +
pop esi  +
retn   +
***
mov dword ptr [esi+6D4h] 1 +
jmp loc_1037591  +
imul eax eax +
add eax esi +
mov ecx [eax+270h] +
mov [ebp+var_10] ecx +
mov ecx [eax+274h] +
mov [ebp+var_C] ecx +
mov ecx [eax+268h] +
mov eax [eax+26Ch] +
mov [ebp+var_8] ecx +
jmp loc_10375CA  +
mov eax [esi+40h] +
cmp eax edi +
jnz loc_105DDFC  +
xor edx edx +
jmp loc_105DE14  +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
push 0E12h  +
push edi  +
push 0Fh  +
push edi  +
push eax  +
call ds:GetThemeMargins  +
mov edx [ebp+var_C] +
mov eax [esi+6D4h] +
imul eax eax +
lea ecx [eax+esi] +
mov eax [ecx+2F8h] +
sub eax edx +
add [ecx+2BCh] eax +
mov ecx [esi+6D4h] +
imul ecx ecx +
lea ecx [ecx+esi+2A8h] +
add [ecx] eax +
mov ecx [esi+6D4h] +
imul ecx ecx +
lea ecx [ecx+esi+2D8h] +
add [ecx] eax +
mov ecx [esi+6D4h] +
imul ecx ecx +
lea ecx [ecx+esi+300h] +
add [ecx] eax +
mov eax [esi+6D4h] +
imul eax eax +
mov [eax+esi+2F8h] edx +
jmp loc_10375F8  +
***
mov ecx esi +
call sub_1089C8D  +
jmp loc_103E256  +
***
mov eax ebx +
jmp loc_104CEEF  +
push 2  +
pop eax  +
jmp loc_104CEEF  +
mov eax [ebp+var_18] +
shr eax 0Ch +
not eax  +
and eax 2 +
jmp loc_104CEEC  +
mov ecx [ebp+var_28] +
cmp ecx [esi+5Ch] +
jnz loc_104CF2E  +
jmp loc_104CF5E  +
mov [ebp+uElapse] edi +
jmp loc_104CF4F  +
cmp [edi+4] ebx +
jnz loc_104D1EF  +
push 406h  +
lea ecx [ebp+var_60] +
push ecx  +
push eax  +
mov ecx esi +
call sub_10381F8  +
jmp loc_104D1EF  +
mov ecx esi +
call sub_1043273  +
and [ebp+var_8] 0 +
jmp loc_104D654  +
mov edi [edi+4] +
cmp edi 201h +
jz loc_105DF12  +
cmp edi 204h +
jnz loc_104CF5E  +
mov ecx esi +
call sub_1043273  +
jmp loc_104D1EF  +
***
push offset aShowinfotip  +
call sub_1089B4E  +
test eax eax +
jnz loc_104D07D  +
mov eax 80004005h +
jmp loc_104D098  +
***
mov ebx eax +
jmp loc_103AA43  +
mov [ebp+var_4] edx +
jmp loc_103AB53  +
add ebx [ebp+var_8] +
xor eax eax +
xor ecx ecx +
mov [ebp+var_4C] ecx +
lea edi [ebp+var_48] +
stos   +
stos   +
stos   +
mov eax [esi+40h] +
mov dword ptr [esi+0A4h] 1 +
cmp eax ecx +
jz loc_105DF9E  +
lea edx [ebp+var_4C] +
push edx  +
push ecx  +
push 0E12h  +
push ecx  +
push 6  +
push ecx  +
push eax  +
call ds:GetThemeMargins  +
mov eax [ebp+var_44] +
jmp loc_105DFA8  +
push 2Dh  +
call ds:GetSystemMetrics  +
add eax eax +
mov ecx [esi+3FCh] +
sub ebx ecx +
sub ebx eax +
mov [ebp+arg_4] eax +
mov [esi+35Ch] eax +
mov eax ebx +
cmp [ebp+arg_0] eax +
jle loc_103AB5C  +
mov [ebp+arg_0] ebx +
jmp loc_103AB5C  +
mov eax [ebp+var_C] +
jmp loc_103AB65  +
mov edx edi +
jmp loc_103AB73  +
mov edi eax +
jmp loc_103AB83  +
mov edi ds:GetWindowLongW +
push 0FFFFFFF0h  +
push dword ptr [esi+38h]  +
call edi  +
push 0FFFFFFECh  +
push dword ptr [esi+38h]  +
mov [ebp+dwStyle] eax +
call edi  +
push eax  +
push 0  +
push [ebp+dwStyle]  +
lea eax [ebp+Rect] +
push eax  +
call ds:AdjustWindowRectEx  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
add [ebp+var_24] eax +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
add [ebp+var_4] eax +
mov eax [ebp+var_4] +
jmp loc_103AC5A  +
mov ecx [ebp+var_24] +
jmp loc_103AC69  +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_4C] ax +
xor eax eax +
push ebx  +
mov word ptr [ebp+var_44] ax +
lea eax [ebp+var_4C] +
push eax  +
push ebx  +
push 143h  +
push offset dword_1013948  +
push offset loc_10362A8  +
lea eax [esi+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
jmp loc_103ADA8  +
***
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_104191B  +
cmp ecx edi +
jnz loc_104191B  +
push offset dword_105E240  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_104191B  +
push 1  +
call sub_1041A75  +
jmp loc_104192B  +
cmp dword_10B2138 edi +
jnz loc_105E0B7  +
inc edi  +
jmp loc_1041984  +
xor esi esi +
inc esi  +
jmp loc_1041984  +
xor edi edi +
inc edi  +
mov esi edi +
jmp loc_1041984  +
mov eax [ebx+708h] +
fld  [ebp+arg_0] +
imul eax eax +
lea eax [eax+ebx+268h] +
push eax  +
push ecx  +
push ecx  +
lea eax [ebx+724h] +
mov ecx ebx +
fstp  [esp+34h+var_34] +
push eax  +
mov eax [ebx+704h] +
imul eax eax +
lea eax [eax+ebx+268h] +
push eax  +
call sub_104157C  +
mov eax [ebx+704h] +
mov ecx [ebx+708h] +
imul eax eax +
mov eax [eax+ebx+268h] +
imul ecx ecx +
mov [ecx+ebx+268h] eax +
mov eax [ebx+704h] +
mov ecx [ebx+708h] +
imul eax eax +
mov eax [eax+ebx+26Ch] +
imul ecx ecx +
mov [ecx+ebx+26Ch] eax +
mov eax [ebx+704h] +
push 3  +
pop ecx  +
cmp eax ecx +
jz loc_105E17B  +
cmp [ebx+708h] ecx +
jnz loc_105E17B  +
imul eax eax +
mov eax [eax+ebx+308h] +
mov [ebx+5C4h] eax +
cmp [ebx+704h] ecx +
jnz loc_10419E6  +
mov eax [ebx+708h] +
cmp eax ecx +
jz loc_105E1A4  +
mov edx [ebx+59Ch] +
imul eax eax +
mov [eax+ebx+308h] edx +
cmp [ebx+704h] ecx +
jnz loc_10419E6  +
cmp dword ptr [ebx+708h] 2 +
jnz loc_10419E6  +
mov eax [ebx+4FCh] +
mov [ebx+448h] eax +
mov eax [ebx+704h] +
mov ecx [ebx+708h] +
imul eax eax +
mov eax [eax+ebx+268h] +
imul ecx ecx +
mov [ecx+ebx+2E0h] eax +
jmp loc_10419E6  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_10412C5  +
cmp ecx edi +
jnz loc_10412C5  +
push dword ptr [ebx+710h]  +
push offset dword_105E250  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
jmp loc_10412C5  +
***
fld1   +
push ecx  +
push ecx  +
fstp  [esp+14h+var_14] +
mov ecx ebx +
call sub_10411BF  +
jmp loc_1037C57  +
cmp dword_10B24CC esi +
jz loc_1040C14  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105E290  +
test al al +
jnz loc_1040C14  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1040C14  +
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_105E2E3  +
cmp edx edi +
jnz loc_105E2E3  +
push offset dword_105E2F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
jmp loc_1040C14  +
push 247h  +
push offset dword_105E308  +
jmp loc_104BC7E  +
***
push 580h  +
push hWnd  +
call ds:SendMessageW  +
jmp loc_103D2EF  +
***
mov eax [eax+4] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_103D334  +
push ebx  +
push ebx  +
push 40Dh  +
mov [eax] ebx +
push hWnd  +
call ds:PostMessageW  +
jmp loc_103467D  +
***
dec dword ptr [esi]  +
jnz loc_104DC80  +
push 1  +
mov ecx esi +
call sub_104D453  +
jmp loc_104DC80  +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_105E38D  +
mov ecx [eax] +
mov eax [eax+4] +
mov [ebp+rcSrc.right] ecx +
mov [ebp+rcSrc.left] ecx +
mov [ebp+rcSrc.bottom] eax +
mov [ebp+rcSrc.top] eax +
jmp loc_103AE98  +
lea eax [edi+74h] +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call ebx  +
jmp loc_103AE98  +
mov eax [esi] +
cdq   +
sub eax edx +
mov edx eax +
mov eax [ebp+rcSrc.left] +
sar edx 1 +
sub eax edx +
jmp loc_103AF3C  +
mov eax [ebp+mi.rcMonitor.right] +
sub eax [esi] +
jmp loc_103AF52  +
cmp dword ptr [edi+0B4h] 0 +
jnz loc_105E3CE  +
lea edx [eax+ecx] +
cmp edx [ebp+mi.rcMonitor.top] +
jl loc_105E3CE  +
mov ecx edx +
jmp loc_105E409  +
lea edx [ebx+ecx] +
mov ecx [ebp+mi.rcMonitor.bottom] +
cmp edx ecx +
jg loc_105E3E0  +
mov ecx [ebp+rcSrc.bottom] +
jmp loc_103AF2C  +
mov edx [edi+0B4h] +
test edx edx +
jnz loc_105E3F3  +
mov edx [ebp+rcSrc.top] +
add ebx edx +
cmp ebx ecx +
jle loc_105E3CA  +
mov edx [ebp+rcSrc.top] +
sub edx [ebp+mi.rcMonitor.top] +
mov ebx ecx +
sub ebx [ebp+rcSrc.bottom] +
cmp edx ebx +
jge loc_105E407  +
mov ecx [ebp+mi.rcMonitor.top] +
jmp loc_105E409  +
add ecx eax +
mov eax [ebp+rcSrc.right] +
jmp loc_103AF2F  +
sub ecx ebx +
jmp loc_105E418  +
mov ecx [ebp+rcSrc.top] +
cmp [ebp+arg_8] 60000000h +
jnz loc_105E426  +
mov eax [ebp+rcSrc.right] +
jmp loc_105E42B  +
mov eax [ebp+rcSrc.left] +
sub eax edx +
lea edx [ebx+ecx] +
cmp edx [ebp+mi.rcMonitor.bottom] +
jle loc_105E438  +
mov ecx [ebp+mi.rcMonitor.bottom] +
sub ecx ebx +
cmp ecx [ebp+mi.rcMonitor.top] +
jge loc_105E440  +
mov ecx [ebp+mi.rcMonitor.top] +
mov edx [esi] +
add edx eax +
cmp edx [ebp+mi.rcMonitor.right] +
jle loc_103AF49  +
mov eax [ebp+mi.rcMonitor.right] +
sub eax [esi] +
jmp loc_103AF49  +
mov eax [ebp+mi.rcMonitor.left] +
jmp loc_103AF52  +
cmp dword ptr [edi+40h] 0 +
jz loc_103AFBD  +
and [ebp+arg_0] 0 +
lea ecx [edi+340h] +
cmp [ebp+arg_0] 4 +
jz loc_105E49C  +
mov eax [edi+6B4h] +
sub eax [ecx-0D8h] +
test eax eax +
jle loc_105E49C  +
push 0Ah  +
mov [ecx] eax +
lea edx [ecx-0BCh] +
pop esi  +
add [edx] eax +
add edx 14h +
dec esi  +
jnz loc_105E494  +
inc [ebp+arg_0]  +
add ecx ebx +
cmp [ebp+arg_0] 5 +
jnb loc_103AFBD  +
jmp loc_105E473  +
***
push 1  +
push dword ptr [esi+6DCh]  +
mov ecx esi +
call sub_1037C30  +
cmp [ebp+arg_C] ebx +
jz loc_1039BCA  +
push 5Fh  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [esi+38h]  +
call ds:SetWindowPos  +
push 485h  +
push ebx  +
push ebx  +
push dword ptr [esi+38h]  +
call ds:RedrawWindow  +
push dword ptr [esi+38h]  +
call ds:UpdateWindow  +
call ds:GdiFlush  +
jmp loc_1039BCA  +
push ebx  +
push 0FFFFFFFCh  +
push dword ptr [esi+38h]  +
push 6  +
call ds:NotifyWinEvent  +
jmp loc_1039C8E  +
***
mov dword ptr [esi+0B8h] 1 +
jmp loc_103BAB3  +
and dword ptr [eax] 0 +
jmp loc_103BA09  +
mov ecx esi +
call sub_103872C  +
test eax eax +
jz loc_103BAB3  +
mov edi [esi+48h] +
push edi  +
push ebx  +
mov ecx esi +
mov [ebp+hWnd] edi +
call sub_108A04C  +
jmp loc_103BAB3  +
lea eax [esi+0B8h] +
cmp dword ptr [eax] 0 +
jz loc_105E554  +
and dword ptr [eax] 0 +
push edi  +
push ebx  +
mov ecx esi +
call sub_103C1AA  +
test eax eax +
jnz loc_105E574  +
push 40000020h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jz loc_103BAB3  +
movsx eax word ptr [ebx+0Ch] +
mov [ebp+Points.x] eax +
movsx eax word ptr [ebx+0Eh] +
push 1  +
mov [ebp+Points.y] eax +
lea eax [ebp+Points] +
push eax  +
push dword ptr [esi+38h]  +
push dword ptr [ebx]  +
call ds:MapWindowPoints  +
movzx eax word ptr [ebp+Points.y] +
movzx ecx word ptr [ebp+Points.x] +
shl eax 10h +
or eax ecx +
mov [ebx+0Ch] eax +
mov eax [esi+38h] +
mov [ebx] eax +
jmp loc_103BAB3  +
push ebx  +
call ds:TranslateMessage  +
push ebx  +
call ds:DispatchMessageW  +
jmp loc_103BA09  +
jz loc_105E6BF  +
cmp eax 3 +
jz loc_105E5E2  +
cmp eax 9 +
jz loc_105E69E  +
cmp eax 0Dh +
jz loc_105E656  +
cmp eax 1Bh +
jnz loc_104B769  +
mov edi ds:SHLWAPI_484 +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_20] ax +
or eax 0FFFFFFFFh +
mov word ptr [ebp+var_18] ax +
lea eax [ebp+var_20] +
push eax  +
push 0  +
push 0  +
push 133h  +
mov ebx offset dword_1013948 +
push ebx  +
push offset dword_1036948  +
lea eax [esi+14h] +
push eax  +
call edi  +
xor ecx ecx +
cmp word ptr [ebp+var_18] cx +
jz loc_105E6B7  +
mov eax [esi+6DCh] +
push ecx  +
mov ecx esi +
cmp [esi+6D4h] eax +
jz loc_105E6AB  +
push eax  +
call sub_1037C30  +
mov ecx esi +
call sub_10502DB  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push 136h  +
push ebx  +
push offset dword_10128F0  +
lea eax [esi+0Ch] +
push eax  +
call edi  +
jmp loc_105E6B7  +
mov ecx esi +
call sub_1036E39  +
push [ebp+hWnd]  +
mov [ebp+var_4C] ebx +
push dword ptr [esi+1B8h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
push 406h  +
lea eax [ebp+lParam] +
mov ecx esi +
push eax  +
jnz loc_105E686  +
push dword ptr [esi+1E0h]  +
jmp loc_105E689  +
push [ebp+hWnd]  +
call sub_10381F8  +
mov edi [ebp+var_38] +
shr edi 0Ch +
not edi  +
and edi 1 +
jmp loc_104B769  +
push ebx  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_1089D6F  +
jmp loc_105E711  +
call sub_10345FD  +
mov ecx esi +
call sub_1089C8D  +
xor edi edi +
inc edi  +
jmp loc_104B769  +
mov ecx esi +
call sub_103872C  +
test eax eax +
jnz loc_104B769  +
push 40Ah  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov ecx esi +
mov [ebp+var_4C] ebx +
call sub_10381F8  +
mov edi eax +
neg edi  +
sbb edi edi +
neg edi  +
jmp loc_104B769  +
mov ecx esi +
call sub_1089CAE  +
push 0  +
mov ecx esi +
call sub_103E223  +
jmp loc_104B769  +
push ebx  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_1089DCF  +
mov edi eax +
jmp loc_104B769  +
call sub_1089784  +
jmp loc_104B78B  +
mov eax [esi+48h] +
test eax eax +
jz loc_105E745  +
push eax  +
push dword ptr [esi+1E0h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jz loc_105E745  +
mov eax [esi+48h] +
test eax eax +
jz loc_105E77B  +
mov [ebx] eax +
jmp loc_105E77B  +
mov eax 4000h +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push 0  +
push 14Ah  +
push offset dword_1013948  +
push offset dword_10128F0  +
lea eax [esi+0Ch] +
push eax  +
mov [ebp+Points.x] ebx +
call ds:SHLWAPI_484  +
mov ecx esi +
call sub_1036E39  +
jmp loc_1001FDD  +
***
push 0  +
push 0FFFFFFEBh  +
push eax  +
call ds:SetWindowLongW  +
jmp loc_1019148  +
push 1  +
call sub_1041A75  +
jmp loc_1019156  +
***
dec ecx  +
jz loc_103E278  +
dec ecx  +
jnz loc_1036E2F  +
push esi  +
mov esi [ebp+arg_0] +
lea ecx [esi-8] +
call sub_1043273  +
mov eax [esi+30h] +
push 3  +
lea ecx [ebp+var_C] +
push ecx  +
push edi  +
push 4Eh  +
push eax  +
mov [ebp+var_C] eax +
mov [ebp+var_8] edi +
mov [ebp+var_4] 0E0h +
call ds:SHLWAPI_178  +
pop esi  +
jmp loc_1036E2D  +
***
mov eax [eax+4] +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_104DEE6  +
lea ebx [edi+68h] +
mov eax [ebx] +
mov [ebp+var_4] 1 +
test eax eax +
jz loc_105E816  +
push dword ptr [esi+0Ch]  +
push dword ptr [eax+0Ch]  +
call sub_107FA57  +
test eax eax +
jz loc_105E816  +
xor eax eax +
jmp loc_105E83B  +
push ebx  +
call sub_1015B1D  +
push dword ptr [esi+0Ch]  +
mov ecx edi +
call sub_104DB87  +
push ebx  +
push dword ptr [edi+38h]  +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_104DC3E  +
test eax eax +
jl loc_104DF83  +
mov ebx [ebx] +
mov [edi+6Ch] ebx +
inc dword ptr [ebx]  +
jmp loc_104DF16  +
cmp dword_10B24CC ebx +
jz loc_104DF6E  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105E864  +
test al al +
jnz loc_104DF6E  +
mov ecx dword_10B24B8 +
mov edx dword_10B24BC +
mov eax 10000h +
mov esi 80080000h +
and ecx eax +
and edx esi +
or ecx edx +
jz loc_104DF6E  +
mov ecx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edx ecx +
and edx eax +
mov eax ebx +
and eax esi +
cmp edx ecx +
jnz loc_104DF6E  +
cmp eax ebx +
jnz loc_104DF6E  +
push offset dword_10426A8  +
jmp loc_105E8DA  +
mov ecx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edx ecx +
and edx eax +
mov eax ebx +
and eax esi +
cmp edx ecx +
jnz loc_104DF6E  +
cmp eax ebx +
jnz loc_104DF6E  +
push offset dword_105E8F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_104DF6E  +
***
push [ebp+arg_0]  +
call sub_1002BEE  +
push [ebp+arg_4]  +
call sub_1002BEE  +
push [ebp+arg_C]  +
call sub_1002BEE  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
jmp loc_1018A8A  +
***
mov eax [ebp+var_C] +
jmp loc_100DF67  +
push 1  +
mov ecx esi +
call sub_10345FD  +
jmp loc_10146A9  +
cmp eax ebx +
jmp loc_104DE31  +
***
mov eax [ebp+Msg] +
and eax 0FFF0h +
cmp eax 0F140h +
jmp loc_104DE31  +
***
mov eax [edi+0Ch] +
mov [esi+98h] eax +
jmp loc_100DF55  +
***
mov ecx esi +
call sub_108974A  +
jmp loc_100DF67  +
mov dword ptr [eax] 3 +
jmp loc_100DF55  +
mov dword ptr [eax] 2 +
jmp loc_100DF55  +
***
mov ebx 400080h +
jmp loc_1017594  +
mov eax 86400000h +
jmp loc_10175BF  +
***
lea ecx [esi-8] +
call sub_1017507  +
mov [esi+30h] eax +
jmp loc_1039AC0  +
***
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:CreateCompatibleBitmap  +
jmp locret_10393D0  +
***
push edi  +
call ds:GetLayout  +
mov edi ds:SetLayout +
push 1  +
push [ebp+var_4]  +
mov ebx eax +
call edi  +
mov eax [esi] +
lea ecx [ebp+Rect] +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
push [ebp+hWnd]  +
call dword ptr [eax]  +
cmp ebx 0FFFFFFFFh +
jz loc_105E9EB  +
push ebx  +
push [ebp+var_4]  +
call edi  +
xor ebx ebx +
jmp loc_1037F71  +
***
push 1  +
push ebx  +
call ds:SetLayout  +
jmp loc_10417D1  +
***
push esi  +
call sub_1002BEE  +
jmp loc_10531BC  +
***
push [ebp+arg_8]  +
mov ecx esi +
call sub_108A85E  +
jmp loc_104145F  +
mov eax [esi+18h] +
mov ecx eax +
sub ecx [esi+30h] +
mov [ebp+var_8] ecx +
jmp loc_1041470  +
***
push edi  +
call ds:VariantInit  +
jmp loc_103D21A  +
***
lea eax [ebp+var_4] +
push eax  +
push offset aMaxentries  +
push offset aSoftwareMicr_7  +
push 80000001h  +
call sub_100F656  +
test eax eax +
jl loc_105EA7D  +
mov esi [ebp+var_4] +
test esi esi +
jg loc_105EA5B  +
xor esi esi +
cmp dword ptr [edi+0CCh] 0 +
jz loc_105026E  +
mov eax esi +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
mov esi eax +
jmp loc_105026E  +
push 3Ch  +
push 0  +
push 0Ah  +
push offset aStart_jumplist  +
call sub_1037379  +
mov esi eax +
add esi 4 +
jmp loc_105026E  +
***
push [ebp+arg_0]  +
call sub_103A479  +
jmp loc_103A46F  +
***
cmp dword ptr [esi+204h] 0 +
jz loc_105012F  +
test ecx ecx +
jz loc_105012D  +
mov eax [esi+204h] +
test eax eax +
jz loc_105012D  +
push eax  +
push ecx  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_105012F  +
jmp loc_105012D  +
***
push edi  +
cmp [ebx+80h] esi +
jnz loc_105EBC8  +
lea eax [ebx+1E0h] +
cmp [eax] esi +
jz loc_105EBC8  +
mov [eax] esi +
cmp [ebx+84h] esi +
jz loc_105EB62  +
cmp dword_10B24CC esi +
jz loc_105EBC8  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105EB1E  +
test al al +
jnz loc_105EBC8  +
mov eax dword_10B24B8 +
mov esi dword_10B24BC +
mov edx 2010000h +
mov ecx 80010000h +
and eax edx +
and esi ecx +
or eax esi +
jz loc_105EBC8  +
mov esi dword_10B24C0 +
mov edi dword_10B24C4 +
mov eax esi +
and eax edx +
mov edx edi +
and edx ecx +
cmp eax esi +
jnz loc_105EBC8  +
cmp edx edi +
jnz loc_105EBC8  +
push offset dword_105ECE0  +
jmp loc_105EBB7  +
cmp dword_10B24CC esi +
jz loc_105EBC8  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105EB77  +
test al al +
jnz loc_105EBC8  +
mov eax dword_10B24B8 +
mov esi dword_10B24BC +
mov edx 2010000h +
mov ecx 80010000h +
and eax edx +
and esi ecx +
or eax esi +
jz loc_105EBC8  +
mov esi dword_10B24C0 +
mov eax esi +
and eax edx +
mov edx dword_10B24C4 +
and edx ecx +
cmp eax esi +
jnz loc_105EBC8  +
cmp edx dword_10B24C4 +
jnz loc_105EBC8  +
push offset dword_105ECF0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor eax eax +
mov edi 10000h +
mov esi 80000000h +
cmp [ebx+84h] eax +
jz loc_105EC41  +
cmp [ebx+80h] eax +
jz loc_105EC41  +
cmp dword_10B24CC eax +
jz loc_105EC41  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105EBF9  +
test al al +
jnz loc_105EC41  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_105EC41  +
mov eax dword_10B24C0 +
mov ecx dword_10B24C4 +
and eax edi +
and ecx esi +
cmp eax dword_10B24C0 +
jnz loc_105EC41  +
cmp ecx dword_10B24C4 +
jnz loc_105EC41  +
push offset dword_105ECC0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor eax eax +
cmp [ebx+84h] eax +
jnz loc_105ECB5  +
cmp [ebx+80h] eax +
jnz loc_105ECB5  +
cmp [ebx+1E4h] eax +
jz loc_105ECB5  +
cmp dword_10B24CC eax +
jz loc_105ECB5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105EC70  +
test al al +
jnz loc_105ECB5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_105ECB5  +
mov edx dword_10B24C0 +
mov eax edx +
and eax edi +
mov edi dword_10B24C4 +
mov ecx edi +
and ecx esi +
cmp eax edx +
jnz loc_105ECB5  +
cmp ecx edi +
jnz loc_105ECB5  +
push offset dword_105ECD0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
jmp loc_105017E  +
***
push eax  +
sub esp 10h +
mov edi esp +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_103C6A7  +
mov edi eax +
jmp loc_1042D3C  +
***
lea ecx [ebp-8] +
push ecx  +
push eax  +
call sub_108C27C  +
test eax eax +
jl loc_10501CF  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi+22Ch]  +
push dword ptr [esi+230h]  +
call sub_108C1C9  +
test eax eax +
jl loc_105EDAE  +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp-8]  +
mov ecx esi +
mov [ebp-0Ch] ebx +
call sub_108BCD7  +
mov edi [ebp-10h] +
push ebx  +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp-4]  +
mov ecx esi +
push 1  +
push ebx  +
push edi  +
push dword ptr [ebp+8]  +
call sub_108DCA8  +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-34h] +
push eax  +
push edi  +
push dword ptr [ebp-8]  +
mov ecx esi +
push dword ptr [ebp+8]  +
call sub_108E07E  +
mov eax [ebp-0Ch] +
add [ebp-4] eax +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp-8]  +
mov ecx esi +
push dword ptr [ebp+8]  +
call sub_108DFC4  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [ebp-8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10501CF  +
***
xor eax eax +
cmp eax edi +
sbb eax eax +
neg eax  +
push eax  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_108D2A5  +
push dword ptr [esi+250h]  +
mov ecx esi +
add edi eax +
call sub_108F9EA  +
jmp loc_10501ED  +
***
push offset dword_10688D0  +
call sub_1008600  +
test al al +
jz loc_1050202  +
push dword ptr [esi+22Ch]  +
call ds:__imp_PathFindFileNameW  +
mov [ebp+8] eax +
cmp eax ebx +
jz loc_1050202  +
push 3Ch  +
push ebx  +
push 0Ah  +
push offset aStart_jumplist  +
call sub_1037379  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-34h]  +
push eax  +
push dword ptr [esi+230h]  +
push dword ptr [ebp+8]  +
call sub_106E3EC  +
jmp loc_1050202  +
***
mov [ebp+var_4] eax +
jmp loc_1012B24  +
mov [esi+158h] edi +
mov [esi+160h] edx +
mov [eax] ecx +
jmp loc_1012BA0  +
mov ecx [esi+60h] +
mov eax ecx +
cdq   +
push 3  +
pop edi  +
idiv  edi +
add eax ecx +
mov [esi+60h] eax +
jmp loc_1012BAC  +
***
xor eax eax +
jmp loc_10102E6  +
***
test [esi+10h] ecx +
jnz loc_1010248  +
mov edx [ebp+0Ch] +
test [edx+20h] al +
jz loc_105EE9C  +
test [edx+10h] ecx +
jnz loc_105EE9C  +
mov eax [esi+4] +
sub eax [edx+4] +
jmp loc_101025A  +
***
or eax 0FFFFFFFFh +
jmp loc_101025A  +
***
call ds:off_105EEB0  +
jmp loc_1018C11  +
***
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_105EEE6  +
cmp edx edi +
jnz loc_105EEE6  +
push offset dword_105EEF0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
jmp loc_1043B94  +
***
lea ecx [ebx-2Ch] +
call sub_108EDB5  +
mov esi [ebp+10h] +
lea edi [ebp-20h] +
movs   +
movs   +
movs   +
mov ecx eax +
movs   +
mov esi ds:DrawThemeBackground +
test ecx ecx +
jle loc_105EF71  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
lea edi [ebp-0Ch] +
stos   +
stos   +
stos   +
mov eax [ebp-14h] +
sub eax ecx +
push 2  +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+84h]  +
call ds:MapWindowPoints  +
mov eax [ebp-20h] +
mov [ebp-10h] eax +
mov eax [ebp-14h] +
mov [ebp-4] eax +
mov eax [ebp-18h] +
push 0  +
mov [ebp-8] eax +
lea eax [ebp-10h] +
push eax  +
push 0  +
push 0Dh  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx+0Ch]  +
call esi  +
mov eax [ebp-0Ch] +
mov [ebp-14h] eax +
push 0  +
lea eax [ebp-20h] +
push eax  +
push 0  +
push 0Ch  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx+0Ch]  +
call esi  +
jmp loc_1038142  +
***
push dword ptr [ebx+124h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_197  +
mov ebx [ebx+10h] +
cmp ebx 9 +
jz loc_105EFAB  +
cmp ebx 0Ah +
jnz loc_1038142  +
push 1  +
push 6  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:DrawEdge  +
jmp loc_1038142  +
***
push dword ptr [ebx+40h]  +
push dword ptr [ebx+10h]  +
call ds:SetBkColor  +
push dword ptr [ebx+30h]  +
mov [ebp+var_10] eax +
push dword ptr [ebx+10h]  +
call ds:SetTextColor  +
push dword ptr [ebx+10h]  +
mov [ebp+var_C] eax +
call ds:GetLayout  +
mov ecx [ebx+10h] +
mov esi eax +
mov eax [edi+198h] +
mov edi ds:SelectObject +
push eax  +
push ecx  +
and esi 1 +
call edi  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_105F068  +
mov eax esi +
neg eax  +
sbb eax eax +
and eax 3Fh +
add eax 38h +
movzx eax ax +
mov [ebp+arg_4] eax +
xor eax eax +
test esi esi +
jz loc_105F023  +
mov eax 80h +
push 0  +
push 1  +
lea ecx [ebp+arg_4] +
push ecx  +
lea ecx [ebp+lParam] +
push ecx  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [ebp+var_14] +
sub eax [ecx+1A0h] +
mov ecx [ebp+var_18] +
sub eax [ebp+var_1C] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_1C] +
push eax  +
mov eax ecx +
sub eax [ebp+var_20] +
cdq   +
sub eax edx +
sar eax 1 +
sub ecx eax +
push ecx  +
push dword ptr [ebx+10h]  +
call sub_107E637  +
push [ebp+var_8]  +
push dword ptr [ebx+10h]  +
call edi  +
push [ebp+var_C]  +
push dword ptr [ebx+10h]  +
call ds:SetTextColor  +
push [ebp+var_10]  +
push dword ptr [ebx+10h]  +
call ds:SetBkColor  +
jmp loc_1039716  +
***
mov edx [ebp+arg_8] +
xor eax eax +
inc eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ebp+arg_10] +
and ecx 8 +
or ecx 4 +
shr ecx 2 +
mov [edx] ecx +
jmp loc_10384C7  +
mov ecx [ebp+arg_8] +
xor eax eax +
inc eax  +
mov [ecx] eax +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 3 +
jmp loc_10384CC  +
push edi  +
mov edi [ebp+arg_8] +
mov [edi] eax +
push 3  +
pop edx  +
cmp ecx [esi+0D8h] +
jnz loc_105F0D7  +
test byte ptr [ecx+20h] 30h +
jnz loc_105F0D7  +
mov [edi] edx +
mov ecx [ebp+arg_10] +
mov [ecx] edx +
pop edi  +
jmp loc_10384C7  +
***
cmp dword ptr [ebx+38h] 0 +
jz loc_1038463  +
push 0  +
lea eax [ebp+rcSrc] +
push eax  +
mov eax [ebx] +
push 4  +
mov ecx ebx +
call dword ptr [eax+94h]  +
jmp loc_103DDAA  +
mov eax [ebx+38h] +
test eax eax +
jz loc_1038463  +
push 0  +
lea ecx [ebp+rcSrc] +
push ecx  +
push 3  +
push 10h  +
push dword ptr [edi+10h]  +
push eax  +
jmp loc_103DDB1  +
push dword ptr [ebx+44h]  +
mov eax [esi] +
push dword ptr [ebx+58h]  +
mov ecx esi +
call dword ptr [eax+4]  +
test eax eax +
jz loc_103DD60  +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
lea esi [ebp+rcSrc] +
movs   +
movs   +
movs   +
lea ecx [ebp+rc] +
push ecx  +
mov ecx ebx +
movs   +
call dword ptr [eax+7Ch]  +
cmp dword ptr [ebx+38h] 0 +
jz loc_105F181  +
push 0  +
lea eax [ebp+rc] +
push eax  +
push [ebp+var_8]  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8Ch]  +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push dword ptr [ebx+38h]  +
call ds:DrawThemeBackground  +
mov eax [ebp+rc.left] +
sub eax [ebp+rc.right] +
add [ebp+rcDst.right] eax +
jmp loc_105F1A7  +
mov eax [ebp+var_8] +
dec eax  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF2h +
add eax 14h +
push eax  +
call ds:GetSysColorBrush  +
push eax  +
lea eax [ebp+rc] +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
call ds:FrameRect  +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_4] +
jmp loc_103DD60  +
test dword ptr [esi+10h] 3C0h +
jnz loc_103DD6F  +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
lea esi [ebp+rcSrc] +
movs   +
movs   +
movs   +
lea ecx [ebp+rc] +
push ecx  +
mov ecx ebx +
movs   +
call dword ptr [eax+78h]  +
cmp dword ptr [ebx+38h] 0 +
jz loc_105F201  +
push 0  +
lea eax [ebp+rc] +
push eax  +
push [ebp+var_C]  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+88h]  +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push dword ptr [ebx+38h]  +
call ds:DrawThemeBackground  +
jmp loc_105F227  +
mov eax [ebp+var_C] +
dec eax  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF2h +
add eax 14h +
push eax  +
call ds:GetSysColorBrush  +
push eax  +
lea eax [ebp+rc] +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
call ds:FrameRect  +
push [ebp+arg_4]  +
mov ecx ebx +
push [ebp+arg_0]  +
call sub_108EEB3  +
mov eax [ebp+rc.left] +
sub eax [ebp+rc.right] +
mov edi [ebp+arg_4] +
add [ebp+rcDst.right] eax +
mov esi [ebp+arg_0] +
jmp loc_103DD6F  +
push dword ptr [ebx+44h]  +
mov eax [esi] +
push dword ptr [ebx+58h]  +
mov ecx esi +
call dword ptr [eax+4]  +
test eax eax +
jz loc_103DD88  +
jmp loc_105F26C  +
test dword ptr [esi+10h] 3C0h +
jnz loc_103DD97  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+90h]  +
jmp loc_103DDA1  +
***
mov ecx esi +
call sub_1038398  +
jmp loc_10387AB  +
***
mov eax [esi+198h] +
mov ecx [ebx+10h] +
push eax  +
push ecx  +
call ds:SelectObject  +
xor ecx ecx +
mov [ebp+var_10] eax +
cmp eax ecx +
jz loc_103881A  +
mov eax edi +
neg eax  +
sbb eax eax +
and eax 3Fh +
add eax 38h +
movzx eax ax +
mov [ebp+var_8] eax +
xor eax eax +
mov [ebp+var_4] ecx +
cmp edi ecx +
jz loc_105F2E1  +
mov eax 80h +
mov [ebp+var_4] 20000h +
cmp [esi+38h] ecx +
jz loc_105F361  +
push 3Ch  +
push ecx  +
lea eax [ebp+var_78] +
push eax  +
mov [ebp+var_7C] 40h +
call memset  +
add esp 0Ch +
call ds:IsCompositionActive  +
mov ecx [ebp+var_24] +
neg eax  +
sbb eax eax +
and eax 2000h +
mov [ebp+var_78] eax +
mov eax ecx +
sub eax [esi+19Ch] +
mov [ebp+Rect.right] ecx +
mov [ebp+Rect.left] eax +
mov eax [ebp+var_20] +
sub eax [esi+1A0h] +
sub eax [ebp+var_28] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_28] +
mov [ebp+Rect.top] eax +
mov eax [ebp+var_20] +
mov [ebp+Rect.bottom] eax +
lea eax [ebp+var_7C] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+var_4]  +
lea eax [ebp+var_8] +
push 1  +
push eax  +
push dword ptr [ebx+50h]  +
push dword ptr [esi+3Ch]  +
push dword ptr [ebx+10h]  +
push dword ptr [esi+38h]  +
call ds:DrawThemeTextEx  +
jmp loc_105F394  +
push ecx  +
push 1  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
mov eax [ebp+var_20] +
sub eax [esi+1A0h] +
sub eax [ebp+var_28] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_28] +
push eax  +
mov eax [ebp+var_24] +
sub eax [esi+19Ch] +
push eax  +
push dword ptr [ebx+10h]  +
call sub_107E637  +
push [ebp+var_10]  +
push dword ptr [ebx+10h]  +
call ds:SelectObject  +
jmp loc_103881A  +
mov [ebp+var_4] 62010h +
jmp loc_1038897  +
mov eax [ebp+var_4] +
or eax 200000h +
push eax  +
lea eax [ebp+lParam] +
push eax  +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push dword ptr [eax+18h]  +
push dword ptr [ebx+10h]  +
call edi  +
jmp loc_1038932  +
push ebx  +
push ecx  +
mov ecx esi +
call sub_108EF6B  +
jmp loc_103883E  +
push ebx  +
push ecx  +
mov ecx esi +
call sub_108F004  +
jmp loc_103883E  +
***
mov eax [ebp+var_4] +
jmp loc_1043CB8  +
xor eax eax +
jmp loc_1043CB8  +
***
mov ecx 9003h +
jmp loc_1017D8F  +
***
push 0  +
push 0  +
push edi  +
call dword ptr [eax+0ACh]  +
mov esi eax +
jmp loc_1012689  +
***
call sub_103E1B8  +
mov ebx eax +
test ebx ebx +
jl loc_1043C0E  +
lea eax [ebp+Points] +
push eax  +
push ebx  +
push 100Eh  +
push dword ptr [edi+0B0h]  +
mov [ebp+Points.x] 1 +
call ds:SendMessageW  +
test eax eax +
jz loc_105F47F  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push dword ptr [edi+0B0h]  +
call ds:MapWindowPoints  +
mov ecx [ebp+var_8] +
mov eax [ebp+Points.x] +
add eax ecx +
mov ecx [ebp+var_4] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi] eax +
mov eax [ebp+Points.y] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+4] eax +
jmp loc_1043C0E  +
or ebx 0FFFFFFFFh +
jmp loc_1043C0E  +
***
and dword ptr [eax+20h] 0FFFFFFF7h +
mov ecx [esi] +
call sub_100F319  +
and dword ptr [esi] 0 +
jmp loc_1012317  +
***
push edi  +
mov edi ds:SendMessageW +
push 0  +
push 0  +
push 103Dh  +
push dword ptr [esi+0B0h]  +
call edi  +
test eax eax +
jl loc_105F4E5  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
mov [ebp+Rect.left] 3 +
call edi  +
test eax eax +
jz loc_105F4E5  +
push 1  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:InvalidateRect  +
pop edi  +
jmp loc_103C3C8  +
***
mov edx [esi] +
lea ecx [ebp+var_20] +
push ecx  +
push eax  +
mov ecx esi +
call dword ptr [edx+0B8h]  +
test eax eax +
jl loc_103DE21  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push ebx  +
push dword ptr [esi+0B0h]  +
call ds:MapWindowPoints  +
lea eax [ebp+var_2C] +
push eax  +
push 0D8h  +
push dword ptr [esi+44h]  +
mov [esi+1B0h] edi +
call sub_103C26A  +
mov eax [ebp+var_20] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] 1 +
cmp dword_10B24CC ebx +
jz loc_105F59F  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105F551  +
cmp al bl +
jnz loc_105F59F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_105F59F  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_105F59F  +
cmp edx ebx +
jnz loc_105F59F  +
push offset dword_105F5B8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push [ebp+arg_4]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0E0h]  +
jmp loc_103DE21  +
***
push 3  +
push 6  +
lea eax [ebp+qrc] +
push eax  +
push [ebp+hdc]  +
call ds:DrawEdge  +
jmp locret_103862B  +
***
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
jmp loc_104FFB7  +
***
mov eax [esi+0C4h] +
cdq   +
sub eax edx +
sar eax 1 +
inc eax  +
xor ecx ecx +
cmp [ebp+arg_8] eax +
setnl cl  +
mov eax ecx +
jmp loc_103EA7F  +
***
mov eax 80004003h +
jmp loc_103EB63  +
mov ecx [ebp+arg_4] +
xor edx edx +
dec ecx  +
cmp ecx 7 +
ja loc_105F666  +
jmp ds:off_105F68B[ecx*4]  +
lea edx [eax+2] +
jmp loc_105F666  +
lea edx [eax-2] +
jmp loc_105F666  +
mov ecx eax +
and ecx 80000001h +
jns loc_105F63A  +
dec ecx  +
or ecx 0FFFFFFFEh +
inc ecx  +
jnz loc_105F652  +
lea edx [eax-1] +
jmp loc_105F666  +
mov ecx eax +
and ecx 80000001h +
jns loc_105F650  +
dec ecx  +
or ecx 0FFFFFFFEh +
inc ecx  +
jnz loc_105F656  +
xor edx edx +
jmp loc_105F666  +
lea edx [eax+1] +
jmp loc_105F666  +
xor edx edx +
inc edx  +
jmp loc_105F666  +
mov edx [esi+0B4h] +
push edx  +
lea ecx [esi-10h] +
call sub_108F6D9  +
test eax eax +
jz loc_105F683  +
push 3  +
pop eax  +
mov [edi] ax +
mov [edi+8] edx +
xor eax eax +
jmp loc_103EB63  +
xor eax eax +
inc eax  +
jmp loc_103EB63  +
***
mov eax 80004003h +
jmp locret_103C18E  +
***
push 0  +
push 0  +
push 1  +
push 0C000008Ch  +
call ds:RaiseException  +
int 3  +
push ebx  +
push edi  +
mov edi ds:GetSysColor +
push 7  +
call edi  +
mov ebx ds:SendMessageW +
push eax  +
push 0  +
push 1024h  +
push dword ptr [esi+0B0h]  +
call ebx  +
push 0Eh  +
call edi  +
push 4  +
mov [esi+154h] eax +
call edi  +
push eax  +
push 0  +
push 1001h  +
push dword ptr [esi+0B0h]  +
lea edi [esi+150h] +
mov [edi] eax +
call ebx  +
push dword ptr [edi]  +
push 0  +
push 1026h  +
push dword ptr [esi+0B0h]  +
call ebx  +
pop edi  +
pop ebx  +
jmp loc_105124D  +
***
push eax  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
call SHELL32_790  +
jmp loc_1012EF9  +
***
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_105F79A  +
cmp [esi+0B8h] eax +
jnz loc_105F79A  +
xor edi edi +
jmp loc_1012550  +
and [ebp+lParam] 0 +
lea ecx [ebp+lParam] +
push ecx  +
mov ecx esi +
cmp eax [esi+0B8h] +
jnz loc_105F7CD  +
dec eax  +
push eax  +
call sub_108F92B  +
push eax  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov edi [ebp+var_8] +
jmp loc_1012550  +
push eax  +
call sub_108F92B  +
push eax  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov edi [ebp+var_10] +
jmp loc_1012550  +
***
push edi  +
mov ecx esi +
call sub_108F0E5  +
jmp loc_1012F3D  +
or [ebp+lParam] 100h +
mov [ebp+var_14] eax +
jmp loc_1012F71  +
***
inc edx  +
jmp loc_10157BB  +
xor eax eax +
jmp loc_10157E2  +
***
mov eax [esi] +
push 50h  +
lea ecx [ebx+10h] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+84h]  +
jmp loc_105F83A  +
mov eax [esi] +
push 50h  +
lea ecx [ebx+10h] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+80h]  +
mov dword ptr [ebp+14h] 1 +
jmp loc_105442B  +
***
add ebx 10h +
push ebx  +
call ds:SHStripMneumonicW  +
xor eax eax +
jmp loc_100F0E8  +
***
mov eax [ebx+20h] +
mov edx eax +
shl edx 1Bh +
sar edx 1Fh +
xor ecx ecx +
cmp edx edi +
jz loc_105F87C  +
shl edi 4 +
xor edi eax +
and edi 10h +
xor edi eax +
mov [ebx+20h] edi +
xor edi edi +
inc edi  +
mov ecx edi +
jmp loc_105F87F  +
xor edi edi +
inc edi  +
mov eax [ebx+20h] +
shl eax 1Ah +
sar eax 1Fh +
cmp eax [ebp+arg_C] +
jz loc_105F89F  +
push dword ptr [esi+44h]  +
mov ecx ebx +
push dword ptr [esi+58h]  +
push [ebp+arg_C]  +
call sub_108EBD1  +
mov ecx edi +
lea eax [esi+0C0h] +
cmp [eax] edi +
jz loc_105F8AD  +
mov [eax] edi +
mov ecx edi +
test ecx ecx +
jz loc_105F8E2  +
and [ebp+Rect.left] 0 +
lea eax [ebp+Rect] +
push eax  +
push [ebp+wParam]  +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_105F8E2  +
push edi  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:InvalidateRect  +
mov ecx ebx +
call sub_100F319  +
jmp loc_103DF8B  +
***
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 104Ch  +
push dword ptr [esi+0B0h]  +
call ebx  +
jmp loc_101D33F  +
***
push 2  +
push edi  +
call ds:KillTimer  +
mov ecx esi +
call sub_108F9B4  +
jmp loc_10408E5  +
***
push edi  +
call sub_108EDB5  +
mov edi eax +
test edi edi +
jz loc_105F950  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+44h]  +
call ds:GetClientRect  +
mov eax [ebp+Rect.bottom] +
sub eax edi +
push eax  +
push dword ptr [esi+148h]  +
mov eax [ebp+arg_0] +
push dword ptr [eax+10h]  +
mov ecx esi +
call sub_10385DF  +
pop edi  +
jmp loc_101ED22  +
***
push dword ptr [esi+24h]  +
mov ecx edi +
call sub_1012341  +
mov [ebp+arg_0] eax +
jmp loc_10382DA  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
test eax eax +
jnz loc_105F981  +
mov eax [ebp+arg_0] +
test byte ptr [eax+20h] 2 +
jz loc_10382F9  +
push 17h  +
call ebx  +
push 18h  +
mov [esi+30h] eax +
call ebx  +
mov [esi+34h] eax +
mov [esi+40h] eax +
jmp loc_10382F9  +
push 0Eh  +
call ebx  +
mov [esi+30h] eax +
push 0Dh  +
jmp loc_103DD2A  +
or esi 30h +
jmp loc_1038373  +
***
push [ebp+var_4]  +
push ebx  +
push 1036h  +
push dword ptr [edi+0B0h]  +
call esi  +
jmp loc_104BFAD  +
***
push 0  +
push 0E1h  +
push dword ptr [ecx+44h]  +
call sub_103C26A  +
jmp loc_1042B71  +
***
xor eax eax +
jmp loc_1043AA0  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_10435CA  +
cmp edx ebx +
jnz loc_10435CA  +
push offset dword_105FC68  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_10435CA  +
mov [ebp+var_210] offset off_10B3AAC +
jmp loc_1043658  +
mov [ebp+uPosition] edi +
jmp loc_1043686  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_244] +
mov [ebp+var_210] eax +
jmp loc_10436C1  +
push 0  +
push 0FFFFFFFFh  +
push 800h  +
push ebx  +
call ds:AppendMenuW  +
lea eax [ebp+NewItem] +
push eax  +
push [ebp+uItem]  +
push [ebp+uFlags]  +
push ebx  +
call ds:AppendMenuW  +
push [ebp+pt.y]  +
mov ecx esi +
push [ebp+pt.x]  +
push [ebp+var_21C]  +
call sub_103DC26  +
test eax eax +
jz loc_10437D4  +
push 0  +
push [ebp+uItem]  +
push ebx  +
call ds:SetMenuDefaultItem  +
jmp loc_10437D4  +
push 400h  +
push [ebp+uPosition]  +
push ebx  +
call ds:DeleteMenu  +
jmp loc_10437D4  +
mov eax [ebp+var_214] +
test byte ptr [eax+20h] 1 +
mov eax offset aStartunpin +
jnz loc_105FAD9  +
mov eax offset aStartpin +
push eax  +
push edi  +
push [ebp+var_210]  +
push ebx  +
call sub_104337A  +
cmp eax 0FFFFFFFFh +
jz loc_10437F5  +
push 1  +
push eax  +
push ebx  +
call ds:SetMenuDefaultItem  +
jmp loc_10437F5  +
push 1  +
push 0FFFFFFFFh  +
push ebx  +
call ds:SetMenuDefaultItem  +
jmp loc_1043816  +
push offset aCustomopen  +
jmp loc_105FB28  +
push offset aTogglepin  +
jmp loc_105FB22  +
push offset aDelete  +
lea eax [ebp+NewItem] +
push 104h  +
push eax  +
call sub_100665F  +
jmp loc_10438E8  +
push [ebp+var_21C]  +
mov ecx esi +
call sub_108F117  +
jmp loc_10439BB  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_105FB5B  +
test al al +
jnz loc_10439BB  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov ebx 80000000h +
and eax edx +
and ecx ebx +
or eax ecx +
jz loc_10439BB  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx ebx +
cmp ecx eax +
jnz loc_105FBAD  +
cmp edx edi +
jnz loc_105FBAD  +
push offset dword_105FC78  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov edi ds:__imp_StrCmpICW +
jmp loc_10439BB  +
mov ecx [ebp+var_214] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
mov edi eax +
test edi edi +
jz loc_1043A21  +
push 2  +
jmp loc_105FC1A  +
mov ecx [ebp+var_214] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
mov edi eax +
test edi edi +
jz loc_1043A21  +
push 7  +
jmp loc_105FC1A  +
mov ecx [ebp+var_214] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
mov edi eax +
test edi edi +
jz loc_1043A21  +
push 5  +
jmp loc_105FC1A  +
mov ecx [ebp+var_214] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
mov edi eax +
test edi edi +
jz loc_1043A21  +
push 0Ah  +
push 0  +
push edi  +
push offset dword_10B2478  +
call sub_102E3FE  +
push edi  +
call ds:__imp_SHELL32_155  +
jmp loc_1043A21  +
push 17A5h  +
push offset dword_105FC88  +
call sub_1034B2D  +
jmp loc_1043A5B  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
jmp loc_1043AA0  +
***
push 11h  +
call edi  +
test ax ax +
jge loc_103E732  +
xor eax eax +
inc eax  +
jmp loc_103E734  +
***
push dword ptr [esi+10h]  +
call ds:lstrlenW  +
mov ebx eax +
test ebx ebx +
jz loc_103ED1F  +
push offset asc_1069784  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_1010E3B  +
push dword ptr [esi+10h]  +
call ds:lstrlenW  +
mov ebx eax +
jmp loc_103ED1F  +
mov eax [esi+14h] +
and [ebp+var_58] 0 +
mov [ebp+var_48] eax +
mov eax [esi+10h] +
mov [ebp+var_4C] eax +
lea eax [ebp+var_60] +
push eax  +
push dword ptr [esi+18h]  +
push 1073h  +
push dword ptr [edi+0B0h]  +
call ds:SendMessageW  +
jmp loc_103ED98  +
***
mov eax [esi] +
call dword ptr [eax+28h]  +
test eax eax +
jnz loc_103A4A1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
test eax eax +
jz loc_103A4A1  +
mov ebx ds:PeekMessageW +
mov edi 400h +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
lea eax [ebp+Msg] +
push eax  +
call ebx  +
test eax eax +
jz loc_105FD55  +
push 1  +
push edi  +
push edi  +
push dword ptr [esi+44h]  +
lea eax [ebp+Msg] +
push eax  +
call ebx  +
test eax eax +
jnz loc_105FD5D  +
call ds:WaitMessage  +
jmp loc_105FD34  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
jmp loc_103A4A1  +
inc ecx  +
jmp loc_103A4C1  +
xor edi edi +
and [ebp+wMsgFilterMin] edi +
test eax eax +
jle loc_103A4F1  +
lea eax [ebp+wMsgFilterMax] +
push eax  +
push [ebp+wMsgFilterMin]  +
mov [ebp+wMsgFilterMax] 60h +
push 1099h  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_80] 10h +
call ebx  +
test eax eax +
jz loc_105FDCF  +
and [ebp+Msg.time] 0 +
lea eax [ebp+Msg.lParam] +
push eax  +
push [ebp+var_6C]  +
push 1062h  +
push dword ptr [esi+0B0h]  +
call ebx  +
test eax eax +
jz loc_105FDCF  +
mov eax [ebp+Msg.pt.y] +
sub eax [ebp+Msg.time] +
add edi eax +
inc [ebp+wMsgFilterMin]  +
mov eax [ebp+wMsgFilterMin] +
cmp eax [ebp+var_8] +
jge loc_103A4F1  +
jmp loc_105FD7F  +
***
push esi  +
mov esi [ebp+lpRect] +
push esi  +
push dword ptr [edi+0B0h]  +
call ds:GetClientRect  +
lea eax [ebp+var_8] +
push eax  +
push dword ptr [ebx]  +
mov ecx edi +
call sub_1012519  +
push 2Eh  +
call ds:GetSystemMetrics  +
mov ecx [ebp+var_4] +
mov edx ecx +
sub edx eax +
xor eax eax +
mov [esi+4] edx +
mov [esi+0Ch] ecx +
inc eax  +
pop esi  +
jmp loc_1038540  +
***
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+124h]  +
push eax  +
lea eax [ebp+Rect] +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+10h]  +
call ds:FillRect  +
jmp loc_103851A  +
***
mov eax [esi+0C4h] +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [ebx+8] +
sar ecx 1 +
sub eax ecx +
jmp loc_1042D72  +
***
mov eax 80004003h +
jmp loc_103CACB  +
***
mov eax 80004003h +
jmp loc_103EC45  +
push [ebp+arg_C]  +
mov ecx esi +
call sub_108F64C  +
jmp loc_103EC38  +
push dword ptr [ebx+34h]  +
mov ecx [ebp+arg_8] +
push dword ptr [ebx+48h]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_103EC38  +
push [ebp+arg_C]  +
mov ecx esi +
call sub_108F678  +
jmp loc_103EC38  +
push 3  +
pop ecx  +
mov [esi] cx +
mov [esi+8] eax +
mov [ebp+arg_0] eax +
jmp loc_103EC40  +
***
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+100h]  +
cmp eax 0FFFFFFFFh +
jz loc_101D50D  +
push edi  +
jmp loc_101D4A1  +
***
mov eax [esi+3Ch] +
cmp eax 9 +
jz loc_105FEDF  +
cmp eax 0Ah +
jz loc_105FEDF  +
push 2Dh  +
call ds:GetSystemMetrics  +
add eax eax +
jmp loc_105FEE1  +
xor eax eax +
push 2Dh  +
mov [esi+90h] eax +
call ds:GetSystemMetrics  +
add eax eax +
push 2Dh  +
mov [esi+88h] eax +
call ds:GetSystemMetrics  +
add eax eax +
mov [esi+8Ch] eax +
lea eax [esi+68h] +
push eax  +
push 204Bh  +
call sub_101494A  +
lea eax [esi+6Ch] +
push eax  +
push 204Ch  +
call sub_101494A  +
lea eax [esi+70h] +
push eax  +
push 204Dh  +
call sub_101494A  +
lea eax [esi+78h] +
push eax  +
push 204Eh  +
call sub_101494A  +
lea eax [esi+74h] +
push eax  +
push 204Fh  +
call sub_101494A  +
jmp loc_101772E  +
lea eax [esi+10Ch] +
push eax  +
call sub_1002BEE  +
jmp loc_10178DD  +
push 7  +
call ds:GetSysColor  +
push eax  +
push ebx  +
push 1024h  +
push dword ptr [esi+0B0h]  +
call edi  +
push 0Eh  +
call ds:GetSysColor  +
push 4  +
mov [esi+154h] eax +
call ds:GetSysColor  +
mov [esi+150h] eax +
jmp loc_1017AB0  +
***
push dword ptr [eax+4]  +
mov edx [esi] +
push dword ptr [eax]  +
push [ebp+arg_C]  +
push ecx  +
mov ecx esi +
call dword ptr [edx+34h]  +
jmp loc_1042B42  +
***
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+4Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_103E5E9  +
jmp loc_103E654  +
push dword ptr [edi+0Ch]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0F4h]  +
mov ebx eax +
test ebx ebx +
jge loc_103E625  +
jmp loc_1060005  +
mov eax [ebp+arg_0] +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
mov [ebp+var_8] offset __ImageBase +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_1060005  +
xor ebx ebx +
jmp loc_103E643  +
test byte ptr [esi+0C8h] 2 +
jz loc_103E64B  +
mov eax [esi] +
xor ecx ecx +
cmp ebx 800704C7h +
setnz cl  +
push ecx  +
push [ebp+var_4]  +
mov ecx esi +
push [ebp+arg_0]  +
push edi  +
call dword ptr [eax+0D4h]  +
jmp loc_103E64B  +
***
mov eax 80004003h +
jmp loc_103CC13  +
***
push 40000065h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_103E8CE  +
mov eax [ebp-4] +
test dword ptr [eax+10h] 3C0h +
jnz loc_103E8CE  +
test byte ptr [eax+20h] 1 +
jz loc_106006E  +
mov dword ptr [ebp+8] 8 +
or dword ptr [ebp+8] 200000h +
push 2  +
sub esp 10h +
mov edi esp +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103CC80  +
mov esi ds:SendMessageW +
push eax  +
push 102Ch  +
push dword ptr [ebx+0A0h]  +
call esi  +
push 0  +
push 0  +
push 103Dh  +
push dword ptr [ebx+0A0h]  +
mov [ebp-0Ch] eax +
call esi  +
sub esp 10h +
mov edi esp +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
mov [ebp-8] eax +
call sub_103CC80  +
mov ecx [ebp-8] +
cmp eax ecx +
jz loc_10600DB  +
test byte ptr [ebp-0Ch] 2 +
jz loc_103E8D5  +
cmp dword ptr [ebx+0B0h] 2 +
jmp loc_10600F3  +
mov [ebp+8] eax +
jmp loc_103E8F9  +
cmp dword ptr [ebx+0B0h] 3 +
jnz loc_103E8D5  +
or dword ptr [ebp+8] 2 +
jmp loc_103E8D5  +
***
mov eax 80004003h +
jmp loc_103C75F  +
***
call sub_103CC47  +
mov ebx eax +
test ebx ebx +
jz loc_103C74B  +
test byte ptr [ebx+20h] 1 +
mov esi 104h +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
push 0  +
pop eax  +
setnz al  +
add eax 143h +
push eax  +
push dword_10B23D0  +
call ds:LoadStringW  +
push 0  +
push ebx  +
mov ecx edi +
call sub_1012646  +
mov edi eax +
test edi edi +
jz loc_10601A6  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
lea eax [ebp-414h] +
push esi  +
push eax  +
call sub_10343CA  +
add esp 10h +
mov [ebp-418h] eax +
test eax eax +
jl loc_106019D  +
lea eax [ebp-414h] +
push eax  +
call ds:SysAllocString  +
mov [ebp-41Ch] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
mov [ebp-418h] eax +
push edi  +
call ds:__imp_CoTaskMemFree  +
jmp loc_10601B0  +
mov dword ptr [ebp-418h] 80004005h +
mov ecx ebx +
jmp loc_103EA59  +
mov dword ptr [ebp-418h] 80004005h +
jmp loc_103EA53  +
***
cmp [ebp+arg_1C] eax +
jz loc_103DEC9  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_14] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103EA68  +
test eax eax +
jnz loc_1060203  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_14] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_108F6A4  +
test eax eax +
jz loc_103DEF9  +
lea eax [ebp+arg_14] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CC47  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_103DEF9  +
and [ebp+lParam] 0 +
lea eax [ebp+lParam] +
push eax  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_14] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103CC80  +
push eax  +
push 100Eh  +
push dword ptr [ebx+0A0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_10602DB  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_14] +
movs   +
movs   +
movs   +
movs   +
lea esi [ebx-10h] +
mov ecx esi +
call sub_103EA68  +
sub esp 10h +
test eax eax +
mov eax [esi] +
mov edi esp +
lea esi [ebp+lParam] +
movs   +
movs   +
movs   +
movs   +
jz loc_1060284  +
lea ecx [ebp+var_40] +
push ecx  +
lea ecx [ebx-10h] +
call dword ptr [eax+78h]  +
jmp loc_106028E  +
lea ecx [ebp+var_50] +
push ecx  +
lea ecx [ebx-10h] +
call dword ptr [eax+7Ch]  +
mov esi eax +
lea edi [ebp+var_20] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+var_20] +
mov edi [ebp+var_1C] +
lea eax [ebp+Point] +
push eax  +
push dword ptr [ebx+0A0h]  +
mov [ebp+Point.x] esi +
mov [ebp+Point.y] edi +
call ds:ClientToScreen  +
mov eax [ebp+Point.x] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov eax [ebp+Point.y] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov eax [ebp+var_18] +
mov ecx [ebp+arg_C] +
sub eax esi +
mov [ecx] eax +
mov eax [ebp+var_14] +
mov ecx [ebp+arg_10] +
sub eax edi +
and [ebp+arg_0] 0 +
mov [ecx] eax +
mov ecx [ebp+var_4] +
call sub_100F319  +
jmp loc_103DEF9  +
***
xor eax eax +
jmp loc_101D788  +
***
mov [ebp+wParam] 1 +
push eax  +
push [ebp+var_18]  +
push 1091h  +
push dword ptr [esi+0B0h]  +
call edi  +
inc [ebp+var_18]  +
push [ebp+var_18]  +
push dword ptr [esi+0DCh]  +
call ds:off_1002B68  +
cmp eax ebx +
jz loc_1012C2C  +
jmp loc_10602F6  +
mov eax [esi+0ECh] +
add eax [esi+0BCh] +
cmp eax [esi+1ACh] +
sbb eax eax +
neg eax  +
mov [ebp+arg_0] eax +
jmp loc_1012C90  +
mov eax [ebp+var_10] +
mov ecx [eax+14h] +
or eax 0FFFFFFFFh +
cmp ecx eax +
jz loc_106035F  +
cmp [ebp+var_14] eax +
jz loc_106035F  +
mov [ebp+var_34] 1 +
cmp [ebp+var_14] ecx +
jnz loc_1060362  +
mov [ebp+var_34] ebx +
cmp ecx eax +
jz loc_1060379  +
cmp [ebp+var_14] eax +
jz loc_1060370  +
cmp [ebp+var_14] ecx +
jz loc_1060379  +
mov [ebp+var_1C] 1 +
jmp loc_106037C  +
mov [ebp+var_1C] ebx +
mov edx [ebp+var_10] +
test dword ptr [edx+10h] 200h +
mov eax [esi+0ECh] +
mov [ebp+var_14] ecx +
mov [ebp+var_24] eax +
jz loc_10603BF  +
cmp [ebp+var_1C] ebx +
jz loc_1012CE4  +
cmp [ebp+var_20] 0FFFFFFFFh +
jnz loc_10603AE  +
mov [ebp+var_20] ecx +
mov [ebp+var_8] ebx +
jmp loc_1012CE4  +
cmp ecx [ebp+var_20] +
jz loc_1012CE4  +
inc [ebp+var_8]  +
jmp loc_1012CE4  +
cmp [ebp+var_34] ebx +
jz loc_10603FD  +
cmp eax ebx +
jle loc_10603FD  +
dec eax  +
push eax  +
lea ecx [esi+0E8h] +
mov [ebp+var_34] eax +
call sub_1013815  +
mov eax [eax] +
cmp eax [ebp+var_C] +
jnz loc_10603FA  +
mov eax [ebp+var_34] +
dec [ebp+var_4]  +
dec [ebp+var_C]  +
dec [ebp+var_8]  +
push eax  +
lea ecx [esi+0E8h] +
mov [ebp+var_24] eax +
call sub_108F817  +
mov eax [ebp+var_24] +
cmp [ebp+var_1C] ebx +
jz loc_1060405  +
mov [ebp+var_8] ebx +
mov ecx [ebp+var_10] +
cmp dword ptr [ecx+4] 0FFFFFFFEh +
jnz loc_1012CE4  +
cmp [ebp+var_1C] ebx +
jnz loc_1012D3F  +
cmp eax ebx +
jle loc_1012CE4  +
dec eax  +
push eax  +
lea ecx [esi+0E8h] +
call sub_1013815  +
mov ecx [ebp+var_C] +
cmp [eax] ecx +
jnz loc_1012CE4  +
jmp loc_1012D3F  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_101D3A9  +
inc [ebp+var_30]  +
jmp loc_1012D2D  +
mov eax [ebp+var_10] +
cmp dword ptr [eax+14h] 0FFFFFFFFh +
jz loc_1012D3F  +
mov ecx [ebp+var_8] +
inc [ebp+var_8]  +
mov [ebp+var_3C] 1 +
mov [eax+0Ch] ecx +
jmp loc_1012D3F  +
cmp [ebp+var_3C] ebx +
jnz loc_1012D6E  +
push ebx  +
push ebx  +
push 10A0h  +
push dword ptr [esi+0B0h]  +
call edi  +
push ebx  +
push ebx  +
push 109Dh  +
push dword ptr [esi+0B0h]  +
call edi  +
jmp loc_1012D6E  +
mov eax [ebp+var_40] +
jmp loc_1012D7F  +
mov eax [ebp+var_40] +
dec [ebp+var_4]  +
dec [ebp+arg_0]  +
push eax  +
lea ecx [esi+0E8h] +
mov [ebp+var_40] eax +
call sub_108F817  +
cmp [ebp+var_4] ebx +
jl loc_1012D87  +
jmp loc_10604A0  +
***
sub eax 1FFFFh +
jz loc_10604D9  +
xor eax eax +
jmp loc_101242F  +
push edi  +
call sub_108F082  +
jmp loc_101242F  +
***
push 12h  +
pop eax  +
jmp loc_103E4C5  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
jmp loc_103E502  +
***
push eax  +
call ds:DeleteObject  +
jmp loc_1018D82  +
push eax  +
call ds:DeleteObject  +
jmp loc_1018D90  +
***
push 1  +
push dword ptr [esi+0Ch]  +
call sub_108FA82  +
jmp loc_103E81E  +
push dword ptr [edi+44h]  +
mov eax [ebx] +
push dword ptr [edi+58h]  +
mov ecx ebx +
call dword ptr [eax+4]  +
test eax eax +
jz loc_103E812  +
push 150h  +
push ebx  +
mov ecx edi +
call sub_1090378  +
jmp loc_103E821  +
***
push 0  +
push dword ptr [esi+10h]  +
push 10B2h  +
push dword ptr [edi+0B0h]  +
call ebx  +
jmp loc_103DB6F  +
***
cmp [ebp+var_8] edi +
jnz loc_1013127  +
mov eax [esi+0DCh] +
mov eax [eax+4] +
mov edx [esi+0E0h] +
mov eax [eax+ecx*4] +
mov edx [edx+4] +
mov edx [edx+ecx*4] +
mov eax [eax+18h] +
cmp eax [edx+18h] +
jz loc_101D3B6  +
inc ecx  +
cmp ecx [ebp+var_4] +
jge loc_100FC69  +
jmp loc_106055E  +
***
mov eax [ecx] +
mov eax [eax+4] +
mov eax [eax+edx*4] +
add eax 2Ch +
or dword ptr [eax] 10h +
inc edx  +
cmp edx ebx +
jge loc_100F914  +
jmp loc_1060597  +
mov ecx esi +
call sub_100FB88  +
jmp loc_101A001  +
***
mov eax [esi] +
mov ecx esi +
mov [esi+7Ch] ebx +
mov dword ptr [esi+158h] 1 +
call dword ptr [eax+128h]  +
mov ecx esi +
call sub_100FB88  +
jmp loc_100FA3B  +
***
push dword ptr [esi+44h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_100FB74  +
push 0  +
push 0  +
push 1004h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_100FB74  +
mov [esi+15Ch] edi +
jmp loc_100FB7B  +
push [ebp+arg_C]  +
mov ecx esi +
call sub_100F8BC  +
jmp loc_100FB7B  +
***
mov ecx esi +
call sub_100FB88  +
jmp loc_103D3BC  +
***
push 0  +
push 0FAh  +
push 2  +
push dword ptr [esi+44h]  +
call ds:SetTimer  +
jmp loc_1039EB9  +
***
xor eax eax +
cmp [esi+0Ch] eax +
mov ecx ebx +
setz al  +
inc eax  +
push eax  +
call sub_1012AB4  +
jmp loc_10122E9  +
mov eax [ebx] +
push 0FFFFFFFFh  +
mov ecx ebx +
call dword ptr [eax+0E4h]  +
jmp loc_10122E9  +
mov eax [ebx+1B0h] +
cmp eax 0FFFFFFFFh +
jz loc_10122E9  +
inc eax  +
push eax  +
push 0FFFFFFFCh  +
push edx  +
push 8005h  +
call ds:NotifyWinEvent  +
jmp loc_10122E9  +
***
xor eax eax +
jmp loc_100F199  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 7  +
push esi  +
call sub_108ED9A  +
jmp loc_100F18F  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2Ch  +
jmp loc_1043C3F  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2Bh  +
jmp loc_1043C3F  +
***
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push eax  +
push esi  +
call sub_108ED03  +
jmp loc_100F18F  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 402h  +
jmp loc_1042AE1  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 401h  +
jmp loc_1042AE1  +
***
mov ecx ebx +
mov eax 404h +
sub ecx eax +
jz loc_1043C2C  +
dec ecx  +
jz loc_106073B  +
dec ecx  +
jz loc_106072B  +
dec ecx  +
jnz loc_100F209  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 407h  +
jmp loc_1042AE1  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 406h  +
jmp loc_1042AE1  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 405h  +
jmp loc_1042AE1  +
***
dec ecx  +
jnz loc_100F209  +
push dword ptr [ebp+14h]  +
mov ecx edi +
push dword ptr [ebp+10h]  +
push 40Ch  +
push esi  +
call sub_108FE08  +
jmp loc_100F18F  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ebx  +
push esi  +
call ds:DefWindowProcW  +
jmp loc_100F199  +
***
setz al  +
jmp loc_100FD55  +
***
xor eax eax +
retn   +
***
and dword ptr [esi+24h] 0 +
jmp loc_100FF15  +
***
mov eax [edx] +
push ebx  +
push [ebp+arg_4]  +
push edx  +
call dword ptr [eax]  +
mov [ebp+arg_8] eax +
jmp loc_103C66A  +
***
lea eax [ebp+pv] +
push eax  +
push 8001h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_10125A3  +
test eax eax +
jl loc_10607DF  +
push [ebp+pv]  +
call ds:__imp_PathFindExtensionW  +
push offset a_exe  +
push eax  +
call ds:__imp_StrCmpICW  +
push [ebp+pv]  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
call ds:__imp_CoTaskMemFree  +
mov eax esi +
jmp loc_101273E  +
***
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push dword ptr [ebp+10h]  +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [ebp-4] +
test eax eax +
jz loc_101270A  +
xor ecx ecx +
cmp cx [eax] +
jnz loc_1012703  +
push eax  +
call ds:__imp_CoTaskMemFree  +
and dword ptr [ebp-4] 0 +
jmp loc_1012703  +
***
mov eax 80004005h +
jmp loc_10126BB  +
***
sub eax 6 +
jnz loc_1036A9D  +
mov ecx [ebp+arg_0] +
add ecx 0FFFFFFF4h +
call sub_1090FF4  +
jmp loc_1036A9D  +
mov eax [ebp+arg_10] +
mov eax [eax+8] +
mov esi [ebp+arg_14] +
push 0Bh  +
pop ecx  +
mov [esi] cx +
mov ecx [ebp+arg_0] +
push eax  +
add ecx 1D0h +
call sub_109182B  +
neg eax  +
sbb eax eax +
mov [esi+8] ax +
xor ebx ebx +
jmp loc_1036A9D  +
***
call sub_100D5EC  +
test al al +
jnz loc_100FF7E  +
mov ecx esi +
pop esi  +
jmp loc_1091E49  +
***
or dword ptr [ebx+20h] 1 +
jmp loc_100FFED  +
xor ebx ebx +
jmp loc_1010035  +
***
mov eax [eax] +
jmp loc_1010334  +
push 0  +
push offset loc_1091795  +
mov ecx edi +
call sub_100831C  +
mov eax [esi+0Ch] +
and [ebp+arg_0] 0 +
mov [ebp+var_10] eax +
mov eax [esi+10h] +
mov [ebp+var_C] eax +
lea eax [ebp+var_1C] +
push eax  +
mov eax [esi+18h] +
push 0CAh  +
mov [edi] ebx +
push dword ptr [eax+44h]  +
call sub_103C26A  +
mov ebx offset aSoftwareMic_31 +
push ebx  +
mov esi 80000001h +
push esi  +
call ds:SHDeleteKeyW  +
xor eax eax +
push eax  +
lea ecx [ebp+hKey] +
push ecx  +
push eax  +
push 0F003Fh  +
push eax  +
push eax  +
push eax  +
push ebx  +
push esi  +
call ds:RegCreateKeyExW  +
xor esi esi +
inc esi  +
test eax eax +
jnz loc_106093D  +
xor ebx ebx +
mov eax [edi] +
test eax eax +
jz loc_1060909  +
mov eax [eax] +
jmp loc_106090B  +
xor eax eax +
cmp ebx eax +
jge loc_1060934  +
push ebx  +
push dword ptr [edi]  +
mov [ebp+var_8] esi +
call ds:off_1002B68  +
push 4  +
lea ecx [ebp+var_8] +
push ecx  +
push 4  +
push 18h  +
push eax  +
push 0  +
push [ebp+hKey]  +
call ds:SHLWAPI_631  +
inc ebx  +
jmp loc_10608FF  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
lea ecx [ebp+arg_0] +
call sub_10082DC  +
mov eax esi +
jmp loc_1010363  +
***
cmp dword ptr [ebp+0Ch] 8000h +
jnz loc_10102FE  +
mov eax [ebp+10h] +
test eax eax +
jz loc_10102FE  +
push 0  +
push offset loc_1091795  +
lea ecx [ebp+14h] +
mov [ebp+14h] eax +
call sub_100831C  +
lea ecx [ebp+14h] +
call sub_10082DC  +
jmp loc_10102FE  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx ebx +
cmp ecx eax +
jnz loc_100FDBC  +
cmp edx edi +
jnz loc_100FDBC  +
push offset dword_1060AD8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_100FDBC  +
***
inc eax  +
jmp loc_100FDE0  +
***
push eax  +
push dword ptr [ebp-14h]  +
lea ecx [ebp-4] +
call sub_1006610  +
mov edi eax +
test edi edi +
jge loc_100FE24  +
push dword ptr [ebp-14h]  +
call ds:__imp_CoTaskMemFree  +
jmp loc_100FE3D  +
***
push 0  +
push dword ptr [edi+38h]  +
push dword ptr [edi+34h]  +
push offset dword_10B2478  +
call sub_102E3FE  +
jmp loc_100FEA8  +
***
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx ebx +
cmp ecx eax +
jnz loc_10101A2  +
cmp edx esi +
jnz loc_10101A2  +
push offset dword_1060AE8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_10101A2  +
***
xor eax eax +
retn   +
***
push esi  +
call ds:DestroyIcon  +
jmp loc_101DA76  +
***
cmp eax 31h +
jbe loc_1019721  +
jmp loc_1019A2F  +
and [ebp+var_8] 0 +
jmp loc_1019A39  +
mov eax [ebx+38h] +
and eax 0FFFFFFFDh +
or eax 1 +
mov [ebx+38h] eax +
jmp loc_1060B3B  +
mov eax [ebx+38h] +
and eax 0FFFFFFFEh +
or eax 2 +
jmp loc_1060B27  +
and dword ptr [ebx+38h] 0FFFFFFFCh +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push 18h  +
push dword ptr [ebx+34h]  +
mov edi offset aSoftwareMicr_0 +
push edi  +
mov esi 80000001h +
push esi  +
mov [ebp+var_8] 4 +
call ds:__imp_SHRegGetValueW  +
cmp eax 2 +
jz loc_1060B71  +
cmp eax 3 +
jnz loc_1019AAD  +
mov eax [ebx+38h] +
push 4  +
and eax 3 +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
push 4  +
push 18h  +
push dword ptr [ebx+34h]  +
push edi  +
push esi  +
call ds:SHLWAPI_631  +
jmp loc_1019AAD  +
***
movzx eax [ebp+arg_8] +
shr eax 6 +
and eax 1 +
jmp loc_1016AB8  +
***
push dword ptr [edi+3Ch]  +
call ds:__imp_CoTaskMemFree  +
mov eax [esi+4] +
mov [edi+3Ch] eax +
mov [esi+4] ebx +
mov [ebp+var_4] ebx +
jmp loc_101D6BC  +
***
mov eax [ebp+arg_4] +
or dword ptr [eax] 8 +
jmp loc_1043CE2  +
***
mov esi [ebp+arg_0] +
mov eax [esi+30h] +
push dword ptr [eax+58h]  +
call sub_1043CF4  +
neg eax  +
sbb eax eax +
inc eax  +
push 4  +
mov [ebp+pvData] eax +
lea eax [ebp+pvData] +
push eax  +
mov eax [esi+30h] +
push 4  +
push dword ptr [eax+58h]  +
push offset aSoftwareMicr_8  +
push 80000001h  +
call ds:__imp_SHSetValueW  +
test eax eax +
jle loc_1060C0A  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_1043E85  +
push 0  +
push 0A220h  +
push 111h  +
call ds:GetShellWindow  +
push eax  +
call ds:PostMessageW  +
jmp loc_1043E85  +
***
push esi  +
call edx  +
jmp loc_101703B  +
***
mov eax [ebp+hMem] +
mov esi [ebp+pvData] +
mov dword ptr [eax] 1 +
jmp loc_10167E9  +
mov esi [ebp+pvData] +
jmp loc_10167E0  +
xor esi esi +
inc esi  +
jmp loc_10167F5  +
test byte ptr [edi+38h] 8 +
jnz loc_1016810  +
xor esi esi +
inc esi  +
jmp loc_1016810  +
push 2  +
pop esi  +
jmp loc_1016810  +
***
mov eax [edi+54h] +
test eax eax +
jz loc_101A05B  +
cmp dword ptr [ebp-10h] 0 +
jnz loc_1060CC6  +
call eax  +
test eax eax +
jz loc_1060CC6  +
test byte ptr [ebp+8] 40h +
jnz loc_101A05B  +
mov ecx edi +
call sub_10166A5  +
mov edi eax +
test edi edi +
jz loc_101A05B  +
or dword ptr [ebp+8] 40h +
push 4  +
lea eax [ebp+8] +
push eax  +
push 4  +
push edi  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:__imp_SHSetValueW  +
jmp loc_1060D44  +
push 40h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1060CDF  +
push edi  +
mov ecx eax +
call sub_1016A11  +
mov [ebp-4] eax +
jmp loc_1060CE3  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-4] +
test eax eax +
jz loc_1060D17  +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_1060D0F  +
push 0  +
push ecx  +
lea edi [esi+1D4h] +
mov eax [edi] +
push 100Ah  +
push eax  +
mov ecx esi +
call sub_1017D5D  +
test eax eax +
jz loc_1060D0F  +
inc dword ptr [edi]  +
mov ecx [ebp-4] +
call sub_100F319  +
test byte ptr [ebp+8] 40h +
jz loc_101A05B  +
mov ecx [ebp-8] +
call sub_10166A5  +
mov edi eax +
test edi edi +
jz loc_101A05B  +
push edi  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:SHDeleteValueW  +
and dword ptr [esi+158h] 0 +
push edi  +
call ebx  +
jmp loc_101A05B  +
***
push offset aShell32_dll  +
push esi  +
lea eax [ebp+psz2] +
push eax  +
call sub_100665F  +
xor ebx ebx +
mov [ebp+var_21C] ebx +
jmp loc_10168C4  +
xor ebx ebx +
jmp loc_101690C  +
xor ebx ebx +
mov eax [edi] +
lea ecx [ebp+psz1] +
push ecx  +
lea ecx [ebp+var_224] +
push ecx  +
push 1  +
mov esi 20000000h +
push edi  +
mov [ebp+psz1] esi +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_1060DAD  +
test [ebp+psz1] esi +
jz loc_1060DAD  +
push 3  +
pop eax  +
jmp loc_1060DAF  +
xor eax eax +
push [ebp+arg_8]  +
lea ecx [ebp+hIcon] +
push ecx  +
lea ecx [ebp+var_218] +
push ecx  +
push ebx  +
push eax  +
push offset aShell32_dll  +
call ds:CheckEscapesW  +
jmp loc_1016922  +
***
push 0Ch  +
call sub_1002B98  +
mov esi eax +
xor edi edi +
pop ecx  +
cmp esi edi +
jz loc_1038CEF  +
push esi  +
push edi  +
push edi  +
push offset dword_1030A08  +
call SHGetKnownFolderIDList  +
mov ebx eax +
cmp ebx edi +
jl loc_1060E6C  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
push offset dword_100671C  +
push dword ptr [esi]  +
call ds:__imp_SHBindToParent  +
mov ebx eax +
cmp ebx edi +
jl loc_1060E6C  +
lea eax [esi+4] +
push eax  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
call sub_10125A3  +
mov ebx eax +
cmp ebx edi +
jl loc_1060E63  +
mov eax [ebp+arg_0] +
push esi  +
push offset sub_101DA13  +
push edi  +
push esi  +
push 40Eh  +
push dword ptr [eax+38h]  +
call ds:SendMessageCallbackW  +
test eax eax +
jz loc_1060E63  +
xor esi esi +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi edi +
jz loc_1038CEF  +
push 1  +
mov ecx esi +
call sub_101DA2F  +
jmp loc_1038CEF  +
***
push 1  +
mov ecx edi +
call sub_101DA2F  +
jmp loc_101D9FB  +
***
lea eax [ebp+ppbc] +
push eax  +
push 1000h  +
call sub_1016E0A  +
test eax eax +
jl loc_1016D8A  +
mov eax [esi+30h] +
mov eax [eax+24h] +
push 0  +
push 0  +
lea ecx [ebp+var_10] +
push ecx  +
push [ebp+ppbc]  +
push eax  +
call ds:__imp_SHParseDisplayName  +
test eax eax +
jl loc_1060F14  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset dword_100671C  +
push [ebp+var_10]  +
call ebx  +
test eax eax +
jl loc_1060F0B  +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [edi+4Ch]  +
push [ebp+var_18]  +
push [ebp+var_C]  +
call sub_1016831  +
mov ebx eax +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [edi+48h]  +
call ds:off_10062D4  +
mov [esi+34h] eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push ebx  +
call ds:DestroyIcon  +
push [ebp+var_10]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+ppbc] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1016D8A  +
***
push 2  +
push [ebp+hIcon]  +
push [ebp+pszIconFile]  +
call ds:Shell_GetCachedImageIndexW  +
mov [esi+34h] eax +
jmp loc_1016FE5  +
***
push dword ptr [ebp-4]  +
mov ecx ebx +
call sub_101711D  +
inc dword ptr [ebp-4]  +
mov eax [ebp-4] +
cmp eax [esi] +
jnb loc_1016AF1  +
jmp loc_1060F3E  +
***
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
jmp loc_1016B0E  +
***
or eax 1 +
mov [esi+10h] eax +
jmp loc_1016BED  +
***
or [ebp-1Ch] eax +
jmp loc_1016C4F  +
***
cmp dword_10B24CC ebx +
jz loc_1060FDE  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1060F8E  +
test al al +
jnz loc_1060FDE  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 2010000h +
mov eax 80010000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_1060FDE  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_1060FDE  +
cmp ecx edi +
jnz loc_1060FDE  +
push offset dword_1061060  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov [ebp+var_4] 1 +
jmp loc_103E344  +
cmp dword_10B24CC eax +
jz loc_106104F  +
mov al byte_10B24D0 +
cmp al bl +
jnb loc_1060FFF  +
test al al +
jnz loc_106104F  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 2010000h +
mov eax 80010000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_106104F  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_106104F  +
cmp ecx edi +
jnz loc_106104F  +
push offset dword_1061070  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov [ebp+var_4] 2 +
jmp loc_103E344  +
***
mov ecx dword_10B24C0 +
mov edi dword_10B24C4 +
mov edx ecx +
and edx esi +
mov esi edi +
and esi eax +
cmp edx ecx +
jnz loc_103E37C  +
cmp esi edi +
jnz loc_103E37C  +
push offset dword_1061188  +
jmp loc_103F094  +
cmp dword_10B24CC ecx +
jz loc_103E37C  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10610CB  +
cmp al cl +
jnz loc_103E37C  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 2010000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_103E37C  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_103E37C  +
cmp ecx edi +
jnz loc_103E37C  +
push offset dword_10611A8  +
jmp loc_103F094  +
cmp dword_10B24CC ecx +
jz loc_103E37C  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1061138  +
cmp al cl +
jnz loc_103E37C  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 2010000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_103E37C  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_103E37C  +
cmp ecx edi +
jnz loc_103E37C  +
push offset dword_1061198  +
jmp loc_103F094  +
***
xor eax eax +
retn   +
***
mov [ecx+8] eax +
jmp loc_101BCD3  +
***
mov [ecx+4] eax +
jmp loc_101BD4A  +
***
xor eax eax +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi-4]  +
call ds:IUnknown_QueryService  +
jmp loc_103BDE8  +
***
push 4  +
call ds:GetSysColor  +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_197  +
push 1  +
push 6  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:DrawEdge  +
jmp loc_1038D97  +
***
add esi 3 +
jmp loc_101A47F  +
mov esi 1B67h +
jmp loc_101A47F  +
mov esi 1B66h +
jmp loc_101A47F  +
***
push eax  +
call ds:DeleteObject  +
xor eax eax +
mov dword_10B1154 eax +
jmp loc_101BE08  +
***
call sub_101BC95  +
push eax  +
mov ecx edi +
call sub_101B0FD  +
push eax  +
push dword ptr [esi+40h]  +
call ds:MulDiv  +
mov [esi+3Ch] eax +
jmp loc_101AFD0  +
mov ecx edi +
call sub_101B0FD  +
push eax  +
mov ecx edi +
call sub_101BC95  +
push eax  +
push dword ptr [esi+3Ch]  +
call ds:MulDiv  +
mov [esi+40h] eax +
jmp loc_101AFD0  +
push ebx  +
push ebx  +
push ebx  +
push 149h  +
push offset dword_10141A8  +
push offset dword_1036970  +
push dword ptr [esi+4]  +
call ds:SHLWAPI_484  +
jmp loc_101B0D9  +
***
or eax 0FFFFFFFFh +
jmp loc_101AEC2  +
***
add ecx 4 +
xor eax eax +
jmp loc_1039E7F  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+lParam]  +
xor esi esi +
push [ebp+hDC]  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call ds:SHELL32_644  +
mov edi eax +
cmp edi esi +
jz loc_1011911  +
cmp [ebp+var_4] 4000000h +
jnz loc_1061308  +
mov eax [ebp+var_8] +
cmp [eax] esi +
jz loc_1061308  +
mov eax [eax] +
cmp dword ptr [eax+2] 0Bh +
jnz loc_1061308  +
mov ecx [ebp+arg_0] +
push esi  +
call sub_101AECC  +
mov ecx [ebp+arg_0] +
push esi  +
push 0FFh  +
call sub_1014F45  +
push edi  +
call ds:SHELL32_645  +
jmp loc_1011911  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
jmp loc_103E18C  +
push 0  +
push 0FFh  +
mov ecx esi +
call sub_1014F45  +
push dword ptr [esi+50h]  +
push edi  +
call ds:InterlockedExchange  +
jmp loc_103E18C  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
call ds:DefWindowProcW  +
jmp loc_10118C0  +
***
push edi  +
mov edi [ebp+ppv] +
lea eax [ebp+Msg] +
push eax  +
mov ecx edi +
mov [ebp+Msg] 1 +
call sub_10925CD  +
xor esi esi +
cmp [ebp+Msg] 3 +
jnz loc_106138C  +
push esi  +
push esi  +
push esi  +
push 155h  +
push offset dword_10141A8  +
push offset dword_10369C0  +
push dword ptr [edi+4]  +
call ds:SHLWAPI_484  +
jmp loc_10613C7  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104A0BC  +
push 17h  +
push esi  +
push offset stru_104A0CC  +
mov [ebp+ppv] esi +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_10613BA  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push esi  +
push offset aMicrosoft_user  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_10613C7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 245h  +
push offset dword_1061410  +
call sub_1034B2D  +
xor eax eax +
pop edi  +
jmp loc_100DFF5  +
mov eax [ebp+ppv] +
mov eax [eax+4Ch] +
cmp eax 0FFFFFFFFh +
jnz loc_100DFE5  +
push 7F89h  +
push 0  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
xor eax eax +
inc eax  +
jmp loc_100DFF5  +
***
mov edi ds:GetSysColor +
push 7  +
call edi  +
mov ebx ds:SendMessageW +
push eax  +
push 0  +
push 1024h  +
push dword ptr [esi+30h]  +
call ebx  +
push 7  +
call edi  +
push 4  +
mov [esi+4Ch] eax +
call edi  +
push eax  +
push 0  +
push 1001h  +
push dword ptr [esi+30h]  +
mov [esi+50h] eax +
call ebx  +
push dword ptr [esi+50h]  +
push 0  +
push 1026h  +
push dword ptr [esi+30h]  +
call ebx  +
pop edi  +
pop ebx  +
jmp loc_105128F  +
***
sub ecx 8 +
jnz loc_103CE06  +
mov ecx [ebp+arg_0] +
add ecx 0FFFFFFE0h +
call sub_1092683  +
mov ecx [ebp+arg_14] +
push 3  +
pop edx  +
mov [ecx] dx +
mov [ecx+8] eax +
jmp loc_103CE04  +
mov edx [ebp+arg_0] +
lea ecx [edx+44Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_103CE04  +
push 2  +
mov dword ptr [ecx] 1 +
pop ecx  +
mov [ebp+var_2C] ecx +
mov [ebp+var_30] ecx +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 102Bh  +
push dword ptr [edx+10h]  +
jmp loc_103CDFE  +
mov esi [ebp+arg_0] +
add esi 0FFFFFFE0h +
mov ecx esi +
call sub_1092683  +
test eax eax +
jl loc_106152A  +
push 1  +
push eax  +
mov ecx esi +
call sub_109269B  +
jmp loc_103CE04  +
mov eax 80004005h +
jmp loc_103CE06  +
***
lea eax [ebp+var_3C] +
push eax  +
push 0  +
call sub_107C54F  +
jmp loc_101A5E6  +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+arg_4] +
mov [ebp+var_3C] eax +
jmp loc_101A5F1  +
***
push esi  +
push 104h  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call ds:SHLoadIndirectString  +
test eax eax +
jl loc_101C10E  +
push esi  +
lea eax [ebp+var_414] +
push eax  +
push 2  +
mov ecx edi +
call sub_101A563  +
mov esi eax +
jmp loc_101C10E  +
***
cmp esi [ebp+arg_0] +
jnb loc_101C250  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset dword_10615F4  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_10615E9  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_10615E0  +
push [ebp+var_4]  +
lea eax [esi+3] +
push [ebp+pv]  +
mov ecx edi +
push eax  +
call sub_101A563  +
push [ebp+pv]  +
add ebx eax +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc esi  +
cmp esi [ebp+var_8] +
jb loc_1061593  +
jmp loc_101C250  +
***
push 2Dh  +
mov [esi+44h] ebx +
mov [esi+48h] ebx +
call ds:GetSystemMetrics  +
add eax eax +
lea edi [esi+3Ch] +
mov [edi] eax +
mov [esi+40h] eax +
jmp loc_101B7D1  +
push 7  +
call ds:GetSysColor  +
push eax  +
push ebx  +
push 1024h  +
push dword ptr [esi+30h]  +
call edi  +
push 7  +
call ds:GetSysColor  +
push 4  +
mov [esi+4Ch] eax +
call ds:GetSysColor  +
mov [esi+50h] eax +
jmp loc_101B8B4  +
***
xor edi edi +
jmp loc_10162A0  +
xor eax eax +
jmp loc_10162A8  +
***
push 1  +
push dword ptr [edi+0Ch]  +
mov ecx esi +
call sub_109269B  +
jmp loc_10143CF  +
push 1  +
mov ecx esi +
call sub_1092683  +
push eax  +
jmp loc_1061663  +
and [ebp+var_30] 0 +
lea ecx [ebp+var_3C] +
push ecx  +
push 0FFFFFFFFh  +
push 102Bh  +
push eax  +
mov [ebp+var_2C] 2 +
call ds:SendMessageW  +
and dword ptr [esi+46Ch] 0 +
jmp loc_10143BF  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 7Bh  +
push esi  +
call sub_1092920  +
jmp loc_1011567  +
***
push edi  +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
and dword ptr [esi+0Ch] 0 +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
jmp loc_104AF79  +
***
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:__imp_SHELL32_21  +
test eax eax +
jz loc_104B8C4  +
xor edi edi +
jmp loc_104B8C4  +
***
or edi 0FFFFFFFFh +
jmp loc_101C3A0  +
***
push 4  +
call ds:GetSysColor  +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_197  +
jmp loc_104BD8C  +
***
cmp dword_10B24CC 0 +
jz loc_104B149  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1061734  +
test al al +
jnz loc_104B149  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edi 80000000h +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_104B149  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx esi +
mov esi dword_10B24C4 +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_104B149  +
cmp edx esi +
jnz loc_104B149  +
push offset dword_1068850  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_104B149  +
***
call ds:GetFocus  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+50h]  +
call ds:IsChild  +
test eax eax +
jnz loc_104B8E7  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp+10h] +
push edx  +
push offset dword_10697B8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_104B8E7  +
mov eax [ebp+10h] +
mov ecx [eax] +
push 0  +
push 4  +
push 0  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov esi eax +
mov eax [ebp+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_104B8E7  +
***
push 2  +
call ds:GetSystemMetrics  +
sub [ebp+var_B0] eax +
jmp loc_104AE7A  +
***
mov edi ds:GetSystemMetrics +
push 2Dh  +
call edi  +
add eax eax +
push 2Dh  +
mov [esi+68h] eax +
call edi  +
add eax eax +
mov [esi+6Ch] eax +
jmp loc_104AB26  +
push ebx  +
call sub_1002BEE  +
add esi 58h +
push esi  +
call sub_1002BEE  +
jmp loc_104AB66  +
***
mov ecx edi +
call sub_10368D9  +
jmp loc_104C7D8  +
***
cmp eax 4 +
jz loc_101C60B  +
mov [edi] ebx +
jmp loc_101C60B  +
***
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+var_10]  +
push [ebp+arg_0]  +
call sub_107F9AC  +
mov ebx eax +
cmp ebx esi +
jge loc_104CACD  +
jmp loc_104CB9B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_104CB9B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_104CB9B  +
***
push 5  +
pop ecx  +
mov esi offset loc_104CDB8 +
lea edi [ebp+var_1C] +
movs   +
push edx  +
mov [ebp+var_8] edx +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+6Ch]  +
push 0  +
jmp loc_10618B5  +
lea esi [ebx+88h] +
mov ecx [esi] +
cmp ecx edi +
jz loc_10618B1  +
push edx  +
call sub_1093B44  +
mov [esi] edi +
push 5  +
mov ebx [ebx+4Ch] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+94h]  +
jmp loc_103CE8E  +
***
cmp [esi+40h] ebx +
jz loc_104AC2C  +
mov dword ptr [esi+0A0h] 1 +
jmp loc_104AC71  +
push 1  +
call sub_1093B44  +
mov [edi] ebx +
jmp loc_104AC4D  +
***
push 1  +
call sub_1093B44  +
jmp loc_1050B5D  +
***
mov ecx offset aStartmenu_0 +
jmp loc_104CC71  +
cmp dword ptr [ebx+58h] 1 +
jnz loc_104CD6B  +
push dword ptr [eax]  +
mov ecx esi +
call sub_1093059  +
jmp loc_104CD6B  +
***
mov eax dword_10B24C0 +
mov ecx dword_10B24C4 +
and eax edi +
and ecx edx +
cmp eax dword_10B24C0 +
jnz loc_104BA16  +
cmp ecx dword_10B24C4 +
jnz loc_104BA16  +
push offset dword_1068850  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov bl byte_10B24D0 +
jmp loc_104BA16  +
cmp eax 4 +
jz loc_104B2ED  +
cmp eax 3 +
jnz loc_1061978  +
mov [ebp+var_4] edi +
jmp loc_104B33C  +
cmp eax 2 +
jnz loc_104B33C  +
mov [ebp+var_4] ecx +
jmp loc_104B33C  +
push ebx  +
push offset aInternet  +
call edi  +
test eax eax +
jz loc_104B330  +
push ebx  +
push offset aControlPanel  +
call edi  +
test eax eax +
jz loc_104B330  +
mov ecx [esi+0A4h] +
mov eax ecx +
sub eax 4 +
neg eax  +
sbb eax eax +
and eax ecx +
mov [ebp+var_4] eax +
jmp loc_104B330  +
push edi  +
mov ecx esi +
call sub_1094201  +
jmp loc_104B36D  +
mov eax [esi+0A4h] +
cmp eax 3 +
jz loc_10619E6  +
cmp eax edi +
jz loc_10619E6  +
xor eax eax +
inc eax  +
mov [ebp+var_4] eax +
jmp loc_10619EC  +
xor eax eax +
mov [ebp+var_4] edi +
inc eax  +
cmp [esi+8Ch] edi +
jnz loc_10619F9  +
cmp [ebp+arg_0] eax +
jnz loc_10619FF  +
mov [esi+90h] eax +
mov [ebp+var_18] edi +
jmp loc_104B376  +
cmp [ebp+var_4] 0FFFFFFFFh +
jz loc_104B3AF  +
push ecx  +
push ecx  +
push ecx  +
push 12Dh  +
push ebx  +
push offset dword_10369B0  +
push dword ptr [esi+18h]  +
mov [eax] ecx +
call edi  +
jmp loc_104B3AF  +
***
sub ecx 15h +
jnz loc_103C07A  +
lea ecx [ebx-10h] +
call sub_1092C29  +
mov ecx [ebp+pszPath] +
and [ebp+var_208] 0 +
push 3  +
pop edx  +
mov [ecx] dx +
mov [ecx+8] eax +
jmp loc_103C07A  +
call ds:GetFocus  +
push eax  +
push dword ptr [ebx+68h]  +
call ds:IsChild  +
test eax eax +
jnz loc_104BEBD  +
jmp loc_1061AD5  +
mov eax [ebx+3Ch] +
mov ecx [eax] +
lea edx [ebp+var_20C] +
push edx  +
push esi  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+78h]  +
cmp [ebp+var_20C] esi +
jl loc_103C07A  +
mov ebx [ebx+3Ch] +
mov eax [ebx] +
push 1  +
push [ebp+var_20C]  +
push ebx  +
call dword ptr [eax+3Ch]  +
jmp loc_103C07A  +
mov eax [ebp+var_20C] +
test dword ptr [eax+8] 40000h +
jnz loc_103C07A  +
mov ebx [ebx+3Ch] +
mov eax [ebx] +
lea ecx [ebp+var_20C] +
push ecx  +
push offset dword_10697B8  +
push ebx  +
call dword ptr [eax]  +
cmp eax esi +
mov [ebp+var_208] eax +
jl loc_103C07A  +
mov eax [ebp+var_20C] +
mov ecx [eax] +
push esi  +
push 4  +
push esi  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+var_208] eax +
mov eax [ebp+var_20C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_103C07A  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 12Dh  +
push eax  +
push offset dword_10369B0  +
push dword ptr [ebx+8]  +
call ds:SHLWAPI_484  +
cmp eax esi +
mov [ebp+var_208] eax +
jge loc_103C07A  +
cmp [ebx+80h] esi +
jnz loc_1061B93  +
cmp [ebx+70h] esi +
jnz loc_1061B93  +
mov edi ds:GetKeyState +
push 10h  +
mov dword ptr [ebx+84h] 1 +
call edi  +
test ax ax +
jge loc_1061B88  +
push 11h  +
call edi  +
test ax ax +
jge loc_1061B88  +
inc esi  +
mov [ebx+88h] esi +
jmp loc_103C07A  +
cmp [ebx+3Ch] esi +
jz loc_103C07A  +
lea edi [ebx-10h] +
mov ecx edi +
call sub_1092C29  +
cmp eax esi +
jl loc_1061BBD  +
push eax  +
mov ecx edi +
call sub_1094201  +
mov [ebp+var_208] eax +
jmp loc_103C07A  +
cmp dword ptr [ebx+70h] 1 +
jnz loc_103C07A  +
push 0FFFFFFFFh  +
jmp loc_1061BAB  +
mov eax [ebp+pv] +
cmp word ptr [eax+2] 3Ah +
jnz loc_103CF96  +
cmp [eax+4] si +
jz loc_104AF0F  +
jmp loc_103CF96  +
push offset dword_10351F0  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_103CF96  +
push [ebp+pszPath]  +
lea ecx [ebx-10h] +
call sub_1092CF4  +
jmp loc_103CFA4  +
***
cmp [ecx+4Ch] esi +
jz loc_10145E9  +
mov ecx [ecx+4Ch] +
mov eax [ecx] +
lea edx [ebp+lParam] +
push edx  +
push offset dword_10697B8  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
jl loc_10145E9  +
mov eax [ebp+lParam] +
mov ecx [eax] +
push esi  +
push 4  +
push esi  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov eax [ebp+lParam] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10145E9  +
***
cmp ebx 0FFFFFFFFh +
jnz loc_10117F6  +
push ebx  +
push dword ptr [ebp+10h]  +
mov ecx esi +
call sub_10937A9  +
mov eax [ebp+8] +
test eax eax +
jz loc_1061C6F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
jmp loc_1011813  +
***
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_101C539  +
***
mov eax [esi+0ACh] +
test eax eax +
jz loc_1061C62  +
push ebx  +
push eax  +
call ds:StrCmpW  +
test eax eax +
jnz loc_1061C62  +
push 1  +
mov ecx esi +
call sub_104B208  +
cmp dword ptr [esi+94h] 0 +
jz loc_1061C62  +
mov ecx esi +
call sub_103D5AC  +
jmp loc_1061C62  +
***
push dword ptr [ebp+10h]  +
mov ecx esi +
call sub_1093F5D  +
jmp loc_1061C62  +
***
lea eax [ebp+var_24] +
push eax  +
mov eax [ebp+var_4] +
push dword ptr [eax+38h]  +
call ebx  +
mov eax [ebp+var_18] +
sub eax [ebp+var_20] +
push 16h  +
add eax edi +
push eax  +
mov eax [ebp+var_1C] +
sub eax [ebp+var_24] +
add eax esi +
push eax  +
xor eax eax +
push eax  +
push eax  +
push eax  +
mov eax [ebp+var_4] +
push dword ptr [eax+38h]  +
call ds:SetWindowPos  +
jmp loc_1037AD9  +
***
mov eax [ebx+1Ch] +
cmp eax esi +
jz loc_1037FC7  +
lea ecx [ebp-20h] +
push ecx  +
push 138Ah  +
push esi  +
push dword ptr [ebx+2Ch]  +
push eax  +
call ds:GetThemeRect  +
test eax eax +
jl loc_1037FDB  +
mov eax [ebp+10h] +
mov ecx [eax+0Ch] +
sub ecx [eax+4] +
push edi  +
sub ecx [ebp-14h] +
push eax  +
add ecx [ebp-1Ch] +
mov esi eax +
lea edi [ebp-10h] +
movs   +
lea eax [ebp-10h] +
push eax  +
movs   +
push 0  +
push dword ptr [ebx+2Ch]  +
movs   +
push dword ptr [ebp+0Ch]  +
movs   +
push dword ptr [ebx+1Ch]  +
add [ebp-0Ch] ecx +
call ds:DrawThemeBackground  +
pop edi  +
jmp loc_1037FDB  +
***
push dword ptr [ebx+20h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_197  +
push 2  +
push 6  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:DrawEdge  +
jmp loc_1037FDB  +
***
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1061DAC  +
cmp edx edi +
jnz loc_1061DAC  +
push dword ptr [ebp+0Ch]  +
push offset dword_1061DB8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1026DBD  +
pop edi  +
jmp loc_103D091  +
***
push 4  +
call ds:GetSysColor  +
mov edi ds:GetSystemMetrics +
push 2Dh  +
mov [esi+4Ch] eax +
call edi  +
add eax eax +
push 2Dh  +
mov [ebp+var_21C] eax +
call edi  +
add eax eax +
push 2Eh  +
mov [ebp+var_218] eax +
call edi  +
add eax eax +
mov [ebp+var_214] eax +
mov eax [ebp+var_230] +
mov eax [eax+10h] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
mov [ebp+var_210] eax +
jmp loc_101987D  +
***
test eax eax +
jz loc_1039897  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1039897  +
***
and ecx 0FFFFEFFFh +
mov [esi+20h] ecx +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 12Dh  +
push offset dword_103B768  +
push offset dword_1036980  +
push dword ptr [ebx+1Ch]  +
call ds:SHLWAPI_484  +
cmp dword_10B24CC esi +
jz loc_1040BC1  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1061E6D  +
test al al +
jnz loc_1040BC1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1040BC1  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1040BC1  +
cmp edx edi +
jnz loc_1040BC1  +
push offset dword_1062010  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1040BC1  +
mov eax [ebx+34h] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov ecx [esi+0Ch] +
mov edx [ecx+8] +
cmp edx 25h +
jz loc_1061EF5  +
cmp edx 27h +
jnz loc_1061F78  +
lea eax [ebp+var_20C] +
lea edi [eax+2] +
mov [ebp+var_210] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1061F04  +
sub eax [ebp+var_210] +
sar eax 1 +
jnz loc_1061F78  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+38h]  +
call ds:GetClientRect  +
mov ecx [ebp+Rect.right] +
mov eax [ebp+Rect.left] +
and dword ptr [esi+20h] 0FFFFEFFFh +
add eax ecx +
mov ecx [ebp+Rect.bottom] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+14h] eax +
mov eax [ebp+Rect.top] +
add eax ecx +
mov ecx [esi+0Ch] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+18h] eax +
cmp dword ptr [ecx+8] 25h +
mov eax [esi+20h] +
jnz loc_1040BC1  +
or eax 10000h +
mov [esi+20h] eax +
jmp loc_1040BC1  +
cmp edx 26h +
jz loc_1061F86  +
cmp edx 28h +
jnz loc_1040BC1  +
and dword ptr [esi+20h] 0FFFFEFFFh +
mov eax 4000h +
mov word ptr [ebp+Rect.left] ax +
xor eax eax +
lea edi [ebp+Rect.left+2] +
stos   +
stos   +
stos   +
push 0  +
stos   +
lea eax [ebp+Rect] +
push eax  +
push 0  +
push 144h  +
push offset dword_103B768  +
push offset dword_10128F0  +
push dword ptr [ebx+1Ch]  +
mov [ebp+Rect.right] ecx +
call ds:SHLWAPI_484  +
test eax eax +
jl loc_1061FED  +
and dword ptr [esi+20h] 0FFFFFEFFh +
cmp dword ptr [ebx+5Ch] 2 +
mov eax [esi+20h] +
jnz loc_1062007  +
and eax 0FFFFF7FFh +
mov [esi+20h] eax +
jmp loc_1062007  +
cmp dword ptr [ebx+5Ch] 2 +
jnz loc_1040BC1  +
and dword ptr [esi+20h] 0FFFFF7FFh +
jmp loc_1040BC1  +
and dword ptr [esi+10h] 0 +
xor eax eax +
inc eax  +
jmp loc_103980E  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
cmp bx 2 +
jnz loc_10114DE  +
mov eax ebx +
shr eax 10h +
test al 1 +
jz loc_10114DE  +
push 0  +
lea eax [ecx+28h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_10114DE  +
***
mov eax [ecx+40h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_10113F3  +
***
push 4  +
call ds:GetSysColor  +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_197  +
push 3  +
push 6  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call ds:DrawEdge  +
jmp loc_1041FF0  +
***
push dword ptr [ebp+10h]  +
push offset aAllprogramsord  +
push offset aSoftwareMic_32  +
push 80000001h  +
call ds:SHOpenRegStream2W  +
mov [esi] eax +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
jmp loc_1042742  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
mov ebx 585808h +
jmp loc_101C84A  +
***
mov edi ds:GetSysColor +
push 17h  +
call edi  +
push 18h  +
mov [esi+64h] eax +
call edi  +
mov [esi+60h] eax +
jmp loc_101C9AB  +
***
mov eax [ebp+arg_0] +
cmp dword ptr [eax+40h] 0 +
jnz loc_1036B14  +
mov esi ds:GetSysColor +
push 0Eh  +
call esi  +
mov ecx [ebp+arg_10] +
push 0Dh  +
mov [ecx] eax +
call esi  +
mov ecx [ebp+arg_14] +
mov [ecx] eax +
jmp loc_1036B14  +
push dword ptr [edi]  +
lea ecx [esi-8] +
call sub_1095615  +
test eax eax +
jnz loc_1036B00  +
mov eax [esi+5Ch] +
mov ecx [ebp+arg_14] +
mov [ebx] eax +
mov eax [esi+58h] +
mov [ecx] eax +
jmp loc_1036B00  +
push dword ptr [edi]  +
lea ecx [esi-8] +
call sub_10954CD  +
test eax eax +
jnz loc_1036B13  +
push 10h  +
call ds:GetSysColor  +
mov [ebx] eax +
jmp loc_1036B13  +
***
xor ecx ecx +
inc ecx  +
cmp [ebp+arg_C] ecx +
jnz loc_10428B5  +
mov eax [ebp+arg_10] +
cmp eax edi +
jz loc_106221C  +
cmp word ptr [eax+8] 0FFFFh +
jz loc_10428B5  +
mov esi [ebp+arg_0] +
mov [ebp+arg_4] edi +
mov [ebp+arg_8] ecx +
cmp [esi+20h] edi +
jz loc_10428B5  +
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push 6  +
push edi  +
push eax  +
call dword ptr [ecx+48h]  +
test eax eax +
jl loc_10428B5  +
push edi  +
push edi  +
push edi  +
push 137h  +
push ebx  +
push offset dword_10369C0  +
push dword ptr [esi+8]  +
call ds:SHLWAPI_484  +
test eax eax +
jnz loc_10622C7  +
mov eax [ebp+arg_4] +
mov [ebp+arg_C] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push edi  +
push [ebp+arg_C]  +
push eax  +
call dword ptr [ecx+48h]  +
test eax eax +
jnz loc_10622BE  +
push [ebp+arg_0]  +
lea eax [ebp+arg_C] +
push eax  +
call ds:__imp_IUnknown_Set  +
push [ebp+arg_C]  +
lea ecx [esi-18h] +
call sub_1095615  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_10622B0  +
mov eax [esi+20h] +
push [ebp+arg_C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
mov [ebp+arg_8] edi +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+arg_8] edi +
jnz loc_106226D  +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push dword ptr [esi+2Ch]  +
call ds:SetFocus  +
cmp [ebp+arg_8] edi +
jz loc_10622E1  +
mov esi [esi+20h] +
push [ebp+arg_4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10428B5  +
***
push 4  +
call ds:GetSysColor  +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_197  +
push 2  +
push 6  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:DrawEdge  +
jmp loc_1038971  +
***
cmp [ebp+lParam] 0FFFFFFFFh +
jz loc_10160C0  +
lea eax [ebp+var_1A8] +
push eax  +
lea eax [ebp+var_19C] +
push eax  +
push [ebp+lParam]  +
call ds:off_10110E0  +
test eax eax +
jz loc_10160C0  +
push 2Dh  +
call ds:GetSystemMetrics  +
mov ecx [ebp+var_19C] +
lea eax [ecx+eax*2] +
mov [ebp+var_19C] eax +
jmp loc_10160C0  +
push edi  +
push ebx  +
push 1601h  +
push dword ptr [esi+24h]  +
call ds:SendMessageW  +
push edi  +
call sub_1011ACD  +
jmp loc_10161C7  +
***
push [ebp+pt.y]  +
lea eax [ebp+var_20] +
push [ebp+pt.x]  +
push eax  +
call esi  +
test eax eax +
jz loc_104DB7A  +
push 62h  +
jmp loc_104DB79  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi+0Ch]  +
call ds:IUnknown_QueryService  +
jmp loc_1040CB0  +
***
push eax  +
call ds:DestroyIcon  +
jmp loc_1050C7D  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
mov esi ds:GetSystemMetrics +
push 2Dh  +
call esi  +
add eax eax +
push 2Eh  +
mov [ebp+var_14] eax +
mov [ebp+X] eax +
call esi  +
mov ecx [ebp+Rect.bottom] +
mov edi eax +
mov eax ecx +
sub eax [ebp+Rect.top] +
push 3  +
cdq   +
add edi edi +
pop esi  +
idiv  esi +
mov [ebp+Y] edi +
mov [ebp+var_C] eax +
jmp loc_1015F54  +
mov eax [ebp+cy] +
sub eax edi +
cdq   +
sub eax edx +
sar eax 1 +
neg eax  +
add [ebp+Y] eax +
jns loc_1015F8D  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov [ebp+Y] ecx +
cmp [ebp+cy] eax +
jle loc_1015F8D  +
mov [ebp+cy] eax +
jmp loc_1015F8D  +
***
push 1Dh  +
call ds:IsOS  +
neg eax  +
sbb eax eax +
inc eax  +
inc eax  +
mov [ebp+var_3B0] eax +
jmp loc_1011A48  +
mov [ebp+var_3B0] 1 +
jmp loc_1011A55  +
***
cmp [esi+30h] edi +
jnz loc_1062495  +
push 214h  +
lea eax [ebp-3A8h] +
push edi  +
push eax  +
mov dword ptr [ebp-3ACh] 218h +
call memset  +
add esp 0Ch +
lea eax [ebp-3ACh] +
push eax  +
push 101h  +
push 83h  +
call ds:SHGetStockIconInfo  +
test eax eax +
jl loc_1062495  +
mov eax [ebp-3A8h] +
mov [esi+30h] eax +
push dword ptr [esi+30h]  +
jmp loc_101A0FC  +
***
cmp [ebp+var_4] ebx +
jz loc_1019F17  +
mov ebx 80004005h +
jmp loc_1019FAC  +
mov eax off_10B1088 +
cmp eax offset off_10B1088 +
jz loc_1019FAB  +
test byte ptr [eax+1Ch] 2 +
jz loc_1019FAB  +
push ebx  +
push offset dword_106252C  +
push 0Ah  +
jmp loc_106251A  +
mov eax off_10B1088 +
cmp eax offset off_10B1088 +
jz loc_1019FAB  +
test byte ptr [eax+1Ch] 2 +
jz loc_1019FAB  +
push ebx  +
push offset dword_106252C  +
push 0Bh  +
jmp loc_106251A  +
mov eax off_10B1088 +
cmp eax offset off_10B1088 +
jz loc_1019FAB  +
test byte ptr [eax+1Ch] 2 +
jz loc_1019FAB  +
push ebx  +
push offset dword_106252C  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_106E885  +
jmp loc_1019FAB  +
***
mov [ebp+var_19C] 3 +
jmp loc_1038A63  +
cmp [ebp+lParam] 0FFFFFFFFh +
jz loc_1038B91  +
lea eax [ebp+var_1A0] +
push eax  +
lea eax [ebp+var_1A4] +
push eax  +
push [ebp+lParam]  +
mov [ebp+var_1A4] ebx +
mov [ebp+var_1A0] ebx +
call ds:off_10110E0  +
test eax eax +
jz loc_1038B91  +
mov edi [ebp+var_1A0] +
mov eax [ebp+var_1B0] +
mov ecx [ebp+var_1BC] +
sub eax edi +
add eax [ebp+var_1B8] +
push ebx  +
push [ebp+lParam]  +
cdq   +
sub eax edx +
mov edx [ebp+var_1A4] +
sar eax 1 +
mov [ebp+var_1CC] eax +
add eax edi +
mov [ebp+var_1C4] eax +
lea eax [ebp+var_1D0] +
push eax  +
push [ebp+var_19C]  +
xor eax eax +
mov [ebp+var_1D0] ecx +
add ecx edx +
cmp dword ptr [esi+3Ch] 0Eh +
mov [ebp+var_1C8] ecx +
setnz al  +
add eax 25h +
push eax  +
push [ebp+wParam]  +
push dword ptr [esi+2Ch]  +
call ds:DrawThemeIcon  +
push 2Dh  +
call ds:GetSystemMetrics  +
mov ecx [ebp+var_1A4] +
lea eax [ecx+eax*2] +
add [ebp+var_1BC] eax +
jmp loc_1038B91  +
***
and dword ptr [esi+40h] 0 +
mov ecx esi +
pop esi  +
jmp sub_1095B99  +
***
push dword ptr [ebp+18h]  +
mov eax [ebp+0Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+10h]  +
mov eax [ebp+8] +
mov ecx [eax+4] +
call sub_1095B79  +
jmp loc_104D025  +
***
xor ebx ebx +
cmp dword_10B24CC ebx +
jz loc_10626A0  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1062652  +
cmp al bl +
jnz loc_10626A0  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 400000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_10626A0  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10626A0  +
cmp edx edi +
jnz loc_10626A0  +
push offset dword_10626C0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [ebp+0Ch] +
mov esi [ebp+8] +
mov ecx [esi+4] +
xor edi edi +
inc edi  +
push edi  +
push dword ptr [eax+10h]  +
call sub_1095C17  +
mov [esi+0Ch] edi +
jmp loc_104D023  +
***
mov edx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax edx +
and eax edi +
and ecx esi +
cmp eax edx +
jnz loc_104E077  +
cmp ecx dword_10B24C4 +
jnz loc_104E077  +
push offset dword_1068980  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_104E077  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_104E0AD  +
cmp edx edi +
jnz loc_104E0AD  +
push offset dword_1068990  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_104E0AD  +
mov eax 90h +
jmp loc_104E135  +
***
push esi  +
push esi  +
push dword ptr [ebx+24h]  +
mov [ebx+34h] esi +
call ds:InvalidateRect  +
jmp loc_104D182  +
cmp [ebp+arg_0] 62h +
jnz loc_104D182  +
push edi  +
cmp dword_10B24CC esi +
jz loc_10627DC  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_106278C  +
test al al +
jnz loc_10627DC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 400000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_10627DA  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10627DA  +
cmp edx edi +
jnz loc_10627DA  +
push offset dword_1062818  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor esi esi +
push esi  +
push dword ptr [ebx+44h]  +
mov ecx ebx +
call sub_1095C17  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+24h]  +
call ds:GetWindowRect  +
lea eax [ebp+var_1C] +
push eax  +
push 0CCh  +
push dword ptr [ebx+20h]  +
call sub_103C26A  +
pop edi  +
jmp loc_104D182  +
***
or dword ptr [esi+20h] 4000h +
push edi  +
xor eax eax +
lea edi [ebp+Points] +
stos   +
stos   +
stos   +
stos   +
push ecx  +
lea eax [ebp+Points] +
push eax  +
mov ecx ebx +
call sub_10146FB  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [ebx+20h]  +
push dword ptr [ebx+24h]  +
call ds:MapWindowPoints  +
mov ecx [ebp+var_8] +
mov eax [ebp+Points.x] +
add eax ecx +
mov ecx [ebp+var_4] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+14h] eax +
mov eax [ebp+Points.y] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+18h] eax +
pop edi  +
jmp loc_104E28B  +
***
cmp dword ptr [eax+8] 0FFFFFDF7h +
jnz loc_1011394  +
cmp dword ptr [ebx+40h] 0 +
jz loc_1011394  +
push 0Ah  +
pop ecx  +
xor eax eax +
lea edi [ebp+mi] +
stos   +
lea eax [ebp+Rect] +
push eax  +
push esi  +
mov esi ds:GetWindowRect +
mov [ebp+mi.cbSize] 28h +
call esi  +
lea eax [ebp+var_18] +
push eax  +
push dword ptr [ebx+28h]  +
call esi  +
push 5  +
call ds:GetSystemMetrics  +
mov esi eax +
mov eax [ebp+Rect.left] +
lea ecx [ebp+mi] +
push ecx  +
shl esi 3 +
lea edi [eax+esi] +
mov eax [ebp+Rect.bottom] +
push 2  +
push eax  +
push edi  +
mov [ebp+Y] eax +
call ds:MonitorFromPoint  +
push eax  +
call ds:GetMonitorInfoW  +
mov ecx [ebp+var_10] +
sub ecx [ebp+var_18] +
mov eax [ebp+mi.rcMonitor.right] +
add ecx edi +
cmp ecx eax +
jle loc_1062910  +
mov edi [ebp+Rect.right] +
sub edi [ebp+var_10] +
sub edi esi +
add edi [ebp+var_18] +
cmp edi [ebp+mi.rcMonitor.left] +
jge loc_1062910  +
sub eax [ebp+var_10] +
add eax [ebp+var_18] +
mov edi eax +
mov eax [ebp+var_C] +
sub eax [ebp+var_14] +
mov ecx [ebp+mi.rcMonitor.bottom] +
add eax [ebp+Y] +
cmp eax ecx +
jle loc_106293A  +
mov eax [ebp+Rect.top] +
sub eax [ebp+var_C] +
add eax [ebp+var_14] +
cmp eax [ebp+mi.rcMonitor.top] +
mov [ebp+Y] eax +
jge loc_106293A  +
sub ecx [ebp+var_C] +
add ecx [ebp+var_14] +
mov [ebp+Y] ecx +
push 211h  +
xor eax eax +
push eax  +
push eax  +
push [ebp+Y]  +
push edi  +
push eax  +
push dword ptr [ebx+28h]  +
call ds:SetWindowPos  +
jmp loc_101A223  +
xor eax eax +
cmp eax [ebp+arg_0] +
sbb eax eax +
neg eax  +
mov [ebp+Y] eax +
cmp [ebx+4Ch] eax +
jz loc_1011394  +
cmp dword_10B24CC 0 +
mov edi 400000h +
mov esi 80000000h +
jz loc_10629D1  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_106298B  +
test al al +
jnz loc_10629D1  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10629D1  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_10629D1  +
cmp edx dword_10B24C4 +
jnz loc_10629D1  +
push offset dword_1068980  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [ebx+58h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp dword_10B24CC 0 +
jz loc_1062A34  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10629F0  +
test al al +
jnz loc_1062A34  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1062A34  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1062A34  +
cmp edx edi +
jnz loc_1062A34  +
push offset dword_1068990  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [ebp+Y] +
and dword ptr [ebx+50h] 0 +
mov [ebx+4Ch] eax +
jmp loc_1011394  +
push 0  +
push 0  +
mov ecx ebx +
call sub_1015EF7  +
jmp loc_101A223  +
xor esi esi +
jmp loc_104D274  +
push 0  +
push 0  +
push 0F3h  +
push esi  +
call ds:SendMessageW  +
jmp loc_1011394  +
***
push 1  +
push dword ptr [ebp+10h]  +
call sub_1015A06  +
jmp loc_10112A1  +
***
push eax  +
push [ebp+arg_8]  +
call ds:SetBkColor  +
jmp loc_1039415  +
***
push dword ptr [ecx+34h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_197  +
jmp loc_1039449  +
***
mov [ecx+6CCh] eax +
jmp loc_1040E72  +
***
push edi  +
mov edi ds:GetSysColor +
push 7  +
call edi  +
push 4  +
mov [esi+54h] eax +
call edi  +
push 4  +
mov [esi+5Ch] eax +
call ds:GetSysColorBrush  +
mov [esi+4Ch] eax +
pop edi  +
jmp loc_10512D4  +
***
push eax  +
call ebx  +
jmp loc_1050A41  +
***
mov [ebp+var_38] 80h +
jmp loc_1039149  +
mov [ebp+var_14] 3 +
jmp loc_10391BD  +
cmp [ebp+var_8] ecx +
jz loc_1062B18  +
push dword ptr [ebx+60h]  +
call ds:GetSysColorBrush  +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push edi  +
call ds:FillRect  +
push dword ptr [ebx+64h]  +
call ds:GetSysColor  +
push eax  +
jmp loc_1062B49  +
cmp [ebx+0BCh] ecx +
jz loc_1062B38  +
push 18h  +
call ds:GetSysColorBrush  +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push edi  +
call ds:FillRect  +
push 17h  +
jmp loc_1062B0F  +
push dword ptr [ebx+4Ch]  +
lea eax [ebp+Rect] +
push eax  +
push edi  +
call ds:FillRect  +
push dword ptr [ebx+54h]  +
push edi  +
call ds:SetTextColor  +
jmp loc_10391CF  +
test eax eax +
jge loc_1062B60  +
xor ecx ecx +
jmp loc_1039201  +
mov ecx eax +
jmp loc_1039201  +
mov [ebp+uFormat] 22024h +
jmp loc_1039226  +
push [ebp+uFormat]  +
lea eax [ebp+Rect] +
push eax  +
push 0FFFFFFFFh  +
push edi  +
push [ebp+hDC]  +
call ds:DrawTextW  +
jmp loc_1039292  +
sub [ebp+rc.top] eax +
jmp loc_10392C2  +
push dword ptr [ebx+44h]  +
push [ebp+hDC]  +
call ds:SelectObject  +
test eax eax +
jz loc_10392F6  +
mov eax [ebx+0A4h] +
cmp eax esi +
jg loc_1062BB3  +
xor eax eax +
mov ecx [ebx+7Ch] +
sub ecx [ebx+80h] +
add ecx eax +
add [ebp+rc.top] ecx +
mov eax [ebp+var_10] +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFFC1h +
add ecx 77h +
movzx ecx cx +
mov [ebp+var_8] ecx +
cmp [ebp+var_3C] esi +
jz loc_1062BEB  +
neg eax  +
sbb eax eax +
and eax 3Fh +
add eax 38h +
movzx eax ax +
mov [ebp+var_8] eax +
lea eax [ebp+rc] +
push eax  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_10392F6  +
push esi  +
push 1  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push [ebp+var_38]  +
push [ebp+rc.top]  +
push [ebp+rc.left]  +
push [ebp+hDC]  +
call sub_107E637  +
mov eax [ebx+90h] +
add eax [ebp+rc.left] +
mov [ebp+rc.right] eax +
jmp loc_10392F6  +
***
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi ds:GetSysColor +
push 7  +
call edi  +
push 4  +
mov [esi+54h] eax +
call edi  +
push 4  +
mov [esi+5Ch] eax +
call ds:GetSysColorBrush  +
push 2Dh  +
mov [esi+4Ch] eax +
mov dword ptr [esi+60h] 0Dh +
mov dword ptr [esi+64h] 0Eh +
call ebx  +
add eax eax +
push 2Dh  +
mov [esi+94h] eax +
call ebx  +
add eax eax +
mov [esi+98h] eax +
jmp loc_101B209  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 7Bh  +
push esi  +
call sub_1095D77  +
jmp loc_101177A  +
***
and dword ptr [ebx] 0 +
lea eax [ebp+arg_8] +
push eax  +
push 4  +
lea eax [ebp+var_8] +
push eax  +
push 14h  +
push [ebp+nIndex]  +
call edi  +
test eax eax +
jl loc_102F9EA  +
cmp [ebp+var_8] 0 +
jnz loc_102F9F1  +
jmp loc_102F9EA  +
***
mov [esi] ebx +
jmp loc_10304DC  +
mov eax [esi] +
cmp eax 10h +
jb loc_1062CCB  +
cmp eax 13h +
jb loc_1062CCE  +
add eax 10h +
mov [esi] eax +
jmp loc_10304F7  +
***
inc esi  +
jmp loc_1045839  +
***
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov ebx eax +
jmp loc_10457B5  +
push edi  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_10457D3  +
push edi  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_10457D3  +
mov esi ds:GetWindow +
push 4  +
push edi  +
jmp loc_1062D18  +
cmp eax ebx +
jz loc_1062D26  +
push 4  +
push eax  +
call esi  +
test eax eax +
jnz loc_1062D11  +
cmp eax ebx +
jnz loc_10457D3  +
push eax  +
call sub_1005CD2  +
test eax eax +
jz loc_10457D3  +
push ebx  +
mov [ebp+arg_0] edi +
call ds:IsIconic  +
mov [ebp+var_4] eax +
jmp loc_10457D3  +
push 9  +
push [ebp+hWnd]  +
call ds:ShowWindowAsync  +
jmp loc_10457F9  +
***
mov dword ptr [edi] 0EA60h +
jmp loc_102ED2B  +
***
xor eax eax +
inc eax  +
jmp loc_102E717  +
***
or dword ptr [esi+24h] 10h +
jmp loc_101F263  +
***
mov esi [esi+94h] +
mov eax [esi] +
push edi  +
push edi  +
push 31Ah  +
push esi  +
call dword ptr [eax+38h]  +
push eax  +
call ds:SendMessageW  +
jmp loc_101E270  +
***
mov ecx [ebp-8] +
mov eax [ebp-18h] +
sub ecx [ebp-10h] +
sub eax [ebp-20h] +
jmp loc_10055A9  +
***
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1008ECE  +
***
push eax  +
call ds:off_1035224  +
test eax eax +
jz loc_1062DBB  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
push eax  +
call ds:DestroyWindow  +
mov [edi-8] esi +
jmp loc_102E673  +
***
mov ecx dword_10B10D8 +
add ecx ebx +
add ecx eax +
add ecx [ebp+arg_0] +
push 0  +
mov [esi+4] ecx +
mov eax [edi+8Ch] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov eax [edi+8Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
add eax [ebp+arg_0] +
mov dword ptr [esi+18h] 1 +
mov [esi+8] eax +
jmp loc_1011D45  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
lea esi [edi-8] +
mov ecx esi +
call sub_101E21C  +
mov ecx esi +
call sub_10075FE  +
jmp loc_1011D6D  +
***
mov dword ptr [edi+48h] 0FFFF00h +
jmp loc_1033B9A  +
***
call dword ptr [eax+64h]  +
test eax eax +
mov eax [ebp+0Ch] +
jz loc_1062E49  +
mov dword ptr [eax] offset aTaskband2com_2 +
jmp loc_101E872  +
***
mov dword ptr [eax] offset aTaskband2com_3 +
jmp loc_101E872  +
***
call dword ptr [eax+64h]  +
test eax eax +
mov eax [ebp+0Ch] +
jz loc_1062E69  +
mov dword ptr [eax] offset aTaskband2small +
jmp loc_101E872  +
***
mov dword ptr [eax] offset aTaskband2sma_0 +
jmp loc_101E872  +
***
cmp [ebp+arg_4] eax +
jnz loc_1062F6F  +
mov eax [esi] +
push esi  +
call dword ptr [eax+6Ch]  +
test al 2 +
jnz loc_102BD38  +
and [ebp+var_8] 0 +
cmp [ebp+arg_8] 0 +
jz loc_102BD3E  +
push esi  +
push [ebp+arg_8]  +
call ds:__imp_IUnknown_Set  +
jmp loc_102BD3E  +
***
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+arg_10] +
push edx  +
push eax  +
mov [ebp+arg_10] edi +
call dword ptr [ecx+18h]  +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_1053F69  +
push esi  +
mov esi ds:__imp_IUnknown_Set +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov [ebp+arg_0] edi +
mov eax [ebp+arg_10] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_106300F  +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_8] +
jz loc_1062FFA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
cmp eax [ebp+arg_8] +
jz loc_1062FFA  +
cmp [ebp+var_4] edi +
jz loc_1063001  +
push [ebp+arg_0]  +
mov [ebp+var_8] 1 +
push ebx  +
call esi  +
push [ebp+arg_4]  +
push [ebp+arg_C]  +
call esi  +
jmp loc_1063001  +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_8] edi +
jz loc_1062FB7  +
mov eax [ebp+arg_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
jmp loc_1053F69  +
***
dec [ebp+var_4]  +
push [ebp+var_4]  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+44h]  +
jmp loc_100D172  +
***
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+14h]  +
xor ebx ebx +
jmp loc_100CD37  +
***
call dword ptr [ecx+1Ch]  +
mov ecx [ebp+var_4] +
sub ecx eax +
dec ecx  +
jmp loc_10085B6  +
***
mov [esi] ax +
inc eax  +
mov [esi+4] ax +
jmp loc_10445BC  +
mov [esi] ax +
inc eax  +
mov [esi+4] ax +
jmp loc_10445CA  +
mov [esi+2] ax +
inc eax  +
mov [esi+6] ax +
jmp loc_10445D8  +
mov [esi+2] ax +
inc eax  +
mov [esi+6] ax +
jmp loc_105434F  +
***
mov eax edi +
jmp loc_100A826  +
***
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
cmp eax [ebp+var_C] +
jz loc_10630AF  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call sub_1052D9F  +
test eax eax +
jz loc_1003369  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+var_8] eax +
jmp loc_1003369  +
***
mov [eax] ecx +
jmp loc_1040282  +
mov eax [ebp+arg_4] +
mov [ebp+var_C] ebx +
test eax eax +
jz loc_104030A  +
mov [eax] ebx +
jmp loc_104030A  +
***
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1043FA9  +
cmp edx edi +
jnz loc_1043FA9  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset dword_1063120  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
jmp loc_1043FA9  +
***
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push eax  +
cmp [ebp+arg_4] edi +
jnz loc_1063143  +
call dword ptr [ecx+70h]  +
mov edi eax +
jmp loc_10631A2  +
call dword ptr [ecx+6Ch]  +
test byte ptr [ebp+arg_4] 1 +
mov esi eax +
jz loc_1063160  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0FFFFh  +
push eax  +
call dword ptr [ecx+60h]  +
mov edi eax +
xor esi esi +
test byte ptr [ebp+arg_4] 4 +
jz loc_106316B  +
push 2  +
pop esi  +
jmp loc_106317E  +
test byte ptr [ebp+arg_4] 8 +
jz loc_1063176  +
xor esi esi +
inc esi  +
jmp loc_106317E  +
test byte ptr [ebp+arg_4] 2 +
jz loc_106317E  +
xor esi esi +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_10631A2  +
xor edi edi +
inc edi  +
cmp esi edi +
jnz loc_10631AA  +
push 107Ah  +
push offset dword_1063270  +
call sub_1034B2D  +
test edi edi +
jz loc_1063244  +
cmp dword_10B24CC 0 +
jz loc_1063214  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10631C0  +
test al al +
jnz loc_1063214  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1063214  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1063214  +
cmp edx edi +
jnz loc_1063214  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset dword_1063260  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
mov esi [ebp+var_C] +
push 0  +
push [ebp+var_4]  +
add esi 94h +
mov eax [esi] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+98h]  +
test eax eax +
jz loc_1063244  +
mov esi [esi] +
mov eax [esi] +
push 0  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push esi  +
call dword ptr [eax+18h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
jmp loc_1043FED  +
***
mov eax [esi+0A4h] +
push dword ptr [ebp-18h]  +
mov ecx [eax] +
push eax  +
mov dword ptr [ebp-0Ch] 1 +
call dword ptr [ecx+14h]  +
jmp loc_1036485  +
***
lea eax [ebp-21Ch] +
push eax  +
push dword ptr [ebp-214h]  +
push dword ptr [ebp-210h]  +
call SHELL32_790  +
jmp loc_102AB5B  +
***
lea eax [ebp-20Ch] +
push eax  +
call ds:PathParseIconLocationW  +
push 0  +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call ds:Shell_GetCachedImageIndexW  +
test eax eax +
jl loc_1053534  +
movzx edi ax +
or edi 10000h +
jmp loc_1053534  +
***
mov edi 1FFFEh +
jmp loc_100BD7A  +
***
xor eax eax +
push 206h  +
mov [ebp+String2] ax +
lea eax [ebp-61Ah] +
push esi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_648] +
push eax  +
lea eax [ebp+String2] +
push eax  +
push esi  +
push esi  +
push offset aNewexename  +
push [ebp+var_630]  +
mov [ebp+var_648] 208h +
call edi  +
test eax eax +
jnz loc_105272F  +
mov [ebp+var_638] esi +
mov eax [ebx+0A8h] +
cmp eax esi +
jz loc_1063356  +
mov eax [eax] +
jmp loc_1063358  +
xor eax eax +
mov ecx [ebp+var_638] +
cmp ecx eax +
jge loc_105272F  +
mov eax [ebx+0A8h] +
mov eax [eax+4] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
push eax  +
call ds:__imp_PathFindFileNameW  +
cmp eax esi +
jz loc_1063395  +
lea ecx [ebp+String2] +
push ecx  +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_106339D  +
inc [ebp+var_638]  +
jmp loc_1063348  +
lea eax [ebp+var_650] +
push eax  +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
push eax  +
call ds:GetBinaryTypeW  +
test eax eax +
jz loc_105272F  +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
mov ecx ebx +
call sub_10075FE  +
jmp loc_105272F  +
***
mov [ebp-4] ebx +
push edi  +
push 8000h  +
push dword ptr [ebp+8]  +
call sub_10270A3  +
mov esi eax +
cmp esi ebx +
jge loc_102414E  +
jmp loc_10241DB  +
***
mov [ebp-4] eax +
jmp loc_100B10B  +
***
call dword ptr [ecx+1Ch]  +
or edi 0FFFFFFFFh +
sub edi eax +
call ebx  +
add eax edi +
jmp loc_100CE95  +
push edi  +
mov ecx esi +
call sub_10091DD  +
cmp [esi+0ACh] edi +
jz loc_1063501  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push 4  +
push edi  +
push edi  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1003701  +
test eax eax +
jl loc_1063501  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10634EF  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_10634EF  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
call ebx  +
cmp edi eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
ja loc_10634CA  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
call ebx  +
sub eax edi +
jmp loc_10634D6  +
call dword ptr [ecx+1Ch]  +
or edi 0FFFFFFFFh +
sub edi eax +
call ebx  +
add eax edi +
push eax  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push 2  +
push offset dword_10092EC  +
call sub_1009311  +
xor edi edi +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+0B8h] edi +
jmp loc_1009142  +
push edi  +
call sub_1052D9F  +
test eax eax +
jnz loc_100917A  +
push 1  +
push edi  +
call ds:SwitchToThisWindow  +
jmp loc_100917A  +
***
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
cmp eax [ebp+var_4] +
jnz loc_1053D31  +
push [ebp+arg_4]  +
mov ecx ebx +
push [ebp+hWnd]  +
call sub_10983F1  +
jmp loc_1053D2F  +
***
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
push eax  +
call sub_10037E7  +
test eax eax +
jnz loc_106356D  +
push ebx  +
call sub_10037E7  +
test eax eax +
jz loc_1045726  +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
mov ecx [eax] +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_104574B  +
***
mov eax [esi] +
call dword ptr [eax+58h]  +
test al 2 +
jz loc_1063594  +
push 0FFFFFFFFh  +
push 0F120h  +
jmp loc_10635D8  +
push ebx  +
call ds:IsIconic  +
test eax eax +
jz loc_10635BD  +
call ds:GetForegroundWindow  +
cmp ebx eax +
jnz loc_10635B7  +
push 9  +
push ebx  +
call ds:ShowWindowAsync  +
jmp loc_104574B  +
***
push esi  +
jmp loc_1045740  +
***
push ebx  +
call sub_10400C8  +
test eax eax +
jz loc_104574B  +
push ebx  +
call sub_107A759  +
push 0  +
push 0F020h  +
push 112h  +
push ebx  +
call ds:PostMessageW  +
jmp loc_104574B  +
***
mov ecx [ebp+8] +
add ecx 0FFFFFFE0h +
call sub_10099B7  +
jmp loc_104574B  +
***
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
jmp loc_100A775  +
***
mov [ebp+var_4] 80070057h +
jmp loc_1053D96  +
***
mov [ebp+var_4] 80070057h +
jmp loc_1053F26  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0A8h]  +
jmp loc_100B3D0  +
push 1  +
call sub_100801C  +
jmp loc_100B3FD  +
push [ebp+var_20]  +
mov ecx edi +
call sub_100D0FB  +
jmp loc_100B49A  +
***
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_102B71A  +
jmp loc_102B82B  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jnz loc_102B806  +
mov eax [esi] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+84h]  +
mov eax [esi] +
mov ecx [eax] +
push 1  +
push 3  +
push eax  +
call dword ptr [ecx+70h]  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+var_414] +
push edx  +
push eax  +
call dword ptr [ecx+7Ch]  +
mov eax [edi+94h] +
push dword ptr [esi]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
push 0  +
push dword ptr [esi]  +
mov ecx edi +
call sub_100A5CB  +
jmp loc_102B806  +
***
cmp [ebp+arg_4] 4000000h +
jz loc_10636E1  +
cmp [ebp+arg_4] 8000000h +
jnz loc_1042C4E  +
mov ecx esi +
call sub_1098D4B  +
push ebx  +
push ebx  +
push 40Dh  +
push hWnd  +
jmp loc_106370A  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1042C4E  +
mov eax [eax] +
cmp eax ebx +
jz loc_1042C4E  +
cmp dword ptr [eax+2] 0Dh +
jnz loc_1042C4E  +
push ebx  +
push ebx  +
push 446h  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
jmp loc_1042C4E  +
push dword ptr [eax+4]  +
call ds:RealShellExecuteA  +
jmp loc_1042BEF  +
mov eax [esi] +
push ebx  +
push ebx  +
push esi  +
call dword ptr [eax+3Ch]  +
mov ecx [ebp+var_10] +
push esi  +
call sub_1098CE5  +
jmp loc_1042C42  +
***
mov eax [esi+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov ecx esi +
call sub_101E028  +
jmp loc_101F199  +
mov eax [esi+94h] +
and [ebp+arg_0] 0 +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_10348DC  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1063776  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101F1AE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_101F1AE  +
mov ecx esi +
call sub_101E21C  +
mov ecx esi +
call sub_1098D4B  +
jmp loc_101F1C3  +
***
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call sub_107078B  +
mov ecx [esi+48h] +
cmp eax [ecx+0BF8h] +
jnz loc_10403D1  +
jmp loc_10403B0  +
mov ecx [ebp+arg_0] +
push 0  +
push offset loc_1040149  +
call sub_100831C  +
jmp loc_10403FD  +
***
cmp dword ptr [ebp+pvar.anonymous_0] esi +
jbe loc_100B893  +
xor edi edi +
cmp dword ptr [ebp+pvar.anonymous_0] esi +
jbe loc_1063808  +
mov eax dword ptr [ebp+pvar.anonymous_0+4] +
mov esi [eax+edi*4] +
push esi  +
call sub_1006BBB  +
cmp eax [ebp+hWnd] +
jnz loc_1063802  +
mov ecx [ebp+var_8] +
push 0  +
push esi  +
call sub_1053C98  +
inc edi  +
cmp edi dword ptr [ebp+pvar.anonymous_0] +
jb loc_10637E6  +
push [ebp+hWnd]  +
mov ecx [ebp+var_8] +
call sub_1053B6E  +
jmp loc_100B893  +
***
call ds:GetForegroundWindow  +
cmp eax hWnd +
jnz loc_100E770  +
mov [esi+3Ch] edi +
jmp loc_1009915  +
call dword ptr [ecx+1Ch]  +
or ebx 0FFFFFFFFh +
sub ebx eax +
call edi  +
add eax ebx +
jmp loc_100996A  +
***
mov eax [ebp+lpdwProcessId] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+hWnd] eax +
cmp edi ebx +
jz loc_106385B  +
mov [ebp+var_10] ebx +
jmp loc_100E704  +
mov [ebp+var_1C] 1 +
jmp loc_100E704  +
***
mov edi [edi] +
push [ebp+var_4]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1051825  +
push ebx  +
push ebx  +
push 4  +
push ebx  +
push ebx  +
push edi  +
call sub_1003701  +
test eax eax +
jge loc_1051840  +
push edi  +
mov ecx esi +
call sub_100B8EC  +
jmp loc_1051840  +
***
push 502h  +
push offset dword_1063978  +
call sub_1034B2D  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_1098877  +
jmp loc_1003885  +
mov eax [ebp+hWnd] +
mov ecx [esi+48h] +
shr eax 10h +
and eax 0FFFh +
push eax  +
call sub_10704D3  +
jmp loc_1003887  +
push 0  +
push [ebp+hWnd]  +
call sub_1096D7E  +
jmp loc_1003885  +
mov eax [esi+48h] +
xor ebx ebx +
cmp [eax+1Ch] ebx +
jnz loc_106392E  +
push 11h  +
call ds:GetAsyncKeyState  +
test ax ax +
jl loc_106392E  +
call ds:GetForegroundWindow  +
mov ecx dword_10B10F4 +
xor edx edx +
cmp eax hWnd +
setz dl  +
cmp ecx ebx +
jz loc_1063920  +
cmp eax ecx +
jnz loc_1063920  +
xor edx edx +
inc edx  +
mov edi [esi+38h] +
cmp edi ebx +
jnz loc_1063951  +
cmp edx ebx +
jnz loc_106392E  +
mov [esi+38h] eax +
push ebx  +
push ebx  +
push 504h  +
push hWnd  +
call ds:PostMessageW  +
push 2  +
push ebx  +
push ebx  +
push ebx  +
call ds:dwmapi_113  +
jmp loc_10542BC  +
cmp edx ebx +
jz loc_106392E  +
mov ecx esi +
call sub_1096BF9  +
push edi  +
call sub_107A759  +
push edi  +
call ds:SetForegroundWindow  +
mov [esi+38h] ebx +
jmp loc_10542BC  +
***
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_1020D70  +
cmp edx ebx +
jnz loc_1020D70  +
push offset dword_1063A08  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1020D70  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1020DA7  +
cmp edx edi +
jnz loc_1020DA7  +
push offset dword_1063A18  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1020DA7  +
***
mov ecx [ebp+8] +
push 1  +
add ecx 0FFFFFFE8h +
call sub_101F112  +
jmp loc_1011DBD  +
***
cmp dword ptr [eax+8] 0FFFFFFF9h +
jnz loc_1011DBD  +
mov eax [ebp+8] +
lea ecx [eax-18h] +
neg ecx  +
lea edx [eax-8] +
sbb ecx ecx +
push 1  +
and ecx edx +
push ecx  +
push dword ptr [eax+78h]  +
call ds:SHLWAPI_509  +
jmp loc_1011DBD  +
***
mov eax [eax] +
jmp loc_102B57B  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+6Ch]  +
test al 1 +
jz loc_1063A8B  +
push ebx  +
push edi  +
lea ecx [ebp+var_C] +
call sub_1006610  +
inc [ebp+var_14]  +
jmp loc_102B56B  +
push eax  +
push [ebp+var_C]  +
call ds:off_10065B4  +
jmp loc_102B636  +
push ebx  +
push [ebp+var_8]  +
lea ecx [ebp+var_14] +
call sub_1006610  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_102B64B  +
mov eax [eax+4] +
mov edi [eax+edx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+88h]  +
mov [ebp+pidl] eax +
mov eax [esi+94h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+54h]  +
mov ebx eax +
mov eax [esi+6Ch] +
mov ecx [eax] +
lea edx [ebx+1] +
movzx edx dx +
push edx  +
push [ebp+pidl]  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [esi+94h] +
mov ecx [eax] +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+50h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
push [ebp+pidl]  +
call ds:__imp_SHELL32_155  +
inc [ebp+var_18]  +
xor ebx ebx +
jmp loc_102B65C  +
mov eax [eax+4] +
mov edi [eax+edx*4] +
push edi  +
push dword ptr [esi+0A8h]  +
call ds:off_100407C  +
cmp eax ebx +
mov [ebp+var_14] eax +
jl loc_1063BA1  +
mov eax [edi] +
lea ecx [ebp+var_24] +
push ecx  +
push edi  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_1063B72  +
cmp [ebp+var_24] ebx +
jnz loc_1063B72  +
push [ebp+var_14]  +
push dword ptr [esi+0A8h]  +
call ds:off_10065B4  +
mov eax [esi+94h] +
mov ecx [eax] +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [edi] +
push ebx  +
push 1  +
push edi  +
call dword ptr [eax+70h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
jmp loc_1063BA1  +
mov eax [esi+94h] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push edi  +
push eax  +
call dword ptr [ecx+50h]  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+84h]  +
mov eax [esi+94h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+7Ch]  +
mov eax [edi] +
push ebx  +
push 1  +
push edi  +
call dword ptr [eax+70h]  +
inc [ebp+var_18]  +
jmp loc_102B684  +
***
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push [ebp+arg_4]  +
mov ecx ebx +
call sub_102BCCC  +
test eax eax +
jl loc_1063BFC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+6Ch]  +
test al 1 +
jz loc_1063BDB  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jnz loc_1063BDB  +
mov ecx [ebp+arg_0] +
mov eax esi +
jmp loc_1063BE2  +
mov eax [ebp+arg_0] +
mov ecx esi +
xor edi edi +
push eax  +
push ecx  +
mov ecx ebx +
call sub_1099148  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jz loc_1052570  +
push [ebp+arg_4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+64h]  +
mov ecx [ebp+arg_8] +
mov eax [esi] +
neg ecx  +
sbb ecx ecx +
and ecx 8 +
push ecx  +
push 8  +
push esi  +
call dword ptr [eax+70h]  +
jmp loc_1052570  +
***
cmp dword_10B24CC 0 +
jz loc_1040566  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1063C3B  +
test al al +
jnz loc_1040566  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1040566  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_1040566  +
cmp edx dword_10B24C4 +
jnz loc_1040566  +
push offset dword_1063E50  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1040566  +
***
call ds:IsCompositionActive  +
test eax eax +
jz loc_1040570  +
and dword ptr [ebp-220h] 0 +
mov byte ptr [ebp-20Dh] 0 +
jmp loc_1040584  +
***
push dword ptr [ebp-214h]  +
call sub_107A759  +
jmp loc_10405E3  +
***
push offset dword_1063E70  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz loc_1040603  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-214h]  +
call sub_100AF93  +
test eax eax +
jl loc_1040603  +
cmp dword_10B24CC 0 +
jz loc_1040603  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1063D1F  +
test al al +
jnz loc_1040603  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1040603  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_1040603  +
cmp edx dword_10B24C4 +
jnz loc_1040603  +
lea eax [ebp-20Ch] +
push eax  +
push offset dword_1063E70  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1026DBD  +
jmp loc_1040603  +
***
cmp dword_10B24CC 0 +
mov dword_10B39EC 1 +
jz loc_10406A2  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1063DA5  +
test al al +
jnz loc_1040675  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1040675  +
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov eax edx +
mov ecx ebx +
and eax edi +
and ecx esi +
cmp eax edx +
jnz loc_1040675  +
cmp ecx ebx +
jnz loc_1040675  +
push offset dword_1063E60  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_1040675  +
***
mov edx dword_10B24C0 +
mov eax edx +
and eax edi +
mov edi dword_10B24C4 +
mov ecx edi +
and ecx esi +
cmp eax edx +
jnz loc_10406A2  +
cmp ecx edi +
jnz loc_10406A2  +
push offset dword_1063E40  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_10406A2  +
***
push 0  +
push offset loc_1040149  +
mov ecx esi +
call sub_100831C  +
push 1  +
mov ecx esi +
call sub_10406BA  +
jmp loc_104050E  +
***
mov eax 80040110h +
jmp loc_102E796  +
***
test esi esi +
jz loc_100244B  +
push 1  +
mov ecx esi +
call sub_1099247  +
jmp loc_100244B  +
***
mov eax [ebp+var_62C] +
mov eax [eax] +
mov esi [esi+6Ch] +
mov ecx [esi] +
push eax  +
push eax  +
push esi  +
call dword ptr [ecx+30h]  +
jmp loc_10524EB  +
mov eax [esi+94h] +
push [ebp+var_620]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+7Ch]  +
mov ecx esi +
call sub_1052509  +
test eax eax +
jl loc_10524EB  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push ebx  +
xor ebx ebx +
inc ebx  +
push eax  +
mov [ebp+var_628] ebx +
call dword ptr [ecx+6Ch]  +
test al bl +
jnz loc_1064059  +
mov eax [ebp+var_620] +
mov ecx [eax] +
lea edx [ebp+var_630] +
push edx  +
push eax  +
mov ebx 80004005h +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1064044  +
mov eax [ebp+var_630] +
mov ecx [eax] +
lea edx [ebp+var_624] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_1063FAF  +
mov eax [esi+7Ch] +
mov ebx [eax] +
push edi  +
lea eax [ebp+var_640] +
push eax  +
push edi  +
lea eax [ebp+pv] +
push eax  +
mov eax [ebp+var_624] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push dword ptr [esi+7Ch]  +
call dword ptr [ebx+10h]  +
mov ebx eax +
cmp ebx edi +
jl loc_1063FA3  +
push [ebp+var_640]  +
mov ecx esi +
push [ebp+pv]  +
push [ebp+var_620]  +
call sub_105253A  +
push [ebp+pv]  +
mov [ebp+var_628] eax +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_624] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_630] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx edi +
jl loc_1064044  +
cmp [ebp+var_628] edi +
jz loc_106403C  +
mov eax [esi+7Ch] +
mov [ebp+var_628] edi +
mov ebx [eax] +
lea eax [ebp+var_628] +
push eax  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push dword ptr [esi+7Ch]  +
call dword ptr [ebx+1Ch]  +
cmp eax edi +
jl loc_1064044  +
lea eax [ebp+var_624] +
push eax  +
push [ebp+var_628]  +
call ds:__imp_SHGetIDListFromObject  +
mov ebx eax +
cmp ebx edi +
jl loc_1064030  +
mov eax [ebp+var_620] +
push [ebp+var_624]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+84h]  +
push [ebp+var_624]  +
mov ebx eax +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_628] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp ebx edi +
jge loc_1064104  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+84h]  +
jmp loc_1064104  +
cmp [ebp+var_638] ebx +
jnz loc_1064104  +
lea eax [ebp+var_624] +
push eax  +
mov eax [ebp+var_62C] +
push offset dword_100DC8C  +
push dword ptr [eax+4]  +
call ds:__imp_SHCreateItemFromIDList  +
test eax eax +
jl loc_10640D8  +
mov eax [esi+7Ch] +
mov ecx [eax] +
lea edx [ebp+var_630] +
push edx  +
push [ebp+var_624]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10640C4  +
push edi  +
push [ebp+var_630]  +
mov ecx esi +
push [ebp+var_620]  +
call sub_105253A  +
push [ebp+var_630]  +
mov [ebp+var_628] eax +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_624] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_628] edi +
jz loc_1064104  +
mov edx [ebp+var_62C] +
mov eax [ebp+var_620] +
push dword ptr [edx+4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+84h]  +
mov eax [ebp+var_62C] +
push dword ptr [eax+4]  +
mov esi [esi+6Ch] +
push dword ptr [eax]  +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+30h]  +
pop ebx  +
jmp loc_10524EB  +
***
cmp [ebp+var_8] ebx +
jz loc_103B62B  +
cmp [ebp+var_1C] 1 +
jz loc_103B62B  +
jmp loc_103B61D  +
***
cmp [ebp+arg_4] eax +
jnz loc_106413A  +
cmp [ebp+arg_8] eax +
jnz loc_106413A  +
cmp [ebp+arg_C] eax +
jnz loc_106413A  +
cmp [ebp+arg_10] eax +
jz loc_103B8E8  +
xor eax eax +
inc eax  +
jmp loc_103B8E8  +
***
push eax  +
call ds:off_1035224  +
jmp loc_100CB09  +
push eax  +
call ds:DestroyIcon  +
jmp loc_100CB14  +
mov eax dword_10B24C0 +
push ebx  +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_106418F  +
cmp edx ebx +
jnz loc_106418F  +
push dword ptr [esi+0Ch]  +
push offset dword_1064198  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
pop ebx  +
jmp loc_100CB60  +
***
inc eax  +
jmp loc_1009B4C  +
***
push 10h  +
pop ecx  +
jmp loc_1053A1F  +
***
or ecx 40h +
jmp loc_1053A2E  +
***
push ebx  +
call ds:HungWindowFromGhostWindow  +
xor ecx ecx +
cmp [ebp+0Ch] eax +
setz cl  +
mov eax ecx +
test eax eax +
jz loc_10036E6  +
jmp loc_1003B17  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
call ds:IsWindow  +
jmp loc_1053835  +
***
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+34h]  +
jmp loc_1045A83  +
***
and dword ptr [esi] 0 +
jmp loc_100484B  +
***
mov eax dword_10B24C0 +
push ebx  +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1064239  +
cmp edx ebx +
jnz loc_1064239  +
push 0  +
push dword ptr [esi+0Ch]  +
push offset dword_1064240  +
push dword_10B247C  +
push dword_10B2478  +
call sub_104647D  +
pop ebx  +
jmp loc_100D6BD  +
***
mov eax [ebp+pvData] +
jmp locret_102C1C3  +
***
call sub_101AE40  +
mov edi eax +
jmp loc_1007F6D  +
***
mov eax [esi+0Ch] +
sub eax edi +
add eax [esi+4] +
mov edi eax +
mov [ebp+var_48] edi +
jmp loc_100BE5C  +
push 64h  +
pop edi  +
jmp loc_100BEAD  +
mov ecx [ebp+arg_4] +
mov eax edx +
sub eax ebx +
add eax [ebp+var_30] +
lea edi [ecx+eax*4] +
mov [ebp+arg_4] edi +
jmp loc_100C054  +
call sub_101AE40  +
mov [ebp+var_10] eax +
jmp loc_100C1DF  +
***
xor eax eax +
inc eax  +
jmp loc_102EF27  +
***
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_10643BA  +
mov edi [esi+0ACh] +
cmp edi ebx +
jnz loc_10642D9  +
push dword ptr [esi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov edi eax +
cmp edi ebx +
jz loc_106439D  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_10643BA  +
mov eax [esi+0A8h] +
cmp eax [esi+0E4h] +
jnz loc_1064307  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_106430A  +
xor eax eax +
inc eax  +
cmp eax ebx +
jz loc_106431E  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+88h]  +
cmp [ebp+arg_0] ebx +
jz loc_10643B7  +
cmp eax ebx +
jz loc_10643B7  +
push 2Ch  +
lea eax [ebp+var_2C] +
push ebx  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+4] +
mov edi ds:SendMessageW +
or [ebp+var_C] 0FFFFFFFFh +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov eax hInstance +
add esp 0Ch +
mov [ebp+var_10] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 432h  +
push dword ptr [esi+98h]  +
mov [ebp+var_2C] 121h +
call edi  +
push dword ptr [esi+98h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_10643DB  +
push ebx  +
push ebx  +
push 41Dh  +
push dword ptr [esi+98h]  +
call edi  +
jmp loc_1044419  +
cmp [ebp+arg_0] ebx +
jz loc_10643B7  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 2 +
jz loc_106432F  +
mov [ebp+arg_0] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_106432F  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
jmp loc_1044419  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 411h  +
push dword ptr [esi+98h]  +
call edi  +
push ebx  +
push 1388h  +
push 3  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov [esi+0F4h] eax +
jmp loc_1044419  +
***
push eax  +
push dword ptr [esi-14h]  +
call ds:KillTimer  +
mov [edi] ebx +
jmp loc_1045AAE  +
***
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1045AF7  +
***
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1064441  +
push 0  +
push esi  +
push 0  +
push [ebp+hWnd]  +
call ds:GetLayeredWindowAttributes  +
test eax eax +
jnz loc_1064441  +
mov byte ptr [esi] 0FFh +
xor eax eax +
inc eax  +
pop esi  +
jmp locret_103478C  +
***
mov eax [ebp+10h] +
xor ecx ecx +
and al 2 +
cmp al 2 +
setz cl  +
lea ecx [ecx+ecx+3] +
push ecx  +
push hWnd  +
push ebx  +
push esi  +
call ds:dwmapi_113  +
test eax eax +
jl loc_106447E  +
neg esi  +
sbb esi esi +
and esi ebx +
mov [edi+0B8h] esi +
jmp loc_10455B6  +
***
xor ebx ebx +
lea esi [edi+0B8h] +
cmp [esi] ebx +
jz loc_10455BE  +
push 3  +
push ebx  +
push ebx  +
push ebx  +
call ds:dwmapi_113  +
mov [esi] ebx +
jmp loc_10455BE  +
***
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jz loc_10055FD  +
push 0FFFFFFFEh  +
pop eax  +
jmp loc_100560C  +
***
test ebx ebx +
jz loc_106458A  +
push edi  +
call sub_1004266  +
push 6  +
pop edx  +
mov [ebp+8] eax +
mov ecx edx +
xor eax eax +
mov dword ptr [ebp-2Ch] 1Ch +
lea edi [ebp-28h] +
stos   +
mov eax [esi+38h] +
mov [ebp-28h] edx +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
xor edx edx +
cmp [ebp+8] edx +
setnz dl  +
push edx  +
push eax  +
call dword ptr [ecx+78h]  +
mov eax [ebx] +
lea ecx [ebp-10h] +
push ecx  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call dword ptr [eax+30h]  +
mov ebx [ebp+8] +
mov edi [ebp-8] +
mov ecx [ebp-4] +
test ebx ebx +
jz loc_106452A  +
mov eax ecx +
sub eax [ebp-0Ch] +
jmp loc_106452F  +
mov eax edi +
sub eax [ebp-10h] +
jz loc_1064589  +
test ebx ebx +
jz loc_1064543  +
mov eax [ebp-0Ch] +
sub eax [esi+64h] +
sub ecx [ebp-0Ch] +
cdq   +
idiv  ecx +
jmp loc_106454B  +
mov eax [ebp-10h] +
sub edi eax +
cdq   +
idiv  edi +
mov edx [ebp-18h] +
cmp eax edx +
jge loc_1064568  +
mov esi [esi+38h] +
mov ecx [esi] +
push eax  +
xor eax eax +
test ebx ebx +
setz al  +
push 4  +
push eax  +
push esi  +
call dword ptr [ecx+7Ch]  +
jmp loc_1064589  +
mov ecx [ebp-1Ch] +
add edx ecx +
cmp eax edx +
jl loc_1064589  +
mov esi [esi+38h] +
mov edx [esi] +
lea eax [ecx+eax-1] +
push eax  +
xor eax eax +
test ebx ebx +
setz al  +
push 4  +
push eax  +
push esi  +
call dword ptr [edx+7Ch]  +
pop edi  +
pop ebx  +
jmp loc_1009585  +
***
mov edx [eax+4Ch] +
add edx [eax+48h] +
mov [ecx] edx +
jmp loc_1020535  +
***
push eax  +
push dword ptr [esi-10h]  +
call ds:KillTimer  +
and dword ptr [edi] 0 +
jmp loc_1036FD7  +
***
mov esi [esi+0D4h] +
mov eax [esi] +
push 0  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+54h]  +
jmp loc_1036FE4  +
***
mov esi offset aNull_0 +
jmp loc_1043117  +
***
mov esi offset aNull_0 +
jmp loc_1046376  +
***
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edi edx +
and edi ecx +
mov ecx ebx +
and ecx eax +
cmp edi edx +
jnz loc_100CA83  +
cmp ecx ebx +
jnz loc_100CA83  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
push 0  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
push eax  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+3Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
push eax  +
mov eax esi +
cdq   +
push edx  +
push eax  +
mov eax [ebp+var_8] +
push dword ptr [eax+4]  +
push offset dword_1064650  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10430BD  +
jmp loc_100CA83  +
***
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx ebx +
cmp ecx eax +
jnz loc_10338B9  +
cmp edx dword_10B24C4 +
jnz loc_10338B9  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
push 0  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
push eax  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+3Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+50h]  +
push eax  +
mov eax esi +
cdq   +
push edx  +
push eax  +
push dword ptr [edi+4]  +
push offset dword_10646D0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10430BD  +
jmp loc_10338B9  +
***
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp [ebp+0Ch] eax +
jnz loc_10525EA  +
mov eax [esi+190h] +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_10525EA  +
***
cmp byte ptr [ebp+arg_0+3] 0FFh +
jnz loc_103472B  +
lea edx [esi-30h] +
neg edx  +
sbb edx edx +
push 24h  +
lea ebx [esi-1Ch] +
and edx ebx +
lea eax [esi-14h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jnz loc_103474C  +
lea eax [ebp+hWnd] +
push eax  +
push dword ptr [esi+174h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_1064757  +
push 13h  +
push edi  +
push edi  +
push edi  +
push edi  +
push hWnd  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 1 +
jmp loc_103474C  +
***
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
jmp loc_100EDC8  +
***
test edi edi +
jz loc_10095A6  +
cmp eax edi +
jz loc_100950D  +
lea eax [esi+14h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
cmp dword ptr [esi+9Ch] 0 +
jz loc_100950D  +
and dword ptr [esi+0A4h] 0 +
jmp loc_100950D  +
***
cmp [ebp+arg_0] 2 +
jz loc_100433D  +
cmp [ebp+arg_0] 1 +
jz loc_10647C1  +
cmp [ebp+arg_0] 3 +
jnz loc_100434C  +
mov ebx dword_10B10D0 +
sub ebx esi +
jmp loc_100434C  +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
jmp loc_1004396  +
***
lea eax [esi+118h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+11Ch] +
push eax  +
call sub_1002BEE  +
add esi 120h +
push esi  +
call sub_1002BEE  +
jmp loc_1007CAB  +
***
push dword ptr [ebp+8]  +
and dword ptr [eax] 0 +
push eax  +
call ds:__imp_IUnknown_Set  +
jmp loc_10541FD  +
***
cmp esi 0FFFFFFFEh +
jl loc_1064824  +
inc [ebp+var_4]  +
mov esi [ebp+arg_0] +
jmp loc_1007363  +
add esi ebx +
and [ebp+arg_4] 0 +
mov eax [edi] +
inc [ebp+var_4]  +
push edi  +
call dword ptr [eax+0A8h]  +
cmp eax 1 +
mov [ebp+var_1C] eax +
jle loc_10648AE  +
cmp [ebp+arg_4] eax +
jge loc_10648AE  +
mov ecx [ebp+var_10] +
call sub_1004226  +
test al 2 +
jnz loc_10648AE  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jz loc_106486F  +
mov eax [ebp+var_10] +
push 0  +
push 6  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_10648AE  +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push 1  +
push 1  +
push [ebp+arg_4]  +
push [ebp+arg_4]  +
push edi  +
call dword ptr [eax+28h]  +
sub eax [ebp+var_18] +
cmp esi [ebp+arg_0] +
jnz loc_1064892  +
lea ecx [eax+2] +
cmp ecx esi +
jg loc_10648A7  +
cmp esi eax +
jl loc_10648BB  +
sub esi eax +
sub ebx eax +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_1C] +
jge loc_10648BB  +
jmp loc_106486F  +
inc [ebp+arg_4]  +
sub ebx eax +
jmp loc_10648BB  +
cmp esi [ebp+arg_0] +
jnz loc_10648BB  +
lea eax [ebx+2] +
cmp eax [ebp+arg_0] +
jg loc_10648DC  +
mov ecx [ebp+arg_0] +
mov eax [ebp+var_C] +
mov esi ecx +
sub esi ebx +
dec eax  +
cmp [ebp+var_8] eax +
jge loc_10648CD  +
dec esi  +
dec esi  +
test esi esi +
jge loc_1007363  +
mov esi ecx +
jmp loc_106482A  +
xor esi esi +
jmp loc_1007363  +
mov [ebp+var_4] eax +
jmp loc_1007382  +
***
mov eax [ebp+arg_C] +
cmp [ebp+arg_4] eax +
jnz loc_106495D  +
cmp [ebp+arg_8] 0FFFFFFFFh +
jnz loc_10648FD  +
and [ebp+arg_8] 0 +
cmp [ebp+arg_10] 0FFFFFFFFh +
jnz loc_106494A  +
mov ecx [ebp+var_8] +
mov ecx [ecx+90h] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jz loc_106493D  +
cmp eax 3 +
jnz loc_1064937  +
mov eax [ebp+var_8] +
push 0  +
push 6  +
add eax 1Ch +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_106493D  +
and [ebp+arg_10] 0 +
jmp loc_106494A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
dec eax  +
mov [ebp+arg_10] eax +
mov ecx [ebp+arg_10] +
xor eax eax +
cmp [ebp+arg_8] ecx +
setz al  +
test eax eax +
jnz loc_1007464  +
and [ebp+var_18] 0 +
jmp loc_1007037  +
***
mov [eax] ecx +
xor ecx ecx +
inc ecx  +
jmp loc_10070A9  +
push edi  +
xor eax eax +
push 6  +
pop ecx  +
mov [ebp+var_38] 1Ch +
lea edi [ebp+var_34] +
stos   +
mov eax [ebp+var_8] +
mov [ebp+var_28] eax +
xor eax eax +
dec edx  +
cmp [ebp+Y] eax +
mov [ebp+var_2C] edx +
setnz al  +
lea edx [ebp+var_38] +
push edx  +
mov [ebp+var_34] 3 +
mov edi eax +
xor eax eax +
cmp [ebp+Y] eax +
push edi  +
setz al  +
mov [ebp+var_1C] eax +
mov eax [ebx+38h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+74h]  +
xor edx edx +
cmp [ebp+arg_0] edx +
jz loc_10649D6  +
mov eax [ebx+38h] +
lea edx [ebp+var_38] +
push edx  +
push edi  +
mov [ebp+var_34] 7 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+78h]  +
xor edx edx +
jmp loc_10649D9  +
mov [ebp+var_24] edx +
cmp [ebp+Y] edx +
jz loc_1064A1F  +
mov eax [ebp+var_14] +
mov edi [esi+8] +
sub edi [esi] +
mov [ebp+X] edx +
mov edx [ebp+var_10] +
lea ecx [eax+edx] +
mov eax ecx +
imul eax [ebp+var_24] +
neg eax  +
cmp [ebp+arg_0] 0 +
mov [ebp+Y] eax +
jz loc_1064A06  +
sub edi dword_10B10D4 +
mov esi [ebp+arg_8] +
mov eax edi +
sub eax [ebx+60h] +
mov [esi+8] eax +
mov esi [ebp+var_2C] +
inc esi  +
imul esi ecx +
sub esi edx +
add esi [ebp+var_18] +
jmp loc_1064A59  +
mov eax [esi+8] +
sub eax [esi] +
mov esi [esi+0Ch] +
mov ecx eax +
imul ecx [ebp+var_24] +
neg ecx  +
mov [ebp+X] ecx +
mov ecx [ebp+arg_4] +
sub esi [ecx+4] +
cmp [ebp+arg_0] 0 +
mov [ebp+Y] edx +
jz loc_1064A47  +
sub esi dword_10B10D8 +
mov edi [ebp+var_2C] +
mov edx [ebp+arg_8] +
mov ecx esi +
sub ecx [ebx+68h] +
inc edi  +
mov [edx+0Ch] ecx +
imul edi eax +
push [ebp+var_1C]  +
mov ecx ebx +
call sub_109AF1E  +
push 14h  +
push esi  +
push edi  +
push [ebp+Y]  +
push [ebp+X]  +
push 0  +
push dword ptr [ebx+4]  +
call ds:SetWindowPos  +
pop edi  +
jmp loc_10070B1  +
***
lea eax [ebp+dy] +
push eax  +
push dword ptr [esi-10h]  +
call ds:GetWindowRect  +
push dword ptr [ebp-0Ch]  +
push [ebp+dy]  +
push [ebp+lprc]  +
call ds:OffsetRect  +
jmp loc_1044622  +
***
mov ecx dword_10B24C0 +
mov edi dword_10B24C4 +
mov edx ecx +
and edx ebx +
and edi eax +
cmp edx ecx +
jnz loc_100AA56  +
cmp edi dword_10B24C4 +
jnz loc_100AA56  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1064ADF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0A8h]  +
cmp eax 1 +
jle loc_1064ADF  +
xor eax eax +
inc eax  +
jmp loc_1064AE2  +
push 2  +
pop eax  +
push eax  +
push 1  +
jmp loc_1064B2D  +
mov ecx dword_10B24C0 +
mov edi dword_10B24C4 +
mov edx ecx +
and edx ebx +
and edi eax +
cmp edx ecx +
jnz loc_100AA56  +
cmp edi dword_10B24C4 +
jnz loc_100AA56  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1064B27  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0A8h]  +
cmp eax 1 +
jle loc_1064B27  +
xor eax eax +
inc eax  +
jmp loc_1064B2A  +
push 2  +
pop eax  +
push eax  +
push 0  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
push offset dword_1068940  +
push dword_10B247C  +
push dword_10B2478  +
call sub_109AF8C  +
jmp loc_100AA56  +
push dword ptr [ebx+158h]  +
lea eax [ebp+rc] +
push dword ptr [ebx+154h]  +
push eax  +
call ds:OffsetRect  +
jmp loc_100AA9A  +
mov eax [ebx+0D4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_1006457  +
push [ebp+arg_C]  +
mov eax [ebx+0D4h] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
cmp [ebp+var_4] 0 +
jz loc_1006457  +
mov eax [ebx+0D4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test eax eax +
jz loc_1006457  +
mov eax [esi] +
lea edi [ebx+4] +
mov ebx [edi] +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
push edi  +
call dword ptr [ebx+14h]  +
jmp loc_1006457  +
***
push dword ptr [ebp+10h]  +
mov ecx edi +
call sub_109AF5B  +
jmp loc_1053A79  +
***
push [ebp+arg_10]  +
push eax  +
call ds:off_100407C  +
test eax eax +
jge loc_1053E5D  +
mov ecx ebx +
call sub_109C125  +
jmp loc_1053E5D  +
push dword ptr [esi+0A4h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0ACh]  +
cmp eax [ebp+arg_8] +
jnz loc_1064C11  +
mov esi [esi+0D4h] +
push [ebp+arg_10]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+2Ch]  +
push [ebp+arg_C]  +
mov ecx ebx +
call sub_109AF5B  +
push [ebp+arg_10]  +
mov ecx ebx +
call sub_109AF5B  +
jmp loc_1053E69  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_1045B9E  +
push dword ptr [ebp+10h]  +
call ds:SetRectEmpty  +
jmp loc_1045BC2  +
***
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebx-1Ch]  +
call ds:GetWindowRect  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+10h]  +
call ds:OffsetRect  +
jmp loc_1045C1B  +
***
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1044C2D  +
***
cmp dword ptr [esi+90h] 0FFFFFFFFh +
jz loc_1045CA1  +
mov ecx [ecx] +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+14h]  +
push eax  +
push edi  +
call ds:__imp_IUnknown_Set  +
mov eax [esi+90h] +
mov ecx [ebp+10h] +
mov [ecx] eax +
xor eax eax +
jmp loc_1045CA1  +
***
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jz loc_1045CDE  +
mov eax [edi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push ebx  +
call ds:__imp_IUnknown_Set  +
mov eax [ebp+10h] +
mov dword ptr [eax] 0FFFFFFFEh +
jmp loc_1064CF3  +
cmp dword ptr [esi+98h] 0FFFFFFFFh +
jz loc_1045CED  +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push ebx  +
call ds:__imp_IUnknown_Set  +
mov eax [esi+98h] +
mov ecx [ebp+10h] +
mov [ecx] eax +
and dword ptr [ebp-4] 0 +
jmp loc_1045CED  +
***
mov [eax] edi +
jmp loc_10035A8  +
push ebx  +
push [ebp+arg_8]  +
call esi  +
jmp loc_1003605  +
***
mov eax [ebp+arg_8] +
mov [eax] edi +
jmp loc_102AF78  +
***
cmp dword ptr [ebp-8] 0FFFFFFFFh +
jnz loc_1033C15  +
push 0  +
push 0Ch  +
add esi 8 +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+24h]  +
cmp eax ebx +
jnz loc_1033C15  +
mov eax [esi] +
push 0Ch  +
push edi  +
push esi  +
call dword ptr [eax+14h]  +
jmp loc_1064D4C  +
mov eax [esi] +
push 0Ch  +
push edi  +
push esi  +
call dword ptr [eax+28h]  +
mov [ebp-4] eax +
jmp loc_1033C15  +
***
inc ebx  +
jmp loc_1033C86  +
***
cmp ebx 2 +
jnz loc_1033CBB  +
push 0EC5h  +
push esi  +
call sub_1034B2D  +
jmp loc_10440D3  +
***
dec dword ptr [ebp+8]  +
dec ebx  +
jmp loc_1009793  +
***
mov edi 80004005h +
jmp loc_101DC9E  +
***
push dword ptr [esi-0Ch]  +
call ds:DestroyWindow  +
add esi 28h +
push esi  +
call sub_1002BEE  +
jmp loc_101DC9E  +
***
dec eax  +
jnz loc_100AC66  +
push 6  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov ecx esi +
call sub_109B0B8  +
jmp loc_100AC66  +
lea ebx [esi+0F8h] +
push dword ptr [ebx]  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov eax [esi+0A8h] +
xor edi edi +
mov [ebx] edi +
cmp eax edi +
jz loc_100AC66  +
cmp eax [esi+0E4h] +
jz loc_100AC66  +
push edi  +
push edi  +
push dword ptr [esi+0B0h]  +
mov ecx esi +
push eax  +
call sub_109D5A1  +
test eax eax +
jl loc_100AC66  +
push 1  +
push dword ptr [esi+0E4h]  +
mov ecx esi +
call sub_109B6C1  +
jmp loc_100AC66  +
mov ebx [esi+0ACh] +
cmp ebx edi +
jnz loc_1064E39  +
push dword ptr [esi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov ebx eax +
cmp ebx edi +
jz loc_104469E  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_104469E  +
mov eax [esi+0A8h] +
cmp eax [esi+0E4h] +
jnz loc_1064E67  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_1064E6A  +
xor eax eax +
inc eax  +
cmp eax edi +
jz loc_104469E  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+88h]  +
jmp loc_104469E  +
push edi  +
push edi  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
push dword ptr [esi+0F0h]  +
push dword ptr [esi+4]  +
call ebx  +
push dword ptr [esi+0F4h]  +
mov [esi+0F0h] edi +
push dword ptr [esi+4]  +
call ebx  +
mov [esi+0F4h] edi +
jmp loc_100AC66  +
mov ebx [esi+0ACh] +
cmp ebx edi +
jnz loc_1064EE0  +
push dword ptr [esi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov ebx eax +
cmp ebx edi +
jz loc_1064F2E  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_10449F1  +
mov eax [esi+0A8h] +
cmp eax [esi+0E4h] +
jnz loc_1064F0E  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_1064F11  +
xor eax eax +
inc eax  +
cmp eax edi +
jz loc_104469E  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+88h]  +
jmp loc_10446B6  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_10446BF  +
push edi  +
push edi  +
push 41Dh  +
push dword ptr [esi+98h]  +
call ebx  +
jmp loc_100AC66  +
push edi  +
push edi  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
push dword ptr [esi+0F0h]  +
push dword ptr [esi+4]  +
call ebx  +
push dword ptr [esi+0F4h]  +
mov [esi+0F0h] edi +
push dword ptr [esi+4]  +
call ebx  +
mov [esi+0F4h] edi +
cmp [esi+0C8h] edi +
jnz loc_100AC66  +
push edi  +
push 3E8h  +
push 2  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov [esi+0F0h] eax +
jmp loc_100AC66  +
***
lea edx [esi+168h] +
push edx  +
jmp loc_100AC5C  +
***
push eax  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov [edi] ebx +
jmp loc_1045615  +
***
inc eax  +
jmp loc_1044C90  +
***
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_106503D  +
mov edi [esi+0ACh] +
cmp edi ebx +
jnz loc_1064FFC  +
push dword ptr [esi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov edi eax +
cmp edi ebx +
jz loc_106503D  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_106503D  +
mov eax [esi+0A8h] +
cmp eax [esi+0E4h] +
jnz loc_1065026  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_1065029  +
xor eax eax +
inc eax  +
cmp eax ebx +
jz loc_106503D  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+88h]  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
jmp loc_104599B  +
xor eax eax +
cmp [ebp+arg_8] 4 +
setz al  +
cmp [esi+148h] ebx +
jz loc_106506F  +
xor ecx ecx +
cmp eax ebx +
setz cl  +
mov eax ecx +
cmp eax ebx +
jz loc_1065086  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
push eax  +
mov ecx esi +
call sub_109E17E  +
jmp loc_1045A36  +
cmp [esi+0C4h] ebx +
jnz loc_1045A36  +
xor eax eax +
cmp [ebp+arg_8] ebx +
setnz al  +
mov [ebp+var_4] eax +
cmp edi [esi+0E4h] +
jnz loc_10650BC  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov [ebp+arg_4] 1 +
test eax eax +
jnz loc_10650BF  +
mov [ebp+arg_4] ebx +
mov eax [esi+0E4h] +
cmp eax ebx +
jz loc_10650D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov [ebp+arg_0] eax +
jmp loc_10650D7  +
mov [ebp+arg_0] ebx +
cmp [ebp+arg_4] ebx +
jz loc_10650ED  +
cmp [ebp+var_4] ebx +
jnz loc_1065159  +
lea eax [esi+14h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+6Ch]  +
jmp loc_1065159  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_10] +
push [ebp+arg_C]  +
neg eax  +
sbb eax eax +
and eax 8 +
neg ecx  +
sbb ecx ecx +
and ecx 4 +
or eax ecx +
or eax 2 +
push eax  +
push 0FFFFFFFFh  +
push edi  +
mov ecx esi +
call sub_109D5A1  +
test eax eax +
jl loc_1045A36  +
push 1  +
lea ebx [esi+14h] +
mov eax [ebx] +
push 0  +
mov [ebp+arg_C] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
push eax  +
mov eax [ebp+arg_C] +
push ebx  +
call dword ptr [eax+18h]  +
xor edi edi +
cmp [ebp+arg_0] edi +
jz loc_1065149  +
mov eax [ebx] +
push 1  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call dword ptr [eax+18h]  +
push edi  +
push dword ptr [esi+0E4h]  +
mov ecx esi +
call sub_109B6C1  +
xor ebx ebx +
cmp [ebp+arg_4] ebx +
jz loc_1045A36  +
cmp [ebp+var_4] ebx +
jz loc_1045A36  +
mov esi [esi+0E8h] +
mov eax [esi] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
lea ecx [ecx+ecx-1] +
push ecx  +
push esi  +
call dword ptr [eax+48h]  +
jmp loc_1045A36  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A8h]  +
cmp eax 1 +
jz loc_10459E1  +
jmp loc_10651A5  +
xor eax eax +
jmp loc_1045A20  +
lea ebx [esi+0E8h] +
mov eax [ebx] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jz loc_10651DA  +
cmp edi [esi+0E4h] +
jnz loc_10651DA  +
mov eax [ebx] +
mov ecx [eax] +
xor edx edx +
cmp [ebp+arg_8] 1 +
setz dl  +
lea edx [edx+edx-1] +
push edx  +
push eax  +
call dword ptr [ecx+48h]  +
jmp loc_1045A36  +
push [ebp+arg_C]  +
mov ecx esi +
push 0Ah  +
push dword ptr [esi+0B0h]  +
push dword ptr [esi+0A8h]  +
call sub_109D5A1  +
jmp loc_1045A36  +
mov eax [esi+38h] +
mov ebx [eax] +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
push eax  +
push dword ptr [esi+38h]  +
call dword ptr [ebx+28h]  +
push 4  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_1045A36  +
***
lea ebx [esi+0E4h] +
cmp dword ptr [ebx] 0 +
jz loc_1044471  +
push [ebp+arg_8]  +
mov ecx esi +
call sub_1009667  +
test eax eax +
jz loc_1044471  +
mov ecx [ebx] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+1Ch]  +
mov [ebp+arg_4] eax +
mov edi eax +
jmp loc_1044471  +
test eax eax +
jz loc_10444DB  +
mov ecx [esi+0B0h] +
cmp ecx 0FFFFFFFFh +
jnz loc_10444CB  +
cmp edi ecx +
jz loc_10444C7  +
jmp loc_10444C1  +
cmp [ebp+arg_0] 0 +
jz loc_10444EA  +
lea edi [esi+20h] +
mov eax [edi] +
mov [ebp+var_14] eax +
lea eax [ebp+var_18] +
push eax  +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
mov eax [ebp+var_14] +
push edi  +
call dword ptr [eax+14h]  +
test eax eax +
jl loc_10652B5  +
mov eax [ebp+var_18] +
inc eax  +
push eax  +
push 0FFFFFFFCh  +
push dword ptr [esi+4]  +
push 8005h  +
call ds:NotifyWinEvent  +
mov edi [ebp+arg_4] +
jmp loc_10444EA  +
xor edx edx +
cmp [ebp+lprc] edx +
setz dl  +
push edx  +
push edi  +
push 0  +
jmp loc_1044501  +
mov ebx [ebx] +
test ebx ebx +
jz loc_1044539  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+84h]  +
jmp loc_1044539  +
mov eax [esi+0ACh] +
cmp eax [ebp+arg_8] +
jz loc_1044807  +
jmp loc_1044545  +
xor edi edi +
cmp eax [ebp+arg_0] +
jnz loc_106532F  +
and [ebp+arg_0] edi +
lea edx [ebp+arg_0] +
push edx  +
lea eax [esi+14h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+40h]  +
test eax eax +
jl loc_1065322  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_109AE71  +
mov edi eax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_106532F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+0E8h] +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+28h]  +
jmp loc_104458A  +
***
mov eax [ebp+arg_4] +
imul eax eax +
add eax offset unk_10B2A58 +
push eax  +
push [ebp+arg_4]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_109C1FD  +
mov ebx eax +
jmp loc_1007C7D  +
xor ebx ebx +
push ebx  +
push [ebp+arg_4]  +
lea eax [edi+1Ch] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_104662B  +
push 0  +
lea eax [ebp+arg_8] +
push eax  +
call sub_109B837  +
mov eax [ebp+var_4] +
jmp loc_10544EC  +
fadd  ds:dbl_1069928 +
jmp loc_1007B6E  +
***
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Points] +
push eax  +
push edi  +
push 4  +
jmp loc_1004BBE  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Points] +
push eax  +
push edi  +
push 2  +
jmp loc_1004BBE  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Points] +
push eax  +
push edi  +
push 3  +
jmp loc_1004BBE  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hDC]  +
push dword ptr [ebx+4]  +
call ds:DrawThemeParentBackground  +
jmp loc_1004BCA  +
push 10h  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hDC]  +
call ds:FillRect  +
push dword ptr [ebx+40h]  +
push [ebp+hDC]  +
call ds:SelectObject  +
push 1  +
push [ebp+hDC]  +
mov [ebp+var_18] eax +
call ds:SetBkMode  +
push 12h  +
mov [ebp+var_14] eax +
call ds:GetSysColor  +
push eax  +
push [ebp+hDC]  +
call ds:SetTextColor  +
mov [ebp+var_10] eax +
jmp loc_1004BCA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
test eax eax +
jz loc_1004C67  +
cmp [ebp+var_C] edi +
jz loc_1065477  +
push dword ptr [ebx+158h]  +
mov ecx ebx +
push dword ptr [ebx+154h]  +
call sub_109DC85  +
cmp eax 0FFFFFFFFh +
jle loc_1004C67  +
mov ecx [ebx+178h] +
cmp eax ecx +
jz loc_1004C67  +
inc ecx  +
cmp eax ecx +
jz loc_1004C67  +
push eax  +
push [ebp+hDC]  +
mov ecx ebx +
call sub_109BAA6  +
jmp loc_1004C67  +
mov eax [ebx+164h] +
cmp eax [ebx+0A8h] +
jnz loc_106548D  +
mov esi [ebx+0B0h] +
jmp loc_1065490  +
or esi 0FFFFFFFFh +
push eax  +
mov ecx ebx +
call sub_10055DA  +
mov ecx [ebx+164h] +
mov edx [ecx] +
lea edi [ebx+168h] +
push edi  +
push eax  +
push esi  +
push [ebp+hDC]  +
push ecx  +
call dword ptr [edx+48h]  +
xor edi edi +
jmp loc_1004C67  +
push [ebp+var_10]  +
push [ebp+hDC]  +
call ds:SetTextColor  +
push [ebp+var_14]  +
push [ebp+hDC]  +
call ds:SetBkMode  +
push [ebp+var_18]  +
push [ebp+hDC]  +
call ds:SelectObject  +
jmp loc_1004C70  +
***
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
call ds:WindowFromPoint  +
cmp [ebp+0Ch] ebx +
jz loc_106554B  +
cmp eax [esi-14h] +
jz loc_10448F3  +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
test eax eax +
jnz loc_10448F3  +
jmp loc_1044850  +
***
mov eax [esi+0CCh] +
cmp eax ebx +
jz loc_10448A0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 3 +
jnz loc_10448A0  +
push 1  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [esi+0CCh]  +
lea ecx [esi-18h] +
call sub_1044438  +
jmp loc_10448A0  +
***
mov ecx [esi+0D0h] +
push eax  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+0Ch]  +
push eax  +
call sub_1054574  +
jmp loc_10448FE  +
***
push eax  +
push dword ptr [esi-14h]  +
call ds:KillTimer  +
mov [edi] ebx +
jmp loc_1044861  +
***
push 1  +
push 0  +
push 0FFFFFFFFh  +
push 0  +
mov ecx esi +
call sub_1044438  +
jmp loc_100C9D2  +
test ebx ebx +
jl loc_100C9E4  +
lea eax [esi+188h] +
mov ecx [eax] +
cmp ebx ecx +
jge loc_100C9E4  +
dec ecx  +
mov [eax] ecx +
jmp loc_100C9E4  +
***
mov ecx [edx+4] +
mov [ebp-20h] ecx +
jmp loc_103F5FC  +
***
mov ecx [edx+0Ch] +
mov [ebp-18h] ecx +
jmp loc_103F610  +
***
mov ecx [edx+10h] +
mov [ebp-14h] ecx +
jmp loc_103F619  +
***
fld  dword ptr [edx+14h] +
fstp  dword ptr [ebp-10h] +
jmp loc_103F622  +
***
fld  dword ptr [edx+18h] +
fstp  dword ptr [ebp-0Ch] +
jmp loc_103F62B  +
***
mov ecx [edx+1Ch] +
mov [ebp-8] ecx +
jmp loc_103F634  +
***
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
sub edi dword_10B10D4 +
push eax  +
push edi  +
mov ecx esi +
call sub_10072EA  +
mov [ebp+var_10] eax +
jmp loc_1006DDE  +
push ebx  +
push eax  +
push 0F9Ch  +
push offset dword_1068930  +
call sub_104D5A4  +
jmp loc_1006DFD  +
xor edi edi +
cmp [ebp+var_4] edi +
mov [ebp+var_14] edi +
jle loc_1065663  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
push 1  +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+28h]  +
add [ebp+var_14] eax +
mov eax [ebp+var_4] +
dec eax  +
cmp edi eax +
jge loc_1065655  +
push 2  +
pop eax  +
jmp loc_1065657  +
xor eax eax +
add [ebp+var_14] eax +
add ebx [ebp+var_28] +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_1065627  +
push ebx  +
push [ebp+var_14]  +
lea eax [ebp+rc] +
push [ebp+var_24]  +
mov ecx esi +
push eax  +
call sub_109F120  +
push ebx  +
push [ebp+var_14]  +
lea eax [ebp+rc] +
push [ebp+var_24]  +
mov ecx esi +
push eax  +
call sub_109F24F  +
jmp loc_1006E8B  +
mov eax [edi] +
xor ebx ebx +
inc ebx  +
push edi  +
mov [ebp+var_14] ebx +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
jz loc_10656AE  +
push 0  +
push 6  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_10656BA  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A8h]  +
mov [ebp+var_14] eax +
lea eax [ebp+var_18] +
push eax  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov ecx esi +
call sub_1004304  +
fild  [ebp+var_18] +
fld  [ebp+var_24] +
mov edi eax +
fmul st st(1) +
fsubp st(1) st +
call _ftol2_sse  +
mov ecx [ebp+var_28] +
sub edi eax +
mov eax ecx +
sub eax [ebp+var_60] +
mov ebx [ebp+var_20] +
cdq   +
idiv  edi +
mov edi eax +
cmp ebx [ebp+var_8] +
jnz loc_10656FD  +
cmp [ebp+var_C] 0FFFFFFFFh +
jz loc_10656FD  +
add edi [ebp+var_C] +
mov eax [ebp+var_14] +
dec eax  +
cmp edi eax +
jl loc_1065707  +
mov edi eax +
mov eax [ebp+rc] +
mov [ebp+var_60] eax +
mov [ebp+var_58] ecx +
jmp loc_1065757  +
test edi edi +
jg loc_1065756  +
mov eax [esi+90h] +
mov eax [eax+4] +
dec ebx  +
mov edi [eax+ebx*4] +
mov eax [edi] +
push edi  +
mov [ebp+var_14] 1 +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jz loc_1065747  +
push 0  +
push 6  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_1065753  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A8h]  +
mov [ebp+var_14] eax +
mov edi [ebp+var_14] +
dec edi  +
lea eax [ebp+var_60] +
push eax  +
push edi  +
push ebx  +
push [ebp+var_C]  +
mov ecx esi +
push [ebp+var_8]  +
push [ebp+var_10]  +
call sub_100739E  +
test eax eax +
jz loc_1065712  +
mov eax [ebp+var_14] +
dec eax  +
cmp edi eax +
jge loc_106578F  +
inc edi  +
mov [ebp+var_C] edi +
cmp [ebp+var_8] ebx +
jz loc_1065786  +
and [ebp+var_10] 0 +
mov [ebp+var_8] ebx +
dec ebx  +
inc [ebp+var_10]  +
jmp loc_106579D  +
or [ebp+var_C] 0FFFFFFFFh +
and [ebp+var_10] 0 +
lea eax [ebx+1] +
mov [ebp+var_8] eax +
mov eax [ebp+var_2C] +
mov edx [ebp+var_30] +
mov ecx [ebp+rc] +
add edx eax +
add [ebp+var_5C] edx +
mov edx [ebp+var_5C] +
add edx eax +
mov [ebp+var_60] ecx +
mov [ebp+var_54] edx +
jmp loc_1006FBE  +
mov edi [ebp+Rect.bottom] +
sub edi [esi+68h] +
sub edi [esi+64h] +
sub edi [ebp+Rect.top] +
push edi  +
call sub_109C57A  +
cmp eax 1 +
mov [ebp+var_24] eax +
jle loc_10657E6  +
sub edi dword_10B10D8 +
mov ecx esi +
push edi  +
call sub_109C57A  +
mov [ebp+var_24] eax +
cmp dword_10B39B0 ebx +
jnz loc_1065813  +
mov eax [esi+0CCh] +
xor ecx ecx +
cmp [ebp+var_24] 1 +
setnle cl  +
cmp ecx eax +
jz loc_1065813  +
push 1  +
push eax  +
push 0F9Ch  +
push offset dword_1068930  +
call sub_104D5A4  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+var_24]  +
mov ecx esi +
call sub_1007046  +
cmp dword_10B24CC ebx +
jz loc_106588F  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_106583A  +
test al al +
jnz loc_106588F  +
mov edx dword_10B24B8 +
mov edi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and edi eax +
or edx edi +
jz loc_106588F  +
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edi edx +
and edi ecx +
mov ecx ebx +
and ecx eax +
cmp edi edx +
jnz loc_106588F  +
cmp ecx ebx +
jnz loc_106588F  +
push [ebp+var_24]  +
push 1  +
push offset dword_10466A0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
mov ecx esi +
call sub_1004226  +
test al 1 +
jz loc_1065945  +
mov ecx esi +
call sub_1004226  +
xor ebx ebx +
test al 2 +
jnz loc_106590F  +
xor edi edi +
cmp [ebp+var_4] ebx +
mov [ebp+var_14] ebx +
jle loc_10658EB  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push ebx  +
push 1  +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+28h]  +
add [ebp+var_14] eax +
mov eax [ebp+var_4] +
dec eax  +
cmp edi eax +
jge loc_10658E0  +
push 2  +
pop eax  +
jmp loc_10658E2  +
xor eax eax +
add [ebp+var_14] eax +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_10658B5  +
push ebx  +
push [ebp+var_14]  +
lea eax [ebp+rc] +
push 1  +
push eax  +
mov ecx esi +
call sub_109F120  +
push ebx  +
push [ebp+var_14]  +
lea eax [ebp+rc] +
push 1  +
push eax  +
mov ecx esi +
call sub_109F24F  +
jmp loc_1065947  +
cmp [ebp+var_4] ebx +
mov [ebp+var_24] ebx +
jle loc_1065947  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov ecx [ebp+var_24] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
test eax eax +
jz loc_1065938  +
mov eax [edi] +
push 1  +
push edi  +
call dword ptr [eax+58h]  +
inc [ebp+var_24]  +
mov eax [ebp+var_24] +
cmp eax [ebp+var_4] +
jge loc_1065947  +
jmp loc_1065917  +
xor ebx ebx +
xor edi edi +
cmp [ebp+var_4] ebx +
jle loc_106596E  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push ebx  +
push ebx  +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+28h]  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_106594E  +
mov ecx [ebp+Rect.right] +
sub ecx [esi+60h] +
mov eax [ebp-34h] +
sub ecx [ebp+Rect.left] +
or [ebp+var_8] 0FFFFFFFFh +
mov [ebp+var_28] eax +
mov eax [ebp+rc] +
add ecx eax +
cmp [ebp+var_4] ebx +
mov [ebp+var_60] eax +
mov eax [ebp-3Ch] +
mov [ebp+var_58] ecx +
mov [ebp+var_5C] eax +
mov [ebp+var_10] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_C] ebx +
jle loc_1006FF5  +
cmp [ebp+var_1C] 0 +
jl loc_1007008  +
mov eax [esi+90h] +
mov ecx [eax+4] +
mov eax [ebp+var_C] +
mov edi [ecx+eax*4] +
cmp eax [ebp+var_10] +
jnz loc_10659C7  +
mov eax [ebp+var_8] +
jmp loc_10659CA  +
or eax 0FFFFFFFFh +
mov ecx [edi] +
push 0  +
push 1  +
push 1  +
push 0FFFFFFFFh  +
push eax  +
push edi  +
call dword ptr [ecx+28h]  +
mov ebx eax +
mov eax [ebp+var_5C] +
add eax ebx +
cmp eax [ebp+var_28] +
jle loc_1065B0F  +
mov eax [edi] +
xor ebx ebx +
inc ebx  +
push edi  +
mov [ebp+var_18] ebx +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
jz loc_1065A0B  +
push 0  +
push 6  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_1065A17  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A8h]  +
mov [ebp+var_18] eax +
mov ecx [ebp+var_28] +
mov eax ecx +
sub eax [ebp+var_5C] +
mov ebx [ebp+var_C] +
cdq   +
idiv  [ebp+var_2C] +
mov edi eax +
cmp ebx [ebp+var_10] +
jnz loc_1065A36  +
cmp [ebp+var_8] 0FFFFFFFFh +
jz loc_1065A36  +
add edi [ebp+var_8] +
mov eax [ebp+var_18] +
dec eax  +
cmp edi eax +
jl loc_1065A40  +
mov edi eax +
mov eax [ebp-3Ch] +
mov [ebp+var_5C] eax +
mov [ebp+var_54] ecx +
jmp loc_1065AA7  +
test edi edi +
jg loc_1065AA6  +
mov eax [esi+90h] +
mov eax [eax+4] +
dec ebx  +
mov edi [eax+ebx*4] +
mov eax [edi] +
push edi  +
mov [ebp+var_C] ebx +
mov [ebp+var_18] 1 +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jz loc_1065A92  +
lea ebx [esi+1Ch] +
mov eax [ebx] +
push 6  +
push ebx  +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_1065AA0  +
mov eax [ebx] +
push 0  +
push 6  +
push edi  +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jnz loc_1065AA0  +
mov ebx [ebp+var_C] +
mov eax [edi] +
push edi  +
call dword ptr [eax+0A8h]  +
mov [ebp+var_18] eax +
jmp loc_1065AA3  +
mov ebx [ebp+var_C] +
mov edi [ebp+var_18] +
dec edi  +
lea eax [ebp+var_60] +
push eax  +
push edi  +
push ebx  +
push [ebp+var_8]  +
mov ecx esi +
push [ebp+var_10]  +
push [ebp+var_14]  +
call sub_109C6FC  +
test eax eax +
jz loc_1065A4B  +
mov eax [ebp+var_18] +
dec eax  +
cmp edi eax +
jge loc_1065ADF  +
inc edi  +
mov [ebp+var_8] edi +
cmp [ebp+var_10] ebx +
jz loc_1065AD6  +
and [ebp+var_14] 0 +
mov [ebp+var_10] ebx +
dec ebx  +
inc [ebp+var_14]  +
jmp loc_1065AED  +
or [ebp+var_8] 0FFFFFFFFh +
and [ebp+var_14] 0 +
lea eax [ebx+1] +
mov [ebp+var_10] eax +
mov eax [ebp-3Ch] +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
mov [ebp+var_5C] eax +
mov eax [ebp+var_60] +
add eax ecx +
mov [ebp+var_60] eax +
sub eax [esi+60h] +
sub eax [ebp+Rect.left] +
add eax [ebp+Rect.right] +
mov [ebp+var_58] eax +
jmp loc_1065B44  +
lea ecx [ebp+var_60] +
push ecx  +
mov ecx [ebp+var_C] +
sub ecx [ebp+var_10] +
push 0FFFFFFFFh  +
neg ecx  +
sbb ecx ecx +
not ecx  +
and ecx [ebp+var_14] +
mov [ebp+var_54] eax +
mov eax [edi] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
add ebx 2 +
push ebx  +
mov [ebp+var_1C] eax +
push 0  +
lea eax [ebp+var_60] +
push eax  +
call ds:OffsetRect  +
mov ebx [ebp+var_C] +
inc ebx  +
cmp ebx [ebp+var_4] +
mov [ebp+var_C] ebx +
jge loc_1006FEF  +
jmp loc_10659A4  +
***
mov eax [ebx] +
push ebx  +
call dword ptr [eax+98h]  +
mov ecx [ebx] +
lea edx [ebp+rc1] +
push edx  +
push eax  +
push ebx  +
mov [ebp+var_C] eax +
call dword ptr [ecx+34h]  +
push 0  +
push 0  +
push 0Bh  +
push dword ptr [edi+4]  +
call ds:SendMessageW  +
mov ecx edi +
mov [ebp+wParam] eax +
call sub_1006CED  +
push 0  +
push [ebp+wParam]  +
push 0Bh  +
push dword ptr [edi+4]  +
call ds:SendMessageW  +
mov eax [ebx] +
lea ecx [ebp+rc2] +
push ecx  +
push [ebp+var_C]  +
push ebx  +
call dword ptr [eax+34h]  +
lea eax [ebp+rc2] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call ds:EqualRect  +
test eax eax +
jnz loc_102AD46  +
push 2  +
lea eax [edi+1Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jnz loc_102AD46  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 4  +
push 5  +
push eax  +
call dword ptr [ecx+70h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
jmp loc_100ED68  +
lea eax [edi+0B0h] +
cmp dword ptr [eax] 0FFFFFFFEh +
jnz loc_100B98D  +
and dword ptr [eax] 0 +
jmp loc_100B98D  +
test ebx ebx +
jz loc_100616B  +
mov eax [edi+0E8h] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_100616B  +
***
push dword ptr [ebp+10h]  +
lea ebx [esi+4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+50h]  +
test eax eax +
jz loc_1065C44  +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
call sub_109AE71  +
push eax  +
push dword ptr [esi+138h]  +
call ds:off_100407C  +
test eax eax +
jl loc_1065C6C  +
push dword ptr [ebp+10h]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_10095F0  +
push dword ptr [ebp+10h]  +
push dword ptr [esi+138h]  +
call ds:off_100407C  +
test eax eax +
jge loc_10095F0  +
mov ecx [ebp+8] +
call sub_109C125  +
jmp loc_10095F0  +
***
push dword ptr [ebp+10h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+80h]  +
jmp loc_10095F9  +
***
mov eax [esi] +
push 1  +
push edi  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+18h]  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_1005D55  +
cmp dword_10B24CC 0 +
mov [ebp+10h] eax +
jz loc_1009622  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1065CC2  +
test al al +
jnz loc_1009622  +
mov ecx dword_10B24B8 +
mov edx dword_10B24BC +
mov esi 10000h +
and ecx esi +
and edx ebx +
or ecx edx +
jz loc_1009622  +
mov ecx dword_10B24C0 +
mov eax dword_10B24C4 +
mov edx ecx +
and edx esi +
mov esi eax +
and esi ebx +
cmp edx ecx +
jnz loc_1009622  +
cmp esi eax +
jnz loc_1009622  +
mov eax [ebp+10h] +
test eax eax +
jz loc_1065D1C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0A8h]  +
cmp eax 1 +
jle loc_1065D1C  +
xor eax eax +
inc eax  +
jmp loc_1065D1F  +
push 2  +
pop eax  +
push eax  +
mov eax [edi] +
push 0  +
push edi  +
call dword ptr [eax+4Ch]  +
push eax  +
push offset dword_1068940  +
push dword_10B247C  +
push dword_10B2478  +
call sub_109AF8C  +
jmp loc_1009622  +
***
push 4  +
pop eax  +
push 3  +
pop ecx  +
mov [esi+88h] ecx +
mov [esi+84h] ecx +
mov [esi+78h] ecx +
mov [esi+74h] ecx +
push 8  +
pop ecx  +
mov [esi+108h] ecx +
mov [esi+10Ch] ecx +
mov [esi+60h] eax +
mov [esi+5Ch] eax +
mov [esi+68h] edi +
mov [esi+64h] edi +
mov [esi+80h] eax +
mov [esi+7Ch] eax +
mov [esi+70h] eax +
mov [esi+6Ch] eax +
xor edx edx +
lea ecx [esi+13Ch] +
mov ebx [esi+108h] +
sub ebx edx +
mov [ecx] ebx +
add edx eax +
add ecx eax +
cmp edx 0Ch +
jnb loc_101E479  +
jmp loc_1065D8E  +
***
lea eax [edi+14h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
jmp loc_100D2DD  +
***
mov eax [esi+0C0h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
and dword ptr [esi+0FCh] 0FFFFFFFBh +
xor edi edi +
inc edi  +
jmp loc_1006A60  +
***
mov eax [esi+0C0h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
and dword ptr [esi+0FCh] 0FFFFFFF7h +
jmp loc_1006A6D  +
***
lea ecx [esi-28h] +
call sub_109B42D  +
and dword ptr [esi+0FCh] 0FFFFFFEFh +
jmp loc_1006A7A  +
***
call ds:GdiFlush  +
jmp loc_1006A82  +
***
cmp eax ecx +
jle loc_1065E0E  +
dec eax  +
push eax  +
push ecx  +
mov ecx edi +
call sub_109F5F4  +
mov ebx eax +
jmp loc_102AEF0  +
***
cmp edi ebx +
jz loc_1065E2F  +
push ebx  +
push ebx  +
push [ebp+var_4]  +
mov ecx esi +
push edi  +
call sub_1044438  +
mov eax [esi+150h] +
cmp eax 1 +
jnz loc_1065E46  +
mov ecx esi +
call sub_109F967  +
jmp loc_10458F6  +
cmp eax 2 +
jnz loc_10458F6  +
push ebx  +
mov ecx esi +
call sub_109BFD1  +
jmp loc_10458F6  +
push 4  +
pop ecx  +
jmp loc_10458E6  +
***
lea eax [esi+4] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+54h]  +
test eax eax +
jz loc_100CC5D  +
mov eax [esi+0D4h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_100CC5D  +
***
push ebx  +
push eax  +
call ds:off_100407C  +
test eax eax +
jge loc_1065EB2  +
push ebx  +
lea ecx [esi-14h] +
call sub_109AE71  +
push eax  +
push dword ptr [esi+138h]  +
call ds:off_100407C  +
test eax eax +
jl loc_100CC6F  +
lea ecx [esi-14h] +
call sub_109C125  +
jmp loc_100CC6F  +
***
cmp dword ptr [esi+13Ch] 2 +
jnz loc_1065ED5  +
lea ecx [esi-14h] +
call sub_109E7A2  +
jmp loc_100CC89  +
***
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+7Ch]  +
jmp loc_100CC89  +
***
lea ecx [esi-14h] +
call sub_109F967  +
call ds:ReleaseCapture  +
jmp loc_100CC95  +
***
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_1065F25  +
push 1  +
lea eax [esi+8] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
neg eax  +
sbb eax eax +
inc eax  +
jnz loc_100CC9D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push ebx  +
push 1  +
push eax  +
call dword ptr [ecx+70h]  +
push 0FFFFFFFFh  +
push edi  +
lea ecx [esi-14h] +
call sub_100D2A3  +
jmp loc_100CD03  +
***
push 0  +
push 0  +
push 1Fh  +
push dword ptr [esi+40h]  +
call ds:SendMessageW  +
jmp loc_100CCD2  +
***
push 0  +
lea eax [esi+4] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+48h]  +
jmp loc_100CD03  +
***
mov esi [esi+0D4h] +
mov eax [esi] +
push esi  +
call dword ptr [eax+6Ch]  +
jmp loc_100CD0F  +
***
cmp dword ptr [esi+150h] 0 +
jnz loc_1066080  +
mov eax [esi+158h] +
mov ecx [esi+154h] +
lea edx [eax+1] +
push edx  +
lea edx [ecx+1] +
push edx  +
push eax  +
push ecx  +
lea eax [ebp+EventTrack] +
push eax  +
call ds:SetRect  +
push dword ptr [esi+134h]  +
lea eax [ebp+EventTrack] +
push dword ptr [esi+130h]  +
push eax  +
call ds:InflateRect  +
push dword ptr [esi+160h]  +
lea eax [ebp+EventTrack] +
push dword ptr [esi+15Ch]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_1066080  +
lea eax [esi+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
call ds:SetFocus  +
mov edi ds:GetWindowLongW +
push 0FFFFFFECh  +
push dword ptr [esi+4]  +
call edi  +
mov ecx [esi+15Ch] +
mov ebx 400000h +
test eax ebx +
jz loc_1066008  +
xor eax eax +
cmp ecx [ebp+EventTrack.hwndTrack] +
setnl al  +
jmp loc_1066010  +
xor eax eax +
cmp ecx [ebp+EventTrack.cbSize] +
setl al  +
push 0FFFFFFECh  +
push dword ptr [esi+4]  +
mov [ebp+var_4] eax +
call edi  +
xor ecx ecx +
test eax ebx +
mov eax [esi+15Ch] +
jz loc_106602E  +
cmp eax [ebp+EventTrack.cbSize] +
setl cl  +
jmp loc_1066034  +
cmp eax [ebp+EventTrack.hwndTrack] +
setnl cl  +
mov eax [ebp+var_8] +
cmp eax 3 +
jnz loc_1066047  +
mov edx [esi+160h] +
cmp edx [ebp+EventTrack.dwFlags] +
jl loc_106606A  +
cmp eax 1 +
jnz loc_1066057  +
mov edx [esi+160h] +
cmp edx [ebp+EventTrack.dwHoverTime] +
jge loc_106606A  +
test eax eax +
jnz loc_106605F  +
test ecx ecx +
jnz loc_106606A  +
cmp eax 2 +
jnz loc_1066073  +
cmp [ebp+var_4] 0 +
jz loc_1066073  +
mov ecx esi +
call sub_109DE9B  +
jmp loc_1066080  +
push [ebp+nDenominator]  +
mov ecx esi +
push [ebp+nNumber]  +
call sub_109E5BD  +
mov eax [esi+150h] +
cmp eax 1 +
jnz loc_106609D  +
push [ebp+nDenominator]  +
mov ecx esi +
push [ebp+nNumber]  +
call sub_10A0163  +
jmp loc_104540E  +
cmp eax 2 +
jnz loc_104540E  +
push 0  +
push [ebp+nDenominator]  +
mov ecx esi +
push [ebp+nNumber]  +
call sub_109BD37  +
jmp loc_104540E  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jnz loc_104540E  +
mov eax [esi+0E4h] +
cmp eax edi +
jz loc_10660FA  +
lea edi [esi+0F8h] +
cmp [edi] ebx +
jnz loc_10660FA  +
push ebx  +
push 0C8h  +
push 4  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov [edi] eax +
jmp loc_104540E  +
cmp eax [ebp+nDenominator] +
jnz loc_104540E  +
lea edi [esi+0F8h] +
mov eax [edi] +
cmp eax ebx +
jz loc_104540E  +
push eax  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov [edi] ebx +
jmp loc_104540E  +
cmp [esi+17Ch] ebx +
jnz loc_104540E  +
cmp [esi+0A4h] ebx +
jz loc_1066164  +
push ebx  +
push ebx  +
push dword ptr [esi+0B0h]  +
mov ecx esi +
push eax  +
call sub_109D5A1  +
test eax eax +
jl loc_104540E  +
push 1  +
push dword ptr [esi+0E4h]  +
mov ecx esi +
call sub_109B6C1  +
jmp loc_104540E  +
mov eax [esi+4] +
mov [ebp+EventTrack.hwndTrack] eax +
mov eax [esi+0DCh] +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 1 +
cmp eax ebx +
jnz loc_106619A  +
push ebx  +
lea eax [ebp+EventTrack.dwHoverTime] +
push eax  +
push ebx  +
push 66h  +
call ds:SystemParametersInfoW  +
test eax eax +
jnz loc_106619D  +
or [ebp+EventTrack.dwHoverTime] 0FFFFFFFFh +
jmp loc_106619D  +
mov [ebp+EventTrack.dwHoverTime] eax +
lea eax [ebp+EventTrack] +
push eax  +
call ds:TrackMouseEvent  +
mov [esi+0A0h] eax +
jmp loc_104540E  +
***
push edx  +
mov ecx esi +
call sub_109FF8C  +
jmp loc_1003CBC  +
***
and dword ptr [ebx] 0 +
jmp loc_1052A97  +
***
xor eax eax +
cmp edi 0FFFFFFFFh +
setz al  +
mov ecx esi +
push eax  +
mov eax edi +
shr eax 10h +
cwde   +
push eax  +
movsx eax di +
push eax  +
call sub_109FB73  +
jmp loc_1003CBC  +
***
mov ecx [edi+8] +
cmp ecx 0FFFFFDEEh +
jz loc_1066239  +
cmp ecx 0FFFFFDF7h +
jnz loc_1003CBC  +
lea ecx [ebp-54h] +
push ecx  +
push dword ptr [esi+0B0h]  +
mov ecx esi +
push eax  +
call sub_109B871  +
test eax eax +
jl loc_1003CBC  +
push 211h  +
xor eax eax +
push eax  +
push eax  +
push dword ptr [ebp-50h]  +
push dword ptr [ebp-54h]  +
push eax  +
push dword ptr [esi+98h]  +
call ds:SetWindowPos  +
jmp loc_1021C13  +
***
mov ebx offset unk_10B3DB8 +
mov [edi+0Ch] ebx +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 1 +
jz loc_10662A2  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 3 +
jnz loc_1066273  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jnz loc_10662A2  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 2 +
jnz loc_1003CBC  +
mov esi [esi+0A8h] +
mov eax [esi] +
push 104h  +
push ebx  +
push esi  +
call dword ptr [eax+0B0h]  +
jmp loc_1003CBC  +
***
mov eax [esi+0A8h] +
cmp eax [esi+0E4h] +
jnz loc_10662D4  +
lea edi [esi+0ACh] +
cmp dword ptr [edi] 0 +
jz loc_10662D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx [eax] +
push 104h  +
push ebx  +
push dword ptr [edi]  +
push eax  +
call dword ptr [ecx+30h]  +
jmp loc_1003CBC  +
***
mov ecx [eax] +
push 104h  +
push ebx  +
push dword ptr [esi+0B0h]  +
push eax  +
call dword ptr [ecx+0B4h]  +
jmp loc_1003CBC  +
***
push edi  +
push edx  +
push eax  +
push ecx  +
mov ecx esi +
call sub_109C142  +
jmp loc_1003CE0  +
***
lea edi [esi+0CCh] +
mov eax [edi] +
cmp eax [esi+138h] +
jz loc_1003CBC  +
mov ecx esi +
call sub_1005671  +
push eax  +
xor eax eax +
cmp [edi] eax +
setz al  +
push eax  +
push 0F9Ch  +
push offset dword_1068930  +
call sub_104D5A4  +
jmp loc_1003CBC  +
***
mov eax [esi+0CCh] +
mov [esi+138h] eax +
jmp loc_1003CBC  +
***
mov eax edi +
shr eax 10h +
cwde   +
push eax  +
movsx eax di +
push eax  +
mov ecx esi +
call sub_109DF22  +
jmp loc_1003CE0  +
***
test edx edx +
jnz loc_1003CBC  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [esi+4]  +
call ds:BeginPaint  +
jmp loc_1003CAF  +
***
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edi [esi-8] +
neg edi  +
push ebx  +
sbb edi edi +
push 6  +
and edi esi +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1045D40  +
cmp word ptr [esi+26h] 0FFFFh +
jnz loc_10663AC  +
movzx eax word ptr [ebp+10h] +
or eax 0FFFE0000h +
mov [esi+24h] eax +
mov eax [esi+8] +
push 9  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
test ebx ebx +
jz loc_1045D40  +
movzx eax word ptr [ebp+10h] +
or eax 0FFFE0000h +
mov [esi+24h] eax +
mov eax [esi] +
push esi  +
jmp loc_106643D  +
movzx eax word ptr [ebp+10h] +
mov edi [ebp+8] +
or eax 0FFFE0000h +
mov [ebp+10h] eax +
cmp [edi+24h] eax +
jz loc_1045D62  +
cmp word ptr [edi+26h] 0FFFEh +
jnz loc_10663FA  +
xor ebx ebx +
inc ebx  +
jmp loc_1066437  +
mov eax [edi+8] +
add eax 1Ch +
mov ecx [eax] +
lea esi [edi-8] +
neg esi  +
push ebx  +
sbb esi esi +
push 9  +
and esi edi +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1045D62  +
mov eax [edi+8] +
push 9  +
add eax 1Ch +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
test ebx ebx +
jz loc_1045D62  +
mov eax [ebp+10h] +
mov [edi+24h] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+84h]  +
jmp loc_1045D62  +
***
mov dword ptr [edi+24h] 0FFFF0000h +
jmp loc_104497A  +
***
cmp [ebp+arg_14] eax +
pop ebx  +
setnz al  +
mov [ebp+var_44] ebx +
mov [ebp+var_40] ebx +
inc eax  +
mov [ebp+var_3C] eax +
xor eax eax +
cmp [ebp+arg_18] eax +
setnz al  +
inc eax  +
mov [ebp+var_38] eax +
jmp loc_103F14A  +
mov ecx [esi] +
mov eax [esi+8] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add eax ecx +
mov [ebp+var_34] eax +
mov eax [esi+4] +
add eax [ebp+arg_C] +
mov [ebp+var_30] eax +
jmp loc_103F162  +
mov [ebp+var_2C] 0FFFF00h +
jmp loc_103F173  +
mov bx word ptr [ebp+var_2C] +
mov eax edi +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
add al cl +
movzx ecx al +
shr bx 8 +
movzx edx bl +
mov eax edi +
sub eax edx +
cdq   +
sub eax edx +
movzx edx byte ptr [ebp+var_2C] +
sar eax 1 +
add al bl +
movzx eax al +
shl ecx 8 +
or ecx eax +
mov eax edi +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
pop ebx  +
jmp loc_103F1E5  +
mov eax ecx +
jmp loc_103F21D  +
***
mov ax [ecx+1Ch] +
sub ax [ecx+38h] +
jmp loc_103F302  +
lea esi [ebx+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_1066506  +
movsx edi word ptr [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+var_10] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+30h]  +
mov eax [esi] +
lea ecx [ebp+var_20] +
push ecx  +
mov ecx edi +
inc ecx  +
inc ecx  +
neg ecx  +
sbb ecx ecx +
and ecx edi +
push ecx  +
push esi  +
call dword ptr [eax+34h]  +
mov ecx [ebx+10h] +
call sub_1004266  +
test eax eax +
jz loc_1066549  +
mov eax [ebp+var_8] +
sub eax [ebp+var_10] +
cwde   +
cdq   +
sub eax edx +
sar eax 1 +
sub eax [ebp+var_20] +
add eax [ebp+var_10] +
jmp loc_103F302  +
mov eax [ebp+var_4] +
sub eax [ebp+var_1C] +
jmp loc_103F302  +
***
push 7  +
jmp loc_106655E  +
push 0Ah  +
jmp loc_106655E  +
push 9  +
pop eax  +
jmp loc_1005BF9  +
neg ecx  +
sbb ecx ecx +
and ecx 3 +
inc ecx  +
inc ecx  +
jmp loc_1005BF7  +
***
push 0Bh  +
jmp loc_1066578  +
push 0Ch  +
pop eax  +
jmp loc_10442BC  +
***
mov eax [esi+8] +
add eax 1Ch +
cmp dword ptr [esi+1Ch] 0 +
mov ecx [eax] +
lea edx [esi-8] +
jz loc_1066593  +
push 6  +
jmp loc_1066595  +
push 7  +
neg edx  +
sbb edx edx +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_10337A0  +
***
mov dword ptr [esi+18h] 4 +
jmp loc_1006CC7  +
***
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_100D507  +
dec dword ptr [ebp-4]  +
dec dword ptr [ebp+8]  +
jmp loc_100D507  +
***
mov eax [esi+10h] +
lea edx [ebp+nNumerator] +
push edx  +
lea ecx [esi+8] +
push 2  +
mov [ebp+nNumber] ecx +
push [ebp+nNumber]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1066607  +
mov esi [esi+10h] +
lea edx [ebp+nNumerator] +
push edx  +
push 3  +
push [ebp+nNumber]  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_1004962  +
push ds:nDenominator  +
push edi  +
push [ebp+nNumerator]  +
jmp loc_100D527  +
***
push 3  +
pop eax  +
cmp [ebp-4] eax +
jnz loc_106662A  +
mov dword ptr [ebp-4] 1 +
jmp loc_100713F  +
***
cmp dword ptr [ebp-4] 1 +
jnz loc_100713F  +
mov [ebp-4] eax +
jmp loc_100713F  +
***
mov eax [esi+8] +
add eax 14h +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov [ebp-8] ebx +
jmp loc_100717D  +
***
mov ecx [ebp+14h] +
add [ebp+8] ecx +
test eax eax +
jz loc_10071E2  +
mov ecx [ebp-8] +
add [eax] ecx +
jmp loc_10071E2  +
***
mov ecx [esi+8] +
call sub_1004226  +
test al 2 +
jz loc_106667F  +
mov eax [ebp+14h] +
sub eax [ebp-8] +
mov esi eax +
jmp loc_1066682  +
mov esi [ebp+14h] +
mov eax [ebp+8] +
sub eax esi +
test eax eax +
jg loc_106668D  +
xor eax eax +
push ds:nDenominator  +
push dword ptr [ebp+10h]  +
push eax  +
call ebx  +
add eax esi +
mov esi [ebp+1Ch] +
mov [ebp+8] eax +
test esi esi +
jz loc_1007233  +
push ds:nDenominator  +
push dword ptr [ebp+10h]  +
push dword ptr [esi]  +
call ebx  +
mov [esi] eax +
jmp loc_1007233  +
***
cmp [ebp+arg_0] eax +
jg loc_100479C  +
jmp loc_100478F  +
***
dec eax  +
push eax  +
push dword ptr [esi+18h]  +
call ebx  +
mov edi [eax+10h] +
inc edi  +
jmp loc_100498D  +
xor eax eax +
jmp loc_10049B1  +
***
xor eax eax +
inc eax  +
jmp loc_1005B5A  +
push eax  +
call sub_1005B99  +
add [ebx] eax +
jmp loc_1005B8D  +
***
mov dword ptr [ebp-4] 8007000Eh +
jmp loc_10072D7  +
***
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx]  +
call ds:off_10067B4  +
jmp loc_10072C1  +
***
mov dword ptr [ebp-4] 8007000Eh +
jmp loc_10072D6  +
***
push dword ptr [eax+4]  +
push dword ptr [eax]  +
lea eax [ebp-18h] +
push eax  +
call ds:OffsetRect  +
jmp loc_100AD67  +
***
mov eax ecx +
mov eax [eax+0E8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_100AD00  +
mov eax [esi+8] +
mov eax [eax+0E8h] +
mov ecx [eax] +
push 0  +
push ebx  +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_100AD00  +
***
push dword ptr [eax+4]  +
push dword ptr [eax]  +
lea eax [ebp-18h] +
push eax  +
call ds:OffsetRect  +
jmp loc_100DC33  +
***
mov eax ecx +
mov eax [eax+0E8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_100AD16  +
mov eax [esi+8] +
mov eax [eax+0E8h] +
mov ecx [eax] +
push ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_100AD16  +
***
sub eax [ebp+0Ch] +
imul eax ds:dword_103F858 +
mov [ebp+0Ch] eax +
jmp loc_103F6F2  +
***
sub eax [ebp+8] +
imul eax ds:dword_103F858 +
mov [ebp+8] eax +
jmp loc_103F733  +
***
call sub_1005671  +
cmp eax 1 +
jnz loc_100C421  +
mov eax [esi+8] +
mov ecx [eax+168h] +
mov ebx [eax+16Ch] +
mov [ebp-8] ecx +
jmp loc_100C424  +
***
mov eax ds:dword_1069924 +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push ecx  +
jmp loc_1044D38  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_106681C  +
mov eax [esi+8] +
movzx eax word ptr [eax+0B0h] +
or eax 0FFFE0000h +
mov [esi+24h] eax +
jmp loc_1044D84  +
***
mov dword ptr [esi+24h] 0FFFEFFFEh +
jmp loc_1044D84  +
***
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
push 0  +
sbb edx edx +
push 4  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_1044DCE  +
***
inc eax  +
jmp loc_10058AF  +
mov ecx dword_10B2AF0 +
mov eax [ebp+var_8] +
mov edx dword_10B2AF4 +
sub eax ecx +
imul eax eax +
sub edx ecx +
mov ecx edx +
cdq   +
idiv  ecx +
cmp dword ptr [esi+8] 2 +
mov ecx dword_10B2AF8 +
mov [ebp+arg_0] eax +
jz loc_106689E  +
xor edx edx +
mov eax 196FB8h +
div  ecx +
cmp [ebp+arg_0] eax +
jl loc_106689E  +
mov eax [edi+10h] +
push 0  +
push 4  +
add eax 1Ch +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+2Ch]  +
jmp loc_1005907  +
mov ebx 28C58h +
xor edx edx +
mov eax ebx +
div  ecx +
cmp [ebp+arg_0] eax +
jge loc_106690B  +
mov eax [edi+10h] +
add eax 14h +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov ecx eax +
imul ecx [ebp+arg_0] +
xor edx edx +
imul ecx ecx +
mov eax ebx +
div  dword_10B2AF8 +
mov byte ptr [esi+78h] 0FFh +
mov [ebp+var_4] eax +
mov eax ecx +
mov ecx [ebp+var_4] +
cdq   +
idiv  ecx +
xor edx edx +
mov [esi+74h] eax +
mov eax ebx +
div  dword_10B2AF8 +
mov byte ptr [esi+82h] 0 +
mov ecx eax +
mov eax [ebp+arg_0] +
imul eax eax +
cdq   +
idiv  ecx +
mov [esi+81h] al +
jmp loc_106698F  +
xor edx edx +
mov eax 11CE98h +
div  ecx +
cmp [ebp+arg_0] eax +
jge loc_1066995  +
mov eax [edi+10h] +
add eax 14h +
mov [ebp+var_C] eax +
xor edx edx +
mov eax 11CE98h +
div  ecx +
push 0  +
mov [ebp+var_4] eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov ecx [ebp+var_4] +
sub ecx [ebp+arg_0] +
xor edx edx +
imul eax ecx +
imul eax eax +
mov [ebp+var_C] eax +
mov eax ebx +
div  dword_10B2AF8 +
mov ecx [ebp+var_4] +
sub ecx eax +
mov eax [ebp+var_C] +
cdq   +
idiv  ecx +
xor edx edx +
mov [esi+74h] eax +
mov ecx dword_10B2AF8 +
mov eax 11CE98h +
div  ecx +
xor edx edx +
mov [ebp+var_4] eax +
mov eax ebx +
div  ecx +
mov ecx [ebp+var_4] +
sub ecx eax +
mov eax [ebp+var_4] +
sub eax [ebp+arg_0] +
imul eax eax +
cdq   +
idiv  ecx +
mov [esi+78h] al +
mov ecx dword_10B2AF8 +
xor edx edx +
mov eax ebx +
div  ecx +
cmp [ebp+arg_0] eax +
mov [ebp+var_4] eax +
jl loc_10669D1  +
xor edx edx +
mov eax 196FB8h +
div  ecx +
mov edx eax +
cmp [ebp+arg_0] edx +
jge loc_10669D1  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_4] +
sub edx [ebp+var_4] +
imul eax eax +
mov [ebp+var_C] edx +
cdq   +
idiv  [ebp+var_C] +
mov [esi+82h] al +
jmp loc_10669FB  +
xor edx edx +
mov eax 196FB8h +
div  ecx +
cmp [ebp+arg_0] eax +
jl loc_1066A01  +
lea eax [ecx-3E8h] +
imul eax eax +
xor edx edx +
div  ecx +
cmp [ebp+arg_0] eax +
jge loc_1066A01  +
mov byte ptr [esi+82h] 0FFh +
mov ecx dword_10B2AF8 +
mov eax ebx +
xor edx edx +
div  ecx +
mov ebx [ebp+arg_0] +
cmp ebx eax +
jl loc_1066A2E  +
lea eax [ecx-3E8h] +
imul eax eax +
xor edx edx +
div  ecx +
cmp ebx eax +
jge loc_1066A2E  +
mov byte ptr [esi+81h] 0FFh +
jmp loc_1005907  +
cmp dword ptr [esi+8] 2 +
jnz loc_1005907  +
lea eax [ecx-3E8h] +
imul eax eax +
xor edx edx +
div  ecx +
mov edx eax +
cmp ebx edx +
jl loc_1005907  +
mov ecx 3E8h +
mov eax ecx +
sub eax ebx +
imul eax eax +
sub ecx edx +
cdq   +
idiv  ecx +
mov [esi+82h] al +
mov [esi+81h] al +
jmp loc_1005907  +
***
mov eax ds:nDenominator +
mov [ebp+var_8] eax +
jmp loc_103F3A9  +
mov edi [edi+10h] +
push 16h  +
lea eax [edi+1Ch] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_103F7F9  +
***
push ds:nDenominator  +
movzx eax word ptr [esi+0Ch] +
mov ecx [ebp+var_4] +
push esi  +
or eax 0FFFE0000h +
push eax  +
call sub_103F2AE  +
cwde   +
push eax  +
push dword ptr [esi+70h]  +
call edi  +
mov [ebp+var_C] eax +
mov eax ds:nDenominator +
push eax  +
sub eax [esi+70h] +
push ebx  +
push eax  +
call edi  +
mov ecx [ebp+var_C] +
add ecx eax +
mov ebx ecx +
jmp loc_1054009  +
***
mov ebx [ebp+var_4] +
jmp loc_1005A6F  +
***
mov eax [esi+4] +
movzx eax word ptr [eax+0B0h] +
or eax 0FFFE0000h +
mov [esi+20h] eax +
jmp loc_100C710  +
***
mov eax [esi+8] +
mov ecx [eax] +
push 0  +
push 2  +
push eax  +
call dword ptr [ecx+70h]  +
lea edi [esi-4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
mov ecx [esi+4] +
lea eax [esi-0Ch] +
neg eax  +
sbb eax eax +
push 0FFFFFFFFh  +
and eax edi +
push eax  +
call sub_100D2A3  +
jmp loc_100C710  +
***
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 4 +
jz loc_100C710  +
mov eax [esi+8] +
mov ecx [eax] +
push 1  +
push 5  +
push eax  +
call dword ptr [ecx+70h]  +
lea edi [esi-4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
push 0  +
jmp loc_1066B65  +
mov eax [esi+8] +
mov ecx [eax] +
push 2  +
push 2  +
push eax  +
call dword ptr [ecx+70h]  +
lea edi [esi-4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
push 3  +
mov eax [esi+4] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-0Ch] +
neg edx  +
sbb edx edx +
and edx edi +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_100C710  +
***
cmp dword ptr [ebp-4] 0 +
jz loc_1066BDA  +
cmp edi [ebp-8] +
jg loc_1066BDA  +
test edi edi +
jle loc_1066B9D  +
cmp edi [ebp-8] +
jnz loc_103363D  +
cmp eax [ebp-14h] +
ja loc_1066BDA  +
cmp edi [ebp-8] +
jnz loc_103363D  +
cmp dword ptr [ebp-8] 0 +
jnz loc_103363D  +
cmp [ebp-4] ecx +
jb loc_1066BB8  +
mov [ebp-4] ecx +
cmp dword ptr [ebp+10h] 0 +
jz loc_103363D  +
cmp dword ptr [ebp-4] 0FFFFh +
jz loc_103363D  +
mov eax [ebp+10h] +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_103363D  +
***
cmp dword ptr [ebp+10h] 0 +
mov [ebp-4] ecx +
mov [ebp-8] edi +
mov [ebp-14h] eax +
jz loc_103363D  +
cmp ecx 0FFFFh +
jnz loc_103363D  +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
mov eax [eax+8] +
push 17h  +
add eax 1Ch +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_103363D  +
***
mov eax 0FFFFh +
cmp [ebp-4] eax +
jnz loc_1005EF8  +
and dword ptr [ebp-4] 0 +
jmp loc_1005EF8  +
***
mov eax [edi+8] +
push ecx  +
add eax 1Ch +
mov edx [eax] +
lea ecx [edi-8] +
neg ecx  +
sbb ecx ecx +
push 0Ch  +
and ecx edi +
push ecx  +
push eax  +
call dword ptr [edx+24h]  +
jmp loc_1005F14  +
***
mov eax [ebx] +
push ebx  +
call dword ptr [eax+6Ch]  +
test eax eax +
jnz loc_1044139  +
mov eax [esi+8] +
push 0  +
push 17h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_1044152  +
mov esi [esi+8] +
push 17h  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_1066C8F  +
mov esi [esi+8] +
push 17h  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp-4] eax +
jmp loc_1044152  +
***
mov [ebp+10h] edi +
jmp loc_1007E9A  +
***
mov eax [esi+8] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0B8h]  +
jmp loc_1007EB7  +
***
mov eax [esi+8] +
push 10h  +
pop ebx  +
push 0  +
push ebx  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [esi+8] +
push 0  +
push 0Eh  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
jmp loc_100CF91  +
***
mov [ebp+var_4] 8007000Eh +
jmp loc_1004752  +
call sub_10A0AE6  +
imul eax eax +
jmp loc_1004680  +
push [ebp+nDenominator]  +
push [ebp+nNumerator]  +
push esi  +
call ds:MulDiv  +
add eax [ebp+rcSrc.left] +
mov ecx [ebp+arg_4] +
mov [ebp+rcDst.left] eax +
mov eax [ebp+var_C] +
add eax ecx +
push eax  +
mov eax [ebp+arg_8] +
push dword ptr [eax]  +
call edi  +
mov ecx [ebp+rcDst.left] +
mov [eax+8] ecx +
jmp loc_10046FA  +
mov [ebp+var_4] 8007000Eh +
jmp loc_1004728  +
mov esi [ebp+rcSrc.bottom] +
mov ebx [ebp+arg_0] +
sub esi [ebp+rcSrc.top] +
and [ebp+arg_4] 0 +
cmp ebx [ebp+var_8] +
jg loc_1004739  +
or eax 0FFFFFFFFh +
sub eax ebx +
mov [ebp+var_C] eax +
cmp [ebp+var_4] 0 +
jl loc_1004751  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
call ds:CopyRect  +
cmp ebx [ebp+arg_0] +
jle loc_1066D92  +
push [ebp+nDenominator]  +
push [ebp+arg_4]  +
push esi  +
call ds:MulDiv  +
add eax [ebp+rcSrc.top] +
mov [ebp+rcDst.top] eax +
mov eax [ebp+var_C] +
add eax ebx +
push eax  +
mov eax [ebp+arg_8] +
push dword ptr [eax]  +
call edi  +
mov ecx [ebp+rcDst.top] +
mov [eax+0Ch] ecx +
mov ecx [ebp+arg_8] +
lea eax [ebp+rcDst] +
push eax  +
call sub_1003DE4  +
cmp eax 0FFFFFFFFh +
jnz loc_1066DAC  +
mov [ebp+var_4] 8007000Eh +
jmp loc_1066DC7  +
cmp [ebp+var_18] 0 +
jz loc_1066DBF  +
mov ecx [ebp+nNumerator] +
push ebx  +
push 1  +
call sub_10048C3  +
jmp loc_1066DC4  +
mov eax 0C8h +
add [ebp+arg_4] eax +
inc ebx  +
cmp ebx [ebp+var_8] +
jg loc_1004733  +
jmp loc_1066D4F  +
mov [ebp+var_4] 8007000Eh +
jmp loc_1004751  +
mov [eax] esi +
jmp loc_1005E2C  +
mov [eax] esi +
jmp loc_1004751  +
***
mov dword ptr [ebp+8] 1 +
jmp loc_1005C61  +
***
mov [ebp+var_40] 0FFFF00h +
jmp loc_100C936  +
mov al [esi+78h] +
test al al +
jbe loc_100C94F  +
or [ebp+var_34] 1 +
mov [ebp+var_2C] ecx +
mov [ebp+var_30] ecx +
mov [ebp+var_28] al +
jmp loc_100C94F  +
***
mov [ebp+var_2C] 0FFFF00h +
jmp loc_1033AF6  +
mov eax [ebp+var_44] +
mov ecx [ebp+var_40] +
mov [ebp+var_44] ecx +
mov [ebp+var_40] eax +
jmp loc_1033B42  +
push 4  +
pop eax  +
jmp loc_1033B51  +
***
mov ecx [ebx+10h] +
call sub_1004226  +
jmp loc_10456B2  +
test eax eax +
jnz loc_1066E81  +
mov edi [ebx+1Ch] +
mov edi [edi+4] +
mov eax [ebx+10h] +
lea edx [ebp+nNumber] +
push edx  +
mov edx [esi+0Ch] +
push 17h  +
push dword ptr [edi+edx*4]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_1004E00  +
and [ebp+var_218] 0 +
jmp loc_1004E00  +
mov [ebp+var_268] eax +
mov [ebp+var_24C] eax +
jmp loc_1005F64  +
mov edi [esi+0Ch] +
cmp edi eax +
jnz loc_1066EB4  +
mov [ebp+var_224] 6 +
jmp loc_1004E26  +
xor eax eax +
cmp edi ecx +
setz al  +
add eax 7 +
mov [ebp+var_224] eax +
jmp loc_1004E26  +
xor eax eax +
inc eax  +
jmp loc_1004E32  +
push [ebp+nNumber]  +
push [ebp+hDC]  +
call sub_10A09AC  +
jmp loc_1004E6C  +
mov eax [esi+0Ch] +
cmp eax 0FFFFFFFEh +
jz loc_10442F4  +
movsx ecx word ptr [ebx+2Ch] +
cmp ecx eax +
jz loc_10442F4  +
jmp loc_1004EA7  +
***
mov eax ds:dword_1069924 +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
sub edi eax +
push 0  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov eax [esi+38h] +
neg eax  +
push eax  +
push 0  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
cmp edi [ebp+rc.top] +
jge loc_10456BF  +
jmp loc_1004EA7  +
***
cmp dword ptr [esi+8] 2 +
mov byte ptr [ebp+var_228] al +
jnz loc_1004ECF  +
cmp al 0FFh +
jnb loc_1004ECF  +
mov ecx [ebp+var_234] +
push edi  +
push [ebp+nNumerator]  +
push [ebp+var_214]  +
push 2  +
call sub_1005BC0  +
mov [ebp+var_230] eax +
jmp loc_1004ECF  +
or al 0FFh +
sub al byte ptr [ebp+var_228] +
movzx eax al +
push eax  +
push edi  +
lea eax [esi+10h] +
push eax  +
push [ebp+var_230]  +
mov eax [ebx+10h] +
push [ebp+var_224]  +
push [ebp+hDC]  +
push dword ptr [eax+3Ch]  +
call sub_100445D  +
jmp loc_1004F0D  +
cmp [ebp+var_24C] edi +
jz loc_1066FC2  +
push 0Dh  +
jmp loc_1066FD2  +
cmp [ebp+var_234] edi +
jz loc_1066FE9  +
cmp dword ptr [esi+8] 2 +
jz loc_1066FEF  +
push 14h  +
call ds:GetSysColorBrush  +
push eax  +
lea eax [esi+10h] +
push eax  +
push [ebp+hDC]  +
call ds:FillRect  +
cmp dword ptr [esi+8] 2 +
jnz loc_1066FFB  +
cmp [ebp+var_214] edi +
jz loc_1004F1F  +
cmp [ebp+var_234] edi +
jnz loc_106701D  +
cmp [ebp+var_214] edi +
jz loc_1067019  +
call ds:GetFocus  +
mov ecx [ebx+10h] +
cmp eax [ecx+4] +
jz loc_106701D  +
push 5  +
jmp loc_106701F  +
push 0Ah  +
pop eax  +
push 100Fh  +
push eax  +
lea eax [esi+10h] +
push eax  +
push [ebp+hDC]  +
call ds:DrawEdge  +
jmp loc_1004F1F  +
mov esi [esi+8] +
xor eax eax +
inc eax  +
cmp esi eax +
jnz loc_106704E  +
cmp [ebp+var_238] 0 +
jnz loc_1067057  +
cmp esi 3 +
jnz loc_1004F2F  +
mov [ebp+var_218] eax +
jmp loc_1004F36  +
cmp [ebp+var_218] 0 +
jnz loc_1004F7F  +
mov ecx [ebp+rcSrc.right] +
mov eax [ebp+rcSrc.left] +
sub ecx eax +
cmp ecx [ebp+var_220] +
jle loc_1004F7F  +
sub eax [ebp+rcSrc.right] +
push 0  +
add eax [ebp+var_220] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:InflateRect  +
jmp loc_1004F7F  +
cmp [ebp+var_218] 0 +
jz loc_1004FA1  +
mov eax [ebp+var_254] +
cmp dword ptr [eax] 0 +
mov ecx [ebp+rcSrc.right] +
jz loc_1067139  +
mov edx [ebp+nDenominator] +
mov esi [ebp+var_220] +
mov eax ecx +
sub eax [ebp+rcSrc.left] +
lea edi [edx+esi] +
cmp edi eax +
jle loc_1067139  +
sub eax esi +
mov esi ds:MulDiv +
mov [ebp+nNumerator] eax +
mov eax [ebx+10h] +
mov ecx [eax+6Ch] +
sub ecx [eax+7Ch] +
push edx  +
push [ebp+nNumerator]  +
push ecx  +
call esi  +
push [ebp+nDenominator]  +
mov edi eax +
mov eax [ebx+10h] +
mov ecx [eax+70h] +
push [ebp+nNumerator]  +
sub ecx [eax+80h] +
add edi [eax+7Ch] +
push ecx  +
call esi  +
mov esi eax +
mov eax [ebx+10h] +
add esi [eax+80h] +
jmp loc_1004FAD  +
mov eax [ebx+10h] +
mov edi [eax+6Ch] +
mov esi [eax+70h] +
jmp loc_1004FB3  +
push dword ptr [ebp-23Ch]  +
mov edi ds:CreateRectRgn +
push dword ptr [ebp-240h]  +
push dword ptr [ebp-244h]  +
push [ebp+rc]  +
call edi  +
mov [ebp+var_220] eax +
test eax eax +
jz loc_1005076  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
call edi  +
push eax  +
push [ebp+hDC]  +
mov [ebp+var_224] eax +
call ds:GetClipRgn  +
test eax eax +
jnz loc_10671A6  +
push [ebp+var_224]  +
call ds:DeleteObject  +
mov [ebp+var_224] esi +
push [ebp+var_220]  +
push [ebp+hDC]  +
call ds:SelectClipRgn  +
jmp loc_1005076  +
mov eax [ebx+14h] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+String] +
push edx  +
push [ebp+var_238]  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax esi +
jge loc_10671E7  +
cmp eax 8007007Ah +
jnz loc_10456DF  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
mov edi [ebx+10h] +
cmp [edi+3Ch] esi +
jz loc_1067251  +
push 3Ch  +
lea eax [ebp+var_2D0] +
push esi  +
push eax  +
mov [ebp+var_2D4] 40h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_2D4] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push 8C24h  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push 1  +
push esi  +
push [ebp+hDC]  +
mov [ebp+var_2D0] 2200h +
push dword ptr [edi+3Ch]  +
call ds:DrawThemeTextEx  +
jmp loc_1067272  +
push 8C24h  +
lea eax [ebp+Rect] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push [ebp+hDC]  +
call ds:DrawTextW  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
mov ecx [ebp+var_250] +
lea eax [eax+ecx+4] +
xor ecx ecx +
cmp eax [ebp+var_230] +
setle cl  +
mov [ebp+var_218] ecx +
jmp loc_10456DF  +
push eax  +
push [ebp+var_230]  +
or [ebp+var_2A0] esi +
push 0FFh  +
call ds:MulDiv  +
jmp loc_1007F87  +
push eax  +
push [ebp+var_214]  +
jmp loc_10672A5  +
mov eax [ebx+10h] +
lea edx [ebp+var_214] +
push edx  +
push 18h  +
push [ebp+var_258]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_106730C  +
mov eax [ebx+10h] +
lea edx [ebp+var_214] +
push edx  +
push 19h  +
push [ebp+var_258]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_106730C  +
mov [ebp+var_214] 0FFh +
lea eax [ebp+piconinfo] +
push eax  +
push esi  +
call ds:GetIconInfo  +
test eax eax +
jz loc_1005299  +
lea eax [ebp+var_280] +
push eax  +
push 18h  +
push dword ptr [ebp-2DCh]  +
call ds:GetObjectW  +
test eax eax +
jz loc_1067379  +
push [ebp+var_214]  +
mov eax [ebp-23Ch] +
sub eax [ebp+Rect.left] +
push esi  +
push [ebp+Rect.left]  +
push [ebp+var_27C]  +
push eax  +
mov eax [ebp+var_250] +
sub eax [ebp+var_27C] +
add eax [ebp+rc] +
push eax  +
push [ebp+hDC]  +
call sub_109ACDE  +
push dword ptr [ebp-2DCh]  +
mov esi ds:DeleteObject +
call esi  +
push dword ptr [ebp-2E0h]  +
call esi  +
jmp loc_1005299  +
mov eax [ebx+10h] +
push 0  +
push 10h  +
push [ebp+var_238]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10052CB  +
mov eax [ebx+10h] +
push 0  +
push 12h  +
push [ebp+var_238]  +
add eax 1Ch +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10052CB  +
mov eax [ebx+14h] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+String] +
push edx  +
push [ebp+var_238]  +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jge loc_10673FA  +
cmp eax 8007007Ah +
jnz loc_10052CB  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call ds:CopyRect  +
add [ebp+Rect.left] esi +
lea esi [ebp+Rect] +
lea edi [ebp-2E8h] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebx+10h] +
cmp dword ptr [esi+3Ch] 0 +
jz loc_10674C5  +
push 3Ch  +
xor edi edi +
lea eax [ebp+var_2D0] +
push edi  +
push eax  +
mov [ebp+var_2D4] 40h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_2D4] +
push eax  +
lea eax [ebp-2E8h] +
push eax  +
push 0C24h  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push 1  +
push edi  +
push [ebp+hDC]  +
mov [ebp+var_2D0] 2200h +
push dword ptr [esi+3Ch]  +
mov esi ds:DrawThemeTextEx +
call esi  +
and [ebp+var_2D0] 0FFFFFDFFh +
lea eax [ebp+var_2D4] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push 8824h  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
mov eax [ebx+10h] +
push 1  +
push edi  +
push [ebp+hDC]  +
push dword ptr [eax+3Ch]  +
call esi  +
jmp loc_1067572  +
mov edi [ebp+hDC] +
push edi  +
call ds:GetTextColor  +
xor esi esi +
mov [ebp+var_22C] eax +
cmp [ebp+var_24C] esi +
jz loc_10674F8  +
push 0Eh  +
call ds:GetSysColor  +
push eax  +
push edi  +
call ds:SetTextColor  +
mov [ebp+var_22C] eax +
mov [ebp+nNumerator] esi +
cmp [ebp+var_234] esi +
jz loc_1067519  +
mov eax [ebx+10h] +
push dword ptr [eax+44h]  +
push edi  +
call ds:SelectObject  +
mov [ebp+nNumerator] eax +
mov esi ds:DrawTextW +
push 0C24h  +
lea eax [ebp-2E8h] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push edi  +
call esi  +
push 8824h  +
lea eax [ebp+Rect] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push edi  +
call esi  +
cmp [ebp+nNumerator] 0 +
jz loc_1067565  +
push [ebp+nNumerator]  +
push edi  +
call ds:SelectObject  +
push [ebp+var_22C]  +
push edi  +
call ds:SetTextColor  +
mov eax [ebp+var_258] +
test eax eax +
jz loc_10052CB  +
mov edx [ebp-2E0h] +
mov esi [ebp+Rect.right] +
sub edx [ebp-2E8h] +
sub esi [ebp+Rect.left] +
mov ecx [eax] +
xor ebx ebx +
cmp edx esi +
setnle bl  +
push ebx  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_10052CB  +
push [ebp+var_224]  +
push [ebp+hDC]  +
call ds:SelectClipRgn  +
cmp [ebp+var_224] 0 +
jz loc_10675D2  +
push [ebp+var_224]  +
call ds:DeleteObject  +
push [ebp+var_220]  +
call ds:DeleteObject  +
jmp loc_10052D8  +
***
cmp dword ptr [esi+2Ch] 0FFFFFFFFh +
jnz loc_10675F2  +
cmp [esi+60h] ecx +
jz loc_1005517  +
push edi  +
push esi  +
push [ebp+hdc]  +
mov ecx ebx +
call sub_10A0DB5  +
xor ecx ecx +
jmp loc_1005517  +
mov eax [esi+4Ch] +
lea ecx [esi+44h] +
sub eax [ecx] +
lea ebx [edi-1] +
cdq   +
idiv  ebx +
push ecx  +
mov [ebp+arg_4] eax +
lea eax [ebp+qrc] +
push eax  +
call ds:CopyRect  +
cmp dword ptr [esi+30h] 0FFFFFFFFh +
jnz loc_1067631  +
xor eax eax +
cmp [esi+8Ch] eax +
jz loc_1067634  +
xor eax eax +
inc eax  +
neg eax  +
sbb eax eax +
and eax 5 +
add eax 5 +
mov ebx eax +
lea esi [edi-1] +
push 100Eh  +
push ebx  +
lea eax [ebp+qrc] +
push eax  +
push [ebp+hdc]  +
call ds:DrawEdge  +
mov eax [ebp+arg_4] +
sub [ebp+qrc.right] eax +
dec esi  +
jz loc_1005559  +
jmp loc_1067643  +
***
mov dword ptr [ebp-94h] 1 +
jmp loc_1005386  +
***
mov ecx [eax] +
mov edi [eax+4] +
mov [ebp-8] ecx +
mov [ebp-4] edi +
jmp loc_100539C  +
***
cmp [ebp-9Ch] eax +
jz loc_1067697  +
mov eax [ebp-0Ch] +
add [ebp-8] eax +
jmp loc_10053C4  +
***
add edi [ebp-0Ch] +
mov [ebp-4] edi +
jmp loc_10053C4  +
***
or eax 0FFFFFFFFh +
jmp loc_10451E6  +
***
mov eax [esi+8] +
add eax 1Ch +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
push ebx  +
sbb edx edx +
push 6  +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_104515C  +
mov dword ptr [ebp+8] 1 +
jmp loc_104514A  +
***
mov eax ds:dword_1069924 +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push ebx  +
jmp loc_104519F  +
***
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10451C1  +
***
cmp dword ptr [ebp+8] 1 +
jnz loc_10451D8  +
cmp [ebp-4] ebx +
jl loc_10451D8  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10451D8  +
***
cmp dword ptr [ebp-4] 0FFFFFFFFh +
jz loc_10451E3  +
mov [edi] ebx +
cmp [ebp-10h] ebx +
jz loc_10451E3  +
mov eax [esi] +
lea ecx [ebp-28h] +
push ecx  +
push ebx  +
push esi  +
call dword ptr [eax+30h]  +
mov eax [ebp-20h] +
sub eax [ebp-28h] +
mov [ebp+8] eax +
fild  dword ptr [ebp+8] +
fmul  ds:dbl_1067798 +
fiadd  dword ptr [ebp-28h] +
call _ftol2_sse  +
push dword ptr [ebp+10h]  +
mov [ebp-20h] eax +
mov eax ds:dword_10442E4 +
push dword ptr [ebp+0Ch]  +
cdq   +
sub eax edx +
sar eax 1 +
neg eax  +
add [ebp-28h] eax +
lea eax [ebp-28h] +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_10451E3  +
mov dword ptr [edi] 1 +
jmp loc_10451E3  +
***
mov eax ds:dword_1069924 +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push ecx  +
jmp loc_104508E  +
***
push 11h  +
jmp loc_100BBEE  +
***
mov eax [esi+8] +
push 0  +
push edi  +
push dword ptr [esi+0Ch]  +
add eax 14h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+98h]  +
jmp loc_100BC0F  +
***
mov eax [edi] +
mov eax [eax+4] +
push 0  +
push dword ptr [eax+ebx*4]  +
mov ecx esi +
call sub_100D1B5  +
inc ebx  +
cmp ebx [ebp+var_4] +
jge loc_100D76A  +
jmp loc_10677C1  +
***
lea ebx [esi+100h] +
mov dword ptr [ebx] 1Ah +
mov dword ptr [esi+104h] 18h +
jmp loc_10207B7  +
lea eax [esi+0B0h] +
push eax  +
lea eax [esi+0A8h] +
push eax  +
push 0Ah  +
push 2  +
call sub_10208CB  +
lea eax [esi+0B4h] +
push eax  +
lea eax [esi+0ACh] +
push eax  +
push 0Ah  +
push 2  +
call sub_10208CB  +
xor eax eax +
lea edi [esi+98h] +
stos   +
stos   +
stos   +
stos   +
jmp loc_10208A0  +
***
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_104499A  +
xor eax eax +
inc eax  +
jmp loc_104499C  +
***
xor eax eax +
push edi  +
mov edi ds:GetSystemMetrics +
push eax  +
mov [esi+4] eax +
mov [esi] eax +
call edi  +
push 1  +
mov [esi+8] eax +
call edi  +
mov [esi+0Ch] eax +
pop edi  +
jmp loc_1020AC5  +
***
push eax  +
call ds:UnhookWindowsHookEx  +
and hhk 0 +
jmp locret_1020996  +
***
push eax  +
call ds:UnhookWindowsHookEx  +
and dword_10B39C4 0 +
jmp locret_1020A7C  +
***
mov eax [ebp+arg_4] +
inc esi  +
test eax eax +
jz loc_1046169  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
jmp loc_1046169  +
***
inc esi  +
jmp loc_10209C1  +
***
mov eax [esi] +
mov [esi+8] eax +
mov eax [esi+4] +
mov [esi+0Ch] eax +
jmp loc_1020C61  +
***
mov [ecx] eax +
jmp loc_10080FD  +
***
push esi  +
mov esi [ebp+8] +
cmp [esi+16Ch] ebx +
jnz loc_1067907  +
mov eax [esi+30h] +
mov [ebp-10h] eax +
lea eax [ebp-18h] +
push eax  +
mov dword ptr [ebp-18h] 10h +
mov dword ptr [ebp-14h] 80000002h +
call ds:TrackMouseEvent  +
mov ecx esi +
mov [esi+160h] ebx +
call sub_10A222A  +
cmp eax ebx +
jnz loc_10679E5  +
push 1  +
push 0FFFFFFF6h  +
mov ecx esi +
call sub_10A3F35  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
push 1  +
mov [ebp-4] eax +
lea eax [ebp-8] +
push eax  +
push dword ptr [esi+30h]  +
mov [ebp-8] ecx +
push ebx  +
call ds:MapWindowPoints  +
lea eax [esi+34h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
call ds:CopyRect  +
mov eax [esi+164h] +
sub eax ebx +
jz loc_1067984  +
dec eax  +
jz loc_1067972  +
dec eax  +
jz loc_1067964  +
dec eax  +
jnz loc_1067994  +
push 8  +
pop eax  +
sub eax [esi+0A4h] +
add [ebp-0Ch] eax +
jmp loc_1067994  +
push 8  +
pop eax  +
sub eax [esi+9Ch] +
add [ebp-10h] eax +
jmp loc_1067994  +
mov ecx [ebp-14h] +
mov eax [esi+0A0h] +
lea eax [ecx+eax-8] +
mov [ebp-14h] eax +
jmp loc_1067994  +
mov ecx [ebp-18h] +
mov eax [esi+98h] +
lea eax [ecx+eax-8] +
mov [ebp-18h] eax +
push dword ptr [ebp-4]  +
lea eax [ebp-18h] +
push dword ptr [ebp-8]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_10679E5  +
cmp [esi+144h] ebx +
jnz loc_10679B9  +
push 1  +
mov ecx esi +
call sub_10A1920  +
push edi  +
lea edi [esi+120h] +
push dword ptr [edi]  +
mov ecx esi +
call sub_10A112B  +
test eax eax +
jz loc_10679D9  +
mov [esi+128h] ebx +
mov dword ptr [edi] 0FFFFFFF6h +
mov esi [esi+20h] +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+2Ch]  +
pop edi  +
pop esi  +
jmp loc_10449B9  +
***
mov [edi] ebx +
jmp loc_102F2BC  +
***
push 0  +
push 1Bh  +
mov ecx esi +
call sub_10A1589  +
mov ecx esi +
call sub_10A455A  +
jmp loc_104611F  +
***
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1046137  +
push dword ptr [ebp-4]  +
lea eax [esi+130h] +
push dword ptr [ebp-8]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_1046137  +
lea eax [esi+188h] +
cmp dword ptr [eax] 1 +
jnz loc_1067A3C  +
or dword ptr [eax] 0FFFFFFFFh +
cmp dword ptr [esi+16Ch] 0 +
jnz loc_1067A69  +
mov eax [esi+30h] +
mov [ebp-10h] eax +
lea eax [ebp-18h] +
push eax  +
mov dword ptr [ebp-18h] 10h +
mov dword ptr [ebp-14h] 2 +
call ds:TrackMouseEvent  +
mov [esi+160h] eax +
mov esi [esi+20h] +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+28h]  +
jmp loc_1046137  +
***
push 7D6h  +
push dword ptr [esi+30h]  +
call ds:KillTimer  +
push edi  +
push 0FFFFFFF6h  +
mov ecx esi +
call sub_10A3F35  +
call ds:GetFocus  +
push eax  +
push dword ptr [esi+30h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jnz loc_1067ABC  +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
mov [ebp+var_C] edi +
call dword ptr [ecx+2Ch]  +
push eax  +
mov ecx esi +
call sub_10A308B  +
mov [ebp+var_8] eax +
mov ecx esi +
call sub_10A6597  +
mov eax [esi+68h] +
mov [ebp+var_40] 1Dh +
mov [ebp+var_3C] 1Eh +
mov [ebp+var_38] 21h +
mov [ebp+var_34] 22h +
mov [ebp+var_30] 1Fh +
mov [ebp+var_2C] 20h +
cmp eax ebx +
jz loc_1067AFB  +
mov eax [eax] +
mov [ebp+hDC] eax +
jmp loc_1067AFE  +
mov [ebp+hDC] ebx +
xor edi edi +
cmp [ebp+hDC] ebx +
jle loc_1067B20  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push 6  +
lea edx [ebp+var_40] +
push edx  +
push eax  +
call dword ptr [ecx+7Ch]  +
inc edi  +
cmp edi [ebp+hDC] +
jl loc_1067B05  +
push 2  +
push ebx  +
push ebx  +
push dword ptr [esi+30h]  +
call ds:SetLayeredWindowAttributes  +
push ebx  +
push ebx  +
push dword ptr [esi+30h]  +
call ds:SetWindowRgn  +
push dword ptr [esi+30h]  +
call ds:GetDC  +
mov [ebp+hDC] eax +
cmp eax ebx +
jz loc_1067B85  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+30h]  +
call ds:GetClientRect  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
push 42h  +
push eax  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
push eax  +
push ebx  +
push ebx  +
push [ebp+hDC]  +
call ds:PatBlt  +
push [ebp+hDC]  +
push dword ptr [esi+30h]  +
call ds:ReleaseDC  +
push ebx  +
push dword ptr [esi+30h]  +
call ds:ShowWindow  +
mov ecx esi +
call sub_10A1509  +
jmp loc_1020A44  +
mov ecx esi +
call sub_10A3700  +
mov ecx esi +
call sub_10A33E3  +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_1020A53  +
push [ebp+var_8]  +
mov ecx [eax] +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+30h]  +
jmp loc_1020A53  +
***
push 0  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10516FA  +
push 1Bh  +
mov ecx esi +
call sub_10A1562  +
test eax eax +
jz loc_1067BF5  +
jmp loc_10516FA  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10516FA  +
push 1  +
mov ecx esi +
call sub_10209D9  +
jmp loc_10516FA  +
***
push 0  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+30h]  +
call ds:GetUpdateRect  +
test eax eax +
jz loc_100E14F  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [ebx+30h]  +
call ds:BeginPaint  +
test eax eax +
jz loc_100E14F  +
sub esp 10h +
mov edi esp +
lea esi [ebp+Rect] +
movs   +
movs   +
movs   +
push eax  +
mov ecx ebx +
movs   +
call sub_10A5C58  +
lea eax [ebp+Paint] +
push eax  +
push dword ptr [ebx+30h]  +
call ds:EndPaint  +
jmp loc_100E14F  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_100E14F  +
mov esi dword ptr [ebp+String] +
cmp esi [ebx+30h] +
jz loc_100E14F  +
mov eax [ebx+20h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
test eax eax +
jnz loc_100E14F  +
push esi  +
call ds:GetParent  +
cmp eax [ebx+30h] +
jz loc_100E14F  +
xor edi edi +
push edi  +
lea eax [ebp+pvParam] +
push eax  +
push edi  +
push 1000h  +
call ds:SystemParametersInfoW  +
cmp [ebp+pvParam] edi +
jz loc_1067CB4  +
cmp esi hWnd +
jz loc_100E14F  +
push 3  +
mov ecx ebx +
call sub_10A1920  +
push 1  +
mov ecx ebx +
call sub_10209D9  +
jmp loc_100E14F  +
mov ecx ebx +
call sub_10A52A8  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
jmp loc_100E14F  +
and [ebp+punk] 0 +
mov ecx [eax] +
lea edx [ebp+punk] +
push edx  +
mov ebx offset stru_1003410 +
push ebx  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_100E13E  +
push [ebp+punk]  +
push dword ptr [ebp+String]  +
push ebx  +
call LresultFromObject  +
mov [ebp+var_48] eax +
mov eax [ebp+punk] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_100E14F  +
sub eax 6 +
jz loc_1067D37  +
sub eax 7Ch +
jz loc_1067D28  +
sub eax 4 +
jnz loc_100E13E  +
push dword ptr [ebp+String]  +
mov ecx ebx +
call sub_10A72ED  +
jmp loc_100E14C  +
push esi  +
push dword ptr [ebp+String]  +
mov ecx ebx +
push [ebp+pvParam]  +
call sub_10A216F  +
jmp loc_100E14C  +
mov ecx esi +
shr ecx 10h +
movsx edi cx +
xor ecx ecx +
cmp esi 0FFFFFFFFh +
setz cl  +
movsx eax si +
push ecx  +
push edi  +
push eax  +
mov ecx ebx +
call sub_10A27CA  +
jmp loc_100E14F  +
mov eax [esi+8] +
cmp eax 0FFFFFFF1h +
jz loc_1067D9C  +
cmp eax 0FFFFFFF4h +
jz loc_1067D8F  +
cmp eax 0FFFFFFFEh +
jnz loc_100E14F  +
push esi  +
mov ecx ebx +
call sub_10A1B2D  +
jmp loc_100E14F  +
push esi  +
mov ecx ebx +
call sub_10A1B5F  +
jmp loc_100E14C  +
push dword ptr [esi+0Ch]  +
mov ecx ebx +
push dword ptr [esi+4]  +
call sub_10A726C  +
jmp loc_100E14C  +
push dword ptr [ebp+String]  +
mov ecx ebx +
call sub_10A55E5  +
jmp loc_100E14F  +
movsx eax si +
sub eax [ebx+34h] +
shr esi 10h +
movsx esi si +
sub esi [ebx+38h] +
xor ecx ecx +
cmp edi 208h +
setz cl  +
push ecx  +
push esi  +
push eax  +
mov ecx ebx +
call sub_10A2678  +
jmp loc_100E14F  +
movsx eax si +
sub eax [ebx+34h] +
shr esi 10h +
movsx esi si +
sub esi [ebx+38h] +
xor ecx ecx +
cmp edi 207h +
setz cl  +
push ecx  +
push esi  +
push eax  +
mov ecx ebx +
call sub_10A534D  +
jmp loc_100E14F  +
movsx eax si +
sub eax [ebx+34h] +
shr esi 10h +
movsx ecx si +
sub ecx [ebx+38h] +
push 0  +
push ecx  +
push eax  +
mov ecx ebx +
call sub_10A53B1  +
jmp loc_100E14F  +
cmp [ebx+1A0h] eax +
jnz loc_100E14F  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_100E14F  +
push dword ptr [ebp+String]  +
mov ecx ebx +
call sub_10A2629  +
test eax eax +
jl loc_100E14F  +
push eax  +
mov ecx ebx +
call sub_10A50BC  +
mov eax [ebx] +
or dword ptr [ebx+44h] 80000002h +
push ebx  +
call dword ptr [eax+4Ch]  +
jmp loc_100E14F  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+30h]  +
call ds:GetClientRect  +
test eax eax +
jz loc_100E14F  +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+String]  +
lea esi [ebp+Rect] +
movs   +
movs   +
movs   +
mov ecx ebx +
movs   +
call sub_10A5C58  +
jmp loc_100E14F  +
***
xor eax eax +
jmp loc_102F487  +
push [ebp+hInstance]  +
call sub_10A1285  +
jmp loc_1067EA4  +
***
mov [ebp+var_4] 80004005h +
jmp loc_1045E16  +
lea ecx [ebp+var_14] +
push ecx  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
push eax  +
call ds:GetWindowRect  +
test eax eax +
jmp loc_1045DF5  +
***
mov eax 80004003h +
jmp loc_1044E5B  +
mov eax 80004005h +
jmp loc_1044E5B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jl loc_1067F37  +
inc eax  +
mov [esi+8] eax +
xor eax eax +
jmp loc_1044E5B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
jmp loc_1067EF3  +
mov edx [ebp+arg_4] +
cmp edx 3 +
jz loc_1067F33  +
jle loc_1044E56  +
cmp edx 5 +
jle loc_1067F28  +
cmp edx 6 +
jnz loc_1044E56  +
jmp loc_1067F33  +
push 1  +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+38h]  +
jmp loc_1067EF3  +
push 0  +
jmp loc_1067F2A  +
xor eax eax +
mov [esi] ax +
inc eax  +
jmp loc_1044E5B  +
***
mov eax [ebp+var_4] +
xor ecx ecx +
cmp eax [ebp+arg_0] +
setz cl  +
mov esi ecx +
test esi esi +
jz loc_1067F6A  +
mov ecx [ebp+arg_4] +
cmp ecx 0FFFFFFFFh +
jz loc_1067F6A  +
cmp ecx 0FFFFFFFEh +
jz loc_1067F6A  +
xor edx edx +
cmp ecx [ebp+var_8] +
setz dl  +
mov esi edx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1045EB5  +
***
mov eax [ebp+var_4] +
xor ecx ecx +
cmp eax [ebp+arg_0] +
setz cl  +
mov esi ecx +
test esi esi +
jz loc_1067F98  +
mov ecx [ebp+arg_4] +
cmp ecx 0FFFFFFFFh +
jz loc_1067F98  +
xor edx edx +
cmp ecx [ebp+var_8] +
setz dl  +
mov esi edx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1045EE4  +
***
mov ecx esi +
or edi 100000h +
call sub_10A7652  +
test eax eax +
jz loc_104604A  +
or edi 4 +
jmp loc_104604A  +
***
or edi 8 +
jmp loc_104605D  +
or edi 80h +
jmp loc_1046070  +
***
mov edi 80004005h +
jmp loc_10454EA  +
xor ecx ecx +
mov [eax] cx +
jmp loc_10454BF  +
***
mov [ebp+var_4] 80004005h +
jmp loc_1045FF5  +
mov [ebp+arg_0] 100000h +
test esi esi +
jz loc_1045FEB  +
mov [ebp+arg_0] 100004h +
jmp loc_1045FEB  +
***
mov [esi] edx +
jmp loc_102BF11  +
mov [esi] edi +
jmp loc_102BF11  +
mov [esi+4] ecx +
jmp loc_102BF24  +
mov [esi+8] edx +
jmp loc_102BF3A  +
mov [esi+8] ecx +
jmp loc_102BF3A  +
mov [esi+10h] ebx +
jmp loc_102BF55  +
mov [esi+10h] ecx +
jmp loc_102BF55  +
mov [esi+0Ch] ebx +
jmp loc_102BF6A  +
mov [esi+14h] edi +
jmp loc_102BF80  +
mov [esi+14h] ecx +
jmp loc_102BF80  +
mov [esi+18h] edi +
jmp loc_102BF93  +
mov [esi+18h] ecx +
jmp loc_102BF93  +
mov [esi+1Ch] edi +
jmp loc_102BFA6  +
mov [esi+1Ch] ecx +
jmp loc_102BFA6  +
mov [esi+20h] ebx +
jmp loc_102BFBE  +
mov [esi+20h] ecx +
jmp loc_102BFBE  +
mov [esi+24h] edi +
jmp loc_102BFCE  +
mov [esi+24h] ecx +
jmp loc_102BFCE  +
***
mov eax 80040203h +
jmp loc_102FA3C  +
***
mov eax 80040203h +
jmp loc_1030928  +
***
xor eax eax +
cmp [ebp+arg_4] eax +
setnz al  +
mov [esi+4] eax +
jmp loc_102FBE8  +
xor eax eax +
cmp [ebp+arg_4] eax +
setnz al  +
mov [esi+8] eax +
jmp loc_102FC05  +
***
mov ecx [eax+54h] +
cmp ecx [edx+54h] +
jnz loc_102FACD  +
mov ecx [eax+0A8h] +
cmp ecx [edx+0A8h] +
jnz loc_102FACD  +
mov cl [eax+1ACh] +
cmp cl [edx+1ACh] +
jnz loc_102FACD  +
push 4  +
pop ecx  +
lea edi [edx+44h] +
lea esi [eax+44h] +
xor ebx ebx +
cmps   +
jnz loc_102FACD  +
push 4  +
pop ecx  +
lea edi [edx+98h] +
lea esi [eax+98h] +
xor ebx ebx +
cmps   +
jnz loc_102FACD  +
push 4  +
lea esi [edx+4] +
lea ecx [eax+4] +
pop ebx  +
mov di [ecx] +
cmp di [esi] +
jnz loc_106817B  +
test di di +
jz loc_1068177  +
mov di [ecx+2] +
cmp di [esi+2] +
jnz loc_106817B  +
add ecx ebx +
add esi ebx +
test di di +
jnz loc_1068157  +
xor ecx ecx +
jmp loc_1068180  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_102FACD  +
lea esi [edx+58h] +
lea ecx [eax+58h] +
mov di [ecx] +
cmp di [esi] +
jnz loc_10681B2  +
test di di +
jz loc_10681AE  +
mov di [ecx+2] +
cmp di [esi+2] +
jnz loc_10681B2  +
add ecx ebx +
add esi ebx +
test di di +
jnz loc_106818E  +
xor ecx ecx +
jmp loc_10681B7  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_102FACD  +
add edx 0ACh +
add eax 0ACh +
mov cx [eax] +
cmp cx [edx] +
jnz loc_10681EE  +
test cx cx +
jz loc_10681EA  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_10681EE  +
add eax ebx +
add edx ebx +
test cx cx +
jnz loc_10681CA  +
xor eax eax +
jmp loc_10681F3  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_102FACD  +
inc eax  +
jmp loc_102FACF  +
***
push esi  +
lea eax [ebp+var_104] +
push eax  +
push [ebp+hKey]  +
call sub_10A9AE1  +
mov ebx eax +
jmp loc_103065A  +
lea eax [ebp+var_104] +
jmp loc_103066C  +
mov ebx 40204h +
jmp loc_10306C0  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_1068244  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_10306CC  +
***
mov [ebp+var_1BC] 2 +
lea eax [ebp+TimeZoneInformation] +
push eax  +
call ds:GetTimeZoneInformation  +
cmp eax 0FFFFFFFFh +
jz loc_1030894  +
push edi  +
push 4  +
pop ecx  +
lea edi [ebp+TimeZoneInformation.DaylightDate] +
lea esi [ebp+TimeZoneInformation.StandardDate] +
xor eax eax +
cmps   +
jnz loc_1068319  +
push 0FEh  +
push eax  +
mov word ptr [ebp+var_104] ax +
lea eax [ebp+var_104+2] +
push eax  +
call memset  +
add esp 0Ch +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1030551  +
mov [ebp+var_1B8] eax +
test eax eax +
jl loc_1068319  +
xor ecx ecx +
cmp eax 40204h +
setz cl  +
xor eax eax +
mov word ptr [ebp+var_1CC] ax +
lea edi [ebp+var_1CC+2] +
stos   +
stos   +
stos   +
stos   +
test ecx ecx +
jz loc_10682F5  +
push 4  +
pop ecx  +
lea edi [ebp+var_1CC] +
lea esi [ebp+TimeZoneInformation.StandardDate] +
xor eax eax +
cmps   +
jnz loc_1068313  +
jmp loc_1068319  +
cmp [ebp+var_1BC] 2 +
jnz loc_1068319  +
push 4  +
pop ecx  +
lea edi [ebp+var_1CC] +
lea esi [ebp+TimeZoneInformation.StandardDate] +
xor eax eax +
cmps   +
jnz loc_1068319  +
mov dword ptr [ebx] 1 +
pop edi  +
jmp loc_1030894  +
***
push offset a_dstoff  +
push edi  +
lea eax [ebp+SubKey] +
push eax  +
call sub_107BEA8  +
mov esi eax +
jmp loc_10307F0  +
mov esi 40208h +
jmp loc_1030817  +
***
and dword_10B116C 0 +
push 60h  +
pop eax  +
mov dword_10B10A4 eax +
mov dword_10B10A8 eax +
pop edi  +
jmp locret_1015B7A  +
***
cmp dword ptr [ecx+18h] 0 +
jz loc_1068379  +
mov eax [ecx+8] +
jmp loc_106839B  +
mov edx [ecx+10h] +
cmp edx 32h +
jbe loc_1068388  +
push 64h  +
pop eax  +
sub eax edx +
jmp loc_106839B  +
cmp edx 17h +
jbe loc_1068395  +
push 5Fh  +
pop eax  +
sub eax [ecx+0Ch] +
jmp loc_106839B  +
mov eax [ecx+8] +
add eax 19h +
add eax 0FFFFFFF6h +
mov [ebp+arg_0] eax +
fild  [ebp+arg_0] +
test eax eax +
jge loc_10683AE  +
fadd  ds:dbl_1069928 +
fmul  ds:dbl_10683F8 +
fdiv  ds:dbl_100C1F8 +
fadd  ds:dbl_10683F0 +
fmul  ds:dbl_10683E8 +
fadd  ds:dbl_1041540 +
call _ftol2  +
mov ecx [ebp+arg_4] +
shl eax 18h +
and esi 0FFFFFFh +
or eax esi +
mov [ecx] eax +
jmp loc_10309F1  +
***
mov [esi] edi +
jmp loc_101BEE4  +
***
call sub_101AE40  +
jmp loc_101A802  +
***
push [ebp+arg_4]  +
call ds:DeleteObject  +
call sub_101AE40  +
mov esi eax +
jmp loc_101B6C8  +
call sub_101AE40  +
mov esi eax +
jmp loc_101B6E2  +
***
mov [esi] ax +
jmp loc_101CCEA  +
push edi  +
push [ebp+arg_10]  +
push [ebp+var_2C]  +
call sub_100665F  +
mov ebx eax +
test ebx ebx +
jl loc_101CCEA  +
cmp [ebp+arg_8] 0 +
jbe loc_101CCEA  +
mov ecx [ebp+nSize] +
xor eax eax +
mov [ecx] ax +
jmp loc_101CCEA  +
***
lea eax [ebp+ppv] +
push eax  +
push offset stru_10684C4  +
push 1  +
push 0  +
push offset stru_10684B4  +
call CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_101CC3A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_408] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_101CC3A  +
***
add ebx 2 +
push ebx  +
push edi  +
lea eax [ebp+Start] +
push eax  +
call sub_100665F  +
jmp loc_10684EC  +
call sub_101AE40  +
mov esi eax +
jmp loc_101A8F3  +
***
lea eax [ebp+lpStart] +
push eax  +
push offset aDgPgumfmidjAlg  +
push [ebp+var_8]  +
call sub_107DB70  +
test eax eax +
jl loc_1068516  +
xor eax eax +
cmp [ebp+lpStart] 1F5h +
setz al  +
mov edi eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_101CDB7  +
lea eax [ebp+pv] +
push eax  +
push [ebp+Sids]  +
call sub_1080354  +
test eax eax +
jl loc_101CDAC  +
push 0FFFFFFFFh  +
push [ebp+lpStart]  +
push 0FFFFFFFFh  +
push [ebp+pv]  +
push 1  +
push 7Fh  +
call ds:CompareStringW  +
cmp eax 2 +
jnz loc_1068554  +
xor edi edi +
inc edi  +
push [ebp+pv]  +
call CoTaskMemFree  +
jmp loc_101CDAC  +
***
cmp esi 0FFFFFFFFh +
jz loc_101D007  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push esi  +
call sub_101BB7F  +
mov edi eax +
cmp edi ebx +
jl loc_101D00C  +
push ebx  +
mov ebx [ebp+NumberOfBytesRead] +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push esi  +
push ebx  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_10685DB  +
cmp [ebp+NumberOfBytesRead] esi +
jz loc_10685C7  +
mov edi 80004005h +
jmp loc_10685E2  +
mov eax [ebp+var_424] +
mov [eax] ebx +
mov eax [ebp+var_428] +
mov [eax] esi +
xor ebx ebx +
jmp loc_10685E2  +
call sub_107BF7B  +
mov edi eax +
push ebx  +
call ds:LocalFree  +
jmp loc_101D00C  +
call sub_107BF7B  +
mov edi eax +
jmp loc_101D018  +
***
push dword ptr [esi]  +
call ds:LocalFree  +
mov [esi] edi +
mov [ebp+lpFileName] 80004005h +
jmp loc_101D242  +
push dword ptr [esi]  +
call ds:LocalFree  +
mov [esi] edi +
call sub_101AE40  +
mov [ebp+lpFileName] eax +
jmp loc_101D242  +
call sub_101AE40  +
mov [ebp+lpFileName] eax +
jmp loc_101D24D  +
***
lea eax [ebp+FileName] +
push eax  +
push [ebp+arg_C]  +
push ebx  +
call sub_100665F  +
test eax eax +
jge loc_101D1A5  +
xor eax eax +
mov [ebx] ax +
jmp loc_101D1A5  +
***
xor ecx ecx +
mov [eax] cx +
jmp loc_101D073  +
push [ebp+lpStart]  +
call sub_101CD4B  +
xor ecx ecx +
test eax eax +
setnz cl  +
inc ecx  +
mov [ebp+arg_8] ecx +
xor esi esi +
jmp loc_101D101  +
xor eax eax +
mov [ebp+pvar.vt] ax +
lea edi [ebp+pvar.wReserved1] +
stos   +
stos   +
stos   +
lea edx [ebp+pvar] +
push edx  +
stos   +
mov eax [ebp+var_14] +
mov ecx [eax] +
push offset dword_10687D4  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
cmp esi ebx +
jl loc_1068734  +
cmp dword ptr [ebp+pvar.anonymous_0+4] ebx +
jz loc_106871C  +
cmp dword ptr [ebp+pvar.anonymous_0] ebx +
jbe loc_106871C  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+uBytes] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [ebp+pvar.anonymous_0]  +
mov [ebp+var_10] ebx +
push dword ptr [ebp+pvar.anonymous_0+4]  +
mov [ebp+uBytes] ebx +
push [ebp+arg_4]  +
mov [ebp+var_C] ebx +
push ebx  +
call sub_10AAFA0  +
mov esi eax +
cmp esi ebx +
jl loc_1068729  +
mov edi [ebp+arg_C] +
push edi  +
push [ebp+uBytes]  +
call sub_101BB7F  +
mov esi eax +
cmp esi ebx +
jl loc_1068729  +
push [ebp+uBytes]  +
push [ebp+var_10]  +
push dword ptr [edi]  +
call memcpy  +
add esp 0Ch +
cmp [ebp+arg_14] ebx +
jz loc_1068712  +
cmp [ebp+var_C] ebx +
jz loc_1068712  +
push [ebp+var_C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
call sub_100665F  +
mov eax [ebp+arg_10] +
mov ecx [ebp+uBytes] +
mov [eax] ecx +
jmp loc_1068729  +
cmp [ebp+arg_8] 3 +
jz loc_1068729  +
mov [ebp+var_8] 1 +
lea eax [ebp+pvar] +
push eax  +
call PropVariantClear  +
jmp loc_1068743  +
cmp [ebp+arg_8] 3 +
jz loc_1068743  +
xor esi esi +
mov [ebp+var_8] 1 +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_101D12C  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_10]  +
mov [ebp+var_1C] ebx +
push [ebp+uBytes]  +
mov [ebp+var_18] ebx +
push [ebp+arg_4]  +
mov [ebp+var_C] ebx +
push ebx  +
call sub_10AAFA0  +
mov esi eax +
cmp esi ebx +
jl loc_10687BB  +
push [ebp+arg_C]  +
mov edi [ebp+var_18] +
push edi  +
call sub_101BB7F  +
mov esi eax +
cmp esi ebx +
jl loc_10687BB  +
mov eax [ebp+arg_C] +
push edi  +
push [ebp+var_1C]  +
push dword ptr [eax]  +
call memcpy  +
add esp 0Ch +
cmp [ebp+arg_14] ebx +
jz loc_10687B6  +
cmp [ebp+var_C] ebx +
jz loc_10687B6  +
push [ebp+var_C]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
call sub_100665F  +
mov eax [ebp+arg_10] +
mov [eax] edi +
push [ebp+uBytes]  +
call ds:LocalFree  +
jmp loc_101D132  +
call sub_10AB1B1  +
jmp loc_101D122  +
***
call sub_101AE40  +
mov esi eax +
jmp loc_100B0D3  +
mov esi 8007007Ah +
jmp loc_100B0D3  +
***
retf 0  +
***
retn   +
***
retn 0  +
***
retf   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+14h] +
mov dword ptr [esi] offset off_100E428 +
mov dword ptr [esi+4] offset off_100F504 +
test eax eax +
jz loc_106C7D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+18h] +
test eax eax +
jz loc_106C7E1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push dword ptr [esi+2Ch]  +
call ds:__imp_CoTaskMemFree  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+14h] +
test ecx ecx +
jnz loc_106C804  +
mov eax 80070057h +
jmp loc_106C821  +
and dword ptr [ecx] 0 +
cmp dword ptr [ebp+0Ch] 0 +
mov eax 80040110h +
jnz loc_106C821  +
mov eax [ebp+8] +
push ecx  +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFFCh +
mov edx [eax] +
push eax  +
call dword ptr [edx]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push 20h  +
push dword ptr [ebp+8]  +
call sub_101F07B  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_106C883  +
jmp loc_106C893  +
push [ebp+arg_0]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push 0  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jge loc_106C87A  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
mov eax 80040110h +
jnz loc_106C8D0  +
mov ecx pUnk +
mov eax 8007000Eh +
test ecx ecx +
jz loc_106C8D0  +
mov eax [ebp+0Ch] +
mov [eax] ecx +
mov eax pUnk +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
xor eax eax +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100E48D  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100E4BA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_106C7B5  +
test byte ptr [ebp+8] 1 +
jz loc_106C911  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1035344  +
push 1  +
push 0  +
push offset stru_101DD90  +
mov esi ecx +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_106C959  +
push [ebp+ppv]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
mov edi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push edi  +
push [ebp+arg_0]  +
call sub_100E551  +
mov ebx eax +
xor edi edi +
cmp ebx edi +
jz loc_106C9CE  +
push esi  +
mov ecx ebx +
call sub_1023D3E  +
mov esi eax +
cmp esi edi +
jz loc_106C9C7  +
movzx eax [ebp+arg_4] +
push 9  +
mov [ebp+var_34] eax +
mov [ebp+var_3C] edi +
mov [ebp+var_38] edi +
mov [ebp+var_30] edi +
mov [ebp+var_2C] edi +
pop ecx  +
xor eax eax +
mov [ebp+var_40] 40h +
mov [ebp+var_28] 1 +
lea edi [ebp+var_24] +
stos   +
mov eax [esi] +
lea ecx [ebp+var_40] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push esi  +
mov esi 80004005h +
test eax eax +
jz loc_106CA19  +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push offset stru_101DA88  +
push eax  +
xor esi esi +
call dword ptr [ecx]  +
test eax eax +
jl loc_106CA19  +
push [ebp+arg_4]  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub esp 10h +
sub eax 82h +
jz loc_106CA92  +
dec eax  +
dec eax  +
jnz loc_106CAA1  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+8]  +
call ds:GetWindowRect  +
mov eax dword_10B2138 +
sub eax 0 +
mov ecx dword_10B2078 +
jz loc_106CA6D  +
dec eax  +
jz loc_106CA68  +
dec eax  +
jz loc_106CA63  +
add [ebp-0Ch] ecx +
jmp loc_106CA70  +
add [ebp-10h] ecx +
jmp loc_106CA70  +
sub [ebp-4] ecx +
jmp loc_106CA70  +
sub [ebp-8] ecx +
mov ecx [ebp+14h] +
movsx eax word ptr [ebp+14h] +
shr ecx 10h +
movsx ecx cx +
push ecx  +
push eax  +
lea eax [ebp-10h] +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_106CAA1  +
or eax 0FFFFFFFFh +
jmp locret_106CAB2  +
push 0  +
push offset loc_106CA25  +
push dword ptr [ebp+8]  +
call sub_103519B  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
leave   +
retn 18h  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100E4D5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+10h] +
mov ecx [eax] +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
push esi  +
mov edi eax +
call sub_102B83C  +
mov ecx offset unk_10B1460 +
call sub_101F58F  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push offset aTaskbarwinxp  +
push 1  +
mov edi 80004005h +
call sub_1029DF2  +
mov esi eax +
test esi esi +
jz loc_106CB30  +
push [ebp+arg_0]  +
push 1  +
push esi  +
call sub_106C9D9  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1025F49  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1025F49  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+hProcess]  +
xor ebx ebx +
call ds:GetPriorityClass  +
mov esi [ebp+arg_4] +
mov [esi] eax +
cmp eax ebx +
jnz loc_106CB7F  +
call sub_101AE40  +
mov ebx eax +
jmp loc_106CBB3  +
push edi  +
mov edi ds:NtQueryInformationProcess +
push ebx  +
push 4  +
lea eax [esi+4] +
push eax  +
push 21h  +
push [ebp+hProcess]  +
call edi  +
test eax eax +
jl loc_106CBAB  +
push 0  +
push 4  +
add esi 8 +
push esi  +
push 27h  +
push [ebp+hProcess]  +
call edi  +
test eax eax +
jge loc_106CBB2  +
or eax 10000000h +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_8] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
jz loc_106CBED  +
push dword ptr [edi]  +
push [ebp+hProcess]  +
call ds:SetPriorityClass  +
test eax eax +
jnz loc_106CBED  +
call sub_101AE40  +
mov [ebp+var_4] eax +
mov esi ds:NtSetInformationProcess +
push 4  +
lea eax [edi+4] +
push eax  +
push 21h  +
push [ebp+hProcess]  +
call esi  +
mov ebx 10000000h +
test eax eax +
jge loc_106CC0E  +
or eax ebx +
mov [ebp+var_4] eax +
push 4  +
add edi 8 +
push edi  +
push 27h  +
push [ebp+hProcess]  +
call esi  +
test eax eax +
jge loc_106CC24  +
or eax ebx +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+18h]  +
call ds:CoRevokeClassObject  +
and dword ptr [esi+18h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
lea esi dword_10B2834[edi] +
mov ecx [esi] +
test ecx ecx +
jz loc_106CC6E  +
call sub_106CC33  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
add edi 4 +
cmp edi 10h +
jb loc_106CC52  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
mov edi esi +
mov [ebp+arg_0] 1 +
cmp esi ebx +
jz loc_106CCF9  +
cmp [ebp+lpszStart] ebx +
jz loc_106CCF9  +
mov eax [ebp+arg_C] +
add eax eax +
push eax  +
push ebx  +
push [ebp+lpszStart]  +
call memset  +
movzx eax word ptr [esi] +
add esp 0Ch +
cmp ax bx +
jz loc_106CCEC  +
movzx eax ax +
cmp ax 3Dh +
jz loc_106CCEC  +
cmp ax 2Ch +
jz loc_106CCEC  +
cmp ax 22h +
jnz loc_106CCDB  +
xor eax eax +
cmp [ebp+var_4] ebx +
setz al  +
mov [ebp+var_4] eax +
push edi  +
call ds:CharNextW  +
mov edi eax +
movzx eax word ptr [edi] +
cmp ax bx +
jnz loc_106CCBE  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_106CD02  +
cmp word ptr [edi] 3Dh +
jz loc_106CD13  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
jle loc_106CD13  +
cmp word ptr [edi] 3Dh +
jnz loc_106CD13  +
cmp [ebp+var_4] 0 +
jnz loc_106CD13  +
lea esi [edi+2] +
xor edi edi +
jmp loc_106CD5F  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_106CD8A  +
test edi edi +
jnz loc_106CD2F  +
cmp ax 3Dh +
jz loc_106CD4F  +
cmp ax 2Ch +
jz loc_106CD4F  +
cmp ax 22h +
jnz loc_106CD3E  +
xor eax eax +
test edi edi +
setz al  +
mov edi eax +
push esi  +
call ds:CharNextW  +
mov esi eax +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_106CD1F  +
cmp word ptr [esi] 0 +
jz loc_106CD8A  +
push esi  +
call ds:CharNextW  +
mov esi eax +
dec ebx  +
cmp ebx 1 +
jg loc_106CD17  +
movzx eax word ptr [esi] +
cmp ax 20h +
jz loc_106CD7F  +
cmp ax 9 +
jz loc_106CD7F  +
cmp ax 0Ah +
jz loc_106CD7F  +
cmp ax 0Dh +
jnz loc_106CD97  +
push esi  +
call ds:CharNextW  +
mov esi eax +
jmp loc_106CD64  +
mov ecx [ebp+lpszStart] +
xor eax eax +
mov [ecx] ax +
jmp loc_106CCF9  +
movzx eax word ptr [esi] +
mov edi [ebp+lpszStart] +
xor ebx ebx +
test ax ax +
jz loc_106CE47  +
cmp ax 22h +
jnz loc_106CDDD  +
test ebx ebx +
jz loc_106CDD2  +
lea eax [esi+2] +
cmp word ptr [eax] 22h +
jnz loc_106CDD2  +
mov ecx [ebp+arg_0] +
cmp ecx [ebp+arg_C] +
jge loc_106CDCE  +
push 22h  +
pop ecx  +
mov [edi] cx +
inc edi  +
inc edi  +
inc [ebp+arg_0]  +
mov esi eax +
jmp loc_106CDFD  +
xor eax eax +
test ebx ebx +
setz al  +
mov ebx eax +
jmp loc_106CDFD  +
test ebx ebx +
jnz loc_106CDED  +
cmp ax 3Dh +
jz loc_106CE37  +
cmp ax 2Ch +
jz loc_106CE37  +
mov ecx [ebp+arg_C] +
cmp [ebp+arg_0] ecx +
jge loc_106CDFD  +
mov [edi] ax +
inc edi  +
inc edi  +
inc [ebp+arg_0]  +
push esi  +
call ds:CharNextW  +
mov esi eax +
movzx eax word ptr [esi] +
test ax ax +
jz loc_106CE37  +
jmp loc_106CDA8  +
push edi  +
push [ebp+lpszStart]  +
call ds:CharPrevW  +
mov edi eax +
movzx eax word ptr [edi] +
cmp ax 20h +
jz loc_106CE37  +
cmp ax 9 +
jz loc_106CE37  +
cmp ax 0Ah +
jz loc_106CE37  +
cmp ax 0Dh +
jnz loc_106CE3E  +
cmp edi [ebp+lpszStart] +
jbe loc_106CE47  +
jmp loc_106CE10  +
push edi  +
call ds:CharNextW  +
mov edi eax +
xor eax eax +
mov [edi] ax +
inc eax  +
jmp loc_106CCFB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi offset dword_100D864 +
movs   +
movs   +
push 50h  +
lea ecx [ebp+szStart] +
push ecx  +
push [ebp+arg_8]  +
movs   +
push eax  +
movs   +
call sub_106CC7E  +
pop edi  +
pop esi  +
test eax eax +
jz loc_106CEA5  +
push [ebp+arg_0]  +
lea eax [ebp+szStart] +
push eax  +
call ds:__imp_GUIDFromStringW  +
mov ecx [ebp+var_4] +
mov eax [ebp+arg_0] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_8] +
and dword ptr [edi] 0 +
and dword ptr [ebx] 0 +
push 50h  +
lea ecx [ebp+szStart] +
push ecx  +
push [ebp+arg_4]  +
mov [ebp+var_A8] 80004005h +
push eax  +
call sub_106CC7E  +
test eax eax +
jz loc_106CF4C  +
cmp [ebp+szStart] 3Ah +
jnz loc_106CF4C  +
push esi  +
mov esi ds:StrToIntW +
lea eax [ebp-0A2h] +
push eax  +
call esi  +
mov [ebp+var_AC] eax +
push 3Ah  +
lea eax [ebp-0A2h] +
push eax  +
call ds:__imp_StrChrW  +
test eax eax +
jz loc_106CF4B  +
add eax 2 +
push eax  +
call esi  +
mov ecx [ebp+var_AC] +
and [ebp+var_A8] 0 +
mov [edi] ecx +
mov [ebx] eax +
pop esi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_A8] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_4]  +
xor edi edi +
push [ebp+arg_0]  +
call ds:SHLockShared  +
mov esi eax +
test esi esi +
jz loc_106CF92  +
push esi  +
call ds:__imp_SHELL32_18  +
push esi  +
mov edi eax +
call ds:SHUnlockShared  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
xor esi esi +
push [ebp+arg_0]  +
call sub_106CEBB  +
test eax eax +
jl loc_106CFCB  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_106CF67  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
inc ebx  +
mov esi 104h +
jmp loc_106D043  +
push offset aIdlist  +
lea eax [ebp+szStart] +
push eax  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_106D042  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_210] +
push eax  +
inc ebx  +
push ebx  +
push edi  +
call sub_106CEBB  +
test eax eax +
jl loc_106D042  +
push [ebp+var_214]  +
push [ebp+var_210]  +
call ds:SHFreeShared  +
inc ebx  +
push esi  +
lea eax [ebp+szStart] +
push eax  +
push ebx  +
push edi  +
call sub_106CC7E  +
test eax eax +
jnz loc_106D000  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push eax  +
push offset aClsidSShellexp  +
lea eax [ebp+var_20C] +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 10h +
test eax eax +
jl loc_106D0DB  +
mov eax [ebp+arg_8] +
add eax eax +
mov [ebp+var_210] eax +
lea eax [ebp+var_210] +
push eax  +
push esi  +
push 0  +
push 10002h  +
push 0  +
lea eax [ebp+var_20C] +
push eax  +
push 80000000h  +
call ds:__imp_SHRegGetValueW  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_106D0DD  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6B4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_688] edi +
call sub_10191D1  +
mov [ebp+var_694] eax +
test eax eax +
jl loc_106D357  +
and [ebp+var_690] 0 +
mov esi 104h +
push esi  +
xor eax eax +
lea ecx [ebp+szStart] +
inc eax  +
push ecx  +
push eax  +
mov [ebp+var_680] eax +
push edi  +
jmp loc_106D487  +
mov edi ds:__imp_StrCmpICW +
push offset aN  +
lea eax [ebp+szStart] +
push eax  +
call edi  +
test eax eax +
jnz loc_106D1A3  +
or dword ptr [ebx+8] 1 +
jmp loc_106D46D  +
push offset aExpand  +
lea eax [ebp+szStart] +
push eax  +
call edi  +
test eax eax +
jnz loc_106D1BE  +
or dword ptr [ebx+8] 10h +
jmp loc_106D46D  +
push offset aE  +
lea eax [ebp+szStart] +
push eax  +
call edi  +
test eax eax +
jnz loc_106D1D9  +
or dword ptr [ebx+8] 8 +
jmp loc_106D46D  +
push offset aRoot  +
lea eax [ebp+szStart] +
push eax  +
call edi  +
test eax eax +
lea eax [ebp+szStart] +
jnz loc_106D36F  +
and [ebp+var_684] 0 +
and [ebp+var_68C] 0 +
inc [ebp+var_680]  +
push esi  +
push eax  +
push [ebp+var_680]  +
push [ebp+var_688]  +
call sub_106CC7E  +
test eax eax +
jz loc_106D4CA  +
lea eax [ebp+var_67C] +
push eax  +
lea eax [ebp+szStart] +
push eax  +
call ds:__imp_GUIDFromStringW  +
test eax eax +
lea eax [ebp+szStart] +
jz loc_106D2B7  +
push eax  +
push 27h  +
lea eax [ebp+var_25C] +
push eax  +
call sub_100665F  +
inc [ebp+var_680]  +
push esi  +
lea eax [ebp+szStart] +
push eax  +
push [ebp+var_680]  +
push [ebp+var_688]  +
call sub_106CC7E  +
test eax eax +
jnz loc_106D290  +
push esi  +
lea eax [ebp+szStart] +
push eax  +
lea eax [ebp+var_25C] +
push eax  +
call sub_106D06C  +
test eax eax +
jz loc_106D4CA  +
xor eax eax +
push eax  +
push eax  +
lea ecx [ebp+var_684] +
push ecx  +
push eax  +
lea eax [ebp+szStart] +
push eax  +
call ds:__imp_SHParseDisplayName  +
lea eax [ebp+var_67C] +
mov [ebp+var_68C] eax +
jmp loc_106D305  +
push offset aIdlist  +
push eax  +
call edi  +
test eax eax +
jnz loc_106D2EC  +
inc [ebp+var_680]  +
push [ebp+var_680]  +
mov [ebp+var_690] 1 +
push [ebp+var_688]  +
call sub_106CF9F  +
mov [ebp+var_684] eax +
jmp loc_106D305  +
xor eax eax +
push eax  +
push eax  +
lea ecx [ebp+var_684] +
push ecx  +
push eax  +
lea eax [ebp+szStart] +
push eax  +
call ds:__imp_SHParseDisplayName  +
cmp [ebp+var_684] 0 +
jz loc_106D32D  +
push [ebp+var_684]  +
push [ebp+var_68C]  +
call sub_107C770  +
push [ebp+var_684]  +
mov [ebx] eax +
call ds:__imp_SHELL32_155  +
cmp [ebp+var_690] 0 +
jz loc_106D46D  +
xor eax eax +
cmp [ebx] eax +
jnz loc_106D34C  +
push ebx  +
push eax  +
push eax  +
push 5  +
push eax  +
call ds:SHGetFolderLocation  +
push [ebp+var_694]  +
call sub_1019203  +
xor eax eax +
cmp [ebx] eax +
setnz al  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
push offset aSelect  +
push eax  +
call edi  +
test eax eax +
jnz loc_106D384  +
or dword ptr [ebx+8] 4 +
jmp loc_106D46D  +
push offset aIdlist  +
lea eax [ebp+szStart] +
push eax  +
call edi  +
test eax eax +
jz loc_106D499  +
push offset aSeparate  +
lea eax [ebp+szStart] +
push eax  +
call edi  +
test eax eax +
jnz loc_106D3B8  +
mov dword ptr [ebx+4] 1 +
jmp loc_106D46D  +
push offset aFactory  +
lea eax [ebp+szStart] +
push eax  +
call edi  +
test eax eax +
jnz loc_106D408  +
inc [ebp+var_680]  +
push [ebp+var_680]  +
lea eax [ebp+var_6B4] +
push [ebp+var_688]  +
push eax  +
call sub_106CE57  +
mov esi eax +
lea edi [ebp+var_6A4] +
movs   +
movs   +
movs   +
movs   +
lea edi [ebx+0Ch] +
lea esi [ebp+var_6A4] +
movs   +
movs   +
movs   +
movs   +
mov esi 104h +
jmp loc_106D46D  +
cmp dword ptr [ebx] 0 +
jnz loc_106D46D  +
mov edi ds:InternalExtractIconListW +
lea eax [ebp+szStart] +
push eax  +
call edi  +
mov [ebp+var_68C] eax +
test eax eax +
jnz loc_106D465  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_107C1C3  +
test eax eax +
jl loc_106D465  +
lea eax [ebp+szStart] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+szDest] +
push eax  +
call ds:__imp_PathCombineW  +
test eax eax +
jz loc_106D465  +
lea eax [ebp+szDest] +
push eax  +
call edi  +
mov [ebp+var_68C] eax +
mov eax [ebp+var_68C] +
mov [ebx] eax +
inc [ebp+var_680]  +
push esi  +
lea eax [ebp+szStart] +
push eax  +
push [ebp+var_680]  +
push [ebp+var_688]  +
call sub_106CC7E  +
test eax eax +
jz loc_106D33A  +
jmp loc_106D182  +
mov eax [ebp+var_680] +
inc eax  +
push eax  +
push [ebp+var_688]  +
call sub_106CF9F  +
mov esi eax +
test esi esi +
jz loc_106D4C1  +
push dword ptr [ebx]  +
call ds:__imp_SHELL32_155  +
mov [ebx] esi +
jmp loc_106D33A  +
cmp dword ptr [ebx] 0 +
jnz loc_106D34C  +
xor eax eax +
jmp loc_106D35E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_106D56A  +
dec eax  +
jz loc_106D561  +
push 57h  +
pop eax  +
jmp loc_106D5D8  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_106D590  +
push dword ptr [ebp+14h]  +
call ds:GetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:GetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:GetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_106D5B9  +
cmp dword ptr [esi+10h] 0 +
jz loc_106D5B9  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_106D5D6  +
test cl 2 +
jz loc_106D5C7  +
mov esi [esi+10h] +
test esi esi +
jz loc_106D5C7  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi off_10B1088 +
push edi  +
mov edi offset off_10B1088 +
cmp esi edi +
jnz loc_106D617  +
jmp loc_106D621  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov edx eax +
or edx ecx +
jz loc_106D615  +
push ecx  +
push eax  +
call ds:UnregisterTraceGuids  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
mov esi [esi] +
test esi esi +
jnz loc_106D5F9  +
mov off_10B1088 edi +
pop edi  +
pop esi  +
retn   +
***
mov ecx offset unk_10B1460 +
jmp sub_106FA36  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 0FFFFFFF8h +
call sub_107CB96  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
pop ebp  +
retn 4  +
***
call sub_1026FD5  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
call memset  +
add esp 0Ch +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push 0  +
push offset dword_1030A18  +
mov [ebp+ExecInfo.nShow] 1 +
mov [ebp+ExecInfo.fMask] 2000100h +
mov [ebp+ExecInfo.lpVerb] offset aOpennewwindow +
call SHGetKnownFolderIDList  +
test eax eax +
jl loc_106D709  +
mov eax [ebp+var_4] +
or [ebp+ExecInfo.fMask] 4 +
mov [ebp+ExecInfo.lpIDList] eax +
lea eax [ebp+ExecInfo] +
push eax  +
call ds:__imp_ShellExecuteExW  +
push [ebp+var_4]  +
call ds:__imp_SHELL32_155  +
leave   +
retn   +
***
sub dword ptr [esp+4] 4 +
jmp loc_1008CE1  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1008CE1  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1008CE1  +
***
sub dword ptr [esp+4] 4 +
jmp loc_107CA6A  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1008EA1  +
***
sub dword ptr [esp+4] 8 +
jmp loc_107CA6A  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_107CA6A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
mov ecx [esi+4] +
mov edx eax +
or edx ecx +
jnz loc_106D7A4  +
xor eax eax +
jmp loc_106D7B3  +
push ecx  +
push eax  +
call ds:EventUnregister  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+Handles] eax +
push 4FFh  +
push [ebp+arg_8]  +
setnz al  +
push eax  +
lea eax [ebp+Handles] +
push eax  +
push [ebp+hWnd]  +
call sub_107C08D  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 64h +
mov eax [ebp+arg_4] +
jnz loc_106D7FD  +
add eax 1Ch +
jmp loc_106D800  +
add eax 24h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_106D823  +
mov eax 80070057h +
jmp loc_106D8DF  +
push esi  +
mov esi [ebx+10h] +
push edi  +
test esi esi +
jnz loc_106D84D  +
jmp loc_106D852  +
mov eax [esi+10h] +
test eax eax +
jz loc_106D83B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+10h] 0 +
push 0  +
call dword ptr [esi+20h]  +
push esi  +
push ebx  +
call sub_106D7E8  +
mov esi eax +
cmp dword ptr [esi] 0 +
jnz loc_106D82E  +
and [ebp+var_18] 0 +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebx+1Ch] +
push 6  +
pop ecx  +
lea edi [ebp+var_18] +
mov esi eax +
xor edx edx +
cmps   +
jz loc_106D878  +
push eax  +
call ds:DeleteCriticalSection  +
lea eax [ebx+34h] +
push 6  +
pop ecx  +
lea edi [ebp+var_18] +
mov esi eax +
xor edx edx +
cmps   +
jz loc_106D890  +
push eax  +
call ds:DeleteCriticalSection  +
lea eax [ebx+4Ch] +
push 6  +
pop ecx  +
lea edi [ebp+var_18] +
mov esi eax +
xor edx edx +
cmps   +
jz loc_106D8A8  +
push eax  +
call ds:DeleteCriticalSection  +
mov esi [ebx+80h] +
test esi esi +
jz loc_106D8C7  +
push dword ptr [esi+4]  +
call dword ptr [esi]  +
mov edi [esi+8] +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov esi edi +
test edi edi +
jnz loc_106D8B2  +
mov eax [ebx+18h] +
pop edi  +
pop esi  +
test eax eax +
jz loc_106D8DD  +
cmp byte ptr [ebx+6Ch] 0 +
jz loc_106D8DD  +
push eax  +
call ds:HeapDestroy  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov esi ecx +
call ds:SHSetThreadRef  +
lea eax [esi+8] +
push eax  +
call sub_1002BEE  +
jmp loc_106D92E  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+Msg] +
push eax  +
call ds:GetMessageW  +
test eax eax +
jz loc_106D92E  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
cmp [esi+4] edi +
jnz loc_106D909  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push offset dword_102F500  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz locret_106DBFB  +
push ebx  +
push edi  +
push 1  +
xor edi edi +
push edi  +
push offset aAdvanced  +
push 1  +
mov [ebp+var_4] edi +
call ds:SHLWAPI_635  +
push 4  +
mov [ebp+hKey] eax +
pop ebx  +
cmp eax edi +
jz loc_106DBC1  +
push esi  +
mov esi ds:RegQueryValueExW +
lea ecx [ebp+cbData] +
push ecx  +
lea ecx [ebp+Data] +
push ecx  +
push edi  +
push edi  +
push offset aWebview  +
push eax  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106D9B1  +
inc eax  +
cmp dword ptr [ebp+Data] eax +
jnz loc_106D9B1  +
mov [ebp+var_4] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aSeparateproces  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106D9D5  +
cmp dword ptr [ebp+Data] edi +
jnz loc_106D9D5  +
or [ebp+var_4] 2 +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aResizeiconswit  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106D9FA  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106D9FA  +
or [ebp+var_4] 8 +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aThumbnailstamp  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DA1F  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DA1F  +
or [ebp+var_4] 10h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aHidden  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DA44  +
cmp dword ptr [ebp+Data] 2 +
jnz loc_106DA44  +
or [ebp+var_4] 20h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aHidefileext  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DA69  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DA69  +
or [ebp+var_4] 40h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aClassicviewsta  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DA90  +
cmp dword ptr [ebp+Data] edi +
jnz loc_106DA90  +
or [ebp+var_4] 80h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aShowdrivelette  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DAB8  +
cmp dword ptr [ebp+Data] 2 +
jnz loc_106DAB8  +
or [ebp+var_4] 200h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aFilter  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DAE0  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DAE0  +
or [ebp+var_4] 400h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aUserichinfotip  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DB08  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DB08  +
or [ebp+var_4] 800h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aHideinktitles  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DB30  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DB30  +
or [ebp+var_4] 1000h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aAutocheckselec  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DB58  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DB58  +
or [ebp+var_4] 2000h +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aSharingwizardo  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_106DB80  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DB80  +
or [ebp+var_4] 4000h +
push offset dword_106DD98  +
mov [ebp+cbData] ebx +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_106DBB0  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aAlwaysshowmenu  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jnz loc_106DBB7  +
cmp dword ptr [ebp+Data] 1 +
jnz loc_106DBB7  +
or [ebp+var_4] 10000h +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop esi  +
push 7  +
pop ecx  +
xor eax eax +
mov [ebp+var_30] edi +
push eax  +
lea edi [ebp+var_2C] +
stos   +
push 80h  +
lea eax [ebp+var_30] +
push eax  +
call ds:SHELL32_68  +
test byte ptr [ebp+var_30] 20h +
jz loc_106DBE7  +
or [ebp+var_4] ebx +
push [ebp+var_4]  +
push 244h  +
push offset dword_102F500  +
call sub_101588E  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_102FD48 +
call sub_106D8E9  +
test byte ptr [ebp+8] 1 +
jz loc_106DDCD  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_10B10E8 +
test eax eax +
jz locret_106DDF6  +
push 0  +
push 0  +
push 10h  +
push eax  +
call ds:PostMessageW  +
and dword_10B10E8 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov dword ptr [eax] 10h +
mov [eax+8] ecx +
mov dword ptr [eax+4] 1 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 10h +
test ecx ecx +
jz loc_106DE3B  +
cmp word ptr [ecx] 0 +
jnz loc_106DE40  +
mov ecx offset aNull +
mov [eax+8] ecx +
mov dword ptr [eax+4] 2 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 39Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi offset dword_106DF40 +
push esi  +
call sub_1008600  +
test al al +
jz loc_106DF2A  +
lea eax [ebp+pv] +
push eax  +
push 80058000h  +
push edi  +
call ds:__imp_SHGetNameFromIDList  +
test eax eax +
jl loc_106DF2A  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+pv]  +
call ds:__imp_SHELL32_892  +
test eax eax +
jz loc_106DF1E  +
push 188h  +
lea eax [ebp+var_394] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_8] +
mov [ebp+var_394] eax +
add esp 0Ch +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_314] +
push eax  +
mov [ebp+var_398] 1 +
call sub_1012258  +
push ebx  +
call sub_102E515  +
push eax  +
lea eax [ebp+var_290] +
push eax  +
call sub_1012258  +
push 3  +
lea eax [ebp+var_398] +
push eax  +
push 0EEFh  +
push esi  +
call sub_1006870  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push 0EF0h  +
push offset dword_1068880  +
call sub_104B3E5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 398h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi offset dword_10688B0 +
push esi  +
call sub_1008600  +
test al al +
jz loc_106E027  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push ebx  +
call ds:__imp_SHELL32_892  +
test eax eax +
jz loc_106E027  +
and [ebp+var_398] 0 +
push 188h  +
lea eax [ebp+var_394] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_398] +
push eax  +
call sub_1012258  +
mov eax [ebp+arg_8] +
push edi  +
mov [ebp+var_310] eax +
mov [ebp+var_314] 1 +
call sub_102E515  +
push eax  +
lea eax [ebp+var_290] +
push eax  +
call sub_1012258  +
push 3  +
lea eax [ebp+var_398] +
push eax  +
push 0EF3h  +
push esi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset dword_10688B0  +
call sub_1008600  +
test al al +
jz loc_106E07D  +
mov eax [ebp+pv] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push 80058000h  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_106E07D  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+pv]  +
call sub_106DF75  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset dword_10688B0  +
call sub_1008600  +
test al al +
jz loc_106E0C6  +
lea eax [ebp+pv] +
push eax  +
push [ebp+pv]  +
push [ebp+arg_0]  +
push 0  +
call ds:SHCreateShellItem  +
test eax eax +
jl loc_106E0C6  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+pv]  +
call sub_106E03D  +
mov eax [ebp+pv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 324h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx offset dword_1068890 +
push ebx  +
mov [ebp+var_324] esi +
mov [ebp+var_320] eax +
call sub_1008600  +
test al al +
jz loc_106E1F4  +
xor ecx ecx +
cmp esi ecx +
jz loc_106E1F4  +
cmp [ebp+arg_8] ecx +
jz loc_106E1F4  +
mov eax [ebp+arg_C] +
xor esi esi +
inc esi  +
push edi  +
cmp eax esi +
jz loc_106E15C  +
push 3  +
pop edi  +
cmp eax edi +
jz loc_106E15C  +
cmp eax 4 +
jz loc_106E15F  +
cmp eax 5 +
jz loc_106E15F  +
mov eax [ebp+arg_14] +
dec eax  +
dec eax  +
jz loc_106E158  +
dec eax  +
jz loc_106E154  +
xor eax eax +
cmp [ebp+arg_18] ecx +
setnz al  +
lea eax [eax+eax+2] +
mov edi eax +
jmp loc_106E15F  +
xor edi edi +
jmp loc_106E15F  +
mov edi esi +
jmp loc_106E15F  +
push 4  +
pop edi  +
push 314h  +
push ecx  +
lea eax [ebp+var_318] +
push eax  +
mov [ebp+var_31C] ecx +
call memset  +
add esp 0Ch +
push [ebp+var_324]  +
lea eax [ebp+var_31C] +
push eax  +
call sub_1012258  +
push offset byte_1002CD0  +
lea eax [ebp+var_298] +
push eax  +
call sub_1012258  +
mov eax [ebp+arg_C] +
push [ebp+var_320]  +
mov [ebp+var_210] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_214] esi +
mov [ebp+var_18C] eax +
mov [ebp+var_190] esi +
mov [ebp+var_108] edi +
mov [ebp+var_10C] esi +
call sub_102E515  +
push eax  +
lea eax [ebp+var_88] +
push eax  +
call sub_1012258  +
push 6  +
lea eax [ebp+var_31C] +
push eax  +
push 0EF1h  +
push ebx  +
call sub_1006870  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 298h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi offset dword_10688A0 +
push esi  +
call sub_1008600  +
test al al +
jz loc_106E2A5  +
test edi edi +
jz loc_106E2A5  +
push 290h  +
lea eax [ebp+var_294] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [ebp+var_294] eax +
xor eax eax +
inc eax  +
add esp 0Ch +
mov [ebp+var_298] eax +
mov [ebp+var_214] eax +
push edi  +
lea eax [ebp+var_190] +
push eax  +
mov [ebp+var_210] ecx +
call sub_1012258  +
push ebx  +
call sub_102E515  +
push eax  +
lea eax [ebp+var_88] +
push eax  +
call sub_1012258  +
push 5  +
lea eax [ebp+var_298] +
push eax  +
push 0EF4h  +
push esi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2A0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push offset dword_10688C0  +
mov [ebp+var_2A0] esi +
mov [ebp+var_29C] eax +
call sub_1008600  +
test al al +
jz loc_106E3D8  +
xor ecx ecx +
push ebx  +
mov ebx offset byte_1002CD0 +
cmp [ebp+arg_14] ecx +
jnz loc_106E305  +
mov [ebp+arg_14] ebx +
cmp esi ecx +
jz loc_106E3D7  +
cmp [ebp+arg_14] ecx +
jz loc_106E3D7  +
xor esi esi +
push edi  +
mov edi [ebp+arg_8] +
inc esi  +
cmp edi ecx +
jz loc_106E351  +
cmp edi 6 +
jz loc_106E351  +
cmp edi 7 +
jz loc_106E351  +
mov eax [ebp+arg_C] +
dec eax  +
jz loc_106E34F  +
dec eax  +
jz loc_106E34B  +
dec eax  +
jz loc_106E346  +
xor eax eax +
cmp [ebp+arg_10] ecx +
setnz al  +
add eax 4 +
mov edi eax +
jmp loc_106E351  +
push 2  +
pop edi  +
jmp loc_106E351  +
push 3  +
jmp loc_106E348  +
mov edi esi +
push 290h  +
push ecx  +
lea eax [ebp+var_294] +
push eax  +
mov [ebp+var_298] ecx +
call memset  +
add esp 0Ch +
push [ebp+var_2A0]  +
lea eax [ebp+var_298] +
push eax  +
call sub_1012258  +
push ebx  +
lea eax [ebp+var_190] +
push eax  +
mov [ebp+var_210] edi +
mov [ebp+var_214] esi +
call sub_1012258  +
mov eax [ebp+arg_18] +
push [ebp+var_29C]  +
mov [ebp+var_108] eax +
mov [ebp+var_10C] esi +
call sub_102E515  +
push eax  +
lea eax [ebp+var_88] +
push eax  +
call sub_1012258  +
push 5  +
lea eax [ebp+var_298] +
push eax  +
push 0FB4h  +
push offset dword_10688C0  +
call sub_1006870  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A0h +
push offset dword_10688D0  +
call sub_1008600  +
test al al +
jz locret_106E4CA  +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jz loc_106E4C9  +
push 9Ch  +
lea eax [ebp+var_9C] +
push esi  +
push eax  +
mov [ebp+var_A0] esi +
call memset  +
add esp 0Ch +
push [ebp+arg_0]  +
lea eax [ebp+var_A0] +
push eax  +
call sub_106DE20  +
push [ebp+arg_8]  +
lea eax [ebp+var_90] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_C]  +
lea eax [ebp+var_80] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_10]  +
lea eax [ebp+var_70] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_14]  +
lea eax [ebp+var_60] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_18]  +
lea eax [ebp+var_50] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_20]  +
lea eax [ebp+var_40] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_24]  +
lea eax [ebp+var_30] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_1C]  +
lea eax [ebp+var_20] +
push eax  +
call sub_106DDFC  +
push [ebp+arg_4]  +
call sub_102E515  +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_106DE20  +
push esi  +
lea eax [ebp+var_A0] +
push eax  +
push 0Ah  +
push 0FB5h  +
push esi  +
call WinSqmAddToStreamEx  +
pop esi  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 290h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
lea esi [ebp+arg_10] +
lea edi [ebp+rguid] +
movs   +
movs   +
movs   +
movs   +
mov edi offset dword_10688E0 +
push edi  +
mov [ebp+var_290] ebx +
mov [ebp+var_28C] eax +
call sub_1008600  +
test al al +
jz loc_106E5D1  +
xor esi esi +
cmp ebx esi +
jz loc_106E5D1  +
push 32h  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+rguid] +
push eax  +
call ds:__imp_StringFromGUID2  +
test eax eax +
jz loc_106E5D1  +
mov eax [ebp+arg_0] +
dec eax  +
push 1  +
pop ebx  +
jz loc_106E55E  +
dec eax  +
jz loc_106E55A  +
dec eax  +
jz loc_106E561  +
xor eax eax +
cmp [ebp+arg_4] esi +
setnz al  +
add eax 3 +
mov esi eax +
jmp loc_106E561  +
mov esi ebx +
jmp loc_106E561  +
push 2  +
pop esi  +
push 20Ch  +
lea eax [ebp+var_284] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push [ebp+var_290]  +
lea eax [ebp+var_204] +
push eax  +
mov [ebp+var_284] esi +
mov [ebp+var_288] ebx +
call sub_1012258  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+var_180] +
push eax  +
call sub_1012258  +
push [ebp+var_28C]  +
call sub_102E515  +
push eax  +
lea eax [ebp+var_FC] +
push eax  +
call sub_1012258  +
push 4  +
lea eax [ebp+var_288] +
push eax  +
push 0EF2h  +
push edi  +
call sub_1006870  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
or ecx 0FFFFFFFFh +
test dword ptr [eax+0Ch] 0FFFF0000h +
jnz loc_106E5FF  +
movzx ecx word ptr [eax+0Ch] +
push 0  +
push ecx  +
mov ecx offset unk_10B1460 +
call sub_104E48B  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push esi  +
mov ecx offset unk_10B1460 +
call sub_104ED13  +
mov ebx eax +
cmp ebx esi +
jz loc_106E66D  +
push edi  +
mov edi [ebp+14h] +
push 1  +
push dword ptr [ebp+18h]  +
push edi  +
push dword ptr [ebp+10h]  +
push ebx  +
push dword ptr [ebp+0Ch]  +
call ds:SHELL32_67  +
mov esi eax +
push ebx  +
sub esi edi +
call ds:DestroyMenu  +
lea eax [edi+18Fh] +
push eax  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push pUnk  +
call sub_104EB6F  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+14h] +
mov eax 80004005h +
test edx edx +
jz loc_106E68E  +
and dword ptr [edx] 0 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
xor ebx ebx +
mov edi offset dword_106E6B8 +
cmps   +
pop edi  +
pop esi  +
pop ebx  +
jnz loc_106E6B4  +
mov eax [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFF0h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi [ebp+0Ch] +
xor eax eax +
mov dword ptr [ebp-4] 80070057h +
cmp edi eax +
jz loc_106E75E  +
push ebx  +
mov ebx [ebp+18h] +
cmp ebx eax +
jz loc_106E75D  +
push esi  +
push 4  +
pop ecx  +
mov esi offset dword_106E768 +
xor edx edx +
mov dword ptr [ebx] 3 +
cmps   +
mov [ebp-4] eax +
jnz loc_106E75C  +
mov esi [ebp+8] +
cmp [esi+8] eax +
jnz loc_106E73B  +
mov edi ds:__imp_SHELL32_100 +
push 40000016h  +
mov dword ptr [esi+8] 1 +
call edi  +
neg eax  +
sbb eax eax +
neg eax  +
push 40000017h  +
mov [esi+0Ch] eax +
call edi  +
neg eax  +
sbb eax eax +
neg eax  +
mov [esi+10h] eax +
xor eax eax +
cmp [ebp+10h] eax +
jbe loc_106E75C  +
cmp dword ptr [ebp+10h] 4 +
jbe loc_106E751  +
cmp dword ptr [ebp+10h] 5 +
jnz loc_106E75C  +
cmp [esi+10h] eax +
jmp loc_106E754  +
cmp [esi+0Ch] eax +
jz loc_106E75C  +
mov dword ptr [ebx] 2 +
pop esi  +
pop ebx  +
mov eax [ebp-4] +
pop edi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1034A04 +
jz loc_106E798  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1011F42  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_102B111  +
***
sub dword ptr [esp+4] 10h +
jmp loc_102B111  +
***
sub dword ptr [esp+4] 14h +
jmp loc_102B111  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1011EBD  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1011EBD  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1011F42  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1011EBD  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1011F42  +
***
mov edi edi +
push esi  +
push 0  +
push offset aAlttab_keyhook  +
mov esi 80004005h +
call ds:FindWindowW  +
test eax eax +
jz loc_106E858  +
push 0  +
push 50494C46h  +
push 400h  +
push eax  +
call ds:PostMessageW  +
test eax eax +
jz loc_106E858  +
xor esi esi +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
test eax eax +
jz loc_106E8C8  +
push eax  +
call ds:DestroyWindow  +
and dword ptr [esi+1Ch] 0 +
push 1  +
push dword ptr [esi+18h]  +
call ds:KillTimer  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov edi ds:SendMessageW +
cmp [esi+1Ch] ebx +
jnz loc_106E971  +
push ebx  +
push hInstance  +
mov eax 80000000h +
push ebx  +
push dword ptr [esi+18h]  +
push eax  +
push eax  +
push eax  +
push eax  +
push 80000043h  +
push ebx  +
push offset aTooltips_class  +
call sub_107BF1F  +
mov [esi+1Ch] eax +
cmp eax ebx +
jz loc_106E968  +
push ebx  +
push 6  +
push 2007h  +
push eax  +
call edi  +
push 12Ch  +
push ebx  +
push 418h  +
push dword ptr [esi+1Ch]  +
call edi  +
push offset aTaskbar  +
push ebx  +
push 200Bh  +
push dword ptr [esi+1Ch]  +
call edi  +
push 3  +
push offset aStartmenuballo  +
push dword ptr [esi+1Ch]  +
call ds:SetPropW  +
cmp [esi+1Ch] ebx +
jz loc_106EA99  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_106EA99  +
push 2Ch  +
lea eax [ebp+var_248] +
push ebx  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+18h] +
add esp 0Ch +
mov [ebp+var_244] eax +
mov [ebp+var_240] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 432h  +
push dword ptr [esi+1Ch]  +
mov [ebp+var_248] 121h +
call edi  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [esi+1Ch]  +
call edi  +
lea eax [ebp+Buffer] +
mov [ebp+var_228] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 439h  +
push dword ptr [esi+1Ch]  +
call edi  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+arg_4]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_106EA37  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
push 421h  +
push dword ptr [esi+1Ch]  +
call edi  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+18h]  +
call ds:GetWindowRect  +
mov ecx [ebp+Rect.left] +
mov eax [ebp+Rect.right] +
add eax ecx +
movzx ecx word ptr [ebp+Rect.top] +
cdq   +
sub eax edx +
sar eax 1 +
movzx eax ax +
shl ecx 10h +
or eax ecx +
push eax  +
push ebx  +
push 412h  +
push dword ptr [esi+1Ch]  +
call edi  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 411h  +
push dword ptr [esi+1Ch]  +
call edi  +
push ebx  +
push 2710h  +
push 1  +
push dword ptr [esi+18h]  +
call ds:SetTimer  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1FCh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
push 1F4h  +
xor edi edi +
lea eax [ebp+var_1F8] +
push edi  +
push eax  +
mov [ebp+pvParam] 1F8h +
call memset  +
add esp 0Ch +
push edi  +
lea eax [ebp+pvParam] +
push eax  +
push 1F8h  +
push 29h  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_106EB4D  +
call ds:GetUserDefaultLangID  +
movzx eax ax +
mov ecx eax +
and ecx 3FFh +
cmp cx 4 +
jnz loc_106EB34  +
shr ax 0Ah +
cmp ax 1 +
jz loc_106EB28  +
cmp ax 2 +
jnz loc_106EB34  +
mov [ebp+var_1E4.lfWeight] 190h +
jmp loc_106EB3E  +
mov [ebp+var_1E4.lfWeight] 2BCh +
lea eax [ebp+var_1E4] +
push eax  +
call ds:CreateFontIndirectW  +
mov edi eax +
mov ecx [ebp+var_4] +
mov eax edi +
xor ecx ebp +
pop edi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov esi ecx +
push 9  +
xor eax eax +
pop ecx  +
mov dword ptr [ebp-28h] 28h +
lea edi [ebp-24h] +
stos   +
mov eax [esi+0CD8h] +
or dword ptr [ebp-24h] 0FFFFFFFFh +
shl eax 4 +
lea eax [eax+esi+44h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
call ds:CopyRect  +
mov eax [esi+0CDCh] +
mov ecx [esi+0C60h] +
mov [ebp-18h] eax +
mov eax [esi+0CE0h] +
mov [ebp-14h] eax +
mov eax [esi+0CD8h] +
mov [ebp-1Ch] eax +
mov eax [esi+0C64h] +
neg eax  +
sbb eax eax +
and eax 100h +
neg ecx  +
sbb ecx ecx +
and ecx 40h +
or eax ecx +
mov ecx [esi+0C5Ch] +
neg ecx  +
sbb ecx ecx +
and ecx 20h +
or eax ecx +
mov ecx [esi+0C58h] +
neg ecx  +
sbb ecx ecx +
and ecx 10h +
or eax ecx +
mov ecx [esi+0C54h] +
neg ecx  +
sbb ecx ecx +
and ecx 8 +
or eax ecx +
mov ecx [esi+0C48h] +
neg ecx  +
sbb ecx ecx +
and ecx 4 +
or eax ecx +
mov ecx [esi+40h] +
and ecx 1 +
or eax ecx +
or eax 2 +
push 28h  +
mov [ebp-20h] eax +
lea eax [ebp-28h] +
push eax  +
push offset aSettings  +
push offset aStuckrects2  +
push phkResult  +
call sub_107A624  +
push dword ptr [esi+3Ch]  +
call sub_106CAFF  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+18h] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax+4] +
mov [ecx+0C48h] edx +
mov edx [eax+8] +
mov [ecx+0C54h] edx +
mov edx [eax+30h] +
push 4  +
mov [ecx+40h] edx +
pop edx  +
add ecx 0C58h +
add eax 10h +
push esi  +
mov esi [eax] +
mov [ecx] esi +
add eax 4 +
add ecx 4 +
dec edx  +
jnz loc_106EC91  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+0CB8h] +
mov ebx [eax] +
push edi  +
xor edi edi +
test ebx ebx +
jle loc_106ECDA  +
push edi  +
push dword ptr [esi+0CB8h]  +
call ds:off_1003D88  +
test eax eax +
jz loc_106ECD5  +
cmp word ptr [eax+8] 0 +
jz loc_106ECDA  +
inc edi  +
cmp edi ebx +
jl loc_106ECBD  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov cx [ebp+arg_0] +
shr cx 8 +
xor eax eax +
test cl 1 +
jz loc_106ECFC  +
push 4  +
pop eax  +
test cl 2 +
jz loc_106ED04  +
or eax 2 +
test cl 4 +
jz loc_106ED0C  +
or eax 1 +
movzx ecx byte ptr [ebp+arg_0] +
shl eax 8 +
add eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp word ptr [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_106EDA7  +
push ebx  +
push edi  +
lea ebx [esi+0CBCh] +
push ebx  +
call ds:EnterCriticalSection  +
mov ecx esi +
call sub_106ECA8  +
cmp [ebp+arg_C] 0 +
mov [ebp+var_4] eax +
jz loc_106ED68  +
push [ebp+arg_4]  +
call ds:__imp_SHELL32_18  +
push [ebp+arg_8]  +
mov edi eax +
call ds:__imp_SHELL32_19  +
push 2  +
pop ecx  +
jmp loc_106ED70  +
mov edi [ebp+arg_4] +
mov eax [ebp+arg_8] +
xor ecx ecx +
push [ebp+arg_0]  +
mov [ebp+var_6] cx +
mov [ebp+var_10] edi +
mov [ebp+var_C] eax +
call sub_106ECE5  +
mov [ebp+var_8] ax +
lea eax [ebp+var_10] +
push eax  +
push [ebp+var_4]  +
push dword ptr [esi+0CB8h]  +
call ds:off_106C7A0  +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
jmp loc_106EDAA  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
or [ebp+var_4] 0FFFFFFFFh +
cmp [ebp+arg_0] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpCriticalSection] +
mov esi ecx +
jz loc_106EE3D  +
push edi  +
call ds:__imp_SHELL32_16  +
push eax  +
call ds:__imp_SHELL32_19  +
mov ebx eax +
test ebx ebx +
jz loc_106EE3D  +
push edi  +
call ds:__imp_SHELL32_17  +
test eax eax +
jz loc_106EE3D  +
lea eax [esi+0CBCh] +
push eax  +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov ecx esi +
call sub_106ECA8  +
mov cx [ebp+arg_0] +
push 3  +
mov [ebp+var_8] cx +
pop ecx  +
mov [ebp+var_6] cx +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
push dword ptr [esi+0CB8h]  +
mov [ebp+var_4] eax +
mov [ebp+var_10] edi +
mov [ebp+var_C] ebx +
call ds:off_106C7A0  +
test eax eax +
jz loc_106EE34  +
xor edi edi +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
push edi  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_4] 0FFFFFFFFh +
push edi  +
mov edi ecx +
cmp dword ptr [edi+0CB8h] 0 +
jz loc_106EF12  +
push ebx  +
push [ebp+arg_0]  +
call sub_106ECE5  +
movzx eax ax +
mov [ebp+var_8] eax +
lea eax [edi+0CBCh] +
push eax  +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov eax [edi+0CB8h] +
mov ebx [eax] +
and [ebp+arg_0] 0 +
test ebx ebx +
jle loc_106EF08  +
push esi  +
push [ebp+arg_0]  +
push dword ptr [edi+0CB8h]  +
call ds:off_1003D88  +
mov esi eax +
test esi esi +
jz loc_106EEC4  +
test byte ptr [esi+0Ah] 1 +
jnz loc_106EEC4  +
mov ax word ptr [ebp+var_8] +
cmp [esi+8] ax +
jz loc_106EECE  +
inc [ebp+arg_0]  +
cmp [ebp+arg_0] ebx +
jge loc_106EF07  +
jmp loc_106EE9F  +
test byte ptr [esi+0Ah] 2 +
jz loc_106EEED  +
mov eax [esi] +
mov edi ds:__imp_SHELL32_155 +
test eax eax +
jz loc_106EEE3  +
push eax  +
call edi  +
mov eax [esi+4] +
test eax eax +
jz loc_106EEED  +
push eax  +
call edi  +
xor eax eax +
and [esi] eax +
and [esi+4] eax +
mov [esi+8] ax +
mov eax 0FFFDh +
and [esi+0Ah] ax +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
pop esi  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push edi  +
mov edi ecx +
lea eax [edi+0CBCh] +
push eax  +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov eax [edi+0CB8h] +
mov ebx [eax] +
and [ebp+var_4] 0 +
test ebx ebx +
jle loc_106EFBB  +
push esi  +
push [ebp+var_4]  +
push dword ptr [edi+0CB8h]  +
call ds:off_1003D88  +
mov esi eax +
test esi esi +
jz loc_106EF75  +
test byte ptr [esi+0Ah] 1 +
jz loc_106EF75  +
mov ax [esi+8] +
cmp ax [ebp+arg_0] +
jz loc_106EF7F  +
inc [ebp+var_4]  +
cmp [ebp+var_4] ebx +
jge loc_106EFBA  +
jmp loc_106EF50  +
test byte ptr [esi+0Ah] 2 +
jz loc_106EF9E  +
mov eax [esi] +
mov edi ds:__imp_SHELL32_155 +
test eax eax +
jz loc_106EF94  +
push eax  +
call edi  +
mov eax [esi+4] +
test eax eax +
jz loc_106EF9E  +
push eax  +
call edi  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
xor eax eax +
mov [esi+8] ax +
mov eax 0FFFCh +
and [esi+0Ah] ax +
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
pop esi  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+0AF8h] +
call sub_1019585  +
lea eax [esi+0D08h] +
mov ecx [eax] +
test ecx ecx +
jz loc_106EFF7  +
and dword ptr [eax] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea eax [esi+0D04h] +
mov ecx [eax] +
pop esi  +
test ecx ecx +
jz locret_106F00D  +
and dword ptr [eax] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push edi  +
mov edi ds:GetClientRect +
lea eax [ebp+var_24.rcExclude] +
mov esi ecx +
push eax  +
push dword ptr [esi+18h]  +
mov [ebp+var_24.cbSize] 14h +
call edi  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+18h]  +
call ds:GetParent  +
push eax  +
call edi  +
mov eax [ebp+var_4] +
cmp [ebp+var_24.rcExclude.bottom] eax +
jl loc_106F050  +
mov [ebp+var_24.rcExclude.bottom] eax +
push 2  +
lea eax [ebp+var_24.rcExclude] +
push eax  +
push 0  +
push dword ptr [esi+18h]  +
call ds:MapWindowPoints  +
mov edi 160h +
call sub_10344B4  +
test eax eax +
jz loc_106F074  +
mov edi 8160h +
mov ecx [esi+78h] +
mov eax [ecx] +
push 0  +
call dword ptr [eax]  +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [esi+18h]  +
push [ebp+var_24.rcExclude.bottom]  +
push [ebp+var_24.rcExclude.left]  +
push edi  +
push [ebp+arg_0]  +
call ds:TrackPopupMenuEx  +
mov ecx [esi+78h] +
mov edi eax +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
and [ebp+var_1C] 0 +
and [ebp+var_14] 0 +
push edi  +
mov edi [ebp+arg_10] +
lea eax [ebp+arg_C] +
mov [ebp+var_20] eax +
mov [ebp+var_18] 4 +
test edi edi +
jz loc_106F0EA  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_106F0D6  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
jmp loc_106F0ED  +
push 0Ah  +
pop eax  +
mov ecx edi +
test edi edi +
jnz loc_106F0F8  +
mov ecx offset aNull_0 +
and [ebp+var_C] 0 +
and [ebp+var_4] 0 +
mov [ebp+var_8] eax +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push [ebp+arg_8]  +
mov [ebp+var_10] ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EventWrite  +
pop edi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+lprc] +
push 0  +
push esi  +
call ds:MonitorFromRect  +
test eax eax +
jz loc_106F1D4  +
push 0  +
lea ecx [ebp+rc] +
push ecx  +
push eax  +
call sub_1002F19  +
mov eax [ebp+arg_4] +
test al 1 +
jz loc_106F15D  +
mov ecx [esi+0Ch] +
sub ecx [esi+4] +
jmp loc_106F162  +
mov ecx [esi+8] +
sub ecx [esi] +
sub eax 0 +
jz loc_106F1BE  +
dec eax  +
jz loc_106F1A5  +
dec eax  +
jz loc_106F18B  +
dec eax  +
jnz loc_106F1D4  +
mov eax dword_10B10CC +
cdq   +
sub eax edx +
mov edx eax +
mov eax [ebp+rc.bottom] +
sar edx 1 +
sub eax edx +
mov [esi+4] eax +
add eax ecx +
mov [esi+0Ch] eax +
jmp loc_106F1D4  +
mov eax dword_10B10C8 +
cdq   +
sub eax edx +
mov edx eax +
mov eax [ebp+rc.right] +
sar edx 1 +
sub eax edx +
mov [esi] eax +
add eax ecx +
mov [esi+8] eax +
jmp loc_106F1D4  +
mov eax dword_10B10CC +
cdq   +
sub eax edx +
mov edx [ebp+rc.top] +
sar eax 1 +
add eax edx +
mov [esi+0Ch] eax +
sub eax ecx +
mov [esi+4] eax +
jmp loc_106F1D4  +
mov eax dword_10B10C8 +
cdq   +
sub eax edx +
mov edx [ebp+rc.left] +
sar eax 1 +
add eax edx +
mov [esi+8] eax +
sub eax ecx +
mov [esi] eax +
pop esi  +
leave   +
retn 8  +
***
mov eax [ecx+40h] +
push 0  +
and eax 1 +
push eax  +
push 553h  +
push dword ptr [ecx+4]  +
call ds:PostMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
lea eax [ebp+rcSrc1] +
push eax  +
push dword ptr [ecx+18h]  +
call ds:GetWindowRect  +
push [ebp+lprcSrc2]  +
mov esi ds:IntersectRect +
lea eax [ebp+rcSrc1] +
push eax  +
lea eax [ebp+rc2] +
push eax  +
call esi  +
push [ebp+arg_0]  +
lea eax [ebp+rc2] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call esi  +
lea eax [ebp+rc2] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call ds:EqualRect  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_8] +
push eax  +
push 1  +
push offset dword_1068EDC  +
push [ebp+arg_0]  +
mov [ebp+var_8] 7 +
call ds:IUnknown_QueryStatus  +
test eax eax +
jl loc_106F285  +
test byte ptr [ebp+var_4] 1 +
jz loc_106F285  +
test byte ptr [ebp+var_4] 2 +
jnz loc_106F285  +
xor eax eax +
jmp locret_106F288  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+18h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+14h]  +
add ecx 0FFFFFFECh +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_106ED1E  +
cmp eax 0FFFFFFFFh +
jz loc_106F2C6  +
push 0  +
push eax  +
push 4E6h  +
push hWnd  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi+64h] 0 +
push edi  +
call sub_106E8B1  +
mov ecx esi +
call sub_10371D6  +
mov eax [esi+4Ch] +
mov edi ds:DeleteObject +
test eax eax +
jz loc_106F2F7  +
push eax  +
call edi  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_106F301  +
push eax  +
call edi  +
mov eax [esi+74h] +
test eax eax +
jz loc_106F30F  +
push eax  +
call ds:off_1035224  +
push offset aStartbuttontag  +
push dword ptr [esi+18h]  +
call ds:RemovePropW  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+hWnd] +
push esi  +
push edi  +
lea eax [ebp+dwResult] +
push eax  +
push 0BB8h  +
push 2  +
xor edi edi +
push edi  +
push edi  +
push 33h  +
push ebx  +
mov [ebp+dwResult] edi +
call ds:SendMessageTimeoutW  +
mov esi [ebp+arg_4] +
mov ax [esi] +
cmp ax word ptr [ebp+dwResult] +
jnz loc_106F36F  +
cmp [esi+4] edi +
jz loc_106F368  +
push edi  +
push edi  +
push 32h  +
push ebx  +
call ds:SendMessageW  +
mov [esi+8] ebx +
xor eax eax +
jmp loc_106F372  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov cx [ebp+arg_0] +
shr cx 8 +
sub esp 0Ch +
xor eax eax +
test cl 4 +
jz loc_106F396  +
inc eax  +
test cl 2 +
jz loc_106F39E  +
or eax 2 +
test cl 1 +
jz loc_106F3A6  +
or eax 4 +
movzx cx byte ptr [ebp+arg_0] +
and [ebp+var_4] 0 +
shl eax 8 +
add ax cx +
mov word ptr [ebp+lParam] ax +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
lea eax [ebp+lParam] +
push eax  +
push offset sub_106F325  +
call ds:EnumWindows  +
mov eax [ebp+var_4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+id]  +
push [ebp+hWnd]  +
call ds:UnregisterHotKey  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
call sub_106EE53  +
cmp eax 0FFFFFFFFh +
jnz loc_106F424  +
push [ebp+arg_4]  +
call sub_106ECE5  +
movzx eax ax +
push eax  +
mov ecx esi +
call sub_106EF1F  +
cmp eax 0FFFFFFFFh +
jz loc_106F42F  +
push eax  +
push [ebp+hWnd]  +
mov ecx esi +
call sub_106F3DA  +
push 1  +
push [ebp+arg_4]  +
call sub_106ECE5  +
movzx eax ax +
push eax  +
mov ecx esi +
call sub_106F37E  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
lea esi [ebx+0CBCh] +
push esi  +
call ds:EnterCriticalSection  +
push [ebp+id]  +
push dword ptr [ebx+0CB8h]  +
call ds:off_1003D88  +
test eax eax +
jz loc_106F486  +
movzx eax word ptr [eax+8] +
mov [ebp+var_4] eax +
jmp loc_106F48A  +
and [ebp+var_4] 0 +
push esi  +
call ds:LeaveCriticalSection  +
cmp word ptr [ebp+var_4] 0 +
jz loc_106F4FB  +
mov ecx [ebp+var_4] +
movzx eax byte ptr [ebp+var_4] +
mov esi ds:RegisterHotKey +
shr ecx 8 +
movzx edi cl +
push eax  +
or edi 4000h +
push edi  +
push [ebp+id]  +
mov [ebp+vk] eax +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jz loc_106F4C7  +
xor eax eax +
inc eax  +
jmp loc_106F4FD  +
push [ebp+var_4]  +
mov ecx ebx +
call sub_106EF1F  +
cmp eax 0FFFFFFFFh +
jz loc_106F4F1  +
push eax  +
push [ebp+hWnd]  +
mov ecx ebx +
call sub_106F3DA  +
push [ebp+vk]  +
push edi  +
push [ebp+id]  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jnz loc_106F4C2  +
push [ebp+var_4]  +
mov ecx ebx +
call sub_106EF1F  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push dword ptr [eax+38h]  +
mov ebx ecx +
push dword ptr [eax+30h]  +
call ds:SHLockShared  +
test eax eax +
jz loc_106F54C  +
mov ecx [ebx+0CD8h] +
push esi  +
push edi  +
shl ecx 4 +
lea esi [ecx+ebx+44h] +
lea edi [eax+10h] +
movs   +
movs   +
movs   +
movs   +
mov ecx [ebx+0CD8h] +
push eax  +
mov [eax+0Ch] ecx +
call ds:SHUnlockShared  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov edx [eax+18h] +
mov ecx [ebp+arg_0] +
cmp [ecx+18h] edx +
jnz loc_106F5A5  +
sub edx 0 +
jz loc_106F59B  +
dec edx  +
jz loc_106F58E  +
dec edx  +
jz loc_106F57F  +
dec edx  +
jnz loc_106F5A5  +
mov eax [eax+14h] +
cmp eax [ecx+14h] +
jmp loc_106F587  +
mov eax [eax+10h] +
xor edx edx +
cmp eax [ecx+10h] +
setnl dl  +
mov eax edx +
jmp loc_106F5A7  +
mov eax [eax+0Ch] +
xor edx edx +
cmp eax [ecx+0Ch] +
setle dl  +
jmp loc_106F58A  +
mov eax [eax+8] +
xor edx edx +
cmp eax [ecx+8] +
jmp loc_106F596  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push dword ptr [esi+4]  +
mov ebx ecx +
call sub_1051AA5  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_106F6D7  +
push dword ptr [esi+38h]  +
push dword ptr [esi+30h]  +
call ds:SHLockShared  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_106F6D7  +
push edi  +
add eax 10h +
add esi 10h +
mov edi eax +
movs   +
movs   +
movs   +
push 1  +
push eax  +
movs   +
call ds:MonitorFromRect  +
cmp dword ptr [ebx+40h] 0 +
mov [ebp+var_C] eax +
jnz loc_106F632  +
cmp eax [ebx+0CF8h] +
jnz loc_106F632  +
push 0  +
lea eax [ebp+rc] +
push eax  +
mov ecx ebx +
call sub_1034137  +
mov [ebp+var_18] eax +
mov eax [ebp+var_4] +
add eax 10h +
push eax  +
lea eax [ebp+var_30] +
push eax  +
mov ecx ebx +
call sub_10367F4  +
mov eax [ebx+0CB4h] +
mov eax [eax] +
jmp loc_106F6C5  +
dec eax  +
push eax  +
push dword ptr [ebx+0CB4h]  +
mov [ebp+var_10] eax +
call ds:off_1002B68  +
mov esi eax +
test esi esi +
jz loc_106F6C2  +
mov edi [ebp+var_8] +
mov eax [edi] +
mov ecx [esi] +
cmp eax ecx +
jz loc_106F68C  +
test byte ptr [esi+18h] 1 +
jz loc_106F670  +
mov edx [ebp+arg_0] +
test byte ptr [edx+0Ch] 1 +
jz loc_106F6A2  +
cmp eax ecx +
jz loc_106F68C  +
mov eax [edi+18h] +
mov ecx [ebp+arg_0] +
cmp eax [ecx+0Ch] +
jnz loc_106F68C  +
push esi  +
push edi  +
mov ecx ebx +
call sub_106F556  +
test eax eax +
jnz loc_106F6A2  +
mov eax [edi] +
cmp eax [esi] +
jz loc_106F6C2  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
cmp [edi+18h] eax +
jz loc_106F6C2  +
cmp [esi+18h] eax +
jnz loc_106F6C2  +
push 0  +
lea eax [esi+8] +
push eax  +
call ds:MonitorFromRect  +
cmp [ebp+var_C] eax +
jnz loc_106F6C2  +
mov eax [ebp+var_4] +
add eax 10h +
push eax  +
push esi  +
mov ecx ebx +
call sub_10367F4  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_106F63F  +
push [ebp+var_4]  +
call ds:SHUnlockShared  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push dword ptr [ebx+4]  +
mov [ebp+var_8] ecx +
call sub_1051AA5  +
mov esi eax +
mov [ebp+var_C] esi +
test esi esi +
jz loc_106F779  +
mov ecx [ebp+var_8] +
push edi  +
push ebx  +
xor edi edi +
call sub_106F5B0  +
push dword ptr [ebx+38h]  +
push dword ptr [ebx+30h]  +
call ds:SHLockShared  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_106F778  +
add eax 10h +
add esi 8 +
push eax  +
push esi  +
mov [ebp+lprc] esi +
call ds:EqualRect  +
test eax eax +
jnz loc_106F757  +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
mov ecx [ebp+var_C] +
movs   +
mov esi [ebp+arg_0] +
mov edi [ebp+lprc] +
add esi 10h +
movs   +
movs   +
movs   +
movs   +
mov eax [ebx+0Ch] +
xor edi edi +
mov [ecx+18h] eax +
inc edi  +
push [ebp+arg_0]  +
call ds:SHUnlockShared  +
test edi edi +
jz loc_106F778  +
mov ecx [ebp+var_8] +
push 0  +
push [ebp+lprc]  +
lea eax [ebp+var_1C] +
push eax  +
push dword ptr [ebx+4]  +
call sub_1034D92  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push esi  +
lea esi [ecx+eax*4+0D44h] +
push dword ptr [esi]  +
call ds:IsWindow  +
xor ecx ecx +
test eax eax +
jnz loc_106F7A4  +
mov [esi] ecx +
cmp [ebp+arg_4] ecx +
jz loc_106F7BD  +
mov eax [ebp+arg_0] +
cmp [esi] ecx +
jnz loc_106F7B2  +
mov [esi] eax +
xor ecx ecx +
cmp [esi] eax +
setz cl  +
mov eax ecx +
jmp loc_106F7C9  +
mov eax [esi] +
cmp eax [ebp+arg_0] +
jnz loc_106F7C6  +
mov [esi] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax+0Ch] +
cmp edx 4 +
jb loc_106F7E7  +
xor eax eax +
jmp loc_106F7F3  +
push edx  +
push dword ptr [eax+20h]  +
push dword ptr [eax+4]  +
call sub_106F784  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push dword ptr [esi+4]  +
mov edi ecx +
call sub_1051AA5  +
test eax eax +
jz loc_106F83C  +
mov esi [esi+4] +
xor edx edx +
lea ecx [edi+0D44h] +
cmp [ecx] esi +
jnz loc_106F828  +
cmp edx [eax+18h] +
jnz loc_106F83C  +
inc edx  +
add ecx 4 +
cmp edx 4 +
jb loc_106F81F  +
push dword ptr [eax+18h]  +
mov ecx edi +
push esi  +
call sub_10341E3  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
setz al  +
mov [ecx+0C4Ch] eax +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
lea eax [ebp+arg_4] +
push eax  +
push 0  +
push 0  +
push [ebp+arg_4]  +
call SHGetKnownFolderIDList  +
test eax eax +
jl locret_106F8CC  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
call memset  +
mov eax [ebp+arg_0] +
mov [ebp+ExecInfo.hwnd] eax +
mov eax [ebp+arg_4] +
mov [ebp+ExecInfo.lpIDList] eax +
mov eax [ebp+arg_8] +
mov [ebp+ExecInfo.lpVerb] eax +
add esp 0Ch +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.fMask] 10000Ch +
mov [ebp+ExecInfo.nShow] 1 +
call ds:__imp_ShellExecuteExW  +
push [ebp+arg_4]  +
call ds:__imp_SHELL32_155  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 55Ch +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
jz loc_106F911  +
dec eax  +
jnz loc_106F90A  +
xor ebx ebx +
cmp [ebp+arg_4] ebx +
jz loc_106F90A  +
push ebx  +
push ebx  +
push dword ptr [esi+3Ch]  +
call ds:SHLWAPI_479  +
push dword_10B10EC  +
call ds:SetForegroundWindow  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
xor ebx ebx +
cmp [ebp+arg_4] ebx +
jz loc_106F8F3  +
mov edi ds:SendMessageW +
push ebx  +
push 10002h  +
push 128h  +
push dword ptr [esi+4]  +
call edi  +
push dword ptr [esi+4]  +
push 1  +
push 459h  +
push dword_10B10EC  +
call edi  +
push dword ptr [esi+4]  +
call ds:SetForegroundWindow  +
push 10h  +
call ds:GetAsyncKeyState  +
test ax ax +
jge loc_106F968  +
push ebx  +
push ebx  +
push 414h  +
push dword ptr [esi+0C04h]  +
call edi  +
push eax  +
jmp loc_106F96E  +
push dword ptr [esi+0B10h]  +
mov ecx esi +
call sub_1039F5F  +
jmp loc_106F90A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi 113h +
sub eax esi +
push edi  +
mov edi ecx +
jz loc_106F9FF  +
sub eax 44Dh +
jz loc_106F9D6  +
dec eax  +
dec eax  +
jnz loc_106FA29  +
cmp dword_10B3AD0[eax*4] 0 +
jz loc_106F9B2  +
inc eax  +
cmp eax 2 +
jge loc_106FA29  +
jmp loc_106F9A0  +
mov ecx [ebp+uIDEvent] +
push 0  +
push [ebp+uElapse]  +
lea esi [eax+0Eh] +
push esi  +
mov dword_10B3AD0[eax*4] ecx +
push dword ptr [edi+4]  +
call ds:SetTimer  +
test eax eax +
jz loc_106FA29  +
mov eax esi +
jmp loc_106FA2B  +
mov ecx [ebp+uIDEvent] +
lea eax [ecx-0Eh] +
cmp eax 1 +
ja loc_106FA29  +
lea esi dword_10B3AD0[eax*4] +
cmp dword ptr [esi] 0 +
jz loc_106FA29  +
push ecx  +
push dword ptr [edi+4]  +
call ds:KillTimer  +
and dword ptr [esi] 0 +
xor eax eax +
inc eax  +
jmp loc_106FA2B  +
push ebx  +
mov ebx [ebp+uElapse] +
lea eax [ebx-0Eh] +
cmp eax 1 +
ja loc_106FA28  +
mov eax dword_10B3A98[ebx*4] +
mov [ebp+uIDEvent] eax +
test eax eax +
jz loc_106FA28  +
call ds:GetTickCount  +
push eax  +
push ebx  +
push esi  +
push dword ptr [edi+4]  +
call [ebp+uIDEvent]  +
pop ebx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx+4] +
test eax eax +
jz loc_106FA4E  +
push 0  +
push 0  +
push 576h  +
push eax  +
call ds:PostMessageW  +
retn   +
mov dword ptr [ecx+0D5Ch] 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push [ebp+uIDEvent]  +
mov eax [ebp+hWnd] +
push eax  +
call ds:KillTimer  +
cmp dword_10B21C0 0 +
jnz loc_106FAD5  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+Handles] +
push eax  +
push 0  +
push offset aStartuptrouble  +
push offset szDir  +
push 80000002h  +
mov dword_10B21C0 1 +
mov [ebp+pcbData] 208h +
call ds:__imp_SHGetValueW  +
test eax eax +
jnz loc_106FAD5  +
push eax  +
push 9  +
lea eax [ebp+Handles] +
push eax  +
call sub_102654A  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 10h  +
***
cmp dword ptr [ecx+0D60h] 0 +
jnz locret_106FB2F  +
push offset TimerFunc  +
push 3A98h  +
push 13h  +
push dword ptr [ecx+4]  +
call ds:SetTimer  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetWindowRect  +
mov esi [esi+0CD8h] +
sub esi 0 +
push 12h  +
pop edi  +
jz loc_106FB8B  +
dec esi  +
jz loc_106FB7E  +
dec esi  +
jz loc_106FB72  +
dec esi  +
jnz loc_106FB97  +
mov eax [ebp+arg_8] +
mov eax [eax+4] +
mov [ebp+rc.bottom] eax +
push 0Ch  +
jmp loc_106FB96  +
mov eax [ebp+arg_8] +
mov eax [eax] +
mov [ebp+rc.right] eax +
push 0Ah  +
jmp loc_106FB96  +
mov eax [ebp+arg_8] +
mov eax [eax+0Ch] +
mov [ebp+rc.top] eax +
push 0Fh  +
jmp loc_106FB96  +
mov eax [ebp+arg_8] +
mov eax [eax+8] +
mov [ebp+rc.left] eax +
push 0Bh  +
pop edi  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_106FBAF  +
mov eax edi +
jmp loc_106FBB2  +
push 12h  +
pop eax  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:ChildWindowFromPoint +
push edi  +
push [ebp+arg_8]  +
xor edi edi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
jmp loc_106FBE4  +
cmp eax edi +
jz loc_106FBEA  +
push [ebp+arg_8]  +
mov edi eax +
push [ebp+arg_4]  +
push eax  +
call esi  +
test eax eax +
jnz loc_106FBD7  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetWindowRect  +
mov esi [esi+0CD8h] +
sub esi 0 +
jz loc_106FC3E  +
dec esi  +
jz loc_106FC34  +
dec esi  +
jz loc_106FC2A  +
mov eax dword_10B10CC +
add [ebp+rc.top] eax +
jmp loc_106FC46  +
mov eax dword_10B10C8 +
add [ebp+rc.left] eax +
jmp loc_106FC46  +
mov eax dword_10B10CC +
sub [ebp+rc.bottom] eax +
jmp loc_106FC46  +
mov eax dword_10B10C8 +
sub [ebp+rc.right] eax +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
cmp [ebp+wParam] ebx +
jnz loc_106FCBB  +
lea edx [ebp+wParam] +
push edx  +
xor edi edi +
push ebx  +
jmp loc_106FCAC  +
push offset stru_101DD90  +
push [ebp+wParam]  +
push dword ptr [esi+3Ch]  +
call sub_101DA9D  +
test eax eax +
jz loc_106FCA6  +
mov eax [esi+3Ch] +
push [ebp+wParam]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_106FCA6  +
dec edi  +
lea edx [ebp+wParam] +
inc edi  +
push edx  +
push edi  +
mov eax [esi+3Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_106FD2C  +
jmp loc_106FC81  +
cmp [esi+3Ch] ebx +
jz loc_106FD2C  +
lea edx [ebp+wParam] +
push edx  +
xor edi edi +
push ebx  +
jmp loc_106FCE3  +
push offset stru_101DD90  +
push [ebp+wParam]  +
push dword ptr [esi+3Ch]  +
call sub_101DA9D  +
test eax eax +
jz loc_106FCF2  +
lea edx [ebp+wParam] +
inc edi  +
push edx  +
push edi  +
mov eax [esi+3Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_106FD2C  +
jmp loc_106FCC9  +
mov edi ds:SendMessageW +
push ebx  +
push [ebp+wParam]  +
push 410h  +
push dword ptr [esi+0CA8h]  +
call edi  +
cmp eax ebx +
jle loc_106FD2C  +
push ebx  +
push eax  +
push 427h  +
push dword ptr [esi+0CA8h]  +
call edi  +
push 1  +
push ebx  +
push 423h  +
push dword ptr [esi+0CA8h]  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
cmp dword_10B3AD8 0 +
push ebx  +
mov ebx ecx +
jnz loc_106FD79  +
push esi  +
mov esi ds:PostMessageW +
push edi  +
xor edi edi +
inc edi  +
push edi  +
push 0  +
push 12h  +
push dword_10B10EC  +
mov dword_10B3AC8 edi +
call esi  +
push 0  +
push 0  +
push 12h  +
push dword ptr [ebx+4]  +
call esi  +
test eax eax +
jz loc_106FD77  +
mov dword_10B3AD8 edi +
pop edi  +
pop esi  +
mov eax dword_10B3AD8 +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ds:__imp_SHELL32_100 +
push edi  +
push 4  +
mov edi ecx +
call esi  +
test eax eax +
jnz loc_106FDD3  +
push 40000007h  +
call esi  +
test eax eax +
jz loc_106FDBE  +
xor esi esi +
push esi  +
push esi  +
call sub_107780B  +
push esi  +
call sub_107785C  +
push 501h  +
call ds:SHELL32_896  +
push 43h  +
call ds:GetSystemMetrics  +
test eax eax +
jnz loc_106FDD3  +
mov ecx edi +
pop edi  +
pop esi  +
jmp loc_106EB61  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0C6Ch] 0 +
jz loc_106FE06  +
push 11h  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
push 0  +
push 7530h  +
push 11h  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
xor ebx ebx +
cmp [edi+4] ebx +
jz loc_106FE3C  +
push 13h  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [esi+4]  +
push dword ptr [edi]  +
push dword ptr [esi]  +
call ds:DeferWindowPos  +
mov [esi] eax +
mov eax [edi] +
mov [esi+4] eax +
xor eax eax +
cmp [esi] ebx +
pop edi  +
pop esi  +
setnz al  +
pop ebx  +
pop ebp  +
retn 8  +
***
push 0  +
call sub_106F866  +
retn   +
***
push 0  +
call sub_106F866  +
retn   +
***
push 0  +
push 1  +
push 458h  +
push dword_10B10EC  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
mov esi ecx +
mov [ebp+ExecInfo.cbSize] 3Ch +
call memset  +
mov eax [esi+4] +
mov [ebp+ExecInfo.hwnd] eax +
add esp 0Ch +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.nShow] 1 +
mov [ebp+ExecInfo.lpFile] offset aSearch_0 +
call ds:__imp_ShellExecuteExW  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push offset aMsscreenmagnif  +
push 1  +
push 0  +
call ds:CreateMutexW  +
test eax eax +
jz loc_106FF45  +
push eax  +
call ds:CloseHandle  +
call ds:__imp_GetLastError  +
cmp eax 0B7h +
jz loc_106FF7A  +
push 104h  +
lea eax [ebp+File] +
push eax  +
push offset aSystemrootSy_0  +
call ds:SHLWAPI_460  +
test eax eax +
jz loc_106FF7A  +
push 1  +
push 0  +
push offset aGlobalhotkey  +
lea eax [ebp+File] +
push eax  +
push 0  +
push 0  +
call ds:ShellExecuteW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
***
cmp dword_10B24CC 0 +
jz loc_107010D  +
mov dl byte_10B24D0 +
push esi  +
push edi  +
mov edi 400000h +
mov esi 80000000h +
cmp dl 4 +
jnb loc_1070065  +
test dl dl +
jnz loc_10700B4  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10700B4  +
mov ecx dword_10B24C4 +
push ebx  +
mov ebx dword_10B24C0 +
mov eax ebx +
and eax edi +
and ecx esi +
cmp eax ebx +
pop ebx  +
jnz loc_10700B4  +
cmp ecx dword_10B24C4 +
jnz loc_10700B4  +
push offset dword_1068970  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov dl byte_10B24D0 +
cmp dword_10B24CC 0 +
jz loc_107010B  +
cmp dl 4 +
jnb loc_10700C6  +
test dl dl +
jnz loc_107010B  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_107010B  +
mov edx dword_10B24C0 +
mov eax edx +
and eax edi +
mov edi dword_10B24C4 +
mov ecx edi +
and ecx esi +
cmp eax edx +
jnz loc_107010B  +
cmp ecx edi +
jnz loc_107010B  +
push offset dword_1068960  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
call CM_Request_Eject_PC  +
xor eax eax +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_107013C  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_10]  +
mov esi [ebp+arg_0] +
push [ebp+arg_C]  +
mov ecx [esi+4] +
call sub_1036598  +
push [ebp+arg_4]  +
mov eax [esi+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push dword ptr [eax+4]  +
call sub_107D191  +
xor eax eax +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push [ebp+arg_8]  +
mov ecx [esi+4] +
call sub_1036598  +
push [ebp+arg_C]  +
mov eax [esi+4] +
push [ebp+arg_8]  +
push dword ptr [eax+0B10h]  +
call sub_107D1ED  +
xor eax eax +
pop esi  +
pop ebp  +
retn 14h  +
***
call ds:SHELL32_132  +
xor eax eax +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [eax] +
mov eax [eax+4] +
mov [ebp+Point.y] eax +
push edi  +
lea eax [ebp+Point] +
push eax  +
mov eax [esi+4] +
mov [ebp+Point.x] ecx +
push dword ptr [eax+4]  +
call ds:ScreenToClient  +
push [ebp+Point.y]  +
mov eax [esi+4] +
push [ebp+Point.x]  +
mov edi [eax+0C10h] +
push dword ptr [eax+4]  +
call sub_106FBBD  +
push eax  +
call ds:GetParent  +
cmp eax edi +
jnz loc_1070233  +
push 1  +
push 0  +
push 449h  +
push edi  +
call ds:SendMessageW  +
mov dword ptr [esi+8] 1 +
jmp loc_1070237  +
and dword ptr [esi+8] 0 +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_14] +
and dword ptr [esi] 0 +
lea eax [ebp+arg_C] +
push eax  +
call sub_10701CF  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1070151  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
push 0  +
push 0  +
push 449h  +
push dword ptr [eax+0C10h]  +
call ds:SendMessageW  +
and dword ptr [esi+8] 0 +
call ds:SHELL32_132  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
mov ecx esi +
call sub_10701CF  +
cmp dword ptr [esi+8] 0 +
mov eax [ebp+arg_10] +
jnz loc_10702D0  +
and dword ptr [eax] 0 +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_1070188  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 10h +
push ebx  +
mov ebx [eax+4] +
push esi  +
push edi  +
mov edi [eax] +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
mov eax [esi+4] +
push dword ptr [eax+0B10h]  +
call ds:GetWindowRect  +
push ebx  +
push edi  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_1070337  +
mov eax [esi+4] +
push 0  +
push 3E8h  +
push 0Ch  +
push dword ptr [eax+4]  +
call ds:SetTimer  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_10] +
mov eax [ebp+arg_0] +
mov edx [eax+8] +
push ecx  +
push [ebp+arg_C]  +
and edx 4 +
push [ebp+arg_8]  +
mov [ecx] edx +
push [ebp+arg_4]  +
push eax  +
call sub_1070188  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
push 0Ch  +
push dword ptr [eax+4]  +
call ds:KillTimer  +
call ds:SHELL32_132  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
push edi  +
push 0Ch  +
push dword ptr [eax+4]  +
call ds:KillTimer  +
mov eax [esi+0Ch] +
xor edi edi +
cmp eax edi +
jz loc_107042C  +
mov ecx [eax] +
push edi  +
lea edx [ebp+pv] +
push edx  +
push edi  +
lea edx [ebp+var_4] +
push edx  +
push 2  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jnz loc_107042C  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
call ds:__imp_SHGetIDListFromObject  +
test eax eax +
jl loc_1070418  +
mov eax [esi+0Ch] +
mov ecx [eax] +
push edi  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+10h]  +
push [ebp+arg_0]  +
mov esi [esi+0Ch] +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+10h]  +
push 0Eh  +
push [ebp+pv]  +
push [ebp+arg_0]  +
push offset dword_10B2478  +
call sub_102E3FE  +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
jmp loc_1070431  +
mov edi 80004005h +
call ds:SHELL32_132  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov esi 1F4h +
push esi  +
push dword ptr [edi+4]  +
call ds:UnregisterHotKey  +
inc esi  +
cmp esi 236h +
jl loc_107044F  +
pop edi  +
pop esi  +
retn   +
***
call ds:IsCompositionActive  +
test eax eax +
jz loc_106E826  +
call ds:dwmapi_105  +
test eax eax +
jl loc_106E826  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
test eax eax +
jz loc_107049B  +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_10704B9  +
xor eax eax +
inc eax  +
jmp loc_10704CA  +
mov eax [ebp+10h] +
push 1  +
mov dword_10B39E8 eax +
call sub_102F926  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+0C94h] edi +
jz loc_10704F8  +
push ebx  +
call SndVolSSO_4  +
test eax eax +
jz loc_10704F8  +
xor eax eax +
jmp loc_107052D  +
cmp ebx 0Bh +
jl loc_107050F  +
cmp ebx 0Eh +
jle loc_107052B  +
cmp ebx 36h +
jnz loc_107050F  +
call ds:dwmapi_105  +
jmp loc_10704F4  +
push ebx  +
call sub_107B04D  +
mov edi eax +
test edi edi +
jnz loc_107052B  +
cmp ebx 5 +
jnz loc_107052B  +
push eax  +
push eax  +
push dword ptr [esi+4]  +
call SHELL32_886  +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi ds:RegOpenKeyExW +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
xor edi edi +
push edi  +
push offset aSoftwareMic_33  +
push 80000002h  +
mov [ebp+var_14] edi +
mov [ebp+var_8] edi +
call esi  +
mov ebx ds:RegQueryValueExW +
test eax eax +
jnz loc_10705A0  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aDisablelockwor  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ebx  +
test eax eax +
jnz loc_1070597  +
cmp dword ptr [ebp+Data] edi +
setnz al  +
mov [ebp+var_8] eax +
push [ebp+hKey]  +
call ds:RegCloseKey  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push edi  +
push offset aSoftwareMicr_5  +
push 80000001h  +
call esi  +
test eax eax +
jnz loc_10705F3  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aDisablelockwor  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ebx  +
test eax eax +
jnz loc_10705EA  +
cmp [ebp+var_8] edi +
jnz loc_10705E3  +
mov [ebp+var_8] edi +
cmp dword ptr [ebp+Data] edi +
jz loc_10705EA  +
mov [ebp+var_8] 1 +
push [ebp+hKey]  +
call ds:RegCloseKey  +
cmp [ebp+var_8] edi +
pop edi  +
pop esi  +
pop ebx  +
jnz loc_1070602  +
mov [ebp+var_14] 1 +
mov eax [ebp+var_14] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 0DE0h +
cmp dword ptr [ecx] 0 +
mov eax 80004005h +
jz loc_10706DB  +
mov ecx [ecx] +
mov eax [ecx] +
push 0FFFFFFFFh  +
push dword ptr [ebp+0Ch]  +
push offset dword_1023F40  +
push ecx  +
call dword ptr [eax+1Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push esi  +
add ecx 0DE0h +
xor esi esi +
mov eax 80004005h +
cmp [ecx] esi +
jz loc_1070723  +
mov ecx [ecx] +
mov eax [ecx] +
lea edx [ebp+8] +
push edx  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [ebp+0Ch]  +
push offset dword_1023F40  +
push ecx  +
call dword ptr [eax+20h]  +
cmp eax esi +
jl loc_1070723  +
xor eax eax +
cmp [ebp+8] esi +
setz al  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
add ecx 0DE0h +
cmp dword ptr [ecx] 0 +
mov eax 80004005h +
jz loc_1070752  +
mov ecx [ecx] +
mov eax [ecx] +
push offset dword_1023F40  +
push ecx  +
call dword ptr [eax+24h]  +
pop ebp  +
retn 4  +
***
or eax 0FFFFFFFFh +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+8] eax +
jz loc_1070779  +
mov eax 80040110h +
jmp loc_1070782  +
mov ecx [ebp+0Ch] +
mov dword ptr [ecx] offset unk_10B146C +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hwnd] +
push 2  +
push esi  +
call ds:GetAncestor  +
jmp loc_10707AA  +
mov esi eax +
push 4  +
push esi  +
call ds:GetWindow  +
test eax eax +
jnz loc_107079F  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+pv] +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
and dword ptr [esi] 0 +
mov ecx [eax] +
push edi  +
lea edx [ebp+lpString] +
push edx  +
push 80080001h  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx [ebp+arg_4] +
mov edi eax +
test edi edi +
jl loc_1070848  +
lea eax [ebp+pv] +
push eax  +
push 0  +
push ebx  +
push 0  +
call sub_10125A3  +
mov edi eax +
test edi edi +
jl loc_107083B  +
push 0  +
push 0FFFFFFFFh  +
push [ebp+pv]  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jz loc_1070830  +
push [ebp+lpString]  +
push 0BEEF001Eh  +
push ebx  +
call sub_107D445  +
mov [esi] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
mov edi eax +
jmp loc_1070832  +
mov [esi] ebx +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
push [ebp+lpString]  +
call ds:__imp_CoTaskMemFree  +
test edi edi +
jge loc_107084F  +
push ebx  +
call ds:__imp_SHELL32_155  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call ds:__imp_free  +
pop ecx  +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp [ecx+340h] eax +
jnz locret_1070888  +
cmp [ecx+320h] eax +
jnz locret_1070888  +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov ebx ecx +
xor esi esi +
cmp [ebx+0CB8h] esi +
jz loc_10709AE  +
lea eax [ebx+0CBCh] +
push eax  +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
mov eax [ebx+0CB8h] +
mov eax [eax] +
mov [ebp+var_8] eax +
mov [ebp+id] esi +
push edi  +
mov eax [ebp+id] +
cmp eax [ebp+var_8] +
jge loc_10709A4  +
push eax  +
push dword ptr [ebx+0CB8h]  +
call ds:off_1003D88  +
mov edi eax +
test edi edi +
jz loc_1070999  +
mov ecx [edi] +
test ecx ecx +
jz loc_1070999  +
mov eax [edi+4] +
test eax eax +
jz loc_1070999  +
push eax  +
push ecx  +
call ds:__imp_SHELL32_25  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_1070999  +
push [ebp+arg_4]  +
push eax  +
call ds:__imp_SHELL32_21  +
test eax eax +
jz loc_1070990  +
test byte ptr [edi+0Ah] 2 +
jz loc_1070941  +
mov eax [edi] +
test eax eax +
jz loc_1070933  +
push eax  +
call ds:__imp_SHELL32_155  +
mov eax [edi+4] +
test eax eax +
jz loc_1070941  +
push eax  +
call ds:__imp_SHELL32_155  +
cmp [ebp+arg_8] 0 +
jz loc_107096D  +
push [ebp+arg_8]  +
call ds:__imp_SHELL32_16  +
push eax  +
call ds:__imp_SHELL32_19  +
push [ebp+arg_8]  +
mov esi eax +
call sub_107D56B  +
or word ptr [edi+0Ah] 3 +
mov [edi] eax +
mov [edi+4] esi +
jmp loc_107098D  +
push [ebp+id]  +
mov ecx ebx +
push [ebp+hWnd]  +
call sub_106F3DA  +
movzx eax word ptr [edi+8] +
push 1  +
push eax  +
mov ecx ebx +
call sub_106F37E  +
xor eax eax +
stos   +
stos   +
stos   +
xor esi esi +
inc esi  +
push [ebp+var_C]  +
call ds:__imp_SHELL32_155  +
inc [ebp+id]  +
test esi esi +
jz loc_10708C7  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx ecx +
push edi  +
mov edi [ebx+0CE4h] +
cmp edi 0FFFFFFFFh +
jz loc_10709F1  +
push [ebp+pt.y]  +
mov eax edi +
push [ebp+pt.x]  +
shl eax 4 +
lea eax [eax+ebx+44h] +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_1070AA7  +
push esi  +
push 1  +
push [ebp+pt.y]  +
push [ebp+pt.x]  +
call ds:MonitorFromPoint  +
push [ebp+pt.y]  +
mov [ebp+var_8] eax +
push [ebp+pt.x]  +
lea eax [ebp+rcSrc] +
push eax  +
mov ecx ebx +
call sub_1020593  +
mov edx [ebp+rcSrc.left] +
mov eax [ebp+rcSrc.top] +
sub [ebp+pt.y] eax +
mov ecx [ebp+rcSrc.right] +
mov esi [ebp+rcSrc.bottom] +
sub [ebp+pt.x] edx +
sub esi eax +
sub ecx edx +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
cmp [ebp+pt.x] eax +
jge loc_1070A3F  +
and [ebp+var_4] 0 +
mov edi [ebp+pt.x] +
jmp loc_1070A4B  +
mov edi ecx +
sub edi [ebp+pt.x] +
mov [ebp+var_4] 2 +
mov eax esi +
cdq   +
sub eax edx +
sar eax 1 +
cmp [ebp+pt.y] eax +
jge loc_1070A5F  +
mov eax [ebp+pt.y] +
xor edx edx +
inc edx  +
jmp loc_1070A67  +
push 3  +
mov eax esi +
sub eax [ebp+pt.y] +
pop edx  +
imul edi esi +
imul eax ecx +
cmp eax edi +
mov edi [ebp+var_4] +
jg loc_1070A76  +
mov edi edx +
mov eax edi +
shl eax 4 +
lea esi [eax+ebx+44h] +
push 0  +
push esi  +
call ds:MonitorFromRect  +
cmp [ebp+var_8] eax +
jz loc_1070AA6  +
push edi  +
push dword ptr [ebx+0CE0h]  +
lea eax [ebp+rcSrc] +
push dword ptr [ebx+0CDCh]  +
mov ecx ebx +
push eax  +
push esi  +
call sub_101F680  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call sub_106FD85  +
mov eax dword_10B10EC +
mov esi ds:SendMessageW +
test eax eax +
jz loc_1070ADA  +
push 0  +
push 0  +
push 44Dh  +
push eax  +
call esi  +
mov eax [edi+0C04h] +
test eax eax +
jz loc_1070AF0  +
push 0  +
push 0  +
push 408h  +
push eax  +
call esi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jnz loc_1070B1E  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [edi+0CD8h]  +
call sub_1021675  +
lea ebx [ebp+rc] +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1070B35  +
lea eax [ebp+rcSrc2] +
push eax  +
push dword ptr [edi+4]  +
call ds:GetWindowRect  +
lea esi [ebp+rcSrc2] +
push esi  +
push ebx  +
push [ebp+lprc]  +
call ds:IntersectRect  +
mov eax [esi+4] +
neg eax  +
push eax  +
mov eax [esi] +
neg eax  +
push eax  +
push [ebp+lprc]  +
call ds:OffsetRect  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_210] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+hWnd] +
test esi esi +
jz loc_1070C09  +
test ebx ebx +
jz loc_1070C09  +
push edi  +
call ds:SetForegroundWindow  +
lea eax [ebp+var_214] +
push eax  +
push offset dword_100671C  +
push 0  +
push esi  +
push 0  +
call ds:__imp_SHBindToObject  +
test eax eax +
jl loc_1070BDB  +
push ebx  +
push [ebp+var_214]  +
push edi  +
call ds:SHLWAPI_279  +
xor ecx ecx +
test eax eax +
mov eax [ebp+var_214] +
setnl cl  +
push eax  +
mov [ebp+var_210] ecx +
mov ecx [eax] +
call dword ptr [ecx+8]  +
jmp loc_1070C09  +
lea eax [ebp+pszPath] +
push eax  +
push esi  +
call ds:__imp_SHGetPathFromIDListW  +
lea eax [ebp+pszPath] +
push eax  +
push 30h  +
push 0  +
push 212h  +
push edi  +
push hInstance  +
call ds:ShellMessageBoxW  +
add esp 18h +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+0C44h] +
test eax eax +
jz loc_1070C60  +
cmp eax 2 +
jz loc_1070C53  +
push dword ptr [esi+4]  +
call ds:GetLastActivePopup  +
test eax eax +
jz loc_1070C53  +
push 1  +
push eax  +
call ds:SwitchToThisWindow  +
push 0  +
call ds:MessageBeep  +
jmp loc_1070D70  +
inc dword_10B3ADC  +
push ebx  +
push edi  +
call ds:GetForegroundWindow  +
mov edi eax +
call ds:GetActiveWindow  +
push 3  +
push dword ptr [esi+0B10h]  +
mov [ebp+var_4] eax +
call ds:GetAncestor  +
mov ebx eax +
cmp edi ebx +
jnz loc_1070C97  +
cmp [ebp+var_4] ebx +
jnz loc_1070C97  +
xor ecx ecx +
inc ecx  +
jmp loc_1070C99  +
xor ecx ecx +
mov eax dword_10B10F4 +
test eax eax +
jz loc_1070CAE  +
cmp edi eax +
jnz loc_1070CAE  +
cmp [ebp+var_4] eax +
jnz loc_1070CAE  +
xor ecx ecx +
inc ecx  +
xor eax eax +
cmp ecx eax +
jz loc_1070D08  +
mov edi ds:SendMessageW +
push eax  +
push 10002h  +
push 128h  +
push dword ptr [esi+0B10h]  +
call edi  +
lea ebx [esi+0AF8h] +
mov ecx ebx +
call sub_10372F5  +
test eax eax +
jz loc_1070CEE  +
mov ecx ebx +
call sub_1034C6B  +
mov ecx esi +
call sub_103D4B0  +
jmp loc_1070CFF  +
push 0  +
push 1  +
push 0F3h  +
push dword ptr [esi+0B10h]  +
call edi  +
and dword_10B3ADC 0 +
jmp loc_1070D6E  +
cmp dword_10B3ADC 19h +
jle loc_1070D18  +
mov dword_10B3ADC eax +
jmp loc_1070D6E  +
lea ecx [esi+8] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp edi dword_10B10EC +
jnz loc_1070D44  +
push dword ptr [esi+0B10h]  +
mov ecx esi +
call sub_1039F5F  +
call ds:GetFocus  +
cmp eax [esi+0B10h] +
jnz loc_1070D6E  +
push 1  +
push ebx  +
call ds:SwitchToThisWindow  +
push ebx  +
call ds:SetForegroundWindow  +
push 14h  +
call ds:Sleep  +
push 0  +
push 0  +
push 504h  +
push dword ptr [esi+4]  +
call ds:PostMessageW  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+hCursor] +
mov esi ecx +
cmp edi [esi+0E04h] +
jz loc_1070E34  +
push ebx  +
xor ebx ebx +
mov [esi+0E04h] edi +
cmp [esi+0C08h] ebx +
jnz loc_1070E33  +
lea eax [esi+0CBCh] +
push eax  +
call ds:EnterCriticalSection  +
push edi  +
push dword ptr [esi+0CB8h]  +
call ds:off_1003D88  +
mov edi eax +
cmp edi ebx +
jz loc_1070E1F  +
movzx eax word ptr [edi+8] +
cmp ax bx +
jz loc_1070E1F  +
cmp [esi+0C4Ch] ebx +
jnz loc_1070E1F  +
push ebx  +
push eax  +
mov ecx esi +
call sub_106F37E  +
cmp eax ebx +
jz loc_1070DF5  +
push 1  +
push eax  +
call ds:GetLastActivePopup  +
push eax  +
call ds:SwitchToThisWindow  +
jmp loc_1070E1F  +
push 7F02h  +
push ebx  +
call ds:LoadCursorW  +
mov ebx ds:SetCursor +
push eax  +
call ebx  +
push dword ptr [edi+4]  +
mov [ebp+hCursor] eax +
push dword ptr [edi]  +
push dword ptr [esi+4]  +
call sub_1070B60  +
push [ebp+hCursor]  +
call ebx  +
lea eax [esi+0CBCh] +
push eax  +
call ds:LeaveCriticalSection  +
or dword ptr [esi+0E04h] 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push dword ptr [ebp+nAtom]  +
mov esi ecx +
call ds:GlobalGetAtomNameW  +
test eax eax +
jz loc_1070EAA  +
lea eax [ebp+Buffer] +
push eax  +
call ds:InternalExtractIconListW  +
test eax eax +
jz loc_1070EA5  +
push eax  +
push [ebp+arg_4]  +
call sub_106ECE5  +
movzx eax ax +
push eax  +
mov ecx esi +
call sub_106EDB4  +
cmp eax 0FFFFFFFFh +
jz loc_1070EA5  +
push eax  +
push dword ptr [esi+4]  +
mov ecx esi +
call sub_106F451  +
xor eax eax +
inc eax  +
jmp loc_1070EAC  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
push esi  +
mov esi ecx +
jz loc_1070EDC  +
dec eax  +
jz loc_1070ED7  +
xor eax eax +
jmp loc_1070EF3  +
call sub_102D1AF  +
add esi 0AF8h +
mov ecx esi +
call sub_1034C6B  +
mov ecx esi +
call sub_1015930  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push edi  +
mov edi ecx +
cmp dword_10B3AD8 ebx +
jnz loc_1070F89  +
cmp [ebp+arg_4] ebx +
jnz loc_1070F26  +
push offset loc_101192C  +
push [ebp+arg_0]  +
call sub_10409B1  +
test eax eax +
jnz loc_1070F89  +
mov ecx edi +
call sub_1039F7D  +
mov ecx edi +
call sub_1070AB4  +
cmp [ebp+arg_4] ebx +
jnz loc_1070F4F  +
push [ebp+arg_8]  +
mov dword ptr [edi+0C44h] 2 +
push [ebp+arg_0]  +
call ds:SHELL32_60  +
push esi  +
mov esi ds:GetKeyState +
push 10h  +
mov [edi+0C44h] ebx +
call esi  +
test ax ax +
jge loc_1070F77  +
push 11h  +
call esi  +
test ax ax +
jge loc_1070F77  +
push 12h  +
call esi  +
test ax ax +
jl loc_1070F7C  +
cmp [ebp+arg_4] ebx +
jz loc_1070F88  +
call sub_106DDD9  +
mov ecx edi +
call sub_106FD38  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
mov edi [ebp+8] +
test edi edi +
jz loc_10711D5  +
cmp dword ptr [edi] 0 +
jz loc_10711D5  +
mov eax [edi+10h] +
mov [ebp-4] eax +
and dword ptr [ebp-4] 2 +
push ebx  +
push esi  +
mov [ebp-0Ch] eax +
jz loc_1071026  +
cmp dword_10B24CC 0 +
jz loc_1071026  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1070FD8  +
test al al +
jnz loc_1071026  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov ebx 80000000h +
and eax edx +
and ecx ebx +
or eax ecx +
jz loc_1071026  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx ebx +
cmp ecx eax +
jnz loc_1071026  +
cmp edx esi +
jnz loc_1071026  +
push offset dword_10711E0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor esi esi +
cmp [edi+0Ch] esi +
jnz loc_1071052  +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1071052  +
mov byte ptr [ebp+0Bh] 0 +
mov [ebp-8] esi +
mov eax [edi] +
mov eax [eax+4] +
cmp eax esi +
jz loc_10710D8  +
mov ebx [eax] +
jmp loc_10710D5  +
push esi  +
mov byte ptr [ebp+0Bh] 1 +
call sub_1040084  +
mov [ebp-8] eax +
jmp loc_107103E  +
***
mov eax [edi] +
push ebx  +
push dword ptr [eax+4]  +
call ds:off_1003D88  +
mov esi eax +
test esi esi +
jz loc_10710D5  +
push dword ptr [esi]  +
call ds:IsWindow  +
test eax eax +
jz loc_10710D5  +
push dword ptr [esi]  +
call ds:IsHungAppWindow  +
test eax eax +
jz loc_1071097  +
push dword ptr [esi]  +
call ds:HungWindowFromGhostWindow  +
test eax eax +
jz loc_10710D5  +
cmp dword ptr [esi+4] 0 +
jz loc_10710D5  +
push 4  +
pop ecx  +
or [esi+0Ch] ecx +
cmp dword ptr [esi+10h] 1 +
lea eax [esi+8] +
mov dword ptr [eax] 2Ch +
jnz loc_10710B5  +
mov [esi+10h] ecx +
push eax  +
push dword ptr [esi]  +
call ds:SetWindowPlacement  +
test eax eax +
jnz loc_10710D5  +
push eax  +
push 0F120h  +
push 112h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
dec ebx  +
jns loc_1071061  +
cmp byte ptr [ebp+0Bh] 0 +
jz loc_10710E6  +
push dword ptr [ebp-8]  +
call sub_1040084  +
test byte ptr [ebp-0Ch] 3 +
jz loc_1071138  +
mov eax [edi] +
mov eax [eax+4] +
push dword ptr [eax]  +
call ds:BeginDeferWindowPos  +
cmp dword ptr [ebp-4] 2 +
mov esi eax +
jnz loc_1071106  +
mov eax [edi+14h] +
jmp loc_1071108  +
xor eax eax +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
mov eax [edi] +
push offset loc_106FE0D  +
mov [ebp-10h] esi +
push dword ptr [eax+4]  +
call ds:off_104072C  +
push esi  +
call ds:EndDeferWindowPos  +
cmp dword ptr [ebp-4] 2 +
jnz loc_1071138  +
push dword ptr [edi+18h]  +
call ds:SetForegroundWindow  +
push dword ptr [edi]  +
call sub_105239E  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_1071158  +
push 1  +
push dword ptr [edi+8]  +
push 453h  +
push dword ptr [edi+4]  +
call ds:PostMessageW  +
push edi  +
call sub_1002BCA  +
cmp dword ptr [ebp-4] 2 +
pop ecx  +
jnz loc_10711D3  +
cmp dword_10B24CC 0 +
mov dword_10B39EC 1 +
jz loc_10711D3  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1071185  +
test al al +
jnz loc_10711D3  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_10711D3  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_10711D3  +
cmp edx esi +
jnz loc_10711D3  +
push offset dword_10711F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop esi  +
pop ebx  +
xor eax eax +
inc eax  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
xor edi edi +
mov [ebp+var_4] ebx +
cmp [esi+0CD4h] ebx +
jz loc_1071288  +
mov eax [esi+0BFCh] +
and al 2 +
xor ecx ecx +
cmp al 2 +
setz cl  +
xor eax eax +
cmp [esi+0DE4h] ebx +
setnz al  +
cmp ecx eax +
jnz loc_1071288  +
push 1Ch  +
call sub_1002B98  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jz loc_1071288  +
mov eax [esi+0CD4h] +
mov [edi] eax +
mov eax [ebp+arg_0] +
mov [edi+0Ch] eax +
mov eax dword_10B10EC +
mov [edi+4] eax +
mov eax [esi+4] +
mov [edi+8] eax +
mov eax [esi+0BFCh] +
mov [edi+10h] eax +
mov eax [esi+0BF8h] +
mov [edi+14h] eax +
mov eax [esi+0DE4h] +
mov [edi+18h] eax +
mov [esi+0CD4h] ebx +
mov [esi+0BFCh] ebx +
cmp edi ebx +
jz loc_10712D1  +
push ebx  +
push 2000h  +
push edi  +
push offset loc_1070F94  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_10712B1  +
mov [ebp+var_4] 1 +
jmp loc_10712D1  +
cmp [esi+0CD4h] ebx +
jz loc_10712C2  +
push dword ptr [edi]  +
call sub_105239E  +
jmp loc_10712CA  +
mov eax [edi] +
mov [esi+0CD4h] eax +
push edi  +
call sub_1002BCA  +
pop ecx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+pvData] 2 +
push esi  +
mov esi ecx +
jnz loc_10712F8  +
cmp [esi+0D28h] eax +
jmp loc_10712FB  +
cmp [ebp+pvData] eax +
setz al  +
push 4  +
mov [ebp+pvData] eax +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push offset aTaskbarsizemov  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:__imp_SHSetValueW  +
mov ecx esi +
call sub_101F5DD  +
mov ecx esi +
call sub_101F58F  +
mov ecx esi +
call sub_101ED56  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp eax 0FFFFFFFFh +
jz loc_10713AE  +
cmp eax [esi+0CD8h] +
jz loc_10713AE  +
push ebx  +
push edi  +
shl eax 4 +
lea eax [eax+esi+44h] +
xor edi edi +
inc edi  +
mov dword_10B39B0 edi +
mov [esi+0C50h] edi +
mov ecx [eax+4] +
mov ebx [eax+0Ch] +
mov edx [eax] +
mov eax [eax+8] +
push 214h  +
sub ebx ecx +
push ebx  +
sub eax edx +
push eax  +
push ecx  +
push edx  +
xor ebx ebx +
push ebx  +
push dword ptr [esi+4]  +
call ds:SetWindowPos  +
mov dword_10B39B0 ebx +
push edi  +
mov ecx esi +
mov [esi+0C50h] ebx +
call sub_1015CA1  +
mov ecx esi +
call sub_1015D58  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 420h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_14] +
xor ebx ebx +
push ebx  +
push offset aStart_enabledr  +
push offset aAdvanced  +
push 40000020h  +
push 80000001h  +
mov [ebp+var_41C] eax +
mov [ebp+var_420] edi +
mov [esi+8] ebx +
call sub_1015454  +
test eax eax +
jnz loc_10714CB  +
cmp dword_10B39F0 0FFFFFFFFh +
jnz loc_1071425  +
push offset aDropdescriptio  +
call ds:RegisterClipboardFormatW  +
mov dword_10B39F0 eax +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_10714BB  +
mov ecx [eax] +
push 2  +
push [ebp+var_41C]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jnz loc_10714BB  +
push 4  +
pop edi  +
push 414h  +
lea eax [ebp+var_418] +
push ebx  +
push eax  +
mov [esi+8] edi +
call memset  +
add esp 0Ch +
mov ebx 104h +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
push 1FFh  +
push dword_10B23D0  +
mov [ebp+var_418] edi +
mov edi ds:LoadStringW +
call edi  +
push ebx  +
lea eax [ebp+var_20C] +
push eax  +
push 1FEh  +
push dword_10B23D0  +
call edi  +
push 414h  +
lea eax [ebp+var_418] +
push eax  +
push dword_10B39F0  +
push [ebp+var_41C]  +
call sub_107D7DF  +
mov edi [ebp+var_420] +
mov eax [esi+8] +
and [edi] eax +
lea eax [ebp+arg_C] +
push eax  +
mov ecx esi +
call sub_10702EA  +
push edi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_41C]  +
push esi  +
call sub_1070151  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ds:RevokeDragDrop +
mov esi ecx +
push dword ptr [esi+0B10h]  +
call edi  +
lea eax [esi+0C2Ch] +
push eax  +
call sub_1002BEE  +
push dword ptr [esi+4]  +
call edi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [esi-202h] +
mov ebx ecx +
mov [ebp+var_2C] ebx +
mov [ebp+var_20] eax +
cmp eax 31h +
ja loc_10716BC  +
push edi  +
lea eax [ebx+0DECh] +
xor edi edi +
cmp [eax] edi +
jz loc_1071659  +
mov eax [eax] +
mov ecx [eax] +
lea edx [ebp+var_34] +
push edx  +
lea edx [ebp+var_30] +
push edx  +
push edi  +
push edi  +
push 1Ah  +
push offset dword_1023F70  +
push offset dword_1023F40  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_1071659  +
cmp [ebp+var_34] edi +
jz loc_1071659  +
mov eax [ebx+3Ch] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
push offset stru_1035344  +
push [ebp+var_30]  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_10716BB  +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
push offset dword_10716CC  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_107164E  +
mov eax [ebp+var_24] +
lea edx [ebp+hWnd] +
push edx  +
mov [ebp+hWnd] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp [ebp+hWnd] edi +
jz loc_1071645  +
mov eax [ebp+var_20] +
mov esi ds:SendMessageW +
push edi  +
push edi  +
push 418h  +
push [ebp+hWnd]  +
mov [ebp+arg_0] eax +
call esi  +
mov ebx eax +
cmp ebx edi +
jle loc_1071645  +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 417h  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jz loc_107161F  +
test [ebp+var_10] 8 +
jnz loc_107161F  +
dec [ebp+arg_0]  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_1071626  +
inc edi  +
cmp edi ebx +
jge loc_1071645  +
jmp loc_10715FD  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+hWnd]  +
movzx eax [ebp+var_14] +
push eax  +
mov eax [ebp+var_2C] +
push 111h  +
push dword ptr [eax+4]  +
push dword ptr [eax+3Ch]  +
call sub_100E582  +
mov eax [ebp+var_24] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_28] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10716BB  +
cmp esi 20Bh +
jg loc_1071666  +
mov esi [ebp+var_20] +
jmp loc_107169C  +
cmp esi 215h +
jg loc_1071676  +
sub esi 20Ch +
jmp loc_107169C  +
cmp esi 21Fh +
jg loc_1071686  +
sub esi 216h +
jmp loc_107169C  +
cmp esi 229h +
jg loc_1071696  +
sub esi 220h +
jmp loc_107169C  +
sub esi 22Ah +
movzx eax [ebp+arg_4] +
movzx ecx si +
push edi  +
shl eax 10h +
or eax ecx +
push eax  +
push 458h  +
push dword ptr [ebx+0C10h]  +
call ds:SendMessageW  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
mov ebx ecx +
xor edi edi +
push esi  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] edi +
call ds:IsWindow  +
test eax eax +
jz loc_107190D  +
push esi  +
call ds:UxTheme_86  +
test eax eax +
jz loc_107190D  +
push esi  +
call sub_107078B  +
or dword ptr [ebx+0BFCh] 2 +
mov [ebx+0BF8h] eax +
call sub_1028C75  +
test eax eax +
jz loc_10718ED  +
cmp esi [ebx+0DE4h] +
mov edi 10000h +
mov esi 80000000h +
jz loc_1071820  +
cmp dword_10B24CC 0 +
jz loc_10717A9  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1071762  +
test al al +
jnz loc_10717A9  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10717A9  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_10717A6  +
cmp edx ebx +
jnz loc_10717A6  +
push offset dword_1071928  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ebx [ebp+var_4] +
push 0  +
mov ecx ebx +
call sub_1040043  +
mov [ebp+var_8] eax +
mov eax [ebp+hWnd] +
mov [ebx+0DE4h] eax +
cmp dword_10B24CC 0 +
jz loc_10718EA  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10717DC  +
test al al +
jnz loc_10718EA  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10718EA  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10718EA  +
cmp edx edi +
jnz loc_10718EA  +
push offset dword_1071938  +
jmp loc_10718D9  +
cmp dword_10B24CC 0 +
jz loc_107187D  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1071836  +
test al al +
jnz loc_107187D  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_107187D  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_107187A  +
cmp edx ebx +
jnz loc_107187A  +
push offset dword_1071948  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ebx [ebp+var_4] +
push 0  +
mov ecx ebx +
call sub_1071205  +
and dword ptr [ebx+0DE4h] 0 +
cmp dword_10B24CC 0 +
mov [ebp+var_8] eax +
jz loc_10718EA  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10718A6  +
test al al +
jnz loc_10718EA  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_10718EA  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_10718EA  +
cmp edx edi +
jnz loc_10718EA  +
push offset dword_1071958  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor edi edi +
inc edi  +
cmp [ebp+arg_0] 2 +
jnz loc_1071902  +
push 0D25h  +
push offset dword_1071968  +
call sub_1034B2D  +
and dword ptr [ebx+0BFCh] 0FFFFFFFDh +
test edi edi +
jnz loc_1071917  +
mov dword_10B39EC 1 +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_10066D0  +
push eax  +
xor esi esi +
call dword ptr [ecx]  +
test eax eax +
jl loc_10719C3  +
lea eax [ebp+pv] +
push eax  +
push offset dword_10719CC  +
push [ebp+arg_0]  +
call sub_107DB18  +
test eax eax +
jl loc_10719BA  +
push [ebp+pv]  +
inc esi  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
sub esp 18h +
push edi  +
lea eax [ebp+var_14] +
push eax  +
push 0Ah  +
push dword ptr [ebp+String]  +
call sub_107D8CC  +
mov edi eax +
test edi edi +
jl loc_1071B45  +
push ebx  +
push esi  +
mov esi ds:__imp_SHCreateItemFromIDList +
lea eax [ebp+pv] +
push eax  +
mov ebx offset dword_1068A00 +
push ebx  +
push [ebp+var_14]  +
call esi  +
mov edi eax +
test edi edi +
jl loc_1071B3A  +
mov eax [ebp+pv] +
and [ebp+var_10] 0 +
mov ecx [eax] +
and [ebp+var_4] 0 +
lea edx [ebp+var_C] +
push edx  +
push offset stru_1026650  +
push offset dword_1068F1C  +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1071AB5  +
push [ebp+var_C]  +
mov edi 80040F07h +
call sub_107197D  +
test eax eax +
jnz loc_1071AAA  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jl loc_1071AAA  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_18]  +
push [ebp+pv]  +
call sub_10707BA  +
mov edi eax +
test edi edi +
jl loc_1071AAA  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
push dword ptr [ebp+String]  +
call esi  +
mov edi eax +
test edi edi +
jl loc_1071AA1  +
mov eax [ebp+var_10] +
mov [ebp+var_4] eax +
push dword ptr [ebp+String]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1071ABB  +
mov eax [ebp+pv] +
mov [ebp+var_4] eax +
test edi edi +
jl loc_1071B28  +
mov eax [ebp+var_4] +
mov ecx [eax] +
and dword ptr [ebp+String] 0 +
lea edx [ebp+String] +
push edx  +
push offset dword_1068F3C  +
push eax  +
mov edi 80040F07h +
call dword ptr [ecx+44h]  +
cmp dword ptr [ebp+String] 0 +
jz loc_1071B0F  +
mov esi ds:CompareStringOrdinal +
push 1  +
or ebx 0FFFFFFFFh +
push ebx  +
push offset a_exe_0  +
push ebx  +
push dword ptr [ebp+String]  +
call esi  +
cmp eax 2 +
jz loc_1071B1F  +
push 1  +
push ebx  +
push offset a_msc  +
push ebx  +
push dword ptr [ebp+String]  +
call esi  +
cmp eax 2 +
jz loc_1071B1F  +
push [ebp+arg_8]  +
mov eax [ebp+var_4] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
push dword ptr [ebp+String]  +
call ds:__imp_CoTaskMemFree  +
lea eax [ebp+var_10] +
push eax  +
call sub_1002BEE  +
mov eax [ebp+pv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_14]  +
call ds:__imp_SHELL32_155  +
pop esi  +
pop ebx  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1034521  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+18h]  +
call ds:SetFocus  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
test esi esi +
jnz loc_1071BB5  +
lea esi [ebp+Rect] +
mov eax esi +
push eax  +
push dword ptr [edi+4]  +
call ds:GetWindowRect  +
mov ebx [esi] +
mov eax [esi+8] +
sub eax ebx +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [esi+0Ch] +
sar ecx 1 +
add ecx ebx +
mov ebx [esi+4] +
or dword ptr [edi+0CE4h] 0FFFFFFFFh +
sub eax ebx +
cdq   +
sub eax edx +
sar eax 1 +
add eax ebx +
push eax  +
push ecx  +
mov ecx edi +
call sub_10709BC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
mov [ebp+var_4] ecx +
call ds:SHELL32_137  +
mov ebx [ebp+arg_C] +
cmp [ebp+lprcSrc2] esi +
jz loc_1071C6C  +
mov ecx [ebp+var_4] +
push ebx  +
push [ebp+lprcSrc2]  +
lea eax [ebp+rc] +
push eax  +
call sub_1070AF8  +
mov eax [ebp+arg_8] +
push dword ptr [eax+4]  +
lea esi [ebp+rc] +
push dword ptr [eax]  +
lea edi [ebp+rc1] +
movs   +
movs   +
movs   +
lea eax [ebp+rc1] +
push eax  +
movs   +
call ds:OffsetRect  +
push [ebp+lprcSrc2]  +
lea eax [ebp+rc1] +
push eax  +
lea eax [ebp+rc2] +
push eax  +
call ds:IntersectRect  +
lea eax [ebp+rc2] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call ds:EqualRect  +
mov esi eax +
test esi esi +
jz loc_1071C6C  +
mov ecx [ebp+var_4] +
lea eax [ebp+rc] +
push eax  +
call sub_1015CEC  +
push 15h  +
xor edi edi +
push edi  +
push edi  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
push edi  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
cmp [ebp+lprcSrc2] edi +
jz loc_1071C96  +
cmp esi edi +
jnz loc_1071C96  +
mov ecx [ebp+var_4] +
lea eax [ebp+rc] +
push eax  +
call sub_1015CEC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
push esi  +
push [ebp+hWnd]  +
mov esi ecx +
mov [ebp+var_1C] esi +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1071EB0  +
push edi  +
mov ecx esi +
call sub_1015D2A  +
test eax eax +
jz loc_1071CE8  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
call sub_1021675  +
lea eax [ebp+rc] +
mov [ebp+lprcSrc2] eax +
xor edi edi +
jmp loc_1071CED  +
xor edi edi +
mov [ebp+lprcSrc2] edi +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
push edi  +
lea eax [ebp+pvParam] +
push eax  +
push edi  +
push 1002h  +
call ds:SystemParametersInfoW  +
cmp [ebp+arg_8] edi +
jz loc_1071D18  +
mov eax [esi+0D1Ch] +
jmp loc_1071D1E  +
mov eax [esi+0D18h] +
mov [ebp+var_4] eax +
cmp pvParam edi +
jz loc_1071E8D  +
cmp [ebp+pvParam] edi +
jz loc_1071E8D  +
cmp eax edi +
jle loc_1071E8D  +
lea esi [ebp+Rect] +
lea edi [ebp+var_60] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_4] +
lea edi [ebp+var_40] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_38] +
sub eax [ebp+Rect] +
push ebx  +
sub eax [ebp-48h] +
add eax [ebp+var_40] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_24] eax +
mov eax [ebp+var_34] +
sub eax [ebp-4Ch] +
sub eax [ebp-44h] +
add eax [ebp+var_3C] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_28] eax +
call ds:GetCurrentThread  +
push eax  +
mov [ebp+hThread] eax +
call ds:GetThreadPriority  +
push 2  +
push [ebp+hThread]  +
mov [ebp+nPriority] eax +
call ds:SetThreadPriority  +
mov ebx ds:GetTickCount +
call ebx  +
lea esi [ebp+var_60] +
lea edi [ebp+var_40] +
movs   +
movs   +
movs   +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
call ebx  +
mov esi eax +
mov [ebp+var_8] esi +
jmp loc_1071E6F  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jz loc_1071E30  +
mov eax esi +
imul eax [ebp+var_24] +
cdq   +
idiv  [ebp+var_4] +
mov ecx [ebp+var_38] +
sub ecx [ebp+var_40] +
add eax [ebp+var_60] +
add ecx eax +
mov [ebp+var_40] eax +
mov eax esi +
imul eax [ebp+var_28] +
cdq   +
idiv  [ebp+var_4] +
mov [ebp+var_38] ecx +
mov ecx [ebp+var_34] +
sub ecx [ebp+var_3C] +
add eax [ebp+var_5C] +
add ecx eax +
mov [ebp+var_3C] eax +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+lprcSrc2]  +
mov [ebp+var_34] ecx +
push [ebp+hWnd]  +
mov ecx [ebp+var_1C] +
call sub_1071BF0  +
cmp [ebp+arg_8] 0 +
jz loc_1071E20  +
push [ebp+hWnd]  +
call ds:UpdateWindow  +
mov eax [ebp+var_8] +
lea esi [ebp+var_40] +
lea edi [ebp+Rect] +
movs   +
movs   +
movs   +
movs   +
mov [ebp+var_14] eax +
call ebx  +
sub eax [ebp+var_8] +
cmp eax 14h +
jge loc_1071E46  +
push 14h  +
pop ecx  +
sub ecx eax +
push ecx  +
call ds:Sleep  +
xor eax eax +
cmp [ebp+arg_8] eax +
jnz loc_1071E68  +
lea ecx [ebp+dwResult] +
push ecx  +
push 32h  +
push 2  +
push eax  +
push eax  +
push 45Dh  +
push dword_10B10EC  +
call ds:SendMessageTimeoutW  +
call ebx  +
mov esi eax +
mov [ebp+var_8] eax +
sub esi [ebp+var_18] +
cmp esi [ebp+var_4] +
jb loc_1071DBD  +
push [ebp+nPriority]  +
push [ebp+hThread]  +
call ds:SetThreadPriority  +
mov esi [ebp+var_1C] +
xor edi edi +
pop ebx  +
push [ebp+arg_4]  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+lprcSrc2]  +
mov ecx esi +
push [ebp+hWnd]  +
call sub_1071BF0  +
cmp [ebp+arg_8] edi +
pop edi  +
jz loc_1071EB0  +
push [ebp+hWnd]  +
call ds:UpdateWindow  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0C44h] 2 +
jz loc_1071F11  +
push edi  +
mov edi ds:SHELL32_137 +
push 0  +
mov dword ptr [esi+24h] 1 +
call edi  +
mov eax [esi+0CD8h] +
shl eax 4 +
push 1  +
lea eax [eax+esi+44h] +
push eax  +
push dword ptr [esi+4]  +
mov ecx esi +
call sub_1071CA2  +
push 1  +
call edi  +
xor eax eax +
push eax  +
push eax  +
push 403h  +
push dword ptr [esi+0C04h]  +
mov [esi+24h] eax +
call ds:SendMessageW  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0C44h] 2 +
jz loc_1071F8D  +
push ebx  +
push edi  +
push 2  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
xor ebx ebx +
push ebx  +
lea eax [ebp+rc] +
push eax  +
mov ecx esi +
mov dword ptr [esi+24h] 1 +
mov dword ptr [esi+40h] 3 +
call sub_1034137  +
mov edi ds:SHELL32_137 +
push ebx  +
call edi  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
mov ecx esi +
call sub_1071CA2  +
push ebx  +
call edi  +
push 1  +
call edi  +
push 1  +
push ebx  +
push 403h  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
pop edi  +
mov [esi+24h] ebx +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
push esi  +
setnz al  +
mov esi ecx +
mov ecx [esi+40h] +
and ecx 1 +
cmp eax ecx +
jnz loc_1071FB6  +
mov eax 10000h +
jmp loc_1072025  +
push dword ptr [esi+0CD8h]  +
mov ecx esi +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call sub_106F784  +
test eax eax +
jnz loc_1071FD8  +
mov ecx esi +
call sub_106F1DE  +
xor eax eax +
jmp loc_1072025  +
cmp [ebp+arg_0] 0 +
jz loc_1071FFC  +
mov ecx esi +
mov dword ptr [esi+40h] 1 +
call sub_101F5DD  +
mov ecx esi +
call sub_1071F18  +
mov ecx esi +
call sub_101ED56  +
jmp loc_1072019  +
push 2  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov ecx esi +
call sub_1071EBA  +
and dword ptr [esi+40h] 0 +
mov ecx esi +
call sub_101F5DD  +
mov ecx esi +
call sub_1015D58  +
mov eax 10001h +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push 0  +
push dword_10B10EC  +
add ecx 0FFFFFFF8h +
call sub_1070EFD  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6B8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:RegOpenKeyExW +
push edi  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
xor ebx ebx +
push ebx  +
mov edi offset szDir +
push edi  +
push 80000002h  +
mov [ebp+var_634] ecx +
call esi  +
test eax eax +
jnz loc_10723F8  +
lea eax [ebp+hKey] +
push eax  +
push 3  +
push ebx  +
push edi  +
push 80000001h  +
call esi  +
test eax eax +
jnz loc_10723EC  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetSystemTime  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push ebx  +
push ebx  +
push offset aRestartlasttim  +
push [ebp+hKey]  +
mov [ebp+cbData] 10h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1072144  +
mov esi ds:SystemTimeToFileTime +
lea eax [ebp+FileTime] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
call esi  +
lea eax [ebp-63Ch] +
push eax  +
lea eax [ebp+Data] +
push eax  +
call esi  +
lea eax [ebp-63Ch] +
push eax  +
call sub_104B44B  +
mov esi eax +
lea eax [ebp+FileTime] +
push eax  +
mov edi edx +
call sub_104B44B  +
sub eax esi +
sbb edx edi +
cmp edx 0C9h +
jb loc_10723E0  +
ja loc_1072144  +
cmp eax 2A69C000h +
jb loc_10723E0  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+FileTime.dwHighDateTime] +
push eax  +
push ebx  +
push ebx  +
push offset aRestartidletim  +
push [ebp+phkResult]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jz loc_107217F  +
mov [ebp+FileTime.dwHighDateTime] 927C0h +
jmp loc_1072191  +
mov eax [ebp+FileTime.dwHighDateTime] +
imul eax eax +
mov [ebp+FileTime.dwHighDateTime] eax +
push 8  +
pop esi  +
lea eax [ebp-63Ch] +
push eax  +
mov [ebp-63Ch] esi +
call ds:GetLastInputInfo  +
test eax eax +
jz loc_10721C3  +
call ds:GetTickCount  +
sub eax [ebp-638h] +
cmp eax [ebp+FileTime.dwHighDateTime] +
jb loc_10723E0  +
xor eax eax +
mov ecx esi +
lea edi [ebp+var_654] +
stos   +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+var_654] +
push eax  +
push ebx  +
push ebx  +
push offset aRestarttimeres  +
push [ebp+phkResult]  +
mov [ebp+cbData] 20h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1072274  +
mov ax [ebp+var_650] +
cmp ax bx +
jz loc_1072217  +
cmp ax [ebp+SystemTime.wDayOfWeek] +
jnz loc_10723E0  +
cmp [ebp+var_64E] bx +
jz loc_1072241  +
mov ax [ebp+SystemTime.wDay] +
cmp [ebp+var_64E] ax +
jb loc_10723E0  +
cmp ax [ebp-63Eh] +
ja loc_10723E0  +
cmp [ebp+var_64C] bx +
jnz loc_1072253  +
cmp [ebp-63Ch] bx +
jz loc_1072274  +
mov ax [ebp+SystemTime.wHour] +
cmp [ebp+var_64C] ax +
ja loc_10723E0  +
cmp ax [ebp-63Ch] +
ja loc_10723E0  +
mov eax [ebp+var_634] +
mov eax [eax+0C08h] +
mov esi 104h +
cmp eax ebx +
jz loc_10722C8  +
push esi  +
lea ecx [ebp+dwProcessId] +
push ecx  +
push eax  +
call sub_100AF93  +
test eax eax +
jl loc_10723E0  +
lea eax [ebp+dwProcessId] +
push eax  +
call ds:__imp_PathFindExtensionW  +
cmp eax ebx +
jz loc_10723E0  +
push offset a_scr  +
push eax  +
call ds:__imp_StrCmpICW  +
test eax eax +
jnz loc_10723E0  +
push offset aRestartexplore  +
push 1  +
push ebx  +
call ds:CreateMutexW  +
test eax eax +
jz loc_10723E0  +
push esi  +
lea eax [ebp+dwProcessId] +
push eax  +
push ebx  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_10723E0  +
mov esi 208h +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
push offset aSystemrootSy_1  +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jz loc_10723E0  +
push offset aShell32_dllWai  +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
call sub_1010E3B  +
lea eax [ebp+dwProcessId] +
push eax  +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
call sub_1010E3B  +
push offset dword_1072408  +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
call sub_1010E3B  +
push 44h  +
pop esi  +
push esi  +
lea eax [ebp+StartupInfo] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
lea edi [ebp+hObject] +
stos   +
stos   +
add esp 0Ch +
stos   +
stos   +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+CommandLine] +
push eax  +
push ebx  +
mov [ebp+StartupInfo.cb] esi +
call ds:CreateProcessW  +
test eax eax +
jz loc_10723E0  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-640h]  +
call esi  +
push 10h  +
lea eax [ebp+SystemTime] +
push eax  +
push 3  +
push ebx  +
push offset aRestartlasttim  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
mov ecx [ebp+var_634] +
push ebx  +
push 1  +
push dword_10B10EC  +
call sub_1070EFD  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push offset aAllowconsentto  +
push dword ptr [esi+4]  +
call ds:RemovePropW  +
lea ebx [esi+0CD4h] +
push dword ptr [ebx]  +
mov dword ptr [esi+0DA0h] 1 +
call sub_105239E  +
push 14h  +
pop eax  +
xor edi edi +
push edi  +
lea ecx [ebp+pvParam] +
push ecx  +
push eax  +
mov [ebx] edi +
mov ebx ds:SystemParametersInfoW +
push 2Bh  +
mov [esi+0DA8h] edi +
mov [ebp+pvParam] eax +
call ebx  +
and [ebp+var_4] 0FFFFFFF7h +
push edi  +
lea eax [ebp+pvParam] +
push eax  +
push 14h  +
push 2Ch  +
call ebx  +
mov ecx esi +
call sub_10714F9  +
mov ecx esi +
call sub_106EFD2  +
cmp [esi+0C94h] edi +
jz loc_10725D5  +
call SndVolSSO_2  +
push 1  +
push edi  +
push edi  +
call ds:SHELL32_731  +
lea ebx [esi+0D14h] +
mov eax [ebx] +
cmp eax edi +
jz loc_10725F4  +
push eax  +
call ds:CloseThemeData  +
mov [ebx] edi +
mov ecx esi +
call sub_1070444  +
lea ebx [esi+0D68h] +
mov eax [ebx] +
cmp eax edi +
jz loc_1072610  +
push eax  +
call ds:SHELL32_4  +
mov [ebx] edi +
lea ebx [esi+0D8Ch] +
mov eax [ebx] +
cmp eax edi +
jz loc_1072625  +
push eax  +
call ds:SHELL32_4  +
mov [ebx] edi +
lea ebx [esi+0DDCh] +
mov eax [ebx] +
cmp eax edi +
jz loc_107263E  +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+20h]  +
push ebx  +
call sub_1002BEE  +
lea eax [esi+3Ch] +
push eax  +
call sub_1002BEE  +
lea eax [esi+0D0Ch] +
push eax  +
call sub_1002BEE  +
push offset aTaskbandhwnd  +
push dword ptr [esi+4]  +
call ds:RemovePropW  +
lea ebx [esi+0C0Ch] +
mov eax [ebx] +
mov [esi+0C10h] edi +
cmp eax edi +
jz loc_107267C  +
push eax  +
call ds:DestroyWindow  +
mov [ebx] edi +
push edi  +
call ds:PostQuitMessage  +
mov eax [esi+0C1Ch] +
cmp eax edi +
jz loc_10726AF  +
mov ecx [eax] +
push edi  +
push edi  +
push edi  +
push 3  +
push offset dword_1024ABC  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [esi+0C1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+0C1Ch] edi +
cmp hWnd edi +
jz loc_10726C4  +
lea eax [esi+0CBCh] +
push eax  +
call ds:DeleteCriticalSection  +
mov hWnd edi +
mov [esi+0B10h] edi +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi [ebp+pszPath] +
xor ebx ebx +
push edi  +
inc ebx  +
call ds:PathIsDirectoryW  +
test eax eax +
jz loc_1072734  +
push ebx  +
push edi  +
push offset aSD  +
lea eax [ebp+FileName] +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
inc ebx  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_1072797  +
jmp loc_1072704  +
push edi  +
call ds:__imp_PathFindExtensionW  +
mov [ebp+var_418] eax +
test eax eax +
jz loc_10727A7  +
push eax  +
push 104h  +
lea eax [ebp+var_414] +
push eax  +
call sub_100665F  +
mov ecx [ebp+var_418] +
xor eax eax +
mov [ecx] ax +
lea eax [ebp+var_414] +
push eax  +
push ebx  +
push edi  +
push offset aSDS  +
lea eax [ebp+FileName] +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 18h +
lea eax [ebp+FileName] +
push eax  +
inc ebx  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_1072762  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+arg_4]  +
push edi  +
call sub_100665F  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A54h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov ecx [ebp+0Ch] +
sub ecx 110h +
mov edx [ebp+8] +
mov eax [ebp+14h] +
push ebx  +
push esi  +
push edi  +
mov [ebp-0A34h] edx +
jz loc_10728D0  +
dec ecx  +
jnz loc_1072823  +
movzx eax word ptr [ebp+10h] +
cmp eax 5 +
jz loc_10728CB  +
mov ebx 3EEh +
cmp eax ebx +
jz loc_107282A  +
xor eax eax +
jmp loc_1072949  +
mov eax dword_10B3CEC +
test eax eax +
jz loc_10728BC  +
push eax  +
push 104h  +
lea eax [ebp-210h] +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_10728BC  +
mov edi ds:lstrlenW +
lea eax [ebp-210h] +
push eax  +
call edi  +
xor ecx ecx +
mov esi offset unk_10B3AE0 +
push esi  +
mov [ebp+eax*2-20Eh] cx +
call edi  +
xor ecx ecx +
mov word_10B3AE2[eax*2] cx +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp-0A50h] +
stos   +
stos   +
mov eax [ebp-0A34h] +
mov [ebp-0A54h] eax +
lea eax [ebp-210h] +
mov [ebp-0A4Ch] eax +
lea eax [ebp-0A54h] +
push eax  +
mov dword ptr [ebp-0A50h] 4 +
mov [ebp-0A48h] esi +
call ds:SHFileOperationW  +
push ebx  +
push dword ptr [ebp-0A34h]  +
call ds:EndDialog  +
jmp loc_1072946  +
push 5  +
push edx  +
jmp loc_10728C3  +
***
push eax  +
mov edi 104h +
push edi  +
mov esi offset unk_10B3AE0 +
push esi  +
mov dword_10B3CEC eax +
call sub_100665F  +
push edi  +
push esi  +
call sub_10726DC  +
mov edi ds:SendDlgItemMessageW +
lea eax [ebp-0A30h] +
push eax  +
push 208h  +
push 0Dh  +
mov ebx 3EFh +
push ebx  +
push dword ptr [ebp-0A34h]  +
call edi  +
push esi  +
push dword_10B3CEC  +
lea eax [ebp-0A30h] +
push eax  +
lea eax [ebp-620h] +
push 208h  +
push eax  +
call sub_10343CA  +
add esp 14h +
lea eax [ebp-620h] +
push eax  +
push 0  +
push 0Ch  +
push ebx  +
push dword ptr [ebp-0A34h]  +
call edi  +
xor eax eax +
inc eax  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
cmp ebx 1 +
jnz loc_10729B0  +
xor esi esi +
push esi  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_100E458  +
push offset stru_101DD90  +
push dword ptr [edi+3Ch]  +
call sub_101EA9C  +
test eax eax +
jl loc_10729F8  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push esi  +
push esi  +
push 575h  +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10729F8  +
mov esi ds:StrCmpICA +
push offset aToggledesktop  +
push ebx  +
call esi  +
test eax eax +
jnz loc_10729D7  +
cmp dword_10B10F8 eax +
push 1  +
setz al  +
mov ecx edi +
push eax  +
call sub_1009AAB  +
jmp loc_10729F1  +
push offset aExplorer_1  +
push ebx  +
call esi  +
test eax eax +
jnz loc_10729F1  +
xor esi esi +
push esi  +
push offset loc_1032E94  +
push esi  +
call sub_106F866  +
push ebx  +
call ds:LocalFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 36Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-308h] +
push eax  +
push offset iid  +
push dword ptr [esi+110h]  +
call ds:__imp_CoGetInterfaceAndReleaseStream  +
test eax eax +
jl loc_1072B31  +
push 80h  +
lea eax [ebp-104h] +
push eax  +
push 262h  +
push hInstance  +
call ds:LoadStringW  +
push esi  +
lea eax [ebp-104h] +
push eax  +
lea eax [ebp-304h] +
push 100h  +
push eax  +
call sub_10343CA  +
push 5Ch  +
lea eax [ebp-368h] +
push 0  +
push eax  +
mov dword ptr [ebp-36Ch] 60h +
call memset  +
mov eax hInstance +
add esp 1Ch +
mov [ebp-364h] eax +
push 0  +
lea eax [ebp-304h] +
mov [ebp-350h] eax +
push 0  +
lea eax [ebp-30Ch] +
push eax  +
lea eax [ebp-36Ch] +
push eax  +
mov [ebp-358h] esi +
mov dword ptr [ebp-35Ch] 6 +
mov dword ptr [ebp-320h] 0FFFDh +
mov dword ptr [ebp-31Ch] 263h +
call ds:off_1072B4C  +
test eax eax +
jl loc_1072B25  +
cmp dword ptr [ebp-30Ch] 6 +
jnz loc_1072B25  +
mov eax [ebp-308h] +
mov ecx [eax] +
push 0FFFFFFFFh  +
lea edx [esi+100h] +
push edx  +
push offset dword_1023F40  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp-308h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov ecx [ebp-4] +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
cmp dword ptr [ebx+0DE0h] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi 80004005h +
mov [ebp-210h] edi +
jz loc_1072C64  +
mov eax [ebx+0DE0h] +
mov ecx [eax] +
lea edx [ebp-214h] +
push edx  +
push 0  +
push 104h  +
lea edx [ebp-20Ch] +
push edx  +
push 0FFFFFFFFh  +
push esi  +
push offset dword_1023F40  +
push eax  +
call dword ptr [ecx+20h]  +
mov [ebp-210h] eax +
test eax eax +
jl loc_1072C64  +
cmp dword ptr [ebp-214h] 0 +
jz loc_1072BDA  +
mov dword ptr [ebp-210h] 1 +
jmp loc_1072C64  +
push 114h  +
mov dword ptr [ebp-210h] 8007000Eh +
call sub_1002B98  +
pop ecx  +
mov [ebp-218h] eax +
test eax eax +
jz loc_1072C64  +
mov [ebp-210h] edi +
lea edi [eax+100h] +
movs   +
movs   +
lea ecx [ebp-20Ch] +
push ecx  +
movs   +
push 80h  +
push eax  +
movs   +
call sub_100665F  +
mov esi [ebp-218h] +
lea eax [esi+110h] +
push eax  +
push dword ptr [ebx+0DE0h]  +
push offset stru_1049060  +
call ds:__imp_CoMarshalInterThreadInterfaceInStream  +
test eax eax +
jl loc_1072C5D  +
push 0  +
push 2008h  +
push esi  +
push offset loc_1072A1F  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_1072C5D  +
and dword ptr [ebp-210h] 0 +
jmp loc_1072C64  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov ecx [ebp-4] +
mov eax [ebp-210h] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp [ebp+arg_0] edi +
jnz loc_1072CCA  +
lea eax [esi+0D10h] +
mov ecx [eax] +
lea edx [ecx+1] +
mov [eax] edx +
cmp ecx edi +
jnz loc_1072CF0  +
push 1  +
mov ecx esi +
call sub_1015CA1  +
push edi  +
push edi  +
push 0Bh  +
push dword ptr [esi+4]  +
call ds:SendMessageW  +
push edi  +
push dword ptr [esi+4]  +
call ds:ShowWindow  +
mov ecx esi +
call sub_100DBEB  +
jmp loc_1072CF0  +
dec dword ptr [esi+0D10h]  +
jnz loc_1072CF0  +
call sub_1071F18  +
push 8  +
push dword ptr [esi+4]  +
call ds:ShowWindow  +
push edi  +
push 1  +
push 0Bh  +
push dword ptr [esi+4]  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax 0FFFFFFFCh +
jz loc_1072D11  +
mov eax 80070057h +
jmp loc_1072D1C  +
and eax 1 +
push eax  +
call sub_1071F95  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
push esi  +
setz al  +
push edi  +
mov esi ecx +
mov edi eax +
push edi  +
push 0  +
push 402h  +
push dword ptr [esi+0C04h]  +
call ds:SendMessageW  +
mov ecx offset unk_10B1460 +
mov [esi+0C54h] edi +
call sub_10214C3  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx] +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
mov [ebp+var_8] ebx +
test eax eax +
jz loc_1072DA9  +
cmp eax 1 +
jz loc_1072DA9  +
cmp eax 2 +
jnz loc_1072DD0  +
push 4  +
pop ecx  +
mov edi offset dword_1072DF0 +
lea esi [edx+4] +
xor eax eax +
cmps   +
jnz loc_1072DD0  +
cmp [ebx+0C54h] eax +
setz al  +
jmp loc_1072DDC  +
push 4  +
pop ecx  +
mov edi offset dword_1072DF0 +
lea esi [edx+4] +
xor ebx ebx +
cmps   +
jnz loc_1072DCD  +
xor ecx ecx +
cmp eax 1 +
setz cl  +
push ecx  +
mov ecx [ebp+var_8] +
call sub_1072D25  +
jmp loc_1072DDF  +
mov ebx [ebp+var_8] +
push edx  +
lea ecx [ebx+98h] +
call sub_1076051  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pt] +
push eax  +
mov ebx ecx +
call ds:GetCursorPos  +
xor esi esi +
cmp dword_10B39B0 esi +
jz loc_1072E3C  +
push [ebp+pt.y]  +
lea eax [ebx+0D2Ch] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_1072E63  +
cmp [ebx+0C7Ch] esi +
jnz loc_1072E63  +
cmp [ebx+0C80h] esi +
jnz loc_1072E63  +
cmp [ebx+0D28h] esi +
jz loc_1072E63  +
push [ebp+pt.y]  +
mov ecx ebx +
push [ebp+pt.x]  +
call sub_10709BC  +
jmp loc_1072E69  +
mov eax [ebx+0CD8h] +
mov edi [ebp+lprcDst] +
mov [ebx+0CE4h] eax +
shl eax 4 +
lea esi [eax+ebx+44h] +
movs   +
movs   +
movs   +
push 0  +
movs   +
push dword ptr [ebx+0CE4h]  +
mov ecx ebx +
push [ebp+lprcDst]  +
push [ebp+hDC]  +
call sub_10201EA  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push esi  +
mov esi ecx +
lea ecx [esi+33Ch] +
call sub_10082DC  +
lea ecx [esi+2E0h] +
call sub_10082DC  +
lea ecx [esi+2CCh] +
pop esi  +
jmp loc_1073369  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
add eax 0FFFFFFF4h +
push offset off_1072EEC  +
push eax  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx+0C40h] +
retn   +
***
sub dword ptr [esp+4] 8 +
jmp loc_1072ECA  +
***
sub dword ptr [esp+4] 14h +
jmp sub_10020BD  +
***
sub dword ptr [esp+4] 0Ch +
jmp sub_100209D  +
***
sub dword ptr [esp+4] 10h +
jmp sub_100209D  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1072ECA  +
***
sub dword ptr [esp+4] 14h +
jmp sub_100209D  +
***
sub dword ptr [esp+4] 0Ch +
jmp sub_10020BD  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+1C4h] +
mov eax [edi] +
xor ebx ebx +
cmp eax ebx +
jz loc_1072F90  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi] ebx +
lea edi [esi+1C8h] +
mov eax [edi] +
cmp eax ebx +
jz loc_1072FA4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi] ebx +
lea edi [esi+1ACh] +
mov eax [edi] +
cmp eax ebx +
jz loc_1072FB9  +
push eax  +
call ds:CloseThemeData  +
mov [edi] ebx +
lea edi [esi+1B0h] +
mov eax [edi] +
cmp eax ebx +
jz loc_1072FCE  +
push eax  +
call ds:DeleteObject  +
mov [edi] ebx +
lea edi [esi+1CCh] +
mov eax [edi] +
cmp eax ebx +
jz loc_1072FE2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi] ebx +
push ebx  +
mov ecx esi +
call sub_1035E21  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_14]  +
push 355h  +
push [ebp+arg_0]  +
call sub_104E66F  +
pop ebp  +
retn 18h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1052A1B  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1052B72  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1052B72  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push 1  +
push ebx  +
movs   +
call sub_107E447  +
mov ecx [ebx+1Ch] +
push 1  +
call sub_104EB04  +
test eax eax +
jge loc_1073086  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_107E4C7  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
mov ecx [ebx+1Ch] +
push esi  +
mov esi [ebp+1Ch] +
push edi  +
test ecx ecx +
jz loc_10730FC  +
call sub_1035E92  +
mov eax [ebx+1Ch] +
lea ecx [eax+60h] +
push ecx  +
lea ecx [eax+158h] +
push ecx  +
add eax 104h +
push eax  +
push offset aSSS_0  +
lea eax [ebp-11Ch] +
push 8Ch  +
push eax  +
call sub_10343CA  +
add esp 18h +
test eax eax +
jl loc_107310F  +
push esi  +
lea eax [ebp-11Ch] +
push eax  +
call sub_1045501  +
jmp loc_107310F  +
push esi  +
sub esp 10h +
mov edi esp +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_107E2FC  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+ppMalloc] +
push eax  +
push 1  +
xor esi esi +
call ds:CoGetMalloc  +
test eax eax +
jl loc_107316B  +
mov eax [ebp+ppMalloc] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax [ebp+ppMalloc] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_10731A1  +
test [ebp+arg_8] 1000h +
jz loc_10731A1  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_10731E9  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_10731D1  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_10731E9  +
test esi esi +
jbe loc_1073202  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_1073202  +
test [ebp+arg_8] 800h +
jz loc_1073202  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
inc dword ptr [ecx+700h]  +
mov [ecx+6E8h] eax +
mov eax [ebp+arg_4] +
mov [ecx+6ECh] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+0B18h] +
test eax eax +
jz loc_107329C  +
push esi  +
push eax  +
call ds:off_100407C  +
test eax eax +
jl loc_1073295  +
push edi  +
mov edi ds:off_10065B4 +
push eax  +
push dword ptr [esi+0B18h]  +
call edi  +
mov eax [esi+0B18h] +
cmp dword ptr [eax] 1 +
jnz loc_1073294  +
push ebx  +
push 0  +
push eax  +
call ds:off_1002B68  +
push 0  +
push dword ptr [esi+0B18h]  +
mov ebx eax +
call edi  +
push dword ptr [esi+0B18h]  +
call ds:off_1008340  +
and dword ptr [ebx+0B18h] 0 +
pop ebx  +
pop edi  +
and dword ptr [esi+0B18h] 0 +
pop esi  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_10732FF  +
cmp [ebp+wParam] 0FFFFFFFFh +
jz loc_10732FF  +
cmp [ebp+arg_4] 0 +
push edi  +
mov edi ds:SendMessageW +
jz loc_10732DC  +
push 0  +
push 30002h  +
push 127h  +
push eax  +
call edi  +
push dword ptr [esi]  +
call ds:SetFocus  +
push 1  +
push 0  +
push dword ptr [esi]  +
call ds:InvalidateRect  +
push 0  +
push [ebp+wParam]  +
push 448h  +
push dword ptr [esi]  +
call edi  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+lParam] +
stos   +
stos   +
stos   +
stos   +
mov esi ecx +
push dword ptr [esi]  +
stos   +
or [ebp+lParam] 0FFFFFFFFh +
or [ebp+var_8] 0FFFFFFFFh +
mov [ebp+var_F] 0 +
mov [ebp+var_10] 10h +
call sub_1022837  +
mov [ebp+var_14] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 443h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov eax [ecx] +
test eax eax +
jz locret_1073376  +
push eax  +
call ds:off_1035224  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_1073394  +
jmp loc_1073399  +
push 0  +
mov ecx esi +
call sub_102266B  +
mov eax [esi] +
cmp dword ptr [eax] 0 +
ja loc_1073389  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ds:off_10065E0 +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0B18h] 0 +
push edi  +
mov edi 7FFFFFFFh +
jnz loc_10733F6  +
push 4  +
call ds:off_1007FEC  +
mov [esi+0B18h] eax +
test eax eax +
jz loc_10733ED  +
push esi  +
push edi  +
push eax  +
call ebx  +
test eax eax +
jge loc_10733ED  +
push dword ptr [esi+0B18h]  +
call ds:off_1008340  +
and dword ptr [esi+0B18h] 0 +
cmp dword ptr [esi+0B18h] 0 +
jz loc_1073443  +
mov [ebp+var_4] edi +
mov edi [ebp+arg_0] +
push 0  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jnz loc_1073427  +
push eax  +
push dword ptr [esi+0B18h]  +
call ds:off_1002B68  +
push 0  +
mov ecx eax +
call sub_1010EFE  +
test eax eax +
jz loc_1073427  +
and [ebp+var_4] 0 +
push edi  +
push [ebp+var_4]  +
push dword ptr [esi+0B18h]  +
call ebx  +
test eax eax +
jl loc_1073443  +
mov eax [esi+0B18h] +
mov [edi+0B18h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ecx +
mov eax [ebx+0B18h] +
xor ecx ecx +
mov [ebp+var_8] ecx +
cmp eax ecx +
jz loc_10734AD  +
push esi  +
mov esi ds:off_1002B68 +
push edi  +
push ecx  +
mov [ebp+var_8] 1 +
mov [ebp+var_4] ecx +
push eax  +
jmp loc_1073497  +
push 0  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jz loc_10734A1  +
inc [ebp+var_4]  +
push [ebp+var_4]  +
push dword ptr [ebx+0B18h]  +
call esi  +
mov edi eax +
test edi edi +
jz loc_10734AB  +
jmp loc_107347E  +
xor eax eax +
cmp edi ebx +
setnz al  +
mov [ebp+var_8] eax +
pop edi  +
pop esi  +
mov eax [ebp+var_8] +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
mov eax [ebx] +
test eax eax +
jz loc_10734FE  +
push esi  +
push edi  +
mov edi [eax] +
xor esi esi +
test edi edi +
jbe loc_10734FC  +
push esi  +
mov ecx ebx +
call sub_1022652  +
test eax eax +
jz loc_10734F7  +
cmp byte ptr [eax] 0 +
jz loc_10734ED  +
push [ebp+arg_4]  +
push dword ptr [eax+4]  +
push esi  +
call [ebp+arg_0]  +
jmp loc_10734F7  +
push [ebp+arg_C]  +
push dword ptr [eax+4]  +
push esi  +
call [ebp+arg_8]  +
inc esi  +
cmp esi edi +
jb loc_10734D0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
or esi 0FFFFFFFFh +
push esi  +
push 2  +
mov ebx ecx +
mov [ebp+var_4] esi +
call sub_1010EB3  +
mov edi eax +
dec edi  +
js loc_107352F  +
mov esi [ebp+arg_0] +
neg esi  +
sbb esi esi +
and esi edi +
test esi esi +
jl loc_1073556  +
cmp esi edi +
jg loc_1073556  +
push esi  +
push dword ptr [ebx]  +
call sub_107A7B9  +
test eax eax +
jnz loc_1073553  +
cmp [ebp+arg_0] eax +
setz al  +
lea eax [eax+eax-1] +
add esi eax +
js loc_1073556  +
jmp loc_1073533  +
mov [ebp+var_4] esi +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
push edi  +
xor edi edi +
cmp ecx edi +
jz loc_10735AD  +
push ebx  +
call sub_107337C  +
push edi  +
push edi  +
push 418h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
mov ebx eax +
test ebx ebx +
jle loc_10735AC  +
push 1  +
push edi  +
mov ecx esi +
call sub_1010F3D  +
test eax eax +
jz loc_10735A7  +
mov ecx [esi+0Ch] +
push edi  +
push eax  +
call sub_1022904  +
inc edi  +
cmp edi ebx +
jl loc_107358F  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
push 0FFFFFFFFh  +
xor esi esi +
push 2  +
mov edi ecx +
mov [ebp+var_4] esi +
call sub_1010EB3  +
mov ebx eax +
test ebx ebx +
jle loc_1073607  +
push 1  +
push esi  +
mov ecx edi +
call sub_1010F3D  +
test eax eax +
jz loc_10735FD  +
mov ecx eax +
call sub_107344F  +
test eax eax +
jnz loc_10735FD  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jz loc_1073604  +
inc [ebp+var_4]  +
inc esi  +
cmp esi ebx +
jge loc_1073607  +
jmp loc_10735D9  +
mov [ebp+var_8] esi +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push edi  +
push 0FFFFFFFFh  +
push 2  +
mov esi ecx +
xor edi edi +
call sub_1010EB3  +
test eax eax +
jle loc_1073660  +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 43Fh  +
push dword ptr [esi]  +
mov [ebp+lParam] 20h +
mov [ebp+var_1C] 80000010h +
call ds:SendMessageW  +
cmp eax 0FFFFFFFFh +
jz loc_1073660  +
xor eax eax +
cmp [ebp+var_C] edi +
setz al  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push edi  +
mov edi ecx +
cmp [ebp+arg_4] ebx +
jz loc_10736AA  +
push esi  +
push 0FFFFFFFFh  +
push 2  +
call sub_1010EB3  +
mov esi eax +
jmp loc_1073698  +
push 1  +
push esi  +
mov ecx edi +
call sub_1010F3D  +
cmp eax [ebp+arg_4] +
jz loc_107369D  +
dec esi  +
js loc_10736A9  +
jmp loc_1073689  +
mov ecx [ebp+arg_0] +
xor ebx ebx +
mov [eax+704h] ecx +
inc ebx  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
or [ebp+var_4] 0FFFFFFFFh +
and [ebp+var_8] 0 +
push edi  +
mov edi ecx +
cmp dword ptr [edi+10h] 0 +
mov [ebp+var_C] edi +
jbe loc_1073759  +
push ebx  +
push esi  +
lea esi [edi+4] +
cmp [ebp+var_4] 0FFFFFFFFh +
jnz loc_1073757  +
mov ecx [esi] +
push 0FFFFFFFFh  +
push 2  +
call sub_1010EB3  +
xor ebx ebx +
mov [ebp+var_10] eax +
test eax eax +
jle loc_1073749  +
cmp [ebp+var_4] 0FFFFFFFFh +
jnz loc_1073749  +
mov ecx [esi] +
push 1  +
push ebx  +
call sub_1010F3D  +
mov edi eax +
test edi edi +
jz loc_1073740  +
mov eax [edi+14h] +
cmp eax [ebp+arg_0] +
jnz loc_1073740  +
cmp [ebp+arg_4] 0 +
jz loc_1073733  +
push 3  +
mov ecx edi +
call sub_1010EFE  +
test eax eax +
jnz loc_1073733  +
push 4  +
mov ecx edi +
call sub_1010F1F  +
or [edi+0Ch] eax +
mov ecx [esi] +
push 1  +
push ebx  +
call sub_1021FC2  +
mov [ebp+var_4] eax +
mov edi [ebp+var_C] +
inc ebx  +
cmp ebx [ebp+var_10] +
jl loc_10736F6  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add esi 4 +
cmp eax [edi+10h] +
jb loc_10736DC  +
pop esi  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1073616  +
test eax eax +
jz loc_1073785  +
push 0  +
push 0  +
push 416h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_10737A5  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_107366B  +
jmp loc_10737A7  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
jz loc_10737BF  +
xor eax eax +
jmp loc_10737C2  +
mov eax [ecx+14h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov ebx 80000001h +
jz loc_1073871  +
push 1  +
push offset aPasticonsstrea  +
push offset aSoftwareClasse  +
push ebx  +
call ds:SHOpenRegStream2W  +
mov [ebp+hKey] eax +
test eax eax +
jz loc_1073871  +
push edi  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
push 14h  +
pop edi  +
push dword ptr [esi+10h]  +
mov [ebp+var_1C] edi +
mov [ebp+var_18] 5 +
mov [ebp+var_14] 10001h +
call ds:off_106C7A8  +
mov ecx [ebp+var_1C] +
mov [ebp+var_10] eax +
mov [ebp+var_C] ecx +
test eax eax +
jbe loc_1073861  +
push edi  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+hKey]  +
call ds:IStream_Write  +
test eax eax +
jl loc_1073861  +
push [ebp+hKey]  +
push dword ptr [esi+10h]  +
call ds:off_10738AC  +
test eax eax +
jz loc_1073861  +
mov [ebp+var_8] 1 +
mov eax [ebp+hKey] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_8] 0 +
pop edi  +
jnz loc_10738A3  +
lea eax [ebp+hKey] +
push eax  +
push 20006h  +
push 0  +
push offset aSoftwareClasse  +
push ebx  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10738A3  +
push offset aPasticonsstrea  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+hKey] +
cmp [ecx+0Ch] eax +
jz loc_1073915  +
mov [ecx+0Ch] eax +
xor ecx ecx +
test eax eax +
lea eax [ebp+hKey] +
push eax  +
push 20006h  +
setnz cl  +
push 0  +
push offset szDir  +
push 80000001h  +
mov dword ptr [ebp+Data] ecx +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1073910  +
push 4  +
lea eax [ebp+Data] +
push eax  +
push 4  +
push 0  +
push offset aEnableautotray  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
inc eax  +
jmp locret_1073917  +
xor eax eax +
leave   +
retn 4  +
***
xor eax eax +
cmp [ecx] ax +
jnz locret_107393E  +
mov edx 200Dh +
cmp [ecx+2] dx +
jnz locret_107393E  +
mov edx 0B0FEh +
cmp [ecx+4] dx +
jnz locret_107393E  +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov dx [ecx+4] +
mov eax [ebp+arg_0] +
cmp dx [eax+4] +
jnz loc_1073974  +
push 1  +
push 0FFFFFFFFh  +
add eax 6 +
push eax  +
push 0FFFFFFFFh  +
add ecx 6 +
push ecx  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_1073974  +
xor eax eax +
inc eax  +
jmp loc_1073976  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
test eax eax +
jz loc_1073996  +
push eax  +
call ds:off_1035224  +
and dword ptr [esi+10h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:off_1002B68  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_4] +
push eax  +
call sub_10227D5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push edi  +
mov edi ecx +
mov eax [edi] +
test eax eax +
jz loc_10739ED  +
push esi  +
mov esi [eax] +
jmp loc_10739E9  +
push esi  +
push dword ptr [edi]  +
call ds:off_1002B68  +
test eax eax +
jz loc_10739E9  +
mov dword ptr [eax+664h] 7FFFFFFFh +
dec esi  +
jns loc_10739D2  +
pop esi  +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
mov ebx ecx +
mov eax [ebx] +
test eax eax +
jz loc_1073ABA  +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
cmp word ptr [ecx] 0 +
jz loc_1073ABA  +
push edi  +
mov edi [eax] +
dec edi  +
js loc_1073AB9  +
push esi  +
push edi  +
push dword ptr [ebx]  +
call ds:off_1002B68  +
mov esi eax +
test esi esi +
jz loc_1073A4F  +
mov ecx [esi+208h] +
mov eax [ebp+arg_0] +
cmp ecx [eax+14h] +
jnz loc_1073A4F  +
push dword ptr [eax]  +
push esi  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_1073A54  +
dec edi  +
js loc_1073AB8  +
jmp loc_1073A25  +
mov ecx [ebp+arg_4] +
lea eax [esi+210h] +
cmp dword ptr [eax] 2 +
mov [eax] ecx +
setz bl  +
cmp ecx 2 +
setz al  +
mov [ebp+var_4] edi +
cmp bl al +
jz loc_1073AB8  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1073AB8  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1073AB8  +
mov edi ecx +
test bl bl +
jnz loc_1073AC2  +
mov edi eax +
mov [ebp+arg_0] ecx +
push 0  +
push esi  +
mov ecx edi +
call sub_1022B91  +
cmp eax 0FFFFFFFFh +
jz loc_1073AA2  +
push eax  +
mov ecx edi +
call sub_102266B  +
mov ecx [ebp+arg_0] +
movzx eax bl +
neg eax  +
sbb eax eax +
and eax 7FFFFFFFh +
push eax  +
push esi  +
call sub_10227D5  +
pop esi  +
pop edi  +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 10h  +
mov [ebp+arg_0] eax +
jmp loc_1073A8B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
cmp [ebp+arg_4] ebx +
jz loc_1073B07  +
mov eax [esi] +
cmp eax ebx +
jz loc_1073B07  +
push edi  +
mov edi [eax] +
jmp loc_1073AF5  +
push edi  +
push dword ptr [esi]  +
call ds:off_1002B68  +
cmp eax [ebp+arg_4] +
jz loc_1073AFA  +
dec edi  +
js loc_1073B06  +
jmp loc_1073AE7  +
mov ecx [ebp+arg_0] +
xor ebx ebx +
mov [eax+664h] ecx +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 140h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_108] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
xor eax eax +
push esi  +
mov esi ecx +
mov [esi] ax +
mov eax 200Dh +
push edi  +
mov edi [ebp+arg_4] +
mov [esi+2] ax +
xor eax eax +
mov [esi+4] ax +
test edi edi +
jz loc_1073B55  +
and [edi] eax +
push ebx  +
call ds:__imp_PathIsNetworkPathW  +
test eax eax +
jnz loc_1073C01  +
push 34h  +
push eax  +
lea eax [ebp+var_13C] +
push eax  +
call memset  +
lea eax [ebp+var_104] +
add esp 0Ch +
mov [ebp+var_124] eax +
lea eax [ebp+var_140] +
push eax  +
push 1001h  +
push ebx  +
mov [ebp+var_140] 38h +
mov [ebp+var_120] 80h +
call ds:SHLWAPI_559  +
test eax eax +
jl loc_1073C0A  +
xor ebx ebx +
inc ebx  +
test edi edi +
jz loc_1073BCE  +
cmp [ebp+var_13C] 6 +
jz loc_1073BCA  +
cmp [ebp+var_13C] 5 +
jz loc_1073BCA  +
xor eax eax +
jmp loc_1073BCC  +
mov eax ebx +
mov [edi] eax +
test [ebp+var_134] 2 +
jz loc_1073C01  +
mov eax 0B0FEh +
mov [esi+4] ax +
lea eax [ebp+var_104] +
push eax  +
push 101h  +
lea eax [esi+6] +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_1073C01  +
mov [ebp+var_108] ebx +
jmp loc_1073C0A  +
mov eax 8F21h +
mov [esi+4] ax +
mov ecx [ebp+var_4] +
mov eax [ebp+var_108] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push eax  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
mov edi ecx +
xor esi esi +
call sub_107E7B2  +
test eax eax +
jl loc_1073C6B  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
mov ecx edi +
call sub_1073B14  +
mov esi eax +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_1073C9B  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1073ACC  +
jmp loc_1073C9D  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4B0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_490] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor esi esi +
mov [ebp+var_484] eax +
mov eax offset aSoftwareMic_34 +
push edi  +
mov [ebp+var_498] ecx +
mov [ebp+var_47C] esi +
mov [ebp+var_4B0] eax +
mov [ebp+var_4AC] offset aSoftwareMic_35 +
mov [ebp+var_4A8] esi +
mov [ebp+var_4A4] 1 +
mov [ebp+var_4A0] 2 +
mov [ebp+var_49C] esi +
mov [ebp+var_480] esi +
mov [ebp+var_48C] esi +
lea ecx [ebp+hKey] +
push ecx  +
push 20019h  +
push esi  +
push eax  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1073EDF  +
lea edi [ebp+pclsid] +
stos   +
stos   +
stos   +
push 28h  +
stos   +
lea eax [ebp+sz] +
push eax  +
push offset aGuid  +
push esi  +
push [ebp+hKey]  +
xor edi edi +
call sub_103358D  +
test eax eax +
jl loc_1073D7D  +
lea eax [ebp+pclsid] +
push eax  +
lea eax [ebp+sz] +
push eax  +
call ds:CLSIDFromString  +
test eax eax +
jl loc_1073D7D  +
inc edi  +
xor eax eax +
push 206h  +
mov word ptr [ebp+var_474] ax +
lea eax [ebp+var_474+2] +
push esi  +
push eax  +
mov [ebp+var_488] esi +
call memset  +
add esp 0Ch +
cmp edi esi +
jz loc_1073ED3  +
push 104h  +
lea eax [ebp+var_25C] +
push eax  +
push offset aPath  +
push esi  +
push [ebp+hKey]  +
call sub_103358D  +
test eax eax +
jl loc_1073ED3  +
lea eax [ebp+var_488] +
push eax  +
lea eax [ebp+var_25C] +
push eax  +
lea ecx [ebp+var_474] +
call sub_1073B14  +
mov [ebp+var_494] eax +
cmp [ebp+var_488] esi +
jz loc_1073ED3  +
push 668h  +
call sub_1002B98  +
mov ebx eax +
pop ecx  +
cmp ebx esi +
jz loc_1073ED3  +
lea edi [ebx+42Ch] +
lea esi [ebp+pclsid] +
movs   +
movs   +
lea eax [ebp+var_25C] +
push eax  +
movs   +
push 104h  +
push ebx  +
movs   +
call sub_107E78F  +
mov esi [ebp+var_498] +
xor edi edi +
push edi  +
push ebx  +
push edi  +
mov ecx esi +
mov dword ptr [ebx+210h] 2 +
call sub_10080DF  +
mov ecx [ebp+var_490] +
push 7FFFFFFFh  +
push ebx  +
call sub_10227D5  +
cmp eax 0FFFFFFFFh +
jnz loc_1073E74  +
push ebx  +
call sub_1002BCA  +
pop ecx  +
push edi  +
push dword ptr [esi]  +
call ds:off_10065B4  +
jmp loc_1073ED1  +
cmp [ebp+var_494] edi +
jz loc_1073E8F  +
lea edi [ebx+45Ch] +
mov ecx 82h +
lea esi [ebp+var_474] +
movs   +
mov esi [ebp+var_47C] +
test esi esi +
jz loc_1073EAC  +
push offset word_1033584  +
push [ebp+arg_8]  +
push [ebp+var_484]  +
call sub_1010E3B  +
lea eax [ebp+sz] +
push eax  +
push [ebp+arg_8]  +
push [ebp+var_484]  +
call sub_1010E3B  +
mov eax [ebp+var_48C] +
or esi [ebp+eax+var_4A4] +
mov [ebp+var_47C] esi +
xor esi esi +
push [ebp+hKey]  +
call ds:RegCloseKey  +
inc [ebp+var_480]  +
mov eax [ebp+var_480] +
shl eax 2 +
mov [ebp+var_48C] eax +
mov eax [ebp+eax+var_4B0] +
cmp eax esi +
jnz loc_1073D1F  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_47C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 83Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword ptr [ecx] 0 +
mov eax [ebp+arg_0] +
mov [ebp+var_834] ecx +
mov [ebp+var_830] eax +
jnz loc_10740B9  +
push 0Ah  +
call sub_100801C  +
test byte ptr dword_10B3D30 1 +
push ebx  +
push esi  +
push edi  +
jnz loc_1074104  +
mov esi offset dword_1024000 +
mov edi offset unk_10B3CF0 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_1029D90 +
mov edi offset unk_10B3D00 +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_102DD68 +
mov edi offset unk_10B3D10 +
movs   +
movs   +
or dword_10B3D30 1 +
movs   +
movs   +
mov esi offset dword_1024010 +
mov edi offset unk_10B3D20 +
movs   +
movs   +
movs   +
movs   +
mov ecx [ebp+var_834] +
xor eax eax +
mov word ptr [ebp+var_20C] ax +
mov ebx 104h +
push ebx  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+var_830]  +
call sub_1073CA6  +
mov [ebp+var_838] eax +
push ebx  +
lea eax [ebp+dwProcessId] +
push eax  +
push hWnd  +
call sub_100AF93  +
lea eax [ebp+dwProcessId] +
push eax  +
push ebx  +
lea eax [ebp+var_61C] +
push eax  +
call sub_107E78F  +
mov [ebp+var_828] offset unk_10B3D20 +
mov esi [ebp+var_828] +
push 4  +
pop ecx  +
mov edi offset dword_1024010 +
xor eax eax +
cmps   +
jnz loc_1074183  +
test byte ptr [ebp+var_838] 1 +
jnz loc_107427C  +
mov esi [ebp+var_828] +
push 4  +
pop ecx  +
mov edi offset dword_102DD68 +
xor eax eax +
cmps   +
jnz loc_10741A4  +
test byte ptr [ebp+var_838] 2 +
jnz loc_107427C  +
push 668h  +
call sub_1002B98  +
pop ecx  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_107427C  +
mov esi [ebp+var_828] +
lea edi [eax+42Ch] +
mov [ebp+rguid] edi +
movs   +
movs   +
movs   +
lea ecx [ebp+var_61C] +
push ecx  +
push ebx  +
movs   +
push eax  +
mov dword ptr [eax+210h] 2 +
call sub_100665F  +
mov esi [ebp+var_834] +
xor edi edi +
push edi  +
push [ebp+lpMem]  +
mov ecx esi +
push edi  +
call sub_10080DF  +
mov ecx [ebp+var_830] +
push 7FFFFFFFh  +
push [ebp+lpMem]  +
call sub_10227D5  +
cmp eax 0FFFFFFFFh +
jnz loc_1074234  +
push edi  +
push dword ptr [esi]  +
call ds:off_10065B4  +
push [ebp+lpMem]  +
call sub_1002BCA  +
pop ecx  +
jmp loc_107427C  +
push ebx  +
lea eax [ebp+pvData] +
push eax  +
push [ebp+rguid]  +
call ds:__imp_StringFromGUID2  +
test eax eax +
jle loc_107427C  +
cmp word ptr [ebp+var_20C] 0 +
jz loc_1074268  +
push offset word_1033584  +
push ebx  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1010E3B  +
lea eax [ebp+pvData] +
push eax  +
push ebx  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1010E3B  +
sub [ebp+var_828] 10h +
cmp [ebp+var_828] offset unk_10B3CF0 +
jge loc_1074162  +
cmp word ptr [ebp+var_20C] 0 +
jz loc_10742CC  +
push ebx  +
lea eax [ebp+pvData] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_103311F  +
lea eax [ebp+pvData] +
push eax  +
push offset aPromotediconca  +
push offset aSoftwareClasse  +
push 80000001h  +
call sub_107B770  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6ACh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push 14h  +
pop ebx  +
mov [ebp+var_684] ecx +
mov ecx [ebp+arg_8] +
mov [ebp+var_680] ecx +
push ebx  +
lea ecx [ebp+var_6AC] +
push ecx  +
xor edi edi +
push eax  +
mov [ebp+var_674] esi +
mov [ebp+var_67C] eax +
mov [ebp+var_678] edi +
mov [ebp+var_6AC] ebx +
mov [ebp+var_6A8] 7 +
mov [ebp+var_6A4] 10001h +
mov [ebp+var_6A0] edi +
mov [ebp+var_69C] ebx +
call ds:IStream_Write  +
cmp eax edi +
jl loc_1074616  +
mov [ebp+var_670] edi +
mov dword ptr [ebp+SystemTime.wHour] edi +
xor eax eax +
lea edi [ebp+SystemTime.wSecond] +
stos   +
lea eax [ebp+SystemTime.wHour] +
push eax  +
push 2  +
push [ebp+var_680]  +
push 0  +
jmp loc_10744A6  +
mov edi dword ptr [ebp+SystemTime.wHour] +
mov eax dword ptr [ebp+SystemTime.wSecond] +
mov [ebp+hIcon] eax +
test edi edi +
jz loc_1074466  +
mov ecx edi +
call sub_1047053  +
test eax eax +
jz loc_1074466  +
push [ebp+hIcon]  +
lea eax [edi+22Ch] +
push eax  +
push edi  +
mov ecx esi +
call sub_10226A0  +
cmp eax 0FFFFFFFFh +
jz loc_10743DD  +
push 0  +
push eax  +
mov ecx esi +
call sub_1024671  +
xor eax eax +
push 206h  +
push eax  +
mov word ptr [ebp+var_66C] ax +
lea eax [ebp+var_66C+2] +
push eax  +
call memset  +
push 460h  +
lea eax [ebp+var_464] +
push 0  +
push eax  +
call memset  +
add esp 18h +
push dword ptr [ebp+SystemTime.wSecond]  +
lea eax [ebp+var_66C] +
push edi  +
push eax  +
mov ecx esi +
call sub_10474CD  +
test eax eax +
jz loc_1074466  +
lea eax [ebp+var_66C] +
push eax  +
call sub_102B25E  +
push 668h  +
lea eax [ebp+var_66C] +
push eax  +
push [ebp+var_67C]  +
call ds:IStream_Write  +
test eax eax +
jl loc_1074457  +
inc [ebp+var_678]  +
jmp loc_1074466  +
push [ebp+var_670]  +
push dword ptr [esi+10h]  +
call ds:off_1006840  +
cmp [ebp+hIcon] 0 +
jz loc_107447B  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
inc [ebp+var_670]  +
and dword ptr [ebp+SystemTime.wHour] 0 +
xor eax eax +
lea edi [ebp+SystemTime.wSecond] +
stos   +
lea eax [ebp+SystemTime.wHour] +
push eax  +
push 2  +
push [ebp+var_680]  +
push [ebp+var_670]  +
call [ebp+var_684]  +
test eax eax +
jnz loc_1074390  +
mov eax [esi] +
test eax eax +
jz loc_107460C  +
mov eax [eax] +
and [ebp+var_670] 0 +
mov [ebp+var_680] eax +
test eax eax +
jle loc_107460C  +
push [ebp+var_670]  +
push dword ptr [esi]  +
call ds:off_1002B68  +
mov ebx eax +
test ebx ebx +
jz loc_10745F1  +
movzx eax word ptr [ebx+216h] +
push eax  +
movzx eax word ptr [ebx+214h] +
push eax  +
mov ecx esi +
call sub_10243B8  +
mov [ebp+var_684] eax +
test eax eax +
jnz loc_107453C  +
lea eax [ebx+42Ch] +
push 4  +
pop ecx  +
mov edi offset dword_100D864 +
mov esi eax +
xor edx edx +
cmps   +
jz loc_10745C1  +
mov ecx [ebp+var_674] +
push eax  +
call sub_1033203  +
test eax eax +
jz loc_10745C1  +
cmp [ebp+var_684] 0 +
mov ecx 19Ah +
mov esi ebx +
lea edi [ebp+var_66C] +
movs   +
jnz loc_1074591  +
xor eax eax +
mov [ebp+SystemTime.wYear] ax +
lea edi [ebp+SystemTime.wMonth] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
mov ax [ebp+SystemTime.wYear] +
mov [ebp+var_458] ax +
mov ax [ebp+SystemTime.wMonth] +
mov [ebp+var_456] ax +
lea eax [ebp+var_66C] +
push eax  +
call sub_102B25E  +
push 668h  +
lea eax [ebp+var_66C] +
push eax  +
push [ebp+var_67C]  +
call ds:IStream_Write  +
test eax eax +
jl loc_10745C1  +
inc [ebp+var_678]  +
jmp loc_10745EB  +
push [ebp+var_670]  +
mov eax [ebp+var_674] +
push dword ptr [eax+10h]  +
call ds:off_1006840  +
test eax eax +
jz loc_10745EB  +
push [ebp+var_670]  +
mov ecx [ebp+var_674] +
call sub_10246F2  +
mov esi [ebp+var_674] +
inc [ebp+var_670]  +
mov eax [ebp+var_670] +
cmp eax [ebp+var_680] +
jl loc_10744D5  +
push 14h  +
pop ebx  +
mov edi [ebp+var_678] +
test edi edi +
ja loc_107461D  +
mov eax 80004005h +
jmp loc_107464E  +
mov ecx esi +
call sub_10737CB  +
push [ebp+var_67C]  +
mov [ebp+var_6A0] edi +
call ds:IStream_Reset  +
test eax eax +
jl loc_107464E  +
push ebx  +
lea eax [ebp+var_6AC] +
push eax  +
push [ebp+var_67C]  +
call ds:IStream_Write  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_1002BCA  +
xor eax eax +
pop ecx  +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea esi [ecx+2E0h] +
push 1  +
mov ecx esi +
call sub_1034CCA  +
push edx  +
push eax  +
mov ecx esi +
call sub_1034C92  +
push 2  +
mov ecx esi +
call sub_1034CCA  +
mov esi eax +
mov edi edx +
call sub_101118D  +
mov ecx [ebp+arg_0] +
add esi eax +
adc edi edx +
push edi  +
push esi  +
call sub_107320E  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10746F6  +
cmp eax 2 +
jle loc_10746E8  +
cmp eax 4 +
jle loc_10746EF  +
cmp eax 6 +
jz loc_10746EF  +
cmp eax 7 +
jz loc_10746F6  +
mov eax 3E8h +
jmp loc_10746FB  +
mov eax 0BB8h +
jmp loc_10746FB  +
mov eax 2710h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_102422E  +
test [ebp+arg_0] 1 +
jz loc_107471E  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+Points] +
push eax  +
push [ebp+wParam]  +
push 41Dh  +
push [ebp+hWndFrom]  +
call ds:SendMessageW  +
test eax eax +
jz locret_107477E  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push [ebp+hWndFrom]  +
call ds:MapWindowPoints  +
mov ecx [ebp+var_4] +
mov eax [ebp+Points.y] +
add eax ecx +
mov ecx [ebp+var_8] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
mov eax [ebp+Points.x] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
call ds:SetCursorPos  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
push 2Ch  +
xor ebx ebx +
lea eax [ebp+var_3C] +
push ebx  +
push eax  +
mov esi ecx +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+14h] +
mov edi ds:SendMessageW +
add esp 0Ch +
mov [ebp+var_38] eax +
mov [ebp+var_34] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 435h  +
push dword ptr [esi+24h]  +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_107482D  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+14h]  +
call ds:GetWindowRect  +
mov ecx [ebp+Rect.bottom] +
mov eax [ebp+Rect.top] +
add eax ecx +
cdq   +
sub eax edx +
mov edx [ebp+Rect.left] +
sar eax 1 +
movzx ecx ax +
mov eax [ebp+Rect.right] +
add eax edx +
cdq   +
sub eax edx +
sar eax 1 +
movzx eax ax +
shl ecx 10h +
or ecx eax +
push ecx  +
push ebx  +
push 412h  +
push dword ptr [esi+24h]  +
call edi  +
or [ebp+var_3C] 20h +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 436h  +
push dword ptr [esi+24h]  +
call edi  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 411h  +
jmp loc_1074850  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 411h  +
push dword ptr [esi+24h]  +
call edi  +
test byte ptr [ebp+var_3C] 20h +
jz loc_1074855  +
and [ebp+var_3C] 0FFFFFFDFh +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 436h  +
push dword ptr [esi+24h]  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi+334h] eax +
test eax eax +
jz loc_107488C  +
push 0  +
call ds:GetDoubleClickTime  +
push eax  +
push 0Ah  +
push dword ptr [esi+14h]  +
call ds:SetTimer  +
jmp loc_10748A0  +
push 0Ah  +
push dword ptr [esi+14h]  +
call ds:KillTimer  +
push 0  +
mov ecx esi +
call sub_1074787  +
pop esi  +
pop ebp  +
retn 4  +
***
add ecx 2ACh +
call sub_1073616  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
push 113h  +
push dword ptr [ecx+4]  +
mov dword ptr [ecx+3E0h] 7 +
call ds:PostMessageW  +
retn   +
***
cmp dword ptr [ecx+324h] 0 +
jnz locret_10748F0  +
add ecx 0FFFFFFF4h +
jmp sub_10748C0  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 201h +
jz loc_107492C  +
cmp eax 202h +
jbe loc_1074928  +
cmp eax 204h +
jbe loc_107492C  +
cmp eax 205h +
jbe loc_1074928  +
cmp eax 207h +
jbe loc_107492C  +
cmp eax 209h +
jz loc_107492C  +
xor eax eax +
jmp loc_107492F  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 200h +
jb loc_1074967  +
cmp eax 201h +
jbe loc_1074963  +
cmp eax 204h +
jz loc_1074963  +
cmp eax 207h +
jz loc_1074963  +
cmp eax 20Ah +
jnz loc_1074967  +
xor eax eax +
jmp loc_107496A  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
mov ecx [ebp+Rect.left] +
mov eax [ebp+arg_4] +
mov edx [eax] +
add ecx 2 +
cmp edx ecx +
jle loc_1074999  +
mov ecx edx +
mov edx [ebp+Rect.right] +
add edx 0FFFFFFFAh +
cmp ecx edx +
mov [eax] ecx +
jl loc_10749A7  +
mov ecx edx +
mov edx [eax+4] +
mov [eax] ecx +
mov ecx [ebp+Rect.top] +
inc ecx  +
cmp edx ecx +
jle loc_10749B6  +
mov ecx edx +
mov edx [ebp+Rect.bottom] +
dec edx  +
cmp ecx edx +
mov [eax+4] ecx +
jl loc_10749C3  +
mov ecx edx +
mov [eax+4] ecx +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+338h] 0 +
jz loc_1074A03  +
cmp dword ptr [esi+388h] 7 +
jnz loc_1074A03  +
push 0Ch  +
push dword ptr [esi+10h]  +
call ds:KillTimer  +
push 0  +
push 2710h  +
push 0Ch  +
push dword ptr [esi+10h]  +
call ds:SetTimer  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax [ebp+arg_C] +
xor ecx ecx +
push 4  +
mov [ebp+var_40] eax +
lea eax [ebp+arg_10] +
mov [ebp+var_3C] ecx +
mov [ebp+var_34] ecx +
mov [ebp+var_30] eax +
pop eax  +
mov [ebp+var_2C] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push [ebp+arg_8]  +
lea edx [ebp+arg_14] +
push [ebp+arg_4]  +
mov [ebp+var_20] edx +
push [ebp+arg_0]  +
lea edx [ebp+arg_18] +
mov [ebp+var_38] 10h +
mov [ebp+var_28] eax +
mov [ebp+var_18] eax +
mov [ebp+var_10] edx +
mov [ebp+var_8] eax +
call ds:EventWrite  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov edx [ebp+arg_10] +
xor ecx ecx +
push 4  +
lea eax [ebp+arg_C] +
mov [ebp+var_40] eax +
pop eax  +
mov [ebp+var_3C] ecx +
mov [ebp+var_34] ecx +
mov [ebp+var_2C] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push [ebp+arg_8]  +
mov [ebp+var_30] edx +
push [ebp+arg_4]  +
lea edx [ebp+arg_14] +
push [ebp+arg_0]  +
mov [ebp+var_20] edx +
lea edx [ebp+arg_18] +
mov [ebp+var_38] eax +
mov [ebp+var_28] 10h +
mov [ebp+var_18] eax +
mov [ebp+var_10] edx +
mov [ebp+var_8] eax +
call ds:EventWrite  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov edx [ebp+arg_10] +
push 4  +
lea eax [ebp+arg_C] +
mov [ebp+var_50] eax +
pop eax  +
mov [ebp+var_48] eax +
mov [ebp+var_28] eax +
mov [ebp+var_18] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_50] +
push eax  +
push 5  +
push [ebp+arg_8]  +
xor ecx ecx +
push [ebp+arg_4]  +
mov [ebp+var_40] edx +
push [ebp+arg_0]  +
lea edx [ebp+arg_14] +
mov [ebp+var_30] edx +
lea edx [ebp+arg_18] +
mov [ebp+var_20] edx +
lea edx [ebp+arg_1C] +
mov [ebp+var_4C] ecx +
mov [ebp+var_44] ecx +
mov [ebp+var_3C] ecx +
mov [ebp+var_38] 10h +
mov [ebp+var_34] ecx +
mov [ebp+var_2C] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] edx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] ecx +
call ds:EventWrite  +
leave   +
retn 20h  +
***
cmp dword ptr [ecx+0B1Ch] 4 +
jz loc_1074B6D  +
push 0  +
call sub_1010EFE  +
test eax eax +
jnz loc_1074B6D  +
retn   +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ecx]  +
call ds:GetWindowRect  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
leave   +
retn 8  +
***
cmp dword ptr [ecx+374h] 0 +
jnz loc_1074BB6  +
call sub_1023603  +
test eax eax +
jnz loc_1074BB6  +
retn   +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ecx] +
mov eax [ebp+arg_0] +
cmp edx [eax] +
jnz loc_1074BD9  +
mov ecx [ecx+4] +
cmp ecx [eax+4] +
jnz loc_1074BD9  +
xor eax eax +
jmp loc_1074BDC  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push 402h  +
push [ebp+arg_0]  +
mov edi ecx +
call sub_104785B  +
push esi  +
push esi  +
push esi  +
push 403h  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_104785B  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax+14h]  +
mov esi ecx +
push dword ptr [eax+10h]  +
push eax  +
call sub_1021C47  +
test eax eax +
jl loc_1074C57  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1074C57  +
push 1  +
push eax  +
call sub_1010F3D  +
test eax eax +
jz loc_1074C57  +
push eax  +
mov ecx esi +
call sub_1074BE5  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_101118D  +
mov ecx [esi+304h] +
cmp ecx edx +
jb loc_1074C8D  +
ja loc_1074C86  +
mov ecx [esi+300h] +
cmp ecx eax +
jbe loc_1074C8D  +
mov ebx 400h +
jmp loc_1074C8F  +
xor ebx ebx +
mov ecx [ebp+arg_0] +
mov esi [ecx+6ECh] +
cmp esi edx +
jb loc_1074CAF  +
ja loc_1074CA8  +
mov edx [ecx+6E8h] +
cmp edx eax +
jbe loc_1074CAF  +
mov edi 800h +
jmp loc_1074CB1  +
xor edi edi +
mov esi [ecx+700h] +
push offset loc_1074CEC  +
call ds:SHLWAPI_618  +
neg eax  +
sbb eax eax +
and eax 2000h +
cmp esi 3 +
sbb ecx ecx +
and ecx 0FFFFF000h +
add ecx 1000h +
or eax ecx +
or eax edi +
pop edi  +
pop esi  +
or eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
or edi 0FFFFFFFFh +
sub eax esi +
jz loc_1074D7B  +
dec eax  +
jz loc_1074D62  +
dec eax  +
jz loc_1074D55  +
dec eax  +
jz loc_1074D45  +
dec eax  +
jz loc_1074D35  +
dec eax  +
jnz loc_1074DA1  +
mov ecx [ecx+18h] +
cmp ecx esi +
jz loc_1074DA1  +
push ecx  +
call ds:IsWindowVisible  +
test eax eax +
jmp loc_1074D75  +
xor eax eax +
cmp [ebp+arg_4] esi +
setz al  +
add ecx 29Ch +
jmp loc_1074D99  +
xor eax eax +
cmp [ebp+arg_4] esi +
setz al  +
add ecx 2BCh +
jmp loc_1074D99  +
cmp [ecx+324h] esi +
jz loc_1074DA1  +
cmp [ecx+14h] esi +
jmp loc_1074D75  +
cmp [ecx+324h] esi +
jz loc_1074DA1  +
cmp [ecx+320h] esi +
jz loc_1074DA1  +
cmp [ecx+3Ch] esi +
jz loc_1074DA1  +
xor edi edi +
jmp loc_1074DA1  +
cmp [ecx+324h] esi +
jz loc_1074DA1  +
cmp [ecx+320h] esi +
jz loc_1074DA1  +
xor eax eax +
cmp [ebp+arg_4] esi +
setz al  +
add ecx 2ACh +
push eax  +
call sub_1073508  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
mov esi ecx +
xor ecx ecx +
sub eax ecx +
jz loc_1074E2F  +
dec eax  +
jz loc_1074E10  +
dec eax  +
jz loc_1074DF7  +
dec eax  +
jz loc_1074DEF  +
dec eax  +
jz loc_1074DE7  +
dec eax  +
jnz loc_1074E3F  +
push ecx  +
push 30002h  +
push 127h  +
push dword ptr [esi+18h]  +
call ds:SendMessageW  +
push dword ptr [esi+18h]  +
jmp loc_1074E27  +
lea ecx [esi+29Ch] +
jmp loc_1074E35  +
lea ecx [esi+2BCh] +
jmp loc_1074E35  +
push ecx  +
push 30002h  +
push 127h  +
push dword ptr [esi+14h]  +
call ds:SendMessageW  +
push dword ptr [esi+14h]  +
jmp loc_1074E27  +
push ecx  +
push 30002h  +
push 127h  +
push dword ptr [esi+3Ch]  +
call ds:SendMessageW  +
push dword ptr [esi+3Ch]  +
call ds:SetFocus  +
jmp loc_1074E3F  +
lea ecx [esi+2ACh] +
push 1  +
push [ebp+wParam]  +
call sub_10732AC  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+2E0h] +
mov ecx edi +
call sub_10739C2  +
xor ebx ebx +
lea ecx [ebp+var_2C] +
mov [ebp+var_30] ebx +
mov [ebp+var_34] ebx +
call sub_102427A  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
jmp loc_1074EE2  +
cmp [ebp+var_34] ebx +
jz loc_1074EC2  +
cmp [ebp+var_1C] 2 +
mov ecx 7FFFFFFFh +
jz loc_1074EAA  +
cmp [ebp+arg_0] ebx +
jz loc_1074EAA  +
mov eax [esi+2B8h] +
jmp loc_1074EB2  +
mov eax [esi+2A8h] +
xor ecx ecx +
cmp eax ebx +
jz loc_1074EC2  +
push ecx  +
push eax  +
push [ebp+var_30]  +
mov ecx edi +
call sub_107399D  +
inc [ebp+var_30]  +
lea ecx [ebp+var_2C] +
call sub_102422E  +
lea ecx [ebp+var_2C] +
call sub_102427A  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push ebx  +
push ebx  +
push [ebp+var_30]  +
mov ecx edi +
call sub_1024417  +
test eax eax +
jnz loc_1074E8D  +
lea ecx [ebp+var_2C] +
call sub_102422E  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
push dword ptr [esi+14h]  +
call ds:GetWindowRect  +
lea eax [ebp+pt] +
push eax  +
call ds:GetCursorPos  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_1074F98  +
push [ebp+pt.y]  +
lea ecx [esi+2Ch] +
push [ebp+pt.x]  +
call sub_1074B76  +
test eax eax +
jnz loc_1074F98  +
mov edi ds:GetFocus +
call edi  +
cmp eax [esi+14h] +
jz loc_1074F98  +
call edi  +
cmp eax [esi+18h] +
jz loc_1074F98  +
mov ebx [esi+3Ch] +
call edi  +
cmp eax ebx +
jz loc_1074F98  +
cmp dword ptr [esi+3BCh] 2 +
jz loc_1074F98  +
xor ebx ebx +
mov [ebp+var_4] ebx +
call edi  +
push ebx  +
mov ecx esi +
mov edx eax +
call sub_1010881  +
cmp [eax] edx +
jz loc_1074F98  +
inc ebx  +
cmp ebx 3 +
jnb loc_1074F9F  +
jmp loc_1074F80  +
mov [ebp+var_4] 1 +
xor eax eax +
cmp eax dword_10B1108 +
sbb edi edi +
xor ebx ebx +
neg edi  +
cmp [ebp+var_4] ebx +
jnz loc_1074FEC  +
cmp edi ebx +
jnz loc_1074FEC  +
cmp [esi+340h] ebx +
jz loc_1074FEC  +
mov eax [esi+338h] +
cmp eax ebx +
jz loc_1074FEC  +
lea ecx [ebp+var_8] +
push ecx  +
push dword ptr [eax+14h]  +
mov ecx esi +
push dword ptr [eax+10h]  +
push eax  +
call sub_1021C47  +
test eax eax +
jl loc_1074FEC  +
lea eax [esi+2ACh] +
cmp [ebp+var_8] eax +
jnz loc_1074FEC  +
xor edi edi +
inc edi  +
xor eax eax +
cmp [ebp+var_4] ebx +
jnz loc_1075025  +
cmp edi ebx +
jz loc_1075003  +
mov dword ptr [esi+3E0h] 7 +
jmp loc_1075015  +
mov ecx [esi+3E0h] +
cmp ecx 7 +
jnb loc_1075019  +
inc ecx  +
mov [esi+3E0h] ecx +
cmp edi ebx +
jnz loc_107502B  +
cmp dword ptr [esi+3E0h] 7 +
sbb eax eax +
inc eax  +
jmp loc_107502B  +
mov [esi+3E0h] ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+3A8h] +
mov ebx [eax] +
push edi  +
push ebx  +
mov [ebp+var_44] esi +
mov [ebp+hWnd] ebx +
call ds:GetDC  +
xor edi edi +
mov [ebp+hDC] eax +
cmp eax edi +
jz loc_10751F0  +
push eax  +
call ds:CreateCompatibleDC  +
mov [ebp+var_1C] eax +
cmp eax edi +
jz loc_10751E4  +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+3ACh]  +
push 417h  +
push ebx  +
mov ebx ds:SendMessageW +
call ebx  +
test eax eax +
jz loc_10751DB  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+3ACh]  +
push 41Dh  +
push [ebp+hWnd]  +
call ebx  +
test eax eax +
jz loc_10751DB  +
mov eax [ebp-34h] +
neg eax  +
push eax  +
mov eax [ebp+rc] +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
push [ebp+hDC]  +
call ds:CreateCompatibleBitmap  +
push 1  +
push [ebp+var_1C]  +
mov [ebp+var_20] eax +
call ds:SetBkMode  +
cmp [ebp+var_20] edi +
jz loc_10751DB  +
push edi  +
push 1  +
push 1  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
call ds:CreateBitmap  +
mov [ebp+var_24] eax +
cmp eax edi +
jz loc_10751D2  +
push [ebp+var_20]  +
mov esi ds:SelectObject +
push [ebp+var_1C]  +
call esi  +
mov ebx ds:PatBlt +
push 42h  +
push dword ptr [ebp-2Ch]  +
mov [ebp+var_48] eax +
push dword ptr [ebp-30h]  +
push edi  +
push edi  +
push [ebp+var_1C]  +
call ebx  +
push edi  +
push edi  +
push 431h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
push edi  +
push edi  +
push edi  +
push [ebp+var_1C]  +
mov [ebp+var_40] eax +
push [ebp+lParam]  +
push eax  +
call ds:off_1075204  +
push [ebp+var_24]  +
push [ebp+var_1C]  +
call esi  +
push 0FF0062h  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
push edi  +
push edi  +
push [ebp+var_1C]  +
call ebx  +
push 10h  +
push edi  +
push edi  +
push [ebp+var_1C]  +
push [ebp+lParam]  +
push [ebp+var_40]  +
call ds:off_1075204  +
push [ebp+var_48]  +
push [ebp+var_1C]  +
call esi  +
push 1  +
push 1  +
push 0FFh  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
call ds:off_10192F8  +
mov esi [ebp+var_44] +
push 0FFFFFFFFh  +
add esi 3D8h +
push eax  +
mov [esi] eax +
call ds:off_1075200  +
push [ebp+var_24]  +
push [ebp+var_20]  +
push dword ptr [esi]  +
call ds:off_106C7A4  +
push [ebp+var_24]  +
call ds:DeleteObject  +
push [ebp+var_20]  +
call ds:DeleteObject  +
push [ebp+var_1C]  +
call ds:DeleteDC  +
push [ebp+hDC]  +
push [ebp+hWnd]  +
call ds:ReleaseDC  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+3B4h] 0FFFFFFFFh +
jz loc_107525B  +
mov eax [esi+3B0h] +
test eax eax +
jz loc_107525B  +
push dword ptr [eax]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_107525B  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
or [ebp+lParam] 0FFFFFFFFh +
lea eax [ebp+lParam] +
push eax  +
mov eax [esi+3B0h] +
push 0  +
push 450h  +
push dword ptr [eax]  +
call ds:SendMessageW  +
pop edi  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [esi+3B0h] eax +
mov eax [ebp+arg_C] +
mov [esi+3B4h] ecx +
test eax eax +
jz loc_1075281  +
mov [eax] ecx +
xor ecx ecx +
cmp [ebp+arg_8] ecx +
setnz cl  +
mov [eax+4] ecx +
cmp [ebp+arg_8] 0 +
jz loc_107528D  +
inc dword ptr [esi+3B4h]  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea esi [ecx+0A50h] +
cmp dword ptr [esi] 0 +
jnz loc_10752B9  +
push 14h  +
mov ecx esi +
call sub_1003E30  +
cmp dword ptr [esi] 0 +
jz loc_10752DC  +
mov eax [ebp+arg_0] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_4] eax +
lea eax [ebp+var_10] +
push eax  +
mov ecx esi +
call sub_1003DE4  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+0A50h] edi +
jz loc_1075349  +
cmp [ebp+arg_0] 0 +
jz loc_1075338  +
mov eax [esi+0A50h] +
push ebx  +
cmp eax edi +
jz loc_107530E  +
mov ebx [eax] +
jmp loc_1075310  +
xor ebx ebx +
cmp ebx edi +
jle loc_1075337  +
push edi  +
push dword ptr [esi+0A50h]  +
call ds:off_1003D88  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call ds:SendMessageW  +
inc edi  +
cmp edi ebx +
jl loc_1075314  +
pop ebx  +
mov esi [esi+0A50h] +
test esi esi +
jz loc_1075349  +
push esi  +
call ds:off_1015DA8  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
xor eax eax +
cmp [ecx+320h] eax +
jnz loc_1075370  +
add ecx 2ACh +
cmp edx ecx +
jz loc_107537B  +
push [ebp+wParam]  +
mov eax [edx] +
push eax  +
call sub_107A7B9  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+var_4] ecx +
xor ecx ecx +
cmp dword ptr [ebx+8] 20h +
mov [ebp+var_8] ecx +
jnz loc_10755AD  +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+rc] +
stos   +
stos   +
stos   +
stos   +
mov [ebp+var_C] ecx +
mov [ebp+arg_0] ecx +
lea eax [ebx+18h] +
push 4  +
pop ecx  +
mov edi offset loc_1021CB0 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_107547A  +
mov eax [ebp+var_4] +
push dword ptr [eax+14h]  +
call ds:IsWindow  +
test eax eax +
jz loc_10755AB  +
mov edi [ebp+var_4] +
push dword ptr [edi+14h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_10755AB  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [edi+14h]  +
call ds:GetWindowRect  +
test eax eax +
jz loc_107540C  +
xor eax eax +
inc eax  +
mov [ebp+var_C] eax +
mov [ebp+arg_0] eax +
cmp dword ptr [ebx+14h] 0FFFFFFFFh +
jnz loc_1075517  +
push 0FFFFFFFFh  +
lea esi [edi+2BCh] +
push 3  +
mov ecx esi +
call sub_1010EB3  +
test eax eax +
jle loc_1075517  +
test byte ptr [edi+364h] 1 +
jz loc_1075517  +
lea eax [ebp+var_30] +
push eax  +
push dword ptr [esi]  +
call ds:GetClientRect  +
push 0FFFFFFECh  +
push dword ptr [edi+10h]  +
call ds:GetWindowLongW  +
push 0  +
test eax 400000h +
jnz loc_1075464  +
mov eax [ebp+var_28] +
sub eax [ebp+var_30] +
jmp loc_107546A  +
mov eax [ebp+var_30] +
sub eax [ebp+var_28] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
jmp loc_1075517  +
lea ecx [ebp+var_10] +
push ecx  +
push dword ptr [ebx+14h]  +
mov ecx [ebp+var_4] +
push dword ptr [ebx+10h]  +
push eax  +
call sub_1021C47  +
mov edi eax +
test edi edi +
jl loc_10755AB  +
mov esi [ebp+var_10] +
push 1  +
push edi  +
mov ecx esi +
call sub_1010F3D  +
test eax eax +
jz loc_10755AB  +
push dword ptr [esi]  +
call ds:IsWindow  +
test eax eax +
jz loc_1075506  +
push dword ptr [esi]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1075506  +
mov eax [esi] +
lea ecx [ebp+rc] +
push ecx  +
push edi  +
push 41Dh  +
push eax  +
call ds:SendMessageW  +
test eax eax +
jz loc_10755AB  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push 0  +
push dword ptr [esi]  +
call ds:MapWindowPoints  +
mov eax [ebp+var_4] +
mov edi [ebp+var_4] +
xor ecx ecx +
add eax 2ACh +
cmp esi eax +
setnz cl  +
mov [ebp+arg_0] ecx +
jmp loc_1075521  +
cmp dword ptr [ebx+4] 2 +
jnz loc_10755AB  +
or [ebp+var_8] 0FFFFFFFFh +
mov edi [ebp+var_4] +
cmp [ebp+var_C] 0 +
jz loc_10755AB  +
xor esi esi +
cmp [ebp+arg_0] esi +
jz loc_107557A  +
push esi  +
lea eax [ebp+var_74] +
push eax  +
mov ecx offset unk_10B1460 +
call sub_1023E74  +
cmp [ebp+var_44] esi +
jz loc_107557A  +
mov esi [edi+364h] +
shl esi 4 +
add esi offset unk_10B14A4 +
lea edi [ebp+var_30] +
movs   +
movs   +
lea eax [ebp+Rect] +
movs   +
push eax  +
push hWnd  +
movs   +
call ds:GetWindowRect  +
mov eax [ebp+var_2C] +
sub eax [ebp+Rect.top] +
push eax  +
mov eax [ebp+var_30] +
sub eax [ebp+Rect.left] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
mov ebx [ebx+4] +
cmp ebx 1 +
jnz loc_107558C  +
movzx eax word ptr [ebp+rc.top] +
movzx ecx word ptr [ebp+rc.left] +
jmp loc_10755A3  +
cmp ebx 2 +
jnz loc_10755AB  +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
mov ecx [ebp+rc.right] +
sub ecx [ebp+rc.left] +
movzx eax ax +
movzx ecx cx +
shl eax 10h +
or eax ecx +
mov [ebp+var_8] eax +
pop edi  +
pop esi  +
mov eax [ebp+var_8] +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10755E5  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_10755E5  +
cmp dword ptr [eax+4] 28h +
jb loc_10755E5  +
mov eax [eax+8] +
cmp dword ptr [eax] 34753423h +
jnz loc_10755E5  +
push eax  +
call sub_1075384  +
jmp loc_10755E7  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
push edi  +
mov edi ecx +
jz loc_1075602  +
xor eax eax +
jmp loc_1075644  +
push esi  +
lea esi [edi+360h] +
test esi esi +
jz loc_1075641  +
cmp dword ptr [esi] 0 +
jnz loc_1075641  +
push esi  +
push offset stru_107564C  +
push 3  +
push 0  +
push offset stru_107565C  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1075641  +
push 1  +
lea ecx [edi+2E0h] +
call sub_10737B0  +
mov ecx [esi] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+18h]  +
mov eax [esi] +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+38Ch] 0 +
push esi  +
push edi  +
jnz loc_10756FD  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1068A54  +
push 17h  +
push 0  +
push offset stru_10689E0  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_10756FD  +
push 32h  +
lea eax [ebp+Buffer] +
push eax  +
push 356h  +
push hInstance  +
call ds:LoadStringW  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+Buffer] +
push edx  +
sub esp 10h +
mov edi esp +
mov esi offset dword_10689F0 +
movs   +
movs   +
push 0  +
push 0FFFFFFFCh  +
push dword ptr [ebx+14h]  +
movs   +
push eax  +
movs   +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10756F4  +
mov dword ptr [ebx+38Ch] 1 +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
call sub_102DB2F  +
test eax eax +
jz loc_10757F3  +
push esi  +
push edi  +
push 0Ah  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_AC] +
stos   +
mov eax [ebp+arg_0] +
xor esi esi +
inc esi  +
mov [ebp+var_A8] eax +
mov [ebp+var_AC] esi +
test ebx ebx +
jz loc_10757A1  +
push 40h  +
lea eax [ebp+sz] +
push eax  +
mov ecx ebx +
call sub_1033265  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+var_A4] +
push eax  +
call sub_1033491  +
lea eax [ebx+24h] +
push eax  +
call ds:__imp_PathFindFileNameW  +
push eax  +
lea eax [ebp+var_9C] +
push eax  +
call sub_1033491  +
mov eax [ebx+4] +
mov [ebp+var_90] eax +
jmp loc_10757C7  +
mov edi offset byte_1002CD0 +
push edi  +
lea eax [ebp+var_A4] +
push eax  +
call sub_1033491  +
push edi  +
lea eax [ebp+var_9C] +
push eax  +
call sub_1033491  +
and [ebp+var_90] 0 +
mov eax [ebp+arg_8] +
mov [ebp+var_88] eax +
lea eax [ebp+var_AC] +
push eax  +
push 5  +
push 1120h  +
push 0  +
mov [ebp+var_94] esi +
mov [ebp+var_8C] esi +
call WinSqmAddToStream  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
add eax 438h +
push eax  +
call sub_104781C  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 1  +
call sub_10755F0  +
and [ebp+var_4] 0 +
test eax eax +
jz loc_1075862  +
mov edx [eax] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx [ebp+arg_0] +
push dword ptr [ecx+1Ch]  +
push dword ptr [ecx]  +
push eax  +
call dword ptr [edx+14h]  +
test eax eax +
jl loc_1075862  +
mov eax [ebp+var_4] +
xor edx edx +
mov ecx 3E8h +
div  ecx +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp edi 5 +
ja loc_10758BE  +
cmp [ebp+arg_4] 0 +
jz loc_1075897  +
inc esi  +
cmp esi 5 +
jle loc_107589D  +
xor esi esi +
jmp loc_107589D  +
dec esi  +
jns loc_107589D  +
push 5  +
pop esi  +
cmp esi edi +
jz loc_10758BE  +
push [ebp+arg_4]  +
mov ecx ebx +
push esi  +
call sub_1074D01  +
cmp eax 0FFFFFFFFh +
jz loc_1075887  +
push eax  +
push esi  +
push edi  +
mov ecx ebx +
call sub_1074DAE  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov [ebp+var_8] ecx +
push edi  +
push [ebp+var_4]  +
mov ecx [ebp+var_8] +
call sub_1010881  +
mov ebx eax +
test ebx ebx +
jz loc_1075937  +
push 0FFFFFFFFh  +
push 2  +
mov ecx ebx +
call sub_1010EB3  +
mov edi eax +
jmp loc_1075934  +
push 1  +
push edi  +
mov ecx ebx +
call sub_1010F3D  +
mov esi eax +
push 2  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jz loc_1075934  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_1075928  +
mov ecx [ebp+var_8] +
push esi  +
call sub_1075828  +
jmp loc_107592E  +
mov eax [esi+434h] +
mov [esi+434h] eax +
dec edi  +
jns loc_10758FE  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 3 +
jl loc_10758DE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
push 0FFFFFFFFh  +
lea ebx [edi+29Ch] +
push 4  +
mov ecx ebx +
call sub_1010EB3  +
mov esi [ebp+wParam] +
mov [ebp+var_8] eax +
mov ecx esi +
test esi esi +
jl loc_107597B  +
cmp esi eax +
jl loc_10759B6  +
push 0FFFFFFFFh  +
lea ebx [edi+2ACh] +
push 4  +
mov ecx ebx +
call sub_1010EB3  +
mov ecx esi +
sub ecx [ebp+var_8] +
mov [ebp+wParam] eax +
js loc_107599A  +
cmp ecx eax +
jl loc_10759B6  +
push 0FFFFFFFFh  +
lea ebx [edi+2BCh] +
push 4  +
mov ecx ebx +
call sub_1010EB3  +
sub esi [ebp+wParam] +
mov ecx esi +
js loc_1075A26  +
cmp ecx eax +
jge loc_1075A26  +
xor esi esi +
push ecx  +
inc esi  +
mov ecx ebx +
mov [ebp+var_4] esi +
call sub_10735B5  +
mov [ebp+wParam] eax +
mov eax [ebp+arg_4] +
sub eax 0 +
jz loc_10759D5  +
dec eax  +
jz loc_1075A16  +
dec eax  +
jnz loc_1075A26  +
push esi  +
push [ebp+wParam]  +
mov ecx ebx +
call sub_1010F3D  +
mov esi eax +
push 2  +
mov ecx esi +
call sub_1010EFE  +
test eax eax +
jz loc_1075A0B  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_10759FF  +
push esi  +
mov ecx edi +
call sub_1075828  +
jmp loc_1075A05  +
mov eax [esi+434h] +
mov [esi+434h] eax +
cmp [ebp+arg_4] 0 +
mov eax [ebp+arg_8] +
mov [eax] esi +
jz loc_1075A26  +
push [ebp+wParam]  +
mov ecx ebx +
call sub_1046A53  +
mov ecx [ebp+arg_8] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push 0  +
push 0  +
push 0Bh  +
call sub_1075711  +
retn   +
***
and dword ptr [ecx+3DCh] 0 +
push esi  +
lea esi [ecx+3BCh] +
push 1  +
mov dword ptr [esi] 3 +
call sub_10752E6  +
and dword ptr [esi] 0 +
cmp dword_10B24CC 0 +
jz loc_1075ACC  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1075A7A  +
test al al +
jnz loc_1075ACC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1075ACC  +
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1075ACB  +
cmp edx edi +
jnz loc_1075ACB  +
push 0  +
push offset dword_1068910  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov ebx ecx +
call sub_102DB2F  +
test eax eax +
jz loc_1075B26  +
xor eax eax +
lea edi [ebp+var_420] +
stos   +
stos   +
xor eax eax +
lea ecx [ebp+var_420] +
push ecx  +
inc eax  +
push eax  +
push 1121h  +
push 0  +
mov [ebp+var_41C] 4 +
mov [ebp+var_420] eax +
call WinSqmAddToStream  +
mov eax [ebx+338h] +
test eax eax +
jz loc_1075CED  +
and [ebp+var_424] 0 +
push 40h  +
lea ecx [ebp+sz] +
push ecx  +
push eax  +
call ds:__imp_StringFromGUID2  +
test eax eax +
jl loc_1075CED  +
mov eax dword_10B2478 +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
jz loc_1075C72  +
mov edi offset dword_1075D00 +
push edi  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz loc_1075C72  +
mov eax [ebx+338h] +
lea ecx [ebp+var_41C] +
push ecx  +
push dword ptr [eax+14h]  +
mov ecx ebx +
push dword ptr [eax+10h]  +
push eax  +
call sub_1021C47  +
test eax eax +
jl loc_1075C72  +
mov ecx [ebp+var_41C] +
test ecx ecx +
jz loc_1075C72  +
push 1  +
push eax  +
call sub_1010F3D  +
test eax eax +
jz loc_1075C72  +
push esi  +
lea esi [eax+24h] +
cmp word ptr [esi] 0 +
jz loc_1075C71  +
push 104h  +
lea eax [ebp+var_28C] +
push eax  +
push esi  +
call ds:__imp_SHELL32_892  +
test eax eax +
jz loc_1075C4D  +
push 18Ch  +
lea eax [ebp+var_418] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+var_418] +
push eax  +
call sub_1012258  +
lea eax [ebp+var_28C] +
push eax  +
lea eax [ebp+var_394] +
push eax  +
call sub_1012258  +
mov eax [ebx+338h] +
mov eax [eax+14h] +
push 3  +
mov [ebp+var_30C] eax +
lea eax [ebp+var_418] +
push eax  +
push 1658h  +
push edi  +
mov [ebp+var_310] 1 +
call sub_1006870  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1075C52  +
sub eax edx +
sar eax 1 +
push 0  +
add eax eax +
push eax  +
push esi  +
call sub_107E851  +
mov [ebp+var_424] eax +
pop esi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104A0BC  +
push 1  +
push 0  +
push offset stru_104A0CC  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1075CED  +
push [ebp+var_424]  +
mov eax [ebx+338h] +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
lea eax [ebp+sz] +
push eax  +
push offset a?guidSHwndLuId  +
lea eax [ebp+var_28C] +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 1Ch +
test eax eax +
jl loc_1075CE1  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0  +
lea edx [ebp+var_28C] +
push edx  +
push offset aMicrosoft_noti  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
mov [ebp+var_4] ecx +
call sub_1022005  +
and [ebp+arg_0] 0 +
mov esi eax +
mov eax [ebx+0B18h] +
mov eax [eax] +
inc esi  +
mov [ebp+var_C] eax +
test eax eax +
jle loc_1075E18  +
push edi  +
push [ebp+arg_0]  +
push dword ptr [ebx+0B18h]  +
call ds:off_1002B68  +
mov edi eax +
test edi edi +
jz loc_1075E08  +
cmp edi ebx +
jz loc_1075E08  +
mov eax [ebx+0B1Ch] +
push 0  +
mov ecx edi +
mov [edi+0B1Ch] eax +
call sub_1010EFE  +
test eax eax +
jnz loc_1075E08  +
mov ecx edi +
call sub_1022C76  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call sub_1022005  +
test eax eax +
jl loc_1075E08  +
mov ecx [ebp+var_4] +
push 0  +
push 0FFFFFFFFh  +
push 1  +
push esi  +
push [ebp+var_8]  +
push eax  +
push edi  +
push [ebp+var_10]  +
call sub_1046A78  +
mov eax [ebp+var_C] +
dec eax  +
cmp [ebp+arg_0] eax +
jz loc_1075E08  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call sub_1022005  +
mov esi eax +
inc esi  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_C] +
jl loc_1075D8E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0FFFFFFECh  +
push hWnd  +
mov esi ecx +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_1075E4C  +
cmp [ebp+arg_4] 28h +
jz loc_1075E5C  +
cmp [ebp+arg_4] 25h +
jmp loc_1075E56  +
cmp [ebp+arg_4] 28h +
jz loc_1075E5C  +
cmp [ebp+arg_4] 27h +
jz loc_1075E5C  +
xor eax eax +
jmp loc_1075E5F  +
xor eax eax +
inc eax  +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_107586E  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov ecx [ebp+0Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_107594A  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
and dword ptr [esi] 0 +
cmp dword ptr [ebp+8] 25h +
jb loc_1075EBE  +
cmp dword ptr [ebp+8] 28h +
ja loc_1075EBE  +
push dword ptr [ebp+8]  +
add ecx 0FFFFFFF4h +
push 1  +
call sub_1075E23  +
mov dword ptr [esi] 1 +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
cmp dword_10B24CC ebx +
jz loc_1075F3E  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1075EEE  +
test al al +
jnz loc_1075F3E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1075F3E  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1075F3C  +
cmp edx ebx +
jnz loc_1075F3C  +
push offset dword_1076030  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor ebx ebx +
push ebx  +
mov ecx esi +
mov dword ptr [esi+3BCh] 2 +
call sub_10752E6  +
mov eax [esi+3A8h] +
mov eax [eax] +
mov edi ds:SendMessageW +
lea ecx [ebp+rc] +
push ecx  +
push dword ptr [esi+3ACh]  +
mov [ebp+hWndFrom] eax +
push 41Dh  +
push eax  +
call edi  +
test eax eax +
jz loc_1075FF4  +
push ebx  +
push ebx  +
push 456h  +
push [ebp+hWndFrom]  +
call edi  +
mov ecx eax +
movzx eax ax +
shr ecx 10h +
shr ecx 1 +
shr eax 1 +
neg ecx  +
push ecx  +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov ecx esi +
call sub_1075035  +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
push eax  +
mov eax [ebp+rc.right] +
sub eax [ebp+rc.left] +
push eax  +
push ebx  +
push dword ptr [esi+3D8h]  +
call ds:off_1076048  +
test eax eax +
jz loc_1075FF4  +
mov edi ds:GetDesktopWindow +
push 1  +
lea eax [ebp+Points] +
push eax  +
call edi  +
push eax  +
push [ebp+hWndFrom]  +
call ds:MapWindowPoints  +
push [ebp+Points.y]  +
push [ebp+Points.x]  +
call edi  +
push eax  +
call ds:off_1076044  +
push 1  +
call ds:off_1076040  +
cmp [esi+320h] ebx +
jnz loc_1076027  +
cmp [esi+2E8h] ebx +
jnz loc_1076027  +
cmp [esi+2ECh] ebx +
jz loc_1076027  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_102179D  +
push ebx  +
mov ecx esi +
call sub_1022B3B  +
push ebx  +
push 1  +
mov ecx esi +
call sub_10225FE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push edi  +
mov [ebp+var_8] ecx +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 2  +
xor edi edi +
pop edx  +
mov [ebp+var_C] edx +
cmp eax edi +
jz loc_107607E  +
cmp eax 1 +
jz loc_107607E  +
cmp eax edx +
jz loc_107607E  +
mov eax edx +
jmp loc_107623F  +
push esi  +
lea esi [ecx+4] +
push esi  +
mov [ebp+var_10] esi +
call sub_1024025  +
test eax eax +
jz loc_107623B  +
mov ecx [ebp+var_8] +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push edi  +
push esi  +
call sub_1021C47  +
mov esi eax +
cmp esi edi +
mov [ebp+wParam] esi +
jl loc_107623B  +
mov ecx [ebp+var_4] +
cmp ecx edi +
jz loc_107623B  +
push ebx  +
push 1  +
push esi  +
call sub_1010F3D  +
mov ebx eax +
cmp ebx edi +
jz loc_107623A  +
mov ecx ebx +
call sub_1074B58  +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp+var_C] eax +
cmp ecx edi +
jnz loc_1076118  +
cmp eax edi +
jz loc_107623A  +
mov ecx ebx +
mov dword ptr [ebx+0B1Ch] 4 +
call sub_1022C76  +
push 1  +
push edi  +
mov ecx ebx +
call sub_1022344  +
mov ecx [ebp+var_4] +
push 1  +
push 8  +
push esi  +
call sub_1023383  +
push edi  +
jmp loc_1076165  +
cmp ecx 1 +
jnz loc_107623A  +
cmp eax ecx +
jz loc_107623A  +
mov ecx [ebp+var_8] +
push [ebp+var_10]  +
add ecx 2E0h +
call sub_1033203  +
neg eax  +
sbb eax eax +
and eax 2 +
mov ecx ebx +
mov [ebx+0B1Ch] eax +
call sub_1022C76  +
push edi  +
push edi  +
mov ecx ebx +
call sub_1022344  +
mov ecx [ebp+var_4] +
push edi  +
push 8  +
push esi  +
call sub_1023383  +
push 1  +
mov ecx [ebp+var_4] +
push 4  +
push esi  +
call sub_1023383  +
push edi  +
lea eax [ebp+var_48] +
push eax  +
mov ecx offset unk_10B1460 +
call sub_1023E74  +
mov esi [ebp+var_10] +
push 4  +
pop ecx  +
mov edi offset dword_1024000 +
xor eax eax +
cmps   +
jnz loc_107619D  +
mov ecx [ebp+arg_0] +
cmp [ecx] eax +
setz al  +
mov [ebp+var_38] eax +
jmp loc_10761FB  +
mov eax [ebp+arg_0] +
push 4  +
pop ecx  +
add eax ecx +
mov edi offset dword_1029D90 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_10761C1  +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [ecx] eax +
setz al  +
mov [ebp+var_34] eax +
jmp loc_10761FB  +
push 4  +
pop ecx  +
mov edi offset dword_102DD68 +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_10761E0  +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [ecx] eax +
setz al  +
mov [ebp+var_30] eax +
jmp loc_10761FB  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset dword_1024010 +
xor eax eax +
cmps   +
jnz loc_10761FB  +
mov ecx [ebp+arg_0] +
cmp [ecx] eax +
setz al  +
mov [ebp+var_2C] eax +
xor edi edi +
push edi  +
lea eax [ebp+var_48] +
mov esi offset unk_10B1460 +
push eax  +
mov ecx esi +
call sub_106EC64  +
push edi  +
mov ecx ebx +
call sub_1010EFE  +
test eax eax +
jnz loc_107622B  +
mov ecx [ebp+var_8] +
push edi  +
push 0FFFFFFFFh  +
push [ebp+wParam]  +
push [ebp+var_4]  +
call sub_1022955  +
mov ecx [ebp+var_8] +
call sub_1046C5D  +
mov ecx esi +
call sub_106FDDB  +
pop ebx  +
mov eax [ebp+var_C] +
pop esi  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+330h] 0 +
push edi  +
jnz loc_10762B3  +
and [ebp+var_4] 0 +
push ebx  +
push [ebp+var_4]  +
mov ecx esi +
call sub_1010881  +
mov ebx eax +
push 0FFFFFFFFh  +
push 2  +
mov ecx ebx +
call sub_1010EB3  +
mov edi eax +
jmp loc_1076290  +
push 3  +
push 1  +
push 1  +
push edi  +
push offset dword_100D864  +
push ebx  +
mov ecx esi +
call sub_1047269  +
dec edi  +
jns loc_107627C  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 3 +
jb loc_1076261  +
lea edi [esi+338h] +
mov eax [edi] +
pop ebx  +
test eax eax +
jz loc_10762B3  +
push eax  +
call sub_1002BCA  +
and dword ptr [edi] 0 +
pop ecx  +
push 0  +
push offset loc_1074664  +
lea ecx [esi+33Ch] +
call sub_100831C  +
lea ecx [esi+2Ch] +
call sub_1078FB6  +
xor edi edi +
push edi  +
mov ecx esi +
call sub_1010881  +
mov ecx eax +
call sub_10732A3  +
inc edi  +
cmp edi 3 +
jb loc_10762CF  +
add esi 34Ch +
mov eax [esi] +
test eax eax +
jz loc_10762FA  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi] 0 +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
lea eax [esi+3B0h] +
lea ecx [esi+29Ch] +
mov [ebp+var_1] 0 +
cmp [eax] ecx +
jnz loc_1076334  +
mov dword ptr [ebx+0B1Ch] 2 +
mov [ebp+var_1] 1 +
lea ecx [esi+2ACh] +
cmp [eax] ecx +
jnz loc_1076363  +
lea eax [esi+2BCh] +
mov [ebp+var_1] 1 +
cmp [esi+3A8h] eax +
jnz loc_107635C  +
mov dword ptr [ebx+0B1Ch] 1 +
jmp loc_1076369  +
and dword ptr [ebx+0B1Ch] 0 +
cmp [ebp+var_1] 0 +
jz loc_10763BC  +
push edi  +
mov ecx ebx +
call sub_1022C76  +
lea edi [esi+338h] +
cmp dword ptr [edi] 0 +
jz loc_10763BB  +
push 1  +
mov ecx ebx +
call sub_1010EFE  +
test eax eax +
jz loc_10763BB  +
mov ecx [edi] +
push ebx  +
call sub_1075807  +
test al al +
jz loc_10763BB  +
push 0FFFFh  +
push 5  +
push 403h  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
push 0  +
push 1  +
push 404h  +
push ebx  +
mov ecx esi +
call sub_1047969  +
pop edi  +
mov al [ebp+var_1] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov esi ecx +
call sub_10468D3  +
cmp [esi+320h] edi +
jnz loc_10763EB  +
mov dword_10B1108 edi +
push [ebp+arg_0]  +
xor eax eax +
cmp [esi+320h] edi +
lea ecx [esi+2Ch] +
setz al  +
push eax  +
call sub_1079C31  +
cmp [esi+320h] edi +
jz loc_1076417  +
push 2  +
push dword ptr [esi+10h]  +
call ds:KillTimer  +
jmp loc_1076446  +
push edi  +
push 190h  +
push 2  +
push dword ptr [esi+10h]  +
call ds:SetTimer  +
lea ebx [esi+2BCh] +
push edi  +
mov ecx ebx +
call sub_1073508  +
cmp eax edi +
jl loc_1076446  +
push edi  +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
mov ecx esi +
call sub_1022955  +
mov eax [esi+338h] +
xor ebx ebx +
inc ebx  +
cmp eax edi +
jz loc_10764B4  +
lea ecx [ebp+arg_0] +
push ecx  +
push dword ptr [eax+14h]  +
mov ecx esi +
push dword ptr [eax+10h]  +
push eax  +
call sub_1021C47  +
mov [ebp+wParam] eax +
cmp [esi+320h] edi +
jz loc_107647B  +
lea eax [esi+2ACh] +
cmp [ebp+arg_0] eax +
jz loc_1076484  +
cmp dword ptr [esi+340h] 2 +
jnz loc_10764B4  +
push 0FFFFh  +
push 5  +
push 403h  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
mov ecx [ebp+arg_0] +
push edi  +
push ebx  +
push 404h  +
push ebx  +
push [ebp+wParam]  +
call sub_1010F3D  +
push eax  +
mov ecx esi +
call sub_1047969  +
push ebx  +
mov ecx esi +
call sub_10468D3  +
xor eax eax +
cmp [esi+320h] edi +
push edi  +
setz al  +
mov ecx esi +
push eax  +
call sub_102179D  +
push ebx  +
mov ecx esi +
call sub_1022B3B  +
mov [esi+3E0h] edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
mov ebx [edi+10h] +
mov dword ptr [ebp-4] 80070057h +
cmp ebx 8000h +
jnz loc_1076525  +
lea eax [edi+18h] +
push eax  +
lea ecx [esi+2D8h] +
call sub_1033203  +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
and ebx 2 +
cmp dword ptr [edi+0Ch] 0 +
jz loc_107666C  +
lea edx [ebp+8] +
push edx  +
push dword ptr [edi+14h]  +
lea eax [edi+18h] +
push dword ptr [edi+0Ch]  +
lea ecx [esi-8] +
push eax  +
mov [ebp-0Ch] eax +
call sub_1021C47  +
cmp eax 0FFFFFFFFh +
jz loc_10766AB  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_10766AB  +
push 1  +
push eax  +
call sub_1010F3D  +
mov [ebp+0Ch] eax +
test eax eax +
jz loc_10766AB  +
lea edx [eax+0B1Ch] +
mov ecx [edx] +
mov [ebp-8] ecx +
cmp ecx ebx +
jz loc_10766AB  +
push 2  +
mov ecx eax +
mov [edx] ebx +
call sub_1010EFE  +
test eax eax +
jz loc_107659B  +
mov eax [ebp+0Ch] +
and dword ptr [eax+434h] 0 +
push dword ptr [ebp-8]  +
lea ebx [esi-8] +
push 6  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call sub_1022473  +
mov ecx [ebp+0Ch] +
mov [ebp-8] eax +
call sub_1047426  +
test eax eax +
jz loc_10765C6  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call sub_1075D59  +
cmp dword ptr [ebp-8] 0 +
jz loc_1076623  +
mov ecx ebx +
call sub_1046C5D  +
lea ebx [esi+330h] +
cmp dword ptr [ebx] 0 +
jz loc_1076623  +
mov ecx [ebp+0Ch] +
push 1  +
call sub_1010EFE  +
test eax eax +
jz loc_1076623  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebx] +
call sub_1075807  +
test al al +
jz loc_1076623  +
push 0FFFFh  +
push 5  +
push 403h  +
push dword ptr [esi+18h]  +
call ds:SendMessageW  +
push 0  +
push 1  +
push 404h  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-8] +
call sub_1047969  +
cmp dword ptr [edi+10h] 8000h +
jnz loc_1076660  +
lea eax [ebp+8] +
push eax  +
push dword ptr [edi+14h]  +
push dword ptr [edi+0Ch]  +
lea edi [esi-8] +
push dword ptr [ebp-0Ch]  +
mov ecx edi +
call sub_1021C47  +
cmp eax 0FFFFFFFFh +
jz loc_1076660  +
cmp dword ptr [ebp+8] 0 +
jz loc_1076660  +
push 0FFFFFFFFh  +
push eax  +
push 80000000h  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_10220C7  +
mov ecx offset unk_10B1460 +
call sub_106FDDB  +
jmp loc_10766A7  +
mov eax [esi+2B0h] +
mov ecx [esi+2A0h] +
push eax  +
push ecx  +
push ebx  +
push edi  +
lea ecx [esi+2D8h] +
call sub_10739F4  +
cmp eax 0FFFFFFFFh +
jz loc_10766AB  +
cmp dword ptr [edi+10h] 8000h +
jnz loc_10766A7  +
push eax  +
push 0FFFFFFFFh  +
push 80000000h  +
push 0  +
lea ecx [esi-8] +
call sub_10220C7  +
and dword ptr [ebp-4] 0 +
push 0  +
lea ecx [esi+294h] +
call nullsub_2  +
push 0  +
lea ecx [esi+2A4h] +
call nullsub_2  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
xor edi edi +
cmp [ebx+330h] edi +
jnz loc_107679E  +
cmp [ebx+338h] edi +
jz loc_107679E  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx+20h]  +
call ds:GetWindowRect  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx+10h]  +
push edi  +
call ds:MapWindowPoints  +
push [ebp+pt.y]  +
mov eax [ebp+pt.x] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_107679E  +
mov eax [ebx+338h] +
push dword ptr [eax+10h]  +
call sub_107A759  +
xor eax eax +
cmp [ebp+arg_8] edi +
push 0FFFFh  +
setnz al  +
push 5  +
push 403h  +
push dword ptr [ebx+20h]  +
mov [ebx+388h] eax +
call ds:SendMessageW  +
mov eax [ebp+arg_8] +
mov esi [ebx+338h] +
neg eax  +
sbb eax eax +
add eax 405h +
push eax  +
push edi  +
push edi  +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
cmp [ebp+arg_8] 0 +
jnz loc_107679E  +
push 21Dh  +
push offset dword_1068870  +
call sub_1034B2D  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push [ebp+var_4]  +
mov ecx ebx +
call sub_1010881  +
mov edi eax +
test edi edi +
jz loc_1076803  +
push 0FFFFFFFFh  +
push 2  +
mov ecx edi +
call sub_1010EB3  +
mov esi eax +
jmp loc_10767F9  +
push 1  +
push esi  +
call sub_1010F3D  +
test eax eax +
jz loc_10767F9  +
mov ecx [ebp+arg_0] +
neg ecx  +
sbb ecx ecx +
push 0  +
add ecx 7 +
push ecx  +
push eax  +
mov ecx ebx +
call sub_1022473  +
dec esi  +
mov ecx edi +
jns loc_10767D8  +
call sub_1073565  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 3 +
jl loc_10767B9  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_1074E4C  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
cmp edi [esi+2E4h] +
jz loc_107685C  +
push edi  +
lea ecx [esi+2D8h] +
call sub_10738B5  +
add esi 0FFFFFFF8h +
mov ecx esi +
call sub_10758CD  +
push edi  +
mov ecx esi +
call sub_10767AA  +
mov ecx esi +
call sub_1046C5D  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+pt.x] eax +
mov eax [ebp+arg_4] +
push esi  +
mov [ebp+pt.y] eax +
mov ebx ecx +
mov eax [ebx+3A8h] +
push edi  +
mov edi [eax] +
xor esi esi +
inc esi  +
push esi  +
lea eax [ebp+pt] +
push eax  +
call ds:GetDesktopWindow  +
push eax  +
push edi  +
call ds:MapWindowPoints  +
push [ebp+pt.y]  +
push [ebp+pt.x]  +
call ds:off_1076BA0  +
push dword ptr [ebx+14h]  +
xor ecx ecx +
xor eax eax +
mov [ebp+lParam] ecx +
lea edi [ebp+var_24] +
mov [ebp+var_4] ecx +
mov [ebp+var_10] ecx +
stos   +
mov [ebx+3DCh] ecx +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1076905  +
lea eax [ebx+2ACh] +
cmp [ebx+3A8h] eax +
jz loc_1076905  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [ebx+14h]  +
call ds:GetWindowRect  +
push [ebp+pt.y]  +
lea eax [ebp+Points] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_1076905  +
mov [ebp+var_4] esi +
mov [ebp+var_10] esi +
and [ebp+var_C] 0 +
cmp [ebp+var_4] 0 +
jnz loc_1076A9E  +
cmp [ebp+var_C] 3 +
jge loc_1076A92  +
push [ebp+var_C]  +
mov ecx ebx +
call sub_1010881  +
mov edi eax +
lea esi [ebx+2ACh] +
mov [ebp+var_18] edi +
cmp edi esi +
jz loc_1076944  +
lea eax [ebx+29Ch] +
cmp edi eax +
jnz loc_1076A82  +
push dword ptr [edi]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1076A82  +
mov eax [ebp+pt.x] +
mov ecx [ebp+pt.y] +
xor edx edx +
mov [ebp-30h] eax +
mov [ebp-2Ch] ecx +
mov [ebp+var_8] edx +
cmp edi esi +
jnz loc_1076975  +
push ecx  +
push eax  +
lea ecx [ebx+2Ch] +
call sub_1074B76  +
jmp loc_10769B7  +
lea eax [ebx+29Ch] +
cmp edi eax +
jnz loc_10769CD  +
cmp [ebx+2E8h] edx +
jnz loc_10769BB  +
cmp [ebx+2ECh] edx +
jz loc_10769BB  +
cmp edi eax +
jnz loc_10769CD  +
mov eax hWnd +
cmp eax edx +
jz loc_10769CD  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
call ds:GetWindowRect  +
push [ebp+pt.y]  +
lea eax [ebp+Rect] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_10769CD  +
lea eax [ebp-30h] +
push eax  +
push dword ptr [edi]  +
mov [ebp+var_8] 1 +
call sub_1074973  +
push 8  +
xor eax eax +
pop ecx  +
lea edi [ebp+pt] +
lea esi [ebp-30h] +
cmps   +
mov [ebp+var_14] eax +
jz loc_10769E7  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
mov [ebp+var_14] eax +
mov esi [ebp+var_18] +
mov eax [esi] +
push 1  +
lea ecx [ebp-30h] +
push ecx  +
push eax  +
call ds:GetDesktopWindow  +
push eax  +
call ds:MapWindowPoints  +
mov eax [esi] +
mov edi ds:SendMessageW +
lea ecx [ebp-30h] +
push ecx  +
push 0  +
push 445h  +
push eax  +
call edi  +
test eax eax +
jl loc_1076A60  +
lea eax [ebp+lParam] +
push eax  +
lea eax [ebp-30h] +
push eax  +
push 451h  +
push dword ptr [esi]  +
mov [ebp+var_4] 1 +
call edi  +
mov eax [ebp+var_24] +
push 0  +
and eax 1 +
push eax  +
push [ebp+lParam]  +
mov ecx ebx +
push esi  +
call sub_107520D  +
cmp esi [ebx+3A8h] +
jnz loc_1076A82  +
cmp [ebp+var_14] 0 +
jnz loc_1076A82  +
mov dword ptr [ebx+3DCh] 1 +
jmp loc_1076A82  +
cmp [ebp+var_8] 0 +
jz loc_1076A82  +
xor edi edi +
inc edi  +
push edi  +
mov ecx esi +
mov [ebp+var_4] edi +
call sub_1073508  +
lea ecx [ebp+lParam] +
push ecx  +
push edi  +
push eax  +
push esi  +
mov ecx ebx +
call sub_107520D  +
inc [ebp+var_C]  +
xor esi esi +
inc esi  +
cmp [ebp+var_4] 0 +
jz loc_1076913  +
cmp [ebp+var_4] 0 +
jnz loc_1076A9E  +
mov [ebp+var_10] esi +
mov [ebp+var_4] esi +
cmp [ebp+var_10] 0 +
jz loc_1076B1B  +
lea edi [ebx+2ACh] +
push esi  +
mov ecx edi +
call sub_1073508  +
mov [ebp+var_14] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1076AD0  +
and [ebp+var_14] 0 +
mov ecx edi +
call sub_1073616  +
test eax eax +
jnz loc_1076AD0  +
mov ecx edi +
call sub_1073309  +
lea eax [ebp+lParam] +
mov ecx ebx +
push eax  +
cmp [ebx+3A8h] edi +
jnz loc_1076AE8  +
push 0  +
push dword ptr [ebx+3ACh]  +
jmp loc_1076AEC  +
push esi  +
push [ebp+var_14]  +
push edi  +
call sub_107520D  +
cmp dword ptr [ebx+320h] 0 +
jnz loc_1076B1B  +
lea eax [ebx+2BCh] +
cmp [ebx+3A8h] eax +
jz loc_1076B1B  +
cmp dword ptr [ebx+340h] 0 +
jnz loc_1076B1B  +
push 0  +
mov ecx ebx +
call sub_10763CA  +
mov eax [ebx+3A8h] +
lea ecx [ebx+2BCh] +
cmp eax ecx +
jnz loc_1076B53  +
lea ecx [ebx+2ACh] +
cmp [ebx+3B0h] ecx +
jz loc_1076B53  +
lea ecx [ebp+lParam] +
push ecx  +
xor esi esi +
push esi  +
push dword ptr [ebx+3ACh]  +
mov ecx ebx +
push eax  +
mov [ebp+var_4] esi +
call sub_107520D  +
jmp loc_1076B55  +
xor esi esi +
cmp [ebp+var_4] esi +
jz loc_1076B96  +
mov eax [ebx+3B0h] +
push dword ptr [eax]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_1076B96  +
mov ecx [ebx+3B0h] +
call sub_1073616  +
test eax eax +
jz loc_1076B7E  +
mov [ebp+var_24] esi +
lea eax [ebp+lParam] +
push eax  +
mov eax [ebx+3B0h] +
push esi  +
push 450h  +
push dword ptr [eax]  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+2ACh] +
mov ecx edi +
call sub_1073616  +
test eax eax +
jz loc_1076BE5  +
mov ecx edi +
call sub_1073766  +
cmp [esi+3B0h] edi +
jnz loc_1076BE5  +
lea eax [esi+3B4h] +
mov ecx [eax] +
test ecx ecx +
jle loc_1076BE5  +
dec ecx  +
mov [eax] ecx +
lea ebx [esi+3B0h] +
mov eax [ebx] +
mov eax [eax] +
lea edi [esi+3D8h] +
mov [ebp+hWnd] eax +
mov eax [edi] +
test eax eax +
jz loc_1076C0E  +
push eax  +
call ds:off_1035224  +
and dword ptr [edi] 0 +
call ds:off_1076E04  +
and [ebp+var_4] 0 +
cmp dword ptr [esi+3BCh] 2 +
mov [ebp+var_8] 1 +
jnz loc_1076D2B  +
lea edi [esi+3A8h] +
push edi  +
mov ecx ebx +
mov dword ptr [esi+3BCh] 4 +
call sub_1074BBF  +
test al al +
jz loc_1076D12  +
cmp dword ptr [esi+3B8h] 0 +
jz loc_1076D12  +
mov eax [esi+3ACh] +
mov ecx [edi] +
push 1  +
push eax  +
call sub_1010F3D  +
cmp [esi+3B8h] eax +
jnz loc_1076D12  +
mov eax [esi+3ACh] +
mov ecx [edi] +
and [ebp+var_8] 0 +
push 1  +
push eax  +
call sub_1010F3D  +
mov ebx eax +
mov ecx [ebx+0B1Ch] +
mov [ebp+var_C] ecx +
mov ecx [edi] +
xor al al +
cmp ecx [esi+3B0h] +
jz loc_1076CA2  +
push ebx  +
mov ecx esi +
call sub_1076305  +
mov edx [esi+3B0h] +
lea ecx [esi+2ACh] +
cmp edx ecx +
jnz loc_1076CC4  +
cmp dword ptr [esi+2E8h] 0 +
jnz loc_1076D08  +
cmp dword ptr [esi+2ECh] 0 +
jz loc_1076D08  +
push [ebp+var_C]  +
movzx eax al +
push 0  +
push eax  +
push dword ptr [esi+3B4h]  +
mov ecx esi +
push edx  +
push dword ptr [esi+3ACh]  +
push ebx  +
push dword ptr [edi]  +
call sub_1046A78  +
mov ecx ebx +
call sub_1047426  +
test eax eax +
jz loc_1076CF7  +
push ebx  +
mov ecx esi +
call sub_1075D59  +
mov eax [edi] +
cmp eax [esi+3B0h] +
jz loc_1076D08  +
mov [ebp+var_4] 1 +
mov ecx offset unk_10B1460 +
call sub_106FDDB  +
and dword ptr [esi+3BCh] 0 +
cmp dword ptr [esi+320h] 0 +
jz loc_1076D2B  +
push dword ptr [esi+2Ch]  +
call ds:SetFocus  +
and dword ptr [esi+3BCh] 0 +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
or [ebp+lParam] 0FFFFFFFFh +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 450h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
xor ebx ebx +
cmp [esi+320h] ebx +
jz loc_1076D7D  +
push 0FFFFFFFFh  +
push 3  +
lea ecx [esi+2ACh] +
call sub_1010EB3  +
test eax eax +
jnz loc_1076D75  +
push ebx  +
mov ecx esi +
call sub_10763CA  +
cmp [esi+320h] ebx +
jnz loc_1076D84  +
mov [ebp+var_4] 1 +
cmp [ebp+var_4] ebx +
jz loc_1076D90  +
mov ecx esi +
call sub_1046C5D  +
cmp dword_10B24CC ebx +
jz loc_1076DFC  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1076DA5  +
test al al +
jnz loc_1076DFC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1076DFC  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1076DFC  +
cmp edx edi +
jnz loc_1076DFC  +
xor eax eax +
cmp [ebp+var_8] ebx +
setz al  +
push eax  +
push offset dword_1068910  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
xor edx edx +
lea eax [ecx+3BCh] +
cmp [eax] edx +
push esi  +
setnz dl  +
mov esi edx +
test esi esi +
jz loc_1076E2C  +
mov dword ptr [eax] 3 +
call sub_1076BA9  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+hWndFrom]  +
mov esi ecx +
call sub_1010957  +
cmp [ebp+wParam] 5DEh +
mov edi eax +
jnz loc_1076FAB  +
cmp [ebp+arg_C] 6 +
jz loc_10770DA  +
push 0Ah  +
push dword ptr [esi+14h]  +
xor ebx ebx +
mov [esi+334h] ebx +
call ds:KillTimer  +
mov edi 80000000h +
cmp [esi+320h] ebx +
jnz loc_1076FA3  +
push 0FFFFFFFFh  +
push 2  +
lea ecx [esi+2ACh] +
call sub_1010EB3  +
cmp eax 5 +
jnz loc_1076FA3  +
mov [ebp+hWndFrom] 1 +
cmp dword_10B24CC ebx +
jz loc_1076F03  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1076EB8  +
cmp al bl +
jnz loc_1076F03  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1076F03  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx edi +
cmp ecx eax +
jnz loc_1076F03  +
cmp edx dword_10B24C4 +
jnz loc_1076F03  +
push offset dword_10770E8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor eax eax +
cmp [esi+320h] ebx +
setnz al  +
add eax 5 +
push eax  +
push ebx  +
push 0Ah  +
call sub_1075711  +
push 1  +
mov ecx esi +
call sub_10763CA  +
cmp [ebp+hWndFrom] ebx +
jz loc_10770DA  +
cmp dword_10B24CC ebx +
jz loc_10770DA  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1076F49  +
cmp al bl +
jnz loc_10770DA  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_10770DA  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_10770DA  +
cmp edx esi +
jnz loc_10770DA  +
push offset dword_10770F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
jmp loc_10770DA  +
mov [ebp+hWndFrom] ebx +
jmp loc_1076F03  +
xor ebx ebx +
cmp [ebp+arg_C] ebx +
jnz loc_10770DA  +
lea eax [esi+3DCh] +
cmp [eax] ebx +
jz loc_1076FC7  +
mov [eax] ebx +
jmp loc_10770DA  +
push 0Ah  +
push dword ptr [esi+14h]  +
mov [esi+334h] ebx +
call ds:KillTimer  +
push ebx  +
mov ecx esi +
call sub_1074787  +
push ebx  +
push [ebp+wParam]  +
mov ecx edi +
call sub_1010F3D  +
mov edi eax +
mov [ebp+arg_C] edi +
cmp edi ebx +
jz loc_10770DA  +
push ebx  +
push [ebp+wParam]  +
push 419h  +
push [ebp+hWndFrom]  +
call ds:SendMessageW  +
mov [ebp+wParam] eax +
cmp [esi+318h] ebx +
jz loc_1077026  +
cmp dword ptr [edi+10h] 4 +
jnb loc_1077026  +
push eax  +
push [ebp+hWndFrom]  +
mov ecx esi +
call sub_107472A  +
push dword ptr [edi]  +
call sub_107A759  +
mov eax [edi+10h] +
cmp eax 3 +
jb loc_1077087  +
xor edi edi +
cmp eax 4 +
jb loc_1077047  +
mov edi [esi+318h] +
neg edi  +
sbb edi edi +
dec edi  +
push [ebp+wParam]  +
xor eax eax +
cmp [esi+318h] ebx +
push [ebp+hWndFrom]  +
setnz al  +
push edi  +
mov ecx esi +
add eax 400h +
push eax  +
push [ebp+arg_C]  +
call sub_104785B  +
cmp [esi+318h] ebx +
jz loc_10770DA  +
cmp [esi+31Ch] ebx +
jz loc_10770DA  +
push [ebp+wParam]  +
push [ebp+hWndFrom]  +
push edi  +
push 401h  +
jmp loc_10770D0  +
cmp [esi+318h] ebx +
jz loc_10770DA  +
push ebx  +
push ebx  +
push ebx  +
push 201h  +
push edi  +
mov ecx esi +
call sub_104785B  +
push ebx  +
push ebx  +
push ebx  +
mov edi 202h +
push edi  +
push [ebp+arg_C]  +
mov ecx esi +
call sub_104785B  +
cmp [esi+31Ch] ebx +
jz loc_10770DA  +
push ebx  +
push ebx  +
push ebx  +
push 203h  +
push [ebp+arg_C]  +
mov ecx esi +
call sub_104785B  +
push ebx  +
push ebx  +
push ebx  +
push edi  +
push [ebp+arg_C]  +
mov ecx esi +
call sub_104785B  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+18h] 0 +
jz loc_1077174  +
call ds:GetFocus  +
cmp [esi+18h] eax +
jnz loc_1077174  +
mov eax [ebp+arg_0] +
cmp eax 1Bh +
jz loc_1077146  +
cmp eax 24h +
jbe loc_1077174  +
cmp eax 28h +
ja loc_1077174  +
push eax  +
push 5  +
mov ecx esi +
call sub_1075E23  +
xor eax eax +
jmp loc_1077177  +
mov ecx esi +
call sub_1076E0D  +
test eax eax +
jnz loc_1077142  +
cmp [esi+320h] eax +
jz loc_1077174  +
push eax  +
mov ecx esi +
call sub_10763CA  +
xor eax eax +
inc eax  +
push eax  +
mov ecx esi +
mov [esi+334h] eax +
call sub_1074787  +
jmp loc_1077142  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+314h] 0 +
jz loc_10771A3  +
lea ecx [esi-0Ch] +
call sub_1076E0D  +
test eax eax +
jnz loc_10771A3  +
mov eax [esi] +
mov ecx esi +
pop esi  +
jmp dword ptr [eax+4]  +
***
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
add ecx 0FFFFFFF4h +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1076E35  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
push [ebp+hWnd]  +
mov ebx ecx +
call sub_1010957  +
push [ebp+lParam]  +
mov esi eax +
mov [ebp+var_4] esi +
call sub_10748F6  +
push [ebp+lParam]  +
mov [ebp+var_8] eax +
or edi 0FFFFFFFFh +
call sub_1074938  +
test eax eax +
jz loc_107721A  +
push 0  +
push dword ptr [ebx+358h]  +
push 419h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov edi eax +
movsx eax [ebp+arg_C] +
mov [ebp+Points.x] eax +
mov eax dword ptr [ebp+arg_C] +
shr eax 10h +
cwde   +
mov [ebp+Points.y] eax +
cmp edi 0FFFFFFFFh +
jnz loc_107725B  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push 445h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp [ebp+var_8] 0 +
mov edi eax +
jz loc_107725B  +
push edi  +
push [ebp+hWnd]  +
call sub_107A782  +
mov [ebx+358h] eax +
mov eax [ebx+3BCh] +
cmp eax 3 +
jz loc_10772D6  +
mov ecx [ebp+lParam] +
sub ecx 200h +
jz loc_1077402  +
dec ecx  +
jz loc_107737B  +
dec ecx  +
jz loc_1077366  +
dec ecx  +
dec ecx  +
jz loc_10772B9  +
sub ecx 9Fh +
jnz loc_10772D6  +
dec eax  +
jz loc_1077433  +
dec eax  +
jnz loc_10772D6  +
lea edi [ebp+var_8] +
stos   +
or [ebp+var_C] 0FFFFFFFFh +
lea eax [ebp+var_C] +
push eax  +
push ecx  +
push 450h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
jmp loc_1077440  +
cmp eax 2 +
jnz loc_10772CA  +
mov ecx ebx +
call sub_1076E0D  +
jmp loc_1077440  +
cmp eax 1 +
jnz loc_10772D6  +
mov ecx ebx +
call sub_1075A46  +
push 1  +
push edi  +
mov ecx esi +
call sub_1010F3D  +
mov esi eax +
mov [ebp+arg_8] esi +
test esi esi +
jz loc_107745C  +
push dword ptr [esi]  +
call ds:IsWindow  +
test eax eax +
jz loc_107757A  +
xor edi edi +
mov dword ptr [ebp+arg_C] edi +
cmp [ebp+var_8] edi +
jz loc_10774DB  +
push dword ptr [esi]  +
call sub_107A759  +
mov ecx [ebx+338h] +
cmp ecx edi +
jz loc_10774BC  +
push esi  +
call sub_1075807  +
test al al +
jz loc_1077465  +
cmp dword ptr [ebx+388h] 7 +
jz loc_1077465  +
xor eax eax +
inc eax  +
cmp [ebp+lParam] 204h +
mov dword ptr [ebp+arg_C] eax +
jz loc_107746A  +
cmp [ebp+lParam] 206h +
jz loc_107746A  +
mov [ebx+388h] edi +
jmp loc_1077470  +
cmp eax 2 +
jnz loc_10772CA  +
mov ecx ebx +
call sub_1076BA9  +
jmp loc_1077440  +
test edi edi +
jl loc_10772D6  +
lea eax [ebx+3A8h] +
mov [eax] esi +
mov [ebx+3ACh] edi +
mov eax [eax+4] +
mov ecx esi +
mov [ebx+3B0h] ecx +
mov ecx [ebp+Points.x] +
mov [ebx+3B4h] eax +
xor eax eax +
inc eax  +
mov [ebx+3C0h] ecx +
mov ecx [ebp+Points.y] +
push eax  +
mov [ebx+3C4h] ecx +
push edi  +
mov ecx esi +
mov [ebx+3BCh] eax +
call sub_1010F3D  +
mov [ebx+3B8h] eax +
mov eax [ebp+Points.y] +
lea ecx [eax+1] +
push ecx  +
mov ecx [ebp+Points.x] +
lea edx [ecx+1] +
push edx  +
push eax  +
push ecx  +
lea esi [ebx+3C8h] +
push esi  +
call ds:SetRect  +
mov edi ds:GetSystemMetrics +
push 45h  +
call edi  +
push eax  +
push 44h  +
call edi  +
push eax  +
push esi  +
call ds:InflateRect  +
jmp loc_1077440  +
dec eax  +
jz loc_107741C  +
dec eax  +
jnz loc_10772D6  +
push esi  +
push [ebp+Points.y]  +
mov ecx ebx +
push [ebp+Points.x]  +
call sub_1076869  +
jmp loc_1077440  +
push [ebp+Points.y]  +
lea eax [ebx+3C8h] +
push [ebp+Points.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_1077440  +
push [ebp+Points.y]  +
mov ecx ebx +
push [ebp+Points.x]  +
call sub_1075ECA  +
cmp dword ptr [ebx+3BCh] 1 +
jnz loc_107745C  +
push dword ptr [ebp+arg_C]  +
mov ecx ebx +
push [ebp+arg_8]  +
push [ebp+lParam]  +
push [ebp+hWnd]  +
call sub_1075297  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
mov dword ptr [ebp+arg_C] edi +
jmp loc_10774BC  +
mov [ebx+388h] eax +
push 0FFFFh  +
push 5  +
push 403h  +
push dword ptr [ebx+20h]  +
call ds:SendMessageW  +
mov esi [ebx+338h] +
push 405h  +
push edi  +
push edi  +
push dword ptr [esi+14h]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
call sub_10476EC  +
push 21Dh  +
push offset dword_1068870  +
call sub_1034B2D  +
mov esi [ebp+arg_8] +
xor edi edi +
push edi  +
push 3  +
push esi  +
mov ecx ebx +
call sub_1022473  +
push edi  +
mov ecx ebx +
mov dword ptr [ebx+344h] 1 +
call sub_10468D3  +
jmp loc_1077521  +
cmp [ebp+lParam] 202h +
jnz loc_10774FF  +
xor ecx ecx +
lea eax [ebx+29Ch] +
cmp [ebp+var_4] eax +
push 1  +
setnz cl  +
push esi  +
mov eax ecx +
push eax  +
call sub_1075711  +
jmp loc_1077538  +
cmp [ebp+lParam] 205h +
jnz loc_1077526  +
xor ecx ecx +
lea eax [ebx+29Ch] +
cmp [ebp+var_4] eax +
push 2  +
setnz cl  +
push esi  +
mov eax ecx +
push eax  +
call sub_1075711  +
cmp dword ptr [ebp+arg_C] edi +
jnz loc_1077592  +
cmp [ebp+lParam] 202h +
jz loc_1077538  +
cmp [ebp+lParam] 205h +
jnz loc_107754D  +
push edi  +
push edi  +
push 447h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp eax 0FFFFFFFFh +
jz loc_1077592  +
push 1  +
lea eax [ebp+Points] +
push eax  +
push edi  +
push [ebp+hWnd]  +
call ds:MapWindowPoints  +
movzx eax word ptr [ebp+Points.y] +
movzx ecx word ptr [ebp+Points.x] +
push edi  +
push edi  +
shl eax 10h +
or eax ecx +
push eax  +
push [ebp+lParam]  +
mov ecx ebx +
push esi  +
call sub_104785B  +
jmp loc_1077592  +
push 4  +
push 1  +
push 0  +
push edi  +
add esi 438h +
push esi  +
push [ebp+var_4]  +
mov ecx ebx +
call sub_1047269  +
xor eax eax +
inc eax  +
jmp loc_107745E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi] +
cmp ax 5Ch +
jnz loc_10775B5  +
xor eax eax +
jmp loc_10775CB  +
push eax  +
call ds:__imp_iswalpha  +
pop ecx  +
test eax eax +
jz loc_10775C8  +
cmp word ptr [esi+2] 3Ah +
jz loc_10775B1  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_1077622  +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
movzx ecx word ptr [esi] +
inc esi  +
lea eax [ecx-41h] +
inc esi  +
cmp eax 19h +
ja loc_10775F8  +
add ecx 20h +
movzx eax word ptr [edx] +
inc edx  +
lea edi [eax-41h] +
inc edx  +
cmp edi 19h +
ja loc_1077608  +
add eax 20h +
dec [ebp+arg_8]  +
jz loc_1077615  +
test ecx ecx +
jz loc_1077615  +
cmp ecx eax +
jz loc_10775E8  +
xor edx edx +
cmp ecx eax +
setz dl  +
pop edi  +
pop esi  +
mov eax edx +
jmp loc_1077625  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
jmp loc_1077640  +
dec eax  +
dec eax  +
cmp word ptr [eax] 5Ch +
jz loc_1077647  +
cmp [ebp+arg_0] eax +
jb loc_1077638  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp ax 30h +
jb loc_1077664  +
cmp ax 39h +
jbe loc_1077679  +
cmp ax 41h +
jb loc_1077670  +
cmp ax 46h +
jbe loc_1077679  +
add eax 0FFFFFF9Fh +
cmp ax 5 +
ja loc_107767E  +
xor eax eax +
inc eax  +
jmp loc_1077680  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi offset a00000000000000 +
xor ebx ebx +
sub edi esi +
movzx ecx word ptr [esi] +
movzx eax word ptr [edi+esi] +
cmp cx ax +
jz loc_10776B9  +
cmp ax 30h +
jnz loc_10776CB  +
push ecx  +
call sub_1077650  +
test eax eax +
jz loc_10776CB  +
inc ebx  +
inc esi  +
inc esi  +
cmp ebx 26h +
jb loc_107769D  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_10776C4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 0Ah  +
push offset a?Volume  +
push esi  +
call sub_10775D5  +
test eax eax +
jz loc_107774F  +
add esi 14h +
push esi  +
call sub_1077689  +
test eax eax +
jz loc_107774F  +
xor eax eax +
inc eax  +
jmp loc_1077751  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
lea eax [ebp+Translated] +
push eax  +
push [ebp+nIDDlgItem]  +
push [ebp+wParam]  +
call ds:GetDlgItemInt  +
mov ecx [ebp+arg_8] +
cmp eax ecx +
mov edx eax +
jg loc_1077796  +
mov edx ecx +
cmp edx [ebp+uValue] +
jge loc_10777A3  +
cmp eax ecx +
jle loc_10777A8  +
mov ecx eax +
jmp loc_10777AA  +
mov ecx [ebp+uValue] +
cmp eax ecx +
jnz loc_10777B0  +
cmp [ebp+Translated] 0 +
jnz locret_10777C7  +
push 0  +
push ecx  +
push [ebp+nIDDlgItem]  +
push [ebp+wParam]  +
call ds:SetDlgItemInt  +
push [ebp+wParam]  +
call sub_1048561  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push 0  +
call ds:SHAddToRecentDocs  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10777FF  +
cmp dword ptr [esi] 0 +
jz loc_10777F8  +
push 0  +
push offset aStart_trackdoc  +
call sub_104AA14  +
push esi  +
call ds:LocalFree  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 4  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_1077852  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_4] +
mov [esi] eax +
jz loc_107784C  +
push 0  +
push 2008h  +
push esi  +
push offset sub_10777D0  +
call ds:__imp_SHCreateThread  +
test eax eax +
jnz loc_1077852  +
push esi  +
call ds:LocalFree  +
jmp loc_1077852  +
push esi  +
call sub_10777D0  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
lea esi off_1077898[edi] +
push dword ptr [esi]  +
push 80000001h  +
call ds:SHDeleteKeyW  +
cmp [ebp+arg_0] 0 +
jz loc_107788A  +
push dword ptr [esi]  +
push 0  +
push 1Ah  +
call ds:SHSendMessageBroadcastW  +
add edi 4 +
cmp edi 20h +
jb loc_1077865  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 478h  +
push dword ptr [ecx]  +
call ds:SendMessageW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 467h  +
push dword ptr [ecx]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_1077919  +
cmp [ebp+arg_0] eax +
jnz loc_107791D  +
cmp ecx eax +
jz loc_107791D  +
jmp loc_1077922  +
cmp ecx eax +
jz loc_1077922  +
cmp ecx [ebp+arg_4] +
jbe loc_1077927  +
mov eax 80070057h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
cmp edi ebx +
jz loc_1077943  +
mov [edi] ebx +
mov esi [ebp+arg_0] +
cmp word ptr [esi] 5Ch +
jnz loc_107798B  +
cmp word ptr [esi+2] 5Ch +
jnz loc_107798B  +
cmp word ptr [esi+4] 3Fh +
jz loc_1077968  +
push esi  +
call sub_1077723  +
test eax eax +
jnz loc_107798B  +
push 2  +
jmp loc_107797E  +
push 5  +
push offset aUnc  +
lea eax [esi+6] +
push eax  +
call sub_10775D5  +
test eax eax +
jz loc_107798B  +
push 8  +
xor ebx ebx +
inc ebx  +
pop eax  +
test edi edi +
jz loc_107798B  +
lea eax [esi+eax*2] +
mov [edi] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1077A79  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1077A79  +
mov ebx ds:__imp_iswalpha +
push eax  +
call ebx  +
pop ecx  +
mov edi offset asc_1077A84 +
test eax eax +
jz loc_10779EF  +
push 3  +
push edi  +
lea eax [esi+2] +
push eax  +
call sub_10775D5  +
test eax eax +
jz loc_10779EF  +
xor eax eax +
inc eax  +
jmp loc_1077A7B  +
cmp word ptr [esi] 5Ch +
jnz loc_10779FC  +
cmp word ptr [esi+2] 0 +
jz loc_10779E7  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call sub_1077930  +
test eax eax +
jz loc_1077A30  +
mov ecx [ebp+arg_0] +
xor edx edx +
jmp loc_1077A26  +
cmp ax 5Ch +
jnz loc_1077A24  +
inc edx  +
cmp edx 1 +
jg loc_1077A79  +
cmp word ptr [ecx+2] 0 +
jz loc_1077A79  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jz loc_10779E7  +
jmp loc_1077A11  +
push 4  +
push offset a?  +
push esi  +
call sub_10775D5  +
test eax eax +
jz loc_1077A5D  +
movzx eax word ptr [esi+8] +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1077A5D  +
push 3  +
push edi  +
lea eax [esi+0Ah] +
push eax  +
call sub_10775D5  +
test eax eax +
jnz loc_10779E7  +
push esi  +
call sub_1077723  +
test eax eax +
jz loc_1077A79  +
cmp word ptr [esi+60h] 5Ch +
jnz loc_1077A79  +
cmp word ptr [esi+62h] 0 +
jz loc_10779E7  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1077A9E  +
and dword ptr [eax] 0 +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1077AA8  +
and dword ptr [eax] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1077AB3  +
mov ebx [ebp+arg_4] +
sub eax edx +
sar eax 1 +
mov esi eax +
cmp esi ebx +
jb loc_1077AD1  +
mov eax 80070057h +
jmp loc_1077B10  +
mov [ebp+arg_0] 1 +
test esi esi +
jbe loc_1077AFB  +
cmp word ptr [edi+esi*2-2] 5Ch +
jnz loc_1077AF6  +
push edi  +
dec esi  +
call sub_10779A5  +
test eax eax +
jnz loc_1077AF6  +
and [ebp+arg_0] eax +
mov [edi+esi*2] ax +
lea edi [edi+esi*2] +
sub ebx esi +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1077B04  +
mov [eax] edi +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1077B0D  +
mov [eax] ebx +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1077A8F  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1077C3B  +
cmp word ptr [esi] 0 +
jz loc_1077C3B  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1077C3B  +
and dword ptr [eax] 0 +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call sub_1077930  +
test eax eax +
jz loc_1077BDB  +
mov esi ds:__imp_wcschr +
push ebx  +
mov ebx [ebp+arg_0] +
push 5Ch  +
push ebx  +
call esi  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_1077BC3  +
lea ebx [edi+2] +
push 5Ch  +
push ebx  +
call esi  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1077BAB  +
cmp esi ebx +
jz loc_1077B9E  +
inc esi  +
inc esi  +
pop ebx  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor eax eax +
jmp loc_1077C40  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1077BB0  +
sub eax edx +
sar eax 1 +
lea esi [edi+eax*2] +
jmp loc_1077B9E  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1077BC8  +
sub eax edx +
sar eax 1 +
lea esi [ebx+eax*2] +
jmp loc_1077B9E  +
push 5Ch  +
pop edi  +
cmp [esi] di +
jnz loc_1077BEF  +
lea eax [esi+2] +
cmp [eax] di +
jz loc_1077BEF  +
mov esi eax +
jmp loc_1077B9F  +
push esi  +
call sub_1077723  +
test eax eax +
jz loc_1077BFE  +
add esi 60h +
jmp loc_1077C2B  +
push 4  +
push offset a?  +
push esi  +
call sub_10775D5  +
test eax eax +
jz loc_1077C12  +
add esi 8 +
movzx eax word ptr [esi] +
push eax  +
call ds:__imp_iswalpha  +
pop ecx  +
test eax eax +
jz loc_1077C3B  +
cmp word ptr [esi+2] 3Ah +
jnz loc_1077C3B  +
add esi 4 +
cmp [esi] di +
jnz loc_1077B9F  +
inc esi  +
inc esi  +
jmp loc_1077B9F  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
cmp dword_10B24CC 0 +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
mov [ebp+var_8] ebx +
jz loc_1077CBF  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1077C71  +
test al al +
jnz loc_1077CBF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1077CBF  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1077CBF  +
cmp edx edi +
jnz loc_1077CBF  +
push offset dword_1077F20  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push dword ptr [ebx+28Ch]  +
lea eax [ebp+var_40] +
mov esi offset unk_10B1460 +
push eax  +
mov ecx esi +
call sub_1023E74  +
mov ebx ds:GetDlgItem +
mov edi 476h +
push edi  +
push [ebp+hDlg]  +
call ebx  +
push eax  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1077D48  +
push 0  +
push 0  +
push 147h  +
push edi  +
push [ebp+hDlg]  +
call ebx  +
push eax  +
call ds:SendMessageW  +
sub eax 0 +
jz loc_1077D22  +
dec eax  +
jz loc_1077D1E  +
dec eax  +
jz loc_1077D1A  +
dec eax  +
jnz loc_1077D48  +
xor edi edi +
inc edi  +
jmp loc_1077D25  +
push 2  +
jmp loc_1077D24  +
xor edi edi +
jmp loc_1077D25  +
push 3  +
pop edi  +
cmp edi dword_10B2138 +
jz loc_1077D48  +
mov eax [ebp+var_10] +
and eax 3 +
cmp al 3 +
jnz loc_1077D40  +
push 0  +
mov ecx esi +
call sub_1071F95  +
push edi  +
mov ecx esi +
call sub_107133D  +
mov edi ds:IsDlgButtonChecked +
push 44Eh  +
push [ebp+hDlg]  +
call edi  +
push eax  +
mov ecx esi +
mov [ebp+pvData] eax +
call sub_1071F95  +
mov [ebp+var_4] eax +
mov eax [ebp+var_8] +
push dword ptr [eax+28Ch]  +
lea eax [ebp+var_40] +
push eax  +
mov ecx esi +
call sub_1023E74  +
mov eax [ebp+var_4] +
shr eax 10h +
test ax ax +
jnz loc_1077DA1  +
xor eax eax +
cmp [ebp+pvData] eax +
jz loc_1077DA3  +
test byte ptr [ebp+var_10] 1 +
jnz loc_1077DA3  +
push eax  +
push 44Eh  +
push [ebp+hDlg]  +
call ds:CheckDlgButton  +
xor eax eax +
cmp word ptr [ebp+var_4] ax +
jz loc_1077DB4  +
push eax  +
push eax  +
push eax  +
push eax  +
mov ecx esi +
call sub_100309D  +
mov eax [ebp+var_8] +
push dword ptr [eax+28Ch]  +
lea eax [ebp+var_40] +
push eax  +
mov ecx esi +
call sub_106EC64  +
mov ecx esi +
call sub_100DBEB  +
mov ecx esi +
call sub_10214C3  +
push 451h  +
push [ebp+hDlg]  +
call edi  +
push eax  +
mov ecx esi +
call sub_10712E0  +
push 475h  +
push [ebp+hDlg]  +
call edi  +
mov esi ds:__imp_SHSetValueW +
neg eax  +
sbb eax eax +
inc eax  +
push 4  +
mov [ebp+pvData] eax +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push offset aDisableprevi_1  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call esi  +
push 473h  +
push [ebp+hDlg]  +
call ebx  +
push eax  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1077E54  +
push 473h  +
push [ebp+hDlg]  +
call edi  +
push 4  +
mov [ebp+pvData] eax +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push offset aTaskbarsmallic  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call esi  +
mov edi 477h +
push edi  +
push [ebp+hDlg]  +
call ebx  +
push eax  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1077E9C  +
push 0  +
push 0  +
push 147h  +
push edi  +
push [ebp+hDlg]  +
call ebx  +
push eax  +
call ds:SendMessageW  +
push 4  +
mov [ebp+hDlg] eax +
lea eax [ebp+hDlg] +
push eax  +
push 4  +
push offset aTaskbarglomlev  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call esi  +
push offset aTraysettings  +
push 0  +
push 1Ah  +
push 0FFFFh  +
call ds:SendNotifyMessageW  +
cmp dword_10B24CC 0 +
jz loc_1077F14  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1077EC6  +
test al al +
jnz loc_1077F14  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1077F14  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1077F14  +
cmp edx edi +
jnz loc_1077F14  +
push offset dword_1077F30  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1051E64  +
push 1  +
push 0  +
push offset stru_1078090  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl locret_1077FA2  +
mov eax [ebp+arg_0] +
dec eax  +
jz loc_1077F81  +
dec eax  +
jnz loc_1077F99  +
push offset aChange_the_way  +
call sub_1050459  +
push offset aMshelpWindows?  +
jmp loc_1077F90  +
push offset aCustomize_the_  +
call sub_1050459  +
push offset aMshelpWindow_0  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ds:SendMessageW +
push 0  +
push 0  +
push 474h  +
push dword ptr [ecx]  +
call esi  +
push 0  +
push 0  +
push 1304h  +
push eax  +
call esi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_10778FE  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_10781E2  +
test [ebp+arg_14] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+arg_0] edi +
mov [ebp+var_4] ebx +
jz loc_1078114  +
cmp [ebp+arg_8] eax +
jnz loc_1078114  +
mov [ebp+arg_8] offset byte_1002CD0 +
xor esi esi +
test [ebp+arg_14] 0FFFFE000h +
jz loc_107812F  +
mov esi 80070057h +
cmp ecx eax +
jz loc_107819B  +
xor eax eax +
mov [edi] ax +
jmp loc_107819B  +
cmp ecx eax +
jnz loc_1078150  +
mov edx [ebp+arg_8] +
cmp [edx] ax +
jz loc_10781CC  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_107819B  +
mov [ebp+arg_0] eax +
push 7FFFFFFEh  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
mov edx ecx +
mov ecx edi +
call sub_1007F97  +
mov esi eax +
mov eax [ebp+arg_0] +
sub ebx eax +
lea ecx [edi+eax*2] +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_1078198  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_10781CC  +
cmp ebx 1 +
jbe loc_10781CC  +
push [ebp+arg_0]  +
lea ecx [ebx+ebx] +
call sub_107F51D  +
jmp loc_10781CC  +
mov ecx [ebp+arg_4] +
test [ebp+arg_14] 1C00h +
jz loc_10781C0  +
test ecx ecx +
jz loc_10781C0  +
push [ebp+arg_14]  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1073177  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_10781CC  +
cmp esi 8007007Ah +
jnz loc_10781E1  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10781D8  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_10781E1  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_10781FE  +
and dword ptr [eax] 0 +
push ebx  +
mov ebx [ebp+arg_C] +
test ebx ebx +
jz loc_1078209  +
and dword ptr [ebx] 0 +
mov edx [ebp+arg_0] +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1078212  +
mov ecx [ebp+arg_4] +
sub eax esi +
sar eax 1 +
pop esi  +
cmp eax ecx +
jb loc_107822F  +
mov eax 8007007Ah +
jmp loc_107827B  +
sub ecx eax +
lea edx [edx+eax*2] +
mov [ebp+arg_C] edx +
mov [ebp+arg_0] ecx +
test eax eax +
jz loc_1078262  +
push 5Ch  +
pop eax  +
cmp ax [edx-2] +
jz loc_1078262  +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push offset dword_101D038  +
push ecx  +
push edx  +
call sub_10780CE  +
mov edx [ebp+arg_C] +
jmp loc_1078265  +
xor eax eax +
inc eax  +
test eax eax +
jl loc_107827B  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1078272  +
mov [ecx] edx +
test ebx ebx +
jz loc_107827B  +
mov ecx [ebp+arg_0] +
mov [ebx] ecx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_10782F8  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_10782F8  +
cmp ebx 8000h +
ja loc_10782F8  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_1077B39  +
mov esi eax +
test esi esi +
jl loc_10782E7  +
mov eax [ebp+arg_0] +
lea ecx [edi+ebx*2] +
cmp eax ecx +
jb loc_10782C2  +
mov esi 80070057h +
test esi esi +
jl loc_10782E7  +
cmp word ptr [eax] 0 +
push ebx  +
push edi  +
jnz loc_10782D7  +
call sub_1077B1C  +
mov esi eax +
jmp loc_10782E3  +
xor ecx ecx +
mov [eax] cx +
call sub_1077B1C  +
xor esi esi +
test esi esi +
jge loc_10782F3  +
push offset byte_1002CD0  +
push ebx  +
push edi  +
call sub_100665F  +
mov eax esi +
pop esi  +
jmp loc_10782FD  +
mov eax 80070057h +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push offset byte_1002CD0  +
push esi  +
xor edi edi +
push ebx  +
mov [ebp+var_10] edi +
call sub_100665F  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_1078768  +
cmp esi 8000h +
jbe loc_1078347  +
mov eax 80070057h +
jmp loc_1078768  +
mov eax 104h +
cmp esi eax +
ja loc_1078354  +
and [ebp+arg_C] 0FFFFFFFEh +
mov ecx [ebp+arg_C] +
and ecx 1 +
mov [ebp+var_C] ecx +
jnz loc_1078368  +
cmp esi eax +
jbe loc_1078368  +
mov esi eax +
mov [ebp+arg_4] esi +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_8]  +
mov [ebp+var_8] esi +
call sub_1077930  +
mov [ebp+var_18] eax +
cmp eax edi +
jz loc_10783AE  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
cmp [ebp+var_C] edi +
jz loc_10783A7  +
mov [ebp+var_10] 6 +
push offset a?Unc  +
push esi  +
push ebx  +
call sub_10780CE  +
mov edi [ebp+var_14] +
jmp loc_107843B  +
push offset asc_1068ED4  +
jmp loc_1078398  +
mov edi [ebp+arg_8] +
push 4  +
mov esi offset a? +
push esi  +
push edi  +
mov [ebp+arg_C] ebx +
call sub_10775D5  +
mov [ebp+var_14] eax +
test eax eax +
jz loc_10783F3  +
mov ebx edi +
add ebx 8 +
movzx eax word ptr [ebx] +
push eax  +
call ds:__imp_iswalpha  +
pop ecx  +
test eax eax +
jz loc_10783EA  +
mov eax edi +
cmp word ptr [eax+0Ah] 3Ah +
jnz loc_10783EA  +
mov edi ebx +
jmp loc_10783EE  +
and [ebp+var_14] 0 +
mov ebx [ebp+arg_0] +
jmp loc_1078414  +
mov eax edi +
movzx eax word ptr [eax] +
push eax  +
call ds:__imp_iswalpha  +
pop ecx  +
test eax eax +
jz loc_1078414  +
mov eax edi +
cmp word ptr [eax+2] 3Ah +
jnz loc_1078414  +
mov [ebp+var_14] 1 +
cmp [ebp+var_C] 0 +
jz loc_1078481  +
cmp [ebp+var_14] 0 +
jz loc_107843E  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push esi  +
push [ebp+arg_4]  +
mov [ebp+var_10] 4 +
push ebx  +
call sub_10780CE  +
mov [ebp+var_4] eax +
cmp [ebp+var_C] 0 +
jz loc_1078481  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_1078481  +
add eax 104h +
cmp [ebp+arg_4] eax +
ja loc_1078481  +
mov eax 104h +
cmp [ebp+arg_4] eax +
jbe loc_1078462  +
mov [ebp+arg_4] eax +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_8] +
and [ebp+var_10] 0 +
push offset byte_1002CD0  +
push eax  +
push ebx  +
mov [ebp+var_8] eax +
mov [ebp+arg_C] ebx +
call sub_100665F  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1078636  +
cmp word ptr [edi] 0 +
jz loc_1078630  +
push 5Ch  +
push edi  +
call ds:__imp_wcschr  +
pop ecx  +
pop ecx  +
mov [ebp+arg_8] eax +
test eax eax +
jz loc_10784AF  +
mov esi eax +
sub esi edi +
sar esi 1 +
jmp loc_10784C4  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10784B4  +
sub eax edx +
sar eax 1 +
mov esi eax +
cmp esi 100h +
jbe loc_10784D6  +
cmp [ebp+var_C] 0 +
jz loc_1078624  +
cmp esi 8000h +
jnb loc_1078624  +
cmp esi 1 +
jnz loc_1078538  +
cmp word ptr [edi] 2Eh +
jnz loc_10785AF  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1078500  +
lea edi [eax+2] +
jmp loc_1078619  +
inc edi  +
inc edi  +
cmp [ebp+arg_C] ebx +
jbe loc_1078619  +
push ebx  +
call sub_10779A5  +
test eax eax +
jnz loc_1078619  +
sub [ebp+arg_C] 2 +
inc [ebp+var_8]  +
push offset byte_1002CD0  +
push [ebp+var_8]  +
push [ebp+arg_C]  +
call sub_100665F  +
mov [ebp+var_4] eax +
jmp loc_1078619  +
cmp esi 2 +
jnz loc_10785A4  +
cmp word ptr [edi] 2Eh +
jnz loc_10785AF  +
cmp word ptr [edi+2] 2Eh +
jnz loc_10785AF  +
cmp [ebp+arg_C] ebx +
jbe loc_1078594  +
push ebx  +
call sub_10779A5  +
test eax eax +
jnz loc_1078594  +
mov eax [ebp+arg_C] +
add eax 0FFFFFFFEh +
push eax  +
push ebx  +
call sub_107762E  +
mov [ebp+arg_C] eax +
test eax eax +
mov eax [ebp+arg_4] +
jz loc_107857B  +
mov ecx [ebp+arg_C] +
sub ecx ebx +
sar ecx 1 +
sub eax ecx +
jmp loc_107857E  +
mov [ebp+arg_C] ebx +
push offset byte_1002CD0  +
push eax  +
push [ebp+arg_C]  +
mov [ebp+var_8] eax +
call sub_100665F  +
mov [ebp+var_4] eax +
jmp loc_107859F  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_10784F8  +
add edi 4 +
jmp loc_1078619  +
test esi esi +
jnz loc_10785AF  +
cmp word ptr [edi] 5Ch +
jnz loc_10785AF  +
inc esi  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push esi  +
push edi  +
push [ebp+var_8]  +
push [ebp+arg_C]  +
call sub_100817B  +
mov [ebp+var_4] eax +
cmp eax 8007007Ah +
jnz loc_1078616  +
cmp esi 1 +
jnz loc_1078616  +
cmp word ptr [edi] 5Ch +
jnz loc_1078616  +
movzx eax word ptr [edi+2] +
xor ecx ecx +
cmp ax cx +
jz loc_107862D  +
cmp ax 2Eh +
jnz loc_10785F2  +
cmp [edi+4] cx +
jz loc_107862D  +
cmp [ebp+var_8] 1 +
jnz loc_1078616  +
cmp ax 2Eh +
jnz loc_1078616  +
cmp [edi+4] ax +
jnz loc_1078616  +
mov edx [ebp+arg_C] +
xor eax eax +
add [ebp+arg_C] 2 +
mov [edx] ax +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
lea edi [edi+esi*2] +
cmp [ebp+var_4] 0 +
jl loc_1078630  +
jmp loc_107848B  +
mov [ebp+var_4] 800700CEh +
jmp loc_1078636  +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jge loc_1078682  +
push offset byte_1002CD0  +
push [ebp+arg_4]  +
push ebx  +
call sub_100665F  +
mov eax [ebp+var_4] +
cmp eax 8007007Ah +
jnz loc_1078768  +
cmp [ebp+var_C] 0 +
jnz loc_107866B  +
cmp [ebp+arg_4] 104h +
jz loc_1078678  +
cmp [ebp+var_C] 0 +
jz loc_1078768  +
cmp [ebp+arg_4] 8000h +
jnz loc_1078768  +
mov eax 800700CEh +
jmp loc_1078768  +
mov ecx [ebp+arg_C] +
cmp ecx ebx +
jbe loc_10786B2  +
dec ecx  +
dec ecx  +
cmp word ptr [ecx] 2Eh +
jnz loc_10786B2  +
cmp ecx ebx +
jz loc_10786AD  +
lea eax [ecx-2] +
cmp word ptr [eax] 2Ah +
jz loc_10786B2  +
xor edx edx +
mov [ecx] dx +
cmp word ptr [eax] 2Eh +
mov ecx eax +
jnz loc_10786B2  +
jmp loc_1078691  +
xor eax eax +
mov [ecx] ax +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10786B7  +
sub eax edx +
sar eax 1 +
lea esi [ebx+eax*2] +
lea eax [ebx+0Eh] +
cmp esi eax +
jb loc_10786E8  +
push 7  +
push offset aData  +
sub esi 0Eh +
push esi  +
call sub_10775D5  +
test eax eax +
jz loc_10786E8  +
xor eax eax +
mov [esi] ax +
mov eax [ebp+var_10] +
xor esi esi +
cmp eax esi +
jz loc_107872F  +
lea eax [ebx+eax*2] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_10786F7  +
sub eax edx +
sar eax 1 +
cmp eax 104h +
jnb loc_107872F  +
cmp [ebp+var_18] esi +
jz loc_1078722  +
lea eax [ebx+10h] +
push eax  +
mov eax [ebp+arg_4] +
add eax 0FFFFFFFEh +
push eax  +
lea eax [ebx+4] +
push eax  +
jmp loc_107872A  +
lea eax [ebx+8] +
push eax  +
push [ebp+arg_4]  +
push ebx  +
call sub_100665F  +
cmp [ebp+arg_4] 1 +
jbe loc_1078746  +
cmp [ebx] si +
jnz loc_1078746  +
push 5Ch  +
pop eax  +
mov [ebx] ax +
xor eax eax +
mov [ebx+2] ax +
cmp [ebp+arg_4] 3 +
jbe loc_1078766  +
cmp word ptr [ebx+2] 3Ah +
jnz loc_1078766  +
cmp [ebx+4] si +
jnz loc_1078766  +
push 5Ch  +
pop eax  +
mov [ebx+4] ax +
xor eax eax +
mov [ebx+6] ax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_8] +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_C] +
mov [ebp+var_220] ecx +
mov [ebp+var_214] eax +
mov [ebp+var_218] edi +
mov [ebp+var_21C] ebx +
mov [ebp+hMem] ebx +
cmp ecx ebx +
jz loc_10789CC  +
cmp [ebp+arg_4] ebx +
jz loc_10789CC  +
mov edx 8000h +
cmp [ebp+arg_4] edx +
ja loc_10789CC  +
push esi  +
cmp eax ebx +
jnz loc_1078839  +
cmp edi ebx +
jnz loc_107886A  +
mov esi 80070057h +
push offset byte_1002CD0  +
push [ebp+arg_4]  +
push [ebp+var_220]  +
call sub_100665F  +
lea eax [ebp+var_20C] +
cmp [ebp+hMem] eax +
jz loc_1078831  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax esi +
pop esi  +
jmp loc_10789D1  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_107883C  +
sub eax esi +
sar eax 1 +
mov [ebp+var_21C] eax +
cmp eax edx +
jb loc_107885B  +
mov esi 800700CEh +
jmp loc_1078804  +
test eax eax +
jz loc_1078866  +
inc eax  +
mov [ebp+var_21C] eax +
test edi edi +
jz loc_1078888  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_107886F  +
sub eax esi +
sar eax 1 +
mov ebx eax +
cmp ebx edx +
jnb loc_1078854  +
test ebx ebx +
jz loc_1078888  +
inc ebx  +
mov eax [ebp+var_21C] +
lea edi [ebx+eax] +
mov eax 104h +
cmp edi eax +
jbe loc_10788BA  +
lea eax [edi+edi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_10788D1  +
mov esi 8007000Eh +
jmp loc_1078804  +
xor ecx ecx +
mov word ptr [ebp+var_20C] cx +
lea ecx [ebp+var_20C] +
mov [ebp+hMem] ecx +
mov edi eax +
cmp [ebp+var_21C] 0 +
jz loc_107898E  +
test ebx ebx +
jnz loc_10788ED  +
push [ebp+var_214]  +
jmp loc_1078998  +
mov ebx [ebp+var_218] +
push ebx  +
call sub_107759F  +
test eax eax +
jz loc_107894C  +
push [ebp+var_214]  +
push edi  +
push [ebp+hMem]  +
call sub_100665F  +
mov esi eax +
test esi esi +
jl loc_1078804  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
push edi  +
push [ebp+hMem]  +
call sub_10781EF  +
mov esi eax +
test esi esi +
jl loc_1078804  +
push ebx  +
push [ebp+var_218]  +
push [ebp+var_214]  +
jmp loc_107899F  +
cmp word ptr [ebx] 5Ch +
jnz loc_107898B  +
add ebx 2 +
cmp word ptr [ebx] 5Ch +
jz loc_1078985  +
push [ebp+var_214]  +
push edi  +
push [ebp+hMem]  +
call sub_100665F  +
mov esi eax +
test esi esi +
jl loc_1078804  +
push edi  +
push [ebp+hMem]  +
call sub_1078285  +
jmp loc_107890F  +
mov ebx [ebp+var_218] +
push ebx  +
jmp loc_1078998  +
test ebx ebx +
jz loc_10789AE  +
push [ebp+var_218]  +
push edi  +
push [ebp+hMem]  +
call sub_100665F  +
mov esi eax +
test esi esi +
jl loc_1078804  +
push [ebp+arg_10]  +
push [ebp+hMem]  +
push [ebp+arg_4]  +
push [ebp+var_220]  +
call sub_1078308  +
mov esi eax +
jmp loc_1078817  +
mov eax 80070057h +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1078797  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 474h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 1Fh  +
pop ecx  +
push 18Ch  +
mov [ebp+hKey] eax +
xor ebx ebx +
lea eax [ebp+var_1E0] +
push ebx  +
mov esi offset aSoftwareMic_36 +
lea edi [ebp+SubKey] +
push eax  +
movs   +
call memset  +
add esp 0Ch +
push 27h  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+hKey]  +
call ds:__imp_SHLWAPI_24  +
test eax eax +
jl loc_1078B50  +
push ebx  +
lea eax [ebp+var_54] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
mov esi 104h +
push esi  +
push eax  +
call sub_1078797  +
test eax eax +
jl loc_1078B50  +
push ebx  +
push offset aCount  +
lea eax [ebp+SubKey] +
push eax  +
push esi  +
push eax  +
call sub_1078797  +
test eax eax +
jl loc_1078B50  +
lea eax [ebp+hKey] +
push eax  +
push 0Bh  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1078B50  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+dwIndex] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jz loc_1078B39  +
jmp loc_1078B44  +
dec [ebp+dwIndex]  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
mov [ebp+cbValueName] esi +
push [ebp+hKey]  +
call ds:RegEnumValueW  +
test eax eax +
jnz loc_1078B41  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
cmp [ebp+dwIndex] ebx +
jge loc_1078AEC  +
xor ebx ebx +
inc ebx  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push offset dword_10092EC  +
call sub_1078A07  +
test eax eax +
jz locret_1078C4E  +
push offset dword_1068F64  +
call sub_1078A07  +
test eax eax +
jz locret_1078C4E  +
lea eax [ebp+pvData] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
push 8  +
lea eax [ebp+pvData] +
push eax  +
push 3  +
push offset aStartmenu_star  +
push offset aSoftwareMicr_2  +
push 80000001h  +
call ds:__imp_SHSetValueW  +
push 0  +
push offset byte_1002CD0  +
push 3  +
push offset dword_1068F74  +
call sub_1009311  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B24CC 0 +
push esi  +
push edi  +
jz loc_1078CEA  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1078C9C  +
test al al +
jnz loc_1078CEA  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1078CEA  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1078CEA  +
cmp edx edi +
jnz loc_1078CEA  +
push offset dword_1078E88  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push ebx  +
mov esi 46Fh +
push esi  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
mov ebx ds:IsDlgButtonChecked +
test eax eax +
jz loc_1078D54  +
push eax  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1078D54  +
push esi  +
push [ebp+hDlg]  +
call ebx  +
mov esi eax +
dec esi  +
neg esi  +
push 1  +
sbb esi esi +
mov edi offset aStart_trackdoc +
push edi  +
inc esi  +
call sub_10373D2  +
neg eax  +
sbb eax eax +
neg eax  +
cmp esi eax +
jz loc_1078D54  +
push 1  +
test esi esi +
jnz loc_1078D4E  +
push 1  +
call sub_107780B  +
push 101h  +
call ds:SHELL32_896  +
jmp loc_1078D54  +
push edi  +
call sub_104AA14  +
mov edi 470h +
push edi  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
test eax eax +
jz loc_1078DBD  +
push eax  +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1078DBD  +
push edi  +
push [ebp+hDlg]  +
call ebx  +
mov esi eax +
dec esi  +
neg esi  +
push 1  +
sbb esi esi +
push offset aStart_trackpro  +
inc esi  +
call sub_10373D2  +
neg eax  +
sbb eax eax +
neg eax  +
cmp esi eax +
jz loc_1078DBD  +
push edi  +
push [ebp+hDlg]  +
call ebx  +
push eax  +
push offset aStart_trackpro  +
call sub_104AA14  +
test esi esi +
jnz loc_1078DB7  +
call sub_1078BF1  +
push 1  +
call sub_107785C  +
push esi  +
call sub_107D161  +
push 46Dh  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
mov edi eax +
push edi  +
call ds:IsWindowEnabled  +
pop ebx  +
test eax eax +
jz loc_1078E06  +
mov esi ds:SendMessageW +
push 0  +
push 0  +
push 147h  +
push edi  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_1078E06  +
push 0  +
push eax  +
push 150h  +
push edi  +
call esi  +
push eax  +
push offset aStart_powerbut  +
call sub_104AA14  +
xor esi esi +
push esi  +
push esi  +
push 40Dh  +
push hWnd  +
call ds:PostMessageW  +
cmp dword_10B24CC esi +
jz loc_1078E7E  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1078E30  +
test al al +
jnz loc_1078E7E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1078E7E  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1078E7E  +
cmp edx edi +
jnz loc_1078E7E  +
push offset dword_1078E98  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1FCh +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
cmp [ebp+arg_0] ebx +
jnz loc_1078EDB  +
cmp [esi+1Ch] ebx +
jz loc_1078EDB  +
cmp [esi+20h] ebx +
jnz loc_1078F69  +
push edi  +
push 1F4h  +
lea eax [ebp+var_1F8] +
push ebx  +
mov edi 1F8h +
push eax  +
mov [ebp+pvParam] edi +
call memset  +
add esp 0Ch +
push ebx  +
lea eax [ebp+pvParam] +
push eax  +
push edi  +
push 29h  +
call ds:SystemParametersInfoW  +
test eax eax +
jz loc_1078F68  +
mov edi ds:CreateFontIndirectW +
lea eax [ebp+var_1E4] +
push eax  +
mov [ebp+var_1E4.lfWeight] 190h +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_1078F41  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_1078F3E  +
push eax  +
call ds:DeleteObject  +
mov [esi+1Ch] ebx +
lea eax [ebp+var_1E4] +
push eax  +
mov [ebp+var_1E4.lfUnderline] 1 +
call edi  +
mov edi eax +
test edi edi +
jz loc_1078F68  +
mov eax [esi+20h] +
test eax eax +
jz loc_1078F65  +
push eax  +
call ds:DeleteObject  +
mov [esi+20h] edi +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+58h] 0 +
push edi  +
mov edi ds:LoadCursorW +
jnz loc_1078F9C  +
push 7F89h  +
push 0  +
call edi  +
mov [esi+58h] eax +
cmp dword ptr [esi+5Ch] 0 +
jnz loc_1078FAE  +
push 7F00h  +
push 0  +
call edi  +
mov [esi+5Ch] eax +
pop edi  +
pop esi  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 10D8h +
call sub_10545E1  +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
movsx edi ax +
shr eax 10h +
movsx ebx ax +
lea eax [ebp+rc] +
mov esi ecx +
push eax  +
push dword ptr [esi+10h]  +
call ds:GetClientRect  +
mov eax [esi+54h] +
push dword ptr [esi+10h]  +
mov [ebp+var_10C8] eax +
call ds:IsWindowEnabled  +
test eax eax +
jz loc_1079081  +
push ebx  +
push edi  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_1079081  +
cmp dword ptr [esi+50h] 0 +
jnz loc_107903D  +
push dword ptr [esi+10h]  +
call ds:SetCapture  +
mov dword ptr [esi+50h] 1 +
push 10C0h  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 700h  +
push dword ptr [esi+10h]  +
mov [ebp+lParam] edi +
mov [ebp+var_10C0] ebx +
call ds:SendMessageW  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
mov [esi+54h] eax +
jmp loc_1079091  +
cmp dword ptr [esi+50h] 0 +
jz loc_107908D  +
call ds:ReleaseCapture  +
and dword ptr [esi+54h] 0 +
mov eax [ebp+var_10C8] +
cmp [esi+54h] eax +
jz loc_10790C4  +
mov ecx esi +
call sub_1078F7E  +
xor edi edi +
cmp [esi+54h] edi +
jz loc_10790AF  +
mov eax [esi+58h] +
jmp loc_10790B2  +
mov eax [esi+5Ch] +
push eax  +
call ds:SetCursor  +
push edi  +
push edi  +
push dword ptr [esi+10h]  +
call ds:InvalidateRect  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
push 2Ch  +
xor ebx ebx +
lea eax [ebp+var_3C] +
push ebx  +
push eax  +
mov esi ecx +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+10h] +
mov edi ds:SendMessageW +
add esp 0Ch +
mov [ebp+var_38] eax +
mov [ebp+var_34] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 435h  +
push dword ptr [esi+14h]  +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_1079180  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+10h]  +
call ds:GetWindowRect  +
mov ecx [ebp+Rect.bottom] +
mov eax [ebp+Rect.top] +
add eax ecx +
cdq   +
sub eax edx +
mov edx [ebp+Rect.left] +
sar eax 1 +
movzx ecx ax +
mov eax [ebp+Rect.right] +
add eax edx +
cdq   +
sub eax edx +
sar eax 1 +
movzx eax ax +
shl ecx 10h +
or ecx eax +
push ecx  +
push ebx  +
push 412h  +
push dword ptr [esi+14h]  +
call edi  +
or [ebp+var_3C] 20h +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 436h  +
push dword ptr [esi+14h]  +
call edi  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 411h  +
jmp loc_10791A3  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 411h  +
push dword ptr [esi+14h]  +
call edi  +
test byte ptr [ebp+var_3C] 20h +
jz loc_10791A8  +
and [ebp+var_3C] 0FFFFFFDFh +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 436h  +
push dword ptr [esi+14h]  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
stos   +
mov esi ecx +
xor ebx ebx +
cmp [esi+44h] ebx +
stos   +
jle loc_107929D  +
push dword ptr [esi+10h]  +
call ds:GetDC  +
mov [ebp+hDC] eax +
cmp eax ebx +
jz loc_107929D  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
mov eax [esi+18h] +
cmp eax ebx +
jz loc_107922A  +
lea ecx [ebp+Rect] +
push ecx  +
push ebx  +
push ebx  +
push dword ptr [esi+44h]  +
push dword ptr [esi+40h]  +
push ebx  +
push 4  +
push [ebp+hDC]  +
push eax  +
call ds:GetThemeTextExtent  +
test eax eax +
jl loc_1079291  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+Rect.bottom] +
sub ecx [ebp+Rect.top] +
mov [eax+4] ecx +
jmp loc_1079291  +
push ebx  +
mov ecx esi +
mov [ebp+var_8] ebx +
call sub_1078EAD  +
cmp [esi+54h] ebx +
jz loc_107923F  +
mov ebx [esi+20h] +
jmp loc_1079242  +
mov ebx [esi+1Ch] +
mov edi ds:SelectObject +
test ebx ebx +
jz loc_1079255  +
push ebx  +
push [ebp+hDC]  +
call edi  +
mov [ebp+var_8] eax +
push 400h  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+44h]  +
push dword ptr [esi+40h]  +
push [ebp+hDC]  +
call ds:DrawTextW  +
test eax eax +
jz loc_1079285  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+Rect.left] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+Rect.bottom] +
sub ecx [ebp+Rect.top] +
mov [eax+4] ecx +
test ebx ebx +
jz loc_1079291  +
push [ebp+var_8]  +
push [ebp+hDC]  +
call edi  +
push [ebp+hDC]  +
push dword ptr [esi+10h]  +
call ds:ReleaseDC  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push edi  +
mov ebx ecx +
push 1  +
push dword ptr [ebx+4]  +
mov [ebp+var_1] 0 +
call ds:MonitorFromWindow  +
push 9  +
mov edx eax +
pop ecx  +
xor eax eax +
mov [ebp+mi.cbSize] 28h +
lea edi [ebp+mi.rcMonitor] +
stos   +
lea eax [ebp+mi] +
push eax  +
push edx  +
call ds:GetMonitorInfoW  +
test eax eax +
jz loc_107934F  +
mov eax [ebp+mi.rcMonitor.right] +
sub eax [ebp+mi.rcMonitor.left] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi] eax +
mov eax [ebp+mi.rcMonitor.bottom] +
sub eax [ebp+mi.rcMonitor.top] +
mov [esi+4] eax +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
test byte ptr [ebx+24h] 1 +
jz loc_1079328  +
mov eax [ebp+Rect.top] +
sub eax [ebp+Rect.bottom] +
add [esi+4] eax +
mov eax [esi] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi] eax +
jmp loc_107933B  +
mov eax [ebp+Rect.left] +
sub eax [ebp+Rect.right] +
add [esi] eax +
mov eax [esi+4] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+4] eax +
cmp dword ptr [esi] 0 +
jle loc_107934A  +
cmp dword ptr [esi+4] 0 +
mov [ebp+var_1] 1 +
jg loc_107934E  +
mov [ebp+var_1] 0 +
pop esi  +
mov al [ebp+var_1] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3C0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi 3BCh +
push edi  +
xor ebx ebx +
lea eax [ebp+Data] +
push ebx  +
push eax  +
mov esi ecx +
call memset  +
mov eax [esi] +
add esp 0Ch +
mov [ebp+Data.cbSize] edi +
mov [ebp+Data.hWnd] eax +
mov [ebp+Data.uID] 3E9h +
cmp [ebp+arg_0] bl +
jz loc_1079406  +
mov edi ds:LoadStringW +
push 40h  +
lea eax [ebp+Buffer] +
push eax  +
push 254h  +
push dword ptr [esi+8]  +
mov [ebp+Data.uCallbackMessage] 8001h +
call edi  +
push 100h  +
lea eax [ebp+var_2A0] +
push eax  +
push 255h  +
push dword ptr [esi+8]  +
call edi  +
lea eax [ebp+Data] +
push eax  +
push ebx  +
mov [ebp+Data.uFlags] 11h +
mov [ebp+var_1C] 2 +
call ds:Shell_NotifyIconW  +
jmp loc_1079421  +
cmp [esi+34h] bl +
jnz loc_1079421  +
lea eax [ebp+Data] +
push eax  +
push 2  +
mov byte ptr [esi+34h] 1 +
call ds:Shell_NotifyIconW  +
mov [esi+34h] bl +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 6  +
mov ebx ecx +
mov [ebp+var_20] 1Ch +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
mov esi offset loc_1021CB0 +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
lea eax [ebp+var_54] +
push eax  +
lea eax [ebp+var_20] +
movs   +
or [ebp+var_18] 0FFFFFFFFh +
push eax  +
mov [ebp+var_24] ebx +
call ds:Shell_NotifyIconGetRect  +
mov esi ds:GetWindowRect +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call esi  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ebx]  +
call esi  +
mov ecx [ebp+var_50] +
mov eax [ebp+var_48] +
add eax ecx +
mov ecx [ebp+var_54] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_28] eax +
mov eax [ebp+var_4C] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_2C] eax +
xor ebx ebx +
call ds:IsCompositionActive  +
test eax eax +
jz loc_10794F0  +
mov esi offset loc_1021CC0 +
lea edi [ebp+var_14] +
movs   +
movs   +
lea eax [ebp+var_64] +
movs   +
push eax  +
lea eax [ebp+var_20] +
push eax  +
movs   +
call ds:Shell_NotifyIconGetRect  +
test eax eax +
jl loc_10794F0  +
mov ebx [ebp+var_58] +
sub ebx [ebp+var_60] +
push ebx  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov eax [ebp+rc.right] +
sub eax [ebp+rc.left] +
mov [ebp+var_44] eax +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
mov [ebp+var_40] eax +
lea eax [ebp+var_74] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push 10014h  +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
call ds:CalculatePopupWindowPosition  +
mov eax [ebp+var_70] +
push 11h  +
push 0  +
push 0  +
add eax ebx +
push eax  +
mov eax [ebp+var_74] +
add eax ebx +
push eax  +
push hWnd  +
mov eax [ebp+var_24] +
push dword ptr [eax]  +
call ds:SetWindowPos  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
mov [esi+4] ebx +
mov [esi+38h] ebx +
mov [esi+3Ch] ebx +
call sub_101EA47  +
mov eax [esi+1Ch] +
mov edi ds:DeleteObject +
cmp eax ebx +
jz loc_107958D  +
push eax  +
call edi  +
mov [esi+1Ch] ebx +
mov eax [esi+20h] +
cmp eax ebx +
jz loc_107959A  +
push eax  +
call edi  +
mov [esi+20h] ebx +
mov eax [esi+58h] +
cmp eax ebx +
jz loc_10795A7  +
push eax  +
call edi  +
mov [esi+58h] ebx +
mov eax [esi+5Ch] +
cmp eax ebx +
jz loc_10795B4  +
push eax  +
call edi  +
mov [esi+5Ch] ebx +
push dword ptr [esi+40h]  +
call sub_100C205  +
pop ecx  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
jz loc_10795DE  +
push 0  +
call sub_10790DA  +
and dword ptr [esi+4Ch] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi+4Ch] eax +
test eax eax +
jz loc_107960D  +
push 0  +
call ds:GetDoubleClickTime  +
push eax  +
push 0Bh  +
push dword ptr [esi+10h]  +
call ds:SetTimer  +
jmp loc_1079621  +
push 0Bh  +
push dword ptr [esi+10h]  +
call ds:KillTimer  +
push 0  +
mov ecx esi +
call sub_10790DA  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+10h]  +
call ds:GetClientRect  +
xor edi edi +
cmp [esi+54h] edi +
jnz loc_107965A  +
call ds:GetFocus  +
mov [ebp+var_8] edi +
cmp eax [esi+10h] +
jnz loc_1079661  +
mov [ebp+var_8] 1 +
push 3Ch  +
lea eax [ebp+var_5C] +
push edi  +
push eax  +
mov [ebp+hDC] edi +
call memset  +
add esp 0Ch +
mov [ebp+var_60] 40h +
call ds:IsCompositionActive  +
test eax eax +
jz loc_1079690  +
push 2  +
pop eax  +
mov [ebp+var_5C] 2000h +
jmp loc_1079692  +
xor eax eax +
mov ebx [ebp+arg_0] +
lea ecx [ebp+hDC] +
push ecx  +
push edi  +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push ebx  +
call ds:BeginBufferedPaint  +
mov [ebp+var_10] eax +
cmp eax edi +
jnz loc_10796B0  +
mov [ebp+hDC] ebx +
cmp [esi+18h] edi +
jz loc_1079705  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hDC]  +
push dword ptr [esi+10h]  +
push dword ptr [esi]  +
call sub_1035D05  +
mov ecx [esi+40h] +
mov eax ecx +
lea edx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx di +
jnz loc_10796CE  +
sub eax edx +
lea edx [ebp+var_60] +
push edx  +
sar eax 1 +
lea edx [ebp+Rect] +
push edx  +
push 1  +
push eax  +
xor eax eax +
cmp [ebp+var_8] edi +
push ecx  +
setnz al  +
inc eax  +
push eax  +
push 4  +
push [ebp+hDC]  +
push dword ptr [esi+18h]  +
call ds:DrawThemeTextEx  +
jmp loc_10797BF  +
push dword ptr [esi+10h]  +
push [ebp+hDC]  +
push 138h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
mov [ebp+arg_0] edi +
cmp eax edi +
jz loc_107972C  +
push eax  +
push [ebp+hDC]  +
call ds:SelectObject  +
mov [ebp+arg_0] eax +
push edi  +
mov ecx esi +
mov [ebp+var_C] edi +
call sub_1078EAD  +
cmp [ebp+var_8] edi +
jz loc_1079741  +
mov ebx [esi+20h] +
jmp loc_1079744  +
mov ebx [esi+1Ch] +
cmp ebx edi +
jz loc_1079755  +
push ebx  +
push [ebp+hDC]  +
call ds:SelectObject  +
mov [ebp+var_C] eax +
push 1Ah  +
call ds:GetSysColor  +
mov edi ds:SetTextColor +
push eax  +
push [ebp+hDC]  +
call edi  +
mov esi [esi+40h] +
mov [ebp+var_8] eax +
mov eax esi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1079774  +
push 1  +
sub eax ecx +
lea ecx [ebp+Rect] +
push ecx  +
sar eax 1 +
push eax  +
push esi  +
push [ebp+hDC]  +
call ds:DrawTextW  +
push [ebp+var_8]  +
push [ebp+hDC]  +
call edi  +
test ebx ebx +
jz loc_10797AB  +
push [ebp+var_C]  +
push [ebp+hDC]  +
call ds:SelectObject  +
cmp [ebp+arg_0] 0 +
jz loc_10797BD  +
push [ebp+arg_0]  +
push [ebp+hDC]  +
call ds:SelectObject  +
xor edi edi +
cmp [ebp+var_10] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_10797D2  +
push 1  +
push [ebp+var_10]  +
call ds:EndBufferedPaint  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp dword ptr [ecx+3Ch] 0 +
jz loc_10797F2  +
mov ecx [ecx+3Ch] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push edi  +
push 4  +
call sub_104F291  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
and [ebp+var_4] eax +
lea ecx [ebp+var_8] +
push ecx  +
inc eax  +
push eax  +
push 1121h  +
push 0  +
mov [ebp+var_8] eax +
call WinSqmAddToStream  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+28h] 0 +
push esi  +
push edi  +
jnz loc_10798A2  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1068A54  +
push 17h  +
push 0  +
push offset stru_10689E0  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_10798A2  +
push 32h  +
lea eax [ebp+Buffer] +
push eax  +
push 357h  +
push dword ptr [ebx+8]  +
call ds:LoadStringW  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+Buffer] +
push edx  +
sub esp 10h +
mov edi esp +
mov esi offset dword_10689F0 +
movs   +
movs   +
push 0  +
push 0FFFFFFFCh  +
push dword ptr [ebx]  +
movs   +
push eax  +
movs   +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_1079899  +
mov dword ptr [ebx+28h] 1 +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
mov [eax] ebx +
mov [eax+4] ebx +
push esi  +
xor eax eax +
inc eax  +
push edi  +
mov edi ds:SendMessageW +
mov [ebp+lParam] eax +
mov [ebp+var_10] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
mov esi ecx +
push 463h  +
push dword ptr [esi+0Ch]  +
mov [ebp+var_8] esi +
call edi  +
push ebx  +
push ebx  +
push 43Ah  +
push dword ptr [esi+0Ch]  +
call edi  +
movzx edi ax +
shr eax 10h +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
mov [eax] bl +
lea eax [ebp+var_1C] +
push eax  +
mov ecx esi +
mov [ebp+var_C] edi +
call sub_10792AC  +
test al al +
jz loc_1079A1F  +
cmp edi ebx +
jle loc_1079A1F  +
cmp [ebp+var_4] ebx +
jle loc_1079A1F  +
mov ecx [ebp+arg_C] +
mov eax [ebp+var_1C] +
sub eax [ecx+4] +
mov esi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
idiv  edi +
mov [ebp+arg_C] eax +
mov eax [ebp+var_18] +
sub eax [esi+4] +
sub eax [ecx+0Ch] +
sub eax [ecx+8] +
cdq   +
idiv  [ebp+var_4] +
mov ebx eax +
mov eax [esi] +
cdq   +
idiv  edi +
cmp eax 1 +
jge loc_1079962  +
xor eax eax +
inc eax  +
mov edi [ebp+arg_4] +
mov ecx eax +
imul ecx eax +
cmp ecx edi +
jle loc_1079979  +
cmp eax edi +
mov esi eax +
jl loc_1079976  +
mov esi edi +
push eax  +
jmp loc_1079996  +
fild  [ebp+arg_4] +
call _CIsqrt  +
push ecx  +
push ecx  +
fstp  [esp+38h+var_38] +
call ds:ceil  +
pop ecx  +
pop ecx  +
call _ftol2_sse  +
mov esi eax +
push esi  +
push edi  +
call sub_10201CD  +
mov edi eax +
mov eax [ebp+arg_C] +
cmp esi eax +
jle loc_10799C6  +
cmp eax 1 +
mov esi eax +
jle loc_10799AF  +
xor eax eax +
inc eax  +
push eax  +
push [ebp+arg_4]  +
call sub_10201CD  +
mov edi eax +
cmp edi ebx +
jle loc_10799EE  +
mov eax [ebp+arg_10] +
mov edi ebx +
mov byte ptr [eax] 1 +
cmp edi ebx +
jle loc_10799EE  +
xor eax eax +
inc eax  +
cmp ebx eax +
mov edi ebx +
jg loc_10799D5  +
mov eax ebx +
push eax  +
push [ebp+arg_4]  +
call sub_10201CD  +
mov esi eax +
cmp esi [ebp+arg_C] +
jle loc_10799EE  +
mov eax [ebp+arg_10] +
mov esi [ebp+arg_C] +
mov byte ptr [eax] 1 +
lea eax [ebp+var_24] +
push eax  +
movzx eax di +
or eax 10000h +
push eax  +
mov eax [ebp+var_8] +
push 427h  +
push dword ptr [eax+0Ch]  +
call ds:SendMessageW  +
imul esi [ebp+var_C] +
imul edi [ebp+var_4] +
mov eax [ebp+arg_0] +
add esi 6 +
mov [eax+4] edi +
mov [eax] esi +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push ebx  +
mov ebx ecx +
mov ecx [ebx+38h] +
mov [ebp+var_2] 1 +
test ecx ecx +
jz loc_1079C14  +
push 0FFFFFFFFh  +
push 3  +
call sub_1010EB3  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1079A6B  +
mov ecx [ebx+38h] +
call sub_1073616  +
test eax eax +
jz loc_1079A6B  +
mov [ebp+var_8] 1 +
cmp [ebp+var_8] 0 +
jle loc_1079C14  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetClientRect  +
push 0  +
push 0  +
push 415h  +
push dword ptr [ebx+4]  +
call ds:SendMessageW  +
test eax eax +
jz loc_1079A9B  +
inc [ebp+var_8]  +
push esi  +
push edi  +
mov esi offset dword_1079C1C +
lea edi [ebp+var_40] +
movs   +
movs   +
mov eax [ebx+18h] +
movs   +
movs   +
mov esi offset dword_102DEA0 +
lea edi [ebp+var_50] +
movs   +
movs   +
movs   +
movs   +
xor edi edi +
mov [ebx+48h] edi +
cmp eax edi +
jz loc_1079AEB  +
mov esi ds:GetThemeMargins +
lea ecx [ebp+var_40] +
push ecx  +
push edi  +
push 0E12h  +
push edi  +
push 6  +
push edi  +
push eax  +
call esi  +
lea eax [ebp+var_50] +
push eax  +
push edi  +
push 0E12h  +
push edi  +
push 7  +
push edi  +
push dword ptr [ebx+18h]  +
call esi  +
lea eax [ebp+var_10] +
push eax  +
mov ecx ebx +
call sub_10791B4  +
mov esi [ebp+var_10] +
mov ecx [ebp+var_4C] +
mov edx [ebp+var_48] +
mov eax [ebp+var_C] +
mov [ebp+var_18] esi +
add esi ecx +
mov ecx [ebp+var_44] +
add esi [ebp+var_50] +
add edx ecx +
add eax edx +
mov [ebp+var_14] eax +
lea eax [ebp-1] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_8]  +
lea eax [ebp+var_20] +
push eax  +
mov ecx ebx +
mov [ebp+var_18] esi +
mov [ebp+var_1] 0 +
call sub_10798B6  +
cmp [ebp+var_1] 0 +
jz loc_1079B3F  +
mov [ebp+var_2] 0 +
mov eax [ebp+var_3C] +
mov ecx [ebp+var_40] +
add ecx eax +
mov eax [ebp+var_20] +
add eax ecx +
cmp eax esi +
jle loc_1079B52  +
mov esi eax +
mov eax [ebp+var_34] +
mov ecx [ebp+y] +
add ecx eax +
mov eax [ebp+cy] +
add eax ecx +
mov ecx [ebp+var_14] +
push edi  +
push 0FFFFFFF0h  +
push dword ptr [ebx]  +
mov [ebp+var_8] eax +
add eax ecx +
mov [ebp+var_30] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_28] esi +
mov [ebp+var_24] eax +
call ds:GetWindowLongW  +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call ds:AdjustWindowRect  +
mov eax [ebp+var_24] +
sub eax [ebp+var_2C] +
push 16h  +
push eax  +
mov eax [ebp+var_28] +
sub eax [ebp+var_30] +
push eax  +
push edi  +
push edi  +
push edi  +
push dword ptr [ebx]  +
call ds:SetWindowPos  +
push 2  +
call ds:BeginDeferWindowPos  +
mov ecx eax +
cmp ecx edi +
jz loc_1079C0B  +
mov eax esi +
cdq   +
sub eax edx +
push 14h  +
push [ebp+cy]  +
mov esi eax +
mov eax [ebp+var_20] +
push eax  +
push [ebp+y]  +
cdq   +
sub eax edx +
sar esi 1 +
sar eax 1 +
mov edx esi +
sub edx eax +
push edx  +
push edi  +
push dword ptr [ebx+0Ch]  +
mov edi ds:DeferWindowPos +
push ecx  +
call edi  +
mov edx [ebp+var_8] +
push 14h  +
push [ebp+var_C]  +
mov ecx eax +
push [ebp+var_10]  +
mov eax [ebp+var_48] +
add edx eax +
mov eax [ebp+var_10] +
push edx  +
cdq   +
sub eax edx +
sar eax 1 +
sub esi eax +
push esi  +
push 0  +
push dword ptr [ebx+10h]  +
push ecx  +
call edi  +
push eax  +
call ds:EndDeferWindowPos  +
mov ecx ebx +
call sub_1079437  +
pop edi  +
pop esi  +
mov al [ebp+var_2] +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] ebx +
jnz loc_1079C50  +
push ebx  +
push dword ptr [ecx]  +
call ds:ShowWindow  +
jmp loc_1079D66  +
push esi  +
push edi  +
mov edi 10000h +
mov esi 80010000h +
cmp dword_10B24CC ebx +
jz loc_1079CCF  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1079C71  +
test al al +
jnz loc_1079CCF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1079CCF  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_1079CCD  +
cmp edx ebx +
jnz loc_1079CCD  +
mov eax [ebp+var_4] +
mov ecx [eax+38h] +
test ecx ecx +
jnz loc_1079CAD  +
xor eax eax +
jmp loc_1079CB6  +
push 0FFFFFFFFh  +
push 3  +
call sub_1010EB3  +
push eax  +
push offset dword_1079D70  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
xor ebx ebx +
mov ecx [ebp+var_4] +
call sub_1079A2E  +
mov byte ptr [ebp+arg_0+3] al +
mov eax [ebp+arg_4] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF0h +
add eax 10h +
or eax 47h +
push eax  +
mov eax [ebp+var_4] +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [eax]  +
call ds:SetWindowPos  +
cmp byte ptr [ebp+arg_0+3] 0 +
jnz loc_1079D0B  +
mov ecx [ebp+var_4] +
push 1  +
call sub_107935D  +
cmp dword_10B24CC ebx +
jz loc_1079D64  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1079D20  +
test al al +
jnz loc_1079D64  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_1079D64  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1079D64  +
cmp edx edi +
jnz loc_1079D64  +
push offset dword_1079D80  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
test byte ptr [esi+74h] 10h +
jz loc_1079DA6  +
call ds:BufferedPaintUnInit  +
mov eax [esi+50h] +
test eax eax +
jz loc_1079DB4  +
push eax  +
call ds:DestroyWindow  +
mov eax [esi+58h] +
test eax eax +
jz loc_1079DC2  +
push eax  +
call ds:DestroyIcon  +
mov eax [esi+54h] +
test eax eax +
jz loc_1079DD0  +
push eax  +
call ds:CloseThemeData  +
push dword ptr [esi+4]  +
call ds:RevokeDragDrop  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+74h] +
test eax 100h +
jz loc_1079E1F  +
test al al +
js loc_1079E1F  +
push 0  +
push dword ptr [esi+60h]  +
push 4  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
xor ecx ecx +
test eax eax +
setnz cl  +
shl ecx 7 +
xor ecx [esi+74h] +
and ecx 80h +
xor [esi+74h] ecx +
and dword ptr [esi+74h] 0FFFFFFDFh +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp [ecx+10h] eax +
jz loc_1079E47  +
push 0  +
push 0  +
push dword ptr [ecx+4]  +
mov [ecx+10h] eax +
call ds:InvalidateRect  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+rc] +
push eax  +
push dword ptr [ecx+4]  +
xor esi esi +
call ds:GetClientRect  +
test eax eax +
jz loc_1079E84  +
mov eax [ebp+arg_0] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
mov esi eax +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
test byte ptr [esi+74h] 40h +
jz loc_1079EAA  +
push 3  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
and dword ptr [esi+74h] 0FFFFFFBFh +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
test byte ptr [esi+74h] 80h +
jz loc_1079ECE  +
push 4  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
and dword ptr [esi+74h] 0FFFFFF7Fh +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+50h] 0 +
jz loc_1079F93  +
mov eax [ebp+arg_0] +
test eax eax +
jl loc_1079F93  +
push edi  +
xor edi edi +
inc edi  +
cmp eax edi +
jle loc_1079F7F  +
cmp eax 2 +
jz loc_1079F4F  +
cmp eax 3 +
jz loc_1079F42  +
jle loc_1079F92  +
cmp eax 5 +
jg loc_1079F92  +
test byte ptr [esi+74h] 5 +
jnz loc_1079F92  +
push edi  +
push dword ptr [esi+4]  +
mov edi ds:KillTimer +
call edi  +
push 2  +
push dword ptr [esi+4]  +
call edi  +
lea eax [esi+1Ch] +
push eax  +
push 0  +
push 411h  +
push dword ptr [esi+50h]  +
call ds:SendMessageW  +
jmp loc_1079F92  +
push 2  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
jmp loc_1079F2C  +
push edi  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
lea eax [esi+1Ch] +
push eax  +
push edi  +
push 411h  +
push dword ptr [esi+50h]  +
call ds:SendMessageW  +
push 0  +
call ds:GetDoubleClickTime  +
imul eax eax +
push eax  +
push 2  +
push dword ptr [esi+4]  +
jmp loc_1079F8C  +
push 0  +
call ds:GetDoubleClickTime  +
push eax  +
push edi  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
add eax 0FFFFFFF8h +
push offset off_1079FC0  +
push eax  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [esi-4]  +
call sub_107D191  +
mov eax [ebp+1Ch] +
and dword ptr [eax] 0 +
call ds:GetTickCount  +
mov [esi+5Ch] eax +
mov dword ptr [esi+60h] 1F4h +
xor eax eax +
pop esi  +
pop ebp  +
retn 18h  +
***
call ds:SHELL32_132  +
xor eax eax +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:SHELL32_132  +
mov eax [ebp+1Ch] +
and dword ptr [eax] 0 +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ecx+74h] 2 +
jz loc_107A06D  +
cmp dword_10B10F8 0 +
jnz loc_107A06D  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
neg eax  +
sbb eax eax +
and eax hWnd +
push eax  +
push 0  +
push [ebp+arg_0]  +
call ds:dwmapi_113  +
pop ebp  +
retn 8  +
***
xor eax eax +
cmp dword_10B10F8 eax +
push 1  +
setz al  +
push eax  +
push 579h  +
push hWnd  +
call ds:PostMessageW  +
retn   +
***
push 579h  +
push hWnd  +
call ds:PostMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+1Ch]  +
push 359h  +
push dword ptr [ebp+8]  +
call sub_104E66F  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_0] +
push esi  +
call sub_104E773  +
mov ecx [esi+1Ch] +
test byte ptr [ecx+74h] 4 +
jz loc_107A102  +
or dword ptr [ebx+8] 4 +
mov ecx [esi+1Ch] +
mov ecx [ecx+10h] +
dec ecx  +
dec ecx  +
jz loc_107A115  +
dec ecx  +
jnz loc_107A11C  +
or dword ptr [ebx+8] 8 +
jmp loc_107A11C  +
or dword ptr [ebx+8] 80h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx dword_10B2078 +
push esi  +
mov esi ecx +
movsx ecx ax +
shr eax 10h +
cwde   +
push edi  +
mov edi dword_10B2138 +
mov [ebp+pt.y] eax +
lea eax [ebp+rc] +
push eax  +
push dword ptr [esi+4]  +
mov [ebp+pt.x] ecx +
call ds:GetClientRect  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push 0  +
push dword ptr [esi+4]  +
call ds:MapWindowPoints  +
sub edi 0 +
jz loc_107A189  +
dec edi  +
jz loc_107A184  +
dec edi  +
jz loc_107A17F  +
add [ebp+rc.top] ebx +
jmp loc_107A18C  +
add [ebp+rc.left] ebx +
jmp loc_107A18C  +
sub [ebp+rc.bottom] ebx +
jmp loc_107A18C  +
sub [ebp+rc.right] ebx +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
neg eax  +
sbb eax eax +
pop edi  +
and eax 2 +
pop esi  +
dec eax  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ecx +
test byte ptr [esi+74h] 8 +
jz loc_107A262  +
push ebx  +
push edi  +
mov edi dword_10B2138 +
push 0FFFFFFECh  +
push dword ptr [esi+4]  +
call ds:GetWindowLongW  +
mov ebx eax +
and ebx 400000h +
cmp edi 3 +
jz loc_107A1F0  +
cmp edi 1 +
jz loc_107A1F0  +
and [ebp+var_4] 0 +
jmp loc_107A1F7  +
mov [ebp+var_4] 1 +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
cmp edi 2 +
jz loc_107A21B  +
test ebx ebx +
jz loc_107A216  +
cmp [ebp+var_4] 0 +
jnz loc_107A21B  +
mov eax [ebp+Rect.right] +
jmp loc_107A21E  +
mov eax [ebp+Rect.left] +
mov [esi+14h] eax +
mov eax [ebp+Rect.top] +
cmp edi 3 +
jz loc_107A22C  +
mov eax [ebp+Rect.bottom] +
mov [esi+18h] eax +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+50h]  +
call ds:GetClientRect  +
xor eax eax +
cmp edi eax +
jz loc_107A24E  +
cmp ebx eax +
jz loc_107A24B  +
cmp [ebp+var_4] eax +
jnz loc_107A24E  +
mov eax [ebp+Rect.right] +
sub [esi+14h] eax +
dec edi  +
neg edi  +
sbb edi edi +
and edi [ebp+Rect.bottom] +
sub [esi+18h] edi +
and dword ptr [esi+74h] 0FFFFFFF7h +
pop edi  +
pop ebx  +
push 15h  +
xor eax eax +
push eax  +
push eax  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push eax  +
push dword ptr [esi+50h]  +
call ds:SetWindowPos  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0Dh +
jz loc_107A294  +
cmp [ebp+arg_0] 20h +
jnz loc_107A299  +
call sub_107A076  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp [esi+4Ch] edi +
jz loc_107A2BE  +
mov [esi+4Ch] edi +
call sub_1079E90  +
call ds:GetCapture  +
cmp eax [esi+4] +
jz loc_107A353  +
mov eax [esi+74h] +
xor edi edi +
test al 20h +
jz loc_107A311  +
test al 40h +
jnz loc_107A311  +
test al 2 +
jz loc_107A311  +
cmp dword_10B10F8 edi +
jnz loc_107A311  +
call sub_1045540  +
test eax eax +
jnz loc_107A311  +
push edi  +
push dword ptr [esi+60h]  +
push 3  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
xor ecx ecx +
cmp eax edi +
setnz cl  +
shl ecx 6 +
xor ecx [esi+74h] +
and ecx 40h +
xor [esi+74h] ecx +
mov eax [esi+74h] +
test al 1 +
jnz loc_107A36C  +
or eax 1 +
push 2  +
mov ecx esi +
mov [esi+74h] eax +
call sub_1079E2A  +
mov eax [esi+4] +
or [ebp+EventTrack.dwHoverTime] 0FFFFFFFFh +
mov [ebp+EventTrack.hwndTrack] eax +
lea eax [ebp+EventTrack] +
push eax  +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 2 +
call ds:TrackMouseEvent  +
push edi  +
mov ecx esi +
call sub_1079ED5  +
jmp loc_107A36C  +
push edi  +
mov ecx esi +
call sub_1079E50  +
mov ecx esi +
test eax eax +
jz loc_107A365  +
push 3  +
jmp loc_107A367  +
push 1  +
call sub_1079E2A  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebx  +
mov ebx ecx +
mov ecx [ebx+74h] +
mov eax ecx +
not eax  +
xor eax ecx +
and eax 2 +
xor eax ecx +
mov [ebx+74h] eax +
shr eax 1 +
not eax  +
and eax 1 +
push eax  +
push offset aDisablepreview  +
push offset aSoftwareMicr_3  +
push 80000001h  +
call sub_107B73B  +
cmp dword_10B24CC 0 +
jz loc_107A411  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_107A3BF  +
test al al +
jnz loc_107A411  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_107A410  +
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_107A40F  +
cmp edx edi +
jnz loc_107A40F  +
push offset dword_107A420  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
test byte ptr [ebx+74h] 2 +
pop ebx  +
jnz locret_107A41F  +
push 3  +
call sub_10407F3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+14h]  +
mov esi [ebp+8] +
push dword ptr [ebp+10h]  +
push dword ptr [esi-4]  +
call sub_107D1ED  +
push dword ptr [esi+60h]  +
push dword ptr [esi+5Ch]  +
call sub_10365B7  +
test eax eax +
jz loc_107A47A  +
push edi  +
mov edi ds:SHELL32_137 +
push 0  +
call edi  +
lea ecx [esi-8] +
call sub_107A09B  +
push 1  +
call edi  +
add dword ptr [esi+60h] 2710h +
pop edi  +
mov eax [ebp+18h] +
and dword ptr [eax] 0 +
xor eax eax +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
push 2  +
mov esi ecx +
call sub_1079E2A  +
test byte ptr [esi+74h] 80h +
mov ecx esi +
jz loc_107A4CF  +
call sub_1079EB1  +
push 1  +
push 0  +
mov ecx esi +
call sub_107A03D  +
mov ecx esi +
call sub_107A076  +
push 0  +
call sub_10407F3  +
jmp loc_107A4D8  +
push 1  +
push 0  +
call sub_107A03D  +
mov eax [esi+74h] +
and eax 0FFFFFFDFh +
or eax 100h +
push 4  +
mov ecx esi +
mov [esi+74h] eax +
call sub_1079ED5  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax [ebp+arg_0] +
sub eax 1A2Dh +
jz loc_107A510  +
dec eax  +
jnz loc_107A51C  +
call sub_107A377  +
jmp loc_107A51C  +
call sub_107A076  +
push 4  +
call sub_10407F3  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
push 1  +
push 0  +
mov esi ecx +
call sub_107A03D  +
mov eax [ebp+arg_0] +
cmp eax 0FFFFFFFFh +
jnz loc_107A57A  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetWindowRect  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
cdq   +
sub eax edx +
mov edi eax +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
sar edi 1 +
add edi [ebp+Rect.left] +
cdq   +
sub eax edx +
mov ebx eax +
sar ebx 1 +
add ebx [ebp+Rect.top] +
push ebx  +
push edi  +
call ds:SetCursorPos  +
jmp loc_107A583  +
movsx edi ax +
shr eax 10h +
movsx ebx ax +
lea eax [ebp+var_4] +
push eax  +
push offset aMicrosoftWindo  +
call SLGetWindowsInformationDWORD  +
test eax eax +
jl loc_107A5D0  +
cmp [ebp+var_4] 0 +
jz loc_107A5D0  +
mov eax [esi+74h] +
and eax 2 +
shl eax 2 +
push eax  +
push 1A2Eh  +
push dword ptr [esi+5Ch]  +
call ds:CheckMenuItem  +
call sub_1048E5E  +
xor ecx ecx +
test eax eax +
setz cl  +
push ecx  +
push 1A2Eh  +
push dword ptr [esi+5Ch]  +
call ds:EnableMenuItem  +
jmp loc_107A5E0  +
push 0  +
push 1A2Eh  +
push dword ptr [esi+5Ch]  +
call ds:RemoveMenu  +
push 0  +
push 1A2Dh  +
push dword ptr [esi+5Ch]  +
call ds:SetMenuDefaultItem  +
push 0  +
push dword ptr [esi+4]  +
push ebx  +
push edi  +
push 100h  +
push dword ptr [esi+5Ch]  +
call ds:TrackPopupMenuEx  +
push eax  +
mov ecx esi +
call sub_107A4F6  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+hKey] +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
mov [ebp+hKey] eax +
cmp [ebp+lpSubKey] esi +
jz loc_107A657  +
push esi  +
lea ecx [ebp+hKey] +
push ecx  +
push esi  +
push 2  +
push esi  +
push esi  +
push esi  +
push [ebp+lpSubKey]  +
push eax  +
call ds:RegCreateKeyExW  +
test eax eax +
jz loc_107A657  +
xor eax eax +
jmp loc_107A683  +
push [ebp+cbData]  +
push [ebp+lpData]  +
push 3  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_107A673  +
xor edi edi +
inc edi  +
cmp [ebp+lpSubKey] esi +
jz loc_107A681  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 248h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push 104h  +
lea eax [ebp+sz] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_107A726  +
push offset aTaskmgr_exe  +
lea eax [ebp+sz] +
push eax  +
call ds:PathAppendW  +
test eax eax +
jz loc_107A726  +
lea eax [ebp+sz] +
push eax  +
call ds:PathQuoteSpacesW  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
call memset  +
lea eax [ebp+sz] +
mov [ebp+ExecInfo.lpFile] eax +
add esp 0Ch +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.nShow] 1 +
mov [ebp+ExecInfo.lpParameters] offset a4 +
call ds:__imp_ShellExecuteExW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+dwProcessId] 0 +
lea eax [ebp+dwProcessId] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowThreadProcessId  +
push [ebp+dwProcessId]  +
call ds:AllowSetForegroundWindow  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+lParam] 20h +
push 43Fh  +
push [ebp+hWnd]  +
mov [ebp+var_1C] 80000020h +
call ds:SendMessageW  +
mov eax [ebp+var_18] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+lParam] 20h +
push 43Fh  +
push [ebp+hWnd]  +
mov [ebp+var_1C] 80000004h +
call ds:SendMessageW  +
movzx eax [ebp+var_10] +
shr eax 3 +
not eax  +
and eax 1 +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetBkColor +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call esi  +
mov edi eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+arg_4]  +
push 2  +
push eax  +
push eax  +
push [ebp+arg_0]  +
call sub_107E637  +
push edi  +
push [ebp+arg_0]  +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
test [ebp+arg_C] 8000h +
jz loc_107A84D  +
or [ebp+arg_C] 4000h +
push ebx  +
push esi  +
push edi  +
push [ebp+lprcDst]  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:CopyRect  +
mov eax [ebp+arg_8] +
and eax 3 +
mov esi ds:GetSysColor +
jnz loc_107A87B  +
mov eax [ebp+arg_8] +
and eax 0Ch +
jz loc_107AA6B  +
and [ebp+arg_8] 0FFFFFFF3h +
mov ecx [ebp+arg_C] +
test ecx 4000h +
jz loc_107A8B1  +
test ecx 8000h +
jz loc_107A89A  +
test al 3 +
jz loc_107A896  +
push 6  +
jmp loc_107A8A4  +
push 5  +
jmp loc_107A8A4  +
test al 3 +
jz loc_107A8A2  +
push 10h  +
jmp loc_107A8A4  +
push 0Fh  +
call esi  +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
jmp loc_107A976  +
dec eax  +
jz loc_107A93A  +
dec eax  +
jz loc_107A915  +
dec eax  +
dec eax  +
jz loc_107A901  +
sub eax 4 +
jnz loc_107AA67  +
test ecx 1000h +
jz loc_107A8D4  +
push 10h  +
jmp loc_107A8D6  +
push 15h  +
call esi  +
push 16h  +
mov [ebp+var_8] eax +
call esi  +
mov ecx [ebp+arg_10] +
mov [ebp+var_4] eax +
test ecx ecx +
jz loc_107A976  +
mov edx [ecx+8] +
mov eax 0FF000000h +
cmp edx eax +
jz loc_107A8FC  +
mov [ebp+var_8] edx +
mov ecx [ecx+4] +
jmp loc_107A96F  +
test ecx 1000h +
jz loc_107A90D  +
push 16h  +
jmp loc_107A90F  +
push 14h  +
call esi  +
push 10h  +
jmp loc_107A94C  +
test ecx 1000h +
jz loc_107A921  +
push 15h  +
jmp loc_107A923  +
push 10h  +
call esi  +
push 14h  +
mov [ebp+var_8] eax +
call esi  +
cmp [ebp+arg_10] 0 +
mov [ebp+var_4] eax +
jz loc_107A976  +
mov ecx [ebp+arg_10] +
jmp loc_107A8ED  +
test ecx 1000h +
jz loc_107A946  +
push 14h  +
jmp loc_107A948  +
push 16h  +
call esi  +
push 15h  +
mov [ebp+var_8] eax +
call esi  +
cmp [ebp+arg_10] 0 +
mov [ebp+var_4] eax +
jz loc_107A976  +
mov ecx [ebp+arg_10] +
mov edx [ecx+4] +
mov eax 0FF000000h +
cmp edx eax +
jz loc_107A96C  +
mov [ebp+var_8] edx +
mov ecx [ecx+8] +
cmp ecx eax +
jz loc_107A976  +
mov [ebp+var_4] ecx +
mov ebx ds:GetSystemMetrics +
push 5  +
call ebx  +
push 6  +
mov edi eax +
call ebx  +
test byte ptr [ebp+arg_C] 0Ch +
mov ebx eax +
jz loc_107A9F0  +
test byte ptr [ebp+arg_C] 4 +
jz loc_107A9BF  +
mov eax [ebp-10h] +
push [ebp+var_4]  +
sub eax edi +
mov [ebp-10h] eax +
mov [ebp+var_28] eax +
add eax edi +
mov [ebp+var_20] eax +
mov eax [ebp-14h] +
mov [ebp+var_24] eax +
mov eax [ebp-0Ch] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_0]  +
call sub_107A7F9  +
test byte ptr [ebp+arg_C] 8 +
jz loc_107A9F0  +
mov eax [ebp-0Ch] +
push [ebp+var_4]  +
mov ecx [ebp+rcSrc] +
sub eax ebx +
mov [ebp-0Ch] eax +
mov [ebp+var_24] eax +
add eax ebx +
mov [ebp+var_1C] eax +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_28] ecx +
mov ecx [ebp-10h] +
mov [ebp+var_20] ecx +
call sub_107A7F9  +
test byte ptr [ebp+arg_C] 3 +
jz loc_107A86B  +
test byte ptr [ebp+arg_C] 1 +
jz loc_107AA2C  +
add [ebp+rcSrc] edi +
mov eax [ebp+rcSrc] +
push [ebp+var_8]  +
sub eax edi +
mov [ebp+var_28] eax +
mov eax [ebp+rcSrc] +
mov [ebp+var_20] eax +
mov eax [ebp-14h] +
mov [ebp+var_24] eax +
mov eax [ebp-0Ch] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_0]  +
call sub_107A7F9  +
test byte ptr [ebp+arg_C] 2 +
jz loc_107A86B  +
mov eax [ebp+rcSrc] +
add [ebp-14h] ebx +
push [ebp+var_8]  +
mov [ebp+var_28] eax +
mov eax [ebp-10h] +
mov [ebp+var_20] eax +
mov eax [ebp-14h] +
sub eax ebx +
mov [ebp+var_24] eax +
mov eax [ebp-14h] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_0]  +
call sub_107A7F9  +
jmp loc_107A86B  +
xor eax eax +
jmp loc_107AAAB  +
test [ebp+arg_C] 800h +
jz loc_107AA92  +
test [ebp+arg_C] 8000h +
jz loc_107AA81  +
push 5  +
jmp loc_107AA83  +
push 0Fh  +
call esi  +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
push [ebp+arg_0]  +
call sub_107A7F9  +
test [ebp+arg_C] 2000h +
jz loc_107AAA8  +
lea eax [ebp+rcSrc] +
push eax  +
push [ebp+lprcDst]  +
call ds:CopyRect  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
test [ebp+arg_8] 18h +
push esi  +
push edi  +
mov edi ds:GetBkColor +
jz loc_107AB34  +
test dword ptr [ebp+arg_8] 100h +
jnz loc_107AB34  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_C] 1 +
call edi  +
mov esi ds:GetSysColor +
push 10h  +
mov ebx eax +
call esi  +
cmp ebx eax +
pop ebx  +
jnz loc_107AB01  +
push 14h  +
call esi  +
push 12h  +
mov [ebp+var_8] eax +
call esi  +
jmp loc_107AB09  +
mov eax 0FF000000h +
mov [ebp+var_8] eax +
test [ebp+arg_8] 8 +
mov [ebp+var_4] eax +
lea eax [ebp+var_C] +
push eax  +
push 200Fh  +
push 0  +
pop eax  +
setnz al  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lprcDst]  +
push [ebp+arg_0]  +
call sub_107A835  +
xor esi esi +
inc esi  +
jmp loc_107AB36  +
xor esi esi +
test [ebp+arg_8] 40h +
jnz loc_107AB4D  +
push [ebp+arg_0]  +
call edi  +
push eax  +
push [ebp+lprcDst]  +
push [ebp+arg_0]  +
call sub_107A7F9  +
test esi esi +
jnz loc_107AB6E  +
mov esi ds:GetSystemMetrics +
push 6  +
call esi  +
neg eax  +
push eax  +
push 5  +
call esi  +
neg eax  +
push eax  +
push [ebp+lprcDst]  +
call ds:InflateRect  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push [ebp+lprcSrc]  +
lea eax [ebp+rcDst] +
push eax  +
call ds:CopyRect  +
push dword ptr [ebp+arg_8]  +
lea eax [ebp+rcDst] +
push eax  +
push [ebp+arg_0]  +
call sub_107AAB7  +
test [ebp+arg_8] 10h +
jz loc_107ABB1  +
push 1  +
push 1  +
lea eax [ebp+rcDst] +
push eax  +
call ds:OffsetRect  +
push ebx  +
push esi  +
push edi  +
push 12h  +
call ds:GetSysColorBrush  +
push eax  +
push [ebp+arg_0]  +
call ds:SelectObject  +
mov [ebp+var_C] eax +
mov eax dword_10B10D4 +
push 7  +
pop ecx  +
cdq   +
idiv  ecx +
push 2  +
pop ebx  +
mov edi eax +
cmp edi ebx +
jge loc_107ABDF  +
mov edi ebx +
mov ecx dword ptr [ebp+arg_8] +
and ecx 20h +
test [ebp+arg_8] 4 +
mov [ebp+var_8] ecx +
jz loc_107ACA3  +
mov eax [ebp+rcDst.right] +
mov edx edi +
shl edx 2 +
sub eax edx +
add eax [ebp+rcDst.left] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+lprcSrc] eax +
test ecx ecx +
jnz loc_107AC10  +
add eax edi +
mov [ebp+lprcSrc] eax +
test [ebp+arg_8] bl +
jz loc_107AC1F  +
mov eax edi +
imul eax eax +
add eax [ebp+rcDst.top] +
jmp loc_107AC2C  +
mov eax [ebp+rcDst.top] +
mov ecx [ebp+rcDst.bottom] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov ecx edi +
neg ecx  +
cmp ecx edi +
mov dword ptr [ebp+arg_8] ecx +
jg loc_107AD47  +
mov ebx ds:PatBlt +
add ecx eax +
mov [ebp+var_4] ecx +
mov esi 0F00021h +
push esi  +
push 1  +
push edi  +
push [ebp+var_4]  +
push [ebp+lprcSrc]  +
push [ebp+arg_0]  +
call ebx  +
mov eax [ebp+lprcSrc] +
push esi  +
push 1  +
push edi  +
push [ebp+var_4]  +
lea eax [eax+edi*2] +
push eax  +
push [ebp+arg_0]  +
call ebx  +
xor ecx ecx +
xor eax eax +
cmp [ebp+var_8] ecx +
jz loc_107AC7E  +
cmp dword ptr [ebp+arg_8] ecx +
setl al  +
jmp loc_107AC84  +
cmp dword ptr [ebp+arg_8] ecx +
setnl al  +
xor edx edx +
cmp eax ecx +
setnz dl  +
lea edx [edx+edx-1] +
add [ebp+lprcSrc] edx +
inc dword ptr [ebp+arg_8]  +
inc [ebp+var_4]  +
cmp dword ptr [ebp+arg_8] edi +
jg loc_107AD47  +
jmp loc_107AC4B  +
test [ebp+arg_8] bl +
jz loc_107ACB1  +
mov eax [ebp+rcDst.top] +
inc eax  +
mov dword ptr [ebp+arg_8] eax +
jmp loc_107ACCD  +
mov eax [ebp+rcDst.bottom] +
mov edx edi +
shl edx 2 +
sub eax edx +
add eax [ebp+rcDst.top] +
cdq   +
sub eax edx +
sar eax 1 +
mov dword ptr [ebp+arg_8] eax +
test ecx ecx +
jnz loc_107ACCD  +
add dword ptr [ebp+arg_8] edi +
mov ecx [ebp+rcDst.right] +
mov eax [ebp+rcDst.left] +
add eax ecx +
cdq   +
sub eax edx +
mov ecx edi +
neg ecx  +
sar eax 1 +
cmp ecx edi +
mov [ebp+lprcSrc] ecx +
jg loc_107AD47  +
mov ebx ds:PatBlt +
add ecx eax +
mov [ebp+var_4] ecx +
mov esi 0F00021h +
push esi  +
push edi  +
push 1  +
push dword ptr [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call ebx  +
mov eax dword ptr [ebp+arg_8] +
push esi  +
push edi  +
push 1  +
lea eax [eax+edi*2] +
push eax  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call ebx  +
xor ecx ecx +
xor eax eax +
cmp [ebp+var_8] ecx +
jz loc_107AD28  +
cmp [ebp+lprcSrc] ecx +
setl al  +
jmp loc_107AD2E  +
cmp [ebp+lprcSrc] ecx +
setnl al  +
xor edx edx +
cmp eax ecx +
setz dl  +
lea edx [edx+edx-1] +
add dword ptr [ebp+arg_8] edx +
inc [ebp+lprcSrc]  +
inc [ebp+var_4]  +
cmp [ebp+lprcSrc] edi +
jle loc_107ACF5  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call ds:SelectObject  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B24CC 0 +
push esi  +
push edi  +
mov edi 4010000h +
mov esi 80000000h +
jz loc_107ADCC  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_107AD86  +
test al al +
jnz loc_107ADCC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_107ADCC  +
mov eax dword_10B24C0 +
push ebx  +
mov ebx dword_10B24C4 +
mov ecx eax +
mov edx ebx +
and ecx edi +
and edx esi +
cmp ecx eax +
jnz loc_107ADCB  +
cmp edx ebx +
jnz loc_107ADCB  +
push offset dword_107AE48  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop ebx  +
push 200006h  +
push 0  +
push [ebp+hMem]  +
call PlaySoundW  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp dword_10B24CC 0 +
jz loc_107AE3E  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_107ADFA  +
test al al +
jnz loc_107AE3E  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax edi +
and ecx esi +
or eax ecx +
jz loc_107AE3E  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edi +
mov edi dword_10B24C4 +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_107AE3E  +
cmp edx edi +
jnz loc_107AE3E  +
push offset dword_107AE58  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
mov ebx 4010000h +
mov esi 80000000h +
cmp dword_10B24CC edi +
jz loc_107AEE5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_107AE9C  +
test al al +
jnz loc_107AEE5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx esi +
or eax ecx +
jz loc_107AEE5  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
mov edx edi +
and ecx ebx +
and edx esi +
cmp ecx eax +
jnz loc_107AEE3  +
cmp edx edi +
jnz loc_107AEE3  +
push [ebp+lpFileName]  +
push offset dword_107B028  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1026DBD  +
xor edi edi +
push edi  +
push 8000080h  +
push 3  +
push edi  +
push 5  +
push esi  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jz loc_107AF70  +
push edi  +
push eax  +
call ds:GetFileSize  +
mov edi eax +
mov [ebp+NumberOfBytesRead] 8007000Eh +
cmp edi 0FFFFFFFFh +
jz loc_107AF5B  +
test edi edi +
jbe loc_107AF5B  +
cmp edi 400000h +
jnb loc_107AF63  +
push edi  +
push 0  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_107AF63  +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push edi  +
push [ebp+hMem]  +
push [ebp+hObject]  +
call ds:ReadFile  +
test eax eax +
jz loc_107AF5B  +
mov eax [ebp+NumberOfBytesRead] +
sub eax edi +
neg eax  +
sbb eax eax +
and eax 800703E5h +
jmp loc_107AF60  +
call sub_107B7D7  +
mov [ebp+NumberOfBytesRead] eax +
push [ebp+hObject]  +
call ds:CloseHandle  +
xor edi edi +
jmp loc_107AF78  +
call sub_107B7D7  +
mov [ebp+NumberOfBytesRead] eax +
cmp [ebp+NumberOfBytesRead] edi +
jl loc_107AFAF  +
push edi  +
push edi  +
push [ebp+hMem]  +
push offset sub_107AD5F  +
push edi  +
push edi  +
call ds:CreateThread  +
cmp eax edi +
jz loc_107AFA7  +
mov ecx [ebp+arg_0] +
cmp ecx edi +
jz loc_107AF9E  +
mov [ecx] eax +
jmp loc_107AFBD  +
push eax  +
call ds:CloseHandle  +
jmp loc_107AFBD  +
call sub_107B7D7  +
mov [ebp+NumberOfBytesRead] eax +
cmp [ebp+hMem] edi +
jz loc_107AFBD  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp dword_10B24CC edi +
jz loc_107B019  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_107AFD2  +
test al al +
jnz loc_107B019  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx esi +
or eax ecx +
jz loc_107B019  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
mov edx edi +
and ecx ebx +
and edx esi +
cmp ecx eax +
jnz loc_107B019  +
cmp edx edi +
jnz loc_107B019  +
push [ebp+lpFileName]  +
push offset dword_107B038  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1026DBD  +
mov eax [ebp+NumberOfBytesRead] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 55Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push dword ptr [ebp+arg_0]  +
lea eax [ebp+var_104] +
push offset aSoftwareMic_51  +
push 80h  +
xor ebx ebx +
push eax  +
mov [ebp+var_518] ebx +
call sub_10343CA  +
mov esi ds:__imp_SHRegGetValueFromHKCUHKLM +
xor eax eax +
add esp 10h +
mov [ebp+sz] ax +
lea eax [ebp+var_51C] +
push eax  +
lea eax [ebp+sz] +
push eax  +
push ebx  +
push 2  +
push offset aShellexecute  +
lea eax [ebp+var_104] +
push eax  +
mov [ebp+var_51C] 208h +
call esi  +
test eax eax +
jz loc_107B169  +
lea eax [ebp+var_51C] +
push eax  +
lea eax [ebp+var_514] +
push eax  +
push ebx  +
push 2  +
push offset aAssociation  +
lea eax [ebp+var_104] +
mov edi 104h +
push eax  +
mov [ebp+var_51C] edi +
call esi  +
test eax eax +
lea eax [ebp+var_51C] +
mov [ebp+var_51C] edi +
push eax  +
jnz loc_107B12C  +
lea eax [ebp+sz] +
push eax  +
push ebx  +
lea eax [ebp+var_514] +
push eax  +
push 2  +
push 40h  +
call ds:__imp_AssocQueryStringW  +
lea eax [ebp+sz] +
push eax  +
call ds:PathQuoteSpacesW  +
jmp loc_107B169  +
lea eax [ebp+var_514] +
push eax  +
push ebx  +
push 2  +
push offset aRegisteredapp  +
lea eax [ebp+var_104] +
push eax  +
call esi  +
test eax eax +
jnz loc_107B169  +
lea eax [ebp+var_514] +
push eax  +
push ebx  +
call ds:SHRunIndirectRegClientCommand  +
xor eax eax +
mov [ebp+sz] ax +
mov [ebp+var_518] 1 +
cmp [ebp+sz] bx +
jz loc_107B21E  +
lea eax [ebp+var_518] +
push eax  +
push ebx  +
lea eax [ebp+pv] +
push eax  +
lea eax [ebp+sz] +
push eax  +
call ds:SHEvaluateSystemCommandTemplate  +
mov esi eax +
cmp esi ebx +
jge loc_107B1AA  +
lea eax [ebp+sz] +
mov [ebp+pv] eax +
mov [ebp+var_518] ebx +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp+pv] +
mov [ebp+ExecInfo.lpFile] eax +
mov eax [ebp+var_518] +
mov [ebp+ExecInfo.lpParameters] eax +
add esp 0Ch +
xor edi edi +
lea eax [ebp+ExecInfo] +
inc edi  +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.nShow] edi +
mov [ebp+ExecInfo.fMask] 400h +
call ds:__imp_ShellExecuteExW  +
cmp esi ebx +
jl loc_107B218  +
push [ebp+pv]  +
mov esi ds:__imp_CoTaskMemFree +
call esi  +
push [ebp+var_518]  +
call esi  +
mov [ebp+var_518] edi +
mov ecx [ebp+var_4] +
mov eax [ebp+var_518] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_418] 208h +
jnz loc_107B337  +
mov eax offset aWindowslogon +
jmp loc_107B347  +
cmp [ebp+arg_4] 1 +
mov eax offset aWindowslogoff +
jz loc_107B347  +
mov eax offset sub_107B41C +
push eax  +
push offset aAppeventsSch_0  +
lea eax [ebp+var_20C] +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 10h +
test eax eax +
jl loc_107B3AA  +
lea eax [ebp+var_418] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
push 0  +
push 2  +
push 0  +
lea eax [ebp+var_20C] +
push eax  +
push 80000001h  +
call ds:RegGetValueW  +
test eax eax +
jz loc_107B39D  +
jle loc_107B3AA  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_107B3AA  +
lea eax [ebp+FileName] +
push eax  +
push esi  +
call sub_107AE6D  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
jnb $+2  +
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1001FEB  +
push offset dword_10B1090  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_107B4E0  +
cmp dword ptr [eax+10h] 3 +
jnz loc_107B4E0  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_107B4DA  +
cmp eax 19930521h +
jz loc_107B4DA  +
cmp eax 19930522h +
jz loc_107B4DA  +
cmp eax 1994000h +
jnz loc_107B4E0  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_107B50C  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_107B508  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_107B56D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_107B565  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_107B56F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_107B555  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_1032CCC  +
and dword ptr [ebp-4] 0 +
mov esi offset __ImageBase +
push esi  +
call sub_107B4F6  +
pop ecx  +
test eax eax +
jz loc_107B5D6  +
mov eax [ebp+8] +
sub eax esi +
push eax  +
push esi  +
call sub_107B530  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_107B5D6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_107B5DF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor eax eax +
call sub_10324BC  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10B2618 eax +
mov dword_10B2614 ecx +
mov dword_10B2610 edx +
mov dword_10B260C ebx +
mov dword_10B2608 esi +
mov dword_10B2604 edi +
mov word_10B2630 ss +
mov word_10B2624 cs +
mov word_10B2600 ds +
mov word_10B25FC es +
mov word_10B25F8 fs +
mov word_10B25F4 gs +
pushf   +
pop dword_10B2628  +
mov eax [ebp+0] +
mov dword_10B261C eax +
mov eax [ebp+4] +
mov dword_10B2620 eax +
lea eax [ebp+8] +
mov dword_10B262C eax +
mov eax [ebp-320h] +
mov dword_10B2568 10001h +
mov eax dword_10B2620 +
mov dword_10B2524 eax +
mov dword_10B2518 0C0000409h +
mov dword_10B251C 1 +
mov eax dword_10B1090 +
mov [ebp-328h] eax +
mov eax dword_10B1094 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+pvData] eax +
push 4  +
setnz al  +
mov [ebp+pvData] eax +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push [ebp+pszValue]  +
push [ebp+pszSubKey]  +
push [ebp+hkey]  +
call SHSetValueW  +
push eax  +
call sub_10502A3  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+pvData] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_107B77B  +
sub eax edx +
sar eax 1 +
cmp eax 7FFFFFFFh +
jnb loc_107B7AA  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+pvData]  +
push 1  +
push [ebp+pszValue]  +
push [ebp+pszSubKey]  +
push [ebp+hkey]  +
call SHSetValueW  +
jmp loc_107B7AF  +
mov eax 216h +
test eax eax +
jle loc_107B7BD  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 10h  +
***
call ds:__imp_GetLastError  +
test eax eax +
jnz locret_107B7D1  +
inc eax  +
retn   +
***
call sub_107B7C6  +
test eax eax +
jle locret_107B7EA  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+uBytes] 0FFFFFFFFh +
ja loc_107B81B  +
push [ebp+uBytes]  +
push [ebp+uFlags]  +
call ds:LocalAlloc  +
test eax eax +
jz loc_107B814  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_107B820  +
mov eax 8007000Eh +
jmp loc_107B820  +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push 0  +
call sub_107B7F0  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push 0  +
push offset loc_107B829  +
push dword ptr [ebp+wLanguage]  +
push [ebp+arg_4]  +
push [ebp+hModule]  +
call sub_1014D95  +
pop ebp  +
retn 10h  +
***
leave   +
cmp dl 0FFh +
pop edx  +
pop ecx  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B39F4 0FFFFFFFFh +
jnz loc_107B986  +
push offset aDestroypropert  +
push offset dword_10B39F4  +
call sub_1012091  +
mov eax dword_10B39F4 +
test eax eax +
jz loc_107B992  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B39F8 0FFFFFFFFh +
jnz loc_107B9D3  +
push offset aImagelist_de_0  +
push offset dword_10B39F8  +
call sub_1012091  +
mov eax dword_10B39F8 +
test eax eax +
jz loc_107B9DF  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B39FC 0FFFFFFFFh +
jnz loc_107BA22  +
push offset aImagelist_ge_1  +
push offset dword_10B39FC  +
call sub_1012091  +
mov eax dword_10B39FC +
test eax eax +
jz loc_107BA2E  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A04 0FFFFFFFFh +
jnz loc_107BA6E  +
push offset aImagelist_add  +
push offset dword_10B3A04  +
call sub_1012091  +
mov eax dword_10B3A04 +
test eax eax +
jz loc_107BA7A  +
pop ebp  +
jmp eax  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A08 0FFFFFFFFh +
jnz loc_107BAB4  +
push offset aImagelist_setb  +
push offset dword_10B3A08  +
call sub_1012091  +
mov eax dword_10B3A08 +
test eax eax +
jz loc_107BAC0  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A14 0FFFFFFFFh +
jnz loc_107BAFF  +
push offset aImagelist_dr_0  +
push offset dword_10B3A14  +
call sub_1012091  +
mov eax dword_10B3A14 +
test eax eax +
jz loc_107BB0B  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A20 0FFFFFFFFh +
jnz loc_107BB45  +
push offset aImagelist_begi  +
push offset dword_10B3A20  +
call sub_1012091  +
mov eax dword_10B3A20 +
test eax eax +
jz loc_107BB51  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 10h  +
***
cmp dword_10B3A24 0FFFFFFFFh +
jnz loc_107BB89  +
push offset aImagelist_endd  +
push offset dword_10B3A24  +
call sub_1012091  +
mov eax dword_10B3A24 +
test eax eax +
jz locret_107BB94  +
jmp eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A28 0FFFFFFFFh +
jnz loc_107BBCC  +
push offset aImagelist_drag  +
push offset dword_10B3A28  +
call sub_1012091  +
mov eax dword_10B3A28 +
test eax eax +
jz loc_107BBD8  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A30 0FFFFFFFFh +
jnz loc_107BC16  +
push offset aImagelist_dr_1  +
push offset dword_10B3A30  +
call sub_1012091  +
mov eax dword_10B3A30 +
test eax eax +
jz loc_107BC22  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A38 0FFFFFFFFh +
jnz loc_107BC5D  +
push offset aImagelist_dr_2  +
push offset dword_10B3A38  +
call sub_1012091  +
mov eax dword_10B3A38 +
test eax eax +
jz loc_107BC69  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A40 0FFFFFFFFh +
jnz loc_107BCAB  +
push offset aImagelist_writ  +
push offset dword_10B3A40  +
call sub_1012091  +
mov eax dword_10B3A40 +
test eax eax +
jz loc_107BCB7  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A44 0FFFFFFFFh +
jnz loc_107BCF2  +
push offset aTaskdialogindi  +
push offset dword_10B3A44  +
call sub_1012091  +
mov eax dword_10B3A44 +
test eax eax +
jz loc_107BCFE  +
pop ebp  +
jmp eax  +
mov eax 80004005h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A48 0FFFFFFFFh +
jnz loc_107BD3D  +
push offset aTaskdialog  +
push offset dword_10B3A48  +
call sub_1012091  +
mov eax dword_10B3A48 +
test eax eax +
jz loc_107BD49  +
pop ebp  +
jmp eax  +
mov eax 80004005h +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A88 0FFFFFFFFh +
jnz loc_107BD81  +
push 145h  +
push offset dword_10B3A88  +
call sub_1012091  +
mov eax dword_10B3A88 +
test eax eax +
jz loc_107BD8D  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3A9C 0FFFFFFFFh +
jnz loc_107BDB5  +
push 14Bh  +
push offset dword_10B3A9C  +
call sub_1012091  +
mov eax dword_10B3A9C +
test eax eax +
jz loc_107BDC1  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3AA0 0FFFFFFFFh +
jnz loc_107BDE9  +
push 14Fh  +
push offset dword_10B3AA0  +
call sub_1012091  +
mov eax dword_10B3AA0 +
test eax eax +
jz loc_107BDF5  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_107BE1B  +
cmp [esi] ax +
jz loc_107BE17  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_107BE0D  +
test edx edx +
jnz loc_107BE20  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_107BE31  +
test eax eax +
jl loc_107BE2E  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_107BE4A  +
cmp edx [ebp+arg_4] +
jbe loc_107BE4F  +
mov eax 80070057h +
test eax eax +
jl loc_107BE5D  +
mov eax [ebp+arg_0] +
call sub_107BE00  +
jmp loc_107BE60  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:ReleaseActCtx  +
***
mov eax dword_10B39C8 +
cmp eax 0FFFFFFFFh +
jz loc_107BE92  +
push eax  +
call sub_107BE6A  +
or dword_10B39C8 0FFFFFFFFh +
cmp dword_10B39CC 0 +
jz locret_107BEA2  +
or dword_10B39CC 0FFFFFFFFh +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 7FFFFFFFh  +
push esi  +
lea eax [ebp+arg_0] +
call sub_107BE37  +
test eax eax +
jl loc_107BF15  +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ebx  +
push 0  +
lea eax [esi+edx*2] +
pop ebx  +
jz loc_107BF06  +
mov esi ecx +
sub esi [ebp+arg_4] +
push edi  +
lea edi [esi+edx+7FFFFFFFh] +
mov esi [ebp+arg_8] +
sub esi eax +
test edi edi +
jz loc_107BF01  +
movzx edx word ptr [esi+eax] +
test dx dx +
jz loc_107BF01  +
mov [eax] dx +
inc eax  +
inc eax  +
dec ecx  +
dec edi  +
test ecx ecx +
jnz loc_107BEE9  +
pop edi  +
test ecx ecx +
jnz loc_107BF0D  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_10350C0  +
test eax eax +
jz locret_107BF72  +
push esi  +
call sub_10350A4  +
push [ebp+lpParam]  +
push [ebp+hInstance]  +
push [ebp+hMenu]  +
push [ebp+hWndParent]  +
push [ebp+nHeight]  +
push [ebp+nWidth]  +
push [ebp+Y]  +
push [ebp+X]  +
push [ebp+dwStyle]  +
push [ebp+lpWindowName]  +
push [ebp+lpClassName]  +
push 0  +
call ds:CreateWindowExW  +
push [ebp+var_4]  +
mov esi eax +
call sub_10350F3  +
mov eax esi +
pop esi  +
leave   +
retn 2Ch  +
***
call ds:__imp_GetLastError  +
test eax eax +
jle locret_107BF8F  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetWindow +
push 4  +
push [ebp+hWnd]  +
jmp loc_107BFB0  +
cmp eax [ebp+arg_4] +
jz loc_107BFB8  +
push 4  +
push eax  +
call esi  +
test eax eax +
jz loc_107BFCD  +
jmp loc_107BFA8  +
push 13h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFEh  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
inc edi  +
cmp esi 0FFFFFFFFh +
jnz loc_107BFF3  +
mov eax [ebp+arg_8] +
or [eax] esi +
jmp loc_107C00B  +
call ds:GetTickCount  +
sub eax [ebp+arg_0] +
cmp eax esi +
jbe loc_107C004  +
xor edi edi +
jmp loc_107C00B  +
sub esi eax +
mov eax [ebp+arg_8] +
mov [eax] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
xor eax eax +
xor ecx ecx +
cmp edx 4FFh +
jnz loc_107C034  +
cmp [ebp+arg_10] eax +
setnz cl  +
jmp loc_107C071  +
test edx 407h +
jz loc_107C041  +
mov ecx 4070000h +
test edx 108h +
jz loc_107C04F  +
or ecx 980000h +
test dl 20h +
jz loc_107C05A  +
or ecx 200000h +
test dl 40h +
jz loc_107C065  +
or ecx 400000h +
cmp ecx eax +
jz loc_107C084  +
cmp [ebp+arg_10] eax +
jz loc_107C071  +
or ecx 1 +
push ecx  +
push [ebp+wMsgFilterMax]  +
push [ebp+wMsgFilterMin]  +
push [ebp+hWnd]  +
push [ebp+lpMsg]  +
call ds:PeekMessageW  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
call ds:GetTickCount  +
mov ecx [ebp+arg_C] +
xor edi edi +
mov [ebp+var_C] eax +
mov [ebp+dwMilliseconds] ecx +
cmp [ebp+lpHandles] edi +
jnz loc_107C0B7  +
or eax 0FFFFFFFFh +
cmp ecx eax +
jz loc_107C1B4  +
push ebx  +
mov ebx ds:WaitForMultipleObjects +
push esi  +
mov esi 102h +
push [ebp+dwWakeMask]  +
push [ebp+dwMilliseconds]  +
push edi  +
push [ebp+lpHandles]  +
push [ebp+nCount]  +
call ds:MsgWaitForMultipleObjects  +
mov [ebp+var_4] eax +
lea eax [ebp+dwMilliseconds] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_C]  +
call sub_107BFDA  +
test eax eax +
jnz loc_107C0F0  +
mov [ebp+var_4] esi +
mov eax [ebp+var_4] +
cmp eax [ebp+nCount] +
jz loc_107C163  +
jmp loc_107C194  +
cmp [ebp+Msg.message] 12h +
jz loc_107C17C  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
cmp [ebp+Msg.message] 20h +
jnz loc_107C133  +
mov eax 0FFFEh +
cmp word ptr [ebp+Msg.lParam] ax +
jz loc_107C133  +
push 7F02h  +
push edi  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
jmp loc_107C13D  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
cmp [ebp+nCount] edi +
jz loc_107C150  +
push edi  +
push edi  +
push [ebp+lpHandles]  +
push [ebp+nCount]  +
call ebx  +
cmp eax esi +
jnz loc_107C1B9  +
lea eax [ebp+dwMilliseconds] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_C]  +
call sub_107BFDA  +
test eax eax +
jz loc_107C185  +
push [ebp+dwWakeMask]  +
lea eax [ebp+Msg] +
push 1  +
push edi  +
push edi  +
push [ebp+hWnd]  +
push eax  +
call sub_107C018  +
test eax eax +
jz loc_107C188  +
jmp loc_107C0FD  +
push [ebp+Msg.wParam]  +
call ds:PostQuitMessage  +
mov [ebp+var_4] esi +
mov eax [ebp+var_4] +
cmp eax [ebp+nCount] +
jz loc_107C0C4  +
cmp [ebp+var_4] esi +
jnz loc_107C1AF  +
cmp [ebp+nCount] edi +
jz loc_107C1AF  +
push edi  +
push edi  +
push [ebp+lpHandles]  +
push [ebp+nCount]  +
call ebx  +
cmp eax esi +
jz loc_107C1AF  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 14h  +
mov [ebp+var_4] eax +
jmp loc_107C188  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpBuffer]  +
push [ebp+nBufferLength]  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jbe loc_107C1E1  +
cmp eax [ebp+nBufferLength] +
jnb loc_107C1E1  +
xor eax eax +
jmp loc_107C1E4  +
push 7Ah  +
pop eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aCabinetwclass  +
push [ebp+hWnd]  +
call sub_1036669  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
or dword ptr [esi] 0FFFFFFFFh +
cmp [ebp+hSourceHandle] 0FFFFFFFFh +
mov eax 80070057h +
jz loc_107C261  +
call ds:GetCurrentProcess  +
push 2  +
push 0  +
push 0  +
push esi  +
push eax  +
push [ebp+hSourceHandle]  +
push eax  +
call ds:DuplicateHandle  +
test eax eax +
jz loc_107C25C  +
xor eax eax +
jmp loc_107C261  +
call sub_101AE40  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_104F92F  +
mov esi eax +
test esi esi +
jl loc_107C299  +
push [ebp+arg_8]  +
mov eax [ebp+var_4] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_107C2A6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1068A00  +
push [ebp+arg_4]  +
xor edi edi +
push ebx  +
push edi  +
mov [ebp+var_18] 1 +
call SHCreateItemWithParent  +
test eax eax +
jl loc_107C46E  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push 20400010h  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_107C465  +
test byte ptr [ebp+var_14] 10h +
jz loc_107C465  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+lpString] +
push edx  +
push 80031001h  +
push eax  +
mov [ebp+var_18] edi +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_107C449  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push 80018001h  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_107C441  +
push esi  +
push [ebp+lpString]  +
push [ebp+hWnd]  +
call ds:SetWindowTextW  +
mov eax [ebp+var_14] +
and eax 20400000h +
cmp eax 20000000h +
jz loc_107C3C9  +
push [ebp+lpString]  +
push [ebp+var_8]  +
call StrCmpICW  +
test eax eax +
jnz loc_107C3C9  +
push [ebp+lpString]  +
mov esi ds:lstrlenW +
call esi  +
lea edx [ebp+pv] +
push edx  +
mov edi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset dword_1068F3C  +
push eax  +
call dword ptr [ecx+44h]  +
test eax eax +
jl loc_107C3B6  +
push [ebp+pv]  +
call esi  +
cmp eax edi +
jnb loc_107C3AE  +
push [ebp+pv]  +
mov esi edi +
sub esi eax +
mov eax [ebp+var_8] +
lea eax [eax+esi*2] +
push eax  +
call StrCmpICW  +
test eax eax +
jnz loc_107C3AE  +
mov edi esi +
push [ebp+pv]  +
call CoTaskMemFree  +
push edi  +
push 0  +
push 0B1h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
xor edi edi +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
mov esi offset dword_107C478 +
push esi  +
lea ecx [ebp+arg_4] +
push ecx  +
push 1  +
push edi  +
push ebx  +
mov [ebp+arg_0] edi +
call dword ptr [eax+28h]  +
test eax eax +
jge loc_107C3F2  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push esi  +
push ebx  +
call dword ptr [eax]  +
mov eax [ebp+arg_0] +
pop esi  +
cmp eax edi +
jz loc_107C439  +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push offset dword_100671C  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_107C420  +
push [ebp+pv]  +
push [ebp+hWnd]  +
call SHELL32_747  +
mov eax [ebp+pv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_8]  +
call CoTaskMemFree  +
push [ebp+lpString]  +
call CoTaskMemFree  +
mov eax [ebp+arg_C] +
cmp eax edi +
jnz loc_107C455  +
mov eax 80h +
push edi  +
push eax  +
push 0C5h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_18] +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+pv] +
xor esi esi +
xor eax eax +
mov [edi] ax +
cmp [ebp+arg_8] esi +
jz loc_107C4F4  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push esi  +
push offset dword_107C4FC  +
lea edx [ebp+arg_8] +
push edx  +
push 1  +
push esi  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_107C4F4  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp [ebp+pv] esi +
jz loc_107C4EB  +
push [ebp+pv]  +
inc esi  +
push [ebp+arg_10]  +
push edi  +
call sub_100665F  +
push [ebp+pv]  +
call CoTaskMemFree  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+pv]  +
push [ebp+arg_4]  +
push 0  +
push [ebp+arg_0]  +
call sub_107C48D  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+cb]  +
push 1  +
push 0  +
call sub_100EA56  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6D8h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_6D4] eax +
mov [ebp+var_6D0] ecx +
cmp eax ebx +
jz loc_107C581  +
mov [eax] ebx +
or dword ptr [ecx] 0FFFFFFFFh +
lea eax [ebp+var_6CC] +
push eax  +
push offset dword_101A23C  +
sub esp 10h +
mov edi esp +
mov esi offset dword_101A22C +
movs   +
movs   +
movs   +
mov [ebp+var_6CC] ebx +
movs   +
call AssocCreate  +
mov esi eax +
cmp esi ebx +
jl loc_107C699  +
mov eax [ebp+var_6CC] +
mov ecx [eax] +
push ebx  +
push ebx  +
push offset aHttp  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_107C699  +
mov eax [ebp+var_6CC] +
lea edx [ebp+var_6D8] +
push edx  +
lea edx [ebp+pszPath] +
push edx  +
push ebx  +
push 2  +
mov edi 104h +
push 40h  +
mov [ebp+var_6D8] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_107C699  +
push 111h  +
push 2B4h  +
lea eax [ebp+hIcon] +
push eax  +
push 80h  +
lea eax [ebp+pszPath] +
push eax  +
mov esi 80004005h +
call SHGetFileInfoW  +
test eax eax +
jz loc_107C699  +
mov eax [ebp-6C4h] +
mov ecx [ebp+var_6D0] +
mov [ecx] eax +
cmp [ebp+var_6D4] ebx +
jz loc_107C685  +
mov eax [ebp+var_6CC] +
lea edx [ebp+var_6D0] +
push edx  +
lea edx [ebp+var_414] +
push edx  +
push ebx  +
push 4  +
push 40h  +
mov [ebp+var_6D0] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_107C685  +
push [ebp+var_6D4]  +
lea eax [ebp+var_414] +
push eax  +
call sub_100EBA2  +
mov esi eax +
cmp [ebp+hIcon] ebx +
jz loc_107C699  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
mov eax [ebp+var_6CC] +
cmp eax ebx +
jz loc_107C6A9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov edi ds:WideCharToMultiByte +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
mov [eax] esi +
push esi  +
push [ebp+CodePage]  +
call edi  +
mov ebx eax +
cmp ebx esi +
jz loc_107C72B  +
lea eax [ebp+lpMultiByteStr] +
push eax  +
push ebx  +
call sub_107C532  +
cmp eax esi +
mov [ebp+var_4] eax +
jl loc_107C733  +
push esi  +
push esi  +
push ebx  +
mov ebx [ebp+lpMultiByteStr] +
push ebx  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
push [ebp+CodePage]  +
call edi  +
test eax eax +
jz loc_107C725  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
jmp loc_107C733  +
push ebx  +
call CoTaskMemFree  +
call sub_101AE40  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+cb]  +
call CoTaskMemAlloc  +
mov esi eax +
test esi esi +
jz loc_107C764  +
push [ebp+cb]  +
push 0  +
push esi  +
call memset  +
add esp 0Ch +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push [ebp+arg_4]  +
call SHELL32_152  +
lea esi [eax+14h] +
mov [ebp+var_4] eax +
lea eax [esi+2] +
push eax  +
call sub_107C742  +
mov ebx eax +
test ebx ebx +
jz loc_107C7C7  +
mov [ebx] si +
mov esi [ebp+arg_0] +
push edi  +
mov byte ptr [ebx+2] 1Eh +
mov byte ptr [ebx+3] 0 +
lea edi [ebx+4] +
test esi esi +
jnz loc_107C7B0  +
mov esi offset dword_107C7D0 +
push [ebp+var_4]  +
movs   +
push [ebp+arg_4]  +
movs   +
movs   +
lea eax [ebx+14h] +
push eax  +
movs   +
call memmove  +
add esp 0Ch +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
inc esi  +
cmp [ebp+arg_4] 0 +
jz loc_107C804  +
push [ebp+arg_4]  +
call SHELL32_18  +
test eax eax +
jnz loc_107C806  +
xor esi esi +
jmp loc_107C806  +
xor eax eax +
push eax  +
push [ebp+Target]  +
call ds:InterlockedExchange  +
test eax eax +
jz loc_107C81A  +
push eax  +
call SHELL32_155  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
cmp eax [edx] +
jnb loc_107C849  +
mov eax [edx+eax*4+8] +
mov ecx [edx+4] +
add eax edx +
add ecx edx +
push eax  +
push ecx  +
call SHELL32_25  +
jmp loc_107C84B  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_10] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_10] +
push eax  +
push offset dword_100DC8C  +
push [ebp+arg_0]  +
call SHCreateItemFromIDList  +
mov edi eax +
test edi edi +
jl loc_107C896  +
mov eax [ebp+arg_10] +
mov ecx [eax] +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
mov eax [ebp+arg_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push offset dword_100671C  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHBindToFolderIDListParentEx  +
mov edi eax +
test edi edi +
jl loc_107C8FE  +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_C] +
lea edx [ebp+arg_8] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push 1  +
mov [ebp+arg_8] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
test edi edi +
jl loc_107C8F4  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_10] +
and eax esi +
mov [ecx] eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_107C8A3  +
test eax eax +
jl loc_107C96E  +
push edi  +
mov edi [ebp+var_4] +
test edi 20000000h +
jz loc_107C96D  +
test edi 400000h +
jz loc_107C96D  +
push esi  +
mov esi 800000h +
test edi esi +
jnz loc_107C96C  +
test [ebp+arg_C] esi +
jz loc_107C96C  +
push 0  +
push [ebp+arg_0]  +
call SHLWAPI_476  +
test eax 200h +
jz loc_107C96C  +
and edi 0FFBFFFFFh +
or edi esi +
mov [ebp+var_4] edi +
pop esi  +
pop edi  +
mov eax [ebp+var_4] +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_107C90A  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
test edi edi +
jz loc_107C9AA  +
and dword ptr [edi] 0 +
mov ebx [ebp+arg_8] +
mov eax [ebp+arg_0] +
and dword ptr [ebx] 0 +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push offset dword_104BAA8  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_107CA0F  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push edi  +
lea edx [ebp+arg_C] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_107CA06  +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jge loc_107C9FD  +
test edi edi +
jz loc_107C9FD  +
push dword ptr [edi]  +
call SHELL32_155  +
and dword ptr [edi] 0 +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov dword ptr [eax+14h] 4 +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp [ecx+24h] eax +
jz loc_107CA61  +
mov [ecx+24h] eax +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_107CA61  +
push ecx  +
test eax eax +
jz loc_107CA5B  +
call ds:SetEvent  +
jmp loc_107CA61  +
call ds:ResetEvent  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_107CA88  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+8] +
test byte ptr [edi+18h] 2 +
jnz loc_107CACB  +
mov eax 80004001h +
jmp loc_107CB00  +
push esi  +
lea esi [edi+14h] +
cmp dword ptr [esi] 1 +
jz loc_107CAD9  +
xor eax eax +
inc eax  +
jmp loc_107CAFF  +
push 3  +
push esi  +
call ds:InterlockedExchange  +
push 4  +
pop ecx  +
cmp eax ecx +
jnz loc_107CAED  +
mov [esi] ecx +
jmp loc_107CAF6  +
push 1  +
mov ecx edi +
call sub_107CA37  +
push dword ptr [ebp+0Ch]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+24h]  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+8] +
test byte ptr [edi+18h] 1 +
jnz loc_107CB20  +
mov eax 80004001h +
jmp loc_107CB56  +
push esi  +
lea esi [edi+14h] +
cmp dword ptr [esi] 1 +
jz loc_107CB30  +
mov eax 80004005h +
jmp loc_107CB55  +
push 2  +
push esi  +
call ds:InterlockedExchange  +
push 4  +
pop ecx  +
cmp eax ecx +
jnz loc_107CB46  +
mov [esi] ecx +
xor eax eax +
jmp loc_107CB55  +
push 1  +
mov ecx edi +
call sub_107CA37  +
mov eax [edi] +
push edi  +
call dword ptr [eax+28h]  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+14h] 2 +
jz loc_107CB76  +
mov eax 80004005h +
jmp loc_107CB8C  +
push 0  +
mov ecx esi +
mov dword ptr [esi+14h] 1 +
call sub_107CA37  +
mov eax [esi] +
push esi  +
call dword ptr [eax+2Ch]  +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
cmp [ecx+24h] eax +
jz locret_107CBAF  +
cmp dword ptr [ecx+14h] 2 +
setnz al  +
dec eax  +
and eax 0FFFFC005h +
add eax 80004005h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+14h] +
and dword ptr [edx] 0 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
xor ebx ebx +
mov edi offset dword_107CBF0 +
cmps   +
pop edi  +
pop esi  +
mov eax 80004005h +
pop ebx  +
jnz loc_107CBEB  +
mov eax [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
add eax 0FFFFFFFCh +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
mov [ebx] edi +
mov [ebp+0Ch] edi +
cmp [esi+14h] edi +
jnz loc_107CC3B  +
push edi  +
push dword ptr [esi+18h]  +
push 1  +
push edi  +
call ds:CreateEventW  +
mov [esi+14h] eax +
cmp eax edi +
jnz loc_107CC3B  +
call sub_107BF7B  +
mov [ebp+0Ch] eax +
mov esi [esi+14h] +
cmp esi edi +
jz loc_107CC4C  +
push ebx  +
push esi  +
call sub_107C225  +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 7  +
push offset aGlobal  +
push [ebp+arg_0]  +
call StrCmpNICW  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
xor edi edi +
cmp dword_10B3D40 edi +
jnz loc_107CD31  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push edi  +
push offset aSystemSetup_0  +
push 80000002h  +
mov [ebp+var_10] 2 +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_107CD29  +
push ebx  +
push esi  +
mov esi ds:RegQueryValueExW +
push 4  +
pop ebx  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aSystemsetupinp  +
push [ebp+hKey]  +
mov dword ptr [ebp+Data] edi +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_107CD1E  +
cmp dword ptr [ebp+Data] edi +
jz loc_107CD1E  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aOobeinprogress  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_107CD17  +
cmp dword ptr [ebp+Data] edi +
jnz loc_107CD1E  +
mov [ebp+var_10] 1 +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop esi  +
pop ebx  +
mov eax [ebp+var_10] +
mov dword_10B3D40 eax +
xor eax eax +
cmp dword_10B3D40 1 +
pop edi  +
setz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jz loc_107CDF4  +
cmp [ebp+VersionInformation.dwPlatformId] 2 +
jnz loc_107CDF2  +
cmp [ebp+VersionInformation.dwMajorVersion] 6 +
jb loc_107CDF2  +
xor eax eax +
inc eax  +
jmp loc_107CDF4  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi ecx +
call sub_107CDAB  +
test eax eax +
mov eax offset aDAGaSyA0xXSSMl +
jnz loc_107CE30  +
mov eax offset aDAGaSyA0xXS +
and dword ptr [esi] 0 +
push edi  +
push dword ptr [ebp+arg_0]  +
push eax  +
lea eax [ebp+var_20C] +
push 104h  +
push eax  +
call sub_10343CA  +
mov edi eax +
add esp 14h +
test edi edi +
jl loc_107CE6E  +
push 0  +
push esi  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jnz loc_107CE6E  +
call sub_101AE40  +
mov edi eax +
mov ecx [ebp+var_4] +
mov eax edi +
xor ecx ebp +
pop edi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
mov esi eax +
push edi  +
mov [esi] ebx +
cmp [ebp+hMem] ebx +
jnz loc_107CF95  +
mov eax large fs:18h +
mov eax [eax+30h] +
cmp [eax+1D4h] ebx +
jz loc_107CF95  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_107CFB0  +
push ebx  +
call ds:CheckTokenMembership  +
test eax eax +
jz loc_107CF59  +
cmp [ebp+var_4] ebx +
jz loc_107CF6E  +
mov edi 80004005h +
call sub_107CC8D  +
test eax eax +
jz loc_107CFA4  +
mov ecx offset aSy +
jmp loc_107CF9A  +
lea eax [ebp+hMem] +
push eax  +
call sub_10804A5  +
mov edi eax +
cmp edi ebx +
jl loc_107CF5E  +
push [ebp+arg_4]  +
mov ecx [ebp+hMem] +
call sub_107CE05  +
push [ebp+hMem]  +
mov edi eax +
call ds:LocalFree  +
jmp loc_107CFA4  +
mov ecx offset aAu +
push [ebp+arg_4]  +
call sub_107CE05  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
push [ebp+lpName]  +
mov [ebp+hMem] 0Ch +
mov [ebp-8] esi +
mov [ebp-4] esi +
call sub_107CC5B  +
push eax  +
lea eax [ebp-8] +
call sub_107CF1B  +
test eax eax +
jl loc_107D01D  +
push [ebp+lpName]  +
lea eax [ebp+hMem] +
push [ebp+bInitialState]  +
push [ebp+bManualReset]  +
push eax  +
call ds:CreateEventW  +
push dword ptr [ebp-8]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset stru_10092FC  +
mov esi 80004005h +
call sub_100934A  +
test eax eax +
jz loc_107D053  +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset stru_10092FC  +
mov esi 80004005h +
call sub_100934A  +
test eax eax +
jz loc_107D086  +
push [ebp+arg_4]  +
mov ecx [eax] +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset stru_10092FC  +
mov esi 80004005h +
call sub_100934A  +
test eax eax +
jz loc_107D0BC  +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_10] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
mov [ebp+var_41C] edx +
mov edi 104h +
push edi  +
lea edx [ebp+var_20C] +
push edx  +
mov esi 8000h +
push esi  +
mov [ebp+var_418] eax +
mov eax [ebp+arg_4] +
push ecx  +
push eax  +
call sub_102711E  +
test eax eax +
jl loc_107D14B  +
push edi  +
lea eax [ebp+var_414] +
push eax  +
push esi  +
push [ebp+var_41C]  +
push ebx  +
call sub_102711E  +
test eax eax +
jl loc_107D14B  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+var_418]  +
call sub_107D092  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset stru_10092FC  +
mov esi 80004005h +
call sub_100934A  +
test eax eax +
jz loc_107D185  +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push [ebp+szString]  +
call ds:GetWindowRect  +
push 0FFFFFFECh  +
push [ebp+szString]  +
call ds:GetWindowLongW  +
pop edi  +
test eax 400000h +
jz loc_107D1CB  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+arg_4] +
jmp loc_107D1D1  +
mov ecx [ebp+arg_4] +
sub ecx [ebp+Rect.left] +
mov eax [ebp+arg_8] +
push [ebp+arg_C]  +
sub eax [ebp+Rect.top] +
push eax  +
push ecx  +
push [ebp+szString]  +
call DoEnvironmentSubstA  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
push 0FFFFFFECh  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
pop edi  +
test eax 400000h +
jz loc_107D227  +
mov ecx [ebp+Rect.right] +
sub ecx [ebp+arg_4] +
jmp loc_107D22D  +
mov ecx [ebp+arg_4] +
sub ecx [ebp+Rect.left] +
mov eax [ebp+arg_8] +
sub eax [ebp+Rect.top] +
push eax  +
push ecx  +
call SHELL32_134  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
lea esi [ecx+8] +
xor eax eax +
cmp esi edx +
ja loc_107D28A  +
push edi  +
movzx edi word ptr [ecx] +
add ecx edi +
pop edi  +
cmp ecx edx +
ja loc_107D28A  +
mov eax ecx +
cmp eax edx +
jz loc_107D288  +
lea ecx [eax+8] +
cmp ecx edx +
ja loc_107D288  +
mov ecx 0BEEFh +
cmp [eax+6] cx +
jnz loc_107D288  +
movzx ecx word ptr [eax] +
add ecx eax +
cmp ecx edx +
ja loc_107D288  +
cmp eax esi +
jnb loc_107D28A  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
movzx esi word ptr [ecx] +
movzx edx word ptr [esi+ecx-2] +
xor eax eax +
test dx dx +
jz loc_107D2DA  +
movzx edx dx +
push edi  +
lea edi [edx+8] +
cmp edi esi +
jnb loc_107D2D9  +
lea eax [edx+ecx] +
movzx ecx word ptr [eax] +
cmp cx 8 +
jb loc_107D2D7  +
mov edi 0BEEFh +
cmp [eax+6] di +
jnz loc_107D2D7  +
movzx ecx cx +
add ecx edx +
cmp ecx esi +
jle loc_107D2D9  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
xor esi esi +
call sub_104BB6F  +
test eax eax +
jnz loc_107D32B  +
cmp [ebp+arg_8] esi +
jz loc_107D307  +
push edi  +
call SHELL32_16  +
mov edi eax +
push edi  +
call sub_107D294  +
mov esi eax +
movzx eax word ptr [edi] +
add edi eax +
jmp loc_107D327  +
mov eax [esi+4] +
cmp eax [ebp+arg_4] +
jz loc_107D32B  +
push edi  +
push esi  +
call sub_107D243  +
mov esi eax +
test esi esi +
jnz loc_107D316  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_107D2E4  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_0]  +
call sub_104BB6F  +
test eax eax +
jnz loc_107D3F7  +
mov esi [ebp+arg_4] +
mov eax 0BEEFh +
cmp [esi+6] ax +
jnz loc_107D3F7  +
push [ebp+arg_0]  +
call SHELL32_152  +
mov ebx eax +
movzx eax word ptr [esi] +
mov esi [ebp+arg_8] +
lea eax [eax+ebx+2] +
push esi  +
push eax  +
call sub_107C532  +
mov [ebp+arg_8] eax +
test eax eax +
jl loc_107D404  +
push edi  +
push ebx  +
push [ebp+arg_0]  +
push dword ptr [esi]  +
call memcpy  +
add esp 0Ch +
push dword ptr [esi]  +
call SHELL32_16  +
mov edi eax +
push edi  +
call sub_107D294  +
test eax eax +
movzx eax word ptr [edi] +
jz loc_107D3C4  +
movzx eax word ptr [eax+edi-2] +
mov [ebp+arg_0] eax +
mov eax [esi] +
lea esi [eax+ebx-2] +
mov eax [ebp+arg_4] +
movzx ecx word ptr [eax] +
push ecx  +
push eax  +
push esi  +
call memmove  +
add word ptr [esi] 2 +
movzx eax word ptr [esi] +
mov cx word ptr [ebp+arg_0] +
add esp 0Ch +
add [edi] ax +
movzx eax word ptr [esi] +
mov [eax+esi-2] cx +
pop edi  +
jmp loc_107D404  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
mov [ebp+arg_8] 80070057h +
mov eax [ebp+arg_8] +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_104BB6F  +
test eax eax +
jnz loc_107D438  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_107D353  +
push esi  +
call SHELL32_155  +
mov eax [ebp+arg_0] +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
lea eax [edi+edi+0Ch] +
movzx ebx ax +
movzx eax bx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_107D4AB  +
mov eax [ebp+arg_4] +
push 2  +
mov [esi+4] eax +
pop eax  +
push [ebp+lpString]  +
mov [esi+8] ax +
inc edi  +
push edi  +
lea eax [esi+0Ah] +
push eax  +
mov [esi] bx +
call sub_100665F  +
test eax eax +
jl loc_107D4A4  +
push esi  +
push [ebp+arg_0]  +
call sub_107D412  +
mov [ebp+var_4] eax +
push esi  +
call ds:LocalFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_4]  +
mov [ebp+var_4] 80004005h +
push [ebp+arg_0]  +
call sub_107D338  +
test eax eax +
jz loc_107D50E  +
cmp word ptr [eax+8] 2 +
jnz loc_107D50E  +
push ebx  +
push esi  +
push edi  +
lea esi [eax+0Ah] +
push esi  +
call ds:lstrlenW  +
mov ebx [ebp+arg_8] +
lea edi [eax+eax+2] +
push ebx  +
push edi  +
call sub_107C532  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_107D50B  +
push edi  +
push esi  +
push dword ptr [ebx]  +
call memcpy  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
xor eax eax +
cmp [ebp+var_4] eax +
setnl al  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jl loc_107D539  +
call UnInitThread  +
push offset __ImageBase  +
call UnInitProcessPriv  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call SHELL32_19  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
call SHELL32_18  +
mov esi eax +
test esi esi +
jz loc_107D585  +
push esi  +
call SHELL32_17  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_107D56B  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
***
xor eax eax +
cmp ax word_10B3D54 +
jnz locret_107D60E  +
push esi  +
mov esi ds:RegisterClipboardFormatW +
push offset aUniformresourc  +
call esi  +
push offset aShellIdlistArr  +
mov word_10B3D44 ax +
call esi  +
push offset aFilegroupdescr  +
mov word_10B3D48 ax +
call esi  +
push offset aFilegroupdes_0  +
mov word_10B3D4C ax +
call esi  +
push offset aShellObjectOff  +
mov word_10B3D50 ax +
call esi  +
mov word_10B3D54 ax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov ax [ebp+arg_4] +
or [ebp+var_8] 0FFFFFFFFh +
push esi  +
mov esi [ebp+arg_8] +
mov word ptr [ebp+var_14] ax +
push edi  +
xor eax eax +
inc eax  +
push esi  +
lea edx [ebp+var_14] +
mov [ebp+var_C] eax +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edx  +
xor edi edi +
and [ebp+var_10] edi +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_107D6E1  +
push dword ptr [esi+4]  +
call ds:GlobalLock  +
mov edi eax +
test edi edi +
jnz loc_107D6E1  +
push esi  +
call ReleaseStgMedium  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov ax [ebp+arg_4] +
and [ebp+var_1C] 0 +
or [ebp+var_14] 0FFFFFFFFh +
push edi  +
mov word ptr [ebp+var_20] ax +
xor eax eax +
xor ecx ecx +
inc ecx  +
lea edi [ebp+var_8] +
stos   +
stos   +
mov eax [ebp+arg_8] +
push ecx  +
mov [ebp+var_18] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_C] ecx +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+var_20] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+1Ch]  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+4] +
test eax eax +
jz loc_107D758  +
cmp dword ptr [esi] 1 +
jnz loc_107D758  +
push eax  +
call ds:GlobalUnlock  +
push esi  +
call ReleaseStgMedium  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
and [ebp+var_1C] 0 +
or [ebp+var_14] 0FFFFFFFFh +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
mov [edi] ax +
push 0Fh  +
pop eax  +
mov word ptr [ebp+var_20] ax +
xor eax eax +
inc eax  +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_20] +
mov [ebp+var_18] eax +
mov [ebp+var_10] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_107D7D2  +
push [ebp+arg_8]  +
push edi  +
push 0  +
push dword ptr [ebp+var_C.anonymous_0]  +
call DragQueryFileW  +
mov esi eax +
neg esi  +
sbb esi esi +
lea eax [ebp+var_C] +
and esi 7FFFBFFBh +
push eax  +
add esi 80004005h +
call ReleaseStgMedium  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+dwBytes]  +
mov edi 8007000Eh +
push 40h  +
call ds:GlobalAlloc  +
mov esi eax +
test esi esi +
jz loc_107D824  +
push [ebp+dwBytes]  +
push [ebp+arg_8]  +
push esi  +
call memcpy  +
add esp 0Ch +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_107D6EE  +
mov edi eax +
test edi edi +
jge loc_107D824  +
push esi  +
call ds:GlobalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
and [ebp+var_10] 0 +
or [ebp+var_8] 0FFFFFFFFh +
push esi  +
mov esi [ebp+arg_C] +
and dword ptr [esi] 0 +
push edi  +
xor eax eax +
mov edi ebx +
stos   +
stos   +
stos   +
mov ax [ebp+arg_4] +
mov word ptr [ebp+var_14] ax +
xor eax eax +
inc eax  +
push ebx  +
lea edx [ebp+var_14] +
mov [ebp+var_C] eax +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_107D895  +
push dword ptr [ebx+4]  +
call ds:GlobalLock  +
mov [esi] eax +
test eax eax +
jnz loc_107D895  +
push ebx  +
call ReleaseStgMedium  +
call sub_101AE40  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_107D5BA  +
push [ebp+arg_8]  +
movzx eax word_10B3D48 +
push [ebp+arg_4]  +
push eax  +
push [ebp+arg_0]  +
call sub_107D831  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1060h +
call sub_10545E1  +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
xor edi edi +
mov [ebp+var_1050] eax +
mov [esi] edi +
mov ebx 80070057h +
cmp eax edi +
jz loc_107DA6A  +
call sub_107D5BA  +
lea eax [ebp+var_1054] +
push eax  +
lea eax [ebp+var_1060] +
push eax  +
push [ebp+var_1050]  +
call sub_107D8A3  +
mov ebx eax +
cmp ebx edi +
jl loc_107D971  +
test byte ptr [ebp+arg_4] 8 +
jz loc_107D941  +
mov eax [ebp+var_1054] +
cmp dword ptr [eax] 1 +
jz loc_107D941  +
mov ebx 80004005h +
jmp loc_107D95F  +
push edi  +
push [ebp+var_1054]  +
call sub_107C826  +
mov [esi] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
mov ebx eax +
lea eax [ebp+var_1060] +
push eax  +
push [ebp+var_1054]  +
jmp loc_107DA09  +
test byte ptr [ebp+arg_4] 2 +
jnz loc_107D9AA  +
push 824h  +
lea eax [ebp+var_104C] +
push eax  +
push [ebp+var_1050]  +
call sub_107D768  +
mov ebx eax +
cmp ebx edi +
jl loc_107D9AE  +
push edi  +
push edi  +
push esi  +
push edi  +
lea eax [ebp+var_104C] +
push eax  +
call SHParseDisplayName  +
or [ebp+arg_4] 4 +
mov ebx eax +
cmp ebx edi +
jge loc_107DA12  +
test byte ptr [ebp+arg_4] 4 +
jnz loc_107DA0E  +
lea eax [ebp+var_1060] +
push eax  +
movzx eax word_10B3D44 +
push eax  +
push [ebp+var_1050]  +
call sub_107D693  +
mov [ebp+var_1050] eax +
cmp eax edi +
jz loc_107DA0E  +
push 824h  +
lea ecx [ebp+var_104C] +
push ecx  +
push eax  +
call SHAnsiToUnicode  +
push edi  +
push edi  +
push esi  +
push edi  +
lea eax [ebp+var_104C] +
push eax  +
call SHParseDisplayName  +
mov ebx eax +
lea eax [ebp+var_1060] +
push eax  +
push [ebp+var_1050]  +
call sub_107D73C  +
cmp ebx edi +
jl loc_107DA6A  +
test byte ptr [ebp+arg_4] 1 +
jz loc_107DA6A  +
lea eax [ebp+var_1054] +
push eax  +
push offset stru_1026650  +
push edi  +
push dword ptr [esi]  +
call sub_102841E  +
test eax eax +
jl loc_107DA6A  +
mov eax [ebp+var_1054] +
mov ecx [eax] +
lea edx [ebp+var_1050] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_107DA5E  +
cmp [ebp+var_1050] edi +
jz loc_107DA5E  +
push dword ptr [esi]  +
call SHELL32_155  +
mov eax [ebp+var_1050] +
mov [esi] eax +
mov eax [ebp+var_1054] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 418h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_107DAD1  +
or [ebp+var_418] 0FFFFFFFFh +
push 410h  +
lea eax [ebp+var_414] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 414h  +
lea eax [ebp+var_418] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_107D7DF  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
push 1Fh  +
pop eax  +
mov [edi] ax +
lea eax [edi+8] +
push eax  +
push [ebp+arg_0]  +
call SHStrDupW  +
mov ecx eax +
test ecx ecx +
jge loc_107DB0C  +
xor eax eax +
stos   +
stos   +
stos   +
stos   +
mov eax ecx +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 10h +
push esi  +
mov esi [ebp+arg_8] +
and dword ptr [esi] 0 +
mov ecx [eax] +
push edi  +
lea edx [ebp+pvar] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
test edi edi +
jl loc_107DB63  +
xor eax eax +
cmp ax [ebp+pvar.vt] +
jz loc_107DB55  +
push esi  +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantToStringAlloc  +
mov edi eax +
jmp loc_107DB5A  +
mov edi 80070490h +
lea eax [ebp+pvar] +
push eax  +
call PropVariantClear  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 10h +
push esi  +
mov esi [ebp+arg_8] +
and dword ptr [esi] 0 +
mov ecx [eax] +
push edi  +
lea edx [ebp+pvar] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
test edi edi +
jl loc_107DBBB  +
xor eax eax +
cmp ax [ebp+pvar.vt] +
jz loc_107DBAD  +
push esi  +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantToUInt32  +
mov edi eax +
jmp loc_107DBB2  +
mov edi 80070490h +
lea eax [ebp+pvar] +
push eax  +
call PropVariantClear  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 0Bh  +
pop eax  +
mov word ptr [ebp+var_10] ax +
mov eax [ebp+arg_8] +
neg eax  +
lea edx [ebp+var_10] +
sbb eax eax +
push edx  +
push [ebp+arg_4]  +
mov [ebp+var_8] ax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_10] +
and dword ptr [edi] 0 +
mov ecx [eax] +
lea edx [ebp+arg_10] +
push edx  +
push offset dword_107DC54  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_107DC4B  +
push [ebp+arg_8]  +
mov eax [ebp+arg_10] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jl loc_107DC42  +
mov eax [ebp+arg_10] +
mov ecx [eax] +
push edi  +
push [ebp+arg_C]  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+arg_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+ppv] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push [ebp+riid]  +
push 1  +
push 0  +
push [ebp+rclsid]  +
call CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_107DCAB  +
push esi  +
push [ebp+riid]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+ppv]  +
call sub_107DBFB  +
mov edi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+24h] 0 +
jz loc_107DCD4  +
mov eax [eax+24h] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_107DCD9  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+18h] 0 +
jz loc_107DD04  +
push dword ptr [ebp+14h]  +
mov eax [eax+18h] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_107DD09  +
mov eax 80004005h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+28h] 0 +
jz loc_107DD34  +
push [ebp+arg_C]  +
mov eax [eax+28h] +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_107DD39  +
mov eax 80004005h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+2Ch] 0 +
jz loc_107DD67  +
push [ebp+arg_10]  +
mov eax [eax+2Ch] +
push [ebp+arg_C]  +
mov ecx [eax] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_107DD6C  +
mov eax 80004005h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+18h] 0 +
jz loc_107DD91  +
mov eax [eax+18h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_107DD96  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
mov eax [ebp+8] +
and dword ptr [ecx] 0 +
cmp dword ptr [eax+18h] 0 +
jz loc_107DDC2  +
mov eax [eax+18h] +
mov edx [eax] +
push ecx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [edx+10h]  +
jmp loc_107DDC7  +
mov eax 80004005h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+24h] 0 +
jz loc_107DDEC  +
mov eax [eax+24h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_107DDF1  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
mov eax [ebp+8] +
and dword ptr [ecx] 0 +
cmp dword ptr [eax+24h] 0 +
jz loc_107DE1D  +
mov eax [eax+24h] +
mov edx [eax] +
push ecx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [edx+10h]  +
jmp loc_107DE22  +
mov eax 80004005h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+24h] 0 +
jz loc_107DE5F  +
push dword ptr [ebp+2Ch]  +
mov eax [eax+24h] +
push dword ptr [ebp+28h]  +
mov ecx [eax] +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_107DE64  +
mov eax 80004005h +
pop ebp  +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+24h] 0 +
jz loc_107DE89  +
mov eax [eax+24h] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_107DE8E  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax+10h]  +
call sub_107C26B  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+8] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_104F995  +
mov ebx eax +
test ebx ebx +
jl loc_107DF02  +
push esi  +
mov esi [edi+3Ch] +
jmp loc_107DEFB  +
push esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [edi+24h]  +
call sub_1043341  +
push esi  +
call ds:lstrlenW  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_107DEE1  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_107DCB8  +
***
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push edi  +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push dword ptr [ebp+18h]  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_104F995  +
xor ebx ebx +
cmp eax ebx +
mov [ebp+1Ch] eax +
jl loc_107DFC6  +
push esi  +
movsx esi ax +
add esi edi +
jmp loc_107DFC1  +
push 2Ch  +
lea eax [ebp-2Ch] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp-30h] +
push eax  +
push ebx  +
push edi  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-30h] 30h +
mov dword ptr [ebp-2Ch] 5 +
call ds:GetMenuItemInfoW  +
test eax eax +
jz loc_107DFC0  +
cmp [ebp-1Ch] ebx +
jz loc_107DFC0  +
mov eax [ebp+8] +
cmp [eax+3Ch] ebx +
jz loc_107DF9C  +
push ebx  +
push edi  +
push dword ptr [ebp+0Ch]  +
call ds:DeleteMenu  +
jmp loc_107DFC0  +
mov eax [ebp-24h] +
and eax 3 +
cmp al 3 +
jz loc_107DFC0  +
or dword ptr [ebp-24h] 3 +
lea eax [ebp-30h] +
push eax  +
push ebx  +
push edi  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-2Ch] 1 +
call ds:SetMenuItemInfoW  +
inc edi  +
cmp edi esi +
jb loc_107DF52  +
pop esi  +
mov eax [ebp+1Ch] +
pop edi  +
pop ebx  +
leave   +
retn 18h  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_104F25D  +
***
sub dword ptr [esp+4] 10h +
jmp loc_104F25D  +
***
sub dword ptr [esp+4] 8 +
jmp loc_101389D  +
***
sub dword ptr [esp+4] 4 +
jmp loc_104FD71  +
***
sub dword ptr [esp+4] 14h +
jmp loc_104F25D  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_101389D  +
***
sub dword ptr [esp+4] 8 +
jmp loc_104FD71  +
***
sub dword ptr [esp+4] 10h +
jmp loc_101389D  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_104FD71  +
***
sub dword ptr [esp+4] 10h +
jmp loc_104FD71  +
***
sub dword ptr [esp+4] 14h +
jmp loc_104FD71  +
***
sub dword ptr [esp+4] 4 +
jmp loc_104F25D  +
***
sub dword ptr [esp+4] 8 +
jmp loc_104F25D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_104FE0D  +
mov eax [ebp+arg_4] +
mov [esi+3Ch] eax +
mov dword ptr [esi] offset off_107E0E0 +
mov dword ptr [esi+4] offset off_10531D0 +
mov dword ptr [esi+8] offset off_104EFC4 +
mov dword ptr [esi+0Ch] offset off_104EFB0 +
mov dword ptr [esi+10h] offset off_104EF94 +
mov dword ptr [esi+14h] offset off_1013888 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_C] +
mov ebx 8007000Eh +
mov [edi] esi +
cmp [ebp+arg_4] esi +
jz loc_107E152  +
push 40h  +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_107E13D  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
call sub_107E097  +
mov esi eax +
test esi esi +
jz loc_107E152  +
mov eax [esi] +
push edi  +
push [ebp+arg_8]  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_104FE0D  +
mov eax [ebp+arg_4] +
mov [esi+3Ch] eax +
mov dword ptr [esi] offset off_107E1A8 +
mov dword ptr [esi+4] offset off_10531D0 +
mov dword ptr [esi+8] offset off_104EFC4 +
mov dword ptr [esi+0Ch] offset off_104EFB0 +
mov dword ptr [esi+10h] offset off_104EF94 +
mov dword ptr [esi+14h] offset off_1013888 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
xor esi esi +
push 40h  +
mov ebx 8007000Eh +
mov [edi] esi +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_107E200  +
push [ebp+arg_C]  +
mov ecx eax +
push [ebp+arg_0]  +
call sub_107E160  +
mov esi eax +
test esi esi +
jz loc_107E215  +
mov eax [esi] +
push edi  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+28h]  +
mov eax [ebp+8] +
push dword ptr [ebp+24h]  +
mov eax [eax+10h] +
push dword ptr [ebp+20h]  +
mov ecx [eax] +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+18h]  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+28h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+2Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+30h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+3Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
push edi  +
push [ebp+arg_18]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+40h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+44h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+50h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
mov ecx [eax] +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+54h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
push edi  +
push [ebp+arg_18]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+5Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
push [ebp+arg_8]  +
mov eax [eax+10h] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+60h]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
mov ecx [eax] +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+64h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+68h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
push esi  +
mov ecx [eax] +
push edi  +
push [ebp+arg_14]  +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+6Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
mov eax [eax+0Ch] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+0Ch] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+0Ch] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+14h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+14h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
mov dword ptr [esi] offset off_1010808 +
mov dword ptr [esi+4] offset off_1052A54 +
mov dword ptr [esi+8] offset off_1034D4C +
call sub_1002BEE  +
lea eax [esi+18h] +
push eax  +
call sub_1002BEE  +
mov esi [esi+10h] +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_18] 0 +
jz loc_107E657  +
push [ebp+arg_0]  +
call ds:GetLayout  +
cmp eax 0FFFFFFFFh +
jz loc_107E657  +
test al 1 +
jz loc_107E657  +
dec [ebp+arg_4]  +
pop ebp  +
jmp ds:ExtTextOutW  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
and [ebp+var_C] esi +
push edi  +
mov [ebp+var_4] eax +
mov eax [ebp+var_C] +
cmp eax [ebp+arg_4] +
jnb loc_107E6DA  +
lea eax [ebp+pv] +
push eax  +
push 0  +
push 5000h  +
push [ebp+var_4]  +
call SHGetKnownFolderPath  +
test eax eax +
jl loc_107E6CF  +
push 0  +
push [ebp+pszFile2]  +
push [ebp+pv]  +
call PathCommonPrefixW  +
mov ebx eax +
test ebx ebx +
jz loc_107E6C7  +
push [ebp+pv]  +
call ds:lstrlenW  +
cmp ebx eax +
jnz loc_107E6C7  +
mov esi [ebp+var_4] +
mov edi [ebp+arg_C] +
mov eax [ebp+arg_8] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
mov [eax] ebx +
inc esi  +
push [ebp+pv]  +
call CoTaskMemFree  +
inc [ebp+var_C]  +
add [ebp+var_4] 10h +
test esi esi +
jz loc_107E676  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1060h +
call sub_10545E1  +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push eax  +
push 824h  +
lea eax [ebp+pszFile2] +
push eax  +
call sub_100665F  +
lea eax [ebp+var_105C] +
push eax  +
lea eax [ebp+var_1060] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+pszFile2] +
push eax  +
mov eax edi +
call sub_107E663  +
test eax eax +
jz loc_107E76A  +
push [ebp+arg_4]  +
lea eax [ebp+var_105C] +
push esi  +
push eax  +
call SHLWAPI_24  +
mov eax [ebp+var_1060] +
lea eax [ebp+eax*2+pszFile2] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1010E3B  +
jmp loc_107E77A  +
lea eax [ebp+pszFile2] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100665F  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push 3  +
push offset unk_10B2868  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_107E6E8  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
mov eax esi +
push edi  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_107E7D2  +
sub eax edx +
sar eax 1 +
cmp eax 27h +
jbe loc_107E82D  +
lea eax [ebp+var_14] +
push eax  +
push esi  +
call GUIDFromStringW  +
test eax eax +
jz loc_107E82D  +
and [ebp+pv] 0 +
lea eax [ebp+pv] +
push eax  +
push 0  +
push 5000h  +
lea eax [ebp+var_14] +
push eax  +
call SHGetKnownFolderPath  +
test eax eax +
jl loc_107E82D  +
lea eax [esi+4Eh] +
push eax  +
push [ebp+pv]  +
push [ebp+arg_4]  +
push ebx  +
call sub_10789E6  +
push [ebp+pv]  +
mov edi eax +
call CoTaskMemFree  +
test edi edi +
jge loc_107E839  +
push esi  +
push [ebp+arg_4]  +
push ebx  +
call sub_100665F  +
mov edi eax +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
or ecx 0FFFFFFFFh +
sub ecx [ebp+arg_8] +
cmp [ebp+arg_4] 0 +
jz loc_107E883  +
mov eax [ebp+arg_0] +
push esi  +
movzx edx byte ptr [eax] +
dec [ebp+arg_4]  +
movzx esi cl +
xor edx esi +
shr ecx 8 +
xor ecx ds:dword_107E890[edx*4] +
inc eax  +
cmp [ebp+arg_4] 0 +
jnz loc_107E866  +
pop esi  +
or eax 0FFFFFFFFh +
sub eax ecx +
pop ebp  +
retn 0Ch  +
***
mov eax ecx +
xor ecx ecx +
mov [eax] cx +
mov [eax+84h] eax +
mov dword ptr [eax+88h] 41h +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+84h] +
mov eax [edi] +
cmp eax esi +
jz loc_107ECCB  +
push eax  +
call ds:LocalFree  +
mov [edi] esi +
xor eax eax +
pop edi  +
mov [esi] ax +
mov dword ptr [esi+88h] 41h +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor ecx ecx +
xor eax eax +
cmp edx ecx +
jz loc_107ECFC  +
cmp edx 7FFFFFFFh +
jbe loc_107ED01  +
mov eax 80070057h +
cmp eax ecx +
push edi  +
mov edi [ebp+arg_0] +
jl loc_107ED32  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_107ED23  +
cmp [eax] cx +
jz loc_107ED1F  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_107ED15  +
cmp esi ecx +
jnz loc_107ED2A  +
mov ebx 80070057h +
jmp loc_107ED2E  +
mov ecx edx +
sub ecx esi +
pop esi  +
mov eax ebx +
pop ebx  +
test eax eax +
jl loc_107ED58  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_107ED46  +
mov eax 80070057h +
jmp loc_107ED58  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1007F97  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_107ED78  +
cmp ecx 7FFFFFFFh +
jbe loc_107ED7D  +
mov eax 80070057h +
test eax eax +
jl loc_107EDB8  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call _vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_107EDA8  +
cmp eax esi +
ja loc_107EDA8  +
jz loc_107EDAD  +
jmp loc_107EDB3  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+uBytes]  +
push [ebp+arg_0]  +
push 40h  +
push 0  +
call sub_1010108  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+88h] +
mov ebx eax +
jmp loc_107EDF9  +
shl ebx 2 +
cmp [ebp+uBytes] ebx +
ja loc_107EDF6  +
cmp ebx eax +
jz loc_107EE3B  +
lea eax [ebp+uBytes] +
push eax  +
push ebx  +
call sub_107EDC1  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_107EE3B  +
push edi  +
lea edi [esi+84h] +
push dword ptr [edi]  +
push ebx  +
push [ebp+uBytes]  +
call sub_100665F  +
mov ecx esi +
mov [ebp+var_4] eax +
call sub_107ECB2  +
mov eax [ebp+uBytes] +
mov [edi] eax +
mov [esi+88h] ebx +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpString] +
xor eax eax +
push esi  +
mov esi [ebp+arg_4] +
inc eax  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_107EEA7  +
cmp word ptr [ebx] 0 +
jz loc_107EEA7  +
test esi esi +
jz loc_107EEA7  +
cmp esi 0FFFFFFFFh +
jnz loc_107EE81  +
push ebx  +
call ds:lstrlenW  +
mov esi eax +
test esi esi +
jnz loc_107EE85  +
call sub_101AE40  +
test esi esi +
jz loc_107EEA7  +
lea eax [esi+1] +
push eax  +
mov ecx edi +
call sub_107EDDE  +
test eax eax +
jl loc_107EEA7  +
push esi  +
push ebx  +
push dword ptr [edi+88h]  +
push dword ptr [edi+84h]  +
call sub_101CD02  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_107ECB2  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+lpString]  +
call sub_107EE49  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+lpString] 0 +
push ebx  +
push esi  +
mov esi ecx +
jz loc_107EF33  +
push edi  +
push dword ptr [esi+84h]  +
mov edi ds:lstrlenW +
call edi  +
mov ebx [ebp+arg_4] +
mov [ebp+var_4] eax +
cmp ebx 0FFFFFFFFh +
jnz loc_107EF08  +
push [ebp+lpString]  +
call edi  +
mov ebx eax +
mov eax [ebp+var_4] +
lea eax [eax+ebx+1] +
push eax  +
mov ecx esi +
call sub_107EDDE  +
pop edi  +
test eax eax +
jl loc_107EF38  +
push ebx  +
push [ebp+lpString]  +
push dword ptr [esi+88h]  +
push dword ptr [esi+84h]  +
call sub_107ECE4  +
jmp loc_107EF38  +
mov eax 80070057h +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push 250h  +
lea eax [ebx+20h] +
push 0  +
push eax  +
mov dword ptr [ebx] offset off_107EF84 +
mov dword ptr [ebx+4] 1 +
call memset  +
xor eax eax +
lea edi [ebx+8] +
stos   +
stos   +
lea edi [ebx+10h] +
mov esi offset dword_1069058 +
movs   +
movs   +
movs   +
add esp 0Ch +
movs   +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_107EFCC  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_107F00A  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
add edi 20h +
mov ecx 94h +
movs   +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
add esi 20h +
mov ecx 94h +
movs   +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [eax+8] ecx +
mov ecx [ebp+arg_8] +
mov [eax+0Ch] ecx +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax+8] +
mov ecx [ebp+arg_4] +
mov [ecx] edx +
mov eax [eax+0Ch] +
mov [ecx+4] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
add edi 10h +
movs   +
movs   +
movs   +
movs   +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
add eax 10h +
push 4  +
pop ecx  +
mov edi eax +
mov esi offset dword_1069058 +
xor edx edx +
cmps   +
mov edi [ebp+arg_4] +
jnz loc_107F0EC  +
mov esi offset dword_100D864 +
mov eax 80004005h +
jmp loc_107F0F0  +
mov esi eax +
xor eax eax +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor esi esi +
push 270h  +
mov [edi] esi +
mov ebx 8007000Eh +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_107F12B  +
mov ecx eax +
call sub_107EF43  +
mov esi eax +
test esi esi +
jz loc_107F140  +
mov eax [esi] +
push edi  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_8] +
push eax  +
push offset loc_107F1E4  +
call sub_107F0FF  +
mov edi eax +
test edi edi +
jl loc_107F1AE  +
cmp [ebp+arg_4] 0 +
jz loc_107F181  +
mov eax [ebp+arg_8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push esi  +
push 1000h  +
push [ebp+arg_0]  +
call sub_1016E25  +
mov edi eax +
test edi edi +
jl loc_107F1A5  +
push [ebp+arg_8]  +
mov eax [esi] +
mov ecx [eax] +
push offset aFileSystemBind  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
call sub_107F14E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
xor esi esi +
mov [ebx] esi +
push edi  +
cmp [eax] si +
jz loc_107F272  +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_4]  +
call sub_107F1F9  +
mov edi eax +
cmp edi esi +
jl loc_107F277  +
test [ebp+arg_8] 1 +
jz loc_107F253  +
push esi  +
push offset aParseTranslate  +
push [ebp+arg_C]  +
call sub_107FC5D  +
mov edi eax +
cmp edi esi +
jl loc_107F267  +
push esi  +
push esi  +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
call SHParseDisplayName  +
mov edi eax +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_107F277  +
mov edi 80070057h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 254h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
push 24Ch  +
lea eax [ebp+var_250] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+arg_4] +
add esp 0Ch +
push edi  +
push [ebp+arg_8]  +
mov [ebp+var_254] eax +
lea eax [ebp+var_254] +
push eax  +
push esi  +
call sub_107F214  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_107F2B5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_107F317  +
mov esi eax +
test esi esi +
jl loc_107F368  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call SHCreateItemFromIDList  +
push [ebp+arg_4]  +
mov esi eax +
call SHELL32_155  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
and dword ptr [ebx] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
lea ecx [ebp+arg_0] +
push ecx  +
push offset nullsub_7  +
push offset dword_1068F0C  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_107F3D7  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jl loc_107F3CA  +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
mov eax [ebp+arg_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jge loc_107F3E2  +
mov eax [esi] +
push ebx  +
push [ebp+arg_8]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
and dword ptr [esi] 0 +
push edi  +
lea eax [ebp+arg_8] +
push eax  +
push offset dword_100DC8C  +
push 0  +
push [ebp+arg_0]  +
call sub_107F374  +
mov edi eax +
test edi edi +
jl loc_107F42E  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push esi  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_107F46B  +
test esi esi +
jz loc_107F46B  +
push [ebp+arg_8]  +
push edi  +
push esi  +
call sub_104C2B4  +
push esi  +
mov ebx eax +
call SHELL32_155  +
push edi  +
call SHELL32_155  +
jmp loc_107F488  +
xor ebx ebx +
test esi esi +
jz loc_107F478  +
mov eax [ebp+arg_8] +
mov [eax] esi +
jmp loc_107F488  +
test edi edi +
jz loc_107F483  +
mov eax [ebp+arg_8] +
mov [eax] edi +
jmp loc_107F488  +
mov ebx 80070057h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
push dword ptr [eax]  +
call sub_107F43B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+ppidl] +
mov eax [esi] +
push edi  +
push offset dword_107F508  +
push esi  +
call dword ptr [eax+2Ch]  +
xor edi edi +
lea eax [ebp+ppidl] +
push eax  +
push ds:dword_107F50C[edi]  +
push 0  +
call SHGetSpecialFolderLocation  +
test eax eax +
jl loc_107F4F5  +
cmp [ebp+ppidl] 0 +
jz loc_107F4F5  +
push [ebp+ppidl]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+2Ch]  +
push [ebp+ppidl]  +
call SHELL32_155  +
add edi 4 +
cmp edi 0Ch +
jb loc_107F4C9  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp ecx 2 +
jbe loc_107F540  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_10778FE  +
mov esi eax +
test esi esi +
jl loc_107F67B  +
test [ebp+arg_10] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+var_4] edi +
mov [ebp+var_8] ebx +
jz loc_107F591  +
cmp [ebp+arg_14] 0 +
jnz loc_107F591  +
mov [ebp+arg_14] offset byte_1002CD0 +
xor esi esi +
test [ebp+arg_10] 0FFFFE000h +
jz loc_107F5B3  +
mov esi 80070057h +
test ecx ecx +
jz loc_107F634  +
xor eax eax +
mov [edi] ax +
jmp loc_107F634  +
test ecx ecx +
jnz loc_107F5D4  +
mov eax [ebp+arg_14] +
cmp [eax] si +
jz loc_107F665  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_107F634  +
lea eax [ebp+arg_18] +
push eax  +
push [ebp+arg_14]  +
lea ebx [ecx-1] +
push ebx  +
push edi  +
xor esi esi +
call _vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_107F5F6  +
cmp eax ebx +
ja loc_107F5F6  +
jnz loc_107F603  +
jmp loc_107F5FB  +
mov esi 8007007Ah +
xor eax eax +
mov [edi+ebx*2] ax +
mov eax ebx +
mov ebx [ebp+arg_4] +
sub ebx eax +
lea ecx [edi+eax*2] +
mov [ebp+var_4] ecx +
mov [ebp+var_8] ebx +
test esi esi +
jl loc_107F631  +
mov eax [ebp+arg_10] +
test eax 200h +
jz loc_107F665  +
cmp ebx 1 +
jbe loc_107F665  +
push [ebp+var_4]  +
lea ecx [ebx+ebx] +
call sub_107F51D  +
jmp loc_107F665  +
mov ecx [ebp+arg_4] +
test [ebp+arg_10] 1C00h +
jz loc_107F659  +
test ecx ecx +
jz loc_107F659  +
push [ebp+arg_10]  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_8] +
xor ecx ecx +
call sub_1073177  +
mov ebx [ebp+var_8] +
test esi esi +
jge loc_107F665  +
cmp esi 8007007Ah +
jnz loc_107F67A  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_107F671  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_107F67A  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call CoTaskMemFree  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_10] +
push esi  +
push edi  +
xor edi edi +
mov [eax] edi +
lea eax [ebp+arg_0] +
push eax  +
cmp [ebp+arg_0] edi +
jz loc_107F6C0  +
push [ebp+arg_0]  +
call SHGetIDListFromObject  +
jmp loc_107F6C8  +
push [ebp+arg_4]  +
call sub_10082A8  +
mov esi eax +
cmp esi edi +
jl loc_107F743  +
push ebx  +
xor ebx ebx +
cmp ebx [ebp+arg_8] +
ja loc_107F72B  +
push [ebp+arg_0]  +
call SHELL32_16  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
call sub_107D542  +
mov esi eax +
cmp esi edi +
jl loc_107F726  +
mov ecx [ebp+arg_C] +
push edi  +
push [ebp+arg_4]  +
push edi  +
call sub_10080DF  +
mov esi eax +
cmp esi edi +
jl loc_107F71E  +
push [ebp+arg_0]  +
mov [ebp+arg_4] edi +
call SHELL32_17  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
push [ebp+arg_4]  +
call SHELL32_155  +
inc ebx  +
cmp esi edi +
jge loc_107F6D1  +
cmp esi edi +
pop ebx  +
jl loc_107F73B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
mov [ebp+arg_0] edi +
push [ebp+arg_0]  +
call SHELL32_155  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_28] eax +
mov eax [ebp+arg_C] +
xor edx edx +
mov [ebp+var_24] eax +
mov [eax] edx +
lea eax [ebp+var_20] +
push eax  +
mov ebx offset dword_104BAB8 +
push ebx  +
push edx  +
push ecx  +
push edx  +
mov [ebp+var_2C] ecx +
call SHBindToObject  +
mov esi eax +
xor ecx ecx +
cmp esi ecx +
jl loc_107F854  +
cmp [ebp+var_28] ecx +
jz loc_107F7DF  +
push ecx  +
push dword ptr [edi]  +
call ds:off_1002B68  +
mov ecx [ebp+var_20] +
mov edx [ecx] +
lea esi [ebp+var_1C] +
push esi  +
push [ebp+var_28]  +
push eax  +
push ecx  +
call dword ptr [edx+58h]  +
mov esi eax +
test esi esi +
jl loc_107F84B  +
push [ebp+var_24]  +
push [ebp+var_1C]  +
push [ebp+var_2C]  +
call sub_104C2B4  +
push [ebp+var_1C]  +
mov esi eax +
call SHELL32_155  +
jmp loc_107F84B  +
mov edi [edi] +
cmp edi ecx +
jz loc_107F7E9  +
mov eax [edi] +
jmp loc_107F7EB  +
xor eax eax +
cmp eax 1 +
jnz loc_107F83E  +
push ecx  +
push edi  +
call ds:off_1002B68  +
lea ecx [ebp+var_1C] +
push ecx  +
push ebx  +
push 0  +
push eax  +
push [ebp+var_20]  +
call SHBindToObject  +
mov esi eax +
test esi esi +
jl loc_107F84B  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+64h]  +
mov esi eax +
test esi esi +
jl loc_107F833  +
push [ebp+var_24]  +
mov eax [ebp+var_20] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+60h]  +
mov esi eax +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_107F84B  +
push [ebp+var_24]  +
push [ebp+var_2C]  +
call sub_10082A8  +
mov esi eax +
mov eax [ebp+var_20] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push [ebp+arg_0]  +
call sub_107F750  +
mov edi eax +
test edi edi +
jl loc_107F921  +
mov [ebp+arg_8] 1 +
mov eax [esi] +
test eax eax +
jz loc_107F8A8  +
mov eax [eax] +
jmp loc_107F8AA  +
xor eax eax +
cmp [ebp+arg_8] eax +
jge loc_107F909  +
test edi edi +
jl loc_107F919  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_104BAB8  +
push 0  +
push [ebp+arg_4]  +
push 0  +
call SHBindToObject  +
mov edi eax +
test edi edi +
jl loc_107F904  +
push [ebp+arg_8]  +
push dword ptr [esi]  +
call ds:off_1002B68  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
lea edi [ebp+var_4] +
push edi  +
push eax  +
push ecx  +
call dword ptr [edx+5Ch]  +
mov edi eax +
test edi edi +
jl loc_107F8FB  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+var_4]  +
call sub_107F496  +
mov edi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc [ebp+arg_8]  +
jmp loc_107F89E  +
test edi edi +
jl loc_107F919  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_C] +
and [ebp+arg_4] 0 +
mov [ecx] eax +
push [ebp+arg_4]  +
call SHELL32_155  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
and dword ptr [edi] 0 +
mov eax [esi] +
lea ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_4]  +
mov ebx 80004005h +
push esi  +
call dword ptr [eax+54h]  +
test eax eax +
jl loc_107F99E  +
cmp [ebp+arg_C] 2 +
jnz loc_107F99E  +
mov eax [esi] +
lea ecx [ebp+arg_4] +
push ecx  +
push offset dword_104BB14  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+14h]  +
test eax eax +
jl loc_107F99E  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_107F995  +
mov eax [ebp+arg_0] +
test [ebp+arg_8] eax +
jz loc_107F995  +
mov eax [ebp+arg_4] +
xor ebx ebx +
mov [edi] eax +
jmp loc_107F99E  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
and dword ptr [ebx] 0 +
and [ebp+arg_C] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea eax [edi+1] +
push eax  +
lea ecx [ebp+arg_C] +
call sub_100801C  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_107FA23  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push edi  +
push 0  +
push [ebp+arg_0]  +
call sub_107F69F  +
mov esi eax +
test esi esi +
jl loc_107FA14  +
push ebx  +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_107F86C  +
push [ebp+arg_4]  +
mov esi eax +
call SHELL32_155  +
push 0  +
push offset loc_107F686  +
lea ecx [ebp+arg_C] +
call sub_100831C  +
lea ecx [ebp+arg_C] +
call sub_10082DC  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset stru_1002CB4  +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_107FABC  +
cmp [ebp+arg_4] 0 +
jz loc_107FABC  +
cmp eax [ebp+arg_4] +
jnz loc_107FA74  +
xor eax eax +
inc eax  +
jmp locret_107FABE  +
and [ebp+arg_0] 0 +
and [ebp+var_4] 0 +
lea ecx [ebp+arg_0] +
push ecx  +
push eax  +
call sub_107FA39  +
test eax eax +
jl loc_107FABC  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
call sub_107FA39  +
mov esi eax +
test esi esi +
jl loc_107FAA6  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test esi esi +
pop esi  +
jl loc_107FABC  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_4] +
jz loc_107FA6F  +
xor eax eax +
leave   +
retn 8  +
***
mov eax ecx +
and dword ptr [eax+10h] 0 +
mov dword ptr [eax] offset off_1035384 +
mov dword ptr [eax+4] offset off_10690C0 +
mov dword ptr [eax+8] offset off_1035398 +
mov dword ptr [eax+0Ch] 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_107FB0C  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+0Ch]  +
mov eax [eax+0Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+0Ch]  +
mov eax [ecx+0Ch] +
test eax eax +
jg loc_107FB63  +
push ecx  +
call sub_1002BCA  +
pop ecx  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+10h] +
mov edx [ebp+0Ch] +
mov [edx] ecx +
mov eax [eax+10h] +
neg eax  +
sbb eax eax +
and eax 7FFFBFFFh +
add eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
add esi 10h +
movs   +
movs   +
movs   +
movs   +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+1Ch] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 4 +
jmp loc_107FB48  +
***
sub dword ptr [esp+4] 8 +
jmp loc_107FB48  +
***
sub dword ptr [esp+4] 4 +
jmp loc_107FB31  +
***
sub dword ptr [esp+4] 8 +
jmp loc_107FB31  +
***
sub dword ptr [esp+4] 4 +
jmp loc_107FAEE  +
***
sub dword ptr [esp+4] 8 +
jmp loc_107FAEE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [eax] offset off_1035384 +
mov dword ptr [eax+4] offset off_10690C0 +
mov dword ptr [eax+8] offset off_1035398 +
mov dword ptr [eax+0Ch] 1 +
mov [eax+10h] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jnz loc_107FCB0  +
push 28h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_107FC97  +
mov ecx eax +
call sub_107FAC7  +
jmp loc_107FC99  +
xor eax eax +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
mov [ebp+var_8] eax +
js loc_107FCC3  +
mov ecx [edi] +
push eax  +
push ebx  +
push edi  +
call dword ptr [ecx+24h]  +
mov esi eax +
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov [esi] eax +
test eax eax +
jz loc_107FCF6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_107FD04  +
push esi  +
push 0  +
call CreateBindCtx  +
mov edi eax +
test edi edi +
jl loc_107FD1D  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [esi]  +
call sub_107FC5D  +
mov edi eax +
test edi edi +
jge loc_107FD1D  +
push esi  +
call sub_1002BEE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 28h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_107FD4B  +
push [ebp+arg_4]  +
mov ecx eax +
call sub_107FC2C  +
mov edi eax +
jmp loc_107FD4D  +
xor edi edi +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_107FD7C  +
push [ebp+arg_8]  +
push edi  +
push offset aUiDuringBindin  +
push [ebp+arg_0]  +
call sub_107FCDB  +
mov esi eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
jmp loc_107FD82  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
inc edi  +
xor esi esi +
cmp esi 0Ch +
jnb loc_107FDEB  +
push 0FFFFFFFFh  +
push ds:off_107FDF4[esi]  +
push 0FFFFFFFFh  +
push [ebp+lpString1]  +
push 0  +
push 7Fh  +
call ds:CompareStringW  +
cmp eax 2 +
jnz loc_107FDE4  +
xor edi edi +
add esi 4 +
test edi edi +
jnz loc_107FDC1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_14] +
mov edx [ebp+arg_10] +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_18] ecx +
mov ecx [ebp+arg_18] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_1C] ecx +
mov [ebp+var_C] esi +
mov [ebp+var_8] edx +
test edx edx +
jbe loc_107FF72  +
movzx ecx word ptr [eax] +
cmp ecx 13h +
jg loc_107FF14  +
cmp ecx 11h +
jge loc_107FF4D  +
cmp ecx 2 +
jl loc_107FF25  +
cmp ecx 3 +
jle loc_107FE7D  +
cmp ecx 5 +
jz loc_107FEF8  +
cmp ecx 0Bh +
jz loc_107FECA  +
cmp ecx 10h +
jnz loc_107FF25  +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
call ds:PropVariantToInt64  +
test eax eax +
jl loc_107FEB7  +
push ebx  +
push [ebp+var_10]  +
push [ebp+var_14]  +
push edi  +
push offset aSI64dS  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_10]  +
push esi  +
call sub_107F54B  +
add esp 28h +
test eax eax +
jge loc_107FF77  +
xor ecx ecx +
mov [esi] cx +
mov ecx [ebp+arg_10] +
mov [ebp+var_C] esi +
mov [ebp+var_8] ecx +
jmp loc_107FF77  +
cmp word ptr [eax+8] 0 +
mov eax offset aTrue +
jnz loc_107FEDB  +
mov eax offset aFalse +
push eax  +
push edi  +
push offset aSS_1  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push edx  +
push esi  +
call sub_107F54B  +
add esp 20h +
jmp loc_107FEAF  +
fld  qword ptr [eax+8] +
push ebx  +
push ecx  +
push ecx  +
fstp  [esp+34h+var_34] +
push edi  +
push offset aSGS  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push edx  +
jmp loc_107FEA6  +
sub ecx 14h +
jz loc_107FE7D  +
dec ecx  +
jz loc_107FF4D  +
sub ecx 0Ah +
jz loc_107FF2C  +
mov eax 80004005h +
jmp loc_107FEB7  +
push dword ptr [eax+8]  +
lea eax [ebp+var_8] +
push offset aS  +
push 0  +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push edx  +
push esi  +
call sub_107F54B  +
add esp 1Ch +
jmp loc_107FEAF  +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
call ds:PropVariantToUInt64  +
test eax eax +
jl loc_107FEB7  +
push ebx  +
push [ebp+var_10]  +
push [ebp+var_14]  +
push edi  +
push offset aSI64uS  +
jmp loc_107FE99  +
mov eax 8007007Ah +
mov ecx [ebp+var_18] +
pop edi  +
pop esi  +
pop ebx  +
test ecx ecx +
jz loc_107FF86  +
mov edx [ebp+var_C] +
mov [ecx] edx +
mov ecx [ebp+var_1C] +
test ecx ecx +
jz loc_107FF92  +
mov edx [ebp+var_8] +
mov [ecx] edx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 844h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_840] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_844] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_834] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_18] +
push esi  +
mov [ebp+var_838] eax +
mov eax [ebp+arg_14] +
push edi  +
mov [ebp+lpString1] eax +
lea eax [ebp+var_80C] +
push eax  +
xor esi esi +
push offset dword_104BB34  +
mov [ebp+var_83C] ebx +
mov [ebx] esi +
call SHELL32_849  +
mov edi eax +
cmp edi esi +
jl loc_10801D8  +
mov [ebp+var_810] esi +
mov edi offset byte_1002CD0 +
cmp [ebp+lpString1] esi +
jz loc_1080161  +
push [ebp+lpString1]  +
call sub_107FDB5  +
test eax eax +
jz loc_1080161  +
push esi  +
push esi  +
push 400h  +
lea eax [ebp+var_804] +
push eax  +
push edi  +
push offset loc_10801EC  +
push [ebp+var_838]  +
call sub_107FE05  +
test eax eax +
jl loc_1080161  +
push 1Fh  +
pop eax  +
lea edx [ebp+lpString1] +
push edx  +
mov ebx offset dword_104BB24 +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
push edi  +
push [ebp+lpString1]  +
lea edx [ebp+var_820] +
push edx  +
push [ebp+arg_C]  +
mov word ptr [ebp+var_820] ax +
push [ebp+var_834]  +
lea eax [ebp+var_804] +
mov [ebp+var_818] eax +
mov eax [ebp+var_80C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
mov edi eax +
cmp edi esi +
jl loc_10801CC  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
mov eax [ebp+var_80C] +
mov ecx [eax] +
lea edx [ebp+var_810] +
push edx  +
push ebx  +
lea edx [ebp+SystemTime] +
push edx  +
push 1  +
push [ebp+lpString1]  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov edi eax +
mov eax [ebp+lpString1] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ebx [ebp+var_83C] +
jmp loc_1080196  +
mov eax [ebp+var_80C] +
mov ecx [eax] +
lea edx [ebp+var_810] +
push edx  +
push offset dword_104BB24  +
push 8  +
push esi  +
push esi  +
push esi  +
push edi  +
push [ebp+lpString1]  +
push [ebp+var_838]  +
push [ebp+arg_C]  +
push [ebp+var_834]  +
push eax  +
call dword ptr [ecx+38h]  +
mov edi eax +
cmp edi esi +
jl loc_10801CC  +
push ebx  +
push offset dword_104BB14  +
push [ebp+var_810]  +
push esi  +
push [ebp+var_834]  +
push [ebp+var_844]  +
push [ebp+var_840]  +
call SHELL32_818  +
mov edi eax +
mov eax [ebp+var_810] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_80C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_14]  +
push 0  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1080009  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_108022C  +
cmp ecx [ebp+arg_0] +
jbe loc_1080231  +
mov eax 80070057h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_4]  +
mov ecx edx +
mov edi eax +
call sub_108021C  +
test eax eax +
jl loc_108025A  +
mov eax [ebp+arg_0] +
call sub_107BE00  +
jmp loc_108025D  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
mov ecx 80070057h +
jz loc_1080283  +
cmp edx 7FFFFFFFh +
jbe loc_1080285  +
mov eax ecx +
test eax eax +
jl loc_10802AF  +
mov eax [ebp+arg_C] +
shr eax 1 +
cmp eax 7FFFFFFEh +
jbe loc_10802A1  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_10802AF  +
mov ecx [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
push 0  +
call sub_1007F97  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi 7FFFFFFFh +
push edi  +
shr esi 1 +
push ebx  +
lea eax [ebp+arg_4] +
mov edx esi +
call sub_108023A  +
test eax eax +
jl loc_10802F2  +
mov eax [ebp+arg_4] +
push edi  +
mov edx esi +
sub edx eax +
lea ecx [ebx+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1007F97  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
shr esi 1 +
push edi  +
lea eax [ebp+arg_4] +
mov edx esi +
call sub_108023A  +
test eax eax +
jl loc_1080349  +
mov eax [ebp+arg_C] +
shr eax 1 +
cmp eax 7FFFFFFEh +
jbe loc_1080334  +
mov eax 80070057h +
jmp loc_1080349  +
push eax  +
mov eax [ebp+arg_4] +
mov edx esi +
sub edx eax +
lea ecx [edi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1007F97  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub esp 24h +
push ebx  +
xor ebx ebx +
push edi  +
mov edi 80070057h +
mov [eax] ebx +
cmp [ebp+Sids] ebx +
jz loc_1080498  +
xor eax eax +
mov [ebp+ObjectAttributes.Length] ebx +
lea edi [ebp+ObjectAttributes.RootDirectory] +
stos   +
stos   +
stos   +
stos   +
push esi  +
stos   +
lea eax [ebp+ObjectHandle] +
push eax  +
push 800h  +
lea eax [ebp+ObjectAttributes] +
push eax  +
push ebx  +
mov [ebp+ObjectHandle] ebx +
call LsaOpenPolicy  +
mov edi eax +
mov esi 10000000h +
or edi esi +
jl loc_1080497  +
lea eax [ebp+Names] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+Sids] +
push eax  +
push 1  +
push [ebp+ObjectHandle]  +
mov [ebp+Buffer] ebx +
mov [ebp+Names] ebx +
call LsaLookupSids  +
mov edi eax +
or edi esi +
jl loc_108047F  +
mov eax [ebp+Names] +
mov ecx [eax] +
cmp ecx 7 +
jz loc_108047A  +
cmp ecx 8 +
jz loc_108047A  +
movzx esi word ptr [eax+4] +
mov eax [eax+0Ch] +
inc esi  +
inc esi  +
cmp eax ebx +
jl loc_1080401  +
mov ecx [ebp+Buffer] +
imul eax eax +
mov ecx [ecx+4] +
movzx eax word ptr [eax+ecx] +
lea esi [esi+eax+2] +
push esi  +
call ds:__imp_CoTaskMemAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_108046C  +
mov eax [ebp+Names] +
cmp dword ptr [eax+0Ch] 0 +
jl loc_108044A  +
mov eax [eax+0Ch] +
mov ecx [ebp+Buffer] +
imul eax eax +
mov ecx [ecx+4] +
add eax ecx +
movzx ecx word ptr [eax] +
push ecx  +
push dword ptr [eax+4]  +
push esi  +
push ebx  +
call sub_1080267  +
mov edi eax +
test edi edi +
jl loc_1080471  +
push offset dword_101D038  +
push esi  +
push ebx  +
call sub_10802B8  +
mov edi eax +
mov eax [ebp+Names] +
test edi edi +
jl loc_1080471  +
movzx ecx word ptr [eax+4] +
push ecx  +
push dword ptr [eax+8]  +
push esi  +
push ebx  +
call sub_10802FE  +
mov edi eax +
test edi edi +
jl loc_1080471  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
xor ebx ebx +
jmp loc_1080471  +
mov edi 8007000Eh +
push ebx  +
call ds:__imp_CoTaskMemFree  +
jmp loc_108047F  +
mov edi 80004005h +
push [ebp+Buffer]  +
call LsaFreeMemory  +
push [ebp+Names]  +
call LsaFreeMemory  +
push [ebp+ObjectHandle]  +
call LsaClose  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
xor esi esi +
push esi  +
push 2  +
push esi  +
mov [ebx] esi +
call sub_101BAE2  +
mov edi eax +
cmp edi esi +
jl loc_108051B  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ecx ecx +
mov edi 80004005h +
test eax eax +
jbe loc_1080514  +
lea edx [esi+8] +
test dword ptr [edx] 0C0000000h +
jnz loc_10804EC  +
inc ecx  +
add edx 8 +
cmp ecx eax +
jnb loc_1080514  +
jmp loc_10804DA  +
push ebx  +
push dword ptr [esi+ecx*8+4]  +
call ConvertSidToStringSidW  +
test eax eax +
jz loc_10804FE  +
xor edi edi +
jmp loc_1080514  +
call ds:__imp_GetLastError  +
test eax eax +
jle loc_1080512  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push esi  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+cb]  +
push [ebp+arg_0]  +
push 1  +
push 0  +
call sub_100EA1A  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jz loc_108058C  +
test byte ptr [ebp+var_8] 10h +
jz loc_108058A  +
test [ebp+var_8] 100h +
jnz loc_108058A  +
xor eax eax +
inc eax  +
jmp loc_108058C  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_10805D1  +
push 0  +
push esi  +
call sub_1077930  +
test eax eax +
jnz loc_10805D1  +
push 4  +
push offset a?  +
push esi  +
call sub_10775D5  +
test eax eax +
jz loc_10805CB  +
jmp loc_10805D1  +
inc esi  +
inc esi  +
cmp word ptr [esi] 5Ch +
jz loc_10805C9  +
push [ebp+arg_C]  +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1078797  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
and dword ptr [edi] 0 +
test eax eax +
jz loc_108064F  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_108064F  +
cmp ecx 8000h +
ja loc_108064F  +
lea edx [eax+ecx*2] +
xor esi esi +
cmp eax edx +
jnb loc_108064F  +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_108063B  +
movzx ecx cx +
cmp ecx 20h +
jz loc_1080633  +
cmp ecx 2Eh +
jz loc_108064B  +
cmp ecx 5Ch +
jnz loc_1080635  +
xor esi esi +
inc eax  +
inc eax  +
cmp eax edx +
jb loc_1080619  +
cmp eax edx +
jnb loc_108064F  +
test esi esi +
jz loc_1080645  +
mov eax esi +
mov [edi] eax +
xor eax eax +
jmp loc_1080654  +
mov esi eax +
jmp loc_1080635  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
test edi edi +
jz loc_10806CE  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1080673  +
sub eax edx +
sar eax 1 +
push esi  +
mov esi eax +
mov eax 100h +
cmp esi eax +
jb loc_1080695  +
jnz loc_10806CB  +
cmp word ptr [edi] 2Eh +
jnz loc_10806CB  +
push 20h  +
push edi  +
call wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10806CB  +
push 5Ch  +
push edi  +
call wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10806CB  +
test esi esi +
jz loc_10806C6  +
push 2Eh  +
add edi 2 +
push edi  +
call wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10806CB  +
xor eax eax +
inc eax  +
jmp loc_10806CD  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_10807DD  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_10807DD  +
cmp ebx 8000h +
ja loc_10807DD  +
push [ebp+arg_8]  +
call sub_108065F  +
test eax eax +
jz loc_10807DD  +
push 4  +
push offset a?  +
push edi  +
call sub_10775D5  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1080731  +
mov eax 104h +
cmp ebx eax +
jbe loc_1080731  +
mov ebx eax +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
push edi  +
call sub_10805ED  +
test eax eax +
jl loc_10807E2  +
push esi  +
mov esi [ebp+arg_0] +
cmp word ptr [esi] 0 +
jnz loc_10807D7  +
mov ecx [ebp+arg_8] +
movzx edx word ptr [ecx] +
test dx dx +
jz loc_10807D3  +
cmp dx 2Eh +
jnz loc_108076A  +
cmp word ptr [ecx+2] 0 +
jz loc_10807D3  +
mov ecx esi +
sub ecx edi +
sar ecx 1 +
mov edi ecx +
mov ecx ebx +
sub ecx edi +
mov [ebp+arg_4] esi +
mov [ebp+arg_0] ecx +
cmp dx 2Eh +
jz loc_108079B  +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push offset dword_10807E8  +
push ecx  +
push esi  +
call sub_10780CE  +
mov ecx [ebp+arg_0] +
test eax eax +
jl loc_10807AB  +
push [ebp+arg_8]  +
push ecx  +
push [ebp+arg_4]  +
call sub_100665F  +
cmp eax 8007007Ah +
jnz loc_10807DA  +
xor ecx ecx +
mov [esi] cx +
cmp [ebp+var_4] ecx +
jnz loc_10807C4  +
cmp ebx 104h +
jmp loc_10807CA  +
cmp ebx 8000h +
jnz loc_10807DA  +
mov eax 800700CEh +
jmp loc_10807DA  +
xor eax eax +
jmp loc_10807DA  +
xor eax eax +
inc eax  +
pop esi  +
jmp loc_10807E2  +
mov eax 80070057h +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 49Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ebx 488h +
push ebx  +
mov [ebp+var_494] eax +
xor edi edi +
lea eax [ebp+var_48C] +
push edi  +
push eax  +
call memset  +
mov eax [esi+8] +
mov [ebp+var_45C] eax +
mov eax [esi+0Ch] +
add esp 0Ch +
mov [ebp+var_48C] ebx +
mov [ebp+var_460] 20000h +
mov [ebp+var_44C] eax +
mov [ebp+var_420] 78h +
mov [ebp+var_41C] 280h +
mov [ebp+var_490] 80004005h +
cmp [ebp+var_494] edi +
jnz loc_108087D  +
mov eax [esi] +
mov [ebp+var_494] eax +
mov ebx 104h +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
push dword ptr [esi+4]  +
call ds:SHLWAPI_460  +
test eax eax +
jz loc_10809F7  +
lea eax [ebp+FileName] +
push eax  +
push edi  +
call ds:SHELL32_165  +
push edi  +
push [ebp+var_494]  +
lea eax [ebp+FileName] +
push ebx  +
push eax  +
call sub_108059D  +
cmp eax edi +
mov [ebp+var_490] eax +
jl loc_10809F7  +
push offset a_etl  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
call sub_10806D8  +
cmp eax edi +
mov [ebp+var_490] eax +
jl loc_10809F7  +
mov ebx ds:StartTraceW +
lea eax [ebp+var_48C] +
push eax  +
push [ebp+var_494]  +
lea eax [ebp+var_49C] +
push eax  +
mov [ebp+var_49C] edi +
mov [ebp+var_498] edi +
call ebx  +
push eax  +
call sub_10502A3  +
mov [ebp+var_490] eax +
cmp eax 80070057h +
jnz loc_1080960  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
test eax eax +
jz loc_1080955  +
lea eax [ebp+var_48C] +
push eax  +
push [ebp+var_494]  +
lea eax [ebp+var_49C] +
push eax  +
call ebx  +
push eax  +
call sub_10502A3  +
jmp loc_108095A  +
call sub_101AE40  +
mov [ebp+var_490] eax +
cmp [ebp+var_490] edi +
jl loc_10809F7  +
mov [ebp+var_494] edi +
cmp [esi+14h] edi +
jbe loc_10809C8  +
xor ebx ebx +
cmp [ebp+var_490] edi +
jl loc_10809D0  +
mov eax [esi+10h] +
push edi  +
push edi  +
push edi  +
push edi  +
add eax ebx +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
push 4  +
push 1  +
push [ebp+var_498]  +
push [ebp+var_49C]  +
push edi  +
push eax  +
call ds:EnableTraceEx  +
push eax  +
call sub_10502A3  +
inc [ebp+var_494]  +
mov [ebp+var_490] eax +
mov eax [ebp+var_494] +
add ebx 18h +
cmp eax [esi+14h] +
jb loc_1080979  +
cmp [ebp+var_490] edi +
jge loc_10809F7  +
lea eax [ebp+var_48C] +
push eax  +
push edi  +
push [ebp+var_498]  +
push [ebp+var_49C]  +
call ds:StopTraceW  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_490] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push offset off_1024ACC  +
call sub_10807F1  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10B3AA4 +
cmp eax 0FFFFFFFFh +
jnz loc_1080A6D  +
push offset aTsappcmp_dll  +
call ds:LoadLibraryA  +
test eax eax +
jz loc_1080A66  +
push offset aGettermsrcompa  +
push eax  +
call ds:__imp_GetProcAddress  +
jmp loc_1080A68  +
xor eax eax +
mov dword_10B3AA4 eax +
test eax eax +
jz loc_1080A74  +
pop ebp  +
jmp eax  +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp [ebp+arg_0] 0 +
jz loc_1080ADF  +
push esi  +
mov esi ds:GetQueuedCompletionStatus +
jmp loc_1080AC7  +
cmp [ebp+var_4] 4 +
jz loc_1080ADE  +
push 0FFFFFFFFh  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call esi  +
test eax eax +
jnz loc_1080AC1  +
pop esi  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push 1  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
call ds:CreateIoCompletionPort  +
mov esi eax +
test esi esi +
jz loc_1080B2B  +
mov eax [ebp+hJob] +
push 8  +
lea ecx [ebp+JobObjectInformation] +
push ecx  +
push 7  +
push eax  +
mov [ebp+JobObjectInformation] eax +
mov [ebp+var_4] esi +
call ds:SetInformationJobObject  +
test eax eax +
jnz loc_1080B2B  +
push esi  +
call ds:CloseHandle  +
xor esi esi +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
call sub_1080546  +
test eax eax +
jz loc_1080B95  +
push 1  +
call ds:SetTermsrvAppInstallMode  +
test eax eax +
jz loc_1080B95  +
push esi  +
mov esi [ebp+pv] +
or dword ptr [esi] 2 +
push 0  +
push 0  +
lea eax [ebp+pv] +
push eax  +
push [ebp+arg_0]  +
inc edi  +
call ds:SHEvaluateSystemCommandTemplate  +
test eax eax +
jl loc_1080B94  +
push 1  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+pv]  +
call sub_1080A3A  +
test [ebp+arg_0] 8000h +
jz loc_1080B8B  +
or dword ptr [esi] 20h +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 688h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push ebx  +
push ebx  +
mov [ebp+var_628] eax +
call ds:CreateJobObjectW  +
mov [ebp+hJob] eax +
cmp eax ebx +
jz loc_1080BDC  +
mov [ebp+var_620] ebx +
jmp loc_1080BEF  +
call sub_101AE40  +
cmp eax ebx +
mov [ebp+var_620] eax +
jl loc_1080E17  +
push [ebp+hJob]  +
call sub_1080AEA  +
mov [ebp+var_640] eax +
cmp eax ebx +
jz loc_1080E0B  +
lea ecx [ebp+ThreadId] +
push ecx  +
push 4  +
push eax  +
push offset sub_1080AAA  +
push ebx  +
push ebx  +
call ds:CreateThread  +
mov [ebp+Handles] eax +
cmp eax ebx +
jnz loc_1080C3C  +
call sub_101AE40  +
cmp eax ebx +
mov [ebp+var_620] eax +
jl loc_1080DFF  +
push esi  +
push edi  +
mov esi 104h +
push esi  +
lea eax [ebp+ApplicationName] +
push eax  +
call ds:GetSystemDirectoryW  +
push [ebp+var_628]  +
mov edi eax +
push offset dword_1080E30  +
call sub_1025B68  +
mov [ebp+var_620] 80004005h +
cmp edi ebx +
jz loc_1080DD2  +
cmp edi esi +
ja loc_1080DD2  +
push ebx  +
push offset aRundll32_exe  +
push esi  +
lea eax [ebp+ApplicationName] +
push eax  +
call sub_108059D  +
test eax eax +
jl loc_1080DD2  +
push [ebp+var_628]  +
lea eax [ebp+CommandLine] +
push 400h  +
push offset aRundll32_exeSh  +
push 208h  +
push eax  +
call sub_10343CA  +
add esp 14h +
test eax eax +
jl loc_1080DD2  +
push 40h  +
lea eax [ebp+StartupInfo.lpReserved] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
mov [ebp+hObject] ebx +
lea edi [ebp-638h] +
stos   +
add esp 0Ch +
stos   +
stos   +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push ebx  +
push ebx  +
push 4  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+CommandLine] +
push eax  +
lea eax [ebp+ApplicationName] +
push eax  +
mov [ebp+StartupInfo.cb] 44h +
call ds:CreateProcessW  +
test eax eax +
jnz loc_1080D31  +
call sub_101AE40  +
cmp eax ebx +
mov [ebp+var_620] eax +
jl loc_1080DD2  +
push [ebp+hObject]  +
push [ebp+hJob]  +
call ds:AssignProcessToJobObject  +
test eax eax +
jz loc_1080D4F  +
mov [ebp+var_620] ebx +
jmp loc_1080D5E  +
call sub_101AE40  +
cmp eax ebx +
mov [ebp+var_620] eax +
jl loc_1080DA6  +
push dword ptr [ebp-638h]  +
mov esi ds:ResumeThread +
call esi  +
push [ebp+Handles]  +
call esi  +
cmp [ebp+arg_4] ebx +
jz loc_1080D87  +
push 0FFFFFFFFh  +
push [ebp+Handles]  +
push ebx  +
call sub_106D7BD  +
push [ebp+var_628]  +
push [ebp+hObject]  +
call ds:GetProcessId  +
push eax  +
push offset dword_1080E40  +
call sub_1026899  +
jmp loc_1080DB4  +
push 5  +
push [ebp+hObject]  +
call ds:TerminateProcess  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-638h]  +
call esi  +
cmp [ebp+var_620] ebx +
jge loc_1080DF1  +
push 5  +
push [ebp+Handles]  +
call ds:TerminateThread  +
push [ebp+var_628]  +
push ebx  +
push offset dword_1080E40  +
call sub_1026899  +
push [ebp+Handles]  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
push [ebp+var_640]  +
call ds:CloseHandle  +
push [ebp+hJob]  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_620] +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1025BE8  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1025BE8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
xor esi esi +
call PowerDeterminePlatformRole  +
cmp eax 2 +
jz loc_1080F47  +
cmp eax 1 +
jnz loc_1080F4E  +
lea eax [ebp+var_50] +
push eax  +
call GetPwrCapabilities  +
test al al +
jz loc_1080F4E  +
cmp [ebp+var_32] 0 +
jz loc_1080F4C  +
cmp [ebp+var_31] 0 +
jnz loc_1080F4C  +
xor esi esi +
inc esi  +
jmp loc_1080F4E  +
xor esi esi +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10B3D9C 0 +
push esi  +
jnz loc_1080FE7  +
xor esi esi +
inc esi  +
push 43h  +
mov dword_10B3D9C esi +
call ds:GetSystemMetrics  +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_10B3D98 eax +
jz loc_1080FEC  +
cmp [ebp+hKey] 0 +
jnz loc_1080FA6  +
call sub_1080F0A  +
test eax eax +
jnz loc_1080FA6  +
xor eax eax +
mov dword_10B3D98 eax +
jmp loc_1080FEC  +
push offset dword_1080FF4  +
mov dword_10B3D98 esi +
call ds:SHLWAPI_618  +
neg eax  +
sbb eax eax +
inc eax  +
mov dword_10B3D98 eax +
jz loc_1080FEC  +
lea eax [ebp+hKey] +
push eax  +
push esi  +
push 0  +
push offset aSoftwareMic_37  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1080F9D  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax dword_10B3D98 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+10h] edi +
jle loc_108110B  +
push dword ptr [esi+edi*4]  +
call ds:__imp_CoTaskMemFree  +
inc edi  +
cmp edi [esi+10h] +
jl loc_10810FC  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+4] +
push eax  +
xor ecx ecx +
push 20019h  +
push ecx  +
push offset aSoftwareMic_38  +
push 80000002h  +
mov [esi] ecx +
mov [eax] ecx +
call ds:RegOpenKeyExW  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push offset aDevicekind  +
push offset aSoftwareMic_39  +
push 80000002h  +
call sub_100F656  +
test eax eax +
jl loc_10811DA  +
mov eax [ebp+var_4] +
and eax 5 +
cmp al 5 +
jnz loc_10811DA  +
xor eax eax +
inc eax  +
leave   +
retn   +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_100DC8C  +
push [ebp+pv]  +
call ds:__imp_SHCreateItemFromIDList  +
mov esi eax +
test esi esi +
jl loc_10812A8  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_108129F  +
mov eax [ebp+arg_8] +
push eax  +
push [ebp+pv]  +
mov dword ptr [eax+4] 0Fh +
push offset dword_10092EC  +
call sub_107D029  +
push [ebp+pv]  +
mov esi eax +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
push 104h  +
lea ecx [ebp+var_20C] +
push ecx  +
push 8000h  +
push eax  +
call sub_10270A3  +
test eax eax +
jl loc_108130C  +
mov eax [esi+0Ch] +
mov [esi+14h] eax +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
push offset dword_1068F64  +
mov dword ptr [esi+4] 0Bh +
call sub_107D029  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_1081353  +
push [ebp+arg_4]  +
push 0  +
push [ebp+arg_0]  +
push 0  +
call sub_10125A3  +
push [ebp+arg_0]  +
mov esi eax +
call ds:__imp_SHELL32_155  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1081371  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 420h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
lea ecx [ebp+var_420] +
push ecx  +
lea ecx [ebp+var_418] +
push ecx  +
push offset dword_100671C  +
xor ebx ebx +
push eax  +
mov [esi] ebx +
call ds:__imp_SHBindToParent  +
test eax eax +
jl loc_1081445  +
mov eax [ebp+var_418] +
mov ecx [eax] +
lea edx [ebp+var_41C] +
push edx  +
push ebx  +
push offset stru_1026650  +
lea edx [ebp+var_420] +
push edx  +
push 1  +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_1081439  +
mov eax [ebp+var_41C] +
mov ecx [eax] +
push edi  +
push 4  +
push ebx  +
mov edi 104h +
push edi  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_108142C  +
push edi  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call ds:SHLWAPI_460  +
test eax eax +
jz loc_108142C  +
push esi  +
lea eax [ebp+var_414] +
push eax  +
call ds:__imp_SHStrDupW  +
mov eax [ebp+var_41C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax [ebp+var_418] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [esi] ebx +
pop esi  +
setnz al  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pv] +
push eax  +
push [ebp+pv]  +
mov esi ecx +
xor edi edi +
xor ebx ebx +
call sub_108137A  +
test eax eax +
jz loc_10814A8  +
cmp [esi+10h] edi +
jle loc_108149F  +
push [ebp+pv]  +
push dword ptr [esi+edi*4]  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_108149C  +
inc edi  +
cmp edi [esi+10h] +
jge loc_108149F  +
jmp loc_1081484  +
xor ebx ebx +
inc ebx  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 440h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
mov [ebp+var_440] eax +
jnz loc_10814E4  +
xor eax eax +
jmp loc_1081570  +
cmp dword ptr [esi] 5 +
push ebx  +
push edi  +
jnb loc_1081568  +
mov edi 104h +
mov eax [esi] +
push eax  +
lea ecx [eax+1] +
push offset aOemD  +
lea eax [ebp+var_2C] +
push 14h  +
push eax  +
mov [esi] ecx +
call sub_10343CA  +
add esp 10h +
push edi  +
lea eax [ebp+var_234] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push dword ptr [esi+4]  +
call ds:SHLWAPI_439  +
test eax eax +
jl loc_1081563  +
push edi  +
lea eax [ebp+var_43C] +
push eax  +
lea eax [ebp+var_234] +
push eax  +
call ds:SHLWAPI_460  +
lea eax [ebp+var_43C] +
push eax  +
call ds:InternalExtractIconListW  +
mov ebx eax +
test ebx ebx +
jz loc_1081563  +
mov ecx [ebp+var_440] +
push ebx  +
call sub_1081461  +
test eax eax +
jz loc_108156C  +
push ebx  +
call ds:__imp_SHELL32_155  +
cmp dword ptr [esi] 5 +
jb loc_10814F0  +
xor eax eax +
jmp loc_108156E  +
mov eax ebx +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi] 10h +
jnb loc_108166E  +
xor ebx ebx +
mov eax [edi] +
lea ecx [eax+1] +
mov [edi] ecx +
mov ecx [ebp+arg_0] +
lea esi [ecx+eax*8] +
mov eax [esi] +
mov [ebp+pv] ebx +
cmp eax ebx +
jz loc_1081665  +
cmp [ebp+arg_8] ebx +
jz loc_1081638  +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
push 4000h  +
push eax  +
call SHGetKnownFolderIDList  +
test eax eax +
jl loc_1081644  +
lea eax [ebp+var_10] +
push eax  +
push offset dword_100671C  +
push ebx  +
push [ebp+var_8]  +
push ebx  +
call ds:__imp_SHBindToObject  +
test eax eax +
jl loc_108162D  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_C] +
push edx  +
push ebx  +
push dword ptr [esi+4]  +
push ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1081624  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call ds:__imp_SHELL32_25  +
push [ebp+var_C]  +
mov [ebp+pv] eax +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_8]  +
call ds:__imp_SHELL32_155  +
jmp loc_1081644  +
lea ecx [ebp+pv] +
push ecx  +
push ebx  +
push ebx  +
push eax  +
call SHGetKnownFolderIDList  +
cmp [ebp+pv] ebx +
jz loc_1081665  +
mov ecx [ebp+arg_4] +
cmp ecx ebx +
jz loc_1081672  +
push [ebp+pv]  +
call sub_1081461  +
test eax eax +
jz loc_1081672  +
push [ebp+pv]  +
call ds:__imp_SHELL32_155  +
cmp dword ptr [edi] 10h +
jb loc_10815A9  +
xor eax eax +
jmp loc_1081675  +
mov eax [ebp+pv] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 280h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_26C] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
mov [ebp+var_264] eax +
mov eax [ebp+arg_10] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_268] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_270] eax +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1026650  +
push 1  +
push 0  +
push offset stru_1068EEC  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_1081822  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset aSystemrootSy_2  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
test esi esi +
jl loc_1081816  +
push ebx  +
push edi  +
push offset aSS_2  +
lea eax [ebp+var_25C] +
push 12Bh  +
push eax  +
call sub_10343CA  +
mov esi eax +
add esp 14h +
test esi esi +
jl loc_1081816  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_25C] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jl loc_1081816  +
mov eax [ebp+ppv] +
push [ebp+var_264]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jl loc_1081816  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_264] +
push edx  +
push offset dword_10066D0  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_1081816  +
lea eax [ebp+pvar] +
push eax  +
push [ebp+var_26C]  +
call sub_107DAE5  +
mov esi eax +
test esi esi +
jl loc_108180A  +
mov eax [ebp+var_264] +
mov ecx [eax] +
lea edx [ebp+pvar] +
push edx  +
push offset dword_1068F50  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_10817FD  +
mov eax [ebp+var_264] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jl loc_10817FD  +
push [ebp+arg_14]  +
mov eax [ebp+ppv] +
push [ebp+var_268]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
test esi esi +
jl loc_10817FD  +
push [ebp+var_270]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset stru_1026650  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
lea eax [ebp+pvar] +
push eax  +
call ds:__imp_PropVariantClear  +
mov eax [ebp+var_264] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 10CCh +
call sub_10545E1  +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi ds:__imp_CoCreateInstance +
mov [ebp+var_1088] eax +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104B1D0  +
push 1  +
xor ebx ebx +
push ebx  +
push offset stru_1081C04  +
mov [ebp+var_1074] ebx +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1081BCA  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_107C] +
push edx  +
push 40h  +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1081BBE  +
lea eax [ebp+var_1070] +
push eax  +
push offset stru_101C28C  +
push 3  +
push ebx  +
push offset stru_1068EFC  +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1081BB2  +
mov eax [ebp+var_1074] +
cmp eax [ebp+arg_4] +
jnb loc_1081B65  +
mov eax [ebp+var_107C] +
mov ecx [eax] +
lea edx [ebp+var_1084] +
push edx  +
lea edx [ebp+var_1068] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1081B65  +
cmp [ebp+var_1084] 1 +
jnz loc_1081B65  +
mov eax [ebp+ppv] +
inc [ebp+var_1074]  +
push 5  +
pop ecx  +
lea edx [ebp+var_10BC] +
push edx  +
lea edx [ebp+var_1060] +
push edx  +
push [ebp+var_1068]  +
mov esi (offset loc_1081C27+1) +
lea edi [ebp+var_1060] +
movs   +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
cmp esi ebx +
jl loc_1081B51  +
mov eax [ebp+ppv] +
push 5  +
pop ecx  +
lea edx [ebp+var_109C] +
push edx  +
lea edx [ebp+var_1060] +
push edx  +
push [ebp+var_1068]  +
mov esi offset loc_1081C14 +
lea edi [ebp+var_1060] +
movs   +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
cmp esi ebx +
jl loc_1081B44  +
mov eax [ebp+ppv] +
push 5  +
pop ecx  +
lea edx [ebp+var_10AC] +
push edx  +
lea edx [ebp+var_1060] +
push edx  +
push [ebp+var_1068]  +
mov esi offset dword_1081C3C +
lea edi [ebp+var_1060] +
movs   +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
cmp esi ebx +
jl loc_1081B37  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_106C] +
push edx  +
push ebx  +
push offset dword_1081BE0  +
lea edx [ebp+var_1068] +
push edx  +
push 1  +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi ebx +
jl loc_1081B2A  +
mov eax [ebp+var_106C] +
mov ecx [eax] +
lea edx [ebp+var_108C] +
push edx  +
lea edx [ebp+var_1080] +
push edx  +
push 824h  +
lea edx [ebp+var_104C] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1081B1E  +
mov eax [ebp+ppv] +
push 5  +
pop ecx  +
lea edx [ebp+pvarg] +
push edx  +
lea edx [ebp+var_1060] +
push edx  +
push [ebp+var_1068]  +
mov esi offset dword_1081BF0 +
lea edi [ebp+var_1060] +
movs   +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
cmp esi ebx +
jl loc_1081B1E  +
lea eax [ebp+var_1078] +
push eax  +
push [ebp+var_1080]  +
lea eax [ebp+var_104C] +
push eax  +
push [ebp+var_1094]  +
push dword ptr [ebp+pvarg.anonymous_0+8]  +
push [ebp+var_10A4]  +
push [ebp+var_10B4]  +
call sub_1081681  +
mov esi eax +
cmp esi ebx +
jl loc_1081B11  +
mov eax [ebp+var_1070] +
push [ebp+var_1078]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_1078] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_106C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+var_10AC] +
push eax  +
call ds:VariantClear  +
lea eax [ebp+var_109C] +
push eax  +
call ds:VariantClear  +
lea eax [ebp+var_10BC] +
push eax  +
call ds:VariantClear  +
push [ebp+var_1068]  +
call ds:__imp_SHELL32_155  +
cmp esi ebx +
jge loc_1081932  +
cmp esi ebx +
jl loc_1081BA6  +
mov eax [ebp+var_1070] +
mov ecx [eax] +
lea edx [ebp+var_106C] +
push edx  +
push offset dword_10690B0  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_1081BA6  +
mov eax [ebp+var_1088] +
push [ebp+var_106C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
mov eax [ebp+var_106C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_1070] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_107C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
jbe loc_1081C27  +
retf   +
***
add [esi+37h] cl +
jbe near ptr dword_1081BF0+0Fh  +
fldcw  word ptr [ecx+619E4BA0h] +
out dx eax +
test eax 0ED1D7B93h +
add al [eax] +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp dword_10B3D8C 0 +
push esi  +
push edi  +
mov esi 80000000h +
jz loc_1081CB6  +
mov al byte_10B3D90 +
cmp al 4 +
jnb loc_1081C7A  +
test al al +
jnz loc_1081CB6  +
mov ecx dword_10B3D7C +
and ecx esi +
xor eax eax +
or eax ecx +
jz loc_1081CB6  +
mov ecx dword_10B3D84 +
mov eax ecx +
xor edx edx +
and eax esi +
cmp edx dword_10B3D80 +
jnz loc_1081CB6  +
cmp eax ecx +
jnz loc_1081CB6  +
push offset dword_1081D90  +
push dword_10B3D64  +
push dword_10B3D60  +
call sub_100E7C9  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_10696D4  +
push 3  +
push 0  +
push offset stru_103B464  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_1081D32  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset aMicrosoft_wi_0  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_1081D29  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset stru_101C28C  +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jl loc_1081D29  +
push [ebp+var_8]  +
push [ebp+ppv]  +
call sub_108189F  +
mov edi eax +
test edi edi +
jl loc_1081D20  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword_10B3D8C 0 +
jz loc_1081D84  +
mov al byte_10B3D90 +
cmp al 4 +
jnb loc_1081D48  +
test al al +
jnz loc_1081D84  +
mov ecx dword_10B3D7C +
and ecx esi +
xor eax eax +
or eax ecx +
jz loc_1081D84  +
mov ecx dword_10B3D84 +
mov eax ecx +
xor edx edx +
and eax esi +
cmp edx dword_10B3D80 +
jnz loc_1081D84  +
cmp eax ecx +
jnz loc_1081D84  +
push offset dword_1081DA0  +
push dword_10B3D64  +
push dword_10B3D60  +
call sub_100E7C9  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 578h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
xor ebx ebx +
inc ebx  +
push ebx  +
xor edi edi +
push edi  +
push offset stru_1029D80  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_108211D  +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push edi  +
push eax  +
mov [ebp+var_568] edi +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] esi +
mov [ebp+VersionInformation.dwMajorVersion] 6 +
mov [ebp+VersionInformation.dwMinorVersion] ebx +
call ds:GetVersionExW  +
lea eax [ebp+var_570] +
push eax  +
push edi  +
push edi  +
push [ebp+VersionInformation.dwMinorVersion]  +
push [ebp+VersionInformation.dwMajorVersion]  +
call ds:GetProductInfo  +
test eax eax +
jz loc_1081F92  +
cmp [ebp+var_570] 0ABCDABCDh +
jz loc_1081F92  +
call sub_10811A5  +
xor ecx ecx +
mov [ebp+var_564] eax +
xor edx edx +
xor eax eax +
lea esi [ecx+1] +
inc eax  +
cmp esi 40h +
jz loc_1081ECF  +
mov ebx ds:dword_10821B8[edx] +
cmp ebx ds:dword_1082130[edx] +
jz loc_1081ED1  +
xor eax eax +
mov ebx ds:dword_1082130[edx] +
cmp ebx [ebp+var_570] +
jnz loc_1081EF1  +
mov ebx [ebp+var_564] +
cmp ebx ds:dword_1082134[edx] +
jz loc_1081F07  +
cmp eax edi +
jz loc_1081F07  +
add edx 88h +
mov ecx esi +
cmp edx 2200h +
jnb loc_1081F92  +
jmp loc_1081EB6  +
imul ecx ecx +
mov [ebp+var_564] edi +
lea ebx off_1082138[ecx] +
mov dword ptr [ebp+var_560] 3 +
push 1  +
push edi  +
push ebx  +
lea ecx [ebp+var_564] +
call sub_1081591  +
mov esi eax +
cmp esi edi +
jz loc_1081F8A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_1081F57  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
mov edx [ebp+var_568] +
mov eax [ebp+ppv] +
mov ecx [eax] +
inc edx  +
movzx edx dx +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
inc [ebp+var_568]  +
push esi  +
call ds:__imp_SHELL32_155  +
dec dword ptr [ebp+var_560]  +
jnz loc_1081F23  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push edi  +
push offset word_1084340  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1082110  +
mov dword ptr [ebp+var_560] edi +
mov ebx 104h +
push dword ptr [ebp+var_560]  +
lea eax [ebp+var_2C] +
push offset aSboemD  +
push 14h  +
push eax  +
call sub_10343CA  +
add esp 10h +
push ebx  +
lea eax [ebp+var_43C] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+hKey]  +
call ds:SHLWAPI_439  +
test eax eax +
jl loc_10820F1  +
push ebx  +
lea eax [ebp+var_234] +
push eax  +
lea eax [ebp+var_43C] +
push eax  +
call ds:SHLWAPI_460  +
lea eax [ebp+var_234] +
push eax  +
call ds:InternalExtractIconListW  +
mov esi eax +
cmp esi edi +
jz loc_10820F1  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_1082046  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
lea eax [ebp+var_564] +
push eax  +
push esi  +
call sub_107D591  +
test eax eax +
jl loc_10820EA  +
push esi  +
call ds:__imp_SHELL32_16  +
mov [ebp+var_578] eax +
lea eax [ebp+var_56C] +
push eax  +
push offset dword_10696E4  +
push edi  +
lea eax [ebp+var_578] +
push eax  +
push 1  +
push [ebp+var_564]  +
call ds:SHCreateDataObject  +
test eax eax +
jl loc_10820DE  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0Ah  +
push [ebp+var_56C]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jnz loc_10820D2  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
mov edx [ebp+var_568] +
mov eax [ebp+ppv] +
mov ecx [eax] +
inc edx  +
movzx edx dx +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
inc [ebp+var_568]  +
mov eax [ebp+var_56C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_564]  +
call ds:__imp_SHELL32_155  +
push esi  +
call ds:__imp_SHELL32_155  +
inc dword ptr [ebp+var_560]  +
cmp dword ptr [ebp+var_560] 3 +
jb loc_1081FC2  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 424h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov [ebp+var_424] eax +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push offset aSoftwareMic_40  +
push 80000002h  +
mov esi 80004005h +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10844D4  +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp+var_414] +
push eax  +
push offset aWcoem  +
push [ebp+hKey]  +
call ds:SHLWAPI_439  +
mov esi eax +
test esi esi +
jl loc_10844C7  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
call ds:SHLWAPI_460  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
js loc_10844C7  +
lea eax [ebp+var_41C] +
push eax  +
push offset dword_100DC8C  +
push 0  +
lea eax [ebp+var_20C] +
push eax  +
call ds:SHCreateItemFromParsingName  +
mov esi eax +
test esi esi +
jl loc_10844C7  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 3  +
push 0  +
push offset rclsid  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_10844BB  +
push [ebp+var_424]  +
mov eax [ebp+ppv] +
push [ebp+var_41C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_41C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
sub esp 10h +
push esi  +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_10066D0  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_10845D7  +
lea eax [ebp+pvar] +
push eax  +
push [ebp+arg_4]  +
call sub_107DAE5  +
mov esi eax +
test esi esi +
jl loc_10845CE  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+pvar] +
push edx  +
push offset dword_1068F50  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_10845C4  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
lea eax [ebp+pvar] +
push eax  +
call ds:__imp_PropVariantClear  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_101DA88  +
push 1  +
push 0  +
push offset stru_1068EEC  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_1084651  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
push [ebp+arg_0]  +
call ds:SHCreateStreamOnFileW  +
mov esi eax +
test esi esi +
jl loc_1084648  +
mov eax [ebp+ppv] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jl loc_108463F  +
push [ebp+arg_8]  +
mov eax [ebp+ppv] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
lea ecx [ebp+var_210] +
push ecx  +
push offset dword_1016950  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jl loc_1084709  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+var_218] +
push edx  +
lea edx [ebp+var_214] +
push edx  +
push 104h  +
lea edx [ebp+var_20C] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_10846FD  +
test byte ptr [ebp+var_218] 8 +
mov edi 80004005h +
jz loc_10846E8  +
push 2Ah  +
pop eax  +
cmp ax word ptr [ebp+var_20C] +
jnz loc_10846E1  +
xor eax eax +
cmp ax word ptr [ebp+var_20C+2] +
jz loc_10846FD  +
and [ebp+var_214] 0 +
push [ebp+var_214]  +
mov eax [esi] +
lea ecx [ebp+var_20C] +
push ecx  +
push esi  +
call dword ptr [eax+44h]  +
mov edi eax +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea eax [ebp+ppv] +
push eax  +
push offset aMicrosoft_wi_1  +
call sub_108C225  +
test eax eax +
jl locret_108477E  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_10690B0  +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_1084775  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_108476C  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 148h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov esi 11Ch +
push esi  +
xor edi edi +
lea eax [ebp+VersionInformation] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] esi +
mov [ebp+VersionInformation.dwMajorVersion] 6 +
mov [ebp+VersionInformation.dwMinorVersion] 1 +
call ds:GetVersionExW  +
lea eax [ebp+var_138] +
push eax  +
push edi  +
push edi  +
push [ebp+VersionInformation.dwMinorVersion]  +
push [ebp+VersionInformation.dwMajorVersion]  +
call ds:GetProductInfo  +
test eax eax +
jz loc_10849F2  +
cmp [ebp+var_138] 0ABCDABCDh +
jz loc_10849F2  +
lea eax [ebp+pv] +
push eax  +
call ds:GetCurrentProcessId  +
push eax  +
call sub_108C2D3  +
test eax eax +
jl loc_10849F2  +
lea eax [ebp+ppv] +
push eax  +
push edi  +
push [ebp+pv]  +
call sub_108C1C9  +
test eax eax +
jl loc_1084977  +
call sub_10811A5  +
mov [ebp+var_124] eax +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
xor eax eax +
xor ecx ecx +
push ebx  +
xor esi esi +
lea edx [eax+1] +
inc esi  +
cmp edx 3Ah +
jz loc_108487A  +
mov ebx ds:dword_1084A88[ecx] +
cmp ebx ds:dword_1084A00[ecx] +
jz loc_108487C  +
xor esi esi +
mov ebx ds:dword_1084A00[ecx] +
cmp ebx [ebp+var_138] +
jnz loc_108489C  +
mov ebx [ebp+var_124] +
cmp ebx ds:dword_1084A04[ecx] +
jz loc_10848B2  +
cmp esi edi +
jz loc_10848B2  +
add ecx 88h +
mov eax edx +
cmp ecx 1ED0h +
jnb loc_108496A  +
jmp loc_1084861  +
xor ebx ebx +
imul eax eax +
lea eax off_1084A08[eax] +
mov [ebp+var_13C] edi +
mov [ebp+var_140] eax +
jmp loc_10848D0  +
xor edi edi +
push edi  +
push edi  +
push [ebp+var_140]  +
lea ecx [ebp+var_13C] +
call sub_1081591  +
mov edi eax +
test edi edi +
jz loc_1084960  +
push 0Ah  +
pop eax  +
sub eax ebx +
mov [ebp+var_12C] eax +
fild  [ebp+var_12C] +
test eax eax +
jge loc_1084904  +
fadd  ds:flt_10868E0 +
fmul  ds:dbl_10868D8 +
mov esi [ebp+ppv] +
lea eax [ebp+var_124] +
push eax  +
fadd  ds:dbl_10868D0 +
push offset dword_100DC8C  +
push edi  +
fstp  [ebp+var_12C] +
call ds:__imp_SHCreateItemFromIDList  +
test eax eax +
jl loc_1084959  +
mov eax [esi] +
lea ecx [ebp+SystemTimeAsFileTime] +
push ecx  +
lea ecx [ebp+var_12C] +
push ecx  +
push [ebp+var_124]  +
push esi  +
call dword ptr [eax+28h]  +
mov eax [ebp+var_124] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push edi  +
call ds:__imp_SHELL32_155  +
inc ebx  +
cmp ebx 0Ah +
jb loc_10848CE  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebx  +
lea eax [ebp+var_128] +
push eax  +
push [ebp+pv]  +
call sub_108C225  +
test eax eax +
jl loc_10849E6  +
mov eax [ebp+var_128] +
mov ecx [eax] +
lea edx [ebp+var_12C] +
push edx  +
push offset dword_10690B0  +
lea edx [ebp+var_13C] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_10849DA  +
mov eax [ebp+var_128] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_10849CE  +
mov eax [ebp+var_128] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp+var_12C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_128] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_108135F  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
push 1  +
xor ebx ebx +
push ebx  +
mov esi ecx +
push offset stru_100DD10  +
mov [esi+10h] ebx +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_10869B4  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_210] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jge loc_1086996  +
jmp loc_10869A8  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_218] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_108699C  +
mov eax [esi+10h] +
lea eax [esi+eax*4] +
push eax  +
push [ebp+var_218]  +
call sub_108137A  +
test eax eax +
jz loc_108698A  +
inc dword ptr [esi+10h]  +
push [ebp+var_218]  +
call ds:__imp_SHELL32_155  +
cmp dword ptr [esi+10h] 4 +
jb loc_1086957  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push ebx  +
call sub_1080F62  +
test eax eax +
jnz loc_1086A15  +
cmp dword ptr [esi+10h] 4 +
jnb loc_1086A15  +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
push ebx  +
push 4000h  +
push offset dword_1086A68  +
call SHGetFolderPathEx  +
test eax eax +
jl loc_1086A14  +
push ebx  +
push offset aAccessoriesMob  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
call sub_108059D  +
mov eax [esi+10h] +
lea eax [esi+eax*4] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call ds:__imp_SHStrDupW  +
test eax eax +
jl loc_1086A14  +
inc dword ptr [esi+10h]  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 198h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
call sub_10191D1  +
mov [ebp+var_138] eax +
call sub_1081C55  +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
jz loc_1086AAF  +
call sub_1078BF1  +
push offset dword_1086D54  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_1086D38  +
push esi  +
push edi  +
lea ecx [ebp+var_170] +
call sub_1086902  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_194] +
mov [ebp+pv] ebx +
stos   +
lea ecx [ebp+var_12C] +
call sub_1081113  +
push 5  +
pop esi  +
lea eax [ebp+var_170] +
push eax  +
lea ecx [ebp+var_12C] +
call sub_10814B6  +
mov [ebp+esi*4+pv] eax +
inc esi  +
cmp esi 0Ah +
jl loc_1086AF0  +
cmp [ebp+hKey] ebx +
jz loc_1086B23  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
xor edi edi +
lea eax [ebp+VersionInformation] +
inc edi  +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] esi +
mov [ebp+VersionInformation.dwMajorVersion] 6 +
mov [ebp+VersionInformation.dwMinorVersion] edi +
call ds:GetVersionExW  +
lea eax [ebp+var_134] +
push eax  +
push ebx  +
push ebx  +
push [ebp+VersionInformation.dwMinorVersion]  +
push [ebp+VersionInformation.dwMajorVersion]  +
call ds:GetProductInfo  +
test eax eax +
jz loc_1086C3A  +
cmp [ebp+var_134] 0ABCDABCDh +
jz loc_1086C3A  +
call sub_10811A5  +
mov [ebp+hKey] eax +
mov [ebp+var_124] ebx +
xor ecx ecx +
mov edx [ebp+var_124] +
inc edx  +
mov esi edi +
cmp edx 46h +
jz loc_1086BC1  +
mov eax ds:dword_1086DF0[ecx] +
cmp eax ds:dword_1086D68[ecx] +
jz loc_1086BC3  +
xor esi esi +
mov eax ds:dword_1086D68[ecx] +
cmp eax [ebp+var_134] +
jnz loc_1086BE3  +
mov eax [ebp+hKey] +
cmp eax ds:dword_1086D6C[ecx] +
jz loc_1086BF9  +
cmp esi ebx +
jz loc_1086BF9  +
add ecx 88h +
mov [ebp+var_124] edx +
cmp ecx 2530h +
jnb loc_1086C3A  +
jmp loc_1086BA5  +
mov [ebp+hKey] ebx +
xor edi edi +
lea esi [ebp+edi*4+pv] +
cmp [esi] ebx +
jnz loc_1086C34  +
push 1  +
lea eax [ebp+var_170] +
push eax  +
mov eax [ebp+var_124] +
imul eax eax +
add eax offset off_1086D70 +
push eax  +
lea ecx [ebp+hKey] +
call sub_1081591  +
mov [esi] eax +
inc edi  +
cmp edi 0Ah +
jl loc_1086C01  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_15C] +
stos   +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
mov [ebp+var_15C] 24h +
call ds:GetSystemTimeAsFileTime  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call sub_104B44B  +
add eax 0C0000000h +
mov [ebp+SystemTimeAsFileTime.dwLowDateTime] eax +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 3  +
push ebx  +
adc edx 0FFFFFFFFh +
push offset rclsid  +
mov [ebp+SystemTimeAsFileTime.dwHighDateTime] edx +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1086D16  +
xor esi esi +
mov [ebp+var_124] ebx +
mov edi [ebp+esi*4+pv] +
test edi edi +
jz loc_1086CF6  +
push 0Eh  +
pop eax  +
sub eax esi +
mov [ebp+var_150] eax +
push 15h  +
pop eax  +
sub eax ebx +
mov [ebp+var_14C] eax +
mov eax 668A0h +
sub eax [ebp+var_124] +
mov [ebp+var_148] eax +
lea eax [ebp+var_15C] +
push eax  +
push edi  +
push [ebp+ppv]  +
call sub_1081247  +
lea eax [ebp+var_15C] +
push eax  +
push edi  +
call sub_10812B4  +
add [ebp+var_124] 9C40h +
inc esi  +
inc ebx  +
inc ebx  +
cmp ebx 14h +
jl loc_1086CA4  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor ebx ebx +
xor esi esi +
push [ebp+esi*4+pv]  +
call ds:__imp_SHELL32_155  +
inc esi  +
cmp esi 0Ah +
jl loc_1086D18  +
lea ecx [ebp+var_170] +
call sub_10810EF  +
pop edi  +
pop esi  +
push [ebp+var_138]  +
call sub_1019203  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push edi  +
lea ecx [ebp+var_214] +
push ecx  +
mov edi 104h +
push edi  +
lea ecx [ebp+pszPath] +
push ecx  +
push eax  +
call ds:SHGetLocalizedName  +
mov ebx eax +
test ebx ebx +
jl loc_108932F  +
lea eax [ebp+pszPath] +
push eax  +
call ds:__imp_PathFindFileNameW  +
push esi  +
push edi  +
mov dword ptr [ebp+var_210] eax +
call sub_1080529  +
mov ebx eax +
test ebx ebx +
jl loc_1089324  +
mov eax [ebp+var_214] +
neg eax  +
push eax  +
push dword ptr [ebp+var_210]  +
push offset a@SD  +
push edi  +
push dword ptr [esi]  +
call sub_10343CA  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jge loc_108932F  +
push dword ptr [esi]  +
call ds:__imp_CoTaskMemFree  +
and dword ptr [esi] 0 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 460h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor ebx ebx +
push ebx  +
push offset aSoftwareMic_41  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10895AA  +
lea eax [ebp+var_44C] +
push eax  +
call sub_10843B7  +
test eax eax +
jl loc_108959E  +
push esi  +
mov esi ds:__imp_CoCreateInstance +
lea eax [ebp+ppv] +
push eax  +
push offset stru_10696D4  +
push 3  +
push ebx  +
push offset stru_103B464  +
call esi  +
test eax eax +
jl loc_1089591  +
mov eax [ebp+ppv] +
push [ebp+var_44C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1089585  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push [ebp+var_44C]  +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_45C] +
push edx  +
mov edi offset dword_10690B0 +
push edi  +
lea edx [ebp+var_460] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_1089584  +
mov eax [ebp+var_45C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+var_448] +
push eax  +
push offset stru_101C28C  +
push 3  +
push ebx  +
push offset stru_1068EFC  +
call esi  +
test eax eax +
jl loc_1089584  +
mov esi 104h +
push ebx  +
push offset aWcoemD  +
lea eax [ebp+var_2C] +
push 14h  +
push eax  +
call sub_10343CA  +
add esp 10h +
push esi  +
lea eax [ebp+var_43C] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+hKey]  +
call ds:SHLWAPI_439  +
test eax eax +
jl loc_108952D  +
push esi  +
lea eax [ebp+var_234] +
push eax  +
lea eax [ebp+var_43C] +
push eax  +
call ds:SHLWAPI_460  +
lea eax [ebp+var_444] +
push eax  +
push offset stru_1026650  +
lea eax [ebp+var_234] +
push eax  +
call sub_10845E3  +
test eax eax +
jl loc_108952D  +
lea eax [ebp+pv] +
push eax  +
lea eax [ebp+var_234] +
push eax  +
call sub_108929D  +
test eax eax +
jge loc_10894E3  +
lea eax [ebp+pv] +
push eax  +
push [ebp+var_444]  +
call sub_1081320  +
test eax eax +
jl loc_1089521  +
push [ebp+pv]  +
push [ebp+var_444]  +
call sub_108456F  +
test eax eax +
jl loc_1089515  +
push [ebp+var_444]  +
call sub_108465D  +
mov eax [ebp+var_448] +
push [ebp+var_444]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_444] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc ebx  +
cmp ebx 0Ah +
jb loc_1089451  +
mov eax [ebp+var_448] +
mov ecx [eax] +
lea edx [ebp+var_454] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1089578  +
mov eax [ebp+ppv] +
push [ebp+var_454]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp+var_454] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp+var_448] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_44C]  +
call ds:__imp_CoTaskMemFree  +
pop esi  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+20h] +
shl eax 1Fh +
sar eax 1Fh +
pop ebp  +
retn 4  +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
retn   +
***
retn 4  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1013AE9  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100F065  +
***
sub ecx 24h +
jmp loc_10896C2  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1018C8C  +
test [ebp+arg_4] 1 +
jz loc_10896DC  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1013AE9  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1013AE9  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1013AE9  +
***
sub dword ptr [esp+4] 14h +
jmp loc_100F1A5  +
***
mov eax [ecx+20Ch] +
retn   +
***
pop eax  +
retn   +
***
xor eax eax +
cmp [ecx+84h] eax +
setz al  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+38h]  +
call ds:IsWindowVisible  +
test eax eax +
jnz loc_1089771  +
push eax  +
push eax  +
push 40Dh  +
push hWnd  +
call ds:PostMessageW  +
jmp loc_108977B  +
mov dword ptr [esi+0ACh] 1 +
xor eax eax +
pop esi  +
retn   +
***
push 127h  +
push dword ptr [ecx+38h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi ds:GetWindowRect +
push edi  +
mov edi [ebp+0Ch] +
xor ebx ebx +
push dword ptr [ebp+10h]  +
push edi  +
push dword ptr [ebp+8]  +
call ds:GetNextDlgGroupItem  +
mov edi eax +
lea eax [ebp-10h] +
push eax  +
push edi  +
call esi  +
test eax eax +
jz loc_10897E4  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call esi  +
test eax eax +
jz loc_10897E4  +
mov eax [ebp-10h] +
cmp eax [ebp-20h] +
jz loc_10897F0  +
inc ebx  +
cmp ebx 0Ah +
jle loc_10897EC  +
xor edi edi +
test edi edi +
jnz loc_10897B5  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
cmp dword ptr [ecx+6D4h] 2 +
mov eax 80004005h +
jnz locret_1089892  +
mov eax [ecx+1B8h] +
push ebx  +
push esi  +
mov esi ds:SHLWAPI_484 +
push edi  +
or [ebp+var_14] 0FFFFFFFFh +
push 3  +
mov [ebp+var_8] eax +
mov eax [ecx+118h] +
mov [ebp+var_C] eax +
pop eax  +
mov word ptr [ebp+var_1C] ax +
lea eax [ebp+var_1C] +
push eax  +
push 0  +
push 0  +
mov ebx 145h +
push ebx  +
mov edi offset dword_1013948 +
push edi  +
add ecx 0Ch +
push offset dword_1036980  +
push ecx  +
mov [ebp+var_4] ecx +
call esi  +
test eax eax +
jl loc_1089866  +
cmp [ebp+var_14] 0FFFFFFFFh +
jnz loc_1089885  +
lea eax [ebp+var_1C] +
push eax  +
push 0  +
push 0  +
push ebx  +
push edi  +
push offset dword_10369B0  +
push [ebp+var_4]  +
call esi  +
cmp [ebp+var_14] 0FFFFFFFFh +
mov ecx [ebp+var_8] +
jnz loc_1089888  +
jmp loc_108988F  +
mov ecx [ebp+var_C] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push esi  +
mov esi ecx +
cmp dword ptr [esi+6D4h] 2 +
mov [ebp+var_C] 80004005h +
jnz loc_1089A83  +
mov eax [esi+1E0h] +
push ebx  +
mov ebx [esi+118h] +
or [ebp+var_28] 0FFFFFFFFh +
push edi  +
push 3  +
mov [ebp+var_10] eax +
mov eax [esi+1B8h] +
mov [ebp+hWnd] eax +
pop eax  +
lea ecx [ebp+var_30] +
push ecx  +
push 0  +
push 0  +
mov edi 145h +
push edi  +
push offset dword_1013948  +
mov word ptr [ebp+var_30] ax +
lea eax [esi+0Ch] +
push offset dword_1036980  +
push eax  +
mov [ebp+var_8] ebx +
call ds:SHLWAPI_484  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_1089911  +
cmp [ebp+var_28] 0FFFFFFFFh +
jnz loc_1089934  +
lea eax [ebp+var_30] +
push eax  +
push 0  +
push 0  +
push edi  +
push offset dword_1013948  +
push offset dword_10369B0  +
lea eax [esi+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
mov ebx [ebp+hWnd] +
mov [ebp+var_C] eax +
push 9  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_54] +
stos   +
mov eax [ebp+arg_0] +
mov ecx [esi+38h] +
and [ebp+var_54] 0 +
cmp [ebp+var_28] 0FFFFFFFFh +
mov edi ds:SendMessageW +
mov [ebp+var_4C] eax +
mov [ebp+lParam] ecx +
mov [ebp+var_50] 0D7h +
jz loc_10899BF  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 4Eh  +
push ebx  +
mov [ebp+var_38] 0C05h +
call edi  +
test eax eax +
jnz loc_1089A6D  +
push ebx  +
mov dword ptr [ebp+pvarg.anonymous_0+4] ebx +
call ds:GetDlgCtrlID  +
lea ecx [ebp+pvarg.anonymous_0+4] +
push ecx  +
push eax  +
push 4Eh  +
push ebx  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov dword ptr [ebp+pvarg.anonymous_0+0Ch] 0FFFFFFF8h +
call edi  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp eax 26h +
jnz loc_10899A9  +
cmp ebx [ebp+var_8] +
jz loc_10899B3  +
cmp eax 28h +
jnz loc_10899BA  +
cmp ebx [ebp+hWnd] +
jnz loc_10899BA  +
xor ebx ebx +
jmp loc_1089A3E  +
cmp ebx [ebp+var_8] +
jmp loc_10899C5  +
mov eax [eax+8] +
cmp eax 26h +
mov ebx [ebp+hWnd] +
jz loc_10899CD  +
mov ebx [ebp+var_8] +
test ebx ebx +
jz loc_1089A3E  +
xor ecx ecx +
cmp eax 26h +
setz cl  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 4Eh  +
push ebx  +
add ecx 3 +
or ecx 0C00h +
mov [ebp+var_38] ecx +
call edi  +
test eax eax +
jnz loc_1089A6D  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 28h +
jnz loc_1089A3E  +
cmp ebx [ebp+var_8] +
jnz loc_1089A3E  +
push 3  +
pop eax  +
push 0  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea eax [ebp+pvarg] +
push eax  +
push 0  +
push 13Dh  +
push offset dword_1013948  +
push offset dword_10369B0  +
lea eax [esi+0Ch] +
push eax  +
mov dword ptr [ebp+pvarg.anonymous_0+8] 1 +
call ds:SHLWAPI_484  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov ebx [ebp+hWnd] +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 28h +
jnz loc_1089A81  +
cmp ebx [ebp+var_8] +
jnz loc_1089A81  +
cmp [ebp+hWnd] 0 +
jz loc_1089A81  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 4Eh  +
push [ebp+hWnd]  +
mov [ebp+var_38] 0C03h +
call edi  +
mov ebx [ebp+hWnd] +
test eax eax +
jz loc_1089A81  +
cmp ebx [ebp+var_8] +
jnz loc_1089A7A  +
mov eax [ebp+var_10] +
mov [esi+48h] eax +
jmp loc_1089A7D  +
mov [esi+48h] ebx +
and [ebp+var_C] 0 +
pop edi  +
pop ebx  +
mov eax [ebp+var_C] +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx ecx +
test eax eax +
jz loc_1089ADE  +
push esi  +
mov esi [eax+8] +
test esi esi +
jz loc_1089ADD  +
push dword ptr [esi+4]  +
call ds:__imp_PathFindFileNameW  +
test eax eax +
jz loc_1089ADD  +
xor ecx ecx +
cmp [ebx+0B4h] ecx +
jz loc_1089ACA  +
cmp [esi+10h] ecx +
setz cl  +
lea ecx [ecx+ecx+2] +
jmp loc_1089AD0  +
cmp [esi+10h] ecx +
setz cl  +
push dword ptr [esi+8]  +
push eax  +
push [ebp+arg_4]  +
push ecx  +
call sub_106E209  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+60h] +
sub esp 14h +
test ecx ecx +
jz loc_1089B26  +
mov eax [eax+28h] +
and [ebp+var_10] 0 +
mov [ebp+lParam] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_4] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 4Eh  +
push ecx  +
mov [ebp+var_C] 0CBh +
call ds:SendMessageW  +
xor eax eax +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 1  +
push dword ptr [esi+38h]  +
call ds:KillTimer  +
mov ecx esi +
pop esi  +
jmp sub_1043273  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
push offset aSoftwareMicr_0  +
call SHRegGetBoolValueFromHKCUHKLM  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
xor eax eax +
mov eax [ebp+8] +
mov edi offset dword_10128F0 +
cmps   +
pop edi  +
pop esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
jnz loc_1089B98  +
mov eax [eax+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
jmp loc_1089BA4  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax+8]  +
call ds:IUnknown_QueryService  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp word ptr [ebp+0Ch] 3 +
mov ecx 80070057h +
jz loc_1089BC2  +
mov eax ecx +
cmp dword ptr [ebp+14h] 0 +
jz loc_1089BCA  +
mov eax ecx +
mov edx [ebp+1Ch] +
test edx edx +
jnz loc_1089BD3  +
mov eax ecx +
test eax eax +
jl loc_1089BFE  +
mov eax [ebp+8] +
cmp dword ptr [eax+98h] 0 +
jz loc_1089BEB  +
and dword ptr [edx] 0 +
xor eax eax +
inc eax  +
jmp loc_1089BFE  +
push edx  +
push 0  +
push 142h  +
push dword_10B23D0  +
call sub_103C0AE  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov esi ecx +
mov [esi+70h] eax +
mov eax [esi+68h] +
test eax eax +
jz loc_1089C2E  +
mov eax [eax+0Ch] +
mov ecx [eax] +
push 1  +
push 0  +
push eax  +
call dword ptr [ecx+24h]  +
and [ebp+FileTime1.dwLowDateTime] 0 +
and [ebp+FileTime1.dwHighDateTime] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+FileTime1] +
push eax  +
push 0  +
push 0FFFFh  +
push offset aStartmenu_ball  +
push offset aSoftwareMicr_2  +
mov [ebp+arg_0] 8 +
call ds:__imp_SHRegGetValueFromHKCUHKLM  +
add edi 0Ch +
push edi  +
lea eax [ebp+FileTime1] +
push eax  +
call ds:CompareFileTime  +
test eax eax +
jge loc_1089C7F  +
mov ecx esi +
mov dword ptr [esi+88h] 3 +
call sub_1039DF2  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
call sub_10345AB  +
mov esi eax +
test esi esi +
jz loc_1089CA7  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1051E64  +
push 1  +
push 0  +
push offset stru_1051E74  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_1089CEC  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset aMshelpWindows?  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
push edi  +
and ebx 1 +
push ebx  +
push [ebp+arg_0]  +
mov esi ecx +
push dword ptr [esi+38h]  +
call [ebp+arg_C]  +
mov edi eax +
test edi edi +
jz loc_1089D5D  +
mov eax [ebp+arg_10] +
and eax 2 +
mov [ebp+arg_10] eax +
cmp [ebp+arg_10] 0 +
jnz loc_1089D2F  +
cmp edi [ebp+arg_0] +
jz loc_1089D5D  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+lParam]  +
push edi  +
call sub_10381F8  +
test eax eax +
jnz loc_1089D66  +
cmp edi [ebp+arg_0] +
jz loc_1089D5D  +
inc [ebp+var_4]  +
cmp [ebp+var_4] 0Ah +
jg loc_1089D5D  +
push ebx  +
push edi  +
push dword ptr [esi+38h]  +
call [ebp+arg_C]  +
mov edi eax +
test edi edi +
jnz loc_1089D24  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
mov eax edi +
jmp loc_1089D5F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push 10h  +
mov esi ecx +
call ds:GetKeyState  +
xor ecx ecx +
test ax ax +
setl cl  +
mov eax ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_1C] ecx +
xor ecx ecx +
test eax eax +
setnz cl  +
or ecx 2 +
push ecx  +
push ds:GetNextDlgGroupItem  +
xor ecx ecx +
test eax eax +
setnz cl  +
lea eax [ebp+lParam] +
add ecx 3 +
or ecx 500h +
push ecx  +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1089CF6  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax [ebp+hWnd] +
push ebx  +
push esi  +
mov esi [ebp+hCtl] +
push edi  +
mov edi ecx +
mov [ebp+var_8] edi +
mov [ebp+var_68] esi +
test eax eax +
jz loc_1089DF4  +
cmp eax [edi+1B8h] +
jnz loc_1089DFD  +
mov eax [edi+1E0h] +
mov [ebp+hWnd] eax +
mov ebx [esi+8] +
push 0FFFFFFECh  +
push dword ptr [edi+38h]  +
call ds:GetWindowLongW  +
and eax 400000h +
mov [ebp+var_10] eax +
jz loc_1089E3A  +
cmp ebx 25h +
jnz loc_1089E1E  +
push 27h  +
jmp loc_1089E25  +
cmp ebx 27h +
jnz loc_1089E26  +
push 25h  +
pop ebx  +
push 7  +
pop ecx  +
lea edi [ebp+var_4C] +
movs   +
mov edi [ebp+var_8] +
lea eax [ebp+var_4C] +
mov [ebp+var_68] eax +
mov [ebp+var_44] ebx +
cmp ebx 25h +
jz loc_1089E4A  +
cmp ebx 26h +
jz loc_1089E4A  +
and [ebp+bPrevious] 0 +
jmp loc_1089E51  +
mov [ebp+bPrevious] 1 +
cmp ebx 26h +
jz loc_1089E61  +
cmp ebx 28h +
jz loc_1089E61  +
and [ebp+hCtl] 0 +
jmp loc_1089E68  +
mov [ebp+hCtl] 1 +
xor esi esi +
cmp ebx 27h +
jnz loc_1089E81  +
push 10h  +
call ds:GetKeyState  +
test ax ax +
jl loc_1089E81  +
mov esi 200h +
or esi 505h +
push esi  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov ecx edi +
call sub_10381F8  +
test eax eax +
jnz loc_1089FE0  +
mov eax [ebp+var_54] +
test eax 1000h +
jz loc_1089EAF  +
xor eax eax +
jmp loc_1089FE3  +
xor edx edx +
mov [ebp+var_C] eax +
cmp [ebp+hCtl] edx +
jnz loc_1089FB0  +
test eax 8000h +
jnz loc_1089FB0  +
mov eax [ebp+var_60] +
mov ecx [ebp+var_5C] +
mov ebx ds:MapWindowPoints +
push 2  +
mov [ebp+Points.x] eax +
mov [ebp+var_18] eax +
lea eax [ebp+Points] +
push eax  +
push edx  +
push [ebp+hWnd]  +
mov [ebp+Points.y] ecx +
mov [ebp+var_14] ecx +
call ebx  +
push [ebp+bPrevious]  +
push [ebp+hWnd]  +
jmp loc_1089F98  +
mov eax [ebp+hCtl] +
cmp eax [ebp+hWnd] +
jz loc_1089FE0  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
call ds:GetWindowRect  +
test [ebp+var_C] 4000h +
jz loc_1089F38  +
cmp [ebp+var_10] 0 +
mov eax [ebp+Rect.right] +
jnz loc_1089F23  +
mov eax [ebp+Rect.left] +
mov [ebp+var_18] eax +
mov [ebp+Points.x] eax +
mov eax [ebp+Points.y] +
cmp eax [ebp+Rect.top] +
jl loc_1089F92  +
cmp eax [ebp+Rect.bottom] +
jge loc_1089F92  +
jmp loc_1089F4E  +
mov eax [ebp+Rect.top] +
mov [ebp+var_14] eax +
mov [ebp+Points.y] eax +
mov eax [ebp+Points.x] +
cmp eax [ebp+Rect.left] +
jl loc_1089F92  +
cmp eax [ebp+Rect.right] +
jge loc_1089F92  +
lea esi [ebp+Points] +
lea edi [ebp+Rect] +
movs   +
movs   +
push 2  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hCtl]  +
movs   +
push 0  +
movs   +
call ebx  +
mov eax [ebp+Rect.left] +
mov ecx [ebp+var_8] +
mov [ebp+var_60] eax +
mov eax [ebp+Rect.top] +
mov [ebp+var_5C] eax +
mov eax [ebp+var_C] +
and eax 10000h +
or eax 502h +
push eax  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hCtl]  +
call sub_10381F8  +
test eax eax +
jnz loc_1089FE0  +
push [ebp+bPrevious]  +
push [ebp+hCtl]  +
mov eax [ebp+var_8] +
push dword ptr [eax+38h]  +
call ds:GetNextDlgGroupItem  +
mov [ebp+hCtl] eax +
test eax eax +
jz loc_1089FE0  +
jmp loc_1089EF7  +
xor eax eax +
cmp [ebp+bPrevious] edx +
mov ecx edi +
setnz al  +
or eax 2 +
push eax  +
xor eax eax +
cmp [ebp+bPrevious] edx +
push offset loc_108979F  +
setnz al  +
add eax 3 +
or eax 500h +
push eax  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
call sub_1089CF6  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lParam] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov eax esi +
or eax 401h +
push eax  +
push ebx  +
push [ebp+hWnd]  +
mov edi ecx +
call sub_10381F8  +
test eax eax +
jz loc_108A019  +
mov eax [ebp+hWnd] +
jmp loc_108A040  +
test dword ptr [ebx+20h] 1000h +
jz loc_108A026  +
xor eax eax +
jmp loc_108A040  +
push 2  +
push ds:GetNextDlgGroupItem  +
or esi 400h +
push esi  +
push ebx  +
push [ebp+hWnd]  +
mov ecx edi +
call sub_1089CF6  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
sub esp 28h +
cmp [ebp+hWnd] eax +
jz locret_108A083  +
mov eax [ebp+arg_0] +
movsx edx word ptr [eax+0Ch] +
mov [ebp+var_14] edx +
movsx edx word ptr [eax+0Eh] +
mov [ebp+var_1C] eax +
push 0Bh  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hWnd]  +
mov [ebp+var_10] edx +
call sub_10381F8  +
neg eax  +
sbb eax eax +
neg eax  +
leave   +
retn 8  +
***
sub ecx 10h +
jmp loc_104D3BB  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_104D0AE  +
***
sub dword ptr [esp+4] 10h +
jmp loc_104D0AE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi [eax+8] +
mov esi ecx +
xor ecx ecx +
mov [ebp+var_4] 80004005h +
cmp edi ecx +
jz loc_108A1F6  +
push ebx  +
xor ebx ebx +
cmp dword ptr [esi+6D4h] 3 +
jnz loc_108A19B  +
lea eax [ebp+pvarg] +
push eax  +
push ecx  +
push ecx  +
push 14Dh  +
push offset dword_1013948  +
push offset dword_1036958  +
lea eax [esi+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
test eax eax +
jl loc_108A199  +
push dword ptr [ebp+pvarg.anonymous_0+8]  +
push dword ptr [edi+8]  +
call ds:lstrcmpiW  +
mov ebx eax +
neg ebx  +
lea eax [ebp+pvarg] +
sbb ebx ebx +
push eax  +
inc ebx  +
call ds:VariantClear  +
test ebx ebx +
jz loc_108A199  +
cmp dword ptr [esi+6D4h] 3 +
jnz loc_108A199  +
push dword ptr [edi+8]  +
mov ebx ds:__imp_CoTaskMemFree +
and [ebp+var_4] 0 +
call ebx  +
push dword ptr [edi+4]  +
call ebx  +
push dword ptr [edi+0Ch]  +
call ebx  +
xor edx edx +
cmp [ebp+arg_4] edx +
jz loc_108A171  +
push edx  +
push 1  +
mov ecx esi +
call sub_1037C30  +
mov ecx esi +
call sub_10502DB  +
jmp loc_108A1F5  +
push 9  +
pop ecx  +
xor eax eax +
mov [ebp+lParam] edx +
lea edi [ebp+var_38] +
stos   +
push 0D09h  +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+258h]  +
mov ecx esi +
mov [ebp+var_2C] edx +
call sub_10381F8  +
jmp loc_108A1F5  +
xor ecx ecx +
xor eax eax +
inc eax  +
cmp [ebp+arg_4] ecx +
jnz loc_108A1A9  +
mov [esi+6C8h] eax +
cmp ebx ecx +
jnz loc_108A1BE  +
cmp dword ptr [esi+6D4h] 3 +
jnz loc_108A1BE  +
cmp [esi+0B4h] ecx +
jz loc_108A1C0  +
xor eax eax +
push ecx  +
push [ebp+arg_0]  +
push eax  +
push 14Ch  +
push offset dword_1013948  +
push offset dword_1036958  +
lea eax [esi+0Ch] +
push eax  +
call ds:SHLWAPI_484  +
mov [ebp+var_4] eax +
xor eax eax +
cmp [ebp+arg_4] eax +
mov ecx esi +
setz al  +
inc eax  +
push eax  +
push [ebp+arg_0]  +
call sub_1089A90  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
mov edi ecx +
cmp dword ptr [edi+0B4h] 0 +
jnz loc_108A370  +
push 0  +
push offset aTaskbarcontext  +
push offset aAdvanced  +
push 2000000h  +
push 80000001h  +
call sub_1015454  +
test eax eax +
jnz loc_108A370  +
push 0D3h  +
push hInstance  +
call ds:SHLWAPI_177  +
mov [ebp+hMenu] eax +
test eax eax +
jz loc_108A370  +
push ebx  +
push esi  +
mov esi ds:GetAsyncKeyState +
push 10h  +
call esi  +
mov ebx ds:DeleteMenu +
test ax ax +
jge loc_108A2B7  +
push 11h  +
call esi  +
test ax ax +
jge loc_108A2B7  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 0  +
push 10h  +
push offset aDisabletaskmgr  +
push offset aSoftwareMicr_9  +
push 80000001h  +
mov [ebp+var_8] 4 +
call ds:__imp_SHRegGetValueW  +
test eax eax +
jnz loc_108A2B7  +
cmp [ebp+var_C] eax +
jz loc_108A2B7  +
push eax  +
push 7FF4h  +
push [ebp+hMenu]  +
call ebx  +
push 10h  +
call esi  +
test ax ax +
jge loc_108A2C9  +
push 11h  +
call esi  +
test ax ax +
jl loc_108A2D8  +
xor esi esi +
push esi  +
push 7FF4h  +
push [ebp+hMenu]  +
call ebx  +
jmp loc_108A2DA  +
xor esi esi +
mov eax [ebp+arg_0] +
cmp eax 0FFFFFFFFh +
jnz loc_108A2FA  +
push 1  +
lea eax [ebp+Points] +
push eax  +
push esi  +
push dword ptr [edi+38h]  +
mov [ebp-10h] esi +
mov [ebp+Points] esi +
call ds:MapWindowPoints  +
jmp loc_108A307  +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp+Points] ecx +
mov [ebp-10h] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
push esi  +
push dword ptr [edi+38h]  +
push dword ptr [ebp-10h]  +
push [ebp+Points]  +
push 102h  +
push [ebp+hMenu]  +
call ds:TrackPopupMenuEx  +
cmp eax 7FF3h +
jnz loc_108A33D  +
push esi  +
mov ecx edi +
call sub_10345FD  +
push 2  +
call sub_104F291  +
jmp loc_108A35F  +
cmp eax 7FF4h +
jnz loc_108A35F  +
push esi  +
mov ecx edi +
call sub_10345FD  +
push esi  +
push esi  +
push 5B4h  +
push hWnd  +
call ds:PostMessageW  +
push [ebp+hMenu]  +
call ds:DestroyMenu  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 4  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1003475  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1003524  +
***
sub ecx 30h +
jmp loc_10190BF  +
***
sub dword ptr [esp+4] 8 +
jmp sub_10353B1  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1003475  +
***
sub dword ptr [esp+4] 30h +
jmp loc_1003475  +
***
mov dword ptr [ecx] offset off_10107D4 +
mov dword ptr [ecx+4] offset off_10460DC +
mov ecx [ecx+8] +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A433  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_108A438  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A463  +
push [ebp+arg_C]  +
mov eax [eax+8] +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_108A468  +
mov eax 80004005h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A499  +
push [ebp+arg_14]  +
mov eax [eax+8] +
push [ebp+arg_10]  +
mov ecx [eax] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_108A49E  +
mov eax 80004005h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A4D8  +
push [ebp+arg_20]  +
mov eax [eax+8] +
push [ebp+arg_1C]  +
mov ecx [eax] +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_108A4DD  +
mov eax 80004005h +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A50E  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+2Ch]  +
jmp loc_108A513  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A546  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+30h]  +
jmp loc_108A54B  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A57E  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+3Ch]  +
jmp loc_108A583  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A5B9  +
push [ebp+arg_18]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+40h]  +
jmp loc_108A5BE  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A5F1  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+44h]  +
jmp loc_108A5F6  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A61D  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
jmp loc_108A622  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A647  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
jmp loc_108A64C  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A67D  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+50h]  +
jmp loc_108A682  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A6B5  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+54h]  +
jmp loc_108A6BA  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A6EA  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+64h]  +
jmp loc_108A6EF  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A722  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+68h]  +
jmp loc_108A727  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
push esi  +
push edi  +
test eax eax +
jz loc_108A75A  +
push [ebp+arg_14]  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+6Ch]  +
jmp loc_108A75F  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A786  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_108A78B  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jz loc_108A7B0  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_108A7B5  +
mov eax 80004005h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push 104h  +
lea eax [ebp+szRole] +
push eax  +
push [ebp+lRole]  +
call GetRoleTextW  +
test eax eax +
jz loc_108A801  +
lea eax [ebp+szRole] +
push eax  +
call ds:SysAllocString  +
mov [esi] eax +
mov eax [esi] +
mov ecx [ebp+var_4] +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
xor ecx ebp +
add eax 8007000Eh +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax [ebp+arg_0] +
mov [ebp+arg_0] ax +
xor eax eax +
mov [ebp+0Ah] ax +
lea eax [ebp+arg_0] +
push eax  +
call ds:SysAllocString  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push 0  +
mov esi ecx +
call ds:GetDC  +
mov [ebp+hDC] eax +
test eax eax +
jz loc_108A9AE  +
push edi  +
push eax  +
call ds:CreateCompatibleDC  +
mov edi eax +
mov [ebp+var_4] edi +
test edi edi +
jz loc_108A99D  +
push 0FFFFFFECh  +
push dword_10B10F4  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_108A8AF  +
push 1  +
push edi  +
call ds:SetLayout  +
push ebx  +
push dword ptr [esi]  +
push edi  +
call ds:SelectObject  +
cmp dword ptr [esi+3Ch] 0 +
mov ebx ds:BitBlt +
mov [ebp+var_8] eax +
mov edi 0CC0020h +
jz loc_108A8EA  +
mov ecx [esi+30h] +
mov edx [esi+18h] +
sub edx ecx +
jz loc_108A8EA  +
push edi  +
xor eax eax +
push eax  +
push edx  +
push [ebp+var_4]  +
push dword ptr [esi+2Ch]  +
push ecx  +
push eax  +
push eax  +
push [ebp+var_4]  +
call ebx  +
mov eax [esi+28h] +
mov ecx [esi+20h] +
cmp eax ecx +
jle loc_108A93E  +
mov ecx [esi+30h] +
sub ecx [ebp+arg_0] +
sub eax [ebp+arg_0] +
push edi  +
push 0  +
push ecx  +
push [ebp+var_4]  +
push dword ptr [esi+24h]  +
push [ebp+arg_0]  +
push 0  +
push eax  +
push [ebp+var_4]  +
call ebx  +
mov ecx [esi+24h] +
mov eax [esi+30h] +
sub eax [ebp+arg_0] +
push edi  +
push ecx  +
push 1  +
push 0  +
lea edx [eax-1] +
push edx  +
push [ebp+var_4]  +
push ecx  +
mov ecx [esi+28h] +
sub ecx [esi+30h] +
push ecx  +
push 0  +
push eax  +
push [ebp+var_4]  +
call ds:StretchBlt  +
jmp loc_108A95F  +
jge loc_108A95F  +
mov ecx [ebp+arg_0] +
mov edx [esi+30h] +
push edi  +
push 0  +
add ecx ecx +
sub edx ecx +
push edx  +
push [ebp+var_4]  +
sub eax ecx +
push dword ptr [esi+24h]  +
push ecx  +
push 0  +
push eax  +
push [ebp+var_4]  +
call ebx  +
xor eax eax +
cmp [esi+3Ch] eax +
jz loc_108A981  +
mov ecx [esi+28h] +
mov edx [esi+18h] +
sub edx ecx +
jz loc_108A981  +
push edi  +
push eax  +
push eax  +
push [ebp+var_4]  +
push dword ptr [esi+2Ch]  +
push ecx  +
push eax  +
push edx  +
push [ebp+var_4]  +
call ebx  +
push [ebp+var_8]  +
mov eax [esi+28h] +
push [ebp+var_4]  +
mov [esi+30h] eax +
call ds:SelectObject  +
push [ebp+var_4]  +
call ds:DeleteDC  +
pop ebx  +
push [ebp+hDC]  +
call ds:GetDesktopWindow  +
push eax  +
call ds:ReleaseDC  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+dwBytes]  +
push [ebp+uFlags]  +
call ds:GlobalAlloc  +
mov esi eax +
test esi esi +
jz loc_108A9FC  +
push esi  +
call ds:GlobalLock  +
test eax eax +
jz loc_108A9F3  +
push [ebp+dwBytes]  +
push [ebp+arg_0]  +
push eax  +
call memcpy  +
add esp 0Ch +
push esi  +
call ds:GlobalUnlock  +
jmp loc_108A9FC  +
push esi  +
call ds:GlobalFree  +
xor esi esi +
mov eax [ebp+arg_C] +
mov [eax] esi +
mov eax esi +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_108AA38  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_108A3FB  +
test [ebp+arg_0] 1 +
jz loc_108AA6F  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+4] 0 +
mov eax 80004005h +
jz loc_108AAA2  +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [esi+4] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov ax word_10B3DA8 +
push [ebp+arg_8]  +
mov dx word_10B3DA4 +
or [ebp+var_30] 0FFFFFFFFh +
or [ebp+var_1C] 0FFFFFFFFh +
or [ebp+var_8] 0FFFFFFFFh +
mov word ptr [ebp+var_3C] ax +
xor eax eax +
inc eax  +
mov [ebp+var_34] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_20] eax +
mov [ebp+var_C] eax +
mov [ebp+var_4] eax +
lea eax [ebp+var_3C] +
xor ecx ecx +
mov [ebp+var_28] dx +
mov dx word_10B3DA0 +
push eax  +
push 3  +
mov [ebp+var_38] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_18] 4 +
mov [ebp+var_14] dx +
mov [ebp+var_10] ecx +
call ds:SHELL32_74  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
movzx eax word ptr [eax] +
cmp ax word_10B3DA0 +
jz loc_108AB47  +
cmp ax word_10B3DA8 +
jz loc_108AB47  +
cmp ax word_10B3DA4 +
jz loc_108AB47  +
xor eax eax +
inc eax  +
jmp loc_108AB49  +
xor eax eax +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 4 +
jmp loc_108AA1B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_18] +
push esi  +
push edi  +
push 5  +
pop ecx  +
lea edx [ebp+var_224] +
push edx  +
lea esi [ebp+arg_4] +
lea edi [ebp+var_220] +
push offset dword_10066D0  +
movs   +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_108AC28  +
mov eax [ebp+var_224] +
mov ecx [eax] +
lea edx [ebp+pvar] +
push edx  +
lea edx [ebp+var_220] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jl loc_108AC1C  +
mov edi 104h +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantToString  +
mov esi eax +
test esi esi +
jl loc_108AC0F  +
push 0  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
push eax  +
call ds:SHLoadIndirectString  +
mov esi eax +
test esi esi +
jl loc_108AC0F  +
push ebx  +
lea eax [ebp+var_20C] +
push eax  +
call ds:__imp_SHStrDupW  +
mov esi eax +
lea eax [ebp+pvar] +
push eax  +
call ds:__imp_PropVariantClear  +
mov eax [ebp+var_224] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov esi offset dword_1068F50 +
sub esp 14h +
push 5  +
pop ecx  +
mov edi esp +
push [ebp+arg_0]  +
movs   +
call sub_108AB61  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_10066D0  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_108ACB2  +
push 1  +
push offset dword_108ACBC  +
push [ebp+arg_0]  +
call sub_107DBC8  +
mov esi eax +
test esi esi +
jl loc_108ACA9  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 834h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 4  +
xor ebx ebx +
push ebx  +
mov edi 104h +
push edi  +
lea edx [ebp+var_414] +
push edx  +
mov [ebp+var_834] ecx +
mov ecx [eax] +
push eax  +
mov [ebp+var_82C] eax +
mov [ebp+pv] esi +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
mov [ebp+var_828] eax +
jl loc_108AE58  +
mov eax [esi] +
push 4  +
push ebx  +
push edi  +
lea ecx [ebp+var_824] +
push ecx  +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
mov [ebp+var_828] eax +
jl loc_108AE58  +
push ebx  +
mov ebx ds:CompareStringOrdinal +
push 0FFFFFFFFh  +
lea eax [ebp+var_414] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+var_824] +
push eax  +
call ebx  +
mov esi eax +
dec esi  +
dec esi  +
neg esi  +
sbb esi esi +
inc esi  +
jz loc_108AE47  +
mov eax [ebp+var_82C] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_61C] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp+var_828] eax +
test eax eax +
jl loc_108AE58  +
mov eax [ebp+pv] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov [ebp+var_828] eax +
test eax eax +
jl loc_108AE58  +
push 0  +
push 0FFFFFFFFh  +
lea eax [ebp+var_61C] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+var_20C] +
push eax  +
call ebx  +
mov esi eax +
dec esi  +
dec esi  +
neg esi  +
sbb esi esi +
inc esi  +
jz loc_108AE47  +
lea eax [ebp+var_82C] +
push eax  +
push [ebp+var_82C]  +
call sub_108AC40  +
mov [ebp+var_828] eax +
test eax eax +
jl loc_108AE58  +
lea eax [ebp+pv] +
push eax  +
push [ebp+pv]  +
call sub_108AC40  +
mov edi ds:__imp_CoTaskMemFree +
mov [ebp+var_828] eax +
test eax eax +
jl loc_108AE3F  +
push 0  +
push 0FFFFFFFFh  +
push [ebp+var_82C]  +
push 0FFFFFFFFh  +
push [ebp+pv]  +
call ebx  +
push [ebp+pv]  +
mov esi eax +
dec esi  +
dec esi  +
neg esi  +
sbb esi esi +
inc esi  +
call edi  +
push [ebp+var_82C]  +
call edi  +
cmp [ebp+var_828] 0 +
jl loc_108AE58  +
mov eax [ebp+var_834] +
mov [eax] esi +
mov ecx [ebp+var_4] +
mov eax [ebp+var_828] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+0Ch] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_108AE9B  +
test esi esi +
jz loc_108AE9B  +
push 1  +
mov ecx esi +
call sub_108AA55  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 264h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi [ebp+10h] +
push edi  +
xor eax eax +
mov edi esi +
stos   +
stos   +
stos   +
mov eax [ebp+0Ch] +
movzx eax word ptr [eax] +
mov [ebp-260h] ebx +
cmp word_10B3DA0 ax +
jnz loc_108AF12  +
xor ebx ebx +
push 4  +
inc ebx  +
xor edi edi +
push 40h  +
mov [esi] ebx +
mov [esi+8] edi +
call ds:GlobalAlloc  +
mov [esi+4] eax +
cmp eax edi +
jz loc_108AF08  +
mov [eax] ebx +
jmp loc_108B07F  +
mov edi 8007000Eh +
jmp loc_108B07F  +
cmp word_10B3DA8 ax +
jnz loc_108AFB5  +
and dword ptr [ebp-25Ch] 0 +
lea eax [ebp-25Ch] +
push eax  +
push dword ptr [ebx+8]  +
call sub_108AC40  +
mov edi eax +
test edi edi +
jl loc_108B07F  +
push 254h  +
lea eax [ebp-258h] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push dword ptr [ebp-25Ch]  +
xor ebx ebx +
push 104h  +
lea eax [ebp-20Ch] +
inc ebx  +
push eax  +
mov [ebp-258h] ebx +
call sub_100665F  +
mov edi eax +
test edi edi +
jl loc_108B07F  +
push offset a_lnk  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1010E3B  +
mov [esi] ebx +
add esi 4 +
push esi  +
push 2  +
mov edi eax +
push 254h  +
lea eax [ebp-258h] +
push eax  +
call sub_108A9B8  +
jmp loc_108B07F  +
cmp word_10B3DA4 ax +
jnz loc_108B07A  +
push dword ptr [ebx+8]  +
call sub_108AC6C  +
mov edi eax +
test edi edi +
jl loc_108B07F  +
mov ebx [ebx+8] +
mov eax [ebx] +
lea ecx [ebp-264h] +
push ecx  +
push offset stru_101DA88  +
push ebx  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jl loc_108B07F  +
lea eax [ebp-25Ch] +
push eax  +
xor ebx ebx +
inc ebx  +
push ebx  +
push 0  +
call ds:CreateStreamOnHGlobal  +
mov edi eax +
test edi edi +
jl loc_108B06C  +
mov eax [ebp-264h] +
mov ecx [eax] +
push ebx  +
push dword ptr [ebp-25Ch]  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
test edi edi +
jl loc_108B06C  +
mov eax [ebp-25Ch] +
lea edx [ebp-260h] +
push edx  +
mov [esi+4] eax +
mov eax [ebp-260h] +
push offset stru_1002CB4  +
mov dword ptr [esi] 4 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jl loc_108B06C  +
push dword ptr [ebp-260h]  +
add esi 8 +
push esi  +
call ds:__imp_IUnknown_Set  +
mov eax [ebp-260h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-264h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108B07F  +
mov edi 80004005h +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
sub dword ptr [esp+4] 4 +
jmp loc_108AE74  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
sub esp 0Ch +
push esi  +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
xor esi esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_108B0F8  +
mov eax [ebp+var_8] +
push edi  +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+var_C] +
push edx  +
mov edi 20000000h +
push 1  +
mov [ebp+var_4] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_108B0EE  +
mov esi [ebp+var_4] +
and esi edi +
sub esi edi +
neg esi  +
sbb esi esi +
inc esi  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+18h]  +
mov dword ptr [esi] offset off_100F3DC +
call ds:__imp_CoTaskMemFree  +
test byte ptr [ebp+8] 1 +
jz loc_108B126  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
push 0F0000000h  +
push 1  +
xor edi edi +
push edi  +
push edi  +
lea eax [ebp+hProv] +
push eax  +
call ds:CryptAcquireContextW  +
mov esi eax +
cmp esi edi +
jz loc_108B1C9  +
lea eax [ebp+hHash] +
push eax  +
push edi  +
push edi  +
push 8003h  +
push [ebp+hProv]  +
call ds:CryptCreateHash  +
mov esi eax +
cmp esi edi +
jz loc_108B1BF  +
mov eax [ebp+pdwDataLen] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_108B176  +
sub eax edx +
sar eax 1 +
push edi  +
add eax eax +
push eax  +
push [ebp+pdwDataLen]  +
push [ebp+hHash]  +
call ds:CryptHashData  +
mov esi eax +
cmp esi edi +
jz loc_108B1B6  +
push edi  +
lea eax [ebp+pdwDataLen] +
push eax  +
push [ebp+arg_4]  +
mov [ebp+pdwDataLen] 10h +
push 2  +
push [ebp+hHash]  +
call ds:CryptGetHashParam  +
mov esi eax +
push [ebp+hHash]  +
call ds:CryptDestroyHash  +
push edi  +
push [ebp+hProv]  +
call ds:CryptReleaseContext  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push esi  +
call sub_1018FA0  +
mov edi [ebp+arg_0] +
mov eax [edi] +
and [ebp+arg_4] 0 +
mov ebx ds:__imp_SHStrDupW +
mov [esi] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov eax [edi+18h] +
mov [esi+18h] eax +
mov eax [edi+1Ch] +
mov [esi+1Ch] eax +
mov eax [edi+20h] +
mov [esi+20h] eax +
mov eax [edi+8] +
test eax eax +
jz loc_108B22B  +
lea ecx [esi+8] +
push ecx  +
push eax  +
call ebx  +
mov [ebp+arg_4] eax +
test eax eax +
jl loc_108B28D  +
mov eax [edi+4] +
test eax eax +
jz loc_108B23C  +
lea ecx [esi+4] +
push ecx  +
push eax  +
call ebx  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jl loc_108B28D  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_108B253  +
lea ecx [esi+0Ch] +
push ecx  +
push eax  +
call ebx  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jl loc_108B28D  +
mov eax [edi+24h] +
test eax eax +
jz loc_108B26D  +
lea ecx [esi+24h] +
push ecx  +
push eax  +
call sub_10082A8  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jl loc_108B28D  +
mov edi [edi+28h] +
test edi edi +
jz loc_108B287  +
lea eax [esi+28h] +
push eax  +
push edi  +
call sub_10082A8  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jge loc_108B293  +
push esi  +
call sub_1018FA0  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1010206  +
mov eax [ebp+arg_0] +
and dword ptr [esi+28h] 0 +
or dword ptr [esi+2Ch] 0FFFFFFFFh +
or dword ptr [esi+30h] 0FFFFFFFFh +
and dword ptr [esi+34h] 0 +
mov [esi+24h] eax +
mov dword ptr [esi] offset off_100F43C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1010206  +
mov eax [ebp+arg_0] +
and dword ptr [esi+24h] 0 +
or dword ptr [esi+2Ch] 0FFFFFFFFh +
or dword ptr [esi+30h] 0FFFFFFFFh +
and dword ptr [esi+34h] 0 +
mov dword ptr [esi] offset off_100F43C +
mov [esi+28h] eax +
test eax eax +
jz loc_108B30A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+28h] +
push edi  +
mov dword ptr [esi] offset off_100F43C +
test eax eax +
jz loc_108B32F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push dword ptr [esi+24h]  +
call ds:__imp_SHELL32_155  +
push dword ptr [esi+34h]  +
mov edi ds:__imp_CoTaskMemFree +
call edi  +
push dword ptr [esi+18h]  +
mov dword ptr [esi] offset off_100F3DC +
call edi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+28h] 0 +
mov eax 80004005h +
jz loc_108B375  +
push [ebp+arg_4]  +
mov eax [ecx+28h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
mov esi ecx +
mov [ebp+var_4] eax +
test edi edi +
jz loc_108B3FB  +
mov edx [esi+24h] +
test edx edx +
jz loc_108B3AE  +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_108B3AE  +
push ecx  +
push edx  +
call sub_108F7DC  +
mov [ebp+var_4] eax +
jmp loc_108B3CA  +
mov edx [esi+28h] +
test edx edx +
jz loc_108B3FB  +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_108B3FB  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
push edx  +
call sub_108ACD5  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_108B3FB  +
mov ecx 1C0h +
test [esi+10h] ecx +
jz loc_108B3FB  +
test [edi+10h] ecx +
jz loc_108B3FB  +
push 0FFFFFFFFh  +
push dword ptr [edi+34h]  +
push 0FFFFFFFFh  +
push dword ptr [esi+34h]  +
push 0  +
push 400h  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi+24h]  +
call ds:__imp_SHELL32_17  +
push 1  +
push [ebp+arg_0]  +
push dword ptr [esi+24h]  +
call ds:SHELL32_154  +
test eax eax +
jz loc_108B444  +
mov [esi+24h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_108B316  +
test byte ptr [ebp+8] 1 +
jz loc_108B468  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103E3D4  +
lea eax [esi+10h] +
push eax  +
push [ebp+arg_C]  +
mov dword ptr [esi] offset off_1069774 +
call sub_108B1D6  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+10h] +
push eax  +
mov dword ptr [esi] offset off_1069774 +
call sub_1018FA0  +
mov ecx esi +
pop esi  +
jmp sub_103E43B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_108B4A8  +
test byte ptr [ebp+8] 1 +
jz loc_108B4E3  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 3Ch  +
mov esi ecx +
call sub_1002B98  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_108B525  +
lea eax [esi+1FCh] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1012341  +
push eax  +
push [ebp+arg_0]  +
mov ecx edi +
push esi  +
call sub_108B474  +
jmp loc_108B527  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 104h  +
lea eax [esi+4] +
push eax  +
push 14Bh  +
mov dword ptr [esi] 4 +
push dword_10B23D0  +
call ds:LoadStringW  +
xor eax eax +
mov [esi+20Ch] ax +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
mov eax 80070057h +
cmp edi ebx +
jz loc_108B897  +
push esi  +
push 4  +
pop ecx  +
mov esi offset dword_1050368 +
xor edx edx +
cmps   +
jnz loc_108B896  +
cmp [ebp+arg_8] 14Ch +
jnz loc_108B87C  +
mov eax [ebp+arg_C] +
mov esi [ebp+arg_0] +
mov [esi+1D8h] eax +
mov eax [ebp+arg_10] +
xor edi edi +
cmp eax ebx +
jz loc_108B7AA  +
mov eax [eax+8] +
cmp eax ebx +
jz loc_108B7AA  +
mov [ebp+arg_8] eax +
cmp [esi+1D4h] ebx +
jnz loc_108B6CF  +
cmp [esi+78h] ebx +
jz loc_108B660  +
cmp dword_10B24CC ebx +
jz loc_108B6C5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_108B61B  +
test al al +
jnz loc_108B6C5  +
mov edx dword_10B24B8 +
mov edi dword_10B24BC +
mov ecx 2010000h +
mov eax 80010000h +
and edx ecx +
and edi eax +
or edx edi +
jz loc_108B6C5  +
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edi edx +
and edi ecx +
mov ecx ebx +
and ecx eax +
cmp edi edx +
jnz loc_108B6C5  +
cmp ecx ebx +
jnz loc_108B6C5  +
push offset dword_108B8C0  +
jmp loc_108B6B4  +
cmp dword_10B24CC ebx +
jz loc_108B6C5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_108B675  +
test al al +
jnz loc_108B6C5  +
mov edx dword_10B24B8 +
mov edi dword_10B24BC +
mov ecx 2010000h +
mov eax 80010000h +
and edx ecx +
and edi eax +
or edx edi +
jz loc_108B6C5  +
mov edx dword_10B24C0 +
mov ebx dword_10B24C4 +
mov edi edx +
and edi ecx +
mov ecx ebx +
and ecx eax +
cmp edi edx +
jnz loc_108B6C5  +
cmp ecx ebx +
jnz loc_108B6C5  +
push offset dword_108B8D0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov dword ptr [esi+1D4h] 1 +
xor eax eax +
mov ebx 10000h +
mov edi 80000000h +
cmp [esi+78h] eax +
jnz loc_108B744  +
cmp [esi+1D8h] eax +
jz loc_108B744  +
cmp dword_10B24CC eax +
jz loc_108B744  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_108B6FD  +
test al al +
jnz loc_108B744  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_108B744  +
mov edx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax edx +
and eax ebx +
and ecx edi +
cmp eax edx +
jnz loc_108B744  +
cmp ecx dword_10B24C4 +
jnz loc_108B744  +
push offset dword_108B8B0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
cmp dword ptr [esi+78h] 0 +
jz loc_108B7A5  +
cmp dword_10B24CC 0 +
jz loc_108B7A5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_108B760  +
test al al +
jnz loc_108B7A5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_108B7A5  +
mov edx dword_10B24C0 +
mov eax edx +
and eax ebx +
mov ebx dword_10B24C4 +
mov ecx ebx +
and ecx edi +
cmp eax edx +
jnz loc_108B7A5  +
cmp ecx ebx +
jnz loc_108B7A5  +
push offset dword_108B8A0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov edi [ebp+arg_8] +
xor ebx ebx +
lea eax [esi+1F0h] +
push eax  +
call sub_1018FA0  +
mov [esi+1DCh] ebx +
cmp edi ebx +
jz loc_108B824  +
mov eax [edi] +
mov [esi+1F0h] eax +
mov eax [edi+4] +
mov [esi+1F4h] eax +
mov eax [edi+8] +
mov [esi+1F8h] eax +
mov eax [edi+0Ch] +
mov [esi+1FCh] eax +
mov eax [edi+24h] +
mov [esi+214h] eax +
mov eax [edi+28h] +
mov [esi+218h] eax +
mov eax [edi+10h] +
mov [esi+200h] eax +
mov eax [edi+14h] +
mov [esi+204h] eax +
mov eax [edi+18h] +
mov [esi+208h] eax +
mov eax [edi+1Ch] +
mov [esi+20Ch] eax +
mov eax [edi+20h] +
mov [esi+210h] eax +
jmp loc_108B861  +
or dword ptr [esi+1F0h] 0FFFFFFFFh +
mov [esi+1F4h] ebx +
mov [esi+1F8h] ebx +
mov [esi+1FCh] ebx +
mov [esi+200h] ebx +
mov [esi+204h] ebx +
mov [esi+20Ch] ebx +
mov [esi+210h] ebx +
mov [esi+214h] ebx +
mov [esi+218h] ebx +
push ebx  +
push 9  +
push 40Bh  +
mov [esi+14Ch] ebx +
push dword ptr [esi+38h]  +
call ds:SendMessageW  +
xor eax eax +
jmp loc_108B896  +
cmp [ebp+arg_8] 14Dh +
jnz loc_108B896  +
push [ebp+arg_14]  +
mov eax [ebp+arg_0] +
push dword ptr [eax+1F8h]  +
call sub_103D1E0  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea edx [ebp+var_214] +
push edx  +
lea edx [ebp+var_210] +
push edx  +
call dword ptr [eax+20h]  +
mov esi eax +
test esi esi +
jl loc_108B95F  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push 8000h  +
push [ebp+var_214]  +
push [ebp+var_210]  +
call sub_102711E  +
mov esi eax +
test esi esi +
jl loc_108B953  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
call ds:__imp_SHStrDupW  +
mov esi eax +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx+30h] +
test eax eax +
jz loc_108B9B6  +
cmp eax 1 +
jz loc_108B9B6  +
cmp eax 2 +
jz loc_108B9B6  +
cmp dword ptr [ecx+24h] 0 +
jz loc_108B9B6  +
mov eax [ebp+arg_4] +
push 1  +
push 0FFFFFFFFh  +
push offset aMicrosoft_wi_1  +
push 0FFFFFFFFh  +
push dword ptr [eax+8]  +
call ds:CompareStringOrdinal  +
cmp eax 2 +
jnz loc_108B9B6  +
xor eax eax +
inc eax  +
jmp loc_108B9B8  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+pszPath]  +
call ds:__imp_PathFindExtensionW  +
test eax eax +
jz loc_108B9D9  +
cmp word ptr [eax] 0 +
jnz loc_108B9DB  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push 60h  +
mov ebx 8007000Eh +
call ds:__imp_CoTaskMemAlloc  +
mov esi eax +
test esi esi +
jz loc_108BA31  +
mov eax [ebp+arg_8] +
mov [esi+18h] eax +
lea eax [esi+8] +
and dword ptr [eax] 0 +
cmp [ebp+arg_0] 0 +
mov dword ptr [esi] 60h +
mov dword ptr [esi+4] 11h +
jz loc_108BA27  +
push eax  +
push [ebp+arg_0]  +
call ds:__imp_SHStrDupW  +
mov eax [ebp+arg_4] +
xor ebx ebx +
mov [esi+20h] ebx +
mov [eax] esi +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx] +
call dword ptr [eax+58h]  +
neg eax  +
sbb eax eax +
add eax 23h +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+58h]  +
test eax eax +
jnz loc_108BA76  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_108BA76  +
push 20h  +
jmp loc_108BA78  +
push 21h  +
pop eax  +
pop esi  +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_108BAC3  +
push offset dword_1068F94  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_108BAC3  +
lea eax [ebp+rcSrc] +
push eax  +
push [ebp+lprc]  +
call ds:CopyRect  +
mov eax [ebp+rcSrc.right] +
sub eax [esi+68h] +
mov ecx [ebp+lprc] +
mov [ecx] eax +
jmp loc_108BACC  +
push [ebp+lprc]  +
call ds:SetRectEmpty  +
mov eax [ebp+lprc] +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+20h] +
push [ebp+nBufferMax]  +
not eax  +
push [ebp+lpBuffer]  +
and eax 1 +
or eax 14Ah +
push eax  +
push dword_10B23D0  +
call ds:LoadStringW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_108BB26  +
dec eax  +
jz loc_108BB21  +
dec eax  +
jnz loc_108BB26  +
push 3  +
jmp loc_108BB23  +
push 2  +
pop eax  +
jmp loc_108BB29  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor eax eax +
sub ecx eax +
jz loc_108BB54  +
dec ecx  +
jz loc_108BB4D  +
dec ecx  +
jnz loc_108BB59  +
mov eax 148h +
jmp loc_108BB59  +
mov eax 147h +
jmp loc_108BB59  +
mov eax 146h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_108BB7D  +
dec eax  +
jz loc_108BB78  +
dec eax  +
jnz loc_108BB7D  +
inc eax  +
jmp loc_108BB7F  +
push 2  +
pop eax  +
jmp loc_108BB7F  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor eax eax +
push edi  +
or edi 0FFFFFFFFh +
cmp ebx eax +
mov esi ecx +
mov [ebp+var_C] eax +
mov [ebp+hMem] eax +
mov [ebp+var_8] eax +
jl loc_108BC23  +
cmp ebx 2 +
jle loc_108BBEF  +
cmp ebx 3 +
jz loc_108BBE1  +
cmp ebx 4 +
jz loc_108BBCF  +
jle loc_108BC23  +
cmp ebx 6 +
jg loc_108BC23  +
mov edi [esi+1F8h] +
mov [ebp+hMem] offset byte_1002CD0 +
jmp loc_108BC30  +
mov edi [esi+1F8h] +
lea ecx [ebp+hMem] +
push ecx  +
push eax  +
push 149h  +
jmp loc_108BC0C  +
mov eax [ebp+arg_8] +
mov edi [esi+1F8h] +
mov [ebp+hMem] eax +
jmp loc_108BC30  +
push ebx  +
call sub_108BB62  +
mov edx eax +
push edx  +
call sub_108BB0A  +
mov edi eax +
lea eax [ebp+hMem] +
push eax  +
push 0  +
push edx  +
call sub_108BB32  +
push eax  +
push dword_10B23D0  +
call sub_107B844  +
mov [ebp+arg_4] eax +
mov [ebp+var_8] 1 +
jmp loc_108BC2A  +
mov [ebp+arg_4] 80070057h +
cmp [ebp+arg_4] 0 +
jl loc_108BCA9  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+hMem]  +
mov ecx esi +
call sub_108B9E4  +
mov [ebp+arg_4] eax +
test eax eax +
jl loc_108BC9A  +
cmp ebx 6 +
mov ebx [ebp+var_C] +
jnz loc_108BC69  +
cmp dword ptr [esi+38h] 0 +
jz loc_108BC69  +
or dword ptr [ebx+4] 1008h +
mov dword ptr [ebx+24h] 2 +
mov dword ptr [ebx+48h] 0FFFFFFFEh +
push ebx  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_108F8DA  +
mov [ebp+arg_4] eax +
test eax eax +
jl loc_108BC8C  +
lea eax [esi+1F8h] +
mov ecx [eax] +
cmp edi ecx +
jnz loc_108BC9A  +
inc ecx  +
mov [eax] ecx +
jmp loc_108BC9A  +
push dword ptr [ebx+8]  +
mov esi ds:__imp_CoTaskMemFree +
call esi  +
push ebx  +
call esi  +
cmp [ebp+var_8] 0 +
jz loc_108BCA9  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0 +
jnz loc_108BCCE  +
push dword ptr [eax+4]  +
call ds:__imp_CoTaskMemFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea ecx [ebp+arg_0] +
xor edi edi +
push ecx  +
mov [esi] edi +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+18h]  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_108BD58  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_108BD58  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
lea ecx [ebp+var_14] +
push ecx  +
stos   +
push 0  +
push [ebp+arg_4]  +
stos   +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_108BD30  +
lea eax [ebp+var_14] +
push eax  +
call sub_108BCB8  +
cmp [ebp+var_14] 2 +
jz loc_108BD3D  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jnb loc_108BD58  +
jmp loc_108BD05  +
mov ecx [ebp+var_8] +
mov eax [ebp+var_C] +
mov edx [ebp+arg_8] +
lea eax [ecx+eax+1] +
mov [esi] eax +
mov ecx [edx] +
cmp eax ecx +
jbe loc_108BD54  +
mov [esi] ecx +
mov eax [esi] +
sub [edx] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov ebx ecx +
mov [ebp+var_4] esi +
cmp [ebp+arg_14] esi +
jz loc_108BE29  +
cmp [ebp+arg_4] esi +
jz loc_108BD95  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
call sub_10082A8  +
mov edi eax +
jmp loc_108BD97  +
xor edi edi +
cmp edi esi +
jl loc_108BE2E  +
push 38h  +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_108BDB7  +
push [ebp+var_4]  +
mov ecx eax +
call sub_108B2A2  +
mov esi eax +
test esi esi +
jz loc_108BE19  +
mov eax [ebp+arg_C] +
mov ecx eax +
sub ecx 0 +
jz loc_108BDDA  +
dec ecx  +
jz loc_108BDD4  +
dec ecx  +
jnz loc_108BDE1  +
or dword ptr [esi+10h] 100h +
jmp loc_108BDE1  +
or dword ptr [esi+10h] 40h +
jmp loc_108BDE1  +
or dword ptr [esi+10h] 80h +
mov ecx [ebp+arg_8] +
mov [esi+30h] eax +
mov eax [ebp+arg_10] +
mov [esi+2Ch] eax +
lea eax [esi+34h] +
push eax  +
push [ebp+arg_14]  +
mov [esi+14h] ecx +
call ds:__imp_SHStrDupW  +
mov edi eax +
test edi edi +
jl loc_108BE10  +
push esi  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_101026B  +
mov edi eax +
mov ecx esi +
call sub_100F319  +
jmp loc_108BE2E  +
push [ebp+var_4]  +
call ds:__imp_SHELL32_155  +
mov edi 8007000Eh +
jmp loc_108BE2E  +
mov edi 80004005h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov ebx ecx +
call sub_1012E81  +
mov edi eax +
test edi edi +
jg loc_108BEB8  +
cmp dword ptr [esi+28h] 0 +
jz loc_108BEB8  +
mov eax [esi+28h] +
mov ecx [eax] +
lea edx [ebp+var_210] +
push edx  +
push 104h  +
lea edx [ebp+var_20C] +
push edx  +
xor edi edi +
push eax  +
inc edi  +
call dword ptr [ecx+40h]  +
test eax eax +
jl loc_108BEB8  +
push 40h  +
push [ebp+var_210]  +
lea eax [ebp+var_20C] +
push eax  +
call ds:Shell_GetCachedImageIndexW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_108BEB5  +
push edi  +
push esi  +
mov ecx ebx +
call sub_10130D9  +
jmp loc_108BEB8  +
xor edi edi +
inc edi  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
mov esi ecx +
push edi  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+20h]  +
mov edi eax +
test edi edi +
jl loc_108BF34  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push 1  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push dword ptr [esi+44h]  +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
test edi edi +
jl loc_108BF2B  +
cmp [ebp+arg_0] 0 +
jz loc_108BF2B  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_108B41E  +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_214] eax +
mov eax [ebp+arg_8] +
push offset dword_1068F94  +
mov [ebp+hMenu] eax +
call ds:SHLWAPI_618  +
mov esi ds:LoadStringW +
mov edi ds:InsertMenuW +
mov ebx 104h +
test eax eax +
jnz loc_108BFC9  +
mov eax [ebp+arg_4] +
test dword ptr [eax+10h] 3C0h +
jnz loc_108BFC9  +
test byte ptr [eax+20h] 1 +
jnz loc_108BFC9  +
push ebx  +
lea eax [ebp+NewItem] +
push eax  +
push 14Bh  +
push dword_10B23D0  +
call esi  +
lea eax [ebp+NewItem] +
push eax  +
push 2  +
push [ebp+uFlags]  +
push 1  +
push [ebp+hMenu]  +
call edi  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+28h] 0 +
jz loc_108C00D  +
push ebx  +
lea eax [ebp+NewItem] +
push eax  +
push 155h  +
push dword_10B23D0  +
call esi  +
lea eax [ebp+NewItem] +
push eax  +
push 3  +
push [ebp+uFlags]  +
push 2  +
push [ebp+hMenu]  +
call edi  +
push 0  +
push 3  +
push [ebp+hMenu]  +
call ds:SetMenuDefaultItem  +
push offset aRename  +
push 100h  +
push [ebp+hMenu]  +
push [ebp+var_214]  +
call sub_1043341  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset dword_1068F94  +
xor esi esi +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_108C07C  +
mov eax [ebp+arg_0] +
test dword ptr [eax+10h] 3C0h +
jnz loc_108C07C  +
test byte ptr [eax+20h] 1 +
jz loc_108C077  +
mov eax [ebp+arg_8] +
mov esi 14Ah +
mov dword ptr [eax] 2 +
jmp loc_108C07C  +
mov esi 2021h +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov edi ds:RegisterClipboardFormatW +
push offset aFilegroupdes_0  +
mov dword ptr [esi] offset off_10107D4 +
mov dword ptr [esi+4] offset off_10460DC +
mov [esi+8] eax +
mov dword ptr [esi+0Ch] 1 +
call edi  +
push offset aFilecontents  +
mov word_10B3DA8 ax +
call edi  +
push offset szFormat  +
mov word_10B3DA4 ax +
call edi  +
mov word_10B3DA0 ax +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1043B15  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov ecx [eax] +
and [ebp+var_8] 0 +
lea edx [ebp+var_4] +
push edx  +
push offset dword_10066D0  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_108C170  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+pvar] +
push edx  +
push offset dword_108C178  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_108C167  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+pvar] +
push eax  +
call ds:PropVariantToBoolean  +
lea eax [ebp+pvar] +
push eax  +
call ds:__imp_PropVariantClear  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push offset stru_1026650  +
push eax  +
xor esi esi +
call dword ptr [ecx]  +
test eax eax +
jl loc_108C1BF  +
mov eax [ebp+var_4] +
call sub_108C11B  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+ppv] +
and dword ptr [edi] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset stru_103B484  +
push 3  +
push 0  +
push offset stru_103B474  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_108C218  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+ppv] +
test esi esi +
jl loc_108C212  +
mov [edi] eax +
jmp loc_108C218  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+ppv] +
and dword ptr [edi] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset stru_10696D4  +
push 3  +
push 0  +
push offset stru_103B464  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_108C26F  +
mov eax [ebp+ppv] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+ppv] +
test esi esi +
jl loc_108C269  +
mov [edi] eax +
jmp loc_108C26F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+ppv] +
and dword ptr [edi] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset stru_103B494  +
push 3  +
push 0  +
push offset stru_103B464  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_108C2C6  +
mov eax [ebp+ppv] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+ppv] +
test esi esi +
jl loc_108C2C0  +
mov [edi] eax +
jmp loc_108C2C6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+ppv] +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 3  +
xor esi esi +
push esi  +
push offset rclsid  +
mov [edi] esi +
call ds:__imp_CoCreateInstance  +
mov ebx eax +
cmp ebx esi +
jl loc_108C31A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push esi  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+24h] +
mov eax 80004005h +
test ecx ecx +
jz loc_108C34B  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset dword_100671C  +
push ecx  +
call ds:__imp_SHBindToParent  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+28h] 0 +
push edi  +
jz loc_108C39F  +
push 10h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_108C37D  +
push dword ptr [esi+28h]  +
mov ecx eax +
call sub_108C088  +
mov esi eax +
jmp loc_108C37F  +
xor esi esi +
test esi esi +
jz loc_108C398  +
push [ebp+arg_4]  +
mov eax [esi] +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
jmp loc_108C3AC  +
mov edi 80004005h +
jmp loc_108C3AC  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1043B15  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+24h] +
push esi  +
mov esi 80070057h +
test eax eax +
jz loc_108C3FF  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1068A00  +
push eax  +
call ds:__imp_SHCreateItemFromIDList  +
mov esi eax +
test esi esi +
jl loc_108C417  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset stru_1002CB4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108C417  +
cmp dword ptr [ecx+28h] 0 +
jz loc_108C417  +
push [ebp+arg_0]  +
mov ecx [ecx+28h] +
mov eax [ecx] +
push offset stru_1002CB4  +
push ecx  +
call dword ptr [eax]  +
mov esi eax +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ds:__imp_CoTaskMemFree +
mov esi ecx +
push dword ptr [esi]  +
call edi  +
push dword ptr [esi+4]  +
call edi  +
push dword ptr [esi+8]  +
call edi  +
push dword ptr [esi+0Ch]  +
call ds:__imp_SHELL32_155  +
lea eax [esi+14h] +
push eax  +
call sub_1002BEE  +
add esi 18h +
push esi  +
call sub_1002BEE  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_108C423  +
test [ebp+arg_0] 1 +
jz loc_108C47A  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
lea eax [ebp+ppv] +
mov esi ecx +
push eax  +
push dword ptr [esi+200h]  +
push dword ptr [esi+204h]  +
call sub_108C1C9  +
mov ebx eax +
test ebx ebx +
jl loc_108C4E1  +
push edi  +
push [ebp+arg_4]  +
mov edi [ebp+ppv] +
push [ebp+arg_0]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+1Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_108C4DA  +
and dword ptr [esi+158h] 0 +
push 0  +
push 0Ch  +
push 40Bh  +
push dword ptr [esi+44h]  +
call ds:PostMessageW  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
mov esi ecx +
mov ecx [ebp+arg_0] +
push eax  +
call sub_108C3B9  +
mov edi eax +
test edi edi +
jl loc_108C539  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_108C486  +
mov edi eax +
test edi edi +
jl loc_108C530  +
xor eax eax +
cmp [esi+84h] eax +
setnz al  +
add eax 4 +
push eax  +
call sub_106DF55  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+String] +
lea eax [ebp+String] +
push eax  +
push offset dword_100DC8C  +
push edi  +
xor esi esi +
call sub_10719E5  +
test eax eax +
jl loc_108C56B  +
mov eax [ebp+String] +
jmp loc_108C580  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1069734  +
push edi  +
call dword ptr [eax]  +
test eax eax +
jl loc_108C589  +
mov eax [ebp+var_4] +
mov ecx [eax] +
xor esi esi +
push eax  +
inc esi  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+24h] +
test eax eax +
jz loc_108C5F3  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_100671C  +
push eax  +
call ds:__imp_SHBindToParent  +
mov ebx eax +
test ebx ebx +
jl loc_108C601  +
push edi  +
lea edi [esi+34h] +
push edi  +
push 0BEEF001Eh  +
push [ebp+arg_0]  +
call sub_107D4BA  +
test eax eax +
jnz loc_108C5E7  +
push edi  +
push eax  +
push [ebp+arg_0]  +
push [ebp+var_4]  +
call sub_10125A3  +
mov ebx eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
jmp loc_108C601  +
lea eax [esi+34h] +
push eax  +
push dword ptr [esi+28h]  +
call sub_108AC40  +
mov ebx eax +
cmp [ebp+arg_4] 0 +
jz loc_108C60E  +
or dword ptr [esi+10h] 200h +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104A0BC  +
push 17h  +
xor esi esi +
push esi  +
push offset stru_104A0CC  +
mov [ebp+var_10] ecx +
mov [ebp+ppv] esi +
call ds:__imp_CoCreateInstance  +
mov ebx eax +
cmp ebx esi +
jl loc_108C6F4  +
mov eax [ebp+ppv] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_108C70C  +
mov [ebp+var_8] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
cmp ebx esi +
jl loc_108C6E5  +
mov eax [ebp+var_8] +
push edi  +
mov edi [ebp+arg_0] +
lea edx [ebp+var_4] +
push edx  +
push dword ptr [edi+24h]  +
mov [ebp+var_4] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov ebx eax +
cmp ebx esi +
jl loc_108C6E4  +
cmp [ebp+var_4] esi +
jz loc_108C6E4  +
push 38h  +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_108C6A2  +
push [ebp+var_4]  +
mov ecx eax +
call sub_108B2A2  +
mov esi eax +
test esi esi +
jz loc_108C6DF  +
mov eax [edi+20h] +
mov ecx [ebp+var_10] +
shl eax 1Fh +
sar eax 1Fh +
xor eax [esi+20h] +
push 0  +
and eax 1 +
xor [esi+20h] eax +
mov eax [edi+14h] +
push esi  +
mov [esi+14h] eax +
call sub_108C596  +
mov ebx eax +
test ebx ebx +
jl loc_108C6D6  +
mov eax [ebp+arg_4] +
mov [eax] esi +
jmp loc_108C6E4  +
mov ecx esi +
call sub_100F319  +
jmp loc_108C6E4  +
mov ebx 8007000Eh +
pop edi  +
mov eax [ebp+var_8] +
xor esi esi +
cmp eax esi +
jz loc_108C6F4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_108C701  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 294h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 2  +
push dword ptr [ecx+44h]  +
mov [ebp+var_218] ecx +
call ds:GetAncestor  +
mov ebx ds:GetKeyState +
push 10h  +
mov [ebp+ppv] eax +
call ebx  +
test ax ax +
jge loc_108C770  +
push 11h  +
call ebx  +
test ax ax +
jge loc_108C770  +
xor ebx ebx +
inc ebx  +
jmp loc_108C772  +
xor ebx ebx +
mov esi [edi+0Ch] +
mov ecx [ebp+var_218] +
and [ebp+var_22C] 0 +
lea eax [edi+10h] +
push eax  +
push esi  +
call sub_108B976  +
test eax eax +
jz loc_108C7B2  +
mov ecx [ebp+var_218] +
lea eax [ebp+var_22C] +
push eax  +
push esi  +
call sub_108C61B  +
cmp [ebp+var_22C] 0 +
jz loc_108C7B2  +
mov esi [ebp+var_22C] +
mov eax [esi+30h] +
xor ecx ecx +
mov [ebp+var_210] 80004005h +
cmp eax ecx +
jnz loc_108C8A4  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
push 3  +
push ecx  +
push offset stru_1029D80  +
call ds:__imp_CoCreateInstance  +
xor ebx ebx +
cmp eax ebx +
mov [ebp+var_210] eax +
jl loc_108CE1A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
cmp [edi+20h] ebx +
jz loc_108C806  +
push ebx  +
push dword ptr [esi+24h]  +
jmp loc_108C80A  +
push dword ptr [esi+24h]  +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+var_210] eax +
jl loc_108C855  +
lea eax [ebp+var_294] +
push eax  +
mov eax [ebp+var_218] +
push 0CCh  +
push dword ptr [eax+44h]  +
call sub_103C26A  +
mov eax [edi+20h] +
neg eax  +
sbb eax eax +
and eax 5 +
add eax 4 +
push eax  +
push dword ptr [edi+18h]  +
push dword ptr [esi+24h]  +
push offset dword_10B2478  +
call sub_102E3FE  +
jmp loc_108C9E4  +
cmp [ebp+var_210] 80070490h +
jnz loc_108C899  +
xor eax eax +
lea edi [ebp+dwItem1+2] +
stos   +
stos   +
push 0Ah  +
stos   +
pop eax  +
push ebx  +
mov word ptr [ebp+dwItem1] ax +
lea eax [ebp+dwItem1] +
push eax  +
push 3000h  +
push 4000000h  +
mov [ebp+dwItem1+2] 0Dh +
call ds:SHChangeNotify  +
mov [ebp+var_210] ebx +
jmp loc_108C9E4  +
cmp eax 1 +
jnz loc_108C959  +
mov eax [esi] +
lea ecx [ebp+var_224] +
push ecx  +
lea ecx [ebp+var_21C] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_108CE1A  +
lea eax [ebp+var_294] +
push eax  +
mov eax [ebp+var_218] +
push 0CCh  +
push dword ptr [eax+44h]  +
call sub_103C26A  +
neg ebx  +
sbb ebx ebx +
and ebx offset aRunas +
push ebx  +
push 4000100h  +
push [ebp+var_224]  +
push [ebp+var_21C]  +
push 0  +
push [ebp+ppv]  +
call ds:SHLWAPI_571  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_108C94E  +
push offset dword_10688B0  +
call sub_1008600  +
test al al +
jz loc_108C94E  +
push dword ptr [edi+14h]  +
call ds:__imp_PathFindFileNameW  +
test eax eax +
jz loc_108C94E  +
cmp dword ptr [edi+20h] 0 +
jz loc_108C943  +
push 5  +
jmp loc_108C945  +
push 7  +
push dword ptr [edi+18h]  +
push eax  +
call sub_106DF75  +
mov eax [ebp+var_21C] +
jmp loc_108CBC9  +
cmp eax 2 +
jnz loc_108C9EF  +
lea eax [ebp+ppv] +
push eax  +
mov eax offset dword_100DB38 +
push eax  +
push eax  +
mov eax [ebp+var_218] +
push dword ptr [eax+28h]  +
mov [ebp+ppv] ecx +
call ds:IUnknown_QueryService  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_108CE1A  +
mov eax [ebp+ppv] +
push dword ptr [edi+30h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_108C9E4  +
push offset dword_10688C0  +
call sub_1008600  +
test al al +
jz loc_108C9E4  +
push dword ptr [edi+14h]  +
call ds:__imp_PathFindFileNameW  +
test eax eax +
jz loc_108C9E4  +
push dword ptr [esi+0Ch]  +
mov ecx [esi+10h] +
push 0  +
and ecx 200h +
push ecx  +
push dword ptr [esi+14h]  +
push 7  +
push dword ptr [edi+18h]  +
push eax  +
call sub_106E2BB  +
mov eax [ebp+ppv] +
jmp loc_108CBC9  +
cmp [esi+24h] ecx +
jz loc_108CBD4  +
mov eax [esi] +
lea ecx [ebp+var_21C] +
push ecx  +
lea ecx [ebp+var_220] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_108CE1A  +
lea eax [ebp+var_294] +
push eax  +
mov eax [ebp+var_218] +
push 0CCh  +
push dword ptr [eax+44h]  +
call sub_103C26A  +
mov eax [ebp+var_220] +
lea edx [ebp+var_224] +
push edx  +
lea edx [ebp+var_21C] +
push edx  +
push 1  +
mov [ebp+var_224] offset __ImageBase +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_108CBC3  +
neg ebx  +
sbb ebx ebx +
and ebx offset aRunas +
push ebx  +
push 4000100h  +
push [ebp+var_21C]  +
push [ebp+var_220]  +
push 0  +
push [ebp+ppv]  +
call ds:SHLWAPI_571  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_108CBC3  +
cmp dword_10B24CC 0 +
jz loc_108CB09  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_108CAB7  +
test al al +
jnz loc_108CB09  +
mov edx dword_10B24B8 +
mov ebx dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and ebx eax +
or edx ebx +
jz loc_108CB09  +
mov edx dword_10B24C0 +
mov ebx edx +
and ebx ecx +
mov ecx dword_10B24C4 +
and ecx eax +
cmp ebx edx +
jnz loc_108CB09  +
cmp ecx dword_10B24C4 +
jnz loc_108CB09  +
push offset dword_108CE58  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov ecx [ebp+var_218] +
lea eax [ebp+pszPath] +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_108B8E5  +
test eax eax +
jl loc_108CBC3  +
push dword ptr [edi+14h]  +
call ds:__imp_PathFindFileNameW  +
mov [ebp+ppv] eax +
test eax eax +
jz loc_108CBB7  +
push dword ptr [esi+0Ch]  +
mov ebx [esi+10h] +
push [ebp+pszPath]  +
and ebx 200h +
call sub_108B9C1  +
push eax  +
push ebx  +
push dword ptr [esi+14h]  +
push 1  +
push dword ptr [edi+18h]  +
push [ebp+ppv]  +
call sub_106E2BB  +
lea eax [ebp+var_230] +
push eax  +
mov eax [ebp+var_218] +
push offset stru_1002CB4  +
push offset dword_10369D0  +
push dword ptr [eax+28h]  +
call ds:IUnknown_QueryService  +
test eax eax +
jl loc_108CBA7  +
push 9  +
push dword ptr [edi+18h]  +
push [ebp+ppv]  +
call sub_106DF75  +
mov eax [ebp+var_230] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108CBB7  +
push 0Ah  +
push dword ptr [edi+18h]  +
push [ebp+ppv]  +
call sub_106DF75  +
push [ebp+pszPath]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_220] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108CE1A  +
cmp [esi+28h] ecx +
jz loc_108CE2D  +
mov eax [esi+28h] +
mov ecx [eax] +
lea edx [ebp+var_21C] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
cmp [ebp+var_21C] 0 +
jz loc_108CE2D  +
test dword ptr [esi+10h] 200h +
jz loc_108CC4D  +
mov eax [esi+28h] +
mov ecx [eax] +
lea edx [ebp+pszPath] +
push edx  +
push offset loc_108CE7C  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_108CC4D  +
mov eax [ebp+pszPath] +
mov ecx [eax] +
lea edx [ebp+var_230] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_108CC41  +
test [ebp+var_230] 2000h +
jz loc_108CC41  +
xor ebx ebx +
inc ebx  +
mov eax [ebp+pszPath] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+ppv] +
add esp 0Ch +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.fMask] 10Ch +
mov [ebp+ExecInfo.nShow] 1 +
mov [ebp+ExecInfo.hwnd] eax +
mov [ebp+ExecInfo.lpVerb] offset aRunas_0 +
test ebx ebx +
jnz loc_108CCA2  +
mov [ebp+ExecInfo.lpVerb] offset aOpen_0 +
mov eax [ebp+var_21C] +
lea edx [ebp+var_224] +
push edx  +
mov [ebp+ExecInfo.lpIDList] eax +
mov eax [esi+28h] +
mov ecx [eax] +
push offset dword_10066D0  +
push eax  +
call dword ptr [ecx]  +
xor ebx ebx +
cmp eax ebx +
mov [ebp+var_210] eax +
jl loc_108CE0E  +
lea eax [ebp+var_220] +
push eax  +
push offset dword_108CE68  +
push [ebp+var_224]  +
mov [ebp+var_220] ebx +
call sub_107DB18  +
test eax eax +
jl loc_108CCFF  +
mov eax [ebp+var_220] +
mov [ebp+ExecInfo.lpParameters] eax +
mov eax [esi+28h] +
mov ecx [eax] +
push 104h  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_108CD2D  +
cmp word ptr [ebp+var_20C] bx +
jz loc_108CD2D  +
lea eax [ebp+var_20C] +
mov [ebp+ExecInfo.lpDirectory] eax +
lea eax [ebp+var_294] +
push eax  +
mov eax [ebp+var_218] +
push 0CCh  +
push dword ptr [eax+44h]  +
call sub_103C26A  +
lea eax [ebp+ExecInfo] +
push eax  +
call ds:__imp_ShellExecuteExW  +
test eax eax +
jz loc_108CDF6  +
mov [ebp+var_210] ebx +
cmp dword_10B24CC ebx +
jz loc_108CDC9  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_108CD77  +
test al al +
jnz loc_108CDC9  +
mov edx dword_10B24B8 +
mov ebx dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and ebx eax +
or edx ebx +
jz loc_108CDC9  +
mov edx dword_10B24C0 +
mov ebx edx +
and ebx ecx +
mov ecx dword_10B24C4 +
and ecx eax +
cmp ebx edx +
jnz loc_108CDC9  +
cmp ecx dword_10B24C4 +
jnz loc_108CDC9  +
push offset dword_108CE58  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push dword ptr [edi+14h]  +
call ds:__imp_PathFindFileNameW  +
test eax eax +
jz loc_108CDF6  +
push dword ptr [esi+0Ch]  +
mov ecx [esi+10h] +
push offset a_lnk  +
and ecx 200h +
push ecx  +
push dword ptr [esi+14h]  +
push 1  +
push dword ptr [edi+18h]  +
push eax  +
call sub_106E2BB  +
push [ebp+var_220]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_224] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_21C]  +
call ds:__imp_SHELL32_155  +
cmp [ebp+var_210] 800704C7h +
jnz loc_108CE2D  +
and [ebp+var_210] 0 +
mov ecx [ebp+var_22C] +
pop edi  +
pop esi  +
pop ebx  +
test ecx ecx +
jz loc_108CE3F  +
call sub_100F319  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 4  +
***
scas   +
mov ah 0E2h +
inc ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
lea ecx [ebp+arg_0] +
push ecx  +
push offset dword_100DC8C  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
test ebx ebx +
jl loc_108CEEC  +
lea esi [edi+1F0h] +
cmp dword ptr [esi] 0 +
jnz loc_108CED2  +
push 4  +
mov ecx esi +
call sub_100801C  +
test eax eax +
jnz loc_108CED2  +
mov ebx 8007000Eh +
jmp loc_108CEE7  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1006610  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+arg_0] +
jmp loc_108CF3D  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset stru_1026650  +
push esi  +
call dword ptr [eax]  +
mov ebx eax +
test ebx ebx +
jl loc_108CF43  +
lea esi [edi+1F4h] +
cmp dword ptr [esi] 0 +
jnz loc_108CF1F  +
push 4  +
mov ecx esi +
call sub_100801C  +
test eax eax +
jnz loc_108CF1F  +
mov ebx 8007000Eh +
jmp loc_108CF3A  +
push 0  +
push [ebp+var_4]  +
mov ecx esi +
call sub_1006610  +
mov ebx eax +
test ebx ebx +
jl loc_108CF3A  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+98h] +
xor edi edi +
push eax  +
mov [ebp+var_4] edi +
mov [ebp+lpCriticalSection] eax +
call ds:EnterCriticalSection  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10102CD  +
test eax eax +
jz loc_108D050  +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax [ebx] +
lea ecx [ebp+arg_4] +
push ecx  +
push offset dword_100DC8C  +
push ebx  +
call dword ptr [eax]  +
test eax eax +
jl loc_108CFF1  +
cmp [esi+1F0h] edi +
jz loc_108CFEC  +
mov eax [esi+1F0h] +
cmp eax edi +
jz loc_108CFB0  +
mov eax [eax] +
jmp loc_108CFB2  +
xor eax eax +
mov [ebp+arg_0] eax +
test eax eax +
jle loc_108CFEC  +
push edi  +
push dword ptr [esi+1F0h]  +
call ds:off_1002B68  +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
lea ebx [ebp+var_C] +
push ebx  +
push 30000000h  +
push eax  +
push ecx  +
call dword ptr [edx+1Ch]  +
test eax eax +
jz loc_108CFE5  +
inc edi  +
cmp edi [ebp+arg_0] +
jge loc_108CFEC  +
jmp loc_108CFB9  +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_4] +
jmp loc_108D049  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push offset stru_1026650  +
push ebx  +
call dword ptr [eax]  +
test eax eax +
jl loc_108D04F  +
cmp [esi+1F4h] edi +
jz loc_108D046  +
mov eax [esi+1F4h] +
cmp eax edi +
jz loc_108D017  +
mov edi [eax] +
xor ebx ebx +
test edi edi +
jle loc_108D046  +
push ebx  +
push dword ptr [esi+1F4h]  +
call ds:off_1002B68  +
lea ecx [ebp+var_4] +
push ecx  +
push [ebp+arg_0]  +
push eax  +
call sub_108ACD5  +
test eax eax +
jl loc_108D041  +
cmp [ebp+var_4] 0 +
jnz loc_108D046  +
inc ebx  +
cmp ebx edi +
jl loc_108D01D  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebx  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebx] ax +
mov eax [ebp+arg_0] +
test dword ptr [eax+10h] 1C0h +
mov [ebp+var_10] ecx +
jnz loc_108D23A  +
mov eax [eax+24h] +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_108D197  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1068A00  +
push eax  +
call ds:__imp_SHCreateItemFromIDList  +
mov esi eax +
cmp esi edi +
jl loc_108D224  +
push [ebp+var_4]  +
call sub_10AAF65  +
test eax eax +
jz loc_108D110  +
lea eax [ebp+pv] +
push eax  +
push 80028000h  +
push [ebp+var_4]  +
call sub_107F3F0  +
mov esi eax +
cmp esi edi +
jl loc_108D189  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
mov esi 20000000h +
push esi  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_108D100  +
test [ebp+var_C] esi +
jnz loc_108D100  +
push [ebp+pv]  +
call ds:PathRemoveExtensionW  +
push [ebp+arg_C]  +
push ebx  +
push [ebp+pv]  +
call SHELL32_840  +
mov esi eax +
jmp loc_108D180  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push offset dword_108D264  +
push offset dword_108D240  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_108D155  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push offset aNojumplistpath  +
push 10F0000h  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_108D14A  +
mov esi 80004005h +
jmp loc_108D14C  +
xor esi esi +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi edi +
jl loc_108D189  +
mov eax [ebp+var_4] +
lea edx [ebp+pv] +
push edx  +
push offset dword_108D250  +
mov [ebp+pv] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
mov esi eax +
cmp esi edi +
jl loc_108D189  +
push [ebp+pv]  +
push [ebp+arg_C]  +
push ebx  +
call sub_100665F  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108D220  +
mov ebx ds:__imp_CoTaskMemFree +
mov [ebp+var_C] edi +
cmp [ebp+arg_4] edi +
jz loc_108D1CF  +
mov eax [ecx] +
push edi  +
push edi  +
push edi  +
push [ebp+arg_0]  +
call dword ptr [eax+0ACh]  +
mov esi eax +
cmp esi edi +
jz loc_108D1CF  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_1010E3B  +
push esi  +
call ebx  +
mov [ebp+var_C] 1 +
mov eax [ebp+arg_C] +
add eax eax +
push eax  +
call ds:__imp_CoTaskMemAlloc  +
mov edi eax +
test edi edi +
jz loc_108D224  +
push [ebp+arg_C]  +
mov ecx [ebp+arg_0] +
push edi  +
call sub_108B356  +
mov esi eax +
test esi esi +
jl loc_108D21B  +
cmp word ptr [edi] 0 +
jz loc_108D21B  +
cmp [ebp+var_C] 0 +
jz loc_108D20F  +
push offset asc_1069784  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_1010E3B  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_1010E3B  +
push edi  +
call ebx  +
xor edi edi +
cmp esi edi +
jge loc_108D238  +
push [ebp+arg_C]  +
mov ecx [ebp+var_10] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_108F261  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+var_214] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_218] ebx +
mov [ebp+var_210] edi +
cmp [ebp+arg_4] edi +
jz loc_108D319  +
cmp [esi+23Ch] edi +
jnz loc_108D2FC  +
cmp [esi+238h] edi +
jnz loc_108D2FC  +
cmp [esi+240h] edi +
jnz loc_108D2FC  +
cmp [esi+244h] edi +
jz loc_108D319  +
mov eax [esi+1F8h] +
push edi  +
push 6  +
push ebx  +
mov [ebp+var_214] eax +
call sub_108BB88  +
cmp eax edi +
jl loc_108D422  +
cmp [esi+240h] edi +
jz loc_108D351  +
push dword ptr [esi+234h]  +
mov ecx esi +
push 0FFFFFFFFh  +
push 1  +
push [ebp+var_214]  +
push dword ptr [esi+24Ch]  +
push ebx  +
call sub_108BD67  +
cmp eax edi +
jl loc_108D422  +
mov [ebp+var_210] 1 +
cmp [esi+23Ch] edi +
mov edi ds:LoadStringW +
mov ebx 104h +
jnz loc_108D37C  +
cmp dword ptr [esi+238h] 0 +
jz loc_108D3CB  +
push offset dword_1068F84  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_108D3CB  +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
xor eax eax +
cmp [esi+238h] eax +
setnz al  +
add eax 152h +
push eax  +
push dword_10B23D0  +
call edi  +
lea eax [ebp+Buffer] +
push eax  +
push 0FFFFFFFEh  +
push 0  +
push [ebp+var_214]  +
mov ecx esi +
push dword ptr [esi+24Ch]  +
push [ebp+var_218]  +
call sub_108BD67  +
test eax eax +
jl loc_108D422  +
inc [ebp+var_210]  +
cmp dword ptr [esi+244h] 0 +
jz loc_108D422  +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
mov eax [esi+248h] +
neg eax  +
sbb eax eax +
add eax 161h +
push eax  +
push dword_10B23D0  +
call edi  +
lea eax [ebp+Buffer] +
push eax  +
push 0FFFFFFFEh  +
push 2  +
push [ebp+var_214]  +
mov ecx esi +
push dword ptr [esi+24Ch]  +
push [ebp+var_218]  +
call sub_108BD67  +
test eax eax +
jl loc_108D422  +
inc [ebp+var_210]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
mov ebx ecx +
call ds:__imp_SHGetIDListFromObject  +
mov edi eax +
test edi edi +
jl loc_108D4C3  +
push esi  +
push 38h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_108D475  +
push [ebp+arg_4]  +
mov ecx eax +
call sub_108B2A2  +
mov esi eax +
jmp loc_108D477  +
xor esi esi +
test esi esi +
jz loc_108D4B4  +
mov eax [esi+20h] +
xor eax [ebp+arg_C] +
push [ebp+arg_10]  +
and eax 1 +
xor [esi+20h] eax +
mov eax [ebp+arg_8] +
push esi  +
mov ecx ebx +
mov [esi+14h] eax +
call sub_108C596  +
mov edi eax +
test edi edi +
jl loc_108D4AB  +
push esi  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_101026B  +
mov edi eax +
mov ecx esi +
call sub_100F319  +
jmp loc_108D4C2  +
push [ebp+arg_4]  +
mov edi 80004005h +
call ds:__imp_SHELL32_155  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 38h  +
mov edi ecx +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_108D4F4  +
push [ebp+arg_4]  +
mov ecx eax +
call sub_108B2D7  +
mov esi eax +
jmp loc_108D4F6  +
xor esi esi +
test esi esi +
jz loc_108D541  +
mov eax [esi+20h] +
xor eax [ebp+arg_C] +
push esi  +
and eax 1 +
xor [esi+20h] eax +
mov eax [ebp+arg_8] +
mov [esi+14h] eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+100h]  +
push [ebp+arg_10]  +
mov ecx edi +
push esi  +
mov [esi+2Ch] eax +
call sub_108C596  +
mov ebx eax +
test ebx ebx +
jl loc_108D538  +
push esi  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_101026B  +
mov ebx eax +
mov ecx esi +
call sub_100F319  +
jmp loc_108D546  +
mov ebx 8007000Eh +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_8] +
and dword ptr [edi] 0 +
push 10h  +
mov [ebp+arg_8] 80004005h +
call ds:GetKeyState  +
test ax ax +
jl loc_108D5FD  +
mov ecx [ebp+arg_0] +
test dword ptr [ecx+10h] 1C0h +
jz loc_108D58D  +
mov [ebp+arg_8] offset a00021401000000 +
jmp loc_108D59D  +
call sub_108B0A6  +
test eax eax +
jz loc_108D5FD  +
mov [ebp+arg_8] offset aOpen_1 +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push offset dword_104FEF0  +
push ebx  +
call dword ptr [eax]  +
test eax eax +
jl loc_108D5CA  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 200h  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
push edi  +
mov esi offset dword_1011ED0 +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call sub_104FCA9  +
mov [ebp+arg_8] eax +
test eax eax +
jl loc_108D5FB  +
mov ebx [edi] +
push 1  +
push edi  +
push esi  +
push ebx  +
call sub_107E1D1  +
mov [ebp+arg_8] eax +
test eax eax +
jl loc_108D5FB  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop esi  +
pop ebx  +
mov eax [ebp+arg_8] +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 0 +
push edi  +
mov [ebp+var_4] 80004005h +
mov ebx offset dword_1068A00 +
mov edi 200h +
jz loc_108D743  +
mov eax [esi+14h] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push ebx  +
push [ebp+arg_0]  +
push edi  +
push dword ptr [esi+10h]  +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+var_4] eax +
cmp dword ptr [esi+18h] 0 +
jz loc_108D779  +
cmp [ebp+var_4] 0 +
jge loc_108D77F  +
cmp [ebp+var_4] 800704C7h +
jz loc_108D779  +
cmp [ebp+var_4] 80270103h +
jz loc_108D779  +
mov eax [esi+18h] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push ebx  +
push [ebp+arg_0]  +
push edi  +
push dword ptr [esi+10h]  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_108D7C8  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push offset dword_100671C  +
push [ebp+var_8]  +
call sub_107C998  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_108D7BF  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
push dword ptr [esi+10h]  +
call ds:SHLWAPI_279  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_C]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push edi  +
push 0FFFFFFFDh  +
push edi  +
mov esi ecx +
call SHCreateWorkerWindowW  +
mov [esi+10h] eax +
cmp eax edi +
jz loc_108D8B1  +
push ebx  +
lea ebx [esi+14h] +
push ebx  +
push dword ptr [esi]  +
push dword ptr [esi+8]  +
call sub_108C1C9  +
test eax eax +
jl loc_108D8A7  +
lea eax [esi+18h] +
push eax  +
push dword ptr [esi+8]  +
call sub_108C27C  +
test eax eax +
jl loc_108D8A7  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1068A00  +
push dword ptr [esi+0Ch]  +
call ds:__imp_SHCreateItemFromIDList  +
test eax eax +
jl loc_108D8A7  +
push [ebp+var_4]  +
mov ecx esi +
call sub_108D703  +
cmp eax edi +
jge loc_108D8A7  +
cmp eax 800704C7h +
jz loc_108D8A7  +
cmp eax 80270000h +
jz loc_108D8A7  +
cmp [esi+1Ch] edi +
jz loc_108D888  +
cmp eax 80270103h +
jz loc_108D888  +
push 4  +
push dword ptr [esi+4]  +
push 2020h  +
push edi  +
push dword_10B23D0  +
call ds:ShellMessageBoxW  +
sub eax 6 +
add esp 14h +
neg eax  +
sbb eax eax +
inc eax  +
jz loc_108D8A7  +
mov eax [ebx] +
cmp eax edi +
jz loc_108D897  +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [esi+18h] +
cmp eax edi +
jz loc_108D8A7  +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
push dword ptr [esi+10h]  +
call ds:DestroyWindow  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
call sub_108D7D7  +
cmp dword ptr [ebp+8] 0 +
jz loc_108D8D7  +
mov ecx [ebp+8] +
push 1  +
call sub_108C460  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+228h] +
push eax  +
lea eax [esi+1FCh] +
push eax  +
xor edi edi +
call sub_108B1D6  +
test eax eax +
jl loc_108D914  +
cmp [esi+84h] edi +
jz loc_108D914  +
push edi  +
push edi  +
mov ecx esi +
call sub_108D2A5  +
mov edi eax +
and dword ptr [esi+1A8h] 0 +
xor eax eax +
test edi edi +
setnle al  +
mov [esi+1ACh] edi +
pop edi  +
mov [esi+1ECh] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi] +
push edi  +
mov edi ecx +
lea ecx [ebp+arg_4] +
push ecx  +
push offset dword_100DC8C  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_108D972  +
push [ebp+arg_10]  +
mov ecx edi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_108D43E  +
mov esi eax +
mov eax [ebp+arg_4] +
jmp loc_108D9A1  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset stru_1026650  +
push esi  +
call dword ptr [eax]  +
mov esi eax +
test esi esi +
jl loc_108D9A7  +
push [ebp+arg_10]  +
mov ecx edi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
call sub_108D4D0  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+24h] +
push esi  +
mov esi 80070057h +
test eax eax +
jz loc_108D9FB  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1068A00  +
push eax  +
call ds:__imp_SHCreateItemFromIDList  +
mov esi eax +
test esi esi +
jl loc_108DA11  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 80028000h  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108DA11  +
cmp dword ptr [ecx+28h] 0 +
jz loc_108DA11  +
push [ebp+arg_0]  +
push off_10B3AA8  +
call sub_100EBA2  +
mov esi eax +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
lea eax [ebp+var_8] +
mov esi ecx +
mov ecx [ebp+arg_0] +
xor edi edi +
push eax  +
mov [ebp+var_8] edi +
call sub_108C3B9  +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_108DB18  +
lea eax [ebp+ppv] +
push eax  +
push dword ptr [esi+200h]  +
push dword ptr [esi+204h]  +
call sub_108C1C9  +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_108DB0F  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0FFFFFFFEh  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+1Ch]  +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_108DB06  +
push edi  +
push 0Ch  +
push 40Bh  +
push dword ptr [esi+44h]  +
mov [esi+158h] edi +
call ds:PostMessageW  +
push offset dword_1068890  +
call sub_1008600  +
test al al +
jz loc_108DB06  +
push ebx  +
push dword ptr [esi+200h]  +
call ds:__imp_PathFindFileNameW  +
mov ebx eax +
cmp ebx edi +
jz loc_108DB05  +
mov ecx [ebp+arg_0] +
lea eax [ebp+pszPath] +
push eax  +
mov [ebp+pszPath] edi +
call sub_108D9B4  +
test eax eax +
jl loc_108DB05  +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
and eax 200h +
push eax  +
push [ebp+arg_8]  +
xor eax eax +
cmp [esi+84h] edi +
setnz al  +
push eax  +
push [ebp+arg_4]  +
push [ebp+pszPath]  +
call sub_108B9C1  +
push eax  +
push dword ptr [esi+204h]  +
push ebx  +
call sub_106E0CF  +
push [ebp+pszPath]  +
call ds:__imp_CoTaskMemFree  +
pop ebx  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_100DC8C  +
push eax  +
call dword ptr [ecx]  +
push [ebp+arg_4]  +
test eax eax +
jl loc_108DB5F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 80028000h  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108DB6C  +
push off_10B3AA8  +
call sub_100EBA2  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi+200h]  +
call ds:__imp_PathFindFileNameW  +
mov edi eax +
test edi edi +
jz loc_108DBD0  +
and [ebp+pszPath] 0 +
lea eax [ebp+pszPath] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_108DB26  +
test eax eax +
jl loc_108DBD0  +
push 0  +
push [ebp+pszPath]  +
call sub_108B9C1  +
push eax  +
push 0  +
push 0FFFFFFFFh  +
push 6  +
push dword ptr [esi+204h]  +
push edi  +
call sub_106E2BB  +
push [ebp+pszPath]  +
call ds:__imp_CoTaskMemFree  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push edi  +
push offset dword_1068890  +
mov edi ecx +
call sub_1008600  +
test al al +
jz loc_108DC9E  +
push esi  +
mov esi dword ptr [ebp+String] +
lea eax [ebp+var_8] +
push eax  +
push offset dword_100DC8C  +
push esi  +
call sub_10719E5  +
test eax eax +
jl loc_108DC40  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset stru_1002CB4  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_108DC3B  +
push [ebp+var_4]  +
mov ecx edi +
call sub_108DB78  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
jmp loc_108DC97  +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push offset dword_1069734  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_108DC9D  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+String] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_108DC94  +
mov eax dword ptr [ebp+String] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset stru_1002CB4  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_108DC8B  +
push [ebp+var_4]  +
mov ecx edi +
call sub_108DB78  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax dword ptr [ebp+String] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
xor eax eax +
push edi  +
xor edi edi +
cmp [ebp+arg_C] edi +
mov [ebp+var_8] ecx +
setnz al  +
mov [ebp+var_4] edi +
inc eax  +
cmp [ebp+arg_10] eax +
jb loc_108DE6B  +
call sub_103B4A9  +
test eax eax +
jnz loc_108DCDD  +
cmp [ebp+arg_8] edi +
jnz loc_108DE6B  +
cmp [ebp+arg_C] edi +
jz loc_108DCE5  +
dec [ebp+arg_10]  +
push esi  +
mov esi [ebp+arg_14] +
cmp [ebp+arg_8] edi +
jnz loc_108DCF3  +
mov eax [ebp+arg_10] +
jmp loc_108DCF8  +
mov eax [esi] +
add eax [ebp+arg_10] +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
push ebx  +
lea ebx [ebp+var_14] +
push ebx  +
push offset stru_101C28C  +
push eax  +
push [ebp+arg_8]  +
push ecx  +
call dword ptr [edx+14h]  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_108DE69  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
xor ebx ebx +
mov [ebp+var_10] edi +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_108DE60  +
cmp [ebp+var_18] edi +
jbe loc_108DE60  +
cmp [ebp+arg_C] edi +
jz loc_108DD5D  +
mov ecx [ebp+var_8] +
push edi  +
push [ebp+arg_8]  +
call sub_108BB62  +
push eax  +
push [ebp+arg_0]  +
call sub_108BB88  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jl loc_108DE3B  +
push [ebp+arg_8]  +
mov ecx [ebp+var_8] +
call sub_108BB0A  +
mov [ebp+var_1C] eax +
mov [ebp+var_C] edi +
mov eax [ebp+var_18] +
cmp [ebp+var_C] eax +
jnb loc_108DE28  +
cmp ebx [ebp+arg_10] +
jnb loc_108DE28  +
mov eax [ebp+arg_1C] +
cmp eax edi +
jz loc_108DD9B  +
cmp [eax] edi +
jbe loc_108DE28  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push offset stru_1002CB4  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_108DE1C  +
push [ebp+arg_4]  +
mov ecx [ebp+var_8] +
push [ebp+arg_0]  +
call sub_108CF51  +
mov esi eax +
cmp [ebp+arg_8] edi +
jz loc_108DDD0  +
cmp esi edi +
jnz loc_108DE0D  +
mov ecx [ebp+var_8] +
xor eax eax +
cmp [ebp+arg_8] edi +
push edi  +
setz al  +
push eax  +
push [ebp+var_1C]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_108D936  +
test eax eax +
jl loc_108DE0D  +
inc ebx  +
cmp [ebp+arg_8] edi +
jz loc_108DE00  +
cmp esi edi +
jnz loc_108DE10  +
mov eax [ebp+arg_1C] +
dec dword ptr [eax]  +
jmp loc_108DE10  +
push [ebp+arg_4]  +
mov ecx [ebp+var_8] +
call sub_108CE91  +
jmp loc_108DE10  +
inc [ebp+var_10]  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [ebp+arg_14] +
inc [ebp+var_C]  +
cmp [ebp+var_4] edi +
jge loc_108DD77  +
cmp ebx edi +
jbe loc_108DE3B  +
mov eax [ebp+arg_18] +
sub [eax] ebx +
mov ecx [eax] +
cmp [ebp+arg_C] edi +
jz loc_108DE3B  +
dec ecx  +
mov [eax] ecx +
mov eax [ebp+arg_8] +
sub eax edi +
jz loc_108DE5E  +
dec eax  +
jz loc_108DE53  +
dec eax  +
jnz loc_108DE60  +
mov eax [ebp+var_10] +
mov [esi+0Ch] ebx +
mov [esi+10h] eax +
jmp loc_108DE60  +
mov eax [ebp+var_10] +
mov [esi+4] ebx +
mov [esi+8] eax +
jmp loc_108DE60  +
mov [esi] ebx +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebx  +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_18] +
push ebx  +
push edi  +
mov edi [ebp+arg_14] +
xor ebx ebx +
mov [edi] ebx +
mov [eax] ebx +
mov eax [ebp+arg_C] +
lea edx [ebp+var_14] +
push edx  +
mov [ebp+var_10] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
mov [ebp+var_18] eax +
jl loc_108DFB6  +
cmp [ebp+var_14] ebx +
jbe loc_108DFB6  +
push esi  +
mov esi [ebp+arg_1C] +
mov [ebp+var_8] 1 +
mov [ebp+var_C] ebx +
mov [ebp+arg_14] ebx +
mov [ebp+var_4] ebx +
cmp [ebp+arg_14] ebx +
jnz loc_108DED4  +
cmp [ebp+var_4] ebx +
jnz loc_108DFB5  +
mov eax [ebp+var_14] +
cmp [ebp+var_4] eax +
jnb loc_108DF0B  +
mov eax [edi] +
cmp eax [ebp+arg_10] +
jnb loc_108DF0B  +
mov eax [esi] +
dec eax  +
jz loc_108DF0B  +
mov eax [ebp+arg_C] +
mov ecx [eax] +
lea edx [ebp+arg_14] +
push edx  +
push offset stru_1002CB4  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_108DF59  +
mov eax [ebp+arg_14] +
call sub_108C191  +
jmp loc_108DF11  +
xor eax eax +
inc eax  +
mov [ebp+arg_14] ebx +
cmp eax ebx +
jz loc_108DF59  +
cmp [ebp+var_C] ebx +
jle loc_108DF59  +
cmp [ebp+var_8] ebx +
jz loc_108DF24  +
mov eax [ebp+arg_4] +
jmp loc_108DF27  +
push 5  +
pop eax  +
push [ebp+arg_8]  +
mov ecx [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
call sub_108BB88  +
test eax eax +
jl loc_108DF50  +
dec dword ptr [esi]  +
cmp [ebp+var_8] ebx +
jz loc_108DF46  +
mov [ebp+var_8] ebx +
jmp loc_108DF4B  +
mov eax [ebp+arg_18] +
inc dword ptr [eax]  +
mov [ebp+var_C] ebx +
jmp loc_108DF59  +
cmp [ebp+var_8] ebx +
jz loc_108DF59  +
mov eax [edi] +
add [esi] eax +
cmp [ebp+arg_14] ebx +
jz loc_108DFAD  +
push [ebp+arg_14]  +
mov ecx [ebp+var_10] +
push [ebp+arg_0]  +
call sub_108CF51  +
test eax eax +
jnz loc_108DFA4  +
mov eax [ebp+arg_14] +
call sub_108C191  +
test eax eax +
jnz loc_108DFA4  +
cmp [ebp+arg_4] 4 +
mov ecx [ebp+var_10] +
setz al  +
push eax  +
push ebx  +
push dword ptr [ecx+1F8h]  +
push [ebp+arg_14]  +
push [ebp+arg_0]  +
call sub_108D936  +
test eax eax +
jl loc_108DFA4  +
dec dword ptr [esi]  +
inc dword ptr [edi]  +
inc [ebp+var_C]  +
mov eax [ebp+arg_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc [ebp+var_4]  +
jmp loc_108DEC6  +
pop esi  +
mov eax [ebp+var_18] +
pop edi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov [ebp+var_8] ecx +
lea ecx [ebp+var_4] +
add ebx 1Ch +
xor edi edi +
push ecx  +
mov [ebx] edi +
mov eax [esi] +
push esi  +
call dword ptr [eax+18h]  +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_108E06F  +
mov [ebp+arg_4] edi +
cmp [ebp+var_4] edi +
jbe loc_108E06F  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
stos   +
lea ecx [ebp+var_1C] +
push ecx  +
stos   +
push 0  +
push [ebp+arg_4]  +
stos   +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_108E023  +
lea eax [ebp+var_1C] +
push eax  +
call sub_108BCB8  +
cmp [ebp+var_1C] 2 +
jz loc_108E030  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_4] +
jnb loc_108E06F  +
jmp loc_108DFF8  +
mov eax [esi] +
lea ecx [ebp+arg_4] +
push ecx  +
push offset stru_101C28C  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_108E06F  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
add eax 20h +
push eax  +
push ebx  +
push [ebp+var_14]  +
push [ebp+arg_4]  +
push 0  +
push 4  +
push [ebp+arg_0]  +
call sub_108DE78  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 254h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_22C] eax +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_10] +
push edi  +
mov [ebp+var_240] eax +
mov eax [ebp+arg_C] +
xor edi edi +
cmp dword ptr [esi] 1 +
mov [ebp+var_224] ecx +
mov [ebp+var_234] eax +
mov [ebp+var_228] edi +
jbe loc_108E586  +
call sub_103B4A9  +
test eax eax +
jz loc_108E586  +
mov eax [ebx] +
lea ecx [ebp+var_23C] +
push ecx  +
push ebx  +
call dword ptr [eax+18h]  +
cmp eax edi +
mov [ebp+var_228] eax +
jl loc_108E586  +
push 3Ch  +
push edi  +
push 0Ah  +
push offset aStart_jumplist  +
call sub_1037379  +
mov [ebp+var_218] eax +
cmp [ebp+var_23C] edi +
jnz loc_108E2B5  +
mov ebx [esi] +
cmp ebx 2 +
jb loc_108E2AA  +
call sub_103B4A9  +
test eax eax +
jz loc_108E2AA  +
mov eax [ebp+var_240] +
mov ecx [eax] +
lea edx [ebp+var_228] +
push edx  +
mov edx [ebp+var_234] +
mov edx [edx] +
dec ebx  +
push offset stru_101C28C  +
add edx ebx +
push edx  +
push 1  +
push eax  +
mov [ebp+var_238] ebx +
call dword ptr [ecx+14h]  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jl loc_108E2AA  +
mov eax [ebp+var_228] +
mov ecx [eax] +
lea edx [ebp+var_230] +
push edx  +
push eax  +
mov [ebp+var_210] ebx +
mov [ebp+var_214] ebx +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_108E29E  +
cmp [ebp+var_230] ebx +
jbe loc_108E29E  +
mov ecx [ebp+var_224] +
push ebx  +
push 2  +
push [ebp+var_22C]  +
call sub_108BB88  +
mov edi eax +
cmp edi ebx +
jl loc_108E28A  +
mov [ebp+var_21C] ebx +
mov ecx [ebp+var_21C] +
cmp ecx [ebp+var_230] +
jnb loc_108E277  +
mov eax [ebp+var_210] +
cmp eax [ebp+var_238] +
jnb loc_108E27D  +
cmp [ebp+var_218] ebx +
jbe loc_108E27D  +
mov eax [ebp+var_228] +
mov edx [eax] +
lea edi [ebp+var_220] +
push edi  +
push offset stru_1002CB4  +
push ecx  +
push eax  +
call dword ptr [edx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_108E269  +
push [ebp+var_220]  +
mov ecx [ebp+var_224] +
push [ebp+var_22C]  +
call sub_108CF51  +
cmp eax ebx +
jnz loc_108E257  +
mov ecx [ebp+var_224] +
push ebx  +
push ebx  +
push 2  +
push [ebp+var_220]  +
push [ebp+var_22C]  +
call sub_108D936  +
test eax eax +
jl loc_108E257  +
inc [ebp+var_210]  +
dec [ebp+var_218]  +
jmp loc_108E25D  +
inc [ebp+var_214]  +
mov eax [ebp+var_220] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc [ebp+var_21C]  +
cmp edi ebx +
jge loc_108E1C0  +
mov eax [ebp+var_210] +
cmp eax ebx +
jbe loc_108E28C  +
or ecx 0FFFFFFFFh +
sub ecx eax +
add [esi] ecx +
jmp loc_108E28C  +
mov eax ebx +
mov ecx [ebp+var_234] +
mov [ecx+4] eax +
mov eax [ebp+var_214] +
mov [ecx+8] eax +
mov eax [ebp+var_228] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_228] edi +
jmp loc_108E586  +
mov [ebp+var_214] edi +
mov [ebp+var_220] edi +
mov [ebp+var_21C] edi +
mov [ebp+var_210] edi +
cmp [ebp+var_23C] edi +
jbe loc_108E473  +
cmp [esi] edi +
jbe loc_108E473  +
cmp [ebp+var_218] edi +
jbe loc_108E473  +
xor eax eax +
lea edi [ebp+var_254] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebx] +
lea ecx [ebp+var_254] +
push ecx  +
xor edi edi +
inc edi  +
push edi  +
push [ebp+var_210]  +
push ebx  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_108E459  +
cmp [ebp+var_254] edi +
jnz loc_108E394  +
cmp [ebp+var_250] edi +
jnz loc_108E34C  +
mov ecx [ebp+var_224] +
push 0  +
push edi  +
push [ebp+var_22C]  +
call sub_108BB88  +
test eax eax +
jl loc_108E44D  +
mov [ebp+var_214] edi +
jmp loc_108E38D  +
cmp [ebp+var_250] 2 +
jnz loc_108E44D  +
mov ecx [ebp+var_224] +
push 0  +
push 2  +
push [ebp+var_22C]  +
call sub_108BB88  +
test eax eax +
jl loc_108E44D  +
xor eax eax +
cmp [ebp+var_214] eax +
mov [ebp+var_220] edi +
setz al  +
mov [ebp+var_21C] eax +
dec dword ptr [esi]  +
jmp loc_108E44D  +
cmp [ebp+var_254] 0 +
jnz loc_108E44D  +
mov eax [ebx] +
lea ecx [ebp+var_238] +
push ecx  +
push offset stru_101C28C  +
push [ebp+var_210]  +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_108E44D  +
xor edi edi +
push edi  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+var_250]  +
mov [ebp+var_230] edi +
mov [ebp+var_244] edi +
call ds:SHLoadIndirectString  +
test eax eax +
jl loc_108E441  +
mov ecx [ebp+var_224] +
push esi  +
lea eax [ebp+var_244] +
push eax  +
lea eax [ebp+var_230] +
push eax  +
push [ebp+var_218]  +
lea eax [ebp+var_20C] +
push [ebp+var_238]  +
push eax  +
push 3  +
push [ebp+var_22C]  +
call sub_108DE78  +
test eax eax +
jl loc_108E441  +
mov eax [ebp+var_230] +
mov ecx [ebp+var_234] +
add [ecx+14h] eax +
sub [ebp+var_218] eax +
cmp eax edi +
jbe loc_108E441  +
inc dword ptr [ecx+18h]  +
mov eax [ebp+var_238] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+var_254] +
push eax  +
call sub_108BCB8  +
inc [ebp+var_210]  +
mov eax [ebp+var_210] +
xor edi edi +
cmp eax [ebp+var_23C] +
jb loc_108E2D9  +
mov eax [esi] +
cmp eax 1 +
jbe loc_108E586  +
cmp [ebp+var_214] edi +
jnz loc_108E492  +
cmp [ebp+var_220] edi +
jz loc_108E586  +
mov ecx [ebp+var_218] +
xor ebx ebx +
mov [ebp+var_210] edi +
cmp ecx eax +
jb loc_108E4A6  +
mov ecx eax +
cmp [ebp+var_214] edi +
jz loc_108E4B6  +
cmp [ebp+var_220] edi +
jz loc_108E4C3  +
cmp eax 4 +
jnb loc_108E4CB  +
cmp [ebp+var_21C] edi +
jnz loc_108E4CB  +
mov [ebp+var_210] ecx +
jmp loc_108E50F  +
cmp [ebp+var_220] edi +
jz loc_108E4DB  +
cmp [ebp+var_214] edi +
jz loc_108E4E8  +
cmp eax 4 +
jnb loc_108E4EC  +
cmp [ebp+var_21C] edi +
jz loc_108E4EC  +
mov ebx ecx +
jmp loc_108E50F  +
mov ebx ecx +
shr ebx 1 +
mov [ebp+var_210] ebx +
test cl 1 +
jz loc_108E50F  +
cmp [ebp+var_21C] edi +
jz loc_108E506  +
inc ebx  +
jmp loc_108E50F  +
lea eax [ebx+1] +
mov [ebp+var_210] eax +
mov [ebp+var_214] edi +
jmp loc_108E519  +
xor edi edi +
cmp [ebp+var_21C] edi +
jz loc_108E59D  +
cmp [ebp+var_214] edi +
jz loc_108E5A6  +
xor ecx ecx +
mov edi [esi] +
mov eax ebx +
test ecx ecx +
jnz loc_108E539  +
mov eax [ebp+var_210] +
lea edx [ebp+var_218] +
push edx  +
push esi  +
push [ebp+var_234]  +
push eax  +
xor eax eax +
test ecx ecx +
mov ecx [ebp+var_224] +
setz al  +
push 0  +
inc eax  +
push eax  +
push [ebp+var_240]  +
push [ebp+var_22C]  +
call sub_108DCA8  +
test eax eax +
jl loc_108E577  +
mov eax [esi] +
cmp edi eax +
jnz loc_108E577  +
inc eax  +
mov [esi] eax +
inc [ebp+var_214]  +
cmp [ebp+var_214] 2 +
jb loc_108E517  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_228] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 14h  +
cmp [ebp+var_214] 1 +
jnz loc_108E529  +
xor ecx ecx +
inc ecx  +
jmp loc_108E52B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_C] 0 +
mov edx [ebp+arg_0] +
jnz loc_108E5D6  +
mov eax [edx+34h] +
test eax eax +
jz loc_108E5D6  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_100EBA2  +
jmp loc_108E5E8  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call sub_1012623  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
cmp dword ptr [ebx+204h] 0 +
push edi  +
mov [ebp+var_24] esi +
mov [ebp+var_18] 80004005h +
jz loc_108E728  +
and [ebp+var_20] 0 +
lea eax [ebp+var_20] +
push eax  +
mov ecx esi +
call sub_108C3B9  +
mov [ebp+var_18] eax +
test eax eax +
jl loc_108E715  +
lea eax [ebp+var_18] +
push eax  +
push dword ptr [ebx+204h]  +
call sub_108C27C  +
test eax eax +
jl loc_108E664  +
push [ebp+var_20]  +
mov edi [ebp+var_18] +
mov eax [edi] +
push edi  +
call dword ptr [eax+28h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
lea eax [ebp+pdwDataLen] +
push eax  +
push dword ptr [ebx+200h]  +
push dword ptr [ebx+204h]  +
call sub_108C1C9  +
mov [ebp+var_18] eax +
test eax eax +
jl loc_108E692  +
push [ebp+var_20]  +
mov edi [ebp+pdwDataLen] +
mov eax [edi] +
push edi  +
call dword ptr [eax+24h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
push offset dword_10688E0  +
call sub_1008600  +
test al al +
jz loc_108E70C  +
push dword ptr [ebx+200h]  +
call ds:__imp_PathFindFileNameW  +
mov [ebp+var_28] eax +
test eax eax +
jz loc_108E70C  +
and [ebp+pdwDataLen] 0 +
lea eax [ebp+pdwDataLen] +
push eax  +
mov ecx esi +
call sub_108D9B4  +
test eax eax +
jl loc_108E70C  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+pdwDataLen]  +
call sub_108B132  +
test eax eax +
jz loc_108E703  +
mov eax [ebp+var_24] +
mov ecx [eax+10h] +
sub esp 10h +
mov edi esp +
push dword ptr [ebx+204h]  +
lea esi [ebp+var_14] +
push [ebp+var_28]  +
movs   +
movs   +
and ecx 200h +
movs   +
push ecx  +
push dword ptr [eax+14h]  +
movs   +
call sub_106E4D3  +
mov esi [ebp+var_24] +
push [ebp+pdwDataLen]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_20] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test byte ptr [esi+20h] 1 +
jz loc_108E728  +
push dword ptr [esi+14h]  +
mov eax [ebx] +
push 3  +
push esi  +
mov ecx ebx +
call dword ptr [eax+74h]  +
and dword ptr [ebx+158h] 0 +
push 0  +
push 0Ch  +
push 40Bh  +
push dword ptr [ebx+44h]  +
call ds:PostMessageW  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_18] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 20h  +
call sub_1002B98  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_108E819  +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_0] +
mov [esi+1Ch] eax +
mov eax [edi+4] +
test eax eax +
jz loc_108E80B  +
push esi  +
push eax  +
call sub_100EBA2  +
test eax eax +
jl loc_108E80B  +
and [ebp+arg_10] 0 +
lea eax [esi+4] +
push eax  +
push [ebp+arg_4]  +
call sub_100EBA2  +
test eax eax +
jl loc_108E802  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
call ds:__imp_SHGetIDListFromObject  +
test eax eax +
jl loc_108E802  +
push [ebp+arg_C]  +
push [ebp+arg_10]  +
call ds:__imp_SHELL32_25  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_108E802  +
lea eax [esi+8] +
push eax  +
push dword ptr [edi+8]  +
call sub_100EBA2  +
test eax eax +
jl loc_108E802  +
cmp [ebp+arg_14] 0 +
jz loc_108E7FB  +
push 0  +
push 2008h  +
push esi  +
push offset loc_108D8BA  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_108E802  +
xor esi esi +
jmp loc_108E802  +
mov ecx esi +
call sub_108D7D7  +
push [ebp+arg_10]  +
call ds:__imp_SHELL32_155  +
pop edi  +
test esi esi +
jz loc_108E819  +
push 1  +
mov ecx esi +
call sub_108C460  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+pszPath]  +
mov esi ecx +
push [ebp+arg_0]  +
call sub_108C486  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_108E8A8  +
push offset dword_1068890  +
call sub_1008600  +
test al al +
jz loc_108E8A8  +
push ebx  +
push dword ptr [esi+200h]  +
call ds:__imp_PathFindFileNameW  +
mov ebx eax +
test ebx ebx +
jz loc_108E8A7  +
and [ebp+pszPath] 0 +
lea eax [ebp+pszPath] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_108DB26  +
test eax eax +
jl loc_108E8A7  +
xor eax eax +
cmp [esi+84h] eax +
push 0  +
push [ebp+arg_C]  +
setnz al  +
push eax  +
push [ebp+arg_4]  +
push [ebp+pszPath]  +
call sub_108B9C1  +
push eax  +
push dword ptr [esi+204h]  +
push ebx  +
call sub_106E0CF  +
push [ebp+pszPath]  +
call ds:__imp_CoTaskMemFree  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+String] +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_100DC8C  +
push esi  +
mov edi ecx +
call sub_10719E5  +
test eax eax +
jl loc_108E945  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset stru_1026650  +
push offset dword_1068F1C  +
push 0  +
push eax  +
call dword ptr [ecx+0Ch]  +
and [ebp+String] 0 +
lea edx [ebp+String] +
push edx  +
push offset stru_1002CB4  +
test eax eax +
jl loc_108E916  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_108E920  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_108E940  +
push 0  +
push [ebp+pszPath]  +
mov ecx edi +
push 4  +
push [ebp+String]  +
call sub_108E823  +
mov esi eax +
mov eax [ebp+String] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
jmp loc_108E9AB  +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push offset dword_1069734  +
push esi  +
call dword ptr [eax]  +
mov esi eax +
test esi esi +
jl loc_108E9B1  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_108E9A8  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+String] +
push edx  +
push offset stru_1002CB4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_108E99F  +
push 0  +
push [ebp+pszPath]  +
mov ecx edi +
push 4  +
push [ebp+String]  +
call sub_108E823  +
mov esi eax +
mov eax [ebp+String] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
push edi  +
mov edi ds:__imp_StrCmpICW +
push offset aDelete  +
push ebx  +
mov esi ecx +
call edi  +
test eax eax +
jnz loc_108E9EC  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_108E5F4  +
mov [ebp+wParam] eax +
jmp loc_108EA47  +
push offset aTogglepin  +
push ebx  +
call edi  +
test eax eax +
jnz loc_108EA09  +
push eax  +
push [ebp+wParam]  +
mov ecx esi +
call sub_108FA82  +
and [ebp+wParam] 0 +
jmp loc_108EA51  +
push offset aOpen_0  +
push ebx  +
call edi  +
test eax eax +
jz loc_108EA37  +
push offset aCustomopen  +
push ebx  +
call edi  +
test eax eax +
jz loc_108EA37  +
push ebx  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+wParam]  +
push [ebp+arg_0]  +
call sub_1043E91  +
jmp loc_108E9E7  +
push 0  +
push [ebp+wParam]  +
mov ecx esi +
call sub_103E483  +
and [ebp+wParam] 0 +
cmp [ebp+wParam] 0 +
jl loc_108EB1E  +
mov eax [ebp+arg_0] +
test dword ptr [eax+10h] 1C0h +
jz loc_108EB1E  +
mov ebx [esi+20Ch] +
push offset aTaskbarpin  +
push [ebp+arg_10]  +
mov [ebp+arg_0] 0Ch +
call edi  +
test eax eax +
jnz loc_108EA8F  +
mov dword ptr [esi+20Ch] 1 +
mov [ebp+arg_0] 4 +
jmp loc_108EAC9  +
push offset aTaskbarunpin  +
push [ebp+arg_10]  +
call edi  +
test eax eax +
jnz loc_108EAAC  +
and [esi+20Ch] eax +
mov [ebp+arg_0] 9 +
jmp loc_108EAC9  +
push offset aRunas_0  +
push [ebp+arg_10]  +
call edi  +
test eax eax +
jnz loc_108EAC9  +
push 17A6h  +
push offset dword_108EB28  +
call sub_1034B2D  +
and dword ptr [esi+158h] 0 +
push 0  +
push 8  +
push 40Bh  +
push dword ptr [esi+44h]  +
call ds:PostMessageW  +
cmp ebx [esi+20Ch] +
jz loc_108EB1E  +
push offset dword_1034D68  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz loc_108EB1E  +
push [ebp+arg_0]  +
push dword ptr [esi+204h]  +
push dword ptr [esi+220h]  +
push offset dword_10B2478  +
call sub_102E3FE  +
mov eax [ebp+wParam] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [esi+0Ch]  +
call dword ptr [eax+0ACh]  +
mov edi eax +
test edi edi +
jz loc_108EB7C  +
push 0  +
push [ebp+arg_C]  +
add esi 10h +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
push esi  +
call sub_108E75A  +
push edi  +
call ds:__imp_CoTaskMemFree  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_4] +
mov edi ecx +
mov ecx [ebp+arg_0] +
push eax  +
call sub_108C3B9  +
mov esi eax +
test esi esi +
jl loc_108EBC4  +
push [ebp+arg_8]  +
mov ecx edi +
push 0FFFFFFFFh  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
call sub_108E823  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_108EBF3  +
push [ebp+arg_8]  +
mov eax [esi] +
push [ebp+arg_4]  +
call dword ptr [eax+4]  +
test eax eax +
jz loc_108EBF3  +
xor eax eax +
inc eax  +
jmp loc_108EBF5  +
xor eax eax +
shl eax 5 +
xor eax [esi+20h] +
and eax 20h +
xor [esi+20h] eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+134h] 0 +
jz loc_108EC50  +
mov eax [ebp+arg_0] +
mov edx eax +
sub edx [ecx+124h] +
cmp edx 1 +
ja loc_108EC50  +
cmp eax [ecx+0B8h] +
jz loc_108EC50  +
xor eax eax +
inc eax  +
jmp loc_108EC52  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_8] +
mov [esi+28h] eax +
mov eax [ebp+arg_0] +
mov [esi+2Ch] eax +
mov eax [ebp+arg_4] +
mov [esi+30h] eax +
mov dword ptr [esi] offset off_108ECA0 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:__imp_CoTaskMemFree +
push edi  +
mov edi [ebp+8] +
push dword ptr [edi+8]  +
call esi  +
push edi  +
call esi  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 0  +
push 0  +
mov edi ecx +
push 1023h  +
push dword ptr [edi+0B0h]  +
call esi  +
push eax  +
push [ebp+arg_8]  +
call ds:SetTextColor  +
push 0  +
push 0  +
push 1025h  +
push dword ptr [edi+0B0h]  +
call esi  +
pop edi  +
pop esi  +
cmp eax 0FFFFFFFFh +
jnz loc_108ED5A  +
push 1  +
push [ebp+arg_8]  +
call ds:SetBkMode  +
push 5  +
call ds:GetStockObject  +
jmp loc_108ED62  +
push 4  +
call ds:GetSysColorBrush  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ecx+0B0h]  +
xor esi esi +
call ds:GetWindowRect  +
test eax eax +
jz loc_108ED90  +
mov esi [ebp+Rect.bottom] +
sub esi [ebp+Rect.top] +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov eax [ecx+0B0h] +
test eax eax +
jz loc_108EDAB  +
push eax  +
call ds:SetFocus  +
xor eax eax +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B4h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+44h]  +
xor ebx ebx +
call ds:GetClientRect  +
mov edi ds:SendMessageW +
push ebx  +
push ebx  +
push 1098h  +
push dword ptr [esi+0B0h]  +
call edi  +
mov [ebp+var_4] eax +
test eax eax +
jle loc_108EEA7  +
push 5Ch  +
lea eax [ebp+var_B0] +
push ebx  +
push eax  +
mov [ebp+lParam] 60h +
call memset  +
add esp 0Ch +
lea eax [ebp+lParam] +
push eax  +
mov eax [ebp+var_4] +
dec eax  +
push eax  +
push 1099h  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_B0] 10h +
call edi  +
test eax eax +
jz loc_108EEA7  +
and [ebp+Points.y] ebx +
lea eax [ebp+Points] +
push eax  +
push [ebp+wParam]  +
push 1062h  +
push dword ptr [esi+0B0h]  +
call edi  +
test eax eax +
jz loc_108EEA7  +
push 2Ch  +
lea eax [ebp+var_50] +
push ebx  +
push eax  +
mov [ebp+var_54] 30h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_54] +
push eax  +
push ebx  +
push 109Ch  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_50] 1 +
call edi  +
mov eax [ebp+var_48] +
shr eax 1 +
add [ebp+Points.y] eax +
push 2  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [esi+44h]  +
push dword ptr [esi+0B0h]  +
call ds:MapWindowPoints  +
mov ebx [ebp+Rect.bottom] +
sub ebx [ebp+Points.y] +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
test eax eax +
jz loc_108EF5F  +
cmp [ebp+arg_0] 0 +
jz loc_108EF5F  +
and [ebp+lParam] 0 +
lea ecx [ebp+lParam] +
push ecx  +
push dword ptr [eax+24h]  +
push 100Eh  +
push dword ptr [ebx+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_108EF5F  +
cmp dword ptr [ebx+54h] 1 +
jnz loc_108EF00  +
mov eax [ebx+78h] +
jmp loc_108EF03  +
mov eax [ebx+74h] +
sub esp 10h +
mov edi esp +
lea esi [ebp+lParam] +
movs   +
movs   +
movs   +
lea ecx [ebp+var_24] +
mov [ebp+var_4] eax +
mov eax [ebx] +
push ecx  +
mov ecx ebx +
movs   +
call dword ptr [eax+78h]  +
mov eax [ebx+70h] +
mov edx [ebp+var_4] +
sub eax [ebx+68h] +
mov ecx [ebp+var_20] +
add eax [ebp+var_1C] +
add ecx edx +
mov edx [ebp+arg_0] +
test byte ptr [edx+20h] 1 +
jz loc_108EF3F  +
mov edx [ebx+0F8h] +
jmp loc_108EF45  +
mov edx [ebx+0FCh] +
mov ebx [ebx+6Ch] +
push 3  +
push 0  +
push 0  +
push ebx  +
push ebx  +
push edx  +
push ecx  +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
call ds:DrawIconEx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub esp 10h +
push esi  +
mov esi ecx +
test eax eax +
jz loc_108EFFA  +
cmp [ebp+arg_0] 0 +
jz loc_108EFFA  +
push edi  +
lea ecx [ebp+lParam] +
push ecx  +
push dword ptr [eax+24h]  +
xor edi edi +
push 100Eh  +
push dword ptr [esi+0B0h]  +
inc edi  +
mov [ebp+lParam] edi +
call ds:SendMessageW  +
test eax eax +
jz loc_108EFF9  +
push ebx  +
cmp [esi+54h] edi +
jnz loc_108EFB1  +
mov ebx [esi+78h] +
jmp loc_108EFB4  +
mov ebx [esi+74h] +
mov edi [ebp+var_8] +
sub edi [esi+70h] +
mov eax [esi] +
sub edi [esi+6Ch] +
mov ecx esi +
call dword ptr [eax+0FCh]  +
test eax eax +
jz loc_108EFD3  +
mov eax [esi+0F8h] +
jmp loc_108EFD9  +
mov eax [esi+0FCh] +
mov esi [esi+6Ch] +
push 3  +
push 0  +
push 0  +
push esi  +
push esi  +
push eax  +
mov eax [ebp+var_C] +
add eax ebx +
push eax  +
mov eax [ebp+arg_4] +
push edi  +
push dword ptr [eax+10h]  +
call ds:DrawIconEx  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
test edi edi +
jz loc_108F077  +
cmp [ebp+arg_0] 0 +
jz loc_108F077  +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [edi+24h]  +
mov [ebp+lParam] 1 +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_108F077  +
cmp dword ptr [esi+54h] 1 +
jnz loc_108F04B  +
mov ecx [esi+78h] +
jmp loc_108F04E  +
mov ecx [esi+74h] +
mov eax [esi+6Ch] +
mov edx [ebp+var_C] +
push 3  +
push 0  +
push 0  +
push eax  +
add edx ecx +
mov ecx [ebp+var_8] +
sub ecx [esi+70h] +
push eax  +
push dword ptr [esi+100h]  +
sub ecx eax +
push edx  +
push ecx  +
push dword ptr [edi+10h]  +
call ds:DrawIconEx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+38h] 1 +
push edi  +
mov edi ecx +
jnz loc_108F0D7  +
push 0  +
push 0  +
push 31h  +
push dword ptr [edi+0B0h]  +
call ds:SendMessageW  +
push eax  +
push dword ptr [esi+10h]  +
call ds:SelectObject  +
cmp dword ptr [edi+38h] 0 +
mov [ebp+var_4] 2 +
jnz loc_108F0CC  +
test byte ptr [esi+28h] 8 +
jz loc_108F0CC  +
push 0Eh  +
jmp loc_108F0CE  +
push 7  +
call ds:GetSysColor  +
mov [esi+30h] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10142B6  +
mov eax [ebp+arg_0] +
add esi 1A4h +
mov [esi] eax +
add eax 1Ch +
push eax  +
call ds:InterlockedIncrement  +
mov esi [esi] +
or dword ptr [esi+20h] 2 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+wParam]  +
lea esi [ecx+18Ch] +
push 1076h  +
push dword ptr [ecx+0B0h]  +
mov dword ptr [esi] 1 +
call ds:SendMessageW  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
lea edx [ebp+var_41C] +
push edx  +
lea edx [ebp+var_418] +
push edx  +
call dword ptr [eax+20h]  +
mov edi eax +
test edi edi +
jl loc_108F1E3  +
push esi  +
mov esi 104h +
push esi  +
lea eax [ebp+pszPath] +
push eax  +
push 8000h  +
push [ebp+var_41C]  +
push [ebp+var_418]  +
call sub_102711E  +
mov edi eax +
test edi edi +
jl loc_108F1D6  +
push esi  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call sub_10918F5  +
mov edi eax +
test edi edi +
jl loc_108F1D6  +
push ebx  +
lea eax [ebp+var_414] +
push eax  +
call ds:__imp_SHStrDupW  +
mov edi eax +
mov eax [ebp+var_418] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+4] 0FFFFFFFFh +
mov eax [eax+8] +
jnz loc_108F20C  +
dec eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
push dword ptr [esi]  +
call ds:__imp_CoTaskMemFree  +
push dword ptr [esi+4]  +
mov edi ds:__imp_SHELL32_155 +
call edi  +
push dword ptr [esi+8]  +
call edi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_108F215  +
test [ebp+arg_0] 1 +
jz loc_108F255  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_108F2A5  +
cmp [ebp+arg_C] 0 +
jz loc_108F2A5  +
mov ecx [ebp+arg_0] +
lea edx [ebp+arg_0] +
xor eax eax +
push edx  +
lea edx [ebp+arg_8] +
mov [esi] ax +
mov eax [ecx] +
push edx  +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_108F2A5  +
push [ebp+arg_C]  +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_8]  +
call sub_107C511  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push dword ptr [eax+18h]  +
mov esi ecx +
mov dword ptr [eax+24h] 1 +
call sub_1012341  +
mov edi eax +
test edi edi +
jz loc_108F2E2  +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+100h]  +
mov ecx edi +
call sub_100F319  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
inc ebx  +
xor edi edi +
mov [ebp+var_4] ebx +
cmp [esi+18Ch] edi +
jz loc_108F391  +
mov eax [ebp+arg_0] +
push dword ptr [eax+2Ch]  +
call sub_101231E  +
mov [ebp+var_C] eax +
cmp eax edi +
jz loc_108F391  +
mov edx [eax] +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx eax +
call dword ptr [edx+20h]  +
test eax eax +
jl loc_108F389  +
push edi  +
push edi  +
push 1018h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
cmp eax edi +
jz loc_108F380  +
push edi  +
push eax  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_107C2B2  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_108F380  +
mov [ebp+var_1C] edi +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
lea eax [ebp+var_1C] +
push eax  +
push 0D4h  +
push dword ptr [esi+44h]  +
mov [ebp+var_10] ebx +
call sub_103C26A  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_C] +
call sub_100F319  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp+var_10] ebx +
lea edi [ebp+var_C] +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
mov esi ecx +
push 0D4h  +
push dword ptr [esi+44h]  +
mov [ebp+var_4] ebx +
call sub_103C26A  +
mov edi [ebp+arg_0] +
mov eax [edi+20h] +
cmp eax ebx +
jz loc_108F454  +
push eax  +
call ds:PathRemoveBlanksW  +
push dword ptr [edi+2Ch]  +
mov ecx esi +
call sub_101231E  +
mov [ebp+arg_0] eax +
cmp eax ebx +
jz loc_108F454  +
push dword ptr [edi+20h]  +
mov edx [esi] +
push eax  +
mov ecx esi +
call dword ptr [edx+0A8h]  +
cmp eax ebx +
jl loc_108F43B  +
push ebx  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1012646  +
mov ebx eax +
test ebx ebx +
jz loc_108F44C  +
and [ebp+var_44] 0 +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [edi+10h]  +
mov [ebp+var_38] ebx +
push 1074h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
push ebx  +
call ds:__imp_CoTaskMemFree  +
jmp loc_108F44C  +
cmp eax 800704C7h +
jz loc_108F44C  +
push dword ptr [edi+10h]  +
mov ecx esi +
call sub_108F117  +
mov ecx [ebp+arg_0] +
call sub_100F319  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp word ptr [eax+0Ch] 71h +
push edi  +
mov edi ecx +
jnz loc_108F4B3  +
push esi  +
mov esi ds:GetKeyState +
push 10h  +
call esi  +
test ax ax +
jl loc_108F4B2  +
push 11h  +
call esi  +
test ax ax +
jl loc_108F4B2  +
push 12h  +
call esi  +
test ax ax +
jl loc_108F4B2  +
test byte ptr [edi+0C8h] 8 +
jz loc_108F4B2  +
mov ecx edi +
call sub_103E1B8  +
test eax eax +
jl loc_108F4B2  +
push eax  +
mov ecx edi +
call sub_108F117  +
pop esi  +
xor eax eax +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
and [ebp+var_34] 0 +
lea eax [ebp+wParam] +
mov [ebp+var_28] eax +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_24] 2 +
push 1073h  +
push dword ptr [ecx+0B0h]  +
call ds:SendMessageW  +
movzx eax word ptr [ebp+wParam] +
push eax  +
call ds:CharUpperW  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax 4000h +
mov word ptr [ebp+var_10] ax +
xor eax eax +
push eax  +
lea edx [ebp+var_10] +
push edx  +
push eax  +
push 151h  +
push offset dword_1036BDC  +
push offset dword_10128F0  +
push dword ptr [ecx+28h]  +
mov [ebp+var_8] eax +
call ds:SHLWAPI_484  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
mov ebx ds:SendMessageW +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi+128h] +
push 8  +
pop edi  +
test eax eax +
jl loc_108F578  +
and [ebp+var_30] 0 +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 102Bh  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_2C] edi +
call ebx  +
mov eax [ebp+wParam] +
mov [esi+128h] eax +
test eax eax +
jl loc_108F5B2  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 102Bh  +
push dword ptr [esi+0B0h]  +
mov [ebp+var_2C] edi +
mov [ebp+var_30] edi +
call ebx  +
call ds:GetTickCount  +
test eax eax +
jnz loc_108F5AA  +
or eax 0FFFFFFFFh +
mov [esi+12Ch] eax +
jmp loc_108F5B9  +
and dword ptr [esi+12Ch] 0 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+11Ch] +
test eax eax +
jz loc_108F5ED  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [esi+11Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+11Ch] 0 +
push 0FFFFFFFFh  +
mov ecx esi +
call sub_108F53F  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ds:LoadStringW +
mov ebx 104h +
push ebx  +
lea eax [esi+4] +
push eax  +
push 1FFh  +
mov dword ptr [esi] 4 +
push dword_10B23D0  +
call edi  +
push ebx  +
add esi 20Ch +
push esi  +
push 1FEh  +
push dword_10B23D0  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_108F66E  +
mov eax [esi+0C4h] +
mov ecx [ebp+arg_0] +
cdq   +
sub eax edx +
sar eax 1 +
add [ecx+8] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_108F69A  +
mov eax [esi+0C4h] +
mov ecx [ebp+arg_0] +
cdq   +
sub eax edx +
sar eax 1 +
add [ecx+8] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_108F6CD  +
mov eax [esi+0C4h] +
cdq   +
sub eax edx +
sar eax 1 +
inc eax  +
xor ecx ecx +
cmp [ebp+arg_8] eax +
setnl cl  +
mov eax ecx +
jmp loc_108F6CF  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jle loc_108F6F2  +
cmp eax [ecx+0C4h] +
jge loc_108F6F2  +
xor eax eax +
inc eax  +
jmp loc_108F6F4  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_108F711  +
mov eax 80004003h +
jmp loc_108F75D  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
mov eax [esi+8] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+48h]  +
mov ebx eax +
test ebx ebx +
jnz loc_108F759  +
cmp [edi+8] eax +
jz loc_108F759  +
mov eax [esi+0B0h] +
cmp eax 2 +
jnz loc_108F74B  +
push edi  +
lea ecx [esi-10h] +
call sub_108F64C  +
jmp loc_108F759  +
cmp eax 3 +
jnz loc_108F759  +
push edi  +
lea ecx [esi-10h] +
call sub_108F678  +
pop esi  +
mov eax ebx +
pop ebx  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_108F77B  +
mov eax 80004003h +
jmp loc_108F7D2  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
cmp dword ptr [esi+0B0h] 1 +
push edi  +
jnz loc_108F7A1  +
mov esi [esi+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
mov ebx eax +
jmp loc_108F7CE  +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov ebx eax +
test ebx ebx +
jnz loc_108F7CE  +
cmp [edi+8] eax +
jz loc_108F7CE  +
cmp dword ptr [esi+0B0h] 2 +
push edi  +
lea ecx [esi-10h] +
jnz loc_108F7C9  +
call sub_108F64C  +
jmp loc_108F7CE  +
call sub_108F678  +
pop esi  +
mov eax ebx +
pop ebx  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:__imp_SHELL32_152 +
push edi  +
push [ebp+arg_0]  +
call esi  +
push [ebp+arg_4]  +
mov edi eax +
call esi  +
cmp edi eax +
jnz loc_108F80A  +
mov esi [ebp+arg_0] +
mov ecx edi +
mov edi [ebp+arg_4] +
xor eax eax +
cmps   +
jnz loc_108F80A  +
inc eax  +
jmp loc_108F80C  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
test edx edx +
jl loc_108F858  +
mov eax [esi+4] +
cmp edx eax +
jge loc_108F858  +
lea ecx [eax-1] +
cmp edx ecx +
jz loc_108F850  +
mov ecx [esi] +
sub eax edx +
lea eax ds:0FFFFFFFCh[eax*4] +
lea ecx [ecx+edx*4] +
push eax  +
lea eax [ecx+4] +
push eax  +
push ecx  +
call memmove  +
add esp 0Ch +
dec dword ptr [esi+4]  +
xor eax eax +
inc eax  +
jmp loc_108F85A  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
test ecx ecx +
jz loc_108F87A  +
and dword ptr [eax] 0 +
call sub_100F319  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_108F8A0  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
push 3  +
pop eax  +
retn 4  +
***
mov eax 80004005h +
retn 8  +
***
mov eax 80070057h +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
lea edi [esi+98h] +
push edi  +
mov ebx 80004004h +
call ds:EnterCriticalSection  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10102CD  +
test eax eax +
jz loc_108F916  +
push 0  +
push [ebp+arg_4]  +
lea ecx [esi+0E0h] +
call sub_1006610  +
mov ebx eax +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ecx+0ECh] +
push edi  +
xor edi edi +
mov [ebp+arg_0] ebx +
test esi esi +
jbe loc_108F964  +
add ecx 0E8h +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
push edi  +
call sub_1013815  +
cmp [eax] ebx +
jnb loc_108F964  +
dec [ebp+arg_0]  +
inc edi  +
cmp edi esi +
jb loc_108F94F  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ecx+0ECh] +
xor ebx ebx +
test edi edi +
jbe loc_108F9A6  +
add ecx 0E8h +
mov [ebp+arg_0] ecx +
mov ecx [ebp+arg_0] +
push ebx  +
call sub_1013815  +
cmp [eax] esi +
ja loc_108F9A6  +
inc esi  +
inc ebx  +
cmp ebx edi +
jb loc_108F993  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
push 0  +
push 0  +
mov edi ecx +
push 1004h  +
push dword ptr [edi+0B0h]  +
call ds:SendMessageW  +
mov esi eax +
jmp loc_108F9DF  +
push esi  +
mov ecx edi +
call sub_101D26E  +
test eax eax +
jz loc_108F9E2  +
dec esi  +
jns loc_108F9D3  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
mov edi ecx +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jz loc_108FA78  +
cmp [edi+1A4h] ecx +
jnz loc_108FA78  +
mov eax [edi+0D4h] +
cmp eax ecx +
jz loc_108FA15  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_108FA18  +
mov [ebp+var_4] ecx +
push ebx  +
xor ebx ebx +
mov [ebp+var_8] ecx +
cmp [ebp+var_4] ecx +
jbe loc_108FA77  +
push esi  +
jmp loc_108FA28  +
xor ecx ecx +
cmp [ebp+var_8] ecx +
jnz loc_108FA76  +
mov eax [edi+0D4h] +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
cmp esi ecx +
jz loc_108FA70  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_108FA70  +
push eax  +
push [ebp+arg_0]  +
call sub_108F7DC  +
test eax eax +
jz loc_108FA67  +
push esi  +
mov ecx edi +
call sub_108F0E5  +
mov [ebp+var_8] 1 +
push [ebp+var_C]  +
call ds:__imp_SHELL32_155  +
inc ebx  +
cmp ebx [ebp+var_4] +
jb loc_108FA26  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
push [ebp+wParam]  +
mov esi ecx +
call sub_1012341  +
mov edi eax +
test edi edi +
jz loc_108FB17  +
push edi  +
mov ecx esi +
call sub_108F0E5  +
test byte ptr [edi+20h] 1 +
mov eax [esi] +
push dword ptr [edi+14h]  +
jz loc_108FAC4  +
xor ecx ecx +
cmp [ebp+arg_4] ecx +
setz cl  +
lea ecx [ecx+ecx+1] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+74h]  +
jmp loc_108FAD7  +
mov ecx [ebp+arg_4] +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFFFEh +
inc ecx  +
inc ecx  +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+70h]  +
test eax eax +
jl loc_108FB10  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+wParam]  +
mov [ebp+Rect.left] 2 +
push 100Eh  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
test eax eax +
jz loc_108FB10  +
push 1  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:InvalidateRect  +
mov ecx edi +
call sub_100F319  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1012304  +
mov ecx [ebp+arg_0] +
lea eax [esi+0D8h] +
mov [eax] ecx +
or dword ptr [ecx+20h] 8 +
mov eax [eax] +
add eax 1Ch +
push eax  +
call ds:InterlockedIncrement  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov esi ecx +
mov eax [esi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push dword ptr [esi+8]  +
xor edi edi +
push 1  +
push dword ptr [esi+10h]  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_108FBC6  +
cmp [ebp+var_4] edi +
jz loc_108FBC6  +
push dword ptr [esi+8]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
push offset dword_100671C  +
push eax  +
mov [esi+8] eax +
call ds:__imp_SHBindToParent  +
test eax eax +
jl loc_108FBC6  +
push [ebp+var_C]  +
push [ebp+var_8]  +
push dword ptr [esi+10h]  +
call ds:SHLWAPI_279  +
test eax eax +
jl loc_108FBBD  +
inc edi  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push edi  +
push 0FFFFFFFDh  +
push edi  +
mov esi ecx +
call SHCreateWorkerWindowW  +
mov [esi+10h] eax +
cmp eax edi +
jz loc_108FC52  +
push ebx  +
lea ebx [esi+0Ch] +
push ebx  +
push offset stru_100DD00  +
push 1  +
push edi  +
push offset stru_100DD10  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_108FC48  +
mov ecx esi +
call sub_108FB56  +
test eax eax +
jnz loc_108FC42  +
cmp [esi+14h] edi +
jz loc_108FC36  +
push 4  +
push dword ptr [esi]  +
push 2020h  +
push edi  +
push dword_10B23D0  +
call ds:ShellMessageBoxW  +
add esp 14h +
cmp eax 6 +
jnz loc_108FC42  +
mov eax [ebx] +
mov ecx [eax] +
push edi  +
push dword ptr [esi+8]  +
push eax  +
call dword ptr [ecx+10h]  +
push ebx  +
call sub_1002BEE  +
push dword ptr [esi+10h]  +
call ds:DestroyWindow  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi ecx +
call sub_1015433  +
test eax eax +
jnz loc_108FDFC  +
and [esi+114h] eax +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
push dword ptr [edi+0Ch]  +
mov ecx esi +
call sub_1012341  +
mov ebx eax +
mov [ebp+var_8] ebx +
test ebx ebx +
jz loc_108FDFA  +
test dword ptr [ebx+10h] 3C0h +
jnz loc_108FDF3  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_10696E4  +
mov ecx ebx +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_108FDF3  +
mov eax [edi+20h] +
mov [ebp+Point.x] eax +
mov eax [edi+24h] +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:ClientToScreen  +
mov eax [esi+110h] +
test eax eax +
jz loc_108FCEE  +
push [ebp+var_4]  +
mov ecx [eax] +
lea edx [ebp+Point] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+10h]  +
push offset aShellObjectOff  +
call ds:RegisterClipboardFormatW  +
movzx eax ax +
push 10h  +
push 40h  +
mov [ebp+var_C] eax +
call ds:GlobalAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_108FD8E  +
and [ebp+lParam] 0 +
xor eax eax +
and [ebp+var_20] eax +
lea edi [ebp+var_14] +
stos   +
lea edi [ebp+var_1C] +
stos   +
mov edi ds:SendMessageW +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1029h  +
push dword ptr [esi+0B0h]  +
call edi  +
mov eax [ebp+arg_0] +
mov ecx [eax+20h] +
add ecx [ebp+lParam] +
mov [ebx] ecx +
mov ecx [eax+24h] +
add ecx [ebp+var_14] +
mov [ebx+4] ecx +
lea ecx [ebp+var_20] +
push ecx  +
push dword ptr [eax+0Ch]  +
push 1010h  +
push dword ptr [esi+0B0h]  +
call edi  +
mov eax [ebp+var_20] +
sub eax [ebx] +
push ebx  +
mov [ebx+8] eax +
mov eax [ebp+var_1C] +
sub eax [ebx+4] +
mov [ebx+0Ch] eax +
movzx eax word ptr [ebp+var_C] +
push eax  +
push [ebp+var_4]  +
call sub_107D6EE  +
test eax eax +
jge loc_108FD8B  +
push ebx  +
call ds:GlobalFree  +
mov edi [ebp+arg_0] +
mov eax [ebp+var_4] +
mov [esi+114h] eax +
mov eax [edi+0Ch] +
mov [esi+120h] eax +
mov eax [ebp+var_8] +
mov eax [eax+8] +
mov [esi+124h] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+118h]  +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
push 0  +
push [ebp+var_4]  +
mov [ebp+var_10] eax +
push dword ptr [esi+44h]  +
call ds:SHELL32_88  +
cmp eax 40100h +
jnz loc_108FDE0  +
push [ebp+var_4]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0C4h]  +
mov eax [ebp+var_4] +
and dword ptr [esi+114h] 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ebx [ebp+var_8] +
mov ecx ebx +
call sub_100F319  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+wParam]  +
call sub_103DDC9  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp [esi+128h] edi +
jz loc_108FEAA  +
push ebx  +
call sub_108F5C5  +
push edi  +
mov ecx esi +
call sub_108F53F  +
push edi  +
mov ecx esi +
call sub_1012341  +
mov ebx eax +
test ebx ebx +
jz loc_108FEA9  +
test byte ptr [ebx+10h] 4 +
jz loc_108FEA2  +
lea edi [esi+11Ch] +
push edi  +
push offset dword_100DB28  +
mov ecx ebx +
call sub_1043B15  +
test eax eax +
jl loc_108FEA2  +
push [ebp+arg_10]  +
mov eax [edi] +
push [ebp+arg_C]  +
mov ecx [eax] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [esi+118h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_108FE9C  +
mov eax [ebp+arg_10] +
cmp dword ptr [eax] 0 +
jnz loc_108FEA2  +
mov eax [edi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push edi  +
call sub_1002BEE  +
mov ecx ebx +
call sub_100F319  +
pop ebx  +
mov esi [esi+11Ch] +
test esi esi +
jz loc_108FEC8  +
push [ebp+arg_10]  +
mov eax [esi] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+10h]  +
jmp loc_108FECD  +
mov eax 80004005h +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+Rect] +
push eax  +
mov esi ecx +
call sub_1038524  +
test eax eax +
jz loc_108FF02  +
push 1  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:InvalidateRect  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_14] esi +
jnz loc_108FF20  +
mov eax 80004003h +
jmp loc_108FF98  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
cmp eax esi +
jnz loc_108FF98  +
cmp [ebx+74h] esi +
jnz loc_108FF51  +
cmp [ebp+arg_C] esi +
jnz loc_108FF51  +
push [ebp+arg_14]  +
push esi  +
push 156h  +
push dword_10B23D0  +
call sub_103C0AE  +
jmp loc_108FF98  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103C9E6  +
test eax eax +
jz loc_108FF8F  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CA26  +
push [ebp+arg_14]  +
mov ebx [ebx+8] +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call dword ptr [eax+30h]  +
jmp loc_108FF98  +
mov ecx [ebp+arg_14] +
xor eax eax +
inc eax  +
and dword ptr [ecx] 0 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
push edi  +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
test eax eax +
jnz loc_1090073  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103C9E6  +
test eax eax +
jnz loc_109004F  +
cmp [ebp+arg_10] eax +
jz loc_109004F  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103EA68  +
push 0  +
sub esp 10h +
lea esi [ebp+arg_8] +
mov edi esp +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
test eax eax +
jz loc_109002C  +
call sub_103CC80  +
push eax  +
push 10B2h  +
push dword ptr [ebx+0A0h]  +
call ds:SendMessageW  +
mov dword ptr [ebx+0B0h] 2 +
xor eax eax +
jmp loc_1090073  +
call sub_103CC80  +
push eax  +
push 10B2h  +
push dword ptr [ebx+0A0h]  +
call ds:SendMessageW  +
mov dword ptr [ebx+0B0h] 3 +
jmp loc_1090028  +
lea eax [ebp+arg_8] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CA26  +
mov ebx [ebx+8] +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call dword ptr [eax+54h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_14] 0 +
push ebx  +
push esi  +
push edi  +
jnz loc_1090095  +
mov eax 80004003h +
jmp loc_1090107  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
add ebx 0FFFFFFF0h +
mov ecx ebx +
movs   +
call sub_103C9E6  +
test eax eax +
jnz loc_10900C4  +
cmp [ebp+arg_C] eax +
jz loc_10900C4  +
inc eax  +
jmp loc_1090107  +
push [ebp+arg_14]  +
mov eax [ebx] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
mov ecx ebx +
movs   +
call dword ptr [eax+120h]  +
test eax eax +
jge loc_1090107  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx ebx +
call sub_103CA26  +
push [ebp+arg_14]  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+3Ch]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_18] 0 +
push ebx  +
push esi  +
push edi  +
jnz loc_1090128  +
mov eax 80004003h +
jmp loc_109017C  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103C9E6  +
test eax eax +
jnz loc_1090155  +
cmp [ebp+arg_10] eax +
jz loc_1090155  +
inc eax  +
jmp loc_109017C  +
lea eax [ebp+arg_8] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CA26  +
push [ebp+arg_18]  +
mov eax [ebx+8] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+arg_4]  +
lea esi [ebp+arg_8] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+40h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_14] 0 +
push ebx  +
push esi  +
push edi  +
jnz loc_109019E  +
mov eax 80004003h +
jmp loc_10901F9  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
mov [ebp+arg_0] 80020003h +
movs   +
call sub_103C9E6  +
test eax eax +
jnz loc_10901CF  +
cmp [ebp+arg_C] eax +
jnz loc_10901F6  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebx-10h] +
call sub_103CA26  +
push [ebp+arg_14]  +
mov eax [ebx+8] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+2Ch]  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
test edi edi +
jnz loc_109021C  +
mov eax 80004003h +
jmp loc_109028D  +
mov esi [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
and dword ptr [edi] 0 +
cmp [ebp+arg_C] 0 +
mov [ebp+arg_0] 80020003h +
jz loc_109028A  +
lea ebx [esi-10h] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
mov ecx ebx +
movs   +
call sub_103C9E6  +
test eax eax +
jz loc_109028A  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx ebx +
call sub_103EC58  +
mov esi eax +
test esi esi +
jz loc_109028A  +
push [ebp+arg_14]  +
mov ecx [ebp+arg_C] +
mov eax [ebx] +
dec ecx  +
push ecx  +
push esi  +
mov ecx ebx +
call dword ptr [eax+0CCh]  +
movzx eax ax +
push eax  +
call sub_108A825  +
mov ecx esi +
mov [ebp+arg_0] eax +
call sub_100F319  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
test esi esi +
jnz loc_10902B3  +
mov eax 80004003h +
jmp loc_1090349  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
and dword ptr [esi] 0 +
cmp [ebp+arg_C] 0 +
mov [ebp+arg_0] 80020003h +
jz loc_1090346  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
lea ecx [ebx-10h] +
movs   +
call sub_103C9E6  +
test eax eax +
jz loc_1090336  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebx-10h] +
call sub_103EC58  +
mov esi eax +
test esi esi +
jz loc_109032C  +
test byte ptr [esi+10h] 1 +
jz loc_109031F  +
mov eax [ebp+arg_C] +
push [ebp+arg_14]  +
dec eax  +
sub eax [ebx+1A0h] +
neg eax  +
sbb eax eax +
add eax 0FFFFFCD2h +
push eax  +
call sub_108A7BE  +
mov [ebp+arg_0] eax +
mov ecx esi +
call sub_100F319  +
cmp [ebp+arg_0] 0 +
jge loc_1090346  +
push [ebp+arg_14]  +
push 0FFFFFCB6h  +
jmp loc_109033E  +
push [ebp+arg_14]  +
push 0FFFFFCE8h  +
call sub_108A7BE  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+28h] +
push ecx  +
push ecx  +
push dword ptr [eax+30h]  +
push dword ptr [eax+2Ch]  +
call sub_1013062  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
mov esi ecx +
push edi  +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+2Ch]  +
test eax eax +
jl loc_109048A  +
and [ebp+arg_0] 0 +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
mov ecx esi +
call sub_108F14C  +
mov edi eax +
test edi edi +
jl loc_1090476  +
and [ebp+lParam] 0 +
push 38h  +
lea eax [ebp+var_78] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov ecx esi +
call sub_103E1B8  +
and [ebp+var_40] 0 +
push 0Ah  +
pop ecx  +
mov [ebp+var_78] eax +
xor eax eax +
lea edi [ebp+var_3C] +
stos   +
lea eax [ebp+lParam] +
push eax  +
xor edi edi +
push edi  +
push 104Bh  +
push dword ptr [esi+0B0h]  +
mov [ebp+lParam] 2 +
call ds:SendMessageW  +
test eax eax +
jz loc_109040C  +
mov eax [ebp+var_60] +
mov [ebp+var_40] eax +
jmp loc_1090410  +
or [ebp+var_40] 0FFFFFFFFh +
mov eax [ebp+arg_0] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_4] +
mov [ebp+var_38] eax +
mov eax [ebx+20h] +
shl eax 1Fh +
push edi  +
sar eax 1Fh +
push ebx  +
mov ecx esi +
mov [ebp+var_30] eax +
call sub_1012646  +
mov [ebp+pv] eax +
mov eax 4000h +
mov word ptr [ebp+var_14] ax +
lea eax [ebp+var_40] +
push ebx  +
mov ecx esi +
mov [ebp+var_C] eax +
call sub_108FB24  +
push edi  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+arg_4]  +
push offset dword_1036BDC  +
push offset dword_10128F0  +
push dword ptr [esi+28h]  +
call ds:SHLWAPI_484  +
mov edi eax +
test edi edi +
jge loc_10904BD  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
push [ebp+arg_0]  +
mov ebx ds:__imp_CoTaskMemFree +
call ebx  +
push [ebp+var_4]  +
call ebx  +
test edi edi +
jge loc_10904BD  +
mov eax 4000h +
mov word ptr [ebp+var_14] ax +
xor eax eax +
push eax  +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
push 150h  +
push offset dword_1036BDC  +
push offset dword_10128F0  +
push dword ptr [esi+28h]  +
mov [ebp+var_C] eax +
call ds:SHLWAPI_484  +
mov ecx esi +
call sub_1012304  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
call sub_108FBD1  +
cmp dword ptr [ebp+8] 0 +
jz loc_10904E8  +
mov ecx [ebp+8] +
push 1  +
call sub_108F23B  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+0Ch] +
test byte ptr [eax+20h] 1 +
push edi  +
mov edi ecx +
jz loc_1090582  +
push esi  +
push 18h  +
call sub_1002B98  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_1090581  +
mov eax [ebp+arg_C] +
push 0  +
push [ebp+arg_8]  +
mov [esi+14h] eax +
push [ebp+arg_4]  +
mov eax [edi] +
push dword ptr [ebx+0Ch]  +
mov ecx edi +
call dword ptr [eax+0ACh]  +
mov [esi] eax +
test eax eax +
jz loc_1090574  +
lea edi [esi+4] +
push edi  +
push [ebp+arg_4]  +
call ds:__imp_SHGetIDListFromObject  +
test eax eax +
jl loc_1090574  +
push [ebp+arg_8]  +
push dword ptr [edi]  +
call ds:__imp_SHELL32_25  +
mov [esi+8] eax +
test eax eax +
jz loc_1090574  +
push 0  +
push 2008h  +
push esi  +
push offset loc_10904CB  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_1090574  +
xor esi esi +
test esi esi +
jz loc_1090581  +
push 1  +
mov ecx esi +
call sub_108F23B  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_103E1B8  +
mov ebx eax +
push ebx  +
mov ecx esi +
call sub_1012341  +
mov edi [ebp+arg_0] +
mov [ebp+var_8] eax +
mov eax [edi+0Ch] +
mov eax [eax+8] +
xor ecx ecx +
mov [ebp+var_4] ecx +
cmp eax 26h +
jnz loc_109066F  +
push ecx  +
push ecx  +
push 1098h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
neg eax  +
sbb eax eax +
and eax 0FFFFFF20h +
add eax 100h +
push eax  +
push ebx  +
push 100Ch  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
mov [edi+10h] eax +
mov ecx [esi+0C0h] +
lea eax [ecx+eax+1] +
cmp eax 1 +
jnz loc_1090615  +
mov eax [esi+0C4h] +
cdq   +
sub eax edx +
sar eax 1 +
jmp loc_1090617  +
xor eax eax +
push eax  +
push 0FFFFFFFCh  +
push dword ptr [esi+0B0h]  +
push 8005h  +
call ds:NotifyWinEvent  +
mov eax [edi+10h] +
cmp eax ebx +
jz loc_109063F  +
test eax eax +
jl loc_109063F  +
mov [ebp+var_4] 1 +
jmp loc_109065C  +
and [ebp+var_4] 0 +
test dword ptr [edi+20h] 200h +
jz loc_109065C  +
push 12h  +
push ebx  +
mov ecx esi +
mov [edi+10h] ebx +
call sub_103DDC9  +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
call sub_108F864  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
cmp eax 28h +
jnz loc_109069A  +
push ecx  +
push ecx  +
push 1098h  +
push dword ptr [esi+0B0h]  +
call ds:SendMessageW  +
neg eax  +
sbb eax eax +
and eax 0FFFFFE00h +
add eax 200h +
jmp loc_10905E3  +
cmp eax 27h +
jnz loc_109079B  +
cmp [ebp+var_8] ecx +
jz loc_109079B  +
mov eax [esi+0C0h] +
cmp eax 1 +
jnz loc_1090756  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_1090713  +
mov eax [ebp+var_8] +
test dword ptr [eax+10h] 3C0h +
jnz loc_1090713  +
mov [edi+10h] ebx +
mov eax [esi+0C4h] +
cdq   +
sub eax edx +
sar eax 1 +
lea eax [eax+ebx+1] +
push eax  +
push 0FFFFFFFCh  +
push dword ptr [esi+0B0h]  +
mov dword ptr [esi+0C0h] 2 +
push 8005h  +
call ds:NotifyWinEvent  +
xor edi edi +
inc edi  +
push edi  +
push 0  +
push dword ptr [esi+0B0h]  +
jmp loc_10907D7  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_1090643  +
push dword ptr [esi+44h]  +
mov ecx [ebp+var_8] +
push dword ptr [esi+58h]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_1090643  +
push 152h  +
push [ebp+var_8]  +
mov ecx esi +
call sub_1090378  +
and dword ptr [edi+20h] 0FFFFF6FFh +
mov [edi+10h] ebx +
jmp loc_1090636  +
cmp eax 2 +
jnz loc_1090643  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_1090643  +
push dword ptr [esi+44h]  +
mov ecx [ebp+var_8] +
push dword ptr [esi+58h]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_1090643  +
push 152h  +
push [ebp+var_8]  +
mov ecx esi +
mov [edi+10h] ebx +
call sub_1090378  +
jmp loc_1090636  +
cmp eax 25h +
jnz loc_1090643  +
mov eax [esi+0C0h] +
cmp eax 2 +
jnz loc_10907E5  +
mov [edi+10h] ebx +
xor edi edi +
inc edi  +
mov [esi+0C0h] edi +
add esi 0B0h +
inc ebx  +
push ebx  +
push 0FFFFFFFCh  +
push dword ptr [esi]  +
push 8005h  +
call ds:NotifyWinEvent  +
push edi  +
push 0  +
push dword ptr [esi]  +
call ds:InvalidateRect  +
mov [ebp+var_4] edi +
jmp loc_109065C  +
cmp eax 3 +
jnz loc_1090643  +
mov [edi+10h] ebx +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_10907B2  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_10907B2  +
test dword ptr [eax+10h] 3C0h +
jnz loc_10907B2  +
xor edi edi +
mov dword ptr [esi+0C0h] 2 +
inc edi  +
jmp loc_10907BB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
call sub_103E1B8  +
mov ebx eax +
test ebx ebx +
jl loc_10908BF  +
push ebx  +
mov ecx edi +
call sub_1012341  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10908BF  +
push esi  +
mov esi [ebp+arg_0] +
test dword ptr [esi+20h] 400h +
jz loc_1090879  +
test byte ptr [eax+10h] 10h +
jnz loc_1090868  +
cmp dword ptr [edi+0C0h] 2 +
jnz loc_1090868  +
mov ecx edi +
jmp loc_109088D  +
cmp dword ptr [edi+0C0h] 3 +
jnz loc_10908B6  +
push 150h  +
push eax  +
jmp loc_10908AF  +
push dword ptr [esi+18h]  +
mov ecx edi +
push dword ptr [esi+14h]  +
push ebx  +
call sub_103DC26  +
mov ecx edi +
test eax eax +
jz loc_1090897  +
push 1  +
push ebx  +
call sub_108FA82  +
jmp loc_10908B6  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push ebx  +
call sub_103DCBA  +
test eax eax +
jz loc_10908B6  +
push 150h  +
push [ebp+var_4]  +
mov ecx edi +
call sub_1090378  +
mov ecx [ebp+var_4] +
call sub_100F319  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+130h] +
cmp [esi] ebx +
jz loc_10908EF  +
call sub_108FED8  +
mov ecx edi +
mov [esi] ebx +
call sub_108FED8  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
push edi  +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
cmp [ebp+arg_C] 0 +
mov [ebp+var_4] 80004005h +
jz loc_10909F3  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
add ebx 0FFFFFFF0h +
mov ecx ebx +
movs   +
call sub_103C9E6  +
mov ecx ebx +
test eax eax +
jz loc_1090982  +
lea eax [ebp+arg_4] +
push eax  +
call sub_103EC58  +
mov esi eax +
test esi esi +
jz loc_10909F0  +
test byte ptr [esi+10h] 1 +
jz loc_10909E3  +
mov eax [ebp+arg_C] +
lea ecx [eax-1] +
mov eax [ebp+arg_0] +
cmp ecx [eax+1A0h] +
jnz loc_10909E3  +
push 0  +
push 0D3h  +
push dword ptr [eax+34h]  +
call sub_103C26A  +
and [ebp+var_4] 0 +
jmp loc_10909E3  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_103EA68  +
mov ecx ebx +
test eax eax +
jz loc_10909C7  +
push 1  +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_103CC80  +
push eax  +
mov ecx ebx +
call sub_108FA82  +
test eax eax +
jle loc_10909C2  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
jmp loc_10909EA  +
lea eax [ebp+arg_4] +
push eax  +
call sub_103EC58  +
mov esi eax +
test esi esi +
jz loc_10909F0  +
push 152h  +
push esi  +
mov ecx ebx +
call sub_1090378  +
mov ecx esi +
call sub_100F319  +
cmp [ebp+var_4] 0 +
jge loc_1090A08  +
mov ebx [ebp+arg_0] +
sub esp 10h +
mov edi esp +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
push ebx  +
movs   +
call sub_108A6C5  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push esi  +
push 0FFFFFFFFh  +
mov esi ecx +
call sub_10908CA  +
mov ecx esi +
call sub_108F5C5  +
mov eax dword_10B114C +
test eax eax +
jz loc_1090A3F  +
push eax  +
push dword ptr [esi+118h]  +
call sub_107DA82  +
add esi 118h +
push esi  +
call sub_1002BEE  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_1090A17  +
mov ebx [ebp+arg_0] +
lea edi [esi+114h] +
push dword ptr [edi]  +
push ebx  +
call sub_107FA57  +
xor ecx ecx +
cmp [edi] ecx +
mov [esi+134h] eax +
mov eax [esi] +
setz cl  +
push ecx  +
push ebx  +
mov ecx esi +
call dword ptr [eax+0C0h]  +
mov [esi+138h] eax +
mov [esi+118h] ebx +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
push [ebp+arg_10]  +
mov eax [esi] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+10h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 430h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+18h] +
mov ecx esi +
mov [ebp-41Ch] edi +
call sub_1015433  +
test eax eax +
jz loc_1090AF1  +
and dword ptr [edi] 0 +
jmp loc_1090DE1  +
mov eax [ebp+10h] +
mov [ebp-424h] eax +
mov eax [ebp+14h] +
mov [ebp-420h] eax +
mov eax [esi+10Ch] +
test eax eax +
jz loc_1090B1C  +
push dword ptr [edi]  +
mov ecx [eax] +
lea edx [ebp-424h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+0Ch] +
push ebx  +
mov [esi+13Ch] eax +
lea eax [ebp-424h] +
push eax  +
push dword ptr [esi+0B0h]  +
call ds:ScreenToClient  +
xor eax eax +
push eax  +
push eax  +
push 1004h  +
push dword ptr [esi+0B0h]  +
lea edi [ebp-428h] +
stos   +
call ds:SendMessageW  +
lea ebx [eax-1] +
cmp ebx 1 +
mov [ebp-430h] eax +
jl loc_1090B90  +
lea eax [ebp-42Ch] +
push eax  +
push ebx  +
mov ecx esi +
call sub_108F973  +
push eax  +
mov ecx esi +
call sub_1012519  +
mov eax [ebp-420h] +
cmp [ebp-428h] eax +
jle loc_1090B96  +
dec ebx  +
cmp ebx 1 +
jl loc_1090B96  +
jmp loc_1090B63  +
***
mov eax [ebp-420h] +
xor edi edi +
cmp ebx edi +
jg loc_1090BA4  +
mov [ebp-428h] edi +
xor ebx ebx +
mov ecx [esi+60h] +
cmp ecx edi +
jz loc_1090BCC  +
cmp [ebp-430h] edi +
jz loc_1090BCC  +
sub eax [ebp-428h] +
jns loc_1090BBD  +
xor eax eax +
cmp eax ecx +
jl loc_1090BC4  +
lea eax [ecx-1] +
shl eax 2 +
cdq   +
idiv  ecx +
mov edi eax +
cmp dword ptr [esi+138h] 0 +
jz loc_1090C46  +
cmp edi 1 +
jz loc_1090BF9  +
cmp edi 2 +
jnz loc_1090BF5  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+12Ch]  +
test eax eax +
jnz loc_1090C10  +
cmp [esi+134h] eax +
jz loc_1090C10  +
test edi edi +
jnz loc_1090C0B  +
mov eax [esi+0B8h] +
cmp ebx eax +
jge loc_1090C07  +
mov edi ebx +
jmp loc_1090C3E  +
mov edi eax +
jmp loc_1090C3E  +
cmp edi 2 +
jnz loc_1090C28  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+12Ch]  +
test eax eax +
jnz loc_1090C2D  +
cmp [esi+134h] eax +
jnz loc_1090C2D  +
jmp loc_1090C46  +
cmp edi 3 +
jnz loc_1090C46  +
mov ecx [esi+0B8h] +
lea eax [ebx+1] +
cmp eax ecx +
mov edi eax +
jl loc_1090C3E  +
mov edi ecx +
test edi edi +
jge loc_1090D18  +
push 0FFFFFFFFh  +
mov ecx esi +
call sub_10908CA  +
mov eax [ebp-420h] +
sub eax [ebp-428h] +
mov ecx [esi+60h] +
dec ecx  +
cmp eax ecx +
ja loc_1090C98  +
cmp dword ptr [ebp-430h] 0 +
jz loc_1090C98  +
cmp dword ptr [esi+134h] 0 +
jz loc_1090C7D  +
cmp [esi+120h] ebx +
jz loc_1090C98  +
push dword ptr [ebp-41Ch]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_108FE21  +
test eax eax +
jge loc_1090CA1  +
mov eax [ebp-41Ch] +
and dword ptr [eax] 0 +
cmp dword ptr [esi+12Ch] 0 +
jz loc_1090DC0  +
call ds:GetDoubleClickTime  +
push 5  +
shl eax 2 +
xor edx edx +
pop ecx  +
div  ecx +
mov edi eax +
call ds:GetTickCount  +
sub eax [esi+12Ch] +
cmp eax edi +
jb loc_1090DC0  +
and dword ptr [esi+12Ch] 0 +
lea edi [esi+128h] +
push dword ptr [edi]  +
mov ecx esi +
call sub_1012341  +
mov ebx eax +
test ebx ebx +
jz loc_1090DC0  +
test byte ptr [ebx+10h] 1 +
jz loc_1090D0C  +
push 0  +
push dword ptr [edi]  +
push 40Ch  +
push dword ptr [esi+44h]  +
call ds:PostMessageW  +
mov ecx ebx +
call sub_100F319  +
jmp loc_1090DC0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+6Ch]  +
mov ecx esi +
test eax eax +
jz loc_1090D41  +
call sub_108F5C5  +
push 0FFFFFFFFh  +
mov ecx esi +
call sub_10908CA  +
mov eax [ebp-41Ch] +
and dword ptr [eax] 0 +
jmp loc_1090DCB  +
call sub_108F5C5  +
push edi  +
mov ecx esi +
call sub_108EC25  +
mov ecx esi +
test eax eax +
jz loc_1090D58  +
push 0FFFFFFFFh  +
jmp loc_1090D59  +
push edi  +
call sub_10908CA  +
mov eax [ebp-41Ch] +
mov cl [eax] +
and cl 4 +
movzx ecx cl +
neg ecx  +
sbb ecx ecx +
and ecx 3 +
inc ecx  +
cmp dword_10B114C 0 +
mov [eax] ecx +
jz loc_1090DC0  +
mov edi 414h +
push edi  +
lea eax [ebp-418h] +
push 0  +
push eax  +
call memset  +
mov eax [esi] +
add esp 0Ch +
lea ecx [ebp-418h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+11Ch]  +
push edi  +
lea eax [ebp-418h] +
push eax  +
push dword_10B114C  +
push dword ptr [esi+118h]  +
call sub_107D7DF  +
mov eax [ebp-41Ch] +
cmp dword ptr [eax] 0 +
jnz loc_1090DE0  +
mov eax dword_10B114C +
test eax eax +
jz loc_1090DE0  +
push eax  +
push dword ptr [esi+118h]  +
call sub_107DA82  +
pop ebx  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
xor eax eax +
pop esi  +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov ecx esi +
call sub_1015433  +
test eax eax +
jnz loc_1090E26  +
lea eax [esi+10Ch] +
cmp dword ptr [eax] 0 +
jz loc_1090E1F  +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov ecx esi +
call sub_1090A17  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+8] +
mov ecx esi +
call sub_1015433  +
test eax eax +
jz loc_1090E53  +
mov eax [ebp+1Ch] +
and dword ptr [eax] 0 +
jmp loc_1090F69  +
mov eax [esi+13Ch] +
push ebx  +
mov ebx [ebp+1Ch] +
push edi  +
push ebx  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
mov [ebp+10h] eax +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_1090A52  +
mov eax [ebp+14h] +
mov [ebp-8] eax +
mov eax [ebp+18h] +
mov [ebp-4] eax +
mov eax [esi+10Ch] +
test eax eax +
jz loc_1090E98  +
push dword ptr [ebx]  +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi [esi+130h] +
push 0FFFFFFFFh  +
mov ecx esi +
call sub_10908CA  +
cmp dword ptr [ebx] 0 +
jz loc_1090F60  +
test edi edi +
jl loc_1090F38  +
push dword ptr [esi+120h]  +
mov ecx esi +
call sub_1012341  +
mov ebx eax +
test ebx ebx +
jz loc_1090EF8  +
cmp dword ptr [esi+134h] 0 +
jz loc_1090EF8  +
test byte ptr [ebx+20h] 1 +
jz loc_1090EF8  +
mov eax [esi] +
push edi  +
push ebx  +
mov ecx esi +
call dword ptr [eax+0B0h]  +
test eax eax +
jl loc_1090F2B  +
push ebx  +
mov ecx esi +
call sub_108F0E5  +
push 0  +
push 8  +
jmp loc_1090F1D  +
mov eax [esi] +
push edi  +
push dword ptr [esi+118h]  +
mov ecx esi +
call dword ptr [eax+0C8h]  +
test eax eax +
jl loc_1090F2B  +
test ebx ebx +
jz loc_1090F19  +
push ebx  +
mov ecx esi +
call sub_108F0E5  +
push 0  +
push 0Ch  +
push 40Bh  +
push dword ptr [esi+44h]  +
call ds:PostMessageW  +
test ebx ebx +
jz loc_1090F60  +
mov ecx ebx +
call sub_100F319  +
jmp loc_1090F60  +
lea edi [esi+11Ch] +
mov eax [edi] +
test eax eax +
jz loc_1090F60  +
mov ecx [eax] +
push ebx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [esi+118h]  +
push eax  +
call dword ptr [ecx+18h]  +
push edi  +
call sub_1002BEE  +
mov ecx esi +
call sub_1090A17  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_103E1B8  +
mov ebx eax +
push ebx  +
mov ecx esi +
call sub_1012341  +
xor edi edi +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1090FE8  +
cmp dword ptr [esi+0C0h] 2 +
jnz loc_1090FBC  +
push 40000065h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_1090FBC  +
push 1  +
push ebx  +
mov ecx esi +
call sub_108FA82  +
jmp loc_1090FE0  +
cmp dword ptr [esi+0C0h] 3 +
mov ecx esi +
jnz loc_1090FD6  +
push 150h  +
push [ebp+var_4]  +
call sub_1090378  +
jmp loc_1090FDE  +
push 1  +
push ebx  +
call sub_103E483  +
mov edi eax +
mov ecx [ebp+var_4] +
call sub_100F319  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax [ecx+0D8h] +
test eax eax +
jz locret_109100C  +
push 0  +
push eax  +
call sub_108F1FA  +
push eax  +
call sub_103E483  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+8] +
mov ecx esi +
call sub_1015433  +
test eax eax +
jz loc_1091032  +
mov eax [ebp+1Ch] +
and dword ptr [eax] 0 +
xor eax eax +
jmp loc_1091073  +
mov eax [ebp+14h] +
mov [ebp-8] eax +
mov eax [ebp+18h] +
mov [ebp-4] eax +
mov eax [esi+10Ch] +
push edi  +
mov edi [ebp+1Ch] +
test eax eax +
jz loc_109105E  +
push dword ptr [edi]  +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi+44h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
push edi  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_1090A52  +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ds:__imp_SHELL32_155 +
mov esi ecx +
push dword ptr [esi+30h]  +
call edi  +
mov eax [ebp+arg_0] +
push dword ptr [esi+34h]  +
mov [esi+30h] eax +
call edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
pop edi  +
mov [esi+34h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+4] 0FFFFFFFEh +
jnz loc_10910C5  +
mov eax 80004005h +
pop ebp  +
retn 8  +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+20h]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jnz loc_10910FF  +
cmp dword ptr [ebp+0Ch] 4000000h +
jnz loc_10910FF  +
mov eax [ebp+10h] +
test eax eax +
jz loc_10910FF  +
mov eax [eax+2] +
cmp eax 0Ah +
jz loc_10910F8  +
cmp eax 0Dh +
jnz loc_10910FF  +
push 0  +
call sub_1051314  +
pop ebp  +
retn 10h  +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push 14Ch  +
push offset dword_1036348  +
push offset dword_1036958  +
push dword ptr [ecx+28h]  +
call ds:SHLWAPI_484  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
push edi  +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_1091181  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
mov edi [ebp+lprc] +
xor ecx ecx +
test eax eax +
mov eax [ebp+arg_C] +
setnz cl  +
inc ecx  +
imul ecx [esi+68h] +
sub eax ecx +
mov [edi] eax +
mov eax [ebp+arg_8] +
mov [edi+4] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
mov ecx [ebp+arg_C] +
neg eax  +
sbb eax eax +
neg eax  +
imul eax [esi+68h] +
sub ecx eax +
mov eax [ebp+arg_10] +
mov [edi+8] ecx +
mov [edi+0Ch] eax +
jmp loc_109118B  +
mov edi [ebp+lprc] +
push edi  +
call ds:SetRectEmpty  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+20h] +
push [ebp+nBufferMax]  +
not eax  +
push [ebp+lpBuffer]  +
and eax 1 +
or eax 14Ch +
push eax  +
push dword_10B23D0  +
call ds:LoadStringW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_10911DC  +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ecx] ax +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx] +
call dword ptr [eax+58h]  +
neg eax  +
sbb eax eax +
add eax 1Fh +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+58h]  +
test eax eax +
jnz loc_109121D  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
test eax eax +
jnz loc_109121D  +
push 1Dh  +
jmp loc_109121F  +
push 1Ch  +
pop eax  +
pop esi  +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset aTaskbarpin  +
mov esi 100h +
push esi  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+10h]  +
call sub_104337A  +
cmp eax 0FFFFFFFFh +
jnz loc_1091262  +
push offset aTaskbarunpin  +
push esi  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+10h]  +
call sub_104337A  +
pop esi  +
test eax eax +
jbe loc_109127A  +
push 0  +
push 0FFFFFFFFh  +
push 0C00h  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:InsertMenuW  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
lea ecx [ebp+var_21C] +
push ecx  +
lea ecx [ebp+var_210] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
xor ebx ebx +
cmp eax ebx +
mov [ebp+var_220] eax +
jl loc_10913DC  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
mov [ebp+var_218] eax +
cmp eax ebx +
jz loc_1091304  +
xor ecx ecx +
cmp [esi+4] ebx +
setnl cl  +
push ecx  +
push dword ptr [esi+38h]  +
push eax  +
call sub_106DE53  +
mov eax [edi+8] +
mov ecx [eax] +
push ebx  +
push [ebp+var_218]  +
push eax  +
call dword ptr [ecx+10h]  +
push [ebp+var_218]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_210] +
lea edx [ebp+var_214] +
push edx  +
lea edx [ebp+var_21C] +
push edx  +
push 1  +
mov [ebp+var_214] 10000h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_1091371  +
test [ebp+var_214] 10000h +
jz loc_1091371  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push 8000h  +
push [ebp+var_21C]  +
push [ebp+var_210]  +
call sub_102711E  +
test eax eax +
jl loc_1091371  +
lea eax [ebp+var_20C] +
push eax  +
push offset dword_1068F64  +
call sub_107D05F  +
push ebx  +
push dword ptr [esi+38h]  +
push 4  +
push offset dword_10092EC  +
call sub_1009311  +
mov eax [edi+18h] +
push ebx  +
push ebx  +
push ebx  +
push 154h  +
push offset dword_1036348  +
mov [eax+158h] ebx +
mov eax [edi+18h] +
push offset dword_10128F0  +
push dword ptr [eax+28h]  +
call ds:SHLWAPI_484  +
mov eax [edi+18h] +
push ebx  +
push 8  +
push 40Bh  +
push dword ptr [eax+44h]  +
call ds:PostMessageW  +
cmp [esi+4] ebx +
jl loc_10913D0  +
push 8Eh  +
push offset dword_1068860  +
call sub_1034B2D  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_220] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+18h] +
push esi  +
mov esi ds:__imp_StrCmpICW +
push edi  +
push offset aDelete  +
push ebx  +
mov edi ecx +
call esi  +
test eax eax +
jnz loc_1091425  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_1091283  +
mov esi eax +
jmp loc_109146D  +
push offset aTogglepin  +
push ebx  +
call esi  +
test eax eax +
jz loc_109145F  +
push offset aStartpin  +
push ebx  +
call esi  +
test eax eax +
jz loc_109145F  +
push offset aStartunpin  +
push ebx  +
call esi  +
test eax eax +
jz loc_109145F  +
mov ecx [edi+18h] +
push ebx  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 0  +
push dword ptr [ebp+8]  +
call sub_1043E91  +
jmp loc_1091421  +
***
mov ecx [edi+18h] +
xor esi esi +
push esi  +
push dword ptr [ebp+0Ch]  +
call sub_108FA82  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
mov edi ecx +
lea ecx [ebp-4] +
push ecx  +
lea ecx [ebp+8] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov ebx eax +
test ebx ebx +
jl loc_1091594  +
push dword ptr [ebp-4]  +
mov ecx edi +
push dword ptr [ebp+8]  +
push esi  +
call sub_1012728  +
test eax eax +
jz loc_10914F6  +
mov ecx [esi+30h] +
mov eax [edi+20h] +
mov edx [eax] +
lea ebx [ebp+0Ch] +
push ebx  +
push dword ptr [ebp+0Ch]  +
push ecx  +
push eax  +
call dword ptr [edx+24h]  +
mov ebx eax +
test ebx ebx +
jl loc_109158B  +
push dword ptr [ebp+0Ch]  +
mov eax [esi+30h] +
mov edi [edi+8] +
mov ecx [edi] +
push eax  +
push edi  +
call dword ptr [ecx+10h]  +
push dword ptr [ebp+0Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_1091579  +
jmp loc_1091584  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push 1  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-4]  +
push dword ptr [edi+1Ch]  +
push eax  +
call dword ptr [ecx+30h]  +
mov ebx eax +
test ebx ebx +
jl loc_109158B  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_109158B  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
push offset dword_1068F74  +
call sub_107D0C8  +
cmp dword ptr [esi+4] 0 +
jl loc_1091581  +
push dword ptr [esi+30h]  +
call sub_107D56B  +
mov [ebp-0Ch] eax +
test eax eax +
jz loc_1091576  +
push dword ptr [ebp+0Ch]  +
push eax  +
call ds:__imp_SHELL32_25  +
mov [ebp-8] eax +
test eax eax +
jz loc_109156D  +
mov edi [edi+8] +
mov ecx [edi] +
push eax  +
push dword ptr [esi+30h]  +
push edi  +
call dword ptr [ecx+10h]  +
push dword ptr [ebp-8]  +
mov ecx esi +
call sub_109107D  +
push dword ptr [ebp-0Ch]  +
call ds:__imp_SHELL32_155  +
push dword ptr [ebp+0Ch]  +
call ds:__imp_SHELL32_155  +
jmp loc_109158B  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_109107D  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 3  +
mov esi ecx +
call sub_106DF55  +
mov eax [ebp+8] +
mov ecx [eax+30h] +
mov eax [esi+8] +
mov esi [ebp+0Ch] +
mov edx [eax] +
inc esi  +
movzx esi si +
push esi  +
push ecx  +
push eax  +
call dword ptr [edx+10h]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 0Ah  +
push [ebp+arg_0]  +
xor esi esi +
mov edi ecx +
mov [ebp+var_4] esi +
call sub_107D8CC  +
test eax eax +
jl loc_1091627  +
cmp [ebp+arg_4] esi +
jz loc_1091609  +
mov eax [edi+8] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_109161E  +
mov eax [edi+8] +
mov ecx [eax] +
push 2  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
push [ebp+var_4]  +
call ds:__imp_SHELL32_155  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
push 0  +
lea edx [ebp+pv] +
push edx  +
push 0  +
lea edx [ebp+var_4] +
push edx  +
push 2  +
push [ebp+arg_0]  +
mov esi ecx +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
mov edi 80004005h +
call dword ptr [ecx+18h]  +
test eax eax +
jnz loc_10916DF  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
call ds:__imp_SHGetIDListFromObject  +
mov edi eax +
test edi edi +
jl loc_10916CD  +
push [ebp+arg_0]  +
mov eax [esi+8] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
test edi edi +
jl loc_10916C4  +
mov ecx [ebp+arg_4] +
mov esi [esi+8] +
mov eax [esi] +
inc ecx  +
movzx ecx cx +
push ecx  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+10h]  +
mov edi eax +
test edi edi +
jl loc_10916C4  +
push 8Dh  +
push offset dword_10916E8  +
call sub_1034B2D  +
push 0Eh  +
push [ebp+pv]  +
push [ebp+arg_0]  +
push offset dword_10B2478  +
call sub_102E3FE  +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+4] 0 +
jl loc_1091716  +
push 3Fh  +
push offset dword_1091780  +
jmp loc_1091720  +
push 20Eh  +
push offset dword_1091770  +
call sub_1034B2D  +
push offset dword_10688B0  +
call sub_1008600  +
test al al +
jz loc_1091766  +
mov eax [esi] +
lea ecx [ebp+pv] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1091766  +
xor eax eax +
cmp [esi+4] eax +
setnl al  +
push eax  +
push dword ptr [esi+38h]  +
push [ebp+pv]  +
push [ebp+arg_0]  +
call sub_106E086  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:__imp_CoTaskMemFree  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+pidl] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+pszPrefix] +
push ecx  +
push eax  +
call ds:__imp_SHGetPathFromIDListW  +
test eax eax +
jz loc_109180F  +
mov eax [edi] +
test eax eax +
jz loc_10917E8  +
mov eax [eax] +
jmp loc_10917EA  +
xor eax eax +
lea esi [eax-1] +
test esi esi +
jl loc_109180F  +
mov eax [edi] +
mov eax [eax+4] +
lea eax [eax+esi*4] +
push dword ptr [eax]  +
lea eax [ebp+pszPrefix] +
push eax  +
call ds:PathIsPrefixW  +
test eax eax +
jnz loc_1091821  +
dec esi  +
jns loc_10917F1  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
xor eax eax +
inc eax  +
jmp loc_1091811  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
add ecx 4 +
cmp [ecx] eax +
jz loc_1091847  +
cmp [ebp+pidl] eax +
jz loc_1091847  +
push ecx  +
push [ebp+pidl]  +
call sub_10917AF  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi+0Ch] +
test byte ptr [esi] 1 +
jz loc_10918E8  +
push ebx  +
lea ebx [ecx+4] +
cmp dword ptr [ebx] 0 +
jz loc_10918E7  +
mov eax [esi+28h] +
and [ebp+arg_0] 0 +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset nullsub_7  +
push 0  +
push dword ptr [esi+24h]  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_10918A5  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_10918BF  +
push dword ptr [esi+24h]  +
push dword ptr [esi+20h]  +
call ds:__imp_SHELL32_25  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_10918E7  +
push ebx  +
push eax  +
call sub_10917AF  +
test eax eax +
jz loc_10918DE  +
mov eax [edi+10h] +
or dword ptr [eax+8] 2000h +
mov eax [edi+10h] +
and dword ptr [eax+8] 0FFFFFBFFh +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_155  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
xor eax eax +
push esi  +
mov [ebx] ax +
lea eax [ebp+arg_4] +
push eax  +
push offset dword_100DC8C  +
push 80h  +
push [ebp+pszPath]  +
call sub_107F335  +
mov esi eax +
test esi esi +
jl loc_1091987  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push edi  +
lea edx [ebp+var_4] +
push edx  +
mov edi 10000h +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_109197D  +
test [ebp+var_4] edi +
jz loc_109194F  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+arg_4]  +
call ds:SHELL32_895  +
jmp loc_109197B  +
push 4  +
push offset a_exe  +
push [ebp+pszPath]  +
mov esi 80004005h +
call ds:__imp_PathFindExtensionW  +
push eax  +
call ds:__imp_StrCmpNICW  +
test eax eax +
jnz loc_109197D  +
push [ebp+pszPath]  +
push [ebp+arg_8]  +
push ebx  +
call sub_100665F  +
mov esi eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
push 1  +
push 0  +
push offset stru_100DD10  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_10919E5  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+28h]  +
mov esi eax +
test esi esi +
jz loc_10919E4  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push 0  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
call ds:__imp_SHELL32_155  +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
push 1  +
push 0  +
push offset stru_100DD10  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_1091A51  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+28h]  +
mov esi eax +
test esi esi +
jz loc_1091A50  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
call ds:__imp_SHELL32_155  +
push 8Eh  +
push offset dword_1068860  +
call sub_1034B2D  +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 460h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_10B24CC 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
jz loc_1091AE0  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1091A90  +
test al al +
jnz loc_1091AE0  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1091AE0  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx edi +
cmp ecx eax +
jnz loc_1091AE0  +
cmp edx dword_10B24C4 +
jnz loc_1091AE0  +
push offset dword_1091CB8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_1091C6E  +
push dword ptr [esi+44h]  +
mov eax [ebx] +
push dword ptr [esi+58h]  +
mov ecx ebx +
call dword ptr [eax+4]  +
test eax eax +
jz loc_1091C6E  +
mov eax [ebx] +
lea ecx [ebp+var_424] +
push ecx  +
lea ecx [ebp+var_418] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1091C6E  +
push 104h  +
lea eax [ebp+pszPath] +
push eax  +
push 8000h  +
push [ebp+var_424]  +
push [ebp+var_418]  +
call sub_102711E  +
mov edi eax +
test edi edi +
jl loc_1091C5E  +
push 104h  +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call sub_10918F5  +
mov edi eax +
test edi edi +
jl loc_1091C5E  +
lea eax [ebp+var_41C] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
call ds:__imp_SHStrDupW  +
mov edi eax +
test edi edi +
jl loc_1091C5E  +
lea eax [ebp+var_420] +
push eax  +
push dword ptr [ebx+38h]  +
call ds:__imp_SHStrDupW  +
mov edi eax +
test edi edi +
jl loc_1091C48  +
xor eax eax +
push 0Ah  +
pop ecx  +
lea edi [ebp+var_45C] +
stos   +
mov eax [ebp+arg_4] +
mov [ebp+var_460] eax +
mov eax [ebp+var_420] +
mov [ebp+var_458] eax +
mov eax [ebp+var_41C] +
mov [ebp+var_45C] eax +
mov eax [ebx+20h] +
shl eax 1Fh +
xor edi edi +
push edi  +
sar eax 1Fh +
push ebx  +
mov ecx esi +
mov [ebp+var_450] eax +
call sub_1012646  +
mov [ebp+pv] eax +
mov eax 4000h +
mov word ptr [ebp+var_434] ax +
push edi  +
lea eax [ebp+var_460] +
mov [ebp+var_42C] eax +
lea eax [ebp+var_434] +
push eax  +
push edi  +
push 151h  +
push offset dword_1036348  +
push offset dword_10128F0  +
push dword ptr [esi+28h]  +
call ds:SHLWAPI_484  +
push ebx  +
mov ecx esi +
mov edi eax +
call sub_108FB24  +
test edi edi +
jge loc_1091C5E  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
push [ebp+var_41C]  +
mov ebx ds:__imp_CoTaskMemFree +
call ebx  +
push [ebp+var_420]  +
call ebx  +
mov eax [ebp+var_418] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jge loc_1091CA5  +
mov eax 4000h +
mov word ptr [ebp+var_434] ax +
xor eax eax +
push eax  +
lea ecx [ebp+var_434] +
push ecx  +
push eax  +
push 151h  +
push offset dword_1036348  +
push offset dword_10128F0  +
push dword ptr [esi+28h]  +
mov [ebp+var_42C] eax +
call ds:SHLWAPI_484  +
mov edi eax +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+10h] +
and dword ptr [edi] 0 +
push 10h  +
mov dword ptr [ebp+10h] 80004005h +
call ds:GetKeyState  +
test ax ax +
jl loc_1091D4F  +
push ebx  +
mov ebx [ebp+0Ch] +
mov eax [ebx] +
lea ecx [ebp+0Ch] +
push ecx  +
push offset dword_104FEF0  +
push ebx  +
call dword ptr [eax]  +
test eax eax +
jl loc_1091D1A  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push 200h  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
push edi  +
mov esi offset dword_1011ED0 +
push esi  +
push offset a000214010000_0  +
push ebx  +
call sub_104FCA9  +
mov [ebp+10h] eax +
test eax eax +
jl loc_1091D4D  +
mov ebx [edi] +
push 1  +
push edi  +
push esi  +
push ebx  +
call sub_107E1D1  +
mov [ebp+10h] eax +
test eax eax +
jl loc_1091D4D  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop esi  +
pop ebx  +
mov eax [ebp+10h] +
pop edi  +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
push esi  +
mov esi ecx +
inc eax  +
cmp dword ptr [esi] 0 +
jz loc_1091E6B  +
push 0  +
push offset loc_1091795  +
call sub_100831C  +
push dword ptr [esi]  +
call ds:off_1008340  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+4] 0FFFFFFFEh +
jnz loc_1091E84  +
mov eax 80004005h +
jmp loc_1091E8F  +
push [ebp+arg_0]  +
push dword ptr [ecx+38h]  +
call sub_100EBA2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1050798  +
test byte ptr [ebp+8] 1 +
jz loc_1091EB2  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax 2021h +
retn 0Ch  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_10362BD  +
***
sub dword ptr [esp+4] 1D4h +
jmp loc_100F065  +
***
sub dword ptr [esp+4] 14h +
jmp loc_10362BD  +
***
sub dword ptr [esp+4] 1D4h +
jmp loc_100F1A5  +
***
sub dword ptr [esp+4] 4 +
jmp loc_100F1A5  +
***
sub dword ptr [esp+4] 1D4h +
jmp loc_10362BD  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10362BD  +
***
sub dword ptr [esp+4] 24h +
jmp loc_10362BD  +
***
sub dword ptr [esp+4] 14h +
jmp loc_100F065  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_10910D0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_10913F8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_109147B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_10915A2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_10915D3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_1091634  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push edi  +
mov edi 80070057h +
jz loc_109202B  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_103EC58  +
mov esi eax +
test esi esi +
jz loc_109202A  +
mov eax [esi+20h] +
push [ebp+arg_10]  +
shl eax 1Fh +
sar eax 1Fh +
neg eax  +
sbb eax eax +
add eax 141h +
push eax  +
push dword_10B23D0  +
call sub_104E68E  +
mov ecx esi +
mov edi eax +
call sub_100F319  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
add ecx 1DCh +
pop ebp  +
jmp loc_10916FD  +
***
mov eax [ecx+30h] +
mov eax [eax+38h] +
and eax 800h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov ecx [ecx+30h] +
push ebx  +
push esi  +
push edi  +
push 4  +
lea edx [ecx+4] +
pop ecx  +
xor ebx ebx +
mov edi offset dword_100D864 +
mov esi edx +
cmps   +
pop edi  +
pop esi  +
mov eax 80004005h +
pop ebx  +
jz loc_10920B0  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push 0  +
push 8000h  +
push edx  +
call SHGetFolderPathEx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
xor ebx ebx +
lea esi [edi+1D4h] +
mov [edi+158h] ebx +
cmp [esi] ebx +
jbe loc_10920E9  +
push ebx  +
mov ecx edi +
call sub_101711D  +
inc ebx  +
cmp ebx [esi] +
jb loc_10920DC  +
and dword ptr [esi] 0 +
push 0  +
push 8  +
push 40Bh  +
push dword ptr [edi+44h]  +
call ds:PostMessageW  +
pop edi  +
pop esi  +
pop ebx  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
movzx eax word ptr [edx+38h] +
test ax ax +
jnz loc_1092123  +
push [ebp+wParam]  +
push edx  +
call sub_108F4BF  +
pop ebp  +
retn 8  +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+0DCh]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+28h] +
xor ebx ebx +
push edi  +
cmp eax ebx +
jnz loc_1092169  +
mov eax [esi+24h] +
cmp eax ebx +
jnz loc_1092169  +
mov eax [esi+2Ch] +
mov [ebp+arg_0] eax +
mov [ebp+var_10] ebx +
cmp eax ebx +
jz loc_109218B  +
lea eax [ebp+var_10] +
push eax  +
push offset dword_100671C  +
push ebx  +
push [ebp+arg_0]  +
push ebx  +
call ds:__imp_SHBindToObject  +
mov edi eax +
jmp loc_1092190  +
mov edi 80004005h +
cmp edi ebx +
jl loc_1092298  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104D618  +
push 1  +
push ebx  +
push offset stru_1014024  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
cmp edi ebx +
jl loc_109228F  +
mov eax [esi+30h] +
mov [ebp+var_C] ebx +
mov eax [eax+3Ch] +
cmp eax ebx +
jz loc_10921D0  +
lea ecx [ebp+var_C] +
push ecx  +
call eax  +
mov edi eax +
jmp loc_10921D2  +
xor edi edi +
cmp edi ebx +
jl loc_1092286  +
mov eax [esi+30h] +
mov edi [eax+44h] +
push ebx  +
push offset aStart_enabledr  +
push offset aAdvanced  +
push 40000020h  +
push 80000001h  +
or edi 10000004h +
call sub_1015454  +
test eax eax +
jz loc_1092207  +
or edi 3 +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push ebx  +
push ebx  +
push [ebp+var_C]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [esi+30h] +
mov [ebp+hKey] ebx +
mov eax [eax+40h] +
cmp eax ebx +
jz loc_109223D  +
push ebx  +
lea ecx [ebp+hKey] +
push ecx  +
push ebx  +
push 2001Fh  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push 80000001h  +
call ds:RegCreateKeyExW  +
mov eax [esi+30h] +
mov eax [eax+48h] +
mov ecx [ebp+ppv] +
mov edx [ecx] +
or eax 8 +
push eax  +
push [ebp+hKey]  +
push [ebp+arg_0]  +
push [ebp+var_10]  +
push ecx  +
call dword ptr [edx+14h]  +
mov edi eax +
cmp edi ebx +
jl loc_109226F  +
mov eax [ebp+ppv] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
jmp loc_109227D  +
cmp [ebp+hKey] ebx +
jz loc_109227D  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
push edi  +
xor edi edi +
cmp eax [esi+10h] +
mov [ebp+var_C] edi +
jge loc_1092366  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push edi  +
push offset stru_1026650  +
lea edx [ebp+arg_4] +
push edx  +
push 1  +
push edi  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_1092366  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_109235D  +
cmp [ebp+arg_0] edi +
jz loc_109235D  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push edi  +
push edi  +
push [ebp+arg_0]  +
mov [ebp+var_4] 20400000h +
call sub_10270A3  +
test eax eax +
jl loc_1092354  +
mov eax [ebp+var_4] +
and eax 20400000h +
cmp eax 20000000h +
jz loc_1092354  +
lea eax [ebp+var_10] +
push eax  +
push offset dword_1092370  +
push offset dword_1068F0C  +
push edi  +
push [ebp+arg_0]  +
call sub_107C854  +
test eax eax +
jl loc_109234A  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1092354  +
inc dword ptr [esi+0Ch]  +
mov [ebp+var_C] 1 +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_104D0EC  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1092385  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 6 +
jz loc_10923C2  +
xor eax eax +
inc eax  +
jmp loc_10923CB  +
mov eax [ebp+18h] +
and dword ptr [eax+8] 0FFFFFFF7h +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 6 +
jz loc_10923E4  +
xor eax eax +
inc eax  +
jmp loc_10923FB  +
mov ecx [ebp+18h] +
test byte ptr [ecx] 2 +
jz loc_10923F9  +
mov eax [ecx+8] +
test al 8 +
jz loc_10923F9  +
and eax 0FFFFFFF7h +
mov [ecx+8] eax +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 13h +
jz loc_1092433  +
cmp dword ptr [ebp+10h] 10000000h +
jz loc_109241D  +
xor eax eax +
inc eax  +
jmp loc_1092458  +
mov eax [ebp+0Ch] +
push dword ptr [eax+24h]  +
mov ecx [ebp+8] +
push dword ptr [eax+28h]  +
add ecx 0FFFFFFF8h +
call sub_10922A6  +
jmp loc_1092458  +
push esi  +
mov esi [ebp+8] +
and dword ptr [esi+4] 0 +
push 40000030h  +
call ds:__imp_SHELL32_100  +
cmp eax 1 +
mov [esi+8] eax +
jge loc_1092455  +
mov dword ptr [esi+8] 0Fh +
xor eax eax +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 14h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1092488  +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] offset off_10029E4 +
mov dword ptr [eax+8] offset off_10924AC +
jmp loc_109248A  +
xor eax eax +
lea ecx [eax+8] +
neg eax  +
sbb eax eax +
and eax ecx +
mov ecx [ebp+8] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 33h +
jz loc_10924D2  +
pop ebp  +
jmp loc_10923B2  +
***
mov eax [ebp+14h] +
mov dword ptr [eax] 4 +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002798 +
jz loc_1092501  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1092534  +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] offset off_10029E4 +
mov dword ptr [eax+8] offset off_1092558 +
jmp loc_1092536  +
xor eax eax +
lea ecx [eax+8] +
neg eax  +
sbb eax eax +
and eax ecx +
mov ecx [ebp+8] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1092594  +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] offset off_10029E4 +
mov dword ptr [eax+8] offset off_10925B8 +
jmp loc_1092596  +
xor eax eax +
lea ecx [eax+8] +
neg eax  +
sbb eax eax +
and eax ecx +
mov ecx [ebp+8] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
push 3  +
pop eax  +
mov word ptr [ebp+var_10] ax +
xor eax eax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
push 0  +
push 0  +
push 12Fh  +
push offset dword_10141A8  +
push offset dword_10128F0  +
push dword ptr [ecx+4]  +
call ds:SHLWAPI_484  +
pop edi  +
test eax eax +
jl locret_1092614  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
leave   +
retn 4  +
***
mov eax 80004001h +
retn 14h  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1036B9F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
lea eax [ebp-4] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call GdipCloneImage  +
push eax  +
mov ecx esi +
call sub_101BCC1  +
push 10h  +
call GdipAlloc  +
test eax eax +
jz loc_1092679  +
mov ecx [esi+8] +
mov edx [ebp-4] +
mov dword ptr [eax] offset off_101B714 +
mov [eax+4] edx +
mov [eax+8] ecx +
jmp loc_109267B  +
xor eax eax +
pop esi  +
leave   +
retn   +
***
push 100Ch  +
push dword ptr [ecx+30h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
push ebx  +
push esi  +
push 249h  +
push offset dword_10927B8  +
mov esi ecx +
mov [ebp+var_4] 80004005h +
call sub_1034B2D  +
push 38h  +
xor ebx ebx +
lea eax [ebp+var_58] +
push ebx  +
push eax  +
call memset  +
mov eax [ebp+arg_0] +
add esp 0Ch +
mov [ebp+var_58] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 104Bh  +
push dword ptr [esi+30h]  +
mov [ebp+lParam] 4 +
call ds:SendMessageW  +
test eax eax +
jz loc_10927A6  +
mov eax [ebp+var_3C] +
mov ecx eax +
sub ecx ebx +
push edi  +
jz loc_1092762  +
dec ecx  +
jz loc_1092749  +
dec ecx  +
jz loc_109273F  +
cmp eax 7 +
jnb loc_10927A5  +
mov edi [esi+eax*4+470h] +
cmp edi ebx +
jz loc_10927A5  +
push dword ptr [esi+1Ch]  +
mov ebx ds:__imp_IUnknown_SetSite +
push edi  +
call ebx  +
push dword ptr [esi+1Ch]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+20h]  +
push 0  +
push edi  +
mov [ebp+var_4] eax +
call ebx  +
xor ebx ebx +
jmp loc_109278F  +
push ebx  +
push ebx  +
push ebx  +
push 141h  +
jmp loc_1092779  +
push 476h  +
push offset dword_10927D8  +
call sub_1034B2D  +
push ebx  +
push ebx  +
push ebx  +
push 13Fh  +
jmp loc_1092779  +
push 475h  +
push offset dword_10927C8  +
call sub_1034B2D  +
push ebx  +
push ebx  +
push ebx  +
push 142h  +
push offset dword_10138E4  +
push offset dword_1036948  +
push dword ptr [esi+1Ch]  +
call ds:SHLWAPI_484  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] ebx +
jl loc_10927A5  +
lea eax [ebp+var_20] +
push eax  +
push 0CCh  +
push dword ptr [esi+2Ch]  +
call sub_103C26A  +
pop edi  +
xor eax eax +
cmp [ebp+var_4] ebx +
pop esi  +
setnl al  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+20h] +
and eax 0Fh +
push edi  +
mov edi ecx +
cmp eax 0Bh +
ja loc_109287A  +
jmp ds:off_10928EB[eax*4]  +
mov [ebp+var_4] 23h +
jmp loc_109289B  +
mov eax [esi+14h] +
mov [ebp+var_C] eax +
mov eax [esi+18h] +
mov [ebp+var_8] eax +
mov [ebp+var_4] 26h +
jmp loc_109289B  +
mov eax [esi+14h] +
mov [ebp+var_30] eax +
mov eax [esi+18h] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_30] +
push eax  +
push 0  +
push 1012h  +
jmp loc_10928AD  +
mov eax [esi+0Ch] +
mov eax [eax+8] +
cmp eax 26h +
jnz loc_1092883  +
call sub_1092683  +
mov ebx eax +
push 100h  +
push ebx  +
push 100Ch  +
push dword ptr [edi+30h]  +
call ds:SendMessageW  +
mov [esi+10h] eax +
cmp eax ebx +
jz loc_109287A  +
test eax eax +
jge loc_10928E6  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
cmp eax 28h +
jnz loc_109287A  +
call sub_1092683  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_10928C4  +
mov [ebp+var_4] 24h +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
mov [ebp+lParam] 40h +
push 1053h  +
push dword ptr [edi+30h]  +
call ds:SendMessageW  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [esi+10h] eax +
mov eax ecx +
jmp loc_109287C  +
push 200h  +
jmp loc_1092860  +
call sub_1092683  +
test eax eax +
jl loc_109287A  +
mov ecx [esi+20h] +
and ecx 400h +
push ecx  +
push eax  +
mov ecx edi +
call sub_109269B  +
xor eax eax +
inc eax  +
jmp loc_109287C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push 40000068h  +
mov esi ecx +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_109298F  +
push edi  +
mov edi [ebp+arg_C] +
cmp edi 0FFFFFFFFh +
jnz loc_109295D  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:GetWindowRect  +
movzx edi word ptr [ebp+Rect.top] +
movzx eax word ptr [ebp+Rect.left] +
shl edi 10h +
or edi eax +
and [ebp+var_4] 0 +
lea eax [ebp+var_10] +
push eax  +
push 0DAh  +
push dword ptr [esi+2Ch]  +
call sub_103C26A  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_109298E  +
mov ecx [eax] +
push 0  +
push edi  +
push dword ptr [esi+2Ch]  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ecx+54h] +
add edx [ecx+48h] +
mov eax [ebp+arg_0] +
add edx [ecx+44h] +
or dword ptr [eax+18h] 0FFFFFFFFh +
mov [eax+10h] edx +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+8] +
push ebx  +
mov ebx [ebp+1Ch] +
push esi  +
mov ecx [eax] +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+0Ch] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+38h]  +
test eax eax +
jl loc_10929F3  +
cmp word ptr [ebx] 3 +
jnz loc_10929F3  +
or dword ptr [ebx+8] 100004h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1036D53  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1036D53  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1036D53  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_10927ED  +
xor ebx ebx +
mov [ebp+arg_0] eax +
cmp eax ebx +
jz loc_1092AD0  +
test dword ptr [esi+20h] 900h +
jz loc_1092B24  +
mov ebx ds:SendMessageW +
push 3  +
pop eax  +
mov [ebp+var_3C] eax +
mov [ebp+var_40] eax +
lea eax [ebp+lParam] +
push eax  +
mov dword ptr [edi+46Ch] 1 +
push dword ptr [esi+10h]  +
push 102Bh  +
push dword ptr [edi+30h]  +
call ebx  +
call ds:GetFocus  +
cmp [edi+30h] eax +
jz loc_1092AB5  +
push 8005h  +
call ds:IsWinEventHookInstalled  +
test eax eax +
jz loc_1092AB5  +
mov eax [esi+10h] +
inc eax  +
push eax  +
push 0FFFFFFFCh  +
push dword ptr [edi+30h]  +
push 8005h  +
call ds:NotifyWinEvent  +
mov eax [esi+20h] +
and eax 0Fh +
cmp al 7 +
jz loc_1092B24  +
push 0  +
push dword ptr [esi+10h]  +
push 10B2h  +
push dword ptr [edi+30h]  +
call ebx  +
jmp loc_1092B24  +
or dword ptr [esi+20h] 4000h +
mov ecx edi +
call sub_1092683  +
cmp eax ebx +
jl loc_1092B1E  +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
push 100Eh  +
push dword ptr [edi+30h]  +
mov [ebp+var_10] ebx +
call ds:SendMessageW  +
test eax eax +
jz loc_1092B1E  +
mov ecx [ebp+var_10] +
mov eax [ebp+var_8] +
add eax ecx +
mov ecx [ebp+var_C] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+14h] eax +
mov eax [ebp+var_4] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+18h] eax +
jmp loc_1092B24  +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1052C83  +
mov dword ptr [esi] offset off_1092B60 +
mov dword ptr [esi+4] offset off_1052A54 +
mov dword ptr [esi+8] offset off_1034D4C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+14h] +
and dword ptr [edx] 0 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
xor ebx ebx +
mov edi offset loc_1092C14 +
cmps   +
pop edi  +
pop esi  +
mov eax 80004005h +
pop ebx  +
jnz loc_1092C0F  +
mov eax [ebp+8] +
mov eax [eax+34h] +
mov ecx [eax] +
push edx  +
push dword ptr [ebp+10h]  +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 10h  +
***
cmp edx ecx +
xchg eax ebp +
retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
cmp dword ptr [ecx+4Ch] 0 +
jz loc_1092C48  +
mov eax [ecx+4Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+7Ch]  +
mov eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
push ebx  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_104E773  +
test eax eax +
jl loc_1092C83  +
cmp word ptr [ebx] 3 +
jnz loc_1092C83  +
or dword ptr [ebx+8] 100004h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
push [ebp+arg_0]  +
lea eax [esi+2Ch] +
and dword ptr [eax] 0 +
push eax  +
mov dword ptr [esi] offset off_10039A8 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
call ds:__imp_IUnknown_Set  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [esi+30h] eax +
mov [esi+34h] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+pszPath] +
push eax  +
mov [esi+28h] eax +
call ds:PathRemoveBlanksW  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea eax [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
mov esi ecx +
call ds:__imp_SHStrDupW  +
mov edi eax +
test edi edi +
jl loc_1092D73  +
push ebx  +
push 38h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1092D34  +
push [ebp+pszPath]  +
mov ecx eax +
push dword ptr [esi+78h]  +
push dword ptr [esi+40h]  +
push dword ptr [esi+18h]  +
call sub_1092C8F  +
mov ebx eax +
jmp loc_1092D36  +
xor ebx ebx +
test ebx ebx +
jz loc_1092D69  +
mov eax [esi+50h] +
mov ecx [eax] +
push 0  +
push 0  +
mov edi offset dword_1092D7C +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi [esi+50h] +
mov eax [esi] +
push 10000100h  +
push 0  +
push edi  +
push ebx  +
push esi  +
call dword ptr [eax+0Ch]  +
mov edi eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
jmp loc_1092D72  +
push [ebp+pszPath]  +
call ds:__imp_CoTaskMemFree  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_107E5FC  +
test [ebp+arg_0] 1 +
jz loc_1092DAB  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push offset dword_1011ED0  +
push offset aRename_0  +
push dword ptr [ebp+0Ch]  +
call sub_107E109  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+arg_4] 0 +
push esi  +
push edi  +
mov esi ecx +
jbe loc_1092E11  +
mov ecx [ebp+arg_0] +
xor eax eax +
mov [ecx] ax +
mov eax [esi+4Ch] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
test edi edi +
jl loc_1092EC1  +
cmp [ebp+var_10] 1 +
jnz loc_1092EC1  +
mov eax [esi+4Ch] +
and [ebp+var_8] 0 +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1092ECC  +
push 1  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
test edi edi +
jl loc_1092EB4  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
lea edx [ebp+var_C] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
test edi edi +
jnz loc_1092EB4  +
mov esi [esi+4Ch] +
and [ebp+var_4] eax +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_100671C  +
push esi  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_1092E9E  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 8000h  +
push [ebp+var_C]  +
push [ebp+var_4]  +
call sub_102711E  +
mov edi eax +
push [ebp+var_C]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1092EB4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1092EC1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+80h] 1 +
jnz loc_1092F71  +
cmp dword ptr [esi+4Ch] 0 +
jz loc_1092F71  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1092DF7  +
test eax eax +
jl loc_1092F71  +
cmp word ptr [ebp+var_20C] 0 +
jz loc_1092F71  +
push edi  +
mov eax 4000h +
mov word ptr [ebp+var_21C] ax +
xor eax eax +
lea edi [ebp+var_21C+2] +
stos   +
stos   +
stos   +
stos   +
push 0  +
lea eax [ebp+var_20C] +
mov [ebp+var_214] eax +
lea eax [ebp+var_21C] +
push eax  +
push 0  +
push 13Bh  +
push offset dword_103BE90  +
push offset dword_1036948  +
push dword ptr [esi+18h]  +
call ds:SHLWAPI_484  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor eax eax +
mov esi ecx +
mov [ebx] ax +
push edi  +
mov edi 80004005h +
cmp [esi+4Ch] eax +
jz loc_1093035  +
mov eax [esi+4Ch] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
test edi edi +
jl loc_1093035  +
mov esi [esi+4Ch] +
mov eax [esi] +
lea ecx [ebp+arg_4] +
push ecx  +
push offset stru_104B1D0  +
push esi  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_109302C  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push offset dword_1093040  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+44h]  +
mov edi eax +
test edi edi +
jl loc_1093023  +
push offset byte_1002CD0  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantToStringWithDefault  +
push eax  +
push [ebp+arg_8]  +
push ebx  +
call sub_100665F  +
mov edi eax +
test edi edi +
jl loc_1093019  +
cmp word ptr [ebx] 0 +
jnz loc_1093019  +
mov edi 80004005h +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_155  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
xor esi esi +
cmp [ecx+4Ch] esi +
jz loc_10930E2  +
cmp [ecx+88h] esi +
jz loc_10930E2  +
cmp [ebp+arg_0] esi +
jz loc_10930E2  +
mov ecx [ecx+4Ch] +
mov eax [ecx] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_104B4B0  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
jl loc_10930E2  +
lea eax [ebp+pvar] +
push eax  +
push [ebp+arg_0]  +
call sub_107DAE5  +
test eax eax +
jl loc_10930D9  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+pvar] +
push eax  +
push 7  +
push offset loc_104CDB8  +
push esi  +
push [ebp+arg_0]  +
mov [ebp+var_4] esi +
call sub_10801F5  +
test eax eax +
jl loc_10930CF  +
mov eax [ebp+var_8] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+pvar] +
push eax  +
call ds:__imp_PropVariantClear  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
mov eax [ebp+arg_0] +
push 0  +
push 403h  +
push dword ptr [eax+8]  +
call ds:SendMessageW  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov [ebp+var_A4] eax +
mov [eax] ebx +
mov edi ecx +
mov ecx [ebp+arg_0] +
lea eax [ebp+pvar] +
push eax  +
push ecx  +
mov [ebp+var_A0] edi +
mov [ebp+var_88] ebx +
call sub_107DAE5  +
mov esi eax +
cmp esi ebx +
jl loc_10933AA  +
lea eax [ebp+var_88] +
push eax  +
push offset dword_104BB24  +
push dword ptr [edi+58h]  +
lea eax [ebp+pvar] +
push ebx  +
push ebx  +
push ebx  +
push offset byte_1002CD0  +
push ebx  +
push eax  +
push 7  +
push offset dword_104B1E0  +
call SHELL32_814  +
mov esi eax +
lea eax [ebp+pvar] +
push eax  +
call ds:__imp_PropVariantClear  +
cmp esi ebx +
jl loc_10933AA  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_104BAD8  +
push 1  +
push ebx  +
push offset stru_104BA88  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_109339E  +
mov eax [edi+48h] +
cmp eax ebx +
jnz loc_10931CF  +
mov eax [edi+44h] +
mov ecx [ebp+ppv] +
mov edx [ecx] +
lea esi [ebp+var_94] +
push esi  +
push offset dword_104BAC8  +
push eax  +
push ecx  +
call dword ptr [edx+10h]  +
test eax eax +
jnz loc_109338D  +
lea eax [ebp+var_90] +
push eax  +
push offset dword_104BB04  +
push offset aItem  +
call sub_104BB91  +
mov esi eax +
cmp esi ebx +
jl loc_109337F  +
lea eax [ebp+var_84] +
push eax  +
push offset stru_104BAE8  +
push 1  +
push ebx  +
push offset stru_104BA98  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_1093373  +
push 78h  +
lea eax [ebp+pv] +
push ebx  +
push eax  +
mov [ebp+var_80] ebx +
call memset  +
mov ecx [ebp+var_A0] +
mov esi offset dword_10933C0 +
lea edi [ebp+var_78] +
movs   +
movs   +
movs   +
add esp 0Ch +
movs   +
call sub_104BD53  +
push 5  +
mov [ebp+var_64] eax +
mov eax [ebp+var_94] +
pop ecx  +
mov esi offset dword_10933D0 +
lea edi [ebp+var_4C] +
movs   +
mov [ebp+var_1C] eax +
mov eax [ebp+var_88] +
mov [ebp+var_14] eax +
mov eax [ebp+var_90] +
mov [ebp+var_20] eax +
lea eax [ebp+pv] +
push eax  +
push ebx  +
push 2036h  +
push dword_10B23D0  +
mov [ebp+var_5C] 1 +
mov [ebp+var_58] 10h +
call sub_10161F5  +
mov eax [ebp+var_84] +
mov ecx [eax] +
lea edx [ebp+var_9C] +
push edx  +
push offset dword_104C864  +
lea edx [ebp+var_80] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_109335E  +
lea eax [ebp+var_8C] +
push eax  +
push offset dword_10933E4  +
call ds:PSCreateMemoryPropertyStore  +
mov esi eax +
cmp esi ebx +
jl loc_1093352  +
mov eax [ebp+var_A0] +
push 13h  +
add eax 0C0h +
inc dword ptr [eax]  +
mov eax [eax] +
pop ecx  +
lea edx [ebp+var_B4] +
push edx  +
mov [ebp+var_AC] eax +
mov eax [ebp+var_8C] +
push offset aSecondarycompa  +
mov word ptr [ebp+var_B4] cx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1093346  +
push [ebp+var_A4]  +
mov eax [ebp+var_84] +
push [ebp+var_8C]  +
mov ecx [eax] +
push [ebp+var_9C]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+var_8C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_9C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_84] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_90] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_94] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1093392  +
mov esi 80004005h +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_88] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 444h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
mov esi ecx +
jl loc_1093614  +
cmp [esi+4Ch] edi +
jz loc_1093614  +
push ebx  +
mov ebx offset dword_1093628 +
push ebx  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz loc_1093613  +
mov eax [esi+4Ch] +
mov ecx [eax] +
lea edx [ebp+var_42C] +
push edx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1093613  +
mov eax [esi+4Ch] +
mov ecx [eax] +
lea edx [ebp+var_428] +
push edx  +
push offset stru_104B1D0  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_1093607  +
mov eax [ebp+var_428] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push offset dword_104B3CC  +
push [ebp+var_42C]  +
push eax  +
call dword ptr [ecx+44h]  +
test eax eax +
jl loc_10935FB  +
push offset byte_1002CD0  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantToStringWithDefault  +
push eax  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_100665F  +
test eax eax +
jl loc_10935EE  +
mov eax [esi+4Ch] +
lea edx [ebp+var_420] +
push edx  +
push offset stru_101C28C  +
xor esi esi +
inc esi  +
push esi  +
mov [ebp+var_420] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_10935DE  +
mov eax [ebp+var_420] +
lea edx [ebp+var_424] +
push edx  +
push offset loc_1093638  +
push edi  +
mov [ebp+var_424] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_10935CE  +
mov eax [ebp+var_424] +
mov ecx [eax] +
lea edx [ebp+var_434] +
push edx  +
lea edx [ebp+var_430] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10935CE  +
push 20Ch  +
lea eax [ebp+var_418] +
push edi  +
push eax  +
mov [ebp+var_41C] edi +
call memset  +
add esp 0Ch +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_41C] +
push eax  +
call sub_1012258  +
mov eax [ebp+arg_0] +
mov [ebp+var_394] eax +
mov eax [ebp+var_430] +
push 4  +
mov [ebp+var_310] eax +
lea eax [ebp+var_41C] +
push eax  +
push 6F8h  +
push ebx  +
mov [ebp+var_398] esi +
mov [ebp+var_314] esi +
mov [ebp+var_28C] edi +
mov [ebp+var_290] esi +
call sub_1006870  +
mov eax [ebp+var_424] +
cmp eax edi +
jz loc_10935DE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_420] +
cmp eax edi +
jz loc_10935EE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_428] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_42C]  +
call ds:__imp_SHELL32_155  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 284h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 1Dh  +
pop ecx  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1093720  +
push 1  +
push 0  +
mov esi offset aSoftwareMic_42 +
lea edi [ebp+var_78] +
push offset stru_1093708  +
movs   +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_10936F4  +
push ebx  +
mov esi 104h +
push esi  +
lea eax [ebp+var_280] +
push eax  +
call sub_100665F  +
push offset a1  +
push esi  +
lea eax [ebp+var_280] +
push eax  +
call sub_1010E3B  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 1Ah  +
lea edx [ebp+var_78] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_10936E8  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_280] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
call sub_1092C29  +
test eax eax +
jl loc_10937FC  +
mov eax [esi+4Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset dword_104C908  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_10937FC  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+hWnd] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10937F3  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push 7Bh  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+18h] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
inc edi  +
cmp dword ptr [ebp+10h] 0FFFFFFFCh +
mov [ebx] esi +
jnz loc_1093877  +
lea eax [ebp+18h] +
push eax  +
push offset stru_1003410  +
push 0FFFFFFFCh  +
push dword ptr [ebp+0Ch]  +
mov [ebp+18h] esi +
call CreateStdAccessibleObject  +
mov edi eax +
cmp edi esi +
jl loc_1093877  +
push 1Ch  +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_1093852  +
push dword ptr [ebp+18h]  +
mov ecx eax +
call sub_1092B33  +
mov esi eax +
test esi esi +
jz loc_1093869  +
mov eax [esi] +
push ebx  +
push dword ptr [ebp+14h]  +
push esi  +
call dword ptr [eax]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
jmp loc_109386E  +
mov edi 8007000Eh +
mov eax [ebp+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+28h]  +
mov dword ptr [esi] offset off_10039A8 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
call ds:__imp_CoTaskMemFree  +
lea eax [esi+30h] +
push eax  +
call sub_1002BEE  +
mov ecx esi +
pop esi  +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1093885  +
test byte ptr [ebp+8] 1 +
jz loc_10938DE  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 34h +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 2Ch +
jmp loc_1002D39  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 2Ch +
jmp loc_1002A39  +
***
sub ecx 14h +
jmp loc_1050ACA  +
***
sub dword ptr [esp+4] 24h +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 28h +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 2Ch +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 10h +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 30h +
jmp loc_10115F5  +
***
sub dword ptr [esp+4] 14h +
jmp loc_10115F5  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+4] +
and dword ptr [esi+4] 0 +
push edi  +
mov edi ds:__imp_CoTaskMemFree +
push eax  +
call edi  +
mov eax [esi] +
and dword ptr [esi] 0 +
push eax  +
call edi  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_0] +
mov [esi+28h] eax +
mov eax [ebp+arg_4] +
mov dword ptr [esi] offset off_1093A0C +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov [esi+2Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+30h] eax +
mov eax [ebp+arg_C] +
mov [esi+34h] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+2Ch] +
and dword ptr [esi+2Ch] 0 +
push eax  +
call ds:__imp_CoTaskMemFree  +
mov ecx esi +
pop esi  +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pv] +
push eax  +
push [ebp+arg_4]  +
xor edi edi +
mov ebx ecx +
mov [ebp+pv] edi +
call ds:__imp_SHStrDupW  +
mov esi eax +
cmp esi edi +
jl loc_1093AE6  +
push 38h  +
call sub_1002B98  +
pop ecx  +
cmp eax edi +
jz loc_1093AB0  +
push dword ptr [ebx+80h]  +
mov ecx eax +
push [ebp+arg_8]  +
push [ebp+pv]  +
push [ebp+arg_0]  +
call sub_10939C2  +
mov edi eax +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_1093AE6  +
mov eax [ebx+50h] +
and [ebp+pv] 0 +
mov ecx [eax] +
push 7FFFFFFFh  +
push 0  +
push offset loc_1093B00  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [ebp+pv] +
and [ebp+pv] 0 +
push eax  +
call ds:__imp_CoTaskMemFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+4] +
and dword ptr [esi+4] 0 +
push eax  +
call ds:__imp_CoTaskMemFree  +
test [ebp+arg_0] 1 +
jz loc_1093B38  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_109399C  +
test [ebp+arg_0] 1 +
jz loc_1093B5E  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-9Ch] +
push eax  +
push offset dword_1093DC4  +
push 1  +
xor ebx ebx +
push ebx  +
push offset dword_1093DB4  +
call ds:__imp_CoCreateInstance  +
cmp eax ebx +
mov [ebp-98h] eax +
jl loc_1093D9C  +
mov eax [ebp-9Ch] +
mov ecx [eax] +
push 2Fh  +
push eax  +
call dword ptr [ecx+10h]  +
push 8  +
call sub_1002B98  +
pop ecx  +
cmp eax ebx +
jz loc_1093BD5  +
mov [eax] ebx +
mov [eax+4] ebx +
mov [ebp-94h] eax +
jmp loc_1093BDB  +
mov [ebp-94h] ebx +
cmp [ebp-94h] ebx +
jnz loc_1093BED  +
mov dword ptr [ebp-98h] 8007000Eh +
cmp [ebp-98h] ebx +
jl loc_1093D90  +
mov eax [esi+28h] +
push edi  +
cmp eax ebx +
jz loc_1093D42  +
cmp [eax] bx +
jz loc_1093D42  +
push eax  +
call ds:lstrlenW  +
mov ecx [esi+28h] +
add eax eax +
add eax ecx +
push eax  +
push ecx  +
call ds:CharPrevW  +
mov dword ptr [ebp-0A0h] 1 +
jmp loc_1093C47  +
movzx ecx word ptr [edi] +
cmp cx 2Fh +
jz loc_1093C63  +
cmp cx 5Ch +
jz loc_1093C50  +
push edi  +
push eax  +
call ds:CharPrevW  +
mov edi eax +
mov eax [esi+28h] +
cmp edi eax +
jnz loc_1093C30  +
movzx eax word ptr [edi] +
cmp ax 2Fh +
jz loc_1093C63  +
cmp ax 5Ch +
jnz loc_1093D31  +
lea ecx [ebp-90h] +
call sub_107EC95  +
mov eax [esi+28h] +
inc edi  +
inc edi  +
mov ebx edi +
sub ebx eax +
sar ebx 1 +
cmp ebx 2 +
jnz loc_1093C95  +
push ebx  +
push offset asc_1068ED4  +
push eax  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_1093C95  +
xor ebx ebx +
inc ebx  +
sub edi 4 +
push ebx  +
push dword ptr [esi+28h]  +
lea ecx [ebp-90h] +
call sub_107EEB3  +
test eax eax +
jl loc_1093D24  +
mov ecx esi +
call sub_107CB96  +
test eax eax +
jl loc_1093D24  +
mov eax [ebp-9Ch] +
push dword ptr [ebp-0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1093D15  +
mov ebx [ebp-94h] +
and dword ptr [ebp-0A0h] 0 +
push ebx  +
push edi  +
call ds:__imp_SHStrDupW  +
test eax eax +
jl loc_1093D24  +
lea eax [ebx+4] +
push eax  +
push dword ptr [ebp-0Ch]  +
call ds:__imp_SHStrDupW  +
test eax eax +
jl loc_1093D24  +
mov ecx esi +
call sub_107CB96  +
test eax eax +
jl loc_1093D24  +
push 0  +
push ebx  +
push 401h  +
push dword ptr [esi+34h]  +
call ds:PostMessageW  +
and dword ptr [ebp-94h] 0 +
jmp loc_1093D24  +
add edi 0FFFFFFFEh +
push edi  +
push dword ptr [esi+28h]  +
call ds:CharPrevW  +
mov edi eax +
lea ecx [ebp-90h] +
call sub_107ECB2  +
xor ebx ebx +
cmp [ebp-0A0h] ebx +
jz loc_1093D42  +
cmp edi [esi+28h] +
ja loc_1093C49  +
mov ecx esi +
call sub_107CB96  +
test eax eax +
jl loc_1093D7E  +
mov edi [ebp-94h] +
cmp edi ebx +
jz loc_1093D8F  +
lea eax [edi+4] +
push eax  +
push dword ptr [esi+28h]  +
call ds:__imp_SHStrDupW  +
test eax eax +
jl loc_1093D7E  +
push ebx  +
push edi  +
push 401h  +
push dword ptr [esi+34h]  +
call ds:PostMessageW  +
mov [ebp-94h] ebx +
mov ecx [ebp-94h] +
cmp ecx ebx +
jz loc_1093D8F  +
push 1  +
call sub_1093B44  +
pop edi  +
mov eax [ebp-9Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp-4] +
mov eax [ebp-98h] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1093A49  +
test [ebp+arg_0] 1 +
jz loc_1093DF3  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
xor esi esi +
push 0Ch  +
mov [ebx] esi +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_1093E1F  +
mov [eax+4] esi +
mov esi eax +
mov edi esi +
neg edi  +
sbb edi edi +
and edi 7FF8FFF2h +
add edi 8007000Eh +
js loc_1093E61  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax [ebp+arg_8] +
mov [esi+8] eax +
lea eax [esi+4] +
push eax  +
push [ebp+arg_4]  +
call sub_10082A8  +
mov edi eax +
test edi edi +
jl loc_1093E54  +
mov [ebx] esi +
xor esi esi +
test esi esi +
jz loc_1093E61  +
push 1  +
mov ecx esi +
call sub_1093B15  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+pv] +
lea eax [ebp+var_4] +
push eax  +
push offset dword_100DC8C  +
push dword ptr [edi+4]  +
xor esi esi +
mov [ebp+var_4] esi +
call ds:__imp_SHCreateItemFromIDList  +
test eax eax +
jl loc_1093F3A  +
mov eax [ebp+var_4] +
lea edx [ebp+pv] +
push edx  +
push 80058000h  +
mov [ebp+pv] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_1093EBD  +
push [ebp+pv]  +
call ds:PathRemoveFileSpecW  +
lea eax [ebp+var_C] +
push eax  +
push dword ptr [edi]  +
mov [ebp+var_C] esi +
push esi  +
call sub_107FD2A  +
test eax eax +
jl loc_1093F20  +
mov eax [ebp+var_4] +
lea edx [ebp+var_8] +
push edx  +
push offset dword_1011ED0  +
push offset dword_1068F1C  +
push [ebp+var_C]  +
mov [ebp+var_8] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1093F13  +
mov eax [edi+8] +
push esi  +
push [ebp+pv]  +
neg eax  +
sbb eax eax +
and eax offset aRunas +
push eax  +
push esi  +
push 4100000h  +
push [ebp+var_8]  +
push esi  +
push dword ptr [edi]  +
call sub_10AB31F  +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_1093F20  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_1093F2D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+pv] +
push eax  +
mov [ebp+pv] esi +
call ds:__imp_CoTaskMemFree  +
push 1  +
mov ecx edi +
call sub_1093B15  +
mov eax [ebp+var_4] +
pop edi  +
cmp eax esi +
pop esi  +
jz loc_1093F52  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+40h] ebx +
jz loc_1094005  +
push edi  +
mov edi [ebp+arg_0] +
cmp edi ebx +
jz loc_1093F94  +
mov eax [esi+88h] +
cmp eax ebx +
jz loc_1093F94  +
push dword ptr [edi+4]  +
push dword ptr [eax+4]  +
call ds:StrCmpIW  +
test eax eax +
jnz loc_1093F94  +
inc ebx  +
mov ecx [esi+88h] +
test ecx ecx +
jz loc_1093FA5  +
push 1  +
call sub_1093B44  +
push 0  +
push 1  +
mov ecx esi +
mov [esi+88h] edi +
call sub_103CE2F  +
mov eax [esi+88h] +
pop edi  +
test ebx ebx +
jz loc_1093FCC  +
push dword ptr [eax]  +
mov ecx esi +
call sub_1093059  +
jmp loc_1094005  +
lea ecx [ebp+arg_0] +
push ecx  +
add eax 4 +
push dword ptr [eax]  +
mov ecx esi +
call sub_1093112  +
test eax eax +
jl loc_1094005  +
mov eax [esi+40h] +
mov ecx [eax] +
push 0Ch  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi [esi+40h] +
mov eax [esi] +
push 8000000h  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+34h]  +
push [ebp+arg_0]  +
call ds:__imp_SHELL32_155  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1093DFF  +
mov esi eax +
test esi esi +
jl loc_109405B  +
push 0  +
push 2028h  +
push [ebp+arg_8]  +
push offset sub_1093E6F  +
call ds:__imp_SHCreateThread  +
test eax eax +
jnz loc_109405B  +
cmp [ebp+arg_8] eax +
jz loc_1094056  +
mov ecx [ebp+arg_8] +
push 1  +
call sub_1093B15  +
mov esi 80004005h +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+ppidl] +
push eax  +
push offset dword_10941EC  +
xor edi edi +
push edi  +
push offset dword_10941DC  +
push edi  +
mov [ebp+ppidl] edi +
call ds:SHELL32_102  +
cmp eax edi +
mov [ebp+var_218] eax +
jl loc_10941B5  +
push ebx  +
push [ebp+ppidl]  +
mov [ebp+pv] edi +
call sub_107F4B2  +
mov eax [ebp+ppidl] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+5Ch]  +
mov ecx [ebp+ppidl] +
mov edx [ecx] +
or eax 25h +
push eax  +
push dword ptr [esi+2Ch]  +
push ecx  +
call dword ptr [edx+0Ch]  +
mov ebx eax +
cmp ebx edi +
jl loc_109411E  +
mov eax [ebp+ppidl] +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_109411E  +
mov eax [ebp+ppidl] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
cmp eax edi +
jnz loc_1094117  +
cmp [ebp+pv] edi +
jnz loc_109415C  +
push eax  +
call ds:LocalFree  +
lea eax [ebp+var_20C] +
push eax  +
push edi  +
push edi  +
push 28h  +
push edi  +
call ds:SHGetFolderPathW  +
mov ebx eax +
cmp ebx edi +
jl loc_1094189  +
push 39h  +
pop eax  +
cmp [esi+30h] edi +
jz loc_1094141  +
push 79h  +
pop eax  +
push eax  +
push edi  +
push 1  +
lea eax [ebp+var_20C] +
push eax  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+28h]  +
call ds:SHELL32_265  +
mov ebx eax +
jmp loc_1094189  +
lea eax [ebp+var_21C] +
push eax  +
push dword ptr [esi+30h]  +
push [ebp+pv]  +
push dword ptr [esi+28h]  +
call sub_1093DFF  +
cmp eax edi +
mov [ebp+var_218] eax +
jl loc_10941A1  +
push [ebp+var_21C]  +
call sub_1093E6F  +
cmp dword ptr [esi+34h] 1 +
jnz loc_10941A1  +
mov esi [esi+2Ch] +
cmp [esi] di +
jz loc_10941A1  +
cmp ebx edi +
jl loc_10941A1  +
push esi  +
call sub_109364D  +
mov eax [ebp+pv] +
push eax  +
mov [ebp+pv] edi +
call ds:__imp_CoTaskMemFree  +
pop ebx  +
mov eax [ebp+ppidl] +
cmp eax edi +
pop edi  +
pop esi  +
jz loc_10941C7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_218] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 478h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 24Bh  +
push offset dword_10946C8  +
mov esi ecx +
mov ebx 80004005h +
call sub_1034B2D  +
cmp dword_10B24CC 0 +
jz loc_1094296  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1094245  +
test al al +
jnz loc_1094296  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx 80010000h +
or eax ecx +
jz loc_1094296  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx 80010000h +
cmp ecx eax +
jnz loc_1094296  +
cmp edx edi +
jnz loc_1094296  +
push offset dword_10946E8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [esi+4Ch] +
and [ebp+var_42C] 0 +
mov ecx [eax] +
lea edx [ebp+var_42C] +
push edx  +
push offset dword_1034A40  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_10946A1  +
mov eax [ebp+var_42C] +
lea edx [ebp+var_45C] +
push edx  +
mov [ebp+var_458] 500h +
mov [ebp+var_454] 0Dh +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
test ebx ebx +
jz loc_10946A1  +
cmp dword ptr [esi+94h] 0 +
jz loc_1094301  +
mov eax [esi+98h] +
mov [ebp+var_420] eax +
jmp loc_109432C  +
mov edi ds:GetKeyState +
push 10h  +
call edi  +
test ax ax +
jge loc_1094325  +
push 11h  +
call edi  +
test ax ax +
jge loc_1094325  +
mov [ebp+var_420] 1 +
jmp loc_109432C  +
and [ebp+var_420] 0 +
xor eax eax +
xor edi edi +
cmp dword ptr [esi+80h] 1 +
push 206h  +
setz al  +
push edi  +
mov [esi+94h] edi +
mov [esi+98h] edi +
mov [ebp+var_418] edi +
mov [ebp+var_424] eax +
xor eax eax +
mov word ptr [ebp+var_20C] ax +
lea eax [ebp+var_20C+2] +
push eax  +
call memset  +
add esp 0Ch +
cmp [ebp+arg_0] 0FFFFFFFFh +
jnz loc_109443E  +
push 478h  +
push offset dword_10946D8  +
call sub_1034B2D  +
lea eax [ebp+pvarg] +
push eax  +
push edi  +
push edi  +
push 134h  +
push offset dword_103BE90  +
push offset dword_1036948  +
push dword ptr [esi+18h]  +
call ds:SHLWAPI_484  +
mov ebx eax +
cmp ebx edi +
jl loc_1094615  +
push offset byte_1002CD0  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantToStringWithDefault  +
push eax  +
mov edi 104h +
push edi  +
lea eax [ebp+psz] +
push eax  +
call sub_100665F  +
mov ebx eax +
test ebx ebx +
jl loc_1094615  +
push offset pszTrimChars  +
lea eax [ebp+psz] +
push eax  +
call ds:StrTrimW  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+psz] +
push eax  +
call ds:SHLWAPI_460  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
push [ebp+var_420]  +
lea eax [ebp+var_20C] +
push eax  +
push 2  +
push dword ptr [esi+78h]  +
call ds:GetAncestor  +
push eax  +
mov ecx esi +
call sub_1093A69  +
mov ebx eax +
jmp loc_1094615  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_109341B  +
mov edi 104h +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1092F83  +
mov ebx eax +
test ebx ebx +
jl loc_1094474  +
mov [ebp+var_424] 1 +
jmp loc_10945AA  +
mov eax [esi+4Ch] +
and [ebp+var_41C] 0 +
mov ecx [eax] +
lea edx [ebp+var_41C] +
push edx  +
push offset dword_1068A00  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+74h]  +
mov ebx eax +
test ebx ebx +
jl loc_109459A  +
mov eax [ebp+var_41C] +
mov ecx [eax] +
lea edx [ebp+var_430] +
push edx  +
push 60400000h  +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
test ebx ebx +
jl loc_109458B  +
test [ebp+var_430] 40000000h +
jz loc_1094559  +
mov eax [ebp+var_41C] +
and [ebp+pv] 0 +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push 80058000h  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
test ebx ebx +
jl loc_1094543  +
push [ebp+pv]  +
lea eax [ebp+var_20C] +
push edi  +
push eax  +
call sub_100665F  +
mov ebx eax +
test ebx ebx +
jl loc_1094543  +
cmp [ebp+var_424] 0 +
jnz loc_1094543  +
mov eax [ebp+var_430] +
test eax 20000000h +
jz loc_1094543  +
shr eax 12h +
lea ecx [ebp+var_418] +
push ecx  +
not eax  +
push 1  +
and eax 10h +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_107F2B5  +
mov ebx eax +
mov eax [ebp+pv] +
and [ebp+pv] 0 +
push eax  +
call ds:__imp_CoTaskMemFree  +
jmp loc_1094560  +
and [ebp+var_424] 0 +
test ebx ebx +
jl loc_109458B  +
cmp [ebp+var_424] 0 +
jnz loc_109458B  +
cmp [ebp+var_418] 0 +
jnz loc_109458B  +
lea eax [ebp+var_418] +
push eax  +
push [ebp+var_41C]  +
call ds:__imp_SHGetIDListFromObject  +
mov ebx eax +
push 3  +
push 0  +
push [ebp+var_41C]  +
call sub_106E03D  +
mov eax [ebp+var_41C] +
test eax eax +
jz loc_10945AA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test ebx ebx +
jl loc_1094615  +
cmp [ebp+var_424] 0 +
push [ebp+var_420]  +
jz loc_10945D9  +
lea eax [ebp+var_20C] +
push eax  +
push 2  +
push dword ptr [esi+78h]  +
call ds:GetAncestor  +
push eax  +
mov ecx esi +
call sub_1093A69  +
jmp loc_10945F0  +
push [ebp+var_418]  +
push 2  +
push dword ptr [esi+78h]  +
call ds:GetAncestor  +
push eax  +
call sub_1094010  +
mov ebx eax +
test ebx ebx +
jl loc_1094615  +
cmp dword ptr [esi+80h] 1 +
jnz loc_1094615  +
cmp word ptr [ebp+var_20C] 0 +
jz loc_1094615  +
lea eax [ebp+var_20C] +
push eax  +
call sub_109364D  +
lea eax [ebp+var_478] +
push eax  +
push 0CCh  +
push dword ptr [esi+78h]  +
call sub_103C26A  +
cmp dword_10B24CC 0 +
jz loc_109468D  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109463F  +
test al al +
jnz loc_109468D  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80010000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_109468D  +
mov eax dword_10B24C0 +
mov esi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_109468D  +
cmp edx esi +
jnz loc_109468D  +
push offset dword_10946F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [ebp+var_418] +
and [ebp+var_418] 0 +
push eax  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+var_42C] +
test eax eax +
jz loc_10946B1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+24h] 0 +
push edi  +
mov edi 80004005h +
jz loc_1094747  +
mov eax [esi+80h] +
test eax eax +
jge loc_109473C  +
lea ecx [esi-28h] +
call sub_1092C29  +
test eax eax +
jl loc_1094747  +
push eax  +
lea ecx [esi-28h] +
call sub_1094201  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [esi+20h] +
mov ebx ecx +
xor eax eax +
and ebx 0Fh +
mov [ebp+var_4] eax +
cmp ebx 0Bh +
ja loc_10949E1  +
jmp ds:off_10949EB[ebx*4]  +
xor eax eax +
jmp loc_10949E4  +
mov ecx [edi+4Ch] +
cmp ecx eax +
jz loc_10949E1  +
mov eax [ecx] +
lea edx [ebp+var_C] +
push edx  +
push offset dword_10697C8  +
push ecx  +
call dword ptr [eax]  +
test eax eax +
jl loc_10949E1  +
mov eax [ebp+var_C] +
or [ebp+var_8] 0FFFFFFFFh +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10947DF  +
mov eax [ebp+var_8] +
xor ecx ecx +
test eax eax +
setnl cl  +
test byte ptr [esi+20h] 10h +
mov [ebp+var_4] ecx +
jz loc_1094833  +
mov [edi+0A8h] eax +
jmp loc_1094833  +
test byte ptr [esi+20h] 10h +
jz loc_10947F8  +
mov eax [esi+0Ch] +
cmp dword ptr [eax+4] 201h +
jnz loc_10947F8  +
mov [ebp+var_4] 1 +
mov edi [edi+4Ch] +
lea ecx [ebp+arg_0] +
push ecx  +
xor ebx ebx +
push offset dword_10697B8  +
mov [ebp+arg_0] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax]  +
test eax eax +
jl loc_109481F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push 4  +
push ebx  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov eax [ebp+arg_0] +
or dword ptr [esi+20h] 2000h +
cmp eax ebx +
jz loc_1094833  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov [esi+10h] eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10949E1  +
mov edi [edi+4Ch] +
cmp edi eax +
jz loc_10949E1  +
mov ecx [esi+0Ch] +
mov ecx [ecx+8] +
mov [ebp+var_C] 1 +
cmp ecx 26h +
jz loc_1094869  +
cmp ecx 28h +
jnz loc_10948B9  +
lea ecx [ebp+arg_0] +
push ecx  +
push offset dword_1034A40  +
mov [ebp+arg_0] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax]  +
test eax eax +
jl loc_10948A4  +
mov eax [esi+0Ch] +
mov edi [eax+0Ch] +
xor ecx ecx +
cmp ebx 5 +
setz cl  +
mov [eax+0Ch] ecx +
mov eax [ebp+arg_0] +
push dword ptr [esi+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov [ebp+var_C] eax +
mov eax [esi+0Ch] +
mov [eax+0Ch] edi +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10948B1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_C] 0 +
jz loc_10948BF  +
xor eax eax +
or dword ptr [esi+10h] 0FFFFFFFFh +
jmp loc_10948CC  +
and dword ptr [esi+20h] 0FFFFF6FFh +
and dword ptr [esi+10h] 0 +
xor eax eax +
xor ecx ecx +
cmp [esi+10h] eax +
setnl cl  +
mov [ebp+var_4] ecx +
jmp loc_10949E1  +
cmp [edi+90h] eax +
jnz loc_109491E  +
cmp [edi+80h] eax +
jnz loc_109491E  +
mov esi ds:GetKeyState +
xor ebx ebx +
inc ebx  +
push 10h  +
mov [edi+94h] ebx +
call esi  +
test ax ax +
jge loc_1094911  +
push 11h  +
call esi  +
test ax ax +
jge loc_1094911  +
mov eax ebx +
jmp loc_1094913  +
xor eax eax +
mov [edi+98h] eax +
jmp loc_10949E1  +
mov edx [edi+4Ch] +
cmp edx eax +
jz loc_10949E1  +
or [ebp+arg_0] 0FFFFFFFFh +
test ecx 400h +
jz loc_1094941  +
mov ecx edi +
call sub_1092C29  +
mov [ebp+arg_0] eax +
jmp loc_109496F  +
mov eax [edx] +
lea ecx [ebp+var_C] +
push ecx  +
push offset dword_10697C8  +
push edx  +
call dword ptr [eax]  +
test eax eax +
jl loc_109496F  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+arg_0] 0 +
jl loc_10949E1  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_1094201  +
test eax eax +
jge loc_10949DA  +
jmp loc_10949E1  +
mov [ebp+var_4] eax +
jmp loc_10949E1  +
push eax  +
push eax  +
push eax  +
push 136h  +
push offset dword_103BE90  +
push offset dword_10128F0  +
push dword ptr [edi+18h]  +
call ds:SHLWAPI_484  +
call ds:GetFocus  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_10949BB  +
mov [ecx] eax +
or dword ptr [esi+20h] 1000h +
and [ebp+var_4] 0 +
jmp loc_10949E1  +
mov esi [esi+0Ch] +
cmp esi eax +
jz loc_10949DA  +
cmp dword ptr [esi+4] 100h +
jnz loc_10949DA  +
cmp dword ptr [esi+8] 20h +
mov [ebp+var_4] eax +
jz loc_10949E1  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
call sub_1094754  +
xor ebx ebx +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_1094AB3  +
mov ecx [esi+20h] +
test ecx 900h +
jz loc_1094A8C  +
mov edx [esi+10h] +
cmp edx ebx +
jl loc_1094A8C  +
cmp [edi+4Ch] ebx +
jz loc_1094A8C  +
mov eax ecx +
and eax 0Fh +
cmp al 7 +
setz bl  +
dec ebx  +
and ebx 400h +
inc ebx  +
mov eax ebx +
test ecx 100h +
jz loc_1094A75  +
or eax 10h +
mov ecx [edi+4Ch] +
mov ebx [ecx] +
or eax 8 +
push eax  +
push edx  +
push ecx  +
call dword ptr [ebx+3Ch]  +
or dword ptr [esi+20h] 40000h +
xor ebx ebx +
cmp [esi+10h] ebx +
jl loc_1094B25  +
mov esi [esi+20h] +
and esi 0Fh +
cmp esi 5 +
jz loc_1094AAA  +
cmp esi 3 +
jz loc_1094AAA  +
cmp esi 4 +
jnz loc_1094B25  +
mov ecx edi +
call sub_1092EE1  +
jmp loc_1094B25  +
or dword ptr [esi+20h] 4000h +
mov ecx edi +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
call sub_1092C29  +
cmp eax ebx +
mov [ebp+var_4] eax +
jle loc_1094B25  +
cmp [edi+4Ch] ebx +
jz loc_1094B25  +
mov edi [edi+4Ch] +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push offset dword_10697C8  +
push edi  +
call dword ptr [eax]  +
test eax eax +
jl loc_1094B25  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_1094B1C  +
mov ecx [ebp+var_10] +
mov eax [ebp+var_18] +
add eax ecx +
mov ecx [ebp+var_C] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+14h] eax +
mov eax [ebp+var_14] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+18h] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 0 +
jnz loc_1094B4E  +
push 224h  +
push offset dword_1094B58  +
call sub_1034B2D  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
call sub_1034B2D  +
xor eax eax +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
mov ecx [eax] +
push edi  +
push 104h  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
test edi edi +
jl loc_1094C28  +
push 0  +
push [ebp+arg_4]  +
lea eax [ebp+var_20C] +
push eax  +
call sub_10ABAED  +
mov edi eax +
test edi edi +
jl loc_1094C28  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [esi+1Ch]  +
call ds:GetWindowRect  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push 0  +
push dword ptr [esi+1Ch]  +
call ds:MapWindowPoints  +
lea eax [ebp+var_228] +
push eax  +
push 0CCh  +
push dword ptr [esi+1Ch]  +
call ds:GetParent  +
push eax  +
call sub_103C26A  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push dword ptr [ebp+1Ch]  +
lea esi [ebp+0Ch] +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+8]  +
movs   +
movs   +
movs   +
movs   +
call sub_103C437  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push dword ptr [ebp+1Ch]  +
lea esi [ebp+0Ch] +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+8]  +
movs   +
movs   +
movs   +
movs   +
call sub_103C46F  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_14]  +
push 0FFFFFCB6h  +
call sub_108A7BE  +
pop ebp  +
retn 18h  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1013A10  +
***
sub dword ptr [esp+4] 18h +
jmp loc_1013A3B  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10139F5  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1013A3B  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1013A3B  +
***
sub dword ptr [esp+4] 28h +
jmp loc_1013A3B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+38h] +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
test esi esi +
jl loc_1094D39  +
push [ebp+arg_0]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
push esi  +
xor eax eax +
lea edx [ebp+arg_8] +
push edx  +
mov [ecx] ax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov esi 20000000h +
push esi  +
push eax  +
mov [ebp+arg_8] esi +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1094D77  +
test [ebp+arg_8] esi +
jnz loc_1094D77  +
xor eax eax +
inc eax  +
jmp loc_1094D79  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_10] +
mov ecx [ebp+arg_0] +
and dword ptr [eax] 0 +
call sub_1015433  +
neg eax  +
sbb eax eax +
and eax 4 +
add eax 80004001h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_10] +
push eax  +
push 0D4h  +
push dword ptr [ecx+44h]  +
call ds:GetParent  +
push eax  +
call sub_103C26A  +
leave   +
retn 4  +
***
cmp dword_10B24CC 0 +
jz loc_1094E42  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1094DF0  +
test al al +
jnz loc_1094E42  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 10000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1094E41  +
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1094E40  +
cmp edx edi +
jnz loc_1094E40  +
push offset dword_1094E58  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
push 215h  +
push offset dword_1094E68  +
call sub_1034B2D  +
xor eax eax +
retn 8  +
***
cmp dword_10B24CC 0 +
jz loc_1094EE5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1094E93  +
test al al +
jnz loc_1094EE5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 10000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1094EE4  +
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1094EE3  +
cmp edx edi +
jnz loc_1094EE3  +
push offset dword_1094EF0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
pop esi  +
xor eax eax +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push 1  +
call sub_1094DAB  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push 0  +
call sub_1094DAB  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
push 0Bh  +
pop eax  +
mov [ebp-10h] ax +
push 0  +
or eax 0FFFFFFFFh +
mov [ebp-8] ax +
lea eax [ebp-10h] +
push eax  +
push 0  +
push 138h  +
push offset dword_1036B1C  +
push offset dword_10128F0  +
push dword ptr [esi+14h]  +
call ds:SHLWAPI_484  +
mov eax [ebp+14h] +
mov [esi+60h] eax +
pop esi  +
test eax eax +
jz loc_1094F8D  +
test byte ptr [ebp+18h] 2Ch +
jnz loc_1094F8D  +
mov eax [ebp+1Ch] +
mov dword ptr [eax] 4 +
xor eax eax +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+60h] 0 +
jz loc_1094FB5  +
test byte ptr [ebp+14h] 2Ch +
jnz loc_1094FB5  +
mov eax [ebp+18h] +
mov dword ptr [eax] 4 +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
push 0Bh  +
pop eax  +
mov [ebp-10h] ax +
xor eax eax +
push eax  +
mov [ebp-8] ax +
lea eax [ebp-10h] +
push eax  +
push 0  +
push 138h  +
push offset dword_1036B1C  +
push offset dword_10128F0  +
push dword ptr [esi+14h]  +
call ds:SHLWAPI_484  +
and dword ptr [esi+60h] 0 +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
push 0Bh  +
pop eax  +
mov [ebp-10h] ax +
xor eax eax +
push eax  +
mov [ebp-8] ax +
lea eax [ebp-10h] +
push eax  +
push 0  +
push 138h  +
push offset dword_1036B1C  +
push offset dword_10128F0  +
push dword ptr [esi+14h]  +
call ds:SHLWAPI_484  +
and dword ptr [esi+60h] 0 +
xor eax eax +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push 1  +
push offset aStart_sortbyna  +
push offset aSoftwareMicr_0  +
xor ebx ebx +
call SHRegGetBoolValueFromHKCUHKLM  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 80004005h +
jge loc_10950EA  +
cmp [ebp+arg_0] ebx +
jnz loc_1095082  +
mov ebx esi +
jmp loc_10950EA  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+20h]  +
mov ebx eax +
test ebx ebx +
jl loc_10950EA  +
push edi  +
mov edi ds:__imp_SHGetIDListFromObject +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
call edi  +
mov ebx eax +
test ebx ebx +
jl loc_10950E0  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_4]  +
call edi  +
mov edi ds:__imp_SHELL32_155 +
mov ebx eax +
test ebx ebx +
jl loc_10950DB  +
push 1  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call ds:SHELL32_23  +
test eax eax +
jz loc_10950D6  +
mov ebx esi +
push [ebp+arg_0]  +
call edi  +
push [ebp+arg_4]  +
call edi  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+10h] +
and dword ptr [esi] 0 +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push 0FFFFFCB6h  +
call GetRoleTextW  +
test eax eax +
jz loc_109513C  +
lea eax [ebp-20Ch] +
push eax  +
call ds:SysAllocString  +
mov [esi] eax +
mov eax [esi] +
mov ecx [ebp-4] +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
xor ecx ebp +
add eax 8007000Eh +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi offset dword_1095210 +
push esi  +
push dword_10B247C  +
push dword_10B2478  +
call ds:EventEnabled  +
test al al +
jz loc_10951FB  +
mov eax [edi] +
lea ecx [ebp+pv] +
push ecx  +
push 80018001h  +
push edi  +
call dword ptr [eax+14h]  +
test eax eax +
jl loc_10951FB  +
and [ebp+var_88] 0 +
push 80h  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push [ebp+pv]  +
lea eax [ebp+var_88] +
push eax  +
call sub_1012258  +
push 1  +
lea eax [ebp+var_88] +
push eax  +
push 7DFh  +
push esi  +
call sub_1006870  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 10h  +
***
retn 10h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10155B9  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_10155B9  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_103690E  +
***
sub dword ptr [esp+4] 10h +
jmp loc_10155B9  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_10156D7  +
***
sub dword ptr [esp+4] 18h +
jmp loc_10155B9  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_10155B9  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10155B9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+14h] 0FFFFFFFFh +
jnz loc_10952D2  +
mov eax 80004005h +
jmp loc_10952E3  +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
add ecx 0FFFFFFF4h +
call sub_1095050  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
add ecx 0FFFFFFF4h +
call sub_1095050  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
push edi  +
mov esi ecx +
lea ecx [ebp+var_4] +
push ecx  +
push 20010000h  +
mov edi 20000000h +
push ebx  +
mov [ebp+var_4] edi +
call dword ptr [eax+18h]  +
mov [ebp+arg_0] eax +
xor eax eax +
cmp [ebp+arg_0] eax +
jl loc_10953DB  +
test [ebp+var_4] edi +
jnz loc_10953DB  +
push 2  +
push eax  +
push ebx  +
call sub_106E03D  +
push 7  +
pop ecx  +
xor eax eax +
lea edx [ebp+var_14] +
push edx  +
lea edi [ebp+var_20] +
stos   +
mov eax [esi+38h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+50h]  +
lea eax [ebp+pUnk] +
push eax  +
push offset stru_1069038  +
push ebx  +
call ds:SHCreateShellItemArrayFromShellItem  +
mov [ebp+arg_0] eax +
xor eax eax +
cmp [ebp+arg_0] eax +
jl loc_109540C  +
push eax  +
push eax  +
push eax  +
push eax  +
push [ebp+pUnk]  +
push eax  +
push 2  +
push dword ptr [esi+44h]  +
call ds:GetAncestor  +
push eax  +
call sub_10AB63C  +
push 41h  +
push offset dword_1095418  +
mov [ebp+arg_0] eax +
call sub_1034B2D  +
lea eax [ebp+var_20] +
push eax  +
push 0CCh  +
push dword ptr [esi+44h]  +
call ds:GetParent  +
push eax  +
call sub_103C26A  +
push ebx  +
mov ecx esi +
call sub_1095160  +
mov eax [ebp+pUnk] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_109540C  +
cmp [ebp+pUnk] eax +
jz loc_109540C  +
lea edx [ebp+pUnk] +
push edx  +
push 2  +
mov [ebp+pUnk] eax +
mov eax [esi+38h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jl loc_109540C  +
mov ecx [ebp+pUnk] +
mov esi [esi+38h] +
mov eax [esi] +
not ecx  +
and ecx 2 +
push ecx  +
push 2  +
push ebx  +
push esi  +
call dword ptr [eax+2Ch]  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push 1  +
push dword ptr [ebp+0Ch]  +
add ecx 0FFFFFFFCh +
call sub_109530B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+14h] +
xor eax eax +
inc eax  +
and ecx 3 +
cmp cl al +
jnz loc_1095470  +
test byte ptr [ebp+10h] 6Eh +
jz loc_1095470  +
mov ecx [ebp+8] +
push 0  +
push dword ptr [ebp+0Ch]  +
call sub_109530B  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 100h +
jz loc_1095490  +
cmp [ebp+arg_4] 104h +
jnz loc_10954C2  +
cmp [ebp+arg_8] 0Dh +
jz loc_109549C  +
cmp [ebp+arg_8] 20h +
jnz loc_10954C2  +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_4] +
push eax  +
call sub_1094D06  +
test eax eax +
jl loc_10954C2  +
mov ecx [ebp+arg_0] +
push 0  +
push [ebp+arg_4]  +
call sub_109530B  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
lea edx [ebp+var_18] +
push edx  +
push offset dword_104BAA8  +
mov esi ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jl loc_10955F7  +
mov eax [ebp+var_18] +
lea edx [ebp+var_C] +
push edx  +
push ebx  +
lea edx [ebp+var_4] +
push edx  +
mov [ebp+var_4] ebx +
mov [ebp+var_C] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_10955EE  +
mov eax [esi+30h] +
mov edi ds:__imp_SHBindToObject +
cmp eax ebx +
jz loc_1095539  +
cmp [ebp+var_4] ebx +
jz loc_1095539  +
push eax  +
push [ebp+var_4]  +
call ds:__imp_SHELL32_21  +
test eax eax +
jnz loc_1095568  +
lea eax [esi+34h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+34h] +
push eax  +
push offset dword_100671C  +
push ebx  +
push [ebp+var_4]  +
push ebx  +
call edi  +
test eax eax +
jl loc_1095568  +
push dword ptr [esi+30h]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
mov [esi+30h] eax +
mov [ebp+var_4] ebx +
lea eax [ebp+var_10] +
push eax  +
push offset nullsub_7  +
push ebx  +
push [ebp+var_C]  +
mov [ebp+var_8] ebx +
push dword ptr [esi+34h]  +
call edi  +
test eax eax +
jl loc_1095599  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10955A6  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call ds:__imp_SHGetIDListFromObject  +
mov esi [esi+3Ch] +
xor edi edi +
inc edi  +
cmp esi ebx +
jz loc_10955D9  +
mov eax [esi] +
lea ecx [ebp+var_14] +
push ecx  +
push offset dword_1095600  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_10955D9  +
mov eax [ebp+var_14] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_4]  +
mov esi ds:__imp_SHELL32_155 +
call esi  +
push [ebp+var_C]  +
call esi  +
push [ebp+var_8]  +
call esi  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
mov [ebp+var_8] 1 +
cmp [esi+74h] ebx +
jz loc_109577F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push offset dword_104BAA8  +
push eax  +
call dword ptr [ecx]  +
cmp eax ebx +
mov [ebp+var_8] eax +
jl loc_109577F  +
mov eax [ebp+var_18] +
lea edx [ebp+var_10] +
push edx  +
push ebx  +
lea edx [ebp+var_4] +
push edx  +
mov [ebp+var_4] ebx +
mov [ebp+var_10] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax ebx +
mov [ebp+var_8] eax +
jl loc_1095776  +
mov eax [esi+30h] +
push edi  +
mov edi ds:__imp_SHBindToObject +
cmp eax ebx +
jz loc_1095693  +
cmp [ebp+var_4] ebx +
jz loc_1095693  +
push eax  +
push [ebp+var_4]  +
call ds:__imp_SHELL32_21  +
test eax eax +
jnz loc_10956C2  +
lea eax [esi+34h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+34h] +
push eax  +
push offset dword_100671C  +
push ebx  +
push [ebp+var_4]  +
push ebx  +
call edi  +
test eax eax +
jl loc_10956C2  +
push dword ptr [esi+30h]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
mov [esi+30h] eax +
mov [ebp+var_4] ebx +
lea eax [ebp+var_14] +
push eax  +
push offset nullsub_7  +
push ebx  +
push [ebp+var_10]  +
mov [ebp+var_C] ebx +
push dword ptr [esi+34h]  +
call edi  +
test eax eax +
jl loc_10956F3  +
mov eax [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1095700  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
call ds:__imp_SHGetIDListFromObject  +
mov eax 4000h +
mov word ptr [ebp+var_38] ax +
xor eax eax +
lea edi [ebp+var_38+2] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+var_C] +
mov [ebp+var_30] eax +
xor eax eax +
mov word ptr [ebp+var_28] ax +
lea edi [ebp+var_28+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_38] +
push eax  +
push ebx  +
push 131h  +
push offset dword_1036B1C  +
push offset dword_10369C0  +
push dword ptr [esi+20h]  +
mov [ebp+var_8] 1 +
call ds:SHLWAPI_484  +
cmp word ptr [ebp+var_28] 0Bh +
pop edi  +
jnz loc_1095761  +
cmp [ebp+var_20] 0FFFFh +
jnz loc_1095761  +
mov [ebp+var_8] ebx +
push [ebp+var_4]  +
mov esi ds:__imp_SHELL32_155 +
call esi  +
push [ebp+var_10]  +
call esi  +
push [ebp+var_C]  +
call esi  +
mov eax [ebp+var_18] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+38h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push offset dword_10957D4  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl locret_10957CD  +
mov eax [ebp+var_4] +
mov ecx [eax] +
xor edx edx +
cmp [ebp+arg_4] dl +
setz dl  +
lea edx [edx+edx+8006h] +
push edx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+20h] +
mov esi ecx +
mov ecx eax +
xor ebx ebx +
and ecx 0Fh +
mov [ebp+var_4] ebx +
cmp ecx 0Bh +
ja loc_1095924  +
jmp ds:off_1095AE6[ecx*4]  +
mov eax [esi+38h] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_109585D  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push ebx  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_1095854  +
mov eax [esi+38h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push 1  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+48h]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
cmp [ebp+var_4] ebx +
setnz al  +
mov [ebp+arg_0] eax +
jmp loc_1095927  +
mov eax [esi+38h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push 7  +
push ebx  +
push eax  +
call dword ptr [ecx+48h]  +
jmp loc_109585D  +
mov eax [esi+38h] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [edi+14h] +
push edx  +
push eax  +
call dword ptr [ecx+4Ch]  +
jmp loc_109585D  +
or eax 1000h +
mov [edi+20h] eax +
xor eax eax +
jmp loc_1095ADF  +
mov eax [edi+0Ch] +
mov eax [eax+8] +
mov ecx esi +
cmp eax 26h +
jnz loc_10958C3  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1094D06  +
test eax eax +
jl loc_109585D  +
lea edx [ebp+var_4] +
push edx  +
push 3  +
jmp loc_10958DB  +
cmp eax 28h +
jnz loc_10958EF  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1094D06  +
test eax eax +
jl loc_109585D  +
lea edx [ebp+var_4] +
push edx  +
push 1  +
mov eax [esi+38h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov eax [ebp+arg_0] +
jmp loc_1095857  +
lea eax [ebp+var_4] +
push eax  +
call sub_1094D06  +
test eax eax +
jl loc_1095924  +
mov eax [ebp+var_4] +
lea edx [ebp+arg_0] +
push edx  +
mov ebx 20000000h +
push ebx  +
mov [ebp+arg_0] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1095922  +
test [ebp+arg_0] ebx +
jz loc_1095922  +
or dword ptr [edi+20h] 1000h +
xor ebx ebx +
mov [ebp+arg_0] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_10959E1  +
or dword ptr [edi+20h] 4000h +
cmp [ebp+var_4] ebx +
jz loc_10959DB  +
mov eax [esi+38h] +
mov ecx [eax] +
lea edx [ebp+Points] +
push edx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jl loc_10959DB  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push dword ptr [esi+44h]  +
push ebx  +
call ds:MapWindowPoints  +
mov ecx [ebp+Points.x] +
mov eax [ebp+var_10.x] +
add eax ecx +
mov ecx [ebp+var_10.y] +
cdq   +
sub eax edx +
sar eax 1 +
mov [edi+14h] eax +
mov eax [ebp+Points.y] +
add eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
mov [edi+18h] eax +
jmp loc_10959E1  +
or eax 1000h +
mov [edi+20h] eax +
mov [ebp+arg_0] ebx +
jmp loc_1095930  +
mov [ebp+arg_0] 1 +
jmp loc_1095ADC  +
mov eax [edi+14h] +
mov [ebp+var_10.x] eax +
mov eax [edi+18h] +
push 1  +
mov [ebp+var_10.y] eax +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [esi+44h]  +
push ebx  +
call ds:MapWindowPoints  +
push 3  +
push [ebp+var_10.y]  +
push [ebp+var_10.x]  +
push dword ptr [esi+44h]  +
call ds:ChildWindowFromPointEx  +
cmp eax ebx +
jz loc_1095992  +
mov ecx [edi+0Ch] +
mov [ecx] eax +
jmp loc_1095992  +
mov [edi+14h] ebx +
mov [edi+18h] ebx +
cmp [ebp+var_4] ebx +
jz loc_1095ADC  +
mov eax [edi+20h] +
test eax 100h +
jz loc_1095A67  +
lea eax [esi+68h] +
cmp [eax] ebx +
jz loc_1095A1F  +
push eax  +
call sub_1002BEE  +
call ds:IsCompositionActive  +
mov ecx offset aStartmenukeybo +
test eax eax +
jnz loc_1095A15  +
mov ecx offset aStartmenukey_0 +
mov eax [esi+38h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+44h]  +
mov eax [esi+38h] +
lea edx [ebp+var_8] +
push edx  +
push 1  +
push [ebp+var_4]  +
mov [ebp+var_8] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test byte ptr [ebp+var_8] 1 +
jnz loc_1095A4A  +
mov eax [esi+38h] +
mov ecx [eax] +
push 1  +
push 1  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+2Ch]  +
call ds:GetFocus  +
push eax  +
push dword ptr [esi+44h]  +
call ds:SHIsChildOrSelf  +
test eax eax +
jnz loc_1095AD3  +
and dword ptr [edi+20h] 0FFFFFEFFh +
jmp loc_1095AD3  +
test eax 800h +
jz loc_1095AD3  +
lea edi [esi+68h] +
cmp [edi] ebx +
jnz loc_1095A97  +
call ds:IsCompositionActive  +
mov ecx offset aStartmenuhover +
test eax eax +
jnz loc_1095A89  +
mov ecx offset aStartmenuhov_0 +
mov eax [esi+38h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+44h]  +
cmp [edi] ebx +
jz loc_1095AAF  +
mov eax [edi] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push 10000000h  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jz loc_1095AD3  +
mov eax [edi] +
cmp eax ebx +
jz loc_1095ABE  +
push ebx  +
push eax  +
mov ecx esi +
call sub_109578D  +
push [ebp+var_4]  +
push edi  +
call ds:__imp_IUnknown_Set  +
push 1  +
push dword ptr [edi]  +
mov ecx esi +
call sub_109578D  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
mov eax [ecx+54h] +
push [ebp+arg_4]  +
mov ecx [eax] +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+30h]  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+28h] +
test edi edi +
jz loc_1095BE3  +
push 30h  +
lea eax [ebp+lParam] +
push 0  +
push eax  +
call memset  +
mov eax [esi+20h] +
add esp 0Ch +
mov [ebp+var_28] eax +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+40h]  +
mov [ebp+lParam] 30h +
push 411h  +
push edi  +
mov [ebp+var_24] 1 +
call ds:SendMessageW  +
pop edi  +
pop esi  +
leave   +
retn   +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1036898  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1036898  +
***
sub ecx 10h +
jmp loc_1050C13  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
push [ebp+arg_4]  +
push 15B7h  +
push offset dword_104D1B0  +
call sub_104D5A4  +
mov ecx 1FAh +
xor eax eax +
cmp esi ds:dword_1095C6C[eax*8] +
jz loc_1095C4B  +
inc eax  +
cmp eax 5 +
jnb loc_1095C52  +
jmp loc_1095C3A  +
mov ecx ds:wParam[eax*8] +
push esi  +
push ecx  +
push 111h  +
push hWnd  +
call ds:PostMessageW  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+uIDEvent]  +
mov esi ecx +
push dword ptr [esi+20h]  +
call ds:KillTimer  +
cmp [ebp+uIDEvent] 1 +
jnz loc_1095CC0  +
cmp dword ptr [esi+40h] 0 +
jz loc_1095CC0  +
mov ecx esi +
call sub_1095B99  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+28h] 0 +
jz loc_1095CF9  +
call sub_104D18F  +
push 0  +
mov dword ptr [esi+40h] 1 +
call ds:GetDoubleClickTime  +
add eax eax +
push eax  +
push 1  +
push dword ptr [esi+20h]  +
call ds:SetTimer  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
or dword ptr [edx+20h] 8000h +
xor eax eax +
inc eax  +
push esi  +
mov esi [edx+20h] +
cmp [ebp+arg_4] eax +
jnz loc_1095D2F  +
or esi 80000h +
mov [edx+10h] eax +
mov [edx+20h] esi +
mov ecx [ecx+34h] +
mov [edx+24h] ecx +
jmp loc_1095D31  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 40000068h  +
mov esi ecx +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_1095D6B  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
push 1  +
push 0  +
push dword ptr [esi+34h]  +
mov [esi+0BCh] eax +
call ds:InvalidateRect  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push 40000068h  +
mov esi ecx +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz loc_1095E04  +
push eax  +
push offset aStart_enabledr  +
push offset aAdvanced  +
push 40000020h  +
push 80000001h  +
call sub_1015454  +
test eax eax +
jnz loc_1095E04  +
push edi  +
mov edi [ebp+arg_C] +
cmp edi 0FFFFFFFFh +
jnz loc_1095DD2  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+30h]  +
call ds:GetWindowRect  +
movzx edi word ptr [ebp+Rect.top] +
movzx eax word ptr [ebp+Rect.left] +
shl edi 10h +
or edi eax +
and [ebp+var_4] 0 +
lea eax [ebp+var_10] +
push eax  +
push 0DAh  +
push dword ptr [esi+30h]  +
call sub_103C26A  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1095E03  +
mov ecx [eax] +
push 0  +
push edi  +
push dword ptr [esi+30h]  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi ds:SystemParametersInfoW +
push 0  +
lea eax [ebp+pvParam] +
push eax  +
push 0  +
push 62h  +
mov esi ecx +
call edi  +
test eax eax +
jnz loc_1095E38  +
mov [ebp+pvParam] 4 +
push 0  +
lea eax [ebp+var_8] +
push eax  +
push 0  +
push 64h  +
call edi  +
test eax eax +
jnz loc_1095E4F  +
mov [ebp+var_8] 4 +
mov eax [ebp+arg_0] +
mov ecx [eax] +
sub ecx [ebp+pvParam] +
mov [esi+6Ch] ecx +
mov ecx [eax] +
add ecx [ebp+pvParam] +
mov [esi+74h] ecx +
mov ecx [eax+4] +
sub ecx [ebp+var_8] +
mov [esi+70h] ecx +
mov eax [eax+4] +
add eax [ebp+var_8] +
mov [esi+78h] eax +
call ds:GetTickCount  +
test eax eax +
jnz loc_1095E81  +
or eax 0FFFFFFFFh +
pop edi  +
mov [esi+68h] eax +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+14h] +
mov [ebp-8] eax +
mov eax [ebp+18h] +
push esi  +
mov esi [ebp+8] +
mov [ebp-4] eax +
mov eax [esi+50h] +
push edi  +
mov edi [ebp+1Ch] +
test eax eax +
jz loc_1095EC3  +
push dword ptr [edi]  +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi+30h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
lea eax [ebp-8] +
push eax  +
mov ecx esi +
call sub_1095E10  +
push 1  +
push 0  +
push dword ptr [esi+34h]  +
call ds:InvalidateRect  +
mov eax [esi] +
push edi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push esi  +
call dword ptr [eax+10h]  +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
mov [ebp-8] eax +
mov eax [ebp+14h] +
push esi  +
mov esi [ebp+8] +
mov [ebp-4] eax +
mov eax [esi+50h] +
push edi  +
mov edi [ebp+18h] +
test eax eax +
jz loc_1095F24  +
push dword ptr [edi]  +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
cmp dword ptr [esi+68h] 0 +
jz loc_1095F72  +
push dword ptr [ebp-4]  +
lea eax [esi+6Ch] +
push dword ptr [ebp-8]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_1095F67  +
call ds:GetTickCount  +
sub eax [esi+68h] +
cmp eax 3E8h +
jbe loc_1095F72  +
push dword ptr [esi+34h]  +
and dword ptr [esi+68h] 0 +
push 1  +
push 111h  +
push dword ptr [esi+30h]  +
call ds:PostMessageW  +
jmp loc_1095F72  +
lea eax [ebp-8] +
push eax  +
mov ecx esi +
call sub_1095E10  +
and dword ptr [edi] 0 +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+50h] +
test eax eax +
jz loc_1095F98  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
and dword ptr [esi+68h] 0 +
push 1  +
push 0  +
push dword ptr [esi+34h]  +
call ds:InvalidateRect  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+14h] +
mov [ebp-8] eax +
mov eax [ebp+18h] +
push esi  +
mov esi [ebp+8] +
mov [ebp-4] eax +
mov eax [esi+50h] +
test eax eax +
jz loc_1095FE5  +
mov edx [ebp+1Ch] +
push dword ptr [edx]  +
mov ecx [eax] +
lea edx [ebp-8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+18h]  +
and dword ptr [esi+68h] 0 +
push 1  +
push 0  +
push dword ptr [esi+34h]  +
call ds:InvalidateRect  +
xor eax eax +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+14h] 0 +
mov eax 80020003h +
jnz loc_1096027  +
push dword ptr [ebp+1Ch]  +
push 0  +
push 156h  +
push dword_10B23D0  +
call sub_103C0AE  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [esi-4] +
call sub_1014039  +
test eax eax +
jl loc_1096068  +
cmp [ebp+arg_0] 0 +
jz loc_1096058  +
movzx eax word ptr [esi+0C4h] +
jmp loc_109605F  +
movzx eax word ptr [esi+0C6h] +
push [ebp+arg_14]  +
push eax  +
call sub_108A825  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_14]  +
push 0FFFFFCD1h  +
call sub_108A7BE  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
sub esp 10h +
mov edi esp +
push [ebp+arg_0]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
movs   +
call sub_108A6C5  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_1036C93  +
***
sub dword ptr [esp+4] 24h +
jmp loc_1036C93  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1036C93  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+hObj] +
mov ecx [ebp+arg_4] +
push ebx  +
xor ebx ebx +
push edi  +
xor edi edi +
mov [ebp+var_C] ebx +
mov [ebp+nLengthNeeded] ebx +
mov [ebp+nLength] ebx +
mov [ecx] eax +
cmp eax ebx +
jz loc_1096159  +
cmp [eax] bx +
jnz loc_1096201  +
push esi  +
call ds:GetProcessWindowStation  +
mov [ebp+hObj] eax +
call ds:GetCurrentThreadId  +
push eax  +
call ds:GetThreadDesktop  +
mov esi ds:GetUserObjectInformationW +
mov [ebp+var_10] eax +
lea eax [ebp+nLengthNeeded] +
push eax  +
push ebx  +
push ebx  +
push 2  +
push [ebp+hObj]  +
call esi  +
lea eax [ebp+nLength] +
push eax  +
push ebx  +
push ebx  +
push 2  +
push [ebp+var_10]  +
call esi  +
mov eax [ebp+nLengthNeeded] +
mov ecx [ebp+nLength] +
add ecx eax +
push ecx  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
cmp edi ebx +
jnz loc_10961B3  +
mov [ebp+var_C] 8 +
jmp loc_1096200  +
lea eax [ebp+nLengthNeeded] +
push eax  +
push [ebp+nLengthNeeded]  +
push edi  +
push 2  +
push [ebp+hObj]  +
call esi  +
test eax eax +
jz loc_10961EE  +
mov eax [ebp+nLengthNeeded] +
push 5Ch  +
pop ecx  +
shr eax 1 +
mov [edi+eax*2-2] cx +
lea eax [ebp+nLength] +
push eax  +
mov eax [ebp+nLengthNeeded] +
push [ebp+nLength]  +
shr eax 1 +
lea eax [edi+eax*2] +
push eax  +
push 2  +
push [ebp+var_10]  +
call esi  +
test eax eax +
jnz loc_10961F9  +
call ds:__imp_GetLastError  +
mov [ebp+var_C] eax +
jmp loc_1096200  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor edi edi +
pop esi  +
push edi  +
call ds:LocalFree  +
mov eax [ebp+var_C] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
xor esi esi +
push 1  +
push esi  +
push esi  +
mov [ebp+var_4] esi +
call ds:OpenSCManagerW  +
mov [ebp+hSCObject] eax +
cmp eax esi +
jnz loc_1096243  +
call ds:__imp_GetLastError  +
mov ebx eax +
jmp loc_10962D7  +
push edi  +
push 14h  +
push offset ServiceName  +
push eax  +
call ds:OpenServiceW  +
mov edi eax +
cmp edi esi +
jnz loc_1096260  +
call ds:__imp_GetLastError  +
jmp loc_10962B9  +
push esi  +
push esi  +
push edi  +
call ds:StartServiceW  +
mov esi ds:__imp_GetLastError +
test eax eax +
jnz loc_109627F  +
call esi  +
mov ebx eax +
cmp ebx 420h +
jnz loc_10962C4  +
mov ebx 5B4h +
lea eax [ebp+ServiceStatus] +
push eax  +
push edi  +
call ds:QueryServiceStatus  +
test eax eax +
jz loc_10962B7  +
cmp [ebp+ServiceStatus.dwCurrentState] 4 +
jz loc_10962BD  +
cmp [ebp+ServiceStatus.dwCurrentState] 1 +
jz loc_10962C1  +
push 1F4h  +
call ds:Sleep  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
ja loc_10962C4  +
jmp loc_1096284  +
call esi  +
mov ebx eax +
jmp loc_10962C4  +
xor ebx ebx +
jmp loc_10962C4  +
mov ebx [ebp+ServiceStatus.dwWin32ExitCode] +
mov esi ds:CloseServiceHandle +
test edi edi +
jz loc_10962D1  +
push edi  +
call esi  +
push [ebp+hSCObject]  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
push 6  +
pop ecx  +
xor esi esi +
xor eax eax +
mov [ebp+SecurityQOS.Version] esi +
lea edi [ebp+SecurityQOS.Capabilities] +
stos   +
lea eax [ebp+String] +
push eax  +
push esi  +
push esi  +
push esi  +
push offset Protseq  +
push [ebp+ObjUuid]  +
mov [ebp+String] esi +
mov [ebp+Binding] esi +
xor edi edi +
call ds:RpcStringBindingComposeW  +
mov ebx eax +
cmp ebx esi +
jnz loc_10963CC  +
lea eax [ebp+Binding] +
push eax  +
push [ebp+String]  +
call ds:RpcBindingFromStringBindingW  +
mov ebx eax +
lea eax [ebp+String] +
push eax  +
call ds:RpcStringFreeW  +
cmp ebx esi +
jnz loc_10963CC  +
push 44h  +
pop eax  +
push eax  +
push 40h  +
mov [ebp+ObjUuid] eax +
call ds:LocalAlloc  +
mov edi eax +
cmp edi esi +
jnz loc_109636D  +
push 8  +
pop ebx  +
jmp loc_10963CC  +
lea eax [ebp+ObjUuid] +
push eax  +
push edi  +
push esi  +
push 16h  +
call ds:CreateWellKnownSid  +
test eax eax +
jnz loc_1096389  +
call ds:__imp_GetLastError  +
mov ebx eax +
jmp loc_10963CC  +
push 3  +
pop eax  +
mov [ebp+SecurityQOS.Version] eax +
mov [ebp+SecurityQOS.ImpersonationType] eax +
lea eax [ebp+SecurityQOS] +
push eax  +
push esi  +
xor ecx ecx +
cmp [ebp+arg_4] esi +
push esi  +
push 0Ah  +
setnz cl  +
push 6  +
push esi  +
push [ebp+Binding]  +
mov [ebp+SecurityQOS.Capabilities] 1 +
mov [ebp+var_C] edi +
mov [ebp+SecurityQOS.IdentityTracking] ecx +
call ds:RpcBindingSetAuthInfoExW  +
mov ebx eax +
cmp ebx esi +
jnz loc_10963CC  +
mov eax [ebp+Binding] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov [ebp+Binding] esi +
push edi  +
call ds:LocalFree  +
cmp [ebp+Binding] esi +
jz loc_10963E2  +
lea eax [ebp+Binding] +
push eax  +
call ds:RpcBindingFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
call sub_1032CCC  +
xor edi edi +
mov [ebp-20h] edi +
mov [ebp-24h] edi +
mov [ebp-1Ch] edi +
mov esi [ebp+8] +
mov [esi] edi +
mov [esi+4] edi +
cmp dword_10B3DAC edi +
jnz loc_109645D  +
lea eax [ebp-1Ch] +
push eax  +
push edi  +
push offset ObjUuid  +
call sub_10962F5  +
mov ebx eax +
cmp ebx edi +
jnz loc_10964B7  +
push edi  +
push dword ptr [ebp-1Ch]  +
push offset dword_10B3DAC  +
call ds:__imp_InterlockedCompareExchange  +
test eax eax +
jz loc_109645D  +
lea eax [ebp-1Ch] +
push eax  +
call ds:RpcBindingFree  +
mov [ebp-1Ch] edi +
lea eax [ebp-24h] +
push eax  +
push edi  +
call sub_109612D  +
mov ebx eax +
cmp ebx edi +
jnz loc_10964B7  +
mov [ebp-4] edi +
push esi  +
push dword ptr [ebp-24h]  +
push dword_10B3DAC  +
call sub_1096599  +
mov ebx eax +
mov [ebp-2Ch] ebx +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10964B3  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
push eax  +
call I_RpcExceptionFilter  +
retn   +
mov esp [ebp-18h] +
mov ebx [ebp-28h] +
mov [ebp-2Ch] ebx +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
mov esi [ebp+8] +
cmp ebx edi +
jz loc_1096514  +
mov eax [esi] +
cmp eax edi +
jz loc_10964C6  +
push eax  +
call ds:CloseHandle  +
mov [esi] edi +
mov eax [esi+4] +
cmp eax edi +
jz loc_10964D7  +
push eax  +
call ds:CloseHandle  +
mov [esi+4] edi +
cmp ebx 6BAh +
jz loc_10964F7  +
cmp ebx 6ACh +
jz loc_10964F7  +
cmp ebx 6B5h +
jz loc_10964F7  +
cmp ebx 6D9h +
jnz loc_1096514  +
cmp dword ptr [ebp-20h] 1 +
ja loc_109650F  +
inc dword ptr [ebp-20h]  +
push 258h  +
call sub_1096216  +
jmp loc_1096467  +
mov ebx 425h +
push dword ptr [ebp-24h]  +
call ds:LocalFree  +
mov eax ebx +
call sub_10324BC  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
push offset pFormat  +
push offset pStubDescriptor  +
call NdrClientCall2  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
mov eax [ebp+arg_0] +
mov [esi+28h] eax +
mov eax [ebp+arg_4] +
mov [esi+2Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+30h] eax +
mov dword ptr [esi] offset off_1003A50 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push dword ptr [eax+2Ch]  +
push dword ptr [eax+28h]  +
push 456h  +
push dword ptr [eax+30h]  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1003A50 +
mov dword ptr [ecx+4] offset off_1008CAC +
mov dword ptr [ecx+8] offset off_1008CBC +
mov dword ptr [ecx+0Ch] offset off_1008CCC +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
push edi  +
mov esi ecx +
call dword ptr [eax]  +
mov ebx [ebp+arg_4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
lea edx [esi+0Ch] +
lea eax [edi+8] +
push edx  +
mov [esi+4] ebx +
mov [esi] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov esi [esi+4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
call sub_1008E32  +
and dword ptr [esi+28h] 0 +
and dword ptr [esi+2Ch] 0 +
mov dword ptr [esi] offset off_1003A88 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
mov ebx ds:__imp_SHELL32_155 +
push esi  +
mov esi ecx +
mov eax [esi+28h] +
push edi  +
mov edi 0FFFF0000h +
mov dword ptr [esi] offset off_1003A88 +
mov dword ptr [esi+4] offset off_1008CAC +
mov dword ptr [esi+8] offset off_1008CBC +
mov dword ptr [esi+0Ch] offset off_1008CCC +
test eax edi +
jz loc_10969E2  +
push eax  +
call ebx  +
mov eax [esi+2Ch] +
test eax edi +
jz loc_10969EC  +
push eax  +
call ebx  +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_1008DEA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10968F6  +
test byte ptr [ebp+8] 1 +
jz loc_1096A15  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1096956  +
test [ebp+arg_0] 1 +
jz loc_1096A3B  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10969AB  +
test byte ptr [ebp+8] 1 +
jz loc_1096A61  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
test esi esi +
jz loc_1096ABF  +
push 4  +
pop ecx  +
mov edi offset dword_1068EDC +
xor eax eax +
cmps   +
jnz loc_1096ABF  +
mov edi [ebp+10h] +
test edi edi +
jbe loc_1096ABB  +
mov esi [ebp+14h] +
add esi 4 +
cmp dword ptr [esi-4] 7 +
jnz loc_1096AB5  +
mov eax [ebp+8] +
mov dword ptr [esi] 1 +
mov eax [eax+78h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+74h]  +
test eax eax +
jz loc_1096AB5  +
or dword ptr [esi] 2 +
add esi 8 +
dec edi  +
jnz loc_1096A96  +
xor eax eax +
jmp loc_1096AC4  +
mov eax 80040104h +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+84h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+80h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1096B32  +
xor eax eax +
cmp [ebp+10h] eax +
push esi  +
mov esi [ebp+8] +
setz al  +
push 1  +
mov [esi+30h] eax +
lea eax [esi-10h] +
neg eax  +
sbb eax eax +
and eax esi +
push eax  +
push dword ptr [esi+80h]  +
call ds:SHLWAPI_509  +
push dword ptr [esi-0Ch]  +
call ds:SetFocus  +
and dword ptr [esi+30h] 0 +
pop esi  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0A4h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor esi esi +
push esi  +
push esi  +
push 4F0h  +
push hWnd  +
dec edi  +
call ds:SendMessageW  +
mov [ebp+var_38] eax +
mov [ebp+var_34] edi +
mov [ebp+var_18] edi +
xor eax eax +
mov [ebp+var_40] 40h +
mov [ebp+var_3C] 4100000h +
mov [ebp+var_30] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_28] 0Ah +
mov [ebp+var_24] esi +
mov [ebp+var_20] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
lea edi [ebp+var_8] +
stos   +
stos   +
lea eax [ebp+arg_4] +
push eax  +
push esi  +
mov [ebp+arg_4] esi +
call ds:ActivateActCtx  +
lea eax [ebp+var_3C] +
push eax  +
call sub_1043EFD  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_40] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp [ebp+arg_4] esi +
jz loc_1096BEC  +
push [ebp+arg_4]  +
push esi  +
call ds:DeactivateActCtx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
push 0  +
push 0  +
push 40Ch  +
push hWnd  +
mov esi ecx +
call ds:SendMessageW  +
mov eax [esi+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hDlg] 0 +
jz loc_1096C6A  +
push esi  +
push offset aWindows_long  +
call BrandingFormatString  +
mov esi eax +
test esi esi +
jz loc_1096C53  +
push esi  +
push [ebp+hDlg]  +
call ds:SetWindowTextW  +
push esi  +
call ds:GlobalFree  +
push 1  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
pop esi  +
test eax eax +
jz loc_1096C6A  +
push eax  +
call ds:SetFocus  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
mov [ebp+var_10] eax +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_14] 14h +
mov [ebp+var_C] 0Fh +
mov [ebp+var_8] 0Ah +
call ds:FlashWindowEx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3C0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 3B8h  +
lea eax [ebp+Data.hWnd] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+Data] +
push eax  +
push 2  +
mov [ebp+Data.cbSize] 3BCh +
mov [ebp+Data.hWnd] esi +
mov [ebp+Data.uID] 1 +
call ds:Shell_NotifyIconW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [esi]  +
call ds:SetThreadDesktop  +
test eax eax +
jz loc_1096D62  +
push dword ptr [esi+8]  +
xor edi edi +
push edi  +
push dword ptr [esi+4]  +
call ds:EndTask  +
test eax eax +
jnz loc_1096D6A  +
call ds:__imp_GetLastError  +
mov edi eax +
push esi  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 0Ch  +
push 40h  +
call ds:LocalAlloc  +
mov edi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
mov esi eax +
test esi esi +
jz loc_1096DCF  +
call ds:GetCurrentThreadId  +
push eax  +
call ds:GetThreadDesktop  +
push 0  +
push 2000h  +
push esi  +
push offset loc_1096D39  +
mov [esi] eax +
mov [esi+4] ebx +
mov [esi+8] edi +
call ds:__imp_SHCreateThread  +
test eax eax +
jnz loc_1096DD9  +
push esi  +
call ds:LocalFree  +
push edi  +
push 0  +
push ebx  +
call ds:EndTask  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
mov eax [esi+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ds:SetFocus  +
mov esi [esi+4] +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 4Eh  +
push esi  +
mov [ebp+lParam] esi +
mov [ebp+var_4] 0FFFFFFF9h +
call ds:GetParent  +
push eax  +
call ds:SendMessageW  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov eax [esi+8] +
push edi  +
mov edi [eax] +
mov eax [esi+4] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+80h]  +
push eax  +
push 1  +
push [ebp+arg_0]  +
push dword ptr [esi+8]  +
call dword ptr [edi+20h]  +
test eax eax +
jl loc_1096E85  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1096E85  +
push dword ptr [esi+4]  +
push dword ptr [ebx]  +
push 445h  +
push eax  +
call ds:SendMessageW  +
test eax eax +
jl loc_1096E85  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push 1  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax-1Ch]  +
call ds:SetScrollInfo  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax-1Ch]  +
call ds:GetScrollInfo  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
push 6  +
xor esi esi +
cmp [ebp+0Ch] esi +
pop ecx  +
setz bl  +
mov dword ptr [ebp-1Ch] 1Ch +
lea edi [ebp-18h] +
stos   +
mov edi [ebp+8] +
mov eax [edi] +
lea ecx [ebp-1Ch] +
push ecx  +
push ebx  +
push edi  +
mov dword ptr [ebp-18h] 7 +
call dword ptr [eax+78h]  +
mov ecx [ebp-0Ch] +
xor eax eax +
inc eax  +
sub eax ecx +
add [ebp-10h] eax +
mov eax [ebp+10h] +
sub eax esi +
jz loc_1096F55  +
dec eax  +
jz loc_1096F4F  +
dec eax  +
jz loc_1096F48  +
dec eax  +
jz loc_1096F40  +
sub eax 3 +
jz loc_1096F5E  +
dec eax  +
jz loc_1096F63  +
dec eax  +
jnz loc_1096F5B  +
mov esi [ebp-8] +
jmp loc_1096F5E  +
mov eax [ebp-8] +
lea esi [eax+ecx] +
jmp loc_1096F5E  +
mov esi [ebp-8] +
sub esi ecx +
jmp loc_1096F5E  +
mov esi [ebp-8] +
inc esi  +
jmp loc_1096F5E  +
mov esi [ebp-8] +
dec esi  +
jmp loc_1096F5E  +
mov esi [ebp+14h] +
cmp esi [ebp-10h] +
jle loc_1096F66  +
mov esi [ebp-10h] +
test esi esi +
jge loc_1096F6C  +
xor esi esi +
push 1  +
push esi  +
push ebx  +
push dword ptr [edi-1Ch]  +
call ds:SetScrollPos  +
mov eax [edi+74h] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+58h]  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+28h] +
push edi  +
mov edi 0FFFF0000h +
xor ebx ebx +
test eax edi +
jz loc_1096FB0  +
push eax  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+arg_0] +
test eax edi +
jz loc_1096FD3  +
push eax  +
call ds:__imp_SHELL32_18  +
mov [esi+28h] eax +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
mov ebx eax +
jmp loc_1096FD6  +
mov [esi+28h] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+2Ch] +
push edi  +
mov edi 0FFFF0000h +
xor ebx ebx +
test eax edi +
jz loc_1097005  +
push eax  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+arg_0] +
test eax edi +
jz loc_1097028  +
push eax  +
call ds:__imp_SHELL32_18  +
mov [esi+2Ch] eax +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
mov ebx eax +
jmp loc_109702B  +
mov [esi+2Ch] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetFocus  +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax-0Ch]  +
call sub_100E838  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+18h] +
cmp ebx 193h +
push esi  +
push edi  +
jl loc_10971C5  +
cmp ebx 195h +
jle loc_10970BC  +
cmp ebx 0FFD3h +
jz loc_10970A9  +
cmp ebx 0FFD4h +
jz loc_10970A2  +
cmp ebx 0FFD5h +
jnz loc_10971C5  +
push 0F120h  +
jmp loc_10970AE  +
push 0F020h  +
jmp loc_10970AE  +
push 0F060h  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+78h]  +
jmp loc_1097237  +
mov ebx [ebp+0Ch] +
mov eax [ebx] +
lea ecx [ebp-4] +
push ecx  +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_10971C2  +
mov eax [ebp-4] +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_100664F  +
mov edi eax +
xor esi esi +
pop ecx  +
cmp edi esi +
jz loc_10971C2  +
mov eax [ebx] +
lea ecx [ebp-8] +
push ecx  +
push ebx  +
mov [ebp-8] esi +
call dword ptr [eax+18h]  +
test eax eax +
jl loc_1097175  +
xor ebx ebx +
cmp [ebp-4] ebx +
mov [ebp+0Ch] ebx +
jle loc_109716C  +
mov eax [ebp-8] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_109715D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
test eax eax +
jnz loc_109715D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov [edi+esi*4] eax +
call ds:IsIconic  +
test eax eax +
jz loc_1097153  +
push 9  +
push dword ptr [edi+esi*4]  +
call ds:ShowWindow  +
push dword ptr [edi+esi*4]  +
call ds:BringWindowToTop  +
inc esi  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc ebx  +
cmp ebx [ebp-4] +
jl loc_1097110  +
mov eax [ebp-8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword ptr [ebp+18h] 193h +
push edi  +
push esi  +
push 0  +
jnz loc_1097193  +
push 4  +
call ds:GetDesktopWindow  +
push eax  +
call ds:CascadeWindows  +
jmp loc_10971AD  +
xor eax eax +
cmp dword ptr [ebp+18h] 194h +
setnz al  +
push eax  +
call ds:GetDesktopWindow  +
push eax  +
call ds:TileWindows  +
test esi esi +
jle loc_10971BB  +
push dword ptr [edi+esi*4-4]  +
call ds:SetForegroundWindow  +
push edi  +
call sub_100C205  +
pop ecx  +
mov ebx [ebp+18h] +
lea eax [ebx-1] +
cmp eax 7FFEh +
ja loc_10971E6  +
cmp dword ptr [ebp+14h] 0 +
jz loc_10971E6  +
mov ecx [ebp+8] +
push ebx  +
push dword ptr [ebp+14h]  +
add ecx 0FFFFFFE0h +
call sub_1096B57  +
jmp loc_1097237  +
mov esi [ebp+8] +
mov edi [ebp+10h] +
cmp ebx 0F010h +
jz loc_10971FC  +
cmp ebx 0F000h +
jnz loc_1097215  +
mov eax [esi+74h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
push edi  +
call ds:SetForegroundWindow  +
push edi  +
call ds:SetFocus  +
cmp ebx 0F060h +
jnz loc_1097226  +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+44h]  +
jmp loc_1097235  +
push 0  +
push ebx  +
push 112h  +
push edi  +
call ds:PostMessageW  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+0Ch] +
mov eax [edi] +
push edi  +
call dword ptr [eax+6Ch]  +
test al 1 +
jnz loc_109727B  +
push esi  +
mov esi [ebp+8] +
push edi  +
add esi 88h +
push dword ptr [esi]  +
call ds:off_100407C  +
push eax  +
push dword ptr [esi]  +
call ds:off_10065B4  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop esi  +
jmp loc_1097285  +
mov eax [edi] +
push 0  +
push 2  +
push edi  +
call dword ptr [eax+70h]  +
xor eax eax +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
mov ecx [eax] +
add edx 0FFFFFFE0h +
push edx  +
push offset loc_1053805  +
push 1  +
push 0  +
push eax  +
call dword ptr [ecx+8Ch]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp-10h] edi +
mov [ebp-4] edi +
xor ebx ebx +
mov [ebp-0Ch] edi +
mov ecx [ebp+8] +
mov eax [ecx+88h] +
cmp eax edi +
jz loc_10972E6  +
mov eax [eax] +
jmp loc_10972E8  +
xor eax eax +
mov edx [ebp-0Ch] +
cmp edx eax +
jge loc_1097350  +
mov eax [ecx+88h] +
mov eax [eax+4] +
mov esi [eax+edx*4] +
lea ecx [ebp-8] +
push ecx  +
mov [ebp-8] edi +
mov eax [esi] +
push esi  +
call dword ptr [eax+74h]  +
test eax eax +
jnz loc_1097320  +
mov eax [ebp-8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
mov eax [ebp-8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword ptr [ebp-4] 0 +
jz loc_1097344  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_1097335  +
cmp edi [ebp+0Ch] +
jbe loc_1097349  +
cmp edi ebx +
jb loc_1097344  +
cmp dword ptr [ebp+10h] 1 +
jnz loc_1097349  +
cmp edi [ebp+0Ch] +
jnb loc_1097349  +
cmp edi ebx +
jbe loc_1097349  +
mov [ebp-4] esi +
mov ebx edi +
inc dword ptr [ebp-0Ch]  +
xor edi edi +
jmp loc_10972D5  +
***
mov eax [ebp+14h] +
push dword ptr [ebp-4]  +
mov [eax] edi +
push eax  +
call ds:__imp_IUnknown_Set  +
cmp [ebp-4] edi +
mov eax [ebp+18h] +
pop edi  +
pop esi  +
mov [eax] ebx +
pop ebx  +
jnz loc_1097373  +
mov dword ptr [ebp-10h] 1 +
mov eax [ebp-10h] +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
push [ebp+hWnd]  +
mov ebx ecx +
mov edi 80070057h +
mov [ebp+var_4] esi +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
call sub_1006BBB  +
cmp eax esi +
jz loc_1097482  +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+var_10] +
push ecx  +
push 4  +
push esi  +
push esi  +
push eax  +
mov ecx ebx +
call sub_1003701  +
mov edi eax +
cmp edi esi +
jl loc_1097482  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
push esi  +
push esi  +
push [ebp+hWnd]  +
mov ecx ebx +
call sub_1003701  +
mov edi eax +
cmp edi esi +
jl loc_1097482  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_C]  +
mov ecx ebx +
push [ebp+var_10]  +
push [ebp+arg_4]  +
call sub_1053F39  +
mov edi eax +
cmp edi esi +
jl loc_1097482  +
mov eax [ebp+var_10] +
cmp eax [ebp+var_8] +
jnz loc_109744C  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
cmp eax [ebp+var_C] +
jnz loc_109744C  +
mov eax [ebp+var_18] +
cmp eax esi +
jz loc_1097436  +
cmp eax [ebp+var_10] +
jnz loc_109744C  +
cmp [ebp+arg_4] esi +
jz loc_1097451  +
mov eax [ebp+var_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
cmp eax [ebp+var_C] +
jz loc_1097451  +
mov edi 80070057h +
cmp edi esi +
jl loc_1097482  +
mov eax [ebp+var_8] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push [ebp+var_14]  +
mov eax [ebp+var_8] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
push [ebp+var_4]  +
mov eax [ebx+94h] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_14] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_C] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_18] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+var_10] +
push eax  +
call sub_1002BEE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+80h] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_10974E0  +
push eax  +
call ds:SHELL32_4  +
mov ecx esi +
call sub_102AAA1  +
test eax eax +
jz loc_10974F7  +
push edi  +
push dword ptr [esi+4]  +
call ds:SHELL32_181  +
jmp loc_1097500  +
push dword ptr [esi+4]  +
call ds:DeregisterShellHookWindow  +
push 0Ah  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov eax [esi+50h] +
mov [esi+4] edi +
cmp eax edi +
jz loc_109751F  +
push eax  +
call ds:CloseThemeData  +
mov [esi+50h] edi +
lea edi [esi+74h] +
mov eax [edi] +
mov ebx offset dword_100D864 +
test eax eax +
jz loc_109753E  +
mov ecx [eax] +
push 1  +
push 0FFFFFFFFh  +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
push edi  +
call sub_1002BEE  +
mov eax [esi+78h] +
test eax eax +
jz loc_1097556  +
mov ecx [eax] +
push 1  +
push 0FFFFFFFFh  +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
push edi  +
call sub_1002BEE  +
push dword ptr [esi+4]  +
call ds:RevokeDragDrop  +
push 0  +
lea edi [esi+94h] +
push dword ptr [edi]  +
call ds:__imp_IUnknown_SetSite  +
push edi  +
call sub_1002BEE  +
lea ecx [esi+60h] +
call sub_102AAB6  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+0A8h] +
xor esi esi +
mov [ebp+var_C] esi +
cmp eax esi +
jz loc_10975A9  +
mov ebx [eax] +
jmp loc_10975AB  +
xor ebx ebx +
cmp ebx esi +
jle loc_109764C  +
xor ecx ecx +
cmp [ebp+var_C] ecx +
jnz loc_109764C  +
mov eax [edi+0A8h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
cmp [ebp+arg_0] ecx +
jz loc_10975D4  +
cmp eax [ebp+arg_0] +
jnz loc_1097643  +
lea edx [ebp+var_8] +
push edx  +
mov [ebp+var_8] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1097643  +
and [ebp+var_4] 0 +
jmp loc_1097629  +
cmp [ebp+var_C] 0 +
jnz loc_109763A  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:IsIconic  +
test eax eax +
jnz loc_1097619  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:IsZoomed  +
test eax eax +
jz loc_1097620  +
mov [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_10975EB  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc esi  +
cmp esi ebx +
jl loc_10975B3  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov ebx ecx +
mov eax [ebx+4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+80h]  +
xor edi edi +
mov [ebp+var_C] eax +
mov esi 80004005h +
cmp eax edi +
jz loc_10977CD  +
push edi  +
push hInstance  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push offset aStatic  +
push 80h  +
call sub_103510B  +
mov [ebp+hWnd] eax +
cmp eax edi +
jz loc_10977CD  +
lea eax [ebp+pv] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_100671C  +
push [ebp+var_C]  +
call ds:__imp_SHBindToParent  +
mov esi eax +
cmp esi edi +
jl loc_10977C4  +
mov eax [ebp+var_4] +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push 1  +
mov [ebp+var_C] offset __ImageBase +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
cmp esi edi +
jl loc_1097793  +
mov eax [ebx+4] +
mov ecx [eax] +
push 4  +
push eax  +
call dword ptr [ecx+60h]  +
push eax  +
push [ebp+pv]  +
push [ebp+var_4]  +
call sub_106E086  +
cmp dword_10B24CC edi +
jz loc_109776F  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109771F  +
test al al +
jnz loc_109776F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 2010000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_109776F  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_109776D  +
cmp edx edi +
jnz loc_109776D  +
push offset dword_10977D8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
xor edi edi +
mov eax [ebx+10h] +
neg eax  +
sbb eax eax +
and eax offset aRunas +
push eax  +
push 4000100h  +
push [ebp+pv]  +
push [ebp+var_4]  +
push edi  +
push [ebp+hWnd]  +
call ds:SHLWAPI_571  +
mov esi eax +
cmp esi 800704C7h +
jnz loc_10977BB  +
mov eax [ebp+var_4] +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+pv] +
push edx  +
push 1  +
mov [ebp+var_C] offset __ImageBase +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_10977BB  +
xor esi esi +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+hWnd]  +
call ds:DestroyWindow  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov edi ecx +
mov [ebp+var_4] 80004005h +
call SHCreateWorkerWindowW  +
mov [ebp+hWnd] eax +
cmp eax esi +
jz loc_1097946  +
lea eax [edi+8] +
push eax  +
push offset stru_100DD00  +
push 1  +
push esi  +
push offset stru_1029D80  +
mov [ebp+var_10] eax +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_109793D  +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+hWnd]  +
mov ecx edi +
call sub_1096E2E  +
mov ebx ds:SendMessageW +
test eax eax +
jz loc_10978A9  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset dword_100671C  +
push [ebp+var_14]  +
call ds:__imp_SHBindToParent  +
test eax eax +
jl loc_10978A9  +
push esi  +
push esi  +
push 4F0h  +
push hWnd  +
call ebx  +
mov ecx [edi+10h] +
neg ecx  +
sbb ecx ecx +
and ecx offset aRunas +
push ecx  +
push 4000500h  +
push [ebp+var_18]  +
push [ebp+var_C]  +
push esi  +
push eax  +
call ds:SHLWAPI_571  +
mov [ebp+var_4] eax +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
push esi  +
push 446h  +
push dword ptr [edi+0Ch]  +
call ebx  +
cmp [ebp+var_4] esi +
jge loc_1097931  +
cmp [ebp+var_4] 800704C7h +
jz loc_1097931  +
cmp [ebp+var_4] 80270000h +
jz loc_1097931  +
xor ebx ebx +
cmp [ebp+arg_0] esi +
setz bl  +
cmp [ebp+arg_0] esi +
jz loc_109790B  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
push 6  +
push 2B62h  +
push 2B61h  +
push 2B60h  +
push hInstance  +
push [ebp+hWnd]  +
call ds:off_109794C  +
test eax eax +
jl loc_109790B  +
xor ebx ebx +
cmp [ebp+arg_0] 6 +
setz bl  +
cmp ebx esi +
jz loc_1097931  +
mov ebx [ebp+var_10] +
mov eax [ebx] +
mov eax [eax] +
mov edi [edi+4] +
push esi  +
mov [ebp+var_18] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+80h]  +
push eax  +
push dword ptr [ebx]  +
mov eax [ebp+var_18] +
call dword ptr [eax+10h]  +
jmp loc_1097934  +
mov ebx [ebp+var_10] +
mov ebx [ebx] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop ebx  +
push [ebp+hWnd]  +
call ds:DestroyWindow  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
lea eax [ebp+dwProcessId] +
push eax  +
push [ebp+hWnd]  +
mov [ebp+var_4] ecx +
call ds:GetWindowThreadProcessId  +
xor edi edi +
push edi  +
push [ebp+dwProcessId]  +
push [ebp+arg_8]  +
call ds:SHLWAPI_510  +
mov esi eax +
cmp esi edi +
jz loc_1097AA2  +
mov ecx [ebp+var_4] +
lea eax [ebp+hWnd] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
push edi  +
push edi  +
push [ebp+hWnd]  +
call sub_1003701  +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_1097A9B  +
mov eax [ebp+arg_0] +
sub eax 44Ch +
push ebx  +
jz loc_1097A76  +
dec eax  +
jz loc_1097A23  +
dec eax  +
jnz loc_1097A88  +
push dword ptr [esi]  +
lea eax [esi+4] +
push eax  +
call ds:SHCreateMemStream  +
mov ebx eax +
cmp ebx edi +
jz loc_1097A88  +
push ebx  +
call ds:off_102CB64  +
mov [ebp+arg_8] eax +
cmp eax edi +
jz loc_1097A1B  +
mov eax [ebp+hWnd] +
push [ebp+arg_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0A0h]  +
test eax eax +
jl loc_1097A12  +
push [ebp+hWnd]  +
mov eax [ebp+var_4] +
mov eax [eax+94h] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+94h]  +
push [ebp+arg_8]  +
call ds:off_1035224  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
jmp loc_1097A88  +
mov ebx [esi] +
lea eax [esi+4] +
mov [ebp+arg_8] edi +
cmp ebx edi +
jbe loc_1097A88  +
mov edi eax +
cmp [ebp+var_C] 0 +
jl loc_1097A88  +
mov eax [ebp+hWnd] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+9Ch]  +
mov [ebp+var_C] eax +
test eax eax +
jl loc_1097A66  +
push dword ptr [edi+4]  +
mov eax [ebp+var_4] +
push [ebp+hWnd]  +
mov eax [eax+94h] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
inc [ebp+arg_8]  +
add edi 21Ch +
cmp [ebp+arg_8] ebx +
jnb loc_1097A88  +
jmp loc_1097A31  +
push dword ptr [esi]  +
mov eax [ebp+hWnd] +
mov ecx [eax] +
lea edx [esi+4] +
push edx  +
push eax  +
call dword ptr [ecx+98h]  +
mov eax [ebp+hWnd] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebx  +
push esi  +
call ds:SHUnlockShared  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor esi esi +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push 4  +
push esi  +
push esi  +
push [ebp+dwProcessId]  +
mov [ebp+var_4] esi +
call sub_1003701  +
test eax eax +
jl loc_1097B17  +
cmp [ebp+arg_4] esi +
jz loc_1097B0A  +
lea eax [ebp+dwProcessId] +
push eax  +
push [ebp+dwProcessId]  +
call ds:GetWindowThreadProcessId  +
push esi  +
push [ebp+dwProcessId]  +
push [ebp+arg_4]  +
call ds:SHLWAPI_510  +
mov edi eax +
cmp edi esi +
jz loc_1097B17  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0CCh]  +
push edi  +
call ds:SHUnlockShared  +
jmp loc_1097B17  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0CCh]  +
mov eax [ebp+var_4] +
pop edi  +
cmp eax esi +
pop esi  +
jz locret_1097B26  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
lea ecx [ebp+var_90] +
push ecx  +
lea ecx [ebp+var_8C] +
push ecx  +
push 4  +
push 0  +
push 0  +
push eax  +
mov ecx esi +
call sub_1003701  +
test eax eax +
jl loc_1097BFE  +
mov eax [esi+94h] +
mov ecx [eax] +
push edi  +
push [ebp+var_90]  +
push [ebp+var_8C]  +
push eax  +
call dword ptr [ecx+9Ch]  +
mov esi eax +
test esi esi +
jl loc_1097BE2  +
and [ebp+var_88] 0 +
push 80h  +
lea eax [ebp+var_84] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+var_8C] +
mov ecx [eax] +
add esp 0Ch +
push eax  +
call dword ptr [ecx+60h]  +
push eax  +
lea eax [ebp+var_88] +
push eax  +
call sub_1012258  +
push 1  +
lea eax [ebp+var_88] +
push eax  +
push 111Dh  +
push offset dword_1097C18  +
call sub_1006870  +
mov eax [ebp+var_90] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test esi esi +
jge loc_1097C05  +
push edi  +
call ds:DestroyIcon  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor esi esi +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push 4  +
push esi  +
push esi  +
push [ebp+dwProcessId]  +
mov [ebp+var_4] esi +
call sub_1003701  +
test eax eax +
jl loc_1097C97  +
cmp [ebp+arg_4] esi +
jz loc_1097C8A  +
lea eax [ebp+dwProcessId] +
push eax  +
push [ebp+dwProcessId]  +
call ds:GetWindowThreadProcessId  +
push esi  +
push [ebp+dwProcessId]  +
push [ebp+arg_4]  +
call ds:SHLWAPI_510  +
mov edi eax +
cmp edi esi +
jz loc_1097C97  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0BCh]  +
push edi  +
call ds:SHUnlockShared  +
jmp loc_1097C97  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0BCh]  +
mov eax [ebp+var_4] +
pop edi  +
cmp eax esi +
pop esi  +
jz locret_1097CA6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
sub esp 0Ch +
push ebx  +
push esi  +
xor ebx ebx +
mov [eax] ebx +
mov eax [ebp+18h] +
push edi  +
mov edi [ebp+1Ch] +
mov [eax] ebx +
push offset dword_1068F94  +
mov esi 80004005h +
mov [edi] ebx +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_1097E01  +
mov eax [ebp+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+80h]  +
mov [ebp-4] eax +
cmp eax ebx +
jz loc_1097DE7  +
mov eax [ebp+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 2 +
jnz loc_1097DE7  +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp-4]  +
call sub_107D591  +
mov esi eax +
cmp esi ebx +
jl loc_1097DE7  +
push dword ptr [ebp-4]  +
call ds:__imp_SHELL32_16  +
mov [ebp-0Ch] eax +
lea eax [ebp-4] +
push eax  +
push offset dword_10696E4  +
push ebx  +
lea eax [ebp-0Ch] +
push eax  +
push 1  +
push dword ptr [ebp-8]  +
call ds:SHCreateDataObject  +
mov esi eax +
cmp esi ebx +
jl loc_1097DDA  +
mov edi [ebp+8] +
mov eax [edi+4Ch] +
mov ecx [eax] +
push ebx  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 0Ah  +
push dword ptr [ebp-4]  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jnz loc_1097DC4  +
push dword ptr [ebp+18h]  +
push offset dword_100DC8C  +
push dword ptr [ebp+0Ch]  +
call sub_10719E5  +
mov esi eax +
cmp esi ebx +
jl loc_1097DCE  +
lea ecx [edi-20h] +
call sub_1052509  +
mov esi eax +
cmp esi ebx +
jl loc_1097DCE  +
xor eax eax +
inc eax  +
cmp [ebp+20h] ebx +
jz loc_1097DA0  +
push 3  +
pop eax  +
push ebx  +
push eax  +
mov eax [ebp+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
mov eax [ebp+1Ch] +
push ebx  +
push dword ptr [eax]  +
mov eax [ebp+18h] +
push dword ptr [edi+5Ch]  +
push dword ptr [eax]  +
call ds:SHELL32_894  +
mov esi eax +
jmp loc_1097DCE  +
cmp esi 1 +
jnz loc_1097DCE  +
mov esi 80004005h +
mov eax [ebp-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov edi [ebp+1Ch] +
push dword ptr [ebp-8]  +
call ds:__imp_SHELL32_155  +
cmp esi ebx +
jge loc_1097E01  +
push dword ptr [ebp+14h]  +
call sub_1002BEE  +
push dword ptr [ebp+18h]  +
call sub_1002BEE  +
push dword ptr [edi]  +
call ds:__imp_CoTaskMemFree  +
mov [edi] ebx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 30h  +
mov [ebp+var_4] ecx +
mov edi 80004005h +
call sub_1002B98  +
xor ebx ebx +
pop ecx  +
cmp eax ebx +
jz loc_1097E39  +
mov ecx eax +
call sub_1096973  +
mov esi eax +
jmp loc_1097E3B  +
xor esi esi +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1096F91  +
test eax eax +
jl loc_1097EFC  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_1096FE6  +
test eax eax +
jl loc_1097EFC  +
push esi  +
lea ecx [ebp+arg_0] +
mov [ebp+arg_0] ebx +
call sub_1008EBC  +
cmp [ebp+arg_0] ebx +
jz loc_1097EE0  +
mov esi [ebp+var_4] +
add esi 74h +
cmp [esi] ebx +
jnz loc_1097E94  +
push esi  +
push offset stru_10148A8  +
push 1  +
push ebx  +
push offset stru_10148B8  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
cmp edi ebx +
jl loc_1097EED  +
mov eax [esi] +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push offset dword_10148C8  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi ebx +
jl loc_1097EED  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push 2  +
push 2  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jl loc_1097EED  +
mov esi [esi] +
mov eax [esi] +
push 10000000h  +
push ebx  +
push offset dword_1097F18  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+0Ch]  +
mov edi eax +
jmp loc_1097EED  +
cmp esi ebx +
jz loc_1097F09  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+34h]  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_1097F09  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1097F09  +
cmp esi ebx +
jz loc_1097F09  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+34h]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
push 1  +
push 0  +
push offset stru_1029D80  +
mov esi ecx +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1097F6A  +
push dword ptr [esi+2Ch]  +
mov eax [ebp+ppv] +
push dword ptr [esi+28h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 3F1h +
push esi  +
mov esi 80004005h +
cmp word ptr [ebp+ppv] ax +
jnz loc_1097FFB  +
push 0  +
call ds:CoInitialize  +
mov esi eax +
test esi esi +
jl loc_1097FFB  +
and [ebp+ppv] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1051E64  +
push 1  +
push 0  +
push offset stru_1051E74  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_1097FE8  +
push edi  +
push offset aMshelpWindow_1  +
call ds:SysAllocString  +
mov edi eax +
test edi edi +
jz loc_1097FE7  +
push offset aWhy_three_apps  +
call sub_1050459  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
push edi  +
mov esi eax +
call ds:SysFreeString  +
pop edi  +
call ds:__imp_CoUninitialize  +
mov eax [ebp+ppv] +
test eax eax +
jz loc_1097FFB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
test esi esi +
setnl al  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
call sub_1097F2D  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+14h] +
push ebx  +
push esi  +
push edi  +
mov ebx 80004005h +
test eax eax +
jz loc_10980D9  +
and dword ptr [eax] 0 +
mov esi [ebp+10h] +
test esi esi +
jz loc_109811C  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+90h]  +
test eax eax +
jz loc_10980FD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
jmp loc_10980FF  +
mov eax edi +
push eax  +
push edi  +
call sub_109AA7B  +
mov edi eax +
test edi edi +
jz loc_10982C6  +
mov eax [ebp+18h] +
mov [eax] edi +
xor ebx ebx +
jmp loc_10982D5  +
mov esi [ebp+0Ch] +
mov eax [esi] +
lea ecx [ebp+10h] +
push ecx  +
push esi  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_10981B1  +
cmp dword ptr [ebp+10h] 1 +
jle loc_10981B1  +
push 2EE0h  +
call sub_104EC67  +
mov edi eax +
test edi edi +
jz loc_10982C6  +
mov ecx [ebp+8] +
lea eax [ebp+14h] +
push eax  +
add ecx 0FFFFFFE0h +
push esi  +
mov [ebp+8] ecx +
call sub_1040269  +
mov esi ds:EnableMenuItem +
mov ebx 0FFD5h +
test eax eax +
jz loc_1098173  +
cmp dword ptr [ebp+14h] 0 +
jz loc_1098193  +
push 3  +
push 0FFD4h  +
push edi  +
call esi  +
cmp dword ptr [ebp+14h] 0 +
jz loc_1098193  +
push 3  +
push ebx  +
push edi  +
call esi  +
push 3  +
push 0FFD3h  +
push edi  +
call esi  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_1097589  +
test eax eax +
jnz loc_1098110  +
push 3  +
push ebx  +
push edi  +
call esi  +
jmp loc_1098110  +
***
call ds:CreatePopupMenu  +
mov edi eax +
test edi edi +
jz loc_10982C6  +
mov eax [esi] +
push esi  +
call dword ptr [eax+88h]  +
lea ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+8] +
mov esi offset dword_1011ED0 +
push esi  +
push dword ptr [ecx-1Ch]  +
mov [ebp-4] eax +
push eax  +
call sub_102841E  +
mov ebx eax +
test ebx ebx +
jl loc_10982B9  +
mov ebx ds:GetKeyState +
push 10h  +
call ebx  +
test ax ax +
jl loc_1098241  +
lea eax [ebp+8] +
push eax  +
push esi  +
push offset aOpen_2  +
push dword ptr [ebp+0Ch]  +
call sub_104FCA9  +
test eax eax +
jl loc_1098241  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+8] +
push 1  +
lea ecx [ebp+8] +
push ecx  +
push esi  +
push eax  +
mov [ebp+0Ch] eax +
call sub_107E1D1  +
test eax eax +
jl loc_1098241  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+8] +
mov [ebp+0Ch] eax +
push 10h  +
xor esi esi +
call ebx  +
test ax ax +
jge loc_1098251  +
mov esi 100h +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push 7FFFh  +
push 1  +
xor esi esi +
push esi  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
push offset aTaskbarpin  +
push 1  +
push dword ptr [ebp+0Ch]  +
mov ebx eax +
push edi  +
call sub_104337A  +
cmp eax 0FFFFFFFFh +
jnz loc_109828D  +
push offset aTaskbarunpin  +
push 1  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_104337A  +
cmp eax esi +
jbe loc_10982A1  +
push esi  +
push 0FFFFFFFFh  +
push 0C00h  +
push eax  +
push edi  +
call ds:InsertMenuW  +
push edi  +
call sub_1043174  +
mov eax [ebp+18h] +
mov [eax] edi +
cmp [ebp+14h] esi +
jz loc_10982B9  +
mov eax [ebp+0Ch] +
mov ecx [ebp+14h] +
mov [ecx] eax +
push dword ptr [ebp-4]  +
call ds:__imp_SHELL32_155  +
test ebx ebx +
jge loc_10982D5  +
push edi  +
call ds:DestroyMenu  +
push dword ptr [ebp+14h]  +
call sub_1002BEE  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
lea eax [ebp+8] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
push 4  +
push 0  +
push 0  +
add esi 0FFFFFFE0h +
push edi  +
mov ecx esi +
call sub_1003701  +
test eax eax +
jl loc_10983A9  +
push edi  +
call ds:GetLastActivePopup  +
cmp eax edi +
jnz loc_109838D  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test al 2 +
jnz loc_109838D  +
push edi  +
call sub_107A759  +
jmp loc_1098397  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_1045759  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push 0  +
push 0F060h  +
push 112h  +
push edi  +
call ds:PostMessageW  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 7F05h  +
push 0  +
call ds:LoadIconW  +
mov ecx [ebp+0Ch] +
push dword ptr [ecx+14h]  +
mov ecx [ebp+8] +
push eax  +
call sub_100A7B8  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
push 34h  +
mov esi ecx +
mov ebx 8007000Eh +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1098423  +
push dword ptr [esi+4]  +
mov ecx eax +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1096887  +
jmp loc_1098425  +
xor eax eax +
push eax  +
lea ecx [ebp+var_4] +
call sub_1008EBC  +
mov edi [ebp+var_4] +
test edi edi +
jz loc_1098460  +
mov ecx esi +
call sub_1008EDD  +
mov ebx eax +
test ebx ebx +
jl loc_109845A  +
mov eax [esi+78h] +
mov ecx [eax] +
push 10000000h  +
push 0  +
push offset loc_1098470  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
sbb [esi-52h] ch +
sbb edx [eax-155ABA7Fh] +
fsub  dword ptr [ebp+ebp*8-0Bh] +
test esi esp +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 0  +
lea ecx [esi-20h] +
call sub_1002F76  +
mov esi [esi+28h] +
lea ecx [esi+8] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
xor eax eax +
inc eax  +
sub ecx 4Eh +
push esi  +
jz loc_1098528  +
sub ecx 0C2h +
jz loc_109850E  +
dec ecx  +
jnz loc_1098551  +
movzx esi word ptr [ebp+10h] +
mov ecx esi +
dec ecx  +
jz loc_10984DC  +
dec ecx  +
jnz loc_1098553  +
jmp loc_1098502  +
push 3F0h  +
push dword ptr [ebp+8]  +
call ds:IsDlgButtonChecked  +
test eax eax +
jz loc_1098502  +
push 0  +
push offset aUsedialog  +
push 0  +
push phkResult  +
call sub_107B73B  +
push esi  +
push dword ptr [ebp+8]  +
call ds:EndDialog  +
jmp loc_1098523  +
mov esi [ebp+8] +
push esi  +
mov dword_10B3DB0 esi +
call sub_1096C26  +
push esi  +
call sub_1096C93  +
xor eax eax +
inc eax  +
jmp loc_1098553  +
mov edx 3F1h +
mov ecx edx +
cmp [ebp+10h] cx +
jnz loc_1098551  +
mov ecx [ebp+14h] +
test ecx ecx +
jz loc_1098553  +
mov ecx [ecx+8] +
cmp ecx 0FFFFFFFEh +
jz loc_1098549  +
cmp ecx 0FFFFFFFCh +
jnz loc_1098553  +
push edx  +
call sub_1097F72  +
jmp loc_1098553  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
push 0  +
push offset unk_10984AE  +
push 0  +
push 17h  +
push hInstance  +
call sub_104A4C5  +
and dword_10B3DB0 0 +
xor eax eax +
inc eax  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
dec eax  +
dec eax  +
jz loc_10985EA  +
sub eax 3FFh +
push esi  +
mov esi [ebp+14h] +
jnz loc_10985D7  +
cmp esi 401h +
jz loc_10985BC  +
cmp esi 402h +
jle loc_10985D7  +
cmp esi 404h +
jle loc_10985C6  +
cmp esi 405h +
jnz loc_10985D7  +
push 3F1h  +
call sub_1097F72  +
push dword ptr [ebp+8]  +
call sub_1096CCD  +
push dword ptr [ebp+8]  +
call ds:DestroyWindow  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
pop esi  +
jmp loc_10985F4  +
push 0  +
call ds:PostQuitMessage  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 2Ch  +
lea eax [ebp-3ECh] +
push ebx  +
push eax  +
mov [ebp-3F0h] ebx +
call memset  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp-408h] +
push 3B8h  +
mov [ebp-40Ch] ebx +
stos   +
lea eax [ebp-3BCh] +
push ebx  +
push eax  +
mov [ebp-3C0h] ebx +
call memset  +
mov edi ds:LoadStringW +
add esp 18h +
push 100h  +
lea eax [ebp-2A0h] +
push eax  +
cmp [ebp+8] ebx +
jz loc_1098690  +
push 4CC5h  +
push hInstance  +
call edi  +
mov esi eax +
push 40h  +
lea eax [ebp-9Ch] +
push eax  +
push 4CC4h  +
jmp loc_10986AD  +
push 4CC3h  +
push hInstance  +
call edi  +
mov esi eax +
push 40h  +
lea eax [ebp-9Ch] +
push eax  +
push 4CC2h  +
push hInstance  +
neg esi  +
sbb esi esi +
neg esi  +
and esi 1 +
call edi  +
neg eax  +
sbb eax eax +
neg eax  +
and esi eax +
cmp esi ebx +
jz loc_1098858  +
lea eax [ebp-9Ch] +
push eax  +
push 80h  +
lea eax [ebp-3A8h] +
push eax  +
call sub_100665F  +
mov eax hInstance +
push 3  +
pop edi  +
push 7F00h  +
push eax  +
mov dword ptr [ebp-3F0h] 30h +
mov [ebp-3ECh] edi +
mov dword ptr [ebp-3E8h] offset loc_1098585 +
mov [ebp-3E4h] ebx +
mov [ebp-3E0h] ebx +
mov [ebp-3DCh] eax +
mov [ebp-3D8h] ebx +
call ds:LoadCursorW  +
push 5  +
mov [ebp-3D4h] eax +
call ds:GetSysColorBrush  +
mov [ebp-3D0h] eax +
mov eax off_10B3AB0 +
mov [ebp-3C8h] eax +
lea eax [ebp-3F0h] +
push eax  +
mov [ebp-3CCh] ebx +
mov [ebp-3C4h] ebx +
call ds:RegisterClassExW  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov eax 80000000h +
push eax  +
push ebx  +
push eax  +
mov eax off_10B3AB0 +
push ebx  +
push eax  +
push eax  +
call sub_107BF1F  +
mov [ebp-3BCh] eax +
cmp eax ebx +
jz loc_1098846  +
xor esi esi +
push 7F04h  +
inc esi  +
push ebx  +
mov dword ptr [ebp-3C0h] 3BCh +
mov [ebp-1Ch] esi +
mov dword ptr [ebp-3B4h] 15h +
call ds:LoadIconW  +
mov [ebp-3ACh] eax +
cmp eax ebx +
jz loc_10987C3  +
or dword ptr [ebp-3B4h] 2 +
lea eax [ebp-3C0h] +
push eax  +
mov [ebp-3B8h] esi +
mov esi ds:Shell_NotifyIconW +
push ebx  +
mov dword ptr [ebp-3B0h] 401h +
mov dword ptr [ebp-0A0h] 3A98h +
call esi  +
cmp eax ebx +
jz loc_109883A  +
lea eax [ebp-3C0h] +
push eax  +
push 4  +
mov [ebp-0A0h] edi +
call esi  +
cmp eax ebx +
jz loc_109883A  +
mov esi ds:GetMessageW +
jmp loc_1098828  +
lea eax [ebp-40Ch] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp-40Ch] +
push eax  +
call ds:DispatchMessageW  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp-40Ch] +
push eax  +
call esi  +
test eax eax +
jz loc_1098846  +
jmp loc_109880E  +
***
push dword ptr [ebp-3BCh]  +
call ds:DestroyWindow  +
push hInstance  +
push off_10B3AB0  +
call ds:UnregisterClassW  +
mov ecx [ebp-4] +
pop edi  +
xor eax eax +
pop esi  +
mov dword_10B3DB4 ebx +
xor ecx ebp +
inc eax  +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push offset aUsedialog  +
xor esi esi +
push esi  +
push phkResult  +
xor edi edi +
inc edi  +
mov [ebp+var_4] edi +
call sub_101917B  +
mov eax dword_10B3DB0 +
cmp [ebp+var_4] esi +
jnz loc_10988D8  +
cmp eax esi +
jnz loc_10988D8  +
cmp dword_10B3DB4 esi +
jnz loc_1098923  +
push esi  +
push 200Ch  +
push [ebp+arg_0]  +
mov dword_10B3DB4 edi +
push offset loc_10985FD  +
call ds:__imp_SHCreateThread  +
test eax eax +
jnz loc_1098923  +
mov dword_10B3DB4 esi +
jmp loc_1098923  +
cmp [ebp+arg_0] esi +
jnz loc_1098923  +
cmp dword_10B3DB4 esi +
jnz loc_1098923  +
cmp eax esi +
jnz loc_109890D  +
push esi  +
push 200Ch  +
push esi  +
push offset loc_109855D  +
mov dword_10B3DB0 edi +
call ds:__imp_SHCreateThread  +
test eax eax +
jnz loc_1098923  +
mov dword_10B3DB0 esi +
jmp loc_1098923  +
cmp eax edi +
jz loc_1098923  +
push eax  +
call ds:SetForegroundWindow  +
push dword_10B3DB0  +
call sub_1096C93  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+0Ch] +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp-4Ch] edi +
cmp eax edi +
jz loc_1098957  +
lea ebx [eax+esi] +
mov eax [esi+10h] +
cmp eax edi +
jz loc_1098963  +
add eax esi +
mov [ebp-4Ch] eax +
xor eax eax +
push 3Eh  +
mov [ebp-44h] ax +
lea eax [ebp-42h] +
push edi  +
push eax  +
call memset  +
push dword ptr [esi+4]  +
lea eax [ebp-44h] +
push offset aHarderror_08lx  +
push 20h  +
push eax  +
call sub_10343CA  +
add esp 1Ch +
lea eax [ebp-44h] +
push eax  +
push edi  +
push edi  +
call ds:CreateMutexW  +
mov [ebp-50h] eax +
cmp eax edi +
jz loc_1098A15  +
push edi  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_1098A0C  +
lea eax [ebp-48h] +
push eax  +
push offset dword_1098A40  +
push 1  +
push edi  +
push offset dword_1098A30  +
call ds:__imp_CoCreateInstance  +
test eax eax +
jl loc_1098A03  +
mov eax [ebp-48h] +
mov ecx [eax] +
push edi  +
push edi  +
push 1D4C0h  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp-48h] +
mov ecx [eax] +
push 2  +
push dword ptr [ebp-4Ch]  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp-48h] +
mov ecx [eax] +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp-48h] +
mov ecx [eax] +
push edi  +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp-48h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push dword ptr [ebp-50h]  +
call ds:ReleaseMutex  +
push dword ptr [ebp-50h]  +
call ds:CloseHandle  +
push esi  +
call ds:LocalFree  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push 0F0001h  +
xor edi edi +
push edi  +
push edi  +
call ds:OpenInputDesktop  +
cmp eax edi +
jz loc_1098AD7  +
push esi  +
push eax  +
call ds:CloseDesktop  +
push [ebp+uBytes]  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
cmp esi edi +
jz loc_1098AD6  +
push [ebp+uBytes]  +
push [ebp+arg_0]  +
push esi  +
call memcpy  +
add esp 0Ch +
push edi  +
push 2008h  +
push esi  +
push offset loc_109892E  +
call ds:__imp_SHCreateThread  +
test eax eax +
jz loc_1098ACF  +
inc edi  +
jmp loc_1098AD6  +
push esi  +
call ds:LocalFree  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
call sub_109765B  +
mov edi eax +
test edi edi +
jge loc_1098B14  +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_1098B14  +
xor eax eax +
cmp edi 800704C7h +
setnz al  +
mov ecx esi +
push eax  +
call sub_10977ED  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+8] +
inc ebx  +
cmp dword ptr [esi+4Ch] 0 +
jz loc_1098B69  +
push edi  +
mov edi [ebp+0Ch] +
mov eax [edi] +
push edi  +
call dword ptr [eax+6Ch]  +
test al bl +
jz loc_1098B68  +
mov eax [esi+74h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+54h]  +
mov ecx [ebp+10h] +
cmp eax ecx +
jge loc_1098B4F  +
inc ecx  +
inc ecx  +
movzx eax cx +
push eax  +
mov eax [edi] +
push edi  +
call dword ptr [eax+80h]  +
push eax  +
lea ecx [esi-20h] +
call sub_1097E0F  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
call sub_1098AE3  +
cmp dword ptr [ebp+8] 0 +
jz loc_1098B93  +
mov ecx [ebp+8] +
push 1  +
call sub_1096A21  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword_10B24CC 0 +
push ebx  +
push esi  +
push edi  +
mov dword ptr [ebp-4] 80004005h +
jz loc_1098C12  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1098BC4  +
test al al +
jnz loc_1098C12  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 2010000h +
mov esi 80010000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1098C12  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_1098C12  +
cmp edx edi +
jnz loc_1098C12  +
push offset dword_1098CD0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov esi [ebp+0Ch] +
mov eax [esi] +
push esi  +
call dword ptr [eax+88h]  +
mov ebx eax +
test ebx ebx +
jz loc_1098CAF  +
push 14h  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_1098C47  +
mov ecx [ebp+8] +
add ecx 0FFFFFFE0h +
push esi  +
push ecx  +
mov ecx eax +
call sub_109691B  +
mov edi eax +
jmp loc_1098C49  +
xor edi edi +
test edi edi +
jz loc_1098CA8  +
mov esi ds:GetKeyState +
push 10h  +
call esi  +
test ax ax +
jge loc_1098C6A  +
push 11h  +
call esi  +
test ax ax +
jge loc_1098C6A  +
xor esi esi +
inc esi  +
jmp loc_1098C6C  +
xor esi esi +
push 0  +
push 2008h  +
push edi  +
push offset loc_1098B76  +
mov [edi+10h] esi +
call ds:__imp_SHCreateThread  +
test eax eax +
jnz loc_1098C91  +
push 1  +
mov ecx edi +
call sub_1096A21  +
jmp loc_1098CA8  +
and dword ptr [ebp-4] 0 +
test esi esi +
jz loc_1098CA8  +
push 17A4h  +
push offset dword_1098CC0  +
call sub_1034B2D  +
push ebx  +
call ds:__imp_SHELL32_155  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0  +
push esi  +
mov edi ecx +
call sub_100A5CB  +
mov eax [esi] +
and [ebp+var_4] 0 +
lea ecx [ebp+var_4] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
test eax eax +
jl loc_1098D40  +
and [ebp+arg_0] 0 +
jmp loc_1098D26  +
push [ebp+arg_0]  +
mov ecx edi +
push esi  +
call sub_100A5CB  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1098D12  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
mov esi ecx +
mov eax [esi+94h] +
mov ecx [eax] +
push ebx  +
push 0Bh  +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ds:SendMessageW  +
mov [ebp+lParam] eax +
cmp [esi+74h] ebx +
jz loc_1098D8A  +
mov eax [esi+74h] +
mov ecx [eax] +
push ebx  +
push 0FFFFFFFFh  +
push offset dword_100D864  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_1098D9B  +
mov eax [eax] +
mov [ebp+var_14] eax +
jmp loc_1098D9E  +
mov [ebp+var_14] ebx +
cmp [ebp+var_14] ebx +
mov [ebp+var_C] ebx +
jle loc_1098E1F  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
mov ecx [ebp+var_C] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push ebx  +
push ebx  +
push edi  +
call dword ptr [eax+3Ch]  +
mov eax [edi] +
push 0FFFFFFFEh  +
push ebx  +
push edi  +
call dword ptr [eax+44h]  +
lea ecx [ebp+var_8] +
push ecx  +
mov [ebp+var_8] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+18h]  +
test eax eax +
jl loc_1098E14  +
mov [ebp+var_4] ebx +
jmp loc_1098DFA  +
mov eax [edi] +
push ebx  +
push [ebp+var_4]  +
push edi  +
call dword ptr [eax+3Ch]  +
mov eax [edi] +
push 0FFFFFFFEh  +
push [ebp+var_4]  +
push edi  +
call dword ptr [eax+44h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1098DDC  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_14] +
jl loc_1098DA6  +
mov eax [esi+0A4h] +
lea edx [ebp+var_10] +
push edx  +
mov [ebp+var_10] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_1098E7F  +
mov [ebp+var_4] ebx +
jmp loc_1098E65  +
mov eax [esi+0A4h] +
mov ecx [eax] +
push ebx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov eax [esi+0A4h] +
mov ecx [eax] +
push 0FFFFFFFEh  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+44h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1098E3B  +
mov eax [ebp+var_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esi+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
mov ecx esi +
call sub_102E828  +
xor edi edi +
mov eax [esi+0A8h] +
cmp eax ebx +
jz loc_1098EA2  +
mov eax [eax] +
jmp loc_1098EA4  +
xor eax eax +
cmp edi eax +
jge loc_1098EBE  +
mov eax [esi+0A8h] +
mov eax [eax+4] +
push dword ptr [eax+edi*4]  +
mov ecx esi +
call sub_1098CE5  +
inc edi  +
jmp loc_1098E94  +
mov eax [esi+94h] +
mov ecx [eax] +
push ebx  +
push [ebp+lParam]  +
push 0Bh  +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
call ds:SendMessageW  +
mov ecx esi +
call sub_101E028  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
push 1  +
xor ebx ebx +
push ebx  +
lea eax [ebp+pidl] +
push eax  +
push [ebp+pidl]  +
mov edi ecx +
call sub_102B6DC  +
cmp eax ebx +
mov [ebp+var_4] eax +
jl loc_1098F6C  +
mov eax [edi+94h] +
mov ecx [eax] +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
push [ebp+pidl]  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov eax [esi] +
push ebx  +
push 1  +
push esi  +
call dword ptr [eax+70h]  +
mov eax [esi] +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_1098F6B  +
cmp [ebp+arg_4] ebx +
jnz loc_1098F6B  +
push esi  +
lea ebx [edi+0A8h] +
push dword ptr [ebx]  +
call ds:off_100407C  +
test eax eax +
jl loc_1098F6B  +
push eax  +
push dword ptr [ebx]  +
call ds:off_10065B4  +
mov edi [edi+94h] +
mov eax [edi] +
push 0  +
push esi  +
push edi  +
call dword ptr [eax+1Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+90h] +
push eax  +
mov dword ptr [esi] offset off_100241C +
mov dword ptr [esi+8] offset off_100F030 +
mov dword ptr [esi+0Ch] offset off_10120CC +
mov dword ptr [esi+10h] offset off_102E97C +
mov dword ptr [esi+14h] offset off_1002060 +
mov dword ptr [esi+18h] offset off_100E6A0 +
mov dword ptr [esi+1Ch] offset off_101DCB8 +
mov dword ptr [esi+20h] offset off_1003EC0 +
call sub_1002BEE  +
lea eax [esi+64h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+6Ch] +
push eax  +
call sub_1002BEE  +
lea eax [esi+7Ch] +
push eax  +
call sub_1002BEE  +
lea eax [esi+0A4h] +
push eax  +
call sub_1002BEE  +
add esi 0A8h +
push 0  +
push offset loc_1040149  +
mov ecx esi +
call sub_100831C  +
mov ecx esi +
pop esi  +
jmp sub_10082DC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 1 +
xor eax eax +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 4 +
jmp loc_101DCE0  +
***
sub dword ptr [esp+4] 8 +
jmp loc_101DCE0  +
***
sub dword ptr [esp+4] 10h +
jmp loc_1002458  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_101DCE0  +
***
sub dword ptr [esp+4] 10h +
jmp loc_101DCE0  +
***
sub dword ptr [esp+4] 14h +
jmp loc_101DCE0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi [ebp+8] +
xor ecx ecx +
push ecx  +
mov [esi] ecx +
mov [ebx] ecx +
mov eax [edi+4Ch] +
mov edx [eax] +
lea ecx [ebp+0Ch] +
push ecx  +
lea ecx [ebp+14h] +
push ecx  +
push ebx  +
push 6  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [edx+18h]  +
mov [ebp+10h] eax +
test eax eax +
jnz loc_1099139  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebx]  +
call ds:__imp_SHGetIDListFromObject  +
mov [ebp+10h] eax +
test eax eax +
jl loc_109911B  +
push 0  +
push 1  +
push esi  +
push dword ptr [ebp+8]  +
lea ecx [edi-20h] +
call sub_102B6DC  +
mov [ebp+10h] eax +
test eax eax +
jl loc_1099112  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 2 +
jnz loc_1099112  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_1099112  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_1099112  +
push esi  +
call sub_1002BEE  +
push ebx  +
call sub_1002BEE  +
mov dword ptr [ebp+10h] 80004005h +
push dword ptr [ebp+8]  +
call ds:__imp_SHELL32_155  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_1099127  +
push ebx  +
call sub_1002BEE  +
lea eax [ebp+14h] +
push eax  +
call sub_1002BEE  +
push dword ptr [ebp+0Ch]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+10h] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov [ebp+var_8] ecx +
lea ecx [ebp+var_10] +
push ecx  +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jl loc_1099214  +
push esi  +
push [ebp+var_10]  +
xor esi esi +
lea ecx [ebp+arg_0] +
mov [ebp+arg_0] esi +
call sub_100801C  +
test eax eax +
jz loc_109920B  +
mov eax [ebx] +
lea ecx [ebp+var_C] +
push ecx  +
push ebx  +
call dword ptr [eax+18h]  +
test eax eax +
jge loc_109919E  +
jmp loc_10991AF  +
push esi  +
push [ebp+var_4]  +
lea ecx [ebp+arg_0] +
call sub_1006610  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_1099192  +
mov [ebp+var_4] esi +
push edi  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10991BE  +
mov ecx [eax] +
jmp loc_10991C0  +
xor ecx ecx +
mov edx [ebp+var_4] +
cmp edx ecx +
jge loc_109920A  +
mov eax [eax+4] +
mov esi [eax+edx*4] +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push 0  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi [ebp+var_8] +
push esi  +
add edi 94h +
mov eax [edi] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi [edi] +
mov eax [edi] +
push esi  +
push [ebp+arg_4]  +
push edi  +
call dword ptr [eax+0Ch]  +
mov eax [ebx] +
push esi  +
push ebx  +
call dword ptr [eax+14h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
inc [ebp+var_4]  +
jmp loc_10991B3  +
pop edi  +
lea ecx [ebp+arg_0] +
call sub_10082DC  +
pop esi  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+6Ch]  +
test al 1 +
jz loc_1099234  +
mov eax [ebx] +
push 0  +
push ebx  +
call dword ptr [eax+80h]  +
mov ecx [ebp+var_8] +
push eax  +
call sub_1097E0F  +
jmp loc_109923D  +
mov ecx [ebp+var_8] +
push ebx  +
call sub_1007701  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1098F7A  +
test [ebp+arg_0] 1 +
jz loc_1099261  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+10h] +
mov eax [edi] +
xor ebx ebx +
push edi  +
mov [ebp-10h] ebx +
mov [ebp-0Ch] ebx +
mov [ebp-4] ebx +
mov esi 80004005h +
mov [ebp-8] ebx +
call dword ptr [eax+6Ch]  +
test al 2 +
jnz loc_10992E7  +
mov eax [ebp+8] +
mov ecx [eax] +
push 1  +
lea edx [ebp-4] +
push edx  +
lea edx [ebp-0Ch] +
push edx  +
lea edx [ebp-10h] +
push edx  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
cmp esi ebx +
jl loc_10992E7  +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp-10h]  +
call ds:__imp_SHGetIDListFromObject  +
mov esi eax +
cmp esi ebx +
jge loc_1099345  +
lea eax [ebp-10h] +
push eax  +
call sub_1002BEE  +
lea eax [ebp-0Ch] +
push eax  +
call sub_1002BEE  +
push dword ptr [ebp-4]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp+8] +
mov eax [eax+4Ch] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-4] +
push edx  +
lea edx [ebp-0Ch] +
push edx  +
lea edx [ebp-10h] +
push edx  +
push 6  +
push dword ptr [ebp+0Ch]  +
mov [ebp+10h] esi +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
cmp esi ebx +
jnz loc_1099333  +
mov eax [edi] +
push edi  +
call dword ptr [eax+6Ch]  +
test al 2 +
jnz loc_1099322  +
cmp [ebp-0Ch] ebx +
jz loc_1099322  +
mov esi [ebp+10h] +
jmp loc_109933D  +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp-10h]  +
call ds:__imp_SHGetIDListFromObject  +
mov esi eax +
jmp loc_109933D  +
cmp esi 1 +
jnz loc_109933D  +
mov esi 80004005h +
cmp esi ebx +
jl loc_1099596  +
mov edi [ebp+8] +
mov [ebp+10h] ebx +
mov [ebp+0Ch] ebx +
cmp [ebp-4] ebx +
jz loc_109937D  +
lea eax [ebp+0Ch] +
push eax  +
push ebx  +
push dword ptr [ebp-4]  +
lea ecx [edi-20h] +
call sub_102BCCC  +
test eax eax +
jl loc_109937D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_109938E  +
mov dword ptr [ebp+10h] 1 +
jmp loc_10993DE  +
lea eax [ebp+0Ch] +
push eax  +
push 1  +
push dword ptr [ebp-4]  +
lea ecx [edi-20h] +
call sub_102BCCC  +
push dword ptr [ebp-8]  +
mov eax [edi+4Ch] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1099584  +
cmp [ebp+0Ch] ebx +
jz loc_10993DE  +
mov eax [edi+4Ch] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp-8]  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi ebx +
jnz loc_10993E0  +
push dword ptr [ebp-8]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
push eax  +
mov [ebp-8] eax +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+84h]  +
mov esi eax +
cmp esi ebx +
jl loc_1099584  +
cmp [ebp+10h] ebx +
jnz loc_1099435  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jz loc_1099405  +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jl loc_109941B  +
cmp [ebp+8] ebx +
jnz loc_109941B  +
mov edx [ebp+14h] +
mov eax [edi+4Ch] +
mov ecx [eax] +
inc edx  +
movzx edx dx +
push edx  +
push dword ptr [ebp-8]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
lea ecx [edi-20h] +
call sub_102B4ED  +
push 0Fh  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
push offset dword_10B2478  +
call sub_102E3FE  +
cmp esi ebx +
jl loc_1099584  +
cmp [ebp-0Ch] ebx +
jz loc_1099584  +
lea eax [ebp+8] +
push eax  +
push offset stru_103B484  +
push 3  +
push ebx  +
push offset stru_103B474  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_1099584  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jz loc_1099476  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
jmp loc_1099478  +
xor eax eax +
mov ecx [ebp+8] +
mov edx [ecx] +
push ebx  +
push eax  +
push dword ptr [ebp-4]  +
push ecx  +
call dword ptr [edx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_10994B0  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp+10h] +
push edx  +
push dword ptr [ebp-0Ch]  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jge loc_10994B0  +
mov eax [ebp+8] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push dword ptr [ebp-0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_1099584  +
cmp [ebp+0Ch] ebx +
jnz loc_10994D9  +
lea eax [ebp+0Ch] +
push eax  +
push 1  +
push dword ptr [ebp-4]  +
lea ecx [edi-20h] +
call sub_102BCCC  +
mov esi eax +
cmp esi ebx +
jl loc_1099584  +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp-0Ch]  +
call ds:__imp_SHGetIDListFromObject  +
mov esi eax +
cmp esi ebx +
jl loc_1099584  +
mov eax [edi+74h] +
mov ecx [eax] +
push ebx  +
push dword ptr [ebp+14h]  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+78h]  +
push offset dword_1068890  +
call sub_1008600  +
test al al +
jz loc_109957B  +
lea eax [ebp+10h] +
push eax  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
call ds:__imp_SHStrDupW  +
test eax eax +
jl loc_109957B  +
push dword ptr [ebp+10h]  +
call ds:PathStripPathW  +
lea eax [ebp-14h] +
push eax  +
push 80018001h  +
push dword ptr [ebp+14h]  +
call ds:__imp_SHGetNameFromIDList  +
test eax eax +
jl loc_1099572  +
push dword ptr [ebp-14h]  +
call ds:__imp_PathFindExtensionW  +
push ebx  +
push ebx  +
push 1  +
push 5  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+10h]  +
call sub_106E0CF  +
push dword ptr [ebp-14h]  +
call ds:__imp_CoTaskMemFree  +
push dword ptr [ebp+10h]  +
call ds:__imp_CoTaskMemFree  +
push dword ptr [ebp+14h]  +
call ds:__imp_SHELL32_155  +
lea eax [ebp+0Ch] +
push eax  +
call sub_1002BEE  +
push dword ptr [ebp-8]  +
call ds:__imp_SHELL32_155  +
lea eax [ebp-10h] +
push eax  +
call sub_1002BEE  +
lea eax [ebp-0Ch] +
push eax  +
call sub_1002BEE  +
push dword ptr [ebp-4]  +
call ds:__imp_CoTaskMemFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
sub dword ptr [esp+4] 10h +
jmp loc_100242D  +
***
sub dword ptr [esp+4] 20h +
jmp loc_100242D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002788 +
jz loc_10995F8  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
xor eax eax +
cmp [ecx+28h] edx +
setnz al  +
test eax eax +
jz loc_1099638  +
mov [ecx+28h] edx +
test edx edx +
jz loc_1099638  +
mov edx [ecx+24h] +
test edx edx +
jz loc_1099631  +
cmp edx 0FFFFh +
jnz loc_1099638  +
mov dword ptr [ecx+24h] 1 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor edx edx +
cmp [ecx+24h] edx +
jnz loc_1099659  +
cmp [ecx+28h] edx +
jnz loc_1099659  +
xor eax eax +
jmp loc_1099662  +
xor eax eax +
inc eax  +
mov [ecx+24h] edx +
mov [ecx+28h] edx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+2Ch] 0 +
mov ebx [esi+4] +
push edi  +
jz loc_109968A  +
mov eax [esi+2Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
jmp loc_1099690  +
push ebx  +
call sub_1006BBB  +
mov edi eax +
test edi edi +
jz loc_10996C4  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test al 10h +
jnz loc_10996C2  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test al 20h +
jz loc_10996C4  +
push edi  +
call ds:IsIconic  +
test eax eax +
jnz loc_10996C4  +
mov eax [esi] +
push esi  +
call dword ptr [eax+94h]  +
test eax eax +
jz loc_10996C4  +
mov ebx edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+40h] +
xor ebx ebx +
mov dword ptr [ebp-4] 80004005h +
cmp eax ebx +
jz loc_10996F6  +
push eax  +
call ds:off_1035224  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov [ebp-8] ebx +
mov [ebp+8] ebx +
call ds:off_10110E0  +
test eax eax +
jnz loc_109971F  +
push 31h  +
call ds:GetSystemMetrics  +
mov [ebp+8] eax +
mov [ebp-8] eax +
push dword ptr [ebp+0Ch]  +
call ds:off_106C7A8  +
push 7  +
push eax  +
push 21h  +
push dword ptr [ebp+8]  +
mov [ebp-0Ch] eax +
push dword ptr [ebp-8]  +
call ds:off_10192F8  +
mov [esi+40h] eax +
cmp eax ebx +
jz loc_10997A1  +
mov [ebp-4] ebx +
push edi  +
cmp ebx [ebp-0Ch] +
jge loc_109978D  +
push 0  +
push ebx  +
push dword ptr [ebp+0Ch]  +
call ds:off_10084F8  +
mov edi eax +
test edi edi +
jz loc_109977F  +
push edi  +
push 0FFFFFFFFh  +
push dword ptr [esi+40h]  +
call ds:off_10062D4  +
cmp eax 0FFFFFFFFh +
jnz loc_1099776  +
mov dword ptr [ebp-4] 80004005h +
push edi  +
call ds:DestroyIcon  +
jmp loc_1099786  +
mov dword ptr [ebp-4] 80004005h +
inc ebx  +
cmp dword ptr [ebp-4] 0 +
jge loc_1099747  +
cmp dword ptr [ebp-4] 0 +
pop edi  +
jge loc_10997A1  +
push dword ptr [esi+40h]  +
call ds:off_1035224  +
and dword ptr [esi+40h] 0 +
mov eax [ebp-4] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax+3Ch] +
mov edx [ebp+0Ch] +
mov [edx] ecx +
mov eax [eax+38h] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push esi  +
push edi  +
mov edi [ecx+3Ch] +
xor esi esi +
mov eax 80070057h +
test edi edi +
jbe loc_1099813  +
mov ecx [ecx+38h] +
lea edx [ecx+4] +
push ebx  +
mov ebx [edx] +
cmp ebx [ebp+0Ch] +
jz loc_10997FE  +
inc esi  +
add edx 21Ch +
cmp esi edi +
jnb loc_1099812  +
jmp loc_10997EA  +
***
mov edi [ebp+10h] +
imul esi esi +
add esi ecx +
mov ecx 87h +
movs   +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
xor esi esi +
mov edi ecx +
mov [ebp+var_4] 9 +
mov [ebp+var_C] esi +
cmp [edi+44h] esi +
jbe loc_1099907  +
mov [ebp+var_8] esi +
lea eax [edi+4Ch] +
push ebx  +
or dword ptr [eax] 0FFFFFFFFh +
mov edx [edi+40h] +
mov ecx [ebp+var_8] +
mov ecx [ecx+edx+218h] +
test cl 8 +
jnz loc_10998EC  +
test cl 4 +
jz loc_109986D  +
mov [ebp+var_4] 9 +
jmp loc_10998EC  +
mov ecx [edi+44h] +
lea ebx [ecx-1] +
cmp esi ebx +
jnz loc_109988B  +
xor ecx ecx +
cmp [ebp+var_4] 9 +
setnz cl  +
dec ecx  +
and ecx 0FFFFFFFDh +
add ecx 0Bh +
mov [eax] ecx +
jmp loc_10998EC  +
inc esi  +
cmp esi ecx +
jnb loc_10998E6  +
mov ebx [ebp+var_8] +
lea ebx [ebx+edx+434h] +
test byte ptr [ebx] 8 +
jz loc_10998AC  +
inc esi  +
add ebx 21Ch +
cmp esi ecx +
jnb loc_10998E6  +
jmp loc_109989A  +
imul esi esi +
test byte ptr [esi+edx+218h] 4 +
jz loc_10998D5  +
xor edx edx +
push 9  +
pop ecx  +
cmp [ebp+var_4] ecx +
mov [ebp+var_4] ecx +
setnz dl  +
dec edx  +
and edx 0FFFFFFFDh +
add edx 0Bh +
mov [eax] edx +
jmp loc_10998E1  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov [ebp+var_4] 0Ah +
cmp dword ptr [eax] 0FFFFFFFFh +
jnz loc_10998EC  +
mov dword ptr [eax] 8 +
mov esi [ebp+var_C] +
add [ebp+var_8] 21Ch +
inc esi  +
add eax 4 +
mov [ebp+var_C] esi +
cmp esi [edi+44h] +
jb loc_1099846  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push esi  +
mov esi [edx+3Ch] +
push edi  +
or eax 0FFFFFFFFh +
xor edi edi +
test esi esi +
jbe loc_1099946  +
mov ecx [edx+38h] +
add ecx 4 +
push ebx  +
mov ebx [ecx] +
cmp ebx [ebp+0Ch] +
jz loc_1099941  +
inc edi  +
add ecx 21Ch +
cmp edi esi +
jnb loc_1099945  +
jmp loc_109992D  +
***
mov eax [edx+edi*4+44h] +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
add esi 6Ch +
push dword ptr [esi]  +
xor edi edi +
call ds:__imp_CoTaskMemFree  +
mov [esi] edi +
cmp [ebp+0Ch] edi +
jz loc_109997B  +
push esi  +
push dword ptr [ebp+0Ch]  +
call ds:__imp_SHStrDupW  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hIcon] 0 +
cmp [ebp+arg_0] 0 +
jz loc_10999C8  +
push esi  +
mov esi ds:GetSystemMetrics +
lea eax [ebp+hIcon] +
push eax  +
push 32h  +
call esi  +
push eax  +
push 31h  +
call esi  +
push eax  +
push [ebp+arg_0]  +
call ds:off_100A854  +
pop esi  +
cmp eax 1 +
jnz loc_10999C8  +
push [ebp+hIcon]  +
call ds:CopyIcon  +
mov [ebp+hIcon] eax +
mov eax [ebp+hIcon] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
lea esi [eax+68h] +
push dword ptr [esi]  +
xor ebx ebx +
call ds:__imp_CoTaskMemFree  +
and [esi] ebx +
test edi edi +
jz loc_1099A2F  +
push ebx  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push edi  +
call ds:SHLoadIndirectString  +
mov ebx eax +
test ebx ebx +
jl loc_1099A2F  +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:__imp_SHStrDupW  +
mov ebx eax +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+2Ch] 0 +
push edi  +
mov edi 80004005h +
jz loc_1099AB0  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test al 10h +
jnz loc_1099A9D  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test al 20h +
jz loc_1099AB0  +
mov eax [esi+2Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8Ch]  +
lea ecx [esi-8] +
neg ecx  +
sbb ecx ecx +
and ecx esi +
cmp eax ecx +
jnz loc_1099AB0  +
mov eax [esi+2Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:IsIconic  +
test eax eax +
jnz loc_1099AB0  +
mov esi [esi+2Ch] +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0D8h]  +
mov edi eax +
jmp loc_1099AC6  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test al 8 +
jz loc_1099AC6  +
mov edi [ebp+0Ch] +
add esi 70h +
movs   +
movs   +
movs   +
movs   +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+30h] 0 +
jnz loc_1099AEB  +
mov eax [esi] +
push esi  +
call dword ptr [eax+98h]  +
xor eax eax +
cmp dword ptr [esi+30h] 1 +
pop esi  +
setz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ebp+0Ch] eax +
setz al  +
inc eax  +
mov [ecx+30h] eax +
mov [ecx+2Ch] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A0h]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+9Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+98h]  +
push eax  +
mov eax [esi+14h] +
xor ecx ecx +
and al 1 +
cmp al 1 +
setz cl  +
push ecx  +
push 1  +
call sub_103B8D5  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
and dword ptr [eax+8] 0 +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+ppv]  +
call sub_107D591  +
mov edi eax +
xor esi esi +
cmp edi esi +
jl loc_1099C4A  +
push [ebp+ppv]  +
call ds:__imp_SHELL32_16  +
mov [ebp+var_10] eax +
lea eax [ebp+var_4] +
push eax  +
push offset dword_10696E4  +
push esi  +
lea eax [ebp+var_10] +
push eax  +
push 1  +
push [ebp+var_C]  +
mov [ebp+var_4] esi +
call ds:SHCreateDataObject  +
mov edi eax +
cmp edi esi +
jl loc_1099C34  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_100DD00  +
push 1  +
push esi  +
push offset stru_1029D80  +
mov [ebp+ppv] esi +
call ds:__imp_CoCreateInstance  +
mov edi eax +
cmp edi esi +
jl loc_1099C27  +
mov eax [ebp+ppv] +
lea edx [ebp+var_8] +
push edx  +
push esi  +
push esi  +
push esi  +
push 2  +
push [ebp+var_4]  +
mov [ebp+var_8] esi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi esi +
jl loc_1099C27  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp edi 1 +
setnz cl  +
cmp eax esi +
jz loc_1099C1E  +
mov edx [ebp+var_8] +
mov [eax] edx +
mov eax [ebp+arg_8] +
cmp eax esi +
jz loc_1099C27  +
mov [eax] ecx +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_1099C34  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_C]  +
call ds:__imp_SHELL32_155  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_1099C4A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:__imp_CoCreateInstance +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_103B484  +
push 3  +
xor edi edi +
push edi  +
push offset stru_103B474  +
xor ebx ebx +
mov [ebp+ppv] edi +
call esi  +
test eax eax +
jl loc_1099CDB  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push edi  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1099CDB  +
lea eax [ebp+var_4] +
push eax  +
push offset stru_103B494  +
push 3  +
push edi  +
push offset stru_103B464  +
mov [ebp+var_4] edi +
call esi  +
test eax eax +
jl loc_1099CCE  +
mov eax [ebp+var_4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_1099CCE  +
push [ebp+ppv]  +
push [ebp+var_4]  +
call sub_103B59A  +
mov ebx eax +
mov eax [ebp+var_4] +
cmp eax edi +
jz loc_1099CDB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
cmp eax edi +
jz loc_1099CE8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
mov eax [ebp+8] +
mov ecx [eax] +
neg edx  +
sbb edx edx +
and edx 4 +
push edx  +
push 4  +
push eax  +
call dword ptr [ecx+5Ch]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
test ecx ecx +
jz loc_1099D2E  +
mov edx [eax+3Ch] +
mov [ecx] edx +
xor ecx ecx +
cmp ecx [eax+3Ch] +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+40h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+6Ch] +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 8 +
jmp loc_100B6A4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+38h] 0 +
mov dword ptr [ebp-4] 80070057h +
jnz loc_1099EFA  +
push ebx  +
mov ebx [ebp+10h] +
cmp ebx 7 +
ja loc_1099EF9  +
cmp dword ptr [esi+40h] 0 +
jnz loc_1099DBD  +
push 31h  +
call ds:GetSystemMetrics  +
push 7  +
push ebx  +
push 21h  +
push eax  +
push eax  +
call ds:off_10192F8  +
mov [esi+40h] eax +
push edi  +
mov edi ebx +
imul edi edi +
push edi  +
push 40h  +
call ds:LocalAlloc  +
mov [esi+38h] eax +
test eax eax +
jz loc_1099F02  +
mov [esi+3Ch] ebx +
mov ebx [ebp+0Ch] +
push edi  +
push ebx  +
push eax  +
call memcpy  +
xor edi edi +
add esp 0Ch +
mov [ebp+8] edi +
cmp [esi+3Ch] edi +
jbe loc_1099E85  +
add ebx 0Ch +
mov [ebp+10h] ebx +
mov eax [esi+38h] +
add eax edi +
test byte ptr [eax] 1 +
jnz loc_1099E0D  +
or dword ptr [eax+8] 0FFFFFFFFh +
mov eax [esi+38h] +
test byte ptr [edi+eax] 2 +
jz loc_1099E46  +
cmp dword ptr [esi+40h] 0 +
jz loc_1099E46  +
push dword ptr [ebx]  +
lea ecx [esi-8] +
call sub_1099988  +
mov ebx eax +
test ebx ebx +
jz loc_1099E46  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [esi+40h]  +
call ds:off_10062D4  +
mov ecx [esi+38h] +
push ebx  +
mov [edi+ecx+8] eax +
call ds:DestroyIcon  +
mov eax [esi+38h] +
add eax edi +
test byte ptr [eax] 8 +
jnz loc_1099E57  +
and dword ptr [eax+218h] 0 +
mov eax [esi+38h] +
add eax edi +
test byte ptr [eax] 4 +
jnz loc_1099E67  +
xor ecx ecx +
mov [eax+10h] cx +
mov ebx [ebp+10h] +
inc dword ptr [ebp+8]  +
mov eax 21Ch +
add ebx eax +
add edi eax +
mov eax [ebp+8] +
mov [ebp+10h] ebx +
cmp eax [esi+3Ch] +
jb loc_1099DFF  +
and dword ptr [ebp-4] 0 +
lea ecx [esi-8] +
call sub_109981E  +
cmp dword_10B24CC 0 +
jz loc_1099EF8  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1099EA7  +
test al al +
jnz loc_1099EF8  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_1099EF8  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_1099EF8  +
cmp edx ebx +
jnz loc_1099EF8  +
push dword ptr [esi+3Ch]  +
push offset dword_1099F10  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
pop edi  +
pop ebx  +
mov eax [ebp-4] +
pop esi  +
leave   +
retn 0Ch  +
***
mov dword ptr [ebp-4] 8007000Eh +
jmp loc_1099EF8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+8] +
mov eax [edi] +
xor ebx ebx +
push ebx  +
push edi  +
call dword ptr [eax+0BCh]  +
mov eax [edi+60h] +
cmp eax ebx +
jz loc_1099F4C  +
push eax  +
call ds:DestroyIcon  +
mov [edi+60h] ebx +
cmp [ebp+0Ch] ebx +
jz loc_1099F6A  +
push dword ptr [ebp+0Ch]  +
lea ecx [edi-8] +
call sub_1099988  +
mov [edi+60h] eax +
call ds:GetTickCount  +
mov [edi+64h] eax +
jmp loc_1099F6D  +
mov [edi+64h] ebx +
cmp dword_10B24CC ebx +
jz loc_1099FD5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_1099F82  +
cmp al bl +
jnz loc_1099FD5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
push esi  +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_1099FD4  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx esi +
cmp ecx eax +
jnz loc_1099FD4  +
cmp edx ebx +
jnz loc_1099FD4  +
push dword ptr [edi+4]  +
push offset dword_1099FE0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
cmp [esi+10h] ebx +
jz loc_109A0CC  +
push edi  +
xor eax eax +
lea edi [ebp-10h] +
stos   +
stos   +
mov [ebp-8] ebx +
call ds:IsCompositionActive  +
mov edi ds:SystemParametersInfoW +
test eax eax +
jnz loc_109A04C  +
push 8  +
pop eax  +
push ebx  +
lea ecx [ebp-10h] +
push ecx  +
push eax  +
push 48h  +
mov [ebp-10h] eax +
call edi  +
mov eax [ebp-0Ch] +
push ebx  +
mov [ebp-8] eax +
lea eax [ebp-10h] +
push eax  +
push 8  +
push 49h  +
mov [ebp-0Ch] ebx +
call edi  +
mov eax [esi+10h] +
cmp eax ebx +
jz loc_109A057  +
mov eax [eax] +
jmp loc_109A059  +
xor eax eax +
dec eax  +
cmp eax ebx +
mov [ebp-4] eax +
jge loc_109A069  +
jmp loc_109A0B0  +
mov esi [ebp+8] +
mov eax [ebp-4] +
mov ecx [esi+10h] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+90h]  +
test eax eax +
jnz loc_109A0AB  +
mov eax [esi] +
push ebx  +
push dword ptr [ebp+0Ch]  +
push 112h  +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
call ds:PostMessageW  +
cmp dword ptr [ebp+0Ch] 0F120h +
jnz loc_109A0AB  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
call ds:BringWindowToTop  +
dec dword ptr [ebp-4]  +
jns loc_109A063  +
call ds:IsCompositionActive  +
test eax eax +
jnz loc_109A0CB  +
mov eax [ebp-8] +
push ebx  +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
push 8  +
push 49h  +
call edi  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+0Ch] +
xor ecx ecx +
push edi  +
mov edi [ebp+8] +
mov [eax] ecx +
mov eax [edi+10h] +
mov dword ptr [ebp-0Ch] 80004005h +
mov [ebp-4] ecx +
cmp eax ecx +
jz loc_109A104  +
mov eax [eax] +
mov [ebp+8] eax +
jmp loc_109A107  +
mov [ebp+8] ecx +
xor eax eax +
cmp [ebp+8] ecx +
mov [ebp-8] eax +
jle loc_109A160  +
push ebx  +
push esi  +
mov ecx [edi+10h] +
mov ebx [ebp-4] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
test ebx ebx +
jz loc_109A139  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [ebx] +
push ebx  +
mov [ebp-10h] eax +
call dword ptr [ecx+14h]  +
mov ecx [ebp-10h] +
cmp eax ecx +
jnb loc_109A13C  +
mov [ebp-4] esi +
mov eax [ebp-8] +
inc eax  +
cmp eax [ebp+8] +
mov [ebp-8] eax +
jl loc_109A113  +
cmp dword ptr [ebp-4] 0 +
pop esi  +
pop ebx  +
jz loc_109A160  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+0Ch]  +
call ds:__imp_IUnknown_Set  +
and dword ptr [ebp-0Ch] 0 +
mov eax [ebp-0Ch] +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push esi  +
add ecx 0FFFFFFF8h +
xor esi esi +
call sub_1006072  +
test eax eax +
jz loc_109A18F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0C4h]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
add eax 18h +
push eax  +
call sub_107C7E5  +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push dword ptr [esi+28h]  +
call sub_102E515  +
test eax eax +
jnz loc_109A1E4  +
push dword ptr [esi+4]  +
call ds:__imp_PathFindFileNameW  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+ppv] +
and dword ptr [ebx] 0 +
push esi  +
mov esi ecx +
mov eax [esi+18h] +
push edi  +
mov edi 80004005h +
test eax eax +
jz loc_109A20F  +
mov eax [eax] +
jmp loc_109A211  +
xor eax eax +
test eax eax +
jle loc_109A287  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 3  +
push 0  +
push offset rclsid  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_109A287  +
mov ecx [ebp+ppv] +
mov eax [esi+18h] +
mov edi [ecx] +
mov eax [eax+4] +
mov eax [eax] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push [ebp+ppv]  +
call dword ptr [edi+2Ch]  +
mov edi eax +
test edi edi +
jl loc_109A27E  +
add esi 20h +
push esi  +
push [ebp+var_4]  +
call ds:__imp_SHGetIDListFromObject  +
mov edi eax +
test edi edi +
jl loc_109A275  +
mov esi [esi] +
push ebx  +
push esi  +
call sub_10082A8  +
mov edi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
push esi  +
mov esi ecx +
mov eax [esi+30h] +
push edi  +
mov edi 80004005h +
test eax eax +
jz loc_109A31E  +
cmp word ptr [eax] 0 +
jz loc_109A31E  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 3  +
push 0  +
push offset rclsid  +
call ds:__imp_CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_109A31E  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push dword ptr [esi+30h]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
test edi edi +
jl loc_109A315  +
add esi 20h +
push esi  +
push [ebp+var_4]  +
call ds:__imp_SHGetIDListFromObject  +
mov edi eax +
test edi edi +
jl loc_109A30C  +
push [ebp+arg_0]  +
mov esi [esi] +
push esi  +
call sub_10082A8  +
mov edi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+18h] +
push edi  +
xor edi edi +
mov [ebp-4] edi +
test eax eax +
jz loc_109A34D  +
push eax  +
call ds:__imp_SHELL32_18  +
mov edi eax +
jmp loc_109A3C9  +
push dword ptr [esi+4]  +
call ds:__imp_PathIsNetworkPathW  +
test eax eax +
jnz loc_109A3C9  +
lea eax [ebp-4] +
lea edi [esi-8] +
push eax  +
mov ecx edi +
call sub_109A295  +
test eax eax +
jge loc_109A3C6  +
lea eax [ebp-4] +
push eax  +
mov ecx edi +
call sub_109A1EE  +
test eax eax +
jge loc_109A3C6  +
cmp eax 80040F07h +
jz loc_109A3C6  +
push dword ptr [esi+4]  +
call ds:SHELL32_162  +
mov edi eax +
test edi edi +
jz loc_109A3C9  +
test byte ptr [esi+14h] 8 +
jz loc_109A3C9  +
lea eax [ebp+8] +
push eax  +
push edi  +
call sub_10082A8  +
test eax eax +
jl loc_109A3C9  +
push dword ptr [esi+28h]  +
push 0BEEF001Dh  +
push dword ptr [ebp+8]  +
call sub_107D445  +
mov esi eax +
test esi esi +
jz loc_109A3C9  +
push edi  +
call ds:__imp_SHELL32_155  +
mov edi esi +
jmp loc_109A3C9  +
mov edi [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+8] +
xor eax eax +
inc ebx  +
cmp [esi+2Ch] eax +
jz loc_109A3F0  +
cmp [esi+30h] eax +
jnz loc_109A44B  +
push edi  +
mov [ebp+8] eax +
mov [ebp-4] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+88h]  +
mov edi eax +
test edi edi +
jz loc_109A432  +
mov eax [esi] +
push esi  +
call dword ptr [eax+68h]  +
test eax eax +
jz loc_109A42B  +
test [esi+14h] bl +
jz loc_109A41D  +
mov [ebp-4] ebx +
mov [ebp+8] ebx +
jmp loc_109A42B  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push edi  +
call sub_1099B7C  +
push edi  +
call ds:__imp_SHELL32_155  +
xor eax eax +
cmp [ebp+8] eax +
pop edi  +
setz al  +
inc eax  +
mov [esi+2Ch] eax +
xor eax eax +
cmp [ebp-4] eax +
setz al  +
inc eax  +
mov [esi+30h] eax +
cmp [esi+2Ch] ebx +
jnz loc_109A463  +
push offset dword_1068F84  +
call ds:SHLWAPI_618  +
test eax eax +
jnz loc_109A463  +
mov eax ebx +
jmp loc_109A465  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+28h] +
push esi  +
xor esi esi +
cmp eax esi +
jz loc_109A492  +
cmp [eax] si +
jz loc_109A492  +
push eax  +
call sub_1099C57  +
test eax eax +
jz loc_109A492  +
inc esi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1002DBE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+3Ch] 0 +
mov dword ptr [ebp-8] 80070057h +
jbe loc_109A60B  +
mov ecx [esi+38h] +
push ebx  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx [edi+4] +
lea edx [ecx+4] +
cmp [edx] ebx +
jz loc_109A4F6  +
inc dword ptr [ebp-4]  +
mov eax [esi+3Ch] +
add edx 21Ch +
cmp [ebp-4] eax +
jnb loc_109A609  +
jmp loc_109A4DB  +
***
mov eax [edi] +
test al 2 +
jz loc_109A540  +
cmp dword ptr [esi+40h] 0 +
jz loc_109A554  +
push dword ptr [edi+0Ch]  +
lea ecx [esi-8] +
call sub_1099988  +
mov [ebp+8] eax +
test eax eax +
jz loc_109A554  +
mov ebx [ebp-4] +
imul ebx ebx +
push eax  +
mov eax [esi+38h] +
push dword ptr [ebx+eax+8]  +
push dword ptr [esi+40h]  +
call ds:off_10062D4  +
mov ecx [esi+38h] +
push dword ptr [ebp+8]  +
mov [ebx+ecx+8] eax +
call ds:DestroyIcon  +
jmp loc_109A554  +
test al 1 +
jz loc_109A554  +
mov eax [ebp-4] +
mov edx [edi+8] +
imul eax eax +
mov [eax+ecx+8] edx +
test byte ptr [edi] 8 +
jz loc_109A57A  +
mov eax [ebp-4] +
mov ecx [esi+38h] +
imul eax eax +
mov edx [edi+218h] +
mov [eax+ecx+218h] edx +
lea ecx [esi-8] +
call sub_109981E  +
test byte ptr [edi] 4 +
jz loc_109A59E  +
mov eax [ebp-4] +
mov ecx [esi+38h] +
imul eax eax +
add edi 10h +
push edi  +
push 104h  +
lea eax [eax+ecx+10h] +
push eax  +
call sub_100665F  +
cmp dword_10B24CC 0 +
jz loc_109A605  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109A5B4  +
test al al +
jnz loc_109A605  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_109A605  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_109A605  +
cmp edx edi +
jnz loc_109A605  +
push dword ptr [ebp-4]  +
push offset dword_109A618  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
and dword ptr [ebp-8] 0 +
pop edi  +
pop ebx  +
mov eax [ebp-8] +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+8] +
mov [ebp-218h] eax +
mov [eax] ebx +
mov eax [edi+18h] +
xor esi esi +
cmp eax ebx +
jz loc_109A6E3  +
lea ecx [ebp-210h] +
push ecx  +
push offset dword_100DC8C  +
push eax  +
call ds:__imp_SHCreateItemFromIDList  +
mov esi eax +
cmp esi ebx +
jl loc_109A873  +
mov eax [ebp-210h] +
mov ecx [eax] +
lea edx [ebp-214h] +
push edx  +
mov ebx 10000h +
push ebx  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_109A6BF  +
test [ebp-214h] ebx +
jz loc_109A6BF  +
push dword ptr [ebp-218h]  +
mov eax [ebp-210h] +
mov ecx [eax] +
push 80080001h  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp-210h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test esi esi +
jl loc_109A873  +
mov eax [ebp-218h] +
xor ebx ebx +
cmp [eax] ebx +
jnz loc_109A79F  +
mov eax [edi+10h] +
cmp eax ebx +
jz loc_109A6EE  +
mov eax [eax] +
jmp loc_109A6F0  +
xor eax eax +
cmp eax ebx +
jle loc_109A79F  +
lea eax [ebp-214h] +
push eax  +
push offset riid  +
push 3  +
push ebx  +
push offset rclsid  +
call ds:__imp_CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_109A873  +
mov ecx [ebp-214h] +
mov esi [ecx] +
mov eax [edi+10h] +
mov eax [eax+4] +
mov eax [eax] +
push ebx  +
lea ecx [ebp-210h] +
push ecx  +
mov ecx [eax] +
push ebx  +
push ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push dword ptr [ebp-214h]  +
call dword ptr [esi+28h]  +
mov esi eax +
cmp esi ebx +
jl loc_109A793  +
cmp [ebp-210h] ebx +
jz loc_109A793  +
push ebx  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ebp-210h]  +
call ds:SHLoadIndirectString  +
test eax eax +
jl loc_109A787  +
push dword ptr [ebp-218h]  +
lea eax [ebp-20Ch] +
push eax  +
call ds:__imp_SHStrDupW  +
mov esi eax +
push dword ptr [ebp-210h]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp-214h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp esi ebx +
jl loc_109A873  +
mov eax [ebp-218h] +
cmp [eax] ebx +
jnz loc_109A873  +
mov eax [edi+28h] +
cmp eax ebx +
jz loc_109A808  +
cmp word ptr [eax] 2Ah +
jnz loc_109A808  +
mov eax [edi+10h] +
cmp eax ebx +
jz loc_109A7CD  +
mov eax [eax] +
jmp loc_109A7CF  +
xor eax eax +
cmp eax ebx +
jle loc_109A808  +
mov eax [edi+10h] +
mov eax [eax+4] +
mov eax [eax] +
push 104h  +
lea ecx [ebp-20Ch] +
push ecx  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:InternalGetWindowText  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
jmp loc_109A85A  +
push dword ptr [edi+4]  +
call ds:__imp_PathIsNetworkPathW  +
test eax eax +
jnz loc_109A83D  +
lea eax [ebp-214h] +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
push ebx  +
push dword ptr [edi+4]  +
mov dword ptr [ebp-214h] 104h +
push 4  +
push 42h  +
call ds:__imp_AssocQueryStringW  +
jmp loc_109A858  +
push dword ptr [edi+4]  +
call ds:__imp_PathFindFileNameW  +
push eax  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
call sub_100665F  +
mov esi eax +
cmp esi ebx +
jl loc_109A873  +
push dword ptr [ebp-218h]  +
lea eax [ebp-20Ch] +
push eax  +
call ds:__imp_SHStrDupW  +
mov esi eax +
mov ecx [ebp-4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
test esi esi +
jz loc_109A8B5  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0D0h]  +
test eax eax +
jz loc_109A8B5  +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_100665F  +
test eax eax +
jge loc_109A8C5  +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+2Ch]  +
pop esi  +
pop ebp  +
retn 10h  +
***
sub dword ptr [esp+4] 8 +
jmp loc_100EAC7  +
***
and dword ptr [eax] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_109A904  +
push [ebp+arg_0]  +
push eax  +
call ds:EndBufferedPaint  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
and [ebp+var_4] 0 +
stos   +
stos   +
mov eax [ebp+arg_14] +
or eax 1 +
mov [ebp+var_10] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push 2  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_14] 10h +
call ds:BeginBufferedPaint  +
mov [esi] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_0]  +
call ds:GetWindowRgnBox  +
neg eax  +
sbb eax eax +
neg eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_8] 1 +
mov eax [ebp+arg_0] +
push 25h  +
pop edx  +
jz loc_109A9A3  +
cmp eax edx +
jnz loc_109A99C  +
push 27h  +
pop eax  +
jmp loc_109A9B6  +
cmp eax 27h +
jnz loc_109A9A3  +
mov eax edx +
cmp eax edx +
jz loc_109A9B6  +
cmp eax 27h +
jz loc_109A9B6  +
cmp eax 26h +
jz loc_109A9B6  +
cmp eax 28h +
jnz loc_109AA09  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_109A9C9  +
cmp esi 2 +
jz loc_109A9C9  +
test [ebp+arg_8] 2 +
jz loc_109A9ED  +
mov ecx eax +
sub ecx edx +
jz loc_109A9E4  +
dec ecx  +
jz loc_109A9E0  +
dec ecx  +
jz loc_109A9DC  +
dec ecx  +
jnz loc_109A9E7  +
push 27h  +
jmp loc_109A9E6  +
push 26h  +
jmp loc_109A9E6  +
mov eax edx +
jmp loc_109A9E7  +
push 28h  +
pop eax  +
test [ebp+arg_8] 2 +
jnz loc_109AA08  +
cmp esi 1 +
jz loc_109A9F7  +
cmp esi 2 +
jnz loc_109AA08  +
cmp eax 26h +
jnz loc_109AA00  +
push 28h  +
jmp loc_109AA07  +
cmp eax 28h +
jnz loc_109AA08  +
push 26h  +
pop eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
push 1  +
push [ebp+hwnd]  +
call ds:MonitorFromWindow  +
lea ecx [ebp+mi] +
push ecx  +
push eax  +
mov [ebp+mi.cbSize] 28h +
call ds:GetMonitorInfoW  +
lea eax [ebp+pwi] +
push eax  +
push [ebp+hwnd]  +
mov [ebp+pwi.cbSize] 3Ch +
call ds:GetWindowInfo  +
mov eax [ebp+pwi.rcWindow.right] +
mov ecx [ebp+mi.rcWork.right] +
sub eax [ebp+pwi.rcWindow.left] +
sub ecx [ebp+mi.rcWork.left] +
cmp eax ecx +
jl loc_109AA6F  +
mov eax [ebp+pwi.rcWindow.bottom] +
mov ecx [ebp+mi.rcWork.bottom] +
sub eax [ebp+pwi.rcWindow.top] +
sub ecx [ebp+mi.rcWork.top] +
cmp eax ecx +
jl loc_109AA6F  +
xor eax eax +
jmp locret_109AA72  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 22Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+hwnd] eax +
call ds:CreatePopupMenu  +
xor ebx ebx +
mov [ebp+hMenu] eax +
cmp edi ebx +
jz loc_109AAF6  +
mov esi ds:GetSystemMenu +
push ebx  +
push edi  +
call esi  +
push eax  +
mov [ebp+uItem] eax +
call ds:GetMenuItemCount  +
cmp eax 0FFFFFFFFh +
jnz loc_109AADC  +
push 1  +
push edi  +
call esi  +
push ebx  +
push edi  +
call esi  +
mov [ebp+uItem] eax +
push ebx  +
push 0FFFFh  +
push ebx  +
push ebx  +
push [ebp+uItem]  +
push [ebp+hMenu]  +
call ds:SHELL32_67  +
cmp [ebp+hMenu] ebx +
jz loc_109ACB5  +
cmp [ebp+hwnd] ebx +
jz loc_109ACB5  +
or [ebp+uItem] 0FFFFFFFFh +
push 0FFFFFFF0h  +
push [ebp+hwnd]  +
call ds:GetWindowLongW  +
push 3  +
pop esi  +
push [ebp+hwnd]  +
mov [ebp+var_214] eax +
mov [ebp+var_220] ebx +
mov [ebp+uEnable] ebx +
mov [ebp+var_228] ebx +
mov [ebp+var_22C] esi +
call ds:IsIconic  +
mov edi 0F120h +
test eax eax +
jz loc_109AB75  +
and [ebp+var_22C] ebx +
mov [ebp+uItem] edi +
mov [ebp+uEnable] esi +
mov ebx esi +
mov [ebp+var_220] esi +
jmp loc_109AB93  +
test [ebp+var_214] 20000h +
jnz loc_109AB89  +
mov [ebp+uEnable] esi +
jmp loc_109AB93  +
mov [ebp+uItem] 0F020h +
test [ebp+var_214] 10000h +
jz loc_109ABE0  +
push [ebp+hwnd]  +
call ds:IsZoomed  +
test eax eax +
jz loc_109ABE6  +
and [ebp+var_22C] 0 +
test [ebp+var_214] 40000000h +
mov [ebp+var_220] esi +
jnz loc_109ABDE  +
push [ebp+hwnd]  +
call sub_109AA12  +
test eax eax +
jz loc_109ABDE  +
and [ebp+var_220] 0 +
mov ebx esi +
mov [ebp+var_228] esi +
test [ebp+var_214] 40000h +
jnz loc_109ABF4  +
mov ebx esi +
test [ebp+var_214] 400000h +
mov esi ds:EnableMenuItem +
jz loc_109AC12  +
test [ebp+var_214] 70000h +
jz loc_109AC49  +
push ebx  +
mov ebx [ebp+hMenu] +
push 0F000h  +
push ebx  +
call esi  +
push [ebp+uEnable]  +
push 0F020h  +
push ebx  +
call esi  +
push [ebp+var_228]  +
push 0F030h  +
push ebx  +
call esi  +
push [ebp+var_22C]  +
push edi  +
push ebx  +
call esi  +
jmp loc_109AC4F  +
mov ebx [ebp+hMenu] +
push 0  +
push 104h  +
lea eax [ebp+NewItem] +
push eax  +
mov edi 0F060h +
push edi  +
push ebx  +
call ds:GetMenuStringW  +
test eax eax +
jz loc_109AC98  +
lea eax [ebp+NewItem] +
push 9  +
push eax  +
call wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_109AC98  +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+NewItem] +
push eax  +
push edi  +
push ecx  +
push edi  +
push ebx  +
call ds:ModifyMenuW  +
push [ebp+var_220]  +
push 0F010h  +
push ebx  +
call esi  +
push 0  +
push [ebp+uItem]  +
push ebx  +
call ds:SetMenuDefaultItem  +
mov ecx [ebp+var_4] +
mov eax [ebp+hMenu] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
mov ebx [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_10] +
push 1  +
push 1  +
push 21h  +
push edi  +
push ebx  +
mov [ebp+var_4] 80004005h +
call ds:off_10192F8  +
mov [ebp+arg_C] eax +
test eax eax +
jz loc_109ADBB  +
push esi  +
push [ebp+arg_14]  +
push 0FFFFFFFFh  +
push eax  +
call ds:off_10062D4  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_109ADB1  +
and [ebp+arg_10] 0 +
lea eax [ebp+arg_10] +
push eax  +
push offset dword_100670C  +
push [ebp+arg_C]  +
call ds:off_1003E90  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_109ADB1  +
push 40h  +
lea eax [ebp+var_44] +
push 0  +
push eax  +
mov [ebp+var_48] 44h +
call memset  +
mov eax [ebp+arg_0] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_38] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_34] eax +
mov eax 0FF000000h +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
movzx eax [ebp+arg_18] +
add esp 0Ch +
mov [ebp+var_C] eax +
mov eax [ebp+arg_10] +
lea edx [ebp+var_48] +
and esi 0FFFFFFh +
push edx  +
mov [ebp+var_40] esi +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] edi +
mov [ebp+var_18] 50001h +
mov [ebp+var_10] 8 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov eax [ebp+arg_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+arg_C]  +
call ds:off_1035224  +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+0B0h] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea esi [ecx+14h] +
mov edi [esi] +
push 10h  +
call ds:GetKeyState  +
xor ecx ecx +
test ax ax +
setnl cl  +
push ecx  +
push esi  +
call dword ptr [edi+84h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax esi +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
push edi  +
mov edi ds:DeleteObject +
test eax eax +
jz loc_109AE5B  +
push eax  +
call edi  +
and dword ptr [esi+40h] 0 +
mov eax [esi+44h] +
test eax eax +
jz loc_109AE69  +
push eax  +
call edi  +
and dword ptr [esi+44h] 0 +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_109AE97  +
lea eax [ecx+18h] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+54h]  +
test eax eax +
jnz loc_109AE97  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8Ch]  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
lea ecx [esi-14h] +
call sub_1004266  +
test eax eax +
jz loc_109AEDF  +
mov eax [esi] +
lea ecx [ebp+8] +
push ecx  +
push esi  +
call dword ptr [eax+2Ch]  +
add eax [ebp+8] +
push 115h  +
imul eax [ebp+0Ch] +
xor ecx ecx +
push ecx  +
push ecx  +
neg eax  +
push eax  +
push ecx  +
push ecx  +
push dword ptr [esi-10h]  +
jmp loc_109AF0E  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi-10h]  +
call ds:GetParent  +
push eax  +
call ds:GetWindowRect  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
push 115h  +
imul eax [ebp+0Ch] +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
neg eax  +
push eax  +
push ecx  +
push dword ptr [esi-10h]  +
call ds:SetWindowPos  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push edi  +
mov edx ecx +
push 6  +
pop ecx  +
xor eax eax +
mov [ebp+var_1C] 1Ch +
lea edi [ebp+var_18] +
stos   +
mov eax [edx+38h] +
lea edx [ebp+var_1C] +
push edx  +
push [ebp+arg_0]  +
mov [ebp+var_18] 7 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+74h]  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
lea eax [esi+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
test eax eax +
jz loc_109AF82  +
mov eax [esi+0E8h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 4  +
lea eax [ebp+arg_C] +
mov [ebp+var_30] eax +
pop eax  +
mov [ebp+var_28] eax +
mov [ebp+var_18] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_30] +
push eax  +
push 3  +
push [ebp+arg_8]  +
xor ecx ecx +
push [ebp+arg_4]  +
lea edx [ebp+arg_10] +
push [ebp+arg_0]  +
mov [ebp+var_20] edx +
lea edx [ebp+arg_14] +
mov [ebp+var_2C] ecx +
mov [ebp+var_24] ecx +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] ecx +
mov [ebp+var_10] edx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] ecx +
call ds:EventWrite  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
cmp dword ptr [esi+4] 100h +
jnz loc_109B027  +
cmp dword ptr [esi+8] 9 +
jnz loc_109B027  +
mov eax [ebp+8] +
add eax 0D4h +
cmp dword ptr [eax] 0 +
jz loc_109B027  +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jz loc_109B027  +
push esi  +
call ds:TranslateMessage  +
push esi  +
call ds:DispatchMessageW  +
xor eax eax +
jmp loc_109B02A  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
mov eax [eax+20h] +
lea edx [ebp-4] +
push edx  +
push 0  +
push dword ptr [ebp+10h]  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp-4] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
mov eax [eax+20h] +
and dword ptr [ebp-4] 0 +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
movzx edx word ptr [ebp+0Ch] +
shl edx 10h +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp-4] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
mov eax [eax+20h] +
mov ecx [eax] +
push 0  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+24h]  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
lea eax [esi+14h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
xor ebx ebx +
lea edi [esi+18h] +
mov eax [edi] +
push ebx  +
push edi  +
mov [esi+50h] ebx +
mov [esi+54h] ebx +
call dword ptr [eax+34h]  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
call ds:WindowFromPoint  +
cmp eax [esi+4] +
mov eax [edi] +
push ebx  +
push edi  +
jnz loc_109B0FF  +
call dword ptr [eax+28h]  +
jmp loc_109B102  +
call dword ptr [eax+2Ch]  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+20h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi] +
push edi  +
call dword ptr [eax+28h]  +
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-8] +
push ecx  +
lea ecx [ebp+8] +
push ecx  +
mov esi eax +
mov eax [edi] +
lea ecx [ebp-4] +
push ecx  +
dec esi  +
push esi  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jge loc_109B15F  +
or esi 0FFFFFFFFh +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
lea eax [ecx+20h] +
mov ecx [eax] +
push eax  +
xor esi esi +
call dword ptr [ecx+2Ch]  +
cmp eax 1 +
jz loc_109B197  +
add eax 0FFFFFFFEh +
cmp eax 1 +
ja loc_109B1A1  +
xor eax eax +
cmp [ebp+arg_4] esi +
setl al  +
jmp loc_109B19F  +
xor eax eax +
cmp [ebp+arg_4] esi +
setnl al  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
lea eax [ebx+0E0h] +
mov edx [eax] +
push 0FFFFFFFEh  +
pop ecx  +
cmp edx [ebx+0B4h] +
jnz loc_109B1D3  +
mov ecx [ebx+0B8h] +
mov esi [ebp+arg_0] +
push esi  +
mov eax edx +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+30h]  +
push 2  +
push esi  +
push 0  +
push dword ptr [ebx+4]  +
call ds:MapWindowPoints  +
mov eax [ebx+4Ch] +
neg eax  +
sbb eax eax +
and eax 8 +
mov [ebp+arg_0] eax +
xor eax eax +
cmp dword ptr [ebx+3Ch] 0 +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
jnz loc_109B237  +
mov edi ds:GetWindowLongW +
push 0FFFFFFF0h  +
push hWnd  +
call edi  +
push 0FFFFFFECh  +
push hWnd  +
mov [ebp+dwStyle] eax +
call edi  +
push eax  +
push 0  +
push [ebp+dwStyle]  +
lea eax [ebp+Rect] +
push eax  +
call ds:AdjustWindowRectEx  +
lea eax [ebp+arg_0] +
push eax  +
push 0  +
call sub_1014903  +
add ebx 18h +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+10h]  +
sub eax 0 +
jz loc_109B2A2  +
dec eax  +
jz loc_109B284  +
dec eax  +
jz loc_109B274  +
dec eax  +
jnz loc_109B2AD  +
mov ecx [esi] +
mov eax [esi+8] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add eax ecx +
mov [esi] eax +
mov eax [ebp+Rect.top] +
sub eax [ebp+arg_0] +
add [esi+4] eax +
jmp loc_109B2AD  +
mov eax [ebp+arg_0] +
mov ecx [ebp+Rect.right] +
add eax eax +
neg ecx  +
sub ecx eax +
add [esi] ecx +
jmp loc_109B2AD  +
mov ecx [esi] +
mov eax [esi+8] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add eax ecx +
mov ecx [ebp+Rect.bottom] +
mov [esi] eax +
mov eax [ebp+arg_0] +
lea eax [ecx+eax*2] +
add [esi+0Ch] eax +
jmp loc_109B2AD  +
mov eax [ebp+arg_0] +
add eax eax +
sub eax [ebp+Rect.left] +
add [esi+8] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push edi  +
push 10h  +
mov edi ecx +
mov [ebp+var_4] 8007000Eh +
call sub_1002B98  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_109B3E2  +
lea eax [ebp+var_1C] +
push eax  +
mov ecx edi +
call sub_109B1AD  +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
mov eax [ebp+var_14] +
sub eax [ebp+var_1C] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_1C] +
mov [ebp+var_C] eax +
mov eax [ebp+var_10] +
sub eax [ebp+var_18] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_18] +
mov [ebp+var_8] eax +
lea eax [ebp+var_C] +
mov [esi] eax +
lea eax [ebp+var_1C] +
mov [esi+4] eax +
mov eax [ebp+hWnd] +
mov [esi+8] eax +
lea eax [edi+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
sub eax 0 +
jz loc_109B35E  +
dec eax  +
jz loc_109B355  +
dec eax  +
jz loc_109B34C  +
dec eax  +
jnz loc_109B365  +
or dword ptr [esi+0Ch] 20000000h +
jmp loc_109B365  +
or dword ptr [esi+0Ch] 40000000h +
jmp loc_109B365  +
or dword ptr [esi+0Ch] 80000000h +
jmp loc_109B365  +
or dword ptr [esi+0Ch] 60000000h +
push 0  +
mov eax 4000h +
mov word ptr [ebp+var_2C] ax +
lea eax [ebp+var_2C] +
push eax  +
push 0  +
push 153h  +
push offset dword_1069914  +
push offset dword_10128F0  +
push dword ptr [edi+1A0h]  +
mov [ebp+var_24] esi +
call ds:SHLWAPI_484  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_109B3DB  +
cmp dword ptr [esi+8] 0 +
jz loc_109B3BE  +
lea eax [ebp+hWnd] +
push eax  +
push dword ptr [edi+1A4h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_109B3BE  +
push [ebp+hWnd]  +
call ds:SetForegroundWindow  +
push dword ptr [edi+1A4h]  +
push dword ptr [edi+1A8h]  +
push 580h  +
push hWnd  +
call ds:SendMessageW  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
lea ecx [ebp+8] +
push ecx  +
push dword ptr [ebp+0Ch]  +
add esi 0FFFFFFE8h +
mov eax [esi] +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jl loc_109B421  +
cmp dword ptr [ebp+8] 23h +
jl loc_109B421  +
cmp dword ptr [ebp+8] 24h +
jg loc_109B421  +
mov eax [esi] +
push 10h  +
push esi  +
call dword ptr [eax+38h]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
lea eax [ebp+hWnd] +
mov ebx ecx +
push eax  +
push dword ptr [ebx+1A4h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_109B547  +
cmp dword ptr [ebx+0E0h] 0 +
jz loc_109B547  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea edx [ebp+nNumber] +
push edx  +
push 23h  +
lea eax [ebx+14h] +
lea edi [ebx+1Ch] +
mov ecx [edi] +
push eax  +
mov esi 3E8h +
push edi  +
mov [ebp+nNumber] esi +
mov byte ptr [ebp+var_10] 0FFh +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_109B49A  +
mov ecx [edi] +
lea eax [ebp+nNumber] +
push eax  +
push 24h  +
lea eax [ebx+14h] +
push eax  +
push edi  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_109B4C6  +
push 0Fh  +
call ds:GetSystemMetrics  +
mov edi ds:MulDiv +
push esi  +
push 0FFh  +
push [ebp+nNumber]  +
mov [ebp+var_4] eax +
call edi  +
push esi  +
sub esi [ebp+nNumber] +
mov byte ptr [ebp+var_10] al +
push esi  +
push [ebp+var_4]  +
call edi  +
mov [ebp+var_4] eax +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
lea eax [ebp+var_30] +
push eax  +
mov ecx ebx +
call sub_109B1AD  +
mov esi [ebp+Rect.left] +
mov edi [ebp+Rect.top] +
add ebx 18h +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+10h]  +
xor ebx ebx +
sub eax ebx +
jz loc_109B520  +
dec eax  +
jz loc_109B518  +
dec eax  +
jz loc_109B50A  +
dec eax  +
jnz loc_109B526  +
mov edi [ebp+var_2C] +
sub edi [ebp+Rect.bottom] +
add edi [ebp+Rect.top] +
add edi [ebp+var_4] +
jmp loc_109B526  +
mov esi [ebp+var_30] +
sub esi [ebp+Rect.right] +
add esi [ebp+Rect.left] +
add esi [ebp+var_4] +
jmp loc_109B526  +
mov edi [ebp+var_24] +
sub edi [ebp+var_4] +
jmp loc_109B526  +
mov esi [ebp+var_28] +
sub esi [ebp+var_4] +
push 2  +
push [ebp+var_10]  +
push ebx  +
push [ebp+hWnd]  +
call ds:SetLayeredWindowAttributes  +
push 55h  +
push ebx  +
push ebx  +
push edi  +
push esi  +
push ebx  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub esp 18h +
test eax eax +
jz loc_109B569  +
mov ecx [ebp+8] +
mov [ecx+0C0h] eax +
jmp loc_109B59F  +
push esi  +
lea eax [ebp-8] +
push eax  +
call ds:GetCursorPos  +
mov esi [ebp+8] +
lea eax [ebp-18h] +
push eax  +
push dword ptr [esi-10h]  +
call ds:GetWindowRect  +
push dword ptr [ebp-4]  +
lea eax [ebp-18h] +
push dword ptr [ebp-8]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_109B59E  +
and [esi+0C0h] eax +
pop esi  +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
lea eax [esi-18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
xor eax eax +
cmp [ebp+arg_4] eax +
setz al  +
mov [esi+74h] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+0B0h]  +
push [ebp+wParam]  +
push 45Ah  +
push dword ptr [eax-2Ch]  +
call ds:PostMessageW  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
push esi  +
xor edi edi +
call dword ptr [eax+0A8h]  +
test eax eax +
jle loc_109B62F  +
mov eax [esi] +
push 2  +
pop edi  +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_109B62F  +
xor edi edi +
inc edi  +
push edi  +
push 0EF0h  +
push offset dword_1068880  +
call sub_104B3E5  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 0F060h +
cmp eax ecx +
jg loc_109B692  +
jz loc_109B68E  +
sub eax 0 +
jz loc_109B68A  +
sub eax 0F000h +
jz loc_109B685  +
sub eax 10h +
jz loc_109B680  +
sub eax 10h +
jz loc_109B67C  +
sub eax 10h +
jnz loc_109B6A6  +
push 4  +
jmp loc_109B687  +
push 3  +
jmp loc_109B687  +
xor eax eax +
inc eax  +
jmp loc_109B6B8  +
push 2  +
pop eax  +
jmp loc_109B6B8  +
push 6  +
jmp loc_109B687  +
push 5  +
jmp loc_109B687  +
sub eax 0F120h +
jz loc_109B6B6  +
sub eax 0EB3h +
jz loc_109B6B2  +
dec eax  +
jz loc_109B6AE  +
dec eax  +
jz loc_109B6AA  +
push 0Ah  +
jmp loc_109B687  +
push 7  +
jmp loc_109B687  +
push 8  +
jmp loc_109B687  +
push 9  +
jmp loc_109B687  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
push 2  +
pop eax  +
jz loc_109B6E0  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
sub eax 3 +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
push 0F9Dh  +
push offset dword_109B6F8  +
call sub_104B3E5  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
push 6  +
push dword ptr [esi]  +
call ds:KillTimer  +
cmp [ebp+arg_4] 7Fh +
jnz loc_109B741  +
push esi  +
push offset ResultCallBack  +
push dword ptr [esi+4]  +
push 0  +
push 313h  +
push [ebp+hWnd]  +
call ds:SendMessageCallbackW  +
jmp loc_109B759  +
push 0  +
push 0  +
push 453h  +
push dword ptr [esi]  +
call ds:SendMessageW  +
push esi  +
call sub_1002BCA  +
pop ecx  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push 14h  +
mov esi ecx +
call ds:Sleep  +
push 8  +
call sub_1002B98  +
mov ebx eax +
mov eax [esi+4] +
pop ecx  +
mov [ebx] eax +
mov eax [ebp+arg_4] +
push 6  +
mov [ebx+4] eax +
push dword ptr [esi+4]  +
call ds:KillTimer  +
push 0  +
push 7D0h  +
push 6  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
cmp dword_10B24CC 0 +
jz loc_109B80C  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109B7BC  +
test al al +
jnz loc_109B80C  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_109B80C  +
mov eax dword_10B24C0 +
push edi  +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_109B80B  +
cmp edx edi +
jnz loc_109B80B  +
push offset dword_1068950  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
pop edi  +
push ebx  +
push offset ResultCallBack  +
push 2  +
push 0  +
push 7Fh  +
push [ebp+hWnd]  +
call ds:SendMessageCallbackW  +
test eax eax +
jnz loc_109B82C  +
push ebx  +
call sub_1002BCA  +
pop ecx  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_109B848  +
xor eax eax +
jmp loc_109B867  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_109B856  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi] +
test eax eax +
jz loc_109B862  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
or dword ptr [esi] 0FFFFFFFFh +
or dword ptr [esi+4] 0FFFFFFFFh +
push edi  +
mov edi ecx +
lea eax [edi+18h] +
mov ecx [eax] +
push eax  +
mov [ebp+var_4] 80004005h +
call dword ptr [ecx+10h]  +
mov [ebp+arg_8] eax +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [edi+98h]  +
call ds:GetWindowRect  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jz loc_109B8C8  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jnz loc_109B9E3  +
cmp ebx [edi+0E4h] +
jnz loc_109B9E3  +
mov eax [edi+0ACh] +
xor ebx ebx +
cmp eax ebx +
jnz loc_109B905  +
mov eax [edi+0A8h] +
push dword ptr [edi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
push eax  +
mov ecx edi +
call sub_109AE71  +
cmp eax ebx +
jz loc_109BA97  +
mov edi [edi+0E8h] +
mov ecx [edi] +
lea edx [ebp+rc] +
push edx  +
push eax  +
push edi  +
call dword ptr [ecx+68h]  +
test eax eax +
jz loc_109BA97  +
cmp [ebp+arg_8] 3 +
jz loc_109B952  +
cmp [ebp+arg_8] 1 +
jz loc_109B952  +
mov eax [ebp+Rect.left] +
sub eax [ebp+Rect.right] +
mov ecx [ebp+rc.top] +
add eax [ebp+rc.right] +
add eax [ebp+rc.left] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi] eax +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
cdq   +
sub eax edx +
sar eax 1 +
sub ecx eax +
mov [esi+4] ecx +
jmp loc_109B97F  +
mov eax [ebp+Rect.left] +
sub eax [ebp+Rect.right] +
sub eax [ebp+rc.left] +
add eax [ebp+rc.right] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+rc.left] +
cmp [ebp+arg_8] 3 +
mov [esi] eax +
jnz loc_109B979  +
mov eax [ebp+Rect.top] +
sub eax [ebp+Rect.bottom] +
add eax [ebp+rc.top] +
jmp loc_109B97C  +
mov eax [ebp+rc.bottom] +
mov [esi+4] eax +
push ebx  +
lea eax [ebp+Points] +
push eax  +
push ebx  +
lea eax [ebp+rc] +
push eax  +
call ds:MonitorFromRect  +
push eax  +
call sub_1002F19  +
mov eax [ebp+var_2C] +
sub eax [ebp+Rect.right] +
mov ecx [ebp+Rect.left] +
add eax ecx +
mov ecx [esi] +
cmp ecx eax +
mov edx ecx +
jl loc_109B9AA  +
mov edx eax +
cmp [ebp+Points.x] edx +
jle loc_109B9B4  +
mov eax [ebp+Points.x] +
jmp loc_109B9BA  +
cmp ecx eax +
jge loc_109B9BA  +
mov eax ecx +
mov ecx [ebp+Rect.top] +
mov [esi] eax +
mov eax [ebp+var_28] +
sub eax [ebp+Rect.bottom] +
add eax ecx +
mov ecx [esi+4] +
cmp ecx eax +
mov edx ecx +
jl loc_109B9D2  +
mov edx eax +
cmp [ebp+Points.y] edx +
jle loc_109BA8B  +
mov eax [ebp+Points.y] +
jmp loc_109BA91  +
mov eax [ebx] +
lea ecx [ebp+Points] +
push ecx  +
push [ebp+arg_4]  +
push ebx  +
call dword ptr [eax+30h]  +
push 2  +
lea eax [ebp+Points] +
push eax  +
xor ebx ebx +
push ebx  +
push dword ptr [edi+4]  +
call ds:MapWindowPoints  +
mov eax [ebp+var_2C] +
sub eax [ebp+Points.x] +
sub eax [ebp+Rect.right] +
add eax [ebp+Rect.left] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+Points.x] +
cmp [ebp+arg_8] 1 +
mov [esi] eax +
jz loc_109BA29  +
mov eax [ebp+Points.y] +
sub eax [ebp+Rect.bottom] +
add eax [ebp+Rect.top] +
jmp loc_109BA2C  +
mov eax [ebp+var_28] +
mov [esi+4] eax +
push ebx  +
lea eax [ebp+rc] +
push eax  +
push ebx  +
push dword ptr [edi+4]  +
call ds:MonitorFromWindow  +
push eax  +
call sub_1002F19  +
mov eax [ebp+rc.right] +
sub eax [ebp+Rect.right] +
mov ecx [ebp+Rect.left] +
add eax ecx +
mov ecx [esi] +
cmp ecx eax +
mov edx ecx +
jl loc_109BA59  +
mov edx eax +
cmp [ebp+rc.left] edx +
jle loc_109BA63  +
mov eax [ebp+rc.left] +
jmp loc_109BA69  +
cmp ecx eax +
jge loc_109BA69  +
mov eax ecx +
mov ecx [ebp+Rect.top] +
mov [esi] eax +
mov eax [ebp+rc.bottom] +
sub eax [ebp+Rect.bottom] +
add eax ecx +
mov ecx [esi+4] +
cmp ecx eax +
mov edx ecx +
jl loc_109BA81  +
mov edx eax +
cmp [ebp+rc.top] edx +
jle loc_109BA8B  +
mov eax [ebp+rc.top] +
jmp loc_109BA91  +
cmp ecx eax +
jge loc_109BA91  +
mov eax ecx +
mov [ebp+var_4] ebx +
mov [esi+4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+90h] +
test eax eax +
jz loc_109BAC1  +
mov ecx [eax] +
jmp loc_109BAC3  +
xor ecx ecx +
mov eax [ebp+arg_4] +
cmp eax ecx +
mov ecx [edi+90h] +
mov ecx [ecx+4] +
jnz loc_109BAF5  +
mov ebx [ecx+eax*4-4] +
mov esi [ebx] +
lea eax [ebp+rc] +
push eax  +
push ebx  +
call dword ptr [esi+98h]  +
push eax  +
push ebx  +
call dword ptr [esi+34h]  +
mov eax [ebp+rc.right] +
add [ebp+rc.right] 2 +
mov [ebp+rc.left] eax +
jmp loc_109BB0E  +
mov eax [ecx+eax*4] +
mov ecx [eax] +
lea edx [ebp+rc] +
push edx  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+34h]  +
mov eax [ebp+rc.left] +
sub [ebp+rc.left] 2 +
mov [ebp+rc.right] eax +
xor esi esi +
push esi  +
push 1  +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
mov eax [edi+3Ch] +
cmp eax esi +
jz loc_109BB3A  +
lea ecx [ebp+var_4] +
push ecx  +
push 0EDBh  +
push esi  +
push esi  +
push eax  +
call ds:GetThemeColor  +
test eax eax +
jge loc_109BB45  +
push 12h  +
call ds:GetSysColor  +
mov [ebp+var_4] eax +
push [ebp+var_4]  +
push 1  +
push esi  +
call ds:CreatePen  +
mov [ebp+arg_4] eax +
cmp eax esi +
jnz loc_109BB63  +
push 7  +
call ds:GetStockObject  +
mov [ebp+arg_4] eax +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:SelectObject  +
mov ecx edi +
mov [ebp+var_10] eax +
call sub_1004266  +
mov ebx ds:Polyline +
push 4  +
test eax eax +
jz loc_109BC20  +
mov eax [ebp+rc.right] +
sub eax [ebp+rc.left] +
cdq   +
sub eax edx +
mov esi eax +
mov eax [ebp+rc.top] +
sar esi 1 +
add esi [ebp+rc.left] +
lea ecx [eax+2] +
mov [ebp+var_34] eax +
mov [ebp+var_2C] eax +
lea edx [esi+3] +
lea eax [ebp+var_40] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_8] edx +
mov [ebp+var_38] edx +
lea edx [esi-2] +
lea edi [esi+1] +
mov [ebp+var_40.x] edi +
mov [ebp+var_40.y] ecx +
mov [ebp+var_C] edx +
mov [ebp+var_30] edx +
mov [ebp+var_28] esi +
mov [ebp+var_24] ecx +
call ebx  +
mov eax [ebp+rc.bottom] +
mov ecx [ebp+rc.top] +
dec eax  +
mov [ebp+var_34] eax +
mov [ebp+var_2C] eax +
push 4  +
lea eax [ebp+var_40] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_40.x] esi +
mov [ebp+var_40.y] ecx +
mov [ebp+var_38] esi +
mov [ebp+var_30] edi +
mov [ebp+var_28] edi +
mov [ebp+var_24] ecx +
call ebx  +
mov ecx [ebp+rc.bottom] +
mov edx [ebp+var_8] +
lea eax [ecx-3] +
mov [ebp+var_38] edx +
mov edx [ebp+var_C] +
dec ecx  +
mov [ebp+var_40.x] edi +
mov [ebp+var_40.y] eax +
mov [ebp+var_34] ecx +
mov [ebp+var_30] edx +
mov [ebp+var_28] esi +
mov [ebp+var_24] eax +
jmp loc_109BCB2  +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
cdq   +
sub eax edx +
mov esi eax +
mov eax [ebp+rc.left] +
sar esi 1 +
add esi [ebp+rc.top] +
lea ecx [eax+2] +
mov [ebp+var_38] eax +
mov [ebp+var_30] eax +
lea eax [esi+3] +
mov [ebp+var_8] eax +
mov [ebp+var_2C] eax +
lea eax [ebp+var_40] +
push eax  +
push [ebp+arg_0]  +
lea edx [esi-2] +
lea edi [esi+1] +
mov [ebp+var_40.x] ecx +
mov [ebp+var_40.y] esi +
mov [ebp+var_C] edx +
mov [ebp+var_34] edx +
mov [ebp+var_28] ecx +
mov [ebp+var_24] edi +
call ebx  +
mov eax [ebp+rc.right] +
mov ecx [ebp+rc.left] +
dec eax  +
mov [ebp+var_38] eax +
mov [ebp+var_30] eax +
push 4  +
lea eax [ebp+var_40] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_40.x] ecx +
mov [ebp+var_40.y] esi +
mov [ebp+var_34] esi +
mov [ebp+var_2C] edi +
mov [ebp+var_28] ecx +
mov [ebp+var_24] edi +
call ebx  +
mov ecx [ebp+rc.right] +
mov edx [ebp+var_C] +
lea eax [ecx-3] +
dec ecx  +
mov [ebp+var_38] ecx +
mov [ebp+var_30] ecx +
mov ecx [ebp+var_8] +
mov [ebp+var_40.x] eax +
mov [ebp+var_40.y] esi +
mov [ebp+var_34] edx +
mov [ebp+var_28] eax +
mov [ebp+var_24] edi +
push 4  +
lea eax [ebp+var_40] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_2C] ecx +
call ebx  +
push [ebp+var_10]  +
push [ebp+arg_0]  +
call ds:SelectObject  +
push [ebp+arg_4]  +
call ds:DeleteObject  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1004266  +
mov ecx eax +
test ecx ecx +
jz loc_109BD01  +
mov eax [ebp+arg_10] +
sub eax [ebp+arg_8] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+arg_8] +
jmp loc_109BD0F  +
mov eax [ebp+arg_14] +
sub eax [ebp+arg_C] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+arg_C] +
test ecx ecx +
mov ecx [ebp+arg_0] +
jnz loc_109BD19  +
mov ecx [ebp+arg_4] +
xor edx edx +
cmp [ebp+arg_18] edx +
jz loc_109BD27  +
cmp ecx eax +
setnle dl  +
jmp loc_109BD2C  +
cmp ecx eax +
setl dl  +
mov eax edx +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push edi  +
lea eax [ebp+hWnd] +
mov edi ecx +
push eax  +
push dword ptr [edi+1A4h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_109BFC7  +
push ebx  +
push esi  +
mov esi ds:GetWindowRect +
lea eax [ebp+Y] +
push eax  +
push [ebp+hWnd]  +
call esi  +
mov ecx edi +
call sub_1004266  +
mov [ebp+var_C] eax +
lea eax [ebp+var_54] +
push eax  +
push dword ptr [edi+4]  +
call ds:GetParent  +
push eax  +
call esi  +
mov eax [edi+154h] +
mov esi ds:ClientToScreen +
mov [ebp+Point.x] eax +
mov eax [edi+158h] +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [edi+4]  +
call esi  +
mov eax [ebp+nNumber] +
mov [ebp+X] eax +
mov eax [ebp+nDenominator] +
mov [ebp+var_18] eax +
lea eax [ebp+X] +
push eax  +
push dword ptr [edi+4]  +
call esi  +
lea eax [ebp+var_44] +
push eax  +
mov ecx edi +
call sub_109B1AD  +
lea eax [edi+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
xor esi esi +
xor ebx ebx +
mov [ebp+var_10] eax +
cmp [ebp+var_C] esi +
jz loc_109BDE3  +
mov eax [ebp+var_38] +
sub eax [ebp+var_40] +
jmp loc_109BDE9  +
mov eax [ebp+var_3C] +
sub eax [ebp+var_44] +
mov [ebp+nDenominator] eax +
mov eax [edi+4Ch] +
neg eax  +
sbb eax eax +
and eax 8 +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push esi  +
mov [ebp+nNumber] 64h +
call sub_1014903  +
mov eax [ebp+var_10] +
xor edx edx +
sub eax edx +
jz loc_109BE80  +
dec eax  +
jz loc_109BE66  +
dec eax  +
jz loc_109BE43  +
dec eax  +
jnz loc_109BEAD  +
mov esi [ebp+var_50] +
sub esi [ebp-28h] +
mov ebx [ebp-30h] +
sub ebx [ebp-28h] +
sub esi [ebp+var_4] +
mov eax [ebp+Point.y] +
sub eax [edi+134h] +
add ebx [ebp+var_38] +
add esi [ebp-30h] +
sub eax [ebp+var_18] +
jmp loc_109BE98  +
mov esi [ebp+var_54] +
sub esi [ebp-2Ch] +
mov ebx [ebp+Y] +
sub ebx [ebp-2Ch] +
sub esi [ebp+var_4] +
mov eax [ebp+Point.x] +
sub eax [edi+130h] +
add ebx [ebp+var_3C] +
add esi [ebp+Y] +
sub eax [ebp+X] +
jmp loc_109BE98  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_48] +
mov ebx [ebp+var_40] +
lea esi [eax+ecx] +
mov eax [ebp+var_18] +
sub eax [edi+134h] +
sub eax [ebp+Point.y] +
jmp loc_109BE98  +
mov eax [ebp+var_4] +
mov ecx [ebp+var_4C] +
mov ebx [ebp+var_44] +
lea esi [eax+ecx] +
mov eax [ebp+X] +
sub eax [edi+130h] +
sub eax [ebp+Point.x] +
push [ebp+nDenominator]  +
push 64h  +
push eax  +
call ds:MulDiv  +
mov [ebp+nNumber] eax +
test eax eax +
jle loc_109BEB2  +
xor edx edx +
mov ecx [ebp+nNumber] +
jmp loc_109BEB6  +
xor ecx ecx +
xor edx edx +
push 64h  +
pop eax  +
cmp ecx eax +
jge loc_109BEC7  +
cmp [ebp+nNumber] edx +
jg loc_109BECA  +
mov [ebp+nNumber] edx +
jmp loc_109BECA  +
mov [ebp+nNumber] eax +
mov byte ptr [ebp+var_14] 0FFh +
cmp [ebp+arg_8] edx +
jz loc_109BEEA  +
mov [ebp+nDenominator] esi +
cmp [ebp+nNumber] edx +
jnz loc_109BF35  +
add edi 14h +
mov eax [edi] +
push edx  +
push edi  +
call dword ptr [eax+7Ch]  +
jmp loc_109BFC5  +
mov edi ds:MulDiv +
push eax  +
push [ebp+nNumber]  +
mov eax ebx +
sub eax esi +
cdq   +
xor eax edx +
sub eax edx +
push eax  +
call edi  +
cmp [ebp+var_10] 3 +
jz loc_109BF42  +
cmp [ebp+var_10] 2 +
jz loc_109BF42  +
add eax ebx +
cmp eax ebx +
mov [ebp+nDenominator] eax +
mov ecx eax +
jg loc_109BF19  +
mov ecx ebx +
cmp ecx esi +
jge loc_109BF59  +
cmp eax ebx +
jg loc_109BF24  +
mov [ebp+nDenominator] ebx +
push 64h  +
push 0FFh  +
push [ebp+nNumber]  +
call edi  +
mov byte ptr [ebp+var_14] al +
xor edx edx +
mov eax [ebp+nDenominator] +
cmp [ebp+var_C] edx +
jz loc_109BF5E  +
mov [ebp+var_18] eax +
jmp loc_109BF61  +
mov ecx ebx +
sub ecx eax +
cmp ecx esi +
mov [ebp+nDenominator] ecx +
mov eax ecx +
jg loc_109BF51  +
mov eax esi +
cmp eax ebx +
jge loc_109BF21  +
cmp ecx esi +
jg loc_109BF24  +
mov [ebp+nDenominator] esi +
jmp loc_109BF24  +
mov [ebp+X] eax +
cmp [ebp+arg_8] edx +
jnz loc_109BF7B  +
cmp [ebp+var_C] edx +
jz loc_109BF73  +
mov eax [ebp+var_18] +
cmp eax [ebp-30h] +
jmp loc_109BF79  +
mov eax [ebp+X] +
cmp eax [ebp+Y] +
jz loc_109BFC5  +
push 2  +
push [ebp+var_14]  +
push edx  +
push [ebp+hWnd]  +
call ds:SetLayeredWindowAttributes  +
xor esi esi +
push 51h  +
pop eax  +
cmp [ebp+arg_8] esi +
jnz loc_109BF97  +
push 55h  +
pop eax  +
push eax  +
push esi  +
push esi  +
cmp [ebp+var_C] esi +
jz loc_109BFA7  +
push [ebp+var_18]  +
push [ebp+Y]  +
jmp loc_109BFAD  +
push dword ptr [ebp-30h]  +
push [ebp+X]  +
push esi  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
cmp [ebp+arg_8] esi +
jz loc_109BFC5  +
push [ebp+hWnd]  +
call ds:SetFocus  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [esi+150h] edi +
cmp [ebp+arg_0] edi +
jnz loc_109BFFB  +
push 1  +
push dword ptr [esi+160h]  +
push dword ptr [esi+15Ch]  +
call sub_109BD37  +
push edi  +
push edi  +
push edi  +
push 13Ch  +
push offset dword_1069914  +
push offset dword_10128F0  +
push dword ptr [esi+1A0h]  +
call ds:SHLWAPI_484  +
push 1  +
push edi  +
push dword ptr [esi+4]  +
call ds:InvalidateRect  +
cmp [ebp+arg_0] edi +
jnz loc_109C047  +
lea eax [ebp+hWnd] +
push eax  +
push dword ptr [esi+1A4h]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_109C047  +
push [ebp+hWnd]  +
call ds:SetForegroundWindow  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0A8h] 0 +
jz loc_109C069  +
cmp dword ptr [esi+0B0h] 0FFFFFFFFh +
jnz loc_109C084  +
push 0  +
call sub_103475A  +
test eax eax +
jnz loc_109C084  +
push 0  +
lea eax [esi+14h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+84h]  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
lea eax [esi+1Ch] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_109C0D0  +
lea edi [esi+118h] +
mov eax [edi] +
test eax eax +
jz loc_109C0B2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
lea eax [esi+120h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+11Ch] +
push eax  +
call sub_1002BEE  +
push edi  +
call sub_1002BEE  +
lea edi [esi+8Ch] +
cmp dword ptr [edi] 0 +
jz loc_109C0E4  +
call ds:BufferedPaintUnInit  +
and dword ptr [edi] 0 +
mov eax [esi+3Ch] +
test eax eax +
jz loc_109C0F6  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+3Ch] 0 +
lea eax [esi+0E8h] +
push eax  +
call sub_1002BEE  +
mov eax [esi+98h] +
test eax eax +
jz loc_109C113  +
push eax  +
call ds:DestroyWindow  +
and dword ptr [esi+4] 0 +
pop edi  +
mov ecx esi +
pop esi  +
jmp loc_109AE41  +
***
add ecx 14Ch +
cmp dword ptr [ecx] 0 +
jz locret_109C13C  +
push 0  +
push offset loc_1040149  +
call sub_100831C  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+12Ch] edi +
jz loc_109C1DA  +
mov eax [esi+12Ch] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset stru_10120BC  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_109C19C  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_109C18F  +
inc edi  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jnz loc_109C1EF  +
mov esi [esi+12Ch] +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push offset dword_104332C  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_109C1DA  +
push [ebp+lParam]  +
mov eax [ebp+var_C] +
push [ebp+wParam]  +
mov ecx [eax] +
push [ebp+Msg]  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_109C1CD  +
xor edi edi +
inc edi  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jnz loc_109C1EF  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov eax [edi+10h] +
fild  dword ptr [edi+10h] +
mov ebx ecx +
test eax eax +
jge loc_109C21D  +
fadd  ds:dbl_1069928 +
fdiv  ds:dbl_1007C88 +
mov eax [ebx+118h] +
and [ebp+var_4] 0 +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push ecx  +
push ecx  +
fstp  [ebp+var_14] +
fild  dword ptr [edi+8] +
fstp  [esp+38h+var_38] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_109C439  +
push [ebp+arg_4]  +
mov eax [ebp+var_4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
test esi esi +
jl loc_109C439  +
mov eax [ebx+118h] +
and [ebp+arg_8] 0 +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jl loc_109C42C  +
fild  dword ptr [edi+0Ch] +
mov eax [ebx+120h] +
and [ebp+var_C] 0 +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
sub esp 10h +
fstp  [esp+64h+var_5C] +
fld  [ebp+var_14] +
fstp  [esp+64h+var_64] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
test esi esi +
jl loc_109C41F  +
push [ebp+var_C]  +
mov eax [ebp+arg_8] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_109C41F  +
mov eax [ebp+arg_8] +
fldz   +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push ecx  +
push ecx  +
fstp  [esp+80h+var_80] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_109C41F  +
mov eax [ebp+arg_8] +
fld  [ebp+var_14] +
mov ecx [eax] +
lea edx [ebp+var_14+4] +
push edx  +
push ecx  +
push ecx  +
fstp  [esp+94h+var_94] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jl loc_109C41F  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push dword ptr [ebp+var_14+4]  +
push [ebp+var_18]  +
push eax  +
call dword ptr [ecx+20h]  +
mov esi eax +
test esi esi +
jl loc_109C41F  +
mov eax [ebp+arg_8] +
mov ecx [eax] +
push 0  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov esi eax +
test esi esi +
jl loc_109C41F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
and [ebp+var_8] 0 +
lea edx [ebp+var_8] +
push edx  +
push offset dword_10065A4  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_109C412  +
mov eax [ebp+arg_8] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov esi eax +
test esi esi +
jl loc_109C412  +
mov ebx [ebx+11Ch] +
mov eax [ebx] +
lea ecx [ebp+var_20] +
push ecx  +
push ebx  +
call dword ptr [eax+20h]  +
mov esi eax +
test esi esi +
jl loc_109C412  +
mov eax [ebp+arg_8] +
fld  [ebp+var_20] +
mov ecx [eax] +
push 0  +
push ecx  +
push ecx  +
fstp  [esp+0E0h+var_E0] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov esi eax +
test esi esi +
jl loc_109C412  +
cmp dword_10B24CC 0 +
jz loc_109C412  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109C3BC  +
test al al +
jnz loc_109C412  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_109C412  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_109C412  +
cmp edx ebx +
jnz loc_109C412  +
push [ebp+arg_4]  +
push 0  +
push [ebp+arg_0]  +
push offset dword_1046648  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046175  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_109C41F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_109C42C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_109C439  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_109C446  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
push esi  +
xor esi esi +
add eax 0FCh +
inc esi  +
cmp dword ptr [eax] 0 +
jz loc_109C4D2  +
mov eax [eax] +
and dword ptr [ebp-4] 0 +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jl loc_109C4C5  +
mov eax [ebp-4] +
test eax eax +
jz loc_109C4D2  +
and dword ptr [ebp+8] 0 +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jl loc_109C4B8  +
mov eax [ebp+8] +
test eax eax +
jz loc_109C4C5  +
mov ecx [eax] +
fldz   +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
mov eax [ebp+8] +
test eax eax +
jz loc_109C4C5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
test eax eax +
jz loc_109C4D2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
xor esi esi +
and [ebp-4] esi +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+74h]  +
test eax eax +
jnz loc_109C50C  +
mov eax [ebp-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
and dword ptr [ebp+8] 0 +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push eax  +
call dword ptr [ecx+74h]  +
test eax eax +
jnz loc_109C553  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp esi eax +
jnb loc_109C553  +
mov eax [ebp+8] +
test eax eax +
jz loc_109C541  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
test eax eax +
jz loc_109C54E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
or eax 0FFFFFFFFh +
jmp loc_109C570  +
mov eax [ebp+8] +
test eax eax +
jz loc_109C560  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-4] +
test eax eax +
jz loc_109C56D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
mov esi ecx +
mov eax [esi+90h] +
xor ecx ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_14] esi +
mov [ebp+var_10] 1 +
cmp eax ecx +
jz loc_109C5A6  +
mov eax [eax] +
mov [ebp+var_C] eax +
jmp loc_109C5A9  +
mov [ebp+var_C] ecx +
cmp [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
jle loc_109C6EE  +
push ebx  +
jmp loc_109C5BB  +
mov esi [ebp+var_14] +
mov eax [esi+90h] +
mov eax [eax+4] +
mov ecx [ebp+var_8] +
mov ebx [eax+ecx*4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+50h]  +
test eax eax +
jz loc_109C5E4  +
mov ecx esi +
call sub_1004226  +
test al 1 +
jz loc_109C5E4  +
xor eax eax +
inc eax  +
jmp loc_109C5E6  +
xor eax eax +
mov ecx [ebx] +
lea edx [ebp+var_18] +
push edx  +
xor edx edx +
test eax eax +
setz dl  +
push 0  +
push edx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ebx  +
call dword ptr [ecx+28h]  +
mov esi eax +
sub esi [ebp+var_18] +
mov eax [ebp+var_C] +
sub edi esi +
dec eax  +
cmp [ebp+var_8] eax +
jge loc_109C610  +
dec edi  +
dec edi  +
test edi edi +
jge loc_109C6DE  +
cmp edi 0FFFFFFFEh +
jl loc_109C628  +
inc [ebp+var_10]  +
mov edi [ebp+arg_0] +
jmp loc_109C6DE  +
add edi esi +
and [ebp+var_4] 0 +
mov eax [ebx] +
inc [ebp+var_10]  +
push ebx  +
call dword ptr [eax+0A8h]  +
cmp eax 1 +
mov [ebp+var_20] eax +
jle loc_109C6B2  +
cmp [ebp+var_4] eax +
jge loc_109C6B2  +
mov ecx [ebp+var_14] +
call sub_1004226  +
test al 2 +
jnz loc_109C6B2  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jz loc_109C673  +
mov eax [ebp+var_14] +
push 0  +
push 6  +
add eax 1Ch +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_109C6B2  +
mov eax [ebx] +
lea ecx [ebp+var_1C] +
push ecx  +
push 1  +
push 1  +
push [ebp+var_4]  +
push [ebp+var_4]  +
push ebx  +
call dword ptr [eax+28h]  +
sub eax [ebp+var_1C] +
cmp edi [ebp+arg_0] +
jnz loc_109C696  +
lea ecx [eax+2] +
cmp ecx edi +
jg loc_109C6AB  +
cmp edi eax +
jl loc_109C6BF  +
sub edi eax +
sub esi eax +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_20] +
jge loc_109C6BF  +
jmp loc_109C673  +
inc [ebp+var_4]  +
sub esi eax +
jmp loc_109C6BF  +
cmp edi [ebp+arg_0] +
jnz loc_109C6BF  +
lea eax [esi+2] +
cmp eax [ebp+arg_0] +
jg loc_109C6DC  +
mov ecx [ebp+arg_0] +
mov eax [ebp+var_C] +
mov edi ecx +
sub edi esi +
dec eax  +
cmp [ebp+var_8] eax +
jge loc_109C6D1  +
dec edi  +
dec edi  +
test edi edi +
jge loc_109C6DE  +
mov edi ecx +
jmp loc_109C62E  +
xor edi edi +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_C] +
jl loc_109C5B8  +
pop ebx  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
mov esi ebx +
lea edi [ebp+rc] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+arg_4] +
mov [ebp+var_8] ecx +
mov [ebp+var_C] 1 +
jmp loc_109C770  +
mov eax [ebp+var_8] +
mov eax [eax+90h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
cmp esi [ebp+arg_4] +
jnz loc_109C73F  +
mov edx [ebp+arg_8] +
jmp loc_109C742  +
or edx 0FFFFFFFFh +
cmp esi [ebp+arg_C] +
jnz loc_109C74C  +
mov ecx [ebp+arg_10] +
jmp loc_109C74F  +
or ecx 0FFFFFFFFh +
mov edi [eax] +
push 0  +
push 1  +
push 1  +
push ecx  +
push edx  +
push eax  +
call dword ptr [edi+28h]  +
add [ebp+var_4] eax +
cmp esi [ebp+arg_C] +
jge loc_109C76A  +
push 2  +
pop eax  +
jmp loc_109C76C  +
xor eax eax +
add [ebp+var_4] eax +
inc esi  +
cmp esi [ebp+arg_C] +
jle loc_109C726  +
mov edi [ebx+0Ch] +
sub edi [ebx+4] +
cmp edi [ebp+var_4] +
jge loc_109C7F7  +
mov eax [ebp+arg_C] +
cmp [ebp+arg_4] eax +
jnz loc_109C7EE  +
cmp [ebp+arg_8] 0FFFFFFFFh +
jnz loc_109C792  +
and [ebp+arg_8] 0 +
cmp [ebp+arg_10] 0FFFFFFFFh +
jnz loc_109C7DF  +
mov ecx [ebp+var_8] +
mov ecx [ecx+90h] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jz loc_109C7D2  +
cmp eax 3 +
jnz loc_109C7CC  +
mov eax [ebp+var_8] +
push 0  +
push 6  +
add eax 1Ch +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_109C7D2  +
and [ebp+arg_10] 0 +
jmp loc_109C7DF  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
dec eax  +
mov [ebp+arg_10] eax +
mov ecx [ebp+arg_10] +
xor eax eax +
cmp [ebp+arg_8] ecx +
setz al  +
test eax eax +
jnz loc_109C7F7  +
and [ebp+var_C] 0 +
jmp loc_109C8E9  +
cmp dword_10B24CC 0 +
jz loc_109C86B  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109C80D  +
test al al +
jnz loc_109C86B  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_109C86B  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx esi +
cmp ecx eax +
jnz loc_109C86B  +
cmp edx ebx +
jnz loc_109C86B  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push edi  +
push offset dword_109C8F8  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046565  +
mov ebx [ebp+arg_4] +
jmp loc_109C8E4  +
mov eax [ebp+var_8] +
mov eax [eax+90h] +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
cmp ebx [ebp+arg_4] +
jnz loc_109C889  +
mov eax [ebp+arg_8] +
jmp loc_109C88C  +
or eax 0FFFFFFFFh +
cmp ebx [ebp+arg_C] +
jnz loc_109C899  +
mov ecx [ebp+arg_10] +
mov [ebp+arg_14] ecx +
jmp loc_109C89D  +
or [ebp+arg_14] 0FFFFFFFFh +
mov ecx [esi] +
push 0  +
push 1  +
push 1  +
push [ebp+arg_14]  +
push eax  +
push esi  +
call dword ptr [ecx+28h]  +
lea ecx [ebp+rc] +
push ecx  +
push [ebp+arg_14]  +
mov edi eax +
mov eax [ebp+rc.top] +
mov ecx ebx +
sub ecx [ebp+arg_4] +
add eax edi +
neg ecx  +
sbb ecx ecx +
not ecx  +
and ecx [ebp+arg_0] +
mov [ebp+rc.bottom] eax +
mov eax [esi] +
push ecx  +
push esi  +
call dword ptr [eax+38h]  +
add edi 2 +
push edi  +
push 0  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
inc ebx  +
cmp ebx [ebp+arg_C] +
jle loc_109C870  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-14h] +
call sub_1005D55  +
test eax eax +
jz loc_109C938  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [esi] +
push 1  +
push 0  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+18h]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-14h] +
call sub_1005D55  +
test eax eax +
jz loc_109C981  +
cmp [esi+0D0h] eax +
jnz loc_109C981  +
push dword ptr [ebp+10h]  +
lea eax [esi+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
test eax eax +
jz loc_109C981  +
mov esi [esi+0D4h] +
push dword ptr [ebp+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+20h]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
lea eax [ebp+8] +
push eax  +
push 1  +
add ecx 0FFFFFFECh +
call sub_1004304  +
sub eax [ebp+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
cmp [esi+0D0h] edi +
jz loc_109C9D6  +
mov eax [esi+0D4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov [ebp+8] eax +
cmp eax edi +
jnz loc_109CA1A  +
push edi  +
lea ecx [esi-14h] +
call sub_103475A  +
mov [ebp+8] eax +
cmp eax edi +
jnz loc_109CA1A  +
mov eax [esi+7Ch] +
push ebx  +
cmp eax edi +
jz loc_109C9F2  +
mov ebx [eax] +
jmp loc_109C9F4  +
xor ebx ebx +
test ebx ebx +
jle loc_109CA19  +
mov eax [esi+7Ch] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
test eax eax +
jnz loc_109CA12  +
inc edi  +
cmp edi ebx +
jge loc_109CA19  +
jmp loc_109C9F8  +
***
mov dword ptr [ebp+8] 1 +
pop ebx  +
xor eax eax +
cmp [ebp+8] eax +
pop edi  +
setz al  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [eax] edi +
mov [ebp+var_220] eax +
mov eax [ebp+arg_4] +
mov ebx ecx +
mov ecx [ebp+arg_18] +
or dword ptr [ecx] 0FFFFFFFFh +
mov [ebp+var_210] eax +
xor eax eax +
cmp dword ptr [ebp+w2] edi +
mov [ebp+var_218] esi +
setnz al  +
mov [ebp+var_21C] ecx +
mov [ebp+var_214] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_109CAAB  +
cmp [ebp+var_210] 0FFFFFFFFh +
jz loc_109CAAB  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
cmp [ebp+arg_8] edi +
jz loc_109CAD4  +
dec eax  +
cmp [ebp+var_210] eax +
jl loc_109CADC  +
push esi  +
push dword ptr [ebx+90h]  +
call ds:off_100407C  +
xor ecx ecx +
cmp [ebp+arg_8] edi +
setnz cl  +
lea ecx [ecx+ecx-1] +
add eax ecx +
mov ecx [ebx+90h] +
cmp ecx edi +
jz loc_109CAF0  +
mov ecx [ecx] +
jmp loc_109CAF2  +
cmp [ebp+var_210] edi +
jle loc_109CAAB  +
xor eax eax +
cmp [ebp+arg_8] edi +
setnz al  +
lea eax [eax+eax-1] +
add [ebp+var_210] eax +
jmp loc_109CB6C  +
xor ecx ecx +
cmp eax ecx +
jl loc_109CB00  +
xor eax eax +
cmp [ebp+arg_10] edi +
setnz al  +
jmp loc_109CB19  +
cmp eax edi +
jge loc_109CB23  +
cmp [ebp+arg_10] edi +
jz loc_109CB1C  +
mov eax [ebx+90h] +
cmp eax edi +
jz loc_109CB17  +
mov eax [eax] +
jmp loc_109CB19  +
xor eax eax +
dec eax  +
jmp loc_109CB1F  +
or eax 0FFFFFFFFh +
cmp eax edi +
jl loc_109CB64  +
mov ecx [ebx+90h] +
mov ecx [ecx+4] +
mov esi [ecx+eax*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_109CB58  +
cmp [ebp+arg_8] edi +
jz loc_109CB47  +
mov [ebp+var_210] edi +
jmp loc_109CB6C  +
mov eax [esi] +
push esi  +
call dword ptr [eax+98h]  +
mov [ebp+var_210] eax +
jmp loc_109CB6C  +
mov [ebp+var_210] 0FFFFFFFEh +
jmp loc_109CB6C  +
xor esi esi +
mov [ebp+var_214] edi +
cmp [ebp+var_214] edi +
jz loc_109CC07  +
cmp esi edi +
jz loc_109CBF8  +
xor eax eax +
push 206h  +
mov [ebp+w1] ax +
lea eax [ebp-20Ah] +
push edi  +
push eax  +
call memset  +
mov eax [esi] +
add esp 0Ch +
push [ebp+var_210]  +
push esi  +
call dword ptr [eax+0ACh]  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
push 104h  +
lea edx [ebp+w1] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
push dword ptr [ebp+w2]  +
push dword ptr [ebp+w1]  +
call ds:ChrCmpIW  +
test eax eax +
jz loc_109CC05  +
cmp [ebp+var_218] esi +
jnz loc_109CBF6  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_210] +
jge loc_109CBEE  +
test eax eax +
jge loc_109CBF6  +
xor esi esi +
mov [ebp+var_214] esi +
xor edi edi +
cmp [ebp+var_214] edi +
jz loc_109CC07  +
jmp loc_109CA80  +
xor edi edi +
mov eax [ebp+var_220] +
mov ecx [ebp+var_21C] +
mov [eax] esi +
mov eax [ebp+var_210] +
mov [ecx] eax +
mov ecx [ebp+var_4] +
xor eax eax +
cmp esi edi +
pop edi  +
setnz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
add esi 0D4h +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jz loc_109CC82  +
push dword ptr [esi]  +
lea ecx [ebp+8] +
call sub_102ACAA  +
mov eax [ebp+8] +
test eax eax +
jz loc_109CC82  +
mov esi [eax] +
push edi  +
push eax  +
mov edi eax +
call dword ptr [esi+2Ch]  +
push eax  +
push edi  +
call dword ptr [esi+40h]  +
mov eax [ebp+8] +
pop edi  +
test eax eax +
jz loc_109CC82  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ebx [edi-18h] +
mov ecx ebx +
mov dword ptr [ebp-4] 80070490h +
call sub_1005D55  +
mov esi eax +
test esi esi +
jz loc_109CD63  +
and dword ptr [ebp+8] 0 +
cmp dword ptr [ebp+10h] 0 +
jz loc_109CCEF  +
push dword ptr [ebp+10h]  +
mov ecx ebx +
call sub_1009667  +
mov ebx eax +
test ebx ebx +
jz loc_109CCEF  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jge loc_109CCE5  +
and dword ptr [ebp+8] 0 +
jmp loc_109CCEF  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+1Ch]  +
mov [ebp+8] eax +
mov eax [esi] +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp+8]  +
push esi  +
call dword ptr [eax+34h]  +
push 2  +
lea eax [ebp-14h] +
push eax  +
xor esi esi +
push esi  +
push dword ptr [edi-14h]  +
call ds:MapWindowPoints  +
cmp [ebp+14h] esi +
jnz loc_109CD47  +
lea ecx [edi-18h] +
call sub_1004266  +
test eax eax +
jz loc_109CD47  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [edi-14h]  +
call ds:GetParent  +
push eax  +
call ds:GetWindowRect  +
mov eax [ebp-20h] +
sub eax [ebp-10h] +
push eax  +
push esi  +
lea eax [ebp-14h] +
push eax  +
call ds:OffsetRect  +
jmp loc_109CD53  +
mov eax [edi+4Ch] +
sub [ebp-10h] eax +
mov eax [edi+50h] +
add [ebp-8] eax +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+18h]  +
call ds:CopyRect  +
mov [ebp-4] esi +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+8] +
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
lea edx [ebp-8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_109CDB9  +
mov eax [esi] +
push 0  +
push dword ptr [ebp-4]  +
push esi  +
call dword ptr [eax+48h]  +
mov esi [esi+20h] +
mov eax [esi] +
push 1  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
push esi  +
call dword ptr [eax+1Ch]  +
mov eax [ebp-4] +
pop esi  +
test eax eax +
jz loc_109CDC7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-8] +
test eax eax +
jz locret_109CDD4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
mov ecx [edx+70h] +
or eax 0FFFFFFFFh +
test ecx ecx +
jz loc_109CDF3  +
mov ecx [ecx] +
jmp loc_109CDF5  +
xor ecx ecx +
test ecx ecx +
jle loc_109CE0D  +
mov eax [edx+70h] +
mov eax [eax+4] +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
xor ebx ebx +
cmp [ebp+10h] ebx +
push esi  +
setnz bl  +
push edi  +
mov edi [ebp+8] +
push edi  +
lea ebx [ebx+ebx-1] +
lea esi [eax+ebx] +
mov eax [edi] +
call dword ptr [eax+28h]  +
and dword ptr [ebp+0Ch] 0 +
mov [ebp-4] eax +
jmp loc_109CEA5  +
cmp esi [ebp-4] +
jge loc_109CEAE  +
xor eax eax +
cmp [ebp+0Ch] eax +
jnz loc_109CEA9  +
lea ecx [ebp-8] +
push ecx  +
lea ecx [ebp+8] +
push ecx  +
lea ecx [ebp+10h] +
push ecx  +
push esi  +
mov [ebp+10h] eax +
mov [ebp+8] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jl loc_109CEA2  +
push dword ptr [ebp-8]  +
lea ecx [edi-20h] +
push dword ptr [ebp+10h]  +
call sub_109B16C  +
test eax eax +
jz loc_109CE88  +
mov dword ptr [ebp+0Ch] 1 +
jmp loc_109CE8A  +
add esi ebx +
mov eax [ebp+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+8] +
test eax eax +
jz loc_109CEA5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_109CEA5  +
or esi 0FFFFFFFFh +
test esi esi +
jge loc_109CE44  +
cmp esi [ebp-4] +
jl loc_109CEB1  +
or esi 0FFFFFFFFh +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+0Ch]  +
add ecx 0FFFFFFECh +
or edi 0FFFFFFFFh +
call sub_1005D6D  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jz loc_109CF25  +
mov eax [esi] +
push esi  +
call dword ptr [eax+60h]  +
cmp eax edi +
jz loc_109CEF8  +
mov eax [esi] +
push esi  +
call dword ptr [eax+60h]  +
mov edi eax +
jmp loc_109CF25  +
xor edi edi +
cmp [ebp+0Ch] ebx +
jle loc_109CF25  +
mov eax [ebp+8] +
mov eax [eax+7Ch] +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+60h]  +
cmp eax 0FFFFFFFFh +
jz loc_109CF1F  +
mov eax [esi] +
push esi  +
call dword ptr [eax+60h]  +
mov edi eax +
inc edi  +
inc ebx  +
cmp ebx [ebp+0Ch] +
jl loc_109CEFF  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
lea edi [esi-14h] +
push ebx  +
mov ecx edi +
mov dword ptr [ebp-4] 80004005h +
mov [ebp-18h] edi +
call sub_1005D55  +
mov [ebp+0Ch] eax +
test eax eax +
jz loc_109D460  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0B8h]  +
test eax eax +
jnz loc_109D460  +
lea eax [esi-14h] +
neg eax  +
push 2  +
sbb eax eax +
lea edx [ebp-34h] +
and eax esi +
push edx  +
lea ecx [esi+8] +
mov [ebp-24h] ecx +
mov ecx [ecx] +
push eax  +
push dword ptr [ebp-24h]  +
mov dword ptr [ebp-34h] 23h +
mov dword ptr [ebp-30h] 24h +
mov [ebp-2Ch] eax +
call dword ptr [ecx+30h]  +
and dword ptr [ebp+8] 0 +
lea eax [ebp+8] +
push eax  +
push dword ptr [esi+190h]  +
call ds:IUnknown_GetWindow  +
cmp dword ptr [ebp+8] 0 +
jz loc_109CFD7  +
push dword ptr [ebp+8]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_109CFD7  +
mov dword ptr [ebp-20h] 1 +
jmp loc_109CFDB  +
and dword ptr [ebp-20h] 0 +
call ds:GetMessageExtraInfo  +
mov ecx 0FF515780h +
and eax ecx +
sub eax ecx +
neg eax  +
sbb eax eax +
and dword ptr [esi+100h] 0 +
push hWnd  +
inc eax  +
mov [ebp-28h] eax +
call ds:SetForegroundWindow  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+6Ch]  +
xor edx edx +
cmp [edi+0C8h] edx +
jnz loc_109D0B2  +
cmp [edi+0F0h] edx +
jnz loc_109D0B2  +
mov eax [edi+0A8h] +
cmp eax edx +
jz loc_109D09B  +
mov ecx [edi+0ACh] +
mov [ebp-4] ecx +
cmp ecx edx +
jnz loc_109D056  +
push dword ptr [edi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov [ebp-4] eax +
test eax eax +
jz loc_109D09B  +
mov ecx eax +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_109D09B  +
mov eax [edi+0A8h] +
cmp eax [edi+0E4h] +
jnz loc_109D082  +
mov eax [edi+0E8h] +
push dword ptr [ebp-4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_109D085  +
xor eax eax +
inc eax  +
test eax eax +
jz loc_109D09B  +
mov eax [edi+0A8h] +
push dword ptr [ebp-4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+88h]  +
push 0  +
push 0  +
push 411h  +
push dword ptr [edi+98h]  +
call ds:SendMessageW  +
jmp loc_109D0F1  +
push edx  +
push edx  +
push 411h  +
push dword ptr [edi+98h]  +
call ds:SendMessageW  +
push dword ptr [edi+0F0h]  +
push dword ptr [edi+4]  +
call ds:KillTimer  +
push dword ptr [edi+0F4h]  +
and dword ptr [edi+0F0h] 0 +
push dword ptr [edi+4]  +
call ds:KillTimer  +
and dword ptr [edi+0F4h] 0 +
push 0  +
lea eax [esi+4] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+48h]  +
mov eax [ebp+0Ch] +
mov dword ptr [esi+100h] 1 +
mov ecx [eax] +
push eax  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call dword ptr [ecx+0Ch]  +
cmp eax 1 +
jnz loc_109D14D  +
cmp dword ptr [ebp+10h] 0 +
jz loc_109D131  +
mov eax [ebp+0Ch] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_109D142  +
mov eax [esi+94h] +
cmp eax [ebp+0Ch] +
jnz loc_109D149  +
mov eax [esi+9Ch] +
mov [ebp-4] eax +
test eax eax +
jge loc_109D14D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-4]  +
mov ecx edi +
push dword ptr [ebp+0Ch]  +
call sub_10094BE  +
lea eax [ebp-1Ch] +
push eax  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+5Ch]  +
push eax  +
call ds:__imp_SHStrDupW  +
mov [ebp-4] eax +
xor eax eax +
cmp [ebp-4] eax +
jl loc_109D460  +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
mov [ebp-8] eax +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+50h]  +
push eax  +
call ds:__imp_SHStrDupW  +
mov [ebp-4] eax +
test eax eax +
jl loc_109D308  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+88h]  +
mov [ebp-8] eax +
test eax eax +
jz loc_109D1CB  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+9Ch]  +
test eax eax +
jz loc_109D1CB  +
mov eax [ebx] +
lea ecx [ebp-14h] +
push ecx  +
push ebx  +
call dword ptr [eax+34h]  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_109D308  +
cmp dword ptr [ebp+14h] 0 +
jz loc_109D1EA  +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp+14h]  +
call sub_10082A8  +
mov [ebp-4] eax +
cmp dword ptr [ebp-4] 0 +
jl loc_109D308  +
push 0Ah  +
xor eax eax +
pop ecx  +
lea edi [ebp-7Ch] +
stos   +
mov eax [ebp-10h] +
or dword ptr [ebp-80h] 0FFFFFFFFh +
mov [ebp-7Ch] eax +
mov eax [ebp-1Ch] +
mov [ebp-78h] eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+6Ch]  +
and al 1 +
xor ecx ecx +
cmp al 1 +
mov eax [ebx] +
setz cl  +
push ebx  +
mov [ebp-70h] ecx +
call dword ptr [eax+98h]  +
mov [ebp-6Ch] eax +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+9Ch]  +
mov [ebp-68h] eax +
mov eax [ebp-8] +
mov [ebp-5Ch] eax +
mov eax [ebp-0Ch] +
mov [ebp-58h] eax +
mov eax [ebp-14h] +
mov [ebp-74h] eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
xor ecx ecx +
cmp eax 2 +
mov eax [ebp+10h] +
setnz cl  +
mov [ebp-64h] ecx +
test eax eax +
jz loc_109D270  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp-60h] eax +
jmp loc_109D274  +
and dword ptr [ebp-60h] 0 +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0A4h]  +
test eax eax +
jnz loc_109D28F  +
cmp [ebp-64h] eax +
jnz loc_109D28F  +
mov dword ptr [ebp-4] 80004005h +
jmp loc_109D305  +
push 0Bh  +
pop eax  +
mov [ebp-44h] ax +
xor eax eax +
lea edi [ebp-42h] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp-28h] +
mov edi ds:SHLWAPI_484 +
neg eax  +
push 0  +
sbb eax eax +
mov [ebp-3Ch] ax +
lea eax [ebp-44h] +
push eax  +
push 0  +
push 162h  +
push offset dword_1069914  +
push offset dword_10128F0  +
push dword ptr [esi+18Ch]  +
call edi  +
mov eax 4000h +
mov [ebp-54h] ax +
push 0  +
lea eax [ebp-80h] +
mov [ebp-4Ch] eax +
lea eax [ebp-54h] +
push eax  +
push 0  +
push 14Ch  +
push offset dword_1069914  +
push offset dword_1036958  +
push dword ptr [esi+18Ch]  +
call edi  +
mov [ebp-4] eax +
test eax eax +
jge loc_109D340  +
mov edi [ebp-18h] +
push dword ptr [ebp-8]  +
call ds:__imp_SHELL32_155  +
push dword ptr [ebp-0Ch]  +
call ds:__imp_SHELL32_155  +
push dword ptr [ebp-10h]  +
call ds:__imp_CoTaskMemFree  +
push dword ptr [ebp-1Ch]  +
call ds:__imp_CoTaskMemFree  +
push dword ptr [ebp-14h]  +
call ds:__imp_CoTaskMemFree  +
cmp dword ptr [ebp-4] 0 +
jge loc_109D343  +
jmp loc_109D460  +
mov edi [ebp-18h] +
push dword ptr [ebp+0Ch]  +
lea eax [esi+0CCh] +
push eax  +
call ds:__imp_IUnknown_Set  +
push dword ptr [ebp+0Ch]  +
add esi 94h +
push esi  +
call ds:__imp_IUnknown_Set  +
xor esi esi +
cmp [ebp+8] esi +
jz loc_109D391  +
push dword ptr [ebp+8]  +
call sub_102AC5D  +
cmp [ebp+18h] esi +
jz loc_109D37E  +
mov eax hWnd +
jmp loc_109D381  +
or eax 0FFFFFFFFh +
push 13h  +
push esi  +
push esi  +
push esi  +
push esi  +
push eax  +
push dword ptr [ebp+8]  +
call ds:SetWindowPos  +
cmp [ebp+18h] esi +
jnz loc_109D3B2  +
cmp [ebp-20h] esi +
jnz loc_109D3B2  +
mov eax [ebp-24h] +
mov ecx [eax] +
push 23h  +
push dword ptr [ebp-2Ch]  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
jnz loc_109D3D9  +
cmp dword ptr [ebp+8] 0 +
jz loc_109D3CA  +
push 2  +
push 0FFh  +
push 0  +
push dword ptr [ebp+8]  +
call ds:SetLayeredWindowAttributes  +
cmp dword ptr [ebp+18h] 0 +
jnz loc_109D3D9  +
test esi esi +
jnz loc_109D3D9  +
xor eax eax +
inc eax  +
jmp loc_109D3DB  +
xor eax eax +
push eax  +
mov ecx edi +
call sub_109B2B9  +
mov [ebp-4] eax +
test eax eax +
jl loc_109D460  +
push offset dword_10688A0  +
call sub_1008600  +
test al al +
jz loc_109D460  +
lea eax [ebp+10h] +
push eax  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+50h]  +
push eax  +
call ds:__imp_SHStrDupW  +
test eax eax +
jl loc_109D460  +
push dword ptr [ebp+10h]  +
call ds:PathStripPathW  +
mov esi [ebp+0Ch] +
mov eax [esi] +
push 4  +
pop edi  +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_109D43D  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
mov edi eax +
dec edi  +
dec edi  +
neg edi  +
sbb edi edi +
add edi 3 +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+60h]  +
push eax  +
push dword ptr [ebp+10h]  +
xor eax eax +
cmp [ebp+18h] eax +
setnz al  +
inc eax  +
push eax  +
push edi  +
call sub_106E209  +
push dword ptr [ebp+10h]  +
call ds:__imp_CoTaskMemFree  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push edi  +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+0Ch]  +
lea eax [ebx-18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_109D594  +
cmp dword ptr [ebp+8] 23h +
jz loc_109D4A1  +
cmp dword ptr [ebp+8] 24h +
jnz loc_109D594  +
mov eax [ebx+170h] +
push esi  +
xor esi esi +
cmp eax esi +
jz loc_109D593  +
lea ecx [ebp+0Ch] +
push ecx  +
push eax  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_109D593  +
mov eax [ebp+10h] +
dec eax  +
jz loc_109D584  +
sub eax 4 +
jz loc_109D4E1  +
dec eax  +
jnz loc_109D593  +
push esi  +
jmp loc_109D586  +
lea ecx [ebx-34h] +
call sub_109B42D  +
cmp dword ptr [ebp+8] 23h +
jnz loc_109D4FA  +
push dword ptr [ebp+0Ch]  +
call ds:SetForegroundWindow  +
jmp loc_109D50D  +
cmp dword ptr [ebp+8] 24h +
jnz loc_109D50D  +
push esi  +
push esi  +
push 10h  +
push dword ptr [ebp+0Ch]  +
call ds:SendMessageW  +
cmp dword_10B24CC esi +
jz loc_109D593  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109D522  +
test al al +
jnz loc_109D593  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_109D593  +
mov eax dword_10B24C0 +
mov edi dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx edi +
and edx esi +
cmp ecx eax +
jnz loc_109D593  +
cmp edx edi +
jnz loc_109D593  +
push dword ptr [ebp+8]  +
lea eax [ebx-34h] +
add ebx 0FFFFFFE0h +
neg eax  +
push 0  +
sbb eax eax +
and eax ebx +
push eax  +
push offset dword_1046278  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046175  +
jmp loc_109D593  +
push 20h  +
push 20h  +
push 0FFFFFFECh  +
push dword ptr [ebp+0Ch]  +
call ds:SHLWAPI_165  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
lea ebx [esi+14h] +
mov eax [ebx] +
push 0  +
push ebx  +
mov [ebp+var_4] 80004005h +
call dword ptr [eax+7Ch]  +
mov edi [ebp+arg_0] +
cmp edi [esi+0E4h] +
jnz loc_109D608  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_109D608  +
cmp [ebp+arg_C] 0 +
jz loc_109D5EB  +
test byte ptr [ebp+arg_8] 8 +
jz loc_109D5EB  +
xor eax eax +
inc eax  +
jmp loc_109D5ED  +
xor eax eax +
mov esi [esi+0E8h] +
mov ecx [esi] +
push eax  +
push [ebp+arg_C]  +
push 1  +
push esi  +
call dword ptr [ecx+3Ch]  +
and [ebp+var_4] 0 +
jmp loc_109D712  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 2 +
jnz loc_109D620  +
mov eax [ebx] +
push 0  +
push ebx  +
call dword ptr [eax+6Ch]  +
jmp loc_109D712  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_109D636  +
mov ecx esi +
call sub_1004226  +
test al 2 +
jz loc_109D63E  +
mov ebx [ebp+arg_8] +
or ebx 1 +
jmp loc_109D641  +
mov ebx [ebp+arg_8] +
mov eax [esi+38h] +
mov eax [eax] +
and [ebp+arg_8] 0 +
and [ebp+arg_0] 0 +
mov [ebp+var_8] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
push eax  +
push dword ptr [esi+38h]  +
mov eax [ebp+var_8] +
call dword ptr [eax+3Ch]  +
test bl 1 +
jnz loc_109D683  +
cmp [ebp+arg_4] 0 +
jl loc_109D683  +
push [ebp+arg_4]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0ACh]  +
push eax  +
mov ecx esi +
call sub_109AE71  +
mov [ebp+arg_8] eax +
cmp edi [esi+0B4h] +
jnz loc_109D6A5  +
push dword ptr [esi+0B8h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0ACh]  +
push eax  +
mov ecx esi +
call sub_109AE71  +
mov [ebp+arg_0] eax +
mov eax [esi+38h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jz loc_109D702  +
push edi  +
lea eax [esi+0E4h] +
push eax  +
call ds:__imp_IUnknown_Set  +
and [ebp+var_4] 0 +
test bl 2 +
jz loc_109D712  +
cmp [ebp+arg_C] 0 +
jz loc_109D712  +
mov esi [esi+0E8h] +
mov ecx [esi] +
xor eax eax +
and bl 8 +
cmp bl 8 +
setz al  +
push eax  +
push [ebp+arg_C]  +
push 1  +
push esi  +
call dword ptr [ecx+3Ch]  +
jmp loc_109D712  +
mov esi [esi+0E8h] +
mov eax [esi] +
push 0  +
push 0  +
push esi  +
call dword ptr [eax+54h]  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hWnd] 0 +
push esi  +
mov esi ecx +
jz loc_109D746  +
push [ebp+hWnd]  +
call ds:SetForegroundWindow  +
push [ebp+hWnd]  +
lea eax [esi+18h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_109D76D  +
push edi  +
mov edi [ebp+arg_4] +
push edi  +
push dword ptr [esi+90h]  +
call ds:off_100407C  +
test eax eax +
jl loc_109D76C  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
push 0F060h  +
push eax  +
call dword ptr [ecx+78h]  +
pop edi  +
lea eax [esi+14h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+7Ch]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ecx +
mov eax [ebx+90h] +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp eax edi +
jz loc_109D7A3  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_109D7A6  +
mov [ebp+var_4] edi +
cmp [ebp+var_4] edi +
jle loc_109D7DD  +
push esi  +
mov eax [ebx+90h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
cmp [ebp+arg_0] eax +
jz loc_109D7DC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_109D7D6  +
inc [ebp+var_8]  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_109D7AC  +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+184h] +
push eax  +
call sub_1002BEE  +
lea eax [esi+17Ch] +
push eax  +
call sub_1002BEE  +
lea eax [esi+180h] +
push eax  +
call sub_1002BEE  +
lea edi [esi+198h] +
mov eax [edi] +
xor ebx ebx +
cmp eax ebx +
jz loc_109D839  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov [ebp+var_4] 1 +
test al 2 +
jnz loc_109D83C  +
mov [ebp+var_4] ebx +
cmp [esi+19Ch] ebx +
jz loc_109D860  +
cmp [ebp+var_4] ebx +
jz loc_109D860  +
mov eax [edi] +
mov ecx [eax] +
push ebx  +
push 2  +
push eax  +
call dword ptr [ecx+70h]  +
push ebx  +
push dword ptr [edi]  +
lea eax [esi+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov ecx [edi] +
cmp ecx ebx +
jz loc_109D875  +
cmp [ebp+var_4] ebx +
jz loc_109D875  +
mov eax [esi+38h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+38h]  +
push edi  +
call sub_1002BEE  +
lea eax [esi+19Ch] +
push eax  +
call sub_1002BEE  +
or dword ptr [esi+188h] 0FFFFFFFFh +
pop edi  +
mov [esi+194h] ebx +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+180h] +
mov eax [edi] +
test eax eax +
jz loc_109D8C1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push edi  +
call sub_1002BEE  +
test byte ptr [ebp+arg_0] 4 +
jz loc_109D984  +
mov eax [esi+184h] +
test eax eax +
jz loc_109D95E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 4 +
jz loc_109D95E  +
mov eax [esi+184h] +
mov ecx [eax] +
push ebx  +
push eax  +
xor ebx ebx +
call dword ptr [ecx+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+80h]  +
test eax eax +
jnz loc_109D91B  +
mov eax [esi+184h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+88h]  +
mov ebx eax +
test ebx ebx +
jz loc_109D956  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_100671C  +
push eax  +
call ds:__imp_SHBindToParent  +
test eax eax +
jl loc_109D956  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push edi  +
push 0  +
push offset dword_100DB28  +
lea edx [ebp+var_8] +
push edx  +
push 1  +
push dword ptr [esi+4]  +
push eax  +
call dword ptr [ecx+28h]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push ebx  +
call ds:__imp_SHELL32_155  +
pop ebx  +
cmp dword ptr [edi] 0 +
jz loc_109D984  +
mov ecx [ebp+arg_C] +
push ecx  +
push [ebp+arg_8]  +
mov dword ptr [ecx] 7 +
push [ebp+arg_4]  +
mov eax [edi] +
push [ebp+arg_0]  +
mov edx [eax] +
push dword ptr [esi+17Ch]  +
push eax  +
call dword ptr [edx+0Ch]  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
lea eax [ebp+Rect] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
xor eax eax +
lea ecx [esi+90h] +
mov edx [ecx] +
inc eax  +
test edx edx +
jz loc_109D9BA  +
mov edx [edx] +
jmp loc_109D9BC  +
xor edx edx +
test edx edx +
jz loc_109DA03  +
mov eax [ecx] +
mov eax [eax+4] +
push edi  +
mov edi [eax+edx*4-4] +
mov esi [edi] +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call dword ptr [esi+98h]  +
push eax  +
push edi  +
call dword ptr [esi+30h]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_C] +
pop edi  +
jge loc_109D9E9  +
xor eax eax +
jmp loc_109DA03  +
cmp eax [ebp+var_4] +
jl loc_109D9F3  +
xor eax eax +
inc eax  +
jmp loc_109DA03  +
mov eax [ebp+var_8] +
add eax 2 +
xor ecx ecx +
cmp [ebp+arg_0] eax +
setnl cl  +
mov eax ecx +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 198h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_10B2478 +
mov [ebp+var_198] ecx +
mov ecx dword_10B247C +
mov edx eax +
or edx ecx +
push esi  +
mov esi [ebp+arg_0] +
jz loc_109DB17  +
push ebx  +
mov ebx offset dword_109DB28 +
push ebx  +
push ecx  +
push eax  +
call ds:EventEnabled  +
test al al +
jz loc_109DB16  +
push edi  +
xor edi edi +
inc edi  +
cmp [ebp+arg_4] 0 +
mov [ebp+var_194] 3 +
jnz loc_109DA99  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jnz loc_109DA83  +
mov [ebp+var_194] 2 +
jmp loc_109DA99  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A8h]  +
xor ecx ecx +
cmp eax edi +
setnle cl  +
mov [ebp+var_194] ecx +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
call ds:__imp_PathFindFileNameW  +
mov esi eax +
test esi esi +
jz loc_109DB15  +
push 188h  +
lea eax [ebp+var_18C] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+var_194] +
add esp 0Ch +
mov [ebp+var_18C] eax +
push esi  +
lea eax [ebp+var_10C] +
push eax  +
mov [ebp+var_190] edi +
call sub_1012258  +
push [ebp+arg_8]  +
mov ecx [ebp+var_198] +
call sub_109B64A  +
push 3  +
mov [ebp+var_84] eax +
lea eax [ebp+var_190] +
push eax  +
push 0F81h  +
push ebx  +
mov [ebp+var_88] edi +
call sub_1006870  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
mov eax [ebx+7Ch] +
push esi  +
push edi  +
test eax eax +
jz loc_109DB53  +
mov edi [eax] +
jmp loc_109DB55  +
xor edi edi +
xor esi esi +
test edi edi +
jle loc_109DB72  +
mov eax [ebx+7Ch] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
inc esi  +
cmp esi edi +
jl loc_109DB5B  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [edi-14h] +
mov dword ptr [ebp-4] 80004005h +
call sub_1005D55  +
mov ebx eax +
test ebx ebx +
jz loc_109DBCE  +
push esi  +
lea esi [edi+0D4h] +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_109DBCD  +
cmp ebx [edi+0D0h] +
jnz loc_109DBCD  +
push dword ptr [ebp+14h]  +
mov esi [esi] +
push dword ptr [ebp+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+5Ch]  +
mov [ebp-4] eax +
pop esi  +
mov eax [ebp-4] +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [edi-14h] +
mov dword ptr [ebp-4] 80004005h +
call sub_1005D55  +
mov ebx eax +
test ebx ebx +
jz loc_109DC29  +
push esi  +
lea esi [edi+0D4h] +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_109DC28  +
cmp ebx [edi+0D0h] +
jnz loc_109DC28  +
mov esi [esi] +
push dword ptr [ebp+10h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+60h]  +
mov [ebp-4] eax +
pop esi  +
mov eax [ebp-4] +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-14h] +
mov edi 80004005h +
call sub_1005D55  +
test eax eax +
jz loc_109DC78  +
push dword ptr [ebp+14h]  +
mov ecx [eax] +
push dword ptr [ebp+10h]  +
push eax  +
call dword ptr [ecx+94h]  +
mov edi eax +
test edi edi +
jl loc_109DC78  +
mov eax [esi] +
push 0  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+18h]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push edi  +
lea eax [ebp+rc] +
mov edi ecx +
push eax  +
push dword ptr [edi+4]  +
or esi 0FFFFFFFFh +
call ds:GetClientRect  +
test eax eax +
jz loc_109DD43  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_109DD43  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+pt.y]  +
mov ecx edi +
push [ebp+pt.x]  +
call sub_1045203  +
mov esi eax +
test esi esi +
jz loc_109DD33  +
mov eax [esi] +
push ebx  +
lea ecx [ebp+var_14] +
push ecx  +
push [ebp+var_4]  +
push esi  +
call dword ptr [eax+34h]  +
mov ecx edi +
call sub_1004266  +
mov ebx [ebp+pt.x] +
test eax eax +
jnz loc_109DD1F  +
mov ecx [ebp+var_8] +
mov ebx [ebp+pt.y] +
mov eax ecx +
sub eax [ebp+var_10] +
cdq   +
sub eax edx +
sar eax 1 +
sub ecx eax +
cmp ebx ecx +
pop ebx  +
push esi  +
push dword ptr [edi+90h]  +
jle loc_109DD29  +
call ds:off_100407C  +
mov esi eax +
inc esi  +
jmp loc_109DD43  +
mov ecx [ebp+var_C] +
mov eax ecx +
sub eax [ebp+var_14] +
jmp loc_109DD01  +
call ds:off_100407C  +
mov esi eax +
jmp loc_109DD43  +
mov edi [edi+90h] +
test edi edi +
jz loc_109DD41  +
mov esi [edi] +
jmp loc_109DD43  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_10] +
lea eax [ebp+Rect] +
xor ebx ebx +
mov esi ecx +
push eax  +
mov [edi] ebx +
mov [edi+4] ebx +
push dword ptr [esi+4]  +
call ds:GetClientRect  +
mov eax [esi+5Ch] +
add [ebp+Rect.left] eax +
mov eax [esi+64h] +
add [ebp+Rect.top] eax +
mov eax [esi+60h] +
sub [ebp+Rect.right] eax +
mov eax [esi+68h] +
push [ebp+lprc]  +
sub [ebp+Rect.bottom] eax +
mov eax [esi+164h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+34h]  +
push [ebp+lprc]  +
mov ebx [ebp+lprcDst] +
push ebx  +
call ds:CopyRect  +
mov ecx esi +
call sub_1004266  +
mov ecx esi +
mov [ebp+arg_10] eax +
call sub_1005671  +
xor ecx ecx +
cmp eax 1 +
setnle cl  +
xor eax eax +
mov [ebp+lprcDst] ecx +
cmp [ebp+arg_10] eax +
jnz loc_109DDD0  +
cmp ecx eax +
jz loc_109DE33  +
push eax  +
push dword ptr [esi+168h]  +
push ebx  +
call ds:OffsetRect  +
mov eax [ebp+arg_0] +
sub eax [esi+170h] +
mov ecx [ebp+Rect.right] +
sub eax [ebx] +
mov edx [ebp+Rect.left] +
mov [edi] eax +
sub ecx [ebx+8] +
sub edx [ebx] +
cmp eax ecx +
jl loc_109DDFC  +
mov eax ecx +
cmp eax edx +
mov [edi] eax +
jle loc_109DE04  +
mov edx eax +
mov [edi] edx +
add [esi+168h] edx +
mov eax [esi+168h] +
push 0  +
push eax  +
push [ebp+lprc]  +
call ds:OffsetRect  +
cmp [ebp+arg_10] 0 +
mov eax [ebp+arg_0] +
mov [esi+154h] eax +
jz loc_109DE33  +
cmp [ebp+lprcDst] 0 +
jz loc_109DE8F  +
push dword ptr [esi+16Ch]  +
push 0  +
push ebx  +
call ds:OffsetRect  +
mov eax [ebp+arg_4] +
sub eax [esi+174h] +
mov ecx [ebp+Rect.bottom] +
sub eax [ebx+4] +
mov edx [ebp+Rect.top] +
mov [edi+4] eax +
sub ecx [ebx+0Ch] +
sub edx [ebx+4] +
cmp eax ecx +
jl loc_109DE63  +
mov eax ecx +
cmp eax edx +
mov [edi+4] eax +
jle loc_109DE6C  +
mov edx eax +
mov [edi+4] edx +
add [esi+16Ch] edx +
push dword ptr [esi+16Ch]  +
push 0  +
push [ebp+lprc]  +
call ds:OffsetRect  +
mov eax [ebp+arg_4] +
mov [esi+158h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push esi  +
push edi  +
push 0  +
lea eax [ebp+var_4] +
mov edi ecx +
push eax  +
push dword ptr [edi+158h]  +
push dword ptr [edi+154h]  +
call sub_1045203  +
mov esi eax +
test esi esi +
jz loc_109DF19  +
push ebx  +
call sub_1011DEE  +
push [ebp+var_4]  +
mov [ebp+var_8] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+0ACh]  +
push [ebp+var_8]  +
lea ebx [edi+14h] +
mov ecx [ebx] +
push 0  +
push eax  +
mov eax [esi] +
push esi  +
mov [ebp+var_4] ecx +
call dword ptr [eax+14h]  +
push eax  +
mov eax [ebp+var_4] +
push ebx  +
call dword ptr [eax+78h]  +
pop ebx  +
test eax eax +
jl loc_109DF19  +
cmp [ebp+var_8] 0 +
jz loc_109DF0D  +
mov dword ptr [edi+150h] 2 +
add edi 0BCh +
push edi  +
call sub_1002BEE  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+0A0h] edi +
jz loc_109DF5D  +
mov eax [esi+4] +
mov [ebp+EventTrack.hwndTrack] eax +
lea eax [ebp+EventTrack] +
push eax  +
mov [ebp+EventTrack.cbSize] 10h +
mov [ebp+EventTrack.dwFlags] 80000001h +
call ds:TrackMouseEvent  +
mov [esi+0A0h] edi +
mov eax [esi+0E8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jnz loc_109E170  +
mov eax [esi+0A8h] +
cmp eax edi +
jz loc_109E170  +
cmp [esi+0A4h] edi +
jz loc_109E170  +
cmp eax [esi+0E4h] +
jz loc_109E170  +
push edi  +
push edi  +
push dword ptr [esi+0B0h]  +
mov ecx esi +
push eax  +
call sub_109D5A1  +
test eax eax +
jge loc_109E15C  +
cmp [esi+0C8h] edi +
jnz loc_109E100  +
cmp [esi+0F0h] edi +
jnz loc_109E100  +
mov eax [esi+0A8h] +
cmp eax edi +
jz loc_109E03D  +
mov ebx [esi+0ACh] +
cmp ebx edi +
jnz loc_109DFF4  +
push dword ptr [esi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov ebx eax +
cmp ebx edi +
jz loc_109E0AB  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_109E03D  +
mov eax [esi+0A8h] +
cmp eax [esi+0E4h] +
jnz loc_109E01E  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_109E021  +
xor eax eax +
inc eax  +
cmp eax edi +
jz loc_109E0BC  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+88h]  +
cmp eax edi +
jz loc_109E0BC  +
push 2Ch  +
lea eax [ebp+var_3C] +
push edi  +
push eax  +
mov [ebp+lParam] 30h +
call memset  +
mov eax [esi+4] +
mov ebx ds:SendMessageW +
or [ebp+var_1C] 0FFFFFFFFh +
mov [ebp+var_38] eax +
mov [ebp+var_34] eax +
mov eax hInstance +
add esp 0Ch +
mov [ebp+var_20] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 432h  +
push dword ptr [esi+98h]  +
mov [ebp+var_3C] 121h +
call ebx  +
push dword ptr [esi+98h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_109E0D4  +
push edi  +
push edi  +
push 41Dh  +
push dword ptr [esi+98h]  +
call ebx  +
jmp loc_109E170  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 2 +
jz loc_109E03D  +
push edi  +
push edi  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
jmp loc_109E170  +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 411h  +
push dword ptr [esi+98h]  +
call ebx  +
push edi  +
push 1388h  +
push 3  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov [esi+0F4h] eax +
jmp loc_109E170  +
push edi  +
push edi  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
push dword ptr [esi+0F0h]  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
lea ebx [esi+0F4h] +
push dword ptr [ebx]  +
mov [esi+0F0h] edi +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov [ebx] edi +
cmp [esi+0C8h] edi +
jnz loc_109E170  +
push edi  +
push 3E8h  +
push 2  +
push dword ptr [esi+4]  +
call ds:SetTimer  +
mov [esi+0F0h] eax +
jmp loc_109E170  +
mov eax [esi+0E4h] +
cmp eax edi +
jz loc_109E170  +
push 1  +
push eax  +
mov ecx esi +
call sub_109B6C1  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
lea esi [ecx+14Ch] +
mov eax [esi] +
push edi  +
mov [ebp+var_4] ecx +
test eax eax +
jz loc_109E19C  +
mov eax [eax] +
jmp loc_109E19E  +
xor eax eax +
test eax eax +
jle loc_109E1E3  +
and [ebp+var_8] 0 +
mov eax [esi] +
mov eax [eax+4] +
push dword ptr [eax]  +
call sub_109AE71  +
mov ebx [ebp+arg_0] +
mov edi [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [eax] +
push eax  +
add edi 20h +
call dword ptr [ecx+4Ch]  +
push eax  +
push ebx  +
call dword ptr [edi]  +
test eax eax +
jge loc_109E1D4  +
mov ecx [ebp+var_4] +
call sub_109C125  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_109E1E6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_109E1E6  +
mov ebx [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jnz loc_109E292  +
mov eax [ebx] +
lea ecx [ebp+var_10] +
push ecx  +
push ebx  +
call dword ptr [eax+24h]  +
push [ebp+var_10]  +
mov ecx esi +
call sub_100801C  +
test eax eax +
jz loc_109E285  +
mov eax [ebx] +
lea ecx [ebp+var_C] +
push ecx  +
push ebx  +
call dword ptr [eax+18h]  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jl loc_109E34D  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_109E269  +
mov eax [ebp+var_4] +
push [ebp+var_8]  +
add eax 18h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
test eax eax +
jz loc_109E253  +
push ebx  +
push [ebp+var_8]  +
mov ecx esi +
call sub_1006610  +
mov edi eax +
jmp loc_109E25C  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jge loc_109E220  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp edi ebx +
jl loc_109E27A  +
push ebx  +
push offset loc_109AE15  +
mov ecx esi +
call sub_100F821  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_109E28A  +
mov edi 8007000Eh +
test edi edi +
jl loc_109E34D  +
mov eax [esi] +
test eax eax +
jz loc_109E29F  +
mov eax [eax] +
mov [ebp+var_8] eax +
jmp loc_109E2A3  +
and [ebp+var_8] 0 +
cmp [ebp+var_8] 1 +
mov ebx ds:off_10065B4 +
mov edi [ebp+var_4] +
jle loc_109E31B  +
cmp dword ptr [edi+0B4h] 0 +
jz loc_109E31B  +
mov eax [edi+0B4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax [ebp+arg_0] +
jnz loc_109E31B  +
mov ecx [edi+0B8h] +
test ecx ecx +
jl loc_109E31B  +
mov eax [edi+0B4h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+0ACh]  +
mov edi eax +
push edi  +
push dword ptr [esi]  +
call ds:off_100407C  +
test eax eax +
jl loc_109E318  +
mov eax [esi] +
mov edx [ebp+var_8] +
mov ecx [eax+4] +
cmp [ecx+edx*4-4] edi +
jz loc_109E318  +
push 0  +
push eax  +
call ebx  +
push 0  +
push eax  +
mov ecx esi +
call sub_1006610  +
test eax eax +
jge loc_109E2F5  +
jmp loc_109E355  +
mov edi [ebp+var_4] +
cmp [ebp+var_8] 1 +
mov eax [esi] +
mov ecx [eax+4] +
mov ecx [ecx] +
mov [ebp+var_10] ecx +
jle loc_109E33A  +
push 0  +
push eax  +
call ebx  +
push 0  +
push eax  +
mov ecx esi +
call sub_1006610  +
mov eax [edi+38h] +
mov ecx [eax] +
push 1  +
push [ebp+var_10]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_109E355  +
mov ecx [ebp+var_4] +
call sub_109C125  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
push 0  +
push [ebp+arg_4]  +
mov edi ecx +
push esi  +
call sub_1044438  +
push [ebp+arg_4]  +
mov ecx edi +
push esi  +
call sub_100956D  +
push [ebp+arg_4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+78h]  +
cmp [ebp+arg_8] 0 +
jz loc_109E3A9  +
push 0  +
push 0  +
mov ecx edi +
mov dword ptr [edi+0A4h] 1 +
call sub_109DF22  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push edi  +
mov edi 80070057h +
jz loc_109E3F0  +
push esi  +
mov esi [ebp+8] +
push dword ptr [ebp+0Ch]  +
add esi 0FFFFFFE0h +
mov ecx esi +
call sub_1005D55  +
cmp dword ptr [ebp+10h] 0FFFFFFFFh +
jz loc_109E3EF  +
push 0  +
push 1  +
push 0  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push eax  +
call sub_1045930  +
xor edi edi +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
lea ecx [eax-14h] +
push dword ptr [eax+9Ch]  +
push dword ptr [eax+94h]  +
call sub_1003593  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push edi  +
mov edi 80070057h +
jz loc_109E46E  +
call ds:GetFocus  +
mov ecx [ebp+8] +
cmp eax [ecx-1Ch] +
jnz loc_109E46E  +
push esi  +
push dword ptr [ebp+0Ch]  +
lea esi [ecx-20h] +
mov ecx esi +
call sub_1005D55  +
test eax eax +
jz loc_109E46D  +
cmp dword ptr [ebp+10h] 0FFFFFFFFh +
jz loc_109E46D  +
push 0  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push eax  +
call sub_109E361  +
xor edi edi +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 420h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
mov [ebp+pv] eax +
mov eax dword_10B3AB4 +
mov esi ecx +
push edi  +
mov [ebp+var_420] esi +
cmp eax 0FFFFFFFFh +
jnz loc_109E4BC  +
push offset aDropdescriptio  +
call ds:RegisterClipboardFormatW  +
mov dword_10B3AB4 eax +
mov ecx [ebp+arg_0] +
neg ecx  +
push 4  +
sbb ecx ecx +
pop edi  +
and ecx edi +
mov [esi+194h] ecx +
test eax eax +
jz loc_109E5A8  +
mov esi [esi+17Ch] +
test esi esi +
jz loc_109E5A8  +
cmp [ebp+arg_0] 0 +
jz loc_109E5A1  +
push ebx  +
mov ebx 414h +
push ebx  +
lea eax [ebp+var_418] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov esi 104h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push 1FFh  +
push dword_10B23D0  +
mov [ebp+var_418] edi +
mov edi ds:LoadStringW +
call edi  +
mov eax [ebp+pv] +
test eax eax +
jz loc_109E56A  +
mov ecx [eax] +
lea edx [ebp+pv] +
push edx  +
push 0  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_109E57F  +
push [ebp+pv]  +
lea eax [ebp+var_20C] +
push esi  +
push eax  +
call sub_100665F  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
jmp loc_109E57F  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
push 206h  +
push dword_10B23D0  +
call edi  +
push ebx  +
lea eax [ebp+var_418] +
push eax  +
push dword_10B3AB4  +
mov eax [ebp+var_420] +
push dword ptr [eax+17Ch]  +
call sub_107D7DF  +
pop ebx  +
jmp loc_109E5A8  +
push eax  +
push esi  +
call sub_107DA82  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
push 0  +
lea eax [ebp+var_4] +
mov esi ecx +
push eax  +
push dword ptr [esi+158h]  +
push dword ptr [esi+154h]  +
call sub_1045203  +
mov ebx eax +
test ebx ebx +
jz loc_109E5F6  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0B8h]  +
test eax eax +
jz loc_109E5F6  +
xor ebx ebx +
push ebx  +
lea edi [esi+164h] +
push edi  +
call ds:__imp_IUnknown_Set  +
mov eax [edi] +
test eax eax +
jz loc_109E796  +
mov ecx [eax] +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
lea edx [ebp+rc] +
push edx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+30h]  +
push ebx  +
push edi  +
lea eax [ebp+rc] +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_109E63D  +
mov edi [esi+154h] +
mov ebx [esi+158h] +
mov eax [esi+164h] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push [ebp+var_4]  +
push eax  +
call dword ptr [ecx+34h]  +
sub edi [ebp+var_14] +
sub ebx [ebp+var_10] +
xor eax eax +
mov [esi+168h] eax +
mov [esi+16Ch] eax +
mov [esi+170h] edi +
mov [esi+174h] ebx +
cmp [esi+0C8h] eax +
jnz loc_109E70B  +
cmp [esi+0F0h] eax +
jnz loc_109E70B  +
mov ecx [esi+0A8h] +
cmp ecx eax +
jz loc_109E6F4  +
mov edi [esi+0ACh] +
cmp edi eax +
jnz loc_109E6B1  +
push dword ptr [esi+0B0h]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+0ACh]  +
mov edi eax +
test edi edi +
jz loc_109E6F2  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_109E6F2  +
mov eax [esi+0A8h] +
cmp eax [esi+0E4h] +
jnz loc_109E6DB  +
mov eax [esi+0E8h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_109E6DE  +
xor eax eax +
inc eax  +
test eax eax +
jz loc_109E6F2  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+88h]  +
xor eax eax +
push eax  +
push eax  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
xor ebx ebx +
jmp loc_109E746  +
push eax  +
push eax  +
push 411h  +
push dword ptr [esi+98h]  +
call ds:SendMessageW  +
lea edi [esi+0F0h] +
push dword ptr [edi]  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
xor ebx ebx +
mov [edi] ebx +
lea edi [esi+0F4h] +
push dword ptr [edi]  +
push dword ptr [esi+4]  +
call ds:KillTimer  +
mov [edi] ebx +
push ebx  +
lea edi [esi+18h] +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+48h]  +
mov eax [edi] +
push 1  +
push edi  +
mov [esi+0A4h] ebx +
call dword ptr [eax+34h]  +
xor edi edi +
lea eax [esi+14h] +
mov ecx [eax] +
inc edi  +
push edi  +
push eax  +
call dword ptr [ecx+6Ch]  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push ebx  +
mov ecx esi +
call sub_1044438  +
push dword ptr [esi+164h]  +
mov [esi+150h] edi +
push dword ptr [esi+90h]  +
call ds:off_100407C  +
mov [esi+178h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+150h] 2 +
jnz loc_109E7E3  +
push edi  +
call ds:ReleaseCapture  +
lea eax [esi+14h] +
mov ecx [eax] +
xor edi edi +
push edi  +
push eax  +
call dword ptr [ecx+7Ch]  +
push 1  +
mov ecx esi +
call sub_109BFD1  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push edi  +
mov ecx esi +
call sub_1044438  +
push 0FFFFFFFFh  +
push edi  +
mov ecx esi +
call sub_10094BE  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+94h] +
push eax  +
call sub_1002BEE  +
lea edi [esi+0CCh] +
mov eax [edi] +
xor ebx ebx +
cmp eax [esi+90h] +
jnz loc_109E8F5  +
cmp [esi+0B0h] ebx +
jnz loc_109E8B8  +
cmp [esi+0D8h] ebx +
jnz loc_109E8B8  +
mov eax [esi+90h] +
cmp eax ebx +
jz loc_109E8A3  +
mov ecx [esi+94h] +
mov [ebp+8] ecx +
cmp ecx ebx +
jnz loc_109E85E  +
push dword ptr [esi+98h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov [ebp+8] eax +
cmp eax ebx +
jz loc_109E8A3  +
mov ecx eax +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_109E8A3  +
mov eax [esi+90h] +
cmp eax [esi+0CCh] +
jnz loc_109E88A  +
mov eax [esi+0D0h] +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_109E88D  +
xor eax eax +
inc eax  +
cmp eax ebx +
jz loc_109E8A3  +
mov eax [esi+90h] +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+88h]  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [esi+80h]  +
call ds:SendMessageW  +
jmp loc_109E8F5  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [esi+80h]  +
call ds:SendMessageW  +
push dword ptr [esi+0D8h]  +
push dword ptr [esi-14h]  +
call ds:KillTimer  +
push dword ptr [esi+0DCh]  +
mov [esi+0D8h] ebx +
push dword ptr [esi-14h]  +
call ds:KillTimer  +
mov [esi+0DCh] ebx +
cmp [ebp+0Ch] ebx +
jz loc_109E9D5  +
mov eax [edi] +
cmp eax ebx +
jz loc_109E9CA  +
mov ecx [esi+90h] +
cmp eax ecx +
jnz loc_109E95A  +
cmp [esi+84h] ebx +
jnz loc_109E9CA  +
mov ecx [eax] +
push eax  +
mov dword ptr [ebp+8] 0FFFFFFFEh +
call dword ptr [ecx+0Ch]  +
cmp eax 3 +
jz loc_109E951  +
cmp [ebp+10h] ebx +
jz loc_109E94E  +
push dword ptr [ebp+10h]  +
lea ecx [esi-18h] +
call sub_1009667  +
mov ecx [edi] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+1Ch]  +
mov [ebp+8] eax +
jmp loc_109E951  +
mov [ebp+8] ebx +
push ebx  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [edi]  +
jmp loc_109E9C2  +
cmp ecx ebx +
jnz loc_109E9CA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jz loc_109E97C  +
mov eax [edi] +
mov [ebp+8] eax +
mov dword ptr [ebp+10h] 0FFFFFFFEh +
jmp loc_109E9AF  +
lea eax [ebp+10h] +
push eax  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push ebx  +
push 1  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
lea ecx [esi-18h] +
call sub_109CA2D  +
test eax eax +
jnz loc_109E9AF  +
lea eax [ebp+10h] +
push eax  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
lea ecx [esi-18h] +
call sub_109CA2D  +
cmp [ebp+8] ebx +
jz loc_109E9CA  +
cmp dword ptr [ebp+10h] 0FFFFFFFFh +
jz loc_109E9CA  +
push ebx  +
push ebx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
lea ecx [esi-18h] +
call sub_1044438  +
push dword ptr [esi-14h]  +
call ds:SetFocus  +
jmp loc_109E9F4  +
cmp [esi+84h] ebx +
jnz loc_109E9F4  +
mov eax [edi] +
cmp eax [esi+90h] +
jnz loc_109E9F4  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [esi-18h] +
call sub_1044438  +
push edi  +
call sub_1002BEE  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 0  +
push dword ptr [ebp+0Ch]  +
lea ecx [esi-18h] +
push 0FFFFFFFFh  +
push dword ptr [esi+0CCh]  +
call sub_1044438  +
cmp dword ptr [esi+0CCh] 0 +
jz loc_109EA3C  +
mov esi [esi+0CCh] +
mov eax [esi] +
push esi  +
call dword ptr [eax+84h]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
mov esi [ebp+8] +
push edi  +
xor ecx ecx +
xor edi edi +
mov [ebp-8] edi +
cmp [ebp+10h] ecx +
jnz loc_109EABC  +
cmp [esi+94h] ecx +
jz loc_109EA73  +
cmp dword ptr [esi+9Ch] 0FFFFFFFFh +
jnz loc_109EABC  +
mov eax [esi+7Ch] +
cmp eax ecx +
jz loc_109EA7E  +
mov eax [eax] +
jmp loc_109EA80  +
xor eax eax +
cmp eax ecx +
jle loc_109EABC  +
mov eax [esi+7Ch] +
cmp [ebp+0Ch] ecx +
jz loc_109EA99  +
mov eax [eax+4] +
mov edi [eax] +
mov [ebp-8] edi +
mov [ebp-4] ecx +
jmp loc_109EABC  +
cmp eax ecx +
jz loc_109EAA1  +
mov eax [eax] +
jmp loc_109EAA3  +
xor eax eax +
mov ecx [esi+7Ch] +
mov ecx [ecx+4] +
mov edi [ecx+eax*4-4] +
mov eax [edi] +
push edi  +
mov [ebp-8] edi +
call dword ptr [eax+98h]  +
mov [ebp-4] eax +
cmp dword ptr [esi+94h] 0 +
jz loc_109EB03  +
mov eax [esi+94h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 1 +
jnz loc_109EADE  +
mov eax [esi+9Ch] +
jmp loc_109EAE1  +
push 0FFFFFFFEh  +
pop eax  +
lea ecx [ebp-4] +
push ecx  +
lea ecx [ebp-8] +
push ecx  +
push 1  +
push dword ptr [ebp+10h]  +
lea ecx [esi-14h] +
push dword ptr [ebp+0Ch]  +
push eax  +
push dword ptr [esi+94h]  +
call sub_109CA2D  +
mov edi [ebp-8] +
test edi edi +
jz loc_109EB38  +
cmp dword ptr [ebp-4] 0 +
jnz loc_109EB2A  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jz loc_109EB23  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 2 +
jnz loc_109EB2A  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
push 1  +
push dword ptr [ebp-4]  +
lea ecx [esi-14h] +
push edi  +
call sub_109E361  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
inc ebx  +
call ds:GetCapture  +
cmp eax [edi-2Ch] +
jz loc_109EB71  +
cmp dword ptr [edi+120h] 2 +
jnz loc_109EB7E  +
lea ecx [edi-30h] +
call sub_109E7A2  +
cmp dword ptr [edi+120h] 2 +
jz loc_109EBFE  +
push esi  +
lea eax [ebp+Point] +
xor ebx ebx +
push eax  +
mov [edi+74h] ebx +
call ds:GetCursorPos  +
lea eax [ebp+Point] +
push eax  +
push dword ptr [edi-2Ch]  +
call ds:ScreenToClient  +
push ebx  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+Point.y]  +
lea esi [edi-30h] +
push [ebp+Point.x]  +
mov ecx esi +
mov [ebp+var_4] esi +
call sub_1045203  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push ebx  +
mov ecx esi +
mov [ebp+arg_0] eax +
call sub_1044438  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_109EBD5  +
push [ebp+Point.y]  +
mov ecx [eax] +
push [ebp+Point.x]  +
push eax  +
call dword ptr [ecx+6Ch]  +
lea eax [edi+0B0h] +
mov esi [eax] +
sub esi [edi+84h] +
push eax  +
neg esi  +
sbb esi esi +
inc esi  +
call sub_1002BEE  +
cmp esi ebx +
pop esi  +
jz loc_109EBFE  +
mov ecx [ebp+var_4] +
push 0FFFFFFFFh  +
push ebx  +
call sub_10094BE  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
lea edx [ebp+arg_4] +
push edx  +
push [ebp+arg_4]  +
mov esi ecx +
mov eax [esi+38h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov edi eax +
xor eax eax +
mov ecx esi +
cmp edi eax +
jnz loc_109EC4E  +
cmp [ebp+arg_4] eax +
jz loc_109EC3B  +
push [ebp+arg_4]  +
jmp loc_109EC3C  +
push eax  +
push 1  +
call sub_109E47A  +
lea eax [ebp+arg_4] +
push eax  +
call sub_1002BEE  +
jmp loc_109EC55  +
push eax  +
push eax  +
call sub_109E47A  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push 0  +
lea edi [esi-24h] +
push 0  +
mov ecx edi +
call sub_109E47A  +
call ds:SHELL32_132  +
lea eax [esi-0Ch] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [esi+15Ch] +
test eax eax +
jz loc_109EC9B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx edi +
call sub_109D7EB  +
and dword ptr [esi+0B0h] 0 +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp ebx edi +
jz loc_109ED23  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+6Ch]  +
test al 2 +
jnz loc_109ED23  +
mov eax [esi+38h] +
mov ecx [eax] +
push edi  +
lea edx [ebp+pv] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_4] +
push edx  +
push ebx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+34h]  +
mov ecx esi +
test eax eax +
jl loc_109ED1C  +
push [ebp+arg_4]  +
push 1  +
call sub_109E47A  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+pv]  +
call ds:__imp_CoTaskMemFree  +
jmp loc_109ED49  +
mov eax [ebp+arg_8] +
mov [eax] edi +
jmp loc_109ED42  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_109EC0B  +
test eax eax +
jnz loc_109ED40  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_109ED49  +
mov ecx esi +
push edi  +
push edi  +
call sub_109E47A  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov [ebp+Point.x] eax +
mov eax [ebp+arg_8] +
push edi  +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
mov esi ecx +
push eax  +
push dword ptr [esi+4]  +
call ds:ScreenToClient  +
mov edi [ebp+arg_10] +
push edi  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+Point.y]  +
mov ecx esi +
push [ebp+Point.x]  +
call sub_1045203  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_109EDB7  +
push [ebp+Point.y]  +
mov ecx esi +
push [ebp+Point.x]  +
call sub_109D98F  +
test eax eax +
jz loc_109EDB7  +
push 0FFFFFFFDh  +
pop ebx  +
test edi edi +
jz loc_109EDBA  +
mov dword ptr [edi] 2 +
jmp loc_109EDBA  +
mov ebx [ebp+arg_10] +
xor edi edi +
inc edi  +
cmp [esi+188h] ebx +
jnz loc_109EDD6  +
mov eax [ebp+var_4] +
cmp [esi+184h] eax +
jnz loc_109EDD6  +
and [ebp+arg_10] 0 +
jmp loc_109EDD9  +
mov [ebp+arg_10] edi +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [esi+180h] eax +
setz al  +
and cl 4 +
xor edx edx +
cmp cl 4 +
setz dl  +
cmp edx eax +
jnz loc_109EDF9  +
mov [ebp+arg_10] edi +
cmp [ebp+arg_10] 0 +
jz loc_109EE72  +
push [ebp+var_4]  +
lea edi [esi+184h] +
push edi  +
call ds:__imp_IUnknown_Set  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
mov [esi+188h] ebx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_109D89E  +
call ds:GetTickCount  +
push 0  +
lea ebx [esi+190h] +
push ebx  +
push 0  +
push 66h  +
mov [esi+18Ch] eax +
call ds:SystemParametersInfoW  +
test eax eax +
jnz loc_109EE51  +
mov dword ptr [ebx] 0FAh +
mov edi [edi] +
test edi edi +
jz loc_109EE5F  +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
jmp loc_109EE61  +
xor eax eax +
push [ebp+arg_C]  +
mov ecx esi +
push eax  +
push dword ptr [esi+17Ch]  +
call sub_109ECB6  +
mov eax [ebp+arg_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+90h] +
cmp dword ptr [edi] 0 +
mov dword ptr [esi] offset off_1003BE0 +
mov dword ptr [esi+8] offset off_10347B0 +
mov dword ptr [esi+10h] offset off_102CA08 +
mov dword ptr [esi+14h] offset off_1002AC0 +
mov dword ptr [esi+18h] offset off_10043D8 +
mov dword ptr [esi+1Ch] offset off_1003F40 +
mov dword ptr [esi+20h] offset off_1006208 +
mov dword ptr [esi+24h] offset off_102C9DC +
mov dword ptr [esi+28h] offset off_100650C +
mov dword ptr [esi+2Ch] offset off_1034964 +
mov dword ptr [esi+30h] offset off_100DB48 +
mov dword ptr [esi+34h] offset off_102EE8C +
jz loc_109EEF3  +
push 0  +
push offset loc_1040149  +
mov ecx edi +
call sub_100831C  +
mov ecx esi +
call sub_101E60A  +
lea eax [esi+12Ch] +
push eax  +
call sub_1002BEE  +
lea eax [esi+0BCh] +
push eax  +
call sub_1002BEE  +
mov ecx esi +
call sub_109C125  +
lea eax [esi+38h] +
push eax  +
call sub_1002BEE  +
lea ecx [esi+14Ch] +
call sub_10082DC  +
mov ecx edi +
call sub_10082DC  +
pop edi  +
mov dword ptr [esi+8] offset off_1002788 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
mov eax [ebp+8] +
and dword ptr [ecx] 0 +
cmp dword ptr [eax+28h] 0 +
jz loc_109EF65  +
mov eax [eax+28h] +
mov edx [eax] +
push ecx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [edx]  +
jmp loc_109EF6A  +
mov eax 80004005h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ecx+0B8h] eax +
setnz al  +
pop ebp  +
retn 4  +
***
mov eax 80004001h +
retn 4  +
***
sub dword ptr [esp+4] 14h +
jmp loc_10347C5  +
***
sub ecx 8 +
jmp loc_109F0FA  +
sub dword ptr [esp+4] 18h +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1003C0B  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 20h +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 24h +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 14h +
jmp loc_1003C0B  +
***
sub dword ptr [esp+4] 34h +
jmp loc_1003C0B  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 28h +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 2Ch +
jmp loc_10347C5  +
***
sub dword ptr [esp+4] 34h +
jmp loc_1003BF1  +
***
sub dword ptr [esp+4] 20h +
jmp loc_1003C0B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [esi-20h]  +
call sub_107D191  +
mov eax [esi+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
lea edi [esi-24h] +
mov ecx edi +
call sub_109D7EB  +
push dword ptr [ebp+0Ch]  +
mov ebx [ebp+1Ch] +
and dword ptr [ebx] 0 +
lea eax [esi+158h] +
push eax  +
call ds:__imp_IUnknown_Set  +
lea eax [esi-0Ch] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+28h]  +
add esi 174h +
push esi  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
call sub_109EC0B  +
push 0  +
push ebx  +
push dword ptr [ebp+18h]  +
mov ecx edi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
call sub_109ED55  +
mov esi [esi] +
test esi esi +
jz loc_109F0EC  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_109EE81  +
test byte ptr [ebp+8] 1 +
jz loc_109F114  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ecx+90h] +
mov [ebp+var_8] ecx +
test eax eax +
jz loc_109F13C  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_109F140  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jle locret_109F246  +
call sub_1004266  +
mov ecx [ebp+arg_0] +
test eax eax +
jz loc_109F15D  +
mov eax [ecx+8] +
sub eax [ecx] +
jmp loc_109F163  +
mov eax [ecx+0Ch] +
sub eax [ecx+4] +
push ebx  +
mov ebx ds:MulDiv +
push esi  +
mov esi eax +
imul esi [ebp+arg_4] +
push edi  +
push 2  +
push 1  +
push [ebp+nNumber]  +
mov [ebp+var_14] esi +
call ebx  +
mov edi eax +
add edi esi +
cmp [ebp+arg_8] edi +
jle loc_109F243  +
push [ebp+var_4]  +
xor esi esi +
lea ecx [ebp+arg_0] +
mov [ebp+arg_0] esi +
call sub_100801C  +
test eax eax +
jz loc_109F23B  +
push [ebp+arg_0]  +
mov eax [ebp+var_8] +
push dword ptr [eax+90h]  +
call ds:off_106C7AC  +
push esi  +
push offset loc_109C4DE  +
lea ecx [ebp+arg_0] +
call sub_100F821  +
cmp [ebp+var_4] esi +
mov [ebp+arg_4] esi +
jle loc_109F23B  +
cmp [ebp+arg_8] edi +
jle loc_109F23B  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov ecx [ebp+arg_4] +
mov esi [eax+ecx*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+50h]  +
test eax eax +
jz loc_109F230  +
mov eax [esi] +
lea ecx [ebp+var_10] +
push ecx  +
xor edi edi +
inc edi  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
call dword ptr [eax+28h]  +
push edi  +
mov [ebp+var_8] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
mov eax [esi] +
lea ecx [ebp+var_C] +
push ecx  +
push 0  +
push edi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
call dword ptr [eax+28h]  +
sub eax [ebp+var_8] +
push 2  +
add [ebp+arg_8] eax +
mov eax [ebp+var_C] +
sub eax [ebp+var_10] +
push edi  +
add [ebp+nNumber] eax +
push [ebp+nNumber]  +
call ebx  +
mov edi eax +
add edi [ebp+var_14] +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_4] +
jl loc_109F1CB  +
lea ecx [ebp+arg_0] +
call sub_10082DC  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov edi ecx +
mov [ebp+var_C] edi +
call sub_1004266  +
mov ebx eax +
mov eax [edi+90h] +
test eax eax +
jz loc_109F276  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_109F27A  +
and [ebp+var_4] 0 +
cmp [ebp+var_4] 0 +
jle loc_109F3D5  +
push esi  +
mov ecx edi +
call sub_1004266  +
test eax eax +
mov eax [ebp+arg_0] +
jz loc_109F29A  +
mov esi [eax+8] +
sub esi [eax] +
jmp loc_109F2A0  +
mov esi [eax+0Ch] +
sub esi [eax+4] +
test ebx ebx +
jz loc_109F2B5  +
lea eax [ebp+arg_0] +
push eax  +
push 1  +
mov ecx edi +
call sub_1004304  +
mov edi eax +
jmp loc_109F2CB  +
lea edx [ebp+arg_0] +
lea eax [edi+14h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
add edi [ebp+arg_0] +
and [ebp+arg_0] 0 +
imul esi [ebp+arg_4] +
mov ebx ds:MulDiv +
push 2  +
push 1  +
push [ebp+nNumber]  +
mov [ebp+var_10] esi +
call ebx  +
add eax [ebp+arg_0] +
sub esi edi +
add esi eax +
cmp [ebp+arg_8] esi +
jge loc_109F3D4  +
mov edi [ebp+var_4] +
and [ebp+arg_0] 0 +
push edi  +
lea ecx [ebp+arg_0] +
call sub_100801C  +
test eax eax +
jz loc_109F3CC  +
push [ebp+arg_0]  +
mov eax [ebp+var_C] +
push dword ptr [eax+90h]  +
call ds:off_106C7AC  +
push 0  +
push offset loc_109C4DE  +
lea ecx [ebp+arg_0] +
call sub_100F821  +
lea eax [edi-1] +
mov [ebp+arg_4] eax +
test eax eax +
jge loc_109F33C  +
jmp loc_109F3CC  +
mov eax [ebp+arg_4] +
cmp [ebp+arg_8] esi +
jge loc_109F3CC  +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
mov edi [ecx+eax*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_109F3C3  +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
push 1  +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push edi  +
call dword ptr [eax+28h]  +
lea ecx [ebp+var_8] +
push ecx  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov [ebp+var_4] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+28h]  +
sub eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
add eax ecx +
mov [ebp+var_4] eax +
mov eax [ebp+var_8] +
sub eax [ebp+var_C] +
push 2  +
push 1  +
push eax  +
call ebx  +
add eax esi +
cmp [ebp+var_4] eax +
jge loc_109F3C3  +
mov eax [edi] +
push 0  +
push edi  +
call dword ptr [eax+58h]  +
mov eax [ebp+var_4] +
mov [ebp+arg_8] eax +
mov eax [ebp+var_8] +
sub eax [ebp+var_C] +
push 2  +
add [ebp+nNumber] eax +
push 1  +
push [ebp+nNumber]  +
call ebx  +
mov esi eax +
add esi [ebp+var_10] +
dec [ebp+arg_4]  +
jns loc_109F339  +
lea ecx [ebp+arg_0] +
call sub_10082DC  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
push esi  +
call dword ptr [eax+70h]  +
xor ebx ebx +
push ebx  +
push ebx  +
lea edi [esi-14h] +
push 0FFFFFFFFh  +
push ebx  +
mov ecx edi +
mov [ebp-4] edi +
call sub_1044438  +
push 0FFFFFFFFh  +
push ebx  +
mov ecx edi +
call sub_10094BE  +
lea eax [esi+170h] +
push eax  +
call sub_1002BEE  +
mov ecx edi +
call sub_1004226  +
test al 1 +
jnz loc_109F461  +
mov [ebp+8] ebx +
mov eax [esi+7Ch] +
cmp eax ebx +
jz loc_109F435  +
mov eax [eax] +
jmp loc_109F437  +
xor eax eax +
mov ecx [ebp+8] +
cmp ecx eax +
jge loc_109F461  +
mov eax [esi+7Ch] +
mov eax [eax+4] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax 3 +
jnz loc_109F459  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+58h]  +
inc dword ptr [ebp+8]  +
mov edi [ebp-4] +
jmp loc_109F42A  +
***
mov ecx edi +
call sub_1006CED  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+184h] +
test eax eax +
jz loc_109F49E  +
push eax  +
push dword ptr [esi+90h]  +
call ds:off_100407C  +
cmp [ebp+arg_0] 2 +
jnz loc_109F4AE  +
inc eax  +
jmp loc_109F4AE  +
mov eax [esi+90h] +
test eax eax +
jz loc_109F4AC  +
mov eax [eax] +
jmp loc_109F4AE  +
xor eax eax +
push eax  +
push dword ptr [esi+198h]  +
mov ecx esi +
call sub_100ED83  +
mov [esi+19Ch] eax +
test eax eax +
jz loc_109F4D3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov ecx esi +
call sub_1006CED  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi-0Ch] +
mov ecx [eax] +
xor ebx ebx +
push ebx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi [ebp+1Ch] +
lea eax [ebp+8] +
push eax  +
push edi  +
push dword ptr [ebp+18h]  +
lea ecx [esi-24h] +
push dword ptr [ebp+14h]  +
mov [edi] ebx +
push dword ptr [ebp+10h]  +
mov [ebp+8] ebx +
call sub_109ED55  +
mov ebx [esi+174h] +
test ebx ebx +
jz loc_109F534  +
push ebx  +
lea ecx [esi-24h] +
call sub_1005D55  +
test eax eax +
jnz loc_109F534  +
push dword ptr [ebp+8]  +
lea ecx [esi-24h] +
call sub_109F476  +
mov eax [esi+160h] +
xor ecx ecx +
cmp eax ecx +
jz loc_109F54F  +
cmp eax [esi+178h] +
jnz loc_109F54F  +
mov dword ptr [ebp+8] 1 +
cmp [ebp+8] ecx +
jz loc_109F55E  +
jle loc_109F5D1  +
cmp dword ptr [ebp+8] 2 +
jg loc_109F5D1  +
jmp loc_109F59A  +
test byte ptr [ebp+10h] 4 +
jz loc_109F58E  +
lea eax [esi+15Ch] +
cmp [eax] ecx +
jz loc_109F5D1  +
push edi  +
push dword ptr [ebp+18h]  +
mov dword ptr [edi] 7 +
push dword ptr [ebp+14h]  +
mov eax [eax] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push dword ptr [esi+158h]  +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_109F5D1  +
cmp eax ecx +
jz loc_109F59A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
test ebx ebx +
jz loc_109F5D1  +
push ebx  +
lea ecx [esi-24h] +
mov dword ptr [edi] 4 +
call sub_109D782  +
mov ecx [esi+14h] +
mov edx [ecx] +
push eax  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push ecx  +
call dword ptr [edx+40h]  +
mov eax [esi+178h] +
test eax eax +
jz loc_109F5D1  +
push 0  +
lea ecx [esi-8] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+14h]  +
lea ecx [esi-24h] +
call sub_109D7EB  +
call ds:SHELL32_132  +
and dword ptr [esi+0B0h] 0 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx ecx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] 1 +
cmp eax [ebp+arg_4] +
jz loc_109F6E7  +
push esi  +
push edi  +
push eax  +
lea edi [ebx+90h] +
push dword ptr [edi]  +
call ds:off_10065B4  +
push 0  +
mov esi eax +
push esi  +
push [ebp+arg_4]  +
mov ecx edi +
call sub_10080DF  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_109F6E5  +
mov ecx ebx +
call sub_1006CED  +
cmp dword_10B24CC 0 +
jz loc_109F6E5  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109F664  +
test al al +
jnz loc_109F6E5  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_109F6E5  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_109F6E5  +
cmp edx ebx +
jnz loc_109F6E5  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
push 0  +
mov edi eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
push eax  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+3Ch]  +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
push eax  +
mov eax [edi] +
push edi  +
call dword ptr [eax+50h]  +
push eax  +
mov eax esi +
cdq   +
push edx  +
push eax  +
mov eax [ebp+var_8] +
push dword ptr [eax+4]  +
push offset dword_109F6F0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10430BD  +
pop edi  +
pop esi  +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+0Ch]  +
add esi 0FFFFFFECh +
mov ecx esi +
call sub_1005D6D  +
and dword ptr [ebp+8] 0 +
cmp dword ptr [ebp+10h] 0 +
jz loc_109F743  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp+10h]  +
mov ecx esi +
call sub_1005D6D  +
test eax eax +
jz loc_109F743  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp [ebp-4] eax +
jge loc_109F74C  +
dec eax  +
push eax  +
push dword ptr [ebp-4]  +
mov ecx esi +
call sub_109F5F4  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx ecx +
cmp [ebp+arg_0] edi +
jz loc_109F95B  +
jle loc_109F78A  +
mov eax [ebp+rcSrc1.right] +
add eax 0FFFFFFFEh +
mov [ebp+Rect.right] eax +
mov eax [ebp+rcSrc1.bottom] +
dec eax  +
jmp loc_109F795  +
mov eax [ebp+rcSrc1.left] +
inc eax  +
mov [ebp+Rect.right] eax +
mov eax [ebp+rcSrc1.top] +
inc eax  +
push dword ptr [ebx+164h]  +
mov esi ds:off_100407C +
push dword ptr [ebx+90h]  +
mov [ebp+Rect.bottom] eax +
call esi  +
push edi  +
push edi  +
push [ebp+Rect.bottom]  +
mov ecx ebx +
push [ebp+Rect.right]  +
mov [ebp+var_8] eax +
call sub_1045203  +
mov edi eax +
xor ecx ecx +
cmp edi ecx +
jz loc_109F81F  +
cmp edi [ebx+164h] +
jz loc_109F918  +
push edi  +
push dword ptr [ebx+90h]  +
call esi  +
lea ecx [ebp+var_28] +
push ecx  +
push 0FFFFFFFFh  +
mov [ebp+var_4] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+30h]  +
xor eax eax +
cmp [ebp+arg_0] eax +
lea esi [ebp+var_28] +
setnle al  +
mov ecx ebx +
push eax  +
sub esp 10h +
mov edi esp +
push [ebp+Rect.bottom]  +
movs   +
push [ebp+Rect.right]  +
movs   +
movs   +
movs   +
call sub_109BCE1  +
test eax eax +
jnz loc_109F842  +
cmp [ebp+arg_0] eax +
jle loc_109F81A  +
dec [ebp+var_4]  +
jmp loc_109F842  +
inc [ebp+var_4]  +
jmp loc_109F842  +
cmp [ebp+rcSrc1.left] ecx +
jl loc_109F83F  +
cmp [ebp+rcSrc1.top] ecx +
jl loc_109F83F  +
mov eax [ebx+90h] +
cmp eax ecx +
jz loc_109F837  +
mov eax [eax] +
jmp loc_109F839  +
xor eax eax +
dec eax  +
mov [ebp+var_4] eax +
jmp loc_109F842  +
mov [ebp+var_4] ecx +
mov esi [ebp+var_8] +
cmp [ebp+var_4] esi +
jle loc_109F853  +
cmp [ebp+arg_0] 0 +
jg loc_109F863  +
cmp [ebp+var_4] esi +
jge loc_109F918  +
cmp [ebp+arg_0] 0 +
jge loc_109F918  +
push [ebp+var_4]  +
mov ecx ebx +
push esi  +
call sub_109F5F4  +
test eax eax +
jl loc_109F95B  +
mov ecx ebx +
call sub_1004266  +
lea edx [ebp+Rect] +
push edx  +
mov edi eax +
mov eax [ebx+164h] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+30h]  +
test edi edi +
jz loc_109F8A3  +
mov eax [ebp+rcSrc1.left] +
sub eax [ebp+Rect.left] +
mov [ebx+168h] eax +
jmp loc_109F8AF  +
mov eax [ebp+rcSrc1.top] +
sub eax [ebp+Rect.top] +
mov [ebx+16Ch] eax +
lea eax [ebx+1Ch] +
mov ecx [eax] +
push 0Bh  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_109F95B  +
test edi edi +
jz loc_109F8CE  +
mov edi [ebp+Rect.right] +
sub edi [ebp+Rect.left] +
jmp loc_109F8D4  +
mov edi [ebp+Rect.bottom] +
sub edi [ebp+Rect.top] +
mov ecx [ebp+var_4] +
inc edi  +
inc edi  +
cmp esi ecx +
jle loc_109F8E1  +
neg edi  +
cmp esi ecx +
mov eax esi +
jl loc_109F8E7  +
mov eax ecx +
cmp esi ecx +
mov [ebp+arg_0] esi +
jg loc_109F8F1  +
mov [ebp+arg_0] ecx +
cmp eax [ebp+arg_0] +
mov esi eax +
jg loc_109F95B  +
cmp esi [ebp+var_4] +
jz loc_109F910  +
mov eax [ebx+90h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+68h]  +
inc esi  +
cmp esi [ebp+arg_0] +
jg loc_109F95B  +
jmp loc_109F8F8  +
mov eax [ebx+164h] +
mov ecx [eax] +
lea edx [ebp+Rect] +
push edx  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+30h]  +
mov esi ds:UnionRect +
lea eax [ebp+Rect] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call esi  +
lea eax [ebp+Rect] +
push eax  +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call esi  +
push 0  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+4]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_1005671  +
xor ecx ecx +
cmp eax 1 +
setnle cl  +
lea ebx [esi+164h] +
push dword ptr [ebx]  +
push dword ptr [esi+90h]  +
mov [ebp+var_C] ecx +
call ds:off_100407C  +
xor edi edi +
mov [ebp+var_8] eax +
cmp [ebp+var_C] edi +
jz loc_109F9E8  +
cmp [esi+168h] edi +
jnz loc_109F9B2  +
cmp [esi+16Ch] edi +
jz loc_109F9E8  +
push dword ptr [esi+158h]  +
mov ecx esi +
push dword ptr [esi+154h]  +
call sub_109DC85  +
mov edi eax +
mov eax [esi+178h] +
cmp edi eax +
jle loc_109F9D2  +
dec edi  +
test edi edi +
jl loc_109F9E6  +
push edi  +
push eax  +
mov ecx esi +
call sub_109F5F4  +
test eax eax +
jnz loc_109F9E6  +
mov [ebp+var_8] edi +
xor edi edi +
mov eax [ebp+var_8] +
cmp [esi+178h] eax +
jz loc_109FA84  +
mov ebx [ebx] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+60h]  +
cmp eax 0FFFFFFFFh +
jz loc_109FA75  +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
mov eax [esi+90h] +
cmp eax edi +
jz loc_109FA18  +
mov eax [eax] +
jmp loc_109FA1A  +
xor eax eax +
mov ecx [ebp+var_8] +
cmp ecx eax +
jge loc_109FA75  +
mov eax [esi+90h] +
mov eax [eax+4] +
mov ebx [eax+ecx*4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+60h]  +
cmp eax 0FFFFFFFFh +
jz loc_109FA70  +
cmp eax [ebp+var_4] +
jz loc_109FA64  +
mov eax [esi+164h] +
cmp ebx eax +
jnz loc_109FA64  +
mov ecx [esi+38h] +
cmp ecx edi +
jz loc_109FA64  +
push [ebp+var_4]  +
mov edi [ecx] +
mov ecx [eax] +
push eax  +
add edi 70h +
call dword ptr [ecx+14h]  +
push eax  +
push dword ptr [esi+38h]  +
call dword ptr [edi]  +
xor edi edi +
push [ebp+var_4]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+64h]  +
inc [ebp+var_4]  +
inc [ebp+var_8]  +
jmp loc_109FA0A  +
lea ebx [esi+164h] +
push dword ptr [ebx]  +
mov ecx esi +
call sub_109B600  +
lea eax [esi+18h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+34h]  +
cmp [ebp+var_C] edi +
jnz loc_109FAC4  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push 0Bh  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_109FAC4  +
mov ecx esi +
call sub_1004266  +
test eax eax +
jz loc_109FAB5  +
mov ecx [esi+168h] +
jmp loc_109FABB  +
mov ecx [esi+16Ch] +
mov eax [ebx] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+68h]  +
push ebx  +
call sub_1002BEE  +
or dword ptr [esi+178h] 0FFFFFFFFh +
push edi  +
push edi  +
push dword ptr [esi+4]  +
mov [esi+168h] edi +
mov [esi+16Ch] edi +
mov [esi+150h] edi +
call ds:InvalidateRect  +
mov [esi+0A4h] edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+150h] 1 +
jnz loc_109FB6C  +
mov eax [esi+164h] +
push ebx  +
push edi  +
push eax  +
lea edi [esi+90h] +
push dword ptr [edi]  +
call ds:off_100407C  +
lea ebx [esi+178h] +
cmp eax [ebx] +
jz loc_109FB4E  +
push eax  +
push dword ptr [edi]  +
call ds:off_10065B4  +
push 0  +
push dword ptr [esi+164h]  +
mov ecx edi +
push dword ptr [ebx]  +
call sub_10080DF  +
mov ecx esi +
call sub_1006CED  +
call ds:ReleaseCapture  +
and dword ptr [esi+16Ch] 0 +
and dword ptr [esi+168h] 0 +
pop edi  +
pop ebx  +
mov ecx esi +
pop esi  +
jmp sub_109F967  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
cmp dword_10B24CC 0 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
jz loc_109FBE4  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_109FB96  +
test al al +
jnz loc_109FBE4  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov esi 80000000h +
and eax edx +
and ecx esi +
or eax ecx +
jz loc_109FBE4  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx esi +
cmp ecx eax +
jnz loc_109FBE4  +
cmp edx ebx +
jnz loc_109FBE4  +
push offset dword_109FD68  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
mov eax [edi+150h] +
or [ebp+var_4] 0FFFFFFFFh +
cmp eax 2 +
jnz loc_109FBFC  +
mov ecx edi +
call sub_109E7A2  +
jmp loc_109FC08  +
cmp eax 1 +
jnz loc_109FC08  +
mov ecx edi +
call sub_109FAFE  +
cmp [ebp+arg_8] 0 +
jz loc_109FC7D  +
mov esi [edi+0A8h] +
mov ebx [edi+0B0h] +
test esi esi +
jnz loc_109FC49  +
lea eax [edi+90h] +
mov ecx [eax] +
test ecx ecx +
jz loc_109FC2E  +
mov ecx [ecx] +
jmp loc_109FC30  +
xor ecx ecx +
test ecx ecx +
jle loc_109FD60  +
mov eax [eax] +
mov eax [eax+4] +
mov esi [eax] +
xor ebx ebx +
test esi esi +
jz loc_109FD60  +
cmp ebx 0FFFFFFFEh +
jl loc_109FCAE  +
mov eax [esi] +
lea ecx [ebp+var_1C] +
push ecx  +
push ebx  +
push esi  +
call dword ptr [eax+30h]  +
mov eax [ebp+var_14] +
sub eax [ebp+var_1C] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_1C] +
mov [ebp+Point.x] eax +
mov eax [ebp+var_10] +
sub eax [ebp+var_18] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_18] +
mov [ebp+Point.y] eax +
jmp loc_109FCAE  +
mov eax [ebp+arg_0] +
mov [ebp+Point.x] eax +
mov eax [ebp+arg_4] +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [edi+4]  +
call ds:ScreenToClient  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+Point.y]  +
mov ecx edi +
push [ebp+Point.x]  +
call sub_1045203  +
mov ebx [ebp+var_4] +
mov esi eax +
test esi esi +
jz loc_109FD60  +
cmp ebx 0FFFFFFFFh +
jz loc_109FD60  +
mov eax [esi] +
and [ebp+arg_8] 0 +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_109FCDF  +
test ebx ebx +
jl loc_109FCDF  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+0ACh]  +
mov [ebp+arg_8] eax +
push 10h  +
call ds:GetKeyState  +
test ax ax +
jge loc_109FD31  +
mov eax [ebp+arg_8] +
and [ebp+arg_0] 0 +
test eax eax +
jz loc_109FD00  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov [ebp+arg_0] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [edi+4]  +
call ds:ClientToScreen  +
lea ebx [edi+18h] +
mov eax [ebx] +
mov [ebp+arg_8] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
push [ebp+arg_0]  +
mov eax [ebp+arg_8] +
push dword ptr [edi+4]  +
push [ebp+Point.y]  +
push [ebp+Point.x]  +
push ebx  +
call dword ptr [eax+1Ch]  +
jmp loc_109FD60  +
cmp esi [edi+0E0h] +
jnz loc_109FD49  +
cmp esi [edi+0B4h] +
jnz loc_109FD60  +
cmp [edi+0B8h] ebx +
jz loc_109FD60  +
mov eax [esi] +
push 0  +
push 0  +
push [ebp+arg_8]  +
add edi 14h +
mov ebx [edi] +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
push edi  +
call dword ptr [ebx+78h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_109FAFE  +
mov ecx esi +
call sub_109E7A2  +
push 0FFFFFFECh  +
push dword ptr [esi+4]  +
lea edi [esi+18h] +
call ds:GetWindowLongW  +
shr eax 16h +
xor ebx ebx +
inc ebx  +
and eax ebx +
push eax  +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
push eax  +
push [ebp+arg_0]  +
call sub_109A982  +
cmp eax 24h +
jg loc_109FEF6  +
jz loc_109FEBA  +
cmp eax 0Dh +
jz loc_109FE72  +
cmp eax 1Bh +
jz loc_109FE39  +
cmp eax 20h +
jz loc_109FE72  +
cmp eax 23h +
jnz loc_109FF80  +
lea eax [esi+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov eax [esi+90h] +
xor edi edi +
cmp eax edi +
jz loc_109FE01  +
mov eax [eax] +
jmp loc_109FE03  +
xor eax eax +
cmp eax edi +
jle loc_109FF80  +
mov eax [esi+90h] +
cmp eax edi +
jz loc_109FE19  +
mov eax [eax] +
jmp loc_109FE1B  +
xor eax eax +
mov ecx [esi+90h] +
mov ecx [ecx+4] +
mov edi [ecx+eax*4-4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+98h]  +
push ebx  +
push eax  +
push edi  +
jmp loc_109FEEA  +
xor edi edi +
cmp [esi+150h] edi +
jnz loc_109FE4B  +
cmp [esi+9Ch] edi +
jnz loc_109FE57  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push edi  +
mov ecx esi +
call sub_1044438  +
lea eax [esi+14h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+6Ch]  +
add esi 0BCh +
push esi  +
call sub_1002BEE  +
jmp loc_109FF80  +
xor edi edi +
cmp [esi+0A8h] edi +
jz loc_109FF80  +
cmp eax 0Dh +
jnz loc_109FE96  +
push 10h  +
call ds:GetKeyState  +
test ax ax +
jge loc_109FE96  +
mov eax ebx +
jmp loc_109FE98  +
xor eax eax +
neg eax  +
push edi  +
sbb eax eax +
push ebx  +
and eax 3 +
push eax  +
push dword ptr [esi+0B0h]  +
mov ecx esi +
push dword ptr [esi+0A8h]  +
call sub_1045930  +
jmp loc_109FF80  +
lea eax [esi+14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+70h]  +
mov eax [esi+90h] +
xor edi edi +
cmp eax edi +
jz loc_109FED3  +
mov eax [eax] +
jmp loc_109FED5  +
xor eax eax +
cmp eax edi +
jle loc_109FF80  +
mov eax [esi+90h] +
mov eax [eax+4] +
push ebx  +
push edi  +
push dword ptr [eax]  +
mov ecx esi +
call sub_109E361  +
jmp loc_109FF80  +
mov ecx eax +
sub ecx 25h +
push 0  +
pop edi  +
jz loc_109FF64  +
dec ecx  +
jz loc_109FF09  +
dec ecx  +
jz loc_109FF64  +
dec ecx  +
jnz loc_109FF80  +
cmp [esi+0A8h] edi +
jz loc_109FF64  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 3 +
jnz loc_109FF2A  +
push edi  +
push ebx  +
push edi  +
jmp loc_109FEA2  +
mov eax [esi+0A8h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jnz loc_109FF80  +
push ebx  +
push 2  +
push dword ptr [esi+0B0h]  +
mov ecx esi +
push dword ptr [esi+0A8h]  +
call sub_109D5A1  +
test eax eax +
jl loc_109FF80  +
push ebx  +
push dword ptr [esi+0E4h]  +
mov ecx esi +
call sub_109B6C1  +
jmp loc_109FF80  +
mov ecx ebx +
cmp eax 25h +
jz loc_109FF70  +
cmp eax 26h +
jnz loc_109FF72  +
xor ecx ecx +
push edi  +
lea eax [esi+14h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+84h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:GetCapture  +
cmp eax [esi+4] +
jnz loc_109FFA5  +
call ds:ReleaseCapture  +
mov eax [esi+0E8h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push eax  +
call sub_1054574  +
test eax eax +
jz loc_109FFDD  +
lea eax [esi+14h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
xor eax eax +
cmp [esi+50h] eax +
jnz loc_109FFDD  +
push 1  +
push eax  +
push 0FFFFFFFFh  +
push eax  +
mov ecx esi +
call sub_1044438  +
mov ecx esi +
call sub_109FAFE  +
mov ecx esi +
call sub_109E7A2  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor ecx ecx +
cmp cx [ebp+0Ch] +
push ebx  +
push edi  +
mov eax 80070057h +
jg loc_10A0158  +
push esi  +
mov esi [ebp+8] +
mov ecx [esi+7Ch] +
test ecx ecx +
jz loc_10A001C  +
mov edx [ecx] +
jmp loc_10A001E  +
xor edx edx +
movsx ecx word ptr [ebp+0Ch] +
cmp ecx edx +
jge loc_10A0157  +
cmp dword ptr [esi+3Ch] 0 +
jnz loc_10A0154  +
mov eax [esi+7Ch] +
mov eax [eax+4] +
mov ebx [eax+ecx*4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0Ch]  +
mov edi eax +
mov eax [esi+0D4h] +
mov ecx [eax] +
dec edi  +
neg edi  +
sbb edi edi +
push eax  +
and edi 0FFFFFFFEh +
call dword ptr [ecx+34h]  +
test eax eax +
jz loc_10A006D  +
cmp [esi+0D0h] ebx +
jnz loc_10A006D  +
cmp [esi+94h] ebx +
jz loc_10A0079  +
push 0  +
push edi  +
push ebx  +
lea ecx [esi-14h] +
call sub_109E361  +
mov eax [esi+0D4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jnz loc_10A00AD  +
push eax  +
lea ecx [esi-14h] +
call sub_103475A  +
test eax eax +
jnz loc_10A00AD  +
call ds:GetForegroundWindow  +
mov ecx hWnd +
cmp eax ecx +
jz loc_10A00AD  +
push ecx  +
call ds:SetForegroundWindow  +
test byte ptr [ebp+10h] 1 +
jz loc_10A00C6  +
push 1  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
lea ecx [esi-14h] +
call sub_109FB73  +
jmp loc_10A0150  +
mov eax [esi+0D4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
test eax eax +
jz loc_10A00F3  +
cmp [esi+0D0h] ebx +
jnz loc_10A00F3  +
mov eax [esi+0D4h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
test eax eax +
jz loc_10A00F3  +
xor eax eax +
inc eax  +
jmp loc_10A00F5  +
xor eax eax +
xor edx edx +
inc edx  +
test byte ptr [ebp+10h] 4 +
jz loc_10A0109  +
neg eax  +
sbb eax eax +
add eax 3 +
mov edx eax +
jmp loc_10A0112  +
test byte ptr [ebp+10h] 2 +
jz loc_10A0112  +
push 4  +
pop edx  +
push 0  +
push 1  +
push edx  +
push edi  +
lea ecx [esi-14h] +
push ebx  +
mov [ebp+10h] ecx +
call sub_1045930  +
mov esi [esi+0D4h] +
mov eax [esi] +
push esi  +
call dword ptr [eax+34h]  +
test eax eax +
jnz loc_10A0150  +
mov ecx [ebp+10h] +
xor esi esi +
push esi  +
call sub_103475A  +
test eax eax +
jnz loc_10A0150  +
mov ecx [ebp+10h] +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call sub_1044438  +
xor eax eax +
jmp loc_10A0157  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+rc] +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
push [ebp+arg_4]  +
mov ebx ecx +
push [ebp+arg_0]  +
call sub_109DD50  +
mov ecx ebx +
call sub_1005671  +
cmp eax 1 +
jg loc_10A01C6  +
mov ecx ebx +
call sub_1004266  +
test eax eax +
mov eax [ebp+var_8] +
jnz loc_10A01A4  +
mov eax [ebp+var_4] +
sub esp 10h +
mov edi esp +
lea esi [ebp+rcDst] +
movs   +
movs   +
movs   +
movs   +
sub esp 10h +
mov edi esp +
lea esi [ebp+rc] +
movs   +
movs   +
movs   +
push eax  +
mov ecx ebx +
movs   +
call sub_109F761  +
jmp loc_10A01D3  +
push 0  +
push 0  +
push dword ptr [ebx+4]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push 2000000h  +
call ds:__imp_SHELL32_100  +
test eax eax +
jnz locret_10A056B  +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
cmp [esi+38h] ebx +
jnz loc_10A0569  +
mov eax [esi-14h] +
cmp [ebp+14h] eax +
jnz loc_10A024B  +
mov ecx [ebp+0Ch] +
mov [ebp-14h] ecx +
mov ecx [ebp+10h] +
mov [ebp-10h] ecx +
lea ecx [ebp-14h] +
push ecx  +
push eax  +
mov [esi+8Ch] ebx +
call ds:ScreenToClient  +
push dword ptr [ebp-10h]  +
or dword ptr [esi+148h] 0FFFFFFFFh +
push dword ptr [ebp-14h]  +
or dword ptr [esi+144h] 0FFFFFFFFh +
lea ecx [esi-18h] +
call sub_1045335  +
push edi  +
lea edi [esi-18h] +
cmp [edi+0C8h] ebx +
jnz loc_10A02F0  +
cmp [edi+0F0h] ebx +
jnz loc_10A02F0  +
mov eax [edi+0A8h] +
cmp eax ebx +
jz loc_10A02DB  +
mov ecx [edi+0ACh] +
mov [ebp+8] ecx +
cmp ecx ebx +
jnz loc_10A0296  +
push dword ptr [edi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov [ebp+8] eax +
cmp eax ebx +
jz loc_10A02DB  +
mov ecx eax +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_10A02DB  +
mov eax [edi+0A8h] +
cmp eax [edi+0E4h] +
jnz loc_10A02C2  +
mov eax [edi+0E8h] +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_10A02C5  +
xor eax eax +
inc eax  +
cmp eax ebx +
jz loc_10A02DB  +
mov eax [edi+0A8h] +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+88h]  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [edi+98h]  +
call ds:SendMessageW  +
jmp loc_10A032D  +
push ebx  +
push ebx  +
push 411h  +
push dword ptr [edi+98h]  +
call ds:SendMessageW  +
push dword ptr [edi+0F0h]  +
push dword ptr [edi+4]  +
call ds:KillTimer  +
push dword ptr [edi+0F4h]  +
mov [edi+0F0h] ebx +
push dword ptr [edi+4]  +
call ds:KillTimer  +
mov [edi+0F4h] ebx +
mov eax [esi] +
push ebx  +
push ebx  +
push esi  +
call dword ptr [eax+48h]  +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+34h]  +
mov eax [ebp+18h] +
mov [esi+38h] eax +
mov eax [ebp+14h] +
mov [ebp-8] ebx +
mov [esi+3Ch] eax +
mov [ebp-0Ch] ebx +
mov [ebp-4] ebx +
cmp [ebp+1Ch] ebx +
jnz loc_10A039E  +
mov eax [esi+20h] +
lea edx [ebp+8] +
push edx  +
lea edx [ebp+1Ch] +
push edx  +
push dword ptr [ebp+18h]  +
mov [ebp+8] ebx +
mov ecx [eax] +
push eax  +
mov dword ptr [ebp-0Ch] 1 +
call dword ptr [ecx+0Ch]  +
push dword ptr [ebp+8]  +
mov ecx edi +
mov [ebp-8] eax +
call sub_1009667  +
mov ecx [ebp+8] +
cmp eax ebx +
jz loc_10A0392  +
cmp eax ecx +
jz loc_10A0392  +
mov [ebp-4] ecx +
jmp loc_10A03B2  +
cmp ecx ebx +
jz loc_10A03B2  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
jmp loc_10A03B2  +
lea eax [esi-4] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+6Ch]  +
mov eax [ebp+1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
cmp [ebp-8] ebx +
jl loc_10A055F  +
cmp [ebp+18h] ebx +
jz loc_10A0405  +
cmp [ebp-4] ebx +
jnz loc_10A0405  +
push dword ptr [ebp+18h]  +
call ds:SetForegroundWindow  +
push 4013h  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp+18h]  +
call ds:SetWindowPos  +
movzx eax word ptr [ebp+10h] +
movzx ecx word ptr [ebp+0Ch] +
shl eax 10h +
or eax ecx +
push eax  +
push dword ptr [ebp+18h]  +
push 43Bh  +
push dword ptr [esi-14h]  +
call ds:PostMessageW  +
jmp loc_10A0556  +
mov eax [esi+20h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
lea edx [ebp-8] +
push edx  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+1Ch]  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl loc_10A054F  +
mov eax [ebp-8] +
cmp eax ebx +
jz loc_10A043C  +
mov ecx [eax] +
lea edx [esi+114h] +
push edx  +
push offset dword_1011ED0  +
push eax  +
call dword ptr [ecx]  +
push dword ptr [ebp+14h]  +
call ds:SetForegroundWindow  +
push dword ptr [ebp+14h]  +
call ds:SetFocus  +
push dword ptr [ebp+1Ch]  +
mov ecx edi +
mov [ebp+8] ebx +
call sub_1005D55  +
push eax  +
lea eax [ebp+8] +
push eax  +
call ds:__imp_IUnknown_Set  +
cmp dword_10B24CC ebx +
jz loc_10A04CE  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A047B  +
cmp al bl +
jnz loc_10A04CE  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
and eax edx +
and ecx 80000000h +
or eax ecx +
jz loc_10A04CE  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx edx +
mov edx dword_10B24C4 +
and edx 80000000h +
cmp ecx eax +
jnz loc_10A04CE  +
cmp edx dword_10B24C4 +
jnz loc_10A04CE  +
push offset dword_1068950  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
push ebx  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push 100h  +
push dword ptr [ebp-10h]  +
call ds:TrackPopupMenuEx  +
mov [ebp+14h] eax +
cmp [ebp+8] ebx +
jz loc_10A04FC  +
push eax  +
push dword ptr [ebp-0Ch]  +
mov ecx edi +
push dword ptr [ebp+8]  +
call sub_109DA0D  +
cmp [ebp+14h] ebx +
jz loc_10A0528  +
cmp [ebp+18h] ebx +
jz loc_10A0513  +
push dword ptr [ebp+18h]  +
call ds:IsWindow  +
test eax eax +
jz loc_10A0528  +
push dword ptr [ebp+14h]  +
mov eax [esi+20h] +
push dword ptr [ebp-8]  +
mov ecx [eax] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+1Ch]  +
push eax  +
call dword ptr [ecx+24h]  +
push dword ptr [ebp-10h]  +
call ds:DestroyMenu  +
add esi 114h +
push esi  +
call sub_1002BEE  +
lea eax [ebp-8] +
push eax  +
call sub_1002BEE  +
lea eax [ebp+8] +
push eax  +
call sub_1002BEE  +
mov ecx edi +
call sub_109B0B8  +
mov eax [ebp+1Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp-4] +
push eax  +
call sub_1002BEE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+8] +
mov eax [esi+14h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [ebp+10h] +
mov [ebp-10h] eax +
mov eax [ebp+14h] +
mov [ebp-0Ch] eax +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi-20h]  +
call ds:ScreenToClient  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [esi-20h]  +
call sub_107D1ED  +
push dword ptr [ebp-0Ch]  +
lea edi [esi-24h] +
push dword ptr [ebp-10h]  +
mov ecx edi +
call sub_1045335  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+18h]  +
mov ecx edi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_109ED55  +
test eax eax +
jnz loc_10A08BB  +
cmp dword ptr [esi+164h] 0FFFFFFFFh +
jz loc_10A08BB  +
push ebx  +
cmp [ebp-4] eax +
jnz loc_10A06B2  +
mov eax [esi+160h] +
cmp eax [esi+178h] +
jz loc_10A06B2  +
call ds:GetTickCount  +
sub eax [esi+168h] +
cmp eax [esi+16Ch] +
jb loc_10A08BA  +
mov ecx [esi+164h] +
cmp ecx 0FFFFFFFEh +
jnz loc_10A066E  +
mov eax [esi+160h] +
lea ebx [esi+0C0h] +
cmp eax [ebx] +
jz loc_10A06A3  +
push ebx  +
call sub_1002BEE  +
push 0  +
push 0  +
push dword ptr [esi+164h]  +
mov ecx edi +
push dword ptr [esi+160h]  +
call sub_109D5A1  +
test eax eax +
jl loc_10A06A3  +
push 1  +
push dword ptr [ebx]  +
mov ecx edi +
call sub_109B6C1  +
jmp loc_10A06A3  +
test ecx ecx +
jl loc_10A06A3  +
mov eax [esi+160h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+0ACh]  +
test eax eax +
jz loc_10A06A3  +
mov ecx [esi+14h] +
mov edi [ecx] +
mov ecx [esi+160h] +
push 1  +
push eax  +
mov eax [ecx] +
push ecx  +
add edi 1Ch +
call dword ptr [eax+14h]  +
push eax  +
push dword ptr [esi+14h]  +
call dword ptr [edi]  +
add dword ptr [esi+16Ch] 2710h +
jmp loc_10A08BA  +
mov eax [esi+174h] +
test eax eax +
jz loc_10A08BA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 2 +
jz loc_10A08BA  +
mov eax [esi+178h] +
test eax eax +
jz loc_10A06E4  +
cmp [esi+160h] eax +
jz loc_10A08BA  +
lea ebx [esi-10h] +
mov eax [ebx] +
push 1  +
push ebx  +
call dword ptr [eax+6Ch]  +
mov eax [ebx] +
push 0  +
push ebx  +
call dword ptr [eax+7Ch]  +
cmp dword ptr [esi+178h] 0 +
jnz loc_10A070F  +
push dword ptr [ebp-4]  +
mov ecx edi +
call sub_109F476  +
jmp loc_10A08BA  +
cmp dword ptr [esi+160h] 0 +
jz loc_10A08BA  +
xor ecx ecx +
cmp [edi+0C8h] ecx +
jnz loc_10A07B7  +
cmp [edi+0F0h] ecx +
jnz loc_10A07B7  +
mov eax [edi+0A8h] +
cmp eax ecx +
jz loc_10A07A0  +
mov ebx [edi+0ACh] +
cmp ebx ecx +
jnz loc_10A075F  +
push dword ptr [edi+0B0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov ebx eax +
test ebx ebx +
jz loc_10A07A0  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0D0h]  +
test eax eax +
jnz loc_10A07A0  +
mov eax [edi+0A8h] +
cmp eax [edi+0E4h] +
jnz loc_10A0789  +
mov eax [edi+0E8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+64h]  +
jmp loc_10A078C  +
xor eax eax +
inc eax  +
test eax eax +
jz loc_10A07A0  +
mov eax [edi+0A8h] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+88h]  +
push 0  +
push 0  +
push 411h  +
push dword ptr [edi+98h]  +
call ds:SendMessageW  +
jmp loc_10A07F2  +
push ecx  +
push ecx  +
push 411h  +
push dword ptr [edi+98h]  +
call ds:SendMessageW  +
lea ebx [edi+0F0h] +
push dword ptr [ebx]  +
push dword ptr [edi+4]  +
call ds:KillTimer  +
and dword ptr [ebx] 0 +
lea ebx [edi+0F4h] +
push dword ptr [ebx]  +
push dword ptr [edi+4]  +
call ds:KillTimer  +
and dword ptr [ebx] 0 +
push dword ptr [esi+178h]  +
mov ebx ds:off_100407C +
push dword ptr [esi+6Ch]  +
call ebx  +
push dword ptr [esi+160h]  +
mov [ebp+8] eax +
push dword ptr [esi+6Ch]  +
call ebx  +
cmp dword ptr [ebp-4] 2 +
mov ebx eax +
mov [ebp-8] eax +
jnz loc_10A0820  +
inc ebx  +
mov [ebp-8] ebx +
push ebx  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_109F5F4  +
test eax eax +
jl loc_10A08BA  +
lea eax [esi-8] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_10A08BA  +
mov ecx edi +
call sub_1005671  +
cmp eax 1 +
jg loc_10A08BA  +
mov ecx edi +
call sub_1004266  +
lea edx [ebp-20h] +
push edx  +
mov edi eax +
mov eax [esi+178h] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+30h]  +
test edi edi +
jz loc_10A0875  +
mov edi [ebp-18h] +
sub edi [ebp-20h] +
jmp loc_10A087B  +
mov edi [ebp-14h] +
sub edi [ebp-1Ch] +
mov eax [ebp+8] +
inc edi  +
inc edi  +
cmp eax ebx +
jle loc_10A0888  +
neg edi  +
cmp eax ebx +
mov ecx eax +
jl loc_10A088E  +
mov ecx ebx +
cmp eax ebx +
mov [ebp+8] eax +
jg loc_10A0898  +
mov [ebp+8] ebx +
cmp ecx [ebp+8] +
mov ebx ecx +
jg loc_10A08BA  +
cmp ebx [ebp-8] +
jz loc_10A08B4  +
mov eax [esi+6Ch] +
mov eax [eax+4] +
mov eax [eax+ebx*4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+68h]  +
inc ebx  +
cmp ebx [ebp+8] +
jle loc_10A089F  +
pop ebx  +
mov edi [ebp+18h] +
lea eax [esi+15Ch] +
cmp dword ptr [eax] 0 +
jz loc_10A08E1  +
push edi  +
push dword ptr [ebp+14h]  +
mov dword ptr [edi] 7 +
push dword ptr [ebp+10h]  +
mov eax [eax] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [esi+170h] +
mov [edi] eax +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi+8] +
add eax 1Ch +
mov ecx [eax] +
lea esi [edi-8] +
neg esi  +
lea edx [ebp+8] +
push edx  +
sbb esi esi +
push 0Bh  +
and esi edi +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
mov ebx [ebp+0Ch] +
test eax eax +
jnz loc_10A093B  +
mov eax [edi+8] +
add ebx [ebp+8] +
push 0  +
push 0Bh  +
add eax 1Ch +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi [edi+8] +
lea edx [ebp-24h] +
push edx  +
push 0Bh  +
lea eax [edi+1Ch] +
push esi  +
mov dword ptr [ebp-24h] 2 +
mov [ebp-1Ch] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
mov edi [esi+24h] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_10A098A  +
movzx eax word ptr [ebp+0Ch] +
or eax 0FFFE0000h +
mov [esi+24h] eax +
jmp loc_10A0991  +
mov dword ptr [esi+24h] 0FFFEFFFEh +
cmp edi [esi+24h] +
jz loc_10A099F  +
mov eax [esi] +
push esi  +
call dword ptr [eax+84h]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
mov edi ecx +
mov eax [edi+10h] +
cmp dword ptr [eax+3Ch] 0 +
jz loc_10A0A19  +
push esi  +
mov esi [ebp+arg_8] +
mov eax [esi+8] +
sub eax [esi] +
push ds:nDenominator  +
add eax eax +
push eax  +
push [ebp+nNumber]  +
call ds:MulDiv  +
mov [ebp+arg_8] eax +
push esi  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
mov eax [esi] +
sub eax [esi+8] +
push 0  +
add eax [ebp+arg_8] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
push [ebp+arg_C]  +
lea eax [ebp+rc] +
push esi  +
push eax  +
mov eax [edi+10h] +
push 0  +
push 0Ah  +
push [ebp+arg_0]  +
push dword ptr [eax+3Ch]  +
call sub_100445D  +
pop esi  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
sub eax 3 +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
mov eax [eax+0Ch] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+30h]  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10h] +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_1007E0A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi+14h] +
xor esi esi +
mov [ebp-4] esi +
cmp eax esi +
jz loc_10A0AA3  +
mov ebx [eax] +
jmp loc_10A0AA5  +
xor ebx ebx +
cmp ebx esi +
jle loc_10A0AD7  +
mov eax [edi+14h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_10A0AC9  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test eax 40000h +
jnz loc_10A0AD0  +
inc esi  +
cmp esi ebx +
jge loc_10A0AD7  +
jmp loc_10A0AA9  +
***
mov dword ptr [ebp-4] 1 +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+18h] +
test eax eax +
jz loc_10A0AFF  +
mov eax [eax] +
jmp loc_10A0B01  +
xor eax eax +
mov ebx [ebp+arg_0] +
cmp ebx eax +
jge loc_10A0B4B  +
test ebx ebx +
jl loc_10A0B4B  +
push edi  +
mov edi ds:off_1003D88 +
push ebx  +
push dword ptr [esi+18h]  +
call edi  +
mov eax [eax+10h] +
cmp eax 0FFFFFFFFh +
jnz loc_10A0B32  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_10A0B2C  +
mov eax [eax] +
jmp loc_10A0B33  +
and [ebp+var_4] 0 +
jmp loc_10A0B36  +
inc eax  +
mov [ebp+var_4] eax +
test ebx ebx +
jle loc_10A0B4A  +
dec ebx  +
push ebx  +
push dword ptr [esi+18h]  +
call edi  +
or ecx 0FFFFFFFFh +
sub ecx [eax+10h] +
add [ebp+var_4] ecx +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
mov eax [ebx+14h] +
push edi  +
xor edi edi +
mov dword ptr [ebp-4] 1 +
cmp eax edi +
jz loc_10A0B7B  +
mov eax [eax] +
mov [ebp+8] eax +
jmp loc_10A0B7E  +
mov [ebp+8] edi +
cmp [ebp+8] edi +
jle loc_10A0BAA  +
push esi  +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+0Ch]  +
cmp eax [ebp+0Ch] +
jz loc_10A0BA0  +
inc edi  +
cmp edi [ebp+8] +
jge loc_10A0BA9  +
jmp loc_10A0B84  +
***
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
mov [ebp-4] eax +
pop esi  +
mov eax [ebp-4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi+14h] +
test eax eax +
jz loc_10A0BCE  +
mov ebx [eax] +
jmp loc_10A0BD0  +
xor ebx ebx +
xor esi esi +
test ebx ebx +
jle loc_10A0BF2  +
mov eax [edi+14h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ecx [eax] +
push 0FFFFFFFEh  +
push eax  +
call dword ptr [ecx+34h]  +
inc esi  +
cmp esi ebx +
jl loc_10A0BD6  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+14h] +
xor ecx ecx +
mov dword ptr [ebp-4] 80004005h +
cmp eax ecx +
jz loc_10A0C20  +
mov eax [eax] +
mov [ebp-8] eax +
jmp loc_10A0C23  +
mov [ebp-8] ecx +
cmp [ebp-8] ecx +
mov [ebp+8] ecx +
jle loc_10A0CC4  +
push ebx  +
mov ebx [ebp+0Ch] +
push edi  +
mov eax [esi+14h] +
mov eax [eax+4] +
mov ecx [ebp+8] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax ebx +
jz loc_10A0C57  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-8] +
jge loc_10A0CC2  +
jmp loc_10A0C34  +
***
mov eax [esi+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
test eax eax +
jz loc_10A0C9E  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_10A0C87  +
mov esi [esi+8] +
push 18h  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
mov [ebp-4] eax +
test eax eax +
jz loc_10A0CC2  +
push 0  +
jmp loc_10A0CB6  +
mov eax [esi+8] +
push 0  +
push 18h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10A0CA4  +
jmp loc_10A0CB3  +
cmp dword ptr [ebp+10h] 0 +
jz loc_10A0CC2  +
mov esi [esi+8] +
push 19h  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
push dword ptr [ebp+10h]  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+0B8h]  +
mov [ebp-4] eax +
pop edi  +
pop ebx  +
mov eax [ebp-4] +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
push esi  +
test ecx ecx +
jl loc_10A0D16  +
mov esi [ebp+8] +
mov eax [esi+14h] +
test eax eax +
jz loc_10A0CEC  +
mov eax [eax] +
jmp loc_10A0CEE  +
xor eax eax +
cmp ecx eax +
jge loc_10A0D16  +
mov eax [esi+14h] +
mov eax [eax+4] +
mov eax [eax+ecx*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push dword ptr [ebp+14h]  +
mov ecx [esi+0Ch] +
push dword ptr [ebp+10h]  +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+30h]  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax 80070057h +
jmp loc_10A0D11  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push edi  +
push esi  +
xor edi edi +
call dword ptr [eax+0Ch]  +
cmp eax 1 +
jnz loc_10A0DA8  +
mov eax [esi+14h] +
test eax eax +
jz loc_10A0D44  +
mov eax [eax] +
jmp loc_10A0D46  +
xor eax eax +
cmp eax 1 +
jnz loc_10A0DA8  +
mov eax [esi+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
test al 1 +
jnz loc_10A0DA8  +
mov eax [esi+14h] +
mov eax [eax+4] +
mov edi [eax] +
mov eax [esi+8] +
push 0  +
push 10h  +
add eax 1Ch +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10A0DA5  +
mov esi [esi+8] +
push 0  +
push 0Fh  +
lea eax [esi+1Ch] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_10A0DA5  +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:IsWindow  +
test eax eax +
jz loc_10A0DA5  +
xor edi edi +
jmp loc_10A0DA8  +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
push 54h  +
pop esi  +
push esi  +
lea eax [ebp+var_60] +
push 0  +
push eax  +
mov edi ecx +
call memset  +
mov [ebp+var_60] esi +
mov esi [ebp+arg_4] +
add esp 0Ch +
lea eax [esi+44h] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
push 2  +
pop ebx  +
push [ebp+arg_8]  +
mov ecx edi +
mov [ebp+var_4C] ebx +
mov [ebp+var_44] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] ebx +
call sub_1005B99  +
mov ecx [esi+4Ch] +
sub ecx [esi+44h] +
and [ebp+var_4C] 0 +
sub ecx eax +
mov eax [ebp+arg_8] +
dec eax  +
mov [ebp+arg_4] eax +
mov eax ecx +
mov ecx [ebp+arg_4] +
cdq   +
idiv  ecx +
push 0FFFFFFFFh  +
push 0  +
mov [ebp+var_8] eax +
lea eax [ebp+rc] +
push eax  +
call ds:InflateRect  +
cmp dword ptr [esi+58h] 0 +
mov eax [ebp+rc.left] +
mov ecx [ebp+var_8] +
lea eax [ecx+eax-1] +
mov [ebp+rc.right] eax +
mov al [esi+82h] +
mov byte ptr [ebp+arg_4+3] al +
jnz loc_10A0E5C  +
cmp dword ptr [esi+60h] 0 +
jnz loc_10A0E5C  +
cmp dword ptr [esi+2Ch] 0FFFFFFFFh +
jnz loc_10A0E72  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push ds:nDenominator  +
movzx eax al +
push eax  +
push dword ptr [esi+6Ch]  +
call ds:MulDiv  +
mov byte ptr [ebp+arg_4+3] al +
cmp byte ptr [ebp+arg_4+3] 0 +
jbe loc_10A0E55  +
push esi  +
push dword ptr [edi+2Ch]  +
mov ecx edi +
call sub_103F2AE  +
cmp dword ptr [esi+5Ch] 0 +
cwde   +
mov [ebp+nNumerator] eax +
jz loc_10A0ECF  +
push ds:nDenominator  +
movzx eax word ptr [esi+0Ch] +
push esi  +
or eax 0FFFE0000h +
push eax  +
mov ecx edi +
call sub_103F2AE  +
mov ebx ds:MulDiv +
cwde   +
push eax  +
push dword ptr [esi+70h]  +
call ebx  +
mov [ebp+var_C] eax +
mov eax ds:nDenominator +
push eax  +
push [ebp+nNumerator]  +
sub eax [esi+70h] +
push eax  +
call ebx  +
mov ecx [ebp+var_C] +
add ecx eax +
push 2  +
mov [ebp+nNumerator] ecx +
pop ebx  +
cmp dword ptr [esi] 0 +
jz loc_10A0EFE  +
mov eax [esi+34h] +
add eax [ebp+nNumerator] +
push 0  +
mov [ebp+var_3C] eax +
mov eax [edi+10h] +
add eax 14h +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov ecx [esi+1Ch] +
cdq   +
and edx 7 +
add eax edx +
sar eax 3 +
sub ecx eax +
mov [ebp+var_38] ecx +
jmp loc_10A0F19  +
mov ecx [esi+10h] +
mov eax [esi+18h] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add eax ecx +
mov [ebp+var_3C] eax +
mov eax [esi+38h] +
add eax [ebp+nNumerator] +
mov [ebp+var_38] eax +
mov eax [edi+10h] +
mov eax [eax+38h] +
mov eax [eax] +
add eax 18h +
mov [ebp+var_C] eax +
lea eax [ebp+var_34] +
push eax  +
push dword ptr [esi+0Ch]  +
mov ecx edi +
call sub_10059F8  +
push eax  +
push dword ptr [edi+14h]  +
mov eax [edi+10h] +
push dword ptr [eax+38h]  +
mov eax [ebp+var_C] +
call dword ptr [eax]  +
test eax eax +
jge loc_10A0F4F  +
mov [ebp+var_34] 0FFFF00h +
mov ecx [edi+10h] +
call sub_1004226  +
mov ecx 0FFh +
test al bl +
jz loc_10A0FCD  +
mov ebx [ebp+var_34] +
mov ax word ptr [ebp+var_34] +
shr ax 8 +
mov word ptr [ebp+nNumerator+2] ax +
shr ebx 10h +
movzx edx bl +
mov eax ecx +
sub eax edx +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
movzx edx byte ptr [ebp+nNumerator+2] +
sar eax 2 +
add al bl +
movzx ebx al +
mov eax ecx +
sub eax edx +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
movzx edx byte ptr [ebp+var_34] +
sar eax 2 +
add al byte ptr [ebp+nNumerator+2] +
shl ebx 8 +
movzx eax al +
or ebx eax +
mov eax ecx +
sub eax edx +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add al byte ptr [ebp+var_34] +
shl ebx 8 +
movzx eax al +
or ebx eax +
mov [ebp+var_30] ebx +
jmp loc_10A102D  +
mov eax [ebp+var_34] +
shr eax 10h +
mov [ebp+var_C] eax +
movzx edx al +
mov bx word ptr [ebp+var_34] +
mov eax ecx +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
add al byte ptr [ebp+var_C] +
shr bx 8 +
movzx eax al +
shl eax 8 +
mov [ebp+var_C] eax +
movzx edx bl +
mov eax ecx +
sub eax edx +
cdq   +
sub eax edx +
mov edx [ebp+var_C] +
sar eax 1 +
add al bl +
movzx eax al +
or edx eax +
mov word ptr [ebp+nNumerator+2] bx +
movzx ebx byte ptr [ebp+var_34] +
mov eax ecx +
sub eax ebx +
shl edx 8 +
mov ecx edx +
cdq   +
sub eax edx +
sar eax 1 +
add al byte ptr [ebp+var_34] +
movzx eax al +
or ecx eax +
mov [ebp+var_30] ecx +
mov eax [edi+10h] +
push 3  +
pop ebx  +
add eax 14h +
push 0  +
mov [ebp+var_2C] 1Eh +
mov [ebp+var_28] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
push [ebp+arg_8]  +
mov ecx edi +
mov [ebp+nNumerator] eax +
call sub_1005B99  +
mov ecx [esi+18h] +
sub ecx [esi+10h] +
sub ecx [esi+44h] +
add ecx [esi+4Ch] +
sub ecx eax +
cmp ecx [ebp+nNumerator] +
jg loc_10A106B  +
mov ecx [ebp+nNumerator] +
mov eax ecx +
imul eax eax +
cdq   +
and edx ebx +
add eax edx +
mov ebx eax +
mov eax [esi+1Ch] +
sub eax [esi+14h] +
sar ebx 2 +
cmp eax [ebp+nNumerator] +
mov [ebp+var_24] ebx +
jg loc_10A108B  +
mov eax [ebp+nNumerator] +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
mov ecx eax +
mov al byte ptr [ebp+arg_4+3] +
mov [ebp+var_1C] al +
mov eax ebx +
imul eax eax +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_18] eax +
sar ecx 2 +
mov eax ecx +
imul eax eax +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_14] eax +
mov al byte ptr [ebp+arg_4+3] +
mov [ebp+var_10] al +
mov eax [edi+10h] +
push 0FFFFFFECh  +
mov [ebp+var_20] ecx +
push dword ptr [eax+4]  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_10A10E3  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_48] +
mov [ebp+var_4C] ecx +
mov [ebp+var_48] eax +
xor esi esi +
inc esi  +
mov eax [ebp+arg_8] +
cmp eax 4 +
jl loc_10A10F1  +
push 4  +
pop eax  +
cmp esi eax +
jge loc_10A0E55  +
lea eax [ebp+var_60] +
push eax  +
push [ebp+arg_0]  +
call sub_100BD92  +
push 0  +
push [ebp+var_8]  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
inc esi  +
jmp loc_10A10E6  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_100C625  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0FFFFFFF6h +
jz loc_10A1147  +
cmp [ebp+arg_0] 0FFFFFFF4h +
jz loc_10A1147  +
cmp [ebp+arg_0] 0FFFFFFF5h +
jz loc_10A1147  +
xor eax eax +
inc eax  +
jmp loc_10A1149  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+1A0h] 0 +
jz loc_10A118A  +
cmp dword ptr [ecx+150h] 0 +
jz loc_10A118A  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10A118A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0B0h]  +
test eax eax +
jz loc_10A118A  +
xor eax eax +
inc eax  +
jmp loc_10A118C  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push edi  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+arg_0]  +
call ds:GetRgnBox  +
mov ebx ds:OffsetRgn +
cmp eax 1 +
jz loc_10A11D1  +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_10A11D1  +
push 0  +
neg eax  +
push eax  +
push [ebp+arg_0]  +
call ebx  +
push esi  +
mov esi ds:GetRegionData +
xor eax eax +
push eax  +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_4] eax +
call esi  +
mov edi eax +
mov [ebp+var_C] edi +
test edi edi +
jbe loc_10A1262  +
push edi  +
call sub_100664F  +
pop ecx  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_10A1262  +
push eax  +
push edi  +
push [ebp+arg_0]  +
call esi  +
test eax eax +
jbe loc_10A1259  +
fld  ds:flt_10A127C +
push 6  +
pop ecx  +
push [ebp+var_8]  +
xor eax eax +
push [ebp+var_C]  +
lea edi [ebp+var_44] +
stos   +
fstp  [ebp+var_44.eM11] +
fld1   +
fstp  [ebp+var_44.eM22] +
lea eax [ebp+var_44] +
push eax  +
call ds:ExtCreateRegion  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10A1259  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetClientRect  +
mov eax [ebp+Rect.right] +
sub eax [ebp+var_1C] +
push 0  +
push eax  +
push [ebp+var_4]  +
call ebx  +
push [ebp+var_8]  +
call sub_100C205  +
pop ecx  +
cmp [ebp+var_1C] 0 +
pop esi  +
jz loc_10A1273  +
push 0  +
push [ebp+var_1C]  +
push [ebp+arg_0]  +
call ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax word_10B1168 +
push [ebp+hInstance]  +
push eax  +
call ds:UnregisterClassW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 0C0h +
push eax  +
push dword ptr [ebp+0Ch]  +
call ds:CopyRect  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push esi  +
mov esi [ecx+5Ch] +
test esi esi +
jz loc_10A131A  +
push 3Ch  +
lea eax [ebp+var_3C] +
push 0  +
push eax  +
mov [ebp+var_40] 40h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_40] +
push eax  +
push [ebp+lpRect]  +
mov eax [ebp+arg_8] +
or eax 400h +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
mov [ebp+var_3C] 2200h +
push 0  +
push 4  +
push [ebp+hDC]  +
push esi  +
call ds:DrawThemeTextEx  +
jmp loc_10A1343  +
push dword ptr [ecx+1C0h]  +
push [ebp+hDC]  +
call ds:SelectObject  +
test eax eax +
jz loc_10A1343  +
push 400h  +
push [ebp+lpRect]  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push [ebp+hDC]  +
call ds:DrawTextW  +
pop esi  +
leave   +
retn 10h  +
***
xor eax eax +
cmp dword_10B39C4 eax +
setnz al  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
lea eax [ebp+Point] +
push eax  +
mov esi ecx +
call ds:GetCursorPos  +
mov ecx [ebp+Point.x] +
lea eax [esi+130h] +
push 5  +
mov [esi+138h] ecx +
mov [eax] ecx +
mov ecx [ebp+Point.y] +
push 5  +
push eax  +
mov [esi+13Ch] ecx +
mov [esi+134h] ecx +
call ds:InflateRect  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
push edi  +
xor eax eax +
lea edi [ebp-10h] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi+18h]  +
call ds:GetClientRect  +
mov eax [ebp+0Ch] +
mov ecx [ebp-8] +
push 0FFFFFFECh  +
mov [eax] ecx +
push dword ptr [esi+18h]  +
call ds:GetWindowLongW  +
pop edi  +
and eax 400000h +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
mov eax [ebp+8] +
jz loc_10A1400  +
inc dword ptr [eax+30h]  +
jmp loc_10A140C  +
dec dword ptr [eax+30h]  +
jnz loc_10A140C  +
or dword ptr [eax+2Ch] 80000000h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10A1453  +
cmp dword ptr [ebp+8] 1Ah +
jl loc_10A1453  +
cmp dword ptr [ebp+8] 1Bh +
jle loc_10A1448  +
cmp dword ptr [ebp+8] 1Ch +
jnz loc_10A1453  +
push 4  +
jmp loc_10A144A  +
push 8  +
mov esi [esi+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+38h]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+14Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+58h] edi +
jnz loc_10A14EB  +
push ebx  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+30h]  +
mov ebx offset byte_1002CD0 +
push edi  +
push edi  +
push edi  +
push edi  +
push 80000000h  +
push ebx  +
push offset aTasklistoverla  +
push 80800A0h  +
call sub_103510B  +
mov [esi+58h] eax +
cmp eax edi +
jz loc_10A14EA  +
push 57h  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push eax  +
call ds:SetWindowPos  +
push 1  +
push dword ptr [esi+58h]  +
call sub_1017D35  +
push esi  +
push edi  +
push dword ptr [esi+58h]  +
call ds:SetWindowLongW  +
cmp [esi+154h] edi +
jz loc_10A14DF  +
mov ebx offset aTouch +
push edi  +
push ebx  +
push dword ptr [esi+58h]  +
call ds:SetWindowTheme  +
pop ebx  +
xor eax eax +
cmp [esi+58h] edi +
pop edi  +
setnz al  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+58h] +
test eax eax +
jz loc_10A1532  +
push eax  +
call ds:DestroyWindow  +
mov eax [esi+60h] +
and dword ptr [esi+58h] 0 +
test eax eax +
jz loc_10A1532  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [esi+60h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+24h] 0 +
jz loc_10A1557  +
mov eax [ecx+24h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_10A1557  +
inc eax  +
jmp loc_10A1559  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ecx+24h] eax +
jz loc_10A1580  +
push [ebp+arg_0]  +
mov eax [ecx+24h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+14h]  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ecx+24h] esi +
jz loc_10A15AB  +
push [ebp+arg_4]  +
mov eax [ecx+24h] +
push [ebp+arg_0]  +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+2Ch]  +
test eax eax +
jnz loc_10A15AB  +
inc esi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+1C4h] 0 +
jnz loc_10A15FA  +
push 2  +
push 0  +
push offset LibFileName  +
call ds:LoadLibraryExW  +
test eax eax +
jz loc_10A15FA  +
push 0  +
push dword ptr [esi+0FCh]  +
push dword ptr [esi+0F8h]  +
push 1  +
push 13EEh  +
push eax  +
call ds:LoadImageW  +
mov [esi+1C4h] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10A15B7  +
mov eax [ebp+arg_4] +
mov ecx [eax+4] +
mov edx [eax] +
push 0FFh  +
push dword ptr [esi+1C4h]  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
sub esi ecx +
push esi  +
sub eax edx +
push eax  +
push ecx  +
push edx  +
push [ebp+arg_0]  +
call sub_109ACDE  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+28h] edi +
jz loc_10A1673  +
push 1Ch  +
call sub_10A1562  +
test eax eax +
jz loc_10A1673  +
push edi  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jz loc_10A1670  +
push 1Ah  +
mov ecx esi +
call sub_10A1562  +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+arg_4] +
mov [esi+4] eax +
mov eax [ebp+arg_8] +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test [ebp+arg_0] 1 +
jz loc_10A16C5  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea edx [ebp+rc] +
push edx  +
push [ebp+arg_8]  +
mov esi ecx +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jz loc_10A1764  +
lea eax [ebp+rc] +
push eax  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_10A1764  +
push 0FFFFFFECh  +
push dword ptr [esi+30h]  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_10A1727  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
mov ecx [ebp+rc.right] +
sub eax [ebp+rc.right] +
sub ecx [ebp+rc.left] +
mov [ebp+rc.left] eax +
add eax ecx +
mov [ebp+rc.right] eax +
xor ecx ecx +
xor eax eax +
inc ecx  +
cmp [ebp+arg_C] eax +
jz loc_10A173B  +
xor ecx ecx +
cmp [ebp+arg_10] eax +
setnz cl  +
inc ecx  +
inc ecx  +
cmp [esi+5Ch] eax +
jz loc_10A1756  +
push eax  +
lea eax [ebp+rc] +
push eax  +
push ecx  +
push 0Ch  +
push [ebp+arg_0]  +
push dword ptr [esi+60h]  +
call ds:DrawThemeBackground  +
jmp loc_10A1764  +
lea eax [ebp+rc] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10A1601  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov ecx [ecx+108h] +
push 0FFFFFFF6h  +
pop eax  +
cmp ecx eax +
jz loc_10A178B  +
mov eax ecx +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+10Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
lea eax [esi+24h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call ds:CopyRect  +
push 2  +
push dword ptr [ebp+0Ch]  +
push 0  +
push dword ptr [esi+20h]  +
call ds:MapWindowPoints  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
push 1  +
push esi  +
push dword ptr [edi+20h]  +
push 0  +
call ds:MapWindowPoints  +
mov eax [edi+24h] +
sub [esi] eax +
mov eax [edi+28h] +
sub [esi+4] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov edx [ecx+24h] +
mov eax [ebp+0Ch] +
add [eax] edx +
mov edx [ecx+28h] +
add [eax+4] edx +
push 1  +
push eax  +
push 0  +
push dword ptr [ecx+20h]  +
call ds:MapWindowPoints  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [esi+1Ch]  +
call sub_107D191  +
lea eax [esi-14h] +
mov ecx [eax] +
push 0  +
push eax  +
mov dword ptr [esi+158h] 1 +
call dword ptr [ecx+40h]  +
mov eax [ebp+1Ch] +
mov dword ptr [esi+15Ch] 0FFFFFFF6h +
and dword ptr [eax] 0 +
xor eax eax +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call ds:SHELL32_132  +
mov esi [ebp+8] +
lea eax [esi-14h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+44h]  +
and dword ptr [esi+158h] 0 +
mov dword ptr [esi+15Ch] 0FFFFFFF6h +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call ds:SHELL32_132  +
mov esi [ebp+8] +
lea eax [esi-14h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+44h]  +
and dword ptr [esi+158h] 0 +
mov eax [ebp+1Ch] +
and dword ptr [eax] 0 +
xor eax eax +
pop esi  +
pop ebp  +
retn 18h  +
***
or dword ptr [ecx+188h] 0FFFFFFFFh +
or dword ptr [ecx+18Ch] 0FFFFFFFFh +
or dword ptr [ecx+198h] 0FFFFFFFFh +
xor eax eax +
mov [ecx+190h] eax +
mov [ecx+194h] eax +
mov [ecx+19Ch] eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ecx+188h] +
cmp dword ptr [eax] 0FFFFFFFFh +
jnz loc_10A1935  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+60h] +
push edi  +
test eax eax +
jz loc_10A1957  +
push eax  +
call ds:CloseThemeData  +
push offset aTaskbandextend  +
push dword ptr [esi+58h]  +
call ds:OpenThemeData  +
mov [esi+60h] eax +
test eax eax +
jz loc_10A19AE  +
mov edi ds:GetThemeMetric +
lea ecx [ebp+var_4] +
push ecx  +
push 970h  +
push 0  +
push 0Ch  +
push 0  +
push eax  +
call edi  +
test eax eax +
jl loc_10A19AE  +
lea eax [ebp+var_8] +
push eax  +
push 971h  +
push 0  +
push 0Ch  +
push 0  +
push dword ptr [esi+60h]  +
call edi  +
test eax eax +
jl loc_10A19AE  +
mov eax [ebp+var_4] +
mov [esi+0F8h] eax +
mov eax [ebp+var_8] +
jmp loc_10A19C2  +
mov edi ds:GetSystemMetrics +
push 31h  +
call edi  +
push 32h  +
mov [esi+0F8h] eax +
call edi  +
pop edi  +
mov [esi+0FCh] eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx]  +
call ds:off_10A19E8  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
push 7FFFFFFFh  +
push dword ptr [ecx]  +
call ds:off_10065E0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
test eax eax +
jz loc_10A1A21  +
mov ebx [eax] +
jmp loc_10A1A23  +
xor ebx ebx +
xor esi esi +
test ebx ebx +
jle loc_10A1A3D  +
mov eax [edi+4] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
inc esi  +
cmp esi ebx +
jl loc_10A1A29  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
mov eax [ebx+68h] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_10A1A60  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_10A1A63  +
mov [ebp+var_4] edi +
cmp [ebp+var_4] edi +
jle loc_10A1A8B  +
push esi  +
mov eax [ebx+68h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
push esi  +
mov ecx ebx +
call sub_10A1152  +
test eax eax +
jz loc_10A1A84  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
inc edi  +
cmp edi [ebp+var_4] +
jl loc_10A1A69  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push esi  +
push dword ptr [ebp+8]  +
call ds:GetWindowLongW  +
cmp dword ptr [ebp+0Ch] 31Ah +
jz loc_10A1AC5  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
mov esi eax +
jmp loc_10A1ACC  +
mov ecx eax +
call sub_10A193E  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ecx +
mov eax [ebx+68h] +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp eax edi +
jz loc_10A1AF6  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_10A1AF9  +
mov [ebp+var_4] edi +
cmp [ebp+var_4] edi +
jle loc_10A1B1F  +
push esi  +
mov eax [ebx+68h] +
mov eax [eax+4] +
mov esi [eax+edi*4] +
mov eax [esi] +
push esi  +
call dword ptr [eax+54h]  +
cmp eax [ebp+arg_0] +
jz loc_10A1B1B  +
inc edi  +
cmp edi [ebp+var_4] +
jge loc_10A1B1E  +
jmp loc_10A1AFF  +
mov [ebp+var_8] esi +
pop esi  +
mov eax [ebp+var_8] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push dword ptr [edi+4]  +
mov esi ecx +
call sub_10A1AD8  +
test eax eax +
jz loc_10A1B54  +
inc dword ptr [esi+19Ch]  +
push dword ptr [edi+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 238h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
mov ecx [esi+0Ch] +
xor eax eax +
dec ecx  +
jz loc_10A1C9B  +
sub ecx 10000h +
jnz loc_10A1C9E  +
push edi  +
push dword ptr [esi+4]  +
mov ecx ebx +
call sub_10A1AD8  +
mov edi eax +
test edi edi +
jz loc_10A1C93  +
mov eax [edi] +
push edi  +
call dword ptr [eax+30h]  +
mov ecx [eax] +
lea edx [ebp+var_220] +
push edx  +
push dword ptr [esi+24h]  +
push eax  +
call dword ptr [ecx+0A8h]  +
test eax eax +
jl loc_10A1BCF  +
test [ebp+var_8] 10h +
jz loc_10A1BCF  +
and dword ptr [esi+28h] 0FFFFFFBEh +
mov eax [edi] +
push edi  +
call dword ptr [eax+30h]  +
push dword ptr [esi+24h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0B4h]  +
mov [ebp+var_228] eax +
cmp eax 0FFFFFFFFh +
jz loc_10A1C93  +
mov eax [esi+28h] +
xor edx edx +
push 4  +
inc edx  +
pop ecx  +
mov [ebp+var_224] edx +
test al cl +
jz loc_10A1C0B  +
mov [ebp+var_224] ecx +
jmp loc_10A1C29  +
test al dl +
jz loc_10A1C1B  +
mov [ebp+var_224] 3 +
jmp loc_10A1C29  +
test al 40h +
jz loc_10A1C29  +
mov [ebp+var_224] 2 +
push 0  +
lea edi [esi+14h] +
push edi  +
push [ebp+var_224]  +
push [ebp+var_228]  +
push dword ptr [esi+10h]  +
push dword ptr [ebx+5Ch]  +
call ds:DrawThemeBackground  +
lea eax [ebp+var_238] +
push eax  +
push 0  +
push 0E12h  +
push [ebp+var_224]  +
push [ebp+var_228]  +
push 0  +
push dword ptr [ebx+5Ch]  +
call ds:GetThemeMargins  +
test eax eax +
jl loc_10A1C93  +
mov eax [ebp+var_238] +
add [edi] eax +
mov eax [ebp+var_230] +
add [esi+18h] eax +
mov eax [ebp+var_234] +
sub [esi+1Ch] eax +
mov eax [ebp+var_22C] +
sub [esi+20h] eax +
mov eax 400000h +
pop edi  +
jmp loc_10A1C9E  +
push 20h  +
pop eax  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
xor ecx ecx +
xor ebx ebx +
cmp [esi+190h] ebx +
push edi  +
mov edi [ebp+10h] +
setnz cl  +
push edi  +
push ecx  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+1Ch]  +
mov [ebp+8] eax +
cmp eax ebx +
jz loc_10A1D90  +
cmp [esi+190h] ebx +
jz loc_10A1D02  +
mov eax [esi+0D0h] +
cdq   +
sub eax edx +
sar eax 1 +
push ebx  +
neg eax  +
push eax  +
push edi  +
call ds:OffsetRect  +
mov eax [edi+8] +
sub eax [esi+0E8h] +
mov [edi] eax +
cmp [esi+130h] ebx +
jz loc_10A1D84  +
cmp [esi+190h] ebx +
jz loc_10A1D5A  +
mov eax [esi+58h] +
mov eax [eax+4] +
mov ecx [ebp+0Ch] +
push dword ptr [eax+ecx*4]  +
lea ecx [esi-10h] +
call sub_10A1152  +
test eax eax +
jz loc_10A1D40  +
mov eax [esi+0DCh] +
add [edi+4] eax +
jmp loc_10A1D84  +
mov eax [edi+0Ch] +
sub eax [esi+0ECh] +
mov ecx [edi+4] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add eax ecx +
mov [edi+4] eax +
jmp loc_10A1D84  +
mov eax [esi+0D8h] +
sub eax [esi+0ECh] +
push 3  +
cdq   +
sub eax edx +
mov ecx eax +
mov eax [esi+0D0h] +
cdq   +
pop ebx  +
idiv  ebx +
sar ecx 1 +
sub ecx eax +
sub ecx [esi+0D8h] +
add [edi+4] ecx +
mov eax [esi+0ECh] +
add eax [edi+4] +
mov [edi+0Ch] eax +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
cmp [ebp+0Ch] edi +
jl loc_10A1E01  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+58h] +
cmp eax edi +
jz loc_10A1DBB  +
mov eax [eax] +
jmp loc_10A1DBD  +
xor eax eax +
cmp [ebp+0Ch] eax +
jge loc_10A1E00  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
cmp eax edi +
jz loc_10A1E00  +
push dword ptr [ebp+10h]  +
push eax  +
call ds:GetWindowRect  +
push 2  +
push dword ptr [ebp+10h]  +
push dword ptr [esi+20h]  +
push edi  +
call ds:MapWindowPoints  +
mov eax [esi+28h] +
neg eax  +
push eax  +
mov eax [esi+24h] +
neg eax  +
push eax  +
push dword ptr [ebp+10h]  +
call ds:OffsetRect  +
xor edi edi +
inc edi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 290h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx ecx +
mov ecx [ebp+arg_4] +
mov [ebp+hDC] eax +
mov eax [ebx+68h] +
mov eax [eax+4] +
push esi  +
mov esi [ebp+lprcSrc] +
push edi  +
mov edi [eax+ecx*4] +
push esi  +
lea eax [ebp+rcSrc] +
push eax  +
mov [ebp+var_214] edi +
mov [ebp+var_22C] 1 +
call ds:CopyRect  +
cmp dword ptr [ebx+1A0h] 0 +
jz loc_10A1E96  +
push edi  +
mov ecx ebx +
call sub_10A1152  +
test eax eax +
jz loc_10A1E83  +
mov eax [ebx+0ECh] +
add eax [esi+4] +
mov [ebp+rcSrc.top] eax +
jmp loc_10A1E9C  +
mov eax [esi+0Ch] +
sub eax [ebx+0E8h] +
add eax [esi+4] +
cdq   +
sub eax edx +
sar eax 1 +
jmp loc_10A1E7B  +
mov eax [ebp+rcSrc.top] +
mov ecx [ebx+0E8h] +
add ecx eax +
push 31h  +
mov [ebp+rcSrc.bottom] ecx +
call ds:GetSystemMetrics  +
mov esi [ebx+0ECh] +
add esi eax +
mov [ebp+var_218] eax +
mov eax [ebp+arg_4] +
cmp [ebx+11Ch] eax +
jz loc_10A1EE2  +
lea eax [ebx+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax [ebp+arg_4] +
jz loc_10A1EE2  +
cmp dword ptr [ebx+154h] 0 +
jz loc_10A1EF4  +
mov eax [ebx+0F8h] +
add eax [ebx+0ECh] +
sub [ebp+rcSrc.right] eax +
mov eax [ebp+rcSrc.left] +
push 0FFh  +
mov [ebp+var_210] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+70h]  +
push eax  +
push 32h  +
call ds:GetSystemMetrics  +
push eax  +
push [ebp+var_218]  +
push [ebp+rcSrc.top]  +
push [ebp+var_210]  +
push [ebp+hDC]  +
call sub_109ACDE  +
mov eax [edi] +
push 104h  +
lea ecx [ebp+String] +
push ecx  +
push edi  +
call dword ptr [eax+2Ch]  +
test eax eax +
jle loc_10A20A4  +
mov eax [ebp+rcSrc.right] +
sub eax [ebp+rcSrc.left] +
cmp eax esi +
jle loc_10A20A4  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call ds:CopyRect  +
add [ebp+Rect.left] esi +
lea esi [ebp+Rect] +
lea edi [ebp+var_250] +
movs   +
movs   +
movs   +
lea eax [ebp+var_250] +
push eax  +
push 824h  +
lea eax [ebp+String] +
movs   +
mov edi [ebp+hDC] +
push eax  +
push edi  +
mov ecx ebx +
call sub_10A12C7  +
mov eax [ebp+var_248] +
mov ecx [ebp+Rect.right] +
sub eax [ebp+var_250] +
sub ecx [ebp+Rect.left] +
mov esi [ebx+5Ch] +
xor edx edx +
cmp eax ecx +
setnle dl  +
mov [ebp+var_22C] edx +
test esi esi +
jz loc_10A2028  +
push 3Ch  +
lea eax [ebp+var_28C] +
push 0  +
push eax  +
mov [ebp+var_290] 40h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_290] +
push eax  +
lea eax [ebp+Rect] +
push eax  +
push 8824h  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push 0  +
push 4  +
push edi  +
push esi  +
mov [ebp+var_28C] 2000h +
call ds:DrawThemeTextEx  +
jmp loc_10A209E  +
push dword ptr [ebx+1C0h]  +
push edi  +
call ds:SelectObject  +
test eax eax +
jz loc_10A209E  +
mov esi ds:SetBkMode +
push 1  +
push edi  +
call esi  +
mov [ebp+var_218] eax +
xor eax eax +
cmp [ebp+arg_C] eax +
setz al  +
lea eax ds:0Eh[eax*4] +
push eax  +
call ds:GetSysColor  +
mov ebx ds:SetTextColor +
push eax  +
push edi  +
call ebx  +
push 8824h  +
mov [ebp+var_210] eax +
lea eax [ebp+Rect] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+String] +
push eax  +
push edi  +
call ds:DrawTextW  +
push [ebp+var_210]  +
push edi  +
call ebx  +
push [ebp+var_218]  +
push edi  +
call esi  +
mov edi [ebp+var_214] +
push [ebp+var_22C]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+80h]  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+68h] +
xor ebx ebx +
cmp eax ebx +
jz loc_10A20E5  +
mov eax [eax] +
mov [ebp+var_8] eax +
jmp loc_10A20E8  +
mov [ebp+var_8] ebx +
cmp [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
jle loc_10A2164  +
push edi  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov ecx [ebp+var_4] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push edi  +
call dword ptr [eax+60h]  +
test eax eax +
jz loc_10A2158  +
mov eax [edi] +
push ebx  +
push 1Eh  +
push edi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A2158  +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
call dword ptr [eax+28h]  +
mov eax [esi+0C0h] +
sub [ebp+var_14] eax +
mov eax [esi+0C4h] +
add [ebp+var_C] eax +
push [ebp+arg_4]  +
mov eax [esi+0B8h] +
sub [ebp+var_18] eax +
mov eax [esi+0BCh] +
add [ebp+var_10] eax +
push ebx  +
lea eax [ebp+var_18] +
push eax  +
push ebx  +
push 5  +
push [ebp+arg_0]  +
push dword ptr [esi+5Ch]  +
call sub_100445D  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jl loc_10A20F1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
and [ebp+var_4] 0 +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
mov esi ecx +
push offset stru_1002CB4  +
push dword ptr [esi+20h]  +
call ds:IUnknown_GetSite  +
mov edi 84h +
test eax eax +
jl loc_10A2209  +
lea eax [ebp+hWnd] +
push eax  +
push [ebp+var_8]  +
call ds:IUnknown_GetWindow  +
test eax eax +
jl loc_10A21FA  +
mov eax [ebp+lParam] +
shr eax 10h +
cwde   +
push ebx  +
movsx ebx word ptr [ebp+lParam] +
mov [ebp+var_10] eax +
lea eax [ebp+rc] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
push [ebp+var_10]  +
lea eax [ebp+rc] +
push ebx  +
push eax  +
call ds:PtInRect  +
pop ebx  +
test eax eax +
jz loc_10A21FA  +
mov eax [esi+20h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push edi  +
push eax  +
call ds:SendMessageW  +
cmp eax 1 +
jnz loc_10A21FA  +
or [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_4] 0FFFFFFFFh +
jz loc_10A221C  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push edi  +
push [ebp+arg_0]  +
call ds:DefWindowProcW  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push edi  +
xor eax eax +
mov edi ecx +
mov [ebp+var_4] eax +
cmp [edi+1A0h] eax +
jz loc_10A2320  +
cmp [edi+150h] eax +
jz loc_10A2320  +
cmp [edi+68h] eax +
jz loc_10A2320  +
push ebx  +
push esi  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp+var_10] ecx +
lea ecx [ebp+var_10] +
lea esi [edi+10h] +
push ecx  +
mov [ebp+var_C] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+18h]  +
mov eax [esi] +
lea ecx [ebp+var_10] +
push ecx  +
push esi  +
call dword ptr [eax+34h]  +
mov ebx eax +
push ebx  +
mov ecx edi +
mov [ebp+var_8] ebx +
call sub_10A112B  +
test eax eax +
jz loc_10A231E  +
mov eax [edi+68h] +
mov eax [eax+4] +
mov ebx [eax+ebx*4] +
push ebx  +
mov ecx edi +
call sub_10A1152  +
mov edi ds:PtInRect +
test eax eax +
jz loc_10A22F6  +
mov eax [ebp+var_10] +
mov [ebp+pt.x] eax +
mov eax [ebp+var_C] +
mov [ebp+pt.y] eax +
lea eax [ebp+rc] +
push eax  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+50h]  +
push eax  +
call ds:GetWindowRect  +
mov eax [esi] +
lea ecx [ebp+pt] +
push ecx  +
push esi  +
call dword ptr [eax+14h]  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call edi  +
test eax eax +
jz loc_10A22F6  +
xor ebx ebx +
inc ebx  +
mov [ebp+var_4] ebx +
jmp loc_10A22F9  +
xor ebx ebx +
inc ebx  +
mov eax [esi] +
lea ecx [ebp+var_38] +
push ecx  +
push ebx  +
push [ebp+var_8]  +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jz loc_10A231E  +
push [ebp+var_C]  +
lea eax [ebp+var_38] +
push [ebp+var_10]  +
push eax  +
call edi  +
test eax eax +
jz loc_10A231E  +
mov [ebp+var_4] ebx +
pop esi  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+68h] +
test eax eax +
jz loc_10A2340  +
mov ebx [eax] +
jmp loc_10A2342  +
xor ebx ebx +
xor esi esi +
test ebx ebx +
jle loc_10A235F  +
mov eax [edi+68h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
inc esi  +
cmp esi ebx +
jl loc_10A2348  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov eax [esi+68h] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_10A2397  +
mov eax [eax] +
mov [ebp+var_218] eax +
jmp loc_10A239D  +
mov [ebp+var_218] edi +
push dword ptr [esi+30h]  +
mov [ebp+var_210] edi +
call ds:GetDC  +
cmp [ebp+var_218] edi +
mov [ebp+hDC] eax +
mov [ebp+var_214] edi +
jle loc_10A247F  +
push ebx  +
jmp loc_10A23C9  +
xor edi edi +
mov eax [esi+68h] +
mov eax [eax+4] +
mov ecx [ebp+var_214] +
mov ebx [eax+ecx*4] +
mov [ebp+Rect.left] edi +
xor eax eax +
lea edi [ebp+Rect.top] +
stos   +
stos   +
push 104h  +
lea ecx [ebp+String] +
push ecx  +
stos   +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+2Ch]  +
test eax eax +
jle loc_10A241F  +
lea eax [ebp+Rect] +
push eax  +
push 824h  +
lea eax [ebp+String] +
push eax  +
push [ebp+hDC]  +
mov ecx esi +
call sub_10A12C7  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
cmp eax [ebp+var_210] +
jle loc_10A2439  +
mov [ebp+var_210] eax +
push ebx  +
mov ecx esi +
call sub_10A1152  +
test eax eax +
jz loc_10A2466  +
mov eax [ebx] +
lea ecx [ebp+var_234] +
push ecx  +
push ebx  +
call dword ptr [eax+3Ch]  +
mov eax [ebp+var_234] +
cmp eax [ebp+var_210] +
jle loc_10A2466  +
mov [ebp+var_210] eax +
inc [ebp+var_214]  +
mov eax [ebp+var_214] +
cmp eax [ebp+var_218] +
jl loc_10A23C7  +
pop ebx  +
push [ebp+hDC]  +
push dword ptr [esi+30h]  +
call ds:ReleaseDC  +
mov ecx [ebp+var_210] +
mov eax [esi+1B0h] +
add eax ecx +
mov ecx [esi+1B4h] +
cmp eax ecx +
jl loc_10A24A8  +
mov eax ecx +
mov ecx [ebp+var_4] +
pop edi  +
mov [esi+1ACh] eax +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+rc] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+rc] +
push eax  +
mov esi ecx +
call sub_1020A96  +
mov eax [esi+68h] +
test eax eax +
jz loc_10A24ED  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_10A24F1  +
and [ebp+var_4] 0 +
mov edi [esi+0DCh] +
mov eax [esi+1A8h] +
add edi [esi+0D4h] +
and [ebp+var_8] 0 +
cmp eax [ebp+var_4] +
mov [ebp+var_C] eax +
jge loc_10A2582  +
push ebx  +
push eax  +
push dword ptr [esi+68h]  +
call ds:off_1002B68  +
mov [ebp+var_10] eax +
test eax eax +
jz loc_10A2575  +
mov eax [esi+0B4h] +
add eax [esi+0B0h] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
push 3  +
pop ebx  +
push [ebp+var_10]  +
mov ecx eax +
mov eax [esi+0E0h] +
cdq   +
idiv  ebx +
add ecx eax +
add ecx [esi+0E8h] +
add edi ecx +
mov ecx esi +
call sub_10A1152  +
test eax eax +
jz loc_10A255F  +
add edi [esi+104h] +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
cmp edi eax +
jg loc_10A2581  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10A2572  +
mov [eax] edi +
inc [ebp+var_8]  +
mov eax [ebp+var_C] +
inc eax  +
cmp eax [ebp+var_4] +
mov [ebp+var_C] eax +
jl loc_10A2510  +
pop ebx  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov eax dword_10B2070 +
test eax eax +
jz locret_10A25A9  +
push 0  +
push 0  +
push 459h  +
push eax  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
and dword ptr [edx] 0 +
mov ecx [ebp+8] +
mov ecx [ecx+0Ch] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_10A25D1  +
push ecx  +
push edx  +
call ds:__imp_IUnknown_Set  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+68h] +
test eax eax +
jz loc_10A25F4  +
mov ebx [eax] +
jmp loc_10A25F6  +
xor ebx ebx +
xor esi esi +
test ebx ebx +
jle loc_10A261A  +
mov eax [edi+68h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
cmp eax [ebp+arg_0] +
jz loc_10A2617  +
inc esi  +
cmp esi ebx +
jge loc_10A261A  +
jmp loc_10A25FC  +
mov [ebp+var_4] esi +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
or [ebp+var_4] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+68h] +
test eax eax +
jz loc_10A2643  +
mov ebx [eax] +
jmp loc_10A2645  +
xor ebx ebx +
xor esi esi +
test ebx ebx +
jle loc_10A2669  +
mov eax [edi+68h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+68h]  +
cmp eax [ebp+arg_0] +
jz loc_10A2666  +
inc esi  +
cmp esi ebx +
jge loc_10A2669  +
jmp loc_10A264B  +
mov [ebp+var_4] esi +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
push dword ptr [esi+120h]  +
call sub_10A112B  +
test eax eax +
jz loc_10A271D  +
push ebx  +
push edi  +
lea ecx [ebp+pt] +
lea edi [esi+10h] +
mov eax [edi] +
push ecx  +
push edi  +
call dword ptr [eax+34h]  +
mov ebx eax +
mov eax [esi+120h] +
cmp eax ebx +
jnz loc_10A270B  +
cmp [ebp+arg_8] 0 +
jnz loc_10A26F7  +
mov ecx [edi] +
lea edx [ebp+rc] +
push edx  +
push eax  +
push edi  +
call dword ptr [ecx+20h]  +
test eax eax +
jz loc_10A270B  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_10A270B  +
push 0  +
push 1Ah  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10A270B  +
push eax  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10A270B  +
push dword ptr [esi+120h]  +
mov eax [edi] +
push edi  +
call dword ptr [eax+48h]  +
inc dword ptr [esi+190h]  +
jmp loc_10A271B  +
push 0  +
mov ecx esi +
call sub_10A1920  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+40h]  +
pop edi  +
pop ebx  +
and dword ptr [esi+128h] 0 +
mov dword ptr [esi+120h] 0FFFFFFF6h +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
test ecx ecx +
jl loc_10A2785  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+58h] +
test eax eax +
jz loc_10A2753  +
mov eax [eax] +
jmp loc_10A2755  +
xor eax eax +
cmp ecx eax +
jge loc_10A2784  +
mov eax [esi+58h] +
mov eax [eax+4] +
mov ecx [eax+ecx*4] +
mov eax [esi+10h] +
test eax eax +
jz loc_10A2784  +
push edi  +
mov edi [eax] +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+64h]  +
push eax  +
push dword ptr [esi+10h]  +
call dword ptr [edi+18h]  +
mov dword ptr [esi+13Ch] 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
xor eax eax +
test esi esi +
jl loc_10A27C0  +
mov edx [ebp+8] +
mov ecx [edx+58h] +
test ecx ecx +
jz loc_10A27AB  +
mov ecx [ecx] +
jmp loc_10A27AD  +
xor ecx ecx +
cmp esi ecx +
jge loc_10A27C0  +
mov eax [edx+58h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp dword_10B39C4 0 +
push esi  +
mov esi ecx +
jnz loc_10A2887  +
cmp [ebp+arg_8] 0 +
push ebx  +
push edi  +
lea edi [esi+10h] +
mov eax [edi] +
jz loc_10A282F  +
push edi  +
call dword ptr [eax+2Ch]  +
mov ebx eax +
cmp ebx 0FFFFFFF6h +
jz loc_10A2843  +
mov eax [edi] +
lea ecx [ebp+var_10] +
push ecx  +
push 1  +
push ebx  +
push edi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jz loc_10A2843  +
mov eax [ebp+var_8] +
sub eax [ebp+var_10] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_10] +
mov [ebp+arg_0] eax +
mov eax [ebp+var_4] +
sub eax [ebp+var_C] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+var_C] +
mov [ebp+arg_4] eax +
jmp loc_10A2843  +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+18h]  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+34h]  +
mov ebx eax +
push ebx  +
mov ecx esi +
call sub_10A112B  +
test eax eax +
jz loc_10A2885  +
cmp dword ptr [esi+20h] 0 +
jz loc_10A2885  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov ebx [eax+ebx*4] +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+14h]  +
mov eax [esi+20h] +
mov edi [eax] +
mov eax [ebx] +
push 0  +
push ebx  +
call dword ptr [eax+64h]  +
push eax  +
push dword ptr [esi+30h]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [esi+20h]  +
call dword ptr [edi+1Ch]  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
mov eax [ebx+58h] +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_10A28A9  +
mov eax [eax] +
jmp loc_10A28AB  +
xor eax eax +
cmp eax edi +
jle loc_10A291D  +
imul eax eax +
mov ecx eax +
mov eax [ebp+10h] +
sub eax edi +
jz loc_10A290D  +
dec eax  +
jz loc_10A28FF  +
dec eax  +
jz loc_10A291D  +
dec eax  +
jz loc_10A28FA  +
dec eax  +
jnz loc_10A291D  +
mov eax [ebp+0Ch] +
cmp eax 0FFFFFFF6h +
jz loc_10A291D  +
push 3  +
mov edi eax +
pop ecx  +
cdq   +
idiv  ecx +
mov esi eax +
push esi  +
push dword ptr [ebx+58h]  +
call ds:off_1002B68  +
test eax eax +
jz loc_10A291D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jz loc_10A291D  +
imul esi esi +
inc esi  +
inc esi  +
mov edi esi +
jmp loc_10A291D  +
lea edi [ecx-3] +
jmp loc_10A291D  +
mov eax [ebp+0Ch] +
cmp eax 0FFFFFFF6h +
jz loc_10A28FA  +
lea eax [ecx+eax-3] +
jmp loc_10A2918  +
mov eax [ebp+0Ch] +
cmp eax 0FFFFFFF6h +
jz loc_10A291D  +
add eax 3 +
cdq   +
idiv  ecx +
mov edi edx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push esi  +
mov [ebp+var_4] ecx +
call dword ptr [eax+0Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_10A2A1A  +
push [ebp+lprcDst]  +
call ds:SetRectEmpty  +
mov eax [esi] +
push esi  +
call dword ptr [eax+58h]  +
test eax eax +
jz loc_10A2A1A  +
push edi  +
xor eax eax +
lea edi [ebp+xRight] +
stos   +
lea ecx [ebp+xRight] +
push ecx  +
stos   +
mov eax [esi] +
push esi  +
call dword ptr [eax+24h]  +
mov ebx eax +
xor eax eax +
cmp ebx eax +
jl loc_10A2A14  +
cmp [ebp+xRight] eax +
jle loc_10A2A14  +
cmp [ebp+yBottom] eax +
jle loc_10A2A14  +
push [ebp+yBottom]  +
push [ebp+xRight]  +
push eax  +
push eax  +
lea eax [ebp+nNumerator] +
push eax  +
call ds:SetRect  +
mov edx [ebp+arg_4] +
mov esi [edx] +
mov ecx [edx+8] +
sub ecx esi +
cmp [ebp+xRight] ecx +
jg loc_10A29EF  +
mov eax [edx+0Ch] +
mov edi eax +
sub edi [edx+4] +
cmp [ebp+yBottom] edi +
jg loc_10A29EF  +
mov edi [edx+4] +
sub eax edi +
sub eax [ebp-10h] +
add eax [ebp-18h] +
cdq   +
sub eax edx +
sar eax 1 +
add eax edi +
push eax  +
mov eax ecx +
sub eax [ebp-14h] +
add eax [ebp+nNumerator] +
cdq   +
sub eax edx +
sar eax 1 +
add eax esi +
push eax  +
lea eax [ebp+nNumerator] +
push eax  +
call ds:OffsetRect  +
jmp loc_10A2A05  +
mov ecx [ebp+var_4] +
call sub_1020CA7  +
mov ecx [ebp+var_4] +
push eax  +
push edx  +
lea eax [ebp+nNumerator] +
push eax  +
call sub_1020B99  +
lea eax [ebp+nNumerator] +
push eax  +
push [ebp+lprcDst]  +
call ds:CopyRect  +
jmp loc_10A2A19  +
mov ebx 80004005h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
mov [eax] esi +
push dword ptr [edi+0CCh]  +
mov ebx [edi+0D8h] +
push dword ptr [edi+0C8h]  +
add ebx [edi+0D0h] +
push esi  +
push esi  +
lea eax [ebp+rc] +
push eax  +
mov [ebp+var_10] esi +
call ds:SetRect  +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp eax esi +
jz loc_10A2A72  +
mov eax [eax] +
mov [ebp+var_C] eax +
jmp loc_10A2A75  +
mov [ebp+var_C] esi +
cmp [ebp+var_C] esi +
mov [ebp+var_8] esi +
jle loc_10A2B79  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov eax [eax+4] +
mov ecx [ebp+var_8] +
mov esi [eax+ecx*4] +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push 1Dh  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A2AB7  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
push 1Eh  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A2AB7  +
mov eax ds:nDenominator +
mov [ebp+var_4] eax +
lea eax [ebp+rcDst] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push esi  +
mov ecx edi +
call sub_10A292B  +
test eax eax +
jge loc_10A2AE5  +
push dword ptr [edi+0F4h]  +
lea eax [ebp+rcDst] +
push dword ptr [edi+0F0h]  +
push 0  +
push 0  +
push eax  +
call ds:SetRect  +
mov esi [ebp-20h] +
sub esi [ebp+rc] +
mov eax esi +
imul eax [ebp+var_4] +
mov [ebp+var_14] eax +
fild  [ebp+var_14] +
fidiv  ds:nDenominator +
fld  ds:dbl_1041540 +
fadd st(1) st +
fxch  st(1) +
call _ftol2_sse  +
mov ecx [ebp+arg_4] +
add [ecx] eax +
mov eax [ebp+var_C] +
dec eax  +
cmp [ebp+var_8] eax +
jge loc_10A2B20  +
add esi [edi+0E0h] +
imul esi [ebp+var_4] +
fild  ds:nDenominator +
fstp  [ebp+var_14] +
mov [ebp+var_18] esi +
fild  [ebp+var_18] +
fdiv  [ebp+var_14] +
fadd st st(1) +
call _ftol2_sse  +
xor esi esi +
inc esi  +
cmp eax esi +
jl loc_10A2B46  +
mov esi eax +
mov eax [ebp+rcDst.bottom] +
sub eax [ebp+rcDst.top] +
imul eax [ebp+var_4] +
mov [ebp+var_18] eax +
fild  [ebp+var_18] +
fdiv  [ebp+var_14] +
faddp st(1) st +
call _ftol2_sse  +
cmp [ebp+var_10] eax +
jg loc_10A2B68  +
mov [ebp+var_10] eax +
add ebx esi +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_C] +
jl loc_10A2A81  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_10] +
pop edi  +
mov [eax] ecx +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
mov [eax] edi +
push dword ptr [esi+0CCh]  +
mov ebx [esi+0DCh] +
push dword ptr [esi+0C8h]  +
add ebx [esi+0D4h] +
push edi  +
push edi  +
lea eax [ebp+rc] +
push eax  +
call ds:SetRect  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov [ebp+var_10] 1 +
cmp eax edi +
jz loc_10A2BDE  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_10A2BE1  +
mov [ebp+var_4] edi +
cmp [ebp+var_4] edi +
mov [ebp+var_8] edi +
jle loc_10A2C6D  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov eax [eax+4] +
mov ecx [ebp+var_8] +
mov edi [eax+ecx*4] +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
push 1Dh  +
push edi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A2C23  +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
push 1Eh  +
push edi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A2C23  +
mov eax ds:nDenominator +
mov [ebp+var_C] eax +
lea eax [ebp+rcDst] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push edi  +
mov ecx esi +
call sub_10A292B  +
test eax eax +
jl loc_10A2C60  +
mov eax [ebp+rcDst.bottom] +
sub eax [ebp+rcDst.top] +
imul eax [ebp+var_C] +
mov [ebp+var_14] eax +
fild  [ebp+var_14] +
fidiv  ds:nDenominator +
fadd  ds:dbl_1041540 +
call _ftol2_sse  +
cmp [ebp+var_10] eax +
jg loc_10A2C60  +
mov [ebp+var_10] eax +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_4] +
jl loc_10A2BED  +
xor edi edi +
mov eax [ebp-20h] +
mov ecx [ebp+var_10] +
add eax ecx +
cmp [ebp+var_4] edi +
mov [ebp-18h] eax +
mov [ebp+var_8] edi +
jle loc_10A2D87  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov eax [eax+4] +
mov ecx [ebp+var_8] +
mov edi [eax+ecx*4] +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
push 1Dh  +
push edi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A2CBA  +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
push 1Eh  +
push edi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A2CBA  +
mov eax ds:nDenominator +
mov [ebp+var_C] eax +
lea eax [ebp+rcDst] +
push eax  +
lea eax [ebp+rc] +
push eax  +
push edi  +
mov ecx esi +
call sub_10A292B  +
test eax eax +
jge loc_10A2CE8  +
push dword ptr [esi+0F4h]  +
lea eax [ebp+rcDst] +
push dword ptr [esi+0F0h]  +
push 0  +
push 0  +
push eax  +
call ds:SetRect  +
mov edi [ebp+rcDst.bottom] +
sub edi [ebp+rcDst.top] +
mov eax edi +
imul eax [ebp+var_C] +
mov [ebp+var_14] eax +
fild  [ebp+var_14] +
fidiv  ds:nDenominator +
fld  ds:dbl_1041540 +
fadd st(1) st +
fxch  st(1) +
call _ftol2_sse  +
mov ecx [ebp+arg_4] +
add [ecx] eax +
mov eax [ebp+var_4] +
dec eax  +
cmp [ebp+var_8] eax +
jge loc_10A2D23  +
add edi [esi+0E0h] +
cmp dword ptr [esi+140h] 0 +
jz loc_10A2D40  +
mov eax [esi+0E0h] +
cdq   +
push 3  +
pop ecx  +
idiv  ecx +
add eax [esi+0E8h] +
add edi eax +
cmp dword ptr [esi+150h] 0 +
jz loc_10A2D57  +
mov eax [esi+108h] +
add eax [esi+104h] +
add edi eax +
imul edi [ebp+var_C] +
mov [ebp+var_14] edi +
fild  [ebp+var_14] +
fidiv  ds:nDenominator +
faddp st(1) st +
call _ftol2_sse  +
cmp eax 1 +
jge loc_10A2D76  +
xor eax eax +
inc eax  +
add ebx eax +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_4] +
jl loc_10A2C84  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_10] +
pop edi  +
mov [eax] ecx +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
fld1   +
push edi  +
mov edi ecx +
fstp  [ebp+var_4] +
cmp dword ptr [edi+1A0h] 0 +
jnz loc_10A2F4F  +
push ebx  +
push esi  +
call sub_1020CA7  +
mov ecx edi +
test eax eax +
jz loc_10A2ECA  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
call sub_10A2A27  +
mov ecx [ebp+arg_4] +
mov edx eax +
mov eax [ecx+8] +
sub eax [ecx] +
mov ebx edx +
sub ebx [ebp+arg_0] +
cmp edx eax +
mov [ebp+var_C] edx +
jle loc_10A2E04  +
sub eax ebx +
mov [ebp+arg_0] eax +
fild  [ebp+arg_0] +
sub edx ebx +
mov [ebp+arg_0] edx +
fidiv  [ebp+arg_0] +
fstp  [ebp+var_4] +
mov esi [ecx+0Ch] +
sub esi [edi+0D4h] +
sub esi [ecx+4] +
cmp [ebp+arg_8] 0 +
jz loc_10A2E2E  +
mov eax [edi+0E0h] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
mov ecx [edi+0E8h] +
neg ecx  +
sub ecx eax +
add esi ecx +
cmp [ebp+arg_C] 0 +
jz loc_10A2E4A  +
mov eax [edi+108h] +
add eax [edi+104h] +
add eax [edi+0A4h] +
sub esi eax +
jmp loc_10A2E50  +
sub esi [edi+0DCh] +
fild  [ebp+var_8] +
mov [ebp+arg_0] esi +
fstp  [ebp+arg_4] +
fld  [ebp+arg_4] +
fmul  [ebp+var_4] +
fld  ds:dbl_1041540 +
fadd st(1) st +
fld  st(1) +
call _ftol2_sse  +
cmp eax esi +
jle loc_10A2E91  +
fild  [ebp+arg_0] +
fdivrp st(2) st +
fld  [ebp+var_4] +
fcomp  st(2) +
fnstsw  ax +
test ah 5 +
jp loc_10A2E8A  +
fstp  st(1) +
fld  [ebp+var_4] +
jmp loc_10A2E8C  +
fxch  st(1) +
fstp  [ebp+var_4] +
jmp loc_10A2E93  +
fstp  st(1) +
fild  dword ptr [edi+0C8h] +
fmul  [ebp+var_4] +
fadd st st(1) +
call _ftol2_sse  +
fld  [ebp+arg_4] +
fmul  [ebp+var_4] +
mov esi [ebp+arg_18] +
mov [esi] eax +
faddp st(1) st +
call _ftol2_sse  +
mov ecx [ebp+var_C] +
mov [esi+4] eax +
mov eax [ebp+arg_10] +
mov [eax] ecx +
mov eax [ebp+arg_14] +
mov [eax] ebx +
jmp loc_10A2F4D  +
lea eax [ebp+arg_C] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_0]  +
call sub_10A2B8F  +
mov ecx [ebp+arg_4] +
mov ebx eax +
mov eax [ecx+0Ch] +
sub eax [ecx+4] +
mov esi ebx +
sub esi [ebp+arg_8] +
cmp ebx eax +
jle loc_10A2F16  +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
test ecx ecx +
jz loc_10A2EFB  +
mov ecx [ecx] +
jmp loc_10A2EFD  +
xor ecx ecx +
test ecx ecx +
jle loc_10A2F16  +
sub eax esi +
mov [ebp+arg_0] eax +
fild  [ebp+arg_0] +
mov eax ebx +
sub eax esi +
mov [ebp+arg_0] eax +
fidiv  [ebp+arg_0] +
fstp  [ebp+var_4] +
fild  dword ptr [edi+0C8h] +
fmul  [ebp+var_4] +
fld  ds:dbl_1041540 +
fadd st(1) st +
fxch  st(1) +
call _ftol2_sse  +
fild  [ebp+arg_C] +
mov edi [ebp+arg_18] +
mov [edi] eax +
fmul  [ebp+var_4] +
faddp st(1) st +
call _ftol2_sse  +
mov [edi+4] eax +
mov eax [ebp+arg_10] +
mov [eax] ebx +
mov eax [ebp+arg_14] +
mov [eax] esi +
pop esi  +
pop ebx  +
fld  [ebp+var_4] +
pop edi  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+nCode] 0 +
push esi  +
mov esi [ebp+arg_8] +
jnz loc_10A2FC2  +
cmp [ebp+wParam] 100h +
jz loc_10A2F7D  +
cmp [ebp+wParam] 104h +
jnz loc_10A2FC2  +
mov eax [esi] +
cmp eax 2Ch +
jz loc_10A2FC2  +
cmp eax 9Fh +
jbe loc_10A2F92  +
cmp eax 0A3h +
jbe loc_10A2FC2  +
call ds:GetFocus  +
push eax  +
push hWnd  +
call ds:SHIsChildOrSelf  +
test eax eax +
jz loc_10A2FC2  +
mov eax dword_10B2070 +
test eax eax +
jz loc_10A2FC2  +
push 0  +
push 1  +
push 43Fh  +
push eax  +
call ds:PostMessageW  +
push esi  +
push [ebp+wParam]  +
push [ebp+nCode]  +
push hhk  +
call ds:CallNextHookEx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+nCode] 0 +
push esi  +
mov esi [ebp+arg_8] +
jnz loc_10A3008  +
cmp [ebp+wParam] 101h +
jnz loc_10A3008  +
mov eax [esi] +
cmp eax 5Bh +
jz loc_10A3003  +
cmp eax 5Ch +
jnz loc_10A3008  +
call sub_10A2590  +
push esi  +
push [ebp+wParam]  +
push [ebp+nCode]  +
push dword_10B39C4  +
call ds:CallNextHookEx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+68h] +
push edi  +
test eax eax +
jz loc_10A3039  +
mov eax [eax] +
jmp loc_10A303B  +
xor eax eax +
mov edi [ebp+arg_0] +
cmp edi eax +
jge loc_10A3080  +
push edi  +
call sub_10A112B  +
test eax eax +
jz loc_10A3080  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A3080  +
push 0  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10A3080  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [esi+20h] +
mov edi [ecx] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+64h]  +
push eax  +
push dword ptr [esi+20h]  +
call dword ptr [edi+14h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
test esi esi +
jl loc_10A30BA  +
mov edx [ecx+68h] +
test edx edx +
jz loc_10A30A5  +
mov edx [edx] +
jmp loc_10A30A7  +
xor edx edx +
cmp esi edx +
jge loc_10A30BA  +
mov eax [ecx+68h] +
mov eax [eax+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
mov [eax] ebx +
cmp [esi+1A0h] ebx +
jnz loc_10A31CE  +
mov ecx [ebp+arg_4] +
push 10h  +
call sub_100801C  +
test eax eax +
jz loc_10A31CE  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_10A31D3  +
mov [ebp+arg_0] ebx +
jmp loc_10A31AE  +
test ebx ebx +
jl loc_10A31C3  +
mov eax [esi+20h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
test eax eax +
jz loc_10A31A5  +
lea eax [esi+10Ch] +
mov ecx [eax] +
lea edx [ecx+1] +
mov [eax] edx +
lea eax [ebp+var_8] +
push eax  +
lea eax [esi+18h] +
push eax  +
push 1  +
push ecx  +
push [ebp+arg_0]  +
push dword ptr [esi+30h]  +
call sub_10A8A68  +
mov ebx eax +
test ebx ebx +
jl loc_10A31A5  +
push [ebp+var_8]  +
mov ecx [ebp+arg_4] +
call sub_10A19F1  +
cmp eax 0FFFFFFFFh +
jz loc_10A31A0  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0B0h]  +
test eax eax +
jz loc_10A31A5  +
push dword ptr [esi+108h]  +
mov eax [ebp+var_8] +
push dword ptr [esi+104h]  +
mov ecx [eax] +
push dword ptr [esi+100h]  +
push eax  +
call dword ptr [ecx+44h]  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 1 +
jmp loc_10A31A5  +
mov ebx 8007000Eh +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jz loc_10A3117  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10A31D3  +
mov ebx 8007000Eh +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
mov edi ecx +
mov eax [edi+68h] +
xor ebx ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
cmp eax ebx +
jz loc_10A3202  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_10A3205  +
mov [ebp+var_4] ebx +
cmp [ebp+var_4] ebx +
jle loc_10A323F  +
push esi  +
mov eax [edi+68h] +
mov eax [eax+4] +
mov esi [eax+ebx*4] +
mov eax [esi] +
push 0  +
push 1Eh  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jz loc_10A3227  +
inc [ebp+var_8]  +
jmp loc_10A3238  +
mov eax [esi] +
push 0  +
push 1Dh  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A3238  +
inc [ebp+var_C]  +
inc ebx  +
cmp ebx [ebp+var_4] +
jl loc_10A320B  +
pop esi  +
mov ecx [ebp+var_4] +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
cmp [ebp+var_8] ecx +
jz locret_10A3259  +
dec ecx  +
cmp [ebp+var_8] ecx +
jnz loc_10A3257  +
cmp [ebp+var_C] eax +
jz locret_10A3259  +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
push edi  +
push ebx  +
mov esi ecx +
or edi 0FFFFFFFFh +
call dword ptr [eax+30h]  +
lea edx [ebp+var_4] +
mov [ebp+var_C] eax +
mov eax [esi+64h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_10A32D6  +
and [ebp+var_8] 0 +
and [ebp+arg_0] 0 +
jmp loc_10A3304  +
cmp [ebp+var_8] 0 +
jz loc_10A32EF  +
mov eax [esi+20h] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
test eax eax +
mov eax [ebp+arg_0] +
jz loc_10A32FE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
mov edi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test edi edi +
jge loc_10A32DB  +
mov edi 7FFFFFFFh +
push [ebp+arg_4]  +
lea ecx [esi+68h] +
push ebx  +
push edi  +
call sub_10080DF  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+arg_0] +
cmp [ebp+var_C] eax +
jnz loc_10A32FE  +
mov [ebp+var_8] 1 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A32C9  +
jmp loc_10A3297  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
test edi edi +
jl loc_10A3389  +
push edi  +
push dword ptr [esi+68h]  +
call ds:off_10065B4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [esi+11Ch] +
mov ecx [eax] +
cmp ecx edi +
jle loc_10A334B  +
dec ecx  +
mov [eax] ecx +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax edi +
jle loc_10A335F  +
add dword ptr [esi+118h] 0FFFFFFFDh +
lea eax [esi+120h] +
mov ecx [eax] +
cmp ecx edi +
jle loc_10A336E  +
dec ecx  +
mov [eax] ecx +
lea eax [esi+114h] +
mov ecx [eax] +
cmp ecx edi +
jle loc_10A337D  +
dec ecx  +
mov [eax] ecx +
cmp [ebp+arg_4] 0 +
jz loc_10A3389  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push [ebp+arg_4]  +
lea ecx [esi+68h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [ebp+arg_0] +
mov edi [edx+eax*4] +
push eax  +
call sub_10A19D1  +
mov ebx eax +
test ebx ebx +
jz loc_10A33D5  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A33D5  +
mov eax [esi] +
or dword ptr [esi+44h] 2 +
push esi  +
call dword ptr [eax+4Ch]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+68h] +
cmp dword ptr [ecx] 0 +
jz loc_10A33FC  +
push 0  +
push offset loc_1040149  +
call sub_100831C  +
push 0FFFFFFF6h  +
pop eax  +
mov [esi+118h] eax +
mov [esi+11Ch] eax +
mov [esi+120h] eax +
mov [esi+124h] eax +
mov [esi+114h] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
mov ebx ecx +
cmp dword ptr [ebx+58h] 0 +
push esi  +
push edi  +
jz loc_10A364F  +
lea eax [ebx+34h] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push 0  +
push dword ptr [ebx+30h]  +
call ds:MapWindowPoints  +
mov eax [ebp+rc.left] +
mov edx [ebp+rc.right] +
mov ecx [ebp+rc.top] +
sub edx eax +
mov [ebp+var_24] edx +
mov edx [ebp+rc.bottom] +
sub edx ecx +
mov [ebp+var_28] ecx +
mov [ebp+var_2C] eax +
neg ecx  +
push ecx  +
neg eax  +
push eax  +
lea eax [ebp+rc] +
push eax  +
mov [ebp+var_20] edx +
call ds:OffsetRect  +
push dword ptr [ebx+58h]  +
call ds:GetDC  +
mov [ebp+hDC] eax +
test eax eax +
jz loc_10A364F  +
mov ecx ebx +
call sub_102AD95  +
lea ecx [ebp+var_14] +
call sub_109A8DE  +
push 2  +
sub esp 10h +
mov edi esp +
push [ebp+hDC]  +
lea esi [ebp+rc] +
movs   +
movs   +
movs   +
lea ecx [ebp+var_14] +
movs   +
call sub_109A90E  +
xor esi esi +
mov [ebp+var_C] eax +
cmp eax esi +
jz loc_10A3632  +
push 0FFFFFFF6h  +
pop eax  +
mov [ebp+var_4] eax +
cmp [ebx+118h] eax +
jz loc_10A34E9  +
lea eax [ebx+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
mov [ebp+var_4] eax +
lea edi [ebx+11Ch] +
push dword ptr [edi]  +
mov ecx ebx +
call sub_10A112B  +
test eax eax +
jz loc_10A350E  +
mov edi [edi] +
lea eax [ebx+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax edi +
jz loc_10A350E  +
mov [ebp+var_4] edi +
cmp [ebp+var_4] 0FFFFFFF6h +
jz loc_10A3531  +
push dword ptr [ebx+128h]  +
lea eax [ebp+rc] +
push dword ptr [ebx+12Ch]  +
mov ecx ebx +
push [ebp+var_4]  +
push eax  +
push [ebp+var_C]  +
call sub_10A16D1  +
cmp [ebx+154h] esi +
jz loc_10A35CD  +
cmp [ebx+1A0h] esi +
jz loc_10A354B  +
mov esi [ebx+1A8h] +
mov eax [ebx+68h] +
test eax eax +
jz loc_10A3556  +
mov edi [eax] +
jmp loc_10A3558  +
xor edi edi +
push 0  +
mov ecx ebx +
call sub_10A24C1  +
add eax esi +
cmp eax edi +
jge loc_10A3586  +
xor esi esi +
cmp [ebx+1A0h] esi +
jz loc_10A3577  +
mov esi [ebx+1A8h] +
push 0  +
mov ecx ebx +
call sub_10A24C1  +
mov edi eax +
add edi esi +
jmp loc_10A3593  +
mov eax [ebx+68h] +
test eax eax +
jz loc_10A3591  +
mov edi [eax] +
jmp loc_10A3593  +
xor edi edi +
xor esi esi +
cmp [ebx+1A0h] esi +
jz loc_10A35C9  +
mov esi [ebx+1A8h] +
jmp loc_10A35C9  +
cmp esi [ebp+var_4] +
jz loc_10A35C8  +
mov eax [ebx+68h] +
mov ecx [eax+4] +
xor eax eax +
cmp [ecx+esi*4] eax +
jz loc_10A35C8  +
push eax  +
push eax  +
push esi  +
lea eax [ebp+rc] +
push eax  +
push [ebp+var_C]  +
mov ecx ebx +
call sub_10A16D1  +
inc esi  +
cmp esi edi +
jl loc_10A35A5  +
lea eax [ebp+var_4] +
push eax  +
xor esi esi +
push 1Ah  +
mov ecx ebx +
mov [ebp+var_1C] esi +
mov [ebp+var_18] esi +
mov [ebp+var_8] 0 +
mov byte ptr [ebp-7] 0 +
call sub_1046141  +
test eax eax +
jnz loc_10A3606  +
lea eax [ebp+var_4] +
push eax  +
push 1Bh  +
mov ecx ebx +
call sub_1046141  +
test eax eax +
jnz loc_10A3606  +
mov eax 0FFh +
jmp loc_10A3609  +
mov al byte ptr [ebp+var_4] +
push 2  +
mov [ebp+var_6] al +
lea eax [ebp+var_8] +
push eax  +
push esi  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+var_C]  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+hDC]  +
mov [ebp+var_5] 1 +
push dword ptr [ebx+58h]  +
call ds:UpdateLayeredWindow  +
push esi  +
lea ecx [ebp+var_14] +
call sub_109A8E9  +
push [ebp+hDC]  +
push dword ptr [ebx+58h]  +
call ds:ReleaseDC  +
lea ecx [ebp+var_14] +
call sub_109ACD1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ecx+58h] eax +
jz loc_10A3675  +
mov eax [ecx+58h] +
test eax eax +
jz loc_10A3673  +
mov eax [eax] +
jmp loc_10A3675  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+10h] +
xor ecx ecx +
xor eax eax +
mov [edi] cx +
cmp esi 0FFFFFFF6h +
jz loc_10A36C5  +
mov ecx [ebp+8] +
mov edx [ecx+58h] +
test edx edx +
jz loc_10A36C5  +
test esi esi +
jl loc_10A36C5  +
mov ecx edx +
test ecx ecx +
jz loc_10A36AF  +
mov ecx [ecx] +
jmp loc_10A36B1  +
xor ecx ecx +
cmp esi ecx +
jge loc_10A36C5  +
push dword ptr [ebp+14h]  +
mov eax [edx+4] +
mov eax [eax+esi*4] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+2Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jl loc_10A36F5  +
mov eax [ebp+8] +
mov eax [eax+58h] +
test eax eax +
jz loc_10A36E9  +
mov eax [eax] +
jmp loc_10A36EB  +
xor eax eax +
cmp [ebp+0Ch] eax +
jge loc_10A36F5  +
xor eax eax +
inc eax  +
jmp loc_10A36F7  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
xor ebx ebx +
inc edi  +
cmp [esi+17Ch] ebx +
jz loc_10A3808  +
cmp [esi+18Ch] ebx +
jl loc_10A3808  +
mov [ebp+var_320] ebx +
mov eax [esi+68h] +
test eax eax +
jz loc_10A3748  +
mov eax [eax] +
jmp loc_10A374A  +
xor eax eax +
cmp ebx eax +
jge loc_10A376E  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_10A376B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
test eax eax +
jnz loc_10A376B  +
inc [ebp+var_320]  +
inc ebx  +
jmp loc_10A373D  +
push 314h  +
lea eax [ebp+var_318] +
push 0  +
push eax  +
call memset  +
mov eax [esi+18Ch] +
mov [ebp+var_318] eax +
mov eax [esi+188h] +
mov [ebp+var_294] eax +
mov eax [esi+190h] +
mov [ebp+var_210] eax +
mov eax [esi+194h] +
mov [ebp+var_18C] eax +
mov eax [esi+198h] +
add esp 0Ch +
mov [ebp+var_108] eax +
mov eax [ebp+var_320] +
push 6  +
mov [ebp+var_84] eax +
lea eax [ebp+var_31C] +
push eax  +
push 0F9Eh  +
push offset dword_1029CB0  +
mov [ebp+var_31C] edi +
mov [ebp+var_298] edi +
mov [ebp+var_214] edi +
mov [ebp+var_190] edi +
mov [ebp+var_10C] edi +
mov [ebp+var_88] edi +
call sub_1006870  +
xor ecx ecx +
cmp [esi+184h] ecx +
jz loc_10A38FF  +
mov [ebp+var_324] ecx +
xor ebx ebx +
mov [ebp+var_320] ecx +
mov eax [esi+68h] +
cmp eax ecx +
jz loc_10A382F  +
mov eax [eax] +
jmp loc_10A3831  +
xor eax eax +
cmp [ebp+var_320] eax +
jge loc_10A3886  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov edx [ebp+var_320] +
mov eax [eax+edx*4] +
cmp eax ecx +
jz loc_10A387C  +
mov [ebp+var_328] ecx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jz loc_10A387C  +
mov ecx [eax] +
lea edx [ebp+var_328] +
push edx  +
push eax  +
call dword ptr [ecx+0B0h]  +
test eax eax +
jz loc_10A387C  +
inc [ebp+var_324]  +
add ebx [ebp+var_328] +
inc [ebp+var_320]  +
xor ecx ecx +
jmp loc_10A3824  +
push 20Ch  +
push ecx  +
lea eax [ebp+var_210] +
push eax  +
mov [ebp+var_214] ecx +
call memset  +
mov eax [esi+64h] +
mov ecx [eax] +
add esp 0Ch +
push eax  +
call dword ptr [ecx+60h]  +
push eax  +
lea eax [ebp+var_214] +
push eax  +
call sub_1012258  +
mov eax [ebp+var_324] +
mov [ebp+var_18C] eax +
mov eax [esi+19Ch] +
push 4  +
mov [ebp+var_84] eax +
lea eax [ebp+var_214] +
push eax  +
push 1903h  +
push offset dword_102F3D0  +
mov [ebp+var_190] edi +
mov [ebp+var_108] ebx +
mov [ebp+var_10C] edi +
mov [ebp+var_88] edi +
call sub_1006870  +
mov ecx esi +
call sub_10A18F1  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push edi  +
push eax  +
mov edi 80070057h +
call dword ptr [ecx+4Ch]  +
mov esi [ebp+8] +
push eax  +
mov ecx esi +
call sub_10A25DA  +
test eax eax +
jl loc_10A3952  +
mov ecx [esi+68h] +
mov ecx [ecx+4] +
mov eax [ecx+eax*4] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push edi  +
push eax  +
mov edi 80070057h +
call dword ptr [ecx+4Ch]  +
mov esi [ebp+8] +
push eax  +
mov ecx esi +
call sub_10A25DA  +
test eax eax +
jl loc_10A3994  +
mov ecx [esi+68h] +
mov ecx [ecx+4] +
mov eax [ecx+eax*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call sub_10A1509  +
mov ecx edi +
call sub_10A33E3  +
mov eax [edi+5Ch] +
test eax eax +
jz loc_10A39C5  +
push eax  +
call ds:CloseThemeData  +
and dword ptr [edi+5Ch] 0 +
lea esi [edi+110h] +
mov ecx [esi] +
test ecx ecx +
jz loc_10A39E1  +
call sub_10A8B25  +
mov eax [esi] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
lea esi [edi+1C4h] +
mov eax [esi] +
test eax eax +
jz loc_10A39F7  +
push eax  +
call ds:DestroyIcon  +
and dword ptr [esi] 0 +
push dword ptr [edi+30h]  +
call ds:RevokeDragDrop  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
sub esp 34h +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp eax edi +
jz loc_10A3A26  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_10A3A29  +
mov [ebp+var_4] edi +
cmp [esi+1A0h] edi +
jz loc_10A3A39  +
mov eax [esi+1A8h] +
jmp loc_10A3A3B  +
xor eax eax +
sub [ebp+arg_4] eax +
js loc_10A3E2F  +
mov eax [ebp+var_4] +
cmp [ebp+arg_4] eax +
jge loc_10A3E2F  +
push ebx  +
lea ebx [esi+34h] +
push ebx  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_10A3E2E  +
mov eax [esi+0D0h] +
mov ecx [esi+0D4h] +
mov [ebp+rcSrc.left] eax +
mov [ebp+rcSrc.right] eax +
mov eax [ebp+nNumber] +
sub eax [ebp+arg_C] +
mov [ebp+rcSrc.top] ecx +
mov [ebp+nNumber] eax +
fild  [ebp+nNumber] +
mov [ebp+rcSrc.bottom] ecx +
fmul  [ebp+dy] +
call _ftol2_sse  +
mov edx eax +
add edx [ebp+arg_C] +
mov ecx esi +
call sub_1020CA7  +
xor edi edi +
test eax eax +
jz loc_10A3AB1  +
mov eax [esi+3Ch] +
sub eax [ebx] +
push edi  +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
jmp loc_10A3AC8  +
cmp [esi+1A0h] edi +
jnz loc_10A3AD2  +
mov eax [esi+40h] +
sub eax [esi+38h] +
sub eax edx +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push edi  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:OffsetRect  +
cmp [ebp+arg_4] edi +
mov [ebp+dy] edi +
mov [ebp+arg_C] edi +
jge loc_10A3AE4  +
jmp loc_10A3C9A  +
xor edi edi +
cmp [esi+1A0h] edi +
jz loc_10A3AFF  +
cmp [esi+150h] edi +
jz loc_10A3AFF  +
mov eax [esi+1A8h] +
add eax [ebp+arg_C] +
jmp loc_10A3B02  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
mov ecx [ecx+4] +
mov ebx [ecx+eax*4] +
mov eax [ebx] +
lea ecx [ebp+nNumber] +
push ecx  +
push 1Dh  +
push ebx  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A3B35  +
mov eax [ebx] +
lea ecx [ebp+nNumber] +
push ecx  +
push 1Eh  +
push ebx  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A3B35  +
mov eax ds:nDenominator +
mov [ebp+nNumber] eax +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A3B4A  +
mov eax [ebp+arg_14] +
mov edi [eax] +
jmp loc_10A3BE4  +
cmp dword ptr [esi+1A0h] 0 +
mov [ebp+var_24] edi +
mov [ebp+var_20] edi +
mov edi [ebp+arg_14] +
mov eax [edi] +
mov [ebp+var_1C] eax +
mov eax [edi+4] +
mov [ebp+var_18] eax +
jnz loc_10A3B83  +
lea eax [ebp+rcDst] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push ebx  +
mov ecx esi +
call sub_10A292B  +
test eax eax +
jl loc_10A3B83  +
mov edi [ebp+rcDst.bottom] +
sub edi [ebp+rcDst.top] +
jmp loc_10A3B86  +
mov edi [edi+4] +
cmp [ebp+arg_18] 0 +
jz loc_10A3BB3  +
mov eax [esi+0E0h] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
cmp dword ptr [esi+1A0h] 0 +
jz loc_10A3BAB  +
mov edi eax +
add edi [esi+0E8h] +
jmp loc_10A3BB3  +
add eax [esi+0E8h] +
add edi eax +
cmp dword ptr [esi+1A0h] 0 +
jz loc_10A3BD0  +
push ebx  +
mov ecx esi +
call sub_10A1152  +
test eax eax +
jz loc_10A3BE4  +
add edi [esi+104h] +
jmp loc_10A3BE4  +
cmp [ebp+arg_1C] 0 +
jz loc_10A3BE4  +
mov eax [esi+108h] +
add eax [esi+104h] +
add edi eax +
cmp dword ptr [esi+1A0h] 0 +
jz loc_10A3C03  +
mov eax [esi+0B4h] +
add eax [esi+0B0h] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
add edi eax +
jmp loc_10A3C11  +
mov eax [ebp+arg_C] +
cmp eax [ebp+arg_4] +
jge loc_10A3C11  +
add edi [esi+0E0h] +
push ds:nDenominator  +
push edi  +
push [ebp+nNumber]  +
call ds:MulDiv  +
mov edi [ebp+arg_4] +
cmp [ebp+arg_C] edi +
mov edx eax +
mov [ebp+nNumber] edx +
jge loc_10A3C33  +
add [ebp+dy] edx +
jmp loc_10A3C8C  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A3C59  +
mov eax [ebp+rcSrc.left] +
add edx eax +
mov eax [ebp+arg_14] +
mov eax [eax+4] +
add eax [ebp+rcSrc.top] +
push 0  +
push [ebp+dy]  +
mov [ebp+rcSrc.right] edx +
mov [ebp+rcSrc.bottom] eax +
jmp loc_10A3C82  +
cmp dword ptr [esi+1A0h] 0 +
jz loc_10A3C6A  +
mov eax [esi+1ACh] +
jmp loc_10A3C6F  +
mov eax [ebp+arg_14] +
mov eax [eax] +
add eax [ebp+rcSrc.left] +
push [ebp+dy]  +
mov [ebp+rcSrc.right] eax +
mov eax [ebp+rcSrc.top] +
add edx eax +
mov [ebp+rcSrc.bottom] edx +
push 0  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:OffsetRect  +
inc [ebp+arg_C]  +
cmp [ebp+arg_C] edi +
jle loc_10A3AE2  +
xor edi edi +
cmp [ebp+arg_18] edi +
jz loc_10A3CCA  +
mov eax [esi+0E0h] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
mov ecx esi +
mov edx eax +
add edx [esi+0E8h] +
call sub_1020CA7  +
test eax eax +
jz loc_10A3CC1  +
add [ebp+rcSrc.bottom] edx +
test [ebp+arg_20] 3 +
jnz loc_10A3CCA  +
add [ebp+rcSrc.top] edx +
cmp [ebp+arg_1C] edi +
jz loc_10A3CEF  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jnz loc_10A3CEF  +
test [ebp+arg_20] 3 +
jnz loc_10A3CEF  +
mov eax [esi+108h] +
add eax [esi+104h] +
sub [ebp+rcSrc.bottom] eax +
test [ebp+arg_20] 3 +
push 2  +
pop ebx  +
jz loc_10A3D5C  +
mov eax [esi+0E0h] +
cdq   +
sub eax edx +
mov edx eax +
mov eax dword ptr [ebp+arg_20] +
xor ecx ecx +
and al bl +
sar edx 1 +
cmp al bl +
setnz cl  +
mov edi ecx +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A3D23  +
push edx  +
sub edx edi +
jmp loc_10A3D35  +
cmp dword ptr [esi+1A0h] 0 +
jz loc_10A3D30  +
push 0  +
jmp loc_10A3D35  +
mov eax edx +
sub eax edi +
push eax  +
push edx  +
lea eax [ebp+rcSrc] +
push eax  +
call ds:InflateRect  +
mov eax [esi+0E0h] +
and eax 80000001h +
jns loc_10A3D52  +
dec eax  +
or eax 0FFFFFFFEh +
inc eax  +
jz loc_10A3D5A  +
inc [ebp+rcSrc.right]  +
inc [ebp+rcSrc.bottom]  +
xor edi edi +
test [ebp+arg_20] bl +
jz loc_10A3DF6  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A3DB0  +
mov eax [esi+0B0h] +
mov [ebp+rcSrc.top] eax +
mov eax [esi+40h] +
sub eax [esi+0B4h] +
sub eax [esi+38h] +
mov [ebp+rcSrc.bottom] eax +
cmp [ebp+arg_4] edi +
jnz loc_10A3D96  +
mov eax [esi+0A8h] +
mov [ebp+rcSrc.left] eax +
mov eax [ebp+var_4] +
dec eax  +
cmp [ebp+arg_4] eax +
jnz loc_10A3DF6  +
mov eax [esi+3Ch] +
sub eax [esi+0ACh] +
sub eax [esi+34h] +
mov [ebp+rcSrc.right] eax +
jmp loc_10A3DF6  +
mov eax [esi+0A8h] +
mov [ebp+rcSrc.left] eax +
mov eax [esi+3Ch] +
sub eax [esi+0ACh] +
sub eax [esi+34h] +
mov [ebp+rcSrc.right] eax +
cmp [esi+1A0h] edi +
jnz loc_10A3DF6  +
cmp [ebp+arg_4] edi +
jnz loc_10A3DDE  +
mov eax [esi+0B0h] +
mov [ebp+rcSrc.top] eax +
mov eax [ebp+var_4] +
dec eax  +
cmp [ebp+arg_4] eax +
jnz loc_10A3DF6  +
mov eax [esi+40h] +
sub eax [esi+0B4h] +
sub eax [esi+38h] +
mov [ebp+rcSrc.bottom] eax +
test dword ptr [ebp+arg_20] 10000h +
jz loc_10A3E1E  +
push dword ptr [esi+38h]  +
lea eax [ebp+rcSrc] +
push dword ptr [esi+34h]  +
push eax  +
call ds:OffsetRect  +
push ebx  +
lea eax [ebp+rcSrc] +
push eax  +
push edi  +
push dword ptr [esi+30h]  +
call ds:MapWindowPoints  +
lea eax [ebp+rcSrc] +
push eax  +
push [ebp+lprcDst]  +
call ds:CopyRect  +
xor edi edi +
inc edi  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
mov eax [ebp+8] +
push dword ptr [ebp+10h]  +
fld  dword ptr [eax+44h] +
lea ecx [eax+0E0h] +
push dword ptr [eax+140h]  +
push dword ptr [eax+130h]  +
push ecx  +
push ecx  +
fstp  dword ptr [esp] +
push dword ptr [eax+40h]  +
lea ecx [eax+58h] +
push dword ptr [eax+3Ch]  +
push dword ptr [ebp+0Ch]  +
push ecx  +
lea ecx [eax-10h] +
call sub_10A3A08  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push edi  +
xor edi edi +
push eax  +
inc edi  +
call dword ptr [ecx+4Ch]  +
mov esi [ebp+8] +
push eax  +
mov ecx esi +
call sub_10A25DA  +
test eax eax +
jl loc_10A3EB8  +
mov ecx [esi+68h] +
mov ecx [ecx+4] +
mov eax [ecx+eax*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+84h]  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
sub esp 10h +
push ebx  +
push esi  +
push eax  +
xor ebx ebx +
call dword ptr [ecx+4Ch]  +
mov esi [ebp+8] +
push eax  +
mov ecx esi +
call sub_10A25DA  +
test eax eax +
jl loc_10A3F28  +
push dword ptr [ebp+10h]  +
lea ecx [esi+10h] +
mov edx [ecx] +
push 10002h  +
push eax  +
push ecx  +
call dword ptr [edx+1Ch]  +
mov ebx eax +
test ebx ebx +
jz loc_10A3F28  +
mov eax [esi+5Ch] +
test eax eax +
jz loc_10A3F28  +
mov esi [ebp+10h] +
push edi  +
push dword ptr [ebp+10h]  +
lea edi [ebp-10h] +
movs   +
movs   +
lea ecx [ebp-10h] +
push ecx  +
push 0  +
push 1  +
movs   +
push 0  +
push eax  +
movs   +
call ds:GetThemeBackgroundExtent  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx 7D6h +
mov esi ecx +
push ebx  +
push dword ptr [esi+30h]  +
call ds:KillTimer  +
mov edi [ebp+arg_0] +
cmp [esi+124h] edi +
jz loc_10A3F5F  +
inc dword ptr [esi+194h]  +
mov eax [esi+20h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
test eax eax +
jnz loc_10A3F96  +
cmp [ebp+arg_4] eax +
jnz loc_10A3F96  +
call sub_1045540  +
push 0  +
push dword ptr [esi+168h]  +
mov [esi+15Ch] eax +
push ebx  +
push dword ptr [esi+30h]  +
mov [esi+124h] edi +
call ds:SetTimer  +
jmp loc_10A3FC4  +
xor ecx ecx +
inc ecx  +
lea eax [esi+15Ch] +
cmp [eax] ecx +
jnz loc_10A3FA9  +
and dword ptr [eax] 0 +
push 3  +
pop ecx  +
mov eax [esi+20h] +
mov ebx [eax] +
push ecx  +
push edi  +
mov ecx esi +
call sub_10A308B  +
push eax  +
push dword ptr [esi+20h]  +
call dword ptr [ebx+48h]  +
mov [esi+124h] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
mov esi ecx +
xor eax eax +
cmp [esi+5Ch] eax +
jz loc_10A4069  +
cmp [esi+148h] eax +
jz loc_10A4069  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [edi] +
test ecx ecx +
jz loc_10A3FFC  +
mov ecx [ecx] +
jmp loc_10A3FFE  +
xor ecx ecx +
cmp ecx [esi+70h] +
jg loc_10A4068  +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A4036  +
mov eax [esi+0DCh] +
add eax [esi+0D4h] +
add eax [esi+0CCh] +
add eax [ebp+Rect.top] +
mov [ebp+Rect.bottom] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_8]  +
lea eax [ebp+Rect] +
push [ebp+arg_4]  +
mov ecx esi +
push eax  +
push edi  +
call sub_10A2D9D  +
fcomp  ds:flt_10A4070 +
fnstsw  ax +
test ah 1 +
jnz loc_10A4066  +
xor eax eax +
inc eax  +
jmp loc_10A4068  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jz loc_10A40C3  +
cmp [edi+1A0h] ecx +
jz loc_10A4098  +
mov ecx [edi+1A8h] +
mov esi [ebp+arg_4] +
push esi  +
push 1  +
lea eax [edi+10h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+1Ch]  +
mov eax [edi+0D4h] +
push 14h  +
mov [esi+0Ch] eax +
call ds:GetSystemMetrics  +
mov ecx [esi+0Ch] +
sub ecx eax +
mov [esi+4] ecx +
jmp loc_10A4114  +
cmp [edi+1A0h] ecx +
jz loc_10A40D6  +
mov eax [edi+1A8h] +
mov [ebp+arg_0] eax +
jmp loc_10A40D9  +
mov [ebp+arg_0] ecx +
mov esi [ebp+arg_4] +
push ebx  +
push esi  +
push 1  +
lea ebx [edi+10h] +
mov eax [ebx] +
push ecx  +
mov ecx edi +
mov [ebp+var_4] eax +
call sub_10A24C1  +
mov ecx [ebp+arg_0] +
lea eax [ecx+eax-1] +
push eax  +
mov eax [ebp+var_4] +
push ebx  +
call dword ptr [eax+1Ch]  +
mov eax [esi+0Ch] +
push 14h  +
mov [esi+4] eax +
call ds:GetSystemMetrics  +
add eax [esi+4] +
pop ebx  +
mov [esi+0Ch] eax +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
cmp dword ptr [ecx+1A0h] 0 +
jz loc_10A4146  +
mov eax [ecx+68h] +
push esi  +
test eax eax +
jz loc_10A4134  +
mov esi [eax] +
jmp loc_10A4136  +
xor esi esi +
push 0  +
call sub_10A24C1  +
cmp eax esi +
pop esi  +
jge loc_10A4146  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
mov ebx ecx +
call ds:GetWindowRect  +
xor eax eax +
lea edi [ebp+rc] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+rc] +
push eax  +
mov ecx ebx +
call sub_1020A96  +
xor eax eax +
lea edi [ebp+var_30] +
stos   +
stos   +
xor esi esi +
stos   +
mov [ebp+X] esi +
mov [ebp+Y] esi +
stos   +
cmp [ebx+20h] esi +
jz loc_10A41C4  +
mov eax [ebx+20h] +
mov edi [eax] +
lea eax [ebp+var_30] +
push eax  +
push dword ptr [ebx+144h]  +
mov ecx ebx +
push dword ptr [ebx+11Ch]  +
call sub_10A308B  +
push eax  +
push dword ptr [ebx+64h]  +
push dword ptr [ebx+20h]  +
call dword ptr [edi+0Ch]  +
mov ecx ebx +
call sub_1020CA7  +
test eax eax +
jz loc_10A4280  +
mov ecx [ebp+Rect.left] +
mov eax [ebp+Rect.right] +
sub eax ecx +
mov [ebp+var_C] eax +
mov eax [ebx+0E0h] +
cdq   +
push 3  +
pop esi  +
idiv  esi +
mov [ebp+X] ecx +
mov ecx [ebx+0A4h] +
mov esi eax +
add esi [ebx+108h] +
mov eax [ebx+164h] +
add esi [ebx+104h] +
add esi [ebx+0E8h] +
add esi [ebx+0DCh] +
add esi [ebx+0D4h] +
add esi [ebx+0CCh] +
add esi ecx +
cmp eax 3 +
jnz loc_10A4250  +
mov eax [ebp+hRgn] +
sub ecx esi +
add ecx [ebp+Rect.top] +
cmp dword ptr [ebx+144h] 0 +
lea eax [ecx+eax-8] +
mov [ebp+Y] eax +
jz loc_10A43D1  +
mov eax [ebp+var_2C] +
sub eax [ebp+Rect.top] +
add [ebp+Y] eax +
jmp loc_10A43D1  +
cmp eax 1 +
jnz loc_10A43D1  +
mov eax [ebp+Rect.bottom] +
sub eax [ebx+0A0h] +
sub eax [ebp+hRgn] +
add eax 8 +
cmp dword ptr [ebx+144h] 0 +
mov [ebp+Y] eax +
jz loc_10A43D1  +
mov eax [ebp+var_24] +
sub eax [ebp+Rect.bottom] +
jmp loc_10A4248  +
mov eax [ebx+1A0h] +
mov edi [ebp+Rect.top] +
mov [ebp+Y] edi +
cmp eax esi +
jz loc_10A4298  +
mov edx [ebx+1ACh] +
jmp loc_10A429E  +
mov edx [ebx+0C8h] +
mov ecx [ebx+0D8h] +
add ecx [ebx+0D0h] +
add ecx edx +
mov [ebp+var_C] ecx +
cmp eax esi +
jz loc_10A42BB  +
mov esi [ebx+40h] +
sub esi [ebx+38h] +
jmp loc_10A42C0  +
mov esi [ebp+Rect.bottom] +
sub esi edi +
test eax eax +
jz loc_10A439C  +
mov edi [ebx+164h] +
cmp edi 1 +
jz loc_10A4300  +
cmp edi 3 +
jz loc_10A4300  +
mov eax [ebx+0A4h] +
sub eax [ebx+0A0h] +
mov ecx [ebp+rc.top] +
sub eax esi +
add eax [ebp+var_24] +
add eax [ebp+var_2C] +
cdq   +
sub eax edx +
sar eax 1 +
cmp eax ecx +
mov [ebp+Y] eax +
jge loc_10A435D  +
mov [ebp+Y] ecx +
jmp loc_10A435D  +
mov eax [ebx+9Ch] +
sub eax [ebx+98h] +
sub eax ecx +
add eax [ebp+var_28] +
add eax [ebp+var_30] +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+X] eax +
cmp edi 1 +
jnz loc_10A4338  +
cmp dword ptr [ebx+148h] 0 +
mov eax [ebp+Rect.bottom] +
mov [ebp+Y] eax +
jz loc_10A435D  +
sub eax [ebx+0A0h] +
jmp loc_10A4341  +
mov eax [ebx+38h] +
sub eax [ebx+40h] +
add eax [ebp+Rect.top] +
cmp dword ptr [ebx+148h] 0 +
mov [ebp+Y] eax +
jz loc_10A435D  +
mov ecx [ebp+Y] +
mov eax [ebx+0A4h] +
lea eax [ecx+eax-8] +
mov [ebp+Y] eax +
lea esi [ebx+34h] +
lea edi [ebp+var_50] +
movs   +
movs   +
movs   +
push 0FFFFFFF0h  +
push dword ptr [ebx+30h]  +
movs   +
mov esi ds:GetWindowLongW +
call esi  +
push 0FFFFFFECh  +
push dword ptr [ebx+30h]  +
mov edi eax +
call esi  +
push eax  +
push 0  +
push edi  +
lea eax [ebp+var_50] +
push eax  +
call ds:AdjustWindowRectEx  +
mov esi [ebp+var_44] +
mov eax [ebp+var_48] +
sub esi [ebp+var_4C] +
sub eax [ebp+var_50] +
mov [ebp+var_C] eax +
mov ecx eax +
mov eax [ebx+164h] +
test eax eax +
jnz loc_10A43B7  +
mov eax [ebp+var_28] +
sub eax [ebx+98h] +
sub eax [ebp+hRgn] +
add eax 8 +
jmp loc_10A43CE  +
cmp eax 2 +
jnz loc_10A43D1  +
mov eax [ebx+9Ch] +
sub eax ecx +
add eax [ebp+var_30] +
mov ecx [ebp+hRgn] +
lea eax [ecx+eax-8] +
mov [ebp+X] eax +
push dword ptr [ebx+30h]  +
call sub_109A95E  +
mov [ebp+var_10] eax +
xor edi edi +
xor eax eax +
cmp [ebx+48h] edi +
mov [ebp+hRgn] edi +
setnle al  +
cmp [ebp+var_10] edi +
jz loc_10A4401  +
cmp eax edi +
jz loc_10A4405  +
push 1  +
push edi  +
push dword ptr [ebx+30h]  +
call ds:SetWindowRgn  +
push edi  +
jmp loc_10A443E  +
cmp eax edi +
jnz loc_10A4445  +
lea edi [ebx+34h] +
push edi  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_10A4445  +
cmp [ebx+5Ch] eax +
jz loc_10A4445  +
cmp [ebx+1A0h] eax +
jz loc_10A4428  +
cmp [ebx+150h] eax +
jz loc_10A4445  +
push dword ptr [ebx+40h]  +
push dword ptr [ebx+3Ch]  +
push dword ptr [ebx+38h]  +
push dword ptr [edi]  +
call ds:CreateRectRgn  +
mov [ebp+hRgn] eax +
push 1  +
mov ecx ebx +
call sub_10A232B  +
xor eax eax +
lea edi [ebp+var_60] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_60] +
push eax  +
push dword ptr [ebx+30h]  +
call ds:GetWindowRect  +
push dword ptr [ebx+30h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_10A448B  +
mov eax [ebp+var_60] +
cmp [ebp+X] eax +
jnz loc_10A448B  +
mov ecx [ebp+var_5C] +
cmp [ebp+Y] ecx +
jnz loc_10A448B  +
mov edx [ebp+var_58] +
sub edx eax +
cmp [ebp+var_C] edx +
jnz loc_10A448B  +
mov eax [ebp+var_54] +
sub eax ecx +
cmp esi eax +
jz loc_10A450A  +
xor edi edi +
cmp [ebx+1A0h] edi +
jz loc_10A44F2  +
mov eax [ebp+rc.top] +
cmp [ebp+Y] eax +
jge loc_10A44A0  +
mov [ebp+Y] eax +
mov ecx [ebp+Y] +
mov eax [ebp+rc.bottom] +
lea edx [esi+ecx] +
cmp edx eax +
jle loc_10A44B1  +
sub eax ecx +
mov esi eax +
mov eax [ebx+164h] +
cmp eax 1 +
jz loc_10A44C1  +
cmp eax 3 +
jnz loc_10A44E1  +
mov eax [ebp+rc.left] +
cmp [ebp+X] eax +
jge loc_10A44CC  +
mov [ebp+X] eax +
mov eax [ebp+X] +
mov ecx [ebp+var_C] +
lea edx [eax+ecx] +
mov eax [ebp+rc.right] +
cmp edx eax +
jle loc_10A44E1  +
sub eax ecx +
mov [ebp+X] eax +
cmp [ebp+var_10] edi +
jz loc_10A44F2  +
push 1  +
push edi  +
push dword ptr [ebx+30h]  +
call ds:SetWindowRgn  +
push 54h  +
push esi  +
push [ebp+var_C]  +
push [ebp+Y]  +
push [ebp+X]  +
push edi  +
push dword ptr [ebx+30h]  +
call ds:SetWindowPos  +
jmp loc_10A450C  +
xor edi edi +
xor eax eax +
cmp [ebp+arg_4] edi +
jnz loc_10A4524  +
push edi  +
lea eax [ebx+34h] +
push eax  +
push dword ptr [ebx+30h]  +
call ds:InvalidateRect  +
xor eax eax +
inc eax  +
cmp [ebp+hRgn] edi +
jz loc_10A4541  +
mov ecx ebx +
call sub_10A1360  +
push 1  +
push [ebp+hRgn]  +
push dword ptr [ebx+30h]  +
call ds:SetWindowRgn  +
xor eax eax +
inc eax  +
cmp eax edi +
jz loc_10A454E  +
push dword ptr [ebx+30h]  +
call ds:UpdateWindow  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_10A1476  +
push 2  +
lea eax [ebp+var_8] +
push eax  +
mov ecx esi +
mov [ebp+var_8] 1Ah +
mov [ebp+var_4] 1Bh +
call sub_102099C  +
push 13h  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+30h]  +
call ds:SetWindowPos  +
push edi  +
push edi  +
mov ecx esi +
call sub_10A414E  +
push 2  +
push 0FFh  +
push edi  +
push dword ptr [esi+30h]  +
call ds:SetLayeredWindowAttributes  +
mov ecx esi +
call sub_10A1360  +
mov ebx [esi+30h] +
call ds:GetFocus  +
cmp eax ebx +
jnz loc_10A45E3  +
mov esi [esi+118h] +
cmp esi 0FFFFFFF6h +
jz loc_10A45D4  +
lea edi [esi+1] +
push edi  +
push 0FFFFFFFCh  +
push ebx  +
push 8005h  +
call ds:NotifyWinEvent  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
cmp hhk 0 +
jnz locret_10A4610  +
push 0  +
push hInstance  +
push offset fn  +
push 0Dh  +
call ds:SetWindowsHookExW  +
mov hhk eax +
retn   +
***
cmp dword_10B39C4 0 +
push edi  +
mov edi ecx +
jnz loc_10A4664  +
push esi  +
push 0  +
push hInstance  +
push offset sub_10A2FDF  +
push 0Dh  +
call ds:SetWindowsHookExW  +
mov esi ds:GetAsyncKeyState +
push 5Bh  +
mov dword_10B39C4 eax +
call esi  +
test ax ax +
jl loc_10A4663  +
push 5Ch  +
call esi  +
test ax ax +
jl loc_10A4663  +
call sub_10A2590  +
pop esi  +
mov ecx edi +
pop edi  +
jmp sub_1020A6F  +
pop esi  +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push dword ptr [esi+50h]  +
call ds:off_100407C  +
push 0  +
push eax  +
lea ecx [esi-18h] +
call sub_10A331C  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+58h] +
xor ecx ecx +
push edi  +
mov dword ptr [ebp-4] 0FFFFFFF6h +
cmp eax ecx +
jz loc_10A46BA  +
mov eax [eax] +
mov [ebp-8] eax +
jmp loc_10A46BD  +
mov [ebp-8] ecx +
cmp [ebp-8] ecx +
mov ebx [ebp+0Ch] +
mov [ebp+8] ecx +
jle loc_10A476B  +
mov eax [esi+58h] +
mov eax [eax+4] +
mov ecx [ebp+8] +
mov edi [eax+ecx*4] +
mov eax [edi] +
push 0  +
push 1Dh  +
push edi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A472F  +
mov eax [edi] +
push 0  +
push 1Eh  +
push edi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A472F  +
mov eax [esi] +
lea ecx [ebp-18h] +
push ecx  +
push 2  +
push dword ptr [ebp+8]  +
push esi  +
call dword ptr [eax+1Ch]  +
test eax eax +
jz loc_10A472F  +
push dword ptr [ebx+4]  +
lea eax [ebp-18h] +
push dword ptr [ebx]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_10A472F  +
xor edx edx +
cmp [esi+190h] edx +
jz loc_10A4760  +
mov eax [esi+198h] +
cmp [ebp+8] eax +
jge loc_10A473C  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [ebp-8] +
jge loc_10A476B  +
jmp loc_10A46CC  +
***
lea ecx [esi-10h] +
cmp [ecx+1A0h] edx +
jz loc_10A474F  +
mov edi [ecx+1A8h] +
jmp loc_10A4751  +
xor edi edi +
push edx  +
call sub_10A24C1  +
lea eax [eax+edi-1] +
cmp [ebp+8] eax +
jg loc_10A476B  +
mov eax [ebp+8] +
mov [ebp-4] eax +
cmp eax 0FFFFFFF6h +
jnz loc_10A47C7  +
add esi 0FFFFFFF0h +
mov ecx esi +
call sub_10A411F  +
test eax eax +
jz loc_10A47C7  +
lea eax [ebp-18h] +
push eax  +
push 1  +
mov ecx esi +
call sub_10A4079  +
push dword ptr [ebx+4]  +
mov edi ds:PtInRect +
push dword ptr [ebx]  +
lea eax [ebp-18h] +
push eax  +
call edi  +
test eax eax +
jz loc_10A47A4  +
mov dword ptr [ebp-4] 0FFFFFFF5h +
jmp loc_10A47C7  +
lea eax [ebp-18h] +
push eax  +
push 0  +
mov ecx esi +
call sub_10A4079  +
push dword ptr [ebx+4]  +
lea eax [ebp-18h] +
push dword ptr [ebx]  +
push eax  +
call edi  +
test eax eax +
jz loc_10A47C7  +
mov dword ptr [ebp-4] 0FFFFFFF4h +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ecx +
mov eax [esi+84h] +
mov [ebp+var_10] eax +
mov eax [esi+88h] +
mov [ebp+var_C] eax +
mov eax [esi+80h] +
mov [ebp+var_8] eax +
mov eax [esi+8Ch] +
mov [ebp+var_4] eax +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_1014903  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_1014903  +
mov edi [ebp+var_10] +
mov edx [esi+0A8h] +
mov ebx [ebp+var_C] +
mov eax [esi+0B0h] +
mov ecx [esi+0B4h] +
add edx edi +
mov edi [esi+0ACh] +
add edi ebx +
mov ebx [esi+148h] +
mov [esi+0D4h] eax +
mov [esi+0DCh] ecx +
mov [esi+0D0h] edx +
mov [esi+0D8h] edi +
test ebx ebx +
jnz loc_10A4899  +
sub edx [esi+98h] +
sub edi [esi+9Ch] +
sub eax [esi+0A0h] +
sub ecx [esi+0A4h] +
mov [esi+0D0h] edx +
mov [esi+0D8h] edi +
mov [esi+0D4h] eax +
mov [esi+0DCh] ecx +
test ebx ebx +
jz loc_10A48AB  +
mov eax [ebp+var_8] +
add [esi+0D4h] eax +
mov eax [ebp+var_4] +
add [esi+0DCh] eax +
mov ecx esi +
call sub_10A411F  +
test eax eax +
jz loc_10A48D0  +
mov edi ds:GetSystemMetrics +
push 14h  +
call edi  +
add [esi+0D4h] eax +
push 14h  +
call edi  +
add [esi+0DCh] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_10A47D6  +
cmp dword ptr [esi+150h] 0 +
jz loc_10A490C  +
mov ebx [esi+108h] +
add ebx [esi+104h] +
add ebx [esi+0A4h] +
mov [ebp+var_4] ebx +
jmp loc_10A4917  +
mov eax [esi+0DCh] +
mov [ebp+var_4] eax +
mov ebx eax +
xor eax eax +
lea edi [ebp+Rect] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+Rect] +
push eax  +
push hWnd  +
call ds:GetWindowRect  +
lea eax [ebp+var_78] +
push eax  +
mov ecx esi +
call sub_1020A96  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A497A  +
mov ecx [esi+0D4h] +
add ecx [esi+0CCh] +
add ecx [ebp+Rect.top] +
add ecx ebx +
cmp dword ptr [esi+140h] 0 +
mov [ebp+Rect.bottom] ecx +
jz loc_10A497A  +
mov eax [esi+0E0h] +
cdq   +
push 3  +
pop edi  +
idiv  edi +
add eax [esi+0E8h] +
add ecx eax +
mov [ebp+Rect.bottom] ecx +
lea eax [esi+0F0h] +
push eax  +
lea ebx [esi+50h] +
push ebx  +
lea edi [esi+4Ch] +
push edi  +
push dword ptr [esi+150h]  +
lea eax [ebp+Rect] +
push dword ptr [esi+140h]  +
lea ecx [esi+68h] +
push eax  +
push ecx  +
mov ecx esi +
call sub_10A2D9D  +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
mov ecx esi +
fstp  dword ptr [esi+54h] +
call sub_1020CA7  +
fld  ds:dbl_1041540 +
test eax eax +
jz loc_10A4A0B  +
mov edi [esi+0F4h] +
add edi [esi+0D4h] +
add edi [ebp+var_4] +
cmp dword ptr [esi+140h] 0 +
jz loc_10A49EA  +
mov eax [esi+0E0h] +
cdq   +
push 3  +
pop ecx  +
idiv  ecx +
add eax [esi+0E8h] +
add edi eax +
mov ebx [ebx] +
mov eax [esi+4Ch] +
sub eax ebx +
mov [ebp+var_4] eax +
fild  [ebp+var_4] +
fmul  [ebp+var_8] +
faddp st(1) st +
call _ftol2_sse  +
add eax ebx +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
jmp loc_10A4A62  +
mov edx [esi+1A0h] +
test edx edx +
jz loc_10A4A1D  +
mov ecx [esi+1ACh] +
jmp loc_10A4A23  +
mov ecx [esi+0F0h] +
mov eax [esi+0D8h] +
add eax [esi+0D0h] +
add eax ecx +
mov [ebp+var_10] eax +
test edx edx +
jz loc_10A4A47  +
lea eax [ebp+var_C] +
fstp  st +
push eax  +
mov ecx esi +
call sub_10A24C1  +
jmp loc_10A4A62  +
mov ebx [ebx] +
mov eax [edi] +
sub eax ebx +
mov [ebp+var_4] eax +
fild  [ebp+var_4] +
fmul  [ebp+var_8] +
faddp st(1) st +
call _ftol2_sse  +
add eax ebx +
mov [ebp+var_C] eax +
xor eax eax +
lea edi [ebp+rcSrc] +
stos   +
stos   +
stos   +
stos   +
mov eax [esi+20h] +
xor ebx ebx +
cmp eax ebx +
jz loc_10A4A97  +
mov edi [eax] +
lea eax [ebp+rcSrc] +
push eax  +
push dword ptr [esi+144h]  +
mov ecx esi +
push dword ptr [esi+11Ch]  +
call sub_10A308B  +
push eax  +
push dword ptr [esi+64h]  +
push dword ptr [esi+20h]  +
call dword ptr [edi+0Ch]  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+rc] +
push eax  +
call ds:CopyRect  +
push 2  +
lea eax [ebp+rc] +
push eax  +
push hWnd  +
push ebx  +
call ds:MapWindowPoints  +
push ebx  +
push [ebp+Rect.left]  +
lea eax [ebp+rc] +
push eax  +
call ds:OffsetRect  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A4B22  +
mov eax [esi+9Ch] +
sub eax [esi+98h] +
sub eax [ebp+var_10] +
add eax [ebp+rc.right] +
add eax [ebp+rc.left] +
cdq   +
sub eax edx +
mov ebx eax +
sar ebx 1 +
cmp ebx [ebp+Rect.left] +
jge loc_10A4AF5  +
mov ebx [ebp+Rect.left] +
mov ecx [ebp+var_10] +
mov eax [ebp+Rect.right] +
lea edx [ebx+ecx] +
cmp edx eax +
jle loc_10A4B06  +
sub eax ecx +
mov ebx eax +
cmp dword ptr [esi+164h] 3 +
jnz loc_10A4B1A  +
mov edi [ebp+rcSrc.top] +
sub edi [ebp+var_C] +
jmp loc_10A4BFE  +
mov edi [ebp+rcSrc.bottom] +
jmp loc_10A4BFE  +
cmp [esi+1A0h] ebx +
jz loc_10A4B99  +
mov eax [esi+164h] +
cmp eax 3 +
jz loc_10A4B81  +
cmp eax 1 +
jz loc_10A4B81  +
cmp eax ebx +
jnz loc_10A4B43  +
mov ebx [ebp+rc.right] +
jmp loc_10A4B49  +
mov ebx [ebp+rc.left] +
sub ebx [ebp+var_10] +
mov eax [esi+0A4h] +
sub eax [esi+0A0h] +
mov ecx [ebp+var_C] +
sub eax ecx +
add eax [ebp+rcSrc.bottom] +
add eax [ebp+rcSrc.top] +
cdq   +
sub eax edx +
mov edi eax +
sar edi 1 +
cmp edi [ebp+Rect.top] +
jge loc_10A4B6F  +
mov edi [ebp+Rect.top] +
mov eax [ebp+Rect.bottom] +
add ecx edi +
cmp ecx eax +
jle loc_10A4BFE  +
sub eax [ebp+var_C] +
jmp loc_10A4B95  +
mov ebx [ebp+rc.left] +
cmp eax 3 +
jz loc_10A4B0F  +
mov eax [esi+0D4h] +
push 0FFFFFFFDh  +
cdq   +
pop ecx  +
idiv  ecx +
mov edi eax +
jmp loc_10A4BFE  +
mov eax [esi+0A4h] +
sub eax [esi+0A0h] +
mov ecx [ebp+var_C] +
sub eax ecx +
add eax [ebp+rcSrc.bottom] +
add eax [ebp+rcSrc.top] +
cdq   +
sub eax edx +
mov edi eax +
sar edi 1 +
cmp edi [ebp+Rect.top] +
jge loc_10A4BBF  +
mov edi [ebp+Rect.top] +
mov eax [ebp+Rect.bottom] +
lea edx [edi+ecx] +
cmp edx eax +
jle loc_10A4BCD  +
sub eax ecx +
mov edi eax +
cmp dword ptr [esi+164h] 2 +
jnz loc_10A4BFB  +
push 0FFFFFFECh  +
push dword ptr [esi+30h]  +
call ds:GetWindowLongW  +
test eax 400000h +
jz loc_10A4BF3  +
mov eax [ebp+rc.left] +
mov ecx [ebp+var_10] +
lea ebx [ecx+eax] +
jmp loc_10A4BFE  +
mov ebx [ebp+rc.left] +
sub ebx [ebp+var_10] +
jmp loc_10A4BFE  +
mov ebx [ebp+rc.right] +
lea eax [esi+34h] +
push eax  +
lea eax [ebp+rc1] +
push eax  +
call ds:CopyRect  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A4C6A  +
sub ebx [ebp+Rect.left] +
cmp dword ptr [esi+164h] 3 +
mov [esi+34h] ebx +
jnz loc_10A4C64  +
mov eax [esi+0E0h] +
cdq   +
push 3  +
pop ecx  +
idiv  ecx +
add eax [esi+108h] +
add eax [esi+104h] +
add eax [esi+0E8h] +
add eax [esi+0DCh] +
add eax [esi+0D4h] +
add eax [esi+0CCh] +
add eax [esi+0A4h] +
sub eax [ebp+var_C] +
mov [esi+38h] eax +
jmp loc_10A4C9F  +
and dword ptr [esi+38h] 0 +
jmp loc_10A4C9F  +
xor eax eax +
cmp [esi+1A0h] eax +
jz loc_10A4C79  +
mov [esi+38h] eax +
jmp loc_10A4C9C  +
sub edi [ebp+Rect.top] +
mov [esi+38h] edi +
cmp [esi+164h] eax +
jz loc_10A4C9C  +
mov eax [esi+0D8h] +
add eax [esi+0D0h] +
add eax [esi+0C8h] +
sub eax [ebp+var_10] +
mov [esi+34h] eax +
lea edi [esi+34h] +
mov eax [edi] +
add eax [ebp+var_10] +
mov [esi+3Ch] eax +
mov eax [esi+38h] +
add eax [ebp+var_C] +
cmp dword ptr [esi+1A0h] 0 +
mov [esi+40h] eax +
jnz loc_10A4D99  +
lea eax [ebp+var_8] +
push eax  +
push 1Ch  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jz loc_10A4D99  +
mov eax [esi+28h] +
mov ebx ds:CopyRect +
add eax 8 +
push eax  +
lea eax [ebp+var_58] +
push eax  +
call ebx  +
push edi  +
lea eax [ebp+var_18] +
push eax  +
call ebx  +
fild  [ebp+var_8] +
fidiv  ds:nDenominator +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
fld  st +
fld1   +
fsubrp st(1) st +
fild  [ebp+var_18] +
fld  st(2) +
fmulp st(1) st +
fild  [ebp+var_58] +
fmul st st(2) +
faddp st(1) st +
fld  ds:dbl_1041540 +
fadd st(1) st +
fxch  st(1) +
call _ftol2_sse  +
fild  [ebp+var_14] +
fld  st(3) +
mov [edi] eax +
fmulp st(1) st +
fild  [ebp+var_54] +
fmul st st(3) +
faddp st(1) st +
fadd st st(1) +
call _ftol2_sse  +
fild  [ebp+var_10] +
fld  st(3) +
mov [esi+38h] eax +
fmulp st(1) st +
fild  [ebp+var_50] +
fmul st st(3) +
faddp st(1) st +
fadd st st(1) +
call _ftol2_sse  +
fild  [ebp+var_C] +
mov [esi+3Ch] eax +
fmulp st(3) st +
fild  [ebp+var_4C] +
fmulp st(2) st +
fxch  st(2) +
faddp st(1) st +
faddp st(1) st +
call _ftol2_sse  +
mov [esi+40h] eax +
lea eax [esi+0F0h] +
push eax  +
lea eax [esi+50h] +
push eax  +
lea eax [esi+4Ch] +
push eax  +
push dword ptr [esi+150h]  +
lea eax [esi+68h] +
push dword ptr [esi+140h]  +
mov ecx esi +
push edi  +
push eax  +
call sub_10A2D9D  +
fstp  dword ptr [esi+54h] +
or dword ptr [esi+44h] 2 +
push edi  +
lea eax [ebp+rc1] +
push eax  +
call ds:EqualRect  +
neg eax  +
sbb eax eax +
inc eax  +
jz loc_10A4DAF  +
or dword ptr [esi+44h] 3 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
mov esi [ebp+8] +
push eax  +
mov ecx esi +
call sub_10A25DA  +
mov ebx eax +
test ebx ebx +
jl loc_10A4EC1  +
mov eax [edi] +
push edi  +
call dword ptr [eax+90h]  +
mov edi eax +
test edi edi +
jz loc_10A4E3A  +
mov eax [edi] +
push edi  +
call dword ptr [eax+74h]  +
cmp eax 1 +
jnz loc_10A4E3A  +
lea eax [esi+10Ch] +
mov ecx [eax] +
lea edx [ecx+1] +
mov [eax] edx +
lea eax [ebp+0Ch] +
push eax  +
lea eax [esi+18h] +
push eax  +
push 1  +
push ecx  +
push edi  +
push dword ptr [esi+30h]  +
call sub_10A8A68  +
test eax eax +
jl loc_10A4E3A  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push ebx  +
call sub_10A3394  +
test eax eax +
jnz loc_10A4EC1  +
lea eax [ebp+0Ch] +
push eax  +
call sub_1002BEE  +
mov ecx esi +
call sub_10A31E0  +
test eax eax +
jz loc_10A4E5A  +
push 4  +
mov ecx esi +
call sub_10A1920  +
mov eax [esi] +
push 0  +
push 1  +
push esi  +
call dword ptr [eax+54h]  +
jmp loc_10A4EC1  +
mov eax [esi] +
push 0  +
push esi  +
call dword ptr [eax+28h]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A4EC1  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov edi [eax+ebx*4] +
mov eax [edi] +
push 1Eh  +
push edi  +
call dword ptr [eax+74h]  +
test eax eax +
jz loc_10A4EB7  +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
push 0FFFFFFF6h  +
pop ecx  +
cmp eax ebx +
jnz loc_10A4E9D  +
mov [esi+118h] ecx +
lea eax [esi+120h] +
cmp [eax] ebx +
jnz loc_10A4EA9  +
mov [eax] ecx +
lea eax [esi+114h] +
cmp [eax] ebx +
jnz loc_10A4EC1  +
mov [eax] ecx +
jmp loc_10A4EC1  +
push 1  +
push ebx  +
mov ecx esi +
call sub_10A331C  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+4Ch]  +
mov esi [ebp+8] +
push eax  +
mov ecx esi +
call sub_10A25DA  +
test eax eax +
jl loc_10A4F15  +
push eax  +
push dword ptr [esi+68h]  +
call ds:off_10065B4  +
lea ecx [ebp+0Ch] +
push ecx  +
push eax  +
mov ecx esi +
call sub_10A3260  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A4F15  +
mov eax [esi] +
or dword ptr [esi+44h] 2 +
push esi  +
call dword ptr [eax+4Ch]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+8] +
lea eax [esi+34h] +
push eax  +
lea eax [ebp-10h] +
push eax  +
call ds:CopyRect  +
mov ecx esi +
call sub_10A48DA  +
test eax eax +
jnz loc_10A4F49  +
cmp [esi+44h] eax +
jz loc_10A4F6B  +
lea eax [ebp-10h] +
push eax  +
call ds:IsRectEmpty  +
test eax eax +
jnz loc_10A4F65  +
push eax  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi+30h]  +
call ds:InvalidateRect  +
mov eax [esi] +
push esi  +
call dword ptr [eax+50h]  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+68h] 0 +
jz loc_10A4FE4  +
lea eax [ebp+8] +
push eax  +
push 1Ah  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10A4FB1  +
lea eax [ebp+8] +
push eax  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10A4FB1  +
push eax  +
push eax  +
mov ecx esi +
call sub_10A414E  +
jmp loc_10A4FE4  +
push 0Fh  +
call ds:GetSystemMetrics  +
mov ecx 0FFh +
push ecx  +
sub ecx [ebp+8] +
push ecx  +
push eax  +
call ds:MulDiv  +
push 1  +
push eax  +
mov ecx esi +
call sub_10A414E  +
push 2  +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [esi+30h]  +
call ds:SetLayeredWindowAttributes  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
sub esp 24h +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
cmp eax ebx +
jz loc_10A500C  +
mov eax [eax] +
mov [ebp+var_4] eax +
jmp loc_10A500F  +
mov [ebp+var_4] ebx +
cmp [ebp+var_4] ebx +
jle loc_10A50B1  +
push edi  +
cmp dword ptr [esi+1A0h] 0 +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov eax [eax+4] +
mov edi [eax+ebx*4] +
jz loc_10A5039  +
push edi  +
mov ecx esi +
call sub_10A1152  +
test eax eax +
jz loc_10A50A6  +
fld  [ebp+arg_C] +
lea eax [ebp+rcSrc] +
push eax  +
push 0  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push ecx  +
fstp  [esp+48h+var_48] +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+nNumber]  +
push ebx  +
push [ebp+arg_0]  +
call sub_10A3A08  +
test eax eax +
jz loc_10A50A6  +
cmp dword ptr [esi+1A0h] 0 +
jnz loc_10A508F  +
lea eax [ebp+rcDst] +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
push edi  +
mov ecx esi +
call sub_10A292B  +
test eax eax +
jge loc_10A508F  +
lea eax [ebp+rcSrc] +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
call ds:CopyRect  +
push [ebp+arg_1C]  +
mov eax [edi] +
push dword ptr [esi+38h]  +
lea ecx [ebp+rcDst] +
push dword ptr [esi+34h]  +
push ecx  +
lea ecx [ebp+rcSrc] +
push ecx  +
push edi  +
call dword ptr [eax+1Ch]  +
inc ebx  +
cmp ebx [ebp+var_4] +
jl loc_10A5019  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi ecx +
push dword ptr [esi+30h]  +
call ds:IsWindowVisible  +
test eax eax +
jz loc_10A5173  +
push edi  +
mov edi [ebp+arg_0] +
cmp edi 0FFFFFFF5h +
jnz loc_10A50E9  +
lea eax [ebp+Rect] +
push eax  +
push 1  +
jmp loc_10A50F4  +
cmp edi 0FFFFFFF4h +
jnz loc_10A510C  +
lea eax [ebp+Rect] +
push eax  +
push 0  +
mov ecx esi +
call sub_10A4079  +
push 0  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+30h]  +
call ds:InvalidateRect  +
jmp loc_10A5172  +
lea edx [ebp+Rect] +
push edx  +
push 1  +
lea eax [esi+10h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jz loc_10A5172  +
push dword ptr [esi+38h]  +
lea eax [ebp+Rect] +
push dword ptr [esi+34h]  +
push eax  +
call ds:OffsetRect  +
mov eax [esi+0D0h] +
sub eax [esi+0A8h] +
push 0  +
sub eax [esi+98h] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+Rect] +
push eax  +
call ds:InflateRect  +
push 0  +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [esi+30h]  +
call ds:InvalidateRect  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
mov esi ecx +
mov ecx [esi] +
lea eax [ebp+nNumber] +
push eax  +
push dword ptr [esi+1Ch]  +
lea eax [ecx+34h] +
push dword ptr [esi+18h]  +
lea edi [esi+4] +
push eax  +
push edi  +
call sub_10A2D9D  +
fstp  [ebp+var_4] +
push [ebp+arg_0]  +
fld  [ebp+var_4] +
lea eax [ebp+var_14] +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push eax  +
push ecx  +
mov ecx [esi] +
fstp  [esp+30h+var_30] +
push [ebp+var_8]  +
push [ebp+nNumber]  +
push edi  +
call sub_10A4FEE  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+6Ch] 0 +
mov dword ptr [esi] offset off_1003B70 +
mov dword ptr [esi+4] offset off_10120E0 +
mov dword ptr [esi+8] offset off_1029DC0 +
mov dword ptr [esi+10h] offset off_102CA58 +
mov dword ptr [esi+14h] offset off_102CA2C +
mov dword ptr [esi+18h] offset off_101E668 +
mov dword ptr [esi+1Ch] offset off_1024070 +
jz loc_10A521B  +
call ds:BufferedPaintUnInit  +
mov ecx esi +
call sub_1021347  +
lea eax [esi+64h] +
push eax  +
call sub_1002BEE  +
lea ecx [esi+68h] +
call sub_10082DC  +
mov dword ptr [esi+8] offset off_1002788 +
pop esi  +
retn   +
***
sub dword ptr [esp+4] 10h +
jmp loc_102BD5E  +
***
sub dword ptr [esp+4] 14h +
jmp loc_102BD5E  +
***
sub dword ptr [esp+4] 18h +
jmp loc_102BD5E  +
***
sub ecx 8 +
jmp loc_10A5C32  +
***
sub dword ptr [esp+4] 1Ch +
jmp loc_102BD5E  +
***
sub dword ptr [esp+4] 8 +
jmp loc_1003BF1  +
***
sub dword ptr [esp+4] 8 +
jmp loc_102BD5E  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10A39A1  +
push 0  +
push 0  +
push dword ptr [esi+30h]  +
call ds:SetWindowLongW  +
and dword ptr [esi+30h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
cmp [ebp+arg_0] ebx +
jz loc_10A52EC  +
lea eax [esi+1A8h] +
mov ecx [eax] +
cmp ecx ebx +
jle loc_10A5341  +
dec ecx  +
mov [eax] ecx +
jmp loc_10A5312  +
mov edi [esi+1A8h] +
push ebx  +
call sub_10A24C1  +
mov ecx [esi+68h] +
add eax edi +
cmp ecx ebx +
jz loc_10A5305  +
mov ecx [ecx] +
jmp loc_10A5307  +
xor ecx ecx +
cmp eax ecx +
jge loc_10A5341  +
inc edi  +
mov [esi+1A8h] edi +
or dword ptr [esi+44h] 2 +
cmp [esi+150h] ebx +
jz loc_10A532D  +
mov ecx esi +
call sub_10A48DA  +
mov eax [esi] +
push esi  +
call dword ptr [eax+50h]  +
jmp loc_10A5341  +
push ebx  +
push ebx  +
push dword ptr [esi+30h]  +
call ds:InvalidateRect  +
push dword ptr [esi+30h]  +
call ds:UpdateWindow  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edx [ebp+arg_0] +
lea eax [esi+10h] +
mov ecx [eax] +
push edx  +
push eax  +
mov dword ptr [esi+128h] 1 +
call dword ptr [ecx+34h]  +
mov edi eax +
mov [esi+120h] edi +
mov ecx esi +
cmp edi 0FFFFFFF5h +
jnz loc_10A538B  +
push 1  +
call sub_10A52CA  +
push dword ptr [esi+120h]  +
jmp loc_10A539F  +
cmp edi 0FFFFFFF4h +
jnz loc_10A5394  +
push 0  +
jmp loc_10A537E  +
push edi  +
call sub_10A112B  +
test eax eax +
jz loc_10A53A6  +
push edi  +
mov ecx esi +
call sub_10A50BC  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
mov [ebp+pt.x] eax +
mov eax [ebp+arg_4] +
lea ecx [ebp+pt] +
lea edi [esi+10h] +
push ecx  +
mov [ebp+pt.y] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
push [ebp+pt.y]  +
lea eax [esi+130h] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jnz loc_10A55DA  +
push ebx  +
xor ebx ebx +
cmp [esi+160h] ebx +
jnz loc_10A540B  +
cmp [esi+16Ch] ebx +
jnz loc_10A540B  +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+40h]  +
mov ecx esi +
call sub_10A1360  +
push dword ptr [esi+30h]  +
call sub_109A95E  +
xor ecx ecx +
cmp [esi+48h] ebx +
setnle cl  +
cmp [ebp+arg_8] ebx +
jnz loc_10A5437  +
cmp eax ebx +
jnz loc_10A5437  +
cmp [esi+1A0h] ebx +
jz loc_10A55D9  +
cmp ecx ebx +
jnz loc_10A55D9  +
lea ebx [esi+118h] +
cmp dword ptr [ebx] 0FFFFFFF6h +
jz loc_10A545E  +
mov eax [edi] +
push edi  +
call dword ptr [eax+2Ch]  +
push eax  +
mov ecx esi +
call sub_10A50BC  +
mov dword ptr [ebx] 0FFFFFFF6h +
mov eax [edi] +
and [ebp+arg_8] 0 +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+34h]  +
mov ebx eax +
push ebx  +
mov ecx esi +
call sub_10A112B  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10A549F  +
mov eax [edi] +
lea ecx [ebp+rc] +
push ecx  +
push ebx  +
push edi  +
call dword ptr [eax+20h]  +
test eax eax +
jz loc_10A549F  +
push [ebp+arg_4]  +
lea eax [ebp+rc] +
push [ebp+arg_0]  +
push eax  +
call ds:PtInRect  +
mov [ebp+arg_8] eax +
cmp ebx 0FFFFFFF5h +
jnz loc_10A54A9  +
xor ecx ecx +
inc ecx  +
jmp loc_10A54B1  +
cmp ebx 0FFFFFFF4h +
jnz loc_10A54D4  +
push 2  +
pop ecx  +
lea eax [esi+1B8h] +
cmp [eax] ecx +
jz loc_10A54E9  +
push 0  +
push 0FAh  +
push 7D7h  +
push dword ptr [esi+30h]  +
mov [eax] ecx +
call ds:SetTimer  +
jmp loc_10A54E9  +
push 7D7h  +
push dword ptr [esi+30h]  +
call ds:KillTimer  +
and dword ptr [esi+1B8h] 0 +
mov eax [esi+11Ch] +
cmp ebx eax +
jnz loc_10A5515  +
xor ecx ecx +
cmp [esi+120h] ebx +
setz cl  +
cmp [esi+128h] ecx +
jnz loc_10A5515  +
mov ecx [ebp+arg_8] +
cmp ecx [esi+12Ch] +
jz loc_10A55BC  +
cmp eax 0FFFFFFF6h +
jz loc_10A5522  +
push eax  +
mov ecx esi +
call sub_10A50BC  +
mov edi [esi+11Ch] +
cmp edi ebx +
jz loc_10A5560  +
push edi  +
mov ecx esi +
call sub_10A112B  +
test eax eax +
jz loc_10A5549  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov edi [eax+edi*4] +
mov eax [edi] +
push 20h  +
push edi  +
call dword ptr [eax+74h]  +
cmp [ebp+var_4] 0 +
jz loc_10A5560  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov eax [eax+ebx*4] +
mov ecx [eax] +
push 1Fh  +
push eax  +
call dword ptr [ecx+74h]  +
mov eax [esi+120h] +
mov [esi+11Ch] ebx +
cmp eax ebx +
jnz loc_10A5581  +
push eax  +
mov ecx esi +
call sub_10A112B  +
test eax eax +
jz loc_10A5581  +
xor eax eax +
inc eax  +
jmp loc_10A5583  +
xor eax eax +
mov [esi+128h] eax +
mov eax [ebp+arg_8] +
mov [esi+12Ch] eax +
cmp ebx 0FFFFFFF6h +
jz loc_10A559F  +
push ebx  +
mov ecx esi +
call sub_10A50BC  +
mov eax [esi+20h] +
test eax eax +
jz loc_10A55BC  +
push dword ptr [esi+11Ch]  +
mov edi [eax] +
mov ecx esi +
call sub_10A308B  +
push eax  +
push dword ptr [esi+20h]  +
call dword ptr [edi+24h]  +
xor eax eax +
cmp [esi+16Ch] eax +
jnz loc_10A55D9  +
cmp [ebp+arg_8] eax +
jnz loc_10A55D9  +
push eax  +
push dword ptr [esi+11Ch]  +
mov ecx esi +
call sub_10A3F35  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 7D6h +
jz loc_10A560F  +
dec eax  +
jnz loc_10A561C  +
mov eax [ecx+1B8h] +
dec eax  +
jz loc_10A5606  +
dec eax  +
jnz loc_10A561C  +
push eax  +
jmp loc_10A5608  +
push 1  +
call sub_10A52CA  +
jmp loc_10A561C  +
push 1  +
push dword ptr [ecx+124h]  +
call sub_10A3F35  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+Rect] +
push eax  +
push esi  +
mov edi ecx +
call sub_10A4079  +
xor eax eax +
test esi esi +
setnz al  +
add eax 0FFFFFFF4h +
cmp [edi+120h] eax +
jnz loc_10A5661  +
xor ebx ebx +
test esi esi +
setz bl  +
lea ebx ds:3[ebx*4] +
jmp loc_10A5682  +
cmp [edi+11Ch] eax +
jnz loc_10A5674  +
mov ebx esi +
neg ebx  +
sbb ebx ebx +
add ebx 12h +
jmp loc_10A5682  +
xor ebx ebx +
test esi esi +
setz bl  +
lea ebx ds:1[ebx*4] +
mov eax [edi+5Ch] +
test eax eax +
jz loc_10A56B2  +
mov esi ds:DrawThemeBackground +
push 0  +
lea ecx [ebp+Rect] +
push ecx  +
push 4  +
push 3  +
push dword ptr [ebp+String]  +
push eax  +
call esi  +
push 0  +
lea eax [ebp+Rect] +
push eax  +
push ebx  +
push 0Dh  +
push dword ptr [ebp+String]  +
push dword ptr [edi+5Ch]  +
call esi  +
jmp loc_10A5722  +
push dword ptr [edi+1BCh]  +
mov ebx dword ptr [ebp+String] +
push ebx  +
call ds:SelectObject  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_10A5722  +
neg esi  +
sbb esi esi +
add esi 36h +
movzx eax si +
mov esi ds:SetBkMode +
push 1  +
push ebx  +
mov dword ptr [ebp+String] eax +
call esi  +
push 12h  +
mov [ebp+var_4] eax +
call ds:GetSysColor  +
mov edi ds:SetTextColor +
push eax  +
push ebx  +
call edi  +
push 25h  +
mov [ebp+arg_0] eax +
lea eax [ebp+Rect] +
push eax  +
push 1  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call ds:DrawTextW  +
push [ebp+arg_0]  +
push ebx  +
call edi  +
push [ebp+var_4]  +
push ebx  +
call esi  +
push [ebp+var_8]  +
push ebx  +
call ds:SelectObject  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
push dword ptr [esi+50h]  +
call ds:off_100407C  +
push eax  +
lea ecx [esi-18h] +
call sub_10A50BC  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+1A0h] 0 +
jz loc_10A5803  +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
push eax  +
mov ecx esi +
mov [ebp+var_4] eax +
call sub_10A112B  +
test eax eax +
jz loc_10A5803  +
push edi  +
mov ecx [esi+1A0h] +
test ecx ecx +
jz loc_10A5797  +
mov eax [esi+1A8h] +
jmp loc_10A5799  +
xor eax eax +
cmp [ebp+var_4] eax +
jl loc_10A57BC  +
test ecx ecx +
jz loc_10A57AA  +
mov edi [esi+1A8h] +
jmp loc_10A57AC  +
xor edi edi +
push 0  +
mov ecx esi +
call sub_10A24C1  +
add eax edi +
cmp [ebp+var_4] eax +
jl loc_10A5802  +
mov ecx [esi+1A0h] +
test ecx ecx +
jz loc_10A57CE  +
mov eax [esi+1A8h] +
jmp loc_10A57D0  +
xor eax eax +
cmp [ebp+var_4] eax +
jge loc_10A57D9  +
push 1  +
jmp loc_10A57F9  +
test ecx ecx +
jz loc_10A57E5  +
mov edi [esi+1A8h] +
jmp loc_10A57E7  +
xor edi edi +
push 0  +
mov ecx esi +
call sub_10A24C1  +
add eax edi +
cmp [ebp+var_4] eax +
jl loc_10A5785  +
push 0  +
mov ecx esi +
call sub_10A52CA  +
jmp loc_10A5785  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ebx [esi+11Ch] +
push edi  +
test eax eax +
jz loc_10A5833  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
jmp loc_10A5836  +
or eax 0FFFFFFFFh +
mov [esi+11Ch] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10A584B  +
mov dword ptr [esi+11Ch] 0FFFFFFF6h +
mov edi [esi+11Ch] +
cmp ebx edi +
jz loc_10A58CF  +
push edi  +
mov ecx esi +
call sub_10A112B  +
test eax eax +
jz loc_10A5872  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov edi [eax+edi*4] +
mov eax [edi] +
push 1Fh  +
push edi  +
call dword ptr [eax+74h]  +
push ebx  +
mov ecx esi +
call sub_10A112B  +
test eax eax +
jz loc_10A588F  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov eax [eax+ebx*4] +
mov ecx [eax] +
push 20h  +
push eax  +
call dword ptr [ecx+74h]  +
push 0  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jz loc_10A58B0  +
push 0  +
push 1Bh  +
mov ecx esi +
call sub_10A1589  +
mov ecx esi +
call sub_10A455A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A58CF  +
push ebx  +
mov ecx esi +
call sub_10A50BC  +
push dword ptr [esi+11Ch]  +
mov ecx esi +
call sub_10A50BC  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [esi+114h] +
test eax eax +
jz loc_10A5902  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
jmp loc_10A5905  +
or eax 0FFFFFFFFh +
mov [esi+114h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10A591A  +
mov dword ptr [esi+114h] 0FFFFFFF6h +
cmp edi [esi+114h] +
jz loc_10A5941  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A5941  +
push edi  +
mov ecx esi +
call sub_10A50BC  +
push dword ptr [esi+114h]  +
mov ecx esi +
call sub_10A50BC  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
mov eax [edi+68h] +
mov ebx 80004005h +
test eax eax +
jz loc_10A59A0  +
mov ecx eax +
test ecx ecx +
jz loc_10A596B  +
mov ecx [ecx] +
jmp loc_10A596D  +
xor ecx ecx +
push esi  +
mov esi [ebp+arg_4] +
cmp esi ecx +
jge loc_10A599F  +
test esi esi +
jl loc_10A599F  +
cmp [ebp+arg_0] 0 +
jz loc_10A599F  +
push [ebp+arg_8]  +
mov eax [eax+4] +
mov eax [eax+esi*4] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_10A599F  +
push esi  +
mov ecx edi +
call sub_10A50BC  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_10A59D3  +
push dword ptr [esi+8]  +
mov ecx [esi] +
push dword ptr [esi+4]  +
push [ebp+arg_C]  +
call sub_10A594C  +
push 1  +
mov ecx esi +
call sub_10A16A8  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp-8] +
push eax  +
call ds:GetCursorPos  +
test eax eax +
jz locret_10A5A57  +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+130h] +
push eax  +
call ds:SetRectEmpty  +
lea edx [ebp-8] +
lea eax [esi+10h] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov ecx [ebp-4] +
mov eax [ebp-8] +
add ecx [esi+38h] +
lea edi [esi+34h] +
add eax [edi] +
push ecx  +
push eax  +
push edi  +
mov [ebp-8] eax +
mov [ebp-4] ecx +
call ds:PtInRect  +
test eax eax +
jz loc_10A5A55  +
mov ecx [ebp-4] +
sub ecx [esi+38h] +
mov eax [ebp-8] +
sub eax [edi] +
push 1  +
push ecx  +
mov [ebp-4] ecx +
push eax  +
mov ecx esi +
mov [ebp-8] eax +
call sub_10A53B1  +
mov ecx esi +
call sub_10A3424  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jl loc_10A5A9D  +
mov eax [esi+68h] +
test eax eax +
jz loc_10A5A7A  +
mov eax [eax] +
jmp loc_10A5A7C  +
xor eax eax +
cmp ecx eax +
jge loc_10A5A9D  +
mov eax [esi+68h] +
mov eax [eax+4] +
push edi  +
mov edi [eax+ecx*4] +
push ecx  +
mov ecx esi +
call sub_10A50BC  +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
or dword ptr [esi+44h] 2 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [esi+1Ch]  +
call sub_107D1ED  +
mov eax [ebp+10h] +
mov [ebp-8] eax +
mov eax [ebp+14h] +
lea ecx [ebp-8] +
lea edi [esi-4] +
push ecx  +
mov [ebp-4] eax +
mov eax [edi] +
push edi  +
call dword ptr [eax+18h]  +
push 0  +
push dword ptr [ebp-4]  +
lea ebx [esi-14h] +
push dword ptr [ebp-8]  +
mov ecx ebx +
call sub_10A53B1  +
mov eax [edi] +
lea ecx [ebp-8] +
push ecx  +
push edi  +
call dword ptr [eax+34h]  +
mov ecx [esi+15Ch] +
cmp eax ecx +
jz loc_10A5B1F  +
mov [esi+15Ch] eax +
call ds:GetTickCount  +
mov [esi+160h] eax +
mov dword ptr [esi+164h] 3E8h +
jmp loc_10A5B54  +
push ecx  +
mov ecx ebx +
call sub_10A112B  +
test eax eax +
jz loc_10A5B54  +
lea edi [esi+164h] +
call ds:GetTickCount  +
sub eax [esi+160h] +
cmp eax [edi] +
jb loc_10A5B54  +
push dword ptr [esi+15Ch]  +
mov ecx ebx +
call sub_10A3025  +
add dword ptr [edi] 2710h +
mov eax [ebp+18h] +
and dword ptr [eax] 0 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
xor ecx ecx +
mov [edi] esi +
lea ebx [edi+4] +
mov [ebx] ecx +
mov eax [esi+68h] +
cmp eax ecx +
jz loc_10A5B8E  +
mov eax [eax] +
mov [ebp+arg_0] eax +
jmp loc_10A5B91  +
mov [ebp+arg_0] ecx +
cmp [ebp+arg_0] ecx +
jle loc_10A5BFE  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_100801C  +
test eax eax +
jz loc_10A5BFE  +
and [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
jle loc_10A5BDE  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov ecx [ebp+var_4] +
mov eax [eax+ecx*4] +
push eax  +
mov ecx ebx +
mov [ebp+var_8] eax +
call sub_10A19F1  +
cmp eax 0FFFFFFFFh +
jz loc_10A5BD3  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jl loc_10A5BAE  +
lea eax [esi+34h] +
push eax  +
lea eax [edi+8] +
push eax  +
call ds:CopyRect  +
mov eax [esi+140h] +
mov [edi+18h] eax +
mov eax [esi+150h] +
mov [edi+1Ch] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
lea esi [ecx+4] +
cmp dword ptr [esi] 0 +
jz loc_10A5C25  +
push 0  +
push offset loc_1040149  +
mov ecx esi +
call sub_100831C  +
mov ecx esi +
pop esi  +
jmp sub_10082DC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10A51DA  +
test byte ptr [ebp+8] 1 +
jz loc_10A5C4C  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
push ebx  +
push esi  +
mov ebx ecx +
xor esi esi +
push edi  +
lea ecx [ebp+var_30] +
mov [ebp+var_10] esi +
mov [ebp+var_38] esi +
call sub_109A8DE  +
push esi  +
sub esp 10h +
mov edi esp +
push [ebp+String]  +
lea esi [ebp+arg_4] +
movs   +
movs   +
movs   +
lea ecx [ebp+var_30] +
movs   +
call sub_109A90E  +
mov [ebp+String] eax +
mov eax [ebx+68h] +
test eax eax +
jz loc_10A5C9E  +
mov eax [eax] +
mov [ebp+var_14] eax +
jmp loc_10A5CA2  +
and [ebp+var_14] 0 +
xor esi esi +
cmp [ebp+String] esi +
jz loc_10A619C  +
mov edi ds:DrawThemeBackground +
cmp [ebx+158h] esi +
jz loc_10A5CD0  +
mov eax [ebx+5Ch] +
cmp eax esi +
jz loc_10A5CD0  +
push esi  +
lea ecx [ebx+34h] +
push ecx  +
push esi  +
push 2  +
push [ebp+String]  +
push eax  +
call edi  +
cmp [ebx+148h] esi +
jz loc_10A5D02  +
lea eax [ebp+var_7C] +
push eax  +
lea esi [ebx+34h] +
push esi  +
push 0  +
push 2  +
push [ebp+String]  +
push dword ptr [ebx+5Ch]  +
call ds:GetThemeBackgroundContentRect  +
push 0  +
lea eax [ebp+var_7C] +
push eax  +
push 0  +
push 1  +
push [ebp+String]  +
push dword ptr [ebx+5Ch]  +
jmp loc_10A5D17  +
mov eax [ebx+5Ch] +
cmp eax esi +
lea esi [ebx+34h] +
jz loc_10A5D1B  +
push 0  +
push esi  +
push 0  +
push 1  +
push [ebp+String]  +
push eax  +
call edi  +
jmp loc_10A5D27  +
push 10h  +
push esi  +
push [ebp+String]  +
call ds:FillRect  +
lea eax [ebp+var_40] +
push eax  +
push [ebp+String]  +
call ds:GetViewportOrgEx  +
mov eax [ebx+38h] +
add eax [ebp-3Ch] +
xor edi edi +
push edi  +
push eax  +
mov eax [esi] +
add eax [ebp+var_40] +
push eax  +
push [ebp+String]  +
call ds:SetViewportOrgEx  +
lea eax [ebp+nNumerator] +
push eax  +
push 1Ch  +
mov ecx ebx +
mov byte ptr [ebp+var_18] 0FFh +
call sub_1046141  +
test eax eax +
jz loc_10A5D79  +
push ds:nDenominator  +
push [ebp+nNumerator]  +
push 0FFh  +
call ds:MulDiv  +
mov byte ptr [ebp+var_18] al +
mov ecx ebx +
call sub_10A411F  +
test eax eax +
jz loc_10A5D9B  +
push [ebp+String]  +
mov ecx ebx +
push 1  +
call sub_10A5625  +
push [ebp+String]  +
mov ecx ebx +
push edi  +
call sub_10A5625  +
mov eax [ebp+var_14] +
mov [ebp+var_1C] eax +
cmp [ebx+1A0h] edi +
jz loc_10A5DE1  +
mov esi [ebx+1A8h] +
push edi  +
mov ecx ebx +
call sub_10A24C1  +
mov ecx eax +
mov eax [ebp+var_14] +
add ecx esi +
cmp ecx eax +
jge loc_10A5DDE  +
cmp [ebx+1A0h] edi +
jz loc_10A5DD2  +
mov esi [ebx+1A8h] +
jmp loc_10A5DD4  +
xor esi esi +
push edi  +
mov ecx ebx +
call sub_10A24C1  +
add eax esi +
mov [ebp+var_1C] eax +
cmp [ebp+var_14] edi +
mov [ebp+var_8] edi +
jle loc_10A60ED  +
mov eax [ebx+68h] +
mov ecx [eax+4] +
mov eax [ebp+var_8] +
mov esi [ecx+eax*4] +
xor ecx ecx +
mov [ebp+var_2C] esi +
cmp [ebx+1A0h] ecx +
jz loc_10A5E0C  +
mov ecx [ebx+1A8h] +
cmp eax ecx +
jl loc_10A60C7  +
cmp eax [ebp+var_1C] +
jge loc_10A60C7  +
push esi  +
mov ecx ebx +
call sub_10A1152  +
test eax eax +
jz loc_10A5E31  +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+38h]  +
lea ecx [ebp+rcSrc] +
push ecx  +
push 1  +
push [ebp+var_8]  +
lea edi [ebx+10h] +
mov eax [edi] +
push edi  +
call dword ptr [eax+1Ch]  +
xor eax eax +
lea ecx [ebp+nNumerator] +
inc eax  +
push ecx  +
push 1Fh  +
mov [ebp+var_34] eax +
mov [ebp+var_20] eax +
mov eax [esi] +
push esi  +
mov byte ptr [ebp+var_24] 0 +
mov byte ptr [ebp+var_28] 0 +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A5E74  +
mov eax [esi] +
lea ecx [ebp+nNumerator] +
push ecx  +
push 20h  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jz loc_10A5E7E  +
mov al byte ptr [ebp+nNumerator] +
and [ebp+var_34] 0 +
mov byte ptr [ebp+var_28] al +
mov eax [esi] +
lea ecx [ebp+nNumerator] +
push ecx  +
push 21h  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A5E9E  +
mov eax [esi] +
lea ecx [ebp+nNumerator] +
push ecx  +
push 22h  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jz loc_10A5EA8  +
mov al byte ptr [ebp+nNumerator] +
and [ebp+var_20] 0 +
mov byte ptr [ebp+var_24] al +
mov eax [esi] +
or [ebp+var_4] 0FFFFFFFFh +
push esi  +
call dword ptr [eax+30h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
test eax 20000h +
jz loc_10A5ECE  +
cmp [ebp+var_20] 0 +
jz loc_10A5ECE  +
mov [ebp+var_4] 5 +
jmp loc_10A5F04  +
mov esi [ebp+var_8] +
cmp esi [ebx+114h] +
jnz loc_10A5EE2  +
mov [ebp+var_4] 1 +
jmp loc_10A5F04  +
mov eax [edi] +
push edi  +
call dword ptr [eax+2Ch]  +
cmp esi eax +
jz loc_10A5EFD  +
cmp esi [ebx+11Ch] +
jnz loc_10A5F04  +
cmp dword ptr [ebx+128h] 0 +
jz loc_10A5F04  +
mov [ebp+var_4] 3 +
cmp dword ptr [ebx+1A0h] 0 +
lea esi [ebp+rcSrc] +
lea edi [ebp+rcDst] +
movs   +
movs   +
movs   +
movs   +
jz loc_10A5F3B  +
mov eax [ebx+0D0h] +
sub eax [ebx+0A8h] +
push 0  +
sub eax [ebx+98h] +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
call ds:InflateRect  +
mov eax [ebx+5Ch] +
test eax eax +
jz loc_10A5FDC  +
cmp [ebp+var_4] 0FFFFFFFFh +
jz loc_10A5F63  +
push [ebp+var_18]  +
lea ecx [ebp+rcDst] +
push 0  +
push ecx  +
push [ebp+var_4]  +
push 3  +
push [ebp+String]  +
push eax  +
call sub_100445D  +
mov eax [ebp+var_8] +
cmp eax [ebx+11Ch] +
jnz loc_10A5F98  +
cmp [ebp+var_34] 0 +
jz loc_10A5F98  +
cmp [ebp+var_4] 5 +
jz loc_10A5F98  +
cmp [ebp+var_20] 0 +
jz loc_10A5F98  +
push [ebp+var_18]  +
lea eax [ebp+rcDst] +
push 0  +
push eax  +
push 4  +
push 3  +
push [ebp+String]  +
push dword ptr [ebx+5Ch]  +
call sub_100445D  +
cmp byte ptr [ebp+var_24] 0 +
jbe loc_10A5FAB  +
push [ebp+var_24]  +
lea eax [ebp+rcDst] +
push 0  +
push eax  +
push 5  +
jmp loc_10A5FCA  +
cmp byte ptr [ebp+var_28] 0 +
jbe loc_10A6066  +
cmp [ebp+var_4] 5 +
jz loc_10A6066  +
push [ebp+var_28]  +
lea eax [ebp+rcDst] +
push 0  +
push eax  +
push 4  +
push 3  +
push [ebp+String]  +
push dword ptr [ebx+5Ch]  +
call sub_100445D  +
jmp loc_10A6066  +
cmp [ebp+var_4] 5 +
jnz loc_10A5FF8  +
push 0Dh  +
call ds:GetSysColorBrush  +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
push [ebp+String]  +
call ds:FillRect  +
cmp [ebp+var_4] 3 +
jz loc_10A6009  +
mov eax [ebp+var_8] +
cmp eax [ebx+11Ch] +
jnz loc_10A6066  +
push [ebp+String]  +
mov [ebp+var_4C] 1 +
call ds:GetBkColor  +
mov esi ds:GetSysColor +
push 10h  +
mov edi eax +
call esi  +
cmp edi eax +
jnz loc_10A6036  +
push 14h  +
call esi  +
push 12h  +
mov [ebp+var_48] eax +
call esi  +
jmp loc_10A603E  +
mov eax 0FF000000h +
mov [ebp+var_48] eax +
mov [ebp+var_44] eax +
lea eax [ebp+var_4C] +
push eax  +
xor eax eax +
cmp [ebx+128h] eax +
push 200Fh  +
setz al  +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp+rcDst] +
push eax  +
push [ebp+String]  +
call sub_107A835  +
cmp dword ptr [ebx+140h] 0 +
mov esi [ebp+var_2C] +
jz loc_10A60BA  +
mov eax [esi] +
push 0  +
push 1Eh  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A60BA  +
mov eax [ebx+0E0h] +
cdq   +
sub eax edx +
sar eax 1 +
add [ebp+rcSrc.left] eax +
cmp dword ptr [ebx+1A0h] 0 +
jnz loc_10A609D  +
add [ebp+rcSrc.top] eax +
sub [ebp+rcSrc.right] eax +
xor eax eax +
cmp [ebp+var_4] 5 +
mov ecx ebx +
setz al  +
push eax  +
lea eax [ebp+rcSrc] +
push eax  +
push [ebp+var_8]  +
push [ebp+String]  +
call sub_10A1E0D  +
jmp loc_10A60DE  +
mov eax [esi] +
push 1  +
push esi  +
call dword ptr [eax+80h]  +
jmp loc_10A60DE  +
push esi  +
mov ecx ebx +
call sub_10A1152  +
test eax eax +
jz loc_10A60DE  +
mov eax [ebp+var_2C] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+38h]  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jl loc_10A5DED  +
xor esi esi +
test byte ptr [ebx+44h] 1 +
jz loc_10A610E  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_7C] +
push eax  +
push esi  +
push 1  +
push esi  +
push dword ptr [ebx+5Ch]  +
call ds:GetThemeBackgroundRegion  +
and dword ptr [ebx+44h] 0FFFFFFFEh +
cmp [ebx+1A0h] esi +
jz loc_10A611E  +
cmp [ebx+150h] esi +
jz loc_10A6172  +
test byte ptr [ebx+44h] 2 +
jz loc_10A6172  +
push [ebp+var_18]  +
fld  dword ptr [ebx+54h] +
lea eax [ebx+0F0h] +
push dword ptr [ebx+150h]  +
push dword ptr [ebx+140h]  +
push eax  +
push ecx  +
fstp  [esp+0C4h+var_C4] +
push dword ptr [ebx+50h]  +
lea eax [ebx+68h] +
push dword ptr [ebx+4Ch]  +
mov ecx ebx +
push eax  +
call sub_10A4FEE  +
mov ecx [ebx+28h] +
cmp ecx esi +
jz loc_10A6167  +
or al 0FFh +
sub al byte ptr [ebp+var_18] +
movzx eax al +
push eax  +
call sub_10A517D  +
and dword ptr [ebx+44h] 0FFFFFFFDh +
mov [ebp+var_38] 1 +
cmp [ebx+1A0h] esi +
jnz loc_10A6187  +
push [ebp+var_18]  +
mov ecx ebx +
push [ebp+String]  +
call sub_10A20C9  +
push esi  +
push dword ptr [ebp-3Ch]  +
push [ebp+var_40]  +
push [ebp+String]  +
call ds:SetViewportOrgEx  +
mov [ebx+44h] esi +
xor esi esi +
push 1  +
lea ecx [ebp+var_30] +
call sub_109A8E9  +
push esi  +
push 1Ah  +
mov ecx ebx +
call sub_1046141  +
test eax eax +
jnz loc_10A61C9  +
push esi  +
push 1Bh  +
mov ecx ebx +
call sub_1046141  +
test eax eax +
jnz loc_10A61C9  +
mov ecx ebx +
call sub_10A3424  +
cmp [ebp+var_10] esi +
jz loc_10A6228  +
push 0FFFFFFECh  +
push dword ptr [ebx+30h]  +
call ds:GetWindowLongW  +
mov edi ds:DeleteObject +
test eax 400000h +
jz loc_10A61FF  +
push dword ptr [ebx+30h]  +
push [ebp+var_10]  +
call sub_10A1195  +
push [ebp+var_10]  +
mov [ebp+String] eax +
call edi  +
mov eax [ebp+String] +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
mov [ebp+rcDst.right] eax +
lea eax [ebp+rcDst] +
push eax  +
push dword ptr [ebx+30h]  +
mov [ebp+rcDst.left] 3 +
mov [ebp+rcDst.top] 1 +
mov [ebp+rcDst.bottom] esi +
call ds:DwmEnableBlurBehindWindow  +
push [ebp+var_10]  +
call edi  +
cmp [ebp+var_38] esi +
jz loc_10A6257  +
xor edi edi +
cmp [ebp+var_14] esi +
jle loc_10A6249  +
mov eax [ebx+68h] +
mov eax [eax+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
inc edi  +
cmp edi [ebp+var_14] +
jl loc_10A6234  +
mov ebx [ebx+28h] +
cmp ebx esi +
jz loc_10A6257  +
mov ecx ebx +
call sub_10A1A0F  +
lea ecx [ebp+var_30] +
call sub_109ACD1  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov ebx [esi+68h] +
mov [ebp+var_4] 80004005h +
test ebx ebx +
jz loc_10A63F2  +
mov eax ebx +
test eax eax +
jz loc_10A6292  +
mov eax [eax] +
jmp loc_10A6294  +
xor eax eax +
test eax eax +
jle loc_10A63F2  +
cmp [ebp+arg_0] 0 +
jl loc_10A63F2  +
imul eax eax +
cmp [ebp+arg_0] eax +
jge loc_10A63F2  +
and [ebp+var_4] 0 +
push edi  +
mov edi [esi+11Ch] +
push edi  +
call sub_10A112B  +
test eax eax +
jz loc_10A62F3  +
mov eax [ebx+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push 20h  +
push eax  +
call dword ptr [ecx+74h]  +
push dword ptr [esi+11Ch]  +
mov ecx esi +
call sub_10A50BC  +
mov ecx esi +
mov dword ptr [esi+11Ch] 0FFFFFFF6h +
call sub_10A1360  +
mov eax [ebp+arg_0] +
mov ebx [esi+118h] +
mov [esi+118h] eax +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
and dword ptr [esi+12Ch] 0 +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
mov edi edx +
dec edi  +
dec edi  +
neg edi  +
sbb edi edi +
inc edi  +
call dword ptr [ecx+2Ch]  +
mov [ebp+arg_0] eax +
mov eax [esi+118h] +
cdq   +
push 3  +
pop ecx  +
idiv  ecx +
xor eax eax +
inc eax  +
cmp edx eax +
jnz loc_10A633F  +
mov [esi+12Ch] eax +
jmp loc_10A636C  +
test edi edi +
jz loc_10A636C  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov ecx [ebp+arg_0] +
mov eax [eax+ecx*4] +
mov ecx [eax] +
push eax  +
mov [ebp+var_8] eax +
call dword ptr [ecx+50h]  +
test eax eax +
jz loc_10A636C  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
push eax  +
call ds:SetFocus  +
push 3  +
mov eax ebx +
pop ecx  +
cdq   +
idiv  ecx +
mov ecx esi +
push eax  +
call sub_10A50BC  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10A50BC  +
mov ecx esi +
call sub_10A5756  +
test edi edi +
jz loc_10A6397  +
push 1  +
push 0FFFFFFF6h  +
jmp loc_10A63D0  +
cmp ebx [esi+118h] +
jz loc_10A63CB  +
mov edi [esi+30h] +
call ds:GetFocus  +
cmp eax edi +
jnz loc_10A63CB  +
mov eax [esi+118h] +
cmp eax 0FFFFFFF6h +
jnz loc_10A63BB  +
xor eax eax +
jmp loc_10A63BC  +
inc eax  +
push eax  +
push 0FFFFFFFCh  +
push edi  +
push 8005h  +
call ds:NotifyWinEvent  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_10A3F35  +
mov eax [esi+20h] +
test eax eax +
jz loc_10A63F1  +
push [ebp+arg_0]  +
mov edi [eax] +
mov ecx esi +
call sub_10A308B  +
push eax  +
push dword ptr [esi+20h]  +
call dword ptr [edi+24h]  +
pop edi  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10A5C0C  +
test [ebp+arg_0] 1 +
jz loc_10A641A  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hWnd] 0 +
push esi  +
mov esi ecx +
jz loc_10A6488  +
push [ebp+hWnd]  +
call ds:IsWindow  +
test eax eax +
jz loc_10A6488  +
push 0Ch  +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_10A645F  +
push [ebp+arg_C]  +
mov ecx eax +
push [ebp+arg_8]  +
push esi  +
call sub_10A167D  +
mov esi eax +
jmp loc_10A6461  +
xor esi esi +
test esi esi +
jz loc_10A6488  +
push esi  +
push offset sub_10A59AD  +
push 0  +
push [ebp+wParam]  +
push 7Fh  +
push [ebp+hWnd]  +
call ds:SendMessageCallbackW  +
test eax eax +
jnz loc_10A6488  +
push 1  +
mov ecx esi +
call sub_10A16A8  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov ecx [ebp+8] +
push eax  +
call sub_10A25DA  +
mov ecx [ebp+8] +
push eax  +
call sub_10A5A60  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
mov eax 80070057h +
jl loc_10A64EE  +
mov edx [ebp+8] +
mov ecx [edx+58h] +
test ecx ecx +
jz loc_10A64D9  +
mov ecx [ecx] +
jmp loc_10A64DB  +
xor ecx ecx +
imul ecx ecx +
cmp [ebp+0Ch] ecx +
jge loc_10A64EE  +
push dword ptr [ebp+0Ch]  +
lea ecx [edx-10h] +
call sub_10A626B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
push dword ptr [esi+118h]  +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
mov [ebp+var_4] 80004005h +
call dword ptr [ecx+28h]  +
cmp [ebp+arg_0] 4 +
mov ecx eax +
jnz loc_10A6575  +
push 3  +
cdq   +
pop edi  +
idiv  edi +
cmp edx 2 +
jz loc_10A6575  +
mov ebx [esi+68h] +
test ebx ebx +
jz loc_10A6588  +
mov edi [esi+11Ch] +
push edi  +
mov ecx esi +
call sub_10A112B  +
test eax eax +
jz loc_10A6588  +
mov eax [ebx+4] +
mov eax [eax+edi*4] +
mov ecx [eax] +
push 20h  +
push eax  +
call dword ptr [ecx+74h]  +
push dword ptr [esi+11Ch]  +
mov ecx esi +
call sub_10A50BC  +
mov ecx esi +
mov dword ptr [esi+11Ch] 0FFFFFFF6h +
call sub_10A1360  +
jmp loc_10A6588  +
cmp ecx [esi+118h] +
jz loc_10A6588  +
push ecx  +
mov ecx esi +
call sub_10A626B  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+28h] +
test ecx ecx +
jz loc_10A65AA  +
push 1  +
call sub_10A6400  +
and dword ptr [esi+28h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
mov [ebp+var_4] 1 +
cmp [ebp+arg_8] esi +
jz loc_10A6608  +
cmp [edi+68h] esi +
jz loc_10A6608  +
cmp [edi+28h] esi +
jz loc_10A65E6  +
push esi  +
push 1Ch  +
call sub_10A1589  +
mov ecx edi +
call sub_10A6597  +
push 20h  +
call sub_1002B98  +
pop ecx  +
cmp eax esi +
jz loc_10A65FC  +
push edi  +
mov ecx eax +
call sub_10A5B68  +
jmp loc_10A65FE  +
xor eax eax +
mov ecx edi +
mov [edi+28h] eax +
call sub_10A33E3  +
lea esi [edi+68h] +
push 10h  +
mov ecx esi +
call sub_100801C  +
test eax eax +
jz loc_10A66A3  +
push ebx  +
push dword ptr [esi]  +
mov ebx [ebp+arg_0] +
push dword ptr [ebx]  +
call ds:off_106C7AC  +
mov ecx ebx +
call sub_1008370  +
mov eax [esi] +
xor ebx ebx +
mov [ebp+arg_0] ebx +
cmp eax ebx +
jz loc_10A6643  +
mov eax [eax] +
mov [ebp+arg_8] eax +
jmp loc_10A6646  +
mov [ebp+arg_8] ebx +
cmp dword ptr [edi+198h] 0FFFFFFFFh +
jnz loc_10A6680  +
cmp [ebp+arg_8] ebx +
jle loc_10A6680  +
mov eax [esi] +
mov eax [eax+4] +
mov eax [eax+ebx*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
test eax eax +
jz loc_10A667A  +
push eax  +
call ds:IsIconic  +
test eax eax +
jz loc_10A667A  +
inc [ebp+arg_0]  +
inc ebx  +
cmp ebx [ebp+arg_8] +
jl loc_10A6654  +
lea eax [edi+18Ch] +
cmp dword ptr [eax] 0FFFFFFFFh +
pop ebx  +
jnz loc_10A6691  +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
cmp dword ptr [edi+198h] 0FFFFFFFFh +
jnz loc_10A66A3  +
mov eax [ebp+arg_0] +
mov [edi+198h] eax +
mov esi [esi] +
test esi esi +
jz loc_10A66AD  +
mov esi [esi] +
jmp loc_10A66AF  +
xor esi esi +
test esi esi +
jnz loc_10A66C6  +
and [ebp+var_4] esi +
mov ecx edi +
call sub_10A33E3  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
add edi 64h +
push edi  +
call ds:__imp_IUnknown_Set  +
jmp loc_10A66BD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+68h] +
mov eax [eax+4] +
mov eax [eax+ebx*4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push 0  +
push ebx  +
mov esi eax +
mov eax [esi] +
push 2  +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
mov ecx edi +
call sub_10A6426  +
mov eax [esi] +
push 1  +
push ebx  +
push 0  +
push esi  +
call dword ptr [eax+4Ch]  +
push eax  +
mov ecx edi +
call sub_10A6426  +
mov eax [esi] +
push 0FFFFFFDEh  +
push esi  +
mov [ebp+arg_0] 2 +
call dword ptr [eax+4Ch]  +
push eax  +
call ds:GetClassLongW  +
test eax eax +
jnz loc_10A6756  +
push 7F05h  +
push eax  +
mov [ebp+arg_0] 3 +
call ds:LoadIconW  +
test eax eax +
jz loc_10A6762  +
push [ebp+arg_0]  +
mov ecx edi +
push ebx  +
push eax  +
call sub_10A594C  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
mov ebx ecx +
mov eax [ebx+68h] +
push esi  +
push edi  +
test eax eax +
jz loc_10A6780  +
mov esi [eax] +
jmp loc_10A6782  +
xor esi esi +
xor edi edi +
test esi esi +
jle loc_10A6795  +
push edi  +
mov ecx ebx +
call sub_10A66E1  +
inc edi  +
cmp edi esi +
jl loc_10A6788  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
test ebx ebx +
jz loc_10A68F5  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
mov edi eax +
test edi edi +
jl loc_10A68F5  +
push edi  +
mov ecx esi +
call sub_10A66E1  +
push edi  +
mov ecx esi +
call sub_10A50BC  +
test byte ptr [ebp+10h] 4 +
jz loc_10A67EA  +
push edi  +
mov ecx esi +
call sub_10A5A60  +
test byte ptr [ebp+10h] 2 +
jz loc_10A6902  +
mov eax [esi+68h] +
mov eax [eax+4] +
mov edi [eax+edi*4] +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+58h]  +
test eax 20000h +
mov eax [edi] +
jz loc_10A687C  +
push 21h  +
push edi  +
call dword ptr [eax+74h]  +
cmp dword_10B24CC 0 +
jz loc_10A6902  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A6830  +
test al al +
jnz loc_10A6902  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_10A6902  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_10A6902  +
cmp ecx edi +
jnz loc_10A6902  +
push 0  +
push 1  +
jmp loc_10A68D6  +
push 22h  +
push edi  +
call dword ptr [eax+74h]  +
cmp dword_10B24CC 0 +
jz loc_10A6902  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A6898  +
test al al +
jnz loc_10A6902  +
mov edx dword_10B24B8 +
mov esi dword_10B24BC +
mov ecx 10000h +
mov eax 80000000h +
and edx ecx +
and esi eax +
or edx esi +
jz loc_10A6902  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov esi edx +
and esi ecx +
mov ecx edi +
and ecx eax +
cmp esi edx +
jnz loc_10A6902  +
cmp ecx edi +
jnz loc_10A6902  +
push 0  +
push 0  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4Ch]  +
push eax  +
push offset dword_1068940  +
push dword_10B247C  +
push dword_10B2478  +
call sub_109AF8C  +
jmp loc_10A6902  +
push 0  +
push 0  +
push dword ptr [esi+30h]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
mov [esi+144h] eax +
test eax eax +
jz loc_10A6957  +
push dword ptr [esi+30h]  +
call ds:SetFocus  +
cmp dword ptr [ebp+10h] 0 +
jz loc_10A6950  +
push 2  +
mov ecx esi +
call sub_10A64F7  +
mov ecx esi +
call sub_1020989  +
cmp dword ptr [ebp+14h] 0 +
jz loc_10A6950  +
mov ecx esi +
call sub_10A4616  +
mov ecx esi +
call sub_10A455A  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
xor eax eax +
cmp [ebp+0Ch] eax +
setl al  +
push eax  +
call sub_10A64F7  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 1 +
push ebx  +
push esi  +
push edi  +
jnz loc_10A69BA  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10A6B25  +
cmp dword ptr [ebp+0Ch] 1Ch +
jnz loc_10A6B25  +
push 1  +
jmp loc_10A6B1C  +
cmp dword ptr [ebp+10h] 5 +
jnz loc_10A6AF7  +
push dword ptr [ebp+0Ch]  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
mov eax [esi+8] +
or dword ptr [ebp+10h] 0FFFFFFFFh +
mov ecx [eax] +
lea edx [ebp+10h] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov ebx 10000h +
mov edi 80000000h +
test eax eax +
jl loc_10A6A8D  +
mov eax [ebp+10h] +
sub eax 1Ah +
jz loc_10A6A1E  +
dec eax  +
jz loc_10A6A12  +
dec eax  +
jnz loc_10A6A8D  +
lea ecx [esi-1Ch] +
call sub_10A6597  +
jmp loc_10A6A8D  +
push 1  +
lea ecx [esi-1Ch] +
call sub_10209D9  +
jmp loc_10A6A8D  +
lea ecx [esi-1Ch] +
call sub_10A455A  +
cmp dword_10B24CC 0 +
jz loc_10A6B25  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A6A40  +
test al al +
jnz loc_10A6A8D  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_10A6A8D  +
mov edx dword_10B24C0 +
mov ecx dword_10B24C4 +
mov eax edx +
and eax ebx +
and ecx edi +
cmp eax edx +
jnz loc_10A6A8D  +
cmp ecx dword_10B24C4 +
jnz loc_10A6A8D  +
push dword ptr [esi+124h]  +
push offset dword_1068920  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
cmp dword_10B24CC 0 +
jz loc_10A6B25  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A6AA7  +
test al al +
jnz loc_10A6B25  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_10A6B25  +
mov edx dword_10B24C0 +
mov eax edx +
and eax ebx +
mov ebx dword_10B24C4 +
mov ecx ebx +
and ecx edi +
cmp eax edx +
jnz loc_10A6B25  +
cmp ecx ebx +
jnz loc_10A6B25  +
push dword ptr [ebp+10h]  +
add esi 0FFFFFFE4h +
push 0  +
push esi  +
push offset dword_1046278  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046175  +
jmp loc_10A6B25  +
cmp dword ptr [ebp+10h] 6 +
jnz loc_10A6B25  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10A6B25  +
cmp dword ptr [ebp+0Ch] 1Ch +
jnz loc_10A6B25  +
push 0  +
lea eax [esi-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+1A0h] +
push edi  +
xor ebx ebx +
push ebx  +
mov ecx esi +
mov [ebp-10h] eax +
mov [esi+1A0h] ebx +
call sub_10A232B  +
mov edi [ebp+18h] +
xor ecx ecx +
mov eax edi +
and al 2 +
cmp al 2 +
setz cl  +
mov eax edi +
and al 1 +
push esi  +
mov [ebp-4] ecx +
xor ecx ecx +
cmp al 1 +
setz cl  +
mov eax edi +
and al 4 +
mov [ebp-0Ch] ecx +
xor ecx ecx +
cmp al 4 +
setz cl  +
mov eax edi +
and al 8 +
mov [esi+154h] ecx +
xor ecx ecx +
cmp al 8 +
mov eax [esi] +
setz cl  +
mov [ebp-14h] ecx +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A6BC3  +
push 1Ch  +
mov ecx esi +
call sub_10A1539  +
test eax eax +
jz loc_10A6BC3  +
cmp [esi+1A4h] ebx +
jnz loc_10A6BC3  +
mov dword ptr [ebp+8] 1 +
jmp loc_10A6BE2  +
push ebx  +
push ebx  +
push 580h  +
push hWnd  +
mov [ebp+8] ebx +
call ds:SendMessageW  +
mov eax [esi] +
push ebx  +
push 1  +
push esi  +
call dword ptr [eax+54h]  +
mov edi [esi+150h] +
mov [esi+1A4h] ebx +
mov [ebp+18h] ebx +
mov [ebp-8] edi +
cmp [ebp+8] ebx +
jz loc_10A6C0C  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
cmp eax [esi+64h] +
jnz loc_10A6C0C  +
mov [ebp+8] ebx +
jmp loc_10A6C7C  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp+18h] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_10A30C4  +
mov edi [ebp-8] +
test eax eax +
jl loc_10A6C49  +
cmp [ebp+8] ebx +
jz loc_10A6C49  +
push edi  +
push dword ptr [ebp-0Ch]  +
lea eax [ebp+18h] +
push eax  +
mov ecx esi +
call sub_10A3FD0  +
test eax eax +
jnz loc_10A6C49  +
mov eax [esi] +
push ebx  +
push 1  +
push esi  +
mov [ebp+8] ebx +
call dword ptr [eax+54h]  +
cmp [ebp+18h] ebx +
jz loc_10A6C7C  +
mov ecx esi +
call sub_10A18F1  +
push dword ptr [ebp+8]  +
or dword ptr [esi+188h] 0FFFFFFFFh +
push dword ptr [ebp+0Ch]  +
lea eax [ebp+18h] +
push eax  +
mov [esi+10Ch] ebx +
call sub_10A65B5  +
mov [ebp+0Ch] eax +
cmp eax ebx +
jz loc_10A7013  +
mov eax [esi+20h] +
mov [esi+150h] edi +
mov edi [esi+164h] +
cmp eax ebx +
jz loc_10A6CBF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov [esi+164h] eax +
cmp edi eax +
jz loc_10A6CBF  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
mov eax offset byte_1002CD0 +
jnz loc_10A6CB4  +
mov eax offset aVertical +
push ebx  +
push eax  +
push dword ptr [esi+30h]  +
call ds:SetWindowTheme  +
push 0FFFFFFF6h  +
pop edi  +
push ebx  +
lea eax [esi+158h] +
push eax  +
push ebx  +
push 1024h  +
mov [esi+124h] edi +
call ds:SystemParametersInfoW  +
test eax eax +
jnz loc_10A6CE6  +
mov [esi+158h] ebx +
mov eax [ebp-0Ch] +
mov [esi+140h] eax +
mov eax [ebp+14h] +
mov [esi+118h] edi +
mov [esi+120h] edi +
cmp eax ebx +
jz loc_10A6D20  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
cmp eax ebx +
lea ecx [esi+11Ch] +
mov [ecx] eax +
jge loc_10A6D26  +
mov [ecx] edi +
jmp loc_10A6D26  +
mov [esi+11Ch] edi +
mov eax [ebp+10h] +
cmp eax ebx +
jz loc_10A6D4B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
cmp eax ebx +
lea ecx [esi+114h] +
mov [ecx] eax +
jge loc_10A6D51  +
mov [ecx] edi +
jmp loc_10A6D51  +
mov [esi+114h] edi +
mov ecx esi +
call sub_10A47D6  +
push dword ptr [esi+150h]  +
lea eax [esi+68h] +
push dword ptr [esi+140h]  +
mov ecx esi +
push eax  +
call sub_10A3FD0  +
test eax eax +
jz loc_10A6F55  +
cmp dword_10B24CC 0 +
mov ebx 2010000h +
mov edi 80010000h +
jz loc_10A6DDD  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A6D97  +
test al al +
jnz loc_10A6DDD  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_10A6DDD  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx ebx +
and edx edi +
cmp ecx eax +
jnz loc_10A6DDD  +
cmp edx dword_10B24C4 +
jnz loc_10A6DDD  +
push offset dword_10A7090  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
cmp dword ptr [ebp-10h] 0 +
jz loc_10A6DFE  +
mov ecx esi +
call sub_1020CA7  +
test eax eax +
jz loc_10A6DFE  +
push 0  +
push offset byte_1002CD0  +
push dword ptr [esi+30h]  +
call ds:SetWindowTheme  +
mov eax [ebp-4] +
mov ecx esi +
mov [esi+144h] eax +
call sub_10A676E  +
cmp dword ptr [ebp+8] 0 +
jz loc_10A6E3F  +
mov ecx esi +
call sub_10A1641  +
test eax eax +
jz loc_10A6E2E  +
mov eax [esi] +
or dword ptr [esi+44h] 80000000h +
push esi  +
call dword ptr [eax+4Ch]  +
jmp loc_10A6E39  +
mov ecx esi +
call sub_10A6597  +
and dword ptr [ebp+8] 0 +
cmp dword ptr [ebp+8] 0 +
jnz loc_10A6E6B  +
lea eax [esi+34h] +
push eax  +
call ds:SetRectEmpty  +
mov ecx esi +
call sub_10A48DA  +
push 1Ah  +
mov ecx esi +
call sub_10A1562  +
mov ecx esi +
test eax eax +
jnz loc_10A6E66  +
call sub_10A455A  +
jmp loc_10A6E6B  +
call sub_10A1476  +
cmp dword ptr [esi+144h] 0 +
jz loc_10A6E7D  +
push dword ptr [esi+30h]  +
call ds:SetFocus  +
cmp dword_10B24CC 0 +
jz loc_10A6F47  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A6E97  +
test al al +
jnz loc_10A6EDC  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax ebx +
and ecx edi +
or eax ecx +
jz loc_10A6EDC  +
mov ecx dword_10B24C0 +
mov edx dword_10B24C4 +
mov eax ecx +
and eax ebx +
mov ebx edx +
and ebx edi +
cmp eax ecx +
jnz loc_10A6EDC  +
cmp ebx edx +
jnz loc_10A6EDC  +
push offset dword_10A70A0  +
push dword_10B247C  +
push dword_10B2478  +
call sub_100E7C9  +
cmp dword_10B24CC 0 +
jz loc_10A6F47  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A6EF2  +
test al al +
jnz loc_10A6F47  +
mov eax dword_10B24B8 +
mov edi dword_10B24BC +
mov edx 10000h +
mov ecx 80000000h +
and eax edx +
and edi ecx +
or eax edi +
jz loc_10A6F47  +
mov edi dword_10B24C0 +
mov ebx dword_10B24C4 +
mov eax edi +
and eax edx +
mov edx ebx +
and edx ecx +
cmp eax edi +
jnz loc_10A6F47  +
cmp edx ebx +
jnz loc_10A6F47  +
push dword ptr [esi+140h]  +
push offset dword_1068920  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
mov dword ptr [ebp+0Ch] 1 +
xor ebx ebx +
jmp loc_10A7044  +
cmp [esi+1A0h] ebx +
jnz loc_10A6F7A  +
mov eax offset aVertical +
cmp [esi+148h] ebx +
jnz loc_10A6F6F  +
mov eax offset aBasicmenumode +
push ebx  +
push eax  +
push dword ptr [esi+30h]  +
call ds:SetWindowTheme  +
xor eax eax +
inc eax  +
mov ecx esi +
mov [esi+1A0h] eax +
mov [esi+140h] eax +
call sub_10A1A46  +
cmp [esi+5Ch] ebx +
jnz loc_10A6FB3  +
cmp [esi+1BCh] ebx +
jz loc_10A6FA5  +
cmp [esi+1C0h] ebx +
jnz loc_10A6FB3  +
mov ecx esi +
call sub_1021347  +
mov ecx esi +
call sub_1021381  +
mov eax [ebp-4] +
mov ecx esi +
mov [esi+144h] eax +
mov [esi+1A8h] ebx +
mov [esi+118h] edi +
mov [esi+120h] edi +
call sub_10A676E  +
mov ecx esi +
call sub_10A236B  +
lea eax [esi+34h] +
push eax  +
call ds:SetRectEmpty  +
mov ecx esi +
call sub_10A48DA  +
mov ecx esi +
call sub_10A455A  +
cmp [esi+144h] ebx +
jz loc_10A7005  +
push dword ptr [esi+30h]  +
call ds:SetFocus  +
xor eax eax +
inc eax  +
mov [esi+1A4h] eax +
mov [ebp+0Ch] eax +
jmp loc_10A7044  +
push ebx  +
push offset loc_1040149  +
lea ecx [ebp+18h] +
call sub_100831C  +
cmp [ebp+8] ebx +
jz loc_10A702D  +
mov ecx esi +
call sub_10A6597  +
push ebx  +
push 1Bh  +
mov ecx esi +
call sub_1046141  +
test eax eax +
jnz loc_10A7044  +
push 1  +
mov ecx esi +
call sub_10209D9  +
mov [esi+14Ch] ebx +
cmp [ebp+0Ch] ebx +
jz loc_10A706B  +
cmp [ebp-4] ebx +
jnz loc_10A705D  +
mov ecx esi +
call sub_10A45ED  +
jmp loc_10A7079  +
cmp [ebp-14h] ebx +
jz loc_10A7079  +
mov ecx esi +
call sub_10A4616  +
jmp loc_10A7079  +
mov ecx esi +
call sub_1020989  +
mov ecx esi +
call sub_1020A6F  +
lea ecx [ebp+18h] +
call sub_10082DC  +
mov eax [ebp+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 2  +
mov ecx esi +
call sub_10A1920  +
cmp dword ptr [ebp+10h] 0 +
jz loc_10A70FA  +
cmp dword ptr [esi+20h] 0 +
jz loc_10A70FA  +
mov eax [esi+20h] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+24h]  +
cmp dword ptr [ebp+0Ch] 0 +
mov ecx esi +
jz loc_10A710B  +
push 1  +
call sub_10209D9  +
jmp loc_10A7110  +
call sub_10516DD  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A7239  +
push edi  +
mov edi [ebp+0Ch] +
mov eax [edi] +
push edi  +
call dword ptr [eax+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
test eax eax +
jge loc_10A7238  +
lea eax [esi+10Ch] +
mov ecx [eax] +
lea edx [ecx+1] +
mov [eax] edx +
lea eax [ebp+8] +
push eax  +
lea eax [esi+18h] +
push eax  +
push 1  +
push ecx  +
push edi  +
push dword ptr [esi+30h]  +
call sub_10A8A68  +
test eax eax +
jl loc_10A7238  +
mov eax [edi] +
push ebx  +
push edi  +
call dword ptr [eax+90h]  +
test eax eax +
jz loc_10A71A6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
mov ecx esi +
call sub_10A25DA  +
test eax eax +
jl loc_10A71A6  +
push dword ptr [ebp+8]  +
mov ecx esi +
push eax  +
call sub_10A3394  +
mov ebx eax +
jmp loc_10A722A  +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_10A3260  +
xor ebx ebx +
test eax eax +
setnl bl  +
test ebx ebx +
jz loc_10A722E  +
push dword ptr [esi+150h]  +
lea eax [esi+68h] +
push dword ptr [esi+140h]  +
mov ecx esi +
push eax  +
call sub_10A3FD0  +
test eax eax +
jnz loc_10A7201  +
lea edi [esi+144h] +
cmp [edi] eax +
mov ecx esi +
setz al  +
push eax  +
call sub_10209D9  +
cmp dword ptr [edi] 0 +
jz loc_10A722A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
mov ecx esi +
call sub_10A455A  +
jmp loc_10A722A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+30h]  +
test eax eax +
jz loc_10A722A  +
mov eax [ebp+8] +
mov ecx [eax] +
push 1Dh  +
push eax  +
call dword ptr [ecx+74h]  +
test eax eax +
jnz loc_10A7220  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4Ch]  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_10A66E1  +
test ebx ebx +
jnz loc_10A7237  +
lea eax [ebp+8] +
push eax  +
call sub_1002BEE  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push dword ptr [ebp+0Ch]  +
add esi 0FFFFFFF0h +
mov ecx esi +
call sub_10A3025  +
push 1  +
mov ecx esi +
call sub_10209D9  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
sub eax 0Dh +
mov esi ecx +
jz loc_10A72C3  +
sub eax 0Eh +
jz loc_10A7292  +
sub eax 5 +
jz loc_10A72C3  +
sub eax 6 +
jz loc_10A729D  +
dec eax  +
dec eax  +
jnz loc_10A72E0  +
xor edi edi +
inc edi  +
push edi  +
call sub_10209D9  +
jmp loc_10A72E0  +
lea eax [esi+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
lea ecx [esi+118h] +
mov [ecx] eax +
cmp eax 0FFFFFFF6h +
jz loc_10A72B8  +
imul eax eax +
mov [ecx] eax +
push dword ptr [esi+30h]  +
call ds:SetFocus  +
jmp loc_10A72DD  +
push [ebp+arg_0]  +
call sub_10A1AD8  +
test eax eax +
jz loc_10A72E0  +
inc dword ptr [esi+19Ch]  +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+40h]  +
xor edi edi +
inc edi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push 0FFFFFFECh  +
push dword ptr [esi+30h]  +
xor edi edi +
inc edi  +
mov ebx edi +
call ds:GetWindowLongW  +
mov ecx [esi+1A0h] +
shr eax 16h +
and eax edi +
neg ecx  +
sbb ecx ecx +
and ecx 2 +
or eax ecx +
push eax  +
push dword ptr [esi+164h]  +
push [ebp+arg_0]  +
call sub_109A982  +
cmp eax 24h +
jg loc_10A73C4  +
jz loc_10A73C0  +
cmp eax 9 +
jz loc_10A73A0  +
cmp eax 0Dh +
jz loc_10A7373  +
cmp eax 0Fh +
jle loc_10A7418  +
cmp eax 12h +
jle loc_10A7414  +
cmp eax 1Bh +
jz loc_10A73EC  +
cmp eax 20h +
jz loc_10A7373  +
cmp eax 23h +
jnz loc_10A7418  +
push 3  +
jmp loc_10A73FB  +
mov eax [esi+118h] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
cmp edx edi +
lea edi [esi+10h] +
mov esi [edi] +
push edi  +
jnz loc_10A7396  +
call dword ptr [esi+2Ch]  +
push eax  +
push edi  +
call dword ptr [esi+48h]  +
jmp loc_10A741F  +
call dword ptr [esi+2Ch]  +
push eax  +
push edi  +
call dword ptr [esi+40h]  +
jmp loc_10A741F  +
push 10h  +
call ds:GetKeyState  +
mov ecx 8000h +
test ax cx +
mov ecx esi +
jz loc_10A73B7  +
push edi  +
jmp loc_10A73B9  +
push 0  +
call sub_10A64F7  +
jmp loc_10A741F  +
push 2  +
jmp loc_10A73FB  +
cmp eax 5Dh +
jg loc_10A73FF  +
jz loc_10A7414  +
cmp eax 25h +
jl loc_10A7418  +
cmp eax 26h +
jle loc_10A73FA  +
cmp eax 27h +
jz loc_10A73F6  +
cmp eax 28h +
jnz loc_10A7418  +
push 4  +
mov ecx esi +
call sub_10A64F7  +
test eax eax +
jge loc_10A741F  +
push edi  +
mov ecx esi +
call sub_10209D9  +
jmp loc_10A741F  +
push 0  +
jmp loc_10A73FB  +
push edi  +
mov ecx esi +
jmp loc_10A73B9  +
cmp eax 0A0h +
jl loc_10A7418  +
cmp eax 0A5h +
jle loc_10A7414  +
cmp eax 0FFh +
jnz loc_10A7418  +
xor ebx ebx +
jmp loc_10A741F  +
mov ecx esi +
call sub_10516DD  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_10106E8 +
mov dword ptr [ecx+4] offset off_10352E8 +
mov ecx [ecx+8] +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
retn   +
***
mov eax 80004001h +
retn 18h  +
***
mov eax 80004001h +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+8] +
push edi  +
mov edi 80070057h +
test eax eax +
jnz loc_10A7481  +
mov edi 80004005h +
jmp loc_10A74D6  +
cmp [ebp+arg_8] 3 +
jnz loc_10A74D6  +
test byte ptr [ebp+arg_4] 1 +
jz loc_10A74D6  +
mov ecx [ebp+arg_10] +
test ecx ecx +
jz loc_10A74D6  +
mov edx [eax] +
lea edi [ebp+arg_4] +
push edi  +
lea edi [ebp+var_4] +
push edi  +
lea edi [ebp+arg_0] +
push edi  +
dec ecx  +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_10A74D6  +
push [ebp+arg_4]  +
mov eax [esi+8] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
mov edi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_10A74D6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+8] +
push edi  +
mov edi 80070057h +
test eax eax +
jnz loc_10A7502  +
mov edi 80004005h +
jmp loc_10A7551  +
cmp [ebp+arg_4] 3 +
jnz loc_10A7551  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_10A7551  +
mov edx [eax] +
lea edi [ebp+var_4] +
push edi  +
lea edi [ebp+var_8] +
push edi  +
lea edi [ebp+arg_0] +
push edi  +
dec ecx  +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
mov edi eax +
test edi edi +
jl loc_10A7551  +
push [ebp+var_4]  +
mov eax [esi+8] +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_10A7551  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_14] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_10A7572  +
and dword ptr [ecx] 0 +
jmp loc_10A7577  +
mov eax 80004003h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+pvarg] +
push edi  +
mov edi 80004003h +
test esi esi +
jz loc_10A761D  +
push esi  +
call ds:VariantInit  +
mov edi [ebp+arg_0] +
and dword ptr [esi+8] 0 +
push 3  +
pop eax  +
mov [esi] ax +
cmp dword ptr [edi+8] 0 +
jnz loc_10A75B9  +
mov edi 80004005h +
jmp loc_10A761D  +
mov eax [edi+8] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+20h]  +
mov ebx eax +
call ds:GetFocus  +
cmp ebx eax +
pop ebx  +
jnz loc_10A7616  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
test eax eax +
jl loc_10A7616  +
mov edi [edi+8] +
or [ebp+pvarg] 0FFFFFFFFh +
mov eax [edi] +
lea ecx [ebp+pvarg] +
push ecx  +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push edi  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jl loc_10A760B  +
mov eax [ebp+pvarg] +
inc eax  +
mov [esi+8] eax +
xor edi edi +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10A761D  +
xor eax eax +
xor edi edi +
mov [esi] ax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+pvarg] +
mov eax 80004003h +
test esi esi +
jz loc_10A7648  +
push esi  +
call ds:VariantInit  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ecx+8] +
mov ecx [eax] +
push esi  +
lea edx [ebp+var_8] +
push edx  +
lea edx [ebp+var_4] +
push edx  +
push eax  +
xor esi esi +
call dword ptr [ecx+3Ch]  +
test eax eax +
jl loc_10A769A  +
mov eax [ebp+var_4] +
xor ecx ecx +
cmp eax [ebp+arg_0] +
setz cl  +
mov esi ecx +
test esi esi +
jz loc_10A7694  +
mov ecx [ebp+arg_4] +
cmp ecx 0FFFFFFFEh +
jz loc_10A7694  +
xor edx edx +
cmp ecx [ebp+var_8] +
setz dl  +
mov esi edx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10A742D  +
test [ebp+arg_0] 1 +
jz loc_10A76C0  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_14] +
inc ebx  +
test edi edi +
jz loc_10A7764  +
and dword ptr [edi] 0 +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
test eax eax +
jnz loc_10A76F6  +
mov ebx 80004005h +
jmp loc_10A7769  +
cmp [ebp+arg_4] 3 +
jnz loc_10A775D  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_10A7769  +
mov edx [eax] +
push 0  +
lea esi [ebp+arg_14] +
push esi  +
lea esi [ebp+arg_0] +
push esi  +
dec ecx  +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
test eax eax +
jl loc_10A7769  +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_10A7737  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0C4h]  +
mov esi eax +
mov eax [ebp+arg_14] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10A7745  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+94h]  +
mov esi eax +
test esi esi +
jz loc_10A7752  +
push edi  +
push esi  +
call sub_1045501  +
mov ebx eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10A7769  +
mov ebx 80070057h +
jmp loc_10A7769  +
mov ebx 80004003h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_214] eax +
test eax eax +
jz loc_10A7859  +
cmp [ebp+arg_4] 3 +
jnz loc_10A7859  +
mov eax [ebp+arg_C] +
test eax eax +
jnz loc_10A77BD  +
xor ebx ebx +
inc ebx  +
jmp loc_10A785E  +
lea edi [ebp+var_21C] +
push edi  +
lea edi [ebp+var_218] +
push edi  +
lea ecx [eax-1] +
mov eax [esi+8] +
mov edx [eax] +
lea edi [ebp+var_210] +
push edi  +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
mov ebx eax +
test ebx ebx +
jl loc_10A785E  +
mov esi [esi+8] +
push [ebp+var_210]  +
mov eax [esi] +
push esi  +
mov edi 2B5Eh +
call dword ptr [eax+2Ch]  +
cmp eax 3 +
jnz loc_10A77FF  +
inc edi  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jle loc_10A7832  +
push [ebp+var_214]  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1045501  +
mov ebx eax +
jmp loc_10A783B  +
mov eax [ebp+var_214] +
and dword ptr [eax] 0 +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_218] +
test eax eax +
jz loc_10A785E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10A785E  +
mov ebx 80070057h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_10A7894  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+40h] 0 +
jnz loc_10A78C6  +
cmp dword ptr [esi+6Ch] 0 +
jz loc_10A78DE  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_10A78D8  +
push eax  +
call ds:DwmUnregisterThumbnail  +
and dword ptr [esi+3Ch] 0 +
mov eax [esi] +
push esi  +
call dword ptr [eax+18h]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 200h +
jz loc_10A791D  +
mov ecx 2A3h +
cmp [ebp+0Ch] ecx +
jnz loc_10A792D  +
mov eax [ebp+1Ch] +
xor edx edx +
cmp [eax+78h] edx +
jz loc_10A792D  +
push edx  +
push edx  +
push ecx  +
push dword ptr [eax+14h]  +
mov [eax+78h] edx +
call ds:PostMessageW  +
jmp loc_10A792D  +
mov eax [ebp+1Ch] +
cmp dword ptr [eax+78h] 0 +
jnz loc_10A792D  +
mov dword ptr [eax+78h] 1 +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100D797  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+40h] 0 +
mov eax 80004005h +
jnz loc_10A7961  +
cmp dword ptr [esi+6Ch] 0 +
jz loc_10A798F  +
push edi  +
push dword ptr [ebp+10h]  +
mov edi ds:CopyRect +
lea eax [esi+10h] +
push eax  +
call edi  +
push dword ptr [ebp+0Ch]  +
lea eax [esi+20h] +
push eax  +
call edi  +
mov eax [ebp+14h] +
mov [esi+30h] eax +
mov eax [ebp+18h] +
mov [esi+34h] eax +
mov al [ebp+1Ch] +
mov [esi+38h] al +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov ecx [ecx+58h] +
mov eax 80004005h +
test ecx ecx +
jz loc_10A79BA  +
push 1  +
push 0  +
push ecx  +
call ds:InvalidateRect  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov ecx [ecx+58h] +
mov eax 80004005h +
test ecx ecx +
jz loc_10A79EB  +
mov eax [ebp+0Ch] +
neg eax  +
sbb eax eax +
and eax 5 +
push eax  +
push ecx  +
call ds:ShowWindow  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+60h] ecx +
mov ecx [ebp+10h] +
mov [eax+64h] ecx +
mov ecx [ebp+14h] +
mov [eax+5Ch] ecx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 240h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov ecx [eax] +
push edi  +
lea edx [ebp-220h] +
push edx  +
push dword ptr [ebp+0Ch]  +
mov edi 80070057h +
push eax  +
call dword ptr [ecx+0A8h]  +
test eax eax +
jl loc_10A7AC1  +
test byte ptr [ebp-8] 1 +
mov eax [ebp-218h] +
mov [ebp-234h] eax +
mov eax [ebp-21Ch] +
lea ecx [ebp-210h] +
mov dword ptr [ebp-240h] 20h +
mov dword ptr [ebp-23Ch] 27h +
mov [ebp-238h] eax +
mov byte ptr [ebp-230h] 0 +
mov [ebp-228h] ecx +
jnz loc_10A7A9C  +
mov byte ptr [ebp-230h] 4 +
test byte ptr [ebp-8] 8 +
jz loc_10A7AA9  +
or byte ptr [ebp-230h] 8 +
lea ecx [ebp-240h] +
push ecx  +
push eax  +
push 440h  +
push dword ptr [esi+58h]  +
call ds:SendMessageW  +
xor edi edi +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+58h] 0 +
mov eax 80004005h +
jz loc_10A7B0B  +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
push eax  +
push 0  +
push 430h  +
push dword ptr [esi+58h]  +
call ds:SendMessageW  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lprcDst] +
mov esi ecx +
lea eax [esi+28h] +
push eax  +
push edi  +
call ds:CopyRect  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
push edi  +
call ds:OffsetRect  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 453h  +
push dword ptr [esi+60h]  +
call ds:SendMessageW  +
mov ecx [edi] +
mov eax [edi+8] +
sub eax ecx +
cmp [ebp+lParam] eax +
jge loc_10A7B7A  +
cdq   +
sub eax edx +
mov ebx eax +
mov eax [ebp+lParam] +
cdq   +
sub eax edx +
sar eax 1 +
sar ebx 1 +
sub ebx eax +
lea eax [ebx+ecx] +
mov ecx [ebp+lParam] +
mov [edi] eax +
add eax ecx +
mov [edi+8] eax +
xor ebx ebx +
push ebx  +
push ebx  +
push 43Ah  +
push dword ptr [esi+60h]  +
call ds:SendMessageW  +
cmp [esi+74h] ebx +
jz loc_10A7B96  +
mov ecx [edi+0Ch] +
jmp loc_10A7B9C  +
mov ecx [esi+64h] +
add ecx [edi+0Ch] +
shr eax 10h +
add eax ecx +
mov [edi+4] ecx +
mov [edi+0Ch] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov ecx [eax] +
push edi  +
xor edi edi +
push edi  +
push eax  +
mov ebx 80004005h +
call dword ptr [ecx+0B0h]  +
test eax eax +
jz loc_10A7C05  +
lea eax [ebp-10h] +
push eax  +
lea ecx [esi-8] +
call sub_10A7B15  +
mov eax [ebp-4] +
sub eax [ebp-0Ch] +
push 14h  +
push eax  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
push eax  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-10h]  +
push edi  +
push dword ptr [esi+58h]  +
call ds:SetWindowPos  +
cmp [esi+40h] edi +
jz loc_10A7C7C  +
cmp [esi+3Ch] edi +
jz loc_10A7C7C  +
push 29h  +
lea eax [ebp-3Ch] +
push edi  +
push eax  +
mov dword ptr [ebp-40h] 5 +
call memset  +
add esp 0Ch +
lea eax [esi+10h] +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
call ds:CopyRect  +
push dword ptr [esi+34h]  +
lea eax [ebp-3Ch] +
push dword ptr [esi+30h]  +
push eax  +
call ds:OffsetRect  +
mov eax [esi+48h] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jz loc_10A7C67  +
mov eax [ebp+8] +
mov ecx [ebp-3Ch] +
mov edx eax +
sub edx [ebp-34h] +
sub eax ecx +
mov [ebp-3Ch] edx +
mov [ebp-34h] eax +
mov al [esi+38h] +
mov [ebp-1Ch] al +
lea eax [ebp-40h] +
push eax  +
push dword ptr [esi+3Ch]  +
call ds:DwmUpdateThumbnailProperties  +
mov ebx eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
mov edi [ebp+0Ch] +
test edi edi +
jnz loc_10A7CA1  +
mov eax 80004003h +
jmp loc_10A7D05  +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+40h] 0 +
jz loc_10A7CE6  +
cmp dword ptr [esi+3Ch] 0 +
jz loc_10A7CE6  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+0D8h]  +
test eax eax +
jl loc_10A7CDA  +
mov eax [ebp-8] +
sub eax [ebp-10h] +
mov [edi] eax +
mov eax [ebp-4] +
sub eax [ebp-0Ch] +
mov [edi+4] eax +
xor eax eax +
jmp loc_10A7D04  +
push edi  +
push dword ptr [esi+3Ch]  +
call ds:DwmQueryThumbnailSourceSize  +
jmp loc_10A7CF9  +
mov eax [esi+18h] +
sub eax [esi+10h] +
mov [edi] eax +
mov eax [esi+1Ch] +
sub eax [esi+14h] +
mov [edi+4] eax +
xor eax eax +
test eax eax +
jge loc_10A7D04  +
and dword ptr [edi] 0 +
and dword ptr [edi+4] 0 +
pop esi  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 10h +
push eax  +
push dword ptr [ebp+0Ch]  +
call ds:CopyRect  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
mov eax [eax+8] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
call ds:InternalGetWindowText  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi 80004005h +
test ebx ebx +
jz loc_10A7DCB  +
mov eax [ebp+10h] +
push edi  +
mov edi [ebp+8] +
cmp eax [edi+54h] +
jg loc_10A7DCA  +
cmp [edi+50h] ebx +
jz loc_10A7DCA  +
mov esi ds:GetSystemMetrics +
push 31h  +
call esi  +
push 32h  +
mov [ebp+8] eax +
call esi  +
lea ecx [ebp+0Ch] +
push ecx  +
push eax  +
push dword ptr [ebp+8]  +
push ebx  +
call ds:off_100A854  +
mov esi eax +
test esi esi +
jl loc_10A7DCA  +
mov eax [edi+50h] +
mov ebx ds:DestroyIcon +
test eax eax +
jz loc_10A7DAE  +
push eax  +
call ebx  +
push dword ptr [ebp+0Ch]  +
call ds:CopyIcon  +
mov [edi+50h] eax +
mov eax [ebp+10h] +
mov [edi+54h] eax +
cmp esi 1 +
jz loc_10A7DCA  +
push dword ptr [ebp+0Ch]  +
call ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+8] +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+3Ch]  +
xor esi esi +
call ds:dwmapi_114  +
test eax eax +
jl loc_10A7E05  +
cmp dword ptr [ebp+8] 2 +
jz loc_10A7E03  +
cmp dword ptr [ebp+8] 3 +
jz loc_10A7E03  +
inc esi  +
jmp loc_10A7E05  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+10h] +
push eax  +
call sub_1002BEE  +
mov eax [esi+58h] +
test eax eax +
jz loc_10A7E2D  +
push eax  +
call ds:DestroyIcon  +
lea eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
add esi 50h +
push esi  +
call sub_1002BEE  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+8] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+50h]  +
cmp dword_10B24CC 0 +
mov [ebp+8] eax +
jz loc_10A7ED3  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A7E7A  +
test al al +
jnz loc_10A7ED3  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edi 10000h +
mov ebx 80000000h +
and eax edi +
and ecx ebx +
or eax ecx +
jz loc_10A7ED3  +
mov edx dword_10B24C0 +
mov eax edx +
and eax edi +
mov edi dword_10B24C4 +
mov ecx edi +
and ecx ebx +
cmp eax edx +
jnz loc_10A7ED3  +
cmp ecx edi +
jnz loc_10A7ED3  +
push dword ptr [ebp+8]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+64h]  +
push eax  +
push offset dword_10A8068  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
xor ebx ebx +
inc ebx  +
lea edi [esi+3Ch] +
cmp dword ptr [edi] 0 +
mov [ebp-4] ebx +
jnz loc_10A7FEA  +
mov eax [esi] +
push 0  +
push 1Eh  +
push esi  +
call dword ptr [eax+78h]  +
test eax eax +
jnz loc_10A7FE3  +
push dword ptr [ebp+8]  +
call ds:IsWindow  +
test eax eax +
jz loc_10A7FE3  +
push edi  +
push ebx  +
push 0  +
push dword ptr [ebp+8]  +
push dword ptr [esi+0Ch]  +
call ds:dwmapi_124  +
mov [ebp-4] eax +
test eax eax +
jge loc_10A7F24  +
and dword ptr [edi] 0 +
jmp loc_10A7F6F  +
push 29h  +
lea eax [ebp-38h] +
push 0  +
push eax  +
mov dword ptr [ebp-3Ch] 10h +
call memset  +
mov eax [esi+8] +
add esp 0Ch +
lea edx [ebp-28h] +
push edx  +
mov [ebp-13h] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0D8h]  +
test eax eax +
jl loc_10A7F56  +
or dword ptr [ebp-3Ch] 2 +
lea eax [ebp-3Ch] +
push eax  +
push dword ptr [edi]  +
call ds:DwmUpdateThumbnailProperties  +
mov [ebp-4] eax +
test eax eax +
jge loc_10A7F6F  +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
mov edi [edi] +
test edi edi +
jz loc_10A7FD9  +
lea eax [ebp-0Ch] +
push eax  +
push edi  +
call ds:DwmQueryThumbnailSourceSize  +
test eax eax +
jl loc_10A7F90  +
cmp dword ptr [ebp-0Ch] 0 +
jle loc_10A7FD9  +
cmp dword ptr [ebp-8] 0 +
jle loc_10A7FD9  +
push dword ptr [ebp+8]  +
call sub_109A95E  +
test eax eax +
jnz loc_10A7FB2  +
push 0FFFFFFECh  +
push dword ptr [ebp+8]  +
call ds:GetWindowLongW  +
test eax 80000h +
jnz loc_10A7FB2  +
mov eax ebx +
jmp loc_10A7FB4  +
xor eax eax +
mov [esi+4Ch] eax +
mov eax [esi+8] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0B0h]  +
test eax eax +
jz loc_10A7FEA  +
mov eax [esi] +
push esi  +
call dword ptr [eax+14h]  +
test eax eax +
jl loc_10A7FE3  +
and dword ptr [esi+6Ch] 0 +
jmp loc_10A7FEA  +
and dword ptr [esi+40h] 0 +
and dword ptr [esi+4Ch] 0 +
jmp loc_10A7FEA  +
mov dword ptr [ebp-4] 80004005h +
cmp dword_10B24CC 0 +
jz loc_10A805D  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A8000  +
test al al +
jnz loc_10A805D  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
and eax 10000h +
and ecx 80000000h +
or eax ecx +
jz loc_10A805D  +
mov edx dword_10B24C0 +
mov edi dword_10B24C4 +
mov eax edx +
mov ecx edi +
and eax 10000h +
and ecx 80000000h +
cmp eax edx +
jnz loc_10A805D  +
cmp ecx edi +
jnz loc_10A805D  +
push dword ptr [ebp+8]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+64h]  +
push eax  +
push offset dword_10A8078  +
push dword_10B247C  +
push dword_10B2478  +
call sub_105436C  +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov edi [ebp+8] +
xor ebx ebx +
mov dword ptr [ebp-4] 1 +
cmp [edi+58h] ebx +
jnz loc_10A8340  +
mov eax [edi+8] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+50h]  +
mov [ebp-0Ch] eax +
cmp dword_10B24CC ebx +
jz loc_10A8126  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A80CE  +
cmp al bl +
jnz loc_10A8126  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov esi 10000h +
and eax esi +
and ecx 80000000h +
or eax ecx +
jz loc_10A812B  +
mov eax dword_10B24C0 +
mov edx dword_10B24C4 +
mov ecx eax +
and ecx esi +
and edx 80000000h +
cmp ecx eax +
jnz loc_10A812B  +
cmp edx dword_10B24C4 +
jnz loc_10A812B  +
push dword ptr [ebp-0Ch]  +
push offset dword_10A8350  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
jmp loc_10A812B  +
mov esi 10000h +
push ebx  +
push ebx  +
push dword ptr [edi+68h]  +
push dword ptr [edi+0Ch]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 40009144h  +
push ebx  +
push offset aToolbarwindow3  +
push ebx  +
call sub_103510B  +
mov [edi+58h] eax +
cmp eax ebx +
jz loc_10A82D7  +
mov esi ds:SendMessageW +
push ebx  +
push 14h  +
push 41Eh  +
push eax  +
mov dword ptr [edi+6Ch] 1 +
call esi  +
mov eax [edi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
push eax  +
push ebx  +
push 430h  +
push dword ptr [edi+58h]  +
call esi  +
push ebx  +
push ebx  +
push 43Ch  +
push dword ptr [edi+58h]  +
call esi  +
push 290h  +
push ebx  +
push 454h  +
push dword ptr [edi+58h]  +
call esi  +
push ebx  +
push ebx  +
push 423h  +
push dword ptr [edi+58h]  +
call esi  +
mov [ebp+8] eax +
cmp eax ebx +
jz loc_10A81FC  +
push 3  +
push 3  +
push 0FFFFFFF0h  +
push eax  +
call ds:SHLWAPI_165  +
push ebx  +
push 3  +
push 415h  +
push dword ptr [ebp+8]  +
call esi  +
add eax eax +
push eax  +
push 3  +
push 403h  +
push dword ptr [ebp+8]  +
call esi  +
push 7FFFh  +
push 2  +
push 403h  +
push dword ptr [ebp+8]  +
call esi  +
push 12Ch  +
push ebx  +
push 418h  +
push dword ptr [ebp+8]  +
call esi  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+0A4h]  +
mov [ebp-10h] eax +
mov eax [ebp-4] +
cmp eax ebx +
jle loc_10A82A2  +
imul eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp-8] eax +
cmp eax ebx +
jz loc_10A82A2  +
cmp [ebp-4] ebx +
mov [ebp+8] ebx +
jle loc_10A8289  +
mov ecx [ebp-10h] +
add eax 8 +
add ecx 4 +
jmp loc_10A8243  +
mov ecx [ebp-10h] +
mov edx [ecx+4] +
mov [eax-8] edx +
mov edx [ecx] +
mov [eax-4] edx +
lea edx [ecx+0Ch] +
mov [eax+8] edx +
lea edx [ecx+214h] +
mov [eax+1] bl +
mov [eax+4] ebx +
mov [eax] bl +
test byte ptr [edx] 1 +
jnz loc_10A826A  +
mov byte ptr [eax] 4 +
test byte ptr [edx] 8 +
jz loc_10A8272  +
or byte ptr [eax] 8 +
inc dword ptr [ebp+8]  +
add ecx 21Ch +
mov [ebp-10h] ecx +
mov ecx [ebp+8] +
add eax 14h +
cmp ecx [ebp-4] +
jl loc_10A8240  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
push 444h  +
push dword ptr [edi+58h]  +
call esi  +
push dword ptr [ebp-8]  +
call ds:LocalFree  +
movzx eax word ptr [edi+64h] +
movzx ecx word ptr [edi+60h] +
shl eax 10h +
or eax ecx +
push eax  +
push ebx  +
push 41Fh  +
push dword ptr [edi+58h]  +
call esi  +
lea eax [edi-8] +
push eax  +
push ebx  +
push offset loc_10A78EA  +
push dword ptr [edi+58h]  +
call sub_10351CD  +
mov [ebp-4] ebx +
mov esi 10000h +
jmp loc_10A82DE  +
mov dword ptr [ebp-4] 80004005h +
cmp dword_10B24CC ebx +
jz loc_10A833F  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A82F3  +
cmp al bl +
jnz loc_10A833F  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edi 80000000h +
and eax esi +
and ecx edi +
or eax ecx +
jz loc_10A833F  +
mov eax dword_10B24C0 +
mov ecx eax +
and ecx esi +
mov esi dword_10B24C4 +
mov edx esi +
and edx edi +
cmp ecx eax +
jnz loc_10A833F  +
cmp edx esi +
jnz loc_10A833F  +
push dword ptr [ebp-0Ch]  +
push offset dword_10A8360  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
pop esi  +
mov eax [ebp-4] +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov ecx [esi+58h] +
xor eax eax +
inc eax  +
test ecx ecx +
jz loc_10A83A4  +
push 0  +
push offset loc_10A78EA  +
push ecx  +
call sub_103519B  +
push dword ptr [esi+58h]  +
call ds:DestroyWindow  +
and dword ptr [esi+58h] 0 +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
cmp dword ptr [ebp+0Ch] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov ebx 80070057h +
jnz loc_10A83FA  +
mov edi ds:SendMessageW +
lea eax [ebp-18h] +
push eax  +
push 0  +
push 0  +
push 447h  +
push dword ptr [esi+58h]  +
call edi  +
push eax  +
push 417h  +
push dword ptr [esi+58h]  +
call edi  +
mov eax [ebp-14h] +
mov [ebp+0Ch] eax +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
call dword ptr [ecx+0A4h]  +
mov edx [ebp-20h] +
and dword ptr [ebp-1Ch] 0 +
test edx edx +
jle loc_10A8521  +
lea ecx [eax+4] +
mov edi [ebp+0Ch] +
cmp [ecx] edi +
jz loc_10A8437  +
inc dword ptr [ebp-1Ch]  +
add ecx 21Ch +
cmp [ebp-1Ch] edx +
jge loc_10A8521  +
jmp loc_10A841C  +
***
mov ecx [ebp-1Ch] +
imul ecx ecx +
lea eax [ecx+eax+218h] +
test byte ptr [eax] 10h +
mov [ebp-24h] eax +
jnz loc_10A851F  +
cmp dword_10B24CC 0 +
jz loc_10A84BA  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A8469  +
test al al +
jnz loc_10A84BA  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_10A84BA  +
mov eax dword_10B24C0 +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_10A84BA  +
cmp edx ebx +
jnz loc_10A84BA  +
push dword ptr [ebp-1Ch]  +
push offset dword_10A8538  +
push dword_10B247C  +
push dword_10B2478  +
call sub_10543B5  +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
mov edi eax +
push edi  +
call sub_107A759  +
push dword ptr [esi+58h]  +
movzx eax word ptr [ebp+0Ch] +
or eax 18000000h +
push eax  +
push 111h  +
push edi  +
call ds:PostMessageW  +
mov eax [ebp-24h] +
test byte ptr [eax] 2 +
jz loc_10A851F  +
mov esi [esi+48h] +
and dword ptr [ebp-1Ch] 0 +
mov eax [esi] +
lea ecx [ebp-1Ch] +
push ecx  +
push offset dword_102BDB4  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_10A8512  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
push 1  +
push 1  +
push eax  +
call dword ptr [ecx+54h]  +
mov eax [ebp-1Ch] +
test eax eax +
jz loc_10A851F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor ebx ebx +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 10h +
cmp dword ptr [ecx+58h] 0 +
mov eax 80004005h +
jz locret_10A8585  +
lea eax [ebp-10h] +
push eax  +
add ecx 0FFFFFFF8h +
call sub_10A7B15  +
mov ecx [ebp-8] +
sub ecx [ebp-10h] +
mov eax [ebp+0Ch] +
mov [eax] ecx +
mov ecx [ebp-4] +
sub ecx [ebp-0Ch] +
mov [eax+4] ecx +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+10h] 1 +
push esi  +
jnz loc_10A85F3  +
mov esi [ebp+8] +
mov eax [esi+44h] +
and dword ptr [ebp+10h] 0 +
mov ecx [eax] +
lea edx [ebp+10h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A85DD  +
mov eax [ebp+10h] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10A85DD  +
cmp dword ptr [ebp+0Ch] 1Eh +
jz loc_10A85D2  +
cmp dword ptr [ebp+0Ch] 1Dh +
jnz loc_10A85DD  +
mov eax [esi+44h] +
mov ecx [eax] +
push 1  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [ebp+10h] +
test eax eax +
jz loc_10A875B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10A875B  +
cmp dword ptr [ebp+10h] 5 +
push edi  +
jnz loc_10A86D6  +
mov esi [ebp+8] +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
mov eax [esi+44h] +
and dword ptr [ebp+8] 0 +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A86CF  +
mov eax [ebp+8] +
or dword ptr [ebp+10h] 0FFFFFFFFh +
mov ecx [eax] +
lea edx [ebp+10h] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10A8657  +
cmp dword ptr [ebp+10h] 1Eh +
jnz loc_10A8657  +
mov eax [esi+44h] +
mov ecx [eax] +
lea edx [esi-0Ch] +
neg edx  +
sbb edx edx +
lea edi [esi-4] +
and edx edi +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
cmp dword_10B24CC 0 +
jz loc_10A86CF  +
mov al byte_10B24D0 +
cmp al 4 +
jnb loc_10A866D  +
test al al +
jnz loc_10A86CF  +
mov eax dword_10B24B8 +
mov ecx dword_10B24BC +
mov edx 10000h +
mov edi 80000000h +
and eax edx +
and ecx edi +
or eax ecx +
jz loc_10A86CF  +
mov eax dword_10B24C0 +
push ebx  +
mov ebx dword_10B24C4 +
mov ecx eax +
and ecx edx +
mov edx ebx +
and edx edi +
cmp ecx eax +
jnz loc_10A86CE  +
cmp edx ebx +
jnz loc_10A86CE  +
push dword ptr [ebp+10h]  +
lea eax [esi-0Ch] +
add esi 0FFFFFFFCh +
neg eax  +
push 0  +
sbb eax eax +
and eax esi +
push eax  +
push offset dword_1046278  +
push dword_10B247C  +
push dword_10B2478  +
call sub_1046175  +
pop ebx  +
mov eax [ebp+8] +
test eax eax +
jmp loc_10A8752  +
cmp dword ptr [ebp+10h] 6 +
jnz loc_10A875A  +
mov esi [ebp+8] +
mov eax [esi+44h] +
lea edx [ebp+10h] +
xor edi edi +
push edx  +
mov [ebp+10h] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A874D  +
mov eax [ebp+10h] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10A874D  +
cmp dword ptr [ebp+8] 1Eh +
jz loc_10A8715  +
cmp dword ptr [ebp+8] 1Dh +
jnz loc_10A874D  +
mov eax [esi+44h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
mov esi [esi+44h] +
lea ecx [ebp+0Ch] +
push ecx  +
push offset dword_102BDB4  +
mov [ebp+0Ch] edi +
mov eax [esi] +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_10A8740  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+6Ch]  +
mov eax [ebp+0Ch] +
cmp eax edi +
jz loc_10A874D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+10h] +
cmp eax edi +
jz loc_10A875A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+8] +
mov eax [esi+44h] +
mov ecx [eax] +
lea edx [ebp-4] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A87DE  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jl loc_10A87DE  +
mov eax [ebp+8] +
cmp eax 1Dh +
jz loc_10A87D3  +
cmp eax 1Eh +
jz loc_10A87D3  +
cmp eax 1Fh +
jz loc_10A87BB  +
cmp eax 20h +
jz loc_10A87BB  +
cmp eax 21h +
jz loc_10A87BB  +
cmp eax 22h +
jnz loc_10A87DE  +
mov eax [esi+44h] +
mov ecx [eax] +
lea edx [esi-0Ch] +
add esi 0FFFFFFFCh +
neg edx  +
sbb edx edx +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_10A87DE  +
mov eax [ebp-4] +
mov ecx [eax] +
push 4  +
push eax  +
call dword ptr [ecx+38h]  +
mov eax [ebp-4] +
pop esi  +
test eax eax +
jz loc_10A87EC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [edi+48h] +
lea edx [ebp-4] +
xor esi esi +
and [ebp-4] esi +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A8835  +
push dword ptr [ebp+0Ch]  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [edi-8] +
neg edx  +
sbb edx edx +
and edx edi +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
mov eax [ebp-4] +
test eax eax +
jz loc_10A8842  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+48h] +
push edi  +
lea edx [ebp-4] +
xor edi edi +
and [ebp-4] edi +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A889B  +
mov eax [ebp-4] +
mov ecx [eax] +
lea edx [ebp+8] +
push edx  +
push dword ptr [ebp+0Ch]  +
lea edx [esi-8] +
neg edx  +
sbb edx edx +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jnz loc_10A889B  +
mov eax [ebp+10h] +
inc edi  +
test eax eax +
jz loc_10A889B  +
mov ecx [ebp+8] +
mov [eax] ecx +
mov eax [ebp-4] +
test eax eax +
jz loc_10A88A8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+48h] +
push edi  +
lea edx [ebp-4] +
xor edi edi +
and [ebp-4] edi +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jnz loc_10A88F4  +
push dword ptr [ebp+10h]  +
mov eax [ebp-4] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
lea edx [esi-8] +
neg edx  +
sbb edx edx +
and edx esi +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
test eax eax +
jnz loc_10A88F4  +
inc edi  +
mov eax [ebp-4] +
test eax eax +
jz loc_10A8901  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push esi  +
mov esi ecx +
and dword ptr [esi+78h] 0 +
inc eax  +
mov [esi+4] eax +
mov [esi+54h] eax +
mov eax [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
mov edi ds:__imp_IUnknown_Set +
mov [esi+70h] eax +
mov eax [ebp+arg_0] +
mov [esi+14h] eax +
lea eax [esi+10h] +
push eax  +
mov dword ptr [esi] offset off_10029B0 +
mov dword ptr [esi+8] offset off_10028D8 +
mov dword ptr [esi+0Ch] offset off_100654C +
mov dword ptr [esi+5Ch] 7FFFFFFFh +
call edi  +
mov eax [ebp+arg_C] +
push [ebp+arg_10]  +
mov [esi+48h] eax +
lea eax [esi+50h] +
push eax  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+68h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+58h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+3Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+50h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+44h] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+44h] +
pop ebp  +
retn 4  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10A7876  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_10A7876  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10029B0 +
mov dword ptr [esi+8] offset off_10028D8 +
mov dword ptr [esi+0Ch] offset off_100654C +
call sub_10A7E11  +
mov dword ptr [esi] offset off_1002788 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 7Ch  +
xor esi esi +
call sub_1002B98  +
pop ecx  +
test eax eax +
jz loc_10A8A94  +
push [ebp+arg_10]  +
mov ecx eax +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10A890E  +
jmp loc_10A8A96  +
xor eax eax +
test eax eax +
jz loc_10A8AA4  +
mov ecx [ebp+arg_14] +
add eax 8 +
mov [ecx] eax +
jmp loc_10A8AA9  +
mov esi 8007000Eh +
mov eax esi +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10A8A3D  +
test byte ptr [ebp+8] 1 +
jz loc_10A8ACF  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
push esi  +
test ecx ecx +
jz loc_10A8AF9  +
mov eax [ebp+arg_0] +
push 3  +
cdq   +
pop esi  +
idiv  esi +
dec edx  +
neg edx  +
sbb edx edx +
inc edx  +
mov [ecx] edx +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_10A8B12  +
mov eax [ebp+arg_0] +
push 3  +
cdq   +
pop esi  +
idiv  esi +
dec edx  +
dec edx  +
neg edx  +
sbb edx edx +
inc edx  +
mov [ecx] edx +
mov eax [ebp+arg_0] +
push 3  +
cdq   +
pop ecx  +
idiv  ecx +
pop esi  +
pop ebp  +
retn 0Ch  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_10A8B5D  +
mov eax [ebp+8] +
cmp [eax+4] edi +
jz loc_10A8B54  +
mov eax [eax+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [esi] eax +
jmp loc_10A8B62  +
mov [esi] edi +
mov edi 80004005h +
jmp loc_10A8B62  +
mov edi 80004003h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov ecx [ecx+8] +
mov eax 80070057h +
test ecx ecx +
jnz loc_10A8B8A  +
mov eax 80004005h +
jmp loc_10A8BAB  +
cmp [ebp+arg_8] 3 +
jnz loc_10A8BAB  +
test [ebp+arg_4] 1 +
jz loc_10A8BAB  +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_10A8BAB  +
dec edx  +
cmp edx 0FFFFFFF6h +
jz loc_10A8BAB  +
mov eax [ecx] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_4] +
xor eax eax +
push esi  +
push edi  +
mov [ebp+var_4] 80020003h +
cmp ebx eax +
jz loc_10A8D05  +
mov esi [ebp+arg_8] +
cmp esi eax +
jz loc_10A8D05  +
mov edx [ebp+arg_C] +
cmp edx eax +
jz loc_10A8D05  +
mov ecx [ebp+arg_10] +
cmp ecx eax +
jz loc_10A8D05  +
mov edi [ebp+arg_0] +
mov [ebx] eax +
mov [esi] eax +
mov [edx] eax +
mov [ecx] eax +
mov esi [edi+8] +
cmp esi eax +
jnz loc_10A8C12  +
mov [ebp+var_4] 80004005h +
jmp loc_10A8D0C  +
cmp [ebp+arg_14] 3 +
jnz loc_10A8CFC  +
mov ecx [ebp+arg_1C] +
cmp ecx eax +
jnz loc_10A8C52  +
mov eax [esi] +
lea ecx [ebp+var_14] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
test eax eax +
jz loc_10A8D0C  +
mov eax [ebp+var_14] +
mov edx [ebp+arg_8] +
mov ecx [ebp+var_10] +
mov [ebx] eax +
mov [edx] ecx +
mov edx [ebp+var_C] +
sub edx eax +
mov eax [ebp+arg_C] +
mov [eax] edx +
jmp loc_10A8CEC  +
lea eax [ecx-1] +
cmp eax 0FFFFFFF6h +
jz loc_10A8D0C  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
mov ecx edi +
call sub_10A8ADB  +
cmp [ebp+arg_4] 0 +
mov ecx [esi] +
lea edx [ebp+var_14] +
push edx  +
jz loc_10A8C81  +
push eax  +
push esi  +
call dword ptr [ecx+20h]  +
jmp loc_10A8C95  +
cmp [ebp+arg_0] 0 +
jz loc_10A8C8E  +
push eax  +
push esi  +
call dword ptr [ecx+50h]  +
jmp loc_10A8C95  +
push 1  +
push eax  +
push esi  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jz loc_10A8D0C  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi [edi+8] +
mov eax [edi] +
push 0FFFFFFECh  +
push edi  +
call dword ptr [eax+0Ch]  +
push eax  +
call ds:GetWindowLongW  +
test eax 400000h +
mov eax [ebp+var_C] +
jz loc_10A8CD8  +
mov [ebx] eax +
mov eax [ebp+var_14] +
mov edx [ebx] +
jmp loc_10A8CDD  +
mov edx [ebp+var_14] +
mov [ebx] edx +
mov ecx [ebp+var_10] +
mov esi [ebp+arg_8] +
sub eax edx +
mov edx [ebp+arg_C] +
mov [esi] ecx +
mov [edx] eax +
mov eax [ebp+var_8] +
sub eax ecx +
mov ecx [ebp+arg_10] +
and [ebp+var_4] 0 +
mov [ecx] eax +
jmp loc_10A8D0C  +
mov [ebp+var_4] 80070057h +
jmp loc_10A8D0C  +
mov [ebp+var_4] 80004003h +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+pvarg] +
xor ebx ebx +
cmp esi ebx +
jnz loc_10A8D32  +
mov eax 80004003h +
jmp loc_10A8D89  +
push edi  +
push 3  +
pop edi  +
cmp [ebp+arg_8] di +
jnz loc_10A8DD1  +
push esi  +
call ds:VariantInit  +
mov eax edi +
mov [esi] ax +
mov eax [ebp+arg_0] +
mov [esi+8] ebx +
mov ecx [eax+8] +
cmp ecx ebx +
jnz loc_10A8D60  +
mov eax 80004005h +
jmp loc_10A8D88  +
mov esi [ebp+arg_10] +
cmp esi ebx +
jnz loc_10A8D9A  +
mov eax [ebp+arg_4] +
sub eax 7 +
mov [ebp+arg_0] ebx +
jz loc_10A8D8F  +
dec eax  +
jnz loc_10A8DD1  +
push edi  +
push ebx  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+28h]  +
inc eax  +
mov ecx [ebp+pvarg] +
inc eax  +
mov [ecx+8] eax +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
push 2  +
push ebx  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+28h]  +
jmp loc_10A8D7E  +
dec esi  +
cmp esi 0FFFFFFF6h +
jz loc_10A8DD1  +
mov eax esi +
mov [ebp+arg_0] ebx +
cdq   +
mov ebx edi +
idiv  ebx +
mov eax [ebp+arg_4] +
xor ebx ebx +
cmp edx 1 +
setz bl  +
sub esi edx +
cmp eax 1 +
jz loc_10A8DEA  +
cmp eax 2 +
jz loc_10A8DE6  +
cmp eax edi +
jz loc_10A8DEA  +
jle loc_10A8DD1  +
cmp eax 5 +
jle loc_10A8DD8  +
cmp eax 6 +
jz loc_10A8DEA  +
mov eax 80070057h +
jmp loc_10A8D88  +
test ebx ebx +
jz loc_10A8DE1  +
push 0  +
push esi  +
jmp loc_10A8D92  +
lea eax [esi+1] +
jmp loc_10A8D7E  +
push 4  +
jmp loc_10A8DDE  +
test ebx ebx +
jz loc_10A8DF2  +
mov eax esi +
jmp loc_10A8D7E  +
push 1  +
push esi  +
jmp loc_10A8D77  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+8] 0 +
mov eax 80070057h +
jnz loc_10A8E17  +
mov eax 80004005h +
jmp loc_10A8E4B  +
cmp [ebp+arg_4] 3 +
jnz loc_10A8E4B  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_10A8E4B  +
push 0  +
lea eax [ebp+arg_0] +
dec ecx  +
push eax  +
push ecx  +
mov ecx esi +
call sub_10A8ADB  +
cmp [ebp+arg_0] 0 +
mov esi [esi+8] +
mov ecx [esi] +
push eax  +
push esi  +
jz loc_10A8E46  +
call dword ptr [ecx+48h]  +
jmp loc_10A8E49  +
call dword ptr [ecx+40h]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_10A8E86  +
mov eax [ebp+arg_0] +
cmp [eax+8] edi +
jz loc_10A8E7D  +
mov eax [eax+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
imul eax eax +
mov [esi] eax +
jmp loc_10A8E8B  +
mov [esi] edi +
mov edi 80004005h +
jmp loc_10A8E8B  +
mov edi 80004003h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax 80020003h +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+pvarg] +
push edi  +
test esi esi +
jz loc_10A8F18  +
cmp [ebp+arg_4] 3 +
jnz loc_10A8F11  +
mov edi [ebp+arg_C] +
push esi  +
call ds:VariantInit  +
push 3  +
pop eax  +
mov [esi] ax +
test edi edi +
jnz loc_10A8ED7  +
mov dword ptr [esi+8] 21h +
jmp loc_10A8F0D  +
dec edi  +
cmp edi 0FFFFFFF6h +
jz loc_10A8F11  +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+pvarg] +
push eax  +
push edi  +
call sub_10A8ADB  +
cmp [ebp+pvarg] 0 +
jz loc_10A8EFD  +
mov dword ptr [esi+8] 2Bh +
jmp loc_10A8F0D  +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFF4h +
add eax 22h +
mov [esi+8] eax +
xor eax eax +
jmp loc_10A8F1D  +
mov eax 80070057h +
jmp loc_10A8F1D  +
mov eax 80004003h +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+pvarg] +
push edi  +
test esi esi +
jz loc_10A9047  +
push esi  +
call ds:VariantInit  +
push 3  +
pop eax  +
mov [esi] ax +
mov esi [ebp+arg_0] +
mov edi [esi+8] +
test edi edi +
jnz loc_10A8F5D  +
mov eax 80004005h +
jmp loc_10A904C  +
cmp [ebp+arg_4] 3 +
jnz loc_10A9040  +
mov eax [ebp+arg_C] +
mov [ebp+arg_0] 1 +
test eax eax +
jnz loc_10A8F9F  +
mov eax [edi] +
push edi  +
mov [ebp+arg_0] 100000h +
call dword ptr [eax+0Ch]  +
mov esi eax +
call ds:GetFocus  +
cmp esi eax +
jnz loc_10A9033  +
mov [ebp+arg_0] 100004h +
jmp loc_10A9033  +
dec eax  +
cmp eax 0FFFFFFF6h +
jz loc_10A9033  +
push ebx  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
mov ecx esi +
call sub_10A8ADB  +
mov ebx eax +
mov eax [edi] +
push ebx  +
push edi  +
mov [ebp+arg_0] 100000h +
call dword ptr [eax+24h]  +
test eax eax +
jnz loc_10A8FD5  +
mov [ebp+arg_0] 118000h +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp ebx eax +
jnz loc_10A8FE9  +
or [ebp+arg_0] 84h +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
cmp ebx eax +
jnz loc_10A8FFD  +
or [ebp+arg_0] 80h +
cmp [ebp+var_4] 0 +
jz loc_10A9017  +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
cmp ebx eax +
jz loc_10A9017  +
or [ebp+arg_0] 8000h +
cmp [ebp+var_8] 0 +
jz loc_10A9032  +
mov esi [esi+8] +
mov eax [esi] +
push ebx  +
push esi  +
call dword ptr [eax+4Ch]  +
test eax eax +
jnz loc_10A9032  +
mov [ebp+arg_0] 8001h +
pop ebx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+pvarg] +
mov [ecx+8] eax +
xor eax eax +
jmp loc_10A904C  +
mov eax 80070057h +
jmp loc_10A904C  +
mov eax 80004003h +
pop edi  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
inc eax  +
test edx edx +
jz loc_10A9075  +
mov ecx [ebp+arg_18] +
test ecx ecx +
jz loc_10A9075  +
and dword ptr [edx] 0 +
and dword ptr [ecx] 0 +
jmp loc_10A907A  +
mov eax 80004003h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+pvarg] +
push edi  +
mov edi 80004003h +
test esi esi +
jz loc_10A90CC  +
push esi  +
call ds:VariantInit  +
and dword ptr [esi+8] 0 +
push 3  +
pop eax  +
mov [esi] ax +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 0 +
jnz loc_10A90B5  +
add edi 2 +
jmp loc_10A90CC  +
mov eax [eax+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax 0FFFFFFF6h +
jz loc_10A90CC  +
imul eax eax +
inc eax  +
mov [esi+8] eax +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
sub dword ptr [esp+4] 4 +
jmp loc_1052B0E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1010760 +
mov dword ptr [esi+4] offset off_10352FC +
jz loc_10A910A  +
push esi  +
call sub_1002BCA  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+ppvObject] +
push ebx  +
mov ebx [ebp+pvarg] +
push esi  +
mov [ebp+pt.x] eax +
mov eax [ebp+arg_8] +
mov esi 80004005h +
push edi  +
mov [ebp+var_4] esi +
mov [ebp+pt.y] eax +
test ebx ebx +
jz loc_10A9220  +
push ebx  +
call ds:VariantInit  +
mov edi [ebp+arg_0] +
and dword ptr [ebx+8] 0 +
push 3  +
pop eax  +
mov [ebx] ax +
cmp dword ptr [edi+8] 0 +
jnz loc_10A9162  +
mov [ebp+var_4] esi +
jmp loc_10A9227  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+pt] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+pt] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov esi eax +
cmp esi 0FFFFFFF6h +
jnz loc_10A918C  +
and dword ptr [ebx+8] 0 +
jmp loc_10A921A  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+rc] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jz loc_10A91B9  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_10A91B9  +
imul esi esi +
inc esi  +
inc esi  +
jmp loc_10A9217  +
mov eax [edi+8] +
mov ecx [eax] +
lea edx [ebp+rc] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jz loc_10A9213  +
push [ebp+pt.y]  +
lea eax [ebp+rc] +
push [ebp+pt.x]  +
push eax  +
call ds:PtInRect  +
test eax eax +
jz loc_10A9213  +
mov edi [edi+8] +
mov eax [edi] +
push esi  +
push edi  +
call dword ptr [eax+4Ch]  +
test eax eax +
jz loc_10A9227  +
lea ecx [ebp+ppvObject] +
push ecx  +
push offset stru_1003410  +
push 0  +
push eax  +
call AccessibleObjectFromWindow  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_10A9227  +
push 9  +
pop eax  +
mov [ebx] ax +
mov eax [ebp+ppvObject] +
mov [ebx+8] eax +
jmp loc_10A9227  +
imul esi esi +
inc esi  +
mov [ebx+8] esi +
and [ebp+var_4] 0 +
jmp loc_10A9227  +
mov [ebp+var_4] 80004003h +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_4] 3 +
push ebx  +
push esi  +
push edi  +
jnz loc_10A9297  +
mov eax [ebp+arg_C] +
xor edi edi +
cmp eax edi +
jz loc_10A9297  +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
dec eax  +
push eax  +
mov ecx esi +
mov [ebp+var_4] edi +
call sub_10A8ADB  +
xor ebx ebx +
inc ebx  +
cmp [ebp+var_4] edi +
jz loc_10A928C  +
mov ecx [esi+8] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+4Ch]  +
cmp eax edi +
jz loc_10A929C  +
push [ebp+ppvObject]  +
push offset stru_1002CF4  +
push edi  +
push eax  +
call AccessibleObjectFromWindow  +
mov ebx eax +
jmp loc_10A929C  +
mov eax [ebp+ppvObject] +
cmp eax edi +
jz loc_10A929C  +
mov [eax] edi +
jmp loc_10A929C  +
mov ebx 80070057h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi 80004005h +
test esi esi +
jz loc_10A92DC  +
and dword ptr [esi] 0 +
call ds:GetDesktopWindow  +
test eax eax +
jz loc_10A92E1  +
push esi  +
push offset stru_1002CF4  +
push 0  +
push eax  +
call AccessibleObjectFromWindow  +
mov edi eax +
jmp loc_10A92E1  +
mov edi 80004003h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
test edi edi +
jz loc_10A93EB  +
and dword ptr [edi] 0 +
mov esi [ecx+8] +
test esi esi +
jnz loc_10A932C  +
mov [ebp+var_210] 80004005h +
jmp loc_10A93F5  +
cmp [ebp+arg_4] 3 +
jnz loc_10A93DF  +
mov eax [ebp+arg_C] +
mov [ebp+var_210] 1 +
test eax eax +
jnz loc_10A935B  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
push 2B5Ch  +
jmp loc_10A93AA  +
dec eax  +
cmp eax 0FFFFFFF6h +
jz loc_10A93F5  +
lea edx [ebp+var_218] +
push edx  +
lea edx [ebp+var_214] +
push edx  +
push eax  +
call sub_10A8ADB  +
cmp [ebp+var_214] 0 +
push 104h  +
jz loc_10A9395  +
lea eax [ebp+Buffer] +
push eax  +
push 2B63h  +
jmp loc_10A93AA  +
cmp [ebp+var_218] 0 +
jz loc_10A93B8  +
lea eax [ebp+Buffer] +
push eax  +
push 2B64h  +
push hInstance  +
call ds:LoadStringW  +
jmp loc_10A93C6  +
mov ecx [esi] +
lea edx [ebp+Buffer] +
push edx  +
push eax  +
push esi  +
call dword ptr [ecx+3Ch]  +
test eax eax +
jle loc_10A93F5  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1045501  +
mov [ebp+var_210] eax +
jmp loc_10A93F5  +
mov [ebp+var_210] 80070057h +
jmp loc_10A93F5  +
mov [ebp+var_210] 80004003h +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_14] +
mov ebx 80070057h +
test esi esi +
jz loc_10A94A3  +
and dword ptr [esi] 0 +
cmp [ebp+arg_4] 3 +
jnz loc_10A94A8  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10A949E  +
dec eax  +
cmp eax 0FFFFFFF6h +
jz loc_10A94A8  +
push 0  +
lea ecx [ebp+var_210] +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
call sub_10A8ADB  +
cmp [ebp+var_210] 0 +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
jz loc_10A9478  +
push 2B63h  +
jmp loc_10A947D  +
push 2B5Dh  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jle loc_10A94A8  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1045501  +
mov ebx eax +
jmp loc_10A94A8  +
xor ebx ebx +
inc ebx  +
jmp loc_10A94A8  +
mov ebx 80004003h +
mov ecx [ebp+var_4] +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov [ebp+var_114] eax +
mov [ebp+var_118] ecx +
mov [ebp+var_108] 80070057h +
test eax eax +
jz loc_10A9580  +
lea eax [ebp+hKey] +
push eax  +
call sub_102F9FD  +
mov [ebp+var_108] eax +
test eax eax +
jl loc_10A9580  +
push ebx  +
xor ebx ebx +
mov [ebp+cbName] 80h +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
push ebx  +
push [ebp+hKey]  +
call ds:RegEnumKeyExW  +
test eax eax +
jnz loc_10A9564  +
push [ebp+var_118]  +
lea eax [ebp+Name] +
push eax  +
call [ebp+var_114]  +
mov ecx eax +
inc ebx  +
mov [ebp+cbName] 80h +
jmp loc_10A957B  +
xor ecx ecx +
cmp eax 103h +
jnz loc_10A9571  +
test ebx ebx +
jnz loc_10A957F  +
mov [ebp+var_108] 80004005h +
test ecx ecx +
jnz loc_10A951B  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_108] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
push 8  +
xor eax eax +
pop ecx  +
mov [ebp+String1] ax +
lea edi [ebp-26h] +
stos   +
push edx  +
stos   +
push 12h  +
lea eax [ebp+String1] +
push eax  +
call sub_100665F  +
mov edi eax +
test edi edi +
jl loc_10A9623  +
push esi  +
lea eax [ebp+String1] +
push 2Dh  +
push eax  +
call ds:__imp_wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
mov edi 80004005h +
test esi esi +
jz loc_10A9622  +
push 0FFFFFFFFh  +
push offset String2  +
xor eax eax +
push 0FFFFFFFFh  +
mov [esi] ax +
lea eax [ebp+String1] +
push eax  +
push 0  +
push 7Fh  +
call ds:CompareStringW  +
cmp eax 2 +
jnz loc_10A9622  +
add esi eax +
push esi  +
call ds:_wtoi  +
pop ecx  +
test eax eax +
jbe loc_10A9622  +
mov [ebx] eax +
xor edi edi +
pop esi  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 108h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov esi [ebp+hModule] +
push edi  +
mov edi [ebp+arg_8] +
push dword ptr [ebp+wLanguage]  +
mov [ebp+var_108] eax +
mov eax edi +
shr eax 4 +
inc eax  +
movzx eax ax +
push eax  +
push 6  +
push esi  +
mov ebx 80004005h +
call ds:FindResourceExW  +
test eax eax +
jz loc_10A9735  +
push eax  +
push esi  +
call ds:LoadResource  +
test eax eax +
jz loc_10A9735  +
push eax  +
call ds:LockResource  +
mov esi eax +
test esi esi +
jz loc_10A9735  +
xor eax eax +
push 0FEh  +
push eax  +
mov word ptr [ebp+var_104] ax +
lea eax [ebp+var_104+2] +
push eax  +
call memset  +
add esp 0Ch +
and edi 0Fh +
jbe loc_10A96E9  +
dec edi  +
movzx eax word ptr [esi] +
lea esi [esi+eax*2+2] +
jnz loc_10A96DF  +
movzx edi word ptr [esi] +
mov eax 80h +
cmp edi eax +
jnb loc_10A9735  +
add esi 2 +
push esi  +
push eax  +
lea eax [ebp+var_104] +
push eax  +
call sub_100665F  +
mov ebx eax +
test ebx ebx +
jge loc_10A9714  +
cmp ebx 8007007Ah +
jnz loc_10A9735  +
xor eax eax +
mov word ptr [ebp+edi*2+var_104] ax +
lea eax [ebp+var_104] +
push eax  +
push [ebp+arg_10]  +
push [ebp+var_108]  +
call sub_100665F  +
mov ebx eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_50] eax +
xor eax eax +
push 3Eh  +
push eax  +
mov word ptr [ebp+Data] ax +
lea eax [ebp-42h] +
push eax  +
mov [ebp+var_48] 80004005h +
call memset  +
add esp 0Ch +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push edi  +
push esi  +
mov [ebp+cbData] 40h +
call ds:RegQueryValueExW  +
pop edi  +
pop esi  +
test eax eax +
jnz loc_10A97CE  +
mov eax [ebp+arg_10] +
cmp eax 20h +
jb loc_10A97B5  +
push 20h  +
pop eax  +
xor ecx ecx +
mov word ptr [ebp+eax*2+var_48+2] cx +
lea eax [ebp+Data] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_50]  +
call sub_100665F  +
mov [ebp+var_48] eax +
mov ecx [ebp+var_4] +
mov eax [ebp+var_48] +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 12h  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10A974D  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 348h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+hKey] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov [ebp+var_334] eax +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+lpValueName] eax +
xor eax eax +
xor edi edi +
push 0FEh  +
mov word ptr [ebp+Data] ax +
lea eax [ebp+Data+2] +
push edi  +
push eax  +
mov esi 80004005h +
mov [ebp+var_338] edi +
call memset  +
xor eax eax +
add esp 0Ch +
mov [ebp+cbData] 100h +
mov [ebx] ax +
cmp dword_10B3FC0 edi +
jnz loc_10A9998  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
mov dword_10B3FC0 1 +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_10A9988  +
push offset aTzres_dll  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
call sub_107BEA8  +
test eax eax +
jl loc_10A9988  +
push dword ptr [ebp+wLanguage]  +
lea eax [ebp+Buffer] +
push 8  +
push eax  +
call sub_10AA3CF  +
mov [ebp+hModule] eax +
cmp eax edi +
jz loc_10A9988  +
and dword_10B3FC0 0 +
push 8  +
pop ecx  +
xor eax eax +
mov word ptr [ebp+var_28] ax +
lea edi [ebp+var_28+2] +
stos   +
push 12h  +
stos   +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_334]  +
mov [ebp+var_338] 1 +
push [ebp+hKey]  +
call sub_10A97E4  +
mov esi eax +
test esi esi +
jl loc_10A997B  +
lea eax [ebp+var_334] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
call sub_10A9599  +
mov esi eax +
test esi esi +
jl loc_10A997B  +
push 80h  +
lea eax [ebp+Data] +
push eax  +
push [ebp+var_334]  +
push dword ptr [ebp+wLanguage]  +
push [ebp+hModule]  +
call sub_10A9655  +
mov esi eax +
test esi esi +
jl loc_10A997B  +
lea eax [ebp+Data] +
push eax  +
push [ebp+arg_14]  +
push ebx  +
call sub_100665F  +
mov esi eax +
xor eax eax +
test esi esi +
setl al  +
mov [ebp+var_338] eax +
push [ebp+hModule]  +
call sub_10AA25E  +
xor edi edi +
cmp dword_10B3FC0 edi +
jnz loc_10A9998  +
cmp [ebp+var_338] edi +
jz loc_10A99DE  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push [ebp+lpValueName]  +
mov esi 80004005h +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_10A99DE  +
lea eax [ebp+Data] +
push eax  +
push [ebp+arg_14]  +
push ebx  +
call sub_100665F  +
mov esi eax +
cmp esi edi +
jl loc_10A99DE  +
mov esi 40203h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
lea eax [ebp-48h] +
push eax  +
push edi  +
push dword ptr [esi+10h]  +
xor ebx ebx +
inc ebx  +
call sub_10306E3  +
test eax eax +
jl loc_10A9AAE  +
xor eax eax +
push 3Eh  +
push eax  +
mov [ebp-44h] ax +
lea eax [ebp-42h] +
push eax  +
call memset  +
add esp 0Ch +
push 20h  +
lea eax [ebp-44h] +
push eax  +
push offset aStd  +
push offset aMui_std  +
push 400h  +
push dword ptr [ebp-48h]  +
call sub_10A9805  +
test eax eax +
jl loc_10A9AA5  +
push 0FFFFFFFFh  +
push dword ptr [esi+0Ch]  +
lea eax [ebp-44h] +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 7Fh  +
call ds:CompareStringW  +
cmp eax 2 +
jnz loc_10A9AA5  +
push edi  +
push dword ptr [esi+8]  +
xor ebx ebx +
push dword ptr [esi+4]  +
call sub_100665F  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [esi] ecx +
push dword ptr [ebp-48h]  +
call ds:RegCloseKey  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C4h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
mov [edi] ax +
lea eax [ebp+TimeZoneInformation] +
push eax  +
mov esi 80004005h +
call ds:GetTimeZoneInformation  +
cmp eax 0FFFFFFFFh +
jz loc_10A9B7A  +
cmp [ebp+TimeZoneInformation.StandardName] 0 +
jz loc_10A9B7A  +
mov eax [ebp+arg_8] +
and [ebp+var_C4] 0 +
mov [ebp+var_BC] eax +
lea eax [ebp+TimeZoneInformation.StandardName] +
mov [ebp+var_B8] eax +
lea eax [ebp+var_C4] +
push eax  +
push offset loc_10A9A0F  +
mov [ebp+var_B4] ebx +
mov [ebp+var_C0] edi +
call sub_10A94BF  +
mov esi eax +
test esi esi +
jl loc_10A9B7A  +
mov esi [ebp+var_C4] +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+wLanguage]  +
push 1  +
push offset Type  +
push [ebp+hModule]  +
call ds:FindResourceExW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+hModule]  +
call sub_10A9B92  +
test eax eax +
jz loc_10A9BDA  +
push eax  +
push [ebp+hModule]  +
call ds:LoadResource  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hModule] 0 +
push esi  +
jz loc_10A9C38  +
cmp [ebp+arg_4] 0 +
jz loc_10A9C38  +
push [ebp+hModule]  +
call sub_10A9BBD  +
push [ebp+arg_4]  +
mov esi eax +
call sub_10A9BBD  +
test esi esi +
jz loc_10A9C30  +
test eax eax +
jz loc_10A9C30  +
mov ecx 0FECDFECDh +
cmp [esi] ecx +
jnz loc_10A9C38  +
cmp [eax] ecx +
jnz loc_10A9C38  +
push edi  +
push 4  +
lea edi [eax+1Ch] +
add esi 1Ch +
pop ecx  +
xor eax eax +
cmps   +
pop edi  +
jnz loc_10A9C38  +
inc eax  +
jmp loc_10A9C3A  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+lpLibFileName] esi +
jnz loc_10A9C57  +
xor eax eax +
jmp loc_10A9CC5  +
cmp [ebp+arg_4] esi +
jz loc_10A9CB2  +
push esi  +
push esi  +
push 3  +
push esi  +
push 5  +
push 80000000h  +
push [ebp+lpLibFileName]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10A9C53  +
push esi  +
push esi  +
push esi  +
push 8  +
push esi  +
push edi  +
call ds:CreateFileMappingW  +
push edi  +
mov edi ds:CloseHandle +
mov ebx eax +
call edi  +
cmp ebx esi +
jz loc_10A9C53  +
push esi  +
push esi  +
push esi  +
push 1  +
push ebx  +
call ds:MapViewOfFile  +
push ebx  +
mov [ebp+lpLibFileName] eax +
call edi  +
mov eax [ebp+lpLibFileName] +
cmp eax esi +
jz loc_10A9C53  +
or eax 1 +
jmp loc_10A9CC5  +
xor eax eax +
cmp [ebp+arg_8] esi +
setnz al  +
push eax  +
push esi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
xor edi edi +
cmp dword_10B3FC4 edi +
jnz loc_10A9DED  +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
mov [ebp+VersionInformation.dwOSVersionInfoSize] esi +
mov esi ds:GetVersionExW +
push eax  +
call esi  +
test eax eax +
jnz loc_10A9D38  +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call esi  +
mov eax [ebp+VersionInformation.dwPlatformId] +
dec eax  +
mov dword_10B3FC4 edi +
pop esi  +
jz loc_10A9DC0  +
dec eax  +
jnz loc_10A9DED  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
jnz loc_10A9DAD  +
mov eax [ebp+VersionInformation.dwMinorVersion] +
sub eax edi +
jz loc_10A9DA1  +
dec eax  +
jz loc_10A9D8E  +
dec eax  +
jz loc_10A9D74  +
mov dword_10B3FC4 14h +
jmp loc_10A9DED  +
cmp [ebp+var_C] 1 +
jb loc_10A9D85  +
mov dword_10B3FC4 10h +
or dword_10B3FC4 4 +
jmp loc_10A9DED  +
cmp [ebp+var_C] 2 +
jb loc_10A9D85  +
mov dword_10B3FC4 8 +
jmp loc_10A9D85  +
mov dword_10B3FC4 4 +
jmp loc_10A9DED  +
cmp [ebp+VersionInformation.dwMajorVersion] 4 +
ja loc_10A9DFF  +
mov dword_10B3FC4 2 +
cmp [ebp+VersionInformation.dwMajorVersion] 4 +
jnz loc_10A9DED  +
cmp [ebp+VersionInformation.dwMinorVersion] edi +
jz loc_10A9DE3  +
cmp [ebp+VersionInformation.dwMinorVersion] 0Ah +
jz loc_10A9DE3  +
cmp [ebp+VersionInformation.dwMinorVersion] 5Ah +
jnz loc_10A9DED  +
mov dword_10B3FC4 1 +
mov ecx [ebp+var_4] +
mov eax dword_10B3FC4 +
xor ecx ebp +
pop edi  +
call sub_1001FEB  +
leave   +
retn   +
mov dword_10B3FC4 20h +
jmp loc_10A9DED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 20h  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
push 404h  +
mov esi 0C04h +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_10A9E64  +
push 3  +
lea eax [ebp+LCData] +
push offset word_10A9E74  +
push eax  +
call wcsncmp  +
add esp 0Ch +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 0FFFFF800h +
add esi 0C04h +
mov ecx [ebp+var_4] +
mov ax si +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
cmp ax word_10B3FC8 +
jnz loc_10A9F1A  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
xor esi esi +
push esi  +
push offset aSoftwareMic_43  +
push 80000002h  +
mov [ebp+cbData] 6 +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10A9F19  +
push edi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset aLocale  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
mov edi eax +
call ds:RegCloseKey  +
cmp edi esi +
pop edi  +
jnz loc_10A9F19  +
push 3  +
push ds:off_10A9F30[esi*8]  +
lea eax [ebp+Data] +
push eax  +
call _wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_10A9F0B  +
inc esi  +
cmp esi 1Ch +
jnb loc_10A9F19  +
jmp loc_10A9EEA  +
mov ax ds:word_10A9F34[esi*8] +
mov word_10B3FC8 ax +
pop esi  +
mov ecx [ebp+var_4] +
mov ax word_10B3FC8 +
xor ecx ebp +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jz loc_10AA199  +
cmp [ebp+arg_0] ebx +
jz loc_10AA199  +
cmp [ebp+arg_4] ebx +
jz loc_10AA199  +
push esi  +
movzx eax word ptr [edi] +
lea ecx [eax-61h] +
cmp cx 19h +
ja loc_10AA115  +
movzx eax ax +
sub eax 61h +
jmp loc_10AA124  +
lea ecx [eax-41h] +
cmp cx 19h +
ja loc_10AA14E  +
movzx eax ax +
sub eax 41h +
cmp eax 1Ah +
jnb loc_10AA14E  +
mov esi ds:dword_10AA1A0[eax*4] +
test esi esi +
jnz loc_10AA146  +
jmp loc_10AA14E  +
push eax  +
push edi  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10AA159  +
add esi 8 +
mov eax [esi] +
cmp word ptr [eax] 0 +
jnz loc_10AA136  +
mov edi [ebp+arg_0] +
inc ebx  +
cmp ebx 2 +
jge loc_10AA198  +
jmp loc_10AA101  +
mov esi [esi+4] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10AA161  +
sub eax edx +
sar eax 1 +
cmp eax 55h +
jnb loc_10AA198  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10AA179  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call memcpy  +
add esp 0Ch +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test esi esi +
jz loc_10AA253  +
cmp [ebp+arg_4] 0 +
jz loc_10AA253  +
push 2  +
push 55h  +
push esi  +
push [ebp+arg_0]  +
call sub_10AAC67  +
test eax eax +
jz loc_10AA253  +
push 2  +
push 55h  +
push [ebp+arg_4]  +
push esi  +
call sub_10AAD0D  +
test edi edi +
jz loc_10AA24E  +
xor eax eax +
push edi  +
push [ebp+arg_4]  +
mov [edi] ax +
mov eax esi +
call sub_10AA0DB  +
xor eax eax +
inc eax  +
jmp loc_10AA255  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:__imp_FreeLibrary  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_10AA290  +
xor eax eax +
jmp loc_10AA2FB  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+LibFileName] +
push 104h  +
push eax  +
xor ebx ebx +
call sub_107ED62  +
test eax eax +
jl loc_10AA2F8  +
push esi  +
call sub_10A9CD1  +
mov esi eax +
and esi 26h +
call sub_10A9CD1  +
and eax 38h +
push esi  +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_10A9C44  +
mov ebx eax +
pop esi  +
test ebx ebx +
jz loc_10AA2F8  +
push ebx  +
push edi  +
call sub_10A9BE3  +
test eax eax +
jnz loc_10AA2F8  +
push ebx  +
test bl 1 +
jz loc_10AA2F0  +
call ds:UnmapViewOfFile  +
jmp loc_10AA2F6  +
call ds:__imp_FreeLibrary  +
xor ebx ebx +
mov eax ebx +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_1001FEB  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test eax eax +
jz loc_10AA368  +
test ecx ecx +
jz loc_10AA368  +
cmp dword ptr [ebp+arg_0] 0 +
push eax  +
jz loc_10AA34C  +
test edx edx +
jz loc_10AA339  +
push edx  +
push dword ptr [ebp+arg_0]  +
push offset aSSS_mui  +
push ecx  +
call sub_10AA26F  +
add esp 14h +
jmp loc_10AA36A  +
push dword ptr [ebp+arg_0]  +
push offset aSS_mui  +
push ecx  +
call sub_10AA26F  +
add esp 10h +
jmp loc_10AA36A  +
test edx edx +
jz loc_10AA358  +
push edx  +
push offset a_SS_mui  +
jmp loc_10AA341  +
push offset a_S_mui  +
push ecx  +
call sub_10AA26F  +
add esp 0Ch +
jmp loc_10AA36A  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+lpLibFileName] esi +
mov [ebp+FilePart] ebx +
cmp esi ebx +
jnz loc_10AA402  +
xor eax eax +
jmp loc_10AAB5B  +
test [ebp+arg_4] 0FFFFFFE3h +
jnz loc_10AA3FB  +
push edi  +
mov edi dword ptr [ebp+wLanguage] +
cmp di bx +
jnz loc_10AA41E  +
test byte ptr [ebp+arg_4] 10h +
jnz loc_10AAA88  +
call sub_10A9CD1  +
mov dword_10B3FCC eax +
movzx eax al +
and eax 20h +
or eax 2 +
push eax  +
push 0  +
push esi  +
call ds:LoadLibraryExW  +
mov [ebp+hModule] eax +
test eax eax +
jz loc_10AAA88  +
test byte ptr dword_10B3FCC 20h +
jnz loc_10AAB5A  +
lea eax [ebp+FilePart] +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
push 104h  +
push 0  +
push esi  +
push 0  +
call ds:SearchPathW  +
test eax eax +
jz loc_10AAA7C  +
mov eax [ebp+FilePart] +
test eax eax +
jnz loc_10AA49A  +
and dword ptr [ebp+var_41C] ebx +
lea eax [ebp+LibFileName] +
mov [ebp+FilePart] eax +
jmp loc_10AA4AC  +
lea ecx [ebp+LibFileName] +
mov dword ptr [ebp+var_41C] ecx +
xor ecx ecx +
mov [eax-2] cx +
push 0  +
push [ebp+hModule]  +
call sub_10A9B92  +
test eax eax +
jz loc_10AAA64  +
test di di +
jnz loc_10AAA3C  +
mov al byte ptr dword_10B3FCC +
test al 4 +
jz loc_10AA84B  +
call ds:GetUserDefaultUILanguage  +
movzx eax ax +
mov ecx 404h +
mov [ebp+var_420] eax +
cmp ax cx +
jnz loc_10AA4FE  +
call sub_10A9E10  +
movzx eax ax +
mov [ebp+var_420] eax +
mov eax [ebp+arg_4] +
and eax 8 +
mov [ebp+var_424] eax +
cmp [ebp+var_424] 0 +
jz loc_10AA5D4  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_420]  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
test eax eax +
jz loc_10AAAC8  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
cmp word ptr [ebp+var_208] ax +
jz loc_10AA5B3  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
mov eax 0C04h +
cmp word ptr [ebp+var_420] ax +
jnz loc_10AA77F  +
mov [ebp+var_420] 404h +
jmp loc_10AA50A  +
movzx eax word ptr [ebp+var_420] +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_10343CA  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_420]  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
test eax eax +
jz loc_10AA686  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_10AABFF  +
movzx eax ax +
test ax ax +
jz loc_10AA686  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_10343CA  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
mov eax 0C04h +
cmp word ptr [ebp+var_420] ax +
jz loc_10AA5C5  +
call ds:GetSystemDefaultUILanguage  +
movzx esi ax +
mov [ebp+var_424] esi +
cmp si word ptr [ebp+var_420] +
jz loc_10AA763  +
movzx eax si +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_10343CA  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
lea eax [ebp+var_15C] +
push eax  +
push esi  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
test eax eax +
jz loc_10AA75D  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_10AABFF  +
movzx eax ax +
test ax ax +
jz loc_10AA75D  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_10343CA  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
mov esi [ebp+var_424] +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_420] +
jz loc_10AAA14  +
cmp ax si +
jmp loc_10AA9EC  +
call ds:GetSystemDefaultUILanguage  +
movzx eax ax +
mov [ebp+var_424] eax +
cmp ax word ptr [ebp+var_420] +
jz loc_10AA832  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
test eax eax +
jz loc_10AAA64  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
cmp word ptr [ebp+var_208] ax +
jz loc_10AA832  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_420] +
jnz loc_10AA909  +
jmp loc_10AAA14  +
test al 3 +
jz loc_10AAA64  +
call sub_10A9E7F  +
test byte ptr [ebp+arg_4] 8 +
movzx eax ax +
mov [ebp+var_424] eax +
jz loc_10AA932  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
test eax eax +
jz loc_10AAA64  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
cmp word ptr [ebp+var_208] ax +
jz loc_10AA902  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_424] +
jz loc_10AAA14  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
mov edx esi +
jmp loc_10AA9F3  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_10343CA  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_424]  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
test eax eax +
jz loc_10AA9E0  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_10AABFF  +
movzx eax ax +
test ax ax +
jz loc_10AA9E0  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_10343CA  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
mov eax 409h +
cmp ax word ptr [ebp+var_424] +
jz loc_10AAA14  +
mov edx offset aMui0409 +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jnz loc_10AAACC  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
xor edx edx +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jz loc_10AAAC8  +
jmp loc_10AAACC  +
test byte ptr dword_10B3FCC 7 +
jz loc_10AAA64  +
test byte ptr [ebp+arg_4] 8 +
jz loc_10AAA8F  +
lea eax [ebp+var_15C] +
push eax  +
push edi  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10AA20D  +
test eax eax +
jnz loc_10AAAA9  +
test byte ptr [ebp+arg_4] 10h +
jz loc_10AAADC  +
push dword ptr [ebp+wLanguage]  +
push [ebp+hModule]  +
call sub_10A9B92  +
test eax eax +
jnz loc_10AAADC  +
push [ebp+hModule]  +
call ds:__imp_FreeLibrary  +
xor eax eax +
jmp loc_10AAB5A  +
movzx eax di +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_10343CA  +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_B0] +
call sub_10AA30D  +
mov ebx eax +
test ebx ebx +
jz loc_10AAA64  +
push [ebp+hModule]  +
call ds:__imp_FreeLibrary  +
mov eax ebx +
jmp loc_10AAB5A  +
test byte ptr [ebp+hModule] 1 +
jz loc_10AAB54  +
push [ebp+hModule]  +
call ds:__imp_FreeLibrary  +
call sub_10A9CD1  +
test al 38h +
jz loc_10AAB31  +
push [ebp+FilePart]  +
lea eax [ebp+LibFileName] +
push dword ptr [ebp+var_41C]  +
push offset aSS  +
push 104h  +
push eax  +
call sub_10343CA  +
add esp 14h +
push 0  +
push 1  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_10A9C44  +
jmp loc_10AAB4E  +
call sub_10A9CD1  +
push 0  +
and eax 26h +
pop eax  +
setnz al  +
push eax  +
push 0  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov [ebp+hModule] eax +
mov eax [ebp+hModule] +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
movzx eax word ptr [eax] +
movzx ecx word ptr [ecx] +
cmp cx ax +
jnz loc_10AABB3  +
xor eax eax +
pop ebp  +
retn   +
sbb eax eax +
and eax 2 +
dec eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 68h +
jnz loc_10AABF4  +
cmp word ptr [eax] 7Fh +
jz loc_10AABF4  +
xor eax eax +
inc eax  +
jmp loc_10AABF6  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10AAC54  +
test [ebp+arg_4] 0FFFFFFFDh +
jnz loc_10AAC54  +
push offset sub_10AABC0  +
push 8  +
push 163h  +
push offset off_106BC78  +
push [ebp+arg_0]  +
call bsearch  +
add esp 14h +
test eax eax +
jz loc_10AAC54  +
mov ecx [eax+4] +
imul ecx ecx +
add ecx offset dword_106ABC0 +
test byte ptr [ebp+arg_4] 2 +
jnz loc_10AAC4F  +
push ecx  +
call sub_10AABDB  +
test eax eax +
jnz loc_10AAC54  +
mov ax [ecx] +
jmp loc_10AAC5E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push esi  +
push edi  +
jl loc_10AACF8  +
cmp [ebp+arg_4] 0 +
jnz loc_10AAC84  +
cmp [ebp+arg_8] 0 +
jnz loc_10AACF8  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_10AACF8  +
push offset sub_10AAB99  +
push 0Ch  +
push 164h  +
lea eax [ebp+arg_0] +
push offset dword_106ABC0  +
push eax  +
call bsearch  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_10AACF8  +
test byte ptr [ebp+arg_C] 2 +
jnz loc_10AACC0  +
push ecx  +
call sub_10AABDB  +
test eax eax +
jnz loc_10AACF8  +
mov edi [ecx+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10AACC8  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_4] 0 +
lea esi [eax+1] +
jz loc_10AACF4  +
push esi  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101CD02  +
test eax eax +
jge loc_10AACF4  +
push 7Ah  +
jmp loc_10AACFA  +
mov eax esi +
jmp loc_10AAD02  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jz loc_10AADBB  +
cmp [ebp+arg_8] edi +
jle loc_10AAD30  +
cmp [ebp+arg_4] edi +
jz loc_10AADBB  +
cmp [ebp+arg_8] edi +
jl loc_10AADBB  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_10AADBB  +
push offset sub_10AABC0  +
push 8  +
push 163h  +
push offset off_106BC78  +
push [ebp+arg_0]  +
call bsearch  +
add esp 14h +
cmp eax edi +
jz loc_10AADBB  +
mov ecx [eax+4] +
imul ecx ecx +
mov edx offset dword_106ABC0 +
add ecx edx +
test byte ptr [ebp+arg_C] 2 +
jnz loc_10AAD7C  +
push ecx  +
call sub_10AABDB  +
test eax eax +
jnz loc_10AADBB  +
mov eax [ecx+8] +
imul eax eax +
add eax edx +
mov eax [eax+4] +
mov ecx eax +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
cmp si di +
jnz loc_10AAD8C  +
sub ecx edx +
sar ecx 1 +
lea esi [ecx+1] +
cmp [ebp+arg_4] edi +
jz loc_10AADB7  +
push esi  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101CD02  +
test eax eax +
jge loc_10AADB7  +
push 7Ah  +
jmp loc_10AADBD  +
mov eax esi +
jmp loc_10AADC5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 40h  +
call ds:LocalAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:LocalFree  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+pv] +
push eax  +
push 80028000h  +
push [ebp+pv]  +
xor esi esi +
call sub_107F3F0  +
test eax eax +
jl loc_10AAF94  +
push [ebp+pv]  +
call PathIsNetworkPathW  +
push [ebp+pv]  +
mov esi eax +
call CoTaskMemFree  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_1032CCC  +
xor edi edi +
mov eax [ebp+18h] +
mov [eax] edi +
mov eax [ebp+1Ch] +
mov [eax] edi +
mov eax [ebp+20h] +
mov [eax] edi +
mov [ebp-24h] edi +
mov [ebp-30h] edi +
mov [ebp-34h] edi +
xor esi esi +
mov [ebp-28h] esi +
mov [ebp-38h] edi +
mov [ebp-2Ch] edi +
mov ecx [ebp+14h] +
cmp ecx 14h +
jb loc_10AB0A2  +
mov edx [ebp+10h] +
cmp dword ptr [edx] 1 +
jnz loc_10AB0A2  +
mov eax [edx+4] +
cmp eax 1 +
jb loc_10AB0A2  +
cmp eax 0Ah +
jnb loc_10AB0A2  +
mov [ebp-1Ch] edi +
mov [ebp-4] edi +
lea eax [edx+0Bh] +
and eax 0FFFFFFFCh +
lea ebx [edx+ecx] +
mov [ebp-20h] edi +
mov ecx [ebp-20h] +
cmp ecx [edx+4] +
jnb loc_10AB07D  +
cmp eax edx +
jb loc_10AB076  +
lea ecx [ebx-8] +
cmp eax ecx +
ja loc_10AB076  +
mov ecx [eax+4] +
lea esi [ecx+eax+0Bh] +
and esi 0FFFFFFFCh +
cmp esi eax +
jb loc_10AB076  +
cmp esi ebx +
ja loc_10AB076  +
cmp ecx edi +
jz loc_10AB076  +
test cl 3 +
jnz loc_10AB076  +
mov edi [eax] +
test edi edi +
jnz loc_10AB04F  +
add eax 8 +
mov [ebp-24h] eax +
mov [ebp-30h] ecx +
jmp loc_10AB06D  +
cmp edi 1 +
jnz loc_10AB05F  +
add eax 8 +
mov [ebp-34h] eax +
mov [ebp-28h] ecx +
jmp loc_10AB06D  +
cmp edi 2 +
jnz loc_10AB06D  +
add eax 8 +
mov [ebp-38h] eax +
mov [ebp-2Ch] ecx +
mov eax esi +
inc dword ptr [ebp-20h]  +
xor edi edi +
jmp loc_10AB010  +
mov dword ptr [ebp-1Ch] 800703EEh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_10AB09D  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-1Ch] 800703EEh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
mov esi [ebp-28h] +
jmp loc_10AB0A9  +
mov dword ptr [ebp-1Ch] 800703EEh +
cmp [ebp-1Ch] edi +
jl loc_10AB109  +
mov eax [ebp-2Ch] +
add eax esi +
add eax [ebp-30h] +
cmp eax [ebp+14h] +
ja loc_10AB102  +
mov ebx [ebp-34h] +
cmp ebx edi +
jz loc_10AB102  +
cmp [ebp-24h] edi +
jz loc_10AB102  +
cmp [ebp+0Ch] edi +
jz loc_10AB0EE  +
push 0FFFFFFFFh  +
push dword ptr [ebp-24h]  +
push 0FFFFFFFFh  +
push dword ptr [ebp+0Ch]  +
push 1  +
push 7Fh  +
call ds:CompareStringW  +
cmp eax 2 +
jz loc_10AB0EE  +
mov dword ptr [ebp-1Ch] 80070002h +
jmp loc_10AB109  +
mov eax [ebp+18h] +
mov [eax] ebx +
mov eax [ebp+1Ch] +
mov [eax] esi +
mov eax [ebp-38h] +
mov ecx [ebp+20h] +
mov [ecx] eax +
jmp loc_10AB109  +
mov dword ptr [ebp-1Ch] 800703EEh +
mov eax [ebp-1Ch] +
call sub_10324BC  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 104h  +
lea eax [ebp+Dst] +
push eax  +
call sub_101A7CF  +
test eax eax +
jl loc_10AB189  +
push offset aGuest_bmp  +
push offset aMicrosoftUserA  +
lea eax [ebp+Dst] +
push eax  +
push offset aSSS  +
push [ebp+arg_4]  +
push esi  +
call sub_10343CA  +
add esp 18h +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
call sub_10AB139  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_10AB222  +
push edi  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_101D1C1  +
mov [ebp+var_210] eax +
test eax eax +
jl loc_10AB222  +
test ebx ebx +
jz loc_10AB222  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+arg_C]  +
push ebx  +
call sub_100665F  +
test eax eax +
jge loc_10AB222  +
xor eax eax +
mov [ebx] ax +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetMessagePos  +
mov ecx [ebp+arg_0] +
movsx edx ax +
shr eax 10h +
cwde   +
mov [ecx] edx +
mov [ecx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
call ds:GetTickCount  +
mov edi ds:PeekMessageW +
mov [ebp+var_4] eax +
xor esi esi +
push 6  +
push 4FFh  +
push [ebp+dwMilliseconds]  +
push esi  +
push esi  +
call ds:MsgWaitForMultipleObjectsEx  +
mov ebx eax +
cmp ebx esi +
jz loc_10AB2D7  +
jmp loc_10AB311  +
cmp dword ptr [ebp-1Ch] 12h +
jz loc_10AB2E8  +
lea eax [ebp+nExitCode] +
push eax  +
call ds:TranslateMessage  +
cmp dword ptr [ebp-1Ch] 20h +
jnz loc_10AB2CD  +
mov eax 0FFFEh +
cmp [ebp-14h] ax +
jz loc_10AB2CD  +
push 7F02h  +
push esi  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
jmp loc_10AB2D7  +
lea eax [ebp+nExitCode] +
push eax  +
call ds:DispatchMessageW  +
push 1  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+nExitCode] +
push eax  +
call edi  +
test eax eax +
jz loc_10AB2F6  +
jmp loc_10AB297  +
push dword ptr [ebp-18h]  +
call ds:PostQuitMessage  +
mov ebx 102h +
call ds:GetTickCount  +
sub eax [ebp+var_4] +
cmp eax [ebp+arg_8] +
jbe loc_10AB309  +
mov ebx 102h +
cmp ebx esi +
jz loc_10AB27D  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 160h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_120] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_18] +
mov [ebp+var_118] eax +
mov eax [ebp+arg_8] +
push esi  +
mov [ebp+var_10C] eax +
mov eax [ebp+arg_1C] +
push edi  +
mov edi [ebp+arg_14] +
mov [ebp+var_11C] eax +
call ds:CreatePopupMenu  +
mov esi eax +
mov [ebp+hMenu] esi +
neg esi  +
sbb esi esi +
and esi 7FF8FFF2h +
add esi 8007000Eh +
js loc_10AB51B  +
xor esi esi +
cmp [ebp+var_118] esi +
jz loc_10AB3A0  +
push [ebp+var_118]  +
push [ebp+var_10C]  +
call IUnknown_SetSite  +
mov [ebp+pv] esi +
cmp edi esi +
jz loc_10AB3D9  +
lea eax [ebp+pv] +
push eax  +
push edi  +
call SHStrDupA  +
test eax eax +
jl loc_10AB3CF  +
push 1  +
lea eax [ebp+pv] +
push eax  +
push [ebp+var_10C]  +
call sub_107C26B  +
mov eax [ebp+arg_10] +
or eax 800h +
jmp loc_10AB3DF  +
mov eax [ebp+arg_10] +
or eax 1 +
mov ecx [ebp+var_10C] +
mov edx [ecx] +
push eax  +
push 7FFFh  +
push 1  +
push esi  +
push [ebp+hMenu]  +
push ecx  +
call dword ptr [edx+0Ch]  +
mov esi eax +
test esi esi +
jl loc_10AB4EE  +
test edi edi +
jnz loc_10AB41F  +
push edi  +
push edi  +
push [ebp+hMenu]  +
call ds:GetMenuDefaultItem  +
cmp eax 0FFFFFFFFh +
jz loc_10AB44E  +
dec eax  +
movzx edi ax +
push 3Ch  +
lea eax [ebp+var_15C] +
push 0  +
push eax  +
mov [ebp+var_160] 40h +
call memset  +
mov ecx [ebp+pv] +
add esp 0Ch +
test ecx ecx +
jnz loc_10AB458  +
test ebx ebx +
jnz loc_10AB458  +
xor eax eax +
jmp loc_10AB45D  +
mov esi 80004005h +
jmp loc_10AB4EE  +
mov eax 4000h +
or eax [ebp+arg_C] +
mov [ebp+var_154] edi +
mov [ebp+var_15C] eax +
mov eax [ebp+var_120] +
mov [ebp+var_158] eax +
mov eax [ebp+var_11C] +
mov [ebp+var_148] 1 +
mov [ebp+var_130] ebx +
mov [ebp+var_138] ecx +
test eax eax +
jz loc_10AB4B3  +
mov ecx [eax] +
mov eax [eax+4] +
or [ebp+var_15C] 20000000h +
mov [ebp+var_128] ecx +
mov [ebp+var_124] eax +
test ebx ebx +
jz loc_10AB4D9  +
push 104h  +
lea eax [ebp+var_108] +
push eax  +
push ebx  +
call SHUnicodeToAnsi  +
test eax eax +
jl loc_10AB4D9  +
lea eax [ebp+var_108] +
mov [ebp+var_14C] eax +
mov eax [ebp+var_10C] +
mov ecx [eax] +
lea edx [ebp+var_160] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp [ebp+var_118] 0 +
jz loc_10AB504  +
push 0  +
push [ebp+var_10C]  +
call IUnknown_SetSite  +
push [ebp+pv]  +
call CoTaskMemFree  +
push [ebp+hMenu]  +
call ds:DestroyMenu  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [ebp-0Ch] +
push eax  +
push offset stru_1069038  +
push dword ptr [esi]  +
call CoGetInterfaceAndReleaseStream  +
xor edi edi +
cmp eax edi +
mov [esi] edi +
jl loc_10AB60A  +
mov eax [esi+0Ch] +
mov [ebp-8] edi +
cmp eax edi +
jz loc_10AB571  +
lea ecx [ebp-8] +
push ecx  +
push eax  +
push edi  +
call sub_107FD2A  +
mov eax [ebp-0Ch] +
lea edx [ebp-4] +
push edx  +
push offset dword_1011ED0  +
push offset dword_1068F1C  +
push dword ptr [ebp-8]  +
mov [ebp-4] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax edi +
jl loc_10AB5F8  +
mov ecx [esi+4] +
mov [ebp+8] edi +
cmp ecx edi +
jz loc_10AB5AE  +
lea eax [ebp+8] +
push eax  +
push offset stru_1002CB4  +
push ecx  +
call CoGetInterfaceAndReleaseStream  +
mov [esi+4] edi +
cmp eax edi +
jl loc_10AB5EF  +
lea eax [esi+1Ch] +
push eax  +
push dword ptr [esi+18h]  +
push dword ptr [esi+8]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+8]  +
push dword ptr [esi+0Ch]  +
call sub_10AB31F  +
test eax eax +
jl loc_10AB5E6  +
push 3A98h  +
push 1388h  +
push dword ptr [esi+0Ch]  +
call sub_10AB261  +
lea eax [ebp+8] +
push eax  +
call sub_1002BEE  +
mov eax [ebp-4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp-8] +
push eax  +
call sub_1002BEE  +
mov eax [ebp-0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
call sub_1002BEE  +
lea eax [esi+4] +
push eax  +
call sub_1002BEE  +
push dword ptr [esi+8]  +
call CoTaskMemFree  +
push dword ptr [esi+18h]  +
call CoTaskMemFree  +
push esi  +
call CoTaskMemFree  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 24h  +
push 1  +
xor edi edi +
push edi  +
call sub_100EA56  +
mov ebx eax +
cmp ebx edi +
jl loc_10AB76B  +
push esi  +
mov esi [ebp+var_4] +
cmp [ebp+lpWideCharStr] edi +
jz loc_10AB67B  +
lea eax [esi+8] +
push eax  +
push edi  +
push [ebp+lpWideCharStr]  +
call sub_107C6CB  +
mov edi [ebp+arg_10] +
mov ebx eax +
jmp loc_10AB681  +
mov edi [ebp+arg_10] +
or edi 1 +
test ebx ebx +
jl loc_10AB741  +
cmp [ebp+arg_18] 0 +
jz loc_10AB69D  +
lea eax [esi+18h] +
push eax  +
push [ebp+arg_18]  +
call sub_100EBA2  +
mov ebx eax +
test ebx ebx +
jl loc_10AB741  +
push esi  +
push [ebp+pUnk]  +
push offset stru_1069038  +
call CoMarshalInterThreadInterfaceInStream  +
mov ebx eax +
test ebx ebx +
jl loc_10AB741  +
cmp [ebp+arg_4] 0 +
jz loc_10AB6D6  +
lea eax [esi+4] +
push eax  +
push [ebp+arg_4]  +
push offset stru_1002CB4  +
call CoMarshalInterThreadInterfaceInStream  +
mov ebx eax +
test ebx ebx +
jl loc_10AB741  +
mov eax [ebp+arg_0] +
mov [esi+0Ch] eax +
mov eax [ebp+arg_C] +
or eax 4000100h +
mov [esi+10h] eax +
lea eax [esi+1Ch] +
or edi 800h +
push eax  +
mov [esi+14h] edi +
call sub_10AB23E  +
push 0  +
push 2Ah  +
push esi  +
mov edi offset loc_10AB533 +
push edi  +
call SHCreateThread  +
test eax eax +
jz loc_10AB715  +
xor ebx ebx +
jmp loc_10AB73F  +
call sub_101AE40  +
mov ebx eax +
cmp ebx 80070057h +
jnz loc_10AB73B  +
xor ebx ebx +
push ebx  +
push 28h  +
push esi  +
push edi  +
call SHCreateThread  +
test eax eax +
jnz loc_10AB73F  +
call sub_101AE40  +
mov ebx eax +
test ebx ebx +
jl loc_10AB741  +
xor esi esi +
test esi esi +
jz loc_10AB76A  +
push esi  +
call sub_1002BEE  +
lea eax [esi+4] +
push eax  +
call sub_1002BEE  +
push dword ptr [esi+8]  +
call CoTaskMemFree  +
push dword ptr [esi+18h]  +
call CoTaskMemFree  +
push esi  +
call CoTaskMemFree  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+String] +
xor eax eax +
cmp word ptr [edi] 0 +
jz loc_10AB7D9  +
xor ebx ebx +
xor esi esi +
cmp esi 38h +
jnb loc_10AB7BB  +
mov cx [edi] +
cmp cx ds:word_10AB7E0[esi] +
jnz loc_10AB7B4  +
mov eax ds:off_10AB7E4[esi] +
mov ecx [ebp+arg_4] +
push 0FFFFFFFFh  +
xor ebx ebx +
push eax  +
inc ebx  +
call sub_107EED7  +
add esi 8 +
test ebx ebx +
jz loc_10AB78F  +
test ebx ebx +
jnz loc_10AB7D3  +
movzx eax word ptr [edi] +
mov ecx [ebp+arg_4] +
mov dword ptr [ebp+String] eax +
push 1  +
lea eax [ebp+String] +
push eax  +
call sub_107EED7  +
inc edi  +
inc edi  +
test eax eax +
jge loc_10AB785  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 454h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+var_418] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push offset aOpen_0  +
push offset aHttp_0  +
push 2  +
push 0  +
mov [ebp+var_418] 104h +
call AssocQueryStringW  +
mov ebx eax +
test ebx ebx +
jl loc_10AB8D3  +
push edi  +
push offset a?S  +
lea eax [ebp+var_414] +
push 104h  +
push eax  +
call sub_10343CA  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
call memset  +
lea eax [ebp+var_20C] +
mov [ebp+ExecInfo.lpFile] eax +
lea eax [ebp+var_414] +
mov [ebp+ExecInfo.lpParameters] eax +
add esp 1Ch +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.nShow] 1 +
call ShellExecuteExW  +
test eax eax +
jnz loc_10AB8D3  +
mov ebx 80004005h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 20E0h +
call sub_10545E1  +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov [ebp+var_20A4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_2098] eax +
lea eax [ebp+var_209C] +
push eax  +
lea eax [ebp+First] +
push eax  +
push 0  +
push 0FFFFh  +
push offset aInternetexte_0  +
push offset aSoftwareMic_10  +
mov esi 80004005h +
mov [ebp+var_209C] 1048h +
call SHRegGetValueFromHKCUHKLM  +
test eax eax +
jnz loc_10ABA7A  +
push ebx  +
push edi  +
mov edi ds:lstrlenW +
mov ebx offset aHttp_1 +
push ebx  +
call edi  +
push eax  +
push ebx  +
lea eax [ebp+First] +
push eax  +
call StrCmpNICW  +
test eax eax +
jz loc_10AB9AE  +
mov ebx offset aHttps +
push ebx  +
call edi  +
push eax  +
push ebx  +
lea eax [ebp+First] +
push eax  +
call StrCmpNICW  +
test eax eax +
jnz loc_10ABA78  +
mov ebx offset Srch +
push ebx  +
lea eax [ebp+First] +
push eax  +
call StrStrIW  +
mov [ebp+var_20A0] eax +
test eax eax +
jz loc_10ABA78  +
lea ecx [ebp+First] +
sub eax ecx +
sar eax 1 +
push eax  +
mov eax ecx +
push eax  +
mov esi 824h +
push esi  +
lea eax [ebp+var_2094] +
push eax  +
call sub_101CD02  +
push [ebp+var_20A4]  +
lea eax [ebp+var_2094] +
push esi  +
push eax  +
call sub_1010E3B  +
push ebx  +
call edi  +
mov ecx [ebp+var_20A0] +
lea eax [ecx+eax*2] +
push eax  +
push esi  +
lea eax [ebp+var_2094] +
push eax  +
call sub_1010E3B  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+var_2098] +
mov [ebp+ExecInfo.hwnd] eax +
lea eax [ebp+var_2094] +
mov [ebp+ExecInfo.lpFile] eax +
add esp 0Ch +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.nShow] 1 +
call ShellExecuteExW  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1001FEB  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D0h +
mov eax dword_10B1090 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
dec eax  +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov dword ptr [ebp+String] ecx +
mov esi 80004005h +
jz loc_10ABB30  +
dec eax  +
jz loc_10ABBE5  +
dec eax  +
jz loc_10ABBDC  +
dec eax  +
jnz loc_10ABBCA  +
lea ecx [ebp+var_90] +
call sub_107EC95  +
push 0FFFFFFFFh  +
push offset aSearchQuery  +
lea ecx [ebp+var_90] +
call sub_107EEB3  +
mov esi eax +
test esi esi +
jl loc_10ABBBF  +
lea eax [ebp+var_90] +
push eax  +
push dword ptr [ebp+String]  +
call sub_10AB778  +
mov esi eax +
test esi esi +
jl loc_10ABBBF  +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+var_C] +
mov [ebp+ExecInfo.lpFile] eax +
add esp 0Ch +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.hwnd] ebx +
mov [ebp+ExecInfo.nShow] 1 +
call ShellExecuteExW  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FFFBFFBh +
add esi 80004005h +
lea ecx [ebp+var_90] +
call sub_107ECB2  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1001FEB  +
leave   +
retn 0Ch  +
push ebx  +
push ecx  +
call sub_10AB907  +
jmp loc_10ABBEB  +
push ecx  +
call sub_10AB81D  +
mov esi eax +
jmp loc_10ABBCA  +
***
mov eax offset __imp_GetRoleTextW +
jmp loc_10531E4  +
***
cld   +
call dword ptr [eax-6F6F6F70h]  +
mov eax dword_10B3D58 +
test eax eax +
jz locret_10ABC77  +
push eax  +
call sub_1002BCA  +
pop ecx  +
retn   +
***
inc eax  +
retn   +
***
pop esi  +
cld   +
or al [eax] +
jo loc_10ACF02  +
or al [eax] +
cmp ah 0Ah +
add [eax-47FFF504h] bl +
cld   +
or al [eax] +
enter 0AFCh 0 +
fdiv st(4) st +
or al [eax] +
cld   +
***
imul eax [eax] +
or eax [eax] +
retn 0B00h  +
***
retf   +
***
retf   +
***
jb $+2  +
iret   +
***
mov esi 705F5F00h +
pop edi  +
pop edi  +
ins  dx +
outs   +
add gs:[eax] al +
jmp far ptr 7063h:6D656D04h  +
***
retf   +
***
retn 5300h  +
***
