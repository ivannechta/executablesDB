push edx  +
push ebx  +
inc esp  +
push ebx  +
retn 5FBFh  +
***
push 0EA61h  +
push 0  +
call sub_101C7AC  +
add esp 10h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp+var_4] 0 +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
mov esi ecx +
call sub_101E123  +
mov edi eax +
test edi edi +
jge loc_1019C28  +
push offset aFailedToDuplic  +
jmp loc_1019C3E  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov edi eax +
test edi edi +
jge loc_1019C50  +
push offset aFailedToAddThe  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_1019C54  +
and dword ptr [ebp+var_4] 0 +
cmp dword ptr [ebp+var_4] 0 +
jz loc_1019C62  +
push dword ptr [ebp+var_4]  +
call sub_101DB34  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov eax 80004002h +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+10h] +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
push edi  +
test eax eax +
jnz loc_1019CB5  +
push offset aInvalidArgumen  +
mov eax 80070057h +
push 1  +
push eax  +
push 4000000h  +
mov [ebp-4] eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_1019CF6  +
and dword ptr [eax] 0 +
mov edx [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi edx +
mov esi offset dword_10012E8 +
xor ebx ebx +
cmps   +
jz loc_1019CEB  +
push 4  +
pop ecx  +
mov edi edx +
mov esi offset dword_1019B44 +
xor ebx ebx +
cmps   +
jz loc_1019CEB  +
push 4  +
pop ecx  +
mov edi edx +
mov esi offset dword_10012D8 +
xor ebx ebx +
cmps   +
jnz loc_1019CFB  +
mov ecx [ebp+8] +
mov [eax] ecx +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
mov eax [ebp-4] +
jmp loc_1019D05  +
mov ecx [ebp+8] +
mov esi [ecx] +
push eax  +
push edx  +
call dword ptr [esi+18h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
add esi 4 +
push esi  +
call ds:InterlockedIncrement  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jg loc_1019D5E  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+10h]  +
mov dword ptr [esi] offset off_1001314 +
call ds:free  +
and dword ptr [esi+10h] 0 +
and dword ptr [esi+8] 0 +
pop ecx  +
mov dword ptr [esi] offset off_10012BC +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
push esi  +
push dword ptr [ecx+8]  +
push [ebp+arg_0]  +
call dword ptr [eax+24h]  +
mov esi eax +
test esi esi +
jge loc_1019DBE  +
push offset aFailedAddingEl  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov eax [esi+0Ch] +
push edi  +
jnz loc_1019E24  +
test eax eax +
jz loc_1019DEE  +
cmp eax 0FFFFFFFh +
jbe loc_1019DF5  +
mov dword ptr [esi+0Ch] 8 +
mov eax [esi+0Ch] +
shl eax 2 +
push eax  +
call ds:malloc  +
pop ecx  +
mov [esi+10h] eax +
test eax eax +
jz loc_1019E54  +
mov ecx [esi+0Ch] +
shl ecx 2 +
test ecx ecx +
jz loc_1019ECC  +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1019E18  +
jmp loc_1019ECC  +
cmp [esi+8] eax +
jb loc_1019EA8  +
add eax eax +
mov [ebp+var_8] eax +
cmp eax 0FFFFFFFh +
jbe loc_1019E41  +
mov eax 800288C5h +
push offset aArraySizeTooBi  +
jmp loc_1019E5E  +
mov edi eax +
shl edi 2 +
push edi  +
call ds:malloc  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_1019E73  +
mov eax 8007000Eh +
push offset aOnAllocatingCb  +
push 1  +
push eax  +
push 4000000h  +
mov [ebp+var_4] eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_1019EDD  +
test edi edi +
jz loc_1019E7E  +
mov byte ptr [eax] 0 +
inc eax  +
dec edi  +
jnz loc_1019E77  +
mov eax [esi+10h] +
test eax eax +
jz loc_1019E9F  +
mov ecx [esi+0Ch] +
shl ecx 2 +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
push dword ptr [esi+10h]  +
call ds:free  +
add esp 10h +
mov eax [ebp+var_8] +
mov [esi+0Ch] eax +
mov [esi+10h] ebx +
mov eax [esi+8] +
mov edx [ebp+arg_4] +
cmp edx eax +
jnb loc_1019ECC  +
mov ecx [esi+10h] +
sub eax edx +
shl eax 2 +
lea ecx [ecx+edx*4] +
push eax  +
push ecx  +
add ecx 4 +
push ecx  +
call ds:__imp_memmove  +
add esp 0Ch +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
mov eax [esi+10h] +
mov edx [ebp+arg_4] +
mov [eax+edx*4] ecx +
inc dword ptr [esi+8]  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+8] +
push edi  +
xor edi edi +
cmp edx eax +
jnb loc_1019F3A  +
sub eax edx +
lea ecx [eax-1] +
test ecx ecx +
jz loc_1019F22  +
mov eax [esi+10h] +
shl ecx 2 +
lea eax [eax+edx*4] +
push ecx  +
lea ecx [eax+4] +
push ecx  +
push eax  +
call ds:__imp_memmove  +
add esp 0Ch +
dec dword ptr [esi+8]  +
mov eax [esi+8] +
mov edx [esi+10h] +
push 4  +
pop ecx  +
lea eax [edx+eax*4] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1019F31  +
jmp loc_1019F56  +
push offset aInvalidArrayIn  +
mov eax 80070057h +
push 1  +
push eax  +
push 4000000h  +
mov edi eax +
call sub_101E5B9  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10012BC +
jz loc_1019F7E  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1019D68  +
test byte ptr [ebp+8] 1 +
jz loc_1019FA4  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp esi edi +
jz loc_101A056  +
push ebx  +
cmp word ptr [esi] 0 +
jz loc_101A047  +
push 3Bh  +
push esi  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_1019FE7  +
xor eax eax +
mov [ebx] ax +
inc ebx  +
inc ebx  +
cmp [ebp+arg_8] 0 +
push esi  +
jz loc_101A015  +
lea eax [ebp+var_4] +
push eax  +
call sub_101ABEE  +
mov edi eax +
test edi edi +
jl loc_101A02B  +
mov ecx [ebp+arg_4] +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
call dword ptr [eax+20h]  +
mov edi eax +
test edi edi +
jl loc_101A032  +
and [ebp+var_4] 0 +
jmp loc_101A023  +
mov ecx [ebp+arg_4] +
call sub_1019C01  +
mov edi eax +
test edi edi +
jl loc_101A032  +
mov esi ebx +
test ebx ebx +
jnz loc_1019FC9  +
jmp loc_101A047  +
push offset aFailedGettingF  +
jmp loc_101A037  +
push offset aFailedToAddAVa  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+var_4] 0 +
pop ebx  +
jz loc_101A056  +
push [ebp+var_4]  +
call sub_101DB34  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
mov dword ptr [esi] offset off_10013EC +
cmp [esi+8] edi +
jbe loc_101A08E  +
mov eax [esi+10h] +
lea eax [eax+edi*4] +
cmp dword ptr [eax] 0 +
jz loc_101A088  +
push dword ptr [eax]  +
call sub_101DB34  +
inc edi  +
cmp edi [esi+8] +
jb loc_101A076  +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_1019D68  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+8] edi +
jbe loc_101A0C1  +
mov eax [esi+10h] +
lea eax [eax+edi*4] +
cmp dword ptr [eax] 0 +
jz loc_101A0BB  +
push dword ptr [eax]  +
call sub_101DB34  +
inc edi  +
cmp edi [esi+8] +
jb loc_101A0A9  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
cmp eax [ecx+8] +
jb loc_101A0F5  +
push offset aInvalidArrayIn  +
mov eax 80070057h +
push 1  +
push eax  +
push 4000000h  +
mov edi eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_101A12A  +
mov edx [ecx+10h] +
push esi  +
mov esi [edx+eax*4] +
push eax  +
call sub_1019EEC  +
mov edi eax +
test edi edi +
jge loc_101A11F  +
push offset aFailedToRemove  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101A129  +
test esi esi +
jz loc_101A129  +
push esi  +
call sub_101DB34  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101A063  +
test byte ptr [ebp+8] 1 +
jz loc_101A150  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_101A16D  +
push eax  +
call sub_101DB34  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_101A17A  +
push eax  +
call sub_101DB34  +
mov eax [esi+64h] +
test eax eax +
jz loc_101A187  +
push eax  +
call sub_101DB34  +
mov eax [esi+68h] +
test eax eax +
jz loc_101A194  +
push eax  +
call sub_101DB34  +
mov eax [esi+20h] +
test eax eax +
jz loc_101A1A1  +
push eax  +
call sub_101DB34  +
lea ecx [esi+70h] +
call sub_101A063  +
lea ecx [esi+44h] +
call sub_101A063  +
lea ecx [esi+24h] +
call sub_101A063  +
lea ecx [esi+4] +
pop esi  +
jmp sub_101A063  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp [ebp+arg_0] ebx +
push esi  +
mov esi ecx +
jg loc_101A1EB  +
mov [ebp+var_4] ebx +
jmp loc_101A96A  +
cmp [ebp+arg_0] ebx +
push edi  +
jle loc_101A726  +
mov eax [ebp+arg_4] +
mov edi [eax+ebx*4] +
movzx eax word ptr [edi] +
cmp ax 2Fh +
jz loc_101A20E  +
cmp ax 2Dh +
jnz loc_101A8AB  +
inc edi  +
inc edi  +
push offset word_1001B04  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101A8D3  +
push offset asc_1001B00  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101A8D3  +
push offset aHelp  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101A8D3  +
push 2  +
push offset aO  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A356  +
push 1  +
lea eax [esi+70h] +
push eax  +
lea eax [edi+4] +
push eax  +
mov ecx esi +
call sub_1019FB0  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A866  +
cmp dword ptr [esi+78h] 1 +
jnz loc_101A321  +
mov eax [esi+80h] +
push dword ptr [eax]  +
lea eax [ebp+var_8] +
push eax  +
call sub_101E123  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A875  +
mov ecx [ebp+var_8] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_C] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101A2B8  +
sub eax [ebp+var_C] +
sar eax 1 +
cmp word ptr [ecx+eax*2-2] 5Ch +
jnz loc_101A2F0  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_C] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101A2D7  +
sub eax [ebp+var_C] +
sar eax 1 +
xor edx edx +
mov [ecx+eax*2-2] dx +
mov ecx [ebp+var_8] +
push 5Ch  +
push ecx  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101A321  +
xor ecx ecx +
mov [eax] cx +
lea ecx [esi+70h] +
mov eax [ecx] +
push 0  +
lea edx [ebp+var_8] +
push edx  +
call dword ptr [eax+24h]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A887  +
and [ebp+var_8] 0 +
cmp dword ptr [esi+78h] 2 +
jz loc_101A714  +
push dword ptr [esi+78h]  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
push offset aInvalidNumberO  +
push 1  +
push eax  +
push 4000000h  +
mov [ebp+var_4] eax +
call sub_101E5B9  +
add esp 18h +
jmp loc_101A955  +
push offset aSettingsonly  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A377  +
mov dword ptr [esi+90h] 1 +
jmp loc_101A714  +
push offset aQuiet  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A398  +
mov dword ptr [esi+88h] 1 +
jmp loc_101A714  +
push offset aNorestart  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A3B9  +
mov dword ptr [esi+8Ch] 1 +
jmp loc_101A714  +
push offset aExedir  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A3EE  +
cmp [esi] eax +
jnz loc_101A77C  +
push esi  +
call sub_101AAED  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A714  +
push offset aFailedGettingM  +
jmp loc_101A86B  +
push 3  +
push offset aIu  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A40C  +
mov dword ptr [esi+5Ch] 1 +
jmp loc_101A428  +
push 3  +
push offset aUu  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A466  +
mov dword ptr [esi+60h] 1 +
push 0  +
lea eax [esi+44h] +
push eax  +
lea eax [edi+6] +
push eax  +
mov ecx esi +
call sub_1019FB0  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A88E  +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_101A714  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParamet  +
jmp loc_101A8BE  +
push offset aIp  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A484  +
mov dword ptr [esi+3Ch] 1 +
jmp loc_101A714  +
push offset aUp  +
push edi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101A4A2  +
mov dword ptr [esi+40h] 1 +
jmp loc_101A714  +
push 3  +
push offset aUp_0  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A4FB  +
push eax  +
lea eax [esi+24h] +
push eax  +
lea eax [edi+6] +
push eax  +
mov ecx esi +
mov dword ptr [esi+40h] 1 +
call sub_1019FB0  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A895  +
cmp dword ptr [esi+2Ch] 0 +
jnz loc_101A714  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_0  +
jmp loc_101A8BE  +
push 2  +
push offset aM  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A569  +
lea eax [edi+4] +
cmp word ptr [eax] 0 +
jz loc_101A764  +
cmp dword ptr [esi] 0 +
jnz loc_101A77C  +
push 1  +
lea ecx [esi+4] +
push ecx  +
push eax  +
mov ecx esi +
call sub_1019FB0  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A89C  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_101A794  +
mov eax [esi+14h] +
push dword ptr [eax]  +
push esi  +
call sub_101E123  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A714  +
push offset aFailedAllocati  +
jmp loc_101A86B  +
push 2  +
push offset aP  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A5B2  +
lea ecx [edi+4] +
cmp [ecx] ax +
jz loc_101A7AC  +
lea eax [esi+1Ch] +
cmp dword ptr [eax] 0 +
jnz loc_101A7C4  +
push ecx  +
push eax  +
call sub_101E123  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A714  +
push offset aFailedAlloca_0  +
jmp loc_101A86B  +
push 4  +
push offset aLog  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_101A6CD  +
push 4  +
push offset aOcs  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_101A6CD  +
push 2  +
push offset asc_1001934  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A631  +
lea ecx [edi+4] +
cmp [ecx] ax +
jz loc_101A7DC  +
lea eax [esi+68h] +
cmp dword ptr [eax] 0 +
jnz loc_101A7F4  +
push ecx  +
push eax  +
call sub_101ABEE  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A714  +
add edi 4 +
push edi  +
push offset aFailedGettin_0  +
jmp loc_101A6C3  +
push 2  +
push offset aN  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A67B  +
lea ecx [edi+4] +
cmp [ecx] ax +
jz loc_101A80C  +
lea eax [esi+64h] +
cmp dword ptr [eax] 0 +
jnz loc_101A824  +
push ecx  +
push eax  +
call sub_101ABEE  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A714  +
add edi 4 +
push edi  +
push offset aFailedGettin_1  +
jmp loc_101A6C3  +
push 2  +
push offset aS  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A8AB  +
lea ecx [edi+4] +
cmp [ecx] ax +
jz loc_101A83C  +
lea eax [esi+20h] +
cmp dword ptr [eax] 0 +
jnz loc_101A851  +
push ecx  +
push eax  +
call sub_101ABEE  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A714  +
add edi 4 +
push edi  +
push offset aFailedAlloca_1  +
push 1  +
push [ebp+var_4]  +
jmp loc_101A8C1  +
lea ecx [edi+8] +
cmp word ptr [ecx] 0 +
jz loc_101A7DC  +
lea eax [esi+68h] +
cmp dword ptr [eax] 0 +
jnz loc_101A7F4  +
push ecx  +
push eax  +
call sub_101ABEE  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A8A3  +
push 4  +
push offset aOcs  +
push edi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_101A714  +
mov dword ptr [esi+6Ch] 1 +
test edi edi +
jz loc_101A8AB  +
inc ebx  +
cmp ebx [ebp+arg_0] +
jl loc_101A1F5  +
mov ecx [esi+40h] +
mov eax [esi+3Ch] +
mov edi [esi+60h] +
add eax ecx +
mov ecx [esi+5Ch] +
lea edx [ecx+edi] +
add edx eax +
cmp edx 1 +
jg loc_101A75A  +
xor edx edx +
cmp [esi+64h] edx +
setnz dl  +
lea ebx [edx+eax] +
cmp ebx 1 +
jg loc_101A75A  +
add edx ecx +
add edx edi +
add edx eax +
jnz loc_101A8DC  +
push offset aErrorOnlyOneOp  +
jmp loc_101A93D  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_1  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_2  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_3  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_4  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_5  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_6  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_7  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_8  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidParam_9  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidPara_10  +
jmp loc_101A8BE  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidPara_11  +
jmp loc_101A8BE  +
push offset aFailedParsingO  +
push 1  +
push [ebp+var_4]  +
jmp loc_101A948  +
mov eax [esi+80h] +
push dword ptr [eax]  +
push offset aFailedAlloca_2  +
jmp loc_101A6C3  +
push offset aFailedInsertin  +
jmp loc_101A86B  +
push offset aFailedParsingS  +
jmp loc_101A86B  +
push offset aFailedParsingU  +
jmp loc_101A86B  +
push offset aFailedParsingP  +
jmp loc_101A86B  +
add edi 8 +
jmp loc_101A626  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+ebx*4]  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push offset aInvalidCommand  +
push 1  +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101A955  +
mov [ebp+var_4] 1 +
jmp loc_101A955  +
mov eax [esi+40h] +
xor ecx ecx +
cmp eax ecx +
jz loc_101A90D  +
cmp [esi+2Ch] ecx +
jnz loc_101A90D  +
lea edi [esi+1Ch] +
cmp [edi] ecx +
jz loc_101A90D  +
lea ecx [esi+24h] +
mov eax [ecx] +
push edi  +
call dword ptr [eax+20h]  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A908  +
push offset aFailedToAddA_0  +
jmp loc_101A945  +
and dword ptr [edi] 0 +
xor ecx ecx +
mov eax [esi+3Ch] +
cmp eax ecx +
jz loc_101A918  +
cmp [esi] ecx +
jz loc_101A926  +
cmp [esi+40h] ecx +
jz loc_101A92D  +
cmp [esi+2Ch] ecx +
jnz loc_101A92D  +
cmp [esi] ecx +
jnz loc_101A92D  +
push offset aInvalidPara_12  +
jmp loc_101A93D  +
cmp eax 1 +
jl loc_101A955  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_101A955  +
push offset aErrorPIsNotUse  +
mov eax 80070057h +
mov [ebp+var_4] eax +
push 1  +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+var_8] 0 +
pop edi  +
jz loc_101A964  +
push [ebp+var_8]  +
call sub_101DB34  +
cmp [ebp+var_4] 1 +
jnz loc_101A971  +
mov ecx esi +
call sub_1019BE5  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax ecx +
xor ecx ecx +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] offset off_1001314 +
mov [eax+8] ecx +
mov dword ptr [eax+0Ch] 8 +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_101A97F  +
mov dword ptr [esi] offset off_10013EC +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
call sub_101A9A6  +
lea ecx [esi+24h] +
call sub_101A9A6  +
lea ecx [esi+44h] +
call sub_101A9A6  +
lea ecx [esi+70h] +
call sub_101A9A6  +
xor eax eax +
mov [esi] eax +
mov [esi+1Ch] eax +
mov [esi+64h] eax +
mov [esi+68h] eax +
mov [esi+6Ch] eax +
mov [esi+20h] eax +
mov [esi+3Ch] eax +
mov [esi+40h] eax +
mov [esi+5Ch] eax +
mov [esi+60h] eax +
mov [esi+88h] eax +
mov [esi+8Ch] eax +
mov [esi+90h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword ptr [ebp+lpSrc] +
and [ebp+lpDst] 0 +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101AA2E  +
push ebx  +
push esi  +
sub eax ecx +
sar eax 1 +
push edi  +
lea esi [eax+1] +
push esi  +
jmp loc_101AA71  +
push esi  +
push [ebp+lpDst]  +
push dword ptr [ebp+lpSrc]  +
call ds:ExpandEnvironmentStringsW  +
mov ebx eax +
test ebx ebx +
jz loc_101AA8A  +
cmp ebx esi +
jbe loc_101AAC5  +
cmp [ebp+lpDst] 0 +
jz loc_101AA6E  +
push [ebp+lpDst]  +
call sub_101DB34  +
and [ebp+lpDst] 0 +
mov esi ebx +
push ebx  +
lea eax [ebp+lpDst] +
push eax  +
call sub_101DBDF  +
mov edi eax +
test edi edi +
jge loc_101AA45  +
push dword ptr [ebp+lpSrc]  +
push offset aFailedToAlloca  +
jmp loc_101AAB3  +
call ds:GetLastError  +
mov edi eax +
test edi edi +
jle loc_101AAA4  +
and edi 0FFFFh +
or edi 80070000h +
test edi edi +
jl loc_101AAAB  +
mov edi 80004005h +
push dword ptr [ebp+lpSrc]  +
push offset aFailedExpandin  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101AAD1  +
mov eax [ebp+lpDst] +
mov ecx [ebp+arg_0] +
and [ebp+lpDst] 0 +
mov [ecx] eax +
cmp [ebp+lpDst] 0 +
jz loc_101AADF  +
push [ebp+lpDst]  +
call sub_101DB34  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
push 206h  +
push eax  +
mov word ptr [ebp+Filename] ax +
lea eax [ebp+Filename+2] +
push eax  +
call memset  +
and dword ptr [edi] 0 +
add esp 0Ch +
mov esi 104h +
push esi  +
lea eax [ebp+Filename] +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_101AB69  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101AB5B  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101AB62  +
mov esi 80004005h +
push offset aFailedGettingM  +
jmp loc_101ABC7  +
cmp eax esi +
jb loc_101AB95  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101AB87  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101AB8E  +
mov esi 80004005h +
push offset aFailedGettin_2  +
jmp loc_101ABC7  +
lea eax [ebp+Filename] +
push 5Ch  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101ABAF  +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+Filename] +
push eax  +
push edi  +
call sub_101E123  +
mov esi eax +
test esi esi +
jge loc_101ABD7  +
push offset aFailedAlloca_0  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_101CE8B  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
push dword ptr [ebp+lpSrc]  +
xor ebx ebx +
lea eax [ebp+lpFileName] +
push eax  +
mov dword ptr [ebp+lpBuffer] ebx +
mov [ebp+FilePart] ebx +
mov edi 104h +
mov [ebp+lpFileName] ebx +
call sub_101AA1E  +
mov esi eax +
cmp esi ebx +
jge loc_101AC28  +
push dword ptr [ebp+lpSrc]  +
push offset aFailedExpandin  +
jmp loc_101ACC0  +
push edi  +
jmp loc_101AC59  +
lea eax [ebp+FilePart] +
push eax  +
push dword ptr [ebp+lpBuffer]  +
push edi  +
push [ebp+lpFileName]  +
call ds:GetFullPathNameW  +
mov esi eax +
cmp esi ebx +
jz loc_101AC6F  +
cmp esi edi +
jbe loc_101ACA7  +
mov edi esi +
cmp dword ptr [ebp+lpBuffer] ebx +
jz loc_101AC58  +
push dword ptr [ebp+lpBuffer]  +
call sub_101DB34  +
mov dword ptr [ebp+lpBuffer] ebx +
push esi  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_101DBDF  +
mov esi eax +
cmp esi ebx +
jge loc_101AC2B  +
push offset aFailedAlloca_3  +
jmp loc_101AC95  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101AC89  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101AC90  +
mov esi 80004005h +
push offset aFailedGettingT  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101ACD0  +
push dword ptr [ebp+lpBuffer]  +
push [ebp+arg_0]  +
call sub_101E123  +
mov esi eax +
cmp esi ebx +
jge loc_101ACD0  +
push dword ptr [ebp+lpBuffer]  +
push offset aFailedAlloca_4  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
cmp [ebp+lpFileName] ebx +
jz loc_101ACDD  +
push [ebp+lpFileName]  +
call sub_101DB34  +
cmp dword ptr [ebp+lpBuffer] ebx +
jz loc_101ACEA  +
push dword ptr [ebp+lpBuffer]  +
call sub_101DB34  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi 1078h +
push edi  +
xor ebx ebx +
call ??_U@YAPAXI@Z  +
mov esi eax +
pop ecx  +
cmp esi ebx +
jnz loc_101AD36  +
push offset aFailedToAllo_0  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov edi eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_101ADBC  +
push edi  +
push ebx  +
push esi  +
call memset  +
add esp 0Ch +
push [ebp+arg_4]  +
mov [esi] edi +
push [ebp+arg_0]  +
mov dword ptr [esi+70h] 78h +
push [ebp+arg_8]  +
mov dword ptr [esi+6Ch] 878h +
push ebx  +
push ebx  +
push ebx  +
call ds:EnableTrace  +
cmp eax ebx +
jz loc_101AD8C  +
jle loc_101AD73  +
and eax 0FFFFh +
or eax 80070000h +
push offset aDisableCbsTrac  +
mov edi eax +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101ADB5  +
push 1  +
push esi  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:ControlTraceW  +
cmp eax ebx +
jz loc_101ADB3  +
jle loc_101ADAC  +
and eax 0FFFFh +
or eax 80070000h +
push offset aStopTraceFaile  +
jmp loc_101AD78  +
mov edi ebx +
push esi  +
call ??_V@YAXPAX@Z  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
push 2  +
mov esi offset unk_102E008 +
pop edi  +
mov eax [esi] +
mov ecx [esi+4] +
mov edx eax +
or edx ecx +
jz loc_101ADF3  +
lea edx [esi+0Ch] +
push edx  +
push ecx  +
push eax  +
call sub_101ACF8  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
add esi 28h +
dec edi  +
jnz loc_101ADD6  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101AE17  +
cmp ecx 7FFFFFFFh +
jbe loc_101AE1C  +
mov eax 80070057h +
test eax eax +
jl loc_101AE67  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_101AE57  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_101AE52  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_101AE52  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_101AE3A  +
pop edi  +
test esi esi +
jnz loc_101AE5E  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101AE86  +
cmp ecx 7FFFFFFFh +
jbe loc_101AE8B  +
mov eax 80070057h +
test eax eax +
jl loc_101AEC8  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101AEB8  +
cmp eax esi +
ja loc_101AEB8  +
jnz loc_101AEC3  +
jmp loc_101AEBD  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_414] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_41C] eax +
xor eax eax +
xor ebx ebx +
push 3FEh  +
mov [ebp+var_404] ax +
lea eax [ebp-402h] +
push ebx  +
push eax  +
mov [ebp+var_418] esi +
mov [ebp+var_410] ebx +
mov [ebp+var_40C] ebx +
call memset  +
add esp 0Ch +
call ds:GetCurrentProcessId  +
push eax  +
push edi  +
push offset aSLd  +
lea eax [ebp+var_404] +
push 200h  +
push eax  +
call sub_101AE70  +
add esp 14h +
mov [ebp+var_408] eax +
test eax eax +
jge loc_101AF76  +
push offset aFailedCreating  +
push 1  +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101B118  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101AF7B  +
sub eax edx +
sar eax 1 +
mov ecx eax +
lea eax [ebp+var_404] +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_101AF94  +
sub eax edx +
sar eax 1 +
lea edi [eax+ecx] +
lea edi [edi+edi+7Ch] +
push edi  +
call ??_U@YAPAXI@Z  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_101AFCE  +
push offset aFailedToAllo_0  +
mov eax 8007000Eh +
push 1  +
mov [ebp+var_408] eax +
push eax  +
jmp loc_101B0C7  +
push edi  +
push 0  +
push ebx  +
call memset  +
mov esi [ebp+var_414] +
mov [ebx] edi +
mov dword ptr [ebx+2Ch] 20000h +
mov dword ptr [ebx+28h] 1 +
lea edi [ebx+18h] +
movs   +
movs   +
movs   +
movs   +
lea eax [ebp+var_404] +
add esp 0Ch +
mov dword ptr [ebx+40h] 1000004h +
mov dword ptr [ebx+70h] 78h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101B00E  +
sub eax ecx +
sar eax 1 +
lea ecx [eax+eax+7Ah] +
mov eax [ebp+var_418] +
mov [ebx+6Ch] ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_101B02C  +
push [ebp+var_418]  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
add ecx ebx +
push ecx  +
call sub_101AE01  +
push ebx  +
lea eax [ebp+var_404] +
push eax  +
lea eax [ebp+var_410] +
push eax  +
call ds:StartTraceW  +
cmp eax 0B7h +
jz loc_101B0FA  +
cmp eax 20h +
jz loc_101B0FA  +
test eax eax +
jz loc_101B08A  +
jle loc_101B083  +
and eax 0FFFFh +
or eax 80070000h +
push offset aStartTraceFail  +
jmp loc_101B0BE  +
push [ebp+var_40C]  +
push [ebp+var_410]  +
push [ebp+var_414]  +
push [ebp+arg_C]  +
push 1Fh  +
push 1  +
call ds:EnableTrace  +
test eax eax +
jz loc_101B0D6  +
jle loc_101B0B9  +
and eax 0FFFFh +
or eax 80070000h +
push offset aEnableCbsTrace  +
push 1  +
mov [ebp+var_408] eax +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101B10D  +
mov ecx [ebp+var_410] +
mov eax [ebp+var_41C] +
and [ebp+var_410] 0 +
mov [eax] ecx +
mov ecx [ebp+var_40C] +
and [ebp+var_40C] 0 +
jmp loc_101B10A  +
mov eax [ebp+var_41C] +
xor ecx ecx +
mov [eax] ecx +
mov [ebp+var_408] ecx +
mov [eax+4] ecx +
test ebx ebx +
jz loc_101B118  +
push ebx  +
call ??_V@YAXPAX@Z  +
pop ecx  +
mov eax [ebp+var_410] +
or eax [ebp+var_40C] +
jz loc_101B14C  +
push 1  +
push ebx  +
lea eax [ebp+var_404] +
push eax  +
push 0  +
push 0  +
call ds:ControlTraceW  +
push [ebp+var_40C]  +
push [ebp+var_410]  +
call ds:CloseTrace  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_408] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CE8B  +
leave   +
retn 14h  +
***
cmp dword ptr [ecx+78h] 2 +
jnz loc_101B178  +
mov eax [ecx+80h] +
mov eax [eax+4] +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
xor ebx ebx +
push 3FEh  +
mov [ebp+Value] ax +
lea eax [ebp-402h] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_408] ebx +
call memset  +
mov eax [edi+68h] +
add esp 0Ch +
mov ecx edi +
mov dword ptr [ebp+var_410] eax +
call sub_101B168  +
mov esi eax +
neg esi  +
sbb esi esi +
xor eax eax +
neg esi  +
cmp [edi+6Ch] eax +
mov edi 4000000h +
setnz al  +
mov [ebp+var_40C] eax +
cmp eax 2 +
jnb loc_101B2D2  +
imul eax eax +
add eax offset off_102E010 +
mov [ebp+var_414] eax +
push dword ptr [ebp+var_410]  +
lea eax [ebp+var_408] +
push eax  +
call sub_101E123  +
mov ebx eax +
test ebx ebx +
jl loc_101B30C  +
test esi esi +
jz loc_101B23E  +
push offset a_bootstrap  +
lea eax [ebp+var_408] +
push eax  +
call sub_101DE63  +
mov ebx eax +
test ebx ebx +
jl loc_101B325  +
mov eax [ebp+var_414] +
mov ecx [eax] +
test ecx ecx +
jz loc_101B267  +
push ecx  +
lea eax [ebp+var_408] +
push eax  +
call sub_101DE63  +
mov ebx eax +
test ebx ebx +
jl loc_101B331  +
mov eax [ebp+var_414] +
lea ecx [eax-8] +
push ecx  +
push dword ptr [eax+14h]  +
lea ecx [eax+4] +
push ecx  +
push dword ptr [eax-10h]  +
push dword ptr [ebp+var_408]  +
call sub_101AECF  +
mov ebx eax +
test ebx ebx +
jge loc_101B29D  +
push dword ptr [ebp+var_408]  +
push offset aFailedEnabling  +
push 1  +
push ebx  +
push edi  +
call sub_101E5B9  +
add esp 14h +
cmp dword ptr [ebp+var_408] 0 +
jz loc_101B2B8  +
push dword ptr [ebp+var_408]  +
call sub_101DB34  +
and dword ptr [ebp+var_408] 0 +
inc [ebp+var_40C]  +
add [ebp+var_414] 28h +
cmp [ebp+var_40C] 2 +
jb loc_101B203  +
test esi esi +
jz loc_101B389  +
push dword ptr [ebp+var_410]  +
lea eax [ebp+Value] +
push offset aS_txt  +
push 200h  +
push eax  +
call sub_101AE70  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jge loc_101B347  +
push dword ptr [ebp+var_410]  +
push offset aFailedCreati_0  +
jmp loc_101B317  +
push dword ptr [ebp+var_410]  +
push offset aFailedAlloca_5  +
push 1  +
push ebx  +
push edi  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101B389  +
push offset a_bootstrap  +
push offset aFailedAddingBo  +
jmp loc_101B317  +
mov eax [ebp+var_40C] +
imul eax eax +
push off_102E010[eax]  +
push offset aFailedAddingLo  +
jmp loc_101B317  +
lea eax [ebp+Value] +
push eax  +
call sub_102CC67  +
mov ebx eax +
test ebx ebx +
jge loc_101B367  +
lea eax [ebp+Value] +
push eax  +
push offset aFailedSettingO  +
jmp loc_101B317  +
push 0  +
push 0  +
mov esi offset Name +
push esi  +
call ds:GetEnvironmentVariableW  +
test eax eax +
jnz loc_101B389  +
lea eax [ebp+Value] +
push eax  +
push esi  +
call ds:SetEnvironmentVariableW  +
cmp dword ptr [ebp+var_408] 0 +
jz loc_101B39D  +
push dword ptr [ebp+var_408]  +
call sub_101DB34  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_101CE8B  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+lpString] 0 +
push esi  +
push [ebp+arg_4]  +
lea eax [ebp+lpString] +
push offset aAddPackagePack  +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
test esi esi +
jl loc_101B3EB  +
push [ebp+lpString]  +
push [ebp+arg_0]  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jge loc_101B400  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+lpString] 0 +
jz loc_101B40E  +
push [ebp+lpString]  +
call sub_101DB34  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_101B428  +
pop ebp  +
retn   +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101B42B  +
sub eax edx +
sar eax 1 +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
add eax eax +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
add eax eax +
push eax  +
push [ebp+arg_0]  +
call sub_101D055  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
add eax eax +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
add eax eax +
push eax  +
push [ebp+arg_0]  +
call sub_101D0D7  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ebp+8] eax +
push offset dword_102CDA8  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101B4E3  +
cmp eax 0Ch +
jz loc_101B4DC  +
cmp eax 16h +
jz loc_101B4D5  +
cmp eax 22h +
jz loc_101B4D5  +
cmp eax 50h +
jz loc_101B4E3  +
push 80004005h  +
call loc_101B48C  +
push 80070057h  +
jmp loc_101B4D0  +
push 8007000Eh  +
jmp loc_101B4D0  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101D055  +
add esp 10h +
push eax  +
call sub_101B4AB  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101D0D7  +
add esp 10h +
push eax  +
call sub_101B4AB  +
pop ebp  +
retn   +
***
lea eax [ecx+0Ch] +
or edx 0FFFFFFFFh +
xadd [eax] edx +
dec edx  +
test edx edx +
jg locret_101B551  +
mov eax [ecx] +
mov edx [eax] +
push ecx  +
mov ecx eax +
call dword ptr [edx+4]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101B576  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101B566  +
sub eax edx +
sar eax 1 +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push 400h  +
push [ebp+dwMessageId]  +
xor esi esi +
push edi  +
push 1300h  +
mov [ebp+hMem] edi +
call ds:FormatMessageW  +
test eax eax +
jnz loc_101B5E4  +
call ds:GetLastError  +
mov esi eax +
cmp esi edi +
jle loc_101B5C6  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi edi +
jl loc_101B5CD  +
mov esi 80004005h +
push offset aFailedGettingE  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101B5EF  +
mov eax [ebp+hMem] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov [ebp+hMem] edi +
cmp [ebp+hMem] edi +
jz loc_101B5FD  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp+NewState.PrivilegeCount] ebx +
lea edi [ebp+NewState.Privileges] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+Luid.LowPart] ebx +
lea edi [ebp+Luid.HighPart] +
stos   +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
xor esi esi +
mov [ebp+hObject] ebx +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_101B674  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101B661  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101B668  +
mov esi 80004005h +
push offset aFailedOpeningT  +
push 1  +
jmp loc_101B70A  +
lea eax [ebp+Luid] +
push eax  +
push [ebp+lpName]  +
push ebx  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_101B6AE  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101B6A0  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101B6A7  +
mov esi 80004005h +
push offset aFailedLookingU  +
jmp loc_101B66D  +
mov eax [ebp+Luid.LowPart] +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
mov eax [ebp+arg_4] +
xor edi edi +
inc edi  +
neg eax  +
push ebx  +
sbb eax eax +
push ebx  +
and eax 2 +
push 10h  +
mov [ebp+NewState.Privileges.Attributes] eax +
lea eax [ebp+NewState] +
push eax  +
push ebx  +
push [ebp+hObject]  +
mov [ebp+NewState.PrivilegeCount] edi +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_101B718  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101B6FD  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101B704  +
mov esi 80004005h +
push offset aFailedAdjustin  +
push edi  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+hObject] ebx +
jz loc_101B726  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push 1  +
mov esi offset aSeshutdownpriv +
push esi  +
call sub_101B60A  +
mov ebx eax +
xor eax eax +
cmp ebx eax +
jge loc_101B764  +
push offset aFailedEnabli_0  +
push 1  +
push ebx  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101B7C4  +
push edi  +
push 80020003h  +
push 1  +
push eax  +
push eax  +
push eax  +
push eax  +
call ds:InitiateSystemShutdownExW  +
mov edi 4000000h +
test eax eax +
jnz loc_101B7A6  +
call ds:GetLastError  +
test eax eax +
jle loc_101B793  +
and eax 0FFFFh +
or eax 80070000h +
push offset aFailedRestartA  +
mov ebx eax +
push 1  +
push ebx  +
push edi  +
call sub_101E5B9  +
add esp 10h +
push 0  +
push esi  +
call sub_101B60A  +
test eax eax +
jge loc_101B7C3  +
push offset aFailedDisablin  +
push 1  +
push eax  +
push edi  +
call sub_101E5B9  +
add esp 10h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
inc edi  +
mov [ebp+var_4] edi +
mov [ebx] esi +
cmp [ebp+arg_4] esi +
jnz loc_101B857  +
cmp [ebp+arg_8] esi +
jnz loc_101B80D  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_101C85D  +
mov esi eax +
test esi esi +
jge loc_101B807  +
push offset aFailedAskingUs  +
jmp loc_101B844  +
cmp [ebp+var_4] 0 +
jz loc_101B857  +
call sub_101B734  +
mov esi eax +
cmp esi 800704F7h +
jz loc_101B824  +
cmp esi 80070015h +
jnz loc_101B831  +
push 0BB8h  +
call ds:Sleep  +
jmp loc_101B80D  +
cmp esi 8007045Bh +
jnz loc_101B83B  +
xor esi esi +
test esi esi +
jge loc_101B855  +
push offset aFailedRestarti  +
push edi  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101B857  +
mov [ebx] edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push offset aRemovePackage  +
push [ebp+arg_0]  +
xor ebx ebx +
mov [ebp+lpString] ebx +
call sub_101DE63  +
mov esi eax +
cmp esi ebx +
jl loc_101B8B5  +
cmp [ebp+arg_4] ebx +
jz loc_101B8CC  +
push [ebp+arg_4]  +
lea eax [ebp+lpString] +
push offset aPackagepathS  +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
cmp esi ebx +
jl loc_101B8B5  +
push [ebp+lpString]  +
push [ebp+arg_0]  +
call sub_101DE63  +
mov esi eax +
cmp esi ebx +
jge loc_101B8CC  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101B923  +
push edi  +
mov edi [ebp+arg_8] +
cmp [edi+8] ebx +
jbe loc_101B922  +
mov eax [edi+10h] +
lea eax [eax+ebx*4] +
push dword ptr [eax]  +
lea eax [ebp+lpString] +
push offset aPackagenameS  +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
test esi esi +
jl loc_101B90D  +
push [ebp+lpString]  +
push [ebp+arg_0]  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jl loc_101B90D  +
inc ebx  +
cmp ebx [edi+8] +
jb loc_101B8D5  +
jmp loc_101B922  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
pop edi  +
cmp [ebp+lpString] 0 +
jz loc_101B931  +
push [ebp+lpString]  +
call sub_101DB34  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+lpString] ebx +
cmp [ebp+arg_10] ebx +
jz loc_101B9AA  +
push offset aEnableFeatureI  +
push [ebp+arg_0]  +
call sub_101DE63  +
mov esi eax +
cmp esi ebx +
jl loc_101B993  +
cmp [ebp+arg_4] ebx +
jz loc_101B9B1  +
push [ebp+arg_4]  +
push offset aPackagepathS  +
lea eax [ebp+lpString] +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
cmp esi ebx +
jl loc_101B993  +
push [ebp+lpString]  +
push [ebp+arg_0]  +
call sub_101DE63  +
mov esi eax +
cmp esi ebx +
jge loc_101B9C0  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101BA17  +
push offset aDisableFeature  +
jmp loc_101B955  +
cmp [ebp+arg_8] ebx +
jz loc_101B9C0  +
push [ebp+arg_8]  +
push offset aPackagenameS  +
jmp loc_101B970  +
push edi  +
mov edi [ebp+arg_C] +
cmp [edi+8] ebx +
jbe loc_101BA16  +
mov eax [edi+10h] +
lea eax [eax+ebx*4] +
push dword ptr [eax]  +
lea eax [ebp+lpString] +
push offset aFeaturenameS  +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
test esi esi +
jl loc_101BA01  +
push [ebp+lpString]  +
push [ebp+arg_0]  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jl loc_101BA01  +
inc ebx  +
cmp ebx [edi+8] +
jb loc_101B9C9  +
jmp loc_101BA16  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
pop edi  +
cmp [ebp+lpString] 0 +
jz loc_101BA25  +
push [ebp+lpString]  +
call sub_101DB34  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jl loc_101BA54  +
mov edx [ecx] +
cmp eax [edx-8] +
jg loc_101BA54  +
mov [edx-0Ch] eax +
mov ecx [ecx] +
xor edx edx +
mov [ecx+eax*2] dx +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_101B48C  +
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
sub ecx 10h +
xor eax eax +
push edi  +
mov edi [ecx] +
cmp [ecx+4] eax +
jz loc_101BA98  +
cmp [ecx+0Ch] eax +
jge loc_101BA87  +
push eax  +
mov ecx esi +
call loc_101BA32  +
jmp loc_101BA98  +
call sub_101B538  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
pop edi  +
pop esi  +
retn   +
***
push 8007000Eh  +
call loc_101B48C  +
mov ecx [ecx] +
sub ecx 10h +
jmp sub_101B538  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_101BAD8  +
push 80004005h  +
call loc_101B48C  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ecx] +
mov ebx [esi-0Ch] +
sub esi 10h +
mov [ebp+var_8] ecx +
mov ecx [esi] +
mov eax [ecx] +
push edi  +
mov [ebp+var_4] ebx +
call dword ptr [eax+10h]  +
mov edx [eax] +
push 2  +
push [ebp+arg_0]  +
mov ecx eax +
call dword ptr [edx]  +
mov edi eax +
test edi edi +
jnz loc_101BB23  +
call loc_101BAA0  +
mov eax [ebp+arg_0] +
cmp ebx eax +
jge loc_101BB2C  +
mov eax ebx +
inc eax  +
push eax  +
lea ecx [esi+10h] +
push ecx  +
push eax  +
lea ebx [edi+10h] +
push ebx  +
call sub_101B440  +
mov eax [ebp+var_4] +
add esp 10h +
mov ecx esi +
mov [edi+4] eax +
call sub_101B538  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
mov [eax] ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi] +
sub eax 10h +
cmp [eax+8] edx +
mov ecx [eax] +
jge loc_101BB87  +
test edx edx +
jle loc_101BB87  +
push edi  +
mov edi [ecx] +
push 2  +
push edx  +
push eax  +
call dword ptr [edi+8]  +
pop edi  +
test eax eax +
jnz loc_101BB8C  +
call loc_101BAA0  +
add eax 10h +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+lpString] 0 +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push 1000h  +
push ebx  +
call sub_101DBDF  +
mov esi eax +
test esi esi +
jl loc_101BBD7  +
push [ebp+arg_4]  +
push offset aSdism_exe  +
push ebx  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
test esi esi +
jge loc_101BBF1  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101BD5C  +
push edi  +
mov edi [ebp+arg_8] +
mov ecx edi +
call sub_101B168  +
test eax eax +
jz loc_101BD80  +
mov ecx edi +
call sub_101B168  +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_101E123  +
mov esi eax +
test esi esi +
jl loc_101BD46  +
push 5Ch  +
push [ebp+var_8]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101BC3F  +
mov esi 8007000Dh +
push offset aInvalidImagePa  +
jmp loc_101BD4B  +
xor ecx ecx +
mov [eax] cx +
mov esi [ebp+var_8] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101BC4C  +
sub eax edx +
sar eax 1 +
cmp eax 2 +
jnz loc_101BC7B  +
push 3Ah  +
pop eax  +
cmp ax [esi+2] +
jnz loc_101BC7B  +
lea eax [ebp+var_8] +
push eax  +
call sub_101E1AD  +
mov esi eax +
test esi esi +
jl loc_101BD46  +
cmp dword ptr [edi+78h] 2 +
jnz loc_101BC8B  +
mov eax [edi+80h] +
mov eax [eax] +
jmp loc_101BC8D  +
xor eax eax +
push eax  +
push [ebp+var_8]  +
lea eax [ebp+lpString] +
push offset aImageSSysdrive  +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 10h +
test esi esi +
jl loc_101BD46  +
push [ebp+lpString]  +
push ebx  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jl loc_101BD46  +
mov eax [edi+20h] +
test eax eax +
jz loc_101BCED  +
push eax  +
lea eax [ebp+lpString] +
push offset aScratchdirS  +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
test esi esi +
jl loc_101BD46  +
push [ebp+lpString]  +
push ebx  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jl loc_101BD46  +
cmp dword ptr [edi+88h] 0 +
jz loc_101BD07  +
push offset aQuiet_0  +
push ebx  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jl loc_101BD46  +
push offset aNorestart_0  +
push ebx  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jl loc_101BD46  +
mov eax [edi+68h] +
test eax eax +
jz loc_101BD5B  +
push eax  +
lea eax [ebp+lpString] +
push offset aLogpathS_txt  +
push eax  +
call sub_101E219  +
mov esi eax +
add esp 0Ch +
test esi esi +
jl loc_101BD46  +
push [ebp+lpString]  +
push ebx  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jge loc_101BD5B  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
pop edi  +
cmp [ebp+lpString] 0 +
jz loc_101BD6A  +
push [ebp+lpString]  +
call sub_101DB34  +
cmp [ebp+var_8] 0 +
jz loc_101BD78  +
push [ebp+var_8]  +
call sub_101DB34  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push offset aOnline  +
jmp loc_101BCAF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
mov edx [eax-0Ch] +
sub eax 10h +
push esi  +
mov esi [ebp+arg_0] +
cmp edx esi +
jle loc_101BDA6  +
mov esi edx +
cmp dword ptr [eax+0Ch] 1 +
jle loc_101BDB4  +
push esi  +
call sub_101BAEE  +
jmp loc_101BDD8  +
mov eax [eax+8] +
cmp eax esi +
jge loc_101BDD8  +
mov edx eax +
mov eax 400h +
cmp edx eax +
jle loc_101BDCA  +
add edx eax +
jmp loc_101BDCC  +
add edx edx +
cmp edx esi +
jge loc_101BDD2  +
mov edx esi +
push edx  +
call sub_101BB5D  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
xor ecx ecx +
sub eax 10h +
inc ecx  +
sub ecx [eax+0Ch] +
mov eax [eax+8] +
sub eax [ebp+arg_0] +
or ecx eax +
jge loc_101BE09  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_101BD8F  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
push ebx  +
mov ebx ecx +
jnz loc_101BE2A  +
call sub_101BA64  +
jmp loc_101BE7F  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_101BE3C  +
push 80070057h  +
call loc_101B48C  +
mov eax [ebx] +
push edi  +
push [ebp+arg_4]  +
mov edi [eax-0Ch] +
sub esi eax +
sar esi 1 +
call sub_101BDE2  +
cmp esi edi +
pop edi  +
push [ebp+arg_4]  +
ja loc_101BE65  +
lea ecx [eax+esi*2] +
push ecx  +
push [ebp+arg_4]  +
push eax  +
call sub_101B466  +
jmp loc_101BE71  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push eax  +
call sub_101B440  +
add esp 10h +
push [ebp+arg_4]  +
mov ecx ebx +
call loc_101BA32  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_18] esi +
call sub_101B557  +
pop ecx  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_101BFD9  +
push edi  +
push [ebp+arg_4]  +
call sub_101B557  +
mov esi [esi] +
and [ebp+var_4] 0 +
mov [ebp+var_8] eax +
mov eax [esi-0Ch] +
lea edi [esi+eax*2] +
pop ecx  +
cmp esi edi +
jnb loc_101BFD5  +
push ebx  +
mov ebx ds:wcsstr +
jmp loc_101BEDE  +
mov ecx [ebp+var_C] +
inc [ebp+var_4]  +
lea esi [eax+ecx*2] +
push [ebp+arg_0]  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101BED5  +
push esi  +
call sub_101B557  +
lea esi [esi+eax*2+2] +
pop ecx  +
cmp esi edi +
jb loc_101BEDE  +
cmp [ebp+var_4] 0 +
jle loc_101BFD4  +
mov esi [ebp+var_8] +
sub esi [ebp+var_C] +
mov eax [ebp+var_18] +
imul esi [ebp+var_4] +
mov eax [eax] +
mov edi [eax-0Ch] +
add esi edi +
cmp esi edi +
mov [ebp+var_14] edi +
mov [ebp+var_20] esi +
mov eax esi +
jg loc_101BF25  +
mov eax edi +
mov ecx [ebp+var_18] +
push eax  +
call sub_101BDE2  +
lea ecx [eax+edi*2] +
mov [ebp+var_1C] eax +
mov [ebp+var_24] ecx +
cmp eax ecx +
jmp loc_101BFC2  +
push [ebp+arg_0]  +
push [ebp+var_10]  +
call ebx  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_101BFB1  +
mov esi [ebp+var_14] +
mov edx [ebp+var_C] +
mov eax edi +
sub eax [ebp+var_1C] +
sar eax 1 +
sub esi eax +
mov eax [ebp+var_8] +
sub esi edx +
lea ecx [esi+esi] +
push ecx  +
lea edx [edi+edx*2] +
push edx  +
add eax eax +
add eax edi +
push ecx  +
push eax  +
mov [ebp+var_10] eax +
call sub_101B512  +
mov eax [ebp+var_8] +
add eax eax +
push eax  +
push [ebp+arg_4]  +
push eax  +
push edi  +
call sub_101B4EC  +
mov ecx [ebp+var_8] +
mov eax [ebp+var_10] +
push [ebp+arg_0]  +
add esi ecx +
sub ecx [ebp+var_C] +
xor edx edx +
add [ebp+var_14] ecx +
push eax  +
mov [ebp+var_10] eax +
mov [edi+esi*2] dx +
call ebx  +
mov edi eax +
add esp 28h +
test edi edi +
jnz loc_101BF4E  +
mov esi [ebp+var_20] +
mov edi [ebp+var_10] +
push edi  +
call sub_101B557  +
lea eax [edi+eax*2+2] +
cmp eax [ebp+var_24] +
pop ecx  +
mov [ebp+var_10] eax +
jb loc_101BF3E  +
mov ecx [ebp+var_18] +
push esi  +
call loc_101BA32  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101B41A  +
pop ecx  +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_101BE15  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
push offset dword_102E3B8  +
lea ecx [ebp-14h] +
call sub_101BABF  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call sub_101BFE3  +
push offset asc_10022A0  +
push offset asc_1002298  +
lea ecx [ebp-14h] +
call sub_101BE89  +
push dword ptr [ebp-14h]  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
call sub_101E123  +
mov esi eax +
test esi esi +
jge loc_101C082  +
push offset aFailedToAllo_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101C082  +
mov eax [ebp-18h] +
mov [ebp+8] eax +
mov eax offset loc_101C07F +
retn   +
mov esi [ebp+8] +
mov ecx [ebp-14h] +
add ecx 0FFFFFFF0h +
call sub_101B538  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
push 40h  +
xor ebx ebx +
lea eax [ebp+StartupInfo.lpReserved] +
push ebx  +
push eax  +
mov [ebp+StartupInfo.cb] 44h +
call memset  +
xor eax eax +
lea edi [ebp+hObject] +
stos   +
stos   +
stos   +
add esp 0Ch +
stos   +
lea eax [ebp+lpCommandLine] +
push eax  +
push [ebp+arg_0]  +
mov dword ptr [ebp+lpCommandLine] ebx +
call sub_101C009  +
mov edi eax +
cmp edi ebx +
jge loc_101C0EF  +
push offset aFailedToEscape  +
push 1  +
push edi  +
push 4000000h  +
jmp loc_101C200  +
push dword ptr [ebp+lpCommandLine]  +
mov esi 4000000h +
push offset aExecutingDismS  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 14h +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push ebx  +
push ebx  +
push 8000000h  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp+lpCommandLine]  +
push ebx  +
call ds:CreateProcessW  +
test eax eax +
jnz loc_101C161  +
call ds:GetLastError  +
mov edi eax +
cmp edi ebx +
jle loc_101C141  +
and edi 0FFFFh +
or edi 80070000h +
cmp edi ebx +
jl loc_101C148  +
mov edi 80004005h +
push dword ptr [ebp+lpCommandLine]  +
push offset aCouldNotCreate  +
push 1  +
push edi  +
push esi  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101C208  +
push 0FFFFFFFFh  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_101C1D6  +
mov ebx [ebp+lpExitCode] +
mov eax [ebp+arg_4] +
push ebx  +
push [ebp+hObject]  +
mov dword ptr [eax] 1 +
call ds:GetExitCodeProcess  +
test eax eax +
jnz loc_101C1BE  +
call ds:GetLastError  +
mov edi eax +
test edi edi +
jle loc_101C1A4  +
and edi 0FFFFh +
or edi 80070000h +
test edi edi +
jl loc_101C1AB  +
mov edi 80004005h +
push offset aCouldNotGetExi  +
push 1  +
push edi  +
push esi  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101C1D2  +
push dword ptr [ebx]  +
push offset aDism_exeReturn  +
push 0  +
push 0  +
push esi  +
call sub_101E5B9  +
add esp 14h +
xor ebx ebx +
jmp loc_101C208  +
call ds:GetLastError  +
mov edi eax +
cmp edi ebx +
jle loc_101C1F0  +
and edi 0FFFFh +
or edi 80070000h +
cmp edi ebx +
jl loc_101C1F7  +
mov edi 80004005h +
push offset aFailedWaitingO  +
push 1  +
push edi  +
push esi  +
call sub_101E5B9  +
add esp 10h +
mov esi ds:CloseHandle +
cmp [ebp+hObject] ebx +
jz loc_101C21E  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_101C21E  +
push [ebp+hObject]  +
call esi  +
cmp [ebp-10h] ebx +
jz loc_101C22E  +
cmp dword ptr [ebp-10h] 0FFFFFFFFh +
jz loc_101C22E  +
push dword ptr [ebp-10h]  +
call esi  +
push dword ptr [ebp+lpCommandLine]  +
call sub_101DB34  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
lea ecx [ebp-0BCh] +
call sub_101A9BF  +
xor ebx ebx +
push ebx  +
push ebx  +
push 1  +
push ebx  +
mov [ebp-4] ebx +
mov [ebp-24h] ebx +
mov [ebp-28h] ebx +
mov [ebp-14h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov [ebp-10h] ebx +
mov [ebp-20h] ebx +
call ds:HeapSetInformation  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0BCh] +
push dword ptr [ebp+8]  +
call sub_101A1C7  +
mov edi eax +
mov esi 4000000h +
cmp edi ebx +
jz loc_101C2AF  +
cmp edi 1 +
jnz loc_101C580  +
xor edi edi +
jmp loc_101C5FD  +
cmp [ebp-54h] ebx +
jz loc_101C2D3  +
lea eax [ebp-0BCh] +
push eax  +
call sub_101B180  +
mov edi eax +
cmp edi ebx +
jge loc_101C2D3  +
push offset aFailedEnabli_1  +
push 1  +
push edi  +
jmp loc_101C577  +
lea eax [ebp-18h] +
push eax  +
call sub_101AAED  +
mov edi eax +
cmp edi ebx +
jge loc_101C2E9  +
push offset aFailedGettingM  +
jmp loc_101C2CB  +
lea eax [ebp-18h] +
push eax  +
call sub_101E1AD  +
mov edi eax +
cmp edi ebx +
jge loc_101C311  +
push dword ptr [ebp-18h]  +
push offset aFailedAddingBa  +
push 1  +
push edi  +
push esi  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101C580  +
push ebx  +
push dword ptr [ebp-18h]  +
call sub_101EECB  +
cmp eax ebx +
jge loc_101C32F  +
push offset aFailedToLoadAn  +
push 1  +
push eax  +
push esi  +
call sub_101E5B9  +
add esp 10h +
push offset byte_1002511  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 10h +
call ds:GetCommandLineW  +
push eax  +
push offset aPkgmgrCalledWi  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 14h +
lea eax [ebp-0BCh] +
push eax  +
push dword ptr [ebp-18h]  +
lea eax [ebp-10h] +
push eax  +
call sub_101BB9B  +
mov edi eax +
cmp edi ebx +
jge loc_101C379  +
push offset aFailedToAddGlo  +
jmp loc_101C2CB  +
cmp [ebp-2Ch] ebx +
jnz loc_101C496  +
cmp [ebp-80h] ebx +
jz loc_101C3B0  +
push dword ptr [ebp-0BCh]  +
lea eax [ebp-10h] +
push eax  +
call sub_101B3B5  +
mov edi eax +
cmp edi ebx +
jge loc_101C43E  +
push dword ptr [ebp-0BCh]  +
push offset aFailedInstalli  +
jmp loc_101C300  +
cmp [ebp-7Ch] ebx +
jz loc_101C3DB  +
lea eax [ebp-98h] +
push eax  +
push dword ptr [ebp-0BCh]  +
lea eax [ebp-10h] +
push eax  +
call sub_101B865  +
mov edi eax +
cmp edi ebx +
jge loc_101C43E  +
push offset aFailedUninstal  +
jmp loc_101C2CB  +
cmp [ebp-60h] ebx +
jz loc_101C40B  +
push 1  +
lea eax [ebp-78h] +
push eax  +
push dword ptr [ebp-0A0h]  +
lea eax [ebp-10h] +
push dword ptr [ebp-0BCh]  +
push eax  +
call sub_101B93E  +
mov edi eax +
cmp edi ebx +
jge loc_101C43E  +
push offset aFailedInstal_0  +
jmp loc_101C2CB  +
cmp [ebp-5Ch] ebx +
jz loc_101C496  +
push ebx  +
lea eax [ebp-78h] +
push eax  +
push dword ptr [ebp-0A0h]  +
lea eax [ebp-10h] +
push dword ptr [ebp-0BCh]  +
push eax  +
call sub_101B93E  +
mov edi eax +
cmp edi ebx +
jge loc_101C43E  +
push offset aFailedUninst_0  +
jmp loc_101C2CB  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-10h]  +
call sub_101C09C  +
mov edi eax +
cmp edi ebx +
jge loc_101C45E  +
push offset aFailedToStartD  +
jmp loc_101C2CB  +
cmp [ebp-14h] ebx +
jz loc_101C496  +
mov eax [ebp-1Ch] +
cmp eax 0BC2h +
jnz loc_101C486  +
push offset aDism_exeRetu_0  +
push ebx  +
push ebx  +
push esi  +
mov dword ptr [ebp-24h] 1 +
call sub_101E5B9  +
add esp 10h +
jmp loc_101C496  +
cmp eax ebx +
jle loc_101C494  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp [ebp-58h] ebx +
jz loc_101C556  +
lea eax [ebp-0BCh] +
push eax  +
push dword ptr [ebp-18h]  +
lea eax [ebp-10h] +
push eax  +
call sub_101BB9B  +
mov edi eax +
cmp edi ebx +
jge loc_101C4CE  +
push offset aFailedToAddGlo  +
push 1  +
push edi  +
push esi  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101C556  +
push dword ptr [ebp-58h]  +
lea eax [ebp-20h] +
push offset aApplyUnattendS  +
push eax  +
call sub_101E219  +
mov edi eax +
add esp 0Ch +
cmp edi ebx +
jge loc_101C4EF  +
push offset aFailedToAllo_1  +
jmp loc_101C4BD  +
push dword ptr [ebp-20h]  +
lea eax [ebp-10h] +
push eax  +
call sub_101DE63  +
mov edi eax +
cmp edi ebx +
jl loc_101C4E8  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-10h]  +
call sub_101C09C  +
mov edi eax +
cmp edi ebx +
jge loc_101C51E  +
push offset aFailedToStartD  +
jmp loc_101C4BD  +
cmp [ebp-14h] ebx +
jz loc_101C556  +
mov eax [ebp-1Ch] +
cmp eax 0BC2h +
jnz loc_101C546  +
push offset aDism_exeRetu_0  +
push ebx  +
push ebx  +
push esi  +
mov dword ptr [ebp-24h] 1 +
call sub_101E5B9  +
add esp 10h +
jmp loc_101C55B  +
cmp eax ebx +
jle loc_101C554  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
cmp [ebp-24h] ebx +
jz loc_101C580  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-30h]  +
push edi  +
call sub_101B7CE  +
cmp eax ebx +
jge loc_101C580  +
push offset aFailedInitiate  +
push 1  +
push eax  +
push esi  +
call sub_101E5B9  +
add esp 10h +
cmp edi ebx +
jge loc_101C5D9  +
cmp [ebp-34h] ebx +
jnz loc_101C5D9  +
mov eax edi +
and eax 1FFF0000h +
mov [ebp-14h] ebx +
cmp eax 70000h +
jnz loc_101C5D9  +
lea eax [ebp-14h] +
push eax  +
movzx eax di +
push eax  +
call sub_101B57F  +
cmp eax ebx +
jl loc_101C5B0  +
push dword ptr [ebp-14h]  +
jmp loc_101C5B5  +
push offset byte_1002511  +
push edi  +
push 10h  +
push 0EA60h  +
push 0EA64h  +
push ebx  +
call sub_101C7AC  +
add esp 18h +
cmp [ebp-14h] ebx +
jz loc_101C5D9  +
push dword ptr [ebp-14h]  +
call ds:LocalFree  +
cmp [ebp-24h] ebx +
jz loc_101C5FD  +
cmp edi ebx +
jl loc_101C5EE  +
cmp edi 1 +
jz loc_101C5EE  +
mov edi 80070BC2h +
jmp loc_101C5FD  +
xor eax eax +
cmp [ebp-28h] ebx +
setnz al  +
add eax 80070BC9h +
mov edi eax +
mov eax edi +
and eax 1FFF0000h +
cmp eax 70000h +
jnz loc_101C60E  +
movzx edi di +
push edi  +
push offset aPkgmgrReturnCo  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 14h +
cmp [ebp-18h] ebx +
jz loc_101C62C  +
push dword ptr [ebp-18h]  +
call sub_101DB34  +
cmp [ebp-10h] ebx +
jz loc_101C639  +
push dword ptr [ebp-10h]  +
call sub_101DB34  +
cmp [ebp-20h] ebx +
jz loc_101C646  +
push dword ptr [ebp-20h]  +
call sub_101DB34  +
call sub_101ADCA  +
call sub_101E2CE  +
movzx eax di +
push eax  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0BCh] +
call sub_101A15C  +
mov eax edi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ds:FormatMessageW +
push edi  +
mov [ebp+var_C] ebx +
mov [ebp+hMem] ebx +
mov [ebp+lpLibFileName] ebx +
mov edi 900h +
cmp lpSource ebx +
jnz loc_101C6CC  +
push 3  +
push offset aWindirServicin  +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_101F78A  +
test eax eax +
jl loc_101C6C4  +
push 22h  +
push ebx  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov lpSource eax +
cmp lpSource ebx +
jz loc_101C6ED  +
push [ebp+Arguments]  +
lea eax [ebp+hMem] +
push ebx  +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push lpSource  +
push edi  +
call esi  +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_101C6ED  +
cmp [ebp+hMem] ebx +
jnz loc_101C735  +
cmp dword_102E3A4 ebx +
jnz loc_101C71D  +
lea eax [ebp+var_10] +
push eax  +
push offset sub_101C676  +
push 6  +
mov [ebp+var_10] ebx +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_101C715  +
mov eax [ebp+var_10] +
mov dword_102E3A4 eax +
cmp dword_102E3A4 ebx +
jz loc_101C735  +
push [ebp+Arguments]  +
lea eax [ebp+hMem] +
push ebx  +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push dword_102E3A4  +
push edi  +
call esi  +
mov [ebp+var_C] eax +
cmp [ebp+var_C] ebx +
jz loc_101C74D  +
mov eax [ebp+hMem] +
cmp eax ebx +
jz loc_101C74D  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov [ebp+hMem] ebx +
xor esi esi +
jmp loc_101C783  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101C767  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101C76E  +
mov esi 80004005h +
push offset aFailedGettingC  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+lpLibFileName] ebx +
jz loc_101C790  +
push [ebp+lpLibFileName]  +
call sub_101DB34  +
cmp [ebp+hMem] ebx +
jz loc_101C79E  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
or [ebp+var_C] 0FFFFFFFFh +
push ebx  +
push esi  +
lea eax [ebp+arg_10] +
push edi  +
mov [ebp+Arguments] eax +
lea eax [ebp+lpCaption] +
xor ebx ebx +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
mov [ebp+lpCaption] ebx +
mov [ebp+hMem] ebx +
call sub_101C676  +
mov edi eax +
cmp edi ebx +
jge loc_101C7E3  +
push offset aFailedGettingC  +
jmp loc_101C7FE  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+arg_4]  +
call sub_101C676  +
mov edi eax +
cmp edi ebx +
jge loc_101C810  +
push offset aFailedGettin_3  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101C82B  +
mov eax [ebp+arg_C] +
or eax 10000h +
push eax  +
push [ebp+lpCaption]  +
push [ebp+hMem]  +
push [ebp+hWnd]  +
call ds:MessageBoxW  +
mov [ebp+var_C] eax +
mov esi ds:LocalFree +
mov [ebp+Arguments] ebx +
cmp [ebp+hMem] ebx +
jz loc_101C83E  +
push [ebp+hMem]  +
call esi  +
cmp [ebp+lpCaption] ebx +
jz loc_101C848  +
push [ebp+lpCaption]  +
call esi  +
cmp edi ebx +
pop edi  +
pop esi  +
pop ebx  +
jge loc_101C853  +
or [ebp+var_C] 0FFFFFFFFh +
mov eax [ebp+var_C] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
push esi  +
mov esi [ebp+arg_4] +
mov [esi] eax +
jl loc_101C89F  +
cmp [ebp+arg_0] 1 +
jz loc_101C89F  +
push 1024h  +
push 0EA60h  +
push 0EA62h  +
push eax  +
call sub_101C7AC  +
add esp 10h +
cmp eax 6 +
jnz loc_101C898  +
mov dword ptr [esi] 1 +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
push 1024h  +
push 0EA60h  +
push 0EA63h  +
jmp loc_101C884  +
***
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
mov esi [ebp-4] +
push 9  +
pop ecx  +
lea edi [ebp-28h] +
movs   +
mov eax [ebp-28h] +
and eax 0F9930520h +
or eax 19930520h +
mov [ebp-28h] eax +
lea eax [ebp-28h] +
mov [ebp-4] eax +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
mov eax [ebp-4] +
call ds:__CxxFrameHandler  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp byte ptr [ecx+8] 0 +
mov dword ptr [ecx] offset off_1002634 +
jz locret_101C921  +
mov ecx [ecx+4] +
test ecx ecx +
jz locret_101C921  +
push ecx  +
call ds:HeapDestroy  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_101C95C  +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+8] eax +
jnz loc_101C97A  +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
call dword ptr [eax]  +
jmp loc_101C99B  +
cmp [ebp+0Ch] eax +
jnz loc_101C98B  +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_101C99B  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push eax  +
push dword ptr [ecx+4]  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101C907  +
test byte ptr [ebp+8] 1 +
jz loc_101C9DA  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+8] +
mov [eax+4] ecx +
mov dword ptr [eax] offset off_1002648 +
xor ecx ecx +
mov dword ptr [eax+14h] 2 +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+18h] cx +
mov [eax+1Ah] cx +
mov [eax+8] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mul  [ebp+arg_8] +
test edx edx +
ja loc_101CA30  +
cmp eax 0FFFFFFFFh +
jbe loc_101CA37  +
mov eax 80070057h +
jmp loc_101CA3E  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+4] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
mov eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1002648 +
jz loc_101CA90  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
or edx 0FFFFFFFFh +
sub edx eax +
cmp edx ecx +
jnb loc_101CAB7  +
mov eax 80070057h +
jmp loc_101CAC0  +
add eax ecx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push esi  +
lea ecx [edx+eax] +
lea esi [ecx-1] +
cmp esi edx +
pop esi  +
jge loc_101CAE5  +
mov eax [ebp+arg_8] +
jmp loc_101CAEB  +
dec eax  +
not eax  +
dec ecx  +
and eax ecx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
push edi  +
push 7FFFFFFFh  +
push 8  +
inc eax  +
push eax  +
mov esi ecx +
call sub_101CAC9  +
push dword ptr [ebp+0Ch]  +
mov edi eax +
push edi  +
lea eax [ebp+8] +
push eax  +
call sub_101CA1C  +
test eax eax +
jl loc_101CB54  +
push dword ptr [ebp+8]  +
lea eax [ebp+8] +
push 10h  +
push eax  +
call sub_101CA9C  +
test eax eax +
jl loc_101CB54  +
mov ecx [esi+4] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax]  +
test eax eax +
jz loc_101CB54  +
dec edi  +
and dword ptr [eax+4] 0 +
mov [eax] esi +
mov dword ptr [eax+0Ch] 1 +
mov [eax+8] edi +
jmp loc_101CB56  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push esi  +
push edi  +
push 7FFFFFFFh  +
push 8  +
inc eax  +
push eax  +
mov esi ecx +
call sub_101CAC9  +
push dword ptr [ebp+10h]  +
mov edi eax +
push edi  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101CA1C  +
test eax eax +
jl loc_101CBB8  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp+0Ch] +
push 10h  +
push eax  +
call sub_101CA9C  +
test eax eax +
jl loc_101CBB8  +
push dword ptr [ebp+0Ch]  +
mov ecx [esi+4] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_101CBB8  +
dec edi  +
mov [eax+8] edi +
jmp loc_101CBBA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_101CBE1  +
test eax eax +
jnz loc_101CBE6  +
mov ecx [esi] +
test ecx ecx +
jz loc_101CBDE  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_101CBD2  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_102E430 +
push offset dword_102E420  +
push dword_102E42C  +
mov dword_102E420 eax +
push offset dword_102E410  +
push offset dword_102E414  +
push offset dword_102E40C  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_102E41C eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_101CC6E  +
cmp eax esi +
jnz loc_101CC61  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_101CC71  +
push 3E8h  +
call ds:Sleep  +
jmp loc_101CC48  +
xor esi esi +
inc esi  +
mov eax dword_102E8E8 +
cmp eax esi +
jnz loc_101CC84  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_101CCBF  +
mov eax dword_102E8E8 +
test eax eax +
jnz loc_101CCB9  +
mov dword_102E8E8 esi +
push offset dword_10011E0  +
push offset dword_10011D4  +
call sub_101CBC5  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101CCBF  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_101CD89  +
mov dword_102E428 esi +
mov eax dword_102E8E8 +
cmp eax esi +
jnz loc_101CCE3  +
push offset dword_10011D0  +
push offset dword_10011C0  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_102E8E8 2 +
cmp [ebp+var_1C] ebx +
jnz loc_101CCF0  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_102E8FC ebx +
jz loc_101CD11  +
push offset dword_102E8FC  +
call sub_101D689  +
pop ecx  +
test eax eax +
jz loc_101CD11  +
push ebx  +
push 2  +
push ebx  +
call dword_102E8FC  +
push dword_102E410  +
push dword_102E414  +
push dword_102E40C  +
call sub_101C244  +
add esp 0Ch +
mov dword_102E424 eax +
cmp dword_102E418 ebx +
jnz loc_101CD6F  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_102E424 eax +
xor ebx ebx +
cmp dword_102E418 ebx +
jnz loc_101CD6F  +
push eax  +
call ds:_exit  +
cmp dword_102E428 ebx +
jnz loc_101CD7D  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_102E424 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_101CDA6  +
xor eax eax +
jmp loc_101CDF3  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_101CDA2  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_101CDE0  +
cmp ecx 20Bh +
jnz loc_101CDA2  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_101CDA2  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_101CDEE  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_101CDA2  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_102E418 eax +
call sub_101D7F8  +
push eax  +
call ds:__set_app_type  +
or dword_102E8F0 0FFFFFFFFh +
or dword_102E8F4 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_102E438 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_102E434 +
mov [eax] ecx +
call sub_101D78A  +
cmp dword_102E088 0 +
jnz loc_101CE4C  +
push offset sub_101D78A  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101D772  +
xor eax eax +
retn   +
***
call sub_101D837  +
jmp sub_101CC26  +
***
cmp ecx dword_102E070 +
jnz loc_101CE96  +
retn 0  +
jmp loc_101D8CD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_101CEEA  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102E070 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102E070 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2D0h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_2D0] 10001h +
mov [ebp+var_20C] eax +
mov eax [eax-4] +
push offset OutputString  +
mov [ebp+var_21C] eax +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101CE8B  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_101CF82  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
xor edi edi +
cmp esi edi +
jnz loc_101D069  +
xor eax eax +
jmp loc_101D0CE  +
cmp [ebp+arg_0] edi +
jnz loc_101D089  +
call _errno  +
push 16h  +
pop esi  +
mov [eax] esi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_101D02D  +
add esp 14h +
mov eax esi +
jmp loc_101D0CE  +
cmp [ebp+arg_8] edi +
jz loc_101D0A4  +
cmp [ebp+arg_4] esi +
jb loc_101D0A4  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call memcpy  +
add esp 0Ch +
jmp loc_101D065  +
push [ebp+arg_4]  +
push edi  +
push [ebp+arg_0]  +
call memset  +
add esp 0Ch +
cmp [ebp+arg_8] edi +
jz loc_101D06E  +
cmp [ebp+arg_4] esi +
jnb loc_101D0CB  +
call _errno  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_101D078  +
push 16h  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_101D12E  +
cmp [ebp+arg_0] edi +
jnz loc_101D107  +
call _errno  +
push 16h  +
pop esi  +
mov [eax] esi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_101D02D  +
add esp 14h +
mov eax esi +
jmp loc_101D130  +
cmp [ebp+arg_8] edi +
jz loc_101D0EC  +
cmp [ebp+arg_4] eax +
jnb loc_101D11F  +
call _errno  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_101D0F6  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call memmove  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push edi  +
mov ebp [ecx] +
push edi  +
mov ebp edx +
push ebx  +
push edx  +
push ecx  +
push [esp+8+arg_4]  +
call __local_unwind4  +
add esp 0Ch +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebx+8] +
xor esi [eax] +
push edi  +
mov eax [esi] +
mov [ebp+var_1] 0 +
mov [ebp+var_C] 1 +
lea edi [ebx+10h] +
cmp eax 0FFFFFFFEh +
jz loc_101D2D6  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+arg_8] +
test byte ptr [eax+4] 66h +
jnz loc_101D403  +
lea ecx [ebp+var_18] +
mov [ebx-4] ecx +
mov ebx [ebx+0Ch] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_14] eax +
cmp ebx 0FFFFFFFEh +
jz loc_101D368  +
jmp loc_101D310  +
lea edx [ebx+ebx*2] +
mov ecx [esi+edx*4+14h] +
lea eax [esi+edx*4+10h] +
mov [ebp+var_10] eax +
mov eax [eax] +
mov [ebp+var_8] eax +
test ecx ecx +
jz loc_101D33B  +
mov edx edi +
call @_EH4_CallFilterFunc@8  +
mov [ebp+var_1] 1 +
test eax eax +
jl loc_101D372  +
jg loc_101D37B  +
mov eax [ebp+var_8] +
mov ebx eax +
cmp eax 0FFFFFFFEh +
jnz loc_101D310  +
cmp [ebp+var_1] 0 +
jz loc_101D368  +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_101D35A  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov [ebp+var_C] 0 +
jmp loc_101D348  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101D3AF  +
cmp dword_102E8F8 0 +
jz loc_101D3AF  +
push offset dword_102E8F8  +
call sub_101D689  +
add esp 4 +
test eax eax +
jz loc_101D3AF  +
mov ecx [ebp+arg_8] +
push 1  +
push ecx  +
call dword_102E8F8  +
add esp 8 +
mov ecx [ebp+arg_C] +
call @_EH4_GlobalUnwind@4  +
mov eax [ebp+arg_C] +
cmp [eax+0Ch] ebx +
jz loc_101D3D0  +
mov edx [ebp+arg_0] +
push edx  +
push edi  +
mov edx ebx +
mov ecx eax +
call @_EH4_LocalUnwind@16  +
mov eax [ebp+arg_C] +
mov ecx [ebp+var_8] +
mov [eax+0Ch] ecx +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_101D3E8  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+var_10] +
mov ecx [eax+8] +
mov edx edi +
call @_EH4_TransferToHandler@8  +
mov edx 0FFFFFFFEh +
cmp [ebx+0Ch] edx +
jz loc_101D368  +
mov ecx [ebp+arg_0] +
push ecx  +
push edi  +
mov ecx ebx +
call @_EH4_LocalUnwind@16  +
jmp loc_101D348  +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_101D427  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
push offset loc_101D52C  +
push large dword ptr fs:0  +
mov eax [esp+10h] +
mov [esp+10h] ebp +
lea ebp [esp+10h] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_102E070 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_101CE8B  +
jmp __SEH_epilog4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_101CE8B  +
push offset dword_102E070  +
call sub_101D2A0  +
add esp 18h +
pop ebp  +
retn   +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101D5CE  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101D5CE  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101D5C8  +
cmp eax 19930521h +
jz loc_101D5C8  +
cmp eax 19930522h +
jz loc_101D5C8  +
cmp eax 1994000h +
jnz loc_101D5CE  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_101D590+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101D616  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101D612  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101D67D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_101D675  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101D67F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_101D665  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_101D600  +
pop ecx  +
test eax eax +
jz loc_101D6E6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_101D640  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101D6E6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101D6EF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101D7EB  +
cmp ecx 0FFFFFFFFh +
jz loc_101D7EB  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_101D7E4  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_101D7E4  +
cmp edx 10000000h +
jnb loc_101D7E4  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_101D7E4  +
jmp loc_101D7DF  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_101D82D  +
push eax  +
call sub_101D792  +
test eax eax +
jz loc_101D82D  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101D822  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_101D82D  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_102E070 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_101D869  +
test eax ebx +
jz loc_101D869  +
not eax  +
mov dword_102E074 eax +
jmp loc_101D8C4  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101D8B0  +
test dword_102E070 ebx +
jnz loc_101D8B5  +
mov esi 0BB40E64Fh +
mov dword_102E070 esi +
not esi  +
mov dword_102E074 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_102E540 eax +
mov dword_102E53C ecx +
mov dword_102E538 edx +
mov dword_102E534 ebx +
mov dword_102E530 esi +
mov dword_102E52C edi +
mov word_102E558 ss +
mov word_102E54C cs +
mov word_102E528 ds +
mov word_102E524 es +
mov word_102E520 fs +
mov word_102E51C gs +
pushf   +
pop dword_102E550  +
mov eax [ebp+0] +
mov dword_102E544 eax +
mov eax [ebp+4] +
mov dword_102E548 eax +
lea eax [ebp+8] +
mov dword_102E554 eax +
mov eax [ebp-320h] +
mov dword_102E490 10001h +
mov eax dword_102E548 +
mov dword_102E44C eax +
mov dword_102E440 0C0000409h +
mov dword_102E444 1 +
mov eax dword_102E070 +
mov [ebp-328h] eax +
mov eax dword_102E074 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push esi  +
mov eax [esp+14h] +
or eax eax +
jnz loc_101D9F1  +
mov ecx [esp+10h] +
mov eax [esp+0Ch] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+8] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  dword ptr [esp+10h] +
mov ecx eax +
mov eax esi +
mul  dword ptr [esp+10h] +
add edx ecx +
jmp loc_101DA38  +
mov ecx eax +
mov ebx [esp+10h] +
mov edx [esp+0Ch] +
mov eax [esp+8] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_101D9FF  +
div  ebx +
mov esi eax +
mul  dword ptr [esp+14h] +
mov ecx eax +
mov eax [esp+10h] +
mul  esi +
add edx ecx +
jb loc_101DA2D  +
cmp edx [esp+0Ch] +
ja loc_101DA2D  +
jb loc_101DA36  +
cmp eax [esp+8] +
jbe loc_101DA36  +
dec esi  +
sub eax [esp+10h] +
sbb edx [esp+14h] +
xor ebx ebx +
sub eax [esp+8] +
sbb edx [esp+0Ch] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov ebx offset unk_102E090 +
retn   +
***
push ecx  +
lea ecx [esp+4] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp] eax +
retn   +
***
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_101DAF9  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax-4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 0FFFFFFFCh +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_101DB6C  +
cmp [esi] ax +
jz loc_101DB68  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_101DB5E  +
test edx edx +
jnz loc_101DB71  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_101DB82  +
test eax eax +
jl loc_101DB7F  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_101DBBD  +
cmp [ebp+arg_4] eax +
jz loc_101DBB9  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_101DBB9  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_101DB9C  +
test esi esi +
jnz loc_101DBC5  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101DBD3  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
cmp eax ebx +
jz loc_101DC13  +
mov ecx [eax-4] +
cmp ecx edi +
jnb loc_101DC06  +
push eax  +
call sub_101DB34  +
and [esi] ebx +
jmp loc_101DC13  +
cmp ecx ebx +
jbe loc_101DC0F  +
xor ecx ecx +
mov [eax] cx +
cmp [esi] ebx +
jnz loc_101DC4C  +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_101DC40  +
push offset aFailedToAllo_2  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov ebx eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_101DC4C  +
mov [eax] edi +
add eax 4 +
xor ecx ecx +
mov [esi] eax +
mov [eax] cx +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx ds:lstrlenW +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ecx ecx +
push edi  +
xor edi edi +
mov [ebp+var_4] ecx +
mov [ebp+var_8] ecx +
mov [ebp+var_C] ecx +
cmp eax ecx +
jz loc_101DC8D  +
mov edi [eax-4] +
push eax  +
mov [ebp+var_4] ecx +
call ebx  +
mov [ebp+var_8] eax +
push [ebp+lpString]  +
call ebx  +
mov edx [ebp+var_8] +
lea ecx [eax+edx+1] +
mov [ebp+arg_0] eax +
cmp ecx edx +
jb loc_101DD33  +
cmp ecx eax +
jb loc_101DD33  +
cmp edi ecx +
jnb loc_101DD0E  +
mov edi ecx +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_101DCE0  +
push offset aFailedToAllo_2  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov [ebp+var_4] eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_101DD5E  +
mov [eax] edi +
lea ebx [eax+4] +
mov eax [esi] +
test eax eax +
jz loc_101DCFF  +
mov ecx [ebp+var_8] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_101DD04  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_0] +
mov [esi] ebx +
lea ebx [eax+eax] +
mov eax [esi] +
lea ecx [edi+edi] +
sub ecx ebx +
push ecx  +
push eax  +
add eax ebx +
push eax  +
call ds:__imp_memmove  +
push ebx  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call memcpy  +
add esp 18h +
jmp loc_101DD50  +
push offset aInsufficientBu  +
mov eax 8007007Ah +
push 1  +
push eax  +
push 4000000h  +
mov [ebp+var_4] eax +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+var_C] 0 +
jz loc_101DD5E  +
push [ebp+var_C]  +
call sub_101DB34  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_101DD86  +
cmp edx esi +
jbe loc_101DD8B  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_101DDA3  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_101DB51  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_101DDA5  +
xor ecx ecx +
test eax eax +
jl loc_101DDBC  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_101DB88  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101DDDD  +
cmp ecx 7FFFFFFFh +
jbe loc_101DDE2  +
mov eax 80070057h +
test eax eax +
jl loc_101DE1E  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101DE0E  +
cmp eax esi +
ja loc_101DE0E  +
jnz loc_101DE19  +
jmp loc_101DE13  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_101DE49  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_101DE49  +
call sub_101DB51  +
jmp loc_101DE4E  +
mov eax 80070057h +
test eax eax +
jge loc_101DE59  +
test edi edi +
jz loc_101DE59  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:lstrlenW +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
cmp eax edi +
jz loc_101DE8D  +
mov edi [eax-4] +
push eax  +
call ebx  +
mov [ebp+var_4] eax +
push [ebp+lpString]  +
call ebx  +
mov ecx [ebp+var_4] +
lea eax [eax+ecx+1] +
cmp edi eax +
jnb loc_101DEF7  +
mov edi eax +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_101DECC  +
push offset aFailedToAllo_2  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov esi eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_101DF2B  +
mov [eax] edi +
lea ebx [eax+4] +
mov eax [esi] +
test eax eax +
jz loc_101DEEB  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_101DEF0  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov [esi] ebx +
mov [ebp+var_8] eax +
push [ebp+lpString]  +
push edi  +
push dword ptr [esi]  +
call sub_101DD6D  +
mov esi eax +
test esi esi +
jge loc_101DF1D  +
push offset aFailedToConcat  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+var_8] 0 +
jz loc_101DF2B  +
push [ebp+var_8]  +
call sub_101DB34  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ecx ecx +
push edi  +
mov edi ds:lstrlenW +
mov [ebp+var_4] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
cmp eax ecx +
jz loc_101DF6A  +
mov ecx [eax-4] +
push eax  +
mov [ebp+var_4] ecx +
call edi  +
mov [ebp+var_C] eax +
push [ebp+lpString]  +
call edi  +
push [ebp+arg_8]  +
mov ebx eax +
call edi  +
mov edi [ebp+var_C] +
add ebx eax +
lea ebx [ebx+edi+1] +
cmp [ebp+var_4] ebx +
jnb loc_101DFDA  +
lea eax [ebx+ebx+4] +
push eax  +
mov [ebp+var_4] ebx +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_101DFB2  +
push offset aFailedToAllo_2  +
push 1  +
mov edi 8007000Eh +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101E02A  +
mov [eax] ebx +
lea ebx [eax+4] +
mov eax [esi] +
test eax eax +
jz loc_101DFCE  +
lea ecx [edi+edi+2] +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_101DFD3  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov [esi] ebx +
mov [ebp+var_8] eax +
push [ebp+lpString]  +
push [ebp+var_4]  +
push dword ptr [esi]  +
call sub_101DD6D  +
mov edi eax +
test edi edi +
jge loc_101DFF4  +
push offset aFailedToConcat  +
jmp loc_101E00C  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push dword ptr [esi]  +
call sub_101DD6D  +
mov edi eax +
test edi edi +
jge loc_101E01C  +
push offset aFailedToConc_0  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+var_8] 0 +
jz loc_101E02A  +
push [ebp+var_8]  +
call sub_101DB34  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
test eax eax +
jz loc_101E064  +
mov ebx [eax-4] +
push eax  +
call ds:lstrlenW  +
mov [ebp+var_8] eax +
test ebx ebx +
jnz loc_101E08E  +
push 40h  +
pop ebx  +
push ebx  +
push esi  +
call sub_101DBDF  +
mov edi eax +
test edi edi +
jge loc_101E08E  +
push dword ptr [ebp+arg_4]  +
push offset aFailedToAllo_3  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101E0FB  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
push ebx  +
push dword ptr [esi]  +
call sub_101DDC7  +
mov edi eax +
cmp edi 8007007Ah +
jnz loc_101E0CF  +
cmp [ebp+var_4] 0 +
jnz loc_101E0BD  +
mov eax [esi] +
and dword ptr [esi] 0 +
mov edx [ebp+var_8] +
xor ecx ecx +
mov [ebp+var_4] eax +
mov [eax+edx*2] cx +
add ebx ebx +
push ebx  +
push esi  +
call sub_101DBDF  +
mov edi eax +
test edi edi +
jl loc_101E104  +
xor edi edi +
inc edi  +
cmp edi 1 +
jz loc_101E08E  +
test edi edi +
jge loc_101E0ED  +
push offset aFailedToFormat  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+var_4] 0 +
jz loc_101E0FB  +
push [ebp+var_4]  +
call sub_101DB34  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push dword ptr [ebp+arg_4]  +
push offset aFailedToAllo_4  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101E0ED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_4]  +
call sub_101DE27  +
mov esi eax +
test esi esi +
jge loc_101E15C  +
push offset aFailedToGetLen  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101E1A1  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi [ebp+var_4] +
inc edi  +
push edi  +
push ebx  +
call sub_101DBDF  +
mov esi eax +
test esi esi +
jge loc_101E179  +
push offset aFailedToAllo_5  +
jmp loc_101E18F  +
push [ebp+arg_4]  +
push edi  +
push dword ptr [ebx]  +
call sub_101AE01  +
mov esi eax +
test esi esi +
jge loc_101E19F  +
push offset aFailedToCopySo  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebx] +
mov eax [esi-4] +
push edi  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push esi  +
call sub_101DE27  +
mov edi eax +
test edi edi +
jge loc_101E1DA  +
push offset aFailedToGetL_0  +
jmp loc_101E1FB  +
mov eax [ebp+var_4] +
cmp word ptr [esi+eax*2-2] 5Ch +
jz loc_101E20B  +
push offset asc_1001260  +
push ebx  +
call sub_101DE63  +
mov edi eax +
test edi edi +
jge loc_101E20B  +
push offset aFailedToConc_1  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101E038  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call sub_101FA00  +
mov ebx offset aUnknownError +
push 0Eh  +
mov edi ebx +
mov esi eax +
pop ecx  +
xor edx edx +
cmps   +
jz loc_101E25B  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_101E2C2  +
mov ecx [ebp+arg_0] +
mov eax ecx +
sar eax 10h +
and eax 1FFFh +
push ecx  +
cmp eax 7 +
jnz loc_101E279  +
call sub_1020A4C  +
jmp loc_101E2C2  +
cmp eax 0Fh +
jnz loc_101E285  +
call sub_10200CD  +
jmp loc_101E2C2  +
cmp eax 0E5Eh +
jnz loc_101E293  +
call sub_102AC88  +
jmp loc_101E2C2  +
call sub_1029E4D  +
push 0Eh  +
mov edi ebx +
mov esi eax +
pop ecx  +
xor edx edx +
cmps   +
jz loc_101E2AA  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_101E2C2  +
mov eax [ebp+arg_0] +
or eax 10000000h +
cmp [ebp+arg_0] eax +
mov eax offset aNtstatusError +
jz loc_101E2C2  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax dword_102E768 +
push esi  +
xor esi esi +
cmp eax esi +
jz loc_101E2DC  +
call eax  +
mov eax hLibModule +
mov dword_102E774 esi +
mov dword_102E770 esi +
mov dword_102E76C esi +
mov dword_102E768 esi +
mov dword_102E764 esi +
mov dword_102E760 esi +
cmp eax esi +
jz loc_101E316  +
push eax  +
call ds:FreeLibrary  +
mov hLibModule esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword_102E770  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_101E365  +
cmp eax esi +
ja loc_101E365  +
jnz loc_101E36F  +
mov [esi+edi] bl +
jmp loc_101E36D  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101E378  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_101E39A  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_101E39F  +
mov eax 80070057h +
test eax eax +
jl loc_101E3B8  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_101E339  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_101E3D6  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_101E3DB  +
mov eax 80070057h +
test eax eax +
jl loc_101E3F5  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_101E339  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_8] +
push esi  +
push ecx  +
push eax  +
mov esi 400h +
push esi  +
lea eax [ebp+OutputString] +
push eax  +
call sub_101E385  +
test eax eax +
jl loc_101E477  +
cmp [ebp+arg_4] 0 +
jz loc_101E46A  +
push [ebp+arg_0]  +
call sub_101E234  +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+OutputString] +
push eax  +
push offset aSHresult0x08xS  +
lea eax [ebp+var_804] +
push esi  +
push eax  +
call sub_101E3C1  +
add esp 18h +
test eax eax +
jl loc_101E477  +
lea eax [ebp+var_804] +
jmp loc_101E470  +
lea eax [ebp+OutputString] +
push eax  +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CE8B  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov esi 400h +
push esi  +
lea eax [ebp+OutputString] +
push eax  +
call sub_101E385  +
test eax eax +
jl loc_101E505  +
cmp [ebp+arg_4] 0 +
jz loc_101E4F8  +
push [ebp+arg_0]  +
call sub_101E234  +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+OutputString] +
push eax  +
push offset aSHresult0x08xS  +
lea eax [ebp+var_804] +
push esi  +
push eax  +
call sub_101E3C1  +
add esp 18h +
test eax eax +
jl loc_101E505  +
lea eax [ebp+var_804] +
jmp loc_101E4FE  +
lea eax [ebp+OutputString] +
push eax  +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CE8B  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor eax eax +
push edi  +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_4] +
push eax  +
push offset aSystemsetupinp  +
push 1  +
mov edi offset SubKey +
push edi  +
mov esi 80000002h +
push esi  +
call sub_102C83E  +
test eax eax +
jl loc_101E598  +
cmp [ebp+var_4] 0 +
jbe loc_101E598  +
lea eax [ebp+var_8] +
push eax  +
push offset aSetupphase  +
push 1  +
push edi  +
push esi  +
call sub_102C83E  +
test eax eax +
jl loc_101E56E  +
cmp [ebp+var_8] 4 +
jz loc_101E598  +
lea eax [ebp+var_C] +
push eax  +
push offset aWorkingdirecto  +
push 1  +
push edi  +
push esi  +
call sub_102C60D  +
test eax eax +
jge loc_101E598  +
push offset aFailedToLocate  +
push 1  +
push eax  +
call sub_101E48B  +
add esp 0Ch +
and [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
test eax eax +
jz loc_101E5AE  +
mov ecx [ebp+var_C] +
mov [eax] ecx +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
cmp dword_102E76C ebx +
jz loc_101E697  +
mov eax dword_102E770 +
cmp eax ebx +
jz loc_101E697  +
cmp dword_102E774 ebx +
jz loc_101E697  +
cmp [ebp+arg_8] bl +
jz loc_101E65C  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call sub_101E385  +
test eax eax +
jl loc_101E6A9  +
push [ebp+arg_4]  +
call sub_101E234  +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+var_404] +
push eax  +
push offset aSHresult0x08xS  +
push [ebp+arg_0]  +
call sub_101E31D  +
add esp 14h +
push ebx  +
push ebx  +
push ebx  +
mov esi eax +
call dword_102E774  +
push eax  +
push offset aCbswdslog  +
push offset aDW7rtmBaseCbsU  +
push 39Eh  +
jmp loc_101E683  +
lea ecx [ebp+arg_10] +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
call eax  +
push ebx  +
push ebx  +
push ebx  +
mov esi eax +
call dword_102E774  +
push eax  +
push offset aCbswdslog  +
push offset aDW7rtmBaseCbsU  +
push 3A4h  +
push ebx  +
push offset aD_0  +
push 20000h  +
push esi  +
call dword_102E76C  +
jmp loc_101E6A9  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_C]  +
push dword ptr [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101E3FC  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CE8B  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4B8h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov esi 24Ch +
push esi  +
lea eax [ebp+FindFileData.ftCreationTime] +
push edi  +
push eax  +
mov [ebp+var_4B8] ebx +
mov [ebp+lpFileName] edi +
mov [ebp+var_4AC] edi +
mov [ebp+FindFileData.dwFileAttributes] edi +
call memset  +
push esi  +
lea eax [ebp+var_4A0] +
push edi  +
push eax  +
mov [ebp+var_4A4] edi +
call memset  +
add esp 18h +
push ebx  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101E123  +
cmp eax edi +
mov [ebp+var_4A8] eax +
jge loc_101E74D  +
push ebx  +
push offset aFailedToAllo_6  +
push 1  +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101E8CF  +
push offset aCbspersist__  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101DE63  +
cmp eax edi +
mov [ebp+var_4A8] eax +
jge loc_101E782  +
push offset aFailedToAllo_7  +
push 1  +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101E8CF  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpFileName]  +
xor ebx ebx +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_101E8CF  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jnz loc_101E7E1  +
cmp ebx edi +
jz loc_101E7CB  +
lea eax [ebp+FindFileData.ftLastWriteTime] +
push eax  +
lea eax [ebp+FileTime1] +
push eax  +
call ds:CompareFileTime  +
test eax eax +
jle loc_101E7E0  +
mov ecx 94h +
lea esi [ebp+FindFileData] +
lea edi [ebp+var_4A4] +
movs   +
xor edi edi +
inc ebx  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_101E7A6  +
cmp ebx 5 +
jbe loc_101E8C3  +
lea eax [ebp+var_478] +
push eax  +
push [ebp+var_4B8]  +
lea eax [ebp+var_4AC] +
push offset aSS  +
push eax  +
call sub_101E219  +
add esp 10h +
cmp eax edi +
mov [ebp+var_4A8] eax +
jl loc_101E86D  +
push [ebp+var_4AC]  +
call ds:DeleteFileW  +
test eax eax +
jz loc_101E877  +
push [ebp+hFindFile]  +
dec ebx  +
call ds:FindClose  +
cmp [ebp+var_4AC] edi +
jz loc_101E862  +
push [ebp+var_4AC]  +
call sub_101DB34  +
mov [ebp+var_4AC] edi +
cmp ebx 5 +
ja loc_101E782  +
jmp loc_101E8CF  +
push offset aFailedToAllo_8  +
push 1  +
push eax  +
jmp loc_101E8B6  +
call ds:GetLastError  +
cmp eax edi +
mov [ebp+var_4A8] eax +
jle loc_101E897  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4A8] eax +
cmp [ebp+var_4A8] edi +
jl loc_101E8A9  +
mov [ebp+var_4A8] 80004005h +
push offset aFailedToDelete  +
push 1  +
push [ebp+var_4A8]  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
push [ebp+hFindFile]  +
call ds:FindClose  +
cmp [ebp+lpFileName] edi +
jz loc_101E8E2  +
push [ebp+lpFileName]  +
call sub_101DB34  +
cmp [ebp+var_4AC] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_101E8F8  +
push [ebp+var_4AC]  +
call sub_101DB34  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_4A8] +
xor ecx ebp +
call sub_101CE8B  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4D8h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 24Ch  +
lea eax [ebp+FindFileData.ftCreationTime] +
push ebx  +
push eax  +
mov [ebp+var_47C] esi +
mov dword ptr [ebp+var_464] ebx +
mov dword ptr [ebp+var_460] ebx +
mov [ebp+lpApplicationName] ebx +
mov [ebp+lpCommandLine] ebx +
xor edi edi +
mov [ebp+var_470] ebx +
mov [ebp+ExitCode] ebx +
mov [ebp+lpFileName] ebx +
mov [ebp+var_474] ebx +
mov [ebp+FindFileData.dwFileAttributes] ebx +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetWindowsDirectoryW  +
test eax eax +
jnz loc_101E9CE  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101E9AD  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jl loc_101E9B4  +
mov eax 80004005h +
push offset aFailedToGetWin  +
push 1  +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101ED85  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+lpApplicationName] +
push eax  +
call sub_101E123  +
cmp eax ebx +
jge loc_101EA06  +
lea ecx [ebp+Buffer] +
push ecx  +
push offset aFailedToAllo_9  +
push 1  +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101ED85  +
lea eax [ebp+lpApplicationName] +
push eax  +
call sub_101E1AD  +
cmp eax ebx +
jge loc_101EA23  +
push [ebp+lpApplicationName]  +
push offset aFailedToEnsure  +
jmp loc_101E9F1  +
push offset aMakecab_exe  +
push offset aSystem32  +
lea eax [ebp+lpApplicationName] +
push eax  +
call sub_101DF39  +
cmp eax ebx +
jge loc_101EA47  +
push offset aFailedToAll_10  +
jmp loc_101E9B9  +
push esi  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101E123  +
cmp eax ebx +
jge loc_101EA62  +
push offset aFailedToAll_11  +
jmp loc_101E9B9  +
push offset aCbspersist__lo  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101DE63  +
cmp eax ebx +
jge loc_101EA81  +
push offset aFailedToAll_12  +
jmp loc_101E9B9  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpFileName]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
mov esi 4000000h +
cmp eax 0FFFFFFFFh +
jz loc_101ED0A  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jnz loc_101ECEF  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push [ebp+var_47C]  +
lea eax [ebp+var_464] +
push offset aSS  +
push eax  +
call sub_101E219  +
add esp 10h +
cmp eax ebx +
jl loc_101EE0E  +
lea eax [ebp+var_460] +
push eax  +
push offset aCab  +
push dword ptr [ebp+var_464]  +
call sub_102CA95  +
cmp eax ebx +
jl loc_101EE15  +
push dword ptr [ebp+var_460]  +
lea eax [ebp+lpCommandLine] +
push dword ptr [ebp+var_464]  +
push [ebp+lpApplicationName]  +
push offset aSSS  +
push eax  +
call sub_101E219  +
add esp 14h +
cmp eax ebx +
jl loc_101EE1C  +
push 44h  +
pop edi  +
push edi  +
lea eax [ebp+StartupInfo] +
push ebx  +
push eax  +
call memset  +
mov [ebp+StartupInfo.cb] edi +
xor eax eax +
lea edi [ebp+hProcess] +
stos   +
stos   +
add esp 0Ch +
stos   +
stos   +
lea eax [ebp+hProcess] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+lpCommandLine]  +
push [ebp+lpApplicationName]  +
call ds:CreateProcessW  +
mov edi eax +
mov [ebp+var_470] edi +
cmp edi ebx +
jz loc_101EE32  +
push 0FFFFFFFFh  +
push [ebp+hProcess]  +
call ds:WaitForSingleObject  +
mov [ebp+ExitCode] eax +
cmp eax ebx +
jnz loc_101EE59  +
push dword ptr [ebp+var_460]  +
call sub_102C962  +
test eax eax +
jz loc_101EE86  +
push dword ptr [ebp+var_460]  +
push offset aArchivedBackup  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 14h +
push ebx  +
push 80h  +
push 3  +
push ebx  +
push 1  +
push 40000000h  +
push dword ptr [ebp+var_460]  +
call ds:CreateFileW  +
mov edi eax +
mov [ebp+var_474] edi +
cmp edi 0FFFFFFFFh +
jnz loc_101EC13  +
push dword ptr [ebp+var_460]  +
mov [ebp+var_474] ebx +
push offset aFailedToOpenHa  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101EC54  +
lea eax [ebp+FindFileData.ftLastWriteTime] +
push eax  +
push ebx  +
lea eax [ebp+FindFileData.ftCreationTime] +
push eax  +
push edi  +
call ds:SetFileTime  +
test eax eax +
jnz loc_101EC43  +
push dword ptr [ebp+var_460]  +
push offset aFailedToTransf  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 14h +
cmp edi ebx +
jz loc_101EC54  +
push edi  +
call ds:CloseHandle  +
mov [ebp+var_474] ebx +
push dword ptr [ebp+var_464]  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_101EC7A  +
push dword ptr [ebp+var_464]  +
push offset aFailedToDele_0  +
push ebx  +
push ebx  +
push esi  +
call sub_101E5B9  +
add esp 14h +
cmp dword ptr [ebp+var_464] ebx +
jz loc_101EC93  +
push dword ptr [ebp+var_464]  +
call sub_101DB34  +
mov dword ptr [ebp+var_464] ebx +
cmp dword ptr [ebp+var_460] ebx +
jz loc_101ECAC  +
push dword ptr [ebp+var_460]  +
call sub_101DB34  +
mov dword ptr [ebp+var_460] ebx +
cmp [ebp+lpCommandLine] ebx +
jz loc_101ECC5  +
push [ebp+lpCommandLine]  +
call sub_101DB34  +
mov [ebp+lpCommandLine] ebx +
cmp [ebp-490h] ebx +
jz loc_101ECD9  +
push dword ptr [ebp-490h]  +
call ds:CloseHandle  +
cmp [ebp+hProcess] ebx +
jz loc_101ECED  +
push [ebp+hProcess]  +
call ds:CloseHandle  +
xor edi edi +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_101EAA8  +
push [ebp+var_47C]  +
call sub_101E6BC  +
cmp eax ebx +
jge loc_101ED5C  +
mov [ebp+var_470] ebx +
push offset aFailedToDele_1  +
push 1  +
push eax  +
push esi  +
call sub_101E5B9  +
add esp 10h +
cmp edi ebx +
jz loc_101ED5C  +
cmp [ebp-490h] ebx +
jz loc_101ED48  +
push dword ptr [ebp-490h]  +
call ds:CloseHandle  +
cmp [ebp+hProcess] ebx +
jz loc_101ED5C  +
push [ebp+hProcess]  +
call ds:CloseHandle  +
cmp [ebp+hFindFile] 0FFFFFFFFh +
jz loc_101ED71  +
push [ebp+hFindFile]  +
call ds:FindClose  +
cmp [ebp+var_474] ebx +
jz loc_101ED85  +
push [ebp+var_474]  +
call ds:CloseHandle  +
cmp [ebp+lpFileName] ebx +
jz loc_101ED98  +
push [ebp+lpFileName]  +
call sub_101DB34  +
cmp [ebp+var_47C] ebx +
jz loc_101EDAB  +
push [ebp+var_47C]  +
call sub_101DB34  +
cmp dword ptr [ebp+var_464] ebx +
jz loc_101EDBE  +
push dword ptr [ebp+var_464]  +
call sub_101DB34  +
cmp dword ptr [ebp+var_460] ebx +
jz loc_101EDD1  +
push dword ptr [ebp+var_460]  +
call sub_101DB34  +
cmp [ebp+lpApplicationName] ebx +
jz loc_101EDE4  +
push [ebp+lpApplicationName]  +
call sub_101DB34  +
cmp [ebp+lpCommandLine] ebx +
pop edi  +
pop esi  +
pop ebx  +
jz loc_101EDFA  +
push [ebp+lpCommandLine]  +
call sub_101DB34  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_470] +
xor ecx ebp +
call sub_101CE8B  +
leave   +
retn 4  +
push offset aFailedToAll_13  +
jmp loc_101EE21  +
push offset aFailedToAll_14  +
jmp loc_101EE21  +
push offset aFailedToAll_15  +
push 1  +
push eax  +
push esi  +
call sub_101E5B9  +
add esp 10h +
jmp loc_101ED5C  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101EE48  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jl loc_101EE4F  +
mov eax 80004005h +
push offset aFailedToCreate  +
jmp loc_101ED24  +
mov [ebp+var_470] ebx +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101EE75  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jl loc_101EE7C  +
mov eax 80004005h +
push offset aFailedToWaitOn  +
jmp loc_101ED24  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hProcess]  +
mov [ebp+var_470] ebx +
call ds:GetExitCodeProcess  +
mov eax [ebp+ExitCode] +
cmp eax ebx +
jle loc_101EEB5  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
jl loc_101EEBC  +
mov eax 80004005h +
push offset aFailedToCrea_0  +
jmp loc_101ED24  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 854h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpString] +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi offset aWdscore_dll +
push edi  +
push eax  +
lea eax [ebp+lpLibFileName] +
push eax  +
mov [ebp+var_840] ecx +
mov [ebp+var_82C] ebx +
mov dword ptr [ebp+lpFileName] ebx +
mov [ebp+lpNewFileName] ebx +
mov dword ptr [ebp+lpLibFileName] ebx +
mov [ebp+var_828] ebx +
mov [ebp+var_834] 3 +
mov [ebp+lpParameter] ebx +
mov [ebp+hObject] ebx +
call sub_101DF39  +
mov esi eax +
cmp esi ebx +
jl loc_101F002  +
push dword ptr [ebp+lpLibFileName]  +
mov ebx ds:LoadLibraryW +
call ebx  +
mov hLibModule eax +
test eax eax +
jnz loc_101F072  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetWindowsDirectoryW  +
test eax eax +
jnz loc_101EF9E  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101EF8D  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101EF94  +
mov esi 80004005h +
push offset aFailedToGetW_0  +
jmp loc_101F1E4  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_101E123  +
mov esi eax +
test esi esi +
jge loc_101EFC8  +
lea eax [ebp+Buffer] +
push eax  +
push offset aFailedToAll_16  +
jmp loc_101F06B  +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_101E1AD  +
mov esi eax +
test esi esi +
jge loc_101EFEA  +
push dword ptr [ebp+lpLibFileName]  +
push offset aFailedToEnsu_0  +
jmp loc_101F06B  +
push edi  +
push offset aSystem32  +
lea eax [ebp+lpLibFileName] +
push eax  +
call sub_101DF39  +
mov esi eax +
test esi esi +
jge loc_101F00C  +
push offset aFailedToAll_17  +
jmp loc_101F1E4  +
push dword ptr [ebp+lpLibFileName]  +
call ebx  +
mov hLibModule eax +
test eax eax +
jnz loc_101F072  +
call ds:GetLastError  +
cmp eax 7Eh +
jnz loc_101F047  +
push dword ptr [ebp+lpLibFileName]  +
xor edi edi +
push offset aCouldNotLoadWd  +
inc edi  +
push edi  +
push edi  +
call sub_101E48B  +
add esp 10h +
mov esi edi +
jmp loc_101F5E6  +
test eax eax +
jle loc_101F055  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jl loc_101F060  +
mov esi 80004005h +
push dword ptr [ebp+lpLibFileName]  +
push offset aFailedToLoadWd  +
push 1  +
jmp loc_101F41A  +
mov esi ds:GetProcAddress +
push offset ProcName  +
push eax  +
call esi  +
xor ebx ebx +
mov dword_102E760 eax +
cmp eax ebx +
jnz loc_101F0B4  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101F09F  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov esi eax +
jl loc_101F0AA  +
mov esi 80004005h +
push offset aFailedToGetPro  +
jmp loc_101F1E4  +
push offset aWdsgenericsetu  +
push hLibModule  +
call esi  +
mov dword_102E764 eax +
cmp eax ebx +
jnz loc_101F0F3  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101F0DE  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov esi eax +
jl loc_101F0E9  +
mov esi 80004005h +
push offset aFailedToGetP_0  +
jmp loc_101F1E4  +
push offset aWdssetuplogdes  +
push hLibModule  +
call esi  +
mov dword_102E768 eax +
cmp eax ebx +
jnz loc_101F132  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101F11D  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov esi eax +
jl loc_101F128  +
mov esi 80004005h +
push offset aFailedToGetP_1  +
jmp loc_101F1E4  +
push offset aWdssetuplogmes  +
push hLibModule  +
call esi  +
mov dword_102E76C eax +
cmp eax ebx +
jnz loc_101F16E  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101F15C  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov esi eax +
jl loc_101F167  +
mov esi 80004005h +
push offset aFailedToGetP_2  +
jmp loc_101F1E4  +
push offset aConstructparti  +
push hLibModule  +
call esi  +
mov dword_102E770 eax +
cmp eax ebx +
jnz loc_101F1AA  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101F198  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov esi eax +
jl loc_101F1A3  +
mov esi 80004005h +
push offset aFailedToGetP_3  +
jmp loc_101F1E4  +
push offset aCurrentip  +
push hLibModule  +
call esi  +
mov dword_102E774 eax +
cmp eax ebx +
jnz loc_101F1EB  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101F1D4  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov esi eax +
jl loc_101F1DF  +
mov esi 80004005h +
push offset aFailedToGetP_4  +
push 1  +
jmp loc_101F5A0  +
lea eax [ebp+lpFileName] +
push eax  +
lea eax [ebp+var_82C] +
push eax  +
call sub_101E517  +
xor edi edi +
mov esi eax +
inc edi  +
cmp esi ebx +
jge loc_101F216  +
push offset aFailedChecking  +
push edi  +
push esi  +
call sub_101E48B  +
add esp 0Ch +
mov eax [ebp+var_82C] +
mov [ebp+var_828] eax +
cmp eax ebx +
jnz loc_101F539  +
xor eax eax +
push 3FEh  +
mov word ptr [ebp+var_814] ax +
lea eax [ebp+var_814+2] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push 200h  +
lea eax [ebp+var_814] +
push eax  +
push offset aComponent_base  +
call ds:GetEnvironmentVariableW  +
dec eax  +
cmp eax 1FEh +
ja loc_101F2D5  +
lea eax [ebp+var_814] +
push eax  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101E123  +
mov esi eax +
cmp esi ebx +
jge loc_101F291  +
lea eax [ebp+var_814] +
push eax  +
push offset aFailedToAll_18  +
jmp loc_101F419  +
mov [ebp+var_828] edi +
push 9000h  +
push dword ptr [ebp+lpFileName]  +
call dword_102E764  +
test eax eax +
jnz loc_101F5B3  +
push dword ptr [ebp+lpFileName]  +
push dword ptr [ebp+lpLibFileName]  +
push offset aFailedToInitia  +
mov esi 8000FFFFh +
push edi  +
push esi  +
call sub_101E48B  +
add esp 14h +
jmp loc_101F5E6  +
lea eax [ebp+var_828] +
push eax  +
push offset aEnablelog  +
push edi  +
push offset aSoftwareMicros  +
mov ebx 80000002h +
push ebx  +
call sub_102C83E  +
test eax eax +
jl loc_101F595  +
cmp [ebp+var_828] 0 +
jbe loc_101F595  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call ds:GetWindowsDirectoryW  +
test eax eax +
jnz loc_101F348  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101F337  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101F33E  +
mov esi 80004005h +
push offset aFailedToGetW_1  +
jmp loc_101F59F  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101E123  +
mov esi eax +
test esi esi +
jge loc_101F372  +
lea eax [ebp+var_20C] +
push eax  +
push offset aFailedToAll_19  +
jmp loc_101F419  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101E1AD  +
mov esi eax +
test esi esi +
jge loc_101F394  +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToEnsu_1  +
jmp loc_101F419  +
push offset aLogsCbs  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jge loc_101F3B8  +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToAddSer  +
jmp loc_101F419  +
push 0  +
push dword ptr [ebp+lpFileName]  +
call sub_102CB61  +
push dword ptr [ebp+lpFileName]  +
mov esi eax +
test esi esi +
jge loc_101F3D8  +
push offset aFailedToEnsu_2  +
jmp loc_101F419  +
lea eax [ebp+lpParameter] +
push eax  +
call sub_101E123  +
mov esi eax +
test esi esi +
jge loc_101F3F7  +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToStoreL  +
jmp loc_101F419  +
push offset aCbs_log  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jge loc_101F428  +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToAddLog  +
push edi  +
push esi  +
call sub_101E48B  +
add esp 10h +
jmp loc_101F5E6  +
and [ebp+var_83C] 0 +
and [ebp+var_838] 0 +
lea eax [ebp+var_83C] +
push eax  +
push dword ptr [ebp+lpFileName]  +
call sub_102C989  +
test eax eax +
jl loc_101F537  +
cmp [ebp+var_838] 0 +
ja loc_101F469  +
cmp [ebp+var_83C] 0F00000h +
jbe loc_101F537  +
lea eax [ebp+var_834] +
push eax  +
push offset aStart  +
push edi  +
push offset aSystemCurrentc  +
push ebx  +
call sub_102C83E  +
test eax eax +
jl loc_101F492  +
cmp [ebp+var_834] 2 +
jz loc_101F537  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetSystemTime  +
movzx eax [ebp+SystemTime.wSecond] +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
push [ebp+lpParameter]  +
lea eax [ebp+lpNewFileName] +
push offset aSCbspersist_02  +
push eax  +
call sub_101E219  +
add esp 24h +
test eax eax +
jl loc_101F57E  +
push edi  +
push [ebp+lpNewFileName]  +
push dword ptr [ebp+lpFileName]  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_101F537  +
call ds:GetLastError  +
test eax eax +
jle loc_101F51C  +
and eax 0FFFFh +
or eax 80070000h +
push [ebp+lpNewFileName]  +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToMoveLo  +
push edi  +
push eax  +
call sub_101E48B  +
add esp 14h +
xor ebx ebx +
cmp [ebp+var_828] ebx +
jbe loc_101F5AB  +
cmp [ebp+var_82C] ebx +
jz loc_101F297  +
push dword ptr [ebp+lpFileName]  +
push 0B000h  +
push [ebp+var_840]  +
call dword_102E760  +
test eax eax +
jnz loc_101F5AB  +
push dword ptr [ebp+lpFileName]  +
push dword ptr [ebp+lpLibFileName]  +
push offset aFailedToInit_0  +
jmp loc_101F2C1  +
push dword ptr [ebp+lpFileName]  +
push offset aCouldNotAlloca  +
push edi  +
push eax  +
call sub_101E48B  +
add esp 10h +
jmp loc_101F537  +
mov esi 80004004h +
push offset aWdsLoggingIsNo  +
push edi  +
push esi  +
call sub_101E48B  +
add esp 0Ch +
jmp loc_101F5E6  +
cmp [ebp+var_82C] ebx +
jnz loc_101F5E6  +
cmp [ebp+lpParameter] ebx +
jz loc_101F5FA  +
lea eax [ebp+ThreadId] +
push eax  +
push ebx  +
push [ebp+lpParameter]  +
push offset StartAddress  +
push ebx  +
push ebx  +
call ds:CreateThread  +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_101F5E6  +
mov [ebp+lpParameter] ebx +
cmp [ebp+lpParameter] 0 +
jz loc_101F5FA  +
push [ebp+lpParameter]  +
call sub_101DB34  +
xor edi edi +
cmp [ebp+lpNewFileName] edi +
jz loc_101F60F  +
push [ebp+lpNewFileName]  +
call sub_101DB34  +
cmp dword ptr [ebp+lpFileName] edi +
jz loc_101F622  +
push dword ptr [ebp+lpFileName]  +
call sub_101DB34  +
cmp dword ptr [ebp+lpLibFileName] edi +
jz loc_101F635  +
push dword ptr [ebp+lpLibFileName]  +
call sub_101DB34  +
cmp esi edi +
jge loc_101F66F  +
push hLibModule  +
mov dword_102E760 edi +
mov dword_102E764 edi +
mov dword_102E768 edi +
mov dword_102E76C edi +
mov dword_102E770 edi +
mov dword_102E774 edi +
call ds:FreeLibrary  +
mov hLibModule edi +
cmp [ebp+hObject] edi +
jz loc_101F683  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CE8B  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ecx] +
movzx eax word ptr [esi] +
push edi  +
push 61h  +
pop ebx  +
xor edi edi +
push 5Ch  +
pop edx  +
cmp bx ax +
ja loc_101F6C1  +
push 7Ah  +
pop ebx  +
cmp bx ax +
jnb loc_101F6D1  +
push 41h  +
pop ebx  +
cmp bx ax +
ja loc_101F6FE  +
push 5Ah  +
pop ebx  +
cmp bx ax +
jb loc_101F6FE  +
push 3Ah  +
pop ebx  +
cmp bx [esi+2] +
jnz loc_101F6FE  +
mov ebx edx +
cmp bx [esi+4] +
jnz loc_101F6FE  +
push offset String  +
push ecx  +
call sub_101DC5A  +
mov edi eax +
test edi edi +
jge loc_101F77C  +
push offset aFailedToAddPre  +
jmp loc_101F76C  +
mov ecx edx +
cmp cx ax +
jnz loc_101F762  +
lea ebx [esi+2] +
mov eax edx +
cmp ax [ebx] +
jnz loc_101F762  +
push 3Fh  +
pop eax  +
cmp ax [esi+4] +
jz loc_101F77C  +
cmp dx [esi+6] +
jz loc_101F77C  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call sub_101DB19  +
mov edi eax +
test edi edi +
jge loc_101F735  +
push offset aFailedToGetSiz  +
jmp loc_101F76C  +
mov eax [ebp+var_4] +
lea eax [eax+eax-2] +
push eax  +
push ebx  +
push esi  +
call ds:__imp_memmove  +
add esp 0Ch +
push offset a?Unc  +
push [ebp+arg_0]  +
call sub_101DC5A  +
mov edi eax +
test edi edi +
jge loc_101F77C  +
push offset aFailedToAddP_0  +
jmp loc_101F76C  +
mov edi 80070057h +
push offset aInvalidPathPro  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
test [ebp+lpFileName] 1 +
push 40h  +
mov [ebp+lpDst] edi +
mov [ebp+nSize] edi +
mov [ebp+lpBuffer] edi +
pop ebx  +
jz loc_101F89A  +
push ebx  +
lea eax [ebp+lpDst] +
push eax  +
mov [ebp+nSize] ebx +
call sub_101DBDF  +
mov esi eax +
cmp esi edi +
jge loc_101F7CC  +
push offset aFailedToAll_20  +
jmp loc_101F9C4  +
push [ebp+nSize]  +
mov edi ds:ExpandEnvironmentStringsW +
push [ebp+lpDst]  +
push [ebp+lpSrc]  +
call edi  +
test eax eax +
jz loc_101F812  +
cmp [ebp+nSize] eax +
jnb loc_101F854  +
push eax  +
mov [ebp+nSize] eax +
lea eax [ebp+lpDst] +
push eax  +
call sub_101DBDF  +
mov esi eax +
test esi esi +
jge loc_101F803  +
push offset aFailedToReAllo  +
jmp loc_101F9C4  +
push [ebp+nSize]  +
push [ebp+lpDst]  +
push [ebp+lpSrc]  +
call edi  +
test eax eax +
jnz loc_101F840  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101F82C  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101F833  +
mov esi 80004005h +
push [ebp+lpSrc]  +
push offset aFailedToExpand  +
jmp loc_101F956  +
cmp [ebp+nSize] eax +
jnb loc_101F854  +
mov esi 8007007Ah +
push offset aFailedToAll_21  +
jmp loc_101F9C4  +
cmp eax 104h +
jbe loc_101F89A  +
lea eax [ebp+lpDst] +
push eax  +
call sub_101F69B  +
mov esi eax +
cmp esi 80070057h +
jnz loc_101F870  +
xor esi esi +
test esi esi +
jge loc_101F87E  +
push offset aFailedToPrefix  +
jmp loc_101F9C4  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpDst]  +
call sub_101DB19  +
mov esi eax +
test esi esi +
jge loc_101F89A  +
push offset aFailedToGetMax  +
jmp loc_101F9C4  +
test [ebp+lpFileName] 2 +
mov eax [ebp+lpDst] +
jz loc_101F995  +
and [ebp+FilePart] 0 +
test eax eax +
jnz loc_101F8B2  +
mov eax [ebp+lpSrc] +
mov dword ptr [ebp+lpFileName] eax +
cmp [ebp+nSize] ebx +
jbe loc_101F8BD  +
mov ebx [ebp+nSize] +
push ebx  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_101DBDF  +
mov esi eax +
test esi esi +
jge loc_101F8D7  +
push offset aFailedToAll_22  +
jmp loc_101F9C4  +
mov edi ds:GetFullPathNameW +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpBuffer]  +
push ebx  +
push dword ptr [ebp+lpFileName]  +
call edi  +
test eax eax +
jz loc_101F92D  +
cmp ebx eax +
jnb loc_101F978  +
mov ebx eax +
cmp eax 104h +
jb loc_101F902  +
lea ebx [eax+7] +
push ebx  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_101DBDF  +
mov esi eax +
test esi esi +
jge loc_101F91C  +
push offset aFailedToReAl_0  +
jmp loc_101F9C4  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpBuffer]  +
push ebx  +
push dword ptr [ebp+lpFileName]  +
call edi  +
test eax eax +
jnz loc_101F968  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101F947  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101F94E  +
mov esi 80004005h +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToGetFul  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_101F9D4  +
cmp ebx eax +
jnb loc_101F978  +
mov esi 8007007Ah +
push offset aFailedToAll_23  +
jmp loc_101F9C4  +
cmp eax 104h +
jbe loc_101F99C  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_101F69B  +
mov esi eax +
test esi esi +
jge loc_101F99C  +
push offset aFailedToPref_0  +
jmp loc_101F9C4  +
and [ebp+lpDst] 0 +
mov [ebp+lpBuffer] eax +
mov eax [ebp+lpBuffer] +
test eax eax +
jz loc_101F9AE  +
mov ecx [ebp+arg_0] +
and [ebp+lpBuffer] 0 +
mov [ecx] eax +
jmp loc_101F9E2  +
push [ebp+lpSrc]  +
push [ebp+arg_0]  +
call sub_101E123  +
mov esi eax +
test esi esi +
jge loc_101F9D4  +
push offset aFailedToCopyRe  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
cmp [ebp+lpBuffer] 0 +
jz loc_101F9E2  +
push [ebp+lpBuffer]  +
call sub_101DB34  +
cmp [ebp+lpDst] 0 +
jz loc_101F9F0  +
push [ebp+lpDst]  +
call sub_101DB34  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 80092024h +
cmp eax ecx +
jg loc_101FCC7  +
jz loc_101FCBD  +
mov ecx 80091011h +
cmp eax ecx +
jg loc_101FBB8  +
jz loc_101FBAE  +
add ecx 0FFFFFFF3h +
cmp eax ecx +
jg loc_101FB21  +
jz loc_101FB17  +
mov ecx 80070006h +
cmp eax ecx +
jg loc_101FABE  +
jz loc_101FAB4  +
cmp eax 80004001h +
jz loc_101FAAA  +
cmp eax 80004002h +
jz loc_101FAA0  +
cmp eax 80004003h +
jz loc_101FA96  +
cmp eax 80004004h +
jz loc_101FA8C  +
cmp eax 80004005h +
jz loc_101FA82  +
cmp eax 80070005h +
jnz loc_101FFA4  +
mov eax offset aE_accessdenied +
jmp loc_101FFB0  +
mov eax offset aE_fail +
jmp loc_101FFB0  +
mov eax offset aE_abort +
jmp loc_101FFB0  +
mov eax offset aE_pointer +
jmp loc_101FFB0  +
mov eax offset aE_nointerface +
jmp loc_101FFB0  +
mov eax offset aE_notimpl +
jmp loc_101FFB0  +
mov eax offset aE_handle +
jmp loc_101FFB0  +
cmp eax 8007000Eh +
jz loc_101FB0D  +
cmp eax 80070057h +
jz loc_101FB03  +
cmp eax 80091001h +
jz loc_101FAF9  +
cmp eax 80091002h +
jz loc_101FAEF  +
cmp eax 80091003h +
jnz loc_101FFA4  +
mov eax offset aCrypt_e_oid_fo +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_unknow +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_msg_er +
jmp loc_101FFB0  +
mov eax offset aE_invalidarg +
jmp loc_101FFB0  +
mov eax offset aE_outofmemory +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_invali +
jmp loc_101FFB0  +
add eax 7FF6EFFBh +
cmp eax 0Bh +
ja loc_101FFA4  +
jmp ds:off_101FFB4[eax*4]  +
mov eax offset aCrypt_e_unexpe +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_auth_a +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_hash_v +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_inva_0 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_alread +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_not_de +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_recipi +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_contro +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_issuer +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_signer +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_attrib +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_stream +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_stre_0 +
jmp loc_101FFB0  +
add eax 7FF6DFFFh +
cmp eax 22h +
ja loc_101FFA4  +
jmp ds:off_101FFE4[eax*4]  +
mov eax offset aCrypt_e_bad_le +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_bad_en +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_file_e +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_not_fo +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_exists +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_pro +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_self_s +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_delete +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_mat +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_unex_0 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_key +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_dec +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_bad_ms +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_sig +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_pendin +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_revoke +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_rev +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_r_0 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_revoca +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_not_in +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_inva_1 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_inva_2 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_inva_3 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_inva_4 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_not_ch +
jmp loc_101FFB0  +
mov ecx 80093133h +
cmp eax ecx +
jg loc_101FE5A  +
jz loc_101FE50  +
add ecx 0FFFFFFD0h +
cmp eax ecx +
jg loc_101FDCD  +
jz loc_101FDC3  +
mov ecx 8009202Bh +
cmp eax ecx +
jg loc_101FD6A  +
jz loc_101FD60  +
cmp eax 80092025h +
jz loc_101FD56  +
cmp eax 80092026h +
jz loc_101FD4C  +
cmp eax 80092027h +
jz loc_101FD42  +
cmp eax 80092028h +
jz loc_101FD38  +
cmp eax 80092029h +
jz loc_101FD2E  +
cmp eax 8009202Ah +
jnz loc_101FFA4  +
mov eax offset aCrypt_e_not__0 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_verify +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_ver +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_v_0 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_securi +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_filere +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_no_tru +
jmp loc_101FFB0  +
cmp eax 8009202Ch +
jz loc_101FDB9  +
cmp eax 80093000h +
jz loc_101FDAF  +
cmp eax 80093100h +
jz loc_101FDA5  +
cmp eax 80093101h +
jz loc_101FD9B  +
cmp eax 80093102h +
jnz loc_101FFA4  +
mov eax offset aCrypt_e_asn1_e +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_i +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_0 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_oss_er +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_missin +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_c +
jmp loc_101FFB0  +
add eax 7FF6CEFCh +
cmp eax 0Ah +
ja loc_101FFA4  +
jmp ds:off_1020070[eax*4]  +
mov eax offset aCrypt_e_asn1_l +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_1 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_m +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_o +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_b +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_2 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_3 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_4 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_5 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_r +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_u +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_p +
jmp loc_101FFB0  +
mov ecx 800B0109h +
cmp eax ecx +
jg loc_101FF44  +
jz loc_101FF3D  +
add ecx 0FFFFFFFAh +
cmp eax ecx +
jg loc_101FEEA  +
jz loc_101FEE0  +
cmp eax 80093134h +
jz loc_101FED6  +
cmp eax 80093201h +
jz loc_101FECC  +
cmp eax 80093202h +
jz loc_101FEC2  +
cmp eax 800B0100h +
jz loc_101FEB8  +
cmp eax 800B0101h +
jz loc_101FEAE  +
cmp eax 800B0102h +
jnz loc_101FFA4  +
mov eax offset aCert_e_validit +
jmp loc_101FFB0  +
mov eax offset aCert_e_expired +
jmp loc_101FFB0  +
mov eax offset aTrust_e_nosign +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_n +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_6 +
jmp loc_101FFB0  +
mov eax offset aCrypt_e_asn1_7 +
jmp loc_101FFB0  +
mov eax offset aCert_e_role +
jmp loc_101FFB0  +
cmp eax 800B0104h +
jz loc_101FF36  +
cmp eax 800B0105h +
jz loc_101FF2F  +
cmp eax 800B0106h +
jz loc_101FF25  +
cmp eax 800B0107h +
jz loc_101FF1B  +
cmp eax 800B0108h +
jnz loc_101FFA4  +
mov eax offset aCert_e_malform +
jmp loc_101FFB0  +
mov eax offset aCert_e_issuerc +
jmp loc_101FFB0  +
mov eax offset aCert_e_purpose +
jmp loc_101FFB0  +
mov eax offset aCert_e_critica +
jmp loc_101FFB0  +
mov eax offset aCert_e_pathlen +
jmp loc_101FFB0  +
mov eax offset aCert_e_untrust +
jmp loc_101FFB0  +
test eax eax +
jg loc_101FFA1  +
jz loc_101FF9A  +
add eax 7FF4FEF6h +
cmp eax 0Ah +
ja loc_101FFA4  +
jmp ds:off_102009C[eax*4]  +
mov eax offset aCert_e_chainin +
jmp loc_101FFB0  +
mov eax offset aCert_e_revoked +
jmp loc_101FFB0  +
mov eax offset aCert_e_untru_0 +
jmp loc_101FFB0  +
mov eax offset aCert_e_revocat +
jmp loc_101FFB0  +
mov eax offset aCert_e_cn_no_m +
jmp loc_101FFB0  +
mov eax offset aCert_e_wrong_u +
jmp loc_101FFB0  +
mov eax offset aCert_e_untru_1 +
jmp loc_101FFB0  +
mov eax offset aCert_e_invalid +
jmp loc_101FFB0  +
mov eax offset aCert_e_inval_0 +
jmp loc_101FFB0  +
mov eax offset aS_ok +
jmp loc_101FFB0  +
dec eax  +
jz loc_101FFAB  +
mov eax offset aUnknownError +
jmp loc_101FFB0  +
mov eax offset aS_false +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 800F0243h +
cmp eax ecx +
jg loc_102049F  +
jz loc_1020495  +
add ecx 0FFFFFFDAh +
cmp eax ecx +
jg loc_102030E  +
jz loc_1020304  +
mov ecx 800F020Ah +
cmp eax ecx +
jg loc_102023B  +
jz loc_1020231  +
add ecx 0FFFFFFF7h +
cmp eax ecx +
jg loc_10201CC  +
jz loc_10201C2  +
mov ecx 800F0100h +
cmp eax ecx +
jg loc_102017A  +
jz loc_1020170  +
cmp eax 800F0000h +
jz loc_1020166  +
cmp eax 800F0001h +
jz loc_102015C  +
cmp eax 800F0002h +
jz loc_1020152  +
cmp eax 800F0003h +
jnz loc_10207E5  +
mov eax offset aSpapi_e_genera +
jmp loc_1020806  +
mov eax offset aSpapi_e_sectio +
jmp loc_1020806  +
mov eax offset aSpapi_e_bad_se +
jmp loc_1020806  +
mov eax offset aSpapi_e_expect +
jmp loc_1020806  +
mov eax offset aSpapi_e_wrong_ +
jmp loc_1020806  +
cmp eax 800F0101h +
jz loc_10201B8  +
cmp eax 800F0102h +
jz loc_10201AE  +
cmp eax 800F0103h +
jz loc_10201A4  +
cmp eax 800F0200h +
jnz loc_10207E5  +
mov eax offset aSpapi_e_no_ass +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_bac +
jmp loc_1020806  +
mov eax offset aSpapi_e_line_n +
jmp loc_1020806  +
mov eax offset aSpapi_e_sect_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_class_ +
jmp loc_1020806  +
add eax 7FF0FDFEh +
cmp eax 7 +
ja loc_10207E5  +
jmp ds:off_102080D[eax*4]  +
mov eax offset aSpapi_e_duplic +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_dri +
jmp loc_1020806  +
mov eax offset aSpapi_e_key_do +
jmp loc_1020806  +
mov eax offset aSpapi_e_invali +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_devins +
jmp loc_1020806  +
mov eax offset aSpapi_e_devinf +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_1 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_inf +
jmp loc_1020806  +
add eax 7FF0FDF5h +
cmp eax 11h +
ja loc_10207E5  +
jmp ds:off_102082D[eax*4]  +
mov eax offset aSpapi_e_no_suc +
jmp loc_1020806  +
mov eax offset aSpapi_e_cant_l +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_2 +
jmp loc_1020806  +
mov eax offset aSpapi_e_di_do_ +
jmp loc_1020806  +
mov eax offset aSpapi_e_di_nof +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_3 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_dev +
jmp loc_1020806  +
mov eax offset aSpapi_e_devi_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_devi_1 +
jmp loc_1020806  +
mov eax offset aSpapi_e_di_bad +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_cla +
jmp loc_1020806  +
mov eax offset aSpapi_e_filequ +
jmp loc_1020806  +
mov eax offset aSpapi_e_bad__0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_c_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_a_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_def +
jmp loc_1020806  +
mov eax offset aSpapi_e_device +
jmp loc_1020806  +
mov eax offset aSpapi_e_devi_2 +
jmp loc_1020806  +
mov eax offset aSpapi_e_bad_in +
jmp loc_1020806  +
add eax 7FF0FDE2h +
cmp eax 24h +
ja loc_10207E5  +
jmp ds:off_1020875[eax*4]  +
mov eax offset aSpapi_e_no_s_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_4 +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_5 +
jmp loc_1020806  +
mov eax offset aSpapi_e_remote +
jmp loc_1020806  +
mov eax offset aSpapi_e_machin +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_con +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_6 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_s_1 +
jmp loc_1020806  +
mov eax offset aSpapi_e_di_pos +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_7 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_com +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_d_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_8 +
jmp loc_1020806  +
mov eax offset aSpapi_e_di_don +
jmp loc_1020806  +
mov eax offset aSpapi_e_inva_9 +
jmp loc_1020806  +
mov eax offset aSpapi_e_non_wi +
jmp loc_1020806  +
mov eax offset aSpapi_e_non__0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_cat +
jmp loc_1020806  +
mov eax offset aSpapi_e_devi_3 +
jmp loc_1020806  +
mov eax offset aSpapi_e_not_di +
jmp loc_1020806  +
mov eax offset aSpapi_e_cant_r +
jmp loc_1020806  +
mov eax offset aSpapi_e_inv_10 +
jmp loc_1020806  +
mov eax offset aSpapi_e_driver +
jmp loc_1020806  +
mov eax offset aSpapi_e_in_wow +
jmp loc_1020806  +
mov eax offset aSpapi_e_set_sy +
jmp loc_1020806  +
mov eax offset aSpapi_e_incorr +
jmp loc_1020806  +
mov eax offset aSpapi_e_sce_di +
jmp loc_1020806  +
mov eax offset aSpapi_e_unknow +
jmp loc_1020806  +
mov eax offset aSpapi_e_pnp_re +
jmp loc_1020806  +
mov eax offset aSpapi_e_remo_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_not_an +
jmp loc_1020806  +
mov eax offset aSpapi_e_inf_in +
jmp loc_1020806  +
mov eax offset aSpapi_e_di_fun +
jmp loc_1020806  +
mov eax offset aSpapi_e_no_aut +
jmp loc_1020806  +
mov eax offset aSpapi_e_authen +
jmp loc_1020806  +
mov eax offset aSpapi_e_auth_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_auth_1 +
jmp loc_1020806  +
mov eax offset aSpapi_e_auth_2 +
jmp loc_1020806  +
mov ecx 800F0300h +
cmp eax ecx +
jg loc_1020523  +
jz loc_1020519  +
add eax 7FF0FDBCh +
cmp eax 8 +
ja loc_10207E5  +
jmp ds:off_1020909[eax*4]  +
mov eax offset aSpapi_e_signat +
jmp loc_1020806  +
mov eax offset aSpapi_e_only_v +
jmp loc_1020806  +
mov eax offset aSpapi_e_devi_4 +
jmp loc_1020806  +
mov eax offset aSpapi_e_driv_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_devi_5 +
jmp loc_1020806  +
mov eax offset aSpapi_e_driv_1 +
jmp loc_1020806  +
mov eax offset aSpapi_e_wron_0 +
jmp loc_1020806  +
mov eax offset aSpapi_e_file_h +
jmp loc_1020806  +
mov eax offset aSpapi_e_driv_2 +
jmp loc_1020806  +
mov eax offset aSpapi_e_unreco +
jmp loc_1020806  +
mov ecx 800F084Fh +
cmp eax ecx +
jg loc_1020771  +
jz loc_1020767  +
add eax 7FF0F800h +
cmp eax 43h +
ja loc_10207E5  +
jmp ds:off_102092D[eax*4]  +
mov eax offset aCbs_e_internal +
jmp loc_1020806  +
mov eax offset aCbs_e_not_init +
jmp loc_1020806  +
mov eax offset aCbs_e_already_ +
jmp loc_1020806  +
mov eax offset aCbs_e_invalid_ +
jmp loc_1020806  +
mov eax offset aCbs_e_open_fai +
jmp loc_1020806  +
mov eax offset aCbs_e_invali_0 +
jmp loc_1020806  +
mov eax offset aCbs_e_pending +
jmp loc_1020806  +
mov eax offset aCbs_e_not_inst +
jmp loc_1020806  +
mov eax offset aCbs_e_image_no +
jmp loc_1020806  +
mov eax offset aCbs_e_array_el +
jmp loc_1020806  +
mov eax offset aCbs_e_reestabl +
jmp loc_1020806  +
mov eax offset aCbs_e_property +
jmp loc_1020806  +
mov eax offset aCbs_e_unknown_ +
jmp loc_1020806  +
mov eax offset aCbs_e_manifest +
jmp loc_1020806  +
mov eax offset aCbs_e_manife_0 +
jmp loc_1020806  +
mov eax offset aCbs_e_manife_1 +
jmp loc_1020806  +
mov eax offset aCbs_e_manife_2 +
jmp loc_1020806  +
mov eax offset aCbs_e_manife_3 +
jmp loc_1020806  +
mov eax offset aCbs_e_manife_4 +
jmp loc_1020806  +
mov eax offset aCbs_e_invali_1 +
jmp loc_1020806  +
mov eax offset aCbs_e_invali_2 +
jmp loc_1020806  +
mov eax offset aCbs_e_invali_3 +
jmp loc_1020806  +
mov eax offset aCbs_e_dpx_job_ +
jmp loc_1020806  +
mov eax offset aCbs_e_package_ +
jmp loc_1020806  +
mov eax offset aCbs_e_identity +
jmp loc_1020806  +
mov eax offset aCbs_e_duplicat +
jmp loc_1020806  +
mov eax offset aCbs_e_invali_4 +
jmp loc_1020806  +
mov eax offset aCbs_e_unexpect +
jmp loc_1020806  +
mov eax offset aCbs_e_excessiv +
jmp loc_1020806  +
mov eax offset aCbs_e_cycle_ev +
jmp loc_1020806  +
mov eax offset aCbs_e_not_appl +
jmp loc_1020806  +
mov eax offset aCbs_e_source_m +
jmp loc_1020806  +
mov eax offset aCbs_e_cancel +
jmp loc_1020806  +
mov eax offset aCbs_e_abort +
jmp loc_1020806  +
mov eax offset aCbs_e_illegal_ +
jmp loc_1020806  +
mov eax offset aCbs_e_new_serv +
jmp loc_1020806  +
mov eax offset aCbs_e_source_n +
jmp loc_1020806  +
mov eax offset aCbs_e_cannot_u +
jmp loc_1020806  +
mov eax offset aCbs_e_pending_ +
jmp loc_1020806  +
mov eax offset aCbs_e_stack_sh +
jmp loc_1020806  +
mov eax offset aCbs_e_insuffic +
jmp loc_1020806  +
mov eax offset aCbs_e_ac_power +
jmp loc_1020806  +
mov eax offset aCbs_e_stack_up +
jmp loc_1020806  +
mov eax offset aCbs_e_sqm_repo +
jmp loc_1020806  +
mov eax offset aCbs_e_dependen +
jmp loc_1020806  +
mov eax offset aCbs_e_pac_init +
jmp loc_1020806  +
mov eax offset aCbs_e_not_allo +
jmp loc_1020806  +
mov eax offset aCbs_e_exclusiv +
jmp loc_1020806  +
mov eax offset aCbs_e_image_un +
jmp loc_1020806  +
mov eax offset aCbs_e_session_ +
jmp loc_1020806  +
mov eax offset aCbs_e_sessio_0 +
jmp loc_1020806  +
mov eax offset aCbs_e_sessio_1 +
jmp loc_1020806  +
mov eax offset aCbs_e_sessio_2 +
jmp loc_1020806  +
mov eax offset aCbs_e_unexpe_0 +
jmp loc_1020806  +
mov eax offset aCbs_e_resolve_ +
jmp loc_1020806  +
mov ecx 800F0905h +
cmp eax ecx +
jg loc_10207C9  +
jz loc_10207C2  +
cmp eax 800F0900h +
jz loc_10207BB  +
cmp eax 800F0901h +
jz loc_10207B4  +
cmp eax 800F0902h +
jz loc_10207AD  +
cmp eax 800F0903h +
jz loc_10207A6  +
cmp eax 800F0904h +
jnz loc_10207E5  +
mov eax offset aCbs_e_more_tha +
jmp loc_1020806  +
mov eax offset aCbs_e_invali_5 +
jmp loc_1020806  +
mov eax offset aCbs_e_busy +
jmp loc_1020806  +
mov eax offset aCbs_e_manife_5 +
jmp loc_1020806  +
mov eax offset aCbs_e_xml_pars +
jmp loc_1020806  +
mov eax offset aCbs_e_no_activ +
jmp loc_1020806  +
cmp eax 800F1000h +
jz loc_1020801  +
cmp eax 0F0801h +
jz loc_10207FA  +
cmp eax 0F0802h +
jz loc_10207F3  +
cmp eax 0F0803h +
jz loc_10207EC  +
mov eax offset aUnknownError +
jmp loc_1020806  +
mov eax offset aCbs_s_stack_sh +
jmp loc_1020806  +
mov eax offset aCbs_s_already_ +
jmp loc_1020806  +
mov eax offset aCbs_s_busy +
jmp loc_1020806  +
mov eax offset aSpapi_e_error_ +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 800700F0h +
cmp eax ecx +
jg loc_1021190  +
jz loc_1021186  +
add eax 7FF8FFFFh +
cmp eax 0E9h +
ja loc_10266CB  +
jmp ds:off_10266F0[eax*4]  +
mov eax offset aError_invalid_ +
jmp loc_10266EC  +
mov eax offset aError_file_not +
jmp loc_10266EC  +
mov eax offset aError_path_not +
jmp loc_10266EC  +
mov eax offset aError_too_many +
jmp loc_10266EC  +
mov eax offset aError_invali_0 +
jmp loc_10266EC  +
mov eax offset aError_arena_tr +
jmp loc_10266EC  +
mov eax offset aError_not_enou +
jmp loc_10266EC  +
mov eax offset aError_invali_1 +
jmp loc_10266EC  +
mov eax offset aError_bad_envi +
jmp loc_10266EC  +
mov eax offset aError_bad_form +
jmp loc_10266EC  +
mov eax offset aError_invali_2 +
jmp loc_10266EC  +
mov eax offset aError_invali_3 +
jmp loc_10266EC  +
mov eax offset aError_outofmem +
jmp loc_10266EC  +
mov eax offset aError_invali_4 +
jmp loc_10266EC  +
mov eax offset aError_current_ +
jmp loc_10266EC  +
mov eax offset aError_not_same +
jmp loc_10266EC  +
mov eax offset aError_no_more_ +
jmp loc_10266EC  +
mov eax offset aError_write_pr +
jmp loc_10266EC  +
mov eax offset aError_bad_unit +
jmp loc_10266EC  +
mov eax offset aError_not_read +
jmp loc_10266EC  +
mov eax offset aError_bad_comm +
jmp loc_10266EC  +
mov eax offset aError_crc +
jmp loc_10266EC  +
mov eax offset aError_bad_leng +
jmp loc_10266EC  +
mov eax offset aError_seek +
jmp loc_10266EC  +
mov eax offset aError_not_dos_ +
jmp loc_10266EC  +
mov eax offset aError_sector_n +
jmp loc_10266EC  +
mov eax offset aError_out_of_p +
jmp loc_10266EC  +
mov eax offset aError_write_fa +
jmp loc_10266EC  +
mov eax offset aError_read_fau +
jmp loc_10266EC  +
mov eax offset aError_gen_fail +
jmp loc_10266EC  +
mov eax offset aError_sharing_ +
jmp loc_10266EC  +
mov eax offset aError_lock_vio +
jmp loc_10266EC  +
mov eax offset aError_wrong_di +
jmp loc_10266EC  +
mov eax offset aError_sharin_0 +
jmp loc_10266EC  +
mov eax offset aError_handle_e +
jmp loc_10266EC  +
mov eax offset aError_handle_d +
jmp loc_10266EC  +
mov eax offset aError_not_supp +
jmp loc_10266EC  +
mov eax offset aError_rem_not_ +
jmp loc_10266EC  +
mov eax offset aError_dup_name +
jmp loc_10266EC  +
mov eax offset aError_bad_netp +
jmp loc_10266EC  +
mov eax offset aError_network_ +
jmp loc_10266EC  +
mov eax offset aError_dev_not_ +
jmp loc_10266EC  +
mov eax offset aError_too_ma_0 +
jmp loc_10266EC  +
mov eax offset aError_adap_hdw +
jmp loc_10266EC  +
mov eax offset aError_bad_net_ +
jmp loc_10266EC  +
mov eax offset aError_unexp_ne +
jmp loc_10266EC  +
mov eax offset aError_bad_rem_ +
jmp loc_10266EC  +
mov eax offset aError_printq_f +
jmp loc_10266EC  +
mov eax offset aError_no_spool +
jmp loc_10266EC  +
mov eax offset aError_print_ca +
jmp loc_10266EC  +
mov eax offset aError_netname_ +
jmp loc_10266EC  +
mov eax offset aError_networ_0 +
jmp loc_10266EC  +
mov eax offset aError_bad_dev_ +
jmp loc_10266EC  +
mov eax offset aError_bad_ne_0 +
jmp loc_10266EC  +
mov eax offset aError_too_ma_1 +
jmp loc_10266EC  +
mov eax offset aError_too_ma_2 +
jmp loc_10266EC  +
mov eax offset aError_sharin_1 +
jmp loc_10266EC  +
mov eax offset aError_req_not_ +
jmp loc_10266EC  +
mov eax offset aError_redir_pa +
jmp loc_10266EC  +
mov eax offset aError_file_exi +
jmp loc_10266EC  +
mov eax offset aError_cannot_m +
jmp loc_10266EC  +
mov eax offset aError_fail_i24 +
jmp loc_10266EC  +
mov eax offset aError_out_of_s +
jmp loc_10266EC  +
mov eax offset aError_already_ +
jmp loc_10266EC  +
mov eax offset aError_invali_5 +
jmp loc_10266EC  +
mov eax offset aError_invali_6 +
jmp loc_10266EC  +
mov eax offset aError_net_writ +
jmp loc_10266EC  +
mov eax offset aError_no_proc_ +
jmp loc_10266EC  +
mov eax offset aError_too_ma_3 +
jmp loc_10266EC  +
mov eax offset aError_excl_sem +
jmp loc_10266EC  +
mov eax offset aError_sem_is_s +
jmp loc_10266EC  +
mov eax offset aError_too_ma_4 +
jmp loc_10266EC  +
mov eax offset aError_invali_7 +
jmp loc_10266EC  +
mov eax offset aError_sem_owne +
jmp loc_10266EC  +
mov eax offset aError_sem_user +
jmp loc_10266EC  +
mov eax offset aError_disk_cha +
jmp loc_10266EC  +
mov eax offset aError_drive_lo +
jmp loc_10266EC  +
mov eax offset aError_broken_p +
jmp loc_10266EC  +
mov eax offset aError_open_fai +
jmp loc_10266EC  +
mov eax offset aError_buffer_o +
jmp loc_10266EC  +
mov eax offset aError_disk_ful +
jmp loc_10266EC  +
mov eax offset aError_no_mor_0 +
jmp loc_10266EC  +
mov eax offset aError_invali_8 +
jmp loc_10266EC  +
mov eax offset aError_invali_9 +
jmp loc_10266EC  +
mov eax offset aError_inval_10 +
jmp loc_10266EC  +
mov eax offset aError_bad_driv +
jmp loc_10266EC  +
mov eax offset aError_call_not +
jmp loc_10266EC  +
mov eax offset aError_sem_time +
jmp loc_10266EC  +
mov eax offset aError_insuffic +
jmp loc_10266EC  +
mov eax offset aError_inval_11 +
jmp loc_10266EC  +
mov eax offset aError_inval_12 +
jmp loc_10266EC  +
mov eax offset aError_no_volum +
jmp loc_10266EC  +
mov eax offset aError_mod_not_ +
jmp loc_10266EC  +
mov eax offset aError_proc_not +
jmp loc_10266EC  +
mov eax offset aError_wait_no_ +
jmp loc_10266EC  +
mov eax offset aError_child_no +
jmp loc_10266EC  +
mov eax offset aError_direct_a +
jmp loc_10266EC  +
mov eax offset aError_negative +
jmp loc_10266EC  +
mov eax offset aError_seek_on_ +
jmp loc_10266EC  +
mov eax offset aError_is_join_ +
jmp loc_10266EC  +
mov eax offset aError_is_joine +
jmp loc_10266EC  +
mov eax offset aError_is_subst +
jmp loc_10266EC  +
mov eax offset aError_not_join +
jmp loc_10266EC  +
mov eax offset aError_not_subs +
jmp loc_10266EC  +
mov eax offset aError_join_to_ +
jmp loc_10266EC  +
mov eax offset aError_subst_to +
jmp loc_10266EC  +
mov eax offset aError_join_t_0 +
jmp loc_10266EC  +
mov eax offset aError_subst__0 +
jmp loc_10266EC  +
mov eax offset aError_busy_dri +
jmp loc_10266EC  +
mov eax offset aError_same_dri +
jmp loc_10266EC  +
mov eax offset aError_dir_not_ +
jmp loc_10266EC  +
mov eax offset aError_dir_no_0 +
jmp loc_10266EC  +
mov eax offset aError_is_sub_0 +
jmp loc_10266EC  +
mov eax offset aError_is_joi_0 +
jmp loc_10266EC  +
mov eax offset aError_path_bus +
jmp loc_10266EC  +
mov eax offset aError_is_sub_1 +
jmp loc_10266EC  +
mov eax offset aError_system_t +
jmp loc_10266EC  +
mov eax offset aError_inval_13 +
jmp loc_10266EC  +
mov eax offset aError_too_ma_5 +
jmp loc_10266EC  +
mov eax offset aError_inval_14 +
jmp loc_10266EC  +
mov eax offset aError_label_to +
jmp loc_10266EC  +
mov eax offset aError_too_ma_6 +
jmp loc_10266EC  +
mov eax offset aError_signal_r +
jmp loc_10266EC  +
mov eax offset aError_discarde +
jmp loc_10266EC  +
mov eax offset aError_not_lock +
jmp loc_10266EC  +
mov eax offset aError_bad_thre +
jmp loc_10266EC  +
mov eax offset aError_bad_argu +
jmp loc_10266EC  +
mov eax offset aError_bad_path +
jmp loc_10266EC  +
mov eax offset aError_signal_p +
jmp loc_10266EC  +
mov eax offset aError_max_thrd +
jmp loc_10266EC  +
mov eax offset aError_lock_fai +
jmp loc_10266EC  +
mov eax offset aError_busy +
jmp loc_10266EC  +
mov eax offset aError_cancel_v +
jmp loc_10266EC  +
mov eax offset aError_atomic_l +
jmp loc_10266EC  +
mov eax offset aError_inval_15 +
jmp loc_10266EC  +
mov eax offset aError_inval_16 +
jmp loc_10266EC  +
mov eax offset aError_alread_0 +
jmp loc_10266EC  +
mov eax offset aError_inval_17 +
jmp loc_10266EC  +
mov eax offset aError_sem_not_ +
jmp loc_10266EC  +
mov eax offset aError_inval_18 +
jmp loc_10266EC  +
mov eax offset aError_inval_19 +
jmp loc_10266EC  +
mov eax offset aError_inval_20 +
jmp loc_10266EC  +
mov eax offset aError_inval_21 +
jmp loc_10266EC  +
mov eax offset aError_exe_mark +
jmp loc_10266EC  +
mov eax offset aError_bad_exe_ +
jmp loc_10266EC  +
mov eax offset aError_iterated +
jmp loc_10266EC  +
mov eax offset aError_inval_22 +
jmp loc_10266EC  +
mov eax offset aError_dynlink_ +
jmp loc_10266EC  +
mov eax offset aError_iopl_not +
jmp loc_10266EC  +
mov eax offset aError_inval_23 +
jmp loc_10266EC  +
mov eax offset aError_autodata +
jmp loc_10266EC  +
mov eax offset aError_ring2seg +
jmp loc_10266EC  +
mov eax offset aError_reloc_ch +
jmp loc_10266EC  +
mov eax offset aError_infloop_ +
jmp loc_10266EC  +
mov eax offset aError_envvar_n +
jmp loc_10266EC  +
mov eax offset aError_no_signa +
jmp loc_10266EC  +
mov eax offset aError_filename +
jmp loc_10266EC  +
mov eax offset aError_ring2_st +
jmp loc_10266EC  +
mov eax offset aError_meta_exp +
jmp loc_10266EC  +
mov eax offset aError_inval_24 +
jmp loc_10266EC  +
mov eax offset aError_thread_1 +
jmp loc_10266EC  +
mov eax offset aError_locked +
jmp loc_10266EC  +
mov eax offset aError_too_ma_7 +
jmp loc_10266EC  +
mov eax offset aError_nesting_ +
jmp loc_10266EC  +
mov eax offset aError_exe_mach +
jmp loc_10266EC  +
mov eax offset aError_exe_cann +
jmp loc_10266EC  +
mov eax offset aError_exe_ca_0 +
jmp loc_10266EC  +
mov eax offset aError_file_che +
jmp loc_10266EC  +
mov eax offset aError_checkout +
jmp loc_10266EC  +
mov eax offset aError_bad_file +
jmp loc_10266EC  +
mov eax offset aError_file_too +
jmp loc_10266EC  +
mov eax offset aError_forms_au +
jmp loc_10266EC  +
mov eax offset aError_virus_in +
jmp loc_10266EC  +
mov eax offset aError_virus_de +
jmp loc_10266EC  +
mov eax offset aError_pipe_loc +
jmp loc_10266EC  +
mov eax offset aError_bad_pipe +
jmp loc_10266EC  +
mov eax offset aError_pipe_bus +
jmp loc_10266EC  +
mov eax offset aError_no_data +
jmp loc_10266EC  +
mov eax offset aError_pipe_not +
jmp loc_10266EC  +
mov eax offset aError_more_dat +
jmp loc_10266EC  +
mov eax offset aError_vc_disco +
jmp loc_10266EC  +
mov ecx 80071396h +
cmp eax ecx +
jg loc_1023CF6  +
jz loc_1023CEC  +
mov ecx 80070525h +
cmp eax ecx +
jg loc_1022609  +
jz loc_10225FF  +
add eax 7FF8FF02h +
cmp eax 426h +
ja loc_10266CB  +
jmp ds:off_1026A98[eax*4]  +
mov eax offset aError_inval_25 +
jmp loc_10266EC  +
mov eax offset aError_ea_list_ +
jmp loc_10266EC  +
mov eax offset aError_no_mor_1 +
jmp loc_10266EC  +
mov eax offset aError_cannot_c +
jmp loc_10266EC  +
mov eax offset aError_director +
jmp loc_10266EC  +
mov eax offset aError_eas_didn +
jmp loc_10266EC  +
mov eax offset aError_ea_file_ +
jmp loc_10266EC  +
mov eax offset aError_ea_table +
jmp loc_10266EC  +
mov eax offset aError_inval_26 +
jmp loc_10266EC  +
mov eax offset aError_eas_not_ +
jmp loc_10266EC  +
mov eax offset aError_not_owne +
jmp loc_10266EC  +
mov eax offset aError_too_ma_8 +
jmp loc_10266EC  +
mov eax offset aError_partial_ +
jmp loc_10266EC  +
mov eax offset aError_oplock_n +
jmp loc_10266EC  +
mov eax offset aError_inval_27 +
jmp loc_10266EC  +
mov eax offset aError_disk_too +
jmp loc_10266EC  +
mov eax offset aError_delete_p +
jmp loc_10266EC  +
mov eax offset aError_mr_mid_n +
jmp loc_10266EC  +
mov eax offset aError_scope_no +
jmp loc_10266EC  +
mov eax offset aError_fail_noa +
jmp loc_10266EC  +
mov eax offset aError_fail_shu +
jmp loc_10266EC  +
mov eax offset aError_fail_res +
jmp loc_10266EC  +
mov eax offset aError_max_sess +
jmp loc_10266EC  +
mov eax offset aError_thread_m +
jmp loc_10266EC  +
mov eax offset aError_thread_0 +
jmp loc_10266EC  +
mov eax offset aError_process_ +
jmp loc_10266EC  +
mov eax offset aError_proces_0 +
jmp loc_10266EC  +
mov eax offset aError_inval_28 +
jmp loc_10266EC  +
mov eax offset aError_user_pro +
jmp loc_10266EC  +
mov eax offset aError_arithmet +
jmp loc_10266EC  +
mov eax offset aError_pipe_con +
jmp loc_10266EC  +
mov eax offset aError_pipe_lis +
jmp loc_10266EC  +
mov eax offset aError_verifier +
jmp loc_10266EC  +
mov eax offset aError_abios_er +
jmp loc_10266EC  +
mov eax offset aError_wx86_war +
jmp loc_10266EC  +
mov eax offset aError_wx86_err +
jmp loc_10266EC  +
mov eax offset aError_timer_no +
jmp loc_10266EC  +
mov eax offset aError_unwind +
jmp loc_10266EC  +
mov eax offset aError_bad_stac +
jmp loc_10266EC  +
mov eax offset aError_inval_29 +
jmp loc_10266EC  +
mov eax offset aError_inval_30 +
jmp loc_10266EC  +
mov eax offset aError_port_mes +
jmp loc_10266EC  +
mov eax offset aError_inval_31 +
jmp loc_10266EC  +
mov eax offset aError_device_a +
jmp loc_10266EC  +
mov eax offset aError_instruct +
jmp loc_10266EC  +
mov eax offset aError_profilin +
jmp loc_10266EC  +
mov eax offset aError_profil_0 +
jmp loc_10266EC  +
mov eax offset aError_could_no +
jmp loc_10266EC  +
mov eax offset aError_profil_1 +
jmp loc_10266EC  +
mov eax offset aError_cant_wai +
jmp loc_10266EC  +
mov eax offset aError_cant_ter +
jmp loc_10266EC  +
mov eax offset aError_unexpect +
jmp loc_10266EC  +
mov eax offset aError_unexpe_0 +
jmp loc_10266EC  +
mov eax offset aError_unexpe_1 +
jmp loc_10266EC  +
mov eax offset aError_bad_func +
jmp loc_10266EC  +
mov eax offset aError_no_guid_ +
jmp loc_10266EC  +
mov eax offset aError_inval_32 +
jmp loc_10266EC  +
mov eax offset aError_inval_33 +
jmp loc_10266EC  +
mov eax offset aError_inval_34 +
jmp loc_10266EC  +
mov eax offset aError_too_ma_9 +
jmp loc_10266EC  +
mov eax offset aError_thread_n +
jmp loc_10266EC  +
mov eax offset aError_pagefile +
jmp loc_10266EC  +
mov eax offset aError_logon_se +
jmp loc_10266EC  +
mov eax offset aError_synchron +
jmp loc_10266EC  +
mov eax offset aError_net_open +
jmp loc_10266EC  +
mov eax offset aError_io_privi +
jmp loc_10266EC  +
mov eax offset aError_control_ +
jmp loc_10266EC  +
mov eax offset aError_missing_ +
jmp loc_10266EC  +
mov eax offset aError_unhandle +
jmp loc_10266EC  +
mov eax offset aError_app_init +
jmp loc_10266EC  +
mov eax offset aError_pagefi_0 +
jmp loc_10266EC  +
mov eax offset aError_inval_35 +
jmp loc_10266EC  +
mov eax offset aError_no_pagef +
jmp loc_10266EC  +
mov eax offset aError_illegal_ +
jmp loc_10266EC  +
mov eax offset aError_no_event +
jmp loc_10266EC  +
mov eax offset aError_domain_c +
jmp loc_10266EC  +
mov eax offset aError_illega_0 +
jmp loc_10266EC  +
mov eax offset aError_undefine +
jmp loc_10266EC  +
mov eax offset aError_floppy_v +
jmp loc_10266EC  +
mov eax offset aError_bios_fai +
jmp loc_10266EC  +
mov eax offset aError_backup_c +
jmp loc_10266EC  +
mov eax offset aError_mutant_l +
jmp loc_10266EC  +
mov eax offset aError_fs_drive +
jmp loc_10266EC  +
mov eax offset aError_cannot_l +
jmp loc_10266EC  +
mov eax offset aError_debug_at +
jmp loc_10266EC  +
mov eax offset aError_system_p +
jmp loc_10266EC  +
mov eax offset aError_data_not +
jmp loc_10266EC  +
mov eax offset aError_vdm_hard +
jmp loc_10266EC  +
mov eax offset aError_driver_c +
jmp loc_10266EC  +
mov eax offset aError_reply_me +
jmp loc_10266EC  +
mov eax offset aError_lost_wri +
jmp loc_10266EC  +
mov eax offset aError_client_s +
jmp loc_10266EC  +
mov eax offset aError_not_tiny +
jmp loc_10266EC  +
mov eax offset aError_stack_ov +
jmp loc_10266EC  +
mov eax offset aError_convert_ +
jmp loc_10266EC  +
mov eax offset aError_found_ou +
jmp loc_10266EC  +
mov eax offset aError_allocate +
jmp loc_10266EC  +
mov eax offset aError_marshall +
jmp loc_10266EC  +
mov eax offset aError_inval_36 +
jmp loc_10266EC  +
mov eax offset aError_bad_comp +
jmp loc_10266EC  +
mov eax offset aError_audit_fa +
jmp loc_10266EC  +
mov eax offset aError_timer_re +
jmp loc_10266EC  +
mov eax offset aError_insuff_0 +
jmp loc_10266EC  +
mov eax offset aError_bad_dll_ +
jmp loc_10266EC  +
mov eax offset aError_bad_serv +
jmp loc_10266EC  +
mov eax offset aError_ip_addre +
jmp loc_10266EC  +
mov eax offset aError_ip_add_0 +
jmp loc_10266EC  +
mov eax offset aError_registry +
jmp loc_10266EC  +
mov eax offset aError_no_callb +
jmp loc_10266EC  +
mov eax offset aError_pwd_too_ +
jmp loc_10266EC  +
mov eax offset aError_pwd_to_0 +
jmp loc_10266EC  +
mov eax offset aError_pwd_hist +
jmp loc_10266EC  +
mov eax offset aError_unsuppor +
jmp loc_10266EC  +
mov eax offset aError_inval_37 +
jmp loc_10266EC  +
mov eax offset aError_inval_38 +
jmp loc_10266EC  +
mov eax offset aError_quota_li +
jmp loc_10266EC  +
mov eax offset aError_evaluati +
jmp loc_10266EC  +
mov eax offset aError_illega_1 +
jmp loc_10266EC  +
mov eax offset aError_dll_init +
jmp loc_10266EC  +
mov eax offset aError_validate +
jmp loc_10266EC  +
mov eax offset aError_no_mor_2 +
jmp loc_10266EC  +
mov eax offset aError_range_li +
jmp loc_10266EC  +
mov eax offset aError_server_s +
jmp loc_10266EC  +
mov eax offset aError_cant_ena +
jmp loc_10266EC  +
mov eax offset aError_float_mu +
jmp loc_10266EC  +
mov eax offset aError_float__0 +
jmp loc_10266EC  +
mov eax offset aError_nointerf +
jmp loc_10266EC  +
mov eax offset aError_driver_f +
jmp loc_10266EC  +
mov eax offset aError_corrupt_ +
jmp loc_10266EC  +
mov eax offset aError_commitme +
jmp loc_10266EC  +
mov eax offset aError_pnp_rest +
jmp loc_10266EC  +
mov eax offset aError_system_i +
jmp loc_10266EC  +
mov eax offset aError_pnp_rebo +
jmp loc_10266EC  +
mov eax offset aError_insuff_1 +
jmp loc_10266EC  +
mov eax offset aError_multiple +
jmp loc_10266EC  +
mov eax offset aError_system_s +
jmp loc_10266EC  +
mov eax offset aError_port_not +
jmp loc_10266EC  +
mov eax offset aError_ds_versi +
jmp loc_10266EC  +
mov eax offset aError_range_no +
jmp loc_10266EC  +
mov eax offset aError_not_safe +
jmp loc_10266EC  +
mov eax offset aError_failed_d +
jmp loc_10266EC  +
mov eax offset aError_device_e +
jmp loc_10266EC  +
mov eax offset aError_mount_po +
jmp loc_10266EC  +
mov eax offset aError_inval_39 +
jmp loc_10266EC  +
mov eax offset aError_mca_occu +
jmp loc_10266EC  +
mov eax offset aError_driver_d +
jmp loc_10266EC  +
mov eax offset aError_system_h +
jmp loc_10266EC  +
mov eax offset aError_driver_0 +
jmp loc_10266EC  +
mov eax offset aError_volsnap_ +
jmp loc_10266EC  +
mov eax offset aError_hibernat +
jmp loc_10266EC  +
mov eax offset aError_file_sys +
jmp loc_10266EC  +
mov eax offset aError_assertio +
jmp loc_10266EC  +
mov eax offset aError_acpi_err +
jmp loc_10266EC  +
mov eax offset aError_wow_asse +
jmp loc_10266EC  +
mov eax offset aError_pnp_bad_ +
jmp loc_10266EC  +
mov eax offset aError_pnp_tran +
jmp loc_10266EC  +
mov eax offset aError_pnp_irq_ +
jmp loc_10266EC  +
mov eax offset aError_pnp_inva +
jmp loc_10266EC  +
mov eax offset aError_wake_sys +
jmp loc_10266EC  +
mov eax offset aError_handles_ +
jmp loc_10266EC  +
mov eax offset aError_extraneo +
jmp loc_10266EC  +
mov eax offset aError_rxact_co +
jmp loc_10266EC  +
mov eax offset aError_media_ch +
jmp loc_10266EC  +
mov eax offset aError_guid_sub +
jmp loc_10266EC  +
mov eax offset aError_stopped_ +
jmp loc_10266EC  +
mov eax offset aError_longjump +
jmp loc_10266EC  +
mov eax offset aError_plugplay +
jmp loc_10266EC  +
mov eax offset aError_unwind_c +
jmp loc_10266EC  +
mov eax offset aError_regist_0 +
jmp loc_10266EC  +
mov eax offset aError_dll_migh +
jmp loc_10266EC  +
mov eax offset aError_dll_mi_0 +
jmp loc_10266EC  +
mov eax offset aError_dbg_exce +
jmp loc_10266EC  +
mov eax offset aError_dbg_repl +
jmp loc_10266EC  +
mov eax offset aError_dbg_unab +
jmp loc_10266EC  +
mov eax offset aError_dbg_term +
jmp loc_10266EC  +
mov eax offset aError_dbg_te_0 +
jmp loc_10266EC  +
mov eax offset aError_dbg_cont +
jmp loc_10266EC  +
mov eax offset aError_dbg_prin +
jmp loc_10266EC  +
mov eax offset aError_dbg_ripe +
jmp loc_10266EC  +
mov eax offset aError_dbg_co_0 +
jmp loc_10266EC  +
mov eax offset aError_dbg_comm +
jmp loc_10266EC  +
mov eax offset aError_object_n +
jmp loc_10266EC  +
mov eax offset aError_thread_w +
jmp loc_10266EC  +
mov eax offset aError_image_no +
jmp loc_10266EC  +
mov eax offset aError_rxact_st +
jmp loc_10266EC  +
mov eax offset aError_segment_ +
jmp loc_10266EC  +
mov eax offset aError_bad_curr +
jmp loc_10266EC  +
mov eax offset aError_ft_read_ +
jmp loc_10266EC  +
mov eax offset aError_ft_write +
jmp loc_10266EC  +
mov eax offset aError_image_ma +
jmp loc_10266EC  +
mov eax offset aError_receive_ +
jmp loc_10266EC  +
mov eax offset aError_receiv_0 +
jmp loc_10266EC  +
mov eax offset aError_receiv_1 +
jmp loc_10266EC  +
mov eax offset aError_event_do +
jmp loc_10266EC  +
mov eax offset aError_event_pe +
jmp loc_10266EC  +
mov eax offset aError_checking +
jmp loc_10266EC  +
mov eax offset aError_fatal_ap +
jmp loc_10266EC  +
mov eax offset aError_predefin +
jmp loc_10266EC  +
mov eax offset aError_was_unlo +
jmp loc_10266EC  +
mov eax offset aError_service_ +
jmp loc_10266EC  +
mov eax offset aError_was_lock +
jmp loc_10266EC  +
mov eax offset aError_log_hard +
jmp loc_10266EC  +
mov eax offset aError_alread_1 +
jmp loc_10266EC  +
mov eax offset aError_image__0 +
jmp loc_10266EC  +
mov eax offset aError_no_yield +
jmp loc_10266EC  +
mov eax offset aError_timer__0 +
jmp loc_10266EC  +
mov eax offset aError_arbitrat +
jmp loc_10266EC  +
mov eax offset aError_cardbus_ +
jmp loc_10266EC  +
mov eax offset aError_mp_proce +
jmp loc_10266EC  +
mov eax offset aError_hibern_0 +
jmp loc_10266EC  +
mov eax offset aError_resume_h +
jmp loc_10266EC  +
mov eax offset aError_firmware +
jmp loc_10266EC  +
mov eax offset aError_drivers_ +
jmp loc_10266EC  +
mov eax offset aError_wake_s_0 +
jmp loc_10266EC  +
mov eax offset aError_wait_1 +
jmp loc_10266EC  +
mov eax offset aError_wait_2 +
jmp loc_10266EC  +
mov eax offset aError_wait_3 +
jmp loc_10266EC  +
mov eax offset aError_wait_63 +
jmp loc_10266EC  +
mov eax offset aError_abandone +
jmp loc_10266EC  +
mov eax offset aError_abando_0 +
jmp loc_10266EC  +
mov eax offset aError_user_apc +
jmp loc_10266EC  +
mov eax offset aError_kernel_a +
jmp loc_10266EC  +
mov eax offset aError_alerted +
jmp loc_10266EC  +
mov eax offset aError_elevatio +
jmp loc_10266EC  +
mov eax offset aError_reparse +
jmp loc_10266EC  +
mov eax offset aError_oplock_b +
jmp loc_10266EC  +
mov eax offset aError_volume_m +
jmp loc_10266EC  +
mov eax offset aError_rxact__0 +
jmp loc_10266EC  +
mov eax offset aError_notify_c +
jmp loc_10266EC  +
mov eax offset aError_primary_ +
jmp loc_10266EC  +
mov eax offset aError_page_fau +
jmp loc_10266EC  +
mov eax offset aError_page_f_0 +
jmp loc_10266EC  +
mov eax offset aError_page_f_1 +
jmp loc_10266EC  +
mov eax offset aError_page_f_2 +
jmp loc_10266EC  +
mov eax offset aError_page_f_3 +
jmp loc_10266EC  +
mov eax offset aError_cache_pa +
jmp loc_10266EC  +
mov eax offset aError_crash_du +
jmp loc_10266EC  +
mov eax offset aError_buffer_a +
jmp loc_10266EC  +
mov eax offset aError_reparse_ +
jmp loc_10266EC  +
mov eax offset aError_resource +
jmp loc_10266EC  +
mov eax offset aError_translat +
jmp loc_10266EC  +
mov eax offset aError_nothing_ +
jmp loc_10266EC  +
mov eax offset aError_proces_1 +
jmp loc_10266EC  +
mov eax offset aError_proces_2 +
jmp loc_10266EC  +
mov eax offset aError_volsna_0 +
jmp loc_10266EC  +
mov eax offset aError_fsfilter +
jmp loc_10266EC  +
mov eax offset aError_interrup +
jmp loc_10266EC  +
mov eax offset aError_interr_0 +
jmp loc_10266EC  +
mov eax offset aError_wait_for +
jmp loc_10266EC  +
mov eax offset aError_dbg_ex_0 +
jmp loc_10266EC  +
mov eax offset aError_dbg_co_1 +
jmp loc_10266EC  +
mov eax offset aError_callback +
jmp loc_10266EC  +
mov eax offset aError_compress +
jmp loc_10266EC  +
mov eax offset aError_cantfetc +
jmp loc_10266EC  +
mov eax offset aError_cantscro +
jmp loc_10266EC  +
mov eax offset aError_rowsnotr +
jmp loc_10266EC  +
mov eax offset aError_bad_acce +
jmp loc_10266EC  +
mov eax offset aError_errors_e +
jmp loc_10266EC  +
mov eax offset aError_not_capa +
jmp loc_10266EC  +
mov eax offset aError_request_ +
jmp loc_10266EC  +
mov eax offset aError_version_ +
jmp loc_10266EC  +
mov eax offset aError_badstart +
jmp loc_10266EC  +
mov eax offset aError_memory_h +
jmp loc_10266EC  +
mov eax offset aError_disk_rep +
jmp loc_10266EC  +
mov eax offset aError_insuff_2 +
jmp loc_10266EC  +
mov eax offset aError_system_0 +
jmp loc_10266EC  +
mov eax offset aError_system_1 +
jmp loc_10266EC  +
mov eax offset aError_mca_exce +
jmp loc_10266EC  +
mov eax offset aError_access_a +
jmp loc_10266EC  +
mov eax offset aError_access_d +
jmp loc_10266EC  +
mov eax offset aError_abandon_ +
jmp loc_10266EC  +
mov eax offset aError_lost_w_0 +
jmp loc_10266EC  +
mov eax offset aError_lost_w_1 +
jmp loc_10266EC  +
mov eax offset aError_lost_w_2 +
jmp loc_10266EC  +
mov eax offset aError_bad_mcfg +
jmp loc_10266EC  +
mov eax offset aError_ea_acces +
jmp loc_10266EC  +
mov eax offset aError_operatio +
jmp loc_10266EC  +
mov eax offset aError_io_incom +
jmp loc_10266EC  +
mov eax offset aError_io_pendi +
jmp loc_10266EC  +
mov eax offset aError_noaccess +
jmp loc_10266EC  +
mov eax offset aError_swaperro +
jmp loc_10266EC  +
mov eax offset aError_stack__0 +
jmp loc_10266EC  +
mov eax offset aError_inval_40 +
jmp loc_10266EC  +
mov eax offset aError_can_not_ +
jmp loc_10266EC  +
mov eax offset aError_inval_41 +
jmp loc_10266EC  +
mov eax offset aError_unrecogn +
jmp loc_10266EC  +
mov eax offset aError_file_inv +
jmp loc_10266EC  +
mov eax offset aError_fullscre +
jmp loc_10266EC  +
mov eax offset aError_no_token +
jmp loc_10266EC  +
mov eax offset aError_baddb +
jmp loc_10266EC  +
mov eax offset aError_badkey +
jmp loc_10266EC  +
mov eax offset aError_cantopen +
jmp loc_10266EC  +
mov eax offset aError_cantread +
jmp loc_10266EC  +
mov eax offset aError_cantwrit +
jmp loc_10266EC  +
mov eax offset aError_regist_1 +
jmp loc_10266EC  +
mov eax offset aError_regist_2 +
jmp loc_10266EC  +
mov eax offset aError_regist_3 +
jmp loc_10266EC  +
mov eax offset aError_not_regi +
jmp loc_10266EC  +
mov eax offset aError_key_dele +
jmp loc_10266EC  +
mov eax offset aError_no_log_s +
jmp loc_10266EC  +
mov eax offset aError_key_has_ +
jmp loc_10266EC  +
mov eax offset aError_child_mu +
jmp loc_10266EC  +
mov eax offset aError_notify_e +
jmp loc_10266EC  +
mov eax offset aError_dependen +
jmp loc_10266EC  +
mov eax offset aError_inval_42 +
jmp loc_10266EC  +
mov eax offset aError_servic_0 +
jmp loc_10266EC  +
mov eax offset aError_servic_1 +
jmp loc_10266EC  +
mov eax offset aError_servic_2 +
jmp loc_10266EC  +
mov eax offset aError_servic_3 +
jmp loc_10266EC  +
mov eax offset aError_inval_43 +
jmp loc_10266EC  +
mov eax offset aError_servic_4 +
jmp loc_10266EC  +
mov eax offset aError_circular +
jmp loc_10266EC  +
mov eax offset aError_servic_5 +
jmp loc_10266EC  +
mov eax offset aError_servic_6 +
jmp loc_10266EC  +
mov eax offset aError_servic_7 +
jmp loc_10266EC  +
mov eax offset aError_failed_s +
jmp loc_10266EC  +
mov eax offset aError_exceptio +
jmp loc_10266EC  +
mov eax offset aError_database +
jmp loc_10266EC  +
mov eax offset aError_servic_8 +
jmp loc_10266EC  +
mov eax offset aError_proces_3 +
jmp loc_10266EC  +
mov eax offset aError_servic_9 +
jmp loc_10266EC  +
mov eax offset aError_servi_10 +
jmp loc_10266EC  +
mov eax offset aError_servi_11 +
jmp loc_10266EC  +
mov eax offset aError_inval_44 +
jmp loc_10266EC  +
mov eax offset aError_servi_12 +
jmp loc_10266EC  +
mov eax offset aError_servi_13 +
jmp loc_10266EC  +
mov eax offset aError_alread_2 +
jmp loc_10266EC  +
mov eax offset aError_servi_14 +
jmp loc_10266EC  +
mov eax offset aError_boot_alr +
jmp loc_10266EC  +
mov eax offset aError_servi_15 +
jmp loc_10266EC  +
mov eax offset aError_duplicat +
jmp loc_10266EC  +
mov eax offset aError_differen +
jmp loc_10266EC  +
mov eax offset aError_cannot_d +
jmp loc_10266EC  +
mov eax offset aError_cannot_0 +
jmp loc_10266EC  +
mov eax offset aError_no_recov +
jmp loc_10266EC  +
mov eax offset aError_servi_16 +
jmp loc_10266EC  +
mov eax offset aError_not_sa_0 +
jmp loc_10266EC  +
mov eax offset aError_end_of_m +
jmp loc_10266EC  +
mov eax offset aError_filemark +
jmp loc_10266EC  +
mov eax offset aError_beginnin +
jmp loc_10266EC  +
mov eax offset aError_setmark_ +
jmp loc_10266EC  +
mov eax offset aError_no_data_ +
jmp loc_10266EC  +
mov eax offset aError_partitio +
jmp loc_10266EC  +
mov eax offset aError_inval_45 +
jmp loc_10266EC  +
mov eax offset aError_device_n +
jmp loc_10266EC  +
mov eax offset aError_unable_t +
jmp loc_10266EC  +
mov eax offset aError_unable_0 +
jmp loc_10266EC  +
mov eax offset aError_media__0 +
jmp loc_10266EC  +
mov eax offset aError_bus_rese +
jmp loc_10266EC  +
mov eax offset aError_no_media +
jmp loc_10266EC  +
mov eax offset aError_no_unico +
jmp loc_10266EC  +
mov eax offset aError_dll_in_0 +
jmp loc_10266EC  +
mov eax offset aError_shutdown +
jmp loc_10266EC  +
mov eax offset aError_no_shutd +
jmp loc_10266EC  +
mov eax offset aError_io_devic +
jmp loc_10266EC  +
mov eax offset aError_serial_n +
jmp loc_10266EC  +
mov eax offset aError_irq_busy +
jmp loc_10266EC  +
mov eax offset aError_more_wri +
jmp loc_10266EC  +
mov eax offset aError_counter_ +
jmp loc_10266EC  +
mov eax offset aError_floppy_i +
jmp loc_10266EC  +
mov eax offset aError_floppy_w +
jmp loc_10266EC  +
mov eax offset aError_floppy_u +
jmp loc_10266EC  +
mov eax offset aError_floppy_b +
jmp loc_10266EC  +
mov eax offset aError_disk_rec +
jmp loc_10266EC  +
mov eax offset aError_disk_ope +
jmp loc_10266EC  +
mov eax offset aError_disk_res +
jmp loc_10266EC  +
mov eax offset aError_eom_over +
jmp loc_10266EC  +
mov eax offset aError_not_en_0 +
jmp loc_10266EC  +
mov eax offset aError_possible +
jmp loc_10266EC  +
mov eax offset aError_mapped_a +
jmp loc_10266EC  +
mov eax offset aError_set_powe +
jmp loc_10266EC  +
mov eax offset aError_set_po_0 +
jmp loc_10266EC  +
mov eax offset aError_too_m_10 +
jmp loc_10266EC  +
mov eax offset aError_old_win_ +
jmp loc_10266EC  +
mov eax offset aError_app_wron +
jmp loc_10266EC  +
mov eax offset aError_single_i +
jmp loc_10266EC  +
mov eax offset aError_rmode_ap +
jmp loc_10266EC  +
mov eax offset aError_inval_46 +
jmp loc_10266EC  +
mov eax offset aError_no_assoc +
jmp loc_10266EC  +
mov eax offset aError_dde_fail +
jmp loc_10266EC  +
mov eax offset aError_dll_not_ +
jmp loc_10266EC  +
mov eax offset aError_no_mor_3 +
jmp loc_10266EC  +
mov eax offset aError_message_ +
jmp loc_10266EC  +
mov eax offset aError_source_e +
jmp loc_10266EC  +
mov eax offset aError_destinat +
jmp loc_10266EC  +
mov eax offset aError_illega_2 +
jmp loc_10266EC  +
mov eax offset aError_magazine +
jmp loc_10266EC  +
mov eax offset aError_device_r +
jmp loc_10266EC  +
mov eax offset aError_device_0 +
jmp loc_10266EC  +
mov eax offset aError_device_d +
jmp loc_10266EC  +
mov eax offset aError_device_1 +
jmp loc_10266EC  +
mov eax offset aError_not_foun +
jmp loc_10266EC  +
mov eax offset aError_no_match +
jmp loc_10266EC  +
mov eax offset aError_set_not_ +
jmp loc_10266EC  +
mov eax offset aError_point_no +
jmp loc_10266EC  +
mov eax offset aError_no_track +
jmp loc_10266EC  +
mov eax offset aError_no_vol_0 +
jmp loc_10266EC  +
mov eax offset aError_unable_1 +
jmp loc_10266EC  +
mov eax offset aError_unable_2 +
jmp loc_10266EC  +
mov eax offset aError_unable_3 +
jmp loc_10266EC  +
mov eax offset aError_journal_ +
jmp loc_10266EC  +
mov eax offset aError_journa_0 +
jmp loc_10266EC  +
mov eax offset aError_potentia +
jmp loc_10266EC  +
mov eax offset aError_journa_1 +
jmp loc_10266EC  +
mov eax offset aError_shutdo_0 +
jmp loc_10266EC  +
mov eax offset aError_shutdo_1 +
jmp loc_10266EC  +
mov eax offset aError_bad_devi +
jmp loc_10266EC  +
mov eax offset aError_connecti +
jmp loc_10266EC  +
mov eax offset aError_device_2 +
jmp loc_10266EC  +
mov eax offset aError_no_net_o +
jmp loc_10266EC  +
mov eax offset aError_bad_prov +
jmp loc_10266EC  +
mov eax offset aError_cannot_o +
jmp loc_10266EC  +
mov eax offset aError_bad_prof +
jmp loc_10266EC  +
mov eax offset aError_not_cont +
jmp loc_10266EC  +
mov eax offset aError_extended +
jmp loc_10266EC  +
mov eax offset aError_inval_47 +
jmp loc_10266EC  +
mov eax offset aError_inval_48 +
jmp loc_10266EC  +
mov eax offset aError_inval_49 +
jmp loc_10266EC  +
mov eax offset aError_inval_50 +
jmp loc_10266EC  +
mov eax offset aError_inval_51 +
jmp loc_10266EC  +
mov eax offset aError_inval_52 +
jmp loc_10266EC  +
mov eax offset aError_inval_53 +
jmp loc_10266EC  +
mov eax offset aError_inval_54 +
jmp loc_10266EC  +
mov eax offset aError_inval_55 +
jmp loc_10266EC  +
mov eax offset aError_inval_56 +
jmp loc_10266EC  +
mov eax offset aError_session_ +
jmp loc_10266EC  +
mov eax offset aError_remote_s +
jmp loc_10266EC  +
mov eax offset aError_dup_doma +
jmp loc_10266EC  +
mov eax offset aError_no_netwo +
jmp loc_10266EC  +
mov eax offset aError_cancelle +
jmp loc_10266EC  +
mov eax offset aError_user_map +
jmp loc_10266EC  +
mov eax offset aError_connec_0 +
jmp loc_10266EC  +
mov eax offset aError_graceful +
jmp loc_10266EC  +
mov eax offset aError_address_ +
jmp loc_10266EC  +
mov eax offset aError_addres_0 +
jmp loc_10266EC  +
mov eax offset aError_connec_1 +
jmp loc_10266EC  +
mov eax offset aError_connec_2 +
jmp loc_10266EC  +
mov eax offset aError_networ_1 +
jmp loc_10266EC  +
mov eax offset aError_host_unr +
jmp loc_10266EC  +
mov eax offset aError_protocol +
jmp loc_10266EC  +
mov eax offset aError_port_unr +
jmp loc_10266EC  +
mov eax offset aError_reques_0 +
jmp loc_10266EC  +
mov eax offset aError_connec_3 +
jmp loc_10266EC  +
mov eax offset aError_retry +
jmp loc_10266EC  +
mov eax offset aError_connec_4 +
jmp loc_10266EC  +
mov eax offset aError_login_ti +
jmp loc_10266EC  +
mov eax offset aError_login_wk +
jmp loc_10266EC  +
mov eax offset aError_incorrec +
jmp loc_10266EC  +
mov eax offset aError_alread_3 +
jmp loc_10266EC  +
mov eax offset aError_servi_17 +
jmp loc_10266EC  +
mov eax offset aError_not_auth +
jmp loc_10266EC  +
mov eax offset aError_not_logg +
jmp loc_10266EC  +
mov eax offset aError_continue +
jmp loc_10266EC  +
mov eax offset aError_alread_4 +
jmp loc_10266EC  +
mov eax offset aError_no_mor_4 +
jmp loc_10266EC  +
mov eax offset aError_no_such_ +
jmp loc_10266EC  +
mov eax offset aError_domain_0 +
jmp loc_10266EC  +
mov eax offset aError_only_if_ +
jmp loc_10266EC  +
mov eax offset aError_override +
jmp loc_10266EC  +
mov eax offset aError_bad_user +
jmp loc_10266EC  +
mov eax offset aError_not_su_0 +
jmp loc_10266EC  +
mov eax offset aError_server_0 +
jmp loc_10266EC  +
mov eax offset aError_host_dow +
jmp loc_10266EC  +
mov eax offset aError_non_acco +
jmp loc_10266EC  +
mov eax offset aError_non_doma +
jmp loc_10266EC  +
mov eax offset aError_apphelp_ +
jmp loc_10266EC  +
mov eax offset aError_access_0 +
jmp loc_10266EC  +
mov eax offset aError_reg_nat_ +
jmp loc_10266EC  +
mov eax offset aError_cscshare +
jmp loc_10266EC  +
mov eax offset aError_pkinit_f +
jmp loc_10266EC  +
mov eax offset aError_smartcar +
jmp loc_10266EC  +
mov eax offset aError_downgrad +
jmp loc_10266EC  +
mov eax offset aError_machine_ +
jmp loc_10266EC  +
mov eax offset aError_callba_0 +
jmp loc_10266EC  +
mov eax offset aError_sync_for +
jmp loc_10266EC  +
mov eax offset aError_driver_b +
jmp loc_10266EC  +
mov eax offset aError_inval_57 +
jmp loc_10266EC  +
mov eax offset aError_access_1 +
jmp loc_10266EC  +
mov eax offset aError_access_2 +
jmp loc_10266EC  +
mov eax offset aError_recovery +
jmp loc_10266EC  +
mov eax offset aError_alread_5 +
jmp loc_10266EC  +
mov eax offset aError_alread_6 +
jmp loc_10266EC  +
mov eax offset aError_stack_bu +
jmp loc_10266EC  +
mov eax offset aError_paramete +
jmp loc_10266EC  +
mov eax offset aError_debugger +
jmp loc_10266EC  +
mov eax offset aError_delay_lo +
jmp loc_10266EC  +
mov eax offset aError_vdm_disa +
jmp loc_10266EC  +
mov eax offset aError_unidenti +
jmp loc_10266EC  +
mov eax offset aError_inval_58 +
jmp loc_10266EC  +
mov eax offset aError_beyond_v +
jmp loc_10266EC  +
mov eax offset aError_incompat +
jmp loc_10266EC  +
mov eax offset aError_driver_p +
jmp loc_10266EC  +
mov eax offset aError_implemen +
jmp loc_10266EC  +
mov eax offset aError_proces_4 +
jmp loc_10266EC  +
mov eax offset aError_servi_18 +
jmp loc_10266EC  +
mov eax offset aError_disk_quo +
jmp loc_10266EC  +
mov eax offset aError_content_ +
jmp loc_10266EC  +
mov eax offset aError_incomp_0 +
jmp loc_10266EC  +
mov eax offset aError_app_hang +
jmp loc_10266EC  +
mov eax offset aError_inval_59 +
jmp loc_10266EC  +
mov eax offset aError_not_all_ +
jmp loc_10266EC  +
mov eax offset aError_some_not +
jmp loc_10266EC  +
mov eax offset aError_no_quota +
jmp loc_10266EC  +
mov eax offset aError_local_us +
jmp loc_10266EC  +
mov eax offset aError_null_lm_ +
jmp loc_10266EC  +
mov eax offset aError_unknown_ +
jmp loc_10266EC  +
mov eax offset aError_revision +
jmp loc_10266EC  +
mov eax offset aError_inval_60 +
jmp loc_10266EC  +
mov eax offset aError_inval_61 +
jmp loc_10266EC  +
mov eax offset aError_no_imper +
jmp loc_10266EC  +
mov eax offset aError_cant_dis +
jmp loc_10266EC  +
mov eax offset aError_no_logon +
jmp loc_10266EC  +
mov eax offset aError_no_suc_0 +
jmp loc_10266EC  +
mov eax offset aError_no_suc_1 +
jmp loc_10266EC  +
mov eax offset aError_privileg +
jmp loc_10266EC  +
mov eax offset aError_inval_62 +
jmp loc_10266EC  +
mov eax offset aError_user_exi +
jmp loc_10266EC  +
mov eax offset aError_no_suc_2 +
jmp loc_10266EC  +
mov ecx 800708CAh +
cmp eax ecx +
jg loc_10235BF  +
jz loc_10235B5  +
add eax 7FF8FADAh +
cmp eax 374h +
ja loc_10266CB  +
jmp ds:off_1027B34[eax*4]  +
mov eax offset aError_group_ex +
jmp loc_10266EC  +
mov eax offset aError_no_suc_3 +
jmp loc_10266EC  +
mov eax offset aError_member_i +
jmp loc_10266EC  +
mov eax offset aError_member_n +
jmp loc_10266EC  +
mov eax offset aError_last_adm +
jmp loc_10266EC  +
mov eax offset aError_wrong_pa +
jmp loc_10266EC  +
mov eax offset aError_ill_form +
jmp loc_10266EC  +
mov eax offset aError_password +
jmp loc_10266EC  +
mov eax offset aError_logon_fa +
jmp loc_10266EC  +
mov eax offset aError_account_ +
jmp loc_10266EC  +
mov eax offset aError_inval_63 +
jmp loc_10266EC  +
mov eax offset aError_inval_64 +
jmp loc_10266EC  +
mov eax offset aError_passwo_0 +
jmp loc_10266EC  +
mov eax offset aError_accoun_0 +
jmp loc_10266EC  +
mov eax offset aError_none_map +
jmp loc_10266EC  +
mov eax offset aError_too_m_11 +
jmp loc_10266EC  +
mov eax offset aError_luids_ex +
jmp loc_10266EC  +
mov eax offset aError_inval_65 +
jmp loc_10266EC  +
mov eax offset aError_inval_66 +
jmp loc_10266EC  +
mov eax offset aError_inval_67 +
jmp loc_10266EC  +
mov eax offset aError_inval_68 +
jmp loc_10266EC  +
mov eax offset aError_bad_inhe +
jmp loc_10266EC  +
mov eax offset aError_server_d +
jmp loc_10266EC  +
mov eax offset aError_server_n +
jmp loc_10266EC  +
mov eax offset aError_inval_69 +
jmp loc_10266EC  +
mov eax offset aError_allotted +
jmp loc_10266EC  +
mov eax offset aError_inval_70 +
jmp loc_10266EC  +
mov eax offset aError_bad_impe +
jmp loc_10266EC  +
mov eax offset aError_cant_ope +
jmp loc_10266EC  +
mov eax offset aError_bad_vali +
jmp loc_10266EC  +
mov eax offset aError_bad_toke +
jmp loc_10266EC  +
mov eax offset aError_no_secur +
jmp loc_10266EC  +
mov eax offset aError_cant_acc +
jmp loc_10266EC  +
mov eax offset aError_inval_71 +
jmp loc_10266EC  +
mov eax offset aError_inval_72 +
jmp loc_10266EC  +
mov eax offset aError_inval_73 +
jmp loc_10266EC  +
mov eax offset aError_no_suc_4 +
jmp loc_10266EC  +
mov eax offset aError_domain_e +
jmp loc_10266EC  +
mov eax offset aError_domain_l +
jmp loc_10266EC  +
mov eax offset aError_internal +
jmp loc_10266EC  +
mov eax offset aError_intern_0 +
jmp loc_10266EC  +
mov eax offset aError_generic_ +
jmp loc_10266EC  +
mov eax offset aError_bad_desc +
jmp loc_10266EC  +
mov eax offset aError_not_logo +
jmp loc_10266EC  +
mov eax offset aError_logon__0 +
jmp loc_10266EC  +
mov eax offset aError_no_suc_5 +
jmp loc_10266EC  +
mov eax offset aError_bad_logo +
jmp loc_10266EC  +
mov eax offset aError_logon__1 +
jmp loc_10266EC  +
mov eax offset aError_inval_74 +
jmp loc_10266EC  +
mov eax offset aError_cannot_i +
jmp loc_10266EC  +
mov eax offset aError_rxact_in +
jmp loc_10266EC  +
mov eax offset aError_rxact__1 +
jmp loc_10266EC  +
mov eax offset aError_special_ +
jmp loc_10266EC  +
mov eax offset aError_specia_0 +
jmp loc_10266EC  +
mov eax offset aError_specia_1 +
jmp loc_10266EC  +
mov eax offset aError_members_ +
jmp loc_10266EC  +
mov eax offset aError_token_al +
jmp loc_10266EC  +
mov eax offset aError_no_suc_6 +
jmp loc_10266EC  +
mov eax offset aError_member_0 +
jmp loc_10266EC  +
mov eax offset aError_member_1 +
jmp loc_10266EC  +
mov eax offset aError_alias_ex +
jmp loc_10266EC  +
mov eax offset aError_logon_no +
jmp loc_10266EC  +
mov eax offset aError_too_m_12 +
jmp loc_10266EC  +
mov eax offset aError_secret_t +
jmp loc_10266EC  +
mov eax offset aError_intern_1 +
jmp loc_10266EC  +
mov eax offset aError_too_m_13 +
jmp loc_10266EC  +
mov eax offset aError_logon_ty +
jmp loc_10266EC  +
mov eax offset aError_nt_cross +
jmp loc_10266EC  +
mov eax offset aError_no_suc_7 +
jmp loc_10266EC  +
mov eax offset aError_inval_75 +
jmp loc_10266EC  +
mov eax offset aError_too_m_14 +
jmp loc_10266EC  +
mov eax offset aError_lm_cross +
jmp loc_10266EC  +
mov eax offset aError_no_inher +
jmp loc_10266EC  +
mov eax offset aError_file_cor +
jmp loc_10266EC  +
mov eax offset aError_disk_cor +
jmp loc_10266EC  +
mov eax offset aError_no_user_ +
jmp loc_10266EC  +
mov eax offset aError_license_ +
jmp loc_10266EC  +
mov eax offset aError_wrong_ta +
jmp loc_10266EC  +
mov eax offset aError_mutual_a +
jmp loc_10266EC  +
mov eax offset aError_time_ske +
jmp loc_10266EC  +
mov eax offset aError_curren_0 +
jmp loc_10266EC  +
mov eax offset aError_inval_76 +
jmp loc_10266EC  +
mov eax offset aError_inval_77 +
jmp loc_10266EC  +
mov eax offset aError_inval_78 +
jmp loc_10266EC  +
mov eax offset aError_inval_79 +
jmp loc_10266EC  +
mov eax offset aError_inval_80 +
jmp loc_10266EC  +
mov eax offset aError_inval_81 +
jmp loc_10266EC  +
mov eax offset aError_tlw_with +
jmp loc_10266EC  +
mov eax offset aError_cannot_f +
jmp loc_10266EC  +
mov eax offset aError_window_o +
jmp loc_10266EC  +
mov eax offset aError_hotkey_a +
jmp loc_10266EC  +
mov eax offset aError_class_al +
jmp loc_10266EC  +
mov eax offset aError_class_do +
jmp loc_10266EC  +
mov eax offset aError_class_ha +
jmp loc_10266EC  +
mov eax offset aError_inval_82 +
jmp loc_10266EC  +
mov eax offset aError_inval_83 +
jmp loc_10266EC  +
mov eax offset aError_private_ +
jmp loc_10266EC  +
mov eax offset aError_listbox_ +
jmp loc_10266EC  +
mov eax offset aError_no_wildc +
jmp loc_10266EC  +
mov eax offset aError_clipboar +
jmp loc_10266EC  +
mov eax offset aError_hotkey_n +
jmp loc_10266EC  +
mov eax offset aError_window_n +
jmp loc_10266EC  +
mov eax offset aError_contro_0 +
jmp loc_10266EC  +
mov eax offset aError_inval_84 +
jmp loc_10266EC  +
mov eax offset aError_window_0 +
jmp loc_10266EC  +
mov eax offset aError_inval_85 +
jmp loc_10266EC  +
mov eax offset aError_dc_not_f +
jmp loc_10266EC  +
mov eax offset aError_inval_86 +
jmp loc_10266EC  +
mov eax offset aError_inval_87 +
jmp loc_10266EC  +
mov eax offset aError_hook_nee +
jmp loc_10266EC  +
mov eax offset aError_global_o +
jmp loc_10266EC  +
mov eax offset aError_journa_2 +
jmp loc_10266EC  +
mov eax offset aError_hook_not +
jmp loc_10266EC  +
mov eax offset aError_inval_88 +
jmp loc_10266EC  +
mov eax offset aError_setcount +
jmp loc_10266EC  +
mov eax offset aError_lb_witho +
jmp loc_10266EC  +
mov eax offset aError_destroy_ +
jmp loc_10266EC  +
mov eax offset aError_child_wi +
jmp loc_10266EC  +
mov eax offset aError_no_syste +
jmp loc_10266EC  +
mov eax offset aError_inval_89 +
jmp loc_10266EC  +
mov eax offset aError_inval_90 +
jmp loc_10266EC  +
mov eax offset aError_screen_a +
jmp loc_10266EC  +
mov eax offset aError_hwnds_ha +
jmp loc_10266EC  +
mov eax offset aError_not_chil +
jmp loc_10266EC  +
mov eax offset aError_inval_91 +
jmp loc_10266EC  +
mov eax offset aError_inval_92 +
jmp loc_10266EC  +
mov eax offset aError_non_mdic +
jmp loc_10266EC  +
mov eax offset aError_popup_al +
jmp loc_10266EC  +
mov eax offset aError_no_scrol +
jmp loc_10266EC  +
mov eax offset aError_inval_93 +
jmp loc_10266EC  +
mov eax offset aError_inval_94 +
jmp loc_10266EC  +
mov eax offset aError_no_sys_0 +
jmp loc_10266EC  +
mov eax offset aError_nonpaged +
jmp loc_10266EC  +
mov eax offset aError_paged_sy +
jmp loc_10266EC  +
mov eax offset aError_working_ +
jmp loc_10266EC  +
mov eax offset aError_pagefi_1 +
jmp loc_10266EC  +
mov eax offset aError_commit_0 +
jmp loc_10266EC  +
mov eax offset aError_menu_ite +
jmp loc_10266EC  +
mov eax offset aError_inval_95 +
jmp loc_10266EC  +
mov eax offset aError_hook_typ +
jmp loc_10266EC  +
mov eax offset aError_requires +
jmp loc_10266EC  +
mov eax offset aError_timeout +
jmp loc_10266EC  +
mov eax offset aError_inval_96 +
jmp loc_10266EC  +
mov eax offset aError_incorr_0 +
jmp loc_10266EC  +
mov eax offset aError_symlink_ +
jmp loc_10266EC  +
mov eax offset aError_symlin_0 +
jmp loc_10266EC  +
mov eax offset aError_xml_pars +
jmp loc_10266EC  +
mov eax offset aError_xmldsig_ +
jmp loc_10266EC  +
mov eax offset aError_restart_ +
jmp loc_10266EC  +
mov eax offset aError_wrong_co +
jmp loc_10266EC  +
mov eax offset aError_authip_f +
jmp loc_10266EC  +
mov eax offset aError_eventlog +
jmp loc_10266EC  +
mov eax offset aError_eventl_0 +
jmp loc_10266EC  +
mov eax offset aError_log_file +
jmp loc_10266EC  +
mov eax offset aError_eventl_1 +
jmp loc_10266EC  +
mov eax offset aError_inval_97 +
jmp loc_10266EC  +
mov eax offset aError_inval_98 +
jmp loc_10266EC  +
mov eax offset aError_thread_a +
jmp loc_10266EC  +
mov eax offset aError_install_ +
jmp loc_10266EC  +
mov eax offset aError_instal_0 +
jmp loc_10266EC  +
mov eax offset aError_instal_1 +
jmp loc_10266EC  +
mov eax offset aError_instal_2 +
jmp loc_10266EC  +
mov eax offset aError_unknow_0 +
jmp loc_10266EC  +
mov eax offset aError_unknow_1 +
jmp loc_10266EC  +
mov eax offset aError_unknow_2 +
jmp loc_10266EC  +
mov eax offset aError_unknow_3 +
jmp loc_10266EC  +
mov eax offset asc_100FE44 +
jmp loc_10266EC  +
mov eax offset aError_bad_conf +
jmp loc_10266EC  +
mov eax offset aError_index_ab +
jmp loc_10266EC  +
mov eax offset aError_instal_3 +
jmp loc_10266EC  +
mov eax offset aError_instal_4 +
jmp loc_10266EC  +
mov eax offset aError_product_ +
jmp loc_10266EC  +
mov eax offset aError_bad_quer +
jmp loc_10266EC  +
mov eax offset asc_100FD94 +
jmp loc_10266EC  +
mov eax offset aError_device_3 +
jmp loc_10266EC  +
mov eax offset aError_instal_5 +
jmp loc_10266EC  +
mov eax offset aError_instal_6 +
jmp loc_10266EC  +
mov eax offset aError_instal_7 +
jmp loc_10266EC  +
mov eax offset aError_instal_8 +
jmp loc_10266EC  +
mov eax offset aError_instal_9 +
jmp loc_10266EC  +
mov eax offset aError_insta_10 +
jmp loc_10266EC  +
mov eax offset aError_insta_11 +
jmp loc_10266EC  +
mov eax offset aError_insta_12 +
jmp loc_10266EC  +
mov eax offset aError_function +
jmp loc_10266EC  +
mov eax offset aError_functi_0 +
jmp loc_10266EC  +
mov eax offset asc_100FC34 +
jmp loc_10266EC  +
mov eax offset aError_datatype +
jmp loc_10266EC  +
mov eax offset aError_unsupp_0 +
jmp loc_10266EC  +
mov eax offset aError_create_f +
jmp loc_10266EC  +
mov eax offset aError_insta_13 +
jmp loc_10266EC  +
mov eax offset aError_insta_14 +
jmp loc_10266EC  +
mov eax offset aError_insta_15 +
jmp loc_10266EC  +
mov eax offset aError_patch_pa +
jmp loc_10266EC  +
mov eax offset aError_patch__0 +
jmp loc_10266EC  +
mov eax offset aError_patch__1 +
jmp loc_10266EC  +
mov eax offset aError_produc_0 +
jmp loc_10266EC  +
mov eax offset asc_100FB04 +
jmp loc_10266EC  +
mov eax offset aError_insta_16 +
jmp loc_10266EC  +
mov eax offset aError_success_ +
jmp loc_10266EC  +
mov eax offset aError_patch_ta +
jmp loc_10266EC  +
mov eax offset aError_patch__2 +
jmp loc_10266EC  +
mov eax offset aError_insta_17 +
jmp loc_10266EC  +
mov eax offset aError_insta_18 +
jmp loc_10266EC  +
mov eax offset aError_patch_re +
jmp loc_10266EC  +
mov eax offset aError_unknow_4 +
jmp loc_10266EC  +
mov eax offset aError_patch_no +
jmp loc_10266EC  +
mov eax offset aError_patch__3 +
jmp loc_10266EC  +
mov eax offset asc_100F9BC +
jmp loc_10266EC  +
mov eax offset aError_patch_ma +
jmp loc_10266EC  +
mov eax offset aError_insta_19 +
jmp loc_10266EC  +
mov eax offset asc_100F958 +
jmp loc_10266EC  +
mov eax offset aError_unreco_0 +
jmp loc_10266EC  +
mov eax offset aError_no_trust +
jmp loc_10266EC  +
mov eax offset aError_no_tru_0 +
jmp loc_10266EC  +
mov eax offset aError_trusted_ +
jmp loc_10266EC  +
mov eax offset aError_truste_0 +
jmp loc_10266EC  +
mov eax offset aError_trust_fa +
jmp loc_10266EC  +
mov eax offset aError_netlogon +
jmp loc_10266EC  +
mov eax offset aError_accoun_1 +
jmp loc_10266EC  +
mov eax offset aError_redirect +
jmp loc_10266EC  +
mov eax offset aError_printer_ +
jmp loc_10266EC  +
mov eax offset aError_unknow_5 +
jmp loc_10266EC  +
mov eax offset aError_unknow_6 +
jmp loc_10266EC  +
mov eax offset aError_unknow_7 +
jmp loc_10266EC  +
mov eax offset asc_100F7B8 +
jmp loc_10266EC  +
mov eax offset asc_100F7A0 +
jmp loc_10266EC  +
mov eax offset asc_100F784 +
jmp loc_10266EC  +
mov eax offset aError_printe_0 +
jmp loc_10266EC  +
mov eax offset asc_100F744 +
jmp loc_10266EC  +
mov eax offset asc_100F72C +
jmp loc_10266EC  +
mov eax offset asc_100F710 +
jmp loc_10266EC  +
mov eax offset aError_nologon_ +
jmp loc_10266EC  +
mov eax offset aError_nologo_0 +
jmp loc_10266EC  +
mov eax offset aError_nologo_1 +
jmp loc_10266EC  +
mov eax offset aError_domain_t +
jmp loc_10266EC  +
mov eax offset aError_server_h +
jmp loc_10266EC  +
mov eax offset aError_resour_0 +
jmp loc_10266EC  +
mov eax offset aError_resour_1 +
jmp loc_10266EC  +
mov eax offset aError_resour_2 +
jmp loc_10266EC  +
mov eax offset aError_resour_3 +
jmp loc_10266EC  +
mov eax offset aError_not_en_1 +
jmp loc_10266EC  +
mov eax offset asc_100F5B0 +
jmp loc_10266EC  +
mov eax offset asc_100F598 +
jmp loc_10266EC  +
mov eax offset asc_100F580 +
jmp loc_10266EC  +
mov eax offset aError_alread_7 +
jmp loc_10266EC  +
mov eax offset aError_printe_1 +
jmp loc_10266EC  +
mov eax offset asc_100F534 +
jmp loc_10266EC  +
mov eax offset aError_passwo_1 +
jmp loc_10266EC  +
mov eax offset aError_domain_1 +
jmp loc_10266EC  +
mov eax offset aError_accoun_2 +
jmp loc_10266EC  +
mov eax offset aError_no_siten +
jmp loc_10266EC  +
mov eax offset aError_cant_a_0 +
jmp loc_10266EC  +
mov eax offset aError_cant_res +
jmp loc_10266EC  +
mov eax offset aError_km_drive +
jmp loc_10266EC  +
mov eax offset aError_context_ +
jmp loc_10266EC  +
mov eax offset aError_per_user +
jmp loc_10266EC  +
mov eax offset aError_all_user +
jmp loc_10266EC  +
mov eax offset aError_user_del +
jmp loc_10266EC  +
mov eax offset aError_authenti +
jmp loc_10266EC  +
mov eax offset aError_remote_p +
jmp loc_10266EC  +
mov eax offset aError_ntlm_blo +
jmp loc_10266EC  +
mov eax offset asc_100F370 +
jmp loc_10266EC  +
mov eax offset aError_bad_dr_0 +
jmp loc_10266EC  +
mov eax offset asc_100F340 +
jmp loc_10266EC  +
mov eax offset aError_metafile +
jmp loc_10266EC  +
mov eax offset aError_transfor +
jmp loc_10266EC  +
mov eax offset aError_clipping +
jmp loc_10266EC  +
mov eax offset asc_100F2CC +
jmp loc_10266EC  +
mov eax offset asc_100F2B4 +
jmp loc_10266EC  +
mov eax offset aError_tag_not_ +
jmp loc_10266EC  +
mov eax offset aError_tag_no_0 +
jmp loc_10266EC  +
mov eax offset aError_duplic_0 +
jmp loc_10266EC  +
mov eax offset aError_profile_ +
jmp loc_10266EC  +
mov eax offset aError_profil_2 +
jmp loc_10266EC  +
mov eax offset asc_100F214 +
jmp loc_10266EC  +
mov eax offset aError_icm_not_ +
jmp loc_10266EC  +
mov eax offset aError_deleting +
jmp loc_10266EC  +
mov eax offset asc_100F1C8 +
jmp loc_10266EC  +
mov eax offset aError_colorspa +
jmp loc_10266EC  +
mov eax offset asc_100F190 +
jmp loc_10266EC  +
mov eax offset aError_profil_3 +
jmp loc_10266EC  +
mov eax offset aError_connecte +
jmp loc_10266EC  +
mov eax offset aError_connec_5 +
jmp loc_10266EC  +
mov eax offset aError_bad_us_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_invalid_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_wrong_ki +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_protseq_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_1 +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_2 +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_3 +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_4 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_endpo +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_5 +
jmp loc_10266EC  +
mov eax offset aRpc_s_object_n +
jmp loc_10266EC  +
mov eax offset aRpc_s_already_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_type_alr +
jmp loc_10266EC  +
mov eax offset aRpc_s_alread_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_prots +
jmp loc_10266EC  +
mov eax offset aRpc_s_not_list +
jmp loc_10266EC  +
mov eax offset aRpc_s_unknown_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_unknow_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_bindi +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_pro_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_cant_cre +
jmp loc_10266EC  +
mov eax offset aRpc_s_out_of_r +
jmp loc_10266EC  +
mov eax offset aRpc_s_server_u +
jmp loc_10266EC  +
mov eax offset aRpc_s_server_t +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_6 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_call_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_call_fai +
jmp loc_10266EC  +
mov eax offset aRpc_s_call_f_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_protocol +
jmp loc_10266EC  +
mov eax offset aRpc_s_proxy_ac +
jmp loc_10266EC  +
mov eax offset aRpc_s_unsuppor +
jmp loc_10266EC  +
mov eax offset aRpc_s_unsupp_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_7 +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_8 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_entry +
jmp loc_10266EC  +
mov eax offset aRpc_s_invali_9 +
jmp loc_10266EC  +
mov eax offset aRpc_s_unsupp_1 +
jmp loc_10266EC  +
mov eax offset aRpc_s_uuid_no_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_duplicat +
jmp loc_10266EC  +
mov eax offset aRpc_s_unknow_1 +
jmp loc_10266EC  +
mov eax offset aRpc_s_max_call +
jmp loc_10266EC  +
mov eax offset aRpc_s_string_t +
jmp loc_10266EC  +
mov eax offset aRpc_s_protse_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_procnum_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_binding_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_unknow_2 +
jmp loc_10266EC  +
mov eax offset aRpc_s_unknow_3 +
jmp loc_10266EC  +
mov eax offset aRpc_s_inval_10 +
jmp loc_10266EC  +
mov eax offset aRpc_s_unknow_4 +
jmp loc_10266EC  +
mov eax offset aRpc_s_nothing_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_incomple +
jmp loc_10266EC  +
mov eax offset aRpc_s_inval_11 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_more_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_not_all_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_interfac +
jmp loc_10266EC  +
mov eax offset aRpc_s_entry_al +
jmp loc_10266EC  +
mov eax offset aRpc_s_entry_no +
jmp loc_10266EC  +
mov eax offset aRpc_s_name_ser +
jmp loc_10266EC  +
mov eax offset aRpc_s_inval_12 +
jmp loc_10266EC  +
mov eax offset aRpc_s_cannot_s +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_conte +
jmp loc_10266EC  +
mov eax offset aRpc_s_internal +
jmp loc_10266EC  +
mov eax offset aRpc_s_zero_div +
jmp loc_10266EC  +
mov eax offset aRpc_s_address_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_fp_div_z +
jmp loc_10266EC  +
mov eax offset aRpc_s_fp_under +
jmp loc_10266EC  +
mov eax offset aRpc_s_fp_overf +
jmp loc_10266EC  +
mov eax offset aRpc_x_no_more_ +
jmp loc_10266EC  +
mov eax offset aRpc_x_ss_char_ +
jmp loc_10266EC  +
mov eax offset aRpc_x_ss_cha_0 +
jmp loc_10266EC  +
mov eax offset aRpc_x_ss_in_nu +
jmp loc_10266EC  +
mov eax offset aRpc_x_ss_conte +
jmp loc_10266EC  +
mov eax offset aRpc_x_ss_handl +
jmp loc_10266EC  +
mov eax offset aRpc_x_ss_canno +
jmp loc_10266EC  +
mov eax offset aRpc_x_null_ref +
jmp loc_10266EC  +
mov eax offset aRpc_x_enum_val +
jmp loc_10266EC  +
mov eax offset aRpc_x_byte_cou +
jmp loc_10266EC  +
mov eax offset aRpc_x_bad_stub +
jmp loc_10266EC  +
mov eax offset aRpc_s_call_in_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_mor_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_inter +
jmp loc_10266EC  +
mov eax offset aRpc_s_call_can +
jmp loc_10266EC  +
mov eax offset aRpc_s_bindin_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_comm_fai +
jmp loc_10266EC  +
mov eax offset aRpc_s_unsupp_2 +
jmp loc_10266EC  +
mov eax offset aRpc_s_no_princ +
jmp loc_10266EC  +
mov eax offset aRpc_s_not_rpc_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_uuid_loc +
jmp loc_10266EC  +
mov eax offset aRpc_s_sec_pkg_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_not_canc +
jmp loc_10266EC  +
mov eax offset aRpc_x_invalid_ +
jmp loc_10266EC  +
mov eax offset aRpc_x_wrong_es +
jmp loc_10266EC  +
mov eax offset aRpc_x_wrong_st +
jmp loc_10266EC  +
mov eax offset aRpc_x_invali_0 +
jmp loc_10266EC  +
mov eax offset aRpc_x_wrong_pi +
jmp loc_10266EC  +
mov eax offset aRpc_x_wrong__0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_cookie_a +
jmp loc_10266EC  +
mov eax offset aRpc_s_group_me +
jmp loc_10266EC  +
mov eax offset aRpc_s_inval_13 +
jmp loc_10266EC  +
mov eax offset aRpc_s_send_inc +
jmp loc_10266EC  +
mov eax offset aRpc_s_inval_14 +
jmp loc_10266EC  +
mov eax offset aRpc_s_inval_15 +
jmp loc_10266EC  +
mov eax offset aRpc_x_pipe_clo +
jmp loc_10266EC  +
mov eax offset aRpc_x_pipe_dis +
jmp loc_10266EC  +
mov eax offset aRpc_x_pipe_emp +
jmp loc_10266EC  +
mov eax offset aRpc_s_entry_ty +
jmp loc_10266EC  +
mov eax offset aRpc_s_not_al_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_interf_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_profile_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_prf_elt_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_prf_el_0 +
jmp loc_10266EC  +
mov eax offset aRpc_s_grp_elt_ +
jmp loc_10266EC  +
mov eax offset aRpc_s_grp_el_0 +
jmp loc_10266EC  +
mov eax offset aError_not_conn +
jmp loc_10266EC  +
mov ecx 800710D7h +
cmp eax ecx +
jg loc_10239F5  +
jz loc_10239EB  +
mov ecx 80070FA4h +
cmp eax ecx +
jg loc_10237D4  +
jz loc_10237CA  +
mov ecx 80070BC3h +
cmp eax ecx +
jg loc_10236FE  +
jz loc_10236F4  +
add ecx 0FFFFFFF9h +
cmp eax ecx +
jg loc_102368A  +
jz loc_1023680  +
cmp eax 80070961h +
jz loc_1023676  +
cmp eax 80070962h +
jz loc_102366C  +
cmp eax 80070964h +
jz loc_1023662  +
cmp eax 80070BB8h +
jz loc_1023658  +
cmp eax 80070BB9h +
jz loc_102364E  +
cmp eax 80070BBAh +
jz loc_1023644  +
cmp eax 80070BBBh +
jnz loc_10266CB  +
mov eax offset aError_spl_no_s +
jmp loc_10266EC  +
mov eax offset aError_spool_fi +
jmp loc_10266EC  +
mov eax offset aError_printe_2 +
jmp loc_10266EC  +
mov eax offset aError_unknow_8 +
jmp loc_10266EC  +
mov eax offset aError_device_i +
jmp loc_10266EC  +
mov eax offset aError_active_c +
jmp loc_10266EC  +
mov eax offset aError_open_fil +
jmp loc_10266EC  +
mov eax offset aError_spl_no_a +
jmp loc_10266EC  +
cmp eax 80070BBDh +
jz loc_10236EA  +
cmp eax 80070BBEh +
jz loc_10236E0  +
cmp eax 80070BBFh +
jz loc_10236D6  +
cmp eax 80070BC0h +
jz loc_10236CC  +
cmp eax 80070BC1h +
jz loc_10236C2  +
cmp eax 80070BC2h +
jnz loc_10266CB  +
mov eax offset aError_succes_0 +
jmp loc_10266EC  +
mov eax offset aError_printe_3 +
jmp loc_10266EC  +
mov eax offset aError_print_mo +
jmp loc_10266EC  +
mov eax offset asc_100E46C +
jmp loc_10266EC  +
mov eax offset aError_print__0 +
jmp loc_10266EC  +
mov eax offset aError_print_pr +
jmp loc_10266EC  +
mov eax offset aError_succes_1 +
jmp loc_10266EC  +
mov ecx 80070F6Eh +
cmp eax ecx +
jg loc_1023782  +
jz loc_1023778  +
add eax 7FF8F43Ch +
cmp eax 8 +
ja loc_10266CB  +
jmp ds:off_1028908[eax*4]  +
mov eax offset aError_printe_4 +
jmp loc_10266EC  +
mov eax offset aError_printe_5 +
jmp loc_10266EC  +
mov eax offset aError_printe_6 +
jmp loc_10266EC  +
mov eax offset aError_printe_7 +
jmp loc_10266EC  +
mov eax offset aError_core_dri +
jmp loc_10266EC  +
mov eax offset aError_fail_reb +
jmp loc_10266EC  +
mov eax offset aError_fail_r_0 +
jmp loc_10266EC  +
mov eax offset aError_printe_8 +
jmp loc_10266EC  +
mov eax offset aError_print_jo +
jmp loc_10266EC  +
mov eax offset aError_io_reiss +
jmp loc_10266EC  +
cmp eax 80070FA0h +
jz loc_10237C0  +
cmp eax 80070FA1h +
jz loc_10237B6  +
cmp eax 80070FA2h +
jz loc_10237AC  +
cmp eax 80070FA3h +
jnz loc_10266CB  +
mov eax offset aError_inc_back +
jmp loc_10266EC  +
mov eax offset aError_static_i +
jmp loc_10266EC  +
mov eax offset aError_can_no_0 +
jmp loc_10266EC  +
mov eax offset aError_wins_int +
jmp loc_10266EC  +
mov eax offset aError_full_bac +
jmp loc_10266EC  +
mov ecx 80071073h +
cmp eax ecx +
jg loc_10238ED  +
jz loc_10238E3  +
add ecx 0FFFFFFF9h +
cmp eax ecx +
jg loc_1023879  +
jz loc_102386F  +
cmp eax 80070FA5h +
jz loc_1023865  +
cmp eax 80070FA6h +
jz loc_102385B  +
cmp eax 80071004h +
jz loc_1023851  +
cmp eax 80071068h +
jz loc_1023847  +
cmp eax 80071069h +
jz loc_102383D  +
cmp eax 8007106Ah +
jz loc_1023833  +
cmp eax 8007106Bh +
jnz loc_10266CB  +
mov eax offset aError_wmi_try_ +
jmp loc_10266EC  +
mov eax offset aError_wmi_item +
jmp loc_10266EC  +
mov eax offset aError_wmi_inst +
jmp loc_10266EC  +
mov eax offset aError_wmi_guid +
jmp loc_10266EC  +
mov eax offset aError_dhcp_add +
jmp loc_10266EC  +
mov eax offset aError_rpl_not_ +
jmp loc_10266EC  +
mov eax offset aError_rec_non_ +
jmp loc_10266EC  +
mov eax offset aError_wmi_dp_n +
jmp loc_10266EC  +
cmp eax 8007106Dh +
jz loc_10238D9  +
cmp eax 8007106Eh +
jz loc_10238CF  +
cmp eax 8007106Fh +
jz loc_10238C5  +
cmp eax 80071070h +
jz loc_10238BB  +
cmp eax 80071071h +
jz loc_10238B1  +
cmp eax 80071072h +
jnz loc_10266CB  +
mov eax offset aError_wmi_inva +
jmp loc_10266EC  +
mov eax offset aError_wmi_dp_f +
jmp loc_10266EC  +
mov eax offset aError_wmi_serv +
jmp loc_10266EC  +
mov eax offset aError_wmi_gu_0 +
jmp loc_10266EC  +
mov eax offset aError_wmi_alre +
jmp loc_10266EC  +
mov eax offset aError_wmi_unre +
jmp loc_10266EC  +
mov eax offset aError_wmi_in_0 +
jmp loc_10266EC  +
mov ecx 800710D0h +
cmp eax ecx +
jg loc_1023981  +
jz loc_1023977  +
cmp eax 80071074h +
jz loc_102396D  +
cmp eax 80071075h +
jz loc_1023963  +
cmp eax 80071076h +
jz loc_1023959  +
cmp eax 800710CCh +
jz loc_102394F  +
cmp eax 800710CDh +
jz loc_1023945  +
cmp eax 800710CEh +
jz loc_102393B  +
cmp eax 800710CFh +
jnz loc_10266CB  +
mov eax offset aError_drive_me +
jmp loc_10266EC  +
mov eax offset asc_100E084 +
jmp loc_10266EC  +
mov eax offset asc_100E06C +
jmp loc_10266EC  +
mov eax offset asc_100E058 +
jmp loc_10266EC  +
mov eax offset aError_wmi_set_ +
jmp loc_10266EC  +
mov eax offset aError_wmi_read +
jmp loc_10266EC  +
mov eax offset aError_wmi_al_0 +
jmp loc_10266EC  +
mov eax offset aError_media_of +
jmp loc_10266EC  +
cmp eax 800710D1h +
jz loc_10239E1  +
cmp eax 800710D2h +
jz loc_10239D7  +
cmp eax 800710D3h +
jz loc_10239CD  +
cmp eax 800710D4h +
jz loc_10239C3  +
cmp eax 800710D5h +
jz loc_10239B9  +
cmp eax 800710D6h +
jnz loc_10266CB  +
mov eax offset asc_100DFE4 +
jmp loc_10266EC  +
mov eax offset aError_resour_4 +
jmp loc_10266EC  +
mov eax offset aError_media_un +
jmp loc_10266EC  +
mov eax offset aError_not_empt +
jmp loc_10266EC  +
mov eax offset aError_empty +
jmp loc_10266EC  +
mov eax offset aError_library_ +
jmp loc_10266EC  +
mov eax offset aError_unable_4 +
jmp loc_10266EC  +
mov ecx 80071194h +
cmp eax ecx +
jg loc_1023BAA  +
jz loc_1023BA0  +
add eax 7FF8EF28h +
cmp eax 52h +
ja loc_10266CB  +
movzx eax ds:byte_10289C8[eax] +
jmp ds:off_102892C[eax*4]  +
mov eax offset aError_object_0 +
jmp loc_10266EC  +
mov eax offset aError_databa_0 +
jmp loc_10266EC  +
mov eax offset aError_databa_1 +
jmp loc_10266EC  +
mov eax offset aError_media_in +
jmp loc_10266EC  +
mov eax offset aError_resour_5 +
jmp loc_10266EC  +
mov eax offset asc_100DED4 +
jmp loc_10266EC  +
mov eax offset aError_media_no +
jmp loc_10266EC  +
mov eax offset aError_device_4 +
jmp loc_10266EC  +
mov eax offset aError_reques_1 +
jmp loc_10266EC  +
mov eax offset asc_100DE68 +
jmp loc_10266EC  +
mov eax offset aError_librar_0 +
jmp loc_10266EC  +
mov eax offset aError_medium_n +
jmp loc_10266EC  +
mov eax offset aError_unable_5 +
jmp loc_10266EC  +
mov eax offset aError_unable_6 +
jmp loc_10266EC  +
mov eax offset aError_unable_7 +
jmp loc_10266EC  +
mov eax offset aError_unable_8 +
jmp loc_10266EC  +
mov eax offset aError_transpor +
jmp loc_10266EC  +
mov eax offset aError_controll +
jmp loc_10266EC  +
mov eax offset aError_unable_9 +
jmp loc_10266EC  +
mov eax offset aError_cleaner_ +
jmp loc_10266EC  +
mov eax offset aError_cleane_0 +
jmp loc_10266EC  +
mov eax offset aError_cleane_1 +
jmp loc_10266EC  +
mov eax offset aError_unexpe_2 +
jmp loc_10266EC  +
mov eax offset aError_cant_del +
jmp loc_10266EC  +
mov eax offset aError_messag_0 +
jmp loc_10266EC  +
mov eax offset aError_volume_c +
jmp loc_10266EC  +
mov eax offset aError_indigeno +
jmp loc_10266EC  +
mov eax offset aError_no_suppo +
jmp loc_10266EC  +
mov eax offset aError_cleane_2 +
jmp loc_10266EC  +
mov eax offset aError_ieport_f +
jmp loc_10266EC  +
mov eax offset aError_file_off +
jmp loc_10266EC  +
mov eax offset aError_remote_0 +
jmp loc_10266EC  +
mov eax offset aError_remote_1 +
jmp loc_10266EC  +
mov eax offset aError_not_a_re +
jmp loc_10266EC  +
mov eax offset aError_repars_0 +
jmp loc_10266EC  +
mov eax offset asc_100DB78 +
jmp loc_10266EC  +
mov eax offset aError_repars_1 +
jmp loc_10266EC  +
mov eax offset aError_repars_2 +
jmp loc_10266EC  +
mov eax offset aError_volume_n +
jmp loc_10266EC  +
mov ecx 8007138Ch +
cmp eax ecx +
jg loc_1023C7D  +
jz loc_1023C73  +
mov ecx 800711CBh +
cmp eax ecx +
jg loc_1023C2B  +
jz loc_1023C21  +
cmp eax 800711C6h +
jz loc_1023C17  +
cmp eax 800711C7h +
jz loc_1023C0D  +
cmp eax 800711C8h +
jz loc_1023C03  +
cmp eax 800711C9h +
jz loc_1023BF9  +
cmp eax 800711CAh +
jnz loc_10266CB  +
mov eax offset asc_100DB00 +
jmp loc_10266EC  +
mov eax offset aError_file_ver +
jmp loc_10266EC  +
mov eax offset aError_file_v_0 +
jmp loc_10266EC  +
mov eax offset aError_file_v_1 +
jmp loc_10266EC  +
mov eax offset aError_file_v_2 +
jmp loc_10266EC  +
mov eax offset asc_100DA48 +
jmp loc_10266EC  +
cmp eax 800711CCh +
jz loc_1023C69  +
cmp eax 80071389h +
jz loc_1023C5F  +
cmp eax 8007138Ah +
jz loc_1023C55  +
cmp eax 8007138Bh +
jnz loc_10266CB  +
mov eax offset aError_depend_0 +
jmp loc_10266EC  +
mov eax offset aError_depend_1 +
jmp loc_10266EC  +
mov eax offset aError_depend_2 +
jmp loc_10266EC  +
mov eax offset aError_file_v_3 +
jmp loc_10266EC  +
mov eax offset aError_resour_6 +
jmp loc_10266EC  +
add eax 7FF8EC73h +
cmp eax 8 +
ja loc_10266CB  +
jmp ds:off_1028A1C[eax*4]  +
mov eax offset aError_host_nod +
jmp loc_10266EC  +
mov eax offset aError_resour_7 +
jmp loc_10266EC  +
mov eax offset aError_resour_8 +
jmp loc_10266EC  +
mov eax offset aError_shutdo_2 +
jmp loc_10266EC  +
mov eax offset aError_cant_evi +
jmp loc_10266EC  +
mov eax offset aError_object_a +
jmp loc_10266EC  +
mov eax offset aError_object_i +
jmp loc_10266EC  +
mov eax offset aError_group_no +
jmp loc_10266EC  +
mov eax offset aError_group__0 +
jmp loc_10266EC  +
mov eax offset aError_group__1 +
jmp loc_10266EC  +
mov ecx 80071702h +
cmp eax ecx +
jg loc_102400C  +
jz loc_1024002  +
add eax 7FF8EC69h +
cmp eax 4Ah +
ja loc_10266CB  +
jmp ds:off_1028A40[eax*4]  +
mov eax offset aError_host_n_0 +
jmp loc_10266EC  +
mov eax offset aError_host_n_1 +
jmp loc_10266EC  +
mov eax offset aError_resmon_c +
jmp loc_10266EC  +
mov eax offset aError_resmon_o +
jmp loc_10266EC  +
mov eax offset aError_resour_9 +
jmp loc_10266EC  +
mov eax offset aError_quorum_r +
jmp loc_10266EC  +
mov eax offset aError_not_quor +
jmp loc_10266EC  +
mov eax offset aError_cluster_ +
jmp loc_10266EC  +
mov eax offset asc_100D79C +
jmp loc_10266EC  +
mov eax offset aError_resou_10 +
jmp loc_10266EC  +
mov eax offset aError_not_qu_0 +
jmp loc_10266EC  +
mov eax offset aError_core_res +
jmp loc_10266EC  +
mov eax offset aError_quorum_0 +
jmp loc_10266EC  +
mov eax offset aError_quorumlo +
jmp loc_10266EC  +
mov eax offset aError_clusterl +
jmp loc_10266EC  +
mov eax offset aError_cluste_0 +
jmp loc_10266EC  +
mov eax offset aError_cluste_1 +
jmp loc_10266EC  +
mov eax offset aError_cluste_2 +
jmp loc_10266EC  +
mov eax offset aError_cluste_3 +
jmp loc_10266EC  +
mov eax offset aError_quorum_o +
jmp loc_10266EC  +
mov eax offset aError_networ_2 +
jmp loc_10266EC  +
mov eax offset aError_node_not +
jmp loc_10266EC  +
mov eax offset aError_all_node +
jmp loc_10266EC  +
mov eax offset aError_resou_11 +
jmp loc_10266EC  +
mov eax offset aError_cluste_4 +
jmp loc_10266EC  +
mov eax offset aError_cluste_5 +
jmp loc_10266EC  +
mov eax offset aError_cluste_6 +
jmp loc_10266EC  +
mov eax offset aError_cluste_7 +
jmp loc_10266EC  +
mov eax offset aError_cluste_8 +
jmp loc_10266EC  +
mov eax offset aError_cluste_9 +
jmp loc_10266EC  +
mov eax offset aError_clust_10 +
jmp loc_10266EC  +
mov eax offset aError_clust_11 +
jmp loc_10266EC  +
mov eax offset aError_clust_12 +
jmp loc_10266EC  +
mov eax offset aError_clust_13 +
jmp loc_10266EC  +
mov eax offset aError_clust_14 +
jmp loc_10266EC  +
mov eax offset aError_clust_15 +
jmp loc_10266EC  +
mov eax offset aError_clust_16 +
jmp loc_10266EC  +
mov eax offset aError_clust_17 +
jmp loc_10266EC  +
mov eax offset aError_clust_18 +
jmp loc_10266EC  +
mov eax offset aError_clust_19 +
jmp loc_10266EC  +
mov eax offset aError_clust_20 +
jmp loc_10266EC  +
mov eax offset aError_clust_21 +
jmp loc_10266EC  +
mov eax offset aError_clust_22 +
jmp loc_10266EC  +
mov eax offset aError_clust_23 +
jmp loc_10266EC  +
mov eax offset aError_clust_24 +
jmp loc_10266EC  +
mov eax offset aError_clust_25 +
jmp loc_10266EC  +
mov eax offset aError_clust_26 +
jmp loc_10266EC  +
mov eax offset aError_clust_27 +
jmp loc_10266EC  +
mov eax offset aError_clust_28 +
jmp loc_10266EC  +
mov eax offset aError_clust_29 +
jmp loc_10266EC  +
mov eax offset aError_clust_30 +
jmp loc_10266EC  +
mov eax offset aError_clust_31 +
jmp loc_10266EC  +
mov eax offset asc_100D204 +
jmp loc_10266EC  +
mov eax offset aError_depend_3 +
jmp loc_10266EC  +
mov eax offset aError_clust_32 +
jmp loc_10266EC  +
mov eax offset aError_node_can +
jmp loc_10266EC  +
mov eax offset aError_clust_33 +
jmp loc_10266EC  +
mov eax offset aError_clust_34 +
jmp loc_10266EC  +
mov eax offset aError_clust_35 +
jmp loc_10266EC  +
mov eax offset aError_clust_36 +
jmp loc_10266EC  +
mov eax offset aError_clust_37 +
jmp loc_10266EC  +
mov eax offset aError_clust_38 +
jmp loc_10266EC  +
mov eax offset aError_clust_39 +
jmp loc_10266EC  +
mov eax offset aError_clust_40 +
jmp loc_10266EC  +
mov eax offset aError_clust_41 +
jmp loc_10266EC  +
mov eax offset aError_clust_42 +
jmp loc_10266EC  +
mov eax offset aError_clust_43 +
jmp loc_10266EC  +
mov eax offset aError_clust_44 +
jmp loc_10266EC  +
mov eax offset aError_resmon_i +
jmp loc_10266EC  +
mov eax offset aError_clust_45 +
jmp loc_10266EC  +
mov eax offset aError_quorum_d +
jmp loc_10266EC  +
mov eax offset aError_databa_2 +
jmp loc_10266EC  +
mov eax offset aError_clust_46 +
jmp loc_10266EC  +
mov eax offset aError_resou_12 +
jmp loc_10266EC  +
mov eax offset aError_clust_47 +
jmp loc_10266EC  +
mov ecx 800717E6h +
cmp eax ecx +
jg loc_1024335  +
jz loc_102432B  +
add eax 7FF8E8FDh +
cmp eax 82h +
ja loc_10266CB  +
movzx eax ds:byte_1028C9C[eax] +
jmp ds:off_1028B6C[eax*4]  +
mov eax offset aError_clust_48 +
jmp loc_10266EC  +
mov eax offset aError_clust_49 +
jmp loc_10266EC  +
mov eax offset aError_clust_50 +
jmp loc_10266EC  +
mov eax offset aError_clust_51 +
jmp loc_10266EC  +
mov eax offset aError_clust_52 +
jmp loc_10266EC  +
mov eax offset aError_clust_53 +
jmp loc_10266EC  +
mov eax offset aError_clust_54 +
jmp loc_10266EC  +
mov eax offset aError_node_c_0 +
jmp loc_10266EC  +
mov eax offset aError_clust_55 +
jmp loc_10266EC  +
mov eax offset aError_clust_56 +
jmp loc_10266EC  +
mov eax offset aError_cluscfg_ +
jmp loc_10266EC  +
mov eax offset aError_cluscf_0 +
jmp loc_10266EC  +
mov eax offset aError_cluscf_1 +
jmp loc_10266EC  +
mov eax offset aError_clust_57 +
jmp loc_10266EC  +
mov eax offset aError_clust_58 +
jmp loc_10266EC  +
mov eax offset aError_clust_59 +
jmp loc_10266EC  +
mov eax offset aError_clust_60 +
jmp loc_10266EC  +
mov eax offset aError_clust_61 +
jmp loc_10266EC  +
mov eax offset aError_clust_62 +
jmp loc_10266EC  +
mov eax offset aError_resou_13 +
jmp loc_10266EC  +
mov eax offset asc_100CC20 +
jmp loc_10266EC  +
mov eax offset aError_clust_63 +
jmp loc_10266EC  +
mov eax offset aError_clust_64 +
jmp loc_10266EC  +
mov eax offset aError_clust_65 +
jmp loc_10266EC  +
mov eax offset aError_clust_66 +
jmp loc_10266EC  +
mov eax offset aError_clust_67 +
jmp loc_10266EC  +
mov eax offset aError_clust_68 +
jmp loc_10266EC  +
mov eax offset aError_clust_69 +
jmp loc_10266EC  +
mov eax offset aError_clust_70 +
jmp loc_10266EC  +
mov eax offset aError_clust_71 +
jmp loc_10266EC  +
mov eax offset aError_clust_72 +
jmp loc_10266EC  +
mov eax offset aError_clust_73 +
jmp loc_10266EC  +
mov eax offset aError_clust_74 +
jmp loc_10266EC  +
mov eax offset aError_depend_4 +
jmp loc_10266EC  +
mov eax offset aError_clust_75 +
jmp loc_10266EC  +
mov eax offset aError_clust_76 +
jmp loc_10266EC  +
mov eax offset aError_clust_77 +
jmp loc_10266EC  +
mov eax offset aError_quorum_n +
jmp loc_10266EC  +
mov eax offset aError_depend_5 +
jmp loc_10266EC  +
mov eax offset aError_except_0 +
jmp loc_10266EC  +
mov eax offset aError_clust_78 +
jmp loc_10266EC  +
mov eax offset aError_clust_79 +
jmp loc_10266EC  +
mov eax offset aError_clust_80 +
jmp loc_10266EC  +
mov eax offset aError_clust_81 +
jmp loc_10266EC  +
mov eax offset aError_clust_82 +
jmp loc_10266EC  +
mov eax offset aError_clust_83 +
jmp loc_10266EC  +
mov eax offset aError_noncore_ +
jmp loc_10266EC  +
mov eax offset aError_file_sha +
jmp loc_10266EC  +
mov eax offset aError_clust_84 +
jmp loc_10266EC  +
mov eax offset aError_clust_85 +
jmp loc_10266EC  +
mov eax offset aError_clust_86 +
jmp loc_10266EC  +
mov eax offset aError_clust_87 +
jmp loc_10266EC  +
mov eax offset aError_clust_88 +
jmp loc_10266EC  +
mov eax offset aError_encrypti +
jmp loc_10266EC  +
mov eax offset aError_decrypti +
jmp loc_10266EC  +
mov eax offset aError_file_enc +
jmp loc_10266EC  +
mov eax offset aError_no_rec_0 +
jmp loc_10266EC  +
mov eax offset aError_no_efs +
jmp loc_10266EC  +
mov eax offset aError_wrong_ef +
jmp loc_10266EC  +
mov eax offset aError_no_use_0 +
jmp loc_10266EC  +
mov eax offset aError_file_n_0 +
jmp loc_10266EC  +
mov eax offset aError_not_expo +
jmp loc_10266EC  +
mov eax offset aError_file_rea +
jmp loc_10266EC  +
mov eax offset aError_dir_efs_ +
jmp loc_10266EC  +
mov eax offset aError_efs_serv +
jmp loc_10266EC  +
mov eax offset aError_bad_reco +
jmp loc_10266EC  +
mov eax offset aError_efs_alg_ +
jmp loc_10266EC  +
mov eax offset aError_volume_0 +
jmp loc_10266EC  +
mov eax offset aError_efs_disa +
jmp loc_10266EC  +
mov eax offset aError_efs_vers +
jmp loc_10266EC  +
mov eax offset aError_cs_encry +
jmp loc_10266EC  +
mov eax offset aError_cs_enc_0 +
jmp loc_10266EC  +
mov eax offset aError_cs_enc_1 +
jmp loc_10266EC  +
mov eax offset aError_cs_enc_2 +
jmp loc_10266EC  +
mov eax offset aError_cs_enc_3 +
jmp loc_10266EC  +
mov eax offset aError_no_brows +
jmp loc_10266EC  +
mov ecx 80071B59h +
cmp eax ecx +
jg loc_10248A2  +
jz loc_1024898  +
add eax 7FF8E638h +
cmp eax 0FEh +
ja loc_10266CB  +
movzx eax ds:byte_1028F38[eax] +
jmp ds:off_1028D20[eax*4]  +
mov eax offset aError_log_sect +
jmp loc_10266EC  +
mov eax offset aError_log_se_0 +
jmp loc_10266EC  +
mov eax offset aError_log_se_1 +
jmp loc_10266EC  +
mov eax offset aError_log_bloc +
jmp loc_10266EC  +
mov eax offset aError_log_inva +
jmp loc_10266EC  +
mov eax offset aError_log_bl_0 +
jmp loc_10266EC  +
mov eax offset aError_log_read +
jmp loc_10266EC  +
mov eax offset aError_log_rest +
jmp loc_10266EC  +
mov eax offset aError_log_bl_1 +
jmp loc_10266EC  +
mov eax offset aError_log_bl_2 +
jmp loc_10266EC  +
mov eax offset aError_log_re_0 +
jmp loc_10266EC  +
mov eax offset aError_log_no_r +
jmp loc_10266EC  +
mov eax offset aError_log_meta +
jmp loc_10266EC  +
mov eax offset aError_log_me_0 +
jmp loc_10266EC  +
mov eax offset aError_log_me_1 +
jmp loc_10266EC  +
mov eax offset aError_log_rese +
jmp loc_10266EC  +
mov eax offset aError_log_cant +
jmp loc_10266EC  +
mov eax offset aError_log_cont +
jmp loc_10266EC  +
mov eax offset aError_log_star +
jmp loc_10266EC  +
mov eax offset aError_log_poli +
jmp loc_10266EC  +
mov eax offset aError_log_po_0 +
jmp loc_10266EC  +
mov eax offset aError_log_po_1 +
jmp loc_10266EC  +
mov eax offset aError_log_po_2 +
jmp loc_10266EC  +
mov eax offset aError_log_pinn +
jmp loc_10266EC  +
mov eax offset aError_log_reco +
jmp loc_10266EC  +
mov eax offset aError_log_re_1 +
jmp loc_10266EC  +
mov eax offset aError_log_spac +
jmp loc_10266EC  +
mov eax offset aError_log_tail +
jmp loc_10266EC  +
mov eax offset aError_log_full +
jmp loc_10266EC  +
mov eax offset aError_could__0 +
jmp loc_10266EC  +
mov eax offset aError_log_mult +
jmp loc_10266EC  +
mov eax offset aError_log_dedi +
jmp loc_10266EC  +
mov eax offset aError_log_arch +
jmp loc_10266EC  +
mov eax offset aError_log_ar_0 +
jmp loc_10266EC  +
mov eax offset aError_log_ephe +
jmp loc_10266EC  +
mov eax offset aError_log_not_ +
jmp loc_10266EC  +
mov eax offset aError_log_clie +
jmp loc_10266EC  +
mov eax offset aError_log_cl_0 +
jmp loc_10266EC  +
mov eax offset aError_log_fu_0 +
jmp loc_10266EC  +
mov eax offset aError_log_co_0 +
jmp loc_10266EC  +
mov eax offset aError_log_co_1 +
jmp loc_10266EC  +
mov eax offset aError_log_co_2 +
jmp loc_10266EC  +
mov eax offset aError_log_co_3 +
jmp loc_10266EC  +
mov eax offset aError_log_stat +
jmp loc_10266EC  +
mov eax offset aError_log_pi_0 +
jmp loc_10266EC  +
mov eax offset aError_log_me_2 +
jmp loc_10266EC  +
mov eax offset aError_log_inco +
jmp loc_10266EC  +
mov eax offset aError_log_appe +
jmp loc_10266EC  +
mov eax offset aError_log_pi_1 +
jmp loc_10266EC  +
mov eax offset asc_100BF28 +
jmp loc_10266EC  +
mov eax offset aError_transact +
jmp loc_10266EC  +
mov eax offset aError_transa_0 +
jmp loc_10266EC  +
mov eax offset aError_transa_1 +
jmp loc_10266EC  +
mov eax offset aError_transa_2 +
jmp loc_10266EC  +
mov eax offset aError_transa_3 +
jmp loc_10266EC  +
mov eax offset aError_tm_initi +
jmp loc_10266EC  +
mov eax offset aError_resou_14 +
jmp loc_10266EC  +
mov eax offset aError_transa_4 +
jmp loc_10266EC  +
mov eax offset aError_transa_5 +
jmp loc_10266EC  +
mov eax offset aError_crm_prot +
jmp loc_10266EC  +
mov eax offset aError_transa_6 +
jmp loc_10266EC  +
mov eax offset aError_crm_pr_0 +
jmp loc_10266EC  +
mov eax offset aError_transa_7 +
jmp loc_10266EC  +
mov eax offset aError_curren_1 +
jmp loc_10266EC  +
mov eax offset aError_transa_8 +
jmp loc_10266EC  +
mov eax offset aError_resou_15 +
jmp loc_10266EC  +
mov eax offset aError_enlistme +
jmp loc_10266EC  +
mov eax offset aError_transa_9 +
jmp loc_10266EC  +
mov eax offset aError_trans_10 +
jmp loc_10266EC  +
mov eax offset aError_trans_11 +
jmp loc_10266EC  +
mov eax offset aError_trans_12 +
jmp loc_10266EC  +
mov eax offset aError_trans_13 +
jmp loc_10266EC  +
mov eax offset aError_trans_14 +
jmp loc_10266EC  +
mov eax offset aError_trans_15 +
jmp loc_10266EC  +
mov eax offset aError_implicit +
jmp loc_10266EC  +
mov eax offset aError_trans_16 +
jmp loc_10266EC  +
mov eax offset aError_trans_17 +
jmp loc_10266EC  +
mov eax offset aError_rm_canno +
jmp loc_10266EC  +
mov eax offset aError_trans_18 +
jmp loc_10266EC  +
mov eax offset aError_trans_19 +
jmp loc_10266EC  +
mov eax offset aError_trans_20 +
jmp loc_10266EC  +
mov eax offset aError_rm_not_a +
jmp loc_10266EC  +
mov eax offset aError_rm_metad +
jmp loc_10266EC  +
mov eax offset aError_direct_0 +
jmp loc_10266EC  +
mov eax offset aError_trans_21 +
jmp loc_10266EC  +
mov eax offset aError_log_resi +
jmp loc_10266EC  +
mov eax offset aError_object_1 +
jmp loc_10266EC  +
mov eax offset aError_stream_m +
jmp loc_10266EC  +
mov eax offset aError_stream_0 +
jmp loc_10266EC  +
mov eax offset aError_minivers +
jmp loc_10266EC  +
mov eax offset aError_cant_o_0 +
jmp loc_10266EC  +
mov eax offset aError_cant_cre +
jmp loc_10266EC  +
mov eax offset aError_remote_f +
jmp loc_10266EC  +
mov eax offset aError_handle_n +
jmp loc_10266EC  +
mov eax offset aError_no_txf_m +
jmp loc_10266EC  +
mov eax offset aError_log_corr +
jmp loc_10266EC  +
mov eax offset aError_cant_rec +
jmp loc_10266EC  +
mov eax offset aError_rm_disco +
jmp loc_10266EC  +
mov eax offset aError_enlist_0 +
jmp loc_10266EC  +
mov eax offset aError_recove_0 +
jmp loc_10266EC  +
mov eax offset aError_rm_alrea +
jmp loc_10266EC  +
mov eax offset aError_file_ide +
jmp loc_10266EC  +
mov eax offset aError_cant_bre +
jmp loc_10266EC  +
mov eax offset aError_cant_cro +
jmp loc_10266EC  +
mov eax offset aError_txf_dir_ +
jmp loc_10266EC  +
mov eax offset aError_indoubt_ +
jmp loc_10266EC  +
mov eax offset aError_tm_volat +
jmp loc_10266EC  +
mov eax offset aError_rollback +
jmp loc_10266EC  +
mov eax offset aError_txf_attr +
jmp loc_10266EC  +
mov eax offset aError_efs_not_ +
jmp loc_10266EC  +
mov eax offset aError_trans_22 +
jmp loc_10266EC  +
mov eax offset aError_log_grow +
jmp loc_10266EC  +
mov eax offset aError_trans_23 +
jmp loc_10266EC  +
mov eax offset aError_txf_meta +
jmp loc_10266EC  +
mov eax offset aError_trans_24 +
jmp loc_10266EC  +
mov eax offset aError_trans_25 +
jmp loc_10266EC  +
mov eax offset aError_cannot_e +
jmp loc_10266EC  +
mov eax offset aError_trans_26 +
jmp loc_10266EC  +
mov eax offset aError_trans_27 +
jmp loc_10266EC  +
mov eax offset aError_not_snap +
jmp loc_10266EC  +
mov eax offset aError_no_savep +
jmp loc_10266EC  +
mov eax offset aError_data_los +
jmp loc_10266EC  +
mov eax offset aError_sparse_n +
jmp loc_10266EC  +
mov eax offset aError_tm_ident +
jmp loc_10266EC  +
mov eax offset aError_floated_ +
jmp loc_10266EC  +
mov eax offset aError_cannot_a +
jmp loc_10266EC  +
mov eax offset aError_cannot_1 +
jmp loc_10266EC  +
mov eax offset aError_bad_clus +
jmp loc_10266EC  +
mov eax offset aError_compre_0 +
jmp loc_10266EC  +
mov eax offset aError_volume_d +
jmp loc_10266EC  +
mov eax offset aError_no_link_ +
jmp loc_10266EC  +
mov eax offset aError_operat_0 +
jmp loc_10266EC  +
mov eax offset aError_expired_ +
jmp loc_10266EC  +
mov eax offset aError_ctx_wins +
jmp loc_10266EC  +
mov ecx 80072008h +
cmp eax ecx +
jg loc_1024ABE  +
jz loc_1024AB4  +
add eax 7FF8E4A6h +
cmp eax 43h +
ja loc_10266CB  +
jmp ds:off_1029038[eax*4]  +
mov eax offset aError_ctx_inva +
jmp loc_10266EC  +
mov eax offset aError_ctx_pd_n +
jmp loc_10266EC  +
mov eax offset aError_ctx_wd_n +
jmp loc_10266EC  +
mov eax offset aError_ctx_cann +
jmp loc_10266EC  +
mov eax offset aError_ctx_serv +
jmp loc_10266EC  +
mov eax offset aError_ctx_clos +
jmp loc_10266EC  +
mov eax offset aError_ctx_no_o +
jmp loc_10266EC  +
mov eax offset aError_ctx_mode +
jmp loc_10266EC  +
mov eax offset aError_ctx_in_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_mo_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_mo_1 +
jmp loc_10266EC  +
mov eax offset aError_ctx_mo_2 +
jmp loc_10266EC  +
mov eax offset aError_ctx_mo_3 +
jmp loc_10266EC  +
mov eax offset aError_ctx_mo_4 +
jmp loc_10266EC  +
mov eax offset aError_ctx_mo_5 +
jmp loc_10266EC  +
mov eax offset aError_ctx_td_e +
jmp loc_10266EC  +
mov eax offset aError_ctx_wi_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_wi_1 +
jmp loc_10266EC  +
mov eax offset aError_ctx_wi_2 +
jmp loc_10266EC  +
mov eax offset aError_ctx_bad_ +
jmp loc_10266EC  +
mov eax offset aError_ctx_grap +
jmp loc_10266EC  +
mov eax offset aError_ctx_logo +
jmp loc_10266EC  +
mov eax offset aError_ctx_not_ +
jmp loc_10266EC  +
mov eax offset aError_ctx_clie +
jmp loc_10266EC  +
mov eax offset aError_ctx_cons +
jmp loc_10266EC  +
mov eax offset aError_ctx_co_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_shad +
jmp loc_10266EC  +
mov eax offset aError_ctx_wi_3 +
jmp loc_10266EC  +
mov eax offset aError_ctx_in_1 +
jmp loc_10266EC  +
mov eax offset aError_ctx_sh_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_sh_1 +
jmp loc_10266EC  +
mov eax offset aError_ctx_cl_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_cl_1 +
jmp loc_10266EC  +
mov eax offset aError_ctx_lice +
jmp loc_10266EC  +
mov eax offset aError_ctx_li_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_li_1 +
jmp loc_10266EC  +
mov eax offset aError_ctx_sh_2 +
jmp loc_10266EC  +
mov eax offset aError_ctx_sh_3 +
jmp loc_10266EC  +
mov eax offset aError_activati +
jmp loc_10266EC  +
mov eax offset aError_ctx_wi_4 +
jmp loc_10266EC  +
mov eax offset aError_ctx_encr +
jmp loc_10266EC  +
mov eax offset aError_ctx_sess +
jmp loc_10266EC  +
mov eax offset aError_ctx_no_f +
jmp loc_10266EC  +
mov eax offset aError_ctx_acco +
jmp loc_10266EC  +
mov eax offset aError_rdp_prot +
jmp loc_10266EC  +
mov eax offset aError_ctx_cdm_ +
jmp loc_10266EC  +
mov eax offset aError_ctx_cd_0 +
jmp loc_10266EC  +
mov eax offset aError_ctx_secu +
jmp loc_10266EC  +
mov eax offset aError_ts_incom +
jmp loc_10266EC  +
mov eax offset aError_ds_not_i +
jmp loc_10266EC  +
mov ecx 800732C8h +
cmp eax ecx +
jg loc_1025A4C  +
jz loc_1025A42  +
add eax 7FF8DFF7h +
cmp eax 1B0h +
ja loc_10266CB  +
jmp ds:off_1029148[eax*4]  +
mov eax offset aError_ds_membe +
jmp loc_10266EC  +
mov eax offset aError_ds_no_at +
jmp loc_10266EC  +
mov eax offset aError_ds_inval +
jmp loc_10266EC  +
mov eax offset aError_ds_attri +
jmp loc_10266EC  +
mov eax offset aError_ds_att_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_busy +
jmp loc_10266EC  +
mov eax offset aError_ds_unava +
jmp loc_10266EC  +
mov eax offset aError_ds_no_ri +
jmp loc_10266EC  +
mov eax offset aError_ds_no_mo +
jmp loc_10266EC  +
mov eax offset aError_ds_incor +
jmp loc_10266EC  +
mov eax offset aError_ds_ridmg +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_c +
jmp loc_10266EC  +
mov eax offset aError_ds_cant_ +
jmp loc_10266EC  +
mov eax offset aError_ds_can_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_can_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_cross +
jmp loc_10266EC  +
mov eax offset aError_ds_gc_no +
jmp loc_10266EC  +
mov eax offset aError_shared_p +
jmp loc_10266EC  +
mov eax offset aError_policy_o +
jmp loc_10266EC  +
mov eax offset aError_policy_0 +
jmp loc_10266EC  +
mov eax offset aError_promotio +
jmp loc_10266EC  +
mov eax offset aError_no_promo +
jmp loc_10266EC  +
mov eax offset aError_ds_opera +
jmp loc_10266EC  +
mov eax offset aError_ds_proto +
jmp loc_10266EC  +
mov eax offset aError_ds_timel +
jmp loc_10266EC  +
mov eax offset aError_ds_sizel +
jmp loc_10266EC  +
mov eax offset aError_ds_admin +
jmp loc_10266EC  +
mov eax offset aError_ds_compa +
jmp loc_10266EC  +
mov eax offset aError_ds_com_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_auth_ +
jmp loc_10266EC  +
mov eax offset aError_ds_stron +
jmp loc_10266EC  +
mov eax offset aError_ds_inapp +
jmp loc_10266EC  +
mov eax offset aError_ds_aut_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_refer +
jmp loc_10266EC  +
mov eax offset aError_ds_una_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_confi +
jmp loc_10266EC  +
mov eax offset aError_ds_ina_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_const +
jmp loc_10266EC  +
mov eax offset aError_ds_no_su +
jmp loc_10266EC  +
mov eax offset aError_ds_alias +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_is_le +
jmp loc_10266EC  +
mov eax offset aError_ds_ali_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_unwil +
jmp loc_10266EC  +
mov eax offset aError_ds_loop_ +
jmp loc_10266EC  +
mov eax offset aError_ds_namin +
jmp loc_10266EC  +
mov eax offset aError_ds_objec +
jmp loc_10266EC  +
mov eax offset aError_ds_affec +
jmp loc_10266EC  +
mov eax offset aError_ds_serve +
jmp loc_10266EC  +
mov eax offset aError_ds_local +
jmp loc_10266EC  +
mov eax offset aError_ds_encod +
jmp loc_10266EC  +
mov eax offset aError_ds_decod +
jmp loc_10266EC  +
mov eax offset aError_ds_filte +
jmp loc_10266EC  +
mov eax offset aError_ds_param +
jmp loc_10266EC  +
mov eax offset aError_ds_not_s +
jmp loc_10266EC  +
mov eax offset aError_ds_no_re +
jmp loc_10266EC  +
mov eax offset aError_ds_contr +
jmp loc_10266EC  +
mov eax offset aError_ds_clien +
jmp loc_10266EC  +
mov eax offset aError_ds_ref_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_sort_ +
jmp loc_10266EC  +
mov eax offset aError_ds_offse +
jmp loc_10266EC  +
mov eax offset aError_ds_root_ +
jmp loc_10266EC  +
mov eax offset aError_ds_add_r +
jmp loc_10266EC  +
mov eax offset aError_ds_att_n +
jmp loc_10266EC  +
mov eax offset aError_ds_max_o +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_s +
jmp loc_10266EC  +
mov eax offset aError_ds_no_rd +
jmp loc_10266EC  +
mov eax offset aError_ds_rdn_d +
jmp loc_10266EC  +
mov eax offset aError_ds_no__0 +
jmp loc_10266EC  +
mov eax offset aError_ds_user_ +
jmp loc_10266EC  +
mov eax offset aError_ds_att_i +
jmp loc_10266EC  +
mov eax offset aError_ds_illeg +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_t +
jmp loc_10266EC  +
mov eax offset aError_ds_bad_i +
jmp loc_10266EC  +
mov eax offset aError_ds_maste +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_missi +
jmp loc_10266EC  +
mov eax offset aError_ds_att_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_att_a +
jmp loc_10266EC  +
mov eax offset aError_ds_can_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_singl +
jmp loc_10266EC  +
mov eax offset aError_ds_range +
jmp loc_10266EC  +
mov eax offset aError_ds_att_v +
jmp loc_10266EC  +
mov eax offset aError_ds_can_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_can_4 +
jmp loc_10266EC  +
mov eax offset aError_ds_roo_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_no_ch +
jmp loc_10266EC  +
mov eax offset aError_ds_no__1 +
jmp loc_10266EC  +
mov eax offset aError_ds_no_pa +
jmp loc_10266EC  +
mov eax offset aError_ds_paren +
jmp loc_10266EC  +
mov eax offset aError_ds_can_5 +
jmp loc_10266EC  +
mov eax offset aError_ds_child +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_n +
jmp loc_10266EC  +
mov eax offset aError_ds_ali_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_bad_n +
jmp loc_10266EC  +
mov eax offset aError_ds_ali_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_can_6 +
jmp loc_10266EC  +
mov eax offset aError_ds_out_o +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_can_7 +
jmp loc_10266EC  +
mov eax offset aError_ds_gener +
jmp loc_10266EC  +
mov eax offset aError_ds_dsa_m +
jmp loc_10266EC  +
mov eax offset aError_ds_class +
jmp loc_10266EC  +
mov eax offset aError_ds_insuf +
jmp loc_10266EC  +
mov eax offset aError_ds_ill_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_att_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_name_ +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_not_a +
jmp loc_10266EC  +
mov eax offset aError_ds_sec_d +
jmp loc_10266EC  +
mov eax offset aError_ds_sec_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_no_de +
jmp loc_10266EC  +
mov eax offset aError_ds_subre +
jmp loc_10266EC  +
mov eax offset aError_ds_ncnam +
jmp loc_10266EC  +
mov eax offset aError_ds_can_8 +
jmp loc_10266EC  +
mov eax offset aError_ds_cla_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_g +
jmp loc_10266EC  +
mov eax offset aError_ds_not_o +
jmp loc_10266EC  +
mov eax offset aError_ds_no_cr +
jmp loc_10266EC  +
mov eax offset aError_ds_shutt +
jmp loc_10266EC  +
mov eax offset aError_ds_unkno +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_could +
jmp loc_10266EC  +
mov eax offset aError_ds_cro_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_can_9 +
jmp loc_10266EC  +
mov eax offset aError_ds_repli +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_obj_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_4 +
jmp loc_10266EC  +
mov eax offset aError_ds_cro_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_10 +
jmp loc_10266EC  +
mov eax offset aError_ds_subtr +
jmp loc_10266EC  +
mov eax offset aError_ds_notif +
jmp loc_10266EC  +
mov eax offset aError_ds_dup_r +
jmp loc_10266EC  +
mov eax offset aError_ds_dup_o +
jmp loc_10266EC  +
mov eax offset aError_ds_dup_m +
jmp loc_10266EC  +
mov eax offset aError_ds_dup_s +
jmp loc_10266EC  +
mov eax offset aError_ds_dup_l +
jmp loc_10266EC  +
mov eax offset aError_ds_seman +
jmp loc_10266EC  +
mov eax offset aError_ds_synta +
jmp loc_10266EC  +
mov eax offset aError_ds_exist +
jmp loc_10266EC  +
mov eax offset aError_ds_exi_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_nonex +
jmp loc_10266EC  +
mov eax offset aError_ds_non_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_aux_c +
jmp loc_10266EC  +
mov eax offset aError_ds_non_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_sub_c +
jmp loc_10266EC  +
mov eax offset aError_ds_bad_r +
jmp loc_10266EC  +
mov eax offset aError_ds_exi_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_exi_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_exi_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_recal +
jmp loc_10266EC  +
mov eax offset aError_ds_tree_ +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_11 +
jmp loc_10266EC  +
mov eax offset aError_ds_att_s +
jmp loc_10266EC  +
mov eax offset aError_ds_bad_a +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_12 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_13 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_14 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_15 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_16 +
jmp loc_10266EC  +
mov eax offset aError_ds_mis_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_17 +
jmp loc_10266EC  +
mov eax offset aError_ds_code_ +
jmp loc_10266EC  +
mov eax offset aError_ds_datab +
jmp loc_10266EC  +
mov eax offset aError_ds_gover +
jmp loc_10266EC  +
mov eax offset aError_ds_mis_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_ncn_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_secur +
jmp loc_10266EC  +
mov eax offset aError_ds_schem +
jmp loc_10266EC  +
mov eax offset aError_ds_sch_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_att_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_gcver +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_s +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_18 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_19 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_20 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_21 +
jmp loc_10266EC  +
mov eax offset aError_ds_sec_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_22 +
jmp loc_10266EC  +
mov eax offset aError_ds_bad_h +
jmp loc_10266EC  +
mov eax offset aError_ds_build +
jmp loc_10266EC  +
mov eax offset aError_ds_con_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_count +
jmp loc_10266EC  +
mov eax offset aError_ds_hiera +
jmp loc_10266EC  +
mov eax offset aError_ds_inter +
jmp loc_10266EC  +
mov eax offset aError_ds_unk_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_roo_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_refus +
jmp loc_10266EC  +
mov eax offset aError_ds_mis_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_unabl +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_g +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_i +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_b +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_d +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_c +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_4 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_o +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_m +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_r +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_5 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_6 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_7 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_n +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_a +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_8 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_9 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_10 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_11 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_12 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_13 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_14 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_p +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_15 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_16 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_17 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_18 +
jmp loc_10266EC  +
mov eax offset aError_ds_dra_e +
jmp loc_10266EC  +
mov eax offset aError_ds_insta +
jmp loc_10266EC  +
mov eax offset aError_ds_dup_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_5 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_6 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_7 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_8 +
jmp loc_10266EC  +
mov eax offset aError_ds_nam_9 +
jmp loc_10266EC  +
mov eax offset aError_ds_na_10 +
jmp loc_10266EC  +
mov eax offset aError_ds_con_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_wrong +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_19 +
jmp loc_10266EC  +
mov eax offset aError_ds_ds_re +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_non_b +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_23 +
jmp loc_10266EC  +
mov eax offset aError_ds_backl +
jmp loc_10266EC  +
mov eax offset aError_ds_epoch +
jmp loc_10266EC  +
mov eax offset aError_ds_src_n +
jmp loc_10266EC  +
mov eax offset aError_ds_src_a +
jmp loc_10266EC  +
mov eax offset aError_ds_dst_n +
jmp loc_10266EC  +
mov eax offset aError_ds_not_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_src_g +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_24 +
jmp loc_10266EC  +
mov eax offset aError_ds_pdc_o +
jmp loc_10266EC  +
mov eax offset aError_ds_cro_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_ill_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_25 +
jmp loc_10266EC  +
mov eax offset aError_ds_nc_mu +
jmp loc_10266EC  +
mov eax offset aError_ds_cr_im +
jmp loc_10266EC  +
mov eax offset aError_ds_dst_d +
jmp loc_10266EC  +
mov eax offset aError_ds_mis_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_26 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_27 +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_4 +
jmp loc_10266EC  +
mov eax offset aError_ds_no_tr +
jmp loc_10266EC  +
mov eax offset aError_ds_cou_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_cou_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_sam_i +
jmp loc_10266EC  +
mov eax offset aError_ds_sensi +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_28 +
jmp loc_10266EC  +
mov eax offset aError_ds_ill_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_nonsa +
jmp loc_10266EC  +
mov eax offset aError_ds_sch_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_29 +
jmp loc_10266EC  +
mov eax offset aError_ds_ins_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_ins_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_5 +
jmp loc_10266EC  +
mov eax offset aError_ds_no_ne +
jmp loc_10266EC  +
mov eax offset aError_ds_no__2 +
jmp loc_10266EC  +
mov eax offset aError_ds_globa +
jmp loc_10266EC  +
mov eax offset aError_ds_glo_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_unive +
jmp loc_10266EC  +
mov eax offset aError_ds_glo_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_loc_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_have_ +
jmp loc_10266EC  +
mov eax offset aError_ds_strin +
jmp loc_10266EC  +
mov eax offset aError_ds_na_11 +
jmp loc_10266EC  +
mov eax offset aError_ds_dns_l +
jmp loc_10266EC  +
mov eax offset aError_ds_cou_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_30 +
jmp loc_10266EC  +
mov eax offset aError_ds_key_n +
jmp loc_10266EC  +
mov eax offset aError_ds_wro_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_sam_n +
jmp loc_10266EC  +
mov eax offset aError_ds_sam_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_31 +
jmp loc_10266EC  +
mov eax offset aError_ds_init_ +
jmp loc_10266EC  +
mov eax offset aError_ds_no_pk +
jmp loc_10266EC  +
mov eax offset aError_ds_sourc +
jmp loc_10266EC  +
mov eax offset aError_ds_desti +
jmp loc_10266EC  +
mov eax offset aError_ds_des_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_32 +
jmp loc_10266EC  +
mov eax offset aError_ds_src_o +
jmp loc_10266EC  +
mov eax offset aError_ds_src_s +
jmp loc_10266EC  +
mov eax offset aError_ds_src_0 +
jmp loc_10266EC  +
mov eax offset aError_sam_init +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_20 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_21 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_22 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_23 +
jmp loc_10266EC  +
mov eax offset aError_ds_nc_st +
jmp loc_10266EC  +
mov eax offset aError_ds_gc_re +
jmp loc_10266EC  +
mov eax offset aError_ds_loc_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_no_fp +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_33 +
jmp loc_10266EC  +
mov eax offset aError_ds_no__3 +
jmp loc_10266EC  +
mov eax offset aError_ds_sou_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_34 +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_6 +
jmp loc_10266EC  +
mov eax offset aError_ds_fil_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_unico +
jmp loc_10266EC  +
mov eax offset aError_ds_machi +
jmp loc_10266EC  +
mov eax offset aError_ds_must_ +
jmp loc_10266EC  +
mov eax offset aError_ds_src_d +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_35 +
jmp loc_10266EC  +
mov eax offset aError_ds_ini_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_sam_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_fores +
jmp loc_10266EC  +
mov eax offset aError_ds_domai +
jmp loc_10266EC  +
mov eax offset aError_ds_for_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_dom_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_incom +
jmp loc_10266EC  +
mov eax offset aError_ds_low_d +
jmp loc_10266EC  +
mov eax offset aError_ds_no_be +
jmp loc_10266EC  +
mov eax offset aError_ds_not_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_na_12 +
jmp loc_10266EC  +
mov eax offset aError_ds_mac_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_out_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_inc_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_no__4 +
jmp loc_10266EC  +
mov eax offset aError_ds_reser +
jmp loc_10266EC  +
mov eax offset aError_ds_link_ +
jmp loc_10266EC  +
mov eax offset aError_ds_ag_ca +
jmp loc_10266EC  +
mov eax offset aError_ds_modif +
jmp loc_10266EC  +
mov eax offset aError_ds_no_ob +
jmp loc_10266EC  +
mov eax offset aError_ds_mod_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_mod_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_na_13 +
jmp loc_10266EC  +
mov eax offset aError_not_su_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_36 +
jmp loc_10266EC  +
mov eax offset aError_ds_cr__0 +
jmp loc_10266EC  +
mov eax offset aError_ds_threa +
jmp loc_10266EC  +
mov eax offset aError_ds_not_c +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_37 +
jmp loc_10266EC  +
mov eax offset aError_ds_sin_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_ntdsc +
jmp loc_10266EC  +
mov eax offset aError_ds_ntd_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_diffe +
jmp loc_10266EC  +
mov eax offset aError_ds_drs_e +
jmp loc_10266EC  +
mov eax offset aError_ds_rep_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_no_ms +
jmp loc_10266EC  +
mov eax offset aError_ds_dup_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_exi_4 +
jmp loc_10266EC  +
mov eax offset aError_ds_autho +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_7 +
jmp loc_10266EC  +
mov eax offset aError_ds_remot +
jmp loc_10266EC  +
mov eax offset aError_ds_cro_3 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_38 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_39 +
jmp loc_10266EC  +
mov eax offset aError_ds_dupli +
jmp loc_10266EC  +
mov eax offset aError_ds_ins_2 +
jmp loc_10266EC  +
mov eax offset aError_ds_group +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_40 +
jmp loc_10266EC  +
mov eax offset aError_ds_ca_41 +
jmp loc_10266EC  +
mov eax offset aError_ds_role_ +
jmp loc_10266EC  +
mov eax offset aError_ds_wko_c +
jmp loc_10266EC  +
mov eax offset aError_ds_dom_1 +
jmp loc_10266EC  +
mov eax offset aError_ds_exi_5 +
jmp loc_10266EC  +
mov eax offset aError_ds_repl_ +
jmp loc_10266EC  +
mov eax offset aError_ds_disal +
jmp loc_10266EC  +
mov eax offset aError_ds_ldap_ +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_24 +
jmp loc_10266EC  +
mov eax offset aError_ds_polic +
jmp loc_10266EC  +
mov eax offset aError_no_site_ +
jmp loc_10266EC  +
mov eax offset aError_no_secre +
jmp loc_10266EC  +
mov eax offset aError_no_writa +
jmp loc_10266EC  +
mov eax offset aError_ds_no_se +
jmp loc_10266EC  +
mov eax offset aError_ds_no_nt +
jmp loc_10266EC  +
mov eax offset aError_ds_non_a +
jmp loc_10266EC  +
mov eax offset aError_ds_audit +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_8 +
jmp loc_10266EC  +
mov eax offset aError_ds_inv_9 +
jmp loc_10266EC  +
mov eax offset aError_ds_hie_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_25 +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_26 +
jmp loc_10266EC  +
mov eax offset aError_ds_res_0 +
jmp loc_10266EC  +
mov eax offset aError_ds_mapi_ +
jmp loc_10266EC  +
mov eax offset aError_ds_dr_27 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_qm +
jmp loc_10266EC  +
mov ecx 800735E8h +
cmp eax ecx +
jg loc_1025B64  +
jz loc_1025B5A  +
add eax 7FF8CD37h +
cmp eax 16h +
ja loc_10266CB  +
jmp ds:off_102980C[eax*4]  +
mov eax offset aError_ipsec__0 +
jmp loc_10266EC  +
mov eax offset aError_ipsec__1 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_mm +
jmp loc_10266EC  +
mov eax offset aError_ipsec__2 +
jmp loc_10266EC  +
mov eax offset aError_ipsec__3 +
jmp loc_10266EC  +
mov eax offset aError_ipsec__4 +
jmp loc_10266EC  +
mov eax offset aError_ipsec__5 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_tr +
jmp loc_10266EC  +
mov eax offset aError_ipsec__6 +
jmp loc_10266EC  +
mov eax offset aError_ipsec__7 +
jmp loc_10266EC  +
mov eax offset aError_ipsec__8 +
jmp loc_10266EC  +
mov eax offset aError_ipsec__9 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_de +
jmp loc_10266EC  +
mov eax offset aError_ipsec_10 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_11 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_tu +
jmp loc_10266EC  +
mov eax offset aError_ipsec_12 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_13 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_14 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_15 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_16 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_17 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_18 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_ik +
jmp loc_10266EC  +
mov ecx 80073A98h +
cmp eax ecx +
jg loc_1026419  +
jz loc_102640F  +
add eax 7FF8CA17h +
cmp eax 135h +
ja loc_10266CB  +
movzx eax ds:byte_1029BD0[eax] +
jmp ds:off_1029868[eax*4]  +
mov eax offset aError_ipsec_19 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_20 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_21 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_22 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_23 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_24 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_25 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_26 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_27 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_28 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_29 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_30 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_31 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_32 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_33 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_34 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_35 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_36 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_37 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_38 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_39 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_40 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_41 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_42 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_43 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_44 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_45 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_46 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_47 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_48 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_49 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_50 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_51 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_52 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_53 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_54 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_55 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_56 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_57 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_58 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_59 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_60 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_61 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_62 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_63 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_64 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_65 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_66 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_67 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_68 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_69 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_70 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_71 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_72 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_73 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_74 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_75 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_76 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_77 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_78 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_79 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_80 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_81 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_82 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_83 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_84 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_85 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_86 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_87 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_88 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_89 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_90 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_91 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_92 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_93 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_94 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_95 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_96 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_97 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_98 +
jmp loc_10266EC  +
mov eax offset asc_1006FC4 +
jmp loc_10266EC  +
mov eax offset asc_1006FA8 +
jmp loc_10266EC  +
mov eax offset asc_1006F80 +
jmp loc_10266EC  +
mov eax offset asc_1006F64 +
jmp loc_10266EC  +
mov eax offset asc_1006F48 +
jmp loc_10266EC  +
mov eax offset asc_1006F20 +
jmp loc_10266EC  +
mov eax offset asc_1006EF4 +
jmp loc_10266EC  +
mov eax offset asc_1006ECC +
jmp loc_10266EC  +
mov eax offset asc_1006EA4 +
jmp loc_10266EC  +
mov eax offset asc_1006E84 +
jmp loc_10266EC  +
mov eax offset asc_1006E64 +
jmp loc_10266EC  +
mov eax offset asc_1006E44 +
jmp loc_10266EC  +
mov eax offset asc_1006E20 +
jmp loc_10266EC  +
mov eax offset asc_1006DFC +
jmp loc_10266EC  +
mov eax offset asc_1006DE0 +
jmp loc_10266EC  +
mov eax offset asc_1006DBC +
jmp loc_10266EC  +
mov eax offset asc_1006D9C +
jmp loc_10266EC  +
mov eax offset asc_1006D74 +
jmp loc_10266EC  +
mov eax offset asc_1006D4C +
jmp loc_10266EC  +
mov eax offset aError_ipsec_ba +
jmp loc_10266EC  +
mov eax offset aError_ipsec_sa +
jmp loc_10266EC  +
mov eax offset aError_ipsec_wr +
jmp loc_10266EC  +
mov eax offset aError_ipsec_re +
jmp loc_10266EC  +
mov eax offset aError_ipsec_in +
jmp loc_10266EC  +
mov eax offset asc_1006CA0 +
jmp loc_10266EC  +
mov eax offset aError_ipsec_cl +
jmp loc_10266EC  +
mov eax offset aError_sxs_sect +
jmp loc_10266EC  +
mov eax offset aError_sxs_cant +
jmp loc_10266EC  +
mov eax offset aError_sxs_inva +
jmp loc_10266EC  +
mov eax offset aError_sxs_asse +
jmp loc_10266EC  +
mov eax offset aError_sxs_mani +
jmp loc_10266EC  +
mov eax offset aError_sxs_ma_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_acti +
jmp loc_10266EC  +
mov eax offset aError_sxs_key_ +
jmp loc_10266EC  +
mov eax offset aError_sxs_vers +
jmp loc_10266EC  +
mov eax offset aError_sxs_wron +
jmp loc_10266EC  +
mov eax offset aError_sxs_thre +
jmp loc_10266EC  +
mov eax offset aError_sxs_proc +
jmp loc_10266EC  +
mov eax offset aError_sxs_unkn +
jmp loc_10266EC  +
mov eax offset aError_sxs_un_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_in_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_root +
jmp loc_10266EC  +
mov eax offset aError_sxs_leaf +
jmp loc_10266EC  +
mov eax offset aError_sxs_in_1 +
jmp loc_10266EC  +
mov eax offset aError_sxs_ma_1 +
jmp loc_10266EC  +
mov eax offset aError_sxs_ma_2 +
jmp loc_10266EC  +
mov eax offset aError_sxs_priv +
jmp loc_10266EC  +
mov eax offset aError_sxs_dupl +
jmp loc_10266EC  +
mov eax offset aError_sxs_du_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_du_1 +
jmp loc_10266EC  +
mov eax offset aError_sxs_du_2 +
jmp loc_10266EC  +
mov eax offset aError_sxs_du_3 +
jmp loc_10266EC  +
mov eax offset aError_sxs_du_4 +
jmp loc_10266EC  +
mov eax offset aError_sxs_du_5 +
jmp loc_10266EC  +
mov eax offset aError_sxs_file +
jmp loc_10266EC  +
mov eax offset aError_sxs_poli +
jmp loc_10266EC  +
mov eax offset aError_sxs_xml_ +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_1 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_2 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_3 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_4 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_5 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_6 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_7 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_8 +
jmp loc_10266EC  +
mov eax offset aError_sxs_xm_9 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_10 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_11 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_12 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_13 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_14 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_15 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_16 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_17 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_18 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_19 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_20 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_21 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_22 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_23 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_24 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_25 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_26 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_27 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_28 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_29 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_30 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_31 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_32 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_33 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_34 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_35 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_36 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_37 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_38 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_39 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_40 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_41 +
jmp loc_10266EC  +
mov eax offset aError_sxs_x_42 +
jmp loc_10266EC  +
mov eax offset aError_sxs_prot +
jmp loc_10266EC  +
mov eax offset aError_sxs_pr_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_pr_1 +
jmp loc_10266EC  +
mov eax offset aError_sxs_untr +
jmp loc_10266EC  +
mov eax offset aError_sxs_pr_2 +
jmp loc_10266EC  +
mov eax offset aError_sxs_miss +
jmp loc_10266EC  +
mov eax offset aError_sxs_in_2 +
jmp loc_10266EC  +
mov eax offset aError_sxs_as_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_corr +
jmp loc_10266EC  +
mov eax offset aError_sxs_co_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_earl +
jmp loc_10266EC  +
mov eax offset aError_sxs_in_3 +
jmp loc_10266EC  +
mov eax offset aError_sxs_mult +
jmp loc_10266EC  +
mov eax offset aError_sxs_pr_3 +
jmp loc_10266EC  +
mov eax offset aError_sxs_rele +
jmp loc_10266EC  +
mov eax offset aError_sxs_syst +
jmp loc_10266EC  +
mov eax offset aError_sxs_in_4 +
jmp loc_10266EC  +
mov eax offset aError_sxs_in_5 +
jmp loc_10266EC  +
mov eax offset aError_sxs_iden +
jmp loc_10266EC  +
mov eax offset aError_sxs_id_0 +
jmp loc_10266EC  +
mov eax offset aError_malforme +
jmp loc_10266EC  +
mov eax offset aError_sxs_inco +
jmp loc_10266EC  +
mov eax offset aError_unmapped +
jmp loc_10266EC  +
mov eax offset aError_sxs_as_1 +
jmp loc_10266EC  +
mov eax offset aError_sxs_comp +
jmp loc_10266EC  +
mov eax offset aError_advanced +
jmp loc_10266EC  +
mov eax offset aError_xml_enco +
jmp loc_10266EC  +
mov eax offset aError_sxs_ma_3 +
jmp loc_10266EC  +
mov eax offset aError_sxs_id_1 +
jmp loc_10266EC  +
mov eax offset aError_sxs_as_2 +
jmp loc_10266EC  +
mov eax offset aError_sxs_fi_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_ma_4 +
jmp loc_10266EC  +
mov eax offset aError_sxs_sett +
jmp loc_10266EC  +
mov eax offset aError_sxs_tran +
jmp loc_10266EC  +
mov eax offset aError_smi_prim +
jmp loc_10266EC  +
mov eax offset aError_generi_0 +
jmp loc_10266EC  +
mov eax offset aError_sxs_fi_1 +
jmp loc_10266EC  +
mov eax offset aError_evt_inva +
jmp loc_10266EC  +
mov ecx 80073B60h +
cmp eax ecx +
jg loc_102665A  +
jz loc_1026650  +
add eax 7FF8C567h +
cmp eax 6Bh +
ja loc_10266CB  +
movzx eax ds:byte_1029DDC[eax] +
jmp ds:off_1029D08[eax*4]  +
mov eax offset aError_evt_in_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_publ +
jmp loc_10266EC  +
mov eax offset aError_evt_even +
jmp loc_10266EC  +
mov eax offset aError_evt_in_1 +
jmp loc_10266EC  +
mov eax offset aError_evt_in_2 +
jmp loc_10266EC  +
mov eax offset aError_evt_chan +
jmp loc_10266EC  +
mov eax offset aError_evt_malf +
jmp loc_10266EC  +
mov eax offset aError_evt_subs +
jmp loc_10266EC  +
mov eax offset aError_evt_conf +
jmp loc_10266EC  +
mov eax offset aError_evt_quer +
jmp loc_10266EC  +
mov eax offset aError_evt_qu_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_non_ +
jmp loc_10266EC  +
mov eax offset aError_evt_filt +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_1 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_2 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_3 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_4 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_5 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_6 +
jmp loc_10266EC  +
mov eax offset aError_evt_in_3 +
jmp loc_10266EC  +
mov eax offset aError_evt_in_4 +
jmp loc_10266EC  +
mov eax offset aError_evt_in_5 +
jmp loc_10266EC  +
mov eax offset aError_evt_ch_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_7 +
jmp loc_10266EC  +
mov eax offset aError_evt_mess +
jmp loc_10266EC  +
mov eax offset aError_evt_me_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_unre +
jmp loc_10266EC  +
mov eax offset aError_evt_un_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_max_ +
jmp loc_10266EC  +
mov eax offset aError_evt_ev_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_me_1 +
jmp loc_10266EC  +
mov eax offset aError_evt_vers +
jmp loc_10266EC  +
mov eax offset aError_evt_ve_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_cann +
jmp loc_10266EC  +
mov eax offset aError_evt_pu_0 +
jmp loc_10266EC  +
mov eax offset aError_evt_fi_8 +
jmp loc_10266EC  +
mov eax offset aError_ec_subsc +
jmp loc_10266EC  +
mov eax offset aError_ec_log_d +
jmp loc_10266EC  +
mov eax offset aError_ec_circu +
jmp loc_10266EC  +
mov eax offset aError_ec_creds +
jmp loc_10266EC  +
mov eax offset aError_ec_cred_ +
jmp loc_10266EC  +
mov eax offset aError_ec_no_ac +
jmp loc_10266EC  +
mov eax offset aError_mui_file +
jmp loc_10266EC  +
mov eax offset aError_mui_inva +
jmp loc_10266EC  +
mov eax offset aError_mui_in_0 +
jmp loc_10266EC  +
mov eax offset aError_mui_in_1 +
jmp loc_10266EC  +
mov eax offset aError_mui_in_2 +
jmp loc_10266EC  +
mov eax offset aError_mui_fi_0 +
jmp loc_10266EC  +
mov eax offset aError_resou_16 +
jmp loc_10266EC  +
mov eax offset aError_mui_intl +
jmp loc_10266EC  +
mov eax offset aError_mui_in_3 +
jmp loc_10266EC  +
mov eax offset aError_mca_inva +
jmp loc_10266EC  +
mov ecx 80073B66h +
cmp eax ecx +
jg loc_10266B2  +
jz loc_10266AB  +
cmp eax 80073B61h +
jz loc_10266A4  +
cmp eax 80073B62h +
jz loc_102669D  +
cmp eax 80073B63h +
jz loc_1026696  +
cmp eax 80073B64h +
jz loc_102668F  +
cmp eax 80073B65h +
jnz loc_10266CB  +
mov eax offset aError_mca_inte +
jmp loc_10266EC  +
mov eax offset aError_mca_unsu +
jmp loc_10266EC  +
mov eax offset aError_mca_mccs +
jmp loc_10266EC  +
mov eax offset aError_mca_moni +
jmp loc_10266EC  +
mov eax offset aError_mca_in_0 +
jmp loc_10266EC  +
mov eax offset aError_mca_in_1 +
jmp loc_10266EC  +
cmp eax 80073B67h +
jz loc_10266E7  +
cmp eax 80073B92h +
jz loc_10266E0  +
cmp eax 80073BC3h +
jz loc_10266D9  +
test eax eax +
jz loc_10266D2  +
mov eax offset aUnknownError +
jmp loc_10266EC  +
mov eax offset aError_success +
jmp loc_10266EC  +
mov eax offset aError_system_d +
jmp loc_10266EC  +
mov eax offset aError_ambiguou +
jmp loc_10266EC  +
mov eax offset aError_mca_un_0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 0C004B001h +
cmp eax ecx +
jg loc_1029EF5  +
jz loc_1029EEB  +
add eax 7FFB1EFFh +
cmp eax 0Ah +
ja loc_102A9CB  +
jmp ds:off_102A9D5[eax*4]  +
mov eax offset aSl_e_sfs_inval +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_inv_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_inv_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_bad_t +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_bad_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_dupli +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_token +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_inv_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_file_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_fil_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_sfs_inv_3 +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_inval +
jmp loc_102A9D0  +
mov ecx 0C004E01Ch +
cmp eax ecx +
jg loc_102A4F9  +
jz loc_102A4EF  +
mov ecx 0C004C756h +
cmp eax ecx +
jg loc_102A21B  +
jz loc_102A211  +
mov ecx 0C004C00Fh +
cmp eax ecx +
jg loc_102A0AE  +
jz loc_102A0A4  +
add ecx 0FFFFFFF4h +
cmp eax ecx +
jg loc_102A021  +
jz loc_102A017  +
mov ecx 0C004B008h +
cmp eax ecx +
jg loc_1029FBE  +
jz loc_1029FB4  +
cmp eax 0C004B002h +
jz loc_1029FAA  +
cmp eax 0C004B003h +
jz loc_1029FA0  +
cmp eax 0C004B004h +
jz loc_1029F96  +
cmp eax 0C004B005h +
jz loc_1029F8C  +
cmp eax 0C004B006h +
jz loc_1029F82  +
cmp eax 0C004B007h +
jnz loc_102A9CB  +
mov eax offset aSl_e_srv_serve +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_inv_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_autho +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_inv_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_inv_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_inv_3 +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_inv_4 +
jmp loc_102A9D0  +
cmp eax 0C004B009h +
jz loc_102A00D  +
cmp eax 0C004B011h +
jz loc_102A003  +
cmp eax 0C004B100h +
jz loc_1029FF9  +
cmp eax 0C004C001h +
jz loc_1029FEF  +
cmp eax 0C004C002h +
jnz loc_102A9CB  +
mov eax offset aSl_e_chpa_inva +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_prod +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_gener +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_clien +
jmp loc_102A9D0  +
mov eax offset aSl_e_srv_inv_5 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_pr_0 +
jmp loc_102A9D0  +
add eax 3FFB3FFCh +
cmp eax 0Ah +
ja loc_102A9CB  +
jmp ds:off_102AA01[eax*4]  +
mov eax offset aSl_e_chpa_in_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_bind +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_bi_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_unsu +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_maxi +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_actc +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_in_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_in_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_syst +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_in_3 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_in_4 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_in_5 +
jmp loc_102A9D0  +
mov ecx 0C004C04Fh +
cmp eax ecx +
jg loc_102A17D  +
jz loc_102A173  +
add eax 3FFB3FF0h +
cmp eax 23h +
ja loc_102A9CB  +
movzx eax ds:byte_102AA6D[eax] +
jmp ds:off_102AA2D[eax*4]  +
mov eax offset aSl_e_chpa_in_6 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_in_7 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_netw +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_data +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_in_8 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_dmak +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_dm_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_reis +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_over +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_oem_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_resp +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_time +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_ti_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_ti_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_ti_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_no_r +
jmp loc_102A9D0  +
mov ecx 0C004C750h +
cmp eax ecx +
jg loc_102A1DA  +
jz loc_102A1D0  +
cmp eax 0C004C050h +
jz loc_102A1C6  +
cmp eax 0C004C401h +
jz loc_102A1BC  +
cmp eax 0C004C600h +
jz loc_102A1B2  +
cmp eax 0C004C700h +
jnz loc_102A9CB  +
mov eax offset aSl_e_chpa_busi +
jmp loc_102A9D0  +
mov eax offset aSl_e_vga_non_g +
jmp loc_102A9D0  +
mov eax offset aSl_e_vga_non_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_gene +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_null +
jmp loc_102A9D0  +
cmp eax 0C004C751h +
jz loc_102A207  +
cmp eax 0C004C752h +
jz loc_102A1FD  +
cmp eax 0C004C755h +
jnz loc_102A9CB  +
mov eax offset aSl_e_chpa_fail +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_unkn +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_un_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_0 +
jmp loc_102A9D0  +
mov ecx 0C004E004h +
cmp eax ecx +
jg loc_102A3F4  +
jz loc_102A3EA  +
mov ecx 0C004C804h +
cmp eax ecx +
jg loc_102A323  +
jz loc_102A319  +
mov ecx 0C004C770h +
cmp eax ecx +
jg loc_102A2C0  +
jz loc_102A2B6  +
cmp eax 0C004C757h +
jz loc_102A2AC  +
cmp eax 0C004C758h +
jz loc_102A2A2  +
cmp eax 0C004C75Ah +
jz loc_102A298  +
cmp eax 0C004C75Bh +
jz loc_102A28E  +
cmp eax 0C004C75Ch +
jz loc_102A284  +
cmp eax 0C004C764h +
jnz loc_102A9CB  +
mov eax offset aSl_e_chpa_un_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_3 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_4 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_5 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_pr_1 +
jmp loc_102A9D0  +
cmp eax 0C004C780h +
jz loc_102A30F  +
cmp eax 0C004C781h +
jz loc_102A305  +
cmp eax 0C004C801h +
jz loc_102A2FB  +
cmp eax 0C004C802h +
jz loc_102A2F1  +
cmp eax 0C004C803h +
jnz loc_102A9CB  +
mov eax offset aSl_e_chref_pro +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_exc +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_inv +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_6 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chpa_fa_7 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_i_0 +
jmp loc_102A9D0  +
mov ecx 0C004C814h +
cmp eax ecx +
jg loc_102A391  +
jz loc_102A387  +
cmp eax 0C004C805h +
jz loc_102A37D  +
cmp eax 0C004C810h +
jz loc_102A373  +
cmp eax 0C004C811h +
jz loc_102A369  +
cmp eax 0C004C812h +
jz loc_102A35F  +
cmp eax 0C004C813h +
jnz loc_102A9CB  +
mov eax offset aSl_e_chref_p_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_bin +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_can +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_i_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_i_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_p_1 +
jmp loc_102A9D0  +
cmp eax 0C004C815h +
jz loc_102A3E0  +
cmp eax 0C004C816h +
jz loc_102A3D6  +
cmp eax 0C004E001h +
jz loc_102A3CC  +
cmp eax 0C004E002h +
jz loc_102A3C2  +
cmp eax 0C004E003h +
jnz loc_102A9CB  +
mov eax offset aSl_e_evaluatio +
jmp loc_102A9D0  +
mov eax offset aSl_e_token_sto +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_c +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_oem +
jmp loc_102A9D0  +
mov eax offset aSl_e_chref_p_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_not_evalu +
jmp loc_102A9D0  +
add eax 3FFB1FFBh +
cmp eax 16h +
ja loc_102A9CB  +
jmp ds:off_102AA91[eax*4]  +
mov eax offset aSl_e_not_activ +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_g +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto_to +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto_no +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto_al +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto_ca +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__3 +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__4 +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto_pr +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto_in +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__5 +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__6 +
jmp loc_102A9D0  +
mov eax offset aSl_e_toksto__7 +
jmp loc_102A9D0  +
mov eax offset aSl_e_eul_consu +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_inva +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_in_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_in_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_inte +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_i +
jmp loc_102A9D0  +
mov eax offset aSl_e_hwid_erro +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_in_2 +
jmp loc_102A9D0  +
mov ecx 0C004F031h +
cmp eax ecx +
jg loc_102A7A2  +
jz loc_102A798  +
add ecx 0FFFFFFE7h +
cmp eax ecx +
jg loc_102A69D  +
jz loc_102A693  +
mov ecx 0C004F00Ah +
cmp eax ecx +
jg loc_102A610  +
jz loc_102A606  +
add ecx 0FFFFFFFAh +
cmp eax ecx +
jg loc_102A5AD  +
jz loc_102A5A3  +
cmp eax 0C004E01Dh +
jz loc_102A599  +
cmp eax 0C004E01Eh +
jz loc_102A58F  +
cmp eax 0C004E01Fh +
jz loc_102A585  +
cmp eax 0C004F001h +
jz loc_102A57B  +
cmp eax 0C004F002h +
jz loc_102A571  +
cmp eax 0C004F003h +
jnz loc_102A9CB  +
mov eax offset aSl_e_use_licen +
jmp loc_102A9D0  +
mov eax offset aSl_e_right_not +
jmp loc_102A9D0  +
mov eax offset aSl_e_internal_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_in_3 +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_in_4 +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_in_5 +
jmp loc_102A9D0  +
mov eax offset aSl_e_mismatche +
jmp loc_102A9D0  +
cmp eax 0C004F005h +
jz loc_102A5FC  +
cmp eax 0C004F006h +
jz loc_102A5F2  +
cmp eax 0C004F007h +
jz loc_102A5E8  +
cmp eax 0C004F008h +
jz loc_102A5DE  +
cmp eax 0C004F009h +
jnz loc_102A9CB  +
mov eax offset aSl_e_grace_tim +
jmp loc_102A9D0  +
mov eax offset aSl_e_spc_not_a +
jmp loc_102A9D0  +
mov eax offset aSl_e_rac_not_a +
jmp loc_102A9D0  +
mov eax offset aSl_e_external_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_mismatc_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_mismatc_1 +
jmp loc_102A9D0  +
add eax 3FFB0FF5h +
cmp eax 0Ch +
ja loc_102A9CB  +
jmp ds:off_102AAED[eax*4]  +
mov eax offset aSl_e_no_pid_co +
jmp loc_102A9D0  +
mov eax offset aSl_e_mismatc_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_out_of_to +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_p +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_f +
jmp loc_102A9D0  +
mov eax offset aSl_e_value_not +
jmp loc_102A9D0  +
mov eax offset aSl_e_right_n_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_not_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_product_s +
jmp loc_102A9D0  +
mov eax offset aSl_e_not_suppo +
jmp loc_102A9D0  +
mov eax offset aSl_e_publishin +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_s +
jmp loc_102A9D0  +
add eax 3FFB0FE7h +
cmp eax 17h +
ja loc_102A9CB  +
jmp ds:off_102AB21[eax*4]  +
mov eax offset aSl_e_invalid_e +
jmp loc_102A9D0  +
mov eax offset aSl_e_event_not +
jmp loc_102A9D0  +
mov eax offset aSl_e_event_alr +
jmp loc_102A9D0  +
mov eax offset aSl_e_decryptio +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_datatype_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_l +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_validity_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_a +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_d +
jmp loc_102A9D0  +
mov eax offset aSl_e_windows_i +
jmp loc_102A9D0  +
mov eax offset aSl_e_lua_acces +
jmp loc_102A9D0  +
mov eax offset aSl_e_proxy_key +
jmp loc_102A9D0  +
mov eax offset aSl_e_tamper_de +
jmp loc_102A9D0  +
mov eax offset aSl_e_policy_ca +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_r +
jmp loc_102A9D0  +
mov eax offset aSl_e_slp_not_s +
jmp loc_102A9D0  +
mov eax offset aSl_e_cidiid_in +
jmp loc_102A9D0  +
mov eax offset aSl_e_cidiid__0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_cidiid_ve +
jmp loc_102A9D0  +
mov eax offset aSl_e_cidiid__1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_cidiid_no +
jmp loc_102A9D0  +
mov eax offset aSl_e_cidiid_mi +
jmp loc_102A9D0  +
mov ecx 0C004F063h +
cmp eax ecx +
jg loc_102A8CB  +
jz loc_102A8C1  +
add eax 3FFB0FCEh +
cmp eax 30h +
ja loc_102A9CB  +
movzx eax ds:byte_102ABE5[eax] +
jmp ds:off_102AB81[eax*4]  +
mov eax offset aSl_e_invalid_b +
jmp loc_102A9D0  +
mov eax offset aSl_e_product_k +
jmp loc_102A9D0  +
mov eax offset aSl_e_eul_not_a +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_not_wi +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_not_en +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_bindin +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_key_ma +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_key__0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_proxy_pol +
jmp loc_102A9D0  +
mov eax offset aSl_e_cidiid__2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_m +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_blocked_p +
jmp loc_102A9D0  +
mov eax offset aSl_e_duplicate +
jmp loc_102A9D0  +
mov eax offset aSl_e_missing_o +
jmp loc_102A9D0  +
mov eax offset aSl_e_license_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_base_sku_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_machin +
jmp loc_102A9D0  +
mov eax offset aSl_e_slp_missi +
jmp loc_102A9D0  +
mov eax offset aSl_e_slp_mis_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_slp_bad_f +
jmp loc_102A9D0  +
mov eax offset aSl_e_invalid_2 +
jmp loc_102A9D0  +
mov eax offset aSl_e_pkey_in_6 +
jmp loc_102A9D0  +
mov eax offset aSl_e_issuance_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_slp_oem_c +
jmp loc_102A9D0  +
mov ecx 0C004FC05h +
cmp eax ecx +
jg loc_102A969  +
jz loc_102A962  +
add eax 3FFB0F9Ch +
cmp eax 10h +
ja loc_102A9CB  +
jmp ds:off_102AC19[eax*4]  +
mov eax offset aSl_e_nongenuin +
jmp loc_102A9D0  +
mov eax offset aSl_e_dependent +
jmp loc_102A9D0  +
mov eax offset aSl_e_nongenu_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_mismatc_3 +
jmp loc_102A9D0  +
mov eax offset aSl_e_operation +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_key__1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_invali +
jmp loc_102A9D0  +
mov eax offset aSl_e_plugin_al +
jmp loc_102A9D0  +
mov eax offset aSl_e_plugin_in +
jmp loc_102A9D0  +
mov eax offset aSl_e_applicati +
jmp loc_102A9D0  +
mov eax offset aSl_e_applica_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_bind_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_validit_0 +
jmp loc_102A9D0  +
mov ecx 4004F040h +
cmp eax ecx +
jg loc_102A9CB  +
jz loc_102A9C4  +
add eax 3FFB02FFh +
cmp eax 8 +
ja loc_102A9CB  +
jmp ds:off_102AC5D[eax*4]  +
mov eax offset aSl_e_cal_not_f +
jmp loc_102A9D0  +
mov eax offset aSl_e_free_cal_ +
jmp loc_102A9D0  +
mov eax offset aSl_e_cal_class +
jmp loc_102A9D0  +
mov eax offset aSl_e_cal_princ +
jmp loc_102A9D0  +
mov eax offset aSl_e_cal_pri_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_cal_store +
jmp loc_102A9D0  +
mov eax offset aSl_e_cal_sto_0 +
jmp loc_102A9D0  +
mov eax offset aSl_e_cal_pri_1 +
jmp loc_102A9D0  +
mov eax offset aSl_e_tamper_re +
jmp loc_102A9D0  +
mov eax offset aSl_e_vl_info_p +
jmp loc_102A9D0  +
mov eax offset aUnknownError +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 8E5E045Ah +
cmp eax ecx +
jg loc_102B59A  +
jz loc_102B590  +
mov ecx 8E5E0244h +
cmp eax ecx +
jg loc_102B12C  +
jz loc_102B122  +
add ecx 0FFFFFFCBh +
cmp eax ecx +
jg loc_102AF4B  +
jz loc_102AF41  +
mov ecx 8E5E0198h +
cmp eax ecx +
jg loc_102AE50  +
jz loc_102AE46  +
add ecx 0FFFFFFABh +
cmp eax ecx +
jg loc_102ADBC  +
jz loc_102ADB2  +
mov ecx 8E5E0067h +
cmp eax ecx +
jg loc_102AD59  +
jz loc_102AD4F  +
cmp eax 8007000Eh +
jz loc_102AD45  +
cmp eax 8E5E0001h +
jz loc_102AD3B  +
cmp eax 8E5E0064h +
jz loc_102AD31  +
cmp eax 8E5E0065h +
jz loc_102AD27  +
cmp eax 8E5E0066h +
jnz loc_102BF5A  +
mov eax offset aJet_errfileclo +
jmp loc_102BF7B  +
mov eax offset aJet_errrfsnota +
jmp loc_102BF7B  +
mov eax offset aJet_errrfsfail +
jmp loc_102BF7B  +
mov eax offset aJet_wrnnyi +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofme +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofth +
jmp loc_102BF7B  +
cmp eax 8E5E0069h +
jz loc_102ADA8  +
cmp eax 8E5E006Ah +
jz loc_102AD9E  +
cmp eax 8E5E006Bh +
jz loc_102AD94  +
cmp eax 8E5E00FFh +
jz loc_102AD8A  +
cmp eax 8E5E0142h +
jnz loc_102BF5A  +
mov eax offset aJet_errpreviou +
jmp loc_102BF7B  +
mov eax offset aJet_errdatabas +
jmp loc_102BF7B  +
mov eax offset aJet_errinterna +
jmp loc_102BF7B  +
mov eax offset aJet_errtaskdro +
jmp loc_102BF7B  +
mov eax offset aJet_errtoomany +
jmp loc_102BF7B  +
mov eax offset aJet_errpagebou +
jmp loc_102BF7B  +
add eax 71A1FEBCh +
cmp eax 16h +
ja loc_102BF5A  +
movzx eax ds:byte_102BFB0[eax] +
jmp ds:off_102BF80[eax*4]  +
mov eax offset aJet_errkeyboun +
jmp loc_102BF7B  +
mov eax offset aJet_errbadpage +
jmp loc_102BF7B  +
mov eax offset aJet_errbadbook +
jmp loc_102BF7B  +
mov eax offset aJet_errntsyste +
jmp loc_102BF7B  +
mov eax offset aJet_errbadpare +
jmp loc_102BF7B  +
mov eax offset aJet_errspavail +
jmp loc_102BF7B  +
mov eax offset aJet_errspava_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errspava_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errspownex +
jmp loc_102BF7B  +
mov eax offset aJet_errdbtimec +
jmp loc_102BF7B  +
mov eax offset aJet_errkeytrun +
jmp loc_102BF7B  +
mov eax offset aJet_errkeytoob +
jmp loc_102BF7B  +
add eax 71A1FE0Ch +
cmp eax 1Ah +
ja loc_102BF5A  +
jmp ds:off_102BFC8[eax*4]  +
mov eax offset aJet_errinvalid +
jmp loc_102BF7B  +
mov eax offset aJet_errlogfile +
jmp loc_102BF7B  +
mov eax offset aJet_errnobacku +
jmp loc_102BF7B  +
mov eax offset aJet_errbackupd +
jmp loc_102BF7B  +
mov eax offset aJet_errbackupi +
jmp loc_102BF7B  +
mov eax offset aJet_errrestore +
jmp loc_102BF7B  +
mov eax offset aJet_errmissing +
jmp loc_102BF7B  +
mov eax offset aJet_errlogwrit +
jmp loc_102BF7B  +
mov eax offset aJet_errlogdisa +
jmp loc_102BF7B  +
mov eax offset aJet_errcannotl +
jmp loc_102BF7B  +
mov eax offset aJet_errloggene +
jmp loc_102BF7B  +
mov eax offset aJet_errbadlogv +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogging +
jmp loc_102BF7B  +
mov eax offset aJet_errlogbuff +
jmp loc_102BF7B  +
mov eax offset aJet_errlogsequ +
jmp loc_102BF7B  +
mov eax offset aJet_errnobac_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errbackupn +
jmp loc_102BF7B  +
mov eax offset aJet_errdeleteb +
jmp loc_102BF7B  +
mov eax offset aJet_errmakebac +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errrecover +
jmp loc_102BF7B  +
add eax 71A1FDF0h +
cmp eax 33h +
ja loc_102BF5A  +
jmp ds:off_102C034[eax*4]  +
mov eax offset aJet_errmissi_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogdisk +
jmp loc_102BF7B  +
mov eax offset aJet_errbadlogs +
jmp loc_102BF7B  +
mov eax offset aJet_errbaddbsi +
jmp loc_102BF7B  +
mov eax offset aJet_errbadchec +
jmp loc_102BF7B  +
mov eax offset aJet_errcheckpo +
jmp loc_102BF7B  +
mov eax offset aJet_errmissi_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errbadpatc +
jmp loc_102BF7B  +
mov eax offset aJet_errredoabr +
jmp loc_102BF7B  +
mov eax offset aJet_errbadslvs +
jmp loc_102BF7B  +
mov eax offset aJet_errpatchfi +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogfi_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcheck_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errrequire +
jmp loc_102BF7B  +
mov eax offset aJet_errsoftrec +
jmp loc_102BF7B  +
mov eax offset aJet_errlogfi_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogsect +
jmp loc_102BF7B  +
mov eax offset aJet_errlogse_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogse_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errstreami +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errconsist +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errendingr +
jmp loc_102BF7B  +
mov eax offset aJet_errstartin +
jmp loc_102BF7B  +
mov eax offset aJet_errgivenlo +
jmp loc_102BF7B  +
mov eax offset aJet_errgiven_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errmissi_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errmissi_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errbadback +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_4 +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_5 +
jmp loc_102BF7B  +
mov eax offset aJet_errmissi_4 +
jmp loc_102BF7B  +
mov eax offset aJet_errdbtimet +
jmp loc_102BF7B  +
mov eax offset aJet_errdbtim_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errmissi_5 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogtorn +
jmp loc_102BF7B  +
mov eax offset aJet_errlogto_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogcorr +
jmp loc_102BF7B  +
mov eax offset aJet_errlogco_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errmustdis +
jmp loc_102BF7B  +
mov eax offset aJet_errbadrest +
jmp loc_102BF7B  +
mov eax offset aJet_errrecov_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_6 +
jmp loc_102BF7B  +
mov ecx 8E5E0414h +
cmp eax ecx +
jg loc_102B3B2  +
jz loc_102B3A8  +
add ecx 0FFFFFFE0h +
cmp eax ecx +
jg loc_102B2B7  +
jz loc_102B2AD  +
mov ecx 8E5E0265h +
cmp eax ecx +
jg loc_102B1F7  +
jz loc_102B1ED  +
add eax 71A1FDBBh +
cmp eax 1Fh +
ja loc_102BF5A  +
movzx eax ds:byte_102C134[eax] +
jmp ds:off_102C104[eax*4]  +
mov eax offset aJet_errsoftr_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcommitt +
jmp loc_102BF7B  +
mov eax offset aJet_errsectors +
jmp loc_102BF7B  +
mov eax offset aJet_errrecov_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errcommi_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errunicode +
jmp loc_102BF7B  +
mov eax offset aJet_errunico_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errunico_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errexistin +
jmp loc_102BF7B  +
mov eax offset aJet_errexist_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogread +
jmp loc_102BF7B  +
mov eax offset aJet_errslvread +
jmp loc_102BF7B  +
mov ecx 8E5E03E9h +
cmp eax ecx +
jg loc_102B265  +
jz loc_102B25B  +
cmp eax 8E5E0266h +
jz loc_102B251  +
cmp eax 8E5E0267h +
jz loc_102B247  +
cmp eax 8E5E0268h +
jz loc_102B23D  +
cmp eax 8E5E0384h +
jz loc_102B233  +
cmp eax 8E5E03E8h +
jnz loc_102BF5A  +
mov eax offset aJet_errterminp +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogfi_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errresto_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcheck_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errfeature +
jmp loc_102BF7B  +
cmp eax 8E5E03EAh +
jz loc_102B2A3  +
cmp eax 8E5E03EBh +
jz loc_102B299  +
cmp eax 8E5E03F0h +
jz loc_102B28F  +
cmp eax 8E5E03F2h +
jnz loc_102BF5A  +
mov eax offset aJet_errinval_4 +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_7 +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_5 +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_6 +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofda +
jmp loc_102BF7B  +
add eax 71A1FC0Bh +
cmp eax 1Eh +
ja loc_102BF5A  +
jmp ds:off_102C154[eax*4]  +
mov eax offset aJet_erroutofcu +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofbu +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errrecordd +
jmp loc_102BF7B  +
mov eax offset aJet_errreadver +
jmp loc_102BF7B  +
mov eax offset aJet_errpagenot +
jmp loc_102BF7B  +
mov eax offset aJet_erroutoffi +
jmp loc_102BF7B  +
mov eax offset aJet_errdiskio +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_7 +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_8 +
jmp loc_102BF7B  +
mov eax offset aJet_errinval_9 +
jmp loc_102BF7B  +
mov eax offset aJet_errrecordt +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_10 +
jmp loc_102BF7B  +
mov eax offset aJet_errnotinit +
jmp loc_102BF7B  +
mov eax offset aJet_erralready +
jmp loc_102BF7B  +
mov eax offset aJet_errinitinp +
jmp loc_102BF7B  +
mov eax offset aJet_errfileacc +
jmp loc_102BF7B  +
mov eax offset aJet_errbuffert +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errcontain +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_11 +
jmp loc_102BF7B  +
add eax 71A1FBEBh +
cmp eax 44h +
ja loc_102BF5A  +
movzx eax ds:byte_102C288[eax] +
jmp ds:off_102C1D0[eax*4]  +
mov eax offset aJet_errinva_12 +
jmp loc_102BF7B  +
mov eax offset aJet_errcolumni +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_13 +
jmp loc_102BF7B  +
mov eax offset aJet_errcolumnn +
jmp loc_102BF7B  +
mov eax offset aJet_errindexin +
jmp loc_102BF7B  +
mov eax offset aJet_errlinknot +
jmp loc_102BF7B  +
mov eax offset aJet_errnullkey +
jmp loc_102BF7B  +
mov eax offset aJet_errnotintr +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_4 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_14 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_15 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_16 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_17 +
jmp loc_102BF7B  +
mov eax offset aJet_errversion +
jmp loc_102BF7B  +
mov eax offset aJet_errversi_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errversi_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errcannoti +
jmp loc_102BF7B  +
mov eax offset aJet_errrecordn +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_5 +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofob +
jmp loc_102BF7B  +
mov eax offset aJet_erroutoflo +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofau +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofdb +
jmp loc_102BF7B  +
mov eax offset aJet_erroutofse +
jmp loc_102BF7B  +
mov eax offset aJet_errrunning +
jmp loc_102BF7B  +
mov eax offset aJet_errrunni_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errsystemp +
jmp loc_102BF7B  +
mov eax offset aJet_errsyste_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errlogfi_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errtemppat +
jmp loc_102BF7B  +
mov eax offset aJet_errinstanc +
jmp loc_102BF7B  +
mov eax offset aJet_errinsta_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_8 +
jmp loc_102BF7B  +
mov eax offset aJet_errinsta_1 +
jmp loc_102BF7B  +
mov eax offset aJet_erroutof_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errwriteco +
jmp loc_102BF7B  +
mov eax offset aJet_errtransto +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_18 +
jmp loc_102BF7B  +
mov eax offset aJet_errwrite_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errintrans +
jmp loc_102BF7B  +
mov eax offset aJet_errrollbac +
jmp loc_102BF7B  +
mov eax offset aJet_errtransre +
jmp loc_102BF7B  +
mov eax offset aJet_errsession +
jmp loc_102BF7B  +
mov eax offset aJet_errrecor_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcannotm +
jmp loc_102BF7B  +
mov eax offset aJet_errsesidta +
jmp loc_102BF7B  +
mov ecx 8E5E05F8h +
cmp eax ecx +
jg loc_102B963  +
jz loc_102B959  +
add eax 71A1FBA5h +
cmp eax 19Bh +
ja loc_102BF5A  +
movzx eax ds:byte_102C440[eax] +
jmp ds:off_102C2D0[eax*4]  +
mov eax offset aJet_errinva_19 +
jmp loc_102BF7B  +
mov eax offset aJet_errdirtysh +
jmp loc_102BF7B  +
mov eax offset aJet_errdatab_9 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_10 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_11 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_12 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_13 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_14 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_15 +
jmp loc_102BF7B  +
mov eax offset aJet_errcannotd +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_20 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_16 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_17 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_18 +
jmp loc_102BF7B  +
mov eax offset aJet_errpagesiz +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_6 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_19 +
jmp loc_102BF7B  +
mov eax offset aJet_errattache +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_20 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_21 +
jmp loc_102BF7B  +
mov eax offset aJet_errforcede +
jmp loc_102BF7B  +
mov eax offset aJet_errcatalog +
jmp loc_102BF7B  +
mov eax offset aJet_errpartial +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_22 +
jmp loc_102BF7B  +
mov eax offset aJet_errdata_23 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_21 +
jmp loc_102BF7B  +
mov eax offset aJet_errtablelo +
jmp loc_102BF7B  +
mov eax offset aJet_errtabledu +
jmp loc_102BF7B  +
mov eax offset aJet_errtablein +
jmp loc_102BF7B  +
mov eax offset aJet_errobjectn +
jmp loc_102BF7B  +
mov eax offset aJet_errdensity +
jmp loc_102BF7B  +
mov eax offset aJet_errtableno +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_22 +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_7 +
jmp loc_102BF7B  +
mov eax offset aJet_errillegal +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_8 +
jmp loc_102BF7B  +
mov eax offset aJet_errobjectd +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_23 +
jmp loc_102BF7B  +
mov eax offset aJet_errcanno_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcanno_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errcanno_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errexclusi +
jmp loc_102BF7B  +
mov eax offset aJet_errfixeddd +
jmp loc_102BF7B  +
mov eax offset aJet_errfixedin +
jmp loc_102BF7B  +
mov eax offset aJet_errcannotn +
jmp loc_102BF7B  +
mov eax offset aJet_errddlnoti +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_24 +
jmp loc_102BF7B  +
mov eax offset aJet_errclientr +
jmp loc_102BF7B  +
mov eax offset aJet_errcannota +
jmp loc_102BF7B  +
mov eax offset aJet_errindexca +
jmp loc_102BF7B  +
mov eax offset aJet_errindexha +
jmp loc_102BF7B  +
mov eax offset aJet_errindexdu +
jmp loc_102BF7B  +
mov eax offset aJet_errindexno +
jmp loc_102BF7B  +
mov eax offset aJet_errindexmu +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_25 +
jmp loc_102BF7B  +
mov eax offset aJet_errtooma_9 +
jmp loc_102BF7B  +
mov eax offset aJet_errmultiva +
jmp loc_102BF7B  +
mov eax offset aJet_errindexbu +
jmp loc_102BF7B  +
mov eax offset aJet_errprimary +
jmp loc_102BF7B  +
mov eax offset aJet_errseconda +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_26 +
jmp loc_102BF7B  +
mov eax offset aJet_errindextu +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_4 +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_5 +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_6 +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_7 +
jmp loc_102BF7B  +
mov eax offset aJet_errcolumnl +
jmp loc_102BF7B  +
mov eax offset aJet_errcolum_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcolumnd +
jmp loc_102BF7B  +
mov eax offset aJet_errnullinv +
jmp loc_102BF7B  +
mov eax offset aJet_errcolum_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errcolumnt +
jmp loc_102BF7B  +
mov eax offset aJet_errcolum_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errcolum_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errmulti_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcolumnr +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_27 +
jmp loc_102BF7B  +
mov eax offset aJet_errtaggedn +
jmp loc_102BF7B  +
mov eax offset aJet_errnocurre +
jmp loc_102BF7B  +
mov eax offset aJet_errkeyisma +
jmp loc_102BF7B  +
mov eax offset aJet_errbadcolu +
jmp loc_102BF7B  +
mov eax offset aJet_errbaditag +
jmp loc_102BF7B  +
mov eax offset aJet_errcolum_4 +
jmp loc_102BF7B  +
mov eax offset aJet_errcannotb +
jmp loc_102BF7B  +
mov eax offset aJet_errdefault +
jmp loc_102BF7B  +
mov eax offset aJet_errmulti_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errlvcorru +
jmp loc_102BF7B  +
mov eax offset aJet_errmulti_2 +
jmp loc_102BF7B  +
mov ecx 8E5E0FA2h +
cmp eax ecx +
jg loc_102BC8E  +
jz loc_102BC84  +
mov ecx 8E5E0772h +
cmp eax ecx +
jg loc_102BB2B  +
jz loc_102BB21  +
mov ecx 8E5E0653h +
cmp eax ecx +
jg loc_102BA6B  +
jz loc_102BA61  +
add ecx 0FFFFFFF1h +
cmp eax ecx +
jg loc_102BA08  +
jz loc_102B9FE  +
cmp eax 8E5E05F9h +
jz loc_102B9F4  +
cmp eax 8E5E05FAh +
jz loc_102B9EA  +
cmp eax 8E5E0641h +
jz loc_102B9E0  +
cmp eax 8E5E0642h +
jz loc_102B9D6  +
cmp eax 8E5E0643h +
jnz loc_102BF5A  +
mov eax offset aJet_errnocur_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errrecor_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errrecor_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_28 +
jmp loc_102BF7B  +
mov eax offset aJet_errderived +
jmp loc_102BF7B  +
mov eax offset aJet_errrecordp +
jmp loc_102BF7B  +
cmp eax 8E5E0645h +
jz loc_102BA57  +
cmp eax 8E5E0647h +
jz loc_102BA4D  +
cmp eax 8E5E0648h +
jz loc_102BA43  +
cmp eax 8E5E0649h +
jz loc_102BA39  +
cmp eax 8E5E064Bh +
jnz loc_102BF5A  +
mov eax offset aJet_errdatahas +
jmp loc_102BF7B  +
mov eax offset aJet_errupdaten +
jmp loc_102BF7B  +
mov eax offset aJet_errkeynotm +
jmp loc_102BF7B  +
mov eax offset aJet_erralrea_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errkeydupl +
jmp loc_102BF7B  +
mov eax offset aJet_errlanguag +
jmp loc_102BF7B  +
mov ecx 8E5E0711h +
cmp eax ecx +
jg loc_102BAD9  +
jz loc_102BACF  +
cmp eax 8E5E06A5h +
jz loc_102BAC5  +
cmp eax 8E5E06A6h +
jz loc_102BABB  +
cmp eax 8E5E070Bh +
jz loc_102BAB1  +
cmp eax 8E5E070Dh +
jz loc_102BAA7  +
cmp eax 8E5E0710h +
jnz loc_102BF5A  +
mov eax offset aJet_errdiskful +
jmp loc_102BF7B  +
mov eax offset aJet_errtoom_10 +
jmp loc_102BF7B  +
mov eax offset aJet_errtempfil +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_29 +
jmp loc_102BF7B  +
mov eax offset aJet_errtoom_11 +
jmp loc_102BF7B  +
mov eax offset aJet_errpermiss +
jmp loc_102BF7B  +
cmp eax 8E5E0713h +
jz loc_102BB17  +
cmp eax 8E5E0714h +
jz loc_102BB0D  +
cmp eax 8E5E073Ah +
jz loc_102BB03  +
cmp eax 8E5E073Ch +
jnz loc_102BF5A  +
mov eax offset aJet_errlogco_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errafterin +
jmp loc_102BF7B  +
mov eax offset aJet_errfileinv +
jmp loc_102BF7B  +
mov eax offset aJet_errfilenot +
jmp loc_102BF7B  +
mov eax offset aJet_errinva_30 +
jmp loc_102BF7B  +
mov ecx 8E5E0835h +
cmp eax ecx +
jg loc_102BBBD  +
jz loc_102BBB3  +
add eax 71A1F88Dh +
cmp eax 0Ah +
ja loc_102BF5A  +
jmp ds:off_102C5DC[eax*4]  +
mov eax offset aJet_erraccessd +
jmp loc_102BF7B  +
mov eax offset aJet_errtoom_12 +
jmp loc_102BF7B  +
mov eax offset aJet_errsessi_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errentrypo +
jmp loc_102BF7B  +
mov eax offset aJet_errsessi_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errsessi_2 +
jmp loc_102BF7B  +
mov eax offset aJet_errsessi_3 +
jmp loc_102BF7B  +
mov eax offset aJet_errrecordf +
jmp loc_102BF7B  +
mov eax offset aJet_erronedata +
jmp loc_102BF7B  +
mov eax offset aJet_errrollb_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errcallbac +
jmp loc_102BF7B  +
mov ecx 8E5E0964h +
cmp eax ecx +
jg loc_102BC2B  +
jz loc_102BC21  +
cmp eax 8E5E0836h +
jz loc_102BC17  +
cmp eax 8E5E0837h +
jz loc_102BC0D  +
cmp eax 8E5E0961h +
jz loc_102BC03  +
cmp eax 8E5E0962h +
jz loc_102BBF9  +
cmp eax 8E5E0963h +
jnz loc_102BF5A  +
mov eax offset aJet_errossnaps +
jmp loc_102BF7B  +
mov eax offset aJet_errossna_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errossna_1 +
jmp loc_102BF7B  +
mov eax offset aJet_errspacehi +
jmp loc_102BF7B  +
mov eax offset aJet_errcallb_0 +
jmp loc_102BF7B  +
mov eax offset aJet_errossna_2 +
jmp loc_102BF7B  +
cmp eax 8E5E0BB8h +
jz loc_102BC7A  +
cmp eax 8E5E0BB9h +
jz loc_102BC70  +
cmp eax 8E5E0BBAh +
jz loc_102BC66  +
cmp eax 8E5E0FA0h +
jz loc_102BC5C  +
cmp eax 8E5E0FA1h +
jnz loc_102BF5A  +
mov eax offset aJet_errfileiob +
jmp loc_102BF7B  +
mov eax offset aJet_errfileios +
jmp loc_102BF7B  +
mov eax offset aJet_errlsnotse +
jmp loc_102BF7B  +
mov eax offset aJet_errlsalrea +
jmp loc_102BF7B  +
mov eax offset aJet_errlscallb +
jmp loc_102BF7B  +
mov eax offset aJet_errfileioa +
jmp loc_102BF7B  +
mov ecx 0E5E041Fh +
cmp eax ecx +
jg loc_102BE2C  +
jz loc_102BE22  +
mov ecx 0E5E022Fh +
cmp eax ecx +
jg loc_102BD7E  +
jz loc_102BD74  +
mov ecx 0E5E005Ah +
cmp eax ecx +
jg loc_102BD1F  +
jz loc_102BD15  +
cmp eax 8E5E0FA3h +
jz loc_102BD0B  +
cmp eax 8E5E0FA4h +
jz loc_102BD01  +
cmp eax 8E5E0FA5h +
jz loc_102BCF7  +
test eax eax +
jz loc_102BCED  +
cmp eax 0E5E0051h +
jnz loc_102BF5A  +
mov eax offset aJet_errdata_24 +
jmp loc_102BF7B  +
mov eax offset aJet_errsuccess +
jmp loc_102BF7B  +
mov eax offset aJet_errfilecom +
jmp loc_102BF7B  +
mov eax offset aJet_errfileiof +
jmp loc_102BF7B  +
mov eax offset aJet_errfileior +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_8 +
jmp loc_102BF7B  +
sub eax 0E5E0063h +
jz loc_102BD6A  +
sub eax 0DEh +
jz loc_102BD60  +
sub eax 18h +
jz loc_102BD56  +
sub eax 3Dh +
jz loc_102BD4C  +
sub eax 98h +
jnz loc_102BF5A  +
mov eax offset aJet_wrnexistin +
jmp loc_102BF7B  +
mov eax offset aJet_wrnseparat +
jmp loc_102BF7B  +
mov eax offset aJet_wrnuniquek +
jmp loc_102BF7B  +
mov eax offset aJet_wrnremaini +
jmp loc_102BF7B  +
mov eax offset aJet_errindex_9 +
jmp loc_102BF7B  +
mov eax offset aJet_wrnexist_0 +
jmp loc_102BF7B  +
mov ecx 0E5E03ECh +
cmp eax ecx +
jg loc_102BDE3  +
jz loc_102BDD9  +
sub eax 0E5E0234h +
jz loc_102BDCF  +
sub eax 0Eh +
jz loc_102BDC5  +
sub eax 7 +
jz loc_102BDBB  +
dec eax  +
dec eax  +
jz loc_102BDB1  +
sub eax 8 +
jnz loc_102BF5A  +
mov eax offset aJet_wrndatabas +
jmp loc_102BF7B  +
mov eax offset aJet_wrncommitt +
jmp loc_102BF7B  +
mov eax offset aJet_wrncommi_0 +
jmp loc_102BF7B  +
mov eax offset aJet_wrntargeti +
jmp loc_102BF7B  +
mov eax offset aJet_wrnskipthi +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolumnn +
jmp loc_102BF7B  +
sub eax 0E5E03EEh +
jz loc_102BE18  +
dec eax  +
jz loc_102BE0E  +
dec eax  +
dec eax  +
jz loc_102BE04  +
sub eax 1Eh +
jnz loc_102BF5A  +
mov eax offset aJet_wrnseeknot +
jmp loc_102BF7B  +
mov eax offset aJet_wrnsortove +
jmp loc_102BF7B  +
mov eax offset aJet_wrndatab_0 +
jmp loc_102BF7B  +
mov eax offset aJet_wrnbuffert +
jmp loc_102BF7B  +
mov eax offset aJet_wrnnoerror +
jmp loc_102BF7B  +
mov ecx 0E5E05FEh +
cmp eax ecx +
jg loc_102BEFA  +
jz loc_102BEF0  +
add ecx 0FFFFFF89h +
cmp eax ecx +
jg loc_102BEA3  +
jz loc_102BE99  +
sub eax 0E5E0422h +
jz loc_102BE8F  +
sub eax 9 +
jz loc_102BE85  +
dec eax  +
jz loc_102BE7B  +
sub eax 0E9h +
jz loc_102BE71  +
sub eax 1Ah +
jnz loc_102BF5A  +
mov eax offset aJet_wrntablein +
jmp loc_102BF7B  +
mov eax offset aJet_wrntableem +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolumns +
jmp loc_102BF7B  +
mov eax offset aJet_wrnnowrite +
jmp loc_102BF7B  +
mov eax offset aJet_wrnnoidlea +
jmp loc_102BF7B  +
mov eax offset aJet_wrncorrupt +
jmp loc_102BF7B  +
sub eax 0E5E05E8h +
jz loc_102BEE6  +
sub eax 8 +
jz loc_102BEDC  +
sub eax 0Bh +
jz loc_102BED2  +
dec eax  +
jz loc_102BEC8  +
dec eax  +
jnz loc_102BF5A  +
mov eax offset aJet_wrncolumnm +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolum_0 +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolum_1 +
jmp loc_102BF7B  +
mov eax offset aJet_wrncopylon +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolum_2 +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolumnt +
jmp loc_102BF7B  +
mov ecx 0E5E0715h +
cmp eax ecx +
jg loc_102BF46  +
jz loc_102BF3F  +
sub eax 0E5E05FFh +
jz loc_102BF38  +
dec eax  +
jz loc_102BF31  +
dec eax  +
jz loc_102BF2A  +
sub eax 49h +
jz loc_102BF23  +
sub eax 8 +
jnz loc_102BF5A  +
mov eax offset aJet_wrnkeychan +
jmp loc_102BF7B  +
mov eax offset aJet_wrndatahas +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolumnd +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolum_3 +
jmp loc_102BF7B  +
mov eax offset aJet_wrncolumnp +
jmp loc_102BF7B  +
mov eax offset aJet_wrnfileope +
jmp loc_102BF7B  +
sub eax 0E5E0774h +
jz loc_102BF76  +
sub eax 5Ch +
jz loc_102BF6F  +
dec eax  +
jz loc_102BF68  +
sub eax 63h +
jz loc_102BF61  +
mov eax offset aUnknownError +
jmp loc_102BF7B  +
mov eax offset aJet_wrncallbac +
jmp loc_102BF7B  +
mov eax offset aJet_wrndefragn +
jmp loc_102BF7B  +
mov eax offset aJet_wrndefraga +
jmp loc_102BF7B  +
mov eax offset aJet_wrnidleful +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push edi  +
xor edi edi +
mov [ebp+phkResult] ebx +
mov [ebp+var_10] ebx +
mov [ebp+Type] ebx +
mov [ebp+cbData] ebx +
mov [ebp+var_14] ebx +
cmp dword ptr [ebp+lpSubKey] ebx +
jz loc_102C699  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
push dword ptr [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test [ebp+arg_8] 1 +
jz loc_102C66A  +
cmp eax 2 +
jz loc_102C655  +
cmp eax 3 +
jnz loc_102C66A  +
cmp eax ebx +
jle loc_102C663  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_102C81E  +
cmp eax ebx +
jz loc_102C69F  +
jle loc_102C67A  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpSubKey]  +
mov edi eax +
push offset aFailedToOpenTh  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_102C81E  +
mov eax [ebp+hKey] +
mov [ebp+phkResult] eax +
push esi  +
mov esi [ebp+arg_10] +
mov eax [esi] +
cmp eax ebx +
jz loc_102C755  +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
call sub_101DB19  +
mov edi eax +
cmp edi ebx +
jge loc_102C6C7  +
push offset aFailedToDeterm  +
push 1  +
push edi  +
jmp loc_102C716  +
mov eax [ebp+var_10] +
lea eax [eax+eax-4] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [esi]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push dword ptr [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jnz loc_102C728  +
mov [ebp+var_14] 1 +
cmp [ebp+Type] 1 +
jz loc_102C79E  +
cmp [ebp+Type] 2 +
jz loc_102C79E  +
push offset aRegistryValueI  +
mov eax 8007000Dh +
push 1  +
mov edi eax +
push eax  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_102C81D  +
cmp eax 0EAh +
jz loc_102C6F3  +
test [ebp+arg_8] 1 +
jz loc_102C73A  +
cmp eax 2 +
jz loc_102C776  +
cmp eax ebx +
jle loc_102C748  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedInitialQ  +
jmp loc_102C7F3  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push dword ptr [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test [ebp+arg_8] 1 +
jz loc_102C780  +
cmp eax 2 +
jnz loc_102C780  +
mov edi 80070002h +
jmp loc_102C81D  +
cmp eax ebx +
jz loc_102C6F3  +
jle loc_102C794  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToQueryV  +
jmp loc_102C7F3  +
cmp [ebp+var_14] ebx +
jnz loc_102C807  +
mov eax [ebp+cbData] +
shr eax 1 +
inc eax  +
inc eax  +
push eax  +
push esi  +
mov [ebp+var_10] eax +
call sub_101DBDF  +
mov edi eax +
cmp edi ebx +
jge loc_102C7C4  +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToAll_24  +
jmp loc_102C7F5  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [esi]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push dword ptr [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jz loc_102C807  +
jle loc_102C7EB  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToQueryR  +
mov edi eax +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_102C81D  +
mov eax [esi] +
mov edx [ebp+var_10] +
xor ecx ecx +
mov [eax+edx*2-4] cx +
mov eax [esi] +
mov edx [ebp+var_10] +
mov [eax+edx*2-2] cx +
pop esi  +
cmp dword ptr [ebp+lpSubKey] ebx +
jz loc_102C831  +
cmp [ebp+phkResult] ebx +
jz loc_102C831  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+phkResult] edi +
mov [ebp+Type] edi +
mov [ebp+cbData] edi +
mov dword ptr [ebp+Data] edi +
cmp [ebp+lpSubKey] edi +
jz loc_102C8B2  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push edi  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test [ebp+arg_8] 1 +
jz loc_102C898  +
cmp eax 2 +
jz loc_102C883  +
cmp eax 3 +
jnz loc_102C898  +
cmp eax edi +
jle loc_102C891  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_102C942  +
cmp eax edi +
jz loc_102C8B8  +
jle loc_102C8A8  +
and eax 0FFFFh +
or eax 80070000h +
push [ebp+lpSubKey]  +
push offset aFailedToOpenTh  +
jmp loc_102C902  +
mov eax [ebp+hKey] +
mov [ebp+phkResult] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push dword ptr [ebp+lpValueName]  +
mov [ebp+cbData] 4 +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test [ebp+arg_8] 1 +
jz loc_102C8EA  +
cmp eax 2 +
jnz loc_102C8EA  +
mov ebx 80070002h +
jmp loc_102C942  +
cmp eax edi +
jz loc_102C916  +
jle loc_102C8FA  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToQueryR  +
mov ebx eax +
push 1  +
push ebx  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_102C942  +
cmp [ebp+Type] 4 +
jz loc_102C93A  +
push offset aRegistryValu_0  +
mov eax 8007000Dh +
push 1  +
push eax  +
push 4000000h  +
mov ebx eax +
call sub_101E5B9  +
add esp 10h +
jmp loc_102C942  +
mov eax [ebp+arg_10] +
mov ecx dword ptr [ebp+Data] +
mov [eax] ecx +
cmp [ebp+lpSubKey] edi +
jz loc_102C955  +
cmp [ebp+phkResult] edi +
jz loc_102C955  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpFileName]  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_102C97E  +
test al 10h +
jnz loc_102C97E  +
xor eax eax +
inc eax  +
jmp loc_102C980  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push edi  +
lea eax [ebp+FileInformation] +
push eax  +
xor edi edi +
push edi  +
push dword ptr [ebp+lpFileName]  +
call ds:GetFileAttributesExW  +
test eax eax +
jnz loc_102C9E1  +
call ds:GetLastError  +
mov edi eax +
test edi edi +
jle loc_102C9C0  +
and edi 0FFFFh +
or edi 80070000h +
test edi edi +
jl loc_102C9C7  +
mov edi 80004005h +
push dword ptr [ebp+lpFileName]  +
push offset aFailedToGetAtt  +
push 1  +
push edi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_102CA06  +
mov eax [ebp+var_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
and [esi+4] edi +
mov edx [esi+4] +
mov cl 20h +
call __allshl  +
mov ecx [ebp+var_4] +
xor ebx ebx +
or eax ecx +
or edx ebx +
mov [esi] eax +
mov [esi+4] edx +
pop esi  +
pop ebx  +
mov eax edi +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
mov edx 80070057h +
test ecx ecx +
jz loc_102CA2D  +
cmp ecx 7FFFFFFFh +
jbe loc_102CA2F  +
mov eax edx +
test eax eax +
jl loc_102CA8C  +
push edi  +
mov edi [ebp+arg_C] +
cmp edi 7FFFFFFEh +
jbe loc_102CA4B  +
mov eax edx +
mov edx [ebp+arg_0] +
xor ecx ecx +
mov [edx] cx +
jmp loc_102CA8B  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_102CA7B  +
mov edx [ebp+arg_8] +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_102CA77  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_102CA77  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_102CA5F  +
test esi esi +
jnz loc_102CA82  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push 2Eh  +
push [ebp+arg_0]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102CAB6  +
cmp eax [ebp+arg_0] +
jnz loc_102CAD2  +
push offset aInvalidPath_  +
push 1  +
mov esi 80070057h +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_102CB47  +
sub eax [ebp+arg_0] +
push ebx  +
sar eax 1 +
push edi  +
inc eax  +
mov edi eax +
lea ebx [edi+2] +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
call sub_101DBDF  +
mov esi eax +
test esi esi +
jge loc_102CAF6  +
push offset aFailedToAll_25  +
jmp loc_102CB27  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
push [ebp+var_4]  +
call sub_102CA12  +
mov esi eax +
test esi esi +
jge loc_102CB10  +
push offset aFailedToCopySo  +
jmp loc_102CB27  +
push [ebp+lpString]  +
lea eax [ebp+var_4] +
push eax  +
call sub_101DE63  +
mov esi eax +
test esi esi +
jge loc_102CB39  +
push offset aFailedToAll_26  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 10h +
jmp loc_102CB45  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
and [ebp+var_4] 0 +
mov [ecx] eax +
pop edi  +
pop ebx  +
cmp [ebp+var_4] 0 +
jz loc_102CB55  +
push [ebp+var_4]  +
call sub_101DB34  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_102E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpSecurityAttributes] +
push ebx  +
mov ebx ds:CreateDirectoryW +
push esi  +
push edi  +
mov edi [ebp+lpPathName] +
push eax  +
push edi  +
mov [ebp+var_210] eax +
xor esi esi +
call ebx  +
test eax eax +
jnz loc_102CC4F  +
call ds:GetLastError  +
cmp eax 0B7h +
jz loc_102CC4D  +
push 5Ch  +
push edi  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102CBC6  +
push edi  +
mov esi 80070003h +
push offset aCannotFindPare  +
jmp loc_102CC0F  +
sub eax edi +
sar eax 1 +
push eax  +
push edi  +
push 104h  +
lea eax [ebp+PathName] +
push eax  +
call sub_102CA12  +
mov esi eax +
test esi esi +
jge loc_102CBEB  +
push edi  +
push offset aFailedToCopyPa  +
jmp loc_102CC0F  +
push [ebp+var_210]  +
lea eax [ebp+PathName] +
push eax  +
call sub_102CB61  +
mov esi eax +
test esi esi +
jge loc_102CC21  +
lea eax [ebp+PathName] +
push eax  +
push offset aFailedToCrea_1  +
push 1  +
push esi  +
push 4000000h  +
call sub_101E5B9  +
add esp 14h +
jmp loc_102CC4F  +
push [ebp+var_210]  +
push edi  +
call ebx  +
test eax eax +
jnz loc_102CC4D  +
call ds:GetLastError  +
cmp eax 0B7h +
jz loc_102CC4D  +
test eax eax +
jle loc_102CC49  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_102CC4F  +
xor esi esi +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CE8B  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpValue]  +
xor esi esi +
push offset aComponent_base  +
call ds:SetEnvironmentVariableW  +
test eax eax +
jnz loc_102CC97  +
call ds:GetLastError  +
test eax eax +
jle loc_102CC95  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp cl 40h +
jnb loc_102CCDA  +
cmp cl 20h +
jnb loc_102CCD0  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_101CE8B  +
mov eax offset dword_102CE18 +
jmp loc_101C8B5  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C0h] +
xor ecx eax +
call sub_101CE8B  +
mov eax offset dword_102CE44 +
jmp loc_101C8B5  +
***
mov ecx offset dword_102E3AC +
jmp sub_101C907  +
***
mov dword_102E3B8 offset off_1002648 +
retn   +
***
jns $+2  +
retf   +
***
