mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1001367  +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
mov edx [edi+0Ch] +
cmp edx 2 +
jb loc_10013CA  +
push esi  +
mov esi 0FFFFh +
test edx edx +
jbe loc_1001391  +
mov eax [edi+8] +
movzx eax word ptr [eax] +
jmp loc_1001393  +
mov eax esi +
cmp ax 22h +
jnz loc_10013C9  +
mov eax edx +
lea ecx [eax-1] +
cmp ecx eax +
jnb loc_10013AB  +
mov eax [edi+8] +
movzx eax word ptr [eax+ecx*2] +
jmp loc_10013AD  +
mov eax esi +
cmp ax 22h +
jnz loc_10013C9  +
mov esi ds:?DeleteChAt@WSTRING@@QAEXKK@Z +
push 1  +
dec edx  +
push edx  +
mov ecx edi +
call esi  +
push 1  +
push 0  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
lea ecx [ebp+var_1C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
and [ebp+var_4] 0 +
cmp [ebp+arg_4] 0 +
jbe loc_1001484  +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_C] +
mov esi ds:?Initialize@WSTRING@@QAEEPBDK@Z +
cmp [ebp+var_4] 0 +
jbe loc_1001416  +
cmp word ptr [ebx-2] 0 +
jnz loc_1001477  +
cmp [ebp+arg_8] 0 +
push 0FFFFFFFFh  +
lea ecx [ebp+var_1C] +
jz loc_1001428  +
push offset dword_10011C4  +
jmp loc_100142D  +
push offset dword_10011BC  +
call esi  +
lea ecx [ebp+var_34] +
test al al +
jz loc_1001488  +
push 0FFFFFFFFh  +
push ebx  +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_100149E  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_1C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_100149E  +
mov eax [edi] +
push 3  +
push 0  +
push 41Eh  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_1C] +
push eax  +
push offset dword_10011C0  +
push edi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
inc ebx  +
inc ebx  +
cmp eax [ebp+arg_4] +
jb loc_1001409  +
mov bl 1 +
jmp loc_10014A0  +
mov esi ds:??1DSTRING@@UAE@XZ +
call esi  +
lea ecx [ebp+var_1C] +
call esi  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
xor bl bl +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_1C] +
call esi  +
mov al bl +
jmp loc_1001497  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebx] edi +
mov [eax] edi +
mov eax [ecx+0Ch] +
cmp edi eax +
jnb loc_10014EA  +
mov edx [ecx+8] +
movzx edx word ptr [edx+edi*2] +
cmp dx 20h +
jnz loc_10014ED  +
inc edi  +
cmp edi eax +
jb loc_10014D6  +
jmp loc_10014ED  +
mov edx [ebp+arg_0] +
mov [ebp+arg_4] edi +
jmp loc_1001506  +
mov edx [ecx+8] +
movzx edx word ptr [edx+edi*2] +
cmp dx 20h +
jz loc_100150A  +
cmp dx 3Dh +
jz loc_100150A  +
inc edi  +
cmp edi eax +
jb loc_10014F2  +
mov eax edi +
cmp [ebp+arg_4] edi +
jnz loc_1001518  +
xor al al +
jmp loc_100159A  +
push esi  +
mov esi [ecx+0Ch] +
jmp loc_100152C  +
mov edx [ecx+8] +
movzx edx word ptr [edx+edi*2] +
cmp dx 20h +
jnz loc_1001530  +
inc edi  +
cmp edi esi +
jb loc_100151E  +
cmp dx 3Dh +
jnz loc_1001597  +
jmp loc_1001545  +
mov edx [ecx+8] +
movzx edx word ptr [edx+edi*2] +
cmp dx 20h +
jnz loc_100154A  +
inc edi  +
cmp edi esi +
jb loc_1001538  +
sub eax [ebp+arg_4] +
mov esi ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z +
push 1  +
push 0  +
push 0  +
push eax  +
push [ebp+arg_4]  +
call esi  +
mov ecx [ebp+arg_0] +
push 1  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push edi  +
mov [ebx] eax +
call esi  +
mov esi [ebp+arg_8] +
mov [esi] eax +
mov ecx [ebx] +
test ecx ecx +
jz loc_1001582  +
test eax eax +
jz loc_1001582  +
mov al 1 +
jmp loc_1001599  +
push ecx  +
call sub_1001345  +
and dword ptr [ebx] 0 +
push dword ptr [esi]  +
call sub_1001345  +
and dword ptr [esi] 0 +
pop ecx  +
pop ecx  +
xor al al +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:GetConsoleAliasesLengthW  +
mov esi eax +
mov eax large fs:18h +
mov eax [eax+30h] +
lea ecx [esi+1] +
push ecx  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
test edi edi +
jnz loc_1001605  +
push 103h  +
push offset aDW7rtmBaseFsUt  +
call ds:?MakeFileToken@MESSAGE@@SG_KPBD@Z  +
push edx  +
push eax  +
push offset dword_10011CC  +
push 3  +
push 1  +
push 43Ch  +
push [ebp+arg_8]  +
call ds:?DisplayMsg@MESSAGE@@QAAEKW4MESSAGE_TYPE@@KPBDZZ  +
add esp 20h +
xor al al +
jmp loc_1001647  +
test esi esi +
jz loc_1001616  +
push [ebp+arg_0]  +
push esi  +
push edi  +
call ds:GetConsoleAliasesW  +
mov esi eax +
push [ebp+arg_8]  +
shr esi 1 +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_10013D4  +
test al al +
jnz loc_1001630  +
push 10Dh  +
jmp loc_10015DA  +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
lea ecx [ebp+var_38] +
call esi  +
lea ecx [ebp+var_20] +
call esi  +
call ds:GetConsoleAliasExesLengthW  +
mov edi eax +
mov eax large fs:18h +
mov eax [eax+30h] +
lea ecx [edi+1] +
push ecx  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov esi eax +
test esi esi +
jnz loc_10016D5  +
push 135h  +
push offset aDW7rtmBaseFsUt  +
call ds:?MakeFileToken@MESSAGE@@SG_KPBD@Z  +
push edx  +
push eax  +
push offset dword_10011CC  +
push 3  +
push 1  +
push 43Ch  +
push [ebp+arg_0]  +
call ds:?DisplayMsg@MESSAGE@@QAAEKW4MESSAGE_TYPE@@KPBDZZ  +
mov esi ds:??1DSTRING@@UAE@XZ +
add esp 20h +
lea ecx [ebp+var_20] +
call esi  +
lea ecx [ebp+var_38] +
call esi  +
xor al al +
jmp loc_10017EC  +
test edi edi +
jz loc_10016E3  +
push edi  +
push esi  +
call ds:GetConsoleAliasExesW  +
mov edi eax +
shr edi 1 +
push ebx  +
mov [ebp+var_8] edi +
mov [ebp+var_4] 0 +
jz loc_10017D3  +
mov edi ds:?Display@MESSAGE@@QAAEPBDZZ +
mov ebx esi +
mov esi [ebp+arg_0] +
cmp [ebp+var_4] 0 +
jbe loc_1001712  +
cmp word ptr [ebx-2] 0 +
jnz loc_10017C2  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [ebp+var_38] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_10017F2  +
push 0FFFFFFFFh  +
push offset asc_1001204  +
lea ecx [ebp+var_20] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_10017F2  +
lea eax [ebp+var_38] +
push eax  +
lea ecx [ebp+var_20] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_10017F2  +
push 0FFFFFFFFh  +
push offset asc_1001200  +
lea ecx [ebp+var_38] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_10017F2  +
lea eax [ebp+var_38] +
push eax  +
lea ecx [ebp+var_20] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_10017F2  +
mov eax [esi] +
push 3  +
push 0  +
push 41Eh  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_20] +
push eax  +
push offset dword_10011C0  +
push esi  +
call edi  +
add esp 0Ch +
push esi  +
push 1  +
push ebx  +
call sub_10015A5  +
test al al +
jz loc_10017D7  +
mov eax [esi] +
push 3  +
push 0  +
push 419h  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push offset dword_10011BC  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
inc ebx  +
inc ebx  +
cmp eax [ebp+var_8] +
jb loc_1001701  +
mov bl 1 +
jmp loc_10017D9  +
xor bl bl +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_20] +
call esi  +
lea ecx [ebp+var_38] +
call esi  +
mov al bl +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
push 14Bh  +
push offset aDW7rtmBaseFsUt  +
call ds:?MakeFileToken@MESSAGE@@SG_KPBD@Z  +
push edx  +
push eax  +
push offset dword_10011CC  +
push 3  +
push 1  +
push 43Ch  +
push esi  +
call ds:?DisplayMsg@MESSAGE@@QAAEKW4MESSAGE_TYPE@@KPBDZZ  +
mov esi ds:??1DSTRING@@UAE@XZ +
add esp 20h +
lea ecx [ebp+var_20] +
call esi  +
lea ecx [ebp+var_38] +
call esi  +
xor al al +
jmp loc_10017EB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
lea ecx [ebp+var_20] +
call esi  +
lea ecx [ebp+var_38] +
call esi  +
mov ebx [ebp+arg_0] +
xor edi edi +
push edi  +
push edi  +
push ebx  +
call ds:?QueryFile@SYSTEM@@SGPAVFSN_FILE@@PBVPATH@@EPAE@Z  +
mov esi eax +
mov [ebp+var_4] esi +
cmp esi edi +
jz loc_1001A68  +
push edi  +
push edi  +
mov ecx esi +
call ds:?QueryStream@FSN_FILE@@QAEPAVFILE_STREAM@@W4STREAMACCESS@@K@Z  +
mov [ebp+arg_0] eax +
cmp eax edi +
jz loc_1001A60  +
push 0FFFFFFFFh  +
push offset dword_10011BC  +
lea ecx [ebp+var_20] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_1001A56  +
push 0FFFFFFFFh  +
push [ebp+arg_4]  +
lea ecx [ebp+var_38] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_1001A56  +
push 1  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push edi  +
lea ecx [ebp+var_38] +
call ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z  +
mov ebx eax +
cmp ebx edi +
jz loc_1001A56  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+8]  +
test al al +
jnz loc_1001A31  +
mov esi ds:wcschr +
mov ecx [ebp+arg_0] +
push edi  +
lea eax [ebp+var_20] +
push eax  +
call ds:?ReadLine@STREAM@@QAEEPAVWSTRING@@E@Z  +
test al al +
jz loc_1001A2E  +
cmp [ebp+var_14] edi +
jz loc_1001A1E  +
mov eax [ebp+var_18] +
jbe loc_1001907  +
movzx ecx word ptr [eax] +
jmp loc_100190C  +
mov ecx 0FFFFh +
cmp cx 5Bh +
jnz loc_10019CE  +
push 5Dh  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_1001928  +
sub eax [ebp+var_18] +
sar eax 1 +
jmp loc_100192B  +
or eax 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
jz loc_10019CE  +
push 5Dh  +
push [ebp+var_18]  +
call esi  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_1001948  +
sub eax [ebp+var_18] +
sar eax 1 +
jmp loc_100194B  +
or eax 0FFFFFFFFh +
cmp eax 1 +
jbe loc_10019CE  +
push ebx  +
call sub_1001345  +
push 5Dh  +
push [ebp+var_18]  +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_100196B  +
sub eax [ebp+var_18] +
sar eax 1 +
jmp loc_100196E  +
or eax 0FFFFFFFFh +
dec eax  +
push eax  +
push 1  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_38] +
call ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z  +
test al al +
jz loc_100199D  +
push 1  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push edi  +
lea ecx [ebp+var_38] +
call ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z  +
mov ebx eax +
cmp ebx edi +
jnz loc_1001A1E  +
push 1A4h  +
push offset aDW7rtmBaseFsUt  +
call ds:?MakeFileToken@MESSAGE@@SG_KPBD@Z  +
push edx  +
push eax  +
push offset dword_10011CC  +
push 3  +
push 1  +
push 43Ch  +
push [ebp+arg_8]  +
call ds:?DisplayMsg@MESSAGE@@QAAEKW4MESSAGE_TYPE@@KPBDZZ  +
add esp 20h +
jmp loc_1001A90  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_10014B9  +
test al al +
jz loc_10019FE  +
mov eax [ebp+arg_4] +
movzx ecx word ptr [eax] +
neg ecx  +
sbb ecx ecx +
push ebx  +
and ecx eax +
push ecx  +
push [ebp+var_8]  +
call ds:AddConsoleAliasW  +
test eax eax +
jnz loc_1001A1E  +
mov ecx [ebp+arg_8] +
mov eax [ecx] +
push 3  +
push edi  +
push 7727h  +
call dword ptr [eax+0Ch]  +
push offset dword_10011BC  +
push [ebp+arg_8]  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
pop ecx  +
pop ecx  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+8]  +
test al al +
jz loc_10018DE  +
mov esi [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_38] +
call esi  +
lea ecx [ebp+var_20] +
call esi  +
mov al 1 +
jmp loc_1001AA2  +
push 190h  +
jmp loc_10019A2  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
mov esi [ebp+arg_8] +
mov eax [esi] +
push 3  +
push edi  +
push 1B5Ch  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
add ebx 210h +
push ebx  +
push offset dword_10011C0  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_38] +
call esi  +
lea ecx [ebp+var_20] +
call esi  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+10h] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+28h] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx esi +
pop esi  +
jmp sub_1001AAE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4B8h +
push ebx  +
push esi  +
push edi  +
lea ecx [ebp+var_148] +
call ds:??0STREAM_MESSAGE@@QAE@XZ  +
lea ecx [ebp+var_4B8] +
call ds:??0ARGUMENT_LEXEMIZER@@QAE@XZ  +
mov esi ds:??0ARRAY@@QAE@XZ +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_20] +
call esi  +
mov edi ds:??0STRING_ARGUMENT@@QAE@XZ +
lea ecx [ebp+var_37C] +
call edi  +
mov esi ds:??0FLAG_ARGUMENT@@QAE@XZ +
lea ecx [ebp+var_2C0] +
call esi  +
lea ecx [ebp+var_290] +
call esi  +
mov ebx ds:??0LONG_ARGUMENT@@QAE@XZ +
lea ecx [ebp+var_1D0] +
call ebx  +
lea ecx [ebp+var_174] +
call ebx  +
lea ecx [ebp+var_88] +
call edi  +
lea ecx [ebp+var_230] +
call esi  +
lea ecx [ebp+var_B4] +
call edi  +
lea ecx [ebp+var_200] +
call esi  +
lea ecx [ebp+var_260] +
call esi  +
lea ecx [ebp+var_2F0] +
call esi  +
lea ecx [ebp+var_350] +
call esi  +
lea ecx [ebp+var_320] +
call esi  +
lea ecx [ebp+var_E0] +
call edi  +
lea ecx [ebp+var_1A4] +
call ds:??0PATH_ARGUMENT@@QAE@XZ  +
lea ecx [ebp+var_3BC] +
call ds:??0REST_OF_LINE_ARGUMENT@@QAE@XZ  +
lea ecx [ebp+var_40] +
call ds:??0DSTRING@@QAE@XZ  +
xor ebx ebx +
push ebx  +
push ebx  +
push 1  +
push ebx  +
call ds:HeapSetInformation  +
mov esi ds:?Get_Standard_Input_Stream@@YGPAVSTREAM@@XZ +
call esi  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+30h]  +
push ebx  +
call esi  +
push eax  +
call ds:?Get_Standard_Output_Stream@@YGPAVSTREAM@@XZ  +
push eax  +
lea ecx [ebp+var_148] +
call ds:?Initialize@STREAM_MESSAGE@@QAEEPAVSTREAM@@00@Z  +
test al al +
jz loc_10025EF  +
mov esi ds:?Initialize@ARRAY@@QAEEKK@Z +
push 19h  +
push 32h  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_10025EF  +
push 19h  +
push 32h  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_5C] +
push eax  +
lea ecx [ebp+var_4B8] +
call ds:?Initialize@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z  +
test al al +
jz loc_10025EF  +
push ebx  +
lea ecx [ebp+var_4B8] +
call ds:?SetCaseSensitive@ARGUMENT_LEXEMIZER@@QAEXE@Z  +
mov esi ds:?Initialize@WSTRING@@QAEEPBDK@Z +
push 0FFFFFFFFh  +
mov edi offset asc_10012AC +
push edi  +
lea ecx [ebp+var_454] +
call esi  +
push 0FFFFFFFFh  +
push edi  +
lea ecx [ebp+var_424] +
call esi  +
push offset asc_10012A8  +
lea ecx [ebp+var_4B8] +
call ds:?PutSeparators@ARGUMENT_LEXEMIZER@@QAEXPBD@Z  +
push ebx  +
lea ecx [ebp+var_4B8] +
call ds:?PrepareToParse@ARGUMENT_LEXEMIZER@@QAEEPAVWSTRING@@@Z  +
test al al +
jz loc_10025EF  +
push offset asc_10012A4  +
lea ecx [ebp+var_37C] +
call ds:?Initialize@STRING_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_10025EF  +
mov esi ds:?Initialize@FLAG_ARGUMENT@@QAEEPAD@Z +
push offset a?  +
lea ecx [ebp+var_2C0] +
call esi  +
test al al +
jz loc_10025EF  +
push offset aReinstall  +
lea ecx [ebp+var_290] +
call esi  +
test al al +
jz loc_10025EF  +
mov edi ds:?Initialize@LONG_ARGUMENT@@QAEEPAD@Z +
push offset aBufsize  +
lea ecx [ebp+var_1D0] +
call edi  +
test al al +
jz loc_10025EF  +
push offset aListsize  +
lea ecx [ebp+var_174] +
call edi  +
test al al +
jz loc_10025EF  +
push offset aMacros_0  +
lea ecx [ebp+var_B4] +
call ds:?Initialize@STRING_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_10025EF  +
push offset aM_0  +
lea ecx [ebp+var_88] +
call ds:?Initialize@STRING_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_10025EF  +
push offset aMacros  +
lea ecx [ebp+var_200] +
call esi  +
test al al +
jz loc_10025EF  +
push offset aM  +
lea ecx [ebp+var_230] +
call esi  +
test al al +
jz loc_10025EF  +
push offset aHistory  +
lea ecx [ebp+var_260] +
call esi  +
test al al +
jz loc_10025EF  +
push offset asc_100124C  +
lea ecx [ebp+var_2F0] +
call esi  +
test al al +
jz loc_10025EF  +
push offset aInsert  +
lea ecx [ebp+var_350] +
call esi  +
test al al +
jz loc_10025EF  +
push offset aOverstrike  +
lea ecx [ebp+var_320] +
call esi  +
test al al +
jz loc_10025EF  +
push offset aExename  +
lea ecx [ebp+var_E0] +
call ds:?Initialize@STRING_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_10025EF  +
push ebx  +
push offset aMacrofile  +
lea ecx [ebp+var_1A4] +
call ds:?Initialize@PATH_ARGUMENT@@QAEEPADE@Z  +
test al al +
jz loc_10025EF  +
lea ecx [ebp+var_3BC] +
call ds:?Initialize@REST_OF_LINE_ARGUMENT@@QAEEXZ  +
test al al +
jz loc_10025EF  +
mov esi ds:?Put@ARRAY@@UAEEPAVOBJECT@@@Z +
lea eax [ebp+var_37C] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_2C0] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_290] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_1D0] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_174] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_B4] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_88] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_200] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_230] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_260] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_2F0] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_350] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_320] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_E0] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_1A4] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_3BC] +
push eax  +
lea ecx [ebp+var_20] +
call esi  +
test al al +
jz loc_10025EF  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_4B8] +
call ds:?DoParsing@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z  +
test al al +
jnz loc_1002085  +
push 3  +
push ebx  +
push 0BD2h  +
lea ecx [ebp+var_148] +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
lea ecx [ebp+var_4B8] +
call ds:?QueryInvalidArgument@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@XZ  +
mov esi eax +
push esi  +
lea eax [ebp+var_148] +
push offset dword_10011C0  +
push eax  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
cmp esi ebx +
jz loc_1001F9F  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
xor esi esi +
inc esi  +
lea ecx [ebp+var_40] +
call ds:??1DSTRING@@UAE@XZ  +
lea ecx [ebp+var_3BC] +
call sub_1001ACA  +
lea ecx [ebp+var_1A4] +
call ds:??1PATH_ARGUMENT@@UAE@XZ  +
mov edi ds:??1STRING_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_E0] +
call edi  +
lea ecx [ebp+var_320] +
call sub_1001AAE  +
lea ecx [ebp+var_350] +
call sub_1001AAE  +
lea ecx [ebp+var_2F0] +
call sub_1001AAE  +
lea ecx [ebp+var_260] +
call sub_1001AAE  +
lea ecx [ebp+var_200] +
call sub_1001AAE  +
lea ecx [ebp+var_B4] +
call edi  +
lea ecx [ebp+var_230] +
call sub_1001AAE  +
lea ecx [ebp+var_88] +
call edi  +
lea ecx [ebp+var_174] +
call sub_1001AAE  +
lea ecx [ebp+var_1D0] +
call sub_1001AAE  +
lea ecx [ebp+var_290] +
call sub_1001AAE  +
lea ecx [ebp+var_2C0] +
call sub_1001AAE  +
lea ecx [ebp+var_37C] +
call edi  +
mov edi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_20] +
call edi  +
lea ecx [ebp+var_5C] +
call edi  +
lea ecx [ebp+var_4B8] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
lea ecx [ebp+var_148] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
mov eax esi +
jmp loc_10026CE  +
lea ecx [ebp+var_1D0] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
mov esi ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z +
mov edi ds:?Display@MESSAGE@@QAAEPBDZZ +
mov ebx offset dword_10011BC +
test al al +
jz loc_10020C3  +
push 3  +
push 0  +
push 7729h  +
lea ecx [ebp+var_148] +
call esi  +
lea eax [ebp+var_148] +
push ebx  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
cmp [ebp+var_294] 0 +
jz loc_10020F0  +
push 3  +
push 0  +
push 7728h  +
lea ecx [ebp+var_148] +
call esi  +
lea eax [ebp+var_148] +
push ebx  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
xor esi esi +
jmp loc_1001FA2  +
cmp [ebp+var_204] 0 +
jnz loc_1002102  +
cmp [ebp+var_1D4] 0 +
jz loc_100212A  +
lea ecx [ebp+var_B4] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jnz loc_10025CD  +
lea ecx [ebp+var_88] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jnz loc_10025CD  +
lea ecx [ebp+var_B4] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_100214E  +
lea ecx [ebp+var_88] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jnz loc_10025CD  +
lea ecx [ebp+var_E0] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_100218A  +
push [ebp+var_B8]  +
call sub_100136E  +
mov ecx [ebp+var_B8] +
push 1  +
xor eax eax +
push eax  +
push eax  +
push 0FFFFFFFFh  +
push eax  +
call ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1002191  +
jmp loc_1001F9F  +
mov [ebp+var_4] offset aCmd_exe +
cmp [ebp+var_264] 0 +
jz loc_10021A2  +
push [ebp+var_4]  +
call ExpungeConsoleCommandHistoryW  +
lea ecx [ebp+var_174] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_10021D1  +
push [ebp+var_4]  +
push [ebp+var_14C]  +
call SetConsoleNumberOfCommandsW  +
test eax eax +
jnz loc_10021D1  +
push 3  +
push eax  +
push 772Ah  +
jmp loc_10025D6  +
cmp [ebp+var_324] 0 +
jz loc_1002208  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
mov [ebp+hConsoleHandle] eax +
call ds:GetConsoleMode  +
test eax eax +
jz loc_1002208  +
mov eax [ebp+Mode] +
test al 20h +
jz loc_1002208  +
and eax 0FFFFFFDFh +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
cmp [ebp+var_2F4] 0 +
jz loc_100223F  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
lea ecx [ebp+var_44] +
push ecx  +
push eax  +
mov [ebp+Mode] eax +
call ds:GetConsoleMode  +
test eax eax +
jz loc_100223F  +
mov eax [ebp+var_44] +
test al 20h +
jnz loc_100223F  +
or eax 20h +
push eax  +
push [ebp+Mode]  +
call ds:SetConsoleMode  +
lea ecx [ebp+var_3BC] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_10022B3  +
lea eax [ebp+hConsoleHandle] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_394] +
push eax  +
call sub_10014B9  +
test al al +
jz loc_1002284  +
mov eax [ebp+hConsoleHandle] +
movzx ecx word ptr [eax] +
push [ebp+var_4]  +
neg ecx  +
sbb ecx ecx +
and ecx eax +
push ecx  +
push [ebp+var_28]  +
call ds:AddConsoleAliasW  +
test eax eax +
jnz loc_10022A1  +
push 3  +
push 0  +
push 7727h  +
lea ecx [ebp+var_148] +
call esi  +
lea eax [ebp+var_148] +
push ebx  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
push [ebp+var_28]  +
call sub_1001345  +
push [ebp+hConsoleHandle]  +
call sub_1001345  +
pop ecx  +
pop ecx  +
lea ecx [ebp+var_1A4] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_10022F1  +
mov eax [ebp+var_17C] +
add eax 210h +
push eax  +
call sub_100136E  +
lea eax [ebp+var_148] +
push eax  +
push [ebp+var_4]  +
push [ebp+var_17C]  +
call sub_1001835  +
test al al +
jz loc_1001F9F  +
cmp [ebp+var_234] 0 +
jnz loc_1002307  +
cmp [ebp+var_2C4] 0 +
jz loc_10023A6  +
push [ebp+var_4]  +
call GetConsoleCommandHistoryLengthW  +
mov esi eax +
mov eax large fs:18h +
mov eax [eax+30h] +
push esi  +
xor edi edi +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov ebx eax +
cmp ebx edi +
jnz loc_1002364  +
push 2C6h  +
push offset aDW7rtmBaseFsUt  +
call ds:?MakeFileToken@MESSAGE@@SG_KPBD@Z  +
push edx  +
push eax  +
push offset dword_10011CC  +
push 3  +
xor esi esi +
inc esi  +
push esi  +
lea eax [ebp+var_148] +
push 43Ch  +
push eax  +
call ds:?DisplayMsg@MESSAGE@@QAAEKW4MESSAGE_TYPE@@KPBDZZ  +
add esp 20h +
jmp loc_1001FA2  +
cmp esi edi +
jz loc_1002374  +
push [ebp+var_4]  +
push esi  +
push ebx  +
call GetConsoleCommandHistoryW  +
mov esi eax +
lea eax [ebp+var_148] +
push eax  +
push edi  +
shr esi 1 +
push esi  +
push ebx  +
call sub_10013D4  +
test al al +
jnz loc_1002390  +
push 2D3h  +
jmp loc_1002332  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ebx  +
push edi  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
jmp loc_10023A8  +
xor edi edi +
cmp [ebp+var_1D4] 0 +
jnz loc_10023BA  +
cmp [ebp+var_204] 0 +
jz loc_10023D2  +
lea eax [ebp+var_148] +
push eax  +
push edi  +
push [ebp+var_4]  +
call sub_10015A5  +
test al al +
jz loc_1001F9F  +
lea ecx [ebp+var_B4] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
mov esi offset aAll +
test al al +
jz loc_1002465  +
push [ebp+var_8C]  +
call sub_100136E  +
push 0FFFFFFFFh  +
push esi  +
lea ecx [ebp+var_40] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_1001F9F  +
push [ebp+var_38]  +
mov eax [ebp+var_8C] +
push dword ptr [eax+8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002433  +
lea eax [ebp+var_148] +
push eax  +
call sub_1001652  +
test al al +
jnz loc_1002465  +
jmp loc_1001F9F  +
mov ecx [ebp+var_8C] +
push 1  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push edi  +
call ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z  +
mov ebx eax +
lea eax [ebp+var_148] +
push eax  +
push edi  +
push ebx  +
call sub_10015A5  +
test al al +
jz loc_1001F9F  +
push ebx  +
call sub_1001345  +
pop ecx  +
lea ecx [ebp+var_88] +
call ds:?IsValueSet@ARGUMENT@@QAEEXZ  +
test al al +
jz loc_10024EA  +
push [ebp+var_60]  +
call sub_100136E  +
push 0FFFFFFFFh  +
push esi  +
lea ecx [ebp+var_40] +
call ds:?Initialize@WSTRING@@QAEEPBDK@Z  +
test al al +
jz loc_1001F9F  +
push [ebp+var_38]  +
mov eax [ebp+var_60] +
push dword ptr [eax+8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10024BB  +
lea eax [ebp+var_148] +
push eax  +
call sub_1001652  +
test al al +
jnz loc_10024EA  +
jmp loc_1001F9F  +
mov ecx [ebp+var_60] +
push 1  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push edi  +
call ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z  +
mov esi eax +
lea eax [ebp+var_148] +
push eax  +
push edi  +
push esi  +
call sub_10015A5  +
test al al +
jz loc_1001F9F  +
push esi  +
call sub_1001345  +
pop ecx  +
lea ecx [ebp+var_40] +
call ds:??1DSTRING@@UAE@XZ  +
lea ecx [ebp+var_3BC] +
call sub_1001ACA  +
lea ecx [ebp+var_1A4] +
call ds:??1PATH_ARGUMENT@@UAE@XZ  +
mov esi ds:??1STRING_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_E0] +
call esi  +
lea ecx [ebp+var_320] +
call sub_1001AAE  +
lea ecx [ebp+var_350] +
call sub_1001AAE  +
lea ecx [ebp+var_2F0] +
call sub_1001AAE  +
lea ecx [ebp+var_260] +
call sub_1001AAE  +
lea ecx [ebp+var_200] +
call sub_1001AAE  +
lea ecx [ebp+var_B4] +
call esi  +
lea ecx [ebp+var_230] +
call sub_1001AAE  +
lea ecx [ebp+var_88] +
call esi  +
lea ecx [ebp+var_174] +
call sub_1001AAE  +
lea ecx [ebp+var_1D0] +
call sub_1001AAE  +
lea ecx [ebp+var_290] +
call sub_1001AAE  +
lea ecx [ebp+var_2C0] +
call sub_1001AAE  +
lea ecx [ebp+var_37C] +
call esi  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_20] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_4B8] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
lea ecx [ebp+var_148] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
xor eax eax +
jmp loc_10026CE  +
push 3  +
push 0  +
push 7F4h  +
lea ecx [ebp+var_148] +
call esi  +
lea eax [ebp+var_148] +
push ebx  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
jmp loc_1001F9F  +
lea ecx [ebp+var_40] +
call ds:??1DSTRING@@UAE@XZ  +
lea ecx [ebp+var_3BC] +
call sub_1001ACA  +
lea ecx [ebp+var_1A4] +
call ds:??1PATH_ARGUMENT@@UAE@XZ  +
mov esi ds:??1STRING_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_E0] +
call esi  +
lea ecx [ebp+var_320] +
call sub_1001AAE  +
lea ecx [ebp+var_350] +
call sub_1001AAE  +
lea ecx [ebp+var_2F0] +
call sub_1001AAE  +
lea ecx [ebp+var_260] +
call sub_1001AAE  +
lea ecx [ebp+var_200] +
call sub_1001AAE  +
lea ecx [ebp+var_B4] +
call esi  +
lea ecx [ebp+var_230] +
call sub_1001AAE  +
lea ecx [ebp+var_88] +
call esi  +
lea ecx [ebp+var_174] +
call sub_1001AAE  +
lea ecx [ebp+var_1D0] +
call sub_1001AAE  +
lea ecx [ebp+var_290] +
call sub_1001AAE  +
lea ecx [ebp+var_2C0] +
call sub_1001AAE  +
lea ecx [ebp+var_37C] +
call esi  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_20] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_4B8] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
lea ecx [ebp+var_148] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1002723  +
test eax eax +
jnz loc_1002728  +
mov ecx [esi] +
test ecx ecx +
jz loc_1002720  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1002714  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100403C +
push offset dword_100402C  +
push dword_1004038  +
mov dword_100402C eax +
push offset dword_100401C  +
push offset dword_1004020  +
push offset dword_1004018  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1004028 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10027B0  +
cmp eax esi +
jnz loc_10027A3  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10027B3  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100278A  +
xor esi esi +
inc esi  +
mov eax dword_100436C +
cmp eax esi +
jnz loc_10027C6  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1002801  +
mov eax dword_100436C +
test eax eax +
jnz loc_10027FB  +
mov dword_100436C esi +
push offset dword_1001190  +
push offset dword_1001184  +
call sub_1002707  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002801  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10028CB  +
mov dword_1004034 esi +
mov eax dword_100436C +
cmp eax esi +
jnz loc_1002825  +
push offset dword_1001180  +
push offset dword_1001178  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100436C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1002832  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1004374 ebx +
jz loc_1002853  +
push offset dword_1004374  +
call sub_1002AA9  +
pop ecx  +
test eax eax +
jz loc_1002853  +
push ebx  +
push 2  +
push ebx  +
call dword_1004374  +
push dword_100401C  +
push dword_1004020  +
push dword_1004018  +
call sub_1001AE5  +
add esp 0Ch +
mov dword_1004030 eax +
cmp dword_1004024 ebx +
jnz loc_10028B1  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1004030 eax +
xor ebx ebx +
cmp dword_1004024 ebx +
jnz loc_10028B1  +
push eax  +
call ds:_exit  +
cmp dword_1004034 ebx +
jnz loc_10028BF  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1004030 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10028E8  +
xor eax eax +
jmp loc_1002935  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10028E4  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1002922  +
cmp ecx 20Bh +
jnz loc_10028E4  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10028E4  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1002930  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10028E4  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1004024 eax +
call sub_1002C42  +
push eax  +
call ds:__set_app_type  +
or dword_1004364 0FFFFFFFFh +
or dword_1004368 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1004044 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1004040 +
mov [eax] ecx +
call sub_1002BD4  +
cmp dword_1004008 0 +
jnz loc_100298E  +
push offset sub_1002BD4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1002BBC  +
xor eax eax +
retn   +
***
call sub_1002C81  +
jmp sub_1002768  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10029E7  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10029E7  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10029E1  +
cmp eax 19930521h +
jz loc_10029E1  +
cmp eax 19930522h +
jz loc_10029E1  +
cmp eax 1994000h +
jnz loc_10029E7  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_10029A8+2)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1002A36  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1002A32  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1002A9D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1002A95  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1002A9F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1002A85  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002A20  +
pop ecx  +
test eax eax +
jz loc_1002B06  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1002A60  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002B06  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1002B0F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset loc_1002D17  +
push offset dword_100400C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002C35  +
cmp ecx 0FFFFFFFFh +
jz loc_1002C35  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1002C2E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1002C2E  +
cmp edx 10000000h +
jnb loc_1002C2E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1002C2E  +
jmp loc_1002C29  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1002C77  +
push eax  +
call sub_1002BDC  +
test eax eax +
jz loc_1002C77  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1002C6C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1002C77  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100400C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1002CB3  +
test eax ebx +
jz loc_1002CB3  +
not eax  +
mov dword_1004010 eax +
jmp loc_1002D0E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1002CFA  +
test dword_100400C ebx +
jnz loc_1002CFF  +
mov esi 0BB40E64Fh +
mov dword_100400C esi +
not esi  +
mov dword_1004010 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
cmp ecx dword_100400C +
jnz loc_1002D22  +
retn 0  +
***
jmp loc_1002D37  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1004148 eax +
mov dword_1004144 ecx +
mov dword_1004140 edx +
mov dword_100413C ebx +
mov dword_1004138 esi +
mov dword_1004134 edi +
mov word_1004160 ss +
mov word_1004154 cs +
mov word_1004130 ds +
mov word_100412C es +
mov word_1004128 fs +
mov word_1004124 gs +
pushf   +
pop dword_1004158  +
mov eax [ebp+0] +
mov dword_100414C eax +
mov eax [ebp+4] +
mov dword_1004150 eax +
lea eax [ebp+8] +
mov dword_100415C eax +
mov eax [ebp-320h] +
mov dword_1004098 10001h +
mov eax dword_1004150 +
mov dword_1004054 eax +
mov dword_1004048 0C0000409h +
mov dword_100404C 1 +
mov eax dword_100400C +
mov [ebp-328h] eax +
mov eax dword_1004010 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset off_10012B0  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
arpl [ebp+73h] sp +
jnb $+2  +
iret   +
***
