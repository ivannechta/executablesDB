sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi offset off_464FE8 +
mov ebx eax +
push esi  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_4] edi +
mov [ebp+var_10] edi +
mov [ebp+var_28] edi +
mov [ebp+var_C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_24] edi +
mov [ebp+var_20] edi +
mov [ebp+var_14] 1 +
mov [ebp+var_8] edi +
call sub_43B5E2  +
add esp 0Ch +
mov dword_4659B8 eax +
cmp eax 0FFFFFFFFh +
jz loc_4010F1  +
inc edi  +
cmp eax 8 +
ja loc_401103  +
jmp ds:off_401140[eax*4]  +
call sub_4291AC  +
mov [ebp+var_10] eax +
jmp loc_4010A9  +
call sub_4295C2  +
mov [ebp+var_4] eax +
jmp loc_4010A9  +
mov eax lpLibFileName +
mov [ebp+var_28] eax +
jmp loc_4010A9  +
mov [ebp+var_18] 1 +
jmp loc_4010A9  +
mov [ebp+var_1C] 1 +
jmp loc_4010A9  +
mov [ebp+var_C] 1 +
jmp loc_4010A9  +
mov [ebp+var_24] 1 +
jmp loc_4010A9  +
mov [ebp+var_20] 1 +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_4659B8 eax +
cmp eax 0FFFFFFFFh +
jnz loc_40104F  +
test edi edi +
jz loc_4010F1  +
push [ebp+arg_0]  +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_4010F1  +
xor esi esi +
cmp [ebp+var_4] esi +
jnz loc_40110B  +
push [ebp+var_10]  +
lea ebx [ebp+var_4] +
call sub_429A20  +
pop ecx  +
cmp eax esi +
jz loc_40110B  +
mov [ebp+var_14] eax +
jmp loc_4010F6  +
and [ebp+var_14] 0 +
call sub_401164  +
cmp [ebp+var_14] 0 +
jnz loc_401103  +
xor eax eax +
cmp [ebp+var_8] eax +
jz loc_401106  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
cmp [ebp+var_18] esi +
jz loc_40111B  +
mov eax [ebp+var_C] +
call sub_40120B  +
mov [ebp+var_8] eax +
cmp [ebp+var_1C] esi +
jz loc_4010FC  +
push [ebp+var_20]  +
push [ebp+var_24]  +
push [ebp+var_C]  +
push [ebp+var_28]  +
push [ebp+var_10]  +
push [ebp+var_4]  +
call sub_40174F  +
add esp 18h +
or [ebp+var_8] eax +
jmp loc_4010FC  +
***
push offset aSAbsorbOptions  +
sub esp 10h +
push ecx  +
push ecx  +
xor eax eax +
test ecx ecx +
inc esi  +
sub esp 18h +
sub esp 14h +
push [ebp+cchWideChar]  +
push ecx  +
push ecx  +
push ecx  +
cmp [ebp+arg_C] 1 +
sub esp 10h +
sub esp 2Ch +
sub esp 5Ch +
push ebx  +
push ecx  +
sub esp 10h +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov esi offset off_464E80 +
push esi  +
push [ebp+arg_4]  +
xor edi edi +
push [ebp+arg_0]  +
mov [ebp+var_24] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
inc edi  +
mov [ebp+var_4] ebx +
call sub_43B5E2  +
add esp 0Ch +
mov dword_4659BC eax +
cmp eax 0FFFFFFFFh +
jz loc_40233A  +
inc [ebp+var_4]  +
cmp eax 8 +
ja loc_40233F  +
jmp ds:off_402346[eax*4]  +
call sub_4291AC  +
mov [ebp+var_20] eax +
jmp loc_4022DB  +
call sub_4291AC  +
mov [ebp+var_1C] eax +
jmp loc_4022DB  +
call sub_4295C2  +
mov [ebp+var_18] eax +
jmp loc_4022DB  +
push lpLibFileName  +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_10] eax +
mov [ebp+var_14] 1 +
jmp loc_4022DB  +
mov [ebp+var_28] 1 +
mov eax lpLibFileName +
mov [ebp+var_24] eax +
jmp loc_4022DB  +
mov [ebp+var_C] 1 +
jmp loc_4022DB  +
mov [ebp+var_8] 1 +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_4659BC eax +
cmp eax 0FFFFFFFFh +
jnz loc_402270  +
cmp [ebp+var_4] ebx +
jz loc_40233A  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_40233A  +
push [ebp+var_8]  +
mov eax [ebp+var_28] +
push [ebp+var_C]  +
push [ebp+var_10]  +
push [ebp+var_14]  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
push [ebp+var_24]  +
call sub_40241F  +
mov edi eax +
add esp 20h +
test edi edi +
jnz loc_40233F  +
jmp loc_40233F  +
xor edi edi +
call sub_40236A  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push offset aSCertkeyOption  +
sub esp 18h +
test edi edi +
push ecx  +
push ecx  +
sub esp 0Ch +
push offset aSCertlicComman  +
push ecx  +
push ecx  +
sub esp 188h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi offset a1_2_643_2_2_21 +
lea edi [ebp+var_44] +
movs   +
xor ebx ebx +
movs   +
movs   +
movs   +
push 31h  +
mov [ebp+var_7C] eax +
lea eax [ebp+var_35] +
push ebx  +
push eax  +
mov [ebp+var_4C] 1 +
mov [ebp+hObject] ebx +
mov [ebp+var_6C] ebx +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_68] ebx +
mov [ebp+var_50] ebx +
mov [ebp+lpMultiByteStr] ebx +
mov [ebp+var_80] ebx +
mov [ebp+var_70] ebx +
mov [ebp+var_84] ebx +
mov [ebp+var_88] ebx +
mov [ebp+var_78] ebx +
mov [ebp+var_58] ebx +
movs   +
call memset  +
push offset off_464D10  +
push [ebp+var_7C]  +
mov [ebp+var_60] 1 +
push [ebp+arg_0]  +
mov [ebp+var_74] ebx +
call sub_43B5E2  +
add esp 18h +
mov dword_4659C4 eax +
cmp eax 0FFFFFFFFh +
jz loc_40300E  +
inc [ebp+var_74]  +
push 4  +
pop edi  +
cmp eax 10h +
ja loc_403015  +
jmp ds:off_4030EB[eax*4]  +
mov [ebp+var_78] 1 +
jmp loc_402FBE  +
mov eax lpLibFileName +
mov edx offset aSimple +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_402C6C  +
cmp si bx +
jz loc_402C68  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_402C6C  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_402C48  +
xor ecx ecx +
jmp loc_402C71  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_402C7D  +
mov [ebp+var_50] ebx +
jmp loc_402FBE  +
mov edx offset aAgree +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_402CA8  +
cmp si bx +
jz loc_402CA4  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_402CA8  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_402C84  +
xor ecx ecx +
jmp loc_402CAD  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_402CBD  +
mov [ebp+var_50] 1 +
jmp loc_402FBE  +
mov edx offset aTrans +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_402CE8  +
cmp si bx +
jz loc_402CE4  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_402CE8  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_402CC4  +
xor ecx ecx +
jmp loc_402CED  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_402CFD  +
mov [ebp+var_50] 2 +
jmp loc_402FBE  +
mov ecx offset aAuto +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_402D26  +
cmp dx bx +
jz loc_402D22  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_402D26  +
add eax edi +
add ecx edi +
cmp dx bx +
jnz loc_402D02  +
xor eax eax +
jmp loc_402D2B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_40303B  +
mov [ebp+var_50] 3 +
jmp loc_402FBE  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_402FBE  +
mov eax lpLibFileName +
mov [ebp+var_6C] eax +
jmp loc_402FBE  +
mov eax lpLibFileName +
mov [ebp+var_54] eax +
jmp loc_402FBE  +
mov eax lpLibFileName +
mov [ebp+var_54] eax +
mov [ebp+var_70] 1 +
jmp loc_402FBE  +
mov esi lpLibFileName +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402D85  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpMultiByteStr] eax +
cmp eax ebx +
jz loc_40304D  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_402DAD  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax esi +
lea edx [eax+2] +
mov di [eax] +
add eax 2 +
cmp di bx +
jnz loc_402DC3  +
push ebx  +
sub eax edx +
push ebx  +
sar eax 1 +
inc ecx  +
push ecx  +
push [ebp+lpMultiByteStr]  +
inc eax  +
push eax  +
push esi  +
push ebx  +
push ebx  +
call ds:WideCharToMultiByte  +
jmp loc_402FBE  +
cmp [ebp+var_48] 40h +
ja loc_40306A  +
mov eax [ebp+var_48] +
mov dword_4659C8[eax*4] ebx +
mov ecx lpLibFileName +
inc [ebp+var_48]  +
mov [ebp+eax*4+var_188] ecx +
jmp loc_402FBE  +
cmp [ebp+var_48] 40h +
ja loc_40306A  +
mov eax [ebp+var_48] +
mov dword_4659C8[eax*4] 1 +
jmp loc_402DFD  +
mov [ebp+var_80] 1 +
jmp loc_402FBE  +
mov [ebp+var_84] 1 +
jmp loc_402FBE  +
mov [ebp+var_88] 1 +
jmp loc_402FBE  +
or [ebp+var_68] 40h +
jmp loc_402FBE  +
mov eax lpLibFileName +
mov edx offset aRc2 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_402E8F  +
cmp si bx +
jz loc_402E8B  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_402E8F  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_402E6B  +
xor ecx ecx +
jmp loc_402E94  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_402EA2  +
mov esi offset a1_2_840_113549 +
jmp loc_402F5A  +
mov edx offset aRc4 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_402ECD  +
cmp si bx +
jz loc_402EC9  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_402ECD  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_402EA9  +
xor ecx ecx +
jmp loc_402ED2  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_402EDD  +
mov esi offset a1_2_840_1135_0 +
jmp loc_402F5A  +
mov edx offset off_445518 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_402F08  +
cmp si bx +
jz loc_402F04  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_402F08  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_402EE4  +
xor ecx ecx +
jmp loc_402F0D  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_402F21  +
mov esi offset a1_3_14_3_2_7 +
lea edi [ebp+var_44] +
movs   +
movs   +
movs   +
jmp loc_402FA3  +
mov edx offset a3des +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_402F4C  +
cmp si bx +
jz loc_402F48  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_402F4C  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_402F28  +
xor ecx ecx +
jmp loc_402F51  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_402F60  +
mov esi offset a1_2_840_1135_1 +
lea edi [ebp+var_44] +
movs   +
jmp loc_402F9E  +
mov ecx offset aGost +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_402F89  +
cmp dx bx +
jz loc_402F85  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_402F89  +
add eax edi +
add ecx edi +
cmp dx bx +
jnz loc_402F65  +
xor eax eax +
jmp loc_402F8E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_40307B  +
mov esi offset a1_2_643_2_2_21 +
lea edi [ebp+var_44] +
movs   +
movs   +
movs   +
movs   +
movs   +
jmp loc_402FBE  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_60] eax +
cmp eax ebx +
jz loc_40307F  +
push offset off_464D10  +
push [ebp+var_7C]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_4659C4 eax +
cmp eax 0FFFFFFFFh +
jnz loc_402C1A  +
cmp [ebp+var_74] ebx +
jz loc_40300E  +
push [ebp+arg_0]  +
mov ebx [ebp+var_7C] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_40300C  +
cmp [ebp+var_84] eax +
jnz loc_40308C  +
cmp [ebp+var_88] eax +
jnz loc_4030B8  +
xor ebx ebx +
mov [ebp+var_58] 1 +
push [ebp+lpMultiByteStr]  +
call ds:free  +
cmp [ebp+var_58] ebx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
jz loc_40302C  +
call sub_40312F  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_4C] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
push 0Ch  +
mov eax offset off_464D10 +
call sub_42905C  +
pop ecx  +
mov [ebp+var_4C] eax +
jmp loc_403015  +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 0D2h  +
push offset aCryptlo_c  +
call sub_437C8E  +
add esp 14h +
jmp loc_403048  +
push 40h  +
push offset aTooManyRecipie  +
call ds:printf  +
pop ecx  +
pop ecx  +
jmp loc_403015  +
push 0Dh  +
jmp loc_40303D  +
push dword_4659C4  +
jmp loc_40303D  +
mov [ebp+var_4C] ebx +
jmp loc_40300E  +
push [ebp+var_60]  +
mov edx [ebp+hObject] +
push [ebp+var_50]  +
lea eax [ebp+var_44] +
push [ebp+var_70]  +
lea ecx [ebp+var_188] +
push [ebp+var_78]  +
push [ebp+var_80]  +
push eax  +
push [ebp+var_48]  +
push [ebp+var_54]  +
push [ebp+var_6C]  +
call sub_403257  +
jmp loc_4030DB  +
push [ebp+var_68]  +
mov ecx [ebp+var_6C] +
push [ebp+var_60]  +
push [ebp+var_50]  +
push [ebp+var_70]  +
push [ebp+var_78]  +
push [ebp+var_80]  +
push [ebp+lpMultiByteStr]  +
push [ebp+var_54]  +
push [ebp+hObject]  +
call sub_4038FD  +
add esp 24h +
mov [ebp+var_4C] eax +
xor ebx ebx +
jmp loc_403015  +
***
push offset aSLowencCommand  +
and esp 0FFFFFFF8h +
sub esp 98h +
sub esp 1E8h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi offset a1_2_643_2_2_21 +
lea edi [ebp+var_44] +
movs   +
movs   +
xor ebx ebx +
movs   +
movs   +
push 31h  +
mov [ebp+var_DC] eax +
lea eax [ebp+var_35] +
push ebx  +
push eax  +
mov [ebp+hObject] ebx +
mov [ebp+var_C8] ebx +
mov [ebp+var_B8] ebx +
mov [ebp+var_AC] ebx +
mov [ebp+var_B0] 1 +
mov [ebp+var_C4] ebx +
mov [ebp+var_E0] ebx +
mov [ebp+var_E8] ebx +
mov [ebp+var_D0] ebx +
mov [ebp+var_B4] ebx +
mov [ebp+var_D8] ebx +
mov [ebp+var_C0] ebx +
mov [ebp+var_E4] ebx +
movs   +
call memset  +
push offset off_464C10  +
push [ebp+var_DC]  +
mov [ebp+lpMultiByteStr] ebx +
push [ebp+arg_0]  +
mov [ebp+var_D4] ebx +
call sub_43B5E2  +
add esp 18h +
mov dword_465AC8 eax +
cmp eax 0FFFFFFFFh +
jz loc_4044C5  +
inc [ebp+var_D4]  +
push 40h  +
pop ecx  +
push 4  +
pop edi  +
cmp eax 0Eh +
ja loc_4044CF  +
jmp ds:off_404618[eax*4]  +
mov [ebp+var_E4] 1 +
jmp loc_40446C  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_40446C  +
mov eax lpLibFileName +
mov [ebp+var_C8] eax +
jmp loc_40446C  +
mov eax lpLibFileName +
mov [ebp+var_B8] eax +
jmp loc_40446C  +
mov eax lpLibFileName +
mov [ebp+var_B8] eax +
mov [ebp+var_C4] 1 +
jmp loc_40446C  +
mov esi lpLibFileName +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_404221  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpMultiByteStr] eax +
cmp eax ebx +
jz loc_4044FE  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_40424C  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax esi +
lea edx [eax+2] +
mov di [eax] +
add eax 2 +
cmp di bx +
jnz loc_404262  +
push ebx  +
sub eax edx +
push ebx  +
sar eax 1 +
inc ecx  +
push ecx  +
push [ebp+lpMultiByteStr]  +
inc eax  +
push eax  +
push esi  +
push ebx  +
push ebx  +
call ds:WideCharToMultiByte  +
jmp loc_40446C  +
or [ebp+var_B4] ecx +
jmp loc_40446C  +
cmp [ebp+var_AC] ecx +
jg loc_404521  +
mov eax [ebp+var_AC] +
mov dword_465AD0[eax*4] ebx +
mov ecx lpLibFileName +
inc [ebp+var_AC]  +
mov [ebp+eax*4+var_1E8] ecx +
jmp loc_40446C  +
cmp [ebp+var_AC] ecx +
jg loc_404554  +
mov eax [ebp+var_AC] +
mov dword_465AD0[eax*4] 1 +
jmp loc_4042AF  +
mov [ebp+var_E0] 1 +
jmp loc_40446C  +
mov [ebp+var_D0] 1 +
jmp loc_40446C  +
mov [ebp+var_E8] 1 +
jmp loc_40446C  +
or [ebp+var_B4] ecx +
or [ebp+var_D8] ecx +
jmp loc_40446C  +
mov eax lpLibFileName +
mov edx offset aRc2 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_404354  +
cmp si bx +
jz loc_404350  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_404354  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_404330  +
xor ecx ecx +
jmp loc_404359  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_40436B  +
mov esi offset a1_2_840_113549 +
lea edi [ebp+var_44] +
movs   +
jmp loc_404466  +
mov edx offset aRc4 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_404396  +
cmp si bx +
jz loc_404392  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_404396  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_404372  +
xor ecx ecx +
jmp loc_40439B  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_4043A6  +
mov esi offset a1_2_840_1135_0 +
jmp loc_404362  +
mov edx offset off_445518 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_4043D1  +
cmp si bx +
jz loc_4043CD  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_4043D1  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_4043AD  +
xor ecx ecx +
jmp loc_4043D6  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_4043EA  +
mov esi offset a1_3_14_3_2_7 +
lea edi [ebp+var_44] +
movs   +
movs   +
movs   +
jmp loc_40446B  +
mov edx offset a3des +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_404415  +
cmp si bx +
jz loc_404411  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_404415  +
add ecx edi +
add edx edi +
cmp si bx +
jnz loc_4043F1  +
xor ecx ecx +
jmp loc_40441A  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx ebx +
jnz loc_404428  +
mov esi offset a1_2_840_1135_1 +
jmp loc_404362  +
mov ecx offset aGost +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_404451  +
cmp dx bx +
jz loc_40444D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_404451  +
add eax edi +
add ecx edi +
cmp dx bx +
jnz loc_40442D  +
xor eax eax +
jmp loc_404456  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_404577  +
mov esi offset a1_2_643_2_2_21 +
lea edi [ebp+var_44] +
movs   +
movs   +
movs   +
movs   +
movs   +
push offset off_464C10  +
push [ebp+var_DC]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465AC8 eax +
cmp eax 0FFFFFFFFh +
jnz loc_4041A1  +
cmp [ebp+var_D4] ebx +
jz loc_4044C5  +
push [ebp+arg_0]  +
mov ebx [ebp+var_DC] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_4044C3  +
cmp [ebp+var_E0] eax +
jnz loc_404591  +
cmp [ebp+var_E8] eax +
jnz loc_4045D6  +
xor ebx ebx +
mov [ebp+var_C0] 1 +
push [ebp+lpMultiByteStr]  +
call ds:free  +
cmp [ebp+var_C0] ebx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
jz loc_4044EC  +
call sub_404654  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_B0] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 0A8h  +
push offset aCryptsf_c  +
call sub_437C8E  +
add esp 14h +
mov [ebp+var_B0] eax +
jmp loc_4044CF  +
push ecx  +
lea eax [ebp+var_A8] +
push offset aTooManyRecip_0  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_A8] +
push eax  +
push 0Fh  +
push 0B5h  +
push offset aCryptsf_c  +
call sub_437C6A  +
add esp 1Ch +
jmp loc_4044CF  +
push ecx  +
lea eax [ebp+var_A8] +
push offset aTooManyRecipie  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_A8] +
push eax  +
push 0Fh  +
push 0C0h  +
jmp loc_404542  +
push 0Ch  +
mov eax offset off_464C10 +
call sub_42905C  +
pop ecx  +
jmp loc_404519  +
mov [ebp+var_B0] ebx +
jmp loc_4044C5  +
push [ebp+var_D8]  +
lea eax [ebp+var_44] +
push [ebp+var_C4]  +
push [ebp+var_E4]  +
push eax  +
push [ebp+var_D0]  +
lea eax [ebp+var_1E8] +
push [ebp+var_AC]  +
push eax  +
push [ebp+var_B8]  +
push [ebp+var_C8]  +
push [ebp+hObject]  +
call sub_40475D  +
add esp 28h +
jmp loc_404608  +
push [ebp+var_B4]  +
push [ebp+var_C4]  +
push [ebp+var_D0]  +
push [ebp+lpMultiByteStr]  +
push [ebp+var_B8]  +
push [ebp+var_C8]  +
push [ebp+hObject]  +
call sub_404C81  +
add esp 1Ch +
mov [ebp+var_B0] eax +
xor ebx ebx +
jmp loc_4044CF  +
***
push offset aSSfencCommandO  +
and esp 0FFFFFFF8h +
sub esp 3Ch +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
xor eax eax +
mov esi offset off_464B70 +
push esi  +
xor edi edi +
push ebx  +
push [ebp+arg_0]  +
inc edi  +
mov [ebp+var_10] eax +
mov [ebp+var_28] eax +
mov [ebp+var_18] eax +
mov [ebp+var_24] eax +
mov byte ptr [ebp+var_14] al +
mov [ebp+var_8] edi +
mov [ebp+hObject] eax +
mov [ebp+var_2C] eax +
mov [ebp+var_20] eax +
mov [ebp+var_4] eax +
mov [ebp+var_C] eax +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465ACC eax +
cmp eax 0FFFFFFFFh +
jz loc_40504A  +
inc [ebp+var_C]  +
cmp eax 8 +
ja loc_40504D  +
jmp ds:off_405090[eax*4]  +
inc byte ptr [ebp+var_14]  +
jmp loc_404FE1  +
mov [ebp+var_10] edi +
jmp loc_404FE1  +
mov [ebp+var_18] edi +
jmp loc_404FE1  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_404FE1  +
mov eax lpLibFileName +
mov [ebp+var_2C] eax +
jmp loc_404FE1  +
mov eax lpLibFileName +
mov [ebp+var_20] eax +
jmp loc_404FE1  +
mov [ebp+var_28] edi +
jmp loc_404FE1  +
mov [ebp+var_24] edi +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465ACC eax +
cmp eax 0FFFFFFFFh +
jnz loc_404F99  +
cmp [ebp+var_C] 0 +
jz loc_40504A  +
push [ebp+arg_0]  +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_40504A  +
xor esi esi +
cmp [ebp+var_18] esi +
jz loc_405021  +
cmp [ebp+var_10] esi +
jnz loc_40504A  +
cmp [ebp+var_20] esi +
jz loc_40504A  +
cmp [ebp+hObject] esi +
jz loc_40504A  +
push 7Fh  +
push esi  +
push offset aPcsc  +
call sub_432559  +
add esp 0Ch +
mov dword_52605C eax +
cmp [ebp+var_10] esi +
jz loc_40506C  +
push [ebp+var_14]  +
call sub_405185  +
pop ecx  +
jmp loc_405088  +
and [ebp+var_8] 0 +
mov [ebp+var_4] edi +
call sub_4325D9  +
and dword_52605C 0 +
cmp [ebp+var_4] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_405067  +
call sub_4050B4  +
mov eax [ebp+var_8] +
leave   +
retn   +
cmp [ebp+var_18] esi +
jz loc_40504A  +
push [ebp+var_24]  +
push [ebp+var_28]  +
push [ebp+var_2C]  +
push [ebp+hObject]  +
push [ebp+var_20]  +
call sub_40580D  +
add esp 14h +
mov [ebp+var_8] eax +
jmp loc_40504D  +
***
push dword_52607C  +
and esp 0FFFFFFF8h +
sub esp 44h +
sub esp 40h +
sub esp 0Ch +
sub esp 118h +
sub esp 118h +
push ecx  +
push ecx  +
and esp 0FFFFFFF8h +
mov eax 30014h +
lea ecx [eax-30h] +
push ecx  +
push esi  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
push 2  +
inc edi  +
pop ebx  +
mov [ebp+var_10] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_20] esi +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
mov [ebp+var_8] edi +
mov [ebp+var_4] esi +
call sub_428F5F  +
xor eax eax +
call sub_4155B0  +
mov [ebp+var_18] eax +
cmp eax esi +
jnz loc_40631F  +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 90h  +
jmp loc_40660F  +
mov esi [ebp+arg_4] +
mov eax [esi] +
and lpLibFileName 0 +
and dword_4633A4 0 +
mov dword_4633A8 edi +
mov edi [ebp+arg_0] +
mov dword_52607C eax +
jmp loc_4063E7  +
cmp eax 19h +
jg loc_406385  +
jz loc_40637F  +
mov ecx eax +
sub ecx 15h +
jz loc_406376  +
dec ecx  +
jz loc_4063E7  +
dec ecx  +
jz loc_40636D  +
dec ecx  +
jnz loc_40640F  +
mov [ebp+var_20] 1 +
jmp loc_4063E7  +
mov [ebp+var_1C] 1 +
jmp loc_4063E7  +
mov [ebp+var_14] 1 +
jmp loc_4063E7  +
and [ebp+var_8] 0 +
jmp loc_4063E7  +
cmp eax 1Ah +
jz loc_406420  +
cmp eax 1Fh +
jz loc_4063BF  +
cmp eax 25h +
jnz loc_406406  +
call sub_406737  +
test eax eax +
jnz loc_4063E7  +
push offset aErrorInitializ  +
push 0Fh  +
push 0B0h  +
push offset aCsptest_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_40659F  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_C] eax +
test eax eax +
jle loc_4063E3  +
push eax  +
push 0  +
call off_4633B4  +
pop ecx  +
pop ecx  +
mov [ebp+var_4] eax +
jmp loc_4063E7  +
and [ebp+var_4] 0 +
push offset off_464910  +
push esi  +
push edi  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BD0 eax +
cmp eax 0FFFFFFFFh +
jnz loc_406345  +
jmp loc_406414  +
cmp eax 3Fh +
jz loc_4065A1  +
cmp eax 0FFFFFFFFh +
jnz loc_40642E  +
mov [ebp+var_10] 1 +
jmp loc_4065A1  +
mov [ebp+var_10] 1 +
xor ebx ebx +
jmp loc_4065A1  +
push [ebp+var_8]  +
call sub_441A10  +
test eax eax +
jnz loc_406458  +
push offset aCannotSetCapiU  +
push 0Fh  +
push 0CDh  +
push offset aCsptest_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_4065A1  +
mov eax dword_465BD0 +
cmp eax 24h +
ja loc_4065A1  +
jmp ds:off_4066A3[eax*4]  +
push esi  +
push edi  +
call sub_410C6F  +
jmp loc_40659D  +
push esi  +
push edi  +
call sub_424DC7  +
jmp loc_40659D  +
push esi  +
push edi  +
call sub_422B6E  +
jmp loc_40659D  +
push esi  +
push edi  +
call sub_402B83  +
jmp loc_40659D  +
push esi  +
push edi  +
call sub_4040E4  +
jmp loc_40659D  +
push edi  +
mov eax esi +
call sub_40E0B9  +
jmp loc_40659E  +
push edi  +
mov ecx esi +
call sub_4203CF  +
jmp loc_40659E  +
push esi  +
push edi  +
call sub_402222  +
jmp loc_40659D  +
push edi  +
mov eax esi +
call sub_401000  +
jmp loc_40659E  +
push esi  +
push edi  +
call sub_410486  +
jmp loc_40659D  +
push esi  +
push edi  +
call sub_42FACC  +
jmp loc_40659D  +
push edi  +
mov ecx esi +
call sub_42CAD8  +
jmp loc_40659E  +
push esi  +
push edi  +
call sub_4028E0  +
jmp loc_40659D  +
push esi  +
push edi  +
call sub_4222D9  +
jmp loc_40659D  +
push edi  +
mov eax esi +
call sub_421115  +
jmp loc_40659E  +
push esi  +
push edi  +
call sub_40D545  +
jmp loc_40659D  +
push 13h  +
mov eax offset off_464910 +
call sub_4290B5  +
dec edi  +
lea ecx [esi+4] +
push edi  +
call sub_4131E6  +
jmp loc_40659D  +
push edi  +
mov ecx esi +
call sub_40E553  +
jmp loc_40659E  +
push edi  +
mov eax esi +
call sub_404F48  +
jmp loc_40659E  +
push esi  +
push edi  +
call sub_418914  +
jmp loc_40659D  +
push esi  +
push edi  +
call sub_426051  +
jmp loc_40659D  +
push edi  +
mov edx esi +
call sub_415712  +
jmp loc_40659E  +
push esi  +
push edi  +
call sub_412AE8  +
jmp loc_40659D  +
push edi  +
mov edx esi +
call sub_4177D5  +
jmp loc_40659E  +
push esi  +
push edi  +
call sub_4068F8  +
jmp loc_40659D  +
cmp [ebp+var_8] 0 +
jnz loc_4065A1  +
push esi  +
push edi  +
call sub_42C0E6  +
pop ecx  +
pop ecx  +
mov ebx eax +
xor esi esi +
cmp [ebp+var_4] esi +
jz loc_4065C3  +
cmp [ebp+var_C] esi +
jle loc_4065C3  +
push [ebp+var_C]  +
push esi  +
push [ebp+var_4]  +
call off_4633B8  +
add esp 0Ch +
cmp eax esi +
jz loc_4065C3  +
mov ebx eax +
cmp [ebp+var_10] esi +
jz loc_4065CD  +
call sub_4067A2  +
cmp [ebp+var_14] esi +
jnz loc_40661E  +
mov eax [ebp+var_18] +
call sub_4155B0  +
mov esi eax +
test esi esi +
jz loc_4065FD  +
push offset aTotal  +
call ds:printf  +
mov eax esi +
call sub_415634  +
push esi  +
call ds:free  +
pop ecx  +
pop ecx  +
jmp loc_40661E  +
test ebx ebx +
jnz loc_40661E  +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 15Bh  +
push offset aCsptest_c  +
call sub_437C8E  +
mov ebx eax +
add esp 14h +
push [ebp+var_18]  +
call ds:free  +
mov esi ds:printf +
push ebx  +
push offset aErrorcode0x08l  +
call esi  +
add esp 0Ch +
cmp [ebp+var_1C] 0 +
jz loc_406650  +
push offset aPressEnterToEx  +
call ds:puts  +
pop ecx  +
call ds:getchar  +
cmp [ebp+var_20] 0 +
jz loc_40668B  +
push 20050h  +
lea eax [ebp+var_20] +
push offset WideCharStr  +
push eax  +
call sub_438988  +
add esp 0Ch +
test eax eax +
jnz loc_40668B  +
call ds:GetLastError  +
mov ebx eax +
push ebx  +
push offset aRebootCrypt_re  +
call esi  +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_40668B  +
mov ebx 54Fh +
call ds:__iob_func  +
add eax 20h +
push eax  +
call ds:fflush  +
pop ecx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
push esi  +
push offset aSGlobalOptions  +
sub esp 0FCh +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi offset off_4645C0 +
push esi  +
push [ebp+arg_4]  +
xor ebx ebx +
push [ebp+arg_0]  +
inc ebx  +
mov eax 801Eh +
mov [ebp+var_C] ebx +
mov [ebp+var_5C] edi +
mov [ebp+var_FC] edi +
mov [ebp+var_8] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_60] edi +
mov [ebp+var_64] edi +
mov [ebp+lpWideCharStr] edi +
mov [ebp+var_24] edi +
mov [ebp+var_E0] edi +
mov [ebp+var_20] edi +
mov [ebp+var_10] edi +
mov [ebp+var_A0] edi +
mov [ebp+var_4C] edi +
mov [ebp+var_74] edi +
mov [ebp+var_44] eax +
mov [ebp+var_40] eax +
mov [ebp+lpMultiByteStr] edi +
mov [ebp+var_D4] edi +
mov [ebp+var_E4] edi +
mov [ebp+var_78] edi +
mov [ebp+var_EC] edi +
mov [ebp+var_D0] edi +
mov [ebp+var_9C] edi +
mov [ebp+var_54] edi +
mov [ebp+var_C8] edi +
mov [ebp+hObject] edi +
mov [ebp+var_84] edi +
mov [ebp+var_80] edi +
mov [ebp+var_28] edi +
mov [ebp+var_B4] edi +
mov [ebp+var_C0] edi +
mov [ebp+var_A4] edi +
mov [ebp+var_68] edi +
mov [ebp+var_90] edi +
mov [ebp+var_8C] edi +
mov [ebp+var_38] ebx +
mov [ebp+var_3C] ebx +
mov [ebp+var_70] ebx +
mov [ebp+var_30] edi +
mov [ebp+var_94] edi +
mov [ebp+var_D8] edi +
mov [ebp+var_98] edi +
mov [ebp+var_B8] edi +
mov [ebp+var_A8] edi +
mov [ebp+var_7C] edi +
mov [ebp+var_AC] edi +
mov [ebp+var_88] edi +
mov [ebp+var_BC] edi +
mov [ebp+var_CC] edi +
mov [ebp+var_F8] edi +
mov [ebp+var_E8] edi +
mov [ebp+var_58] edi +
mov [ebp+var_B0] edi +
mov [ebp+var_48] edi +
mov [ebp+var_DC] edi +
mov [ebp+var_6C] edi +
mov [ebp+var_50] edi +
mov [ebp+var_F4] edi +
mov [ebp+var_C4] edi +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BD4 eax +
cmp eax 0FFFFFFFFh +
jnz loc_406AA9  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_40825B  +
xor esi esi +
cmp [ebp+var_20] esi +
jnz loc_406A7C  +
push [ebp+var_24]  +
lea ebx [ebp+var_20] +
call sub_429A20  +
pop ecx  +
test eax eax +
jnz loc_4074D2  +
cmp [ebp+var_48] esi +
jz loc_407561  +
mov eax [ebp+lpWideCharStr] +
mov word ptr [ebp+var_10] 0 +
cmp eax esi +
jnz loc_40750C  +
push offset aContainerMustB  +
call ds:printf  +
pop ecx  +
jmp loc_408265  +
xor edi edi +
cmp eax 37h +
ja loc_408265  +
jmp ds:off_40841C[eax*4]  +
mov eax lpLibFileName +
cmp eax edi +
jz loc_406ADA  +
lea ecx [ebp+var_74] +
push ecx  +
push offset aD_0  +
push eax  +
call ds:swscanf  +
add esp 0Ch +
jmp loc_4074A6  +
mov [ebp+var_74] ebx +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_E0] eax +
jmp loc_4074A6  +
mov [ebp+var_A8] ebx +
jmp loc_4074A6  +
mov eax lpLibFileName +
cmp eax edi +
jz loc_406B13  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+lpWideCharStr] eax +
jmp loc_406B16  +
mov [ebp+lpWideCharStr] edi +
cmp [ebp+lpWideCharStr] edi +
jz loc_408265  +
jmp loc_4074A6  +
mov [ebp+var_58] ebx +
jmp loc_4074A6  +
mov [ebp+var_DC] ebx +
jmp loc_4074A6  +
mov edi lpLibFileName +
mov [ebp+var_7C] ebx +
mov [ebp+var_D4] edi +
mov ecx offset aSha1 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406B73  +
test dx dx +
jz loc_406B6F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406B73  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406B4D  +
xor eax eax +
jmp loc_406B78  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406B88  +
mov [ebp+var_44] 8004h +
jmp loc_4074A6  +
mov ecx offset aSha256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406BB5  +
test dx dx +
jz loc_406BB1  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406BB5  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406B8F  +
xor eax eax +
jmp loc_406BBA  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406BCA  +
mov [ebp+var_44] 800Ch +
jmp loc_4074A6  +
mov ecx offset aSha384 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406BF7  +
test dx dx +
jz loc_406BF3  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406BF7  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406BD1  +
xor eax eax +
jmp loc_406BFC  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406C0C  +
mov [ebp+var_44] 800Dh +
jmp loc_4074A6  +
mov ecx offset aSha512 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406C39  +
test dx dx +
jz loc_406C35  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406C39  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406C13  +
xor eax eax +
jmp loc_406C3E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406C4E  +
mov [ebp+var_44] 800Eh +
jmp loc_4074A6  +
mov ecx offset aGost +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406C7B  +
test dx dx +
jz loc_406C77  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406C7B  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406C55  +
xor eax eax +
jmp loc_406C80  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406C90  +
push 21h  +
mov eax esi +
call sub_4290B5  +
pop ecx  +
jmp loc_406CC6  +
mov ecx offset aGost94_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406CBD  +
test dx dx +
jz loc_406CB9  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406CBD  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406C97  +
xor eax eax +
jmp loc_406CC2  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406CD2  +
mov [ebp+var_44] 801Eh +
jmp loc_4074A6  +
mov ecx offset aGost12_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406CFF  +
test dx dx +
jz loc_406CFB  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406CFF  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406CD9  +
xor eax eax +
jmp loc_406D04  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406D14  +
mov [ebp+var_44] 8021h +
jmp loc_4074A6  +
mov ecx offset aGost12_512 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406D41  +
test dx dx +
jz loc_406D3D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406D41  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406D1B  +
xor eax eax +
jmp loc_406D46  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406D56  +
mov [ebp+var_44] 8022h +
jmp loc_4074A6  +
mov ecx offset aMd2 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406D83  +
test dx dx +
jz loc_406D7F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406D83  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406D5D  +
xor eax eax +
jmp loc_406D88  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_406D98  +
mov [ebp+var_44] 8001h +
jmp loc_4074A6  +
mov ecx offset aMd5 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406DC5  +
test dx dx +
jz loc_406DC1  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406DC5  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_406D9F  +
xor eax eax +
jmp loc_406DCA  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4074C8  +
mov [ebp+var_44] 8003h +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_D0] eax +
jmp loc_4074A6  +
call sub_4291AC  +
mov [ebp+var_24] eax +
jmp loc_4074A6  +
call sub_4295C2  +
mov [ebp+var_20] eax +
jmp loc_4074A6  +
or [ebp+var_10] 0F0000000h +
jmp loc_4074A6  +
or [ebp+var_10] 8 +
jmp loc_4074A6  +
mov [ebp+var_E8] ebx +
jmp loc_4074A6  +
or [ebp+var_10] 20h +
jmp loc_4074A6  +
or [ebp+var_10] 10h +
jmp loc_4074A6  +
mov [ebp+var_98] ebx +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov edx offset aSignature +
mov ecx eax +
mov di [ecx] +
cmp di [edx] +
jnz loc_406E77  +
test di di +
jz loc_406E73  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_406E77  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_406E51  +
xor ecx ecx +
jmp loc_406E7C  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_406E88  +
and [ebp+var_38] ecx +
mov [ebp+var_3C] ebx +
jmp loc_406EC4  +
mov edx offset aExchange +
mov ecx eax +
mov di [ecx] +
cmp di [edx] +
jnz loc_406EB5  +
test di di +
jz loc_406EB1  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_406EB5  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_406E8F  +
xor ecx ecx +
jmp loc_406EBA  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_406ECA  +
and [ebp+var_3C] ecx +
mov [ebp+var_38] ebx +
and [ebp+var_70] 0 +
jmp loc_406F0D  +
mov edx offset aUec +
mov ecx eax +
mov di [ecx] +
cmp di [edx] +
jnz loc_406EF9  +
test di di +
jz loc_406EF3  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_406EF9  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_406ED1  +
xor edi edi +
xor ecx ecx +
jmp loc_406F00  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
xor edi edi +
cmp ecx edi +
jnz loc_406F15  +
mov [ebp+var_38] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_70] ebx +
mov [ebp+var_30] ebx +
jmp loc_4074A6  +
mov ecx offset aNone +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_406F40  +
cmp dx di +
jz loc_406F3C  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_406F40  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_406F1A  +
xor eax eax +
jmp loc_406F45  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_4074DA  +
mov [ebp+var_38] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_70] edi +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_54] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_C8] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_84] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_80] eax +
jmp loc_4074A6  +
mov [ebp+var_90] ebx +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_B4] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_C0] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_A4] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_68] eax +
jmp loc_4074A6  +
mov edi lpLibFileName +
test edi edi +
jnz loc_406FF2  +
and [ebp+var_8C] edi +
jmp loc_4074A6  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_406FF7  +
sub eax edx +
sar eax 1 +
lea ebx [eax+1] +
imul ebx ebx +
mov eax ebx +
call __alloca_probe_16  +
mov esi esp +
push ebx  +
push edi  +
push esi  +
call ds:wcstombs  +
mov [ebp+var_8C] esi +
add esp 0Ch +
mov esi offset off_4645C0 +
xor ebx ebx +
inc ebx  +
jmp loc_4074A6  +
mov [ebp+var_F4] ebx +
jmp loc_4074A6  +
cmp eax 18h +
jnz loc_40704C  +
mov [ebp+var_AC] ebx +
jmp loc_407068  +
cmp eax 19h +
jnz loc_407059  +
mov [ebp+var_88] ebx +
jmp loc_407068  +
cmp eax 1Ah +
jnz loc_4074DE  +
mov [ebp+var_BC] ebx +
mov ecx lpLibFileName +
mov [ebp+var_E4] ecx +
mov edi offset aSha1 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_4070A1  +
test bx bx +
jz loc_40709D  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_4070A1  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_40707B  +
xor edx edx +
jmp loc_4070A6  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_4070B6  +
mov [ebp+var_40] 8004h +
jmp loc_40702C  +
mov edi offset aSha256 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_4070E3  +
test bx bx +
jz loc_4070DF  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_4070E3  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_4070BD  +
xor edx edx +
jmp loc_4070E8  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_4070F8  +
mov [ebp+var_40] 800Ch +
jmp loc_40702C  +
mov edi offset aSha384 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_407125  +
test bx bx +
jz loc_407121  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_407125  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_4070FF  +
xor edx edx +
jmp loc_40712A  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_40713A  +
mov [ebp+var_40] 800Dh +
jmp loc_40702C  +
mov edi offset aSha512 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_407167  +
test bx bx +
jz loc_407163  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_407167  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_407141  +
xor edx edx +
jmp loc_40716C  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_40717C  +
mov [ebp+var_40] 800Eh +
jmp loc_40702C  +
mov edi offset aGost +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_4071A9  +
test bx bx +
jz loc_4071A5  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_4071A9  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_407183  +
xor edx edx +
jmp loc_4071AE  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_4071BD  +
push eax  +
mov eax esi +
call sub_4290B5  +
pop ecx  +
jmp loc_4071F3  +
mov edi offset aGost94_256 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_4071EA  +
test bx bx +
jz loc_4071E6  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_4071EA  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_4071C4  +
xor edx edx +
jmp loc_4071EF  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_4071FF  +
mov [ebp+var_40] 801Eh +
jmp loc_40702C  +
mov edi offset aGost12_256 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_40722C  +
test bx bx +
jz loc_407228  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_40722C  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_407206  +
xor edx edx +
jmp loc_407231  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_407241  +
mov [ebp+var_40] 8021h +
jmp loc_40702C  +
mov edi offset aGost12_512 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_40726E  +
test bx bx +
jz loc_40726A  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_40726E  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_407248  +
xor edx edx +
jmp loc_407273  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_407283  +
mov [ebp+var_40] 8022h +
jmp loc_40702C  +
mov edi offset aMd2 +
mov edx ecx +
mov bx [edx] +
cmp bx [edi] +
jnz loc_4072B0  +
test bx bx +
jz loc_4072AC  +
mov bx [edx+2] +
cmp bx [edi+2] +
jnz loc_4072B0  +
add edx 4 +
add edi 4 +
test bx bx +
jnz loc_40728A  +
xor edx edx +
jmp loc_4072B5  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_4072C5  +
mov [ebp+var_40] 8001h +
jmp loc_40702C  +
mov edx offset aMd5 +
mov di [ecx] +
cmp di [edx] +
jnz loc_4072F0  +
test di di +
jz loc_4072EC  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_4072F0  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_4072CA  +
xor ecx ecx +
jmp loc_4072F5  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_4074DE  +
mov [ebp+var_40] 8003h +
jmp loc_40702C  +
mov [ebp+var_C4] ebx +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_78] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_EC] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_9C] eax +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_4074A6  +
mov [ebp+var_F8] ebx +
jmp loc_4074A6  +
or [ebp+var_10] 40h +
jmp loc_4074A6  +
mov [ebp+var_94] ebx +
jmp loc_4074A6  +
mov [ebp+var_D8] ebx +
jmp loc_4074A6  +
push lpLibFileName  +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_4C] eax +
test al 7 +
jz loc_4074A6  +
push dword_465BD4  +
jmp loc_4074CA  +
push lpLibFileName  +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_5C] eax +
jmp loc_4074A6  +
push lpLibFileName  +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_FC] eax +
jmp loc_4074A6  +
mov [ebp+var_CC] ebx +
jmp loc_4074A6  +
mov [ebp+var_B0] ebx +
jmp loc_4074A6  +
mov [ebp+var_48] ebx +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_6C] 0Fh +
cmp eax edi +
jz loc_4074A6  +
lea ecx [ebp+var_6C] +
push ecx  +
push offset aD_0  +
push eax  +
call ds:swscanf  +
add esp 0Ch +
test eax eax +
jz loc_407393  +
jmp loc_4074A6  +
mov ebx lpLibFileName +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_407428  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpMultiByteStr] eax +
test eax eax +
jz loc_4074E1  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_407450  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax ebx +
lea edx [eax+2] +
mov di [eax] +
add eax 2 +
test di di +
jnz loc_407466  +
sub eax edx +
xor edx edx +
push edx  +
push edx  +
sar eax 1 +
inc ecx  +
push ecx  +
push [ebp+lpMultiByteStr]  +
inc eax  +
push eax  +
push ebx  +
push edx  +
push edx  +
call ds:WideCharToMultiByte  +
jmp loc_40702C  +
push ebx  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpMultiByteStr] eax +
mov [ebp+var_50] ebx +
jmp loc_4074A6  +
mov eax lpLibFileName +
mov [ebp+var_28] eax +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BD4 eax +
cmp eax 0FFFFFFFFh +
jnz loc_406AA7  +
jmp loc_406A4D  +
push 21h  +
mov eax esi +
call sub_42905C  +
pop ecx  +
mov [ebp+var_C] eax +
jmp loc_408265  +
push 0Ch  +
jmp loc_4074CA  +
push eax  +
jmp loc_4074CA  +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 371h  +
push offset aCtkey_c  +
call sub_437C8E  +
add esp 14h +
jmp loc_4074D2  +
mov [ebp+var_B8] ebx +
mov [ebp+var_C] edi +
jmp loc_408265  +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx si +
jnz loc_40750F  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov edi esp +
push esi  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:wcstombs  +
lea esi [ebp+var_10] +
mov eax edi +
call sub_40CC49  +
movzx eax byte ptr [ebp+var_10+1] +
push eax  +
movzx eax byte ptr [ebp+var_10] +
push eax  +
push offset aContainerNameC  +
call ds:printf  +
add esp 18h +
xor eax eax +
jmp loc_408406  +
push [ebp+var_E0]  +
mov ecx [ebp+var_20] +
push [ebp+var_74]  +
mov edx [ebp+var_24] +
call sub_437F92  +
mov eax [ebp+lpWideCharStr] +
pop ecx  +
pop ecx  +
mov [ebp+var_24] esi +
mov [ebp+var_48] esi +
cmp eax esi +
jz loc_407625  +
mov ecx offset aDefault +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4075B3  +
cmp dx si +
jz loc_4075AF  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4075B3  +
add eax 4 +
add ecx 4 +
cmp dx si +
jnz loc_40758D  +
xor eax eax +
jmp loc_4075B8  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax esi +
jnz loc_407625  +
mov ebx [ebp+var_10] +
test bl 8 +
jnz loc_407628  +
push [ebp+var_20]  +
call sub_429B41  +
add esp 4 +
test eax eax +
jz loc_407628  +
lea eax [ebp+var_24] +
push eax  +
mov eax ebx +
and eax 20h +
call sub_40CB68  +
pop ecx  +
cmp eax esi +
jnz loc_4074D2  +
cmp [ebp+var_24] esi +
jnz loc_4075F4  +
mov [ebp+var_48] esi +
jmp loc_407628  +
mov eax [ebp+var_24] +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4075FA  +
sub eax esi +
lea edi [eax+1] +
lea eax [edi+edi] +
call __alloca_probe_16  +
mov esi esp +
push edi  +
push [ebp+var_24]  +
push esi  +
call ds:mbstowcs  +
add esp 0Ch +
mov [ebp+var_48] esi +
xor esi esi +
jmp loc_407628  +
mov ebx [ebp+var_10] +
mov eax ebx +
and eax 10h +
jz loc_407666  +
cmp [ebp+var_28] esi +
jz loc_407666  +
push [ebp+var_28]  +
mov eax [ebp+var_48] +
cmp eax esi +
cmovz eax [ebp+lpWideCharStr] +
push eax  +
push [ebp+lpMultiByteStr]  +
mov eax ebx +
and eax 0F0000000h +
push eax  +
mov eax ebx +
and eax 40h +
push eax  +
and ebx 20h +
push ebx  +
push [ebp+var_20]  +
call sub_408821  +
add esp 1Ch +
jmp loc_4074D2  +
cmp eax esi +
jz loc_407680  +
mov eax [ebp+var_48] +
cmp eax esi +
cmovz eax [ebp+lpWideCharStr] +
push eax  +
push ebx  +
call sub_408C07  +
pop ecx  +
jmp loc_4074D1  +
cmp [ebp+var_88] esi +
jz loc_407691  +
or ebx 0F0000000h +
mov [ebp+var_10] ebx +
mov eax [ebp+var_48] +
cmp eax esi +
cmovz eax [ebp+lpWideCharStr] +
push ebx  +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_438988  +
and [ebp+var_28] 0 +
add esp 0Ch +
cmp [ebp+var_5C] 0 +
mov esi eax +
jle loc_40773E  +
mov eax [ebp+var_48] +
test eax eax +
cmovz eax [ebp+lpWideCharStr] +
push ebx  +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_438988  +
add esp 0Ch +
cmp [ebp+var_5C] 1 +
mov esi eax +
jle loc_407704  +
mov edi ds:printf +
push offset a_  +
call edi  +
mov eax [ebp+var_28] +
pop ecx  +
push 46h  +
cdq   +
pop ecx  +
idiv  ecx +
cmp edx 45h +
jz loc_4076FC  +
mov eax [ebp+var_5C] +
dec eax  +
cmp [ebp+var_28] eax +
jnz loc_407704  +
push offset asc_445094  +
call edi  +
pop ecx  +
mov eax [ebp+var_5C] +
dec eax  +
cmp [ebp+var_28] eax +
jge loc_40772F  +
test esi esi +
jz loc_40772F  +
cmp dword_526128 0 +
push 0  +
push [ebp+var_8]  +
jz loc_407729  +
mov eax dword_526178 +
call dword ptr [eax+4]  +
jmp loc_40772F  +
call ds:off_4444D8  +
inc [ebp+var_28]  +
mov eax [ebp+var_28] +
cmp eax [ebp+var_5C] +
jl loc_4076B8  +
cmp [ebp+var_5C] 1 +
mov edi ds:printf +
jle loc_407766  +
push offset aWaitFor10SecBe  +
call edi  +
mov [esp+114h+var_114] 2710h +
call ds:Sleep  +
push offset asc_445094  +
call edi  +
pop ecx  +
xor ebx ebx +
cmp esi ebx +
jz loc_4081F2  +
push [ebp+var_8]  +
push offset aAcquireconte_1  +
call edi  +
pop ecx  +
pop ecx  +
cmp [ebp+var_24] ebx +
jz loc_40778B  +
push [ebp+var_24]  +
call ds:free  +
pop ecx  +
cmp [ebp+var_F8] ebx +
jz loc_4077D4  +
push ebx  +
push ebx  +
push 26h  +
push [ebp+var_8]  +
cmp dword_526128 ebx +
jz loc_4077AC  +
mov eax dword_526178 +
call dword ptr [eax+0Ch]  +
jmp loc_4077B2  +
call ds:off_4444DC  +
cmp eax ebx +
jnz loc_4077D4  +
push offset aSetprovparamPp  +
push 0Fh  +
push 3F7h  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_4074D2  +
cmp [ebp+var_CC] ebx +
jz loc_407800  +
xor eax eax +
inc eax  +
cmp [ebp+var_58] ebx +
jz loc_4077E7  +
push 9  +
pop eax  +
cmp [ebp+var_B0] ebx +
jz loc_4077F2  +
or eax 10h +
push eax  +
push [ebp+var_8]  +
call sub_408C7D  +
jmp loc_40767A  +
mov ebx [ebp+var_8] +
call sub_408EA9  +
test eax eax +
jnz loc_4074D2  +
cmp [ebp+lpWideCharStr] eax +
jnz loc_40781E  +
test [ebp+var_10] 0F0000000h +
jnz loc_40783A  +
push [ebp+var_B0]  +
push [ebp+var_58]  +
push [ebp+var_8]  +
call sub_408F67  +
add esp 0Ch +
test eax eax +
jnz loc_4074D2  +
mov ebx [ebp+var_8] +
lea eax [ebp+var_A0] +
push eax  +
call sub_4090D0  +
xor ebx ebx +
pop ecx  +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+lpMultiByteStr] ebx +
jz loc_4078A0  +
push [ebp+var_20]  +
call sub_429B41  +
add esp 4 +
test eax eax +
jz loc_4078A0  +
cmp [ebp+var_A0] 300h +
jnb loc_4078A0  +
push offset aWarningCspVers  +
call edi  +
mov eax [ebp+var_50] +
neg eax  +
sbb eax eax +
push 1  +
push [ebp+var_10]  +
not eax  +
and eax [ebp+lpMultiByteStr] +
push eax  +
push [ebp+var_8]  +
call sub_40CC76  +
add esp 14h +
cmp eax ebx +
jnz loc_4074D2  +
test byte ptr [ebp+var_6C] 4 +
jz loc_4078C0  +
test byte ptr [ebp+var_10] 8 +
jnz loc_4078C0  +
push [ebp+var_20]  +
mov eax [ebp+var_8] +
call sub_409529  +
pop ecx  +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_7C] ebx +
jnz loc_407B6C  +
test [ebp+var_10] 0F0000000h +
jnz loc_407B6C  +
cmp [ebp+var_E8] ebx +
jnz loc_4078E7  +
test byte ptr [ebp+var_10] 8 +
mov [ebp+var_24] ebx +
jz loc_4078EE  +
mov [ebp+var_24] 1 +
mov ecx [ebp+var_D8] +
neg ecx  +
sbb ecx ecx +
xor eax eax +
and ecx 2 +
cmp [ebp+var_94] ebx +
mov [ebp+var_28] ebx +
setnz al  +
or ecx eax +
mov eax [ebp+var_4C] +
shl eax 10h +
or ecx eax +
mov [ebp+var_58] ecx +
cmp [ebp+var_90] ebx +
jnz loc_407923  +
cmp [ebp+var_68] ebx +
jz loc_40795E  +
push [ebp+var_20]  +
call sub_429B41  +
add esp 4 +
test eax eax +
jz loc_40795E  +
push ebx  +
lea eax [ebp+var_94] +
push eax  +
push ebx  +
push 8Dh  +
push [ebp+var_8]  +
cmp dword_526128 ebx +
jz loc_407955  +
mov eax dword_526178 +
call dword ptr [eax+8]  +
jmp loc_40795B  +
call ds:off_4444E0  +
mov [ebp+var_28] eax +
cmp [ebp+var_24] ebx +
jz loc_407974  +
cmp [ebp+var_38] ebx +
jnz loc_407971  +
cmp [ebp+var_3C] ebx +
jz loc_407B14  +
mov [ebp+var_70] ebx +
cmp [ebp+var_3C] ebx +
jz loc_407A44  +
push [ebp+var_20]  +
lea eax [ebp+var_4C] +
push eax  +
push [ebp+lpMultiByteStr]  +
mov eax [ebp+var_50] +
push [ebp+var_58]  +
mov [ebp+var_4C] ebx +
push [ebp+var_24]  +
lea ebx [ebp+var_18] +
push [ebp+var_8]  +
push 2  +
pop ecx  +
call sub_409165  +
xor ebx ebx +
add esp 18h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_18] ebx +
jnz loc_4079CE  +
cmp [ebp+var_30] ebx +
jz loc_4079CE  +
push offset aSignatureKeyNo  +
push 0Fh  +
push 80090019h  +
push 453h  +
jmp loc_4074EF  +
xor eax eax +
cmp [ebp+var_4C] ebx +
setz al  +
mov esi eax +
cmp [ebp+var_28] ebx +
jz loc_4079E8  +
test byte ptr [ebp+var_10] 20h +
jz loc_4079E8  +
xor edi edi +
inc edi  +
jmp loc_4079EA  +
xor edi edi +
cmp [ebp+var_90] ebx +
jz loc_407A17  +
cmp [ebp+var_18] ebx +
jz loc_407A17  +
push edi  +
push esi  +
push [ebp+lpMultiByteStr]  +
push [ebp+var_18]  +
push [ebp+var_8]  +
push 2  +
pop ebx  +
call sub_42B7BA  +
add esp 14h +
test eax eax +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_68] ebx +
jz loc_407A42  +
cmp [ebp+var_18] ebx +
jz loc_407A42  +
push [ebp+var_68]  +
push edi  +
push esi  +
push [ebp+lpMultiByteStr]  +
push [ebp+var_18]  +
push [ebp+var_8]  +
push 2  +
pop eax  +
call sub_42B919  +
add esp 18h +
cmp eax ebx +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_38] ebx +
jz loc_407B14  +
push [ebp+var_20]  +
lea eax [ebp+var_4C] +
push eax  +
push [ebp+lpMultiByteStr]  +
mov eax [ebp+var_50] +
push [ebp+var_58]  +
xor ecx ecx +
push [ebp+var_24]  +
mov [ebp+var_4C] ebx +
push [ebp+var_8]  +
lea ebx [ebp+var_14] +
inc ecx  +
call sub_409165  +
xor ebx ebx +
add esp 18h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_14] ebx +
jnz loc_407A9E  +
cmp [ebp+var_30] ebx +
jz loc_407A9E  +
push offset aExchangeKeyNot  +
push 0Fh  +
push 80090019h  +
push 477h  +
jmp loc_4074EF  +
xor eax eax +
cmp [ebp+var_4C] ebx +
setz al  +
mov esi eax +
cmp [ebp+var_28] ebx +
jz loc_407AB8  +
test byte ptr [ebp+var_10] 20h +
jz loc_407AB8  +
xor edi edi +
inc edi  +
jmp loc_407ABA  +
xor edi edi +
cmp [ebp+var_90] ebx +
jz loc_407AE7  +
cmp [ebp+var_14] ebx +
jz loc_407AE7  +
push edi  +
push esi  +
push [ebp+lpMultiByteStr]  +
xor ebx ebx +
push [ebp+var_14]  +
inc ebx  +
push [ebp+var_8]  +
call sub_42B7BA  +
add esp 14h +
test eax eax +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_68] ebx +
jz loc_407B12  +
cmp [ebp+var_14] ebx +
jz loc_407B12  +
push [ebp+var_68]  +
xor eax eax +
push edi  +
push esi  +
push [ebp+lpMultiByteStr]  +
inc eax  +
push [ebp+var_14]  +
push [ebp+var_8]  +
call sub_42B919  +
add esp 18h +
cmp eax ebx +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_70] ebx +
jz loc_407B6C  +
push [ebp+var_20]  +
lea eax [ebp+var_4C] +
push eax  +
push [ebp+lpMultiByteStr]  +
mov eax [ebp+var_50] +
push [ebp+var_58]  +
mov [ebp+var_4C] ebx +
push [ebp+var_24]  +
lea ebx [ebp+var_2C] +
push [ebp+var_8]  +
mov ecx 80000004h +
call sub_409165  +
add esp 18h +
test eax eax +
jnz loc_4074D2  +
cmp [ebp+var_2C] eax +
jnz loc_407B6A  +
cmp [ebp+var_30] eax +
jz loc_407B6A  +
push offset aUecKeyNotFound  +
push 0Fh  +
push 80090019h  +
push 49Bh  +
jmp loc_4074EF  +
xor ebx ebx +
cmp [ebp+var_A8] ebx +
jz loc_407BA3  +
mov eax [ebp+var_50] +
push [ebp+var_10]  +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpMultiByteStr] +
push eax  +
push [ebp+var_2C]  +
push [ebp+var_14]  +
push [ebp+var_18]  +
push [ebp+var_20]  +
push [ebp+var_8]  +
call sub_40B1BE  +
add esp 1Ch +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_98] ebx +
jz loc_407BE2  +
push ebx  +
push ebx  +
push 8Ch  +
push [ebp+var_8]  +
cmp dword_526128 ebx +
jz loc_407BC7  +
mov eax dword_526178 +
call dword ptr [eax+0Ch]  +
jmp loc_407BCD  +
call ds:off_4444DC  +
cmp eax ebx +
jnz loc_407BE2  +
push offset aSetprovparam_0  +
push 0Fh  +
push 4AEh  +
jmp loc_4077C2  +
cmp [ebp+lpMultiByteStr] ebx +
jz loc_407C0C  +
mov eax [ebp+var_50] +
neg eax  +
sbb eax eax +
push 1  +
push [ebp+var_10]  +
not eax  +
and eax [ebp+lpMultiByteStr] +
push eax  +
push [ebp+var_8]  +
call sub_40CC76  +
add esp 10h +
cmp eax ebx +
jnz loc_4074D2  +
test byte ptr [ebp+var_6C] 8 +
jz loc_407C48  +
cmp [ebp+var_18] ebx +
jz loc_407C2D  +
push [ebp+var_8]  +
mov ebx [ebp+var_18] +
call sub_40A7D2  +
pop ecx  +
test eax eax +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_14] ebx +
jz loc_407C48  +
push [ebp+var_8]  +
mov ebx [ebp+var_14] +
call sub_40A7D2  +
pop ecx  +
test eax eax +
jnz loc_4074D2  +
xor ebx ebx +
test byte ptr [ebp+var_6C] 1 +
jz loc_407C62  +
push [ebp+var_20]  +
mov eax [ebp+var_8] +
call sub_40961A  +
pop ecx  +
cmp eax ebx +
jnz loc_4074D2  +
test byte ptr [ebp+var_6C] 2 +
jz loc_407CF7  +
cmp [ebp+var_18] ebx +
jz loc_407C9B  +
mov edi [ebp+var_50] +
mov esi [ebp+var_8] +
push 2  +
push [ebp+var_18]  +
neg edi  +
push [ebp+var_10]  +
sbb edi edi +
push [ebp+var_20]  +
not edi  +
and edi [ebp+lpMultiByteStr] +
call sub_4096BC  +
add esp 10h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_14] ebx +
jz loc_407CCA  +
mov edi [ebp+var_50] +
mov esi [ebp+var_8] +
push 1  +
push [ebp+var_14]  +
neg edi  +
push [ebp+var_10]  +
sbb edi edi +
push [ebp+var_20]  +
not edi  +
and edi [ebp+lpMultiByteStr] +
call sub_4096BC  +
add esp 10h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_2C] ebx +
jz loc_407CF7  +
mov eax [ebp+var_50] +
mov ebx [ebp+var_8] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpMultiByteStr] +
push eax  +
push [ebp+var_2C]  +
push [ebp+var_10]  +
call sub_409745  +
add esp 0Ch +
test eax eax +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_54] ebx +
jz loc_407D6A  +
cmp [ebp+var_3C] ebx +
jz loc_407D1B  +
cmp [ebp+var_30] ebx +
jz loc_407D1B  +
mov esi ds:printf +
push offset aExportingAt_si  +
call esi  +
push [ebp+var_54]  +
push [ebp+var_18]  +
jmp loc_407D38  +
cmp [ebp+var_38] ebx +
jz loc_407D4C  +
cmp [ebp+var_30] ebx +
jz loc_407D4C  +
mov esi ds:printf +
push offset aExportingAt_ke  +
call esi  +
push [ebp+var_54]  +
push [ebp+var_14]  +
push [ebp+var_8]  +
call sub_4098D9  +
add esp 10h +
cmp eax ebx +
jz loc_407D70  +
jmp loc_4074D2  +
push offset aNoKeytypeSpeci  +
push 0Fh  +
push 501h  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_408265  +
mov esi ds:printf +
cmp [ebp+var_C8] ebx +
jz loc_407DD1  +
mov ecx [ebp+hObject] +
mov [ebp+var_54] ebx +
cmp ecx ebx +
jz loc_407DA4  +
push ebx  +
push [ebp+var_74]  +
lea edx [ebp+var_54] +
push [ebp+var_8]  +
call sub_4099C8  +
add esp 0Ch +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_54] ebx +
jnz loc_407DAF  +
cmp [ebp+var_38] ebx +
jz loc_407DAF  +
mov eax [ebp+var_14] +
mov [ebp+var_54] eax +
push [ebp+var_54]  +
mov ecx [ebp+var_C8] +
push [ebp+var_74]  +
lea edx [ebp+var_60] +
push [ebp+var_8]  +
call sub_4099C8  +
add esp 0Ch +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_84] ebx +
jz loc_407E1E  +
cmp [ebp+var_3C] ebx +
jz loc_407DEF  +
cmp [ebp+var_30] ebx +
jz loc_407DEF  +
push offset aSavingAt_signa  +
call esi  +
mov ebx [ebp+var_18] +
jmp loc_407E03  +
cmp [ebp+var_38] ebx +
jz loc_407E3C  +
cmp [ebp+var_30] ebx +
jz loc_407E3C  +
push offset aSavingAt_keyex  +
call esi  +
mov ebx [ebp+var_14] +
push [ebp+var_84]  +
push [ebp+var_8]  +
call sub_409C4B  +
add esp 0Ch +
test eax eax +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_80] ebx +
jz loc_407E77  +
cmp [ebp+var_3C] ebx +
jz loc_407E4D  +
cmp [ebp+var_30] ebx +
jz loc_407E4D  +
push offset aLoadingCertFor  +
call esi  +
push [ebp+var_80]  +
push [ebp+var_18]  +
jmp loc_407E64  +
push offset aNoKeytypeSpeci  +
push 0Fh  +
push 52Fh  +
jmp loc_407D58  +
cmp [ebp+var_38] ebx +
jz loc_407E95  +
cmp [ebp+var_30] ebx +
jz loc_407E95  +
push offset aLoadingCertAt_  +
call esi  +
push [ebp+var_80]  +
push [ebp+var_14]  +
push [ebp+var_8]  +
call sub_409BB8  +
add esp 10h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_B4] ebx +
jz loc_407EC3  +
cmp [ebp+var_60] ebx +
jz loc_407EA6  +
push offset aYouCanNotImpor  +
push 0Fh  +
push 54Fh  +
jmp loc_4077C2  +
push offset aNoKeytypeSpeci  +
push 0Fh  +
push 540h  +
jmp loc_407D58  +
lea eax [ebp+var_60] +
push eax  +
push [ebp+var_B4]  +
push [ebp+var_8]  +
call sub_409D35  +
add esp 0Ch +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_C0] ebx +
jz loc_407EEA  +
push [ebp+var_C0]  +
mov eax [ebp+var_8] +
push [ebp+var_3C]  +
push [ebp+var_38]  +
call sub_40A33B  +
add esp 0Ch +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_A4] ebx +
jz loc_407F0A  +
push [ebp+var_A4]  +
push [ebp+var_8]  +
call sub_40A5EC  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_8C] ebx +
jz loc_407F2A  +
push [ebp+var_8C]  +
push [ebp+var_8]  +
call sub_40A8CC  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_7C] ebx +
jz loc_407F5A  +
push [ebp+var_D0]  +
push [ebp+var_C4]  +
push [ebp+var_78]  +
push [ebp+var_D4]  +
push [ebp+var_44]  +
push [ebp+var_8]  +
call sub_40AE16  +
add esp 18h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_DC] ebx +
jz loc_407F77  +
push [ebp+var_78]  +
push [ebp+var_8]  +
call sub_40ABE8  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_AC] ebx +
jnz loc_407F93  +
cmp [ebp+var_88] ebx +
jnz loc_407F93  +
cmp [ebp+var_BC] ebx +
jz loc_408082  +
push [ebp+var_C4]  +
lea edi [ebp+var_64] +
push [ebp+var_E4]  +
push [ebp+var_40]  +
push [ebp+var_78]  +
push [ebp+var_8]  +
call sub_40ACD4  +
add esp 14h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_AC] ebx +
jz loc_407FF9  +
cmp [ebp+var_30] ebx +
jz loc_408025  +
cmp [ebp+var_3C] ebx +
jz loc_407FD2  +
push 2  +
pop eax  +
jmp loc_407FDA  +
cmp [ebp+var_38] ebx +
jz loc_408014  +
xor eax eax +
inc eax  +
push [ebp+var_EC]  +
mov ebx [ebp+var_64] +
push eax  +
push [ebp+var_8]  +
call sub_40AF75  +
add esp 0Ch +
test eax eax +
jnz loc_4074D2  +
xor ebx ebx +
cmp [ebp+var_BC] ebx +
jz loc_40805B  +
cmp [ebp+var_30] ebx +
jz loc_4080C9  +
cmp [ebp+var_3C] ebx +
jz loc_408036  +
mov eax [ebp+var_18] +
jmp loc_40803E  +
push offset aUecKey_  +
push 0Fh  +
push 59Fh  +
jmp loc_407D58  +
push offset aMoreThanOneKey  +
push 0Fh  +
push 5A9h  +
jmp loc_407D58  +
cmp [ebp+var_38] ebx +
jz loc_4080B8  +
mov eax [ebp+var_14] +
push [ebp+var_9C]  +
push eax  +
push [ebp+var_64]  +
push [ebp+var_8]  +
call sub_40B0CD  +
add esp 10h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_88] ebx +
jz loc_408082  +
push [ebp+var_9C]  +
push [ebp+var_60]  +
push [ebp+var_64]  +
push [ebp+var_8]  +
call sub_40B0CD  +
add esp 10h +
cmp eax ebx +
jnz loc_4074D2  +
cmp [ebp+var_7C] ebx +
jnz loc_4081ED  +
mov edi [ebp+var_10] +
and edi 0F0000000h +
jnz loc_4081AD  +
push offset aKeysInContaine  +
call esi  +
pop ecx  +
cmp [ebp+var_18] ebx +
jnz loc_4080DA  +
cmp [ebp+var_14] ebx +
jnz loc_4080E7  +
cmp [ebp+var_2C] ebx +
jnz loc_4080F4  +
push offset aNoKeys  +
jmp loc_4080F9  +
push offset aUecKey_  +
push 0Fh  +
push 5BAh  +
jmp loc_407D58  +
push offset aMoreThanOneKey  +
push 0Fh  +
push 5C4h  +
jmp loc_407D58  +
push offset aSignatureKey  +
call esi  +
pop ecx  +
cmp [ebp+var_14] ebx +
jz loc_4080EF  +
push offset aExchangeKey  +
call esi  +
pop ecx  +
cmp [ebp+var_2C] ebx +
jz loc_4080FC  +
push offset aUecKey  +
call esi  +
pop ecx  +
cmp [ebp+var_18] ebx +
jz loc_408137  +
push [ebp+var_18]  +
cmp dword_526128 ebx +
jz loc_408119  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+14h]  +
jmp loc_40811F  +
call ds:off_4444B0  +
mov [ebp+var_18] ebx +
cmp eax ebx +
jnz loc_408137  +
push offset aDestroykeyAt_s  +
push 0Fh  +
push 5E6h  +
jmp loc_407D58  +
cmp [ebp+var_14] ebx +
jz loc_408172  +
push [ebp+var_14]  +
cmp dword_526128 ebx +
jz loc_408154  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+14h]  +
jmp loc_40815A  +
call ds:off_4444B0  +
mov [ebp+var_14] ebx +
cmp eax ebx +
jnz loc_408172  +
push offset aDestroykeyAt_k  +
push 0Fh  +
push 5EEh  +
jmp loc_407D58  +
cmp [ebp+var_2C] ebx +
jz loc_4081AD  +
push [ebp+var_2C]  +
cmp dword_526128 ebx +
jz loc_40818F  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+14h]  +
jmp loc_408195  +
call ds:off_4444B0  +
mov [ebp+var_2C] ebx +
cmp eax ebx +
jnz loc_4081AD  +
push offset aDestroykeyAt_u  +
push 0Fh  +
push 5F6h  +
jmp loc_407D58  +
cmp edi ebx +
jnz loc_4081ED  +
push [ebp+var_20]  +
call sub_429B41  +
add esp 4 +
test eax eax +
jz loc_4081ED  +
cmp [ebp+var_F4] 1 +
jz loc_4081ED  +
cmp [ebp+var_A0] 300h +
jb loc_4081ED  +
push [ebp+var_A8]  +
push [ebp+var_8]  +
call sub_40C6AF  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_4074D2  +
mov [ebp+var_C] ebx +
jmp loc_408265  +
cmp [ebp+var_48] ebx +
jz loc_408205  +
push [ebp+var_48]  +
call ds:_wcsdup  +
pop ecx  +
mov ebx eax +
jmp loc_408207  +
xor ebx ebx +
cmp [ebp+lpWideCharStr] 0 +
jz loc_40821B  +
push [ebp+lpWideCharStr]  +
call ds:_wcsdup  +
pop ecx  +
mov edi eax +
jmp loc_40821D  +
xor edi edi +
test ebx ebx +
jz loc_408225  +
mov eax ebx +
jmp loc_408230  +
mov eax edi +
test edi edi +
jnz loc_408230  +
mov eax offset aNull +
push eax  +
push offset aAcquireconte_2  +
push 0Fh  +
push 3ECh  +
push offset aCtkey_c  +
call sub_437C6A  +
mov esi ds:free +
push ebx  +
mov [ebp+var_C] eax +
call esi  +
push edi  +
call esi  +
add esp 1Ch +
jmp loc_408265  +
mov [ebp+var_B8] 1 +
push [ebp+lpMultiByteStr]  +
mov esi ds:free +
call esi  +
push [ebp+lpWideCharStr]  +
call esi  +
xor esi esi +
pop ecx  +
pop ecx  +
cmp [ebp+var_8] esi +
jz loc_408391  +
cmp [ebp+var_64] esi +
jz loc_4082A5  +
push [ebp+var_64]  +
cmp dword_526128 esi +
jz loc_40829F  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+44h]  +
jmp loc_4082A5  +
call ds:off_444514  +
cmp [ebp+var_60] esi +
jz loc_4082C8  +
push [ebp+var_60]  +
cmp dword_526128 esi +
jz loc_4082C2  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+14h]  +
jmp loc_4082C8  +
call ds:off_4444B0  +
cmp [ebp+var_18] esi +
jz loc_40830B  +
push [ebp+var_18]  +
cmp dword_526128 esi +
jz loc_4082E5  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+14h]  +
jmp loc_4082EB  +
call ds:off_4444B0  +
cmp eax esi +
jnz loc_40830B  +
push offset aDestroykeyAt_s  +
push 0Fh  +
push 617h  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_C] eax +
cmp [ebp+var_14] esi +
jz loc_40834E  +
push [ebp+var_14]  +
cmp dword_526128 esi +
jz loc_408328  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+14h]  +
jmp loc_40832E  +
call ds:off_4444B0  +
cmp eax esi +
jnz loc_40834E  +
push offset aDestroykeyAt_k  +
push 0Fh  +
push 619h  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_C] eax +
cmp [ebp+var_2C] esi +
jz loc_408391  +
push [ebp+var_2C]  +
cmp dword_526128 esi +
jz loc_40836B  +
push [ebp+var_8]  +
mov eax dword_526178 +
call dword ptr [eax+14h]  +
jmp loc_408371  +
call ds:off_4444B0  +
cmp eax esi +
jnz loc_408391  +
push offset aDestroykeyAt_u  +
push 0Fh  +
push 61Bh  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_C] eax +
cmp [ebp+var_98] esi +
jz loc_4083B0  +
mov eax [ebp+var_FC] +
cmp eax esi +
jz loc_4083B0  +
imul eax eax +
push eax  +
call ds:Sleep  +
cmp [ebp+var_8] esi +
jz loc_4083F1  +
push esi  +
push [ebp+var_8]  +
cmp dword_526128 esi +
jz loc_4083CB  +
mov eax dword_526178 +
call dword ptr [eax+4]  +
jmp loc_4083D1  +
call ds:off_4444D8  +
cmp eax esi +
jnz loc_4083F1  +
push offset aReleasecontext  +
push 0Fh  +
push 624h  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_C] eax +
cmp [ebp+var_B8] esi +
jz loc_4083FE  +
call sub_4084FC  +
call sub_4386B3  +
mov eax [ebp+var_C] +
lea esp [ebp-108h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
***
push offset aSKeysetGlobals  +
sub esp 28h +
push ecx  +
sub esp 10h +
push ecx  +
sub esp 0Ch +
push ecx  +
push ecx  +
push ecx  +
sub esp 2Ch +
sub esp 0Ch +
sub esp 0Ch +
test edi edi +
sub esp 14h +
push ecx  +
sub esp 424h +
push ecx  +
push ecx  +
push esi  +
test eax eax +
jnz loc_409DC8  +
xor eax eax +
retn   +
mov ecx [eax+18h] +
cmp ecx [eax+30h] +
jnz loc_409DC5  +
push esi  +
mov esi [eax+1Ch] +
push edi  +
mov edi [eax+34h] +
xor edx edx +
cmps   +
jnz loc_409DEE  +
mov ecx [eax+50h] +
cmp ecx [eax+5Ch] +
jnz loc_409DEE  +
mov edx [eax+58h] +
cmp edx [eax+64h] +
jz loc_409DF2  +
xor eax eax +
jmp loc_409DFF  +
mov edi [eax+60h] +
mov esi [eax+54h] +
xor eax eax +
cmps   +
setz al  +
pop edi  +
pop esi  +
retn   +
***
sub esp 24h +
sub esp 20h +
and esp 0FFFFFFF8h +
sub esp 14h +
sub esp 14h +
sub esp 10h +
sub esp 0Ch +
sub esp 1Ch +
push ecx  +
push ecx  +
sub esp 14h +
sub esp 0Ch +
push ecx  +
sub esp 0Ch +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push esi  +
mov esi ds:printf +
push edi  +
push [ebp+arg_C]  +
xor edi edi +
push offset aKeyPairInfoHcr  +
mov [ebp+var_8] edi +
call esi  +
pop ecx  +
pop ecx  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 7  +
push [ebp+arg_C]  +
mov [ebp+var_8] 4 +
cmp dword_526128 edi +
jz loc_40BAFA  +
push [ebp+arg_0]  +
mov eax dword_526178 +
call dword ptr [eax+28h]  +
jmp loc_40BB00  +
call ds:off_4444B8  +
cmp eax edi +
jnz loc_40BB22  +
push offset aGetkeyparamKp_  +
push 0Fh  +
push 0EE5h  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_40C176  +
push ebx  +
push offset aAlgid  +
call esi  +
pop ecx  +
mov ecx [ebp+var_4] +
mov eax 8002h +
mov edi 200h +
mov ebx offset aUnknownD +
cmp ecx eax +
ja loc_40BD52  +
jz loc_40BD48  +
mov eax 6604h +
cmp ecx eax +
ja loc_40BC58  +
jz loc_40BC4E  +
mov eax 4C03h +
cmp ecx eax +
ja loc_40BBE5  +
jz loc_40BBDB  +
mov eax ecx +
sub eax 2200h +
jz loc_40BBD1  +
sub eax edi +
jz loc_40BBC7  +
sub eax 0A23h +
jz loc_40BBBD  +
sub eax 1Ah +
jz loc_40BBB3  +
sub eax 0Ch +
jz loc_40BBA9  +
sub eax 1DB8h +
jz loc_40BB9F  +
dec eax  +
jnz loc_40BF01  +
push offset aCalg_schannel_  +
jmp loc_40BF22  +
push offset aCalg_ssl3_mast  +
jmp loc_40BF22  +
push offset aCalg_gr3410_12  +
jmp loc_40BF22  +
push offset aCalg_gr3410__0  +
jmp loc_40BF22  +
push offset aCalg_gr3410el  +
jmp loc_40BF22  +
push offset aCalg_rsa_sign  +
jmp loc_40BF22  +
push offset aCalg_dss_sign  +
jmp loc_40BF22  +
push offset aCalg_schanne_0  +
jmp loc_40BF22  +
mov eax ecx +
sub eax 4C04h +
jz loc_40BC44  +
dec eax  +
jz loc_40BC3A  +
dec eax  +
jz loc_40BC30  +
dec eax  +
jz loc_40BC26  +
sub eax 19FAh +
jz loc_40BC1C  +
dec eax  +
jz loc_40BC12  +
dec eax  +
jnz loc_40BF01  +
push offset aCalg_3des  +
jmp loc_40BF22  +
push offset aCalg_rc2  +
jmp loc_40BF22  +
push offset aCalg_des  +
jmp loc_40BF22  +
push offset aCalg_schanne_1  +
jmp loc_40BF22  +
push offset aCalg_tls1_mast  +
jmp loc_40BF22  +
push offset aCalg_ssl2_mast  +
jmp loc_40BF22  +
push offset aCalg_pct1_mast  +
jmp loc_40BF22  +
push offset aCalg_desx  +
jmp loc_40BF22  +
mov eax 6620h +
cmp ecx eax +
ja loc_40BCD4  +
jz loc_40BCCA  +
mov eax ecx +
sub eax 6609h +
jz loc_40BCC0  +
dec eax  +
jz loc_40BCB6  +
dec eax  +
jz loc_40BCAC  +
dec eax  +
jz loc_40BCA2  +
dec eax  +
jz loc_40BC98  +
sub eax 11h +
jz loc_40BC8E  +
dec eax  +
jnz loc_40BF01  +
push offset aCalg_pro_expor  +
jmp loc_40BF22  +
push offset aCalg_g28147  +
jmp loc_40BF22  +
push offset aCalg_rc5  +
jmp loc_40BF22  +
push offset aCalg_cylink_me  +
jmp loc_40BF22  +
push offset aCalg_tek  +
jmp loc_40BF22  +
push offset aCalg_skipjack  +
jmp loc_40BF22  +
push offset aCalg_3des_112  +
jmp loc_40BF22  +
push offset aCalg_simple_ex  +
jmp loc_40BF22  +
mov eax ecx +
sub eax 6626h +
jz loc_40BD3E  +
dec eax  +
dec eax  +
jz loc_40BD34  +
sub eax 1D9h +
jz loc_40BD2A  +
dec eax  +
jz loc_40BD20  +
sub eax 401h +
jz loc_40BD16  +
sub eax 4 +
jz loc_40BD0C  +
sub eax 13FAh +
jnz loc_40BF01  +
push offset aCalg_md2  +
jmp loc_40BF22  +
push offset aCalg_tls1_enc_  +
jmp loc_40BF22  +
push offset aCalg_tls1_mac_  +
jmp loc_40BF22  +
push offset aCalg_seal  +
jmp loc_40BF22  +
push offset aCalg_rc4  +
jmp loc_40BF22  +
push offset aCalg_ric_diver  +
jmp loc_40BF22  +
push offset aCalg_pro_diver  +
jmp loc_40BF22  +
push offset aCalg_md4  +
jmp loc_40BF22  +
mov eax 801Eh +
cmp ecx eax +
ja loc_40BDD7  +
jz loc_40BDCD  +
lea eax [ecx-8003h] +
cmp eax 0Bh +
ja loc_40BF01  +
jmp ds:off_40C17D[eax*4]  +
push offset aCalg_md5  +
jmp loc_40BF22  +
push offset aCalg_shaCalg_s  +
jmp loc_40BF22  +
push offset aCalg_sha_256  +
jmp loc_40BF22  +
push offset aCalg_sha_384  +
jmp loc_40BF22  +
push offset aCalg_sha_512  +
jmp loc_40BF22  +
push offset aCalg_mac  +
jmp loc_40BF22  +
push offset aCalg_ssl3_sham  +
jmp loc_40BF22  +
push offset aCalg_hmac  +
jmp loc_40BF22  +
push offset aCalg_tls1prf  +
jmp loc_40BF22  +
push offset aCalg_gr3411  +
jmp loc_40BF22  +
mov eax 0A621h +
cmp ecx eax +
ja loc_40BEA1  +
jz loc_40BE97  +
mov eax 803Ah +
cmp ecx eax +
ja loc_40BE4F  +
jz loc_40BE45  +
mov eax ecx +
sub eax 801Fh +
jz loc_40BE3B  +
dec eax  +
jz loc_40BE31  +
dec eax  +
dec eax  +
jz loc_40BE27  +
sub eax 0Fh +
jz loc_40BE1D  +
sub eax 5 +
jnz loc_40BF01  +
push offset aCalg_tls1_ma_0  +
jmp loc_40BF22  +
push offset aCalg_tls1prf_2  +
jmp loc_40BF22  +
push offset aCalg_gr3411_20  +
jmp loc_40BF22  +
push offset aCalg_tls1_ma_1  +
jmp loc_40BF22  +
push offset aCalg_g28147_ma  +
jmp loc_40BF22  +
push offset aCalg_pbkdf2_20  +
jmp loc_40BF22  +
mov eax ecx +
sub eax 803Bh +
jz loc_40BE8D  +
sub eax 5 +
jz loc_40BE83  +
sub eax 1FC3h +
jz loc_40BE79  +
sub eax 3FDh +
jnz loc_40BF01  +
push offset aCalg_rsa_keyx  +
jmp loc_40BF22  +
push offset aCalg_hughes_md  +
jmp loc_40BF22  +
push offset aCalg_pbkdf2_94  +
jmp loc_40BF22  +
push offset aCalg_pbkdf2__0  +
jmp loc_40BF22  +
push offset aCalg_pro_agree  +
jmp loc_40BF22  +
mov eax 0AA25h +
cmp ecx eax +
ja loc_40BEED  +
jz loc_40BEE6  +
mov eax ecx +
sub eax 0AA01h +
jz loc_40BEDF  +
dec eax  +
jz loc_40BED8  +
dec eax  +
jz loc_40BED1  +
dec eax  +
jz loc_40BECA  +
sub eax 20h +
jnz loc_40BF01  +
push offset aCalg_dh_el_sf  +
jmp loc_40BF22  +
push offset aCalg_kea_keyx  +
jmp loc_40BF22  +
push offset aCalg_agreedkey  +
jmp loc_40BF22  +
push offset aCalg_dh_ephem  +
jmp loc_40BF22  +
push offset aCalg_dh_sf  +
jmp loc_40BF22  +
push offset aCalg_dh_el_eph  +
jmp loc_40BF22  +
mov eax ecx +
sub eax 0AA42h +
jz loc_40BF1D  +
dec eax  +
jz loc_40BF16  +
sub eax 3 +
jz loc_40BF0F  +
dec eax  +
jz loc_40BF08  +
push ecx  +
push ebx  +
call esi  +
pop ecx  +
jmp loc_40BF24  +
push offset aCalg_dh_gr3410  +
jmp loc_40BF22  +
push offset aCalg_dh_gr34_0  +
jmp loc_40BF22  +
push offset aCalg_dh_gr34_1  +
jmp loc_40BF22  +
push offset aCalg_dh_gr34_2  +
call esi  +
pop ecx  +
push [ebp+var_4]  +
push [ebp+var_4]  +
push offset a0x08lx08luAlgc  +
call esi  +
mov eax [ebp+var_4] +
mov ecx 0E000h +
add esp 0Ch +
and eax ecx +
jz loc_40BF99  +
cmp eax 2000h +
jz loc_40BF92  +
cmp eax 4000h +
jz loc_40BF8B  +
cmp eax 6000h +
jz loc_40BF84  +
cmp eax 8000h +
jz loc_40BF7D  +
cmp eax 0A000h +
jz loc_40BF76  +
cmp eax ecx +
jz loc_40BF6F  +
push eax  +
push ebx  +
call esi  +
pop ecx  +
jmp loc_40BFA0  +
push offset aAlg_class_all  +
jmp loc_40BF9E  +
push offset aAlg_class_key_  +
jmp loc_40BF9E  +
push offset aAlg_class_hash  +
jmp loc_40BF9E  +
push offset aAlg_class_data  +
jmp loc_40BF9E  +
push offset aAlg_class_msg_  +
jmp loc_40BF9E  +
push offset aAlg_class_sign  +
jmp loc_40BF9E  +
push offset aAlg_class_any  +
call esi  +
pop ecx  +
push offset aAlgtype  +
call esi  +
mov eax [ebp+var_4] +
pop ecx  +
and eax 1E00h +
mov ecx 800h +
cmp eax ecx +
ja loc_40BFF5  +
jz loc_40BFEE  +
test eax eax +
jz loc_40BFE7  +
cmp eax edi +
jz loc_40BFE0  +
cmp eax 400h +
jz loc_40BFD9  +
cmp eax 600h +
jnz loc_40C00A  +
push offset aAlg_type_block  +
jmp loc_40C024  +
push offset aAlg_type_rsa  +
jmp loc_40C024  +
push offset aAlg_type_dss  +
jmp loc_40C024  +
push offset aAlg_type_any  +
jmp loc_40C024  +
push offset aAlg_type_strea  +
jmp loc_40C024  +
cmp eax 0A00h +
jz loc_40C01F  +
cmp eax 0C00h +
jz loc_40C018  +
cmp eax 0E00h +
jz loc_40C011  +
push eax  +
push ebx  +
call esi  +
pop ecx  +
jmp loc_40C026  +
push offset aAlg_type_gr341  +
jmp loc_40C024  +
push offset aAlg_type_secur  +
jmp loc_40C024  +
push offset aAlg_type_dh  +
call esi  +
pop ecx  +
push offset aAlgsid  +
call esi  +
mov eax [ebp+var_4] +
and eax 1FFh +
push eax  +
push offset aD_1  +
call esi  +
mov ebx offset asc_445094 +
push ebx  +
call esi  +
push [ebp+arg_4]  +
call sub_429B41  +
add esp 14h +
test eax eax +
jz loc_40C06E  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_40C1AD  +
add esp 0Ch +
test eax eax +
jnz loc_40C175  +
xor edi edi +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 6  +
push [ebp+arg_C]  +
mov [ebp+var_8] 4 +
cmp dword_526128 edi +
jz loc_40C09A  +
push [ebp+arg_0]  +
mov eax dword_526178 +
call dword ptr [eax+28h]  +
jmp loc_40C0A0  +
call ds:off_4444B8  +
cmp eax edi +
jnz loc_40C0C2  +
push offset aGetkeyparamKp_  +
push 0Fh  +
push 0F63h  +
push offset aCtkey_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_40C175  +
push offset aPermissions  +
call esi  +
pop ecx  +
xor edi edi +
xor edx edx +
inc edx  +
mov ecx edi +
shl edx cl +
mov eax edx +
and eax [ebp+var_C] +
cmp eax 10h +
ja loc_40C116  +
jz loc_40C10F  +
sub eax 0 +
jz loc_40C154  +
dec eax  +
jz loc_40C108  +
dec eax  +
jz loc_40C101  +
dec eax  +
dec eax  +
jz loc_40C0FA  +
sub eax 4 +
jnz loc_40C12C  +
push offset aCrypt_read  +
jmp loc_40C151  +
push offset aCrypt_export  +
jmp loc_40C151  +
push offset aCrypt_decrypt  +
jmp loc_40C151  +
push offset aCrypt_encrypt  +
jmp loc_40C151  +
push offset aCrypt_write  +
jmp loc_40C151  +
sub eax 20h +
jz loc_40C14C  +
sub eax 20h +
jz loc_40C145  +
sub eax 40h +
jz loc_40C13E  +
sub eax 80h +
jz loc_40C137  +
push edx  +
push offset a0xX  +
call esi  +
pop ecx  +
jmp loc_40C153  +
push offset aCrypt_archive  +
jmp loc_40C151  +
push offset aCrypt_import_k  +
jmp loc_40C151  +
push offset aCrypt_export_k  +
jmp loc_40C151  +
push offset aCrypt_mac  +
call esi  +
pop ecx  +
inc edi  +
cmp edi 20h +
jb loc_40C0CC  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
call sub_40C4C1  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40C175  +
push ebx  +
call esi  +
pop ecx  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
sub esp 2D8h +
push ecx  +
push ecx  +
sub esp 10h +
sub esp 20h +
push ecx  +
jmp loc_40CC6E  +
push ecx  +
sub esp 40h +
sub esp 28h +
sub esp 34h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
xor esi esi +
inc esi  +
push edi  +
mov [ebp+var_24] ebx +
mov [ebp+var_10] ebx +
mov [ebp+hObject] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_30] ebx +
mov [ebp+var_34] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_8] esi +
mov [ebp+var_1C] ebx +
mov edi offset off_464500 +
jmp loc_40D675  +
cmp eax 0Ah +
ja loc_40D6D0  +
jmp ds:off_40D725[eax*4]  +
mov eax lpLibFileName +
mov [ebp+var_24] eax +
jmp loc_40D675  +
mov eax lpLibFileName +
mov [ebp+var_10] eax +
jmp loc_40D675  +
mov [ebp+var_30] esi +
jmp loc_40D675  +
mov [ebp+var_34] esi +
jmp loc_40D675  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_40D675  +
mov ebx lpLibFileName +
test ebx ebx +
jnz loc_40D5DE  +
and [ebp+var_14] ebx +
jmp loc_40D619  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40D5E3  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov [ebp+var_C] esp +
push esi  +
push ebx  +
push [ebp+var_C]  +
call ds:wcstombs  +
mov eax [ebp+var_C] +
mov [ebp+var_14] eax +
xor esi esi +
add esp 0Ch +
inc esi  +
xor ebx ebx +
jmp loc_40D675  +
mov [ebp+var_28] esi +
jmp loc_40D675  +
mov ebx lpLibFileName +
test ebx ebx +
jnz loc_40D631  +
and [ebp+var_18] ebx +
jmp loc_40D619  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40D636  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov [ebp+var_C] esp +
push esi  +
push ebx  +
push [ebp+var_C]  +
call ds:wcstombs  +
mov eax [ebp+var_C] +
mov [ebp+var_18] eax +
jmp loc_40D613  +
mov eax lpLibFileName +
mov [ebp+var_20] eax +
jmp loc_40D675  +
mov [ebp+var_1C] esi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BD8 eax +
cmp eax 0FFFFFFFFh +
jnz loc_40D588  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_40D6CB  +
push [ebp+var_1C]  +
xor esi esi +
cmp [ebp+var_30] esi +
jz loc_40D6E5  +
push [ebp+var_28]  +
push [ebp+var_20]  +
push [ebp+hObject]  +
push [ebp+var_14]  +
push [ebp+var_10]  +
push [ebp+var_24]  +
call sub_40D827  +
add esp 1Ch +
jmp loc_40D717  +
mov [ebp+var_8] ebx +
call sub_40D751  +
mov eax [ebp+var_8] +
lea esp [ebp-40h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
cmp [ebp+var_34] esi +
jz loc_40D703  +
push [ebp+var_28]  +
push [ebp+var_18]  +
push [ebp+var_10]  +
push [ebp+var_20]  +
push [ebp+hObject]  +
call sub_40D95E  +
add esp 18h +
jmp loc_40D717  +
push [ebp+var_18]  +
push [ebp+var_14]  +
push [ebp+var_10]  +
push [ebp+var_24]  +
call sub_40DA77  +
add esp 14h +
mov [ebp+var_8] eax +
cmp eax esi +
jnz loc_40D6D0  +
mov [ebp+var_8] esi +
jmp loc_40D6D0  +
***
push offset aSSfseCommandOp  +
sub esp 0Ch +
sub esp 0Ch +
push ecx  +
sub esp 0C0h +
sub esp 40h +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
push 2  +
pop edi  +
mov ebx eax +
mov esi offset off_464470 +
push esi  +
xor eax eax +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+dwProvType] 50h +
mov [ebp+var_8] 1 +
mov [ebp+var_4] eax +
mov [ebp+pszProvName] eax +
mov [ebp+var_14] eax +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BDC eax +
cmp eax 0FFFFFFFFh +
jz loc_40E1E2  +
inc [ebp+var_14]  +
cmp eax 7 +
ja loc_40E1E7  +
jmp ds:off_40E1F1[eax*4]  +
call sub_4295C2  +
mov [ebp+dwProvType] eax +
jmp loc_40E13D  +
and edi 0FFFFFFFDh +
or edi 1 +
jmp loc_40E13D  +
or [ebp+var_4] 8 +
jmp loc_40E13D  +
or [ebp+var_4] 1 +
jmp loc_40E13D  +
or [ebp+var_4] 4 +
mov eax lpLibFileName +
mov [ebp+pszProvName] eax +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BDC eax +
cmp eax 0FFFFFFFFh +
jnz loc_40E100  +
cmp [ebp+var_14] 0 +
jz loc_40E1E2  +
push [ebp+arg_0]  +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_40E1E2  +
mov bl byte ptr [ebp+var_4] +
test bl 1 +
jz loc_40E183  +
push [ebp+dwProvType]  +
call sub_40E2B5  +
pop ecx  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_40E1E7  +
test bl 2 +
jz loc_40E19A  +
push edi  +
push [ebp+dwProvType]  +
call sub_40E3E1  +
pop ecx  +
pop ecx  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_40E1E7  +
cmp [ebp+pszProvName] 0 +
jz loc_40E1BE  +
push [ebp+pszProvName]  +
test bl 4 +
jz loc_40E1AB  +
or edi 4 +
push edi  +
push [ebp+dwProvType]  +
call sub_40E3AA  +
add esp 0Ch +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_40E1E7  +
test bl 8 +
jz loc_40E1CF  +
call sub_40E47F  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_40E1E7  +
and [ebp+var_8] 0 +
jmp loc_40E1E7  +
or [ebp+var_4] 2 +
jmp loc_40E13D  +
and [ebp+var_8] 0 +
call sub_40E211  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push offset aSDefprovComman  +
sub esp 10h +
push [ebp+dwFlags]  +
push ecx  +
sub esp 0Ch +
sub esp 428h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor edx edx +
push esi  +
push edi  +
xor esi esi +
inc esi  +
mov ebx ecx +
push 2  +
mov [ebp+var_424] ebx +
mov [ebp+var_408] edx +
mov [ebp+var_414] edx +
mov [ebp+var_404] edx +
mov [ebp+var_428] edx +
mov [ebp+var_418] edx +
mov [ebp+var_3FC] edx +
mov [ebp+var_3F0] 0F0000000h +
mov [ebp+var_400] esi +
mov [ebp+var_3F4] edx +
mov [ebp+var_41C] edx +
mov [ebp+lpWideCharStr] edx +
mov [ebp+var_3F8] esi +
mov [ebp+var_410] edx +
xor eax eax +
pop edi  +
movzx ecx ds:word_44D784[eax] +
mov word ptr [ebp+eax+var_3EC] cx +
add eax edi +
cmp cx dx +
jnz loc_40E5CD  +
push offset off_464380  +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_40C] edx +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BE0 eax +
cmp eax 0FFFFFFFFh +
jz loc_40EB70  +
push 4  +
pop ebx  +
inc [ebp+var_40C]  +
cmp eax 0Dh +
ja loc_40EB75  +
jmp ds:off_40EBFF[eax*4]  +
mov eax lpLibFileName +
test eax eax +
jz loc_40E645  +
lea ecx [ebp+var_408] +
push ecx  +
push offset aD_0  +
push eax  +
call ds:swscanf  +
add esp 0Ch +
jmp loc_40EA6F  +
mov [ebp+var_408] 1 +
jmp loc_40EA6F  +
mov eax lpLibFileName +
mov [ebp+var_414] eax +
jmp loc_40EA6F  +
call sub_4291AC  +
mov [ebp+var_404] eax +
jmp loc_40EA6F  +
call sub_4295C2  +
mov [ebp+var_3FC] eax +
jmp loc_40EA6F  +
mov [ebp+var_428] 1 +
jmp loc_40EA6F  +
mov [ebp+var_418] 1 +
jmp loc_40EA6F  +
mov eax lpLibFileName +
mov edx offset word_44D784 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E6D2  +
test si si +
jz loc_40E6CE  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E6D2  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E6AE  +
xor ecx ecx +
jmp loc_40E6D7  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E6F9  +
xor esi esi +
lea edx [ebp+var_3EC] +
inc esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E6E6  +
jmp loc_40EA6F  +
mov edx offset aPp_enumalgs_ex +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E724  +
test si si +
jz loc_40E720  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E724  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E700  +
xor ecx ecx +
jmp loc_40E729  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E74B  +
push 16h  +
lea edx [ebp+var_3EC] +
pop esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E738  +
jmp loc_40EA6F  +
mov edx offset aPp_enumcontain +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E776  +
test si si +
jz loc_40E772  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E776  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E752  +
xor ecx ecx +
jmp loc_40E77B  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E79C  +
lea edx [ebp+var_3EC] +
mov esi edi +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E789  +
jmp loc_40EA6F  +
mov edx offset aPp_enumreaders +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E7C7  +
test si si +
jz loc_40E7C3  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E7C7  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E7A3  +
xor ecx ecx +
jmp loc_40E7CC  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E7EE  +
push 72h  +
lea edx [ebp+var_3EC] +
pop esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E7DB  +
jmp loc_40EA6F  +
mov edx offset aPp_enum_hashoi +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E819  +
test si si +
jz loc_40E815  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E819  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E7F5  +
xor ecx ecx +
jmp loc_40E81E  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E840  +
push 67h  +
lea edx [ebp+var_3EC] +
pop esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E82D  +
jmp loc_40EA6F  +
mov edx offset aPp_enum_cipher +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E86B  +
test si si +
jz loc_40E867  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E86B  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E847  +
xor ecx ecx +
jmp loc_40E870  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E892  +
push 68h  +
lea edx [ebp+var_3EC] +
pop esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E87F  +
jmp loc_40EA6F  +
mov edx offset aPp_enum_signat +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E8BD  +
test si si +
jz loc_40E8B9  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E8BD  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E899  +
xor ecx ecx +
jmp loc_40E8C2  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E8E4  +
push 69h  +
lea edx [ebp+var_3EC] +
pop esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E8D1  +
jmp loc_40EA6F  +
mov edx offset aPp_enum_dhoid +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E90F  +
test si si +
jz loc_40E90B  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E90F  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E8EB  +
xor ecx ecx +
jmp loc_40E914  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E936  +
push 6Ah  +
lea edx [ebp+var_3EC] +
pop esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E923  +
jmp loc_40EA6F  +
mov edx offset aPp_enumoids_ex +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E961  +
test si si +
jz loc_40E95D  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E961  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E93D  +
xor ecx ecx +
jmp loc_40E966  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40E988  +
push 5Bh  +
lea edx [ebp+var_3EC] +
pop esi  +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E975  +
jmp loc_40EA6F  +
mov edx offset aPp_enum_contai +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_40E9B3  +
test si si +
jz loc_40E9AF  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_40E9B3  +
add ecx ebx +
add edx ebx +
test si si +
jnz loc_40E98F  +
xor ecx ecx +
jmp loc_40E9B8  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_40EB59  +
lea edx [ebp+var_3EC] +
mov esi 85h +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax edi +
test cx cx +
jnz loc_40E9CD  +
jmp loc_40EA6F  +
mov [ebp+var_41C] 1 +
jmp loc_40EA6F  +
mov eax lpLibFileName +
test eax eax +
jz loc_40EA08  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+var_3F4] eax +
jmp loc_40EA0F  +
and [ebp+var_3F4] 0 +
cmp [ebp+var_3F4] 0 +
jz loc_40EB75  +
and [ebp+var_3F0] 0 +
jmp loc_40EA6F  +
mov [ebp+var_410] 1 +
jmp loc_40EA6F  +
mov [ebp+var_410] edi +
jmp loc_40EA6F  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+lpWideCharStr] eax +
jmp loc_40EA6F  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_400] eax +
test eax eax +
jnz loc_40EA6F  +
mov [ebp+var_400] 1 +
push offset off_464380  +
push [ebp+var_424]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BE0 eax +
cmp eax 0FFFFFFFFh +
jnz loc_40E60B  +
cmp [ebp+var_40C] 0 +
jz loc_40EB70  +
push [ebp+arg_0]  +
mov ebx [ebp+var_424] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_40EB70  +
cmp [ebp+var_3FC] eax +
jnz loc_40EADF  +
push [ebp+var_404]  +
lea ebx [ebp+var_3FC] +
call sub_429A20  +
pop ecx  +
mov [ebp+var_3F8] eax +
test eax eax +
jnz loc_40EB75  +
xor eax eax +
cmp [ebp+var_428] eax +
jz loc_40EAF0  +
or [ebp+var_3F0] 20h +
cmp [ebp+var_418] eax +
jz loc_40EAFF  +
or [ebp+var_3F0] 40h +
cmp [ebp+var_400] eax +
jbe loc_40EBF2  +
mov eax [ebp+var_410] +
dec eax  +
jz loc_40EB9C  +
dec eax  +
jnz loc_40EBE6  +
lea eax [ebp+var_3EC] +
push eax  +
push [ebp+var_3F0]  +
mov ebx esi +
push [ebp+var_3F4]  +
push [ebp+var_3FC]  +
push [ebp+var_404]  +
push [ebp+var_414]  +
push [ebp+var_408]  +
call sub_40F140  +
add esp 1Ch +
jmp loc_40EBDC  +
push eax  +
push offset aErrorWrongPara  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
jmp loc_40EB75  +
and [ebp+var_3F8] 0 +
call sub_40EC37  +
push [ebp+var_3F4]  +
call ds:free  +
pop ecx  +
call sub_4386B3  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_3F8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F480  +
leave   +
retn   +
push [ebp+var_41C]  +
mov ecx [ebp+var_3FC] +
mov edx [ebp+var_404] +
lea eax [ebp+var_3EC] +
push eax  +
push [ebp+lpWideCharStr]  +
push esi  +
push [ebp+var_3F0]  +
push [ebp+var_3F4]  +
push [ebp+var_414]  +
push [ebp+var_408]  +
call sub_40ED31  +
add esp 20h +
mov [ebp+var_3F8] eax +
test eax eax +
jnz loc_40EB75  +
dec [ebp+var_400]  +
jnz loc_40EB0B  +
and [ebp+var_3F8] 0 +
jmp loc_40EB75  +
***
push offset aSEnumGlobalsCo  +
sub esp 1Ch +
push ecx  +
sub esp 120h +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
sub esp 0Ch +
sub esp 14h +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
cmp [ebp+arg_0] 0 +
lea eax [ebx+ebx] +
sub esp 14h +
sub esp 14h +
push offset aSHashOptions  +
sub esp 58h +
sub esp 54h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov esi offset off_4641D0 +
push esi  +
push [ebp+arg_4]  +
xor edi edi +
push [ebp+arg_0]  +
inc edi  +
mov [ebp+var_4] edi +
mov [ebp+var_C] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_50] ebx +
mov [ebp+var_54] ebx +
mov [ebp+var_34] ebx +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_30] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_4C] ebx +
mov [ebp+hObject] ebx +
mov [ebp+var_44] ebx +
mov [ebp+var_40] ebx +
mov [ebp+var_8] ebx +
mov [ebp+lpWideCharStr] ebx +
mov [ebp+var_10] ebx +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BE8 eax +
cmp eax 0FFFFFFFFh +
jz loc_410E71  +
inc [ebp+var_10]  +
cmp eax 12h +
ja loc_410E74  +
jmp ds:off_410E93[eax*4]  +
mov [ebp+var_50] edi +
jmp loc_410DA2  +
mov [ebp+var_54] edi +
jmp loc_410DA2  +
mov [ebp+var_18] edi +
jmp loc_410DA2  +
mov [ebp+var_14] edi +
jmp loc_410DA2  +
mov [ebp+var_3C] edi +
mov [ebp+var_34] edi +
jmp loc_410DA2  +
mov eax lpLibFileName +
cmp eax ebx +
jz loc_410D32  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+var_8] eax +
jmp loc_410D35  +
mov [ebp+var_8] ebx +
cmp [ebp+var_8] ebx +
jz loc_410E74  +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+lpWideCharStr] eax +
jmp loc_410DA2  +
mov [ebp+var_38] edi +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+var_4C] eax +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+var_44] eax +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+var_2C] eax +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+var_30] eax +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+var_28] eax +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+var_24] eax +
jmp loc_410DA2  +
mov eax lpLibFileName +
mov [ebp+var_40] eax +
jmp loc_410DA2  +
mov [ebp+var_1C] edi +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BE8 eax +
cmp eax 0FFFFFFFFh +
jnz loc_410CDE  +
cmp [ebp+var_10] ebx +
jz loc_410E71  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_410E6F  +
xor esi esi +
cmp [ebp+var_14] esi +
jz loc_410DEC  +
cmp [ebp+var_18] esi +
jz loc_410E6F  +
cmp [ebp+var_34] esi +
jz loc_410E2A  +
push [ebp+var_14]  +
push [ebp+var_18]  +
push [ebp+var_38]  +
push [ebp+var_1C]  +
push [ebp+var_3C]  +
push [ebp+lpWideCharStr]  +
push [ebp+var_8]  +
push [ebp+var_40]  +
push [ebp+var_44]  +
push [ebp+hObject]  +
push [ebp+var_4C]  +
call sub_411A18  +
add esp 2Ch +
cmp eax esi +
jz loc_410E2A  +
mov [ebp+var_4] eax +
xor ebx ebx +
jmp loc_410E74  +
mov [ebp+var_4] ebx +
jmp loc_410E71  +
cmp [ebp+var_50] esi +
jz loc_410E4D  +
push [ebp+var_1C]  +
push [ebp+var_24]  +
push [ebp+lpWideCharStr]  +
push [ebp+var_2C]  +
push [ebp+var_28]  +
push [ebp+var_30]  +
call sub_411D3B  +
add esp 18h +
cmp eax esi +
jnz loc_410E1E  +
cmp [ebp+var_54] esi +
jz loc_410E6A  +
push [ebp+var_24]  +
push [ebp+var_28]  +
push [ebp+var_2C]  +
push [ebp+var_30]  +
call sub_4120F7  +
add esp 10h +
cmp eax esi +
jnz loc_410E1E  +
mov [ebp+var_4] esi +
jmp loc_410E21  +
xor ebx ebx +
mov [ebp+var_C] edi +
push [ebp+var_8]  +
call ds:free  +
cmp [ebp+var_C] ebx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
jz loc_410E8B  +
call sub_410EE2  +
mov eax [ebp+var_4] +
leave   +
retn   +
***
push offset aSIpsecCommandO  +
sub esp 68h +
push ecx  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 14h +
sub esp 1Ch +
sub eax 4Bh +
cmp eax 0AA25h +
sub esp 18h +
sub esp 18h +
push ecx  +
push esi  +
push ecx  +
push ecx  +
sub esp 0Ch +
mov eax [eax+0Ch] +
sub esp 18h +
push ebx  +
push ebx  +
sub esp 38h +
sub esp 68h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi offset off_4640D0 +
push edi  +
push [ebp+arg_4]  +
mov [ebp+var_4C] esi +
push [ebp+arg_0]  +
mov [ebp+var_58] esi +
mov [ebp+var_28] esi +
mov [ebp+var_5C] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_38] esi +
mov [ebp+var_3C] esi +
mov [ebp+var_8] 1 +
mov [ebp+var_10] esi +
mov [ebp+hProv] esi +
mov [ebp+var_18] esi +
mov [ebp+var_30] esi +
mov [ebp+var_24] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_34] esi +
mov [ebp+hKey] esi +
mov [ebp+var_50] esi +
mov [ebp+var_48] esi +
mov [ebp+var_40] esi +
mov [ebp+var_44] esi +
mov [ebp+var_60] 7Fh +
mov [ebp+var_54] esi +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BEC eax +
cmp eax 0FFFFFFFFh +
jz loc_412E32  +
inc [ebp+var_54]  +
mov ebx ds:_wcsdup +
cmp eax 0Eh +
ja loc_412E39  +
jmp ds:off_41309C[eax*4]  +
call sub_4291AC  +
mov [ebp+var_58] eax +
mov eax lpLibFileName +
cmp eax esi +
jz loc_412B9C  +
push eax  +
call ebx  +
pop ecx  +
mov [ebp+var_28] eax +
jmp loc_412B9F  +
mov [ebp+var_28] esi +
cmp [ebp+var_28] esi +
jz loc_412E39  +
jmp loc_412D21  +
call sub_4291AC  +
mov [ebp+var_5C] eax +
mov eax lpLibFileName +
cmp eax esi +
jz loc_412BC7  +
push eax  +
call ebx  +
pop ecx  +
mov [ebp+var_1C] eax +
jmp loc_412BCA  +
mov [ebp+var_1C] esi +
cmp [ebp+var_1C] esi +
jmp loc_412BA2  +
call sub_4295C2  +
mov [ebp+var_38] eax +
jmp loc_412D21  +
call sub_4295C2  +
mov [ebp+var_3C] eax +
jmp loc_412D21  +
mov eax lpLibFileName +
cmp eax esi +
jz loc_412BFB  +
push eax  +
call ebx  +
pop ecx  +
mov [ebp+var_24] eax +
jmp loc_412BFE  +
mov [ebp+var_24] esi +
cmp [ebp+var_24] esi +
jmp loc_412BA2  +
mov eax lpLibFileName +
cmp eax esi +
jz loc_412C15  +
push eax  +
call ebx  +
pop ecx  +
mov [ebp+var_2C] eax +
jmp loc_412C18  +
mov [ebp+var_2C] esi +
cmp [ebp+var_2C] esi +
jmp loc_412BA2  +
mov [ebp+var_50] 1 +
jmp loc_412D21  +
or [ebp+var_18] 20h +
jmp loc_412D21  +
or [ebp+var_30] 20h +
jmp loc_412D21  +
or [ebp+var_18] 40h +
or [ebp+var_30] 40h +
jmp loc_412D21  +
mov ebx lpLibFileName +
cmp ebx esi +
jnz loc_412C5A  +
mov [ebp+var_48] esi +
jmp loc_412D21  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx si +
jnz loc_412C5F  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov [ebp+var_20] esp +
push esi  +
push ebx  +
push [ebp+var_20]  +
call ds:wcstombs  +
mov eax [ebp+var_20] +
mov [ebp+var_48] eax +
add esp 0Ch +
xor esi esi +
jmp loc_412D21  +
mov ebx lpLibFileName +
cmp ebx esi +
jnz loc_412CA8  +
mov [ebp+var_40] esi +
jmp loc_412D21  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx si +
jnz loc_412CAD  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov [ebp+var_20] esp +
push esi  +
push ebx  +
push [ebp+var_20]  +
call ds:wcstombs  +
mov eax [ebp+var_20] +
mov [ebp+var_40] eax +
jmp loc_412C8F  +
push esi  +
lea eax [ebp+var_64] +
push eax  +
push lpLibFileName  +
mov [ebp+var_64] esi +
call ds:wcstoul  +
mov [ebp+var_44] eax +
mov eax [ebp+var_64] +
jmp loc_412D15  +
push esi  +
lea eax [ebp+var_68] +
push eax  +
push lpLibFileName  +
mov [ebp+var_68] esi +
call ds:wcstoul  +
mov [ebp+var_60] eax +
mov eax [ebp+var_68] +
add esp 0Ch +
cmp [eax] si +
jnz loc_412E1C  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BEC eax +
cmp eax 0FFFFFFFFh +
jnz loc_412B69  +
cmp [ebp+var_54] esi +
jz loc_412E32  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_412E32  +
cmp [ebp+var_38] esi +
jnz loc_412D74  +
push [ebp+var_58]  +
lea ebx [ebp+var_38] +
call sub_429A20  +
pop ecx  +
cmp eax esi +
jnz loc_412E2A  +
cmp [ebp+var_3C] esi +
jnz loc_412D8D  +
push [ebp+var_5C]  +
lea ebx [ebp+var_3C] +
call sub_429A20  +
pop ecx  +
cmp eax esi +
jnz loc_412E2A  +
call sub_4325D9  +
push [ebp+var_60]  +
mov dword_52605C esi +
push [ebp+var_44]  +
push offset aCsptest  +
call sub_432559  +
add esp 0Ch +
mov dword_52605C eax +
mov eax [ebp+var_18] +
cmp [ebp+var_50] esi +
jz loc_412DBB  +
or eax 8 +
mov edi ds:off_4444D4 +
push eax  +
push [ebp+var_38]  +
lea eax [ebp+hProv] +
push [ebp+var_28]  +
push [ebp+var_24]  +
push eax  +
call edi  +
test eax eax +
jz loc_41307B  +
push [ebp+hProv]  +
mov ebx ds:printf +
push offset aCryptacquire_2  +
call ebx  +
pop ecx  +
pop ecx  +
cmp [ebp+var_48] esi +
jz loc_412EF8  +
push esi  +
push [ebp+var_48]  +
push 20h  +
push [ebp+hProv]  +
call ds:off_4444DC  +
test eax eax +
jnz loc_412EF8  +
push offset aSetprovparamPi  +
push 0Fh  +
push 0D3h  +
jmp loc_413087  +
push dword_465BEC  +
mov eax edi +
call sub_42905C  +
pop ecx  +
mov [ebp+var_8] eax +
jmp loc_412E39  +
mov [ebp+var_8] esi +
mov [ebp+var_4C] 1 +
push [ebp+var_28]  +
mov esi ds:free +
call esi  +
push [ebp+var_1C]  +
call esi  +
push [ebp+var_24]  +
call esi  +
push [ebp+var_2C]  +
call esi  +
mov esi ds:off_4444B0 +
xor edi edi +
add esp 10h +
cmp [ebp+hKey] edi +
jz loc_412E88  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jnz loc_412E88  +
push offset aDestroykeyAt_e  +
push 0Fh  +
push 114h  +
push offset aKeycopy_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_8] eax +
cmp [ebp+var_34] edi +
jz loc_412EB2  +
push [ebp+var_34]  +
call esi  +
test eax eax +
jnz loc_412EB2  +
push offset aDestroykeyAt_s  +
push 0Fh  +
push 116h  +
push offset aKeycopy_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_8] eax +
mov esi ds:off_4444D8 +
cmp [ebp+hProv] edi +
jz loc_412EC3  +
push edi  +
push [ebp+hProv]  +
call esi  +
cmp [ebp+var_10] edi +
jz loc_412ECE  +
push edi  +
push [ebp+var_10]  +
call esi  +
call sub_4325D9  +
mov dword_52605C edi +
cmp [ebp+var_4C] edi +
jz loc_412EE3  +
call sub_4130D8  +
mov eax [ebp+var_8] +
lea esp [ebp-74h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
mov eax [ebp+var_30] +
or eax 8 +
push eax  +
push [ebp+var_3C]  +
lea eax [ebp+var_10] +
push [ebp+var_1C]  +
push [ebp+var_2C]  +
push eax  +
call edi  +
test eax eax +
jz loc_41306D  +
push [ebp+var_10]  +
push offset aCryptacquire_2  +
call ebx  +
pop ecx  +
pop ecx  +
cmp [ebp+var_40] esi +
jz loc_412F4B  +
push esi  +
push [ebp+var_40]  +
push 20h  +
push [ebp+var_10]  +
call ds:off_4444DC  +
test eax eax +
jnz loc_412F4B  +
push offset aSetprovparam_4  +
push 0Fh  +
push 0E0h  +
jmp loc_413087  +
lea eax [ebp+hKey] +
push eax  +
cmp [ebp+var_50] esi +
jz loc_412FB5  +
push 4000h  +
push 1  +
push [ebp+hProv]  +
call ds:off_4444A8  +
test eax eax +
jnz loc_412F79  +
push offset aGenkey  +
push 0Fh  +
push 0E6h  +
jmp loc_413087  +
push esi  +
push [ebp+hKey]  +
push [ebp+var_10]  +
push [ebp+hProv]  +
call sub_434A1E  +
add esp 10h +
cmp eax esi +
jz loc_413042  +
push offset aCopyprivatekey  +
push 0Fh  +
push eax  +
push 0ECh  +
push offset aKeycopy_c  +
mov [ebp+var_8] eax +
call sub_437C8E  +
add esp 14h +
jmp loc_412E39  +
mov ebx ds:off_4444C0 +
push 1  +
push [ebp+hProv]  +
call ebx  +
mov edi ds:off_4444B8 +
test eax eax +
jz loc_412FFE  +
push esi  +
lea eax [ebp+var_44] +
push eax  +
push esi  +
push 1Ah  +
push [ebp+hKey]  +
call edi  +
push eax  +
push [ebp+hKey]  +
push [ebp+var_10]  +
push [ebp+hProv]  +
call sub_434A1E  +
add esp 10h +
cmp eax esi +
jz loc_412FFE  +
push offset aCopyprivatekey  +
push 0Fh  +
push eax  +
push 0F7h  +
jmp loc_412FA0  +
lea eax [ebp+var_34] +
push eax  +
push 2  +
push [ebp+hProv]  +
call ebx  +
test eax eax +
jz loc_413042  +
push esi  +
lea eax [ebp+var_44] +
push eax  +
push esi  +
push 1Ah  +
push [ebp+var_34]  +
call edi  +
push eax  +
push [ebp+var_34]  +
push [ebp+var_10]  +
push [ebp+hProv]  +
call sub_434A1E  +
add esp 10h +
cmp eax esi +
jz loc_413042  +
push offset aCopyprivatek_0  +
push 0Fh  +
push eax  +
push 100h  +
jmp loc_412FA0  +
push [ebp+var_10]  +
push [ebp+hProv]  +
call sub_4342EF  +
pop ecx  +
pop ecx  +
cmp eax esi +
jz loc_413065  +
push offset aCopycontainere  +
push 0Fh  +
push eax  +
push 108h  +
jmp loc_412FA0  +
mov [ebp+var_8] esi +
jmp loc_412E39  +
push offset aAcquireconte_5  +
push 0Fh  +
push 0DBh  +
jmp loc_413087  +
push offset aAcquireconte_6  +
push 0Fh  +
push 0CEh  +
push offset aKeycopy_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_412E2A  +
***
push offset aSKeycopyOption  +
sub esp 78h +
call __SEH_prolog4_GS  +
cmp [ebp-250h] ebx +
call __SEH_prolog4_GS  +
mov esi ds:HeapFree +
call __SEH_prolog4  +
cmp [ebp-2Ch] ebx +
call __SEH_prolog4  +
cmp [ebp-20h] esi +
sub esp 14Ch +
mov edx [ecx+8] +
sub esp 10h +
test eax eax +
push ecx  +
sub esp 0B70h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
xor ecx ecx +
push ebx  +
push esi  +
push edi  +
push offset off_463F90  +
push edx  +
push [ebp+arg_0]  +
mov eax offset byte_44DEEB +
mov [ebp+var_B5C] edx +
mov [ebp+var_B48] ecx +
mov [ebp+var_B40] ecx +
mov [ebp+var_B60] ecx +
mov [ebp+var_B44] ecx +
mov [ebp+var_B28] ecx +
mov [ebp+var_B10] 1 +
mov [ebp+var_B54] ecx +
mov [ebp+var_B20] ecx +
mov [ebp+var_B1C] eax +
mov [ebp+var_B3C] ecx +
mov [ebp+var_B38] ecx +
mov [ebp+var_B24] ecx +
mov [ebp+var_B18] eax +
mov [ebp+var_B14] 0F0000000h +
mov [ebp+var_B0C] ecx +
mov [ebp+var_B50] ecx +
mov [ebp+var_B58] ecx +
mov [ebp+var_B34] ecx +
mov [ebp+lpWideCharStr] ecx +
mov [ebp+lpMultiByteStr] ecx +
mov [ebp+var_B4C] ecx +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BF0 eax +
cmp eax 0FFFFFFFFh +
jz loc_416019  +
push 4  +
pop edi  +
inc [ebp+var_B4C]  +
cmp eax 10h +
ja loc_416023  +
jmp ds:off_4165AE[eax*4]  +
mov eax lpLibFileName +
test eax eax +
jz loc_415814  +
lea ecx [ebp+var_B40] +
push ecx  +
push offset aD_0  +
push eax  +
call ds:swscanf  +
jmp loc_415919  +
mov [ebp+var_B40] 1 +
jmp loc_415E99  +
mov eax lpLibFileName +
mov [ebp+var_B60] eax +
jmp loc_415E99  +
mov eax lpLibFileName +
test eax eax +
jz loc_41584C  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+lpWideCharStr] eax +
jmp loc_415853  +
and [ebp+lpWideCharStr] 0 +
cmp [ebp+lpWideCharStr] 0 +
jz loc_416023  +
and [ebp+var_B14] 0FFFFFFFh +
jmp loc_415E99  +
or [ebp+var_B14] 4000h +
jmp loc_415E99  +
push lpLibFileName  +
call ds:_wtol  +
pop ecx  +
mov [ebp+var_B54] eax +
push 0  +
lea eax [ebp+var_B54] +
push eax  +
push 3  +
call ds:off_444538  +
mov esi eax +
test esi esi +
jz loc_415E99  +
mov ebx 104h +
push ebx  +
push dword ptr [esi+8]  +
lea eax [ebp+var_900] +
push eax  +
call ds:wcsncpy  +
mov eax [esi+8] +
add esp 0Ch +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4158CB  +
sub eax edx +
sar eax 1 +
inc eax  +
jz loc_415F9F  +
push ebx  +
lea eax [ebp+WideCharStr] +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [esi+4]  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_415FC2  +
lea eax [ebp+WideCharStr] +
push eax  +
lea eax [ebp+var_900] +
push eax  +
push offset aNameSOidS  +
call ds:wprintf  +
add esp 0Ch +
jmp loc_415E99  +
push lpLibFileName  +
mov ebx ds:wprintf +
push offset aAlgS  +
call ebx  +
pop ecx  +
pop ecx  +
xor eax eax +
push eax  +
push eax  +
push 104h  +
lea ecx [ebp+MultiByteStr] +
push ecx  +
push 0FFFFFFFFh  +
push lpLibFileName  +
push eax  +
push eax  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_415FD2  +
push 0  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 1  +
call ds:off_444538  +
mov esi eax +
test esi esi +
jz loc_415E99  +
push 104h  +
push dword ptr [esi+8]  +
lea eax [ebp+var_4F0] +
push eax  +
call ds:wcsncpy  +
mov eax [esi+8] +
add esp 0Ch +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_415997  +
sub eax edx +
sar eax 1 +
inc eax  +
jz loc_415FE2  +
push 104h  +
lea eax [ebp+var_6F8] +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [esi+4]  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_415FF2  +
push dword ptr [esi+10h]  +
lea eax [ebp+var_6F8] +
push eax  +
lea eax [ebp+var_4F0] +
push eax  +
push offset aNameSOidSAlgid  +
call ebx  +
add esp 10h +
jmp loc_415E99  +
call sub_4291AC  +
mov [ebp+var_B44] eax +
jmp loc_415E99  +
call sub_4295C2  +
mov [ebp+var_B28] eax +
jmp loc_415E99  +
or [ebp+var_B14] 20h +
jmp loc_415E99  +
mov esi lpLibFileName +
mov ecx offset aHash_0 +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415A4D  +
test dx dx +
jz loc_415A49  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415A4D  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415A29  +
xor eax eax +
jmp loc_415A52  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415A6F  +
mov [ebp+var_B24] 67h +
mov [ebp+var_B18] offset aPp_enum_hash_0 +
jmp loc_415E99  +
mov ecx offset aCipher +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415A9A  +
test dx dx +
jz loc_415A96  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415A9A  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415A76  +
xor eax eax +
jmp loc_415A9F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415ABC  +
mov [ebp+var_B24] 68h +
mov [ebp+var_B18] offset aPp_enum_ciph_0 +
jmp loc_415E99  +
mov ecx offset aSign_0 +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415AE7  +
test dx dx +
jz loc_415AE3  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415AE7  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415AC3  +
xor eax eax +
jmp loc_415AEC  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415B09  +
mov [ebp+var_B24] 69h +
mov [ebp+var_B18] offset aPp_enum_sign_0 +
jmp loc_415E99  +
mov ecx offset aDh +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415B34  +
test dx dx +
jz loc_415B30  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415B34  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415B10  +
xor eax eax +
jmp loc_415B39  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415B56  +
mov [ebp+var_B24] 6Ah +
mov [ebp+var_B18] offset aPp_enum_dhoi_0 +
jmp loc_415E99  +
mov ecx offset aContainer +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415B81  +
test dx dx +
jz loc_415B7D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415B81  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415B5D  +
xor eax eax +
jmp loc_415B86  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_416023  +
mov [ebp+var_B24] 85h +
mov [ebp+var_B18] offset aPp_enum_cont_0 +
jmp loc_415E99  +
mov ebx lpLibFileName +
mov ecx offset aHash_0 +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415BD8  +
test dx dx +
jz loc_415BD4  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415BD8  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415BB4  +
xor eax eax +
jmp loc_415BDD  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415BFA  +
mov [ebp+var_B20] 5Ch +
mov [ebp+var_B1C] offset aPp_hashoid +
jmp loc_415E99  +
mov ecx offset aCipher +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415C25  +
test dx dx +
jz loc_415C21  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415C25  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415C01  +
xor eax eax +
jmp loc_415C2A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415C47  +
mov [ebp+var_B20] 5Dh +
mov [ebp+var_B1C] offset aPp_cipheroid +
jmp loc_415E99  +
mov ecx offset aSign_0 +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415C72  +
test dx dx +
jz loc_415C6E  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415C72  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415C4E  +
xor eax eax +
jmp loc_415C77  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415C94  +
mov [ebp+var_B20] 5Eh +
mov [ebp+var_B1C] offset aPp_signatureoi +
jmp loc_415E99  +
mov ecx offset aDh +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_415CBF  +
test dx dx +
jz loc_415CBB  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_415CBF  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_415C9B  +
xor eax eax +
jmp loc_415CC4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_415CE1  +
mov [ebp+var_B20] 5Fh +
mov [ebp+var_B1C] offset aPp_dhoid +
jmp loc_415E99  +
push 3  +
push offset aCt  +
push ebx  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_416023  +
add ebx 6 +
mov [ebp+var_B20] 84h +
mov [ebp+var_B1C] offset aPp_container_e +
jnz loc_415D1E  +
and [ebp+var_B34] ebx +
jmp loc_415E99  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_415D23  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov edi esp +
push esi  +
push ebx  +
push edi  +
call ds:wcstombs  +
mov [ebp+var_B34] edi +
add esp 0Ch +
push 4  +
pop edi  +
jmp loc_415E99  +
mov ebx lpLibFileName +
test ebx ebx +
jnz loc_415D70  +
and [ebp+var_B3C] ebx +
jmp loc_415E99  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_415D75  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov edi esp +
push esi  +
push ebx  +
push edi  +
call ds:wcstombs  +
mov [ebp+var_B3C] edi +
jmp loc_415D50  +
push 3  +
push offset aCt  +
push lpLibFileName  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_416023  +
mov edi lpLibFileName +
add edi 6 +
jnz loc_415DD8  +
and [ebp+var_B38] edi +
jmp loc_415D53  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_415DDD  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov ebx esp +
push esi  +
push edi  +
push ebx  +
call ds:wcstombs  +
mov [ebp+var_B38] ebx +
jmp loc_415D50  +
mov [ebp+var_B50] 1 +
jmp loc_415E99  +
mov [ebp+var_B58] 1 +
jmp loc_415E99  +
mov esi lpLibFileName +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_415E32  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpMultiByteStr] eax +
test eax eax +
jz loc_416002  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_415E5D  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax esi +
lea edx [eax+2] +
mov bx [eax] +
add eax 2 +
test bx bx +
jnz loc_415E73  +
sub eax edx +
xor edx edx +
push edx  +
push edx  +
sar eax 1 +
inc ecx  +
push ecx  +
push [ebp+lpMultiByteStr]  +
inc eax  +
push eax  +
push esi  +
push edx  +
push edx  +
call ds:WideCharToMultiByte  +
push offset off_463F90  +
push [ebp+var_B5C]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BF0 eax +
cmp eax 0FFFFFFFFh +
jnz loc_4157DD  +
cmp [ebp+var_B4C] 0 +
jz loc_416019  +
push [ebp+arg_0]  +
mov ebx [ebp+var_B5C] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_416019  +
cmp [ebp+var_B28] eax +
jnz loc_415F03  +
push [ebp+var_B44]  +
lea ebx [ebp+var_B28] +
call sub_429A20  +
pop ecx  +
test eax eax +
jnz loc_415FBA  +
push [ebp+var_B60]  +
mov ecx [ebp+var_B28] +
push [ebp+var_B40]  +
mov edx [ebp+var_B44] +
xor esi esi +
call sub_437F92  +
pop ecx  +
pop ecx  +
cmp [ebp+var_B58] esi +
jz loc_415F33  +
or [ebp+var_B14] 40h +
push [ebp+var_B14]  +
lea eax [ebp+var_B0C] +
push [ebp+lpWideCharStr]  +
push eax  +
call sub_438988  +
add esp 0Ch +
test eax eax +
jz loc_416574  +
push [ebp+var_B0C]  +
mov ebx ds:printf +
push offset aCryptacquire_2  +
call ebx  +
pop ecx  +
pop ecx  +
cmp [ebp+lpMultiByteStr] esi +
jz loc_416096  +
push esi  +
push [ebp+lpMultiByteStr]  +
push 20h  +
push [ebp+var_B0C]  +
cmp dword_526128 esi +
jz loc_416076  +
mov eax dword_526178 +
call dword ptr [eax+0Ch]  +
jmp loc_41607C  +
push offset aCannotConvertO  +
push 0Fh  +
push 0Dh  +
push 89h  +
push offset aOid_c  +
call sub_437C8E  +
add esp 14h +
mov [ebp+var_B10] eax +
jmp loc_416023  +
push offset aCannotConver_0  +
push 0Fh  +
push 0Dh  +
push 8Dh  +
jmp loc_415FAD  +
push offset aCannotConvertA  +
push 0Fh  +
push 0Dh  +
push 99h  +
jmp loc_415FAD  +
push offset aCannotConvertO  +
push 0Fh  +
push 0Dh  +
push 0A2h  +
jmp loc_415FAD  +
push offset aCannotConver_0  +
push 0Fh  +
push 0Dh  +
push 0A6h  +
jmp loc_415FAD  +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 10Ch  +
jmp loc_415FAD  +
and [ebp+var_B10] 0 +
mov [ebp+var_B48] 1 +
push [ebp+lpMultiByteStr]  +
mov esi ds:free +
call esi  +
push [ebp+lpWideCharStr]  +
call esi  +
xor esi esi +
pop ecx  +
pop ecx  +
cmp [ebp+var_B48] esi +
jz loc_41604A  +
call sub_4165F2  +
cmp [ebp+var_B0C] esi +
jz loc_41658B  +
push esi  +
push [ebp+var_B0C]  +
cmp dword_526128 esi +
jz loc_416585  +
mov eax dword_526178 +
call dword ptr [eax+4]  +
jmp loc_41658B  +
call ds:off_4444DC  +
cmp eax esi +
jnz loc_416096  +
push offset aErrorDuringSet  +
push 0Fh  +
push 137h  +
push offset aOid_c  +
call sub_437C0A  +
mov edi ds:off_4444E0 +
cmp [ebp+var_B24] esi +
jz loc_41621F  +
xor eax eax +
inc eax  +
push eax  +
mov [ebp+var_B28] eax +
lea eax [ebp+var_B14] +
push eax  +
push esi  +
push [ebp+var_B24]  +
mov [ebp+var_B14] esi +
push [ebp+var_B0C]  +
cmp dword_526128 esi +
jz loc_4160DE  +
mov eax dword_526178 +
call dword ptr [eax+8]  +
jmp loc_4160E0  +
call edi  +
cmp eax esi +
jnz loc_41611C  +
push [ebp+var_B18]  +
lea eax [ebp+var_A4] +
push offset aErrorDuring_16  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_A4] +
push eax  +
push 0Fh  +
push 147h  +
push offset aOid_c  +
call sub_437C6A  +
add esp 1Ch +
jmp loc_415FBA  +
push [ebp+var_B14]  +
call ds:malloc  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_416157  +
push [ebp+var_B18]  +
lea eax [ebp+var_A4] +
push offset aErrorDuring_16  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_A4] +
push eax  +
push 0Fh  +
push 14Fh  +
jmp loc_41610A  +
push [ebp+var_B14]  +
push 0FFh  +
push esi  +
call memset  +
push [ebp+var_B18]  +
push offset aS_8  +
call ebx  +
add esp 14h +
cmp dword_526128 0 +
push [ebp+var_B28]  +
lea eax [ebp+var_B14] +
push eax  +
push esi  +
push [ebp+var_B24]  +
push [ebp+var_B0C]  +
jz loc_4161A5  +
mov eax dword_526178 +
call dword ptr [eax+8]  +
jmp loc_4161A7  +
call edi  +
test eax eax +
jz loc_416213  +
cmp [ebp+var_B24] 85h +
jz loc_4161C3  +
push esi  +
push offset aS_2  +
call ebx  +
pop ecx  +
pop ecx  +
jmp loc_416207  +
mov eax [esi+4] +
lea eax [eax+esi+8] +
push eax  +
push offset aOidS_0  +
call ebx  +
cmp dword ptr [esi] 0 +
pop ecx  +
pop ecx  +
mov eax offset aTrue +
jnz loc_4161E3  +
mov eax offset aFalse +
push eax  +
push offset aCriticalS_0  +
call ebx  +
push offset aData  +
call ebx  +
push dword ptr [esi+4]  +
lea ecx [esi+8] +
call sub_42BFB0  +
push offset asc_445094  +
call ebx  +
add esp 14h +
and [ebp+var_B28] 0FFFFFFFEh +
jmp loc_416178  +
mov ebx ds:free +
push esi  +
call ebx  +
pop ecx  +
jmp loc_416225  +
mov ebx ds:free +
mov eax [ebp+var_B20] +
xor esi esi +
cmp eax esi +
jz loc_416348  +
cmp eax 84h +
jz loc_416348  +
push esi  +
lea ecx [ebp+var_B18] +
push ecx  +
push esi  +
push eax  +
push [ebp+var_B0C]  +
mov [ebp+var_B18] esi +
cmp dword_526128 esi +
jz loc_416268  +
mov eax dword_526178 +
call dword ptr [eax+8]  +
jmp loc_41626A  +
call edi  +
cmp eax esi +
jnz loc_416293  +
push [ebp+var_B1C]  +
lea eax [ebp+var_54] +
push offset aErrorDuring_16  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_54] +
push eax  +
push 0Fh  +
push 171h  +
jmp loc_41610A  +
push [ebp+var_B18]  +
call ds:malloc  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_4162CB  +
push [ebp+var_B1C]  +
lea eax [ebp+var_54] +
push offset aErrorDuring_16  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_54] +
push eax  +
push 0Fh  +
push 179h  +
jmp loc_41610A  +
cmp dword_526128 0 +
push 0  +
lea eax [ebp+var_B18] +
push eax  +
push esi  +
push [ebp+var_B20]  +
push [ebp+var_B0C]  +
jz loc_4162F4  +
mov eax dword_526178 +
call dword ptr [eax+8]  +
jmp loc_4162F6  +
call edi  +
push esi  +
test eax eax +
jnz loc_41632F  +
call ebx  +
push [ebp+var_B1C]  +
lea eax [ebp+var_54] +
push offset aErrorDuring_16  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_54] +
push eax  +
push 0Fh  +
push 183h  +
push offset aOid_c  +
call sub_437C6A  +
add esp 20h +
jmp loc_415FBA  +
push [ebp+var_B1C]  +
push offset aSS  +
call ds:printf  +
push esi  +
call ebx  +
add esp 10h +
xor esi esi +
mov edi [ebp+var_B38] +
cmp edi esi +
jz loc_4163B3  +
push esi  +
push edi  +
push 86h  +
push [ebp+var_B0C]  +
cmp dword_526128 esi +
jz loc_416371  +
mov eax dword_526178 +
call dword ptr [eax+0Ch]  +
jmp loc_416377  +
call ds:off_4444DC  +
push edi  +
cmp eax esi +
jnz loc_4163A6  +
push offset aPp_container_0  +
lea eax [ebp+var_1E4] +
push offset aErrorDuring_17  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_1E4] +
push eax  +
push 0Fh  +
push 192h  +
jmp loc_41631D  +
push offset aParameterSDele  +
call ds:printf  +
pop ecx  +
pop ecx  +
mov edi [ebp+var_B3C] +
cmp edi esi +
jz loc_416568  +
mov eax [ebp+var_B34] +
xor esi esi +
cmp eax esi +
jz loc_4164FD  +
mov ecx [ebp+var_B50] +
mov [ebp+var_B70] eax +
mov eax edi +
mov [ebp+var_B6C] ecx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4163E8  +
sub eax esi +
mov [ebp+var_B68] eax +
test al 1 +
jz loc_41642D  +
lea eax [ebp+var_144] +
push offset aInvalidArgumen  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_144] +
push eax  +
push 0Fh  +
push 1A1h  +
push offset aOid_c  +
call sub_437C6A  +
add esp 18h +
jmp loc_415FBA  +
shr eax 1 +
push eax  +
mov [ebp+var_B68] eax +
call ds:malloc  +
pop ecx  +
mov ecx eax +
mov eax edi +
mov [ebp+var_B64] ecx +
call sub_416714  +
test eax eax +
jnz loc_41647D  +
lea eax [ebp+var_144] +
push offset aInvalidArgumen  +
push eax  +
call ds:sprintf  +
push [ebp+var_B64]  +
call ebx  +
lea eax [ebp+var_144] +
push eax  +
push 0Fh  +
push 1AAh  +
jmp loc_41610A  +
xor eax eax +
cmp dword_526128 eax +
push eax  +
lea eax [ebp+var_B70] +
push eax  +
push [ebp+var_B20]  +
push [ebp+var_B0C]  +
jz loc_4164A5  +
mov eax dword_526178 +
call dword ptr [eax+0Ch]  +
jmp loc_4164AB  +
call ds:off_4444DC  +
push [ebp+var_B64]  +
mov esi eax +
call ebx  +
pop ecx  +
test esi esi +
jnz loc_416553  +
push [ebp+var_B70]  +
lea eax [ebp+var_144] +
push edi  +
push [ebp+var_B1C]  +
push offset aErrorDuring_18  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_144] +
push eax  +
push 0Fh  +
push 1B3h  +
push offset aOid_c  +
call sub_437C6A  +
add esp 24h +
jmp loc_415FBA  +
push esi  +
push edi  +
push [ebp+var_B20]  +
push [ebp+var_B0C]  +
cmp dword_526128 esi +
jz loc_41651D  +
mov eax dword_526178 +
call dword ptr [eax+0Ch]  +
jmp loc_416523  +
call ds:off_4444DC  +
cmp eax esi +
jnz loc_416553  +
push edi  +
push [ebp+var_B1C]  +
lea eax [ebp+var_F4] +
push offset aErrorDuring_17  +
push eax  +
call ds:sprintf  +
lea eax [ebp+var_F4] +
push eax  +
push 0Fh  +
push 1C0h  +
jmp loc_41631D  +
push edi  +
push [ebp+var_B1C]  +
push offset aSS  +
call ds:printf  +
add esp 0Ch +
and [ebp+var_B10] 0 +
jmp loc_416023  +
push offset aErrorDuringC_2  +
push 0Fh  +
push 12Fh  +
jmp loc_41608C  +
call ds:off_4444D8  +
call sub_4386B3  +
mov eax [ebp+var_B10] +
lea esp [ebp-0B7Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
***
push offset aSOidCommandsOp  +
mov esi eax +
sub esp 1CCh +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push edi  +
push 2  +
pop ecx  +
push 3  +
pop edi  +
xor eax eax +
inc eax  +
push 0Ah  +
mov [ebp+var_1C0] ecx +
mov [ebp+var_198] ecx +
pop ecx  +
mov [ebp+var_1CC] edx +
mov [ebp+var_1C4] offset aCplevel +
mov [ebp+var_1BC] ebx +
mov [ebp+var_1B8] ebx +
mov [ebp+var_1B4] offset aCpdll +
mov [ebp+var_1B0] eax +
mov [ebp+var_1AC] ebx +
mov [ebp+var_1A8] eax +
mov [ebp+var_1A4] offset aProvider +
mov [ebp+var_1A0] eax +
mov [ebp+var_19C] ebx +
mov [ebp+var_194] offset aProvtype +
mov [ebp+var_190] eax +
mov [ebp+var_18C] ebx +
mov [ebp+var_188] edi +
mov [ebp+var_184] offset aContainer +
mov [ebp+var_180] eax +
mov [ebp+var_17C] ebx +
mov [ebp+var_178] 4 +
mov [ebp+var_174] offset aKeytype +
mov [ebp+var_170] eax +
mov [ebp+var_16C] ebx +
mov [ebp+var_168] 5 +
mov [ebp+var_164] offset aPasswd +
mov [ebp+var_160] eax +
mov [ebp+var_15C] ebx +
mov [ebp+var_158] 6 +
mov [ebp+var_154] offset aChange +
mov [ebp+var_150] eax +
mov [ebp+var_14C] ebx +
mov [ebp+var_148] 7 +
mov [ebp+var_144] offset aQchange +
mov [ebp+var_140] ebx +
mov [ebp+var_13C] ebx +
mov [ebp+var_138] 8 +
mov [ebp+var_134] offset aCchange +
mov [ebp+var_130] eax +
mov [ebp+var_12C] ebx +
mov [ebp+var_128] 9 +
mov [ebp+var_124] offset aEcontainer +
mov [ebp+var_120] eax +
mov [ebp+var_11C] ebx +
mov [ebp+var_118] ecx +
mov [ebp+var_114] offset aNewkeyset_0 +
mov [ebp+var_110] ebx +
mov [ebp+var_10C] ebx +
mov [ebp+var_108] 0Bh +
mov [ebp+var_104] offset aDeletekeyset_0 +
mov [ebp+var_100] ebx +
mov [ebp+var_FC] ebx +
mov [ebp+var_F8] 0Ch +
mov [ebp+var_F4] offset aMachinekeyse_0 +
mov [ebp+var_F0] ebx +
mov [ebp+var_EC] ebx +
mov [ebp+var_E8] 0Dh +
mov [ebp+var_E4] offset aN +
mov [ebp+var_E0] eax +
mov [ebp+var_DC] ebx +
mov [ebp+var_D8] 0Eh +
mov [ebp+var_D4] offset aK_0 +
mov [ebp+var_D0] eax +
mov [ebp+var_CC] ebx +
mov [ebp+var_C8] 0Fh +
mov [ebp+var_C4] offset aNchange +
mov [ebp+var_C0] eax +
mov [ebp+var_BC] ebx +
mov [ebp+var_B8] 10h +
mov [ebp+var_B4] offset aKchange +
mov [ebp+var_B0] eax +
mov [ebp+var_40] eax +
mov [ebp+var_1C8] eax +
xor eax eax +
mov [esi+1Ch] edi +
mov [esi+30h] ax +
mov [esi+32h] ax +
mov [esi+34h] ax +
mov [esi+36h] ax +
lea edi [esi+44h] +
mov [esi] ebx +
mov [esi+4] ebx +
mov [esi+8] ebx +
mov [esi+0Ch] ebx +
mov [esi+10h] ebx +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov [esi+20h] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
mov [esi+2Ch] ebx +
mov [esi+38h] ebx +
mov [esi+3Ch] ebx +
mov [esi+40h] ebx +
stos   +
lea eax [ebp+var_1C4] +
push eax  +
mov [ebp+var_AC] ebx +
mov [ebp+var_A8] 11h +
mov [ebp+var_A4] offset aPininfo +
mov [ebp+var_A0] ebx +
mov [ebp+var_9C] ebx +
mov [ebp+var_98] 12h +
mov [ebp+var_94] offset aDef +
mov [ebp+var_90] ebx +
mov [ebp+var_8C] ebx +
mov [ebp+var_88] 13h +
mov [ebp+var_84] offset aShowsaved +
mov [ebp+var_80] ebx +
mov [ebp+var_7C] ebx +
mov [ebp+var_78] 14h +
mov [ebp+var_74] offset aDelsaved +
mov [ebp+var_70] ebx +
mov [ebp+var_6C] ebx +
mov [ebp+var_68] 15h +
mov [ebp+var_64] offset aDelshortcut +
mov [ebp+var_60] ebx +
mov [ebp+var_5C] ebx +
mov [ebp+var_58] 16h +
mov [ebp+var_54] offset aCheck_0 +
mov [ebp+var_50] ebx +
mov [ebp+var_4C] ebx +
mov [ebp+var_48] 17h +
mov [ebp+var_44] offset aKpart +
mov [ebp+var_3C] ebx +
mov [ebp+var_38] 18h +
mov [ebp+var_34] offset aSilent_0 +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] 19h +
mov [ebp+var_24] offset aHelp_0 +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] 1Ah +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [esi+6Ch] ebx +
mov [esi+70h] ebx +
mov [esi+74h] ebx +
mov [esi+78h] ebx +
mov [esi+7Ch] ebx +
mov [esi+80h] ebx +
mov [esi+84h] ebx +
push edx  +
jmp loc_416DAE  +
cmp eax 1Ah +
ja loc_416E1D  +
jmp ds:off_416E33[eax*4]  +
mov eax lpLibFileName +
cmp eax ebx +
jz loc_416B6D  +
lea ecx [esi+38h] +
push ecx  +
push offset aD_0  +
push eax  +
call ds:swscanf  +
add esp 0Ch +
jmp loc_416DA1  +
mov dword ptr [esi+38h] 1 +
jmp loc_416DA1  +
mov eax lpLibFileName +
mov [esi+6Ch] eax +
jmp loc_416DA1  +
call sub_4291AC  +
mov [esi+70h] eax +
jmp loc_416DA1  +
call sub_4295C2  +
mov [esi+3Ch] eax +
jmp loc_416DA1  +
or dword ptr [esi+40h] 40h +
jmp loc_416DA1  +
mov eax lpLibFileName +
cmp eax ebx +
jz loc_416BBC  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
jmp loc_416BBE  +
xor eax eax +
mov [esi+74h] eax +
cmp eax ebx +
jz loc_416E1D  +
jmp loc_416DA1  +
mov edi lpLibFileName +
mov edx offset aSignature +
mov ecx edi +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_416C01  +
cmp ax bx +
jz loc_416BFD  +
mov ax [ecx+2] +
cmp ax [edx+2] +
jnz loc_416C01  +
add ecx 4 +
add edx 4 +
cmp ax bx +
jnz loc_416BDB  +
xor eax eax +
jmp loc_416C06  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_416C16  +
mov dword ptr [esi+1Ch] 2 +
jmp loc_416DA1  +
mov edx offset aExchange +
mov ecx edi +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_416C43  +
cmp ax bx +
jz loc_416C3F  +
mov ax [ecx+2] +
cmp ax [edx+2] +
jnz loc_416C43  +
add ecx 4 +
add edx 4 +
cmp ax bx +
jnz loc_416C1D  +
xor eax eax +
jmp loc_416C48  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_416C58  +
mov dword ptr [esi+1Ch] 1 +
jmp loc_416DA1  +
mov ecx offset aNone +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_416C85  +
cmp dx bx +
jz loc_416C81  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_416C85  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_416C5F  +
xor eax eax +
jmp loc_416C8A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_416DF8  +
mov [esi+1Ch] ebx +
jmp loc_416DA1  +
or dword ptr [esi+40h] 20h +
jmp loc_416DA1  +
or dword ptr [esi+40h] 8 +
jmp loc_416DA1  +
or dword ptr [esi+40h] 10h +
jmp loc_416DA1  +
mov eax lpLibFileName +
mov [esi+78h] eax +
jmp loc_416DA1  +
mov eax lpLibFileName +
mov [esi+7Ch] eax +
jmp loc_416DA1  +
mov dword ptr [esi+18h] 1 +
jmp loc_416DA1  +
mov eax lpLibFileName +
mov [esi+80h] eax +
jmp loc_416DA1  +
mov eax lpLibFileName +
mov [esi+84h] eax +
jmp loc_416DA1  +
push lpLibFileName  +
call ds:_wtoi  +
mov [esi+30h] ax +
pop ecx  +
mov dword ptr [esi+28h] 1 +
jmp loc_416DA1  +
push lpLibFileName  +
call ds:_wtoi  +
mov [esi+32h] ax +
jmp loc_416D0B  +
push lpLibFileName  +
call ds:_wtoi  +
mov [esi+34h] ax +
pop ecx  +
mov dword ptr [esi+2Ch] 1 +
jmp loc_416DA1  +
push lpLibFileName  +
call ds:_wtoi  +
mov [esi+36h] ax +
jmp loc_416D3A  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov ecx [esi] +
mov [esi+ecx*4+44h] eax +
inc dword ptr [esi]  +
jmp loc_416DA1  +
mov dword ptr [esi+4] 1 +
jmp loc_416DA1  +
mov dword ptr [esi+8] 1 +
jmp loc_416DA1  +
mov dword ptr [esi+0Ch] 1 +
jmp loc_416DA1  +
mov dword ptr [esi+10h] 1 +
jmp loc_416DA1  +
mov dword ptr [esi+14h] 1 +
jmp loc_416DA1  +
mov dword ptr [esi+20h] 1 +
lea eax [ebp+var_1C4] +
push eax  +
push [ebp+var_1CC]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jnz loc_416B3C  +
push [ebp+arg_0]  +
mov ebx [ebp+var_1CC] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_416E16  +
lea ebx [esi+3Ch] +
cmp [ebx] eax +
jnz loc_416DEF  +
push dword ptr [esi+70h]  +
call sub_429A20  +
pop ecx  +
mov [ebp+var_1C8] eax +
test eax eax +
jnz loc_416E1D  +
and [ebp+var_1C8] 0 +
jmp loc_416E1D  +
push 5  +
lea eax [ebp+var_1C4] +
call sub_42905C  +
pop ecx  +
mov [ebp+var_1C8] eax +
jmp loc_416E1D  +
xor eax eax +
inc eax  +
mov [esi+24h] eax +
jmp loc_416E06  +
mov dword ptr [esi+24h] 1 +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1C8] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_43F480  +
leave   +
retn   +
***
push ecx  +
push ecx  +
sub esp 1Ch +
sub esp 0Ch +
sub esp 18h +
push esi  +
test [ebp+arg_0] 1 +
push edi  +
sub esp 0D4h +
push offset aSPasswdCommand  +
sub esp 10h +
and esp 0FFFFFFF8h +
sub esp 0A0h +
sub esp 458h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi offset a1_2_643_2_2_21 +
lea edi [ebp+var_44] +
movs   +
movs   +
movs   +
mov [ebp+var_140] eax +
xor eax eax +
push 31h  +
movs   +
push eax  +
mov [ebp+var_120] eax +
mov [ebp+var_12C] eax +
mov [ebp+var_124] eax +
mov [ebp+var_11C] eax +
mov [ebp+var_138] eax +
mov [ebp+var_184] eax +
mov [ebp+var_134] eax +
mov [ebp+var_158] eax +
mov [ebp+var_16C] eax +
xor ebx ebx +
inc ebx  +
lea eax [ebp+var_35] +
push eax  +
mov [ebp+var_150] ebx +
mov [ebp+var_130] 661Eh +
mov [ebp+var_118] 801Eh +
mov [ebp+var_148] ebx +
mov [ebp+var_15C] ebx +
mov [ebp+var_17C] 61A80h +
mov [ebp+var_170] 2000h +
mov [ebp+var_154] ebx +
mov [ebp+lpWideCharStr] offset aA_0 +
mov [ebp+var_160] ebx +
mov [ebp+var_14C] offset aB_0 +
mov [ebp+var_178] ebx +
mov [ebp+var_180] ebx +
mov [ebp+var_188] ebx +
movs   +
call memset  +
push 2  +
mov eax 1F4h +
mov [ebp+var_3F0] eax +
mov [ebp+var_3C8] eax +
mov [ebp+var_3A0] eax +
pop eax  +
push 64h  +
mov [ebp+var_350] eax +
mov [ebp+var_328] eax +
pop eax  +
push 14h  +
mov [ebp+var_300] eax +
mov [ebp+var_2D8] eax +
pop eax  +
push offset off_463D20  +
push [ebp+var_140]  +
xor ecx ecx +
push [ebp+arg_0]  +
mov [ebp+var_2B0] eax +
mov [ebp+var_288] eax +
mov [ebp+var_260] eax +
mov eax 0C8h +
mov [ebp+var_174] ecx +
mov [ebp+var_168] ecx +
mov [ebp+var_114] ebx +
mov [ebp+var_164] ecx +
mov [ebp+var_110] ecx +
mov [ebp+var_440] 3E8h +
mov [ebp+var_418] 4 +
mov [ebp+var_378] 0Ah +
mov [ebp+var_238] eax +
mov [ebp+var_210] eax +
mov [ebp+var_1E8] eax +
mov [ebp+var_1C0] eax +
mov [ebp+var_198] eax +
mov [ebp+var_144] ecx +
call sub_43B5E2  +
add esp 18h +
mov dword_465BF4 eax +
cmp eax 0FFFFFFFFh +
jz loc_419B6D  +
inc [ebp+var_144]  +
cmp eax 25h +
ja loc_419B73  +
jmp ds:off_419BD0[eax*4]  +
mov eax lpLibFileName +
test eax eax +
jz loc_418B03  +
lea ecx [ebp+var_120] +
push ecx  +
push offset aD_0  +
push eax  +
call ds:swscanf  +
add esp 0Ch +
jmp loc_4196CE  +
mov [ebp+var_120] ebx +
jmp loc_4196CE  +
mov eax lpLibFileName +
mov [ebp+var_12C] eax +
jmp loc_4196CE  +
call sub_4291AC  +
mov [ebp+var_124] eax +
jmp loc_4196CE  +
call sub_4295C2  +
mov [ebp+var_11C] eax +
jmp loc_4196CE  +
or [ebp+var_110] ebx +
jmp loc_4196CE  +
or [ebp+var_110] 2 +
jmp loc_4196CE  +
or [ebp+var_110] 4 +
jmp loc_4196CE  +
or [ebp+var_110] 8 +
jmp loc_4196CE  +
or [ebp+var_110] 10h +
jmp loc_4196CE  +
or [ebp+var_110] 20h +
jmp loc_4196CE  +
or [ebp+var_110] 40h +
jmp loc_4196CE  +
or [ebp+var_110] 80h +
jmp loc_4196CE  +
or [ebp+var_138] 10000h +
jmp loc_4196CE  +
or [ebp+var_138] 40h +
jmp loc_4196CE  +
or [ebp+var_138] 0F0000000h +
jmp loc_4196CE  +
mov edi lpLibFileName +
push 4  +
mov ecx offset aG28147 +
mov eax edi +
pop esi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418BFE  +
test dx dx +
jz loc_418BFA  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418BFE  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418BDA  +
xor eax eax +
jmp loc_418C03  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418C1E  +
mov [ebp+var_130] 661Eh +
mov esi offset a1_2_643_2_2_21 +
lea edi [ebp+var_44] +
jmp loc_418CAA  +
mov ecx offset aRc2 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418C49  +
test dx dx +
jz loc_418C45  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418C49  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418C25  +
xor eax eax +
jmp loc_418C4E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418C63  +
mov [ebp+var_130] 6602h +
mov esi offset a1_2_840_113549 +
jmp loc_418CA6  +
mov ecx offset aRc4 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418C8E  +
test dx dx +
jz loc_418C8A  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418C8E  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418C6A  +
xor eax eax +
jmp loc_418C93  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418CB4  +
mov [ebp+var_130] 6801h +
mov esi offset a1_2_840_1135_0 +
lea edi [ebp+var_44] +
movs   +
movs   +
movs   +
movs   +
movs   +
jmp loc_418DC7  +
mov ecx offset off_445518 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418CDF  +
test dx dx +
jz loc_418CDB  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418CDF  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418CBB  +
xor eax eax +
jmp loc_418CE4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418CF7  +
mov [ebp+var_130] 6601h +
jmp loc_418DBC  +
mov ecx offset off_452AB0 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418D22  +
test dx dx +
jz loc_418D1E  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418D22  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418CFE  +
xor eax eax +
jmp loc_418D27  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418D3A  +
mov [ebp+var_130] 6604h +
jmp loc_418DBC  +
mov ecx offset a3des +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418D65  +
test dx dx +
jz loc_418D61  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418D65  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418D41  +
xor eax eax +
jmp loc_418D6A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418D7A  +
mov [ebp+var_130] 6603h +
jmp loc_418DBC  +
mov ecx offset a3des_112 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418DA5  +
test dx dx +
jz loc_418DA1  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418DA5  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418D81  +
xor eax eax +
jmp loc_418DAA  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_41977C  +
mov [ebp+var_130] 6609h +
mov esi offset a1_3_14_3_2_7 +
lea edi [ebp+var_44] +
movs   +
movs   +
movs   +
movs   +
jmp loc_4196CE  +
mov edi lpLibFileName +
push 4  +
mov ecx offset aSha1 +
mov eax edi +
pop esi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418E01  +
test dx dx +
jz loc_418DFD  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418E01  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418DDD  +
xor eax eax +
jmp loc_418E06  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418E19  +
mov [ebp+var_118] 8004h +
jmp loc_4196CE  +
mov ecx offset aG3411 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418E44  +
test dx dx +
jz loc_418E40  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418E44  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418E20  +
xor eax eax +
jmp loc_418E49  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418E68  +
push 10h  +
mov eax offset off_463D20 +
call sub_4290B5  +
mov [ebp+var_118] 801Eh +
jmp loc_4196CD  +
mov ecx offset aGost94_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418E93  +
test dx dx +
jz loc_418E8F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418E93  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418E6F  +
xor eax eax +
jmp loc_418E98  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418EAB  +
mov [ebp+var_118] 801Eh +
jmp loc_4196CE  +
mov ecx offset aGost12_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418ED6  +
test dx dx +
jz loc_418ED2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418ED6  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418EB2  +
xor eax eax +
jmp loc_418EDB  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418EEE  +
mov [ebp+var_118] 8021h +
jmp loc_4196CE  +
mov ecx offset aGost12_512 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418F19  +
test dx dx +
jz loc_418F15  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418F19  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418EF5  +
xor eax eax +
jmp loc_418F1E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418F31  +
mov [ebp+var_118] 8022h +
jmp loc_4196CE  +
mov ecx offset aImit +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418F5C  +
test dx dx +
jz loc_418F58  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418F5C  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418F38  +
xor eax eax +
jmp loc_418F61  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418F74  +
mov [ebp+var_118] 801Fh +
jmp loc_4196CE  +
mov ecx offset aMd2 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418F9F  +
test dx dx +
jz loc_418F9B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418F9F  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418F7B  +
xor eax eax +
jmp loc_418FA4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_418FB7  +
mov [ebp+var_118] 8001h +
jmp loc_4196CE  +
mov ecx offset aMd5 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_418FE2  +
test dx dx +
jz loc_418FDE  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_418FE2  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_418FBE  +
xor eax eax +
jmp loc_418FE7  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_41977C  +
mov [ebp+var_118] 8003h +
jmp loc_4196CE  +
mov edi lpLibFileName +
push 4  +
mov ecx offset aCbc +
mov eax edi +
pop esi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_419032  +
test dx dx +
jz loc_41902E  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_419032  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_41900E  +
xor eax eax +
jmp loc_419037  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_419046  +
mov [ebp+var_148] ebx +
jmp loc_4196CE  +
mov ecx offset aEcb +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_419071  +
test dx dx +
jz loc_41906D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_419071  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_41904D  +
xor eax eax +
jmp loc_419076  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_419089  +
mov [ebp+var_148] 2 +
jmp loc_4196CE  +
mov ecx offset aCnt +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4190B4  +
test dx dx +
jz loc_4190B0  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4190B4  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_419090  +
xor eax eax +
jmp loc_4190B9  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4190CC  +
mov [ebp+var_148] 3 +
jmp loc_4196CE  +
mov ecx offset off_452B3C +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4190F7  +
test dx dx +
jz loc_4190F3  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4190F7  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_4190D3  +
xor eax eax +
jmp loc_4190FC  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_41910B  +
mov [ebp+var_148] esi +
jmp loc_4196CE  +
mov ecx offset aCts +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_419136  +
test dx dx +
jz loc_419132  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_419136  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_419112  +
xor eax eax +
jmp loc_41913B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_41977C  +
mov [ebp+var_148] 5 +
jmp loc_4196CE  +
mov edi lpLibFileName +
push 4  +
mov ecx offset aPkcs5 +
mov eax edi +
pop esi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_419186  +
test dx dx +
jz loc_419182  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_419186  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_419162  +
xor eax eax +
jmp loc_41918B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_41919A  +
mov [ebp+var_15C] ebx +
jmp loc_4196CE  +
mov ecx offset aRandom +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4191C5  +
test dx dx +
jz loc_4191C1  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4191C5  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_4191A1  +
xor eax eax +
jmp loc_4191CA  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4191DD  +
mov [ebp+var_15C] 2 +
jmp loc_4196CE  +
mov ecx offset off_452B68 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_419208  +
test dx dx +
jz loc_419204  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_419208  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_4191E4  +
xor eax eax +
jmp loc_41920D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_41977C  +
mov [ebp+var_15C] 3 +
jmp loc_4196CE  +
push lpLibFileName  +
call ds:_wtoi  +
mov [ebp+var_17C] eax +
jmp loc_4196CD  +
push lpLibFileName  +
call ds:_wtoi  +
mov [ebp+var_170] eax +
jmp loc_4196CD  +
mov eax lpLibFileName +
xor esi esi +
cmp eax esi +
jz loc_41926D  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+lpWideCharStr] eax +
jmp loc_419273  +
mov [ebp+lpWideCharStr] esi +
cmp [ebp+lpWideCharStr] esi +
jz loc_419B73  +
mov [ebp+var_160] esi +
jmp loc_4196CE  +
mov eax lpLibFileName +
xor esi esi +
cmp eax esi +
jz loc_4192A5  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+var_14C] eax +
jmp loc_4192AB  +
mov [ebp+var_14C] esi +
cmp [ebp+var_14C] esi +
jz loc_419B73  +
mov [ebp+var_178] esi +
jmp loc_4196CE  +
mov edi lpLibFileName +
test edi edi +
jnz loc_4192D7  +
and [ebp+var_134] edi +
jmp loc_4196CE  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4192DC  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov [ebp+var_13C] esp +
push esi  +
push edi  +
push [ebp+var_13C]  +
call ds:wcstombs  +
mov eax [ebp+var_13C] +
add esp 0Ch +
mov [ebp+var_134] eax +
jmp loc_4196CE  +
mov edi lpLibFileName +
test edi edi +
jnz loc_419335  +
and [ebp+var_158] edi +
jmp loc_4196CE  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_41933A  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov [ebp+var_13C] esp +
push esi  +
push edi  +
push [ebp+var_13C]  +
call ds:wcstombs  +
mov eax [ebp+var_13C] +
add esp 0Ch +
mov [ebp+var_158] eax +
jmp loc_4196CE  +
mov esi ds:_wcsicmp +
push offset aPin_0  +
push lpLibFileName  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4193A2  +
and [ebp+var_180] eax +
jmp loc_4196CE  +
push offset aProv  +
push lpLibFileName  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41978F  +
and [ebp+var_188] eax +
jmp loc_4196CE  +
mov eax lpLibFileName +
lea edx [ebp+var_10C] +
sub edx eax +
movzx ecx word ptr [eax] +
mov [eax+edx] cx +
add eax 2 +
test cx cx +
jnz loc_4193D1  +
mov esi ds:wcstok +
mov edi offset asc_452BE0 +
lea eax [ebp+var_10C] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419409  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_440] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419422  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_418] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41943B  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_3F0] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419454  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_3C8] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41946D  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_3A0] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419486  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_378] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41949F  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_350] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4194B8  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_328] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4194D1  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_300] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4194EA  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_2D8] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419503  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_2B0] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41951C  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_288] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419535  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_260] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41954E  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_238] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419567  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_210] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419580  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_1E8] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_419599  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_1C0] eax +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4195B2  +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_198] eax +
xor eax eax +
cmp [ebp+var_440] eax +
jz loc_419644  +
cmp [ebp+var_418] eax +
jz loc_419644  +
cmp [ebp+var_3F0] eax +
jz loc_419644  +
cmp [ebp+var_3C8] eax +
jz loc_419644  +
cmp [ebp+var_3A0] eax +
jz loc_419644  +
cmp [ebp+var_350] eax +
jz loc_419644  +
cmp [ebp+var_328] eax +
jz loc_419644  +
cmp [ebp+var_300] eax +
jz loc_419644  +
cmp [ebp+var_2D8] eax +
jz loc_419644  +
cmp [ebp+var_2B0] eax +
jz loc_419644  +
cmp [ebp+var_288] eax +
jz loc_419644  +
cmp [ebp+var_260] eax +
jz loc_419644  +
cmp [ebp+var_238] eax +
jz loc_419644  +
cmp [ebp+var_210] eax +
jz loc_419644  +
cmp [ebp+var_1E8] eax +
jz loc_419644  +
cmp [ebp+var_1C0] eax +
jz loc_419644  +
cmp [ebp+var_198] eax +
jnz loc_4196CE  +
push dword_465BF4  +
mov eax offset off_463D20 +
call sub_42905C  +
pop ecx  +
mov [ebp+var_114] eax +
jmp loc_419B73  +
mov [ebp+var_174] ebx +
jmp loc_4196CE  +
mov [ebp+var_168] ebx +
jmp loc_4196CE  +
mov dword_526060 ebx +
jmp loc_4196CE  +
mov dword_526064 ebx +
jmp loc_4196CE  +
mov dword_526068 ebx +
jmp loc_4196CE  +
mov dword_52606C ebx +
jmp loc_4196CE  +
push lpLibFileName  +
call ds:_wtoi  +
mov [ebp+var_154] eax +
jmp loc_4196CD  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_150] eax +
test eax eax +
jmp loc_41963E  +
push lpLibFileName  +
call ds:_wtoi  +
mov [ebp+var_184] eax +
pop ecx  +
push offset off_463D20  +
push [ebp+var_140]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BF4 eax +
cmp eax 0FFFFFFFFh +
jnz loc_418AC9  +
cmp [ebp+var_144] 0 +
jz loc_419B6D  +
push [ebp+arg_0]  +
mov ebx [ebp+var_140] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_419B6A  +
cmp [ebp+var_11C] eax +
jnz loc_41973E  +
push [ebp+var_124]  +
lea ebx [ebp+var_11C] +
call sub_429A20  +
pop ecx  +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
push [ebp+var_12C]  +
mov ecx [ebp+var_11C] +
push [ebp+var_120]  +
mov edx [ebp+var_124] +
call sub_437F92  +
push [ebp+var_350]  +
call sub_41A175  +
add esp 0Ch +
test eax eax +
jnz loc_4197A8  +
mov [ebp+var_114] 57h +
jmp loc_419B73  +
push edi  +
push offset aErrorWrongPa_0  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
jmp loc_419B73  +
push lpLibFileName  +
push offset aErrorWrongPa_1  +
jmp loc_419782  +
and [ebp+var_114] 0 +
jmp loc_419B6D  +
mov eax [ebp+var_150] +
imul eax eax +
push eax  +
call ds:malloc  +
and [ebp+var_144] 0 +
cmp [ebp+var_150] 0 +
pop ecx  +
mov [ebp+var_16C] eax +
jle loc_419B45  +
mov ecx [ebp+var_110] +
and ecx 1 +
mov [ebp+var_13C] ecx +
mov [ebp+var_140] eax +
mov esi [ebp+var_17C] +
mov edx esi +
lea eax [ebp+var_458] +
call sub_41A1C6  +
cmp [ebp+var_13C] 0 +
mov edi [ebp+var_138] +
jz loc_419885  +
push eax  +
push [ebp+var_154]  +
push [ebp+var_174]  +
push [ebp+var_158]  +
push [ebp+var_134]  +
push [ebp+var_14C]  +
push [ebp+lpWideCharStr]  +
push [ebp+var_170]  +
push esi  +
push [ebp+var_15C]  +
push [ebp+var_148]  +
push [ebp+var_130]  +
push edi  +
push [ebp+var_11C]  +
push [ebp+var_124]  +
push [ebp+var_12C]  +
push [ebp+var_120]  +
call sub_41A60D  +
add esp 44h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
lea ebx [ebp+var_458] +
call sub_41B6FB  +
test byte ptr [ebp+var_110] 2 +
jz loc_4198E0  +
push [ebp+var_184]  +
mov edx [ebp+var_124] +
push [ebp+var_134]  +
lea ebx [ebp+var_458] +
push [ebp+lpWideCharStr]  +
push [ebp+var_118]  +
push edi  +
push [ebp+var_11C]  +
push [ebp+var_12C]  +
push [ebp+var_120]  +
call sub_41CD17  +
add esp 20h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
call sub_41B6FB  +
test byte ptr [ebp+var_110] 4 +
jz loc_419944  +
lea eax [ebp+var_458] +
push eax  +
push [ebp+var_154]  +
mov eax [ebp+var_118] +
push [ebp+var_168]  +
mov ecx edi +
push esi  +
push [ebp+var_170]  +
push [ebp+var_11C]  +
push [ebp+var_124]  +
push [ebp+var_12C]  +
push [ebp+var_120]  +
call sub_41C26A  +
add esp 24h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
lea ebx [ebp+var_458] +
call sub_41B6FB  +
test byte ptr [ebp+var_110] 8 +
jz loc_4199B4  +
lea eax [ebp+var_458] +
push eax  +
push [ebp+var_154]  +
lea eax [ebp+var_44] +
push [ebp+var_188]  +
push [ebp+var_180]  +
push esi  +
push eax  +
push [ebp+var_158]  +
lea eax [ebp+var_14C] +
push [ebp+var_134]  +
push eax  +
mov eax [ebp+var_160] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpWideCharStr] +
push eax  +
mov eax edi +
call sub_41DFBD  +
add esp 28h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
lea ebx [ebp+var_458] +
call sub_41B6FB  +
test byte ptr [ebp+var_110] 10h +
jz loc_419A11  +
lea eax [ebp+var_458] +
push eax  +
push [ebp+var_154]  +
mov eax edi +
push [ebp+var_168]  +
push [ebp+var_118]  +
push [ebp+var_11C]  +
push [ebp+var_124]  +
push [ebp+var_12C]  +
push [ebp+var_120]  +
call sub_41C538  +
add esp 20h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
lea ebx [ebp+var_458] +
call sub_41B6FB  +
test byte ptr [ebp+var_110] 20h +
jz loc_419A6E  +
mov edx [ebp+var_124] +
lea eax [ebp+var_458] +
push eax  +
push esi  +
push [ebp+var_134]  +
push [ebp+lpWideCharStr]  +
push [ebp+var_118]  +
push edi  +
push [ebp+var_11C]  +
push [ebp+var_12C]  +
push [ebp+var_120]  +
call sub_41D376  +
add esp 24h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
lea ebx [ebp+var_458] +
call sub_41B6FB  +
test byte ptr [ebp+var_110] 40h +
jz loc_419ABF  +
push [ebp+var_134]  +
mov ecx [ebp+var_11C] +
push [ebp+lpWideCharStr]  +
mov edx [ebp+var_124] +
push edi  +
push [ebp+var_12C]  +
lea esi [ebp+var_458] +
push [ebp+var_120]  +
call sub_41D8E4  +
add esp 14h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
mov ebx esi +
call sub_41B6FB  +
test byte ptr [ebp+var_110] 80h +
jz loc_419B10  +
push [ebp+var_134]  +
mov ecx [ebp+var_11C] +
push [ebp+lpWideCharStr]  +
mov edx [ebp+var_124] +
push edi  +
push [ebp+var_12C]  +
lea eax [ebp+var_458] +
push [ebp+var_120]  +
call sub_41DD33  +
add esp 14h +
mov [ebp+var_114] eax +
test eax eax +
jnz loc_419B73  +
lea ebx [ebp+var_458] +
call sub_41B6FB  +
inc [ebp+var_144]  +
mov edi [ebp+var_140] +
mov eax [ebp+var_144] +
add [ebp+var_140] 2D0h +
mov ecx 0B4h +
lea esi [ebp+var_458] +
movs   +
cmp eax [ebp+var_150] +
jl loc_4197EB  +
cmp [ebp+var_110] 0 +
jz loc_419B61  +
push [ebp+var_150]  +
push [ebp+var_16C]  +
call sub_41BAA7  +
pop ecx  +
pop ecx  +
and [ebp+var_114] 0 +
jmp loc_419B73  +
xor ebx ebx +
inc ebx  +
mov [ebp+var_164] ebx +
mov esi ds:free +
xor edi edi +
cmp [ebp+var_178] edi +
jnz loc_419B8C  +
push [ebp+var_14C]  +
call esi  +
pop ecx  +
cmp [ebp+var_160] edi +
jnz loc_419B9D  +
push [ebp+lpWideCharStr]  +
call esi  +
pop ecx  +
push [ebp+var_16C]  +
call esi  +
pop ecx  +
cmp [ebp+var_164] edi +
jz loc_419BB3  +
call sub_419C68  +
mov eax [ebp+var_114] +
lea esp [ebp-464h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
***
sub esp 68h +
push ecx  +
push ecx  +
xor ecx ecx +
sub esp 14h +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
sub esp 10h +
and esp 0FFFFFFF8h +
sub esp 38h +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
sub esp 1E8h +
sub esp 2Ch +
sub esp 28h +
sub esp 18h +
sub esp 10h +
and esp 0FFFFFFF8h +
rdtsc   +
sub esp 84h +
sub esp 1Ch +
sub esp 488h +
sub esp 30h +
sub esp 30h +
push ecx  +
push ecx  +
push ebx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
sub esp 5Ch +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi offset off_448270 +
push esi  +
xor eax eax +
push ecx  +
push [ebp+arg_0]  +
inc eax  +
mov [ebp+var_28] ecx +
mov [ebp+hObject] edi +
mov [ebp+var_20] edi +
mov [ebp+var_1C] eax +
mov [ebp+var_54] edi +
mov [ebp+var_44] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_24] edi +
mov [ebp+var_40] edi +
mov [ebp+var_4C] eax +
mov [ebp+var_58] edi +
mov [ebp+var_48] edi +
mov [ebp+var_34] edi +
mov [ebp+var_50] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_30] edi +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C04 eax +
cmp eax 0FFFFFFFFh +
jz loc_420704  +
or ebx 0FFFFFFFFh +
cmp eax 0Fh +
ja loc_4208F9  +
jmp ds:off_42090F[eax*4]  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov [ebp+var_20] eax +
jmp loc_4206E8  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_4C] eax +
jmp loc_4206E8  +
mov [ebp+var_58] 1 +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov [ebp+var_40] eax +
jmp loc_4206E8  +
mov [ebp+var_48] 1 +
jmp loc_4206E8  +
mov [ebp+var_50] 1 +
jmp loc_4206E8  +
mov [ebp+var_34] 1 +
jmp loc_4206E8  +
mov [ebp+var_30] 1 +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov [ebp+var_44] eax +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov [ebp+var_2C] eax +
jmp loc_4206E8  +
mov eax lpLibFileName +
push 4  +
mov ecx offset aSha1 +
pop edi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42050D  +
test dx dx +
jz loc_420509  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42050D  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_4204E9  +
xor eax eax +
jmp loc_420511  +
sbb eax eax +
sbb eax ebx +
test eax eax +
jnz loc_42051F  +
mov edi offset a1_3_14_3_2_26 +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov ecx offset aGost +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42054D  +
test dx dx +
jz loc_420549  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42054D  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_420529  +
xor eax eax +
jmp loc_420551  +
sbb eax eax +
sbb eax ebx +
test eax eax +
jnz loc_420561  +
push 9  +
mov eax esi +
call sub_4290B5  +
pop ecx  +
jmp loc_420597  +
mov eax lpLibFileName +
mov ecx offset aGost94_256 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42058F  +
test dx dx +
jz loc_42058B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42058F  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_42056B  +
xor eax eax +
jmp loc_420593  +
sbb eax eax +
sbb eax ebx +
test eax eax +
jnz loc_4205A1  +
mov edi offset a1_2_643_2_2_9 +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov ecx offset aGost12_256 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4205CF  +
test dx dx +
jz loc_4205CB  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4205CF  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_4205AB  +
xor eax eax +
jmp loc_4205D3  +
sbb eax eax +
sbb eax ebx +
test eax eax +
jnz loc_4205E1  +
mov edi offset a1_2_643_7_1_1_ +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov ecx offset aGost12_512 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42060F  +
test dx dx +
jz loc_42060B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42060F  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_4205EB  +
xor eax eax +
jmp loc_420613  +
sbb eax eax +
sbb eax ebx +
test eax eax +
jnz loc_420621  +
mov edi offset a1_2_643_7_1__0 +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov ecx offset aMd2 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42064F  +
test dx dx +
jz loc_42064B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42064F  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_42062B  +
xor eax eax +
jmp loc_420653  +
sbb eax eax +
sbb eax ebx +
test eax eax +
jnz loc_420661  +
mov edi offset a1_2_840_1135_2 +
jmp loc_4206E8  +
mov eax lpLibFileName +
mov ecx offset aMd5 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42068F  +
test dx dx +
jz loc_42068B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42068F  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_42066B  +
xor eax eax +
jmp loc_420693  +
sbb eax eax +
sbb eax ebx +
test eax eax +
jnz loc_42069E  +
mov edi offset a1_2_840_1135_3 +
jmp loc_4206E8  +
mov eax lpLibFileName +
test eax eax +
jnz loc_4206AB  +
xor edi edi +
jmp loc_4206E8  +
lea ecx [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_4206AE  +
sub eax ecx +
sar eax 1 +
lea edi [eax+1] +
imul edi edi +
mov eax edi +
call __alloca_probe_16  +
mov ebx esp +
push edi  +
push lpLibFileName  +
push ebx  +
call ds:wcstombs  +
add esp 0Ch +
mov edi ebx +
or ebx 0FFFFFFFFh +
jmp loc_4206E8  +
or [ebp+var_3C] 40h +
push esi  +
push [ebp+var_28]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C04 eax +
cmp eax ebx +
jnz loc_42043A  +
push [ebp+arg_0]  +
mov ebx [ebp+var_28] +
call sub_42915C  +
xor ebx ebx +
pop ecx  +
test eax eax +
jnz loc_4208DA  +
cmp [ebp+var_48] ebx +
jz loc_42075E  +
push [ebp+var_20]  +
mov ecx [ebp+var_2C] +
mov edx [ebp+var_44] +
call sub_420A79  +
pop ecx  +
mov [ebp+var_1C] ebx +
jmp loc_4208F9  +
push [ebp+var_28]  +
push [ebp+arg_0]  +
call sub_4213DA  +
pop ecx  +
pop ecx  +
jmp loc_4208FC  +
push [ebp+var_28]  +
push [ebp+arg_0]  +
call sub_421AEF  +
jmp loc_420741  +
and [ebp+var_1C] 0 +
jmp loc_4208F4  +
cmp [ebp+var_58] ebx +
jz loc_420786  +
push [ebp+var_3C]  +
push [ebp+var_4C]  +
push edi  +
push [ebp+var_2C]  +
push [ebp+var_44]  +
push [ebp+var_20]  +
push [ebp+hObject]  +
call sub_420A86  +
add esp 1Ch +
mov [ebp+var_1C] eax +
jmp loc_4208F9  +
cmp [ebp+var_40] ebx +
jz loc_4208B8  +
mov ecx [ebp+var_50] +
neg ecx  +
sbb ecx ecx +
mov eax 10000h +
and ecx eax +
push offset aMy  +
add ecx eax +
or ecx 5004h +
push ecx  +
push ebx  +
push ebx  +
push 0Ah  +
call ds:off_444540  +
mov [ebp+var_30] eax +
cmp eax ebx +
jnz loc_4207DD  +
push offset aCertopenstor_1  +
push 0Fh  +
push 104h  +
push offset aProperty_c  +
call sub_437C6A  +
add esp 10h +
or eax 0FFFFFFFFh +
jmp loc_4208FC  +
push [ebp+var_20]  +
push eax  +
call sub_42ABD9  +
pop ecx  +
pop ecx  +
mov [ebp+var_24] eax +
cmp eax ebx +
jz loc_42089C  +
xor eax eax +
mov byte ptr [ebp+var_18] bl +
lea edi [ebp+var_18+1] +
stos   +
stos   +
stos   +
stos   +
stos   +
push 14h  +
pop esi  +
stos   +
xor eax eax +
push ebx  +
mov [ebp+var_38] esi +
lea edi [ebp+var_34] +
stos   +
push ebx  +
lea eax [ebp+var_18] +
mov [ebp+var_34] eax +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push 4  +
push ebx  +
push [ebp+var_40]  +
call ds:off_4445F8  +
test eax eax +
jnz loc_42084C  +
push offset aCryptstringt_1  +
push 0Fh  +
push 112h  +
push offset aProperty_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_4208E1  +
cmp [ebp+var_38] esi +
jz loc_42085F  +
push offset aInvalidThumbpr  +
push 0Fh  +
push 117h  +
jmp loc_42083A  +
lea eax [ebp+var_38] +
push eax  +
push ebx  +
push 0FF00h  +
push [ebp+var_24]  +
call ds:off_444448  +
test eax eax +
jnz loc_420884  +
push offset aCertsetcerti_3  +
push 0Fh  +
push 11Ch  +
jmp loc_42083A  +
push offset aShowUserCertPr  +
mov [ebp+var_1C] ebx +
call ds:printf  +
push [ebp+var_24]  +
call sub_42BA4D  +
pop ecx  +
pop ecx  +
push ebx  +
push [ebp+var_30]  +
call ds:off_444558  +
test eax eax +
jnz loc_4208E1  +
push offset aCertclosesto_0  +
push 0Fh  +
push 125h  +
jmp loc_42083A  +
cmp [ebp+var_34] ebx +
jz loc_4208CB  +
push [ebp+var_20]  +
call sub_42119D  +
pop ecx  +
jmp loc_42077E  +
cmp [ebp+var_30] ebx +
jz loc_4208F4  +
push [ebp+var_2C]  +
call sub_421298  +
jmp loc_4208C5  +
mov [ebp+var_54] 1 +
cmp [ebp+var_24] ebx +
jz loc_4208EF  +
push [ebp+var_24]  +
call ds:off_444458  +
cmp [ebp+var_54] ebx +
jz loc_4208F9  +
call sub_42094F  +
mov eax [ebp+var_1C] +
lea esp [ebp-68h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
***
push offset aSPropertyComma  +
push [ebp+arg_0]  +
sub esp 98h +
push esi  +
xor esi esi +
mov [ebp+var_4] 1 +
mov [ebp+lpBaseAddress] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
cmp [ebp+arg_8] esi +
jnz loc_420ABB  +
push offset aStoreTypeMustB  +
call ds:printf  +
pop ecx  +
jmp loc_420E28  +
push ebx  +
push [ebp+arg_8]  +
call ds:_wcsupr  +
pop ecx  +
push 4  +
pop ebx  +
mov edx offset off_454B30 +
mov ecx eax +
push edi  +
mov di [ecx] +
cmp di [edx] +
jnz loc_420AF5  +
cmp di si +
jz loc_420AF1  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_420AF5  +
add ecx ebx +
add edx ebx +
cmp di si +
jnz loc_420AD1  +
xor ecx ecx +
jmp loc_420AFA  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
cmp ecx esi +
jnz loc_420B0E  +
push esi  +
push 2004h  +
push esi  +
push 10001h  +
push 2  +
jmp loc_420B54  +
mov ecx offset aFile +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_420B37  +
cmp dx si +
jz loc_420B33  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_420B37  +
add eax ebx +
add ecx ebx +
cmp dx si +
jnz loc_420B13  +
xor eax eax +
jmp loc_420B3C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax esi +
jnz loc_420E1A  +
push [ebp+arg_C]  +
push 8000h  +
push esi  +
push 10001h  +
push 8  +
call ds:off_444540  +
cmp eax esi +
jnz loc_420B6F  +
push offset aCannotCreateSt  +
push 0Fh  +
push 19Bh  +
jmp loc_420E08  +
push esi  +
push eax  +
call ds:off_444454  +
mov edi eax +
mov [ebp+arg_8] edi +
cmp edi esi +
jnz loc_420B8A  +
push offset aNoCertificateI  +
jmp loc_420E1F  +
push offset aShowUserCert_0  +
call ds:printf  +
push edi  +
call sub_42BA4D  +
mov ebx ds:off_444440 +
pop ecx  +
pop ecx  +
lea eax [ebp+var_20] +
push eax  +
push esi  +
push 2  +
push edi  +
call ebx  +
test eax eax +
jz loc_420E26  +
push [ebp+var_20]  +
call ds:malloc  +
mov edi eax +
pop ecx  +
cmp edi esi +
jnz loc_420BDB  +
push offset aErrorInAllocat  +
push 0Fh  +
push 1B4h  +
push offset aProperty_c  +
call sub_437C0A  +
lea eax [ebp+var_20] +
push eax  +
push edi  +
push 2  +
push [ebp+arg_8]  +
call ebx  +
test eax eax +
jz loc_420DFC  +
mov ebx [ebp+arg_8] +
xor eax eax +
push edi  +
inc eax  +
push eax  +
push esi  +
push ebx  +
mov [edi+0Ch] eax +
call ds:off_444448  +
push edi  +
mov [ebp+var_10] eax +
call ds:free  +
pop ecx  +
cmp [ebp+var_10] esi +
jnz loc_420C23  +
push offset aThePropertyWas  +
push 0Fh  +
push 1C1h  +
jmp loc_420E08  +
cmp [ebp+arg_10] esi +
jnz loc_420C37  +
mov eax [ebx+0Ch] +
push dword ptr [eax+38h]  +
call sub_42BDD5  +
pop ecx  +
mov [ebp+arg_10] eax +
lea eax [ebp+lpBaseAddress] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+hObject]  +
call sub_429D56  +
add esp 0Ch +
test eax eax +
jnz loc_420C5F  +
push offset aErrorWhileGett  +
push 0Fh  +
push 1CDh  +
jmp loc_420BD1  +
mov [ebp+var_14] esi +
cmp [ebp+arg_14] esi +
jg loc_420C72  +
mov [ebp+var_4] esi +
jmp loc_420E26  +
mov ebx [ebp+arg_8] +
push 54h  +
pop edi  +
push edi  +
lea eax [ebp+var_98] +
push esi  +
push eax  +
call memset  +
mov eax [ebp+arg_10] +
mov [ebp+var_98] edi +
mov edi [ebp+var_C] +
mov [ebp+var_8C] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_5C] eax +
mov eax [ebp+lpBaseAddress] +
add esp 0Ch +
inc edi  +
mov [ebp+var_24] eax +
mov eax [ebp+var_1C] +
shl edi 7 +
add edi eax +
mov [ebp+var_94] 10001h +
mov [ebp+var_90] ebx +
mov [ebp+var_88] esi +
mov [ebp+var_84] esi +
mov [ebp+var_80] esi +
mov [ebp+var_7C] esi +
mov [ebp+var_78] esi +
mov [ebp+var_6C] esi +
mov [ebp+var_58] esi +
mov [ebp+var_74] esi +
mov [ebp+var_64] esi +
mov [ebp+var_68] esi +
mov [ebp+var_28] eax +
add edi edi +
push edi  +
mov [ebp+var_8] edi +
call ds:malloc  +
pop ecx  +
mov [ebp+var_10] eax +
cmp eax esi +
jz loc_420E26  +
lea ecx [ebp+var_8] +
push ecx  +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
xor ebx ebx +
inc ebx  +
push ebx  +
push esi  +
lea eax [ebp+var_98] +
push eax  +
call ds:off_4445CC  +
test eax eax +
jnz loc_420D69  +
push [ebp+var_10]  +
call ds:free  +
pop ecx  +
call ds:GetLastError  +
cmp eax 0EAh +
jnz loc_420DE0  +
inc [ebp+var_C]  +
add edi 100h +
cmp [ebp+var_C] ebx +
jbe loc_420CE6  +
push offset aTooMachTries  +
push 0Fh  +
push 204h  +
push offset aProperty_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_4] ebx +
jmp loc_420E26  +
push [ebp+var_8]  +
mov ebx ds:printf +
push offset aSignatureWas_1  +
call ebx  +
xor eax eax +
lea edi [ebp+var_44] +
stos   +
stos   +
stos   +
pop ecx  +
pop ecx  +
stos   +
push esi  +
stos   +
mov eax [ebp+arg_4] +
push esi  +
push esi  +
push [ebp+var_8]  +
mov [ebp+var_2C] eax +
push [ebp+var_10]  +
lea eax [ebp+var_30] +
mov [ebp+var_34] eax +
push esi  +
lea eax [ebp+var_44] +
push eax  +
mov [ebp+var_44] 14h +
mov [ebp+var_40] 10001h +
mov [ebp+var_3C] esi +
mov [ebp+var_38] offset sub_42BD99 +
mov [ebp+var_30] esi +
call ds:off_4445D4  +
test eax eax +
jz loc_420DEE  +
push offset aSignatureWasVe  +
call ebx  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
pop ecx  +
cmp eax [ebp+arg_14] +
jl loc_420C6F  +
jmp loc_420C67  +
push offset aSignatureCreat  +
push 0Fh  +
push 1FFh  +
jmp loc_420E08  +
push offset aSignatureWasNo  +
push 0Fh  +
push 220h  +
jmp loc_420E08  +
push offset aCanNotGetCert_  +
push 0Fh  +
push 1C8h  +
push offset aProperty_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_4] eax +
jmp loc_420E26  +
push offset aNotSupportedSt  +
call ds:printf  +
pop ecx  +
pop edi  +
pop ebx  +
push [ebp+lpBaseAddress]  +
call sub_429E6C  +
mov eax [ebp+var_4] +
pop ecx  +
pop esi  +
leave   +
retn   +
***
sub esp 98h +
push ecx  +
push offset aSCertpropComma  +
push ecx  +
sub esp 10h +
push ecx  +
sub esp 1Ch +
sub esp 10h +
sub esp 40h +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
push 3  +
xor edi edi +
pop esi  +
mov ebx offset off_463C70 +
push ebx  +
push [ebp+arg_4]  +
mov [ebp+var_8] edi +
push [ebp+arg_0]  +
mov [ebp+var_C] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_10] edi +
mov [ebp+var_28] edi +
mov [ebp+var_4] edi +
mov [ebp+var_24] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_20] edi +
mov [ebp+var_18] edi +
mov [ebp+var_14] 1 +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BF8 eax +
cmp eax 0FFFFFFFFh +
jz loc_421D6F  +
push 4  +
pop edi  +
cmp eax 9 +
ja loc_421B7A  +
jmp ds:off_421DE3[eax*4]  +
call sub_4291AC  +
mov [ebp+var_1C] eax +
test eax eax +
jz loc_421B6C  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+var_C] eax +
jmp loc_421B70  +
and [ebp+var_C] 0 +
cmp [ebp+var_C] 0 +
jnz loc_421D50  +
xor edi edi +
push [ebp+var_8]  +
mov esi ds:free +
call esi  +
push [ebp+var_C]  +
call esi  +
pop ecx  +
pop ecx  +
cmp [ebp+var_18] edi +
jz loc_421C2C  +
push dword_52607C  +
push offset aSPropertySetce  +
call ds:wprintf  +
push offset aOptions_1  +
call ds:printf  +
call sub_4295A8  +
call sub_4295B5  +
push offset aSpecifyConta_0  +
push offset aContainerName  +
call sub_428FA0  +
push offset aUseLocalMach_1  +
push offset aMachine  +
call sub_428FA0  +
push offset aPublicKeyTypeS  +
push offset aKeytypeType  +
call sub_428FA0  +
push offset aWhichSetIntoCo  +
push edi  +
push offset aCertDname  +
call sub_42A916  +
push offset aStoreForSearch  +
push offset aStoreType  +
call sub_428FA0  +
push offset aStoreName_1  +
push offset aStorenameName  +
call sub_428FA0  +
add esp 40h +
push offset aPrintThisHelp  +
push offset aHelp  +
call sub_428FA0  +
pop ecx  +
pop ecx  +
mov eax [ebp+var_14] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
call sub_4295C2  +
mov [ebp+var_10] eax +
jmp loc_421D50  +
mov eax lpLibFileName +
test eax eax +
jz loc_421C57  +
push eax  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+var_8] eax +
jmp loc_421C5B  +
and [ebp+var_8] 0 +
cmp [ebp+var_8] 0 +
jmp loc_421B74  +
push 20h  +
pop eax  +
or [ebp+var_4] eax +
mov [ebp+var_28] eax +
jmp loc_421D50  +
mov eax lpLibFileName +
mov edx offset aSignature +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_421CA2  +
test si si +
jz loc_421C9E  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_421CA2  +
add ecx edi +
add edx edi +
test si si +
jnz loc_421C7E  +
xor ecx ecx +
jmp loc_421CA7  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_421CB3  +
push 2  +
pop esi  +
jmp loc_421D50  +
mov edx offset aExchange +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_421CDE  +
test si si +
jz loc_421CDA  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_421CDE  +
add ecx edi +
add edx edi +
test si si +
jnz loc_421CBA  +
xor ecx ecx +
jmp loc_421CE3  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_421CEC  +
xor esi esi +
inc esi  +
jmp loc_421D50  +
mov ecx offset aNone +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_421D15  +
test dx dx +
jz loc_421D11  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_421D15  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_421CF1  +
xor eax eax +
jmp loc_421D1A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
xor esi esi +
cmp eax esi +
jz loc_421D50  +
push esi  +
mov eax ebx +
call sub_42905C  +
pop ecx  +
jmp loc_421B7A  +
mov eax lpLibFileName +
mov [ebp+var_24] eax +
jmp loc_421D50  +
mov eax lpLibFileName +
mov [ebp+var_2C] eax +
jmp loc_421D50  +
mov eax lpLibFileName +
mov [ebp+var_20] eax +
jmp loc_421D50  +
or [ebp+var_4] 40h +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465BF8 eax +
cmp eax 0FFFFFFFFh +
jnz loc_421B47  +
xor edi edi +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_421DD4  +
cmp [ebp+var_10] edi +
jnz loc_421D9B  +
push [ebp+var_1C]  +
lea ebx [ebp+var_10] +
call sub_429A20  +
pop ecx  +
mov [ebp+var_14] eax +
cmp eax edi +
jnz loc_421B7C  +
push [ebp+var_20]  +
mov eax [ebp+var_2C] +
push [ebp+var_24]  +
push esi  +
push [ebp+var_4]  +
push [ebp+var_28]  +
push [ebp+var_10]  +
push [ebp+var_C]  +
push [ebp+var_8]  +
call sub_421E0B  +
add esp 20h +
mov [ebp+var_14] eax +
jmp loc_421B7C  +
and [ebp+var_14] 0 +
mov [ebp+var_18] 1 +
jmp loc_421B7A  +
mov [ebp+var_18] 1 +
jmp loc_421B7C  +
***
sub esp 1Ch +
push esi  +
sub esp 1Ch +
push offset aSRcCommandOpti  +
sub esp 20h +
sub esp 24h +
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx offset off_463A60 +
push ebx  +
push [ebp+arg_4]  +
xor eax eax +
push [ebp+arg_0]  +
inc eax  +
mov [ebp+hObject] edi +
mov [ebp+var_30] edi +
mov [ebp+var_10] edi +
mov [ebp+var_40] edi +
mov [ebp+lpMultiByteStr] edi +
mov [ebp+var_28] edi +
mov [ebp+var_C] eax +
mov [ebp+var_44] edi +
mov [ebp+var_50] edi +
mov [ebp+var_34] edi +
mov [ebp+var_38] edi +
mov [ebp+var_18] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_20] eax +
mov [ebp+var_54] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4C] edi +
mov [ebp+var_48] edi +
mov [ebp+var_2C] edi +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C0C eax +
cmp eax 0FFFFFFFFh +
jz loc_422F7F  +
push 4  +
pop esi  +
cmp eax 17h +
ja loc_422FAD  +
jmp ds:off_423082[eax*4]  +
mov [ebp+var_1C] 1 +
jmp loc_422F62  +
mov eax lpLibFileName +
mov [ebp+var_40] eax +
jmp loc_422F62  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_422F62  +
mov eax lpLibFileName +
mov [ebp+var_30] eax +
jmp loc_422F62  +
mov eax lpLibFileName +
mov [ebp+var_10] eax +
jmp loc_422F62  +
mov eax lpLibFileName +
mov [ebp+var_10] eax +
mov [ebp+var_28] 1 +
jmp loc_422F62  +
mov esi lpLibFileName +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_422C56  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpMultiByteStr] eax +
test eax eax +
jz loc_422FD7  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_422C7E  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax esi +
lea edx [eax+2] +
mov bx [eax] +
add eax 2 +
test bx bx +
jnz loc_422C94  +
sub eax edx +
xor edx edx +
push edx  +
push edx  +
sar eax 1 +
inc ecx  +
push ecx  +
push [ebp+lpMultiByteStr]  +
inc eax  +
push eax  +
push esi  +
push edx  +
push edx  +
call ds:WideCharToMultiByte  +
push 4  +
mov ebx offset off_463A60 +
pop esi  +
jmp loc_422F62  +
mov [ebp+var_38] 1 +
jmp loc_422F62  +
mov [ebp+var_44] 1 +
jmp loc_422F62  +
mov [ebp+var_34] 1 +
jmp loc_422F62  +
mov [ebp+var_50] 1 +
jmp loc_422F62  +
mov [ebp+var_3C] 1 +
jmp loc_422F62  +
mov edi lpLibFileName +
mov ecx offset aSha1 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_422D31  +
test dx dx +
jz loc_422D2D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_422D31  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_422D0D  +
xor eax eax +
jmp loc_422D36  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_422D44  +
mov edi offset a1_3_14_3_2_26 +
jmp loc_422F62  +
mov ecx offset aGost +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_422D6F  +
test dx dx +
jz loc_422D6B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_422D6F  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_422D4B  +
xor eax eax +
jmp loc_422D74  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_422D84  +
push 0Ch  +
mov eax ebx +
call sub_4290B5  +
pop ecx  +
jmp loc_422DB8  +
mov ecx offset aGost94_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_422DAF  +
test dx dx +
jz loc_422DAB  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_422DAF  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_422D8B  +
xor eax eax +
jmp loc_422DB4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_422DC2  +
mov edi offset a1_2_643_2_2_9 +
jmp loc_422F62  +
mov ecx offset aGost12_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_422DED  +
test dx dx +
jz loc_422DE9  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_422DED  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_422DC9  +
xor eax eax +
jmp loc_422DF2  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_422E00  +
mov edi offset a1_2_643_7_1_1_ +
jmp loc_422F62  +
mov ecx offset aGost12_512 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_422E2B  +
test dx dx +
jz loc_422E27  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_422E2B  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_422E07  +
xor eax eax +
jmp loc_422E30  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_422E3E  +
mov edi offset a1_2_643_7_1__0 +
jmp loc_422F62  +
mov ecx offset aMd2 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_422E69  +
test dx dx +
jz loc_422E65  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_422E69  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_422E45  +
xor eax eax +
jmp loc_422E6E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_422E7C  +
mov edi offset a1_2_840_1135_2 +
jmp loc_422F62  +
mov ecx offset aMd5 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_422EA7  +
test dx dx +
jz loc_422EA3  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_422EA7  +
add eax esi +
add ecx esi +
test dx dx +
jnz loc_422E83  +
xor eax eax +
jmp loc_422EAC  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_422EBA  +
mov edi offset a1_2_840_1135_3 +
jmp loc_422F62  +
test edi edi +
jz loc_422F62  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_422EC7  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov ebx esp +
push esi  +
push edi  +
push ebx  +
call ds:wcstombs  +
add esp 0Ch +
mov edi ebx +
jmp loc_422CB7  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_20] eax +
test eax eax +
jnz loc_422F62  +
push dword_465C0C  +
mov eax ebx +
call sub_42905C  +
pop ecx  +
jmp loc_422FF2  +
or [ebp+var_8] 100h +
jmp loc_422F62  +
or [ebp+var_8] 200h +
jmp loc_422F62  +
or [ebp+var_8] 400h +
jmp loc_422F62  +
or [ebp+var_8] 800h +
jmp loc_422F62  +
mov [ebp+var_4C] 1 +
jmp loc_422F62  +
mov [ebp+var_48] 1 +
jmp loc_422F62  +
or [ebp+var_2C] 40h +
jmp loc_422F62  +
mov [ebp+var_54] 1 +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C0C eax +
cmp eax 0FFFFFFFFh +
jnz loc_422BE7  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_422FA6  +
cmp [ebp+var_44] eax +
jnz loc_422FFD  +
cmp [ebp+var_50] eax +
jnz loc_423026  +
cmp [ebp+var_34] eax +
jnz loc_42302B  +
mov [ebp+var_18] 1 +
push [ebp+lpMultiByteStr]  +
call ds:free  +
cmp [ebp+var_18] 0 +
pop ecx  +
jz loc_422FC2  +
call sub_4230E2  +
mov eax [ebp+var_C] +
lea esp [ebp-60h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 0C1h  +
push offset aSignlo_c  +
call sub_437C8E  +
add esp 14h +
mov [ebp+var_C] eax +
jmp loc_422FAD  +
and [ebp+var_C] 0 +
jmp loc_422FA6  +
push [ebp+var_2C]  +
mov eax [ebp+var_3C] +
push [ebp+var_8]  +
push [ebp+var_20]  +
push [ebp+var_28]  +
push [ebp+var_1C]  +
push [ebp+var_38]  +
push edi  +
push [ebp+lpMultiByteStr]  +
push [ebp+var_10]  +
push [ebp+var_30]  +
push [ebp+hObject]  +
call sub_423277  +
jmp loc_423077  +
cmp [ebp+var_34] eax +
jz loc_423051  +
push [ebp+var_8]  +
push [ebp+var_20]  +
push [ebp+var_28]  +
push [ebp+var_1C]  +
push [ebp+var_3C]  +
push edi  +
push [ebp+lpMultiByteStr]  +
push [ebp+var_40]  +
push [ebp+var_10]  +
push [ebp+var_30]  +
push [ebp+hObject]  +
call sub_42370B  +
jmp loc_423077  +
push [ebp+var_2C]  +
push [ebp+var_48]  +
push [ebp+var_4C]  +
push [ebp+var_20]  +
push [ebp+var_28]  +
push [ebp+var_54]  +
push [ebp+var_1C]  +
push [ebp+var_38]  +
push [ebp+var_40]  +
push [ebp+var_10]  +
push [ebp+hObject]  +
call sub_423B8C  +
add esp 2Ch +
jmp loc_422FF2  +
***
push offset aSLowsignComman  +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
sub esp 50h +
sub esp 0Ch +
push ecx  +
sub esp 34h +
sub esp 0Ch +
mov eax [esi] +
sub esp 14h +
sub esp 24h +
pop ebp  +
push ecx  +
sub esp 10h +
sub esp 4Ch +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push offset off_463900  +
push [ebp+arg_4]  +
mov [ebp+hObject] ebx +
push [ebp+arg_0]  +
mov [ebp+var_30] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_4C] ebx +
mov [ebp+var_38] ebx +
mov [ebp+var_10] 1 +
mov [ebp+var_3C] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_48] ebx +
xor edi edi +
mov [ebp+var_44] ebx +
mov [ebp+var_34] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_40] ebx +
mov [ebp+lpMultiByteStr] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_1C] ebx +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C10 eax +
cmp eax 0FFFFFFFFh +
jz loc_4251B2  +
push 4  +
pop esi  +
cmp eax 14h +
ja loc_425248  +
jmp ds:off_4252B7[eax*4]  +
mov [ebp+var_44] 1 +
jmp loc_425191  +
mov eax lpLibFileName +
mov [ebp+hObject] eax +
jmp loc_425191  +
mov eax lpLibFileName +
mov [ebp+var_30] eax +
jmp loc_425191  +
mov eax lpLibFileName +
mov [ebp+var_4C] eax +
jmp loc_425191  +
mov [ebp+var_48] 1 +
jmp loc_425191  +
mov [ebp+var_24] 1 +
jmp loc_425191  +
mov [ebp+var_3C] 1 +
jmp loc_425191  +
mov [ebp+var_2C] 1 +
jmp loc_425191  +
mov eax lpLibFileName +
mov [ebp+var_18] eax +
jmp loc_425191  +
mov eax lpLibFileName +
mov [ebp+var_18] eax +
mov [ebp+var_38] 1 +
jmp loc_425191  +
mov edi lpLibFileName +
mov ecx offset aSha1 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_424F01  +
cmp dx bx +
jz loc_424EFD  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_424F01  +
add eax esi +
add ecx esi +
cmp dx bx +
jnz loc_424EDD  +
xor eax eax +
jmp loc_424F06  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_424F14  +
mov edi offset a1_3_14_3_2_26 +
jmp loc_425191  +
mov ecx offset aGost +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_424F3F  +
cmp dx bx +
jz loc_424F3B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_424F3F  +
add eax esi +
add ecx esi +
cmp dx bx +
jnz loc_424F1B  +
xor eax eax +
jmp loc_424F44  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_424F57  +
push 9  +
mov eax offset off_463900 +
call sub_4290B5  +
pop ecx  +
jmp loc_424F8B  +
mov ecx offset aGost94_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_424F82  +
cmp dx bx +
jz loc_424F7E  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_424F82  +
add eax esi +
add ecx esi +
cmp dx bx +
jnz loc_424F5E  +
xor eax eax +
jmp loc_424F87  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_424F95  +
mov edi offset a1_2_643_2_2_9 +
jmp loc_425191  +
mov ecx offset aGost12_256 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_424FC0  +
cmp dx bx +
jz loc_424FBC  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_424FC0  +
add eax esi +
add ecx esi +
cmp dx bx +
jnz loc_424F9C  +
xor eax eax +
jmp loc_424FC5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_424FD3  +
mov edi offset a1_2_643_7_1_1_ +
jmp loc_425191  +
mov ecx offset aGost12_512 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_424FFE  +
cmp dx bx +
jz loc_424FFA  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_424FFE  +
add eax esi +
add ecx esi +
cmp dx bx +
jnz loc_424FDA  +
xor eax eax +
jmp loc_425003  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_425011  +
mov edi offset a1_2_643_7_1__0 +
jmp loc_425191  +
mov ecx offset aMd2 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42503C  +
cmp dx bx +
jz loc_425038  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42503C  +
add eax esi +
add ecx esi +
cmp dx bx +
jnz loc_425018  +
xor eax eax +
jmp loc_425041  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_42504F  +
mov edi offset a1_2_840_1135_2 +
jmp loc_425191  +
mov ecx offset aMd5 +
mov eax edi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42507A  +
cmp dx bx +
jz loc_425076  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42507A  +
add eax esi +
add ecx esi +
cmp dx bx +
jnz loc_425056  +
xor eax eax +
jmp loc_42507F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_42508D  +
mov edi offset a1_2_840_1135_3 +
jmp loc_425191  +
cmp edi ebx +
jnz loc_425098  +
xor edi edi +
jmp loc_425191  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_42509D  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
imul esi esi +
mov eax esi +
call __alloca_probe_16  +
mov ebx esp +
push esi  +
push edi  +
push ebx  +
call ds:wcstombs  +
add esp 0Ch +
mov edi ebx +
push 4  +
pop esi  +
xor ebx ebx +
jmp loc_425191  +
mov [ebp+var_34] 1 +
jmp loc_425191  +
mov [ebp+var_40] 1 +
jmp loc_425191  +
or [ebp+var_8] 100h +
jmp loc_425191  +
or [ebp+var_8] 200h +
jmp loc_425191  +
or [ebp+var_8] 800h +
jmp loc_425191  +
mov esi lpLibFileName +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_42511A  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpMultiByteStr] eax +
cmp eax ebx +
jz loc_42521E  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx bx +
jnz loc_425142  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax esi +
lea edx [eax+2] +
mov bx [eax] +
add eax 2 +
test bx bx +
jnz loc_425158  +
sub eax edx +
xor edx edx +
push edx  +
push edx  +
sar eax 1 +
inc ecx  +
push ecx  +
push [ebp+lpMultiByteStr]  +
inc eax  +
push eax  +
push esi  +
push edx  +
push edx  +
call ds:WideCharToMultiByte  +
jmp loc_4250C9  +
or [ebp+var_28] 40h +
or [ebp+var_8] 40h +
jmp loc_425191  +
mov [ebp+var_1C] 1 +
push offset off_463900  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C10 eax +
cmp eax 0FFFFFFFFh +
jnz loc_424E3C  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_425241  +
cmp [ebp+var_3C] eax +
jnz loc_4251CC  +
cmp [ebp+var_2C] eax +
jz loc_425241  +
cmp [ebp+var_1C] eax +
jz loc_4251E2  +
cmp [ebp+var_24] eax +
jz loc_425241  +
mov ecx [ebp+hObject] +
call sub_425DDC  +
test eax eax +
jnz loc_425248  +
cmp [ebp+var_3C] 0 +
jz loc_425272  +
push [ebp+var_28]  +
mov edx [ebp+var_18] +
push [ebp+lpMultiByteStr]  +
mov ecx [ebp+hObject] +
push [ebp+var_40]  +
push [ebp+var_8]  +
push [ebp+var_38]  +
push [ebp+var_34]  +
push [ebp+var_1C]  +
push [ebp+var_48]  +
push edi  +
push [ebp+var_24]  +
push [ebp+var_30]  +
call sub_425470  +
add esp 2Ch +
jmp loc_42529E  +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 0E3h  +
push offset aSigntsf_c  +
call sub_437C8E  +
add esp 14h +
mov [ebp+var_10] eax +
jmp loc_425248  +
mov [ebp+var_10] ebx +
mov [ebp+var_C] 1 +
push [ebp+lpMultiByteStr]  +
call ds:free  +
cmp [ebp+var_C] 0 +
pop ecx  +
jz loc_42525D  +
call sub_42530B  +
mov eax [ebp+var_10] +
lea esp [ebp-58h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_43F480  +
leave   +
retn   +
cmp [ebp+var_2C] 0 +
jz loc_4252A7  +
push [ebp+var_28]  +
push [ebp+var_38]  +
push [ebp+var_34]  +
push [ebp+var_1C]  +
push [ebp+var_44]  +
push [ebp+var_24]  +
push [ebp+var_4C]  +
push [ebp+var_30]  +
push [ebp+var_18]  +
push [ebp+hObject]  +
call sub_4259B8  +
add esp 28h +
mov [ebp+var_10] eax +
test eax eax +
jnz loc_425248  +
jmp loc_4252AE  +
mov [ebp+var_C] 1 +
and [ebp+var_10] 0 +
jmp loc_425248  +
***
push offset aSSfsignCommand  +
and esp 0FFFFFFF8h +
sub esp 60h +
sub esp 68h +
sub esp 3Ch +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_24] +
stos   +
stos   +
stos   +
stos   +
xor esi esi +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push 20000001h  +
lea eax [ebp+var_24] +
push eax  +
push esi  +
push esi  +
push [ebp+arg_0]  +
mov [ebp+var_8] esi +
push esi  +
mov [ebp+var_24] 10h +
call ds:off_444480  +
test eax eax +
jnz loc_425EDB  +
push offset aCertgetcerti_3  +
push 0Fh  +
push 3D3h  +
push offset aSigntsf_c  +
call sub_437C6A  +
add esp 10h +
mov edi eax +
jmp loc_425F3E  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_38] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_8]  +
mov [ebp+var_14] 0Ch +
push 1  +
mov [ebp+var_38] 14h +
call ds:off_444490  +
test eax eax +
jnz loc_425F20  +
push offset aCertverifyce_0  +
push 0Fh  +
push 3E4h  +
jmp loc_425ECA  +
cmp [ebp+dwErrCode] esi +
jz loc_425F3C  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
push offset aCertverifyce_0  +
push 0Fh  +
push 3EBh  +
jmp loc_425ECA  +
xor edi edi +
cmp [ebp+var_8] esi +
jz loc_425F4C  +
push [ebp+var_8]  +
call ds:off_444484  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
sub esp 6Ch +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov ebx offset off_463860 +
xor esi esi +
push ebx  +
push [ebp+arg_4]  +
mov [ebp+var_1C] esi +
push [ebp+arg_0]  +
mov [ebp+var_24] esi +
mov [ebp+var_20] esi +
mov [ebp+var_C] esi +
mov [ebp+var_10] 1 +
mov [ebp+var_4] esi +
mov [ebp+var_8] 7 +
xor edi edi +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C14 eax +
cmp eax 0FFFFFFFFh +
jnz loc_4260AE  +
call sub_4264ED  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
xor esi esi +
inc [ebp+var_14]  +
cmp eax 8 +
ja loc_4260A4  +
jmp ds:off_4264C9[eax*4]  +
mov eax lpLibFileName +
cmp eax esi +
jz loc_4260DE  +
lea ecx [ebp+var_1C] +
push ecx  +
push offset aD_0  +
push eax  +
call ds:swscanf  +
add esp 0Ch +
jmp loc_426378  +
mov [ebp+var_1C] 1 +
jmp loc_426378  +
mov eax lpLibFileName +
mov [ebp+var_24] eax +
jmp loc_426378  +
call sub_4291AC  +
mov [ebp+var_20] eax +
jmp loc_426378  +
call sub_4295C2  +
mov [ebp+var_C] eax +
jmp loc_426378  +
mov esi lpLibFileName +
mov ecx offset aMult +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_426144  +
test dx dx +
jz loc_426140  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_426144  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_42611E  +
xor eax eax +
jmp loc_426149  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_426159  +
mov [ebp+var_8] 1 +
jmp loc_426378  +
mov ecx offset aCrypt_0 +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_426186  +
test dx dx +
jz loc_426182  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_426186  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_426160  +
xor eax eax +
jmp loc_42618B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_42619B  +
mov [ebp+var_8] 2 +
jmp loc_426378  +
mov ecx offset aHash_2 +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4261C8  +
test dx dx +
jz loc_4261C4  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4261C8  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_4261A2  +
xor eax eax +
jmp loc_4261CD  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4261DD  +
mov [ebp+var_8] 4 +
jmp loc_426378  +
mov ecx offset aAll +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42620A  +
test dx dx +
jz loc_426206  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42620A  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_4261E4  +
xor eax eax +
jmp loc_42620F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4263D1  +
mov [ebp+var_8] 7 +
jmp loc_426378  +
mov esi lpLibFileName +
mov ecx offset aFull +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_426256  +
test dx dx +
jz loc_426252  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_426256  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_426230  +
xor eax eax +
jmp loc_42625B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_426266  +
xor edi edi +
jmp loc_426378  +
mov ecx offset aScr +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_426293  +
test dx dx +
jz loc_42628F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_426293  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_42626D  +
xor eax eax +
jmp loc_426298  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4262A4  +
xor edi edi +
inc edi  +
jmp loc_426378  +
mov ecx offset off_45761C +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_4262D1  +
test dx dx +
jz loc_4262CD  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_4262D1  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_4262AB  +
xor eax eax +
jmp loc_4262D6  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4263D1  +
push 2  +
pop edi  +
jmp loc_426378  +
push lpLibFileName  +
call ds:_wtoi  +
pop ecx  +
mov dword_526070 eax +
jmp loc_426378  +
mov esi lpLibFileName +
mov ecx offset aAbs +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_42632D  +
test dx dx +
jz loc_426329  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_42632D  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_426307  +
xor eax eax +
jmp loc_426332  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_42633B  +
and [ebp+var_18] eax +
jmp loc_426378  +
mov ecx offset aOps +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_426368  +
test dx dx +
jz loc_426364  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_426368  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_426342  +
xor eax eax +
jmp loc_42636D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4263D1  +
mov [ebp+var_18] 1 +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C14 eax +
cmp eax 0FFFFFFFFh +
jnz loc_4260AC  +
xor esi esi +
cmp [ebp+var_14] esi +
jz loc_42609F  +
push [ebp+arg_0]  +
mov ebx [ebp+arg_4] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_42609F  +
cmp [ebp+var_C] esi +
jnz loc_4263EC  +
push [ebp+var_20]  +
lea ebx [ebp+var_C] +
call sub_429A20  +
pop ecx  +
cmp eax esi +
jz loc_4263EC  +
mov [ebp+var_10] eax +
jmp loc_4260A4  +
push esi  +
push offset aErrorWrongPa_0  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
jmp loc_4260A4  +
mov [ebp+var_10] esi +
jmp loc_42609F  +
cmp [ebp+var_18] 1 +
jz loc_4263F8  +
mov dword_526070 esi +
push [ebp+var_24]  +
mov ecx [ebp+var_C] +
push [ebp+var_1C]  +
mov edx [ebp+var_20] +
call sub_437F92  +
mov ebx [ebp+var_8] +
mov esi ds:printf +
pop ecx  +
pop ecx  +
test bl 1 +
jz loc_426439  +
push offset aDiffieHellmanT  +
call esi  +
push edi  +
call sub_42687F  +
pop ecx  +
pop ecx  +
call sub_426916  +
test edi edi +
jz loc_426439  +
call sub_4268F0  +
mov [ebp+var_4] eax +
test bl 2 +
jz loc_42645E  +
push offset aCryptTestStart  +
call esi  +
push edi  +
call sub_427B5F  +
pop ecx  +
pop ecx  +
call sub_427C67  +
test edi edi +
jz loc_42645E  +
call sub_427C20  +
or [ebp+var_4] eax +
test bl 4 +
jz loc_426483  +
push offset aHashTestStarte  +
call esi  +
push edi  +
call sub_42706F  +
pop ecx  +
pop ecx  +
call sub_42716C  +
test edi edi +
jz loc_4264C0  +
call sub_427123  +
or [ebp+var_4] eax +
test edi edi +
jz loc_4264C0  +
push [ebp+var_4]  +
call sub_426583  +
pop ecx  +
cmp edi 2 +
jnz loc_4264C0  +
cmp ebx 7 +
jnz loc_4264C0  +
push [ebp+var_4]  +
call sub_4329C9  +
pop ecx  +
test eax eax +
jz loc_4264C0  +
push offset aSetToConfigErr  +
push 0Fh  +
push 15Ah  +
push offset aSpeed_c  +
call sub_437C6A  +
add esp 10h +
and [ebp+var_10] 0 +
jmp loc_4260A4  +
***
push offset aSSpeedGlobalsO  +
push [ebp+arg_0]  +
add eax 4 +
mov ecx off_4637DC +
mov eax offset dword_574E80 +
mov eax offset dword_574E80 +
sub esp 814h +
sub esp 1Ch +
push ebx  +
mov ecx dword_57464C +
and esp 0FFFFFFF8h +
mov edx offset unk_56DC00 +
push ecx  +
mov ecx offset unk_56DC00 +
push ecx  +
sub esp 54h +
push ecx  +
mov eax [eax] +
sub esp 0Ch +
sub esp 18h +
mov ecx dword_5681D4 +
and esp 0FFFFFFF8h +
mov ecx offset unk_546DA0 +
sub esp 10h +
mov ecx offset unk_546DA0 +
and dword ptr [ecx+10h] 0 +
sub esp 10h +
sub esp 1Ch +
mov eax [eax] +
sub esp 10h +
sub esp 18h +
mov ecx dword_5269BC +
and esp 0FFFFFFF8h +
rdtsc   +
rdtsc   +
cmp dword_526128 0 +
cmp dword_526128 0 +
mov ecx [ebp+arg_10] +
rdtsc   +
mov ecx [ebp+arg_10] +
rdtsc   +
mov ecx [ebp+arg_10] +
rdtsc   +
push esi  +
rdtsc   +
rdtsc   +
rdtsc   +
cmp dword_526128 0 +
rdtsc   +
sub esp 320h +
sub esp 6Ch +
lea eax [ecx+7FF4FEFFh] +
cmp eax 0Fh +
ja loc_428737  +
jmp ds:off_42874D[eax*4]  +
mov eax offset aCert_e_expir_0 +
jmp loc_42873C  +
mov eax offset aCert_e_valid_0 +
jmp loc_42873C  +
mov eax offset aCert_e_role +
jmp loc_42873C  +
mov eax offset aCert_e_pathlen +
jmp loc_42873C  +
mov eax offset aCert_e_critica +
jmp loc_42873C  +
mov eax offset aCert_e_purpo_0 +
jmp loc_42873C  +
mov eax offset aCert_e_issuerc +
jmp loc_42873C  +
mov eax offset aCert_e_malform +
jmp loc_42873C  +
mov eax offset aCert_e_untru_1 +
jmp loc_42873C  +
mov eax offset aCert_e_chain_0 +
jmp loc_42873C  +
mov eax offset aTrust_e_fail +
jmp loc_42873C  +
mov eax offset aCert_e_revok_0 +
jmp loc_42873C  +
mov eax offset aCert_e_untru_2 +
jmp loc_42873C  +
mov eax offset aCert_e_revoc_0 +
jmp loc_42873C  +
mov eax offset aCert_e_cn_no_0 +
jmp loc_42873C  +
mov eax offset aCert_e_wrong_0 +
jmp loc_42873C  +
mov eax offset aUnknown_0 +
push eax  +
push ecx  +
push offset aError0xLxSRetu  +
call ds:printf  +
add esp 0Ch +
retn   +
***
mov ecx dword_463564 +
sub esp 4Ch +
sub esp 34h +
sub esp 14h +
sub esp 28h +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
sub esp 1Ch +
and esp 0FFFFFFF8h +
call ds:GetConsoleOutputCP  +
push ecx  +
push ebx  +
push ecx  +
mov ecx [ebp+arg_0] +
push ecx  +
pop ecx  +
pop ecx  +
test edi edi +
sub esp 14h +
cmp [ebp+arg_0] 4Bh +
sub esp 10h +
sub esp 20h +
push ecx  +
push ecx  +
cmp [ebp+lpBaseAddress] 0 +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
push offset aWb  +
push edi  +
call ds:_wfopen  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_429EBF  +
push edi  +
push offset aCannotOpenFile  +
push 0Fh  +
push 2BEh  +
push offset aTmain_c  +
call sub_437C6A  +
add esp 14h +
jmp loc_429F4A  +
push ebx  +
push esi  +
push 1  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call ds:fwrite  +
mov ebx ds:fclose +
add esp 10h +
cmp eax 1 +
jz loc_429EF9  +
push edi  +
push offset aCannotWriteToF  +
push 0Fh  +
push 2C2h  +
push offset aTmain_c  +
call sub_437C6A  +
add esp 14h +
jmp loc_429F41  +
push esi  +
call ds:ferror  +
pop ecx  +
test eax eax +
jz loc_429F14  +
push edi  +
push offset aWriteToFileErr  +
push 0Fh  +
push 2C6h  +
jmp loc_429EEA  +
push esi  +
call ebx  +
pop ecx  +
push edi  +
test eax eax +
jz loc_429F2B  +
push offset aWriteToFileE_0  +
push 0Fh  +
push 2CAh  +
jmp loc_429EEA  +
push offset aOutputFileSHas  +
xor esi esi +
call ds:wprintf  +
pop ecx  +
pop ecx  +
mov [ebp+var_4] 1 +
test esi esi +
jz loc_429F49  +
push esi  +
call ebx  +
pop ecx  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn   +
***
push ecx  +
xor bl bl +
sub esp 28h +
sub esp 48h +
sub esp 0Ch +
push ecx  +
sub esp 10h +
cmp [ebp+arg_4] 0 +
push ecx  +
sub esp 14h +
movzx eax word ptr [eax] +
push ecx  +
cmp [edi] bx +
xor edx edx +
cmp [ebp+arg_4] 0 +
sub esp 14h +
sub esp 0Ch +
push ecx  +
xor esi esi +
sub esp 19Ch +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+var_10] 1 +
mov [ebp+lpWideCharStr] ebx +
call ds:off_444444  +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_42BCCA  +
mov esi ds:printf +
mov edi [ebp+var_C] +
push edi  +
push offset aPropertyUFound  +
call esi  +
mov eax 0FF00h +
pop ecx  +
pop ecx  +
cmp edi eax +
ja loc_42BCA9  +
jz loc_42BCA1  +
lea eax [edi-1] +
cmp eax 14h +
ja loc_42BCA9  +
jmp ds:off_42BD45[eax*4]  +
push offset aFriendly_name_  +
call esi  +
pop ecx  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push edi  +
push [ebp+arg_0]  +
call ds:off_444440  +
test eax eax +
jz loc_42BCCD  +
push [ebp+var_8]  +
mov edi ds:malloc +
call edi  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_42BCE5  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call ds:off_444440  +
test eax eax +
jz loc_42BCFB  +
cmp [ebp+lpWideCharStr] 0 +
jz loc_42BB0E  +
push [ebp+lpWideCharStr]  +
call ds:free  +
pop ecx  +
mov eax ebx +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_42BB13  +
sub eax edx +
add eax eax +
push eax  +
call edi  +
pop ecx  +
mov [ebp+lpWideCharStr] eax +
test eax eax +
jz loc_42BD19  +
mov eax ebx +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_42BB32  +
sub eax edx +
mov ecx eax +
mov eax ebx +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_42BB42  +
sub eax edi +
inc ecx  +
push ecx  +
push [ebp+lpWideCharStr]  +
inc eax  +
push eax  +
push ebx  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
push [ebp+lpWideCharStr]  +
push offset aTheFriendlyNam  +
call ds:wprintf  +
push ebx  +
call ds:free  +
add esp 0Ch +
jmp loc_42BCA9  +
push offset aSignatureHashI  +
jmp loc_42BCA6  +
push offset aKeyProviderHan  +
jmp loc_42BCA6  +
push offset aKeyProvInfoPro  +
call esi  +
pop ecx  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
mov ebx ds:off_444440 +
push edi  +
push [ebp+arg_0]  +
call ebx  +
test eax eax +
jz loc_42BCCD  +
push [ebp+var_8]  +
call ds:malloc  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_42BD37  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call ebx  +
test eax eax +
jz loc_42BC1A  +
push dword ptr [edi]  +
mov ebx ds:wprintf +
push offset aTheCurrentKeyC  +
call ebx  +
push dword ptr [edi+4]  +
push offset aTheProviderNam  +
call ebx  +
push dword ptr [edi+8]  +
push offset aTheProviderTyp  +
call ebx  +
push dword ptr [edi+0Ch]  +
push offset aTheProviderFla  +
call ebx  +
push dword ptr [edi+18h]  +
push offset aTheProviderKey  +
call ebx  +
push edi  +
call ds:free  +
add esp 2Ch +
jmp loc_42BCA9  +
push offset aThePropertyW_0  +
push 0Fh  +
push 8F9h  +
push offset aTmain_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_10] eax +
jmp loc_42BCA9  +
push offset aSha1HashId_  +
jmp loc_42BCA6  +
push offset aMd5HashId_  +
jmp loc_42BCA6  +
push offset aKeyContextProp  +
jmp loc_42BCA6  +
push offset aKeySpecPropId_  +
jmp loc_42BCA6  +
push offset aEnhkeyUsagePro  +
jmp loc_42BCA6  +
push offset aNextUpdateLoca  +
jmp loc_42BCA6  +
push offset aPvkFilePropId_  +
jmp loc_42BCA6  +
push offset aDescriptionPro  +
jmp loc_42BCA6  +
push offset aAccessStatePro  +
jmp loc_42BCA6  +
push offset aSmaart_cardDat  +
jmp loc_42BCA6  +
push offset aEfsPropId_  +
jmp loc_42BCA6  +
push offset aFortezzaDataPr  +
jmp loc_42BCA6  +
push offset aArchivedPropId  +
jmp loc_42BCA6  +
push offset aKeyIdentifierP  +
jmp loc_42BCA6  +
push offset aAutoEnrollId_  +
jmp loc_42BCA6  +
push offset aCp_cert_shadow  +
call esi  +
pop ecx  +
push offset asc_445094  +
call esi  +
pop ecx  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call ds:off_444444  +
xor ebx ebx +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_42BA7D  +
mov [ebp+var_10] ebx +
cmp [ebp+lpWideCharStr] 0 +
jz loc_42BCDD  +
push [ebp+lpWideCharStr]  +
call ds:free  +
pop ecx  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push offset aMemoryAlloca_1  +
push 0Fh  +
push 8CCh  +
push offset aTmain_c  +
call sub_437C0A  +
push offset aCall2GettingTh  +
push 0Fh  +
push 8D1h  +
push offset aTmain_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_10] eax +
jmp loc_42BCCD  +
push offset aOutOfMemory  +
push 0Fh  +
push 8D9h  +
push offset aTmain_c  +
call sub_437C6A  +
add esp 10h +
mov [ebp+var_10] eax +
jmp loc_42BCDD  +
push offset aErrorInAllocat  +
push 0Fh  +
push 8EEh  +
jmp loc_42BCF1  +
***
mov eax [ebp+arg_0] +
push esi  +
sub esp 18h +
sub esp 80h +
push ebx  +
cmp [ebp+arg_0] 0 +
push esi  +
push ebx  +
sub esp 820h +
push ebx  +
sub esp 1Ch +
sub esp 20h +
sub esp 238h +
mov eax [ecx] +
and esp 0FFFFFFF8h +
sub esp 5CCh +
mov eax dword_463000 +
xor eax esp +
mov [esp+5CCh+var_4] eax +
xor edx edx +
push ebx  +
push esi  +
push edi  +
xor eax eax +
mov [esp+5D8h+var_598] edx +
lea edi [esp+5D8h+var_594] +
stos   +
push offset off_463568  +
mov [esp+5DCh+var_5B8] edx +
lea edi [esp+5DCh+var_5B4] +
push ecx  +
push [ebp+arg_0]  +
xor esi esi +
stos   +
mov eax offset pTrusteeName +
inc esi  +
mov [esp+5E4h+var_564] ecx +
mov [esp+5E4h+s] edx +
mov [esp+5E4h+var_5AC] esi +
mov [esp+5E4h+var_59C] edx +
mov [esp+5E4h+var_570] edx +
mov [esp+5E4h+var_550] edx +
mov [esp+5E4h+var_560] edx +
mov [esp+5E4h+lpMultiByteStr] edx +
mov [esp+5E4h+var_568] eax +
mov [esp+5E4h+var_5A4] edx +
mov [esp+5E4h+var_55C] eax +
mov [esp+5E4h+var_5B0] edx +
mov [esp+5E4h+var_5A0] edx +
mov [esp+5E4h+var_5C4] 4 +
mov [esp+5E4h+var_574] edx +
mov [esp+5E4h+var_554] edx +
mov [esp+5E4h+var_578] edx +
mov [esp+5E4h+var_5C8] esi +
mov [esp+5E4h+var_580] edx +
mov [esp+5E4h+var_57C] edx +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C18 eax +
cmp eax 0FFFFFFFFh +
jz loc_42CFB7  +
mov edi ds:_wtoi +
mov ebx offset off_463568 +
inc [esp+5D8h+var_57C]  +
mov ecx [esp+5D8h+var_5C4] +
cmp eax 23h +
ja loc_42CFBB  +
jmp ds:off_42D66C[eax*4]  +
mov eax lpLibFileName +
mov [esp+5D8h+var_5A4] eax +
jmp loc_42CEF6  +
mov eax lpLibFileName +
mov off_4633CC eax +
jmp loc_42CEF6  +
push lpLibFileName  +
call edi  +
mov [esp+5DCh+var_5AC] eax +
jmp loc_42CEF5  +
mov eax lpLibFileName +
mov [esp+5D8h+var_55C] eax +
jmp loc_42CEF6  +
mov eax lpLibFileName +
mov [esp+5D8h+var_568] eax +
jmp loc_42CEF6  +
inc dword_526084  +
jmp loc_42CEF6  +
mov dword_526080 esi +
jmp loc_42CEF6  +
mov dword_5260B4 esi +
jmp loc_42CEF6  +
mov [esp+5D8h+var_570] esi +
jmp loc_42CEF6  +
mov [esp+5D8h+var_550] esi +
jmp loc_42CEF6  +
mov dword_52608C esi +
jmp loc_42CEF6  +
mov [esp+5D8h+var_560] esi +
jmp loc_42CEF6  +
mov dword_5260B0 esi +
jmp loc_42CEF6  +
mov [esp+5D8h+var_59C] esi +
jmp loc_42CEF6  +
and dword_463560 0 +
jmp loc_42CEF6  +
mov eax lpLibFileName +
mov dword_526094 eax +
push 2  +
pop eax  +
cmp ecx eax +
jz loc_42CC86  +
cmp ecx 4 +
jnz loc_42CF73  +
mov [esp+5D8h+var_5C4] eax +
jmp loc_42CEF6  +
mov eax lpLibFileName +
mov dword_526094 eax +
cmp ecx esi +
jz loc_42CCA6  +
cmp ecx 4 +
jnz loc_42CF73  +
mov [esp+5D8h+var_5C4] esi +
jmp loc_42CEF6  +
mov eax lpLibFileName +
mov dword_526098 eax +
jmp loc_42CC76  +
mov eax lpLibFileName +
mov dword_526098 eax +
jmp loc_42CC99  +
mov dword_526088 esi +
jmp loc_42CEF6  +
mov dword_526090 esi +
jmp loc_42CEF6  +
mov eax lpLibFileName +
mov dword_52609C eax +
jmp loc_42CEF6  +
mov eax lpLibFileName +
mov dword_5260A0 eax +
jmp loc_42CEF6  +
push lpLibFileName  +
call edi  +
sub eax 0 +
pop ecx  +
jz loc_42CD79  +
dec eax  +
jz loc_42CD6A  +
dec eax  +
jz loc_42CD5B  +
dec eax  +
jz loc_42CD4C  +
dec eax  +
jz loc_42CD3D  +
dec eax  +
jz loc_42CD2E  +
dec eax  +
jnz loc_42CF81  +
mov dword_5260A4 0C00h +
jmp loc_42CEF6  +
mov dword_5260A4 300h +
jmp loc_42CEF6  +
mov dword_5260A4 0C0h +
jmp loc_42CEF6  +
mov dword_5260A4 30h +
jmp loc_42CEF6  +
mov dword_5260A4 0Ch +
jmp loc_42CEF6  +
mov dword_5260A4 3 +
jmp loc_42CEF6  +
and dword_5260A4 0 +
jmp loc_42CEF6  +
push lpLibFileName  +
call edi  +
dec eax  +
pop ecx  +
jz loc_42CDB9  +
dec eax  +
jz loc_42CDAA  +
dec eax  +
jnz loc_42CF81  +
mov dword_5260A8 0AA24h +
jmp loc_42CEF6  +
mov dword_5260A8 0AA02h +
jmp loc_42CEF6  +
mov dword_5260A8 0A400h +
jmp loc_42CEF6  +
push lpLibFileName  +
call edi  +
mov dword_463564 eax +
jmp loc_42CEF5  +
push lpLibFileName  +
call edi  +
mov dword_4637D8 eax +
jmp loc_42CEF5  +
push lpLibFileName  +
call edi  +
mov dword_526078 eax +
jmp loc_42CEF5  +
mov ebx lpLibFileName +
mov eax ebx +
lea edx [eax+2] +
xor edi edi +
mov cx [eax] +
add eax 2 +
cmp cx di +
jnz loc_42CE0B  +
sub eax edx +
sar eax 1 +
inc eax  +
push eax  +
call ds:malloc  +
pop ecx  +
mov [esp+5D8h+lpMultiByteStr] eax +
cmp eax edi +
jz loc_42CF95  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
cmp cx di +
jnz loc_42CE34  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax ebx +
lea edx [eax+2] +
mov [esp+5D8h+var_590] edx +
mov dx [eax] +
add eax 2 +
cmp dx di +
jnz loc_42CE4E  +
sub eax [esp+5D8h+var_590] +
push edi  +
push edi  +
sar eax 1 +
inc ecx  +
push ecx  +
push [esp+5E4h+lpMultiByteStr]  +
inc eax  +
push eax  +
push ebx  +
push edi  +
push edi  +
call ds:WideCharToMultiByte  +
mov edi ds:_wtoi +
mov ebx offset off_463568 +
jmp loc_42CEF6  +
push lpLibFileName  +
call edi  +
mov [esp+5DCh+var_574] eax +
jmp loc_42CEF5  +
mov [esp+5D8h+var_554] esi +
jmp loc_42CEF6  +
mov [esp+5D8h+var_578] esi +
jmp loc_42CEF6  +
cmp dword_5260B8 32h +
jnb loc_42CFBB  +
push 0  +
push 0  +
push lpLibFileName  +
call ds:wcstol  +
mov ecx dword_5260B8 +
add esp 0Ch +
mov dword_465C58[ecx*4] eax +
test eax eax +
jz loc_42CF81  +
inc dword_5260B8  +
jmp loc_42CEF6  +
push lpLibFileName  +
call edi  +
mov dword_5260BC eax +
jmp loc_42CEF5  +
push lpLibFileName  +
call edi  +
mov dword_5260C0 eax +
pop ecx  +
push ebx  +
push [esp+5DCh+var_564]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C18 eax +
cmp eax 0FFFFFFFFh +
jnz loc_42CBA0  +
cmp [esp+5D8h+var_57C] 0 +
jz loc_42CFB7  +
push [ebp+arg_0]  +
mov ebx [esp+5DCh+var_564] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_42CFB7  +
cmp [esp+5D8h+var_5C4] 4 +
jnz loc_42CF43  +
mov [esp+5D8h+var_5C4] 2 +
push [esp+5D8h+var_554]  +
call sub_42846F  +
pop ecx  +
test eax eax +
jnz loc_42D045  +
push offset aErrorInitial_0  +
push 0Fh  +
push 24Dh  +
push offset aWebclient_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_42CF8F  +
push offset aIncompatiblePa  +
call ds:printf  +
pop ecx  +
jmp loc_42CFBB  +
push dword_465C18  +
mov eax ebx +
call sub_42905C  +
pop ecx  +
mov [esp+5D8h+var_5C8] eax +
jmp loc_42CFBB  +
push offset aOutOfMemory  +
push 0Fh  +
push 8  +
push 21Bh  +
push offset aWebclient_c  +
call sub_437C8E  +
add esp 14h +
jmp loc_42CF8F  +
and [esp+5D8h+var_5C8] 0 +
mov [esp+5D8h+var_580] esi +
push [esp+5D8h+lpMultiByteStr]  +
call ds:free  +
xor esi esi +
pop ecx  +
cmp [esp+5D8h+var_5B0] esi +
jz loc_42CFD8  +
push [esp+5D8h+var_5B0]  +
call ds:off_444458  +
cmp [esp+5DCh+var_5BC] esi +
jnz loc_42CFE4  +
cmp [esp+5DCh+var_5B8] esi +
jz loc_42CFF1  +
lea eax [esp+5DCh+var_5BC] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+24h]  +
cmp [esp+5E0h+var_5A0] esi +
jnz loc_42CFFD  +
cmp [esp+5E0h+var_59C] esi +
jz loc_42D00A  +
lea eax [esp+5E0h+var_5A0] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+10h]  +
mov eax dword_5260C4 +
cmp eax esi +
jz loc_42D021  +
push esi  +
push eax  +
call ds:off_444558  +
mov dword_5260C4 esi +
cmp [esp+5ECh+var_594] esi +
jz loc_42D02C  +
call sub_42D6FC  +
mov eax [esp+5ECh+var_5DC] +
mov ecx dword ptr [esp+5ECh+WSAData.szSystemStatus+7Bh] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F480  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [esp+5D8h+WSAData] +
push eax  +
push 101h  +
call WSAStartup  +
cmp eax 0FFFFFFFFh +
jnz loc_42D06E  +
push offset aWsastartup  +
push 0Fh  +
push 256h  +
jmp loc_42CF64  +
lea eax [esp+5D8h+var_598] +
push eax  +
push [esp+5DCh+var_5C4]  +
push [esp+5E0h+lpMultiByteStr]  +
push [esp+5E4h+var_550]  +
push [esp+5E8h+var_570]  +
call sub_42D906  +
add esp 14h +
test eax eax +
jz loc_42D0A4  +
push offset aErrorCreatingC  +
push 0Fh  +
push eax  +
push 25Fh  +
jmp loc_42CFA3  +
lea esi [esp+5D8h+var_570] +
call sub_432A5C  +
xor edi edi +
mov [esp+5D8h+var_5C4] edi +
cmp [esp+5D8h+var_5AC] edi +
jle loc_42D4E2  +
lea eax [esp+5D8h+s] +
push eax  +
push [esp+5DCh+var_5A4]  +
call sub_42DBD5  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42D5CC  +
push [esp+5D8h+lpMultiByteStr]  +
lea eax [esp+5DCh+var_590] +
push [esp+5DCh+var_59C]  +
push eax  +
lea eax [esp+5E4h+var_5B8] +
push eax  +
mov eax [esp+5E8h+var_560] +
neg eax  +
sbb eax eax +
not eax  +
and eax [esp+5E8h+var_5A4] +
push eax  +
lea eax [esp+5ECh+var_598] +
push eax  +
push [esp+5F0h+s]  +
mov eax [esp+5F4h+var_574] +
call sub_42DEFF  +
add esp 1Ch +
test eax eax +
jnz loc_42D5DD  +
cmp [esp+5D8h+var_59C] eax +
jnz loc_42D477  +
xor ebx ebx +
inc ebx  +
cmp dword_526084 ebx +
jge loc_42D138  +
cmp [esp+5D8h+var_578] eax +
jz loc_42D241  +
push 2A4h  +
lea eax [esp+5DCh+var_544] +
push 0  +
push eax  +
mov [esp+5E4h+var_548] ebx +
call memset  +
add esp 0Ch +
lea eax [esp+5D8h+var_548] +
push eax  +
push 64h  +
lea eax [esp+5E0h+var_5B8] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+2Ch]  +
test eax eax +
jnz loc_42D235  +
mov esi ds:printf +
cmp dword_526084 ebx +
jl loc_42D210  +
lea eax [esp+5E4h+var_544] +
push eax  +
push [esp+5E8h+var_54C]  +
push [esp+5ECh+var_550]  +
push offset aSecpkg_attr_ci  +
call esi  +
push [esp+5F4h+var_440]  +
lea eax [esp+5F8h+var_4C4] +
push [esp+5F8h+var_444]  +
push eax  +
push offset aSecpkg_attr__0  +
call esi  +
push [esp+604h+var_3BC]  +
lea eax [esp+608h+var_43C] +
push eax  +
push offset aSecpkg_attr__1  +
call esi  +
add esp 2Ch +
push [esp+5E4h+var_334]  +
lea eax [esp+5E8h+var_3B8] +
push [esp+5E8h+var_334]  +
push eax  +
push offset aSecpkg_attr__2  +
call esi  +
push [esp+5F4h+var_2B0]  +
lea eax [esp+5F8h+var_330] +
push eax  +
push offset aSecpkg_attr__3  +
call esi  +
add esp 1Ch +
cmp [esp+5E4h+var_584] 0 +
jz loc_42D247  +
mov eax dword_5260A4 +
test eax eax +
jz loc_42D247  +
test [esp+5E4h+var_550] eax +
jnz loc_42D247  +
push offset aError_TlsVersi  +
call esi  +
jmp loc_42CF7E  +
push offset aSecpkg_attr__4  +
call ds:printf  +
pop ecx  +
mov esi ds:printf +
mov eax [esp+5E4h+var_580] +
dec eax  +
jz loc_42D258  +
dec eax  +
jz loc_42D29E  +
dec eax  +
jnz loc_42D2EB  +
lea eax [esp+5E4h+var_2AC] +
push eax  +
push 23h  +
lea eax [esp+5ECh+var_5C4] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+2Ch]  +
test eax eax +
jz loc_42D27D  +
push eax  +
push offset aError0xLxQuery  +
call esi  +
pop ecx  +
pop ecx  +
push [esp+5F0h+var_2B4]  +
push offset aPremotecertcon  +
call esi  +
cmp [esp+5F8h+var_2B4] 2 +
pop ecx  +
pop ecx  +
jz loc_42D2E3  +
push offset aProtonegoextNo  +
jmp loc_42D2E8  +
lea eax [esp+5E4h+var_2AC] +
push eax  +
push 23h  +
lea eax [esp+5ECh+var_5C4] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+2Ch]  +
test eax eax +
jz loc_42D2C3  +
push eax  +
push offset aError0xLxQuery  +
call esi  +
pop ecx  +
pop ecx  +
push [esp+5F0h+var_2B4]  +
push offset aPremotecertcon  +
call esi  +
pop ecx  +
pop ecx  +
cmp [esp+5F0h+var_2B4] ebx +
jz loc_42D2E3  +
push offset aProtonegoext_0  +
jmp loc_42D2E8  +
push offset aQuerycontextat  +
call esi  +
pop ecx  +
xor eax eax +
lea edi [esp+5F0h+var_59C] +
stos   +
lea eax [esp+5F0h+var_59C] +
push eax  +
push ebx  +
lea eax [esp+5F8h+var_5D0] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+2Ch]  +
test eax eax +
jnz loc_42D609  +
cmp dword_526084 ebx +
mov ebx ds:wprintf +
jl loc_42D328  +
push [esp+5FCh+lpMultiByteStr]  +
push offset off_459D40  +
call ebx  +
pop ecx  +
pop ecx  +
push [esp+5FCh+lpMultiByteStr]  +
mov eax dword_526180 +
call dword ptr [eax+40h]  +
test eax eax +
jnz loc_42D618  +
lea edi [esp+600h+var_5E4] +
stos   +
lea eax [esp+600h+var_5E4] +
push eax  +
push 0Ah  +
lea eax [esp+608h+var_5E0] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+2Ch]  +
test eax eax +
jnz loc_42D3BE  +
cmp dword_526084 1 +
jl loc_42D3C6  +
mov eax [esp+60Ch+var_5F0] +
push dword ptr [eax]  +
push offset off_459D88  +
call ebx  +
mov eax [esp+614h+var_5F0] +
movzx eax word ptr [eax+4] +
push eax  +
push offset off_459DE8  +
call ebx  +
mov eax [esp+61Ch+var_5F0] +
movzx eax word ptr [eax+6] +
push eax  +
push offset off_459E38  +
call ebx  +
mov eax [esp+624h+var_5F0] +
push dword ptr [eax+8]  +
push offset off_459E88  +
call ebx  +
mov eax [esp+62Ch+var_5F0] +
push dword ptr [eax+0Ch]  +
push offset off_459EE0  +
call ebx  +
mov eax [esp+634h+var_5F0] +
push dword ptr [eax+10h]  +
push offset off_459F28  +
call ebx  +
add esp 30h +
jmp loc_42D3C6  +
push offset aSecpkg_attr_pa  +
call esi  +
pop ecx  +
lea eax [esp+60Ch+var_5E4] +
push eax  +
push 53h  +
lea eax [esp+614h+var_5EC] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+2Ch]  +
test eax eax +
jnz loc_42D627  +
xor edi edi +
inc edi  +
cmp dword_526084 edi +
jl loc_42D3F9  +
push edi  +
push [esp+61Ch+var_5F0]  +
call sub_42A592  +
pop ecx  +
pop ecx  +
cmp dword_5260B4 0 +
jnz loc_42D41B  +
push [esp+618h+var_5E4]  +
mov eax edi +
push [esp+61Ch+var_5F0]  +
call sub_4287F0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_42D636  +
cmp [esp+618h+var_5E0] 0 +
jz loc_42D42C  +
push [esp+618h+var_5E0]  +
call ds:off_444458  +
mov eax [esp+61Ch+var_5F4] +
mov [esp+61Ch+var_5E4] eax +
cmp dword_526084 edi +
jl loc_42D445  +
lea ebx [esp+61Ch+var_5FC] +
call sub_42EFEC  +
push [esp+61Ch+var_5E8]  +
mov edx [esp+620h+var_5A0] +
push [esp+620h+var_5EC]  +
lea eax [esp+624h+var_5DC] +
push [esp+624h+var_5AC]  +
lea ecx [esp+628h+var_5FC] +
push eax  +
push [esp+62Ch+var_604]  +
call sub_42E4C3  +
mov edi eax +
add esp 14h +
test edi edi +
jnz loc_42D645  +
push [esp+61Ch+var_5E0]  +
lea eax [esp+620h+var_5FC] +
push eax  +
lea eax [esp+624h+var_5DC] +
push eax  +
push [esp+628h+var_604]  +
call sub_42DD90  +
add esp 10h +
test eax eax +
jz loc_42D4AE  +
push offset aErrorDisconnec  +
push 0Fh  +
push 31Fh  +
push offset aWebclient_c  +
call sub_437C6A  +
add esp 10h +
cmp [esp+61Ch+var_608] 0 +
jnz loc_42D4C1  +
lea esi [esp+61Ch+var_594] +
call sub_432A5C  +
lea eax [esp+61Ch+var_5FC] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+24h]  +
inc [esp+620h+var_60C]  +
mov eax [esp+620h+var_60C] +
cmp eax [esp+620h+var_5F4] +
jl loc_42D0BD  +
xor edi edi +
lea esi [esp+620h+var_5A4] +
call sub_432A5C  +
cmp [esp+620h+var_5E8] edi +
jz loc_42D4FB  +
push [esp+620h+var_5E8]  +
call ds:off_444458  +
lea eax [esp+624h+var_5E4] +
push eax  +
mov eax dword_526180 +
call dword ptr [eax+10h]  +
call WSACleanup  +
mov eax dword_5260C4 +
cmp eax edi +
jz loc_42D525  +
push edi  +
push eax  +
call ds:off_444558  +
mov dword_5260C4 edi +
lea edx [esp+630h+var_5E8] +
lea esi [esp+630h+var_5C8] +
lea eax [esp+630h+var_5B4] +
call sub_432ADA  +
mov eax [esp+630h+var_5E4] +
cdq   +
mov ebx 3E8h +
mov ecx ebx +
idiv  ecx +
mov edi ds:printf +
push eax  +
push [esp+634h+var_5E8]  +
push dword_5260AC  +
push [esp+63Ch+var_604]  +
push offset aDConnectionsUB  +
call edi  +
add esp 14h +
cmp [esp+630h+var_604] 1 +
jle loc_42D5C5  +
lea edx [esp+630h+var_5E8] +
lea eax [esp+630h+lpMultiByteStr] +
call sub_432ADA  +
mov eax [esp+630h+var_5E4] +
cdq   +
mov ecx ebx +
idiv  ecx +
push eax  +
push [esp+634h+var_5E8]  +
push offset aFirstConnectio  +
call edi  +
add esp 0Ch +
lea edx [esp+630h+var_5E8] +
lea eax [esp+630h+var_5B4] +
call sub_432ADA  +
mov eax [esp+630h+var_604] +
dec eax  +
push eax  +
mov ecx edx +
call sub_42CA94  +
mov eax [esp+634h+var_5E4] +
cdq   +
idiv  ebx +
add esp 4 +
push eax  +
push [esp+634h+var_5E8]  +
push offset aOtherConnectio  +
call edi  +
add esp 0Ch +
xor eax eax +
jmp loc_42D030  +
push offset aErrorConnectin  +
push 0Fh  +
push 26Bh  +
jmp loc_42CF64  +
push offset aErrorPerformin  +
push 0Fh  +
push eax  +
push 274h  +
push offset aWebclient_c  +
call sub_437C8E  +
add esp 14h +
push [esp+5D8h+s]  +
mov [esp+5DCh+var_5C8] eax +
call sub_42F9B3  +
jmp loc_42CF7E  +
push offset aErrorQueryingR  +
push 0Fh  +
push eax  +
push 2C4h  +
jmp loc_42D5EA  +
push offset aFreecontextbuf  +
push 0Fh  +
push eax  +
push 2CCh  +
jmp loc_42D5EA  +
push offset aErrorQueryin_0  +
push 0Fh  +
push eax  +
push 2ECh  +
jmp loc_42D5EA  +
push offset aErrorAuthentic  +
push 0Fh  +
push eax  +
push 301h  +
jmp loc_42D5EA  +
push edi  +
push offset aHttpsgetfile0x  +
call esi  +
push offset aErrorFetchingF  +
push 0Fh  +
push edi  +
push 315h  +
push offset aWebclient_c  +
call sub_437C8E  +
add esp 1Ch +
jmp loc_42D5F7  +
***
push offset aSTlscOptions  +
sub esp 28h +
sub esp 34h +
sub esp 2Ch +
sub esp 48h +
sub esp 60h +
sub esp 1A0h +
sub esp 54h +
sub esp 30h +
sub esp 60h +
push ecx  +
sub esp 10h +
sub esp 34h +
sub esp 0D0h +
push ecx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_8] esi +
jbe loc_42FABF  +
call sub_42878D  +
mov ecx [ebp+arg_8] +
sub ecx esi +
cmp eax ecx +
cmovb ecx eax +
mov eax [ebp+arg_4] +
push 0  +
push ecx  +
add eax esi +
push eax  +
push [ebp+s]  +
call send  +
mov edi eax +
call ds:__iob_func  +
add eax 20h +
push eax  +
call ds:fflush  +
pop ecx  +
cmp edi 0FFFFFFFFh +
jz loc_42FAC5  +
add esi edi +
cmp esi [ebp+arg_8] +
jb loc_42FA7F  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
or eax 0FFFFFFFFh +
jmp loc_42FAC1  +
***
and esp 0FFFFFFF8h +
sub esp 224h +
mov eax dword_463000 +
xor eax esp +
mov [esp+224h+var_4] eax +
mov eax [ebp+arg_4] +
and [esp+224h+var_224] 0 +
and [esp+224h+var_21C] 0 +
push ebx  +
push esi  +
push edi  +
mov edi offset off_4633D0 +
push edi  +
push eax  +
push [ebp+arg_0]  +
xor ebx ebx +
inc ebx  +
mov [esp+23Ch+var_214] eax +
mov [esp+23Ch+var_220] ebx +
mov [esp+23Ch+var_218] ebx +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C54 eax +
cmp eax 0FFFFFFFFh +
jz loc_42FE43  +
mov esi ds:_wtoi +
inc [esp+230h+var_21C]  +
cmp eax 19h +
ja loc_42FE48  +
jmp ds:off_42FFCC[eax*4]  +
push lpLibFileName  +
call esi  +
pop ecx  +
cmp eax 0Ah +
jle loc_42FB79  +
push lpLibFileName  +
call esi  +
pop ecx  +
cmp eax ebx +
jge loc_42FB79  +
push lpLibFileName  +
call esi  +
pop ecx  +
push eax  +
push offset aWarningNumCred  +
call ds:printf  +
pop ecx  +
pop ecx  +
mov [esp+230h+var_218] ebx +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov [esp+230h+var_218] eax +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_4633C0 eax +
jmp loc_42FDC9  +
inc dword_5260C8  +
jmp loc_42FDC9  +
mov eax lpLibFileName +
and dword_5260F0 0 +
mov dword_5260CC eax +
jmp loc_42FDC9  +
mov eax lpLibFileName +
mov dword_5260CC eax +
mov dword_5260F0 ebx +
jmp loc_42FDC9  +
mov dword_5260F8 ebx +
jmp loc_42FDC9  +
mov dword_5260D0 ebx +
jmp loc_42FDC9  +
mov dword_5260D8 ebx +
jmp loc_42FDC9  +
mov dword_5260D4 ebx +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
sub eax 0 +
pop ecx  +
jz loc_42FC7E  +
dec eax  +
jz loc_42FC6F  +
dec eax  +
jz loc_42FC60  +
dec eax  +
jz loc_42FC51  +
dec eax  +
jz loc_42FC42  +
dec eax  +
jz loc_42FC33  +
dec eax  +
jnz loc_42FE2A  +
mov dword_5260F4 0C00h +
jmp loc_42FDC9  +
mov dword_5260F4 300h +
jmp loc_42FDC9  +
mov dword_5260F4 0C0h +
jmp loc_42FDC9  +
mov dword_5260F4 30h +
jmp loc_42FDC9  +
mov dword_5260F4 0Ch +
jmp loc_42FDC9  +
mov dword_5260F4 3 +
jmp loc_42FDC9  +
and dword_5260F4 0 +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_463564 eax +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_4637D8 eax +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_526078 eax +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_4633C4 eax +
mov ecx dword_4633C4 +
push 28h  +
pop eax  +
cmp ecx eax +
jle loc_42FDC9  +
push eax  +
push offset aWarningMaxThre  +
mov dword_4633C4 eax +
call ds:printf  +
pop ecx  +
pop ecx  +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov [esp+230h+var_224] eax +
jmp loc_42FDC9  +
mov ebx dword_5260DC +
cmp ebx 32h +
jnb loc_42FE48  +
call sub_43017F  +
mov dword_465D20[ebx*4] eax +
test eax eax +
jz loc_42FE48  +
inc ebx  +
mov dword_5260DC ebx +
xor ebx ebx +
inc ebx  +
jmp loc_42FDC9  +
cmp dword_5260DC 32h +
jnb loc_42FE48  +
push 0  +
push 0  +
push lpLibFileName  +
call ds:wcstol  +
mov ecx dword_5260DC +
add esp 0Ch +
mov dword_465D20[ecx*4] eax +
test eax eax +
jz loc_42FE48  +
inc dword_5260DC  +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_5260E8 eax +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_5260EC eax +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dwMilliseconds eax +
jmp loc_42FDC9  +
push lpLibFileName  +
call esi  +
pop ecx  +
mov dword_526114 eax +
jmp loc_42FDC9  +
mov dword_5260E0 ebx +
jmp loc_42FDC9  +
mov dword_5260E4 ebx +
push edi  +
push [esp+234h+var_214]  +
push [ebp+arg_0]  +
call sub_43B5E2  +
add esp 0Ch +
mov dword_465C54 eax +
cmp eax 0FFFFFFFFh +
jnz loc_42FB2A  +
cmp [esp+230h+var_21C] 0 +
jz loc_42FE43  +
push [ebp+arg_0]  +
mov ebx [esp+234h+var_214] +
call sub_42915C  +
pop ecx  +
test eax eax +
jnz loc_42FE43  +
push dword_5260E0  +
call sub_42846F  +
pop ecx  +
test eax eax +
jnz loc_42FE61  +
push offset aErrorInitial_0  +
push 0Fh  +
push 1B3h  +
push offset aWebserver_c  +
call sub_437C6A  +
add esp 10h +
jmp loc_42FE48  +
push dword_465C54  +
mov eax edi +
call sub_42905C  +
pop ecx  +
mov [esp+230h+var_220] eax +
jmp loc_42FE48  +
and [esp+230h+var_220] 0 +
call sub_430034  +
mov ecx [esp+230h+var_4] +
mov eax [esp+230h+var_220] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_43F480  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [esp+230h+WSAData] +
push eax  +
push 101h  +
call WSAStartup  +
cmp eax 0FFFFFFFFh +
jnz loc_42FE84  +
push offset aErrorReturnedB  +
push 0Fh  +
push 1BDh  +
jmp loc_42FE1B  +
mov ebx [esp+230h+var_218] +
xor esi esi +
test ebx ebx +
jz loc_42FEAC  +
lea edi [esp+230h+var_80] +
push edi  +
call sub_431EA4  +
pop ecx  +
test eax eax +
jnz loc_42FF5E  +
inc esi  +
add edi 0Ch +
cmp esi ebx +
jb loc_42FE95  +
mov eax [esp+230h+var_224] +
imul eax eax +
push eax  +
lea eax [esp+234h+var_80] +
push ebx  +
push eax  +
call sub_4303EE  +
mov [esp+23Ch+var_220] eax +
mov eax dword_52610C +
add esp 0Ch +
test eax eax +
jnz loc_42FEE0  +
call ds:GetTickCount  +
mov dword_52610C eax +
cmp dword_526108 0 +
jz loc_42FF6F  +
test eax eax +
jz loc_42FF6F  +
mov eax dword_526110 +
test eax eax +
jz loc_42FF6F  +
mov eax dword_52610C +
cmp eax dword_526108 +
jz loc_42FF6F  +
mov eax dword_526110 +
imul eax eax +
mov [esp+230h+var_224] eax +
mov eax dword_52610C +
sub eax dword_526108 +
fild  [esp+230h+var_224] +
mov [esp+230h+var_224] eax +
fild  [esp+230h+var_224] +
jns loc_42FF35  +
fadd  ds:flt_45E428 +
fdivp st(1) st +
push ecx  +
push ecx  +
fstp  [esp+238h+var_238] +
push dword_526110  +
mov eax dword_52610C +
sub eax dword_526108 +
push eax  +
push offset aWebserverDMsCo  +
call ds:printf  +
add esp 14h +
jmp loc_42FF8F  +
push offset aErrorCreatingC  +
push 0Fh  +
push 1C7h  +
jmp loc_42FE1B  +
push dword_52610C  +
push dword_526108  +
push dword_526110  +
push offset aBadStatDDDConn  +
call ds:printf  +
add esp 10h +
test ebx ebx +
jz loc_42FFAB  +
lea esi [esp+230h+var_80] +
mov edi ebx +
mov eax dword_526180 +
push esi  +
call dword ptr [eax+10h]  +
add esi 0Ch +
dec edi  +
jnz loc_42FF9C  +
call WSACleanup  +
mov eax dword_5260FC +
test eax eax +
jz loc_42FE48  +
push 0  +
push eax  +
call ds:off_444558  +
jmp loc_42FE48  +
***
push offset aSTlssOptions  +
push edi  +
sub esp 160h +
cmp [ebp+lpBuffer] 0 +
mov eax 801Ch +
and esp 0FFFFFFF8h +
sub esp 58h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi eax +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
cmp [ebp+arg_4] 0 +
jle loc_431835  +
cmp byte ptr [ebx] 0 +
jz loc_431802  +
mov al [ebx] +
cmp al 20h +
jz loc_4317F8  +
cmp al 9 +
jz loc_4317F8  +
movsx eax al +
push eax  +
call ds:toupper  +
mov [ebx] al +
inc ebx  +
cmp byte ptr [ebx] 0 +
pop ecx  +
jnz loc_4317DB  +
mov al [ebx] +
test al al +
jz loc_431802  +
cmp al 20h +
jnz loc_431819  +
mov byte ptr [ebx] 0 +
inc ebx  +
mov al [ebx] +
cmp al 20h +
jz loc_431805  +
cmp al 9 +
jz loc_431805  +
xor ecx ecx +
jmp loc_43185C  +
cmp al 0Dh +
jz loc_43181F  +
inc ebx  +
mov al [ebx] +
cmp al 0Ah +
jnz loc_431814  +
inc ebx  +
mov al [ebx] +
cmp al 0Dh +
jz loc_43182A  +
cmp al 0Ah +
jnz loc_43182B  +
inc ebx  +
mov eax ebx +
sub eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jl loc_4317D6  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
cmp al 0Dh +
jz loc_431862  +
cmp al 20h +
jz loc_431862  +
test al al +
jz loc_431862  +
cbw   +
mov [esi+ecx*2] ax +
cmp ax 2Fh +
jnz loc_43185A  +
push 5Ch  +
pop eax  +
mov [esi+ecx*2] ax +
inc ebx  +
inc ecx  +
mov al [ebx] +
cmp al 0Ah +
jnz loc_43183B  +
xor eax eax +
mov [esi+ecx*2] ax +
mov ecx offset asc_452844 +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_431895  +
test dx dx +
jz loc_431891  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_431895  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_43186F  +
xor eax eax +
jmp loc_43189A  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_4318B6  +
mov eax offset aDefault_html +
mov edx esi +
sub edx eax +
movzx ecx word ptr [eax] +
mov [edx+eax] cx +
add eax 2 +
test cx cx +
jnz loc_4318A7  +
mov esi [ebp+arg_0] +
push edi  +
push 5  +
pop ecx  +
mov edi offset aPost +
xor eax eax +
cmps   +
pop edi  +
jnz loc_4318FB  +
push offset aContentLength  +
push ebx  +
call ds:strstr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4318FB  +
add eax 10h +
push eax  +
call ds:atoi  +
mov esi eax +
push esi  +
push offset aContentLengthI  +
call ds:printf  +
mov eax [ebp+arg_8] +
add esp 0Ch +
mov [eax] esi +
xor eax eax +
inc eax  +
jmp loc_431837  +
***
push ebp  +
mov ebp esp +
sub esp 47Ch +
mov eax dword_463000 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
mov [ebp-454h] esi +
lea edi [ebp-450h] +
stos   +
mov [ebp-468h] esi +
lea edi [ebp-464h] +
stos   +
lea eax [ebp-454h] +
push eax  +
mov eax dword_526180 +
push 56h  +
push ecx  +
mov [ebp-460h] ecx +
mov [ebp-458h] esi +
mov [ebp-45Ch] esi +
call dword ptr [eax+8]  +
mov ebx ds:printf +
cmp eax esi +
jz loc_431974  +
push eax  +
push offset aError0xLxRe_13  +
call ebx  +
pop ecx  +
pop ecx  +
jmp loc_431AEC  +
cmp dword ptr [ebp+0Ch] 1 +
jl loc_431991  +
push dword ptr [ebp-454h]  +
push offset aLuAlgorithmsSu  +
call ebx  +
push offset aAglidClassOid  +
call ebx  +
add esp 0Ch +
mov [ebp-44Ch] esi +
cmp [ebp-454h] esi +
jbe loc_431AC5  +
mov esi 104h +
mov ecx [ebp-450h] +
mov eax [ebp-44Ch] +
push 0  +
lea eax [ecx+eax*4] +
push eax  +
push 3  +
call ds:off_444538  +
mov ecx [ebp-450h] +
mov edi eax +
mov eax [ebp-44Ch] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 661Eh +
jnz loc_4319E5  +
mov dword ptr [ebp-45Ch] 1 +
cmp dword ptr [ebp+0Ch] 1 +
jl loc_431AAB  +
mov eax [eax] +
mov ecx eax +
and ecx 0E000h +
push ecx  +
push eax  +
push dword ptr [ebp-44Ch]  +
push offset a02u0x04x0x04x  +
call ebx  +
add esp 10h +
test edi edi +
jz loc_431AA3  +
push esi  +
push dword ptr [edi+8]  +
lea eax [ebp-418h] +
push eax  +
call ds:wcsncpy  +
mov eax [edi+8] +
add esp 0Ch +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_431A2D  +
sub eax edx +
sar eax 1 +
inc eax  +
jnz loc_431A4F  +
push offset aCannotConvertO  +
push 0Fh  +
push 0Dh  +
push 761h  +
jmp loc_431A78  +
push esi  +
lea eax [ebp-210h] +
push eax  +
push 0FFFFFFFFh  +
push dword ptr [edi+4]  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_431A87  +
push offset aCannotConver_0  +
push 0Fh  +
push 0Dh  +
push 764h  +
push offset aWebserver_c  +
call sub_437C8E  +
add esp 14h +
jmp loc_431AA3  +
lea eax [ebp-418h] +
push eax  +
lea eax [ebp-210h] +
push eax  +
push offset aSS_0  +
call ds:wprintf  +
add esp 0Ch +
push offset asc_445094  +
call ebx  +
pop ecx  +
inc dword ptr [ebp-44Ch]  +
mov eax [ebp-44Ch] +
cmp eax [ebp-454h] +
jb loc_4319A8  +
xor esi esi +
cmp [ebp-450h] esi +
jz loc_431E85  +
cmp dword ptr [ebp-454h] 18h +
ja loc_431E85  +
push dword ptr [ebp-450h]  +
mov eax dword_526180 +
call dword ptr [eax+40h]  +
lea eax [ebp-468h] +
push eax  +
mov eax dword_526180 +
push 57h  +
push dword ptr [ebp-460h]  +
call dword ptr [eax+8]  +
mov esi 100h +
test eax eax +
jz loc_431B18  +
push eax  +
push offset aError0xLxRe_14  +
call ebx  +
pop ecx  +
pop ecx  +
jmp loc_431B63  +
cmp dword ptr [ebp+0Ch] 1 +
jl loc_431B34  +
push dword ptr [ebp-464h]  +
push dword ptr [ebp-468h]  +
push offset aCipherStreng_0  +
call ebx  +
add esp 0Ch +
mov eax [ebp-464h] +
cmp [ebp-468h] eax +
ja loc_431E77  +
cmp dword ptr [ebp-45Ch] 0 +
jz loc_431B63  +
cmp eax esi +
jnz loc_431E77  +
cmp [ebp-468h] esi +
jnz loc_431E77  +
lea eax [ebp-458h] +
push eax  +
mov eax dword_526180 +
push 58h  +
push dword ptr [ebp-460h]  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_431B8D  +
push eax  +
push offset aError0xLxRe_15  +
call ebx  +
pop ecx  +
pop ecx  +
jmp loc_431D19  +
cmp dword ptr [ebp+0Ch] 1 +
jl loc_431CD5  +
push dword ptr [ebp-458h]  +
push offset aSupportedProto  +
call ebx  +
and dword ptr [ebp-44Ch] 0 +
pop ecx  +
pop ecx  +
mov edi 80h +
mov esi 10000h +
mov ecx [ebp-44Ch] +
xor edx edx +
inc edx  +
shl edx cl +
mov eax edx +
and eax [ebp-458h] +
cmp eax edi +
ja loc_431C47  +
jz loc_431C40  +
cmp eax 8 +
ja loc_431C16  +
jz loc_431C0C  +
sub eax 0 +
jz loc_431CC2  +
dec eax  +
jz loc_431C02  +
dec eax  +
jz loc_431BF8  +
dec eax  +
dec eax  +
jnz loc_431CA1  +
push offset aSecureSocketsL  +
jmp loc_431CBF  +
push offset aPrivateCommuni  +
jmp loc_431CBF  +
push offset aPrivateCommu_0  +
jmp loc_431CBF  +
push offset aSecureSocket_0  +
jmp loc_431CBF  +
cmp eax 10h +
jz loc_431C39  +
cmp eax 20h +
jz loc_431C2F  +
cmp eax 40h +
jnz loc_431CA1  +
push offset aTransportLayer  +
jmp loc_431CBF  +
push offset aSecureSocket_1  +
jmp loc_431CBF  +
push offset aSecureSocket_2  +
jmp loc_431CBF  +
push offset aTransportLay_0  +
jmp loc_431CBF  +
cmp eax esi +
ja loc_431C8C  +
jz loc_431C85  +
cmp eax 100h +
jz loc_431C7E  +
cmp eax 200h +
jz loc_431C77  +
cmp eax 400h +
jz loc_431C70  +
cmp eax 800h +
jnz loc_431CA1  +
push offset aTransportLay_1  +
jmp loc_431CBF  +
push offset aTransportLay_2  +
jmp loc_431CBF  +
push offset aTransportLay_3  +
jmp loc_431CBF  +
push offset aTransportLay_4  +
jmp loc_431CBF  +
push offset aDatagramTransp  +
jmp loc_431CBF  +
cmp eax 20000h +
jz loc_431CBA  +
cmp eax 40000000h +
jz loc_431CB3  +
cmp eax 80000000h +
jz loc_431CAC  +
push edx  +
push offset a0xX  +
call ebx  +
pop ecx  +
jmp loc_431CC1  +
push offset aSp_prot_uni_cl  +
jmp loc_431CBF  +
push offset aSp_prot_uni_se  +
jmp loc_431CBF  +
push offset aDatagramTran_0  +
call ebx  +
pop ecx  +
inc dword ptr [ebp-44Ch]  +
cmp dword ptr [ebp-44Ch] 20h +
jl loc_431BB7  +
test byte ptr [ebp+8] 2 +
mov edi 80000h +
jz loc_431CE5  +
mov edi 800A0AAAh +
test byte ptr [ebp+8] 1 +
jz loc_431CF1  +
or edi 40010555h +
cmp dword ptr [ebp+0Ch] 1 +
jl loc_431D01  +
push edi  +
push offset aDwprotocolmask  +
call ebx  +
pop ecx  +
pop ecx  +
mov eax [ebp-458h] +
test edi eax +
jz loc_431E61  +
not edi  +
test edi eax +
jnz loc_431E61  +
test byte ptr [ebp+8] 1 +
jz loc_431E43  +
cmp dword_5260E0 0 +
mov eax offset word_457C10 +
jnz loc_431D36  +
mov eax offset aSecur32_dll +
push offset aSetcredentials  +
push eax  +
call ds:GetModuleHandleW  +
push eax  +
call ds:GetProcAddress  +
mov [ebp-45Ch] eax +
test eax eax +
jz loc_431E52  +
push 2Ch  +
lea eax [ebp-444h] +
push 0  +
push eax  +
call memset  +
and dword ptr [ebp-448h] 0 +
mov dword ptr [ebp-478h] 8C11A4B5h +
mov eax 7E51h +
mov [ebp-474h] ax +
mov dword ptr [ebp-472h] 0BE4154h +
mov dword ptr [ebp-46Eh] 0F1167FB1h +
mov word ptr [ebp-46Ah] 5ABBh +
lea esi [ebp-478h] +
lea edi [ebp-444h] +
movs   +
movs   +
movs   +
movs   +
xor eax eax +
xor ecx ecx +
inc eax  +
add esp 0Ch +
mov dword ptr [ebp-434h] 20000000h +
mov dword ptr [ebp-430h] 2710h +
mov [ebp-42Ch] eax +
mov [ebp-428h] ecx +
mov [ebp-424h] ecx +
mov [ebp-420h] ecx +
mov [ebp-41Ch] ecx +
cmp [ebp+0Ch] eax +
jl loc_431E00  +
lea eax [ebp-448h] +
push eax  +
push offset aTryCallSetcred  +
call ebx  +
pop ecx  +
pop ecx  +
push 30h  +
lea eax [ebp-448h] +
push eax  +
push 60h  +
push dword ptr [ebp-460h]  +
call dword ptr [ebp-45Ch]  +
mov esi eax +
cmp esi 80090302h +
jz loc_431E2B  +
push esi  +
push offset aError0xLxRe_16  +
call ebx  +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_431E43  +
push esi  +
push offset aBsetcredenti_1  +
mov dword_526104 1 +
call ebx  +
pop ecx  +
pop ecx  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F480  +
leave   +
retn   +
***
cmp dword ptr [ebp+0Ch] 1 +
jl loc_431E43  +
push offset aNoSetcredentia  +
call ebx  +
jmp loc_431E42  +
***
push offset aBadSecpkgcred_  +
push 0Fh  +
push 7CCh  +
push offset aWebserver_c  +
call sub_437C0A  +
push offset aBadSecpkgcre_0  +
push 0Fh  +
push 78Ch  +
jmp loc_431E6D  +
***
push dword ptr [ebp-454h]  +
push offset aBadSecpkgcre_1  +
push 0Fh  +
push 772h  +
push offset aWebserver_c  +
call sub_437C0A  +
sub esp 50h +
sub esp 34h +
push ebx  +
sub esp 214h +
push ecx  +
sub esp 208h +
sub esp 108h +
push ecx  +
push 0  +
push ecx  +
mov eax dword_52605C +
push ebx  +
push ecx  +
sub esp 214h +
push ebx  +
push ecx  +
push ecx  +
and esp 0FFFFFFF8h +
sub esp 18h +
and dword ptr [eax] 0 +
mov ecx [eax] +
mov ecx [eax] +
and esp 0FFFFFFF8h +
push edi  +
push ecx  +
push ecx  +
push ecx  +
sub esp 10h +
cmp dword ptr [esi+214h] 3 +
mov eax [edi] +
push ecx  +
cmp dword ptr [esi+214h] 1 +
push ecx  +
sub esp 294h +
sub esp 20h +
sub esp 18h +
push ecx  +
test eax eax +
mov ecx [eax+4] +
sub esp 18h +
cmp [ebp+arg_0] 0 +
imul eax eax +
imul esi esi +
mov eax [ebp+arg_0] +
push ecx  +
sub esp 1Ch +
sub esp 0Ch +
sub esp 2Ch +
push ecx  +
sub esp 3Ch +
sub esp 18h +
push ecx  +
sub esp 48h +
sub esp 4Ch +
cmp dword ptr [eax] 1 +
and esp 0FFFFFFF8h +
sub esp 14h +
sub esp 14h +
sub esp 280h +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
sub esp 18h +
sub esp 14h +
sub esp 94h +
sub esp 40h +
sub esp 84h +
sub esp 50h +
push [ebp+arg_14]  +
sub esp 24h +
mov eax [ebp+arg_0] +
sub esp 34h +
push esi  +
push edi  +
call ds:GetLastError  +
lea ecx [ebp+arg_10] +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_437A56  +
mov esi ds:__iob_func +
add esp 18h +
push offset aProgramIsTermi  +
mov edi eax +
call esi  +
add eax 40h +
push eax  +
call ds:fprintf  +
push edi  +
push offset aErrorcode0x08l  +
call ds:printf  +
call esi  +
add eax 20h +
push eax  +
call ds:fflush  +
add esp 14h +
push edi  +
call ds:exit  +
***
call ds:GetLastError  +
lea eax [ebp+arg_14] +
xor eax eax +
mov eax 5FC08h +
mov eax [esi] +
push ecx  +
push ecx  +
sub esp 0Ch +
mov eax hModule +
push ecx  +
mov eax 180Ch +
push ecx  +
test edi edi +
push esi  +
sub esp 14h +
sub esp 14h +
sub esp 1Ch +
sub esp 14h +
sub esp 14h +
sub esp 14h +
sub esp 1Ch +
sub esp 14h +
sub esp 24h +
sub esp 24h +
sub esp 1Ch +
sub esp 1Ch +
sub esp 1Ch +
sub esp 24h +
sub esp 14h +
sub esp 20h +
sub esp 1Ch +
sub esp 14h +
sub esp 1Ch +
sub esp 1Ch +
sub esp 1Ch +
sub esp 1Ch +
sub esp 1Ch +
sub esp 24h +
sub esp 24h +
push ecx  +
push ecx  +
sub esp 0Ch +
and esp 0FFFFFFF8h +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
mov eax dword_526140 +
sub esp 1D8h +
sub esp 714h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_714] eax +
mov ax [ebp+arg_0] +
shr ax 8 +
push esi  +
mov [ebp+var_70E] ax +
cmp al 3 +
jnb loc_43A4A3  +
movzx ecx byte ptr [ebp+arg_0] +
push ecx  +
movzx eax al +
push eax  +
push offset aVD_D_0  +
lea eax [ebp+var_388] +
push 1C2h  +
push eax  +
call ds:_snwprintf  +
add esp 14h +
jmp loc_43B464  +
push ebx  +
push edi  +
movzx edi byte ptr [ebp+arg_0] +
movzx ebx al +
mov eax [ebp+var_714] +
push dword ptr [eax+4]  +
mov esi 1C2h +
push edi  +
push ebx  +
push offset aVD_D_U  +
lea eax [ebp+var_388] +
push esi  +
push eax  +
call ds:_snwprintf  +
mov eax [ebp+arg_4] +
add esp 18h +
dec eax  +
jz loc_43A64E  +
dec eax  +
jz loc_43A61C  +
dec eax  +
jz loc_43A5EA  +
dec eax  +
jz loc_43A5B5  +
dec eax  +
jz loc_43A580  +
dec eax  +
jz loc_43A54B  +
push [ebp+arg_4]  +
lea eax [ebp+var_70C] +
push offset aK?0xLx  +
push esi  +
push eax  +
call ds:_snwprintf  +
lea eax [ebp+var_388] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A51D  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A53C  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A53E  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_70C] +
push eax  +
jmp loc_43A67E  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A554  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A573  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A575  +
xor ecx ecx +
push ecx  +
push offset aKa1  +
jmp loc_43A67E  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A589  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A5A8  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A5AA  +
xor ecx ecx +
push ecx  +
push offset aKb2  +
jmp loc_43A67E  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A5BE  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A5DD  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A5DF  +
xor ecx ecx +
push ecx  +
push offset aKb1  +
jmp loc_43A67E  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A5F3  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A612  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A614  +
xor ecx ecx +
push ecx  +
push offset aKc3  +
jmp loc_43A67E  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A625  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A644  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A646  +
xor ecx ecx +
push ecx  +
push offset aKc2  +
jmp loc_43A67E  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A657  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A676  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A678  +
xor ecx ecx +
push ecx  +
push offset aKc1  +
lea eax [ebp+var_388] +
push eax  +
call ds:wcsncat  +
mov eax [ebp+var_714] +
mov eax [eax+8] +
mov ecx eax +
add esp 0Ch +
sub ecx 0 +
jz loc_43A722  +
dec ecx  +
jz loc_43A6F0  +
push eax  +
push offset a?0xLx  +
lea eax [ebp+var_70C] +
push esi  +
push eax  +
call ds:_snwprintf  +
lea eax [ebp+var_388] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A6C5  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A6E4  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A6E6  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_70C] +
push eax  +
jmp loc_43A752  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A6F9  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A718  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A71A  +
xor ecx ecx +
push ecx  +
push offset aDebug  +
jmp loc_43A752  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A72B  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A74A  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43A74C  +
xor ecx ecx +
push ecx  +
push offset aRelease  +
lea eax [ebp+var_388] +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
push edi  +
push ebx  +
push offset aVerD_D_  +
lea eax [ebp+var_70C] +
push esi  +
push eax  +
call ds:_snwprintf  +
lea eax [ebp+var_388] +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43A783  +
sub eax ecx +
sar eax 1 +
lea ecx [eax+1] +
mov ebx 1C1h +
cmp ecx esi +
jnb loc_43A7A4  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A7A6  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_70C] +
push eax  +
lea eax [ebp+var_388] +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
cmp byte ptr [ebp+var_70E] 3 +
ja loc_43A7CD  +
cmp byte ptr [ebp+arg_0] 6 +
jb loc_43A82C  +
mov edi [ebp+var_714] +
push dword ptr [edi]  +
lea eax [ebp+var_70C] +
push offset aU_1  +
push esi  +
push eax  +
call ds:_snwprintf  +
lea eax [ebp+var_388] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A7F4  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A810  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A812  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_70C] +
push eax  +
lea eax [ebp+var_388] +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
jmp loc_43A832  +
mov edi [ebp+var_714] +
mov eax [edi+10h] +
cmp eax 7 +
ja loc_43A9CF  +
jmp ds:off_43B4C3[eax*4]  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A84E  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A86A  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A86C  +
xor ecx ecx +
push ecx  +
push offset aOsWindows  +
jmp loc_43AA15  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A880  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A89C  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A89E  +
xor ecx ecx +
push ecx  +
push offset aOsSolaris  +
jmp loc_43AA15  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A8B2  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A8CE  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A8D0  +
xor ecx ecx +
push ecx  +
push offset aOsFreebsd  +
jmp loc_43AA15  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A8E4  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A900  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A902  +
xor ecx ecx +
push ecx  +
push offset aOsLinux  +
jmp loc_43AA15  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A916  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A932  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A934  +
xor ecx ecx +
push ecx  +
push offset aOsAix  +
jmp loc_43AA15  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A948  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A964  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A966  +
xor ecx ecx +
push ecx  +
push offset aOsMacos  +
jmp loc_43AA15  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A97A  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A996  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A998  +
xor ecx ecx +
push ecx  +
push offset aOsIos  +
jmp loc_43AA15  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A9A9  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43A9C5  +
mov ecx ebx +
sub ecx eax +
jmp loc_43A9C7  +
xor ecx ecx +
push ecx  +
push offset aOsAndroid  +
jmp loc_43AA15  +
push eax  +
push offset aOs?0xLx  +
lea eax [ebp+var_70C] +
push esi  +
push eax  +
call ds:_snwprintf  +
lea eax [ebp+var_388] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43A9EF  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AA0B  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AA0D  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_70C] +
push eax  +
lea eax [ebp+var_388] +
push eax  +
call ds:wcsncat  +
mov eax [edi+0Ch] +
add esp 0Ch +
cmp eax 0Bh +
ja loc_43AC99  +
jmp ds:off_43B4E3[eax*4]  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AA41  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AA5D  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AA5F  +
xor ecx ecx +
mov edi ds:wcsncat +
push ecx  +
lea eax [ebp+var_388] +
push offset aCpuIa32  +
push eax  +
call edi  +
jmp loc_43ACF2  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AA82  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AA9E  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AAA0  +
xor ecx ecx +
push ecx  +
push offset aCpuIa64  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AAB4  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AAD0  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AAD2  +
xor ecx ecx +
push ecx  +
push offset aCpuAmd64  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AAE6  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AB02  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AB04  +
xor ecx ecx +
push ecx  +
push offset aCpuArm  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AB18  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AB34  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AB36  +
xor ecx ecx +
push ecx  +
push offset aCpuArm64  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AB4A  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AB66  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AB68  +
xor ecx ecx +
push ecx  +
push offset aCpuSparc32  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AB7C  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AB98  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AB9A  +
xor ecx ecx +
push ecx  +
push offset aCpuSparc64  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43ABAE  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43ABCA  +
mov ecx ebx +
sub ecx eax +
jmp loc_43ABCC  +
xor ecx ecx +
push ecx  +
push offset aCpuPowerpc  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43ABE0  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43ABFC  +
mov ecx ebx +
sub ecx eax +
jmp loc_43ABFE  +
xor ecx ecx +
push ecx  +
push offset aCpuPowerpc64  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AC12  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AC2E  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AC30  +
xor ecx ecx +
push ecx  +
push offset aCpuMips32  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AC44  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AC60  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AC62  +
xor ecx ecx +
push ecx  +
push offset aCpuE2k32  +
jmp loc_43ACDF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AC73  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AC8F  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AC91  +
xor ecx ecx +
push ecx  +
push offset aCpuE2k64  +
jmp loc_43ACDF  +
push eax  +
push offset aCpu?0xLx  +
lea eax [ebp+var_70C] +
push esi  +
push eax  +
call ds:_snwprintf  +
lea eax [ebp+var_388] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43ACB9  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43ACD5  +
mov ecx ebx +
sub ecx eax +
jmp loc_43ACD7  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_70C] +
push eax  +
lea eax [ebp+var_388] +
push eax  +
call ds:wcsncat  +
mov edi ds:wcsncat +
add esp 0Ch +
test [ebp+arg_C] 8000000h +
lea eax [ebp+var_388] +
lea edx [eax+2] +
jz loc_43B432  +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AD0B  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AD27  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AD29  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset off_45DD50  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 10000000h +
jz loc_43AEA5  +
mov ebx [ebp+arg_C] +
and ebx 10000h +
mov edi 20000h +
jz loc_43AD9F  +
test [ebp+arg_C] edi +
jz loc_43AD9F  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AD66  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AD85  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43AD87  +
xor ecx ecx +
push ecx  +
push offset aSse2_  +
lea eax [ebp+var_388] +
push eax  +
call ds:wcsncat  +
jmp loc_43B45F  +
test ebx ebx +
jnz loc_43ADE3  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43ADAC  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43ADCB  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43ADCD  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aSsse3  +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
test [ebp+arg_C] edi +
jnz loc_43AE70  +
test ebx ebx +
jnz loc_43AE30  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43ADF9  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AE18  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43AE1A  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset asc_452BE0  +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AE39  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AE58  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43AE5A  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aAvx  +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AE79  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AE98  +
mov ecx 1C1h +
sub ecx eax +
jmp loc_43AE9A  +
xor ecx ecx +
push ecx  +
push offset a__0  +
jmp loc_43AD8D  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AEAE  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AECA  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AECC  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aDisabled  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 1 +
jnz loc_43AF1D  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AEED  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AF09  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AF0B  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aEncryptecb  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 10h +
jnz loc_43AF5C  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AF2C  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AF48  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AF4A  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aDecryptecb  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 2 +
jnz loc_43AF9B  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AF6B  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AF87  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AF89  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aEncryptcbc  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 20h +
jnz loc_43AFDA  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AFAA  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43AFC6  +
mov ecx ebx +
sub ecx eax +
jmp loc_43AFC8  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aDecryptcbc  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 4 +
jnz loc_43B019  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43AFE9  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B005  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B007  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aGammacnt  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 8 +
jnz loc_43B058  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B028  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B044  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B046  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aEncryptcfb  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 40h +
jnz loc_43B097  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B067  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B083  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B085  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aDecryptcfb  +
push eax  +
call edi  +
add esp 0Ch +
test byte ptr [ebp+arg_C] 80h +
jnz loc_43B0D6  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B0A6  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B0C2  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B0C4  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aDecryptmaskecb  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 4000h +
jnz loc_43B118  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B0E8  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B104  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B106  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aStribog_proces  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 8000h +
jnz loc_43B15A  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B12A  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B146  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B148  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aStribog_done  +
push eax  +
call edi  +
add esp 0Ch +
cmp byte ptr [ebp+var_70E] 5 +
jb loc_43B22D  +
test [ebp+arg_C] 80000h +
jnz loc_43B1A9  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B179  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B195  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B197  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aGr3412gammaofb  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 100000h +
jnz loc_43B1EB  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B1BB  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B1D7  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B1D9  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aGr3412gammactr  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 200000h +
jnz loc_43B22D  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B1FD  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B219  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B21B  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aGr3413imit  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 800h +
jnz loc_43B26F  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B23F  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B25B  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B25D  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aStephashuniver  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 100h +
jnz loc_43B2B1  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B281  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B29D  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B29F  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aGr3411hashsing  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 200h +
jnz loc_43B2F3  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B2C3  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B2DF  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B2E1  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aGr3411hash  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 400h +
jnz loc_43B335  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B305  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B321  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B323  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aGr3411gethashv  +
push eax  +
call edi  +
add esp 0Ch +
test [ebp+arg_C] 1000h +
jnz loc_43B377  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B347  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B363  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B365  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aG28147imit  +
push eax  +
call edi  +
add esp 0Ch +
mov edi [ebp+arg_C] +
and edi 2000h +
jnz loc_43B3BF  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B38B  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B3A7  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B3A9  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aMultmodp_256ex  +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
test edi edi +
jnz loc_43B400  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B3CC  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B3E8  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B3EA  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset aMultmodp_256_0  +
push eax  +
call ds:wcsncat  +
add esp 0Ch +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B409  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B425  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B427  +
xor ecx ecx +
push ecx  +
push offset a__1  +
jmp loc_43AD8D  +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B432  +
sub eax edx +
sar eax 1 +
lea ecx [eax+1] +
cmp ecx esi +
jnb loc_43B44E  +
mov ecx ebx +
sub ecx eax +
jmp loc_43B450  +
xor ecx ecx +
push ecx  +
lea eax [ebp+var_388] +
push offset off_45E048  +
push eax  +
call edi  +
add esp 0Ch +
pop edi  +
pop ebx  +
lea eax [ebp+var_388] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B46D  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
call ds:malloc  +
pop ecx  +
test eax eax +
jnz loc_43B498  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_43B4B3  +
lea ecx [ebp+var_388] +
mov esi eax +
mov edx ecx +
sub esi edx +
movzx edx word ptr [ecx] +
mov [esi+ecx] dx +
add ecx 2 +
test dx dx +
jnz loc_43B4A4  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_43F480  +
leave   +
retn   +
***
jmp loc_43B523  +
sub esp 10h +
sub esp 10h +
cmp [ebp+arg_0] 1 +
push ebx  +
mov ebx [ebp+arg_4] +
jge loc_43B5FA  +
or eax 0FFFFFFFFh +
jmp loc_43BE19  +
push esi  +
mov esi dword_4633A4 +
xor edx edx +
mov lpLibFileName edx +
cmp esi edx +
jz loc_43B66A  +
cmp dword_526148 edx +
jz loc_43B673  +
mov edx dword_526058 +
mov eax dword_525F04 +
push edi  +
test edx edx +
jz loc_43B62F  +
cmp word ptr [edx] 0 +
jnz loc_43B7CE  +
cmp eax esi +
jle loc_43B63A  +
mov eax esi +
mov dword_525F04 eax +
cmp dword_525FEC esi +
jle loc_43B648  +
mov dword_525FEC esi +
cmp dword_526054 1 +
jnz loc_43B6E0  +
cmp dword_525FEC eax +
jz loc_43B6A5  +
cmp eax esi +
jz loc_43B6D4  +
mov edi ebx +
call sub_43B52F  +
jmp loc_43B6D4  +
xor esi esi +
inc esi  +
mov dword_4633A4 esi +
xor ecx ecx +
cmp dword_52614C ecx +
mov eax esi +
setz cl  +
mov dword_525F04 eax +
mov dword_525FEC eax +
mov dword_526058 edx +
mov dword_526148 1 +
mov dword_526054 ecx +
jmp loc_43B620  +
cmp eax esi +
jz loc_43B6D4  +
mov dword_525FEC esi +
jmp loc_43B6D4  +
mov eax [ebx+esi*4] +
movzx ecx word ptr [eax] +
cmp ecx 2Dh +
jz loc_43B6C6  +
mov edx 2013h +
cmp cx dx +
jnz loc_43B6CD  +
cmp word ptr [eax+2] 0 +
jnz loc_43B6D9  +
inc esi  +
mov dword_4633A4 esi +
cmp esi [ebp+arg_0] +
jl loc_43B6B1  +
mov eax esi +
mov dword_525F04 eax +
cmp esi [ebp+arg_0] +
jz loc_43B753  +
mov ecx [ebx+esi*4] +
mov edx offset asc_45E084 +
mov di [ecx] +
cmp di [edx] +
jnz loc_43B713  +
test di di +
jz loc_43B70F  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_43B713  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_43B6ED  +
xor ecx ecx +
jmp loc_43B718  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_43B74E  +
inc esi  +
mov dword_4633A4 esi +
cmp dword_525FEC eax +
jz loc_43B738  +
cmp eax esi +
jz loc_43B73E  +
mov edi ebx +
call sub_43B52F  +
jmp loc_43B73E  +
mov dword_525FEC esi +
mov esi [ebp+arg_0] +
mov eax esi +
mov dword_525F04 eax +
mov dword_4633A4 esi +
cmp esi [ebp+arg_0] +
jnz loc_43B765  +
mov ecx dword_525FEC +
cmp ecx eax +
jz loc_43B78C  +
mov dword_4633A4 ecx +
jmp loc_43B78C  +
mov eax [ebx+esi*4] +
movzx ecx word ptr [eax] +
cmp ecx 2Dh +
jz loc_43B77A  +
mov edx 2013h +
cmp cx dx +
jnz loc_43B783  +
movzx ecx word ptr [eax+2] +
test cx cx +
jnz loc_43B7A8  +
cmp dword_526054 0 +
jnz loc_43B794  +
or eax 0FFFFFFFFh +
jmp loc_43BE17  +
mov lpLibFileName eax +
inc esi  +
xor eax eax +
mov dword_4633A4 esi +
inc eax  +
jmp loc_43BE17  +
cmp [ebp+arg_8] 0 +
jz loc_43B7C2  +
cmp ecx 2Dh +
jz loc_43B7BD  +
mov edx 2013h +
cmp cx dx +
jnz loc_43B7C2  +
xor ecx ecx +
inc ecx  +
jmp loc_43B7C4  +
xor ecx ecx +
lea edx [eax+ecx*2+2] +
mov dword_526058 edx +
cmp [ebp+arg_8] 0 +
jz loc_43BAE7  +
mov eax ebx +
mov eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
cmp ecx 2Dh +
jz loc_43B80B  +
mov edi 2013h +
cmp cx di +
jz loc_43B80B  +
cmp word ptr [eax+4] 0 +
jnz loc_43B80B  +
push ecx  +
mov eax offset pTrusteeName +
call sub_43B513  +
pop ecx  +
test eax eax +
jnz loc_43BAE7  +
movzx eax word ptr [edx] +
xor edi edi +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edx +
jmp loc_43B82B  +
cmp ax 3Dh +
jz loc_43B830  +
add [ebp+var_4] 2 +
mov eax [ebp+var_4] +
movzx eax word ptr [eax] +
cmp ax di +
jnz loc_43B81B  +
mov ebx [ebp+arg_8] +
cmp [ebx] edi +
jz loc_43BA4E  +
mov eax [ebp+var_4] +
sub eax edx +
sar eax 1 +
push eax  +
push edx  +
push dword ptr [ebx]  +
call ds:wcsncmp  +
mov edx dword_526058 +
add esp 0Ch +
test eax eax +
jnz loc_43B889  +
mov eax [ebx] +
lea esi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B85E  +
mov ecx [ebp+var_4] +
sub eax esi +
mov esi ecx +
sub esi edx +
sar eax 1 +
sar esi 1 +
cmp esi eax +
jz loc_43B896  +
test edi edi +
jnz loc_43B882  +
mov edi ebx +
jmp loc_43B889  +
mov [ebp+var_8] 1 +
add ebx 10h +
cmp dword ptr [ebx] 0 +
jnz loc_43B83B  +
mov ecx [ebp+var_4] +
jmp loc_43B89F  +
mov edi ebx +
mov [ebp+var_C] 1 +
xor esi esi +
cmp [ebp+var_8] esi +
jz loc_43B904  +
cmp [ebp+var_C] esi +
jnz loc_43B904  +
mov eax [ebp+arg_4] +
mov ecx dword_4633A4 +
push dword ptr [eax+ecx*4]  +
push dword ptr [eax]  +
push offset aSOptionSIsAmbi  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
mov ecx dword_526058 +
mov eax ecx +
add esp 10h +
lea edi [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43B8DC  +
sub eax edi +
sar eax 1 +
inc dword_4633A4  +
and dword_4633AC esi +
lea eax [ecx+eax*2] +
mov dword_526058 eax +
jmp loc_43BE14  +
cmp edi esi +
jz loc_43BA48  +
mov eax dword_4633A4 +
inc eax  +
mov dword_4633A4 eax +
cmp [ecx] si +
jz loc_43B9E4  +
cmp [edi+4] esi +
jz loc_43B95D  +
add ecx 2 +
mov lpLibFileName ecx +
mov eax edx +
lea ebx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_43B933  +
sub eax ebx +
sar eax 1 +
lea eax [edx+eax*2] +
mov dword_526058 eax +
mov eax [edi+8] +
test eax eax +
jz loc_43BA40  +
mov ecx [edi+0Ch] +
jmp loc_43BCAF  +
mov ecx [ebp+arg_4] +
mov eax [ecx+eax*4-4] +
movzx edx word ptr [eax+2] +
cmp edx 2Dh +
jz loc_43B999  +
mov esi 2013h +
cmp dx si +
jz loc_43B999  +
push dword ptr [edi]  +
movzx eax word ptr [eax] +
push eax  +
push dword ptr [ecx]  +
push offset aSOptionCSDoesn  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 14h +
jmp loc_43B9B5  +
push dword ptr [edi]  +
push dword ptr [ecx]  +
push offset aSOptionSDoesnT  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 10h +
mov ecx dword_526058 +
mov eax ecx +
lea ebx [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43B9C0  +
sub eax ebx +
sar eax 1 +
lea eax [ecx+eax*2] +
mov dword_526058 eax +
mov eax [edi+0Ch] +
mov dword_4633AC eax +
jmp loc_43BE14  +
cmp dword ptr [edi+4] 1 +
jnz loc_43B92E  +
mov ecx [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jge loc_43BA0A  +
mov ecx [ecx+eax*4] +
inc eax  +
mov lpLibFileName ecx +
mov dword_4633A4 eax +
jmp loc_43B92E  +
push dword ptr [ecx+eax*4-4]  +
push dword ptr [ecx]  +
push offset aSOptionSRequir  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
mov ecx dword_526058 +
mov eax ecx +
add esp 10h +
lea ebx [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43BA33  +
jmp loc_43B9CB  +
mov eax [edi+0Ch] +
jmp loc_43BE17  +
mov esi dword_4633A4 +
mov eax [ebp+arg_4] +
mov edi [eax+esi*4] +
movzx ebx word ptr [edi+2] +
cmp ebx 2Dh +
jz loc_43BAAD  +
mov eax 2013h +
cmp bx ax +
jz loc_43BA7A  +
movzx eax word ptr [edx] +
push eax  +
mov eax offset pTrusteeName +
call sub_43B513  +
pop ecx  +
test eax eax +
jnz loc_43BAE7  +
cmp ebx 2Dh +
jz loc_43BAAD  +
mov eax 2013h +
cmp bx ax +
jz loc_43BAAD  +
movzx eax word ptr [edi] +
push edx  +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push offset aSUnrecognizedO  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 14h +
jmp loc_43BACB  +
mov eax [ebp+arg_4] +
push edx  +
push dword ptr [eax]  +
push offset aSUnrecognize_0  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 10h +
inc dword_4633A4  +
and dword_4633AC 0 +
mov dword_526058 offset pTrusteeName +
jmp loc_43BE14  +
movzx ebx word ptr [edx] +
mov edi ebx +
add edx 2 +
push edi  +
mov eax offset pTrusteeName +
mov dword_526058 edx +
call sub_43B513  +
pop ecx  +
movzx ecx word ptr [edx] +
test cx cx +
jnz loc_43BB10  +
inc esi  +
mov dword_4633A4 esi +
test eax eax +
jz loc_43BDE0  +
cmp ebx 3Ah +
jz loc_43BDE0  +
cmp word ptr [eax] 57h +
jnz loc_43BD6E  +
cmp word ptr [eax+2] 3Bh +
jnz loc_43BD6E  +
xor eax eax +
mov [ebp+var_4] eax +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
cmp cx ax +
jz loc_43BB4B  +
mov ebx [ebp+arg_4] +
jmp loc_43BB66  +
cmp esi [ebp+arg_0] +
jnz loc_43BB60  +
mov eax [ebp+arg_4] +
push edi  +
push dword ptr [eax]  +
push offset aSOptionRequire  +
jmp loc_43BDFB  +
mov ebx [ebp+arg_4] +
mov edx [ebx+esi*4] +
mov edi edx +
inc esi  +
mov ecx edi +
mov dword_4633A4 esi +
mov lpLibFileName edx +
mov dword_526058 ecx +
jmp loc_43BB88  +
cmp ax 3Dh +
jz loc_43BB90  +
add edi 2 +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_43BB7F  +
mov esi [ebp+arg_8] +
cmp dword ptr [esi] 0 +
jz loc_43BD60  +
mov eax edi +
sub eax ecx +
sar eax 1 +
push eax  +
push ecx  +
push dword ptr [esi]  +
call ds:wcsncmp  +
mov ecx dword_526058 +
add esp 0Ch +
test eax eax +
jnz loc_43BBF2  +
mov eax [esi] +
lea edx [eax+2] +
mov [ebp+var_10] edx +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43BBC1  +
sub eax [ebp+var_10] +
mov edx edi +
sub edx ecx +
sar eax 1 +
sar edx 1 +
cmp edx eax +
jz loc_43BBFF  +
mov edx [ebp+var_4] +
test edx edx +
jnz loc_43BBE9  +
mov edx esi +
mov [ebp+var_4] edx +
jmp loc_43BBF5  +
mov [ebp+var_C] 1 +
jmp loc_43BBF5  +
mov edx [ebp+var_4] +
add esi 10h +
cmp dword ptr [esi] 0 +
jnz loc_43BB9C  +
jmp loc_43BC0B  +
mov edx esi +
mov [ebp+var_4] edx +
mov [ebp+var_8] 1 +
xor eax eax +
cmp [ebp+var_C] eax +
jz loc_43BC66  +
cmp [ebp+var_8] eax +
jnz loc_43BC66  +
mov eax dword_4633A4 +
push dword ptr [ebx+eax*4]  +
push dword ptr [ebx]  +
push offset aSOptionWSIsAmb  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
mov ecx dword_526058 +
mov eax ecx +
add esp 10h +
lea esi [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43BC44  +
sub eax esi +
sar eax 1 +
inc dword_4633A4  +
lea eax [ecx+eax*2] +
mov dword_526058 eax +
jmp loc_43BE14  +
cmp edx eax +
jz loc_43BD60  +
cmp [edi] ax +
jz loc_43BCFE  +
cmp [edx+4] eax +
jz loc_43BCB8  +
add edi 2 +
mov lpLibFileName edi +
mov eax ecx +
lea edi [eax+2] +
mov si [eax] +
add eax 2 +
test si si +
jnz loc_43BC8A  +
sub eax edi +
sar eax 1 +
lea eax [ecx+eax*2] +
mov dword_526058 eax +
mov eax [edx+8] +
test eax eax +
jz loc_43BD58  +
mov ecx [edx+0Ch] +
mov [eax] ecx +
xor eax eax +
jmp loc_43BE17  +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
push dword ptr [ebx]  +
push offset aSOptionWSDoesn  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
mov ecx dword_526058 +
mov eax ecx +
add esp 10h +
lea esi [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43BCE2  +
sub eax esi +
sar eax 1 +
lea eax [ecx+eax*2] +
mov dword_526058 eax +
jmp loc_43BE14  +
cmp dword ptr [edx+4] 1 +
jnz loc_43BC85  +
mov eax dword_4633A4 +
cmp eax [ebp+arg_0] +
jge loc_43BD22  +
mov esi [ebx+eax*4] +
inc eax  +
mov lpLibFileName esi +
mov dword_4633A4 eax +
jmp loc_43BC85  +
push dword ptr [ebx+eax*4-4]  +
push dword ptr [ebx]  +
push offset aSOptionSRequir  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
mov ecx dword_526058 +
mov eax ecx +
add esp 10h +
lea esi [eax+2] +
mov dx [eax] +
add eax 2 +
test dx dx +
jnz loc_43BD4B  +
jmp loc_43BCED  +
mov eax [edx+0Ch] +
jmp loc_43BE17  +
and dword_526058 0 +
push 57h  +
jmp loc_43BE16  +
cmp word ptr [eax+2] 3Ah +
jnz loc_43BDDB  +
cmp word ptr [eax+4] 3Ah +
jnz loc_43BD8A  +
test cx cx +
jnz loc_43BD8F  +
and lpLibFileName 0 +
jmp loc_43BDD4  +
test cx cx +
jz loc_43BD97  +
mov lpLibFileName edx +
jmp loc_43BDCD  +
mov eax [ebp+arg_4] +
cmp esi [ebp+arg_0] +
jnz loc_43BDC5  +
push edi  +
push dword ptr [eax]  +
push offset aSOptionRequire  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 10h +
push 3Fh  +
mov dword_4633AC edi +
pop ebx  +
jmp loc_43BDD4  +
mov eax [eax+esi*4] +
mov lpLibFileName eax +
inc esi  +
mov dword_4633A4 esi +
and dword_526058 0 +
movzx eax bx +
jmp loc_43BE17  +
cmp dword_52614C 0 +
mov eax [ebp+arg_4] +
push edi  +
push dword ptr [eax]  +
jz loc_43BDF6  +
push offset aSIllegalOption  +
jmp loc_43BDFB  +
push offset aSInvalidOption  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 10h +
mov dword_4633AC edi +
push 3Fh  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push offset LibFileName  +
sub esp 24h +
cmp dword ptr [esi+134h] 1AA2A34Ah +
push 180h  +
cmp dword ptr [esi+134h] 1AA2A34Ah +
push ecx  +
mov ecx eax +
sub esp 28h +
test ebx ebx +
test ecx ecx +
test edi edi +
xor ecx ecx +
test edi edi +
mov eax [esi+0Ch] +
push ecx  +
push edi  +
test ebx ebx +
push [ebp+arg_4]  +
push [ebp+arg_4]  +
mov edx [ecx+8] +
sub esp 54h +
push esi  +
sub esp 54h +
sub esp 18h +
push ebx  +
mov esi [eax+8] +
mov eax [ebp+arg_0] +
push [ebp+arg_0]  +
push esi  +
push esi  +
sub esp 54h +
push ecx  +
dec ecx  +
push ecx  +
sub esp 54h +
sub esp 54h +
sub esp 54h +
push ebx  +
sub esp 54h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi eax +
lea eax [ebp+arg_4] +
push eax  +
mov bl 10h +
mov ecx esi +
call sub_43E428  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_43D459  +
cmp dword ptr [esi+68h] 0 +
jnz loc_43D672  +
mov [esi+68h] ecx +
jmp loc_43D672  +
mov ebx [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi ebx +
stos   +
mov eax [ebp+arg_4] +
mov [ebp+var_50] eax +
mov eax [esi+0Ch] +
add eax [esi+8] +
and [ebp+var_4C] 0 +
mov [ebp+var_54] eax +
cmp [ebp+var_50] 0FFFFD8F1h +
jnz loc_43D4B6  +
mov edi [esi+0Ch] +
lea eax [edi+2] +
cmp eax [esi+10h] +
ja loc_43D497  +
add edi [esi+8] +
cmp byte ptr [edi] 0 +
jnz loc_43D4CE  +
cmp byte ptr [edi+1] 0 +
jnz loc_43D4CE  +
cmp [ebp+var_4] 6 +
jge loc_43D66F  +
push 0FFFFFFF8h  +
pop eax  +
cmp dword ptr [esi+68h] 0 +
jnz loc_43D671  +
mov [esi+68h] eax +
jmp loc_43D671  +
mov edx [esi+8] +
mov eax [esi+0Ch] +
lea edi [eax+edx] +
mov edx edi +
sub edx [ebp+var_54] +
cmp edx [ebp+var_50] +
jge loc_43D497  +
cmp eax [esi+10h] +
jnb loc_43D497  +
mov eax [ebp+var_4C] +
cmp eax 9 +
ja loc_43D64A  +
jmp ds:off_43D677[eax*4]  +
movzx eax byte ptr [edi] +
and al 0DFh +
cmp al 80h +
jnz loc_43D65A  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx esi +
call sub_43E862  +
add esp 4 +
test eax eax +
jnz loc_43D4A4  +
push [ebp+arg_4]  +
add ebx 4 +
call sub_43CE13  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_43D666  +
mov eax [ebp+arg_0] +
or dword ptr [eax] 1 +
mov ebx eax +
jmp loc_43D65A  +
push [ebp+arg_4]  +
lea eax [ebx+8] +
push eax  +
mov eax esi +
call sub_43CE34  +
pop ecx  +
pop ecx  +
mov ecx eax +
test ecx ecx +
jnz loc_43D666  +
inc [ebp+var_4]  +
jmp loc_43D65E  +
push [ebp+arg_4]  +
lea eax [ebx+0Ch] +
push eax  +
call sub_43CE87  +
jmp loc_43D533  +
lea edi [ebx+21Ch] +
push [ebp+arg_4]  +
mov eax esi +
call sub_43D038  +
jmp loc_43D534  +
push [ebp+arg_4]  +
lea eax [ebx+224h] +
push eax  +
call sub_43D09E  +
jmp loc_43D533  +
lea edi [ebx+234h] +
jmp loc_43D55B  +
push [ebp+arg_4]  +
lea edi [ebx+23Ch] +
mov eax esi +
call sub_43D168  +
jmp loc_43D534  +
movzx eax byte ptr [edi] +
and al 0DFh +
cmp al 81h +
jnz loc_43D65A  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx esi +
call sub_43E862  +
add esp 4 +
test eax eax +
jnz loc_43D4A4  +
push [ebp+arg_4]  +
lea eax [ebx+454h] +
call sub_43CE5B  +
pop ecx  +
mov ecx eax +
test ecx ecx +
jnz loc_43D666  +
or dword ptr [ebx] 2 +
jmp loc_43D65A  +
movzx eax byte ptr [edi] +
and al 0DFh +
cmp al 82h +
jnz loc_43D65A  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx esi +
call sub_43E862  +
add esp 4 +
test eax eax +
jnz loc_43D4A4  +
push [ebp+arg_4]  +
lea eax [ebx+45Ch] +
call sub_43CE5B  +
pop ecx  +
mov ecx eax +
test ecx ecx +
jnz loc_43D666  +
or dword ptr [ebx] 4 +
jmp loc_43D65A  +
movzx eax byte ptr [edi] +
and al 0DFh +
cmp al 83h +
jnz loc_43D65A  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx esi +
call sub_43E862  +
add esp 4 +
test eax eax +
jnz loc_43D4A4  +
push [ebp+arg_4]  +
lea eax [ebx+464h] +
push eax  +
call sub_43D356  +
pop ecx  +
pop ecx  +
mov ecx eax +
test ecx ecx +
jnz loc_43D666  +
or dword ptr [ebx] 8 +
jmp loc_43D65A  +
cmp dword ptr [esi+68h] 0 +
jnz loc_43D657  +
mov dword ptr [esi+68h] 0FFFFFFF6h +
push 0FFFFFFF6h  +
pop ecx  +
test ecx ecx +
jnz loc_43D666  +
inc [ebp+var_4C]  +
jmp loc_43D475  +
cmp dword ptr [esi+68h] 0 +
jnz loc_43D66F  +
mov [esi+68h] ecx +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
sub esp 58h +
push [ebp+arg_0]  +
push edi  +
sub esp 58h +
sub esp 58h +
push ecx  +
push ecx  +
sub esp 0Ch +
sub esp 68h +
push ecx  +
xor ecx ecx +
lea eax [edx-0Ch] +
mov eax [ecx+0Ch] +
push ecx  +
mov edi ecx +
sub esp 1A0h +
push ecx  +
push ecx  +
push ebx  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
push edi  +
test esi esi +
push edi  +
sub esp 14h +
mov edx [ecx+0Ch] +
push ecx  +
test ebx ebx +
mov eax [esi+0Ch] +
sub esp 14h +
push ecx  +
xor ebx ebx +
push edi  +
push ecx  +
sub esp 194h +
sub esp 18h +
push ecx  +
push ecx  +
cmp [ebp+arg_0] 0 +
test eax eax +
test eax eax +
jnz loc_43F229  +
lea eax [ecx+1Ch] +
mov edx [eax] +
mov [ecx+0Ch] edx +
mov dx [eax+4] +
mov [ecx+14h] dx +
mov ax [eax+6] +
mov edx 0EFFFh +
and ax dx +
mov [ecx+138h] ax +
retn   +
***
mov eax offset CryptSetProviderExW +
jmp $+5  +
***
push ecx  +
push edx  +
push eax  +
push offset ADVAPI32_dll_import_table  +
call sub_44118C  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset RegOpenKeyExW +
jmp loc_43F254  +
***
mov eax offset RegQueryInfoKeyW +
jmp loc_43F254  +
***
mov eax offset RegEnumKeyExW +
jmp loc_43F254  +
***
mov eax offset RegQueryValueExW +
jmp loc_43F254  +
***
mov eax offset RegCloseKey +
jmp loc_43F254  +
***
mov eax offset CryptSignAndEncryptMessage +
jmp $+5  +
***
push ecx  +
push edx  +
push eax  +
push offset CRYPT32_dll_import_table  +
call sub_44118C  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset CryptDecryptAndVerifyMessageSignature +
jmp loc_43F2A1  +
***
mov eax offset CryptUnprotectData +
jmp loc_43F2A1  +
***
mov eax offset inet_addr +
jmp $+5  +
push ecx  +
push edx  +
push eax  +
push offset WSOCK32_dll_import_table  +
call sub_44118C  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset gethostbyname +
jmp loc_43F2D0  +
***
mov eax offset WSAGetLastError +
jmp loc_43F2D0  +
***
mov eax offset htons +
jmp loc_43F2D0  +
***
mov eax offset getservbyname +
jmp loc_43F2D0  +
***
mov eax offset htonl +
jmp loc_43F2D0  +
***
mov eax offset inet_ntoa +
jmp loc_43F2D0  +
***
mov eax offset ntohs +
jmp loc_43F2D0  +
***
mov eax offset getservbyport +
jmp loc_43F2D0  +
***
mov eax offset gethostbyaddr +
jmp loc_43F2D0  +
***
mov eax offset WSASetLastError +
jmp loc_43F2D0  +
***
mov eax offset WSAStartup +
jmp loc_43F2D0  +
***
mov eax offset WSACleanup +
jmp loc_43F2D0  +
***
mov eax offset socket +
jmp loc_43F2D0  +
***
mov eax offset connect +
jmp loc_43F2D0  +
***
mov eax offset send +
jmp loc_43F2D0  +
***
mov eax offset recv +
jmp loc_43F2D0  +
***
mov eax offset shutdown +
jmp loc_43F2D0  +
***
mov eax offset closesocket +
jmp loc_43F2D0  +
***
mov eax offset bind +
jmp loc_43F2D0  +
***
mov eax offset listen +
jmp loc_43F2D0  +
***
mov eax offset select +
jmp loc_43F2D0  +
***
mov eax offset accept +
jmp loc_43F2D0  +
***
mov edi edi +
cmp ecx dword_463000 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push edi  +
mov ebp [ecx] +
push edi  +
mov ebp edx +
push ebx  +
push edx  +
push ecx  +
push [esp+8+arg_4]  +
call __local_unwind4  +
add esp 0Ch +
pop ebp  +
retn 8  +
***
mov edi edi +
mov edi edi +
mov eax dword_465990 +
call __SEH_prolog4  +
mov eax 5A4Dh +
call sub_440F23  +
jmp sub_43FAC9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_465770 eax +
mov dword_46576C ecx +
mov dword_465768 edx +
mov dword_465764 ebx +
mov dword_465760 esi +
mov dword_46575C edi +
mov word_465788 ss +
mov word_46577C cs +
mov word_465758 ds +
mov word_465754 es +
mov word_465750 fs +
mov word_46574C gs +
pushf   +
pop dword_465780  +
mov eax [ebp+0] +
mov dword_465774 eax +
mov eax [ebp+4] +
mov dword_465778 eax +
lea eax [ebp+8] +
mov dword_465784 eax +
mov eax [ebp-320h] +
mov dword_4656C0 10001h +
mov eax dword_465778 +
mov dword_46567C eax +
mov dword_465670 0C0000409h +
mov dword_465674 1 +
mov eax dword_463000 +
mov [ebp-328h] eax +
mov eax dword_463004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
or eax eax +
jnz loc_43FE11  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_43FE58  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_43FE1F  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_43FE4D  +
cmp edx [esp+arg_4] +
ja loc_43FE4D  +
jb loc_43FE56  +
cmp eax [esp+arg_0] +
jbe loc_43FE56  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
test byte ptr [ecx+0Ch] 40h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 268h +
mov eax dword_463000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_24C] eax +
mov [ebp+var_224] edi +
mov [ebp+var_248] esi +
mov [ebp+var_210] esi +
mov [ebp+var_234] esi +
mov [ebp+var_218] esi +
mov [ebp+var_230] esi +
mov dword ptr [ebp+var_23C] esi +
mov [ebp+var_250] esi +
mov [ebp+var_238] esi +
cmp eax esi +
jnz loc_440147  +
call ds:__imp__errno  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_43F463  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_440B87  +
cmp ebx esi +
jz loc_440126  +
mov cl [ebx] +
mov [ebp+var_228] esi +
mov [ebp+var_220] esi +
mov [ebp+var_240] esi +
mov [ebp+var_244] esi +
mov [ebp+var_211] cl +
test cl cl +
jz loc_440B81  +
inc ebx  +
cmp [ebp+var_228] esi +
mov [ebp+var_260] ebx +
jl loc_440B6C  +
mov al cl +
sub al 20h +
cmp al 58h +
ja loc_44019D  +
movsx eax cl +
movzx eax byte ptr ds:(OutputString+24h)[eax] +
and eax 0Fh +
jmp loc_44019F  +
xor eax eax +
mov edx [ebp+var_240] +
imul eax eax +
movzx eax ds:byte_4443A0[eax+edx] +
shr eax 4 +
mov [ebp+var_240] eax +
cmp eax 8 +
jz loc_440126  +
push 7  +
pop edx  +
cmp eax edx +
ja loc_440B23  +
jmp ds:off_440B97[eax*4]  +
or [ebp+var_218] 0FFFFFFFFh +
mov dword ptr [ebp+var_23C] esi +
mov [ebp+var_250] esi +
mov [ebp+var_234] esi +
mov [ebp+var_230] esi +
mov [ebp+var_210] esi +
mov [ebp+var_238] esi +
jmp loc_440B31  +
movsx eax cl +
sub eax 20h +
jz loc_440256  +
sub eax 3 +
jz loc_440247  +
sub eax 8 +
jz loc_44023B  +
dec eax  +
dec eax  +
jz loc_44022F  +
sub eax 3 +
jnz loc_440B23  +
or [ebp+var_210] 8 +
jmp loc_440B31  +
or [ebp+var_210] 4 +
jmp loc_440B31  +
or [ebp+var_210] 1 +
jmp loc_440B31  +
or [ebp+var_210] 80h +
jmp loc_440B31  +
or [ebp+var_210] 2 +
jmp loc_440B31  +
cmp cl 2Ah +
jnz loc_440292  +
mov eax [edi] +
add edi 4 +
cmp eax esi +
mov [ebp+var_224] edi +
mov [ebp+var_234] eax +
jge loc_440B31  +
or [ebp+var_210] 4 +
neg [ebp+var_234]  +
jmp loc_440B31  +
mov eax [ebp+var_234] +
imul eax eax +
movsx ecx cl +
lea eax [eax+ecx-30h] +
mov [ebp+var_234] eax +
jmp loc_440B31  +
mov [ebp+var_218] esi +
jmp loc_440B31  +
cmp cl 2Ah +
jnz loc_4402E2  +
mov eax [edi] +
add edi 4 +
cmp eax esi +
mov [ebp+var_224] edi +
mov [ebp+var_218] eax +
jge loc_440B31  +
or [ebp+var_218] 0FFFFFFFFh +
jmp loc_440B31  +
mov eax [ebp+var_218] +
imul eax eax +
movsx ecx cl +
lea eax [eax+ecx-30h] +
mov [ebp+var_218] eax +
jmp loc_440B31  +
cmp cl 49h +
jz loc_440351  +
cmp cl 68h +
jz loc_440345  +
cmp cl 6Ch +
jz loc_440324  +
cmp cl 77h +
jnz loc_440B31  +
or [ebp+var_210] 800h +
jmp loc_440B31  +
cmp byte ptr [ebx] 6Ch +
jnz loc_440339  +
inc ebx  +
or [ebp+var_210] 1000h +
jmp loc_440B31  +
or [ebp+var_210] 10h +
jmp loc_440B31  +
or [ebp+var_210] 20h +
jmp loc_440B31  +
mov al [ebx] +
cmp al 36h +
jnz loc_44036E  +
cmp byte ptr [ebx+1] 34h +
jnz loc_44036E  +
inc ebx  +
inc ebx  +
or [ebp+var_210] 8000h +
jmp loc_440B31  +
cmp al 33h +
jnz loc_440389  +
cmp byte ptr [ebx+1] 32h +
jnz loc_440389  +
inc ebx  +
inc ebx  +
and [ebp+var_210] 0FFFF7FFFh +
jmp loc_440B31  +
cmp al 64h +
jz loc_440B31  +
cmp al 69h +
jz loc_440B31  +
cmp al 6Fh +
jz loc_440B31  +
cmp al 75h +
jz loc_440B31  +
cmp al 78h +
jz loc_440B31  +
cmp al 58h +
jz loc_440B31  +
mov [ebp+var_240] esi +
movzx eax cl +
push eax  +
mov [ebp+var_238] esi +
call ds:isleadbyte  +
pop ecx  +
test eax eax +
jz loc_4403FC  +
mov ecx [ebp+var_24C] +
mov al [ebp+var_211] +
lea esi [ebp+var_228] +
call _write_char  +
mov al [ebx] +
inc ebx  +
mov [ebp+var_211] al +
test al al +
jz loc_440B44  +
mov ecx [ebp+var_24C] +
mov al [ebp+var_211] +
lea esi [ebp+var_228] +
call _write_char  +
jmp loc_440B2F  +
movsx eax cl +
cmp eax 64h +
jg loc_44063A  +
jz loc_440691  +
cmp eax 53h +
jg loc_440525  +
jz loc_4404B9  +
sub eax 41h +
jz loc_44044E  +
dec eax  +
dec eax  +
jz loc_44049A  +
dec eax  +
dec eax  +
jz loc_44044E  +
dec eax  +
dec eax  +
jnz loc_440993  +
add cl 20h +
mov dword ptr [ebp+var_23C] 1 +
mov [ebp+var_211] cl +
or [ebp+var_210] 40h +
cmp [ebp+var_218] esi +
lea eax [ebp+var_20C] +
mov [ebp+var_21C] eax +
mov eax 200h +
mov [ebp+var_254] eax +
jge loc_4406C0  +
mov [ebp+var_218] 6 +
jmp loc_44072E  +
test [ebp+var_210] 830h +
jnz loc_440542  +
or [ebp+var_210] 800h +
jmp loc_440542  +
test [ebp+var_210] 830h +
jnz loc_4404CF  +
or [ebp+var_210] 800h +
mov ecx [ebp+var_218] +
cmp ecx 0FFFFFFFFh +
jnz loc_4404DF  +
mov ecx 7FFFFFFFh +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_224] edi +
mov edi [edi-4] +
mov [ebp+var_21C] edi +
jz loc_440965  +
cmp edi esi +
jnz loc_440510  +
mov eax off_463014 +
mov [ebp+var_21C] eax +
mov eax [ebp+var_21C] +
mov [ebp+var_238] 1 +
jmp loc_440957  +
sub eax 58h +
jz loc_4407BB  +
dec eax  +
dec eax  +
jz loc_4405AB  +
sub eax edx +
jz loc_440461  +
dec eax  +
dec eax  +
jnz loc_440993  +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_224] edi +
jz loc_440587  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_220] +
push eax  +
call sub_43FFDA  +
add esp 10h +
test eax eax +
jz loc_44059A  +
mov [ebp+var_250] 1 +
jmp loc_44059A  +
mov al [edi-4] +
mov byte ptr [ebp+var_20C] al +
mov [ebp+var_220] 1 +
lea eax [ebp+var_20C] +
mov [ebp+var_21C] eax +
jmp loc_440993  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_224] edi +
cmp eax esi +
jz loc_44061E  +
mov esi [eax+4] +
xor edi edi +
cmp esi edi +
jz loc_44061E  +
movzx ecx word ptr [eax] +
cmp [eax+2] cx +
jb loc_440B5C  +
test [ebp+var_210] 800h +
movzx eax cx +
jz loc_44060D  +
xor ecx ecx +
mov edx eax +
not edx  +
inc ecx  +
test dl cl +
jz loc_440B5C  +
mov edx esi +
not edx  +
test dl cl +
jz loc_440B5C  +
mov [ebp+var_21C] esi +
shr eax 1 +
mov [ebp+var_238] ecx +
jmp loc_44098D  +
mov [ebp+var_238] edi +
mov [ebp+var_21C] esi +
jmp loc_44098D  +
mov eax off_463010 +
mov [ebp+var_21C] eax +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_44062C  +
sub eax edx +
jmp loc_44098D  +
cmp eax 70h +
jg loc_4407C3  +
jz loc_4407B1  +
cmp eax 65h +
jl loc_440993  +
cmp eax 67h +
jle loc_440461  +
cmp eax 69h +
jz loc_440691  +
cmp eax 6Eh +
jz loc_440126  +
cmp eax 6Fh +
jnz loc_440993  +
test byte ptr [ebp+var_210] 80h +
mov [ebp+var_220] 8 +
jz loc_4406A2  +
or [ebp+var_210] 200h +
jmp loc_4406A2  +
or [ebp+var_210] 40h +
mov [ebp+var_220] 0Ah +
mov eax [ebp+var_210] +
test eax 8000h +
jz loc_440822  +
mov eax [edi] +
mov edx [edi+4] +
add edi 8 +
jmp loc_440857  +
jnz loc_4406D3  +
cmp cl 67h +
jnz loc_44072E  +
mov [ebp+var_218] 1 +
jmp loc_44072E  +
cmp [ebp+var_218] eax +
jle loc_4406E1  +
mov [ebp+var_218] eax +
mov ebx 0A3h +
cmp [ebp+var_218] ebx +
jle loc_440728  +
mov esi [ebp+var_218] +
add esi 15Dh +
push esi  +
call ds:malloc  +
pop ecx  +
mov cl [ebp+var_211] +
mov [ebp+var_244] eax +
test eax eax +
jz loc_440720  +
mov [ebp+var_21C] eax +
mov [ebp+var_254] esi +
jmp loc_44072E  +
mov [ebp+var_218] ebx +
jmp loc_44072E  +
mov cl [ebp+var_211] +
test byte ptr [ebp+var_210] 80h +
jz loc_440741  +
or dword ptr [ebp+var_23C] 80h +
mov eax [edi] +
push dword ptr [ebp+var_23C]  +
mov esi [ebp+var_21C] +
push [ebp+var_218]  +
add edi 8 +
mov [ebp+var_268] eax +
mov eax [edi-4] +
mov [ebp+var_264] eax +
movsx eax cl +
push eax  +
push [ebp+var_254]  +
lea eax [ebp+var_268] +
push esi  +
push eax  +
mov [ebp+var_224] edi +
call sub_43FF29  +
add esp 18h +
cmp byte ptr [esi] 2Dh +
jnz loc_44079C  +
or [ebp+var_210] 100h +
inc [ebp+var_21C]  +
mov eax [ebp+var_21C] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4407A5  +
jmp loc_440633  +
mov [ebp+var_218] 8 +
mov [ebp+var_248] edx +
jmp loc_4407E7  +
sub eax 73h +
jz loc_4404CF  +
dec eax  +
dec eax  +
jz loc_440698  +
sub eax 3 +
jnz loc_440993  +
mov [ebp+var_248] 27h +
test byte ptr [ebp+var_210] 80h +
mov [ebp+var_220] 10h +
jz loc_4406A2  +
mov al byte ptr [ebp+var_248] +
add al 51h +
mov byte ptr [ebp+var_22C] 30h +
mov byte ptr [ebp+var_22C+1] al +
mov [ebp+var_230] 2 +
jmp loc_4406A2  +
test eax 1000h +
jnz loc_4406B3  +
add edi 4 +
test al 20h +
jz loc_44084B  +
mov [ebp+var_224] edi +
test al 40h +
jz loc_440844  +
movsx eax word ptr [edi-4] +
jmp loc_440848  +
movzx eax word ptr [edi-4] +
cdq   +
jmp loc_44085D  +
test al 40h +
mov eax [edi-4] +
jz loc_440855  +
cdq   +
jmp loc_440857  +
xor edx edx +
mov [ebp+var_224] edi +
test byte ptr [ebp+var_210] 40h +
jz loc_440881  +
cmp edx esi +
jg loc_440881  +
jl loc_440870  +
cmp eax esi +
jnb loc_440881  +
neg eax  +
adc edx 0 +
neg edx  +
or [ebp+var_210] 100h +
test [ebp+var_210] 9000h +
mov ebx edx +
mov edi eax +
jnz loc_440893  +
xor ebx ebx +
cmp [ebp+var_218] 0 +
jge loc_4408A8  +
mov [ebp+var_218] 1 +
jmp loc_4408C2  +
and [ebp+var_210] 0FFFFFFF7h +
mov eax 200h +
cmp [ebp+var_218] eax +
jle loc_4408C2  +
mov [ebp+var_218] eax +
mov eax edi +
or eax ebx +
jnz loc_4408CE  +
and [ebp+var_230] eax +
lea esi [ebp+var_D] +
mov eax [ebp+var_218] +
dec [ebp+var_218]  +
test eax eax +
jg loc_4408E7  +
mov eax edi +
or eax ebx +
jz loc_440914  +
mov eax [ebp+var_220] +
cdq   +
push edx  +
push eax  +
push ebx  +
push edi  +
call __aulldvrm  +
add ecx 30h +
cmp ecx 39h +
mov [ebp+var_254] ebx +
mov edi eax +
mov ebx edx +
jle loc_44090F  +
add ecx [ebp+var_248] +
mov [esi] cl +
dec esi  +
jmp loc_4408D1  +
lea eax [ebp+var_D] +
sub eax esi +
inc esi  +
test [ebp+var_210] 200h +
mov [ebp+var_220] eax +
mov [ebp+var_21C] esi +
jz loc_440993  +
test eax eax +
jz loc_44093D  +
mov ecx esi +
cmp byte ptr [ecx] 30h +
jz loc_440993  +
dec [ebp+var_21C]  +
mov ecx [ebp+var_21C] +
mov byte ptr [ecx] 30h +
inc eax  +
jmp loc_44098D  +
dec ecx  +
cmp [eax] si +
jz loc_44095B  +
inc eax  +
inc eax  +
cmp ecx esi +
jnz loc_44094F  +
sub eax [ebp+var_21C] +
sar eax 1 +
jmp loc_44098D  +
cmp edi esi +
jnz loc_440974  +
mov eax off_463010 +
mov [ebp+var_21C] eax +
mov eax [ebp+var_21C] +
jmp loc_440983  +
dec ecx  +
cmp byte ptr [eax] 0 +
jz loc_440987  +
inc eax  +
cmp ecx esi +
jnz loc_44097C  +
sub eax [ebp+var_21C] +
mov [ebp+var_220] eax +
cmp [ebp+var_250] 0 +
jnz loc_440B06  +
mov eax [ebp+var_210] +
test al 40h +
jz loc_4409DC  +
test eax 100h +
jz loc_4409BA  +
mov byte ptr [ebp+var_22C] 2Dh +
jmp loc_4409D2  +
test al 1 +
jz loc_4409C7  +
mov byte ptr [ebp+var_22C] 2Bh +
jmp loc_4409D2  +
test al 2 +
jz loc_4409DC  +
mov byte ptr [ebp+var_22C] 20h +
mov [ebp+var_230] 1 +
mov ebx [ebp+var_234] +
sub ebx [ebp+var_220] +
sub ebx [ebp+var_230] +
test byte ptr [ebp+var_210] 0Ch +
jnz loc_440A0E  +
push [ebp+var_24C]  +
lea eax [ebp+var_228] +
push ebx  +
push 20h  +
call sub_43FEB5  +
add esp 0Ch +
push [ebp+var_230]  +
mov edi [ebp+var_24C] +
lea eax [ebp+var_228] +
lea ecx [ebp+var_22C] +
call sub_43FEDB  +
test byte ptr [ebp+var_210] 8 +
pop ecx  +
jz loc_440A50  +
test byte ptr [ebp+var_210] 4 +
jnz loc_440A50  +
push edi  +
push ebx  +
push 30h  +
lea eax [ebp+var_228] +
call sub_43FEB5  +
add esp 0Ch +
cmp [ebp+var_238] 0 +
jz loc_440ACA  +
cmp [ebp+var_220] 0 +
jle loc_440ACA  +
mov eax [ebp+var_220] +
mov esi [ebp+var_21C] +
mov [ebp+var_254] eax +
movzx eax word ptr [esi] +
dec [ebp+var_254]  +
push eax  +
push 6  +
lea eax [ebp+var_D+1] +
push eax  +
lea eax [ebp+var_25C] +
inc esi  +
push eax  +
inc esi  +
call sub_43FFDA  +
add esp 10h +
test eax eax +
jnz loc_440AC1  +
cmp [ebp+var_25C] eax +
jz loc_440AC1  +
push [ebp+var_25C]  +
lea eax [ebp+var_228] +
lea ecx [ebp+var_D+1] +
call sub_43FEDB  +
cmp [ebp+var_254] 0 +
pop ecx  +
jnz loc_440A74  +
jmp loc_440AE2  +
or [ebp+var_228] 0FFFFFFFFh +
jmp loc_440AE2  +
push [ebp+var_220]  +
mov ecx [ebp+var_21C] +
lea eax [ebp+var_228] +
call sub_43FEDB  +
pop ecx  +
cmp [ebp+var_228] 0 +
jl loc_440B06  +
test byte ptr [ebp+var_210] 4 +
jz loc_440B06  +
push edi  +
push ebx  +
push 20h  +
lea eax [ebp+var_228] +
call sub_43FEB5  +
add esp 0Ch +
cmp [ebp+var_244] 0 +
jz loc_440B23  +
push [ebp+var_244]  +
call ds:free  +
and [ebp+var_244] 0 +
pop ecx  +
mov ebx [ebp+var_260] +
mov edi [ebp+var_224] +
xor esi esi +
mov al [ebx] +
mov [ebp+var_211] al +
test al al +
jz loc_440B6C  +
mov cl al +
jmp loc_440173  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
jmp loc_440137  +
call ds:__imp__errno  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
jmp loc_440131  +
cmp [ebp+var_240] esi +
jz loc_440B81  +
cmp [ebp+var_240] 7 +
jnz loc_440126  +
mov eax [ebp+var_228] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_43F480  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push edi  +
mov edi [ebp+arg_4] +
cmp edi 0FFFFFFFFh +
jnz loc_440BD1  +
mov [ebp+var_1C] 7FFFFFFFh +
jmp loc_440BFC  +
cmp edi 7FFFFFFFh +
jbe loc_440BF9  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43F463  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_440C63  +
mov [ebp+var_1C] edi +
push ebx  +
push esi  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push [ebp+arg_8]  +
lea eax [ebp+var_20] +
push eax  +
mov [ebp+var_18] esi +
mov [ebp+var_20] esi +
mov [ebp+var_14] 42h +
call sub_4400C3  +
mov ebx eax +
xor eax eax +
add esp 0Ch +
cmp ebx eax +
mov [esi+edi-1] al +
jge loc_440C3D  +
cmp [ebp+var_1C] eax +
jl loc_440C5E  +
cmp esi eax +
jz loc_440C5A  +
cmp edi eax +
jbe loc_440C5A  +
mov [esi] al +
jmp loc_440C5A  +
dec [ebp+var_1C]  +
js loc_440C49  +
mov ecx [ebp+var_20] +
mov [ecx] al +
jmp loc_440C5A  +
lea ecx [ebp+var_20] +
push ecx  +
push eax  +
call sub_440FF4  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_440C5E  +
mov eax ebx +
jmp loc_440C61  +
push 0FFFFFFFEh  +
pop eax  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov ebx offset unk_463018 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_440CB6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_440CB2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
call __SEH_prolog4  +
mov edi edi +
xor eax eax +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov edi edi +
call ds:_controlfp  +
call __SEH_prolog4  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_463000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_440F55  +
test eax ebx +
jz loc_440F55  +
not eax  +
mov dword_463004 eax +
jmp loc_440FB0  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:__imp_GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_440F9C  +
test dword_463000 ebx +
jnz loc_440FA1  +
mov esi 0BB40E64Fh +
mov dword_463000 esi +
not esi  +
mov dword_463004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov eax [esp+arg_4] +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
call ds:_fileno  +
mov [ebp+arg_4] eax +
mov eax [esi+0Ch] +
pop ecx  +
test al 82h +
jnz loc_441028  +
call ds:__imp__errno  +
mov dword ptr [eax] 9 +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_441168  +
test al 40h +
jz loc_44103A  +
call ds:__imp__errno  +
mov dword ptr [eax] 22h +
jmp loc_44101C  +
push ebx  +
xor ebx ebx +
test al 1 +
jz loc_441053  +
mov [esi+4] ebx +
test al 10h +
jz loc_4410AE  +
mov ecx [esi+8] +
and eax 0FFFFFFFEh +
mov [esi] ecx +
mov [esi+0Ch] eax +
mov eax [esi+0Ch] +
and eax 0FFFFFFEFh +
or eax 2 +
mov [esi+0Ch] eax +
mov [esi+4] ebx +
mov [ebp+var_4] ebx +
test eax 10Ch +
jnz loc_4410B6  +
mov eax ds:_iob +
lea ecx [eax+20h] +
cmp esi ecx +
jz loc_44107F  +
add eax 40h +
cmp esi eax +
jnz loc_44108D  +
push [ebp+arg_4]  +
call ds:_isatty  +
pop ecx  +
test eax eax +
jnz loc_4410B6  +
call ds:__imp__errno  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov dword ptr [eax] 16h +
call sub_43F463  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_441167  +
or eax 20h +
mov [esi+0Ch] eax +
jmp loc_4410A6  +
test dword ptr [esi+0Ch] 108h +
push edi  +
jz loc_441139  +
mov eax [esi+8] +
mov edi [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
mov ecx [esi+18h] +
sub edi eax +
dec ecx  +
cmp edi ebx +
mov [esi+4] ecx +
jle loc_4410EA  +
push edi  +
push eax  +
push [ebp+arg_4]  +
call ds:_write  +
add esp 0Ch +
mov [ebp+var_4] eax +
jmp loc_44112F  +
mov eax [ebp+arg_4] +
cmp eax 0FFFFFFFFh +
jz loc_44110D  +
cmp eax 0FFFFFFFEh +
jz loc_44110D  +
mov edx ds:__pioinfo +
mov ecx eax +
and eax 1Fh +
imul eax eax +
sar ecx 5 +
add eax [edx+ecx*4] +
jmp loc_441112  +
mov eax ds:__badioinfo +
test byte ptr [eax+4] 20h +
jz loc_44112F  +
push 2  +
push ebx  +
push ebx  +
push [ebp+arg_4]  +
call ds:_lseeki64  +
and eax edx +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_441155  +
mov eax [esi+8] +
mov cl byte ptr [ebp+arg_0] +
mov [eax] cl +
jmp loc_441150  +
xor edi edi +
inc edi  +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
call ds:_write  +
add esp 0Ch +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jz loc_44115E  +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_441166  +
mov eax [ebp+arg_0] +
and eax 0FFh +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
mov eax offset __ImageBase +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+8] +
mov ecx [esi+4] +
mov ebx [esi+0Ch] +
add edx eax +
push edi  +
mov edi [esi+14h] +
add edi eax +
add ecx eax +
mov [ebp+Target] edx +
mov edx [esi+10h] +
add ebx eax +
add edx eax +
mov eax [esi+1Ch] +
mov [ebp+var_4] eax +
mov eax [ebp+Arguments] +
mov [ebp+lpLibFileName] ecx +
xor ecx ecx +
mov [ebp+var_C] edi +
mov [ebp+var_3C] eax +
xor eax eax +
test dword ptr [esi] 1 +
lea edi [ebp+lpProcName] +
mov [ebp+var_44] 24h +
mov [ebp+var_40] esi +
mov [ebp+var_34] ecx +
stos   +
mov [ebp+var_2C] ecx +
mov [ebp+var_28] ecx +
mov [ebp+var_24] ecx +
jnz loc_441212  +
lea eax [ebp+var_44] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
push 1  +
push ecx  +
push 0C06D0057h  +
call ds:RaiseException  +
xor eax eax +
jmp loc_4413C2  +
mov eax [ebp+Target] +
mov edi [eax] +
mov eax [ebp+Arguments] +
sub eax ebx +
sar eax 2 +
shl eax 2 +
add edx eax +
mov edx [edx] +
mov [ebp+arg_0] eax +
mov eax edx +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_34] eax +
lea eax (__ImageBase+2)[edx] +
jnz loc_441241  +
movzx eax dx +
mov [ebp+lpProcName] eax +
mov eax dword_4659A8 +
xor ebx ebx +
cmp eax ecx +
jz loc_441260  +
lea edx [ebp+var_44] +
push edx  +
push ecx  +
call eax  +
mov ebx eax +
test ebx ebx +
jnz loc_4413A5  +
test edi edi +
jnz loc_44130A  +
mov eax dword_4659A8 +
test eax eax +
jz loc_44127F  +
lea ecx [ebp+var_44] +
push ecx  +
push 1  +
call eax  +
mov edi eax +
test edi edi +
jnz loc_4412CF  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryA  +
mov edi eax +
test edi edi +
jnz loc_4412CF  +
call ds:GetLastError  +
mov [ebp+var_24] eax +
mov eax dword_4659A4 +
test eax eax +
jz loc_4412AE  +
lea ecx [ebp+var_44] +
push ecx  +
push 3  +
call eax  +
mov edi eax +
test edi edi +
jnz loc_4412CF  +
lea eax [ebp+var_44] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
push 1  +
push 0  +
push 0C06D007Eh  +
call ds:RaiseException  +
mov eax [ebp+var_28] +
jmp loc_4413C2  +
push edi  +
push [ebp+Target]  +
call ds:InterlockedExchange  +
cmp eax edi +
jz loc_441303  +
cmp dword ptr [esi+18h] 0 +
jz loc_44130A  +
push 8  +
push 40h  +
call ds:LocalAlloc  +
test eax eax +
jz loc_44130A  +
mov [eax+4] esi +
mov ecx dword_4659A0 +
mov [eax] ecx +
mov dword_4659A0 eax +
jmp loc_44130A  +
push edi  +
call ds:FreeLibrary  +
mov eax dword_4659A8 +
mov [ebp+var_2C] edi +
test eax eax +
jz loc_441320  +
lea ecx [ebp+var_44] +
push ecx  +
push 2  +
call eax  +
mov ebx eax +
test ebx ebx +
jnz loc_4413A0  +
cmp [esi+14h] ebx +
jz loc_441355  +
cmp [esi+1Ch] ebx +
jz loc_441355  +
mov eax [edi+3Ch] +
add eax edi +
cmp dword ptr [eax] 4550h +
jnz loc_441355  +
mov ecx [ebp+var_4] +
cmp [eax+8] ecx +
jnz loc_441355  +
cmp edi [eax+34h] +
jnz loc_441355  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_0] +
mov ebx [ecx+eax] +
test ebx ebx +
jnz loc_4413A0  +
push [ebp+lpProcName]  +
push edi  +
call ds:GetProcAddress  +
mov ebx eax +
test ebx ebx +
jnz loc_4413A0  +
call ds:GetLastError  +
mov [ebp+var_24] eax +
mov eax dword_4659A4 +
test eax eax +
jz loc_441381  +
lea ecx [ebp+var_44] +
push ecx  +
push 4  +
call eax  +
mov ebx eax +
test ebx ebx +
jnz loc_4413A0  +
lea eax [ebp+var_44] +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
push 1  +
push ebx  +
push 0C06D007Fh  +
call ds:RaiseException  +
mov ebx [ebp+var_28] +
mov eax [ebp+Arguments] +
mov [eax] ebx +
mov eax dword_4659A8 +
test eax eax +
jz loc_4413C0  +
and [ebp+var_24] 0 +
lea ecx [ebp+var_44] +
push ecx  +
push 5  +
mov [ebp+var_2C] edi +
mov [ebp+var_28] ebx +
call eax  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
pushf   +
push ecx  +
clc   +
cld   +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov ecx 8 +
lods   +
adc eax [edi] +
stos   +
loop loc_4413F6  +
pop ecx  +
popf   +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
leave   +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi [ebp+arg_8] +
mov edx [esi+4] +
mov ecx [esi] +
mov edi [ebp+arg_4] +
mov esi [ebp+arg_0] +
mov ebx [esi] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+4] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+8] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+0Ch] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+10h] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+14h] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+18h] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+1Ch] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+4] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+8] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+0Ch] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+10h] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+14h] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+18h] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+1Ch] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+4] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+8] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+0Ch] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+10h] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+14h] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+18h] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+1Ch] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+1Ch] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+18h] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+14h] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+10h] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+0Ch] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi+8] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov ebx [esi+4] +
add ebx ecx +
movzx eax bl +
xor edx [edi+eax*4] +
movzx eax bh +
xor edx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor edx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor edx [edi+ebx*4+800h] +
mov ebx [esi] +
add ebx edx +
movzx eax bl +
xor ecx [edi+eax*4] +
movzx eax bh +
xor ecx [edi+eax*4+400h] +
shr ebx 10h +
movzx eax bh +
xor ecx [edi+eax*4+0C00h] +
and ebx 0FFh +
xor ecx [edi+ebx*4+800h] +
mov esi [ebp+arg_8] +
mov [esi] edx +
mov [esi+4] ecx +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
leave   +
retn   +
***
push ebx  +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
cmp ebx 0 +
jnz loc_44274D  +
pop ebx  +
jmp loc_443079  +
pop ebx  +
jmp loc_443A59  +
push ebx  +
mov ebx dword_463330 +
cmp ebx 0 +
jnz loc_442765  +
pop ebx  +
jmp loc_443089  +
pop ebx  +
jmp loc_443A69  +
push ebx  +
mov ebx dword_463330 +
cmp ebx 0 +
jnz loc_44277D  +
pop ebx  +
jmp loc_443099  +
pop ebx  +
jmp loc_443A79  +
push ebx  +
mov ebx dword_463330 +
cmp ebx 0 +
jnz loc_442795  +
pop ebx  +
jmp loc_4430A9  +
pop ebx  +
jmp loc_443A89  +
mov eax offset CP_CryptAcquireContextA +
jmp $+5  +
push ecx  +
push edx  +
push eax  +
push offset capi10_win_dll_import_table  +
call sub_44118C  +
pop edx  +
pop ecx  +
jmp eax  +
jmp CP_CryptAcquireContextA  +
mov eax offset CP_CryptAcquireContextW +
jmp loc_4427A5  +
jmp CP_CryptAcquireContextW  +
mov eax offset CP_CryptCreateHash +
jmp loc_4427A5  +
jmp CP_CryptCreateHash  +
mov eax offset CP_CryptContextAddRef +
jmp loc_4427A5  +
jmp CP_CryptContextAddRef  +
mov eax offset CP_CryptDecrypt +
jmp loc_4427A5  +
jmp CP_CryptDecrypt  +
mov eax offset CP_CryptDeriveKey +
jmp loc_4427A5  +
jmp CP_CryptDeriveKey  +
mov eax offset CP_CryptDestroyHash +
jmp loc_4427A5  +
jmp CP_CryptDestroyHash  +
mov eax offset CP_CryptDestroyKey +
jmp loc_4427A5  +
jmp CP_CryptDestroyKey  +
mov eax offset CP_CryptDuplicateHash +
jmp loc_4427A5  +
jmp CP_CryptDuplicateHash  +
mov eax offset CP_CryptDuplicateKey +
jmp loc_4427A5  +
jmp CP_CryptDuplicateKey  +
mov eax offset CP_CryptEncrypt +
jmp loc_4427A5  +
jmp CP_CryptEncrypt  +
mov eax offset CP_CryptEnumProvidersA +
jmp loc_4427A5  +
jmp CP_CryptEnumProvidersA  +
mov eax offset CP_CryptEnumProvidersW +
jmp loc_4427A5  +
jmp CP_CryptEnumProvidersW  +
mov eax offset CP_CryptEnumProviderTypesA +
jmp loc_4427A5  +
jmp CP_CryptEnumProviderTypesA  +
mov eax offset CP_CryptEnumProviderTypesW +
jmp loc_4427A5  +
jmp CP_CryptEnumProviderTypesW  +
mov eax offset CP_CryptExportKey +
jmp loc_4427A5  +
jmp CP_CryptExportKey  +
mov eax offset CP_CryptGenKey +
jmp loc_4427A5  +
jmp CP_CryptGenKey  +
mov eax offset CP_CryptGenRandom +
jmp loc_4427A5  +
jmp CP_CryptGenRandom  +
mov eax offset CP_CryptGetDefaultProviderA +
jmp loc_4427A5  +
jmp CP_CryptGetDefaultProviderA  +
mov eax offset CP_CryptGetDefaultProviderW +
jmp loc_4427A5  +
jmp CP_CryptGetDefaultProviderW  +
mov eax offset CP_CryptGetHashParam +
jmp loc_4427A5  +
jmp CP_CryptGetHashParam  +
mov eax offset CP_CryptGetKeyParam +
jmp loc_4427A5  +
jmp CP_CryptGetKeyParam  +
mov eax offset CP_CryptGetProvParam +
jmp loc_4427A5  +
jmp CP_CryptGetProvParam  +
mov eax offset CP_CryptGetUserKey +
jmp loc_4427A5  +
jmp CP_CryptGetUserKey  +
mov eax offset CP_CryptHashData +
jmp loc_4427A5  +
jmp CP_CryptHashData  +
mov eax offset CP_CryptHashSessionKey +
jmp loc_4427A5  +
jmp CP_CryptHashSessionKey  +
mov eax offset CP_CryptImportKey +
jmp loc_4427A5  +
jmp CP_CryptImportKey  +
mov eax offset CP_CryptReleaseContext +
jmp loc_4427A5  +
jmp CP_CryptReleaseContext  +
mov eax offset CP_CryptSetHashParam +
jmp loc_4427A5  +
jmp CP_CryptSetHashParam  +
mov eax offset CP_CryptSetKeyParam +
jmp loc_4427A5  +
jmp CP_CryptSetKeyParam  +
mov eax offset CP_CryptSetProvParam +
jmp loc_4427A5  +
jmp CP_CryptSetProvParam  +
mov eax offset CP_CryptSignHashA +
jmp loc_4427A5  +
jmp CP_CryptSignHashA  +
mov eax offset CP_CryptSignHashW +
jmp loc_4427A5  +
jmp CP_CryptSignHashW  +
mov eax offset CP_CryptVerifySignatureA +
jmp loc_4427A5  +
jmp CP_CryptVerifySignatureA  +
mov eax offset CP_CryptVerifySignatureW +
jmp loc_4427A5  +
jmp CP_CryptVerifySignatureW  +
mov eax offset CP_CertAddCRLContextToStore +
jmp $+5  +
push ecx  +
push edx  +
push eax  +
push offset capi20_win_dll_import_table  +
call sub_44118C  +
pop edx  +
pop ecx  +
jmp eax  +
jmp CP_CertAddCRLContextToStore  +
mov eax offset CP_CertAddEncodedCRLToStore +
jmp loc_4429E6  +
jmp CP_CertAddEncodedCRLToStore  +
mov eax offset CP_CertEnumCRLsInStore +
jmp loc_4429E6  +
jmp CP_CertEnumCRLsInStore  +
mov eax offset CP_CertFreeCRLContext +
jmp loc_4429E6  +
jmp CP_CertFreeCRLContext  +
mov eax offset CP_CertCreateCRLContext +
jmp loc_4429E6  +
jmp CP_CertCreateCRLContext  +
mov eax offset CP_CertDuplicateCRLContext +
jmp loc_4429E6  +
jmp CP_CertDuplicateCRLContext  +
mov eax offset CP_CertFindCRLInStore +
jmp loc_4429E6  +
jmp CP_CertFindCRLInStore  +
mov eax offset CP_CertDeleteCRLFromStore +
jmp loc_4429E6  +
jmp CP_CertDeleteCRLFromStore  +
mov eax offset CP_CertGetCRLFromStore +
jmp loc_4429E6  +
jmp CP_CertGetCRLFromStore  +
mov eax offset CP_CertIsValidCRLForCertificate +
jmp loc_4429E6  +
jmp CP_CertIsValidCRLForCertificate  +
mov eax offset CP_CertGetCRLContextProperty +
jmp loc_4429E6  +
jmp CP_CertGetCRLContextProperty  +
mov eax offset CP_CertSetCRLContextProperty +
jmp loc_4429E6  +
jmp CP_CertSetCRLContextProperty  +
mov eax offset CP_CertGetCertificateContextProperty +
jmp loc_4429E6  +
jmp CP_CertGetCertificateContextProperty  +
mov eax offset CP_CertEnumCertificateContextProperties +
jmp loc_4429E6  +
jmp CP_CertEnumCertificateContextProperties  +
mov eax offset CP_CertSetCertificateContextProperty +
jmp loc_4429E6  +
jmp CP_CertSetCertificateContextProperty  +
mov eax offset CP_CertAddCertificateContextToStore +
jmp loc_4429E6  +
jmp CP_CertAddCertificateContextToStore  +
mov eax offset CP_CertAddEncodedCertificateToStore +
jmp loc_4429E6  +
jmp CP_CertAddEncodedCertificateToStore  +
mov eax offset CP_CertEnumCertificatesInStore +
jmp loc_4429E6  +
jmp CP_CertEnumCertificatesInStore  +
mov eax offset CP_CertFreeCertificateContext +
jmp loc_4429E6  +
jmp CP_CertFreeCertificateContext  +
mov eax offset CP_CertCreateCertificateContext +
jmp loc_4429E6  +
jmp CP_CertCreateCertificateContext  +
mov eax offset CP_CertDuplicateCertificateContext +
jmp loc_4429E6  +
jmp CP_CertDuplicateCertificateContext  +
mov eax offset CP_CertFindCertificateInStore +
jmp loc_4429E6  +
jmp CP_CertFindCertificateInStore  +
mov eax offset CP_CertFindCertificateInCRL +
jmp loc_4429E6  +
jmp CP_CertFindCertificateInCRL  +
mov eax offset CP_CertDeleteCertificateFromStore +
jmp loc_4429E6  +
jmp CP_CertDeleteCertificateFromStore  +
mov eax offset CP_CertGetSubjectCertificateFromStore +
jmp loc_4429E6  +
jmp CP_CertGetSubjectCertificateFromStore  +
mov eax offset CP_CertGetIssuerCertificateFromStore +
jmp loc_4429E6  +
jmp CP_CertGetIssuerCertificateFromStore  +
mov eax offset CP_CertVerifySubjectCertificateContext +
jmp loc_4429E6  +
jmp CP_CertVerifySubjectCertificateContext  +
mov eax offset CP_CertIsRDNAttrsInCertificateName +
jmp loc_4429E6  +
jmp CP_CertIsRDNAttrsInCertificateName  +
mov eax offset CP_CertGetCertificateChain +
jmp loc_4429E6  +
jmp CP_CertGetCertificateChain  +
mov eax offset CP_CertFreeCertificateChain +
jmp loc_4429E6  +
jmp CP_CertFreeCertificateChain  +
mov eax offset CP_CertDuplicateCertificateChain +
jmp loc_4429E6  +
jmp CP_CertDuplicateCertificateChain  +
mov eax offset CP_CertFindChainInStore +
jmp loc_4429E6  +
jmp CP_CertFindChainInStore  +
mov eax offset CP_CertVerifyCertificateChainPolicy +
jmp loc_4429E6  +
jmp CP_CertVerifyCertificateChainPolicy  +
mov eax offset CP_CertCreateCertificateChainEngine +
jmp loc_4429E6  +
jmp CP_CertCreateCertificateChainEngine  +
mov eax offset CP_CertFreeCertificateChainEngine +
jmp loc_4429E6  +
jmp CP_CertFreeCertificateChainEngine  +
mov eax offset CP_CertGetEnhancedKeyUsage +
jmp loc_4429E6  +
jmp CP_CertGetEnhancedKeyUsage  +
mov eax offset CP_CertGetIntendedKeyUsage +
jmp loc_4429E6  +
jmp CP_CertGetIntendedKeyUsage  +
mov eax offset CP_CryptAcquireCertificatePrivateKey +
jmp loc_4429E6  +
jmp CP_CryptAcquireCertificatePrivateKey  +
mov eax offset CP_CryptEnumOIDInfo +
jmp loc_4429E6  +
jmp CP_CryptEnumOIDInfo  +
mov eax offset CP_CryptFindOIDInfo +
jmp loc_4429E6  +
jmp CP_CryptFindOIDInfo  +
mov eax offset CP_CryptRegisterOIDInfo +
jmp loc_4429E6  +
jmp CP_CryptRegisterOIDInfo  +
mov eax offset CP_CertOpenStore +
jmp loc_4429E6  +
jmp CP_CertOpenStore  +
mov eax offset CP_CertDuplicateStore +
jmp loc_4429E6  +
jmp CP_CertDuplicateStore  +
mov eax offset CP_CertEnumSystemStore +
jmp loc_4429E6  +
jmp CP_CertEnumSystemStore  +
mov eax offset CP_CertOpenSystemStoreA +
jmp loc_4429E6  +
jmp CP_CertOpenSystemStoreA  +
mov eax offset CP_CertOpenSystemStoreW +
jmp loc_4429E6  +
jmp CP_CertOpenSystemStoreW  +
mov eax offset CP_CertEnumSystemStoreLocation +
jmp loc_4429E6  +
jmp CP_CertEnumSystemStoreLocation  +
mov eax offset CP_CertCloseStore +
jmp loc_4429E6  +
jmp CP_CertCloseStore  +
mov eax offset CP_CertAddStoreToCollection +
jmp loc_4429E6  +
jmp CP_CertAddStoreToCollection  +
mov eax offset CP_CertRemoveStoreFromCollection +
jmp loc_4429E6  +
jmp CP_CertRemoveStoreFromCollection  +
mov eax offset CP_CertSaveStore +
jmp loc_4429E6  +
jmp CP_CertSaveStore  +
mov eax offset CP_CertControlStore +
jmp loc_4429E6  +
jmp CP_CertControlStore  +
mov eax offset CP_CertGetPublicKeyLength +
jmp loc_4429E6  +
jmp CP_CertGetPublicKeyLength  +
mov eax offset CP_CryptImportPublicKeyInfoEx +
jmp loc_4429E6  +
jmp CP_CryptImportPublicKeyInfoEx  +
mov eax offset CP_CryptImportPublicKeyInfo +
jmp loc_4429E6  +
jmp CP_CryptImportPublicKeyInfo  +
mov eax offset CP_CryptExportPublicKeyInfoEx +
jmp loc_4429E6  +
jmp CP_CryptExportPublicKeyInfoEx  +
mov eax offset CP_CryptExportPublicKeyInfo +
jmp loc_4429E6  +
jmp CP_CryptExportPublicKeyInfo  +
mov eax offset CP_CertComparePublicKeyInfo +
jmp loc_4429E6  +
jmp CP_CertComparePublicKeyInfo  +
mov eax offset CP_CertCompareCertificateName +
jmp loc_4429E6  +
jmp CP_CertCompareCertificateName  +
mov eax offset CP_CertCompareCertificate +
jmp loc_4429E6  +
jmp CP_CertCompareCertificate  +
mov eax offset CP_CertCompareIntegerBlob +
jmp loc_4429E6  +
jmp CP_CertCompareIntegerBlob  +
mov eax offset CP_CertFindAttribute +
jmp loc_4429E6  +
jmp CP_CertFindAttribute  +
mov eax offset CP_CertFindExtension +
jmp loc_4429E6  +
jmp CP_CertFindExtension  +
mov eax offset CP_CertFindRDNAttr +
jmp loc_4429E6  +
jmp CP_CertFindRDNAttr  +
mov eax offset CP_CryptDecodeObject +
jmp loc_4429E6  +
jmp CP_CryptDecodeObject  +
mov eax offset CP_CryptDecodeObjectEx +
jmp loc_4429E6  +
jmp CP_CryptDecodeObjectEx  +
mov eax offset CP_CryptEncodeObject +
jmp loc_4429E6  +
jmp CP_CryptEncodeObject  +
mov eax offset CP_CryptEncodeObjectEx +
jmp loc_4429E6  +
jmp CP_CryptEncodeObjectEx  +
mov eax offset CP_CryptMsgCalculateEncodedLength +
jmp loc_4429E6  +
jmp CP_CryptMsgCalculateEncodedLength  +
mov eax offset CP_CryptMsgOpenToEncode +
jmp loc_4429E6  +
jmp CP_CryptMsgOpenToEncode  +
mov eax offset CP_CryptMsgOpenToDecode +
jmp loc_4429E6  +
jmp CP_CryptMsgOpenToDecode  +
mov eax offset CP_CryptMsgUpdate +
jmp loc_4429E6  +
jmp CP_CryptMsgUpdate  +
mov eax offset CP_CryptMsgGetParam +
jmp loc_4429E6  +
jmp CP_CryptMsgGetParam  +
mov eax offset CP_CryptMsgControl +
jmp loc_4429E6  +
jmp CP_CryptMsgControl  +
mov eax offset CP_CryptMsgClose +
jmp loc_4429E6  +
jmp CP_CryptMsgClose  +
mov eax offset CP_CryptMsgDuplicate +
jmp loc_4429E6  +
jmp CP_CryptMsgDuplicate  +
mov eax offset CP_CryptSignMessage +
jmp loc_4429E6  +
jmp CP_CryptSignMessage  +
mov eax offset CP_CryptGetMessageSignerCount +
jmp loc_4429E6  +
jmp CP_CryptGetMessageSignerCount  +
mov eax offset CP_CryptVerifyMessageSignature +
jmp loc_4429E6  +
jmp CP_CryptVerifyMessageSignature  +
mov eax offset CP_CryptVerifyDetachedMessageSignature +
jmp loc_4429E6  +
jmp CP_CryptVerifyDetachedMessageSignature  +
mov eax offset CP_CryptEncryptMessage +
jmp loc_4429E6  +
jmp CP_CryptEncryptMessage  +
mov eax offset CP_CryptDecryptMessage +
jmp loc_4429E6  +
jmp CP_CryptDecryptMessage  +
mov eax offset CP_CertAlgIdToOID +
jmp loc_4429E6  +
jmp CP_CertAlgIdToOID  +
mov eax offset CP_CertOIDToAlgId +
jmp loc_4429E6  +
jmp CP_CertOIDToAlgId  +
mov eax offset CP_CryptBinaryToStringA +
jmp loc_4429E6  +
jmp CP_CryptBinaryToStringA  +
mov eax offset CP_CryptBinaryToStringW +
jmp loc_4429E6  +
jmp CP_CryptBinaryToStringW  +
mov eax offset CP_CryptStringToBinaryA +
jmp loc_4429E6  +
jmp CP_CryptStringToBinaryA  +
mov eax offset CP_CryptStringToBinaryW +
jmp loc_4429E6  +
jmp CP_CryptStringToBinaryW  +
mov eax offset CP_CertGetNameStringA +
jmp loc_4429E6  +
jmp CP_CertGetNameStringA  +
mov eax offset CP_CertGetNameStringW +
jmp loc_4429E6  +
jmp CP_CertGetNameStringW  +
mov eax offset CP_CertNameToStrA +
jmp loc_4429E6  +
jmp CP_CertNameToStrA  +
mov eax offset CP_CertNameToStrW +
jmp loc_4429E6  +
jmp CP_CertNameToStrW  +
mov eax offset CP_CertRDNValueToStrA +
jmp loc_4429E6  +
jmp CP_CertRDNValueToStrA  +
mov eax offset CP_CertRDNValueToStrW +
jmp loc_4429E6  +
jmp CP_CertRDNValueToStrW  +
mov eax offset CP_CertStrToNameA +
jmp loc_4429E6  +
jmp CP_CertStrToNameA  +
mov eax offset CP_CertStrToNameW +
jmp loc_4429E6  +
jmp CP_CertStrToNameW  +
mov eax offset CP_CertVerifyCRLTimeValidity +
jmp loc_4429E6  +
jmp CP_CertVerifyCRLTimeValidity  +
jmp loc_4429E6  +
jmp CP_CertVerifyTimeValidity  +
mov eax offset CP_CertVerifyRevocation +
jmp loc_4429E6  +
jmp CP_CertVerifyRevocation  +
mov eax offset CP_CertVerifyValidityNesting +
jmp loc_4429E6  +
jmp CP_CertVerifyValidityNesting  +
mov eax offset CP_CryptHashCertificate +
jmp loc_4429E6  +
jmp CP_CryptHashCertificate  +
mov eax offset CP_CryptHashToBeSigned +
jmp loc_4429E6  +
jmp CP_CryptHashToBeSigned  +
mov eax offset CP_CryptSignAndEncodeCertificate +
jmp loc_4429E6  +
jmp CP_CryptSignAndEncodeCertificate  +
mov eax offset CP_CryptSignCertificate +
jmp loc_4429E6  +
jmp CP_CryptSignCertificate  +
mov eax offset CP_CryptVerifyCertificateSignature +
jmp loc_4429E6  +
jmp CP_CryptVerifyCertificateSignature  +
mov eax offset CP_PFXExportCertStore +
jmp loc_4429E6  +
jmp CP_PFXExportCertStore  +
mov eax offset CP_PFXExportCertStoreEx +
jmp loc_4429E6  +
jmp CP_PFXExportCertStoreEx  +
mov eax offset CP_PFXImportCertStore +
jmp loc_4429E6  +
jmp CP_PFXImportCertStore  +
mov eax offset RegisterEventSourceW +
jmp loc_43F254  +
mov eax offset ReportEventW +
jmp loc_43F254  +
mov eax offset DeregisterEventSource +
jmp loc_43F254  +
mov eax offset OpenThreadToken +
jmp loc_43F254  +
mov eax offset OpenProcessToken +
jmp loc_43F254  +
mov eax offset IsValidSid +
jmp loc_43F254  +
mov eax offset GetSidIdentifierAuthority +
jmp loc_43F254  +
mov eax offset GetSidSubAuthorityCount +
jmp loc_43F254  +
mov eax offset GetSidSubAuthority +
jmp loc_43F254  +
mov eax offset GetTokenInformation +
jmp loc_43F254  +
mov eax offset CopySid +
jmp loc_43F254  +
mov eax offset RegEnumValueW +
jmp loc_43F254  +
mov eax offset AllocateAndInitializeSid +
jmp loc_43F254  +
mov eax offset BuildExplicitAccessWithNameW +
jmp loc_43F254  +
mov eax offset SetEntriesInAclW +
jmp loc_43F254  +
mov eax offset FreeSid +
jmp loc_43F254  +
mov eax offset RegSetValueExW +
jmp loc_43F254  +
mov eax offset InitializeSecurityDescriptor +
jmp loc_43F254  +
mov eax offset SetSecurityDescriptorControl +
jmp loc_43F254  +
mov eax offset SetSecurityDescriptorDacl +
jmp loc_43F254  +
mov eax offset SetSecurityDescriptorOwner +
jmp loc_43F254  +
mov eax offset SetSecurityDescriptorGroup +
jmp loc_43F254  +
mov eax offset RegCreateKeyExW +
jmp loc_43F254  +
mov eax offset SetSecurityInfo +
jmp loc_43F254  +
mov eax offset CryptSetHashParam +
jmp loc_43F254  +
jmp CryptSetHashParam  +
mov eax offset CryptExportKey +
jmp loc_43F254  +
jmp CryptExportKey  +
mov eax offset CryptSetProvParam +
jmp loc_43F254  +
jmp CryptSetProvParam  +
mov eax offset CryptDeriveKey +
jmp loc_43F254  +
jmp CryptDeriveKey  +
mov eax offset CryptSetKeyParam +
jmp loc_43F254  +
jmp CryptSetKeyParam  +
mov eax offset CryptGetKeyParam +
jmp loc_43F254  +
jmp CryptGetKeyParam  +
mov eax offset CryptGetProvParam +
jmp loc_43F254  +
jmp CryptGetProvParam  +
mov eax offset CryptGenRandom +
jmp loc_43F254  +
jmp CryptGenRandom  +
mov eax offset CryptImportKey +
jmp loc_43F254  +
jmp CryptImportKey  +
mov eax offset CryptCreateHash +
jmp loc_43F254  +
jmp CryptCreateHash  +
mov eax offset CryptDestroyKey +
jmp loc_43F254  +
jmp CryptDestroyKey  +
mov eax offset CryptDestroyHash +
jmp loc_43F254  +
jmp CryptDestroyHash  +
mov eax offset CryptHashData +
jmp loc_43F254  +
jmp CryptHashData  +
mov eax offset CryptAcquireContextA +
jmp loc_43F254  +
jmp CryptAcquireContextA  +
mov eax offset CryptAcquireContextW +
jmp loc_43F254  +
jmp CryptAcquireContextW  +
mov eax offset CryptContextAddRef +
jmp loc_43F254  +
jmp CryptContextAddRef  +
mov eax offset CryptDecrypt +
jmp loc_43F254  +
jmp CryptDecrypt  +
mov eax offset CryptDuplicateHash +
jmp loc_43F254  +
jmp CryptDuplicateHash  +
mov eax offset CryptDuplicateKey +
jmp loc_43F254  +
jmp CryptDuplicateKey  +
mov eax offset CryptEncrypt +
jmp loc_43F254  +
jmp CryptEncrypt  +
mov eax offset CryptEnumProvidersA +
jmp loc_43F254  +
jmp CryptEnumProvidersA  +
mov eax offset CryptEnumProvidersW +
jmp loc_43F254  +
jmp CryptEnumProvidersW  +
mov eax offset CryptEnumProviderTypesA +
jmp loc_43F254  +
jmp CryptEnumProviderTypesA  +
mov eax offset CryptEnumProviderTypesW +
jmp loc_43F254  +
jmp CryptEnumProviderTypesW  +
mov eax offset CryptGenKey +
jmp loc_43F254  +
jmp CryptGenKey  +
mov eax offset CryptGetDefaultProviderA +
jmp loc_43F254  +
jmp CryptGetDefaultProviderA  +
mov eax offset CryptGetDefaultProviderW +
jmp loc_43F254  +
jmp CryptGetDefaultProviderW  +
mov eax offset CryptGetHashParam +
jmp loc_43F254  +
jmp CryptGetHashParam  +
mov eax offset CryptGetUserKey +
jmp loc_43F254  +
jmp CryptGetUserKey  +
mov eax offset CryptHashSessionKey +
jmp loc_43F254  +
jmp CryptHashSessionKey  +
mov eax offset CryptReleaseContext +
jmp loc_43F254  +
jmp CryptReleaseContext  +
mov eax offset CryptSignHashA +
jmp loc_43F254  +
jmp CryptSignHashA  +
mov eax offset CryptSignHashW +
jmp loc_43F254  +
jmp CryptSignHashW  +
mov eax offset CryptVerifySignatureA +
jmp loc_43F254  +
jmp CryptVerifySignatureA  +
mov eax offset CryptVerifySignatureW +
jmp loc_43F254  +
jmp CryptVerifySignatureW  +
mov eax offset CertAddCRLContextToStore +
jmp loc_43F2A1  +
jmp CertAddCRLContextToStore  +
mov eax offset CertAddEncodedCRLToStore +
jmp loc_43F2A1  +
jmp CertAddEncodedCRLToStore  +
mov eax offset CertEnumCRLsInStore +
jmp loc_43F2A1  +
jmp CertEnumCRLsInStore  +
mov eax offset CertFreeCRLContext +
jmp loc_43F2A1  +
jmp CertFreeCRLContext  +
mov eax offset CertCreateCRLContext +
jmp loc_43F2A1  +
jmp CertCreateCRLContext  +
mov eax offset CertDuplicateCRLContext +
jmp loc_43F2A1  +
jmp CertDuplicateCRLContext  +
mov eax offset CertFindCRLInStore +
jmp loc_43F2A1  +
jmp CertFindCRLInStore  +
mov eax offset CertDeleteCRLFromStore +
jmp loc_43F2A1  +
jmp CertDeleteCRLFromStore  +
mov eax offset CertGetCRLFromStore +
jmp loc_43F2A1  +
jmp CertGetCRLFromStore  +
mov eax offset CertIsValidCRLForCertificate +
jmp loc_43F2A1  +
jmp CertIsValidCRLForCertificate  +
mov eax offset CertGetCRLContextProperty +
jmp loc_43F2A1  +
jmp CertGetCRLContextProperty  +
mov eax offset CertSetCRLContextProperty +
jmp loc_43F2A1  +
jmp CertSetCRLContextProperty  +
mov eax offset CertGetCertificateContextProperty +
jmp loc_43F2A1  +
jmp CertGetCertificateContextProperty  +
mov eax offset CertEnumCertificateContextProperties +
jmp loc_43F2A1  +
jmp CertEnumCertificateContextProperties  +
mov eax offset CertSetCertificateContextProperty +
jmp loc_43F2A1  +
jmp CertSetCertificateContextProperty  +
mov eax offset CertAddCertificateContextToStore +
jmp loc_43F2A1  +
jmp CertAddCertificateContextToStore  +
mov eax offset CertAddEncodedCertificateToStore +
jmp loc_43F2A1  +
jmp CertAddEncodedCertificateToStore  +
mov eax offset CertEnumCertificatesInStore +
jmp loc_43F2A1  +
jmp CertEnumCertificatesInStore  +
mov eax offset CertFreeCertificateContext +
jmp loc_43F2A1  +
jmp CertFreeCertificateContext  +
mov eax offset CertCreateCertificateContext +
jmp loc_43F2A1  +
jmp CertCreateCertificateContext  +
mov eax offset CertDuplicateCertificateContext +
jmp loc_43F2A1  +
jmp CertDuplicateCertificateContext  +
mov eax offset CertFindCertificateInStore +
jmp loc_43F2A1  +
jmp CertFindCertificateInStore  +
mov eax offset CertFindCertificateInCRL +
jmp loc_43F2A1  +
jmp CertFindCertificateInCRL  +
mov eax offset CertDeleteCertificateFromStore +
jmp loc_43F2A1  +
jmp CertDeleteCertificateFromStore  +
mov eax offset CertGetSubjectCertificateFromStore +
jmp loc_43F2A1  +
jmp CertGetSubjectCertificateFromStore  +
mov eax offset CertGetIssuerCertificateFromStore +
jmp loc_43F2A1  +
jmp CertGetIssuerCertificateFromStore  +
mov eax offset CertVerifySubjectCertificateContext +
jmp loc_43F2A1  +
jmp CertVerifySubjectCertificateContext  +
mov eax offset CertIsRDNAttrsInCertificateName +
jmp loc_43F2A1  +
jmp CertIsRDNAttrsInCertificateName  +
mov eax offset CertGetCertificateChain +
jmp loc_43F2A1  +
jmp CertGetCertificateChain  +
mov eax offset CertFreeCertificateChain +
jmp loc_43F2A1  +
jmp CertFreeCertificateChain  +
mov eax offset CertDuplicateCertificateChain +
jmp loc_43F2A1  +
jmp CertDuplicateCertificateChain  +
mov eax offset CertFindChainInStore +
jmp loc_43F2A1  +
jmp CertFindChainInStore  +
mov eax offset CertVerifyCertificateChainPolicy +
jmp loc_43F2A1  +
jmp CertVerifyCertificateChainPolicy  +
mov eax offset CertCreateCertificateChainEngine +
jmp loc_43F2A1  +
jmp CertCreateCertificateChainEngine  +
mov eax offset CertFreeCertificateChainEngine +
jmp loc_43F2A1  +
jmp CertFreeCertificateChainEngine  +
mov eax offset CertGetEnhancedKeyUsage +
jmp loc_43F2A1  +
jmp CertGetEnhancedKeyUsage  +
mov eax offset CertGetIntendedKeyUsage +
jmp loc_43F2A1  +
jmp CertGetIntendedKeyUsage  +
mov eax offset CryptAcquireCertificatePrivateKey +
jmp loc_43F2A1  +
jmp CryptAcquireCertificatePrivateKey  +
mov eax offset CryptEnumOIDInfo +
jmp loc_43F2A1  +
jmp CryptEnumOIDInfo  +
mov eax offset CryptFindOIDInfo +
jmp loc_43F2A1  +
jmp CryptFindOIDInfo  +
mov eax offset CryptRegisterOIDInfo +
jmp loc_43F2A1  +
jmp CryptRegisterOIDInfo  +
mov eax offset CertOpenStore +
jmp loc_43F2A1  +
jmp CertOpenStore  +
mov eax offset CertDuplicateStore +
jmp loc_43F2A1  +
jmp CertDuplicateStore  +
mov eax offset CertEnumSystemStore +
jmp loc_43F2A1  +
jmp CertEnumSystemStore  +
mov eax offset CertOpenSystemStoreA +
jmp loc_43F2A1  +
jmp CertOpenSystemStoreA  +
mov eax offset CertOpenSystemStoreW +
jmp loc_43F2A1  +
jmp CertOpenSystemStoreW  +
mov eax offset CertEnumSystemStoreLocation +
jmp loc_43F2A1  +
jmp CertEnumSystemStoreLocation  +
mov eax offset CertCloseStore +
jmp loc_43F2A1  +
jmp CertCloseStore  +
mov eax offset CertAddStoreToCollection +
jmp loc_43F2A1  +
jmp CertAddStoreToCollection  +
mov eax offset CertRemoveStoreFromCollection +
jmp loc_43F2A1  +
jmp CertRemoveStoreFromCollection  +
mov eax offset CertSaveStore +
jmp loc_43F2A1  +
jmp CertSaveStore  +
mov eax offset CertControlStore +
jmp loc_43F2A1  +
jmp CertControlStore  +
mov eax offset CertGetPublicKeyLength +
jmp loc_43F2A1  +
jmp CertGetPublicKeyLength  +
mov eax offset CryptImportPublicKeyInfoEx +
jmp loc_43F2A1  +
jmp CryptImportPublicKeyInfoEx  +
mov eax offset CryptImportPublicKeyInfo +
jmp loc_43F2A1  +
jmp CryptImportPublicKeyInfo  +
mov eax offset CryptExportPublicKeyInfoEx +
jmp loc_43F2A1  +
jmp CryptExportPublicKeyInfoEx  +
mov eax offset CryptExportPublicKeyInfo +
jmp loc_43F2A1  +
jmp CryptExportPublicKeyInfo  +
mov eax offset CertComparePublicKeyInfo +
jmp loc_43F2A1  +
jmp CertComparePublicKeyInfo  +
mov eax offset CertCompareCertificateName +
jmp loc_43F2A1  +
jmp CertCompareCertificateName  +
mov eax offset CertCompareCertificate +
jmp loc_43F2A1  +
jmp CertCompareCertificate  +
mov eax offset CertCompareIntegerBlob +
jmp loc_43F2A1  +
jmp CertCompareIntegerBlob  +
mov eax offset CertFindAttribute +
jmp loc_43F2A1  +
jmp CertFindAttribute  +
mov eax offset CertFindExtension +
jmp loc_43F2A1  +
jmp CertFindExtension  +
mov eax offset CertFindRDNAttr +
jmp loc_43F2A1  +
jmp CertFindRDNAttr  +
mov eax offset CryptDecodeObject +
jmp loc_43F2A1  +
jmp CryptDecodeObject  +
mov eax offset CryptDecodeObjectEx +
jmp loc_43F2A1  +
jmp CryptDecodeObjectEx  +
mov eax offset CryptEncodeObject +
jmp loc_43F2A1  +
jmp CryptEncodeObject  +
mov eax offset CryptEncodeObjectEx +
jmp loc_43F2A1  +
jmp CryptEncodeObjectEx  +
mov eax offset CryptMsgCalculateEncodedLength +
jmp loc_43F2A1  +
jmp CryptMsgCalculateEncodedLength  +
mov eax offset CryptMsgOpenToEncode +
jmp loc_43F2A1  +
jmp CryptMsgOpenToEncode  +
mov eax offset CryptMsgOpenToDecode +
jmp loc_43F2A1  +
jmp CryptMsgOpenToDecode  +
mov eax offset CryptMsgUpdate +
jmp loc_43F2A1  +
jmp CryptMsgUpdate  +
mov eax offset CryptMsgGetParam +
jmp loc_43F2A1  +
jmp CryptMsgGetParam  +
mov eax offset CryptMsgControl +
jmp loc_43F2A1  +
jmp CryptMsgControl  +
mov eax offset CryptMsgClose +
jmp loc_43F2A1  +
jmp CryptMsgClose  +
mov eax offset CryptMsgDuplicate +
jmp loc_43F2A1  +
jmp CryptMsgDuplicate  +
mov eax offset CryptSignMessage +
jmp loc_43F2A1  +
jmp CryptSignMessage  +
mov eax offset CryptGetMessageSignerCount +
jmp loc_43F2A1  +
jmp CryptGetMessageSignerCount  +
mov eax offset CryptVerifyMessageSignature +
jmp loc_43F2A1  +
jmp CryptVerifyMessageSignature  +
mov eax offset CryptVerifyDetachedMessageSignature +
jmp loc_43F2A1  +
jmp CryptVerifyDetachedMessageSignature  +
mov eax offset CryptEncryptMessage +
jmp loc_43F2A1  +
jmp CryptEncryptMessage  +
mov eax offset CryptDecryptMessage +
jmp loc_43F2A1  +
jmp CryptDecryptMessage  +
mov eax offset CertAlgIdToOID +
jmp loc_43F2A1  +
jmp CertAlgIdToOID  +
mov eax offset CertOIDToAlgId +
jmp loc_43F2A1  +
jmp CertOIDToAlgId  +
mov eax offset CryptBinaryToStringA +
jmp loc_43F2A1  +
jmp CryptBinaryToStringA  +
mov eax offset CryptBinaryToStringW +
jmp loc_43F2A1  +
jmp CryptBinaryToStringW  +
mov eax offset CryptStringToBinaryA +
jmp loc_43F2A1  +
jmp CryptStringToBinaryA  +
mov eax offset CryptStringToBinaryW +
jmp loc_43F2A1  +
jmp CryptStringToBinaryW  +
mov eax offset CertGetNameStringA +
jmp loc_43F2A1  +
jmp CertGetNameStringA  +
mov eax offset CertGetNameStringW +
jmp loc_43F2A1  +
jmp CertGetNameStringW  +
mov eax offset CertNameToStrA +
jmp loc_43F2A1  +
jmp CertNameToStrA  +
mov eax offset CertNameToStrW +
jmp loc_43F2A1  +
jmp CertNameToStrW  +
mov eax offset CertRDNValueToStrA +
jmp loc_43F2A1  +
jmp CertRDNValueToStrA  +
mov eax offset CertRDNValueToStrW +
jmp loc_43F2A1  +
jmp CertRDNValueToStrW  +
mov eax offset CertStrToNameA +
jmp loc_43F2A1  +
jmp CertStrToNameA  +
mov eax offset CertStrToNameW +
jmp loc_43F2A1  +
jmp CertStrToNameW  +
mov eax offset CertVerifyCRLTimeValidity +
jmp loc_43F2A1  +
jmp CertVerifyCRLTimeValidity  +
mov eax offset CertVerifyTimeValidity +
jmp loc_43F2A1  +
jmp CertVerifyTimeValidity  +
mov eax offset CertVerifyRevocation +
jmp loc_43F2A1  +
jmp CertVerifyRevocation  +
mov eax offset CertVerifyValidityNesting +
jmp loc_43F2A1  +
jmp CertVerifyValidityNesting  +
mov eax offset CryptHashCertificate +
jmp loc_43F2A1  +
jmp CryptHashCertificate  +
mov eax offset CryptHashToBeSigned +
jmp loc_43F2A1  +
jmp CryptHashToBeSigned  +
mov eax offset CryptSignAndEncodeCertificate +
jmp loc_43F2A1  +
jmp CryptSignAndEncodeCertificate  +
mov eax offset CryptSignCertificate +
jmp loc_43F2A1  +
jmp CryptSignCertificate  +
mov eax offset CryptVerifyCertificateSignature +
jmp loc_43F2A1  +
jmp CryptVerifyCertificateSignature  +
***
mov eax offset PFXExportCertStore +
jmp loc_43F2A1  +
***
jmp PFXExportCertStore  +
***
mov eax offset PFXExportCertStoreEx +
jmp loc_43F2A1  +
***
jmp PFXExportCertStoreEx  +
***
mov eax offset PFXImportCertStore +
jmp loc_43F2A1  +
***
jmp PFXImportCertStore  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_43F480  +
jmp __SEH_epilog4  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
mov eax [esp+arg_C] +
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_443BF1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_443C0D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_443C29  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_443C6A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_443C37  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_443C65  +
cmp edx [esp+arg_4] +
ja loc_443C65  +
jb loc_443C66  +
cmp eax [esp+arg_0] +
jbe loc_443C66  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_443C74  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
