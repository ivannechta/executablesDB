mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
movzx ecx word ptr [edi] +
movzx eax cx +
test eax eax +
jz loc_1001564  +
cmp eax 2Ah +
jz loc_1001542  +
cmp eax 3Fh +
jz loc_1001524  +
mov esi ds:towupper +
push ebx  +
push ecx  +
call esi  +
mov ebx [ebp+arg_4] +
movzx ecx word ptr [ebx] +
push ecx  +
mov word ptr [ebp+arg_4+2] ax +
call esi  +
pop ecx  +
pop ecx  +
mov cx word ptr [ebp+arg_4+2] +
cmp ax cx +
jnz loc_100151F  +
add ebx 2 +
push ebx  +
add edi 2 +
push edi  +
call sub_10014C5  +
test eax eax +
jz loc_100151F  +
xor eax eax +
inc eax  +
jmp loc_1001521  +
xor eax eax +
pop ebx  +
jmp loc_100156F  +
mov eax [ebp+arg_4] +
cmp word ptr [eax] 0 +
jz loc_100153E  +
add eax 2 +
push eax  +
add edi 2 +
push edi  +
call sub_10014C5  +
test eax eax +
jnz loc_100155F  +
xor eax eax +
jmp loc_100156F  +
mov esi [ebp+arg_4] +
add edi 2 +
push esi  +
push edi  +
call sub_10014C5  +
test eax eax +
jnz loc_100155F  +
mov ax [esi] +
inc esi  +
inc esi  +
test ax ax +
jnz loc_1001548  +
jmp loc_100153E  +
xor eax eax +
inc eax  +
jmp loc_100156F  +
mov ecx [ebp+arg_4] +
xor eax eax +
cmp [ecx] ax +
setz al  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 8  +
call sub_100457F  +
mov esi eax +
test esi esi +
jnz loc_1001592  +
xor eax eax +
inc eax  +
jmp loc_10015DE  +
push 0  +
push [ebp+lpString]  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [esi] eax +
test eax eax +
jz loc_100158D  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1004BF4  +
and dword ptr [esi+4] 0 +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
test eax eax +
jnz loc_10015D2  +
mov [ecx] esi +
jmp loc_10015DC  +
mov eax ecx +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_10015D0  +
mov [eax+4] esi +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1001647  +
push esi  +
push 0  +
push dword ptr [eax]  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov esi [ebp+arg_4] +
mov [esi] eax +
test eax eax +
jz loc_1001643  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
mov eax [ebp+arg_0] +
push dword ptr [eax]  +
push dword ptr [esi]  +
call sub_1004BF4  +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
push eax  +
mov [edi] ecx +
call sub_100485A  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100485A  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push 2000000h  +
push 3  +
push esi  +
xor eax eax +
xor ebx ebx +
inc ebx  +
push ebx  +
push esi  +
push [ebp+lpFileName]  +
mov [ebp+LocalFileTime.dwLowDateTime] esi +
mov [ebp+LocalFileTime.dwHighDateTime] esi +
mov [ebp+Time.wYear] ax +
mov [ebp+Time.wMonth] ax +
mov [ebp+Time.wDayOfWeek] ax +
mov [ebp+Time.wDay] ax +
mov [ebp+Time.wHour] ax +
mov [ebp+Time.wMinute] ax +
mov [ebp+Time.wSecond] ax +
mov [ebp+Time.wMilliseconds] ax +
mov [ebp+var_4] esi +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_100171E  +
lea eax [ebp+var_40] +
push eax  +
push [ebp+lpFileName]  +
call ds:_wstat  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10016C1  +
mov eax ebx +
jmp loc_10017E3  +
lea eax [ebp-24h] +
push eax  +
call ds:localtime  +
pop ecx  +
cmp eax esi +
jz loc_10016BA  +
mov ecx [ebp+arg_4] +
mov edx [ebp-2Ch] +
mov [ecx] edx +
mov ecx 76Ch +
add cx [eax+14h] +
mov [ebp+Time.wYear] cx +
mov cx [eax+10h] +
inc cx  +
mov [ebp+Time.wMonth] cx +
mov cx [eax+18h] +
mov [ebp+Time.wDayOfWeek] cx +
mov cx [eax+0Ch] +
mov [ebp+Time.wDay] cx +
mov cx [eax+8] +
mov [ebp+Time.wHour] cx +
mov cx [eax+4] +
mov [ebp+Time.wMinute] cx +
mov ax [eax] +
mov [ebp+Time.wSecond] ax +
xor eax eax +
mov [ebp+Time.wMilliseconds] ax +
jmp loc_1001780  +
push esi  +
push edi  +
call ds:GetFileSize  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
lea eax [ebp+FileTime] +
push eax  +
push edi  +
call ds:GetFileInformationByHandle  +
push edi  +
test eax eax +
jnz loc_1001746  +
call ds:CloseHandle  +
jmp loc_10016BA  +
call ds:CloseHandle  +
test eax eax +
jz loc_10016BA  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp-60h] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jz loc_10016BA  +
lea eax [ebp+Time] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_10016BA  +
lea eax [ebp+var_4] +
push eax  +
call sub_1004409  +
mov ebx eax +
mov eax [ebp+var_4] +
dec eax  +
neg eax  +
sbb eax eax +
mov edi 0FEh +
push edi  +
push [ebp+lpDateStr]  +
not eax  +
and eax offset aMmDdYyyy +
push eax  +
lea eax [ebp+Time] +
push eax  +
push esi  +
push ebx  +
call ds:GetDateFormatW  +
test eax eax +
jnz loc_10017BE  +
call sub_1004213  +
xor eax eax +
inc eax  +
jmp loc_10017E3  +
mov eax [ebp+var_4] +
dec eax  +
neg eax  +
push edi  +
push [ebp+lpTimeStr]  +
sbb eax eax +
not eax  +
and eax offset aHhMmSs +
push eax  +
lea eax [ebp+Time] +
push eax  +
push esi  +
push ebx  +
call ds:GetTimeFormatW  +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi 1F5h +
push esi  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1004C7A  +
inc esi  +
cmp esi 21Dh +
jbe loc_10017F7  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A10h +
mov eax dword_1009000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_A0C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_A00] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_A08] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_9FC] eax +
mov eax [ebp+arg_14] +
push ebx  +
push esi  +
mov [ebp+var_A10] eax +
mov eax [ebp+arg_18] +
push edi  +
mov [ebp+var_A04] eax +
mov eax [ebp+arg_1C] +
xor esi esi +
push 7FCh  +
mov [ebp+nBufferLength] eax +
lea eax [ebp+var_800] +
push esi  +
push eax  +
mov [ebp+FilePart] esi +
mov dword ptr [ebp+String1] esi +
call memset  +
add esp 0Ch +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
mov [ebp+var_9E8] esi +
mov [ebp+lpString] esi +
mov [ebp+lpszShortPath] esi +
call sub_1004BB1  +
push 8  +
xor ebx ebx +
push edi  +
lea eax [ebp+var_994] +
inc ebx  +
push eax  +
mov [ebp+var_9DC] ebx +
mov [ebp+var_9D4] 120C0h +
mov [ebp+var_9D0] esi +
mov [ebp+var_9CC] ebx +
mov [ebp+var_9C8] esi +
mov [ebp+var_9C4] offset aR +
mov [ebp+var_9C0] esi +
mov [ebp+var_9BC] esi +
mov [ebp+var_9B8] esi +
mov [ebp+var_9B4] esi +
mov [ebp+var_9B0] esi +
mov [ebp+var_9AC] esi +
mov [ebp+var_9A8] esi +
mov [ebp+var_9A4] esi +
mov [ebp+var_9A0] esi +
mov [ebp+var_99C] esi +
call sub_1004BB1  +
mov eax [ebp+var_A08] +
push 8  +
mov [ebp+var_968] eax +
push edi  +
lea eax [ebp+var_944] +
push eax  +
mov [ebp+var_98C] 0Ah +
mov [ebp+var_984] esi +
mov [ebp+var_980] esi +
mov [ebp+var_97C] ebx +
mov [ebp+var_978] esi +
mov [ebp+var_974] offset aQ +
mov [ebp+var_970] esi +
mov [ebp+var_96C] esi +
mov [ebp+var_964] esi +
mov [ebp+var_960] esi +
mov [ebp+var_95C] esi +
mov [ebp+var_958] esi +
mov [ebp+var_954] esi +
mov [ebp+var_950] esi +
mov [ebp+var_94C] esi +
call sub_1004BB1  +
mov [ebp+var_93C] 0Ah +
mov eax [ebp+var_9FC] +
push 8  +
mov [ebp+var_918] eax +
push edi  +
lea eax [ebp+var_8F4] +
push eax  +
mov [ebp+var_934] esi +
mov [ebp+var_930] esi +
mov [ebp+var_92C] ebx +
mov [ebp+var_928] esi +
mov [ebp+var_924] offset aF +
mov [ebp+var_920] esi +
mov [ebp+var_91C] esi +
mov [ebp+var_914] esi +
mov [ebp+var_910] esi +
mov [ebp+var_90C] esi +
mov [ebp+var_908] esi +
mov [ebp+var_904] esi +
mov [ebp+var_900] esi +
mov [ebp+var_8FC] esi +
call sub_1004BB1  +
mov eax [ebp+var_A10] +
push 8  +
mov [ebp+var_8C8] eax +
push edi  +
lea eax [ebp+var_8A4] +
push eax  +
mov [ebp+var_8EC] 0Ah +
mov [ebp+var_8E4] esi +
mov [ebp+var_8E0] esi +
mov [ebp+var_8DC] ebx +
mov [ebp+var_8D8] esi +
mov [ebp+var_8D4] offset aT +
mov [ebp+var_8D0] esi +
mov [ebp+var_8CC] esi +
mov [ebp+var_8C4] esi +
mov [ebp+var_8C0] esi +
mov [ebp+var_8BC] esi +
mov [ebp+var_8B8] esi +
mov [ebp+var_8B4] esi +
mov [ebp+var_8B0] esi +
mov [ebp+var_8AC] esi +
call sub_1004BB1  +
mov eax [ebp+nBufferLength] +
push 8  +
mov [ebp+var_878] eax +
push edi  +
lea eax [ebp+var_854] +
push eax  +
mov [ebp+var_89C] 0Ah +
mov [ebp+var_894] 20000h +
mov [ebp+var_890] esi +
mov [ebp+var_88C] ebx +
mov [ebp+var_888] esi +
mov [ebp+var_884] offset a?_0 +
mov [ebp+var_880] esi +
mov [ebp+var_87C] esi +
mov [ebp+var_874] esi +
mov [ebp+var_870] esi +
mov [ebp+var_86C] esi +
mov [ebp+var_868] esi +
mov [ebp+var_864] esi +
mov [ebp+var_860] esi +
mov [ebp+var_85C] esi +
call sub_1004BB1  +
mov edi [ebp+var_A04] +
mov [ebp+var_84C] ebx +
mov [ebp+var_844] 0CFFF1h +
mov [ebp+var_840] esi +
mov [ebp+var_83C] esi +
mov [ebp+var_838] esi +
mov [ebp+var_834] offset dword_1001244 +
mov [ebp+var_830] esi +
mov [ebp+var_82C] esi +
mov [ebp+var_828] edi +
mov [ebp+var_824] esi +
mov [ebp+var_820] esi +
mov [ebp+var_81C] esi +
mov [ebp+var_818] esi +
mov [ebp+var_814] esi +
mov [ebp+var_810] esi +
mov [ebp+var_80C] esi +
call sub_1006E35  +
mov [edi] eax +
cmp eax esi +
jnz loc_1001BE7  +
push 0Eh  +
call ds:SetLastError  +
call sub_1004213  +
call sub_1004180  +
push eax  +
push 1389h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push offset aSS  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10059D1  +
add esp 18h +
mov eax ebx +
jmp loc_1001F50  +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
push 6  +
push 0FFFFFFFFh  +
push [ebp+var_A0C]  +
mov [ebp+var_828] edi +
push [ebp+arg_0]  +
call sub_1006AAD  +
test eax eax +
jz loc_1001BB6  +
mov ecx [ebp+var_9B8] +
mov edi [ebp+var_A00] +
mov eax [ebp+nBufferLength] +
mov [edi] ecx +
mov eax [eax] +
cmp eax ebx +
jnz loc_1001C88  +
cmp [ebp+arg_0] 2 +
jbe loc_1001C80  +
push 800401E4h  +
call ds:SetLastError  +
call sub_1004213  +
call sub_1004180  +
push eax  +
push 1389h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push offset aSS  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10059D1  +
add esp 18h +
push 34h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1004C7A  +
jmp loc_1001BE0  +
cmp eax ebx +
jz loc_1001F4E  +
push offset pszTrimChars  +
push ecx  +
call ds:StrTrimW  +
push esi  +
push dword ptr [edi]  +
call sub_1004462  +
test eax eax +
jnz loc_1001CAC  +
cmp [ebp+var_9C8] esi +
jz loc_1001CAC  +
push 41h  +
jmp loc_1001C67  +
mov eax [edi] +
cmp eax esi +
jz loc_1001CCE  +
push offset a?  +
push eax  +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
mov [ebp+FilePart] eax +
cmp eax esi +
jz loc_1001CCE  +
push 3Ah  +
jmp loc_1001C67  +
push esi  +
push dword ptr [edi]  +
call sub_1004462  +
test eax eax +
jz loc_1001F4E  +
push esi  +
push dword ptr [edi]  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+var_9E8] eax +
cmp eax esi +
jz loc_1001BB6  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
push dword ptr [edi]  +
push [ebp+var_9E8]  +
call sub_1004BF4  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpszShortPath]  +
push esi  +
push dword ptr [edi]  +
call ds:GetFullPathNameW  +
mov [ebp+nBufferLength] eax +
cmp eax esi +
jz loc_1001BB1  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+lpszShortPath] eax +
cmp eax esi +
jnz loc_1001D87  +
call sub_1004180  +
push eax  +
push 1389h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push offset aSS  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10059D1  +
add esp 18h +
lea eax [ebp+var_9E8] +
push eax  +
call sub_100485A  +
jmp loc_1001BE0  +
lea ecx [ebp+FilePart] +
push ecx  +
push eax  +
push [ebp+nBufferLength]  +
push dword ptr [edi]  +
call ds:GetFullPathNameW  +
test eax eax +
jnz loc_1001DA8  +
call sub_1004213  +
jmp loc_1001D4C  +
push esi  +
push [ebp+lpString]  +
push [ebp+lpszShortPath]  +
call ds:GetLongPathNameW  +
mov [ebp+nBufferLength] eax +
cmp eax esi +
jnz loc_1001E0B  +
call sub_1004213  +
call sub_1004180  +
push eax  +
push 1389h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push offset aSS  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10059D1  +
add esp 18h +
lea eax [ebp+var_9E8] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpszShortPath] +
jmp loc_1001D7C  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+lpString] eax +
cmp eax esi +
jz loc_1001DCA  +
mov ecx [ebp+nBufferLength] +
add ecx 5 +
push ecx  +
push eax  +
push [ebp+lpszShortPath]  +
call ds:GetLongPathNameW  +
test eax eax +
jnz loc_1001E73  +
push 3Ah  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1004C7A  +
lea eax [ebp+var_9E8] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpszShortPath] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpString] +
jmp loc_1001D7C  +
push edi  +
call sub_100485A  +
push esi  +
push [ebp+lpString]  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [edi] eax +
cmp eax esi +
jnz loc_1001EC1  +
call sub_1004180  +
push eax  +
push 1389h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push offset aSS  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10059D1  +
add esp 18h +
jmp loc_1001E50  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push dword ptr [edi]  +
call sub_1004BF4  +
push dword ptr [edi]  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_1001EEB  +
call sub_1004213  +
jmp loc_1001E95  +
test al 10h +
jz loc_1001E3A  +
lea eax [ebp+String1] +
push eax  +
push 400h  +
call ds:GetCurrentDirectoryW  +
push 400h  +
push offset asc_1001220  +
lea eax [ebp+String1] +
push eax  +
call sub_1004C37  +
push esi  +
push ebx  +
push dword ptr [edi]  +
lea eax [ebp+String1] +
push eax  +
call sub_1004483  +
test eax eax +
jnz loc_1001F4E  +
push esi  +
push offset a___  +
push [ebp+var_9E8]  +
call sub_1004B84  +
mov [ebp+FilePart] eax +
cmp eax esi +
jnz loc_1001E3A  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003BC6  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1001F79  +
mov dword_1009024 eax +
jmp loc_1001F7E  +
mov eax dword_1009024 +
push esi  +
push 2Ah  +
mov esi eax +
pop edx  +
jmp loc_1001F93  +
cmp word ptr [eax] 0 +
jz loc_1001FB1  +
inc eax  +
inc eax  +
mov dword_1009024 eax +
cmp [eax] dx +
jnz loc_1001F86  +
cmp word ptr [eax] 0 +
jz loc_1001FB1  +
xor ecx ecx +
mov [eax] cx +
jmp loc_1001FAA  +
test cx cx +
jz loc_1001FB9  +
inc eax  +
inc eax  +
mov dword_1009024 eax +
movzx ecx word ptr [eax] +
cmp cx dx +
jz loc_1001FA5  +
movzx eax word ptr [esi] +
neg eax  +
sbb eax eax +
and eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1001FF5  +
push [ebp+arg_0]  +
call sub_100485A  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100485A  +
mov eax [esi+4] +
mov [ebp+arg_0] eax +
jmp loc_1001FDC  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002017  +
cmp ecx 7FFFFFFFh +
jbe loc_100201C  +
mov eax 80070057h +
test eax eax +
jl loc_1002059  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1002049  +
cmp eax esi +
ja loc_1002049  +
jnz loc_1002054  +
jmp loc_100204E  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 400h +
mov eax dword_1009000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi 1F8h +
xor edi edi +
push esi  +
lea eax [ebp+var_3F8] +
push edi  +
push eax  +
mov dword ptr [ebp+DateStr] edi +
call memset  +
push esi  +
lea eax [ebp+var_1FC] +
push edi  +
push eax  +
mov dword ptr [ebp+TimeStr] edi +
call memset  +
add esp 18h +
mov [ebp+var_400] edi +
cmp [ebp+arg_4] edi +
jnz loc_100215E  +
cmp [ebp+arg_C] edi +
jz loc_1002123  +
lea eax [ebp+TimeStr] +
push eax  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+var_400] +
push eax  +
push ebx  +
call sub_1001651  +
test eax eax +
jnz loc_1002110  +
lea eax [ebp+TimeStr] +
push eax  +
lea eax [ebp+DateStr] +
push eax  +
push [ebp+var_400]  +
mov eax ds:_iob +
push offset a10ld9s12s  +
push 1  +
add eax 20h +
push 3  +
push eax  +
call sub_10059D1  +
add esp 1Ch +
jmp loc_1002123  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1004C7A  +
mov eax ds:_iob +
add eax 20h +
push ebx  +
cmp [ebp+arg_8] edi +
jz loc_1002145  +
push offset aS  +
push 1  +
push 1  +
push eax  +
call sub_10059D1  +
add esp 14h +
jmp loc_100215E  +
push eax  +
call sub_1004C7A  +
mov eax ds:_iob +
push offset asc_1001264  +
add eax 20h +
push eax  +
call sub_1004C7A  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1003BC6  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 280h +
mov eax dword_1009000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ds:GetEnvironmentVariableW +
push edi  +
push ebx  +
mov [ebp+lpString] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov edi offset Name +
push edi  +
mov dword ptr [ebp+var_274] eax +
mov [ebp+lpFileName] ebx +
mov [ebp+var_26C] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_27C] ebx +
mov [ebp+var_260] ebx +
mov [ebp+var_258] ebx +
mov [ebp+var_268] ebx +
call esi  +
mov [ebp+hFindFile] eax +
cmp eax ebx +
jz loc_1002239  +
lea eax [eax+eax+14h] +
push eax  +
mov [ebp+dwBytes] eax +
call sub_100457F  +
mov [ebp+var_260] eax +
cmp eax ebx +
jnz loc_1002208  +
xor eax eax +
inc eax  +
jmp loc_1002621  +
push [ebp+hFindFile]  +
push eax  +
push edi  +
call esi  +
push [ebp+dwBytes]  +
call sub_100457F  +
mov [ebp+var_258] eax +
cmp [ebp+var_260] ebx +
jnz loc_1002239  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
jmp loc_1002200  +
mov edi [ebp+lpString] +
push ebx  +
push edi  +
call sub_1004462  +
mov esi eax +
add esi 0Fh +
lea eax [esi+esi] +
push eax  +
call sub_100457F  +
mov [ebp+lpFileName] eax +
cmp eax ebx +
jnz loc_1002278  +
lea eax [ebp+var_268] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_258] +
push eax  +
call sub_100485A  +
jmp loc_100222B  +
push eax  +
call sub_1004628  +
mov ecx [ebp+lpFileName] +
cmp eax ebx +
jz loc_100228E  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1002288  +
push ebx  +
push edi  +
call sub_1004462  +
dec esi  +
cmp word ptr [edi+eax*2-2] 5Ch +
push edi  +
jz loc_10022A6  +
push offset aS_  +
jmp loc_10022AB  +
push offset aS__0  +
push esi  +
push [ebp+lpFileName]  +
call sub_1002001  +
add esp 10h +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push ebx  +
push [ebp+lpFileName]  +
call ds:FindFirstFileExW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_10025F2  +
push ebx  +
push edi  +
call sub_1004462  +
mov esi eax +
push ebx  +
lea eax [ebp-228h] +
push eax  +
call sub_1004462  +
lea edi [esi+eax+0Ah] +
lea esi [edi+edi] +
push esi  +
call sub_100457F  +
mov [ebp+var_26C] eax +
cmp eax ebx +
jz loc_10025B2  +
cmp esi ebx +
jz loc_100231B  +
mov [eax] bl +
inc eax  +
dec esi  +
jnz loc_1002315  +
mov esi [ebp+lpString] +
push ebx  +
push esi  +
call sub_1004462  +
cmp word ptr [esi+eax*2-2] 5Ch +
lea eax [ebp-228h] +
push eax  +
push esi  +
jz loc_100233F  +
push offset aSS_0  +
jmp loc_1002344  +
push offset aSS_1  +
push edi  +
push [ebp+var_26C]  +
call sub_1002001  +
add esp 14h +
test byte ptr [ebp+String] 10h +
jz loc_1002367  +
lea eax [ebp+var_26C] +
jmp loc_100258A  +
push ebx  +
lea eax [ebp-228h] +
push eax  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_10025B2  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
lea eax [ebp-228h] +
push eax  +
push [ebp+lpMem]  +
call sub_1004BF4  +
push ebx  +
mov esi offset a_ +
push esi  +
push dword ptr [ebp+var_274]  +
call sub_1004B84  +
test eax eax +
jz loc_10023E8  +
push ebx  +
push esi  +
push [ebp+lpMem]  +
call sub_1004B84  +
test eax eax +
jnz loc_10023E8  +
push [ebp+lpMem]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_1004C37  +
push [ebp+lpMem]  +
push dword ptr [ebp+var_274]  +
call sub_10014C5  +
test eax eax +
jz loc_1002420  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_26C]  +
call sub_1002060  +
mov [ebp+var_27C] 1 +
jmp loc_1002578  +
push [ebp+var_258]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push [ebp+var_260]  +
push [ebp+var_258]  +
call sub_1004BF4  +
mov edi [ebp+var_258] +
push ebx  +
push offset asc_10012F0  +
push edi  +
call sub_1004B84  +
cmp eax ebx +
jz loc_1002470  +
push ebx  +
xor ecx ecx +
push edi  +
mov [eax] cx +
call sub_1004462  +
lea eax [edi+eax*2+2] +
mov [ebp+dwBytes] eax +
jmp loc_1002564  +
mov edi [ebp+var_258] +
mov [ebp+dwBytes] ebx +
jmp loc_1002564  +
push ebx  +
push dword ptr [ebp+var_274]  +
call sub_1004462  +
push ebx  +
push edi  +
mov esi eax +
call sub_1004462  +
lea esi [esi+eax+19h] +
lea eax [esi+esi] +
push eax  +
call sub_100457F  +
mov [ebp+var_268] eax +
cmp eax ebx +
jz loc_10025C3  +
push eax  +
call sub_1004628  +
mov ecx [ebp+var_268] +
cmp eax ebx +
jz loc_10024C7  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_10024C1  +
cmp word ptr [edi] 2Eh +
jnz loc_100251C  +
push edi  +
push dword ptr [ebp+var_274]  +
dec esi  +
push offset aSS_1  +
push esi  +
push [ebp+var_268]  +
call sub_1002001  +
add esp 14h +
push [ebp+lpMem]  +
push [ebp+var_268]  +
call sub_10014C5  +
test eax eax +
jz loc_100251C  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_26C]  +
call sub_1002060  +
mov [ebp+var_27C] 1 +
mov edi [ebp+dwBytes] +
cmp edi ebx +
jnz loc_100252A  +
xor edi edi +
jmp loc_1002558  +
push ebx  +
push offset asc_10012F0  +
push edi  +
call sub_1004B84  +
cmp eax ebx +
jz loc_1002552  +
push ebx  +
xor ecx ecx +
push edi  +
mov [eax] cx +
call sub_1004462  +
lea eax [edi+eax*2+2] +
mov [ebp+dwBytes] eax +
jmp loc_1002558  +
mov [ebp+dwBytes] ebx +
lea eax [ebp+var_268] +
push eax  +
call sub_100485A  +
cmp edi ebx +
jnz loc_1002481  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_26C] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
lea eax [ebp+String] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jz loc_10025E6  +
mov edi [ebp+lpString] +
jmp loc_10022E0  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100485A  +
jmp loc_100225E  +
lea eax [ebp+var_258] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpMem] +
jmp loc_1002231  +
push [ebp+hFindFile]  +
call ds:FindClose  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_258] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
xor eax eax +
cmp [ebp+var_27C] ebx +
setz al  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003BC6  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 298h +
mov eax dword_1009000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ds:GetEnvironmentVariableW +
push edi  +
push ebx  +
mov dword ptr [ebp+lpString] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov edi offset Name +
push edi  +
mov [ebp+var_288] eax +
mov [ebp+lpFileName] ebx +
mov [ebp+var_264] ebx +
mov dword ptr [ebp+lpMem] ebx +
mov [ebp+var_26C] ebx +
mov [ebp+var_294] ebx +
mov [ebp+var_270] ebx +
mov [ebp+var_28C] ebx +
mov [ebp+var_260] ebx +
mov [ebp+var_25C] ebx +
mov [ebp+var_280] ebx +
mov [ebp+var_27C] ebx +
call esi  +
mov [ebp+nSize] eax +
cmp eax ebx +
jz loc_100271E  +
lea eax [eax+eax+14h] +
push eax  +
mov [ebp+dwBytes] eax +
call sub_100457F  +
mov [ebp+var_260] eax +
cmp eax ebx +
jnz loc_10026ED  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003BC6  +
leave   +
retn 14h  +
push [ebp+nSize]  +
push eax  +
push edi  +
call esi  +
push [ebp+dwBytes]  +
call sub_100457F  +
mov [ebp+var_25C] eax +
cmp [ebp+var_260] ebx +
jnz loc_100271E  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
jmp loc_10026D9  +
push [ebp+var_288]  +
call sub_1006ED5  +
lea eax ds:4[eax*4] +
push eax  +
call sub_100457F  +
mov [ebp+var_27C] eax +
cmp eax ebx +
jnz loc_100274E  +
lea eax [ebp+var_25C] +
push eax  +
call sub_100485A  +
jmp loc_1002710  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1004462  +
lea eax [eax+eax+0Ah] +
push eax  +
call sub_100457F  +
mov dword ptr [ebp+lpMem] eax +
cmp eax ebx +
jz loc_1002740  +
push eax  +
call sub_1004628  +
mov ecx dword ptr [ebp+lpMem] +
cmp eax ebx +
jz loc_1002784  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_100277E  +
push dword ptr [ebp+lpMem]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push dword ptr [ebp+lpString]  +
push dword ptr [ebp+lpMem]  +
call sub_1004BF4  +
mov edi [ebp+var_28C] +
push ebx  +
push dword ptr [ebp+lpMem]  +
call sub_1004462  +
mov esi eax +
add esi 0Fh +
lea eax [esi+esi] +
push eax  +
call sub_100457F  +
mov [ebp+lpFileName] eax +
cmp eax ebx +
jz loc_1002CED  +
lea eax [esi+esi] +
push eax  +
push ebx  +
push [ebp+lpFileName]  +
call memset  +
add esp 0Ch +
push ebx  +
push dword ptr [ebp+lpMem]  +
call sub_1004462  +
mov ecx eax +
mov eax dword ptr [ebp+lpMem] +
cmp word ptr [eax+ecx*2-2] 5Ch +
push eax  +
jz loc_1002808  +
push offset aS_  +
jmp loc_100280D  +
push offset aS__0  +
push esi  +
push [ebp+lpFileName]  +
call sub_1002001  +
add esp 10h +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+String] +
push eax  +
push ebx  +
push [ebp+lpFileName]  +
call ds:FindFirstFileExW  +
mov [ebp+dwBytes] eax +
cmp eax 0FFFFFFFFh +
jz loc_1002C34  +
mov edi offset a_ +
push ebx  +
push dword ptr [ebp+lpMem]  +
call sub_1004462  +
mov esi eax +
push ebx  +
lea eax [ebp-228h] +
push eax  +
call sub_1004462  +
lea esi [esi+eax+0Ah] +
lea eax [esi+esi] +
push eax  +
call sub_100457F  +
mov [ebp+var_264] eax +
cmp eax ebx +
jz loc_1002CFE  +
push eax  +
call sub_1004628  +
shr eax 1 +
mov ecx [ebp+var_264] +
jz loc_1002893  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_100288D  +
push ebx  +
push dword ptr [ebp+lpMem]  +
call sub_1004462  +
mov ecx eax +
mov eax dword ptr [ebp+lpMem] +
cmp word ptr [eax+ecx*2-2] 5Ch +
lea ecx [ebp-228h] +
push ecx  +
push eax  +
jz loc_10028BE  +
push offset aSS_0  +
jmp loc_10028C3  +
push offset aSS_1  +
push esi  +
push [ebp+var_264]  +
call sub_1002001  +
add esp 14h +
push ebx  +
xor esi esi +
inc esi  +
push esi  +
push edi  +
lea eax [ebp-228h] +
push eax  +
call sub_1004483  +
test eax eax +
jz loc_1002974  +
push ebx  +
push esi  +
push offset String2  +
lea eax [ebp-228h] +
push eax  +
call sub_1004483  +
test eax eax +
jz loc_1002974  +
test byte ptr [ebp+String] 10h +
jz loc_1002981  +
push [ebp+var_264]  +
lea eax [ebp+var_28C] +
push eax  +
call sub_100157A  +
cmp eax esi +
jnz loc_1002BFB  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_264] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_25C] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
push [ebp+var_270]  +
call sub_1001FCC  +
mov eax esi +
jmp loc_10026DC  +
test byte ptr [ebp+String] 10h +
jnz loc_1002BFB  +
push [ebp+var_288]  +
call sub_1006ED5  +
mov [ebp+var_298] eax +
mov [ebp+var_284] ebx +
cmp eax ebx +
jbe loc_1002BFB  +
push ebx  +
lea eax [ebp-228h] +
push eax  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+var_26C] eax +
cmp eax ebx +
jz loc_1002D12  +
mov esi [ebp+var_284] +
push esi  +
push [ebp+var_288]  +
call sub_10074EA  +
push [ebp+var_26C]  +
mov dword ptr [ebp+lpString] eax +
call sub_1004628  +
shr eax 1 +
push eax  +
lea eax [ebp-228h] +
push eax  +
push [ebp+var_26C]  +
call sub_1004BF4  +
push ebx  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1004B84  +
test eax eax +
jz loc_1002A39  +
push ebx  +
push edi  +
push [ebp+var_26C]  +
call sub_1004B84  +
test eax eax +
jnz loc_1002A39  +
push [ebp+var_26C]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+var_26C]  +
call sub_1004C37  +
push [ebp+var_26C]  +
push dword ptr [ebp+lpString]  +
call sub_10014C5  +
test eax eax +
jz loc_1002A79  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_264]  +
call sub_1002060  +
mov ecx [ebp+var_27C] +
xor eax eax +
inc eax  +
mov [ebp+var_294] eax +
mov [ecx+esi*4] eax +
jmp loc_1002BD2  +
push [ebp+var_25C]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push [ebp+var_260]  +
push [ebp+var_25C]  +
call sub_1004BF4  +
mov esi [ebp+var_25C] +
push ebx  +
push offset asc_10012F0  +
push esi  +
call sub_1004B84  +
cmp eax ebx +
jz loc_1002AC9  +
push ebx  +
xor ecx ecx +
push esi  +
mov [eax] cx +
call sub_1004462  +
lea eax [esi+eax*2+2] +
mov [ebp+nSize] eax +
jmp loc_1002BCA  +
mov esi [ebp+var_25C] +
mov [ebp+nSize] ebx +
jmp loc_1002BCA  +
push ebx  +
push esi  +
call sub_1004462  +
push ebx  +
push dword ptr [ebp+lpString]  +
mov edi eax +
call sub_1004462  +
lea edi [edi+eax+19h] +
lea eax [edi+edi] +
push eax  +
call sub_100457F  +
mov [ebp+var_280] eax +
cmp eax ebx +
jz loc_1002D52  +
push eax  +
call sub_1004628  +
mov ecx [ebp+var_280] +
cmp eax ebx +
jz loc_1002B20  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1002B1A  +
cmp word ptr [esi] 2Eh +
jnz loc_1002B82  +
push esi  +
push dword ptr [ebp+lpString]  +
push offset aSS_1  +
push edi  +
push [ebp+var_280]  +
call sub_1002001  +
add esp 14h +
push [ebp+var_26C]  +
push [ebp+var_280]  +
call sub_10014C5  +
test eax eax +
jz loc_1002B82  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+var_264]  +
call sub_1002060  +
mov ecx [ebp+var_27C] +
mov edx [ebp+var_284] +
xor eax eax +
inc eax  +
mov [ebp+var_294] eax +
mov [ecx+edx*4] eax +
mov esi [ebp+nSize] +
cmp esi ebx +
jnz loc_1002B90  +
xor esi esi +
jmp loc_1002BBE  +
push ebx  +
push offset asc_10012F0  +
push esi  +
call sub_1004B84  +
cmp eax ebx +
jz loc_1002BB8  +
push ebx  +
xor ecx ecx +
push esi  +
mov [eax] cx +
call sub_1004462  +
lea eax [esi+eax*2+2] +
mov [ebp+nSize] eax +
jmp loc_1002BBE  +
mov [ebp+nSize] ebx +
lea eax [ebp+var_280] +
push eax  +
call sub_100485A  +
cmp esi ebx +
jnz loc_1002ADA  +
lea eax [ebp+var_26C] +
push eax  +
call sub_100485A  +
inc [ebp+var_284]  +
mov eax [ebp+var_284] +
mov edi offset a_ +
cmp eax [ebp+var_298] +
jb loc_10029A0  +
lea eax [ebp+var_264] +
push eax  +
call sub_100485A  +
lea eax [ebp+String] +
push eax  +
push [ebp+dwBytes]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1002847  +
push [ebp+dwBytes]  +
call ds:FindClose  +
mov edi [ebp+var_28C] +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100485A  +
mov edx [ebp+var_270] +
cmp edx ebx +
jnz loc_1002C5C  +
cmp edi ebx +
jz loc_1002C81  +
jmp loc_1002C73  +
cmp edi ebx +
jz loc_1002C81  +
mov eax edi +
lea ecx [edi+4] +
jmp loc_1002C6C  +
mov eax [ecx] +
lea ecx [eax+4] +
cmp [ecx] ebx +
jnz loc_1002C67  +
mov [eax+4] edx +
mov [ebp+var_270] edi +
xor edi edi +
mov [ebp+var_28C] edi +
lea eax [ebp+lpMem] +
push eax  +
lea eax [ebp+var_270] +
push eax  +
call sub_10015E8  +
test eax eax +
jnz loc_10027A9  +
lea eax [ebp+var_280] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_25C] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
push [ebp+var_270]  +
call sub_1001FCC  +
cmp [ebp+var_294] ebx +
jnz loc_1002DAE  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+var_27C] +
push eax  +
call sub_100485A  +
mov eax ebx +
jmp loc_10026DC  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
jmp loc_1002740  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpFileName] +
jmp loc_1002CF3  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_25C] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
push [ebp+var_270]  +
call sub_1001FCC  +
jmp loc_10026D9  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_27C] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_25C] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_25C] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_260] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_26C] +
jmp loc_1002D3C  +
push [ebp+var_288]  +
call sub_1006ED5  +
mov esi eax +
xor edi edi +
cmp esi ebx +
jbe loc_1002CDA  +
mov eax [ebp+var_27C] +
cmp [eax+edi*4] ebx +
jnz loc_1002DFF  +
push edi  +
push [ebp+var_288]  +
call sub_10074EA  +
cmp [ebp+arg_8] ebx +
jnz loc_1002DFF  +
push eax  +
push 40h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push 1  +
add eax 40h +
push 1  +
push eax  +
call sub_10059D1  +
add esp 14h +
inc edi  +
cmp edi esi +
jb loc_1002DC5  +
jmp loc_1002CDA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
movzx ecx word ptr [edi] +
xor eax eax +
inc eax  +
mov [ebp+Mem] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_28] eax +
mov [ebp+var_10] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+FilePart] ebx +
mov [ebp+lpszShortPath] ebx +
mov [ebp+lpString] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_24] ebx +
cmp cx 5Ch +
jz loc_100333B  +
push esi  +
mov esi ds:wcsrchr +
cmp cx 24h +
jnz loc_1002F1C  +
push 3Ah  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002F1C  +
push 3Ah  +
push edi  +
call esi  +
pop ecx  +
inc eax  +
inc eax  +
pop ecx  +
mov ecx eax +
sub ecx edi +
dec ecx  +
dec ecx  +
push offset pszTrimChars  +
sar ecx 1 +
xor edx edx +
push eax  +
mov [edi+ecx*2] dx +
mov [ebp+arg_0] eax +
call ds:StrTrimW  +
lea esi [edi+2] +
push esi  +
call ds:_wgetenv  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jz loc_1002FD0  +
push ebx  +
push esi  +
call sub_1004462  +
add eax 0Ah +
push eax  +
call sub_100457F  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_1003353  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+var_10]  +
call sub_1004BF4  +
push ebx  +
push edi  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+Mem] eax +
cmp eax ebx +
jz loc_100338F  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+Mem]  +
call sub_1004BF4  +
cmp [ebp+Mem] ebx +
jnz loc_1002FAA  +
push 0Eh  +
call ds:SetLastError  +
call sub_1004213  +
jmp loc_1003353  +
push 3Ah  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_1002FB7  +
inc eax  +
inc eax  +
mov ecx eax +
sub ecx edi +
dec ecx  +
dec ecx  +
push offset pszTrimChars  +
sar ecx 1 +
xor edx edx +
push eax  +
mov [edi+ecx*2] dx +
mov [ebp+arg_0] eax +
call ds:StrTrimW  +
push ebx  +
push edi  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+Mem] eax +
cmp eax ebx +
jz loc_100338F  +
push ebx  +
push edi  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_100338F  +
push [ebp+Mem]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+Mem]  +
call sub_1004BF4  +
push [ebp+Mem]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+var_10]  +
call sub_1004BF4  +
push offset asc_10012F0  +
push [ebp+Mem]  +
jmp loc_1003305  +
push ebx  +
push [ebp+Mem]  +
mov esi offset aPath +
push esi  +
call ds:GetEnvironmentVariableW  +
mov edi eax +
mov [ebp+nSize] edi +
cmp edi ebx +
jnz loc_1003005  +
cmp [ebp+arg_4] ebx +
jnz loc_1002FF3  +
push esi  +
push 42h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push 1  +
add eax 40h +
push 1  +
push eax  +
call sub_10059D1  +
add esp 14h +
push 42h  +
call sub_1005B24  +
push eax  +
call sub_10041AC  +
jmp loc_100338F  +
push ebx  +
push esi  +
call sub_1004462  +
lea eax [eax+eax+2] +
push eax  +
call sub_100457F  +
mov [ebp+var_10] eax +
cmp eax ebx +
jnz loc_100302F  +
push 0Eh  +
call ds:SetLastError  +
call sub_1004213  +
jmp loc_100338F  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+var_10]  +
call sub_1004BF4  +
lea eax [edi+edi+14h] +
push eax  +
call sub_100457F  +
mov [ebp+Mem] eax +
cmp eax ebx +
jnz loc_100305A  +
lea eax [ebp+Mem] +
jmp loc_1003389  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
mov edi offset a__0 +
push edi  +
push [ebp+Mem]  +
call sub_1004BF4  +
push [ebp+nSize]  +
push ebx  +
push edi  +
call sub_1004462  +
mov ecx [ebp+Mem] +
lea eax [ecx+eax*2] +
push eax  +
push esi  +
call ds:GetEnvironmentVariableW  +
test eax eax +
jnz loc_1002FAA  +
cmp [ebp+arg_4] ebx +
jnz loc_10030B4  +
push esi  +
push 42h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push 1  +
add eax 40h +
push 1  +
push eax  +
call sub_10059D1  +
add esp 14h +
push 42h  +
call sub_1005B24  +
push eax  +
call sub_10041AC  +
jmp loc_100334A  +
push edi  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_10032FF  +
test al 10h +
jz loc_10032FF  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpszShortPath]  +
mov [ebp+nSize] ebx +
push ebx  +
push edi  +
call ds:GetFullPathNameW  +
mov esi eax +
cmp esi ebx +
jz loc_1003193  +
lea eax [esi+esi+14h] +
push eax  +
call sub_100457F  +
mov [ebp+lpszShortPath] eax +
cmp eax ebx +
jz loc_100334A  +
lea ecx [ebp+FilePart] +
push ecx  +
push eax  +
add esi 5 +
push esi  +
push edi  +
call ds:GetFullPathNameW  +
mov edi ds:GetLongPathNameW +
push ebx  +
push [ebp+lpString]  +
push [ebp+lpszShortPath]  +
call edi  +
mov esi eax +
lea eax [esi+esi+14h] +
push eax  +
call sub_100457F  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_1003341  +
add esi 5 +
push esi  +
push eax  +
push [ebp+lpszShortPath]  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
mov ecx eax +
mov eax [ebp+lpString] +
cmp word ptr [eax+ecx*2-2] 5Ch +
jnz loc_100318A  +
push ebx  +
push eax  +
call sub_1004462  +
mov ecx eax +
mov eax [ebp+lpString] +
cmp word ptr [eax+ecx*2-4] 3Ah +
jz loc_100318A  +
push ebx  +
push eax  +
call sub_1004462  +
mov edx [ebp+lpString] +
xor ecx ecx +
mov [edx+eax*2-2] cx +
lea eax [ebp+lpszShortPath] +
push eax  +
call sub_100485A  +
cmp [ebp+var_8] ebx +
jz loc_1003217  +
push ebx  +
push [ebp+var_8]  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_1003358  +
push eax  +
call sub_1004628  +
mov ecx [ebp+lpMem] +
cmp eax ebx +
jz loc_10031C9  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_10031C3  +
push [ebp+lpMem]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push [ebp+var_8]  +
push [ebp+lpMem]  +
call sub_1004BF4  +
push [ebp+lpMem]  +
jmp loc_10031F7  +
push ebx  +
xor esi esi +
inc esi  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_1004483  +
test eax eax +
jz loc_1003202  +
push ebx  +
call sub_1001F66  +
cmp eax ebx +
jnz loc_10031E4  +
jmp loc_1003205  +
mov [ebp+nSize] esi +
lea eax [ebp+lpMem] +
push eax  +
call sub_100485A  +
cmp [ebp+nSize] ebx +
jnz loc_10032D8  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+lpString]  +
call sub_1002176  +
push ebx  +
push [ebp+lpString]  +
mov [ebp+var_28] eax +
call sub_1004462  +
mov ecx [ebp+var_24] +
lea eax [ecx+eax+0Ah] +
mov [ebp+var_24] eax +
add eax eax +
push eax  +
cmp [ebp+var_8] ebx +
jz loc_1003264  +
lea eax [ebp+var_8] +
push eax  +
call sub_10048D5  +
test eax eax +
jnz loc_100327F  +
lea eax [ebp+var_8] +
push eax  +
call sub_100485A  +
mov [ebp+var_8] ebx +
jmp loc_100327F  +
call sub_100457F  +
push eax  +
mov [ebp+var_8] eax +
call sub_1004628  +
mov ecx [ebp+var_8] +
cmp eax ebx +
jz loc_100327F  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1003279  +
cmp [ebp+var_8] ebx +
jz loc_100336F  +
push ebx  +
push [ebp+var_8]  +
call sub_1004462  +
push [ebp+var_8]  +
test eax eax +
jnz loc_10032AD  +
call sub_1004628  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push [ebp+var_8]  +
call sub_1004BF4  +
jmp loc_10032C0  +
call sub_1004628  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push [ebp+var_8]  +
call sub_1004C37  +
push [ebp+var_8]  +
call sub_1004628  +
shr eax 1 +
push eax  +
push offset asc_1001344  +
push [ebp+var_8]  +
call sub_1004C37  +
push offset asc_10012F0  +
push ebx  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov edi eax +
cmp [ebp+var_28] ebx +
jnz loc_10032F4  +
mov [ebp+var_2C] 1 +
lea eax [ebp+lpString] +
push eax  +
call sub_100485A  +
jmp loc_100330F  +
push offset asc_10012F0  +
push ebx  +
call ds:wcstok  +
pop ecx  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jnz loc_10030C6  +
lea eax [ebp+Mem] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_8] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_10] +
push eax  +
call sub_100485A  +
xor eax eax +
cmp [ebp+var_2C] ebx +
setz al  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
lea eax [ebp+lpszShortPath] +
push eax  +
call sub_100485A  +
lea eax [ebp+Mem] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_10] +
jmp loc_1003389  +
lea eax [ebp+Mem] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_10] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_8] +
jmp loc_1003380  +
call sub_1004213  +
lea eax [ebp+Mem] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_10] +
push eax  +
call sub_100485A  +
lea eax [ebp+lpString] +
push eax  +
call sub_100485A  +
xor eax eax +
inc eax  +
jmp loc_100333A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
push esi  +
push ebx  +
push ebx  +
xor esi esi +
inc esi  +
push esi  +
push ebx  +
mov [ebp+var_18] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_28] ebx +
mov [ebp+lpString] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_C] ebx +
call ds:HeapSetInformation  +
cmp [ebp+arg_0] esi +
ja loc_10033FC  +
push 4Bh  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1004C7A  +
call sub_10017EF  +
call sub_1004AE1  +
push 2  +
pop eax  +
pop esi  +
pop ebx  +
leave   +
retn   +
push edi  +
push esi  +
call ds:SetErrorMode  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100181E  +
cmp eax esi +
jnz loc_100344A  +
push 2  +
pop esi  +
lea eax [ebp+var_10] +
push eax  +
call sub_1006EAA  +
lea eax [ebp+lpString] +
push eax  +
call sub_100485A  +
call sub_1004AE1  +
mov eax esi +
pop edi  +
jmp loc_10033F8  +
cmp [ebp+var_28] esi +
jnz loc_1003458  +
call sub_10017EF  +
xor esi esi +
jmp loc_100342E  +
call sub_1006E35  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1003486  +
push 0Eh  +
call ds:SetLastError  +
call sub_1004213  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1005B3C  +
jmp loc_100342B  +
push [ebp+var_10]  +
call sub_1006ED5  +
mov edi eax +
lea eax ds:4[edi*4] +
push eax  +
mov [ebp+var_24] edi +
call sub_100457F  +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_10034D9  +
call sub_1004213  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1005B3C  +
lea eax [ebp+var_10] +
push eax  +
call sub_1006EAA  +
lea eax [ebp+var_8] +
push eax  +
call sub_1006EAA  +
push 2  +
pop esi  +
jmp loc_1003437  +
mov [ebp+arg_0] ebx +
cmp edi ebx +
jbe loc_1003674  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
push eax  +
mov [ecx+eax*4] ebx +
push [ebp+var_10]  +
call sub_10074EA  +
mov esi eax +
cmp word ptr [esi] 2Fh +
jz loc_10036E2  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
test eax eax +
jz loc_1003529  +
cmp word ptr [esi] 24h +
jnz loc_1003529  +
push ebx  +
push offset asc_100135C  +
push esi  +
call sub_1004B84  +
test eax eax +
jnz loc_1003742  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
test eax eax +
jz loc_100354A  +
push ebx  +
push offset asc_100135C  +
push esi  +
call sub_1004B84  +
test eax eax +
jnz loc_1003746  +
cmp word ptr [esi] 24h +
jnz loc_1003598  +
mov edi ds:wcsrchr +
push 3Ah  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003598  +
push 3Ah  +
push esi  +
call edi  +
mov edi eax +
inc edi  +
inc edi  +
pop ecx  +
pop ecx  +
jz loc_100374E  +
push ebx  +
push edi  +
call sub_1004462  +
test eax eax +
jz loc_100374E  +
movzx eax word ptr [edi] +
cmp ax 5Ch +
jz loc_100374A  +
cmp ax 2Fh +
jz loc_100374A  +
mov edi ds:wcsrchr +
push 3Ah  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10035E0  +
push 3Ah  +
push esi  +
call edi  +
mov edi eax +
inc edi  +
inc edi  +
pop ecx  +
pop ecx  +
jz loc_1003756  +
push ebx  +
push edi  +
call sub_1004462  +
test eax eax +
jz loc_1003756  +
movzx eax word ptr [edi] +
cmp ax 5Ch +
jz loc_1003752  +
cmp ax 2Fh +
jz loc_1003752  +
push ebx  +
push esi  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+var_14] eax +
cmp eax ebx +
jz loc_100375A  +
push eax  +
call sub_1004628  +
mov ecx [ebp+var_14] +
cmp eax ebx +
jz loc_100360F  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1003609  +
xor ecx ecx +
mov eax esi +
cmp [esi] bx +
jz loc_100363E  +
mov dx [eax] +
mov esi [ebp+var_14] +
mov [esi+ecx*2] dx +
push 2Ah  +
pop edx  +
inc ecx  +
cmp dx [eax] +
jnz loc_1003637  +
inc eax  +
push 2Ah  +
inc eax  +
pop edx  +
cmp dx [eax] +
jz loc_100362B  +
jmp loc_1003639  +
inc eax  +
inc eax  +
cmp [eax] bx +
jnz loc_1003618  +
mov edx [ebp+var_14] +
xor eax eax +
push ebx  +
mov [edx+ecx*2] ax +
push [ebp+var_14]  +
call sub_1004462  +
push eax  +
push [ebp+var_14]  +
push [ebp+var_8]  +
call sub_1007157  +
lea eax [ebp+var_14] +
push eax  +
call sub_100485A  +
inc [ebp+arg_0]  +
mov edi [ebp+var_24] +
cmp [ebp+arg_0] edi +
jb loc_10034E4  +
lea eax [ebp+var_10] +
push eax  +
call sub_1006EAA  +
cmp [ebp+lpString] ebx +
jz loc_1003774  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
test eax eax +
jz loc_1003774  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
push [ebp+var_18]  +
push [ebp+var_8]  +
push [ebp+lpString]  +
call sub_1002637  +
cmp eax 1 +
jnz loc_100385A  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_10038E0  +
call sub_1004213  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1005B3C  +
call sub_1004AE1  +
jmp loc_100371F  +
push esi  +
push 44h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push 1  +
add eax 40h +
push 1  +
push eax  +
call sub_10059D1  +
add esp 14h +
push 34h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1004C7A  +
lea eax [ebp+var_10] +
push eax  +
call sub_1006EAA  +
lea eax [ebp+var_8] +
push eax  +
call sub_1006EAA  +
lea eax [ebp+lpString] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_C] +
push eax  +
call sub_100485A  +
push 2  +
pop esi  +
jmp loc_1003440  +
push 3Ch  +
jmp loc_1003702  +
push 48h  +
jmp loc_1003702  +
push 49h  +
jmp loc_1003702  +
push 3Fh  +
jmp loc_1003702  +
push 4Ah  +
jmp loc_1003702  +
push 47h  +
jmp loc_1003702  +
call sub_1004213  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1005B3C  +
jmp loc_1003716  +
xor esi esi +
cmp edi ebx +
jbe loc_10038E0  +
push offset dword_1001244  +
call sub_10041AC  +
push esi  +
push [ebp+var_8]  +
call sub_10074EA  +
mov edi eax +
push ebx  +
push edi  +
call sub_1004462  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100457F  +
mov [ebp+var_14] eax +
cmp eax ebx +
jz loc_100387A  +
push eax  +
call sub_1004628  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+var_14]  +
call sub_1004BF4  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
push [ebp+var_18]  +
push [ebp+var_14]  +
call sub_1002E0E  +
test eax eax +
jnz loc_10037E2  +
mov ecx [ebp+var_C] +
inc eax  +
mov [ebp+var_2C] eax +
mov [ecx+esi*4] eax +
jmp loc_100380B  +
call ds:GetLastError  +
cmp eax 8 +
jz loc_10038A9  +
push ebx  +
call sub_1004180  +
push eax  +
call sub_1004462  +
test eax eax +
jz loc_100380B  +
mov eax [ebp+var_C] +
mov dword ptr [eax+esi*4] 1 +
inc esi  +
cmp esi [ebp+var_24] +
jb loc_100377E  +
cmp [ebp+var_2C] ebx +
jz loc_10038E0  +
xor esi esi +
mov eax [ebp+var_C] +
cmp [eax+esi*4] ebx +
jnz loc_1003854  +
cmp [ebp+var_18] ebx +
jnz loc_1003854  +
push esi  +
push [ebp+var_8]  +
call sub_10074EA  +
push eax  +
push 40h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
push 1  +
add eax 40h +
push 2  +
push eax  +
call sub_10059D1  +
add esp 14h +
inc esi  +
cmp esi [ebp+var_24] +
jb loc_1003820  +
lea eax [ebp+var_8] +
push eax  +
call sub_1006EAA  +
lea eax [ebp+var_C] +
push eax  +
call sub_100485A  +
push ebx  +
call ds:SetErrorMode  +
xor esi esi +
jmp loc_1003437  +
call sub_1004213  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1005B3C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_8] +
push eax  +
call sub_1006EAA  +
jmp loc_1003731  +
call sub_1004213  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_1005B3C  +
call sub_1004AE1  +
lea eax [ebp+var_8] +
push eax  +
call sub_1006EAA  +
lea eax [ebp+lpString] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_14] +
jmp loc_100372B  +
cmp [ebp+var_18] ebx +
jnz loc_10038FB  +
push 46h  +
call sub_1005B24  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1004C7A  +
lea eax [ebp+var_8] +
push eax  +
call sub_1006EAA  +
lea eax [ebp+lpString] +
push eax  +
call sub_100485A  +
lea eax [ebp+var_C] +
push eax  +
call sub_100485A  +
xor esi esi +
inc esi  +
jmp loc_1003440  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_100393F  +
test eax eax +
jnz loc_1003944  +
mov ecx [esi] +
test ecx ecx +
jz loc_100393C  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1003930  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100904C +
push offset dword_100903C  +
push dword_1009048  +
mov dword_100903C eax +
push offset dword_100902C  +
push offset dword_1009030  +
push offset dword_1009028  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1009038 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10039CC  +
cmp eax esi +
jnz loc_10039BF  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10039CF  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10039A6  +
xor esi esi +
inc esi  +
mov eax dword_1009498 +
cmp eax esi +
jnz loc_10039E2  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1003A1D  +
mov eax dword_1009498 +
test eax eax +
jnz loc_1003A17  +
mov dword_1009498 esi +
push offset dword_10011C8  +
push offset dword_10011BC  +
call sub_1003923  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003A1D  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1003AE7  +
mov dword_1009044 esi +
mov eax dword_1009498 +
cmp eax esi +
jnz loc_1003A41  +
push offset dword_10011B8  +
push offset dword_10011B0  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1009498 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1003A4E  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10094A0 ebx +
jz loc_1003A6F  +
push offset dword_10094A0  +
call sub_1003CD9  +
pop ecx  +
test eax eax +
jz loc_1003A6F  +
push ebx  +
push 2  +
push ebx  +
call dword_10094A0  +
push dword_100902C  +
push dword_1009030  +
push dword_1009028  +
call sub_1003399  +
add esp 0Ch +
mov dword_1009040 eax +
cmp dword_1009034 ebx +
jnz loc_1003ACD  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1009040 eax +
xor ebx ebx +
cmp dword_1009034 ebx +
jnz loc_1003ACD  +
push eax  +
call ds:_exit  +
cmp dword_1009044 ebx +
jnz loc_1003ADB  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1009040 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1003B04  +
xor eax eax +
jmp loc_1003B51  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1003B00  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1003B3E  +
cmp ecx 20Bh +
jnz loc_1003B00  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1003B00  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1003B4C  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1003B00  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1009034 eax +
call sub_1003E72  +
push eax  +
call ds:__set_app_type  +
or dword_1009490 0FFFFFFFFh +
or dword_1009494 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1009054 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1009050 +
mov [eax] ecx +
call sub_1003E04  +
cmp dword_1009010 0 +
jnz loc_1003BAA  +
push offset sub_1003E04  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1003DEC  +
xor eax eax +
retn   +
***
call sub_1003EB1  +
jmp sub_1003984  +
***
cmp ecx dword_1009000 +
jnz loc_1003BD1  +
retn 0  +
jmp loc_1003F47  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1003C24  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1003C24  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1003C1E  +
cmp eax 19930521h +
jz loc_1003C1E  +
cmp eax 19930522h +
jz loc_1003C1E  +
cmp eax 1994000h +
jnz loc_1003C24  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1003BE4+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1003C66  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1003C62  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1003CCD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1003CC5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1003CCF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1003CB5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1003C50  +
pop ecx  +
test eax eax +
jz loc_1003D36  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1003C90  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003D36  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1003D3F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1003BC6  +
push offset dword_1009000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1003E65  +
cmp ecx 0FFFFFFFFh +
jz loc_1003E65  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1003E5E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1003E5E  +
cmp edx 10000000h +
jnb loc_1003E5E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1003E5E  +
jmp loc_1003E59  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1003EA7  +
push eax  +
call sub_1003E0C  +
test eax eax +
jz loc_1003EA7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1003E9C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1003EA7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1009000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1003EE3  +
test eax ebx +
jz loc_1003EE3  +
not eax  +
mov dword_1009004 eax +
jmp loc_1003F3E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1003F2A  +
test dword_1009000 ebx +
jnz loc_1003F2F  +
mov esi 0BB40E64Fh +
mov dword_1009000 esi +
not esi  +
mov dword_1009004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1009158 eax +
mov dword_1009154 ecx +
mov dword_1009150 edx +
mov dword_100914C ebx +
mov dword_1009148 esi +
mov dword_1009144 edi +
mov word_1009170 ss +
mov word_1009164 cs +
mov word_1009140 ds +
mov word_100913C es +
mov word_1009138 fs +
mov word_1009134 gs +
pushf   +
pop dword_1009168  +
mov eax [ebp+0] +
mov dword_100915C eax +
mov eax [ebp+4] +
mov dword_1009160 eax +
lea eax [ebp+8] +
mov dword_100916C eax +
mov eax [ebp-320h] +
mov dword_10090A8 10001h +
mov eax dword_1009160 +
mov dword_1009064 eax +
mov dword_1009058 0C0000409h +
mov dword_100905C 1 +
mov eax dword_1009000 +
mov [ebp-328h] eax +
mov eax dword_1009004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1009378 edi +
jnz loc_1004072  +
push dword_1009380  +
call sub_1006E14  +
test eax eax +
jnz loc_100406E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004106  +
push 42Bh  +
jmp loc_1004100  +
mov eax edi +
pop edi  +
retn   +
cmp dword_1009380 0 +
jnz loc_1004056  +
call sub_1006E35  +
push eax  +
mov dword_1009380 eax +
call sub_1006E14  +
test eax eax +
jz loc_10040F4  +
push 0  +
push offset dword_1001370  +
push dword_1009380  +
call sub_1007157  +
test eax eax +
jnz loc_10040F4  +
push 3  +
push dword_1009380  +
call sub_1007322  +
cmp eax edi +
jnz loc_10040F4  +
push 3  +
push dword_1009380  +
call sub_1007322  +
cmp eax 2 +
jnz loc_10040F4  +
push 3  +
push dword_1009380  +
call sub_1007322  +
cmp eax 3 +
jnz loc_10040F4  +
push 0  +
mov dword_1009378 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1004106  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1009378 0 +
push esi  +
jz loc_1004174  +
push 3  +
push dword_1009380  +
call sub_100747D  +
cmp eax [ebp+arg_0] +
jbe loc_1004174  +
push [ebp+arg_0]  +
push 3  +
push dword_1009380  +
call sub_1007714  +
test eax eax +
jz loc_1004174  +
push [ebp+arg_0]  +
push 3  +
push dword_1009380  +
call sub_1007519  +
mov esi eax +
test esi esi +
jz loc_1004174  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1004174  +
mov eax [esi+0Ch] +
jmp loc_1004176  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_1009380 +
test eax eax +
jz loc_10041A1  +
push eax  +
call sub_1006E14  +
test eax eax +
jz loc_10041A1  +
push 0  +
push dword_1009380  +
call sub_10074EA  +
retn   +
mov eax offset dword_1001370 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_10041D5  +
call esi  +
test eax eax +
jnz loc_10041D1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1004208  +
call sub_1004039  +
test eax eax +
jz loc_10041D1  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_1009380  +
call sub_10075D2  +
test eax eax +
jnz loc_10041FE  +
call esi  +
test eax eax +
jnz loc_10041D1  +
push 8  +
jmp loc_10041CB  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1004039  +
test eax eax +
jz loc_1004292  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_100426C  +
cmp [ebp+hMem] edi +
jz loc_1004284  +
push [ebp+hMem]  +
call sub_10041AC  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1004290  +
cmp [ebp+hMem] edi +
jz loc_1004284  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1004284  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_100428E  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1004213  +
test eax eax +
jz loc_10042BC  +
call sub_1004180  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1004C7A  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1009000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_1009014 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1009018 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_1009384 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1003BC6  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1004382  +
call ds:GetLastError  +
test eax eax +
jnz loc_100437E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10043FF  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_10043F3  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_10043F3  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_10043FB  +
sub edi 0 +
jz loc_10043CF  +
dec edi  +
jz loc_10043CB  +
dec edi  +
jnz loc_10043FB  +
push 0FFFFFFF4h  +
jmp loc_10043D1  +
push 0FFFFFFF5h  +
jmp loc_10043D1  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_10043FB  +
cmp eax 0FFFFFFFFh +
jz loc_10043FB  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_10043FD  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetUserDefaultLCID  +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_100441E  +
and dword ptr [edx] 0 +
mov ecx eax +
and ecx 3FFh +
cmp cx 1 +
jz loc_100444A  +
cmp cx 0Dh +
jz loc_100444A  +
cmp cx 1Eh +
jz loc_100444A  +
cmp cx 39h +
jz loc_100444A  +
cmp cx 49h +
jz loc_100444A  +
cmp cx 29h +
jnz loc_1004459  +
test edx edx +
jz loc_1004454  +
mov dword ptr [edx] 1 +
mov eax 409h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1004471  +
xor eax eax +
jmp loc_100447A  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_10044C1  +
cmp [ebp+lpString2] 0 +
jz loc_10044C1  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_10044A7  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_10044D5  +
call ds:GetLastError  +
test eax eax +
jnz loc_10044D3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_100451C  +
cmp [ebp+lpString2] 0 +
jz loc_100451C  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1004502  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1004530  +
call ds:GetLastError  +
test eax eax +
jnz loc_100452E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1004552  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004574  +
push 57h  +
jmp loc_100456E  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1004574  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1004576  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_10045A5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004619  +
push 57h  +
call ds:SetLastError  +
jmp loc_1004619  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1004619  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100461B  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1004600  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1004600  +
push 570h  +
call ds:SetLastError  +
call sub_1004213  +
jmp loc_1004612  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004612  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_100464A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004645  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_100466C  +
push [ebp+lpMem]  +
call sub_1004539  +
test eax eax +
jz loc_1004645  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1004645  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10046A5  +
cmp [ebp+arg_4] eax +
jz loc_10046A1  +
mov dl [ebx] +
test dl dl +
jz loc_10046A1  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1004689  +
test esi esi +
jnz loc_10046AC  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10046B8  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10046F9  +
cmp [ebp+arg_4] eax +
jz loc_10046F5  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_10046F5  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10046D8  +
test esi esi +
jnz loc_1004701  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100470F  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1004744  +
cmp eax esi +
ja loc_1004744  +
jz loc_1004749  +
jmp loc_1004751  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100475A  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1004782  +
call ds:GetLastError  +
test eax eax +
jnz loc_10047C5  +
push 57h  +
jmp loc_10047BF  +
push 0  +
push esi  +
call sub_1004462  +
test eax eax +
jz loc_10047BA  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_10047BA  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_10047AA  +
call ds:StrChrIW  +
jmp loc_10047B0  +
call ds:StrChrW  +
test eax eax +
jz loc_10047BA  +
sub eax esi +
sar eax 1 +
jmp loc_10047C8  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1004839  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1004839  +
push 0  +
push edi  +
call sub_1004462  +
push 0  +
push ebx  +
mov esi eax +
call sub_1004462  +
test eax eax +
jz loc_100482C  +
test esi esi +
jz loc_100482C  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_100482C  +
sub esi ecx +
cmp esi eax +
jb loc_100482C  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_1004822  +
call ds:StrStrIW  +
jmp loc_1004828  +
call ds:StrStrW  +
test eax eax +
jnz loc_1004833  +
push 490h  +
jmp loc_1004845  +
sub eax edi +
sar eax 1 +
jmp loc_100484E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100484B  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_100487D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004879  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10048CB  +
cmp dword ptr [esi] 0 +
jnz loc_1004887  +
xor eax eax +
inc eax  +
jmp loc_10048CB  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_10048AB  +
push dword ptr [esi]  +
call sub_1004628  +
cmp eax 0FFFFFFFFh +
jnz loc_10048AF  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10048CA  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_100499A  +
mov eax [esi] +
cmp eax edi +
jz loc_100499A  +
cmp [ebp+dwBytes] edi +
jnz loc_1004908  +
push esi  +
call sub_100485A  +
jmp loc_10049AE  +
push eax  +
call sub_1004539  +
test eax eax +
jnz loc_1004919  +
mov [esi] edi +
jmp loc_10049AC  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_10049AC  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_1004957  +
call ds:GetLastError  +
test eax eax +
jnz loc_100494E  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10049AC  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_10049AE  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_100493C  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_100493C  +
push 570h  +
call ds:SetLastError  +
call sub_1004213  +
jmp loc_100494E  +
call ds:GetLastError  +
test eax eax +
jnz loc_10049AC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10049D1  +
cmp edx 7FFFFFFFh +
jbe loc_10049D6  +
mov eax 80070057h +
test eax eax +
jl loc_10049EC  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1004675  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1004A0B  +
cmp edx 7FFFFFFFh +
jbe loc_1004A10  +
mov eax 80070057h +
test eax eax +
jl loc_1004A26  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10046C4  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1004A48  +
cmp edx ebx +
jbe loc_1004A4D  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_1004A84  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_1004A71  +
cmp [eax] cx +
jz loc_1004A6D  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1004A63  +
cmp esi ecx +
jnz loc_1004A7A  +
mov [ebp+arg_4] 80070057h +
jmp loc_1004A7E  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_1004A86  +
xor ecx ecx +
test eax eax +
jl loc_1004A9A  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_10046C4  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1004ABA  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1004ABF  +
mov eax 80070057h +
test eax eax +
jl loc_1004AD8  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_100471B  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_1009380  +
call sub_1006E14  +
cmp eax 1 +
jnz loc_1004B6B  +
push edi  +
push 3  +
push dword_1009380  +
call sub_100747D  +
mov edi eax +
test edi edi +
jz loc_1004B60  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_1009380  +
call sub_1007714  +
cmp eax 10000h +
jnz loc_1004B59  +
push esi  +
push 3  +
push dword_1009380  +
call sub_1007519  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1004B59  +
add eax 0Ch +
push eax  +
call sub_100485A  +
lea eax [ebp+var_4] +
push eax  +
call sub_100485A  +
push esi  +
push 3  +
push dword_1009380  +
call sub_1007446  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1004B0F  +
pop esi  +
push offset dword_1009380  +
call sub_1006EAA  +
pop edi  +
cmp dword_100937C 1 +
jnz loc_1004B7A  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_10047D2  +
cmp eax 0FFFFFFFFh +
jnz loc_1004BA4  +
xor eax eax +
jmp loc_1004BA7  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1004BE4  +
cmp [ebp+arg_4] 0 +
jz loc_1004BE4  +
cmp [ebp+arg_8] 0 +
jle loc_1004BE4  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10049BB  +
test eax eax +
jge loc_1004BEA  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1004BE6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1004C27  +
cmp [ebp+arg_4] 0 +
jz loc_1004C27  +
cmp [ebp+arg_8] 0 +
jle loc_1004C27  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10049F5  +
test eax eax +
jge loc_1004C2D  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1004C29  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1004C6A  +
cmp [ebp+arg_4] 0 +
jz loc_1004C6A  +
cmp [ebp+arg_8] 0 +
jle loc_1004C6A  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1004A2F  +
test eax eax +
jge loc_1004C70  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1004C6C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1004EBF  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_1004EBF  +
push [ebp+hConsoleOutput]  +
call sub_100435B  +
cmp eax 1 +
jnz loc_1004DAC  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1004CC3  +
push 0FFFFFFF5h  +
jmp loc_1004CD3  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1004D94  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1004462  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_1004D07  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1004D6C  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_1004D90  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1004462  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1004D6C  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1004D3E  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1004D74  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1004D74  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_1004D2E  +
xor eax eax +
inc eax  +
jmp loc_1004ED3  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100429A  +
call sub_1004AE1  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1004D7A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004ED1  +
push 42Bh  +
jmp loc_1004ECB  +
push edi  +
push ebx  +
call sub_1004462  +
push 100h  +
push edi  +
mov esi offset unk_1009390 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1004D6C  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_1004DEC  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1004E49  +
cmp eax ebx +
jbe loc_1004E57  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_1004E29  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_1004E2C  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_1004DF5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004E49  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1004D7D  +
cmp eax [ebp+cchWideChar] +
jnb loc_1004E5F  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1004E49  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS_0  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_1004DD7  +
jmp loc_1004D6C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1004ED1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1004EF7  +
cmp [ebp+arg_8] 0 +
jnz loc_1004EF7  +
xor eax eax +
jmp loc_100504B  +
call sub_1004039  +
test eax eax +
jz loc_1004EF0  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_1009380  +
call sub_100747D  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_1004F44  +
push esi  +
push dword_1009380  +
call sub_10074B1  +
test eax eax +
jz loc_100500F  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_100739D  +
cmp eax 0FFFFFFFFh +
jz loc_100500F  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007714  +
mov edi offset aBuffer +
test eax eax +
jz loc_1004F92  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007519  +
mov esi eax +
test esi esi +
jz loc_100500F  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100500F  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1004FD1  +
mov edi [ebp+arg_8] +
jmp loc_1004FDC  +
push 10h  +
call sub_100457F  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_100500F  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_1004BB1  +
push esi  +
push ebx  +
push 3  +
push dword_1009380  +
call sub_100767B  +
test eax eax +
jnz loc_1004F71  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100485A  +
jmp loc_100500F  +
push 0  +
push ebx  +
call sub_1004462  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_1004FF2  +
cmp edi 100h +
jbe loc_1005009  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1005009  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1005013  +
call sub_100457F  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100500F  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_100501E  +
xor eax eax +
jmp loc_1005048  +
lea eax [esi+0Ch] +
push eax  +
call sub_10048D5  +
jmp loc_1005002  +
test ebx ebx +
jz loc_100502E  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_1004BF4  +
jmp loc_1005045  +
cmp [ebp+arg_C] 1 +
jnz loc_1005045  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1009000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_1001380 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1005151  +
push eax  +
push ebx  +
call sub_1004462  +
test eax eax +
jz loc_1005151  +
cmp [ebp+lpStart] 0 +
jz loc_10050B0  +
push 0  +
push [ebp+lpStart]  +
call sub_1004462  +
test eax eax +
jnz loc_10050B6  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_10050C5  +
cmp edi 1 +
jnz loc_10050E7  +
cmp word ptr [ebx] 0 +
jz loc_10050E4  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_10050E4  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_10050CB  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_10050F1  +
cmp edi 2 +
jnz loc_1005133  +
cmp edi 2 +
jnz loc_10050F8  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1005133  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1005119  +
cmp [ebp+var_14] 0 +
jnz loc_100511D  +
mov [ebp+var_14] esi +
jmp loc_100511D  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1005100  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1005133  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_100514D  +
push 0  +
push [ebp+var_18]  +
call sub_1004462  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_1004BF4  +
mov eax ebx +
jmp loc_1005156  +
mov eax offset dword_1001370 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003BC6  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_100518F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100518B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10051F6  +
cmp [ebp+arg_0] esi +
jnz loc_10051A1  +
push [ebp+arg_4]  +
call sub_10041AC  +
xor eax eax +
inc eax  +
jmp loc_10051F6  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1004EDF  +
mov edi eax +
test edi edi +
jz loc_10051E1  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_1004AA5  +
cmp eax 8007007Ah +
jz loc_10051A2  +
test eax eax +
jge loc_10051EF  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10051F5  +
call ds:GetLastError  +
test eax eax +
jnz loc_10051DD  +
push 8  +
jmp loc_10051D7  +
push edi  +
call sub_10041AC  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_100522B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005221  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001370 +
jmp loc_1005338  +
call sub_1004039  +
test eax eax +
jz loc_1005221  +
push esi  +
push 1  +
push dword_1009380  +
call sub_100747D  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1005288  +
push 1  +
push dword_1009380  +
call sub_10074B1  +
cmp eax ebx +
jz loc_100526C  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_100739D  +
cmp eax 0FFFFFFFFh +
jnz loc_1005288  +
call ds:GetLastError  +
test eax eax +
jnz loc_100527E  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001370 +
jmp loc_1005337  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1004EDF  +
mov edi eax +
cmp edi ebx +
jz loc_10052FC  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_10052DF  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_100530E  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_100530E  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_100528E  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_1009380  +
call sub_10076B5  +
test eax eax +
jnz loc_1005315  +
call ds:GetLastError  +
test eax eax +
jnz loc_100530E  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001370 +
jmp loc_1005336  +
cmp [ebp+lpString] ebx +
jz loc_1005326  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_1009380  +
call sub_1007550  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_10054E7  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
test eax eax +
jz loc_10054E7  +
call sub_1004039  +
test eax eax +
jz loc_10054F9  +
call sub_1004039  +
test eax eax +
jz loc_10054A1  +
push 3  +
pop esi  +
push esi  +
push dword_1009380  +
call sub_100747D  +
mov edi eax +
cmp edi ebx +
ja loc_10053C4  +
push esi  +
push dword_1009380  +
call sub_10074B1  +
cmp eax ebx +
jz loc_10054A1  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100739D  +
cmp eax 0FFFFFFFFh +
jz loc_10054A1  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007714  +
mov edi offset aBuffer +
test eax eax +
jz loc_100543C  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007519  +
mov esi eax +
cmp esi ebx +
jz loc_10054A1  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10054A1  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1005428  +
cmp edi 100h +
jbe loc_1005489  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1005489  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1005479  +
call sub_100457F  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1005484  +
push 10h  +
call sub_100457F  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10054A1  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1004BB1  +
push esi  +
push ebx  +
push 3  +
push dword_1009380  +
call sub_100767B  +
test eax eax +
jnz loc_10053F1  +
lea eax [ebp+var_8] +
push eax  +
call sub_100485A  +
jmp loc_10054A1  +
lea eax [esi+0Ch] +
push eax  +
call sub_10048D5  +
test eax eax +
jz loc_10054A1  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10054A1  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1004BF4  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10054AF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10054F9  +
push 8  +
jmp loc_10054F3  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10054E7  +
cmp [ebp+var_4] ebx +
jz loc_10054E2  +
push ebx  +
push [ebp+var_4]  +
call sub_1004462  +
test eax eax +
jnz loc_10054E7  +
fld  qword ptr [ebp-0Ch] +
jmp loc_10054FB  +
call ds:GetLastError  +
test eax eax +
jnz loc_10054F9  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1005342  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10056F0  +
cmp [ebp+lpString] ebx +
jz loc_10056F0  +
call sub_1004039  +
test eax eax +
jz loc_1005702  +
call sub_1004039  +
test eax eax +
jz loc_1005686  +
push 3  +
pop esi  +
push esi  +
push dword_1009380  +
call sub_100747D  +
mov edi eax +
cmp edi ebx +
ja loc_10055A9  +
push esi  +
push dword_1009380  +
call sub_10074B1  +
cmp eax ebx +
jz loc_1005686  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100739D  +
cmp eax 0FFFFFFFFh +
jz loc_1005686  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007714  +
mov edi offset aBuffer +
test eax eax +
jz loc_1005621  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007519  +
mov esi eax +
cmp esi ebx +
jz loc_1005686  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1005686  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100560D  +
cmp edi 100h +
jbe loc_100566E  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100566E  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100565E  +
call sub_100457F  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1005669  +
push 10h  +
call sub_100457F  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1005686  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1004BB1  +
push esi  +
push ebx  +
push 3  +
push dword_1009380  +
call sub_100767B  +
test eax eax +
jnz loc_10055D6  +
lea eax [ebp+var_8] +
push eax  +
call sub_100485A  +
jmp loc_1005686  +
lea eax [esi+0Ch] +
push eax  +
call sub_10048D5  +
test eax eax +
jz loc_1005686  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1005686  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1004BF4  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1005694  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005702  +
push 8  +
jmp loc_10056FC  +
push 3  +
push ebx  +
push esi  +
call sub_1005054  +
push ebx  +
push esi  +
call sub_1004462  +
test eax eax +
jz loc_10056F0  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10056C8  +
call ds:wcstol  +
jmp loc_10056CE  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10056F0  +
cmp [ebp+var_4] ebx +
jz loc_10056EC  +
push ebx  +
push [ebp+var_4]  +
call sub_1004462  +
test eax eax +
jnz loc_10056F0  +
mov eax esi +
jmp loc_1005704  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005702  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10058D3  +
cmp [ebp+lpString] ebx +
jz loc_10058D3  +
call sub_1004039  +
test eax eax +
jz loc_100585F  +
push 3  +
pop esi  +
push esi  +
push dword_1009380  +
call sub_100747D  +
mov edi eax +
cmp edi ebx +
ja loc_1005782  +
push esi  +
push dword_1009380  +
call sub_10074B1  +
cmp eax ebx +
jz loc_100585F  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100739D  +
cmp eax 0FFFFFFFFh +
jz loc_100585F  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007714  +
mov edi offset aBuffer +
test eax eax +
jz loc_10057FA  +
push ebx  +
push esi  +
push dword_1009380  +
call sub_1007519  +
mov esi eax +
cmp esi ebx +
jz loc_100585F  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100585F  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_10057E6  +
cmp edi 100h +
jbe loc_1005847  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1005847  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1005837  +
call sub_100457F  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1005842  +
push 10h  +
call sub_100457F  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100585F  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_1004BB1  +
push esi  +
push ebx  +
push 3  +
push dword_1009380  +
call sub_100767B  +
test eax eax +
jnz loc_10057AF  +
lea eax [ebp+var_8] +
push eax  +
call sub_100485A  +
jmp loc_100585F  +
lea eax [esi+0Ch] +
push eax  +
call sub_10048D5  +
test eax eax +
jz loc_100585F  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100585F  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1004BF4  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100586D  +
call ds:GetLastError  +
test eax eax +
jnz loc_10058E5  +
push 8  +
jmp loc_10058DF  +
push 3  +
push ebx  +
push esi  +
call sub_1005054  +
push ebx  +
push esi  +
call sub_1004462  +
test eax eax +
jz loc_10058E5  +
cmp [ebp+arg_8] ebx +
jnz loc_100588C  +
cmp word ptr [esi] 2Dh +
jz loc_10058E5  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10058AC  +
call ds:wcstol  +
jmp loc_10058B2  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10058E5  +
cmp [ebp+var_4] ebx +
jz loc_10058CE  +
push ebx  +
push [ebp+var_4]  +
call sub_1004462  +
test eax eax +
jnz loc_10058E5  +
xor eax eax +
inc eax  +
jmp loc_10058E7  +
call ds:GetLastError  +
test eax eax +
jnz loc_10058E5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_10059B1  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_10059B1  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1004462  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1004EDF  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1005942  +
call ds:GetLastError  +
test eax eax +
jnz loc_10059C3  +
push 8  +
jmp loc_10059BD  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1004462  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1004EDF  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1005930  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_1 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1002001  +
add esp 10h +
test eax eax +
jge loc_1005981  +
movzx eax ax +
push eax  +
jmp loc_10059BD  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1002001  +
add esp 10h +
test eax eax +
jl loc_100597B  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_10047D2  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_10059C5  +
call ds:GetLastError  +
test eax eax +
jnz loc_10059C3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1005AD8  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1005AD8  +
cmp [ebp+arg_4] ebx +
jnz loc_1005A03  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1004C7A  +
jmp loc_1005AEC  +
cmp [ebp+arg_8] ebx +
jnz loc_1005A98  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1004EDF  +
mov edi eax +
test edi edi +
jz loc_1005A85  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1005A75  +
call ds:GetLastError  +
test eax eax +
jz loc_1005A93  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_1005AEA  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1005A10  +
push edi  +
jmp loc_10059F6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005AEA  +
push 8  +
jmp loc_1005AE4  +
xor eax eax +
inc eax  +
jmp loc_1005AEC  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1004EDF  +
mov edi eax +
test edi edi +
jz loc_1005A85  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_1004AA5  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_1005A98  +
test eax eax +
jge loc_1005A7F  +
movzx eax ax +
push eax  +
jmp loc_1005AE4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005AEA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100938C  +
mov eax dword_100938C +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_10051FE  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_1005AF5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1005BB8  +
test [ebp+arg_4] 0F0000h +
jz loc_1005BB8  +
test [ebp+arg_4] 10000h +
jz loc_1005B60  +
call sub_1004213  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_1005B72  +
push 1389h  +
jmp loc_1005B91  +
test al 4 +
jz loc_1005B7D  +
push 138Ah  +
jmp loc_1005B91  +
test al 2 +
jz loc_1005B88  +
push 138Ch  +
jmp loc_1005B91  +
test al 8 +
jz loc_1005BA7  +
push 138Bh  +
call sub_1005B24  +
push eax  +
push offset aS_2  +
push ebx  +
push ebx  +
push esi  +
call sub_10059D1  +
add esp 14h +
call sub_1004180  +
push eax  +
push esi  +
call sub_1004C7A  +
mov eax ebx +
pop ebx  +
jmp loc_1005BCC  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005BCA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1005C04  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005BFC  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1005BFC  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_100139C  +
call sub_1004767  +
cmp eax 0FFFFFFFFh +
jz loc_1005BFC  +
xor eax eax +
inc eax  +
jmp loc_1005BFE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_1005C52  +
movzx eax ds:byte_1005C61[eax] +
jmp ds:off_1005C59[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_1005C54  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_1005CF5  +
cmp [ebp+arg_4] ebx +
jnz loc_1005CF5  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1004767  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_1005CAF  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1004462  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1004EDF  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_1005CD2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005D03  +
push 8  +
jmp loc_1005D01  +
lea ecx [esi+1] +
push ecx  +
push offset asc_1001360  +
push eax  +
call sub_1004BF4  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_1004C37  +
mov eax [ebp+arg_4] +
jmp loc_1005D05  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005D03  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_1005D4A  +
cmp ecx edi +
jnz loc_1005D4A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005D43  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1005FAD  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1005D35  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_1005FA9  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1005FB3  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_10044DE  +
test eax eax +
jnz loc_1005E65  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_1005E65  +
cmp [edi+4] ebx +
jnz loc_1005E65  +
cmp [edi+8] ebx +
jnz loc_1005E65  +
cmp [edi+0Ch] ebx +
jnz loc_1005E65  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1005DE0  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_1005E65  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_1005E65  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_1005DF5  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_1005E65  +
mov edx eax +
or edx ecx +
jz loc_1005E06  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_1005E65  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_1005E1B  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_1005E65  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_1005E27  +
xor eax eax +
or ebx eax +
jnz loc_1005E65  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_1005E65  +
jmp ds:off_1005FD5[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_1005E7E  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1005E65  +
cmp [edi-10h] ecx +
jnz loc_1005E65  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_1005E9D  +
cmp eax 2 +
jnb loc_1005E9D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005E77  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1005FAC  +
mov eax [edi-10h] +
test eax eax +
jz loc_1005E65  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_1005E9D  +
push dword ptr [eax]  +
call sub_1006E14  +
test eax eax +
jz loc_1005E65  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1005EAD  +
cmp [edi-14h] ecx +
jz loc_1005E65  +
xor eax eax +
or ebx eax +
jnz loc_1005F93  +
cmp dword ptr [edi-24h] 1 +
jnz loc_1005E65  +
and esi 20h +
or esi eax +
jnz loc_1005E65  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_1005F93  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_1005E65  +
jmp loc_1005F93  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_1005FCB  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_1005E65  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_1005E65  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_1005E65  +
mov edx [edi-10h] +
test edx edx +
jz loc_1005E65  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_1005F3B  +
push dword ptr [edx]  +
call sub_1006E14  +
test eax eax +
jz loc_1005E65  +
jmp loc_1005F93  +
cmp dword ptr [edi-24h] 1 +
ja loc_1005E65  +
and esi 20h +
xor eax eax +
jmp loc_1005F8B  +
cmp dword ptr [edi-8] 0 +
jz loc_1005E65  +
cmp dword ptr [edi-4] 0 +
jnz loc_1005F93  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_1005F93  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_1005E65  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_1005E65  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_1005E65  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_1005D64  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005E77  +
push 42Bh  +
jmp loc_1005E71  +
push 78h  +
jmp loc_1005E71  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_1006048  +
call ds:GetLastError  +
test eax eax +
jnz loc_100603C  +
push 57h  +
call ebx  +
call sub_1004213  +
xor eax eax +
jmp loc_10065AC  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1006596  +
cmp eax edi +
jz loc_1006596  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_10060E7  +
cmp [ebp+lpString2] 0 +
jnz loc_10060E7  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_10060E7  +
cmp dword ptr [ebp+lpString] edx +
jz loc_10060C5  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10060C5  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1005B24  +
push eax  +
push 2  +
call sub_100516C  +
add esp 10h +
jmp loc_10060DB  +
call ds:GetLastError  +
test eax eax +
jnz loc_10060D6  +
push 42Bh  +
call ebx  +
call sub_1004213  +
push 800401E4h  +
call ebx  +
jmp loc_10065A9  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_10060FF  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_100610A  +
jmp loc_1006596  +
cmp dword ptr [esi+24h] 0 +
jz loc_1006110  +
cmp ecx 9 +
jz loc_1006110  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1006596  +
jmp ds:off_10065B2[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100617E  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_100617E  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1004EDF  +
test eax eax +
jnz loc_100615E  +
call ds:GetLastError  +
test eax eax +
jnz loc_10065A4  +
push 8  +
call ds:SetLastError  +
jmp loc_10065A4  +
push 3  +
push offset asc_1001380  +
push eax  +
call sub_1005054  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_10065A4  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_10061F9  +
test ebx ebx +
jz loc_1006591  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_10058F3  +
test eax eax +
jnz loc_10061F9  +
cmp dword ptr [ebp+lpString] eax +
jz loc_10061D0  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10061D0  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1005B24  +
push eax  +
push 3  +
call sub_100516C  +
add esp 14h +
jmp loc_10061E9  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1005B24  +
push eax  +
push 2  +
call sub_100516C  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_10065A9  +
test ebx ebx +
jz loc_1006591  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1006252  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1006252  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1006238  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1006238  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_10061D9  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1005B24  +
push eax  +
push 1  +
call sub_100516C  +
add esp 0Ch +
jmp loc_10061E9  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_10062A2  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_1006285  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_10077D7  +
cmp eax 0FFFFFFFFh +
jnz loc_1006591  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1007157  +
cmp eax 0FFFFFFFFh +
jnz loc_1006591  +
jmp loc_1006143  +
cmp [ebp+var_C] ecx +
jz loc_10062E1  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_10062E1  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_10062D2  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_10062D2  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_10061D9  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1006240  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_100630B  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_100457F  +
test eax eax +
jz loc_1006143  +
mov [esi+2Ch] eax +
jmp loc_1006311  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_1004BF4  +
jmp loc_1006591  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1006591  +
push 0  +
push ebx  +
call sub_1004462  +
test eax eax +
jz loc_10063EA  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1005710  +
test eax eax +
jz loc_10063EA  +
push 0Ah  +
push ebx  +
call sub_100552A  +
cmp [ebp+var_C] 1 +
jnz loc_100636C  +
mov dword ptr [ebp+String2] eax +
jmp loc_100636F  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_10063D4  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_10063AD  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100639A  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100774B  +
jmp loc_10063A4  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100776E  +
cmp eax 0FFFFFFFFh +
jnz loc_1006591  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_10063C5  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_10071CE  +
jmp loc_1006294  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1007223  +
jmp loc_1006294  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_10063E3  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_1006591  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_10063FC  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1006450  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100641E  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100641E  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_10061D9  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1006240  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1006591  +
push ebx  +
call sub_1005507  +
test eax eax +
jnz loc_1006489  +
and edi 10h +
or edi eax +
jz loc_100645A  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_100645A  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_10065AB  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100647C  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100647C  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_10061D9  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1006240  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_100649A  +
call sub_1005342  +
fstp  [ebp+var_18] +
jmp loc_10064A2  +
call sub_1005342  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1006518  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_10064E9  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_10064D2  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1007791  +
jmp loc_10064E0  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_10077B4  +
cmp eax 0FFFFFFFFh +
jnz loc_1006591  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1006505  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1007278  +
jmp loc_1006294  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_10072CD  +
jmp loc_1006294  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1006528  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_1006591  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_1006591  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_10065AB  +
cmp [ebp+lpString2] 0 +
jz loc_1006588  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1006569  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006569  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_10061D9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100657E  +
push 42Bh  +
call ds:SetLastError  +
call sub_1004213  +
jmp loc_10061E9  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_10065AB  +
call ds:GetLastError  +
test eax eax +
jnz loc_10065A4  +
push 57h  +
call ebx  +
call sub_1004213  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_10066A0  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_10066A0  +
cmp [ebp+arg_8] edi +
jz loc_10066A0  +
push [ebp+arg_8]  +
call sub_1005BD6  +
test eax eax +
jnz loc_1006625  +
push 490h  +
jmp loc_10066AC  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_100661B  +
add esi 20h +
jmp loc_1006634  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_1006681  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_100664C  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_1006671  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_1006671  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_10058F3  +
cmp eax 1 +
jz loc_100669B  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_1006632  +
jmp loc_100661B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006692  +
push 42Bh  +
call ebx  +
call sub_1004213  +
xor eax eax +
jmp loc_10066B1  +
mov eax [ebp+arg_4] +
jmp loc_10066B1  +
call ds:GetLastError  +
test eax eax +
jnz loc_10066AE  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1006795  +
cmp [ebp+arg_4] edi +
jz loc_1006795  +
cmp [ebp+lpString] edi +
jz loc_1006795  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1006795  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1004767  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_10067A6  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1004EDF  +
mov [esi] eax +
test eax eax +
jnz loc_100674C  +
call ds:GetLastError  +
test eax eax +
jnz loc_10067A3  +
push 8  +
call ds:SetLastError  +
jmp loc_10067A3  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1004EDF  +
mov [esi+4] eax +
test eax eax +
jz loc_1006738  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1004BF4  +
test edi edi +
jz loc_1006786  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_1004BF4  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10065DF  +
jmp loc_10067A6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10067A3  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_1006831  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_1006831  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1004180  +
test eax eax +
jnz loc_10067E2  +
push 7  +
call sub_100410F  +
jmp loc_10067EE  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1004EDF  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1006831  +
test ebx ebx +
jbe loc_100681B  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_1006815  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_1006815  +
push esi  +
call sub_100485A  +
add esi 50h +
dec ebx  +
jnz loc_10067FC  +
push [ebp+arg_0]  +
call sub_10041AC  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_1006833  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1004EDF  +
mov ebx eax +
cmp ebx edi +
jz loc_10068C2  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_10068D4  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_100686B  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_10068DB  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_10068D4  +
call esi  +
test eax eax +
jnz loc_10068D4  +
push 57h  +
jmp loc_10068CE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10068D4  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006AA1  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_100457F  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_10068D4  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1006908  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100485A  +
jmp loc_10068D4  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_10068FD  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1004EDF  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_10068FD  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1002001  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_100697F  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_100693D  +
cmp dword ptr [ebp+lpString] edi +
jz loc_10068FD  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1004462  +
cmp eax 4 +
ja loc_10069B7  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100485A  +
call ds:GetLastError  +
test eax eax +
jnz loc_10068D4  +
push 42Bh  +
jmp loc_10068CE  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_10047D2  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_10069F1  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_100136C +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_1006A41  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1004EDF  +
mov esi eax +
cmp esi edi +
jnz loc_1006A28  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100485A  +
jmp loc_10068C2  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_1002001  +
add esp 14h +
jmp loc_1006A61  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_1006A4F  +
push 7  +
call sub_100410F  +
jmp loc_1006A5B  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1004EDF  +
mov esi eax +
cmp esi edi +
jz loc_1006A1A  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1004EDF  +
mov esi eax +
cmp esi edi +
jz loc_1006A1A  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1005B24  +
push eax  +
push 50h  +
push esi  +
call sub_1002001  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_100485A  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_1006B23  +
cmp [ebp+arg_4] ebx +
jz loc_1006B23  +
cmp [ebp+arg_C] ebx +
jz loc_1006B23  +
cmp [ebp+dwErrCode] ebx +
jz loc_1006B23  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_1006B23  +
call sub_10042C5  +
test eax eax +
jnz loc_1006B03  +
push 157Fh  +
call sub_1005B24  +
push eax  +
call sub_10041AC  +
push 47Eh  +
call edi  +
jmp loc_1006B2C  +
call sub_1004039  +
test eax eax +
jz loc_1006B27  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_1006B4B  +
cmp eax [ebp+arg_C] +
jl loc_1006B35  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006B27  +
push 57h  +
call edi  +
call sub_1004213  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_1005C70  +
mov esi eax +
cmp esi ebx +
jz loc_1006B27  +
push esi  +
call sub_100683E  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_1006B27  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_1005D11  +
test eax eax +
jz loc_1006B27  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_1006CAD  +
jmp loc_1006B82  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_1006B9B  +
mov edi [ecx+4] +
jmp loc_1006B9D  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10065DF  +
cmp eax 0FFFFFFFFh +
jnz loc_1006BE2  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10066BD  +
cmp eax 0FFFFFFFFh +
jnz loc_1006BD5  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_1006CEA  +
mov edi ebx +
xor ebx ebx +
jmp loc_1006BDB  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_1006D1D  +
test edi edi +
jz loc_1006C3D  +
cmp [ebp+arg_8] 2 +
jnz loc_1006C3D  +
push dword ptr [esi+8]  +
call sub_1005C31  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1006C38  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10065DF  +
cmp eax 0FFFFFFFFh +
jnz loc_1006C2F  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10066BD  +
cmp eax 0FFFFFFFFh +
jz loc_1006C3D  +
mov [ebp+arg_8] 1 +
jmp loc_1006C3B  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_1006002  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_1006D96  +
mov eax [esi+18h] +
test eax eax +
jz loc_1006C78  +
cmp eax [esi+1Ch] +
jz loc_1006D3B  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_1006C91  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_1006B7F  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_1006CDF  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_1006CDF  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_1006D80  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_1006CD6  +
cmp [ecx+1Ch] ebx +
jz loc_1006DA6  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_1006CB7  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_1006B2E  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1005B24  +
push eax  +
push esi  +
call sub_100516C  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10067B2  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1006B2C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006B27  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_1006B27  +
test ebx ebx +
jz loc_1006D68  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006D68  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1005B24  +
push eax  +
push 3  +
call sub_100516C  +
add esp 14h +
jmp loc_1006D02  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1005B24  +
push eax  +
push 2  +
jmp loc_1006CFA  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006D91  +
push 42Bh  +
call edi  +
call sub_1004213  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_10067B2  +
jmp loc_1006B2C  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_1006DC0  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_1006D80  +
mov edi [ecx+24h] +
jmp loc_1006DD8  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_1006DD6  +
push ebx  +
push eax  +
call sub_1005C70  +
mov edi eax +
test edi edi +
jnz loc_1006DDC  +
jmp loc_1006D91  +
mov edi ecx +
test edi edi +
jz loc_1006DF2  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_1006DF2  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_1006D73  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1005B24  +
push eax  +
push 1  +
call sub_100516C  +
add esp 0Ch +
jmp loc_1006D02  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1006E2A  +
cmp dword ptr [eax] 9 +
jnz loc_1006E2A  +
xor eax eax +
inc eax  +
jmp loc_1006E2C  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_1006E45  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1006E14  +
test eax eax +
jz loc_1006EA0  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1006E94  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_1006FA1  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100485A  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_1006E78  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_1006E14  +
test eax eax +
jz loc_1006ECB  +
push ecx  +
call sub_1006E5A  +
push esi  +
call sub_100485A  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1006E14  +
test eax eax +
jz loc_1006EEA  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_1006E14  +
test eax eax +
jnz loc_1006F09  +
xor eax eax +
jmp loc_1006F2E  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_1006F05  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_1006F24  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_1006F1C  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1006F2D  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1006E14  +
test eax eax +
jnz loc_1006F4F  +
or eax 0FFFFFFFFh +
jmp loc_1006F97  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_1006F4A  +
push 14h  +
call sub_100457F  +
test eax eax +
jz loc_1006F4A  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_1006F8A  +
mov [esi+8] eax +
jmp loc_1006F90  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1007015  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_1006FE0  +
jz loc_1006FFC  +
cmp eax 20000h +
jz loc_1006FFC  +
cmp eax 30000h +
jz loc_1006FFC  +
cmp eax 40000h +
jz loc_1006FFC  +
cmp eax 50000h +
jz loc_1006FFC  +
cmp eax 60000h +
jz loc_1006FFC  +
jmp loc_1007015  +
cmp eax 80000h +
jz loc_1007007  +
cmp eax 90000h +
jz loc_1006FFC  +
cmp eax 0A0000h +
jz loc_1006FFC  +
cmp eax 0B0000h +
jnz loc_1007015  +
add edx 0Ch +
push edx  +
call sub_100485A  +
jmp loc_1007015  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_1006EAA  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_1006E14  +
test eax eax +
jnz loc_1007039  +
or eax 0FFFFFFFFh +
jmp loc_1007148  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_1007143  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_1007133  +
mov ecx 70000h +
cmp eax ecx +
ja loc_10070C7  +
jz loc_10070B5  +
cmp eax 20000h +
jz loc_1007099  +
cmp eax 30000h +
jz loc_100712A  +
cmp eax 40000h +
jz loc_100712A  +
cmp eax 60000h +
jnz loc_1007133  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_10070BC  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1004483  +
test eax eax +
jz loc_100714D  +
mov edx [ebp+arg_0] +
jmp loc_1007133  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_1007133  +
mov eax edx +
jmp loc_1007146  +
cmp eax 90000h +
jz loc_100712A  +
cmp eax 0A0000h +
jz loc_10070ED  +
cmp eax 0B0000h +
jnz loc_1007133  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1007133  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_1007131  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1007133  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1007133  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1007133  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1007133  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1007133  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_1007131  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_10070C3  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_100704F  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_1007146  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1006E14  +
test eax eax +
jnz loc_1007172  +
or eax 0FFFFFFFFh +
jmp locret_10071C5  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1007185  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_100457F  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10071C0  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_1004BF4  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jnz loc_10071C3  +
lea eax [ebp+var_4] +
push eax  +
call sub_100485A  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1006E14  +
test eax eax +
jz loc_1007217  +
push 4  +
call sub_100457F  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007217  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jnz locret_100721A  +
lea eax [ebp+var_4] +
push eax  +
call sub_100485A  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1006E14  +
test eax eax +
jz loc_100726C  +
push 4  +
call sub_100457F  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100726C  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jnz locret_100726F  +
lea eax [ebp+var_4] +
push eax  +
call sub_100485A  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1006E14  +
test eax eax +
jz loc_10072C1  +
push 4  +
call sub_100457F  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10072C1  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jnz locret_10072C4  +
lea eax [ebp+var_4] +
push eax  +
call sub_100485A  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_1006E14  +
test eax eax +
jz loc_1007316  +
push 8  +
call sub_100457F  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007316  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jnz locret_1007319  +
lea eax [ebp+var_4] +
push eax  +
call sub_100485A  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_1006E14  +
test eax eax +
jz loc_1007390  +
call sub_1006E35  +
push eax  +
mov [ebp+var_4] eax +
call sub_1006E14  +
test eax eax +
jz loc_1007390  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_100736A  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jz loc_100736A  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1007354  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_1007387  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jnz loc_1007393  +
lea eax [ebp+var_4] +
push eax  +
call sub_1006EAA  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_1006E14  +
test eax eax +
jnz loc_10073B3  +
or eax 0FFFFFFFFh +
jmp loc_10073D7  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_10073D4  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_1006F37  +
cmp eax 0FFFFFFFFh +
jz loc_10073D4  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_10073BB  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1006EF3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100743C  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1007419  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_100741F  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1007427  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_1006FA1  +
lea eax [ebp+var_4] +
push eax  +
call sub_100485A  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_1007472  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007472  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10073E0  +
jmp loc_1007474  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_10074A6  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10074A6  +
push dword ptr [eax+0Ch]  +
call sub_1006ED5  +
jmp loc_10074A8  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jnz loc_10074CB  +
xor eax eax +
jmp loc_10074E1  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_10074DE  +
cmp ecx 80000h +
jnz loc_10074C7  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jnz loc_1007504  +
xor eax eax +
jmp loc_1007510  +
cmp dword ptr [eax+4] 20000h +
jnz loc_1007500  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_1007545  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007545  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10074B1  +
jmp loc_1007547  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_100757C  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100757C  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10074EA  +
jmp loc_100757E  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1007598  +
xor eax eax +
jmp loc_10075C8  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_1007594  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_10075BB  +
test ecx ecx +
jz loc_10075BF  +
jmp loc_1007594  +
test ecx ecx +
jnz loc_10075C2  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
mov esi eax +
cmp esi edi +
jnz loc_10075F1  +
xor eax eax +
jmp loc_1007670  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_1007602  +
cmp eax edi +
jnz loc_1007657  +
cmp [ebp+arg_C] edi +
jnz loc_1007613  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_1007637  +
lea edi [eax+eax] +
push edi  +
call sub_100457F  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1007657  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100765E  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100765E  +
lea edi [esi+0Ch] +
push edi  +
call sub_100485A  +
and dword ptr [edi] 0 +
push ebx  +
call sub_100457F  +
mov [edi] eax +
test eax eax +
jnz loc_100765B  +
xor eax eax +
jmp loc_100766F  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1004BF4  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_10076AA  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10076AA  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1007587  +
jmp loc_10076AC  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_10076E7  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10076E7  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10075D2  +
jmp loc_10076E9  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_100770B  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006EF3  +
test eax eax +
jz loc_1007740  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007740  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10076F2  +
jmp loc_1007742  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100701E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100701E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100701E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100701E  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100701E  +
pop ebp  +
retn 10h  +
***
retf   +
***
