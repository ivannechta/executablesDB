sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_472884 1 +
mov ds:dword_472880 1 +
mov ds:dword_47287C 1 +
mov ds:dword_47288C 1 +
jz loc_4010B0  +
mov ds:dword_471008 eax +
mov eax ds:dword_472890 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_43E850  +
mov edx ds:dword_472894 +
mov ds:dword_472CA0 eax +
mov ds:dword_472CA4 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_43EA90  +
cmp dword_442044 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_43EB00 +
call sub_43EAF0  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_472898 +
mov dword ptr [esp+10h] offset dword_471000 +
mov dword ptr [esp+8] offset dword_471014 +
mov dword ptr [esp+4] offset dword_471018 +
mov ds:dword_471000 eax +
mov eax ds:dword_47289C +
mov dword ptr [esp] offset dword_47101C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_471010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_43F850  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_472890 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_472CA8 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_472CAC +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_472CAC +
test eax eax +
jz loc_401481  +
mov ds:dword_471004 1 +
mov eax ds:dword_472CAC +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_46F9D0 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_43EE00  +
mov [esp+88h+var_88] offset sub_43E940 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_4728A0 eax +
mov [esp+88h+var_88] offset dword_401000 +
call loc_44204C  +
call sub_43F0D0  +
mov eax ds:_acmdln +
mov ds:dword_472C3C 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_472C38 eax +
mov ebx ds:dword_472890 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_441000 eax +
mov eax ds:dword_47101C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_471018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_471018 esi +
call sub_43F160  +
mov edx ds:dword_471014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_47101C +
mov ecx ds:dword_471014 +
mov edx ds:dword_471018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_440520  +
mov ecx ds:dword_471008 +
test ecx ecx +
mov ds:dword_47100C eax +
jz loc_4014AB  +
mov edx ds:dword_471004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_47100C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_472CAC +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_472CAC +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_474008 +
mov [esp+88h+var_88] offset unk_474000 +
call _initterm  +
test ebx ebx +
mov ds:dword_472CAC 2 +
jnz loc_401261  +
xchg ebx ds:dword_472CA8 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_472CAC 1 +
mov [esp+88h+var_84] offset unk_474018 +
mov [esp+88h+var_88] offset unk_47400C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_472890 1 +
call sub_43F180  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_472890 0 +
call sub_43F180  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_44205C +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_44205C +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
cmp eax 74h +
mov edx eax +
jz loc_401C32  +
jbe loc_4015D6  +
cmp eax 0B6h +
jz loc_401C26  +
ja loc_401683  +
cmp eax 92h +
jz loc_401C2C  +
jbe loc_401762  +
cmp eax 0A7h +
jz loc_401BEA  +
lea esi [esi+0] +
jbe loc_4018D0  +
cmp eax 0B2h +
jz loc_401820  +
jbe loc_401AE0  +
cmp edx 0B4h +
mov eax offset aR_ia64_dtprel3 +
jz locret_401681  +
mov edx offset aR_ia64_dtpre_0 +
mov eax offset aR_ia64_dtprel6 +
cmova eax edx +
retn   +
cmp eax 48h +
jz loc_401C38  +
ja loc_401630  +
cmp eax 2Eh +
jz loc_401C3E  +
lea esi [esi+0] +
jbe loc_4017C0  +
cmp eax 3Eh +
jz loc_401C68  +
nop   +
jbe loc_401943  +
cmp eax 44h +
jz loc_401808  +
nop   +
jbe loc_401B22  +
cmp edx 46h +
mov eax offset aR_ia64_fptr64m +
jz locret_401681  +
mov edx offset aR_ia64_fptr64l +
mov eax offset aR_ia64_fptr32l +
cmova eax edx +
retn   +
cmp eax 57h +
jz loc_401C1A  +
jbe loc_401726  +
cmp eax 65h +
jz loc_401C4A  +
nop   +
lea esi [esi+0] +
jbe loc_401974  +
cmp eax 6Ch +
jz loc_40180E  +
nop   +
jbe loc_401BA8  +
cmp edx 6Eh +
mov eax offset aR_ia64_rel64ms +
jz locret_401681  +
mov eax offset aR_ia64_rel32ls +
jb locret_401681  +
cmp edx 6Fh +
mov eax offset aR_ia64_rel64ls +
jnz loc_4016D8  +
retn   +
cmp eax 7000000Ah +
jz loc_401C20  +
nop   +
jbe loc_4016E0  +
cmp eax 70000010h +
jz loc_401BF6  +
lea esi [esi+0] +
jbe loc_4019A0  +
cmp eax 70000014h +
jz loc_401814  +
jbe loc_401B84  +
cmp edx 70000016h +
mov eax offset aR_ia64_vms_acc +
jz locret_401681  +
mov eax offset aR_ia64_vms_a_0 +
jb locret_401681  +
cmp edx 70000017h +
mov eax offset aR_ia64_vms_a_1 +
jz locret_401681  +
xor eax eax +
retn   +
cmp eax 70000003h +
jz loc_401C14  +
nop   +
lea esi [esi+0] +
jbe loc_401894  +
cmp eax 70000006h +
jz loc_40181A  +
jbe loc_401BC6  +
cmp edx 70000008h +
mov eax offset aR_ia64_vms_fix +
jz locret_401681  +
mov edx offset aR_ia64_vms_f_0 +
mov eax offset aR_ia64_vms_f_1 +
cmova eax edx +
retn   +
cmp eax 4Eh +
jz loc_401C02  +
jbe loc_401860  +
cmp eax 53h +
jz loc_40182C  +
nop   +
jbe loc_401B40  +
cmp edx 55h +
mov eax offset aR_ia64_ltoff_f +
jz locret_401681  +
mov edx offset aR_ia64_ltoff_0 +
mov eax offset aR_ia64_ltoff_1 +
cmova eax edx +
retn   +
cmp eax 7Bh +
jz loc_401C6E  +
jbe loc_401832  +
cmp eax 84h +
jz loc_401826  +
lea esi [esi+0] +
jbe loc_401B60  +
cmp edx 87h +
mov eax offset aR_ia64_ldxmov +
jz locret_401681  +
cmp edx 91h +
mov eax offset aR_ia64_tprel14 +
jz locret_401681  +
cmp edx 86h +
mov eax offset aR_ia64_ltoff22 +
jnz loc_4016D8  +
retn   +
cmp eax 25h +
jz loc_401C44  +
lea esi [esi+0] +
jbe loc_401910  +
cmp eax 2Ah +
jz loc_401802  +
nop   +
lea esi [esi+0] +
jbe loc_401B04  +
cmp edx 2Ch +
mov eax offset aR_ia64_gprel32 +
jz locret_401681  +
mov edx offset aR_ia64_gprel_0 +
mov eax offset aR_ia64_gprel64 +
cmova eax edx +
retn   +
mov eax offset aR_ia64_gprel22 +
retn   +
mov eax offset aR_ia64_fptr32m +
retn   +
mov eax offset aR_ia64_rel32ms +
retn   +
mov eax offset aR_ia64_vms_a_2 +
retn   +
mov eax offset aR_ia64_vms_f_2 +
retn   +
mov eax offset aR_ia64_dtprel2 +
retn   +
mov eax offset aR_ia64_copy +
retn   +
mov eax offset aR_ia64_ltoff_2 +
retn   +
cmp eax 77h +
jz loc_401C56  +
ja loc_401A54  +
cmp edx 75h +
mov eax offset aR_ia64_ltv32ls +
jz locret_401681  +
cmp edx 76h +
mov eax offset aR_ia64_ltv64ms +
jnz loc_4016D8  +
retn   +
cmp eax 4Bh +
jz loc_401C50  +
lea esi [esi+0] +
ja loc_401A36  +
cmp edx 49h +
mov eax offset aR_ia64_pcrel21 +
jz locret_401681  +
cmp edx 4Ah +
mov eax offset aR_ia64_pcrel_0 +
jnz loc_4016D8  +
retn   +
cmp eax 70000000h +
jz loc_401C5C  +
nop   +
ja loc_401A72  +
cmp edx 0B7h +
mov eax offset aR_ia64_dtpre_1 +
jz locret_401681  +
cmp edx 0BAh +
mov eax offset aR_ia64_ltoff_d +
jnz loc_4016D8  +
retn   +
cmp eax 97h +
jz loc_401C62  +
nop   +
lea esi [esi+0] +
ja loc_401A96  +
cmp edx 93h +
mov eax offset aR_ia64_tprel64 +
jz locret_401681  +
cmp edx 96h +
mov eax offset aR_ia64_tprel_0 +
jnz loc_4016D8  +
retn   +
cmp eax 22h +
jz loc_401BF0  +
lea esi [esi+0] +
ja loc_4019D6  +
test edx edx +
mov eax offset aR_ia64_none +
jz locret_401681  +
cmp edx 21h +
mov eax offset aR_ia64_imm14 +
jnz loc_4016D8  +
retn   +
cmp eax 33h +
jz loc_401BFC  +
lea esi [esi+0] +
ja loc_401AC0  +
cmp edx 2Fh +
mov eax offset aR_ia64_gprel_1 +
jz locret_401681  +
cmp edx 32h +
mov eax offset aR_ia64_ltoff_3 +
jnz loc_4016D8  +
retn   +
cmp eax 5Eh +
jz loc_401C08  +
lea esi [esi+0] +
ja loc_4019F4  +
cmp edx 5Ch +
mov eax offset aR_ia64_segrel3 +
jz locret_401681  +
cmp edx 5Dh +
mov eax offset aR_ia64_segre_0 +
jnz loc_4016D8  +
retn   +
cmp eax 7000000Dh +
jz loc_401C0E  +
nop   +
lea esi [esi+0] +
ja loc_401A12  +
cmp edx 7000000Bh +
mov eax offset aR_ia64_vms_a_3 +
jz locret_401681  +
cmp edx 7000000Ch +
mov eax offset aR_ia64_vms_a_4 +
jnz loc_4016D8  +
retn   +
cmp edx 23h +
mov eax offset aR_ia64_imm64 +
jz locret_401681  +
cmp edx 24h +
mov eax offset aR_ia64_dir32ms +
jnz loc_4016D8  +
retn   +
cmp edx 5Fh +
mov eax offset aR_ia64_segrel6 +
jz locret_401681  +
cmp edx 64h +
mov eax offset aR_ia64_secrel3 +
jnz loc_4016D8  +
retn   +
cmp edx 7000000Eh +
mov eax offset aR_ia64_vms_a_5 +
jz locret_401681  +
cmp edx 7000000Fh +
mov eax offset aR_ia64_vms_a_6 +
jnz loc_4016D8  +
retn   +
cmp edx 4Ch +
mov eax offset aR_ia64_pcrel32 +
jz locret_401681  +
cmp edx 4Dh +
mov eax offset aR_ia64_pcrel_1 +
jnz loc_4016D8  +
retn   +
cmp edx 79h +
mov eax offset aR_ia64_pcrel_2 +
jz locret_401681  +
cmp edx 7Ah +
mov eax offset aR_ia64_pcrel22 +
jnz loc_4016D8  +
retn   +
cmp edx 70000001h +
mov eax offset aR_ia64_vms_dir +
jz locret_401681  +
cmp edx 70000002h +
mov eax offset aR_ia64_vms_cal +
jnz loc_4016D8  +
retn   +
cmp edx 9Ah +
mov eax offset aR_ia64_ltoff_t +
jz locret_401681  +
cmp edx 0A6h +
mov eax offset aR_ia64_dtpmod6 +
jnz loc_4016D8  +
retn   +
cmp edx 3Ah +
mov eax offset aR_ia64_pltoff2 +
jz locret_401681  +
cmp edx 3Bh +
mov eax offset aR_ia64_pltoff6 +
jnz loc_4016D8  +
retn   +
cmp edx 0AAh +
mov eax offset aR_ia64_ltoff_4 +
jz locret_401681  +
cmp edx 0B1h +
mov eax offset aR_ia64_dtprel1 +
jnz loc_4016D8  +
retn   +
cmp edx 26h +
mov eax offset aR_ia64_dir64ms +
jz locret_401681  +
cmp edx 27h +
mov eax offset aR_ia64_dir64ls +
jnz loc_4016D8  +
retn   +
cmp edx 3Fh +
mov eax offset aR_ia64_pltof_0 +
jz locret_401681  +
cmp edx 43h +
mov eax offset aR_ia64_fptr64i +
jnz loc_4016D8  +
retn   +
cmp edx 4Fh +
mov eax offset aR_ia64_pcrel64 +
jz locret_401681  +
cmp edx 52h +
mov eax offset aR_ia64_ltoff_5 +
jnz loc_4016D8  +
retn   +
cmp edx 80h +
mov eax offset aR_ia64_ipltmsb +
jz locret_401681  +
cmp edx 81h +
mov eax offset aR_ia64_ipltlsb +
jnz loc_4016D8  +
retn   +
cmp edx 70000011h +
mov eax offset aR_ia64_vms_a_7 +
jz locret_401681  +
cmp edx 70000012h +
mov eax offset aR_ia64_vms_a_8 +
jnz loc_4016D8  +
retn   +
cmp edx 66h +
mov eax offset aR_ia64_secrel6 +
jz locret_401681  +
cmp edx 67h +
mov eax offset aR_ia64_secre_0 +
jnz loc_4016D8  +
retn   +
cmp edx 70000004h +
mov eax offset aR_ia64_vms_exe +
jz locret_401681  +
cmp edx 70000005h +
mov eax offset aR_ia64_vms_f_3 +
jnz loc_4016D8  +
retn   +
mov eax offset aR_ia64_dtpmo_0 +
retn   +
mov eax offset aR_ia64_imm22 +
retn   +
mov eax offset aR_ia64_vms_a_9 +
retn   +
mov eax offset aR_ia64_ltoff64 +
retn   +
mov eax offset aR_ia64_pcrel_3 +
retn   +
mov eax offset aR_ia64_segre_1 +
retn   +
mov eax offset aR_ia64_vms__10 +
retn   +
mov eax offset aR_ia64_vms_e_0 +
retn   +
mov eax offset aR_ia64_ltoff_6 +
retn   +
mov eax offset aR_ia64_vms__11 +
retn   +
mov eax offset aR_ia64_dtpre_2 +
retn   +
mov eax offset aR_ia64_tprel22 +
retn   +
mov eax offset aR_ia64_ltv32ms +
retn   +
mov eax offset aR_ia64_pcrel60 +
retn   +
mov eax offset aR_ia64_gprel_2 +
retn   +
mov eax offset aR_ia64_dir32ls +
retn   +
mov eax offset aR_ia64_secre_1 +
retn   +
mov eax offset aR_ia64_pcrel_4 +
retn   +
mov eax offset aR_ia64_ltv64ls +
retn   +
mov eax offset aR_ia64_vms_d_0 +
retn   +
mov eax offset aR_ia64_tprel_1 +
retn   +
mov eax offset aR_ia64_pltof_1 +
retn   +
mov eax offset aR_ia64_pcrel_5 +
retn   +
***
push edi  +
push esi  +
push ebx  +
jz loc_401D49  +
mov edx ds:dword_47207C +
test edx edx +
jz loc_401D53  +
mov eax [eax] +
mov ebp offset aCorrupt +
add edx eax +
cmp eax ds:dword_472078 +
cmovb ebp edx +
mov ecx 80h +
mov edx offset unk_471C20 +
jmp loc_401CD0  +
cmp ecx 1 +
jbe loc_401D04  +
add eax 40h +
sub ecx 2 +
mov byte ptr [edx] 5Eh +
add edx 2 +
mov [edx-1] al +
test ecx ecx +
jz loc_401D04  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
test al al +
jz loc_401D04  +
movzx esi al +
movsx edi al +
movzx esi ds:word_4699A0[esi+esi] +
test si 2 +
jnz loc_401CB8  +
test si 10h +
jz loc_401D11  +
sub ecx 1 +
add edx 1 +
mov [edx-1] al +
test ecx ecx +
jnz loc_401CD0  +
mov byte ptr [edx] 0 +
mov eax offset unk_471C20 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 3 +
jbe loc_401D04  +
and edi 0F0h +
and eax 0Fh +
sar edi 4 +
movzx eax ds:byte_461F08[eax] +
sub ecx 4 +
movzx ebx ds:byte_461F08[edi] +
add edx 4 +
mov byte ptr [edx-4] 3Ch +
mov byte ptr [edx-1] 3Eh +
mov [edx-2] al +
mov [edx-3] bl +
jmp loc_401CCC  +
mov ebp offset aNone_0 +
jmp loc_401CAC  +
mov ebp offset aNoName +
jmp loc_401CAC  +
***
cmp eax 60000033h +
mov edx eax +
jz loc_401FA2  +
ja loc_401DC6  +
cmp eax 60000021h +
jz loc_401FA8  +
lea esi [esi+0] +
ja loc_401E10  +
cmp eax 60000017h +
jz loc_401F96  +
ja loc_401ED5  +
cmp edx 6000000Fh +
mov eax offset aVms_imgiocnt +
jz locret_401DC4  +
cmp edx 60000015h +
mov eax offset aVms_lnkflags +
jz locret_401DC4  +
cmp edx 6000000Dh +
mov eax offset aVms_subtype +
jz locret_401FA0  +
xor eax eax +
retn   +
cmp eax 60000043h +
jz loc_401FB0  +
ja loc_401E50  +
cmp eax 6000003Bh +
jz loc_401F86  +
nop   +
ja loc_401F10  +
cmp edx 60000037h +
mov eax offset aVms_seg_no +
jz locret_401DC4  +
cmp edx 60000039h +
mov eax offset aVms_symvec_off +
jz locret_401DC4  +
cmp edx 60000035h +
mov eax offset aVms_linktime +
jnz loc_401DC2  +
retn   +
cmp eax 6000002Bh +
jz loc_401F90  +
nop   +
lea esi [esi+0] +
ja loc_401EA0  +
cmp edx 60000025h +
mov eax offset aVms_fixup_need +
jz locret_401DC4  +
cmp edx 60000027h +
mov eax offset aVms_symvec_cnt +
jz locret_401DC4  +
cmp edx 60000023h +
mov eax offset aVms_fixup_rela +
jnz loc_401DC2  +
retn   +
cmp eax 6000004Bh +
jz loc_401F80  +
nop   +
lea esi [esi+0] +
ja loc_401F45  +
cmp edx 60000047h +
mov eax offset aVms_seg_rela_o +
jz locret_401DC4  +
cmp edx 60000049h +
mov eax offset aVms_fixup_re_0 +
jz locret_401DC4  +
cmp edx 60000045h +
mov eax offset aVms_img_rela_o +
jnz loc_401DC2  +
retn   +
cmp edx 6000002Fh +
mov eax offset aVms_unwindsz +
jz locret_401DC4  +
cmp edx 60000031h +
mov eax offset aVms_unwind_cod +
jz locret_401DC4  +
cmp edx 6000002Dh +
mov eax offset aVms_stacksize +
jnz loc_401DC2  +
retn   +
cmp edx 6000001Dh +
mov eax offset aVms_needed_ide +
jz locret_401DC4  +
cmp edx 6000001Fh +
mov eax offset aVms_img_rela_c +
jz locret_401DC4  +
cmp edx 60000019h +
mov eax offset aVms_ident +
jnz loc_401DC2  +
retn   +
cmp edx 6000003Fh +
mov eax offset aVms_unwind_seg +
jz locret_401DC4  +
cmp edx 60000041h +
mov eax offset aVms_strtab_off +
jz locret_401DC4  +
cmp edx 6000003Dh +
mov eax offset aVms_unwind_off +
jnz loc_401DC2  +
retn   +
cmp edx 6000004Fh +
mov eax offset aVms_fpmode +
jz locret_401DC4  +
cmp edx 70000000h +
mov eax offset aIa_64_plt_rese +
jz locret_401DC4  +
cmp edx 6000004Dh +
mov eax offset aVms_pltgot_seg +
jnz loc_401DC2  +
retn   +
mov eax offset aVms_pltgot_off +
retn   +
mov eax offset aVms_symvec_seg +
retn   +
mov eax offset aVms_xlated +
retn   +
mov eax offset aVms_vir_mem_bl +
retn   +
retn   +
mov eax offset aVms_unwind_inf +
retn   +
mov eax offset aVms_seg_rela_c +
retn   +
mov eax offset aVms_sysver_off +
retn   +
***
cmp eax 60000009h +
mov edx eax +
jz loc_4020F6  +
jbe loc_402015  +
cmp eax 60000014h +
jz loc_4020E3  +
lea esi [esi+0] +
ja loc_402083  +
cmp edx 60000011h +
mov eax offset aHp_fastbind +
jz locret_402013  +
jbe loc_4020D0  +
cmp edx 60000012h +
mov eax offset aHp_opt_annot +
jz locret_402013  +
cmp edx 60000013h +
mov eax offset aHp_hsl_annot +
jnz loc_402050  +
retn   +
cmp eax 60000004h +
jz loc_4020F0  +
ja loc_402053  +
cmp edx 60000001h +
mov eax offset aHp_core_none +
jz locret_402013  +
jbe loc_4020C1  +
cmp edx 60000002h +
mov eax offset aHp_core_versio +
jz locret_402013  +
cmp edx 60000003h +
mov eax offset aHp_core_kernel +
jz locret_402013  +
nop   +
xor eax eax +
retn   +
cmp edx 60000006h +
mov eax offset aHp_core_loadab +
jz locret_402013  +
mov eax offset aHp_core_proc +
jb locret_402013  +
cmp edx 60000007h +
mov eax offset aHp_core_stack +
jz locret_402013  +
cmp edx 60000008h +
mov eax offset aHp_core_shm +
jnz loc_402050  +
retn   +
cmp edx 70000000h +
mov eax offset aParisc_archext +
jz locret_402013  +
jbe loc_4020B2  +
cmp edx 70000001h +
mov eax offset aParisc_unwind +
jz locret_402013  +
cmp edx 70000002h +
mov eax offset aParisc_weakord +
jnz loc_402050  +
retn   +
cmp edx 60000015h +
mov eax offset aHp_core_utsnam +
jnz loc_402050  +
retn   +
cmp edx 60000000h +
mov eax offset aHp_tls +
jnz loc_402050  +
retn   +
cmp edx 60000010h +
mov eax offset aHp_parallel +
jnz loc_402050  +
retn   +
mov eax offset aHp_stack +
retn   +
mov eax offset aHp_core_comm +
retn   +
mov eax offset aHp_core_mmf +
retn   +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov ecx [edx+4] +
mov esi [edx] +
mov edx [eax+4] +
mov ebx [eax] +
cmp ecx edx +
jbe loc_402120  +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
jnb loc_402138  +
cmp ecx edx +
mov eax 1 +
jnb loc_402130  +
neg eax  +
pop ebx  +
pop esi  +
retn   +
jbe loc_402147  +
xor eax eax +
neg eax  +
jmp loc_40212D  +
cmp esi ebx +
ja loc_402118  +
cmp ecx edx +
mov eax 1 +
jb loc_40212B  +
jmp loc_402130  +
cmp esi ebx +
jnb loc_402132  +
neg eax  +
lea esi [esi+0] +
jmp loc_40212D  +
***
movzx edx ds:word_471D92 +
cmp dx 53h +
jz loc_402350  +
jbe loc_4021C0  +
cmp dx 0BDh +
jz loc_402262  +
nop   +
jbe loc_402270  +
cmp dx 1223h +
jz loc_4022C6  +
ja loc_402208  +
cmp dx 0DDh +
jz loc_4022C6  +
cmp dx 1057h +
jz loc_402350  +
xor ecx ecx +
cmp eax 6 +
setz cl  +
cmp dx 0BFh +
jnz loc_402204  +
mov eax ecx +
retn   +
cmp dx 14h +
jz loc_4022F0  +
lea esi [esi+0] +
jbe loc_4022A7  +
cmp dx 28h +
jz loc_402340  +
ja loc_402230  +
cmp dx 16h +
jz loc_402324  +
lea esi [esi+0] +
jb loc_4022F0  +
xor ecx ecx +
cmp eax 0Dh +
setz cl  +
cmp dx 17h +
jz loc_4021B8  +
xor ecx ecx +
jmp loc_4021B8  +
cmp dx 0A390h +
jz loc_402324  +
cmp dx 0ABC7h +
jz loc_40229A  +
xor ecx ecx +
cmp eax 0Ah +
setz cl  +
cmp dx 9026h +
jz loc_4021B8  +
jmp loc_402204  +
cmp dx 2Bh +
jz loc_4022C6  +
cmp dx 3Eh +
nop   +
jz loc_402262  +
xor ecx ecx +
cmp eax 2 +
setz cl  +
cmp dx 2Ah +
jz loc_4021B8  +
jmp loc_402204  +
cmp dx 2 +
jz loc_4022C6  +
cmp dx 3 +
jnz loc_402204  +
xor ecx ecx +
cmp eax 2 +
setz cl  +
mov eax ecx +
retn   +
cmp dx 0B5h +
ja loc_4022D1  +
cmp dx 0B4h +
jnb loc_402262  +
xor ecx ecx +
cmp eax 9 +
setz cl  +
cmp dx 5Ch +
jz loc_4021B8  +
cmp dx 5Eh +
jnz loc_402204  +
xor ecx ecx +
cmp eax 0Eh +
setz cl  +
jmp loc_4021B8  +
cmp dx 4 +
jz loc_402331  +
jbe loc_402256  +
cmp dx 0Fh +
jnz loc_402300  +
xor ecx ecx +
cmp eax 9 +
setz cl  +
jmp loc_4021B8  +
xor ecx ecx +
cmp eax 6 +
setz cl  +
mov eax ecx +
retn   +
cmp dx 0B7h +
jz loc_402315  +
xor ecx ecx +
cmp eax 4 +
setz cl  +
cmp dx 0BCh +
jz loc_4021B8  +
jmp loc_402204  +
xor ecx ecx +
cmp eax 1Ah +
setz cl  +
jmp loc_4021B8  +
cmp dx 12h +
jz loc_4022C6  +
cmp dx 6 +
jz loc_402262  +
jmp loc_402204  +
xor ecx ecx +
cmp eax 105h +
setz cl  +
jmp loc_4021B8  +
xor ecx ecx +
cmp eax 5 +
setz cl  +
jmp loc_4021B8  +
xor ecx ecx +
cmp eax 4 +
setz cl  +
jmp loc_4021B8  +
xor ecx ecx +
cmp eax 3 +
setz cl  +
jmp loc_4021B8  +
xor ecx ecx +
cmp eax 24h +
setz cl  +
jmp loc_4021B8  +
***
movzx edx ds:word_471D92 +
cmp dx 32h +
jz loc_402437  +
jbe loc_4023A6  +
cmp dx 0B7h +
jz loc_4023D4  +
lea esi [esi+0] +
jbe loc_402417  +
cmp dx 9026h +
jz loc_4023E0  +
cmp dx 0A390h +
jz loc_4023F0  +
cmp eax 5 +
setz al  +
cmp dx 0BFh +
movzx eax al +
jnz loc_4023D1  +
retn   +
cmp dx 12h +
jz loc_402441  +
jbe loc_402400  +
cmp dx 16h +
jz loc_4023F0  +
cmp dx 2Bh +
jz loc_402441  +
cmp eax 2Ch +
setz al  +
cmp dx 15h +
movzx eax al +
jz locret_4023A4  +
xor eax eax +
retn   +
cmp eax 104h +
setz al  +
movzx eax al +
retn   +
cmp eax 0Bh +
setz al  +
movzx eax al +
retn   +
cmp eax 17h +
setz al  +
movzx eax al +
retn   +
cmp dx 2 +
jz loc_402441  +
cmp eax 48h +
setz al  +
cmp dx 0Fh +
movzx eax al +
jnz loc_4023D1  +
retn   +
cmp dx 3Eh +
jz loc_40242D  +
lea esi [esi+0] +
jb loc_4023D1  +
sub dx 0B4h +
cmp dx 1 +
ja loc_4023D1  +
cmp eax 18h +
setz al  +
movzx eax al +
retn   +
cmp eax 4Fh +
setz al  +
movzx eax al +
retn   +
cmp eax 2Eh +
setz al  +
movzx eax al +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_14] eax +
mov eax ds:dword_471DA4 +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_4024D0  +
mov esi ds:dword_47207C +
xor ebp ebp +
mov edi ds:dword_472078 +
mov ebx ds:dword_471D4C +
jmp loc_4024B3  +
test esi esi +
jz loc_4024C2  +
mov edx [ebx] +
mov eax offset aCorrupt +
lea ecx [esi+edx] +
cmp edx edi +
cmovb eax ecx +
mov ecx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ecx +
call strcmp  +
test eax eax +
jz loc_4024D8  +
add ebp 1 +
add ebx 48h +
cmp ebp [esp+2Ch+var_10] +
jz loc_4024D0  +
test ebx ebx +
mov [esp+2Ch+var_18] ebx +
jnz loc_402480  +
mov eax offset aNone_0 +
jmp loc_402493  +
mov eax offset aNoName +
jmp loc_402493  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
test edx edx +
mov [esp+1Ch+var_14] eax +
jz loc_402567  +
mov eax ds:dword_471D4C +
mov esi ds:dword_47207C +
mov edi ds:dword_472078 +
mov [esp+1Ch+var_10] eax +
jmp loc_402540  +
test esi esi +
jz loc_402560  +
mov edx [ebp+0] +
mov eax offset aCorrupt +
lea ecx [esi+edx] +
cmp edx edi +
cmovb eax ecx +
mov edx [esp+1Ch+var_14] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] edx +
call strcmp  +
test eax eax +
jz loc_402577  +
add ebx 4 +
mov eax [ebx-4] +
test eax eax +
jz loc_402567  +
mov ecx [esp+1Ch+var_10] +
lea eax [eax+eax*8] +
lea ebp [ecx+eax*8] +
test ebp ebp +
jnz loc_402518  +
mov eax offset aNone_0 +
jmp loc_40252C  +
mov eax offset aNoName +
jmp loc_40252C  +
mov eax [esp+1Ch+var_14] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_402450  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_402590  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
cmp eax 66h +
mov edx eax +
jz loc_403222  +
ja loc_402647  +
cmp eax 3Ah +
jz loc_402D7D  +
lea esi [esi+0] +
ja loc_4026C3  +
cmp eax 24h +
jz loc_40322C  +
nop   +
jbe loc_4027E7  +
cmp eax 2Fh +
jz loc_403122  +
nop   +
ja loc_402937  +
cmp eax 29h +
jz loc_403118  +
nop   +
jbe loc_402B80  +
cmp eax 2Ch +
jz loc_40310E  +
nop   +
ja loc_402EF0  +
cmp edx 2Ah +
mov eax offset aRenesasSuperhS +
jz loc_402A92  +
cmp edx 2Bh +
jnz loc_40314E  +
mov eax offset aSparcV9 +
jmp loc_402A92  +
cmp eax 0AEh +
jz loc_40324A  +
ja loc_402727  +
cmp eax 87h +
jz loc_403254  +
jbe loc_402792  +
cmp eax 0A3h +
jz loc_40327C  +
ja loc_402977  +
cmp eax 8Ch +
jz loc_403272  +
jbe loc_402C03  +
cmp eax 0A0h +
jz loc_4031BE  +
ja loc_402F11  +
cmp edx 8Dh +
mov eax offset aTexasInstrumen +
jz loc_402A92  +
cmp edx 8Eh +
jnz loc_40314E  +
mov eax offset unk_444604 +
jmp loc_402A92  +
cmp eax 50h +
jz loc_403236  +
ja loc_402840  +
cmp eax 45h +
jz loc_403218  +
nop   +
lea esi [esi+0] +
ja loc_4028F0  +
cmp eax 3Fh +
jz loc_40320E  +
nop   +
jbe loc_402B40  +
cmp eax 42h +
jz loc_4031C8  +
nop   +
ja loc_402F38  +
cmp edx 40h +
mov eax offset aDigitalEquipme +
jz loc_402A92  +
cmp edx 41h +
jnz loc_40314E  +
mov eax offset aDigitalEquip_0 +
jmp loc_402A92  +
cmp eax 1223h +
jz loc_403240  +
ja loc_402897  +
cmp eax 0BBh +
jz loc_4031B4  +
ja loc_402A50  +
cmp eax 0B3h +
jz loc_4031AA  +
jbe loc_402D35  +
cmp eax 0B7h +
jz loc_40325E  +
ja loc_402F60  +
cmp edx 0B4h +
mov eax offset aIntelL1om +
jz loc_402A92  +
cmp edx 0B5h +
jnz loc_40314E  +
mov eax offset aIntelK1om +
jmp loc_402A92  +
cmp eax 71h +
jz loc_4031DC  +
ja loc_402A07  +
cmp eax 6Bh +
jz loc_4031D2  +
lea esi [esi+0] +
jbe loc_402B03  +
cmp eax 6Eh +
jz loc_403268  +
nop   +
ja loc_402F87  +
cmp edx 6Ch +
mov eax offset aSharpEmbeddedM +
jz loc_402A92  +
cmp edx 6Dh +
jnz loc_40314E  +
mov eax offset aArcaRiscMicrop +
jmp loc_402A92  +
cmp eax 9 +
jz loc_403204  +
ja loc_4029C0  +
cmp eax 4 +
jz loc_4031FA  +
nop   +
ja loc_402CC0  +
cmp edx 1 +
mov eax offset aWe32100 +
jz loc_402A92  +
mov eax offset aNone_4 +
jb loc_402A92  +
cmp edx 2 +
mov eax offset aSparc +
jz loc_402A92  +
cmp edx 3 +
jnz loc_40314E  +
mov eax offset aIntel80386 +
jmp loc_402A92  +
cmp eax 5Bh +
jz loc_4030F0  +
jbe loc_402D91  +
cmp eax 60h +
jz loc_402D87  +
nop   +
lea esi [esi+0] +
jbe loc_402DD5  +
cmp eax 63h +
jz loc_4030F0  +
nop   +
ja loc_403080  +
cmp edx 61h +
mov eax offset aNationalSemico +
jz loc_402A92  +
cmp edx 62h +
jnz loc_40314E  +
mov eax offset aTenorNetworkTp +
jmp loc_402A92  +
cmp eax 9080h +
jz loc_40322C  +
ja loc_402A96  +
cmp eax 5AA5h +
jz loc_4030D2  +
ja loc_402E80  +
cmp eax 3330h +
jz loc_402DCB  +
jbe loc_4030BD  +
cmp eax 4688h +
jz loc_403290  +
cmp eax 5441h +
jnz loc_40314E  +
mov eax offset aFujitsuFrV +
jmp loc_402A92  +
cmp eax 4Ah +
jz loc_403286  +
jbe loc_402AD8  +
cmp eax 4Dh +
jz loc_4030FA  +
nop   +
lea esi [esi+0] +
ja loc_402FF7  +
cmp edx 4Bh +
mov eax offset aDigitalVax +
jz loc_402A92  +
cmp edx 4Ch +
jnz loc_40314E  +
mov eax offset aAxisCommunicat +
jmp loc_402A92  +
cmp eax 34h +
jz loc_403196  +
jbe loc_402C80  +
cmp eax 37h +
jz loc_40312C  +
nop   +
ja loc_402FA8  +
cmp edx 35h +
mov eax offset aMotorolaMc68hc +
jz loc_402A92  +
cmp edx 36h +
jnz loc_40314E  +
mov eax offset aFujitsuMultime +
jmp loc_402A92  +
cmp eax 0A8h +
jz loc_40318C  +
jbe loc_402BC0  +
cmp eax 0ABh +
jz loc_403136  +
ja loc_402FD0  +
cmp edx 0A9h +
mov eax offset aDallasSemicond +
jz loc_402A92  +
cmp edx 0AAh +
jnz loc_40314E  +
mov eax offset aNewJapanRadioN +
jmp loc_402A92  +
cmp eax 12h +
jz loc_403104  +
jbe loc_402C46  +
cmp edx 15h +
mov eax offset aPowerpc64 +
jz loc_402A92  +
lea esi [esi+0] +
ja loc_4030A1  +
cmp edx 13h +
mov eax offset aIntel90860 +
jz loc_402A92  +
cmp edx 14h +
jnz loc_40314E  +
mov eax offset aPowerpc +
jmp loc_402A92  +
cmp eax 76h +
jz loc_4031A0  +
jbe loc_402D00  +
cmp edx 83h +
mov eax offset aAltiumTsk3000C +
jz loc_402A92  +
jbe loc_403018  +
cmp edx 84h +
mov eax offset aFreescaleRs08E +
jz loc_402A92  +
cmp edx 86h +
jnz loc_40314E  +
mov eax offset aCyanTechnology +
jmp loc_402A92  +
cmp eax 0C3h +
jz loc_402D73  +
jbe loc_402E10  +
cmp edx 0DEh +
mov eax offset aFtdiFt32 +
jz loc_402A92  +
ja loc_403059  +
cmp edx 0C5h +
mov eax offset aRenesasRl78 +
jz loc_402A92  +
cmp edx 0DDh +
jnz loc_40314E  +
mov eax offset aCdsVisiumcoreP +
add esp 1Ch +
retn   +
cmp eax 0BEEFh +
jz loc_4031E6  +
jbe loc_402EB8  +
cmp eax 0FEB0h +
jz loc_40302F  +
jbe loc_403039  +
cmp edx 0FEBAh +
mov eax offset aVitesseIq2000 +
jz loc_402A92  +
cmp edx 0FEBBh +
jnz loc_40314E  +
mov eax offset aAlteraNios +
jmp loc_402A92  +
cmp edx 47h +
mov eax offset aMotorolaMc68_0 +
jz loc_402A92  +
mov eax offset aMotorolaMc68_1 +
jb loc_402A92  +
cmp edx 48h +
mov eax offset aMotorolaMc68_2 +
jz loc_402A92  +
cmp edx 49h +
jnz loc_40314E  +
mov eax offset aSiliconGraphic +
jmp loc_402A92  +
cmp edx 68h +
mov eax offset aFujitsuF2mc16 +
jz loc_402A92  +
mov eax offset aNationalSemi_0 +
jb loc_402A92  +
cmp edx 69h +
mov eax offset aTexasInstrum_0 +
jz loc_402A92  +
cmp edx 6Ah +
jnz loc_40314E  +
mov eax offset aAnalogDevicesB +
jmp loc_402A92  +
cmp edx 3Ch +
mov eax offset aStmicroelectro +
jz loc_402A92  +
mov eax offset aToyotaMe16Proc +
jb loc_402A92  +
cmp edx 3Dh +
mov eax offset aAdvancedLogicC +
jz loc_402A92  +
cmp edx 3Eh +
jnz loc_40314E  +
mov eax offset aAdvancedMicroD +
jmp loc_402A92  +
cmp edx 26h +
mov eax offset aTrwRh32 +
jz loc_402A92  +
mov eax offset aFujitsuFr20 +
jb loc_402A92  +
cmp edx 27h +
mov eax offset aMcore +
jz loc_402A92  +
cmp edx 28h +
jnz loc_40314E  +
mov eax offset aArm +
jmp loc_402A92  +
cmp edx 0A5h +
mov eax offset aIntel8051AndVa +
jz loc_402A92  +
mov eax offset aQualcommDsp6Pr +
jb loc_402A92  +
cmp edx 0A6h +
mov eax offset aStmicroelect_0 +
jz loc_402A92  +
cmp edx 0A7h +
jnz loc_40314E  +
mov eax offset aAndesTechnolog +
jmp loc_402A92  +
cmp edx 89h +
mov eax offset aBroadcomVideoc +
jz loc_402A92  +
mov eax offset aNewJapanRadi_0 +
jb loc_402A92  +
cmp edx 8Ah +
mov eax offset aLatticeMico32 +
jz loc_402A92  +
cmp edx 8Bh +
jnz loc_40314E  +
mov eax offset aSeikoEpsonC17F +
jmp loc_402A92  +
cmp edx 0Bh +
mov eax offset aSparcV9Old +
jz loc_402A92  +
mov eax offset aMipsR4000BigEn +
jb loc_402A92  +
cmp edx 0Fh +
mov eax offset aHppa +
jz loc_402A92  +
cmp edx 11h +
jnz loc_40314E  +
mov eax offset aPowerPcOld +
jmp loc_402A92  +
cmp edx 31h +
mov eax offset aRenesasH8500 +
jz loc_402A92  +
mov eax offset aRenesasH8s +
jb loc_402A92  +
cmp edx 32h +
mov eax offset aIntelIa64 +
jz loc_402A92  +
cmp edx 33h +
jnz loc_40314E  +
mov eax offset aStanfordMipsX +
jmp loc_402A92  +
cmp edx 6 +
mov eax offset aIntelMcu +
jz loc_402A92  +
mov eax offset aMc88000 +
jb loc_402A92  +
cmp edx 7 +
mov eax offset aIntel80860 +
jz loc_402A92  +
cmp edx 8 +
jnz loc_40314E  +
mov eax offset aMipsR3000 +
jmp loc_402A92  +
cmp edx 73h +
mov eax offset aMotorolaXgateE +
jz loc_402A92  +
mov eax offset aNationalSemi_1 +
jb loc_402A92  +
cmp edx 74h +
jz loc_403290  +
cmp edx 75h +
jnz loc_40314E  +
mov eax offset aRenesasM16cSer +
jmp loc_402A92  +
cmp edx 0B0h +
mov eax offset aCyanTechnolo_0 +
jz loc_402A92  +
mov eax offset aMcstElbrusGene +
jb loc_402A92  +
cmp edx 0B1h +
jz loc_402EE6  +
cmp edx 0B2h +
jnz loc_40314E  +
mov eax offset aFreescaleExten +
jmp loc_402A92  +
mov eax offset aArcv2 +
jmp loc_402A92  +
mov eax offset aMotorolaStarCo +
jmp loc_402A92  +
mov eax offset aThompsonMultim +
jmp loc_402A92  +
cmp eax 55h +
jz loc_4030E6  +
ja loc_402E50  +
cmp edx 52h +
mov eax offset aVitessePrism +
jz loc_402A92  +
mov eax offset aHarvardUnivers +
jb loc_402A92  +
cmp edx 53h +
jz loc_403076  +
cmp edx 54h +
jnz loc_40314E  +
mov eax offset aFujitsuFr30 +
jmp loc_402A92  +
cmp edx 5Dh +
mov eax offset aArcompact +
jz loc_402A92  +
mov eax offset aOpenrisc1000 +
jb loc_402A92  +
cmp edx 5Eh +
jz loc_4031F0  +
cmp edx 5Fh +
jnz loc_40314E  +
mov eax offset aAlphamosaicVid +
jmp loc_402A92  +
cmp eax 0BDh +
jz loc_402EE6  +
mov eax offset aTileraTileproM +
jb loc_402A92  +
cmp edx 0BEh +
mov eax offset aNvidiaCudaArch +
jz loc_402A92  +
cmp edx 0BFh +
jnz loc_40314E  +
mov eax offset aTileraTileGxMu +
jmp loc_402A92  +
cmp eax 58h +
jz loc_402EAE  +
ja loc_403178  +
cmp eax 56h +
nop   +
jz loc_4030DC  +
cmp eax 57h +
jnz loc_40314E  +
mov eax offset aRenesasV850 +
jmp loc_402A92  +
cmp eax 8217h +
jz loc_403097  +
jbe loc_403140  +
cmp edx 9026h +
mov eax offset aAlpha +
jz loc_402A92  +
cmp edx 9041h +
jnz loc_40314E  +
mov eax offset aRenesasM32rFor +
jmp loc_402A92  +
cmp eax 0ABC7h +
jz loc_4031F0  +
jbe loc_40329A  +
cmp edx 0AD45h +
mov eax offset aSanyoXstormy16 +
jz loc_402A92  +
cmp edx 0BAABh +
jnz loc_40314E  +
mov eax offset aXilinxMicrobla +
jmp loc_402A92  +
cmp edx 2Dh +
mov eax offset off_443BA5 +
jz loc_402A92  +
cmp edx 2Eh +
jnz loc_40314E  +
mov eax offset aRenesasH8300 +
jmp loc_402A92  +
cmp edx 0A1h +
mov eax offset aCypressM8cMicr +
jz loc_402A92  +
cmp edx 0A2h +
jnz loc_40314E  +
mov eax offset aRenesasR32cSer +
jmp loc_402A92  +
cmp edx 43h +
mov eax offset aStmicroelect_1 +
jz loc_402A92  +
cmp edx 44h +
jnz loc_40314E  +
mov eax offset aStmicroelect_2 +
jmp loc_402A92  +
cmp edx 0B9h +
mov eax offset aAtmelCorporati +
jz loc_402A92  +
cmp edx 0BAh +
jnz loc_40314E  +
mov eax offset aStmicroeletron +
jmp loc_402A92  +
cmp edx 6Fh +
mov eax offset aExcess163264Bi +
jz loc_402A92  +
cmp edx 70h +
jnz loc_40314E  +
mov eax offset aIceraSemicondu +
jmp loc_402A92  +
cmp edx 38h +
mov eax offset aSonyNcpuEmbedd +
jz loc_402A92  +
cmp edx 39h +
jnz loc_40314E  +
mov eax offset aDensoNdr1Micro +
jmp loc_402A92  +
cmp edx 0ACh +
mov eax offset aCrayInc_Nv2Vec +
jz loc_402A92  +
cmp edx 0ADh +
jnz loc_40314E  +
mov eax offset aRenesasRx +
jmp loc_402A92  +
cmp edx 4Eh +
mov eax offset aElement1464Bit +
jz loc_402A92  +
cmp edx 4Fh +
jnz loc_40314E  +
mov eax offset aLsiLogicS16Bit +
jmp loc_402A92  +
cmp edx 77h +
mov eax offset aFreescaleCommu +
jz loc_402A92  +
cmp edx 78h +
jnz loc_40314E  +
mov eax offset aRenesasM32c +
jmp loc_402A92  +
cmp eax 0DEADh +
jz loc_403182  +
cmp eax 0F00Dh +
jnz loc_40314E  +
mov eax offset aToshibaMepMedi +
jmp loc_402A92  +
cmp edx 0DFh +
mov eax offset aMoxie +
jz loc_402A92  +
cmp edx 1057h +
jnz loc_40314E  +
mov eax offset aAtmelAvr8BitMi +
jmp loc_402A92  +
cmp edx 64h +
mov eax offset aStmicroelect_3 +
jz loc_402A92  +
cmp edx 65h +
jnz loc_40314E  +
mov eax offset aUbicomIp2xxx8B +
jmp loc_402A92  +
cmp edx 16h +
jz loc_4032A5  +
cmp edx 17h +
jnz loc_40314E  +
mov eax offset aSpu +
jmp loc_402A92  +
cmp eax 2530h +
jnz loc_40314E  +
mov eax offset aMorphoTecholog +
jmp loc_402A92  +
mov eax offset aOpendlx +
jmp loc_402A92  +
mov eax offset aD30v +
jmp loc_402A92  +
mov eax offset aD10v +
jmp loc_402A92  +
mov eax offset aPicojava +
jmp loc_402A92  +
mov eax offset aInfineonTechno +
jmp loc_402A92  +
mov eax offset aSparcV8 +
jmp loc_402A92  +
mov eax offset aSiemensTricore +
jmp loc_402A92  +
mov eax offset aDigitalAlphaOl +
jmp loc_402A92  +
mov eax offset aRenesasH8300h +
jmp loc_402A92  +
mov eax offset aSiemensPcp +
jmp loc_402A92  +
mov eax offset aM2000Reconfigu +
jmp loc_402A92  +
cmp eax 7650h +
jz loc_4030E6  +
cmp eax 7676h +
jz loc_4030DC  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aUnknown0xX_0 +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] offset unk_471B40 +
call sub_402590  +
mov eax offset unk_471B40 +
jmp loc_402A92  +
cmp eax 59h +
jz loc_4031E6  +
cmp eax 5Ah +
jnz loc_40314E  +
mov eax offset aMn10200 +
jmp loc_402A92  +
mov eax offset aCyanTechnolo_1 +
jmp loc_402A92  +
mov eax offset aMotorolaColdfi +
jmp loc_402A92  +
mov eax offset aMicrochipTechn +
jmp loc_402A92  +
mov eax offset aInfineonTech_0 +
jmp loc_402A92  +
mov eax offset aTileraTile64Mu +
jmp loc_402A92  +
mov eax offset aStmicroelect_4 +
jmp loc_402A92  +
mov eax offset aSiemensFx66Mic +
jmp loc_402A92  +
mov eax offset aS1c33FamilyOfS +
jmp loc_402A92  +
mov eax offset aAlteraNiosIi +
jmp loc_402A92  +
mov eax offset aMn10300 +
jmp loc_402A92  +
mov eax offset aTensilicaXtens +
jmp loc_402A92  +
mov eax offset aMc68000 +
jmp loc_402A92  +
mov eax offset aIbmSystem370 +
jmp loc_402A92  +
mov eax offset aSonyDspProcess +
jmp loc_402A92  +
mov eax offset aMotorolaMc68_3 +
jmp loc_402A92  +
mov eax offset aMaxProcessor +
jmp loc_402A92  +
mov eax offset aRenesasV850Usi +
jmp loc_402A92  +
mov eax offset aDonaldKnuthSEd +
jmp loc_402A92  +
mov eax offset aAdaptevaEpipha +
jmp loc_402A92  +
mov eax offset aImaginationTec +
jmp loc_402A92  +
mov eax offset aSunplusSCore +
jmp loc_402A92  +
mov eax offset aAarch64 +
jmp loc_402A92  +
mov eax offset aUnicore +
jmp loc_402A92  +
mov eax offset aTexasInstrum_1 +
jmp loc_402A92  +
mov eax offset aNxpSemiconduct +
jmp loc_402A92  +
mov eax offset aStmicroelect_5 +
jmp loc_402A92  +
mov eax offset aInfineonTech_1 +
jmp loc_402A92  +
cmp eax 0A390h +
jnz loc_40314E  +
mov eax offset aIbmS390 +
jmp loc_402A92  +
***
sub esp 18h +
cmp eax 6FFFFDF5h +
jz loc_403747  +
ja loc_4033B0  +
cmp eax 10h +
jz loc_403783  +
ja loc_403420  +
cmp eax 7 +
jz loc_40378D  +
nop   +
jbe loc_403550  +
cmp eax 0Bh +
jz loc_40370B  +
nop   +
jbe loc_4036A8  +
cmp ebx 0Dh +
mov eax offset aFini +
jz loc_4033A8  +
mov eax offset aInit +
jb loc_4033A8  +
cmp ebx 0Eh +
mov eax offset aSoname +
jz loc_4033A8  +
cmp ebx 0Fh +
mov eax offset aRpath +
jz loc_4033A8  +
lea eax [ebx-70000000h] +
cmp eax 0FFFFFFFh +
ja loc_403797  +
movzx edx ds:word_471D92 +
cmp dx 2Bh +
jz loc_403908  +
jbe loc_403842  +
cmp dx 87h +
jz loc_40391E  +
nop   +
ja loc_403880  +
cmp dx 32h +
jz loc_4038B8  +
cmp dx 71h +
jnz loc_403383  +
cmp ebx 70000002h +
mov eax offset aNios2_gp +
jz loc_4033A8  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] offset aProcessorSpe_1 +
mov [esp+18h+var_14] 40h +
mov [esp+18h+var_18] offset unk_471280 +
call sub_402590  +
mov eax offset unk_471280 +
add esp 18h +
pop ebx  +
retn   +
cmp eax 6FFFFEFAh +
jz loc_40375B  +
ja loc_403480  +
cmp eax 6FFFFDFDh +
jz loc_403765  +
lea esi [esi+0] +
jbe loc_403516  +
cmp eax 6FFFFEF5h +
jz loc_403715  +
jbe loc_403676  +
cmp ebx 6FFFFEF7h +
mov eax offset aTlsdesc_got +
jz loc_4033A8  +
mov eax offset aTlsdesc_plt +
jb loc_4033A8  +
cmp ebx 6FFFFEF8h +
mov eax offset aGnu_conflict +
jz loc_4033A8  +
cmp ebx 6FFFFEF9h +
mov eax offset aGnu_liblist +
jz loc_4033A8  +
jmp loc_40332B  +
cmp eax 18h +
jz loc_403701  +
lea esi [esi+0] +
jbe loc_4034E5  +
cmp eax 1Ch +
jz loc_403733  +
nop   +
jbe loc_403656  +
cmp ebx 1Eh +
mov eax offset aFlags_0 +
jz loc_4033A8  +
mov eax offset aRunpath +
jb loc_4033A8  +
cmp ebx 20h +
mov eax offset aPreinit_array +
jz loc_4033A8  +
cmp ebx 21h +
mov eax offset aPreinit_arrays +
jz loc_4033A8  +
jmp loc_40332B  +
cmp eax 6FFFFFFAh +
jz loc_403751  +
nop   +
lea esi [esi+0] +
jbe loc_403580  +
cmp eax 6FFFFFFEh +
jz loc_403779  +
jbe loc_4036C8  +
cmp ebx 7FFFFFFDh +
mov eax offset aAuxiliary +
jz loc_4033A8  +
jbe loc_4036EB  +
cmp ebx 7FFFFFFEh +
mov eax offset aUsed +
jz loc_4033A8  +
cmp ebx 7FFFFFFFh +
mov eax offset aFilter +
jz loc_4033A8  +
jmp loc_40332B  +
cmp eax 14h +
jz loc_40376F  +
nop   +
jbe loc_403613  +
cmp ebx 16h +
mov eax offset aTextrel +
jz loc_4033A8  +
mov eax offset aDebug +
mov edx offset aJmprel +
cmova eax edx +
jmp loc_4033A8  +
cmp eax 6FFFFDF9h +
jz loc_403729  +
jbe loc_4035F0  +
cmp ebx 6FFFFDFBh +
mov eax offset aMovesz +
jz loc_4033A8  +
mov eax offset aMoveent +
mov edx offset aFeature +
cmova eax edx +
jmp loc_4033A8  +
cmp eax 3 +
jz loc_40371F  +
jbe loc_4035D0  +
cmp ebx 5 +
mov eax offset aStrtab +
jz loc_4033A8  +
mov eax offset aHash +
mov edx offset aSymtab +
cmova eax edx +
jmp loc_4033A8  +
cmp eax 6FFFFEFEh +
jz loc_40373D  +
jbe loc_403633  +
cmp ebx 6FFFFFF0h +
mov eax offset aVersym +
jz loc_4033A8  +
cmp ebx 6FFFFFF9h +
mov eax offset aRelacount +
jz loc_4033A8  +
cmp ebx 6FFFFEFFh +
mov eax offset aSyminfo +
jnz loc_40332B  +
jmp loc_4033A8  +
cmp ebx 1 +
mov eax offset aNeeded +
jz loc_4033A8  +
mov eax offset aNull +
mov edx offset aPltrelsz +
cmova eax edx +
jmp loc_4033A8  +
cmp ebx 6FFFFDF7h +
mov eax offset aGnu_liblistsz +
jz loc_4033A8  +
mov eax offset aGnu_conflictsz +
mov edx offset aChecksum +
cmova eax edx +
jmp loc_4033A8  +
cmp ebx 12h +
mov eax offset aRelsz +
jz loc_4033A8  +
mov eax offset aRel +
mov edx offset aRelent +
cmova eax edx +
jmp loc_4033A8  +
cmp ebx 6FFFFEFCh +
mov eax offset aAudit +
jz loc_4033A8  +
mov eax offset aDepaudit +
mov edx offset aPltpad +
cmova eax edx +
jmp loc_4033A8  +
cmp ebx 1Ah +
mov eax offset aFini_array +
jz loc_4033A8  +
mov eax offset aInit_array +
mov edx offset aInit_arraysz +
cmova eax edx +
jmp loc_4033A8  +
cmp ebx 6FFFFDFFh +
mov eax offset aSyminent +
jz loc_4033A8  +
mov eax offset aSyminsz +
jb loc_4033A8  +
cmp ebx 6FFFFE00h +
mov eax offset aAddrrnglo +
jz loc_4033A8  +
jmp loc_40332B  +
cmp ebx 9 +
mov eax offset aRelaent +
jz loc_4033A8  +
mov eax offset aRelasz +
mov edx offset aStrsz +
cmova eax edx +
jmp loc_4033A8  +
cmp ebx 6FFFFFFCh +
mov eax offset aVerdef +
jz loc_4033A8  +
mov eax offset aFlags_1 +
mov edx offset aVerdefnum +
cmova eax edx +
jmp loc_4033A8  +
cmp ebx 6FFFFFFFh +
mov eax offset aVerneednum +
jz loc_4033A8  +
jmp loc_40332B  +
mov eax offset aBind_now +
jmp loc_4033A8  +
mov eax offset aSyment +
jmp loc_4033A8  +
mov eax offset aGnu_hash +
jmp loc_4033A8  +
mov eax offset aPltgot +
jmp loc_4033A8  +
mov eax offset aPltpadsz +
jmp loc_4033A8  +
mov eax offset aFini_arraysz +
jmp loc_4033A8  +
mov eax offset aMovetab +
jmp loc_4033A8  +
mov eax offset aGnu_prelinked +
jmp loc_4033A8  +
mov eax offset aRelcount +
jmp loc_4033A8  +
mov eax offset aConfig +
jmp loc_4033A8  +
mov eax offset aPosflag_1 +
jmp loc_4033A8  +
mov eax offset aPltrel +
jmp loc_4033A8  +
mov eax offset aVerneed +
jmp loc_4033A8  +
mov eax offset aSymbolic +
jmp loc_4033A8  +
mov eax offset aRela +
jmp loc_4033A8  +
lea eax [ebx-6000000Dh] +
cmp eax 0FFFEFF3h +
jbe loc_4037F0  +
cmp ds:word_471D92 0Fh +
jnz loc_403818  +
lea eax [ebx-60000000h] +
cmp eax 0FFFFFFFh +
ja loc_403818  +
cmp eax 17h +
jbe loc_4038AC  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] offset aOperatingSyste +
mov [esp+18h+var_14] 40h +
mov [esp+18h+var_18] offset unk_471280 +
call sub_402590  +
mov eax offset unk_471280 +
jmp loc_4033A8  +
movzx eax ds:word_471D92 +
cmp ax 0Fh +
jz loc_40396A  +
cmp ax 32h +
jnz loc_4037C4  +
mov eax ebx +
call sub_401D60  +
test eax eax +
jnz loc_4033A8  +
jmp loc_4037C4  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] offset aUnknownLx +
mov [esp+18h+var_14] 40h +
mov [esp+18h+var_18] offset unk_471280 +
call sub_402590  +
mov eax offset unk_471280 +
jmp loc_4033A8  +
cmp dx 0Ah +
jz loc_4038ED  +
jbe loc_4038E3  +
cmp dx 14h +
jz loc_4038C1  +
cmp dx 15h +
jnz loc_403383  +
cmp eax 3 +
ja loc_403383  +
mov eax ds:off_44E1CC[eax*4] +
test eax eax +
jnz loc_4033A8  +
jmp loc_403383  +
cmp dx 8Ch +
jz loc_403939  +
cmp dx 9026h +
jnz loc_403383  +
cmp ebx 70000000h +
mov eax offset aAlpha_pltro +
jz loc_4033A8  +
jmp loc_403383  +
mov eax ds:off_44E140[eax*4] +
jmp loc_40380E  +
mov eax ebx +
call sub_401D60  +
jmp loc_403872  +
cmp ebx 70000000h +
jz loc_403975  +
cmp ebx 70000001h +
mov eax offset aPpc_opt +
jz loc_4033A8  +
jmp loc_403383  +
cmp dx 8 +
jnz loc_403383  +
lea eax [ebx-70000001h] +
cmp eax 34h +
ja loc_403383  +
mov eax ds:off_44E4A0[eax*4] +
jmp loc_403872  +
cmp ebx 70000001h +
mov eax offset aSparc_register +
jz loc_4033A8  +
jmp loc_403383  +
lea eax [ebx-70000001h] +
cmp eax 5 +
ja loc_403383  +
mov eax ds:off_44DFE0[eax*4] +
jmp loc_403872  +
cmp ebx 70000001h +
jz loc_403995  +
jbe loc_40397F  +
cmp ebx 70000002h +
mov eax offset aC6000_preemptm +
jz loc_4033A8  +
cmp ebx 70000003h +
mov eax offset aC6000_dsbt_ind +
jz loc_4033A8  +
jmp loc_403383  +
lea eax [ebx-60000000h] +
jmp loc_4037BB  +
mov eax offset aPpc_got +
jmp loc_4033A8  +
cmp ebx 70000000h +
mov eax offset aC6000_dsbt_bas +
jz loc_4033A8  +
jmp loc_403383  +
mov eax offset aC6000_dsbt_siz +
jmp loc_4033A8  +
***
sub esp 1Ch +
mov edx eax +
cmp ds:word_471D90 4 +
jz loc_4039F0  +
cmp edx 1 +
mov eax offset aNt_versionVers +
jz loc_4039E8  +
cmp edx 2 +
mov eax offset aNt_archArchite +
jz loc_4039E8  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aUnknownNoteTyp +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] offset unk_471080 +
call sub_402590  +
mov eax offset unk_471080 +
add esp 1Ch +
retn   +
cmp eax 300h +
jz loc_403C62  +
jbe loc_403A52  +
cmp eax 309h +
jz loc_403C3A  +
ja loc_403AB5  +
cmp eax 304h +
jz loc_403C30  +
jbe loc_403B74  +
cmp edx 306h +
mov eax offset aNt_s390_last_b +
jz loc_4039E8  +
mov eax offset aNt_s390_prefix +
jb loc_4039E8  +
cmp edx 307h +
mov eax offset aNt_s390_system +
jz loc_4039E8  +
cmp edx 308h +
mov eax offset aNt_s390_tdbS39 +
jz loc_4039E8  +
jmp loc_4039C3  +
cmp eax 0Dh +
jz loc_403C4E  +
nop   +
lea esi [esi+0] +
jbe loc_403B04  +
cmp eax 100h +
jz loc_403C44  +
jbe loc_403B97  +
cmp edx 200h +
mov eax offset aNt_386_tlsX86T +
jz loc_4039E8  +
jbe loc_403C10  +
cmp edx 201h +
mov eax offset aNt_386_iopermX +
jz loc_4039E8  +
cmp edx 202h +
mov eax offset aNt_x86_xstateX +
jz loc_4039E8  +
jmp loc_4039C3  +
cmp eax 402h +
jz loc_403C58  +
jbe loc_403B42  +
cmp edx 46494C45h +
mov eax offset aNt_fileMappedF +
jz loc_4039E8  +
jbe loc_403BF5  +
cmp edx 46E62B7Fh +
mov eax offset aNt_prxfpregUse +
jz loc_4039E8  +
cmp edx 53494749h +
mov eax offset aNt_siginfoSigi +
jz loc_4039E8  +
jmp loc_4039C3  +
cmp eax 4 +
jz loc_403C26  +
lea esi [esi+0] +
ja loc_403BC6  +
cmp edx 2 +
mov eax offset aNt_fpregsetFlo +
jz loc_4039E8  +
mov eax offset aNt_prpsinfoPrp +
ja loc_4039E8  +
cmp edx 1 +
mov eax offset aNt_prstatusPrs +
jz loc_4039E8  +
jmp loc_4039C3  +
cmp edx 400h +
mov eax offset aNt_arm_vfpArmV +
jz loc_4039E8  +
mov eax offset aNt_arm_tlsAarc +
ja loc_4039E8  +
cmp edx 30Ah +
mov eax offset aNt_s390_vxrs_h +
jz loc_4039E8  +
jmp loc_4039C3  +
cmp edx 302h +
mov eax offset aNt_s390_todcmp +
jz loc_4039E8  +
mov eax offset aNt_s390_timerS +
mov edx offset aNt_s390_todpre +
cmova eax edx +
jmp loc_4039E8  +
cmp edx 11h +
mov eax offset aNt_lwpsinfoLwp +
jz loc_4039E8  +
cmp edx 12h +
mov eax offset aNt_win32pstatu +
jz loc_4039E8  +
cmp edx 10h +
mov eax offset aNt_lwpstatusLw +
jnz loc_4039C3  +
jmp loc_4039E8  +
cmp edx 0Ah +
mov eax offset aNt_pstatusPsta +
jz loc_4039E8  +
cmp edx 0Ch +
mov eax offset aNt_fpregsFloat +
jz loc_4039E8  +
cmp edx 6 +
mov eax offset aNt_auxvAuxilia +
jnz loc_4039C3  +
jmp loc_4039E8  +
cmp edx 403h +
mov eax offset aNt_arm_hw_watc +
jz loc_4039E8  +
jmp loc_4039C3  +
cmp edx 102h +
mov eax offset aNt_ppc_vsxPpcV +
jz loc_4039E8  +
jmp loc_4039C3  +
mov eax offset aNt_taskstructT +
jmp loc_4039E8  +
mov eax offset aNt_s390_ctrsS3 +
jmp loc_4039E8  +
mov eax offset aNt_s390_vxrs_l +
jmp loc_4039E8  +
mov eax offset aNt_ppc_vmxPpcA +
jmp loc_4039E8  +
mov eax offset aNt_psinfoPsinf +
jmp loc_4039E8  +
mov eax offset aNt_arm_hw_brea +
jmp loc_4039E8  +
mov eax offset aNt_s390_high_g +
jmp loc_4039E8  +
***
cmp eax 1 +
jz loc_403CB0  +
mov edx offset aDefault +
jb loc_403CB5  +
cmp eax 2 +
mov edx offset aHidden +
jz loc_403CB5  +
cmp eax 3 +
mov edx offset aProtected_0 +
jz loc_403CB5  +
sub esp 1Ch +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] offset aUnrecognizedVi +
call sub_436A70  +
mov edx offset aUnknown_2 +
add esp 1Ch +
mov eax edx +
retn   +
mov edx offset aInternal +
mov eax edx +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+58h+arg_0] +
mov ebx [esp+58h+arg_4] +
mov [esp+58h+var_34] edx +
mov edi [esp+58h+arg_8] +
mov eax [esp+58h+arg_C] +
mov edx esi +
or edx ebx +
jz loc_403D50  +
mov edx edi +
or edx eax +
jz loc_403D50  +
test ebx ebx +
jz loc_403D60  +
mov ebp [esp+58h+arg_10] +
test ebp ebp +
jz loc_403D50  +
mov ecx [esp+58h+arg_10] +
mov [esp+58h+var_50] eax +
mov [esp+58h+var_4C] esi +
mov [esp+58h+var_48] ebx +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_54] edi +
mov [esp+58h+var_58] offset aSizeTruncation +
call sub_436A70  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp-4+arg_6C] 0 +
jz loc_403D50  +
mov eax [esp-4+arg_6C] +
mov edx [esp-4+arg_28] +
mov dword ptr [esp+0] offset aOutOfMemoryAll +
mov [esp-4+arg_8] eax +
mov eax [esp-4+arg_24] +
mov [esp-4+arg_4] edx +
mov [esp-4+arg_0] eax +
call sub_436A70  +
nop   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jnz loc_403CED  +
mov eax esi +
mul  edi +
cmp edx 0 +
mov [esp+58h+var_30] eax +
mov [esp+58h+var_2C] edx +
jbe loc_403E30  +
mov eax ds:dword_4720A0 +
mov [esp+58h+var_20] eax +
mov eax ds:dword_4720A4 +
cmp [esp+58h+var_2C] eax +
ja loc_403E90  +
jb loc_403DA1  +
mov ebx [esp+58h+var_20] +
cmp [esp+58h+var_30] ebx +
ja loc_403E90  +
mov edx ds:dword_4720AC +
mov ebx [esp+58h+var_30] +
mov [esp+58h+var_1C] esi +
mov esi [esp+58h+var_2C] +
mov [esp+58h+var_24] 0 +
add edx ecx +
mov [esp+58h+var_28] edx +
add [esp+58h+var_28] ebx +
adc [esp+58h+var_24] esi +
cmp eax [esp+58h+var_24] +
mov esi [esp+58h+var_1C] +
jbe loc_403E79  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_28] ecx +
mov [esp+58h+var_58] eax +
call fseek  +
mov ecx [esp+58h+var_28] +
test eax eax +
jz loc_403EC7  +
mov edx [esp+58h+arg_10] +
test edx edx +
jz loc_403D50  +
mov eax [esp+58h+arg_10] +
add ecx ds:dword_4720AC +
mov [esp+58h+var_58] offset aUnableToSeekTo +
mov [esp+58h+var_50] eax +
mov [esp+58h+var_54] ecx +
call sub_436A70  +
xor eax eax +
jmp loc_403D1B  +
cmp [esp+58h+var_30] edi +
jnb loc_403D79  +
mov ebx [esp+58h+arg_10] +
test ebx ebx +
jz loc_403D50  +
mov eax [esp+58h+arg_10] +
mov [esp+58h+var_4C] esi +
mov [esp+58h+var_48] 0 +
mov [esp+58h+var_54] edi +
mov [esp+58h+var_44] eax +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_58] offset aSizeOverflowPr +
call sub_436A70  +
xor eax eax +
jmp loc_403D1B  +
jb loc_403E90  +
mov eax [esp+58h+var_28] +
cmp [esp+58h+var_20] eax +
jnb loc_403DD7  +
lea esi [esi+0] +
mov ecx [esp+58h+arg_10] +
test ecx ecx +
jz loc_403D50  +
mov eax [esp+58h+arg_10] +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_58] offset aReading0xLlxBy +
mov [esp+58h+var_4C] eax +
mov eax [esp+58h+var_30] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] eax +
call sub_436A70  +
xor eax eax +
jmp loc_403D1B  +
test ebp ebp +
mov ebx ebp +
jz loc_403F2C  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_58] ebx +
mov [esp+58h+var_4C] eax +
call fread  +
cmp edi eax +
jz loc_403F52  +
mov eax [esp+58h+arg_10] +
test eax eax +
jz loc_403F15  +
mov eax [esp+58h+arg_10] +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_58] offset aUnableToReadIn +
mov [esp+58h+var_4C] eax +
mov eax [esp+58h+var_30] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] eax +
call sub_436A70  +
cmp ebx ebp +
jz loc_403D50  +
mov [esp+58h+var_58] ebx +
call free  +
xor eax eax +
jmp loc_403D1B  +
mov eax [esp+58h+var_30] +
add eax 1 +
mov [esp+58h+var_58] eax +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_403D23  +
mov eax [esp+58h+var_30] +
mov byte ptr [ebx+eax] 0 +
jmp loc_403ECD  +
mov eax ebx +
jmp loc_403D1B  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 5Ch +
mov eax [esp+68h+arg_0] +
lea ebx [esp+68h+var_50] +
mov [esp+68h+var_5C] ecx +
mov edi ebx +
mov ecx 0Eh +
mov edx [eax] +
xor eax eax +
stos   +
mov eax [ebp+0] +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_40] esi +
mov [esp+68h+var_4C] edx +
mov [esp+68h+var_50] eax +
call sub_438CA0  +
mov [esp+68h+var_60] 38h +
mov [esp+68h+var_64] offset a1_2_7 +
mov [esp+68h+var_68] ebx +
mov edi eax +
call sub_43AF10  +
mov ecx [esp+68h+var_4C] +
test ecx ecx +
jnz loc_403FF1  +
jmp loc_404010  +
mov eax esi +
sub eax [esp+68h+var_40] +
mov [esp+68h+var_64] 4 +
mov [esp+68h+var_68] ebx +
add eax edi +
mov [esp+68h+var_44] eax +
call sub_43AFB0  +
cmp eax 1 +
jnz loc_403FF5  +
mov [esp+68h+var_68] ebx +
call sub_43AD30  +
mov edx [esp+68h+var_4C] +
test edx edx +
jz loc_404010  +
test eax eax +
jz loc_403FC0  +
mov [esp+68h+var_68] edi +
call free  +
xor eax eax +
mov dword ptr [ebp+0] 0 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+68h+var_68] ebx +
call sub_43CDC0  +
test eax eax +
jnz loc_403FF5  +
mov eax [esp+68h+var_40] +
test eax eax +
jnz loc_403FF5  +
mov eax [esp+68h+arg_0] +
mov edx [esp+68h+var_5C] +
mov [ebp+0] edi +
mov [eax] esi +
mov [eax+4] edx +
mov eax 1 +
jmp loc_404006  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov esi ds:dword_471CF0 +
test esi esi +
jz loc_404141  +
mov [esp+3Ch+var_34] ecx +
mov ecx edx +
mov edx eax +
mov [esp+3Ch+var_2C] offset a32BitRelocatio +
xor eax eax +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] 1 +
mov [esp+3Ch+var_38] 0 +
call sub_403CC0  +
test eax eax +
mov edi eax +
jz loc_404295  +
shr ebx 3 +
mov [esp+3Ch+var_38] 18h +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_1C] ebx +
call sub_42C2B0  +
test eax eax +
mov [esp+3Ch+var_14] eax +
jz loc_404281  +
mov ecx [esp+3Ch+var_1C] +
xor ebp ebp +
mov esi edi +
mov ebx eax +
test ecx ecx +
jz loc_404118  +
mov [esp+3Ch+var_18] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] esi +
add ebp 1 +
add ebx 18h +
mov [esp+3Ch+var_38] 4 +
call ds:dword_472C94  +
mov [ebx-18h] eax +
lea eax [esi+4] +
add esi 8 +
mov [ebx-14h] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov dword ptr [ebx-8] 0 +
mov dword ptr [ebx-4] 0 +
mov [ebx-10h] eax +
mov [ebx-0Ch] edx +
cmp ebp edi +
jnz loc_4040C8  +
mov edi [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] edi +
call free  +
mov eax [esp+3Ch+arg_0] +
mov edx [esp+3Ch+var_14] +
mov [eax] edx +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+var_1C] +
mov [eax] edx +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] ecx +
mov ecx edx +
mov edx eax +
mov [esp+3Ch+var_2C] offset a64BitRelocatio +
xor eax eax +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] 1 +
mov [esp+3Ch+var_38] 0 +
call sub_403CC0  +
test eax eax +
mov ebp eax +
mov [esp+3Ch+var_10] eax +
jz loc_404295  +
shr ebx 4 +
mov [esp+3Ch+var_38] 18h +
mov esi ebx +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_1C] ebx +
call sub_42C2B0  +
test eax eax +
mov [esp+3Ch+var_14] eax +
jz loc_40429F  +
xor ebx ebx +
test esi esi +
mov edi eax +
jz loc_404270  +
mov esi ebx +
jmp loc_4041C5  +
add esi 1 +
add ebp 10h +
add edi 18h +
cmp esi [esp+3Ch+var_1C] +
jz loc_404270  +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] ebp +
call ds:dword_472C94  +
mov [edi] eax +
lea eax [ebp+8] +
mov [edi+4] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
cmp ds:word_471D92 8 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
mov [edi+8] eax +
mov [edi+0Ch] edx +
jnz loc_4041B2  +
cmp ds:byte_471D65 2 +
jz loc_4041B2  +
mov ebx edx +
mov ecx edx +
shr ebx 18h +
add esi 1 +
shr ecx 8 +
add ebp 10h +
mov [esp+3Ch+var_18] ebx +
and ecx 0FF00h +
mov ebx edx +
or [esp+3Ch+var_18] ecx +
mov ecx eax +
shrd ecx ebx +
add edi 18h +
and ecx 0FF0000h +
or [esp+3Ch+var_18] ecx +
mov ecx eax +
shrd ecx edx +
and ecx 0FF000000h +
or [esp+3Ch+var_18] ecx +
mov ecx [esp+3Ch+var_18] +
mov [edi-0Ch] eax +
mov [edi-10h] ecx +
cmp esi [esp+3Ch+var_1C] +
jnz loc_4041C5  +
lea esi [esi+0] +
mov eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_404120  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov [esp+3Ch+var_3C] offset aOutOfMemoryPar +
call sub_436A70  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov [esp+3Ch+var_3C] offset aOutOfMemoryPar +
call sub_436A70  +
xor eax eax +
jmp loc_404139  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edi [edx+24h] +
mov esi [edx+20h] +
mov [esp+4Ch+var_2C] eax +
mov [esp+4Ch+var_24] ecx +
mov eax edi +
or eax esi +
jnz loc_4042F5  +
test ecx ecx +
jz loc_404370  +
mov dword ptr [ecx] 0 +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+3Ch] +
mov ebp [edx+38h] +
mov edx eax +
or edx ebp +
jz loc_404336  +
cmp edi eax +
jbe loc_404330  +
cmp edi ds:dword_4720A4 +
jb loc_404388  +
lea esi [esi+0] +
jbe loc_404380  +
mov eax ebx +
call sub_401C80  +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] offset aSectionSHasAnI +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
jmp loc_404351  +
jb loc_404336  +
cmp esi ebp +
jnb loc_404305  +
mov eax ebx +
call sub_401C80  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_4C] offset aSectionSHasA_0 +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
mov eax [esp+4Ch+var_24] +
xor edi edi +
test eax eax +
jz loc_404370  +
xor eax eax +
lea esi [esi+0] +
mov edx [esp+4Ch+var_24] +
mov [edx] eax +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ds:dword_4720A0 +
ja loc_404312  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_40] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] edi +
call sub_43F880  +
mov edx edi +
mov [esp+4Ch+var_18] 0 +
mov ecx eax +
mov [esp+4Ch+var_10] eax +
shl ecx 4 +
mov [esp+4Ch+var_20] eax +
mov eax esi +
add eax 1 +
adc edx 0 +
cmp [esp+4Ch+var_18] edx +
mov [esp+4Ch+var_1C] ecx +
jb loc_4043F4  +
jbe loc_4043F0  +
mov eax ebx +
call sub_401C80  +
mov [esp+4Ch+var_40] ebp +
mov [esp+4Ch+var_44] eax +
mov eax [ebx+20h] +
mov [esp+4Ch+var_4C] offset aSize0xLxOfSect +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
jmp loc_404351  +
cmp ecx eax +
ja loc_4043C7  +
mov ecx [ebx+18h] +
xor eax eax +
mov edx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_3C] offset aSymbols +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+4Ch+var_14] eax +
jz loc_404351  +
mov ebp ds:dword_471D40 +
mov [esp+4Ch+var_1C] 0 +
test ebp ebp +
jnz loc_40444F  +
jmp loc_404537  +
mov ebp [ebp+4] +
test ebp ebp +
jz loc_404537  +
mov eax ebx +
mov ecx [ebp+0] +
sub eax ds:dword_471D4C +
sar eax 3 +
imul eax eax +
cmp [ecx+28h] eax +
jnz loc_404444  +
mov edx [ecx+24h] +
mov eax [ecx+20h] +
mov ecx [ecx+18h] +
mov [esp+4Ch+var_3C] offset aSymbolTableSec +
mov [esp+4Ch+var_40] edx +
mov edx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] eax +
xor eax eax +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+4Ch+var_1C] eax +
jz loc_404668  +
mov eax [ebp+0] +
mov esi [eax+20h] +
mov edi [eax+24h] +
mov edx esi +
mov ecx edi +
shrd edx ecx +
shr ecx 2 +
cmp ecx 0 +
ja loc_404444  +
cmp edx [esp+4Ch+var_10] +
jnb loc_404444  +
mov [esp+4Ch+var_28] edi +
mov ebx [ebx+20h] +
xor edi edi +
mov [esp+4Ch+var_2C] esi +
call sub_401C80  +
mov edx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] offset aIndexSectionSH +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
mov eax [esp+4Ch+var_1C] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov edx [esp+4Ch+var_24] +
test edx edx +
jz loc_404530  +
test edi edi +
mov eax [esp+4Ch+var_20] +
jnz loc_404360  +
jmp loc_40435B  +
mov eax edi +
jmp loc_4042ED  +
mov esi [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] 20h +
mov [esp+4Ch+var_4C] esi +
call sub_42C2B0  +
test eax eax +
mov edi eax +
jz loc_40466F  +
test esi esi +
jz loc_404657  +
mov eax [esp+4Ch+var_1C] +
mov ebx edi +
xor ebp ebp +
mov [esp+4Ch+var_2C] edi +
mov esi [esp+4Ch+var_14] +
mov edi eax +
jmp loc_4045B5  +
lea eax [esi+0Ch] +
add ebp 1 +
mov [esp+4Ch+var_48] 1 +
add ebx 20h +
add edi 4 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx-0Ch] al +
lea eax [esi+0Dh] +
add esi 10h +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx-0Bh] al +
cmp [esp+4Ch+var_20] ebp +
jbe loc_404653  +
mov [esp+4Ch+var_48] 4 +
mov [esp+4Ch+var_4C] esi +
call ds:dword_472C94  +
mov [ebx+10h] eax +
lea eax [esi+4] +
mov [esp+4Ch+var_48] 4 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx] eax +
lea eax [esi+8] +
mov [ebx+4] edx +
mov [esp+4Ch+var_48] 4 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx+8] eax +
lea eax [esi+0Eh] +
mov [ebx+0Ch] edx +
mov [esp+4Ch+var_48] 2 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
cmp eax 0FFFFh +
mov [ebx+18h] eax +
jz loc_404632  +
cmp eax 0FEFFh +
jbe loc_404571  +
sub eax 10000h +
mov [ebx+18h] eax +
jmp loc_404571  +
mov edx [esp+4Ch+var_1C] +
test edx edx +
jz loc_404625  +
mov [esp+4Ch+var_48] 4 +
mov [esp+4Ch+var_4C] edi +
call ds:dword_472C94  +
mov [ebx+18h] eax +
jmp loc_404571  +
mov edi [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+var_1C] +
test ecx ecx +
jnz loc_4044F8  +
jmp loc_404504  +
xor edi edi +
jmp loc_404504  +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] offset aOutOfMemoryRea +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
jmp loc_404657  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edi [edx+24h] +
mov esi [edx+20h] +
mov [esp+4Ch+var_2C] eax +
mov [esp+4Ch+var_24] ecx +
mov eax edi +
or eax esi +
jnz loc_4046C5  +
test ecx ecx +
jz loc_404740  +
mov dword ptr [ecx] 0 +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+3Ch] +
mov ebp [edx+38h] +
mov edx eax +
or edx ebp +
jz loc_404706  +
cmp edi eax +
jbe loc_404700  +
cmp edi ds:dword_4720A4 +
jb loc_404758  +
lea esi [esi+0] +
jbe loc_404750  +
mov eax ebx +
call sub_401C80  +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] offset aSectionSHasAnI +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
jmp loc_404721  +
jb loc_404706  +
cmp esi ebp +
jnb loc_4046D5  +
mov eax ebx +
call sub_401C80  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_4C] offset aSectionSHasA_0 +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
mov eax [esp+4Ch+var_24] +
xor edi edi +
test eax eax +
jz loc_404740  +
xor eax eax +
lea esi [esi+0] +
mov edx [esp+4Ch+var_24] +
mov [edx] eax +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ds:dword_4720A0 +
ja loc_4046E2  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_40] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] edi +
call sub_43F880  +
mov edx edi +
mov [esp+4Ch+var_18] 0 +
lea ecx [eax+eax*2] +
mov [esp+4Ch+var_10] eax +
shl ecx 3 +
mov [esp+4Ch+var_20] eax +
mov eax esi +
add eax 1 +
adc edx 0 +
cmp [esp+4Ch+var_18] edx +
mov [esp+4Ch+var_1C] ecx +
jb loc_4047C4  +
jbe loc_4047C0  +
mov eax ebx +
call sub_401C80  +
mov [esp+4Ch+var_40] ebp +
mov [esp+4Ch+var_44] eax +
mov eax [ebx+20h] +
mov [esp+4Ch+var_4C] offset aSize0xLxOfSect +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
jmp loc_404721  +
cmp ecx eax +
ja loc_404798  +
mov ecx [ebx+18h] +
xor eax eax +
mov edx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_3C] offset aSymbols +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+4Ch+var_14] eax +
jz loc_404721  +
mov ebp ds:dword_471D40 +
mov [esp+4Ch+var_1C] 0 +
test ebp ebp +
jnz loc_40481F  +
jmp loc_404907  +
mov ebp [ebp+4] +
test ebp ebp +
jz loc_404907  +
mov eax ebx +
mov ecx [ebp+0] +
sub eax ds:dword_471D4C +
sar eax 3 +
imul eax eax +
cmp [ecx+28h] eax +
jnz loc_404814  +
mov edx [ecx+24h] +
mov eax [ecx+20h] +
mov ecx [ecx+18h] +
mov [esp+4Ch+var_3C] offset aSymbolTableSec +
mov [esp+4Ch+var_40] edx +
mov edx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] eax +
xor eax eax +
mov [esp+4Ch+var_4C] 1 +
mov [esp+4Ch+var_48] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+4Ch+var_1C] eax +
jz loc_404A40  +
mov eax [ebp+0] +
mov esi [eax+20h] +
mov edi [eax+24h] +
mov edx esi +
mov ecx edi +
shrd edx ecx +
shr ecx 2 +
cmp ecx 0 +
ja loc_404814  +
cmp edx [esp+4Ch+var_10] +
jnb loc_404814  +
mov [esp+4Ch+var_28] edi +
mov ebx [ebx+20h] +
xor edi edi +
mov [esp+4Ch+var_2C] esi +
call sub_401C80  +
mov edx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] offset aIndexSectionSH +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
mov eax [esp+4Ch+var_1C] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_14] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov edx [esp+4Ch+var_24] +
test edx edx +
jz loc_404900  +
test edi edi +
mov eax [esp+4Ch+var_20] +
jnz loc_404730  +
jmp loc_40472B  +
mov eax edi +
jmp loc_4046BD  +
mov esi [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] 20h +
mov [esp+4Ch+var_4C] esi +
call sub_42C2B0  +
test eax eax +
mov edi eax +
jz loc_404A47  +
test esi esi +
jz loc_404A28  +
mov eax [esp+4Ch+var_1C] +
mov ebx edi +
xor ebp ebp +
mov [esp+4Ch+var_2C] edi +
mov esi [esp+4Ch+var_14] +
mov edi eax +
jmp loc_40498B  +
lea eax [esi+8] +
add ebp 1 +
mov [esp+4Ch+var_48] 8 +
add ebx 20h +
add edi 4 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx-20h] eax +
lea eax [esi+10h] +
add esi 18h +
mov [ebx-1Ch] edx +
mov [esp+4Ch+var_48] 8 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx-18h] eax +
mov [ebx-14h] edx +
cmp [esp+4Ch+var_20] ebp +
jbe loc_404A24  +
mov [esp+4Ch+var_48] 4 +
mov [esp+4Ch+var_4C] esi +
call ds:dword_472C94  +
mov [ebx+10h] eax +
lea eax [esi+4] +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx+14h] al +
lea eax [esi+5] +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
mov [ebx+15h] al +
lea eax [esi+6] +
mov [esp+4Ch+var_48] 2 +
mov [esp+4Ch+var_4C] eax +
call ds:dword_472C94  +
cmp eax 0FFFFh +
mov [ebx+18h] eax +
jz loc_404A03  +
cmp eax 0FEFFh +
jbe loc_404941  +
sub eax 10000h +
mov [ebx+18h] eax +
jmp loc_404941  +
mov edx [esp+4Ch+var_1C] +
test edx edx +
jz loc_4049F6  +
mov [esp+4Ch+var_48] 4 +
mov [esp+4Ch+var_4C] edi +
call ds:dword_472C94  +
mov [ebx+18h] eax +
jmp loc_404941  +
mov edi [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+var_1C] +
test ecx ecx +
jnz loc_4048C8  +
jmp loc_4048D4  +
xor edi edi +
jmp loc_4048D4  +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] offset aOutOfMemoryRea +
mov [esp+4Ch+var_48] eax +
call sub_436A70  +
jmp loc_404A28  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov ebx ds:dword_471DA0 +
jnz loc_404C60  +
mov edi ds:dword_471DA4 +
test edi edi +
jz loc_404C50  +
test ebx ebx +
jz loc_404C50  +
nop   +
lea esi [esi+0] +
cmp ebx 27h +
jbe loc_404C40  +
test edx edx +
setz cl  +
xor edx edx +
test cl cl +
mov esi ecx +
jnz loc_404C70  +
mov ecx ds:dword_471D80 +
mov [esp+2Ch+var_1C] edx +
mov edx eax +
xor eax eax +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_404C50  +
mov eax ds:dword_471D4C +
test eax eax +
jz loc_404AF1  +
mov [esp+2Ch+var_2C] eax +
call free  +
mov [esp+2Ch+var_28] 48h +
mov [esp+2Ch+var_2C] edi +
call sub_42C2B0  +
test eax eax +
mov ebx eax +
mov ds:dword_471D4C eax +
jz loc_404C93  +
xor ebp ebp +
test edi edi +
mov esi [esp+2Ch+var_10] +
jz loc_404C26  +
nop   +
mov [esp+2Ch+var_2C] esi +
add ebp 1 +
add ebx 48h +
mov [esp+2Ch+var_28] 4 +
call ds:dword_472C94  +
mov [ebx-48h] eax +
lea eax [esi+4] +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-44h] eax +
lea eax [esi+8] +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-40h] eax +
lea eax [esi+0Ch] +
mov [ebx-3Ch] edx +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-38h] eax +
lea eax [esi+10h] +
mov [ebx-34h] edx +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-30h] eax +
lea eax [esi+14h] +
mov [ebx-2Ch] edx +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-28h] eax +
lea eax [esi+18h] +
mov [ebx-24h] edx +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-20h] eax +
lea eax [esi+1Ch] +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-1Ch] eax +
lea eax [esi+20h] +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-18h] eax +
lea eax [esi+24h] +
add esi 28h +
mov [ebx-14h] edx +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-10h] eax +
mov [ebx-0Ch] edx +
cmp ebp edi +
jnz loc_404B20  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edx edx +
jnz loc_404C50  +
mov [esp+2Ch+var_2C] offset aTheE_shentsize +
call sub_436A70  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
mov edi 1 +
jnz loc_404A90  +
jmp loc_404C50  +
cmp ebx 28h +
jbe loc_404C89  +
mov [esp+2Ch+var_2C] offset aTheE_shentsi_0 +
mov [esp+2Ch+var_10] eax +
call sub_437070  +
mov eax [esp+2Ch+var_10] +
mov edx offset aSectionHeaders +
jmp loc_404AAA  +
mov eax esi +
test al al +
jz loc_404C50  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset aOutOfMemoryR_0 +
call sub_436A70  +
xor eax eax +
jmp loc_404C52  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov ebx ds:dword_471DA0 +
jnz loc_404EB0  +
mov edi ds:dword_471DA4 +
test edi edi +
jz loc_404EA0  +
test ebx ebx +
jz loc_404EA0  +
nop   +
lea esi [esi+0] +
cmp ebx 3Fh +
jbe loc_404E90  +
test edx edx +
setz cl  +
xor edx edx +
test cl cl +
mov esi ecx +
jnz loc_404EC0  +
mov ecx ds:dword_471D80 +
mov [esp+2Ch+var_1C] edx +
mov edx eax +
xor eax eax +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_404EA0  +
mov eax ds:dword_471D4C +
test eax eax +
jz loc_404D41  +
mov [esp+2Ch+var_2C] eax +
call free  +
mov [esp+2Ch+var_28] 48h +
mov [esp+2Ch+var_2C] edi +
call sub_42C2B0  +
test eax eax +
mov ebx eax +
mov ds:dword_471D4C eax +
jz loc_404EE3  +
xor ebp ebp +
test edi edi +
mov esi [esp+2Ch+var_10] +
jz loc_404E76  +
nop   +
mov [esp+2Ch+var_2C] esi +
add ebp 1 +
add ebx 48h +
mov [esp+2Ch+var_28] 4 +
call ds:dword_472C94  +
mov [ebx-48h] eax +
lea eax [esi+4] +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-44h] eax +
lea eax [esi+8] +
mov [esp+2Ch+var_28] 8 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-40h] eax +
lea eax [esi+10h] +
mov [ebx-3Ch] edx +
mov [esp+2Ch+var_28] 8 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-38h] eax +
lea eax [esi+20h] +
mov [ebx-34h] edx +
mov [esp+2Ch+var_28] 8 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-28h] eax +
lea eax [esi+38h] +
mov [ebx-24h] edx +
mov [esp+2Ch+var_28] 8 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-10h] eax +
lea eax [esi+28h] +
mov [ebx-0Ch] edx +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-20h] eax +
lea eax [esi+2Ch] +
mov [esp+2Ch+var_28] 4 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-1Ch] eax +
lea eax [esi+18h] +
mov [esp+2Ch+var_28] 8 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-30h] eax +
lea eax [esi+30h] +
add esi 40h +
mov [ebx-2Ch] edx +
mov [esp+2Ch+var_28] 8 +
mov [esp+2Ch+var_2C] eax +
call ds:dword_472C94  +
mov [ebx-18h] eax +
mov [ebx-14h] edx +
cmp ebp edi +
jnz loc_404D70  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edx edx +
jnz loc_404EA0  +
mov [esp+2Ch+var_2C] offset aTheE_shentsize +
call sub_436A70  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
mov edi 1 +
jnz loc_404CE0  +
jmp loc_404EA0  +
cmp ebx 40h +
jbe loc_404ED9  +
mov [esp+2Ch+var_2C] offset aTheE_shentsi_0 +
mov [esp+2Ch+var_10] eax +
call sub_437070  +
mov eax [esp+2Ch+var_10] +
mov edx offset aSectionHeaders +
jmp loc_404CFA  +
mov eax esi +
test al al +
jz loc_404EA0  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset aOutOfMemoryR_0 +
call sub_436A70  +
xor eax eax +
jmp loc_404EA2  +
***
mov edi edx +
push esi  +
xor edi edx +
push ebx  +
mov esi eax +
mov eax ecx +
sub esp 3Ch +
xor ebx ebx +
or edi eax +
mov ebp [esp+44h+arg_0] +
mov ecx edx +
jnz loc_405094  +
mov eax edx +
mul  ebp +
cmp edx ds:dword_4720A4 +
mov [esp+44h+var_24] eax +
mov [esp+44h+var_20] edx +
jnb loc_405033  +
mov [esp+44h+var_44] ecx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_2C] ecx +
mov [esp+44h+var_28] ebx +
call sub_42C2B0  +
mov ecx [esp+44h+var_2C] +
mov ebx [esp+44h+var_28] +
test eax eax +
mov [esp+44h+var_18] eax +
jz loc_4050B6  +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_2C] ecx +
mov [esp+44h+var_28] ebx +
call fread  +
mov ecx [esp+44h+var_2C] +
mov ebx [esp+44h+var_28] +
mov edx ebx +
xor eax ecx +
or edx eax +
jnz loc_405062  +
mov [esp+44h+var_44] ecx +
mov [esp+44h+var_40] 8 +
mov [esp+44h+var_2C] ecx +
mov [esp+44h+var_28] ebx +
call sub_42C2B0  +
mov ecx [esp+44h+var_2C] +
mov ebx [esp+44h+var_28] +
test eax eax +
mov [esp+44h+var_24] eax +
jz loc_4050D1  +
mov esi ecx +
mov edi ebx +
add esi 0FFFFFFFFh +
mov eax ebx +
adc edi 0FFFFFFFFh +
or eax ecx +
jz loc_40501B  +
mov ebx ebp +
imul ebx esi +
add ebx [esp+44h+var_18] +
mov [esp+44h+var_2C] ebx +
jmp loc_404FE4  +
mov esi eax +
mov edi edx +
mov eax [esp+44h+var_2C] +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] eax +
call ds:dword_472C94  +
mov ebx [esp+44h+var_24] +
lea ecx ds:0[esi*8] +
mov [ebx+ecx] eax +
mov eax esi +
add eax 0FFFFFFFFh +
mov [ebx+ecx+4] edx +
mov edx edi +
mov ebx edi +
adc edx 0FFFFFFFFh +
sub [esp+44h+var_2C] ebp +
or ebx esi +
jnz loc_404FE0  +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_44] eax +
call free  +
mov eax [esp+44h+var_24] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jbe loc_405050  +
mov [esp+44h+var_40] ecx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aInvalidNumberO +
call sub_436A70  +
xor eax eax +
jmp loc_40502B  +
mov eax [esp+44h+var_24] +
cmp eax ds:dword_4720A0 +
jbe loc_404F37  +
jmp loc_405035  +
mov eax [esp+44h+var_24] +
mov edx [esp+44h+var_20] +
mov [esp+44h+var_44] offset aUnableToRead_0 +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_3C] edx +
call sub_436A70  +
mov eax [esp+44h+var_18] +
mov [esp+44h+var_44] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_38] ebp +
mov [esp+44h+var_3C] eax +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_44] offset aSizeTruncati_0 +
call sub_436A70  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_40] ecx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aOutOfMemoryR_2 +
call sub_436A70  +
xor eax eax +
jmp loc_40502B  +
mov [esp+44h+var_40] ecx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aOutOfMemoryA_5 +
jmp loc_405079  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov ecx ds:dword_471CF0 +
test ecx ecx +
jz loc_405210  +
mov ecx edx +
mov edx eax +
mov [esp+3Ch+var_2C] offset a32BitRelocatio +
xor eax eax +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] 1 +
mov [esp+3Ch+var_38] 0 +
call sub_403CC0  +
test eax eax +
mov ebp eax +
jz loc_405385  +
mov eax ebx +
mov edx 0AAAAAAABh +
mul  edx +
mov [esp+3Ch+var_38] 18h +
mov [esp+3Ch+var_20] edx +
shr [esp+3Ch+var_20] 3 +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
call sub_42C2B0  +
test eax eax +
mov [esp+3Ch+var_14] eax +
jz loc_405371  +
mov ebx eax +
mov eax [esp+3Ch+var_20] +
xor edi edi +
mov esi ebp +
test eax eax +
jz loc_4051E2  +
mov [esp+3Ch+var_1C] ebp +
mov ebp [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] esi +
add edi 1 +
add ebx 18h +
mov [esp+3Ch+var_38] 4 +
call ds:dword_472C94  +
mov [ebx-18h] eax +
lea eax [esi+4] +
mov [ebx-14h] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [ebx-10h] eax +
lea eax [esi+8] +
add esi 0Ch +
mov [ebx-0Ch] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call sub_4373D0  +
mov [ebx-8] eax +
mov [ebx-4] edx +
cmp edi ebp +
jnz loc_405187  +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_3C] ebp +
call free  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+var_14] +
mov [eax] ecx +
mov eax [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+var_20] +
mov [eax] ecx +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx edx +
mov edx eax +
mov [esp+3Ch+var_2C] offset a64BitRelocatio +
xor eax eax +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] 1 +
mov [esp+3Ch+var_38] 0 +
call sub_403CC0  +
test eax eax +
mov ebp eax +
mov [esp+3Ch+var_10] eax +
jz loc_405385  +
mov eax ebx +
mov edx 0AAAAAAABh +
mul  edx +
mov [esp+3Ch+var_38] 18h +
mov [esp+3Ch+var_20] edx +
shr [esp+3Ch+var_20] 4 +
mov esi [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] esi +
call sub_42C2B0  +
test eax eax +
mov [esp+3Ch+var_14] eax +
jz loc_40538F  +
xor ebx ebx +
test esi esi +
mov edi eax +
jz loc_405360  +
mov esi [esp+3Ch+var_20] +
jmp loc_4052A1  +
add ebx 1 +
add ebp 18h +
add edi 18h +
cmp ebx esi +
jz loc_405360  +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] ebp +
call ds:dword_472C94  +
mov [edi] eax +
lea eax [ebp+8] +
mov [edi+4] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [edi+8] eax +
lea eax [ebp+10h] +
mov [edi+0Ch] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call sub_4373D0  +
cmp ds:word_471D92 8 +
mov [edi+10h] eax +
mov [edi+14h] edx +
jnz loc_405290  +
cmp ds:byte_471D65 2 +
jz loc_405290  +
mov edx [edi+0Ch] +
add ebx 1 +
add ebp 18h +
mov eax [edi+8] +
add edi 18h +
mov [esp+3Ch+var_18] edx +
mov ecx edx +
shr edx 8 +
mov [esp+3Ch+var_1C] eax +
mov eax edx +
mov edx [esp+3Ch+var_18] +
and eax 0FF00h +
shr ecx 18h +
or ecx eax +
mov eax [esp+3Ch+var_1C] +
shrd eax edx +
mov edx [esp+3Ch+var_18] +
and eax 0FF0000h +
or ecx eax +
mov eax [esp+3Ch+var_1C] +
shrd eax edx +
and eax 0FF000000h +
or ecx eax +
mov eax [esp+3Ch+var_1C] +
mov [edi-10h] ecx +
mov [edi-0Ch] eax +
cmp ebx esi +
jnz loc_4052A1  +
lea esi [esi+0] +
mov eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_4051EA  +
mov [esp+3Ch+var_3C] ebp +
call free  +
mov [esp+3Ch+var_3C] offset aOutOfMemoryPar +
call sub_436A70  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov [esp+3Ch+var_3C] offset aOutOfMemoryPar +
call sub_436A70  +
xor eax eax +
jmp loc_405203  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 20h +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_20] eax +
mov eax ds:dword_472864 +
mov [esp+24h+var_1C] 0 +
add ds:dword_471D0C 1 +
mov [esp+24h+var_24] eax +
call strtoul  +
mov edx [esp+24h+var_8] +
cmp byte ptr [edx] 0 +
jnz loc_405489  +
test eax eax +
jns loc_4054D0  +
mov [esp+24h+var_24] 0Ch +
mov edi ds:dword_472864 +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_4054F0  +
mov [esp+24h+var_24] edi +
call _strdup  +
test eax eax +
mov [ebx] eax +
jz loc_4054E1  +
mov eax esi +
mov [ebx+4] al +
mov eax ds:dword_471CDC +
mov ds:dword_471CDC ebx +
mov [ebx+8] eax +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx esi +
movzx edx cl +
call sub_4053B0  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+24h+var_24] offset aOutOfMemoryA_0 +
call sub_436A70  +
jmp loc_4054AF  +
mov [esp+24h+var_24] offset aOutOfMemoryA_0 +
call sub_436A70  +
jmp loc_4054A1  +
***
sub esp 18h +
mov [esp+18h+var_C] eax +
mov [esp+18h+var_10] 27h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aUsageReadelfOp +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDisplayInforma +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 798h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aOptionsAreAAll +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0AFh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDwarfDepthNDoN +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 129h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIHistogramDisp +
call fwrite  +
mov eax ds:_iob +
add eax 20h +
cmp eax ebx +
jz loc_4055C2  +
cmp ebx eax +
setnz al  +
movzx eax al +
mov [esp+18h+var_18] eax +
call exit  +
mov [esp+18h+var_10] offset aHttpWww_source +
mov [esp+18h+var_14] offset aReportBugsToS +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax ds:_iob +
add eax 20h +
jmp loc_4055B2  +
***
cmp ecx 6 +
ja loc_40571B  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 24h +
jmp ds:off_44629C[ecx*4]  +
cmp edx 0 +
ja loc_405617  +
cmp eax 1869Fh +
jbe loc_405702  +
mov [esp+2Ch+var_2C] offset a0x +
mov [esp+2Ch+var_10] edx +
call printf  +
mov edx [esp+2Ch+var_10] +
mov esi eax +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] offset aI64x_0 +
call printf  +
add eax esi +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor esi esi +
jmp loc_40562D  +
mov eax ds:dword_471CF0 +
xor esi esi +
test eax eax +
jz loc_4056BF  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] offset a8_8i64x +
call printf  +
add esp 24h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] offset aI64u +
call printf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+2Ch+var_2C] offset a0x +
mov [esp+2Ch+var_10] edx +
call printf  +
mov edx [esp+2Ch+var_10] +
mov esi eax +
mov eax ds:dword_471CF0 +
test eax eax +
jnz loc_40565F  +
mov eax ds:_iob +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] offset a016i64x_0 +
add eax 20h +
mov [esp+2Ch+var_2C] eax +
call fprintf  +
add esp 24h +
lea eax [esi+10h] +
pop ebx  +
pop esi  +
retn   +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] offset aI64d +
call printf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] offset a5i64d +
call printf  +
jmp loc_405643  +
xor eax eax +
retn   +
***
sub esp 1Ch +
cmp eax 8 +
ja loc_4057C3  +
jmp ds:off_4463DC[eax*4]  +
mov [esp+1Ch+var_1C] offset aHardFloatCompa +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aNan2008Compati +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aHardOrSoftFloa +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aHardFloatDoubl +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aHardFloatSingl +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aSoftFloat +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aHardFloatMips3 +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aHardFloat32Bit +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aHardFloat32B_0 +
call puts  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] offset a???D +
call printf  +
add esp 1Ch +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov edi [esp+20h+arg_4] +
mov esi [esp+20h+arg_0] +
mov [esp+20h+var_20] offset unk_446400 +
mov [esp+20h+var_8] edx +
mov [esp+20h+var_4] ecx +
call printf  +
mov edx edi +
mov ecx 6 +
mov eax esi +
call sub_4055F0  +
mov [esp+20h+var_20] 20h +
call putchar  +
mov eax [esp+20h+var_8] +
mov edx [esp+20h+var_4] +
add eax 0FFF0h +
adc edx 0 +
cmp edi edx +
ja loc_4058DC  +
jnb loc_4058D4  +
mov eax esi +
sub eax [esp+20h+var_8] +
mov [esp+20h+var_20] offset a6dGp +
sub eax 7FF0h +
mov [esp+20h+var_1C] eax +
call printf  +
mov [esp+20h+var_20] 20h +
call putchar  +
test ebx ebx +
jz loc_405904  +
mov edx ds:dword_471CF0 +
mov eax esi +
sub eax [esp+20h+var_8] +
add ebx eax +
cmp edx 1 +
sbb eax eax +
and eax 4 +
lea eax [ebx+eax+4] +
cmp [esp+20h+arg_8] eax +
jb loc_405930  +
cmp edx 1 +
sbb eax eax +
and eax 4 +
add eax 4 +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ebx +
call ds:dword_472C94  +
mov ecx 6 +
call sub_4055F0  +
mov ecx ds:dword_471CF0 +
xor edx edx +
mov eax 8 +
test ecx ecx +
jz loc_4058C9  +
mov eax 4 +
xor edx edx +
add eax esi +
adc edx edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp esi eax +
jb loc_40583C  +
mov [esp+20h+var_1C] offset unk_44640B +
mov [esp+20h+var_20] offset a10s +
call printf  +
mov [esp+20h+var_20] 20h +
call putchar  +
test ebx ebx +
jnz loc_40586B  +
cmp ds:dword_471CF0 1 +
mov [esp+20h+var_18] offset aUnknown_2 +
mov [esp+20h+var_20] offset aS_23 +
sbb eax eax +
and eax 8 +
add eax 8 +
mov [esp+20h+var_1C] eax +
call printf  +
jmp loc_4058B1  +
mov [esp+20h+var_20] offset aMipsGotEntryEx +
call sub_437070  +
cmp ds:dword_471CF0 1 +
mov [esp+20h+var_18] offset aCorrupt +
mov [esp+20h+var_20] offset aS_23 +
sbb eax eax +
and eax 8 +
add eax 8 +
mov [esp+20h+var_1C] eax +
call printf  +
add esp 20h +
mov eax 0FFFFFFFFh +
pop ebx  +
mov edx 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 3Ch +
test eax eax +
mov [esp+3Ch+var_24] eax +
js loc_405BA8  +
mov [esp+3Ch+var_1D] 0 +
jz loc_405B50  +
mov eax ds:dword_472C54 +
mov [esp+3Ch+var_10] 0 +
test eax eax +
jnz loc_405B40  +
mov eax [esp+3Ch+var_24] +
test eax eax +
mov ebp eax +
jz loc_405BB6  +
movzx edx byte ptr [ebx] +
lea edi [ebx+1] +
test dl dl +
jz loc_405BB6  +
xor esi esi +
jmp loc_405AB3  +
cmp ebp 1 +
jz loc_405AE0  +
add ecx 40h +
sub ebp 2 +
mov [esp+3Ch+var_38] ecx +
add esi 2 +
mov ebx edi +
mov [esp+3Ch+var_3C] offset aC_1 +
call printf  +
test ebp ebp +
jz loc_405AE0  +
movzx edx byte ptr [ebx] +
lea edi [ebx+1] +
test dl dl +
jz loc_405AE0  +
movzx eax ds:word_4699A0[edx+edx] +
movsx ecx dl +
test al 2 +
jnz loc_405A85  +
test al 10h +
jz loc_405AF4  +
mov [esp+3Ch+var_3C] ecx +
sub ebp 1 +
add esi 1 +
call putchar  +
test ebp ebp +
mov ebx edi +
jnz loc_405AA9  +
lea esi [esi+0] +
cmp esi [esp+3Ch+var_24] +
jl loc_405B71  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_38] ebx +
sub ebp 1 +
add esi 1 +
mov [esp+3Ch+var_3C] offset a_1s +
call printf  +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax ds:__mb_cur_max +
mov eax [eax] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_34] eax +
lea eax [esp+2Ah] +
mov [esp+3Ch+var_3C] eax +
call sub_43FDD0  +
sub eax 1 +
lea ebx [edi+eax] +
cmp eax 0FFFFFFFCh +
cmova ebx edi +
jmp loc_405AA5  +
mov ebp 7FFFFFFFh +
jmp loc_405A73  +
mov [esp+3Ch+var_34] 1E2h +
mov [esp+3Ch+var_38] offset a____Binutils_0 +
mov [esp+3Ch+var_3C] offset aWidth0 +
call sub_440120  +
jmp loc_405A50  +
cmp [esp+3Ch+var_1D] 0 +
jz loc_405AEA  +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] offset asc_44648A +
mov [esp+3Ch+var_3C] offset aS_10 +
mov eax edi +
sub eax esi +
mov esi edi +
mov [esp+3Ch+var_38] eax +
call printf  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
neg [esp+3Ch+var_24]  +
mov [esp+3Ch+var_1D] 1 +
jmp loc_405A50  +
xor esi esi +
jmp loc_405AE0  +
***
push edi  +
mov edx eax +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx ds:dword_471D20 +
cmp ds:dword_471CF0 1 +
sbb eax eax +
mov [esp+68h+var_44] eax +
mov [esp+68h+var_38] eax +
and [esp+68h+var_44] 0FFFFFFF8h +
and [esp+68h+var_38] 8 +
add [esp+68h+var_44] 3F3h +
add [esp+68h+var_38] 8 +
mov [esp+68h+var_34] eax +
and [esp+68h+var_34] 8 +
add [esp+68h+var_34] 8 +
test ebx ebx +
jnz loc_406240  +
mov eax ecx +
mov ebx offset unk_471320 +
or eax edx +
mov [esp+68h+var_40] 0 +
jz loc_405D9E  +
mov eax [esp+68h+var_38] +
mov esi edx +
mov edi ecx +
mov [esp+68h+var_24] 0 +
mov [esp+68h+var_1C] 0 +
mov [esp+68h+var_28] 0 +
add eax offset dword_471324 +
mov [esp+68h+var_3C] eax +
mov eax ebx +
mov [esp+68h+var_20] 0 +
mov [esp+68h+var_30] 0 +
mov [esp+68h+var_2C] 0 +
lea esi [esi+0] +
mov ecx esi +
mov ebx edi +
neg ecx  +
adc ebx 0 +
mov edx ecx +
mov ecx [esp+68h+var_40] +
and edx esi +
neg ebx  +
mov ebp edx +
mov [esp+68h+var_50] edx +
mov edx ebx +
not ebp  +
and edx edi +
and ebp esi +
mov ebx edx +
mov esi ebp +
not ebx  +
and ebx edi +
mov edi ebx +
mov ebx [esp+68h+var_50] +
xor ebx 40h +
test ecx ecx +
jz loc_405E00  +
or ebx edx +
jz loc_406008  +
cmp edx 0 +
ja loc_405EA1  +
cmp [esp+68h+var_50] 40h +
ja loc_405EA1  +
mov ecx [esp+68h+var_50] +
mov ebx ecx +
xor ebx 4 +
or ebx edx +
jz loc_406012  +
cmp ecx 4 +
ja loc_405FB2  +
mov ebx ecx +
xor ebx 1 +
or ebx edx +
jz loc_405DB0  +
mov ebp ecx +
mov ebx 1 +
xor ebp 2 +
or ebp edx +
jz loc_405DB2  +
nop   +
movzx ebx ds:word_471D92 +
cmp bx 12h +
jz loc_4062B0  +
jbe loc_406296  +
cmp bx 3Eh +
jz loc_4062B0  +
ja loc_4062E6  +
cmp bx 2Bh +
jz loc_4062B0  +
cmp bx 32h +
jnz loc_405D68  +
mov ecx [esp+68h+var_50] +
mov ebx ecx +
xor ebx 10000000h +
or ebx edx +
jz loc_4062D4  +
mov ebx ecx +
xor ebx 20000000h +
or ebx edx +
jz loc_406340  +
cmp ds:byte_471D67 0Dh +
jz loc_406303  +
test [esp+68h+var_50] 0FF00000h +
jz loc_4061F0  +
mov ecx [esp+68h+var_50] +
or [esp+68h+var_30] ecx +
mov ecx edi +
or [esp+68h+var_2C] edx +
or ecx esi +
jnz loc_405C70  +
lea esi [esi+0] +
mov edx [esp+68h+var_40] +
mov ebx eax +
test edx edx +
jnz loc_406070  +
mov byte ptr [ebx] 0 +
add esp 5Ch +
mov eax offset unk_471320 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
cmp eax [esp+68h+var_3C] +
mov edx [esp+68h+var_3C] +
jz loc_405DD6  +
cmp [esp+68h+var_44] 0Bh +
jle loc_406220  +
sub [esp+68h+var_44] 2 +
lea edx [eax+2] +
mov byte ptr [eax] 2Ch +
mov byte ptr [eax+1] 20h +
mov eax ds:dword_461D84[ebx*8] +
sub [esp+68h+var_44] eax +
mov eax ds:off_461D80[ebx*8] +
mov [esp+68h+var_68] edx +
mov [esp+68h+var_64] eax +
call sub_438D70  +
mov ecx edi +
or ecx esi +
jnz loc_405C70  +
jmp loc_405D90  +
or ebx edx +
jz loc_406000  +
cmp edx 0 +
nop   +
lea esi [esi+0] +
ja loc_405E58  +
cmp [esp+68h+var_50] 40h +
ja loc_405E58  +
mov ecx [esp+68h+var_50] +
mov ebx ecx +
xor ebx 4 +
or ebx edx +
jz loc_406030  +
cmp ecx 4 +
ja loc_405F90  +
mov ebx ecx +
xor ebx 1 +
or ebx edx +
jz loc_405E50  +
mov ebx ecx +
xor ebx 2 +
or ebx edx +
jnz loc_405F46  +
mov byte ptr [eax] 41h +
jmp loc_405E53  +
mov byte ptr [eax] 57h +
add eax 1 +
jmp loc_405DF4  +
mov ebx [esp+68h+var_50] +
xor bh 2 +
or ebx edx +
jz loc_406060  +
mov ecx [esp+68h+var_50] +
cmp edx 0 +
mov ebx ecx +
ja loc_405F20  +
cmp [esp+68h+var_50] 200h +
ja loc_405F20  +
xor bl 80h +
or ebx edx +
jz loc_406068  +
mov ebx ecx +
xor bh 1 +
or ebx edx +
jnz loc_405F46  +
mov byte ptr [eax] 4Fh +
jmp loc_405E53  +
mov ebx [esp+68h+var_50] +
xor bh 2 +
or ebx edx +
jz loc_406042  +
mov ecx [esp+68h+var_50] +
cmp edx 0 +
mov ebx ecx +
ja loc_405EF0  +
cmp [esp+68h+var_50] 200h +
ja loc_405EF0  +
xor bl 80h +
or ebx edx +
jz loc_406038  +
mov ebp ecx +
mov ebx 7 +
xor ebp 100h +
or ebp edx +
jz loc_405DB2  +
jmp loc_405D00  +
xor bh 8 +
or ebx edx +
jz loc_405FE0  +
lea ebx [ecx-80000000h] +
or ebx edx +
jz loc_405FD6  +
mov ebx ecx +
xor bh 4 +
or ebx edx +
jnz loc_405D00  +
mov ebx 9 +
jmp loc_405DB2  +
xor bh 8 +
or ebx edx +
jz loc_406058  +
lea ebx [ecx-80000000h] +
or ebx edx +
jz loc_406050  +
mov ebx ecx +
xor bh 4 +
or ebx edx +
jz loc_406028  +
movzx ebx ds:word_471D92 +
lea ebp [ebx-0B4h] +
cmp bp 1 +
ja loc_4061B0  +
mov ebx [esp+68h+var_50] +
xor ebx 10000000h +
or ebx edx +
jz loc_4062DE  +
test [esp+68h+var_50] 0FF00000h +
jz loc_4061C8  +
mov ecx esi +
and ecx 0F00FFFFFh +
mov byte ptr [eax] 6Fh +
mov esi ecx +
jmp loc_405E53  +
mov ecx [esp+68h+var_50] +
mov ebx ecx +
xor ebx 10h +
or ebx edx +
jz loc_406020  +
mov ebx ecx +
xor ebx 20h +
or ebx edx +
jnz loc_405F46  +
mov byte ptr [eax] 53h +
jmp loc_405E53  +
mov ecx [esp+68h+var_50] +
mov ebx ecx +
xor ebx 10h +
or ebx edx +
jz loc_405FF0  +
mov ebp ecx +
mov ebx 4 +
xor ebp 20h +
or ebp edx +
jz loc_405DB2  +
jmp loc_405D00  +
mov ebx 12h +
jmp loc_405DB2  +
mov ebx 14h +
jmp loc_405DB2  +
mov ebx 3 +
jmp loc_405DB2  +
mov byte ptr [eax] 49h +
jmp loc_405E53  +
mov ebx 5 +
jmp loc_405DB2  +
mov ebx 2 +
jmp loc_405DB2  +
mov byte ptr [eax] 4Dh +
jmp loc_405E53  +
mov byte ptr [eax] 54h +
jmp loc_405E53  +
mov byte ptr [eax] 58h +
jmp loc_405E53  +
mov ebx 6 +
jmp loc_405DB2  +
mov ebx 8 +
jmp loc_405DB2  +
mov byte ptr [eax] 45h +
jmp loc_405E53  +
mov byte ptr [eax] 43h +
jmp loc_405E53  +
mov byte ptr [eax] 47h +
jmp loc_405E53  +
mov byte ptr [eax] 4Ch +
jmp loc_405E53  +
mov edi [esp+68h+var_2C] +
or edi [esp+68h+var_30] +
jz loc_4060D8  +
mov edx [esp+68h+var_44] +
mov ecx [esp+68h+var_38] +
sub edx [esp+68h+var_34] +
lea edi [edx-5] +
lea edx dword_471324[ecx] +
cmp ebx edx +
mov [esp+68h+var_44] edi +
jz loc_4060B0  +
cmp edi 2 +
jle loc_406220  +
sub [esp+68h+var_44] 2 +
add ebx 2 +
mov byte ptr [ebx-2] 2Ch +
mov byte ptr [eax+1] 20h +
mov edi [esp+68h+var_34] +
mov eax [esp+68h+var_30] +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] offset aOs_Lx +
mov [esp+68h+var_5C] edi +
lea ebx [ebx+edi+5] +
mov [esp+68h+var_58] eax +
mov [esp+68h+var_60] edi +
call sprintf  +
mov eax [esp+68h+var_20] +
or eax [esp+68h+var_28] +
jz loc_406144  +
mov eax [esp+68h+var_44] +
sub eax [esp+68h+var_34] +
sub eax 7 +
mov edi eax +
mov [esp+68h+var_44] eax +
mov eax [esp+68h+var_38] +
add eax offset dword_471324 +
cmp ebx eax +
jz loc_406377  +
cmp edi 2 +
jle loc_406220  +
sub [esp+68h+var_44] 2 +
lea esi [ebx+2] +
mov byte ptr [ebx] 2Ch +
mov byte ptr [ebx+1] 20h +
mov edi [esp+68h+var_34] +
mov eax [esp+68h+var_28] +
mov [esp+68h+var_64] offset aProc_Lx +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_5C] edi +
lea ebx [esi+edi+7] +
mov [esp+68h+var_58] eax +
mov [esp+68h+var_60] edi +
call sprintf  +
mov eax [esp+68h+var_1C] +
or eax [esp+68h+var_24] +
jz loc_405D9E  +
mov eax [esp+68h+var_44] +
sub eax [esp+68h+var_34] +
lea edx [eax-0Ah] +
mov eax [esp+68h+var_38] +
add eax offset dword_471324 +
cmp ebx eax +
jz loc_40637E  +
cmp edx 2 +
jle loc_406220  +
mov byte ptr [ebx] 2Ch +
lea esi [ebx+2] +
mov byte ptr [ebx+1] 20h +
mov edi [esp+68h+var_34] +
mov eax [esp+68h+var_24] +
mov [esp+68h+var_64] offset aUnknown_Lx +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_5C] edi +
lea ebx [esi+edi+0Ah] +
mov [esp+68h+var_58] eax +
mov [esp+68h+var_60] edi +
call sprintf  +
jmp loc_405D9E  +
cmp bx 3Eh +
jz loc_405F5D  +
test [esp+68h+var_50] 0FF00000h +
jnz loc_405F7D  +
test [esp+68h+var_50] 0F0000000h +
jz loc_4062CC  +
mov edx esi +
xor edi edi +
and edx 0FFFFFFFh +
mov byte ptr [eax] 70h +
mov esi edx +
jmp loc_405E53  +
test [esp+68h+var_50] 0F0000000h +
mov ecx [esp+68h+var_50] +
jz loc_406210  +
or [esp+68h+var_28] ecx +
or [esp+68h+var_20] edx +
jmp loc_405DF4  +
or [esp+68h+var_24] ecx +
or [esp+68h+var_1C] edx +
jmp loc_405DF4  +
mov [esp+68h+var_68] offset aInternalErrorN +
call sub_437070  +
add esp 5Ch +
mov eax offset aUnknown_2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+68h+var_34] +
mov [esp+68h+var_58] edx +
mov [esp+68h+var_64] offset a_Lx +
mov [esp+68h+var_68] offset unk_471320 +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_60] eax +
mov [esp+68h+var_50] edx +
mov [esp+68h+var_4C] ecx +
call sprintf  +
mov eax [esp+68h+var_38] +
mov ecx [esp+68h+var_4C] +
mov edx [esp+68h+var_50] +
lea ebx dword_471324[eax] +
mov eax ds:dword_471D20 +
mov [esp+68h+var_40] eax +
mov eax ecx +
or eax edx +
jnz loc_405C26  +
jmp loc_405D9E  +
cmp bx 6 +
jz loc_4062B0  +
lea esi [esi+0] +
ja loc_4062F7  +
sub ebx 2 +
cmp bx 1 +
ja loc_405D68  +
nop   +
mov ebx [esp+68h+var_50] +
xor ebx 40000000h +
or ebx edx +
jnz loc_405D68  +
mov ebx 13h +
jmp loc_405DB2  +
mov byte ptr [eax] 78h +
jmp loc_405E53  +
mov ebx 0Ah +
jmp loc_405DB2  +
mov byte ptr [eax] 6Ch +
jmp loc_405E53  +
sub bx 0B4h +
cmp bx 1 +
ja loc_405D68  +
jmp loc_4062B0  +
cmp bx 0Bh +
jnz loc_405D68  +
jmp loc_4062B0  +
mov ebx edx +
xor ebx 4 +
or ebx ecx +
jz loc_406385  +
cmp edx 4 +
ja loc_40634A  +
jb loc_406318  +
cmp ecx 0 +
ja loc_40634A  +
mov ecx [esp+68h+var_50] +
mov ebx edx +
xor ebx 1 +
or ebx ecx +
jz loc_40638F  +
mov ebp edx +
mov ebx 0Dh +
xor ebp 2 +
or ebp ecx +
jz loc_405DB2  +
jmp loc_405D68  +
mov ebx 0Bh +
jmp loc_405DB2  +
mov ecx [esp+68h+var_50] +
mov ebx edx +
xor ebx 10h +
or ebx ecx +
jz loc_4063A3  +
mov ebx edx +
xor ebx 20h +
or ebx ecx +
jz loc_406399  +
mov ebx edx +
xor ebx 8 +
or ebx ecx +
jnz loc_405D68  +
mov ebx 0Fh +
jmp loc_405DB2  +
mov esi ebx +
jmp loc_40611C  +
mov esi ebx +
jmp loc_406181  +
mov ebx 0Eh +
jmp loc_405DB2  +
mov ebx 0Ch +
jmp loc_405DB2  +
mov ebx 11h +
jmp loc_405DB2  +
mov ebx 10h +
jmp loc_405DB2  +
***
sub esp 34h +
add eax 0B414C000h +
adc edx 0FF836A98h +
mov [esp+34h+var_2C] 989680h +
mov [esp+34h+var_28] 0 +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_30] edx +
call sub_43F990  +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_8] +
mov [esp+34h+var_34] eax +
call gmtime  +
mov ebx [eax+4] +
mov ecx [eax+8] +
mov edx [eax+0Ch] +
mov esi [eax] +
mov [esp+34h+var_20] ebx +
mov [esp+34h+var_24] ecx +
mov [esp+34h+var_28] edx +
mov [esp+34h+var_1C] esi +
mov ecx [eax+10h] +
lea edx [ecx+1] +
mov [esp+34h+var_2C] edx +
mov eax [eax+14h] +
mov [esp+34h+var_34] offset a04u02u02ut02u0 +
add eax 76Ch +
mov [esp+34h+var_30] eax +
call printf  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
test eax eax +
jnz loc_406449  +
jmp loc_40646E  +
sub esi 1 +
shr ebx 1 +
jz loc_40646E  +
test bl 1 +
jz loc_406442  +
mov eax ds:_iob +
add eax 20h +
mov [esp+18h+var_14] eax +
mov eax ds:off_462580[esi*4] +
mov [esp+18h+var_18] eax +
call fputs  +
cmp ebx 1 +
jnz loc_406474  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:_iob +
mov [esp+18h+var_10] 2 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset asc_446522 +
add eax 20h +
mov [esp+18h+var_C] eax +
call fwrite  +
jmp loc_406442  +
***
sub esp 18h +
test eax eax +
jz loc_4064D0  +
test al 1 +
jnz loc_4064F0  +
test al 2 +
jnz loc_40656A  +
test bl 4 +
mov eax 1 +
jz loc_406529  +
mov eax offset unk_44640B +
jmp loc_4065A9  +
mov eax ds:_iob +
mov [esp+18h+var_18] 30h +
add eax 20h +
mov [esp+18h+var_14] eax +
call fputc  +
add esp 18h +
pop ebx  +
retn   +
mov eax ds:_iob +
mov [esp+18h+var_10] 4 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aInex +
add eax 20h +
mov [esp+18h+var_C] eax +
call fwrite  +
test bl 2 +
mov eax offset asc_446525 +
jnz loc_406570  +
xor eax eax +
test bl 4 +
jnz loc_4065A4  +
test bl 8 +
jz loc_406590  +
test eax eax +
jz loc_4065BE  +
mov eax offset unk_44640B +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aSdiv0 +
call printf  +
and ebx 10h +
jz loc_4064E8  +
mov eax offset asc_446525 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aSinval +
call printf  +
add esp 18h +
pop ebx  +
retn   +
mov eax offset unk_44640B +
nop   +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aSuflo +
call printf  +
test bl 4 +
jnz loc_4065A4  +
xor eax eax +
test bl 8 +
jnz loc_4065BE  +
lea esi [esi+0] +
and ebx 10h +
jz loc_4064E8  +
test eax eax +
jz loc_406550  +
mov eax offset unk_44640B +
jmp loc_406555  +
mov eax offset asc_446525 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aSoflo +
call printf  +
test bl 8 +
jz loc_40654B  +
mov eax offset asc_446525 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aSdiv0 +
call printf  +
jmp loc_40654B  +
***
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 20h +
test eax eax +
jle loc_406600  +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] offset aTag_unknown_D +
call printf  +
cmp ebx esi +
jnb loc_4066A3  +
and edi 1 +
jnz loc_406670  +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_1C] esi +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_24] eax +
call sub_427E10  +
mov [esp+28h+var_28] offset aLd0xLx +
add ebx [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] eax +
call printf  +
cmp ebx esi +
jbe loc_406661  +
mov [esp+28h+var_20] 31AAh +
mov [esp+28h+var_24] offset a____Binutils_0 +
mov [esp+28h+var_28] offset aPEnd +
call sub_440120  +
add esp 20h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi esi +
sub edi ebx +
sub edi 1 +
mov [esp+28h+var_28] 22h +
call putchar  +
test edi edi +
jnz loc_4066B1  +
mov [esp+28h+var_28] offset aCorruptStringT +
mov ebx esi +
call printf  +
mov [esp+28h+var_28] offset asc_446580 +
call puts  +
jmp loc_406641  +
mov [esp+28h+var_28] offset aCorruptTag +
call sub_437070  +
jmp loc_406641  +
mov edx ebx +
mov eax edi +
call sub_405A30  +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_24] edi +
call sub_4401F0  +
lea ebx [ebx+eax+1] +
jmp loc_406695  +
***
push esi  +
push esi  +
sub esp 24h +
mov ebx [esp+24h+arg_4] +
mov esi [esp+24h+arg_0] +
mov ecx [esp+24h+arg_8] +
cmp ebx 4 +
jz loc_407364  +
cmp ebx 8 +
jz loc_4073C5  +
cmp ebx 0Ch +
jz loc_4072F0  +
mov eax ebx +
mov edx esi +
and eax 1 +
call sub_4065E0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
cmp esi ecx +
jz loc_407491  +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_18] ecx +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] eax +
call sub_427E10  +
mov [esp+24h+var_24] offset aTag_gnu_power_ +
add esi [esp+24h+var_8] +
mov ebx eax +
call printf  +
cmp ebx 1 +
jz loc_407437  +
cmp ebx 2 +
jz loc_407354  +
test ebx ebx +
jz loc_407423  +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] offset a???D +
call printf  +
add esp 24h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_24] offset aMemory +
call puts  +
mov eax esi +
jmp loc_4072E4  +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_18] ecx +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] eax +
call sub_427E10  +
mov [esp+24h+var_24] offset aTag_gnu_powe_0 +
add esi [esp+24h+var_8] +
mov ebx eax +
call printf  +
cmp ebx 1 +
jz loc_4074A4  +
jle loc_407476  +
cmp ebx 2 +
jz loc_407450  +
cmp ebx 3 +
lea esi [esi+0] +
jnz loc_40733C  +
mov [esp+24h+var_24] offset aSinglePrecisio +
call puts  +
mov eax esi +
jmp loc_4072E4  +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_18] ecx +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] eax +
call sub_427E10  +
mov [esp+24h+var_24] offset aTag_gnu_powe_1 +
add esi [esp+24h+var_8] +
mov ebx eax +
call printf  +
cmp ebx 1 +
jz loc_4074B7  +
jle loc_407334  +
cmp ebx 2 +
jz loc_407463  +
cmp ebx 3 +
jnz loc_40733C  +
mov [esp+24h+var_24] offset off_4469A4 +
call puts  +
mov eax esi +
jmp loc_4072E4  +
mov [esp+24h+var_24] offset aAny +
call puts  +
add esp 24h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_24] offset aR3R4 +
call puts  +
mov eax esi +
jmp loc_4072E4  +
mov [esp+24h+var_24] offset aSoftFloat +
call puts  +
mov eax esi +
jmp loc_4072E4  +
mov [esp+24h+var_24] offset aAltivec +
call puts  +
mov eax esi +
jmp loc_4072E4  +
test ebx ebx +
jnz loc_40733C  +
mov [esp+24h+var_24] offset aHardOrSoftFloa +
call puts  +
mov eax esi +
jmp loc_4072E4  +
mov [esp+24h+var_24] offset aCorruptTag_gnu +
call sub_437070  +
mov eax esi +
jmp loc_4072E4  +
mov [esp+24h+var_24] offset aHardFloat +
call puts  +
mov eax esi +
jmp loc_4072E4  +
mov [esp+24h+var_24] offset aGeneric +
call puts  +
mov eax esi +
jmp loc_4072E4  +
***
mov dword ptr [esp+0] offset aTag_abi_confor +
mov [esp+arg_0] edi +
mov [esp+arg_0] edi +
mov [esp+arg_0] edi +
mov [esp+arg_0] edi +
mov [esp+arg_0] edi +
mov [esp+arg_0] edi +
mov [esp+0] esi +
mov [esp+arg_8] ebx +
mov [esp+arg_4] 0 +
call sub_427E10  +
mov dword ptr [esp+0] offset aTag_abi_pid +
add esi [esp+arg_18] +
mov edi eax +
call printf  +
cmp edi 1 +
jz loc_4079B3  +
cmp edi 2 +
jz loc_4078B3  +
test edi edi +
jnz loc_4077A0  +
mov dword ptr [esp+0] offset aDataAddressing +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov [esp+arg_0] edi +
mov [esp+0] esi +
mov [esp+arg_8] ebx +
mov [esp+arg_4] 0 +
call sub_427E10  +
mov dword ptr [esp+0] offset aTag_abi_pic +
add esi [esp+arg_18] +
mov edi eax +
call printf  +
test edi edi +
jz loc_407986  +
cmp edi 1 +
jnz loc_4077A0  +
mov dword ptr [esp+0] offset aCodeAddressing +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov [esp+arg_0] edi +
mov [esp+0] esi +
mov [esp+arg_8] ebx +
mov [esp+arg_4] 0 +
call sub_427E10  +
mov dword ptr [esp+0] offset aTag_abi_array_ +
add esi [esp+arg_18] +
mov edi eax +
call printf  +
cmp edi 1 +
jz loc_4077EF  +
cmp edi 2 +
jz loc_40760D  +
test edi edi +
jz loc_407655  +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset a???D +
call printf  +
add esp 20h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp+arg_0] edi +
mov [esp+arg_0] edi +
mov ecx ebx +
mov edx esi +
call sub_4065E0  +
jmp loc_407620  +
***
sub ebx esi +
mov edx esi +
sub ebx 1 +
mov eax ebx +
call sub_405A30  +
mov [esp+arg_0] ebx +
mov [esp+0] esi +
call sub_4401F0  +
lea ebx [esi+eax+1] +
jmp loc_407534  +
***
sub ebx esi +
mov edx esi +
sub ebx 1 +
mov eax ebx +
call sub_405A30  +
mov [esp+arg_0] ebx +
mov [esp+0] esi +
call sub_4401F0  +
lea ebx [esi+eax+1] +
jmp loc_40784F  +
***
mov dword ptr [esp+0] offset aDataAddressi_0 +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset a4Bytes_0 +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset aC674x +
mov dword ptr [esp+0] offset aC64x +
mov dword ptr [esp+0] offset aNone_4 +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset aC64x_0 +
mov dword ptr [esp+0] offset aC67x +
mov dword ptr [esp+0] offset aC67x_0 +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset aC62x +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset aDsbtAddressi_0 +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset aCodeAddressi_0 +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset a2Bytes +
call puts  +
mov eax esi +
jmp loc_407620  +
***
mov dword ptr [esp+0] offset aDataAddressi_1 +
call puts  +
mov eax esi +
jmp loc_407620  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
lea ebp [esp+2Ch+var_10] +
mov ebx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_20] ebx +
call sub_427E10  +
add edi [esp+2Ch+var_10] +
cmp eax 6 +
mov esi eax +
jz loc_407B60  +
cmp eax 8 +
jz loc_407AC6  +
cmp eax 4 +
jz loc_407A80  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] offset aUnknownTagD_0 +
call printf  +
and esi 1 +
jz loc_407BB0  +
mov [esp+2Ch+var_2C] 22h +
call putchar  +
lea eax [ebx-1] +
cmp edi eax +
jnb loc_407C07  +
mov esi ebx +
mov edx edi +
sub esi edi +
sub esi 1 +
mov eax esi +
call sub_405A30  +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] esi +
call sub_4401F0  +
lea edi [edi+eax+1] +
mov [esp+2Ch+var_2C] offset asc_446580 +
call puts  +
jmp loc_407B34  +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
call sub_427E10  +
mov [esp+2Ch+var_2C] offset aTag_isa +
add edi [esp+2Ch+var_10] +
mov esi eax +
call printf  +
cmp esi 1 +
jz loc_407BF6  +
cmp esi 2 +
jnz loc_407B20  +
mov [esp+2Ch+var_2C] offset aMsp430x +
call puts  +
jmp loc_407B34  +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
call sub_427E10  +
mov [esp+2Ch+var_2C] offset aTag_data_model +
add edi [esp+2Ch+var_10] +
mov esi eax +
call printf  +
cmp esi 1 +
jz loc_407BE5  +
jle loc_407B20  +
cmp esi 2 +
nop   +
jz loc_407B94  +
cmp esi 3 +
jnz loc_407B24  +
mov [esp+2Ch+var_2C] offset aRestrictedLarg +
call puts  +
jmp loc_407B34  +
test esi esi +
jz loc_407BA2  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset a???D +
call printf  +
cmp edi ebx +
jbe loc_407B54  +
mov [esp+2Ch+var_24] 35ABh +
mov [esp+2Ch+var_28] offset a____Binutils_0 +
mov [esp+2Ch+var_2C] offset aPEnd +
call sub_440120  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
call sub_427E10  +
mov [esp+2Ch+var_2C] offset aTag_code_model +
add edi [esp+2Ch+var_10] +
mov esi eax +
call printf  +
cmp esi 1 +
jz loc_407BE5  +
cmp esi 2 +
jnz loc_407B20  +
mov [esp+2Ch+var_2C] offset aLarge +
call puts  +
jmp loc_407B34  +
mov [esp+2Ch+var_2C] offset aNone_4 +
call puts  +
jmp loc_407B34  +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
call sub_427E10  +
mov [esp+2Ch+var_2C] offset aD0xX +
add edi [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] eax +
call printf  +
jmp loc_407B34  +
mov [esp+2Ch+var_2C] offset aSmall +
call puts  +
jmp loc_407B34  +
mov [esp+2Ch+var_2C] offset aMsp430 +
call puts  +
jmp loc_407B34  +
mov [esp+2Ch+var_2C] offset aCorrupt +
mov edi ebx +
call printf  +
jmp loc_407A68  +
***
movzx edx ds:word_471D92 +
cmp dx 8 +
jz loc_407C38  +
movzx ecx al +
cmp dx 2Bh +
cmovz eax ecx +
retn   +
movzx eax al +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax ds:dword_471CF0 +
mov [esp+18h+var_14] 4 +
mov [esp+18h+var_18] edx +
test eax eax +
jnz loc_407CA4  +
call ds:dword_472C94  +
mov [esp+18h+var_14] 8 +
mov [ebx] eax +
lea eax [esi+8] +
add esi 10h +
mov [esp+18h+var_18] eax +
call ds:dword_472C94  +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_14] 8 +
mov [ebx+8] eax +
mov [ebx+0Ch] edx +
call ds:dword_472C94  +
mov [ebx+10h] eax +
mov eax 18h +
mov [ebx+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call ds:dword_472C94  +
mov [esp+18h+var_14] 4 +
mov [ebx] eax +
lea eax [esi+4] +
add esi 8 +
mov [esp+18h+var_18] eax +
call ds:dword_472C94  +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_14] 4 +
mov [ebx+8] eax +
mov [ebx+0Ch] edx +
call ds:dword_472C94  +
mov [ebx+10h] eax +
mov eax 0Ch +
mov [ebx+14h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
movzx ebp ds:word_471D92 +
mov ebx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_C] +
mov [esp+2Ch+var_8] ecx +
cmp bp 28h +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] esi +
jz loc_407E50  +
shl edx 5 +
lea esi [eax+edx] +
cmp eax esi +
jnb loc_407E61  +
movzx ebx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_C] 0 +
mov [esp+2Ch+var_10] 100000h +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] ebx +
mov [esp+2Ch+var_1E] bp +
jmp loc_407D62  +
jb loc_407D58  +
cmp ecx [esp+2Ch+var_2C] +
ja loc_407DAA  +
lea eax [edx+20h] +
cmp eax esi +
lea esi [esi+0] +
jnb loc_407DB0  +
mov edx esi +
sub edx eax +
sar edx 5 +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
shl edx 5 +
add edx eax +
cmp [esp+2Ch+var_1E] 28h +
mov ecx [edx] +
mov ebx [edx+4] +
jz loc_407E40  +
mov edi [edx+10h] +
test edi edi +
mov [esp+2Ch+var_1C] edi +
jz loc_407DA4  +
cmp [esp+2Ch+arg_4] 0 +
jz loc_407DF0  +
mov edi [esp+2Ch+var_14] +
cmp edi [edx+18h] +
jz loc_407DF0  +
cmp ebx [esp+2Ch+var_28] +
jbe loc_407D51  +
mov esi edx +
cmp eax esi +
jb loc_407D62  +
mov eax [esp+2Ch+var_C] +
test eax eax +
jz loc_407E61  +
mov edi [eax+10h] +
mov edx [esp+2Ch+var_8] +
mov eax offset aCorrupt +
mov ebx [esp+2Ch+arg_10] +
add edx edi +
cmp [esp+2Ch+arg_0] edi +
cmova eax edx +
mov [ebx] eax +
mov eax [esp+2Ch+arg_14] +
mov ebx [esp+2Ch+var_10] +
mov [eax] ebx +
mov ebx [esp+2Ch+var_18] +
mov [eax+4] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx [esp+2Ch+var_28] +
ja loc_407DAA  +
jb loc_407DFD  +
cmp ecx [esp+2Ch+var_2C] +
ja loc_407DAA  +
mov edi [esp+2Ch+var_2C] +
mov ebp [esp+2Ch+var_28] +
sub edi ecx +
sbb ebp ebx +
mov ecx edi +
cmp ebp [esp+2Ch+var_18] +
mov ebx ebp +
ja loc_407D58  +
jb loc_407E22  +
cmp edi [esp+2Ch+var_10] +
jnb loc_407D58  +
mov eax ebx +
or eax ecx +
jz loc_407E83  +
mov [esp+2Ch+var_C] edx +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_18] ebx +
jmp loc_407D58  +
mov edi ecx +
and edi 0FFFFFFFEh +
mov ebp edi +
mov ecx ebp +
jmp loc_407D88  +
mov edi esi +
and ebx 0FFFFFFFEh +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] edi +
jmp loc_407D1B  +
mov eax [esp+2Ch+arg_10] +
mov ebx [esp+2Ch+arg_14] +
mov edx [esp+2Ch+var_28] +
mov dword ptr [eax] 0 +
mov eax [esp+2Ch+var_2C] +
mov [ebx+4] edx +
mov [ebx] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_18] ebx +
jmp loc_407DBF  +
***
sub esp 18h +
test eax eax +
jz loc_407EB2  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx] +
test eax eax +
jz loc_407EC0  +
mov [esp+18h+var_18] eax +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
cmp eax 9 +
mov edx eax +
ja loc_407F70  +
jmp ds:off_446EA8[eax*4]  +
mov eax offset aObject +
add esp 1Ch +
retn   +
mov eax offset aFunc +
add esp 1Ch +
retn   +
mov eax offset aSection +
add esp 1Ch +
retn   +
mov eax offset aFile +
add esp 1Ch +
retn   +
mov eax offset aCommon +
add esp 1Ch +
retn   +
mov eax offset aTls +
add esp 1Ch +
retn   +
mov eax offset aRelc +
add esp 1Ch +
retn   +
mov eax offset aSrelc +
add esp 1Ch +
retn   +
mov eax offset aNotype +
add esp 1Ch +
retn   +
lea eax [edx-0Dh] +
cmp eax 2 +
ja loc_407FD1  +
movzx eax ds:word_471D92 +
cmp ax 28h +
jz loc_408070  +
cmp ax 2Bh +
jz loc_408083  +
cmp ax 0Fh +
jnz loc_407FA7  +
cmp edx 0Dh +
mov eax offset aParisc_milli +
jz loc_407EEA  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aProcessorSpeci +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471C00 +
call sub_402590  +
mov eax offset unk_471C00 +
jmp loc_407EEA  +
lea eax [edx-0Ah] +
cmp eax 2 +
ja loc_408040  +
cmp ds:word_471D92 0Fh +
jz loc_408096  +
cmp edx 0Ah +
jnz loc_408012  +
movzx ecx ds:byte_471D67 +
mov eax offset aIfunc +
cmp cl 3 +
jz loc_407EEA  +
cmp cl 9 +
jz loc_407EEA  +
test cl cl +
jz loc_407EEA  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aOsSpecificD +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471C00 +
call sub_402590  +
mov eax offset unk_471C00 +
jmp loc_407EEA  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aUnknownD +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471C00 +
call sub_402590  +
mov eax offset unk_471C00 +
jmp loc_407EEA  +
cmp edx 0Dh +
jnz loc_407FA7  +
mov eax offset aThumb_func +
jmp loc_407EEA  +
cmp edx 0Dh +
jnz loc_407FA7  +
mov eax offset aRegister +
jmp loc_407EEA  +
cmp edx 0Bh +
jz loc_4080AE  +
cmp edx 0Ch +
jnz loc_407FE7  +
mov eax offset aHp_stub +
jmp loc_407EEA  +
mov eax offset aHp_opaque +
jmp loc_407EEA  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_3C] edx +
mov [esp+5Ch+var_38] ecx +
mov [esp+5Ch+var_34] eax +
mov eax [esp+5Ch+arg_8] +
test eax eax +
jz loc_4080F5  +
mov eax [esp+5Ch+arg_8] +
mov dword ptr [eax] 0 +
mov eax [esp+5Ch+arg_C] +
mov dword ptr [eax] 0 +
cmp ds:word_471D90 1 +
jz loc_408107  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_471DA4 +
mov edi ds:dword_471D4C +
lea eax [esi+esi*8] +
lea eax [edi+eax*8] +
cmp edi eax +
jnb loc_4080FF  +
mov [esp+5Ch+var_30] ebx +
mov ebx [esp+5Ch+var_3C] +
mov ebp edi +
mov [esp+5Ch+var_40] ebx +
jmp loc_408137  +
add ebp 48h +
cmp ebp eax +
jnb loc_4080FF  +
mov edx [ebp+4] +
cmp edx 9 +
jz loc_408144  +
cmp edx 4 +
jnz loc_408130  +
mov ecx [ebp+2Ch] +
cmp ecx esi +
jnb loc_408130  +
lea ecx [ecx+ecx*8] +
lea ecx [edi+ecx*8] +
cmp [esp+5Ch+var_40] ecx +
jnz loc_408130  +
mov ecx [ebp+20h] +
mov ebx ecx +
or ebx [ebp+24h] +
jz loc_408130  +
cmp [ebp+28h] esi +
jnb loc_408130  +
xor eax eax +
mov ebx [esp+5Ch+var_30] +
cmp edx 4 +
setz al  +
mov edx [ebp+18h] +
mov [esp+5Ch+var_2C] eax +
lea eax [esp+5Ch+var_18] +
mov [esp+5Ch+var_58] eax +
lea eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_5C] eax +
mov eax ebx +
jz loc_40826C  +
call sub_404040  +
test eax eax +
jz loc_4080FF  +
cmp ds:word_471D92 2Ah +
mov eax 0 +
cmovnz eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_2C] eax +
mov eax [ebp+28h] +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea edx [eax+edx*8] +
mov eax ds:dword_471CF0 +
test eax eax +
jz loc_408A04  +
lea ecx [esp+5Ch+var_10] +
mov eax ebx +
call sub_4042C0  +
mov [esp+5Ch+var_30] eax +
mov eax [esp+5Ch+var_14] +
mov ecx [esp+5Ch+var_18] +
mov ebx [esp+5Ch+var_34] +
add ebx [esp+5Ch+var_38] +
mov edi eax +
mov [esp+5Ch+var_40] eax +
lea eax [ecx+ecx*2] +
lea eax [edi+eax*8] +
cmp edi eax +
mov [esp+5Ch+var_28] ebx +
jnb loc_40833B  +
mov [esp+5Ch+var_24] ebp +
mov ebp edi +
mov edi ecx +
lea esi [esi+0] +
mov eax ds:dword_471CF0 +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
test eax eax +
mov [esp+5Ch+var_34] eax +
movzx ecx bl +
jnz loc_408231  +
mov eax ebx +
mov edx esi +
call sub_407C20  +
mov ecx eax +
movzx eax ds:word_471D92 +
cmp ax 0C5h +
jz loc_4086B8  +
ja loc_408600  +
cmp ax 59h +
jz loc_408614  +
cmp ax 69h +
jnz loc_408550  +
cmp ecx 15h +
ja loc_4085D0  +
jmp ds:off_447098[ecx*4]  +
lea esi [esi+0] +
call sub_4050F0  +
test eax eax +
jnz loc_40819D  +
lea esi [esi+0] +
jmp loc_4080FF  +
cmp ax 69h +
jnz loc_4082A5  +
cmp byte ptr ds:dword_471D8C 2Dh +
jz loc_4083A9  +
cmp ds:byte_471D67 0 +
jz loc_4083A9  +
mov edi ds:dword_471CC4 +
test edi edi +
mov [esp+5Ch+var_40] edi +
jz loc_408550  +
mov edi [esp+5Ch+var_34] +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
test edi edi +
jz loc_4082CB  +
shrd ebx esi +
mov esi ebx +
mov edi [esp+5Ch+var_30] +
mov ebx esi +
shl ebx 5 +
add eax [edi+ebx] +
adc edx [edi+ebx+4] +
mov esi eax +
mov eax [esp+5Ch+var_40] +
mov edi edx +
sub esi [eax] +
sbb edi [eax+4] +
xor eax eax +
cmp ecx 1 +
setz al  +
lea eax [eax+eax+2] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_58] esi +
add eax [ebp+0] +
mov [esp+5Ch+var_5C] eax +
call ds:dword_472C98  +
mov eax [esp+5Ch+var_14] +
mov edi [esp+5Ch+var_18] +
mov ds:dword_471CC4 0 +
mov [esp+5Ch+var_40] eax +
mov ebx [esp+5Ch+var_40] +
lea eax [edi+edi*2] +
add ebp 18h +
lea eax [ebx+eax*8] +
cmp ebp eax +
jb loc_408210  +
mov eax [esp+5Ch+var_30] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov edi [esp+5Ch+arg_8] +
test edi edi +
jz loc_408DC0  +
mov eax [esp+5Ch+var_14] +
mov ebx [esp+5Ch+arg_8] +
mov [ebx] eax +
mov eax [esp+5Ch+var_18] +
mov ebx [esp+5Ch+arg_C] +
mov [ebx] eax +
jmp loc_4080FF  +
mov edx esi +
mov esi [esp+5Ch+var_34] +
mov eax ebx +
test esi esi +
jz loc_408A31  +
shrd eax edx +
mov ebx eax +
shl ebx 5 +
add ebx [esp+5Ch+var_30] +
mov ds:dword_471CC4 ebx +
jmp loc_408326  +
cmp ax 69h +
jnz loc_40836C  +
cmp byte ptr ds:dword_471D8C 2Dh +
jz loc_4083A9  +
cmp ds:byte_471D67 0 +
jnz loc_40836C  +
xor edx edx +
cmp ecx 1 +
setz dl  +
test edx edx +
jnz loc_40872E  +
mov eax ecx +
mov [esp+5Ch+var_40] ecx +
call sub_402160  +
mov ecx [esp+5Ch+var_40] +
test eax eax +
jnz loc_40872E  +
movzx ebx ds:word_471D92 +
cmp bx 32h +
jz loc_409046  +
ja loc_408BB7  +
cmp bx 12h +
jz loc_408FBC  +
ja loc_408DE9  +
cmp bx 8 +
jz loc_408FE7  +
xor eax eax +
cmp ecx 50h +
setz al  +
cmp bx 0Fh +
jnz loc_408AB7  +
test eax eax +
mov [esp+5Ch+var_40] 8 +
jz loc_408AC1  +
mov edi [esp+5Ch+var_38] +
mov ebx [ebp+0] +
mov eax [esp+5Ch+var_40] +
add ebx edi +
add eax ebx +
cmp [esp+5Ch+var_28] eax +
jb loc_408772  +
cmp edi ebx +
ja loc_408772  +
mov eax ds:dword_471CF0 +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
test eax eax +
jz loc_408A49  +
shrd esi edi +
cmp esi [esp+5Ch+var_10] +
mov eax esi +
jnb loc_408BF6  +
mov esi [esp+5Ch+var_30] +
shl eax 5 +
add eax esi +
cmp esi eax +
mov [esp+5Ch+var_34] eax +
jz loc_408488  +
movzx eax byte ptr [eax+14h] +
and eax 0Fh +
cmp eax 3 +
jg loc_408D44  +
mov eax [esp+5Ch+var_2C] +
test eax eax +
jz loc_408C24  +
movzx eax ds:word_471D92 +
mov esi [ebp+10h] +
mov edi [ebp+14h] +
cmp ax 5Eh +
jz loc_408F45  +
cmp ax 63h +
jnz loc_408F30  +
cmp ecx 1 +
jz loc_408C28  +
cmp ax 7676h +
jnz loc_408F97  +
cmp ecx 0Ch +
jz loc_408C28  +
mov eax ecx +
mov [esp+5Ch+var_20] ecx +
call sub_402160  +
mov ecx [esp+5Ch+var_20] +
test eax eax +
jnz loc_4084F3  +
mov eax ecx +
call sub_402360  +
test eax eax +
jz loc_408FA6  +
cmp ds:word_471D92 0Fh +
jz loc_408DD1  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_34] +
add esi [eax] +
adc edi [eax+4] +
sub esi [ebp+0] +
sbb edi [ebp+4] +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_5C] ebx +
call ds:dword_472C98  +
lea esi [esi+0] +
mov eax [esp+5Ch+var_14] +
mov edi [esp+5Ch+var_18] +
mov [esp+5Ch+var_40] eax +
jmp loc_408326  +
cmp ax 69h +
jz loc_408CC0  +
nop   +
lea esi [esi+0] +
cmp ax 5Eh +
jz loc_4087D0  +
jbe loc_408962  +
cmp ax 0BFh +
jz loc_408916  +
lea esi [esi+0] +
ja loc_4087A3  +
cmp ax 0AEh +
jz loc_408958  +
ja loc_408930  +
cmp ax 74h +
jz loc_408916  +
jbe loc_4091E4  +
cmp ax 8Ch +
jz loc_408916  +
cmp ax 0A7h +
jnz loc_4087E4  +
lea eax [ecx-0CCh] +
cmp eax 3 +
jbe loc_408530  +
test ecx ecx +
jz loc_408530  +
xor edx edx +
cmp ecx 14h +
setz dl  +
jmp loc_4083B1  +
mov edi ds:dword_471CC4 +
test edi edi +
jz loc_408550  +
mov [esp+5Ch+var_5C] offset aUnhandledMsp43 +
mov [esp+5Ch+var_40] ecx +
call sub_436A70  +
movzx eax ds:word_471D92 +
mov ecx [esp+5Ch+var_40] +
jmp loc_408550  +
cmp ax 1059h +
jz loc_40825C  +
cmp ax 0BEEFh +
jnz loc_408550  +
cmp ecx 21h +
jz loc_408983  +
lea esi [esi+0] +
ja loc_40873B  +
lea edx [ecx-1] +
cmp edx 1 +
ja loc_408744  +
mov edi ds:dword_471CC0 +
test edi edi +
mov [esp+5Ch+var_40] edi +
jz loc_408550  +
mov edi [esp+5Ch+var_34] +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
test edi edi +
jz loc_408658  +
shrd ebx esi +
mov esi ebx +
mov edi [esp+5Ch+var_30] +
mov ebx esi +
shl ebx 5 +
add eax [edi+ebx] +
adc edx [edi+ebx+4] +
mov esi eax +
mov eax [esp+5Ch+var_40] +
mov edi edx +
sub esi [eax] +
sbb edi [eax+4] +
xor eax eax +
cmp ecx 1 +
setz al  +
lea eax [eax+eax+2] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_58] esi +
add eax [ebp+0] +
mov [esp+5Ch+var_5C] eax +
call ds:dword_472C98  +
mov eax [esp+5Ch+var_14] +
mov ds:dword_471CC0 0 +
mov edi [esp+5Ch+var_18] +
mov [esp+5Ch+var_40] eax +
jmp loc_408326  +
cmp ecx 43h +
jz loc_4089AB  +
jbe loc_408890  +
cmp ecx 80h +
jz loc_4089B8  +
cmp ecx 83h +
jnz loc_4083A9  +
mov eax ds:dword_471CB0 +
mov edx ds:dword_471CB4 +
sub eax ds:dword_471CB8 +
sbb edx ds:dword_471CBC +
mov ds:dword_471CB0 0 +
mov ds:dword_471CA8 eax +
mov ds:dword_471CAC edx +
mov ds:dword_471CB4 0 +
mov ds:dword_471CB8 0 +
mov ds:dword_471CBC 0 +
jmp loc_408326  +
mov [esp+5Ch+var_40] 4 +
jmp loc_408423  +
cmp ecx 22h +
jz loc_408326  +
mov edi ds:dword_471CC0 +
test edi edi +
jz loc_408550  +
mov [esp+5Ch+var_5C] offset aUnhandledMn103 +
mov [esp+5Ch+var_40] ecx +
call sub_436A70  +
movzx eax ds:word_471D92 +
mov ecx [esp+5Ch+var_40] +
jmp loc_408550  +
mov eax [esp+5Ch+var_3C] +
call sub_401C80  +
mov [esp+5Ch+var_54] eax +
mov eax [ebp+0] +
mov [esp+5Ch+var_5C] offset aSkippingInvali +
mov [esp+5Ch+var_58] eax +
call sub_437070  +
mov eax [esp+5Ch+var_14] +
mov edi [esp+5Ch+var_18] +
mov [esp+5Ch+var_40] eax +
jmp loc_408326  +
cmp ax 1223h +
jz loc_408916  +
jbe loc_408A18  +
cmp ax 0A390h +
jz loc_408916  +
lea esi [esi+0] +
jbe loc_408E75  +
cmp ax 0ABC7h +
jnz loc_409250  +
lea edx [ecx-11h] +
cmp edx 2 +
jbe loc_408530  +
test ecx ecx +
jz loc_408530  +
cmp ax 71h +
jz loc_409039  +
cmp ax 71h +
ja loc_408A55  +
cmp ax 30h +
ja loc_408CDF  +
cmp ax 2Eh +
jnb loc_4083A9  +
cmp ax 13h +
jz loc_408DDC  +
jbe loc_408E14  +
cmp ax 24h +
jz loc_4091D7  +
jbe loc_408FF4  +
cmp ax 2Ah +
jz loc_4083A9  +
ja loc_4093B0  +
cmp ax 27h +
jz loc_4083A9  +
xor edx edx +
cmp ecx 2 +
setz dl  +
cmp ax 28h +
jz loc_4083B1  +
cmp eax ds:dword_471CA4 +
jz loc_408878  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] offset aMissingKnowled +
mov [esp+5Ch+var_40] ecx +
call sub_436A70  +
mov ecx [esp+5Ch+var_40] +
movzx eax ds:word_471D92 +
mov ds:dword_471CA4 eax +
jmp loc_4083B9  +
cmp ecx 41h +
jnz loc_4083A9  +
mov [esp+5Ch+var_50] 4 +
mov eax ds:dword_471CA8 +
mov edx ds:dword_471CAC +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_54] edx +
add eax [ebp+0] +
mov [esp+5Ch+var_5C] eax +
call ds:dword_472C98  +
mov eax [esp+5Ch+var_14] +
mov ds:dword_471CA8 0 +
mov edi [esp+5Ch+var_18] +
mov ds:dword_471CAC 0 +
mov [esp+5Ch+var_40] eax +
jmp loc_408326  +
cmp ax 2Ah +
jnb loc_408916  +
cmp ax 0Fh +
jz loc_408916  +
jbe loc_408F06  +
cmp ax 16h +
nop   +
ja loc_408FD8  +
cmp ax 14h +
jnb loc_408916  +
cmp ax 12h +
jnz loc_4087E4  +
xor edx edx +
test ecx ecx +
setz dl  +
test edx edx +
jnz loc_408530  +
jmp loc_4087E4  +
xor edx edx +
test ecx 0FFFFFEFFh +
setz dl  +
cmp ax 0B7h +
jz loc_40891D  +
ja loc_409053  +
lea edx [eax-0B4h] +
cmp dx 1 +
jbe loc_408916  +
jmp loc_4087E4  +
xor edx edx +
cmp ecx 3 +
setz dl  +
jmp loc_40891D  +
cmp ax 2Bh +
jbe loc_4088E9  +
cmp ax 53h +
jnz loc_408B88  +
lea edx [ecx-1Eh] +
cmp edx 2 +
ja loc_4087DC  +
jmp loc_408530  +
mov edx esi +
mov esi [esp+5Ch+var_34] +
mov eax ebx +
test esi esi +
jz loc_408A38  +
shrd eax edx +
mov ebx eax +
shl ebx 5 +
add ebx [esp+5Ch+var_30] +
mov ds:dword_471CC0 ebx +
jmp loc_408326  +
mov [esp+5Ch+var_50] 2 +
jmp loc_4088A1  +
mov edx ds:dword_471CBC +
mov eax ds:dword_471CB8 +
mov ds:dword_471CB4 edx +
mov edx esi +
mov esi [esp+5Ch+var_34] +
mov ds:dword_471CB0 eax +
mov eax ebx +
test esi esi +
jz loc_408A45  +
shrd eax edx +
mov esi [esp+5Ch+var_30] +
mov ebx eax +
shl ebx 5 +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
add eax [esi+ebx] +
adc edx [esi+ebx+4] +
mov ds:dword_471CB8 eax +
mov ds:dword_471CBC edx +
jmp loc_408326  +
lea ecx [esp+5Ch+var_10] +
mov eax ebx +
call sub_404690  +
mov [esp+5Ch+var_30] eax +
jmp loc_4081DD  +
cmp ax 0DFh +
jbe loc_408EED  +
cmp ax 1057h +
jz loc_408972  +
jmp loc_4087E4  +
mov eax edx +
jmp loc_408380  +
mov eax edx +
lea esi [esi+0] +
jmp loc_408997  +
mov eax edx +
jmp loc_4089DE  +
mov esi edi +
nop   +
lea esi [esi+0] +
jmp loc_40845B  +
cmp ax 0DFh +
jz loc_4083A9  +
nop   +
ja loc_408C6B  +
cmp ax 0B1h +
jz loc_408C5E  +
ja loc_408E90  +
cmp ax 87h +
jz loc_409265  +
jbe loc_4092E2  +
cmp ax 0A7h +
jz loc_4085C1  +
ja loc_4092C1  +
cmp ax 8Ah +
jz loc_408C5E  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 8Ch +
jz loc_4083B1  +
jmp loc_408858  +
cmp bx 2 +
jz loc_408FBC  +
mov eax ecx +
mov [esp+5Ch+var_40] ecx +
call sub_402360  +
mov ecx [esp+5Ch+var_40] +
test eax eax +
jnz loc_408D37  +
cmp bx 5Ah +
jz loc_408ED7  +
cmp bx 0DEADh +
jz loc_408ED7  +
cmp bx 78h +
jz loc_409433  +
jbe loc_409359  +
cmp bx 1223h +
jz loc_4094BA  +
ja loc_409310  +
cmp bx 0C3h +
jz loc_4094D7  +
jbe loc_409489  +
cmp bx 1057h +
jz loc_40947C  +
cmp bx 1059h +
jz loc_4094BA  +
cmp bx 0DDh +
jz loc_4094D7  +
cmp ds:dword_471CC8 ecx +
jz loc_408B71  +
mov eax [esp+5Ch+var_3C] +
mov [esp+5Ch+var_40] ecx +
call sub_401C80  +
mov ecx [esp+5Ch+var_40] +
mov [esp+5Ch+var_5C] offset aUnableToApplyU +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_54] eax +
call sub_437070  +
mov ecx [esp+5Ch+var_40] +
mov eax [esp+5Ch+var_14] +
mov ds:dword_471CC8 ecx +
mov edi [esp+5Ch+var_18] +
mov [esp+5Ch+var_40] eax +
jmp loc_408326  +
ja loc_408E52  +
cmp ax 32h +
jz loc_408916  +
jbe loc_408FC9  +
cmp ax 3Eh +
jz loc_408916  +
cmp ax 4Ch +
jz loc_408916  +
jmp loc_4087E4  +
cmp bx 0B7h +
jz loc_4090A5  +
jbe loc_40907C  +
cmp bx 9026h +
jz loc_40906F  +
cmp bx 0A390h +
jz loc_409062  +
xor eax eax +
cmp ecx 1 +
setz al  +
cmp bx 0BFh +
jz loc_408413  +
jmp loc_408AC1  +
mov eax [esp+5Ch+var_3C] +
call sub_401C80  +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] offset aSkippingInva_0 +
mov [esp+5Ch+var_54] eax +
call sub_437070  +
mov eax [esp+5Ch+var_14] +
mov edi [esp+5Ch+var_18] +
mov [esp+5Ch+var_40] eax +
jmp loc_408326  +
xor esi esi +
xor edi edi +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_20] ecx +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_58] eax +
call ds:dword_472C94  +
mov ecx [esp+5Ch+var_20] +
add esi eax +
adc edi edx +
jmp loc_4084D1  +
cmp ax 53h +
jz loc_4083A9  +
cmp ax 54h +
jnz loc_408858  +
xor edx edx +
cmp ecx 3 +
setz dl  +
jmp loc_4083B1  +
cmp ax 8217h +
jz loc_408DDC  +
jbe loc_408F55  +
cmp ax 0BEEFh +
nop   +
jz loc_4083A9  +
jbe loc_409272  +
cmp ax 0FEB0h +
jz loc_408C5E  +
jbe loc_409130  +
cmp ax 0FEBAh +
jz loc_408DDC  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 0FEBBh +
jz loc_4083B1  +
jmp loc_408858  +
cmp byte ptr ds:dword_471D8C 2Dh +
jz loc_4082A5  +
cmp ds:byte_471D67 0 +
jnz loc_4083A9  +
jmp loc_4082A5  +
cmp ax 58h +
jz loc_4090F7  +
lea esi [esi+0] +
ja loc_4090B5  +
cmp ax 50h +
jz loc_408DB3  +
ja loc_409151  +
cmp ax 3Eh +
jz loc_409220  +
jbe loc_4091F3  +
cmp ax 4Bh +
jz loc_4083A9  +
xor edx edx +
cmp ecx 3 +
setz dl  +
cmp ax 4Ch +
jz loc_4083B1  +
jmp loc_408858  +
mov [esp+5Ch+var_40] 8 +
jmp loc_408423  +
mov eax [esp+5Ch+var_24] +
mov ebx ebp +
call sub_401C80  +
sub ebx [esp+5Ch+var_14] +
sar ebx 3 +
imul ebx ebx +
mov esi eax +
mov eax [esp+5Ch+var_34] +
movzx eax byte ptr [eax+14h] +
and eax 0Fh +
call sub_407ED0  +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_54] ebx +
mov [esp+5Ch+var_5C] offset aSkippingUnexpe +
mov [esp+5Ch+var_58] eax +
call sub_437070  +
mov eax [esp+5Ch+var_14] +
mov edi [esp+5Ch+var_18] +
mov [esp+5Ch+var_40] eax +
jmp loc_408326  +
xor edx edx +
cmp ecx 2 +
setz dl  +
cmp ax 0BFh +
jz loc_4083B1  +
cmp ax 0C3h +
jnz loc_408858  +
xor edx edx +
cmp ecx 4 +
setz dl  +
jmp loc_4083B1  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_4080FF  +
add esi 0FFFFFFF8h +
adc edi 0FFFFFFFFh +
jmp loc_408501  +
xor edx edx +
cmp ecx 2 +
setz dl  +
jmp loc_4083B1  +
cmp bx 16h +
jz loc_409062  +
cmp bx 2Bh +
jz loc_408FBC  +
xor eax eax +
cmp ecx 26h +
setz al  +
cmp bx 15h +
jz loc_408413  +
jmp loc_408AC1  +
cmp ax 7 +
jz loc_4083A9  +
nop   +
jbe loc_4091A0  +
cmp ax 9 +
jz loc_4083A9  +
jb loc_408DDC  +
cmp ax 0Fh +
jnz loc_40944F  +
cmp ecx 29h +
setz dl  +
cmp ecx 1 +
setz al  +
or edx eax +
movzx edx dl +
jmp loc_4083B1  +
cmp ax 58h +
jb loc_4087E4  +
cmp ax 59h +
jbe loc_408916  +
cmp ax 5Ch +
jnb loc_408916  +
jmp loc_4087E4  +
cmp ax 4688h +
jz loc_408916  +
cmp ax 9026h +
jz loc_408916  +
jmp loc_4087E4  +
cmp ax 0BDh +
jz loc_4083A9  +
lea esi [esi+0] +
jbe loc_40922D  +
cmp ax 0C5h +
jz loc_4083A9  +
jbe loc_408D97  +
cmp ax 0DDh +
jz loc_408C5E  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 0DEh +
jz loc_4083B1  +
jmp loc_408858  +
cmp ecx 4 +
jnz loc_408AED  +
mov [esp+5Ch+var_40] 3 +
jmp loc_408423  +
cmp ax 0DEh +
jnb loc_408916  +
cmp ax 0C3h +
jz loc_408916  +
jmp loc_4087E4  +
cmp ax 2 +
jb loc_4087E4  +
cmp ax 4 +
jbe loc_408916  +
cmp ax 8 +
jz loc_408916  +
jmp loc_4087E4  +
cmp ax 5Bh +
jz loc_4084B5  +
lea esi [esi+0] +
jmp loc_4084BE  +
cmp ecx 1 +
jnz loc_4084D1  +
nop   +
jmp loc_408C28  +
cmp ax 3330h +
jz loc_408C5E  +
nop   +
jbe loc_4093D0  +
cmp ax 5AA5h +
jz loc_408C5E  +
ja loc_409025  +
cmp ax 4688h +
jz loc_408C5E  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 5441h +
jz loc_4083B1  +
jmp loc_408858  +
cmp ax 56h +
jz loc_4084C8  +
jmp loc_4084D1  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_34] +
add esi [eax] +
adc edi [eax+4] +
jmp loc_408518  +
xor eax eax +
cmp ecx 36h +
setz al  +
jmp loc_408413  +
cmp ax 2Dh +
jz loc_408916  +
jmp loc_4087E4  +
cmp ax 28h +
jz loc_408916  +
jmp loc_4087E4  +
xor eax eax +
cmp ecx 12h +
setz al  +
jmp loc_408413  +
cmp ax 15h +
jz loc_4083A9  +
jb loc_4083A9  +
cmp ax 16h +
jz loc_408DB3  +
xor edx edx +
cmp ecx 6 +
setz dl  +
cmp ax 17h +
jz loc_4083B1  +
jmp loc_408858  +
cmp ax 7650h +
jz loc_409171  +
cmp ax 7676h +
jnz loc_408858  +
xor edx edx +
cmp ecx 0Ch +
setz dl  +
jmp loc_4083B1  +
xor eax eax +
cmp ecx 27h +
setz al  +
jmp loc_408413  +
cmp ax 0BCh +
jz loc_408916  +
jmp loc_4087E4  +
xor eax eax +
cmp ecx 16h +
setz al  +
jmp loc_408413  +
xor eax eax +
cmp ecx 2 +
setz al  +
jmp loc_408413  +
cmp bx 3Eh +
jz loc_409098  +
jb loc_408AC1  +
lea eax [ebx-0B4h] +
cmp ax 1 +
ja loc_408AC1  +
xor eax eax +
cmp ecx 1 +
setz al  +
jmp loc_408413  +
xor eax eax +
cmp ecx 101h +
setz al  +
jmp loc_408413  +
cmp ax 5Dh +
jz loc_408DB3  +
ja loc_409104  +
cmp ax 5Ah +
jz loc_4083A9  +
nop   +
lea esi [esi+0] +
jb loc_4083A9  +
cmp ax 5Bh +
jz loc_4083A9  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 5Ch +
jz loc_4083B1  +
jmp loc_408858  +
xor edx edx +
cmp ecx 22h +
setz dl  +
jmp loc_4083B1  +
cmp ax 65h +
jz loc_408DDC  +
ja loc_40917E  +
cmp ax 5Eh +
jz loc_4083A9  +
cmp ax 63h +
nop   +
jz loc_4083A9  +
jmp loc_408858  +
cmp ax 0DEADh +
jz loc_4083A9  +
xor edx edx +
cmp ecx 4 +
setz dl  +
cmp ax 0F00Dh +
jz loc_4083B1  +
jmp loc_408858  +
cmp ax 55h +
jz loc_409171  +
jbe loc_408C4A  +
cmp ax 56h +
jz loc_409039  +
cmp ax 57h +
jnz loc_408858  +
xor edx edx +
cmp ecx 6 +
setz dl  +
jmp loc_4083B1  +
cmp ax 69h +
jz loc_4083A9  +
xor edx edx +
cmp ecx 12h +
setz dl  +
cmp ax 6Ah +
jz loc_4083B1  +
jmp loc_408858  +
cmp ax 3 +
jz loc_4083A9  +
lea esi [esi+0] +
jbe loc_409413  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 4 +
jz loc_4083B1  +
cmp ax 6 +
jz loc_4083A9  +
jmp loc_408858  +
xor edx edx +
cmp ecx 33h +
setz dl  +
jmp loc_4083B1  +
cmp ax 71h +
jz loc_408916  +
jmp loc_4087EE  +
mov edx ecx +
and edx 0FFFFFFBFh +
cmp edx 25h +
setz dl  +
cmp ax 32h +
movzx edx dl +
jz loc_4083B1  +
jmp loc_408858  +
lea edx [eax-0B4h] +
cmp dx 1 +
ja loc_408858  +
xor edx edx +
cmp ecx 0Ah +
setz dl  +
jmp loc_4083B1  +
cmp ax 0B7h +
jz loc_409403  +
jbe loc_409210  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 0BCh +
jz loc_4083B1  +
jmp loc_408858  +
cmp ax 0FEBBh +
jz loc_408916  +
lea esi [esi+0] +
jmp loc_4087E4  +
xor edx edx +
cmp ecx 8 +
setz dl  +
jmp loc_4083B1  +
cmp ax 0A390h +
jz loc_408DB3  +
jbe loc_4092A0  +
cmp ax 0ABC7h +
jz loc_4083A9  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 0AD45h +
jz loc_4083B1  +
jmp loc_408858  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 9026h +
jz loc_4083B1  +
cmp ax 9080h +
jz loc_409171  +
jmp loc_408858  +
cmp ax 0ADh +
jz loc_4083A9  +
xor edx edx +
cmp ecx 2 +
setz dl  +
cmp ax 0AEh +
jz loc_4083B1  +
jmp loc_408858  +
cmp ax 73h +
jz loc_408DB3  +
lea esi [esi+0] +
jb loc_4093A3  +
cmp ax 74h +
jz loc_408C5E  +
cmp ax 78h +
jz loc_408C5E  +
jmp loc_408858  +
cmp bx 0BEEFh +
jz loc_4094D7  +
nop   +
lea esi [esi+0] +
jbe loc_4094F1  +
cmp bx 0FEB0h +
jz loc_409433  +
xor eax eax +
cmp ecx 9 +
setz al  +
cmp bx 0FEBBh +
jnz loc_4094E4  +
test eax eax +
jz loc_408B40  +
mov [esp+5Ch+var_40] 2 +
jmp loc_408423  +
cmp bx 5Ah +
jz loc_4094D7  +
jbe loc_40945A  +
cmp bx 69h +
lea esi [esi+0] +
jz loc_4094A8  +
jbe loc_40951D  +
cmp bx 73h +
jz loc_409510  +
cmp bx 74h +
jz loc_4094D7  +
xor eax eax +
cmp ecx 0Dh +
setz al  +
cmp bx 71h +
jz loc_409344  +
jmp loc_408B40  +
xor edx edx +
cmp ecx 0Fh +
setz dl  +
jmp loc_4083B1  +
cmp ax 2Bh +
jz loc_40941D  +
xor edx edx +
cmp ecx 1 +
setz dl  +
cmp ax 2Dh +
jz loc_4083B1  +
jmp loc_408858  +
cmp ax 1059h +
jz loc_4083A9  +
lea esi [esi+0] +
jbe loc_409440  +
cmp ax 1223h +
jz loc_408C5E  +
xor edx edx +
cmp ecx 2 +
setz dl  +
cmp ax 2530h +
jz loc_4083B1  +
jmp loc_408858  +
xor edx edx +
cmp ecx 102h +
setz dl  +
jmp loc_4083B1  +
cmp ax 2 +
jnz loc_408858  +
cmp ecx 17h +
setz dl  +
cmp ecx 3 +
setz al  +
or edx eax +
movzx edx dl +
jmp loc_4083B1  +
xor eax eax +
cmp ecx 1 +
setz al  +
jmp loc_409344  +
cmp ax 1057h +
jz loc_4083A9  +
jmp loc_408858  +
cmp ax 12h +
jz loc_40941D  +
jmp loc_408858  +
cmp bx 30h +
nop   +
jbe loc_4094C7  +
cmp bx 55h +
jz loc_409510  +
cmp bx 59h +
jz loc_4094D7  +
cmp bx 53h +
jnz loc_408B40  +
xor eax eax +
cmp ecx 4 +
setz al  +
jmp loc_409344  +
cmp bx 8Ch +
jz loc_4094D7  +
xor eax eax +
cmp ecx 13h +
setz al  +
cmp bx 0A7h +
jz loc_409344  +
jmp loc_408B40  +
cmp byte ptr ds:dword_471D8C 2Dh +
jz loc_4094D7  +
cmp ds:byte_471D67 0 +
jz loc_4094D7  +
xor eax eax +
cmp ecx 5 +
setz al  +
jmp loc_409344  +
cmp bx 2Eh +
jnb loc_409538  +
cmp bx 2Dh +
jnz loc_408B40  +
xor eax eax +
cmp ecx 2 +
setz al  +
jmp loc_409344  +
cmp bx 0DEADh +
jnz loc_408B40  +
jmp loc_4094D7  +
cmp bx 7650h +
jz loc_409510  +
cmp bx 8217h +
jz loc_409433  +
cmp bx 4688h +
jnz loc_408B40  +
jmp loc_4094D7  +
xor eax eax +
cmp ecx 3 +
setz al  +
jmp loc_409344  +
cmp bx 5Dh +
jz loc_4094D7  +
cmp bx 65h +
jz loc_409433  +
cmp bx 5Ch +
jz loc_4094D7  +
jmp loc_408B40  +
xor eax eax +
cmp ecx 11h +
setz al  +
jmp loc_409344  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov [esp+0ACh+var_88] eax +
shl eax 6 +
mov ebx eax +
mov eax 1 +
add ebx offset off_441700 +
mov edi [ebx+0Ch] +
mov [esp+0ACh+var_8C] ecx +
test edi edi +
jz loc_409584  +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8] +
lea esi [esp+0ACh+var_4C] +
mov ebp edx +
mov [esp+0ACh+var_A4] offset aSSectionData +
mov [esp+0ACh+var_A8] 40h +
mov [esp+0ACh+var_AC] esi +
mov [esp+0ACh+var_A0] eax +
call sub_402590  +
mov edx [ebp+14h] +
mov eax [ebp+10h] +
mov ecx [ebp+18h] +
mov dword ptr [ebx+2Ch] 0 +
mov [ebx+14h] edx +
mov edx [ebp+24h] +
mov [ebx+10h] eax +
mov eax [ebp+20h] +
mov [esp+0ACh+var_9C] esi +
mov [esp+0ACh+var_AC] 1 +
mov [esp+0ACh+var_A0] edx +
mov edx [esp+0ACh+var_8C] +
mov [esp+0ACh+var_A4] eax +
xor eax eax +
mov [esp+0ACh+var_A8] 0 +
call sub_403CC0  +
test eax eax +
mov [ebx+0Ch] eax +
jz loc_4097B0  +
mov esi [ebp+20h] +
mov edi [ebp+24h] +
test byte ptr [ebp+9] 8 +
mov [esp+0ACh+var_70] eax +
mov [esp+0ACh+var_84] esi +
mov [esp+0ACh+var_80] edi +
mov [esp+0ACh+var_6C] esi +
mov [esp+0ACh+var_68] edi +
jnz loc_409747  +
cmp [esp+0ACh+var_80] 0 +
jbe loc_409730  +
mov edi offset aZlib +
mov ecx 5 +
mov esi eax +
cmps   +
jnz loc_40973B  +
movzx edx byte ptr [eax+4] +
xor ecx ecx +
xor edi edi +
movzx esi byte ptr [eax+5] +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+6] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+7] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+8] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+9] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+0Ah] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+0Bh] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
mov esi [esp+0ACh+var_84] +
adc ecx edi +
mov edi [esp+0ACh+var_80] +
add eax 0Ch +
mov [esp+0ACh+var_70] eax +
add esi 0FFFFFFF4h +
adc edi 0FFFFFFFFh +
mov [esp+0ACh+var_6C] esi +
mov [esp+0ACh+var_68] edi +
mov eax ecx +
or eax edx +
jz loc_4096F1  +
lea eax [esp+0ACh+var_6C] +
mov [esp+0ACh+var_AC] eax +
lea eax [esp+0ACh+var_70] +
call sub_403F60  +
test eax eax +
jnz loc_40980A  +
mov esi [esp+0ACh+var_6C] +
mov edi [esp+0ACh+var_68] +
mov ecx [ebx+0Ch] +
test ecx ecx +
mov [ebx+18h] esi +
mov [ebx+1Ch] edi +
jz loc_409774  +
mov edx [esp+0ACh+var_88] +
shl edx 6 +
mov eax dword_441738[edx] +
test eax eax +
jnz loc_409780  +
mov dword ptr [ebx+24h] 0 +
mov eax 1 +
mov dword ptr [ebx+28h] 0 +
jmp loc_409579  +
cmp [esp+0ACh+var_84] 0Ch +
ja loc_409625  +
mov ecx eax +
mov esi [esp+0ACh+var_84] +
mov edi [esp+0ACh+var_80] +
jmp loc_4096FC  +
mov edx eax +
lea eax [esp+0ACh+var_64] +
call sub_407C40  +
mov edx [esp+0ACh+var_64] +
cmp edx 1 +
mov esi eax +
jz loc_4097C3  +
mov eax [ebx+8] +
mov [esp+0ACh+var_A4] edx +
mov [esp+0ACh+var_AC] offset aSectionSHasUns +
mov [esp+0ACh+var_A8] eax +
call sub_437070  +
xor eax eax +
jmp loc_409579  +
mov eax [esp+0ACh+var_8C] +
lea edx [ebx+28h] +
add ebx 24h +
mov [esp+0ACh+var_A0] edx +
mov edx ebp +
mov [esp+0ACh+var_A4] ebx +
mov [esp+0ACh+var_AC] esi +
mov [esp+0ACh+var_A8] edi +
call sub_4080C0  +
mov eax 1 +
jmp loc_409579  +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
jmp loc_409579  +
mov edx [esp+0ACh+var_54] +
mov eax [esp+0ACh+var_50] +
xor eax [ebp+34h] +
xor edx [ebp+30h] +
or eax edx +
jz loc_4097EF  +
mov eax [ebx+8] +
mov [esp+0ACh+var_AC] offset aCompressedSect +
mov [esp+0ACh+var_A8] eax +
call sub_437070  +
xor eax eax +
jmp loc_409579  +
xor edi edi +
mov edx [esp+0ACh+var_5C] +
add [esp+0ACh+var_70] esi +
sub [esp+0ACh+var_6C] esi +
mov ecx [esp+0ACh+var_58] +
sbb [esp+0ACh+var_68] edi +
jmp loc_4096D3  +
mov eax [ebx+0Ch] +
mov [esp+0ACh+var_AC] eax +
call free  +
mov eax [esp+0ACh+var_70] +
mov esi [esp+0ACh+var_6C] +
mov edi [esp+0ACh+var_68] +
mov [ebx+0Ch] eax +
mov ecx eax +
jmp loc_4096FC  +
***
sub esp 1Ch +
cmp eax 10h +
mov edx eax +
ja loc_4098C7  +
jmp ds:off_447260[eax*4]  +
mov eax offset aUnixHpUx +
lea esi [esi+0] +
add esp 1Ch +
retn   +
mov eax offset aUnixNetbsd +
jmp loc_409850  +
mov eax offset aUnixGnu +
jmp loc_409850  +
mov eax offset aUnixSolaris +
jmp loc_409850  +
mov eax offset aUnixAix +
jmp loc_409850  +
mov eax offset aUnixIrix +
jmp loc_409850  +
mov eax offset aUnixFreebsd +
jmp loc_409850  +
mov eax offset aUnixTru64 +
jmp loc_409850  +
mov eax offset aNovellModesto +
jmp loc_409850  +
mov eax offset aUnixOpenbsd +
jmp loc_409850  +
mov eax offset aVmsOpenvms +
jmp loc_409850  +
mov eax offset aHpNonStopKerne +
jmp loc_409850  +
mov eax offset aAros +
jmp loc_409850  +
mov eax offset aFenixos +
jmp loc_409850  +
mov eax offset aUnixSystemV +
jmp loc_409850  +
cmp edx 3Fh +
jbe loc_4098F0  +
movzx eax ds:word_471D92 +
cmp ax 8Ch +
jz loc_409940  +
ja loc_409920  +
cmp ax 28h +
jnz loc_40995E  +
cmp edx 61h +
mov eax offset aArm +
jz loc_409850  +
nop   +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aUnknownX +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471BA0 +
call sub_402590  +
mov eax offset unk_471BA0 +
jmp loc_409850  +
cmp ax 0DDh +
jz loc_40992C  +
cmp ax 1059h +
jnz loc_4098F0  +
cmp edx 0FFh +
mov eax offset aStandaloneApp +
jnz loc_4098F0  +
jmp loc_409850  +
cmp edx 40h +
mov eax offset aBareMetalC6000 +
jz loc_409850  +
cmp edx 41h +
mov eax offset aLinuxC6000 +
jz loc_409850  +
jmp loc_4098F0  +
cmp ax 69h +
jnz loc_4098F0  +
jmp loc_40992C  +
***
mov edx eax +
and eax 0FF000000h +
cmp eax 78000000h +
jz loc_409A20  +
cmp edx 60000004h +
jz loc_409A36  +
jbe loc_4099C2  +
cmp edx 70000000h +
jz loc_409A30  +
lea esi [esi+0] +
jbe loc_4099F0  +
cmp edx 70000001h +
mov eax offset aIa_64_unwind +
jz locret_4099C0  +
cmp edx 79000000h +
mov eax offset aIa_64_priority +
jnz loc_4099EB  +
lea esi [esi+0] +
retn   +
cmp edx 60000001h +
mov eax offset aVms_tie_signat +
jz locret_4099C0  +
jbe loc_409A10  +
cmp edx 60000002h +
mov eax offset aVms_debug +
jz locret_4099C0  +
cmp edx 60000003h +
mov eax offset aVms_debug_str +
jz locret_4099C0  +
xor eax eax +
retn   +
cmp edx 60000005h +
mov eax offset aVms_symbol_vec +
jz locret_4099C0  +
cmp edx 60000006h +
mov eax offset aVms_fixup +
jnz loc_4099EB  +
retn   +
cmp edx 60000000h +
mov eax offset aVms_trace +
jnz loc_4099EB  +
retn   +
mov eax edx +
and eax 0FF0000h +
shr eax 10h +
jmp sub_409830  +
mov eax offset aIa_64_ext +
retn   +
mov eax offset aVms_linkages +
retn   +
***
sub esp 18h +
cmp eax 0Eh +
jz loc_409C90  +
jbe loc_409AA5  +
cmp eax 6FFFFFF7h +
jz loc_409C51  +
lea esi [esi+0] +
ja loc_409AE6  +
cmp eax 11h +
jz loc_409C80  +
nop   +
jbe loc_409B90  +
cmp edx 6FFFFFF0h +
mov eax offset aVersym +
jz loc_409AA0  +
cmp edx 6FFFFFF6h +
mov eax offset aGnu_hash +
jz loc_409AA0  +
cmp edx 12h +
mov eax offset aSymtabSectionI +
jnz loc_409BD0  +
nop   +
add esp 18h +
pop ebx  +
retn   +
cmp eax 5 +
jz loc_409CA0  +
nop   +
jbe loc_409B20  +
cmp eax 8 +
jz loc_409C60  +
nop   +
lea esi [esi+0] +
jbe loc_409B52  +
cmp edx 0Ah +
mov eax offset aShlib +
jz loc_409AA0  +
mov eax offset aRel +
jb loc_409AA0  +
cmp edx 0Bh +
mov eax offset aDynsym +
jz loc_409AA0  +
jmp loc_409BD0  +
cmp eax 6FFFFFFEh +
jz loc_409C70  +
jbe loc_409B70  +
cmp edx 7FFFFFFDh +
mov eax offset aAuxiliary +
jz loc_409AA0  +
cmp edx 7FFFFFFFh +
mov eax offset aFilter +
jz loc_409AA0  +
cmp edx 6FFFFFFFh +
mov eax offset aVersym +
jnz loc_409BD0  +
jmp loc_409AA0  +
cmp eax 2 +
jz loc_409CB0  +
lea esi [esi+0] +
ja loc_409BB0  +
test edx edx +
mov eax offset aNull +
jz loc_409AA0  +
cmp edx 1 +
mov eax offset aProgbits +
jz loc_409AA0  +
jmp loc_409BD0  +
cmp edx 6 +
mov eax offset aDynamic +
jz loc_409AA0  +
cmp edx 7 +
mov eax offset aNote +
jz loc_409AA0  +
jmp loc_409BD0  +
cmp edx 6FFFFFFCh +
mov eax offset aVerdef +
jz loc_409AA0  +
cmp edx 6FFFFFFDh +
jz loc_409AA0  +
jmp loc_409BD0  +
cmp edx 0Fh +
mov eax offset aFini_array +
jz loc_409AA0  +
cmp edx 10h +
mov eax offset aPreinit_array +
jz loc_409AA0  +
jmp loc_409BD0  +
cmp edx 3 +
mov eax offset aStrtab +
jz loc_409AA0  +
cmp edx 4 +
mov eax offset aRela +
jz loc_409AA0  +
lea esi [esi+0] +
lea ebx [edx-70000000h] +
cmp ebx 0FFFFFFFh +
ja loc_409CBA  +
movzx eax ds:word_471D92 +
cmp ax 3Eh +
jz loc_409E80  +
ja loc_409D2A  +
cmp ax 0Fh +
jz loc_409E96  +
jbe loc_409E40  +
cmp ax 28h +
lea esi [esi+0] +
jz loc_409E65  +
cmp ax 32h +
jnz loc_409F32  +
mov eax edx +
call sub_409970  +
test eax eax +
jnz loc_409AA0  +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aLoprocX +
mov [esp+18h+var_18] offset unk_471720 +
call sprintf  +
mov eax offset unk_471720 +
jmp loc_409AA0  +
mov eax offset aGnu_liblist +
jmp loc_409AA0  +
mov eax offset aNobits +
jmp loc_409AA0  +
mov eax offset aVerneed +
jmp loc_409AA0  +
mov eax offset aGroup +
jmp loc_409AA0  +
mov eax offset aInit_array +
jmp loc_409AA0  +
mov eax offset aHash +
jmp loc_409AA0  +
mov eax offset aSymtab +
jmp loc_409AA0  +
lea ebx [edx-60000000h] +
cmp ebx 0FFFFFFFh +
ja loc_409CF8  +
cmp ds:word_471D92 32h +
jz loc_409E27  +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aLoosX +
mov [esp+18h+var_18] offset unk_471720 +
call sprintf  +
mov eax offset unk_471720 +
jmp loc_409AA0  +
test edx edx +
js loc_409DA0  +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_10] offset a08xUnknown +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] offset unk_471720 +
call sub_402590  +
mov eax offset unk_471720 +
jmp loc_409AA0  +
cmp ax 0B5h +
ja loc_409E07  +
cmp ax 0B4h +
jnb loc_409E80  +
cmp ax 69h +
jz loc_409EAB  +
cmp ax 8Ch +
jnz loc_409F25  +
cmp edx 7F000000h +
jz loc_409F85  +
jbe loc_409F42  +
cmp edx 7F000002h +
jz loc_409F71  +
jb loc_409F8F  +
cmp edx 7F000003h +
mov eax offset aTi_initinfo +
jz loc_409AA0  +
cmp edx 7F000004h +
mov eax offset aTi_phattrs +
jz loc_409AA0  +
jmp loc_409C2F  +
movzx eax ds:word_471D92 +
cmp ax 57h +
jz loc_409DE1  +
cmp ax 9080h +
jz loc_409DE1  +
cmp ax 24h +
jz loc_409DE1  +
add edx 80000000h +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] offset aLouserX +
mov [esp+18h+var_18] offset unk_471720 +
call sprintf  +
mov eax offset unk_471720 +
jmp loc_409AA0  +
cmp edx 80000000h +
mov eax offset aRenesasIop +
jz loc_409AA0  +
xor eax eax +
cmp edx 0A0000000h +
mov edx offset aRenesasInfo +
cmovz eax edx +
jmp loc_409AA0  +
cmp ax 0B7h +
jnz loc_409EE3  +
cmp edx 70000003h +
mov eax offset aAarch64_attrib +
jz loc_409AA0  +
jmp loc_409C2F  +
mov eax edx +
call sub_409970  +
test eax eax +
jnz loc_409AA0  +
jmp loc_409CD6  +
cmp ax 8 +
jz loc_409E50  +
cmp ax 0Ah +
jnz loc_409C2F  +
cmp ebx 2Ah +
ja loc_409C2F  +
mov eax ds:off_44DEA0[ebx*4] +
jmp loc_409C27  +
sub edx 70000001h +
cmp edx 4 +
ja loc_409C2F  +
mov eax ds:off_44DBF8[edx*4] +
jmp loc_409C27  +
cmp edx 70000001h +
mov eax offset aX86_64_unwind +
jz loc_409AA0  +
jmp loc_409C2F  +
cmp ebx 9 +
ja loc_409C2F  +
mov eax ds:off_44DC60[ebx*4] +
jmp loc_409C27  +
cmp edx 7F000005h +
mov eax offset aMsp430_sec_fla +
jz loc_409AA0  +
cmp edx 7F000006h +
mov eax offset aMsp430_sym_ali +
jz loc_409AA0  +
cmp edx 70000003h +
jnz loc_409C2F  +
mov eax offset aMsp430_attribu +
jmp loc_409AA0  +
cmp ax 9080h +
jnz loc_409C2F  +
cmp edx 70000001h +
mov eax offset aV850TinyCommon +
jz loc_409AA0  +
cmp edx 70000002h +
mov eax offset aV850ZeroCommon +
jz loc_409AA0  +
cmp edx 70000000h +
mov eax offset aV850SmallCommo +
jnz loc_409C2F  +
jmp loc_409AA0  +
cmp ax 57h +
jnz loc_409C2F  +
nop   +
jmp loc_409EED  +
cmp ax 24h +
jnz loc_409C2F  +
lea esi [esi+0] +
jmp loc_409EED  +
cmp edx 70000002h +
jz loc_409F7B  +
cmp edx 70000003h +
mov eax offset aC6000_attribut +
jz loc_409AA0  +
cmp edx 70000001h +
jnz loc_409C2F  +
mov eax offset aC6000_unwind +
jmp loc_409AA0  +
mov eax offset aTi_handler +
jmp loc_409AA0  +
mov eax offset aC6000_preemptm +
jmp loc_409AA0  +
mov eax offset aTi_icode +
jmp loc_409AA0  +
mov eax offset aTi_xref +
jmp loc_409AA0  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov [esp+7Ch+var_58] eax +
mov eax ds:dword_471DA4 +
mov ds:dword_471D4C 0 +
test eax eax +
jnz loc_409FF0  +
mov eax ds:dword_471D84 +
or eax ds:dword_471D80 +
jnz loc_40A3F0  +
mov edi ds:dword_471D28 +
test edi edi +
jnz loc_40A910  +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_471D28 +
test esi esi +
jz loc_40A008  +
mov ebx ds:dword_471D10 +
test ebx ebx +
jz loc_40A410  +
mov ecx ds:dword_471CF0 +
xor edx edx +
mov eax [esp+7Ch+var_58] +
test ecx ecx +
jz loc_40A360  +
call sub_404A60  +
test eax eax +
jz loc_40A36D  +
mov eax ds:dword_471DA8 +
test eax eax +
jnz loc_40A377  +
mov eax ds:dword_471DA4 +
mov edi eax +
mov ebp ds:dword_471D4C +
cmp ds:dword_471CF0 1 +
mov ds:dword_472070 0 +
mov ds:dword_472084 0 +
sbb eax eax +
and eax 4 +
add eax 4 +
mov ds:dword_472C4C eax +
movzx eax ds:word_471D92 +
mov ds:dword_47206C 0 +
mov ds:dword_471D40 0 +
cmp ax 2Fh +
ja loc_40A930  +
cmp ax 2Eh +
jnb loc_40AB60  +
cmp ax 8 +
jz loc_40A430  +
cmp ax 0Ah +
jz loc_40A430  +
nop   +
test edi edi +
mov edx edi +
jz loc_40ABA1  +
mov [esp+7Ch+var_5C] 0 +
test ebp ebp +
jz loc_40A4C8  +
mov ebx ds:dword_47207C +
test ebx ebx +
jz loc_40A550  +
mov eax [ebp+0] +
add ebx eax +
cmp eax ds:dword_472078 +
mov eax offset aCorrupt +
cmovnb ebx eax +
mov eax [ebp+4] +
cmp eax 0Bh +
jz loc_40A466  +
cmp eax 3 +
jz loc_40A490  +
cmp eax 12h +
jz loc_40A820  +
cmp eax 2 +
jz loc_40A4D2  +
cmp eax 11h +
jz loc_40A560  +
cmp eax 9 +
nop   +
jz loc_40A8E0  +
cmp eax 4 +
jz loc_40A8F4  +
mov eax ds:dword_471D00 +
test eax eax +
mov [esp+7Ch+var_54] eax +
jnz loc_40A1B4  +
mov eax ds:dword_472C80 +
test eax eax +
jnz loc_40A1B4  +
mov eax ds:dword_472C44 +
test eax eax +
jnz loc_40A1B4  +
mov eax ds:dword_472C8C +
test eax eax +
jnz loc_40A1B4  +
mov edi ds:dword_472C58 +
test edi edi +
jnz loc_40A1B4  +
mov esi ds:dword_472C68 +
test esi esi +
jnz loc_40A1B4  +
mov ecx ds:dword_472C84 +
test ecx ecx +
jnz loc_40A1B4  +
mov eax ds:dword_472C60 +
test eax eax +
jnz loc_40A1B4  +
mov eax ds:dword_472C5C +
test eax eax +
jnz loc_40A1B4  +
mov eax ds:dword_472C40 +
test eax eax +
jnz loc_40A1B4  +
cmp ds:dword_472C50 0 +
jnz loc_40A1B4  +
cmp ds:dword_472C6C 0 +
jnz loc_40A1B4  +
cmp ds:dword_472C48 0 +
jnz loc_40A1B4  +
cmp ds:dword_472C78 0 +
jz loc_40A22C  +
mov ecx 7 +
mov esi ebx +
mov edi offset a_debug_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_40A5D8  +
mov edi offset a_zdebug_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_40A5D8  +
mov edi [esp+7Ch+var_54] +
test edi edi +
jnz loc_40A1FA  +
mov esi ds:dword_472C80 +
test esi esi +
jz loc_40A20E  +
mov edi offset a_gnu_linkonce_ +
mov ecx 11h +
mov esi ebx +
cmps   +
jz loc_40A2D6  +
mov ecx ds:dword_472C60 +
test ecx ecx +
jz loc_40A22C  +
mov edi offset a_eh_frame +
mov ecx 0Ah +
mov esi ebx +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C88 +
test eax eax +
jz loc_40A249  +
mov edi offset a_gdb_index +
mov ecx 0Bh +
mov esi ebx +
cmps   +
jz loc_40A2D6  +
mov eax [esp+7Ch+var_54] +
test eax eax +
jnz loc_40AC27  +
mov eax ds:dword_472C70 +
test eax eax +
jz loc_40B2D1  +
mov [esp+7Ch+var_74] 7 +
mov [esp+7Ch+var_78] offset a_trace_ +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_54] edx +
call strncmp  +
mov edx [esp+7Ch+var_54] +
test eax eax +
jnz loc_40A2F0  +
mov eax ds:dword_472C70 +
add ebx 7 +
test eax eax +
jz loc_40A2A2  +
mov edi offset aInfo_0 +
mov ecx 5 +
mov esi ebx +
cmps   +
jz loc_40A2D6  +
mov edi ds:dword_472C74 +
test edi edi +
jz loc_40A2BC  +
mov edi offset aAbbrev_0 +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_40A2D6  +
mov esi ds:dword_472C90 +
test esi esi +
jz loc_40A2F0  +
mov edi offset aAranges +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_40A2F0  +
mov eax [esp+7Ch+var_5C] +
mov edx 4 +
call sub_4053B0  +
mov edx ds:dword_471DA4 +
lea esi [esi+0] +
add [esp+7Ch+var_5C] 1 +
add ebp 48h +
cmp edx [esp+7Ch+var_5C] +
ja loc_40A0C2  +
mov ebx ds:dword_471D28 +
test ebx ebx +
jz loc_409FDD  +
cmp edx 1 +
jbe loc_40ABB0  +
mov [esp+7Ch+var_7C] offset aSectionHeade_0 +
call puts  +
mov ecx ds:dword_471CF0 +
test ecx ecx +
jz loc_40A960  +
mov edx ds:dword_471D20 +
test edx edx +
jz loc_40ABF0  +
mov [esp+7Ch+var_7C] offset aNrName +
call puts  +
mov [esp+7Ch+var_7C] offset aTypeAddrOffSiz +
call puts  +
jmp loc_40A9A0  +
call sub_404CB0  +
test eax eax +
jnz loc_40A029  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_471DA4 +
cmp eax esi +
mov edi esi +
jnb loc_40A03D  +
mov ebp ds:dword_471D4C +
lea eax [eax+eax*8] +
lea ebx [ebp+eax*8+0] +
mov eax [ebx+24h] +
mov edx [ebx+20h] +
mov esi eax +
or esi edx +
jz loc_40A043  +
mov ecx [ebx+18h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_70] eax +
xor eax eax +
mov [esp+7Ch+var_6C] offset aStringTable +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_78] 0 +
call sub_403CC0  +
test eax eax +
mov ds:dword_47207C eax +
jz loc_40B2F7  +
mov eax [ebx+20h] +
mov ds:dword_472078 eax +
jmp loc_40A036  +
mov [esp+7Ch+var_7C] offset aPossiblyCorrup +
call sub_437070  +
add esp 7Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:dword_471D80 +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset aThereAreDSecti +
mov [esp+7Ch+var_74] edx +
call printf  +
jmp loc_40A008  +
mov eax ds:dword_471D8C +
and eax 0F000h +
cmp eax 4000h +
jnz loc_40A0B0  +
mov eax offset a_gcc_compiled_ +
call sub_402450  +
test eax eax +
jnz loc_40A0B0  +
mov ds:dword_472C4C 8 +
jmp loc_40A0B0  +
mov eax ds:dword_472070 +
test eax eax +
jz loc_40A847  +
mov [esp+7Ch+var_7C] offset aFileContainsMu +
call sub_436A70  +
mov edx ds:dword_471DA4 +
jmp loc_40A2F0  +
mov edi offset a_dynstr +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_40A12F  +
mov eax ds:dword_472084 +
test eax eax +
jz loc_40B230  +
mov [esp+7Ch+var_7C] offset aFileContains_0 +
call sub_436A70  +
mov edx ds:dword_471DA4 +
jmp loc_40A2F0  +
mov ebx offset aNone_0 +
jmp loc_40A0EB  +
cmp ds:dword_471CF0 1 +
sbb ebx ebx +
and ebx 8 +
add ebx 10h +
mov ecx [ebp+38h] +
mov esi ebx +
mov eax [ebp+3Ch] +
xor esi ecx +
or esi eax +
jz loc_40A2F0  +
mov [esp+7Ch+var_70] eax +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_74] ecx +
mov [esp+7Ch+var_78] offset a016i64x_0 +
mov [esp+7Ch+var_7C] eax +
call sprintf  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_7C] offset aSectionDHasInv +
mov [esp+7Ch+var_78] eax +
call sub_436A70  +
mov [esp+7Ch+var_78] ebx +
mov [esp+7Ch+var_7C] offset aUsingTheExpect +
call sub_436A70  +
mov [ebp+38h] ebx +
mov dword ptr [ebp+3Ch] 0 +
mov edx ds:dword_471DA4 +
jmp loc_40A2F0  +
mov ebx offset aNoName +
jmp loc_40A0EB  +
mov ecx [ebp+38h] +
mov eax [ebp+3Ch] +
mov ebx ecx +
xor ebx 4 +
or ebx eax +
jz loc_40A2F0  +
mov [esp+7Ch+var_70] eax +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_74] ecx +
mov [esp+7Ch+var_78] offset a016i64x_0 +
mov [esp+7Ch+var_7C] eax +
call sprintf  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_7C] offset aSectionDHasInv +
mov [esp+7Ch+var_78] eax +
call sub_436A70  +
mov [esp+7Ch+var_78] 4 +
mov [esp+7Ch+var_7C] offset aUsingTheExpect +
call sub_436A70  +
mov dword ptr [ebp+38h] 4 +
mov dword ptr [ebp+3Ch] 0 +
mov edx ds:dword_471DA4 +
jmp loc_40A2F0  +
cmp byte ptr [ebx+1] 7Ah +
lea eax [ebx+8] +
lea ecx [ebx+7] +
cmovz ecx eax +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_50] ecx +
test eax eax +
jnz loc_40A2D6  +
mov eax ds:dword_472C80 +
test eax eax +
jz loc_40A62A  +
mov esi [esp+7Ch+var_50] +
mov edi offset aInfo_0 +
mov ecx 4 +
cmps   +
jz loc_40A2D6  +
mov esi [esp+7Ch+var_50] +
mov edi offset aTypes_0 +
mov ecx 5 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C44 +
test eax eax +
jz loc_40A649  +
mov esi [esp+7Ch+var_50] +
mov edi offset aAbbrev_0 +
mov ecx 6 +
cmps   +
jz loc_40A2D6  +
mov edi ds:dword_472C8C +
test edi edi +
jz loc_40A67F  +
mov esi [esp+7Ch+var_50] +
mov edi offset aLine_0 +
mov ecx 5 +
cmps   +
jz loc_40A2D6  +
mov esi [esp+7Ch+var_50] +
mov edi offset aLine_ +
mov ecx 5 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C58 +
test eax eax +
jnz loc_40AC54  +
mov esi ds:dword_472C68 +
test esi esi +
mov [esp+7Ch+var_54] esi +
jz loc_40A6BC  +
mov esi [esp+7Ch+var_50] +
mov ecx 8 +
mov edi offset aPubtypes +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_40A2D6  +
test eax eax +
jz loc_40A6D6  +
mov esi [esp+7Ch+var_50] +
mov edi offset aGnu_pubnames +
mov ecx 0Ch +
cmps   +
jz loc_40A2D6  +
mov esi [esp+7Ch+var_54] +
test esi esi +
jz loc_40A6F4  +
mov esi [esp+7Ch+var_50] +
mov edi offset aGnu_pubtypes +
mov ecx 0Ch +
cmps   +
jz loc_40A2D6  +
mov ebx ds:dword_472C84 +
test ebx ebx +
jz loc_40A714  +
mov esi [esp+7Ch+var_50] +
mov edi offset aAranges +
mov ecx 7 +
cmps   +
jz loc_40A2D6  +
mov ecx ds:dword_472C6C +
test ecx ecx +
jz loc_40A734  +
mov esi [esp+7Ch+var_50] +
mov edi offset aRanges_0 +
mov ecx 6 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C60 +
test eax eax +
jz loc_40A753  +
mov esi [esp+7Ch+var_50] +
mov edi offset aFrame +
mov ecx 5 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C5C +
test eax eax +
jz loc_40A788  +
mov esi [esp+7Ch+var_50] +
mov edi offset aMacinfo_0 +
mov ecx 7 +
cmps   +
jz loc_40A2D6  +
mov esi [esp+7Ch+var_50] +
mov edi offset aMacro_0 +
mov ecx 5 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C40 +
test eax eax +
jz loc_40A7A7  +
mov esi [esp+7Ch+var_50] +
mov edi offset aStr +
mov ecx 3 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C50 +
test eax eax +
jz loc_40A7C6  +
mov esi [esp+7Ch+var_50] +
mov edi offset aLoc_0 +
mov ecx 3 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C48 +
test eax eax +
jz loc_40A7E5  +
mov esi [esp+7Ch+var_50] +
mov edi offset aAddr +
mov ecx 4 +
cmps   +
jz loc_40A2D6  +
mov eax ds:dword_472C78 +
test eax eax +
jz loc_40A2F0  +
mov esi [esp+7Ch+var_50] +
mov edi offset aCu_index +
mov ecx 8 +
cmps   +
jz loc_40A2D6  +
mov edi offset aTu_index +
mov ecx 8 +
mov esi [esp+7Ch+var_50] +
jmp loc_40A2D2  +
mov [esp+7Ch+var_7C] 8 +
call sub_438CA0  +
mov edx ds:dword_471D40 +
mov [eax] ebp +
mov [eax+4] edx +
mov edx ds:dword_471DA4 +
mov ds:dword_471D40 eax +
jmp loc_40A2F0  +
mov eax ds:dword_471CF0 +
mov ecx [ebp+38h] +
mov edx [ebp+3Ch] +
cmp eax 1 +
sbb ebx ebx +
and ebx 8 +
add ebx 10h +
mov esi ebx +
xor esi ecx +
or esi edx +
jz loc_40A8BC  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_74] ecx +
mov [esp+7Ch+var_70] edx +
mov [esp+7Ch+var_78] offset a016i64x_0 +
mov [esp+7Ch+var_7C] eax +
call sprintf  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_7C] offset aSectionDHasInv +
mov [esp+7Ch+var_78] eax +
call sub_436A70  +
mov [esp+7Ch+var_78] ebx +
mov [esp+7Ch+var_7C] offset aUsingTheExpect +
call sub_436A70  +
mov eax ds:dword_471CF0 +
mov [ebp+38h] ebx +
mov dword ptr [ebp+3Ch] 0 +
test eax eax +
mov ecx offset dword_472074 +
mov eax [esp+7Ch+var_58] +
mov edx ebp +
jz loc_40A908  +
call sub_4042C0  +
mov ds:dword_472070 eax +
mov edx ds:dword_471DA4 +
jmp loc_40A2F0  +
cmp ds:dword_471CF0 1 +
sbb ebx ebx +
and ebx 8 +
add ebx 8 +
jmp loc_40A4E1  +
cmp ds:dword_471CF0 1 +
sbb ebx ebx +
and ebx 0Ch +
add ebx 0Ch +
jmp loc_40A4E1  +
call sub_404690  +
jmp loc_40A8D0  +
mov [esp+7Ch+var_7C] offset aThereAreNoSect +
call puts  +
add esp 7Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ax 78h +
jz loc_40A940  +
cmp ax 0FEB0h +
jnz loc_40A0B0  +
mov eax ds:dword_471D8C +
and eax 7Fh +
cmp eax 75h +
jnz loc_40A0B0  +
mov ds:dword_472C4C 2 +
jmp loc_40A0B0  +
mov eax ds:dword_472C54 +
test eax eax +
jnz loc_40ABC1  +
mov eax ds:dword_471D20 +
test eax eax +
jz loc_40B2B4  +
mov [esp+7Ch+var_7C] offset aNrName +
call puts  +
mov [esp+7Ch+var_7C] offset aTypeAddressOff +
call puts  +
mov [esp+7Ch+var_7C] offset aSizeEntsizeInf +
call puts  +
nop   +
mov eax ds:dword_471D20 +
test eax eax +
jnz loc_40B1F1  +
mov eax ds:dword_471DA4 +
xor esi esi +
mov ebx ds:dword_471D4C +
test eax eax +
mov edi ebx +
jnz loc_40AB1F  +
jmp loc_40AD36  +
test edi edi +
jz loc_40B0B0  +
mov ecx ds:dword_47207C +
test ecx ecx +
jz loc_40B0E0  +
mov eax [edi] +
mov edx offset aCorrupt +
add ecx eax +
cmp eax ds:dword_472078 +
cmovb edx ecx +
mov eax 0FFFFFFEFh +
call sub_405A30  +
mov eax [edi+4] +
call sub_409A40  +
mov ecx ds:dword_472C54 +
mov edx offset a15s +
test ecx ecx +
mov ecx offset a15_15s +
cmovz edx ecx +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edx +
call printf  +
mov ebx ds:dword_471CF0 +
test ebx ebx +
jnz loc_40AD80  +
mov eax ds:dword_472C54 +
test eax eax +
jnz loc_40AF22  +
mov edx ds:dword_471D20 +
test edx edx +
jz loc_40AE60  +
mov eax [edi+4] +
call sub_409A40  +
mov [esp+7Ch+var_7C] offset a15_15s_0 +
mov [esp+7Ch+var_78] eax +
call printf  +
mov edx [edi+14h] +
mov ecx 6 +
mov eax [edi+10h] +
call sub_4055F0  +
mov ecx [edi+18h] +
mov eax ecx +
cdq   +
cmp [edi+1Ch] edx +
jz loc_40B150  +
mov [esp+7Ch+var_7C] offset unk_446400 +
call printf  +
mov eax [edi+18h] +
mov ecx 6 +
mov edx [edi+1Ch] +
call sub_4055F0  +
mov eax [edi+28h] +
mov [esp+7Ch+var_7C] offset aU_0 +
mov [esp+7Ch+var_78] eax +
call printf  +
mov edx [edi+24h] +
mov ecx 6 +
mov eax [edi+20h] +
call sub_4055F0  +
mov [esp+7Ch+var_7C] 20h +
call putchar  +
mov edx [edi+3Ch] +
mov ecx 6 +
mov eax [edi+38h] +
call sub_4055F0  +
mov eax [edi+2Ch] +
mov edx [edi+30h] +
mov [esp+7Ch+var_7C] offset a16uLu +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call printf  +
mov eax ds:dword_471D20 +
test eax eax +
jnz loc_40AC70  +
add esi 1 +
add edi 48h +
cmp ds:dword_471DA4 esi +
jbe loc_40AD36  +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] offset a2u +
call printf  +
mov ebp ds:dword_471D20 +
test ebp ebp +
jz loc_40A9D0  +
mov eax edi +
call sub_401C80  +
mov [esp+7Ch+var_7C] offset aS_11 +
mov [esp+7Ch+var_78] eax +
call printf  +
jmp loc_40AA02  +
mov eax ds:dword_471D8C +
and eax 0FF0000h +
cmp eax 830000h +
jz loc_40A951  +
ja loc_40AC01  +
cmp eax 810000h +
jz loc_40B294  +
cmp eax 820000h +
jz loc_40B294  +
cmp eax 800000h +
jnz loc_40A0B0  +
jmp loc_40A951  +
cmp ds:dword_471D28 0 +
jz loc_409FDD  +
nop   +
mov [esp+7Ch+var_7C] offset aSectionHeader +
call puts  +
jmp loc_40A325  +
mov eax ds:dword_471D20 +
test eax eax +
jz loc_40B2A3  +
mov [esp+7Ch+var_7C] offset aNrName +
call puts  +
mov [esp+7Ch+var_7C] offset aTypeAddressO_0 +
call puts  +
jmp loc_40A9A0  +
mov [esp+7Ch+var_7C] offset aNrNameTypeAddr +
call puts  +
jmp loc_40A9A0  +
cmp eax 850000h +
jz loc_40B294  +
cmp eax 860000h +
jz loc_40A951  +
cmp eax 840000h +
jnz loc_40A0B0  +
jmp loc_40A951  +
mov [esp+7Ch+var_74] 7 +
mov [esp+7Ch+var_78] offset a_trace_ +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_54] edx +
call strncmp  +
mov edx [esp+7Ch+var_54] +
test eax eax +
jz loc_40A2D6  +
jmp loc_40A2F0  +
mov esi [esp+7Ch+var_50] +
mov edi offset aPubnames +
mov ecx 8 +
cmps   +
jz loc_40A2D6  +
jmp loc_40A68C  +
mov edx [edi+0Ch] +
mov eax [edi+8] +
call sub_405BC0  +
mov [esp+7Ch+var_7C] offset aS_12 +
mov [esp+7Ch+var_78] eax +
call printf  +
test byte ptr [edi+9] 8 +
jz loc_40AB0D  +
mov ecx [edi+18h] +
lea eax [esp+7Ch+var_34] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_6C] offset aCompressionHea +
mov [esp+7Ch+var_74] 18h +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_78] 0 +
call sub_403CC0  +
test eax eax +
jz loc_40AB0D  +
lea edx [esp+7Ch+var_34] +
lea eax [esp+7Ch+var_4C] +
call sub_407C40  +
mov eax [esp+7Ch+var_4C] +
cmp eax 1 +
jz loc_40B283  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset aUnknown0xX +
call printf  +
mov edx [esp+7Ch+var_40] +
mov ecx 6 +
add esi 1 +
mov eax [esp+7Ch+var_44] +
add edi 48h +
call sub_4055F0  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_7C] offset aLu_0 +
mov [esp+7Ch+var_78] eax +
call printf  +
cmp ds:dword_471DA4 esi +
ja loc_40AB1F  +
mov eax ds:dword_471D20 +
test eax eax +
jnz loc_409FDD  +
movzx eax ds:word_471D92 +
lea edx [eax-0B4h] +
cmp dx 1 +
jbe loc_40B1E0  +
cmp ax 3Eh +
jz loc_40B1E0  +
mov [esp+7Ch+var_7C] offset aKeyToFlagsWWri +
call puts  +
mov eax 1 +
jmp loc_409FE2  +
mov edx [edi+14h] +
mov ecx 6 +
mov eax [edi+10h] +
call sub_4055F0  +
mov eax [edi+38h] +
mov [esp+7Ch+var_70] eax +
mov eax [edi+20h] +
mov [esp+7Ch+var_74] eax +
mov eax [edi+18h] +
mov [esp+7Ch+var_7C] offset a6_6lx6_6lx2_2l +
mov [esp+7Ch+var_78] eax +
call printf  +
mov eax ds:dword_471D20 +
test eax eax +
jz loc_40B090  +
mov eax ds:_iob +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] 1 +
mov [esp+7Ch+var_7C] offset unk_446400 +
add eax 20h +
mov [esp+7Ch+var_70] eax +
call fwrite  +
mov eax [edi+28h] +
cmp eax ds:dword_471DA4 +
jnb loc_40B030  +
xor ebx ebx +
cmp ds:dword_471D20 0 +
jz loc_40B0EA  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset a2u_0 +
call printf  +
mov eax [edi+2Ch] +
mov edx [edi+30h] +
mov [esp+7Ch+var_7C] offset a3u2lu +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call printf  +
test ebx ebx +
jz loc_40AB00  +
cmp byte ptr [ebx] 0 +
jnz loc_40AB00  +
mov eax [edi+28h] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] offset aSectionUSh_lin +
mov [esp+7Ch+var_74] eax +
call sub_437070  +
jmp loc_40AB00  +
mov [esp+7Ch+var_7C] 20h +
call putchar  +
mov eax [edi+10h] +
mov ecx 6 +
mov edx [edi+14h] +
call sub_4055F0  +
mov eax [edi+18h] +
mov ebx eax +
sar ebx 1Fh +
cmp [edi+1Ch] ebx +
jz loc_40B165  +
mov [esp+7Ch+var_7C] offset unk_446400 +
call printf  +
mov eax [edi+18h] +
mov ecx 6 +
mov edx [edi+1Ch] +
call sub_4055F0  +
mov [esp+7Ch+var_7C] offset asc_447ABF +
call printf  +
mov edx [edi+24h] +
mov ecx 6 +
mov eax [edi+20h] +
call sub_4055F0  +
mov [esp+7Ch+var_7C] offset unk_446400 +
call printf  +
mov edx [edi+3Ch] +
mov ecx 6 +
mov eax [edi+38h] +
call sub_4055F0  +
mov edx [edi+0Ch] +
mov eax [edi+8] +
call sub_405BC0  +
mov [esp+7Ch+var_7C] offset a3s +
mov [esp+7Ch+var_78] eax +
call printf  +
mov edx [edi+2Ch] +
mov eax [edi+28h] +
mov ecx [edi+30h] +
mov [esp+7Ch+var_7C] offset a2u3uLu +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_70] ecx +
call printf  +
jmp loc_40AB00  +
mov edx [edi+14h] +
mov ecx 6 +
mov eax [edi+10h] +
call sub_4055F0  +
mov ecx [edi+18h] +
mov eax ecx +
cdq   +
cmp [edi+1Ch] edx +
jz loc_40B1B0  +
mov [esp+7Ch+var_7C] 20h +
call putchar  +
mov eax [edi+18h] +
mov ecx 6 +
mov edx [edi+1Ch] +
call sub_4055F0  +
mov ebp [edi+24h] +
mov eax [edi+20h] +
test ebp ebp +
jz loc_40B195  +
mov [esp+7Ch+var_7C] 20h +
call putchar  +
mov eax [edi+20h] +
mov ecx 6 +
mov edx [edi+24h] +
call sub_4055F0  +
mov ebx [edi+3Ch] +
mov eax [edi+38h] +
test ebx ebx +
jz loc_40B180  +
mov [esp+7Ch+var_7C] 20h +
call putchar  +
mov eax [edi+38h] +
mov ecx 6 +
mov edx [edi+3Ch] +
call sub_4055F0  +
mov ecx ds:dword_471D20 +
test ecx ecx +
jz loc_40B0C0  +
mov eax ds:_iob +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] 1 +
mov [esp+7Ch+var_7C] offset unk_446400 +
add eax 20h +
mov [esp+7Ch+var_70] eax +
call fwrite  +
mov edx [edi+2Ch] +
mov eax [edi+28h] +
mov [esp+7Ch+var_7C] offset a2u3u +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] eax +
call printf  +
mov edx [edi+34h] +
mov eax [edi+30h] +
test edx edx +
jz loc_40B1C5  +
mov ecx 1 +
call sub_4055F0  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
jmp loc_40AB00  +
movzx edx ds:word_471D92 +
cmp dx 12h +
jz loc_40B126  +
ja loc_40B110  +
cmp dx 6 +
jz loc_40B126  +
ja loc_40B202  +
sub edx 2 +
cmp dx 1 +
jbe loc_40B126  +
mov ebx offset unk_44640B +
cmp ds:dword_471D20 0 +
jz loc_40B0EA  +
cmp byte ptr [ebx] 0 +
jz loc_40AE04  +
mov [esp+7Ch+var_78] ebx +
mov [esp+7Ch+var_7C] offset aS_13 +
call printf  +
jmp loc_40AE14  +
mov eax [edi+8] +
mov edx [edi+0Ch] +
call sub_405BC0  +
mov [esp+7Ch+var_7C] offset a3s +
mov [esp+7Ch+var_78] eax +
call printf  +
jmp loc_40ADE6  +
mov edx offset aNone_0 +
jmp loc_40A9F8  +
mov eax [edi+8] +
mov edx [edi+0Ch] +
call sub_405BC0  +
mov [esp+7Ch+var_7C] offset a3s +
mov [esp+7Ch+var_78] eax +
call printf  +
jmp loc_40AFE7  +
mov edx offset aNoName +
jmp loc_40A9F8  +
mov edx [edi+2Ch] +
mov ecx [edi+30h] +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset a2u3u2lu +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_70] ecx +
call printf  +
jmp loc_40AE2E  +
cmp dx 3Eh +
jz loc_40B126  +
ja loc_40B215  +
cmp dx 2Bh +
jnz loc_40B064  +
cmp eax 0FF00h +
mov ebx offset aBefore +
jz loc_40B069  +
mov ebx offset unk_44640B +
cmp eax 0FF01h +
mov edx offset aAfter +
cmovz ebx edx +
jmp loc_40B069  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] offset a16_16lx +
call printf  +
jmp loc_40AAA7  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset a8_8lx_0 +
call printf  +
jmp loc_40AEA9  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset a2_2lx +
call printf  +
jmp loc_40AFB1  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset a6_6lx +
call printf  +
jmp loc_40AF87  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] offset a6_6lx +
call printf  +
jmp loc_40AF5D  +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset a2lu +
call printf  +
jmp loc_40AB00  +
mov [esp+7Ch+var_7C] offset aKeyToFlagsWW_0 +
call puts  +
jmp loc_409FDD  +
mov [esp+7Ch+var_7C] offset aFlags +
call puts  +
jmp loc_40A9AD  +
cmp dx 0Bh +
jnz loc_40B064  +
lea esi [esi+0] +
jmp loc_40B126  +
sub dx 0B4h +
cmp dx 1 +
ja loc_40B064  +
jmp loc_40B126  +
mov edx [ebp+24h] +
mov eax [ebp+20h] +
mov ecx [ebp+18h] +
mov [esp+7Ch+var_6C] offset aDynamicStrings +
mov [esp+7Ch+var_70] edx +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_74] eax +
xor eax eax +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_78] 0 +
call sub_403CC0  +
test eax eax +
mov ds:dword_472084 eax +
jz loc_40B2F0  +
mov eax [ebp+20h] +
mov ds:dword_472080 eax +
mov edx ds:dword_471DA4 +
jmp loc_40A2F0  +
mov [esp+7Ch+var_7C] offset aZlib_0 +
call printf  +
jmp loc_40ACFE  +
mov ds:dword_472C4C 4 +
jmp loc_40A0B0  +
mov [esp+7Ch+var_7C] offset aNrNameTypeAd_0 +
call puts  +
jmp loc_40A9A0  +
mov [esp+7Ch+var_7C] offset aNrNameTypeAd_1 +
call puts  +
mov [esp+7Ch+var_7C] offset aSizeEntsizeFla +
call puts  +
jmp loc_40A9A0  +
mov eax ds:dword_472C74 +
test eax eax +
jnz loc_40A262  +
mov eax ds:dword_472C90 +
test eax eax +
jnz loc_40A262  +
jmp loc_40A2F0  +
xor eax eax +
jmp loc_40B273  +
xor eax eax +
lea esi [esi+0] +
jmp loc_40A3E1  +
***
cmp eax 4 +
ja loc_40B346  +
jmp ds:off_447DA0[eax*4]  +
mov eax offset aRelRelocatable +
retn   +
mov eax offset aNoneNone +
retn   +
mov eax offset aExecExecutable +
retn   +
mov eax offset aDynSharedObjec +
retn   +
mov eax offset aCoreCoreFile +
retn   +
lea edx [eax-0FF00h] +
sub esp 1Ch +
cmp edx 0FFh +
jbe loc_40B3B3  +
lea edx [eax-0FE00h] +
cmp edx 0FFh +
mov [esp+1Ch+var_10] eax +
jbe loc_40B390  +
mov [esp+1Ch+var_14] offset aUnknownX_0 +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471B80 +
call sub_402590  +
mov eax offset unk_471B80 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aOsSpecificX +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471B80 +
call sub_402590  +
mov eax offset unk_471B80 +
jmp loc_40B38A  +
mov [esp+1Ch+var_10] eax +
mov [esp+1Ch+var_14] offset aProcessorSpe_0 +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471B80 +
call sub_402590  +
mov eax offset unk_471B80 +
jmp loc_40B38A  +
***
mov edx eax +
sub esp 1Ch +
cmp edx 1 +
mov eax offset aGlobal +
jz loc_40B400  +
mov eax offset aLocal_0 +
jb loc_40B400  +
cmp edx 2 +
mov eax offset aWeak +
jnz loc_40B404  +
add esp 1Ch +
retn   +
lea eax [edx-0Dh] +
cmp eax 2 +
jbe loc_40B430  +
lea eax [edx-0Ah] +
cmp eax 2 +
ja loc_40B480  +
cmp edx 0Ah +
jnz loc_40B457  +
movzx eax ds:byte_471D67 +
test al al +
jz loc_40B428  +
cmp al 3 +
jnz loc_40B457  +
mov eax offset aUnique +
jmp loc_40B400  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aProcessorSpeci +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471260 +
call sub_402590  +
mov eax offset unk_471260 +
jmp loc_40B400  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aOsSpecificD +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471260 +
call sub_402590  +
mov eax offset unk_471260 +
jmp loc_40B400  +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] offset aUnknownD +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] offset unk_471260 +
call sub_402590  +
mov eax offset unk_471260 +
jmp loc_40B400  +
***
mov edx ds:dword_471D48 +
test edx edx +
jz loc_40B4C0  +
mov eax 1 +
retn   +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax ds:dword_471D9C +
mov [esp+3Ch+var_38] 38h +
mov [esp+3Ch+var_3C] eax +
call sub_42C2B0  +
test eax eax +
mov edi eax +
jz loc_40B81B  +
mov ebp ds:dword_471D9C +
mov esi ds:dword_471D98 +
mov ecx ds:dword_471CF0 +
test ebp ebp +
setz dl  +
test esi esi +
setz al  +
test ecx ecx +
jz loc_40B680  +
or al dl +
jnz loc_40B7C8  +
cmp esi 1Fh +
jbe loc_40B7E0  +
cmp esi 20h +
jnz loc_40B80A  +
mov ecx ds:dword_471D78 +
xor eax eax +
mov edx ebx +
mov [esp+3Ch+var_2C] offset aProgramHeaders +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+3Ch+var_20] eax +
jz loc_40B7C8  +
mov edx ds:dword_471D9C +
xor ebp ebp +
mov esi edi +
mov ebx eax +
test edx edx +
jz loc_40B650  +
mov [esp+3Ch+var_3C] ebx +
add ebp 1 +
add esi 38h +
mov [esp+3Ch+var_38] 4 +
call ds:dword_472C94  +
mov [esi-38h] eax +
lea eax [ebx+4] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-30h] eax +
lea eax [ebx+8] +
mov [esi-2Ch] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-28h] eax +
lea eax [ebx+0Ch] +
mov [esi-24h] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-20h] eax +
lea eax [ebx+10h] +
mov [esi-1Ch] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-18h] eax +
lea eax [ebx+14h] +
mov [esi-14h] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-10h] eax +
lea eax [ebx+18h] +
mov [esi-0Ch] edx +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-34h] eax +
lea eax [ebx+1Ch] +
add ebx 20h +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-8] eax +
mov [esi-4] edx +
cmp ebp ds:dword_471D9C +
jb loc_40B574  +
mov eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax 1 +
test al al +
jz loc_40B7D0  +
mov ds:dword_471D48 edi +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or al dl +
jnz loc_40B7C8  +
cmp esi 37h +
jbe loc_40B7E0  +
cmp esi 38h +
jnz loc_40B7F9  +
mov ecx ds:dword_471D78 +
xor eax eax +
mov edx ebx +
mov [esp+3Ch+var_2C] offset aProgramHeaders +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+3Ch+var_20] eax +
jz loc_40B7C8  +
mov ebx eax +
mov eax ds:dword_471D9C +
xor ebp ebp +
mov esi edi +
test eax eax +
jz loc_40B650  +
mov [esp+3Ch+var_3C] ebx +
add ebp 1 +
add esi 38h +
mov [esp+3Ch+var_38] 4 +
call ds:dword_472C94  +
mov [esi-38h] eax +
lea eax [ebx+4] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-34h] eax +
lea eax [ebx+8] +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-30h] eax +
lea eax [ebx+10h] +
mov [esi-2Ch] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-28h] eax +
lea eax [ebx+18h] +
mov [esi-24h] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-20h] eax +
lea eax [ebx+20h] +
mov [esi-1Ch] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-18h] eax +
lea eax [ebx+28h] +
mov [esi-14h] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-10h] eax +
lea eax [ebx+30h] +
add ebx 38h +
mov [esi-0Ch] edx +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_3C] eax +
call ds:dword_472C94  +
mov [esi-8] eax +
mov [esi-4] edx +
cmp ebp ds:dword_471D9C +
jb loc_40B6E7  +
jmp loc_40B650  +
xor eax eax +
jmp loc_40B661  +
mov [esp+3Ch+var_3C] edi +
call free  +
xor eax eax +
jmp loc_40B674  +
mov [esp+3Ch+var_3C] offset aTheE_phentsize +
mov [esp+3Ch+var_20] eax +
call sub_436A70  +
mov eax [esp+3Ch+var_20] +
jmp loc_40B661  +
mov [esp+3Ch+var_3C] offset aTheE_phentsi_0 +
call sub_437070  +
jmp loc_40B69A  +
mov [esp+3Ch+var_3C] offset aTheE_phentsi_0 +
call sub_437070  +
jmp loc_40B526  +
mov eax ds:dword_471D9C +
mov [esp+3Ch+var_3C] offset aOutOfMemoryR_1 +
mov [esp+3Ch+var_38] eax +
call sub_436A70  +
xor eax eax +
jmp loc_40B674  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_1C] edx +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_18] ecx +
mov edi [esp+2Ch+arg_4] +
call sub_40B4B0  +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
test eax eax +
jz loc_40B930  +
mov eax ds:dword_471D48 +
imul ebx ds:dword_471D9C +
add ebx eax +
cmp eax ebx +
jnb loc_40B8FA  +
add esi edx +
adc edi ecx +
mov [esp+2Ch+var_1C] edx +
mov edx ebx +
mov [esp+2Ch+var_14] esi +
mov [esp+2Ch+var_10] edi +
mov [esp+2Ch+var_18] ecx +
jmp loc_40B89D  +
add eax 38h +
cmp eax edx +
jnb loc_40B8F2  +
cmp dword ptr [eax] 1 +
jnz loc_40B896  +
mov ecx [eax+30h] +
mov ebx [eax+34h] +
mov esi [eax+10h] +
mov edi [eax+14h] +
neg ecx  +
adc ebx 0 +
mov ebp ecx +
neg ebx  +
and ebp esi +
mov ecx ebx +
and ecx edi +
cmp [esp+2Ch+var_18] ecx +
jb loc_40B896  +
ja loc_40B8CB  +
cmp [esp+2Ch+var_1C] ebp +
jb loc_40B896  +
mov ecx esi +
mov ebx edi +
add ecx [eax+20h] +
adc ebx [eax+24h] +
cmp [esp+2Ch+var_10] ebx +
ja loc_40B896  +
jnb loc_40B920  +
mov edi [eax+8] +
mov edx [esp+2Ch+var_1C] +
add esp 2Ch +
pop ebx  +
add edi edx +
mov eax edi +
sub eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] offset aVirtualAddress +
mov [esp+2Ch+var_1C] edx +
mov [esp+2Ch+var_18] ecx +
call sub_437070  +
mov edx [esp+2Ch+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
mov eax edx +
pop ebp  +
retn   +
cmp [esp+2Ch+var_14] ecx +
ja loc_40B896  +
jmp loc_40B8DD  +
mov [esp+2Ch+var_2C] offset aCannotInterpre +
call sub_437070  +
mov edx [esp+2Ch+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 9Ch +
mov eax ds:dword_472094 +
mov edx ds:dword_472090 +
mov ecx eax +
or ecx edx +
jnz loc_40B990  +
mov ebx ds:dword_471D38 +
test ebx ebx +
jnz loc_40C1B0  +
mov ebx 1 +
add esp 9Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_471CF0 +
mov [esp+0A4h+var_9C] edx +
mov edx edi +
mov [esp+0A4h+var_98] eax +
mov eax 0 +
mov [esp+0A4h+var_94] offset aDynamicSection +
test ecx ecx +
mov ecx ds:dword_472098 +
mov [esp+0A4h+var_A4] 1 +
mov [esp+0A4h+var_A0] 0 +
jz loc_40BC10  +
call sub_403CC0  +
test eax eax +
mov esi eax +
jz loc_40C4B6  +
mov ebx eax +
xor eax eax +
mov ds:dword_472088 0 +
jmp loc_40BA15  +
add eax 1 +
mov ds:dword_472088 eax +
lea eax [ebx-8] +
mov [esp+0A4h+var_A0] 4 +
mov [esp+0A4h+var_A4] eax +
call ds:dword_472C94  +
or edx eax +
mov eax ds:dword_472088 +
jz loc_40BA24  +
mov edx ds:dword_472090 +
add ebx 8 +
add edx esi +
cmp ebx edx +
jbe loc_40B9F0  +
mov [esp+0A4h+var_A0] 10h +
mov [esp+0A4h+var_A4] eax +
call sub_42C2B0  +
mov ebp eax +
test ebp ebp +
mov ds:dword_471D44 eax +
mov eax ds:dword_472088 +
jz loc_40C49E  +
shl eax 4 +
mov ebx esi +
add eax ebp +
cmp ebp eax +
jnb loc_40BA9C  +
mov [esp+0A4h+var_A4] ebx +
add ebp 10h +
mov [esp+0A4h+var_A0] 4 +
call ds:dword_472C94  +
mov [ebp-10h] eax +
lea eax [ebx+4] +
add ebx 8 +
mov [ebp-0Ch] edx +
mov [esp+0A4h+var_A0] 4 +
mov [esp+0A4h+var_A4] eax +
call ds:dword_472C94  +
mov [ebp-8] eax +
mov eax ds:dword_472088 +
mov [ebp-4] edx +
shl eax 4 +
add eax ds:dword_471D44 +
cmp ebp eax +
jb loc_40BA53  +
mov [esp+0A4h+var_A4] esi +
call free  +
mov eax ds:dword_472070 +
test eax eax +
jz loc_40C724  +
mov eax ds:dword_472084 +
test eax eax +
jz loc_40C827  +
mov eax ds:dword_47206C +
test eax eax +
jz loc_40C5B0  +
mov eax ds:dword_471D38 +
test eax eax +
jnz loc_40C190  +
mov eax ds:dword_472088 +
mov ebp ds:dword_471D44 +
shl eax 4 +
add eax ebp +
cmp ebp eax +
jnb loc_40B97B  +
mov edi ds:dword_471D38 +
xor esi esi +
test edi edi +
jnz loc_40BBA9  +
mov eax [ebp+0] +
mov edx [ebp+4] +
mov [esp+0A4h+var_74] eax +
xor eax 1Eh +
or eax edx +
mov [esp+0A4h+var_70] edx +
jz loc_40C0C3  +
cmp edx 0 +
jbe loc_40BCE5  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
mov eax ecx +
xor eax 6FFFFFFDh +
or eax ebx +
jz loc_40C167  +
cmp ebx 0 +
ja loc_40BDC0  +
cmp [esp+0A4h+var_74] 6FFFFFFDh +
ja loc_40BDC0  +
cmp [esp+0A4h+var_70] 0 +
jbe loc_40BF57  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
mov eax ecx +
xor eax 6FFFFFFBh +
or eax ebx +
jnz loc_40BE10  +
test esi esi +
jnz loc_40C1C1  +
lea esi [esi+0] +
mov eax ds:dword_472088 +
add ebp 10h +
shl eax 4 +
add eax ds:dword_471D44 +
cmp ebp eax +
jnb loc_40B97B  +
mov edi ds:dword_471D38 +
xor esi esi +
test edi edi +
jz loc_40BB00  +
mov [esp+0A4h+var_A4] 20h +
call putchar  +
mov edx [ebp+4] +
mov ecx 5 +
mov eax [ebp+0] +
call sub_4055F0  +
mov eax [ebp+0] +
call sub_4032B0  +
cmp ds:dword_471CF0 1 +
sbb ebx ebx +
and ebx 0FFFFFFF8h +
mov [esp+0A4h+var_A4] eax +
mov esi eax +
add ebx 1Bh +
call strlen  +
mov [esp+0A4h+var_A0] esi +
mov [esp+0A4h+var_98] offset asc_44648A +
mov [esp+0A4h+var_A4] offset aSS_3 +
sub ebx eax +
mov [esp+0A4h+var_9C] ebx +
call printf  +
mov esi ds:dword_471D38 +
jmp loc_40BB00  +
call sub_403CC0  +
test eax eax +
mov esi eax +
jz loc_40C4B6  +
mov ebx eax +
xor eax eax +
mov ds:dword_472088 0 +
jmp loc_40BC55  +
add eax 1 +
mov ds:dword_472088 eax +
lea eax [ebx-10h] +
mov [esp+0A4h+var_A0] 8 +
mov [esp+0A4h+var_A4] eax +
call ds:dword_472C94  +
or edx eax +
mov eax ds:dword_472088 +
jz loc_40BC64  +
mov edx ds:dword_472090 +
add ebx 10h +
add edx esi +
cmp ebx edx +
jbe loc_40BC30  +
mov [esp+0A4h+var_A0] 10h +
mov [esp+0A4h+var_A4] eax +
call sub_42C2B0  +
mov ebp eax +
test ebp ebp +
mov ds:dword_471D44 eax +
mov eax ds:dword_472088 +
jz loc_40C49E  +
shl eax 4 +
mov ebx esi +
add eax ebp +
cmp ebp eax +
jnb loc_40BA9C  +
mov [esp+0A4h+var_A4] ebx +
add ebp 10h +
mov [esp+0A4h+var_A0] 8 +
call ds:dword_472C94  +
mov [ebp-10h] eax +
lea eax [ebx+8] +
add ebx 10h +
mov [ebp-0Ch] edx +
mov [esp+0A4h+var_A0] 8 +
mov [esp+0A4h+var_A4] eax +
call ds:dword_472C94  +
mov [ebp-8] eax +
mov eax ds:dword_472088 +
mov [ebp-4] edx +
shl eax 4 +
add eax ds:dword_471D44 +
cmp ebp eax +
jb loc_40BC97  +
jmp loc_40BA9C  +
cmp [esp+0A4h+var_74] 1Eh +
ja loc_40C000  +
cmp [esp+0A4h+var_70] 0 +
jbe loc_40D0C6  +
mov edi [esp+0A4h+var_74] +
test esi esi +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov ds:dword_471E60[edi*8] eax +
mov ds:dword_471E64[edi*8] edx +
jz loc_40BB80  +
mov esi ds:dword_472084 +
test esi esi +
jz loc_40C333  +
cmp edx 0 +
mov ecx ds:dword_472080 +
ja loc_40C333  +
cmp eax ecx +
jnb loc_40C333  +
add esi eax +
jz loc_40C333  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
mov edi ecx +
xor edi 0Eh +
or edi ebx +
jz loc_40CB0B  +
cmp ebx 0 +
mov ecx [esp+0A4h+var_74] +
ja loc_40C574  +
cmp [esp+0A4h+var_74] 0Eh +
ja loc_40C574  +
xor ecx 1 +
or ecx [esp+0A4h+var_70] +
jnz loc_40C333  +
mov [esp+0A4h+var_A0] esi +
mov [esp+0A4h+var_A4] offset aSharedLibraryS +
call printf  +
mov [esp+0A4h+var_A0] offset byte_471F60 +
mov [esp+0A4h+var_A4] esi +
call strcmp  +
test eax eax +
jnz loc_40C33D  +
mov [esp+0A4h+var_A4] offset aProgramInterpr +
call printf  +
jmp loc_40C33D  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
mov eax ecx +
xor eax 7FFFFFFDh +
or eax ebx +
jz loc_40C027  +
cmp ebx 0 +
ja loc_40BDEA  +
cmp [esp+0A4h+var_74] 7FFFFFFDh +
jbe loc_40C158  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
mov eax ecx +
xor eax 7FFFFFFEh +
or eax ebx +
jz loc_40BF90  +
mov eax ecx +
xor eax 7FFFFFFFh +
or eax ebx +
jz loc_40C027  +
mov eax [esp+0A4h+var_74] +
mov edx [esp+0A4h+var_70] +
add eax 90000010h +
adc edx 0FFFFFFFFh +
cmp edx 0 +
ja loc_40BE47  +
cmp eax 0Fh +
ja loc_40BE47  +
mov ecx [ebp+8] +
mov eax 6FFFFFFFh +
mov ebx [ebp+0Ch] +
sub eax [esp+0A4h+var_74] +
mov ds:dword_471DC0[eax*8] ecx +
mov ds:dword_471DC4[eax*8] ebx +
test esi esi +
jz loc_40BB80  +
movzx eax ds:word_471D92 +
cmp ax 0Ah +
jz loc_40C98F  +
jbe loc_40C985  +
cmp ax 0Fh +
jz loc_40C4C9  +
cmp ax 32h +
jnz loc_40C32D  +
mov esi [esp+0A4h+var_74] +
mov edi [esp+0A4h+var_70] +
mov eax esi +
xor eax 60000035h +
or eax edi +
jz loc_40CEA8  +
mov eax esi +
xor eax 70000000h +
or eax edi +
jz loc_40CE71  +
mov eax esi +
xor eax 60000015h +
or eax edi +
jnz loc_40C32D  +
mov eax [ebp+8] +
mov ecx 4 +
mov edx [ebp+0Ch] +
call sub_4055F0  +
mov eax [ebp+8] +
test al 1 +
jnz loc_40CF25  +
test al 2 +
jnz loc_40CF11  +
test al 4 +
jnz loc_40CF75  +
test al 8 +
lea esi [esi+0] +
jnz loc_40CF61  +
test al 10h +
jnz loc_40CF4D  +
test al 20h +
jnz loc_40CF39  +
test al 40h +
jnz loc_40D015  +
test al 80h +
jnz loc_40D001  +
test ah 2 +
jnz loc_40CFED  +
test ah 4 +
jnz loc_40CFD9  +
test ah 8 +
jnz loc_40CFC5  +
test ah 10h +
jnz loc_40CFB1  +
test ah 20h +
jnz loc_40CF9D  +
test ah 40h +
jnz loc_40CF89  +
test ah 80h +
nop   +
jz loc_40C33D  +
mov [esp+0A4h+var_A4] offset aRel_seg_off +
call printf  +
jmp loc_40C33D  +
cmp [esp+0A4h+var_74] 6FFFFFFAh +
ja loc_40BB5B  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40C167  +
cmp [esp+0A4h+var_74] 6FFFFFF9h +
jnb loc_40C167  +
mov eax ecx +
xor eax 6FFFFEFFh +
or eax ebx +
jnz loc_40BE10  +
lea esi [esi+0] +
test esi esi +
jz loc_40BB80  +
mov esi [esp+0A4h+var_74] +
mov edi [esp+0A4h+var_70] +
mov eax esi +
xor eax 7FFFFFFEh +
or eax edi +
jnz loc_40C32D  +
mov esi ds:dword_472084 +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
test esi esi +
jz loc_40C333  +
cmp edx 0 +
mov ecx ds:dword_472080 +
ja loc_40C333  +
cmp eax ecx +
jnb loc_40C333  +
add esi eax +
cmp byte ptr [esi] 0 +
jz loc_40C333  +
mov [esp+0A4h+var_A0] esi +
mov [esp+0A4h+var_A4] offset aNotNeededObjec +
call printf  +
jmp loc_40BB80  +
mov edx [esp+0A4h+var_70] +
mov eax [esp+0A4h+var_74] +
cmp edx 0 +
ja loc_40BB22  +
cmp eax 6FFFFEFCh +
ja loc_40BB22  +
cmp [esp+0A4h+var_70] 0 +
jbe loc_40D078  +
test esi esi +
jz loc_40BB80  +
mov esi [esp+0A4h+var_74] +
mov edi [esp+0A4h+var_70] +
mov eax esi +
xor eax 6FFFFEFCh +
or eax edi +
jz loc_40CBB2  +
cmp edi 0 +
ja loc_40C350  +
cmp [esp+0A4h+var_74] 6FFFFEFCh +
ja loc_40C350  +
mov eax esi +
xor eax 6FFFFEFAh +
or eax edi +
jz loc_40CBA1  +
mov eax esi +
xor eax 6FFFFEFBh +
or eax edi +
jnz loc_40C083  +
mov [esp+0A4h+var_A4] offset aDependencyAudi +
call printf  +
mov ecx ds:dword_472084 +
test ecx ecx +
jz loc_40C321  +
mov esi [ebp+0Ch] +
mov ebx [ebp+8] +
mov eax ds:dword_472080 +
test esi esi +
jnz loc_40C321  +
cmp ebx eax +
jnb loc_40C321  +
add ecx ebx +
mov [esp+0A4h+var_A0] ecx +
mov [esp+0A4h+var_A4] offset aS_19 +
call printf  +
jmp loc_40BB80  +
test esi esi +
jz loc_40BB80  +
mov edi [ebp+0Ch] +
mov ecx 1 +
mov esi [ebp+8] +
mov eax edi +
or eax esi +
jz loc_40C310  +
mov [esp+0A4h+var_74] ebp +
jmp loc_40C11C  +
mov eax ds:_iob +
mov [esp+0A4h+var_9C] 7 +
mov [esp+0A4h+var_A0] 1 +
mov [esp+0A4h+var_A4] offset aUnknown_3 +
add eax 20h +
mov [esp+0A4h+var_98] eax +
call fwrite  +
nop   +
mov eax edi +
or eax esi +
jz loc_40C4C0  +
xor ecx ecx +
mov eax esi +
mov edx edi +
neg eax  +
adc edx 0 +
mov ebx eax +
neg edx  +
and ebx esi +
mov ebp edx +
mov edx ebx +
and ebp edi +
not edx  +
mov eax ebp +
and edx esi +
not eax  +
mov esi edx +
and eax edi +
test ecx ecx +
mov edi eax +
jz loc_40C481  +
cmp ebp 0 +
ja loc_40C0E6  +
cmp ebx 10h +
ja loc_40C0E6  +
jmp ds:off_4484C4[ebx*4]  +
mov eax ecx +
xor eax 6FFFFFFFh +
or eax ebx +
jnz loc_40BE10  +
test esi esi +
jz loc_40BB80  +
mov eax [ebp+8] +
mov ecx 3 +
mov edx [ebp+0Ch] +
call sub_4055F0  +
mov [esp+0A4h+var_A4] 0Ah +
call putchar  +
jmp loc_40BB80  +
mov eax ds:dword_472098 +
test eax eax +
jnz loc_40C8F0  +
mov [esp+0A4h+var_A4] offset aTagTypeNameVal +
call puts  +
jmp loc_40BAD8  +
mov [esp+0A4h+var_A4] offset aThereIsNoDynam +
call puts  +
jmp loc_40B97B  +
mov [esp+0A4h+var_A4] offset aFlags_2 +
call printf  +
mov ebx [ebp+8] +
mov eax ebx +
or eax [ebp+0Ch] +
jz loc_40C470  +
test bl 1 +
jnz loc_40CDA6  +
test bl 2 +
jnz loc_40CD92  +
test bl 4 +
jnz loc_40CD7E  +
test bl 8 +
jnz loc_40CD6A  +
test bl 10h +
jnz loc_40CD56  +
test bl 20h +
jnz loc_40CD42  +
test bl 40h +
jnz loc_40CD2E  +
test bl 80h +
jnz loc_40CD1A  +
test bh 1 +
jnz loc_40CDF6  +
test bh 2 +
nop   +
jnz loc_40CDE2  +
test bh 4 +
jnz loc_40CDCE  +
test bh 8 +
jnz loc_40CDBA  +
test bh 10h +
jnz loc_40CE1E  +
test bh 20h +
jnz loc_40CE0A  +
test bh 40h +
jnz loc_40CE32  +
test bh 80h +
jnz loc_40CD06  +
test ebx 10000h +
jnz loc_40CC64  +
test ebx 20000h +
jnz loc_40CC4D  +
test ebx 40000h +
jnz loc_40CC36  +
test ebx 80000h +
jnz loc_40CC1F  +
test ebx 100000h +
jnz loc_40CC08  +
test ebx 200000h +
jnz loc_40CBF1  +
test ebx 400000h +
jnz loc_40CBDA  +
test ebx 800000h +
jnz loc_40CBC3  +
test ebx 1000000h +
jnz loc_40CCC0  +
test ebx 2000000h +
jnz loc_40CCA9  +
test ebx 4000000h +
jnz loc_40CC92  +
test ebx 8000000h +
jnz loc_40CC7B  +
test ebx ebx +
jz loc_40C310  +
mov [esp+0A4h+var_A0] ebx +
mov [esp+0A4h+var_A4] offset aLx_4 +
call printf  +
mov [esp+0A4h+var_A4] offset unk_44640B +
call puts  +
jmp loc_40BB80  +
mov [esp+0A4h+var_A4] offset asc_4481E2 +
call printf  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov ecx 4 +
call sub_4055F0  +
mov [esp+0A4h+var_A4] 0Ah +
call putchar  +
jmp loc_40BB80  +
mov esi [esp+0A4h+var_74] +
mov edi [esp+0A4h+var_70] +
mov eax esi +
xor eax 7FFFFFFDh +
or eax edi +
jz loc_40C563  +
mov eax esi +
xor eax 7FFFFFFFh +
or eax edi +
jnz loc_40C083  +
mov [esp+0A4h+var_A4] offset aFilterLibrary +
call printf  +
jmp loc_40C083  +
mov eax ds:_iob +
mov [esp+0A4h+var_9C] 0Ah +
mov [esp+0A4h+var_A0] 1 +
mov [esp+0A4h+var_A4] offset aStatic_tls +
add eax 20h +
mov [esp+0A4h+var_98] eax +
call fwrite  +
jmp loc_40C110  +
mov eax ds:_iob +
mov [esp+0A4h+var_9C] 8 +
mov [esp+0A4h+var_A0] 1 +
mov [esp+0A4h+var_A4] offset aBind_now +
add eax 20h +
mov [esp+0A4h+var_98] eax +
call fwrite  +
jmp loc_40C110  +
mov eax ds:_iob +
mov [esp+0A4h+var_9C] 7 +
mov [esp+0A4h+var_A0] 1 +
mov [esp+0A4h+var_A4] offset aTextrel +
add eax 20h +
mov [esp+0A4h+var_98] eax +
call fwrite  +
jmp loc_40C110  +
mov eax ds:_iob +
mov [esp+0A4h+var_9C] 8 +
mov [esp+0A4h+var_A0] 1 +
mov [esp+0A4h+var_A4] offset aSymbolic +
add eax 20h +
mov [esp+0A4h+var_98] eax +
call fwrite  +
jmp loc_40C110  +
mov eax ds:_iob +
mov [esp+0A4h+var_9C] 6 +
mov [esp+0A4h+var_A0] 1 +
mov [esp+0A4h+var_A4] offset aOrigin +
add eax 20h +
mov [esp+0A4h+var_98] eax +
call fwrite  +
jmp loc_40C110  +
mov [esp+0A4h+var_A4] offset aNone_2 +
call puts  +
jmp loc_40BB80  +
mov eax ds:_iob +
mov [esp+0A4h+var_A4] 20h +
add eax 20h +
mov [esp+0A4h+var_A0] eax +
call putc  +
jmp loc_40C147  +
mov [esp+0A4h+var_A0] eax +
mov [esp+0A4h+var_A4] offset aOutOfMemoryA_6 +
call sub_436A70  +
mov [esp+0A4h+var_A4] esi +
call free  +
xor ebx ebx +
jmp loc_40B980  +
mov ebp [esp+0A4h+var_74] +
jmp loc_40C310  +
mov esi [esp+0A4h+var_74] +
mov edi [esp+0A4h+var_70] +
mov eax esi +
xor eax 60000001h +
or eax edi +
jnz loc_40C32D  +
mov edi [ebp+0Ch] +
mov ecx 1 +
xor ebx ebx +
mov eax [ebp+8] +
mov [esp+0A4h+var_68] ebp +
mov esi edi +
mov ebp esi +
mov edi eax +
jmp loc_40C52F  +
mov eax ds:_iob +
xor edi esi +
add eax 20h +
mov [esp+0A4h+var_A0] eax +
mov eax ds:off_461B24[ebx*8] +
mov [esp+0A4h+var_A4] eax +
call fputs  +
xor ecx ecx +
xor ebp [esp+0A4h+var_70] +
add ebx 1 +
cmp ebx 11h +
jz loc_40CB35  +
mov esi ds:dword_461B20[ebx*8] +
mov eax esi +
sar eax 1Fh +
mov [esp+0A4h+var_70] eax +
mov edx [esp+0A4h+var_70] +
mov eax esi +
and eax edi +
mov [esp+0A4h+var_74] esi +
and edx ebp +
or edx eax +
jz loc_40C523  +
test ecx ecx +
jnz loc_40C500  +
mov [esp+0A4h+var_A4] 20h +
call putchar  +
jmp loc_40C500  +
mov [esp+0A4h+var_A4] offset aAuxiliaryLibra +
call printf  +
jmp loc_40C083  +
mov ebx [esp+0A4h+var_70] +
mov edi ecx +
xor edi 0Fh +
or edi ebx +
jz loc_40CB20  +
mov edi ecx +
xor edi 1Dh +
mov ecx edi +
or ecx [esp+0A4h+var_70] +
jnz loc_40C333  +
mov [esp+0A4h+var_A0] esi +
mov [esp+0A4h+var_A4] offset aLibraryRunpath +
call printf  +
jmp loc_40C33D  +
mov edx ds:dword_472088 +
mov eax ds:dword_471D44 +
mov ecx edx +
shl ecx 4 +
mov ebx eax +
add ecx eax +
cmp eax ecx +
jnb loc_40BACB  +
mov [esp+0A4h+var_74] 0 +
jmp loc_40C5FE  +
mov ebp esi +
xor ebp 6FFFFDFEh +
or ebp ecx +
jz loc_40C640  +
xor esi 6FFFFEFFh +
or esi ecx +
jz loc_40C920  +
mov ecx edx +
add ebx 10h +
shl ecx 4 +
add ecx eax +
cmp ebx ecx +
jnb loc_40C650  +
mov esi [ebx] +
mov ecx [ebx+4] +
mov ebp esi +
xor ebp 6FFFFDFFh +
or ebp ecx +
jnz loc_40C5D6  +
mov ecx [ebx+8] +
mov esi ecx +
xor esi 4 +
or esi [ebx+0Ch] +
jz loc_40C5F0  +
mov [esp+0A4h+var_A0] ecx +
mov [esp+0A4h+var_A4] offset aBadValueDForSy +
call sub_436A70  +
mov edx ds:dword_472088 +
mov eax ds:dword_471D44 +
jmp loc_40C5F0  +
mov ecx [ebx+8] +
mov [esp+0A4h+var_74] ecx +
jmp loc_40C5F0  +
mov ecx ds:dword_472068 +
test ecx ecx +
jz loc_40BACB  +
mov eax [esp+0A4h+var_74] +
test eax eax +
jz loc_40BACB  +
mov esi [esp+0A4h+var_74] +
mov edx edi +
xor eax eax +
mov [esp+0A4h+var_94] offset aSymbolInformat +
xor ebx ebx +
mov [esp+0A4h+var_98] 0 +
mov [esp+0A4h+var_A4] 1 +
mov [esp+0A4h+var_9C] esi +
mov [esp+0A4h+var_A0] 0 +
call sub_403CC0  +
test eax eax +
mov edi eax +
jz loc_40B980  +
mov [esp+0A4h+var_A4] esi +
call malloc  +
mov esi eax +
test esi esi +
mov ds:dword_47206C eax +
mov eax [esp+0A4h+var_74] +
jz loc_40D05B  +
shr eax 2 +
mov ebx edi +
mov ds:dword_472064 eax +
lea eax [esi+eax*4] +
cmp esi eax +
jnb loc_40C717  +
mov [esp+0A4h+var_A4] ebx +
add esi 4 +
mov [esp+0A4h+var_A0] 2 +
call ds:dword_472C94  +
mov [esi-4] ax +
lea eax [ebx+2] +
add ebx 4 +
mov [esp+0A4h+var_A0] 2 +
mov [esp+0A4h+var_A4] eax +
call ds:dword_472C94  +
mov edx ds:dword_472064 +
mov [esi-2] ax +
mov eax ds:dword_47206C +
lea eax [eax+edx*4] +
cmp esi eax +
jb loc_40C6D2  +
mov [esp+0A4h+var_A4] edi +
call free  +
jmp loc_40BACB  +
mov edx ds:dword_472088 +
mov eax ds:dword_471D44 +
mov ecx edx +
shl ecx 4 +
mov esi eax +
add ecx eax +
cmp eax ecx +
jb loc_40C753  +
jmp loc_40BAB1  +
mov ecx edx +
add esi 10h +
shl ecx 4 +
add ecx eax +
cmp esi ecx +
jnb loc_40BAB1  +
mov ecx [esi] +
xor ecx 6 +
or ecx [esi+4] +
jnz loc_40C741  +
mov edx [esi+8] +
mov eax edi +
mov ecx [esi+0Ch] +
mov [esp+0A4h+var_A4] 0 +
mov [esp+0A4h+var_A0] 0 +
mov ds:dword_471E90 edx +
mov ds:dword_471E94 ecx +
call sub_40B840  +
mov ebp ds:dword_4720AC +
cdq   +
test ebp ebp +
mov [esp+0A4h+var_44] eax +
mov [esp+0A4h+var_40] edx +
jz loc_40CB63  +
mov ecx ds:dword_4720A8 +
xor ebx ebx +
sub ecx eax +
sbb ebx edx +
mov [esp+0A4h+var_3C] ecx +
mov [esp+0A4h+var_38] ebx +
mov ebx ds:dword_471CF0 +
test ebx ebx +
jz loc_40C951  +
mov eax ds:dword_472078 +
mov ecx offset dword_472074 +
lea edx [esp+0A4h+var_5C] +
mov [esp+0A4h+var_24] 10h +
mov [esp+0A4h+var_20] 0 +
mov [esp+0A4h+var_5C] eax +
mov eax edi +
call sub_4042C0  +
mov ecx ds:dword_472074 +
mov ds:dword_472070 eax +
mov edx ds:dword_472088 +
mov eax ds:dword_471D44 +
test ecx ecx +
jnz loc_40C741  +
mov [esp+0A4h+var_A4] offset aUnableToDeterm +
call sub_436A70  +
mov edx ds:dword_472088 +
mov eax ds:dword_471D44 +
jmp loc_40C741  +
mov edx ds:dword_472088 +
mov eax ds:dword_471D44 +
mov ecx edx +
shl ecx 4 +
mov ebx eax +
add ecx eax +
cmp eax ecx +
jb loc_40C856  +
jmp loc_40BABE  +
mov ecx edx +
add ebx 10h +
shl ecx 4 +
add ecx eax +
cmp ebx ecx +
jnb loc_40BABE  +
mov ecx [ebx] +
xor ecx 5 +
or ecx [ebx+4] +
jnz loc_40C844  +
mov edx [ebx+8] +
mov eax edi +
mov ecx [ebx+0Ch] +
mov [esp+0A4h+var_A4] 0 +
mov [esp+0A4h+var_A0] 0 +
mov ds:dword_471E88 edx +
mov ds:dword_471E8C ecx +
call sub_40B840  +
mov ebp eax +
mov eax ds:dword_4720AC +
test eax eax +
jz loc_40CCD7  +
mov eax ds:dword_4720A8 +
sub eax ebp +
test eax eax +
jle loc_40CE46  +
mov esi eax +
mov edx edi +
mov [esp+0A4h+var_9C] eax +
sar eax 1Fh +
mov ecx ebp +
mov [esp+0A4h+var_98] eax +
xor eax eax +
mov [esp+0A4h+var_94] offset aDynamicStringT +
mov [esp+0A4h+var_A4] 1 +
mov [esp+0A4h+var_A0] 0 +
call sub_403CC0  +
xor edx edx +
test eax eax +
cmovnz edx esi +
mov ds:dword_472084 eax +
mov ds:dword_472080 edx +
jmp loc_40BABE  +
mov edx ds:dword_472088 +
mov [esp+0A4h+var_A0] eax +
mov [esp+0A4h+var_A4] offset aDynamicSecti_0 +
mov [esp+0A4h+var_9C] edx +
call printf  +
mov ebp ds:dword_471D38 +
test ebp ebp +
jz loc_40BAD8  +
jmp loc_40C19D  +
mov eax [esp+0A4h+var_74] +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov [esp+0A4h+var_A0] 0 +
mov [esp+0A4h+var_A4] eax +
mov eax edi +
call sub_40B840  +
mov edx ds:dword_472088 +
mov ds:dword_472068 eax +
mov eax ds:dword_471D44 +
jmp loc_40C5F0  +
mov eax ds:dword_472078 +
mov ecx offset dword_472074 +
lea edx [esp+0A4h+var_5C] +
mov [esp+0A4h+var_24] 18h +
mov [esp+0A4h+var_20] 0 +
mov [esp+0A4h+var_5C] eax +
mov eax edi +
call sub_404690  +
jmp loc_40C7ED  +
cmp ax 8 +
jnz loc_40C32D  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
add ecx 8FFFFFFFh +
adc ebx 0FFFFFFFFh +
cmp ebx 0 +
ja loc_40C32D  +
cmp ecx 2Eh +
ja loc_40C32D  +
shl ecx 2 +
jmp ds:off_448508[ecx]  +
mov esi [ebp+0Ch] +
mov edi [ebp+8] +
mov eax esi +
or eax edi +
jz loc_40D029  +
mov [esp+0A4h+var_74] 1 +
xor ebx ebx +
jmp loc_40C9DD  +
mov edi [ebp+8] +
mov esi [ebp+0Ch] +
mov ecx ebx +
mov eax 1 +
shl eax cl +
cdq   +
mov ecx eax +
and ecx edi +
and esi edx +
or esi ecx +
jz loc_40CA27  +
mov ecx [esp+0A4h+var_74] +
mov eax offset unk_44640B +
mov edi offset asc_44648A +
mov edx ds:off_461C80[ebx*4] +
mov [esp+0A4h+var_A4] offset aSS_4 +
test ecx ecx +
cmovz eax edi +
mov [esp+0A4h+var_9C] edx +
mov [esp+0A4h+var_A0] eax +
call printf  +
mov [esp+0A4h+var_74] 0 +
add ebx 1 +
cmp ebx 0Fh +
jnz loc_40C9D7  +
jmp loc_40C33D  +
mov esi ds:dword_472084 +
mov ecx [ebp+8] +
test esi esi +
jz loc_40D070  +
mov ebx [ebp+0Ch] +
mov eax ds:dword_472080 +
cmp ebx 0 +
ja loc_40CEDA  +
cmp ecx eax +
jnb loc_40CEDA  +
add ecx esi +
mov [esp+0A4h+var_A0] ecx +
mov [esp+0A4h+var_A4] offset aInterfaceVersi +
call printf  +
jmp loc_40C33D  +
mov eax [ebp+8] +
mov [esp+0A4h+var_60] eax +
lea eax [esp+0A4h+var_60] +
mov [esp+0A4h+var_A4] eax +
call gmtime  +
test eax eax +
jz loc_40D03A  +
mov edx [eax+0Ch] +
mov esi [eax] +
mov ebx [eax+4] +
mov ecx [eax+8] +
mov [esp+0A4h+var_90] edx +
mov [esp+0A4h+var_84] esi +
mov [esp+0A4h+var_88] ebx +
mov [esp+0A4h+var_8C] ecx +
mov edi [eax+10h] +
lea edx [edi+1] +
mov [esp+0A4h+var_94] edx +
mov eax [eax+14h] +
mov [esp+0A4h+var_9C] offset a04u02u02ut02u0 +
mov [esp+0A4h+var_A0] 14h +
add eax 76Ch +
mov [esp+0A4h+var_98] eax +
lea eax [esp+0A4h+var_5C] +
mov [esp+0A4h+var_A4] eax +
call sub_402590  +
lea eax [esp+0A4h+var_5C] +
mov [esp+0A4h+var_A0] eax +
mov [esp+0A4h+var_A4] offset aTimeStampS +
call printf  +
jmp loc_40C33D  +
mov eax [ebp+8] +
mov ecx 1 +
mov edx [ebp+0Ch] +
call sub_4055F0  +
jmp loc_40C33D  +
mov [esp+0A4h+var_A0] esi +
mov [esp+0A4h+var_A4] offset aLibrarySonameS +
call printf  +
jmp loc_40C33D  +
mov [esp+0A4h+var_A0] esi +
mov [esp+0A4h+var_A4] offset aLibraryRpathS +
call printf  +
jmp loc_40C33D  +
test ecx ecx +
mov ebx ebp +
mov ebp [esp+0A4h+var_68] +
jz loc_40CE62  +
test ecx ecx +
jnz loc_40CB53  +
mov [esp+0A4h+var_A4] 20h +
call putchar  +
xor ecx ecx +
mov eax edi +
mov edx ebx +
call sub_4055F0  +
jmp loc_40C33D  +
mov [esp+0A4h+var_9C] 2 +
mov [esp+0A4h+var_A0] 0 +
mov [esp+0A4h+var_A4] edi +
call fseek  +
test eax eax +
jnz loc_40CEB8  +
mov [esp+0A4h+var_A4] edi +
call ftell  +
cdq   +
sub eax [esp+0A4h+var_44] +
sbb edx [esp+0A4h+var_40] +
mov [esp+0A4h+var_3C] eax +
mov [esp+0A4h+var_38] edx +
jmp loc_40C7B0  +
mov [esp+0A4h+var_A4] offset aConfigurationF +
call printf  +
jmp loc_40C083  +
mov [esp+0A4h+var_A4] offset aAuditLibrary +
call printf  +
jmp loc_40C083  +
mov [esp+0A4h+var_A4] offset aSymintpose +
xor ebx 800000h +
call printf  +
jmp loc_40C2CC  +
mov [esp+0A4h+var_A4] offset aNoreloc +
xor ebx 400000h +
call printf  +
jmp loc_40C2C0  +
mov [esp+0A4h+var_A4] offset aEdited_0 +
xor ebx 200000h +
call printf  +
jmp loc_40C2B4  +
mov [esp+0A4h+var_A4] offset aNohdr +
xor ebx 100000h +
call printf  +
jmp loc_40C2A8  +
mov [esp+0A4h+var_A4] offset aNoksyms +
xor ebx 80000h +
call printf  +
jmp loc_40C29C  +
mov [esp+0A4h+var_A4] offset aIgnmuldef +
xor ebx 40000h +
call printf  +
jmp loc_40C290  +
mov [esp+0A4h+var_A4] offset aNodirect +
xor ebx 20000h +
call printf  +
jmp loc_40C284  +
mov [esp+0A4h+var_A4] offset aDisprelpnd +
xor ebx 10000h +
call printf  +
jmp loc_40C278  +
mov [esp+0A4h+var_A4] offset aPie +
xor ebx 8000000h +
call printf  +
jmp loc_40C2FC  +
mov [esp+0A4h+var_A4] offset aStub +
xor ebx 4000000h +
call printf  +
jmp loc_40C2F0  +
mov [esp+0A4h+var_A4] offset aSingleton +
xor ebx 2000000h +
call printf  +
jmp loc_40C2E4  +
mov [esp+0A4h+var_A4] offset aGlobaudit +
xor ebx 1000000h +
call printf  +
jmp loc_40C2D8  +
mov [esp+0A4h+var_9C] 2 +
mov [esp+0A4h+var_A0] 0 +
mov [esp+0A4h+var_A4] edi +
call fseek  +
test eax eax +
jnz loc_40CEC9  +
mov [esp+0A4h+var_A4] edi +
call ftell  +
sub eax ebp +
jmp loc_40C89E  +
mov [esp+0A4h+var_A4] offset aDispreldne +
xor bh 80h +
call printf  +
jmp loc_40C26C  +
mov [esp+0A4h+var_A4] offset aOrigin_0 +
xor bl 80h +
call printf  +
jmp loc_40C223  +
mov [esp+0A4h+var_A4] offset aNoopen +
xor ebx 40h +
call printf  +
jmp loc_40C21A  +
mov [esp+0A4h+var_A4] offset aInitfirst +
xor ebx 20h +
call printf  +
jmp loc_40C211  +
mov [esp+0A4h+var_A4] offset aLoadfltr +
xor ebx 10h +
call printf  +
jmp loc_40C208  +
mov [esp+0A4h+var_A4] offset aNodelete +
xor ebx 8 +
call printf  +
jmp loc_40C1FF  +
mov [esp+0A4h+var_A4] offset aGroup_0 +
xor ebx 4 +
call printf  +
jmp loc_40C1F6  +
mov [esp+0A4h+var_A4] offset aGlobal_0 +
xor ebx 2 +
call printf  +
jmp loc_40C1ED  +
mov [esp+0A4h+var_A4] offset aNow +
xor ebx 1 +
call printf  +
jmp loc_40C1E4  +
mov [esp+0A4h+var_A4] offset aNodeflib +
xor bh 8 +
call printf  +
jmp loc_40C248  +
mov [esp+0A4h+var_A4] offset aInterpose +
xor bh 4 +
call printf  +
jmp loc_40C23F  +
mov [esp+0A4h+var_A4] offset aTrans +
xor bh 2 +
call printf  +
jmp loc_40C236  +
mov [esp+0A4h+var_A4] offset aDirect +
xor bh 1 +
call printf  +
jmp loc_40C22C  +
mov [esp+0A4h+var_A4] offset aConfalt +
xor bh 20h +
call printf  +
jmp loc_40C25A  +
mov [esp+0A4h+var_A4] offset aNodump +
xor bh 10h +
call printf  +
jmp loc_40C251  +
mov [esp+0A4h+var_A4] offset aEndfiltee +
xor bh 40h +
call printf  +
jmp loc_40C263  +
mov [esp+0A4h+var_A4] offset aUnableToDete_0 +
call sub_436A70  +
mov edx ds:dword_472088 +
mov eax ds:dword_471D44 +
jmp loc_40C844  +
mov eax edi +
or eax ebx +
jnz loc_40CB43  +
jmp loc_40C33D  +
mov edx [ebp+0Ch] +
mov ecx 4 +
mov eax [ebp+8] +
call sub_4055F0  +
mov [esp+0A4h+var_A4] offset asc_44841C +
call printf  +
mov eax [ebp+8] +
mov ecx 4 +
mov edx [ebp+0Ch] +
add eax 18h +
adc edx 0 +
call sub_4055F0  +
jmp loc_40C33D  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
call sub_4063B0  +
jmp loc_40C33D  +
mov [esp+0A4h+var_A4] offset aUnableToSeek_1 +
call sub_436A70  +
jmp loc_40CB83  +
mov [esp+0A4h+var_A4] offset aUnableToSeek_2 +
call sub_436A70  +
jmp loc_40CCF7  +
mov eax ebx +
mov [esp+0A4h+var_98] eax +
lea eax [esp+0A4h+var_5C] +
mov [esp+0A4h+var_9C] ecx +
mov [esp+0A4h+var_A0] offset a016i64x_0 +
mov [esp+0A4h+var_A4] eax +
call sprintf  +
lea eax [esp+0A4h+var_5C] +
mov [esp+0A4h+var_A0] eax +
mov [esp+0A4h+var_A4] offset aCorruptS +
call printf  +
jmp loc_40C33D  +
mov [esp+0A4h+var_A4] offset aNop0bufs +
call printf  +
mov eax [ebp+8] +
jmp loc_40BED2  +
mov [esp+0A4h+var_A4] offset aCall_debug +
call printf  +
mov eax [ebp+8] +
jmp loc_40BECA  +
mov [esp+0A4h+var_A4] offset aImgsta +
call printf  +
mov eax [ebp+8] +
jmp loc_40BEF6  +
mov [esp+0A4h+var_A4] offset aUpcalls +
call printf  +
mov eax [ebp+8] +
jmp loc_40BEEE  +
mov [esp+0A4h+var_A4] offset aMkthreads +
call printf  +
mov eax [ebp+8] +
jmp loc_40BEE6  +
mov [esp+0A4h+var_A4] offset aP0image +
call printf  +
mov eax [ebp+8] +
jmp loc_40BEDA  +
mov [esp+0A4h+var_A4] offset aSignatures +
call printf  +
mov eax [ebp+8] +
jmp loc_40BF3C  +
mov [esp+0A4h+var_A4] offset aDbg_in_dsf +
call printf  +
mov eax [ebp+8] +
jmp loc_40BF33  +
mov [esp+0A4h+var_A4] offset aTbk_in_dsf +
call printf  +
mov eax [ebp+8] +
jmp loc_40BF2A  +
mov [esp+0A4h+var_A4] offset aDbg_in_img +
call printf  +
mov eax [ebp+8] +
jmp loc_40BF21  +
mov [esp+0A4h+var_A4] offset aTbk_in_img +
call printf  +
mov eax [ebp+8] +
jmp loc_40BF18  +
mov [esp+0A4h+var_A4] offset aExe_init +
call printf  +
mov eax [ebp+8] +
jmp loc_40BF0F  +
mov [esp+0A4h+var_A4] offset aMain +
call printf  +
mov eax [ebp+8] +
jmp loc_40BF06  +
mov [esp+0A4h+var_A4] offset aInitialize +
call printf  +
mov eax [ebp+8] +
jmp loc_40BEFE  +
mov [esp+0A4h+var_A4] offset aNone_3 +
call printf  +
jmp loc_40C33D  +
lea eax [esp+0A4h+var_5C] +
mov [esp+0A4h+var_9C] offset aCorrupt +
mov [esp+0A4h+var_A0] 14h +
mov [esp+0A4h+var_A4] eax +
call sub_402590  +
jmp loc_40CADD  +
mov [esp+0A4h+var_A0] eax +
mov [esp+0A4h+var_A4] offset aOutOfMemoryA_7 +
call sub_436A70  +
jmp loc_40B980  +
mov eax [ebp+0Ch] +
jmp loc_40CEDC  +
cmp [esp+0A4h+var_74] 6FFFFEFAh +
jnb loc_40C027  +
cmp [esp+0A4h+var_70] 0 +
jbe loc_40D237  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
mov eax ecx +
xor eax 6FFFFEF5h +
or eax ebx +
jnz loc_40BE10  +
mov eax [ebp+8] +
test esi esi +
mov edx [ebp+0Ch] +
mov ds:dword_471E40 eax +
mov ds:dword_471E44 edx +
jz loc_40BB80  +
jmp loc_40C333  +
cmp [esp+0A4h+var_74] 13h +
ja loc_40D119  +
cmp [esp+0A4h+var_70] 0 +
jbe loc_40D17A  +
mov ecx [esp+0A4h+var_74] +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov ds:dword_471E60[ecx*8] eax +
mov ds:dword_471E64[ecx*8] edx +
test esi esi +
jz loc_40BB80  +
mov eax [ebp+8] +
mov ecx 3 +
mov edx [ebp+0Ch] +
call sub_4055F0  +
mov [esp+0A4h+var_A4] offset aBytes +
call puts  +
jmp loc_40BB80  +
mov edx [esp+0A4h+var_70] +
mov eax [esp+0A4h+var_74] +
cmp edx 0 +
ja loc_40BCFB  +
cmp eax 1Ah +
jbe loc_40D150  +
mov edx [esp+0A4h+var_70] +
mov eax [esp+0A4h+var_74] +
cmp edx 0 +
ja loc_40BCFB  +
cmp eax 1Ch +
jbe loc_40D0F0  +
jmp loc_40BCFB  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40BF90  +
cmp [esp+0A4h+var_74] 19h +
jnb loc_40BF90  +
cmp [esp+0A4h+var_70] 0 +
jbe loc_40D1EB  +
test esi esi +
jz loc_40BB80  +
jmp loc_40C33D  +
cmp [esp+0A4h+var_74] 12h +
nop   +
jnb loc_40D0D8  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40BCFB  +
cmp [esp+0A4h+var_74] 7 +
ja loc_40D1D0  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40BCFB  +
cmp [esp+0A4h+var_74] 3 +
jnb loc_40BCFB  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40D0D8  +
cmp [esp+0A4h+var_74] 1 +
jbe loc_40BCFB  +
jmp loc_40D0D8  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40BCFB  +
cmp [esp+0A4h+var_74] 0Bh +
jbe loc_40D0D8  +
jmp loc_40BCFB  +
cmp [esp+0A4h+var_74] 17h +
ja loc_40D16D  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40BCFB  +
cmp [esp+0A4h+var_74] 15h +
jnb loc_40BCFB  +
mov eax [ebp+8] +
test esi esi +
mov edx [ebp+0Ch] +
mov ds:dword_471F00 eax +
mov ds:dword_471F04 edx +
jz loc_40BB80  +
call sub_4032B0  +
mov [esp+0A4h+var_A4] eax +
call puts  +
jmp loc_40BB80  +
cmp [esp+0A4h+var_74] 6FFFFDFBh +
ja loc_40D2D2  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40D0F0  +
cmp [esp+0A4h+var_74] 6FFFFDF9h +
jnb loc_40D0F0  +
mov ecx eax +
xor eax 6FFFFDF5h +
or eax edx +
jnz loc_40D3D6  +
test esi esi +
jz loc_40BB80  +
mov eax [ebp+8] +
mov [esp+0A4h+var_5C] eax +
lea eax [esp+0A4h+var_5C] +
mov [esp+0A4h+var_A4] eax +
call gmtime  +
test eax eax +
jz loc_40D409  +
mov esi [eax] +
mov ebx [eax+4] +
mov ecx [eax+8] +
mov edx [eax+0Ch] +
mov [esp+0A4h+var_8C] esi +
mov [esp+0A4h+var_90] ebx +
mov [esp+0A4h+var_94] ecx +
mov [esp+0A4h+var_98] edx +
mov edi [eax+10h] +
lea edx [edi+1] +
mov [esp+0A4h+var_9C] edx +
mov eax [eax+14h] +
mov [esp+0A4h+var_A4] offset a04u02u02ut02_0 +
add eax 76Ch +
mov [esp+0A4h+var_A0] eax +
call printf  +
jmp loc_40BB80  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40D091  +
cmp [esp+0A4h+var_74] 6FFFFDFFh +
ja loc_40D091  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40BF90  +
cmp [esp+0A4h+var_74] 6FFFFDFEh +
jnb loc_40BF90  +
mov ecx [esp+0A4h+var_74] +
mov ebx [esp+0A4h+var_70] +
mov eax ecx +
xor eax 6FFFFDFCh +
or eax ebx +
jz loc_40D370  +
mov eax ecx +
xor eax 6FFFFDFDh +
or eax ebx +
jnz loc_40BE10  +
test esi esi +
jz loc_40BB80  +
mov [esp+0A4h+var_A4] offset aFlags_2 +
call printf  +
mov ebx [ebp+8] +
mov eax ebx +
or eax [ebp+0Ch] +
jz loc_40C470  +
test bl 1 +
jnz loc_40D3B4  +
test bl 2 +
jz loc_40C2FC  +
mov [esp+0A4h+var_A4] offset aGroupperm +
xor ebx 2 +
call printf  +
jmp loc_40C2FC  +
test esi esi +
jz loc_40BB80  +
mov [esp+0A4h+var_A4] offset aFlags_2 +
call printf  +
mov ebx [ebp+8] +
mov eax ebx +
or eax [ebp+0Ch] +
jz loc_40C470  +
test bl 1 +
jnz loc_40D3C5  +
test bl 2 +
jz loc_40C2FC  +
mov [esp+0A4h+var_A4] offset aConfexp +
xor ebx 2 +
call printf  +
jmp loc_40C2FC  +
mov [esp+0A4h+var_A4] offset aLazyload +
xor ebx 1 +
call printf  +
jmp loc_40D34D  +
mov [esp+0A4h+var_A4] offset aParinit +
xor ebx 1 +
call printf  +
jmp loc_40D397  +
cmp [esp+0A4h+var_70] 0 +
ja loc_40BE10  +
cmp [esp+0A4h+var_74] 6FFFFDF5h +
jb loc_40BE10  +
cmp edx 0 +
ja loc_40BE10  +
cmp ecx 6FFFFDF7h +
ja loc_40BE10  +
jmp loc_40D0F0  +
mov eax [esp+0A4h+var_5C] +
mov [esp+0A4h+var_A4] offset aCorruptTimeVal +
mov [esp+0A4h+var_A0] eax +
call printf  +
jmp loc_40BB80  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov edx ds:dword_471D9C +
test edx edx +
jnz loc_40D470  +
mov eax ds:dword_471D7C +
or eax ds:dword_471D78 +
jnz loc_40DCFB  +
mov eax ds:dword_471D1C +
test eax eax +
jnz loc_40DCD3  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax ds:dword_471D1C +
test eax eax +
jz loc_40D488  +
mov eax ds:dword_471D10 +
test eax eax +
jz loc_40DD11  +
mov eax edi +
call sub_40B4B0  +
test eax eax +
jz loc_40D45F  +
mov eax ds:dword_471D1C +
xor esi esi +
test eax eax +
jnz loc_40DC96  +
mov ebp ds:dword_471D9C +
mov ds:dword_472098 0 +
mov ebx ds:dword_471D48 +
mov ds:dword_472090 0 +
mov ds:dword_472094 0 +
test ebp ebp +
jz loc_40D54F  +
xor ebp ebp +
mov [esp+5Ch+var_44] edi +
jmp loc_40D523  +
mov [esp+5Ch+var_54] 0 +
mov eax [ebx+8] +
add eax ds:dword_4720AC +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_44] +
mov [esp+5Ch+var_5C] eax +
call fseek  +
test eax eax +
mov esi eax +
jz loc_40DA10  +
mov [esp+5Ch+var_5C] offset aUnableToFindPr +
call sub_436A70  +
mov esi ds:dword_471D1C +
add ebp 1 +
add ebx 38h +
cmp ds:dword_471D9C ebp +
jbe loc_40D54F  +
test esi esi +
jnz loc_40D961  +
mov eax [ebx] +
cmp eax 2 +
jz loc_40D831  +
cmp eax 3 +
jz loc_40D4D8  +
mov esi ds:dword_471D1C +
add ebp 1 +
add ebx 38h +
cmp ds:dword_471D9C ebp +
ja loc_40D523  +
test esi esi +
jz loc_40D824  +
mov ebp ds:dword_471D4C +
test ebp ebp +
jz loc_40D824  +
mov edi ds:dword_47207C +
test edi edi +
jz loc_40D824  +
mov [esp+5Ch+var_5C] offset aSectionToSegme +
call puts  +
mov [esp+5Ch+var_5C] offset aSegmentSection +
call puts  +
mov esi ds:dword_471D9C +
test esi esi +
jz loc_40D824  +
mov [esp+5Ch+var_30] 0 +
mov [esp+5Ch+var_40] 0 +
lea esi [esi+0] +
mov eax ds:dword_471D4C +
mov edi 1 +
mov ebx [esp+5Ch+var_30] +
mov [esp+5Ch+var_5C] offset a2_2d +
add ebx ds:dword_471D48 +
lea esi [eax+48h] +
mov eax [esp+5Ch+var_40] +
mov ebp ebx +
mov [esp+5Ch+var_58] eax +
call printf  +
cmp ds:dword_471DA4 1 +
jbe loc_40D7F2  +
lea esi [esi+0] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+5Ch+var_4C] ebx +
jnz loc_40DD90  +
mov ecx [ebp+0] +
lea edx [ecx-6] +
cmp edx 1 +
jbe loc_40D7E0  +
and eax 2 +
mov [esp+5Ch+var_44] eax +
jnz loc_40D63B  +
mov eax [ebp+0] +
lea edx [eax-6474E550h] +
cmp edx 2 +
jbe loc_40D7E0  +
sub eax 1 +
cmp eax 1 +
jbe loc_40D7E0  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+5Ch+var_34] eax +
jz loc_40D6B7  +
mov edx [esi+1Ch] +
mov ebx [ebp+0Ch] +
mov eax [esi+18h] +
mov ecx [ebp+8] +
cmp edx ebx +
jb loc_40D7E0  +
ja loc_40D665  +
cmp eax ecx +
jb loc_40D7E0  +
sub eax ecx +
sbb edx ebx +
mov [esp+5Ch+var_3C] eax +
mov eax [ebp+20h] +
mov [esp+5Ch+var_38] edx +
mov edx [ebp+24h] +
mov ecx eax +
add ecx 0FFFFFFFFh +
mov ebx edx +
adc ebx 0FFFFFFFFh +
cmp [esp+5Ch+var_38] ebx +
ja loc_40D7E0  +
jb loc_40D697  +
cmp [esp+5Ch+var_3C] ecx +
ja loc_40D7E0  +
mov ecx [esp+5Ch+var_3C] +
mov ebx [esp+5Ch+var_38] +
add ecx [esi+20h] +
adc ebx [esi+24h] +
cmp edx ebx +
jb loc_40D7E0  +
ja loc_40D6B7  +
cmp eax ecx +
jb loc_40D7E0  +
mov ebx [esp+5Ch+var_44] +
test ebx ebx +
lea esi [esi+0] +
jz loc_40D741  +
mov ebx [esi+14h] +
mov edx [ebp+14h] +
mov ecx [esi+10h] +
mov eax [ebp+10h] +
cmp ebx edx +
jb loc_40D7E0  +
ja loc_40D6E0  +
cmp ecx eax +
jb loc_40D7E0  +
sub ecx eax +
mov eax [ebp+28h] +
sbb ebx edx +
mov edx [ebp+2Ch] +
mov [esp+5Ch+var_3C] ecx +
mov [esp+5Ch+var_38] ebx +
mov ecx eax +
add ecx 0FFFFFFFFh +
mov ebx edx +
adc ebx 0FFFFFFFFh +
cmp [esp+5Ch+var_38] ebx +
ja loc_40D7E0  +
jb loc_40D712  +
cmp [esp+5Ch+var_3C] ecx +
ja loc_40D7E0  +
mov ecx [esp+5Ch+var_4C] +
test ecx ecx +
jz loc_40D725  +
cmp [esp+5Ch+var_34] 8 +
jz loc_40E11B  +
mov ecx [esi+20h] +
mov ebx [esi+24h] +
add ecx [esp+5Ch+var_3C] +
adc ebx [esp+5Ch+var_38] +
cmp edx ebx +
jb loc_40D7E0  +
jbe loc_40E0A6  +
cmp dword ptr [ebp+0] 2 +
jnz loc_40DDF1  +
mov eax [esi+24h] +
or eax [esi+20h] +
jnz loc_40DDF1  +
mov eax [ebp+28h] +
mov [esp+5Ch+var_4C] eax +
mov eax [ebp+2Ch] +
mov ecx eax +
or ecx [esp+5Ch+var_4C] +
mov [esp+5Ch+var_3C] eax +
jz loc_40DDF1  +
cmp [esp+5Ch+var_34] 8 +
jz loc_40D7A2  +
mov ebx [esi+1Ch] +
mov ecx [esi+18h] +
mov edx ebx +
mov ebx [ebp+0Ch] +
mov eax ecx +
mov ecx [ebp+8] +
cmp edx ebx +
jb loc_40D7E0  +
ja loc_40D792  +
cmp eax ecx +
jbe loc_40D7E0  +
sub eax ecx +
sbb edx ebx +
cmp edx [ebp+24h] +
ja loc_40D7E0  +
jb loc_40D7A2  +
cmp eax [ebp+20h] +
jnb loc_40D7E0  +
mov eax [esp+5Ch+var_44] +
test eax eax +
jz loc_40DDF1  +
mov edx [esi+14h] +
mov ebx [ebp+14h] +
mov eax [esi+10h] +
mov ecx [ebp+10h] +
cmp edx ebx +
jb loc_40D7E0  +
ja loc_40D7C4  +
cmp eax ecx +
jbe loc_40D7E0  +
sub eax ecx +
sbb edx ebx +
cmp [esp+5Ch+var_3C] edx +
jb loc_40D7E0  +
ja loc_40DDF1  +
cmp [esp+5Ch+var_4C] eax +
ja loc_40DDF1  +
nop   +
add edi 1 +
add esi 48h +
cmp ds:dword_471DA4 edi +
ja loc_40D5F0  +
mov eax ds:_iob +
mov [esp+5Ch+var_5C] 0Ah +
add eax 20h +
mov [esp+5Ch+var_58] eax +
call putc  +
add [esp+5Ch+var_40] 1 +
mov eax [esp+5Ch+var_40] +
add [esp+5Ch+var_30] 38h +
cmp ds:dword_471D9C eax +
ja loc_40D5B0  +
add esp 5Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_472098 +
test eax eax +
jnz loc_40DC40  +
mov ecx [ebx+8] +
mov eax [ebx+20h] +
mov edx [ebx+24h] +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] ecx +
mov ds:dword_472090 eax +
mov ds:dword_472094 edx +
add eax [esp+5Ch+var_4C] +
adc edx [esp+5Ch+var_48] +
cmp edx ds:dword_4720A4 +
mov ds:dword_472098 ecx +
jb loc_40D886  +
ja loc_40D932  +
cmp eax ds:dword_4720A0 +
jnb loc_40D932  +
mov eax ds:dword_471D4C +
test eax eax +
jz loc_40D53B  +
mov eax offset a_dynamic +
call sub_402450  +
test eax eax +
jz loc_40DA94  +
mov edx [eax+24h] +
mov ecx [eax+20h] +
mov edi edx +
or edi ecx +
jz loc_40DA94  +
cmp dword ptr [eax+4] 8 +
jz loc_40E035  +
mov ds:dword_472094 edx +
mov edx [ebx+0Ch] +
mov eax [eax+18h] +
mov ds:dword_472090 ecx +
xor ecx ecx +
cmp ecx edx +
mov [esp+5Ch+var_40] eax +
mov ds:dword_472098 eax +
mov eax [ebx+8] +
jb loc_40DCE4  +
cmp [esp+5Ch+var_40] eax +
jb loc_40DCE4  +
mov esi eax +
mov edi edx +
add esi [ebx+20h] +
adc edi [ebx+24h] +
cmp ecx edi +
jb loc_40D909  +
cmp [esp+5Ch+var_40] esi +
ja loc_40DCE4  +
cmp ecx edx +
jb loc_40D53B  +
cmp [esp+5Ch+var_40] eax +
jbe loc_40D53B  +
mov [esp+5Ch+var_5C] offset aThe_dynamicSec +
call sub_437070  +
mov esi ds:dword_471D1C +
jmp loc_40D515  +
mov [esp+5Ch+var_5C] offset aTheDynamicSegm +
call sub_436A70  +
mov ds:dword_472090 0 +
mov ds:dword_472094 0 +
mov ds:dword_472098 0 +
jmp loc_40D886  +
mov eax [ebx] +
cmp eax 5 +
jz loc_40E054  +
ja loc_40DAC0  +
cmp eax 2 +
jz loc_40E05E  +
nop   +
lea esi [esi+0] +
jbe loc_40DC76  +
cmp eax 3 +
mov edx offset aInterp +
jz loc_40DAF0  +
cmp eax 4 +
mov edx offset aNote +
jz loc_40DAF0  +
lea esi [eax-70000000h] +
cmp esi 0FFFFFFFh +
ja loc_40E0B5  +
movzx edx ds:word_471D92 +
cmp dx 28h +
jz loc_40E22C  +
jbe loc_40E12E  +
cmp dx 8Ch +
jz loc_40E217  +
cmp dx 0B7h +
jz loc_40E202  +
cmp dx 32h +
jz loc_40E1DD  +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] offset aLoprocLx +
mov [esp+5Ch+var_5C] offset unk_4712C0 +
call sprintf  +
mov edx offset unk_4712C0 +
jmp loc_40DAF0  +
lea eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_50] 103h +
mov [esp+5Ch+var_54] offset aDs +
mov [esp+5Ch+var_58] 20h +
mov [esp+5Ch+var_5C] eax +
call sub_402590  +
cmp eax 1Fh +
ja loc_40DFB5  +
lea eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_44] +
mov [esp+5Ch+var_54] offset byte_471F60 +
mov ds:byte_471F60 0 +
mov [esp+5Ch+var_5C] eax +
call fscanf  +
test eax eax +
jle loc_40E072  +
mov eax ds:dword_471D1C +
test eax eax +
jz loc_40D515  +
mov [esp+5Ch+var_58] offset byte_471F60 +
mov [esp+5Ch+var_5C] offset aRequestingProg +
call printf  +
mov esi ds:dword_471D1C +
jmp loc_40D541  +
cmp ds:word_471D92 32h +
jz loc_40E023  +
mov [esp+5Ch+var_5C] offset aNo_dynamicSect +
call sub_436A70  +
mov esi ds:dword_471D1C +
jmp loc_40D515  +
cmp eax 6474E550h +
jz loc_40E068  +
ja loc_40DC51  +
cmp eax 6 +
mov edx offset aPhdr +
jz loc_40DAF0  +
cmp eax 7 +
mov edx offset aTls +
jnz loc_40D9A2  +
lea esi [esi+0] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] offset a14_14s +
call printf  +
mov esi ds:dword_471CF0 +
mov eax [ebx+8] +
test esi esi +
jnz loc_40DE20  +
mov ecx ds:dword_472C54 +
mov edx [ebx+0Ch] +
test ecx ecx +
jz loc_40DEE0  +
test edx edx +
jz loc_40DFF9  +
mov ecx 5 +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 20h +
call putchar  +
mov edx [ebx+14h] +
mov ecx 5 +
mov eax [ebx+10h] +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 20h +
call putchar  +
mov edx [ebx+1Ch] +
mov ecx 5 +
mov eax [ebx+18h] +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 20h +
call putchar  +
mov edx [ebx+24h] +
mov eax [ebx+20h] +
test edx edx +
jz loc_40DFC6  +
mov ecx 5 +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 20h +
call putchar  +
mov edx [ebx+2Ch] +
mov eax [ebx+28h] +
test edx edx +
jz loc_40DFE4  +
mov ecx 5 +
call sub_4055F0  +
mov eax [ebx+4] +
mov [esp+5Ch+var_5C] offset aCCC +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFDBh +
add ecx 45h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFC9h +
add edx 57h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFCEh +
add eax 52h +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_58] eax +
call printf  +
mov edx [ebx+34h] +
mov eax [ebx+30h] +
test edx edx +
jz loc_40E00E  +
mov ecx 4 +
call sub_4055F0  +
mov eax ds:dword_471D1C +
test eax eax +
jz loc_40D52B  +
mov eax ds:_iob +
mov [esp+5Ch+var_5C] 0Ah +
add eax 20h +
mov [esp+5Ch+var_58] eax +
call putc  +
jmp loc_40D52B  +
mov [esp+5Ch+var_5C] offset aMoreThanOneDyn +
call sub_436A70  +
jmp loc_40D83E  +
cmp eax 6474E551h +
mov edx offset aGnu_stack +
jz loc_40DAF0  +
cmp eax 6474E552h +
mov edx offset aGnu_relro +
jz loc_40DAF0  +
jmp loc_40D9A2  +
test eax eax +
mov edx offset aNull +
jz loc_40DAF0  +
cmp eax 1 +
mov edx offset aLoad +
jz loc_40DAF0  +
jmp loc_40D9A2  +
mov [esp+5Ch+var_5C] offset aProgramHeade_0 +
call puts  +
mov eax ds:dword_471CF0 +
test eax eax +
jnz loc_40E104  +
mov eax ds:dword_472C54 +
test eax eax +
jz loc_40E083  +
mov [esp+5Ch+var_5C] offset aTypeOffsetVirt +
call puts  +
mov esi ds:dword_471D1C +
jmp loc_40D4A2  +
mov [esp+5Ch+var_5C] offset aThereAreNoProg +
call puts  +
jmp loc_40D45F  +
mov [esp+5Ch+var_5C] offset aThe_dynamicS_0 +
call sub_437070  +
mov esi ds:dword_471D1C +
jmp loc_40D515  +
mov [esp+5Ch+var_5C] offset aPossiblyCorr_0 +
call sub_437070  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax ds:word_471D90 +
call sub_40B310  +
mov [esp+5Ch+var_5C] offset aElfFileTypeIsS +
mov [esp+5Ch+var_58] eax +
call printf  +
mov [esp+5Ch+var_5C] offset aEntryPoint +
call printf  +
mov edx ds:dword_471D74 +
mov ecx 4 +
mov eax ds:dword_471D70 +
call sub_4055F0  +
mov eax ds:dword_471D9C +
mov [esp+5Ch+var_5C] offset aThereAreDProgr +
mov [esp+5Ch+var_58] eax +
call printf  +
mov edx ds:dword_471D7C +
mov ecx 1 +
mov eax ds:dword_471D78 +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 0Ah +
call putchar  +
jmp loc_40D488  +
cmp dword ptr [esi+4] 8 +
jz loc_40DDD0  +
mov edx [ebp+0] +
cmp edx 7 +
jz loc_40D614  +
cmp edx 6474E552h +
jz loc_40D614  +
cmp edx 1 +
jz loc_40D614  +
add edi 1 +
add esi 48h +
cmp ds:dword_471DA4 edi +
ja loc_40D5F0  +
jmp loc_40D7F2  +
cmp dword ptr [ebp+0] 7 +
jz loc_40D614  +
add edi 1 +
add esi 48h +
cmp ds:dword_471DA4 edi +
ja loc_40D5F0  +
jmp loc_40D7F2  +
mov eax esi +
add edi 1 +
call sub_401C80  +
add esi 48h +
mov [esp+5Ch+var_5C] offset aS_14 +
mov [esp+5Ch+var_58] eax +
call printf  +
cmp ds:dword_471DA4 edi +
ja loc_40D5F0  +
jmp loc_40D7F2  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] offset a0x6_6lx +
call printf  +
mov eax [ebx+10h] +
mov [esp+5Ch+var_5C] offset a0x8_8lx +
mov [esp+5Ch+var_58] eax +
call printf  +
mov eax [ebx+18h] +
mov [esp+5Ch+var_5C] offset a0x8_8lx +
mov [esp+5Ch+var_58] eax +
call printf  +
mov eax [ebx+20h] +
mov [esp+5Ch+var_5C] offset a0x5_5lx +
mov [esp+5Ch+var_58] eax +
call printf  +
mov eax [ebx+28h] +
mov [esp+5Ch+var_5C] offset a0x5_5lx +
mov [esp+5Ch+var_58] eax +
call printf  +
mov eax [ebx+4] +
mov [esp+5Ch+var_5C] offset aCCC_0 +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFDBh +
add ecx 45h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFC9h +
add edx 57h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFCEh +
add eax 52h +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] eax +
call printf  +
mov eax [ebx+30h] +
mov [esp+5Ch+var_5C] offset aLx_1 +
mov [esp+5Ch+var_58] eax +
call printf  +
jmp loc_40DC15  +
mov ecx 5 +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 20h +
call putchar  +
mov edx [ebx+14h] +
mov ecx 5 +
mov eax [ebx+10h] +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 20h +
call putchar  +
mov edx [ebx+1Ch] +
mov ecx 5 +
mov eax [ebx+18h] +
call sub_4055F0  +
mov [esp+5Ch+var_5C] offset asc_4488AA +
call printf  +
mov edx [ebx+24h] +
mov ecx 5 +
mov eax [ebx+20h] +
call sub_4055F0  +
mov [esp+5Ch+var_5C] 20h +
call putchar  +
mov edx [ebx+2Ch] +
mov ecx 5 +
mov eax [ebx+28h] +
call sub_4055F0  +
mov eax [ebx+4] +
mov [esp+5Ch+var_5C] offset aCCC_1 +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFDBh +
add ecx 45h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFC9h +
add edx 57h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFCEh +
add eax 52h +
mov [esp+5Ch+var_50] ecx +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] eax +
call printf  +
mov eax [ebx+30h] +
xor ecx ecx +
mov edx [ebx+34h] +
call sub_4055F0  +
jmp loc_40DC15  +
mov [esp+5Ch+var_5C] offset aInternalErrorF +
call sub_436A70  +
jmp loc_40DA3D  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] offset a0x6_6lx +
call printf  +
mov edx [ebx+2Ch] +
mov eax [ebx+28h] +
test edx edx +
jnz loc_40DBAA  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] offset a0x6_6lx_0 +
call printf  +
jmp loc_40DBB4  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] offset a0x6_6lx +
call printf  +
jmp loc_40DB40  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] offset aLx_1 +
call printf  +
jmp loc_40DC15  +
cmp ds:byte_471D67 0Dh +
jnz loc_40DAA2  +
jmp loc_40D53B  +
mov ds:dword_472090 0 +
mov esi ds:dword_471D1C +
mov ds:dword_472094 0 +
jmp loc_40D515  +
mov edx offset aShlib +
jmp loc_40DAF0  +
mov edx offset aDynamic +
jmp loc_40DAF0  +
mov edx offset aGnu_eh_frame +
jmp loc_40DAF0  +
mov [esp+5Ch+var_5C] offset aUnableToReadPr +
call sub_436A70  +
jmp loc_40DA68  +
mov [esp+5Ch+var_5C] offset aTypeOffsetVi_0 +
call puts  +
mov [esp+5Ch+var_5C] offset aFilesizMemsizF +
call puts  +
mov esi ds:dword_471D1C +
jmp loc_40D4A2  +
cmp eax ecx +
jb loc_40D7E0  +
nop   +
jmp loc_40D741  +
lea esi [eax-60000000h] +
cmp esi 0FFFFFFFh +
ja loc_40E167  +
movzx edx ds:word_471D92 +
cmp dx 0Fh +
jz loc_40E1C7  +
cmp dx 32h +
jz loc_40E191  +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] offset aLoosLx +
mov [esp+5Ch+var_5C] offset unk_4712C0 +
call sprintf  +
mov edx offset unk_4712C0 +
jmp loc_40DAF0  +
mov [esp+5Ch+var_5C] offset aTypeOffsetVi_1 +
call puts  +
mov esi ds:dword_471D1C +
jmp loc_40D4A2  +
xor ecx ecx +
xor ebx ebx +
cmp dword ptr [ebp+0] 7 +
jnz loc_40D72B  +
jmp loc_40D725  +
cmp dx 0Ah +
jz loc_40E148  +
cmp dx 0Fh +
jz loc_40E241  +
cmp dx 8 +
jnz loc_40D9EB  +
cmp esi 3 +
ja loc_40D9EB  +
mov eax ds:off_44DF6C[esi*4] +
test eax eax +
jz loc_40D9EB  +
mov edx eax +
jmp loc_40DAF0  +
mov [esp+5Ch+var_50] eax +
mov [esp+5Ch+var_54] offset aUnknownLx +
mov [esp+5Ch+var_58] 20h +
mov [esp+5Ch+var_5C] offset unk_4712C0 +
call sub_402590  +
mov edx offset unk_4712C0 +
jmp loc_40DAF0  +
cmp eax 60000012h +
jz loc_40E260  +
jbe loc_40E24B  +
cmp eax 60000013h +
mov edx offset aHp_hsl_annot +
jz loc_40DAF0  +
cmp eax 60000014h +
mov edx offset aHp_stack +
jz loc_40DAF0  +
jmp loc_40E0E2  +
call sub_401FC0  +
test eax eax +
nop   +
jz loc_40E0E2  +
mov edx eax +
jmp loc_40DAF0  +
cmp eax 70000000h +
mov edx offset aIa_64_archext +
jz loc_40DAF0  +
cmp eax 70000001h +
mov edx offset aIa_64_unwind +
jz loc_40DAF0  +
jmp loc_40D9EB  +
cmp eax 70000000h +
mov edx offset aAarch64_archex +
jz loc_40DAF0  +
jmp loc_40D9EB  +
cmp eax 70000000h +
mov edx offset aC6000_phattr +
jz loc_40DAF0  +
jmp loc_40D9EB  +
cmp eax 70000001h +
mov edx offset aExidx +
jz loc_40DAF0  +
jmp loc_40D9EB  +
call sub_401FC0  +
jmp loc_40E158  +
cmp eax 60000000h +
mov edx offset aHp_tls +
jz loc_40DAF0  +
jmp loc_40E0E2  +
mov edx offset aHp_opt_annot +
jmp loc_40DAF0  +
***
push edi  +
mov ecx 0Eh +
push esi  +
xor ebp ebp +
push ebx  +
sub esp 0ACh +
mov ebx ds:dword_471D4C +
lea edx [esp+0B8h+var_50] +
mov edi edx +
mov edx ds:dword_471DA4 +
stos   +
xor edi edi +
test edx edx +
jnz loc_40E2BD  +
jmp loc_40F0A4  +
cmp eax 70000001h +
setz al  +
movzx eax al +
add ebp eax +
add edi 1 +
add ebx 48h +
cmp edx edi +
jbe loc_40E38B  +
mov eax [ebx+4] +
cmp eax 2 +
jnz loc_40E2A2  +
cmp [ebx+28h] edx +
jnb loc_40E2AF  +
mov esi ds:dword_471CF0 +
lea ecx [esp+0B8h+var_2C] +
mov edx ebx +
mov eax [esp+0B8h+arg_0] +
test esi esi +
jz loc_40F083  +
call sub_4042C0  +
mov [esp+0B8h+var_30] eax +
mov eax [ebx+28h] +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea esi [eax+edx*8] +
mov eax [esp+0B8h+var_20] +
test eax eax +
jz loc_40E328  +
mov [esp+0B8h+var_B8] offset aMultipleAuxill +
call sub_436A70  +
mov eax [esp+0B8h+var_20] +
mov [esp+0B8h+var_B8] eax +
call free  +
mov edx [esi+24h] +
mov eax [esi+20h] +
mov ecx [esi+18h] +
mov [esp+0B8h+var_A8] offset aStringTable +
mov [esp+0B8h+var_AC] edx +
mov edx [esp+0B8h+arg_0] +
mov [esp+0B8h+var_B0] eax +
xor eax eax +
mov [esp+0B8h+var_B8] 1 +
mov [esp+0B8h+var_B4] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+0B8h+var_20] eax +
jz loc_40F0B7  +
mov eax [esi+20h] +
mov edx ds:dword_471DA4 +
add edi 1 +
add ebx 48h +
mov [esp+0B8h+var_1C] eax +
cmp edx edi +
ja loc_40E2BD  +
test ebp ebp +
jz loc_40F0A4  +
mov [esp+0B8h+var_74] ebp +
mov edx [esp+0B8h+var_74] +
mov [esp+0B8h+var_7C] 0 +
test edx edx +
jz loc_40EACD  +
nop   +
lea esi [esi+0] +
mov ebx [esp+0B8h+var_7C] +
mov eax ds:dword_471D4C +
lea edx [ebx+ebx*8] +
lea eax [eax+edx*8] +
mov edi eax +
mov [esp+0B8h+var_90] eax +
mov eax ds:dword_471DA4 +
cmp ebx eax +
jnb loc_40E400  +
cmp dword ptr [edi+4] 70000001h +
jz loc_40EB08  +
mov edx [esp+0B8h+var_7C] +
mov ecx [esp+0B8h+var_90] +
jmp loc_40E3F2  +
cmp dword ptr [ecx+4] 70000001h +
jz loc_40EB00  +
add edx 1 +
add ecx 48h +
cmp edx eax +
jb loc_40E3E5  +
mov [esp+0B8h+var_7C] edx +
mov [esp+0B8h+var_B0] 1B5Bh +
mov [esp+0B8h+var_B4] offset a____Binutils_0 +
mov [esp+0B8h+var_B8] offset aUnwsecNull +
call sub_440120  +
mov ebp [esp+0B8h+var_7C] +
mov [esp+0B8h+var_90] 0 +
mov eax [esp+0B8h+var_90] +
add [esp+0B8h+var_7C] 1 +
test byte ptr [eax+9] 2 +
jnz loc_40E53C  +
mov eax ds:dword_47207C +
test eax eax +
mov [esp+0B8h+var_88] eax +
jz loc_40EE90  +
mov eax [esp+0B8h+var_90] +
mov esi ds:dword_472078 +
mov eax [eax] +
mov [esp+0B8h+var_78] esi +
cmp eax esi +
jnb loc_40EE90  +
add eax [esp+0B8h+var_88] +
mov edi offset a_gnu_linkonc_0 +
mov ecx 16h +
mov esi eax +
cmps   +
jz loc_40EEB0  +
mov edi offset a_ia_64_unwind +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_40EE90  +
add eax 0Dh +
mov [esp+0B8h+var_70] eax +
mov eax ds:dword_471DA4 +
mov ebx ds:dword_471D4C +
test eax eax +
mov [esp+0B8h+var_98] eax +
jz loc_40E504  +
mov eax ds:dword_472078 +
xor ebp ebp +
mov [esp+0B8h+var_78] eax +
test ebx ebx +
jz loc_40E4F8  +
mov esi [esp+0B8h+var_88] +
test esi esi +
jz loc_40E4F8  +
mov eax [ebx] +
cmp eax [esp+0B8h+var_78] +
jnb loc_40E4F8  +
add eax [esp+0B8h+var_88] +
mov edi offset a_ia_64_unwind_ +
mov ecx 12h +
mov esi eax +
cmps   +
jnz loc_40E4F8  +
mov edi [esp+0B8h+var_70] +
add eax 12h +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_B4] edi +
call strcmp  +
test eax eax +
jz loc_40E5C3  +
add ebp 1 +
add ebx 48h +
cmp ebp [esp+0B8h+var_98] +
jnz loc_40E4B5  +
mov [esp+0B8h+var_B8] offset aCouldNotFindUn +
call printf  +
mov ecx ds:dword_47207C +
mov eax [esp+0B8h+var_90] +
test ecx ecx +
jz loc_40F08D  +
call sub_401C80  +
mov [esp+0B8h+var_B8] offset aS_15 +
mov [esp+0B8h+var_B4] eax +
call printf  +
jmp loc_40EABC  +
mov eax ds:dword_471CE0 +
test eax eax +
jz loc_40E504  +
mov eax [eax+ebp*4] +
test eax eax +
jz loc_40E504  +
mov eax [eax] +
test eax eax +
jz loc_40E504  +
mov ebx ds:dword_471D4C +
mov edx ds:dword_47207C +
mov edi ds:dword_472078 +
mov [esp+0B8h+var_78] ebp +
mov ebp ebx +
mov [esp+0B8h+var_98] edx +
mov [esp+0B8h+var_88] edi +
jmp loc_40E57A  +
mov eax [eax] +
test eax eax +
jz loc_40E504  +
mov ecx [eax+4] +
lea ecx [ecx+ecx*8] +
lea ebx [ebp+ecx*8+0] +
test ebx ebx +
jz loc_40E574  +
mov edi [esp+0B8h+var_98] +
test edi edi +
jz loc_40E574  +
mov esi [ebx] +
cmp esi [esp+0B8h+var_88] +
jnb loc_40E574  +
add esi [esp+0B8h+var_98] +
mov ecx 13h +
mov edi offset a_ia_64_unwind_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_40E574  +
mov eax ds:dword_471DA4 +
mov ebp [esp+0B8h+var_78] +
mov [esp+0B8h+var_98] eax +
cmp ebp [esp+0B8h+var_98] +
jz loc_40E504  +
mov edx [ebx+14h] +
mov eax [ebx+10h] +
mov ecx [ebx+18h] +
mov [esp+0B8h+var_3C] edx +
mov edx [ebx+24h] +
mov [esp+0B8h+var_40] eax +
mov eax [ebx+20h] +
mov [esp+0B8h+var_A8] offset aUnwindInfo +
mov [esp+0B8h+var_B8] 1 +
mov [esp+0B8h+var_AC] edx +
mov edx [esp+0B8h+arg_0] +
mov [esp+0B8h+var_B0] eax +
xor eax eax +
mov [esp+0B8h+var_B4] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+0B8h+var_48] eax +
jz loc_40EF63  +
mov eax [ebx+20h] +
mov [esp+0B8h+var_B8] offset aUnwindSection +
mov [esp+0B8h+var_44] eax +
call printf  +
mov edx ds:dword_47207C +
mov eax [esp+0B8h+var_90] +
test edx edx +
jz loc_40EF70  +
call sub_401C80  +
mov [esp+0B8h+var_B8] offset aS_15 +
mov [esp+0B8h+var_B4] eax +
call printf  +
mov eax ds:dword_472C4C +
mov ebx [esp+0B8h+var_90] +
mov [esp+0B8h+var_AC] 0 +
lea eax [eax+eax*2] +
mov [esp+0B8h+var_B0] eax +
mov edx [ebx+24h] +
mov eax [ebx+20h] +
mov [esp+0B8h+var_B4] edx +
mov [esp+0B8h+var_B8] eax +
call sub_43F880  +
mov [esp+0B8h+var_B0] eax +
mov eax [ebx+18h] +
mov [esp+0B8h+var_B8] offset aAtOffset0xLxCo +
mov [esp+0B8h+var_B4] eax +
call printf  +
mov eax ds:dword_471D9C +
mov [esp+0B8h+var_4C] 0 +
test eax eax +
jz loc_40EE75  +
mov eax [esp+0B8h+arg_0] +
call sub_40B4B0  +
test eax eax +
jz loc_40EA8C  +
mov esi ds:dword_471D48 +
imul edi ds:dword_471D9C +
add edi esi +
cmp edi esi +
jbe loc_40EE75  +
mov ebp [esp+0B8h+var_90] +
mov edx [ebp+24h] +
mov eax [ebp+20h] +
mov [esp+0B8h+var_94] edx +
mov [esp+0B8h+var_98] eax +
jmp loc_40E6F7  +
add esi 38h +
cmp edi esi +
jbe loc_40E746  +
cmp dword ptr [esi] 1 +
jnz loc_40E6F0  +
mov ebx [ebp+14h] +
mov edx [esi+14h] +
mov ecx [ebp+10h] +
mov eax [esi+10h] +
cmp ebx edx +
jb loc_40E6F0  +
ja loc_40E712  +
cmp ecx eax +
jb loc_40E6F0  +
add ecx [esp+0B8h+var_98] +
adc ebx [esp+0B8h+var_94] +
mov [esp+0B8h+var_88] ecx +
mov ecx eax +
mov [esp+0B8h+var_84] ebx +
mov ebx edx +
add ecx [esi+28h] +
adc ebx [esi+2Ch] +
cmp [esp+0B8h+var_84] ebx +
ja loc_40E6F0  +
jnb loc_40EF30  +
mov [esp+0B8h+var_38] eax +
mov [esp+0B8h+var_34] edx +
mov edi [esp+0B8h+var_90] +
mov eax [esp+0B8h+var_98] +
mov edx [esp+0B8h+arg_0] +
mov ecx [edi+18h] +
mov [esp+0B8h+var_98] eax +
mov [esp+0B8h+var_B0] eax +
xor eax eax +
mov [esp+0B8h+var_A8] offset aUnwindTable +
mov [esp+0B8h+var_AC] 0 +
mov [esp+0B8h+var_B8] 1 +
mov [esp+0B8h+var_B4] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+0B8h+var_88] eax +
jz loc_40EA8C  +
mov eax ds:dword_472C4C +
xor edx edx +
mov [esp+0B8h+var_B4] 30h +
lea ecx [eax+eax*2] +
mov eax [esp+0B8h+var_98] +
div  ecx +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_4C] eax +
call sub_42C2E0  +
mov ebp ds:dword_472C4C +
mov edi [esp+0B8h+var_98] +
mov ebx [esp+0B8h+var_88] +
mov esi eax +
mov [esp+0B8h+var_50] eax +
lea eax [ebp+ebp*2+0] +
sub edi eax +
mov eax edi +
mov edi ebx +
add eax ebx +
jb loc_40E879  +
lea esi [esi+0] +
xor eax eax +
mov [esi] ax +
xor eax eax +
mov [esi+10h] ax +
xor eax eax +
mov [esi+20h] ax +
mov [esp+0B8h+var_B4] ebp +
mov [esp+0B8h+var_B8] edi +
call ds:dword_472C94  +
mov [esi+8] eax +
mov eax ds:dword_472C4C +
mov [esi+0Ch] edx +
add edi eax +
mov [esp+0B8h+var_B8] edi +
mov [esp+0B8h+var_B4] eax +
call ds:dword_472C94  +
mov [esi+18h] eax +
mov eax ds:dword_472C4C +
mov [esi+1Ch] edx +
add edi eax +
mov [esp+0B8h+var_B8] edi +
mov [esp+0B8h+var_B4] eax +
call ds:dword_472C94  +
mov ebp ds:dword_472C4C +
mov ecx [esp+0B8h+var_38] +
mov ebx [esp+0B8h+var_34] +
add edi ebp +
add [esi+8] ecx +
adc [esi+0Ch] ebx +
add [esi+18h] ecx +
adc [esi+1Ch] ebx +
add eax ecx +
adc edx ebx +
mov ebx [esp+0B8h+var_98] +
add esi 30h +
mov [esi-8] eax +
lea eax [ebp+ebp*2+0] +
mov [esi-4] edx +
sub ebx eax +
mov eax [esp+0B8h+var_88] +
add eax ebx +
cmp edi eax +
jbe loc_40E7E0  +
mov eax [esp+0B8h+var_88] +
mov [esp+0B8h+var_B8] eax +
call free  +
mov eax ds:dword_471DA4 +
mov ecx ds:dword_471D4C +
lea edx [eax+eax*8] +
lea edx [ecx+edx*8] +
mov ebp ecx +
cmp ecx edx +
jb loc_40E8B2  +
jmp loc_40EA80  +
lea edx [eax+eax*8] +
add ebp 48h +
lea edx [ecx+edx*8] +
cmp ebp edx +
jnb loc_40EA80  +
cmp dword ptr [ebp+4] 4 +
jnz loc_40E8A1  +
mov edx [ebp+2Ch] +
cmp edx eax +
jnb loc_40E8A1  +
lea edx [edx+edx*8] +
lea edx [ecx+edx*8] +
cmp [esp+0B8h+var_90] edx +
jnz loc_40E8A1  +
lea eax [esp+0B8h+var_5C] +
mov ecx [ebp+20h] +
mov edx [ebp+18h] +
mov [esp+0B8h+var_B4] eax +
lea eax [esp+0B8h+var_58] +
mov [esp+0B8h+var_B8] eax +
mov eax [esp+0B8h+arg_0] +
call sub_4050F0  +
test eax eax +
jz loc_40F0C5  +
mov eax [esp+0B8h+var_58] +
mov edi eax +
mov [esp+0B8h+var_98] eax +
mov eax [esp+0B8h+var_5C] +
mov [esp+0B8h+var_88] eax +
lea eax [eax+eax*2] +
lea eax [edi+eax*8] +
cmp edi eax +
jnb loc_40F067  +
mov [esp+0B8h+var_6C] ebp +
mov ebp edi +
jmp loc_40EA1E  +
movzx edi bl +
mov eax edi +
call sub_401560  +
shrd ebx esi +
shl ebx 5 +
add ebx [esp+0B8h+var_30] +
test eax eax +
mov edx eax +
jz loc_40EA57  +
mov edi offset aR_ia64_segrel +
mov esi edx +
mov ecx 0Dh +
cmps   +
jnz loc_40EEA0  +
mov ecx ds:dword_472C4C +
mov esi [ebp+0] +
mov edi [ebp+4] +
mov [esp+0B8h+var_AC] 0 +
lea eax [ecx+ecx*2] +
mov [esp+0B8h+var_B0] eax +
mov [esp+0B8h+var_B8] esi +
mov [esp+0B8h+var_B4] edi +
mov [esp+0B8h+var_78] ecx +
call sub_43F880  +
mov ecx [esp+0B8h+var_78] +
cmp eax [esp+0B8h+var_4C] +
mov [esp+0B8h+var_70] eax +
jnb loc_40EF20  +
mov [esp+0B8h+var_B0] ecx +
mov [esp+0B8h+var_AC] 0 +
mov [esp+0B8h+var_B8] esi +
mov [esp+0B8h+var_B4] edi +
call sub_43F880  +
mov [esp+0B8h+var_B0] 3 +
mov [esp+0B8h+var_AC] 0 +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_B4] edx +
call sub_43FAF0  +
mov ecx eax +
xor ecx 1 +
or ecx edx +
jz loc_40F038  +
xor eax 2 +
or eax edx +
mov eax [esp+0B8h+var_70] +
lea ecx [eax+eax*2] +
jnz loc_40EF40  +
mov eax [ebx+18h] +
shl ecx 4 +
add ecx [esp+0B8h+var_50] +
mov edx [ebp+14h] +
mov [ecx+20h] ax +
mov eax [ebp+10h] +
add eax [ebx] +
adc edx [ebx+4] +
mov [ecx+28h] eax +
mov [ecx+2Ch] edx +
mov eax [esp+0B8h+var_88] +
add ebp 18h +
mov ebx [esp+0B8h+var_98] +
lea eax [eax+eax*2] +
lea eax [ebx+eax*8] +
cmp ebp eax +
jnb loc_40F063  +
mov eax ds:dword_471CF0 +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
test eax eax +
jnz loc_40E920  +
mov edx esi +
mov eax ebx +
call sub_407C20  +
mov ebx esi +
shl ebx 5 +
mov edi eax +
call sub_401560  +
add ebx [esp+0B8h+var_30] +
test eax eax +
mov edx eax +
jnz loc_40E942  +
mov [esp+0B8h+var_B4] edi +
mov [esp+0B8h+var_B8] offset aSkippingUnkn_1 +
call sub_437070  +
mov eax [esp+0B8h+var_58] +
mov [esp+0B8h+var_98] eax +
mov eax [esp+0B8h+var_5C] +
mov [esp+0B8h+var_88] eax +
jmp loc_40EA05  +
mov eax [esp+0B8h+var_4C] +
test eax eax +
jnz loc_40EB11  +
mov eax [esp+0B8h+var_50] +
test eax eax +
jz loc_40EA9C  +
mov [esp+0B8h+var_B8] eax +
call free  +
mov eax [esp+0B8h+var_48] +
test eax eax +
jz loc_40EAAC  +
mov [esp+0B8h+var_B8] eax +
call free  +
mov [esp+0B8h+var_50] 0 +
mov [esp+0B8h+var_48] 0 +
sub [esp+0B8h+var_74] 1 +
mov edx [esp+0B8h+var_74] +
test edx edx +
jnz loc_40E3B0  +
mov eax [esp+0B8h+var_30] +
test eax eax +
jz loc_40EAE0  +
mov [esp+0B8h+var_B8] eax +
call free  +
mov eax [esp+0B8h+var_20] +
test eax eax +
jz loc_40EAF3  +
mov [esp+0B8h+var_B8] eax +
call free  +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0B8h+var_7C] edx +
mov [esp+0B8h+var_90] ecx +
mov ebp [esp+0B8h+var_7C] +
jmp loc_40E428  +
mov eax [esp+0B8h+var_2C] +
shl eax 5 +
mov [esp+0B8h+var_B8] eax +
call sub_438CA0  +
mov ecx [esp+0B8h+var_2C] +
test ecx ecx +
mov [esp+0B8h+var_28] eax +
jz loc_40F0BE  +
mov edx [esp+0B8h+var_30] +
shl ecx 5 +
xor edi edi +
lea esi [edx+ecx] +
jmp loc_40EB57  +
add edx 20h +
cmp edx esi +
jz loc_40EBB0  +
mov ecx [edx] +
mov ebx ecx +
or ebx [edx+4] +
jz loc_40EB50  +
movzx ebx byte ptr [edx+14h] +
and ebx 0Fh +
cmp bl 2 +
jnz loc_40EB50  +
mov ebx edi +
add edx 20h +
shl ebx 5 +
add edi 1 +
add ebx eax +
mov [ebx] ecx +
mov ecx [edx-1Ch] +
mov [ebx+4] ecx +
mov ecx [edx-18h] +
mov [ebx+8] ecx +
mov ecx [edx-14h] +
mov [ebx+0Ch] ecx +
mov ecx [edx-10h] +
mov [ebx+10h] ecx +
mov ecx [edx-0Ch] +
mov [ebx+14h] ecx +
mov ecx [edx-8] +
mov [ebx+18h] ecx +
mov ecx [edx-4] +
cmp edx esi +
mov [ebx+1Ch] ecx +
jnz loc_40EB57  +
lea esi [esi+0] +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_AC] offset sub_402100 +
mov [esp+0B8h+var_B0] 20h +
mov [esp+0B8h+var_B4] edi +
mov [esp+0B8h+var_24] edi +
call qsort  +
mov eax [esp+0B8h+var_4C] +
mov ebp [esp+0B8h+var_50] +
lea eax [eax+eax*2] +
shl eax 4 +
add eax ebp +
cmp ebp eax +
jb loc_40EC80  +
jmp loc_40F020  +
mov ecx ds:dword_471D4C +
lea eax [eax+eax*8] +
mov edx [ebp+2Ch] +
mov esi [esp+0B8h+var_40] +
mov edi [esp+0B8h+var_3C] +
lea eax [ecx+eax*8] +
mov ecx [eax+10h] +
mov ebx [eax+14h] +
mov eax [ebp+28h] +
mov [esp+0B8h+var_8C] edx +
xor edx edx +
mov [esp+0B8h+var_84] edx +
mov edx ebx +
mov [esp+0B8h+var_90] eax +
mov eax [esp+0B8h+var_44] +
mov [esp+0B8h+var_88] eax +
mov eax ecx +
sub eax esi +
sbb edx edi +
add eax [esp+0B8h+var_90] +
adc edx [esp+0B8h+var_8C] +
cmp [esp+0B8h+var_84] edx +
jnb loc_40EFE7  +
mov edx [esp+0B8h+var_90] +
mov eax ebp +
sub eax [esp+0B8h+var_50] +
mov [esp+0B8h+var_B4] edx +
mov [esp+0B8h+var_B8] offset aInvalidOffsetL +
sar eax 4 +
imul eax eax +
mov [esp+0B8h+var_B0] eax +
call sub_437070  +
mov eax [esp+0B8h+var_4C] +
add ebp 30h +
lea eax [eax+eax*2] +
shl eax 4 +
add eax [esp+0B8h+var_50] +
cmp ebp eax +
jnb loc_40F020  +
mov eax [ebp+8] +
lea ebx [esp+0B8h+var_58] +
movzx ecx word ptr [ebp+0] +
lea edi [esp+0B8h+var_5C] +
mov edx [ebp+0Ch] +
mov [esp+0B8h+var_A4] ebx +
mov [esp+0B8h+var_B0] eax +
mov eax [esp+0B8h+var_1C] +
mov word ptr [esp+0B8h+var_B4] cx +
mov ecx [esp+0B8h+var_20] +
mov [esp+0B8h+var_AC] edx +
mov edx [esp+0B8h+var_24] +
mov [esp+0B8h+var_A8] edi +
mov [esp+0B8h+var_B8] eax +
mov eax [esp+0B8h+var_28] +
call sub_407CF0  +
mov eax ds:_iob +
mov [esp+0B8h+var_B0] 2 +
mov [esp+0B8h+var_B4] 1 +
mov [esp+0B8h+var_B8] offset asc_448CE3 +
add eax 20h +
mov [esp+0B8h+var_AC] eax +
call fwrite  +
mov eax [esp+0B8h+var_5C] +
test eax eax +
jz loc_40ED20  +
mov edi ds:_iob +
mov [esp+0B8h+var_B8] eax +
lea edx [edi+20h] +
mov [esp+0B8h+var_B4] edx +
call fputs  +
mov eax [esp+0B8h+var_58] +
mov ebx eax +
or ebx [esp+0B8h+var_54] +
jnz loc_40F007  +
mov eax ds:_iob +
mov [esp+0B8h+var_B0] 4 +
mov [esp+0B8h+var_B4] 1 +
mov [esp+0B8h+var_B8] offset asc_448CEB +
add eax 20h +
mov [esp+0B8h+var_AC] eax +
call fwrite  +
mov edx [ebp+0Ch] +
mov ecx 4 +
mov eax [ebp+8] +
call sub_4055F0  +
mov eax ds:_iob +
mov [esp+0B8h+var_B8] 2Dh +
add eax 20h +
mov [esp+0B8h+var_B4] eax +
call fputc  +
mov edx [ebp+1Ch] +
mov ecx 4 +
mov eax [ebp+18h] +
call sub_4055F0  +
mov eax [ebp+28h] +
sub eax [esp+0B8h+var_38] +
mov [esp+0B8h+var_B8] offset aInfoAt0xLx +
mov [esp+0B8h+var_B4] eax +
call printf  +
mov eax [esp+0B8h+var_48] +
test eax eax +
mov [esp+0B8h+var_98] eax +
jz loc_40EC67  +
movzx eax word ptr [ebp+20h] +
test ax ax +
jnz loc_40EBF0  +
mov ecx [esp+0B8h+var_44] +
xor ebx ebx +
mov eax [ebp+28h] +
mov edx [ebp+2Ch] +
mov esi [esp+0B8h+var_40] +
mov edi [esp+0B8h+var_3C] +
mov [esp+0B8h+var_90] ecx +
mov ecx eax +
mov [esp+0B8h+var_8C] ebx +
mov ebx edx +
sub ecx esi +
sbb ebx edi +
cmp [esp+0B8h+var_8C] ebx +
ja loc_40EDF1  +
jb loc_40EF87  +
cmp [esp+0B8h+var_90] ecx +
jbe loc_40EF87  +
mov edi [esp+0B8h+var_98] +
sub eax esi +
mov ebx offset aUhandler +
mov [esp+0B8h+var_B4] 8 +
mov esi offset unk_44640B +
add edi eax +
mov [esp+0B8h+var_B8] edi +
call ds:dword_472C94  +
mov ecx offset aEhandler +
mov [esp+0B8h+var_B8] offset aVUFlags0xLxSSL +
mov [esp+0B8h+var_98] eax +
imul eax ds:dword_472C4C +
test dl 2 +
cmovz ebx esi +
test dl 1 +
cmovz ecx esi +
mov esi edx +
shr esi 10h +
and edx 0FFFFh +
mov [esp+0B8h+var_A4] eax +
mov [esp+0B8h+var_A8] ebx +
mov [esp+0B8h+var_AC] ecx +
mov [esp+0B8h+var_B0] edx +
mov [esp+0B8h+var_B4] esi +
call printf  +
cmp esi 1 +
jz loc_40EF90  +
mov [esp+0B8h+var_B8] offset aUnknownVersion +
call puts  +
jmp loc_40EC67  +
mov eax [esp+0B8h+var_90] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+0B8h+var_94] edx +
mov [esp+0B8h+var_98] eax +
jmp loc_40E746  +
mov [esp+0B8h+var_70] offset unk_44640B +
jmp loc_40E497  +
mov [esp+0B8h+var_B4] edx +
mov [esp+0B8h+var_B8] offset aSkippingUnex_3 +
jmp loc_40EA62  +
add eax 16h +
mov ebx ds:dword_471D4C +
mov [esp+0B8h+var_70] eax +
mov eax ds:dword_471DA4 +
test eax eax +
mov [esp+0B8h+var_98] eax +
jz loc_40E504  +
xor ebp ebp +
test ebx ebx +
jz loc_40EF0B  +
mov eax [ebx] +
cmp [esp+0B8h+var_78] eax +
jbe loc_40EF0B  +
add eax [esp+0B8h+var_88] +
mov edi offset a_gnu_linkonc_1 +
mov ecx 17h +
mov esi eax +
cmps   +
jnz loc_40EF0B  +
mov edi [esp+0B8h+var_70] +
add eax 17h +
mov [esp+0B8h+var_B8] eax +
mov [esp+0B8h+var_B4] edi +
call strcmp  +
test eax eax +
jz loc_40E5C3  +
add ebp 1 +
add ebx 48h +
cmp ebp [esp+0B8h+var_98] +
jnz loc_40EED0  +
jmp loc_40E504  +
mov [esp+0B8h+var_B4] eax +
mov [esp+0B8h+var_B8] offset aSkippingRelocW +
jmp loc_40EA62  +
cmp [esp+0B8h+var_88] ecx +
ja loc_40E6F0  +
jmp loc_40E738  +
mov eax [ebx+18h] +
shl ecx 4 +
add ecx [esp+0B8h+var_50] +
mov edx [ebp+14h] +
mov [ecx] ax +
mov eax [ebp+10h] +
add eax [ebx] +
adc edx [ebx+4] +
mov [ecx+8] eax +
mov [ecx+0Ch] edx +
jmp loc_40EA05  +
xor eax eax +
jmp loc_40E620  +
mov eax [eax] +
mov [esp+0B8h+var_B8] offset aD_6 +
mov [esp+0B8h+var_B4] eax +
call printf  +
jmp loc_40E657  +
mov edx eax +
jmp loc_40EC44  +
mov esi [esp+0B8h+var_98] +
imul esi ds:dword_472C4C +
mov eax [esp+0B8h+var_48] +
add eax [esp+0B8h+var_44] +
mov [esp+0B8h+var_60] 0 +
lea ebx [edi+esi+8] +
cmp ebx eax +
cmova ebx eax +
xor edx edx +
lea eax [edi+8] +
cmp eax ebx +
jb loc_40EFC6  +
jmp loc_40EC67  +
mov edx [esp+0B8h+var_60] +
lea edi [esp+0B8h+var_60] +
mov [esp+0B8h+var_AC] ebx +
mov [esp+0B8h+var_B0] edi +
mov [esp+0B8h+var_B4] edx +
mov [esp+0B8h+var_B8] eax +
call sub_426570  +
cmp eax ebx +
jb loc_40EFC2  +
jmp loc_40EC67  +
mov esi esi +
lea edi [edi+0] +
ja loc_40EFFC  +
cmp [esp+0B8h+var_88] eax +
jbe loc_40EC40  +
mov eax [esp+0B8h+var_90] +
add eax ecx +
jmp loc_40EDF1  +
mov [esp+0B8h+var_B4] eax +
mov [esp+0B8h+var_B8] offset aLx_2 +
call printf  +
jmp loc_40ED20  +
mov eax [esp+0B8h+var_28] +
mov [esp+0B8h+var_B8] eax +
call free  +
mov eax [esp+0B8h+var_50] +
jmp loc_40EA90  +
mov eax [esp+0B8h+var_70] +
mov edx [ebp+14h] +
lea ecx [eax+eax*2] +
mov eax [ebx+18h] +
shl ecx 4 +
add ecx [esp+0B8h+var_50] +
mov [ecx+10h] ax +
mov eax [ebp+10h] +
add eax [ebx] +
adc edx [ebx+4] +
mov [ecx+18h] eax +
mov [ecx+1Ch] edx +
jmp loc_40EA05  +
mov ebp [esp+0B8h+var_6C] +
mov eax [esp+0B8h+var_98] +
mov [esp+0B8h+var_B8] eax +
call free  +
mov ecx ds:dword_471D4C +
mov eax ds:dword_471DA4 +
jmp loc_40E8A1  +
call sub_404690  +
jmp loc_40E2ED  +
mov eax [eax] +
mov [esp+0B8h+var_B8] offset aD_6 +
mov [esp+0B8h+var_B4] eax +
call printf  +
jmp loc_40EABC  +
mov [esp+0B8h+var_B8] offset aThereAreNoUnwi +
xor ebp ebp +
call puts  +
jmp loc_40E393  +
xor eax eax +
jmp loc_40E370  +
xor edi edi +
jmp loc_40EBB0  +
mov eax [esp+0B8h+var_50] +
mov [esp+0B8h+var_B8] eax +
call free  +
mov [esp+0B8h+var_50] 0 +
mov [esp+0B8h+var_4C] 0 +
jmp loc_40EA9C  +
***
push esi  +
push ebx  +
sub esp 6Ch +
test edx edx +
mov [esp+6Ch+var_58] eax +
mov [esp+6Ch+var_40] ecx +
jz loc_40F310  +
mov ecx ds:dword_471E3C +
mov edx ds:dword_471E38 +
mov eax ecx +
or eax edx +
jz loc_40F310  +
mov eax [esp+6Ch+arg_4] +
mov esi [esp+6Ch+var_58] +
mov [esp+6Ch+var_68] 0 +
lea ebx [eax+eax+2] +
mov [esp+6Ch+var_6C] ebx +
mov eax esi +
call sub_40B840  +
mov edx esi +
mov [esp+6Ch+var_5C] offset aVersionData +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_6C] 2 +
mov [esp+6Ch+var_68] 0 +
lea ecx [ebx+eax-2] +
lea eax [esp+6Ch+var_32] +
call sub_403CC0  +
test eax eax +
jz loc_40F310  +
lea eax [esp+6Ch+var_32] +
mov [esp+6Ch+var_68] 2 +
mov [esp+6Ch+var_6C] eax +
call ds:dword_472C94  +
cmp ax 1 +
mov [esp+6Ch+var_44] eax +
mov [esp+6Ch+var_4E] ax +
jbe loc_40F310  +
mov eax [esp+6Ch+arg_C] +
mov eax [eax] +
test eax eax +
jnz loc_40F35B  +
mov ecx ds:dword_471DCC +
mov edx ds:dword_471DC8 +
mov eax ecx +
or eax edx +
jz loc_40F310  +
mov eax [esp+6Ch+var_58] +
mov [esp+6Ch+var_6C] 10h +
mov [esp+6Ch+var_68] 0 +
call sub_40B840  +
mov [esp+6Ch+var_4C] eax +
mov ecx [esp+6Ch+var_4C] +
lea eax [esp+6Ch+var_32+2] +
mov edx [esp+6Ch+var_58] +
mov [esp+6Ch+var_5C] offset aVersionNeed +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_6C] 10h +
mov [esp+6Ch+var_68] 0 +
call sub_403CC0  +
test eax eax +
jz loc_40F310  +
lea eax [esp+6Ch+var_28] +
mov [esp+6Ch+var_68] 4 +
lea ebp [esp+6Ch+var_1A] +
mov [esp+6Ch+var_6C] eax +
call ds:dword_472C94  +
mov [esp+6Ch+var_68] 4 +
mov ebx eax +
lea eax [esp+6Ch+var_24] +
mov [esp+6Ch+var_6C] eax +
call ds:dword_472C94  +
add ebx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_48] eax +
lea eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_54] eax +
jmp loc_40F2BC  +
mov [esp+6Ch+var_68] 2 +
mov [esp+6Ch+var_6C] ebp +
call ds:dword_472C94  +
mov [esp+6Ch+var_68] 4 +
mov esi eax +
lea eax [esp+6Ch+var_14] +
mov [esp+6Ch+var_6C] eax +
call ds:dword_472C94  +
mov [esp+6Ch+var_68] 4 +
mov edi eax +
lea eax [esp+6Ch+var_1A+2] +
add ebx edi +
mov [esp+6Ch+var_6C] eax +
call ds:dword_472C94  +
cmp [esp+6Ch+var_4E] si +
jz loc_40F320  +
test edi edi +
jz loc_40F2FA  +
mov edx [esp+6Ch+var_58] +
mov ecx ebx +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_5C] offset aVersionNeedAux +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_6C] 10h +
mov [esp+6Ch+var_68] 0 +
call sub_403CC0  +
test eax eax +
jnz loc_40F270  +
mov eax [esp+6Ch+var_48] +
add [esp+6Ch+var_4C] eax +
test eax eax +
jnz loc_40F1E7  +
lea esi [esi+0] +
xor edx edx +
add esp 6Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+6Ch+arg_10] +
mov edx [esp+6Ch+arg_14] +
mov dword ptr [ecx] 0 +
movzx ecx word ptr [esp+6Ch+var_44] +
mov [edx] cx +
mov ecx [esp+6Ch+var_40] +
mov edx offset aCorrupt +
add ecx eax +
cmp [esp+6Ch+arg_0] eax +
cmova edx ecx +
add esp 6Ch +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp word ptr [esp+6Ch+var_44] 8001h +
jz loc_40F1B5  +
mov ecx ds:dword_471DDC +
mov edx ds:dword_471DD8 +
mov eax ecx +
or eax edx +
jz loc_40F1B5  +
mov eax [esp+6Ch+var_58] +
lea ebp [esp+50h] +
mov [esp+6Ch+var_6C] 14h +
lea esi [esp+6Ch+var_14] +
mov [esp+6Ch+var_68] 0 +
call sub_40B840  +
mov edi eax +
movzx eax word ptr [esp+6Ch+var_44] +
and ax 7FFFh +
mov word ptr [esp+6Ch+var_4C] ax +
lea eax [esp+6Ch+var_20] +
mov [esp+6Ch+var_54] eax +
jmp loc_40F40D  +
mov [esp+6Ch+var_68] 2 +
mov [esp+6Ch+var_6C] ebp +
call ds:dword_472C94  +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_6C] esi +
mov ebx eax +
call ds:dword_472C94  +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_48] eax +
lea eax [esp+6Ch+var_10] +
mov [esp+6Ch+var_6C] eax +
call ds:dword_472C94  +
cmp word ptr [esp+6Ch+var_4C] bx +
lea edx [eax+edi] +
jz loc_40F4EA  +
test eax eax +
jz loc_40F1B5  +
mov edi edx +
mov edx [esp+6Ch+var_58] +
mov ecx edi +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_5C] offset aVersionDef +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_6C] 14h +
mov [esp+6Ch+var_68] 0 +
call sub_403CC0  +
test eax eax +
jnz loc_40F3B8  +
xor esi esi +
cmp word ptr [esp+6Ch+var_4C] 0 +
jnz loc_40F1B5  +
mov edx [esp+6Ch+var_58] +
lea ecx [esi+edi] +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_5C] offset aVersionDefAux +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_6C] 8 +
mov [esp+6Ch+var_68] 0 +
call sub_403CC0  +
test eax eax +
jz loc_40F1B5  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_6C] eax +
call ds:dword_472C94  +
mov edx [esp+6Ch+arg_8] +
cmp eax [edx] +
jz loc_40F1B5  +
movsx edx word ptr [esp+6Ch+var_44] +
mov ecx [esp+6Ch+arg_10] +
sar edx 1Fh +
add edx 2 +
mov [ecx] edx +
mov ecx [esp+6Ch+var_40] +
mov edx offset aCorrupt +
add ecx eax +
cmp eax [esp+6Ch+arg_0] +
cmovb edx ecx +
jmp loc_40F312  +
mov esi [esp+6Ch+var_48] +
jmp loc_40F459  +
***
push esi  +
push ebx  +
sub esp 9Ch +
cmp [esp+9Ch+arg_10] 0FFFFFFFFh +
mov [esp+9Ch+var_54] eax +
mov [esp+9Ch+var_50] ecx +
jz loc_40F988  +
mov eax [esp+9Ch+arg_10] +
test eax eax +
jz loc_40F5F2  +
lea eax [esp+9Ch+var_50] +
mov ecx [esp+9Ch+var_50] +
mov [esp+9Ch+var_98] eax +
lea eax [esp+9Ch+var_3C] +
mov [esp+9Ch+var_9C] eax +
mov eax [esp+9Ch+var_54] +
call sub_4050F0  +
test eax eax +
jz loc_40F58C  +
cmp ds:dword_471CF0 0 +
jz loc_4103B0  +
cmp ds:dword_472C54 0 +
jz loc_410BA1  +
mov [esp+9Ch+var_9C] offset aOffsetInfoType +
call puts  +
jmp loc_40F640  +
mov eax [esp+9Ch+var_3C] +
mov [esp+9Ch+var_9C] eax +
call free  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ax 2530h +
jz loc_40FA82  +
jbe loc_40FA50  +
cmp ax 0A390h +
jz loc_40FA82  +
ja loc_410DC5  +
cmp ax 7676h +
jz loc_40FA82  +
ja loc_410EB5  +
cmp ax 5441h +
jz loc_40FA82  +
jbe loc_411117  +
cmp ax 5AA5h +
jz loc_40F5E7  +
cmp ax 7650h +
jnz loc_40F9FA  +
mov [esp-10h+arg_BC] 0 +
lea eax [esp-10h+arg_48] +
mov ecx [esp-10h+arg_48] +
mov [esp-10h+arg_0] eax +
lea eax [esp-10h+arg_5C] +
mov [esp+0] eax +
mov eax [esp-10h+arg_44] +
call sub_404040  +
test eax eax +
jz loc_40F58C  +
cmp ds:dword_471CF0 0 +
jz loc_410391  +
cmp ds:dword_472C54 0 +
jz loc_410BC3  +
mov dword ptr [esp+0] offset aOffsetInfoTy_0 +
call puts  +
lea esi [esi+0] +
mov eax [esp-10h+arg_B0] +
xor edx edx +
xor ebp ebp +
mov [esp-10h+arg_38] edx +
mov [esp-10h+arg_34] eax +
mov eax [esp-10h+arg_48] +
test eax eax +
jnz loc_40F8FF  +
jmp loc_40F580  +
movzx ebx al +
shrd eax edx +
mov [esp-10h+arg_24] eax +
mov eax [esp-10h+arg_1C] +
shr edx 8 +
mov [esp-10h+arg_0] esi +
mov dword ptr [esp+0] offset a8_8lx8_8lx +
mov [esp-10h+arg_28] edx +
mov [esp-10h+arg_4] eax +
call printf  +
movzx eax ds:word_471D92 +
cmp ax 6Ah +
jz loc_410950  +
jbe loc_40FB60  +
cmp ax 0DFh +
jz loc_410890  +
nop   +
ja loc_40FC80  +
cmp ax 0AEh +
jz loc_410AD0  +
ja loc_40FDE0  +
cmp ax 78h +
jz loc_410AB0  +
jbe loc_410086  +
cmp ax 8Ch +
jz loc_410970  +
ja loc_4102E6  +
cmp ax 87h +
jz loc_4109D0  +
cmp ax 8Ah +
jnz loc_40F6FF  +
cmp ebx 11h +
jbe loc_410C71  +
mov [esp-10h+arg_0] ebx +
mov dword ptr [esp+0] offset aUnrecognized7l +
call printf  +
mov [esp-10h+arg_2C] 0 +
mov edx [esp-10h+arg_28] +
mov eax [esp-10h+arg_24] +
mov ecx edx +
or ecx eax +
jz loc_40FA92  +
mov ebx [esp-10h+arg_AC] +
test ebx ebx +
jz loc_40FC63  +
mov eax [esp-10h+arg_28] +
cmp [esp-10h+arg_38] eax +
jbe loc_40FC50  +
mov esi [esp-10h+arg_24] +
lea eax [esp+5Eh] +
mov [esp-10h+arg_10] eax +
lea eax [esp-10h+arg_60] +
mov ecx [esp-10h+arg_B4] +
mov [esp-10h+arg_C] eax +
mov edx [esp-10h+arg_C0] +
mov ebx esi +
shl ebx 5 +
add ebx [esp-10h+arg_AC] +
mov [esp-10h+arg_0] esi +
lea eax [ebx+18h] +
mov [esp-10h+arg_8] eax +
lea eax [ebx+10h] +
mov [esp-10h+arg_4] eax +
mov eax [esp-10h+arg_B8] +
mov [esp+0] eax +
mov eax [esp-10h+arg_44] +
call sub_40F0F0  +
mov dword ptr [esp+0] 20h +
mov esi eax +
call putchar  +
movzx eax byte ptr [ebx+14h] +
and eax 0Fh +
cmp al 0Ah +
jnz loc_40FF70  +
cmp ds:dword_471CF0 1 +
mov ecx [esp-10h+arg_B4] +
sbb eax eax +
and eax 6 +
add eax 8 +
test ecx ecx +
mov edi eax +
jz loc_410BD4  +
mov ecx [ebx+10h] +
mov [esp-10h+arg_24] offset a?? +
test ecx ecx +
jz loc_40F800  +
mov edx [esp-10h+arg_B4] +
add edx ecx +
cmp [esp-10h+arg_B8] ecx +
mov ecx edx +
cmovbe ecx [esp-10h+arg_24] +
mov [esp-10h+arg_24] ecx +
mov edx [esp-10h+arg_24] +
call sub_405A30  +
test esi esi +
mov ecx eax +
jz loc_40F835  +
cmp [esp-10h+arg_60] 2 +
mov edx offset a@@S +
mov [esp-10h+arg_24] eax +
mov eax offset a@S +
mov [esp-10h+arg_0] esi +
cmovnz edx eax +
mov [esp+0] edx +
call printf  +
mov ecx [esp-10h+arg_24] +
cmp edi ecx +
mov eax 1 +
jb loc_40F843  +
lea eax [edi+1] +
sub eax ecx +
mov [esp-10h+arg_4] offset asc_44648A +
mov [esp-10h+arg_0] eax +
mov dword ptr [esp+0] offset aS_17 +
call printf  +
mov edx [ebx+10h] +
test edx edx +
jnz loc_40FFA7  +
movzx eax byte ptr [ebx+14h] +
mov edx offset aNull_0 +
and eax 0Fh +
cmp al 3 +
jz loc_4104D6  +
mov eax 16h +
call sub_405A30  +
mov edi [esp-10h+arg_BC] +
test edi edi +
jz loc_40F8C0  +
mov eax [esp-10h+arg_5C] +
mov ecx [esp-10h+arg_30] +
mov edx [eax+ecx+14h] +
mov eax [eax+ecx+10h] +
test edx edx +
js loc_410520  +
mov [esp-10h+arg_0] eax +
mov [esp-10h+arg_4] edx +
mov dword ptr [esp+0] offset aI64x_1 +
call printf  +
nop   +
lea esi [esi+0] +
cmp ds:word_471D92 2Bh +
jz loc_40FB02  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov edi ds:dword_471CF0 +
test edi edi +
jnz loc_40F8F2  +
cmp ds:word_471D92 8 +
jz loc_40FD43  +
add ebp 1 +
cmp [esp-10h+arg_48] ebp +
jbe loc_40F580  +
lea eax [ebp+ebp*2+0] +
mov ebx ds:dword_471CF0 +
shl eax 3 +
mov [esp-10h+arg_30] eax +
add eax [esp-10h+arg_5C] +
test ebx ebx +
mov edx [eax+0Ch] +
mov esi [eax] +
mov edi [eax+4] +
mov eax [eax+8] +
mov [esp-10h+arg_20] edx +
mov [esp-10h+arg_1C] eax +
jnz loc_40F664  +
mov edx [esp-10h+arg_20] +
mov eax [esp-10h+arg_1C] +
call sub_407C20  +
mov edx [esp-10h+arg_20] +
mov ecx [esp-10h+arg_20] +
mov [esp-10h+arg_0] esi +
mov [esp-10h+arg_4] edi +
mov [esp-10h+arg_C] ecx +
mov ebx eax +
mov eax edx +
xor edx edx +
mov [esp-10h+arg_28] edx +
mov edx ds:dword_472C54 +
mov [esp-10h+arg_24] eax +
mov eax offset a16_16i64x16_16 +
test edx edx +
mov edx offset a12_12i64x12_12 +
cmovz eax edx +
mov edx [esp-10h+arg_1C] +
mov [esp+0] eax +
mov [esp-10h+arg_8] edx +
call printf  +
jmp loc_40F68E  +
movzx eax ds:word_471D92 +
cmp ax 8Ah +
jz loc_40FA82  +
ja loc_40F597  +
cmp ax 32h +
jz loc_40FA82  +
lea esi [esi+0] +
ja loc_40FA1E  +
cmp ax 13h +
jz loc_40F5E7  +
lea esi [esi+0] +
ja loc_410D93  +
cmp ax 6 +
jz loc_40F5E7  +
jbe loc_410E8F  +
cmp ax 8 +
jz loc_40F5E7  +
jb loc_40FA82  +
cmp ax 0Ah +
jz loc_40F5E7  +
cmp ax 12h +
jz loc_40FA82  +
mov [esp+9Ch+var_9C] offset aDonTKnowAboutR +
mov [esp+9Ch+var_7C] edx +
call sub_437070  +
mov edx [esp+9Ch+var_7C] +
mov [esp+9Ch+arg_10] 0 +
jmp loc_40F5F2  +
cmp ax 5Eh +
jbe loc_410D18  +
cmp ax 72h +
jbe loc_410FA6  +
cmp ax 78h +
jz loc_40FA82  +
cmp ax 87h +
jz loc_40F5E7  +
cmp ax 73h +
jnz loc_40F9FA  +
jmp loc_40F5E7  +
cmp ax 0BDh +
ja loc_410E35  +
cmp ax 0BCh +
nop   +
jnb loc_40FA82  +
cmp ax 0AEh +
ja loc_410F50  +
cmp ax 0ADh +
jnb loc_40FA82  +
cmp ax 8Ch +
jz loc_40FA82  +
cmp ax 0A7h +
jnz loc_40F9FA  +
mov [esp-10h+arg_BC] 1 +
jmp loc_40F52F  +
mov esi [esp-10h+arg_BC] +
test esi esi +
jz loc_40F8C0  +
mov eax [esp-10h+arg_5C] +
mov ecx [esp-10h+arg_30] +
cmp ds:dword_471CF0 1 +
mov edi [eax+ecx+14h] +
mov esi [eax+ecx+10h] +
sbb eax eax +
and eax 8 +
add eax 0Ch +
mov [esp-10h+arg_4] 20h +
mov [esp-10h+arg_0] eax +
mov dword ptr [esp+0] offset aC_0 +
call printf  +
test edi edi +
js loc_40FFD8  +
mov [esp-10h+arg_0] esi +
mov [esp-10h+arg_4] edi +
mov dword ptr [esp+0] offset aI64x_0 +
call printf  +
cmp ds:word_471D92 2Bh +
jnz loc_40F8CE  +
mov ebx [esp-10h+arg_2C] +
test ebx ebx +
jz loc_40F8CE  +
mov esi [esp-10h+arg_2C] +
mov edi offset aR_sparc_olo10 +
mov ecx 0Eh +
cmps   +
jnz loc_40F8CE  +
mov eax [esp-10h+arg_1C] +
mov [esp-10h+arg_40] 0 +
mov edx [esp-10h+arg_40] +
mov dword ptr [esp+0] offset aLx_3 +
mov [esp-10h+arg_3C] eax +
mov eax [esp-10h+arg_3C] +
shrd eax edx +
xor eax 800000h +
sub eax 800000h +
mov [esp-10h+arg_0] eax +
call printf  +
jmp loc_40F8CE  +
cmp ax 30h +
ja loc_40FCE3  +
cmp ax 2Eh +
nop   +
jnb loc_410AE9  +
cmp ax 12h +
jz loc_4106C6  +
jbe loc_40FEB3  +
cmp ax 24h +
jz loc_410B05  +
ja loc_410040  +
cmp ax 15h +
jz loc_410B40  +
ja loc_4103D0  +
cmp ax 13h +
jz loc_410A70  +
cmp ax 14h +
jnz loc_40F6FF  +
cmp ebx 0FFh +
ja loc_40F6FF  +
mov eax ds:off_455F40[ebx*4] +
mov [esp-10h+arg_2C] eax +
mov ecx [esp-10h+arg_2C] +
test ecx ecx +
jz loc_40F6FF  +
mov edx ds:dword_472C54 +
mov eax offset a22_22s +
mov edi [esp-10h+arg_2C] +
test edx edx +
mov edx offset a17_17s +
cmovz eax edx +
mov [esp-10h+arg_0] edi +
mov [esp+0] eax +
call printf  +
cmp ds:word_471D92 9026h +
jnz loc_40F717  +
mov esi [esp-10h+arg_2C] +
mov edi offset aR_alpha_lituse +
mov ecx 0Fh +
cmps   +
jnz loc_40F717  +
mov edi [esp-10h+arg_BC] +
test edi edi +
jnz loc_40FFF8  +
mov edx [esp-10h+arg_28] +
mov eax [esp-10h+arg_24] +
mov esi edx +
or esi eax +
jnz loc_40F729  +
jmp loc_40F8CE  +
jb loc_40FC63  +
mov eax [esp-10h+arg_24] +
cmp [esp-10h+arg_B0] eax +
ja loc_40F746  +
mov eax [esp-10h+arg_24] +
mov dword ptr [esp+0] offset aBadSymbolInd_0 +
mov [esp-10h+arg_0] eax +
call printf  +
jmp loc_40F8C0  +
cmp ax 9026h +
jz loc_4108B0  +
lea esi [esi+0] +
ja loc_40FE33  +
cmp ax 4688h +
jz loc_410A93  +
ja loc_410100  +
cmp ax 1223h +
jz loc_4107B0  +
ja loc_410430  +
cmp ax 1057h +
jz loc_410790  +
cmp ax 1059h +
jnz loc_40F6FF  +
cmp ebx 0Ah +
ja loc_40F6FF  +
mov eax ds:off_457C80[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 56h +
jz loc_410770  +
ja loc_40FF03  +
cmp ax 4Bh +
jz loc_410750  +
lea esi [esi+0] +
jbe loc_410240  +
cmp ax 53h +
jz loc_410790  +
ja loc_4105C0  +
cmp ax 4Ch +
jz loc_410710  +
cmp ax 50h +
jnz loc_40F6FF  +
cmp ebx 24h +
ja loc_40F6FF  +
mov eax ds:off_458320[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
mov esi [esp-10h+arg_1C] +
mov edi [esp-10h+arg_20] +
mov eax esi +
shrd eax edi +
movzx ebx al +
mov eax esi +
shrd eax edi +
xor edi edi +
movzx edx al +
cmp edx 0FFh +
jz loc_40FD6E  +
mov edi ds:off_458B40[edx*4] +
xor esi esi +
cmp ebx 0FFh +
jz loc_40FD7F  +
mov esi ds:off_458B40[ebx*4] +
mov dword ptr [esp+0] offset aType2 +
mov [esp-10h+arg_1C] edx +
call printf  +
test edi edi +
mov edx [esp-10h+arg_1C] +
jz loc_410468  +
mov [esp-10h+arg_0] edi +
mov dword ptr [esp+0] offset a17_17s +
call printf  +
mov dword ptr [esp+0] offset aType3 +
call printf  +
test esi esi +
jz loc_410453  +
mov [esp-10h+arg_0] esi +
mov dword ptr [esp+0] offset a17_17s +
call printf  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
jmp loc_40F8F2  +
cmp ax 0BDh +
jz loc_410A30  +
lea esi [esi+0] +
jbe loc_4100C0  +
cmp ax 0C5h +
jz loc_410870  +
jbe loc_410480  +
cmp ax 0DDh +
jz loc_4108D0  +
cmp ax 0DEh +
jnz loc_40F6FF  +
cmp ebx 7 +
ja loc_40F6FF  +
mov eax ds:off_45C540[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 0BAABh +
jz loc_410A30  +
jbe loc_410140  +
cmp ax 0F00Dh +
jz loc_410680  +
lea esi [esi+0] +
jbe loc_410566  +
cmp ax 0FEB0h +
jz loc_410AB0  +
cmp ax 0FEBAh +
jnz loc_40F6FF  +
cmp ebx 6 +
jz loc_410F75  +
ja loc_410C81  +
cmp ebx 2 +
lea esi [esi+0] +
jz loc_410FF5  +
jbe loc_410E00  +
cmp ebx 4 +
mov [esp-10h+arg_2C] offset aR_iq2000_pc16 +
jz loc_40FBDD  +
mov esi offset aR_iq2000_26 +
mov eax offset aR_iq2000_hi16 +
cmovbe eax esi +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBDD  +
cmp ax 7 +
jz loc_410810  +
jbe loc_4102B0  +
cmp ax 0Ah +
jz loc_4107F0  +
lea esi [esi+0] +
ja loc_4104A6  +
cmp ax 8 +
jz loc_4107F0  +
cmp ax 9 +
jnz loc_40F6FF  +
cmp ebx 0Bh +
ja loc_40F6FF  +
mov eax ds:off_45AC20[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 5Ch +
jz loc_410A10  +
jbe loc_410270  +
cmp ax 63h +
jz loc_410634  +
lea esi [esi+0] +
jbe loc_4106E2  +
cmp ax 65h +
jz loc_410664  +
cmp ax 69h +
jnz loc_40F6FF  +
cmp byte ptr ds:dword_471D8C 2Dh +
jz loc_40FF50  +
cmp ds:byte_471D67 0 +
jnz loc_40FCCA  +
lea eax [ebx-1] +
cmp eax 14h +
ja loc_40F6FF  +
mov eax ds:off_457B60[eax*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
mov edx [ebx+4] +
mov ecx 6 +
mov eax [ebx] +
call sub_4055F0  +
mov edx ds:dword_471CF0 +
mov eax offset asc_4490EC +
test edx edx +
mov edx offset asc_44648A +
cmovz eax edx +
mov [esp+0] eax +
call printf  +
mov edx [ebx+10h] +
test edx edx +
jz loc_40F866  +
mov eax [esp-10h+arg_B4] +
test eax eax +
jz loc_410D03  +
cmp [esp-10h+arg_B8] edx +
ja loc_410355  +
mov [esp-10h+arg_0] edx +
mov dword ptr [esp+0] offset aCorruptStrin_0 +
call printf  +
jmp loc_40F884  +
neg esi  +
adc edi 0 +
neg edi  +
mov [esp-10h+arg_0] esi +
mov [esp-10h+arg_4] edi +
mov dword ptr [esp+0] offset aI64x_2 +
call printf  +
jmp loc_40F8C0  +
mov eax [esp-10h+arg_5C] +
mov ebx [esp-10h+arg_30] +
mov esi [eax+ebx+14h] +
mov edx [eax+ebx+10h] +
test esi esi +
jz loc_410316  +
mov dword ptr [esp+0] 20h +
call putchar  +
mov eax [esp-10h+arg_5C] +
mov esi [esp-10h+arg_30] +
mov eax [eax+esi+10h] +
mov dword ptr [esp+0] offset aUnknownAddendL +
mov [esp-10h+arg_0] eax +
call printf  +
jmp loc_40F8CE  +
cmp ax 2Ah +
jz loc_4109B0  +
lea esi [esi+0] +
ja loc_410B5C  +
cmp ax 27h +
jz loc_410990  +
cmp ax 28h +
jnz loc_40F6FF  +
cmp ebx 0FFh +
ja loc_40F6FF  +
mov eax ds:off_45E820[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 72h +
jz loc_410A50  +
jbe loc_410540  +
cmp ax 73h +
jnz loc_410A89  +
cmp ebx 13h +
ja loc_40F6FF  +
mov eax ds:off_44EB80[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 0B5h +
jbe loc_410400  +
cmp ax 0B7h +
jz loc_410930  +
cmp ax 0BCh +
jnz loc_40F6FF  +
cmp ebx 81h +
ja loc_40F6FF  +
mov eax ds:off_4509E0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 7650h +
jz loc_4105D4  +
ja loc_410650  +
cmp ax 5441h +
jz loc_4106A0  +
cmp ax 5AA5h +
nop   +
jnz loc_40F6FF  +
cmp ebx 9 +
ja loc_40F6FF  +
mov eax ds:off_45CE40[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 0A390h +
jz loc_410730  +
jbe loc_410593  +
cmp ax 0ABC7h +
jz loc_4106F6  +
cmp ax 0AD45h +
nop   +
jnz loc_40F6FF  +
cmp ebx 81h +
ja loc_40F6FF  +
jmp ds:off_449500[ebx*4]  +
mov [esp-10h+arg_2C] offset aR_xstormy16_32 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_no +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_gn +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16__0 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_12 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_hi +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_lo +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_fp +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_24 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_re +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_pc +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16__1 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16__2 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_8 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_xstormy16_16 +
jmp loc_40FBDD  +
cmp ax 35h +
jz loc_410604  +
ja loc_4105F0  +
cmp ax 32h +
jnz loc_40F6FF  +
mov eax ebx +
lea esi [esi+0] +
call sub_401560  +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 59h +
jz loc_410830  +
ja loc_410620  +
cmp ax 57h +
jz loc_4105A7  +
cmp ax 58h +
nop   +
jnz loc_40F6FF  +
cmp ebx 40h +
ja loc_40F6FF  +
mov eax ds:off_45A140[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 3 +
jz loc_4109F3  +
jbe loc_4106BC  +
cmp ax 4 +
jnz loc_4109E9  +
cmp ebx 2Ah +
lea esi [esi+0] +
ja loc_40F6FF  +
mov eax ds:off_459DA0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 0A7h +
jz loc_410B21  +
cmp ax 0ADh +
jnz loc_40F6FF  +
cmp ebx 96h +
ja loc_40F6FF  +
mov eax ds:off_4542A0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp edx 6 +
ja loc_410010  +
mov eax ds:off_44DAF4[edx*4] +
test eax eax +
mov [esp-10h+arg_2C] eax +
jz loc_410010  +
mov [esp-10h+arg_0] eax +
mov dword ptr [esp+0] offset aS_18 +
call printf  +
cmp ds:word_471D92 2Bh +
jnz loc_40F8CE  +
jmp loc_40FB0E  +
add edx [esp-10h+arg_B4] +
mov eax 16h +
call sub_405A30  +
test esi esi +
jz loc_40F884  +
cmp [esp-10h+arg_60] 2 +
mov edx offset a@S +
mov eax offset a@@S +
mov [esp-10h+arg_0] esi +
cmovnz eax edx +
mov [esp+0] eax +
call printf  +
jmp loc_40F884  +
mov esi ds:dword_472C54 +
test esi esi +
jz loc_410BB2  +
mov dword ptr [esp+0] offset aOffsetInfoTy_1 +
call puts  +
jmp loc_40F640  +
mov edi ds:dword_472C54 +
test edi edi +
jz loc_410B90  +
mov [esp+9Ch+var_9C] offset aOffsetInfoTy_2 +
call puts  +
jmp loc_40F640  +
cmp ax 16h +
jz loc_410730  +
cmp ax 17h +
nop   +
jnz loc_40F6FF  +
cmp ebx 11h +
ja loc_40F6FF  +
mov eax ds:off_452120[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 0B4h +
jnb loc_4107D0  +
cmp ax 0B1h +
jnz loc_40F6FF  +
cmp ebx 1Fh +
ja loc_40F6FF  +
mov eax ds:off_45D5E0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 2530h +
jnz loc_410849  +
cmp ebx 6 +
ja loc_40F6FF  +
mov eax ds:off_457CF4[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
mov [esp-10h+arg_0] ebx +
mov dword ptr [esp+0] offset aUnrecognized7l +
call printf  +
jmp loc_40FDCF  +
mov [esp-10h+arg_0] edx +
mov dword ptr [esp+0] offset aUnrecognized7l +
call printf  +
jmp loc_40FDAB  +
cmp ax 0BFh +
jnz loc_410CF4  +
cmp ebx 81h +
ja loc_40F6FF  +
mov eax ds:off_451800[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 0Bh +
jz loc_4106C6  +
cmp ax 0Fh +
jnz loc_40F6FF  +
cmp ebx 0F5h +
ja loc_40F6FF  +
mov eax ds:off_45BC00[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
mov eax [ebx+18h] +
cmp eax ds:dword_471DA4 +
jnb loc_410BE1  +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea eax [eax+edx*8] +
test eax eax +
jz loc_410F31  +
mov edx ds:dword_47207C +
test edx edx +
jz loc_410F8F  +
mov eax [eax] +
cmp eax ds:dword_472078 +
lea ecx [edx+eax] +
mov edx offset aCorrupt +
cmovb edx ecx +
jmp loc_40F87A  +
neg eax  +
adc edx 0 +
neg edx  +
mov [esp-10h+arg_0] eax +
mov [esp-10h+arg_4] edx +
mov dword ptr [esp+0] offset aI64x_3 +
call printf  +
jmp loc_40F8C0  +
cmp ax 71h +
jnz loc_40F6FF  +
cmp ebx 4Dh +
lea esi [esi+0] +
ja loc_40F6FF  +
mov eax ds:off_456B00[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 0BEEFh +
jz loc_410830  +
cmp ax 0DEADh +
jnz loc_40F6FF  +
cmp ebx 7 +
ja loc_40F6FF  +
mov eax ds:off_4580E0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 9041h +
jz loc_410296  +
cmp ax 9080h +
jnz loc_40F6FF  +
cmp ebx 33h +
ja loc_40F6FF  +
mov eax ds:off_4500A0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 54h +
jz loc_410853  +
cmp ax 55h +
jnz loc_40F6FF  +
cmp ebx 8 +
ja loc_40F6FF  +
mov eax ds:off_45CFE0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 3Eh +
jz loc_4107D0  +
cmp ax 46h +
jnz loc_40F6FF  +
cmp ebx 15h +
ja loc_40F6FF  +
mov eax ds:off_459AE0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 5Ah +
jz loc_41057A  +
cmp ax 5Bh +
jnz loc_40F6FF  +
cmp ebx 10h +
ja loc_40F6FF  +
mov eax ds:off_4563E0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 7676h +
jz loc_410770  +
cmp ax 8217h +
jnz loc_40F6FF  +
cmp ebx 0Eh +
ja loc_40F6FF  +
mov eax ds:off_45A560[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 15h +
ja loc_40F6FF  +
mov eax ds:off_4597E0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0C9h +
ja loc_40F6FF  +
mov eax ds:off_45C840[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 2 +
jnz loc_40F6FF  +
cmp ebx 0FCh +
ja loc_40F6FF  +
mov eax ds:off_452760[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 5Dh +
jz loc_410B70  +
cmp ax 5Eh +
jnz loc_40F6FF  +
cmp ebx 38h +
ja loc_40F6FF  +
mov eax ds:off_44E960[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 1Fh +
ja loc_40F6FF  +
mov eax ds:off_45D380[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0FBh +
ja loc_40F6FF  +
mov eax ds:off_453B40[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 18h +
ja loc_40F6FF  +
mov eax ds:off_44F440[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0Ch +
ja loc_40F6FF  +
mov eax ds:off_45CF20[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 24h +
ja loc_40F6FF  +
mov eax ds:off_45DFE0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0Dh +
ja loc_40F6FF  +
mov eax ds:off_45CD40[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0FBh +
ja loc_40F6FF  +
mov eax ds:off_44EF80[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0FEh +
ja loc_40F6FF  +
mov eax ds:off_458B40[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0E0h +
ja loc_40F6FF  +
mov eax ds:off_45A7E0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 22h +
ja loc_40F6FF  +
mov eax ds:off_457FC0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 3330h +
jnz loc_40F6FF  +
cmp ebx 0Ch +
ja loc_40F6FF  +
mov eax ds:off_45CC20[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 96h +
ja loc_40F6FF  +
mov eax ds:off_454840[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 2 +
ja loc_40F6FF  +
mov eax ds:off_457D38[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 29h +
ja loc_40F6FF  +
mov eax ds:off_45F3C0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 7 +
jz loc_4110B3  +
jbe loc_410CBE  +
cmp ebx 0Bh +
jz loc_411059  +
nop   +
lea esi [esi+0] +
jbe loc_410D45  +
cmp ebx 0Dh +
jz loc_4110A6  +
nop   +
jb loc_411099  +
cmp ebx 0C8h +
jz loc_41104C  +
cmp ebx 0C9h +
mov [esp-10h+arg_2C] offset aR_visium_gnu_v +
jz loc_40FBDD  +
jmp loc_40F6FF  +
cmp ebx 408h +
ja loc_40F6FF  +
mov eax ds:off_460940[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0F3h +
ja loc_40F6FF  +
mov eax ds:off_45DA00[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0FFh +
ja loc_40F6FF  +
mov eax ds:off_451C20[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0Ch +
ja loc_40F6FF  +
mov eax ds:off_459940[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0FFh +
ja loc_40F6FF  +
mov eax ds:off_4531A0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 15h +
ja loc_40F6FF  +
mov eax ds:off_453700[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 6 +
jnz loc_40F6FF  +
cmp ebx 0FBh +
ja loc_40F6FF  +
mov eax ds:off_45AF00[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 22h +
ja loc_40F6FF  +
mov eax ds:off_456680[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 1Dh +
ja loc_40F6FF  +
mov eax ds:off_4591E0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 14h +
ja loc_40F6FF  +
mov eax ds:off_45D120[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 7 +
ja loc_40F6FF  +
mov eax ds:off_45A600[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 74h +
jnz loc_40F6FF  +
cmp ebx 8 +
ja loc_40F6FF  +
mov eax ds:off_44EC60[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0Ch +
ja loc_40F6FF  +
mov eax ds:off_45A300[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 3Dh +
ja loc_40F6FF  +
mov eax ds:off_4595C0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 8Dh +
ja loc_40F6FF  +
mov eax ds:off_45C2A0[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0E4h +
ja loc_40F6FF  +
mov eax ds:off_44F960[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0D5h +
ja loc_40F6FF  +
mov eax ds:off_457660[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 0FEh +
ja loc_40F6FF  +
mov eax ds:off_455400[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ax 2Bh +
jz loc_4106C6  +
cmp ax 2Dh +
jnz loc_40F6FF  +
cmp ebx 69h +
ja loc_40F6FF  +
mov eax ds:off_45F000[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
mov [esp+9Ch+var_9C] offset aOffsetInfoTy_3 +
call puts  +
jmp loc_40F640  +
mov [esp+9Ch+var_9C] offset aOffsetInfoTy_4 +
call puts  +
jmp loc_40F640  +
mov dword ptr [esp+0] offset aOffsetInfoTy_5 +
call puts  +
jmp loc_40F640  +
mov dword ptr [esp+0] offset aOffsetInfoTy_6 +
call puts  +
jmp loc_40F640  +
mov [esp-10h+arg_24] offset a?? +
jmp loc_40F800  +
cmp eax 0FFFFFFF1h +
mov edx offset aAbs +
jz loc_40F87A  +
cmp eax 0FFFFFFF2h +
mov edx offset aCommon +
jz loc_40F87A  +
movzx ecx ds:word_471D92 +
cmp cx 8 +
jz loc_410EDF  +
cmp cx 8Ch +
jz loc_410F3B  +
lea edx [ecx-0B4h] +
cmp dx 1 +
jbe loc_410E20  +
cmp cx 3Eh +
jz loc_410E20  +
cmp cx 32h +
jnz loc_410C52  +
movzx edx ds:byte_471D67 +
cmp dl 1 +
jz loc_41114A  +
cmp dl 0Dh +
jz loc_411135  +
lea ebx [esp-10h+arg_64] +
mov [esp-10h+arg_4] eax +
mov [esp-10h+arg_0] offset aSection0xX +
mov [esp+0] ebx +
call sprintf  +
mov edx ebx +
jmp loc_40F87A  +
mov eax ds:off_45A440[ebx*4] +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBD1  +
cmp ebx 9 +
jz loc_41101C  +
jbe loc_410E70  +
cmp ebx 0C8h +
jz loc_41100F  +
cmp ebx 0C9h +
jz loc_411002  +
cmp ebx 0Ah +
jnz loc_40F6FF  +
mov [esp-10h+arg_2C] offset aR_iq2000_32_de +
jmp loc_40FBDD  +
cmp ebx 3 +
jz loc_411066  +
ja loc_410D6C  +
cmp ebx 1 +
mov [esp-10h+arg_2C] offset aR_visium_8 +
jz loc_40FBDD  +
mov esi offset aR_visium_none +
mov eax offset aR_visium_16 +
cmovbe eax esi +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBDD  +
cmp ax 0C3h +
jz loc_410B70  +
jmp loc_40F6FF  +
mov [esp-10h+arg_0] edx +
mov dword ptr [esp+0] offset aStringTableInd +
call printf  +
jmp loc_40F884  +
cmp ax 5Ch +
jnb loc_40FA82  +
cmp ax 54h +
jbe loc_410F04  +
cmp ax 55h +
jz loc_40F5E7  +
cmp ax 5Ah +
ja loc_40F9FA  +
jmp loc_40FA82  +
cmp ebx 9 +
mov [esp-10h+arg_2C] offset aR_visium_lo16 +
jz loc_40FBDD  +
mov esi offset aR_visium_hi16 +
mov eax offset aR_visium_im16 +
cmovbe eax esi +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBDD  +
cmp ebx 5 +
mov [esp-10h+arg_2C] offset aR_visium_16_pc +
jz loc_40FBDD  +
mov esi offset aR_visium_8_pcr +
mov eax offset aR_visium_32_pc +
cmovbe eax esi +
mov [esp-10h+arg_2C] eax +
jmp loc_40FBDD  +
cmp ax 28h +
jz loc_40F5E7  +
ja loc_411073  +
cmp ax 24h +
jz loc_40FA82  +
lea esi [esi+0] +
ja loc_411126  +
cmp ax 17h +
ja loc_40F9FA  +
jmp loc_40FA82  +
cmp ax 0DEADh +
jz loc_40FA82  +
nop   +
ja loc_410FD5  +
cmp ax 0AD45h +
jz loc_40FA82  +
jbe loc_411108  +
cmp ax 0BAABh +
jz loc_40FA82  +
cmp ax 0BEEFh +
jnz loc_40F9FA  +
jmp loc_40FA82  +
test ebx ebx +
jz loc_410F82  +
cmp ebx 1 +
mov [esp-10h+arg_2C] offset aR_iq2000_16 +
jz loc_40FBDD  +
jmp loc_40F6FF  +
cmp eax 0FFFFFF02h +
mov edx offset aLarge_common +
jnz loc_410C33  +
jmp loc_40F87A  +
cmp ax 0DFh +
ja loc_411029  +
cmp ax 0DDh +
jnb loc_40FA82  +
cmp ax 0C3h +
jz loc_40FA82  +
cmp ax 0C5h +
jz loc_40FA82  +
cmp ax 0BFh +
jnz loc_40F9FA  +
jmp loc_40FA82  +
cmp ebx 7 +
jz loc_410F99  +
cmp ebx 8 +
mov [esp-10h+arg_2C] offset aR_iq2000_offse +
jz loc_40FBDD  +
jmp loc_40F6FF  +
cmp ax 3 +
jz loc_40F5E7  +
cmp ax 4 +
lea esi [esi+0] +
jz loc_40FA82  +
cmp ax 2 +
jnz loc_40F9FA  +
jmp loc_40FA82  +
cmp ax 9026h +
jz loc_40FA82  +
nop   +
jbe loc_4110E5  +
cmp ax 9041h +
jz loc_40F5E7  +
cmp ax 9080h +
jnz loc_40F9FA  +
jmp loc_40FA82  +
cmp eax 0FFFFFF03h +
mov edx offset aScommon +
jz loc_40F87A  +
cmp eax 0FFFFFF04h +
mov edx offset aSundef +
jnz loc_410C52  +
jmp loc_40F87A  +
cmp ax 53h +
jnb loc_40FA82  +
cmp ax 4Ch +
ja loc_4110CF  +
cmp ax 4Bh +
jnb loc_40FA82  +
cmp ax 3Eh +
jnz loc_40F9FA  +
jmp loc_40FA82  +
mov edx offset aNone_0 +
jmp loc_40F87A  +
cmp eax 0FFFFFF00h +
mov edx offset aScommon +
jnz loc_410C52  +
jmp loc_40F87A  +
cmp ax 0B5h +
ja loc_4110C0  +
cmp ax 0B4h +
nop   +
jnb loc_40FA82  +
cmp ax 0B1h +
jnz loc_40F9FA  +
jmp loc_40FA82  +
mov [esp-10h+arg_2C] offset aR_iq2000_lo16 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_iq2000_none +
jmp loc_40FBDD  +
mov edx offset aNoName +
jmp loc_40F87A  +
mov [esp-10h+arg_2C] offset aR_iq2000_off_0 +
jmp loc_40FBDD  +
cmp ax 71h +
jnb loc_40FA82  +
cmp ax 65h +
jz loc_40FA82  +
jb loc_40F9FA  +
sub eax 69h +
cmp ax 1 +
ja loc_40F9FA  +
lea esi [esi+0] +
jmp loc_40FA82  +
cmp ax 0FEB0h +
jz loc_40FA82  +
nop   +
ja loc_4110F5  +
cmp ax 0F00Dh +
jnz loc_40F9FA  +
jmp loc_40FA82  +
mov [esp-10h+arg_2C] offset aR_iq2000_32 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_iq2000_gnu_v +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_iq2000_gnu_0 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_iq2000_uhi16 +
jmp loc_40FBDD  +
cmp ax 1059h +
jz loc_40FA82  +
cmp ax 1223h +
jz loc_40FA82  +
cmp ax 1057h +
jnz loc_40F9FA  +
jmp loc_40FA82  +
mov [esp-10h+arg_2C] offset aR_visium_gnu_0 +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_visium_hi16_ +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_visium_32 +
jmp loc_40FBDD  +
cmp ax 2Ah +
jb loc_40F9FA  +
cmp ax 2Bh +
jbe loc_40FA82  +
sub eax 2Dh +
cmp ax 3 +
ja loc_40F9FA  +
jmp loc_40FA82  +
mov [esp-10h+arg_2C] offset aR_visium_lo16_ +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_visium_im16_ +
jmp loc_40FBDD  +
mov [esp-10h+arg_2C] offset aR_visium_pc16 +
jmp loc_40FBDD  +
cmp ax 0B7h +
jnz loc_40F9FA  +
jmp loc_40FA82  +
cmp ax 50h +
jnz loc_40F9FA  +
lea esi [esi+0] +
jmp loc_40FA82  +
cmp ax 8217h +
jnz loc_40F9FA  +
nop   +
jmp loc_40FA82  +
add ax 146h +
cmp ax 1 +
ja loc_40F9FA  +
jmp loc_40FA82  +
cmp ax 0ABC7h +
jnz loc_40F9FA  +
jmp loc_40FA82  +
cmp ax 3330h +
jnz loc_40F9FA  +
jmp loc_40FA82  +
cmp ax 27h +
jnz loc_40F9FA  +
jmp loc_40FA82  +
cmp eax 0FFFFFF20h +
mov edx offset aVms_symvec +
jnz loc_410C52  +
jmp loc_40F87A  +
cmp eax 0FFFFFF00h +
mov edx offset aAnsi_com +
jnz loc_410C52  +
jmp loc_40F87A  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 6Ch +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+arg_0] +
mov [esp+78h+var_64] edx +
mov [esp+78h+var_54] eax +
mov eax [esp+78h+arg_4] +
mov [esp+78h+var_60] eax +
mov eax [esp+78h+arg_C] +
mov [eax] bp +
mov eax [esp+78h+arg_10] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esp+78h+arg_14] +
test eax eax +
jz loc_4111C6  +
mov eax [esp+78h+arg_14] +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0FFFFFFFFh +
mov eax [esp+78h+var_64] +
cmp [eax+4] edi +
jz loc_4114F0  +
mov esi [esp+78h+var_64] +
mov eax [esi] +
lea edx [esi+8] +
mov [esp+78h+var_50] edx +
call sub_407EA0  +
mov eax [esp+78h+var_58] +
mov [esi+4] edi +
mov ecx [edi+18h] +
mov eax [eax] +
mov [esp+78h+var_68] offset aUnwindData +
mov edx [edi+24h] +
mov [esp+78h+var_5C] eax +
mov eax [edi+20h] +
mov [esp+78h+var_6C] edx +
mov edx [esp+78h+var_5C] +
mov [esp+78h+var_78] 1 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_70] eax +
xor eax eax +
call sub_403CC0  +
mov ebp ds:dword_471D4C +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov [esi] eax +
mov esi ds:dword_471DA4 +
lea edx [esi+esi*8] +
lea ecx [ebp+edx*8+0] +
cmp ebp ecx +
jnb loc_4112D0  +
mov edx ebp +
jmp loc_41125B  +
add edx 48h +
cmp edx ecx +
jnb loc_4112D0  +
mov ebx [edx+2Ch] +
cmp ebx esi +
jnb loc_411254  +
lea ebx [ebx+ebx*8] +
lea ebx [ebp+ebx*8+0] +
cmp edi ebx +
jnz loc_411254  +
mov ebx [edx+4] +
cmp ebx 4 +
jnz loc_4112C0  +
mov eax [esp+78h+var_64] +
cmp ebx 9 +
mov esi [esp+78h+var_64] +
mov ecx [edx+20h] +
mov edx [edx+18h] +
mov [eax+10h] ebx +
mov eax [esp+78h+var_58] +
mov ebx [esp+78h+var_50] +
mov eax [eax] +
mov [esp+78h+var_78] ebx +
mov [esp+78h+var_5C] eax +
lea eax [esi+0Ch] +
mov [esp+78h+var_74] eax +
mov eax [esp+78h+var_5C] +
jz loc_4116C0  +
call sub_4050F0  +
test eax eax +
jz loc_411450  +
mov edx [esi+8] +
mov eax [esi] +
jmp loc_4112D2  +
cmp ebx 9 +
jz loc_411275  +
add edx 48h +
cmp edx ecx +
jb loc_41125B  +
lea esi [esi+0] +
xor edx edx +
mov esi [esp+78h+var_64] +
mov [esi+14h] edx +
test eax eax +
jz loc_411450  +
mov ecx [edi+20h] +
mov ebx [edi+24h] +
mov esi ecx +
add esi 0FFFFFFFCh +
mov edi ebx +
adc edi 0FFFFFFFFh +
cmp edi [esp+78h+var_60] +
jb loc_411450  +
jbe loc_4114F7  +
cmp ebx 0 +
ja loc_41130F  +
cmp ecx 4 +
jbe loc_411437  +
mov esi [esp+78h+var_60] +
test esi esi +
js loc_411450  +
add eax [esp+78h+var_54] +
mov [esp+78h+var_74] 4 +
mov [esp+78h+var_78] eax +
call ds:dword_472C94  +
mov [esp+78h+var_2C] eax +
mov [esp+78h+var_30] eax +
mov eax [esp+78h+var_64] +
mov eax [eax+8] +
test eax eax +
mov [esp+78h+var_5C] eax +
jz loc_4116E5  +
mov eax [esp+78h+var_64] +
mov edi [esp+78h+var_5C] +
mov ebx [eax+0Ch] +
mov ebp [eax+14h] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*8] +
cmp ebp eax +
jz loc_411468  +
mov eax [esp+78h+var_2C] +
mov [esp+78h+var_4C] 0 +
mov [esp+78h+var_50] ebx +
and eax 40000000h +
mov [esp+78h+var_1C] eax +
mov edx [ebp+4] +
cmp [esp+78h+var_60] edx +
mov eax [ebp+0] +
ja loc_4113A0  +
jb loc_411460  +
cmp [esp+78h+var_54] eax +
jb loc_411460  +
lea esi [esi+0] +
mov ecx eax +
and ecx 3 +
test ecx ecx +
jnz loc_411490  +
cmp [esp+78h+var_60] edx +
ja loc_4114B2  +
jb loc_4113C6  +
cmp [esp+78h+var_54] eax +
lea esi [esi+0] +
ja loc_4114B2  +
mov edi [esp+78h+var_58] +
mov esi [edi+4] +
test esi esi +
jz loc_4114B2  +
mov edi [esp+78h+var_64] +
mov ecx [edi+10h] +
cmp ecx 9 +
jz loc_411517  +
cmp ecx 4 +
jnz loc_41172D  +
mov ecx [ebp+10h] +
mov ebx [ebp+14h] +
mov [esp+78h+var_48] ecx +
mov [esp+78h+var_44] ebx +
mov ebx [ebp+0Ch] +
mov ecx [ebp+8] +
mov edi [esp+78h+var_58] +
mov [esp+78h+var_3C] ebx +
mov [esp+78h+var_40] ecx +
shrd ecx ebx +
shr ebx 8 +
mov edi [edi+8] +
cmp ebx 0 +
jbe loc_411552  +
mov [esp+78h+var_70] edi +
mov [esp+78h+var_74] ecx +
mov [esp+78h+var_78] offset aBadSymbolIndex +
call sub_436A70  +
jmp loc_411468  +
cmp ebx [esp+78h+var_60] +
jb loc_411450  +
lea esi [esi+0] +
ja loc_41130F  +
cmp ecx [esp+78h+var_54] +
ja loc_41130F  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+78h+var_4C] +
test ebx ebx +
jz loc_4114D0  +
mov eax [esp+78h+arg_8] +
mov edi [esp+78h+var_30] +
mov [eax] edi +
mov eax [esp+78h+var_64] +
mov [eax+14h] ebp +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+78h+var_74] eax +
mov [esp+78h+var_78] offset aSkippingUnex_0 +
call sub_437070  +
mov eax [esp+78h+var_64] +
mov edi [eax+8] +
mov eax [eax+0Ch] +
mov [esp+78h+var_5C] edi +
mov [esp+78h+var_50] eax +
mov eax [esp+78h+var_50] +
add ebp 18h +
mov edi [esp+78h+var_5C] +
lea eax [eax+eax*2] +
lea eax [edi+eax*8] +
cmp ebp eax +
jnz loc_411380  +
jmp loc_411468  +
mov eax [esp+78h+var_5C] +
mov edx [eax+4] +
cmp [esp+78h+var_60] edx +
mov eax [eax] +
jb loc_4114E7  +
ja loc_411506  +
cmp [esp+78h+var_54] eax +
jnb loc_411506  +
mov ebp [esp+78h+var_5C] +
jmp loc_411468  +
mov eax [eax] +
jmp loc_4112D9  +
cmp esi [esp+78h+var_54] +
jb loc_411450  +
jmp loc_411301  +
mov ebp [esp+78h+var_5C] +
mov [esp+78h+var_4C] 1 +
jmp loc_4113A0  +
mov edi [esp+78h+var_2C] +
mov ecx [esp+78h+var_1C] +
mov [esp+78h+var_44] 0 +
and edi 7FFFFFFFh +
test ecx ecx +
mov [esp+78h+var_48] edi +
jz loc_4113FC  +
mov ecx edi +
or ecx 80000000h +
mov [esp+78h+var_48] ecx +
mov [esp+78h+var_44] 0FFFFFFFFh +
jmp loc_4113FC  +
cmp ecx edi +
jnb loc_411421  +
shl ecx 5 +
mov ebx [esp+78h+var_44] +
lea edi [esi+ecx] +
mov ecx [esp+78h+var_48] +
add ecx [edi] +
adc ebx [edi+4] +
mov [esp+78h+var_20] edi +
mov esi ecx +
mov [esp+78h+var_28] ecx +
mov ecx [esp+78h+var_64] +
mov [esp+78h+var_24] ebx +
mov ecx [ecx+4] +
add eax [ecx+10h] +
adc edx [ecx+14h] +
mov ecx esi +
sub ecx eax +
movzx eax ds:word_471D92 +
sbb ebx edx +
mov [esp+78h+var_38] ecx +
mov [esp+78h+var_34] ebx +
cmp ax 28h +
jz loc_411670  +
cmp ax 8Ch +
jnz loc_41171C  +
movzx edx byte ptr [esp+78h+var_40] +
mov eax ds:off_451C20[edx*4] +
test eax eax +
jz loc_4116FC  +
mov edi offset aR_c6000_none +
mov esi eax +
mov ecx 0Dh +
cmps   +
jz loc_4114B2  +
mov edi offset aR_c6000_prel31 +
mov ecx 0Fh +
mov esi eax +
cmps   +
jnz loc_4116D5  +
mov edx [esp+78h+var_34] +
mov eax [esp+78h+var_38] +
shrd eax edx +
shr edx 1 +
mov [esp+78h+var_38] eax +
mov [esp+78h+var_34] edx +
mov edi [esp+78h+var_38] +
mov eax [esp+78h+var_2C] +
mov ecx [esp+78h+arg_C] +
mov edx [esp+78h+var_24] +
and edi 7FFFFFFFh +
mov [esp+78h+var_30] edi +
mov edi [esp+78h+var_20] +
and eax 80000000h +
or [esp+78h+var_30] eax +
mov eax [edi+18h] +
mov [ecx] ax +
mov ecx [esp+78h+arg_10] +
mov eax [esp+78h+var_28] +
mov [ecx+4] edx +
mov [ecx] eax +
mov eax [esp+78h+arg_14] +
test eax eax +
jz loc_411468  +
mov ecx [esp+78h+arg_14] +
mov eax [edi+10h] +
mov dword ptr [ecx+4] 0 +
mov [ecx] eax +
jmp loc_411468  +
movzx edx byte ptr [esp+78h+var_40] +
mov eax ds:off_45E820[edx*4] +
test eax eax +
jz loc_41170C  +
mov edi offset aR_arm_none +
mov ecx 0Bh +
mov esi eax +
cmps   +
jz loc_4114B2  +
mov edi offset aR_arm_prel31 +
mov esi eax +
mov ecx 0Dh +
cmps   +
jz loc_411603  +
mov [esp+78h+var_74] eax +
mov [esp+78h+var_78] offset aSkippingUnex_1 +
jmp loc_41149B  +
call sub_404040  +
test eax eax +
jnz loc_4112B8  +
lea esi [esi+0] +
jmp loc_411450  +
mov [esp+78h+var_74] eax +
mov [esp+78h+var_78] offset aSkippingUnex_2 +
jmp loc_41149B  +
mov eax [esp+78h+arg_8] +
mov edi [esp+78h+var_2C] +
mov [eax] edi +
mov eax 1 +
jmp loc_411452  +
mov [esp+78h+var_74] edx +
mov [esp+78h+var_78] offset aSkippingUnknow +
jmp loc_41149B  +
mov [esp+78h+var_74] edx +
mov [esp+78h+var_78] offset aSkippingUnkn_0 +
jmp loc_41149B  +
mov [esp+78h+var_78] offset aOnlyTiAndArmUn +
call sub_437070  +
jmp loc_411468  +
mov [esp+78h+var_74] ecx +
mov [esp+78h+var_78] offset aUnknownSection +
call sub_436A70  +
jmp loc_411468  +
***
sub esp 24h +
mov ebx [eax+24h] +
mov esi [eax+20h] +
mov ecx ebx +
or ecx esi +
jz loc_411796  +
cmp dword ptr [eax+4] 8 +
jz loc_411796  +
mov ecx [eax+18h] +
xor eax eax +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_14] offset aSectionContent +
mov [esp+24h+var_24] 1 +
mov [esp+24h+var_20] 0 +
call sub_403CC0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
call sub_401C80  +
mov [esp+24h+var_24] offset aSectionSHasNoD +
mov [esp+24h+var_20] eax +
call printf  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
mov [esp+78h+var_58] ecx +
call sub_411750  +
test eax eax +
mov [esp+78h+var_4C] eax +
mov [esp+78h+var_3C] eax +
jz loc_411A9A  +
mov eax [ebx+20h] +
mov edx [ebx+24h] +
mov [esp+78h+var_60] eax +
mov eax ebx +
mov [esp+78h+var_5C] edx +
call sub_401C80  +
mov [esp+78h+var_78] offset aHexDumpOfSecti +
mov [esp+78h+var_74] eax +
call printf  +
mov edi ds:dword_471CEC +
test edi edi +
jz loc_411918  +
mov eax [esp+78h+var_60] +
mov edx [esp+78h+var_5C] +
test byte ptr [ebx+9] 8 +
mov [esp+78h+var_38] eax +
mov [esp+78h+var_34] edx +
jnz loc_411B09  +
cmp [esp+78h+var_5C] 0 +
jbe loc_411AF9  +
mov eax [esp+78h+var_3C] +
mov edi offset aZlib +
mov ecx 5 +
mov esi eax +
cmps   +
jnz loc_411918  +
movzx edx byte ptr [eax+4] +
xor ecx ecx +
xor edi edi +
movzx esi byte ptr [eax+5] +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+6] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+7] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+8] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+9] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+0Ah] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+0Bh] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
mov esi [esp+78h+var_60] +
adc ecx edi +
mov edi [esp+78h+var_5C] +
add eax 0Ch +
mov [esp+78h+var_3C] eax +
add esi 0FFFFFFF4h +
adc edi 0FFFFFFFFh +
mov [esp+78h+var_38] esi +
mov [esp+78h+var_34] edi +
mov eax ecx +
or eax edx +
jz loc_411918  +
lea eax [esp+78h+var_38] +
mov [esp+78h+var_78] eax +
lea eax [esp+78h+var_3C] +
call sub_403F60  +
test eax eax +
jz loc_411918  +
mov eax [esp+78h+var_38] +
mov edx [esp+78h+var_34] +
mov [esp+78h+var_60] eax +
mov [esp+78h+var_5C] edx +
mov eax [esp+78h+var_58] +
test eax eax +
jnz loc_411AC8  +
mov esi ds:dword_471DA4 +
mov edi ds:dword_471D4C +
lea eax [esi+esi*8] +
lea ecx [edi+eax*8] +
cmp ecx edi +
jbe loc_411969  +
mov eax edi +
lea esi [esi+0] +
mov edx [eax+4] +
cmp edx 9 +
jz loc_41194D  +
cmp edx 4 +
jnz loc_411962  +
mov edx [eax+2Ch] +
cmp edx esi +
jnb loc_411962  +
lea edx [edx+edx*8] +
lea edx [edi+edx*8] +
cmp ebx edx +
jz loc_411AA2  +
add eax 48h +
cmp ecx eax +
ja loc_411940  +
mov edx [ebx+14h] +
mov eax [ebx+10h] +
mov ebp [esp+78h+var_3C] +
mov [esp+78h+var_54] edx +
mov edx [esp+78h+var_5C] +
mov [esp+78h+var_58] eax +
mov eax [esp+78h+var_60] +
mov ecx edx +
or ecx eax +
jz loc_411A82  +
lea esi [esi+0] +
mov edx [esp+78h+var_5C] +
mov eax [esp+78h+var_60] +
cmp edx 0 +
mov ebx eax +
ja loc_4119A4  +
cmp ebx 10h +
jbe loc_4119A9  +
mov ebx 10h +
mov eax [esp+78h+var_58] +
xor esi esi +
mov [esp+78h+var_78] offset a0x8_8lx_0 +
mov [esp+78h+var_74] eax +
call printf  +
jmp loc_4119E8  +
movzx eax byte ptr [ebp+esi+0] +
mov [esp+78h+var_78] offset a2_2x +
mov [esp+78h+var_74] eax +
call printf  +
mov eax esi +
and eax 3 +
cmp eax 3 +
jz loc_411A02  +
add esi 1 +
cmp esi 10h +
jz loc_411A16  +
cmp ebx esi +
jg loc_4119C1  +
mov [esp+78h+var_78] offset unk_446400 +
call printf  +
mov eax esi +
and eax 3 +
cmp eax 3 +
jnz loc_4119E0  +
mov [esp+78h+var_78] 20h +
add esi 1 +
call putchar  +
cmp esi 10h +
jnz loc_4119E8  +
xor si si +
jmp loc_411A2F  +
mov [esp+78h+var_78] eax +
add esi 1 +
call putchar  +
cmp ebx esi +
jle loc_411A4F  +
movzx eax byte ptr [ebp+esi+0] +
lea edx [eax-20h] +
cmp edx 5Eh +
jbe loc_411A20  +
mov [esp+78h+var_78] 2Eh +
add esi 1 +
call putchar  +
cmp ebx esi +
jg loc_411A2F  +
mov [esp+78h+var_78] 0Ah +
add ebp ebx +
call putchar  +
mov eax ebx +
cdq   +
add [esp+78h+var_58] ebx +
adc [esp+78h+var_54] edx +
sub [esp+78h+var_60] ebx +
sbb [esp+78h+var_5C] edx +
mov edx [esp+78h+var_5C] +
mov eax [esp+78h+var_60] +
mov edi edx +
or edi eax +
jnz loc_411990  +
mov eax [esp+78h+var_4C] +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_78] 0Ah +
call putchar  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [eax+24h] +
or edx [eax+20h] +
jz loc_411962  +
cmp [eax+28h] esi +
jnb loc_411962  +
mov [esp+78h+var_78] offset aNoteThisSectio +
call puts  +
jmp loc_411969  +
mov eax [esp+78h+var_60] +
mov edx [esp+78h+var_5C] +
mov ecx [esp+78h+var_3C] +
mov [esp+78h+var_6C] 0 +
mov [esp+78h+var_78] eax +
mov eax ebp +
mov [esp+78h+var_74] edx +
mov edx ebx +
mov [esp+78h+var_70] 0 +
call sub_4080C0  +
jmp loc_411969  +
cmp [esp+78h+var_60] 0Ch +
jbe loc_411918  +
jmp loc_41183C  +
mov edx [esp+78h+var_3C] +
lea eax [esp+78h+var_30] +
call sub_407C40  +
mov edi [esp+78h+var_30] +
cmp edi 1 +
jz loc_411B3F  +
mov eax ebx +
call sub_401C80  +
mov [esp+78h+var_70] edi +
mov [esp+78h+var_78] offset aSectionSHasUns +
mov [esp+78h+var_74] eax +
call sub_437070  +
jmp loc_411A9A  +
mov edx [esp+78h+var_20] +
mov ecx [esp+78h+var_1C] +
xor ecx [ebx+34h] +
xor edx [ebx+30h] +
or ecx edx +
jz loc_411B6D  +
mov eax ebx +
call sub_401C80  +
mov [esp+78h+var_78] offset aCompressedSect +
mov [esp+78h+var_74] eax +
call sub_437070  +
jmp loc_411A9A  +
xor edi edi +
mov edx [esp+78h+var_28] +
add [esp+78h+var_3C] eax +
sub [esp+78h+var_38] eax +
mov ecx [esp+78h+var_24] +
sbb [esp+78h+var_34] edi +
jmp loc_4118EE  +
***
test eax eax +
jz loc_411BE0  +
movzx edx ds:word_471D92 +
cmp dx 15h +
jz loc_411BF0  +
cmp dx 32h +
jz loc_411CA0  +
cmp dx 8 +
jz loc_411C33  +
mov [esp+18h+var_C] eax +
mov [esp+18h+var_10] offset aOtherX +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] offset unk_471240 +
call sub_402590  +
add esp 18h +
mov eax offset unk_471240 +
pop ebx  +
retn   +
add esp 18h +
mov eax offset unk_44640B +
pop ebx  +
retn   +
mov ecx eax +
mov edx 1 +
and ecx 0E0h +
shr ecx 5 +
shl edx cl +
and edx 0FFFFFFFCh +
jz loc_411BB5  +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_10] offset aLocalentryD +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] offset unk_471200 +
call sub_402590  +
mov edx offset unk_471200 +
mov eax edx +
add esp 18h +
pop ebx  +
retn   +
cmp eax 20h +
jz loc_411E80  +
jbe loc_411C64  +
cmp eax 0A0h +
jz loc_411E70  +
cmp eax 0F0h +
jz loc_411C90  +
cmp eax 80h +
jnz loc_411BB5  +
mov edx offset aMicromips +
mov eax edx +
jmp loc_411C2E  +
cmp eax 4 +
jz loc_411C80  +
cmp eax 8 +
mov edx offset aMipsPlt +
jnz loc_411BB5  +
mov eax edx +
jmp loc_411C2E  +
mov edx offset aOptional +
mov eax edx +
jmp loc_411C2E  +
mov edx offset aMips16 +
mov eax edx +
jmp loc_411C2E  +
cmp ds:byte_471D67 0Dh +
jnz loc_411BB5  +
movzx ebx ds:word_471D90 +
mov byte ptr ds:dword_471220 0 +
lea edx [ebx-2] +
cmp dx 1 +
ja loc_411CF1  +
mov edx eax +
and edx 30h +
shr edx 4 +
cmp edx 2 +
jz loc_411EC0  +
cmp edx 3 +
jz loc_411EA6  +
cmp edx 1 +
jz loc_411E90  +
mov ds:dword_471220 offset loc_414320 +
mov edx eax +
mov ecx offset dword_471220 +
and edx 0C0h +
shr edx 6 +
cmp edx 2 +
jz loc_411D85  +
cmp edx 3 +
jz loc_411E20  +
cmp edx 1 +
jz loc_411DD0  +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_411D18  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471220 +
mov ds:dword_471220[ecx] 4E474920h +
mov ds:byte_471224[ecx] 0 +
cmp byte ptr ds:dword_471220 0 +
mov edx offset dword_471220 +
jz loc_411C2C  +
mov edx 471221h +
test edx edx +
jz loc_411BB5  +
mov eax edx +
jmp loc_411C2E  +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_411D85  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471220 +
mov ds:dword_471220[ecx] 44545320h +
mov ds:byte_471224[ecx] 0 +
jmp loc_411D5F  +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_411DD0  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471220 +
mov ds:dword_471220[ecx] 56535220h +
mov ds:byte_471224[ecx] 0 +
jmp loc_411D5F  +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_411E20  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471220 +
mov ds:dword_471220[ecx] 4B4E4C20h +
mov ds:byte_471224[ecx] 0 +
jmp loc_411D5F  +
mov edx offset aMicromipsMipsP +
mov eax edx +
jmp loc_411C2E  +
mov edx offset aMipsPic +
mov eax edx +
jmp loc_411C2E  +
mov ds:dword_471220 43455620h +
mov ds:byte_471224 0 +
jmp loc_411CF1  +
mov ds:dword_471220 56535220h +
mov ds:byte_471224 0 +
jmp loc_411CF1  +
mov ds:dword_471220 offset aDspFamily +
jmp loc_411CF1  +
***
test al 1 +
push ebx  +
jnz loc_412000  +
test al 2 +
jz loc_411F31  +
lea esi [esi+0] +
mov ecx offset dword_4711C0 +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_411EE5  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
mov edx 20h +
sub ecx offset dword_4711C0 +
mov ds:dword_4711C0[ecx] 4B414557h +
mov word ptr ds:dword_4711C4[ecx] dx +
test al 4 +
jz loc_411F8E  +
test al 3 +
jnz loc_412071  +
mov ecx offset dword_4711C0 +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_411F42  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
mov edx 20h +
sub ecx offset dword_4711C0 +
mov ds:dword_4711C0[ecx] 4F464E49h +
mov word ptr ds:dword_4711C4[ecx] dx +
and eax 0FFFFFFF8h +
jnz loc_411FA0  +
mov eax offset dword_4711C0 +
pop ebx  +
retn   +
mov edx offset dword_4711C0 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_411FA5  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax offset dword_4711C0 +
sub edx offset dword_4711C0 +
mov ds:dword_4711C0[edx] 753C207Ch +
mov ds:dword_4711C4[edx] 6F6E6B6Eh +
mov ds:dword_4711C8[edx] 3E6E77h +
pop ebx  +
retn   +
mov ecx offset dword_4711C0 +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_412005  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
mov edx 20h +
sub ecx offset dword_4711C0 +
test al 2 +
mov ds:dword_4711C0[ecx] 45534142h +
mov word ptr ds:dword_4711C4[ecx] dx +
jz loc_411F31  +
mov ebx 207Ch +
mov [ecx+4711C5h] bx +
mov byte ptr [ecx+4711C7h] 0 +
jmp loc_411EE0  +
mov ecx offset dword_4711C0 +
mov ebx [ecx] +
add ecx 4 +
lea edx [ebx-1010101h] +
not ebx  +
and edx ebx +
and edx 80808080h +
jz loc_412076  +
mov ebx edx +
shr ebx 10h +
test edx 8080h +
cmovz edx ebx +
lea ebx [ecx+2] +
cmovz ecx ebx +
add dl dl +
sbb ecx 3 +
mov ebx 207Ch +
sub ecx offset dword_4711C0 +
mov word ptr ds:dword_4711C0[ecx] bx +
mov byte ptr [ecx+4711C2h] 0 +
jmp loc_411F3D  +
***
mov edx eax +
sub esp 1Ch +
cmp edx 0FFFFFFF1h +
mov eax offset aAbs +
jz loc_412151  +
cmp edx 0FFFFFFF2h +
mov eax offset unk_4499EB +
jz loc_412151  +
test edx edx +
mov eax offset off_4499E7 +
jz loc_412151  +
cmp edx 0FFFFFF00h +
movzx eax ds:word_471D92 +
jz loc_412155  +
lea ecx [eax-0B4h] +
cmp cx 1 +
jbe loc_412170  +
cmp ax 3Eh +
jz loc_412170  +
cmp edx 0FFFFFF03h +
jz loc_412180  +
cmp edx 0FFFFFF00h +
jz loc_41215F  +
cmp edx 0FFFFFF04h +
jnz loc_412190  +
cmp ax 8 +
jz loc_412188  +
movzx edx dx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] offset aPrc0x04x +
mov [esp+1Ch+var_1C] offset unk_4711E0 +
call sprintf  +
mov eax offset unk_4711E0 +
add esp 1Ch +
retn   +
cmp ax 32h +
jz loc_412245  +
cmp ax 8Ch +
jnz loc_412131  +
mov eax offset aScom +
jmp loc_412151  +
cmp edx 0FFFFFF02h +
jnz loc_412113  +
mov eax offset aLarge_com +
jmp loc_412151  +
cmp ax 8 +
jnz loc_412131  +
jmp loc_412165  +
mov eax offset aSund +
jmp loc_412151  +
lea eax [edx+100h] +
cmp eax 1Fh +
jbe loc_412131  +
lea eax [edx+0E0h] +
cmp eax 1Fh +
jbe loc_4121F6  +
cmp edx 0FFFFFEFFh +
ja loc_412220  +
cmp edx ds:dword_471DA4 +
mov [esp+1Ch+var_14] edx +
jnb loc_4121D8  +
mov [esp+1Ch+var_18] offset a3d +
mov [esp+1Ch+var_1C] offset unk_4711E0 +
call sprintf  +
mov eax offset unk_4711E0 +
jmp loc_412151  +
mov [esp+1Ch+var_18] offset aBadSectionInde +
mov [esp+1Ch+var_1C] offset unk_4711E0 +
call sprintf  +
mov eax offset unk_4711E0 +
jmp loc_412151  +
movzx edx dx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] offset aOs0x04x +
mov [esp+1Ch+var_1C] offset unk_4711E0 +
call sprintf  +
mov eax offset unk_4711E0 +
jmp loc_412151  +
movzx edx dx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] offset aRsv0x04x +
mov [esp+1Ch+var_1C] offset unk_4711E0 +
call sprintf  +
mov eax offset unk_4711E0 +
jmp loc_412151  +
cmp ds:byte_471D67 1 +
jnz loc_412131  +
mov eax offset aAnsi_com +
jmp loc_412151  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov ecx 2 +
call sub_4055F0  +
cmp eax 4 +
jle loc_4123B0  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] offset a3lu +
call printf  +
mov eax ds:dword_472070 +
test eax eax +
jz loc_4122A3  +
cmp edi 0 +
mov ecx ds:dword_472074 +
jbe loc_4122C0  +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] offset aNoInfoAvailabl +
call printf  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp esi ecx +
jnb loc_4122A3  +
shl esi 5 +
mov ecx 6 +
mov ebx esi +
add ebx eax +
mov edx [ebx+4] +
mov eax [ebx] +
call sub_4055F0  +
mov [esp+18h+var_18] 20h +
call putchar  +
mov edx [ebx+0Ch] +
mov ecx 2 +
mov eax [ebx+8] +
call sub_4055F0  +
movzx eax byte ptr [ebx+14h] +
and eax 0Fh +
call sub_407ED0  +
mov [esp+18h+var_18] offset a7s +
mov [esp+18h+var_14] eax +
call printf  +
movzx eax byte ptr [ebx+14h] +
shr al 4 +
movzx eax al +
call sub_40B3E0  +
mov [esp+18h+var_18] offset a6s +
mov [esp+18h+var_14] eax +
call printf  +
movzx eax byte ptr [ebx+15h] +
and eax 3 +
call sub_403C70  +
mov [esp+18h+var_18] offset a7s +
mov [esp+18h+var_14] eax +
call printf  +
movzx eax byte ptr [ebx+15h] +
and eax 0FFFFFFFCh +
jnz loc_4123D0  +
mov eax [ebx+18h] +
call sub_4120D0  +
mov [esp+18h+var_18] offset a3_3s +
mov [esp+18h+var_14] eax +
call printf  +
mov edx ds:dword_472084 +
mov eax [ebx+10h] +
test edx edx +
jz loc_412387  +
cmp eax ds:dword_472080 +
jb loc_4123F0  +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aCorrupt14ld +
call printf  +
mov [esp+18h+var_18] 0Ah +
call putchar  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx ds:_iob +
add eax offset asc_449A2E +
mov [esp+18h+var_18] eax +
add edx 20h +
mov [esp+18h+var_14] edx +
call fputs  +
jmp loc_41227F  +
call sub_411B90  +
mov [esp+18h+var_18] offset aS_16 +
mov [esp+18h+var_14] eax +
call printf  +
jmp loc_41235A  +
add edx eax +
mov eax 19h +
call sub_405A30  +
jmp loc_412397  +
***
push esi  +
push ebx  +
sub esp 0BCh +
mov dword ptr [esp+0BCh+var_8C] eax +
mov eax ds:dword_471D34 +
test eax eax +
jnz loc_412430  +
mov ebp ds:dword_471D30 +
test ebp ebp +
jnz loc_412430  +
mov edi ds:dword_471D04 +
test edi edi +
jz loc_412AF0  +
nop   +
mov ecx ds:dword_471E84 +
mov edx ds:dword_471E80 +
mov eax ecx +
or eax edx +
jz loc_412521  +
mov esi ds:dword_471D04 +
test esi esi +
jnz loc_412478  +
mov ebx ds:dword_471D14 +
test ebx ebx +
jz loc_412521  +
mov eax ds:dword_471D30 +
test eax eax +
jnz loc_412521  +
mov eax ds:dword_472084 +
test eax eax +
jz loc_412521  +
movzx eax ds:word_471D92 +
cmp ax 9026h +
jnz loc_413079  +
cmp ds:byte_471D64 2 +
jz loc_4131AE  +
mov ebx 4 +
mov edi dword ptr [esp+0BCh+var_8C] +
mov [esp+0BCh+var_BC] 10h +
mov [esp+0BCh+var_B8] 0 +
mov eax edi +
call sub_40B840  +
mov dword ptr [esp+0BCh+var_B4] 0 +
mov [esp+0BCh+var_BC] edi +
add eax ds:dword_4720AC +
mov [esp+0BCh+var_B8] eax +
call fseek  +
test eax eax +
jz loc_4130F9  +
mov [esp+0BCh+var_BC] offset aUnableToSeek_0 +
call sub_436A70  +
mov [esp+0BCh+var_64] 0 +
mov [esp+0BCh+var_4C] 0 +
mov eax ds:dword_471D14 +
test eax eax +
jz loc_412509  +
xor eax eax +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0BCh+var_4C] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax [esp+0BCh+var_64] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov [esp+0BCh+var_64] 0 +
xor ebp ebp +
mov [esp+0BCh+var_4C] 0 +
mov [esp+0BCh+var_74] 0 +
mov dword ptr [esp+0BCh+var_94] 0 +
mov dword ptr [esp+0BCh+var_94+4] 0 +
mov ecx ds:dword_471E44 +
mov edx ds:dword_471E40 +
mov eax ecx +
or eax edx +
jnz loc_4129E0  +
mov [esp+0BCh+var_54] 0 +
mov [esp+0BCh+var_50] 0 +
mov [esp+0BCh+var_44] 0 +
mov [esp+0BCh+var_40] 0 +
mov [esp+0BCh+var_3C] 0 +
mov [esp+0BCh+var_48] 0 +
mov dword ptr [esp+0BCh+var_5C] 0 +
mov dword ptr [esp+0BCh+var_5C+4] 0 +
mov edx ds:dword_471E84 +
mov eax ds:dword_471E80 +
mov edi edx +
or edi eax +
jz loc_4126F5  +
mov edi ds:dword_471D34 +
test edi edi +
jz loc_412707  +
mov esi ds:dword_471D14 +
test esi esi +
jz loc_412707  +
mov ebx ds:dword_472084 +
test ebx ebx +
jz loc_412707  +
mov ecx ds:dword_472070 +
test ecx ecx +
jz loc_412707  +
or edx eax +
jnz loc_4132F8  +
mov eax ds:dword_471E44 +
or eax ds:dword_471E40 +
jnz loc_4131B8  +
lea esi [esi+0] +
mov esi ds:dword_471D04 +
test esi esi +
jz loc_412AD0  +
mov ebx [esp+0BCh+var_4C] +
test ebx ebx +
jz loc_412CD8  +
mov esi dword ptr [esp+0BCh+var_94] +
mov [esp+0BCh+var_BC] offset aHistogramForBu +
mov [esp+0BCh+var_B8] esi +
call printf  +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] esi +
call calloc  +
test eax eax +
mov [esp+0BCh+var_38] eax +
jz loc_4133B2  +
mov [esp+0BCh+var_BC] offset aLengthNumberOf +
call printf  +
mov edx dword ptr [esp+0BCh+var_94+4] +
mov eax dword ptr [esp+0BCh+var_94] +
mov edi edx +
or edi eax +
jz loc_41351D  +
mov eax [esp+0BCh+var_38] +
xor esi esi +
mov [esp+0BCh+var_6C] 0 +
mov [esp+0BCh+var_68] 0 +
mov dword ptr [esp+0BCh+var_8C] 0 +
mov [esp+0BCh+var_60] eax +
mov edx [esp+0BCh+var_4C] +
mov eax [esp+0BCh+var_6C] +
lea eax [edx+eax*8] +
mov edx [eax] +
mov eax [eax+4] +
mov edi edx +
or edi eax +
jz loc_4126C4  +
cmp ebp eax +
ja loc_412B0A  +
jnb loc_412B00  +
mov ebx dword ptr [esp+0BCh+var_8C] +
add [esp+0BCh+var_6C] 1 +
adc [esp+0BCh+var_68] 0 +
mov edx [esp+0BCh+var_68] +
mov eax [esp+0BCh+var_6C] +
xor edx dword ptr [esp+0BCh+var_94+4] +
xor eax dword ptr [esp+0BCh+var_94] +
add [esp+0BCh+var_60] 4 +
or edx eax +
jz loc_413136  +
mov dword ptr [esp+0BCh+var_8C] ebx +
jmp loc_4126A0  +
mov ecx ds:dword_471E44 +
or ecx ds:dword_471E40 +
jnz loc_4125B9  +
mov eax ds:dword_471D30 +
test eax eax +
jz loc_412AA1  +
mov edi ds:dword_471D4C +
test edi edi +
jz loc_41319B  +
mov eax ds:dword_471DA4 +
test eax eax +
jz loc_412610  +
mov [esp+0BCh+var_60] ebp +
mov ebp edi +
mov [esp+0BCh+var_7C] 0 +
jmp loc_41276F  +
mov eax ebp +
call sub_401C80  +
mov [esp+0BCh+var_BC] offset aSymbolTableSHa +
mov [esp+0BCh+var_B8] eax +
call printf  +
add [esp+0BCh+var_7C] 1 +
add ebp 48h +
mov eax [esp+0BCh+var_7C] +
cmp ds:dword_471DA4 eax +
jbe loc_413070  +
mov eax [ebp+4] +
cmp eax 0Bh +
jz loc_41277C  +
cmp eax 2 +
jnz loc_412757  +
mov edi ds:dword_471D34 +
test edi edi +
jnz loc_41278B  +
cmp eax 2 +
jz loc_412757  +
mov eax [ebp+3Ch] +
mov edx [ebp+38h] +
mov edi eax +
or edi edx +
jz loc_412740  +
mov dword ptr [esp+0BCh+var_B4] edx +
mov dword ptr [esp+0BCh+var_B4+4] eax +
mov eax [ebp+20h] +
mov edx [ebp+24h] +
mov [esp+0BCh+var_BC] eax +
mov [esp+0BCh+var_B8] edx +
call sub_43F880  +
mov ebx eax +
mov eax ebp +
call sub_401C80  +
mov dword ptr [esp+0BCh+var_B4] ebx +
mov [esp+0BCh+var_BC] offset aSymbolTableSCo +
mov [esp+0BCh+var_B8] eax +
call printf  +
mov esi ds:dword_471CF0 +
test esi esi +
jz loc_413051  +
mov [esp+0BCh+var_BC] offset aNumValueSizeTy +
call puts  +
mov ebx ds:dword_471CF0 +
lea ecx [esp+0BCh+var_24] +
mov edx ebp +
mov eax dword ptr [esp+0BCh+var_8C] +
test ebx ebx +
jz loc_413062  +
call sub_4042C0  +
mov [esp+0BCh+var_6C] eax +
mov eax [esp+0BCh+var_6C] +
test eax eax +
jz loc_412757  +
mov eax [ebp+28h] +
cmp eax ds:dword_471DA8 +
jz loc_413095  +
xor edx edx +
xor edi edi +
cmp eax ds:dword_471DA4 +
jb loc_4130A7  +
mov eax [esp+0BCh+var_24] +
test eax eax +
jz loc_412FB5  +
mov eax [esp+0BCh+var_6C] +
xor esi esi +
mov [esp+0BCh+var_84] ebp +
mov ebp edx +
lea ebx [eax+10h] +
jmp loc_41291F  +
mov eax [ebx+8] +
call sub_4120D0  +
mov [esp+0BCh+var_BC] offset a4s +
mov [esp+0BCh+var_B8] eax +
call printf  +
mov eax [ebx] +
cmp ebp eax +
lea edx [edi+eax] +
mov eax offset aCorrupt +
cmovbe edx eax +
mov eax 19h +
call sub_405A30  +
mov eax [esp+0BCh+var_84] +
xor edx edx +
mov ecx edi +
cmp dword ptr [eax+4] 0Bh +
lea eax [esp+96h] +
mov dword ptr [esp+0BCh+var_A8] eax +
lea eax [esp+0BCh+var_1C] +
mov [esp+0BCh+var_AC] eax +
lea eax [ebx+8] +
setz dl  +
mov dword ptr [esp+0BCh+var_B4+4] eax +
mov eax dword ptr [esp+0BCh+var_8C] +
mov dword ptr [esp+0BCh+var_B4] ebx +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] ebp +
call sub_40F0F0  +
test eax eax +
jz loc_412900  +
mov ecx [esp+0BCh+var_1C] +
test ecx ecx +
jz loc_412F90  +
cmp ecx 1 +
mov edx offset a@S +
mov ecx offset a@@S +
cmovnz edx ecx +
mov [esp+0BCh+var_B8] eax +
mov [esp+0BCh+var_BC] edx +
call printf  +
mov [esp+0BCh+var_BC] 0Ah +
add esi 1 +
add ebx 20h +
call putchar  +
cmp [esp+0BCh+var_24] esi +
jbe loc_412FB1  +
mov [esp+0BCh+var_B8] esi +
mov [esp+0BCh+var_BC] offset a6d +
call printf  +
mov edx [ebx-0Ch] +
mov ecx 6 +
mov eax [ebx-10h] +
call sub_4055F0  +
mov [esp+0BCh+var_BC] 20h +
call putchar  +
mov edx [ebx-4] +
mov ecx 2 +
mov eax [ebx-8] +
call sub_4055F0  +
movzx eax byte ptr [ebx+4] +
and eax 0Fh +
call sub_407ED0  +
mov [esp+0BCh+var_BC] offset a7s +
mov [esp+0BCh+var_B8] eax +
call printf  +
movzx eax byte ptr [ebx+4] +
shr al 4 +
movzx eax al +
call sub_40B3E0  +
mov [esp+0BCh+var_BC] offset a6s +
mov [esp+0BCh+var_B8] eax +
call printf  +
movzx eax byte ptr [ebx+5] +
and eax 3 +
call sub_403C70  +
mov [esp+0BCh+var_BC] offset a7s +
mov [esp+0BCh+var_B8] eax +
call printf  +
movzx eax byte ptr [ebx+5] +
and eax 0FFFFFFFCh +
jz loc_412860  +
call sub_411B90  +
mov [esp+0BCh+var_BC] offset aS_16 +
mov [esp+0BCh+var_B8] eax +
call printf  +
jmp loc_412860  +
mov eax ds:dword_471D04 +
test eax eax +
jnz loc_412A11  +
mov eax ds:dword_471D14 +
test eax eax +
jz loc_412561  +
mov eax ds:dword_471D30 +
test eax eax +
jnz loc_412561  +
mov edi ds:dword_472084 +
test edi edi +
jz loc_412561  +
mov edi dword ptr [esp+0BCh+var_8C] +
mov [esp+0BCh+var_BC] 10h +
mov [esp+0BCh+var_B8] 0 +
mov eax edi +
call sub_40B840  +
mov dword ptr [esp+0BCh+var_B4] 0 +
mov [esp+0BCh+var_BC] edi +
add eax ds:dword_4720AC +
mov [esp+0BCh+var_B8] eax +
call fseek  +
test eax eax +
jz loc_41313E  +
mov [esp+0BCh+var_BC] offset aUnableToSeek_0 +
call sub_436A70  +
mov [esp+0BCh+var_44] 0 +
mov [esp+0BCh+var_40] 0 +
mov [esp+0BCh+var_48] 0 +
mov [esp+0BCh+var_54] 0 +
mov [esp+0BCh+var_50] 0 +
mov eax [esp+0BCh+var_48] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax ds:dword_471D14 +
test eax eax +
jz loc_412581  +
xor eax eax +
jmp loc_4124FE  +
mov eax ds:dword_471D34 +
test eax eax +
jz loc_412610  +
mov eax ds:dword_471D14 +
test eax eax +
jz loc_412714  +
mov [esp+0BCh+var_BC] offset aDynamicSymbolI +
call puts  +
jmp loc_412610  +
mov ebx [esp+0BCh+var_4C] +
test ebx ebx +
jz loc_412AF0  +
mov eax [esp+0BCh+var_4C] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax [esp+0BCh+var_64] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax 1 +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0BCh+var_74] edx +
jbe loc_4126C4  +
cmp dword ptr [esp+0BCh+var_94+4] eax +
jb loc_4126C4  +
ja loc_412B20  +
cmp dword ptr [esp+0BCh+var_94] edx +
jbe loc_4126C4  +
mov eax [esp+0BCh+var_60] +
mov ebx dword ptr [esp+0BCh+var_8C] +
mov eax [eax] +
mov [esp+0BCh+var_84] eax +
nop   +
add ebx 1 +
mov eax [esp+0BCh+var_84] +
mov ecx ebx +
sub ecx dword ptr [esp+0BCh+var_8C] +
add eax ecx +
cmp esi eax +
mov [esp+0BCh+var_7C] eax +
mov eax [esp+0BCh+var_64] +
adc esi 0 +
lea eax [eax+edx*8] +
mov edx [eax] +
mov eax [eax+4] +
cmp ebp eax +
ja loc_412F4A  +
jnb loc_412F40  +
mov edi [esp+0BCh+var_7C] +
cmp ebp 0 +
mov eax [esp+0BCh+var_60] +
mov [eax] edi +
ja loc_4126C8  +
cmp [esp+0BCh+var_74] ecx +
jnb loc_4126C8  +
mov [esp+0BCh+var_BC] offset aHistogramChain +
call sub_436A70  +
lea eax [esi+1] +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] eax +
call calloc  +
test eax eax +
mov edi eax +
jz loc_41353B  +
mov edx [esp+0BCh+var_38] +
mov ecx dword ptr [esp+0BCh+var_94] +
mov eax edx +
lea ecx [edx+ecx*4] +
mov edx [eax] +
add eax 4 +
add dword ptr [edi+edx*4] 1 +
cmp eax ecx +
jnz loc_412BB8  +
mov ecx [edi] +
xor edx edx +
fild  [esp+0BCh+var_94] +
fst  [esp+0BCh+var_94] +
mov dword ptr [esp+0BCh+var_34+4] edx +
mov dword ptr [esp+0BCh+var_34] ecx +
fild  [esp+0BCh+var_34] +
fmul  ds:flt_462748 +
mov [esp+0BCh+var_B8] ecx +
mov [esp+0BCh+var_BC] offset a010lu5_1f +
fdivrp st(1) st +
fstp  [esp+0BCh+var_B4] +
call printf  +
test esi esi +
jz loc_412C9B  +
xor edx edx +
xor ebp ebp +
mov dword ptr [esp+0BCh+var_34] ebx +
mov ebx 1 +
mov dword ptr [esp+0BCh+var_34+4] edx +
fild  [esp+0BCh+var_34] +
fstp  [esp+0BCh+var_8C] +
mov ecx [edi+ebx*4] +
xor edx edx +
mov dword ptr [esp+0BCh+var_34+4] edx +
xor edx edx +
mov [esp+0BCh+var_B8] ebx +
mov [esp+0BCh+var_BC] offset a7lu10lu5_1f5_1 +
mov eax ecx +
imul eax ebx +
add ebx 1 +
mov dword ptr [esp+0BCh+var_B4] ecx +
add ebp eax +
mov dword ptr [esp+0BCh+var_34] ebp +
fild  [esp+0BCh+var_34] +
fld  ds:flt_462748 +
fmul st(1) st +
fxch  st(1) +
mov dword ptr [esp+0BCh+var_34] ecx +
mov dword ptr [esp+0BCh+var_34+4] edx +
fdiv  [esp+0BCh+var_8C] +
fstp  [esp+0BCh+var_A8] +
fild  [esp+0BCh+var_34] +
fmulp st(1) st +
fdiv  [esp+0BCh+var_94] +
fstp  [esp+0BCh+var_B4+4] +
call printf  +
cmp esi ebx +
jnb loc_412C2C  +
mov [esp+0BCh+var_BC] edi +
call free  +
mov eax [esp+0BCh+var_38] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax [esp+0BCh+var_4C] +
mov ebx ds:dword_471D04 +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax [esp+0BCh+var_64] +
mov [esp+0BCh+var_BC] eax +
call free  +
test ebx ebx +
jz loc_412AF0  +
mov ecx [esp+0BCh+var_48] +
test ecx ecx +
jz loc_412AF0  +
mov edi dword ptr [esp+0BCh+var_5C] +
mov [esp+0BCh+var_BC] offset aHistogramFor_g +
mov [esp+0BCh+var_B8] edi +
call printf  +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] edi +
call calloc  +
test eax eax +
mov [esp+0BCh+var_7C] eax +
jz loc_4132A4  +
mov [esp+0BCh+var_BC] offset aLengthNumberOf +
call printf  +
mov edx dword ptr [esp+0BCh+var_5C+4] +
mov eax dword ptr [esp+0BCh+var_5C] +
mov edi edx +
or edi eax +
jz loc_4134E0  +
mov eax [esp+0BCh+var_54] +
mov edx [esp+0BCh+var_50] +
mov dword ptr [esp+0BCh+var_8C] 0 +
mov dword ptr [esp+0BCh+var_8C+4] 0 +
add eax 1 +
adc edx 0 +
mov [esp+0BCh+var_64] 0 +
mov [esp+0BCh+var_84] 0 +
mov [esp+0BCh+var_74] eax +
mov [esp+0BCh+var_70] edx +
mov ebp dword ptr [esp+0BCh+var_8C] +
mov eax [esp+0BCh+var_48] +
mov edx [eax+ebp*8+4] +
mov eax [eax+ebp*8] +
mov edi edx +
or edi eax +
jz loc_412DBF  +
sub eax [esp+0BCh+var_44] +
sbb edx [esp+0BCh+var_40] +
cmp [esp+0BCh+var_50] edx +
jnb loc_412FE0  +
mov esi 1 +
mov eax 1 +
xor edx edx +
nop   +
lea esi [esi+0] +
mov edi [esp+0BCh+var_7C] +
xor ebx ebx +
cmp ebx edx +
mov ecx [esp+0BCh+var_84] +
mov [edi+ebp*4] esi +
jb loc_412DB7  +
ja loc_412DBB  +
cmp ecx eax +
jnb loc_412DBB  +
mov [esp+0BCh+var_84] esi +
add [esp+0BCh+var_64] esi +
add dword ptr [esp+0BCh+var_8C] 1 +
adc dword ptr [esp+0BCh+var_8C+4] 0 +
mov ebx dword ptr [esp+0BCh+var_8C] +
mov esi dword ptr [esp+0BCh+var_8C+4] +
mov edi dword ptr [esp+0BCh+var_5C] +
mov ebp dword ptr [esp+0BCh+var_5C+4] +
mov eax ebx +
mov edx esi +
xor eax edi +
xor edx ebp +
or edx eax +
jnz loc_412D68  +
mov eax [esp+0BCh+var_84] +
mov [esp+0BCh+var_B8] 4 +
add eax 1 +
mov [esp+0BCh+var_BC] eax +
call calloc  +
test eax eax +
mov esi eax +
jz loc_4134FE  +
mov edx dword ptr [esp+0BCh+var_5C] +
mov edi [esp+0BCh+var_7C] +
lea ecx ds:0[edx*4] +
mov eax edi +
add ecx edi +
lea esi [esi+0] +
mov edx [eax] +
add eax 4 +
add dword ptr [esi+edx*4] 1 +
cmp eax ecx +
jnz loc_412E20  +
mov ecx [esi] +
xor edx edx +
fild  [esp+0BCh+var_5C] +
fst  [esp+0BCh+var_94] +
mov dword ptr [esp+0BCh+var_34+4] edx +
mov dword ptr [esp+0BCh+var_34] ecx +
fild  [esp+0BCh+var_34] +
fmul  ds:flt_462748 +
mov [esp+0BCh+var_B8] ecx +
mov [esp+0BCh+var_BC] offset a010lu5_1f +
fdivrp st(1) st +
fstp  [esp+0BCh+var_B4] +
call printf  +
mov ebx [esp+0BCh+var_84] +
test ebx ebx +
jz loc_412F0B  +
mov eax [esp+0BCh+var_64] +
xor edx edx +
mov edi 1 +
mov dword ptr [esp+0BCh+var_34+4] edx +
xor ebp ebp +
mov dword ptr [esp+0BCh+var_34] eax +
fild  [esp+0BCh+var_34] +
fstp  [esp+0BCh+var_8C] +
mov ecx [esi+edi*4] +
xor edx edx +
mov dword ptr [esp+0BCh+var_34+4] edx +
xor edx edx +
mov [esp+0BCh+var_B8] edi +
mov [esp+0BCh+var_BC] offset a7lu10lu5_1f5_1 +
mov eax ecx +
imul eax edi +
add edi 1 +
mov dword ptr [esp+0BCh+var_B4] ecx +
add ebp eax +
mov dword ptr [esp+0BCh+var_34] ebp +
fild  [esp+0BCh+var_34] +
fld  ds:flt_462748 +
fmul st(1) st +
fxch  st(1) +
mov dword ptr [esp+0BCh+var_34] ecx +
mov dword ptr [esp+0BCh+var_34+4] edx +
fdiv  [esp+0BCh+var_8C] +
fstp  [esp+0BCh+var_A8] +
fild  [esp+0BCh+var_34] +
fmulp st(1) st +
fdiv  [esp+0BCh+var_94] +
fstp  [esp+0BCh+var_B4+4] +
call printf  +
cmp ebx edi +
jnb loc_412E9C  +
mov [esp+0BCh+var_BC] esi +
call free  +
mov eax [esp+0BCh+var_7C] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax [esp+0BCh+var_48] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov eax [esp+0BCh+var_3C] +
mov [esp+0BCh+var_BC] eax +
call free  +
jmp loc_412AF0  +
cmp [esp+0BCh+var_74] edx +
jbe loc_412B62  +
mov edi edx +
or edi eax +
nop   +
jz loc_412B62  +
cmp dword ptr [esp+0BCh+var_94+4] eax +
ja loc_412F6C  +
jb loc_412B62  +
cmp dword ptr [esp+0BCh+var_94] edx +
jbe loc_412B62  +
cmp ebp 0 +
nop   +
ja loc_412B30  +
cmp [esp+0BCh+var_74] ecx +
jnb loc_412B30  +
mov edi [esp+0BCh+var_7C] +
mov eax [esp+0BCh+var_60] +
mov [eax] edi +
jmp loc_412B7F  +
movzx edx [esp+0BCh+var_26] +
mov [esp+0BCh+var_B8] eax +
mov [esp+0BCh+var_BC] offset a@SD +
mov dword ptr [esp+0BCh+var_B4] edx +
call printf  +
jmp loc_412900  +
mov ebp [esp+0BCh+var_84] +
mov eax [esp+0BCh+var_6C] +
mov [esp+0BCh+var_BC] eax +
call free  +
cmp edi ds:dword_47207C +
jz loc_412757  +
mov [esp+0BCh+var_BC] edi +
call free  +
jmp loc_412757  +
ja loc_412FEC  +
cmp [esp+0BCh+var_54] eax +
jbe loc_412D8F  +
mov ebx [esp+0BCh+var_3C] +
test byte ptr [ebx+eax*8] 1 +
jnz loc_412D8F  +
mov esi eax +
mov ecx [esp+0BCh+var_74] +
add esi 1 +
lea esi [ebx+esi*8] +
mov ebx [esp+0BCh+var_70] +
sub ecx eax +
mov eax 2 +
mov dword ptr [esp+0BCh+var_94] ecx +
sbb ebx edx +
xor edx edx +
mov dword ptr [esp+0BCh+var_94+4] ebx +
jmp loc_41303A  +
mov edi [esi] +
mov ecx eax +
mov ebx edx +
add ecx 1 +
adc ebx 0 +
add esi 8 +
and edi 1 +
jnz loc_41304A  +
mov eax ecx +
mov edx ebx +
mov ebx dword ptr [esp+0BCh+var_94+4] +
mov ecx dword ptr [esp+0BCh+var_94] +
xor ebx edx +
xor ecx eax +
or ebx ecx +
jnz loc_413022  +
mov esi eax +
jmp loc_412DA0  +
mov [esp+0BCh+var_BC] offset aNumValueSize_0 +
call puts  +
jmp loc_4127E8  +
call sub_404690  +
mov [esp+0BCh+var_6C] eax +
jmp loc_41280C  +
mov ebp [esp+0BCh+var_60] +
jmp loc_412610  +
cmp ax 16h +
jz loc_412489  +
cmp ax 0A390h +
jnz loc_412496  +
lea esi [esi+0] +
jmp loc_412489  +
mov eax ds:dword_472078 +
mov edi ds:dword_47207C +
mov edx eax +
jmp loc_412837  +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea ebx [eax+edx*8] +
mov edx [ebx+24h] +
mov eax [ebx+20h] +
mov ecx [ebx+18h] +
mov [esp+0BCh+var_AC] offset aStringTable +
mov dword ptr [esp+0BCh+var_B4+4] edx +
mov edx dword ptr [esp+0BCh+var_8C] +
mov dword ptr [esp+0BCh+var_B4] eax +
xor eax eax +
mov [esp+0BCh+var_BC] 1 +
mov [esp+0BCh+var_B8] 0 +
call sub_403CC0  +
test eax eax +
mov edi eax +
jz loc_4134B7  +
mov eax [ebx+20h] +
mov edx eax +
jmp loc_412837  +
mov eax dword ptr [esp+0BCh+var_8C] +
lea esi [esp+0BCh+var_24] +
mov dword ptr [esp+0BCh+var_B4] 1 +
mov [esp+0BCh+var_B8] ebx +
mov [esp+0BCh+var_BC] esi +
mov dword ptr [esp+0BCh+var_B4+4] eax +
call fread  +
cmp eax 1 +
jz loc_4132B7  +
mov [esp+0BCh+var_BC] offset aFailedToReadIn +
call sub_436A70  +
jmp loc_4124E3  +
lea eax [esi+1] +
jmp loc_412B8E  +
mov eax dword ptr [esp+0BCh+var_8C] +
mov dword ptr [esp+0BCh+var_B4] 1 +
mov [esp+0BCh+var_B8] 10h +
mov dword ptr [esp+0BCh+var_B4+4] eax +
lea eax [esp+0BCh+var_1C] +
mov [esp+0BCh+var_BC] eax +
mov [esp+0BCh+var_6C] eax +
call fread  +
cmp eax 1 +
jz loc_4133CE  +
mov [esp+0BCh+var_BC] offset aFailedToReadIn +
call sub_436A70  +
mov [esp+0BCh+var_44] 0 +
mov [esp+0BCh+var_40] 0 +
mov [esp+0BCh+var_48] 0 +
jmp loc_412A71  +
mov edi ds:dword_471D34 +
test edi edi +
jz loc_412610  +
jmp loc_412ABB  +
mov ebx 8 +
jmp loc_41249B  +
mov [esp+0BCh+var_BC] offset aSymbolTableOf_ +
call puts  +
mov eax ds:dword_471CF0 +
test eax eax +
jz loc_4134BE  +
mov [esp+0BCh+var_BC] offset aNumBucValueSiz +
call puts  +
mov edx dword ptr [esp+0BCh+var_5C+4] +
mov eax dword ptr [esp+0BCh+var_5C] +
mov edi edx +
or edi eax +
jz loc_412610  +
mov [esp+0BCh+var_7C] ebp +
xor ebx ebx +
mov ebp [esp+0BCh+var_3C] +
mov [esp+0BCh+var_84] 0 +
mov [esp+0BCh+var_80] 0 +
jmp loc_413239  +
add ebx 1 +
mov esi dword ptr [esp+0BCh+var_5C] +
add [esp+0BCh+var_84] 1 +
adc [esp+0BCh+var_80] 0 +
mov edx [esp+0BCh+var_80] +
mov edi dword ptr [esp+0BCh+var_5C+4] +
mov eax [esp+0BCh+var_84] +
xor edx edi +
xor eax esi +
or edx eax +
jz loc_4133C5  +
mov eax [esp+0BCh+var_48] +
mov edi [eax+ebx*8+4] +
mov esi [eax+ebx*8] +
mov eax edi +
or eax esi +
jz loc_413210  +
mov eax esi +
mov edx edi +
sub eax [esp+0BCh+var_44] +
sbb edx [esp+0BCh+var_40] +
mov dword ptr [esp+0BCh+var_8C] eax +
mov dword ptr [esp+0BCh+var_8C+4] edx +
nop   +
mov eax esi +
mov edx edi +
mov ecx ebx +
call sub_412260  +
add esi 1 +
mov eax dword ptr [esp+0BCh+var_8C+4] +
adc edi 0 +
cmp [esp+0BCh+var_50] eax +
jb loc_413210  +
ja loc_413287  +
mov eax dword ptr [esp+0BCh+var_8C] +
cmp [esp+0BCh+var_54] eax +
jbe loc_413210  +
add dword ptr [esp+0BCh+var_8C] 1 +
mov eax dword ptr [esp+0BCh+var_8C] +
adc dword ptr [esp+0BCh+var_8C+4] 0 +
shl eax 3 +
test byte ptr [ebp+eax-8] 1 +
jz loc_413260  +
jmp loc_413210  +
mov [esp+0BCh+var_BC] offset aOutOfMemoryA_1 +
call sub_436A70  +
xor eax eax +
jmp loc_4124FE  +
mov eax dword ptr [esp+0BCh+var_8C] +
mov dword ptr [esp+0BCh+var_B4] 1 +
mov [esp+0BCh+var_B8] ebx +
mov dword ptr [esp+0BCh+var_B4+4] eax +
lea eax [esp+0BCh+var_1C] +
mov [esp+0BCh+var_BC] eax +
mov [esp+0BCh+var_6C] eax +
call fread  +
cmp eax 1 +
jz loc_413624  +
mov [esp+0BCh+var_BC] offset aFailedToRead_0 +
call sub_436A70  +
jmp loc_4124E3  +
mov [esp+0BCh+var_BC] offset aSymbolTableFor +
call puts  +
mov eax ds:dword_471CF0 +
test eax eax +
jz loc_4134CF  +
mov [esp+0BCh+var_BC] offset aNumBucValueSiz +
call puts  +
mov edx dword ptr [esp+0BCh+var_94+4] +
mov eax dword ptr [esp+0BCh+var_94] +
mov edi edx +
or edi eax +
jz loc_4125F9  +
mov dword ptr [esp+0BCh+var_8C] 0 +
mov edi [esp+0BCh+var_64] +
mov dword ptr [esp+0BCh+var_8C+4] 0 +
jmp loc_41336B  +
add dword ptr [esp+0BCh+var_8C] 1 +
adc dword ptr [esp+0BCh+var_8C+4] 0 +
mov edx dword ptr [esp+0BCh+var_8C+4] +
mov ecx dword ptr [esp+0BCh+var_94] +
mov ebx dword ptr [esp+0BCh+var_94+4] +
mov eax dword ptr [esp+0BCh+var_8C] +
xor edx ebx +
xor eax ecx +
or edx eax +
jz loc_4125F9  +
mov eax [esp+0BCh+var_4C] +
mov esi dword ptr [esp+0BCh+var_8C] +
mov edx [eax+esi*8+4] +
mov ebx [eax+esi*8] +
mov eax edx +
or eax ebx +
jz loc_413345  +
cmp ebp edx +
jb loc_413345  +
ja loc_41338C  +
cmp [esp+0BCh+var_74] ebx +
jbe loc_413345  +
mov eax ebx +
mov ecx esi +
call sub_412260  +
lea eax [edi+ebx*8] +
mov ebx [eax] +
mov edx [eax+4] +
mov eax ebx +
or eax edx +
jz loc_413345  +
cmp ebp edx +
ja loc_41338C  +
jb loc_413345  +
lea esi [esi+0] +
jmp loc_413386  +
mov [esp+0BCh+var_BC] offset aOutOfMemoryA_2 +
call sub_436A70  +
xor eax eax +
jmp loc_412AF5  +
mov ebp [esp+0BCh+var_7C] +
jmp loc_412610  +
mov eax [esp+0BCh+var_6C] +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] eax +
call ds:dword_472C94  +
mov [esp+0BCh+var_B8] 4 +
mov dword ptr [esp+0BCh+var_5C] eax +
lea eax [esp+0BCh+var_18] +
mov dword ptr [esp+0BCh+var_5C+4] edx +
mov [esp+0BCh+var_BC] eax +
call ds:dword_472C94  +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_44] eax +
lea eax [esp+0BCh+var_14] +
mov [esp+0BCh+var_40] edx +
mov [esp+0BCh+var_BC] eax +
call ds:dword_472C94  +
mov ecx ds:dword_471E40 +
mov ebx ds:dword_471E44 +
mov esi ds:dword_471CF0 +
add ecx 10h +
adc ebx 0 +
test esi esi +
jz loc_413608  +
shld edx eax +
shl eax 2 +
mov [esp+0BCh+var_7C] eax +
add [esp+0BCh+var_7C] ecx +
mov [esp+0BCh+var_78] edx +
adc [esp+0BCh+var_78] ebx +
mov edi dword ptr [esp+0BCh+var_8C] +
mov edx [esp+0BCh+var_7C] +
mov ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_BC] 4 +
mov [esp+0BCh+var_B8] 0 +
mov eax edi +
call sub_40B840  +
mov dword ptr [esp+0BCh+var_B4] 0 +
mov [esp+0BCh+var_BC] edi +
add eax ds:dword_4720AC +
mov [esp+0BCh+var_B8] eax +
call fseek  +
test eax eax +
jz loc_41355D  +
mov [esp+0BCh+var_BC] offset aUnableToSeek_0 +
call sub_436A70  +
mov [esp+0BCh+var_48] 0 +
jmp loc_412A71  +
mov edx eax +
jmp loc_412837  +
mov [esp+0BCh+var_BC] offset aNumBucValueS_0 +
call puts  +
jmp loc_4131DD  +
mov [esp+0BCh+var_BC] offset aNumBucValueS_0 +
call puts  +
jmp loc_41331D  +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] 1 +
call calloc  +
test eax eax +
mov esi eax +
jnz loc_412F0B  +
mov eax [esp+0BCh+var_7C] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov [esp+0BCh+var_BC] offset aOutOfMemoryA_3 +
call sub_436A70  +
xor eax eax +
jmp loc_412AF5  +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] 1 +
call calloc  +
test eax eax +
mov edi eax +
jnz loc_412C9B  +
mov eax [esp+0BCh+var_38] +
mov [esp+0BCh+var_BC] eax +
call free  +
mov [esp+0BCh+var_BC] offset aOutOfMemoryA_4 +
call sub_436A70  +
xor eax eax +
jmp loc_412AF5  +
mov esi dword ptr [esp+0BCh+var_5C] +
mov edi dword ptr [esp+0BCh+var_5C+4] +
mov eax dword ptr [esp+0BCh+var_8C] +
mov [esp+0BCh+var_BC] 4 +
mov edx esi +
mov ecx edi +
call sub_404F00  +
test eax eax +
mov ebx eax +
mov [esp+0BCh+var_48] eax +
jz loc_412A71  +
or edi esi +
jz loc_412A71  +
mov [esp+0BCh+var_84] 0FFFFFFFFh +
xor esi esi +
xor edi edi +
mov [esp+0BCh+var_80] 0 +
jmp loc_4135F0  +
jb loc_4135B1  +
cmp [esp+0BCh+var_44] edx +
ja loc_4124FC  +
mov ecx [esp+0BCh+var_84] +
not ecx  +
or ecx [esp+0BCh+var_80] +
jz loc_4135CB  +
cmp [esp+0BCh+var_80] eax +
ja loc_4135D3  +
jb loc_4135CB  +
cmp [esp+0BCh+var_84] edx +
jnb loc_4135D3  +
mov [esp+0BCh+var_84] edx +
mov [esp+0BCh+var_80] eax +
mov edx dword ptr [esp+0BCh+var_5C+4] +
add esi 1 +
mov eax dword ptr [esp+0BCh+var_5C] +
adc edi 0 +
add ebx 8 +
xor edx edi +
xor eax esi +
or edx eax +
jz loc_413695  +
mov eax [ebx+4] +
mov edx [ebx] +
mov ecx eax +
or ecx edx +
jz loc_4135D3  +
cmp [esp+0BCh+var_40] eax +
jbe loc_4135A5  +
xor eax eax +
jmp loc_4124FE  +
shld edx eax +
shl eax 3 +
mov [esp+0BCh+var_7C] eax +
add [esp+0BCh+var_7C] ecx +
mov [esp+0BCh+var_78] edx +
adc [esp+0BCh+var_78] ebx +
jmp loc_41345A  +
mov [esp+0BCh+var_BC] esi +
mov [esp+0BCh+var_B8] ebx +
call ds:dword_472C94  +
mov [esp+0BCh+var_B8] ebx +
mov esi eax +
mov edi edx +
mov dword ptr [esp+0BCh+var_94] eax +
mov eax [esp+0BCh+var_6C] +
mov dword ptr [esp+0BCh+var_94+4] edx +
mov [esp+0BCh+var_BC] eax +
call ds:dword_472C94  +
mov ecx edi +
mov [esp+0BCh+var_BC] ebx +
mov ebp edx +
mov edx esi +
mov esi dword ptr [esp+0BCh+var_8C] +
mov [esp+0BCh+var_74] eax +
mov eax esi +
call sub_404F00  +
mov edx [esp+0BCh+var_74] +
mov ecx ebp +
mov [esp+0BCh+var_BC] ebx +
mov [esp+0BCh+var_4C] eax +
mov edi eax +
mov eax esi +
call sub_404F00  +
test eax eax +
mov [esp+0BCh+var_64] eax +
jz loc_4124F3  +
test edi edi +
jnz loc_41254B  +
jmp loc_4124F3  +
mov esi [esp+0BCh+var_84] +
mov edi [esp+0BCh+var_80] +
mov eax esi +
not eax  +
mov ebx eax +
or ebx edi +
jz loc_412A71  +
mov edx edi +
mov eax esi +
mov edi dword ptr [esp+0BCh+var_8C] +
sub eax [esp+0BCh+var_44] +
sbb edx [esp+0BCh+var_40] +
mov [esp+0BCh+var_BC] 4 +
mov [esp+0BCh+var_54] eax +
mov [esp+0BCh+var_50] edx +
add eax dword ptr [esp+0BCh+var_5C] +
adc edx dword ptr [esp+0BCh+var_5C+4] +
mov [esp+0BCh+var_B8] 0 +
mov ecx edx +
mov edx eax +
shld ecx eax +
mov eax edi +
shl edx 2 +
add edx [esp+0BCh+var_7C] +
adc ecx [esp+0BCh+var_78] +
call sub_40B840  +
mov dword ptr [esp+0BCh+var_B4] 0 +
mov [esp+0BCh+var_BC] edi +
add eax ds:dword_4720AC +
mov [esp+0BCh+var_B8] eax +
call fseek  +
test eax eax +
jnz loc_4137D9  +
mov esi [esp+0BCh+var_54] +
mov edi [esp+0BCh+var_50] +
mov ebx [esp+0BCh+var_6C] +
jmp loc_41374C  +
mov eax esi +
and eax edi +
cmp eax 0FFFFFFFFh +
jz loc_412A71  +
add esi 1 +
adc edi 0 +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] ebx +
call ds:dword_472C94  +
test al 1 +
jnz loc_413782  +
mov eax dword ptr [esp+0BCh+var_8C] +
mov dword ptr [esp+0BCh+var_B4] 1 +
mov [esp+0BCh+var_B8] 4 +
mov [esp+0BCh+var_BC] ebx +
mov dword ptr [esp+0BCh+var_B4+4] eax +
call fread  +
cmp eax 1 +
jz loc_413724  +
mov [esp+0BCh+var_BC] offset aFailedToDeterm +
call sub_436A70  +
jmp loc_412A71  +
mov edx dword ptr [esp+0BCh+var_5C] +
mov ecx dword ptr [esp+0BCh+var_5C+4] +
mov [esp+0BCh+var_50] edi +
mov edi dword ptr [esp+0BCh+var_8C] +
mov [esp+0BCh+var_BC] 4 +
mov [esp+0BCh+var_B8] 0 +
shld ecx edx +
shl edx 2 +
mov eax edi +
add edx [esp+0BCh+var_7C] +
adc ecx [esp+0BCh+var_78] +
mov [esp+0BCh+var_54] esi +
call sub_40B840  +
mov dword ptr [esp+0BCh+var_B4] 0 +
mov [esp+0BCh+var_BC] edi +
add eax ds:dword_4720AC +
mov [esp+0BCh+var_B8] eax +
call fseek  +
test eax eax +
jz loc_4137EA  +
mov [esp+0BCh+var_BC] offset aUnableToSeek_0 +
call sub_436A70  +
jmp loc_412A71  +
mov edx [esp+0BCh+var_54] +
mov ecx [esp+0BCh+var_50] +
mov eax dword ptr [esp+0BCh+var_8C] +
mov [esp+0BCh+var_BC] 4 +
call sub_404F00  +
test eax eax +
mov [esp+0BCh+var_3C] eax +
jnz loc_4125A4  +
jmp loc_412A81  +
***
mov eax [esp+50h] +
mov esi eax +
mov [esp+28h] eax +
mov eax [esp+4Ch] +
mov [esp+34h] eax +
lea eax [eax+eax*2] +
lea eax [esi+eax*8] +
cmp esi eax +
jnb loc_4145BF  +
mov [esp+3Ch] ebp +
mov ebp esi +
jmp loc_413ECE  +
shrd ebx esi +
mov edi offset aR_parisc_segre +
shr esi 8 +
mov ecx 0Fh +
mov [esp+24h] esi +
mov esi edx +
mov [esp+20h] ebx +
cmps   +
jnz loc_413F26  +
mov esi [esp+20h] +
mov edx [ebp+4] +
mov edi ds:dword_472C4C +
shl esi 5 +
add esi eax +
mov eax [ebp+0] +
mov [esp+8] edi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov ecx eax +
and eax 0Fh +
shrd ecx edx +
mov [esp] eax +
mov ebx ecx +
call sub_43F880  +
mov edi edx +
or edi eax +
jz loc_414595  +
xor eax 1 +
or eax edx +
jnz loc_413EB5  +
mov eax [esp+58h] +
lea edx [ebx+ebx*4] +
lea ecx [eax+edx*8] +
mov eax [esi+18h] +
mov edx [ebp+14h] +
mov [ecx+10h] ax +
mov eax [ebp+10h] +
add eax [esi] +
adc edx [esi+4] +
mov [ecx+18h] eax +
mov [ecx+1Ch] edx +
mov eax [esp+34h] +
add ebp 18h +
mov esi [esp+28h] +
lea eax [eax+eax*2] +
lea eax [esi+eax*8] +
cmp ebp eax +
jnb loc_4145BB  +
mov edi ds:dword_471CF0 +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
test edi edi +
movzx eax bl +
jnz loc_413EEA  +
mov eax ebx +
mov edx esi +
call sub_407C20  +
xor edx edx +
cmp eax 0F5h +
ja loc_413EFA  +
mov edx ds:off_45BC00[eax*4] +
test edi edi +
mov eax [esp+68h] +
jnz loc_413E23  +
mov ebx esi +
xor esi esi +
mov [esp+24h] esi +
mov edi offset aR_parisc_segre +
mov esi edx +
mov [esp+20h] ebx +
mov ecx 0Fh +
cmps   +
jz loc_413E46  +
mov [esp+4] edx +
mov dword ptr [esp] offset aSkippingUnex_4 +
call sub_437070  +
mov eax [esp+50h] +
mov [esp+28h] eax +
mov eax [esp+4Ch] +
mov [esp+34h] eax +
jmp loc_413EB5  +
***
mov eax [esp+58h] +
test eax eax +
jz loc_413F72  +
mov [esp] eax +
call free  +
mov dword ptr [esp+58h] 0 +
add dword ptr [esp+30h] 1 +
mov eax [esp+30h] +
add dword ptr [esp+1Ch] 48h +
cmp eax ds:dword_471DA4 +
jb loc_413985  +
mov eax [esp+68h] +
test eax eax +
jz loc_413FA4  +
mov [esp] eax +
call free  +
mov eax [esp+78h] +
test eax eax +
jz loc_413FB4  +
mov [esp] eax +
call free  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+1Ch] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+24h] edx +
mov [esp+20h] eax +
jmp loc_413AB2  +
***
mov edx [esp+68h] +
shl esi 5 +
xor edi edi +
add esi edx +
jmp loc_414017  +
add edx 20h +
cmp edx esi +
jz loc_414070  +
mov ecx [edx] +
mov ebx ecx +
or ebx [edx+4] +
jz loc_414010  +
movzx ebx byte ptr [edx+14h] +
and ebx 0Fh +
cmp bl 2 +
jnz loc_414010  +
mov ebx edi +
add edx 20h +
shl ebx 5 +
add edi 1 +
add ebx eax +
mov [ebx] ecx +
mov ecx [edx-1Ch] +
mov [ebx+4] ecx +
mov ecx [edx-18h] +
mov [ebx+8] ecx +
mov ecx [edx-14h] +
mov [ebx+0Ch] ecx +
mov ecx [edx-10h] +
mov [ebx+10h] ecx +
mov ecx [edx-0Ch] +
mov [ebx+14h] ecx +
mov ecx [edx-8] +
mov [ebx+18h] ecx +
mov ecx [edx-4] +
cmp edx esi +
mov [ebx+1Ch] ecx +
jnz loc_414017  +
lea esi [esi+0] +
mov [esp] eax +
mov dword ptr [esp+0Ch] offset sub_402100 +
mov dword ptr [esp+8] 20h +
mov [esp+4] edi +
mov [esp+74h] edi +
call qsort  +
mov eax [esp+5Ch] +
mov ebx [esp+58h] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*8] +
cmp ebx eax +
jb loc_4141BD  +
jmp loc_414566  +
test al 2 +
jnz loc_4142E0  +
test al 4 +
lea esi [esi+0] +
jnz loc_4142F8  +
test al 40h +
jnz loc_414310  +
movzx eax word ptr [ebx+20h] +
test ax 780h +
jnz loc_41432A  +
movzx eax byte ptr [ebx+21h] +
test al 0F8h +
jnz loc_41434D  +
movzx eax byte ptr [ebx+22h] +
test al 1 +
jnz loc_41436F  +
test al 2 +
jnz loc_414387  +
test al 4 +
jnz loc_41439F  +
test al 8 +
jnz loc_4143B7  +
test al 10h +
nop   +
jnz loc_4143CF  +
test al 20h +
jnz loc_4143E7  +
test al 40h +
jnz loc_4143FF  +
test al al +
js loc_414417  +
movzx eax byte ptr [ebx+23h] +
test al 1 +
jnz loc_41442F  +
test al 2 +
jnz loc_414447  +
test al 8 +
jnz loc_41445F  +
test al 10h +
lea esi [esi+0] +
jnz loc_414477  +
test al 20h +
jnz loc_41448F  +
test al 40h +
jnz loc_4144A7  +
test al al +
js loc_4144BF  +
movzx eax byte ptr [ebx+24h] +
test al 1 +
jnz loc_4144D7  +
test al 2 +
jnz loc_4144EF  +
test al 4 +
jnz loc_414507  +
test al 8 +
lea esi [esi+0] +
jnz loc_41451F  +
mov eax [ebx+24h] +
test eax 0FFFFFFE0h +
jnz loc_414539  +
mov eax [esp+5Ch] +
add ebx 28h +
lea edx [eax+eax*4] +
mov eax [esp+58h] +
lea eax [eax+edx*8] +
cmp ebx eax +
jnb loc_414566  +
mov eax [ebx+8] +
lea esi [esp+50h] +
movzx ecx word ptr [ebx] +
mov edx [ebx+0Ch] +
mov [esp+14h] esi +
lea esi [esp+4Ch] +
mov [esp+8] eax +
mov eax [esp+7Ch] +
mov [esp+4] cx +
mov ecx [esp+78h] +
mov [esp+0Ch] edx +
mov edx [esp+74h] +
mov [esp+10h] esi +
mov [esp] eax +
mov eax [esp+70h] +
call sub_407CF0  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_448CE3 +
add eax 20h +
mov [esp+0Ch] eax +
call fwrite  +
mov eax [esp+4Ch] +
test eax eax +
jz loc_414250  +
mov esi ds:_iob +
mov [esp] eax +
lea edx [esi+20h] +
mov [esp+4] edx +
call fputs  +
mov eax [esp+50h] +
mov esi eax +
or esi [esp+54h] +
jnz loc_414551  +
mov eax ds:_iob +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_448CEB +
add eax 20h +
mov [esp+0Ch] eax +
call fwrite  +
mov edx [ebx+0Ch] +
mov ecx 4 +
mov eax [ebx+8] +
call sub_4055F0  +
mov eax ds:_iob +
mov dword ptr [esp] 2Dh +
add eax 20h +
mov [esp+4] eax +
call fputc  +
mov edx [ebx+1Ch] +
mov ecx 4 +
mov eax [ebx+18h] +
call sub_4055F0  +
mov dword ptr [esp] offset asc_449FA8 +
call printf  +
movzx eax byte ptr [ebx+20h] +
test al 1 +
jz loc_4140B0  +
mov dword ptr [esp] offset aCannot_unwind +
call printf  +
movzx eax byte ptr [ebx+20h] +
test al 2 +
jz loc_4140B8  +
mov dword ptr [esp] offset aMillicode +
call printf  +
movzx eax byte ptr [ebx+20h] +
test al 4 +
jz loc_4140C6  +
mov dword ptr [esp] offset aMillicode_save +
call printf  +
movzx eax byte ptr [ebx+20h] +
test al 40h +
jz loc_4140CE  +
mov dword ptr [esp] offset aEntry_sr +
call printf  +
movzx eax word ptr [ebx+20h] +
test ax 780h +
jz loc_4140DC  +
shr ax 7 +
and eax 0Fh +
mov [esp+4] eax +
mov dword ptr [esp] offset aEntry_frD +
call printf  +
movzx eax byte ptr [ebx+21h] +
test al 0F8h +
jz loc_4140E8  +
shr al 3 +
movzx eax al +
mov [esp+4] eax +
mov dword ptr [esp] offset aEntry_grD +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al 1 +
jz loc_4140F4  +
mov dword ptr [esp] offset aArgs_stored +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al 2 +
jz loc_4140FC  +
mov dword ptr [esp] offset aVariable_frame +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al 4 +
jz loc_414104  +
mov dword ptr [esp] offset aSeparate_packa +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al 8 +
jz loc_41410C  +
mov dword ptr [esp] offset aFrame_extensio +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al 10h +
jz loc_414116  +
mov dword ptr [esp] offset aStack_overflow +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al 20h +
jz loc_41411E  +
mov dword ptr [esp] offset aTwo_instructio +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al 40h +
jz loc_414126  +
mov dword ptr [esp] offset aAda_region +
call printf  +
movzx eax byte ptr [ebx+22h] +
test al al +
jns loc_41412E  +
mov dword ptr [esp] offset aCxx_info +
call printf  +
movzx eax byte ptr [ebx+23h] +
test al 1 +
jz loc_41413A  +
mov dword ptr [esp] offset aCxx_try_catch +
call printf  +
movzx eax byte ptr [ebx+23h] +
test al 2 +
jz loc_414142  +
mov dword ptr [esp] offset aSched_entry_se +
call printf  +
movzx eax byte ptr [ebx+23h] +
test al 8 +
jz loc_41414A  +
mov dword ptr [esp] offset aSave_sp +
call printf  +
movzx eax byte ptr [ebx+23h] +
test al 10h +
jz loc_414156  +
mov dword ptr [esp] offset aSave_rp +
call printf  +
movzx eax byte ptr [ebx+23h] +
test al 20h +
jz loc_41415E  +
mov dword ptr [esp] offset aSave_mrp_in_fr +
call printf  +
movzx eax byte ptr [ebx+23h] +
test al 40h +
jz loc_414166  +
mov dword ptr [esp] offset aExtn_ptr_defin +
call printf  +
movzx eax byte ptr [ebx+23h] +
test al al +
jns loc_41416E  +
mov dword ptr [esp] offset aCleanup_define +
call printf  +
movzx eax byte ptr [ebx+24h] +
test al 1 +
jz loc_41417A  +
mov dword ptr [esp] offset aMpe_xl_interru +
call printf  +
movzx eax byte ptr [ebx+24h] +
test al 2 +
jz loc_414182  +
mov dword ptr [esp] offset aHp_ux_interrup +
call printf  +
movzx eax byte ptr [ebx+24h] +
test al 4 +
jz loc_41418A  +
mov dword ptr [esp] offset aLarge_frame +
call printf  +
movzx eax byte ptr [ebx+24h] +
test al 8 +
jz loc_414196  +
mov dword ptr [esp] offset aPseudo_sp_set +
call printf  +
mov eax [ebx+24h] +
test eax 0FFFFFFE0h +
jz loc_4141A4  +
shr eax 5 +
mov [esp+4] eax +
mov dword ptr [esp] offset aTotal_frame_si +
call printf  +
jmp loc_4141A4  +
***
mov [esp+4] eax +
mov dword ptr [esp] offset aLx_2 +
call printf  +
jmp loc_414250  +
***
mov dword ptr [esp] 0Ah +
call putchar  +
mov eax [esp+70h] +
mov [esp] eax +
call free  +
jmp loc_413F62  +
***
call sub_4042C0  +
nop   +
lea esi [esi+0] +
jmp loc_4138CC  +
***
mov eax [esp+58h] +
lea edx [ebx+ebx*4] +
lea ecx [eax+edx*8] +
mov eax [esi+18h] +
mov edx [ebp+14h] +
mov [ecx] ax +
mov eax [ebp+10h] +
add eax [esi] +
adc edx [esi+4] +
mov [ecx+8] eax +
mov [ecx+0Ch] edx +
jmp loc_413EB5  +
***
mov ebp [esp+3Ch] +
mov eax [esp+28h] +
mov [esp] eax +
call free  +
mov ecx ds:dword_471D4C +
mov eax ds:dword_471DA4 +
jmp loc_413DA5  +
***
xor eax eax +
jmp loc_413943  +
***
mov dword ptr [esp] offset aThereAreNoUnwi +
call puts  +
mov edx ds:dword_471DA4 +
jmp loc_41396C  +
***
push esi  +
push ebx  +
sub esp 4Ch +
movzx ebx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_2C] edx +
mov esi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_28] ecx +
mov edi [esp+4Ch+arg_8] +
test bx bx +
jnz loc_414625  +
mov esi edx +
mov edi ecx +
mov edx [eax+18h] +
lea ebp [esp+4Ch+var_14] +
mov ecx [eax+14h] +
mov [esp+4Ch+var_20] edx +
mov edx [eax+10h] +
mov eax [eax+0Ch] +
mov [esp+4Ch+var_40] edi +
mov edi [esp+4Ch+var_20] +
mov [esp+4Ch+var_38] ebp +
lea ebp [esp+4Ch+var_18] +
mov [esp+4Ch+var_3C] ebp +
mov [esp+4Ch+var_44] esi +
mov word ptr [esp+4Ch+var_48] bx +
mov [esp+4Ch+var_4C] edi +
call sub_407CF0  +
mov edx [esp+4Ch+var_28] +
mov ecx 4 +
mov eax [esp+4Ch+var_2C] +
call sub_4055F0  +
mov edx [esp+4Ch+var_18] +
xor eax eax +
test edx edx +
jz loc_4146E2  +
mov eax ds:_iob +
mov [esp+4Ch+var_44] 2 +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset asc_44A161 +
add eax 20h +
mov [esp+4Ch+var_40] eax +
call fwrite  +
mov eax ds:_iob +
add eax 20h +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call fputs  +
mov eax [esp+4Ch+var_14] +
mov edi eax +
or edi [esp+4Ch+var_10] +
jnz loc_4146F0  +
mov eax ds:_iob +
mov [esp+4Ch+var_4C] 3Eh +
add eax 20h +
mov [esp+4Ch+var_48] eax +
call fputc  +
mov eax [esp+4Ch+var_18] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset a0xLx +
call printf  +
jmp loc_4146C6  +
***
push esi  +
push esi  +
sub esp 24h +
mov ecx [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
cmp ecx 4 +
jz loc_416520  +
cmp ecx 8 +
jz loc_4164C0  +
mov eax ecx +
mov ecx [esp+24h+arg_8] +
mov edx ebx +
and eax 1 +
call sub_4065E0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_18] eax +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_20] eax +
call sub_427E10  +
mov [esp+24h+var_24] offset aTag_gnu_mips_a +
add ebx [esp+24h+var_8] +
mov esi eax +
call printf  +
test esi esi +
jz loc_416510  +
cmp esi 1 +
jnz loc_416560  +
mov [esp+24h+var_24] offset a128BitMsa +
call puts  +
mov eax ebx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_24] offset aAnyMsaOrNot +
call puts  +
mov eax ebx +
jmp loc_416509  +
mov eax [esp+24h+arg_8] +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_18] eax +
lea eax [esp+24h+var_8] +
mov [esp+24h+var_20] eax +
call sub_427E10  +
add ebx [esp+24h+var_8] +
mov [esp+24h+var_24] offset aTag_gnu_mips_0 +
mov esi eax +
call printf  +
mov eax esi +
call sub_405720  +
mov eax ebx +
jmp loc_4164B7  +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_24] offset a???D +
call printf  +
mov eax ebx +
jmp loc_416509  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+34h] +
mov esi [esp+30h] +
mov ecx [esp+38h] +
cmp ebx 8 +
jz loc_4165A8  +
mov eax ebx +
mov edx esi +
and eax 1 +
call sub_4065E0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
lea eax [esp+1Ch] +
mov [esp+0Ch] ecx +
mov [esp] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
call sub_427E10  +
mov dword ptr [esp] offset aTag_gnu_s390_a +
add esi [esp+1Ch] +
mov ebx eax +
call printf  +
cmp ebx 1 +
jz loc_416620  +
cmp ebx 2 +
jz loc_416600  +
test ebx ebx +
jz loc_416610  +
mov [esp+4] ebx +
mov dword ptr [esp] offset a???D +
call printf  +
mov eax esi +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] offset aHardware +
call puts  +
mov eax esi +
jmp loc_4165F6  +
***
mov dword ptr [esp] offset aAny_0 +
call puts  +
mov eax esi +
jmp loc_4165F6  +
***
mov dword ptr [esp] offset aSoftware +
call puts  +
mov eax esi +
jmp loc_4165F6  +
***
push esi  +
push ebx  +
sub esp 24h +
mov eax [esp+34h] +
mov ebx [esp+30h] +
cmp eax 4 +
jz loc_4166D0  +
cmp eax 8 +
jz loc_416660  +
mov ecx [esp+38h] +
mov edx ebx +
call sub_4065E0  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+38h] +
mov [esp] ebx +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] eax +
lea eax [esp+1Ch] +
mov [esp+4] eax +
call sub_427E10  +
mov dword ptr [esp] offset aTag_gnu_sparc_ +
add ebx [esp+1Ch] +
mov esi eax +
call printf  +
test esi esi +
jz loc_416891  +
test esi 1 +
jnz loc_416BC0  +
test esi 2 +
jnz loc_416E3A  +
test esi 4 +
mov edx 1 +
jz loc_416DEE  +
mov eax offset unk_44640B +
jmp loc_416C0C  +
mov eax [esp+38h] +
mov [esp] ebx +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] eax +
lea eax [esp+1Ch] +
mov [esp+4] eax +
call sub_427E10  +
mov dword ptr [esp] offset aTag_gnu_spar_0 +
add ebx [esp+1Ch] +
mov esi eax +
call printf  +
test esi esi +
jz loc_416891  +
test esi 1 +
jnz loc_4168D0  +
test esi 2 +
jz loc_416E8E  +
mov eax offset unk_44640B +
mov [esp+4] eax +
mov dword ptr [esp] offset aSdiv32 +
call printf  +
test esi 4 +
jnz loc_416917  +
xor edx edx +
test esi 8 +
jz loc_416AF0  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSv8plus +
call printf  +
test esi 10h +
jnz loc_416946  +
xor edx edx +
test esi 20h +
jz loc_416BA0  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSvis +
call printf  +
test esi 40h +
jnz loc_416975  +
xor edx edx +
test esi 80h +
jz loc_416B80  +
nop   +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSasiblkinit +
call printf  +
test esi 100h +
jnz loc_4169A4  +
xor edx edx +
test esi 400h +
jz loc_416B60  +
nop   +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSvis3 +
call printf  +
test esi 800h +
jnz loc_4169D3  +
xor edx edx +
test esi 1000h +
jz loc_416B42  +
nop   +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSrandom +
call printf  +
test esi 2000h +
jnz loc_416A00  +
xor edx edx +
test esi 4000h +
jz loc_416B24  +
nop   +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSfjfmau +
call printf  +
test esi 8000h +
jz loc_416872  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSima +
call printf  +
and esi 10000h +
jz loc_4168A9  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aScspare +
call printf  +
jmp loc_4168A9  +
mov eax ds:_iob +
mov dword ptr [esp] 30h +
add eax 20h +
mov [esp+4] eax +
call fputc  +
mov eax ds:_iob +
mov dword ptr [esp] 0Ah +
add eax 20h +
mov [esp+4] eax +
call fputc  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov eax ds:_iob +
mov dword ptr [esp+8] 5 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMul32 +
add eax 20h +
mov [esp+0Ch] eax +
call fwrite  +
test esi 2 +
mov eax offset asc_446525 +
jnz loc_416727  +
xor edx edx +
test esi 4 +
jz loc_416B0A  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSfsmuld +
call printf  +
test esi 8 +
jnz loc_416751  +
xor edx edx +
test esi 10h +
jz loc_416AD0  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSpopc +
call printf  +
test esi 20h +
jnz loc_416780  +
xor edx edx +
test esi 40h +
jz loc_416AB0  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSvis2 +
call printf  +
test esi 80h +
jnz loc_4167B0  +
xor edx edx +
test esi 100h +
jz loc_416A90  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSfmaf +
call printf  +
test esi 400h +
jnz loc_4167E0  +
xor edx edx +
test esi 800h +
jz loc_416A70  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aShpc +
call printf  +
test esi 1000h +
jnz loc_416810  +
xor edx edx +
test esi 2000h +
jz loc_416A50  +
nop   +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aStrans +
call printf  +
test esi 4000h +
jnz loc_416840  +
xor edx edx +
test esi 8000h +
jnz loc_41685D  +
nop   +
and esi 10000h +
jz loc_4168A9  +
test edx edx +
jz loc_41687A  +
mov eax offset unk_44640B +
jmp loc_41687F  +
***
test esi 4000h +
jz loc_416B24  +
test edx edx +
jz loc_416840  +
mov eax offset unk_44640B +
jmp loc_416845  +
***
test esi 1000h +
jz loc_416B42  +
test edx edx +
jz loc_416810  +
mov eax offset unk_44640B +
jmp loc_416815  +
***
test esi 400h +
jz loc_416B60  +
test edx edx +
jz loc_4167E0  +
mov eax offset unk_44640B +
jmp loc_4167E5  +
***
test esi 80h +
jz loc_416B80  +
test edx edx +
jz loc_4167B0  +
mov eax offset unk_44640B +
jmp loc_4167B5  +
***
test esi 20h +
jz loc_416BA0  +
test edx edx +
jz loc_416780  +
mov eax offset unk_44640B +
jmp loc_416785  +
***
test esi 10h +
jz loc_416AD0  +
test edx edx +
jz loc_416946  +
mov eax offset unk_44640B +
jmp loc_41694B  +
***
test esi 8 +
jz loc_416AF0  +
test edx edx +
jz loc_416751  +
mov eax offset unk_44640B +
jmp loc_416756  +
***
test esi 8000h +
jz loc_416A30  +
test edx edx +
jz loc_41685D  +
mov eax offset unk_44640B +
jmp loc_416862  +
***
test esi 2000h +
jz loc_416A50  +
test edx edx +
jz loc_416A00  +
mov eax offset unk_44640B +
jmp loc_416A05  +
***
test esi 800h +
jz loc_416A70  +
test edx edx +
jz loc_4169D3  +
mov eax offset unk_44640B +
jmp loc_4169D8  +
***
test esi 100h +
jz loc_416A90  +
test edx edx +
jz loc_4169A4  +
mov eax offset unk_44640B +
jmp loc_4169A9  +
***
test esi 40h +
jz loc_416AB0  +
test edx edx +
jz loc_416975  +
mov eax offset unk_44640B +
jmp loc_41697A  +
***
mov eax ds:_iob +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aFjathplus +
add eax 20h +
mov [esp+0Ch] eax +
call fwrite  +
test esi 2 +
mov eax offset asc_446525 +
jnz loc_416E40  +
xor edx edx +
test esi 4 +
jz loc_416DEE  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSadp +
call printf  +
test esi 8 +
jnz loc_416E84  +
xor edx edx +
test esi 10h +
jz loc_416D80  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSmwait +
call printf  +
test esi 20h +
jnz loc_416E30  +
xor edx edx +
test esi 40h +
jz loc_416D00  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSxmont2 +
call printf  +
test esi 80h +
jnz loc_416DC0  +
xor edx edx +
test esi 1000h +
jz loc_416CE8  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSfjathhpc +
call printf  +
test esi 2000h +
jz loc_416CC2  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSfjdes +
call printf  +
and esi 10000h +
jz loc_4168A9  +
mov eax offset asc_446525 +
mov [esp+4] eax +
mov dword ptr [esp] offset aSfjaes +
call printf  +
jmp loc_4168A9  +
***
test esi 2000h +
jz loc_416D40  +
test edx edx +
jz loc_416CAD  +
mov eax offset unk_44640B +
jmp loc_416CB2  +
***
test esi 80h +
jz loc_416D60  +
test edx edx +
jz loc_416DC0  +
mov eax offset unk_44640B +
mov [esp+4] eax +
mov dword ptr [esp] offset aSnsec +
call printf  +
test esi 1000h +
jnz loc_416C90  +
xor edx edx +
test esi 2000h +
jnz loc_416CAD  +
nop   +
and esi 10000h +
jz loc_4168A9  +
test edx edx +
jz loc_416CCE  +
mov eax offset unk_44640B +
jmp loc_416CD3  +
***
test esi 1000h +
jz loc_416CE8  +
test edx edx +
jz loc_416C90  +
mov eax offset unk_44640B +
jmp loc_416C95  +
***
test esi 20h +
jz loc_416DD0  +
test edx edx +
jz loc_416E30  +
mov eax offset unk_44640B +
mov [esp+4] eax +
mov dword ptr [esp] offset aSxmpmul +
call printf  +
test esi 40h +
jnz loc_416C65  +
xor edx edx +
test esi 80h +
jz loc_416D60  +
nop   +
lea esi [esi+0] +
mov eax offset asc_446525 +
jmp loc_416D15  +
***
test esi 40h +
jz loc_416D00  +
test edx edx +
jz loc_416C65  +
mov eax offset unk_44640B +
jmp loc_416C6A  +
***
test esi 8 +
jz loc_416E66  +
test edx edx +
jz loc_416E84  +
mov eax offset unk_44640B +
mov [esp+4] eax +
mov dword ptr [esp] offset aSsparc5 +
call printf  +
test esi 10h +
jnz loc_416C36  +
xor edx edx +
test esi 20h +
jz loc_416DD0  +
lea esi [esi+0] +
mov eax offset asc_446525 +
jmp loc_416D95  +
***
mov eax offset unk_44640B +
nop   +
mov [esp+4] eax +
mov dword ptr [esp] offset aSvis3b +
call printf  +
test esi 4 +
jnz loc_416C07  +
xor edx edx +
test esi 8 +
jnz loc_416E84  +
test esi 10h +
jz loc_416D80  +
test edx edx +
jz loc_416C36  +
mov eax offset unk_44640B +
jmp loc_416C3B  +
***
mov eax offset asc_446525 +
jmp loc_416E03  +
***
test esi 4 +
mov edx 1 +
jz loc_416B0A  +
mov eax offset unk_44640B +
jmp loc_41691C  +
***
push esi  +
mov esi edx +
push ebx  +
mov ecx esi +
sub esp 7Ch +
mov edx [esp+80h+arg_4] +
mov ebx [esp+80h+arg_0] +
mov [esp+80h+var_70] offset aNotes +
mov [esp+80h+var_80] 1 +
mov [esp+80h+var_74] edx +
mov edx eax +
xor eax eax +
mov [esp+80h+var_78] ebx +
mov [esp+80h+var_7C] 0 +
call sub_403CC0  +
mov edi eax +
mov [esp+80h+var_34] eax +
xor eax eax +
test edi edi +
jz loc_4171B0  +
mov [esp+80h+var_78] ebx +
add ebx edi +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] offset aDisplayingNote +
call printf  +
mov [esp+80h+var_78] offset aDataSize +
mov [esp+80h+var_7C] offset aOwner +
mov [esp+80h+var_80] offset a20s10sDescript +
call printf  +
cmp edi ebx +
mov [esp+80h+var_40] ebx +
jnb loc_417192  +
mov ebx edi +
mov [esp+80h+var_38] 1 +
jmp loc_41707F  +
lea eax [esi+1] +
mov [esp+80h+var_80] eax +
call malloc  +
test eax eax +
mov [esp+80h+var_3C] eax +
jz loc_417F56  +
mov edi [esp+80h+var_3C] +
mov [esp+80h+var_7C] ebp +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] edi +
mov ebp edi +
call strncpy  +
test esi esi +
mov byte ptr [edi+esi] 0 +
jz loc_41717A  +
mov edi offset aGnu_0 +
mov esi ebp +
mov ecx 3 +
cmps   +
jz loc_417290  +
mov edi offset aNetbsdCore +
mov ecx 0Bh +
mov esi ebp +
cmps   +
jz loc_417400  +
mov edi offset aNetbsd +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_417675  +
mov edi offset aSpu_0 +
mov ecx 4 +
mov esi ebp +
cmps   +
jnz loc_417460  +
lea eax [ebp+4] +
mov edx offset aSpu +
mov ebx offset aIpfVms +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_60] +
mov esi ebp +
mov [esp+80h+var_7C] edx +
mov edi ebx +
mov [esp+80h+var_80] offset a20s0x08lxS +
mov [esp+80h+var_78] eax +
call printf  +
mov ecx 7 +
cmps   +
jz loc_4172D0  +
mov edi offset aGnu_0 +
mov esi ebp +
mov ecx 3 +
cmps   +
jz loc_417341  +
mov edi offset aStapsdt +
mov esi ebp +
mov ecx 7 +
cmps   +
jz loc_4174A1  +
mov edi offset aCore +
mov ecx 4 +
mov esi ebp +
cmps   +
setnbe bl  +
setb al  +
sub ebx eax +
movsx ebx bl +
test ebx ebx +
jz loc_417314  +
and [esp+80h+var_38] 1 +
mov eax [esp+80h+var_3C] +
test eax eax +
jz loc_417071  +
mov [esp+80h+var_80] eax +
call free  +
mov ebx [esp+80h+var_44] +
cmp [esp+80h+var_40] ebx +
jbe loc_4171A0  +
mov edi [esp+80h+var_40] +
sub edi ebx +
cmp ds:word_471D92 32h +
jz loc_4171B8  +
cmp edi 0Bh +
jbe loc_417AC0  +
lea eax [ebx+8] +
mov [esp+80h+var_7C] 4 +
lea ebp [ebx+0Ch] +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 4 +
mov [esp+80h+var_80] ebx +
mov [esp+80h+var_50] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 4 +
mov esi eax +
lea eax [ebx+4] +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_60] eax +
lea eax [esi+3] +
and eax 0FFFFFFFCh +
add eax ebp +
cmp [esp+80h+var_34] eax +
mov [esp+80h+var_58] eax +
ja loc_4170FA  +
cmp [esp+80h+var_40] eax +
jnb loc_417110  +
mov [esp+80h+var_7C] esi +
xor esi esi +
mov [esp+80h+var_80] offset aCorruptNoteNam +
call sub_437070  +
mov [esp+80h+var_58] ebp +
mov eax [esp+80h+var_60] +
add eax 3 +
and eax 0FFFFFFFCh +
add eax [esp+80h+var_58] +
mov [esp+80h+var_44] eax +
mov eax 0Ch +
add eax ebx +
cmp eax [esp+80h+var_58] +
ja loc_417243  +
mov ecx [esp+80h+var_44] +
cmp eax ecx +
ja loc_417243  +
test esi esi +
js loc_417243  +
mov eax [esp+80h+var_60] +
test eax eax +
js loc_417243  +
mov eax ecx +
sub eax ebx +
cmp edi eax +
jb loc_417243  +
cmp byte ptr [ebp+esi-1] 0 +
jnz loc_416F50  +
test esi esi +
mov [esp+80h+var_3C] 0 +
jnz loc_416F89  +
mov eax [esp+80h+var_50] +
mov ebx offset aIpfVms +
call sub_4039A0  +
mov edx offset aNone_5 +
jmp loc_416FE6  +
mov [esp+80h+var_38] 1 +
lea esi [esi+0] +
mov eax [esp+80h+var_34] +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_38] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ds:byte_471D67 0Dh +
jnz loc_417093  +
cmp edi 17h +
jbe loc_417AC0  +
lea eax [ebx+10h] +
mov [esp+80h+var_7C] 8 +
lea ebp [ebx+18h] +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 8 +
mov [esp+80h+var_80] ebx +
mov [esp+80h+var_50] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 8 +
mov esi eax +
lea eax [ebx+8] +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov ecx eax +
mov [esp+80h+var_60] eax +
lea eax [esi+7] +
and eax 0FFFFFFF8h +
lea edx [ebp+eax+0] +
mov eax ecx +
add eax 7 +
and eax 0FFFFFFF8h +
add eax edx +
mov [esp+80h+var_44] eax +
mov eax 18h +
mov [esp+80h+var_58] edx +
add eax ebx +
cmp eax [esp+80h+var_58] +
jbe loc_417133  +
sub ebx [esp+80h+var_34] +
mov [esp+80h+var_80] offset aNoteWithInvali +
mov [esp+80h+var_7C] ebx +
call sub_437070  +
mov eax [esp+80h+var_60] +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] offset aType0xLxNamesi +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_50] +
mov [esp+80h+var_7C] eax +
call sub_437070  +
mov eax [esp+80h+var_34] +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_38] +
jmp loc_4171B0  +
cmp [esp+80h+var_50] 2 +
jz loc_4179A1  +
jbe loc_417630  +
mov edx [esp+80h+var_50] +
mov eax offset aNt_gnu_build_i +
cmp edx 3 +
jz loc_4172BD  +
cmp edx 4 +
mov eax offset aNt_gnu_gold_ve +
jnz loc_417640  +
mov edx ebp +
mov ebx offset aIpfVms +
jmp loc_416FE6  +
cmp [esp+80h+var_50] 66h +
jz loc_417E23  +
jbe loc_4175D0  +
cmp [esp+80h+var_50] 6Ah +
jz loc_417CC2  +
mov eax [esp+80h+var_50] +
jbe loc_417804  +
cmp eax 6Bh +
jz loc_417D40  +
cmp eax 6Ch +
jnz loc_41705C  +
mov [esp+80h+var_80] offset aPatchTime +
jmp loc_4175FE  +
cmp ds:dword_471CF0 1 +
sbb esi esi +
and esi 4 +
add esi 4 +
cmp [esp+80h+var_50] 46494C45h +
jz loc_4176B1  +
mov ebx [esp+80h+var_38] +
and ebx 1 +
mov [esp+80h+var_38] ebx +
jmp loc_417061  +
mov eax [esp+80h+var_50] +
cmp eax 3 +
jz loc_4179B2  +
cmp eax 4 +
jz loc_417834  +
cmp eax 1 +
jnz loc_41705C  +
cmp [esp+80h+var_60] 0Fh +
jbe loc_417E41  +
mov ebp [esp+80h+var_58] +
mov [esp+80h+var_7C] 4 +
mov [esp+80h+var_80] ebp +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 4 +
mov ebx eax +
mov eax ebp +
add eax 4 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 4 +
mov edi eax +
mov eax ebp +
add eax 8 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 4 +
mov esi eax +
mov eax ebp +
add eax 0Ch +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
cmp ebx 6 +
mov edx offset aUnknown_4 +
ja loc_4173D9  +
mov edx ds:off_44DB90[ebx*4] +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_74] esi +
mov [esp+80h+var_78] edi +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] offset aOsSAbiLd_Ld_Ld +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov eax [esp+80h+var_50] +
cmp eax 1 +
jz loc_4179F0  +
cmp eax 1Fh +
jbe loc_4178B0  +
movzx eax ds:word_471D92 +
cmp ax 29h +
jz loc_417439  +
ja loc_417780  +
cmp ax 2 +
jz loc_417439  +
cmp ax 12h +
jnz loc_417794  +
mov edx [esp+80h+var_50] +
mov eax offset aPt_getregsRegS +
cmp edx 20h +
jz loc_4172BD  +
cmp edx 22h +
mov eax offset aPt_getfpregsFp +
jz loc_4172BD  +
jmp loc_4177B4  +
mov ebx offset aIpfVms +
mov esi ebp +
mov edi ebx +
mov ecx 7 +
cmps   +
jz loc_4177F0  +
mov edi offset aStapsdt +
mov esi ebp +
mov ecx 7 +
cmps   +
jnz loc_417770  +
cmp [esp+80h+var_50] 3 +
mov eax offset aNt_stapsdtSyst +
jnz loc_417971  +
mov edx ebp +
jmp loc_416FE6  +
cmp ds:dword_471CF0 1 +
mov edi [esp+80h+var_58] +
mov eax [esp+80h+var_60] +
sbb ebx ebx +
and ebx 4 +
add ebx 4 +
add eax edi +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] edi +
add edi ebx +
mov [esp+80h+var_60] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] edi +
add edi ebx +
mov [esp+80h+var_58] eax +
mov [esp+80h+var_54] edx +
call ds:dword_472C94  +
mov [esp+80h+var_7C] ebx +
add ebx edi +
mov [esp+80h+var_80] edi +
mov [esp+80h+var_50] eax +
mov [esp+80h+var_4C] edx +
call ds:dword_472C94  +
mov [esp+80h+var_80] ebx +
mov [esp+80h+var_2C] edx +
mov [esp+80h+var_30] eax +
call strlen  +
lea ebp [ebx+eax+1] +
mov [esp+80h+var_80] ebp +
call strlen  +
lea esi [ebp+eax+1] +
mov [esp+80h+var_80] esi +
call strlen  +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] offset aProviderS +
lea edi [esi+eax+1] +
call printf  +
mov [esp+80h+var_7C] ebp +
mov [esp+80h+var_80] offset aNameS_0 +
call printf  +
mov [esp+80h+var_80] offset aLocation +
call printf  +
mov edx [esp+80h+var_54] +
mov ecx 5 +
mov eax [esp+80h+var_58] +
call sub_4055F0  +
mov [esp+80h+var_80] offset aBase +
call printf  +
mov edx [esp+80h+var_4C] +
mov ecx 5 +
mov eax [esp+80h+var_50] +
call sub_4055F0  +
mov [esp+80h+var_80] offset aSemaphore +
call printf  +
mov edx [esp+80h+var_2C] +
mov ecx 5 +
mov eax [esp+80h+var_30] +
call sub_4055F0  +
mov [esp+80h+var_80] 0Ah +
call putchar  +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] offset aArgumentsS +
call printf  +
xor eax eax +
cmp [esp+80h+var_60] edi +
setz al  +
and [esp+80h+var_38] eax +
jmp loc_417061  +
cmp [esp+80h+var_50] 2 +
jz loc_417CA4  +
jbe loc_4178E1  +
mov eax [esp+80h+var_50] +
cmp eax 6 +
jz loc_417CE0  +
cmp eax 65h +
jnz loc_41705C  +
mov [esp+80h+var_80] offset aLinkTime +
call printf  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] 8 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
call sub_4063B0  +
mov [esp+80h+var_80] 0Ah +
call putchar  +
jmp loc_41705C  +
cmp [esp+80h+var_50] 1 +
mov eax offset aNt_gnu_abi_tag +
jz loc_4172BD  +
mov eax [esp+80h+var_50] +
mov ebx offset aIpfVms +
mov [esp+80h+var_78] offset aUnknownNoteTyp +
mov [esp+80h+var_7C] 40h +
mov [esp+80h+var_80] offset unk_471180 +
mov [esp+80h+var_74] eax +
call sub_402590  +
mov eax offset unk_471180 +
mov edx ebp +
jmp loc_416FE6  +
mov eax [esp+80h+var_50] +
cmp eax 1 +
jz loc_417A01  +
cmp eax 5 +
jnz loc_417886  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_80] offset aNetbsd0x08lxMa +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_60] +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
lea eax [esi+esi] +
cmp [esp+80h+var_60] eax +
mov [esp+80h+var_50] eax +
jb loc_417E57  +
mov eax [esp+80h+var_58] +
mov ecx [esp+80h+var_60] +
cmp byte ptr [eax+ecx-1] 0 +
jnz loc_417960  +
mov edi [esp+80h+var_58] +
xor ebp ebp +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] edi +
call ds:dword_472C94  +
mov ecx edi +
add ecx esi +
mov [esp+80h+var_20] ecx +
mov [esp+80h+var_80] ecx +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_30] eax +
mov [esp+80h+var_1C] edx +
call ds:dword_472C94  +
mov edi [esp+80h+var_30] +
mov ecx [esp+80h+var_60] +
mov [esp+80h+var_24] 0 +
mov [esp+80h+var_28] ecx +
mov ecx edi +
mov [esp+80h+var_18] eax +
mov eax esi +
mov [esp+80h+var_14] edx +
add eax esi +
mov edx ebp +
shld edx esi +
add eax esi +
adc edx ebp +
mov ebp [esp+80h+var_1C] +
imul ecx edx +
imul ebp eax +
mul  edi +
mov edi [esp+80h+var_50] +
add ecx ebp +
xor ebp ebp +
add edx ecx +
add edi eax +
adc ebp edx +
cmp [esp+80h+var_24] ebp +
ja loc_417AEF  +
jnb loc_417AE5  +
mov [esp+80h+var_80] offset aMalformedNoteT +
call puts  +
jmp loc_417338  +
mov eax [esp+80h+var_50] +
call sub_4039A0  +
mov edx ebp +
jmp loc_416FE6  +
cmp ax 2Bh +
jz loc_417439  +
cmp ax 9026h +
jz loc_417439  +
mov edx [esp+80h+var_50] +
mov eax offset aPt_getregsRegS +
cmp edx 21h +
jz loc_4172BD  +
cmp edx 23h +
mov eax offset aPt_getfpregsFp +
jz loc_4172BD  +
mov eax [esp+80h+var_50] +
mov ebx offset aIpfVms +
mov [esp+80h+var_78] offset aPt_firstmachD +
mov [esp+80h+var_7C] 40h +
mov [esp+80h+var_80] offset unk_471140 +
sub eax 20h +
mov [esp+80h+var_74] eax +
call sub_402590  +
mov eax offset unk_471140 +
mov edx ebp +
jmp loc_416FE6  +
mov eax [esp+80h+var_50] +
cmp eax 6Ch +
ja loc_417F26  +
jmp ds:off_44B060[eax*4]  +
cmp eax 67h +
jz loc_417D20  +
cmp eax 68h +
jnz loc_41705C  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_80] offset aLinkerIdS +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov [esp+80h+var_80] offset aVersion +
call printf  +
mov ebx [esp+80h+var_60] +
test ebx ebx +
jz loc_41761D  +
mov edx [esp+80h+var_58] +
movsx eax byte ptr [edx] +
test al al +
jz loc_41761D  +
mov esi [esp+80h+var_60] +
lea ebx [edx+1] +
add esi edx +
jmp loc_417875  +
add ebx 1 +
movsx eax byte ptr [ebx-1] +
test al al +
jz loc_41761D  +
mov [esp+80h+var_80] eax +
call putchar  +
cmp ebx esi +
jnz loc_417866  +
jmp loc_41761D  +
mov eax [esp+80h+var_50] +
mov [esp+80h+var_80] offset aNetbsd0x08lxUn +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_60] +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov [esp+80h+var_74] eax +
mov ebx offset aIpfVms +
mov [esp+80h+var_78] offset aUnknownNoteTyp +
mov [esp+80h+var_7C] 40h +
mov [esp+80h+var_80] offset unk_471140 +
call sub_402590  +
mov eax offset unk_471140 +
mov edx ebp +
jmp loc_416FE6  +
cmp [esp+80h+var_50] 1 +
jnz loc_41705C  +
cmp [esp+80h+var_60] 24h +
jbe loc_417E68  +
mov edi [esp+80h+var_58] +
lea ebx [edi+22h] +
mov [esp+80h+var_80] ebx +
call strlen  +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] offset aCreationDate_1 +
mov esi eax +
call printf  +
mov eax edi +
add eax 11h +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aLastPatchDate_ +
call printf  +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] offset aModuleNameS +
call printf  +
lea eax [edi+esi+23h] +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aModuleVersionS +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov [esp+80h+var_80] offset aMalformedNoteD +
call puts  +
jmp loc_417338  +
mov eax [esp+80h+var_50] +
mov [esp+80h+var_78] offset aUnknownNoteTyp +
mov [esp+80h+var_7C] 40h +
mov [esp+80h+var_80] offset unk_4710C0 +
mov [esp+80h+var_74] eax +
call sub_402590  +
mov eax offset unk_4710C0 +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_gnu_hwcapDs +
mov edx ebp +
mov ebx offset aIpfVms +
jmp loc_416FE6  +
mov [esp+80h+var_80] offset aBuildId +
call printf  +
mov eax [esp+80h+var_60] +
mov esi [esp+80h+var_58] +
test eax eax +
lea ebx [esi+eax] +
jz loc_41761D  +
movzx eax byte ptr [esi] +
add esi 1 +
mov [esp+80h+var_80] offset a02x_0 +
mov [esp+80h+var_7C] eax +
call printf  +
cmp esi ebx +
jnz loc_4179D1  +
jmp loc_41761D  +
mov eax offset aNetbsdProcinfo +
mov edx ebp +
mov ebx offset aIpfVms +
jmp loc_416FE6  +
mov eax [esp+80h+var_58] +
mov edi 51EB851Fh +
mov [esp+80h+var_7C] 4 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov ecx 0D1B71759h +
mov esi eax +
mul  ecx +
mov ecx edx +
shr ecx 0Dh +
mov eax ecx +
mul  edi +
mov eax ecx +
mov ebx edx +
shr ebx 5 +
imul ebx ebx +
sub eax ebx +
mov ebx eax +
jz loc_417F6F  +
mov eax ecx +
mov edx 4EC4EC4Fh +
mul  edx +
mov eax offset aZ +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] offset aNetbsd0x08lxId +
shr edx 3 +
imul edx edx +
sub ecx edx +
mov edx offset unk_44640B +
add ecx 41h +
cmp ebx 1Bh +
cmovb eax edx +
mov [esp+80h+var_68] ecx +
mov ecx 431BDE83h +
mov [esp+80h+var_6C] eax +
mov eax esi +
mul  ecx +
mov ecx edx +
shr ecx 12h +
mov eax ecx +
mul  edi +
mov eax esi +
shr edx 5 +
imul edx edx +
sub ecx edx +
mov edx 55E63B89h +
mul  edx +
mov eax [esp+80h+var_60] +
mov [esp+80h+var_70] ecx +
shr edx 19h +
mov [esp+80h+var_74] edx +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] offset aCorruptNoteOnl +
call sub_437070  +
mov eax [esp+80h+var_34] +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_38] +
jmp loc_4171B0  +
cmp [esp+80h+var_28] edi +
jb loc_41775B  +
mov [esp+80h+var_80] offset aPageSize +
mov edi [esp+80h+var_20] +
call printf  +
mov edx [esp+80h+var_14] +
mov ecx 1 +
mov eax [esp+80h+var_18] +
add edi esi +
call sub_4055F0  +
mov [esp+80h+var_80] 0Ah +
call putchar  +
mov edx [esp+80h+var_50] +
mov [esp+80h+var_68] offset aPageOffset +
mov [esp+80h+var_70] offset aEnd +
mov [esp+80h+var_78] offset aStart +
mov eax edx +
add eax 4 +
mov [esp+80h+var_6C] eax +
mov [esp+80h+var_74] eax +
mov eax edx +
add eax 2 +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aSSS +
call printf  +
lea eax [esi+esi*2] +
mov edx [esp+80h+var_1C] +
mov ebp eax +
mov [esp+80h+var_28] eax +
mov eax [esp+80h+var_30] +
imul ebp eax +
add ebp edi +
or edx eax +
jz loc_417331  +
mov eax [esp+80h+var_58] +
add eax [esp+80h+var_60] +
cmp eax ebp +
mov [esp+80h+var_20] eax +
jz loc_417C93  +
mov eax [esp+80h+var_30] +
mov [esp+80h+var_60] eax +
mov eax [esp+80h+var_1C] +
mov [esp+80h+var_1C] ebx +
mov ebx [esp+80h+var_50] +
mov [esp+80h+var_5C] eax +
mov [esp+80h+var_80] edi +
mov [esp+80h+var_7C] esi +
call ds:dword_472C94  +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_58] eax +
lea eax [edi+esi] +
mov [esp+80h+var_54] edx +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_50] eax +
lea eax [edi+ebx] +
mov [esp+80h+var_4C] edx +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_80] offset asc_44B04D +
add edi [esp+80h+var_28] +
mov [esp+80h+var_2C] edx +
mov [esp+80h+var_30] eax +
call printf  +
mov edx [esp+80h+var_54] +
mov ecx 5 +
mov eax [esp+80h+var_58] +
call sub_4055F0  +
mov [esp+80h+var_80] offset unk_446400 +
call printf  +
mov edx [esp+80h+var_4C] +
mov ecx 5 +
mov eax [esp+80h+var_50] +
call sub_4055F0  +
mov [esp+80h+var_80] offset unk_446400 +
call printf  +
mov edx [esp+80h+var_2C] +
mov ecx 5 +
mov eax [esp+80h+var_30] +
call sub_4055F0  +
mov [esp+80h+var_7C] ebp +
mov [esp+80h+var_80] offset aS_21 +
call printf  +
mov [esp+80h+var_80] ebp +
call strlen  +
mov edx [esp+80h+var_60] +
mov ecx [esp+80h+var_5C] +
lea ebp [ebp+eax+1] +
mov eax edx +
xor eax 1 +
or eax ecx +
jz loc_417331  +
add [esp+80h+var_60] 0FFFFFFFFh +
adc [esp+80h+var_5C] 0FFFFFFFFh +
cmp [esp+80h+var_20] ebp +
jnz loc_417BA7  +
mov ebx [esp+80h+var_1C] +
mov [esp+80h+var_80] offset aMalformedNoteF +
call puts  +
jmp loc_417338  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_80] offset aLanguageS +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_80] offset aGlobalSymbolTa +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov [esp+80h+var_80] offset aFloatingPointM +
call printf  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] 8 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_80] offset a0x016i64x +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_78] edx +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_80] offset aImageIdS +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov edi [esp+80h+var_58] +
mov [esp+80h+var_7C] 4 +
mov eax edi +
add eax 4 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_7C] 4 +
mov [esp+80h+var_80] edi +
mov ebx eax +
call ds:dword_472C94  +
mov [esp+80h+var_78] ebx +
mov [esp+80h+var_80] offset aMajorIdUMinorI +
mov [esp+80h+var_7C] eax +
call printf  +
mov [esp+80h+var_80] offset aLastModified +
call printf  +
mov eax edi +
add eax 8 +
mov [esp+80h+var_7C] 8 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
call sub_4063B0  +
mov [esp+80h+var_80] offset aLinkFlags +
call printf  +
mov eax edi +
add eax 10h +
mov [esp+80h+var_7C] 8 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_80] offset a0x016i64x +
mov [esp+80h+var_78] edx +
mov [esp+80h+var_7C] eax +
call printf  +
mov eax edi +
add eax 18h +
mov [esp+80h+var_7C] 4 +
mov [esp+80h+var_80] eax +
call ds:dword_472C94  +
mov [esp+80h+var_80] offset aHeaderFlags0x0 +
mov [esp+80h+var_7C] eax +
call printf  +
mov eax edi +
add eax 20h +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aImageIdS_0 +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_80] offset aImageNameS +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov [esp+80h+var_80] offset aCorruptGnu_abi +
call puts  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov [esp+80h+var_80] offset aMalformedNot_0 +
call puts  +
jmp loc_417338  +
mov [esp+80h+var_80] offset aInvalidSize +
call puts  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
mov eax offset aNt_vms_patchti +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_orig_dy +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_gstnamS +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_imgbidB +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_linkidL +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_imgidIm +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_imgnamI +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_linktim +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_fpmodeF +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_eidcCon +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_title +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_srcSour +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_lnmLang +
mov edx ebp +
jmp loc_416FE6  +
mov eax offset aNt_vms_mhdModu +
mov edx ebp +
jmp loc_416FE6  +
mov eax [esp+80h+var_50] +
mov [esp+80h+var_78] offset aUnknownNoteTyp +
mov [esp+80h+var_7C] 40h +
mov [esp+80h+var_80] offset unk_471100 +
mov [esp+80h+var_74] eax +
call sub_402590  +
mov eax offset unk_471100 +
mov edx ebp +
jmp loc_416FE6  +
mov [esp+80h+var_80] offset aOutOfMemoryA_8 +
call sub_436A70  +
mov [esp+80h+var_38] 0 +
jmp loc_4171A0  +
mov eax esi +
mul  edi +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] offset aNetbsd0x08lx_0 +
mov ecx edx +
shr ecx 5 +
mov eax ecx +
mul  edi +
mov eax esi +
shr edx 5 +
imul edx edx +
sub ecx edx +
mov [esp+80h+var_6C] ecx +
mov ecx 431BDE83h +
mul  ecx +
mov ecx edx +
shr ecx 12h +
mov eax ecx +
mul  edi +
mov eax esi +
shr edx 5 +
imul edx edx +
sub ecx edx +
mov edx 55E63B89h +
mul  edx +
mov eax [esp+80h+var_60] +
mov [esp+80h+var_70] ecx +
shr edx 19h +
mov [esp+80h+var_74] edx +
mov [esp+80h+var_7C] eax +
call printf  +
and [esp+80h+var_38] 1 +
jmp loc_417061  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx ds:dword_471D48 +
mov [esp+2Ch+var_10] eax +
mov eax ds:dword_471D9C +
test eax eax +
jz loc_41806C  +
xor esi esi +
mov edi 1 +
jmp loc_418011  +
add esi 1 +
add ebx 38h +
cmp esi ds:dword_471D9C +
jnb loc_418040  +
cmp dword ptr [ebx] 4 +
jnz loc_418003  +
mov ecx [ebx+0Ch] +
mov eax [ebx+24h] +
mov ebp [ebx+20h] +
mov edx [ebx+8] +
mov [esp+2Ch+var_18] ecx +
mov ecx eax +
or ecx ebp +
mov [esp+2Ch+var_1C] edx +
jnz loc_418050  +
xor edi edi +
add esi 1 +
add ebx 38h +
cmp esi ds:dword_471D9C +
jb loc_418011  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] eax +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] ebp +
call sub_416EB0  +
and edi eax +
jmp loc_418003  +
mov edi 1 +
jmp loc_418040  +
***
push esi  +
mov esi offset dword_471740 +
push ebx  +
mov ebx eax +
sub esp 3Ch +
test eax eax +
mov byte ptr ds:dword_471740 0 +
jz loc_4181A7  +
cmp edx 58h +
jz loc_419B90  +
jbe loc_4181B4  +
cmp edx 0A7h +
jz loc_419C07  +
jbe loc_418310  +
cmp edx 0DDh +
jz loc_419A80  +
ja loc_418450  +
cmp edx 0C3h +
jz loc_418830  +
cmp edx 0C5h +
jz loc_41A0C0  +
cmp edx 0ADh +
jnz loc_4181A7  +
test al 1 +
jnz loc_41B7A6  +
test bl 2 +
jnz loc_41B383  +
test bl 4 +
jnz loc_41B32F  +
test bl 8 +
jnz loc_41B612  +
test bl 40h +
jz loc_4181A7  +
mov ecx offset aUsesStringInst +
and ebx 80h +
mov eax offset aBansStringInst +
mov edx offset dword_471740 +
cmovz ecx eax +
mov ebx [edx] +
add edx 4 +
lea eax [ebx-1010101h] +
not ebx  +
and eax ebx +
and eax 80808080h +
jz loc_418138  +
mov ebx eax +
shr ebx 10h +
test eax 8080h +
cmovz eax ebx +
lea ebx [edx+2] +
cmovz edx ebx +
mov ebx [ecx] +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
lea eax dword_471740[edx] +
mov ds:dword_471740[edx] ebx +
mov edx [ecx+4] +
mov [eax+4] edx +
mov edx [ecx+8] +
mov [eax+8] edx +
mov edx [ecx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov edx [ecx+14h] +
mov [eax+14h] edx +
movzx edx word ptr [ecx+18h] +
mov [eax+18h] dx +
movzx edx byte ptr [ecx+1Ah] +
mov [eax+1Ah] dl +
add esp 3Ch +
mov eax offset dword_471740 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 24h +
jz loc_419D10  +
jbe loc_418391  +
cmp edx 32h +
jz loc_4198B0  +
lea esi [esi+0] +
ja loc_4186F3  +
cmp edx 2Ah +
jz loc_4188F7  +
cmp edx 2Bh +
jz loc_41A1A0  +
cmp edx 28h +
jnz loc_4181A7  +
and eax 0FF000000h +
test bl 1 +
jnz loc_41B922  +
and ebx 0FFFFFFh +
cmp eax 2000000h +
jz loc_41D01D  +
jbe loc_41AB1D  +
cmp eax 4000000h +
jz loc_41CF80  +
cmp eax 5000000h +
jz loc_41CD59  +
cmp eax 3000000h +
jz loc_41CC0F  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418238  +
mov ecx eax +
mov edi 3Eh +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
test ebx ebx +
mov ds:dword_471740[edx] 753C202Ch +
mov ds:dword_471744[edx] 6365726Eh +
mov ds:dword_471748[edx] 696E676Fh +
mov ds:dword_47174C[edx] 2064657Ah +
mov ds:dword_471750[edx] 49424145h +
mov word ptr ds:dword_471754[edx] di +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4182B7  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 753C202Ch +
mov ds:dword_471744[edx] 6F6E6B6Eh +
mov ds:dword_471748[edx] 3E6E77h +
jmp loc_4181A7  +
cmp edx 63h +
jz loc_419AF6  +
jbe loc_4185F4  +
cmp edx 6Ah +
jz loc_418930  +
cmp edx 8Ch +
nop   +
jz loc_419BC0  +
cmp edx 69h +
jnz loc_4181A7  +
movzx eax al +
sub eax 0Bh +
cmp eax 63h +
mov ds:dword_471740 7261203Ah +
mov ds:dword_471744 74696863h +
mov ds:dword_471748 75746365h +
mov ds:dword_47174C 76206572h +
mov ds:dword_471750 61697261h +
mov ds:dword_471754 203A746Eh +
ja loc_41925E  +
jmp ds:off_44B414[eax*4]  +
cmp edx 0Fh +
jz loc_419986  +
lea esi [esi+0] +
jbe loc_4192D4  +
cmp edx 15h +
jz loc_4187F4  +
cmp edx 16h +
jz loc_41A165  +
cmp edx 14h +
jnz loc_4181A7  +
test eax eax +
js loc_41D313  +
test ebx 10000h +
jnz loc_41B970  +
and bh 80h +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4183E3  +
mov ecx eax +
mov ebx 62h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6572202Ch +
mov ds:dword_471744[edx] 61636F6Ch +
mov ds:dword_471748[edx] 6C626174h +
mov ds:dword_47174C[edx] 696C2D65h +
mov word ptr ds:dword_471750[edx] bx +
jmp loc_4181A7  +
cmp edx 9041h +
jz loc_419B90  +
jbe loc_418786  +
cmp edx 9080h +
jz loc_419810  +
cmp edx 0F00Dh +
jnz loc_4181A7  +
and eax 0FF000000h +
cmp eax 2000000h +
jz loc_41CBAF  +
jbe loc_41B036  +
cmp eax 8000000h +
jz loc_41CD0B  +
cmp eax 10000000h +
jz loc_41CBEF  +
cmp eax 4000000h +
jz loc_41CBCF  +
mov ds:dword_471740 753C202Ch +
mov ds:dword_471744 6F6E6B6Eh +
mov ds:dword_471748 4D206E77h +
mov ds:dword_47174C 63205065h +
mov ds:dword_471750 74207570h +
mov ds:dword_471754 3E657079h +
mov byte ptr ds:dword_471758 0 +
mov eax ebx +
and eax 0FF0000h +
cmp eax 20000h +
jz loc_41CA1A  +
ja loc_41A8F9  +
test eax eax +
jz loc_418588  +
cmp eax 10000h +
mov edx offset dword_471740 +
jnz loc_41C999  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418520  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 72h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 5641202Ch +
mov ds:dword_471744[edx] 6F632043h +
mov ds:dword_471748[edx] 636F7270h +
mov ds:dword_47174C[edx] 6F737365h +
mov word ptr ds:dword_471750[edx] ax +
test bh 1 +
jnz loc_41B1EF  +
movzx edx bl +
test edx edx +
jnz loc_41B1A3  +
and ebx 0FE00h +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4185AD  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov [esp+40h+var_38] ebx +
mov [esp+40h+var_3C] offset aUnknownFlagsBi +
mov [esp+40h+var_40] edx +
call sprintf  +
jmp loc_4181A7  +
cmp edx 5Ch +
jz loc_4189C0  +
cmp edx 5Dh +
jnz loc_419AED  +
movzx eax al +
cmp eax 3 +
jz loc_41C311  +
cmp eax 4 +
jz loc_41C35A  +
cmp eax 2 +
jz loc_41C336  +
mov ds:dword_471740 6547202Ch +
mov ds:dword_471744 6972656Eh +
mov ds:dword_471748 52412063h +
mov ds:dword_47174C 706D6F43h +
mov ds:dword_471750 746361h +
and ebx 0F00h +
cmp ebx 200h +
jz loc_41C41C  +
cmp ebx 300h +
jz loc_41C398  +
test ebx ebx +
jnz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418681  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 656C202Ch +
mov ds:dword_471744[edx] 79636167h +
mov ds:dword_471748[edx] 73797320h +
mov ds:dword_47174C[edx] 6C6C6163h +
mov ds:dword_471750[edx] 49424120h +
mov byte ptr ds:dword_471754[edx] 0 +
jmp loc_4181A7  +
cmp edx 53h +
jz loc_418910  +
cmp edx 57h +
jz loc_419810  +
cmp edx 4Bh +
jnz loc_4181A7  +
test al 1 +
jnz loc_41C2BF  +
test bh 1 +
jnz loc_41B7F5  +
and bh 2 +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41872D  +
mov ecx eax +
mov edi 74h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 2D47202Ch +
mov ds:dword_471744[edx] 616F6C46h +
mov word ptr ds:dword_471748[edx] di +
jmp loc_4181A7  +
cmp edx 5441h +
jnz loc_4181A7  +
and ebx 0FF000000h +
cmp ebx 4000000h +
jz loc_41D52F  +
ja loc_41A5F3  +
cmp ebx 1000000h +
jz loc_41D59A  +
jbe loc_41D456  +
cmp ebx 2000000h +
jz loc_41D54F  +
cmp ebx 3000000h +
jnz loc_41D45E  +
mov ds:dword_471740 6973202Ch +
mov ds:dword_471744 656C706Dh +
mov byte ptr ds:dword_471748 0 +
jmp loc_4181A7  +
and ebx 3 +
jz loc_4181A7  +
lea eax [esp+40h+var_18] +
add ebx 30h +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] offset dword_471740 +
mov [esp+40h+var_14] 307669h +
mov [esp+40h+var_18] 6261202Ch +
mov byte ptr [esp+40h+var_14+2] bl +
call strcpy  +
jmp loc_4181A7  +
movzx eax al +
cmp eax 5 +
jz loc_41B0BF  +
cmp eax 6 +
nop   +
jnz loc_41B069  +
mov ds:dword_471740 5241202Ch +
mov ds:dword_471744 53482043h +
mov byte ptr ds:dword_471748 0 +
and ebx 0F00h +
cmp ebx 300h +
jnz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418878  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3376202Ch +
mov ds:dword_471744[edx] 2D6F6E20h +
mov ds:dword_471748[edx] 6167656Ch +
mov ds:dword_47174C[edx] 732D7963h +
mov ds:dword_471750[edx] 61637379h +
mov ds:dword_471754[edx] 20736C6Ch +
mov ds:dword_471758[edx] 494241h +
jmp loc_4181A7  +
and eax 1Fh +
cmp eax 18h +
ja loc_4192A6  +
jmp ds:off_44B5A4[eax*4]  +
and eax 7Fh +
cmp eax 6Bh +
mov ds:dword_471740 7661202Ch +
ja loc_419283  +
jmp ds:off_44B608[eax*4]  +
test al 1 +
jnz loc_41B908  +
test bl 2 +
nop   +
lea esi [esi+0] +
jnz loc_41B8B6  +
test bl 10h +
jnz loc_41B853  +
and ebx 20h +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41895D  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6164202Ch +
mov ds:dword_471744[edx] 69206174h +
mov ds:dword_471748[edx] 314C206Eh +
mov byte ptr ds:dword_47174C[edx] 0 +
jmp loc_4181A7  +
and ebx 1 +
jz loc_4181A7  +
mov ebp 7961h +
mov ds:dword_471740 6F6E202Ch +
mov ds:dword_471744 6C656420h +
mov word ptr ds:dword_471748 bp +
mov byte ptr ds:dword_471748+2 0 +
jmp loc_4181A7  +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 583033h +
lea esi [esi+0] +
and ebx 0FFFFFF00h +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418A21  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 746Eh +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6E75203Ah +
mov ds:dword_471744[edx] 776F6E6Bh +
mov ds:dword_471748[edx] 7865206Eh +
mov ds:dword_47174C[edx] 20617274h +
mov ds:dword_471750[edx] 67616C66h +
mov ds:dword_471754[edx] 74696220h +
mov ds:dword_471758[edx] 6C612073h +
mov ds:dword_47175C[edx] 70206F73h +
mov ds:dword_471760[edx] 65736572h +
mov ds:word_471764[edx] cx +
mov ds:byte_471766[edx] 0 +
jmp loc_4181A7  +
mov edi 34h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 34783033h +
mov word ptr ds:dword_471760 di +
jmp loc_418A10  +
mov ebp 33h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 34783033h +
mov word ptr ds:dword_471760 bp +
jmp loc_418A10  +
mov eax 32h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 34783033h +
mov word ptr ds:dword_471760 ax +
jmp loc_418A10  +
mov eax 31h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 34783033h +
mov word ptr ds:dword_471760 ax +
jmp loc_418A10  +
mov eax 33h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 33783033h +
mov word ptr ds:dword_471760 ax +
jmp loc_418A10  +
mov eax 32h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 33783033h +
mov word ptr ds:dword_471760 ax +
jmp loc_418A10  +
mov eax 31h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 33783033h +
mov word ptr ds:dword_471760 ax +
jmp loc_418A10  +
mov eax 36h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 31783033h +
mov word ptr ds:dword_471760 ax +
jmp loc_418A10  +
mov edx 35h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 31783033h +
mov word ptr ds:dword_471760 dx +
jmp loc_418A10  +
mov ecx 34h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 31783033h +
mov word ptr ds:dword_471760 cx +
jmp loc_418A10  +
mov esi 33h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 31783033h +
mov word ptr ds:dword_471760 si +
jmp loc_418A10  +
mov edi 32h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 31783033h +
mov word ptr ds:dword_471760 di +
jmp loc_418A10  +
mov ebp 31h +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 31783033h +
mov word ptr ds:dword_471760 bp +
jmp loc_418A10  +
mov ds:dword_471758 3450534Dh +
mov ds:dword_47175C 31783033h +
mov ds:dword_471760 20317831h +
mov byte ptr ds:word_471764 0 +
jmp loc_418A10  +
mov eax 37h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 ax +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418CE6  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
and ebx 80h +
jz loc_4181A7  +
mov eax 3FFh +
sub eax edx +
mov [esp+40h+var_38] eax +
mov [esp+40h+var_3C] offset aLinkRelax +
mov [esp+40h+var_40] offset dword_471740 +
call strncat  +
jmp loc_4181A7  +
mov edx 36h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 dx +
jmp loc_418CE1  +
mov ecx 35h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 cx +
jmp loc_418CE1  +
mov esi 34h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 si +
jmp loc_418CE1  +
mov edi 33h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 di +
jmp loc_418CE1  +
mov ebp 32h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 bp +
jmp loc_418CE1  +
mov eax 31h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 ax +
jmp loc_418CE1  +
mov eax 30h +
mov ds:dword_471744 30313A72h +
mov word ptr ds:dword_471748 ax +
jmp loc_418CE1  +
mov ds:dword_471744 31353A72h +
mov byte ptr ds:dword_471748 0 +
jmp loc_418CE1  +
mov ds:dword_471744 35333A72h +
mov byte ptr ds:dword_471748 0 +
jmp loc_418CE1  +
mov ds:dword_471744 31333A72h +
mov byte ptr ds:dword_471748 0 +
jmp loc_418CE1  +
mov ds:dword_471744 35323A72h +
mov byte ptr ds:dword_471748 0 +
jmp loc_418CE1  +
mov ds:dword_471744 363A72h +
jmp loc_418CE1  +
mov ds:dword_471744 353A72h +
jmp loc_418CE1  +
mov ds:dword_471744 343A72h +
jmp loc_418CE1  +
mov ds:dword_471744 333A72h +
jmp loc_418CE1  +
mov ds:dword_471744 323A72h +
jmp loc_418CE1  +
mov ds:dword_471744 313A72h +
jmp loc_418CE1  +
mov eax 6533h +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6F2D6132h +
mov ds:dword_471748 68732D72h +
mov word ptr ds:dword_47174C ax +
mov byte ptr ds:dword_47174C+2 0 +
test bh 1 +
jnz loc_41C1C5  +
and bh 80h +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_418EFE  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6466202Ch +
mov ds:dword_471744[edx] 636970h +
jmp loc_4181A7  +
mov eax 34h +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6F2D6132h +
mov ds:dword_471748 68732D72h +
mov word ptr ds:dword_47174C ax +
jmp loc_418EE7  +
mov eax 75h +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6E2D6132h +
mov ds:dword_471748 7570666Fh +
mov ds:dword_47174C 2D726F2Dh +
mov ds:dword_471750 2D336873h +
mov ds:dword_471754 6D6D6F6Eh +
mov word ptr ds:dword_471758 ax +
jmp loc_418EE7  +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6E2D6132h +
mov ds:dword_471748 7570666Fh +
mov ds:dword_47174C 2D726F2Dh +
mov ds:dword_471750 2D346873h +
mov ds:dword_471754 6D6D6F6Eh +
mov ds:dword_471758 6F6E2D75h +
mov ds:dword_47175C 757066h +
jmp loc_418EE7  +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6F6E2D33h +
mov ds:dword_471748 756D6Dh +
jmp loc_418EE7  +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6E2D6132h +
mov ds:dword_471748 7570666Fh +
mov byte ptr ds:dword_47174C 0 +
jmp loc_418EE7  +
mov eax 75h +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6F6E2D34h +
mov ds:dword_471748 2D756D6Dh +
mov ds:dword_47174C 70666F6Eh +
mov word ptr ds:dword_471750 ax +
jmp loc_418EE7  +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6E2D6134h +
mov ds:dword_471748 7570666Fh +
mov byte ptr ds:dword_47174C 0 +
jmp loc_418EE7  +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 6F6E2D34h +
mov ds:dword_471748 757066h +
jmp loc_418EE7  +
mov edx 6132h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 dx +
mov byte ptr ds:dword_471744+2 0 +
jmp loc_418EE7  +
mov ecx 6134h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 cx +
mov byte ptr ds:dword_471744+2 0 +
jmp loc_418EE7  +
mov esi 6532h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 si +
mov byte ptr ds:dword_471744+2 0 +
jmp loc_418EE7  +
mov edi 35h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 di +
jmp loc_418EE7  +
mov ebp 34h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 bp +
jmp loc_418EE7  +
mov eax 6533h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 ax +
mov byte ptr ds:dword_471744+2 0 +
jmp loc_418EE7  +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 2D6C6134h +
mov ds:dword_471748 707364h +
jmp loc_418EE7  +
mov eax 70h +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 73642D33h +
mov word ptr ds:dword_471748 ax +
jmp loc_418EE7  +
mov ds:dword_471740 6873202Ch +
mov ds:dword_471744 7073642Dh +
mov byte ptr ds:dword_471748 0 +
jmp loc_418EE7  +
mov eax 33h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 ax +
jmp loc_418EE7  +
mov eax 32h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 ax +
jmp loc_418EE7  +
mov eax 31h +
mov ds:dword_471740 6873202Ch +
mov word ptr ds:dword_471744 ax +
jmp loc_418EE7  +
mov esi 6Eh +
mov ds:dword_471758 6E75203Ah +
mov ds:dword_47175C 776F6E6Bh +
mov word ptr ds:dword_471760 si +
jmp loc_418A10  +
mov ds:dword_471744 753C3A72h +
mov ds:dword_471748 6F6E6B6Eh +
mov ds:dword_47174C 3E6E77h +
jmp loc_418CE1  +
mov eax 41h +
mov ds:dword_471740 6E75202Ch +
mov ds:dword_471744 776F6E6Bh +
mov ds:dword_471748 5349206Eh +
mov word ptr ds:dword_47174C ax +
jmp loc_418EE7  +
cmp edx 8 +
jz loc_419402  +
cmp edx 0Ah +
jz loc_419402  +
cmp edx 4 +
jnz loc_4181A7  +
and eax 3818000h +
cmp eax 1000000h +
jz loc_41D5DB  +
cmp eax 810000h +
jz loc_41D68B  +
cmp eax 2000000h +
jz loc_41D6A4  +
mov eax ebx +
and eax 0Fh +
sub eax 1 +
cmp eax 6 +
ja loc_41AAB7  +
mov edx ds:off_44DB48[eax*4] +
mov esi ds:off_44DB20[eax*4] +
mov eax 2061h +
mov [esp+40h+var_40] 47174Ah +
mov ds:dword_471740 6663202Ch +
mov [esp+40h+var_3C] edx +
mov ds:dword_471744 7369202Ch +
mov word ptr ds:dword_471748 ax +
call sub_438D70  +
test esi esi +
jz loc_419373  +
mov [esp+40h+var_3C] esi +
mov [esp+40h+var_40] eax +
call strcpy  +
test bl 40h +
jnz loc_41C6C1  +
and ebx 30h +
cmp ebx 10h +
jz loc_41CBA5  +
jbe loc_41C4D1  +
cmp ebx 20h +
mov esi offset aEmac +
jz loc_4193A6  +
cmp ebx 30h +
mov esi offset aEmac_b +
jnz loc_41C4D9  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4193AB  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 202Ch +
sub edx offset dword_471740 +
mov word ptr ds:dword_471740[edx] ax +
add edx 471742h +
mov [esp+40h+var_3C] esi +
mov [esp+40h+var_40] edx +
call strcpy  +
jmp loc_4181A7  +
test bl 1 +
jnz loc_41B5EF  +
test bl 2 +
nop   +
jnz loc_41C010  +
test bl 4 +
jnz loc_41BFB5  +
test bl 10h +
jnz loc_41BF4F  +
test bl 20h +
jnz loc_41BEF4  +
test bl 80h +
jnz loc_41BE98  +
test bh 1 +
jnz loc_41BE3C  +
test bh 4 +
jnz loc_41BDDE  +
test bh 2 +
nop   +
jnz loc_41BD83  +
mov eax ebx +
and eax 0FF0000h +
cmp eax 8B0000h +
jz loc_41D8E0  +
jbe loc_41A636  +
cmp eax 980000h +
mov edx offset dword_471740 +
jz loc_4197BD  +
ja loc_41C4E3  +
cmp eax 8D0000h +
jz loc_419767  +
nop   +
jbe loc_41D768  +
cmp eax 8E0000h +
jz loc_419711  +
cmp eax 910000h +
jnz loc_41C934  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4194AC  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3435202Ch +
mov word ptr ds:dword_471744[edx] 3030h +
mov byte ptr [edx+471746h] 0 +
mov eax ebx +
and eax 0F000h +
cmp eax 2000h +
jz loc_41CA62  +
ja loc_41A9F8  +
test eax eax +
jz loc_419570  +
cmp eax 1000h +
mov edx offset dword_471740 +
jnz loc_41CAB6  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419526  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 32h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 336F202Ch +
mov word ptr ds:dword_471744[edx] ax +
test ebx 8000000h +
jnz loc_41B594  +
test ebx 4000000h +
jnz loc_41BD2A  +
test ebx 2000000h +
jnz loc_41BCCE  +
and ebx 0F0000000h +
mov edx offset dword_471740 +
cmp ebx 50000000h +
jz loc_419623  +
ja loc_41A4B9  +
cmp ebx 20000000h +
jz loc_4196C4  +
ja loc_41C794  +
test ebx ebx +
jz loc_419677  +
cmp ebx 10000000h +
lea esi [esi+0] +
jnz loc_41D623  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4195D6  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 327370h +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419623  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 32337370h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419677  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 317370h +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4196C4  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 337370h +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419711  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 636F202Ch +
mov ds:dword_471744[edx] 6E6F6574h +
mov word ptr ds:dword_471748[edx] 33h +
jmp loc_4194FA  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419767  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 636F202Ch +
mov ds:dword_471744[edx] 6E6F6574h +
mov word ptr ds:dword_471748[edx] 32h +
jmp loc_4194FA  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_4197BD  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3535202Ch +
mov word ptr ds:dword_471744[edx] 3030h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
and ebx 0F0000000h +
cmp ebx 20000000h +
jz loc_41CCEB  +
jbe loc_41AAF0  +
cmp ebx 40000000h +
jz loc_41CCC0  +
cmp ebx 60000000h +
jz loc_41CC95  +
cmp ebx 30000000h +
jz loc_41CC75  +
mov ds:dword_471740 6E75202Ch +
mov ds:dword_471744 776F6E6Bh +
mov ds:dword_471748 3876206Eh +
mov ds:dword_47174C 61203035h +
mov ds:dword_471750 69686372h +
mov ds:dword_471754 74636574h +
mov ds:dword_471758 20657275h +
mov ds:dword_47175C 69726176h +
mov ds:dword_471760 746E61h +
jmp loc_4181A7  +
test al 10h +
jz loc_41A42F  +
mov ds:dword_471740 3436202Ch +
mov ds:dword_471744 7469622Dh +
mov byte ptr ds:dword_471748 0 +
test bl 20h +
jnz loc_41BC02  +
test bl 80h +
jnz loc_41B484  +
test bl 40h +
jnz loc_41C713  +
test bh 1 +
jnz loc_41B52F  +
cmp ds:byte_471D67 0Dh +
jnz loc_4181A7  +
test bl 4 +
jnz loc_41D4C0  +
and ebx 3 +
cmp ebx 2 +
jz loc_41D716  +
cmp ebx 3 +
jz loc_41D6C4  +
cmp ebx 1 +
jnz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419930  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6177202Ch +
mov ds:dword_471744[edx] 6E696E72h +
mov word ptr ds:dword_471748[edx] 67h +
jmp loc_4181A7  +
movzx eax ax +
cmp eax 210h +
jz loc_41C2E3  +
cmp eax 214h +
jz loc_41C489  +
cmp eax 20Bh +
jnz loc_4199CF  +
mov eax 30h +
mov ds:dword_471740 4150202Ch +
mov ds:dword_471744 5349522Dh +
mov ds:dword_471748 2E312043h +
mov word ptr ds:dword_47174C ax +
test ebx 10000h +
jnz loc_41C167  +
test ebx 20000h +
jnz loc_41C113  +
test ebx 40000h +
jnz loc_41C0BF  +
test ebx 80000h +
jnz loc_41C064  +
test ebx 100000h +
jnz loc_41C219  +
and ebx 400000h +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419A1C  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 7061h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 616C202Ch +
mov ds:dword_471744[edx] 7773797Ah +
mov word ptr ds:dword_471748[edx] cx +
mov byte ptr [edx+47174Ah] 0 +
jmp loc_4181A7  +
test al 1 +
jnz loc_41B7DA  +
test al 2 +
jnz loc_41C77B  +
and ebx 4 +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419A9E  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 36h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7267202Ch +
mov word ptr ds:dword_471744[edx] cx +
jmp loc_4181A7  +
cmp edx 5Bh +
jnz loc_4181A7  +
test bl 10h +
jnz loc_41C277  +
and ebx 20h +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_419B0D  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6E67202Ch +
mov ds:dword_471744[edx] 61632075h +
mov ds:dword_471748[edx] 6E696C6Ch +
mov ds:dword_47174C[edx] 6F632067h +
mov ds:dword_471750[edx] 6E65766Eh +
mov ds:dword_471754[edx] 6E6F6974h +
mov byte ptr ds:dword_471758[edx] 0 +
jmp loc_4181A7  +
and ebx 30000000h +
jnz loc_4181A7  +
mov edi 7232h +
mov ds:dword_471740 336D202Ch +
mov word ptr ds:dword_471744 di +
mov byte ptr ds:dword_471744+2 0 +
jmp loc_4181A7  +
and ebx 1 +
jz loc_4181A7  +
mov ds:dword_471740 6572202Ch +
mov ds:dword_471744 61636F6Ch +
mov ds:dword_471748 6C626174h +
mov ds:dword_47174C 6F6D2065h +
mov ds:dword_471750 656C7564h +
mov byte ptr ds:dword_471754 0 +
jmp loc_4181A7  +
mov ebp eax +
and eax 0F0000000h +
mov [esp+40h+var_28] eax +
mov eax ebx +
and ebp 0F0h +
and eax 0Fh +
mov ecx 100h +
mov [esp+40h+var_24] eax +
mov edi esi +
xor eax eax +
cmp ebp 20h +
stos   +
jz loc_41A486  +
jbe loc_41A477  +
cmp ebp 40h +
jz loc_41A486  +
cmp ebp 50h +
jz loc_41A486  +
cmp ebp 30h +
jz loc_41A486  +
mov [esp+40h+var_38] offset aUnrecognizedAb +
mov [esp+40h+var_3C] 400h +
mov [esp+40h+var_40] offset dword_471740 +
call sub_402590  +
mov esi eax +
cmp [esp+40h+var_24] 2 +
ja loc_41A44F  +
mov eax [esp+40h+var_24] +
mov [esp+40h+var_38] offset aS_20 +
mov eax ds:off_461EB8[eax*4] +
mov [esp+40h+var_34] eax +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
test ebp ebp +
jz loc_41BC7B  +
cmp [esp+40h+var_28] 20000000h +
jz loc_41A76F  +
jbe loc_41A761  +
mov eax [esp+40h+var_28] +
cmp eax 30000000h +
jz loc_41A76F  +
cmp eax 40000000h +
jz loc_41A76F  +
mov eax 400h +
sub eax esi +
add esi offset dword_471740 +
mov [esp+40h+var_38] offset aUnrecognizedAr +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] esi +
call sub_402590  +
jmp loc_4181A7  +
and eax 0F0000000h +
cmp eax 0F0000000h +
jz loc_41D2E6  +
test ebx 100000h +
jnz loc_41B9D8  +
test bl 3 +
jz loc_41BB93  +
test bl 60h +
jz loc_41BB21  +
test bh 3 +
jz loc_41BAB9  +
test bh 0Ch +
jz loc_41BA4A  +
test bh 30h +
jz loc_41B2C7  +
test bh 0C0h +
jz loc_41B25F  +
movzx ebx bx +
test ebx ebx +
jnz loc_419DB1  +
jmp loc_4181A7  +
cmp eax 1000h +
jz loc_41A3C8  +
nop   +
lea esi [esi+0] +
jbe loc_419FE7  +
cmp eax 4000h +
jz loc_41A301  +
cmp eax 8000h +
jz loc_41A2A1  +
cmp eax 2000h +
jz loc_41A368  +
not eax  +
and ebx eax +
jz loc_4181A7  +
mov eax ebx +
neg eax  +
and eax ebx +
cmp eax 200h +
jz loc_41A241  +
ja loc_419D70  +
cmp eax 20h +
mov ecx offset dword_471740 +
jz loc_419E66  +
ja loc_419F15  +
cmp eax 1 +
jz loc_419EC6  +
cmp eax 2 +
jnz loc_419DA7  +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_419DE6  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6973202Ch +
mov ds:dword_471744[ecx] 656C676Eh +
mov ebp 5550h +
mov ds:dword_471748[ecx] 65727020h +
mov ds:dword_47174C[ecx] 69736963h +
mov ds:dword_471750[ecx] 46206E6Fh +
mov word ptr ds:dword_471754[ecx] bp +
mov byte ptr [ecx+471756h] 0 +
jmp loc_419DA7  +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_419E66  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6572202Ch +
mov ds:dword_471744[ecx] 646F6D67h +
mov ds:dword_471748[ecx] 32323A65h +
mov byte ptr ds:dword_47174C[ecx] 0 +
jmp loc_419DA7  +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_419EC6  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6F64202Ch +
mov ds:dword_471744[ecx] 656C6275h +
jmp loc_419E30  +
cmp eax 40h +
jz loc_419F87  +
cmp eax 100h +
jnz loc_419DA7  +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_419F25  +
mov esi edx +
mov edi 6465h +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3472202Ch +
mov ds:dword_471744[ecx] 78696620h +
mov word ptr ds:dword_471748[ecx] di +
mov byte ptr [ecx+47174Ah] 0 +
jmp loc_419DA7  +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_419F87  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6572202Ch +
mov ds:dword_471744[ecx] 646F6D67h +
mov ds:dword_471748[ecx] 33323A65h +
mov byte ptr ds:dword_47174C[ecx] 0 +
jmp loc_419DA7  +
cmp eax 400h +
mov ecx offset dword_471740 +
jz loc_41A060  +
cmp eax 800h +
jnz loc_419DA7  +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_419FFE  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
mov edx 6565h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3372202Ch +
mov ds:dword_471744[ecx] 72662030h +
mov word ptr ds:dword_471748[ecx] dx +
mov byte ptr [ecx+47174Ah] 0 +
jmp loc_419DA7  +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_41A060  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3372202Ch +
mov ds:dword_471744[ecx] 69662030h +
mov ds:dword_471748[ecx] 646578h +
jmp loc_419DA7  +
and eax 0Ch +
cmp eax 8 +
jz loc_41C4B7  +
cmp eax 0Ch +
jz loc_41C37E  +
cmp eax 4 +
jnz loc_41A0EF  +
mov eax 30h +
mov ds:dword_471740 3147202Ch +
mov word ptr ds:dword_471744 ax +
and ebx 1 +
jz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A0FD  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3436202Ch +
mov ds:dword_471744[edx] 7469622Dh +
mov ds:dword_471748[edx] 756F6420h +
mov ds:dword_47174C[edx] 73656C62h +
mov byte ptr ds:dword_471750[edx] 0 +
jmp loc_4181A7  +
and ebx 1 +
jz loc_4181A7  +
mov eax 7372h +
mov ds:dword_471740 6968202Ch +
mov ds:dword_471744 70676867h +
mov word ptr ds:dword_471748 ax +
mov byte ptr ds:dword_471748+2 0 +
jmp loc_4181A7  +
test ah 1 +
jnz loc_41B78B  +
test bh 2 +
jnz loc_41B723  +
test bh 8 +
jnz loc_41B6BD  +
test bh 4 +
nop   +
jnz loc_41B66B  +
test ebx 800000h +
jnz loc_41B42B  +
and ebx 3 +
jz loc_41B3D7  +
cmp ebx 1 +
jz loc_41D292  +
cmp ebx 2 +
jnz loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A1F2  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 6Fh +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6D72202Ch +
mov word ptr ds:dword_471744[edx] ax +
jmp loc_4181A7  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_41A246  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
mov esi 65h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3472202Ch +
mov ds:dword_471744[ecx] 65726620h +
mov word ptr ds:dword_471748[ecx] si +
jmp loc_419DA7  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_41A2A6  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
mov edx 65h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3272202Ch +
mov ds:dword_471744[ecx] 65726620h +
mov word ptr ds:dword_471748[ecx] dx +
jmp loc_419DA7  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_41A306  +
mov esi edx +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
mov esi 6465h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3272202Ch +
mov ds:dword_471744[ecx] 78696620h +
mov word ptr ds:dword_471748[ecx] si +
mov byte ptr [ecx+47174Ah] 0 +
jmp loc_419DA7  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_41A36D  +
mov esi edx +
mov edi 65h +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3572202Ch +
mov ds:dword_471744[ecx] 65726620h +
mov word ptr ds:dword_471748[ecx] di +
jmp loc_419DA7  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea edx [esi-1010101h] +
not esi  +
and edx esi +
and edx 80808080h +
jz loc_41A3CD  +
mov esi edx +
mov ebp 6465h +
shr esi 10h +
test edx 8080h +
cmovz edx esi +
lea esi [ecx+2] +
cmovz ecx esi +
add dl dl +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 3572202Ch +
mov ds:dword_471744[ecx] 78696620h +
mov word ptr ds:dword_471748[ecx] bp +
mov byte ptr [ecx+47174Ah] 0 +
jmp loc_419DA7  +
mov ds:dword_471740 3233202Ch +
mov ds:dword_471744 7469622Dh +
mov byte ptr ds:dword_471748 0 +
jmp loc_4198D3  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aUnrecognizedEl +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_419CB1  +
test ebp ebp +
jz loc_41A486  +
cmp ebp 10h +
nop   +
jnz loc_419C56  +
mov eax ebp +
shr eax 4 +
mov eax ds:off_461EF0[eax*4] +
mov [esp+40h+var_38] offset aS_20 +
mov [esp+40h+var_3C] 400h +
mov [esp+40h+var_40] offset dword_471740 +
mov [esp+40h+var_34] eax +
call sub_402590  +
mov esi eax +
jmp loc_419C74  +
cmp ebx 80000000h +
jz loc_41A53F  +
ja loc_41C842  +
cmp ebx 60000000h +
jz loc_41A59F  +
cmp ebx 70000000h +
jnz loc_41D623  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A4DF  +
mov ecx eax +
mov edi 3272h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 32337370h +
mov word ptr ds:dword_471748[edx] di +
mov byte ptr [edx+47174Ah] 0 +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A53F  +
mov ecx eax +
mov ebx 3272h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 34367370h +
mov word ptr ds:dword_471748[edx] bx +
mov byte ptr [edx+47174Ah] 0 +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A59F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 34367370h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_4181A7  +
cmp ebx 6000000h +
jz loc_41D568  +
jbe loc_41D477  +
cmp ebx 7000000h +
jz loc_41D581  +
cmp ebx 8000000h +
jnz loc_41D45E  +
mov ds:dword_471740 7266202Ch +
mov ds:dword_471744 303534h +
jmp loc_4181A7  +
cmp eax 830000h +
jz loc_41D888  +
jbe loc_41C916  +
cmp eax 870000h +
mov edx offset dword_471740 +
jz loc_41A6BB  +
jbe loc_41D7BF  +
cmp eax 880000h +
jz loc_41A70E  +
cmp eax 8A0000h +
jnz loc_41C934  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A66F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6273202Ch +
mov word ptr ds:dword_471744[edx] 31h +
jmp loc_4194FA  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A6BB  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3134202Ch +
mov word ptr ds:dword_471744[edx] 3032h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A70E  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3134202Ch +
mov word ptr ds:dword_471744[edx] 3131h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
cmp [esp+40h+var_28] 10000000h +
jnz loc_419CE7  +
mov ebp [esp+40h+var_28] +
mov edi 400h +
mov [esp+40h+var_38] offset aS_20 +
mov eax ebp +
shr eax 1Ch +
mov eax ds:off_461E6C[eax*4] +
mov [esp+40h+var_34] eax +
mov eax edi +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
cmp ebp 10000000h +
jz loc_41D3A6  +
test bh 1 +
jz loc_41A7E2  +
cmp [esp+40h+var_24] 1 +
jbe loc_41D9F6  +
mov [esp+40h+var_38] offset aEx9 +
lea eax dword_471740[esi] +
sub edi esi +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
test ebx 100000h +
jnz loc_41D5B3  +
test bh 20h +
jnz loc_41D5FB  +
test bh 40h +
jz loc_41A82A  +
cmp [esp+40h+var_24] 1 +
jbe loc_41D3CD  +
mov [esp+40h+var_38] offset aIfc +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
test bh 2 +
jnz loc_41D42E  +
test bh 4 +
jnz loc_41D406  +
xor eax eax +
test bh 8 +
jnz loc_41D3DA  +
test ebx 80000h +
jnz loc_41C626  +
test ebx 1000000h +
jnz loc_41C651  +
test eax eax +
jnz loc_41C674  +
test bh 10h +
jnz loc_41D37E  +
test bh 80h +
jnz loc_41D356  +
test ebx 10000h +
jnz loc_41D498  +
test ebx 20000h +
jz loc_41A8BB  +
cmp [esp+40h+var_24] 1 +
jbe loc_41D81D  +
mov [esp+40h+var_38] offset aSaturation +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
test ebx 40000h +
jnz loc_41D32E  +
and ebx 200000h +
jz loc_4181A7  +
mov eax 400h +
sub eax esi +
add esi offset dword_471740 +
mov [esp+40h+var_38] offset aL2c +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] esi +
call sub_402590  +
jmp loc_4181A7  +
cmp eax 30000h +
mov edx offset dword_471740 +
jz loc_41A984  +
cmp eax 60000h +
jnz loc_41C999  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A910  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 5649202Ch +
mov ebp 726Fh +
mov ds:dword_471744[edx] 63203243h +
mov ds:dword_471748[edx] 6F72706Fh +
mov ds:dword_47174C[edx] 73736563h +
mov word ptr ds:dword_471750[edx] bp +
mov byte ptr [edx+471752h] 0 +
jmp loc_418588  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41A984  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 726Fh +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 4D46202Ch +
mov ds:dword_471744[edx] 63205841h +
mov ds:dword_471748[edx] 6F72706Fh +
mov ds:dword_47174C[edx] 73736563h +
mov word ptr ds:dword_471750[edx] ax +
mov byte ptr [edx+471752h] 0 +
jmp loc_418588  +
cmp eax 3000h +
mov edx offset dword_471740 +
jz loc_41AA63  +
cmp eax 4000h +
jnz loc_41CAB6  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41AA0F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6165202Ch +
mov ds:dword_471744[edx] 34366962h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_419570  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41AA63  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6165202Ch +
mov ds:dword_471744[edx] 32336962h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_419570  +
mov edx 2061h +
mov ds:dword_471740 6663202Ch +
mov ds:dword_471744 7369202Ch +
mov word ptr ds:dword_471748 dx +
mov ds:dword_471748+2 6E6B6E75h +
mov ds:dword_47174C+2 6E776Fh +
jmp loc_419373  +
test ebx ebx +
jz loc_41D270  +
cmp ebx 10000000h +
jnz loc_41984C  +
mov ds:dword_471740 3876202Ch +
mov ds:dword_471744 653035h +
jmp loc_4181A7  +
test eax eax +
mov edx offset dword_471740 +
jz loc_41AC41  +
cmp eax 1000000h +
jnz loc_418233  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41AB35  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
test ebx ebx +
mov ds:dword_471740[edx] 6556202Ch +
mov ds:dword_471744[edx] 6F697372h +
mov ds:dword_471748[edx] 4520316Eh +
mov ds:dword_47174C[edx] 494241h +
jz loc_4181A7  +
xor edx edx +
jmp loc_41ABAD  +
mov edx 1 +
test ebx ebx +
jz loc_41B029  +
mov eax ebx +
neg eax  +
and eax ebx +
mov ecx eax +
not ecx  +
and ebx ecx +
cmp eax 4 +
jnz loc_41ABA0  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41ABC3  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov esi 7365h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6F73202Ch +
mov ds:dword_471744[ecx] 64657472h +
mov ds:dword_471748[ecx] 6D797320h +
mov ds:dword_47174C[ecx] 206C6F62h +
mov ds:dword_471750[ecx] 6C626174h +
mov word ptr ds:dword_471754[ecx] si +
mov byte ptr [ecx+471756h] 0 +
jmp loc_41ABA5  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41AC41  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 4942h +
sub edx offset dword_471740 +
test ebx ebx +
mov ds:dword_471740[edx] 4E47202Ch +
mov ds:dword_471744[edx] 41452055h +
mov word ptr ds:dword_471748[edx] ax +
mov byte ptr [edx+47174Ah] 0 +
jz loc_4181A7  +
xor edx edx +
jmp loc_41AD3F  +
cmp eax 200h +
jz loc_41AFC6  +
ja loc_41B0DF  +
cmp eax 80h +
jz loc_41AF5C  +
cmp eax 100h +
jnz loc_41D309  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41ACD2  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 4942h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 7375202Ch +
mov ds:dword_471744[ecx] 6F207365h +
mov ds:dword_471748[ecx] 4120646Ch +
mov word ptr ds:dword_47174C[ecx] ax +
mov byte ptr [ecx+47174Eh] 0 +
test ebx ebx +
jz loc_41B029  +
mov eax ebx +
neg eax  +
and eax ebx +
mov ecx eax +
not ecx  +
and ebx ecx +
cmp eax 40h +
mov ecx offset dword_471740 +
jz loc_41AE06  +
ja loc_41ACAB  +
cmp eax 8 +
jz loc_41AEF2  +
nop   +
lea esi [esi+0] +
jbe loc_41CB1E  +
cmp eax 10h +
jz loc_41AE85  +
cmp eax 20h +
jnz loc_41D309  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41AD88  +
mov esi eax +
mov edi 746Eh +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6F70202Ch +
mov ds:dword_471744[ecx] 69746973h +
mov ds:dword_471748[ecx] 69206E6Fh +
mov ds:dword_47174C[ecx] 7065646Eh +
mov ds:dword_471750[ecx] 65646E65h +
mov word ptr ds:dword_471754[ecx] di +
mov byte ptr [ecx+471756h] 0 +
jmp loc_41AD37  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41AE06  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 2038202Ch +
mov ds:dword_471744[ecx] 20746962h +
mov ds:dword_471748[ecx] 75727473h +
mov ds:dword_47174C[ecx] 72757463h +
mov ds:dword_471750[ecx] 6C612065h +
mov ds:dword_471754[ecx] 6D6E6769h +
mov ds:dword_471758[ecx] 746E65h +
jmp loc_41AD37  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41AE85  +
mov esi eax +
mov ebp 74h +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 7375202Ch +
mov ds:dword_471744[ecx] 41207365h +
mov ds:dword_471748[ecx] 2F534350h +
mov ds:dword_47174C[ecx] 616F6C66h +
mov word ptr ds:dword_471750[ecx] bp +
jmp loc_41AD37  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41AEF2  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 3632h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 7375202Ch +
mov ds:dword_471744[ecx] 41207365h +
mov ds:dword_471748[ecx] 2F534350h +
mov word ptr ds:dword_47174C[ecx] ax +
mov byte ptr [ecx+47174Eh] 0 +
jmp loc_41AD37  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41AF5C  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov esi 4942h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 7375202Ch +
mov ds:dword_471744[ecx] 6E207365h +
mov ds:dword_471748[ecx] 41207765h +
mov word ptr ds:dword_47174C[ecx] si +
mov byte ptr [ecx+47174Eh] 0 +
jmp loc_41AD37  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41AFC6  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 50h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6F73202Ch +
mov ds:dword_471744[ecx] 61777466h +
mov ds:dword_471748[ecx] 46206572h +
mov word ptr ds:dword_47174C[ecx] ax +
jmp loc_41AD37  +
test edx edx +
jnz loc_4182B2  +
jmp loc_4181A7  +
test eax eax +
jz loc_41CD2B  +
cmp eax 1000000h +
jnz loc_4184B1  +
mov ds:dword_471740 654D202Ch +
mov ds:dword_471744 32432050h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4184F4  +
mov eax 32h +
mov ds:dword_471740 6E75202Ch +
mov ds:dword_471744 6F636572h +
mov ds:dword_471748 7A696E67h +
mov ds:dword_47174C 66206465h +
mov ds:dword_471750 2067616Ch +
mov ds:dword_471754 20726F66h +
mov ds:dword_471758 76435241h +
mov word ptr ds:dword_47175C ax +
jmp loc_418861  +
mov ds:dword_471740 5241202Ch +
mov ds:dword_471744 4D452043h +
mov byte ptr ds:dword_471748 0 +
jmp loc_418861  +
cmp eax 400h +
jz loc_41B154  +
cmp eax 800h +
jnz loc_41D309  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41B0F1  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 50h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 614D202Ch +
mov ds:dword_471744[ecx] 69726576h +
mov ds:dword_471748[ecx] 46206B63h +
mov word ptr ds:dword_47174C[ecx] ax +
jmp loc_41AD37  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41B154  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 50h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 4656202Ch +
mov word ptr ds:dword_471744[ecx] ax +
jmp loc_41AD37  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41B1A8  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov [esp+40h+var_38] edx +
mov [esp+40h+var_3C] offset aConfigurationI +
mov [esp+40h+var_40] ecx +
call sprintf  +
jmp loc_41859C  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B1F4  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7542202Ch +
mov ds:dword_471744[edx] 20746C69h +
mov ds:dword_471748[edx] 20726F66h +
mov ds:dword_47174C[edx] 7262694Ch +
mov ds:dword_471750[edx] 797261h +
jmp loc_418591  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B264  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 64h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3272202Ch +
mov ds:dword_471744[edx] 746F6E20h +
mov ds:dword_471748[edx] 65737520h +
mov word ptr ds:dword_47174C[edx] ax +
jmp loc_419D62  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B2CC  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 64h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3572202Ch +
mov ds:dword_471744[edx] 746F6E20h +
mov ds:dword_471748[edx] 65737520h +
mov word ptr ds:dword_47174C[edx] ax +
jmp loc_419D59  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B334  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 64h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6970202Ch +
mov word ptr ds:dword_471744[edx] ax +
jmp loc_41810E  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B388  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 70h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7364202Ch +
mov word ptr ds:dword_471744[edx] ax +
jmp loc_418105  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B3DC  +
mov ecx eax +
mov ebx 6Fh +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7374202Ch +
mov word ptr ds:dword_471744[edx] bx +
jmp loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B430  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 656C202Ch +
mov ds:dword_471744[edx] 61746164h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_41A1D2  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B489  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 7067h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6F6E202Ch +
mov ds:dword_471744[edx] 6E756620h +
mov ds:dword_471748[edx] 6F697463h +
mov ds:dword_47174C[edx] 6564206Eh +
mov ds:dword_471750[edx] 69726373h +
mov ds:dword_471754[edx] 726F7470h +
mov ds:dword_471758[edx] 63202C73h +
mov ds:dword_47175C[edx] 74736E6Fh +
mov ds:dword_471760[edx] 20746E61h +
mov ds:word_471764[edx] ax +
mov ds:byte_471766[edx] 0 +
jmp loc_4198EE  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B534  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 6574h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6261202Ch +
mov ds:dword_471744[edx] 756C6F73h +
mov word ptr ds:dword_471748[edx] ax +
mov byte ptr [edx+47174Ah] 0 +
jmp loc_4198F7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B599  +
mov ecx eax +
mov ebp 786Dh +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 646D202Ch +
mov word ptr ds:dword_471744[edx] bp +
mov byte ptr [edx+471746h] 0 +
jmp loc_41957C  +
mov ds:dword_471740 6F6E202Ch +
mov ds:dword_471744 726F6572h +
mov ds:dword_471748 726564h +
jmp loc_41940B  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B617  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 5852202Ch +
mov ds:dword_471744[edx] 49424120h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_418117  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B670  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6168202Ch +
mov ds:dword_471744[edx] 31726Ch +
jmp loc_41A1C6  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B6C2  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6C75202Ch +
mov ds:dword_471744[edx] 73617274h +
mov ds:dword_471748[edx] 63726170h +
mov ds:dword_47174C[edx] 494949h +
jmp loc_41A1BB  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B728  +
mov ecx eax +
mov esi 49h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6C75202Ch +
mov ds:dword_471744[edx] 73617274h +
mov ds:dword_471748[edx] 63726170h +
mov word ptr ds:dword_47174C[edx] si +
jmp loc_41A1B2  +
mov edi 2Bh +
mov ds:dword_471740 3876202Ch +
mov word ptr ds:dword_471744 di +
jmp loc_41A1A9  +
mov ds:dword_471740 3436202Ch +
mov ds:dword_471744 7469622Dh +
mov ds:dword_471748 756F6420h +
mov ds:dword_47174C 73656C62h +
mov byte ptr ds:dword_471750 0 +
jmp loc_4180FC  +
mov esi 6Dh +
mov ds:dword_471740 636D202Ch +
mov word ptr ds:dword_471744 si +
jmp loc_419A90  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B7FA  +
mov ecx eax +
mov ebp 74h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 2D44202Ch +
mov ds:dword_471744[edx] 616F6C46h +
mov word ptr ds:dword_471748[edx] bp +
jmp loc_41871F  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B858  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6F63202Ch +
mov ds:dword_471744[edx] 69206564h +
mov ds:dword_471748[edx] 314C206Eh +
mov byte ptr ds:dword_47174C[edx] 0 +
jmp loc_41894F  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B8BB  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 4446202Ch +
mov ds:dword_471744[edx] 434950h +
jmp loc_418946  +
mov eax 43h +
mov ds:dword_471740 4950202Ch +
mov word ptr ds:dword_471744 ax +
jmp loc_418938  +
mov ds:dword_471740 6572202Ch +
and ebx 0FFFFFEh +
mov ds:dword_471744 61636F6Ch +
mov ds:dword_471748 6C626174h +
mov ds:dword_47174C 78652065h +
mov ds:dword_471750 74756365h +
mov ds:dword_471754 656C6261h +
mov byte ptr ds:dword_471758 0 +
jmp loc_418201  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B975  +
mov ecx eax +
mov esi 65h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6572202Ch +
mov ds:dword_471744[edx] 61636F6Ch +
mov ds:dword_471748[edx] 6C626174h +
mov word ptr ds:dword_47174C[edx] si +
jmp loc_4183D5  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41B9DD  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 65h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3356202Ch +
mov ds:dword_471744[edx] 63726120h +
mov ds:dword_471748[edx] 65746968h +
mov ds:dword_47174C[edx] 72757463h +
mov word ptr ds:dword_471750[edx] cx +
jmp loc_419D2C  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BA4F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 6465h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3372202Ch +
mov ds:dword_471744[edx] 6F6E2030h +
mov ds:dword_471748[edx] 73752074h +
mov word ptr ds:dword_47174C[edx] ax +
mov byte ptr [edx+47174Eh] 0 +
jmp loc_419D50  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BABE  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 64h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3472202Ch +
mov ds:dword_471744[edx] 746F6E20h +
mov ds:dword_471748[edx] 65737520h +
mov word ptr ds:dword_47174C[edx] ax +
jmp loc_419D47  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BB26  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 4Eh +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6572202Ch +
mov ds:dword_471744[edx] 646F6D67h +
mov ds:dword_471748[edx] 43203A65h +
mov ds:dword_47174C[edx] 4F4D4D4Fh +
mov word ptr ds:dword_471750[edx] ax +
jmp loc_419D3E  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BB98  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 6465h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 5046202Ch +
mov ds:dword_471744[edx] 6F6E2055h +
mov ds:dword_471748[edx] 73752074h +
mov word ptr ds:dword_47174C[edx] ax +
mov byte ptr [edx+47174Eh] 0 +
jmp loc_419D35  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BC07  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 6C65h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6572202Ch +
mov ds:dword_471744[edx] 65637564h +
mov ds:dword_471748[edx] 70662064h +
mov ds:dword_47174C[edx] 646F6D20h +
mov word ptr ds:dword_471750[edx] ax +
mov byte ptr [edx+471752h] 0 +
jmp loc_4198DC  +
mov ebx 400h +
mov eax ebx +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aAndesStarV1_0N +
mov [esp+40h+var_40] eax +
call sub_402590  +
cmp [esp+40h+var_28] 10000000h +
jnz loc_4181A7  +
add eax esi +
sub ebx eax +
add eax offset dword_471740 +
mov [esp+40h+var_38] offset a16b +
mov [esp+40h+var_3C] ebx +
mov [esp+40h+var_40] eax +
call sub_402590  +
jmp loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BCD3  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 6D6F7263h +
mov ds:dword_471748[edx] 737069h +
jmp loc_419594  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BD2F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 36317370h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_419588  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BD88  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 3436h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7066202Ch +
mov word ptr ds:dword_471744[edx] ax +
mov byte ptr [edx+471746h] 0 +
jmp loc_419456  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BDE3  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 38h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 616E202Ch +
mov ds:dword_471744[edx] 3030326Eh +
mov word ptr ds:dword_471748[edx] ax +
jmp loc_41944C  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BE41  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3233202Ch +
mov ds:dword_471744[edx] 6D746962h +
mov ds:dword_471748[edx] 65646Fh +
jmp loc_419443  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BE9D  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 646F202Ch +
mov ds:dword_471744[edx] 6966206Bh +
mov ds:dword_471748[edx] 747372h +
jmp loc_41943A  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BEF9  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 3269h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6261202Ch +
mov word ptr ds:dword_471744[edx] ax +
mov byte ptr [edx+471746h] 0 +
jmp loc_419431  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BF54  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6775202Ch +
mov ds:dword_471744[edx] 725F6E65h +
mov ds:dword_471748[edx] 72657365h +
mov ds:dword_47174C[edx] 646576h +
jmp loc_419428  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41BFBA  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 6369h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7063202Ch +
mov word ptr ds:dword_471744[edx] cx +
mov byte ptr [edx+471746h] 0 +
jmp loc_41941F  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C015  +
mov ecx eax +
mov esi 63h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6970202Ch +
mov word ptr ds:dword_471744[edx] si +
jmp loc_419416  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C069  +
mov ecx eax +
mov edi 6564h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6977202Ch +
mov word ptr ds:dword_471744[edx] di +
mov byte ptr [edx+471746h] 0 +
jmp loc_4199FF  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C0C4  +
mov ecx eax +
mov ebp 62h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 736C202Ch +
mov word ptr ds:dword_471744[edx] bp +
jmp loc_4199F3  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C118  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 74h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7865202Ch +
mov word ptr ds:dword_471744[edx] ax +
jmp loc_4199E7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C16C  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 6Ch +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7274202Ch +
mov ds:dword_471744[edx] 696E7061h +
mov word ptr ds:dword_471748[edx] ax +
jmp loc_4199DB  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C1CA  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 63h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6970202Ch +
mov word ptr ds:dword_471744[edx] ax +
jmp loc_418EF0  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C21E  +
mov ecx eax +
mov esi 70h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6F6E202Ch +
mov ds:dword_471744[edx] 62616B20h +
mov word ptr ds:dword_471748[edx] si +
jmp loc_419A0B  +
mov ds:dword_471740 656E202Ch +
mov ds:dword_471744 61632077h +
mov ds:dword_471748 6E696C6Ch +
mov ds:dword_47174C 6F632067h +
mov ds:dword_471750 6E65766Eh +
mov ds:dword_471754 6E6F6974h +
mov byte ptr ds:dword_471758 0 +
jmp loc_419AFF  +
mov eax 43h +
mov ds:dword_471740 6F6E202Ch +
mov ds:dword_471744 49502D6Eh +
mov word ptr ds:dword_471748 ax +
jmp loc_418716  +
mov eax 31h +
mov ds:dword_471740 4150202Ch +
mov ds:dword_471744 5349522Dh +
mov ds:dword_471748 2E312043h +
mov word ptr ds:dword_47174C ax +
jmp loc_4199CF  +
mov ebp 30h +
mov ds:dword_471740 5241202Ch +
mov ds:dword_471744 30372043h +
mov word ptr ds:dword_471748 bp +
jmp loc_418656  +
mov eax 30h +
mov ds:dword_471740 5241202Ch +
mov ds:dword_471744 30362043h +
mov word ptr ds:dword_471748 ax +
jmp loc_418656  +
mov eax 31h +
mov ds:dword_471740 5241202Ch +
mov ds:dword_471744 30362043h +
mov word ptr ds:dword_471748 ax +
jmp loc_418656  +
mov eax 34h +
mov ds:dword_471740 3147202Ch +
mov word ptr ds:dword_471744 ax +
jmp loc_41A0EF  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C39D  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3376202Ch +
mov ds:dword_471744[edx] 2D6F6E20h +
mov ds:dword_471748[edx] 6167656Ch +
mov ds:dword_47174C[edx] 732D7963h +
mov ds:dword_471750[edx] 61637379h +
mov ds:dword_471754[edx] 20736C6Ch +
mov ds:dword_471758[edx] 494241h +
jmp loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C421  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3276202Ch +
mov ds:dword_471744[edx] 73797320h +
mov ds:dword_471748[edx] 6C6C6163h +
mov ds:dword_47174C[edx] 49424120h +
mov byte ptr ds:dword_471750[edx] 0 +
jmp loc_4181A7  +
mov eax 30h +
mov ds:dword_471740 4150202Ch +
mov ds:dword_471744 5349522Dh +
mov ds:dword_471748 2E322043h +
mov word ptr ds:dword_47174C ax +
jmp loc_4199CF  +
mov eax 33h +
mov ds:dword_471740 3147202Ch +
mov word ptr ds:dword_471744 ax +
jmp loc_41A0EF  +
test ebx ebx +
jz loc_4181A7  +
mov esi offset aUnknownMac +
jmp loc_4193A6  +
cmp eax 0A00000h +
jz loc_41C566  +
jbe loc_41D82A  +
cmp eax 0A10000h +
jz loc_41C5C6  +
cmp eax 0A20000h +
jnz loc_41C934  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C506  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6F6C202Ch +
mov ds:dword_471744[edx] 73676E6Fh +
mov ds:dword_471748[edx] 332D6E6Fh +
mov word ptr ds:dword_47174C[edx] 61h +
jmp loc_4194FA  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C566  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6F6C202Ch +
mov ds:dword_471744[edx] 73676E6Fh +
mov ds:dword_471748[edx] 322D6E6Fh +
mov word ptr ds:dword_47174C[edx] 65h +
jmp loc_4194FA  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C5C6  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6F6C202Ch +
mov ds:dword_471744[edx] 73676E6Fh +
mov ds:dword_471748[edx] 322D6E6Fh +
mov word ptr ds:dword_47174C[edx] 66h +
jmp loc_4194FA  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aFpu_dp +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
test ebx 1000000h +
jz loc_41C674  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aFpu_mac +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
mov eax ebx +
and eax 0C00000h +
shr eax 16h +
cmp eax 2 +
jz loc_41DA10  +
cmp eax 3 +
jz loc_41DA03  +
cmp eax 1 +
jz loc_41D9E9  +
mov [esp+40h+var_38] offset aFpu_reg84 +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A867  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C6C6  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6C66202Ch +
mov ds:dword_471744[edx] 74616Fh +
jmp loc_41937C  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C718  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 70h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6F63202Ch +
mov ds:dword_471744[edx] 6174736Eh +
mov ds:dword_471748[edx] 6720746Eh +
mov word ptr ds:dword_47174C[edx] ax +
jmp loc_4198EE  +
mov ds:dword_471740 636D202Ch +
mov ds:dword_471744 34326Dh +
jmp loc_419A90  +
cmp ebx 30000000h +
jz loc_41C7F5  +
cmp ebx 40000000h +
jnz loc_41D623  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C7A8  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 357370h +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C7F5  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 347370h +
jmp loc_4181A7  +
cmp ebx 90000000h +
jz loc_41C8B6  +
cmp ebx 0A0000000h +
jnz loc_41D623  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C856  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 3672h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 34367370h +
mov word ptr ds:dword_471748[edx] cx +
mov byte ptr [edx+47174Ah] 0 +
jmp loc_4181A7  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C8B6  +
mov ecx eax +
mov esi 3672h +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 696D202Ch +
mov ds:dword_471744[edx] 32337370h +
mov word ptr ds:dword_471748[edx] si +
mov byte ptr [edx+47174Ah] 0 +
jmp loc_4181A7  +
cmp eax 810000h +
jz loc_41D991  +
cmp eax 820000h +
jz loc_41D939  +
test eax eax +
jz loc_4194FA  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C939  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6E75202Ch +
mov ds:dword_471744[edx] 776F6E6Bh +
mov ds:dword_471748[edx] 5043206Eh +
mov word ptr ds:dword_47174C[edx] 55h +
jmp loc_4194FA  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41C99E  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6B6E753Ch +
mov ds:dword_471744[edx] 6E776F6Eh +
mov ds:dword_471748[edx] 50654D20h +
mov ds:dword_47174C[edx] 706F6320h +
mov ds:dword_471750[edx] 74206F72h +
mov ds:dword_471754[edx] 3E657079h +
mov byte ptr ds:dword_471758[edx] 0 +
jmp loc_418588  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CA1F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 5641202Ch +
jmp loc_41A94E  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CA67  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 34h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 366F202Ch +
mov word ptr ds:dword_471744[edx] ax +
jmp loc_419570  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CABB  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 49h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6E75202Ch +
mov ds:dword_471744[edx] 776F6E6Bh +
mov ds:dword_471748[edx] 4241206Eh +
mov word ptr ds:dword_47174C[edx] ax +
jmp loc_419570  +
cmp eax 4 +
jnz loc_41D309  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41CB27  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 6465h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6E69202Ch +
mov ds:dword_471744[ecx] 77726574h +
mov ds:dword_471748[ecx] 696B726Fh +
mov ds:dword_47174C[ecx] 6520676Eh +
mov ds:dword_471750[ecx] 6C62616Eh +
mov word ptr ds:dword_471754[ecx] ax +
mov byte ptr [ecx+471756h] 0 +
jmp loc_41AD37  +
mov esi offset aMac +
jmp loc_4193A6  +
mov ds:dword_471740 654D202Ch +
mov ds:dword_471744 33432050h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4184F4  +
mov ds:dword_471740 654D202Ch +
mov ds:dword_471744 34432050h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4184F4  +
mov ds:dword_471740 654D202Ch +
mov ds:dword_471744 31482050h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4184F4  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CC14  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6556202Ch +
mov ds:dword_471744[edx] 6F697372h +
mov ds:dword_471748[edx] 4520336Eh +
mov ds:dword_47174C[edx] 494241h +
jmp loc_4181A7  +
mov ds:dword_471740 3876202Ch +
mov ds:dword_471744 32653035h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4181A7  +
mov eax 3576h +
mov ds:dword_471740 3876202Ch +
mov ds:dword_471744 33653035h +
mov word ptr ds:dword_471748 ax +
mov byte ptr ds:dword_471748+2 0 +
jmp loc_4181A7  +
mov eax 3376h +
mov ds:dword_471740 3876202Ch +
mov ds:dword_471744 32653035h +
mov word ptr ds:dword_471748 ax +
mov byte ptr ds:dword_471748+2 0 +
jmp loc_4181A7  +
mov ds:dword_471740 3876202Ch +
mov ds:dword_471744 31653035h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4181A7  +
mov ds:dword_471740 654D202Ch +
mov ds:dword_471744 35432050h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4184F4  +
mov eax 50h +
mov ds:dword_471740 6567202Ch +
mov ds:dword_471744 6972656Eh +
mov ds:dword_471748 654D2063h +
mov word ptr ds:dword_47174C ax +
jmp loc_4184F4  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CD5E  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
test ebx ebx +
mov ds:dword_471740[edx] 6556202Ch +
mov ds:dword_471744[edx] 6F697372h +
mov ds:dword_471748[edx] 4520356Eh +
mov ds:dword_47174C[edx] 494241h +
jz loc_4181A7  +
xor edx edx +
jmp loc_41CE2E  +
cmp eax 400000h +
jz loc_41CF27  +
cmp eax 800000h +
jnz loc_41CF76  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41CDDC  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 38h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 4542202Ch +
mov word ptr ds:dword_471744[ecx] ax +
test ebx ebx +
jz loc_41B029  +
mov eax ebx +
neg eax  +
and eax ebx +
mov ecx eax +
not ecx  +
and ebx ecx +
cmp eax 400h +
mov ecx offset dword_471740 +
jz loc_41CEBF  +
ja loc_41CDC6  +
cmp eax 200h +
jnz loc_41CF76  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41CE57  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6F73202Ch +
mov ds:dword_471744[ecx] 662D7466h +
mov ds:dword_471748[ecx] 74616F6Ch +
mov ds:dword_47174C[ecx] 49424120h +
mov byte ptr ds:dword_471750[ecx] 0 +
jmp loc_41CE26  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41CEBF  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6168202Ch +
mov ds:dword_471744[ecx] 662D6472h +
mov ds:dword_471748[ecx] 74616F6Ch +
mov ds:dword_47174C[ecx] 49424120h +
mov byte ptr ds:dword_471750[ecx] 0 +
jmp loc_41CE26  +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41CF27  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 38h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 454C202Ch +
mov word ptr ds:dword_471744[ecx] ax +
jmp loc_41CE26  +
mov edx 1 +
jmp loc_41CE26  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41CF85  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
test ebx ebx +
mov ds:dword_471740[edx] 6556202Ch +
mov ds:dword_471744[edx] 6F697372h +
mov ds:dword_471748[edx] 4520346Eh +
mov ds:dword_47174C[edx] 494241h +
jz loc_4181A7  +
mov eax ebx +
neg eax  +
and eax ebx +
cmp eax 400000h +
jz loc_41DA90  +
cmp eax 800000h +
jnz loc_4182B2  +
mov dword ptr [edx+47174Fh] 4542202Ch +
mov word ptr [edx+471753h] 38h +
jmp loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D022  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
test ebx ebx +
mov ds:dword_471740[edx] 6556202Ch +
mov ds:dword_471744[edx] 6F697372h +
mov ds:dword_471748[edx] 4520326Eh +
mov ds:dword_47174C[edx] 494241h +
jz loc_4181A7  +
xor edx edx +
jmp loc_41D0AF  +
cmp eax 10h +
jz loc_41D1DB  +
cmp eax 4 +
jz loc_41D158  +
mov edx 1 +
test ebx ebx +
jz loc_41B029  +
mov eax ebx +
neg eax  +
and eax ebx +
mov ecx eax +
not ecx  +
and ebx ecx +
cmp eax 8 +
jnz loc_41D090  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41D0C5  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 7964202Ch +
mov ds:dword_471744[ecx] 696D616Eh +
mov ds:dword_471748[ecx] 79732063h +
mov ds:dword_47174C[ecx] 6C6F626Dh +
mov ds:dword_471750[ecx] 73752073h +
mov ds:dword_471754[ecx] 65732065h +
mov ds:dword_471758[ecx] 6E656D67h +
mov ds:dword_47175C[ecx] 6E692074h +
mov ds:dword_471760[ecx] 786564h +
jmp loc_41D0A7  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41D15D  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
mov eax 7365h +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 6F73202Ch +
mov ds:dword_471744[ecx] 64657472h +
mov ds:dword_471748[ecx] 6D797320h +
mov ds:dword_47174C[ecx] 206C6F62h +
mov ds:dword_471750[ecx] 6C626174h +
mov word ptr ds:dword_471754[ecx] ax +
mov byte ptr [ecx+471756h] 0 +
jmp loc_41D0A7  +
mov ecx offset dword_471740 +
mov esi [ecx] +
add ecx 4 +
lea eax [esi-1010101h] +
not esi  +
and eax esi +
and eax 80808080h +
jz loc_41D1E0  +
mov esi eax +
shr esi 10h +
test eax 8080h +
cmovz eax esi +
lea esi [ecx+2] +
cmovz ecx esi +
add al al +
sbb ecx 3 +
sub ecx offset dword_471740 +
mov ds:dword_471740[ecx] 616D202Ch +
mov ds:dword_471744[ecx] 6E697070h +
mov ds:dword_471748[ecx] 79732067h +
mov ds:dword_47174C[ecx] 6C6F626Dh +
mov ds:dword_471750[ecx] 72702073h +
mov ds:dword_471754[ecx] 64656365h +
mov ds:dword_471758[ecx] 746F2065h +
mov ds:dword_47175C[ecx] 73726568h +
mov byte ptr ds:dword_471760[ecx] 0 +
jmp loc_41D0A7  +
mov ebp 3035h +
mov ds:dword_471740 3876202Ch +
mov word ptr ds:dword_471744 bp +
mov byte ptr ds:dword_471744+2 0 +
jmp loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D297  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov ecx 6Fh +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7370202Ch +
mov word ptr ds:dword_471744[edx] cx +
jmp loc_4181A7  +
mov ds:dword_471740 4852202Ch +
mov ds:dword_471744 20303538h +
mov ds:dword_471748 494241h +
jmp loc_419D20  +
mov edx 1 +
jmp loc_41AD37  +
mov edi 62h +
mov ds:dword_471740 6D65202Ch +
mov word ptr ds:dword_471744 di +
jmp loc_4183C9  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aEncrp +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A8C7  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aStr_0 +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A879  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aAudio +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A870  +
test bh 1 +
jnz loc_41DA45  +
test ebx 100000h +
jz loc_41DA1D  +
test bh 20h +
jnz loc_41DA68  +
test bh 40h +
jz loc_41A82A  +
mov [esp+40h+var_38] offset a16b +
jmp loc_41A80F  +
mov ax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aFpu_sp +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
mov eax 1 +
jmp loc_41A847  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aPerf2 +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A83C  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aPerf1 +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A833  +
test ebx ebx +
jz loc_4181A7  +
mov ds:dword_471740 7266202Ch +
mov ds:dword_471744 3F3F3Fh +
jmp loc_4181A7  +
cmp ebx 5000000h +
jnz loc_41D45E  +
mov ds:dword_471740 7266202Ch +
mov ds:dword_471744 303034h +
jmp loc_4181A7  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset a16reg +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A885  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D4C5  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 7365h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6D76202Ch +
mov ds:dword_471744[edx] 696C5F73h +
mov ds:dword_471748[edx] 67616B6Eh +
mov word ptr ds:dword_47174C[edx] ax +
mov byte ptr [edx+47174Eh] 0 +
jmp loc_41990D  +
mov ds:dword_471740 6F74202Ch +
mov ds:dword_471744 7461636Dh +
mov byte ptr ds:dword_471748 0 +
jmp loc_4181A7  +
mov ds:dword_471740 7266202Ch +
mov ds:dword_471744 303033h +
jmp loc_4181A7  +
mov ds:dword_471740 7266202Ch +
mov ds:dword_471744 303535h +
jmp loc_4181A7  +
mov ds:dword_471740 7266202Ch +
mov ds:dword_471744 353034h +
jmp loc_4181A7  +
mov ds:dword_471740 7266202Ch +
mov ds:dword_471744 303035h +
jmp loc_4181A7  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aMac_dx +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A7EE  +
mov ds:dword_471740 366D202Ch +
mov ds:dword_471744 30303038h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4181A7  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aDiv_dx +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41A7F7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D628  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov eax 41h +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6E75202Ch +
mov ds:dword_471744[edx] 776F6E6Bh +
mov ds:dword_471748[edx] 5349206Eh +
mov word ptr ds:dword_47174C[edx] ax +
jmp loc_4181A7  +
mov ds:dword_471740 7063202Ch +
mov ds:dword_471744 323375h +
jmp loc_4181A7  +
mov ds:dword_471740 6966202Ch +
mov ds:dword_471744 615F6F64h +
mov byte ptr ds:dword_471748 0 +
jmp loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D6C9  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6261202Ch +
mov ds:dword_471744[edx] 74726Fh +
jmp loc_4181A7  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D71B  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 7265202Ch +
mov ds:dword_471744[edx] 726F72h +
jmp loc_4181A7  +
cmp eax 8C0000h +
jnz loc_41C934  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D773  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 6C78202Ch +
mov word ptr ds:dword_471744[edx] 72h +
jmp loc_4194FA  +
cmp eax 850000h +
jnz loc_41C934  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D7CA  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3634202Ch +
mov word ptr ds:dword_471744[edx] 3035h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
mov [esp+40h+var_38] offset aVideo +
jmp loc_41A8A0  +
cmp eax 990000h +
jnz loc_41C934  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D835  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3039202Ch +
mov word ptr ds:dword_471744[edx] 3030h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D88D  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3134202Ch +
mov word ptr ds:dword_471744[edx] 3030h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D8E5  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 636F202Ch +
mov ds:dword_471744[edx] 6E6F6574h +
mov byte ptr ds:dword_471748[edx] 0 +
jmp loc_4194FA  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D93E  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3034202Ch +
mov word ptr ds:dword_471744[edx] 3031h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
mov edx offset dword_471740 +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_41D996  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx offset dword_471740 +
mov ds:dword_471740[edx] 3933202Ch +
mov word ptr ds:dword_471744[edx] 3030h +
mov byte ptr [edx+471746h] 0 +
jmp loc_4194FA  +
mov [esp+40h+var_38] offset aFpu_reg168 +
jmp loc_41C6A1  +
mov [esp+40h+var_38] offset aB8 +
jmp loc_41A7CC  +
mov [esp+40h+var_38] offset aFpu_reg3232 +
jmp loc_41C6A1  +
mov [esp+40h+var_38] offset aFpu_reg3216 +
jmp loc_41C6A1  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aMac_0 +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41D3BB  +
lea eax dword_471740[esi] +
sub edi esi +
mov [esp+40h+var_38] offset aMfusr_pc +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41D3AF  +
mov eax 400h +
sub eax esi +
mov [esp+40h+var_3C] eax +
lea eax dword_471740[esi] +
mov [esp+40h+var_38] offset aDiv +
mov [esp+40h+var_40] eax +
call sub_402590  +
add esi eax +
jmp loc_41D3C4  +
mov dword ptr [edx+47174Fh] 454C202Ch +
mov word ptr [edx+471753h] 38h +
jmp loc_4181A7  +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ecx ds:dword_471D08 +
mov [esp+9Ch+var_60] eax +
test ecx ecx +
jz loc_41DEFF  +
mov eax ds:dword_471D4C +
xor edx edx +
mov [esp+9Ch+var_48] 0 +
mov [esp+9Ch+var_5C] eax +
mov eax ds:dword_471DA4 +
test eax eax +
jnz loc_41DB1C  +
jmp loc_41E61C  +
cmp ecx 6FFFFFFFh +
jz loc_41E33F  +
cmp ecx 6FFFFFFDh +
jz loc_41DF38  +
add [esp+9Ch+var_48] 1 +
add [esp+9Ch+var_5C] 48h +
cmp eax [esp+9Ch+var_48] +
jbe loc_41DEF7  +
mov edi [esp+9Ch+var_5C] +
mov ecx [edi+4] +
cmp ecx 6FFFFFFEh +
jnz loc_41DAF0  +
mov edi [esp+9Ch+var_5C] +
mov eax edi +
mov ebx [edi+2Ch] +
call sub_401C80  +
mov [esp+9Ch+var_9C] offset aVersionNeedsSe +
mov [esp+9Ch+var_94] ebx +
mov [esp+9Ch+var_98] eax +
call printf  +
mov [esp+9Ch+var_9C] offset aAddr0x +
call printf  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+9Ch+var_98] offset a016i64x_0 +
mov [esp+9Ch+var_94] eax +
mov eax ds:_iob +
mov [esp+9Ch+var_90] edx +
add eax 20h +
mov [esp+9Ch+var_9C] eax +
call fprintf  +
mov edx [edi+28h] +
mov eax offset aCorrupt +
cmp edx ds:dword_471DA4 +
jb loc_41E665  +
mov edi [esp+9Ch+var_5C] +
mov [esp+9Ch+var_94] edx +
mov [esp+9Ch+var_90] eax +
mov eax [edi+18h] +
mov [esp+9Ch+var_9C] offset aOffset08lxLink +
mov [esp+9Ch+var_98] eax +
call printf  +
mov edx [edi+24h] +
mov eax [edi+20h] +
mov ecx [edi+18h] +
mov [esp+9Ch+var_8C] offset aVersionNeeds_0 +
mov [esp+9Ch+var_90] edx +
mov edx [esp+9Ch+var_60] +
mov [esp+9Ch+var_94] eax +
xor eax eax +
mov [esp+9Ch+var_9C] 1 +
mov [esp+9Ch+var_98] 0 +
call sub_403CC0  +
test eax eax +
mov ecx eax +
mov [esp+9Ch+var_50] eax +
jz loc_41E60D  +
mov eax [edi+20h] +
add eax ecx +
mov esi eax +
mov [esp+9Ch+var_7C] eax +
mov eax [edi+2Ch] +
test eax eax +
jz loc_41DECD  +
mov edi esi +
lea edx [ecx+10h] +
sub edi ecx +
cmp esi edx +
mov [esp+9Ch+var_4C] edi +
jb loc_41EABC  +
mov [esp+9Ch+var_54] 0 +
mov ebx ecx +
mov [esp+9Ch+var_64] 0 +
nop   +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_9C] ebx +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 2 +
mov edi eax +
lea eax [ebx+2] +
movzx edi di +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_78] eax +
lea eax [ebx+4] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov ebp eax +
lea eax [ebx+8] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov esi eax +
lea eax [ebx+0Ch] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_94] edi +
mov [esp+9Ch+var_9C] offset a06xVersionD +
mov [esp+9Ch+var_58] eax +
mov eax [esp+9Ch+var_64] +
mov [esp+9Ch+var_98] eax +
call printf  +
mov eax ds:dword_472084 +
test eax eax +
jz loc_41DCCF  +
cmp ebp ds:dword_472080 +
jb loc_41DF21  +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] offset aFileLx +
call printf  +
movzx eax word ptr [esp+9Ch+var_78] +
mov [esp+9Ch+var_9C] offset aCntD +
mov [esp+9Ch+var_98] eax +
mov [esp+9Ch+var_6C] eax +
call printf  +
mov eax [esp+9Ch+var_7C] +
sub eax ebx +
cmp esi eax +
ja loc_41E681  +
mov edx [esp+9Ch+var_6C] +
add ebx esi +
add esi [esp+9Ch+var_64] +
test edx edx +
mov [esp+9Ch+var_78] esi +
jz loc_41DE73  +
lea eax [ebx+10h] +
cmp [esp+9Ch+var_7C] eax +
jb loc_41DF10  +
mov eax edx +
xor edi edi +
sub eax 1 +
mov [esp+9Ch+var_68] eax +
jmp loc_41DD86  +
mov [esp+9Ch+var_94] ebp +
mov [esp+9Ch+var_98] edx +
mov [esp+9Ch+var_9C] offset aFlagsSVersionD +
call printf  +
mov eax [esp+9Ch+var_7C] +
sub eax ebx +
cmp esi eax +
ja loc_41DE63  +
test esi esi +
jnz loc_41DD66  +
cmp [esp+9Ch+var_68] edi +
jg loc_41DE63  +
add [esp+9Ch+var_78] esi +
add ebx esi +
add edi 1 +
cmp [esp+9Ch+var_6C] edi +
jle loc_41DE73  +
lea eax [ebx+10h] +
cmp [esp+9Ch+var_7C] eax +
jb loc_41DF10  +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] ebx +
call ds:dword_472C94  +
lea eax [ebx+4] +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_74] eax +
lea eax [ebx+6] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_70] eax +
lea eax [ebx+8] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov ebp eax +
lea eax [ebx+0Ch] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov esi eax +
mov eax ds:dword_472084 +
test eax eax +
jz loc_41DE04  +
cmp ebp ds:dword_472080 +
jb loc_41DE46  +
mov eax [esp+9Ch+var_78] +
mov [esp+9Ch+var_94] ebp +
mov [esp+9Ch+var_9C] offset a06xNameIndexLx +
mov [esp+9Ch+var_98] eax +
call printf  +
movzx eax word ptr [esp+9Ch+var_74] +
mov edx offset aNone_1 +
movzx ebp word ptr [esp+9Ch+var_70] +
mov byte ptr ds:dword_4711C0 0 +
test eax eax +
jz loc_41DD36  +
call sub_411ED0  +
mov edx eax +
jmp loc_41DD36  +
lea ecx [eax+ebp] +
mov eax [esp+9Ch+var_78] +
mov [esp+9Ch+var_94] ecx +
mov [esp+9Ch+var_9C] offset a06xNameS +
mov [esp+9Ch+var_98] eax +
call printf  +
jmp loc_41DE1C  +
mov [esp+9Ch+var_98] esi +
mov [esp+9Ch+var_9C] offset aInvalidVna_nex +
call sub_437070  +
mov edx [esp+9Ch+var_58] +
mov eax [esp+9Ch+var_5C] +
test edx edx +
mov eax [eax+2Ch] +
jnz loc_41DE8F  +
lea edx [eax-1] +
cmp edx [esp+9Ch+var_54] +
ja loc_41E9EB  +
mov edi [esp+9Ch+var_58] +
add [esp+9Ch+var_54] 1 +
add [esp+9Ch+var_64] edi +
cmp eax [esp+9Ch+var_54] +
jbe loc_41DECD  +
mov eax [esp+9Ch+var_4C] +
cmp [esp+9Ch+var_64] eax +
ja loc_41DEC1  +
mov ebx [esp+9Ch+var_50] +
add ebx [esp+9Ch+var_64] +
lea eax [ebx+10h] +
cmp [esp+9Ch+var_7C] eax +
jnb loc_41DC30  +
mov [esp+9Ch+var_9C] offset aMissingVersion +
call sub_437070  +
mov eax [esp+9Ch+var_50] +
mov [esp+9Ch+var_9C] eax +
call free  +
mov eax ds:dword_471DA4 +
mov edx 1 +
add [esp+9Ch+var_48] 1 +
add [esp+9Ch+var_5C] 48h +
cmp eax [esp+9Ch+var_48] +
ja loc_41DB1C  +
test edx edx +
jz loc_41E61C  +
add esp 9Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+9Ch+var_9C] offset aMissingVersi_0 +
call sub_437070  +
jmp loc_41DE73  +
add eax ebp +
mov [esp+9Ch+var_98] eax +
mov [esp+9Ch+var_9C] offset aFileS +
call printf  +
jmp loc_41DCDF  +
mov eax edi +
mov ebx [edi+2Ch] +
call sub_401C80  +
mov [esp+9Ch+var_9C] offset aVersionDefinit +
mov [esp+9Ch+var_94] ebx +
mov [esp+9Ch+var_98] eax +
call printf  +
mov [esp+9Ch+var_9C] offset aAddr0x_0 +
call printf  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+9Ch+var_98] offset a016i64x_0 +
mov [esp+9Ch+var_94] eax +
mov eax ds:_iob +
mov [esp+9Ch+var_90] edx +
add eax 20h +
mov [esp+9Ch+var_9C] eax +
call fprintf  +
mov edx [edi+28h] +
mov eax offset aCorrupt +
cmp edx ds:dword_471DA4 +
jb loc_41E649  +
mov edi [esp+9Ch+var_5C] +
mov [esp+9Ch+var_94] edx +
mov [esp+9Ch+var_90] eax +
mov eax [edi+18h] +
mov [esp+9Ch+var_9C] offset aOffset08lxLi_0 +
mov [esp+9Ch+var_98] eax +
call printf  +
mov edx [edi+24h] +
mov eax [edi+20h] +
mov ecx [edi+18h] +
mov [esp+9Ch+var_8C] offset aVersionDefin_0 +
mov [esp+9Ch+var_90] edx +
mov edx [esp+9Ch+var_60] +
mov [esp+9Ch+var_94] eax +
xor eax eax +
mov [esp+9Ch+var_9C] 1 +
mov [esp+9Ch+var_98] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+9Ch+var_64] eax +
jz loc_41E60D  +
mov edx [esp+9Ch+var_5C] +
mov ecx [esp+9Ch+var_64] +
mov eax [edx+20h] +
add eax ecx +
mov edi eax +
mov [esp+9Ch+var_78] eax +
mov eax [edx+2Ch] +
test eax eax +
jz loc_41E2EE  +
mov edx edi +
sub edx ecx +
mov [esp+9Ch+var_58] edx +
lea edx [ecx+14h] +
cmp edi edx +
jb loc_41EAC9  +
mov [esp+9Ch+var_6C] 0 +
mov ebx ecx +
mov [esp+9Ch+var_70] 0 +
lea esi [esi+0] +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_9C] ebx +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_7C] eax +
lea eax [ebx+2] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 2 +
mov esi eax +
lea eax [ebx+4] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_74] eax +
lea eax [ebx+6] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov ebp eax +
lea eax [ebx+8] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
lea eax [ebx+0Ch] +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov edi eax +
lea eax [ebx+10h] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov edx offset aNone_1 +
mov byte ptr ds:dword_4711C0 0 +
mov [esp+9Ch+var_68] eax +
movzx eax si +
test eax eax +
jnz loc_41E310  +
movzx eax word ptr [esp+9Ch+var_7C] +
movzx esi bp +
mov [esp+9Ch+var_90] edx +
mov [esp+9Ch+var_9C] offset a06xRevDFlagsS +
mov [esp+9Ch+var_94] eax +
mov eax [esp+9Ch+var_70] +
mov [esp+9Ch+var_98] eax +
call printf  +
movzx eax word ptr [esp+9Ch+var_74] +
mov [esp+9Ch+var_94] esi +
mov [esp+9Ch+var_9C] offset aIndexDCntD +
mov [esp+9Ch+var_98] eax +
call printf  +
mov eax [esp+9Ch+var_78] +
sub eax ebx +
cmp edi eax +
ja loc_41E2DD  +
add ebx edi +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] ebx +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov ebp eax +
lea eax [ebx+4] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov edx eax +
mov eax ds:dword_472084 +
test eax eax +
jz loc_41E17D  +
cmp ebp ds:dword_472080 +
jb loc_41E320  +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] offset aNameIndexLd +
mov [esp+9Ch+var_7C] edx +
call printf  +
mov edx [esp+9Ch+var_7C] +
add edi [esp+9Ch+var_70] +
cmp esi 1 +
jle loc_41E27C  +
mov ecx [esp+9Ch+var_78] +
mov eax ecx +
sub eax ebx +
cmp edx eax +
ja loc_41E2C3  +
add ebx edx +
add edi edx +
lea eax [ebx+8] +
cmp ecx eax +
jb loc_41E2C3  +
lea eax [esi-1] +
mov esi 1 +
mov [esp+9Ch+var_74] eax +
jmp loc_41E214  +
mov [esp+9Ch+var_90] ecx +
mov [esp+9Ch+var_94] esi +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] offset a06xParentDName +
call printf  +
cmp esi [esp+9Ch+var_74] +
jz loc_41E27C  +
mov edx [esp+9Ch+var_78] +
mov eax edx +
sub eax ebx +
cmp eax ebp +
jb loc_41E2C3  +
add ebx ebp +
add edi ebp +
lea eax [ebx+8] +
add esi 1 +
cmp edx eax +
jb loc_41E2C3  +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] ebx +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_7C] eax +
lea eax [ebx+4] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov ecx [esp+9Ch+var_7C] +
mov ebp eax +
mov eax ds:dword_472084 +
test eax eax +
jz loc_41E1D0  +
cmp ecx ds:dword_472080 +
jnb loc_41E1D0  +
add ecx eax +
mov [esp+9Ch+var_90] ecx +
mov [esp+9Ch+var_94] esi +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] offset a06xParentDS +
call printf  +
cmp esi [esp+9Ch+var_74] +
jnz loc_41E1F2  +
mov edi [esp+9Ch+var_70] +
mov eax [esp+9Ch+var_68] +
add eax edi +
cmp eax edi +
jbe loc_41E2DD  +
mov edi [esp+9Ch+var_5C] +
add [esp+9Ch+var_6C] 1 +
mov ecx [esp+9Ch+var_6C] +
cmp [edi+2Ch] ecx +
jbe loc_41E2EE  +
cmp eax [esp+9Ch+var_58] +
ja loc_41E638  +
mov edi [esp+9Ch+var_64] +
lea ebx [edi+eax] +
lea edx [ebx+14h] +
cmp [esp+9Ch+var_78] edx +
jb loc_41E638  +
mov [esp+9Ch+var_70] eax +
jmp loc_41E040  +
mov [esp+9Ch+var_9C] offset aVersionDefAuxP +
call puts  +
mov edi [esp+9Ch+var_70] +
mov eax [esp+9Ch+var_68] +
add eax edi +
cmp eax edi +
ja loc_41E28A  +
mov eax [esp+9Ch+var_5C] +
mov eax [eax+2Ch] +
cmp [esp+9Ch+var_6C] eax +
jb loc_41E638  +
mov eax [esp+9Ch+var_64] +
mov [esp+9Ch+var_9C] eax +
call free  +
mov edx 1 +
mov eax ds:dword_471DA4 +
jmp loc_41DB08  +
call sub_411ED0  +
mov edx eax +
jmp loc_41E0F2  +
add eax ebp +
mov [esp+9Ch+var_98] eax +
mov [esp+9Ch+var_9C] offset aNameS +
mov [esp+9Ch+var_7C] edx +
call printf  +
mov edx [esp+9Ch+var_7C] +
jmp loc_41E195  +
mov ecx [esp+9Ch+var_5C] +
mov ecx [ecx+28h] +
cmp ecx eax +
jnb loc_41DB08  +
lea ebx [ecx+ecx*8] +
mov ecx ds:dword_471D4C +
lea ebx [ecx+ebx*8] +
mov ecx [esp+9Ch+var_5C] +
cmp [ebx+28h] eax +
mov esi [ecx+20h] +
mov edi [ecx+24h] +
jnb loc_41DB08  +
mov ebp ds:dword_471CF0 +
lea ecx [esp+9Ch+var_34] +
mov edx ebx +
mov eax [esp+9Ch+var_60] +
test ebp ebp +
jz loc_41E697  +
call sub_4042C0  +
mov [esp+9Ch+var_4C] eax +
mov ebp [esp+9Ch+var_4C] +
test ebp ebp +
jz loc_41E60D  +
mov eax [ebx+28h] +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea eax [eax+edx*8] +
mov edx [eax+24h] +
mov ecx eax +
mov [esp+9Ch+var_50] eax +
mov eax [eax+20h] +
mov ecx [ecx+18h] +
mov [esp+9Ch+var_8C] offset aVersionStringT +
mov [esp+9Ch+var_90] edx +
mov edx [esp+9Ch+var_60] +
mov [esp+9Ch+var_94] eax +
xor eax eax +
mov [esp+9Ch+var_9C] 1 +
mov [esp+9Ch+var_98] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+9Ch+var_44] eax +
jz loc_41E5F2  +
mov ebp edi +
mov edi esi +
mov esi [esp+9Ch+var_5C] +
shrd edi ebp +
mov [esp+9Ch+var_70] edi +
mov eax esi +
call sub_401C80  +
mov [esp+9Ch+var_94] edi +
mov [esp+9Ch+var_9C] offset aVersionSymbols +
mov [esp+9Ch+var_98] eax +
call printf  +
mov [esp+9Ch+var_9C] offset aAddr_0 +
call printf  +
mov edx [esi+14h] +
mov eax [esi+10h] +
mov [esp+9Ch+var_98] offset a016i64x_0 +
mov [esp+9Ch+var_90] edx +
mov edx ds:_iob +
mov [esp+9Ch+var_94] eax +
lea eax [edx+20h] +
mov [esp+9Ch+var_9C] eax +
call fprintf  +
mov eax ebx +
call sub_401C80  +
mov edx [esi+28h] +
mov [esp+9Ch+var_94] edx +
mov [esp+9Ch+var_90] eax +
mov eax [esi+18h] +
mov [esp+9Ch+var_9C] offset aOffset08lxLink +
mov [esp+9Ch+var_98] eax +
call printf  +
mov eax [esp+9Ch+var_70] +
mov esi [esp+9Ch+var_60] +
mov edx ds:dword_471E38 +
mov ecx ds:dword_471E3C +
add eax eax +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
mov [esp+9Ch+var_98] 0 +
call sub_40B840  +
mov edx esi +
mov [esp+9Ch+var_8C] offset aVersionSymbolD +
mov [esp+9Ch+var_94] 2 +
mov [esp+9Ch+var_90] 0 +
mov [esp+9Ch+var_9C] edi +
mov [esp+9Ch+var_98] 0 +
mov ecx eax +
xor eax eax +
call sub_403CC0  +
test eax eax +
mov [esp+9Ch+var_7C] eax +
jz loc_41E5E6  +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_9C] edi +
call sub_42C2B0  +
mov edx [esp+9Ch+var_70] +
test edx edx +
mov [esp+9Ch+var_40] eax +
jz loc_41EA92  +
mov ecx [esp+9Ch+var_7C] +
mov ebx edi +
mov edi eax +
lea esi [ecx+edx*2-2] +
nop   +
mov [esp+9Ch+var_9C] esi +
sub esi 2 +
mov [esp+9Ch+var_98] 2 +
call ds:dword_472C94  +
mov [edi+ebx*2-2] ax +
sub ebx 1 +
jnz loc_41E500  +
mov eax [esp+9Ch+var_7C] +
mov [esp+9Ch+var_9C] eax +
call free  +
mov eax [esp+9Ch+var_40] +
mov [esp+9Ch+var_64] 0 +
add eax 8 +
mov [esp+9Ch+var_74] eax +
lea esi [esi+0] +
mov edi [esp+9Ch+var_64] +
mov [esp+9Ch+var_9C] offset a03x +
mov [esp+9Ch+var_98] edi +
call printf  +
mov eax [esp+9Ch+var_74] +
mov [esp+9Ch+var_78] edi +
lea ebp [eax-8] +
mov eax [esp+9Ch+var_70] +
cmp [esp+9Ch+var_78] eax +
jnb loc_41E5B6  +
movzx eax word ptr [ebp+0] +
test ax ax +
jz loc_41E8F3  +
cmp ax 1 +
jnz loc_41E6A5  +
mov eax ds:_iob +
mov [esp+9Ch+var_94] 12h +
mov [esp+9Ch+var_98] 1 +
mov [esp+9Ch+var_9C] offset a1Global +
add eax 20h +
mov [esp+9Ch+var_90] eax +
call fwrite  +
add [esp+9Ch+var_78] 1 +
add ebp 2 +
cmp [esp+9Ch+var_74] ebp +
jnz loc_41E55F  +
mov [esp+9Ch+var_9C] 0Ah +
call putchar  +
add [esp+9Ch+var_64] 4 +
mov eax [esp+9Ch+var_64] +
add [esp+9Ch+var_74] 8 +
cmp [esp+9Ch+var_70] eax +
ja loc_41E540  +
mov eax [esp+9Ch+var_40] +
mov [esp+9Ch+var_9C] eax +
call free  +
mov eax [esp+9Ch+var_44] +
mov [esp+9Ch+var_9C] eax +
call free  +
mov eax [esp+9Ch+var_4C] +
mov [esp+9Ch+var_9C] eax +
call free  +
mov edx 1 +
mov eax ds:dword_471DA4 +
jmp loc_41DB08  +
mov edx 1 +
mov eax ds:dword_471DA4 +
jmp loc_41DB08  +
mov [esp+9Ch+var_9C] offset aNoVersionInfor +
call puts  +
add esp 9Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+9Ch+var_9C] offset aVersionDefin_1 +
call puts  +
jmp loc_41E2EE  +
mov eax ds:dword_471D4C +
lea edx [edx+edx*8] +
lea eax [eax+edx*8] +
call sub_401C80  +
mov edx [esp+9Ch+var_5C] +
mov edx [edx+28h] +
jmp loc_41DF9C  +
mov eax ds:dword_471D4C +
lea edx [edx+edx*8] +
lea eax [eax+edx*8] +
call sub_401C80  +
mov edx [esp+9Ch+var_5C] +
mov edx [edx+28h] +
jmp loc_41DB93  +
mov eax [esp+9Ch+var_5C] +
mov eax [eax+2Ch] +
cmp [esp+9Ch+var_54] eax +
jnb loc_41DECD  +
jmp loc_41DEC1  +
call sub_404690  +
mov [esp+9Ch+var_4C] eax +
jmp loc_41E38E  +
movsx edx ax +
and eax 7FFFh +
sar edx 1Fh +
and edx 48h +
add edx 20h +
mov [esp+9Ch+var_94] edx +
mov [esp+9Ch+var_98] eax +
mov [esp+9Ch+var_9C] offset a4xC +
call printf  +
mov [esp+9Ch+var_54] eax +
mov eax [esp+9Ch+var_78] +
cmp eax [esp+9Ch+var_34] +
jnb loc_41E920  +
mov ecx ds:dword_471DCC +
mov edx ds:dword_471DC8 +
mov eax ecx +
or eax edx +
jnz loc_41E776  +
xor edi edi +
cmp word ptr [ebp+0] 8001h +
jz loc_41E712  +
mov ecx ds:dword_471DDC +
mov edx ds:dword_471DD8 +
mov eax ecx +
or eax edx +
jnz loc_41E942  +
test edi edi +
jz loc_41E745  +
mov [esp+9Ch+var_9C] edi +
call strlen  +
mov edx 0Ch +
mov [esp+9Ch+var_90] offset asc_44BBAE +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] offset aSS_2 +
sub edx eax +
mov [esp+9Ch+var_94] edx +
call printf  +
add [esp+9Ch+var_54] eax +
cmp [esp+9Ch+var_54] 11h +
jg loc_41E5A8  +
mov eax 12h +
sub eax [esp+9Ch+var_54] +
mov [esp+9Ch+var_94] 20h +
mov [esp+9Ch+var_9C] offset aC_0 +
mov [esp+9Ch+var_98] eax +
call printf  +
jmp loc_41E5A8  +
mov eax [esp+9Ch+var_60] +
mov [esp+9Ch+var_9C] 10h +
mov [esp+9Ch+var_98] 0 +
call sub_40B840  +
mov [esp+9Ch+var_7C] ebp +
mov [esp+9Ch+var_6C] eax +
lea eax [esp+9Ch+var_30] +
mov [esp+9Ch+var_58] eax +
nop   +
mov edi [esp+9Ch+var_6C] +
mov edx [esp+9Ch+var_60] +
mov eax [esp+9Ch+var_58] +
mov [esp+9Ch+var_8C] offset aVersionNeed +
mov [esp+9Ch+var_94] 1 +
mov ecx edi +
mov [esp+9Ch+var_90] 0 +
mov [esp+9Ch+var_9C] 10h +
mov [esp+9Ch+var_98] 0 +
call sub_403CC0  +
test eax eax +
jz loc_41E8B0  +
lea eax [esp+9Ch+var_28] +
mov [esp+9Ch+var_98] 4 +
lea esi [esp+9Ch+var_1A] +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 4 +
mov ebx eax +
lea eax [esp+9Ch+var_24] +
add ebx edi +
mov [esp+9Ch+var_9C] eax +
lea edi [esp+9Ch+var_14] +
call ds:dword_472C94  +
mov [esp+9Ch+var_68] eax +
jmp loc_41E857  +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] edi +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 2 +
mov [esp+9Ch+var_9C] esi +
mov ebp eax +
call ds:dword_472C94  +
mov ecx [esp+9Ch+var_7C] +
add ebx ebp +
cmp [ecx] ax +
jz loc_41E8C0  +
test ebp ebp +
jz loc_41E8A0  +
mov edx [esp+9Ch+var_60] +
mov ecx ebx +
mov [esp+9Ch+var_8C] offset aVersionNeedA_0 +
lea eax [esp+9Ch+var_20] +
mov [esp+9Ch+var_94] 1 +
mov [esp+9Ch+var_90] 0 +
mov [esp+9Ch+var_9C] 10h +
mov [esp+9Ch+var_98] 0 +
call sub_403CC0  +
test eax eax +
jnz loc_41E824  +
mov eax [esp+9Ch+var_7C] +
cmp word ptr [eax] 0 +
jnz loc_41E8A0  +
mov ebp eax +
jmp loc_41E8C4  +
mov eax [esp+9Ch+var_68] +
add [esp+9Ch+var_6C] eax +
test eax eax +
jnz loc_41E7A0  +
mov ebp [esp+9Ch+var_7C] +
jmp loc_41E6F2  +
mov ebp [esp+9Ch+var_7C] +
lea eax [esp+9Ch+var_1A+2] +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov edx [esp+9Ch+var_50] +
mov ecx [edx+24h] +
test ecx ecx +
jz loc_41E931  +
mov edx [esp+9Ch+var_44] +
lea edi [edx+eax] +
jmp loc_41E6F4  +
mov eax ds:_iob +
mov [esp+9Ch+var_94] 12h +
mov [esp+9Ch+var_98] 1 +
mov [esp+9Ch+var_9C] offset a0Local +
add eax 20h +
mov [esp+9Ch+var_90] eax +
call fwrite  +
jmp loc_41E5A8  +
mov [esp+9Ch+var_9C] offset aInvalidIndexIn +
call sub_437070  +
jmp loc_41E5A8  +
cmp eax [edx+20h] +
mov edi offset aInvalid +
jnb loc_41E6F4  +
nop   +
jmp loc_41E8E7  +
mov esi [esp+9Ch+var_60] +
mov [esp+9Ch+var_9C] 14h +
mov [esp+9Ch+var_98] 0 +
mov eax esi +
call sub_40B840  +
mov [esp+9Ch+var_7C] edi +
mov ebx eax +
jmp loc_41E9AA  +
lea eax [esp+9Ch+var_10] +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov [esp+9Ch+var_98] 2 +
mov edi eax +
lea eax [esp+80h] +
add ebx edi +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
movzx edx word ptr [ebp+0] +
and dx 7FFFh +
cmp dx ax +
jz loc_41E9FC  +
test edi edi +
jz loc_41E9E2  +
mov [esp+9Ch+var_8C] offset aVersionDef +
mov ecx ebx +
mov edx esi +
mov [esp+9Ch+var_94] 1 +
lea eax [esp+9Ch+var_20] +
mov [esp+9Ch+var_90] 0 +
mov [esp+9Ch+var_9C] 14h +
mov [esp+9Ch+var_98] 0 +
call sub_403CC0  +
test eax eax +
jnz loc_41E964  +
mov edi [esp+9Ch+var_7C] +
jmp loc_41E712  +
mov [esp+9Ch+var_9C] offset aCorruptVersion +
call sub_437070  +
jmp loc_41DECD  +
lea eax [esp+9Ch+var_14] +
mov esi edi +
mov edi [esp+9Ch+var_7C] +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] eax +
call ds:dword_472C94  +
mov edx [esp+9Ch+var_60] +
mov [esp+9Ch+var_8C] offset aVersionDefAux +
mov [esp+9Ch+var_94] 1 +
mov [esp+9Ch+var_90] 0 +
mov [esp+9Ch+var_9C] 8 +
mov [esp+9Ch+var_98] 0 +
sub eax esi +
lea ecx [eax+ebx] +
lea eax [esp+9Ch+var_30] +
mov esi eax +
call sub_403CC0  +
test eax eax +
jz loc_41E5A8  +
mov [esp+9Ch+var_98] 4 +
mov [esp+9Ch+var_9C] esi +
call ds:dword_472C94  +
mov edx [esp+9Ch+var_50] +
mov ebx [edx+24h] +
test ebx ebx +
jnz loc_41EA7E  +
cmp eax [edx+20h] +
jnb loc_41EAA3  +
cmp edi offset aInvalid +
jnz loc_41EAAD  +
mov edx [esp+9Ch+var_44] +
lea edi [edx+eax] +
jmp loc_41E712  +
mov eax [esp+9Ch+var_7C] +
mov [esp+9Ch+var_9C] eax +
call free  +
jmp loc_41E5DA  +
mov edi offset aInvalid +
jmp loc_41E716  +
test edi edi +
nop   +
jz loc_41EA86  +
mov edi offset aBoth +
jmp loc_41E716  +
mov [esp+9Ch+var_54] 0 +
jmp loc_41E688  +
mov [esp+9Ch+var_6C] 0 +
jmp loc_41E2E4  +
***
push edi  +
mov ecx 6FFFFFF5h +
push esi  +
push ebx  +
sub esp 0CCh +
mov [esp+0D8h+var_D4] offset sub_416490 +
mov [esp+0D8h+var_D8] 0 +
mov [esp+0D8h+var_A8] eax +
call sub_406B50  +
mov eax offset a_mips_abiflags +
call sub_402450  +
test eax eax +
jz loc_41EB4E  +
mov edx [eax+20h] +
xor edx 18h +
or edx [eax+24h] +
jz loc_41F572  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 1Ch +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aCorruptAbiFlag +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov esi ds:dword_471D44 +
test esi esi +
mov ebx esi +
jz loc_41ED0B  +
mov edi ds:dword_472088 +
mov eax edi +
shl eax 4 +
add eax esi +
cmp esi eax +
jnb loc_420CDE  +
mov eax [esi+4] +
mov edx [esi] +
mov [esp+0D8h+var_80] 0 +
mov [esp+0D8h+var_7C] 0 +
mov ecx eax +
or ecx edx +
mov [esp+0D8h+var_68] 0 +
mov [esp+0D8h+var_64] 0 +
mov [esp+0D8h+var_74] 0 +
mov [esp+0D8h+var_70] 0 +
mov [esp+0D8h+var_54] 0 +
mov [esp+0D8h+var_50] 0 +
mov [esp+0D8h+var_6C] 0 +
mov [esp+0D8h+var_60] 0 +
mov [esp+0D8h+var_88] 0 +
mov [esp+0D8h+var_84] 0 +
mov [esp+0D8h+var_58] 0 +
mov [esp+0D8h+var_40] 0 +
mov [esp+0D8h+var_5C] 0 +
jz loc_420D6F  +
mov [esp+0D8h+var_90] 0 +
xor ebp ebp +
mov [esp+0D8h+var_A0] 0 +
mov [esp+0D8h+var_78] 0 +
mov ecx edx +
xor ecx 7000000Ah +
or ecx eax +
jz loc_41EEC0  +
cmp eax 0 +
mov ecx edx +
ja loc_41ED77  +
cmp edx 7000000Ah +
ja loc_41ED77  +
xor ecx 14h +
or ecx eax +
jz loc_41EED3  +
cmp edx 14h +
mov ecx edx +
ja loc_41EE00  +
xor ecx 2 +
or ecx eax +
jz loc_41EEB0  +
xor edx 3 +
or edx eax +
jnz loc_41EC80  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+0D8h+var_88] eax +
mov [esp+0D8h+var_84] edx +
lea esi [esi+0] +
mov eax edi +
add ebx 10h +
shl eax 4 +
add eax esi +
cmp ebx eax +
jnb loc_41EC99  +
mov eax [ebx+4] +
mov edx [ebx] +
mov ecx eax +
or ecx edx +
jnz loc_41EC20  +
mov edi [esp+0D8h+var_78] +
test edi edi +
setnz bl  +
test ebp ebp +
setnz al  +
and eax ebx +
test al al +
jz loc_41ECBB  +
mov esi ds:dword_471D38 +
test esi esi +
jnz loc_41FA13  +
mov ebx [esp+0D8h+var_90] +
test ebx ebx +
jz loc_41ED24  +
mov ecx ds:dword_471DA4 +
test ecx ecx +
jz loc_41ECFF  +
mov eax ds:dword_471D4C +
cmp dword ptr [eax+4] 7000000Dh +
jz loc_42105A  +
add eax 48h +
xor edx edx +
jmp loc_41ECF8  +
mov ebx eax +
add eax 48h +
cmp dword ptr [eax-44h] 7000000Dh +
jz loc_41F804  +
add edx 1 +
cmp edx ecx +
jnz loc_41ECE6  +
mov [esp+0D8h+var_D8] offset aNoMips_options +
call sub_436A70  +
xor eax eax +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-4+arg_5C] +
mov [esp+0] eax +
call free  +
mov eax [esp-4+arg_34] +
test eax eax +
jnz loc_41EF50  +
mov eax [esp-4+arg_60] +
or eax [esp-4+arg_64] +
jnz loc_41F0D0  +
mov eax [esp-4+arg_68] +
or eax [esp-4+arg_74] +
jz loc_41ED67  +
mov eax [esp-4+arg_80] +
or eax [esp-4+arg_84] +
jz loc_41ED67  +
mov ebp [esp-4+arg_7C] +
test ebp ebp +
jnz loc_41FCA1  +
add esp 0CCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx 70000011h +
or ecx eax +
jz loc_41EF28  +
cmp eax 0 +
mov ecx edx +
ja loc_41EDC0  +
cmp edx 70000011h +
ja loc_41EDC0  +
xor ecx 7000000Bh +
or ecx eax +
jz loc_41EF40  +
xor edx 70000010h +
or edx eax +
jnz loc_41EC80  +
mov eax [ebx+8] +
mov [esp+0D8h+var_78] eax +
jmp loc_41EC80  +
xor ecx 70000029h +
or ecx eax +
jz loc_41EEF5  +
mov ecx edx +
xor ecx 70000032h +
or ecx eax +
jz loc_41EEE2  +
xor edx 70000013h +
or edx eax +
jnz loc_41EC80  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+0D8h+var_68] eax +
mov [esp+0D8h+var_64] edx +
jmp loc_41EC80  +
xor ecx 70000008h +
or ecx eax +
jz loc_41EE77  +
cmp eax 0 +
ja loc_41EE40  +
cmp edx 70000008h +
ja loc_41EE40  +
xor edx 17h +
or edx eax +
jnz loc_41EC80  +
mov eax [ebx+8] +
mov [esp+0D8h+var_54] eax +
mov eax [ebx+0Ch] +
mov [esp+0D8h+var_50] eax +
jmp loc_41EC80  +
mov eax [esp+0D8h+var_78] +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov [esp+0D8h+var_D4] 0 +
lea eax [eax+eax*4] +
shl eax 2 +
mov [esp+0D8h+var_D8] eax +
mov eax [esp+0D8h+var_A8] +
call sub_40B840  +
mov esi ds:dword_471D44 +
mov edi ds:dword_472088 +
mov ebp eax +
jmp loc_41EC80  +
mov eax [esp+0D8h+var_A0] +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov [esp+0D8h+var_D4] 0 +
shl eax 2 +
mov [esp+0D8h+var_D8] eax +
mov eax [esp+0D8h+var_A8] +
call sub_40B840  +
mov esi ds:dword_471D44 +
mov edi ds:dword_472088 +
mov [esp+0D8h+var_5C] eax +
jmp loc_41EC80  +
mov eax [ebx+8] +
mov [esp+0D8h+var_40] eax +
jmp loc_41EC80  +
mov eax [ebx+8] +
mov [esp+0D8h+var_74] eax +
mov eax [ebx+0Ch] +
mov [esp+0D8h+var_70] eax +
jmp loc_41EC80  +
mov eax [ebx+8] +
mov [esp+0D8h+var_58] eax +
jmp loc_41EC80  +
mov eax [ebx+8] +
mov [esp+0D8h+var_6C] eax +
mov eax [ebx+0Ch] +
mov [esp+0D8h+var_60] eax +
jmp loc_41EC80  +
mov edx [ebx+8] +
mov ecx [ebx+0Ch] +
mov eax [esp+0D8h+var_A8] +
mov [esp+0D8h+var_D8] 0 +
mov [esp+0D8h+var_D4] 0 +
call sub_40B840  +
mov esi ds:dword_471D44 +
mov edi ds:dword_472088 +
mov [esp+0D8h+var_90] eax +
jmp loc_41EC80  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+0D8h+var_80] eax +
mov [esp+0D8h+var_7C] edx +
jmp loc_41EC80  +
mov eax [ebx+8] +
mov [esp+0D8h+var_A0] eax +
jmp loc_41EC80  +
mov eax [esp-4+arg_78] +
test eax eax +
jz loc_41ED30  +
mov ebp ds:dword_472070 +
test ebp ebp +
jz loc_420DA1  +
mov eax [esp-4+arg_34] +
mov [esp-4+arg_0] 4 +
mov [esp+0] eax +
call sub_42C2B0  +
test eax eax +
mov esi eax +
jz loc_421063  +
mov edi ds:dword_471CF0 +
mov [esp-4+arg_C] offset aConflict +
test edi edi +
jz loc_41F9A8  +
mov eax [esp-4+arg_34] +
mov ecx [esp-4+arg_78] +
mov edx [esp-4+arg_2C] +
mov [esp-4+arg_4] 4 +
mov [esp+0] eax +
xor eax eax +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] 0 +
call sub_403CC0  +
test eax eax +
mov edi eax +
jz loc_41ED0B  +
mov ebp [esp-4+arg_34] +
xor ebx ebx +
mov [esp-4+arg_5C] eax +
mov [esp+0] edi +
add edi 4 +
mov [esp-4+arg_0] 4 +
call ds:dword_472C94  +
mov [esi+ebx*4] eax +
add ebx 1 +
cmp ebx ebp +
jb loc_41EFE0  +
mov edi [esp-4+arg_5C] +
xor ebx ebx +
mov [esp+0] edi +
call free  +
mov edi [esp-4+arg_34] +
mov dword ptr [esp+0] offset aSection_confli +
mov [esp-4+arg_0] edi +
call printf  +
mov dword ptr [esp+0] offset aNumIndexValueN +
call puts  +
jmp loc_41F053  +
mov dword ptr [esp+0] offset aCorruptSymbolI +
call printf  +
mov dword ptr [esp+0] 0Ah +
add ebx 1 +
call putchar  +
cmp ebx edi +
jnb loc_420485  +
mov eax [esi+ebx*4] +
mov [esp-4+arg_0] ebx +
mov dword ptr [esp+0] offset a5lu8lu +
mov [esp-4+arg_4] eax +
call printf  +
mov eax [esi+ebx*4] +
cmp eax ds:dword_472074 +
jnb loc_41F030  +
mov ebp ds:dword_472070 +
shl eax 5 +
mov ecx 5 +
add ebp eax +
mov edx [ebp+4] +
mov eax [ebp+0] +
call sub_4055F0  +
mov dword ptr [esp+0] 20h +
call putchar  +
mov edx ds:dword_472084 +
mov eax [ebp+10h] +
test edx edx +
jz loc_41F0B5  +
cmp eax ds:dword_472080 +
jb loc_420452  +
mov [esp-4+arg_0] eax +
mov dword ptr [esp+0] offset aCorrupt14ld_0 +
call printf  +
jmp loc_41F03C  +
mov eax [esp-4+arg_4C] +
mov edx [esp-4+arg_50] +
mov edi eax +
or edi edx +
jz loc_41ED3E  +
cmp ds:dword_471CF0 1 +
mov esi [esp-4+arg_64] +
sbb ecx ecx +
and ecx 4 +
add ecx 4 +
cmp ds:dword_471CF0 1 +
sbb eax eax +
mov [esp-4+arg_5C] eax +
mov eax [esp-4+arg_60] +
imul esi ecx +
and [esp-4+arg_5C] 4 +
add [esp-4+arg_5C] 4 +
mul  ecx +
add edx esi +
add eax [esp-4+arg_4C] +
adc edx [esp-4+arg_50] +
mov [esp-4+arg_3C] eax +
mov eax [esp-4+arg_70] +
cmp [esp-4+arg_58] eax +
mov [esp-4+arg_40] edx +
ja loc_41F160  +
jnb loc_41F156  +
mov eax [esp-4+arg_54] +
mov dword ptr [esp+0] offset aTheGotSymbolOf +
mov [esp-4+arg_4] eax +
mov eax [esp-4+arg_6C] +
mov [esp-4+arg_0] eax +
call sub_436A70  +
xor eax eax +
jmp loc_41ED0D  +
mov eax [esp-4+arg_6C] +
cmp [esp-4+arg_54] eax +
jb loc_41F133  +
mov eax [esp-4+arg_54] +
mov edx [esp-4+arg_58] +
sub eax [esp-4+arg_6C] +
sbb edx [esp-4+arg_70] +
mov ebx [esp-4+arg_40] +
mov esi edx +
imul esi ecx +
mul  ecx +
mov ecx [esp-4+arg_3C] +
add edx esi +
add eax ecx +
adc edx ebx +
mov esi eax +
cmp ebx edx +
mov edi edx +
jnb loc_41FC76  +
mov eax [esp-4+arg_4C] +
mov ecx esi +
mov ebx edi +
mov edx [esp-4+arg_50] +
mov ebp [esp-4+arg_2C] +
sub ecx eax +
sbb ebx edx +
mov [esp-4+arg_34] ecx +
mov [esp+0] ecx +
mov ecx edx +
mov edx eax +
mov [esp-4+arg_0] ebx +
mov eax ebp +
mov [esp-4+arg_38] ebx +
call sub_40B840  +
mov ecx [esp-4+arg_34] +
mov edx ebp +
mov ebx [esp-4+arg_38] +
mov [esp-4+arg_C] offset aGlobalOffsetTa +
mov [esp-4+arg_4] 1 +
mov [esp+0] ecx +
mov [esp-4+arg_8] 0 +
mov ecx eax +
xor eax eax +
mov [esp-4+arg_0] ebx +
call sub_403CC0  +
test eax eax +
mov ecx eax +
jz loc_41ED0B  +
mov edx esi +
mov esi [esp-4+arg_4C] +
mov edi [esp-4+arg_50] +
mov dword ptr [esp+0] offset aPrimaryGot +
mov [esp-4+arg_34] ecx +
sub edx esi +
mov eax edx +
add eax ecx +
mov ebx eax +
mov [esp-4+arg_44] eax +
call puts  +
mov dword ptr [esp+0] offset aCanonicalGpVal +
call printf  +
mov eax esi +
mov edx edi +
add eax 7FF0h +
mov ecx 6 +
adc edx 0 +
call sub_4055F0  +
mov dword ptr [esp+0] offset asc_44C39D +
call puts  +
mov dword ptr [esp+0] offset aReservedEntrie +
call puts  +
mov eax [esp-4+arg_5C] +
mov [esp-4+arg_10] offset aInitial +
mov [esp-4+arg_8] offset aAccess +
mov [esp-4+arg_4] offset aAddress +
lea ebp [eax+eax] +
mov [esp-4+arg_C] ebp +
mov [esp-4+arg_0] ebp +
mov dword ptr [esp+0] offset aS10sSPurpose +
call printf  +
mov ecx edi +
mov edx esi +
mov [esp-4+arg_4] ebx +
mov ebx [esp-4+arg_34] +
mov [esp+0] esi +
mov [esp-4+arg_0] edi +
mov [esp-4+arg_4C] esi +
mov eax ebx +
mov [esp-4+arg_50] edi +
call sub_4057E0  +
mov dword ptr [esp+0] offset aLazyResolver +
mov edi eax +
mov esi edx +
call puts  +
mov edx edi +
and edx esi +
cmp edx 0FFFFFFFFh +
jz loc_41F561  +
mov eax [esp-4+arg_5C] +
mov edx edi +
sub edx [esp-4+arg_4C] +
mov [esp-4+arg_0] eax +
mov eax edx +
add eax ebx +
mov [esp+0] eax +
call ds:dword_472C94  +
mov ebx [esp-4+arg_5C] +
lea ecx ds:0FFFFFFFFh[ebx*8] +
xor ebx ebx +
shrd eax edx +
shr edx cl +
test cl 20h +
cmovnz eax edx +
cmovnz edx ebx +
mov ebx edx +
or ebx eax +
jnz loc_4204D9  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
cmp esi [esp-4+arg_40] +
ja loc_41F3C2  +
jb loc_41F32F  +
cmp edi [esp-4+arg_3C] +
jnb loc_41F3C2  +
mov dword ptr [esp+0] offset aLocalEntries +
call puts  +
mov [esp-4+arg_10] offset aInitial +
mov [esp-4+arg_C] ebp +
mov [esp-4+arg_8] offset aAccess +
mov [esp-4+arg_4] offset aAddress +
mov [esp-4+arg_0] ebp +
mov dword ptr [esp+0] offset aS10sS +
call printf  +
mov ebx [esp-4+arg_5C] +
mov eax [esp-4+arg_44] +
mov ecx [esp-4+arg_50] +
mov edx [esp-4+arg_4C] +
mov [esp+0] edi +
mov [esp-4+arg_4] eax +
mov eax [esp-4+arg_34] +
mov [esp-4+arg_0] esi +
call sub_4057E0  +
mov dword ptr [esp+0] 0Ah +
mov edi eax +
mov esi edx +
call putchar  +
mov eax edi +
and eax esi +
cmp eax 0FFFFFFFFh +
jz loc_41F561  +
cmp [esp-4+arg_40] esi +
jnb loc_420A31  +
mov dword ptr [esp+0] 0Ah +
mov [esp-4+arg_5C] ebx +
call putchar  +
mov eax [esp-4+arg_70] +
cmp [esp-4+arg_58] eax +
jb loc_41F561  +
ja loc_41F3E0  +
mov eax [esp-4+arg_6C] +
cmp [esp-4+arg_54] eax +
jbe loc_41F561  +
mov dword ptr [esp+0] offset aGlobalEntries +
call puts  +
mov [esp-4+arg_24] offset aName +
mov [esp-4+arg_20] offset aNdx +
mov [esp-4+arg_1C] offset aType +
mov [esp-4+arg_18] offset aSym_val_ +
mov [esp-4+arg_14] ebp +
mov [esp-4+arg_10] offset aInitial +
mov [esp-4+arg_C] ebp +
mov [esp-4+arg_8] offset aAccess +
mov [esp-4+arg_4] offset aAddress +
mov [esp-4+arg_0] ebp +
mov dword ptr [esp+0] offset aS10sSS7s3sS +
call printf  +
cmp ds:dword_471CF0 1 +
sbb eax eax +
imul ebx [esp-4+arg_5C] +
and eax 50h +
cmp [esp-4+arg_58] 0 +
lea eax [eax+ebx+33h] +
mov ebx [esp-4+arg_6C] +
mov [esp-4+arg_60] eax +
ja loc_41F46A  +
cmp [esp-4+arg_54] ebx +
jbe loc_41F555  +
mov eax [esp-4+arg_6C] +
shl eax 5 +
mov [esp-4+arg_5C] eax +
mov eax [esp-4+arg_44] +
mov ecx [esp-4+arg_50] +
mov edx [esp-4+arg_4C] +
mov [esp+0] edi +
mov [esp-4+arg_4] eax +
mov eax [esp-4+arg_34] +
mov [esp-4+arg_0] esi +
call sub_4057E0  +
mov dword ptr [esp+0] 20h +
mov edi eax +
mov esi edx +
call putchar  +
mov ebp ds:dword_472070 +
test ebp ebp +
jz loc_421076  +
cmp ds:dword_472074 ebx +
jbe loc_420A70  +
add ebp [esp-4+arg_5C] +
mov ecx 6 +
mov edx [ebp+4] +
mov eax [ebp+0] +
call sub_4055F0  +
mov eax [ebp+18h] +
call sub_4120D0  +
mov [esp-4+arg_3C] eax +
movzx eax byte ptr [ebp+14h] +
and eax 0Fh +
call sub_407ED0  +
mov edx [esp-4+arg_3C] +
mov dword ptr [esp+0] offset a7s3s +
mov [esp-4+arg_4] edx +
mov [esp-4+arg_0] eax +
call printf  +
mov edx ds:dword_472084 +
mov eax [ebp+10h] +
test edx edx +
jz loc_41F51C  +
cmp eax ds:dword_472080 +
jb loc_420DF7  +
mov [esp-4+arg_0] eax +
mov dword ptr [esp+0] offset aCorrupt14ld_0 +
call printf  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov eax edi +
and eax esi +
cmp eax 0FFFFFFFFh +
jz loc_41F555  +
add ebx 1 +
xor edx edx +
add [esp-4+arg_5C] 20h +
cmp edx [esp-4+arg_58] +
jbe loc_420A50  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov eax [esp-4+arg_34] +
mov [esp+0] eax +
call free  +
jmp loc_41ED3E  +
mov ecx [eax+18h] +
xor eax eax +
mov edx [esp+0D8h+var_A8] +
mov [esp+0D8h+var_C8] offset aMipsAbiFlagsSe +
mov [esp+0D8h+var_D0] 18h +
mov [esp+0D8h+var_CC] 0 +
mov [esp+0D8h+var_D8] 1 +
mov [esp+0D8h+var_D4] 0 +
call sub_403CC0  +
test eax eax +
mov esi eax +
jz loc_41EB4E  +
mov [esp+0D8h+var_D4] 2 +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 1 +
mov ebp eax +
lea eax [esi+2] +
movzx ebp bp +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 1 +
mov edi eax +
lea eax [esi+3] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_70] eax +
lea eax [esi+4] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_90] eax +
lea eax [esi+5] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_88] eax +
lea eax [esi+6] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_80] eax +
lea eax [esi+7] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_74] eax +
lea eax [esi+8] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_78] eax +
lea eax [esi+0Ch] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov ebx eax +
lea eax [esi+10h] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_A0] eax +
lea eax [esi+14h] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] ebp +
mov [esp+0D8h+var_D8] offset aMipsAbiFlagsVe +
mov [esp+0D8h+var_98] eax +
call printf  +
mov eax edi +
movzx edi al +
mov [esp+0D8h+var_D4] edi +
mov [esp+0D8h+var_D8] offset aIsaMipsD +
call printf  +
mov ecx [esp+0D8h+var_70] +
cmp cl 1 +
jbe loc_41F6F4  +
movzx ecx cl +
mov [esp+0D8h+var_D4] ecx +
mov [esp+0D8h+var_D8] offset aRD_0 +
call printf  +
movzx eax byte ptr [esp+0D8h+var_90] +
xor edx edx +
test eax eax +
jz loc_41F71A  +
cmp eax 1 +
mov dl 20h +
jz loc_41F71A  +
cmp eax 2 +
mov dl 40h +
jz loc_41F71A  +
cmp eax 3 +
mov dl 80h +
mov eax 0FFFFFFFFh +
cmovnz edx eax +
mov [esp+0D8h+var_D4] edx +
mov [esp+0D8h+var_D8] offset aGprSizeD +
call printf  +
movzx eax byte ptr [esp+0D8h+var_88] +
xor edx edx +
test eax eax +
jz loc_41F750  +
cmp eax 1 +
mov dl 20h +
jz loc_41F750  +
cmp eax 2 +
mov dl 40h +
jz loc_41F750  +
cmp eax 3 +
mov dl 80h +
mov eax 0FFFFFFFFh +
cmovnz edx eax +
mov [esp+0D8h+var_D4] edx +
mov [esp+0D8h+var_D8] offset aCpr1SizeD +
call printf  +
movzx eax byte ptr [esp+0D8h+var_80] +
xor edx edx +
test eax eax +
jz loc_41F786  +
cmp eax 1 +
mov dl 20h +
jz loc_41F786  +
cmp eax 2 +
mov dl 40h +
jz loc_41F786  +
cmp eax 3 +
mov dl 80h +
mov eax 0FFFFFFFFh +
cmovnz edx eax +
mov [esp+0D8h+var_D4] edx +
mov [esp+0D8h+var_D8] offset aCpr2SizeD +
call printf  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 9 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aFpAbi +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
movzx eax byte ptr [esp+0D8h+var_74] +
call sub_405720  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Fh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aIsaExtension +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [esp+0D8h+var_78] +
cmp eax 13h +
ja loc_42109A  +
jmp ds:off_44C594[eax*4]  +
mov [esp+0D8h+var_98] ebx +
mov eax [esp+0D8h+var_98] +
mov ecx [esp+0D8h+var_90] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+0D8h+var_C8] offset aOptions +
mov [esp+0D8h+var_D8] 1 +
mov [esp+0D8h+var_CC] edx +
mov edx [esp+0D8h+var_A8] +
mov [esp+0D8h+var_D0] eax +
xor eax eax +
mov [esp+0D8h+var_D4] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+0D8h+var_78] eax +
jz loc_41ED24  +
mov eax [esp+0D8h+var_98] +
xor ebp ebp +
mov [esp+0D8h+var_D4] 8 +
mov edx [eax+24h] +
mov eax [eax+20h] +
shrd eax edx +
mov [esp+0D8h+var_D8] eax +
call sub_42C2B0  +
mov [esp+0D8h+var_90] 0 +
test eax eax +
mov ebx eax +
mov [esp+0D8h+var_4C] eax +
jz loc_421087  +
mov eax [esp+0D8h+var_78] +
mov [esp+0D8h+var_D4] 1 +
lea esi [eax+ebp] +
mov [esp+0D8h+var_D8] esi +
call ds:dword_472C94  +
mov [ebx] al +
lea eax [esi+1] +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [ebx+1] al +
lea eax [esi+2] +
add esi 4 +
mov [esp+0D8h+var_D4] 2 +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [ebx+2] ax +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_D8] esi +
call ds:dword_472C94  +
movzx ecx byte ptr [ebx+1] +
cmp cl 7 +
mov [ebx+4] eax +
jbe loc_41F902  +
mov eax [esp+0D8h+var_98] +
xor edi edi +
add ebp ecx +
mov esi ebp +
mov edx [eax+24h] +
mov eax [eax+20h] +
cmp edi edx +
jbe loc_41F920  +
mov [esp+0D8h+var_D4] ecx +
mov [esp+0D8h+var_D8] offset aInvalidSizeUFo +
call sub_436A70  +
add esp 0CCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jb loc_41F926  +
cmp ebp eax +
ja loc_41F902  +
add ebx 8 +
add [esp+0D8h+var_90] 1 +
add eax 0FFFFFFF8h +
adc edx 0FFFFFFFFh +
cmp edx edi +
jnb loc_41F990  +
mov eax [esp+0D8h+var_98] +
call sub_401C80  +
mov edi [esp+0D8h+var_90] +
mov [esp+0D8h+var_D8] offset aSectionSContai +
mov [esp+0D8h+var_D0] edi +
mov [esp+0D8h+var_D4] eax +
call printf  +
mov ebp [esp+0D8h+var_4C] +
mov [esp+0D8h+var_98] 0 +
add ebp 8 +
nop   +
lea esi [esi+0] +
test edi edi +
jle loc_41ED18  +
movzx eax byte ptr [ebp-8] +
cmp al 0Ah +
ja loc_4204B5  +
jmp ds:off_44C5E4[eax*4]  +
ja loc_41F885  +
cmp eax esi +
nop   +
lea esi [esi+0] +
jnb loc_41F885  +
jmp loc_41F938  +
mov eax [esp-4+arg_34] +
mov ecx [esp-4+arg_78] +
mov edx [esp-4+arg_2C] +
mov [esp-4+arg_4] 8 +
mov [esp+0] eax +
xor eax eax +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] 0 +
call sub_403CC0  +
test eax eax +
mov edi eax +
jz loc_41ED0B  +
mov ebp [esp-4+arg_34] +
xor ebx ebx +
mov [esp-4+arg_5C] eax +
lea esi [esi+0] +
mov [esp+0] edi +
add edi 8 +
mov [esp-4+arg_0] 8 +
call ds:dword_472C94  +
mov [esi+ebx*4] eax +
add ebx 1 +
cmp ebx ebp +
jb loc_41F9F0  +
jmp loc_41EFFE  +
mov esi [esp+0D8h+var_78] +
xor eax eax +
mov ecx ebp +
mov edx [esp+0D8h+var_A8] +
mov [esp+0D8h+var_C8] offset aLiblistSection +
mov [esp+0D8h+var_D0] 14h +
mov [esp+0D8h+var_CC] 0 +
mov [esp+0D8h+var_D8] esi +
mov [esp+0D8h+var_D4] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+0D8h+var_3C] eax +
jz loc_41ECBB  +
mov [esp+0D8h+var_D4] esi +
mov [esp+0D8h+var_D8] offset aSection_liblis +
call printf  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 47h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aLibraryTimeS_0 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
test bl bl +
jz loc_41FC62  +
mov ebp [esp+0D8h+var_3C] +
mov [esp+0D8h+var_98] 0 +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_D8] ebp +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov ebx eax +
lea eax [ebp+4] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_30] eax +
lea eax [ebp+8] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_4C] eax +
lea eax [ebp+0Ch] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov esi eax +
lea eax [ebp+10h] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_44] eax +
lea eax [esp+0D8h+var_30] +
mov [esp+0D8h+var_D8] eax +
call gmtime  +
mov edx [eax+8] +
mov ecx eax +
mov edi [eax+4] +
mov eax [eax+0Ch] +
mov [esp+0D8h+var_48] eax +
mov eax [ecx] +
mov [esp+0D8h+var_C0] edx +
mov [esp+0D8h+var_BC] edi +
mov [esp+0D8h+var_B8] eax +
mov eax [esp+0D8h+var_48] +
mov [esp+0D8h+var_C4] eax +
mov eax [ecx+10h] +
add eax 1 +
mov [esp+0D8h+var_C8] eax +
mov eax [ecx+14h] +
mov [esp+0D8h+var_D0] offset a04u02u02ut02u0 +
mov [esp+0D8h+var_D4] 14h +
add eax 76Ch +
mov [esp+0D8h+var_CC] eax +
lea eax [esp+0D8h+var_2C] +
mov [esp+0D8h+var_D8] eax +
call sub_402590  +
mov eax [esp+0D8h+var_98] +
mov [esp+0D8h+var_D8] offset a3lu_0 +
mov [esp+0D8h+var_D4] eax +
call printf  +
mov edx ds:dword_472084 +
test edx edx +
jz loc_41FBB8  +
cmp ebx ds:dword_472080 +
jb loc_420474  +
mov [esp+0D8h+var_D4] ebx +
mov [esp+0D8h+var_D8] offset aCorrupt9ld +
call printf  +
mov eax [esp+0D8h+var_4C] +
xor ebx ebx +
mov [esp+0D8h+var_CC] esi +
mov [esp+0D8h+var_D8] offset aS10lx7ld +
mov [esp+0D8h+var_D0] eax +
lea eax [esp+0D8h+var_2C] +
mov [esp+0D8h+var_D4] eax +
call printf  +
mov edi [esp+0D8h+var_44] +
test edi edi +
jnz loc_41FC08  +
jmp loc_420463  +
add ebx 1 +
cmp ebx 6 +
jz loc_41FC38  +
mov esi ds:dword_4619C4[ebx*8] +
test edi esi +
jz loc_41FC00  +
mov eax ds:_iob +
xor edi esi +
add eax 20h +
mov [esp+0D8h+var_D4] eax +
mov eax ds:off_4619C0[ebx*8] +
add ebx 1 +
mov [esp+0D8h+var_D8] eax +
call fputs  +
cmp ebx 6 +
jnz loc_41FC08  +
test edi edi +
jnz loc_4204A0  +
mov [esp+0D8h+var_D8] offset unk_44640B +
call puts  +
add [esp+0D8h+var_98] 1 +
add ebp 14h +
mov eax [esp+0D8h+var_78] +
cmp [esp+0D8h+var_98] eax +
jb loc_41FAA5  +
mov eax [esp+0D8h+var_3C] +
mov [esp+0D8h+var_D8] eax +
call free  +
jmp loc_41ECBB  +
ja loc_41FC86  +
cmp [esp-4+arg_3C] eax +
lea esi [esi+0] +
jbe loc_41F191  +
mov eax [esp-4+arg_54] +
mov dword ptr [esp+0] offset aTooManyGotSymb +
mov [esp-4+arg_0] eax +
call sub_436A70  +
xor eax eax +
jmp loc_41ED0D  +
mov edi [esp-4+arg_94] +
test edi edi +
jz loc_41ED67  +
mov eax [esp-4+arg_94] +
mov edx [esp-4+arg_80] +
mov ecx [esp-4+arg_84] +
mov [esp-4+arg_0] 0 +
mov [esp+0] eax +
mov eax [esp-4+arg_2C] +
call sub_40B840  +
lea edx [esp-4+arg_A4] +
mov ecx [esp-4+arg_94] +
cmp [esp-4+arg_7C] 7 +
mov [esp-4+arg_0] edx +
lea edx [esp-4+arg_A8] +
mov [esp+0] edx +
mov edx eax +
mov eax [esp-4+arg_2C] +
jz loc_420DE5  +
call sub_404040  +
test eax eax +
jz loc_41ED0B  +
cmp ds:dword_471CF0 1 +
mov eax [esp-4+arg_A4] +
mov ebp [esp-4+arg_2C] +
sbb esi esi +
mov edx [esp-4+arg_68] +
xor edi edi +
and esi 4 +
mov ecx [esp-4+arg_74] +
add esi 4 +
add eax 2 +
mov ebx esi +
imul esi eax +
mov eax ebp +
mov [esp-4+arg_0] edi +
mov [esp+0] esi +
call sub_40B840  +
mov edx ebp +
mov [esp-4+arg_C] offset aProcedureLinka +
mov [esp-4+arg_4] 1 +
mov [esp-4+arg_8] 0 +
mov [esp+0] esi +
mov [esp-4+arg_0] edi +
mov ecx eax +
xor eax eax +
call sub_403CC0  +
test eax eax +
mov [esp-4+arg_5C] eax +
jz loc_41ED0B  +
mov dword ptr [esp+0] offset aPltGot +
lea esi [ebx+ebx] +
call puts  +
mov dword ptr [esp+0] offset aReservedEntrie +
call puts  +
mov [esp-4+arg_8] esi +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_C] offset aInitial +
mov [esp-4+arg_4] offset aAddress +
mov dword ptr [esp+0] offset aSSPurpose +
call printf  +
mov edi [esp-4+arg_68] +
mov ebp [esp-4+arg_74] +
mov eax [esp-4+arg_5C] +
mov [esp+0] edi +
mov edx edi +
mov ecx ebp +
mov [esp-4+arg_0] ebp +
call sub_405980  +
mov dword ptr [esp+0] offset aPltLazyResolve +
mov [esp-4+arg_30] edx +
mov [esp-4+arg_2C] eax +
call puts  +
mov edx [esp-4+arg_2C] +
mov ecx [esp-4+arg_30] +
mov eax [esp-4+arg_5C] +
mov [esp+0] edx +
mov edx edi +
mov [esp-4+arg_0] ecx +
mov ecx ebp +
call sub_405980  +
mov dword ptr [esp+0] offset aModulePointer +
mov [esp-4+arg_30] edx +
mov [esp-4+arg_2C] eax +
call puts  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov dword ptr [esp+0] offset aEntries +
call puts  +
mov [esp-4+arg_10] esi +
mov [esp-4+arg_8] esi +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_20] offset aName +
mov [esp-4+arg_1C] offset aNdx +
mov [esp-4+arg_18] offset aType +
mov [esp-4+arg_14] offset aSym_val_ +
mov [esp-4+arg_C] offset aInitial +
mov [esp-4+arg_4] offset aAddress +
mov dword ptr [esp+0] offset aSSS7s3sS +
call printf  +
mov eax ds:dword_471CF0 +
mov esi [esp-4+arg_A4] +
cmp eax 1 +
sbb edx edx +
imul ebx ebx +
and edx 50h +
lea edi [edx+ebx+3Eh] +
xor ebx ebx +
test esi esi +
mov [esp-4+arg_34] edi +
jnz loc_41FF2A  +
jmp loc_420DB4  +
shrd esi edi +
mov eax [esp-4+arg_2C] +
mov ebp esi +
mov edx [esp-4+arg_30] +
mov ecx [esp-4+arg_74] +
mov [esp+0] eax +
mov eax [esp-4+arg_5C] +
mov [esp-4+arg_0] edx +
mov edx [esp-4+arg_68] +
call sub_405980  +
mov dword ptr [esp+0] 20h +
mov [esp-4+arg_2C] eax +
mov [esp-4+arg_30] edx +
call putchar  +
cmp esi ds:dword_472074 +
jb loc_4209C0  +
mov [esp-4+arg_0] esi +
mov dword ptr [esp+0] offset aCorruptSymbo_0 +
call printf  +
mov dword ptr [esp+0] 0Ah +
add ebx 1 +
call putchar  +
cmp [esp-4+arg_A4] ebx +
jbe loc_420DB4  +
mov eax ds:dword_471CF0 +
mov ecx [esp-4+arg_A8] +
lea edx [ebx+ebx*2] +
test eax eax +
lea edx [ecx+edx*8] +
mov esi [edx+8] +
mov edi [edx+0Ch] +
jnz loc_41FEB3  +
mov esi edi +
jmp loc_41FEB7  +
mov eax [ebp-4] +
mov [esp+0D8h+var_D8] offset aGp_group06lxSe +
mov edx eax +
movzx eax ax +
shr edx 10h +
mov [esp+0D8h+var_D0] edx +
mov [esp+0D8h+var_D4] eax +
call printf  +
nop   +
lea esi [esi+0] +
mov eax [esp+0D8h+var_78] +
mov esi 8 +
mov edx [esp+0D8h+var_98] +
cmp byte ptr [ebp-7] 8 +
lea ebx [eax+edx] +
ja loc_41FF9B  +
jmp loc_41FFC4  +
mov [esp+0D8h+var_D8] eax +
add esi 1 +
call putchar  +
movzx eax byte ptr [ebp-7] +
cmp eax esi +
jbe loc_41FFC4  +
movzx eax byte ptr [ebx+esi] +
test byte ptr ds:word_4699A0[eax+eax] 10h +
jnz loc_41FF88  +
mov [esp+0D8h+var_D4] eax +
add esi 1 +
mov [esp+0D8h+var_D8] offset a03o +
call printf  +
movzx eax byte ptr [ebp-7] +
cmp eax esi +
ja loc_41FF9B  +
mov eax ds:_iob +
lea ebx [ebp+8] +
mov [esp+0D8h+var_D8] 0Ah +
add eax 20h +
mov [esp+0D8h+var_D4] eax +
call fputc  +
movzx eax byte ptr [ebp-7] +
add [esp+0D8h+var_98] eax +
jmp loc_420404  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Bh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aHwor +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
test al 1 +
jnz loc_42007F  +
test al 2 +
jz loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Dh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aR4keop_clean +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Bh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aHwand +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
test al 1 +
jz loc_42001B  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Fh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aR4keop_checked +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_42001B  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ch +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aTags +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ch +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aFill +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Bh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aHwpatch +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
test al 1 +
jnz loc_420F57  +
test al 2 +
jnz loc_420F27  +
test al 4 +
jnz loc_420EF7  +
test al 8 +
nop   +
jz loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 8 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aR5kcvtl +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Bh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aPad_0 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
test al 1 +
jnz loc_420E37  +
test al 2 +
jnz loc_420E07  +
test al 4 +
jz loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 7 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aSymbol +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 14h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aExceptionsFpe_ +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
and eax 1Fh +
call sub_4064A0  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aFpe_max +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
and eax 1F00h +
shr eax 8 +
call sub_4064A0  +
mov eax ds:_iob +
mov [esp+0D8h+var_D8] 29h +
add eax 20h +
mov [esp+0D8h+var_D4] eax +
call fputc  +
mov eax [ebp-4] +
test eax 10000h +
jnz loc_420EC7  +
test eax 20000h +
jnz loc_420E97  +
test eax 40000h +
jnz loc_420E67  +
test eax 80000h +
jz loc_41FF70  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 8 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aDismiss +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_41FF70  +
mov [esp+0D8h+var_D8] offset aReginfo +
call printf  +
cmp ds:word_471D92 8 +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_D8] ebp +
jz loc_420F87  +
call ds:dword_472C94  +
lea ebx [ebp+8] +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_D8] ebx +
mov [esp+0D8h+var_3C] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_4C] eax +
lea eax [ebp+0Ch] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_48] eax +
lea eax [ebp+10h] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_44] eax +
lea eax [ebp+14h] +
add ebp 18h +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 8 +
mov [esp+0D8h+var_D8] ebp +
mov esi eax +
call ds:dword_472C94  +
mov ecx [esp+0D8h+var_3C] +
mov [esp+0D8h+var_D8] offset aGpr08lxGp0x +
mov [esp+0D8h+var_D4] ecx +
mov [esp+0D8h+var_8C] edx +
mov [esp+0D8h+var_90] eax +
call printf  +
mov edx [esp+0D8h+var_90] +
mov ecx [esp+0D8h+var_8C] +
mov [esp+0D8h+var_D4] offset a016i64x_0 +
mov [esp+0D8h+var_D0] edx +
mov edx ds:_iob +
mov [esp+0D8h+var_CC] ecx +
lea eax [edx+20h] +
mov [esp+0D8h+var_D8] eax +
call fprintf  +
mov [esp+0D8h+var_D8] 0Ah +
call putchar  +
mov eax [esp+0D8h+var_4C] +
mov [esp+0D8h+var_C8] esi +
mov esi [esp+0D8h+var_44] +
mov [esp+0D8h+var_D8] offset aCpr008lxCpr108 +
mov [esp+0D8h+var_D4] eax +
mov [esp+0D8h+var_CC] esi +
mov esi [esp+0D8h+var_48] +
mov [esp+0D8h+var_D0] esi +
call printf  +
sub edi 1 +
mov ebp ebx +
jmp loc_41F970  +
mov eax [ebp-4] +
mov [esp+0D8h+var_D0] eax +
movzx eax word ptr [ebp-6] +
mov [esp+0D8h+var_D8] offset aNullDLx +
mov [esp+0D8h+var_D4] eax +
call printf  +
jmp loc_41FF70  +
mov eax [ebp-4] +
mov [esp+0D8h+var_D8] offset aIdent06lxSelfC +
mov edx eax +
movzx eax ax +
shr edx 10h +
mov [esp+0D8h+var_D0] edx +
mov [esp+0D8h+var_D4] eax +
call printf  +
jmp loc_41FF70  +
add edx eax +
mov eax 19h +
call sub_405A30  +
jmp loc_41F03C  +
mov [esp+0D8h+var_D8] offset aNone_6 +
call puts  +
jmp loc_41FC4C  +
add edx ebx +
mov eax 14h +
call sub_405A30  +
jmp loc_41FBC8  +
mov [esp+0] esi +
call free  +
mov eax [esp-4+arg_60] +
or eax [esp-4+arg_64] +
jz loc_41ED3E  +
jmp loc_41F0D0  +
mov [esp+0D8h+var_D4] edi +
mov [esp+0D8h+var_D8] offset asc_44BFAA +
call printf  +
jmp loc_41FC40  +
mov edx [ebp-4] +
mov [esp+0D8h+var_CC] edx +
movzx edx word ptr [ebp-6] +
mov [esp+0D8h+var_D4] eax +
mov [esp+0D8h+var_D8] offset a3d???DLx +
mov [esp+0D8h+var_D0] edx +
call printf  +
jmp loc_41FF70  +
mov eax [esp-4+arg_44] +
mov ecx [esp-4+arg_50] +
mov edx [esp-4+arg_4C] +
mov [esp+0] edi +
mov [esp-4+arg_4] eax +
mov eax [esp-4+arg_34] +
mov [esp-4+arg_0] esi +
call sub_4057E0  +
mov dword ptr [esp+0] offset aModulePointerG +
mov edi eax +
mov esi edx +
call puts  +
mov eax edi +
and eax esi +
cmp eax 0FFFFFFFFh +
jnz loc_41F30D  +
jmp loc_41F561  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 1Fh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aStMicroelectro +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 6 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aAses +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
test bl 1 +
jnz loc_420BC0  +
test bl 2 +
jnz loc_420B93  +
test bl 4 +
jnz loc_420B66  +
test bl 8 +
jnz loc_420B39  +
test bl 10h +
jnz loc_420B0C  +
test bl 20h +
jnz loc_420ADF  +
test bl 40h +
jnz loc_420AB2  +
test bl 80h +
jnz loc_420A85  +
test bh 1 +
jnz loc_420CA1  +
test bh 2 +
nop   +
jnz loc_420C74  +
test bh 4 +
jnz loc_420C47  +
test bh 8 +
jnz loc_420C1A  +
test bh 10h +
jnz loc_420BED  +
test ebx ebx +
jz loc_420D7C  +
and ebx 0FFFFE000h +
jz loc_420615  +
mov eax ds:_iob +
mov [esp+0D8h+var_CC] ebx +
mov [esp+0D8h+var_D0] offset aUnknown_4 +
mov [esp+0D8h+var_D4] offset aSX +
add eax 20h +
mov [esp+0D8h+var_D8] eax +
call fprintf  +
mov eax [esp+0D8h+var_A0] +
mov [esp+0D8h+var_D8] offset aFlags18_8lx +
mov [esp+0D8h+var_D4] eax +
call printf  +
mov eax [esp+0D8h+var_98] +
mov [esp+0D8h+var_D8] offset aFlags28_8lx +
mov [esp+0D8h+var_D4] eax +
call printf  +
mov eax ds:_iob +
mov [esp+0D8h+var_D8] 0Ah +
add eax 20h +
mov [esp+0D8h+var_D4] eax +
call fputc  +
mov [esp+0D8h+var_D8] esi +
call free  +
jmp loc_41EB4E  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 1Fh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aStMicroelect_0 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aNecVr5500 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aNecVr5400 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aNecVr4120 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 11h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aNecVr4111Vr418 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Dh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aBroadcomSb1 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 17h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aCaviumNetworks +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 17h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aCaviumNetwor_0 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 17h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aCaviumNetwor_1 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 7 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aRmiXlr +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 4 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aNone_4 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Bh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMipsR10000 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Dh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aToshibaR3900 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aNecVr4100 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 9 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aLsiR4010 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMipsR4650 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Dh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aToshibaR5900 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 16h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aCaviumNetwor_2 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Bh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aLoongson3a +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420543  +
shl ebp 5 +
mov ecx 6 +
add ebp ds:dword_472070 +
mov edx [ebp+4] +
mov eax [ebp+0] +
call sub_4055F0  +
mov eax [ebp+18h] +
call sub_4120D0  +
mov esi eax +
movzx eax byte ptr [ebp+14h] +
and eax 0Fh +
call sub_407ED0  +
mov [esp-4+arg_4] esi +
mov dword ptr [esp+0] offset a7s3s +
mov [esp-4+arg_0] eax +
call printf  +
mov edx ds:dword_472084 +
mov eax [ebp+10h] +
test edx edx +
jz loc_420A1C  +
cmp eax ds:dword_472080 +
jb loc_420CCE  +
mov [esp-4+arg_0] eax +
mov dword ptr [esp+0] offset aCorrupt14ld_0 +
call printf  +
jmp loc_41FF09  +
ja loc_41F36B  +
cmp [esp-4+arg_3C] edi +
nop   +
lea esi [esi+0] +
ja loc_41F36B  +
jmp loc_41F3B2  +
jb loc_41F475  +
cmp ebx [esp-4+arg_54] +
lea esi [esi+0] +
jnb loc_41F555  +
jmp loc_41F475  +
mov [esp-4+arg_0] ebx +
mov dword ptr [esp+0] offset aSymbolIndexLuE +
call printf  +
jmp loc_41F52C  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Fh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aSmartmipsAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205B3  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 8 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMtAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205AA  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Dh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMips3dAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205A1  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMdmxAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420598  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 1Bh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMcuMicrocontro +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_42058F  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 14h +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aEnhancedVaSche +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420586  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ch +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aDspR2Ase +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_42057D  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 9 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aDspAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_420574  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 9 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aXpaAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205E9  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Fh +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMicromipsAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205D8  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ch +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMips16Ase +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205CF  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 9 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aMsaAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205C6  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 8 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aVzAse +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
jmp loc_4205BC  +
add edx eax +
mov eax [esp-4+arg_34] +
call sub_405A30  +
jmp loc_41FF09  +
mov [esp+0D8h+var_80] 0 +
mov [esp+0D8h+var_7C] 0 +
mov [esp+0D8h+var_68] 0 +
mov [esp+0D8h+var_64] 0 +
mov [esp+0D8h+var_74] 0 +
mov [esp+0D8h+var_70] 0 +
mov [esp+0D8h+var_54] 0 +
mov [esp+0D8h+var_50] 0 +
mov [esp+0D8h+var_6C] 0 +
mov [esp+0D8h+var_60] 0 +
mov [esp+0D8h+var_88] 0 +
mov [esp+0D8h+var_84] 0 +
mov [esp+0D8h+var_58] 0 +
mov [esp+0D8h+var_40] 0 +
mov [esp+0D8h+var_5C] 0 +
mov [esp+0D8h+var_A0] 0 +
jmp loc_41ED24  +
mov [esp+0D8h+var_A0] 0 +
jmp loc_41ED24  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] offset aNone_4 +
mov [esp+0D8h+var_D4] offset aS_24 +
add eax 20h +
mov [esp+0D8h+var_D8] eax +
call fprintf  +
jmp loc_420615  +
mov dword ptr [esp+0] offset aConflictListFo +
call sub_436A70  +
xor eax eax +
jmp loc_41ED0D  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov eax [esp-4+arg_5C] +
mov [esp+0] eax +
call free  +
mov eax [esp-4+arg_A8] +
mov [esp+0] eax +
call free  +
mov eax 1 +
jmp loc_41ED0D  +
call sub_4050F0  +
test eax eax +
jz loc_41ED0B  +
jmp loc_41FD16  +
add edx eax +
mov eax [esp-4+arg_60] +
call sub_405A30  +
jmp loc_41F52C  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 8 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aPostfix +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_4201BE  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 7 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aPrefix +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_4201B6  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 7 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aFpdbug +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_42029A  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 4 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aSmm +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_42028F  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 6 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aPage0 +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_420284  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 7 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aR5keop +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_42014C  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 0Ah +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aR8kpfetch +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_420144  +
mov eax ds:_iob +
mov [esp+0D8h+var_D0] 7 +
mov [esp+0D8h+var_D4] 1 +
mov [esp+0D8h+var_D8] offset aR4keop +
add eax 20h +
mov [esp+0D8h+var_CC] eax +
call fwrite  +
mov eax [ebp-4] +
jmp loc_42013C  +
call ds:dword_472C94  +
lea ebx [ebp+8] +
mov [esp+0D8h+var_D4] 4 +
mov esi eax +
lea eax [ebp+4] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_D8] ebx +
mov [esp+0D8h+var_90] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_4C] eax +
lea eax [ebp+0Ch] +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_48] eax +
lea eax [ebp+10h] +
add ebp 14h +
mov [esp+0D8h+var_D8] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] 4 +
mov [esp+0D8h+var_D8] ebp +
mov [esp+0D8h+var_44] eax +
call ds:dword_472C94  +
mov [esp+0D8h+var_D4] esi +
mov [esp+0D8h+var_D8] offset aGpr08lxGp0xLx +
mov [esp+0D8h+var_D0] eax +
call printf  +
mov esi [esp+0D8h+var_48] +
mov ecx [esp+0D8h+var_44] +
mov eax [esp+0D8h+var_90] +
mov [esp+0D8h+var_D8] offset aCpr008lxCpr108 +
mov [esp+0D8h+var_CC] esi +
mov esi [esp+0D8h+var_4C] +
mov [esp+0D8h+var_C8] ecx +
mov [esp+0D8h+var_D4] eax +
mov [esp+0D8h+var_D0] esi +
call printf  +
jmp loc_420404  +
mov [esp+0D8h+var_98] eax +
jmp loc_41F808  +
mov dword ptr [esp+0] offset aOutOfMemoryA_9 +
call sub_436A70  +
xor eax eax +
jmp loc_41ED0D  +
mov dword ptr [esp+0] offset aNoDynamicSymbo +
call printf  +
jmp loc_41F52C  +
mov [esp+0D8h+var_D8] offset aOutOfMemory_10 +
call sub_436A70  +
xor eax eax +
jmp loc_41ED0D  +
mov eax [esp+0D8h+var_78] +
mov [esp+0D8h+var_D0] offset aUnknown_4 +
mov [esp+0D8h+var_D4] offset aSD +
mov [esp+0D8h+var_CC] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+0D8h+var_D8] eax +
call fprintf  +
jmp loc_420543  +
***
push ebx  +
mov edx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
test edx edx +
jz loc_421120  +
mov eax [edx+24h] +
test eax eax +
jz loc_421120  +
mov edx [edx+28h] +
lea edx [edx+edx*2] +
lea ebx [eax+edx*8] +
cmp eax ebx +
jb loc_421107  +
jmp loc_421120  +
add eax 18h +
cmp eax ebx +
jnb loc_421120  +
mov ecx [eax+4] +
mov edx [eax] +
xor ecx edi +
xor edx esi +
or ecx edx +
jnz loc_421100  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
shl ebx 6 +
mov eax dword_44170C[ebx] +
add ebx offset off_441700 +
test eax eax +
jz loc_421176  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_471020 +
mov eax [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_0] +
mov edx esi +
mov [esp+1Ch+var_14] eax +
mov eax ebx +
shl eax 6 +
mov ebp off_441700[eax] +
lea edi off_441700[eax] +
mov eax ebp +
call sub_4024F0  +
test eax eax +
jz loc_4211E2  +
mov [edi+8] ebp +
test esi esi +
jz loc_4211CE  +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_10] eax +
call sub_421130  +
mov eax [esp+1Ch+var_10] +
mov ecx [esp+1Ch+var_14] +
add esp 1Ch +
mov edx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_409550  +
mov ecx [edi+4] +
mov edx esi +
mov eax ecx +
mov [esp+1Ch+var_10] ecx +
call sub_4024F0  +
test eax eax +
jz loc_421200  +
mov ecx [esp+1Ch+var_10] +
mov [edi+8] ecx +
jmp loc_4211BA  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 0CCh +
mov [esp+0CCh+var_C0] edx +
mov [esp+0CCh+var_C4] 1 +
mov [esp+0CCh+var_C8] 10h +
mov [esp+0CCh+var_CC] offset dword_471D60 +
mov [esp+0CCh+var_90] edx +
call fread  +
cmp eax 1 +
jz loc_421265  +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset aSFailedToReadF +
call sub_436A70  +
add esp 0CCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ds:byte_471D65 2 +
jz loc_42145A  +
mov ds:dword_472C94 offset sub_4371E0 +
mov ds:dword_472C98 offset loc_4370D0 +
xor eax eax +
cmp ds:byte_471D64 2 +
mov [esp+0CCh+var_C4] 1 +
setnz al  +
mov ds:dword_471CF0 eax +
test eax eax +
mov eax [esp+0CCh+var_90] +
mov [esp+0CCh+var_C0] eax +
jz loc_421473  +
lea esi [esp+0CCh+var_3C] +
mov [esp+0CCh+var_C8] 24h +
mov [esp+0CCh+var_CC] esi +
call fread  +
cmp eax 1 +
jnz loc_421245  +
mov [esp+0CCh+var_C8] 2 +
mov [esp+0CCh+var_CC] esi +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:word_471D90 ax +
lea eax [esp+0CCh+var_3C+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ds:word_471D92 ax +
lea eax [esp+0CCh+var_38] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ds:dword_471D88 eax +
lea eax [esp+0CCh+var_34] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ds:dword_471D70 eax +
lea eax [esp+0CCh+var_30] +
mov ds:dword_471D74 edx +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ds:dword_471D78 eax +
lea eax [esp+0CCh+var_2C] +
mov ds:dword_471D7C edx +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ds:dword_471D80 eax +
lea eax [esp+0CCh+var_28] +
mov ds:dword_471D84 edx +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D8C eax +
lea eax [esp+0CCh+var_24] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D94 eax +
lea eax [esp+0CCh+var_24+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D98 eax +
lea eax [esp+0CCh+var_20] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D9C eax +
lea eax [esp+0CCh+var_20+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471DA0 eax +
lea eax [esp+0CCh+var_1C] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471DA4 eax +
lea eax [esp+0CCh+var_1C+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov ds:dword_471DA8 eax +
jmp loc_421619  +
mov ds:dword_472C94 offset sub_436AD0 +
mov ds:dword_472C98 offset loc_437150 +
jmp loc_421286  +
lea esi [esp+0CCh+var_3C] +
mov [esp+0CCh+var_C8] 30h +
mov [esp+0CCh+var_CC] esi +
call fread  +
cmp eax 1 +
jnz loc_421245  +
mov [esp+0CCh+var_C8] 2 +
mov [esp+0CCh+var_CC] esi +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:word_471D90 ax +
lea eax [esp+0CCh+var_3C+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ds:word_471D92 ax +
lea eax [esp+0CCh+var_38] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 8 +
mov ds:dword_471D88 eax +
lea eax [esp+0CCh+var_34] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 8 +
mov ds:dword_471D70 eax +
lea eax [esp+0CCh+var_2C] +
mov ds:dword_471D74 edx +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 8 +
mov ds:dword_471D78 eax +
lea eax [esp+0CCh+var_24] +
mov ds:dword_471D7C edx +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ds:dword_471D80 eax +
lea eax [esp+0CCh+var_1C] +
mov ds:dword_471D84 edx +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D8C eax +
lea eax [esp+0CCh+var_18] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D94 eax +
lea eax [esp+0CCh+var_18+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D98 eax +
lea eax [esp+0CCh+var_14] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471D9C eax +
lea eax [esp+0CCh+var_14+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471DA0 eax +
lea eax [esp+0CCh+var_10] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 2 +
mov ds:dword_471DA4 eax +
lea eax [esp+0CCh+var_10+2] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov ds:dword_471DA8 eax +
mov eax ds:dword_471D84 +
or eax ds:dword_471D80 +
jz loc_421642  +
mov ecx ds:dword_471CF0 +
mov edx 1 +
mov eax [esp+0CCh+var_90] +
test ecx ecx +
jnz loc_423C43  +
call sub_404CB0  +
mov eax 0Fh +
mov ds:dword_471DC0[eax*8] 0 +
mov ds:dword_471DC4[eax*8] 0 +
sub eax 1 +
cmp eax 0FFFFFFFFh +
jnz loc_421647  +
mov edx 1Fh +
lea esi [esi+0] +
mov ds:dword_471E60[edx*8] 0 +
mov ds:dword_471E64[edx*8] 0 +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jnz loc_421670  +
mov eax ds:dword_471D3C +
mov ds:dword_471E40 0 +
mov ds:dword_471E44 0 +
test eax eax +
jnz loc_421EBA  +
mov esi ds:dword_471CCC +
mov ebx ds:dword_471CD4 +
cmp esi ebx +
ja loc_421E9C  +
test ebx ebx +
jz loc_4216F3  +
test esi esi +
mov eax ebx +
jz loc_42261F  +
cmp esi eax +
jb loc_4225F9  +
mov [esp+0CCh+var_C4] eax +
mov eax ds:dword_471CD8 +
mov [esp+0CCh+var_C8] eax +
mov eax ds:dword_471CD0 +
mov [esp+0CCh+var_CC] eax +
call memcpy  +
cmp ds:dword_471D60 464C457Fh +
jz loc_42171B  +
mov [esp+0CCh+var_CC] offset aNotAnElfFileIt +
call sub_436A70  +
add esp 0CCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax ds:word_471D92 +
mov [esp+0CCh+var_CC] eax +
call sub_42C220  +
mov ebp ds:dword_471D10 +
test ebp ebp +
jnz loc_422881  +
mov eax ds:dword_471D4C +
test eax eax +
jz loc_42179A  +
cmp ds:dword_471D9C 0FFFFh +
jz loc_422D9B  +
mov esi ds:dword_471DA4 +
test esi esi +
jnz loc_421764  +
mov edx [eax+20h] +
mov ds:dword_471DA4 edx +
mov edx ds:dword_471DA8 +
cmp edx 0FFFFh +
jz loc_422CD7  +
cmp edx ds:dword_471DA4 +
jb loc_421788  +
mov ds:dword_471DA8 0 +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_471D4C 0 +
mov eax [esp+0CCh+var_90] +
call sub_409FA0  +
test eax eax +
jz loc_421ECF  +
mov eax ds:dword_471D18 +
test eax eax +
jz loc_421F1F  +
mov esi ds:dword_471DA4 +
test esi esi +
jnz loc_421F32  +
mov edx ds:dword_471D24 +
test edx edx +
jnz loc_422EED  +
mov eax [esp+0CCh+var_90] +
call sub_40D430  +
test eax eax +
jnz loc_422825  +
mov ebp ds:dword_471D2C +
test ebp ebp +
jz loc_42185D  +
mov edi ds:dword_471D14 +
test edi edi +
jz loc_422685  +
mov edi offset unk_4625CC +
xor ebp ebp +
mov edx [edi-4] +
mov eax [edi-0Ch] +
mov ecx [edi-8] +
mov esi [edi] +
mov ebx ds:dword_471E60[edx*8] +
mov [esp+0CCh+var_94] eax +
mov eax ds:dword_471E60[ecx*8] +
or ebp ebx +
cmp esi 0FFFFFFFFh +
mov [esp+0CCh+var_8C] ebp +
mov [esp+0CCh+var_9C] eax +
jz loc_422CA4  +
test ebx ebx +
jnz loc_422BEB  +
add edi 10h +
cmp edi offset unk_4625FC +
jnz loc_421804  +
cmp ds:word_471D92 32h +
jz loc_4234F8  +
test ebp ebp +
jz loc_4234E7  +
mov ecx ds:dword_471D18 +
mov [esp+0CCh+var_4C] 28h +
mov [esp+0CCh+var_48] offset sub_415CE0 +
mov [esp+0CCh+var_44] 32h +
test ecx ecx +
mov [esp+0CCh+var_40] offset sub_40E270 +
mov [esp+0CCh+var_3C] 0Fh +
mov [esp+0CCh+var_38] offset loc_413820 +
mov [esp+0CCh+var_34] 8Ch +
mov [esp+0CCh+var_30] offset sub_415CE0 +
mov [esp+0CCh+var_2C] 0 +
mov [esp+0CCh+var_28] 0 +
jz loc_42190F  +
movzx eax ds:word_471D92 +
cmp eax 28h +
jz loc_4241C7  +
lea edx [esp+0CCh+var_44] +
mov ecx offset sub_40E270 +
jmp loc_4218FE  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_422DBC  +
add edx 8 +
cmp [edx-8] eax +
jnz loc_4218F3  +
mov eax [esp+0CCh+var_90] +
mov [esp+0CCh+var_CC] eax +
call ecx  +
mov eax [esp+0CCh+var_90] +
call sub_412400  +
mov edx ds:dword_47206C +
test edx edx +
jz loc_421B7E  +
mov eax ds:dword_471D38 +
test eax eax +
jz loc_421B7E  +
mov eax ds:dword_472070 +
test eax eax +
jz loc_421B7E  +
mov eax ds:dword_472084 +
test eax eax +
jz loc_421B7E  +
mov eax ds:dword_472098 +
test eax eax +
jnz loc_422ECA  +
mov [esp+0CCh+var_CC] offset aNumNameBoundto +
call puts  +
mov eax ds:dword_472064 +
test eax eax +
jz loc_421B7E  +
xor ebx ebx +
jmp loc_4219F0  +
cmp ax 0FFFFh +
jnz loc_421AF9  +
mov eax ds:_iob +
mov [esp+0CCh+var_C4] 0Bh +
mov [esp+0CCh+var_C8] 1 +
mov [esp+0CCh+var_CC] offset aSelf +
add eax 20h +
mov [esp+0CCh+var_C0] eax +
call fwrite  +
test si 1 +
jnz loc_421AA3  +
test si 2 +
jnz loc_421ABA  +
test si 4 +
jnz loc_421AD1  +
test si 8 +
jnz loc_421AE8  +
mov [esp+0CCh+var_CC] offset unk_44640B +
add ebx 1 +
call puts  +
cmp ebx ds:dword_472064 +
jnb loc_421B7E  +
mov eax ds:dword_47206C +
lea edi ds:0[ebx*4] +
movzx esi word ptr [eax+edi+2] +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset a4d +
call printf  +
cmp ds:dword_472074 ebx +
jbe loc_421B6D  +
mov edx ds:dword_472084 +
mov eax ebx +
shl eax 5 +
add eax ds:dword_472070 +
test edx edx +
mov eax [eax+10h] +
jz loc_421A41  +
cmp eax ds:dword_472080 +
jb loc_421E8B  +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset aCorrupt19ld +
call printf  +
mov [esp+0CCh+var_CC] 20h +
call putchar  +
mov eax ds:dword_47206C +
movzx eax word ptr [eax+edi] +
cmp ax 0FFFEh +
jnz loc_421977  +
mov eax ds:_iob +
mov [esp+0CCh+var_C4] 0Bh +
mov [esp+0CCh+var_C8] 1 +
mov [esp+0CCh+var_CC] offset aParent +
add eax 20h +
mov [esp+0CCh+var_C0] eax +
call fwrite  +
test si 1 +
jz loc_4219B4  +
mov [esp+0CCh+var_CC] offset aDirect +
call printf  +
test si 2 +
jz loc_4219BF  +
mov [esp+0CCh+var_CC] offset aPassthru +
call printf  +
test si 4 +
jz loc_4219CA  +
mov [esp+0CCh+var_CC] offset aCopy_0 +
call printf  +
test si 8 +
jz loc_4219D5  +
mov [esp+0CCh+var_CC] offset aLazyload +
call printf  +
jmp loc_4219D5  +
test ax ax +
jz loc_421B56  +
cmp eax ds:dword_472088 +
jnb loc_421B58  +
mov ecx ds:dword_472084 +
test ecx ecx +
jz loc_421B58  +
mov edx eax +
shl edx 4 +
add edx ds:dword_471D44 +
mov ebp [edx+0Ch] +
mov edi [edx+8] +
test ebp ebp +
mov [esp+0CCh+var_9C] edi +
mov edi ds:dword_472080 +
jnz loc_421B58  +
cmp [esp+0CCh+var_9C] edi +
jnb loc_421B58  +
mov edx [esp+0CCh+var_9C] +
mov eax 0Ah +
add edx ecx +
call sub_405A30  +
mov [esp+0CCh+var_CC] 20h +
call putchar  +
jmp loc_4219A9  +
xor eax eax +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset a10d +
call printf  +
jmp loc_4219A9  +
mov [esp+0CCh+var_CC] offset aCorruptIndex +
call printf  +
jmp loc_421A51  +
mov eax [esp+0CCh+var_90] +
call sub_41DAB0  +
mov eax ds:dword_471D0C +
test eax eax +
jnz loc_421FB2  +
mov ecx ds:dword_471CF8 +
test ecx ecx +
jz loc_421BC6  +
cmp ds:word_471D90 4 +
jnz loc_422CE5  +
mov esi ds:dword_471D9C +
test esi esi +
jnz loc_422EAB  +
mov [esp+0CCh+var_CC] offset aNoNoteSegments +
call puts  +
mov ebx ds:dword_471CFC +
test ebx ebx +
jz loc_421D38  +
mov edi ds:dword_471DA4 +
xor ebp ebp +
mov esi ds:dword_471D4C +
test edi edi +
mov ebx esi +
jnz loc_421BFE  +
jmp loc_421CD5  +
add ebp 1 +
add ebx 48h +
cmp edi ebp +
jbe loc_421CCB  +
cmp dword ptr [ebx+4] 6FFFFFF7h +
jnz loc_421BF0  +
cmp [ebx+28h] edi +
jnb loc_421BF0  +
mov edx [ebx+24h] +
mov eax [ebx+20h] +
mov ecx [ebx+18h] +
mov [esp+0CCh+var_BC] offset aLiblistSection +
mov [esp+0CCh+var_C0] edx +
mov edx [esp+0CCh+var_90] +
mov [esp+0CCh+var_C4] eax +
xor eax eax +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
mov edi ds:dword_471DA4 +
test eax eax +
mov [esp+0CCh+var_94] eax +
jz loc_421BF0  +
mov eax [ebx+28h] +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea esi [eax+edx*8] +
mov edx [esi+24h] +
mov eax [esi+20h] +
mov ecx [esi+18h] +
mov [esp+0CCh+var_BC] offset aLiblistStringT +
mov [esp+0CCh+var_C0] edx +
mov edx [esp+0CCh+var_90] +
mov [esp+0CCh+var_C4] eax +
xor eax eax +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
test eax eax +
mov edi eax +
jz loc_421CA3  +
mov eax [ebx+38h] +
xor eax 14h +
or eax [ebx+3Ch] +
jz loc_422FFF  +
mov eax [esp+0CCh+var_94] +
add ebp 1 +
add ebx 48h +
mov [esp+0CCh+var_CC] eax +
call free  +
mov [esp+0CCh+var_CC] edi +
call free  +
mov edi ds:dword_471DA4 +
cmp edi ebp +
ja loc_421BFE  +
mov edx ds:dword_471CFC +
test edx edx +
jz loc_421D38  +
movzx eax ds:word_471D92 +
cmp ax 16h +
jz loc_423C36  +
jbe loc_422E15  +
cmp ax 69h +
jz loc_423AB6  +
jbe loc_422FA5  +
cmp ax 0A7h +
jz loc_423BB2  +
cmp ax 0A390h +
jz loc_423C36  +
cmp ax 8Ch +
jnz loc_421D38  +
mov eax [esp+0CCh+var_90] +
mov ecx 70000003h +
mov edx offset aC6xabi +
mov [esp+0CCh+var_C8] 0 +
mov [esp+0CCh+var_CC] offset loc_4074D0 +
call sub_406B50  +
mov eax ds:dword_471D48 +
test eax eax +
jz loc_421D53  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_471D48 0 +
mov eax ds:dword_471D4C +
test eax eax +
jz loc_421D6E  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_471D4C 0 +
mov eax ds:dword_47207C +
test eax eax +
jz loc_421D93  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_47207C 0 +
mov ds:dword_472078 0 +
mov eax ds:dword_472084 +
test eax eax +
jz loc_421DB8  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_472084 0 +
mov ds:dword_472080 0 +
mov eax ds:dword_472070 +
test eax eax +
jz loc_421DDD  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_472070 0 +
mov ds:dword_472074 0 +
mov eax ds:dword_47206C +
test eax eax +
jz loc_421DF8  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_47206C 0 +
mov eax ds:dword_471D44 +
test eax eax +
jz loc_421E13  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_471D44 0 +
mov eax ds:dword_471CE0 +
test eax eax +
jz loc_421E2E  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ds:dword_471CE0 0 +
mov esi ds:dword_471CE4 +
test esi esi +
jz loc_421E79  +
mov edi ds:dword_471CE8 +
xor ebx ebx +
test edi edi +
jz loc_421E67  +
mov eax [esi+ebx*8] +
test eax eax +
jnz loc_421E52  +
jmp loc_421E60  +
mov eax ebp +
mov ebp [eax] +
mov [esp+0CCh+var_CC] eax +
call free  +
test ebp ebp +
jnz loc_421E50  +
add ebx 1 +
cmp ebx edi +
jnz loc_421E44  +
mov [esp+0CCh+var_CC] esi +
call free  +
mov ds:dword_471CE4 0 +
call sub_4366F0  +
add esp 0CCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx eax +
mov eax 1Eh +
call sub_405A30  +
jmp loc_421A51  +
mov eax ds:dword_471CD0 +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C8] 0 +
mov [esp+0CCh+var_CC] eax +
call memset  +
jmp loc_4216C3  +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset aFileS_0 +
call printf  +
jmp loc_4216AF  +
mov ebx ds:dword_471D14 +
mov ds:dword_471CFC 0 +
mov ds:dword_471D0C 0 +
mov ds:dword_471D08 0 +
test ebx ebx +
mov ds:dword_471D18 0 +
jnz loc_421F1F  +
mov ds:dword_471D2C 0 +
mov ds:dword_471D30 0 +
mov ds:dword_471D34 0 +
mov ecx ds:dword_471D24 +
test ecx ecx +
jnz loc_4217B8  +
jmp loc_4217D4  +
mov ebp ds:dword_471D4C +
test ebp ebp +
jz loc_423D89  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] esi +
call calloc  +
test eax eax +
mov ds:dword_471CE0 eax +
jz loc_424070  +
mov edx ebp +
xor ecx ecx +
xor ebx ebx +
xor eax eax +
jmp loc_421F71  +
add eax 1 +
add edx 48h +
cmp eax esi +
jz loc_421F86  +
cmp dword ptr [edx+4] 11h +
jnz loc_421F67  +
add eax 1 +
add ebx 1 +
add edx 48h +
cmp eax esi +
mov ecx ebx +
jnz loc_421F71  +
test ebx ebx +
mov ds:dword_471CE8 ecx +
jnz loc_422EFE  +
mov eax ds:dword_471D24 +
test eax eax +
jz loc_4217D4  +
mov [esp+0CCh+var_CC] offset aThereAreNoSe_0 +
call puts  +
jmp loc_4217D4  +
mov eax ds:dword_471CDC +
test eax eax +
mov [esp+0CCh+var_9C] eax +
jz loc_423DB2  +
mov edi ds:dword_471DA4 +
lea esi [esi+0] +
xor ebx ebx +
xor esi esi +
test edi edi +
mov [esp+0CCh+var_94] 0 +
jnz loc_421FF1  +
jmp loc_42243A  +
add esi 1 +
add ebx 48h +
cmp esi edi +
mov eax edi +
jnb loc_42205E  +
mov eax [esp+0CCh+var_9C] +
mov ebp [eax] +
mov eax ebx +
add eax ds:dword_471D4C +
jz loc_422424  +
mov ecx ds:dword_47207C +
test ecx ecx +
jz loc_422430  +
mov eax [eax] +
mov edx offset aCorrupt +
add ecx eax +
cmp eax ds:dword_472078 +
cmovb edx ecx +
mov [esp+0CCh+var_C8] ebp +
mov [esp+0CCh+var_CC] edx +
call strcmp  +
test eax eax +
jnz loc_421FE5  +
mov eax [esp+0CCh+var_9C] +
add ebx 48h +
movzx edx byte ptr [eax+4] +
mov eax esi +
add esi 1 +
call sub_4053B0  +
mov edi ds:dword_471DA4 +
mov [esp+0CCh+var_94] 1 +
cmp esi edi +
mov eax edi +
jb loc_421FF1  +
mov edx [esp+0CCh+var_94] +
test edx edx +
jz loc_42243A  +
mov ecx [esp+0CCh+var_9C] +
mov ecx [ecx+8] +
test ecx ecx +
mov [esp+0CCh+var_9C] ecx +
jnz loc_421FD0  +
mov edi ds:dword_471D4C +
test eax eax +
mov [esp+0CCh+var_8C] edi +
jz loc_42405A  +
mov ebp ds:dword_471CCC +
test ebp ebp +
jz loc_424085  +
mov [esp+0CCh+var_94] 0 +
jmp loc_4220E4  +
test al 10h +
jnz loc_422115  +
test al 8 +
jnz loc_42213C  +
test al 4 +
jnz loc_422345  +
add [esp+0CCh+var_94] 1 +
mov eax [esp+0CCh+var_94] +
add [esp+0CCh+var_8C] 48h +
cmp eax ds:dword_471DA4 +
mov eax ds:dword_471CCC +
jnb loc_422649  +
cmp [esp+0CCh+var_94] eax +
jnb loc_422649  +
mov eax ds:dword_471CD0 +
mov edi [esp+0CCh+var_94] +
movzx eax byte ptr [eax+edi] +
test al 1 +
jz loc_4220A7  +
mov eax [esp+0CCh+var_8C] +
xor ecx ecx +
mov edx [esp+0CCh+var_90] +
call sub_4117C0  +
mov eax ds:dword_471CD0 +
mov edi [esp+0CCh+var_94] +
movzx eax byte ptr [eax+edi] +
test al 10h +
jz loc_4220AB  +
mov eax [esp+0CCh+var_8C] +
mov ecx 1 +
mov edx [esp+0CCh+var_90] +
call sub_4117C0  +
mov eax ds:dword_471CD0 +
mov edi [esp+0CCh+var_94] +
movzx eax byte ptr [eax+edi] +
test al 8 +
jz loc_4220B3  +
mov edi [esp+0CCh+var_8C] +
mov edx [esp+0CCh+var_90] +
mov eax edi +
call sub_411750  +
test eax eax +
mov ebx eax +
mov [esp+0CCh+var_60] eax +
jz loc_4225E7  +
mov eax edi +
mov edi [edi+20h] +
mov ebp [eax+24h] +
mov [esp+0CCh+var_9C] edi +
mov [esp+0CCh+var_98] ebp +
call sub_401C80  +
mov [esp+0CCh+var_CC] offset aStringDumpOfSe +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov edi ds:dword_471CEC +
test edi edi +
jz loc_422298  +
mov eax [esp+0CCh+var_9C] +
mov edx [esp+0CCh+var_98] +
mov [esp+0CCh+var_5C] eax +
mov eax [esp+0CCh+var_8C] +
mov [esp+0CCh+var_58] edx +
test byte ptr [eax+9] 8 +
jnz loc_4225AA  +
cmp [esp+0CCh+var_98] 0 +
ja loc_4221BC  +
cmp [esp+0CCh+var_9C] 0Ch +
jbe loc_422298  +
mov eax [esp+0CCh+var_60] +
mov edi offset aZlib +
mov ecx 5 +
mov esi eax +
cmps   +
jnz loc_422298  +
movzx edx byte ptr [eax+4] +
xor ecx ecx +
xor edi edi +
movzx esi byte ptr [eax+5] +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+6] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+7] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+8] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+9] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+0Ah] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
movzx esi byte ptr [eax+0Bh] +
adc ecx edi +
xor edi edi +
shld ecx edx +
shl edx 8 +
add edx esi +
mov esi [esp+0CCh+var_9C] +
adc ecx edi +
mov edi [esp+0CCh+var_98] +
add eax 0Ch +
mov [esp+0CCh+var_60] eax +
add esi 0FFFFFFF4h +
adc edi 0FFFFFFFFh +
mov [esp+0CCh+var_5C] esi +
mov [esp+0CCh+var_58] edi +
mov eax ecx +
or eax edx +
jz loc_422298  +
lea eax [esp+0CCh+var_5C] +
mov [esp+0CCh+var_CC] eax +
lea eax [esp+0CCh+var_60] +
call sub_403F60  +
test eax eax +
jz loc_422298  +
mov eax [esp+0CCh+var_5C] +
mov edx [esp+0CCh+var_58] +
mov [esp+0CCh+var_9C] eax +
mov [esp+0CCh+var_98] edx +
mov esi ds:dword_471DA4 +
mov edi ds:dword_471D4C +
lea eax [esi+esi*8] +
lea ecx [edi+eax*8] +
cmp edi ecx +
jnb loc_4222DD  +
mov ebp [esp+0CCh+var_8C] +
mov eax edi +
mov edx [eax+4] +
cmp edx 9 +
jz loc_4222C1  +
cmp edx 4 +
jnz loc_4222D6  +
mov edx [eax+2Ch] +
cmp edx esi +
jnb loc_4222D6  +
lea edx [edx+edx*8] +
lea edx [edi+edx*8] +
cmp ebp edx +
jz loc_4224AC  +
add eax 48h +
cmp eax ecx +
jb loc_4222B4  +
mov esi [esp+0CCh+var_60] +
xor edx edx +
mov ebp [esp+0CCh+var_9C] +
add ebp esi +
cmp ebp esi +
ja loc_4222F7  +
jmp loc_42230C  +
add esi 1 +
cmp esi ebp +
jz loc_42230C  +
movzx eax byte ptr [esi] +
test byte ptr ds:word_4699A0[eax+eax] 10h +
jz loc_4222F0  +
cmp ebp esi +
ja loc_42245D  +
test edx edx +
jnz loc_42231C  +
mov [esp+0CCh+var_CC] offset aNoStringsFound +
call printf  +
mov [esp+0CCh+var_CC] ebx +
call free  +
mov [esp+0CCh+var_CC] 0Ah +
call putchar  +
mov eax ds:dword_471CD0 +
mov edi [esp+0CCh+var_94] +
movzx eax byte ptr [eax+edi] +
test al 4 +
jz loc_4220BB  +
mov edi [esp+0CCh+var_8C] +
test edi edi +
jz loc_422E5E  +
mov eax ds:dword_47207C +
test eax eax +
jz loc_422E7C  +
mov edx [edi] +
mov edi offset aCorrupt +
add eax edx +
cmp edx ds:dword_472078 +
cmovnb eax edi +
mov [esp+0CCh+var_9C] eax +
mov edi [esp+0CCh+var_8C] +
mov eax edi +
call sub_401C80  +
mov [esp+0CCh+var_88] eax +
mov eax [edi+24h] +
or eax [edi+20h] +
jz loc_422D82  +
mov eax [esp+0CCh+var_8C] +
cmp dword ptr [eax+4] 8 +
jz loc_423242  +
mov esi [esp+0CCh+var_9C] +
mov edi offset a_gnu_linkonce_ +
mov ecx 11h +
mov eax offset a_debug_info +
mov ebx offset off_441700 +
cmps   +
cmovnz eax [esp+0CCh+var_9C] +
xor ebp ebp +
mov [esp+0CCh+var_9C] eax +
mov eax [esp+0CCh+var_9C] +
mov [esp+0CCh+var_C8] eax +
mov eax [ebx] +
mov [esp+0CCh+var_CC] eax +
call strcmp  +
test eax eax +
jz loc_4224D2  +
cmp ebp 4 +
jz loc_424348  +
mov eax [esp+0CCh+var_9C] +
mov [esp+0CCh+var_C8] eax +
mov eax [ebx+4] +
mov [esp+0CCh+var_CC] eax +
call strcmp  +
test eax eax +
jz loc_4224D2  +
add ebp 1 +
add ebx 40h +
cmp ebp 24h +
jnz loc_4223C2  +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_CC] offset aUnrecognized_0 +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_4220BB  +
mov edx offset aNone_0 +
jmp loc_422025  +
mov edx offset aNoName +
jmp loc_422025  +
mov eax [esp+0CCh+var_9C] +
mov eax [eax] +
mov [esp+0CCh+var_CC] offset aSectionSWasNot +
mov [esp+0CCh+var_C8] eax +
call sub_437070  +
mov edi ds:dword_471DA4 +
mov eax edi +
jmp loc_42206A  +
mov eax esi +
mov edi ebp +
sub eax [esp+0CCh+var_60] +
sub edi esi +
mov [esp+0CCh+var_CC] offset a6ix +
mov [esp+0CCh+var_C8] eax +
call printf  +
test edi edi +
jz loc_422636  +
mov edx esi +
mov eax edi +
call sub_405A30  +
mov [esp+0CCh+var_CC] 0Ah +
call putchar  +
mov [esp+0CCh+var_CC] esi +
mov [esp+0CCh+var_C8] edi +
call sub_4401F0  +
add esi eax +
mov edx 1 +
jmp loc_4222E9  +
mov edx [eax+24h] +
or edx [eax+20h] +
jz loc_4222D6  +
cmp [eax+28h] esi +
jnb loc_4222D6  +
mov [esp+0CCh+var_CC] offset aNoteThisSect_0 +
call puts  +
jmp loc_4222DD  +
mov [esp+0CCh+var_88] ebp +
mov eax ebp +
shl eax 6 +
mov [esp+0CCh+var_84] eax +
lea ebx off_441700[eax] +
mov eax [esp+0CCh+var_9C] +
call sub_402450  +
cmp [esp+0CCh+var_8C] eax +
setnz al  +
movzx eax al +
mov [esp+0CCh+var_80] eax +
jnz loc_422E6B  +
cmp ebp 4 +
jz loc_422E89  +
mov eax [esp+0CCh+var_84] +
mov esi off_441700[eax] +
mov eax [esp+0CCh+var_9C] +
mov [esp+0CCh+var_CC] esi +
mov [esp+0CCh+var_C8] eax +
call strcmp  +
test eax eax +
jnz loc_422DB1  +
mov [ebx+8] esi +
mov ecx [esp+0CCh+var_90] +
mov edx [esp+0CCh+var_8C] +
mov eax [esp+0CCh+var_88] +
call sub_409550  +
test eax eax +
jz loc_4220BB  +
mov edi [esp+0CCh+var_90] +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_CC] edi +
mov [esp+0CCh+var_C8] eax +
call sub_434390  +
mov [esp+0CCh+var_C8] edi +
mov [esp+0CCh+var_CC] ebx +
mov ds:dword_471020 eax +
mov eax ebp +
shl eax 6 +
mov eax off_441730[eax] +
call eax  +
mov eax [esp+0CCh+var_80] +
mov ds:dword_471020 0 +
test eax eax +
jnz loc_422599  +
test ebp ebp +
jz loc_4220BB  +
cmp ebp 3 +
jz loc_4220BB  +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_CC] eax +
call sub_421130  +
jmp loc_4220BB  +
mov edx [esp+0CCh+var_60] +
lea eax [esp+0CCh+var_4C] +
call sub_407C40  +
mov edi [esp+0CCh+var_4C] +
cmp edi 1 +
jz loc_423C4D  +
mov eax [esp+0CCh+var_8C] +
call sub_401C80  +
mov [esp+0CCh+var_C4] edi +
mov [esp+0CCh+var_CC] offset aSectionSHasUns +
mov [esp+0CCh+var_C8] eax +
call sub_437070  +
mov eax ds:dword_471CD0 +
mov edi [esp+0CCh+var_94] +
movzx eax byte ptr [eax+edi] +
jmp loc_4220B3  +
mov [esp+0CCh+var_C4] 3F0Fh +
mov [esp+0CCh+var_C8] offset a____Binutils_0 +
mov [esp+0CCh+var_CC] offset aNum_dump_sects +
call sub_440120  +
mov eax ds:dword_471CD4 +
jmp loc_4216D9  +
xor edx edx +
call sub_4053B0  +
mov esi ds:dword_471CCC +
mov eax ds:dword_471CD4 +
jmp loc_4216D1  +
mov [esp+0CCh+var_CC] offset aCorrupt +
mov esi ebp +
call puts  +
jmp loc_4224A2  +
mov edx [esp+0CCh+var_94] +
lea esi [esi+0] +
cmp edx eax +
lea ebx [edx+1] +
jnb loc_421B94  +
mov ecx ds:dword_471CD0 +
cmp byte ptr [ecx+edx+1] 0 +
jnz loc_42266C  +
mov edx ebx +
jmp loc_422650  +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset aSectionDWasNot +
call sub_437070  +
mov eax ds:dword_471CCC +
mov edx ebx +
jmp loc_422650  +
mov edx ds:dword_471DA4 +
xor ebp ebp +
mov edi ds:dword_471D4C +
mov [esp+0CCh+var_88] 0 +
test edx edx +
jnz loc_4226B7  +
jmp loc_422C93  +
mov eax ds:dword_471DA4 +
add ebp 1 +
add edi 48h +
cmp ebp eax +
jnb loc_422C87  +
mov eax [edi+4] +
cmp eax 9 +
jz loc_4226C4  +
cmp eax 4 +
jnz loc_4226A4  +
mov ebx [edi+20h] +
mov esi [edi+18h] +
test ebx ebx +
jz loc_4226A4  +
mov [esp+0CCh+var_CC] offset aRelocationSect +
call printf  +
mov eax ds:dword_47207C +
test eax eax +
jz loc_423AF5  +
mov eax edi +
call sub_401C80  +
mov [esp+0CCh+var_CC] offset aS_15 +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax [edi+38h] +
mov edx [edi+3Ch] +
mov [esp+0CCh+var_CC] ebx +
mov [esp+0CCh+var_C8] 0 +
mov [esp+0CCh+var_C4] eax +
mov [esp+0CCh+var_C0] edx +
call sub_43F880  +
mov [esp+0CCh+var_C8] esi +
mov [esp+0CCh+var_CC] offset aAtOffset0xLxCo +
mov [esp+0CCh+var_C4] eax +
call printf  +
mov edx [edi+28h] +
xor eax eax +
cmp dword ptr [edi+4] 4 +
setz al  +
test edx edx +
mov [esp+0CCh+var_8C] eax +
jz loc_422833  +
mov eax ds:dword_471DA4 +
cmp edx eax +
jnb loc_422833  +
lea ecx [edx+edx*8] +
mov edx ds:dword_471D4C +
lea ecx [edx+ecx*8] +
mov edx [ecx+4] +
mov [esp+0CCh+var_9C] ecx +
cmp edx 0Bh +
jz loc_422776  +
cmp edx 2 +
jnz loc_4226A9  +
cmp ds:dword_471CF0 0 +
lea ecx [esp+0CCh+var_4C] +
mov edx [esp+0CCh+var_9C] +
mov eax [esp+0CCh+var_90] +
jz loc_423DA4  +
call sub_4042C0  +
mov [esp+0CCh+var_94] eax +
mov eax [esp+0CCh+var_94] +
test eax eax +
jz loc_4226A4  +
mov eax [esp+0CCh+var_9C] +
mov eax [eax+28h] +
test eax eax +
jz loc_4227BE  +
cmp eax ds:dword_471DA4 +
jb loc_4241D1  +
mov eax [esp+0CCh+var_9C] +
mov ecx ebx +
mov edx esi +
cmp dword ptr [eax+4] 0Bh +
mov [esp+0CCh+var_C0] 0 +
mov [esp+0CCh+var_C4] 0 +
setz al  +
movzx eax al +
mov [esp+0CCh+var_B8] eax +
mov eax [esp+0CCh+var_8C] +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_4C] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_CC] eax +
mov eax [esp+0CCh+var_90] +
call sub_40F500  +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_CC] eax +
call free  +
mov eax ds:dword_471DA4 +
mov [esp+0CCh+var_88] 1 +
jmp loc_4226A9  +
mov eax [esp+0CCh+var_90] +
call sub_40B950  +
jmp loc_4217E5  +
mov eax [esp+0CCh+var_8C] +
mov ecx ebx +
mov edx esi +
mov [esp+0CCh+var_B8] 0 +
mov [esp+0CCh+var_C0] 0 +
mov [esp+0CCh+var_C4] 0 +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_90] +
mov [esp+0CCh+var_C8] 0 +
mov [esp+0CCh+var_CC] 0 +
call sub_40F500  +
mov eax ds:dword_471DA4 +
mov [esp+0CCh+var_88] 1 +
jmp loc_4226A9  +
mov [esp+0CCh+var_CC] offset aElfHeader +
xor ebx ebx +
call puts  +
mov [esp+0CCh+var_CC] offset aMagic +
call printf  +
nop   +
lea esi [esi+0] +
movzx eax byte ptr ds:dword_471D60[ebx] +
add ebx 1 +
mov [esp+0CCh+var_CC] offset a2_2x_0 +
mov [esp+0CCh+var_C8] eax +
call printf  +
cmp ebx 10h +
jnz loc_4228A0  +
mov [esp+0CCh+var_CC] 0Ah +
call putchar  +
movzx edx ds:byte_471D64 +
mov eax offset aElf32 +
cmp dl 1 +
jz loc_422912  +
mov eax offset aNone_1 +
jb loc_422912  +
cmp dl 2 +
mov eax offset aElf64 +
jz loc_422912  +
mov [esp+0CCh+var_C0] edx +
mov [esp+0CCh+var_C4] offset aUnknownX +
mov [esp+0CCh+var_C8] 20h +
mov [esp+0CCh+var_CC] offset unk_471BE0 +
call sub_402590  +
mov eax offset unk_471BE0 +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset aClassS +
call printf  +
movzx edx ds:byte_471D65 +
mov eax offset a2SComplementLi +
cmp dl 1 +
jz loc_422969  +
mov eax offset aNone_1 +
jb loc_422969  +
cmp dl 2 +
mov eax offset a2SComplementBi +
jz loc_422969  +
mov [esp+0CCh+var_C0] edx +
mov [esp+0CCh+var_C4] offset aUnknownX +
mov [esp+0CCh+var_C8] 20h +
mov [esp+0CCh+var_CC] offset unk_471BC0 +
call sub_402590  +
mov eax offset unk_471BC0 +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset aDataS +
call printf  +
movzx edx ds:byte_471D66 +
mov eax offset aCurrent +
cmp dl 1 +
jz loc_422999  +
mov eax offset aUnknownLx_0 +
test dl dl +
mov ecx offset unk_44640B +
cmovz eax ecx +
mov [esp+0CCh+var_C8] edx +
mov [esp+0CCh+var_C4] eax +
mov [esp+0CCh+var_CC] offset aVersionDS +
call printf  +
movzx eax ds:byte_471D67 +
call sub_409830  +
mov [esp+0CCh+var_CC] offset aOsAbiS +
mov [esp+0CCh+var_C8] eax +
call printf  +
movzx eax ds:byte_471D68 +
mov [esp+0CCh+var_CC] offset aAbiVersionD +
mov [esp+0CCh+var_C8] eax +
call printf  +
movzx eax ds:word_471D90 +
call sub_40B310  +
mov [esp+0CCh+var_CC] offset aTypeS +
mov [esp+0CCh+var_C8] eax +
call printf  +
movzx eax ds:word_471D92 +
call sub_4025C0  +
mov [esp+0CCh+var_CC] offset aMachineS +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax ds:dword_471D88 +
mov [esp+0CCh+var_CC] offset aVersion0xLx +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov [esp+0CCh+var_CC] offset aEntryPointAddr +
call printf  +
mov edx ds:dword_471D74 +
mov ecx 4 +
mov eax ds:dword_471D70 +
call sub_4055F0  +
mov [esp+0CCh+var_CC] offset aStartOfProgram +
call printf  +
mov edx ds:dword_471D7C +
mov ecx 1 +
mov eax ds:dword_471D78 +
call sub_4055F0  +
mov [esp+0CCh+var_CC] offset aBytesIntoFileS +
call printf  +
mov edx ds:dword_471D84 +
mov ecx 1 +
mov eax ds:dword_471D80 +
call sub_4055F0  +
mov [esp+0CCh+var_CC] offset aBytesIntoFile +
call puts  +
movzx edx ds:word_471D92 +
mov eax ds:dword_471D8C +
call sub_418080  +
mov [esp+0CCh+var_CC] offset aFlags0xLxS +
mov [esp+0CCh+var_C4] eax +
mov eax ds:dword_471D8C +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax ds:dword_471D94 +
mov [esp+0CCh+var_CC] offset aSizeOfThisHead +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax ds:dword_471D98 +
mov [esp+0CCh+var_CC] offset aSizeOfProgramH +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax ds:dword_471D9C +
mov [esp+0CCh+var_CC] offset aNumberOfProgra +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax ds:dword_471D4C +
test eax eax +
jz loc_422B1E  +
cmp ds:dword_471D9C 0FFFFh +
jz loc_423B0C  +
mov eax ds:_iob +
mov [esp+0CCh+var_CC] 0Ah +
add eax 20h +
mov [esp+0CCh+var_C8] eax +
call putc  +
mov eax ds:dword_471DA0 +
mov [esp+0CCh+var_CC] offset aSizeOfSectionH +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax ds:dword_471DA4 +
mov [esp+0CCh+var_CC] offset aNumberOfSectio +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax ds:dword_471D4C +
test eax eax +
jz loc_422B77  +
mov edi ds:dword_471DA4 +
test edi edi +
jz loc_423ADD  +
mov eax ds:_iob +
mov [esp+0CCh+var_CC] 0Ah +
add eax 20h +
mov [esp+0CCh+var_C8] eax +
call putc  +
mov eax ds:dword_471DA8 +
mov [esp+0CCh+var_CC] offset aSectionHeaderS +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov edx ds:dword_471D4C +
mov eax ds:dword_471DA8 +
test edx edx +
jz loc_422BBE  +
cmp eax 0FFFFh +
jz loc_423DDE  +
test eax eax +
jz loc_422BCE  +
cmp ds:dword_471DA4 eax +
jbe loc_423DBC  +
mov eax ds:_iob +
mov [esp+0CCh+var_CC] 0Ah +
add eax 20h +
mov [esp+0CCh+var_C8] eax +
call putc  +
jmp loc_421738  +
mov ecx [esp+0CCh+var_94] +
mov eax [esp+0CCh+var_9C] +
mov [esp+0CCh+var_C0] ebx +
mov [esp+0CCh+var_CC] offset aSRelocationSec +
mov [esp+0CCh+var_C8] ecx +
mov [esp+0CCh+var_C4] eax +
call printf  +
mov eax ds:dword_472080 +
xor ecx ecx +
mov edx ds:dword_472084 +
mov [esp+0CCh+var_CC] ebx +
mov [esp+0CCh+var_C8] 0 +
mov [esp+0CCh+var_94] eax +
mov eax ds:dword_472074 +
mov [esp+0CCh+var_88] edx +
mov edx [esp+0CCh+var_9C] +
mov [esp+0CCh+var_84] eax +
mov eax ds:dword_472070 +
mov [esp+0CCh+var_80] eax +
mov eax [esp+0CCh+var_90] +
call sub_40B840  +
mov ecx [esp+0CCh+var_94] +
mov edx [esp+0CCh+var_88] +
mov [esp+0CCh+var_B8] 1 +
mov [esp+0CCh+var_BC] esi +
mov [esp+0CCh+var_C0] ecx +
mov ecx [esp+0CCh+var_84] +
mov [esp+0CCh+var_C4] edx +
mov edx eax +
mov eax [esp+0CCh+var_90] +
mov [esp+0CCh+var_C8] ecx +
mov ecx [esp+0CCh+var_80] +
mov [esp+0CCh+var_CC] ecx +
mov ecx ebx +
call sub_40F500  +
jmp loc_42183C  +
mov ebx [esp+0CCh+var_88] +
test ebx ebx +
jnz loc_42185D  +
mov [esp+0CCh+var_CC] offset aThereAreNoRelo +
call puts  +
jmp loc_42185D  +
cmp ecx 17h +
jnz loc_421834  +
mov ecx ds:dword_471F00 +
mov eax ds:dword_471F04 +
mov edx ecx +
xor edx 7 +
or edx eax +
jz loc_424066  +
xor ecx 11h +
or eax ecx +
mov eax 0 +
cmovz esi eax +
jmp loc_421834  +
mov edx [eax+28h] +
mov ds:dword_471DA8 edx +
jmp loc_421788  +
mov ebp ds:dword_471DA4 +
mov esi ds:dword_471D4C +
test ebp ebp +
jz loc_422DF4  +
test esi esi +
jz loc_422DF4  +
xor ebp ebp +
mov [esp+0CCh+var_80] 0 +
jmp loc_422D33  +
cmp ax 57h +
jz loc_422D46  +
cmp ax 9080h +
jz loc_422D46  +
add ebp 1 +
add esi 48h +
cmp ebp ds:dword_471DA4 +
jnb loc_422DE8  +
test esi esi +
jz loc_422DE8  +
cmp dword ptr [esi+4] 7 +
jz loc_422D69  +
movzx eax ds:word_471D92 +
cmp ax 24h +
jnz loc_422D0D  +
cmp dword ptr [esi+4] 0A0000000h +
jnz loc_422D19  +
mov eax [esi+24h] +
mov ebx [esi+20h] +
mov edi [esi+18h] +
mov ecx eax +
or ecx ebx +
jnz loc_42325B  +
add [esp+0CCh+var_80] 1 +
jmp loc_422D19  +
mov eax [esi+24h] +
mov ebx [esi+20h] +
mov edx [esi+18h] +
mov ecx [esi+1Ch] +
mov edi eax +
or edi ebx +
jnz loc_422DD6  +
add [esp+0CCh+var_80] 1 +
jmp loc_422D39  +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_CC] offset aSectionSHasN_0 +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_4220BB  +
mov edx [eax+2Ch] +
test edx edx +
jz loc_421751  +
mov ds:dword_471D9C edx +
jmp loc_421751  +
mov eax [ebx+4] +
mov [ebx+8] eax +
jmp loc_422530  +
call sub_4025C0  +
mov [esp+0CCh+var_CC] offset aTheDecodingOfU +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_42190F  +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_90] +
mov [esp+0CCh+var_CC] ebx +
call sub_416EB0  +
jmp loc_422D7B  +
mov edi [esp+0CCh+var_80] +
test edi edi +
jnz loc_421BC6  +
mov eax [esp+0CCh+var_90] +
call sub_40B4B0  +
test eax eax +
jz loc_421BC6  +
mov eax [esp+0CCh+var_90] +
call sub_417FE0  +
nop   +
jmp loc_421BC6  +
cmp ax 0Ah +
jz loc_423BA4  +
nop   +
jbe loc_423B94  +
cmp ax 12h +
jz loc_423B87  +
cmp ax 14h +
jnz loc_421D38  +
mov [esp+0CCh+var_C8] offset sub_4072B0 +
mov eax [esp+0CCh+var_90] +
mov ecx 6FFFFFF5h +
xor edx edx +
mov [esp+0CCh+var_CC] 0 +
call sub_406B50  +
jmp loc_421D38  +
mov [esp+0CCh+var_9C] offset aNone_0 +
jmp loc_422374  +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_CC] eax +
call sub_421130  +
jmp loc_422502  +
mov [esp+0CCh+var_9C] offset aNoName +
jmp loc_422374  +
mov esi [esp+0CCh+var_9C] +
mov edi offset a_debug_line__1 +
mov ecx 0Ch +
cmps   +
jnz loc_42250B  +
mov eax [esp+0CCh+var_9C] +
mov [ebx+8] eax +
jmp loc_422530  +
mov edi [esp+0CCh+var_90] +
mov eax edi +
call sub_40B4B0  +
test eax eax +
jz loc_421BC6  +
mov eax edi +
call sub_417FE0  +
jmp loc_421BC6  +
mov eax ds:dword_472064 +
mov [esp+0CCh+var_CC] offset aDynamicInfoSeg +
mov [esp+0CCh+var_C4] eax +
mov eax ds:dword_472068 +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_42195A  +
mov [esp+0CCh+var_CC] offset aThereAreNoSe_1 +
call puts  +
jmp loc_4217D4  +
mov [esp+0CCh+var_C8] 8 +
mov [esp+0CCh+var_CC] ebx +
call calloc  +
test eax eax +
mov [esp+0CCh+var_80] eax +
mov ds:dword_471CE4 eax +
jz loc_42438D  +
mov [esp+0CCh+var_4C] 0 +
xor esi esi +
xor edi edi +
mov [esp+0CCh+var_8C] 0 +
mov [esp+0CCh+var_84] 0 +
mov [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_7C] 0 +
jmp loc_422F5E  +
add esi 1 +
add ebp 48h +
cmp esi ds:dword_471DA4 +
jnb loc_422FD6  +
cmp dword ptr [ebp+4] 11h +
jnz loc_422F50  +
mov eax ebp +
call sub_401C80  +
mov [esp+0CCh+var_94] eax +
mov eax [ebp+28h] +
cmp eax ds:dword_471DA4 +
jnb loc_422F8F  +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea ebx [eax+edx*8] +
cmp dword ptr [ebx+4] 2 +
jz loc_423C89  +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_CC] offset aBadSh_linkInGr +
mov [esp+0CCh+var_C8] eax +
call sub_436A70  +
jmp loc_422F50  +
cmp ax 28h +
jnz loc_423B7D  +
mov eax [esp+0CCh+var_90] +
mov ecx 70000003h +
mov edx offset aAeabi +
mov [esp+0CCh+var_C8] 0 +
mov [esp+0CCh+var_CC] offset sub_4066D0 +
call sub_406B50  +
jmp loc_421D38  +
mov eax [esp+0CCh+var_9C] +
test eax eax +
jz loc_422FEA  +
mov eax [esp+0CCh+var_9C] +
mov [esp+0CCh+var_CC] eax +
call free  +
test edi edi +
jz loc_4217D4  +
mov [esp+0CCh+var_CC] edi +
call free  +
jmp loc_4217D4  +
mov eax [esi+20h] +
mov edx [ebx+24h] +
mov [esp+0CCh+var_74] eax +
mov eax [ebx+20h] +
mov [esp+0CCh+var_C4] 14h +
mov [esp+0CCh+var_C0] 0 +
mov [esp+0CCh+var_C8] edx +
mov [esp+0CCh+var_CC] eax +
call sub_43F880  +
mov esi eax +
mov eax ebx +
call sub_401C80  +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_CC] offset aLibraryListSec +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov [esp+0CCh+var_CC] offset aLibraryTimeSta +
call puts  +
cmp dword ptr [ebx+24h] 0 +
ja loc_423061  +
cmp dword ptr [ebx+20h] 13h +
jbe loc_421CA3  +
mov esi [esp+0CCh+var_94] +
mov [esp+0CCh+var_70] ebp +
mov [esp+0CCh+var_9C] 1 +
mov [esp+0CCh+var_98] 0 +
mov [esp+0CCh+var_8C] 0 +
mov ebp esi +
mov [esp+0CCh+var_78] edi +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] ebp +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov edi eax +
lea eax [ebp+4] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_5C] eax +
lea eax [ebp+8] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_88] eax +
lea eax [ebp+0Ch] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_84] eax +
lea eax [ebp+10h] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_80] eax +
lea eax [esp+0CCh+var_5C] +
mov [esp+0CCh+var_CC] eax +
call gmtime  +
mov edx [eax+0Ch] +
mov ecx [eax+8] +
mov esi [eax+4] +
mov [esp+0CCh+var_7C] edx +
mov edx [eax] +
mov [esp+0CCh+var_B4] ecx +
mov ecx [esp+0CCh+var_7C] +
mov [esp+0CCh+var_B0] esi +
mov [esp+0CCh+var_AC] edx +
mov [esp+0CCh+var_B8] ecx +
mov ecx [eax+10h] +
lea edx [ecx+1] +
mov [esp+0CCh+var_BC] edx +
mov eax [eax+14h] +
mov [esp+0CCh+var_C4] offset a04u02u02ut02u0 +
mov [esp+0CCh+var_C8] 14h +
add eax 76Ch +
mov [esp+0CCh+var_C0] eax +
lea eax [esp+0CCh+var_4C] +
mov [esp+0CCh+var_CC] eax +
call sub_402590  +
mov eax [esp+0CCh+var_8C] +
mov [esp+0CCh+var_CC] offset a3lu_0 +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax [esp+0CCh+var_78] +
mov ecx ds:dword_472C54 +
add eax edi +
cmp [esp+0CCh+var_74] edi +
mov edi offset aCorrupt +
cmovbe eax edi +
test ecx ecx +
mov [esp+0CCh+var_C8] eax +
jz loc_423231  +
mov [esp+0CCh+var_CC] offset a20s +
call printf  +
mov eax [esp+0CCh+var_80] +
add ebp 14h +
mov [esp+0CCh+var_CC] offset aS010lx7ld7ld +
mov [esp+0CCh+var_BC] eax +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_C4] eax +
lea eax [esp+0CCh+var_4C] +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov eax [ebx+20h] +
mov edx [ebx+24h] +
mov esi [esp+0CCh+var_9C] +
mov edi [esp+0CCh+var_98] +
add [esp+0CCh+var_8C] 1 +
mov [esp+0CCh+var_C4] 14h +
add esi 1 +
mov [esp+0CCh+var_C0] 0 +
adc edi 0 +
mov [esp+0CCh+var_CC] eax +
mov [esp+0CCh+var_C8] edx +
call sub_43F880  +
cmp edx [esp+0CCh+var_98] +
jb loc_423217  +
ja loc_423224  +
cmp eax [esp+0CCh+var_9C] +
ja loc_423224  +
mov edi [esp+0CCh+var_78] +
mov ebp [esp+0CCh+var_70] +
jmp loc_421CA3  +
mov [esp+0CCh+var_9C] esi +
mov [esp+0CCh+var_98] edi +
jmp loc_423087  +
mov [esp+0CCh+var_CC] offset a20_20s +
call printf  +
jmp loc_4231A2  +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_CC] offset aSectionSHasThe +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_4220BB  +
mov edx [esp+0CCh+var_90] +
mov ecx edi +
mov [esp+0CCh+var_C0] eax +
xor eax eax +
mov [esp+0CCh+var_BC] offset aV850Notes +
mov [esp+0CCh+var_C4] ebx +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
test eax eax +
jz loc_422D62  +
lea ecx [eax+ebx] +
mov [esp+0CCh+var_C4] ebx +
mov [esp+0CCh+var_C8] edi +
mov [esp+0CCh+var_CC] offset aDisplayingCont +
mov [esp+0CCh+var_8C] eax +
mov [esp+0CCh+var_9C] ecx +
call printf  +
mov ebx [esp+0CCh+var_8C] +
mov eax ebx +
add eax 0Dh +
cmp [esp+0CCh+var_9C] eax +
jbe loc_423B6C  +
mov [esp+0CCh+var_7C] ebp +
mov [esp+0CCh+var_78] esi +
lea eax [ebx+8] +
mov [esp+0CCh+var_C8] 4 +
lea edi [ebx+0Ch] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] ebx +
mov [esp+0CCh+var_88] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] 4 +
mov ebp eax +
lea eax [ebx+4] +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
lea edx [ebp+3] +
and edx 0FFFFFFFCh +
add edx edi +
cmp [esp+0CCh+var_8C] edx +
mov [esp+0CCh+var_94] eax +
ja loc_423323  +
cmp [esp+0CCh+var_9C] edx +
ja loc_423337  +
mov [esp+0CCh+var_C8] ebp +
xor ebp ebp +
mov [esp+0CCh+var_CC] offset aCorruptNoteNam +
call sub_437070  +
mov edx edi +
mov eax [esp+0CCh+var_94] +
lea esi [eax+3] +
and esi 0FFFFFFFCh +
add esi edx +
cmp [esp+0CCh+var_8C] esi +
ja loc_4241A9  +
cmp [esp+0CCh+var_9C] esi +
jb loc_4241A9  +
add edi ebp +
cmp [esp+0CCh+var_9C] edi +
jb loc_423B2C  +
test ebp ebp +
js loc_423B2C  +
mov eax [esp+0CCh+var_88] +
cmp eax 6 +
ja loc_4233F2  +
jmp ds:off_44D6CC[eax*4]  +
mov eax offset aUseOfMmu +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset aS_22 +
mov [esp+0CCh+var_84] edx +
call printf  +
mov edx [esp+0CCh+var_84] +
cmp [esp+0CCh+var_94] 4 +
jz loc_423428  +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_C8] ebp +
mov [esp+0CCh+var_CC] offset aCorruptSizesNa +
mov [esp+0CCh+var_C4] eax +
call printf  +
lea eax [esi+0Dh] +
cmp [esp+0CCh+var_9C] eax +
jbe loc_424280  +
mov ebx esi +
jmp loc_4232C9  +
mov eax offset aUseOfCache +
jmp loc_423380  +
mov eax offset aUseOfSimdInstr +
jmp loc_423380  +
mov eax offset aTypeOfFpuSuppo +
jmp loc_423380  +
mov eax offset aSizeofDoubleAn +
jmp loc_423380  +
mov eax offset aAlignmentOf8By +
jmp loc_423380  +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_C4] offset aUnknownNoteTyp +
mov [esp+0CCh+var_C8] 40h +
mov [esp+0CCh+var_CC] offset unk_471040 +
mov [esp+0CCh+var_C0] eax +
mov [esp+0CCh+var_84] edx +
call sub_402590  +
mov eax offset unk_471040 +
mov edx [esp+0CCh+var_84] +
jmp loc_423380  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] edx +
call ds:dword_472C94  +
test eax eax +
jz loc_423DCD  +
mov edi [esp+0CCh+var_88] +
cmp edi 6 +
ja loc_423451  +
jmp ds:off_44D6E8[edi*4]  +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset aUnknownValueX +
call printf  +
jmp loc_4233A3  +
cmp eax 1 +
jnz loc_423451  +
mov [esp+0CCh+var_CC] offset aYes +
call puts  +
jmp loc_4233BB  +
cmp eax 1 +
jz loc_42436B  +
cmp eax 2 +
lea esi [esi+0] +
jnz loc_423451  +
mov [esp+0CCh+var_CC] offset aFpu3_0 +
call puts  +
jmp loc_4233BB  +
cmp eax 1 +
jz loc_42437C  +
cmp eax 2 +
nop   +
jnz loc_423451  +
mov [esp+0CCh+var_CC] offset a8Bytes +
call puts  +
jmp loc_4233BB  +
cmp eax 1 +
jz loc_4243A2  +
cmp eax 2 +
nop   +
jnz loc_423451  +
mov [esp+0CCh+var_CC] offset a8Byte +
call puts  +
jmp loc_4233BB  +
mov [esp+0CCh+var_CC] offset aThereAreNoDyna +
call puts  +
jmp loc_42185D  +
cmp ds:byte_471D67 0Dh +
jnz loc_421855  +
lea edx [esp+0CCh+var_4C] +
mov ebx ds:dword_472088 +
xor eax eax +
mov ecx 0Ah +
mov edi edx +
stos   +
mov ecx ds:dword_471D44 +
mov [esp+0CCh+var_5C] 0 +
mov eax ebx +
shl eax 4 +
add eax ecx +
mov ebp ecx +
cmp ecx eax +
mov [esp+0CCh+var_58] 0 +
mov [esp+0CCh+var_54] 0 +
mov [esp+0CCh+var_50] 0 +
jnb loc_424331  +
mov [esp+0CCh+var_88] 0 +
mov [esp+0CCh+var_9C] 0 +
mov [esp+0CCh+var_80] 0 +
mov [esp+0CCh+var_94] 0 +
jmp loc_4235BF  +
cmp edx 60000023h +
ja loc_4235DC  +
xor esi 0Ah +
or esi eax +
jz loc_423A18  +
cmp edx 0Ah +
ja loc_42382A  +
xor edx 1 +
or edx eax +
jnz loc_4235AD  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+0CCh+var_44] eax +
mov [esp+0CCh+var_40] edx +
mov eax ebx +
add ebp 10h +
shl eax 4 +
add eax ecx +
cmp ebp eax +
jnb loc_423A80  +
mov edx [ebp+0] +
mov eax [ebp+4] +
mov esi edx +
xor esi 60000023h +
or esi eax +
jz loc_423A9D  +
cmp eax 0 +
mov esi edx +
jbe loc_423576  +
xor esi 60000041h +
or esi eax +
jz loc_423A0C  +
cmp eax 0 +
ja loc_423617  +
cmp edx 60000041h +
ja loc_423617  +
xor edx 60000025h +
or edx eax +
jnz loc_4235AD  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+0CCh+var_3C] eax +
mov [esp+0CCh+var_38] edx +
jmp loc_4235AD  +
mov esi edx +
xor esi 60000045h +
or esi eax +
jz loc_423870  +
xor edx 60000049h +
or edx eax +
jnz loc_4235AD  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov edx [esp+0CCh+var_30] +
mov [esp+0CCh+var_BC] offset aDynamicSecti_1 +
mov [esp+0CCh+var_28] eax +
mov eax [esp+0CCh+var_34] +
mov [esp+0CCh+var_2C] ecx +
add ecx ds:dword_472098 +
mov [esp+0CCh+var_CC] 1 +
shld edx eax +
mov [esp+0CCh+var_C0] edx +
mov edx [esp+0CCh+var_90] +
shl eax 5 +
mov [esp+0CCh+var_C4] eax +
xor eax eax +
mov [esp+0CCh+var_C8] 0 +
add [esp+0CCh+var_9C] 1 +
call sub_403CC0  +
test eax eax +
mov [esp+0CCh+var_84] eax +
jz loc_423819  +
mov edx [esp+0CCh+var_40] +
mov eax [esp+0CCh+var_44] +
test edx edx +
jz loc_423D76  +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset aCorruptLibrary +
call sub_437070  +
mov eax offset a??? +
mov edx [esp+0CCh+var_4C] +
xor esi esi +
mov [esp+0CCh+var_C4] eax +
mov eax [esp+0CCh+var_3C] +
mov [esp+0CCh+var_CC] offset aImageFixupsFor +
mov [esp+0CCh+var_C0] edx +
mov [esp+0CCh+var_C8] eax +
call printf  +
mov [esp+0CCh+var_CC] offset aSegOffsetTypeS +
call puts  +
mov edi [esp+0CCh+var_34] +
mov eax [esp+0CCh+var_84] +
test edi edi +
lea ebx [eax+0Ch] +
jg loc_423780  +
jmp loc_42380D  +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset a32s +
call printf  +
lea eax [ebx+0Ch] +
add esi 1 +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_CC] offset a6u +
mov [esp+0CCh+var_C8] eax +
call printf  +
lea eax [ebx+10h] +
add ebx 20h +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_CC] offset a0x08x +
mov [esp+0CCh+var_C8] eax +
call printf  +
cmp esi [esp+0CCh+var_34] +
jge loc_42380D  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] ebx +
call ds:dword_472C94  +
mov [esp+0CCh+var_CC] offset a3u +
mov [esp+0CCh+var_C8] eax +
call printf  +
lea eax [ebx-0Ch] +
mov [esp+0CCh+var_C8] 8 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_C8] offset a016i64x_0 +
mov [esp+0CCh+var_C4] eax +
mov eax ds:_iob +
mov [esp+0CCh+var_C0] edx +
add eax 20h +
mov [esp+0CCh+var_CC] eax +
call fprintf  +
lea eax [ebx-4] +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov edi eax +
call sub_401560  +
test eax eax +
jnz loc_423715  +
mov [esp+0CCh+var_C8] edi +
mov [esp+0CCh+var_CC] offset a0x08x_0 +
call printf  +
jmp loc_423725  +
mov eax [esp+0CCh+var_84] +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ebx ds:dword_472088 +
mov ecx ds:dword_471D44 +
jmp loc_4235AD  +
mov esi edx +
xor esi 6000001Dh +
or esi eax +
jz loc_423857  +
xor edx 6000001Fh +
or edx eax +
jnz loc_4235AD  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+0CCh+var_5C] eax +
mov [esp+0CCh+var_58] edx +
jmp loc_4235AD  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+0CCh+var_4C] eax +
mov [esp+0CCh+var_48] edx +
jmp loc_4235AD  +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
imul ebx [esp+0CCh+var_58] +
mov [esp+0CCh+var_BC] offset aDynamicSecti_2 +
mov [esp+0CCh+var_50] eax +
mov eax 28h +
mul  [esp+0CCh+var_5C] +
mov [esp+0CCh+var_54] ecx +
add ecx ds:dword_472098 +
mov [esp+0CCh+var_CC] 1 +
add edx ebx +
mov [esp+0CCh+var_C0] edx +
mov edx [esp+0CCh+var_90] +
mov [esp+0CCh+var_C4] eax +
xor eax eax +
mov [esp+0CCh+var_C8] 0 +
add [esp+0CCh+var_9C] 1 +
call sub_403CC0  +
test eax eax +
mov [esp+0CCh+var_84] eax +
jz loc_423819  +
mov [esp+0CCh+var_CC] offset aImageRelocs +
xor esi esi +
call puts  +
mov [esp+0CCh+var_CC] offset aSegOffsetTypeA +
call puts  +
mov ecx [esp+0CCh+var_5C] +
mov eax [esp+0CCh+var_84] +
test ecx ecx +
lea ebx [eax+0Ch] +
jg loc_42398B  +
jmp loc_42380D  +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset a31s +
call printf  +
lea eax [ebx+4] +
add esi 1 +
mov [esp+0CCh+var_C8] 8 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov ecx 5 +
call sub_4055F0  +
lea eax [ebx+14h] +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_CC] offset a3u +
mov [esp+0CCh+var_C8] eax +
call printf  +
lea eax [ebx+0Ch] +
add ebx 28h +
mov [esp+0CCh+var_C8] 8 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_CC] offset a08i64x_1 +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_C4] edx +
call printf  +
cmp esi [esp+0CCh+var_5C] +
jge loc_42380D  +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] ebx +
call ds:dword_472C94  +
mov [esp+0CCh+var_CC] offset a3u +
mov [esp+0CCh+var_C8] eax +
call printf  +
lea eax [ebx-0Ch] +
mov [esp+0CCh+var_C8] 8 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov [esp+0CCh+var_CC] offset a08i64x_0 +
mov [esp+0CCh+var_C4] edx +
mov [esp+0CCh+var_C8] eax +
call printf  +
lea eax [ebx-4] +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov edi eax +
call sub_401560  +
test eax eax +
jnz loc_423901  +
mov [esp+0CCh+var_C8] edi +
mov [esp+0CCh+var_CC] offset a0x08x_1 +
call printf  +
jmp loc_423911  +
mov eax [ebp+8] +
mov [esp+0CCh+var_80] eax +
jmp loc_4235AD  +
mov esi [esp+0CCh+var_94] +
mov eax [ebp+8] +
test esi esi +
mov [esp+0CCh+var_88] eax +
mov eax [ebp+0Ch] +
jnz loc_4235AD  +
mov edi [esp+0CCh+var_88] +
mov ecx [esp+0CCh+var_80] +
mov edx [esp+0CCh+var_90] +
add ecx ds:dword_472098 +
mov [esp+0CCh+var_C0] eax +
xor eax eax +
mov [esp+0CCh+var_BC] offset aDynamicStringS +
mov [esp+0CCh+var_C4] edi +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
mov ebx ds:dword_472088 +
mov ecx ds:dword_471D44 +
mov [esp+0CCh+var_94] eax +
jmp loc_4235AD  +
mov eax [esp+0CCh+var_94] +
test eax eax +
jz loc_423A90  +
mov [esp+0CCh+var_CC] eax +
call free  +
mov ebp [esp+0CCh+var_9C] +
or ebp [esp+0CCh+var_8C] +
jmp loc_421855  +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov [esp+0CCh+var_34] eax +
mov [esp+0CCh+var_30] edx +
jmp loc_4235AD  +
mov eax [esp+0CCh+var_90] +
mov ecx 70000003h +
mov edx offset aMspabi +
mov [esp+0CCh+var_C8] 0 +
mov [esp+0CCh+var_CC] offset sub_4079D0 +
call sub_406B50  +
jmp loc_421D38  +
mov eax [eax+20h] +
mov [esp+0CCh+var_CC] offset aLd_0 +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_422B77  +
mov eax [edi] +
mov [esp+0CCh+var_CC] offset aD_6 +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_4226FE  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_422B1E  +
mov [esp+0CCh+var_C8] eax +
mov [esp+0CCh+var_CC] offset aLd_0 +
call printf  +
jmp loc_422B1E  +
mov eax esi +
mov edi ebp +
mov esi [esp+0CCh+var_78] +
sub eax [esp+0CCh+var_8C] +
mov ebp [esp+0CCh+var_7C] +
mov [esp+0CCh+var_CC] offset aCorruptNameszF +
mov [esp+0CCh+var_C8] eax +
call sub_437070  +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_C4] edi +
mov [esp+0CCh+var_CC] offset aType0xLxName_0 +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_C8] eax +
call sub_437070  +
mov eax [esp+0CCh+var_8C] +
mov [esp+0CCh+var_CC] eax +
call free  +
jmp loc_422D62  +
cmp ax 2Bh +
jnz loc_421D38  +
mov [esp+0CCh+var_C8] offset loc_416630 +
jmp loc_422E42  +
cmp ax 2 +
jz loc_423B87  +
cmp ax 8 +
jnz loc_421D38  +
mov eax [esp+0CCh+var_90] +
call sub_41EAE0  +
jmp loc_421D38  +
mov eax offset a_nds32_e_flags +
call sub_402450  +
test eax eax +
mov ebx eax +
jz loc_421D38  +
mov [esp+0CCh+var_CC] offset aNds32ElfFlagsS +
call puts  +
mov esi [ebx+20h] +
xor eax eax +
mov edi [ebx+24h] +
mov ecx [ebx+18h] +
mov edx [esp+0CCh+var_90] +
mov [esp+0CCh+var_BC] offset aNds32ElfFlag_0 +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C0] edi +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
mov eax [eax] +
and eax 3 +
cmp eax 2 +
jz loc_4242AF  +
cmp eax 3 +
jz loc_42429E  +
cmp eax 1 +
jz loc_42428D  +
mov [esp+0CCh+var_CC] offset aVec_sizeNoEntr +
call puts  +
jmp loc_421D38  +
mov [esp+0CCh+var_C8] offset loc_416580 +
jmp loc_422E42  +
call sub_404A60  +
jmp loc_421642  +
mov edi [esp+0CCh+var_8C] +
mov edx [esp+0CCh+var_3C] +
mov ecx [esp+0CCh+var_38] +
xor ecx [edi+34h] +
xor edx [edi+30h] +
or ecx edx +
jz loc_423DF6  +
mov eax edi +
call sub_401C80  +
mov [esp+0CCh+var_CC] offset aCompressedSect +
mov [esp+0CCh+var_C8] eax +
call sub_437070  +
jmp loc_4225E7  +
cmp ebx [esp+0CCh+var_7C] +
jz loc_423CC6  +
mov eax [esp+0CCh+var_9C] +
test eax eax +
jz loc_423C9F  +
mov [esp+0CCh+var_CC] eax +
call free  +
cmp ds:dword_471CF0 0 +
mov edx ebx +
lea ecx [esp+0CCh+var_4C] +
mov eax [esp+0CCh+var_90] +
jz loc_42408E  +
call sub_4042C0  +
mov [esp+0CCh+var_7C] ebx +
mov [esp+0CCh+var_9C] eax +
mov ecx [esp+0CCh+var_9C] +
test ecx ecx +
jz loc_4243B3  +
mov eax [ebp+2Ch] +
cmp eax [esp+0CCh+var_4C] +
jnb loc_424190  +
shl eax 5 +
add eax [esp+0CCh+var_9C] +
mov [esp+0CCh+var_88] eax +
movzx eax byte ptr [eax+14h] +
and eax 0Fh +
cmp al 3 +
jz loc_42411F  +
mov eax [esp+0CCh+var_7C] +
mov eax [eax+28h] +
cmp eax ds:dword_471DA4 +
jb loc_4240A2  +
xor ebx ebx +
test edi edi +
jz loc_423D1D  +
mov [esp+0CCh+var_CC] edi +
call free  +
mov [esp+0CCh+var_84] ebx +
xor edi edi +
mov ebx offset aCorrupt +
mov [esp+0CCh+var_8C] 0 +
mov edx [ebp+24h] +
cmp [ebp+3Ch] edx +
mov ecx [ebp+38h] +
mov eax [ebp+20h] +
jb loc_423E1F  +
jbe loc_423E17  +
mov ebx eax +
mov eax ebp +
mov [esp+0CCh+var_94] ecx +
call sub_401C80  +
mov edx [esp+0CCh+var_94] +
mov [esp+0CCh+var_C0] ebx +
mov [esp+0CCh+var_CC] offset aSectionSHasSh_ +
mov [esp+0CCh+var_C4] edx +
mov [esp+0CCh+var_C8] eax +
call sub_436A70  +
jmp loc_422FDE  +
cmp eax [esp+0CCh+var_88] +
jnb loc_4236B5  +
add eax [esp+0CCh+var_94] +
jmp loc_4236CA  +
mov [esp+0CCh+var_CC] offset aSectionHeade_1 +
call sub_436A70  +
mov ds:dword_471D18 0 +
jmp loc_4217D4  +
call sub_404690  +
mov [esp+0CCh+var_94] eax +
jmp loc_42279B  +
mov eax ds:dword_471DA4 +
jmp loc_42207D  +
mov [esp+0CCh+var_CC] offset aCorruptOutOfRa +
call printf  +
jmp loc_422BCE  +
mov [esp+0CCh+var_CC] offset aNotSet +
call puts  +
jmp loc_4233BB  +
mov eax [edx+28h] +
mov [esp+0CCh+var_CC] offset aU_1 +
mov [esp+0CCh+var_C8] eax +
call printf  +
jmp loc_422BCE  +
xor edi edi +
mov edx [esp+0CCh+var_44] +
add [esp+0CCh+var_60] eax +
sub [esp+0CCh+var_5C] eax +
mov ecx [esp+0CCh+var_40] +
sbb [esp+0CCh+var_58] edi +
jmp loc_42226E  +
cmp ecx eax +
ja loc_423D48  +
mov ecx [ebp+18h] +
mov [esp+0CCh+var_C0] edx +
mov edx [esp+0CCh+var_90] +
mov [esp+0CCh+var_C4] eax +
xor eax eax +
mov [esp+0CCh+var_BC] offset aSectionData +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
test eax eax +
mov [esp+0CCh+var_88] eax +
jz loc_422F50  +
mov eax [ebp+38h] +
mov edx [ebp+3Ch] +
mov [esp+0CCh+var_C4] eax +
mov [esp+0CCh+var_C0] edx +
mov eax [ebp+20h] +
mov edx [ebp+24h] +
mov [esp+0CCh+var_CC] eax +
mov [esp+0CCh+var_C8] edx +
call sub_43F880  +
mov [esp+0CCh+var_C8] 4 +
mov edx eax +
mov [esp+0CCh+var_70] eax +
mov eax [esp+0CCh+var_88] +
sub edx 1 +
mov [esp+0CCh+var_74] edx +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
mov ecx [esp+0CCh+var_88] +
mov edx ds:dword_471D24 +
add ecx 4 +
test edx edx +
mov [esp+0CCh+var_78] ecx +
jnz loc_4242C0  +
mov eax [esp+0CCh+var_80] +
mov [esp+0CCh+var_94] 1 +
mov [eax+4] esi +
mov eax [esp+0CCh+var_74] +
test eax eax +
jnz loc_423EFB  +
jmp loc_424044  +
mov edx ds:dword_471308 +
lea ecx [edx+1] +
cmp edx 9 +
mov ds:dword_471308 ecx +
jbe loc_42400B  +
add [esp+0CCh+var_94] 1 +
mov eax [esp+0CCh+var_94] +
cmp [esp+0CCh+var_70] eax +
jz loc_424044  +
mov eax [esp+0CCh+var_78] +
mov [esp+0CCh+var_C8] 4 +
mov [esp+0CCh+var_CC] eax +
call ds:dword_472C94  +
add [esp+0CCh+var_78] 4 +
mov ebx eax +
mov eax ds:dword_471DA4 +
cmp ebx eax +
jnb loc_423ED0  +
mov eax ds:dword_471CE0 +
lea ecx ds:0[ebx*4] +
add eax ecx +
mov edx [eax] +
test edx edx +
jz loc_423FBA  +
test ebx ebx +
jz loc_423F88  +
mov eax ds:dword_471304 +
lea ecx [eax+1] +
cmp eax 9 +
mov ds:dword_471304 ecx +
ja loc_423EE8  +
mov eax [edx+4] +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset aSection5uInGro +
mov [esp+0CCh+var_C0] eax +
call sub_436A70  +
cmp ds:dword_471304 0Ah +
jnz loc_423EE8  +
mov [esp+0CCh+var_CC] offset aFurtherErrorMe +
call sub_437070  +
jmp loc_423EE8  +
cmp ds:dword_471300 0 +
jnz loc_423FBA  +
mov eax [edx+4] +
mov [esp+0CCh+var_CC] offset aSection0InGrou +
mov [esp+0CCh+var_74] ecx +
mov [esp+0CCh+var_C8] eax +
call sub_436A70  +
mov ecx [esp+0CCh+var_74] +
mov eax ds:dword_471CE0 +
add ds:dword_471300 1 +
add eax ecx +
mov ecx [esp+0CCh+var_80] +
mov [eax] ecx +
mov eax ds:dword_471D24 +
test eax eax +
jz loc_423FED  +
mov eax ds:dword_471D4C +
lea edx [ebx+ebx*8] +
lea eax [eax+edx*8] +
call sub_401C80  +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset a5uS +
mov [esp+0CCh+var_C4] eax +
call printf  +
mov [esp+0CCh+var_CC] 8 +
call sub_438CA0  +
mov ecx [esp+0CCh+var_80] +
mov edx [ecx] +
mov [eax+4] ebx +
mov [eax] edx +
mov [ecx] eax +
jmp loc_423EE8  +
sub eax 1 +
mov [esp+0CCh+var_C0] eax +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset aSection5uInG_0 +
call sub_436A70  +
cmp ds:dword_471308 0Ah +
jnz loc_423EE8  +
mov [esp+0CCh+var_CC] offset aFutherErrorMes +
call sub_437070  +
jmp loc_423EE8  +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_CC] eax +
call free  +
add [esp+0CCh+var_80] 8 +
jmp loc_422F50  +
mov eax ds:dword_471CCC +
xor edx edx +
jmp loc_422650  +
mov esi 1 +
jmp loc_421834  +
mov [esp+0CCh+var_C8] esi +
mov [esp+0CCh+var_CC] offset aOutOfMemoryR_3 +
call sub_436A70  +
jmp loc_423D95  +
xor eax eax +
xor edx edx +
jmp loc_422650  +
nop   +
call sub_404690  +
mov [esp+0CCh+var_7C] ebx +
mov [esp+0CCh+var_9C] eax +
jmp loc_423CC6  +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea ebx [eax+edx*8] +
cmp ebx [esp+0CCh+var_84] +
jz loc_424107  +
test edi edi +
jz loc_4240BF  +
mov [esp+0CCh+var_CC] edi +
call free  +
mov edx [ebx+24h] +
mov eax [ebx+20h] +
mov ecx [ebx+18h] +
mov [esp+0CCh+var_BC] offset aStringTable +
mov [esp+0CCh+var_C0] edx +
mov edx [esp+0CCh+var_90] +
mov [esp+0CCh+var_C4] eax +
xor eax eax +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
test eax eax +
mov edi eax +
jz loc_423D1D  +
mov eax [ebx+20h] +
mov [esp+0CCh+var_84] ebx +
mov [esp+0CCh+var_8C] eax +
mov eax [esp+0CCh+var_88] +
mov ebx [eax+10h] +
cmp ebx [esp+0CCh+var_8C] +
jnb loc_42433E  +
add ebx edi +
jmp loc_423D30  +
mov eax [esp+0CCh+var_88] +
mov eax [eax+18h] +
test eax eax +
jz loc_424190  +
cmp eax ds:dword_471DA4 +
jnb loc_424190  +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea eax [eax+edx*8] +
test eax eax +
jz loc_4243EB  +
mov edx ds:dword_47207C +
test edx edx +
jz loc_4243E1  +
mov eax [eax] +
mov ebx offset aCorrupt +
add edx eax +
cmp eax ds:dword_472078 +
cmovb ebx edx +
test edi edi +
jz loc_4243CC  +
mov [esp+0CCh+var_CC] edi +
xor edi edi +
call free  +
mov [esp+0CCh+var_8C] 0 +
mov [esp+0CCh+var_84] 0 +
jmp loc_423D30  +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_CC] offset aBadSh_infoInGr +
mov [esp+0CCh+var_C8] eax +
call sub_436A70  +
jmp loc_422F50  +
sub ebx [esp+0CCh+var_8C] +
mov edi ebp +
mov esi [esp+0CCh+var_78] +
mov ebp [esp+0CCh+var_7C] +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset aCorruptDescszF +
jmp loc_423B47  +
mov ecx offset sub_415CE0 +
jmp loc_421906  +
lea edx [eax+eax*8] +
mov eax ds:dword_471D4C +
lea eax [eax+edx*8] +
mov edx [eax+24h] +
mov ecx eax +
mov eax [eax+20h] +
mov [esp+0CCh+var_88] ecx +
mov ecx [ecx+18h] +
mov [esp+0CCh+var_BC] offset aStringTable +
mov [esp+0CCh+var_C0] edx +
mov edx [esp+0CCh+var_90] +
mov [esp+0CCh+var_C4] eax +
xor eax eax +
mov [esp+0CCh+var_CC] 1 +
mov [esp+0CCh+var_C8] 0 +
call sub_403CC0  +
test eax eax +
mov ecx eax +
jz loc_4227BE  +
mov edx [esp+0CCh+var_9C] +
xor eax eax +
mov [esp+0CCh+var_9C] ecx +
cmp dword ptr [edx+4] 0Bh +
mov edx [esp+0CCh+var_8C] +
setz al  +
mov [esp+0CCh+var_B8] eax +
mov eax [esp+0CCh+var_88] +
mov [esp+0CCh+var_BC] edx +
mov edx [esp+0CCh+var_94] +
mov eax [eax+20h] +
mov [esp+0CCh+var_C4] ecx +
mov ecx ebx +
mov [esp+0CCh+var_CC] edx +
mov edx esi +
mov [esp+0CCh+var_C0] eax +
mov eax [esp+0CCh+var_4C] +
mov [esp+0CCh+var_C8] eax +
mov eax [esp+0CCh+var_90] +
call sub_40F500  +
mov ecx [esp+0CCh+var_9C] +
mov [esp+0CCh+var_CC] ecx +
call free  +
jmp loc_422807  +
mov ebp [esp+0CCh+var_7C] +
mov esi [esp+0CCh+var_78] +
jmp loc_423B6C  +
mov [esp+0CCh+var_CC] offset aVec_size4Bytes +
call puts  +
jmp loc_421D38  +
mov [esp+0CCh+var_CC] offset aVec_sizeReserv +
call puts  +
jmp loc_421D38  +
mov [esp+0CCh+var_CC] offset aVec_size16Byte +
call puts  +
jmp loc_421D38  +
test eax eax +
mov edx offset unk_44640B +
jz loc_4242F8  +
cmp eax 1 +
mov edx offset aComdat +
jz loc_4242F8  +
mov [esp+0CCh+var_C0] eax +
mov [esp+0CCh+var_C4] offset aUnknown0xX_1 +
mov [esp+0CCh+var_C8] 20h +
mov [esp+0CCh+var_CC] offset unk_4712E0 +
call sub_402590  +
mov edx offset unk_4712E0 +
mov eax [esp+0CCh+var_74] +
mov [esp+0CCh+var_BC] ebx +
mov [esp+0CCh+var_C4] esi +
mov [esp+0CCh+var_C8] edx +
mov [esp+0CCh+var_B8] eax +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_CC] offset aSgroupSection5 +
mov [esp+0CCh+var_C0] eax +
call printf  +
mov [esp+0CCh+var_CC] offset aIndexName +
call puts  +
jmp loc_423EB3  +
mov [esp+0CCh+var_9C] 0 +
jmp loc_423A90  +
mov ebx offset aCorrupt +
jmp loc_423D30  +
mov esi [esp+0CCh+var_9C] +
mov edi offset a_debug_line__1 +
mov ecx 0Ch +
cmps   +
jnz loc_4223E5  +
mov [esp+0CCh+var_88] 4 +
jmp loc_4224D6  +
mov [esp+0CCh+var_CC] offset aFpu2_0 +
call puts  +
jmp loc_4233BB  +
mov [esp+0CCh+var_CC] offset a4Bytes +
call puts  +
jmp loc_4233BB  +
mov [esp+0CCh+var_C8] ebx +
mov [esp+0CCh+var_CC] offset aOutOfMemoryR_4 +
call sub_436A70  +
jmp loc_423D95  +
mov [esp+0CCh+var_CC] offset a4Byte +
call puts  +
jmp loc_4233BB  +
mov eax [esp+0CCh+var_94] +
mov [esp+0CCh+var_CC] offset aCorruptHeaderI +
mov [esp+0CCh+var_C8] eax +
call sub_436A70  +
jmp loc_422F50  +
mov [esp+0CCh+var_8C] 0 +
mov [esp+0CCh+var_84] 0 +
jmp loc_423D30  +
mov ebx offset aNoName +
jmp loc_424165  +
mov ebx offset aNone_0 +
jmp loc_424165  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 11Ch +
mov [esp+120h+var_F4] eax +
mov eax ds:dword_471CF4 +
lea edi [esp+120h+var_F0] +
mov [esp+120h+var_11C] esi +
lea esi [esp+120h+var_80] +
mov [esp+120h+var_114] ecx +
mov [esp+120h+var_118] edx +
mov [esp+120h+var_110] eax +
mov [esp+120h+var_120] edi +
mov [esp+120h+var_104] edx +
mov [esp+120h+var_FC] ecx +
mov ds:dword_471D3C 1 +
mov [esp+120h+var_F0] 0 +
mov [esp+120h+var_EC] 0 +
mov [esp+120h+var_E0] 0 +
mov [esp+120h+var_DC] 0 +
mov [esp+120h+var_D4] 0 +
mov [esp+120h+var_80] 0 +
mov [esp+120h+var_7C] 0 +
mov [esp+120h+var_70] 0 +
mov [esp+120h+var_6C] 0 +
mov [esp+120h+var_64] 0 +
call sub_437600  +
test eax eax +
jnz loc_424670  +
mov ebx ds:dword_471CF4 +
test ebx ebx +
jnz loc_4246B0  +
mov [esp+120h+var_100] 0 +
jmp loc_42451F  +
mov eax [esp+120h+var_C8] +
mov edx [esp+120h+var_104] +
mov ds:dword_4720AC eax +
add eax ds:dword_4720A8 +
mov [esp+120h+var_C8] eax +
mov eax ebx +
call sub_421210  +
or [esp+120h+var_100] eax +
mov eax ds:dword_471CD0 +
test eax eax +
jz loc_424517  +
mov [esp+120h+var_120] eax +
call free  +
mov ds:dword_471CD0 0 +
mov ds:dword_471CCC 0 +
mov [esp+120h+var_120] ebx +
call free  +
mov eax [esp+120h+var_C8] +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_11C] eax +
mov eax [esp+120h+var_104] +
mov [esp+120h+var_120] eax +
call fseek  +
test eax eax +
jnz loc_4249F0  +
mov eax [esp+120h+var_104] +
mov [esp+120h+var_118] 3Ch +
mov [esp+120h+var_11C] 1 +
mov [esp+120h+var_114] eax +
lea eax [esp+120h+var_BC] +
mov [esp+120h+var_120] eax +
call fread  +
cmp eax 3Ch +
jnz loc_424A10  +
lea eax [esp+9Eh] +
mov [esp+120h+var_118] 2 +
mov [esp+120h+var_11C] offset asc_44D8DB +
mov [esp+120h+var_120] eax +
call memcmp  +
test eax eax +
jnz loc_424A40  +
lea eax [esp+120h+var_8C] +
mov [esp+120h+var_118] 0Ah +
mov [esp+120h+var_11C] 0 +
mov [esp+120h+var_120] eax +
add [esp+120h+var_C8] 3Ch +
call strtoul  +
test al 1 +
jz loc_4245C2  +
add eax 1 +
lea esi [esp+120h+var_80] +
mov [esp+120h+var_11C] esi +
mov [esp+120h+var_120] edi +
mov ds:dword_4720A8 eax +
call sub_437A90  +
test eax eax +
mov ebp eax +
jz loc_4249B0  +
mov [esp+120h+var_120] eax +
call strlen  +
mov [esp+120h+var_118] ebp +
mov [esp+120h+var_11C] esi +
mov [esp+120h+var_120] edi +
mov [esp+120h+var_F8] eax +
call sub_437CA0  +
test eax eax +
mov ebx eax +
jz loc_4249B0  +
mov eax [esp+120h+var_FC] +
test eax eax +
jz loc_4244D0  +
mov ecx [esp+120h+var_CC] +
test ecx ecx +
jz loc_424940  +
mov eax [esp+120h+var_7C] +
test eax eax +
jz loc_424AB0  +
lea edx [ecx+3Ch] +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_11C] edx +
mov [esp+120h+var_120] eax +
mov ds:dword_4720AC edx +
call fseek  +
test eax eax +
jnz loc_424AD5  +
mov edx [esp+120h+var_7C] +
mov eax ebx +
call sub_421210  +
or [esp+120h+var_100] eax +
jmp loc_4244F2  +
mov [esp+120h+var_100] 1 +
mov eax [esp+120h+var_7C] +
test eax eax +
jz loc_42468B  +
mov [esp+120h+var_120] eax +
call fclose  +
mov [esp+120h+var_120] esi +
call sub_4378F0  +
mov [esp+120h+var_120] edi +
call sub_4378F0  +
mov eax [esp+120h+var_100] +
add esp 11Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+120h+var_DC] +
test ecx ecx +
jz loc_424B00  +
mov eax [esp+120h+var_D8] +
mov [esp+120h+var_120] offset aIndexOfArchive +
mov [esp+120h+var_114] eax +
mov eax [esp+120h+var_E8] +
mov [esp+120h+var_118] eax +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_11C] eax +
call printf  +
mov eax [esp+120h+var_104] +
mov [esp+120h+var_120] eax +
call ftell  +
mov [esp+120h+var_F8] eax +
mov eax [esp+120h+var_E4] +
or eax [esp+120h+var_E8] +
jz loc_424B19  +
xor ebp ebp +
xor ebx ebx +
mov [esp+120h+var_100] ebp +
mov edx [esp+120h+var_100] +
mov eax [esp+120h+var_E0] +
test edx edx +
mov ecx [eax+ebp] +
jz loc_424727  +
mov esi [eax+ebp-8] +
mov edx [eax+ebp+4] +
xor edx [eax+ebp-4] +
xor esi ecx +
or edx esi +
jz loc_424798  +
lea eax [esp+120h+var_80] +
mov [esp+120h+var_118] eax +
mov [esp+120h+var_11C] ecx +
mov [esp+120h+var_120] edi +
call sub_4379C0  +
test eax eax +
jz loc_424798  +
mov [esp+120h+var_118] eax +
lea eax [esp+120h+var_80] +
mov [esp+120h+var_11C] eax +
mov [esp+120h+var_120] edi +
call sub_437CA0  +
test eax eax +
jz loc_424798  +
mov [esp+120h+var_11C] eax +
mov esi eax +
mov [esp+120h+var_120] offset aContentsOfBina +
call printf  +
mov eax [esp+120h+var_E0] +
mov ecx 4 +
mov edx [eax+ebp+4] +
mov eax [eax+ebp] +
call sub_4055F0  +
mov [esp+120h+var_120] 0Ah +
call putchar  +
mov [esp+120h+var_120] esi +
call free  +
mov eax [esp+120h+var_D8] +
cmp eax ebx +
jbe loc_4249D1  +
mov edx [esp+120h+var_DC] +
sub eax ebx +
add ebp 8 +
mov [esp+120h+var_11C] eax +
mov [esp+120h+var_120] offset a_S_2 +
add edx ebx +
mov [esp+120h+var_118] edx +
call printf  +
mov eax [esp+120h+var_D8] +
sub eax ebx +
mov [esp+120h+var_11C] eax +
mov eax [esp+120h+var_DC] +
add eax ebx +
mov [esp+120h+var_120] eax +
call sub_4401F0  +
xor edx edx +
add [esp+120h+var_100] 1 +
cmp edx [esp+120h+var_E4] +
lea ebx [eax+ebx+1] +
mov eax [esp+120h+var_100] +
jbe loc_424913  +
mov eax [esp+120h+var_C0] +
test eax eax +
jnz loc_42492F  +
mov eax ebx +
and eax 1 +
add ebx eax +
mov eax [esp+120h+var_D8] +
cmp ebx eax +
jb loc_424A90  +
mov eax [esp+120h+var_F8] +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_11C] eax +
mov eax [esp+120h+var_104] +
mov [esp+120h+var_120] eax +
call fseek  +
test eax eax +
jnz loc_424A68  +
mov eax ds:dword_471D38 +
test eax eax +
jnz loc_4244BF  +
mov eax ds:dword_471D34 +
test eax eax +
jnz loc_4244BF  +
mov eax ds:dword_471D2C +
test eax eax +
jnz loc_4244BF  +
mov eax ds:dword_471D18 +
test eax eax +
jnz loc_4244BF  +
mov ebp ds:dword_471D28 +
test ebp ebp +
jnz loc_4244BF  +
mov esi ds:dword_471D1C +
test esi esi +
jnz loc_4244BF  +
mov ebx ds:dword_471D10 +
test ebx ebx +
jnz loc_4244BF  +
mov ecx ds:dword_471D0C +
test ecx ecx +
jnz loc_4244BF  +
mov edx ds:dword_471D08 +
test edx edx +
jnz loc_4244BF  +
cmp ds:dword_471D04 0 +
jnz loc_4244BF  +
cmp ds:dword_471D00 0 +
jnz loc_4244BF  +
cmp ds:dword_471CFC 0 +
jnz loc_4244BF  +
cmp ds:dword_471CF8 0 +
jnz loc_4244BF  +
cmp ds:dword_471D24 0 +
jnz loc_4244BF  +
cmp ds:dword_471D30 0 +
jnz loc_4244BF  +
mov [esp+120h+var_100] 0 +
lea esi [esp+120h+var_80] +
jmp loc_424678  +
jb loc_424706  +
cmp eax [esp+120h+var_E8] +
jb loc_424706  +
mov eax [esp+120h+var_C0] +
test eax eax +
jz loc_424800  +
add ebx 7 +
and ebx 0FFFFFFF8h +
jmp loc_424807  +
mov eax [esp+120h+var_F8] +
mov [esp+120h+var_11C] ebp +
mov [esp+120h+var_118] eax +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_120] eax +
call sub_4374F0  +
test eax eax +
mov ebp eax +
jz loc_424670  +
mov [esp+120h+var_11C] offset aRb_0 +
mov [esp+120h+var_120] eax +
call fopen  +
test eax eax +
mov ecx eax +
jz loc_424B20  +
mov eax [esp+120h+var_CC] +
mov edx ecx +
mov [esp+120h+var_F8] ecx +
mov ds:dword_4720AC eax +
mov eax ebx +
call sub_421210  +
mov ecx [esp+120h+var_F8] +
or [esp+120h+var_100] eax +
mov [esp+120h+var_120] ecx +
call fclose  +
mov [esp+120h+var_120] ebp +
call free  +
jmp loc_4244F2  +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_120] offset aSBadArchiveFil +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
mov [esp+120h+var_100] 1 +
jmp loc_424678  +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_120] offset aSEndOfTheSymbo +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
jmp loc_4247F4  +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_120] offset aSFailedToSeekT +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
mov eax 1 +
jmp loc_42469F  +
test eax eax +
lea esi [esp+120h+var_80] +
jz loc_424678  +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_120] offset aSFailedToRea_3 +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
mov [esp+120h+var_100] 1 +
jmp loc_424678  +
mov eax [esp+120h+var_F0] +
lea esi [esp+120h+var_80] +
mov [esp+120h+var_120] offset aSDidNotFindAVa +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
mov [esp+120h+var_100] 1 +
jmp loc_424678  +
mov eax [esp+120h+var_F4] +
lea esi [esp+120h+var_80] +
mov [esp+120h+var_120] offset aSFailedToSeekB +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
mov [esp+120h+var_100] 1 +
jmp loc_424678  +
sub eax ebx +
mov [esp+120h+var_118] eax +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_120] offset aSLdBytesRemain +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
jmp loc_424813  +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_118] ebp +
mov [esp+120h+var_120] offset aSContainsCorru +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
mov [esp+120h+var_100] 1 +
jmp loc_424678  +
mov eax [esp+120h+var_80] +
mov [esp+120h+var_120] offset aSFailedToSee_0 +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
mov [esp+120h+var_100] 1 +
jmp loc_424678  +
mov eax [esp+120h+var_F4] +
mov [esp+120h+var_120] offset aSUnableToDumpT +
mov [esp+120h+var_11C] eax +
call sub_436A70  +
jmp loc_424837  +
xor ebx ebx +
jmp loc_4247F4  +
mov [esp+120h+var_11C] ebp +
mov [esp+120h+var_120] offset aInputFileSIsNo +
call sub_436A70  +
mov [esp+120h+var_120] ebp +
call free  +
mov [esp+120h+var_100] 1 +
jmp loc_424678  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset aGnuBinutils2_2 +
mov [esp+1Ch+var_1C] offset aGnuSS +
mov [esp+1Ch+var_18] eax +
call printf  +
mov [esp+1Ch+var_1C] offset aCopyrightC2015 +
call puts  +
mov [esp+1Ch+var_1C] offset aThisProgramIsF +
call puts  +
mov [esp+1Ch+var_1C] 0 +
call exit  +
test edx edx +
jz loc_424BE4  +
push ebx  +
xor ecx ecx +
xor ebx ebx +
jmp loc_424BB4  +
test edx edx +
jz loc_424BDF  +
test dl 1 +
jz loc_424BD5  +
test ebx ebx +
jz loc_424BC3  +
mov byte ptr [eax] 2Ch +
add eax 1 +
lea ebx [ecx+31h] +
add eax 2 +
mov [eax-1] bl +
mov ebx 1 +
mov byte ptr [eax-2] 62h +
add ecx 1 +
shr edx 1 +
cmp ecx 4 +
jle loc_424BB0  +
mov byte ptr [eax] 0 +
pop ebx  +
retn   +
mov byte ptr [eax] 0 +
retn   +
***
xor ebx ebx +
test dl 1 +
jz loc_424C15  +
test ebx ebx +
jz loc_424C07  +
mov byte ptr [eax] 2Ch +
add eax 1 +
mov byte ptr [eax] 72h +
mov ebx 1 +
add eax 2 +
mov [eax-1] cl +
add ecx 1 +
shr edx 1 +
cmp cl 38h +
jnz loc_424BF8  +
mov byte ptr [eax] 0 +
pop ebx  +
retn   +
***
push edi  +
mov ebp 66666667h +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
xor eax eax +
jmp loc_424C79  +
lea edi [ecx+2] +
add ebx 3 +
mov eax edi +
imul  ebp +
mov eax edi +
sar eax 1Fh +
sar edx 2 +
sub edx eax +
lea eax [edx+31h] +
mov [ebx-2] al +
lea eax [edx+edx*4] +
add eax eax +
sub edi eax +
lea eax [edi+30h] +
mov [ebx-1] al +
mov eax 1 +
add ecx 1 +
shr esi 1 +
cmp ecx 14h +
jz loc_424CB0  +
test esi 1 +
jz loc_424C6F  +
test eax eax +
jz loc_424C8B  +
mov byte ptr [ebx] 2Ch +
add ebx 1 +
cmp ecx 3 +
mov byte ptr [ebx] 66h +
jg loc_424C43  +
lea eax [ecx+32h] +
add ecx 1 +
mov [ebx+1] al +
shr esi 1 +
add ebx 2 +
cmp ecx 14h +
mov eax 1 +
jnz loc_424C79  +
nop   +
lea esi [esi+0] +
mov byte ptr [ebx] 0 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
lea ebx [eax+1] +
movzx eax byte ptr [eax] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_424D0D  +
xor ecx ecx +
nop   +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_424CFF  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_424CE0  +
mov eax [esp+24h+arg_4] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] offset aB2 +
mov [esp+24h+var_24] offset aSEpilogueTLuEc +
and eax 1Fh +
mov [esp+24h+var_18] eax +
call printf  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] offset aB1 +
mov edx eax +
and edx 1Fh +
test al 20h +
mov [esp+1Ch+var_14] edx +
jnz loc_424D70  +
mov [esp+1Ch+var_1C] offset aSLabel_stateLa +
call printf  +
mov eax [esp+1Ch+arg_0] +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] offset aSCopy_stateLab +
call printf  +
mov eax [esp+1Ch+arg_0] +
add esp 1Ch +
retn   +
***
mov eax [esp+0E8h+arg_4] +
lea ebx [esp+0E8h+var_D0] +
mov edx eax +
and edx 0Fh +
test al 10h +
movzx edx dl +
mov eax ebx +
jnz loc_424DE0  +
call sub_424C30  +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] offset aP6 +
mov [esp+0E8h+var_E8] offset aSFr_memFrmaskS +
call printf  +
mov eax [esp+0E8h+arg_0] +
add esp 0E8h +
pop ebx  +
retn   +
call sub_424BF0  +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] offset aP6 +
mov [esp+0E8h+var_E8] offset aSGr_memGrmaskS +
call printf  +
mov eax [esp+0E8h+arg_0] +
add esp 0E8h +
pop ebx  +
retn   +
***
mov edx [esp+38h+arg_4] +
lea ebx [esp+38h+var_1C] +
mov eax ebx +
and edx 1Fh +
call loc_424BA0  +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_34] offset aP1 +
mov [esp+38h+var_38] offset aSBr_memBrmaskS +
call printf  +
mov eax [esp+38h+arg_0] +
add esp 38h +
pop ebx  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+24h+arg_0] +
lea ebx [eax+1] +
movzx eax byte ptr [eax] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_424E9D  +
xor ecx ecx +
nop   +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_424E8F  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_424E70  +
mov eax [esp+24h+arg_4] +
mov ds:dword_4720C0 esi +
mov ds:dword_4720C4 edi +
and eax 3 +
cmp eax 1 +
mov eax [esp+24h+arg_8] +
setz dl  +
movzx ecx dl +
test dl dl +
mov edx offset aPrologue +
mov [eax] ecx +
mov eax offset aBody +
cmovz eax edx +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_20] offset aR3 +
mov [esp+24h+var_24] offset aSSRlenLu +
call printf  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov ecx [esp+1Ch+arg_4] +
mov edx [esp+1Ch+arg_8] +
mov ds:dword_4720C4 0 +
mov eax ecx +
and ecx 1Fh +
shr eax 5 +
and eax 1 +
mov [edx] eax +
test eax eax +
mov edx offset aBody +
mov eax offset aPrologue +
cmovz edx eax +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] offset aR1 +
mov [esp+1Ch+var_1C] offset aSSRlenLu +
mov ds:dword_4720C0 ecx +
call printf  +
mov eax [esp+1Ch+arg_0] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov eax [esp+10Ch+arg_4] +
mov ebp [esp+10Ch+arg_0] +
test al 10h +
jz loc_425078  +
test al 8 +
jnz loc_424FB0  +
movzx edx byte ptr [ebp+0] +
and eax 7 +
add eax eax +
lea ebx [ebp+1] +
mov ecx edx +
and edx 7Fh +
shr cl 7 +
or eax ecx +
cmp al 0Bh +
movzx eax al +
ja loc_425392  +
movzx edx dl +
jmp ds:off_462A84[eax*4]  +
mov edx eax +
and edx 7 +
jnz loc_4250C5  +
mov eax ds:dword_4720C0 +
mov edx ds:dword_4720C4 +
shrd eax edx +
lea ebx [ebp+eax+0] +
cmp [esp+10Ch+arg_C] ebx +
jb loc_425144  +
mov [esp+10Ch+var_108] offset aP4 +
mov [esp+10Ch+var_10C] offset aSSpill_maskIma +
call printf  +
mov eax ds:dword_4720C4 +
or eax ds:dword_4720C0 +
jz loc_4253A7  +
xor esi esi +
xor edi edi +
mov eax esi +
and eax 3 +
test eax eax +
mov [esp+10Ch+var_ED] 0 +
jnz loc_42510D  +
movzx eax byte ptr [ebp+0] +
lea ebx [ebp+1] +
mov [esp+10Ch+var_ED] al +
mov eax edi +
or eax esi +
jnz loc_4253AE  +
movzx eax [esp+10Ch+var_ED] +
mov ecx esi +
not ecx  +
and ecx 3 +
add ecx ecx +
sar eax cl +
and eax 3 +
movsx eax ds:byte_462A4F[eax] +
mov [esp+10Ch+var_10C] eax +
call putchar  +
add esi 1 +
adc edi 0 +
cmp ds:dword_4720C4 edi +
jnb loc_4250F0  +
mov [esp+10Ch+var_10C] offset unk_462A54 +
call puts  +
add esp 10Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edi byte ptr [ebp+0] +
and eax 0Fh +
add eax eax +
lea esi [esp+10Ch+var_D4] +
lea ebx [ebp+1] +
mov edx edi +
and edi 7Fh +
shr dl 7 +
movzx edx dl +
or edx eax +
mov eax esi +
call loc_424BA0  +
mov [esp+10Ch+var_100] edi +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_108] offset aP2 +
mov [esp+10Ch+var_10C] offset aSBr_grBrmaskSG +
call printf  +
***
add esp 10Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx 1 +
jz loc_425335  +
mov [esp+10Ch+var_108] eax +
mov ebx ebp +
mov [esp+10Ch+var_10C] offset aUnknownCode0x0 +
call printf  +
add esp 10Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+arg_8] edx +
mov [esp+arg_4] offset aFpsr +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSS_grRegRU +
call printf  +
jmp loc_4250B8  +
***
mov [esp+arg_4] edx +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSPriunat_grReg +
call printf  +
jmp loc_4250B8  +
***
mov [esp+0Ch] edx +
mov [esp+arg_8] edx +
mov [esp+arg_4] offset aRp +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSS_grRegRU +
call printf  +
jmp loc_4250B8  +
***
mov [esp+arg_8] edx +
mov [esp+arg_8] edx +
mov [esp+arg_4] offset aPr +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSS_grRegRU +
call printf  +
jmp loc_4250B8  +
***
mov [esp+arg_8] edx +
mov [esp+arg_8] edx +
mov [esp+arg_4] offset aLc +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSS_grRegRU +
call printf  +
jmp loc_4250B8  +
***
mov [esp+arg_4] edx +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSRp_brRegBU +
call printf  +
jmp loc_4250B8  +
***
mov [esp+arg_8] edx +
mov [esp+arg_8] edx +
mov [esp+arg_4] offset aBsp +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSS_grRegRU +
call printf  +
jmp loc_4250B8  +
***
mov [esp+arg_8] edx +
mov [esp+arg_4] offset aBspstore +
mov [esp+arg_0] offset aP3 +
mov dword ptr [esp+0] offset aSS_grRegRU +
call printf  +
jmp loc_4250B8  +
***
movzx edx byte ptr [ebp+0] +
lea edi [esp+10Ch+var_E8] +
movzx eax byte ptr [ebp+1] +
lea ebx [ebp+3] +
movzx ecx byte ptr [ebp+2] +
lea ebp [esp+10Ch+var_D4] +
mov esi edx +
shl eax 8 +
and esi 0Fh +
or eax ecx +
xor ecx ecx +
shl esi 10h +
shrd edx ecx +
or esi eax +
mov eax edi +
call sub_424BF0  +
mov edx esi +
mov eax ebp +
call sub_424C30  +
mov [esp+10Ch+var_100] ebp +
mov [esp+10Ch+var_104] edi +
mov [esp+10Ch+var_108] offset unk_462A57 +
mov [esp+10Ch+var_10C] offset aSFrgr_memGrmas +
call printf  +
jmp loc_4250B8  +
mov [esp+10Ch+var_108] eax +
mov [esp+10Ch+var_10C] offset aUnknownCode0x0 +
call printf  +
jmp loc_4250B8  +
mov ebx ebp +
jmp loc_42505F  +
mov ebp ebx +
jmp loc_42510D  +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 7Ch +
movzx ecx [esp+84h+arg_4] +
mov eax [esp+84h+arg_0] +
and ecx 7 +
lea ebx [ecx+ecx] +
movzx edx byte ptr [eax] +
mov [esp+84h+var_66] bl +
lea ebx [eax+2] +
movzx eax byte ptr [eax+1] +
mov ecx edx +
and edx 7Fh +
mov esi eax +
shr cl 7 +
and esi 7Fh +
or [esp+84h+var_66] cl +
test al al +
mov [esp+84h+var_65] dl +
jns loc_425434  +
xor ecx ecx +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_425426  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_425407  +
mov eax [esp+84h+arg_8] +
test [esp+84h+var_66] 8 +
mov ds:dword_4720C0 esi +
mov ds:dword_4720C4 edi +
mov dword ptr [eax] 0 +
mov eax offset unk_462AB4 +
mov byte ptr [esp+84h+var_54] 0 +
jnz loc_4255D0  +
test [esp+84h+var_66] 4 +
lea ebp [esp+84h+var_54] +
jnz loc_425570  +
test [esp+84h+var_66] 2 +
jnz loc_425520  +
test [esp+84h+var_66] 1 +
jnz loc_4254D0  +
movzx eax [esp+84h+var_65] +
lea edi [esp+84h+var_64] +
mov [esp+84h+var_84] edi +
mov [esp+84h+var_80] offset unk_462AB7 +
mov [esp+84h+var_7C] eax +
call sprintf  +
mov [esp+84h+var_74] esi +
mov [esp+84h+var_78] edi +
mov [esp+84h+var_7C] ebp +
mov [esp+84h+var_80] offset unk_462ABB +
mov [esp+84h+var_84] offset aSPrologue_grMa +
call printf  +
add esp 7Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+84h+var_80] eax +
mov [esp+84h+var_84] ebp +
call strcat  +
mov ecx ebp +
mov edx [ecx] +
add ecx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_4254DE  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ecx+2] +
cmovnz edx ecx +
add al al +
sbb edx 3 +
mov eax 7270h +
mov [edx] ax +
mov byte ptr [edx+2] 0 +
jmp loc_425483  +
mov [esp+84h+var_80] eax +
mov [esp+84h+var_84] ebp +
call strcat  +
mov ecx ebp +
mov edx [ecx] +
add ecx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_42552E  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ecx+2] +
cmovnz edx ecx +
add al al +
sbb edx 3 +
mov eax offset unk_462AB5 +
mov dword ptr [edx] 707370h +
jmp loc_42547C  +
mov [esp+84h+var_80] eax +
mov [esp+84h+var_84] ebp +
call strcat  +
mov ecx ebp +
mov edx [ecx] +
add ecx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_42557E  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ecx+2] +
cmovnz edx ecx +
add al al +
sbb edx 3 +
mov ecx 7366h +
mov dword ptr [edx] 702E7261h +
mov eax offset unk_462AB5 +
mov [edx+4] cx +
mov byte ptr [edx+6] 0 +
jmp loc_425471  +
mov edi 7072h +
mov eax offset unk_462AB5 +
mov word ptr [esp+84h+var_54] di +
mov byte ptr [esp+84h+var_54+2] 0 +
jmp loc_425462  +
***
shr ebx 7 +
mov ecx edx +
sub esp 1Ch +
shr ecx 5 +
and ecx 3 +
cmp ecx 2 +
jz loc_4256D0  +
cmp ecx 3 +
jz loc_4256B0  +
and edx 1Fh +
cmp ecx 1 +
mov [esp+1Ch+var_14] edx +
jz loc_425695  +
mov [esp+1Ch+var_18] offset unk_462AB7 +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_18] offset aFU +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
add esp 1Ch +
retn   +
and edx 0Fh +
mov edx ds:off_462F60[edx*4] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] edx +
call strcpy  +
add esp 1Ch +
retn   +
and edx 1Fh +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] offset aBU +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
movzx edx byte ptr [eax] +
lea esi [eax+2] +
movzx eax byte ptr [eax+1] +
mov [esp+68h+var_44] 0 +
mov [esp+68h+var_39] dl +
mov edx eax +
and edx 7Fh +
test al al +
mov [esp+68h+var_48] edx +
jns loc_42576E  +
mov edx [esp+68h+var_44] +
mov ebx esi +
mov eax [esp+68h+var_48] +
mov [esp+68h+var_48] ecx +
lea esi [esi+0] +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
xor edi edi +
add [esp+68h+var_48] 7 +
movzx ecx byte ptr [esp+68h+var_48] +
mov esi ebp +
and esi 7Fh +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_425756  +
mov edi esi +
xor esi esi +
mov ecx ebp +
or esi eax +
or edi edx +
test cl cl +
mov eax esi +
mov edx edi +
js loc_425730  +
mov esi ebx +
mov [esp+68h+var_48] eax +
mov [esp+68h+var_44] edi +
movzx eax byte ptr [esi] +
lea ebx [esi+1] +
xor edi edi +
xor ecx ecx +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_4257AE  +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_4257A0  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_425781  +
movzx eax [esp+68h+var_39] +
lea edi [esp+68h+var_2C] +
mov edx eax +
and edx 7Fh +
test al al +
movzx edx dl +
mov eax edi +
js loc_425800  +
call sub_425660  +
mov eax [esp+68h+var_48] +
shl esi 2 +
mov [esp+68h+var_58] esi +
mov [esp+68h+var_60] edi +
mov [esp+68h+var_64] offset aX1 +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_68] offset aSSpill_psprelR +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_425660  +
mov eax [esp+68h+var_48] +
shl esi 2 +
mov [esp+68h+var_58] esi +
mov [esp+68h+var_60] edi +
mov [esp+68h+var_64] offset aX1 +
mov [esp+68h+var_5C] eax +
mov [esp+68h+var_68] offset aSSpill_sprelRe +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 5Ch +
movzx ebx byte ptr [eax+1] +
movzx ecx byte ptr [eax] +
mov [esp+64h+var_45] bl +
lea ebx [eax+3] +
movzx eax byte ptr [eax+2] +
mov [esp+64h+var_46] cl +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_42589D  +
xor ecx ecx +
lea esi [esi+0] +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_42588F  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_425870  +
movzx eax [esp+64h+var_46] +
mov edx eax +
and edx 7Fh +
test al al +
movzx edx dl +
jns loc_425900  +
lea edi [esp+64h+var_3C] +
mov eax edi +
call sub_425660  +
movzx edx [esp+64h+var_46] +
lea ebp [esp+64h+var_28] +
movzx ecx [esp+64h+var_45] +
mov eax ebp +
shr dl 7 +
movzx edx dl +
call sub_4255F0  +
mov [esp+64h+var_54] ebp +
mov [esp+64h+var_58] edi +
mov [esp+64h+var_5C] esi +
mov [esp+64h+var_60] offset aX2 +
mov [esp+64h+var_64] offset aSSpill_regTLuR +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+64h+var_45] 0 +
jnz loc_4258AE  +
lea edi [esp+64h+var_28] +
mov eax edi +
call sub_425660  +
mov [esp+64h+var_58] edi +
mov [esp+64h+var_5C] esi +
mov [esp+64h+var_60] offset aX2 +
mov [esp+64h+var_64] offset aSRestoreTLuReg +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
movzx edx byte ptr [eax] +
lea esi [eax+3] +
mov [esp+68h+var_44] 0 +
mov [esp+68h+var_3A] dl +
movzx edx byte ptr [eax+1] +
movzx eax byte ptr [eax+2] +
mov [esp+68h+var_39] dl +
mov edx eax +
and edx 7Fh +
test al al +
mov [esp+68h+var_48] edx +
jns loc_4259C0  +
mov edx [esp+68h+var_44] +
mov ebx esi +
mov eax [esp+68h+var_48] +
mov [esp+68h+var_48] ecx +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
xor edi edi +
add [esp+68h+var_48] 7 +
movzx ecx byte ptr [esp+68h+var_48] +
mov esi ebp +
and esi 7Fh +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_4259A8  +
mov edi esi +
xor esi esi +
mov ecx ebp +
or esi eax +
or edi edx +
test cl cl +
mov eax esi +
mov edx edi +
js loc_425982  +
mov esi ebx +
mov [esp+68h+var_48] eax +
mov [esp+68h+var_44] edi +
movzx eax byte ptr [esi] +
lea ebx [esi+1] +
xor edi edi +
xor ecx ecx +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_425A00  +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_4259F2  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_4259D3  +
movzx eax [esp+68h+var_3A] +
lea edi [esp+68h+var_2C] +
movzx edx [esp+68h+var_39] +
mov ebp eax +
and edx 7Fh +
and ebp 3Fh +
test al al +
movzx edx dl +
mov eax edi +
js loc_425A60  +
call sub_425660  +
mov eax [esp+68h+var_48] +
shl esi 2 +
mov [esp+68h+var_54] esi +
mov [esp+68h+var_58] edi +
mov [esp+68h+var_64] offset aX3 +
mov [esp+68h+var_5C] eax +
mov eax ebp +
movzx ebp al +
mov [esp+68h+var_60] ebp +
mov [esp+68h+var_68] offset aSSpill_psprel_ +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_425660  +
mov eax [esp+68h+var_48] +
shl esi 2 +
mov [esp+68h+var_54] esi +
mov [esp+68h+var_58] edi +
mov [esp+68h+var_64] offset aX3 +
mov [esp+68h+var_5C] eax +
mov eax ebp +
movzx ebp al +
mov [esp+68h+var_60] ebp +
mov [esp+68h+var_68] offset aSSpill_sprel_p +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 5Ch +
movzx ecx byte ptr [eax] +
movzx ebx byte ptr [eax+1] +
mov [esp+64h+var_46] cl +
movzx ecx byte ptr [eax+2] +
mov [esp+64h+var_47] bl +
lea ebx [eax+4] +
movzx eax byte ptr [eax+3] +
mov [esp+64h+var_45] cl +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_425AFF  +
xor ecx ecx +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_425AF1  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_425AD2  +
movzx eax [esp+64h+var_46] +
and eax 3Fh +
mov [esp+64h+var_46] al +
movzx eax [esp+64h+var_47] +
mov edx eax +
and edx 7Fh +
test al al +
movzx edx dl +
jns loc_425B75  +
lea edi [esp+64h+var_3C] +
mov eax edi +
call sub_425660  +
movzx edx [esp+64h+var_47] +
lea ebp [esp+64h+var_28] +
movzx ecx [esp+64h+var_45] +
mov eax ebp +
shr dl 7 +
movzx edx dl +
call sub_4255F0  +
movzx eax [esp+64h+var_46] +
mov [esp+64h+var_50] ebp +
mov [esp+64h+var_54] edi +
mov [esp+64h+var_58] esi +
mov [esp+64h+var_5C] eax +
mov [esp+64h+var_60] offset aX4 +
mov [esp+64h+var_64] offset aSSpill_reg_pQp +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+64h+var_45] 0 +
jnz loc_425B1C  +
lea edi [esp+64h+var_28] +
mov eax edi +
call sub_425660  +
movzx eax [esp+64h+var_46] +
mov [esp+64h+var_54] edi +
mov [esp+64h+var_58] esi +
mov [esp+64h+var_60] offset aX4 +
mov [esp+64h+var_5C] eax +
mov [esp+64h+var_64] offset aSRestore_pQpPU +
call printf  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
test al 10h +
mov [esp+2Ch+var_14] eax +
jnz loc_425CB0  +
movzx eax byte ptr [edi] +
xor ecx ecx +
lea esi [edi+1] +
mov [esp+2Ch+var_10] 0 +
mov edx eax +
and edx 7Fh +
test al al +
mov [esp+2Ch+var_14] edx +
jns loc_425C44  +
mov edx [esp+2Ch+var_10] +
mov ebx esi +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_14] ecx +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
xor edi edi +
add [esp+2Ch+var_14] 7 +
movzx ecx byte ptr [esp+2Ch+var_14] +
mov esi ebp +
and esi 7Fh +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_425C2C  +
mov edi esi +
xor esi esi +
mov ecx ebp +
or esi eax +
or edi edx +
test cl cl +
mov eax esi +
mov edx edi +
js loc_425C06  +
mov esi ebx +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] edi +
movzx eax byte ptr [esi] +
lea ebx [esi+1] +
xor edi edi +
xor ecx ecx +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_425C84  +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_425C76  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_425C57  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_28] offset aB3 +
mov [esp+2Ch+var_2C] offset aSEpilogueTLuEc +
mov [esp+2Ch+var_24] eax +
call printf  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_14] +
and eax 7 +
jnz loc_425D26  +
movzx eax byte ptr [edi] +
lea ebx [edi+1] +
xor edi edi +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_425CFD  +
xor ecx ecx +
lea esi [esi+0] +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_425CEF  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_425CD0  +
test byte ptr [esp+2Ch+var_14] 8 +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset aB4 +
jz loc_425D45  +
mov [esp+2Ch+var_2C] offset aSCopy_stateLab +
call printf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 2 +
jz loc_425D73  +
jbe loc_425D60  +
cmp eax 3 +
jz loc_425D9C  +
cmp eax 4 +
jnz loc_425D81  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425AA0  +
mov [esp+2Ch+var_2C] offset aSLabel_stateLa +
call printf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_425D81  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4256F0  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425840  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] offset aUnknownCode0x0 +
mov [esp+2Ch+var_28] eax +
call printf  +
mov eax edi +
jmp loc_425CA6  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_425940  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov edx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_0] +
test dl 10h +
jnz loc_425E20  +
mov eax edx +
xor edi edi +
and eax 0Fh +
mov [esp+4Ch+var_3C] al +
movzx eax byte ptr [esi] +
lea ebx [esi+1] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_425E0D  +
xor ecx ecx +
add ebx 1 +
movzx ebp byte ptr [ebx-1] +
add ecx 7 +
xor edx edx +
mov eax ebp +
and eax 7Fh +
shld edx eax +
shl eax cl +
test cl 20h +
jz loc_425DFF  +
mov edx eax +
xor eax eax +
or eax esi +
or edx edi +
mov esi eax +
mov eax ebp +
test al al +
mov edi edx +
js loc_425DE0  +
movzx eax [esp+4Ch+var_3C] +
jmp ds:off_462DFC[eax*4]  +
mov eax edx +
and eax 0Fh +
jmp ds:off_462E3C[eax*4]  +
***
movzx edx byte ptr [esi] +
lea ebp [esi+2] +
movzx ebx byte ptr [esi+1] +
cmp dl 2 +
ja loc_426218  +
mov eax ds:off_462EDC[edx*4] +
mov [esp+arg_8] ebx +
mov [esp+arg_4] eax +
mov [esp+arg_0] offset aP10 +
mov dword ptr [esp+0] offset aSUnwabiAbiSCon +
call printf  +
mov eax ebp +
jmp loc_425F10  +
***
movzx eax byte ptr [esi] +
movzx ebx byte ptr [esi+1] +
lea edi [esp+arg_28] +
movzx edx byte ptr [esi] +
mov eax edi +
lea ebp [esi+2] +
and ebx 7Fh +
and edx 0Fh +
call sub_424BF0  +
mov [esp+arg_8] ebx +
mov [esp+arg_4] edi +
mov [esp+arg_0] offset aP9 +
mov dword ptr [esp+0] offset aSGr_grGrmaskSR +
call printf  +
mov eax ebp +
nop   +
lea esi [esi+0] +
***
mov eax esi +
mov eax esi +
call sub_425840  +
jmp loc_425F10  +
***
mov eax esi +
call sub_425940  +
jmp loc_425F10  +
***
mov eax esi +
mov [esp+arg_0] edx +
movzx eax byte ptr [ebx] +
mov [esp+arg_4] esi +
shl esi 2 +
shl esi 2 +
mov [esp+arg_8] esi +
shl esi 2 +
mov [esp+arg_8] esi +
shl esi 2 +
mov [esp+arg_8] esi +
shl esi 2 +
mov [esp+arg_8] esi +
shl esi 2 +
mov [esp+arg_8] esi +
shl esi 2 +
mov [esp+arg_8] esi +
mov [esp+arg_4] offset aFpsr +
mov [esp+arg_0] offset aP7 +
mov dword ptr [esp+0] offset aSS_whenTLu +
call printf  +
mov eax ebx +
jmp loc_425F10  +
***
shl esi 2 +
shl eax 2 +
shl eax 2 +
mov [esp+arg_4] eax +
shl eax 2 +
mov [esp+arg_4] eax +
shl eax 2 +
shl eax 2 +
shl eax 2 +
shl eax 2 +
shl eax 2 +
shl eax 2 +
shl eax 2 +
mov [esp+arg_8] eax +
shl eax 2 +
shl eax 2 +
mov [esp+arg_8] eax +
shl eax 2 +
shl eax 2 +
mov [esp+arg_8] eax +
mov [esp+arg_0] ecx +
mov dword ptr [esp+0] offset aUnknownCode0x0 +
call printf  +
mov eax ebp +
jmp loc_425F10  +
***
mov ebx [esp+arg_4] +
movzx edx byte ptr [eax] +
add eax 1 +
mov [esp+arg_0] eax +
mov ecx edx +
shr cl 5 +
movzx ecx cl +
lea ecx [ecx+ebx*8] +
mov eax ds:off_462FA0[ecx*4] +
mov [esp+arg_4] edx +
pop ebx  +
jmp eax  +
***
push edi  +
mov eax ds:dword_4727C0 +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov ecx [esp+14h] +
mov edx [edx] +
mov ecx [ecx] +
mov esi [eax+edx*8] +
mov edi [eax+ecx*8] +
mov edx [eax+edx*8+4] +
mov ecx [eax+ecx*8+4] +
mov eax 1 +
cmp edx ecx +
ja loc_4265CF  +
jnb loc_4265E2  +
xor eax eax +
cmp ecx edx +
mov ebx 1 +
ja loc_4265DC  +
jnb loc_4265F0  +
xor ebx ebx +
sub eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp esi edi +
ja loc_4265CF  +
xor eax eax +
jmp loc_4265CF  +
***
cmp edi esi +
jbe loc_4265DA  +
sub eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax+20h] +
sub eax [edx+20h] +
retn   +
***
mov eax [esp+4] +
mov edx [eax] +
mov eax [esp+8] +
mov ecx [eax] +
xor eax eax +
cmp edx ecx +
setnbe al  +
cmp ecx edx +
setnbe dl  +
movzx edx dl +
sub eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov eax [eax+8] +
mov dword ptr [esp] offset aDisplayingTheD +
mov [esp+4] eax +
call printf  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov esi ds:dword_4727C8 +
test esi esi +
jz loc_4266D1  +
mov eax [esi+0Ch] +
mov edi [esi+14h] +
test eax eax +
jnz loc_4266B2  +
jmp loc_4266C1  +
mov eax ebx +
mov ebx [eax+8] +
mov [esp+10h+var_10] eax +
call free  +
test ebx ebx +
jnz loc_4266B0  +
mov [esp+10h+var_10] esi +
call free  +
test edi edi +
jz loc_4266D1  +
mov esi edi +
jmp loc_4266A0  +
mov ds:dword_4727C8 0 +
mov ds:dword_4727C4 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp] offset aContentsOfTheS +
mov ebp 10h +
call printf  +
mov eax [esp+1Ch] +
mov ebx ebp +
mov dword ptr [esp] offset a0x8_8lx_1 +
cmp eax 10h +
cmovbe ebx eax +
mov eax [esp+10h] +
xor edi edi +
mov [esp+4] eax +
call printf  +
jmp loc_426786  +
movzx eax byte ptr [esi+edi] +
mov dword ptr [esp] offset a2_2x_1 +
mov [esp+4] eax +
call printf  +
mov eax edi +
and eax 3 +
cmp eax 3 +
jz loc_4267A0  +
add edi 1 +
cmp edi 10h +
jz loc_4267B4  +
cmp ebx edi +
jg loc_426760  +
mov dword ptr [esp] offset asc_46306E +
call printf  +
mov eax edi +
and eax 3 +
cmp eax 3 +
jnz loc_42677E  +
mov dword ptr [esp] 20h +
add edi 1 +
call putchar  +
cmp edi 10h +
jnz loc_426786  +
xor di di +
jmp loc_4267CF  +
mov [esp] eax +
add edi 1 +
call putchar  +
cmp ebx edi +
jle loc_4267EE  +
movzx eax byte ptr [esi+edi] +
lea edx [eax-20h] +
cmp edx 5Fh +
jbe loc_4267C0  +
mov dword ptr [esp] 2Eh +
add edi 1 +
call putchar  +
cmp ebx edi +
jg loc_4267CF  +
mov dword ptr [esp] 0Ah +
add esi ebx +
call putchar  +
mov eax ebx +
cdq   +
add [esp+10h] ebx +
adc [esp+14h] edx +
sub [esp+1Ch] ebx +
jnz loc_426735  +
mov dword ptr [esp] 0Ah +
call putchar  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 40h +
mov edi ds:dword_4725E0 +
mov esi [esp+40h+arg_0] +
mov ebx edi +
add edi 1 +
shl ebx 6 +
and edi 0Fh +
add ebx offset unk_4721E0 +
test esi esi +
mov ds:dword_4725E0 edi +
jz loc_4268A3  +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_30] ecx +
mov [esp+40h+var_38] offset a016i64x +
mov [esp+40h+var_3C] 40h +
call sub_426660  +
cmp esi 8 +
mov eax 8 +
cmovbe eax esi +
add esp 40h +
neg eax  +
lea eax [ebx+eax*2+10h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea esi [esp+40h+var_20] +
mov [esp+40h+var_40] esi +
mov [esp+40h+var_34] eax +
mov [esp+40h+var_38] offset aI64 +
mov [esp+40h+var_3C] offset aSS +
mov [esp+40h+var_28] edx +
mov [esp+40h+var_24] ecx +
call sprintf  +
mov edx [esp+40h+var_28] +
mov ecx [esp+40h+var_24] +
mov [esp+40h+var_38] esi +
mov [esp+40h+var_40] ebx +
mov [esp+40h+var_34] edx +
mov [esp+40h+var_30] ecx +
mov [esp+40h+var_3C] 40h +
call sub_426660  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_1C] ecx +
mov ecx edx +
mov edx eax +
xor eax eax +
call sub_426840  +
mov [esp+1Ch+var_1C] offset aS +
mov [esp+1Ch+var_18] eax +
call printf  +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov eax [ebp+8] +
mov ebx [ebp+0Ch] +
mov dword ptr [esp] offset aContentsOfTh_0 +
mov [esp+4] eax +
call printf  +
cmp dword ptr [ebp+1Ch] 0 +
ja loc_426980  +
cmp dword ptr [ebp+18h] 17h +
ja loc_426980  +
mov eax [ebp+8] +
mov dword ptr [esp] offset aTruncatedHeade +
mov [esp+4] eax +
call sub_437070  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 4 +
mov [esp] ebx +
call sub_4371E0  +
mov dword ptr [esp] offset aVersionLd +
mov esi eax +
mov [esp+4] eax +
call printf  +
lea eax [esi-3] +
cmp eax 5 +
ja loc_426E75  +
cmp esi 3 +
jz loc_426EA0  +
cmp esi 4 +
jz loc_426EAC  +
cmp esi 5 +
jz loc_426EB8  +
cmp esi 6 +
jz loc_426EC4  +
lea eax [ebx+4] +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_4371E0  +
mov dword ptr [esp+4] 4 +
mov edi eax +
lea eax [ebx+8] +
mov [esp] eax +
call sub_4371E0  +
mov dword ptr [esp+4] 4 +
mov esi eax +
lea eax [ebx+0Ch] +
mov [esp] eax +
call sub_4371E0  +
mov dword ptr [esp+4] 4 +
mov [esp+10h] eax +
lea eax [ebx+10h] +
mov [esp] eax +
call sub_4371E0  +
mov dword ptr [esp+4] 4 +
mov [esp+1Ch] eax +
lea eax [ebx+14h] +
mov [esp] eax +
call sub_4371E0  +
mov edx [ebp+18h] +
mov [esp+28h] eax +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_426A70  +
cmp edi edx +
jbe loc_426A70  +
mov eax [ebp+8] +
mov dword ptr [esp] offset aCorruptHeade_0 +
mov [esp+4] eax +
call sub_437070  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 0 +
jbe loc_426E68  +
cmp eax 0 +
jbe loc_426E90  +
cmp eax 0 +
ja loc_426A8D  +
cmp edx [esp+1Ch] +
jb loc_426A4F  +
cmp eax 0 +
jbe loc_426ED5  +
cmp edi esi +
ja loc_426EE5  +
cmp esi [esp+10h] +
ja loc_4270A9  +
mov eax [esp+1Ch] +
cmp [esp+10h] eax +
ja loc_4270DB  +
mov ecx [esp+1Ch] +
mov eax ecx +
sub eax [esp+10h] +
mov [esp+34h] eax +
mov eax [esp+28h] +
cmp ecx eax +
ja loc_4270FE  +
mov eax [esp+10h] +
add edx [ebp+0Ch] +
add eax ebx +
mov ecx eax +
mov [esp+2Ch] eax +
imul eax [esp+34h] +
add eax ecx +
cmp eax edx +
ja loc_4270C8  +
mov eax esi +
sub eax edi +
add edi ebx +
mov dword ptr [esp] offset aCuTable +
mov [esp+38h] eax +
shr dword ptr [esp+38h] 3 +
call puts  +
mov ecx [esp+38h] +
xor eax eax +
test ecx ecx +
jz loc_426B80  +
mov [esp+60h] ebp +
mov ebp [esp+38h] +
mov [esp+20h] ebx +
mov ebx eax +
mov [esp+30h] esi +
mov [esp] edi +
mov dword ptr [esp+4] 8 +
call sub_4371E0  +
mov dword ptr [esp+4] 8 +
mov esi eax +
lea eax [edi+8] +
add edi 10h +
mov [esp] eax +
call sub_4371E0  +
mov [esp+8] esi +
mov dword ptr [esp] offset a3u0xLx0xLx +
lea eax [esi+eax-1] +
mov [esp+0Ch] eax +
mov eax ebx +
add ebx 2 +
shr eax 1 +
mov [esp+4] eax +
call printf  +
cmp ebp ebx +
ja loc_426B25  +
mov ebx [esp+20h] +
mov ebp [esp+60h] +
mov esi [esp+30h] +
mov eax [esp+10h] +
xor edi edi +
mov dword ptr [esp] offset aTuTable +
sub eax esi +
add esi ebx +
mov [esp+20h] eax +
shr dword ptr [esp+20h] 3 +
call puts  +
mov edx [esp+20h] +
test edx edx +
jz loc_426C4C  +
mov [esp+30h] ebx +
mov [esp+60h] ebp +
mov [esp] esi +
mov dword ptr [esp+4] 8 +
call sub_4371E0  +
mov dword ptr [esp+4] 8 +
mov ebx eax +
lea eax [esi+8] +
mov [esp] eax +
call sub_4371E0  +
mov dword ptr [esp+4] 8 +
mov ebp eax +
lea eax [esi+10h] +
add esi 18h +
mov [esp] eax +
call sub_4371E0  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov dword ptr [esp] offset a3u0xLx0xLx_0 +
mov [esp+10h] eax +
mov eax 0AAAAAAABh +
mov [esp+14h] edx +
mul  edi +
add edi 3 +
shr edx 1 +
mov [esp+4] edx +
call printf  +
mov eax [esp+10h] +
mov ecx 8 +
mov edx [esp+14h] +
call sub_426900  +
mov dword ptr [esp] 0Ah +
call putchar  +
cmp [esp+20h] edi +
ja loc_426BB3  +
mov ebx [esp+30h] +
mov ebp [esp+60h] +
mov dword ptr [esp] offset aAddressTable +
call puts  +
mov eax [esp+34h] +
mov edx 14h +
lea ecx [eax-14h] +
mov [esp+30h] ecx +
mov ecx [esp+2Ch] +
sub edx ecx +
test eax eax +
mov esi ecx +
jz loc_426D2B  +
mov [esp+60h] ebp +
mov edi [esp+34h] +
mov ebp edx +
mov [esp+3Ch] ebx +
jmp loc_426C9B  +
add esi 14h +
mov eax esi +
sub eax [esp+2Ch] +
cmp [esp+30h] eax +
jb loc_426D23  +
mov dword ptr [esp+4] 8 +
mov [esp] esi +
call sub_4371E0  +
mov dword ptr [esp+4] 8 +
mov [esp+10h] eax +
lea eax [esi+8] +
mov [esp] eax +
mov [esp+14h] edx +
call sub_4371E0  +
mov dword ptr [esp+4] 4 +
mov [esp+20h] eax +
lea eax [esi+10h] +
mov [esp] eax +
mov [esp+24h] edx +
call sub_4371E0  +
mov edx [esp+14h] +
mov ecx 8 +
mov ebx eax +
mov eax [esp+10h] +
call sub_426900  +
mov eax [esp+20h] +
mov ecx 8 +
mov edx [esp+24h] +
call sub_426900  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aLu_1 +
call printf  +
lea eax [ebp+esi+0] +
cmp edi eax +
ja loc_426C88  +
mov ebx [esp+3Ch] +
mov ebp [esp+60h] +
mov eax [esp+28h] +
sub eax [esp+1Ch] +
mov dword ptr [esp] offset aSymbolTable +
mov [esp+10h] eax +
shr dword ptr [esp+10h] 3 +
call puts  +
mov eax [esp+10h] +
test eax eax +
jz loc_427026  +
mov eax [esp+28h] +
mov edi [esp+1Ch] +
mov [esp+60h] ebp +
add eax ebx +
mov [esp+20h] eax +
mov eax [esp+38h] +
add edi ebx +
xor ebx ebx +
shr eax 1 +
mov [esp+2Ch] eax +
jmp loc_426DF0  +
mov [esp+8] esi +
mov [esp+4] ebx +
mov dword ptr [esp] offset a3uCorruptOffse +
call printf  +
mov [esp+8] ebx +
mov [esp+4] esi +
mov dword ptr [esp] offset aCorruptNameOff +
call sub_437070  +
mov eax [esp+20h] +
add eax ebp +
jb loc_426DBC  +
mov ecx [esp+60h] +
mov edx [ecx+18h] +
mov ecx [ecx+0Ch] +
lea edx [ecx+edx-3] +
cmp eax edx +
jb loc_426F00  +
mov [esp+4] ebp +
mov dword ptr [esp] offset aInvalidCuVecto +
call printf  +
mov [esp+8] ebx +
mov [esp+4] ebp +
mov dword ptr [esp] offset aCorruptCuVecto +
call sub_437070  +
add ebx 1 +
add edi 8 +
cmp ebx [esp+10h] +
jz loc_427026  +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call sub_4371E0  +
mov dword ptr [esp+4] 4 +
mov esi eax +
lea eax [edi+4] +
mov [esp] eax +
call sub_4371E0  +
mov ebp eax +
or eax esi +
jz loc_426DE0  +
mov eax [esp+20h] +
add eax esi +
jb loc_426D76  +
mov ecx [esp+60h] +
mov edx [esp+60h] +
mov ecx [ecx+18h] +
mov [esp+1Ch] ecx +
add ecx [edx+0Ch] +
cmp eax ecx +
jnb loc_426D76  +
mov edx [esp+1Ch] +
sub edx [esp+28h] +
mov [esp+0Ch] eax +
mov [esp+4] ebx +
sub edx esi +
mov [esp+8] edx +
mov dword ptr [esp] offset a3u_S +
call printf  +
jmp loc_426D9E  +
***
cmp edx esi +
jb loc_426A4F  +
jmp loc_426A79  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aUnsupportedV_0 +
call sub_437070  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx [esp+10h] +
jb loc_426A4F  +
jmp loc_426A82  +
***
mov dword ptr [esp] offset aTheAddressTabl +
call sub_437070  +
mov dword ptr [esp] offset aVersion4DoesNo +
call sub_437070  +
mov dword ptr [esp] offset aVersion5DoesNo +
call sub_437070  +
mov dword ptr [esp] offset aVersion6DoesNo +
call sub_437070  +
jmp loc_4269D2  +
***
cmp edx [esp+28h] +
jnb loc_426A96  +
nop   +
jmp loc_426A4F  +
***
mov [esp+8] edi +
mov [esp+4] esi +
mov dword ptr [esp] offset aTuOffsetXIsLes +
call sub_437070  +
xor eax eax +
jmp loc_426972  +
***
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_4371E0  +
mov esi eax +
lea eax ds:0[eax*4] +
cmp esi eax +
ja loc_427080  +
mov ecx [esp+20h] +
add ebp 4 +
add eax ebp +
lea edx [ecx+eax] +
mov eax [esp+60h] +
mov ecx [esp+60h] +
mov eax [eax+0Ch] +
add eax [ecx+18h] +
cmp edx eax +
jnb loc_427080  +
cmp [esp+20h] edx +
ja loc_427080  +
cmp esi 1 +
jbe loc_42711D  +
mov dword ptr [esp] 0Ah +
call putchar  +
add ebp [esp+20h] +
mov [esp+30h] edi +
mov dword ptr [esp+1Ch] 0 +
mov edi ebp +
mov [esp+34h] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call sub_4371E0  +
mov ebx eax +
mov ebp eax +
shr ebx 1Ch +
and eax 0FFFFFFh +
shr ebp 1Fh +
and ebx 7 +
cmp eax [esp+2Ch] +
jb loc_427030  +
sub eax [esp+2Ch] +
mov ecx 9 +
cmp esi 1 +
mov edx 20h +
cmovz ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp] offset aCtLu +
call printf  +
mov edx ds:off_468200[ebx*4] +
test ebp ebp +
mov ecx offset aGlobal_1 +
mov eax offset aStatic +
cmovz eax ecx +
mov [esp+4] eax +
mov [esp+8] edx +
mov dword ptr [esp] offset aSS_7 +
call printf  +
cmp esi 1 +
jz loc_427060  +
mov dword ptr [esp] 0Ah +
add edi 4 +
call putchar  +
add dword ptr [esp+1Ch] 1 +
cmp esi [esp+1Ch] +
ja loc_426F78  +
mov edi [esp+30h] +
mov ebx [esp+34h] +
jmp loc_426DE0  +
***
mov eax 1 +
jmp loc_426972  +
***
cmp esi 1 +
mov edx 20h +
mov ecx 9 +
cmovz ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp] offset aCLu +
call printf  +
jmp loc_426FCC  +
***
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov dword ptr [esp] 0Ah +
call putchar  +
jmp loc_426DE0  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aInvalidNumbe_0 +
call printf  +
mov [esp+8] ebx +
mov [esp+4] esi +
mov dword ptr [esp] offset aInvalidNumbe_1 +
call sub_437070  +
jmp loc_426DE0  +
***
mov eax [esp+10h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aAddressTableOf +
mov [esp+4] eax +
call sub_437070  +
xor eax eax +
jmp loc_426972  +
***
mov dword ptr [esp] offset aAddressTableEx +
call sub_437070  +
xor eax eax +
jmp loc_426972  +
***
mov eax [esp+10h] +
mov dword ptr [esp] offset aSymbolTableOff +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call sub_437070  +
xor eax eax +
jmp loc_426972  +
***
mov eax [esp+28h] +
mov [esp+8] ecx +
mov dword ptr [esp] offset aConstantPoolOf +
mov [esp+4] eax +
call sub_437070  +
xor eax eax +
jmp loc_426972  +
***
test esi esi +
jnz loc_426F62  +
jmp loc_427068  +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov ebx ecx +
lea ecx [edx+4] +
sub esp 2Ch +
mov esi [ebp+arg_0] +
cmp ecx ebx +
mov [ebp+var_1C] edx +
jb loc_427290  +
cmp edx ebx +
jb loc_427340  +
mov dword ptr [esi] 0 +
mov eax 4 +
xor edx edx +
mov dword ptr [esi+4] 0 +
mov [ebp+var_24] 4 +
mov [ebp+var_20] 4 +
cmp edx [edi+1Ch] +
jb loc_4271BE  +
jbe loc_427355  +
mov eax ecx +
sub eax [edi+0Ch] +
sub eax [ebp+var_20] +
mov [ebp+var_28] ecx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
call sub_4210D0  +
test eax eax +
jz loc_4275C9  +
mov eax ebx +
mov ecx [ebp+var_28] +
sub eax [ebp+var_1C] +
sub eax [ebp+var_24] +
mov dword ptr [esi+4] 0 +
mov [esi] eax +
lea edi [ecx+2] +
cmp ebx edi +
jbe loc_427310  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] ecx +
call edx  +
mov [esi+8] ax +
sub eax 2 +
cmp ax 2 +
ja loc_42732A  +
mov eax [ebp+var_20] +
mov [ebp+var_28] esp +
lea ecx [edi+eax] +
cmp ebx ecx +
ja loc_427206  +
cmp ebx edi +
jbe loc_427215  +
mov eax ebx +
sub eax edi +
mov [ebp+var_20] eax +
mov eax [ebp+var_20] +
sub eax 1 +
cmp eax 7 +
jbe loc_427515  +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
lea edi [ecx+1] +
mov esp [ebp+var_28] +
cmp ebx edi +
ja loc_427370  +
cmp ebx ecx +
jbe loc_427245  +
mov eax ebx +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_427375  +
cmp word ptr [esi+8] 3 +
mov byte ptr [esi+18h] 0 +
jbe loc_427398  +
add ecx 2 +
cmp ebx ecx +
ja loc_427537  +
cmp ebx edi +
ja loc_427598  +
mov byte ptr [esi+19h] 0 +
mov [esp+38h+var_38] offset aInvalidMaximum +
xor edi edi +
call sub_437070  +
lea esi [esi+0] +
lea esp [ebp-0Ch] +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
mov [ebp+var_20] ecx +
mov edx ds:dword_472C94 +
mov [esp+38h+var_34] eax +
mov eax [ebp+var_1C] +
mov [esp+38h+var_38] eax +
call edx  +
mov ecx eax +
not ecx  +
or ecx edx +
mov ecx [ebp+var_20] +
mov [esi] eax +
mov [esi+4] edx +
jnz loc_4275B0  +
mov eax [ebp+var_1C] +
add eax 0Ch +
cmp ebx eax +
mov [ebp+var_20] eax +
ja loc_427563  +
cmp ecx ebx +
jnb loc_4272E3  +
mov eax ebx +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_427568  +
mov ecx [ebp+var_20] +
mov eax 0Ch +
xor edx edx +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov [ebp+var_24] 0Ch +
mov [ebp+var_20] 8 +
jmp loc_427178  +
cmp ecx ebx +
jnb loc_427324  +
mov eax ebx +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4271CE  +
xor eax eax +
mov [esi+8] ax +
mov [esp+38h+var_38] offset aOnlyDwarfVersi +
xor edi edi +
call sub_437070  +
jmp loc_427280  +
mov eax ebx +
sub eax edx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_427156  +
jmp loc_427295  +
cmp eax [edi+18h] +
ja loc_427183  +
lea edi [ecx+2] +
cmp ebx edi +
ja loc_4271C9  +
jmp loc_427310  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_34] eax +
mov [ebp+var_20] ecx +
call edx  +
mov ecx [ebp+var_20] +
cmp word ptr [esi+8] 3 +
mov [esi+18h] al +
ja loc_427254  +
mov byte ptr [esi+19h] 1 +
lea ecx [edi+1] +
cmp ebx ecx +
jbe loc_4273F1  +
mov eax ds:dword_472C94 +
mov [ebp+var_28] ecx +
mov [esp+38h+var_34] 1 +
mov [esp+38h+var_38] edi +
call eax  +
mov ecx [ebp+var_28] +
mov [esi+1Ah] al +
lea eax [edi+2] +
cmp ebx eax +
mov [ebp+var_20] eax +
ja loc_427413  +
mov eax ebx +
sub eax ecx +
jnz loc_4275E2  +
lea ecx [edi+3] +
cmp ebx ecx +
mov dword ptr [esi+1Ch] 0 +
ja loc_427431  +
add edi 4 +
cmp ebx edi +
mov byte ptr [esi+20h] 0 +
ja loc_427456  +
mov byte ptr [esi+21h] 0 +
jmp loc_42746D  +
cmp edi ebx +
jnb loc_427405  +
mov eax ebx +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_427601  +
lea eax [edi+2] +
cmp eax ebx +
mov byte ptr [esi+1Ah] 0 +
mov [ebp+var_20] eax +
jnb loc_4273D2  +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_34] 1 +
call sub_4373D0  +
lea ecx [edi+3] +
cmp ebx ecx +
mov [esi+1Ch] eax +
jbe loc_4274D0  +
mov [ebp+var_28] ecx +
mov eax ds:dword_472C94 +
add edi 4 +
mov [esp+38h+var_34] 1 +
mov edx [ebp+var_20] +
mov [esp+38h+var_38] edx +
call eax  +
cmp ebx edi +
mov ecx [ebp+var_28] +
mov [esi+20h] al +
jbe loc_4274B4  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] ecx +
call edx  +
mov [esi+21h] al +
mov edx [esi] +
mov eax [ebp+var_24] +
mov ecx [esi+4] +
mov esi [ebp+arg_4] +
add eax edx +
add eax [ebp+var_1C] +
cmp ebx eax +
mov [esi] eax +
jnb loc_427280  +
mov [esp+38h+var_38] 0 +
mov eax offset aU +
xor edi edi +
call sub_426840  +
mov [esp+38h+var_38] offset aLineLengthSExt +
mov [esp+38h+var_34] eax +
call sub_437070  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
jmp loc_427280  +
cmp ebx ecx +
jbe loc_4273EB  +
mov eax ebx +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4273EB  +
jmp loc_42745B  +
cmp ebx [ebp+var_20] +
jbe loc_4273E0  +
mov eax ebx +
sub eax [ebp+var_20] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4273E0  +
mov [ebp+var_28] ecx +
mov edx ds:dword_472C94 +
add edi 4 +
mov [esp+38h+var_34] eax +
mov eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call edx  +
cmp ebx edi +
mov ecx [ebp+var_28] +
mov [esi+20h] al +
jbe loc_4273EB  +
jmp loc_427456  +
mov edx [ebp+var_20] +
mov eax ds:dword_472C94 +
mov [ebp+var_2C] ecx +
mov [esp+38h+var_38] edi +
mov [esp+38h+var_34] edx +
call eax  +
mov ecx [ebp+var_2C] +
mov [esi+10h] eax +
mov [esi+14h] edx +
jmp loc_427223  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [ebp+var_20] ecx +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
call edx  +
mov ecx [ebp+var_20] +
test al al +
mov [esi+19h] al +
jz loc_42726B  +
mov edi ecx +
jmp loc_42739C  +
mov eax 8 +
mov edx ds:dword_472C94 +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_34] eax +
call edx  +
mov ecx [ebp+var_20] +
mov [ebp+var_24] 0Ch +
mov [ebp+var_20] 8 +
mov [esi] eax +
add eax 0Ch +
mov [esi+4] edx +
adc edx 0 +
jmp loc_427178  +
mov eax ebx +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_427267  +
jmp loc_42753C  +
add eax 4 +
adc edx 0 +
mov [ebp+var_24] 4 +
mov [ebp+var_20] 4 +
jmp loc_427178  +
mov eax [esi] +
xor edi edi +
mov [esp+38h+var_38] offset aTheLengthField +
mov [esp+38h+var_34] eax +
call sub_437070  +
jmp loc_427280  +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_34] eax +
call sub_4373D0  +
lea ecx [edi+3] +
cmp ebx ecx +
mov [esi+1Ch] eax +
jbe loc_4273E0  +
jmp loc_427431  +
mov edx ds:dword_472C94 +
mov [ebp+var_28] ecx +
mov [esp+38h+var_34] eax +
mov [esp+38h+var_38] edi +
call edx  +
mov ecx [ebp+var_28] +
mov [esi+1Ah] al +
lea eax [edi+2] +
cmp ebx eax +
mov [ebp+var_20] eax +
jbe loc_4273D2  +
jmp loc_427413  +
***
sub esp 1Ch +
mov eax 1 +
mov edx [esp+20h] +
mov ecx [edx+1Ch] +
or ecx [edx+18h] +
jnz loc_427659  +
mov eax [edx+8] +
mov dword ptr [esp] offset aTheSSectionIsE +
mov [esp+4] eax +
call printf  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
cmp eax 8 +
ja loc_4276F0  +
jmp ds:off_4635C8[eax*4]  +
mov eax offset aTypes +
add esp 1Ch +
retn   +
mov eax offset aAbbrev +
add esp 1Ch +
retn   +
mov eax offset aLine +
add esp 1Ch +
retn   +
mov eax offset aLoc +
add esp 1Ch +
retn   +
mov eax offset aStr_off +
add esp 1Ch +
retn   +
mov eax offset aMacinfo +
add esp 1Ch +
retn   +
mov eax offset aMacro +
add esp 1Ch +
retn   +
mov eax offset aInfo +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_10] eax +
mov [esp+1Ch+var_14] offset aD_3 +
mov [esp+1Ch+var_18] 10h +
mov [esp+1Ch+var_1C] offset unk_4727A8 +
call sub_426660  +
mov eax offset unk_4727A8 +
add esp 1Ch +
retn   +
***
sub esp 2Ch +
mov ecx eax +
mov eax ds:dword_4727BC +
test eax eax +
jz loc_427770  +
cmp ds:dword_4727B8 ecx +
jbe loc_427770  +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_427770  +
test edx edx +
jnz loc_427795  +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_24] offset aRDS +
mov [esp+2Ch+var_28] 40h +
mov [esp+2Ch+var_2C] offset unk_472600 +
call sub_426660  +
mov eax offset unk_472600 +
add esp 2Ch +
retn   +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_24] offset aRD +
mov [esp+2Ch+var_28] 40h +
mov [esp+2Ch+var_2C] offset unk_472600 +
call sub_426660  +
mov eax offset unk_472600 +
add esp 2Ch +
retn   +
***
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 8Ch +
mov eax [eax+8] +
cmp [ecx] eax +
jnb loc_4277B7  +
mov [ecx] eax +
mov eax [edx] +
test eax eax +
jnz loc_427961  +
mov eax [esi+20h] +
mov edx [esi+24h] +
mov ecx ds:dword_472C4C +
call sub_426900  +
cmp byte ptr [esi+45h] 0 +
jz loc_427930  +
mov [esp+94h+var_78] 707865h +
lea edi [esp+94h+var_78] +
mov [esp+94h+var_90] edi +
xor ebp ebp +
xor ebx ebx +
mov [esp+94h+var_94] offset a8s_0 +
call printf  +
mov ecx [esi+8] +
test ecx ecx +
jnz loc_42784B  +
jmp loc_427898  +
cmp dx 8 +
jz loc_4278F0  +
cmp dx 9 +
jz loc_4278D0  +
cmp dx 7 +
jz loc_4278C0  +
mov dword ptr [edi] 612F6Eh +
lea esi [esi+0] +
mov [esp+94h+var_90] edi +
mov [esp+94h+var_94] offset a5s +
call printf  +
add ebx 1 +
add ebp 4 +
cmp [esi+8] ebx +
jbe loc_427898  +
mov eax [esi+0Ch] +
movzx edx word ptr [eax+ebx*2] +
cmp dx 0FFFFh +
jz loc_427840  +
cmp dx 10h +
jz loc_4278B0  +
jle loc_427808  +
cmp dx 16h +
jz loc_427920  +
cmp dx 80h +
nop   +
jz loc_427900  +
cmp dx 14h +
jnz loc_427826  +
mov eax [esi+10h] +
mov eax [eax+ebp] +
mov [esp+94h+var_90] offset aVD +
mov [esp+94h+var_94] edi +
mov [esp+94h+var_8C] eax +
call sprintf  +
jmp loc_427830  +
mov [esp+94h+var_94] 0Ah +
call putchar  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [edi] 707865h +
jmp loc_427830  +
mov edx 75h +
mov [edi] dx +
jmp loc_427830  +
mov eax [esi+10h] +
xor edx edx +
mov eax [eax+ebp] +
call sub_427720  +
mov [esp+94h+var_94] edi +
mov [esp+94h+var_90] eax +
call strcpy  +
jmp loc_427830  +
mov eax 73h +
mov [edi] ax +
jmp loc_427830  +
mov eax [esi+10h] +
mov eax [eax+ebp] +
mov [esp+94h+var_90] offset aCD +
mov [esp+94h+var_94] edi +
mov [esp+94h+var_8C] eax +
call sprintf  +
jmp loc_427830  +
mov dword ptr [edi] 70786576h +
mov byte ptr [edi+4] 0 +
jmp loc_427830  +
mov eax [esi+30h] +
mov edx 1 +
mov ebx [esi+38h] +
lea edi [esp+94h+var_78] +
call sub_427720  +
mov [esp+94h+var_88] ebx +
mov [esp+94h+var_90] offset aSD_0 +
mov [esp+94h+var_94] edi +
mov [esp+94h+var_8C] eax +
call sprintf  +
jmp loc_4277E8  +
mov dword ptr [edx] 0 +
mov eax ds:dword_472C4C +
xor ebx ebx +
mov [esp+94h+var_8C] offset aLoc_1 +
mov [esp+94h+var_94] offset aSCfa +
add eax eax +
mov [esp+94h+var_90] eax +
call printf  +
mov ebp [edi] +
test ebp ebp +
jnz loc_4279B3  +
jmp loc_4279D5  +
mov edx 1 +
mov eax ebx +
call sub_427720  +
mov [esp+94h+var_94] offset a5s +
mov [esp+94h+var_90] eax +
call printf  +
add ebx 1 +
cmp [edi] ebx +
jbe loc_4279D5  +
mov eax [esi+0Ch] +
cmp word ptr [eax+ebx*2] 0FFFFh +
jz loc_4279AC  +
cmp [esi+40h] ebx +
jnz loc_427990  +
mov [esp+94h+var_94] offset aRa +
add ebx 1 +
call printf  +
cmp [edi] ebx +
ja loc_4279B3  +
mov [esp+94h+var_94] 0Ah +
call putchar  +
jmp loc_4277C1  +
***
sub esp 18h +
mov [esp+18h+var_18] eax +
call sub_439510  +
test eax eax +
jz loc_427A07  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] offset aUnknownTagValu +
mov [esp+18h+var_14] 64h +
mov [esp+18h+var_18] offset unk_472740 +
call sub_426660  +
add esp 18h +
mov eax offset unk_472740 +
pop ebx  +
retn   +
***
jmp sub_427A40  +
***
sub esp 18h +
test ebx ebx +
mov eax offset aDw_atValue0 +
jz loc_427A68  +
cmp ebx 2001h +
mov eax offset aDw_at_mips_fde +
jz loc_427A68  +
mov [esp+18h+var_18] ebx +
call sub_439C60  +
test eax eax +
jz loc_427A70  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] offset aUnknownAtValue +
mov [esp+18h+var_14] 64h +
mov [esp+18h+var_18] offset unk_4726C0 +
call sub_426660  +
mov eax offset unk_4726C0 +
jmp loc_427A68  +
***
sub esp 18h +
test ebx ebx +
mov eax offset aDw_formValue0 +
jnz loc_427AB4  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call sub_439AC0  +
test eax eax +
jnz loc_427AAF  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] offset aUnknownFormVal +
mov [esp+18h+var_14] 64h +
mov [esp+18h+var_18] offset unk_472640 +
call sub_426660  +
mov eax offset unk_472640 +
jmp loc_427AAF  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov ecx [eax] +
mov eax edx +
and eax 7 +
cmp eax 3 +
jz loc_427B97  +
cmp eax 4 +
jz loc_427B90  +
cmp eax 2 +
jz loc_427B61  +
mov eax ds:dword_472C4C +
lea edi [ecx+eax] +
cmp edi [esp+28h+arg_4] +
jnb loc_427B70  +
cmp eax 8 +
ja loc_427BD0  +
test eax eax +
jz loc_427BF2  +
test bl 8 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ecx +
mov [esp+28h+var_1C] ecx +
jz loc_427BA1  +
and ebx 70h +
call sub_4373D0  +
cmp ebx 10h +
mov ecx [esp+28h+var_1C] +
jz loc_427BB3  +
mov [esi] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 2 +
lea edi [ecx+eax] +
cmp [esp+28h+arg_4] edi +
ja loc_427B36  +
nop   +
mov [esp+28h+var_28] offset aEncodedValueEx +
call sub_437070  +
mov eax [esp+28h+arg_4] +
xor edx edx +
mov [esi] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 8 +
jmp loc_427B66  +
mov eax 4 +
jmp loc_427B1C  +
and ebx 70h +
call ds:dword_472C94  +
cmp ebx 10h +
mov ecx [esp+28h+var_1C] +
jnz loc_427B57  +
sub ecx [ebp+0] +
mov ebp [esp+28h+arg_0] +
mov ebx ecx +
sar ebx 1Fh +
add ecx [ebp+0] +
adc ebx [ebp+4] +
add eax ecx +
adc edx ebx +
jmp loc_427B57  +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] offset aEncodedSizeOfD +
call sub_437070  +
mov eax [esp+28h+arg_4] +
xor edx edx +
mov [esi] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] offset aEncodedSizeOf0 +
jmp loc_427B77  +
***
push edi  +
mov eax offset aU +
push esi  +
mov edi edx +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov [esp+28h+var_28] 0 +
mov esi [esp+28h+arg_0] +
call sub_426840  +
mov [esp+28h+var_28] offset aSByteBlock +
mov [esp+28h+var_24] eax +
call printf  +
cmp ebp esi +
mov eax esi +
ja loc_427C9E  +
sub esi ebp +
mov eax esi +
cdq   +
cmp edx ebx +
jnb loc_427CA6  +
mov ecx eax +
mov ebx edx +
add ecx 0FFFFFFFFh +
mov edi edx +
adc ebx 0FFFFFFFFh +
or edi eax +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_1C] ebx +
jz loc_427C9C  +
mov esi eax +
mov edi edx +
mov eax ebp +
jmp loc_427C63  +
mov eax ebx +
lea ebx [eax+1] +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] eax +
call ds:dword_472C94  +
mov [esp+28h+var_28] offset aLx +
mov [esp+28h+var_24] eax +
call printf  +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
mov eax edi +
or eax esi +
jnz loc_427C61  +
mov eax [esp+28h+var_20] +
add eax 1 +
add ebp eax +
mov eax ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jbe loc_427CB0  +
mov eax edi +
mov edx ebx +
jmp loc_427C41  +
cmp esi edi +
jbe loc_427C41  +
jmp loc_427CA8  +
***
mov ebx dword_44198C +
test ebx ebx +
jz loc_427D20  +
cmp dword_44199C edx +
mov ecx edx +
jbe loc_427CE0  +
add esp 18h +
add eax ebx +
pop ebx  +
retn   +
jnb loc_427D10  +
mov edx eax +
mov eax offset asc_463786 +
mov [esp+18h+var_18] 0 +
call sub_426840  +
mov [esp+18h+var_18] offset aDw_form_strpOf +
mov [esp+18h+var_14] eax +
call sub_437070  +
add esp 18h +
mov eax offset aOffsetIsTooBig +
pop ebx  +
retn   +
cmp dword_441998 eax +
jnb loc_427CD8  +
jmp loc_427CE2  +
add esp 18h +
mov eax offset aNo_debug_strSe +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov [esp+1Ch+var_14] offset aD_5 +
mov [esp+1Ch+var_18] 0Fh +
mov [esp+1Ch+var_1C] offset unk_4721CC +
call sub_426660  +
mov [esp+1Ch+var_14] offset unk_4721CC +
mov [esp+1Ch+var_18] 8 +
mov [esp+1Ch+var_1C] offset aS_9 +
call printf  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 20h +
or ecx eax +
mov esi [esp+28h+arg_0] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
jz loc_427DE6  +
mov [esp+28h+var_18] edx +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_1C] eax +
mov [esp+28h+var_20] offset aI64x +
mov [esp+28h+var_24] 40h +
call sub_426660  +
mov edx 40h +
mov [esp+28h+var_1C] esi +
mov [esp+28h+var_18] edi +
mov [esp+28h+var_20] offset a08i64x +
sub edx eax +
add eax ebx +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] eax +
call sub_426660  +
add esp 20h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+28h+var_1C] esi +
mov [esp+28h+var_18] edi +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_20] offset aI64x +
mov [esp+28h+var_24] 40h +
call sub_426660  +
add esp 20h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov ecx [esp+0Ch+arg_C] +
cmp [esp+0Ch+arg_0] ecx +
jnb loc_427F04  +
mov eax [esp+0Ch+arg_0] +
xor edx edx +
movzx ebp byte ptr [eax] +
mov eax ebp +
mov ebx ebp +
and eax 7Fh +
test bl bl +
jns loc_427F1B  +
sub ecx [esp+0Ch+arg_0] +
mov ebx 1 +
mov [esp+0Ch+var_8] ecx +
mov ecx 7 +
mov [esp+0Ch+var_C] ecx +
cmp ebx [esp+0Ch+var_8] +
jz loc_427EF6  +
mov edi [esp+0Ch+arg_0] +
movzx ecx byte ptr [esp+0Ch+var_C] +
movzx ebp byte ptr [edi+ebx] +
xor edi edi +
add ebx 1 +
mov esi ebp +
and esi 7Fh +
shld edi esi +
shl esi cl +
test cl 20h +
jz loc_427E80  +
mov edi esi +
xor esi esi +
mov ecx ebp +
or esi eax +
or edi edx +
mov eax esi +
add [esp+0Ch+var_C] 7 +
test cl cl +
mov edx edi +
jns loc_427E97  +
cmp ebx 0Ah +
jnz loc_427E52  +
mov ecx [esp+0Ch+var_C] +
mov [esp+0Ch+var_8] ebx +
cmp ecx 3Fh +
setbe bl  +
mov esi ebx +
mov edi [esp+0Ch+arg_4] +
test edi edi +
jz loc_427EB8  +
mov edi [esp+0Ch+arg_4] +
mov ebx [esp+0Ch+var_8] +
mov [edi] ebx +
mov ebx esi +
test bl bl +
jz loc_427EEE  +
mov esi [esp+0Ch+arg_8] +
test esi esi +
jz loc_427EEE  +
and ebp 40h +
jz loc_427EEE  +
mov esi 0FFFFFFFFh +
xor ebx ebx +
shl esi cl +
mov edi 0FFFFFFFFh +
test cl 20h +
mov ecx edx +
cmovnz edi esi +
cmovnz esi ebx +
mov ebx eax +
or ecx edi +
or ebx esi +
mov edx ecx +
mov eax ebx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0Ch+var_8] ebx +
mov ecx [esp+0Ch+var_C] +
mov esi 1 +
jmp loc_427EA6  +
mov esi 1 +
xor ebp ebp +
xor ecx ecx +
xor eax eax +
mov [esp+0Ch+var_8] 0 +
xor edx edx +
jmp loc_427EA6  +
mov esi 1 +
mov ecx 7 +
mov [esp+0Ch+var_8] 1 +
jmp loc_427EA6  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
cmp edx eax +
jbe loc_4280A0  +
lea ebp [esp+40h+var_14] +
mov [esp+40h+var_40] esi +
mov [esp+40h+var_34] ebx +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] ebp +
call sub_427E10  +
add esi [esp+40h+var_14] +
cmp ebx esi +
mov edi eax +
jz loc_4280AC  +
test eax eax +
jz loc_4280C0  +
mov [esp+40h+var_40] esi +
mov [esp+40h+var_34] ebx +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] ebp +
call sub_427E10  +
add esi [esp+40h+var_14] +
cmp ebx esi +
mov [esp+40h+var_28] eax +
mov eax esi +
jz loc_4280AC  +
movzx ecx byte ptr [eax] +
lea esi [esi+1] +
mov [esp+40h+var_40] 18h +
mov [esp+40h+var_24] ecx +
call malloc  +
test eax eax +
jz loc_42801D  +
mov [eax] edi +
mov edi [esp+40h+var_28] +
mov ecx [esp+40h+var_24] +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov [eax+4] edi +
mov edi ds:dword_4727C8 +
mov [eax+8] ecx +
mov dword ptr [eax+14h] 0 +
test edi edi +
jz loc_4280B6  +
mov edx ds:dword_4727C4 +
mov [edx+14h] eax +
mov ds:dword_4727C4 eax +
jmp loc_42801D  +
mov ecx [edx+10h] +
mov [ecx+8] eax +
mov [edx+10h] eax +
test edi edi +
jz loc_428095  +
mov [esp+40h+var_40] esi +
mov [esp+40h+var_34] ebx +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] ebp +
call sub_427E10  +
add esi [esp+40h+var_14] +
cmp ebx esi +
mov edi eax +
jz loc_4280A0  +
mov [esp+40h+var_40] esi +
mov [esp+40h+var_34] ebx +
mov [esp+40h+var_38] 0 +
mov [esp+40h+var_3C] ebp +
call sub_427E10  +
add esi [esp+40h+var_14] +
cmp ebx esi +
mov [esp+40h+var_28] eax +
jz loc_4280A0  +
mov [esp+40h+var_40] 0Ch +
call malloc  +
test eax eax +
jz loc_428019  +
mov ecx [esp+40h+var_28] +
mov edx ds:dword_4727C4 +
mov [eax] edi +
mov dword ptr [eax+8] 0 +
mov [eax+4] ecx +
mov ecx [edx+0Ch] +
test ecx ecx +
jnz loc_428010  +
mov [edx+0Ch] eax +
jmp loc_428016  +
cmp ebx esi +
ja loc_427F57  +
lea esi [esi+0] +
mov [esp+40h+var_40] offset a_debug_abbrevS +
call sub_436A70  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4727C8 eax +
jmp loc_428005  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi offset aNoChildren +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+34h+arg_0] +
mov ebx [eax+0Ch] +
mov ecx eax +
mov eax [eax+18h] +
add eax ebx +
mov [esp+34h+var_18] eax +
mov eax [ecx+8] +
mov [esp+34h+var_34] offset aContentsOfTheS +
mov [esp+34h+var_30] eax +
call printf  +
call sub_426690  +
mov ecx ds:dword_4727C8 +
test ecx ecx +
jnz loc_4281E0  +
mov edx [esp+34h+var_18] +
mov eax ebx +
call sub_427F40  +
mov edx ds:dword_4727C8 +
test edx edx +
mov [esp+34h+var_1C] eax +
jz loc_4281BB  +
mov eax [esp+34h+arg_0] +
sub ebx [eax+0Ch] +
mov [esp+34h+var_34] offset aNumberTag0xLx +
mov [esp+34h+var_30] ebx +
call printf  +
mov ebx ds:dword_4727C8 +
test ebx ebx +
jz loc_4281BB  +
mov eax [ebx+8] +
mov esi offset aHasChildren +
test eax eax +
mov eax [ebx+4] +
cmovz esi edi +
call sub_4279F0  +
mov edx [ebx] +
mov [esp+34h+var_28] esi +
mov [esp+34h+var_34] offset aLdSS +
mov [esp+34h+var_30] edx +
mov [esp+34h+var_2C] eax +
call printf  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_4281B4  +
mov eax [esi+4] +
call sub_427AA0  +
mov ebp eax +
mov eax [esi] +
call sub_427A40  +
mov [esp+34h+var_2C] ebp +
mov [esp+34h+var_34] offset a18sS +
mov [esp+34h+var_30] eax +
call printf  +
mov esi [esi+8] +
test esi esi +
jnz loc_428188  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_428152  +
mov ebx [esp+34h+var_1C] +
test ebx ebx +
jnz loc_428101  +
mov [esp+34h+var_34] 0Ah +
call putchar  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+34h+var_1C] 0 +
jmp loc_428131  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
lea edi [esp+2Ch] +
mov ebx [eax+0Ch] +
mov esi [eax+18h] +
mov eax [eax+8] +
mov dword ptr [esp] offset aContentsOfTheS +
add esi ebx +
mov [esp+4] eax +
call printf  +
cmp ebx esi +
jb loc_428284  +
jmp loc_4282F4  +
cmp al 1 +
jz loc_428301  +
cmp al 2 +
lea esi [esi+0] +
jnz loc_428280  +
mov [esp] ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
call sub_427E10  +
add ebx [esp+2Ch] +
mov [esp] ebx +
mov ebp ebx +
mov [esp+1Ch] eax +
mov eax esi +
sub eax ebx +
mov [esp+4] eax +
call sub_4401F0  +
mov edx [esp+1Ch] +
mov [esp+8] ebp +
mov dword ptr [esp] offset aDw_macinfo_und +
mov [esp+4] edx +
lea ebx [ebx+eax+1] +
call printf  +
cmp esi ebx +
jbe loc_4282F4  +
movzx eax byte ptr [ebx] +
add ebx 1 +
cmp al 3 +
jz loc_428354  +
jbe loc_428223  +
cmp al 4 +
jz loc_4283A7  +
cmp al 0FFh +
nop   +
jnz loc_428280  +
mov [esp] ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
call sub_427E10  +
add ebx [esp+2Ch] +
mov [esp] ebx +
mov ebp ebx +
mov [esp+1Ch] eax +
mov eax esi +
sub eax ebx +
mov [esp+4] eax +
call sub_4401F0  +
mov edx [esp+1Ch] +
mov [esp+8] ebp +
mov dword ptr [esp] offset aDw_macinfo_ven +
mov [esp+4] edx +
lea ebx [ebx+eax+1] +
call printf  +
cmp esi ebx +
ja loc_428284  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
call sub_427E10  +
add ebx [esp+2Ch] +
mov [esp] ebx +
mov ebp ebx +
mov [esp+1Ch] eax +
mov eax esi +
sub eax ebx +
mov [esp+4] eax +
call sub_4401F0  +
mov edx [esp+1Ch] +
mov [esp+8] ebp +
mov dword ptr [esp] offset aDw_macinfo_def +
mov [esp+4] edx +
lea ebx [ebx+eax+1] +
call printf  +
jmp loc_428280  +
***
mov [esp] ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
call sub_427E10  +
add ebx [esp+2Ch] +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] edi +
mov ebp eax +
call sub_427E10  +
mov [esp+4] ebp +
mov dword ptr [esp] offset aDw_macinfo_sta +
add ebx [esp+2Ch] +
mov [esp+8] eax +
call printf  +
jmp loc_428280  +
***
mov dword ptr [esp] offset aDw_macinfo_end +
call puts  +
jmp loc_428280  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [ebp+arg_10] +
mov [ebp+var_40] ecx +
mov ecx [ebp+arg_C] +
mov esi [ebp+arg_4] +
mov [ebp+var_3C] edx +
mov [ebp+var_34] ebx +
mov [ebp+var_38] ecx +
mov ecx [ebp+arg_14] +
add esi eax +
mov [ebp+var_30] 0 +
add ecx 0Ch +
mov [ebp+var_44] ecx +
cmp esi eax +
jbe loc_428422  +
lea ebx [eax+1] +
mov [ebp+var_2C] ebx +
movzx edx byte ptr [eax] +
movzx edi dl +
sub edx 3 +
cmp dl 0F9h +
ja loc_4295E0  +
movzx edx dl +
jmp ds:off_463F78[edx*4]  +
mov [esp+68h+var_68] offset aDw_op_gnu_impl +
call printf  +
mov eax [ebp+var_30] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call sub_427E10  +
mov ecx [ebp+var_1C] +
add [ebp+var_2C] ecx +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_gnu_cons +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
lea esi [esi+0] +
cmp esi eax +
jbe loc_4283F0  +
mov [esp+68h+var_68] offset asc_463F74 +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_4283F0  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call sub_427E10  +
mov ecx [ebp+var_1C] +
add [ebp+var_2C] ecx +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_gnu_addr +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 5 +
cmp esi eax +
ja loc_4297E0  +
cmp esi ebx +
jbe loc_42850F  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4297E5  +
xor eax eax +
xor edx edx +
jmp loc_4297F7  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] ebx +
xor ebx ebx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov ecx [ebp+var_1C] +
add [ebp+var_2C] ecx +
xor ecx ecx +
mov edi edx +
or edi eax +
jz loc_42854D  +
add eax [ebp+var_38] +
adc edx [ebp+var_34] +
mov ecx eax +
mov ebx edx +
mov edx ecx +
mov eax offset asc_463786 +
mov ecx ebx +
mov [esp+68h+var_68] 0 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_gnu_rein +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_pgi_omp_ +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] ebx +
xor ebx ebx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov ecx [ebp+var_1C] +
add [ebp+var_2C] ecx +
xor ecx ecx +
mov edi edx +
or edi eax +
jz loc_4285C9  +
add eax [ebp+var_38] +
adc edx [ebp+var_34] +
mov ecx eax +
mov ebx edx +
mov edx ecx +
mov eax offset asc_463786 +
mov ecx ebx +
mov [esp+68h+var_68] 0 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_gnu_conv +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 2 +
cmp esi eax +
jbe loc_429830  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+1] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_gnu_dere +
call printf  +
jmp loc_4287DE  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov ecx [ebp+var_1C] +
add [ebp+var_2C] ecx +
add eax [ebp+var_38] +
adc edx [ebp+var_34] +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_gnu_co_0 +
mov [esp+68h+var_64] eax +
call printf  +
mov ebx [ebp+var_2C] +
lea eax [ebx+1] +
cmp esi eax +
jbe loc_42984B  +
mov edi 1 +
mov eax ds:dword_472C94 +
mov [esp+68h+var_64] edi +
mov [esp+68h+var_68] ebx +
call eax  +
mov [ebp+var_50] eax +
mov eax [ebp+var_2C] +
mov [ebp+var_4C] edx +
add eax 1 +
mov [ebp+var_2C] eax +
mov [esp+68h+var_68] esi +
mov edx [ebp+var_50] +
mov ecx [ebp+var_4C] +
call sub_427C00  +
mov [ebp+var_2C] eax +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov edi esi +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov ecx [ebp+var_2C] +
add ecx [ebp+var_1C] +
sub edi ecx +
mov [ebp+var_2C] ecx +
mov ecx edi +
mov [ebp+var_50] edi +
sar edi 1Fh +
mov ebx eax +
mov [ebp+var_4C] edi +
mov edi edx +
cmp edx [ebp+var_4C] +
jb loc_428710  +
ja loc_4298C3  +
cmp eax ecx +
ja loc_4298C3  +
nop   +
mov [esp+68h+var_68] offset aDw_op_gnu_entr +
call printf  +
mov ecx [ebp+arg_14] +
mov eax [ebp+var_2C] +
mov [esp+68h+var_54] ecx +
mov edx [ebp+var_38] +
mov ecx [ebp+var_34] +
mov [esp+68h+var_64] ebx +
mov [esp+68h+var_60] edi +
mov [esp+68h+var_5C] edx +
mov [esp+68h+var_58] ecx +
mov ecx [ebp+arg_0] +
mov [esp+68h+var_68] ecx +
mov ecx [ebp+var_40] +
mov edx [ebp+var_3C] +
call sub_4283C0  +
test eax eax +
mov eax 1 +
cmovz eax [ebp+var_30] +
mov [ebp+var_30] eax +
mov [esp+68h+var_68] 29h +
call putchar  +
mov eax [ebp+var_2C] +
add eax ebx +
cmp esi eax +
jnb loc_429619  +
mov eax esi +
jmp loc_4283F0  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov ebx eax +
mov eax [ebp+var_1C] +
mov [ebp+var_50] edx +
mov edx 1 +
add [ebp+var_2C] eax +
mov eax ebx +
call sub_427720  +
mov edx ebx +
mov [esp+68h+var_68] 0 +
mov ecx [ebp+var_50] +
mov edi eax +
mov eax offset aU +
call sub_426840  +
mov [esp+68h+var_60] edi +
mov [esp+68h+var_68] offset aDw_op_gnu_regv +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
lea ecx [ebp+var_1C] +
mov [esp+68h+var_64] ecx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_68] eax +
call sub_427E10  +
mov ecx [ebp+var_1C] +
add [ebp+var_2C] ecx +
add eax [ebp+var_38] +
adc edx [ebp+var_34] +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset a0xS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_428416  +
cmp [ebp+arg_0] 2 +
mov edi esp +
jz loc_429907  +
mov eax [ebp+var_40] +
add eax ebx +
cmp esi eax +
ja loc_4298A6  +
cmp esi ebx +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
jbe loc_428899  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
ja loc_428899  +
mov edx ds:dword_472C94 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call edx  +
mov [ebp+var_50] eax +
mov [ebp+var_4C] edx +
mov eax [ebp+var_40] +
mov esp edi +
add eax [ebp+var_2C] +
mov [ebp+var_2C] eax +
lea ecx [ebp+var_1C] +
mov [esp+68h+var_64] ecx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 1 +
mov [esp+68h+var_68] eax +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aD +
call sub_426840  +
mov [esp+68h+var_68] 0 +
mov edx [ebp+var_50] +
mov ecx [ebp+var_4C] +
mov ebx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_60] ebx +
mov [esp+68h+var_68] offset aDw_op_gnu_im_0 +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
xor edi edi +
cmp esi ebx +
jbe loc_428920  +
lea edx [eax+2] +
mov [ebp+var_2C] edx +
movzx edi byte ptr [eax+1] +
mov [esp+68h+var_64] esi +
mov eax [ebp+arg_14] +
mov edx edi +
add eax 10h +
mov [esp+68h+var_68] eax +
mov ecx [ebp+var_44] +
lea eax [ebp+var_2C] +
call sub_427AF0  +
mov [ebp+var_4C] edx +
mov [ebp+var_50] eax +
mov [esp+68h+var_64] edi +
mov [esp+68h+var_68] offset aDw_op_gnu_enco +
call printf  +
mov eax [ebp+var_50] +
mov ecx [ebp+var_3C] +
mov edx [ebp+var_4C] +
call sub_426900  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_gnu_unin +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_hp_unmod +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_hp_mod_r +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_hp_fltco +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_hp_flt_0 +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_hp_tls +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_hp_is_va +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_gnu_push +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_stack_va +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_implicit +
call printf  +
mov eax [ebp+var_2C] +
lea ecx [ebp+var_1C] +
mov [esp+68h+var_64] ecx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_68] eax +
call sub_427E10  +
mov ecx edx +
mov edx eax +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
mov [esp+68h+var_68] esi +
call sub_427C00  +
mov [ebp+var_2C] eax +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_bit_piec +
call printf  +
mov eax [ebp+var_2C] +
lea ecx [ebp+var_1C] +
mov [esp+68h+var_64] ecx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_68] eax +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp+68h+var_68] offset aSizeS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
lea ecx [ebp+var_1C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
mov [esp+68h+var_64] ecx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_68] eax +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp+68h+var_68] offset aOffsetS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_call_fra +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_form_tls +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_4299B0  +
cmp [ebp+arg_0] 2 +
mov edi esp +
jz loc_429966  +
mov eax [ebp+var_40] +
add eax ebx +
cmp esi eax +
jbe loc_4298AE  +
mov eax [ebp+var_40] +
lea ecx [eax-1] +
xor edx edx +
mov [ebp+var_50] ecx +
xor ecx ecx +
cmp [ebp+var_50] 7 +
ja loc_428B8D  +
mov edx ds:dword_472C94 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call edx  +
mov ecx edx +
mov edx eax +
mov eax [ebp+var_40] +
mov esp edi +
add [ebp+var_2C] eax +
mov [esp+68h+var_68] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_call_ref +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 5 +
cmp esi eax +
ja loc_429761  +
cmp esi ebx +
jbe loc_428BD9  +
mov eax esi +
sub eax ebx +
jnz loc_429766  +
xor eax eax +
xor edx edx +
jmp loc_429775  +
add eax 3 +
cmp esi eax +
ja loc_429714  +
cmp esi ebx +
jbe loc_428BFB  +
mov eax esi +
sub eax ebx +
jnz loc_429719  +
xor eax eax +
xor edx edx +
jmp loc_429728  +
mov [esp+68h+var_68] offset aDw_op_push_obj +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_nop +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 2 +
cmp esi eax +
jbe loc_4296F9  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+1] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_xderef_s +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 2 +
cmp esi eax +
jbe loc_4297C5  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+1] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_deref_si +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_pieceS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] ebx +
lea edi [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov ebx eax +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_48] edx +
mov [ebp+var_2C] eax +
mov [esp+68h+var_64] edi +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 1 +
mov [esp+68h+var_68] eax +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aD +
call sub_426840  +
mov edx 1 +
mov edi eax +
mov eax ebx +
call sub_427720  +
mov edx ebx +
mov [ebp+var_50] eax +
mov eax offset aU +
mov [esp+68h+var_68] 0 +
mov ecx [ebp+var_48] +
call sub_426840  +
mov [esp+68h+var_5C] edi +
mov ecx [ebp+var_50] +
mov [esp+68h+var_68] offset aDw_op_bregxSSS +
mov [esp+68h+var_60] ecx +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 1 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aD +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_fbregS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_30] 1 +
mov [ebp+var_2C] eax +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov ebx eax +
mov eax [ebp+var_1C] +
mov [ebp+var_50] edx +
mov edx 1 +
add [ebp+var_2C] eax +
mov eax ebx +
call sub_427720  +
mov edx ebx +
mov [esp+68h+var_68] 0 +
mov ecx [ebp+var_50] +
mov edi eax +
mov eax offset aU +
call sub_426840  +
mov [esp+68h+var_60] edi +
mov [esp+68h+var_68] offset aDw_op_regxSS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
lea eax [ebp+var_1C] +
sub edi 70h +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 1 +
mov [esp+68h+var_64] eax +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aD +
call sub_426840  +
mov edx 1 +
mov ebx eax +
mov eax edi +
call sub_427720  +
mov [esp+68h+var_5C] ebx +
mov [esp+68h+var_64] edi +
mov [esp+68h+var_68] offset aDw_op_bregDSS +
mov [esp+68h+var_60] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
sub edi 50h +
mov edx 1 +
mov eax edi +
call sub_427720  +
mov [esp+68h+var_64] edi +
mov [esp+68h+var_68] offset aDw_op_regDS +
mov [esp+68h+var_60] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
sub edi 30h +
mov [esp+68h+var_64] edi +
mov [esp+68h+var_68] offset aDw_op_litD +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 3 +
cmp esi eax +
jbe loc_4297AE  +
mov eax 2 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
lea edx [ebx+2] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_skipLd +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_ne +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_lt +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_le +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_gt +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_ge +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_eq +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 3 +
cmp esi eax +
jbe loc_429891  +
mov eax 2 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
lea edx [ebx+2] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_braLd +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_xor +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_shra +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_shr +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_shl +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_plus_uco +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_plus +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_or +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_not +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_neg +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_mul +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_mod +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_minus +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_div +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_and +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_abs +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_xderef +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_rot +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_swap +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 2 +
cmp esi eax +
jbe loc_429876  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+1] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_pickLd +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_over +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_drop +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_dup +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 1 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aD +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_constsS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
lea eax [ebp+var_1C] +
mov [esp+68h+var_5C] esi +
mov [esp+68h+var_60] 0 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call sub_427E10  +
mov [esp+68h+var_68] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_constuS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
add eax [ebp+var_1C] +
mov [ebp+var_2C] eax +
jmp loc_428480  +
add eax 5 +
cmp esi eax +
jbe loc_4296B4  +
mov eax 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
lea edx [ebx+4] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const8sL +
call printf  +
mov edx [ebp+var_2C] +
lea ecx [edx+4] +
cmp esi ecx +
ja loc_4298CD  +
xor eax eax +
cmp esi edx +
jbe loc_429347  +
mov ebx esi +
sub ebx edx +
jnz loc_4298D2  +
mov [ebp+var_2C] ecx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aLd +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 5 +
cmp esi eax +
jbe loc_429699  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+4] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const8uL +
call printf  +
mov ecx [ebp+var_2C] +
lea edx [ecx+4] +
cmp esi edx +
ja loc_4298E9  +
xor eax eax +
cmp esi ecx +
jbe loc_4293BE  +
mov ebx esi +
sub ebx ecx +
lea edi [ebx-1] +
cmp edi 7 +
jbe loc_4298EE  +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aLu +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 5 +
cmp esi eax +
jbe loc_4296E4  +
mov eax 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
lea edx [ebx+4] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const4sL +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 5 +
cmp esi eax +
jbe loc_4296C9  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+4] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const4uL +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 3 +
cmp esi eax +
jbe loc_429665  +
mov eax 2 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
lea edx [ebx+2] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const2sL +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 3 +
cmp esi eax +
jbe loc_42967D  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+2] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const2uL +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 2 +
cmp esi eax +
jbe loc_42964D  +
mov eax 1 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
lea edx [ebx+1] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const1sL +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
add eax 2 +
cmp esi eax +
jbe loc_429632  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
lea edx [ebx+1] +
mov [ebp+var_2C] edx +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] offset aDw_op_const1uL +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov [esp+68h+var_68] offset aDw_op_deref +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov eax [ebp+var_3C] +
mov edi esp +
add eax ebx +
cmp esi eax +
jbe loc_429621  +
mov eax [ebp+var_3C] +
lea ecx [eax-1] +
xor edx edx +
mov [ebp+var_50] ecx +
xor ecx ecx +
cmp [ebp+var_50] 7 +
ja loc_4295A9  +
mov edx ds:dword_472C94 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call edx  +
mov ecx edx +
mov edx eax +
mov eax [ebp+var_3C] +
mov esp edi +
add [ebp+var_2C] eax +
mov eax offset asc_463786 +
mov [esp+68h+var_68] 0 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_addrS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
sub edi 0E0h +
cmp edi 1Fh +
ja loc_429602  +
mov [esp+68h+var_68] offset aUserDefinedLoc +
call printf  +
mov eax [ebp+var_30] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+68h+var_68] offset aUnknownLocatio +
call printf  +
mov eax [ebp+var_30] +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_2C] eax +
jmp loc_428480  +
xor edx edx +
xor ecx ecx +
cmp esi ebx +
jbe loc_4295A9  +
mov eax esi +
sub eax ebx +
jmp loc_429586  +
cmp esi ebx +
jbe loc_429646  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_429530  +
xor eax eax +
jmp loc_429542  +
cmp esi ebx +
jbe loc_42965B  +
mov eax esi +
sub eax ebx +
jnz loc_4294F0  +
xor eax eax +
lea esi [esi+0] +
jmp loc_4294FF  +
cmp esi ebx +
jbe loc_429676  +
mov eax esi +
sub eax ebx +
lea esi [esi+0] +
jnz loc_429470  +
xor eax eax +
jmp loc_42947F  +
cmp esi ebx +
nop   +
jbe loc_429692  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4294B0  +
xor eax eax +
jmp loc_4294C2  +
cmp esi ebx +
jbe loc_4296AD  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_429372  +
xor eax eax +
jmp loc_429384  +
cmp esi ebx +
jbe loc_4296C2  +
mov eax esi +
sub eax ebx +
jnz loc_429304  +
xor eax eax +
jmp loc_429313  +
cmp esi ebx +
jbe loc_4296DD  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_429430  +
xor eax eax +
jmp loc_429442  +
cmp esi ebx +
jbe loc_4296F2  +
mov eax esi +
sub eax ebx +
jnz loc_4293F0  +
xor eax eax +
jmp loc_4293FF  +
cmp esi ebx +
jbe loc_42970D  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_428C40  +
xor eax eax +
jmp loc_428C52  +
mov eax 2 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
add eax [ebp+var_38] +
adc edx [ebp+var_34] +
lea ecx [ebx+2] +
mov [ebp+var_2C] ecx +
mov ecx edx +
mov edx eax +
mov [esp+68h+var_68] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_call20xS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
mov eax 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call sub_4373D0  +
mov ebx [ebp+var_2C] +
add eax [ebp+var_38] +
adc edx [ebp+var_34] +
lea ecx [ebx+4] +
mov [ebp+var_2C] ecx +
mov ecx edx +
mov edx eax +
mov [esp+68h+var_68] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_call40xS +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
cmp esi ebx +
jbe loc_4297BC  +
mov eax esi +
sub eax ebx +
jnz loc_428F30  +
xor eax eax +
nop   +
jmp loc_428F3F  +
cmp esi ebx +
jbe loc_4297D9  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_428C80  +
xor eax eax +
jmp loc_428C92  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_64] eax +
call edx  +
mov ebx [ebp+var_2C] +
add eax [ebp+var_38] +
adc edx [ebp+var_34] +
lea ecx [ebx+4] +
mov [ebp+var_2C] ecx +
mov ecx edx +
mov edx eax +
mov [esp+68h+var_68] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+68h+var_68] offset aDw_op_gnu_para +
mov [esp+68h+var_64] eax +
call printf  +
mov eax [ebp+var_2C] +
jmp loc_428480  +
cmp esi ebx +
jbe loc_429844  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_428606  +
xor eax eax +
jmp loc_428618  +
cmp esi ebx +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
jbe loc_4286AC  +
mov edi esi +
sub edi ebx +
lea ecx [edi-1] +
cmp ecx 7 +
ja loc_4286AC  +
jmp loc_428692  +
cmp esi ebx +
jbe loc_42988A  +
mov eax esi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4291E8  +
xor eax eax +
jmp loc_4291FA  +
cmp esi ebx +
jbe loc_42989F  +
mov eax esi +
sub eax ebx +
jnz loc_428FF0  +
xor eax eax +
jmp loc_428FFF  +
mov eax [ebp+var_40] +
jmp loc_42886E  +
xor edx edx +
xor ecx ecx +
cmp esi ebx +
jbe loc_428B8D  +
mov eax esi +
sub eax ebx +
jmp loc_428B6A  +
mov ebx ecx +
mov edi [ebp+var_4C] +
jmp loc_428710  +
mov ebx 4 +
mov [esp+68h+var_64] ebx +
mov [esp+68h+var_68] edx +
call sub_4373D0  +
mov ecx [ebp+var_2C] +
add ecx 4 +
jmp loc_429347  +
mov ebx 4 +
mov eax ds:dword_472C94 +
mov [esp+68h+var_68] ecx +
mov [esp+68h+var_64] ebx +
call eax  +
mov ecx [ebp+var_2C] +
lea edx [ecx+4] +
jmp loc_4293BE  +
mov eax [ebp+var_3C] +
add eax ebx +
cmp esi eax +
ja loc_429928  +
cmp esi ebx +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
jbe loc_429956  +
mov eax esi +
sub eax ebx +
jmp loc_42992B  +
mov eax [ebp+var_3C] +
lea edx [eax-1] +
cmp edx 7 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
ja loc_429956  +
mov edx ds:dword_472C94 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call edx  +
mov [ebp+var_50] eax +
mov [ebp+var_4C] edx +
mov eax [ebp+var_3C] +
mov esp edi +
add eax [ebp+var_2C] +
mov [ebp+var_2C] eax +
jmp loc_4288A4  +
mov eax [ebp+var_3C] +
add eax ebx +
cmp esi eax +
ja loc_42997D  +
xor edx edx +
xor ecx ecx +
cmp esi ebx +
jbe loc_4299A3  +
mov eax esi +
sub eax ebx +
jmp loc_429980  +
mov eax [ebp+var_3C] +
lea ecx [eax-1] +
xor edx edx +
mov [ebp+var_50] ecx +
xor ecx ecx +
cmp [ebp+var_50] 7 +
ja loc_4299A3  +
mov edx ds:dword_472C94 +
mov [esp+68h+var_64] eax +
mov [esp+68h+var_68] ebx +
call edx  +
mov ecx edx +
mov edx eax +
mov eax [ebp+var_3C] +
mov esp edi +
add [ebp+var_2C] eax +
jmp loc_428B95  +
mov [esp+68h+var_68] offset aDw_op_call_r_0 +
call printf  +
jmp loc_428422  +
***
jmp loc_4299D0  +
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov eax [eax+0Ch] +
mov [ebp-4Ch] eax +
add eax [ecx+18h] +
mov [ebp-50h] eax +
mov eax ds:dword_472C8C +
test eax eax +
jnz loc_429CE0  +
mov ds:dword_472C8C 1 +
mov eax [ebp+8] +
mov eax [eax+8] +
mov dword ptr [esp] offset aRawDumpOfDebug +
mov [esp+4] eax +
call printf  +
mov eax [ebp-50h] +
cmp [ebp-4Ch] eax +
jnb loc_42A4D8  +
mov ebx [ebp-4Ch] +
mov dword ptr [ebp-84h] offset a_debug_line_ +
jmp loc_429A4B  +
***
mov dword ptr [esp+0] offset aNoLineNumberSt +
call puts  +
cmp [ebp-50h] ebx +
jbe loc_42A4D8  +
mov eax [ebp+8] +
mov ecx 0Ch +
mov edi [ebp-84h] +
mov eax [eax+8] +
mov esi eax +
cmps   +
jnz loc_42A230  +
mov edi offset a_debug_line_dw +
mov ecx 10h +
mov esi eax +
cmps   +
jz loc_42A230  +
mov eax [ebp-50h] +
mov edx ds:dword_4721C4 +
mov [ebp-48h] eax +
mov eax ds:dword_4721A0 +
mov [ebp-1Ch] edx +
mov [ebp-40h] eax +
mov eax ds:dword_4721A4 +
mov [ebp-3Ch] eax +
mov eax ds:dword_4721A8 +
mov [ebp-38h] eax +
mov eax ds:dword_4721AC +
mov [ebp-34h] eax +
mov eax ds:dword_4721B0 +
mov [ebp-30h] eax +
mov eax ds:dword_4721B4 +
mov [ebp-2Ch] eax +
mov eax ds:dword_4721B8 +
mov [ebp-28h] eax +
mov eax ds:dword_4721BC +
mov [ebp-24h] eax +
mov eax ds:dword_4721C0 +
test al al +
mov [ebp-20h] eax +
jz loc_42B6C7  +
movzx eax byte ptr [ebp-26h] +
mov ds:dword_4727E0 0 +
mov ds:dword_4727E4 0 +
mov ds:byte_4727FC 0 +
mov ds:dword_4727F4 eax +
mov eax [ebp-50h] +
mov ds:dword_4727E8 1 +
mov ds:dword_4727EC 1 +
mov ds:dword_4727F0 0 +
mov ds:dword_4727F8 0 +
mov ds:byte_4727FD 0 +
mov ds:dword_472800 0 +
mov dword ptr [ebp-70h] 0 +
cmp ebx eax +
jnb loc_429A36  +
mov dword ptr [esp+0] offset aLineNumberStat +
call puts  +
cmp ebx [ebp-48h] +
jb loc_429CA3  +
jmp loc_429D20  +
sub eax edx +
movzx ecx byte ptr [ebp-27h] +
mov [ebp-68h] al +
movzx eax al +
mov [ebp-6Ch] ax +
div  byte ptr [ebp-20h] +
cmp cl 1 +
mov dword ptr [ebp-5Ch] 0 +
movzx esi al +
mov [ebp-60h] esi +
jz loc_42A1B0  +
movzx eax ds:byte_4727FC +
xor esi esi +
mov [ebp-78h] ecx +
mov ebx eax +
add ebx [ebp-60h] +
adc esi [ebp-5Ch] +
xor edx edx +
mov [ebp-74h] edx +
mov [esp+arg_4] ecx +
mov [esp+0] ebx +
mov [esp+arg_0] esi +
mov [esp+arg_8] edx +
call sub_43F880  +
mov edi edx +
movzx edx byte ptr [ebp-28h] +
imul edi edx +
mul  edx +
add edx edi +
add eax ds:dword_4727E0 +
adc edx ds:dword_4727E4 +
mov [ebp-80h] eax +
mov [ebp-7Ch] edx +
mov ds:dword_4727E0 eax +
mov eax [ebp-78h] +
mov ds:dword_4727E4 edx +
mov edx [ebp-74h] +
mov [esp+0] ebx +
mov [esp+arg_0] esi +
mov [esp+arg_4] eax +
mov [esp+arg_8] edx +
call sub_43FAF0  +
mov ds:byte_4727FC al +
mov ebx eax +
mov eax offset asc_463786 +
mov dword ptr [esp+0] 0 +
mov edx [ebp-80h] +
movzx ebx bl +
mov ecx [ebp-7Ch] +
call sub_426840  +
mov dword ptr [esp+0] 0 +
mov edx [ebp-60h] +
mov ecx [ebp-5Ch] +
mov esi eax +
mov eax offset aU +
call sub_426840  +
mov [esp+arg_C] ebx +
mov [esp+arg_8] esi +
mov [esp+arg_4] eax +
movzx eax byte ptr [ebp-68h] +
mov dword ptr [esp+0] offset aSpecialOpcodeD +
mov [esp+arg_0] eax +
call printf  +
movzx eax word ptr [ebp-6Ch] +
div  byte ptr [ebp-20h] +
mov ebx ds:dword_4727EC +
movzx edx ah +
mov eax offset aD +
add edx [ebp-24h] +
add ebx edx +
mov ecx edx +
mov ds:dword_4727EC ebx +
sar ecx 1Fh +
mov dword ptr [esp+0] 0 +
call sub_426840  +
mov [esp+arg_4] ebx +
mov dword ptr [esp+0] offset aAndLineBySToD +
mov [esp+arg_0] eax +
call printf  +
mov ebx [ebp-58h] +
cmp [ebp-48h] ebx +
jbe loc_429D20  +
mov eax ebx +
sub eax [ebp-4Ch] +
mov dword ptr [esp+0] offset a0x08lx +
mov [esp+arg_0] eax +
call printf  +
lea eax [ebx+1] +
movzx edx byte ptr [ebp-1Fh] +
mov [ebp-58h] eax +
movzx eax byte ptr [ebx] +
cmp al dl +
jnb loc_429B62  +
cmp al 0Ch +
ja loc_42A930  +
jmp ds:off_464DE8[eax*4]  +
***
test al 1 +
jnz loc_429A05  +
test al 2 +
mov byte ptr [ebp-80h] 0 +
nop   +
jnz loc_42A4E9  +
***
mov dword ptr [esp+0] offset aSetEpilogue_be +
mov dword ptr [esp+0] offset aSetPrologue_en +
add ebx 3 +
movzx ecx byte ptr [ebp-20h] +
mov eax 0FFh +
sub eax edx +
cdq   +
idiv  ecx +
mov ecx eax +
mov [ebp-60h] eax +
sar eax 1Fh +
cmp byte ptr [ebp-27h] 0 +
mov [ebp-5Ch] eax +
jz loc_42AA32  +
movzx esi byte ptr [ebp-28h] +
mov eax ecx +
imul  esi +
mov esi eax +
mov edi edx +
add esi ds:dword_4727E0 +
adc edi ds:dword_4727E4 +
mov [ebp-60h] eax +
mov eax offset asc_463786 +
mov [ebp-5Ch] edx +
mov edx esi +
mov ecx edi +
mov ds:dword_4727E0 esi +
mov ds:dword_4727E4 edi +
mov dword ptr [esp+0] 0 +
call sub_426840  +
mov dword ptr [esp+0] 0 +
mov edx [ebp-60h] +
mov ecx [ebp-5Ch] +
mov ebx eax +
mov eax offset aU +
call sub_426840  +
mov [esp+arg_4] ebx +
mov dword ptr [esp+0] offset aAdvancePcByCon +
mov [esp+arg_0] eax +
call printf  +
mov ebx [ebp-58h] +
jmp loc_429C9E  +
***
mov dword ptr [esp+0] offset aSetBasicBlock +
call puts  +
mov ebx [ebp-58h] +
mov ds:dword_4727F8 1 +
jmp loc_429C9E  +
***
mov esi ds:dword_4727F4 +
mov eax [ebp-50h] +
mov eax [ebp-50h] +
mov [esp+arg_4] 0 +
mov [esp+arg_8] eax +
lea eax [ebp-44h] +
mov [esp+arg_0] eax +
mov ebx [ebp-58h] +
mov [esp+0] ebx +
call sub_427E10  +
add ebx [ebp-44h] +
mov dword ptr [esp+0] 0 +
mov ecx edx +
mov esi eax +
mov edx eax +
mov eax offset aD +
call sub_426840  +
mov dword ptr [esp+0] offset aSetFileNameToE +
mov [esp+arg_0] eax +
call printf  +
mov ds:dword_4727E8 esi +
jmp loc_429C9E  +
***
mov eax [ebp-50h] +
mov eax [ebp-50h] +
mov dword ptr [esp+0] offset aCopy +
movzx eax byte ptr [ebp-26h] +
mov ebx [ebp-50h] +
mov [ebp-60h] al +
lea eax [ebp-44h] +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] eax +
mov esi [ebp-58h] +
mov [esp-4+arg_0] esi +
call sub_427E10  +
mov ecx [ebp-44h] +
mov edx esi +
add edx ecx +
test eax eax +
jz loc_42A149  +
cmp ebx edx +
jz loc_42A149  +
sub ebx edx +
cmp eax ebx +
jbe loc_42B5C4  +
mov [esp-4+arg_0] offset aBadlyFormedExt +
call sub_437070  +
mov edi [ebp-44h] +
mov ebx [ebp-58h] +
add ebx edi +
jmp loc_429C9E  +
mov eax [ebp-50h] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
mov ebx [ebp-58h] +
mov [esp-4+arg_0] ebx +
call sub_427E10  +
add ebx [ebp-44h] +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aSetIsaToS +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_429C9E  +
movzx ecx byte ptr [ebp-28h] +
mov eax esi +
mul  ecx +
mov esi eax +
mov edi edx +
add esi ds:dword_4727E0 +
adc edi ds:dword_4727E4 +
mov [ebp-60h] eax +
mov eax offset asc_463786 +
mov [ebp-5Ch] edx +
mov edx esi +
mov ecx edi +
mov ds:dword_4727E0 esi +
mov ds:dword_4727E4 edi +
mov [esp-4+arg_0] 0 +
call sub_426840  +
mov [esp-4+arg_0] 0 +
mov edx [ebp-60h] +
mov ecx [ebp-5Ch] +
mov ebx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] eax +
movzx eax byte ptr [ebp-68h] +
mov [esp-4+arg_0] offset aSpecialOpcod_0 +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_429C56  +
lea eax [ebp-48h] +
mov edx ebx +
mov [esp-4+arg_4] eax +
lea eax [ebp-40h] +
mov [esp-4+arg_0] eax +
mov ecx [ebp-50h] +
mov eax [ebp+8] +
call sub_427130  +
test eax eax +
mov [ebp-70h] eax +
jz loc_42B6D3  +
mov edi ebx +
sub edi [ebp-4Ch] +
mov [esp-4+arg_0] offset aOffset0xLx +
mov [esp-4+arg_4] edi +
call printf  +
mov eax [ebp-40h] +
mov [esp-4+arg_0] offset aLengthLd +
mov [esp-4+arg_4] eax +
call printf  +
movzx eax word ptr [ebp-38h] +
mov [esp-4+arg_0] offset aDwarfVersionD +
mov [esp-4+arg_4] eax +
call printf  +
mov eax [ebp-30h] +
mov [esp-4+arg_0] offset aPrologueLength +
mov [esp-4+arg_4] eax +
call printf  +
movzx eax byte ptr [ebp-28h] +
mov [esp-4+arg_0] offset aMinimumInstruc +
mov [esp-4+arg_4] eax +
call printf  +
cmp word ptr [ebp-38h] 3 +
ja loc_42A916  +
movzx eax byte ptr [ebp-26h] +
mov [esp-4+arg_0] offset aInitialValueOf +
mov [esp-4+arg_4] eax +
call printf  +
mov eax [ebp-24h] +
mov [esp-4+arg_0] offset aLineBaseD +
mov [esp-4+arg_4] eax +
call printf  +
movzx eax byte ptr [ebp-20h] +
mov [esp-4+arg_0] offset aLineRangeD +
mov [esp-4+arg_4] eax +
call printf  +
movzx eax byte ptr [ebp-1Fh] +
mov [esp-4+arg_0] offset aOpcodeBaseD +
mov [esp-4+arg_4] eax +
call printf  +
cmp byte ptr [ebp-20h] 0 +
jz loc_42A901  +
movzx eax byte ptr [ebp-26h] +
mov ds:dword_4727E0 0 +
mov ds:dword_4727E4 0 +
mov ds:byte_4727FC 0 +
mov ds:dword_4727F4 eax +
movzx eax byte ptr [ebp-1Fh] +
add eax [ebp-70h] +
cmp [ebp-50h] eax +
mov ds:dword_4727E8 1 +
mov ds:dword_4727EC 1 +
mov ds:dword_4727F0 0 +
mov ds:dword_4727F8 0 +
mov ds:byte_4727FD 0 +
mov ds:dword_472800 0 +
jbe loc_42B733  +
mov [esp-4+arg_0] offset aOpcodes +
call puts  +
movzx eax byte ptr [ebp-1Fh] +
cmp eax 1 +
jle loc_42A3CA  +
mov esi [ebp-70h] +
mov ebx 1 +
movzx eax byte ptr [esi+ebx-1] +
mov [esp-4+arg_4] ebx +
add ebx 1 +
mov [esp-4+arg_0] offset aOpcodeDHasDArg +
mov [esp-4+arg_8] eax +
call printf  +
movzx eax byte ptr [ebp-1Fh] +
cmp ebx eax +
jl loc_42A3A6  +
mov esi [ebp-70h] +
lea ebx [esi+eax-1] +
cmp byte ptr [ebx] 0 +
jnz loc_42A466  +
mov [esp-4+arg_0] offset aTheDirectoryTa +
call puts  +
cmp byte ptr [ebx+1] 0 +
lea edi [ebx+1] +
jnz loc_42A786  +
mov [esp-4+arg_0] offset aTheFileNameTab +
call puts  +
mov [esp-4+arg_0] 0Ah +
lea ebx [edi+1] +
call putchar  +
mov eax [ebp-40h] +
mov ds:dword_4721A0 eax +
mov eax [ebp-3Ch] +
mov ds:dword_4721A4 eax +
mov eax [ebp-38h] +
mov ds:dword_4721A8 eax +
mov eax [ebp-34h] +
mov ds:dword_4721AC eax +
mov eax [ebp-30h] +
mov ds:dword_4721B0 eax +
mov eax [ebp-2Ch] +
mov ds:dword_4721B4 eax +
mov eax [ebp-28h] +
mov ds:dword_4721B8 eax +
mov eax [ebp-24h] +
mov ds:dword_4721BC eax +
mov eax [ebp-20h] +
mov ds:dword_4721C0 eax +
mov eax [ebp-1Ch] +
mov ds:dword_4721C4 eax +
mov eax [ebp-48h] +
jmp loc_429B40  +
mov eax ebx +
sub eax [ebp-4Ch] +
mov [esp-4+arg_0] offset aTheDirectory_0 +
mov [esp-4+arg_4] eax +
call printf  +
cmp [ebp-50h] ebx +
jbe loc_42A4CA  +
cmp byte ptr [ebx] 0 +
jz loc_42A4CA  +
xor esi esi +
jmp loc_42A495  +
cmp byte ptr [ebx] 0 +
jz loc_42A4CA  +
mov edi [ebp-50h] +
add esi 1 +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_4] esi +
mov [esp-4+arg_0] offset aD_S +
sub edi ebx +
mov [esp-4+arg_8] edi +
call printf  +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_4] edi +
call sub_4401F0  +
lea ebx [ebx+eax+1] +
cmp [ebp-50h] ebx +
ja loc_42A490  +
mov eax [ebp-50h] +
sub eax 1 +
cmp ebx eax +
jb loc_42A3E6  +
mov byte ptr [ebp-80h] 0 +
mov eax ds:dword_472C8C +
test al 2 +
jz loc_429CF6  +
mov eax [ebp+8] +
mov eax [eax+8] +
mov [esp-4+arg_0] offset aDecodedDumpOfD +
mov [esp-4+arg_4] eax +
call printf  +
mov eax [ebp-50h] +
cmp [ebp-4Ch] eax +
mov dword ptr [ebp-84h] offset a_debug_line_ +
jnb loc_429CF6  +
mov eax [ebp+8] +
mov ecx 0Ch +
mov edi [ebp-84h] +
mov eax [eax+8] +
mov esi eax +
cmps   +
jnz loc_42B0D0  +
mov edi offset a_debug_line_dw +
mov ecx 10h +
mov esi eax +
cmps   +
jz loc_42B0D0  +
mov eax [ebp-50h] +
mov edx ds:dword_472184 +
mov [ebp-48h] eax +
mov eax ds:dword_472160 +
mov [ebp-1Ch] edx +
mov [ebp-40h] eax +
mov eax ds:dword_472164 +
mov [ebp-3Ch] eax +
mov eax ds:dword_472168 +
mov [ebp-38h] eax +
mov eax ds:dword_47216C +
mov [ebp-34h] eax +
mov eax ds:dword_472170 +
mov [ebp-30h] eax +
mov eax ds:dword_472174 +
mov [ebp-2Ch] eax +
mov eax ds:dword_472178 +
mov [ebp-28h] eax +
mov eax ds:dword_47217C +
mov [ebp-24h] eax +
mov eax ds:dword_472180 +
test al al +
mov [ebp-20h] eax +
jz loc_42B6DC  +
movzx eax byte ptr [ebp-26h] +
mov edx [ebp-50h] +
mov ds:dword_4727E0 0 +
mov ds:dword_4727E4 0 +
mov ds:byte_4727FC 0 +
mov ds:dword_4727E8 1 +
mov ds:dword_4727EC 1 +
mov ds:dword_4727F0 0 +
mov ds:dword_4727F4 eax +
mov ds:dword_4727F8 0 +
mov ds:byte_4727FD 0 +
mov ds:dword_472800 0 +
mov dword ptr [ebp-6Ch] 0 +
mov dword ptr [ebp-68h] 0 +
mov dword ptr [ebp-60h] 0 +
mov dword ptr [ebp-78h] 0 +
cmp [ebp-4Ch] edx +
mov edi [ebp-4Ch] +
jb loc_42A75B  +
jmp loc_42AB23  +
sub [ebp-4Ch] al +
movzx edi byte ptr [ebp-4Ch] +
movzx eax byte ptr [ebp-20h] +
movzx ebx byte ptr [ebp-27h] +
mov edx eax +
mov [ebp-58h] al +
mov eax edi +
div  dl +
cmp bl 1 +
movzx eax al +
jz loc_42B000  +
movzx ecx ds:byte_4727FC +
xor edx edx +
add eax ecx +
movzx ecx byte ptr [ebp-28h] +
div  ebx +
xor ebx ebx +
imul ecx eax +
add ds:dword_4727E0 ecx +
adc ds:dword_4727E4 ebx +
mov ds:byte_4727FC dl +
mov eax edi +
div  byte ptr [ebp-58h] +
movzx edi ah +
add edi [ebp-24h] +
add ds:dword_4727EC edi +
mov edi esi +
mov esi [ebp-60h] +
test esi esi +
jz loc_42AF76  +
mov eax ds:dword_4727E8 +
add eax 0FFFFFFFh +
shl eax 4 +
mov esi [esi+eax] +
mov [esp-4+arg_0] esi +
call strlen  +
cmp eax 23h +
mov edx eax +
jbe loc_42B0C7  +
mov ecx ds:dword_472C54 +
test ecx ecx +
jz loc_42B052  +
add edx 1 +
mov [esp-4+arg_0] edx +
mov [ebp-58h] edx +
call sub_438CA0  +
mov edx [ebp-58h] +
mov [esp-4+arg_4] esi +
mov [esp-4+arg_8] edx +
mov [esp-4+arg_0] eax +
mov ebx eax +
call strncpy  +
mov edx ds:dword_472C54 +
test edx edx +
jz loc_42AFA0  +
cmp byte ptr [ebp-27h] 1 +
jz loc_42B095  +
mov eax ds:dword_4727E0 +
mov edx ds:dword_4727E4 +
mov ecx ds:dword_4727EC +
movzx esi ds:byte_4727FC +
mov [esp-4+arg_C] eax +
mov [esp-4+arg_10] edx +
mov [esp-4+arg_8] ecx +
mov [esp+14h] esi +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] offset aS11d18i64xD +
call printf  +
cmp byte ptr [ebp-4Ch] 1 +
jz loc_42AFE8  +
mov [esp-4+arg_0] ebx +
call free  +
mov edx [ebp-48h] +
cmp edx edi +
jbe loc_42AB20  +
movzx eax byte ptr [edi] +
lea esi [edi+1] +
mov ecx eax +
mov [ebp-4Ch] al +
movzx eax byte ptr [ebp-1Fh] +
cmp cl al +
jnb loc_42A630  +
movzx ecx byte ptr [ebp-4Ch] +
cmp cl 0Ch +
ja loc_42B400  +
jmp ds:off_464E1C[ecx*4]  +
mov eax edi +
sub eax [ebp-4Ch] +
mov [esp-4+arg_0] offset aTheFileNameT_0 +
mov [esp-4+arg_4] eax +
call printf  +
mov [esp-4+arg_0] offset aEntryDirTimeSi +
call puts  +
mov eax [ebp-50h] +
cmp eax edi +
jbe loc_42A3FF  +
cmp byte ptr [ebx+1] 0 +
jz loc_42A3FF  +
lea ebx [ebp-44h] +
mov esi ebx +
mov ebx eax +
mov [ebp-60h] edi +
jmp loc_42A7DA  +
jbe loc_42A3FF  +
cmp byte ptr [edi] 0 +
jz loc_42A3FF  +
mov [ebp-60h] edi +
mov eax ds:dword_472800 +
add eax 1 +
mov ds:dword_472800 eax +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aD_0 +
call printf  +
mov eax ebx +
sub eax edi +
mov [ebp-58h] eax +
mov [esp-4+arg_0] edi +
mov [esp-4+arg_4] eax +
call sub_4401F0  +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] esi +
lea edi [edi+eax+1] +
mov [esp-4+arg_0] edi +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_0 +
mov [esp-4+arg_4] eax +
call printf  +
add edi [ebp-44h] +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] edi +
mov [esp-4+arg_4] esi +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_0 +
mov [esp-4+arg_4] eax +
call printf  +
add edi [ebp-44h] +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] edi +
mov [esp-4+arg_4] esi +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_0 +
mov [esp-4+arg_4] eax +
call printf  +
mov edx [ebp-60h] +
add edi [ebp-44h] +
mov [esp-4+arg_8] edx +
mov eax [ebp-58h] +
mov [esp-4+arg_0] offset a_S +
mov [esp-4+arg_4] eax +
call printf  +
cmp ebx edi +
jnz loc_42A7C8  +
mov [esp-4+arg_0] offset aCorruptFileNam +
call sub_437070  +
jmp loc_42A3FF  +
mov [esp-4+arg_0] offset aLineRangeOf0Is +
call sub_437070  +
mov byte ptr [ebp-20h] 1 +
jmp loc_42A31C  +
movzx eax byte ptr [ebp-27h] +
mov [esp-4+arg_0] offset aMaximumOpsPerI +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_42A2C3  +
movzx ebx al +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] offset aUnknownOpcodeD +
call printf  +
mov eax [ebp-70h] +
test eax eax +
jz loc_42B69B  +
movzx ebx byte ptr [eax+ebx-1] +
test ebx ebx +
jz loc_42B69B  +
mov edi [ebp-50h] +
mov esi [ebp-58h] +
jmp loc_42A9B1  +
lea eax [ebp-44h] +
sub ebx 1 +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_C] edi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp-4+arg_8] offset asc_464C6C +
mov [esp-4+arg_0] offset a0xSS +
mov [esp-4+arg_4] eax +
call printf  +
add esi [ebp-44h] +
cmp ebx 1 +
jnz loc_42A963  +
mov ecx [ebp-50h] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_C] ecx +
lea ecx [ebp-44h] +
mov [esp-4+arg_4] ecx +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp-4+arg_8] offset unk_464DE7 +
mov [esp-4+arg_0] offset a0xSS +
mov [esp-4+arg_4] eax +
call printf  +
mov eax [ebp-44h] +
add eax esi +
mov ebx eax +
jmp loc_42B69E  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp-4+arg_4] eax +
mov eax [ebp-58h] +
mov [esp-4+arg_0] eax +
call edx  +
mov [ebp-60h] eax +
mov [ebp-5Ch] edx +
jmp loc_429D79  +
movzx ecx ds:byte_4727FC +
xor ebx ebx +
add ecx [ebp-60h] +
adc ebx [ebp-5Ch] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_C] 0 +
mov [ebp-68h] ecx +
mov [ebp-64h] ebx +
call sub_43F880  +
movzx esi byte ptr [ebp-28h] +
mov edi edx +
imul edi esi +
mul  esi +
add edx edi +
add eax ds:dword_4727E0 +
adc edx ds:dword_4727E4 +
mov ds:dword_4727E0 eax +
mov esi eax +
mov ds:dword_4727E4 edx +
mov edi edx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] 0 +
mov ecx [ebp-68h] +
mov ebx [ebp-64h] +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_4] ebx +
call sub_43FAF0  +
mov edx esi +
mov ecx edi +
mov ds:byte_4727FC al +
mov ebx eax +
mov eax offset asc_463786 +
mov [esp-4+arg_0] 0 +
movzx ebx bl +
call sub_426840  +
mov [esp-4+arg_0] 0 +
mov edx [ebp-60h] +
mov ecx [ebp-5Ch] +
mov esi eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] esi +
mov [esp-4+arg_0] offset aAdvancePcByC_0 +
mov [esp-4+arg_4] eax +
call printf  +
mov ebx [ebp-58h] +
jmp loc_429C9E  +
mov edi esi +
cmp byte ptr [ebp-4Ch] 1 +
jz loc_42A68F  +
mov edx [ebp-48h] +
cmp edx edi +
ja loc_42A75B  +
lea esi [esi+0] +
mov [ebp-4Ch] edi +
mov eax [ebp-60h] +
test eax eax +
jz loc_42AB32  +
mov [esp-4+arg_0] eax +
call free  +
mov eax [ebp-6Ch] +
test eax eax +
jz loc_42AB41  +
mov [esp-4+arg_0] eax +
call free  +
mov [esp-4+arg_0] 0Ah +
call putchar  +
mov eax [ebp-4Ch] +
cmp [ebp-50h] eax +
ja loc_42A515  +
jmp loc_429CF6  +
lea eax [ebp-44h] +
mov [esp-4+arg_C] edx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] esi +
call sub_427E10  +
mov edi [ebp-44h] +
test eax eax +
jz loc_42B535  +
lea edx [esi+edi] +
add edi eax +
lea ecx [edx+1] +
movzx edx byte ptr [edx] +
cmp dl 16h +
ja loc_42AF5B  +
jmp ds:off_464E50[edx*4]  +
mov eax [ebp-50h] +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
add esi [ebp-44h] +
mov [esp-4+arg_0] offset aSetIsaToLu +
mov edi esi +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_42A750  +
add edi 3 +
cmp [ebp-50h] edi +
ja loc_42B4F3  +
cmp [ebp-50h] esi +
nop   +
jbe loc_42AC03  +
mov eax [ebp-50h] +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42B4F8  +
mov dword ptr [ebp-90h] 0 +
mov dword ptr [ebp-8Ch] 0 +
mov eax [ebp-90h] +
mov edx [ebp-8Ch] +
add ds:dword_4727E0 eax +
adc ds:dword_4727E4 edx +
mov ds:byte_4727FC 0 +
jmp loc_42A750  +
mov ecx 0FFh +
movzx ebx byte ptr [ebp-27h] +
sub ecx eax +
mov eax ecx +
movzx ecx byte ptr [ebp-20h] +
cdq   +
idiv  ecx +
cmp bl 1 +
jz loc_42B548  +
movzx ecx ds:byte_4727FC +
xor edx edx +
mov edi esi +
add eax ecx +
movzx ecx byte ptr [ebp-28h] +
div  ebx +
xor ebx ebx +
imul ecx eax +
add ds:dword_4727E0 ecx +
adc ds:dword_4727E4 ebx +
mov ds:byte_4727FC dl +
jmp loc_42A750  +
mov ds:dword_4727F8 1 +
mov edi esi +
jmp loc_42A750  +
mov ebx ds:dword_4727F4 +
xor eax eax +
mov edi esi +
test ebx ebx +
setz al  +
mov ds:dword_4727F4 eax +
jmp loc_42A750  +
mov eax [ebp-50h] +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
add esi [ebp-44h] +
mov edi esi +
mov ds:dword_4727F0 eax +
jmp loc_42A750  +
mov eax [ebp-50h] +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov edx [ebp-60h] +
add esi [ebp-44h] +
test edx edx +
mov edi esi +
mov ds:dword_4727E8 eax +
jz loc_42B6F2  +
add eax 0FFFFFFFh +
shl eax 4 +
add eax [ebp-60h] +
mov edx [eax+4] +
test edx edx +
jz loc_42B580  +
mov esi [ebp-6Ch] +
test esi esi +
jz loc_42B6AF  +
mov eax [eax] +
mov [esp-4+arg_8] eax +
mov eax [ebp-6Ch] +
mov eax [eax+edx*4-4] +
mov [esp-4+arg_0] offset aSS_0 +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_42A750  +
mov eax [ebp-50h] +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_8] 1 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
add esi [ebp-44h] +
add ds:dword_4727EC eax +
mov edi esi +
jmp loc_42A750  +
mov eax [ebp-50h] +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
movzx ebx byte ptr [ebp-27h] +
add esi [ebp-44h] +
cmp bl 1 +
mov edi esi +
jz loc_42B564  +
movzx ecx ds:byte_4727FC +
xor edx edx +
add eax ecx +
movzx ecx byte ptr [ebp-28h] +
div  ebx +
xor ebx ebx +
imul ecx eax +
add ds:dword_4727E0 ecx +
adc ds:dword_4727E4 ebx +
mov ds:byte_4727FC dl +
jmp loc_42A750  +
sub eax 1 +
mov ebx esp +
lea edx [ecx+eax] +
cmp [ebp-50h] edx +
ja loc_42AE08  +
cmp [ebp-50h] ecx +
jbe loc_42AE14  +
mov eax [ebp-50h] +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42B67C  +
mov ds:dword_4727E0 0 +
mov ds:dword_4727E4 0 +
mov esp ebx +
mov ds:byte_4727FC 0 +
add edi esi +
jmp loc_42A750  +
add dword ptr [ebp-68h] 1 +
add edi esi +
mov ebx [ebp-68h] +
mov [ebp-4Ch] ecx +
shl ebx 4 +
mov [esp-4+arg_4] ebx +
mov eax [ebp-60h] +
mov [esp-4+arg_0] eax +
call sub_438D20  +
mov ecx [ebp-4Ch] +
add ds:dword_472800 1 +
lea ebx [eax+ebx-10h] +
mov [ebx] ecx +
mov [ebp-60h] eax +
mov [esp-4+arg_0] ecx +
mov [ebp-4Ch] ecx +
call strlen  +
mov ecx [ebp-4Ch] +
lea ecx [ecx+eax+1] +
mov eax [ebp-48h] +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
mov [ebp-4Ch] ecx +
call sub_427E10  +
mov ecx [ebp-4Ch] +
mov [ebx+4] eax +
mov eax [ebp-48h] +
add ecx [ebp-44h] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_4] eax +
mov [ebp-4Ch] ecx +
call sub_427E10  +
mov [ebx+8] eax +
mov eax [ebp-48h] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
mov ecx [ebp-4Ch] +
mov eax [ebp-44h] +
add eax ecx +
mov [esp-4+arg_0] eax +
call sub_427E10  +
mov [ebx+0Ch] eax +
jmp loc_42A750  +
movzx eax byte ptr [ebp-26h] +
add edi esi +
mov ds:dword_4727E0 0 +
mov ds:dword_4727E4 0 +
mov ds:byte_4727FC 0 +
mov ds:dword_4727E8 1 +
mov ds:dword_4727EC 1 +
mov ds:dword_4727F0 0 +
mov ds:dword_4727F4 eax +
mov ds:dword_4727F8 0 +
mov ds:byte_4727FD 0 +
mov ds:dword_472800 0 +
jmp loc_42A750  +
mov [esp-4+arg_8] eax +
add edi esi +
mov [esp-4+arg_4] edx +
mov [esp-4+arg_0] offset aUnknownULength +
call printf  +
jmp loc_42A750  +
mov edx 0Ah +
mov esi offset aUnknown +
mov [esp-4+arg_0] edx +
mov [ebp-58h] edx +
call sub_438CA0  +
mov edx [ebp-58h] +
mov [esp-4+arg_4] esi +
mov [esp-4+arg_8] edx +
mov [esp-4+arg_0] eax +
mov ebx eax +
call strncpy  +
cmp byte ptr [ebp-27h] 1 +
jz loc_42B020  +
mov eax ds:dword_4727E0 +
mov edx ds:dword_4727E4 +
mov ecx ds:dword_4727EC +
movzx esi ds:byte_4727FC +
mov [esp-4+arg_C] eax +
mov [esp-4+arg_10] edx +
mov [esp-4+arg_8] ecx +
mov [esp+14h] esi +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] offset a35s11d18i64xD +
call printf  +
cmp byte ptr [ebp-4Ch] 1 +
jnz loc_42A748  +
mov [esp-4+arg_0] 0Ah +
call putchar  +
jmp loc_42A748  +
movzx ecx byte ptr [ebp-28h] +
xor edx edx +
imul eax ecx +
add ds:dword_4727E0 eax +
adc ds:dword_4727E4 edx +
jmp loc_42A67C  +
mov ecx ds:dword_4727EC +
mov edx ds:dword_4727E4 +
mov eax ds:dword_4727E0 +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_8] ecx +
mov [esp-4+arg_10] edx +
mov [esp-4+arg_C] eax +
mov [esp-4+arg_0] offset a35s11d18i64x +
call printf  +
jmp loc_42A73E  +
mov [ebp-58h] eax +
mov [esp-4+arg_0] 24h +
call sub_438CA0  +
mov [esp-4+arg_8] 24h +
mov edx [ebp-58h] +
mov ebx eax +
lea eax [esi+edx-23h] +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] ebx +
call strncpy  +
mov eax ds:dword_472C54 +
test eax eax +
jz loc_42AFA0  +
cmp byte ptr [ebp-27h] 1 +
jnz loc_42A706  +
mov ecx ds:dword_4727EC +
mov edx ds:dword_4727E4 +
mov eax ds:dword_4727E0 +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_8] ecx +
mov [esp-4+arg_10] edx +
mov [esp-4+arg_C] eax +
mov [esp-4+arg_0] offset aS11d18i64x +
call printf  +
jmp loc_42A73E  +
add edx 1 +
jmp loc_42AF80  +
lea eax [ebp-48h] +
mov [esp-4+arg_4] eax +
lea eax [ebp-40h] +
mov [esp-4+arg_0] eax +
mov ecx [ebp-50h] +
mov edx [ebp-4Ch] +
mov eax [ebp+8] +
call sub_427130  +
test eax eax +
mov [ebp-78h] eax +
jz loc_42B6E8  +
cmp byte ptr [ebp-20h] 0 +
jz loc_42B520  +
movzx eax byte ptr [ebp-26h] +
mov esi [ebp-78h] +
mov ds:dword_4727E0 0 +
mov ds:dword_4727E4 0 +
mov ds:dword_4727F4 eax +
movzx eax byte ptr [ebp-1Fh] +
mov ds:byte_4727FC 0 +
mov ds:dword_4727E8 1 +
mov ds:dword_4727EC 1 +
lea ebx [esi+eax-1] +
cmp byte ptr [ebx] 0 +
mov ds:dword_4727F0 0 +
mov ds:dword_4727F8 0 +
mov ds:byte_4727FD 0 +
mov ds:dword_472800 0 +
mov dword ptr [ebp-6Ch] 0 +
jz loc_42B1E4  +
mov edi ebx +
xor esi esi +
mov [ebp-4Ch] ebx +
mov ebx [ebp-50h] +
nop   +
mov eax ebx +
add esi 1 +
sub eax edi +
mov [esp-4+arg_0] edi +
mov [esp-4+arg_4] eax +
call sub_4401F0  +
lea edi [edi+eax+1] +
cmp byte ptr [edi] 0 +
jnz loc_42B180  +
shl esi 2 +
mov ebx [ebp-4Ch] +
mov [esp-4+arg_0] esi +
call sub_438CA0  +
cmp byte ptr [ebx] 0 +
mov [ebp-6Ch] eax +
jz loc_42B1E2  +
mov esi [ebp-50h] +
mov [ebp-4Ch] edi +
mov edi eax +
lea esi [esi+0] +
mov eax ebx +
add edi 4 +
sub eax esi +
mov [edi-4] ebx +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_4] eax +
call sub_4401F0  +
lea ebx [ebx+eax+1] +
cmp byte ptr [ebx] 0 +
jnz loc_42B1C0  +
mov edi [ebp-4Ch] +
mov ebx edi +
cmp byte ptr [ebx+1] 0 +
lea ecx [ebx+1] +
jz loc_42B4E0  +
mov [ebp-4Ch] ebx +
mov ebx [ebp-50h] +
mov esi ecx +
mov dword ptr [ebp-68h] 0 +
lea edi [ebp-44h] +
mov [ebp-58h] ecx +
mov eax ebx +
sub eax esi +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_4] eax +
call sub_4401F0  +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] edi +
lea esi [esi+eax+1] +
mov [esp-4+arg_0] esi +
call sub_427E10  +
add esi [ebp-44h] +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_4] edi +
call sub_427E10  +
add esi [ebp-44h] +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_4] edi +
call sub_427E10  +
add esi [ebp-44h] +
add dword ptr [ebp-68h] 1 +
cmp byte ptr [esi] 0 +
jnz loc_42B206  +
mov eax [ebp-68h] +
mov ecx [ebp-58h] +
mov ebx [ebp-4Ch] +
mov [ebp-58h] esi +
shl eax 4 +
mov [ebp-4Ch] ecx +
mov [esp-4+arg_0] eax +
call sub_438CA0  +
mov ecx [ebp-4Ch] +
cmp byte ptr [ebx+1] 0 +
mov [ebp-60h] eax +
mov esi eax +
jz loc_42B338  +
mov ebx [ebp-50h] +
mov eax ebx +
add esi 10h +
sub eax ecx +
mov [esi-10h] ecx +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_4] eax +
mov [ebp-4Ch] ecx +
call sub_4401F0  +
mov ecx [ebp-4Ch] +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] edi +
lea ecx [ecx+eax+1] +
mov [esp-4+arg_0] ecx +
mov [ebp-4Ch] ecx +
call sub_427E10  +
mov ecx [ebp-4Ch] +
add ecx [ebp-44h] +
mov [esi-0Ch] eax +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] edi +
mov [ebp-4Ch] ecx +
call sub_427E10  +
mov ecx [ebp-4Ch] +
add ecx [ebp-44h] +
mov [esi-8] eax +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_C] ebx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] edi +
mov [ebp-4Ch] ecx +
call sub_427E10  +
mov ecx [ebp-4Ch] +
add ecx [ebp-44h] +
mov [esi-4] eax +
cmp byte ptr [ecx] 0 +
jnz loc_42B2A3  +
mov ebx [ebp-6Ch] +
test ebx ebx +
jz loc_42B70A  +
mov eax [ebp-60h] +
mov ebx offset unk_464360 +
mov eax [eax+4] +
test eax eax +
jz loc_42B359  +
mov edx [ebp-6Ch] +
mov ebx [edx+eax*4-4] +
mov ecx ds:dword_472C54 +
test ecx ecx +
jnz loc_42B374  +
mov [esp-4+arg_0] ebx +
call strlen  +
cmp eax 4Bh +
ja loc_42B5AA  +
mov eax [ebp-60h] +
mov eax [eax] +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] offset aCuSS +
mov [esp-4+arg_8] eax +
call printf  +
mov [esp-4+arg_0] offset aFileNameLineNu +
call puts  +
mov ecx [ebp-58h] +
lea eax [ecx+1] +
mov edx [ebp-48h] +
mov [ebp-4Ch] eax +
mov eax [ebp-40h] +
mov ds:dword_472160 eax +
mov eax [ebp-3Ch] +
mov ds:dword_472164 eax +
mov eax [ebp-38h] +
mov ds:dword_472168 eax +
mov eax [ebp-34h] +
mov ds:dword_47216C eax +
mov eax [ebp-30h] +
mov ds:dword_472170 eax +
mov eax [ebp-2Ch] +
mov ds:dword_472174 eax +
mov eax [ebp-28h] +
mov ds:dword_472178 eax +
mov eax [ebp-24h] +
mov ds:dword_47217C eax +
mov eax [ebp-20h] +
mov ds:dword_472180 eax +
mov eax [ebp-1Ch] +
mov ds:dword_472184 eax +
jmp loc_42A61F  +
movzx ebx byte ptr [ebp-4Ch] +
mov [esp-4+arg_0] offset aUnknownOpcodeD +
mov [esp-4+arg_4] ebx +
call printf  +
mov eax [ebp-78h] +
test eax eax +
jz loc_42B597  +
movzx ebx byte ptr [eax+ebx-1] +
test ebx ebx +
jz loc_42B597  +
mov edi [ebp-50h] +
jmp loc_42B47F  +
lea eax [ebp-44h] +
sub ebx 1 +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_C] edi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp-4+arg_8] offset asc_464C6C +
mov [esp-4+arg_0] offset a0xSS +
mov [esp-4+arg_4] eax +
call printf  +
add esi [ebp-44h] +
cmp ebx 1 +
jnz loc_42B431  +
mov eax [ebp-50h] +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp-4+arg_8] offset unk_464DE7 +
mov [esp-4+arg_0] offset a0xSS +
mov [esp-4+arg_4] eax +
call printf  +
add esi [ebp-44h] +
mov edi esi +
jmp loc_42B599  +
mov dword ptr [ebp-68h] 0 +
mov dword ptr [ebp-60h] 0 +
jmp loc_42B39C  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] esi +
call edx  +
mov dword ptr [ebp-8Ch] 0 +
mov [ebp-90h] eax +
jmp loc_42AC17  +
mov [esp-4+arg_0] offset aLineRangeOf0Is +
call sub_437070  +
mov byte ptr [ebp-20h] 1 +
jmp loc_42B100  +
mov [esp-4+arg_0] offset aBadlyFormedExt +
mov edi esi +
call sub_437070  +
jmp loc_42A750  +
movzx edx byte ptr [ebp-28h] +
mov edi esi +
imul eax edx +
xor edx edx +
add ds:dword_4727E0 eax +
adc ds:dword_4727E4 edx +
jmp loc_42A750  +
movzx edx byte ptr [ebp-28h] +
imul eax edx +
xor edx edx +
add ds:dword_4727E0 eax +
adc ds:dword_4727E4 edx +
jmp loc_42A750  +
mov eax [eax] +
mov [esp-4+arg_0] offset a_S_0 +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_42A750  +
mov edi esi +
mov [esp-4+arg_0] 0Ah +
call putchar  +
jmp loc_42AB07  +
mov eax [ebp-60h] +
mov eax [eax] +
mov [esp-4+arg_0] offset aS_1 +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_42B38D  +
lea ebx [edx+1] +
movzx edx byte ptr [edx] +
lea edi [eax+ecx] +
movzx esi dl +
mov [ebp-68h] edx +
mov [esp-4+arg_4] esi +
mov [esp-4+arg_0] offset aExtendedOpcode +
call printf  +
mov edx [ebp-68h] +
cmp dl 80h +
ja loc_42BAD4  +
jmp ds:off_464EAC[esi*4]  +
mov edi [ebp-54h] +
movzx ecx byte ptr [ebp-28h] +
mov esi [ebp-58h] +
mov edx edi +
imul edx ecx +
mov eax ecx +
mov [ebp-60h] edx +
mul  esi +
mov [ebp-58h] eax +
mov eax [ebp-60h] +
mov [ebp-54h] edx +
add [ebp-54h] eax +
mov edx [ebp-54h] +
mov eax [ebp-58h] +
add eax ds:dword_4727E0 +
adc edx ds:dword_4727E4 +
mov ds:dword_4727E0 eax +
mov ecx edx +
mov edx eax +
mov ds:dword_4727E4 ecx +
mov eax offset asc_463786 +
mov [esp-4+arg_0] 0 +
call sub_426840  +
mov [esp-4+arg_0] 0 +
mov edx [ebp-58h] +
mov ecx [ebp-54h] +
mov esi eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_8] esi +
mov [esp-4+arg_0] offset aAdvancePcByS_0 +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_429C9E  +
mov edx ds:dword_472C94 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] ecx +
call edx  +
mov ds:dword_4727E0 eax +
mov ds:dword_4727E4 edx +
jmp loc_42AE28  +
mov ebx [ebp-58h] +
mov [esp-4+arg_0] 0Ah +
call putchar  +
jmp loc_429C9E  +
sub edx 1 +
mov [esp-4+arg_4] edx +
mov [esp-4+arg_0] offset aUseDirectoryTa +
call printf  +
jmp loc_42A750  +
mov [esp-4+arg_0] offset aPartial_debug_ +
call sub_437070  +
mov byte ptr [ebp-80h] 1 +
jmp loc_42A4DC  +
mov [esp-4+arg_0] offset aPartial_debug_ +
call sub_437070  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub eax 1 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aUseFileTableEn +
call printf  +
jmp loc_42A750  +
mov eax [ebp-60h] +
mov eax [eax] +
mov [esp-4+arg_0] offset aCuS +
mov [esp-4+arg_4] eax +
call printf  +
mov [esp-4+arg_0] offset aFileNameLineNu +
call puts  +
mov ecx [ebp-58h] +
jmp loc_42B39C  +
mov [esp-4+arg_0] offset aLineBaseExtend +
call sub_437070  +
jmp loc_42B6D3  +
mov eax 0FFFFFFFFh +
sub eax [ebp-44h] +
mov [esp-4+arg_0] offset aDw_lne_hp_sour +
add eax edi +
lea esi [ebx+eax] +
call puts  +
cmp ebx esi +
jnb loc_42A158  +
lea eax [ebp-44h] +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_C] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] eax +
call sub_427E10  +
add ebx [ebp-44h] +
cmp eax 2 +
jz loc_42BC2A  +
cmp eax 3 +
jz loc_42BB50  +
cmp eax 1 +
jz loc_42BB33  +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aUnknownDw_lne_ +
call printf  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDefineNewFileT +
call puts  +
mov [esp-4+arg_0] offset aEntryDirTimeSi +
call puts  +
mov eax ds:dword_472800 +
add eax 1 +
mov ds:dword_472800 eax +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aD_1 +
call printf  +
mov eax [ebp-50h] +
mov [esp-4+arg_0] ebx +
sub eax ebx +
mov [esp-4+arg_4] eax +
call sub_4401F0  +
lea ecx [ebp-44h] +
lea esi [ebx+eax+1] +
mov eax [ebp-50h] +
mov [esp-4+arg_4] ecx +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_0 +
mov [esp-4+arg_4] eax +
call printf  +
mov eax [ebp-50h] +
lea ecx [ebp-44h] +
add esi [ebp-44h] +
mov [esp-4+arg_4] ecx +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_C] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_0 +
mov [esp-4+arg_4] eax +
call printf  +
mov eax [ebp-50h] +
add esi [ebp-44h] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_0 +
mov [esp-4+arg_4] eax +
call printf  +
add esi [ebp-44h] +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] offset aS_2 +
call printf  +
mov eax esi +
sub eax [ebp-58h] +
cmp edi eax +
jnz loc_42B8EE  +
cmp [ebp-50h] esi +
jnz loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_define_ +
call sub_437070  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_set_ +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_se_0 +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aEndOfSequence +
call puts  +
movzx esi byte ptr [ebp-60h] +
mov ds:dword_4727E0 0 +
mov ds:dword_4727E4 0 +
mov ds:byte_4727FC 0 +
mov ds:dword_4727E8 1 +
mov ds:dword_4727EC 1 +
mov ds:dword_4727F0 0 +
mov ds:dword_4727F4 esi +
mov ds:dword_4727F8 0 +
mov ds:byte_4727FD 0 +
mov ds:dword_472800 0 +
jmp loc_42A158  +
mov eax 0FFFFFFFFh +
sub eax [ebp-44h] +
add eax edi +
cmp eax 8 +
jbe loc_42BC72  +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aLengthDOfDw_ln +
call sub_437070  +
mov dword ptr [ebp-60h] 0 +
mov dword ptr [ebp-5Ch] 0 +
mov [esp-4+arg_0] 0 +
mov ebx [ebp-60h] +
mov eax offset asc_463786 +
mov esi [ebp-5Ch] +
mov edx ebx +
mov ecx esi +
call sub_426840  +
mov [esp-4+arg_0] offset aSetAddressTo0x +
mov [esp-4+arg_4] eax +
call printf  +
mov ds:dword_4727E0 ebx +
mov ds:dword_4727E4 esi +
mov ds:byte_4727FC 0 +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_nega +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_ne_0 +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_push +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_pop_ +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_se_1 +
call puts  +
jmp loc_42A158  +
mov eax [ebp-50h] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_C] eax +
lea eax [ebp-44h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aSetDiscriminat +
mov [esp-4+arg_4] eax +
call printf  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_ne_1 +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_defi +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_ne_2 +
call puts  +
jmp loc_42A158  +
mov esi 0FFFFFFFFh +
sub esi [ebp-44h] +
add esi edi +
test dl dl +
js loc_42BCC6  +
mov [esp-4+arg_0] offset aUnknown_0 +
call printf  +
mov [esp-4+arg_4] esi +
mov [esp-4+arg_0] offset aLengthD +
call printf  +
test esi esi +
jz loc_42BB22  +
add ebx 1 +
movzx eax byte ptr [ebx-1] +
mov [esp-4+arg_0] offset a02x +
mov [esp-4+arg_4] eax +
call printf  +
sub esi 1 +
jnz loc_42BB06  +
mov [esp-4+arg_0] offset asc_464AA4 +
call puts  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_sfc_ +
call puts  +
cmp esi ebx +
ja loc_42B762  +
jmp loc_42A158  +
mov [esp-4+arg_0] offset aDw_lne_hp_sf_0 +
call printf  +
lea eax [ebp-44h] +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_C] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_3 +
mov [esp-4+arg_4] eax +
call printf  +
lea eax [ebp-44h] +
add ebx [ebp-44h] +
mov [esp-4+arg_C] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_4 +
mov [esp-4+arg_4] eax +
call printf  +
lea eax [ebp-44h] +
add ebx [ebp-44h] +
mov [esp-4+arg_C] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aS_5 +
mov [esp-4+arg_4] eax +
call printf  +
add ebx [ebp-44h] +
jmp loc_42BB3F  +
lea eax [ebp-44h] +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_C] esi +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov [esp-4+arg_0] 0 +
mov ecx edx +
mov edx eax +
mov eax offset aU +
call sub_426840  +
mov [esp-4+arg_0] offset aDw_lne_hp_sf_1 +
mov [esp-4+arg_4] eax +
call printf  +
add ebx [ebp-44h] +
jmp loc_42BB3F  +
lea edx [ebx+eax] +
mov esi esp +
cmp [ebp-50h] edx +
ja loc_42BC94  +
cmp [ebp-50h] ebx +
mov dword ptr [ebp-60h] 0 +
mov dword ptr [ebp-5Ch] 0 +
jbe loc_42BCBF  +
mov eax [ebp-50h] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
mov dword ptr [ebp-60h] 0 +
mov dword ptr [ebp-5Ch] 0 +
ja loc_42BCBF  +
mov edx ds:dword_472C94 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] ebx +
call edx  +
mov [ebp-60h] eax +
mov [ebp-5Ch] edx +
mov esp esi +
jmp loc_42B9C1  +
mov [esp-4+arg_0] offset aUserDefined +
call printf  +
jmp loc_42BAF2  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_58] 48h +
mov [esp+58h+var_30] ecx +
call sub_438CA0  +
mov edx 48h +
test al 1 +
mov edi eax +
mov [esp+58h+var_40] eax +
jnz loc_42C025  +
test edi 2 +
jnz loc_42C039  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_42BD31  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_42BD39  +
mov byte ptr [edi] 0 +
mov [esp+58h+var_58] 2 +
call sub_438CA0  +
mov edi [esp+58h+var_40] +
mov [edi+0Ch] eax +
mov [esp+58h+var_58] 4 +
call sub_438CA0  +
mov [edi+10h] eax +
movzx edx byte ptr [esi] +
lea eax [esi+1] +
cmp eax ebp +
mov [edi+14h] eax +
mov [esp+58h+var_3C] edx +
jnb loc_42C156  +
cmp byte ptr [esi+1] 0 +
lea ebx [esi+2] +
jnz loc_42BD89  +
jmp loc_42BD8D  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_42BD8D  +
cmp ebp ebx +
ja loc_42BD80  +
cmp ebp ebx +
jz loc_42C15D  +
mov ecx 3 +
mov esi eax +
mov edi offset aEh +
cmps   +
mov ecx ds:dword_472C4C +
setnbe dl  +
setb al  +
add ecx ebx +
cmp dl al +
cmovz ebx ecx +
cmp [esp+58h+var_3C] 3 +
jle loc_42BDF4  +
lea esi [ebx+1] +
cmp ebp esi +
ja loc_42BE84  +
cmp ebp ebx +
ja loc_42C010  +
mov eax [esp+58h+var_40] +
mov byte ptr [eax+46h] 0 +
xor eax eax +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] offset aInvalidPoint_1 +
call sub_437070  +
mov eax ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+58h+var_40] +
lea edi [esp+58h+var_1C] +
mov eax ds:dword_472C4C +
mov byte ptr [esi+47h] 0 +
mov [esi+46h] al +
mov [esp+58h+var_58] ebx +
mov [esp+58h+var_4C] ebp +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] edi +
call sub_427E10  +
add ebx [esp+58h+var_1C] +
mov [esi+18h] eax +
mov [esp+58h+var_58] ebx +
mov [esp+58h+var_4C] ebp +
mov [esp+58h+var_50] 1 +
mov [esp+58h+var_54] edi +
call sub_427E10  +
add ebx [esp+58h+var_1C] +
cmp [esp+58h+var_3C] 1 +
mov [esi+1Ch] eax +
jnz loc_42BF2D  +
lea eax [ebx+1] +
cmp ebp eax +
mov [esp+58h+var_34] eax +
ja loc_42BFF0  +
cmp ebp ebx +
jbe loc_42BE74  +
mov eax ebp +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42BFF5  +
mov eax [esp+58h+var_40] +
mov dword ptr [eax+40h] 0 +
jmp loc_42BF54  +
mov eax 1 +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] ebx +
call ds:dword_472C94  +
mov edi [esp+58h+var_40] +
lea ecx [eax-1] +
movzx edx al +
cmp cl 7 +
mov [edi+46h] al +
ja loc_42C194  +
add ebx 2 +
cmp ebp ebx +
ja loc_42BFB2  +
cmp ebp esi +
jbe loc_42BECB  +
mov eax ebp +
sub eax esi +
lea ecx [eax-1] +
cmp ecx 7 +
jbe loc_42BFB7  +
mov eax [esp+58h+var_40] +
mov byte ptr [eax+47h] 0 +
xor eax eax +
lea ecx [edx+eax] +
cmp ecx 8 +
jg loc_42BFD6  +
lea edi [esp+58h+var_1C] +
mov [esp+58h+var_58] ebx +
mov [esp+58h+var_4C] ebp +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] edi +
mov ds:dword_472C4C edx +
call sub_427E10  +
mov esi [esp+58h+var_40] +
add ebx [esp+58h+var_1C] +
mov [esi+18h] eax +
mov [esp+58h+var_58] ebx +
mov [esp+58h+var_4C] ebp +
mov [esp+58h+var_50] 1 +
mov [esp+58h+var_54] edi +
call sub_427E10  +
add ebx [esp+58h+var_1C] +
mov [esi+1Ch] eax +
mov [esp+58h+var_58] ebx +
mov [esp+58h+var_4C] ebp +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] edi +
call sub_427E10  +
mov esi [esp+58h+var_40] +
add ebx [esp+58h+var_1C] +
mov [esp+58h+var_34] ebx +
mov [esi+40h] eax +
mov eax [esp+58h+var_40] +
xor esi esi +
mov [esp+58h+var_38] 0 +
mov eax [eax+14h] +
cmp byte ptr [eax] 7Ah +
jz loc_42C053  +
mov edx [esp+58h+var_40] +
mov eax [esp+58h+var_30] +
mov [eax] edx +
mov edx [esp+58h+arg_0] +
test edx edx +
jz loc_42BF8A  +
mov eax [esp+58h+arg_0] +
mov edx [esp+58h+var_3C] +
mov [eax] edx +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_42C04A  +
mov eax [esp+58h+arg_4] +
mov edx [esp+58h+var_38] +
mov [eax] esi +
mov eax [esp+58h+arg_8] +
mov [eax] edx +
mov eax [esp+58h+var_34] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] esi +
call ds:dword_472C94  +
mov edx [esp+58h+var_40] +
cmp al 8 +
mov [edx+47h] al +
movzx eax al +
jbe loc_42C170  +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] offset aInvalidSegment +
call sub_437070  +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
mov [esp+58h+var_54] eax +
mov [esp+58h+var_58] ebx +
call ds:dword_472C94  +
mov edx [esp+58h+var_40] +
mov [edx+40h] eax +
jmp loc_42BF54  +
mov eax ebp +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42BDD0  +
jmp loc_42BE89  +
lea edi [eax+1] +
mov dl 47h +
test edi 2 +
mov byte ptr [eax] 0 +
jz loc_42BD1A  +
xor ebx ebx +
add edi 2 +
mov [edi-2] bx +
sub edx 2 +
jmp loc_42BD1A  +
mov eax [esp+58h+var_34] +
jmp loc_42BDEC  +
mov [esp+58h+var_54] edi +
mov edi [esp+58h+var_34] +
mov [esp+58h+var_4C] ebp +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_58] edi +
call sub_427E10  +
mov esi eax +
mov eax [esp+58h+var_1C] +
add eax edi +
mov [esp+58h+var_38] eax +
add eax esi +
cmp ebp eax +
mov [esp+58h+var_34] eax +
jb loc_42C17D  +
test esi esi +
jz loc_42BF6E  +
mov eax [esp+58h+var_40] +
mov eax [eax+14h] +
mov [esp+58h+var_2C] eax +
lea ebx [eax+1] +
mov eax [esp+58h+var_34] +
cmp [esp+58h+var_38] eax +
ja loc_42C13F  +
cmp ebp ebx +
jbe loc_42BF6E  +
mov eax [esp+58h+var_38] +
lea edx [eax+esi] +
cmp edx eax +
jbe loc_42BF6E  +
mov edi ds:dword_472C4C +
add edi 1 +
mov [esp+58h+var_2C] edi +
jmp loc_42C0F9  +
cmp cl 50h +
jz loc_42C106  +
cmp cl 52h +
jz loc_42C130  +
cmp cl 53h +
jnz loc_42BF6E  +
add ebx 1 +
cmp ebx ebp +
jz loc_42BF6E  +
cmp edx eax +
jbe loc_42BF6E  +
movzx ecx byte ptr [ebx] +
cmp cl 4Ch +
jnz loc_42C0D3  +
add eax 1 +
jmp loc_42C0E6  +
movzx ecx byte ptr [eax] +
mov edi 5 +
and ecx 7 +
cmp cl 3 +
jz loc_42C12B  +
cmp cl 4 +
mov di 9 +
jz loc_42C12B  +
cmp cl 2 +
mov di 3 +
cmovnz edi [esp+58h+var_2C] +
add eax edi +
jmp loc_42C0E6  +
movzx ecx byte ptr [eax] +
add eax 1 +
mov edi [esp+58h+var_40] +
mov [edi+44h] cl +
jmp loc_42C0E6  +
mov [esp+58h+var_54] esi +
xor esi esi +
mov [esp+58h+var_58] offset aNegativeAugmen +
call sub_437070  +
jmp loc_42C0AD  +
mov ebx eax +
jmp loc_42BD8D  +
mov [esp+58h+var_58] offset aNoTerminatorFo +
call sub_437070  +
mov eax ebp +
jmp loc_42BDEC  +
mov edx [esp+58h+var_40] +
movzx edx byte ptr [edx+46h] +
jmp loc_42BED5  +
mov [esp+58h+var_54] esi +
mov [esp+58h+var_58] offset aAugmentationDa +
call sub_437070  +
mov eax ebp +
jmp loc_42BDEC  +
movzx eax al +
jmp loc_42BDDA  +
***
mov ds:dword_4727BC offset off_468FA0 +
mov ds:dword_4727B8 65h +
retn   +
***
mov ds:dword_4727BC offset off_468E00 +
mov ds:dword_4727B8 65h +
retn   +
***
mov ds:dword_4727BC offset off_468BC0 +
mov ds:dword_4727B8 7Eh +
retn   +
***
mov ds:dword_4727BC offset off_4688A0 +
mov ds:dword_4727B8 60h +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 3Eh +
jz loc_42C290  +
ja loc_42C265  +
cmp eax 3 +
jz loc_42C250  +
cmp eax 6 +
jnz locret_42C2A5  +
mov ds:dword_4727BC offset off_468E00 +
mov ds:dword_4727B8 65h +
retn   +
mov ds:dword_4727BC offset off_468FA0 +
mov ds:dword_4727B8 65h +
retn   +
cmp eax 0B4h +
jb locret_42C28E  +
cmp eax 0B5h +
jbe loc_42C290  +
cmp eax 0B7h +
jnz locret_42C2A7  +
mov ds:dword_4727BC offset off_4688A0 +
mov ds:dword_4727B8 60h +
retn   +
mov ds:dword_4727BC offset off_468BC0 +
mov ds:dword_4727B8 7Eh +
retn   +
retn   +
retn   +
***
xor edx edx +
mov eax 0FFFFFFFFh +
mov ebx [esp+arg_0] +
div  ecx +
cmp eax ebx +
jbe loc_42C2D3  +
imul ecx ebx +
mov [esp+arg_0] ecx +
pop ebx  +
jmp sub_438CA0  +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 18h +
mov eax 0FFFFFFFFh +
mov ecx [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
div  ecx +
cmp eax ebx +
jbe loc_42C309  +
imul ecx ebx +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp sub_438CA0  +
mov eax ds:_iob +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aAttemptToAll_0 +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov [esp+18h+var_18] 1 +
call sub_43A9D0  +
jmp sub_42C340  +
***
push ebx  +
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 0DCh +
mov edx [ebp+arg_8] +
mov [ebp+var_80] eax +
mov eax [ebp+arg_4] +
cmp ecx [ebp+arg_0] +
mov [ebp+var_7C] ecx +
mov [ebp+var_9C] edx +
mov edx [ebp+arg_10] +
mov [ebp+var_A0] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [ebp+var_8C] edx +
mov [ebp+var_90] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_94] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_A8] eax +
ja loc_42C659  +
jz loc_42C650  +
cmp ebx 11h +
jz loc_42D095  +
jbe loc_42C672  +
cmp ebx 17h +
jz loc_42D0B4  +
nop   +
jbe loc_42C750  +
cmp ebx 1F02h +
jz loc_42CE40  +
ja loc_42C951  +
cmp ebx 19h +
jz loc_42C8F0  +
cmp ebx 1F01h +
jnz loc_42C960  +
mov eax [ebp+arg_0] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6C] +
mov [esp+0E8h+var_E4] eax +
mov edi [ebp+var_7C] +
mov [esp+0E8h+var_E8] edi +
call sub_427E10  +
add edi [ebp+var_6C] +
mov [ebp+var_88] edi +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test eax eax +
jnz loc_42C6E2  +
mov esi [ebp+var_90] +
mov edi [ebp+var_8C] +
mov edx [ebp+var_68] +
mov eax [ebp+var_64] +
imul edx edi +
imul eax esi +
add eax edx +
mov [ebp+var_A8] eax +
mov eax esi +
mul  [ebp+var_68] +
mov ecx edx +
mov edx eax +
mov eax dword_441F4C +
add ecx [ebp+var_A8] +
test eax eax +
jz loc_42E505  +
add esi edx +
adc edi ecx +
cmp edi dword_441F5C +
jb loc_42E0DB  +
ja loc_42C4EC  +
cmp esi dword_441F58 +
jbe loc_42E0DB  +
mov [esp+0E8h+var_E8] 0 +
mov eax offset asc_463786 +
mov esi offset aOffsetTooBig +
call sub_426840  +
mov edx dword_441F48 +
mov [esp+0E8h+var_E8] offset aOffsetIntoSect +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] eax +
call sub_437070  +
mov edx [ebp+var_68] +
mov eax offset asc_463786 +
mov ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
call sub_426840  +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E8] offset aAddr_index0xSS +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov [ebp+var_A8] 0 +
mov eax ds:dword_472C50 +
test eax eax +
jnz loc_42C6E2  +
mov eax ds:dword_472C6C +
test eax eax +
jnz loc_42C6E2  +
nop   +
lea esi [esi+0] +
mov edx [ebp+arg_24] +
test edx edx +
jnz loc_42C740  +
mov eax [ebp+var_80] +
test eax eax +
jz loc_42C740  +
cmp eax 38h +
jz loc_42CB42  +
nop   +
ja loc_42CB08  +
cmp eax 19h +
jz loc_42CB42  +
nop   +
ja loc_42CBF3  +
cmp eax 13h +
jz loc_42D5E8  +
nop   +
jbe loc_42D440  +
mov eax [ebp+var_80] +
cmp eax 17h +
jz loc_42D504  +
cmp eax 18h +
jnz loc_42C740  +
cmp ebx 1F20h +
jz loc_42C740  +
cmp ebx 20h +
jz loc_42C740  +
lea eax [ebx-11h] +
cmp eax 2 +
jbe loc_42DF62  +
cmp ebx 15h +
jz loc_42DF62  +
mov eax [ebp+var_68] +
mov ecx [ebp+var_64] +
mov edi [ebp+arg_28] +
cmp [edi+1Ch] ecx +
ja loc_42DEC9  +
jb loc_42C612  +
cmp [edi+18h] eax +
ja loc_42DEC9  +
mov edi [ebp+arg_28] +
mov edx eax +
mov eax offset asc_463786 +
mov ebx [ebp+var_7C] +
sub ebx [edi+0Ch] +
mov [esp+0E8h+var_E8] 0 +
call sub_426840  +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] offset aOffsetSUsedAsV +
mov [esp+0E8h+var_E4] eax +
call sub_437070  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
cmp ebx 19h +
jz loc_42C407  +
mov [esp+0E8h+var_E8] offset aCorruptAttribu +
call sub_437070  +
mov esi [ebp+var_7C] +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 0Ch +
jbe loc_42C830  +
cmp ebx 0Eh +
jz loc_42D0B4  +
jb loc_42D060  +
cmp ebx 0Fh +
lea esi [esi+0] +
jz loc_42CA48  +
cmp ebx 10h +
jnz loc_42C960  +
cmp [ebp+arg_1C] 2 +
jz loc_42DE48  +
mov eax [ebp+arg_1C] +
sub eax 3 +
cmp eax 1 +
jbe loc_42DB30  +
mov [esp+0E8h+var_E8] offset aInternalErrorD +
call sub_436A70  +
mov eax [ebp+var_7C] +
mov [ebp+var_88] eax +
mov ecx [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test ecx ecx +
jz loc_42DBFF  +
mov eax ds:dword_472830 +
test eax eax +
jnz loc_42C570  +
mov eax [ebp+arg_20] +
test eax eax +
jz loc_42C570  +
cmp [ebp+var_80] 48h +
jz loc_42CCD4  +
jbe loc_42CC85  +
cmp [ebp+var_80] 2114h +
mov eax [ebp+var_80] +
jbe loc_42CDD0  +
cmp eax 2132h +
jz loc_42D4A0  +
cmp eax 2133h +
jnz loc_42C570  +
mov edi [ebp+arg_20] +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
mov [edi+20h] eax +
mov [edi+24h] edx +
nop   +
mov esi [ebp+var_88] +
lea esp [ebp-0Ch] +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 13h +
jz loc_42D043  +
jb loc_42CFF0  +
cmp ebx 15h +
jz loc_42CA48  +
cmp ebx 16h +
nop   +
lea esi [esi+0] +
jnz loc_42C960  +
mov eax [ebp+arg_0] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6C] +
mov [esp+0E8h+var_E4] eax +
mov edi [ebp+var_7C] +
mov [esp+0E8h+var_E8] edi +
call sub_427E10  +
mov ebx [ebp+arg_24] +
add edi [ebp+var_6C] +
test ebx ebx +
mov esi eax +
jnz loc_42C7B8  +
call sub_427AA0  +
mov [esp+0E8h+var_E8] offset aS_6 +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax [ebp+arg_2C] +
mov ecx edi +
mov [esp+0E8h+var_BC] eax +
mov eax [ebp+arg_28] +
mov [esp+0E8h+var_C0] eax +
mov eax [ebp+arg_24] +
mov [esp+0E8h+var_C4] eax +
mov eax [ebp+arg_20] +
mov [esp+0E8h+var_C8] eax +
mov eax [ebp+arg_1C] +
mov [esp+0E8h+var_CC] eax +
mov eax [ebp+var_94] +
mov [esp+0E8h+var_D4] eax +
mov eax [ebp+var_A8] +
mov [esp+0E8h+var_D0] eax +
mov eax [ebp+var_90] +
mov edx [ebp+var_8C] +
mov [esp+0E8h+var_DC] eax +
mov [esp+0E8h+var_D8] edx +
mov eax [ebp+var_A0] +
mov edx [ebp+var_9C] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E0] edx +
mov eax [ebp+arg_0] +
mov edx esi +
mov [esp+0E8h+var_E8] eax +
mov eax [ebp+var_80] +
call sub_42C3A0  +
mov esi eax +
jmp loc_42C668  +
cmp ebx 0Bh +
jnb loc_42D095  +
cmp ebx 5 +
jz loc_42CFF0  +
cmp ebx 6 +
jz loc_42D043  +
cmp ebx 1 +
nop   +
jnz loc_42C960  +
mov eax [ebp+var_90] +
mov esi esp +
mov edi [ebp+var_7C] +
lea edx [edi+eax] +
cmp [ebp+arg_0] edx +
ja loc_42C873  +
cmp edi [ebp+arg_0] +
jnb loc_42C893  +
mov eax [ebp+arg_0] +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42C893  +
mov edx ds:dword_472C94 +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov eax [ebp+var_7C] +
mov esp esi +
add eax [ebp+var_90] +
mov [ebp+var_88] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test eax eax +
jnz loc_42C6E2  +
mov edx [ebp+var_68] +
mov eax offset asc_463786 +
mov ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
call sub_426840  +
mov [esp+0E8h+var_E8] offset a0xS_0 +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] eax +
jmp loc_42C551  +
mov eax [ebp+var_7C] +
mov [ebp+var_68] 1 +
mov [ebp+var_64] 0 +
mov [ebp+var_88] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test eax eax +
jnz loc_42C6E2  +
mov edx [ebp+var_68] +
mov eax offset aD +
mov ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aS_6 +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] eax +
jmp loc_42C551  +
lea eax [ebx-1F20h] +
cmp eax 1 +
jbe loc_42D0B4  +
mov eax [ebp+var_7C] +
mov [ebp+var_88] eax +
lea esi [esi+0] +
cmp ebx 10h +
jz loc_42C6CD  +
ja loc_42CA80  +
cmp ebx 8 +
jz loc_42D23E  +
nop   +
lea esi [esi+0] +
ja loc_42CD80  +
cmp ebx 4 +
jz loc_42D3F3  +
nop   +
ja loc_42D273  +
cmp ebx 1 +
jz loc_42C8A4  +
cmp ebx 3 +
jnz loc_42D429  +
mov eax [ebp+var_88] +
add eax 2 +
cmp [ebp+arg_0] eax +
mov [ebp+var_A8] eax +
jbe loc_42CF90  +
mov eax ds:dword_472C94 +
mov [esp+0E8h+var_E4] 2 +
mov edi [ebp+var_88] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov edi [ebp+var_A8] +
lea esi [edi+eax] +
cmp [ebp+arg_0] esi +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
jb loc_42CA06  +
cmp [ebp+var_A8] esi +
mov ecx edx +
jbe loc_42CA2C  +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] offset aCorruptAttri_0 +
call sub_437070  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_A8] +
mov edi eax +
sar edi 1Fh +
mov [ebp+var_68] eax +
mov ecx edi +
mov [ebp+var_64] edi +
mov edx [ebp+arg_24] +
test edx edx +
jz loc_42D170  +
add eax [ebp+var_A8] +
mov [ebp+var_88] eax +
jmp loc_42C6E2  +
mov eax [ebp+arg_0] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6C] +
mov [esp+0E8h+var_E4] eax +
mov edi [ebp+var_7C] +
mov [esp+0E8h+var_E8] edi +
call sub_427E10  +
add edi [ebp+var_6C] +
mov [ebp+var_88] edi +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
jmp loc_42C970  +
cmp ebx 18h +
jz loc_42D396  +
jbe loc_42CD44  +
cmp ebx 1F01h +
jz loc_42C47D  +
nop   +
lea esi [esi+0] +
jbe loc_42D736  +
cmp ebx 1F20h +
jz loc_42D34C  +
cmp ebx 1F21h +
jnz loc_42D41D  +
mov ecx [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test ecx ecx +
jnz loc_42C6E2  +
mov edx [ebp+var_68] +
mov eax offset asc_463786 +
mov ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aAltIndirectStr +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] eax +
jmp loc_42C551  +
mov eax [ebp+var_80] +
cmp eax 4Ah +
jz loc_42CB42  +
ja loc_42D103  +
cmp eax 42h +
jz loc_42D5A0  +
nop   +
ja loc_42DD12  +
cmp eax 3Eh +
jz loc_42D688  +
cmp eax 40h +
jnz loc_42C740  +
mov ds:dword_472840 1 +
cmp [ebp+arg_1C] 3 +
jg loc_42CB54  +
lea eax [ebx-6] +
cmp eax 1 +
jbe loc_42D75B  +
cmp ebx 17h +
jz loc_42D75B  +
mov edi [ebp+var_A8] +
mov esi [ebp+var_88] +
test edi edi +
jz loc_42C668  +
mov [esp+0E8h+var_E8] offset asc_46597F +
call printf  +
mov ebx [ebp+arg_28] +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
mov [esp+0E8h+var_D4] ebx +
mov ecx [ebp+var_A0] +
mov ebx [ebp+var_9C] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_D8] ebx +
mov eax [ebp+arg_1C] +
mov [esp+0E8h+var_E8] eax +
mov ecx [ebp+var_94] +
mov eax edi +
mov edx [ebp+var_90] +
call sub_4283C0  +
mov [esp+0E8h+var_E8] 29h +
mov ebx eax +
call putchar  +
test ebx ebx +
jz loc_42C668  +
mov eax ds:dword_472840 +
test eax eax +
jnz loc_42C668  +
mov [esp+0E8h+var_E8] offset aWithoutDw_at_f +
call printf  +
jmp loc_42C668  +
cmp [ebp+var_80] 2Ah +
jz loc_42CB42  +
lea esi [esi+0] +
jbe loc_42D190  +
mov eax [ebp+var_80] +
cmp eax 32h +
jz loc_42D552  +
cmp eax 36h +
jnz loc_42DB00  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
mov ecx eax +
xor ecx 2 +
or ecx edx +
jz loc_42E039  +
mov ecx eax +
xor ecx 3 +
or ecx edx +
jz loc_42DEB2  +
mov ecx eax +
xor ecx 1 +
or ecx edx +
jz loc_42DE9B  +
add eax 0FFFFFFC0h +
adc edx 0FFFFFFFFh +
cmp edx 0 +
ja loc_42E355  +
cmp eax 0BFh +
ja loc_42E355  +
mov [esp+0E8h+var_E8] offset aUserDefined_0 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
cmp [ebp+var_80] 2Ah +
jz loc_42CCD4  +
ja loc_42CCC0  +
cmp [ebp+var_80] 11h +
jnz loc_42D89A  +
mov ecx ds:dword_47283C +
test ecx ecx +
jz loc_42C740  +
mov edi [ebp+arg_20] +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
mov [edi+18h] eax +
mov [edi+1Ch] edx +
jmp loc_42C740  +
cmp [ebp+var_80] 40h +
jnz loc_42D880  +
mov ds:dword_472840 1 +
cmp [ebp+arg_1C] 3 +
jg loc_42CCE2  +
lea eax [ebx-6] +
cmp eax 1 +
jbe loc_42CCEB  +
cmp ebx 17h +
jnz loc_42C570  +
mov eax [ebp+arg_20] +
mov edi [eax+3Ch] +
mov esi [eax+38h] +
cmp esi edi +
jnb loc_42DDFB  +
test edi edi +
jz loc_42DDFB  +
mov ecx [eax+34h] +
mov edi [ebp+arg_2C] +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
test edi edi +
jz loc_42CD23  +
mov edi [ebp+arg_2C] +
add eax [edi+30h] +
adc edx [edi+34h] +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov edi [ebp+arg_20] +
mov edi [edi+30h] +
mov [edi+esi*8] eax +
mov eax ds:dword_472840 +
mov [edi+esi*8+4] edx +
mov [ecx+esi*4] eax +
mov eax [ebp+arg_20] +
add dword ptr [eax+38h] 1 +
jmp loc_42C570  +
cmp ebx 14h +
jz loc_42D282  +
jb loc_42D1E8  +
cmp ebx 16h +
jnz loc_42D1E2  +
lea esi [esi+0] +
mov eax [ebp+arg_24] +
test eax eax +
jnz loc_42D76C  +
mov [ebp+var_A8] 0 +
jmp loc_42C551  +
cmp ebx 0Dh +
ja loc_42D6D2  +
cmp ebx 0Bh +
jnb loc_42C907  +
cmp ebx 9 +
jz loc_42D396  +
cmp ebx 0Ah +
nop   +
jnz loc_42D429  +
mov eax [ebp+var_88] +
add eax 1 +
cmp [ebp+arg_0] eax +
mov [ebp+var_A8] eax +
jbe loc_42CF90  +
mov eax ds:dword_472C94 +
mov [esp+0E8h+var_E4] 1 +
jmp loc_42C9DD  +
cmp eax 2111h +
jnb loc_42CCD4  +
cmp eax 4Dh +
jz loc_42CCD4  +
cmp eax 55h +
jnz loc_42DB1D  +
cmp [ebp+arg_1C] 3 +
jg loc_42CDFB  +
lea eax [ebx-6] +
cmp eax 1 +
jbe loc_42CE04  +
cmp ebx 17h +
jnz loc_42C740  +
mov eax [ebp+arg_20] +
mov edi [ebp+arg_20] +
mov eax [eax+48h] +
mov ebx [edi+44h] +
cmp ebx eax +
jnb loc_42E2FC  +
test eax eax +
jz loc_42E2FC  +
mov esi [edi+40h] +
mov ecx ebx +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
mov edi [ebp+arg_20] +
mov [esi+ebx*8] eax +
lea eax [ecx+1] +
mov [esi+ebx*8+4] edx +
mov [edi+44h] eax +
jmp loc_42C740  +
mov eax [ebp+arg_0] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6C] +
mov [esp+0E8h+var_E4] eax +
mov edi [ebp+var_7C] +
mov [esp+0E8h+var_E8] edi +
call sub_427E10  +
add edi [ebp+var_6C] +
mov [ebp+var_88] edi +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov eax [ebp+arg_24] +
test eax eax +
jnz loc_42D76C  +
mov [esp+0E8h+var_E4] 2Eh +
mov eax [ebp+arg_28] +
mov eax [eax+8] +
mov [esp+0E8h+var_E8] eax +
call strrchr  +
test eax eax +
jz loc_42DC2B  +
mov edi offset a_dwo +
mov ecx 5 +
mov esi eax +
cmps   +
jnz loc_42DC2B  +
mov edx [ebp+var_68] +
mov edi [ebp+var_94] +
mov eax [ebp+var_64] +
mov ecx [ebp+var_A8] +
mov [ebp+var_B0] edx +
mov [ebp+var_B8] eax +
imul eax edi +
imul ecx edx +
lea esi [ecx+eax] +
mov eax edi +
mov edi dword_441F0C +
mul  [ebp+var_B0] +
mov ecx edx +
mov edx eax +
add ecx esi +
test edi edi +
jz loc_42E45C  +
mov [ebp+var_98] 1 +
mov esi offset off_441E80 +
mov [ebp+var_A8] offset off_441F00 +
mov eax [ebp+arg_2C] +
test eax eax +
jz loc_42CF19  +
mov eax [ebp+arg_2C] +
add edx [eax+38h] +
adc ecx [eax+3Ch] +
mov eax [ebp+var_A8] +
cmp [eax+1Ch] ecx +
ja loc_42DB88  +
jnb loc_42DB7F  +
mov [esp+0E8h+var_E8] 0 +
mov eax offset asc_463786 +
mov esi offset aIndexOffsetIsT +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aDw_form_gnu_st +
mov [esp+0E8h+var_E4] eax +
call sub_437070  +
mov edx [ebp+var_68] +
mov ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E8] offset aIndexedString0 +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov [ebp+var_A8] 0 +
jmp loc_42C551  +
mov eax [ebp+var_88] +
cmp eax [ebp+arg_0] +
jnb loc_42CFB0  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_88] +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42E67D  +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [esp+0E8h+var_E8] offset aBlockEndsPrema +
call sub_437070  +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [ebp+var_A8] eax +
xor eax eax +
jmp loc_42CA2C  +
mov eax [ebp+var_7C] +
add eax 2 +
cmp [ebp+arg_0] eax +
mov [ebp+var_88] eax +
jbe loc_42D023  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
jmp loc_42C970  +
mov eax [ebp+var_7C] +
cmp eax [ebp+arg_0] +
jnb loc_42C970  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_7C] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42C970  +
jmp loc_42D006  +
mov eax [ebp+var_7C] +
add eax 4 +
cmp [ebp+arg_0] eax +
mov [ebp+var_88] eax +
jbe loc_42D023  +
mov eax 4 +
jmp loc_42D006  +
mov eax [ebp+arg_0] +
mov [esp+0E8h+var_E0] 1 +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6C] +
mov [esp+0E8h+var_E4] eax +
mov edi [ebp+var_7C] +
mov [esp+0E8h+var_E8] edi +
call sub_427E10  +
add edi [ebp+var_6C] +
mov [ebp+var_88] edi +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
jmp loc_42C907  +
mov eax [ebp+var_7C] +
add eax 1 +
cmp [ebp+arg_0] eax +
mov [ebp+var_88] eax +
jbe loc_42D023  +
mov eax 1 +
jmp loc_42D006  +
mov ecx [ebp+var_94] +
mov edi esp +
mov esi [ebp+var_7C] +
mov eax ecx +
add esi ecx +
cmp [ebp+arg_0] esi +
ja loc_42D0D6  +
mov eax [ebp+var_7C] +
cmp eax [ebp+arg_0] +
jnb loc_42D0F6  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_7C] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42D0F6  +
mov edx ds:dword_472C94 +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov esp edi +
mov [ebp+var_88] esi +
jmp loc_42C970  +
mov eax [ebp+var_80] +
cmp eax 51h +
ja loc_42E077  +
cmp eax 4Eh +
jnb loc_42CB5D  +
cmp eax 4Ch +
jnz loc_42E069  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_68] +
mov eax [ebp+var_64] +
mov ecx edx +
xor ecx 1 +
or ecx eax +
jz loc_42E022  +
cmp eax 0 +
ja loc_42DDAE  +
cmp edx 1 +
jnb loc_42DDAE  +
mov [esp+0E8h+var_E8] offset aNone +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov edi [ebp+arg_0] +
mov edx eax +
mov [esp+0E8h+var_E8] edi +
mov eax [ebp+var_A8] +
call sub_427C00  +
mov [ebp+var_88] eax +
jmp loc_42C551  +
cmp [ebp+var_80] 20h +
jnz loc_42DB0E  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_68] +
mov ecx [ebp+var_64] +
mov eax edx +
xor eax 1 +
or eax ecx +
jz loc_42E125  +
cmp ecx 0 +
ja loc_42DD5B  +
cmp edx 1 +
jnb loc_42DD5B  +
mov [esp+0E8h+var_E8] offset aNotInlined +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
ja loc_42C8A4  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test eax eax +
jnz loc_42C6E2  +
mov edx [ebp+var_A0] +
mov ecx [ebp+var_9C] +
add edx [ebp+var_68] +
adc ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+0E8h+var_E8] offset a0xS +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] eax +
jmp loc_42C551  +
mov ecx [ebp+arg_24] +
mov esi [ebp+arg_0] +
test ecx ecx +
jz loc_42DC0A  +
sub esi [ebp+var_88] +
mov [esp+0E8h+var_E4] esi +
mov edi [ebp+var_88] +
mov [esp+0E8h+var_E8] edi +
call sub_4401F0  +
lea eax [edi+eax+1] +
mov [ebp+var_88] eax +
jmp loc_42CD60  +
cmp ebx 6 +
jz loc_42C8A4  +
jbe loc_42C907  +
mov eax [ebp+var_88] +
lea edi [eax+8] +
mov eax [ebp+arg_24] +
test eax eax +
jnz loc_42D4B4  +
cmp [ebp+arg_0] edi +
jnb loc_42E232  +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [ebp+var_B0] 0 +
mov [ebp+var_AC] 0 +
mov [ebp+var_A8] 0 +
mov [ebp+var_A4] 0 +
cmp ebx 14h +
jz loc_42E277  +
lea esi [ebp+var_58] +
mov [esp+0E8h+var_E0] esi +
mov eax [ebp+var_A8] +
mov edx [ebp+var_A4] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] edx +
mov edx [ebp+var_AC] +
mov eax [ebp+var_B0] +
call sub_427D80  +
mov [esp+0E8h+var_E8] offset a0xS_0 +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax ds:dword_472C50 +
test eax eax +
jnz loc_42D4B4  +
mov eax ds:dword_472C6C +
test eax eax +
jnz loc_42D4B4  +
mov [ebp+var_88] edi +
jmp loc_42CD6B  +
mov edx [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test edx edx +
jnz loc_42C6E2  +
mov edx [ebp+var_68] +
mov eax offset asc_463786 +
mov ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aAlt0xS +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] eax +
jmp loc_42C551  +
mov eax [ebp+arg_0] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_DC] eax +
lea eax [ebp+var_6C] +
mov [esp+0E8h+var_E4] eax +
mov edi [ebp+var_88] +
mov [esp+0E8h+var_E8] edi +
call sub_427E10  +
add edi [ebp+var_6C] +
cmp [ebp+arg_0] edi +
mov [ebp+var_A8] edi +
mov ecx edx +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
jbe loc_42CFBE  +
mov edi [ebp+var_A8] +
lea edx [edi+eax] +
cmp [ebp+arg_0] edx +
jb loc_42CA06  +
cmp edi edx +
jbe loc_42CA2C  +
jmp loc_42CA06  +
mov eax [ebp+var_88] +
add eax 4 +
cmp [ebp+arg_0] eax +
mov [ebp+var_A8] eax +
jbe loc_42CF90  +
mov eax ds:dword_472C94 +
mov [esp+0E8h+var_E4] 4 +
jmp loc_42C9DD  +
cmp ebx 1F02h +
jz loc_42CE70  +
mov [esp+0E8h+var_E4] ebx +
mov [esp+0E8h+var_E8] offset aUnrecognizedFo +
call sub_437070  +
jmp loc_42CD60  +
cmp eax 2 +
jz loc_42CB42  +
cmp eax 9 +
lea esi [esi+0] +
jnz loc_42C740  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_68] +
mov eax [ebp+var_64] +
mov ecx edx +
xor ecx 1 +
or ecx eax +
jz loc_42E00B  +
cmp eax 0 +
ja loc_42DD8C  +
cmp edx 1 +
jnb loc_42DD8C  +
mov [esp+0E8h+var_E8] offset aRowMajor +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov edi [ebp+arg_20] +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
mov [edi+28h] eax +
mov [edi+2Ch] edx +
jmp loc_42C740  +
mov esi ds:dword_472830 +
test esi esi +
jnz loc_42D8B5  +
cmp [ebp+arg_0] edi +
ja loc_42DDD0  +
mov eax [ebp+var_88] +
cmp eax [ebp+arg_0] +
jnb loc_42D4EB  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_88] +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42DDD5  +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [ebp+var_88] edi +
jmp loc_42CD60  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_68] +
mov eax [ebp+var_64] +
mov ecx edx +
xor ecx 2 +
or ecx eax +
jz loc_42DFF4  +
mov ecx edx +
xor ecx 3 +
or ecx eax +
jz loc_42DFDD  +
xor edx 1 +
or edx eax +
jz loc_42DFC6  +
mov [esp+0E8h+var_E8] offset aUnknownVisibil +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_68] +
mov eax [ebp+var_64] +
mov ecx edx +
xor ecx 2 +
or ecx eax +
jz loc_42DFAF  +
mov ecx edx +
xor ecx 3 +
or ecx eax +
jz loc_42DF98  +
xor edx 1 +
or edx eax +
jz loc_42DF81  +
mov [esp+0E8h+var_E8] offset aUnknownAccessi +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_68] +
mov eax [ebp+var_64] +
mov ecx edx +
xor ecx 1 +
or ecx eax +
jz loc_42E10E  +
cmp eax 0 +
ja loc_42DD2C  +
cmp edx 1 +
jnb loc_42DD2C  +
mov [esp+0E8h+var_E8] offset aCase_sensitive +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_68] +
mov ecx [ebp+var_64] +
mov eax edx +
xor eax 0Eh +
or eax ecx +
jz loc_42E623  +
cmp ecx 0 +
mov eax edx +
ja loc_42D811  +
cmp edx 0Eh +
ja loc_42D811  +
xor eax 7 +
or eax ecx +
jz loc_42E4A9  +
cmp ecx 0 +
mov eax edx +
ja loc_42E08D  +
cmp edx 7 +
ja loc_42E08D  +
xor eax 3 +
or eax ecx +
jz loc_42E599  +
cmp ecx 0 +
mov eax edx +
ja loc_42E3FF  +
cmp edx 3 +
ja loc_42E3FF  +
xor eax 1 +
or eax ecx +
jz loc_42E5C7  +
mov eax edx +
xor eax 2 +
or eax ecx +
jnz loc_42DCD0  +
mov [esp+0E8h+var_E8] offset aNonAnsiC +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] 9 +
call putchar  +
mov edx [ebp+var_64] +
mov eax [ebp+var_68] +
cmp edx 0 +
jbe loc_42D8C0  +
add eax 0FFFFFF80h +
adc edx 0FFFFFFFFh +
cmp edx 0 +
ja loc_42E666  +
cmp eax 7Fh +
ja loc_42E666  +
mov [esp+0E8h+var_E8] offset aUserDefinedTyp +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
cmp ebx 0Eh +
jnz loc_42E3D4  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] 0 +
test eax eax +
jnz loc_42C6E2  +
mov edx [ebp+var_64] +
mov eax [ebp+var_68] +
call sub_427CC0  +
mov edx [ebp+var_68] +
mov ecx [ebp+var_64] +
mov [esp+0E8h+var_E8] 0 +
mov esi eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E8] offset aIndirectString +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov eax [ebp+arg_24] +
mov [ebp+var_A8] eax +
jmp loc_42C551  +
cmp ebx 19h +
jz loc_42C907  +
cmp ebx 20h +
jnz loc_42D429  +
mov edx [ebp+arg_24] +
test edx edx +
jz loc_42D77B  +
add [ebp+var_88] 8 +
jmp loc_42CD60  +
mov [esp+0E8h+var_E8] offset aLocationList +
call printf  +
jmp loc_42CB5D  +
mov [ebp+var_A8] 0 +
jmp loc_42C6E2  +
mov eax [ebp+var_88] +
lea edi [eax+8] +
cmp [ebp+arg_0] edi +
jnb loc_42E1ED  +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [ebp+var_88] 0 +
mov [ebp+var_84] 0 +
mov [ebp+var_A8] 0 +
mov [ebp+var_A4] 0 +
lea esi [ebp+var_58] +
mov [esp+0E8h+var_E0] esi +
mov eax [ebp+var_A8] +
mov edx [ebp+var_A4] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] edx +
mov eax [ebp+var_88] +
mov edx [ebp+var_84] +
call sub_427D80  +
mov [esp+0E8h+var_E8] offset aSignature0xS +
mov [esp+0E8h+var_E4] eax +
call printf  +
jmp loc_42D341  +
xor eax 16h +
or eax ecx +
jz loc_42E53D  +
cmp ecx 0 +
mov eax edx +
ja loc_42DC8C  +
cmp edx 16h +
ja loc_42DC8C  +
xor eax 11h +
or eax ecx +
jz loc_42E5F5  +
cmp ecx 0 +
mov eax edx +
ja loc_42E397  +
cmp edx 11h +
ja loc_42E397  +
xor eax 0Fh +
or eax ecx +
jz loc_42E492  +
mov eax edx +
xor eax 10h +
or eax ecx +
jnz loc_42DCD0  +
mov [esp+0E8h+var_E8] offset aObjectiveC +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov eax [ebp+var_80] +
cmp eax 46h +
jz loc_42CCD4  +
cmp eax 38h +
jnz loc_42C570  +
jmp loc_42CCD4  +
mov eax [ebp+var_80] +
cmp eax 19h +
jz loc_42CCD4  +
cmp eax 2 +
jnz loc_42C570  +
nop   +
jmp loc_42CCD4  +
mov [ebp+var_88] edi +
jmp loc_42CD60  +
cmp eax 86h +
ja loc_42D6A3  +
lea ecx ds:0[eax*4] +
jmp ds:off_465A14[ecx]  +
mov [esp+0E8h+var_E8] offset aHp_imaginary_f +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aHp_imaginary_0 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aHp_floathpinte +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aHp_complex_flo +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aHp_float128 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aHp_complex_f_0 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aHp_float80 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnicodeString +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aDecimalFloat +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnsigned_fixed +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aSigned_fixed +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aEdited +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aNumeric_string +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aPacked_decimal +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aImaginaryFloat +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnsignedChar +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnsigned +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aSignedChar +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aSigned +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aFloat +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aComplexFloat +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aBoolean +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aMachineAddress +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aVoid +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
cmp eax 2Fh +
jnz loc_42C740  +
jmp loc_42CB5D  +
cmp [ebp+var_80] 22h +
jz loc_42CB5D  +
jmp loc_42C740  +
cmp eax 4Ah +
jnz loc_42C570  +
jmp loc_42CCD4  +
mov edx [ebp+var_94] +
mov edi esp +
mov esi [ebp+var_7C] +
mov eax edx +
add esi edx +
cmp [ebp+arg_0] esi +
ja loc_42DB52  +
mov eax [ebp+var_7C] +
cmp eax [ebp+arg_0] +
jnb loc_42DB72  +
mov eax [ebp+arg_0] +
sub eax [ebp+var_7C] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42DB72  +
mov edx ds:dword_472C94 +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov esp edi +
mov [ebp+var_88] esi +
jmp loc_42C6CD  +
cmp [eax+18h] edx +
jb loc_42CF2E  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_42E32F  +
mov eax ds:dword_472C94 +
add edx edi +
mov [ebp+var_A8] eax +
mov eax [ebp+var_94] +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_A8] +
call eax  +
sub eax [esi+10h] +
sbb edx [esi+14h] +
cmp edx [esi+1Ch] +
jb loc_42E059  +
jbe loc_42E050  +
mov ecx edx +
mov edx eax +
mov [esp+0E8h+var_E8] 0 +
mov eax offset asc_463786 +
mov esi offset aIndirectIndexO +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aDw_form_gnu__0 +
mov [esp+0E8h+var_E4] eax +
call sub_437070  +
mov edx [ebp+var_68] +
mov ecx [ebp+var_64] +
jmp loc_42CF5A  +
mov edx [ebp+var_68] +
mov ecx [ebp+var_64] +
jmp loc_42D20F  +
mov eax [ebp+var_88] +
mov [esp+0E8h+var_E8] offset a_S_1 +
sub esi eax +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] esi +
call printf  +
jmp loc_42D252  +
mov edx [ebp+var_68] +
mov edi [ebp+var_94] +
mov eax [ebp+var_64] +
mov ecx [ebp+var_A8] +
mov [ebp+var_B0] edx +
mov [ebp+var_B8] eax +
imul eax edi +
imul ecx edx +
lea esi [ecx+eax] +
mov eax edi +
mov edi dword_441ECC +
mul  [ebp+var_B0] +
mov ecx edx +
mov edx eax +
add ecx esi +
test edi edi +
jz loc_42E446  +
mov [ebp+var_98] 0 +
mov esi offset off_441980 +
mov [ebp+var_A8] offset off_441EC0 +
jmp loc_42CF09  +
xor eax 22h +
or eax ecx +
jz loc_42E5B0  +
cmp ecx 0 +
mov eax edx +
ja loc_42E1AD  +
cmp edx 22h +
ja loc_42E1AD  +
xor eax 1Dh +
or eax ecx +
jz loc_42E4C0  +
mov eax edx +
xor eax 21h +
or eax ecx +
jz loc_42E4EE  +
mov eax edx +
xor eax 1Ah +
or eax ecx +
jz loc_42E4D7  +
mov esi edx +
mov edi ecx +
add esi 0FFFF8000h +
mov eax offset asc_463786 +
adc edi 0FFFFFFFFh +
cmp edi 0 +
mov [esp+0E8h+var_E8] 0 +
jbe loc_42E63A  +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aUnknownS +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov eax [ebp+var_80] +
cmp eax 46h +
jz loc_42CB42  +
cmp eax 48h +
jnz loc_42C740  +
jmp loc_42CB42  +
mov ecx edx +
xor ecx 2 +
or ecx eax +
jz loc_42E196  +
xor edx 3 +
or edx eax +
jnz loc_42E17F  +
mov [esp+0E8h+var_E8] offset aCase_insensiti +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov eax edx +
xor eax 2 +
or eax ecx +
jz loc_42E168  +
mov eax edx +
xor eax 3 +
or eax ecx +
jnz loc_42E13C  +
mov [esp+0E8h+var_E8] offset aDeclaredAsInli +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
and eax edx +
cmp eax 0FFFFFFFFh +
jnz loc_42C740  +
mov [esp+0E8h+var_E8] offset aUndefined +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
xor edx 2 +
or edx eax +
jnz loc_42DF4B  +
mov [esp+0E8h+var_E8] offset aPure_virtual +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov eax 8 +
mov edx ds:dword_472C94 +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov [ebp+var_88] edi +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
jmp loc_42CD60  +
mov eax [ebp+arg_20] +
add edi 400h +
mov eax [eax+30h] +
mov [esp+0E8h+var_E0] 8 +
mov [esp+0E8h+var_E4] edi +
mov [esp+0E8h+var_E8] eax +
call sub_42C340  +
mov edx [ebp+arg_20] +
mov [edx+30h] eax +
mov eax [edx+34h] +
mov [esp+0E8h+var_E0] 4 +
mov [esp+0E8h+var_E4] edi +
mov [esp+0E8h+var_E8] eax +
call sub_42C340  +
mov edx [ebp+arg_20] +
mov [edx+3Ch] edi +
mov [edx+34h] eax +
mov ecx eax +
jmp loc_42CD07  +
mov eax [ebp+var_90] +
mov esi esp +
mov edi [ebp+var_7C] +
lea edx [edi+eax] +
cmp [ebp+arg_0] edx +
ja loc_42DE65  +
cmp edi [ebp+arg_0] +
jnb loc_42DE85  +
mov eax [ebp+arg_0] +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42DE85  +
mov edx ds:dword_472C94 +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_7C] +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov eax [ebp+var_7C] +
mov esp esi +
add eax [ebp+var_90] +
mov [ebp+var_88] eax +
jmp loc_42C6CD  +
mov [esp+0E8h+var_E8] offset aNormal +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aNocall +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov edi [ebp+arg_0] +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] 0 +
mov [esp+0E8h+var_DC] edi +
mov edi [ebp+arg_28] +
add eax [edi+0Ch] +
mov [esp+0E8h+var_E8] eax +
call sub_427E10  +
mov [esp+0E8h+var_E8] offset aAbbrevNumberLd +
mov [esp+0E8h+var_E4] eax +
mov esi eax +
call printf  +
cmp ebx 10h +
jz loc_42DF34  +
mov edx ds:dword_4727C8 +
test edx edx +
jnz loc_42DF18  +
jmp loc_42DF34  +
mov edx [edx+14h] +
test edx edx +
jz loc_42DF34  +
cmp [edx] esi +
jnz loc_42DF11  +
mov eax [edx+4] +
call sub_4279F0  +
mov [esp+0E8h+var_E8] offset aS_7 +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov [esp+0E8h+var_E8] 5Dh +
call putchar  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnknownVirtual +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov eax [ebp+var_A0] +
mov edx [ebp+var_9C] +
add eax [ebp+var_68] +
adc edx [ebp+var_64] +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
mov ecx edx +
jmp loc_42C5FB  +
mov [esp+0E8h+var_E8] offset aPublic +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aPrivate +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aProtected +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aLocal +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aQualified +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aExported +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aColumnMajor +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aVirtual +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aProgram +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
cmp eax [esi+18h] +
ja loc_42DBCA  +
add eax [esi+0Ch] +
mov edx [ebp+var_68] +
mov ecx [ebp+var_64] +
mov esi eax +
jmp loc_42CF5A  +
cmp eax 4Dh +
jnz loc_42C740  +
jmp loc_42CB42  +
mov eax [ebp+var_80] +
sub eax 2111h +
cmp eax 3 +
ja loc_42C740  +
jmp loc_42CB42  +
xor eax 0Ah +
or eax ecx +
jz loc_42E5DE  +
cmp ecx 0 +
mov eax edx +
ja loc_42E36C  +
cmp edx 0Ah +
ja loc_42E36C  +
xor eax 8 +
or eax ecx +
jz loc_42E582  +
mov eax edx +
xor eax 9 +
or eax ecx +
jnz loc_42DCD0  +
mov [esp+0E8h+var_E8] offset aAnsiPascal +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov edi [ebp+var_90] +
add edx eax +
mov ecx ds:dword_472C94 +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_E4] edi +
call ecx  +
mov [esp+0E8h+var_E8] 0 +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov esi eax +
jmp loc_42C51C  +
mov [esp+0E8h+var_E8] offset aUp_case +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aInlined +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aUnknownInlineA +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aDeclaredAsIn_0 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnknownCase +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aDown_case +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
xor eax 8001h +
or eax ecx +
jz loc_42E526  +
mov eax edx +
xor eax 8765h +
or eax ecx +
jz loc_42E42F  +
mov eax edx +
xor eax 23h +
or eax ecx +
jnz loc_42DCD0  +
mov [esp+0E8h+var_E8] offset aFortran08 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
lea eax [ebp+var_68] +
mov [esp+0E8h+var_E0] eax +
lea eax [ebp+var_60] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
mov [esp+0E8h+var_E8] eax +
call sub_437460  +
mov eax [ebp+var_68] +
mov edx [ebp+var_64] +
mov [ebp+var_A8] eax +
mov eax [ebp+var_60] +
mov [ebp+var_A4] edx +
mov edx [ebp+var_5C] +
mov [ebp+var_88] eax +
mov [ebp+var_84] edx +
jmp loc_42D7D1  +
lea eax [ebp+var_68] +
mov [esp+0E8h+var_E0] eax +
lea eax [ebp+var_60] +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
mov [esp+0E8h+var_E8] eax +
call sub_437460  +
mov eax [ebp+var_60] +
mov edx [ebp+var_5C] +
mov [ebp+var_B0] eax +
mov eax [ebp+var_68] +
mov [ebp+var_AC] edx +
mov edx [ebp+var_64] +
mov [ebp+var_A8] eax +
mov [ebp+var_A4] edx +
jmp loc_42D2E3  +
mov eax [ebp+var_A8] +
mov edx [ebp+var_A4] +
add eax [ebp+var_A0] +
adc edx [ebp+var_9C] +
cmp [ebp+var_A4] edx +
mov [ebp+var_B8] eax +
mov [ebp+var_B4] edx +
jb loc_42E3E2  +
ja loc_42E2BB  +
mov eax [ebp+var_B8] +
cmp [ebp+var_A8] eax +
jbe loc_42E3E2  +
mov eax [ebp+var_B0] +
mov edx [ebp+var_AC] +
add eax 1 +
adc edx 0 +
mov [ebp+var_60] eax +
mov [ebp+var_5C] edx +
mov [ebp+var_B0] eax +
mov eax [ebp+var_B8] +
mov [ebp+var_AC] edx +
mov edx [ebp+var_B4] +
mov [ebp+var_A8] eax +
mov [ebp+var_A4] edx +
jmp loc_42D2EC  +
lea edi [eax+400h] +
mov eax [ebp+arg_20] +
mov eax [eax+40h] +
mov [esp+0E8h+var_E0] 8 +
mov [esp+0E8h+var_E4] edi +
mov [esp+0E8h+var_E8] eax +
call sub_42C340  +
mov esi [ebp+arg_20] +
mov [esi+48h] edi +
mov ecx [esi+44h] +
mov [esi+40h] eax +
mov esi eax +
jmp loc_42CE25  +
mov edi [ebp+var_98] +
mov esi offset aNo_debug_str_d +
mov eax offset aNo_debug_strSe +
mov edx [ebp+var_B0] +
mov ecx [ebp+var_B8] +
test edi edi +
cmovz esi eax +
jmp loc_42CF5A  +
mov [esp+0E8h+var_E8] offset aUnknownConvent +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
xor eax 0Ch +
or eax ecx +
jz loc_42E50F  +
cmp ecx 0 +
jbe loc_42E472  +
mov [esp+0E8h+var_E8] offset aAda95 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
xor eax 13h +
or eax ecx +
jz loc_42E60C  +
cmp ecx 0 +
ja loc_42E3B0  +
cmp edx 13h +
jb loc_42E42F  +
mov eax edx +
xor eax 14h +
or eax ecx +
jnz loc_42DCD0  +
mov [esp+0E8h+var_E8] offset aPython +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
cmp ebx 0Fh +
jnz loc_42D429  +
jmp loc_42C907  +
mov eax [ebp+var_B8] +
mov edx [ebp+var_B4] +
mov [ebp+var_A8] eax +
mov [ebp+var_A4] edx +
jmp loc_42D2EC  +
xor eax 5 +
or eax ecx +
jz loc_42E554  +
cmp ecx 0 +
ja loc_42E418  +
cmp edx 5 +
jbe loc_42E56B  +
mov [esp+0E8h+var_E8] offset aCobol85 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnifiedParalle +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov edx [ebp+var_B0] +
mov esi offset aNo_debug_str_o +
mov ecx [ebp+var_B8] +
jmp loc_42CF5A  +
mov edx [ebp+var_B0] +
mov esi offset aNo_debug_str_0 +
mov ecx [ebp+var_B8] +
jmp loc_42CF5A  +
cmp edx 0Ch +
ja loc_42E380  +
mov [esp+0E8h+var_E8] offset aJava +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aPli +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aFortran77 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aC11 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aC11_0 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aC14 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov esi offset aNo_debug_addrS +
jmp loc_42C51C  +
mov [esp+0E8h+var_E8] offset aAnsiC99 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aMipsAssembler +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aGo +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aCobol74 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aC +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aFortran90 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aAda +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aFortran03 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aAnsiC +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aModula2 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aObjectiveC_0 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aD_2 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aFortran95 +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
cmp esi 7FFFh +
ja loc_42DCF2  +
call sub_426840  +
mov [esp+0E8h+var_E8] offset aImplementation +
mov [esp+0E8h+var_E4] eax +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov [esp+0E8h+var_E8] offset aUnknownType +
call printf  +
mov esi [ebp+var_88] +
jmp loc_42C668  +
mov edx ds:dword_472C94 +
mov [esp+0E8h+var_E4] eax +
mov eax [ebp+var_88] +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov [ebp+var_68] eax +
mov [ebp+var_64] edx +
jmp loc_42CFBE  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 10Ch +
mov ebx [eax+0Ch] +
mov [ebp+var_90] eax +
mov [ebp+var_70] ecx +
mov [ebp+var_AC] ebx +
add ebx [eax+18h] +
mov eax [ebp+arg_0] +
mov [ebp+var_7C] ebx +
test eax eax +
jnz loc_42E6DA  +
mov eax ds:dword_472C50 +
test eax eax +
jz loc_42F234  +
mov eax ds:dword_472830 +
test eax eax +
jnz loc_42E774  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_42E774  +
mov eax [ebp+var_AC] +
mov ebx [ebp+var_7C] +
mov [ebp+var_DC] 0 +
mov esi eax +
cmp eax ebx +
jnb loc_42FA86  +
mov [ebp+var_78] edi +
mov edi [ebp+var_7C] +
lea ebx [esi+4] +
cmp edi ebx +
ja loc_42F690  +
cmp esi edi +
jnb loc_42E734  +
mov eax edi +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42F695  +
xor eax eax +
xor edx edx +
mov ecx [ebp+var_90] +
mov ebx [ecx+8] +
mov ecx edx +
mov edx eax +
mov [esp+118h+var_118] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+118h+var_118] offset aCorruptUnitLen +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_114] eax +
call sub_437070  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_DC] 0 +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_42F24B  +
mov [esp+118h+var_114] edi +
mov ebx [ebp+var_70] +
mov [esp+118h+var_118] ebx +
call sub_421180  +
mov eax ebx +
shl eax 6 +
lea edx off_441700[eax] +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_42FA4B  +
mov ecx [ebp+var_AC] +
cmp ecx [ebp+var_7C] +
mov [ebp+var_B0] 0 +
mov [ebp+var_B4] 0 +
mov [ebp+var_C4] ecx +
mov [ebp+var_E8] eax +
jnb loc_42EBD8  +
mov eax [ebp+var_AC] +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [ebp+var_60] 0 +
lea esi [eax+4] +
mov eax 4 +
cmp [ebp+var_7C] esi +
mov [ebp+var_5C] 0 +
jbe loc_42E942  +
mov edx ds:dword_472C94 +
mov [esp+118h+var_114] eax +
mov edi [ebp+var_AC] +
mov [esp+118h+var_118] edi +
call edx  +
mov [ebp+var_78] eax +
not eax  +
or eax edx +
mov [ebp+var_74] edx +
jnz loc_42F2F3  +
lea ebx [edi+0Ch] +
cmp [ebp+var_7C] ebx +
jbe loc_42F2AE  +
mov eax 8 +
mov edx ds:dword_472C94 +
mov [esp+118h+var_118] esi +
mov esi ebx +
mov [esp+118h+var_114] eax +
lea ebx [esi+2] +
call edx  +
cmp [ebp+var_7C] ebx +
mov [ebp+var_88] 0Ch +
mov [ebp+var_84] 0 +
mov [ebp+var_98] 0Ch +
mov [ebp+var_D0] 8 +
mov [ebp+var_78] eax +
mov [ebp+var_74] edx +
jbe loc_42F327  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+118h+var_114] eax +
mov [esp+118h+var_118] esi +
call edx  +
mov [ebp+var_D2] ax +
mov esi [ebp+var_AC] +
sub esi [ebp+var_C4] +
mov edi [ebp+arg_4] +
mov eax esi +
sar eax 1Fh +
test edi edi +
mov [ebp+var_70] esi +
mov [ebp+var_6C] eax +
jz loc_42E9A1  +
mov eax ds:dword_472808 +
mov ecx 2 +
mov edx ds:dword_472810 +
test edx edx +
jz loc_42E914  +
mov edi [ebp+var_6C] +
xor edi [eax+ecx*8+0Ch] +
xor esi [eax+ecx*8+8] +
or edi esi +
jnz loc_42E90C  +
jmp loc_42EEF0  +
mov edi [ebp+var_6C] +
mov esi [ebp+var_70] +
xor edi [eax+ecx*8+0Ch] +
xor esi [eax+ecx*8+8] +
or edi esi +
jz loc_42EEF0  +
add eax 68h +
sub edx 1 +
jnz loc_42E8F6  +
mov [ebp+var_8C] 0 +
mov eax [ebp+var_D0] +
mov edi esp +
lea ecx [ebx+eax] +
cmp [ebp+var_7C] ecx +
ja loc_42E9B6  +
cmp [ebp+var_7C] ebx +
jbe loc_42F0D0  +
mov eax [ebp+var_7C] +
sub eax ebx +
jmp loc_42E9BC  +
mov eax [ebp+var_AC] +
cmp [ebp+var_7C] eax +
ja loc_42F120  +
mov [ebp+var_88] 4 +
mov [ebp+var_84] 0 +
mov [ebp+var_98] 4 +
mov [ebp+var_D0] 4 +
lea ebx [esi+2] +
cmp ebx [ebp+var_7C] +
mov [ebp+var_78] 0 +
mov [ebp+var_74] 0 +
jb loc_42E891  +
xor eax eax +
mov [ebp+var_D2] ax +
jmp loc_42E8AC  +
mov eax ds:dword_47280C +
mov ecx 1 +
mov edx ds:dword_472814 +
jmp loc_42E8DE  +
mov eax [ebp+var_D0] +
lea edx [eax-1] +
cmp edx 7 +
mov [ebp+var_B8] 0 +
mov [ebp+var_80] 0 +
ja loc_42E9F9  +
mov edx ds:dword_472C94 +
mov [ebp+var_A0] ecx +
mov [esp+118h+var_114] eax +
mov [esp+118h+var_118] ebx +
call edx  +
mov ecx [ebp+var_A0] +
mov [ebp+var_B8] eax +
mov [ebp+var_80] edx +
mov ebx [ebp+var_8C] +
mov esp edi +
test ebx ebx +
jz loc_42F0F1  +
mov ebx [ebp+var_8C] +
mov eax [ebx+20h] +
mov edx [ebx+24h] +
mov [ebp+var_C0] eax +
mov eax [ebx+54h] +
mov [ebp+var_BC] edx +
mov [ebp+var_A8] eax +
lea esi [ecx+1] +
cmp [ebp+var_7C] esi +
ja loc_42EEB4  +
cmp [ebp+var_7C] ecx +
ja loc_42F0B5  +
xor eax eax +
mov ebx [ebp+var_D0] +
mov [ebp+var_A0] ecx +
mov [esp+118h+var_114] eax +
mov [esp+118h+var_118] offset aInvalidPointer +
mov [esp+118h+var_110] ebx +
call sub_437070  +
mov ecx [ebp+var_A0] +
mov byte ptr [ebp+var_CC] bl +
mov edx [ebp+arg_4] +
mov [ebp+var_A0] 0 +
mov [ebp+var_9C] 0 +
test edx edx +
jz loc_42EB23  +
add ecx 9 +
cmp [ebp+var_7C] ecx +
jnb loc_42F8E5  +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov [ebp+var_60] 0 +
mov [ebp+var_5C] 0 +
mov eax [ebp+var_D0] +
mov ebx esp +
lea esi [ecx+eax] +
cmp [ebp+var_7C] esi +
ja loc_42EAE4  +
cmp [ebp+var_7C] ecx +
mov [ebp+var_A0] 0 +
mov [ebp+var_9C] 0 +
jbe loc_42EB21  +
mov eax [ebp+var_7C] +
sub eax ecx +
jmp loc_42EAEA  +
mov eax [ebp+var_D0] +
lea edx [eax-1] +
cmp edx 7 +
mov [ebp+var_A0] 0 +
mov [ebp+var_9C] 0 +
ja loc_42EB21  +
mov edx ds:dword_472C94 +
mov [esp+118h+var_114] eax +
mov [esp+118h+var_118] ecx +
call edx  +
mov [ebp+var_A0] eax +
mov [ebp+var_9C] edx +
mov esp ebx +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_42EB37  +
mov eax ds:dword_472C50 +
test eax eax +
jz loc_42ECA6  +
mov eax ds:dword_472830 +
test eax eax +
jnz loc_42EB4B  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_42F1A0  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_42ECB3  +
mov ecx [ebp+var_90] +
mov eax [ebp+var_88] +
mov edx [ebp+var_84] +
add eax [ebp+var_78] +
adc edx [ebp+var_74] +
add eax [ebp+var_70] +
adc edx [ebp+var_6C] +
cmp edx [ecx+1Ch] +
jb loc_42EC20  +
ja loc_42EB88  +
cmp eax [ecx+18h] +
jbe loc_42EC20  +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_78] +
mov eax offset asc_463786 +
mov ecx [ebp+var_74] +
call sub_426840  +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_70] +
mov ecx [ebp+var_6C] +
mov ebx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_118] offset aDebugInfoIsCor +
mov [esp+118h+var_114] eax +
call sub_437070  +
mov eax [ebp+var_B4] +
mov [ebp+var_DC] eax +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_42F96D  +
mov esi ds:dword_472C50 +
test esi esi +
jnz loc_42F96D  +
mov ebx ds:dword_472C6C +
test ebx ebx +
jnz loc_42F96D  +
mov [esp+118h+var_118] 0Ah +
call putchar  +
nop   +
lea esi [esi+0] +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+var_98] +
add eax [ebp+var_78] +
add [ebp+var_AC] eax +
mov eax [ebp+var_AC] +
cmp [ebp+var_7C] eax +
jb loc_42F080  +
movzx eax [ebp+var_D2] +
sub eax 2 +
cmp ax 2 +
jbe loc_42EF00  +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_70] +
mov eax offset asc_463786 +
mov ecx [ebp+var_6C] +
call sub_426840  +
movzx edx [ebp+var_D2] +
mov [esp+118h+var_118] offset aCuAtOffsetSCon +
mov [esp+118h+var_110] edx +
mov [esp+118h+var_114] eax +
call sub_437070  +
mov eax [ebp+var_7C] +
add [ebp+var_B4] 1 +
add [ebp+var_B0] 50h +
cmp [ebp+var_AC] eax +
jb loc_42E7DD  +
jmp loc_42EBD8  +
mov eax ds:dword_472C6C +
test eax eax +
jnz loc_42EB37  +
mov eax ds:dword_472C7C +
test eax eax +
jnz loc_42EB56  +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_70] +
mov eax offset asc_463786 +
mov ecx [ebp+var_6C] +
mov ebx offset a64Bit +
call sub_426840  +
mov [esp+118h+var_118] offset aCompilationUni +
mov [esp+118h+var_114] eax +
call printf  +
mov eax offset a32Bit +
cmp [ebp+var_D0] 8 +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_78] +
mov ecx [ebp+var_74] +
cmovnz ebx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_118] offset aLength0xSS +
mov [esp+118h+var_114] eax +
call printf  +
movzx eax [ebp+var_D2] +
mov [esp+118h+var_118] offset aVersionD +
mov [esp+118h+var_114] eax +
call printf  +
mov eax offset asc_463786 +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_B8] +
mov ecx [ebp+var_80] +
call sub_426840  +
mov [esp+118h+var_118] offset aAbbrevOffset0x +
mov [esp+118h+var_114] eax +
call printf  +
movzx eax byte ptr [ebp+var_CC] +
mov [esp+118h+var_118] offset aPointerSizeD +
mov [esp+118h+var_114] eax +
call printf  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_42F90C  +
mov edi [ebp+var_8C] +
test edi edi +
jz loc_42EB56  +
mov [esp+118h+var_118] offset aSectionContrib +
call puts  +
mov edx [edi+54h] +
xor ecx ecx +
mov [esp+118h+var_118] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov edx [edi+20h] +
mov ecx [edi+24h] +
mov [esp+118h+var_118] 0 +
mov ebx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_118] offset a_debug_abbrev_ +
mov [esp+118h+var_114] eax +
call printf  +
mov edx [edi+58h] +
xor ecx ecx +
mov [esp+118h+var_118] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov edx [edi+28h] +
mov ecx [edi+2Ch] +
mov [esp+118h+var_118] 0 +
mov ebx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_118] offset a_debug_line__0 +
mov [esp+118h+var_114] eax +
call printf  +
mov edx [edi+5Ch] +
xor ecx ecx +
mov [esp+118h+var_118] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov edx [edi+30h] +
mov ecx [edi+34h] +
mov [esp+118h+var_118] 0 +
mov ebx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_118] offset a_debug_loc_dwo +
mov [esp+118h+var_114] eax +
call printf  +
mov edx [edi+60h] +
xor ecx ecx +
mov [esp+118h+var_118] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov edx [edi+38h] +
mov ecx [edi+3Ch] +
mov [esp+118h+var_118] 0 +
mov ebx eax +
mov eax offset asc_463786 +
call sub_426840  +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_118] offset a_debug_str_off +
mov [esp+118h+var_114] eax +
call printf  +
jmp loc_42EB56  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+118h+var_118] ecx +
mov [esp+118h+var_114] eax +
mov [ebp+var_A0] ecx +
call edx  +
mov ecx [ebp+var_A0] +
lea edx [eax-2] +
cmp dl 6 +
mov byte ptr [ebp+var_CC] al +
jbe loc_42EA6D  +
movzx eax al +
jmp loc_42EA41  +
mov [ebp+var_8C] eax +
jmp loc_42E91E  +
call sub_426690  +
xor edx edx +
mov eax [ebp+var_A8] +
cmp [ebp+var_80] 0 +
jbe loc_42F140  +
mov eax [ebp+var_A8] +
mov [esp+118h+var_110] eax +
mov eax [ebp+var_B8] +
mov [esp+118h+var_118] offset aDebugInfoIsC_0 +
mov [esp+118h+var_114] eax +
call sub_437070  +
cmp [ebp+var_AC] esi +
jbe loc_42EC84  +
lea eax [ebp+var_58] +
mov edi esi +
mov [ebp+var_D8] eax +
movzx eax byte ptr [ebp+var_CC] +
mov [ebp+var_E0] 0FFFFFFFFh +
mov [ebp+var_E4] 0 +
mov [ebp+var_C8] 0 +
mov [ebp+var_A8] eax +
mov [ebp+var_A4] 0 +
mov eax [ebp+var_AC] +
mov esi edi +
sub esi [ebp+var_C4] +
mov [esp+118h+var_110] 0 +
mov [esp+118h+var_10C] eax +
mov eax [ebp+var_D8] +
mov [esp+118h+var_118] edi +
mov [esp+118h+var_114] eax +
call sub_427E10  +
mov ebx eax +
mov eax [ebp+var_58] +
add eax edi +
test ebx ebx +
mov edi eax +
jnz loc_42F350  +
mov edx [ebp+var_C8] +
test edx edx +
jnz loc_42F000  +
mov ecx [ebp+var_7C] +
cmp [ebp+var_AC] ecx +
jnz loc_42F000  +
mov edx [ebp+var_AC] +
cmp edx eax +
jbe loc_42F9A3  +
cmp byte ptr [eax] 0 +
jnz loc_42F9A3  +
lea esi [esi+0] +
add eax 1 +
cmp eax edx +
jz loc_42EC84  +
cmp byte ptr [eax] 0 +
jz loc_42EFF0  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_42F040  +
cmp esi ds:dword_472C7C +
jb loc_42F040  +
mov eax dword_442000 +
cmp eax 0FFFFFFFFh +
jz loc_42F021  +
cmp [ebp+var_C8] eax +
jge loc_42F040  +
mov [esp+118h+var_110] esi +
mov eax [ebp+var_C8] +
mov [esp+118h+var_118] offset aDLxAbbrevNumbe +
mov [esp+118h+var_114] eax +
call printf  +
nop   +
lea esi [esi+0] +
sub [ebp+var_C8] 1 +
js loc_42F720  +
mov eax ds:dword_472C7C +
test eax eax +
jz loc_42F068  +
mov eax [ebp+var_C8] +
cmp [ebp+var_E0] eax +
jg loc_42EC10  +
cmp [ebp+var_AC] edi +
ja loc_42EF83  +
jmp loc_42EC84  +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_70] +
mov eax offset asc_463786 +
mov ecx [ebp+var_6C] +
call sub_426840  +
mov [esp+118h+var_118] offset aDebugInfoIsC_1 +
mov [esp+118h+var_114] eax +
call sub_437070  +
mov eax [ebp+var_7C] +
mov [ebp+var_AC] eax +
jmp loc_42EC3E  +
mov eax [ebp+var_7C] +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42EA3F  +
jmp loc_42EEB9  +
mov [ebp+var_B8] 0 +
mov [ebp+var_80] 0 +
mov ebx [ebp+var_8C] +
mov esp edi +
test ebx ebx +
jnz loc_42EA09  +
mov eax [ebp+var_E8] +
mov [ebp+var_C0] 0 +
mov [ebp+var_BC] 0 +
mov eax dword_441718[eax] +
mov [ebp+var_A8] eax +
jmp loc_42EA2A  +
mov eax [ebp+var_7C] +
sub eax [ebp+var_AC] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42E951  +
jmp loc_42E810  +
cmp [ebp+var_B8] eax +
jnb loc_42EF17  +
mov ebx [ebp+var_E8] +
add eax [ebp+var_C0] +
adc edx [ebp+var_BC] +
lea ecx dword_441710[ebx] +
mov ebx dword_441718[ebx] +
cmp edx [ecx+0Ch] +
jb loc_42F889  +
jbe loc_42F881  +
mov [esp+118h+var_110] ebx +
mov edi [ebp+var_A8] +
add edi [ebp+var_C0] +
mov [esp+118h+var_118] offset aDebugInfoIsC_2 +
mov [esp+118h+var_114] edi +
call sub_437070  +
jmp loc_42EF37  +
mov ebx [ebp+var_6C] +
movzx edx byte ptr [ebp+var_CC] +
mov eax [ebp+var_B0] +
add eax ds:dword_472828 +
mov ecx [ebp+var_70] +
mov [eax+14h] ebx +
mov ebx [ebp+var_D0] +
mov [eax] edx +
movzx edx [ebp+var_D2] +
mov [eax+10h] ecx +
mov dword ptr [eax+18h] 0 +
mov [eax+4] ebx +
mov [eax+8] edx +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+20h] 0FFFFFFFFh +
mov dword ptr [eax+24h] 0 +
mov dword ptr [eax+28h] 0FFFFFFFFh +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+40h] 0 +
mov dword ptr [eax+48h] 0 +
mov dword ptr [eax+44h] 0 +
jmp loc_42EB4B  +
mov eax ds:dword_472C6C +
test eax eax +
jnz loc_42E6DA  +
mov [ebp+var_DC] 0 +
mov ebx ds:dword_472C7C +
test ebx ebx +
jz loc_42F9B5  +
mov [esp+118h+var_114] edi +
mov [esp+118h+var_118] 0Ah +
call sub_421180  +
mov [esp+118h+var_114] edi +
mov [esp+118h+var_118] 1Eh +
call sub_421180  +
mov [esp+118h+var_114] edi +
mov [esp+118h+var_118] 1Fh +
call sub_421180  +
mov [esp+118h+var_114] edi +
mov [esp+118h+var_118] 20h +
call sub_421180  +
mov [esp+118h+var_114] edi +
mov [esp+118h+var_118] 21h +
call sub_421180  +
jmp loc_42E789  +
cmp [ebp+var_7C] esi +
jbe loc_42F2C4  +
mov eax [ebp+var_7C] +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42E846  +
mov esi ebx +
mov [ebp+var_88] 0Ch +
mov [ebp+var_84] 0 +
mov [ebp+var_98] 0Ch +
mov [ebp+var_D0] 8 +
jmp loc_42E979  +
lea ebx [esi+2] +
cmp [ebp+var_7C] ebx +
mov [ebp+var_88] 4 +
mov [ebp+var_84] 0 +
mov [ebp+var_98] 4 +
mov [ebp+var_D0] 4 +
ja loc_42E891  +
xor eax eax +
cmp esi [ebp+var_7C] +
mov [ebp+var_D2] ax +
jnb loc_42E8AC  +
mov eax [ebp+var_7C] +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42E8AC  +
jmp loc_42E896  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_42F648  +
mov eax ds:dword_472C7C +
test eax eax +
jz loc_42F37B  +
cmp esi eax +
jb loc_42F3AD  +
mov eax [ebp+var_E0] +
cmovz eax [ebp+var_C8] +
mov [ebp+var_E0] eax +
mov eax dword_442000 +
cmp eax 0FFFFFFFFh +
jz loc_42F771  +
cmp [ebp+var_C8] eax +
jl loc_42F771  +
cmp [ebp+var_E4] eax +
jl loc_42F850  +
mov eax [ebp+var_C8] +
mov [ebp+var_E4] eax +
mov byte ptr [ebp+var_80] 0 +
xor edx edx +
mov eax ds:dword_4727C8 +
test eax eax +
mov [ebp+var_CC] eax +
jz loc_42F664  +
cmp [eax] ebx +
jz loc_42F3DF  +
mov eax [eax+14h] +
test eax eax +
jz loc_42F664  +
cmp [eax] ebx +
jnz loc_42F3CA  +
mov [ebp+var_CC] eax +
cmp byte ptr [ebp+var_80] 0 +
jnz loc_42F6F6  +
mov eax [ebp+var_CC] +
mov eax [eax+4] +
cmp eax 11h +
jz loc_42F6E7  +
cmp eax 2Eh +
mov ds:dword_47283C 0 +
jz loc_42F6D8  +
cmp eax 3 +
jz loc_42F6D8  +
mov eax [ebp+var_CC] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_42F632  +
mov eax [ebx] +
test eax eax +
jz loc_42F632  +
movzx eax [ebp+var_D2] +
xor edx 1 +
mov ecx edi +
mov [ebp+var_94] 0 +
mov [ebp+var_A0] eax +
mov eax [ebp+arg_0] +
test eax eax +
mov eax [ebp+var_D0] +
setnz byte ptr [ebp+var_88]  +
or byte ptr [ebp+var_88] dl +
mov [ebp+var_98] eax +
jmp loc_42F52F  +
mov eax ds:dword_472828 +
test eax eax +
jz loc_42F564  +
mov edi [ebp+var_B4] +
xor esi esi +
add eax [ebp+var_B0] +
cmp edi ds:dword_47282C +
cmovb esi eax +
mov eax [ebx] +
cmp byte ptr [ebp+var_88] 0 +
mov edx [ebx+4] +
mov [ebp+var_78] eax +
jz loc_42F570  +
mov eax [ebp+var_8C] +
mov [esp+118h+var_EC] eax +
mov eax [ebp+var_90] +
mov [esp+118h+var_F4] 1 +
mov [esp+118h+var_F8] esi +
mov [esp+118h+var_F0] eax +
mov eax [ebp+var_A0] +
mov [esp+118h+var_FC] eax +
mov esi [ebp+var_98] +
mov edi [ebp+var_94] +
mov [esp+118h+var_104] esi +
mov [esp+118h+var_100] edi +
mov esi [ebp+var_A8] +
mov edi [ebp+var_A4] +
mov [esp+118h+var_10C] esi +
mov [esp+118h+var_108] edi +
mov esi [ebp+var_70] +
mov edi [ebp+var_6C] +
mov [esp+118h+var_114] esi +
mov [esp+118h+var_110] edi +
mov eax [ebp+var_7C] +
mov [esp+118h+var_118] eax +
mov eax [ebp+var_78] +
call sub_42C3A0  +
mov ebx [ebx+8] +
test ebx ebx +
mov ecx eax +
jz loc_42F630  +
mov eax [ebx] +
test eax eax +
jz loc_42F630  +
cmp byte ptr [ebp+var_80] 0 +
jz loc_42F471  +
mov eax ecx +
sub eax [ebp+var_C4] +
mov [ebp+var_78] ecx +
mov [esp+118h+var_118] offset aLx_0 +
mov [esp+118h+var_114] eax +
call printf  +
mov eax ds:dword_472828 +
mov ecx [ebp+var_78] +
test eax eax +
jnz loc_42F47E  +
xor esi esi +
jmp loc_42F495  +
mov [ebp+var_C0] ecx +
mov edi eax +
mov [ebp+var_B8] edx +
call sub_427A40  +
mov [esp+118h+var_118] offset a18s +
mov [esp+118h+var_114] eax +
call printf  +
mov eax [ebp+var_8C] +
mov [esp+118h+var_EC] eax +
mov eax [ebp+var_90] +
mov [esp+118h+var_F4] 0 +
mov [esp+118h+var_F8] esi +
mov [esp+118h+var_F0] eax +
mov eax [ebp+var_A0] +
mov [esp+118h+var_FC] eax +
mov eax [ebp+var_98] +
mov edx [ebp+var_94] +
mov [esp+118h+var_104] eax +
mov [esp+118h+var_100] edx +
mov eax [ebp+var_A8] +
mov edx [ebp+var_A4] +
mov [esp+118h+var_10C] eax +
mov [esp+118h+var_108] edx +
mov eax [ebp+var_70] +
mov edx [ebp+var_6C] +
mov [esp+118h+var_114] eax +
mov [esp+118h+var_110] edx +
mov eax [ebp+var_7C] +
mov [esp+118h+var_118] eax +
mov ecx [ebp+var_C0] +
mov eax edi +
mov edx [ebp+var_B8] +
call sub_42C3A0  +
mov [ebp+var_78] eax +
mov [esp+118h+var_118] 0Ah +
call putchar  +
mov ebx [ebx+8] +
mov ecx [ebp+var_78] +
test ebx ebx +
jnz loc_42F525  +
lea esi [esi+0] +
mov edi ecx +
mov eax [ebp+var_CC] +
cmp dword ptr [eax+8] 1 +
sbb [ebp+var_C8] 0FFFFFFFFh +
jmp loc_42F068  +
mov eax ds:dword_4727C8 +
mov edx 1 +
mov byte ptr [ebp+var_80] 0 +
test eax eax +
mov [ebp+var_CC] eax +
jnz loc_42F3C6  +
cmp byte ptr [ebp+var_80] 0 +
mov edi ebx +
mov ebx esi +
jnz loc_42FA65  +
mov [esp+118h+var_110] edi +
mov [esp+118h+var_114] ebx +
mov [esp+118h+var_118] offset aDieAtOffset0xL +
call sub_437070  +
xor eax eax +
jmp loc_42E76C  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+118h+var_114] eax +
mov [esp+118h+var_118] esi +
call edx  +
mov ecx eax +
not ecx  +
or ecx edx +
jnz loc_42F7B0  +
lea eax [esi+0Ch] +
cmp edi eax +
ja loc_42F8C5  +
cmp edi ebx +
jbe loc_42E734  +
mov eax edi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42E734  +
jmp loc_42F8CA  +
mov ds:dword_472840 0 +
jmp loc_42F417  +
mov ds:dword_47283C 1 +
jmp loc_42F417  +
mov eax [ebp+var_CC] +
mov [ebp+var_78] edx +
mov eax [eax+4] +
call sub_4279F0  +
mov [esp+118h+var_118] offset aS_8 +
mov [esp+118h+var_114] eax +
call printf  +
mov edx [ebp+var_78] +
jmp loc_42F3E9  +
cmp ds:dword_4727A4 2 +
ja loc_42F04D  +
mov eax [ebp+var_90] +
mov eax [eax+8] +
mov [esp+118h+var_114] esi +
mov [esp+118h+var_118] offset aBogusEndOfSibl +
mov [esp+118h+var_110] eax +
call sub_437070  +
mov eax ds:dword_4727A4 +
add eax 1 +
cmp eax 3 +
mov ds:dword_4727A4 eax +
jnz loc_42F04D  +
mov [esp+118h+var_118] offset aFurtherWarning +
call sub_437070  +
jmp loc_42F04D  +
mov [esp+118h+var_10C] ebx +
mov [esp+118h+var_110] esi +
mov eax [ebp+var_C8] +
mov [esp+118h+var_118] offset aDLxAbbrevNum_0 +
mov [esp+118h+var_114] eax +
call printf  +
mov eax [ebp+var_C8] +
mov edx 1 +
mov byte ptr [ebp+var_80] 1 +
mov [ebp+var_E4] eax +
jmp loc_42F3B3  +
mov ecx eax +
mov ebx edx +
add ecx 10h +
adc ebx 0FFFFFFFFh +
cmp ebx 0 +
ja loc_42F7C8  +
cmp ecx 0Eh +
jbe loc_42F9D3  +
lea ebx [eax+4] +
mov ecx eax +
add esi ebx +
test ecx ecx +
jle loc_42E738  +
cmp esi [ebp+var_AC] +
jb loc_42E738  +
add [ebp+var_DC] 1 +
cmp esi edi +
jb loc_42E715  +
mov eax [ebp+var_DC] +
mov edi [ebp+var_78] +
test eax eax +
jz loc_42FA86  +
cmp eax 3333332h +
jbe loc_42FA0C  +
mov ds:dword_472828 0 +
mov eax [ebp+var_DC] +
mov [esp+118h+var_118] offset aNotEnoughMemor +
mov [esp+118h+var_114] eax +
call sub_436A70  +
xor eax eax +
mov ds:dword_472830 0 +
mov ds:dword_47282C 0 +
jmp loc_42E76C  +
mov [esp+118h+var_110] esi +
mov eax [ebp+var_C8] +
mov [esp+118h+var_118] offset aDLx___ +
mov [esp+118h+var_114] eax +
call printf  +
mov eax [ebp+var_C8] +
xor edx edx +
mov byte ptr [ebp+var_80] 0 +
mov [ebp+var_E4] eax +
jmp loc_42F3B3  +
cmp eax ebx +
ja loc_42F179  +
mov ecx ds:dword_4727C8 +
mov eax [ebp+var_E8] +
test ecx ecx +
mov eax dword_44170C[eax] +
jnz loc_42EF37  +
mov ecx [ebp+var_C0] +
mov edx [ebp+var_A8] +
add edx ecx +
add ecx [ebp+var_B8] +
add edx eax +
add eax ecx +
call sub_427F40  +
jmp loc_42EF37  +
mov eax 8 +
mov edx ds:dword_472C94 +
mov [esp+118h+var_118] ebx +
mov [esp+118h+var_114] eax +
call edx  +
lea ebx [eax+0Ch] +
mov ecx eax +
add esi ebx +
jmp loc_42F7CF  +
lea eax [ebp+var_60] +
mov [ebp+var_A0] ecx +
mov [esp+118h+var_110] eax +
lea eax [ebp+var_68] +
mov [esp+118h+var_114] eax +
mov [esp+118h+var_118] esi +
call sub_437460  +
mov ecx [ebp+var_A0] +
jmp loc_42EAB4  +
mov ecx [ebp+var_60] +
lea edi [ebp+var_58] +
mov ebx [ebp+var_5C] +
mov edx [ebp+var_64] +
mov eax [ebp+var_68] +
mov [esp+118h+var_118] ecx +
mov [esp+118h+var_110] edi +
mov [esp+118h+var_114] ebx +
call sub_427D80  +
mov [esp+118h+var_118] offset aSignature0xS_0 +
mov [esp+118h+var_114] eax +
call printf  +
mov eax offset asc_463786 +
mov [esp+118h+var_118] 0 +
mov edx [ebp+var_A0] +
mov ecx [ebp+var_9C] +
call sub_426840  +
mov [esp+118h+var_118] offset aTypeOffset0xS +
mov [esp+118h+var_114] eax +
call printf  +
jmp loc_42ED89  +
mov ecx ds:dword_472830 +
test ecx ecx +
jnz loc_42F993  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_42F993  +
mov eax ds:dword_47282C +
mov ecx [ebp+var_DC] +
cmp ecx eax +
cmovbe eax ecx +
mov ds:dword_472830 eax +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_42EC10  +
jmp loc_42EBFF  +
cmp [ebp+var_AC] eax +
jnz loc_42F000  +
nop   +
jmp loc_42EC84  +
mov eax [ebp+var_90] +
mov eax [eax+8] +
mov [esp+118h+var_118] offset aContentsOfTheS +
mov [esp+118h+var_114] eax +
call printf  +
jmp loc_42F259  +
mov ebx [ebp+var_90] +
mov ecx edx +
mov edx eax +
mov eax offset asc_463786 +
mov ebx [ebx+8] +
mov [esp+118h+var_118] 0 +
call sub_426840  +
mov [esp+118h+var_118] offset aReservedLength +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_114] eax +
call sub_437070  +
xor eax eax +
jmp loc_42E76C  +
lea ebx [eax+eax*4] +
shl ebx 4 +
mov [esp+118h+var_118] ebx +
call sub_438CA0  +
test eax eax +
mov ds:dword_472828 eax +
jz loc_42F818  +
mov [esp+118h+var_110] ebx +
mov [esp+118h+var_114] 0 +
mov [esp+118h+var_118] eax +
call memset  +
mov eax [ebp+var_DC] +
mov ds:dword_47282C eax +
jmp loc_42E77E  +
mov eax [edx+8] +
mov [esp+118h+var_118] offset aUnableToLocate +
mov [esp+118h+var_114] eax +
call sub_437070  +
xor eax eax +
jmp loc_42E76C  +
mov [esp+118h+var_118] 0Ah +
call putchar  +
mov eax ds:_iob +
add eax 20h +
mov [esp+118h+var_118] eax +
call fflush  +
jmp loc_42F672  +
mov eax [ebp+var_90] +
mov eax [eax+8] +
mov [esp+118h+var_118] offset aNoCompUnitsInS +
mov [esp+118h+var_114] eax +
call sub_436A70  +
xor eax eax +
jmp loc_42E76C  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [eax+20h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
jmp sub_42E6A0  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [eax+20h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+4] 0 +
jmp sub_42E6A0  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [eax+20h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
jmp sub_42E6A0  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4ACh +
mov eax [ebp+8] +
mov ebx [ebp+0Ch] +
mov edi [eax+0Ch] +
mov eax [eax+18h] +
add eax edi +
mov [ebp-434h] eax +
mov esi eax +
mov [esp+4] ebx +
mov dword ptr [esp] 0Ah +
call sub_421180  +
mov [esp+4] ebx +
mov dword ptr [esp] 4 +
call sub_421180  +
mov eax [ebp+8] +
mov eax [eax+8] +
mov dword ptr [esp] offset aContentsOfTheS +
mov [esp+4] eax +
call printf  +
cmp edi esi +
jnb loc_42FBBF  +
mov [ebp-478h] edi +
mov ebx edi +
***
mov edi ebx +
lea esi [ebx+2] +
sub edi [ebp-478h] +
cmp [ebp-434h] esi +
ja loc_42FBD0  +
cmp [ebp-434h] ebx +
ja loc_42FE88  +
mov eax [ebp+8] +
mov eax [eax+8] +
mov dword ptr [esp+0] offset aOnlyGnuExtensi +
mov [esp+arg_0] eax +
call sub_436A70  +
xor eax eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp-4+arg_0] 0Ah +
call putchar  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] ebx +
call edx  +
cmp eax 4 +
jnz loc_42FB93  +
add ebx 3 +
cmp [ebp-434h] ebx +
ja loc_42FCC5  +
cmp [ebp-434h] esi +
ja loc_42FEA1  +
xor esi esi +
mov dword ptr [ebp-448h] 0 +
mov dword ptr [ebp-438h] 4 +
mov [esp-4+arg_4] edi +
mov [esp-4+arg_0] offset aOffset0xLx +
call printf  +
mov [esp-4+arg_4] 4 +
mov [esp-4+arg_0] offset aVersionD_0 +
call printf  +
mov eax [ebp-438h] +
mov [esp-4+arg_0] offset aOffsetSizeD +
mov [esp-4+arg_4] eax +
call printf  +
mov ecx [ebp-448h] +
mov dword ptr [ebp-470h] 0 +
mov dword ptr [ebp-474h] 0 +
test ecx ecx +
jnz loc_430032  +
test esi esi +
jz loc_430091  +
lea esi [ebx+1] +
cmp [ebp-434h] esi +
ja loc_42FD00  +
cmp ebx [ebp-434h] +
jb loc_42FEC0  +
lea edx [ebp-418h] +
mov ecx 100h +
xor eax eax +
mov edi edx +
stos   +
mov [esp-4+arg_0] 0Ah +
call putchar  +
mov [esp-4+arg_0] offset a_debug_macroSe +
call sub_436A70  +
xor eax eax +
jmp loc_42FBAB  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] esi +
call edx  +
mov ecx eax +
and ecx 2 +
test al 1 +
mov [ebp-448h] ecx +
jz loc_430D46  +
and eax 4 +
mov esi eax +
mov dword ptr [ebp-438h] 8 +
jmp loc_42FC1A  +
mov eax 1 +
mov edx ds:dword_472C94 +
lea edi [ebp-418h] +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_4] eax +
call edx  +
mov ecx 100h +
mov ebx eax +
xor eax eax +
test ebx ebx +
stos   +
jz loc_42FDFC  +
mov [esp-4+arg_0] offset aExtensionOpcod +
call puts  +
lea eax [ebx+1] +
mov ecx esi +
mov [ebp-46Ch] eax +
mov dword ptr [ebp-468h] 1 +
lea ebx [ecx+1] +
cmp [ebp-434h] ebx +
ja loc_42FEE0  +
cmp [ebp-434h] ecx +
jbe loc_42FD79  +
mov eax [ebp-434h] +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_42FEE5  +
lea eax [ebp-418h] +
xor esi esi +
mov [eax] ebx +
mov eax [ebp-434h] +
mov [esp-4+arg_8] 0 +
mov [esp-4+arg_0] ebx +
mov [esp-4+arg_C] eax +
lea eax [ebp-420h] +
mov [esp-4+arg_4] eax +
call sub_427E10  +
mov ecx [ebp-420h] +
add ecx ebx +
mov edi edx +
or edi eax +
mov [ebp-430h] eax +
mov [ebp-42Ch] edx +
jnz loc_42FF02  +
mov [ebp-430h] ecx +
mov [esp-4+arg_4] esi +
mov [esp-4+arg_0] offset aDw_macro_gnu_0 +
call printf  +
mov ecx [ebp-430h] +
add dword ptr [ebp-468h] 1 +
mov eax [ebp-46Ch] +
cmp [ebp-468h] eax +
jnz loc_42FD4E  +
mov esi ecx +
lea eax [ebp-418h] +
mov [ebp-46Ch] eax +
mov [esp-4+arg_0] 0Ah +
call putchar  +
cmp esi [ebp-434h] +
jnb loc_42FCB2  +
mov edi [ebp-434h] +
lea ebx [esi+1] +
mov eax [ebp-438h] +
mov dword ptr [ebp-464h] 0 +
cmp edi ebx +
mov [ebp-468h] eax +
ja loc_430163  +
cmp edi esi +
jbe loc_42FBB3  +
mov eax edi +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42FBB3  +
mov edx ds:dword_472C94 +
mov [esp-4+arg_0] esi +
mov [esp-4+arg_4] eax +
call edx  +
test eax eax +
mov esi eax +
jz loc_430D29  +
cmp eax 0Ah +
ja sub_430592  +
jmp ds:off_466608[eax*4]  +
mov eax [ebp-434h] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42FB93  +
jmp loc_42FBD5  +
mov eax [ebp-434h] +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42FC04  +
jmp loc_42FCCA  +
***
mov eax [ebp-434h] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_42FC95  +
jmp loc_42FD05  +
***
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] ecx +
call edx  +
mov esi eax +
lea eax [ebp+eax*4-418h] +
jmp loc_42FD81  +
mov [ebp-444h] ecx +
mov [esp-4+arg_4] esi +
mov [esp-4+arg_0] offset aDw_macro_gnu_1 +
call printf  +
mov eax [ebp-430h] +
mov edx [ebp-42Ch] +
mov ecx [ebp-444h] +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
xor esi esi +
mov [ebp-440h] eax +
xor edi edi +
mov [ebp-43Ch] edx +
jmp loc_430001  +
cmp [ebp-434h] ecx +
jbe loc_42FF61  +
mov eax [ebp-434h] +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_430015  +
mov ecx 0FFFFFFFDh +
mov dword ptr [ebp-460h] 0 +
mov edx [ebp-43Ch] +
mov eax [ebp-440h] +
mov [ebp-450h] ecx +
xor edx edi +
xor eax esi +
or edx eax +
mov eax offset asc_464C6C +
mov edx offset asc_4661AB +
cmovnz edx eax +
mov eax [ebp-460h] +
mov [ebp-444h] edx +
call sub_427AA0  +
mov edx [ebp-444h] +
mov [esp-4+arg_0] offset aSS_1 +
mov [esp-4+arg_8] edx +
mov [esp-4+arg_4] eax +
call printf  +
mov ecx [ebp-450h] +
cmp ecx 14h +
ja loc_4300A2  +
mov eax 1 +
shl eax cl +
test eax 101FFFh +
jz loc_4300A2  +
mov edx [ebp-42Ch] +
add esi 1 +
mov ecx ebx +
mov eax [ebp-430h] +
adc edi 0 +
xor edx edi +
xor eax esi +
or edx eax +
jz loc_42FDE1  +
lea ebx [ecx+1] +
cmp [ebp-434h] ebx +
jbe loc_42FF45  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp-4+arg_0] ecx +
mov [esp-4+arg_4] eax +
call edx  +
mov [ebp-460h] eax +
lea ecx [eax-3] +
jmp loc_42FF70  +
mov eax [ebp-438h] +
mov ecx esp +
lea edi [ebx+eax] +
cmp [ebp-434h] edi +
ja loc_4300C4  +
xor eax eax +
cmp [ebp-434h] ebx +
jbe loc_430075  +
mov eax [ebp-434h] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4300D2  +
xor eax eax +
mov dword ptr [ebp-470h] 0 +
mov dword ptr [ebp-474h] 0 +
mov esp ecx +
mov ebx edi +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aOffsetInto_deb +
call printf  +
test esi esi +
jnz loc_42FC7E  +
mov esi ebx +
mov dword ptr [ebp-46Ch] 0 +
jmp loc_42FE08  +
mov eax [ebp-460h] +
call sub_427AA0  +
mov dword ptr [esp] offset aInvalidExtensi +
mov [esp+4] eax +
call sub_436A70  +
xor eax eax +
jmp loc_42FBAB  +
mov eax [ebp-438h] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_43005F  +
mov edx ds:dword_472C94 +
mov [ebp-430h] ecx +
mov [esp+4] eax +
mov [esp] ebx +
call edx  +
mov ecx [ebp-430h] +
mov [ebp-470h] eax +
mov [ebp-474h] edx +
jmp loc_430075  +
***
mov eax [ebp-438h] +
mov [ebp-430h] esp +
lea esi [ebx+eax] +
cmp edi esi +
ja loc_430640  +
xor eax eax +
cmp edi ebx +
jbe loc_430139  +
mov edx edi +
sub edx ebx +
lea ecx [edx-1] +
xor eax eax +
cmp ecx 7 +
ja loc_430139  +
mov eax ds:dword_472C94 +
mov [esp-4+arg_4] edx +
mov [esp-4+arg_0] ebx +
call eax  +
mov esp [ebp-430h] +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aDw_macro_gnu_t +
call printf  +
nop   +
cmp edi esi +
jbe loc_42FCB2  +
lea ebx [esi+1] +
cmp edi ebx +
jbe loc_42FE47  +
mov eax 1 +
jmp loc_42FE5F  +
***
lea eax [ebp-420h] +
lea eax [ebp-420h] +
mov eax [ebp-438h] +
mov [ebp-430h] esp +
lea esi [ebx+eax] +
cmp edi esi +
ja loc_430616  +
xor eax eax +
cmp edi ebx +
jbe loc_4302D1  +
mov edx edi +
sub edx ebx +
lea ecx [edx-1] +
xor eax eax +
cmp ecx 7 +
ja loc_4302D1  +
mov eax ds:dword_472C94 +
mov [esp+arg_0] edx +
mov [esp+0] ebx +
call eax  +
mov esp [ebp-430h] +
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aDw_macro_gnu_2 +
call printf  +
jmp loc_430150  +
***
lea eax [ebp-420h] +
mov [esp+0] ebx +
mov [esp+arg_8] edi +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
call sub_427E10  +
add ebx [ebp-420h] +
mov [ebp-440h] esp +
mov [ebp-430h] eax +
mov eax [ebp-438h] +
lea esi [ebx+eax] +
cmp edi esi +
ja loc_430660  +
xor eax eax +
xor edx edx +
cmp edi ebx +
jbe loc_430361  +
mov ecx edi +
sub ecx ebx +
lea eax [ecx-1] +
xor edx edx +
mov [ebp-444h] eax +
xor eax eax +
cmp dword ptr [ebp-444h] 7 +
ja loc_430361  +
mov eax ds:dword_472C94 +
mov [esp+arg_0] ecx +
mov [esp+0] ebx +
call eax  +
mov esp [ebp-440h] +
call sub_427CC0  +
mov [esp+arg_4] eax +
mov eax [ebp-430h] +
mov dword ptr [esp+0] offset aDw_macro_gnu_3 +
mov [esp+arg_0] eax +
call printf  +
jmp loc_430150  +
***
lea eax [ebp-420h] +
mov [esp+0] ebx +
mov [esp+arg_8] edi +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
call sub_427E10  +
add ebx [ebp-420h] +
mov [ebp-440h] esp +
mov [ebp-430h] eax +
mov eax [ebp-438h] +
lea esi [ebx+eax] +
cmp edi esi +
ja loc_430650  +
xor eax eax +
xor edx edx +
cmp edi ebx +
jbe loc_430401  +
mov ecx edi +
sub ecx ebx +
lea eax [ecx-1] +
xor edx edx +
mov [ebp-444h] eax +
xor eax eax +
cmp dword ptr [ebp-444h] 7 +
ja loc_430401  +
mov eax ds:dword_472C94 +
mov [esp+arg_0] ecx +
mov [esp+0] ebx +
call eax  +
mov esp [ebp-440h] +
call sub_427CC0  +
mov [esp+arg_4] eax +
mov eax [ebp-430h] +
mov dword ptr [esp+0] offset aDw_macro_gnu_4 +
mov [esp+arg_0] eax +
call printf  +
jmp loc_430150  +
***
mov dword ptr [esp+0] offset aDw_macro_gnu_e +
lea eax [ebp-420h] +
lea eax [ebp-420h] +
lea eax [ebp-420h] +
mov eax [ebp-46Ch] +
test eax eax +
jz loc_430CEA  +
mov eax [ebp-46Ch] +
mov ecx [eax+esi*4] +
test ecx ecx +
jz loc_430CEA  +
lea eax [ebp-420h] +
mov [esp+0] ecx +
mov [esp+arg_8] edi +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov [ebp-430h] ecx +
call sub_427E10  +
mov ecx [ebp-430h] +
mov [ebp-450h] eax +
mov [ebp-44Ch] edx +
mov eax [ebp-44Ch] +
or eax [ebp-450h] +
mov edx [ebp-420h] +
jnz loc_430765  +
mov [esp+arg_0] esi +
mov esi ebx +
mov dword ptr [esp+0] offset aDw_macro_gnu_8 +
call printf  +
jmp loc_430150  +
mov edx [ebp-438h] +
jmp loc_4302B9  +
mov edx [ebp-438h] +
jmp loc_43024B  +
mov edx [ebp-438h] +
jmp loc_4301B7  +
mov edx [ebp-438h] +
jmp loc_430121  +
mov ecx [ebp-438h] +
jmp loc_4303DD  +
mov ecx [ebp-438h] +
jmp loc_43033D  +
mov eax [ebp-440h] +
mov dword ptr [ebp-454h] 0 +
mov [ebp-458h] eax +
mov eax dword_44180C +
test eax eax +
jz loc_4304B3  +
mov ecx dword_441818 +
mov edx dword_44181C +
cmp [ebp-474h] edx +
mov [ebp-460h] ecx +
ja loc_4304B3  +
jb loc_4306BF  +
cmp [ebp-470h] ecx +
jnb loc_4304B3  +
mov ecx [ebp-454h] +
or ecx [ebp-458h] +
jz loc_4304B3  +
mov ecx [ebp-470h] +
lea ebx [eax+ecx] +
add eax [ebp-460h] +
lea ecx [ebx+4] +
mov [ebp-450h] ecx +
cmp eax ecx +
mov [ebp-430h] eax +
ja loc_4308F3  +
cmp ebx eax +
jnb loc_430709  +
sub eax ebx +
lea ecx [eax-1] +
cmp ecx 7 +
jbe loc_4308F8  +
mov ebx edx +
mov eax 4 +
xor edx edx +
mov ecx 4 +
cmp ebx edx +
ja loc_430727  +
cmp [ebp-460h] eax +
jb loc_4304B3  +
mov eax [ebp-450h] +
lea ebx [eax+2] +
cmp [ebp-430h] ebx +
ja loc_430970  +
cmp [ebp-430h] eax +
jbe loc_4304B3  +
mov eax [ebp-430h] +
sub eax [ebp-450h] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4304B3  +
jmp loc_430975  +
mov [ebp-440h] edx +
mov [ebp-430h] ecx +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_macro_gnu_9 +
call printf  +
mov eax [ebp-450h] +
mov edx [ebp-44Ch] +
mov ecx [ebp-430h] +
mov [ebp-430h] edi +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
mov [ebp-45Ch] edx +
mov edx [ebp-440h] +
mov [ebp-460h] eax +
xor eax eax +
mov [ebp-440h] ebx +
mov esi eax +
add ecx edx +
xor edx edx +
mov edi edx +
jmp loc_4308A4  +
xor edx edx +
cmp [ebp-430h] ecx +
jbe loc_4307E4  +
mov eax [ebp-430h] +
sub eax ecx +
lea ebx [eax-1] +
cmp ebx 7 +
jbe loc_4308BE  +
mov [esp+arg_28] 0 +
mov [esp+arg_24] 0 +
mov [esp+arg_20] 0 +
mov [esp+arg_1C] 0 +
mov [esp+arg_18] 4 +
mov ecx [ebp-468h] +
mov ebx [ebp-464h] +
mov [esp+arg_8] 0 +
mov [esp+arg_C] 0 +
mov [esp+arg_10] ecx +
mov [esp+arg_14] ebx +
mov [esp+arg_0] 0 +
mov [esp+arg_4] 0 +
mov eax [ebp-430h] +
mov [esp+0] eax +
mov ecx [ebp-440h] +
xor eax eax +
call sub_42C3A0  +
mov ecx [ebp-460h] +
mov ebx [ebp-45Ch] +
mov edx ebx +
mov [ebp-440h] eax +
mov eax ecx +
xor edx edi +
xor eax esi +
or edx eax +
jz loc_430880  +
mov dword ptr [esp+0] 2Ch +
call putchar  +
mov ecx [ebp-450h] +
add esi 1 +
mov ebx [ebp-44Ch] +
adc edi 0 +
mov eax ecx +
mov edx ebx +
xor eax esi +
xor edx edi +
or edx eax +
jz loc_4308D4  +
mov ecx [ebp-444h] +
lea eax [ecx+1] +
cmp [ebp-430h] eax +
mov [ebp-444h] eax +
jbe loc_4307C6  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] ecx +
call edx  +
mov edx eax +
jmp loc_4307E4  +
mov ebx [ebp-440h] +
mov edi [ebp-430h] +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov esi ebx +
jmp loc_430150  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call edx  +
mov ecx eax +
not ecx  +
or ecx edx +
jnz loc_430CCB  +
lea ecx [ebx+0Ch] +
cmp [ebp-430h] ecx +
ja loc_430C75  +
mov eax [ebp-450h] +
cmp [ebp-430h] eax +
jbe loc_430948  +
mov eax [ebp-430h] +
sub eax [ebp-450h] +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_430C7A  +
mov eax dword_441818 +
xor edx edx +
mov [ebp-450h] ecx +
mov ebx dword_44181C +
mov ecx 8 +
mov [ebp-460h] eax +
mov eax 0Ch +
jmp loc_430717  +
mov eax 2 +
mov [ebp-460h] ecx +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov eax [ebp-450h] +
mov [esp+0] eax +
call edx  +
lea edx [eax-2] +
cmp edx 2 +
ja loc_4304B3  +
mov ecx [ebp-460h] +
cmp eax 4 +
setz al  +
movzx eax al +
lea ebx [ebx+ecx+1] +
add ebx eax +
lea ecx [ebx+3] +
add ebx 4 +
cmp [ebp-430h] ebx +
ja loc_4309E1  +
cmp [ebp-430h] ecx +
jbe loc_4304B3  +
mov eax [ebp-430h] +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4304B3  +
jmp loc_4309E6  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] ecx +
call edx  +
test eax eax +
jz loc_4304B3  +
lea eax [ebx+eax-1] +
cmp byte ptr [eax] 0 +
mov [ebp-450h] eax +
jz loc_430D01  +
mov ebx [ebp-430h] +
mov [ebp-460h] esi +
mov esi eax +
nop   +
mov eax ebx +
sub eax esi +
mov [esp+0] esi +
mov [esp+arg_0] eax +
call sub_4401F0  +
lea esi [esi+eax+1] +
cmp byte ptr [esi] 0 +
jnz loc_430A20  +
mov edx esi +
mov esi [ebp-460h] +
cmp byte ptr [edx+1] 0 +
lea ebx [edx+1] +
jz loc_4304B3  +
mov edx [ebp-458h] +
mov ecx [ebp-454h] +
mov eax edx +
xor eax 1 +
or eax ecx +
jz loc_430B3E  +
lea eax [ebp-41Ch] +
mov [ebp-460h] edi +
mov edi eax +
mov [ebp-47Ch] esi +
mov esi [ebp-430h] +
jmp loc_430A9C  +
mov edx [ebp-458h] +
mov ecx [ebp-454h] +
mov eax edx +
xor eax 1 +
or eax ecx +
jz loc_430B32  +
mov eax esi +
sub eax ebx +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_4401F0  +
mov [esp+arg_8] esi +
mov [esp+arg_4] 0 +
mov [esp+arg_0] edi +
lea ebx [ebx+eax+1] +
mov [esp+0] ebx +
call sub_427E10  +
add ebx [ebp-41Ch] +
mov [esp+arg_8] esi +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] edi +
call sub_427E10  +
add ebx [ebp-41Ch] +
mov [esp+arg_8] esi +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] edi +
call sub_427E10  +
add ebx [ebp-41Ch] +
add dword ptr [ebp-458h] 0FFFFFFFFh +
adc dword ptr [ebp-454h] 0FFFFFFFFh +
cmp byte ptr [ebx] 0 +
jnz loc_430A83  +
mov edi [ebp-460h] +
mov esi [ebp-47Ch] +
jmp loc_4304B3  +
mov edi [ebp-460h] +
mov esi [ebp-47Ch] +
cmp [ebp-430h] ebx +
jz loc_4304B3  +
mov eax [ebp-430h] +
mov [esp+0] ebx +
sub eax ebx +
mov [esp+arg_0] eax +
call sub_4401F0  +
mov ecx [ebp-430h] +
mov [esp+arg_4] 0 +
mov [esp+arg_8] ecx +
lea ecx [ebp-41Ch] +
mov [esp+arg_0] ecx +
lea eax [ebx+eax+1] +
mov [esp+0] eax +
call sub_427E10  +
mov ecx edx +
mov edx eax +
mov eax ecx +
or eax edx +
jz loc_430BF6  +
mov eax [ebp-450h] +
cmp byte ptr [eax] 0 +
jz loc_4304B3  +
cmp ecx 0 +
ja loc_430C09  +
cmp edx 1 +
ja loc_430D0C  +
test ebx ebx +
nop   +
jz loc_4304B3  +
mov edx [ebp-450h] +
test edx edx +
jz loc_430C00  +
mov eax offset asc_4661AD +
mov [esp+arg_10] ebx +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
mov eax [ebp-440h] +
mov [esp+arg_4] eax +
mov eax [ebp-444h] +
mov dword ptr [esp+0] offset aDw_macro_gn_10 +
mov [esp+arg_0] eax +
call printf  +
jmp loc_430150  +
test ebx ebx +
jz loc_4304B3  +
nop   +
mov eax offset unk_464DE7 +
mov edx eax +
jmp loc_430BC5  +
mov [ebp-460h] edi +
mov edi [ebp-450h] +
mov [ebp-47Ch] esi +
mov esi ecx +
mov [ebp-480h] ebx +
mov ebx edx +
jmp loc_430C30  +
mov eax ebx +
xor eax 1 +
or eax esi +
jz loc_430C58  +
mov eax [ebp-430h] +
mov [esp+0] edi +
sub eax edi +
mov [esp+arg_0] eax +
call sub_4401F0  +
add ebx 0FFFFFFFFh +
adc esi 0FFFFFFFFh +
lea edi [edi+eax+1] +
cmp byte ptr [edi] 0 +
jnz loc_430C27  +
jmp loc_430B21  +
mov [ebp-450h] edi +
mov esi [ebp-47Ch] +
mov ebx [ebp-480h] +
mov edi [ebp-460h] +
jmp loc_430BAD  +
mov eax 8 +
mov [ebp-47Ch] ecx +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov eax [ebp-450h] +
mov [esp+0] eax +
call edx  +
mov ecx dword_441818 +
mov ebx dword_44181C +
mov [ebp-460h] ecx +
mov ecx [ebp-47Ch] +
add eax 0Ch +
adc edx 0 +
mov [ebp-450h] ecx +
mov ecx 8 +
cmp ebx edx +
jb loc_4304B3  +
jmp loc_430717  +
mov ecx dword_441818 +
add eax 4 +
adc edx 0 +
mov ebx dword_44181C +
mov [ebp-460h] ecx +
mov ecx 4 +
jmp loc_430CBE  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aUnknownMacroOp +
call sub_436A70  +
xor eax eax +
jmp loc_42FBAB  +
***
mov edx [ebp-450h] +
jmp loc_430A41  +
mov [ebp-460h] edi +
mov edi eax +
mov [ebp-47Ch] esi +
mov esi ecx +
mov [ebp-480h] ebx +
mov ebx edx +
jmp loc_430C30  +
***
push ebx  +
sub esp 14h +
mov ebx [eax+8] +
xor eax eax +
cmp ebx edx +
ja loc_430DDE  +
mov eax ds:dword_4727B8 +
test eax eax +
jnz loc_430DE4  +
lea eax [edx+1] +
test eax eax +
mov [esi+8] eax +
jz loc_430DE8  +
cmp eax 400h +
ja loc_430DEF  +
mov edx [esi+0Ch] +
mov [esp+18h+var_10] 2 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_42C340  +
mov edx [esi+8] +
mov [esp+18h+var_10] 4 +
mov [esp+18h+var_14] edx +
mov [esi+0Ch] eax +
mov eax [esi+10h] +
mov [esp+18h+var_18] eax +
call sub_42C340  +
mov edx [esi+0Ch] +
test edx edx +
mov [esi+10h] eax +
jz loc_430E08  +
test eax eax +
jz loc_430E08  +
cmp ebx [esi+8] +
jnb loc_430DD9  +
mov ecx 0FFFFFFFFh +
mov [edx+ebx*2] cx +
mov dword ptr [eax+ebx*4] 0 +
add ebx 1 +
cmp [esi+8] ebx +
ja loc_430DC1  +
mov eax 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp edx eax +
jbe loc_430D69  +
mov eax 0FFFFFFFFh +
jmp loc_430DDE  +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] offset aUnfeasiblyLarg +
call sub_436A70  +
mov dword ptr [esi+8] 0 +
jmp loc_430DE8  +
mov eax [esi+8] +
mov [esp+18h+var_18] offset aOutOfMemory_11 +
mov [esp+18h+var_14] eax +
call sub_436A70  +
mov eax 0FFFFFFFFh +
mov dword ptr [esi+8] 0 +
jmp loc_430DDE  +
***
push ebp  +
mov ecx 0Ah +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [ebp+8] +
mov edi [ebp+8] +
mov eax [eax+0Ch] +
mov [ebp-64h] eax +
mov [ebp-38h] eax +
add eax [edi+18h] +
mov [ebp-40h] eax +
mov eax [edi+8] +
mov edi offset a_eh_frame_0 +
mov esi eax +
cmps   +
mov edi ds:dword_472C4C +
mov dword ptr [ebp-30h] 0 +
mov [ebp-68h] edi +
setz bl  +
movzx ebx bl +
mov [ebp-78h] ebx +
mov [esp+4] eax +
mov dword ptr [esp] offset aContentsOfTh_0 +
call printf  +
mov esi [ebp-38h] +
mov dword ptr [ebp-6Ch] 0 +
mov dword ptr [ebp-74h] 0 +
mov dword ptr [ebp-70h] 0 +
***
cmp [ebp-40h] esi +
jbe loc_4328B1  +
lea eax [esi+4] +
cmp [ebp-40h] eax +
mov dword ptr [ebp-28h] 1 +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 0 +
ja loc_430F17  +
mov edx [ebp-40h] +
sub edx esi +
lea ecx [edx-1] +
cmp ecx 7 +
jbe loc_430F1C  +
mov [ebp-38h] eax +
sub esi [ebp-64h] +
mov dword ptr [esp+0] offset a08lxZeroTermin +
mov [esp+arg_0] esi +
call printf  +
mov esi [ebp-38h] +
mov edx [ebp-40h] +
cmp esi edx +
jnb loc_430EA3  +
cmp byte ptr [esi] 0 +
jnz loc_430EA3  +
lea eax [esi+1] +
jmp loc_430F09  +
add eax 1 +
cmp byte ptr [eax-1] 0 +
jnz loc_430EA3  +
cmp eax edx +
mov esi eax +
mov [ebp-38h] eax +
jnz loc_430F00  +
mov esi [ebp-40h] +
jmp loc_430EA3  +
mov edx 4 +
mov eax ds:dword_472C94 +
mov [esp+arg_0] edx +
mov [esp+0] esi +
call eax  +
mov ecx [ebp-38h] +
mov edi eax +
mov [ebp-54h] eax +
lea eax [ecx+4] +
mov [ebp-58h] edx +
or edx edi +
mov [ebp-38h] eax +
jz loc_430ED9  +
mov edi [ebp-54h] +
mov edx edi +
not edx  +
or edx [ebp-58h] +
jz loc_43292A  +
lea edx [edi+4] +
mov dword ptr [ebp-48h] 4 +
lea edi [esi+edx] +
cmp edi eax +
mov [ebp-3Ch] edi +
jb loc_4328F0  +
mov ebx [ebp-40h] +
cmp edi ebx +
ja loc_4328F0  +
mov edi [ebp-48h] +
mov ebx esp +
lea edx [eax+edi] +
cmp [ebp-40h] edx +
ja loc_431100  +
cmp [ebp-40h] eax +
ja loc_432A1D  +
mov eax [ebp-48h] +
mov esp ebx +
add eax [ebp-38h] +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-60h] 0 +
mov [ebp-44h] eax +
mov [ebp-38h] eax +
mov eax [ebp-78h] +
test eax eax +
jnz loc_432898  +
mov edx [ebp-5Ch] +
not edx  +
or edx [ebp-60h] +
jnz loc_430FC7  +
cmp dword ptr [ebp-48h] 4 +
jz loc_432898  +
mov edx [ebp-5Ch] +
and edx [ebp-60h] +
cmp edx 0FFFFFFFFh +
jz loc_43288E  +
mov edi [ebp-64h] +
add edi [ebp-5Ch] +
cmp edi esi +
jbe loc_431174  +
mov ebx [ebp-74h] +
test ebx ebx +
mov [ebp-2Ch] ebx +
jz loc_431013  +
cmp [ebx+4] edi +
jnz loc_431006  +
jmp loc_43333F  +
cmp [ebx+4] edi +
nop   +
lea esi [esi+0] +
jz loc_432A3F  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_430FF8  +
mov dword ptr [ebp-2Ch] 0 +
lea ebx [edi+4] +
mov eax 4 +
cmp [ebp-40h] ebx +
jbe loc_4332D6  +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] edi +
call edx  +
mov [ebp-54h] eax +
not eax  +
or eax edx +
mov [ebp-58h] edx +
jnz loc_433364  +
lea ecx [edi+0Ch] +
cmp [ebp-40h] ecx +
jbe loc_43334D  +
mov eax 8 +
mov edx ds:dword_472C94 +
mov [ebp-44h] ecx +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call edx  +
mov ecx [ebp-44h] +
mov dword ptr [ebp-44h] 8 +
mov ebx ecx +
mov [ebp-54h] eax +
mov [ebp-58h] edx +
mov eax [ebp-58h] +
or eax [ebp-54h] +
jz loc_433377  +
mov eax [ebp-44h] +
mov [ebp-7Ch] esp +
add eax ebx +
cmp [ebp-40h] eax +
mov [ebp-50h] eax +
ja loc_43337F  +
cmp ebx [ebp-40h] +
jnb loc_43338E  +
mov eax [ebp-40h] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_43338E  +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call edx  +
mov ecx [ebp-78h] +
mov esp [ebp-7Ch] +
test ecx ecx +
jz loc_4333A0  +
or eax edx +
setz cl  +
test cl cl +
jz loc_433377  +
mov eax [ebp-50h] +
cmp [ebp-40h] eax +
mov dword ptr [ebp-2Ch] 0 +
ja loc_4333CE  +
mov dword ptr [esp+0] offset aFailedToReadCi +
call sub_437070  +
jmp loc_4328B1  +
mov edx [ebp-48h] +
lea ecx [edx-1] +
cmp ecx 7 +
ja loc_430F8C  +
mov ecx ds:dword_472C94 +
mov [esp+arg_0] edx +
mov [esp+0] eax +
call ecx  +
mov [ebp-5Ch] eax +
mov [ebp-60h] edx +
mov eax [ebp-48h] +
mov esp ebx +
add eax [ebp-38h] +
mov [ebp-44h] eax +
mov [ebp-38h] eax +
mov eax [ebp-78h] +
test eax eax +
jz loc_430FB3  +
mov edi [ebp-60h] +
or edi [ebp-5Ch] +
jz loc_432898  +
mov edi [ebp-48h] +
xor eax eax +
lea ebx ds:0FFFFFFFFh[edi*8] +
test bl 20h +
mov ecx ebx +
setz al  +
shl eax cl +
mov edx eax +
xor edx [ebp-5Ch] +
lea edi [eax-4] +
sub edi edx +
add edi [ebp-44h] +
cmp edi esi +
ja loc_430FE4  +
mov ebx [ebp-70h] +
test ebx ebx +
mov [ebp-2Ch] ebx +
jz loc_4311A3  +
cmp [ebx+4] edi +
jnz loc_431196  +
jmp loc_433331  +
cmp [ebx+4] edi +
nop   +
lea esi [esi+0] +
jz loc_432A3F  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_431188  +
mov dword ptr [ebp-2Ch] 0 +
mov edx offset unk_472100 +
mov ecx 12h +
xor eax eax +
mov edi edx +
stos   +
mov eax [ebp-48h] +
sub esi [ebp-64h] +
mov [ebp-44h] esi +
mov [esp+0] eax +
mov edx [ebp-5Ch] +
xor eax eax +
mov ecx [ebp-60h] +
call sub_426840  +
mov [esp+arg_4] esi +
mov dword ptr [esp+0] offset aInvalidCiePoin +
mov [esp+arg_0] eax +
call sub_437070  +
mov ds:dword_472108 0 +
mov dword ptr [esp+0] 2 +
call sub_438CA0  +
mov ds:dword_47210C eax +
mov dword ptr [esp+0] 4 +
call sub_438CA0  +
xor edx edx +
mov ds:dword_472110 eax +
mov eax [ebp-30h] +
test eax eax +
lea ecx [eax-1] +
mov eax offset unk_472100 +
cmovnz edx ecx +
call sub_430D50  +
test eax eax +
js loc_433320  +
mov eax ds:dword_472C4C +
xor edx edx +
xor edi edi +
mov dword ptr [ebp-2Ch] offset unk_472100 +
mov ds:dword_472114 offset unk_464DE7 +
mov ds:byte_472144 0 +
mov ds:byte_472146 al +
mov eax [ebp-68h] +
mov ds:byte_472147 0 +
mov [ebp-50h] eax +
mov eax [ebp+8] +
mov ebx esp +
mov esi [ebp-40h] +
lea ecx [eax+0Ch] +
mov [esp+arg_0] esi +
mov eax [ebp+8] +
add eax 10h +
mov [esp+0] eax +
lea eax [ebp-38h] +
call sub_427AF0  +
mov ecx [ebp-50h] +
mov ds:dword_472120 eax +
mov eax [ebp-38h] +
mov ds:dword_472124 edx +
lea edx [eax+ecx] +
cmp esi edx +
ja loc_4329C8  +
cmp [ebp-40h] eax +
jbe loc_4312B0  +
mov edx [ebp-40h] +
sub edx eax +
lea ecx [edx-1] +
cmp ecx 7 +
jbe loc_4329D7  +
mov ds:dword_472128 0 +
mov ds:dword_47212C 0 +
mov eax [ebp-2Ch] +
mov esp ebx +
mov edx [ebp-50h] +
add edx [ebp-38h] +
mov ecx [eax+14h] +
mov [ebp-38h] edx +
cmp byte ptr [ecx] 7Ah +
jz loc_433118  +
mov ebx [eax+4] +
mov eax [ebp-48h] +
sub ebx [ebp-64h] +
mov [esp+0] eax +
mov edx [ebp-5Ch] +
xor eax eax +
mov ecx [ebp-60h] +
call sub_426840  +
mov esi eax +
movzx eax ds:byte_472146 +
mov [esp+0] eax +
mov edx [ebp-54h] +
xor eax eax +
mov ecx [ebp-58h] +
call sub_426840  +
mov [esp+arg_C] ebx +
mov [esp+arg_8] esi +
mov [esp+arg_4] eax +
mov eax [ebp-44h] +
mov dword ptr [esp+0] offset a08lxSSFdeCie08 +
mov [esp+arg_0] eax +
call printf  +
cmp ds:byte_472147 0 +
jnz loc_433077  +
movzx eax ds:byte_472146 +
mov edx ds:dword_472128 +
mov ecx ds:dword_47212C +
add edx ds:dword_472120 +
adc ecx ds:dword_472124 +
mov [esp+0] eax +
xor eax eax +
call sub_426840  +
mov edx ds:dword_472120 +
mov ecx ds:dword_472124 +
mov ebx eax +
movzx eax ds:byte_472146 +
mov [esp+0] eax +
xor eax eax +
call sub_426840  +
mov [esp+arg_4] ebx +
mov dword ptr [esp+0] offset aS__S +
mov [esp+arg_0] eax +
call printf  +
mov eax ds:dword_472C64 +
mov dword ptr [ebp-44h] offset unk_472100 +
test eax eax +
jnz loc_4313B3  +
mov edi [ebp-20h] +
test edi edi +
jnz loc_43315F  +
mov ebx [ebp-38h] +
mov [ebp-48h] ebx +
lea esi [esi+0] +
***
cmp [ebp-3Ch] ebx +
jbe loc_431420  +
***
mov eax [ebp-40h] +
mov [esp+arg_4] 0 +
mov [esp+arg_8] eax +
lea eax [ebp-34h] +
mov [esp+arg_0] eax +
mov [esp+0] ecx +
call sub_427E10  +
mov ebx [ebp-38h] +
add ebx [ebp-34h] +
cmp [ebp-3Ch] ebx +
ja loc_4313C5  +
lea esi [esi+0] +
mov ecx [ebp-48h] +
mov [ebp-38h] ecx +
cmp [ebp-3Ch] ecx +
jbe loc_4318AC  +
lea esi [ecx+1] +
mov [ebp-38h] esi +
movzx edx byte ptr [ecx] +
mov eax edx +
mov ebx edx +
and eax 0FFFFFFC0h +
and ebx 3Fh +
movzx edi al +
test al al +
cmovnz edx edi +
cmp edx 0C0h +
ja sub_432839  +
jmp ds:off_46715C[edx*4]  +
***
add ebx 9 +
mov eax [ebp-40h] +
mov [esp+arg_4] 1 +
mov [esp+arg_8] eax +
jmp loc_431402  +
***
mov esi [ebp-40h] +
lea eax [ebp-34h] +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov [esp+0] ecx +
mov [esp+arg_8] esi +
call sub_427E10  +
mov eax [ebp-38h] +
add eax [ebp-34h] +
mov [ebp-38h] eax +
mov [esp+arg_8] esi +
mov [esp+arg_4] 1 +
lea edi [ebp-34h] +
mov [esp+arg_0] edi +
mov [esp+0] eax +
call sub_427E10  +
mov ebx [ebp-38h] +
add ebx [ebp-34h] +
jmp loc_4313C0  +
***
mov edi [ebp-40h] +
mov esi [ebp-40h] +
mov edi [ebp-40h] +
lea eax [ebp-34h] +
mov [esp+0] ecx +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov [esp+arg_8] edi +
call sub_427E10  +
mov ecx [ebp-38h] +
add ecx [ebp-34h] +
mov [ebp-38h] ecx +
mov [esp+arg_8] edi +
mov ebx eax +
lea eax [ebp-34h] +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov [esp+0] ecx +
call sub_427E10  +
mov edi [ebp-44h] +
mov edx ebx +
mov eax [ebp-34h] +
add [ebp-38h] eax +
mov eax edi +
call sub_430D50  +
test eax eax +
js loc_431606  +
mov eax [edi+0Ch] +
mov esi 7 +
mov [eax+ebx*2] si +
mov ebx [ebp-38h] +
jmp loc_4313C0  +
***
mov esi [ebp-40h] +
lea eax [ebp-34h] +
mov [esp+0] ecx +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov [esp+arg_8] esi +
call sub_427E10  +
mov ecx [ebp-38h] +
add ecx [ebp-34h] +
mov [ebp-38h] ecx +
mov [esp+arg_8] esi +
mov ebx eax +
mov [esp+arg_4] 0 +
jmp loc_431505  +
***
add ebx 5 +
add ebx 3 +
add ebx 2 +
mov eax [ebp-50h] +
mov ebx ecx +
jmp loc_4313C0  +
***
mov esi [ebp-40h] +
mov eax [ebp-40h] +
mov eax [ebp-40h] +
mov [esp+arg_4] 0 +
mov [esp+0] ecx +
mov [esp+arg_8] eax +
lea eax [ebp-34h] +
mov [esp+arg_0] eax +
call sub_427E10  +
mov ebx eax +
jmp loc_4316C4  +
***
mov eax [ebp-40h] +
mov eax [ebp-40h] +
mov eax [ebp-44h] +
mov eax [ebp-40h] +
mov [esp+arg_4] 0 +
mov [esp+0] ecx +
mov [esp+arg_8] eax +
lea eax [ebp-34h] +
mov [esp+arg_0] eax +
call sub_427E10  +
mov ebx [ebp-38h] +
add ebx [ebp-34h] +
mov [ebp-38h] ebx +
add ebx eax +
jnb loc_4313C0  +
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aCorruptCfa_def +
call sub_437070  +
mov ebx [ebp-3Ch] +
jmp loc_4313C0  +
***
mov esi [ebp-40h] +
mov eax [ebp-2Ch] +
mov eax [ebp-40h] +
mov ecx ds:dword_472C64 +
mov edi [ebp-40h] +
mov eax [ebp-40h] +
add ecx 9 +
mov edi [ebp-40h] +
mov edi [ebp-40h] +
mov edi [ebp-40h] +
mov eax [ebp-40h] +
mov eax [ebp-40h] +
mov edi [ebp-40h] +
mov eax [ebp-40h] +
mov edi [ebp-40h] +
mov ecx esi +
mov ebx [ebp-40h] +
mov eax [ebp-40h] +
mov edi [ebp-40h] +
mov ebx [ebp-40h] +
mov eax [ebp-40h] +
mov eax [ebp+8] +
mov eax [ebp-40h] +
mov eax ds:dword_472C64 +
mov edi [ebp-40h] +
add ecx 3 +
mov eax [ebp-40h] +
mov eax ds:dword_472C64 +
mov edi ds:dword_472C64 +
add ecx 5 +
add ecx 2 +
lea eax [edx-1Ch] +
cmp eax 23h +
mov [esp+arg_0] edx +
ja loc_432E5A  +
mov dword ptr [esp+0] offset aDw_cfa_???User +
call printf  +
mov ecx [ebp-3Ch] +
mov [ebp-38h] ecx +
jmp loc_431426  +
***
mov eax [ebp-44h] +
lea ecx [ebp-30h] +
lea edx [ebp-28h] +
call sub_4277A0  +
jmp loc_431AD8  +
***
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aCorruptCfaExpr +
call sub_437070  +
mov eax [ebp-3Ch] +
mov [ebp-38h] eax +
jmp loc_43151A  +
***
cmp dword ptr [ebp-48h] 8 +
jnz loc_430FD6  +
mov eax [ebp-44h] +
cmp [ebp-40h] eax +
mov dword ptr [ebp-2Ch] 0 +
ja loc_432ED5  +
mov eax [ebp-40h] +
mov [ebp-38h] eax +
mov dword ptr [esp+0] 0Ah +
call putchar  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 7 +
mov ecx [ebp-38h] +
mov [edx] ax +
jmp loc_431426  +
mov eax [ebp-44h] +
lea ecx [ebp-30h] +
lea edx [ebp-28h] +
call sub_4277A0  +
jmp loc_4318B9  +
***
mov eax [ebp-48h] +
mov [esp+0] eax +
mov edx [ebp-54h] +
xor eax eax +
mov ecx [ebp-58h] +
call sub_426840  +
mov edx esi +
sub edx [ebp-64h] +
mov dword ptr [esp+0] offset aInvalidLength0 +
mov [esp+arg_4] edx +
mov [esp+arg_0] eax +
call sub_437070  +
mov edi [ebp-40h] +
mov eax [ebp-38h] +
mov [ebp-3Ch] edi +
jmp loc_430F72  +
add ecx 0Ch +
cmp [ebp-40h] ecx +
ja loc_43308C  +
cmp [ebp-40h] eax +
jbe loc_43294C  +
mov edx [ebp-40h] +
sub edx eax +
lea ecx [edx-1] +
cmp ecx 7 +
jbe loc_433091  +
mov edx 0Ch +
mov dword ptr [ebp-54h] 0 +
mov dword ptr [ebp-58h] 0 +
add eax 8 +
mov [ebp-38h] eax +
mov dword ptr [ebp-48h] 8 +
jmp loc_430F59  +
***
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aDw_cfa_expre_0 +
call printf  +
mov ecx [ebp-38h] +
jmp loc_431426  +
***
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aDw_cfa_val_e_0 +
call printf  +
mov ecx [ebp-38h] +
jmp loc_431426  +
***
mov esi offset aBadRegister +
xor edx edx +
mov eax ebx +
call sub_427720  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_restore +
mov [esp+arg_4] eax +
call printf  +
jmp loc_431863  +
mov edx [ebp-50h] +
lea ecx [edx-1] +
cmp ecx 7 +
ja loc_4312B0  +
mov ecx ds:dword_472C94 +
mov [esp+arg_0] edx +
mov [esp+0] eax +
call ecx  +
mov ds:dword_472128 eax +
mov ds:dword_47212C edx +
jmp loc_4312C4  +
***
mov esi offset aBadRegister +
xor edx edx +
mov eax ebx +
call sub_427720  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_resto_0 +
mov [esp+arg_4] eax +
call printf  +
jmp loc_4323AD  +
***
mov edx [ebp-40h] +
sub edx eax +
jmp loc_431103  +
***
mov [esp+arg_0] ebx +
mov dword ptr [esp+0] offset aDw_cfa_def_c_4 +
call printf  +
mov ecx [ebp-38h] +
jmp loc_431426  +
***
mov eax [ebp-68h] +
mov [ebp-2Ch] ebx +
mov [ebp-50h] eax +
mov edx offset unk_472100 +
mov ecx 12h +
xor eax eax +
mov edi edx +
stos   +
mov eax [ebx+8] +
mov ds:dword_472108 eax +
mov [esp+arg_0] 2 +
mov [esp+0] eax +
call sub_42C2E0  +
mov ds:dword_47210C eax +
mov eax ds:dword_472108 +
mov [esp+arg_0] 4 +
mov [esp+0] eax +
call sub_42C2E0  +
mov edi ds:dword_472108 +
lea ecx [edi+edi] +
mov ds:dword_472110 eax +
mov eax [ebp-2Ch] +
mov edx [eax+0Ch] +
mov eax ds:dword_47210C +
mov [esp+arg_4] ecx +
mov [esp+arg_0] edx +
mov [esp+0] eax +
call memcpy  +
mov eax [ebp-2Ch] +
mov edi ds:dword_472108 +
mov edx [eax+10h] +
mov eax ds:dword_472110 +
lea ecx ds:0[edi*4] +
mov [esp+arg_4] ecx +
mov [esp+arg_0] edx +
mov [esp+0] eax +
call memcpy  +
mov ecx [ebp-2Ch] +
mov eax [ecx+14h] +
mov edx [ecx+3Ch] +
mov ds:dword_472114 eax +
movzx eax byte ptr [ecx+46h] +
mov ds:byte_472146 al +
movzx eax byte ptr [ecx+46h] +
mov ds:dword_472C4C eax +
movzx eax byte ptr [ecx+47h] +
mov ds:byte_472147 al +
mov eax [ecx+18h] +
mov ds:dword_472118 eax +
mov eax [ecx+1Ch] +
mov ds:dword_47211C eax +
mov eax [ecx+30h] +
mov ds:dword_472130 eax +
mov eax [ecx+38h] +
mov ds:dword_47213C edx +
xor edx edx +
mov ds:dword_472138 eax +
mov eax [ecx+40h] +
mov ds:dword_472140 eax +
mov eax [ebp-30h] +
test eax eax +
lea ecx [eax-1] +
mov eax offset unk_472100 +
cmovnz edx ecx +
call sub_430D50  +
test eax eax +
js loc_433320  +
mov eax [ebp-2Ch] +
sub esi [ebp-64h] +
movzx edx byte ptr [eax+44h] +
mov [ebp-44h] esi +
movzx eax ds:byte_472147 +
test dl dl +
mov ds:byte_472144 dl +
jz loc_432B9E  +
mov ecx edx +
and ecx 7 +
cmp cl 3 +
mov dword ptr [ebp-50h] 4 +
jz loc_432B9E  +
cmp cl 4 +
mov dword ptr [ebp-50h] 8 +
jz loc_432B9E  +
mov edi 2 +
cmp cl 2 +
cmovnz edi ds:dword_472C4C +
mov [ebp-50h] edi +
xor edi edi +
test al al +
jz loc_43125E  +
cmp al 4 +
ja loc_4330F7  +
mov edx [ebp-38h] +
mov ebx esp +
lea ecx [edx+eax] +
cmp [ebp-40h] ecx +
ja loc_432BC9  +
xor edi edi +
cmp [ebp-40h] edx +
jbe loc_432BE4  +
mov eax [ebp-40h] +
sub eax edx +
lea ecx [eax-1] +
xor edi edi +
cmp ecx 7 +
ja loc_432BE4  +
mov ecx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] edx +
call ecx  +
mov edi eax +
movzx eax ds:byte_472147 +
mov esp ebx +
add [ebp-38h] eax +
movzx edx ds:byte_472144 +
jmp loc_43125E  +
***
mov esi offset aBadRegister +
xor edx edx +
mov eax ebx +
call sub_427720  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_undefin +
mov [esp+arg_4] eax +
call printf  +
jmp loc_4322DE  +
***
mov esi offset aBadRegister +
mov eax [ebp-44h] +
xor edx edx +
mov ecx [eax+1Ch] +
mov eax ebx +
imul ecx edi +
mov [ebp-50h] ecx +
call sub_427720  +
mov ecx [ebp-50h] +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_val_off +
mov [esp+arg_8] ecx +
mov [esp+arg_4] eax +
call printf  +
jmp loc_4319E0  +
***
mov esi offset aBadRegister +
mov eax [ebp-44h] +
mov edi ecx +
xor edx edx +
mov [ebp-50h] ecx +
imul edi [eax+1Ch] +
mov eax ebx +
call sub_427720  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_val_o_0 +
mov [esp+arg_8] edi +
mov [esp+arg_4] eax +
call printf  +
mov ecx [ebp-50h] +
jmp loc_432011  +
***
mov ebx offset aBadRegister +
xor edx edx +
mov eax edi +
call sub_427720  +
mov [esp+arg_0] ebx +
mov dword ptr [esp+0] offset aDw_cfa_registe +
mov [esp+arg_4] eax +
call printf  +
xor edx edx +
mov eax esi +
call sub_427720  +
mov [esp+0] eax +
call puts  +
jmp loc_432274  +
***
mov esi offset aBadRegister +
mov eax [ebp-44h] +
xor edx edx +
mov ecx [eax+1Ch] +
mov eax ebx +
imul ecx edi +
mov [ebp-50h] ecx +
call sub_427720  +
mov ecx [ebp-50h] +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_offsetS +
mov [esp+arg_8] ecx +
mov [esp+arg_4] eax +
call printf  +
mov ecx [ebp-38h] +
jmp loc_431913  +
***
mov esi offset aBadRegister +
mov eax [ebp-44h] +
mov edi ecx +
xor edx edx +
mov [ebp-50h] ecx +
imul edi [eax+1Ch] +
mov eax ebx +
call sub_427720  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_offset_ +
mov [esp+arg_8] edi +
mov [esp+arg_4] eax +
call printf  +
mov ecx [ebp-50h] +
jmp loc_4321E0  +
***
mov esi offset aBadRegister +
xor edx edx +
mov eax ebx +
call sub_427720  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_same_va +
mov [esp+arg_4] eax +
call printf  +
jmp loc_43260D  +
***
mov esi offset aBadRegister +
mov eax [ebp-44h] +
xor edx edx +
mov ecx [eax+1Ch] +
mov eax ebx +
imul ecx edi +
mov [ebp-50h] ecx +
call sub_427720  +
mov ecx [ebp-50h] +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_offse_0 +
mov [esp+arg_8] ecx +
mov [esp+arg_4] eax +
call printf  +
jmp loc_431C84  +
***
mov esi offset aBadRegister +
mov eax [ebp-44h] +
xor edx edx +
mov edi [ebp-50h] +
imul edi [eax+1Ch] +
mov eax ebx +
call sub_427720  +
mov [esp+arg_0] esi +
mov dword ptr [esp+0] offset aDw_cfa_gnu_neg +
mov [esp+arg_8] edi +
mov [esp+arg_4] eax +
call printf  +
jmp loc_431F09  +
***
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+0] esi +
mov [esp+arg_0] eax +
call edx  +
mov esi [ebp-38h] +
mov ebx eax +
mov edi edx +
jmp loc_432739  +
***
mov esi [ebp-44h] +
xor ecx ecx +
mov edx [esi+18h] +
movzx eax byte ptr [esi+46h] +
imul edx ebx +
add edx [esi+20h] +
adc ecx [esi+24h] +
mov [esp+0] eax +
xor eax eax +
call sub_426840  +
mov [esp+arg_4] eax +
mov eax [esi+18h] +
mov dword ptr [esp+0] offset aDw_cfa_advan_2 +
imul eax ebx +
mov [esp+arg_0] eax +
call printf  +
jmp loc_431956  +
***
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+0] esi +
mov [esp+arg_0] eax +
call edx  +
mov esi [ebp-38h] +
mov ebx eax +
mov edi edx +
jmp loc_4327CC  +
***
mov dword ptr [esp+0] offset aUnsupportedOrU +
call sub_437070  +
jmp loc_432855  +
***
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+0] esi +
mov [esp+arg_0] eax +
call edx  +
mov esi [ebp-38h] +
mov ebx eax +
mov edi edx +
jmp loc_43255C  +
***
mov eax 8 +
mov edx ds:dword_472C94 +
mov [esp+0] esi +
mov [esp+arg_0] eax +
call edx  +
mov esi [ebp-38h] +
mov ebx eax +
mov edi edx +
jmp loc_431A70  +
***
mov eax [ebp-44h] +
mov edx ebx +
mov ecx esi +
movzx eax byte ptr [eax+46h] +
mov [esp+0] eax +
xor eax eax +
call sub_426840  +
mov dword ptr [esp+0] offset aDw_cfa_set_loc +
mov [esp+arg_0] eax +
call printf  +
jmp loc_43234C  +
***
lea edx [ebp-24h] +
mov [esp+arg_4] edx +
lea edx [ebp-20h] +
mov [esp+arg_0] edx +
lea edx [ebp-1Ch] +
mov [esp+0] edx +
mov edx [ebp-40h] +
lea ecx [ebp-2Ch] +
mov eax [ebp-44h] +
call sub_42BCE0  +
mov edi [ebp-2Ch] +
test edi edi +
mov [ebp-44h] edi +
mov [ebp-38h] eax +
jz loc_4328B1  +
mov edx [ebp-30h] +
mov eax [ebp-70h] +
mov [edi+4] esi +
lea ecx [edx-1] +
mov [edi] eax +
xor eax eax +
test edx edx +
mov edx [edi+40h] +
cmovnz eax ecx +
cmp eax edx +
cmovnb edx eax +
mov eax edi +
call sub_430D50  +
test eax eax +
js loc_4328B1  +
movzx eax byte ptr [edi+44h] +
mov edi [ebp-68h] +
test al al +
mov [ebp-50h] edi +
jz loc_432F6E  +
and eax 7 +
cmp al 3 +
mov dword ptr [ebp-50h] 4 +
jz loc_432F6E  +
cmp al 4 +
mov dword ptr [ebp-50h] 8 +
jz loc_432F6E  +
mov edi 2 +
cmp al 2 +
mov eax edi +
cmovnz eax ds:dword_472C4C +
mov [ebp-50h] eax +
sub esi [ebp-64h] +
mov dword ptr [esp+0] offset a08lx +
mov [esp+arg_0] esi +
call printf  +
mov eax [ebp-44h] +
mov edx [ebp-58h] +
movzx ecx byte ptr [eax+46h] +
mov eax [ebp-54h] +
call sub_426900  +
mov eax [ebp-5Ch] +
mov ecx [ebp-48h] +
mov edx [ebp-60h] +
call sub_426900  +
mov eax ds:dword_472C64 +
test eax eax +
jz loc_432FE0  +
mov eax [ebp-44h] +
mov ebx [eax+40h] +
mov ecx [eax+1Ch] +
mov edx [eax+18h] +
mov eax [eax+14h] +
mov [esp+arg_C] ebx +
mov [esp+arg_8] ecx +
mov [esp+arg_4] edx +
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aCieSCfDDfDRaD +
call printf  +
mov eax [ebp-44h] +
mov [ebp-70h] eax +
jmp loc_4313B3  +
mov dword ptr [esp+0] offset off_466716 +
call puts  +
mov eax [ebp-1Ch] +
mov dword ptr [esp+0] offset aVersionD_4 +
mov [esp+arg_0] eax +
call printf  +
mov eax [ebp-44h] +
mov eax [eax+14h] +
mov dword ptr [esp+0] offset aAugmentationS +
mov [esp+arg_0] eax +
call printf  +
cmp dword ptr [ebp-1Ch] 3 +
jg loc_433200  +
mov esi [ebp-44h] +
mov eax [esi+18h] +
mov dword ptr [esp+0] offset aCodeAlignmentF +
mov [esp+arg_0] eax +
call printf  +
mov eax [esi+1Ch] +
mov dword ptr [esp+0] offset aDataAlignmentF +
mov [esp+arg_0] eax +
call printf  +
mov eax [esi+40h] +
mov dword ptr [esp+0] offset aReturnAddressC +
mov [esp+arg_0] eax +
call printf  +
mov edi [ebp-20h] +
test edi edi +
jnz loc_4331B7  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
jmp loc_432FD5  +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset a04lx +
call printf  +
jmp loc_43133C  +
mov edx 8 +
mov ecx ds:dword_472C94 +
mov [esp+arg_0] edx +
mov [esp+0] eax +
call ecx  +
mov edi eax +
mov [ebp-54h] eax +
mov eax [ebp-38h] +
mov [ebp-58h] edx +
lea edx [edi+0Ch] +
jmp loc_43295F  +
***
mov edi ds:dword_472C64 +
test edi edi +
jz loc_4318A0  +
mov dword ptr [esp+0] offset aMismatchedDw_c +
call puts  +
mov ecx [ebp-38h] +
jmp loc_431426  +
mov dword ptr [esp+0] offset aDw_cfa_resto_1 +
call puts  +
jmp loc_4323EB  +
***
mov dword ptr [esp+0] offset aDw_cfa_remembe +
call puts  +
jmp loc_432644  +
***
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aProbablyCorrup +
call sub_437070  +
mov eax 4 +
mov ds:byte_472147 4 +
jmp loc_432BB0  +
mov ebx [ebp-40h] +
lea eax [ebp-34h] +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov [esp+0] edx +
mov [esp+arg_8] ebx +
call sub_427E10  +
mov edx [ebp-38h] +
add edx [ebp-34h] +
mov [ebp-24h] edx +
add edx eax +
cmp ebx edx +
mov [ebp-20h] eax +
mov [ebp-38h] edx +
jbe loc_433251  +
test eax eax +
js loc_433251  +
mov eax [ebp-2Ch] +
jmp loc_4312DE  +
mov dword ptr [esp+0] offset aAugmentation_0 +
xor ebx ebx +
call printf  +
mov esi [ebp-20h] +
test esi esi +
jz loc_433193  +
mov eax [ebp-24h] +
movzx eax byte ptr [eax+ebx] +
add ebx 1 +
mov dword ptr [esp+0] offset a02x +
mov [esp+arg_0] eax +
call printf  +
cmp [ebp-20h] ebx +
ja loc_433174  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov dword ptr [ebp-44h] offset unk_472100 +
jmp loc_4313B3  +
mov dword ptr [esp+0] offset aAugmentation_0 +
xor ebx ebx +
call printf  +
mov esi [ebp-20h] +
test esi esi +
jz loc_4331EF  +
lea esi [esi+0] +
mov eax [ebp-24h] +
movzx eax byte ptr [eax+ebx] +
add ebx 1 +
mov dword ptr [esp+0] offset a02x +
mov [esp+arg_0] eax +
call printf  +
cmp [ebp-20h] ebx +
ja loc_4331D0  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
jmp loc_433066  +
mov edi [ebp-44h] +
movzx eax byte ptr [edi+46h] +
mov dword ptr [esp+0] offset aPointerSizeU +
mov [esp+arg_0] eax +
call printf  +
movzx eax byte ptr [edi+47h] +
mov dword ptr [esp+0] offset aSegmentSizeU +
mov [esp+arg_0] eax +
call printf  +
jmp loc_43301F  +
***
mov dword ptr [esp+0] offset aInvalidColumnN +
call sub_437070  +
mov eax [ebp-44h] +
mov ecx [ebp-38h] +
mov [ebp-6Ch] ebx +
mov dword ptr [eax+8] 0 +
jmp loc_431426  +
***
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aCorruptAugment +
call sub_437070  +
mov eax [ebp-40h] +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 0 +
mov [ebp-38h] eax +
jmp loc_433157  +
***
mov dword ptr [esp+0] offset aDw_cfa_def_c_5 +
call printf  +
mov edi [ebp+8] +
xor ecx ecx +
mov edx ds:dword_472C4C +
mov eax [ebp-38h] +
mov [esp+arg_0] ebx +
mov [esp+arg_10] edi +
mov [esp+arg_8] 0 +
mov [esp+arg_C] 0 +
mov [esp+arg_4] 0 +
mov dword ptr [esp+0] 0FFFFFFFFh +
call sub_4283C0  +
mov dword ptr [esp+0] offset asc_466C1E +
call puts  +
add ebx [ebp-38h] +
mov ecx ebx +
jmp loc_431E25  +
***
cmp edi [ebp-40h] +
jnb loc_4332EC  +
mov eax [ebp-40h] +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_431024  +
mov ebx [ebp-2Ch] +
mov dword ptr [ebp-54h] 0 +
mov dword ptr [ebp-58h] 0 +
mov edx offset unk_472100 +
xor eax eax +
mov ecx 12h +
mov edi edx +
test ebx ebx +
stos   +
jz loc_4311B3  +
mov eax [ebp-68h] +
mov [ebp-50h] eax +
jmp loc_432A58  +
mov dword ptr [esp+0] offset aInvalidMaxRegi +
call sub_437070  +
jmp loc_4328B1  +
mov eax [ebp-68h] +
mov ebx [ebp-70h] +
mov [ebp-50h] eax +
jmp loc_432A48  +
mov eax [ebp-68h] +
mov ebx [ebp-74h] +
mov [ebp-50h] eax +
jmp loc_432A48  +
cmp [ebp-40h] ebx +
jbe loc_4332EC  +
mov eax [ebp-40h] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4332EC  +
jmp loc_431054  +
mov eax [ebp-58h] +
or eax [ebp-54h] +
mov dword ptr [ebp-44h] 4 +
jnz loc_431084  +
mov ebx [ebp-2Ch] +
jmp loc_4332FD  +
mov eax [ebp-44h] +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4310B2  +
mov ecx [ebp-78h] +
xor eax eax +
xor edx edx +
mov esp [ebp-7Ch] +
test ecx ecx +
jnz loc_4310CF  +
mov ecx eax +
not ecx  +
or ecx edx +
setz bl  +
cmp dword ptr [ebp-44h] 4 +
setz cl  +
and cl bl +
jnz loc_4310D4  +
and eax edx +
cmp eax 0FFFFFFFFh +
setz cl  +
cmp dword ptr [ebp-44h] 8 +
setz al  +
and ecx eax +
jmp loc_4310D4  +
lea eax [ebp-24h] +
mov [esp+arg_4] eax +
lea eax [ebp-20h] +
mov [esp+arg_0] eax +
lea eax [ebp-1Ch] +
mov [esp+0] eax +
mov edx [ebp-40h] +
lea ecx [ebp-2Ch] +
mov eax [ebp-50h] +
call sub_42BCE0  +
mov ecx [ebp-2Ch] +
test ecx ecx +
jz loc_4310EF  +
mov edx [ebp-30h] +
mov eax [ebp-74h] +
mov [ecx+4] edi +
mov [ebp-44h] ecx +
lea ebx [edx-1] +
mov [ecx] eax +
xor eax eax +
test edx edx +
mov edx [ecx+40h] +
cmovnz eax ebx +
cmp eax edx +
cmovnb edx eax +
mov eax ecx +
call sub_430D50  +
mov ecx [ebp-44h] +
test eax eax +
js loc_433320  +
mov ebx [ebp-2Ch] +
mov edi [ebp-68h] +
movzx eax byte ptr [ebx+44h] +
mov [ebp-50h] edi +
test al al +
jz loc_43346A  +
and eax 7 +
cmp al 3 +
mov dword ptr [ebp-50h] 4 +
jz loc_43346A  +
cmp al 4 +
mov dword ptr [ebp-50h] 8 +
jz loc_43346A  +
mov edi 2 +
cmp al 2 +
mov eax edi +
cmovnz eax ds:dword_472C4C +
mov [ebp-50h] eax +
mov [ebp-74h] ecx +
jmp loc_432A48  +
***
sub esp 18h +
push esi  +
mov esi eax +
push ebx  +
sub esp 0BCh +
mov ebx [eax+0Ch] +
mov eax [eax+18h] +
mov [esp+0C0h+var_AC] edx +
mov edx [esi+1Ch] +
test ebx ebx +
lea ebp [ebx+eax] +
jz loc_4339C6  +
cmp edx 0 +
ja loc_433530  +
cmp eax 17h +
ja loc_433530  +
mov eax [esi+8] +
mov [esp+0C0h+var_C0] offset aSectionSIsTooS +
mov [esp+0C0h+var_BC] eax +
call sub_437070  +
xor eax eax +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [ebx+4] +
cmp ebp edi +
jbe loc_4335D0  +
mov eax 4 +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] ebx +
call ds:dword_472C94  +
lea ecx [ebx+8] +
cmp eax 1 +
mov [esp+0C0h+var_A4] eax +
jbe loc_4342E2  +
cmp ebp ecx +
ja loc_433723  +
cmp ebp edi +
jbe loc_433579  +
mov eax ebp +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_433728  +
lea edi [ebx+0Ch] +
cmp ebp edi +
jbe loc_434302  +
mov [esp+0C0h+var_BC] 4 +
mov [esp+0C0h+var_C0] ecx +
call ds:dword_472C94  +
mov [esp+0C0h+var_A0] 0 +
mov [esp+0C0h+var_84] eax +
lea eax [ebx+10h] +
cmp ebp eax +
mov [esp+0C0h+var_98] eax +
ja loc_433616  +
cmp ebp edi +
jbe loc_4335BC  +
mov eax ebp +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_43361B  +
xor eax eax +
xor edx edx +
mov [esp+0C0h+var_A8] 0 +
jmp loc_433636  +
cmp ebx ebp +
jb loc_433746  +
lea ecx [ebx+8] +
mov [esp+0C0h+var_A4] 0 +
mov [esp+0C0h+var_A0] 0 +
lea edi [ebx+0Ch] +
cmp ebp edi +
jbe loc_4336B1  +
mov [esp+0C0h+var_BC] 4 +
mov [esp+0C0h+var_C0] ecx +
call ds:dword_472C94  +
mov [esp+0C0h+var_84] eax +
lea eax [ebx+10h] +
cmp ebp eax +
mov [esp+0C0h+var_98] eax +
jbe loc_4335B0  +
mov eax 4 +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] edi +
call ds:dword_472C94  +
mov [esp+0C0h+var_A8] eax +
lea edx ds:0[eax*8] +
shl eax 2 +
mov ecx [esp+0C0h+var_98] +
add edx ecx +
add eax edx +
cmp eax ebx +
mov [esp+0C0h+var_90] edx +
mov [esp+0C0h+var_9C] eax +
jb loc_4336FB  +
cmp ecx edx +
ja loc_4336FB  +
mov eax [esp+0C0h+var_A8] +
test eax eax +
setnz byte ptr [esp+0C0h+var_94]  +
cmp ecx edx +
jz loc_4336F0  +
mov eax [esp+0C0h+var_AC] +
test eax eax +
jnz loc_4337D0  +
cmp ebp [esp+0C0h+var_9C] +
jb loc_433940  +
cmp [esp+0C0h+var_A4] 1 +
jz loc_433840  +
cmp [esp+0C0h+var_A4] 2 +
jz loc_433760  +
mov edx [esp+0C0h+var_AC] +
test edx edx +
jnz loc_4339E0  +
add esp 0BCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebp ecx +
jbe loc_4336C5  +
mov eax ebp +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4342BD  +
lea eax [ebx+10h] +
cmp eax ebp +
mov [esp+0C0h+var_98] eax +
jb loc_43430F  +
xor eax eax +
xor edx edx +
mov [esp+0C0h+var_84] 0 +
mov [esp+0C0h+var_A8] 0 +
jmp loc_433636  +
cmp byte ptr [esp+0C0h+var_94] 0 +
jz loc_433669  +
mov eax [esi+8] +
mov ecx [esp+0C0h+var_A8] +
mov [esp+0C0h+var_C0] offset aSectionSIsTo_0 +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_B8] ecx +
call sub_437070  +
add esp 0BCh +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
mov [esp+0C0h+var_A8] ecx +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] edi +
call ds:dword_472C94  +
mov ecx [esp+0C0h+var_A8] +
mov [esp+0C0h+var_A0] eax +
jmp loc_4335EB  +
mov eax ebp +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4335D8  +
jmp loc_433540  +
mov edx [esi+8] +
mov edi offset a_debug_tu_inde +
mov ecx 10h +
mov eax [esp+0C0h+var_A0] +
mov esi edx +
shl eax 2 +
cmps   +
mov esi [esp+0C0h+var_9C] +
mov edi esi +
setb bl  +
setnbe cl  +
sub ecx ebx +
add edi eax +
movsx ecx cl +
mov ebx edi +
mov [esp+0C0h+var_70] edi +
jb loc_4337B4  +
sub ebx esi +
test ebx ebx +
lea esi [ebx+3] +
cmovs ebx esi +
mov [esp+0C0h+var_A4] ebx +
sar [esp+0C0h+var_A4] 2 +
mov edi [esp+0C0h+var_A4] +
cmp edi [esp+0C0h+var_A0] +
jz loc_433AC0  +
mov eax [esp+0C0h+var_A0] +
mov [esp+0C0h+var_C0] offset aOverlargeNumbe +
mov [esp+0C0h+var_BC] eax +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov eax [esi+8] +
mov [esp+0C0h+var_C0] offset aContentsOfTheS +
mov [esp+0C0h+var_BC] eax +
call printf  +
mov edi [esp+0C0h+var_A4] +
mov [esp+0C0h+var_C0] offset aVersionD_1 +
mov [esp+0C0h+var_BC] edi +
call printf  +
cmp edi 1 +
jbe loc_433810  +
mov eax [esp+0C0h+var_A0] +
mov [esp+0C0h+var_C0] offset aNumberOfColumn +
mov [esp+0C0h+var_BC] eax +
call printf  +
mov eax [esp+0C0h+var_84] +
mov [esp+0C0h+var_C0] offset aNumberOfUsedEn +
mov [esp+0C0h+var_BC] eax +
call printf  +
mov eax [esp+0C0h+var_A8] +
mov [esp+0C0h+var_C0] offset aNumberOfSlotsD +
mov [esp+0C0h+var_BC] eax +
call printf  +
jmp loc_433675  +
mov edi [esp+0C0h+var_AC] +
test edi edi +
jz loc_433A72  +
mov edi [esp+0C0h+var_90] +
mov [esp+0C0h+var_A4] 0 +
add edi 4 +
cmp byte ptr [esp+0C0h+var_94] 0 +
jz loc_433DD0  +
mov eax [esp+0C0h+var_98] +
mov ebx [esp+0C0h+var_AC] +
mov [esp+0C0h+var_98] esi +
lea esi [edi-4] +
lea ecx [eax+8] +
cmp ebp ecx +
mov [esp+0C0h+var_A0] ecx +
jnb loc_4338C8  +
mov [esp+0C0h+var_60] 0 +
mov [esp+0C0h+var_5C] 0 +
mov [esp+0C0h+var_58] 0 +
mov [esp+0C0h+var_54] 0 +
add [esp+0C0h+var_A4] 1 +
add edi 4 +
mov eax [esp+0C0h+var_A4] +
cmp [esp+0C0h+var_A8] eax +
jbe loc_433DD0  +
mov eax [esp+0C0h+var_A0] +
lea esi [edi-4] +
lea ecx [eax+8] +
cmp ebp ecx +
mov [esp+0C0h+var_A0] ecx +
jb loc_433880  +
lea ecx [esp+0C0h+var_58] +
mov [esp+0C0h+var_B8] ecx +
lea ecx [esp+0C0h+var_60] +
mov [esp+0C0h+var_C0] eax +
mov [esp+0C0h+var_BC] ecx +
call sub_437460  +
mov eax [esp+0C0h+var_5C] +
or eax [esp+0C0h+var_60] +
jz loc_4342EF  +
cmp ebp edi +
ja loc_433962  +
cmp ebp esi +
ja loc_4339B4  +
mov esi [esp+0C0h+var_9C] +
test ebx ebx +
jnz loc_433A05  +
cmp ebp esi +
jbe loc_433996  +
mov eax esi +
lea esi [esi+4] +
cmp ebp esi +
ja loc_4342B6  +
cmp ebp eax +
ja loc_43423E  +
test ebx ebx +
jz loc_433A46  +
mov [esp+0C0h+var_C0] 0Ah +
call putchar  +
jmp loc_4338A0  +
mov eax [esi+8] +
mov ecx [esp+0C0h+var_A8] +
mov [esp+0C0h+var_C0] offset aSectionSTooSma +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_B8] ecx +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov eax 4 +
mov [esp+0C0h+var_C0] esi +
mov [esp+0C0h+var_BC] eax +
call ds:dword_472C94  +
mov ecx [esp+0C0h+var_9C] +
lea esi [ecx+eax*4] +
cmp ecx esi +
jbe loc_4338FE  +
mov [esp+0C0h+var_C0] offset aSectionIndexPo +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov esi [esp+0C0h+var_98] +
mov eax [esi+8] +
mov [esp+0C0h+var_C0] offset aSectionSTooS_0 +
mov [esp+0C0h+var_BC] eax +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov eax ebp +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4338FA  +
jmp loc_433967  +
mov eax [esi+8] +
mov [esp+0C0h+var_C0] offset aSectionSIsEmpt +
mov [esp+0C0h+var_BC] eax +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov eax [esp+0C0h+var_A4] +
mov [esp+0C0h+var_C0] offset aUnsupportedVer +
mov [esp+0C0h+var_BC] eax +
call printf  +
mov [esp+0C0h+var_C0] 0Ah +
call putchar  +
jmp loc_4336A1  +
lea eax [esp+0C0h+var_50] +
mov edx [esp+0C0h+var_54] +
mov [esp+0C0h+var_B8] eax +
mov eax [esp+0C0h+var_58] +
mov [esp+0C0h+var_BC] edx +
mov edx [esp+0C0h+var_5C] +
mov [esp+0C0h+var_C0] eax +
mov eax [esp+0C0h+var_60] +
call sub_427D80  +
mov [esp+0C0h+var_C0] offset a3dSignature0xS +
mov [esp+0C0h+var_B8] eax +
mov eax [esp+0C0h+var_A4] +
mov [esp+0C0h+var_BC] eax +
call printf  +
jmp loc_433906  +
mov eax ds:dword_472818 +
cmp eax ds:dword_47281C +
jnb loc_433DE1  +
lea edx [eax+1] +
mov ds:dword_472818 edx +
mov edx ds:dword_472820 +
mov dword ptr [edx+eax*4] 0 +
jmp loc_4338A0  +
mov eax ebp +
sub eax [esp+0C0h+var_9C] +
test eax eax +
lea edx [eax+3] +
cmovs eax edx +
mov edx ds:dword_472820 +
sar eax 2 +
test edx edx +
jz loc_4341C4  +
add eax ds:dword_472818 +
mov [esp+0C0h+var_B8] 4 +
mov [esp+0C0h+var_C0] edx +
mov [esp+0C0h+var_BC] eax +
mov ds:dword_47281C eax +
call sub_42C340  +
mov ds:dword_472820 eax +
jmp loc_43384C  +
imul eax [esp+0C0h+var_84] +
mov edi [esp+0C0h+var_70] +
lea esi [edi+eax] +
add eax esi +
cmp ebp eax +
mov [esp+0C0h+var_6C] esi +
jb loc_43418E  +
mov esi [esp+0C0h+var_AC] +
xor eax eax +
test ecx ecx +
setz al  +
mov [esp+0C0h+var_64] eax +
test esi esi +
jnz loc_4340E1  +
mov edx [esp+0C0h+var_64] +
mov eax [esp+0C0h+var_84] +
test edx edx +
jz loc_4340BE  +
mov [esp+0C0h+var_BC] 68h +
mov [esp+0C0h+var_C0] eax +
mov ds:dword_472810 eax +
call sub_433480  +
mov [esp+0C0h+var_74] eax +
mov ds:dword_472808 eax +
cmp byte ptr [esp+0C0h+var_94] 0 +
jz loc_433DF2  +
mov eax [esp+0C0h+var_A4] +
mov ebx [esp+0C0h+var_90] +
mov esi [esp+0C0h+var_98] +
mov [esp+0C0h+var_88] 0 +
shl eax 2 +
mov [esp+0C0h+var_68] eax +
jmp loc_433B72  +
cmp ebp ebx +
jbe loc_433B57  +
mov eax ebp +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_433BB1  +
add [esp+0C0h+var_88] 1 +
mov eax [esp+0C0h+var_88] +
cmp [esp+0C0h+var_A8] eax +
jbe loc_433DF2  +
mov ebx [esp+0C0h+var_78] +
mov esi [esp+0C0h+var_7C] +
lea eax [esi+8] +
cmp ebp eax +
mov [esp+0C0h+var_7C] eax +
jnb loc_433D60  +
mov [esp+0C0h+var_60] 0 +
mov [esp+0C0h+var_5C] 0 +
mov [esp+0C0h+var_58] 0 +
mov [esp+0C0h+var_54] 0 +
lea eax [ebx+4] +
cmp ebp eax +
mov [esp+0C0h+var_78] eax +
jbe loc_433B47  +
mov eax 4 +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] ebx +
call ds:dword_472C94  +
test eax eax +
mov edi eax +
jz loc_433B57  +
cmp [esp+0C0h+var_84] eax +
jb loc_4341A5  +
mov eax [esp+0C0h+var_AC] +
test eax eax +
jz loc_433D80  +
lea ebx [edi+3FFFFFFFh] +
mov eax [esp+0C0h+var_70] +
imul ebx [esp+0C0h+var_68] +
add ebx eax +
cmp ebx ebp +
ja loc_433DAE  +
cmp ebx eax +
jb loc_433DAE  +
lea eax [esp+0C0h+var_50] +
mov edx [esp+0C0h+var_54] +
mov [esp+0C0h+var_B8] eax +
mov eax [esp+0C0h+var_58] +
mov [esp+0C0h+var_BC] edx +
mov edx [esp+0C0h+var_5C] +
mov [esp+0C0h+var_C0] eax +
mov eax [esp+0C0h+var_60] +
call sub_427D80  +
mov [esp+0C0h+var_C0] offset a3d0xS +
mov [esp+0C0h+var_B8] eax +
mov eax [esp+0C0h+var_88] +
mov [esp+0C0h+var_BC] eax +
call printf  +
mov esi [esp+0C0h+var_A4] +
test esi esi +
jz loc_433D42  +
imul edi edi +
mov eax [esp+0C0h+var_74] +
mov edx ebx +
xor ebx ebx +
mov esi ebx +
lea ebx [edx+4] +
lea eax [eax+edi-68h] +
cmp ebp ebx +
mov edi [esp+0C0h+var_9C] +
mov [esp+0C0h+var_8C] eax +
ja loc_433CC8  +
cmp ebp edx +
mov [esp+0C0h+var_A0] 0 +
jbe loc_433C7B  +
mov eax ebp +
sub eax edx +
lea ecx [eax-1] +
cmp ecx 7 +
jbe loc_433CCD  +
mov ecx [esp+0C0h+var_AC] +
test ecx ecx +
jnz loc_433CE6  +
lea ecx [edi+4] +
cmp ebp ecx +
ja loc_433D00  +
cmp ebp edi +
jbe loc_433C9A  +
mov eax ebp +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_433D05  +
xor edx edx +
mov eax [esp+0C0h+var_8C] +
mov edi [esp+0C0h+var_A0] +
mov dword ptr [eax+edx*8+0Ch] 0 +
mov [eax+edx*8+8] edi +
add esi 1 +
mov edi ecx +
cmp [esp+0C0h+var_A4] esi +
jz loc_433D42  +
mov edx ebx +
lea ebx [edx+4] +
cmp ebp ebx +
jbe loc_433C63  +
mov eax 4 +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] edx +
call ds:dword_472C94  +
mov ecx [esp+0C0h+var_AC] +
test ecx ecx +
mov [esp+0C0h+var_A0] eax +
jz loc_433C83  +
mov eax [esp+0C0h+var_A0] +
mov [esp+0C0h+var_C0] offset a8d +
mov [esp+0C0h+var_BC] eax +
call printf  +
lea ecx [edi+4] +
jmp loc_433CB0  +
mov eax 4 +
mov [esp+0C0h+var_80] ecx +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] edi +
call ds:dword_472C94  +
mov ecx [esp+0C0h+var_80] +
cmp eax 7 +
mov edx eax +
jbe loc_433C9C  +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] offset aOverlargeDwarf +
mov [esp+0C0h+var_A0] ecx +
call sub_437070  +
mov ecx [esp+0C0h+var_A0] +
jmp loc_433CB0  +
mov ebx [esp+0C0h+var_AC] +
test ebx ebx +
jz loc_433B57  +
mov [esp+0C0h+var_C0] 0Ah +
call putchar  +
jmp loc_433B57  +
lea eax [esp+0C0h+var_58] +
mov [esp+0C0h+var_B8] eax +
lea eax [esp+0C0h+var_60] +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] esi +
call sub_437460  +
jmp loc_433BA1  +
imul eax edi +
mov ecx [esp+0C0h+var_74] +
mov edx [esi] +
lea ebx [edi+3FFFFFFFh] +
imul ebx [esp+0C0h+var_68] +
add ebx [esp+0C0h+var_70] +
lea eax [ecx+eax-68h] +
mov [eax] edx +
mov edx [esi+4] +
mov [eax+4] edx +
jb loc_433DAE  +
cmp ebx ebp +
jbe loc_433C37  +
mov eax [esp+0C0h+var_A4] +
mov [esp+0C0h+var_BC] edi +
mov [esp+0C0h+var_C0] offset aRowIndexUNumCo +
mov [esp+0C0h+var_B8] eax +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov eax [esp+0C0h+var_AC] +
test eax eax +
jnz loc_4339F4  +
jmp loc_4336A1  +
mov [esp+0C0h+var_C0] offset aInternalErrorO +
call sub_436A70  +
jmp loc_4338A0  +
mov eax [esp+0C0h+var_AC] +
test eax eax +
jnz loc_4341FE  +
mov eax [esp+0C0h+var_A4] +
xor edi edi +
mov edx [esp+0C0h+var_9C] +
mov esi [esp+0C0h+var_AC] +
test eax eax +
jnz loc_433E39  +
jmp loc_433E73  +
cmp ebp edx +
mov [esp+0C0h+var_A0] 0 +
jbe loc_433E2A  +
mov ecx ebp +
sub ecx edx +
lea eax [ecx-1] +
cmp eax 7 +
jbe loc_433E45  +
test esi esi +
jnz loc_433E58  +
add edi 1 +
cmp [esp+0C0h+var_A4] edi +
jz loc_433E73  +
mov edx ebx +
lea ebx [edx+4] +
cmp ebp ebx +
jbe loc_433E12  +
mov ecx 4 +
mov [esp+0C0h+var_BC] ecx +
mov [esp+0C0h+var_C0] edx +
call ds:dword_472C94  +
mov [esp+0C0h+var_A0] eax +
jmp loc_433E2A  +
mov eax [esp+0C0h+var_A0] +
call sub_427660  +
mov [esp+0C0h+var_C0] offset a8s +
mov [esp+0C0h+var_BC] eax +
call printf  +
jmp loc_433E2E  +
mov eax [esp+0C0h+var_AC] +
test eax eax +
jnz loc_4341ED  +
cmp byte ptr [esp+0C0h+var_94] 0 +
jz loc_433DD0  +
mov eax [esp+0C0h+var_A4] +
mov ebx [esp+0C0h+var_90] +
mov [esp+0C0h+var_94] 0 +
shl eax 2 +
mov [esp+0C0h+var_84] eax +
mov eax [esp+0C0h+var_98] +
jmp loc_433ED2  +
cmp ebp ebx +
jbe loc_433EB7  +
mov eax ebp +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_433F11  +
add [esp+0C0h+var_94] 1 +
mov eax [esp+0C0h+var_94] +
cmp [esp+0C0h+var_A8] eax +
jbe loc_433DD0  +
mov ebx [esp+0C0h+var_88] +
mov eax [esp+0C0h+var_8C] +
lea ecx [eax+8] +
cmp ebp ecx +
mov [esp+0C0h+var_8C] ecx +
jnb loc_434060  +
mov [esp+0C0h+var_60] 0 +
mov [esp+0C0h+var_5C] 0 +
mov [esp+0C0h+var_58] 0 +
mov [esp+0C0h+var_54] 0 +
lea eax [ebx+4] +
cmp ebp eax +
mov [esp+0C0h+var_88] eax +
jbe loc_433EA7  +
mov eax 4 +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] ebx +
call ds:dword_472C94  +
test eax eax +
mov esi eax +
jz loc_433EB7  +
lea ebx [eax+3FFFFFFFh] +
mov eax [esp+0C0h+var_AC] +
imul ebx [esp+0C0h+var_84] +
add ebx [esp+0C0h+var_6C] +
test eax eax +
jnz loc_43407D  +
mov edi [esp+0C0h+var_A4] +
test edi edi +
jz loc_434042  +
imul esi esi +
mov eax [esp+0C0h+var_74] +
mov edx ebx +
xor ebx ebx +
mov edi [esp+0C0h+var_9C] +
lea eax [eax+esi-68h] +
mov esi ebx +
lea ebx [edx+4] +
cmp ebp ebx +
mov [esp+0C0h+var_98] eax +
ja loc_433FCD  +
nop   +
lea esi [esi+0] +
cmp ebp edx +
mov [esp+0C0h+var_A0] 0 +
jbe loc_433F88  +
mov eax ebp +
sub eax edx +
lea ecx [eax-1] +
cmp ecx 7 +
jbe loc_433FD2  +
mov ecx [esp+0C0h+var_AC] +
test ecx ecx +
jnz loc_433FEB  +
lea ecx [edi+4] +
cmp ebp ecx +
ja loc_434004  +
cmp ebp edi +
jbe loc_433FA7  +
mov eax ebp +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_434009  +
xor edx edx +
mov eax [esp+0C0h+var_98] +
mov edi [esp+0C0h+var_A0] +
mov [eax+edx*4+48h] edi +
add esi 1 +
mov edi ecx +
cmp [esp+0C0h+var_A4] esi +
jz loc_434042  +
mov edx ebx +
lea ebx [edx+4] +
cmp ebp ebx +
jbe loc_433F70  +
mov eax 4 +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] edx +
call ds:dword_472C94  +
mov ecx [esp+0C0h+var_AC] +
test ecx ecx +
mov [esp+0C0h+var_A0] eax +
jz loc_433F90  +
mov eax [esp+0C0h+var_A0] +
mov [esp+0C0h+var_C0] offset a8d +
mov [esp+0C0h+var_BC] eax +
call printf  +
lea ecx [edi+4] +
jmp loc_433FB5  +
mov eax 4 +
mov [esp+0C0h+var_90] ecx +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] edi +
call ds:dword_472C94  +
mov ecx [esp+0C0h+var_90] +
cmp eax 7 +
mov edx eax +
jbe loc_433FA9  +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] offset aOverlargeDwarf +
mov [esp+0C0h+var_A0] ecx +
call sub_437070  +
mov ecx [esp+0C0h+var_A0] +
jmp loc_433FB5  +
mov ebx [esp+0C0h+var_AC] +
test ebx ebx +
jz loc_433EB7  +
mov [esp+0C0h+var_C0] 0Ah +
call putchar  +
jmp loc_433EB7  +
lea edi [esp+0C0h+var_58] +
lea esi [esp+0C0h+var_60] +
mov [esp+0C0h+var_B8] edi +
mov [esp+0C0h+var_BC] esi +
mov [esp+0C0h+var_C0] eax +
call sub_437460  +
jmp loc_433F01  +
lea eax [esp+0C0h+var_50] +
mov edx [esp+0C0h+var_54] +
mov [esp+0C0h+var_B8] eax +
mov eax [esp+0C0h+var_58] +
mov [esp+0C0h+var_BC] edx +
mov edx [esp+0C0h+var_5C] +
mov [esp+0C0h+var_C0] eax +
mov eax [esp+0C0h+var_60] +
call sub_427D80  +
mov [esp+0C0h+var_C0] offset a3d0xS +
mov [esp+0C0h+var_B8] eax +
mov eax [esp+0C0h+var_94] +
mov [esp+0C0h+var_BC] eax +
call printf  +
jmp loc_433F3F  +
mov [esp+0C0h+var_BC] 68h +
mov [esp+0C0h+var_C0] eax +
mov ds:dword_472814 eax +
call sub_433480  +
mov [esp+0C0h+var_74] eax +
mov ds:dword_47280C eax +
jmp loc_433B1F  +
mov [esp+0C0h+var_C0] offset aOffsetTable +
call puts  +
mov ecx [esp+0C0h+var_64] +
mov edx offset aDwo_id +
mov eax offset aSignature +
mov [esp+0C0h+var_C0] offset aSlot16s +
test ecx ecx +
cmovz eax edx +
xor edi edi +
mov [esp+0C0h+var_BC] eax +
call printf  +
mov ebx [esp+0C0h+var_A0] +
mov edx [esp+0C0h+var_9C] +
test ebx ebx +
jz loc_434175  +
mov eax [esp+0C0h+var_A4] +
mov [esp+0C0h+var_A0] eax +
jmp loc_43415A  +
xor eax eax +
cmp ebp edx +
jbe loc_43413A  +
mov ecx ebp +
sub ecx edx +
lea esi [ecx-1] +
cmp esi 7 +
jbe loc_434166  +
call sub_427660  +
add edi 1 +
mov [esp+0C0h+var_C0] offset a8s +
mov [esp+0C0h+var_BC] eax +
call printf  +
cmp [esp+0C0h+var_A0] edi +
jz loc_434175  +
mov edx ebx +
lea ebx [edx+4] +
cmp ebp ebx +
jbe loc_434128  +
mov ecx 4 +
mov [esp+0C0h+var_BC] ecx +
mov [esp+0C0h+var_C0] edx +
call ds:dword_472C94  +
jmp loc_43413A  +
mov [esp+0C0h+var_C0] 0Ah +
call putchar  +
mov [esp+0C0h+var_74] 0 +
jmp loc_433B1F  +
mov [esp+0C0h+var_BC] edx +
mov [esp+0C0h+var_C0] offset aSectionSTooS_1 +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov eax [esp+0C0h+var_84] +
mov [esp+0C0h+var_BC] edi +
mov [esp+0C0h+var_C0] offset aRowIndexUIsLar +
mov [esp+0C0h+var_B8] eax +
call sub_437070  +
xor eax eax +
jmp loc_433523  +
mov [esp+0C0h+var_BC] 4 +
mov [esp+0C0h+var_C0] eax +
mov ds:dword_47281C eax +
mov ds:dword_472818 0 +
call sub_42C2E0  +
mov ds:dword_472820 eax +
jmp loc_43384C  +
mov [esp+0C0h+var_C0] 0Ah +
call putchar  +
jmp loc_433E7F  +
mov [esp+0C0h+var_C0] 0Ah +
call putchar  +
mov [esp+0C0h+var_C0] offset aSizeTable +
call puts  +
mov edx [esp+0C0h+var_64] +
mov eax offset aSignature +
mov [esp+0C0h+var_C0] offset aSlot16s +
test edx edx +
mov edx offset aDwo_id +
cmovz eax edx +
mov [esp+0C0h+var_BC] eax +
call printf  +
jmp loc_433DFE  +
mov edx ebp +
sub edx eax +
lea ecx [edx-1] +
cmp ecx 7 +
ja loc_433923  +
mov [esp+0C0h+var_BC] edx +
mov [esp+0C0h+var_C0] eax +
call ds:dword_472C94  +
test eax eax +
jz loc_433923  +
test ebx ebx +
jz loc_434280  +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] offset aD_4 +
call printf  +
jmp loc_433906  +
mov edx ds:dword_472818 +
cmp edx ds:dword_47281C +
jnb loc_4342A5  +
lea ecx [edx+1] +
mov ds:dword_472818 ecx +
mov ecx ds:dword_472820 +
mov [ecx+edx*4] eax +
jmp loc_433906  +
mov [esp+0C0h+var_C0] offset aInternalErrorO +
call sub_436A70  +
jmp loc_433906  +
mov edx 4 +
jmp loc_43424E  +
mov [esp+0C0h+var_BC] eax +
mov [esp+0C0h+var_C0] ecx +
call ds:dword_472C94  +
mov [esp+0C0h+var_84] eax +
lea eax [ebx+10h] +
cmp ebp eax +
mov [esp+0C0h+var_98] eax +
jbe loc_4335BC  +
jmp loc_433616  +
mov [esp+0C0h+var_A0] 0 +
jmp loc_4335EB  +
mov eax [esp+0C0h+var_54] +
or eax [esp+0C0h+var_58] +
jnz loc_4338EE  +
jmp loc_4338A0  +
mov [esp+0C0h+var_A0] 0 +
jmp loc_4336C5  +
mov [esp+0C0h+var_84] 0 +
jmp loc_433616  +
***
sub esp 18h +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] 22h +
call sub_421180  +
test eax eax +
jnz loc_434360  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 23h +
call sub_421180  +
test eax eax +
jnz loc_434370  +
mov ds:dword_472824 1 +
add esp 18h +
pop ebx  +
retn   +
xor edx edx +
mov eax offset off_441F80 +
call sub_4334E0  +
jmp loc_43433A  +
xor edx edx +
mov eax offset off_441FC0 +
call sub_4334E0  +
mov ds:dword_472824 1 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 4 +
mov eax ds:dword_472824 +
mov esi [esp+4+arg_4] +
test eax eax +
jz loc_434410  +
mov ebx ds:dword_472818 +
test ebx ebx +
jz loc_4343CE  +
mov eax ds:dword_472820 +
cmp [eax] esi +
jz loc_4343FD  +
xor ecx ecx +
jmp loc_4343C7  +
cmp [eax+edx*4] esi +
jz loc_4343D6  +
mov ecx edx +
lea edx [ecx+1] +
cmp edx ebx +
jnz loc_4343C0  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
test edx edx +
jz loc_4343FF  +
add ecx 40000000h +
mov esi [eax+ecx*4] +
lea ebx ds:0[ecx*4] +
test esi esi +
jnz loc_4343F8  +
jmp loc_43441B  +
mov ecx [eax+edx*4-4] +
test ecx ecx +
jz loc_434407  +
sub edx 1 +
jnz loc_4343F0  +
xor edx edx +
add eax edx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
shl edx 2 +
add eax edx +
jmp loc_434401  +
mov eax [esp+4+arg_0] +
call sub_434320  +
jmp loc_4343A2  +
lea edx [ebx+4] +
add eax edx +
jmp loc_434401  +
***
mov ecx ds:dword_472830 +
mov ds:dword_472838 0 +
mov ds:dword_472834 0 +
cmp ecx 0FFFFFFFFh +
jz loc_4344F4  +
push ebx  +
mov ebx eax +
sub esp 18h +
test ecx ecx +
mov eax ecx +
jnz loc_4344C1  +
mov eax ds:dword_472824 +
test eax eax +
jz loc_4344F7  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] 3 +
call sub_421180  +
test eax eax +
jz loc_4344A1  +
xor ecx ecx +
mov edx ebx +
mov [esp+1Ch+var_18] 0 +
mov eax offset off_4417C0 +
mov [esp+1Ch+var_1C] 1 +
call sub_42E6A0  +
test eax eax +
jnz loc_4344EA  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] 17h +
call sub_421180  +
test eax eax +
jnz loc_4344C6  +
mov ds:dword_472830 0FFFFFFFFh +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov [esp+1Ch+var_18] 0 +
mov ecx 18h +
mov edx ebx +
mov [esp+1Ch+var_1C] 1 +
mov eax offset off_441CC0 +
call sub_42E6A0  +
test eax eax +
jz loc_4344B5  +
mov eax ds:dword_472830 +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
retn   +
mov eax ebx +
call sub_434320  +
nop   +
jmp loc_43446C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov edx [esp+50h] +
mov eax [eax+1Ch] +
or eax [edx+18h] +
jz loc_434732  +
mov eax [esp+54h] +
call sub_434430  +
test eax eax +
mov eax [esp+50h] +
mov eax [eax+8] +
mov [esp+4] eax +
jz loc_43471C  +
mov dword ptr [esp] offset aContentsOfTheS +
call printf  +
mov eax ds:dword_472830 +
mov dword ptr [esp+4] 4 +
add eax 1 +
mov [esp] eax +
call loc_438CD0  +
mov [esp+28h] eax +
mov eax ds:dword_472830 +
test eax eax +
jz loc_43474F  +
xor edi edi +
xor ebx ebx +
mov ebp [esp+50h] +
jmp loc_4345AC  +
ja loc_43458D  +
cmp ecx [ebp+18h] +
jb loc_4345CB  +
mov [esp+8] ebx +
mov [esp+4] ecx +
mov dword ptr [esp] offset aCorruptAddress +
call sub_437070  +
add ebx 1 +
cmp ebx ds:dword_472830 +
jnb loc_4345E0  +
lea eax [ebx+ebx*4] +
shl eax 4 +
add eax ds:dword_472828 +
mov ecx [eax+20h] +
mov edx [eax+24h] +
mov esi ecx +
not esi  +
or esi edx +
jz loc_4345A1  +
cmp edx [ebp+1Ch] +
jnb loc_434586  +
mov edx [esp+28h] +
add ebx 1 +
mov [edx+edi*4] eax +
add edi 1 +
cmp ebx ds:dword_472830 +
jb loc_4345AC  +
mov dword ptr [esp] 50h +
mov esi edi +
mov [esp+2Ch] edi +
mov edi [esp+28h] +
call sub_438CA0  +
mov edx [esp+50h] +
lea ebx [edi+esi*4] +
mov ecx [edx+18h] +
mov [ebx] eax +
mov ebx [edx+1Ch] +
mov [eax+20h] ecx +
mov [eax+24h] ebx +
mov dword ptr [esp+0Ch] offset loc_426600 +
mov dword ptr [esp+8] 4 +
mov [esp+4] esi +
mov [esp] edi +
call qsort  +
test esi esi +
jz loc_4346F7  +
mov dword ptr [esp+24h] 0 +
mov esi [esp+28h] +
mov ebx [esp+24h] +
mov eax [esi+ebx*4] +
mov edx [eax+10h] +
mov ecx [eax+14h] +
mov edi [eax] +
mov eax offset asc_463786 +
mov dword ptr [esp] 0 +
call sub_426840  +
mov dword ptr [esp] offset aForCompilation +
mov [esp+4] eax +
call printf  +
mov dword ptr [esp] offset aIndexAddress +
call puts  +
mov eax [esp+50h] +
add dword ptr [esp+24h] 1 +
mov edx [esp+24h] +
mov ebp [eax+0Ch] +
mov eax [esi+ebx*4] +
mov ebx [eax+20h] +
mov eax [esi+edx*4] +
xor esi esi +
add ebx ebp +
add ebp [eax+20h] +
cmp ebx ebp +
jnb loc_4346E9  +
nop   +
lea esi [esi+0] +
mov [esp] ebx +
add ebx edi +
mov [esp+4] edi +
call ds:dword_472C94  +
mov [esp+4] esi +
add esi 1 +
mov dword ptr [esp] offset aD_8 +
mov [esp+1Ch] edx +
mov [esp+18h] eax +
call printf  +
mov eax [esp+18h] +
mov ecx edi +
mov edx [esp+1Ch] +
call sub_426900  +
mov dword ptr [esp] 0Ah +
call putchar  +
cmp ebp ebx +
ja loc_4346A0  +
mov eax [esp+2Ch] +
cmp [esp+24h] eax +
jnz loc_434637  +
mov dword ptr [esp] 0Ah +
call putchar  +
mov eax [esp+28h] +
mov [esp] eax +
call free  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset aUnableToLoadPa +
call sub_437070  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edx+8] +
mov dword ptr [esp] offset aTheSSectionIsE +
mov [esp+4] eax +
call printf  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 50h +
call sub_438CA0  +
mov ecx [esp+50h] +
mov edx [esp+28h] +
mov ebx [ecx+1Ch] +
mov ecx [ecx+18h] +
mov [edx] eax +
mov [eax+24h] ebx +
mov [eax+20h] ecx +
mov dword ptr [esp+0Ch] offset loc_426600 +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 0 +
mov [esp] edx +
call qsort  +
jmp loc_4346F7  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [ebp+8] +
mov eax [eax+0Ch] +
mov [ebp-5Ch] eax +
mov eax [ebp+8] +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_434B24  +
mov eax [ebp+0Ch] +
call sub_434430  +
test eax eax +
jz loc_434CBF  +
mov edx ds:dword_472830 +
test edx edx +
jz loc_434CDF  +
mov eax ds:dword_472828 +
lea ecx [edx+edx*4] +
xor edx edx +
shl ecx 4 +
add ecx eax +
lea esi [esi+0] +
mov esi [eax+44h] +
add eax 50h +
add esi edx +
cmp eax ecx +
mov edx esi +
jnz loc_4347F0  +
test esi esi +
mov [ebp-60h] esi +
jz loc_434CDF  +
shl edx 3 +
mov [esp] edx +
call sub_438CA0  +
mov [ebp-64h] eax +
mov eax ds:dword_472830 +
test eax eax +
jz loc_43486F  +
mov ecx ds:dword_472828 +
lea edi [eax+eax*4] +
shl edi 4 +
mov eax [ebp-64h] +
mov esi [ecx+44h] +
add edi ecx +
test esi esi +
jz loc_434866  +
mov edx [ecx+40h] +
lea esi [eax+esi*8] +
mov [ebp-20h] ebx +
mov ebx [edx] +
add eax 8 +
add edx 8 +
mov [eax-4] ecx +
mov [eax-8] ebx +
cmp eax esi +
jnz loc_434841  +
add ecx 50h +
mov ebx [ebp-20h] +
cmp ecx edi +
jz loc_43486F  +
mov eax esi +
mov esi [ecx+44h] +
test esi esi +
jnz loc_434838  +
add ecx 50h +
mov esi eax +
cmp ecx edi +
jnz loc_43485D  +
mov dword ptr [esp+0Ch] offset loc_426610 +
mov dword ptr [esp+8] 8 +
mov eax [ebp-60h] +
mov [esp+4] eax +
mov eax [ebp-64h] +
mov [esp] eax +
call qsort  +
mov esi ds:dword_4720E0 +
test esi esi +
jnz loc_434C93  +
mov eax [ebp+8] +
mov edi [ebp-5Ch] +
mov eax [eax+8] +
add ebx edi +
mov esi edi +
mov [ebp-2Ch] ebx +
mov dword ptr [esp] offset aContentsOfTheS +
mov [esp+4] eax +
call printf  +
mov dword ptr [esp] offset aOffsetBeginEnd +
call puts  +
mov eax [ebp-64h] +
mov dword ptr [ebp-54h] 0 +
mov [ebp-58h] eax +
jmp loc_434903  +
mov eax [ebp-34h] +
cmp [ebp-2Ch] eax +
ja loc_434BF0  +
add dword ptr [ebp-54h] 1 +
mov eax [ebp-60h] +
add dword ptr [ebp-58h] 8 +
cmp [ebp-54h] eax +
jz loc_434B00  +
mov esi [ebp-50h] +
mov ebx [ebp-58h] +
mov eax [ebx+4] +
mov ebx [ebx] +
mov ecx [eax] +
mov [ebp-48h] ebx +
mov ebx [eax+18h] +
lea eax [ecx-2] +
cmp eax 6 +
mov [ebp-30h] ecx +
ja loc_434C30  +
mov ecx ds:dword_4720E0 +
mov eax [ebp-5Ch] +
add eax [ebp-48h] +
test ecx ecx +
mov [ebp-50h] eax +
jz loc_434978  +
mov edx [ebp-54h] +
test edx edx +
jz loc_434978  +
cmp eax edi +
ja loc_434C66  +
jnb loc_434978  +
mov ecx [ebp-50h] +
cmp ecx esi +
jz loc_434CF8  +
mov eax [ebp+8] +
mov eax [eax+8] +
mov [esp+0Ch] eax +
mov eax ecx +
mov ecx [ebp-5Ch] +
mov dword ptr [esp] offset aThereIsAnOverl +
sub eax ecx +
sub edi ecx +
mov [esp+8] eax +
mov [esp+4] edi +
call sub_437070  +
mov edi [ebp-50h] +
cmp [ebp-2Ch] edi +
jbe loc_434D00  +
mov [ebp-4Ch] ebx +
mov ebx [ebp-30h] +
mov eax 0FFFFFFFEh +
mov edx 0FFFFFFFFh +
xor esi esi +
mov [ebp-34h] edi +
lea ecx ds:0FFFFFFFFh[ebx*8] +
shld edx eax +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax esi +
mov ecx eax +
mov eax edx +
not eax  +
not ecx  +
mov [ebp-44h] eax +
mov eax ebx +
mov [ebp-38h] ecx +
add eax eax +
mov ecx ebx +
mov ebx edi +
mov [ebp-3Ch] eax +
add ebx ecx +
lea esi [esi+0] +
cmp [ebp-2Ch] ebx +
mov esi esp +
mov edi ebx +
jbe loc_4348E0  +
mov eax [ebp-30h] +
lea edx [eax-1] +
cmp edx 7 +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-1Ch] 0 +
ja loc_434A0E  +
mov edx ds:dword_472C94 +
mov [esp+4] eax +
mov eax [ebp-34h] +
mov [esp] eax +
call edx  +
mov [ebp-20h] eax +
mov [ebp-1Ch] edx +
mov ecx [ebp-2Ch] +
mov esp esi +
cmp ecx ebx +
jbe loc_4348EC  +
mov eax [ebp-34h] +
add eax [ebp-3Ch] +
cmp ecx eax +
mov [ebp-40h] eax +
mov [ebp-34h] eax +
ja loc_434BD0  +
mov eax ecx +
sub eax ebx +
jnz loc_434BD3  +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 0 +
mov eax [ebp-48h] +
mov dword ptr [esp] offset a8_8lx +
mov [esp+4] eax +
call printf  +
mov edx [ebp-28h] +
mov ecx [ebp-24h] +
mov esi [ebp-20h] +
mov edi [ebp-1Ch] +
mov eax edx +
mov edx ecx +
or eax esi +
or edx edi +
or edx eax +
jz loc_434C52  +
mov esi [ebp-20h] +
mov edi [ebp-1Ch] +
mov eax [ebp-38h] +
mov ecx [ebp-44h] +
mov edx edi +
and eax esi +
xor eax [ebp-38h] +
and edx ecx +
xor edx ecx +
or edx eax +
jnz loc_434B41  +
mov esi [ebp-28h] +
mov edi [ebp-24h] +
mov eax [ebp-38h] +
mov edx edi +
and eax esi +
and edx ecx +
xor eax [ebp-38h] +
xor edx ecx +
or edx eax +
jz loc_434B41  +
mov ecx [ebp-30h] +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
mov [ebp-4Ch] esi +
call sub_426900  +
mov ecx [ebp-30h] +
mov eax esi +
mov edx edi +
call sub_426900  +
mov dword ptr [esp] offset aBaseAddress +
call puts  +
mov eax [ebp-40h] +
add ebx [ebp-3Ch] +
cmp [ebp-2Ch] eax +
ja loc_4349D0  +
add dword ptr [ebp-54h] 1 +
mov eax [ebp-60h] +
add dword ptr [ebp-58h] 8 +
cmp [ebp-54h] eax +
mov edi [ebp-40h] +
jnz loc_434900  +
mov dword ptr [esp] 0Ah +
call putchar  +
mov eax [ebp-64h] +
mov [esp] eax +
call free  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+8] +
mov dword ptr [esp] offset aTheSSectionIsE +
mov [esp+4] eax +
call printf  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [ebp-4Ch] +
xor edi edi +
mov eax [ebp-20h] +
mov edx [ebp-1Ch] +
mov ecx [ebp-30h] +
add eax esi +
adc edx edi +
call sub_426900  +
mov ecx [ebp-30h] +
mov eax esi +
mov edx edi +
add eax [ebp-28h] +
adc edx [ebp-24h] +
call sub_426900  +
mov esi [ebp-20h] +
mov edi [ebp-1Ch] +
mov edx [ebp-24h] +
mov eax [ebp-28h] +
xor edx edi +
xor eax esi +
or edx eax +
jz loc_434C00  +
mov eax [ebp-24h] +
cmp [ebp-1Ch] eax +
jb loc_434BBC  +
ja loc_434B94  +
mov eax [ebp-28h] +
cmp [ebp-20h] eax +
jbe loc_434BBC  +
mov eax ds:_iob +
mov dword ptr [esp+8] 0Dh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aStartEnd +
add eax 20h +
mov [esp+0Ch] eax +
call fwrite  +
mov dword ptr [esp] 0Ah +
call putchar  +
jmp loc_434ADA  +
***
mov eax [ebp-30h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4373D0  +
mov [ebp-28h] eax +
mov [ebp-24h] edx +
jmp loc_434A47  +
***
mov eax [ebp-2Ch] +
sub eax [ebp-34h] +
jmp loc_4349E0  +
***
mov eax ds:_iob +
mov dword ptr [esp+8] 0Eh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aStartEnd_0 +
add eax 20h +
mov [esp+0Ch] eax +
call fwrite  +
jmp loc_434BBC  +
***
mov eax [ebp-48h] +
mov [esp+8] eax +
mov eax [ebp-30h] +
mov dword ptr [esp] offset aCorruptPointer +
mov [esp+4] eax +
call sub_437070  +
mov [ebp-50h] esi +
jmp loc_4348EC  +
***
mov dword ptr [esp] offset aEndOfList +
call puts  +
mov edi [ebp-40h] +
jmp loc_4348EC  +
***
mov eax [ebp+8] +
mov eax [eax+8] +
mov [esp+0Ch] eax +
mov ecx [ebp-5Ch] +
mov eax [ebp-50h] +
mov dword ptr [esp] offset aThereIsAHole0x +
sub edi ecx +
sub eax ecx +
mov [esp+8] eax +
mov [esp+4] edi +
call sub_437070  +
jmp loc_434978  +
***
mov eax [ebp-64h] +
mov eax [eax] +
test eax eax +
jz loc_43489F  +
mov edi [ebp+8] +
mov edx [edi+8] +
mov [esp+8] eax +
mov dword ptr [esp] offset aRangeListsInSS +
mov [esp+4] edx +
call sub_437070  +
jmp loc_43489F  +
***
mov eax [ebp+8] +
mov eax [eax+8] +
mov dword ptr [esp] offset aUnableToLoadPa +
mov [esp+4] eax +
call sub_437070  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset aNoRangeListsIn +
call puts  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [ebp-50h] esi +
jmp loc_4348EC  +
***
mov edi [ebp-50h] +
jmp loc_4348EC  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [ebp+8] +
mov eax [eax+0Ch] +
mov [ebp-8Ch] eax +
mov eax [ebp+8] +
mov ebx [eax+8] +
mov dword ptr [esp+4] 2Eh +
mov [esp] ebx +
call strrchr  +
test eax eax +
jz loc_435A90  +
mov esi eax +
mov edi offset a_dwo +
mov ecx 5 +
cmps   +
setz al  +
movzx eax al +
mov [ebp-98h] eax +
mov eax [ebp+8] +
mov eax [eax+18h] +
test eax eax +
mov [ebp-90h] eax +
jz loc_435A26  +
mov eax [ebp+0Ch] +
call sub_434430  +
test eax eax +
jz loc_435A40  +
mov eax ds:dword_472830 +
test eax eax +
mov [ebp-40h] eax +
jz loc_435B08  +
mov eax ds:dword_472828 +
xor edx edx +
mov dword ptr [ebp-7Ch] 1 +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-88h] 0 +
mov [ebp-4Ch] eax +
mov [ebp-30h] eax +
xor eax eax +
mov dword ptr [ebp-38h] 0 +
jmp loc_434DEC  +
cmp [ebp-48h] eax +
jbe loc_434E43  +
lea esi [esi+0] +
mov dword ptr [ebp-7Ch] 0 +
mov eax 1 +
add dword ptr [ebp-34h] 1 +
mov ebx [ebp-40h] +
add dword ptr [ebp-30h] 50h +
cmp [ebp-34h] ebx +
jz loc_434E62  +
mov ebx [ebp-30h] +
mov esi [ebx+38h] +
mov ebx [ebp-38h] +
cmp ebx esi +
cmovb ebx esi +
test esi esi +
mov [ebp-38h] ebx +
jz loc_434DDC  +
mov ecx [ebp-7Ch] +
test ecx ecx +
jz loc_434DDC  +
xor ecx ecx +
test eax eax +
jnz loc_434E21  +
mov eax [ebp-30h] +
mov cl 1 +
mov eax [eax+30h] +
mov edx [eax] +
mov eax [ebp-34h] +
mov [ebp-88h] eax +
cmp esi ecx +
jbe loc_434DD7  +
mov eax [ebp-30h] +
mov dword ptr [ebp-44h] 0 +
mov edi [ebp-44h] +
mov [ebp-48h] edx +
mov ebx [eax+30h] +
cmp edi [ebx+ecx*8+4] +
mov eax [ebx+ecx*8] +
ja loc_434DD0  +
jnb loc_434DC4  +
xor edi edi +
add ecx 1 +
mov edx eax +
cmp esi ecx +
jbe loc_434DD7  +
cmp edi [ebx+ecx*8+4] +
mov eax [ebx+ecx*8] +
jb loc_434E45  +
cmp edx eax +
ja loc_434DD0  +
nop   +
jmp loc_434E45  +
***
test eax eax +
mov eax [ebp-88h] +
lea ebx [eax+eax*4] +
jz loc_435AEC  +
shl ebx 4 +
add ebx [ebp-4Ch] +
mov eax [ebx+38h] +
test eax eax +
jz loc_434E92  +
mov eax [ebx+30h] +
mov ecx [eax+4] +
mov edx [eax] +
mov eax ecx +
or eax edx +
jnz loc_435A60  +
mov eax [ebp-7Ch] +
mov dword ptr [ebp-94h] 0 +
test eax eax +
jz loc_435AB0  +
mov eax [ebp+8] +
mov eax [eax+8] +
mov dword ptr [esp] offset aContentsOfTheS +
mov [esp+4] eax +
call printf  +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov eax [ebp+8] +
mov [esp] eax +
call sub_4210D0  +
test eax eax +
jnz loc_435A9F  +
mov dword ptr [esp] offset aOffsetBeginE_0 +
call puts  +
mov eax [ebp-88h] +
cmp ds:dword_472830 eax +
jbe loc_435B24  +
lea eax [eax+eax*4] +
mov edi ds:dword_472828 +
mov [ebp-78h] eax +
mov eax [ebp-8Ch] +
shl dword ptr [ebp-78h] 4 +
mov dword ptr [ebp-84h] 0 +
mov esi eax +
***
mov eax [ebp-7Ch] +
test eax eax +
jnz loc_434F7D  +
mov eax [ebp-78h] +
lea ecx [edi+eax] +
mov edx [ecx+38h] +
test edx edx +
jz loc_434F4D  +
mov ebx [ebp-94h] +
xor eax eax +
lea esi [esi+0] +
mov [ebx+eax*4] eax +
mov edx [ecx+38h] +
add eax 1 +
cmp edx eax +
ja loc_434F40  +
mov eax [ecx+30h] +
mov ds:dword_4727C0 eax +
mov [esp+arg_8] offset loc_4265A0 +
mov [esp+arg_4] 4 +
mov [esp+arg_0] edx +
mov eax [ebp-94h] +
mov [esp+0] eax +
call qsort  +
mov edi ds:dword_472828 +
mov eax [ebp-78h] +
add eax edi +
mov ebx [eax+38h] +
test ebx ebx +
jz loc_435846  +
mov dword ptr [ebp-54h] 0 +
mov [ebp-48h] esi +
mov [ebp-30h] edi +
jmp loc_4350A9  +
***
mov [ebp-48h] ebx +
mov dword ptr [esp+0] offset aEndOfList +
call puts  +
mov eax ds:dword_472828 +
mov [ebp-30h] eax +
mov eax [ebp-78h] +
add eax [ebp-30h] +
add dword ptr [ebp-54h] 1 +
mov ecx [ebp-54h] +
cmp [eax+38h] ecx +
jbe loc_435840  +
mov ecx [ebp-7Ch] +
mov edx [ebp-54h] +
test ecx ecx +
jnz loc_4350BC  +
mov ebx [ebp-94h] +
mov edx [ebx+edx*4] +
mov edi [ebp-54h] +
mov ecx [eax+30h] +
test edi edi +
jz loc_434FA0  +
mov esi [ebp-7Ch] +
test esi esi +
jz loc_435580  +
mov ebx [ebp-54h] +
lea ebx ds:0FFFFFFF8h[ebx*8] +
mov edi [ecx+edx*8+4] +
mov esi [ecx+edx*8] +
mov [ebp-34h] edi +
mov edi [ecx+ebx+4] +
xor [ebp-34h] edi +
mov edi esi +
xor esi [ecx+ebx] +
mov ebx [ebp-34h] +
or ebx esi +
jz loc_435093  +
mov [ebp-50h] edi +
jmp loc_434FA6  +
mov eax [ebp-50h] +
cmp [ebp-90h] eax +
mov dword ptr [ebp-84h] 1 +
ja loc_434FE7  +
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aOffset0xLxIsBi +
call sub_437070  +
mov eax ds:dword_472828 +
mov [ebp-48h] esi +
mov [ebp-30h] eax +
jmp loc_435093  +
mov eax [eax+0Ch] +
mov [ebp-30h] eax +
mov eax [ebp+8] +
mov ebx [eax+18h] +
mov eax [ebp-88h] +
cmp ds:dword_472830 eax +
jbe loc_435910  +
mov eax [ebp-78h] +
add eax ds:dword_472828 +
mov edi [eax+10h] +
mov ecx [eax+4] +
mov [ebp-74h] edi +
mov edi [eax] +
mov eax [eax+8] +
mov [ebp-6Ch] ecx +
mov [ebp-70h] eax +
lea eax [edi-2] +
cmp eax 6 +
ja loc_435980  +
mov eax [ebp-30h] +
lea ecx ds:0FFFFFFFFh[edi*8] +
mov [ebp-68h] edx +
mov edx 0FFFFFFFFh +
mov [ebp-60h] esi +
mov [ebp-38h] edi +
add eax ebx +
xor ebx ebx +
mov [ebp-34h] eax +
lea eax [edi+edi] +
mov [ebp-64h] eax +
mov eax 0FFFFFFFEh +
shld edx eax +
shl eax cl +
test cl 20h +
cmovnz edx eax +
cmovnz eax ebx +
mov ebx eax +
mov eax edx +
not ebx  +
not eax  +
mov [ebp-4Ch] ebx +
mov ebx esi +
mov [ebp-5Ch] eax +
nop   +
mov eax [ebp-64h] +
mov edi ebx +
sub edi [ebp-60h] +
add edi [ebp-50h] +
add eax ebx +
cmp [ebp-34h] eax +
jb loc_4357B7  +
mov [esp+arg_0] edi +
mov esi esp +
mov dword ptr [esp+0] offset a8_8lx +
call printf  +
mov eax [ebp-38h] +
lea ecx [ebx+eax] +
cmp [ebp-34h] ecx +
ja loc_4352A0  +
cmp [ebp-34h] ebx +
ja loc_435520  +
mov eax [ebp-38h] +
mov esi esp +
lea ebx [ecx+eax] +
cmp [ebp-34h] ebx +
ja loc_435B31  +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-3Ch] 0 +
lea esi [esi+0] +
mov [esp+arg_0] edi +
mov [esp+arg_4] 0 +
mov eax [ebp+8] +
mov [esp+0] eax +
call sub_4210D0  +
test eax eax +
jnz loc_43531F  +
add edi [ebp-38h] +
mov [esp+arg_4] 0 +
mov [esp+arg_0] edi +
mov eax [ebp+8] +
mov [esp+0] eax +
call sub_4210D0  +
test eax eax +
jnz loc_43531F  +
mov dword ptr [esp+0] offset aEndOfList +
call puts  +
mov eax ds:dword_472828 +
mov [ebp-48h] ebx +
mov [ebp-30h] eax +
jmp loc_435093  +
mov eax [ebp-38h] +
lea edx [eax-1] +
cmp edx 7 +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
ja loc_4352D4  +
mov edx ds:dword_472C94 +
mov [ebp-40h] ecx +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call edx  +
mov ecx [ebp-40h] +
mov [ebp-30h] eax +
mov [ebp-2Ch] edx +
mov eax [ebp-38h] +
mov esp esi +
mov esi esp +
lea ebx [ecx+eax] +
cmp [ebp-34h] ebx +
ja loc_435460  +
cmp [ebp-34h] ecx +
jbe loc_4352FD  +
mov eax [ebp-34h] +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_43546F  +
mov edx [ebp-30h] +
mov ecx [ebp-2Ch] +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-3Ch] 0 +
mov eax edx +
mov edx ecx +
or edx eax +
mov esp esi +
jz loc_435240  +
mov esi [ebp-30h] +
mov edi [ebp-2Ch] +
mov eax [ebp-4Ch] +
mov ecx [ebp-5Ch] +
mov edx edi +
and eax esi +
xor eax [ebp-4Ch] +
and edx ecx +
xor edx ecx +
or edx eax +
jz loc_4354D0  +
lea eax [ebx+2] +
cmp [ebp-34h] eax +
mov [ebp-48h] eax +
jb loc_4357B7  +
ja loc_435497  +
cmp ebx [ebp-34h] +
jnb loc_435369  +
mov eax [ebp-34h] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_43549C  +
mov ebx [ebp-48h] +
mov dword ptr [ebp-58h] 0 +
mov esi [ebp-68h] +
xor edi edi +
mov eax [ebp-30h] +
mov edx [ebp-2Ch] +
mov ecx [ebp-38h] +
add eax esi +
adc edx edi +
call sub_426900  +
mov edx edi +
mov edi [ebp-38h] +
mov eax esi +
add eax [ebp-40h] +
adc edx [ebp-3Ch] +
mov ecx edi +
call sub_426900  +
mov dword ptr [esp+0] 28h +
call putchar  +
mov eax [ebp+8] +
mov edx edi +
mov [esp+arg_10] eax +
mov eax [ebp-74h] +
mov [esp+arg_C] 0 +
mov [esp+arg_8] eax +
mov eax [ebp-58h] +
mov [esp+arg_4] 0 +
mov [esp+arg_0] eax +
mov eax [ebp-70h] +
mov [esp+0] eax +
mov ecx [ebp-6Ch] +
mov eax [ebp-48h] +
call sub_4283C0  +
mov dword ptr [esp+0] 29h +
mov esi eax +
call putchar  +
test esi esi +
jnz loc_435530  +
mov edx [ebp-2Ch] +
mov esi [ebp-40h] +
mov edi [ebp-3Ch] +
mov eax [ebp-30h] +
xor edx edi +
xor eax esi +
or edx eax +
jz loc_435550  +
mov eax [ebp-2Ch] +
cmp [ebp-3Ch] eax +
ja loc_43544A  +
jb loc_435422  +
mov eax [ebp-30h] +
cmp [ebp-40h] eax +
jnb loc_43544A  +
mov eax ds:_iob +
mov [esp+arg_4] 0Eh +
mov [esp+arg_0] 1 +
mov dword ptr [esp+0] offset aStartEnd_1 +
add eax 20h +
mov [esp+arg_8] eax +
call fwrite  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
jmp loc_4351D0  +
mov eax [ebp-38h] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4352FD  +
mov edx ds:dword_472C94 +
mov [esp+0] ecx +
mov [esp+arg_0] eax +
call edx  +
mov ecx edx +
mov edx eax +
mov [ebp-40h] eax +
mov eax [ebp-30h] +
mov [ebp-3Ch] ecx +
or eax edx +
mov edx [ebp-2Ch] +
or edx ecx +
jmp loc_435315  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call edx  +
mov ebx [ebp-48h] +
movzx edx ax +
add ebx edx +
cmp [ebp-34h] ebx +
jb loc_435700  +
and eax 0FFFFh +
mov [ebp-58h] eax +
jmp loc_435373  +
mov esi [ebp-40h] +
mov edi [ebp-3Ch] +
mov eax [ebp-4Ch] +
mov edx edi +
and eax esi +
and edx ecx +
xor eax [ebp-4Ch] +
xor edx ecx +
or edx eax +
jz loc_43533E  +
mov ecx [ebp-38h] +
mov eax [ebp-30h] +
mov edx [ebp-2Ch] +
mov [ebp-68h] esi +
call sub_426900  +
mov ecx [ebp-38h] +
mov eax esi +
mov edx edi +
call sub_426900  +
mov dword ptr [esp+0] offset aBaseAddress +
call puts  +
jmp loc_4351D0  +
mov eax [ebp-34h] +
sub eax ebx +
jmp loc_4352A3  +
mov eax [ebp-80h] +
test eax eax +
jnz loc_4353F8  +
mov dword ptr [esp+0] offset aWithoutDw_at_f +
call printf  +
jmp loc_4353F8  +
mov eax ds:_iob +
mov [esp+arg_4] 0Fh +
mov [esp+arg_0] 1 +
mov dword ptr [esp+0] offset aStartEnd_2 +
add eax 20h +
mov [esp+arg_8] eax +
call fwrite  +
jmp loc_43544A  +
mov ebx [ebp-94h] +
mov esi [ebp-54h] +
mov ebx [ebx+esi*4-4] +
mov [ebp-34h] ebx +
shl ebx 3 +
jmp loc_4350DF  +
***
lea eax [ebp-1Ch] +
lea eax [ebp-1Ch] +
lea eax [ebp-1Ch] +
lea ecx [esi+5] +
cmp edi ecx +
mov [ebp-48h] ecx +
jbe loc_435990  +
mov eax ds:dword_472C94 +
mov [esp+0] ebx +
lea ebx [esi+9] +
mov [esp+arg_0] 4 +
call eax  +
mov dword ptr [esp+0] offset a08x +
mov [esp+arg_0] eax +
call printf  +
cmp edi ebx +
mov ecx [ebp-48h] +
ja loc_4359B8  +
mov eax edi +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4359BD  +
xor eax eax +
jmp loc_435602  +
mov esi ebx +
mov eax [ebp-50h] +
mov dword ptr [esp+0] offset aLocationListSt +
mov [esp+arg_0] eax +
call sub_437070  +
mov eax ds:dword_472828 +
mov [ebp-48h] esi +
mov [ebp-30h] eax +
jmp loc_435093  +
mov eax [ebp-50h] +
mov [ebp-30h] edx +
mov [esp+arg_4] eax +
mov eax [ebp-48h] +
sub eax [ebp-8Ch] +
mov dword ptr [esp+0] offset aThereIsAHole_0 +
mov [esp+arg_0] eax +
call sub_437070  +
mov edx [ebp-30h] +
jmp loc_434FD8  +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call edx  +
movzx esi ax +
add esi [ebp-48h] +
cmp edi esi +
jb loc_435700  +
movzx ebx ax +
jmp loc_43563F  +
mov esi [ebp-48h] +
mov edi [ebp-30h] +
add dword ptr [ebp-88h] 1 +
mov eax [ebp-88h] +
add dword ptr [ebp-78h] 50h +
cmp ds:dword_472830 eax +
ja loc_434F20  +
mov eax [ebp+8] +
mov ebx [ebp+8] +
mov eax [eax+0Ch] +
add eax [ebx+18h] +
cmp eax esi +
ja loc_435ACE  +
mov dword ptr [esp+0] 0Ah +
call putchar  +
mov eax [ebp-94h] +
mov [esp+0] eax +
call free  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp-50h] +
mov [ebp-30h] edx +
mov [esp-4+arg_8] eax +
mov eax [ebp-48h] +
sub eax [ebp-8Ch] +
mov [esp-4+arg_0] offset aThereIsAnOve_0 +
mov [esp-4+arg_4] eax +
call sub_437070  +
mov edx [ebp-30h] +
jmp loc_434FD8  +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aNoDebugInforma +
call sub_437070  +
mov eax ds:dword_472828 +
mov [ebp-48h] esi +
mov [ebp-30h] eax +
jmp loc_435093  +
mov [ebp-48h] ebx +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aUnknownLocat_0 +
call sub_437070  +
mov eax ds:dword_472828 +
mov [ebp-30h] eax +
jmp loc_435093  +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aNoDebugInfor_0 +
call sub_437070  +
mov eax ds:dword_472828 +
mov [ebp-48h] esi +
mov [ebp-30h] eax +
jmp loc_435093  +
mov eax [ebp-88h] +
mov [esp-4+arg_8] eax +
mov eax [ebp-34h] +
mov [esp-4+arg_4] eax +
mov [esp-4+arg_0] offset aInvalidPoint_0 +
call sub_437070  +
mov eax ds:dword_472828 +
mov [ebp-48h] esi +
mov [ebp-30h] eax +
jmp loc_435093  +
mov eax [ebp-80h] +
test eax eax +
jnz loc_435697  +
mov [esp-4+arg_0] offset aWithoutDw_at_f +
call printf  +
jmp loc_435697  +
mov eax [ebp-88h] +
mov [esp-4+arg_4] edi +
mov [esp-4+arg_8] eax +
jmp loc_435941  +
cmp edi ebx +
ja loc_4359E9  +
mov [esp+arg_0] 0 +
lea ebx [esi+9] +
mov dword ptr [esp+0] offset a08x +
call printf  +
xor eax eax +
cmp ebx edi +
mov ecx [ebp-48h] +
jnb loc_435602  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+arg_0] eax +
mov [esp+0] ecx +
call edx  +
jmp loc_435602  +
mov edx 4 +
mov eax ds:dword_472C94 +
mov [esp+arg_0] edx +
mov [esp+0] esi +
call eax  +
jmp loc_435602  +
mov eax edi +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
ja loc_435994  +
mov edx ds:dword_472C94 +
mov [esp+0] ebx +
lea ebx [esi+9] +
mov [esp+arg_0] eax +
call edx  +
mov dword ptr [esp+0] offset a08x +
mov [esp+arg_0] eax +
call printf  +
xor eax eax +
cmp edi ebx +
mov ecx [ebp-48h] +
jbe loc_435602  +
jmp loc_4359B8  +
***
mov [esp+4] ebx +
mov dword ptr [esp] offset aTheSSectionIsE +
call printf  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
mov eax [eax+8] +
mov dword ptr [esp] offset aUnableToLoadPa +
mov [esp+4] eax +
call sub_437070  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 0 +
mov eax offset asc_463786 +
call sub_426840  +
mov ebx [ebp+8] +
mov edx [ebx+8] +
mov dword ptr [esp] offset aLocationListsI +
mov [esp+8] eax +
mov [esp+4] edx +
call sub_437070  +
jmp loc_434E92  +
***
mov dword ptr [ebp-98h] 0 +
jmp loc_434D60  +
***
mov dword ptr [esp] offset aWarningThisSec +
call puts  +
jmp loc_434EE0  +
***
mov dword ptr [esp+4] 4 +
mov eax [ebp-38h] +
mov [esp] eax +
call sub_42C2E0  +
mov [ebp-94h] eax +
jmp loc_434EA7  +
***
mov edx [ebx+8] +
sub eax esi +
mov [esp+arg_0] eax +
mov dword ptr [esp+0] offset aThereAreLdUnus +
mov [esp+arg_4] edx +
call sub_437070  +
jmp loc_435877  +
***
shl ebx 4 +
mov dword ptr [esp] offset aNoLocationList +
call sub_436A70  +
mov eax ds:dword_472828 +
mov [ebp-4Ch] eax +
jmp loc_434E76  +
***
xor ebx ebx +
mov dword ptr [ebp-7Ch] 1 +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-88h] 0 +
jmp loc_435AEF  +
***
mov eax [ebp-8Ch] +
mov esi eax +
jmp loc_435863  +
***
mov eax [ebp-38h] +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
jmp loc_4352F1  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 5Ch +
mov edi [esi+0Ch] +
mov [ebp-48h] eax +
mov eax edx +
mov [ebp-2Ch] ecx +
mov ebx edi +
mov [ebp-24h] edi +
add edi [esi+18h] +
call sub_434430  +
mov eax [esi+8] +
mov dword ptr [esp] offset aContentsOfTheS +
mov [esp+4] eax +
call printf  +
cmp ebx edi +
jnb loc_435E1E  +
mov [ebp-1Ch] edi +
mov eax [ebp-24h] +
lea ebx [eax+4] +
cmp [ebp-1Ch] ebx +
ja loc_435C00  +
mov eax [ebp-1Ch] +
cmp [ebp-24h] eax +
jnb loc_435BAF  +
sub eax [ebp-24h] +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_435C05  +
mov esi ebx +
mov eax 4 +
lea edi [ebx+2] +
cmp [ebp-1Ch] edi +
ja loc_436071  +
lea ecx [edi+eax] +
mov ebx esp +
cmp [ebp-1Ch] ecx +
mov [ebp-28h] ecx +
jbe loc_4360AD  +
mov edx 0FFFFFFFEh +
mov [ebp-20h] eax +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-38h] 0 +
mov [ebp-3Eh] dx +
mov dword ptr [ebp-3Ch] 0 +
jmp loc_435CF7  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+4] eax +
mov edi [ebp-24h] +
mov [esp] edi +
call edx  +
mov ecx eax +
not ecx  +
or ecx edx +
jnz loc_436041  +
lea esi [edi+0Ch] +
cmp [ebp-1Ch] esi +
ja loc_435C40  +
cmp [ebp-1Ch] ebx +
ja loc_436054  +
mov ebx esi +
mov eax 8 +
jmp loc_435BB6  +
***
mov eax 8 +
mov edx ds:dword_472C94 +
mov [esp] ebx +
mov ebx esi +
mov [esp+4] eax +
call edx  +
mov dword ptr [ebp-30h] 0Ch +
mov dword ptr [ebp-20h] 8 +
lea edi [ebx+2] +
cmp [ebp-1Ch] edi +
ja loc_435CB1  +
cmp ebx [ebp-1Ch] +
jb loc_435FF0  +
mov ecx [ebp-20h] +
mov ebx esp +
add ecx edi +
cmp [ebp-1Ch] ecx +
mov [ebp-28h] ecx +
ja loc_436087  +
mov ecx [ebp-30h] +
xor edi edi +
mov [ebp-34h] eax +
mov [ebp-38h] edx +
mov dword ptr [ebp-3Ch] 0 +
add ecx eax +
mov eax [ebp-24h] +
add eax ecx +
mov ecx 0FFFFFFFEh +
mov [ebp-30h] eax +
xor eax eax +
mov [ebp-3Eh] cx +
jmp loc_435D0A  +
mov ecx [ebp-30h] +
mov esi [ebp-24h] +
mov [ebp-38h] edx +
mov [ebp-34h] eax +
add ecx eax +
add esi ecx +
mov ecx 2 +
mov eax ds:dword_472C94 +
mov [esp+4] ecx +
mov [esp] ebx +
mov ebx esp +
call eax  +
movzx ecx ax +
sub eax 2 +
mov [ebp-3Eh] ax +
mov eax [ebp-20h] +
mov [ebp-3Ch] ecx +
add eax edi +
cmp [ebp-1Ch] eax +
mov [ebp-28h] eax +
jbe loc_435E60  +
mov eax [ebp-20h] +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_435E7A  +
mov [ebp-30h] esi +
xor edi edi +
xor eax eax +
mov esi ds:dword_472830 +
mov esp ebx +
lea edx [esi-1] +
cmp edx 0FFFFFFFDh +
ja loc_435D50  +
mov edx ds:dword_472828 +
xor ecx ecx +
mov ebx [edx+10h] +
xor ebx eax +
or ebx [edx+14h] +
jz loc_435D50  +
add ecx 1 +
add edx 50h +
cmp ecx esi +
jnz loc_435D22  +
mov eax [ebp-48h] +
mov eax [eax+8] +
mov [esp+4] edi +
mov dword ptr [esp] offset a_debug_infoOff +
mov [esp+8] eax +
call sub_437070  +
mov esi [ebp-28h] +
mov ecx esp +
add esi [ebp-20h] +
cmp [ebp-1Ch] esi +
ja loc_435E55  +
mov eax [ebp-28h] +
xor ebx ebx +
cmp [ebp-1Ch] eax +
jbe loc_435D95  +
mov eax [ebp-1Ch] +
sub eax [ebp-28h] +
lea edx [eax-1] +
xor ebx ebx +
cmp edx 7 +
ja loc_435D95  +
mov [ebp-44h] ecx +
mov edx ds:dword_472C94 +
mov [esp+4] eax +
mov eax [ebp-28h] +
mov [esp] eax +
call edx  +
mov ecx [ebp-44h] +
mov ebx eax +
mov eax [ebp-38h] +
mov esp ecx +
test eax eax +
js loc_435E37  +
mov eax [ebp-30h] +
cmp [ebp-24h] eax +
ja loc_435E37  +
mov eax [ebp-30h] +
mov [ebp-24h] eax +
mov eax [ebp-34h] +
mov dword ptr [esp] offset aLengthLd_0 +
mov [esp+4] eax +
call printf  +
mov eax [ebp-3Ch] +
mov dword ptr [esp] offset aVersionD_2 +
mov [esp+4] eax +
call printf  +
mov [esp+4] edi +
mov dword ptr [esp] offset aOffsetInto_d_0 +
call printf  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aSizeOfAreaIn_d +
call printf  +
cmp word ptr [ebp-3Eh] 1 +
jbe loc_435E93  +
mov eax ds:dword_4721C8 +
test eax eax +
jz loc_436014  +
mov eax [ebp-1Ch] +
cmp [ebp-24h] eax +
jb loc_435B91  +
mov dword ptr [esp] 0Ah +
call putchar  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp-34h] +
mov dword ptr [esp] offset aNegativeLength +
mov [esp+4] eax +
call sub_437070  +
mov eax [ebp-1Ch] +
mov [ebp-24h] eax +
jmp loc_435DB4  +
***
mov eax [ebp-20h] +
jmp loc_435D71  +
***
cmp [ebp-1Ch] edi +
jbe loc_435D03  +
mov eax [ebp-1Ch] +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_435D03  +
mov edx ds:dword_472C94 +
mov [esp] edi +
mov [esp+4] eax +
call edx  +
mov [ebp-30h] esi +
mov edi eax +
jmp loc_435D0A  +
***
mov eax [ebp-2Ch] +
test eax eax +
jz loc_436030  +
mov dword ptr [esp] offset aOffsetKindName +
call puts  +
mov eax [ebp-20h] +
mov edi esp +
lea ebx [esi+eax] +
cmp [ebp-1Ch] ebx +
ja loc_435F75  +
cmp esi [ebp-1Ch] +
jnb loc_435F80  +
mov eax [ebp-1Ch] +
sub eax esi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_435F80  +
mov edx ds:dword_472C94 +
mov [esp] esi +
mov [esp+4] eax +
call edx  +
mov esp edi +
mov esi eax +
or edx esi +
jz loc_435E12  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jbe loc_435E12  +
mov edi [ebp-2Ch] +
sub eax ebx +
lea ecx [eax-1] +
test edi edi +
jz loc_435FC8  +
lea edi [ebx+1] +
cmp [ebp-1Ch] edi +
ja loc_435F87  +
cmp ecx 7 +
jbe loc_435F8C  +
lea edx [eax-2] +
mov ecx offset aNoInfo +
mov eax (offset aSg+2) +
mov [esp+10h] edx +
mov [esp+14h] edi +
mov [ebp-28h] edx +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
mov [esp+4] esi +
mov dword ptr [esp] offset a6lxS10s_S +
call printf  +
mov edx [ebp-28h] +
mov [esp+4] edx +
mov [esp] edi +
call sub_4401F0  +
lea esi [edi+eax+1] +
cmp [ebp-1Ch] esi +
jbe loc_435E12  +
mov eax [ebp-20h] +
mov edi esp +
lea ebx [esi+eax] +
cmp [ebp-1Ch] ebx +
jbe loc_435EBB  +
mov eax [ebp-20h] +
jmp loc_435EC9  +
***
mov esp edi +
jmp loc_435E12  +
***
mov eax 1 +
mov edx ds:dword_472C94 +
mov [ebp-28h] ecx +
mov [esp+4] eax +
mov [esp] ebx +
call edx  +
mov ecx [ebp-28h] +
lea edx [ecx-1] +
shl eax 18h +
mov ecx eax +
shr ecx 1Ch +
and ecx 7 +
test eax eax +
mov ecx ds:off_468200[ecx*4] +
jns loc_435F20  +
mov eax offset aSg +
jmp loc_435F25  +
***
mov [esp+0Ch] ebx +
mov edi ebx +
mov [esp+8] ecx +
mov [ebp-28h] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset a6lx_S +
call printf  +
mov edx [ebp-28h] +
jmp loc_435F4B  +
***
mov ecx [ebp-1Ch] +
sub ecx ebx +
lea esi [ecx-1] +
cmp esi 7 +
ja loc_435C75  +
mov esi [ebp-30h] +
mov [ebp-38h] edx +
mov [ebp-34h] eax +
add esi eax +
add esi [ebp-24h] +
jmp loc_435CC6  +
***
mov dword ptr [esp] offset aOnlyDwarf2And3 +
call sub_437070  +
mov ds:dword_4721C8 1 +
jmp loc_435E12  +
***
mov dword ptr [esp] offset aOffsetName +
call puts  +
jmp loc_435EAA  +
***
mov dword ptr [ebp-30h] 4 +
mov dword ptr [ebp-20h] 4 +
jmp loc_435C64  +
***
mov eax [ebp-1Ch] +
sub eax ebx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_435C45  +
mov ebx esi +
mov eax 8 +
jmp loc_435BB6  +
***
mov [ebp-20h] eax +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-38h] 0 +
jmp loc_435CC1  +
***
mov esi [ebp-30h] +
mov [ebp-38h] edx +
mov edx 0FFFFFFFEh +
mov [ebp-34h] eax +
mov [ebp-3Eh] dx +
add esi eax +
mov eax [ebp-20h] +
add esi [ebp-24h] +
mov dword ptr [ebp-3Ch] 0 +
jmp loc_435CF7  +
***
mov [ebp-20h] eax +
mov eax 0FFFFFFFEh +
xor edi edi +
mov [ebp-3Eh] ax +
xor eax eax +
mov [ebp-30h] esi +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-3Ch] 0 +
jmp loc_435D0A  +
***
mov edx [esp+8] +
mov ecx 1 +
mov eax [esp+4] +
jmp loc_435B50  +
***
mov edx [esp+8] +
xor ecx ecx +
mov eax [esp+4] +
jmp loc_435B50  +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [ebp+8] +
mov edi [ebp+8] +
mov eax [eax+0Ch] +
mov esi [edi+18h] +
mov [ebp-28h] eax +
mov ebx eax +
add esi eax +
mov eax [ebp+8] +
mov [ebp-1Ch] esi +
mov eax [eax+8] +
mov dword ptr [esp] offset aContentsOfTheS +
mov [esp+4] eax +
call printf  +
mov eax [ebp+0Ch] +
call sub_434430  +
cmp ebx esi +
jnb loc_4365D7  +
mov eax [ebp-28h] +
lea edi [eax+4] +
cmp [ebp-1Ch] edi +
ja loc_4363A6  +
cmp [ebp-1Ch] eax +
jbe loc_43617B  +
mov eax [ebp-1Ch] +
sub eax [ebp-28h] +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4363AB  +
mov dword ptr [ebp-38h] 4 +
mov esi 4 +
lea ebx [edi+2] +
cmp ebx [ebp-1Ch] +
jb loc_436457  +
lea eax [ebx+esi] +
mov edx 0 +
cmp [ebp-1Ch] eax +
mov ecx esp +
mov [ebp-20h] eax +
mov eax 0FFFFFFFEh +
mov [ebp-34h] ax +
mov dword ptr [ebp-30h] 0 +
mov [ebp-3Ah] dx +
jbe loc_436450  +
lea esi [esi+0] +
lea eax [esi-1] +
xor edi edi +
cmp eax 7 +
ja loc_4361E0  +
mov eax ds:dword_472C94 +
mov [ebp-40h] ecx +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
mov ecx [ebp-40h] +
mov edi eax +
mov ebx ds:dword_472830 +
mov esp ecx +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_436225  +
mov eax ds:dword_472828 +
xor edx edx +
mov ecx [eax+10h] +
xor ecx edi +
or ecx [eax+14h] +
jz loc_436225  +
add edx 1 +
add eax 50h +
cmp edx ebx +
jnz loc_4361F7  +
mov eax [ebp+8] +
mov eax [eax+8] +
mov [esp+4] edi +
mov dword ptr [esp] offset a_debug_infoOff +
mov [esp+8] eax +
call sub_437070  +
mov eax [ebp-20h] +
lea ecx [eax+1] +
cmp [ebp-1Ch] ecx +
jbe loc_4365A0  +
mov [ebp-40h] ecx +
mov eax ds:dword_472C94 +
mov dword ptr [esp+4] 1 +
mov esi [ebp-20h] +
mov [esp] esi +
add esi 2 +
call eax  +
mov ecx [ebp-40h] +
cmp [ebp-1Ch] esi +
mov [ebp-20h] al +
jbe loc_436601  +
mov eax 1 +
mov edx ds:dword_472C94 +
mov [esp+4] eax +
mov [esp] ecx +
call edx  +
mov ebx eax +
cmp word ptr [ebp-34h] 1 +
ja loc_4365CB  +
mov eax [ebp-30h] +
mov dword ptr [esp] offset aLengthLd_1 +
mov [esp+4] eax +
call printf  +
movzx eax word ptr [ebp-3Ah] +
mov dword ptr [esp] offset aVersionD_3 +
mov [esp+4] eax +
call printf  +
mov [esp+4] edi +
mov dword ptr [esp] offset aOffsetInto_d_1 +
call printf  +
movzx edi byte ptr [ebp-20h] +
mov dword ptr [esp] offset aPointerSizeD_0 +
mov eax edi +
movzx eax al +
mov [esp+4] eax +
call printf  +
movzx eax bl +
mov [esp+4] eax +
mov dword ptr [esp] offset aSegmentSizeD +
call printf  +
mov eax edi +
add eax ebx +
lea edx [eax-1] +
cmp dl 7 +
ja loc_436692  +
movzx ebx al +
lea edx [ebx-1] +
test ebx edx +
jnz loc_436681  +
cmp al 4 +
jbe loc_4365F0  +
mov dword ptr [esp] offset aAddressLength +
call puts  +
lea eax [ebx+ebx] +
mov edi eax +
mov [ebp-34h] eax +
mov eax esi +
sub eax [ebp-28h] +
cdq   +
idiv  edi +
test edx edx +
jz loc_43632E  +
mov eax edi +
sub eax edx +
add esi eax +
mov eax [ebp-38h] +
mov edx [ebp-28h] +
add eax [ebp-30h] +
add eax edx +
cmp eax [ebp-1Ch] +
mov edi eax +
mov [ebp-20h] eax +
ja loc_4366AD  +
cmp eax edx +
jb loc_4366AD  +
mov eax [ebp-34h] +
add eax esi +
cmp edi eax +
jb loc_436573  +
lea esi [esi+0] +
lea edi [esi+ebx] +
mov ecx esp +
cmp [ebp-1Ch] edi +
ja loc_4364A5  +
cmp [ebp-1Ch] esi +
ja loc_436590  +
lea esi [edi+ebx] +
mov ecx esp +
cmp [ebp-1Ch] esi +
ja loc_4366C5  +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 0 +
jmp loc_436531  +
mov eax 4 +
mov edx ds:dword_472C94 +
mov [esp+4] eax +
mov esi [ebp-28h] +
mov [esp] esi +
call edx  +
mov [ebp-30h] eax +
not eax  +
or eax edx +
jnz loc_436670  +
lea ebx [esi+0Ch] +
cmp [ebp-1Ch] ebx +
ja loc_4363F7  +
cmp [ebp-1Ch] edi +
jbe loc_4363E4  +
mov eax [ebp-1Ch] +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_4363FC  +
mov edi ebx +
mov esi 8 +
mov dword ptr [ebp-38h] 0Ch +
jmp loc_436187  +
***
mov eax 8 +
mov edx ds:dword_472C94 +
mov esi 8 +
mov [esp] edi +
mov edi ebx +
mov [esp+4] eax +
call edx  +
mov dword ptr [ebp-38h] 0Ch +
mov [ebp-30h] eax +
lea ebx [edi+2] +
cmp [ebp-1Ch] ebx +
ja loc_436460  +
cmp edi [ebp-1Ch] +
jb loc_436616  +
lea eax [ebx+esi] +
mov edi 0FFFFFFFEh +
cmp [ebp-1Ch] eax +
mov ecx esp +
mov [ebp-20h] eax +
mov eax 0 +
mov [ebp-34h] di +
mov [ebp-3Ah] ax +
ja loc_4361C0  +
xor edi edi +
jmp loc_4361E0  +
***
mov dword ptr [ebp-30h] 0 +
nop   +
mov eax 2 +
mov edx ds:dword_472C94 +
mov [esp+4] eax +
mov [esp] edi +
call edx  +
mov ecx esp +
mov [ebp-3Ah] ax +
sub eax 2 +
mov [ebp-34h] ax +
lea eax [ebx+esi] +
cmp [ebp-1Ch] eax +
mov [ebp-20h] eax +
ja loc_4361C0  +
xor edi edi +
cmp [ebp-1Ch] ebx +
jbe loc_4361E0  +
mov esi [ebp-1Ch] +
sub esi ebx +
jmp loc_4361C0  +
***
mov eax ebx +
lea edx [eax-1] +
cmp edx 7 +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
ja loc_4364D8  +
mov edx ds:dword_472C94 +
mov [ebp-28h] ecx +
mov [esp+4] eax +
mov [esp] esi +
call edx  +
mov ecx [ebp-28h] +
mov [ebp-30h] eax +
mov [ebp-2Ch] edx +
lea esi [edi+ebx] +
mov esp ecx +
cmp [ebp-1Ch] esi +
mov ecx esp +
ja loc_436586  +
cmp [ebp-1Ch] edi +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 0 +
jbe loc_436531  +
mov eax [ebp-1Ch] +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 0 +
ja loc_436531  +
mov edx ds:dword_472C94 +
mov [ebp-38h] ecx +
mov [esp+4] eax +
mov [esp] edi +
call edx  +
mov ecx [ebp-38h] +
mov [ebp-28h] eax +
mov [ebp-24h] edx +
mov esp ecx +
mov dword ptr [esp] offset asc_4680CC +
call printf  +
mov eax [ebp-30h] +
mov ecx ebx +
mov edx [ebp-2Ch] +
call sub_426900  +
mov eax [ebp-28h] +
mov ecx ebx +
mov edx [ebp-24h] +
call sub_426900  +
mov dword ptr [esp] 0Ah +
call putchar  +
mov eax [ebp-34h] +
add eax esi +
cmp [ebp-20h] eax +
jnb loc_436360  +
mov eax [ebp-20h] +
cmp [ebp-1Ch] eax +
jbe loc_4365D7  +
mov eax [ebp-20h] +
mov [ebp-28h] eax +
jmp loc_436155  +
***
mov eax ebx +
jmp loc_436500  +
***
mov eax [ebp-1Ch] +
sub eax esi +
jmp loc_4364A7  +
***
cmp [ebp-1Ch] eax +
ja loc_436630  +
mov esi [ebp-20h] +
mov byte ptr [ebp-20h] 0 +
add esi 2 +
cmp esi [ebp-1Ch] +
jb loc_43625E  +
xor ebx ebx +
nop   +
cmp word ptr [ebp-34h] 1 +
jbe loc_43627F  +
mov dword ptr [esp] offset aOnlyDwarf2An_0 +
call sub_437070  +
mov dword ptr [esp] 0Ah +
call putchar  +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] offset aAddressLengt_0 +
call puts  +
jmp loc_436314  +
***
mov eax [ebp-1Ch] +
sub eax ecx +
lea edx [eax-1] +
cmp edx 7 +
jbe loc_436263  +
xor ebx ebx +
jmp loc_4365C0  +
***
mov eax [ebp-1Ch] +
sub eax edi +
lea edx [eax-1] +
cmp edx 7 +
ja loc_43642D  +
jmp loc_436465  +
***
mov eax [ebp-1Ch] +
sub eax [ebp-20h] +
lea edx [eax-1] +
cmp edx 7 +
ja loc_4365A9  +
mov [ebp-40h] ecx +
mov edx ds:dword_472C94 +
xor ebx ebx +
mov [esp+4] eax +
mov esi [ebp-20h] +
mov [esp] esi +
lea esi [esi+2] +
call edx  +
mov ecx [ebp-40h] +
cmp [ebp-1Ch] esi +
mov [ebp-20h] al +
jbe loc_436274  +
jmp loc_43625E  +
***
mov dword ptr [ebp-38h] 4 +
mov esi 4 +
jmp loc_43641C  +
***
mov dword ptr [esp] offset aPointerSizeSeg +
call sub_437070  +
jmp loc_4365D7  +
***
mov eax [ebp+8] +
mov eax [eax+8] +
mov dword ptr [esp] offset aInvalidAddress +
mov [esp+4] eax +
call sub_436A70  +
jmp loc_4365D7  +
***
mov eax [ebp-30h] +
mov dword ptr [esp] offset aExcessiveHeade +
mov [esp+4] eax +
call sub_436A70  +
jmp loc_4365D7  +
***
mov eax ebx +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
jmp loc_436500  +
***
mov eax [esp+4] +
mov edx 1 +
jmp sub_4334E0  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
call sub_426690  +
nop   +
mov [esp+1Ch+var_1C] ebx +
add ebx 1 +
call sub_421130  +
cmp ebx 24h +
jnz loc_436700  +
mov ebp ds:dword_472828 +
test ebp ebp +
jz loc_4367A2  +
mov edi ds:dword_472830 +
xor esi esi +
mov ebx ebp +
lea eax [edi-1] +
cmp eax 0FFFFFFFDh +
jbe loc_436743  +
jmp loc_43677C  +
mov eax [ebx+48h] +
test eax eax +
jz loc_436767  +
add esi 1 +
add ebx 50h +
cmp esi edi +
jz loc_43677C  +
mov edx [ebx+3Ch] +
test edx edx +
jnz loc_436732  +
mov eax [ebx+30h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [ebx+34h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [ebx+48h] +
test eax eax +
jnz loc_436739  +
mov eax [ebx+40h] +
add esi 1 +
add ebx 50h +
mov [esp+1Ch+var_1C] eax +
call free  +
cmp esi edi +
jnz loc_436743  +
mov [esp+1Ch+var_1C] ebp +
call free  +
mov ds:dword_472828 0 +
mov ds:dword_472830 0 +
mov ds:dword_47282C 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
movzx eax byte ptr [ebp+0] +
nop   +
test al al +
jz loc_436842  +
mov edi 6 +
mov ebx offset aRanges +
mov esi offset off_4682C0 +
jmp loc_4367DF  +
mov [esp+1Ch+var_1C] ebx +
call strlen  +
mov edi eax +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call strncmp  +
test eax eax +
jnz loc_436800  +
add edi ebp +
movzx eax byte ptr [edi] +
test al al +
jz loc_436850  +
cmp al 2Ch +
jz loc_436850  +
add esi 0Ch +
mov ebx [esi] +
test ebx ebx +
jnz loc_4367D5  +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] offset aUnrecognizedDe +
call sub_437070  +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] 2Ch +
call strchr  +
test eax eax +
mov ebp eax +
jz loc_436842  +
movzx eax byte ptr [ebp+0] +
cmp al 2Ch +
jnz loc_4367C0  +
movzx eax byte ptr [ebp+1] +
add ebp 1 +
test al al +
jnz loc_4367C4  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
mov edx [esi+8] +
or [eax] edx +
mov eax ds:dword_472C64 +
test eax eax +
jz loc_43686B  +
mov ds:dword_472C60 1 +
mov ebp edi +
jmp loc_43682F  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx esi +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4368BA  +
sub eax 46h +
cmp al 2Eh +
ja loc_436970  +
movzx eax al +
jmp ds:off_4680F8[eax*4]  +
mov ds:dword_472C64 1 +
mov ds:dword_472C60 1 +
nop   +
lea esi [esi+0] +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_436882  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ds:dword_472C44 1 +
jmp loc_4368B0  +
mov ds:dword_472C6C 1 +
jmp loc_4368B0  +
or ds:dword_472C8C 2 +
jmp loc_4368B0  +
mov ds:dword_472C68 1 +
jmp loc_4368B0  +
mov ds:dword_472C40 1 +
jmp loc_4368B0  +
mov ds:dword_472C84 1 +
jmp loc_4368B0  +
mov ds:dword_472C58 1 +
jmp loc_4368B0  +
mov ds:dword_472C50 1 +
jmp loc_4368B0  +
mov ds:dword_472C5C 1 +
jmp loc_4368B0  +
or ds:dword_472C8C 1 +
jmp loc_4368B0  +
mov ds:dword_472C80 1 +
jmp loc_4368B0  +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] offset aUnrecognizedDe +
call sub_437070  +
jmp loc_4368B0  +
***
mov ds:dword_472C80 1 +
mov ds:dword_472C44 1 +
mov ds:dword_472C8C 1 +
mov ds:dword_472C58 1 +
mov ds:dword_472C68 1 +
mov ds:dword_472C84 1 +
mov ds:dword_472C6C 1 +
mov ds:dword_472C60 1 +
mov ds:dword_472C5C 1 +
mov ds:dword_472C40 1 +
mov ds:dword_472C50 1 +
mov ds:dword_472C88 1 +
mov ds:dword_472C70 1 +
mov ds:dword_472C74 1 +
mov ds:dword_472C90 1 +
mov ds:dword_472C48 1 +
mov ds:dword_472C78 1 +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
mov eax ds:_iob +
lea ebx [esp+18h+arg_4] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
mov eax off_4416E0 +
mov [esp+18h+var_14] offset aSError +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4Ch +
lea eax [eax+64h] +
mov [esp+54h+var_4C] 0Ah +
mov [esp+54h+var_50] 0 +
mov [esp+54h+var_54] eax +
call strtoul  +
test eax eax +
js loc_436EF8  +
mov ebp eax +
and ebp 1 +
add ebp eax +
mov eax [ebx+28h] +
test edi edi +
lea eax [ebp+eax+3Ch] +
mov [ebx+28h] eax +
jz loc_436D70  +
cmp esi 8 +
ja loc_436DC2  +
cmp ebp esi +
jb loc_436D55  +
mov eax [ebx+4] +
lea edi [esp+54h+var_1C] +
mov [esp+54h+var_4C] esi +
mov [esp+54h+var_50] 1 +
mov [esp+54h+var_54] edi +
mov [esp+54h+var_48] eax +
call fread  +
cmp eax esi +
jz loc_436E10  +
mov eax [ebx] +
mov [esp+54h+var_54] offset aSFailedToReadA +
mov [esp+54h+var_50] eax +
call sub_436A70  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
mov [esp+54h+var_54] offset aSTheArchiveInd +
mov [esp+54h+var_50] eax +
call sub_436A70  +
jmp loc_436D4B  +
mov eax [ebx+4] +
mov [esp+54h+var_4C] 1 +
mov [esp+54h+var_50] ebp +
mov [esp+54h+var_54] eax +
call fseek  +
test eax eax +
jnz loc_436F15  +
mov eax [ebx+4] +
mov [esp+54h+var_4C] 3Ch +
mov [esp+54h+var_50] 1 +
mov [esp+54h+var_48] eax +
lea eax [ebx+34h] +
mov [esp+54h+var_54] eax +
call fread  +
test eax eax +
jnz loc_436DF0  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+54h+var_4C] 1EDh +
mov [esp+54h+var_50] offset a____BinutilsBi +
mov [esp+54h+var_54] offset aSizeof_ar_inde +
call sub_440120  +
cmp ebp esi +
jnb loc_436D12  +
jmp loc_436D55  +
cmp eax 3Ch +
jz loc_436DB5  +
mov eax [ebx] +
mov [esp+54h+var_54] offset aSFailedToRea_0 +
mov [esp+54h+var_50] eax +
call sub_436A70  +
xor eax eax +
jmp loc_436D4D  +
mov [esp+54h+var_54] edi +
sub ebp esi +
mov [esp+54h+var_50] esi +
mov [esp+54h+var_2C] eax +
call sub_436AD0  +
mov [esp+54h+var_30] 0 +
mov [esp+54h+var_34] ebp +
mov edi eax +
mov eax edx +
imul eax esi +
mov [esp+54h+var_28] edx +
mov [ebx+0Ch] edx +
mov [ebx+8] edi +
mov ecx eax +
mov eax edi +
mul  esi +
mov [esp+54h+var_38] edx +
add [esp+54h+var_38] ecx +
mov ecx [esp+54h+var_2C] +
mov [esp+54h+var_3C] eax +
mov eax [esp+54h+var_38] +
cmp [esp+54h+var_30] eax +
jb loc_436ED5  +
ja loc_436E67  +
cmp ebp [esp+54h+var_3C] +
jb loc_436ED5  +
cmp [esp+54h+var_28] 0 +
ja loc_436ED5  +
cmp edi ebp +
ja loc_436ED5  +
mov eax ecx +
imul eax edi +
mov [esp+54h+var_34] ecx +
mov [esp+54h+var_54] eax +
call malloc  +
mov ecx [esp+54h+var_34] +
test eax eax +
mov [esp+54h+var_3C] eax +
jz loc_436FD2  +
mov eax [ebx+4] +
mov [esp+54h+var_4C] edi +
mov [esp+54h+var_50] ecx +
mov [esp+54h+var_34] ecx +
mov [esp+54h+var_48] eax +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call fread  +
mov ecx [esp+54h+var_34] +
mov edi eax +
mov eax [ebx+8] +
xor eax edi +
mov edx eax +
or edx [ebx+0Ch] +
jz loc_436F2E  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
jmp loc_436D39  +
mov eax [ebx] +
mov [esp+54h+var_44] ebp +
mov [esp+54h+var_48] ecx +
mov [esp+54h+var_4C] edi +
mov [esp+54h+var_50] eax +
mov [esp+54h+var_54] offset aSTheArchiveI_0 +
call sub_436A70  +
jmp loc_436D4B  +
mov edx [ebx] +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_54] offset aSInvalidArchiv +
mov [esp+54h+var_50] edx +
call sub_436A70  +
xor eax eax +
jmp loc_436D4D  +
mov eax [ebx] +
mov [esp+54h+var_54] offset aSFailedToSkipA +
mov [esp+54h+var_50] eax +
call sub_436A70  +
xor eax eax +
jmp loc_436D4D  +
mov eax edi +
imul eax ecx +
mov [esp+54h+var_34] ecx +
sub ebp eax +
lea eax ds:0[edi*8] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_28] ebp +
call malloc  +
test eax eax +
mov [ebx+10h] eax +
jz loc_437037  +
xor ebp ebp +
test edi edi +
mov edx [esp+54h+var_3C] +
mov ecx [esp+54h+var_34] +
jz loc_436F96  +
mov [esp+54h+var_2C] esi +
mov esi edx +
mov [esp+54h+var_34] ecx +
nop   +
lea edi [eax+ebp*8] +
mov eax [esp+54h+var_2C] +
add ebp 1 +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_50] eax +
call sub_436AD0  +
add esi [esp+54h+var_34] +
mov [edi+4] edx +
xor edx edx +
mov [edi] eax +
cmp edx [ebx+0Ch] +
jbe loc_436FC1  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
mov eax [esp+54h+var_28] +
test eax eax +
jnz loc_436FE3  +
mov eax [ebx] +
mov [esp+54h+var_54] offset aSTheArchiveHas +
mov [esp+54h+var_50] eax +
call sub_436A70  +
jmp loc_436D4B  +
jb loc_436FC8  +
cmp ebp [ebx+8] +
jnb loc_436F96  +
mov eax [ebx+10h] +
nop   +
lea esi [esi+0] +
jmp loc_436F70  +
mov [esp+54h+var_54] offset aOutOfMemoryWhi +
call sub_436A70  +
jmp loc_436D4B  +
mov eax [esp+54h+var_28] +
mov [esp+54h+var_54] eax +
call malloc  +
test eax eax +
mov [ebx+14h] eax +
jz loc_437054  +
mov edi [esp+54h+var_28] +
mov edx [ebx+4] +
mov [esp+54h+var_50] 1 +
mov [esp+54h+var_54] eax +
mov [ebx+18h] edi +
mov [esp+54h+var_48] edx +
mov [esp+54h+var_4C] edi +
call fread  +
cmp eax edi +
jz loc_436D8F  +
mov eax [ebx] +
mov [esp+54h+var_54] offset aSFailedToRea_1 +
mov [esp+54h+var_50] eax +
call sub_436A70  +
jmp loc_436D4B  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_54] offset aOutOfMemoryW_0 +
call sub_436A70  +
jmp loc_436D4B  +
mov [esp+54h+var_54] offset aOutOfMemoryW_1 +
call sub_436A70  +
jmp loc_436D4B  +
***
mov eax ds:_iob +
lea ebx [esp+18h+arg_4] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
mov eax off_4416E0 +
mov [esp+18h+var_14] offset aSWarning +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
add esp 18h +
pop ebx  +
retn   +
***
mov ecx edx +
mov ecx eax +
mov ecx eax +
mov ecx eax +
mov [esi] al +
mov [esp+arg_0] ecx +
push esi  +
sub esp 14h +
cmp ds:dword_472C94 offset sub_436AD0 +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 4 +
jz loc_4374B0  +
lea eax [ebx+4] +
mov [esp+18h+var_18] eax +
call sub_4371E0  +
mov ecx [esp+18h+arg_4] +
mov [ecx] eax +
mov [ecx+4] edx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] 4 +
call sub_4371E0  +
mov ecx [esp+18h+arg_8] +
mov [ecx] eax +
mov [ecx+4] edx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
add ebx 4 +
call sub_436AD0  +
mov ecx [esp+18h+arg_4] +
mov [ecx] eax +
mov [ecx+4] edx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] 4 +
call sub_436AD0  +
mov ebx [esp+18h+arg_8] +
mov [ebx] eax +
mov [ebx+4] edx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_1C] eax +
call sub_43AA70  +
movzx edx byte ptr [edi] +
cmp dl 5Ch +
jz loc_437518  +
cmp dl 2Fh +
jnz loc_437551  +
mov edx ebx +
xor eax eax +
add edx 1 +
jz loc_437549  +
mov [esp+1Ch+var_1C] edx +
call malloc  +
test eax eax +
mov esi eax +
jz loc_4375E7  +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov eax esi +
mov byte ptr [esi+ebx] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dl dl +
jnz loc_4375C0  +
cmp eax [esp+1Ch+arg_0] +
jz loc_437518  +
sub eax [esp+1Ch+arg_0] +
mov ebp eax +
lea eax [eax+ebx] +
mov [esp+1Ch+var_10] eax +
add eax 1 +
cmp eax ebx +
jb loc_4375D0  +
cmp eax ebp +
jb loc_4375D0  +
mov [esp+1Ch+var_1C] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_4375E7  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_18] eax +
call memcpy  +
lea ecx [esi+ebp] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ecx +
call memcpy  +
mov eax [esp+1Ch+var_10] +
mov byte ptr [esi+eax] 0 +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edi+1] 3Ah +
jnz loc_437555  +
jmp loc_437518  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] offset aAbnormalLength +
call sub_436A70  +
xor eax eax +
jmp loc_437549  +
mov [esp+1Ch+var_1C] offset aOutOfMemory +
call sub_436A70  +
xor eax eax +
jmp loc_437549  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call _strdup  +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+18h] 0 +
mov [ebx] eax +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [ebx+1Ch] 0 +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov [ebx+4] eax +
mov eax [esp+2Ch+arg_C] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+28h] 8 +
mov [ebx+2Ch] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 8 +
mov [esp+2Ch+var_2C] eax +
call fseek  +
test eax eax +
mov ebp eax +
jnz loc_4376D0  +
mov esi [esp+2Ch+arg_8] +
lea eax [ebx+34h] +
mov [esp+2Ch+var_24] 3Ch +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_10] eax +
call fread  +
cmp eax 3Ch +
jz loc_4376F3  +
test eax eax +
jnz loc_4377D0  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_4] +
mov ebp 1 +
mov [esp+2Ch+var_2C] offset aSFailedToSee_1 +
mov [esp+2Ch+var_28] eax +
call sub_436A70  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+var_10] +
mov edi offset asc_469567 +
mov ecx 10h +
cmps   +
jz loc_437815  +
mov esi [esp+2Ch+var_10] +
mov edi offset aSym64 +
mov ecx 10h +
cmps   +
jz loc_437830  +
mov eax [esp+2Ch+arg_10] +
test eax eax +
jnz loc_437851  +
mov esi [esp+2Ch+var_10] +
mov edi offset asc_4695A2 +
mov ecx 10h +
cmps   +
jnz loc_4376C3  +
lea eax [ebx+64h] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call strtoul  +
cmp eax 7 +
mov edi eax +
mov [ebx+20h] eax +
jbe loc_4377F3  +
test eax eax +
js loc_4378A0  +
mov eax [ebx+28h] +
lea eax [edi+eax+3Ch] +
mov [ebx+28h] eax +
lea eax [edi+1] +
mov [esp+2Ch+var_2C] eax +
call malloc  +
test eax eax +
mov [ebx+1Ch] eax +
jz loc_4378D6  +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_20] ecx +
call fread  +
cmp eax 1 +
jnz loc_437870  +
mov eax [ebx+20h] +
test al 1 +
jnz loc_4378C2  +
mov edx [ebx+1Ch] +
xor ebp ebp +
mov byte ptr [edx+eax] 0 +
jmp loc_4376C3  +
mov eax [esp+2Ch+arg_4] +
mov ebp 1 +
mov [esp+2Ch+var_2C] offset aSFailedToRea_4 +
mov [esp+2Ch+var_28] eax +
call sub_436A70  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] offset aSLongNameTable +
mov [esp+2Ch+var_28] eax +
call sub_436A70  +
mov ebp 1 +
jmp loc_4376C3  +
mov ecx [esp+2Ch+arg_10] +
mov edx 4 +
mov eax ebx +
call sub_436CC0  +
test eax eax +
jnz loc_43772B  +
jmp loc_43780B  +
mov ecx [esp+2Ch+arg_10] +
mov edx 8 +
mov eax ebx +
mov dword ptr [ebx+30h] 1 +
call sub_436CC0  +
test eax eax +
jnz loc_43772B  +
jmp loc_43780B  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] offset aSHasNoArchiveI +
mov [esp+2Ch+var_28] eax +
call printf  +
jmp loc_43772B  +
mov eax [ebx+1Ch] +
mov ebp 1 +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+arg_4] +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+2Ch+var_2C] offset aSFailedToReadL +
mov [esp+2Ch+var_28] eax +
call sub_436A70  +
jmp loc_4376C3  +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov ebp 1 +
mov [esp+2Ch+var_2C] offset aSLongNameTab_0 +
mov [esp+2Ch+var_28] eax +
call sub_436A70  +
jmp loc_4376C3  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
call getc  +
mov eax [ebx+20h] +
jmp loc_4377BE  +
mov [esp+2Ch+var_2C] offset aOutOfMemoryR_5 +
mov ebp 1 +
call sub_436A70  +
jmp loc_4376C3  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx] +
test eax eax +
jz loc_437906  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+10h] +
test eax eax +
jz loc_437915  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+14h] +
test eax eax +
jz loc_437924  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_437938  +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp free  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov esi [esp+24h+arg_4] +
mov eax [ebx] +
test eax eax +
jz loc_437963  +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_24] eax +
call strcmp  +
test eax eax +
jz loc_4379B5  +
mov eax [ebx+4] +
test eax eax +
jz loc_437972  +
mov [esp+24h+var_24] eax +
call fclose  +
mov [esp+24h+var_24] ebx +
call sub_4378F0  +
mov [esp+24h+var_20] offset aRb +
mov [esp+24h+var_24] esi +
call fopen  +
mov edx eax +
mov eax 1 +
test edx edx +
jz loc_4379B5  +
mov [esp+24h+var_14] 0 +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_20] esi +
mov [esp+24h+var_24] ebx +
call sub_437600  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov edx [esp+14h+arg_4] +
mov esi [esp+14h+arg_8] +
mov eax [ebx+4] +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call fseek  +
test eax eax +
jnz loc_437A41  +
mov eax [ebx+4] +
mov [esp+14h+var_C] 3Ch +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_8] eax +
lea eax [ebx+34h] +
mov [esp+14h+var_14] eax +
call fread  +
cmp eax 3Ch +
jnz loc_437A60  +
lea eax [ebx+6Eh] +
mov [esp+14h+var_C] 2 +
mov [esp+14h+var_10] offset asc_4696A6 +
mov [esp+14h+var_14] eax +
call memcmp  +
test eax eax +
jnz loc_437A74  +
mov [esp+14h+arg_4] esi +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_437A90  +
mov eax [ebx] +
mov [esp+14h+var_14] offset aSFailedToSee_2 +
mov [esp+14h+var_10] eax +
call sub_436A70  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax [ebx] +
mov [esp+14h+var_14] offset aSFailedToRea_4 +
mov [esp+14h+var_10] eax +
call sub_436A70  +
jmp loc_437A53  +
mov eax [ebx] +
mov [esp+14h+var_14] offset aSDidNotFindA_0 +
mov [esp+14h+var_10] eax +
call sub_436A70  +
jmp loc_437A53  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+38h+arg_0] +
cmp byte ptr [ebx+34h] 2Fh +
jnz loc_437AAC  +
jmp loc_437AF3  +
cmp byte ptr [ebx+edx+34h] 2Fh +
jz loc_437AE3  +
add edx 1 +
cmp edx 10h +
jnz loc_437AA5  +
mov [esp+38h+var_38] 11h +
call sub_438CA0  +
mov ecx [ebx+34h] +
mov [eax] ecx +
mov ecx [ebx+38h] +
mov [eax+4] ecx +
mov ecx [ebx+3Ch] +
mov [eax+8] ecx +
mov edx [ebx+40h] +
mov byte ptr [eax+10h] 0 +
mov [eax+0Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx+edx+34h] 0 +
add esp 2Ch +
lea eax [ebx+34h] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+1Ch] +
test edi edi +
jz loc_437B01  +
mov esi [ebx+20h] +
test esi esi +
jnz loc_437B17  +
mov [esp+38h+var_38] offset aArchiveMemberU +
call sub_436A70  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+38h+var_1C] +
mov dword ptr [ebx+24h] 0 +
mov [esp+38h+var_34] eax +
lea eax [ebx+35h] +
mov [esp+38h+var_30] 0Ah +
mov [esp+38h+var_38] eax +
call strtoul  +
mov ecx [ebx+2Ch] +
test ecx ecx +
mov ebp eax +
jnz loc_437BB6  +
mov esi [ebx+20h] +
cmp ebp esi +
ja loc_437C47  +
mov edi [ebx+1Ch] +
jnb loc_437C5E  +
movzx eax byte ptr [edi+ebp] +
mov edx ebp +
cmp al 0Ah +
jz loc_437B64  +
test al al +
jnz loc_437BAD  +
test edx edx +
jnz loc_437BEA  +
mov esi edx +
mov byte ptr [edi+esi] 0 +
mov edx [ebx+2Ch] +
test edx edx +
jz loc_437C3D  +
mov eax [ebx+24h] +
test eax eax +
jz loc_437C3D  +
cmp esi ebp +
ja loc_437C02  +
mov [esp+38h+var_38] offset aInvalidThinArc +
call sub_436A70  +
xor eax eax +
jmp loc_437ADB  +
movzx ecx byte ptr [edi+edx] +
cmp cl 0Ah +
jz loc_437B64  +
test cl cl +
jz loc_437B64  +
add edx 1 +
cmp esi edx +
ja loc_437BA0  +
jmp loc_437B64  +
mov eax [esp+38h+var_1C] +
test eax eax +
jz loc_437B42  +
cmp byte ptr [eax] 3Ah +
jnz loc_437B42  +
add eax 1 +
mov [esp+38h+var_30] 0Ah +
mov [esp+38h+var_34] 0 +
mov [esp+38h+var_38] eax +
call strtoul  +
mov [ebx+24h] eax +
jmp loc_437B42  +
cmp byte ptr [edi+edx-1] 2Fh +
lea eax [edx-1] +
cmovz edx eax +
cmp edx esi +
ja loc_437B6E  +
jmp loc_437B6C  +
sub esi ebp +
mov eax [ebx] +
mov [esp+38h+var_30] esi +
mov edx [ebx+1Ch] +
mov [esp+38h+var_38] eax +
add edx ebp +
mov [esp+38h+var_34] edx +
call sub_4374F0  +
test eax eax +
mov esi eax +
jz loc_437C35  +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_38] eax +
call sub_437940  +
test eax eax +
jz loc_437C65  +
mov [esp+38h+var_38] esi +
call free  +
mov eax [ebx+1Ch] +
add eax ebp +
jmp loc_437ADB  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] offset aFoundLongNameI +
call sub_436A70  +
xor eax eax +
jmp loc_437ADB  +
mov edx ebp +
jmp loc_437B64  +
mov eax [ebx+24h] +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_38] eax +
call sub_4379C0  +
test eax eax +
mov edi eax +
jz loc_437C35  +
mov [esp+38h+var_38] esi +
call free  +
mov eax edi +
jmp loc_437ADB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov edi [ebx] +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov [esp+2Ch+var_2C] esi +
mov ebp eax +
call strlen  +
mov ecx [ebx+2Ch] +
add ebp eax +
test ecx ecx +
lea edx [ebp+3] +
jnz loc_437D10  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] edx +
call malloc  +
mov edx [esp+2Ch+var_10] +
test eax eax +
mov ebx eax +
jz loc_437DCA  +
mov [esp+2Ch+var_1C] esi +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_24] offset aSS_5 +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_436A40  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
test eax eax +
jz loc_437D77  +
mov eax [esp+2Ch+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_437DB3  +
mov [esp+2Ch+var_2C] eax +
call strlen  +
lea ebp [ebp+eax+5] +
mov [esp+2Ch+var_2C] ebp +
call malloc  +
test eax eax +
mov ebx eax +
jz loc_437DCA  +
mov eax [esp+2Ch+arg_4] +
mov edx [eax] +
mov [esp+2Ch+var_18] esi +
test edx edx +
jz loc_437DC0  +
mov [esp+2Ch+var_1C] edx +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] offset aSSS_0 +
call sub_436A40  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] edx +
call malloc  +
mov edx [esp+2Ch+var_10] +
test eax eax +
mov ebx eax +
jz loc_437DCA  +
mov [esp+2Ch+var_1C] esi +
mov [esp+2Ch+var_20] edi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] offset aSS_6 +
mov [esp+2Ch+var_28] edx +
call sub_436A40  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebp 0Eh +
jmp loc_437D31  +
mov [esp+2Ch+var_1C] offset aCorrupt_0 +
jmp loc_437D55  +
mov [esp+2Ch+var_2C] offset aOutOfMemory +
call sub_436A70  +
xor eax eax +
jmp loc_437D07  +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_442028 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_47286C +
mov esi ds:dword_472868 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_437E55  +
cmp [esp+14h+var_14] esi +
jle loc_437E55  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_437E74  +
test edx edx +
jle loc_437EAD  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_437E40  +
cmp esi edi +
jg loc_437E14  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_472868 edi +
mov ds:dword_47286C eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_437EA5  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_437E90  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_437E10  +
add edi edx +
jmp loc_437E10  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_442028 +
mov ds:dword_472864 0 +
test eax eax +
jnz loc_438120  +
mov dword_442028 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_472868 eax +
mov ds:dword_47286C eax +
mov ds:dword_472878 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_472870 eax +
cmp dl 2Dh +
jz loc_4383B3  +
cmp dl 2Bh +
jz loc_438362  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_472874 eax +
mov ds:dword_472860 1 +
mov edx ds:dword_472878 +
test edx edx +
jz loc_438133  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_438133  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_4381E4  +
mov eax dword_442028 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_437FE2  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_4381E4  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_437FE2  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_437FE2  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_437FD8  +
jmp loc_43889A  +
cmp bl dl +
jz loc_438553  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_437FD0  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_438003  +
cmp al 3Dh +
jnz loc_437FF9  +
jmp loc_438003  +
test al al +
jz loc_438003  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_437FF5  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_4384B2  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_438054  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_438098  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_438048  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_438483  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_438040  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_438054  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_438420  +
mov eax dword_442024 +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_4380EF  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_472878 +
mov esi dword_442028 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_442028 esi +
mov dword_442020 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_472878 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_472860 +
test esi esi +
jz loc_437EED  +
jmp loc_437F42  +
mov eax dword_442028 +
cmp ds:dword_472868 eax +
jle loc_438145  +
mov ds:dword_472868 eax +
cmp eax ds:dword_47286C +
jge loc_438152  +
mov ds:dword_47286C eax +
mov ebx ds:dword_472874 +
cmp ebx 1 +
jz loc_4382D0  +
cmp [esp+4Ch+arg_0] eax +
jz loc_43833C  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_469BB0 +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_4382A0  +
mov edx ds:dword_47286C +
add eax 1 +
mov ecx ds:dword_472868 +
mov dword_442028 eax +
cmp edx ecx +
jz loc_438490  +
cmp eax ecx +
jz loc_4381C1  +
mov eax [esp+4Ch+arg_4] +
call sub_437DE0  +
mov edx ds:dword_47286C +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_472868 eax +
mov dword_442028 eax +
jnz loc_43834F  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_472878 ecx +
test al al +
jz loc_438222  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_438711  +
mov eax [esp+4Ch+arg_8] +
jmp loc_438218  +
cmp dl bl +
jz loc_4383C7  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_438210  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_43823A  +
add dword_442028 1 +
test dl dl +
jz loc_4383F1  +
mov ecx dword_442024 +
test ecx ecx +
jz loc_438411  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_472870 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_43868B  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_442020 eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_438376  +
test ebx ebx +
jz loc_4381D7  +
add eax 1 +
mov dword_442028 eax +
mov eax 1 +
mov ds:dword_472864 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_47286C +
mov edx ds:dword_472868 +
cmp ecx edx +
jz loc_438541  +
cmp eax edx +
jz loc_4382F6  +
mov eax [esp+4Ch+arg_4] +
call sub_437DE0  +
mov eax dword_442028 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_43832C  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_438319  +
add edx 1 +
cmp edx esi +
mov dword_442028 edx +
jz loc_4383E0  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_438308  +
cmp byte ptr [eax+1] 0 +
jz loc_438308  +
mov eax dword_442028 +
mov ds:dword_472868 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_43816B  +
mov eax ds:dword_472868 +
mov edx ds:dword_47286C +
cmp eax edx +
jz loc_4381D7  +
mov dword_442028 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_472874 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_437F38  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_4382AA  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_438537  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_472878 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_437F63  +
mov ds:dword_472874 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_437F38  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_438229  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_472868 edx +
jmp loc_438332  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_438567  +
cmp dl 3Ah +
jz loc_438652  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4382C5  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_43828B  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_4384B2  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_442028 eax +
cmp byte ptr [esi] 0 +
jnz loc_43849C  +
cmp dword ptr [ebx+4] 1 +
jz loc_43875B  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_472878 eax +
jz loc_43846C  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_4387AD  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_4382C5  +
mov esi [esp+4Ch+var_18] +
jmp loc_438430  +
mov ds:dword_47286C eax +
mov edx eax +
jmp loc_4381C1  +
mov eax [ebx+4] +
test eax eax +
jz loc_438698  +
add esi 1 +
mov ds:dword_472864 esi +
jmp loc_43844B  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_4388A4  +
mov esi dword_442024 +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_438511  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_4389FE  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_442028 +
add eax 1 +
mov dword_442028 eax +
mov eax 3Fh +
mov ds:dword_472878 offset unk_469C9C +
mov dword_442020 0 +
jmp loc_4382C5  +
mov eax 1 +
jmp loc_438399  +
cmp eax ecx +
jz loc_4382F6  +
mov ds:dword_47286C eax +
jmp loc_4382F6  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_472878 ecx +
jmp loc_4381FC  +
cmp dl 3Bh +
jnz loc_4383FE  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_43886D  +
add dword_442028 1 +
mov ds:dword_472864 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_472878 eax +
cmp bl 3Dh +
jz loc_438B43  +
test bl bl +
jz loc_438B43  +
mov esi eax +
jmp loc_4385B4  +
test bl bl +
jz loc_4385BF  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_4385B0  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_438B2F  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_438618  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_4387B5  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_438608  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_4389E2  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_438600  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_438608  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_438787  +
cmp byte ptr [eax+1] 0 +
jz loc_43872D  +
add dword_442028 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_472864 ecx +
mov ds:dword_472878 0 +
jmp loc_4382C5  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_438279  +
mov eax dword_442024 +
test eax eax +
jz loc_43844B  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_438904  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_472878 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_472878 esi +
mov dword_442020 eax +
mov eax 3Fh +
jmp loc_4382C5  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_438229  +
mov eax dword_442028 +
cmp eax [esp+4Ch+arg_0] +
jz loc_438931  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_442028 edx +
mov eax [ecx+eax*4] +
mov ds:dword_472864 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_43867C  +
cmp [esp+4Ch+arg_0] eax +
jle loc_43882D  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_442028 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_472864 eax +
jmp loc_43844B  +
cmp byte ptr [eax+1] 0 +
jz loc_4388F5  +
add dword_442028 1 +
mov ds:dword_472864 ecx +
mov ds:dword_472878 0 +
jmp loc_438407  +
mov eax [ebx+0Ch] +
jmp loc_4382C5  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_43895F  +
mov ecx dword_442024 +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_43880C  +
mov eax dword_442028 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_472878 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_442028 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_472878 ebx +
jmp loc_4382C5  +
mov eax dword_442024 +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_438A32  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_472878 esi +
mov dword_442020 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_438290  +
mov eax 3Ah +
jmp loc_4382C5  +
mov eax dword_442028 +
cmp eax [esp+4Ch+arg_0] +
jz loc_438A6A  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_442028 edx +
mov eax [edi+eax*4] +
mov ds:dword_472864 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_43858F  +
movzx eax [esp+4Ch+var_19] +
jmp loc_438555  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_4389F1  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_4388DF  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_438B7F  +
mov edx [esp+4Ch+arg_8] +
jmp loc_4388D5  +
cmp cl bl +
jz loc_438555  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_4388CD  +
cmp dword_442024 0 +
jnz loc_4384D7  +
mov eax [esp+4Ch+var_24] +
jmp loc_438511  +
mov ds:dword_472864 0 +
jmp loc_43879E  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_4386E9  +
mov eax dword_442024 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_438B04  +
mov eax [esp+4Ch+arg_8] +
mov dword_442020 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_43867C  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_438B2F  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_438ABA  +
cmp dword ptr [eax+4] 0 +
jnz loc_438B71  +
cmp dword_442024 0 +
jz loc_4389BE  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_472878 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_472878 eax +
mov eax 3Fh +
jmp loc_4382C5  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_438973  +
cmp dword_442024 0 +
jz loc_4388EC  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_442028 +
jmp loc_438511  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_472878 +
jmp loc_43883E  +
mov eax dword_442024 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_438A9E  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_442020 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_4382C5  +
cmp dword ptr [eax+4] 1 +
jz loc_438B4C  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_472878 eax +
jz loc_438AE5  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_438B89  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_4382C5  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_438943  +
mov ds:dword_472878 0 +
mov eax 57h +
jmp loc_4382C5  +
mov esi [esp+4Ch+var_34] +
jmp loc_4385BF  +
mov eax dword_442028 +
cmp [esp+4Ch+arg_0] eax +
jle loc_438B95  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_442028 edx +
mov eax [ecx+eax*4] +
mov ds:dword_472864 eax +
jmp loc_438AC4  +
add esi 1 +
mov ds:dword_472864 esi +
jmp loc_438AC4  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_438555  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_4382C5  +
cmp dword_442024 0 +
jz loc_438BC8  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_472878 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_472878 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_438290  +
jmp loc_438863  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437EC0  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov off_44202C eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
test esi esi +
jz loc_438E56  +
mov ecx [esi] +
test ecx ecx +
jz loc_438E4B  +
xor eax eax +
nop   +
add eax 1 +
mov edx [esi+eax*4] +
test edx edx +
jnz loc_438DD0  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_438CA0  +
mov [esp+1Ch+var_10] eax +
mov eax [esi] +
test eax eax +
jz loc_438E52  +
lea ebx [esi+4] +
mov ebp esi +
xor edi edi +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add edi [esp+1Ch+var_10] +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_438CA0  +
mov [edi] eax +
mov edx [ebp+0] +
mov edi ebx +
mov ebp ebx +
add ebx 4 +
mov [esp+1Ch+var_1C] eax +
sub edi esi +
mov [esp+1Ch+var_18] edx +
call strcpy  +
mov eax [ebx-4] +
test eax eax +
jnz loc_438E00  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax+edi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_438DE1  +
xor edi edi +
jmp loc_438E38  +
xor eax eax +
jmp loc_438E43  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_438E94  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_438E86  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_438E75  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
test ebx ebx +
jz loc_4390B3  +
mov [esp+2Ch+var_2C] ebx +
xor esi esi +
xor ebp ebp +
call strlen  +
xor edi edi +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_438CA0  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_14] eax +
jmp loc_438EF3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test byte ptr ds:word_4699A0[eax+eax] 40h +
jnz loc_438EF0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_439036  +
mov eax [esp+2Ch+var_18] +
sub eax 1 +
cmp [esp+2Ch+var_1C] eax +
jge loc_439036  +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebx] +
mov edx [esp+2Ch+var_14] +
test al al +
jnz loc_438F51  +
jmp loc_438F96  +
mov [edx] al +
xor esi esi +
add edx 1 +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_438F96  +
movzx ecx al +
test byte ptr ds:word_4699A0[ecx+ecx] 40h +
jz loc_438F6A  +
mov ecx esi +
or ecx edi +
or ecx ebp +
jz loc_439090  +
test esi esi +
jnz loc_438F40  +
cmp al 5Ch +
jz loc_439016  +
test edi edi +
jz loc_439003  +
cmp al 27h +
jz loc_439077  +
add ebx 1 +
add edx 1 +
mov [edx-1] al +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_438F51  +
mov eax [esp+2Ch+var_14] +
mov byte ptr [edx] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_43AA80  +
mov edx [esp+2Ch+var_10] +
add [esp+2Ch+var_1C] 1 +
mov [edx] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
mov dword ptr [eax+edx*4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4699A0[edx+edx] 40h +
jz loc_438FE3  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test byte ptr ds:word_4699A0[edx+edx] 40h +
jnz loc_438FD0  +
test al al +
jnz loc_438EF3  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_20] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jz loc_439020  +
cmp al 22h +
jnz loc_438F86  +
xor ebp ebp +
jmp loc_438F47  +
mov esi 1 +
jmp loc_438F47  +
cmp al 27h +
jz loc_439080  +
cmp al 22h +
jnz loc_438F86  +
mov ebp 1 +
jmp loc_438F47  +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_439099  +
shl [esp+2Ch+var_18] 1 +
mov eax [esp+2Ch+var_18] +
shl eax 2 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_2C] eax +
call sub_438D20  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
mov dword ptr [eax] 0 +
jmp loc_438F2C  +
xor edi edi +
jmp loc_438F47  +
mov edi 1 +
jmp loc_438F47  +
xor esi esi +
xor ebp ebp +
jmp loc_438F96  +
mov [esp+2Ch+var_2C] 20h +
call sub_438CA0  +
mov [esp+2Ch+var_18] 8 +
mov [esp+2Ch+var_20] eax +
jmp loc_43905D  +
mov [esp+2Ch+var_20] 0 +
jmp loc_438FF7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov edi [esp+30h] +
test esi esi +
jz loc_43912C  +
mov ebx [edi] +
test ebx ebx +
jnz loc_4390FC  +
jmp loc_43915D  +
cmp al 27h +
jz loc_439117  +
cmp al 22h +
jz loc_439117  +
mov [esp+4] esi +
mov [esp] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_43912C  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_439140  +
movzx edx al +
movsx ebp al +
test byte ptr ds:word_4699A0[edx+edx] 40h +
jnz loc_439117  +
cmp al 5Ch +
jnz loc_4390E0  +
mov [esp+4] esi +
mov dword ptr [esp] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_4390E8  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_43912C  +
add edi 4 +
jmp loc_4390D3  +
***
xor eax eax +
nop   +
jmp loc_439131  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+48h+arg_0] +
lea ebx [ebp+1] +
mov [esp+48h+var_30] 7D0h +
mov ecx [eax] +
cmp ebx ecx +
jge loc_4391AE  +
nop   +
mov eax [esp+48h+arg_4] +
lea edi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_4391B6  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_439190  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+48h+var_30] 1 +
jz loc_439421  +
add eax 1 +
mov [esp+48h+var_44] offset aR +
mov [esp+48h+var_48] eax +
call fopen  +
test eax eax +
mov esi eax +
jz loc_4393A8  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_4393A0  +
mov [esp+48h+var_48] esi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+48h+var_2C] eax +
jz loc_4393A0  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] esi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_4393A0  +
mov edx [esp+48h+var_2C] +
lea eax [edx+1] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] edx +
call sub_438CA0  +
mov edx [esp+48h+var_28] +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_2C] eax +
call fread  +
mov edx [esp+48h+var_28] +
cmp edx eax +
mov ecx eax +
jz loc_43928A  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_28] eax +
call ferror  +
mov ecx [esp+48h+var_28] +
test eax eax +
jnz loc_4393A0  +
mov eax [esp+48h+var_2C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_4392C8  +
test byte ptr ds:word_4699A0[eax+eax] 40h +
jz loc_4393B5  +
mov eax [esp+48h+var_2C] +
jmp loc_4392BE  +
test byte ptr ds:word_4699A0[edx+edx] 40h +
jz loc_4393B5  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4392B0  +
mov [esp+48h+var_48] 4 +
call sub_438CA0  +
mov dword ptr [eax] 0 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_438DB0  +
xor edx edx +
mov [esp+48h+var_20] 0 +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
mov ecx [esp+48h+arg_0] +
mov eax edx +
mov [esp+48h+var_1C] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+48h+var_44] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call sub_438D20  +
mov ecx [esp+48h+arg_4] +
mov edx [esp+48h+var_1C] +
mov [esp+48h+var_28] edx +
mov [ecx] eax +
mov ecx [esp+48h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+48h+var_40] ecx +
lea ecx [eax+edi+4] +
lea eax [eax+ebx*4] +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] eax +
call memmove  +
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+var_24] +
add edi [eax] +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+arg_0] +
mov edx [esp+48h+var_28] +
mov edi [esp+48h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [edi] eax +
mov [esp+48h+var_48] ebx +
mov ebx ebp +
call free  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call free  +
nop   +
mov [esp+48h+var_48] esi +
call fclose  +
mov eax [esp+48h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_4391A7  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call sub_438EA0  +
mov edx [eax] +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_438DB0  +
mov edx [esp+48h+var_20] +
test edx edx +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
jz loc_43944B  +
mov eax [esp+48h+var_24] +
xor edx edx +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_1C] ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ebp ds:0[edx*4] +
jnz loc_439400  +
mov [esp+48h+var_20] ebp +
mov ebp [esp+48h+var_1C] +
mov [esp+48h+var_28] ecx +
jmp loc_439302  +
mov eax [edx] +
mov [esp+48h+var_44] offset aSErrorTooMany@ +
mov [esp+48h+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+48h+var_48] eax +
call fprintf  +
mov [esp+48h+var_48] 1 +
call sub_43A9D0  +
mov [esp+48h+var_20] 0 +
jmp loc_439302  +
***
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_439470  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_437EC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437EC0  +
add esp 2Ch +
retn   +
***
mov edx [esp+arg_0] +
cmp edx 2Eh +
jz loc_439A76  +
jbe loc_439582  +
cmp edx 43h +
jz loc_439AB6  +
nop   +
lea esi [esi+0] +
ja loc_439630  +
cmp edx 38h +
jz loc_439A80  +
nop   +
jbe loc_439690  +
cmp edx 3Dh +
jz loc_439A66  +
nop   +
ja loc_439808  +
cmp edx 3Ah +
mov eax offset aDw_tag_importe +
jz locret_439580  +
mov eax offset aDw_tag_namespa +
jb locret_439580  +
cmp edx 3Bh +
mov eax offset aDw_tag_unspeci +
jz locret_439580  +
cmp edx 3Ch +
mov eax offset aDw_tag_partial +
jnz loc_4395E0  +
nop   +
lea esi [esi+0] +
retn   +
cmp edx 19h +
jz loc_439A96  +
nop   +
lea esi [esi+0] +
ja loc_4395E3  +
cmp edx 0Dh +
jz loc_439A70  +
nop   +
lea esi [esi+0] +
jbe loc_4396E0  +
cmp edx 13h +
jz loc_439AA6  +
nop   +
ja loc_439874  +
cmp edx 10h +
mov eax offset aDw_tag_referen +
jz locret_439580  +
jbe loc_439A04  +
cmp edx 11h +
mov eax offset aDw_tag_compile +
jz locret_439580  +
cmp edx 12h +
mov eax offset aDw_tag_string_ +
jz locret_439580  +
lea esi [esi+0] +
xor eax eax +
retn   +
cmp edx 23h +
jz loc_439A90  +
lea esi [esi+0] +
jbe loc_439730  +
cmp edx 28h +
jz loc_439A50  +
nop   +
jbe loc_439926  +
cmp edx 2Bh +
jz loc_439918  +
nop   +
ja loc_4399A0  +
cmp edx 29h +
mov eax offset aDw_tag_file_ty +
jz locret_439580  +
cmp edx 2Ah +
mov eax offset aDw_tag_friend +
jnz loc_4395E0  +
retn   +
cmp edx 4105h +
jz loc_439A86  +
lea esi [esi+0] +
jbe loc_439780  +
cmp edx 410Ah +
jz loc_439AB0  +
jbe loc_439960  +
cmp edx 8767h +
jz loc_439920  +
ja loc_4399C0  +
cmp edx 8765h +
mov eax offset aDw_tag_upc_sha +
jz locret_439580  +
cmp edx 8766h +
mov eax offset aDw_tag_upc_str +
jnz loc_4395E0  +
retn   +
cmp edx 33h +
jz loc_439AA0  +
lea esi [esi+0] +
ja loc_4397D1  +
cmp edx 30h +
mov eax offset aDw_tag_templat +
jz locret_439580  +
mov eax offset aDw_tag_templ_0 +
jb locret_439580  +
cmp edx 31h +
mov eax offset aDw_tag_thrown_ +
jz locret_439580  +
cmp edx 32h +
mov eax offset aDw_tag_try_blo +
jnz loc_4395E0  +
retn   +
cmp edx 4 +
jz loc_439A60  +
lea esi [esi+0] +
ja loc_439840  +
cmp edx 1 +
mov eax offset aDw_tag_array_t +
jz locret_439580  +
mov eax offset aDw_tag_padding +
jb locret_439580  +
cmp edx 2 +
mov eax offset aDw_tag_class_t +
jz locret_439580  +
cmp edx 3 +
mov eax offset aDw_tag_entry_p +
jnz loc_4395E0  +
retn   +
cmp edx 1Eh +
jz loc_439A47  +
lea esi [esi+0] +
ja loc_4398E1  +
cmp edx 1Bh +
mov eax offset aDw_tag_common_ +
jz locret_439580  +
mov eax offset aDw_tag_commo_0 +
jb locret_439580  +
cmp edx 1Ch +
mov eax offset aDw_tag_inherit +
jz locret_439580  +
cmp edx 1Dh +
mov eax offset aDw_tag_inlined +
jnz loc_4395E0  +
retn   +
cmp edx 4092h +
jz loc_439A56  +
lea esi [esi+0] +
ja loc_4398A6  +
cmp edx 4081h +
mov eax offset aDw_tag_mips_lo +
jz locret_439580  +
jbe loc_439A24  +
cmp edx 4090h +
mov eax offset aDw_tag_hp_arra +
jz locret_439580  +
cmp edx 4091h +
mov eax offset aDw_tag_hp_blis +
jnz loc_4395E0  +
retn   +
cmp edx 35h +
mov eax offset aDw_tag_volatil +
jz locret_439580  +
mov eax offset aDw_tag_variabl +
jb locret_439580  +
cmp edx 36h +
mov eax offset aDw_tag_dwarf_p +
jz locret_439580  +
cmp edx 37h +
mov eax offset aDw_tag_restric +
jnz loc_4395E0  +
retn   +
cmp edx 40h +
mov eax offset aDw_tag_shared_ +
jz locret_439580  +
jbe loc_4399F4  +
cmp edx 41h +
mov eax offset aDw_tag_type_un +
jz locret_439580  +
cmp edx 42h +
mov eax offset aDw_tag_rvalue_ +
jnz loc_4395E0  +
retn   +
cmp edx 8 +
mov eax offset aDw_tag_impor_0 +
jz locret_439580  +
nop   +
jbe loc_4399E4  +
cmp edx 0Ah +
mov eax offset aDw_tag_label +
jz locret_439580  +
cmp edx 0Bh +
mov eax offset aDw_tag_lexical +
jnz loc_4395E0  +
retn   +
cmp edx 16h +
mov eax offset aDw_tag_typedef +
jz locret_439580  +
jbe loc_439A14  +
cmp edx 17h +
mov eax offset aDw_tag_union_t +
jz locret_439580  +
cmp edx 18h +
mov eax offset aDw_tag_unspe_0 +
jnz loc_4395E0  +
retn   +
cmp edx 4102h +
mov eax offset aDw_tag_functio +
jz locret_439580  +
jbe loc_439A34  +
cmp edx 4103h +
mov eax offset aDw_tag_class_0 +
jz locret_439580  +
cmp edx 4104h +
mov eax offset aDw_tag_gnu_bin +
jnz loc_4395E0  +
retn   +
cmp edx 20h +
mov eax offset aDw_tag_set_typ +
jz locret_439580  +
mov eax offset aDw_tag_ptr_to_ +
jb locret_439580  +
cmp edx 21h +
mov eax offset aDw_tag_subrang +
jz locret_439580  +
cmp edx 22h +
mov eax offset aDw_tag_with_st +
jnz loc_4395E0  +
retn   +
mov eax offset aDw_tag_namelis +
retn   +
mov eax offset aDw_tag_upc_rel +
retn   +
cmp edx 25h +
mov eax offset aDw_tag_catch_b +
jz locret_439580  +
mov eax offset aDw_tag_base_ty +
jb locret_439580  +
cmp edx 26h +
mov eax offset aDw_tag_const_t +
jz locret_439580  +
cmp edx 27h +
mov eax offset aDw_tag_constan +
jnz loc_4395E0  +
retn   +
cmp edx 4107h +
mov eax offset aDw_tag_gnu_tem +
jz locret_439580  +
mov eax offset aDw_tag_gnu_t_0 +
jb locret_439580  +
cmp edx 4108h +
mov eax offset aDw_tag_gnu_for +
jz locret_439580  +
cmp edx 4109h +
mov eax offset aDw_tag_gnu_cal +
jnz loc_4395E0  +
retn   +
cmp edx 2Ch +
mov eax offset aDw_tag_namel_0 +
jz locret_439580  +
cmp edx 2Dh +
mov eax offset aDw_tag_packed_ +
jnz loc_4395E0  +
retn   +
cmp edx 0A000h +
mov eax offset aDw_tag_pgi_kan +
jz locret_439580  +
cmp edx 0A020h +
mov eax offset aDw_tag_pgi_int +
jnz loc_4395E0  +
retn   +
cmp edx 5 +
mov eax offset aDw_tag_formal_ +
jnz loc_4395E0  +
retn   +
cmp edx 3Fh +
mov eax offset aDw_tag_conditi +
jnz loc_4395E0  +
retn   +
cmp edx 0Fh +
mov eax offset aDw_tag_pointer +
jnz loc_4395E0  +
retn   +
cmp edx 15h +
mov eax offset aDw_tag_subrout +
jnz loc_4395E0  +
retn   +
cmp edx 47h +
mov eax offset aDw_tag_atomic_ +
jnz loc_4395E0  +
retn   +
cmp edx 4101h +
mov eax offset aDw_tag_format_ +
jnz loc_4395E0  +
retn   +
mov eax offset aDw_tag_module +
retn   +
mov eax offset aDw_tag_enumera +
retn   +
mov eax offset aDw_tag_hp_bl_0 +
retn   +
mov eax offset aDw_tag_enume_0 +
retn   +
mov eax offset aDw_tag_impor_1 +
retn   +
mov eax offset aDw_tag_member +
retn   +
mov eax offset aDw_tag_subprog +
retn   +
mov eax offset aDw_tag_interfa +
retn   +
mov eax offset aDw_tag_gnu_ein +
retn   +
mov eax offset aDw_tag_access_ +
retn   +
mov eax offset aDw_tag_variant +
retn   +
mov eax offset aDw_tag_varia_0 +
retn   +
mov eax offset aDw_tag_structu +
retn   +
mov eax offset aDw_tag_gnu_c_0 +
retn   +
mov eax offset aDw_tag_templ_1 +
retn   +
***
mov edx [esp+arg_0] +
cmp edx 10h +
jz loc_439C40  +
ja loc_439B10  +
cmp edx 8 +
jz loc_439C46  +
nop   +
lea esi [esi+0] +
jbe loc_439B46  +
cmp edx 0Ch +
jz loc_439C38  +
nop   +
lea esi [esi+0] +
ja loc_439BC0  +
cmp edx 0Ah +
mov eax offset aDw_form_block1 +
jz locret_439B44  +
mov edx offset aDw_form_data1 +
mov eax offset aDw_form_block +
cmova eax edx +
retn   +
cmp edx 17h +
jz loc_439C32  +
jbe loc_439B70  +
cmp edx 1F01h +
jz loc_439C50  +
ja loc_439B93  +
cmp edx 19h +
mov eax offset aDw_form_flag_p +
jz locret_439B44  +
mov eax offset aDw_form_exprlo +
jb locret_439B44  +
cmp edx 20h +
mov eax offset aDw_form_ref_si +
jnz loc_439BBA  +
retn   +
cmp edx 4 +
jz loc_439C20  +
nop   +
jbe loc_439C00  +
cmp edx 6 +
mov eax offset aDw_form_data4 +
jz locret_439B44  +
mov edx offset aDw_form_data8 +
mov eax offset aDw_form_data2 +
cmova eax edx +
retn   +
cmp edx 13h +
jz loc_439C26  +
jbe loc_439BE0  +
cmp edx 15h +
mov eax offset aDw_form_ref_ud +
jz locret_439B44  +
mov edx offset aDw_form_indire +
mov eax offset aDw_form_ref8 +
cmova eax edx +
retn   +
cmp edx 1F20h +
mov eax offset aDw_form_gnu_re +
jz locret_439B44  +
cmp edx 1F21h +
mov eax offset aDw_form_gnu__1 +
jz locret_439B44  +
cmp edx 1F02h +
mov eax offset aDw_form_gnu__2 +
jz locret_439C30  +
xor eax eax +
retn   +
cmp edx 0Eh +
mov eax offset aDw_form_strp +
jz locret_439B44  +
mov edx offset aDw_form_udata +
mov eax offset aDw_form_sdata +
cmova eax edx +
retn   +
cmp edx 11h +
mov eax offset aDw_form_ref1 +
jz locret_439B44  +
cmp edx 12h +
mov eax offset aDw_form_ref2 +
jnz loc_439BBA  +
retn   +
cmp edx 1 +
mov eax offset aDw_form_addr +
jz locret_439B44  +
cmp edx 3 +
mov eax offset aDw_form_block2 +
jnz loc_439BBA  +
retn   +
mov eax offset aDw_form_block4 +
retn   +
mov eax offset aDw_form_ref4 +
retn   +
retn   +
mov eax offset aDw_form_sec_of +
retn   +
mov eax offset aDw_form_flag +
retn   +
mov eax offset aDw_form_ref_ad +
retn   +
mov eax offset aDw_form_string +
retn   +
mov eax offset aDw_form_gnu_ad +
retn   +
***
mov edx [esp+arg_0] +
cmp edx 6Ah +
jz loc_43A8BE  +
jbe loc_439CF1  +
cmp edx 210Bh +
jz loc_43A342  +
nop   +
ja loc_439D63  +
cmp edx 2015h +
jz loc_43A8C4  +
ja loc_439E33  +
cmp edx 2005h +
jz loc_43A8CA  +
ja loc_439F93  +
cmp edx 87h +
jz loc_43A33C  +
jbe loc_43A390  +
cmp edx 2002h +
jz loc_43A918  +
ja loc_43A710  +
cmp edx 2000h +
mov eax offset aDw_at_hp_block +
jz locret_43A362  +
cmp edx 2001h +
jnz loc_43A360  +
mov eax offset aDw_at_mips_f_0 +
retn   +
cmp edx 3Ch +
jz loc_43A930  +
ja loc_439DD0  +
cmp edx 1Ch +
jz loc_43A936  +
lea esi [esi+0] +
jbe loc_439F40  +
cmp edx 2Fh +
jz loc_43A8EE  +
nop   +
ja loc_43A0B3  +
cmp edx 22h +
jz loc_43A34E  +
nop   +
jbe loc_43A490  +
cmp edx 2Ah +
jz loc_43A8F4  +
nop   +
ja loc_43A633  +
cmp edx 25h +
mov eax offset aDw_at_producer +
jz locret_43A362  +
cmp edx 27h +
jnz loc_43A360  +
mov eax offset aDw_at_prototyp +
retn   +
cmp edx 2201h +
jz loc_43A924  +
ja loc_439EE3  +
cmp edx 2116h +
jz loc_43A888  +
ja loc_43A140  +
cmp edx 2110h +
jz loc_43A336  +
jbe loc_43A416  +
cmp edx 2113h +
jz loc_43A8B2  +
ja loc_43A733  +
cmp edx 2111h +
mov eax offset aDw_at_gnu_call +
jz locret_43A362  +
cmp edx 2112h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_ca_0 +
retn   +
cmp edx 53h +
jz loc_43A92A  +
ja loc_439E90  +
cmp edx 47h +
jz loc_43A882  +
nop   +
lea esi [esi+0] +
ja loc_43A030  +
cmp edx 41h +
jz loc_43A330  +
nop   +
jbe loc_43A3E0  +
cmp edx 44h +
jz loc_43A8AC  +
nop   +
ja loc_43A6F0  +
cmp edx 42h +
mov eax offset aDw_at_identifi +
jz locret_43A362  +
cmp edx 43h +
jnz loc_43A360  +
mov eax offset aDw_at_macro_in +
retn   +
cmp edx 2023h +
jz loc_43A85E  +
ja loc_439FE0  +
cmp edx 201Ah +
jz loc_43A35A  +
jbe loc_43A500  +
cmp edx 2020h +
jz loc_43A966  +
ja loc_43A5A6  +
cmp edx 201Bh +
mov eax offset aDw_at_hp_prof_ +
jz locret_43A362  +
cmp edx 201Fh +
jnz loc_43A360  +
mov eax offset aDw_at_hp_unit_ +
retn   +
cmp edx 5Eh +
jz loc_43A912  +
ja loc_43A073  +
cmp edx 58h +
jz loc_43A354  +
nop   +
lea esi [esi+0] +
jbe loc_43A4C6  +
cmp edx 5Bh +
jz loc_43A960  +
nop   +
ja loc_43A773  +
cmp edx 59h +
mov eax offset aDw_at_call_lin +
jz locret_43A362  +
cmp edx 5Ah +
jnz loc_43A360  +
mov eax offset aDw_at_descript +
retn   +
cmp edx 3FE2h +
jz loc_43A8A0  +
ja loc_43A0F3  +
cmp edx 2305h +
jz loc_43A32A  +
jbe loc_43A455  +
cmp edx 3A01h +
jz loc_43A8B8  +
ja loc_43A610  +
cmp edx 3210h +
mov eax offset aDw_at_upc_thre +
jz locret_43A362  +
cmp edx 3A00h +
jnz loc_43A360  +
mov eax offset aDw_at_pgi_lbas +
retn   +
cmp edx 11h +
jz loc_43A95A  +
ja loc_43A190  +
cmp edx 0Ah +
jz loc_43A348  +
nop   +
lea esi [esi+0] +
jbe loc_43A3B6  +
cmp edx 0Dh +
jz loc_43A91E  +
nop   +
ja loc_43A756  +
cmp edx 0Bh +
mov eax offset aDw_at_byte_siz +
jz locret_43A362  +
cmp edx 0Ch +
jnz loc_43A360  +
mov eax offset aDw_at_bit_offs +
retn   +
cmp edx 200Bh +
jz loc_43A8D0  +
ja loc_43A1D3  +
cmp edx 2008h +
jz loc_43A8E2  +
ja loc_43A693  +
cmp edx 2006h +
mov eax offset aDw_at_mips_sof +
jz locret_43A362  +
cmp edx 2007h +
jnz loc_43A360  +
mov eax offset aDw_at_mips_lin +
retn   +
cmp edx 2105h +
jz loc_43A88E  +
ja loc_43A2D3  +
cmp edx 2102h +
jz loc_43A852  +
nop   +
ja loc_43A7D3  +
cmp edx 2029h +
mov eax offset aDw_at_hp_is_re +
jz locret_43A362  +
cmp edx 2101h +
jnz loc_43A360  +
mov eax offset aDw_at_sf_names +
retn   +
cmp edx 4Dh +
jz loc_43A86A  +
ja loc_43A275  +
cmp edx 4Ah +
jz loc_43A942  +
nop   +
lea esi [esi+0] +
ja loc_43A5F0  +
cmp edx 48h +
mov eax offset aDw_at_static_l +
jz locret_43A362  +
cmp edx 49h +
jnz loc_43A360  +
mov eax offset aDw_at_type +
retn   +
cmp edx 64h +
jz loc_43A894  +
lea esi [esi+0] +
ja loc_43A300  +
cmp edx 61h +
jz loc_43A8E8  +
nop   +
ja loc_43A6B6  +
cmp edx 5Fh +
mov eax offset aDw_at_digit_co +
jz locret_43A362  +
cmp edx 60h +
jnz loc_43A360  +
mov eax offset aDw_at_picture_ +
retn   +
cmp edx 36h +
jz loc_43A870  +
lea esi [esi+0] +
ja loc_43A2A3  +
cmp edx 33h +
jz loc_43A93C  +
nop   +
ja loc_43A5D0  +
cmp edx 31h +
mov eax offset aDw_at_abstract +
jz locret_43A362  +
cmp edx 32h +
jnz loc_43A360  +
mov eax offset aDw_at_accessib +
retn   +
cmp edx 3FE8h +
jz loc_43A89A  +
ja loc_43A240  +
cmp edx 3FE5h +
jz loc_43A94E  +
ja loc_43A560  +
cmp edx 3FE3h +
mov eax offset aDw_at_apple_is +
jz locret_43A362  +
cmp edx 3FE4h +
jnz loc_43A360  +
mov eax offset aDw_at_apple_bl +
retn   +
cmp edx 2131h +
jz loc_43A864  +
ja loc_43A208  +
cmp edx 2119h +
jz loc_43A8DC  +
nop   +
ja loc_43A670  +
cmp edx 2117h +
mov eax offset aDw_at_gnu_all_ +
jz locret_43A362  +
cmp edx 2118h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_al_0 +
retn   +
cmp edx 16h +
jz loc_43A324  +
jbe loc_43A364  +
cmp edx 19h +
jz loc_43A8D6  +
nop   +
lea esi [esi+0] +
ja loc_43A650  +
cmp edx 17h +
mov eax offset aDw_at_visibili +
jz locret_43A362  +
cmp edx 18h +
jnz loc_43A360  +
mov eax offset aDw_at_import +
retn   +
cmp edx 2012h +
jz loc_43A858  +
ja loc_43A7F6  +
cmp edx 2010h +
mov eax offset aDw_at_hp_actua +
jz locret_43A362  +
cmp edx 2011h +
jnz loc_43A360  +
mov eax offset aDw_at_hp_proc_ +
retn   +
cmp edx 2134h +
jz loc_43A87C  +
ja loc_43A7B0  +
cmp edx 2132h +
mov eax offset aDw_at_gnu_rang +
jz locret_43A362  +
cmp edx 2133h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_addr +
retn   +
cmp edx 3FEBh +
jz loc_43A8A6  +
ja loc_43A820  +
cmp edx 3FE9h +
mov eax offset aDw_at_apple_pr +
jz locret_43A362  +
cmp edx 3FEAh +
jnz loc_43A360  +
mov eax offset aDw_at_apple__0 +
retn   +
cmp edx 50h +
jz loc_43A948  +
nop   +
ja loc_43A540  +
cmp edx 4Eh +
mov eax offset aDw_at_allocate +
jz locret_43A362  +
cmp edx 4Fh +
jnz loc_43A360  +
mov eax offset aDw_at_associat +
retn   +
cmp edx 39h +
jz loc_43A90C  +
lea esi [esi+0] +
ja loc_43A6D3  +
cmp edx 37h +
mov eax offset aDw_at_count +
jz locret_43A362  +
cmp edx 38h +
jnz loc_43A360  +
mov eax offset aDw_at_data_mem +
retn   +
cmp edx 2108h +
jz loc_43A954  +
ja loc_43A583  +
cmp edx 2106h +
mov eax offset aDw_at_body_end +
jz locret_43A362  +
cmp edx 2107h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_vect +
retn   +
cmp edx 67h +
jz loc_43A876  +
ja loc_43A790  +
cmp edx 65h +
mov eax offset aDw_at_endianit +
jz locret_43A362  +
cmp edx 66h +
jnz loc_43A360  +
mov eax offset aDw_at_elementa +
retn   +
mov eax offset aDw_at_discr_va +
retn   +
mov eax offset aDw_at_gnu_bias +
retn   +
mov eax offset aDw_at_friend +
retn   +
mov eax offset aDw_at_gnu_temp +
retn   +
mov eax offset aDw_at_noreturn +
retn   +
mov eax offset aDw_at_gnu_pt_g +
retn   +
mov eax offset aDw_at_subscr_d +
retn   +
mov eax offset aDw_at_lower_bo +
retn   +
mov eax offset aDw_at_call_fil +
retn   +
mov eax offset aDw_at_hp_linka +
retn   +
xor eax eax +
retn   +
cmp edx 13h +
mov eax offset aDw_at_language +
jz locret_43A362  +
mov eax offset aDw_at_high_pc +
jb locret_43A362  +
cmp edx 14h +
mov eax offset aDw_at_member +
jz locret_43A362  +
cmp edx 15h +
jnz loc_43A360  +
mov eax offset aDw_at_discr +
retn   +
cmp edx 6Ch +
mov eax offset aDw_at_const_ex +
jz locret_43A362  +
mov eax offset aDw_at_data_bit +
jb locret_43A362  +
cmp edx 6Dh +
mov eax offset aDw_at_enum_cla +
jz locret_43A362  +
cmp edx 6Eh +
jnz loc_43A360  +
mov eax offset aDw_at_linkage_ +
retn   +
cmp edx 2 +
mov eax offset aDw_at_location +
jz locret_43A362  +
jbe loc_43A843  +
cmp edx 3 +
mov eax offset aDw_at_name +
jz locret_43A362  +
cmp edx 9 +
jnz loc_43A360  +
mov eax offset aDw_at_ordering +
retn   +
cmp edx 3Eh +
mov eax offset aDw_at_encoding +
jz locret_43A362  +
mov eax offset aDw_at_discr_li +
jb locret_43A362  +
cmp edx 3Fh +
mov eax offset aDw_at_external +
jz locret_43A362  +
cmp edx 40h +
jnz loc_43A360  +
mov eax offset aDw_at_frame_ba +
retn   +
cmp edx 210Dh +
mov eax offset aDw_at_gnu_excl +
jz locret_43A362  +
mov eax offset aDw_at_gnu_lock +
jb locret_43A362  +
cmp edx 210Eh +
mov eax offset aDw_at_gnu_shar +
jz locret_43A362  +
cmp edx 210Fh +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_odr_ +
retn   +
cmp edx 2302h +
mov eax offset aDw_at_gnat_des +
jz locret_43A362  +
jbe loc_43A8FA  +
cmp edx 2303h +
mov eax offset aDw_at_gnu_nume +
jz locret_43A362  +
cmp edx 2304h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_deno +
retn   +
cmp edx 1Eh +
mov eax offset aDw_at_default_ +
jz locret_43A362  +
mov eax offset aDw_at_containi +
jb locret_43A362  +
cmp edx 20h +
mov eax offset aDw_at_inline +
jz locret_43A362  +
cmp edx 21h +
jnz loc_43A360  +
mov eax offset aDw_at_is_optio +
retn   +
cmp edx 55h +
mov eax offset aDw_at_ranges +
jz locret_43A362  +
mov eax offset aDw_at_extensio +
jb locret_43A362  +
cmp edx 56h +
mov eax offset aDw_at_trampoli +
jz locret_43A362  +
cmp edx 57h +
jnz loc_43A360  +
mov eax offset aDw_at_call_col +
retn   +
cmp edx 2017h +
mov eax offset aDw_at_hp_cold_ +
jz locret_43A362  +
mov eax offset aDw_at_hp_opt_f +
jb locret_43A362  +
cmp edx 2018h +
mov eax offset aDw_at_hp_col_0 +
jz locret_43A362  +
cmp edx 2019h +
jnz loc_43A360  +
mov eax offset aDw_at_hp_all_v +
retn   +
cmp edx 51h +
mov eax offset aDw_at_byte_str +
jz locret_43A362  +
cmp edx 52h +
jnz loc_43A360  +
mov eax offset aDw_at_entry_pc +
retn   +
cmp edx 3FE6h +
mov eax offset aDw_at_apple_ru +
jz locret_43A362  +
cmp edx 3FE7h +
jnz loc_43A360  +
mov eax offset aDw_at_apple_om +
retn   +
cmp edx 2109h +
mov eax offset aDw_at_gnu_pt_0 +
jz locret_43A362  +
cmp edx 210Ah +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_guar +
retn   +
cmp edx 2021h +
mov eax offset aDw_at_hp_widen +
jz locret_43A362  +
cmp edx 2022h +
jnz loc_43A360  +
mov eax offset aDw_at_hp_defin +
retn   +
cmp edx 34h +
mov eax offset aDw_at_artifici +
jz locret_43A362  +
cmp edx 35h +
jnz loc_43A360  +
mov eax offset aDw_at_base_typ +
retn   +
cmp edx 4Bh +
mov eax offset aDw_at_variable +
jz locret_43A362  +
cmp edx 4Ch +
jnz loc_43A360  +
mov eax offset aDw_at_virtuali +
retn   +
cmp edx 3A02h +
mov eax offset aDw_at_pgi_lstr +
jz locret_43A362  +
cmp edx 3FE1h +
jnz loc_43A360  +
mov eax offset aDw_at_apple_op +
retn   +
cmp edx 2Ch +
mov eax offset aDw_at_start_sc +
jz locret_43A362  +
cmp edx 2Eh +
jnz loc_43A360  +
mov eax offset aDw_at_bit_stri +
retn   +
cmp edx 1Ah +
mov eax offset aDw_at_common_r +
jz locret_43A362  +
cmp edx 1Bh +
jnz loc_43A360  +
mov eax offset aDw_at_comp_dir +
retn   +
cmp edx 211Ah +
mov eax offset aDw_at_gnu_dele +
jz locret_43A362  +
cmp edx 2130h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_dwo_ +
retn   +
cmp edx 2009h +
mov eax offset aDw_at_mips_abs +
jz locret_43A362  +
cmp edx 200Ah +
jnz loc_43A360  +
mov eax offset aDw_at_mips_clo +
retn   +
cmp edx 62h +
mov eax offset aDw_at_threads_ +
jz locret_43A362  +
cmp edx 63h +
jnz loc_43A360  +
mov eax offset aDw_at_explicit +
retn   +
cmp edx 3Ah +
mov eax offset aDw_at_decl_fil +
jz locret_43A362  +
cmp edx 3Bh +
jnz loc_43A360  +
mov eax offset aDw_at_decl_lin +
retn   +
cmp edx 45h +
mov eax offset aDw_at_priority +
jz locret_43A362  +
cmp edx 46h +
jnz loc_43A360  +
mov eax offset aDw_at_segment +
retn   +
cmp edx 2003h +
mov eax offset aDw_at_mips_tai +
jz locret_43A362  +
cmp edx 2004h +
jnz loc_43A360  +
mov eax offset aDw_at_mips_epi +
retn   +
cmp edx 2114h +
mov eax offset aDw_at_gnu_ca_1 +
jz locret_43A362  +
cmp edx 2115h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_tail +
retn   +
cmp edx 0Fh +
mov eax offset aDw_at_element_ +
jz locret_43A362  +
cmp edx 10h +
jnz loc_43A360  +
mov eax offset aDw_at_stmt_lis +
retn   +
cmp edx 5Ch +
mov eax offset aDw_at_decimal_ +
jz locret_43A362  +
cmp edx 5Dh +
jnz loc_43A360  +
mov eax offset aDw_at_small +
retn   +
cmp edx 68h +
mov eax offset aDw_at_recursiv +
jz locret_43A362  +
cmp edx 69h +
jnz loc_43A360  +
mov eax offset aDw_at_signatur +
retn   +
cmp edx 2135h +
mov eax offset aDw_at_gnu_pubt +
jz locret_43A362  +
cmp edx 2136h +
jnz loc_43A360  +
mov eax offset aDw_at_gnu_disc +
retn   +
cmp edx 2103h +
mov eax offset aDw_at_mac_info +
jz locret_43A362  +
cmp edx 2104h +
jnz loc_43A360  +
mov eax offset aDw_at_src_coor +
retn   +
cmp edx 2013h +
mov eax offset aDw_at_hp_pass_ +
jz locret_43A362  +
cmp edx 2014h +
jnz loc_43A360  +
mov eax offset aDw_at_hp_opt_l +
retn   +
cmp edx 3FECh +
mov eax offset aDw_at_apple_ob +
jz locret_43A362  +
cmp edx 3FEDh +
jnz loc_43A360  +
mov eax offset aDw_at_apple__1 +
retn   +
cmp edx 1 +
jnz loc_43A360  +
mov eax offset aDw_at_sibling +
retn   +
mov eax offset aDw_at_src_info +
retn   +
mov eax offset aDw_at_hp_raw_d +
retn   +
mov eax offset aDw_at_hp_defau +
retn   +
mov eax offset aDw_at_gnu_dw_0 +
retn   +
mov eax offset aDw_at_vtable_e +
retn   +
mov eax offset aDw_at_calling_ +
retn   +
mov eax offset aDw_at_pure +
retn   +
mov eax offset aDw_at_gnu_pubn +
retn   +
mov eax offset aDw_at_specific +
retn   +
mov eax offset aDw_at_gnu_al_1 +
retn   +
mov eax offset aDw_at_body_beg +
retn   +
mov eax offset aDw_at_object_p +
retn   +
mov eax offset aDw_at_apple__2 +
retn   +
mov eax offset aDw_at_apple_fl +
retn   +
mov eax offset aDw_at_apple__3 +
retn   +
mov eax offset aDw_at_namelist +
retn   +
mov eax offset aDw_at_gnu_ca_2 +
retn   +
mov eax offset aDw_at_pgi_soff +
retn   +
mov eax offset aDw_at_main_sub +
retn   +
mov eax offset aDw_at_hp_pro_0 +
retn   +
mov eax offset aDw_at_mips_loo +
retn   +
mov eax offset aDw_at_mips_has +
retn   +
mov eax offset aDw_at_string_l +
retn   +
mov eax offset aDw_at_gnu_macr +
retn   +
mov eax offset aDw_at_mips_str +
retn   +
mov eax offset aDw_at_mutable +
retn   +
mov eax offset aDw_at_upper_bo +
retn   +
mov eax offset aDw_at_return_a +
retn   +
cmp edx 2301h +
jnz loc_43A360  +
mov eax offset aDw_at_use_gnat +
retn   +
mov eax offset aDw_at_decl_col +
retn   +
mov eax offset aDw_at_decima_0 +
retn   +
mov eax offset aDw_at_mips_l_0 +
retn   +
mov eax offset aDw_at_bit_size +
retn   +
mov eax offset aDw_at_vms_rtnb +
retn   +
mov eax offset aDw_at_use_utf8 +
retn   +
mov eax offset aDw_at_declarat +
retn   +
mov eax offset aDw_at_const_va +
retn   +
mov eax offset aDw_at_address_ +
retn   +
mov eax offset aDw_at_use_loca +
retn   +
mov eax offset aDw_at_data_loc +
retn   +
mov eax offset aDw_at_apple_ma +
retn   +
mov eax offset aDw_at_gnu_gu_0 +
retn   +
mov eax offset aDw_at_low_pc +
retn   +
mov eax offset aDw_at_binary_s +
retn   +
mov eax offset aDw_at_hp_uni_0 +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_472C9C +
test eax eax +
jz loc_43A9DE  +
call eax  +
mov eax [esp+20h] +
mov [esp+0] eax +
call exit  +
mov eax [esp+4] +
movzx ecx byte ptr [eax] +
test cl cl +
jz locret_43AA10  +
lea edx [eax+1] +
nop   +
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_43AA00  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test byte ptr ds:word_4699A0[ecx+ecx] 88h +
jz loc_43AA3A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_43AA60  +
test dl dl +
jz locret_43AA57  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_43AA4B  +
cmp dl 2Fh +
jnz loc_43AA4D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_43AA41  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_43AA3A  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_438CA0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 5 +
mov esi [eax] +
mov [esp+10h+var_10+1] eax +
cmp esi 3 +
setbe dl  +
test ecx ecx +
setnz al  +
xor ebx ebx +
and dl al +
mov byte ptr [esp+10h+var_10] dl +
jz loc_43AB28  +
mov edi 4 +
jmp loc_43AB07  +
mov eax edi +
sub eax esi +
cmp eax 3 +
mov esi eax +
setbe al  +
add ebx 1 +
test al al +
jz loc_43AB28  +
cmp ecx ebx +
jbe loc_43AB28  +
movzx edx byte ptr [ebp+ebx+0] +
cmp esi 2 +
sbb eax eax +
not eax  +
cmp dl al +
jz loc_43AB38  +
test dl dl +
jz loc_43AAF0  +
movzx eax byte ptr [esp+10h+var_10] +
xor esi esi +
add ebx 1 +
test al al +
jnz loc_43AB03  +
mov eax [esp+10h+var_10+1] +
mov [eax] esi +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
cmp esi 3 +
setbe al  +
jmp loc_43AAFC  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax+1Ch] +
mov eax [ebx+34h] +
test eax eax +
jz loc_43AC51  +
mov esi [ebx+28h] +
test esi esi +
jz loc_43ABC5  +
mov edi edx +
sub edi [ebp+10h] +
cmp edi esi +
jnb loc_43ABE8  +
mov edx [ebx+30h] +
sub esi edx +
cmp esi edi +
cmova esi edi +
add eax edx +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx edi +
mov [esp+28h+var_24] edx +
call memcpy  +
sub edi esi +
jnz loc_43AC26  +
mov eax [ebx+30h] +
mov edx [ebx+28h] +
add eax esi +
cmp eax edx +
mov [ebx+30h] eax +
jz loc_43AC14  +
mov ecx [ebx+2Ch] +
xor eax eax +
cmp edx ecx +
jbe loc_43ABBD  +
add esi ecx +
mov [ebx+2Ch] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+24h] +
mov edi edx +
mov si 1 +
sub edi [ebp+10h] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+2Ch] 0 +
shl esi cl +
cmp edi esi +
mov [ebx+28h] esi +
jb loc_43AB77  +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx esi +
mov [esp+28h+var_24] edx +
call memcpy  +
mov eax [ebx+28h] +
mov dword ptr [ebx+30h] 0 +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+2Ch] +
xor eax eax +
mov dword ptr [ebx+30h] 0 +
cmp edx ecx +
ja loc_43ABB8  +
jmp loc_43ABBD  +
mov eax [ebp+0Ch] +
mov edx [ebx+34h] +
mov [esp+28h+var_20] edi +
sub eax edi +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call memcpy  +
mov eax [ebx+28h] +
mov [ebx+30h] edi +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+20h] +
mov al 1 +
mov edi [ebp+28h] +
mov [esp+28h+var_20] 1 +
mov ecx [ebx+24h] +
mov [esp+28h+var_1C] edx +
mov [esp+28h+var_28] edi +
shl eax cl +
mov [esp+28h+var_24] eax +
call esi  +
test eax eax +
mov [ebx+34h] eax +
jz loc_43AC83  +
mov edx [esp+28h+var_1C] +
jmp loc_43AB67  +
mov eax 1 +
jmp loc_43ABBD  +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_43AD22  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_43AD22  +
mov ecx [eax+8] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+8] 0 +
test ecx ecx +
mov dword ptr [edx+18h] 0 +
jz loc_43ACCC  +
and ecx 1 +
mov [edx+30h] ecx +
lea edx [eax+530h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 8000h +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov [eax+6Ch] edx +
mov [eax+50h] edx +
mov [eax+4Ch] edx +
mov dword ptr [eax+1BC0h] 1 +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
xor eax eax +
retn   +
mov eax 0FFFFFFFEh +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_43AD60  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_43AD60  +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
jmp loc_43AC90  +
mov eax 0FFFFFFFEh +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
test edi edi +
jz loc_43ADF0  +
mov esi [edi+1Ch] +
test esi esi +
jz loc_43ADF0  +
test ebx ebx +
js loc_43ADE1  +
mov ebp ebx +
mov eax ebx +
sar ebp 4 +
and eax 0Fh +
add ebp 1 +
cmp ebx 2Fh +
cmovle ebx eax +
lea eax [ebx-8] +
cmp eax 7 +
ja loc_43ADE7  +
mov eax [esi+34h] +
test eax eax +
jz loc_43ADCB  +
cmp ebx [esi+24h] +
jz loc_43ADCB  +
mov ecx [edi+28h] +
mov edx [edi+24h] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
call edx  +
mov dword ptr [esi+34h] 0 +
mov [esi+8] ebp +
mov [esi+24h] ebx +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_43AD30  +
neg ebx  +
xor ebp ebp +
jmp loc_43ADA1  +
test ebx ebx +
jz loc_43ADA9  +
nop   +
lea esi [esi+0] +
add esp 1Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov ebx [esp+10h+arg_0] +
test eax eax +
jz loc_43AEC0  +
cmp byte ptr [eax] 31h +
jnz loc_43AEC0  +
cmp [esp+10h+arg_C] 38h +
jnz loc_43AEC0  +
test ebx ebx +
jz loc_43AF07  +
mov eax [ebx+20h] +
mov dword ptr [ebx+18h] 0 +
test eax eax +
jz loc_43AED0  +
mov ecx [ebx+24h] +
mov edx [ebx+28h] +
test ecx ecx +
jz loc_43AEF0  +
mov [esp+10h+var_8] 1BCCh +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
mov esi eax +
jz loc_43AF00  +
mov [ebx+1Ch] eax +
mov dword ptr [eax+34h] 0 +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
call sub_43AD70  +
mov edi eax +
xor eax eax +
test edi edi +
jnz loc_43AEA0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov eax edi +
mov dword ptr [ebx+1Ch] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 0FFFFFFFAh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+24h] +
xor edx edx +
mov eax offset loc_43D370 +
mov dword ptr [ebx+20h] offset loc_43D370 +
mov dword ptr [ebx+28h] 0 +
test ecx ecx +
jnz loc_43AE52  +
mov dword ptr [ebx+24h] offset loc_43D390 +
jmp loc_43AE52  +
mov eax 0FFFFFFFCh +
jmp loc_43AE93  +
mov eax 0FFFFFFFEh +
jmp loc_43AE93  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0Fh +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_43AE00  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
test eax eax +
jz loc_43AFA0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_43AFA0  +
test ecx ecx +
js loc_43AF86  +
cmp ecx 10h +
jg loc_43AFA0  +
mov edi [eax+3Ch] +
lea esi [ecx+edi] +
cmp esi 20h +
ja loc_43AFA0  +
mov edx 1 +
shl edx cl +
mov ecx edi +
sub edx 1 +
and edx [esp+14h] +
mov [eax+3Ch] esi +
shl edx cl +
add [eax+38h] edx +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFEh +
jmp loc_43AF83  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_0] +
test eax eax +
jz loc_43C6B0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_43C6B0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+7Ch+var_48] eax +
jz loc_43C6B0  +
mov eax [esp+7Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_43C340  +
mov eax [eax+4] +
mov [esp+7Ch+var_50] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax] +
cmp eax 0Bh +
jz loc_43B1B0  +
mov ebx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 0 +
mov ebx [ebx+10h] +
mov esi [edx+3Ch] +
mov ebp [edx+38h] +
mov ecx ebx +
mov [esp+7Ch+var_4C] ebx +
mov ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] ecx +
lea ecx [edx+70h] +
add edx 530h +
mov [esp+7Ch+var_30] ecx +
mov ecx esi +
mov esi ebp +
mov [esp+7Ch+var_2C] edx +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
cmp eax 1Eh +
ja loc_43C6B0  +
jmp ds:off_46CE30[eax*4]  +
cmp ebx 1Fh +
ja loc_43B0A0  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
nop   +
jmp loc_43B08A  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_43B082  +
mov edx esi +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
mov esi [esp+7Ch+arg_0] +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov [ebx+18h] eax +
mov [esi+30h] eax +
xor esi esi +
mov dword ptr [ebx] 0Ah +
xor ebx ebx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_43CB08  +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_43D440  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov dword ptr [edx] 0Bh +
mov eax [esp+7Ch+arg_4] +
sub eax 5 +
cmp eax 1 +
jbe loc_43B450  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+4] +
test eax eax +
jnz loc_43B1C4  +
cmp ebx 2 +
ja loc_43B163  +
test edi edi +
jz loc_43B450  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
sub edi 1 +
add ebx 8 +
shl eax cl +
add esi eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx esi +
and eax 1 +
shr edx 1 +
mov [ecx+4] eax +
mov eax edx +
and eax 3 +
cmp eax 2 +
jz loc_43C567  +
cmp eax 3 +
jz loc_43C7EE  +
cmp eax 1 +
jz loc_43C7B0  +
mov dword ptr [ecx] 0Dh +
mov eax 0Dh +
mov esi edx +
sub ebx 3 +
shr esi 2 +
jmp loc_43B05E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_43B019  +
mov eax [esp+7Ch+var_58] +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
mov dword ptr [eax] 1Ah +
mov eax 1Ah +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jz loc_43B246  +
cmp ebx edx +
jnb loc_43B221  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
nop   +
lea esi [esi+0] +
jmp loc_43B20A  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_43B202  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add [ecx+44h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 18h +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_43B450  +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_54] +
mov ecx [ecx+44h] +
sub eax edx +
cmp eax ecx +
jnb loc_43C3C0  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
cmp ecx [eax+2Ch] +
ja loc_43C4C4  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+30h] +
cmp ecx eax +
jbe loc_43C6E2  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+28h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_40] edx +
sub [esp+7Ch+var_40] ecx +
add [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+40h] +
cmp ecx edx +
cmova ecx edx +
jmp loc_43C3D3  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax] 13h +
jz loc_43B450  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
cmp edi 5 +
ja loc_43C5B7  +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+4Ch] +
mov dword ptr [eax+1BC4h] 0 +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+54h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_43B38B  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
mov ebx esi +
mov esi edi +
jmp loc_43B348  +
test esi esi +
jz loc_43C582  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub esi 1 +
mov edi [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add ebx eax +
mov eax [esp+7Ch+var_34] +
and eax ebx +
lea eax [edi+eax*4] +
movzx edx byte ptr [eax] +
movzx edi word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_43B340  +
mov word ptr [esp+7Ch+var_28] di +
mov edi esi +
mov esi ebx +
mov ebx ecx +
cmp byte ptr [esp+7Ch+var_40] 0 +
jz loc_43C650  +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_43C650  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_34] eax +
mov eax 1 +
mov [esp+7Ch+var_24] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_34] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_20] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jb loc_43B448  +
jmp loc_43C9BC  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub edi 1 +
shl eax cl +
movzx ecx byte ptr [esp+7Ch+var_34] +
add esi eax +
mov eax [esp+7Ch+var_20] +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
add edx eax +
cmp edx ebx +
jbe loc_43C9B7  +
test edi edi +
jnz loc_43B400  +
lea esi [esi+0] +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_43B630  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jnz loc_43C436  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov [edx+1BC8h] eax +
mov dword ptr [edx] 16h +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+50h] +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+58h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_43B51F  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
mov ebx edi +
mov edi ebp +
jmp loc_43B4DC  +
test ebx ebx +
jz loc_43C2B4  +
add edi 1 +
movzx eax byte ptr [edi-1] +
sub ebx 1 +
mov edx [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_34] +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
movzx ebp word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_43B4D4  +
mov word ptr [esp+7Ch+var_28] bp +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_43C4F4  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_20] eax +
mov eax 1 +
mov [esp+7Ch+var_34] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_20] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_24] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_20] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jnb loc_43B5E2  +
test edi edi +
jz loc_43B450  +
mov eax esi +
mov edx [esp+7Ch+var_20] +
mov esi edi +
mov edi eax +
jmp loc_43B599  +
test esi esi +
jz loc_43C77D  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub esi 1 +
shl eax cl +
mov ecx edx +
add edi eax +
mov eax [esp+7Ch+var_24] +
and eax edi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] cl +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov word ptr [esp+7Ch+var_28] cx +
lea ecx [eax+edx] +
cmp ecx ebx +
ja loc_43B591  +
mov edx edi +
mov edi esi +
mov esi edx +
mov edx [esp+7Ch+var_20] +
sub ebx [esp+7Ch+var_38] +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add edx [ecx+1BC4h] +
jmp loc_43C4FE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Eh +
mov eax 0FFFFFFFCh +
lea esi [esi+0] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 1 +
mov edi ebp +
mov ebp esi +
mov esi eax +
lea esi [esi+0] +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov ecx eax +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov [ecx+4] ebx +
mov edx [esp+7Ch+var_4C] +
mov [ecx] edi +
mov ebx [eax+28h] +
mov [ecx+10h] edx +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
test ebx ebx +
jnz loc_43B680  +
mov ebx [esp+7Ch+var_54] +
cmp edx ebx +
jz loc_43B698  +
mov eax [eax] +
cmp eax 1Ch +
ja loc_43B698  +
cmp eax 19h +
jbe loc_43B680  +
cmp [esp+7Ch+arg_4] 4 +
jz loc_43B698  +
nop   +
lea esi [esi+0] +
mov edx [esp+7Ch+var_54] +
mov eax [esp+7Ch+arg_0] +
call sub_43AB50  +
test eax eax +
jnz loc_43B5FD  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_54] +
sub esi [eax+10h] +
sub ebx [eax+4] +
add [eax+14h] esi +
add [eax+8] ebx +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+8] +
add [eax+1Ch] esi +
test ecx ecx +
jz loc_43B700  +
test esi esi +
jz loc_43B700  +
mov edx [eax+10h] +
test edx edx +
jz loc_43C380  +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_43D970  +
mov edi [esp+7Ch+var_58] +
mov [edi+18h] eax +
mov edi [esp+7Ch+arg_0] +
mov [edi+30h] eax +
mov edi [esp+7Ch+var_58] +
cmp dword ptr [edi+4] 1 +
mov edx [edi] +
sbb eax eax +
not eax  +
and eax 40h +
add eax [edi+3Ch] +
cmp edx 0Bh +
jz loc_43C2C0  +
cmp edx 0Eh +
jnz loc_43C2D0  +
mov edx 100h +
mov edi [esp+7Ch+arg_0] +
add eax edx +
or esi ebx +
mov [edi+2Ch] eax +
jz loc_43B74D  +
cmp [esp+7Ch+arg_4] 4 +
mov eax [esp+7Ch+var_44] +
jnz loc_43B610  +
mov ebx [esp+7Ch+var_44] +
mov eax 0FFFFFFFBh +
test ebx ebx +
cmovnz eax ebx +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 1Fh +
ja loc_43B792  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43B77C  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_43B774  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_43B7A0  +
mov [eax+4] esi +
mov eax [esp+7Ch+var_58] +
test byte ptr [eax+11h] 2 +
jnz loc_43C837  +
mov eax [esp+7Ch+var_58] +
xor esi esi +
xor ebx ebx +
mov dword ptr [eax] 3 +
jmp loc_43B82A  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 0Fh +
test eax eax +
jz loc_43C3A8  +
mov edx [esp+7Ch+var_4C] +
cmp edi eax +
cmovbe eax edi +
cmp eax edx +
cmova eax edx +
test eax eax +
jz loc_43B450  +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
sub [esp+7Ch+var_4C] edx +
add [esp+7Ch+var_48] edx +
sub edi edx +
add ebp edx +
sub [eax+40h] edx +
mov eax [eax] +
jmp loc_43B05E  +
cmp ebx 0Fh +
ja loc_43B854  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43B83E  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_43B836  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_43B86F  +
mov ebx esi +
movzx edx bl +
mov [eax+8] edx +
mov edx esi +
shr edx 8 +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 2 +
mov eax edx +
jnz loc_43C742  +
mov ebx [esp+7Ch+var_58] +
xor esi esi +
mov dword ptr [ebx] 4 +
xor ebx ebx +
test dh 4 +
jnz loc_43C23A  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_43C57B  +
mov dword ptr [edx+10h] 0 +
xor edx edx +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx] 5 +
jmp loc_43BF8F  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+68h] +
mov [esp+7Ch+var_38] eax +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+60h] +
mov [esp+7Ch+var_28] eax +
add eax [ecx+64h] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_34] +
cmp [esp+7Ch+var_38] eax +
mov eax [esp+7Ch+var_58] +
jnb loc_43CAD3  +
mov ecx [eax+54h] +
mov edx [eax+4Ch] +
mov eax 1 +
shl eax cl +
lea eax [eax-1] +
mov [esp+7Ch+var_3C] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx ecx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax cl +
cmp ebx eax +
jnb loc_43B96A  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
mov ebx edx +
jmp loc_43B938  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_3C] +
and eax esi +
lea eax [ebx+eax*4] +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax dl +
cmp eax ecx +
ja loc_43B930  +
mov ebx ecx +
mov ecx edx +
cmp word ptr [esp+7Ch+var_40] 0Fh +
jbe loc_43C540  +
cmp word ptr [esp+7Ch+var_40] 10h +
jz loc_43C943  +
cmp word ptr [esp+7Ch+var_40] 11h +
jz loc_43C9CC  +
lea edx [eax+7] +
cmp ebx edx +
jnb loc_43B9C6  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_43B9AD  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_43B9A5  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 7 +
mov edx esi +
and esi 7Fh +
add esi 0Bh +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 7 +
mov eax [esp+7Ch+var_40] +
add eax [esp+7Ch+var_38] +
cmp eax [esp+7Ch+var_34] +
mov edx eax +
mov [esp+7Ch+var_40] eax +
ja loc_43CD29  +
mov word ptr [esp+7Ch+var_3C] cx +
mov eax [esp+7Ch+var_38] +
mov ecx [esp+7Ch+var_58] +
lea eax [ecx+eax*2+70h] +
mov ecx [esp+7Ch+var_30] +
lea edx [ecx+edx*2] +
movzx ecx word ptr [esp+7Ch+var_3C] +
mov [eax] cx +
add eax 2 +
cmp eax edx +
jnz loc_43BA17  +
mov eax [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] eax +
mov [edx+68h] eax +
jmp loc_43B8DD  +
cmp ebx 0Fh +
ja loc_43BA66  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43BA4E  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_43BA46  +
mov ebx ecx +
mov edx [esp+7Ch+var_58] +
mov eax esi +
cmp al 8 +
mov [edx+10h] esi +
jz loc_43C8AC  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax 1Dh +
mov dword ptr [edx] 1Dh +
jmp loc_43B067  +
cmp ebx 0Dh +
ja loc_43BAC6  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43BAAE  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Dh +
jbe loc_43BAA6  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
mov edx esi +
mov eax esi +
shr edx 5 +
and eax 1Fh +
and edx 1Fh +
add eax 101h +
add edx 1 +
sub ebx 0Eh +
mov [ecx+64h] edx +
mov [ecx+60h] eax +
mov ecx esi +
shr ecx 0Ah +
and ecx 0Fh +
add ecx 4 +
mov [esp+7Ch+var_40] edx +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_58] +
shr esi 0Eh +
cmp eax 11Eh +
mov [ecx+5Ch] edx +
ja loc_43C6C0  +
cmp [esp+7Ch+var_40] 1Eh +
ja loc_43C6C0  +
mov eax [esp+7Ch+var_58] +
xor edx edx +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 11h +
jmp loc_43BB52  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+5Ch] +
mov ecx edx +
mov [esp+7Ch+var_3C] edx +
mov edx [eax+68h] +
cmp ecx edx +
jbe loc_43BBA8  +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
cmp ecx 2 +
ja loc_43BB70  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
add [esp+7Ch+var_40] 1 +
sub ecx 3 +
mov ebx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
movzx eax ds:word_46D73E[ebx+ebx] +
mov [edx+68h] ebx +
mov ebx esi +
and ebx 7 +
shr esi 3 +
mov [edx+eax*2+70h] bx +
mov eax [esp+7Ch+var_40] +
cmp [esp+7Ch+var_3C] eax +
ja loc_43BB52  +
mov edx [esp+7Ch+var_40] +
mov ebx ecx +
cmp edx 12h +
mov ecx [esp+7Ch+var_58] +
lea eax dword_46D740[edx+edx] +
ja loc_43BBD7  +
movzx edx word ptr [eax] +
add eax 2 +
cmp eax offset unk_46D766 +
mov word ptr [ecx+edx*2+70h] 0 +
jnz loc_43BBB8  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+68h] 13h +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_2C] +
mov dword ptr [eax+54h] 7 +
mov [eax+6Ch] edx +
mov [eax+4Ch] edx +
mov edx eax +
add eax 2F0h +
mov [esp+7Ch+var_68] eax +
mov eax edx +
add eax 54h +
mov [esp+7Ch+var_6C] eax +
mov eax edx +
add eax 6Ch +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_74] 13h +
mov [esp+7Ch+var_7C] 0 +
mov [esp+7Ch+var_78] eax +
call sub_43DC60  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_43CAB5  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeLen +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
jmp loc_43B7D1  +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 0FFFFFFFDh +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_43B630  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
jz loc_43B450  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
sub [esp+7Ch+var_4C] 1 +
mov eax [edx+40h] +
mov [ecx] al +
lea eax [ecx+1] +
mov [esp+7Ch+var_48] eax +
mov eax 14h +
mov dword ptr [edx] 14h +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_43C4A1  +
cmp ebx 1Fh +
ja loc_43BCF2  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
nop   +
jmp loc_43BCDA  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_43BCD2  +
mov ebx ecx +
mov eax [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
sub eax [esp+7Ch+var_4C] +
add [ecx+14h] eax +
add [edx+1Ch] eax +
test eax eax +
jz loc_43BD46  +
mov ecx edx +
mov edx [edx+10h] +
test edx edx +
jz loc_43CA93  +
mov edx [ecx+18h] +
mov ecx [esp+7Ch+var_48] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] edx +
sub ecx eax +
mov [esp+7Ch+var_78] ecx +
call sub_43D970  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx [ecx+10h] +
test edx edx +
jnz loc_43BD75  +
mov edx esi +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov edx [esp+7Ch+var_58] +
cmp eax [edx+18h] +
jz loc_43C492  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectDataC +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_54] eax +
mov eax 1Dh +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_43CA72  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test eax eax +
jz loc_43CA72  +
cmp ebx 1Fh +
ja loc_43BE02  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
lea esi [esi+0] +
jmp loc_43BDEA  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_43BDE2  +
mov ebx ecx +
mov eax [esp+7Ch+var_58] +
cmp [eax+1Ch] esi +
jz loc_43CB76  +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aIncorrectLengt +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+8] +
test edx edx +
jz loc_43C4B0  +
cmp ebx 0Fh +
ja loc_43BE72  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
nop   +
jmp loc_43BE5A  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_43BE52  +
mov ebx ecx +
test dl 2 +
jz loc_43BE83  +
cmp esi 8B1Fh +
jz loc_43CB83  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+10h] 0 +
mov eax [eax+20h] +
test eax eax +
jz loc_43BE9C  +
mov dword ptr [eax+30h] 0FFFFFFFFh +
and edx 1 +
jz loc_43C78E  +
mov ecx esi +
mov eax esi +
shl ecx 8 +
mov edx 8421085h +
shr eax 8 +
movzx ecx cx +
add ecx eax +
mov eax ecx +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 4 +
mov edx eax +
shl edx 5 +
sub edx eax +
cmp ecx edx +
jnz loc_43C78E  +
mov eax esi +
and eax 0Fh +
cmp eax 8 +
jz loc_43CBDF  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
cmp ebx 1Fh +
ja loc_43BF42  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43BF2A  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_43BF22  +
mov ebx ecx +
mov edx esi +
movzx eax si +
shr edx 10h +
xor edx 0FFFFh +
cmp eax edx +
jz loc_43C8DA  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidStoredB +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx eax +
and edx 400h +
test edx edx +
jz loc_43C035  +
mov edx [esp+7Ch+var_58] +
mov ecx [edx+40h] +
cmp edi ecx +
mov [esp+7Ch+var_40] ecx +
cmovbe ecx edi +
mov edx ecx +
test edx edx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_40] +
jz loc_43C026  +
mov ecx [esp+7Ch+var_58] +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_43C009  +
mov edx [ecx+10h] +
test edx edx +
mov [esp+7Ch+var_38] edx +
jz loc_43C009  +
mov edx [ecx+18h] +
mov eax [ecx+14h] +
mov ecx [esp+7Ch+var_3C] +
sub eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ebp +
add ecx eax +
mov [esp+7Ch+var_40] ecx +
mov ecx edx +
sub ecx eax +
cmp [esp+7Ch+var_40] edx +
mov edx ecx +
cmovbe edx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+10h] +
test ah 2 +
jnz loc_43C810  +
mov edx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_3C] +
mov ecx [edx+40h] +
sub edi eax +
add ebp eax +
sub ecx eax +
mov [edx+40h] ecx +
test ecx ecx +
jnz loc_43B450  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov ecx [esp+7Ch+var_58] +
test ah 8 +
mov dword ptr [ecx+40h] 0 +
mov dword ptr [ecx] 6 +
jnz loc_43C072  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_43C103  +
mov dword ptr [edx+1Ch] 0 +
jmp loc_43C103  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test ah 8 +
jz loc_43C04B  +
test edi edi +
jz loc_43B450  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_43C098  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_43C0CA  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_43C0C6  +
mov edi [eax+1Ch] +
test edi edi +
jz loc_43C0C6  +
mov ebx [esi+40h] +
cmp ebx [eax+20h] +
jnb loc_43C0C6  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_43C092  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_43C685  +
mov eax [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test eax eax +
jnz loc_43B450  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx+40h] 0 +
mov dword ptr [edx] 7 +
test ah 10h +
jz loc_43C360  +
test edi edi +
jz loc_43B450  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_43C146  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_43C178  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_43C174  +
mov edi [eax+24h] +
test edi edi +
jz loc_43C174  +
mov ebx [esi+40h] +
cmp ebx [eax+28h] +
jnb loc_43C174  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_43C140  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_43C590  +
mov ecx [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test ecx ecx +
jnz loc_43B450  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 8 +
test ah 2 +
jz loc_43C2E4  +
cmp ebx 0Fh +
ja loc_43C1F5  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43C1DD  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx 0Fh +
jbe loc_43C1D5  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
movzx edx word ptr [ecx+18h] +
cmp edx esi +
jz loc_43C2E0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aHeaderCrcMisma +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 4 +
mov eax edx +
jz loc_43B898  +
cmp ebx 0Fh +
ja loc_43C260  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43C24A  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_43C246  +
mov eax [esp+7Ch+var_58] +
mov [eax+40h] esi +
mov eax [eax+20h] +
test eax eax +
jz loc_43C271  +
mov [eax+14h] esi +
test dh 2 +
jnz loc_43C8FE  +
mov eax edx +
xor ebx ebx +
and edx 400h +
xor esi esi +
jmp loc_43B8B0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_43C114  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_43C1BB  +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi ecx +
jmp loc_43B630  +
sub eax 0FFFFFF80h +
xor edx edx +
jmp loc_43B72B  +
cmp edx 13h +
jz loc_43B726  +
xor edx edx +
jmp loc_43B72B  +
xor ebx ebx +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_43C2FF  +
sar eax 9 +
and eax 1 +
mov [edx+2Ch] eax +
mov dword ptr [edx+30h] 1 +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_43D970  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov eax 0Bh +
mov dword ptr [edx] 0Bh +
jmp loc_43B067  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
test eax eax +
jnz loc_43C6B0  +
mov [esp+7Ch+var_50] 0 +
jmp loc_43B00A  +
mov ecx [esp+7Ch+var_58] +
mov edx [ecx+20h] +
test edx edx +
jz loc_43C1B1  +
mov dword ptr [edx+24h] 0 +
jmp loc_43C1B1  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_43D440  +
jmp loc_43B6EF  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_43B067  +
mov eax [esp+7Ch+var_48] +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+40h] +
mov edx ecx +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_3C] ebx +
cmp ecx eax +
cmova ecx eax +
mov eax [esp+7Ch+var_58] +
sub edx ecx +
sub [esp+7Ch+var_4C] ecx +
mov [eax+40h] edx +
mov edx [esp+7Ch+var_48] +
mov eax [esp+7Ch+var_40] +
add ecx edx +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
cmp edx ecx +
mov [edx-1] bl +
jnz loc_43C3F7  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_48] edx +
mov ebx [esp+7Ch+var_3C] +
mov edx [eax+40h] +
test edx edx +
jz loc_43C422  +
mov eax [eax] +
jmp loc_43B05E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
mov eax 14h +
jmp loc_43B067  +
cmp ebx edx +
jnb loc_43C465  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
jmp loc_43C44E  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_43C446  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add eax [ecx+40h] +
mov [ecx+40h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
jmp loc_43B476  +
mov esi [esp+7Ch+var_4C] +
xor ebx ebx +
mov eax [edx+8] +
mov [esp+7Ch+var_54] esi +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 1Bh +
jmp loc_43BDB7  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_43B067  +
mov eax [eax+1BC0h] +
test eax eax +
jz loc_43B280  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDistanc +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+1BC4h] +
mov ecx eax +
sub ebx eax +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add eax edx +
test byte ptr [esp+7Ch+var_40] 40h +
mov [ecx+1BC4h] eax +
jz loc_43C6F8  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_0 +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_43B067  +
mov edx [esp+7Ch+var_38] +
shr esi cl +
sub ebx eax +
mov ecx [esp+7Ch+var_58] +
mov eax edx +
add eax 1 +
mov [ecx+68h] eax +
mov [esp+7Ch+var_38] eax +
movzx eax word ptr [esp+7Ch+var_40] +
mov [ecx+edx*2+70h] ax +
jmp loc_43B8DD  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 10h +
mov eax 10h +
jmp loc_43B19E  +
xor edx edx +
jmp loc_43B8B0  +
mov edi ebp +
mov ebp ebx +
mov ebx esi +
mov esi ecx +
jmp loc_43B630  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_43C19A  +
cmp [esp+7Ch+var_4C] 101h +
jbe loc_43B2E3  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov [eax] ebp +
mov [eax+0Ch] edx +
mov edx [esp+7Ch+var_4C] +
mov [eax+4] edi +
mov [eax+10h] edx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] esi +
mov esi eax +
mov [eax+3Ch] ebx +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_43E1C0  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+10h] +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+arg_0] +
mov ebp [eax] +
mov edi [eax+4] +
mov eax esi +
mov ebx [eax+3Ch] +
mov eax [eax] +
mov esi [esi+38h] +
cmp eax 0Bh +
jnz loc_43B05E  +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx+1BC4h] 0FFFFFFFFh +
jmp loc_43B067  +
mov edx eax +
mov ecx eax +
sub ebx eax +
movzx eax word ptr [esp+7Ch+var_28] +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
cmp byte ptr [esp+7Ch+var_40] 0 +
mov [ecx+1BC4h] edx +
mov [ecx+40h] eax +
jnz loc_43C719  +
mov dword ptr [ecx] 19h +
mov eax 19h +
jmp loc_43B067  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_43C0EC  +
mov eax 0FFFFFFFEh +
jmp loc_43B610  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aTooManyLengthO +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax+34h] +
add [esp+7Ch+var_40] eax +
jmp loc_43B2A7  +
mov edx [esp+7Ch+var_40] +
mov ecx [esp+7Ch+var_58] +
movzx eax word ptr [esp+7Ch+var_28] +
and edx 0Fh +
mov [ecx+48h] edx +
mov [ecx+44h] eax +
mov dword ptr [ecx] 17h +
jmp loc_43B1E9  +
test byte ptr [esp+7Ch+var_40] 20h +
jz loc_43C87F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_43B067  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov edx [esi+10h] +
mov [esi+18h] eax +
mov eax edx +
jmp loc_43B881  +
mov ecx edi +
mov eax ebx +
mov edi ebp +
mov ebx esi +
mov ebp ecx +
mov esi eax +
jmp loc_43B630  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectHeade +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax+4Ch] offset unk_46CF40 +
mov dword ptr [eax+54h] 9 +
mov dword ptr [eax+50h] offset unk_46CEC0 +
mov dword ptr [eax+58h] 5 +
mov dword ptr [eax] 13h +
jz loc_43CD14  +
mov eax 13h +
jmp loc_43B19E  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBlockTy +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B19E  +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_3C] +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov ecx [esp+7Ch+var_58] +
mov [ecx+18h] eax +
jmp loc_43C012  +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
mov eax esi +
shr eax 10h +
mov byte ptr [esp+7Ch+var_10+2] al +
mov eax esi +
shr eax 18h +
mov byte ptr [esp+7Ch+var_10+3] al +
mov eax [ebx+18h] +
lea edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov [ebx+18h] eax +
jmp loc_43B7AE  +
test byte ptr [esp+7Ch+var_40] 40h +
jz loc_43CA25  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiteral +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
test esi 0E000h +
jz loc_43CA3E  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownHeaderF +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov ebx [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov [ebx+40h] eax +
mov dword ptr [ebx] 0Eh +
jz loc_43CD07  +
xor ebx ebx +
xor esi esi +
jmp loc_43B7C7  +
mov ebx [esp+7Ch+var_58] +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
xor esi esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [ebx+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov [ebx+18h] eax +
mov eax [ebx+10h] +
xor ebx ebx +
mov edx eax +
and edx 400h +
jmp loc_43B8B0  +
lea edx [eax+2] +
cmp ebx edx +
jnb loc_43C981  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_43C968  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_43C960  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
mov eax [esp+7Ch+var_38] +
shr esi cl +
test eax eax +
jz loc_43CD29  +
mov eax [esp+7Ch+var_58] +
sub ebx 2 +
mov ecx [esp+7Ch+var_38] +
movzx ecx word ptr [eax+ecx*2+6Eh] +
mov eax esi +
and eax 3 +
add eax 3 +
mov [esp+7Ch+var_40] eax +
shr esi 2 +
jmp loc_43B9E2  +
mov word ptr [esp+7Ch+var_28] cx +
movzx ecx byte ptr [esp+7Ch+var_34] +
sub ebx [esp+7Ch+var_38] +
shr esi cl +
jmp loc_43C652  +
lea edx [eax+3] +
cmp ebx edx +
jnb loc_43CA04  +
test edi edi +
jz loc_43B450  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_43C9EB  +
test edi edi +
jz loc_43C2B0  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_43C9E3  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 3 +
mov edx esi +
and esi 7 +
add esi 3 +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 3 +
jmp loc_43B9E2  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
and edx 0Fh +
mov [eax+48h] edx +
mov dword ptr [eax] 15h +
jmp loc_43B467  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_43CA53  +
mov edx esi +
shr edx 8 +
and edx 1 +
mov [eax] edx +
test esi 200h +
jnz loc_43CB40  +
mov eax [esp+7Ch+var_58] +
xor ebx ebx +
xor esi esi +
mov dword ptr [eax] 2 +
jmp loc_43B768  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 1 +
mov dword ptr [eax] 1Ch +
jmp loc_43B630  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
mov edx [edx+18h] +
sub ecx eax +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
call sub_43D440  +
jmp loc_43BD35  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] 0 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 12h +
jmp loc_43B8CB  +
cmp dword ptr [eax] 1Dh +
jz loc_43BE23  +
cmp word ptr [eax+270h] 0 +
jnz loc_43CC54  +
mov edx [esp+7Ch+arg_0] +
mov dword ptr [edx+18h] offset aInvalidCodeMis +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov eax ebx +
mov ecx [esp+7Ch+var_48] +
mov ebx edi +
mov edx [esp+7Ch+var_4C] +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax] edi +
mov [eax+4] ebx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
mov eax 2 +
jmp loc_43B610  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov [esi+18h] eax +
jmp loc_43CA5F  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_43CA7C  +
mov [esp+7Ch+var_74] 0 +
xor ebx ebx +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_43D970  +
mov esi [esp+7Ch+var_58] +
lea edx [esp+7Ch+var_10] +
mov byte ptr [esp+7Ch+var_10] 1Fh +
mov byte ptr [esp+7Ch+var_10+1] 8Bh +
mov [esi+18h] eax +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_43D970  +
mov dword ptr [esi] 1 +
mov [esi+18h] eax +
mov eax 1 +
xor esi esi +
jmp loc_43B067  +
mov eax [esp+7Ch+var_58] +
shr esi 4 +
mov ecx esi +
and ecx 0Fh +
add ecx 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_43CCDA  +
mov eax [esp+7Ch+var_58] +
mov [eax+24h] ecx +
mov ebx [esp+7Ch+var_58] +
mov eax 1 +
shl eax cl +
mov [ebx+14h] eax +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_43D440  +
mov edx [esp+7Ch+arg_0] +
mov [ebx+18h] eax +
mov [edx+30h] eax +
mov eax esi +
and eax 200h +
cmp eax 1 +
sbb eax eax +
xor esi esi +
and eax 2 +
add eax 9 +
mov [ebx] eax +
xor ebx ebx +
jmp loc_43B05E  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_2C] +
lea edx [eax+2F0h] +
mov [eax+6Ch] ecx +
mov [eax+4Ch] ecx +
lea ecx [eax+6Ch] +
add eax 54h +
mov dword ptr [eax] 9 +
mov [esp+7Ch+var_3C] edx +
mov [esp+7Ch+var_68] edx +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_40] ecx +
mov ecx [esp+7Ch+var_28] +
mov [esp+7Ch+var_6C] eax +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_74] ecx +
call sub_43DC60  +
mov ecx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_3C] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_43CD46  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidLiter_0 +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
cmp ecx eax +
jbe loc_43CC00  +
mov eax [esp+7Ch+arg_0] +
sub ebx 4 +
mov dword ptr [eax+18h] offset aInvalidWindowS +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_43B630  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
shr ebp 3 +
sub esi 3 +
jmp loc_43B630  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
jmp loc_43BE23  +
mov [esp+7Ch+var_40] ebx +
mov ebx [esp+7Ch+var_58] +
mov eax [ebx+6Ch] +
mov dword ptr [ebx+58h] 6 +
mov [ebx+50h] eax +
mov eax [ebx+64h] +
mov [esp+7Ch+var_68] edx +
mov edx ebx +
add edx 58h +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_74] eax +
mov eax [ebx+60h] +
mov [esp+7Ch+var_7C] 2 +
lea eax [ebx+eax*2+70h] +
mov [esp+7Ch+var_78] eax +
call sub_43DC60  +
mov ebx [esp+7Ch+var_40] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_43B2B8  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_1 +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_43B067  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_43CE10  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_43CE10  +
mov edx [ebx+24h] +
test edx edx +
jz loc_43CE10  +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_43CDF3  +
mov eax [ebx+28h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [ebx+24h] +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ecx +
call edx  +
xor eax eax +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_43CE08  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
test ebx ebx +
jz loc_43CED0  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_43CED0  +
mov eax [esi+8] +
test eax eax +
jnz loc_43CE88  +
cmp dword ptr [esi] 0Ah +
jz loc_43CE8D  +
mov eax [esp+34h] +
add eax [esp+38h] +
mov edx [esp+38h] +
mov ebp [ebx+0Ch] +
mov edi [ebx+10h] +
mov [ebx+0Ch] eax +
mov eax ebx +
mov dword ptr [ebx+10h] 0 +
call sub_43AB50  +
mov [ebx+10h] edi +
mov [ebx+0Ch] ebp +
test eax eax +
jnz loc_43CED7  +
mov dword ptr [esi+0Ch] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [esi] 0Ah +
jnz loc_43CED0  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_43D440  +
mov ecx [esp+38h] +
mov [esp+8] ecx +
mov ecx [esp+34h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_43D440  +
cmp [esi+18h] eax +
jz loc_43CE4A  +
mov eax 0FFFFFFFDh +
jmp loc_43CE80  +
***
mov eax 0FFFFFFFEh +
jmp loc_43CE80  +
***
mov dword ptr [esi] 1Eh +
mov eax 0FFFFFFFCh +
jmp loc_43CE80  +
***
mov eax [esp+4] +
mov edx [esp+8] +
test eax eax +
jz loc_43CF16  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_43CF16  +
test byte ptr [eax+8] 2 +
jz loc_43CF16  +
mov [eax+20h] edx +
xor eax eax +
mov dword ptr [edx+30h] 0 +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+28h] +
test ebx ebx +
jz loc_43D018  +
mov edi [ebx+1Ch] +
test edi edi +
jz loc_43D018  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_43CFF2  +
cmp dword ptr [edi] 1Fh +
lea esi [edi+68h] +
jz loc_43CFB5  +
mov edx [edi+3Ch] +
mov eax [edi+38h] +
mov dword ptr [edi] 1Fh +
mov ecx edx +
and edx 0FFFFFFF8h +
and ecx 7 +
shl eax cl +
cmp edx 7 +
mov [edi+38h] eax +
mov ecx edx +
mov [edi+3Ch] edx +
jbe loc_43D010  +
sub ecx 8 +
lea edx [esp+10h] +
shr ecx 3 +
mov esi edx +
lea ebp [esp+ecx+11h] +
mov [esi] al +
add esi 1 +
shr eax 8 +
cmp esi ebp +
jnz loc_43CF88  +
add ecx 1 +
mov [edi+38h] eax +
mov dword ptr [edi+3Ch] 0 +
lea esi [edi+68h] +
mov dword ptr [edi+68h] 0 +
mov eax esi +
call sub_43AAC0  +
mov ecx [ebx+4] +
mov edx [ebx] +
mov eax esi +
call sub_43AAC0  +
sub [ebx+4] eax +
add [ebx] eax +
add eax [ebx+8] +
cmp dword ptr [edi+68h] 4 +
mov esi eax +
mov [ebx+8] eax +
jnz loc_43D003  +
mov ebp [ebx+14h] +
mov [esp] ebx +
call sub_43AD30  +
xor eax eax +
mov [ebx+8] esi +
mov [ebx+14h] ebp +
mov dword ptr [edi] 0Bh +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [edi+3Ch] 7 +
ja loc_43CF49  +
mov eax 0FFFFFFFBh +
jmp loc_43CFEA  +
***
add esp 14h +
mov eax 0FFFFFFFDh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor ecx ecx +
lea edx [esp+10h] +
jmp loc_43CFA1  +
***
mov eax 0FFFFFFFEh +
jmp loc_43CFEA  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
test ebx ebx +
jz loc_43D280  +
test esi esi +
jz loc_43D280  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_43D280  +
mov eax [esi+20h] +
test eax eax +
jz loc_43D280  +
mov edx [esi+24h] +
test edx edx +
jz loc_43D280  +
mov edx [esi+28h] +
mov dword ptr [esp+8] 1BCCh +
mov dword ptr [esp+4] 1 +
mov [esp] edx +
call eax  +
test eax eax +
mov edx eax +
jz loc_43D28A  +
mov eax [ebp+34h] +
test eax eax +
jz loc_43D245  +
mov edi [esi+20h] +
mov eax 1 +
mov dword ptr [esp+8] 1 +
mov ecx [ebp+24h] +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+4] eax +
mov eax [esi+28h] +
mov [esp] eax +
call edi  +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_43D294  +
mov eax [esi] +
test dl 1 +
mov edi edx +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+4] eax +
mov eax [esi+8] +
mov [ebx+8] eax +
mov eax [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov eax [esi+18h] +
mov [ebx+18h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [esi+20h] +
mov [ebx+20h] eax +
mov eax [esi+24h] +
mov [ebx+24h] eax +
mov eax [esi+28h] +
mov [ebx+28h] eax +
mov eax [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [esi+30h] +
mov [ebx+30h] eax +
mov eax [esi+34h] +
mov esi ebp +
mov [ebx+34h] eax +
mov eax 1BCCh +
jnz loc_43D252  +
test edi 2 +
jnz loc_43D268  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_43D230  +
test al 1 +
jnz loc_43D210  +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jnb loc_43D1E0  +
mov eax [ebp+6Ch] +
mov edi [esp+18h] +
sub eax ecx +
sar eax 2 +
test edi edi +
lea eax [edx+eax*4+530h] +
mov [edx+6Ch] eax +
jz loc_43D1C5  +
mov ecx [ebp+24h] +
mov eax 1 +
mov esi [ebp+34h] +
mov [esp] edi +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+8] eax +
mov [esp+4] esi +
call memcpy  +
mov edx [esp+1Ch] +
mov eax [esp+18h] +
mov [edx+34h] eax +
xor eax eax +
mov [ebx+1Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea esi [ebp+1BBCh] +
cmp eax esi +
ja loc_43D186  +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+4Ch] eax +
mov eax [ebp+50h] +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+50h] eax +
jmp loc_43D186  +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jb loc_43D186  +
jmp loc_43D1E0  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_43D179  +
jmp loc_43D210  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_43D0F2  +
***
movzx eax byte ptr [ebp+0] +
lea edi [edx+1] +
lea esi [ebp+1] +
mov [edx] al +
mov eax 1BCBh +
jmp loc_43D156  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_43D162  +
***
mov eax 0FFFFFFFEh +
jmp loc_43D1D1  +
***
mov eax 0FFFFFFFCh +
jmp loc_43D1D1  +
***
mov ecx [esi+28h] +
mov eax [esi+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax 0FFFFFFFCh +
jmp loc_43D1D1  +
***
mov eax [esp+4] +
test eax eax +
jz loc_43D2D0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_43D2D0  +
mov dword ptr [eax+1BC0h] 1 +
mov eax 0FFFFFFFDh +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
test eax eax +
jz loc_43D324  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_43D324  +
mov eax [edx+1BC4h] +
mov ecx [edx] +
shl eax 10h +
cmp ecx 0Fh +
jz loc_43D310  +
xor ebx ebx +
cmp ecx 18h +
jz loc_43D317  +
add eax ebx +
pop ebx  +
retn   +
***
mov ebx [edx+40h] +
add eax ebx +
jmp loc_43D309  +
***
mov ebx [edx+1BC8h] +
sub ebx [edx+40h] +
add eax ebx +
jmp loc_43D309  +
***
mov eax 0FFFF0000h +
pop ebx  +
retn   +
***
mov eax offset a1_2_7_0 +
retn   +
***
mov eax 55h +
retn   +
***
mov eax 2 +
sub eax [esp+4] +
mov eax ds:off_46D800[eax*4] +
retn   +
***
jmp loc_43D370  +
mov eax [esp+0Ch] +
imul eax [esp+8] +
mov [esp+4] eax +
jmp malloc  +
***
mov eax [esp+8] +
mov [esp+4] eax +
jmp free  +
***
push ebp  +
mov ebp 80078071h +
push edi  +
push esi  +
mov esi eax +
mov eax ecx +
push ebx  +
mov ebx edx +
imul  ebp +
mov eax ecx +
sar eax 1Fh +
sub esp 4 +
add edx ecx +
sar edx 0Fh +
sub edx eax +
movzx eax bx +
imul edx edx +
shr ebx 10h +
mov [esp] eax +
sub ecx edx +
mov edx ecx +
movzx ecx si +
mov edi edx +
imul edi ecx +
shr esi 10h +
add ebx esi +
sub ebx edx +
mov eax edi +
mul  ebp +
shr edx 0Fh +
imul edx edx +
sub edi edx +
mov edx 0FFF0h +
add ebx edi +
add ecx [esp] +
lea eax [ebx+0FFF1h] +
jz loc_43D414  +
lea edx [ecx-1] +
cmp edx 0FFF0h +
jbe loc_43D414  +
lea edx [ecx-0FFF2h] +
sub ebx 0FFF1h +
cmp eax 1FFE2h +
cmovnb eax ebx +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovnb eax ecx +
add esp 4 +
shl eax 10h +
pop ebx  +
or eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 38h +
mov ebp [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov eax ebp +
movzx ebp bp +
shr eax 10h +
cmp [esp+38h+arg_8] 1 +
mov [esp+38h+var_C] eax +
jz loc_43D62B  +
test edi edi +
jz loc_43D7E9  +
cmp [esp+38h+arg_8] 0Fh +
ja loc_43D4D2  +
mov edx [esp+38h+arg_8] +
test edx edx +
jz loc_43D49A  +
mov edx [esp+38h+arg_8] +
mov eax [esp+38h+var_C] +
add edx edi +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_43D487  +
mov [esp+38h+var_C] eax +
mov eax [esp+38h+var_C] +
cmp ebp 0FFF1h +
mov edx 80078071h +
lea ecx [ebp-0FFF1h] +
cmovb ecx ebp +
mul  edx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub eax edx +
shl eax 10h +
or ecx eax +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 15AFh +
jbe loc_43D66D  +
sub [esp+38h+arg_8] 15B0h +
lea eax [edi+15B0h] +
mov [esp+38h+var_8] eax +
mov eax edi +
movzx edi byte ptr [eax] +
add eax 10h +
lea ebx [ebp+edi+0] +
movzx edi byte ptr [eax-0Fh] +
mov [esp+38h+var_38] ebx +
add edi ebx +
mov ebx edi +
movzx edi byte ptr [eax-0Eh] +
mov [esp+38h+var_34] ebx +
mov esi edi +
movzx edi byte ptr [eax-0Dh] +
add esi ebx +
mov [esp+38h+var_30] esi +
mov ecx edi +
movzx edi byte ptr [eax-0Ch] +
add ecx esi +
mov [esp+38h+var_2C] ecx +
mov edx edi +
movzx edi byte ptr [eax-0Bh] +
add edx ecx +
mov [esp+38h+var_28] edx +
mov ebp edi +
movzx edi byte ptr [eax-0Ah] +
add ebp edx +
mov [esp+38h+var_24] ebp +
add edi ebp +
movzx ebp byte ptr [eax-1] +
mov ebx edi +
movzx edi byte ptr [eax-9] +
mov [esp+38h+var_20] ebx +
add edi ebx +
movzx ebx byte ptr [eax-4] +
mov esi edi +
movzx edi byte ptr [eax-8] +
mov [esp+38h+var_1C] esi +
mov ecx edi +
movzx edi byte ptr [eax-7] +
add ecx esi +
movzx esi byte ptr [eax-5] +
mov [esp+38h+var_18] ecx +
mov edx edi +
movzx edi byte ptr [eax-6] +
add edx ecx +
movzx ecx byte ptr [eax-3] +
mov [esp+38h+var_14] edx +
add edi edx +
movzx edx byte ptr [eax-2] +
add esi edi +
mov [esp+38h+var_10] edi +
mov edi [esp+38h+var_34] +
add ebx esi +
add edi [esp+38h+var_38] +
add ecx ebx +
add edi [esp+38h+var_30] +
add edx ecx +
add edi [esp+38h+var_2C] +
add ebp edx +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add edi [esp+38h+var_18] +
add edi [esp+38h+var_14] +
add edi [esp+38h+var_10] +
add edi esi +
add edi ebx +
add ecx edi +
add edx ecx +
add edx ebp +
add [esp+38h+var_C] edx +
cmp eax [esp+38h+var_8] +
jnz loc_43D4F4  +
mov edi eax +
mov eax 80078071h +
mul  ebp +
mov eax 80078071h +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
cmp [esp+38h+arg_8] 15AFh +
ja loc_43D4E0  +
mov eax [esp+38h+arg_8] +
test eax eax +
jnz loc_43D662  +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi] +
add ebp eax +
cmp ebp 0FFF1h +
lea eax [ebp-0FFF1h] +
cmovnb ebp eax +
mov eax [esp+38h+var_C] +
add eax ebp +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovb ecx eax +
add esp 38h +
shl ecx 10h +
or ecx ebp +
pop ebx  +
mov eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 0Fh +
jbe loc_43D7F3  +
mov eax [esp+38h+arg_8] +
mov edx edi +
mov [esp+38h+arg_4] edi +
sub eax 10h +
mov [esp+38h+var_4] eax +
shr [esp+38h+var_4] 4 +
mov eax [esp+38h+var_4] +
shl eax 4 +
lea eax [edi+eax+10h] +
mov [esp+38h+var_8] eax +
movzx eax byte ptr [edx] +
add edx 10h +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-0Fh] +
mov [esp+38h+var_38] esi +
add eax esi +
mov edi eax +
movzx eax byte ptr [edx-0Eh] +
mov [esp+38h+var_34] edi +
add eax edi +
movzx edi byte ptr [edx-4] +
mov esi eax +
movzx eax byte ptr [edx-0Dh] +
mov [esp+38h+var_30] esi +
add eax esi +
mov ebx eax +
movzx eax byte ptr [edx-0Ch] +
mov [esp+38h+var_2C] ebx +
mov ecx eax +
movzx eax byte ptr [edx-0Bh] +
add ecx ebx +
movzx ebx byte ptr [edx-7] +
mov [esp+38h+var_28] ecx +
mov ebp eax +
movzx eax byte ptr [edx-0Ah] +
add ebp ecx +
movzx ecx byte ptr [edx-6] +
mov [esp+38h+var_24] ebp +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-9] +
mov [esp+38h+var_20] esi +
add eax esi +
movzx esi byte ptr [edx-8] +
mov [esp+38h+var_1C] eax +
add esi eax +
movzx eax byte ptr [edx-5] +
add ebx esi +
add ecx ebx +
add eax ecx +
lea ebp [eax+edi] +
movzx edi byte ptr [edx-3] +
mov [esp+38h+var_18] ebp +
add edi ebp +
mov ebp edi +
movzx edi byte ptr [edx-2] +
mov [esp+38h+var_14] ebp +
add edi ebp +
movzx ebp byte ptr [edx-1] +
mov [esp+38h+var_10] edi +
add ebp edi +
mov edi [esp+38h+var_34] +
add edi [esp+38h+var_38] +
add edi [esp+38h+var_30] +
add edi [esp+38h+var_2C] +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add esi edi +
add ebx esi +
add ecx ebx +
add eax ecx +
add eax [esp+38h+var_18] +
add eax [esp+38h+var_14] +
add eax [esp+38h+var_10] +
add eax ebp +
add [esp+38h+var_C] eax +
cmp edx [esp+38h+var_8] +
jnz loc_43D692  +
mov esi [esp+38h+var_4] +
mov edi [esp+38h+arg_4] +
mov eax esi +
add eax 1 +
shl eax 4 +
add edi eax +
mov eax esi +
mov esi [esp+38h+arg_8] +
shl eax 4 +
neg eax  +
lea eax [esi+eax-11h] +
and esi 0Fh +
jz loc_43D7B4  +
lea edx [edi+eax+1] +
mov eax [esp+38h+var_C] +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_43D7A1  +
mov [esp+38h+var_C] eax +
mov ecx 80078071h +
mov eax ebp +
mul  ecx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  ecx +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
jmp loc_43D621  +
mov ecx 1 +
jmp loc_43D4C8  +
mov eax [esp+38h+arg_8] +
sub eax 1 +
jmp loc_43D799  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_43D815  +
jmp loc_43D3A0  +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_43D835  +
jmp loc_43D3A0  +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov ecx [edx+edi*4] +
test ecx ecx +
jz loc_43D86D  +
mov ebx edx +
xor esi esi +
test cl 1 +
jz loc_43D857  +
xor esi [ebx] +
add ebx 4 +
shr ecx 1 +
jnz loc_43D850  +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_43D845  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor esi esi +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_43D845  +
jmp loc_43D869  +
***
push ebp  +
mov ebp ecx +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 100h +
test ecx ecx +
jle loc_43D94D  +
mov edi edx +
mov edx 1 +
mov dword ptr [esp+80h] 0EDB88320h +
lea eax [esp+84h] +
lea ecx [esp+100h] +
mov [eax] edx +
add eax 4 +
add edx edx +
cmp eax ecx +
jnz loc_43D8B6  +
lea edx [esp+80h] +
mov eax esp +
call sub_43D840  +
mov edx esp +
lea eax [esp+80h] +
call sub_43D840  +
lea esi [esi+0] +
lea edx [esp+80h] +
mov eax esp +
call sub_43D840  +
test ebp 1 +
jz loc_43D90E  +
test esi esi +
jz loc_43D90E  +
mov ebx esi +
mov eax esp +
xor esi esi +
test bl 1 +
jz loc_43D907  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_43D900  +
sar ebp 1 +
jz loc_43D949  +
mov edx esp +
lea eax [esp+80h] +
call sub_43D840  +
test ebp 1 +
jz loc_43D945  +
test esi esi +
jz loc_43D945  +
mov ebx esi +
xor esi esi +
lea eax [esp+80h] +
test bl 1 +
jz loc_43D93E  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_43D937  +
sar ebp 1 +
jnz loc_43D8E0  +
mov eax esi +
xor eax edi +
add esp 100h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax offset dword_46D840 +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov ebp [esp+4+arg_8] +
test edx edx +
jz loc_43DC13  +
mov eax [esp+4+arg_0] +
test ebp ebp +
not eax  +
jnz loc_43D9B4  +
jmp loc_43DC09  +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_46D840[ecx*4] +
sub ebp 1 +
jz loc_43DC09  +
test dl 3 +
jnz loc_43D996  +
cmp ebp 1Fh +
jbe loc_43DB84  +
lea edi [ebp-20h] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 5 +
mov ecx [esp+4+var_4] +
mov [esp+4+arg_4] edx +
shl ecx 5 +
lea edi [edx+ecx+20h] +
lea esi [esi+0] +
xor eax [ebx] +
mov edx eax +
movzx ecx al +
shr edx 10h +
movzx esi ah +
mov ecx ds:dword_46E440[ecx*4] +
shr eax 18h +
movzx edx dl +
xor ecx ds:dword_46D840[eax*4] +
xor ecx [ebx+4] +
xor ecx ds:dword_46E040[esi*4] +
xor ecx ds:dword_46DC40[edx*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_46E440[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_46D840[ecx*4] +
xor esi [ebx+8] +
xor esi ds:dword_46E040[edx*4] +
xor esi ds:dword_46DC40[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_46E440[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_46D840[esi*4] +
xor ecx [ebx+0Ch] +
xor ecx ds:dword_46E040[edx*4] +
xor ecx ds:dword_46DC40[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_46E440[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_46D840[ecx*4] +
xor esi [ebx+10h] +
xor esi ds:dword_46E040[edx*4] +
xor esi ds:dword_46DC40[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_46E440[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_46D840[esi*4] +
xor ecx [ebx+14h] +
xor ecx ds:dword_46E040[edx*4] +
xor ecx ds:dword_46DC40[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_46E440[esi*4] +
movzx eax al +
shr ecx 18h +
xor esi ds:dword_46D840[ecx*4] +
add ebx 20h +
xor esi [ebx-8] +
xor esi ds:dword_46E040[edx*4] +
xor esi ds:dword_46DC40[eax*4] +
mov eax esi +
mov edx esi +
movzx ecx ah +
movzx edx dl +
shr eax 10h +
mov edx ds:dword_46E440[edx*4] +
shr esi 18h +
movzx eax al +
xor edx ds:dword_46D840[esi*4] +
xor edx [ebx-4] +
xor edx ds:dword_46E040[ecx*4] +
xor edx ds:dword_46DC40[eax*4] +
mov ecx edx +
mov eax edx +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_46D840[eax*4] +
movzx edx dh +
xor eax ds:dword_46E440[esi*4] +
xor eax ds:dword_46E040[edx*4] +
xor eax ds:dword_46DC40[ecx*4] +
cmp ebx edi +
jnz loc_43D9E0  +
mov ecx [esp+4+var_4] +
and ebp 1Fh +
mov edx [esp+4+arg_4] +
add ecx 1 +
shl ecx 5 +
add edx ecx +
cmp ebp 3 +
jbe loc_43DBE6  +
lea edi [ebp-4] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 2 +
mov edi [esp+4+var_4] +
mov [esp+4+arg_4] edx +
lea edi [edx+edi*4+4] +
xor eax [ebx] +
add ebx 4 +
mov ecx eax +
mov edx eax +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_46D840[eax*4] +
movzx edx dh +
xor eax ds:dword_46E440[esi*4] +
xor eax ds:dword_46E040[edx*4] +
xor eax ds:dword_46DC40[ecx*4] +
cmp ebx edi +
jnz loc_43DBA0  +
mov edx [esp+4+arg_4] +
and ebp 3 +
mov edi [esp+4+var_4] +
lea edx [edx+edi*4+4] +
test ebp ebp +
jz loc_43DC09  +
lea ebx [edx+ebp] +
lea esi [esi+0] +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_46D840[ecx*4] +
cmp edx ebx +
jnz loc_43DBF0  +
add esp 4 +
not eax  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_43D880  +
***
jmp loc_43DC40  +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_43D880  +
***
push esi  +
push ebx  +
sub esp 84h +
mov edi [esp+84h+arg_8] +
lea edx [esp+84h+var_40] +
lea eax [esp+84h+var_20] +
lea esi [esi+0] +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
cmp edx eax +
jnz loc_43DC80  +
mov edx [esp+84h+arg_4] +
test edi edi +
lea ebx [edx+edi*2] +
jz loc_43DCB0  +
nop   +
lea esi [esi+0] +
movzx ecx word ptr [edx] +
add edx 2 +
add word ptr [esp+ecx*2+84h+var_40] 1 +
cmp edx ebx +
jnz loc_43DCA0  +
mov esi [esp+84h+arg_10] +
mov ecx 0Fh +
mov edx [esi] +
nop   +
cmp word ptr [esp+ecx*2+84h+var_40] 0 +
jnz loc_43DD1D  +
sub ecx 1 +
jnz loc_43DCC0  +
mov eax [esp+84h+arg_C] +
xor ebx ebx +
xor esi esi +
mov edi [esp+84h+arg_C] +
mov eax [eax] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] bx +
mov eax [edi] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] si +
mov eax [esp+84h+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
add esp 84h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx edx +
cmovbe edx ecx +
test ecx ecx +
mov [esp+84h+var_64] ecx +
mov [esp+84h+var_84] edx +
jz loc_43DCCD  +
cmp ecx 1 +
movzx esi word ptr [esp+84h+var_40+2] +
mov ebp 1 +
jbe loc_43DD56  +
test si si +
jnz loc_43DD56  +
mov edx [esp+84h+var_64] +
jmp loc_43DD4F  +
cmp word ptr [esp+ebp*2+84h+var_40] 0 +
jnz loc_43DD56  +
add ebp 1 +
cmp ebp edx +
jnz loc_43DD47  +
lea edx [esp+84h+var_3C] +
movzx ecx si +
mov ebx 1 +
jmp loc_43DD6A  +
movzx ecx word ptr [edx] +
add edx 2 +
add ebx ebx +
sub ebx ecx +
js loc_43E0DE  +
cmp eax edx +
jnz loc_43DD64  +
test ebx ebx +
jz loc_43DD96  +
cmp [esp+84h+var_64] 1 +
jnz loc_43E0DE  +
mov ecx [esp+84h+arg_0] +
test ecx ecx +
jz loc_43E0DE  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+84h+var_20+2] dx +
mov edx 1 +
jmp loc_43DDAB  +
movzx esi word ptr [esp+edx*2+84h+var_40] +
add edx 1 +
add ecx esi +
cmp edx 0Fh +
mov [eax+edx*2] cx +
jnz loc_43DDA6  +
xor eax eax +
test edi edi +
jz loc_43DDF7  +
mov [esp+84h+var_80] ebp +
mov esi [esp+84h+arg_4] +
mov ebp [esp+84h+arg_14] +
movzx ecx word ptr [esi+eax*2] +
test cx cx +
jz loc_43DDEC  +
movzx edx word ptr [esp+ecx*2+84h+var_20] +
lea ebx [edx+1] +
mov word ptr [esp+ecx*2+84h+var_20] bx +
mov [ebp+edx*2+0] ax +
add eax 1 +
cmp eax edi +
jnz loc_43DDD1  +
mov ebp [esp+84h+var_80] +
mov ebx [esp+84h+arg_0] +
test ebx ebx +
jz loc_43E139  +
cmp [esp+84h+arg_0] 1 +
mov edi 0FFFFFFFFh +
mov eax 100h +
mov ebx offset unk_46F840 +
cmovnz eax edi +
mov edi offset unk_46F880 +
mov [esp+84h+var_58] eax +
mov eax offset unk_46F6BE +
cmovnz eax ebx +
mov [esp+84h+var_48] eax +
mov eax offset unk_46F6FE +
cmovnz eax edi +
mov [esp+84h+var_4C] eax +
mov eax [esp+84h+var_84] +
cmp ebp eax +
cmovnb eax ebp +
mov edi eax +
mov [esp+84h+var_68] eax +
mov eax [esp+84h+arg_C] +
mov ecx edi +
mov eax [eax] +
mov [esp+84h+var_6C] eax +
mov eax 1 +
shl eax cl +
cmp [esp+84h+arg_0] 1 +
setz [esp+84h+var_42]  +
cmp eax 353h +
ja loc_43E12C  +
cmp [esp+84h+arg_0] 2 +
setz [esp+84h+var_41]  +
cmp eax 24Fh +
ja loc_43E0EE  +
mov ebx [esp+84h+arg_14] +
mov edi [esp+84h+var_68] +
mov [esp+84h+var_5C] eax +
sub eax 1 +
mov [esp+84h+var_84] ebp +
mov [esp+84h+var_70] ebx +
mov [esp+84h+var_54] 0FFFFFFFFh +
mov ebp edi +
mov [esp+84h+var_80] 0 +
mov [esp+84h+var_7C] 0 +
mov [esp+84h+var_50] eax +
lea esi [esi+0] +
mov eax [esp+84h+var_70] +
movzx edx byte ptr [esp+84h+var_84] +
sub dl byte ptr [esp+84h+var_7C] +
mov byte ptr [esp+84h+var_74] 0 +
movzx esi word ptr [eax] +
movzx eax si +
cmp [esp+84h+var_58] eax +
jg loc_43DF07  +
jge loc_43E120  +
mov edi [esp+84h+var_48] +
movzx ebx byte ptr [edi+eax*2] +
mov byte ptr [esp+84h+var_74] bl +
mov ebx [esp+84h+var_4C] +
movzx esi word ptr [ebx+eax*2] +
mov ecx [esp+84h+var_84] +
mov edi 1 +
mov eax 1 +
sub ecx [esp+84h+var_7C] +
shl edi cl +
mov ecx ebp +
shl eax cl +
movzx ecx byte ptr [esp+84h+var_7C] +
mov ebx eax +
mov [esp+84h+var_60] eax +
lea eax ds:0[edi*4] +
mov [esp+84h+var_78] eax +
mov eax [esp+84h+var_80] +
neg [esp+84h+var_78]  +
shr eax cl +
mov ecx ebx +
add eax ebx +
mov ebx [esp+84h+var_6C] +
sub eax edi +
lea eax [ebx+eax*4+1] +
movzx ebx byte ptr [esp+84h+var_74] +
mov [esp+84h+var_74] ebp +
mov ebp [esp+84h+var_78] +
lea esi [esi+0] +
mov [eax-1] bl +
mov [eax] dl +
mov [eax+1] si +
add eax ebp +
sub ecx edi +
jnz loc_43DF60  +
mov eax [esp+84h+var_84] +
mov ebp [esp+84h+var_74] +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+84h+var_80] +
test ecx eax +
jz loc_43DF96  +
lea esi [esi+0] +
shr ecx 1 +
test ecx eax +
jnz loc_43DF90  +
test ecx ecx +
jz loc_43E110  +
lea eax [ecx-1] +
and eax [esp+84h+var_80] +
add eax ecx +
mov [esp+84h+var_80] eax +
mov esi [esp+84h+var_84] +
movzx eax word ptr [esp+esi*2+84h+var_40] +
mov word ptr [esp+84h+var_78] ax +
sub eax 1 +
test ax ax +
mov word ptr [esp+esi*2+84h+var_40] ax +
jnz loc_43DFE7  +
mov eax [esp+84h+var_64] +
cmp esi eax +
jz loc_43E155  +
mov eax [esp+84h+var_70] +
mov ebx [esp+84h+arg_4] +
movzx eax word ptr [eax+2] +
movzx eax word ptr [ebx+eax*2] +
mov [esp+84h+var_84] eax +
mov eax [esp+84h+var_84] +
cmp [esp+84h+var_68] eax +
jnb loc_43E0D4  +
mov ebx [esp+84h+var_80] +
and ebx [esp+84h+var_50] +
cmp ebx [esp+84h+var_54] +
jz loc_43E0D4  +
mov edi [esp+84h+var_6C] +
mov edx 1 +
mov esi [esp+84h+var_60] +
mov eax [esp+84h+var_7C] +
lea edi [edi+esi*4] +
mov [esp+84h+var_6C] edi +
mov edi [esp+84h+var_84] +
test eax eax +
cmovz eax [esp+84h+var_68] +
mov ebp edi +
mov esi eax +
sub ebp eax +
mov ecx ebp +
shl edx cl +
mov ecx [esp+84h+var_64] +
mov [esp+84h+var_7C] eax +
cmp edi ecx +
jnb loc_43E069  +
movzx eax word ptr [esp+edi*2+84h+var_40] +
sub edx eax +
test edx edx +
jle loc_43E069  +
lea ecx [esp+esi*2+84h+var_40] +
mov edi [esp+84h+var_64] +
jmp loc_43E05D  +
movzx eax word ptr [ecx+ebp*2] +
sub edx eax +
test edx edx +
jle loc_43E069  +
add ebp 1 +
add edx edx +
lea eax [esi+ebp] +
cmp eax edi +
jb loc_43E053  +
mov eax 1 +
mov ecx ebp +
shl eax cl +
add [esp+84h+var_5C] eax +
cmp [esp+84h+var_5C] 353h +
ja loc_43E198  +
cmp [esp+84h+var_5C] 24Fh +
ja loc_43E1A8  +
mov eax [esp+84h+arg_C] +
mov ecx ebp +
lea edx ds:0[ebx*4] +
mov [esp+84h+var_54] ebx +
mov eax [eax] +
mov [eax+ebx*4] cl +
mov eax [esp+84h+arg_C] +
movzx ecx byte ptr [esp+84h+var_68] +
mov eax [eax] +
mov [eax+edx+1] cl +
mov eax [esp+84h+arg_C] +
mov ecx [eax] +
mov eax [esp+84h+var_6C] +
sub eax ecx +
sar eax 2 +
mov [ecx+edx+2] ax +
add [esp+84h+var_70] 2 +
jmp loc_43DED0  +
add esp 84h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+84h+var_41] 0 +
jz loc_43DE95  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+84h+var_80] 0 +
jmp loc_43DFAB  +
xor esi esi +
mov byte ptr [esp+84h+var_74] 60h +
jmp loc_43DF07  +
cmp [esp+84h+var_42] 0 +
jz loc_43DE7D  +
jmp loc_43E0F9  +
mov eax [esp+84h+arg_14] +
mov [esp+84h+var_58] 13h +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_4C] eax +
jmp loc_43DE41  +
mov ecx [esp+84h+var_80] +
test ecx ecx +
jz loc_43E174  +
mov eax [esp+84h+var_6C] +
mov ebx [esp+84h+var_80] +
lea eax [eax+ebx*4] +
mov [eax+1] dl +
xor edx edx +
mov byte ptr [eax] 40h +
mov [eax+2] dx +
mov eax [esp+84h+var_5C] +
mov esi [esp+84h+arg_C] +
mov ebx [esp+84h+var_68] +
shl eax 2 +
add [esi] eax +
mov eax [esp+84h+arg_10] +
mov [eax] ebx +
xor eax eax +
jmp loc_43DD12  +
cmp [esp+84h+var_42] 0 +
jz loc_43E084  +
jmp loc_43E0F9  +
cmp [esp+84h+var_41] 0 +
jz loc_43E092  +
jmp loc_43E0F9  +
***
push esi  +
push ebx  +
sub esp 44h +
mov eax [esp+44h+arg_0] +
mov eax [eax+1Ch] +
mov esi eax +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
sub eax 1 +
mov edi eax +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+4] +
lea eax [edi+eax-5] +
mov [esp+44h+var_2C] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
lea edi [eax-1] +
mov eax [esp+44h+arg_0] +
mov eax [eax+10h] +
mov edx eax +
sub edx [esp+44h+arg_4] +
lea eax [edi+eax-101h] +
mov [esp+44h+var_34] eax +
mov eax esi +
lea ecx [edi+edx] +
mov edx 1 +
mov [esp+44h+var_14] ecx +
mov ecx [esi+28h] +
mov esi [esi+2Ch] +
mov [esp+44h+var_20] ecx +
mov [esp+44h+var_C] esi +
mov esi [eax+30h] +
mov [esp+44h+var_28] esi +
mov esi [eax+34h] +
mov [esp+44h+var_1C] esi +
mov esi eax +
mov eax [eax+38h] +
mov ebx [esi+4Ch] +
mov ebp [esi+3Ch] +
mov [esp+44h+var_40] ebx +
mov ebx [esi+50h] +
mov [esp+44h+var_24] ebx +
mov ecx [esi+54h] +
mov ebx edx +
shl ebx cl +
mov ecx [esi+58h] +
mov esi [esp+44h+var_1C] +
lea ebx [ebx-1] +
mov [esp+44h+var_30] ebx +
shl edx cl +
lea ebx [edx-1] +
mov [esp+44h+var_18] ebx +
lea ebx [esi-1] +
mov esi [esp+44h+var_28] +
add esi [esp+44h+var_20] +
mov [esp+44h+var_8] ebx +
mov [esp+44h+var_4] esi +
cmp ebp 0Eh +
ja loc_43E2A9  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
lea esi [esi+2] +
movzx edx byte ptr [esi] +
mov [esp+44h+var_44] esi +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
add edx ebx +
add eax edx +
mov edx [esp+44h+var_30] +
mov esi [esp+44h+var_40] +
and edx eax +
lea ebx [esi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jz loc_43E329  +
test dl 10h +
jnz loc_43E3A4  +
test dl 40h +
jnz loc_43E575  +
mov [esp+44h+var_3C] edi +
mov edi [esp+44h+var_40] +
jmp loc_43E2FA  +
test dl 10h +
jnz loc_43E3A0  +
test dl 40h +
jnz loc_43E571  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jnz loc_43E2E8  +
mov edi [esp+44h+var_3C] +
mov [edi+1] bl +
add edi 1 +
cmp edi [esp+44h+var_34] +
jnb loc_43E342  +
mov ecx [esp+44h+var_2C] +
cmp [esp+44h+var_44] ecx +
jb loc_43E284  +
mov edx [esp+44h+var_44] +
mov ecx ebp +
mov ebx 1 +
shr ecx 3 +
mov esi [esp+44h+arg_0] +
sub edx ecx +
shl ecx 3 +
sub ebp ecx +
mov ecx ebp +
shl ebx cl +
sub ebx 1 +
and ebx eax +
lea eax [edx+1] +
mov [esi] eax +
lea eax [edi+1] +
mov [esi+0Ch] eax +
mov eax [esp+44h+var_2C] +
sub eax edx +
add eax 5 +
mov [esi+4] eax +
mov eax [esp+44h+var_34] +
sub eax edi +
add eax 101h +
mov [esi+10h] eax +
mov eax [esp+44h+var_38] +
mov [eax+38h] ebx +
mov [eax+3Ch] ebp +
add esp 44h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+44h+var_3C] +
and edx 0Fh +
movzx ecx bx +
movzx ebx dl +
test ebx ebx +
mov [esp+44h+var_3C] ecx +
jz loc_43E3E8  +
cmp ebx ebp +
jbe loc_43E3D2  +
mov ecx [esp+44h+var_44] +
movzx esi byte ptr [ecx+1] +
mov ecx ebp +
add ebp 8 +
shl esi cl +
mov ecx [esp+44h+var_44] +
add eax esi +
lea esi [ecx+1] +
mov [esp+44h+var_44] esi +
mov ecx edx +
mov esi 1 +
shl esi cl +
sub ebp ebx +
sub esi 1 +
and esi eax +
add [esp+44h+var_3C] esi +
shr eax cl +
cmp ebp 0Eh +
jbe loc_43E590  +
mov edx [esp+44h+var_18] +
mov ecx [esp+44h+var_24] +
and edx eax +
lea ebx [ecx+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jnz loc_43E461  +
test dl 40h +
jnz loc_43E5D6  +
mov [esp+44h+var_10] edi +
mov edi [esp+44h+var_24] +
jmp loc_43E431  +
test dl 40h +
jnz loc_43E5D2  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jz loc_43E428  +
mov edi [esp+44h+var_10] +
movzx ecx bx +
mov ebx edx +
and ebx 0Fh +
movzx esi bl +
cmp esi ebp +
mov [esp+44h+var_10] ecx +
jbe loc_43E492  +
mov ecx [esp+44h+var_44] +
movzx edx byte ptr [ecx+1] +
mov ecx ebp +
shl edx cl +
lea ecx [ebp+8] +
add eax edx +
cmp esi ecx +
ja loc_43E6D1  +
add [esp+44h+var_44] 1 +
mov ebp ecx +
mov ecx ebx +
mov edx 1 +
shl edx cl +
sub ebp esi +
sub edx 1 +
and edx eax +
add edx [esp+44h+var_10] +
shr eax cl +
mov ecx edi +
sub ecx [esp+44h+var_14] +
mov [esp+44h+var_10] edx +
cmp [esp+44h+var_10] ecx +
mov edx ecx +
jbe loc_43E5F0  +
mov ecx [esp+44h+var_10] +
sub ecx edx +
cmp [esp+44h+var_C] ecx +
jnb loc_43E4DC  +
mov esi [esp+44h+var_38] +
mov esi [esi+1BC0h] +
test esi esi +
jnz loc_43E735  +
mov ebx [esp+44h+var_28] +
test ebx ebx +
jnz loc_43E655  +
mov edx [esp+44h+var_20] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_43E515  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_43E500  +
mov edx edi +
sub edx [esp+44h+var_10] +
cmp [esp+44h+var_3C] 2 +
mov ecx [esp+44h+var_3C] +
jbe loc_43E545  +
movzx ebx byte ptr [edx+1] +
add edx 3 +
sub ecx 3 +
add edi 3 +
mov [edi-2] bl +
movzx ebx byte ptr [edx-1] +
mov [edi-1] bl +
movzx ebx byte ptr [edx] +
cmp ecx 2 +
mov [edi] bl +
ja loc_43E520  +
mov [esp+44h+var_3C] ecx +
mov ecx [esp+44h+var_3C] +
test ecx ecx +
jz loc_43E32F  +
movzx ecx byte ptr [edx+1] +
cmp [esp+44h+var_3C] 2 +
mov [edi+1] cl +
jnz loc_43E724  +
movzx edx byte ptr [edx+2] +
add edi 2 +
mov [edi] dl +
jmp loc_43E32F  +
mov edi [esp+44h+var_3C] +
and edx 20h +
jz loc_43E5B8  +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 0Bh +
jmp loc_43E342  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
movzx edx byte ptr [esi+2] +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
mov ecx esi +
add edx ebx +
add ecx 2 +
add eax edx +
mov [esp+44h+var_44] ecx +
jmp loc_43E3F1  +
mov ecx [esp+44h+arg_0] +
mov esi [esp+44h+var_38] +
mov dword ptr [ecx+18h] offset aInvalidLiter_1 +
mov dword ptr [esi] 1Dh +
jmp loc_43E342  +
mov edi [esp+44h+var_10] +
mov ecx [esp+44h+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidDista_2 +
mov ecx [esp+44h+var_38] +
mov dword ptr [ecx] 1Dh +
jmp loc_43E342  +
mov edx edi +
mov ebx [esp+44h+var_3C] +
sub edx [esp+44h+var_10] +
mov [esp+44h+var_10] eax +
jmp loc_43E604  +
mov edi ecx +
mov edx esi +
movzx ecx byte ptr [edx+1] +
sub ebx 3 +
cmp ebx 2 +
lea esi [edx+3] +
mov [edi+1] cl +
movzx ecx byte ptr [edx+2] +
mov [edi+2] cl +
movzx eax byte ptr [edx+3] +
lea ecx [edi+3] +
mov [edi+3] al +
ja loc_43E600  +
test ebx ebx +
mov eax [esp+44h+var_10] +
mov [esp+44h+var_3C] ebx +
jz loc_43E6ED  +
movzx ecx byte ptr [edx+4] +
cmp ebx 2 +
mov [edi+4] cl +
jnz loc_43E72C  +
movzx edx byte ptr [edx+5] +
add edi 5 +
mov [edi] dl +
jmp loc_43E32F  +
cmp [esp+44h+var_28] ecx +
jnb loc_43E6F4  +
mov edx [esp+44h+var_4] +
sub edx ecx +
sub ecx [esp+44h+var_28] +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_43E515  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_43E680  +
mov esi [esp+44h+var_3C] +
cmp [esp+44h+var_28] esi +
mov edx [esp+44h+var_8] +
jnb loc_43E515  +
mov edi [esp+44h+var_28] +
xor edx edx +
sub [esp+44h+var_3C] edi +
mov esi edi +
mov edi [esp+44h+var_1C] +
movzx ebx byte ptr [edi+edx] +
mov [ecx+edx+1] bl +
add edx 1 +
cmp edx esi +
jnz loc_43E6B1  +
mov edi [esp+44h+var_28] +
add edi ecx +
mov edx edi +
sub edx [esp+44h+var_10] +
jmp loc_43E515  +
mov edx [esp+44h+var_44] +
add ebp 10h +
movzx edx byte ptr [edx+2] +
shl edx cl +
add eax edx +
mov edx [esp+44h+var_44] +
lea ecx [edx+2] +
mov [esp+44h+var_44] ecx +
jmp loc_43E492  +
mov edi ecx +
jmp loc_43E32F  +
mov edx [esp+44h+var_28] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_43E515  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_43E710  +
jmp loc_43E50F  +
add edi 1 +
jmp loc_43E32F  +
add edi 4 +
nop   +
jmp loc_43E32F  +
mov esi [esp+44h+arg_0] +
mov dword ptr [esi+18h] offset aInvalidDista_3 +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 1Dh +
jmp loc_43E342  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_43E770  +
cmp eax 3 +
jz loc_43E770  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_43F470  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_442040 2 +
mov eax [esp+18h+arg_4] +
jz loc_43E7BB  +
mov dword_442040 2 +
cmp eax 2 +
jz loc_43E7D1  +
cmp eax 1 +
jz loc_43E800  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_474030 +
cmp ebx offset unk_474030 +
jz loc_43E7C5  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_43E7E8  +
call eax  +
add ebx 4 +
cmp ebx offset unk_474030 +
jnz loc_43E7E0  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_43F470  +
jmp loc_43E7C5  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_472CA4 +
mov [esp+28h+var_28] eax +
call sub_43E840  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_43E900  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_472CA4 +
mov [esp+28h+var_28] eax +
call sub_43E840  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_472CA0 +
mov [esp+28h+var_28] eax +
call sub_43E840  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_43E850  +
mov ds:dword_472CA4 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_43E850  +
mov [esp+28h+var_28] 8 +
mov ds:dword_472CA0 eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_43E860  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_43E998  +
cmp eax 0C000008Dh +
jnb loc_43EA00  +
cmp eax 0C0000005h +
jnz loc_43EA07  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_43EA36  +
test eax eax +
jz loc_43E9AD  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_43E9ED  +
cmp eax 0C0000094h +
jz loc_43E9C1  +
cmp eax 0C0000096h +
jz loc_43EA0E  +
cmp eax 0C0000093h +
jz loc_43EA00  +
mov eax ds:dword_4728A0 +
test eax eax +
jz loc_43E9F2  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_43EA66  +
test eax eax +
jz loc_43E9AD  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_43E9C3  +
cmp eax 0C000001Dh +
jnz loc_43E9AD  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_43EA50  +
test eax eax +
jz loc_43E9AD  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_43E9ED  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_43E9ED  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_43E9ED  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_43E9ED  +
call sub_43F0D0  +
jmp loc_43E9ED  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_4728A4 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_43EAE1  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_43EAE7  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_4728A4 eax +
jmp loc_440400  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_43EB1D  +
mov edx ds:off_46FAF0[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_43EBC0  +
***
push edi  +
mov eax ds:dword_4728A8 +
retn   +
***
call eax  +
mov eax off_44203C +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_44203C edx +
test eax eax +
jnz loc_43F0F0  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_440D20 +
cmp ebx 0FFFFFFFFh +
jz loc_43F143  +
test ebx ebx +
jz loc_43F132  +
call ds:dword_440D20[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_43F123  +
mov [esp+18h+var_18] offset dword_43F0E0 +
call sub_43E920  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_43F149  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_440D20[eax*4] +
test edx edx +
jnz loc_43F147  +
jmp loc_43F11F  +
***
mov eax ds:dword_4728B4 +
test eax eax +
jz loc_43F170  +
retn   +
mov ds:dword_4728B4 1 +
jmp sub_43F110  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_442054 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_43F1B2  +
not eax  +
mov dword_442058 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_43F220  +
mov eax esi +
not eax  +
mov dword_442054 esi +
mov dword_442058 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_43F20C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_472C08 +
call ds:EnterCriticalSection  +
mov edi ds:dword_472C00 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_43F319  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_43F312  +
test ebx ebx +
jz loc_43F312  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_43F2F0  +
mov [esp+28h+var_28] offset unk_472C08 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_43F340  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_472C04 +
test eax eax +
jnz loc_43F360  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_43F3BC  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_472C08 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_472C00 +
mov ds:dword_472C00 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_472C08 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_43F353  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_472C04 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_43F3F0  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_472C08 +
call ds:EnterCriticalSection  +
mov edx ds:dword_472C00 +
sub esp 4 +
test edx edx +
jz loc_43F421  +
mov eax [edx] +
cmp eax ebx +
jnz loc_43F41A  +
jmp loc_43F458  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_43F438  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_43F412  +
mov dword ptr [esp] offset unk_472C08 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_472C08 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_43F431  +
***
mov eax [edx+8] +
mov ds:dword_472C00 eax +
mov eax edx +
jmp loc_43F43E  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_43F4C4  +
jb loc_43F495  +
cmp eax 3 +
jnz loc_43F48E  +
mov eax ds:dword_472C04 +
test eax eax +
jnz loc_43F4F2  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_472C04 +
test eax eax +
jnz loc_43F500  +
mov eax ds:dword_472C04 +
cmp eax 1 +
jnz loc_43F48E  +
mov ds:dword_472C04 0 +
mov [esp+18h+var_18] offset unk_472C08 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_43F48E  +
mov eax ds:dword_472C04 +
test eax eax +
jz loc_43F4E0  +
mov ds:dword_472C04 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_472C08 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_43F4CD  +
call sub_43F2C0  +
jmp loc_43F48E  +
call sub_43F2C0  +
jmp loc_43F49E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_43F520  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_43F540  +
xor eax eax +
retn   +
***
jmp sub_43F510  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_43F588  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_43F57E  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_43F58A  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_43F570  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_43F5B5  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_43F5C0  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_43F510  +
test eax eax +
jz loc_43F5B5  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_43F5FA  +
jmp loc_43F5B5  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_43F620  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_43F5F0  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_43F648  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_43F510  +
test eax eax +
jz loc_43F641  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_43F550  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_43F692  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_43F510  +
test eax eax +
jz loc_43F68E  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_43F6C8  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_43F510  +
test eax eax +
jz loc_43F6C3  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_43F6C3  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_43F703  +
test ebx ebx +
jz loc_43F714  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_43F6F6  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_43F730  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_43F510  +
test eax eax +
jz loc_43F72B  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_43F760  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_43F510  +
test eax eax +
jz loc_43F796  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_43F550  +
test eax eax +
jz loc_43F7A0  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_43F796  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_43F7D0  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_43F510  +
test eax eax +
jz loc_43F7C7  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_43F7C7  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_43F550  +
test eax eax +
jz loc_43F7C7  +
add esi 400000h +
mov edx esi +
jnz loc_43F816  +
jmp loc_43F7C7  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_43F824  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_43F840  +
test ebx ebx +
jg loc_43F810  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_43F872  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_43F85D  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_43F8D0  +
cmp ecx ebp +
ja loc_43F902  +
test ecx ecx +
mov ebx ecx +
jnz loc_43F8B7  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_43F8F6  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_43F912  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_43F970  +
cmp esi ebp +
jb loc_43F970  +
xor eax eax +
jmp loc_43F8C5  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_43F980  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_43F963  +
cmp esi edx +
jz loc_43F980  +
mov eax edi +
xor edx edx +
jmp loc_43F8C5  +
mov eax 1 +
jmp loc_43F8C5  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_43FA40  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_43FA5A  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_43F9E2  +
cmp ecx esi +
jbe loc_43FA04  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_43F9EA  +
cmp edx esi +
jbe loc_43FA23  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_43F9FC  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_43FA13  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_43F9EA  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_43FA70  +
cmp ecx eax +
jbe loc_43FA33  +
cmp edx esi +
jnb loc_43F9E6  +
xor esi esi +
mov ebx 1 +
jmp loc_43F9EA  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_43F9C6  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_43F9C6  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_43FAE0  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_43FACF  +
cmp esi edx +
jz loc_43FAE0  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_43F9EA  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_43F9EA  +
***
push esi  +
push esi  +
push ebx  +
sub esp 30h +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_C] +
test ebx ebx +
jz loc_43FD94  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_43FDA0  +
mov eax [esi] +
mov dword ptr [esi] 0 +
mov [ebp+var_C] eax +
movzx eax byte ptr [ebx] +
test al al +
jz loc_43FD20  +
cmp [ebp+arg_14] 1 +
jbe loc_43FD00  +
cmp byte ptr [ebp+var_C] 0 +
jnz loc_43FD31  +
mov [esp+38h+var_34] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_38] eax +
call ds:IsDBCSLeadByteEx  +
sub esp 8 +
test eax eax +
jz loc_43FD00  +
cmp [ebp+arg_8] 1 +
jbe loc_43FDBC  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_43FDA7  +
lea esp [ebp-8] +
mov eax 2 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_10] +
test eax eax +
jnz loc_43FD57  +
movzx eax byte ptr [ebx] +
mov edx [ebp+arg_0] +
mov [edx] ax +
lea esp [ebp-8] +
mov eax 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor edx edx +
mov [eax] dx +
xor eax eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov byte ptr [ebp+var_C+1] al +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 2 +
mov [esp+38h+var_28] eax +
lea eax [ebp+var_C] +
mov [esp+38h+var_30] eax +
jmp loc_43FCD3  +
mov eax [ebp+arg_0] +
mov [esp+38h+var_24] 1 +
mov [esp+38h+var_2C] 1 +
mov [esp+38h+var_30] ebx +
mov [esp+38h+var_28] eax +
mov eax [ebp+arg_10] +
mov [esp+38h+var_34] 8 +
mov [esp+38h+var_38] eax +
call ds:MultiByteToWideChar  +
sub esp 18h +
test eax eax +
jz loc_43FDA7  +
mov eax 1 +
jmp loc_43FD2A  +
lea esp [ebp-8] +
xor eax eax +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_43FD2A  +
call _errno  +
mov dword ptr [eax] 2Ah +
mov eax 0FFFFFFFFh +
jmp loc_43FD2A  +
movzx eax byte ptr [ebx] +
mov [esi] al +
mov eax 0FFFFFFFEh +
jmp loc_43FD2A  +
***
push esi  +
push ebx  +
sub esp 30h +
mov ebx [esp+38h+arg_0] +
mov word ptr [esp+38h+var_A] ax +
lea eax [esp+38h+var_A] +
mov esi [esp+38h+arg_C] +
test ebx ebx +
cmovz ebx eax +
mov eax ds:__mb_cur_max +
mov edi [eax] +
call sub_4404E0  +
test esi esi +
mov edx offset unk_472C2C +
cmovnz edx esi +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_24] edi +
mov [esp+38h+var_2C] edx +
mov [esp+38h+var_28] eax +
mov eax [esp+38h+arg_8] +
mov [esp+38h+var_30] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_34] eax +
call sub_43FC50  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
mov eax offset unk_472C28 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+5Ch] +
mov esi [esp+54h] +
mov ebp [esp+50h] +
mov edi [esp+58h] +
test edx edx +
cmovnz eax [esp+5Ch] +
mov [esp+5Ch] eax +
call sub_4404E0  +
test esi esi +
mov [esp+18h] eax +
mov eax ds:__mb_cur_max +
mov eax [eax] +
mov [esp+1Ch] eax +
jz loc_43FF50  +
mov ecx [esi] +
test ecx ecx +
jz loc_43FF50  +
test ebp ebp +
jz loc_43FEF3  +
test edi edi +
jz loc_43FF50  +
mov [esp+54h] esi +
xor ebx ebx +
mov esi ebp +
mov ebp [esp+54h] +
jmp loc_43FEA8  +
mov ecx [ebp+0] +
add ebx eax +
add esi 2 +
add ecx eax +
cmp edi ebx +
mov [ebp+0] ecx +
jbe loc_43FED8  +
mov eax [esp+1Ch] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+14h] eax +
mov eax [esp+18h] +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp+0Ch] eax +
mov eax edi +
sub eax ebx +
mov [esp+8] eax +
call sub_43FC50  +
test eax eax +
jg loc_43FE97  +
test eax eax +
jnz loc_43FF46  +
cmp ebx edi +
nop   +
jnb loc_43FF46  +
mov dword ptr [ebp+0] 0 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor ebx ebx +
test edi edi +
mov [esp+2Eh] ax +
jz loc_43FF46  +
mov [esp+58h] edi +
lea ebp [esp+2Eh] +
mov edi esi +
mov esi [esp+1Ch] +
jmp loc_43FF1E  +
mov ecx [edi] +
add ebx eax +
add ecx eax +
cmp [esp+58h] ebx +
mov [edi] ecx +
jbe loc_43FF46  +
mov eax [esp+18h] +
mov [esp+14h] esi +
mov [esp+8] esi +
mov [esp+4] ecx +
mov [esp+10h] eax +
mov eax [esp+5Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_43FC50  +
test eax eax +
jg loc_43FF10  +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
xor eax eax +
push ebx  +
sub esp 34h +
mov [esp+2Eh] ax +
mov eax ds:__mb_cur_max +
mov ebx [esp+48h] +
mov esi [eax] +
call sub_4404E0  +
test ebx ebx +
mov edx offset unk_472C24 +
cmovnz edx ebx +
mov [esp+0Ch] edx +
mov [esp+14h] esi +
mov [esp+10h] eax +
mov eax [esp+44h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
lea eax [esp+2Eh] +
mov [esp] eax +
call sub_43FC50  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+1Ch+var_1C] eax +
call malloc  +
mov [esp+1Ch+var_1C] edi +
mov esi eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+1Ch+var_1C] eax +
call malloc  +
movzx ecx byte ptr [ebp+0] +
test cl cl +
jz loc_4401E2  +
xor ebx ebx +
xor edx edx +
lea esi [esi+0] +
add edx 1 +
mov [esi+ebx*2] cx +
movzx ecx byte ptr [ebp+edx+0] +
mov ebx edx +
test cl cl +
jnz loc_440170  +
add edx edx +
xor ebx ebx +
mov [esi+edx] bx +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_4401E6  +
xor ebx ebx +
xor edx edx +
add edx 1 +
mov [eax+ebx*2] cx +
movzx ecx byte ptr [edi+edx] +
mov ebx edx +
test cl cl +
jnz loc_440195  +
add edx edx +
mov edi [esp+1Ch+var_10] +
xor ecx ecx +
mov [eax+edx] cx +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] eax +
call sub_43FFC0  +
mov [esp+1Ch+var_1C] esi +
call free  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
xor edx edx +
jmp loc_440184  +
xor edx edx +
jmp loc_4401A8  +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_440218  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_44020B  +
jmp loc_440218  +
cmp byte ptr [edx] 0 +
jz loc_440216  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_440206  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_472C30 +
retn   +
***
jmp ds:__setusermatherr  +
***
mov eax ds:dword_472C34 +
mov eax [eax] +
retn   +
***
sub esp 1Ch +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 2 +
call setlocale  +
mov [esp+1Ch+var_18] 2Eh +
mov [esp+1Ch+var_1C] eax +
call strchr  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44045A  +
add edx 1 +
mov [esp+1Ch+var_1C] edx +
call atoi  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov [esp+18h+var_18] offset aMsvcrt_dll +
call ds:GetModuleHandleW  +
sub esp 4 +
test eax eax +
mov ebx eax +
jz loc_4404C5  +
mov esi ds:GetProcAddress +
mov [esp+18h+var_14] offset a___lc_codepage +
mov [esp+18h+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jz loc_4404A5  +
mov off_442050 eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
mov [esp+18h+var_14] offset a__lc_codepage +
mov [esp+18h+var_18] ebx +
call esi  +
mov edx eax +
sub esp 8 +
test edx edx +
mov ds:dword_472C34 eax +
mov eax offset loc_440410 +
jnz loc_440498  +
mov eax offset sub_440420 +
mov off_442050 eax +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
***
mov eax off_442050 +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
and esp 0FFFFFFF0h +
sub esp 60h +
call sub_43F160  +
mov [esp+6Ch+var_68] offset unk_44640B +
mov [esp+6Ch+var_6C] 2 +
call setlocale  +
lea eax [ebp+arg_4] +
mov [esp+6Ch+var_68] eax +
lea eax [ebp+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_439170  +
mov ebx [ebp+arg_0] +
mov esi [ebp+arg_4] +
cmp ebx 1 +
jle loc_44067E  +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_60] offset off_4414C0 +
mov [esp+6Ch+var_64] offset aAdhinrSvwacdeg +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] ebx +
call sub_439490  +
cmp eax 0FFFFFFFFh +
jz loc_440962  +
cmp eax 68h +
jz loc_440947  +
lea esi [esi+0] +
jg loc_4405F4  +
cmp eax 52h +
jz loc_440938  +
nop   +
lea esi [esi+0] +
jle loc_440648  +
cmp eax 61h +
jz loc_4408DF  +
nop   +
jle loc_4406C7  +
cmp eax 64h +
jz loc_4408D3  +
nop   +
jle loc_4407FC  +
cmp eax 65h +
jz loc_4407A3  +
cmp eax 67h +
jnz loc_44066E  +
add ds:dword_471D24 1 +
jmp loc_440566  +
cmp eax 76h +
jz loc_4408C1  +
jle loc_440690  +
cmp eax 200h +
jz loc_440844  +
nop   +
jle loc_4406F0  +
cmp eax 202h +
jz loc_44081D  +
jl loc_440811  +
cmp eax 203h +
jz loc_4407BD  +
cmp eax 204h +
jnz loc_44066E  +
mov ds:dword_4720E0 1 +
jmp loc_440566  +
cmp eax 44h +
jz loc_44087E  +
jg loc_440712  +
cmp eax 3Fh +
jz loc_44067E  +
cmp eax 41h +
nop   +
jz loc_440788  +
test eax eax +
jz loc_440566  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset aInvalidOptionC +
call sub_436A70  +
mov eax ds:_iob +
add eax 40h +
call sub_405500  +
nop   +
lea esi [esi+0] +
cmp eax 72h +
jz loc_440896  +
jg loc_440736  +
cmp eax 6Eh +
jz loc_44088A  +
cmp eax 70h +
nop   +
lea esi [esi+0] +
jz loc_440794  +
cmp eax 6Ch +
jnz loc_44066E  +
add ds:dword_471D1C 1 +
jmp loc_440566  +
cmp eax 56h +
jz loc_4408A2  +
cmp eax 57h +
jz loc_4407E4  +
cmp eax 53h +
jnz loc_44066E  +
add ds:dword_471D28 1 +
jmp loc_440566  +
cmp eax 78h +
jz loc_44086F  +
jl loc_44075D  +
cmp eax 7Ah +
nop   +
jnz loc_44066E  +
add ds:dword_471CEC 1 +
jmp loc_440566  +
cmp eax 49h +
jz loc_440751  +
cmp eax 4Eh +
jz loc_4408AE  +
cmp eax 48h +
jnz loc_44066E  +
mov eax ds:_iob +
add eax 20h +
call sub_405500  +
cmp eax 74h +
jz loc_4408AE  +
jg loc_4407F0  +
add ds:dword_471D34 1 +
jmp loc_440566  +
add ds:dword_471D04 1 +
jmp loc_440566  +
mov eax ds:dword_472864 +
add ds:dword_471D0C 1 +
test eax eax +
jz loc_440CDF  +
mov [esp+6Ch+var_6C] eax +
mov ds:dword_471D00 0 +
call sub_436870  +
jmp loc_440566  +
add ds:dword_471CFC 1 +
jmp loc_440566  +
mov eax 8 +
call sub_405450  +
jmp loc_440566  +
add ds:dword_471D10 1 +
add ds:dword_471D28 1 +
add ds:dword_471D1C 1 +
jmp loc_440566  +
lea eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] eax +
mov eax ds:dword_472864 +
mov [esp+6Ch+var_64] 0 +
mov [esp+6Ch+var_6C] eax +
call strtoul  +
mov ds:dword_472C7C eax +
jmp loc_440566  +
add ds:dword_472C54 1 +
jmp loc_440566  +
add ds:dword_471D18 1 +
jmp loc_440566  +
cmp eax 63h +
jnz loc_44066E  +
add ds:dword_471CF4 1 +
jmp loc_440566  +
add ds:dword_471D30 1 +
jmp loc_440566  +
lea eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] eax +
mov eax ds:dword_472864 +
mov [esp+6Ch+var_64] 0 +
mov [esp+6Ch+var_6C] eax +
call strtoul  +
mov dword_442000 eax +
jmp loc_440566  +
mov eax ds:dword_472864 +
add ds:dword_471D0C 1 +
test eax eax +
jz loc_440953  +
mov [esp+6Ch+var_6C] eax +
mov ds:dword_471D00 0 +
call sub_4367B0  +
jmp loc_440566  +
mov eax 1 +
call sub_405450  +
jmp loc_440566  +
add ds:dword_471D14 1 +
jmp loc_440566  +
add ds:dword_471CF8 1 +
jmp loc_440566  +
add ds:dword_471D2C 1 +
jmp loc_440566  +
add ds:dword_471D08 1 +
jmp loc_440566  +
add ds:dword_471D28 1 +
add ds:dword_471D20 1 +
jmp loc_440566  +
mov eax off_4416E0 +
mov [esp+6Ch+var_6C] eax +
call sub_424B50  +
jmp loc_440566  +
add ds:dword_471D38 1 +
jmp loc_440566  +
add ds:dword_471D34 1 +
add ds:dword_471D2C 1 +
add ds:dword_471D18 1 +
add ds:dword_471D38 1 +
add ds:dword_471D10 1 +
add ds:dword_471D28 1 +
add ds:dword_471D24 1 +
add ds:dword_471D1C 1 +
add ds:dword_471D08 1 +
add ds:dword_471D04 1 +
add ds:dword_471CFC 1 +
add ds:dword_471CF8 1 +
jmp loc_440566  +
mov eax 10h +
call sub_405450  +
jmp loc_440566  +
add ds:dword_471D10 1 +
jmp loc_440566  +
mov ds:dword_471D00 1 +
jmp loc_440566  +
cmp ds:dword_471D38 0 +
jnz loc_4409FE  +
cmp ds:dword_471D34 0 +
jnz loc_4409FE  +
cmp ds:dword_471D2C 0 +
jnz loc_4409FE  +
cmp ds:dword_471D18 0 +
jnz loc_4409FE  +
cmp ds:dword_471D28 0 +
jnz loc_4409FE  +
cmp ds:dword_471D1C 0 +
jnz loc_4409FE  +
cmp ds:dword_471D10 0 +
jnz loc_4409FE  +
cmp ds:dword_471D0C 0 +
jnz loc_4409FE  +
cmp ds:dword_471D08 0 +
jnz loc_4409FE  +
cmp ds:dword_471D04 0 +
jnz loc_4409FE  +
cmp ds:dword_471D00 0 +
jnz loc_4409FE  +
cmp ds:dword_471CFC 0 +
jnz loc_4409FE  +
cmp ds:dword_471CF8 0 +
jnz loc_4409FE  +
cmp ds:dword_471D24 0 +
jnz loc_4409FE  +
cmp ds:dword_471CF4 0 +
jnz loc_4409FE  +
cmp ds:dword_471D30 0 +
jz loc_44067E  +
mov ebx ds:dword_471CCC +
test ebx ebx +
jnz loc_440C87  +
mov edx [ebp+arg_0] +
mov eax dword_442028 +
lea ecx [edx-1] +
cmp ecx eax +
jle loc_440C25  +
xor esi esi +
cmp edx eax +
mov ds:dword_471D3C 1 +
jle loc_440B88  +
xor esi esi +
jmp loc_440A5C  +
mov [esp+6Ch+var_68] ebx +
mov [esp+6Ch+var_6C] offset aSIsNotAnOrdina +
call sub_436A70  +
mov eax 1 +
or esi eax +
mov eax dword_442028 +
cmp eax [ebp+arg_0] +
jge loc_440B88  +
lea edx [eax+1] +
mov dword_442028 edx +
mov edx [ebp+arg_4] +
mov ebx [edx+eax*4] +
lea eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] ebx +
call ds:_stati64  +
test eax eax +
js loc_440BB4  +
movzx eax [esp+6Ch+var_36] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_440A37  +
mov [esp+6Ch+var_68] offset aRb_0 +
mov [esp+6Ch+var_6C] ebx +
call fopen  +
test eax eax +
mov edi eax +
jz loc_440C6D  +
mov [esp+6Ch+var_60] eax +
lea eax [esp+6Ch+var_44] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 8 +
mov [esp+6Ch+var_6C] eax +
call fread  +
sub eax 1 +
jnz loc_440BF1  +
mov eax [esp+6Ch+var_24] +
mov edx [esp+6Ch+var_20] +
mov [esp+6Ch+var_64] 8 +
mov [esp+6Ch+var_68] offset aArch +
mov ds:dword_4720A0 eax +
lea eax [esp+6Ch+var_44] +
mov [esp+6Ch+var_6C] eax +
mov ds:dword_4720A4 edx +
call memcmp  +
test eax eax +
jz loc_440C13  +
lea eax [esp+6Ch+var_44] +
mov [esp+6Ch+var_64] 8 +
mov [esp+6Ch+var_68] offset aThin +
mov [esp+6Ch+var_6C] eax +
call memcmp  +
test eax eax +
jz loc_440C3E  +
cmp ds:dword_471CF4 0 +
jnz loc_440CCA  +
mov [esp+6Ch+var_6C] edi +
call rewind  +
mov eax ebx +
mov edx edi +
mov ds:dword_4720AC 0 +
mov ds:dword_4720A8 0 +
call sub_421210  +
mov ebx eax +
mov [esp+6Ch+var_6C] edi +
call fclose  +
mov eax ebx +
mov ds:dword_4720A0 0 +
mov ds:dword_4720A4 0 +
jmp loc_440A4C  +
mov eax ds:dword_471CD0 +
test eax eax +
jz loc_440B99  +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax ds:dword_471CD8 +
test eax eax +
jz loc_440BAA  +
mov [esp+6Ch+var_6C] eax +
call free  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call ds:__imp__errno  +
cmp dword ptr [eax] 2 +
jz loc_440C53  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+6Ch+var_6C] eax +
call strerror  +
mov [esp+6Ch+var_68] ebx +
mov [esp+6Ch+var_6C] offset aCouldNotLoca_0 +
mov [esp+6Ch+var_64] eax +
call sub_436A70  +
mov eax 1 +
jmp loc_440A4C  +
mov [esp+6Ch+var_68] ebx +
mov [esp+6Ch+var_6C] offset aSFailedToRea_2 +
call sub_436A70  +
mov [esp+6Ch+var_6C] edi +
call fclose  +
mov eax 1 +
jmp loc_440A4C  +
mov eax ebx +
xor ecx ecx +
mov edx edi +
call sub_424400  +
mov ebx eax +
jmp loc_440B65  +
cmp edx eax +
jg loc_440A33  +
mov [esp+6Ch+var_6C] offset aNothingToDo_ +
call sub_437070  +
jmp loc_44067E  +
mov eax ebx +
mov ecx 1 +
mov edx edi +
call sub_424400  +
mov ebx eax +
jmp loc_440B65  +
mov [esp+6Ch+var_68] ebx +
mov [esp+6Ch+var_6C] offset aSNoSuchFile +
call sub_436A70  +
mov eax 1 +
jmp loc_440A4C  +
mov [esp+6Ch+var_68] ebx +
mov [esp+6Ch+var_6C] offset aInputFileSIsNo +
call sub_436A70  +
mov eax 1 +
jmp loc_440A4C  +
mov [esp+6Ch+var_6C] ebx +
call malloc  +
test eax eax +
mov ds:dword_471CD8 eax +
jz loc_440CB9  +
mov edx ds:dword_471CD0 +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_6C] eax +
mov [esp+6Ch+var_68] edx +
call memcpy  +
mov ds:dword_471CD4 ebx +
jmp loc_440A0C  +
mov [esp+6Ch+var_6C] offset aOutOfMemoryA_0 +
call sub_436A70  +
jmp loc_440A0C  +
mov [esp+6Ch+var_68] ebx +
mov [esp+6Ch+var_6C] offset aFileSIsNotAnAr +
call sub_436A70  +
jmp loc_440B3E  +
mov ds:dword_471D00 1 +
call sub_436990  +
jmp loc_440566  +
***
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_43E920  +
leave   +
retn   +
***
