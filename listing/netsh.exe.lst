mov edi edi +
push ebp  +
mov ebp esp +
mov eax 843Ch +
call sub_1801BEC  +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi 3FFCh +
xor ebx ebx +
push edi  +
lea eax [ebp+var_8410] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_8414] ebx +
call memset  +
push edi  +
lea eax [ebp+var_4410] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_4414] ebx +
call memset  +
add esp 18h +
push ebx  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push ebx  +
mov [ebp+var_8438] ebx +
mov [ebp+var_8430] ebx +
mov [ebp+var_8434] ebx +
mov [ebp+var_842C] ebx +
mov [ebp+var_8428] ebx +
mov [ebp+nSize] ebx +
mov [ebp+dwMode] ebx +
call ds:HeapSetInformation  +
push ebx  +
call ds:GetModuleHandleW  +
mov hInstance eax +
cmp eax ebx +
jz loc_1804EDE  +
push offset aNetsh  +
push offset aS  +
push 2000h  +
push offset word_1813EC0  +
call sub_1801843  +
add esp 10h +
call sub_1803AFB  +
cmp eax ebx +
jnz loc_1804EF7  +
push offset aNetsh_exe  +
push offset dword_1803AF4  +
call sub_1801C9C  +
call sub_1803E1A  +
push edi  +
push offset HandlerRoutine  +
call ds:SetConsoleCtrlHandler  +
call sub_1802293  +
mov [ebp+var_8418] edi +
cmp [ebp+arg_0] edi +
jbe loc_180147C  +
mov [ebp+var_841C] 2 +
mov edi [ebp+var_8418] +
shl edi 2 +
lea ebx [edi+esi] +
push offset a?  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18050E1  +
push offset asc_1801550  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18050E1  +
push offset word_1801FCC  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18050E1  +
push offset a?_0  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18050E1  +
push offset aV  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804EFE  +
push offset aA  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804F0D  +
push offset aC  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804F2B  +
push offset aF  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804F54  +
push offset aR  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804F7C  +
push offset aU  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804FAC  +
push offset aP  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804FDC  +
cmp [ebp+var_8438] 0 +
jnz loc_18050A3  +
mov eax [ebp+arg_0] +
cmp [ebp+var_8418] eax +
jnb loc_180146F  +
mov edi 2000h +
cmp [ebp+var_8414] 0 +
jz loc_180142A  +
push offset word_180200C  +
push edi  +
lea eax [ebp+var_8414] +
push eax  +
call sub_180270E  +
mov eax [ebp+var_8418] +
mov ebx [esi+eax*4] +
cmp word ptr [ebx] 0 +
jz loc_18050B7  +
push 20h  +
push ebx  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_18050B7  +
push ebx  +
push edi  +
lea eax [ebp+var_8414] +
push eax  +
call sub_180270E  +
inc [ebp+var_8418]  +
mov eax [ebp+var_8418] +
cmp eax [ebp+arg_0] +
jb loc_180140E  +
cmp [ebp+var_8428] 0 +
jnz loc_1805036  +
xor ebx ebx +
cmp dword_1817EC0 ebx +
jnz loc_1801498  +
push ebx  +
push ebx  +
push ebx  +
call sub_18039D5  +
mov esi eax +
cmp esi ebx +
jl loc_1805155  +
cmp [ebp+var_8434] ebx +
jnz loc_18051A4  +
xor edi edi +
inc edi  +
cmp [ebp+var_4414] bx +
jnz loc_18051BE  +
cmp [ebp+var_8414] bx +
jz loc_18051EC  +
lea eax [ebp+var_8430] +
push eax  +
lea eax [ebp+var_8414] +
push eax  +
mov dword_180B040 ebx +
call ProcessCommand  +
mov esi eax +
call sub_180227A  +
call sub_18028A9  +
call sub_180158B  +
call sub_1801728  +
mov eax dword_1817EC0 +
test eax eax +
jnz loc_1805221  +
xor eax eax +
test esi esi +
setnz al  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn 8  +
***
cmp ecx dword_180B044 +
jnz loc_1809589  +
retn   +
***
mov eax dword_180B058 +
call sub_1803B93  +
xor ebx ebx +
mov [ebp-4] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp-1Ch] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:__imp_InterlockedCompareExchange  +
cmp eax ebx +
jnz loc_1805438  +
xor esi esi +
inc esi  +
mov eax dword_180B08C +
cmp eax esi +
jz loc_1805457  +
mov eax dword_180B08C +
test eax eax +
jnz loc_18016C6  +
mov dword_180B08C esi +
push offset dword_18016E8  +
push offset dword_18016DC  +
call sub_1803BE5  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1805464  +
mov eax dword_180B08C +
cmp eax esi +
jnz loc_180167B  +
push offset dword_18016D8  +
push offset dword_18016D0  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_180B08C 2 +
cmp [ebp-1Ch] ebx +
jnz loc_1801688  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1817F14 ebx +
jnz loc_1805472  +
push dword_1817EF4  +
push dword_1817EF8  +
push dword_1817EF0  +
call sub_1801711  +
add esp 0Ch +
mov dword_1817EC8 eax +
cmp dword_1817EC4 ebx +
jnz loc_18054C4  +
push eax  +
call ds:exit  +
mov dword_1817F20 esi +
jmp loc_1801657  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_18011E5  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
mov edi ds:HeapFree +
mov eax [ebp+var_4] +
mov esi dword_180BB60[eax] +
test esi esi +
jz $LN31  +
cmp [esi] esi +
jnz loc_1804036  +
push esi  +
push 0  +
call ebx  +
push eax  +
call edi  +
add [ebp+var_4] 4 +
cmp [ebp+var_4] 34Ch +
jb loc_1801741  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov dword_180B078 esi +
test esi esi +
jz loc_1803D8B  +
mov eax lpMem +
mov edi esi +
imul edi edi +
push dword ptr [edi+eax]  +
call ds:LoadLibraryW  +
mov ebx eax +
test ebx ebx +
jz loc_18042FB  +
push offset ProcName  +
push ebx  +
call ds:__imp_GetProcAddress  +
mov ecx eax +
mov eax lpMem +
imul esi esi +
test ecx ecx +
jz loc_180431D  +
mov [esi+eax+0Ch] ebx +
xor eax eax +
lea edi [ebp+var_10] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
push 5000h  +
call ecx  +
test eax eax +
jnz loc_180434B  +
mov eax lpMem +
mov dword ptr [esi+eax+8] 1 +
mov eax [ebp+var_8] +
mov ecx lpMem +
mov [esi+ecx+10h] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_180188F  +
cmp ecx 7FFFFFFFh +
ja loc_180188F  +
test eax eax +
jl loc_180188D  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1801896  +
cmp eax esi +
ja loc_1801896  +
jz loc_1805427  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
mov eax 80070057h +
jmp loc_1801859  +
mov ebx 8007007Ah +
jmp loc_1805427  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_180B054 +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
test eax eax +
jbe loc_18018E8  +
mov edx dword_180B080 +
add edx 8 +
mov esi [ebp+arg_0] +
push 4  +
pop ecx  +
mov edi edx +
xor ebx ebx +
cmps   +
jz loc_18018F4  +
inc [ebp+var_4]  +
add edx 48h +
cmp [ebp+var_4] eax +
jb loc_18018CF  +
mov eax 490h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor eax eax +
jmp loc_18018ED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
lea eax [ebp+var_4] +
push eax  +
add ebx 8 +
push ebx  +
call sub_18018B0  +
test eax eax +
jz loc_1803D79  +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1801BD3  +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi edx +
mov esi ebx +
xor eax eax +
cmps   +
jz loc_1803D54  +
push [ebp+arg_4]  +
push edx  +
call sub_1801ED2  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov edx offset dword_1801BDC +
jmp loc_1801BB0  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jnb loc_1801C0D  +
sub eax 1000h +
test [eax] eax +
jmp loc_1801C00  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
***
mov eax [ebp+cbMaxValueLen] +
inc eax  +
mov [ebp+cbData] eax +
mov eax [ebp+cbMaxValueNameLen] +
inc eax  +
mov [ebp+cbValueName] eax +
lea eax [ebp+cbData] +
push eax  +
push edi  +
push ebx  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
push [ebp+lpMem]  +
push [ebp+dwIndex]  +
push [ebp+hKey]  +
call ds:RegEnumValueW  +
cmp eax ebx +
jnz loc_1803ED0  +
push edi  +
push [ebp+lpMem]  +
call sub_1801C9C  +
inc [ebp+dwIndex]  +
mov eax [ebp+dwIndex] +
cmp eax [ebp+cValues] +
jb loc_1801C17  +
pop edi  +
cmp [ebp+hKey] ebx +
jz loc_1801C6A  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
cmp [ebp+lpMem] ebx +
jz loc_1801C7C  +
push [ebp+lpMem]  +
push ebx  +
call esi  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_14] ebx +
jz loc_1801C8E  +
push [ebp+var_14]  +
push ebx  +
call esi  +
push eax  +
call ds:HeapFree  +
call sub_180256B  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1801CA9  +
sub eax edx +
sar eax 1 +
inc eax  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1801CC1  +
push ebx  +
push esi  +
mov esi ds:_wcsicmp +
sub eax ecx +
push edi  +
sar eax 1 +
push offset aIpxmontr_dll  +
push [ebp+arg_4]  +
inc eax  +
mov [ebp+var_8] eax +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1801E1B  +
push offset aIpxpromn_dll  +
push [ebp+arg_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1801E1B  +
mov eax dword_180B058 +
cmp eax 0CCCCCCCh +
jnb loc_1801E14  +
mov ebx ds:GetProcessHeap +
inc eax  +
imul eax eax +
push eax  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1801E14  +
mov eax dword_180B058 +
imul eax eax +
push eax  +
push lpMem  +
push esi  +
call memcpy  +
mov edi dword_180B058 +
imul edi edi +
xor eax eax +
add edi esi +
stos   +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+var_4] +
add esp 0Ch +
add eax eax +
push eax  +
push 0  +
call ebx  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov ecx dword_180B058 +
imul ecx ecx +
mov [ecx+esi+4] eax +
mov eax dword_180B058 +
imul eax eax +
mov eax [eax+esi+4] +
test eax eax +
jz loc_1801E14  +
push [ebp+arg_0]  +
push [ebp+var_4]  +
push eax  +
call sub_1801E5F  +
mov eax [ebp+var_8] +
add eax eax +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
mov ecx dword_180B058 +
imul ecx ecx +
mov [ecx+esi] eax +
mov eax dword_180B058 +
imul eax eax +
mov eax [eax+esi] +
test eax eax +
jz loc_1801E14  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push eax  +
call sub_1801E5F  +
mov eax dword_180B058 +
imul eax eax +
push dword ptr [esi+eax]  +
call ds:_wcsupr  +
inc dword_180B058  +
pop ecx  +
push lpMem  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax dword_180B058 +
dec eax  +
push eax  +
mov lpMem esi +
call sub_1801795  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 8  +
jmp loc_180439C  +
push 32h  +
jmp loc_180439C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1801EBD  +
cmp ecx 7FFFFFFFh +
ja loc_1801EBD  +
test eax eax +
jl loc_1801EB9  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1801EC4  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1801EAB  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_1801EAB  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1801E93  +
pop edi  +
test esi esi +
jz loc_1801EC4  +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax 80070057h +
jmp loc_1801E75  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
jmp loc_1801EB0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_180B054 +
push ebx  +
cmp eax 38E38E3h +
jnb loc_1801FBB  +
inc eax  +
imul eax eax +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1801FBB  +
mov eax dword_180B054 +
imul eax eax +
push esi  +
push edi  +
push eax  +
push dword_180B080  +
push ebx  +
call memcpy  +
mov edi dword_180B054 +
mov esi [ebp+arg_4] +
imul edi edi +
add esp 0Ch +
add edi ebx +
push 8  +
pop ecx  +
movs   +
mov eax dword_180B054 +
mov esi [ebp+arg_0] +
imul eax eax +
lea edi [eax+ebx+20h] +
movs   +
movs   +
movs   +
movs   +
mov eax dword_180B054 +
mov ecx dword_180B078 +
imul eax eax +
mov [eax+ebx+30h] ecx +
mov ecx dword_180B054 +
imul ecx ecx +
xor eax eax +
mov [ecx+ebx+34h] eax +
mov ecx dword_180B054 +
imul ecx ecx +
mov dword ptr [ecx+ebx+40h] 48h +
mov ecx dword_180B054 +
imul ecx ecx +
mov [ecx+ebx+38h] eax +
mov ecx dword_180B054 +
imul ecx ecx +
mov [ecx+ebx+3Ch] eax +
push dword_180B080  +
inc dword_180B054  +
push eax  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov dword_180B080 ebx +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push 8  +
pop eax  +
jmp loc_1801FB6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
call sub_18018B0  +
test eax eax +
jnz loc_1802137  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
imul ecx ecx +
add ecx dword_180B080 +
mov [edx] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
imul eax eax +
add eax lpMem +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jnz loc_1804175  +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
push 48h  +
lea eax [ebp-4Ch] +
push 0  +
push eax  +
call memset  +
mov eax dword_1817ED4 +
mov dword ptr [ebp-44h] offset aNetsh +
mov esi offset dword_1801BDC +
lea edi [ebp-40h] +
movs   +
movs   +
movs   +
movs   +
and dword ptr [ebp-30h] 0 +
mov [ebp-28h] eax +
mov eax dword_1817ED8 +
mov [ebp-20h] eax +
add esp 0Ch +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-4Ch] 1 +
mov dword ptr [ebp-24h] offset off_180B200 +
mov dword ptr [ebp-1Ch] offset off_180B1A0 +
call RegisterContext  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1801579  +
leave   +
retn 8  +
***
inc ebx  +
inc ebx  +
jmp loc_1802680  +
push dword ptr [edi+8]  +
mov ebx ds:GetProcessHeap +
push ecx  +
call ebx  +
mov esi ds:HeapFree +
push eax  +
call esi  +
mov eax [edi+4] +
mov ecx [edi] +
mov [eax] ecx +
mov eax [edi] +
mov ecx [edi+4] +
push edi  +
push 0  +
mov [eax+4] ecx +
call ebx  +
push eax  +
call esi  +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:HeapFree +
xor ebx ebx +
push edi  +
mov edi ds:GetProcessHeap +
cmp [ebp+arg_0] ebx +
jbe loc_1802264  +
mov eax [ebp+lpMem] +
push dword ptr [eax+ebx*4]  +
push 0  +
call edi  +
push eax  +
call esi  +
inc ebx  +
cmp ebx [ebp+arg_0] +
jb loc_1802251  +
push [ebp+lpMem]  +
push 0  +
call edi  +
push eax  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax dword_1817EDC +
push esi  +
xor esi esi +
test eax eax +
jnz loc_1804498  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_18022C2  +
push offset aSetthreaduilan  +
push esi  +
call ds:__imp_GetProcAddress  +
test eax eax +
jz loc_18022BB  +
push 0  +
call eax  +
push esi  +
call ds:__imp_FreeLibrary  +
pop esi  +
retn   +
***
pop edi  +
cmp [ebp+arg_4] 8 +
mov eax [ebp+arg_0] +
pop esi  +
mov [eax] ebx +
pop ebx  +
jz loc_1804889  +
mov eax [ebp+arg_4] +
leave   +
retn 8  +
***
mov edi [eax] +
push ebx  +
push eax  +
call sub_180265D  +
jmp loc_1804A52  +
***
mov [ebp+var_4] eax +
mov esi [ebx+28h] +
add esi [ebp+var_4] +
mov ecx [esi] +
test ecx ecx +
jz loc_18040FA  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_C] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_180233F  +
sub eax [ebp+var_C] +
sar eax 1 +
jz loc_18040FA  +
push 20h  +
push ecx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18040EA  +
jmp loc_18040FA  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add [ebp+var_4] 18h +
cmp eax [ebx+24h] +
jb loc_1802327  +
jmp loc_1804114  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_18040D4  +
mov edx [ebx+8] +
push esi  +
push edi  +
test edx edx +
jz loc_1802518  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_18023A7  +
sub eax esi +
sar eax 1 +
jz loc_1802518  +
mov edi ds:wcschr +
push 20h  +
push edx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1802518  +
push 3Dh  +
push dword ptr [ebx+8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18040DC  +
jmp loc_1802518  +
mov [ebp+var_C] eax +
mov esi [ebx+30h] +
add esi [ebp+var_C] +
mov ecx [esi] +
test ecx ecx +
jz loc_1804133  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_8] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1802401  +
sub eax [ebp+var_8] +
sar eax 1 +
jz loc_1804133  +
push 20h  +
push ecx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804127  +
jmp loc_1804133  +
mov [ebp+var_4] eax +
jmp loc_180247B  +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1802430  +
sub eax [ebp+var_10] +
sar eax 1 +
jz loc_180415B  +
push 20h  +
push ecx  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_180415B  +
push 3Dh  +
push dword ptr [edi]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_180415B  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add [ebp+var_4] 18h +
cmp eax [esi+8] +
jnb loc_1802495  +
mov edi [esi+10h] +
add edi [ebp+var_4] +
mov ecx [edi] +
test ecx ecx +
jz loc_180415B  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_10] edx +
jmp loc_1802430  +
mov edi ds:wcschr +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add [ebp+var_C] 18h +
cmp eax [ebx+2Ch] +
jb loc_18023E9  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebx+0Ch] +
push eax  +
call sub_18018B0  +
test eax eax +
jnz loc_18024F8  +
mov eax [ebp+arg_0] +
mov ecx dword_180B080 +
imul eax eax +
lea eax [eax+ecx+20h] +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
call sub_1802111  +
test eax eax +
jnz loc_18024F8  +
mov esi [ebp+var_10] +
lea eax [ebp+arg_0] +
push eax  +
push dword ptr [ebx+8]  +
push esi  +
call sub_1802AA5  +
test eax eax +
jz loc_18024FF  +
push ebx  +
push esi  +
call sub_18027A6  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov eax [esi+40h] +
push eax  +
imul eax [ebp+arg_0] +
add eax [esi+3Ch] +
push ebx  +
push eax  +
call memcpy  +
add esp 0Ch +
xor eax eax +
jmp loc_18024F8  +
push 57h  +
pop eax  +
jmp loc_18024F8  +
***
lea ecx [ebp+var_4] +
push ecx  +
add eax 20h +
push eax  +
call sub_18018B0  +
test eax eax +
jnz loc_1802598  +
mov eax [ebp+var_4] +
mov ecx dword_180B080 +
imul eax eax +
cmp dword ptr [eax+ecx+34h] 0 +
jz loc_1802598  +
mov eax edi +
imul eax eax +
mov [eax+ecx+34h] ebx +
mov ecx dword_180B080 +
add eax ecx +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_180257F  +
push 5000h  +
add eax 20h +
push eax  +
call ecx  +
jmp loc_180257F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_180B080 +
push ebx  +
xor ebx ebx +
push esi  +
inc ebx  +
push edi  +
mov [eax+34h] ebx +
xor esi esi +
xor edi edi +
cmp dword_180B054 esi +
jbe loc_18025A4  +
mov eax dword_180B080 +
add eax esi +
cmp dword ptr [eax+34h] 0 +
jz loc_180251D  +
inc edi  +
add esi 48h +
cmp edi dword_180B054 +
jb loc_180258B  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
lea eax [ebp+var_10] +
push eax  +
push ebx  +
call sub_18035F9  +
jmp loc_18025D1  +
xor eax eax +
mov [ebx] ax +
jmp loc_18026B3  +
add [ebp+var_4] 2 +
jmp loc_1802638  +
mov [ebp+var_8] 8 +
jmp loc_1802227  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_180442A  +
mov ebx edi +
sub ebx [ebp+var_4] +
sar ebx 1 +
inc ebx  +
lea eax [ebx+ebx] +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [esi+8] eax +
test eax eax +
jz loc_18025C5  +
mov ecx [ebp+var_4] +
mov edx offset a?_0 +
mov si [ecx] +
cmp si [edx] +
jz loc_1804446  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_18025BF  +
mov ecx [ebp+var_4] +
mov edx offset a? +
mov si [ecx] +
cmp si [edx] +
jz loc_180446F  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_18025BF  +
push [ebp+var_4]  +
push ebx  +
push eax  +
call wcscpy_s  +
mov ax word ptr [ebp+var_14] +
add esp 0Ch +
mov [edi] ax +
mov [ebp+var_4] edi +
mov ebx edi +
mov edi [ebp+arg_0] +
xor ecx ecx +
jmp loc_1802683  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+8] +
xor ecx ecx +
mov [ebp+var_8] ecx +
cmp eax ecx +
jz loc_18043C6  +
push ebx  +
push esi  +
mov ebx eax +
mov [ebp+var_C] edi +
mov [ebp+var_4] ebx +
cmp [ebx] cx +
jz loc_18026A9  +
movzx eax word ptr [ebx] +
cmp ax 23h +
jz loc_18025B5  +
cmp ax 20h +
jz loc_18021F4  +
cmp ax 9 +
jz loc_18021F4  +
cmp word ptr [ebx] 23h +
jz loc_18025B5  +
movzx eax word ptr [ebx] +
cmp ax cx +
jz loc_18021FB  +
lea edi [ebx+2] +
cmp ax 22h +
jz loc_18043CD  +
cmp ax 3Dh +
jz loc_18026EA  +
movzx eax word ptr [edi] +
cmp ax cx +
jz loc_18026EA  +
cmp ax 20h +
jz loc_18026EA  +
cmp ax 3Dh +
jz loc_18026EA  +
inc edi  +
inc edi  +
jmp loc_18026D2  +
push 0Ch  +
push ecx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_18043F9  +
jmp loc_18025C5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_180408E  +
jmp loc_180408A  +
***
test eax eax +
jl loc_1802740  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_180274B  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1802797  +
cmp [ebp+arg_4] eax +
jz loc_180277C  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_180277C  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_180275F  +
test esi esi +
jz loc_1802797  +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1804083  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
jmp loc_1802780  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
or eax 0FFFFFFFFh +
xor edx edx +
div  dword ptr [esi+40h] +
mov ecx [esi+38h] +
push edi  +
cmp ecx eax +
jnb loc_180289F  +
xor edi edi +
test ecx ecx +
jbe loc_18027EE  +
mov eax [esi+40h] +
imul eax edi +
add eax [esi+3Ch] +
push dword ptr [eax+8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jl loc_18027EE  +
inc edi  +
cmp edi [esi+38h] +
jb loc_18027CA  +
mov eax [esi+38h] +
cmp eax 0FFFFFFFEh +
ja loc_180289F  +
mov ebx [esi+40h] +
lea ecx [eax+1] +
or eax 0FFFFFFFFh +
xor edx edx +
div  ebx +
cmp ecx eax +
ja loc_180289F  +
imul ecx ebx +
push ecx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_180289F  +
test edi edi +
jbe loc_180283F  +
mov eax [esi+40h] +
imul eax edi +
push eax  +
push dword ptr [esi+3Ch]  +
push ebx  +
call memcpy  +
add esp 0Ch +
mov eax [esi+40h] +
push eax  +
imul eax edi +
push [ebp+arg_4]  +
add eax ebx +
push eax  +
call memcpy  +
mov eax [esi+38h] +
add esp 0Ch +
cmp edi eax +
jb loc_180287C  +
push dword ptr [esi+3Ch]  +
inc dword ptr [esi+38h]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+3Ch] ebx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov ecx [esi+40h] +
sub eax edi +
imul eax ecx +
push eax  +
mov eax ecx +
imul eax edi +
add eax [esi+3Ch] +
inc edi  +
imul edi ecx +
push eax  +
add edi ebx +
push edi  +
call memcpy  +
add esp 0Ch +
jmp loc_180285B  +
push 8  +
pop eax  +
jmp loc_1802875  +
***
mov eax dword_180B054 +
test eax eax +
jbe loc_18028FA  +
push ebx  +
xor ebx ebx +
test eax eax +
jbe loc_18028D6  +
push esi  +
xor esi esi +
mov eax dword_180B080 +
mov eax [esi+eax+1Ch] +
test eax eax +
jnz loc_18028FD  +
inc ebx  +
add esi 48h +
cmp ebx dword_180B054 +
jb loc_18028BC  +
pop esi  +
push dword_180B080  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword_180B054 0 +
and dword_180B080 0 +
pop ebx  +
xor eax eax +
retn   +
push 0  +
call eax  +
jmp loc_18028C9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
push edi  +
xor edi edi +
mov [ebx] edi +
cmp [ebp+arg_0] edi +
jbe loc_1802954  +
push esi  +
test edi edi +
jz loc_180292B  +
push offset word_180200C  +
push ebx  +
call sub_180295F  +
mov eax [ebp+arg_4] +
lea esi [eax+edi*4] +
push 20h  +
push dword ptr [esi]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_18044D2  +
push dword ptr [esi]  +
push ebx  +
call sub_180295F  +
inc edi  +
cmp edi [ebp+arg_0] +
jb loc_180291C  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebx] +
test edi edi +
jz loc_18029CA  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1802975  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_180298B  +
sub eax edx +
sar eax 1 +
lea esi [eax+ecx+1] +
lea eax [esi+esi] +
push eax  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapReAlloc  +
test eax eax +
jz loc_18029D2  +
push [ebp+arg_4]  +
mov [ebx] eax +
push esi  +
push eax  +
call sub_180270E  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
jmp loc_18029D7  +
push 8  +
pop eax  +
jmp loc_18029C3  +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_18029D7  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
lea eax [esi+esi] +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_18029D2  +
xor ecx ecx +
mov [eax] cx +
jmp loc_18029B1  +
***
test si si +
jz loc_1802A20  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_1802A4E  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_1802A46  +
xor ecx ecx +
jmp loc_1802A53  +
mov eax [ebp+arg_4] +
mov edi [eax] +
cmp edi eax +
jz loc_1802A77  +
cmp ebx [ebp+var_C] +
jnb loc_1802A77  +
mov eax [edi+8] +
cmp word ptr [eax] 22h +
jz loc_1804771  +
mov edx offset word_1802108 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jz loc_1802A06  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_1802A8E  +
cmp [ebp+arg_0] 0 +
jnz loc_1802A8E  +
push eax  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
call sub_18038D8  +
inc ebx  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1802A77  +
mov edi [edi] +
cmp edi [ebp+arg_4] +
jnz loc_1802A2D  +
pop esi  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
mov [eax] ebx +
mov eax [ebp+arg_C] +
pop edi  +
mov [eax] ecx +
mov eax [ebp+var_8] +
pop ebx  +
leave   +
retn 14h  +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
setz cl  +
mov [ebp+arg_0] ecx +
test ebx ebx +
jbe loc_1802A5D  +
dec ebx  +
jmp loc_1802A5D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp [esi+38h] edi +
jbe loc_1802AD7  +
mov eax [esi+40h] +
imul eax edi +
add eax [esi+3Ch] +
push dword ptr [eax+8]  +
push [ebp+arg_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1802AE2  +
inc edi  +
cmp edi [esi+38h] +
jb loc_1802AB6  +
mov eax 490h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_8] +
mov [eax] edi +
xor eax eax +
jmp loc_1802ADC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_1802B3A  +
mov edi [ebp+arg_C] +
cmp edi esi +
jz loc_1802B3A  +
cmp [ebp+arg_8] esi +
jbe loc_1802B33  +
push dword ptr [edi+esi*8]  +
push [ebp+arg_4]  +
call MatchToken  +
test eax eax +
jnz loc_1802B24  +
inc esi  +
cmp esi [ebp+arg_8] +
jb loc_1802B0D  +
jmp loc_1802B33  +
mov eax [edi+esi*8+4] +
mov [ebx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax 490h +
jmp loc_1802B2C  +
push 57h  +
pop eax  +
jmp loc_1802B2C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_0] +
xor edx edx +
not ecx  +
mov [ebp+lpMem] edx +
mov [ebp+dwBytes] edx +
test [eax+1Ch] ecx +
jnz loc_18044EF  +
mov ecx [eax+40h] +
cmp ecx edx +
jnz loc_1802C3B  +
mov [ebp+var_8] edx +
mov eax [eax+8] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebx] +
mov edx eax +
mov ecx esi +
push edi  +
mov di [ecx] +
cmp di [edx] +
jnz loc_1802C45  +
test di di +
jz loc_1802BAC  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_1802C45  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_1802B82  +
xor ecx ecx +
test ecx ecx +
jnz loc_18044F9  +
lea eax [ebp+lpMem] +
push eax  +
push ebx  +
push [ebp+arg_4]  +
call sub_1802908  +
cmp [ebp+lpMem] 0 +
mov esi ds:GetProcessHeap +
mov edi offset aNetsh_0 +
jz loc_1802BF7  +
push [ebp+lpMem]  +
push 2000h  +
push edi  +
call sub_1801E5F  +
push [ebp+lpMem]  +
xor eax eax +
push eax  +
mov word_1813DE8 ax +
call esi  +
push eax  +
call ds:HeapFree  +
push edi  +
xor eax eax +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push ebx  +
push dword_1817EC0  +
cmp [ebp+var_8] eax +
jnz loc_1804503  +
push [ebp+arg_0]  +
call GenericMonitor  +
mov [ebp+lpMem] eax +
mov eax [ebp+dwBytes] +
test eax eax +
jnz loc_180450B  +
cmp [ebp+lpMem] 0 +
jnz loc_1804512  +
mov eax [ebp+lpMem] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
mov ecx [ecx] +
mov [ebp+var_8] ecx +
jmp loc_1802B73  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
jmp loc_1802BAE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [esi+0Ch] +
push eax  +
call sub_1802111  +
mov ebx [ebp+var_8] +
lea eax [ebp+var_C] +
push eax  +
push dword ptr [ebx+30h]  +
call sub_1802140  +
mov dword_180B050 esi +
mov dword_180B04C ebx +
mov eax [esi+3Ch] +
xor edi edi +
cmp eax edi +
jnz loc_18041AE  +
cmp [ebp+arg_C] 1 +
jz loc_18041CE  +
cmp dword_1817ED0 edi +
jbe loc_1802CED  +
mov eax [ebp+arg_10] +
not eax  +
mov ebx offset off_180B0C8 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] ebx +
mov ecx [ebp+var_4] +
test [ecx+10h] eax +
jnz loc_1802CD8  +
mov eax ecx +
push dword ptr [eax]  +
mov eax [ebp+arg_8] +
push dword ptr [eax+4]  +
call MatchToken  +
test eax eax +
jnz loc_18041EA  +
add [ebp+var_4] 18h +
inc edi  +
cmp edi dword_1817ED0 +
jnb loc_1802CEA  +
mov eax [ebp+arg_0] +
jmp loc_1802CB9  +
mov ebx [ebp+var_8] +
xor edi edi +
cmp [esi+24h] edi +
jbe loc_1802F37  +
mov edx [ebp+arg_10] +
not edx  +
mov [ebp+arg_0] edx +
mov [ebp+var_4] edi +
mov ecx [ebp+var_4] +
mov eax [esi+28h] +
add eax ecx +
mov ecx [eax+10h] +
test ecx edx +
jz loc_1802D2D  +
test ecx 0FFFFFFDFh +
jz loc_1802D2D  +
add [ebp+var_4] 18h +
inc edi  +
cmp edi [esi+24h] +
jnb loc_1802F37  +
mov edx [ebp+arg_0] +
jmp loc_1802D03  +
push dword ptr [eax]  +
mov eax [ebp+arg_8] +
push dword ptr [eax+4]  +
call MatchToken  +
test eax eax +
jz loc_1802D1A  +
jmp loc_1804236  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1802D86  +
cmp [ebp+arg_4] 0 +
jz loc_1802D86  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1802D5F  +
sub eax edx +
sar eax 1 +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_wcsnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
push 57h  +
pop eax  +
jmp loc_1802D82  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_1803555  +
test eax eax +
jnz locret_1803965  +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+var_4] +
push esi  +
push edi  +
mov edi [ebx+4] +
cmp eax 1 +
jbe loc_1805276  +
dec eax  +
mov [ebp+arg_C] eax +
mov esi [edi+4] +
cmp esi ebx +
jz loc_1802E05  +
mov eax [esi+8] +
mov ecx offset word_1802108 +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1802E12  +
test dx dx +
jz loc_1802DF4  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1802E12  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1802DD2  +
xor eax eax +
test eax eax +
jnz loc_1802E05  +
mov edi esi +
mov eax [edi+4] +
cmp eax ebx +
jz loc_1802E05  +
mov edi eax +
dec [ebp+arg_C]  +
mov edi [edi+4] +
jnz loc_1802DC3  +
jmp loc_1805276  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
jmp loc_1802DF6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_208] 0 +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
mov [ebp+var_210] eax +
mov [ebp+var_214] ebx +
test eax eax +
jz loc_1802F33  +
test ecx ecx +
jz loc_1802F33  +
test ebx ebx +
jz loc_1802F33  +
and dword ptr [ebx] 0 +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1802E72  +
sub eax esi +
sar eax 1 +
lea edx [eax+1] +
mov eax 100h +
cmp edx eax +
ja loc_1802F33  +
push ecx  +
push eax  +
lea eax [ebp+var_204] +
push eax  +
call sub_1801E5F  +
mov esi ds:wcstok +
mov edi offset word_180200C +
lea eax [ebp+var_204] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_20C] eax +
test eax eax +
jz loc_1802F17  +
mov eax [ebp+var_208] +
cmp eax [ebp+arg_4] +
jnb loc_1802F33  +
mov ecx [ebp+var_210] +
mov edx [ecx+eax*4] +
mov ecx edx +
lea eax [ecx+2] +
mov bx [ecx] +
inc ecx  +
inc ecx  +
test bx bx +
jnz loc_1802ED8  +
sub ecx eax +
sar ecx 1 +
push ecx  +
push [ebp+var_20C]  +
push edx  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1802F33  +
inc [ebp+var_208]  +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_20C] eax +
test eax eax +
jnz loc_1802EBF  +
mov ebx [ebp+var_214] +
mov eax [ebp+var_208] +
mov [ebx] eax +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn 10h  +
xor eax eax +
jmp loc_1802F22  +
***
and [ebp+var_4] 0 +
cmp dword ptr [ebx+38h] 0 +
jbe loc_18032F2  +
mov eax [ebp+arg_10] +
not eax  +
mov [ebp+arg_0] eax +
mov edi [ebx+40h] +
imul edi [ebp+var_4] +
add edi [ebx+3Ch] +
test [edi+1Ch] eax +
jnz loc_1802F7D  +
push dword ptr [edi+44h]  +
call sub_1802161  +
test eax eax +
jz loc_1802F7D  +
push dword ptr [edi+8]  +
mov ebx [ebp+arg_8] +
push dword ptr [ebx+4]  +
call MatchToken  +
test eax eax +
jnz loc_1802F91  +
mov ebx [ebp+var_8] +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebx+38h] +
jnb loc_18032F2  +
mov eax [ebp+arg_0] +
jmp loc_1802F4D  +
mov eax [ebp+arg_C] +
dec eax  +
push eax  +
push dword ptr [edi+8]  +
mov [ebp+arg_8] eax +
push 2000h  +
push [ebp+arg_18]  +
call sub_1802D90  +
mov esi [esi+40h] +
mov eax [edi+40h] +
xor ecx ecx +
cmp esi ecx +
jnz loc_1804255  +
cmp eax ecx +
jnz loc_1804279  +
push [ebp+arg_18]  +
add ebx 4 +
push ecx  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+arg_4]  +
push edi  +
call GenericMonitor  +
jmp loc_18030C0  +
mov eax [esi+30h] +
add eax edi +
mov ecx [eax] +
push dword ptr [eax+14h]  +
mov [ebp+arg_4] ecx +
call sub_1802161  +
test eax eax +
jz loc_1803326  +
cmp [ebp+arg_C] 3 +
jb loc_180429B  +
mov edi [ebp+arg_8] +
push offset aHelp  +
add edi 8 +
push dword ptr [edi]  +
call MatchToken  +
test eax eax +
jnz loc_180429B  +
push offset word_1801FCC  +
push dword ptr [edi]  +
call MatchToken  +
test eax eax +
jnz loc_180429B  +
mov eax [esi+30h] +
imul ebx ebx +
xor edi edi +
add eax ebx +
cmp [eax+8] edi +
jbe loc_18030DA  +
and [ebp+arg_18] edi +
mov ecx [ebp+arg_18] +
mov eax [eax+10h] +
mov edx [ebp+arg_0] +
add eax ecx +
mov ecx [eax+10h] +
test ecx edx +
jnz loc_18030E1  +
lea ecx [ebp+var_10] +
push ecx  +
push dword ptr [eax]  +
mov eax [ebp+arg_C] +
add eax 0FFFFFFFEh +
push eax  +
mov eax [ebp+arg_8] +
add eax 8 +
push eax  +
call MatchCmdLine  +
test eax eax +
jz loc_18030C7  +
mov eax [esi+30h] +
mov eax [ebx+eax+10h] +
mov ecx [ebp+arg_18] +
push dword ptr [ecx+eax+14h]  +
call sub_1802161  +
test eax eax +
jz loc_18030C7  +
mov eax [ebp+var_10] +
imul edi edi +
push offset dword_180B094  +
push [ebp+arg_4]  +
add eax 2 +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push eax  +
mov eax [esi+30h] +
add edi [ebx+eax+10h] +
push [ebp+arg_8]  +
mov eax [ebp+var_C] +
push edi  +
push dword ptr [eax+0Ch]  +
call sub_1803258  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
mov eax [esi+30h] +
add [ebp+arg_18] 18h +
inc edi  +
add eax ebx +
cmp edi [eax+8] +
jb loc_1803045  +
mov eax 3A9Ch +
jmp loc_18030C0  +
test ecx 0FFFFFFDFh +
jz loc_180305B  +
jmp loc_18030C7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push [ebp+arg_4]  +
push offset dword_1801BDC  +
call sub_1802111  +
test eax eax +
jz loc_1803113  +
jmp locret_1803129  +
pop edi  +
pop esi  +
pop ebx  +
jmp locret_1803129  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1801774  +
call sub_1802111  +
test eax eax +
jz loc_18042B9  +
leave   +
retn 8  +
***
push 4  +
pop ecx  +
mov edi edx +
mov esi offset dword_1801BDC +
xor ebx ebx +
cmps   +
jnz loc_18042DD  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor eax eax +
jmp loc_180310E  +
***
mov eax [esi] +
cmp eax esi +
jnz loc_180230B  +
cmp [esi] esi +
jz loc_1804A5F  +
push offset dword_180B04C  +
push offset dword_180B050  +
call sub_18030F4  +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_1804B9B  +
jmp loc_1804C44  +
mov eax edi +
cmp edi esi +
jz loc_1803157  +
jmp loc_180230B  +
mov eax [ebp+arg_4] +
cmp [eax] ebx +
jz loc_18031A1  +
jmp loc_18031B3  +
mov eax [ebp+lpMem] +
mov ecx [eax] +
cmp [ecx] eax +
jnz loc_1804CB4  +
jmp loc_18031B3  +
cmp [ebp+var_C] 3A9Ch +
jz loc_1803192  +
cmp [ebp+var_C] 3AA8h +
jz loc_1803192  +
mov eax [ebp+var_C] +
sub eax 8 +
jz loc_1804E6F  +
sub eax 3A94h +
jz loc_1804DF4  +
sub eax 0Bh +
jz loc_1804DD6  +
sub eax 1B03h +
jz loc_1804D19  +
dec eax  +
jz loc_1804CF1  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
mov [ebp+arg_4] eax +
cmp eax ecx +
jnz loc_1804E8F  +
push [ebp+var_8]  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov ecx [ebp+lpMem] +
mov eax [ecx] +
cmp eax ecx +
mov [ebp+arg_4] eax +
jnz loc_1803223  +
mov eax [ebp+var_C] +
mov [ebp+arg_4] eax +
push [ebp+lpMem]  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1803234  +
push eax  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov edx [ebp+arg_4] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_4] eax +
mov [eax+4] ecx +
call esi  +
push eax  +
call edi  +
mov eax [ebp+arg_4] +
cmp eax [ebp+lpMem] +
jmp loc_1803205  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+uID] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
sub eax esi +
push edi  +
mov edi [ebp+arg_8] +
cmp eax 1 +
jz loc_1804625  +
push [ebp+arg_20]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+uID]  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword_1817EC0  +
call dword ptr [esi+4]  +
mov [ebp+uID] eax +
mov eax 3A99h +
cmp [ebp+uID] eax +
jz loc_1804650  +
mov eax [ebp+uID] +
xor ebx ebx +
sub eax ebx +
jnz loc_1804666  +
jmp loc_180473F  +
***
sub eax 3 +
jz loc_180468C  +
push [ebp+uID]  +
push ebx  +
call PrintError  +
jmp loc_1804685  +
cmp dword_180B040 ebx +
jnz loc_18032EA  +
push edi  +
push ebx  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
jmp loc_18032EA  +
xor ebx ebx +
cmp [ebp+uID] 3AA5h +
jnz loc_180473F  +
mov [ebp+uID] ebx +
jmp loc_180473F  +
***
xor edi edi +
xor ebx ebx +
cmp [esi+2Ch] edi +
jbe loc_18030DA  +
mov ecx [ebp+arg_10] +
not ecx  +
mov [ebp+arg_0] ecx +
mov eax [esi+30h] +
add eax edi +
test [eax+0Ch] ecx +
jnz loc_1803329  +
push dword ptr [eax]  +
mov eax [ebp+arg_8] +
push dword ptr [eax+4]  +
call MatchToken  +
test eax eax +
jnz loc_1802FDD  +
mov ecx [ebp+arg_0] +
inc ebx  +
add edi 18h +
cmp ebx [esi+2Ch] +
jb loc_1803307  +
jmp loc_18030DA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov [ebp+var_C] eax +
cmp eax esi +
jnb loc_1803473  +
mov eax [ebp+arg_18] +
mov ebx ds:GetProcessHeap +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
lea edi [eax+ecx*4] +
push offset word_1802108  +
push dword ptr [edi]  +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1805362  +
mov eax [edi] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1803389  +
sub eax edx +
sar eax 1 +
mov [ebp+var_14] eax +
jz loc_1805370  +
lea eax [eax+eax+2] +
push eax  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_18053D4  +
push dword ptr [edi]  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push esi  +
mov [ebp+var_1C] eax +
call wcscpy_s  +
push offset word_1802108  +
push esi  +
call ds:wcstok  +
mov [ebp+var_14] eax +
mov eax esi +
add esp 14h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_18033E1  +
and [ebp+var_8] 0 +
sub eax ecx +
sar eax 1 +
lea eax [esi+eax*2+2] +
mov [ebp+var_18] eax +
mov eax [ebp+var_4] +
or dword ptr [eax] 0FFFFFFFFh +
cmp [ebp+arg_14] 0 +
jbe loc_180537B  +
mov eax [ebp+arg_10] +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
push dword ptr [eax]  +
push [ebp+var_14]  +
call MatchToken  +
test eax eax +
jz loc_1803496  +
mov ecx [ebp+var_8] +
mov edx [ebp+arg_10] +
mov eax ecx +
imul eax eax +
add eax edx +
cmp dword ptr [eax+8] 0 +
jnz loc_18053A5  +
push [ebp+var_18]  +
mov edx [ebp+var_4] +
push [ebp+var_1C]  +
mov [edx] ecx +
mov dword ptr [eax+8] 1 +
push dword ptr [edi]  +
call wcscpy_s  +
add esp 0Ch +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov esi [ebp+arg_C] +
inc [ebp+var_C]  +
add [ebp+var_4] 4 +
cmp [ebp+var_C] esi +
jb loc_1803364  +
cmp [ebp+arg_8] esi +
jnb loc_180348D  +
mov ecx [ebp+arg_18] +
sub esi [ebp+arg_8] +
cmp dword ptr [ecx] 0FFFFFFFEh +
jz loc_18053B1  +
add ecx 4 +
dec esi  +
jnz loc_180347E  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add [ebp+var_10] 0Ch +
cmp eax [ebp+arg_14] +
jb loc_1803410  +
jmp loc_180537B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_4] +
mov [esi] ebx +
mov eax dword_1817EE4 +
neg eax  +
sbb eax eax +
and eax 2 +
or eax 0FFFF0000h +
mov [ebp+var_14] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_10] eax +
cmp dword_1817EC0 ebx +
jnz loc_18034EC  +
or eax 8 +
mov [ebp+var_10] eax +
cmp dword_1817ECC ebx +
jz loc_18034FA  +
or eax 10h +
mov [ebp+var_10] eax +
cmp dword_1817EE0 ebx +
jnz loc_180489D  +
push offset aNetsh_1  +
lea eax [ebp+lpMem] +
push eax  +
call sub_1803555  +
cmp eax ebx +
jnz loc_18048B1  +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
push eax  +
call sub_1803555  +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_18048BC  +
mov ecx [ebp+var_8] +
cmp [ecx] ecx +
jz loc_1804911  +
mov esi [ebp+var_8] +
push 1  +
push dword ptr [esi]  +
call sub_180265D  +
jmp loc_18049B0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push 0Ch  +
push 0  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_18047F3  +
push edi  +
xor eax eax +
mov edi ebx +
stos   +
stos   +
push 0Ch  +
stos   +
push 0  +
mov [ebx+4] ebx +
mov [ebx] ebx +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_18047FF  +
mov eax [ebp+arg_4] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_18035A4  +
sub eax ecx +
sar eax 1 +
inc eax  +
mov [ebp+lpMem] eax +
add eax eax +
push eax  +
push 0  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [edi+8] eax +
test eax eax +
jz loc_1804813  +
push [ebp+arg_4]  +
push [ebp+lpMem]  +
push eax  +
call sub_1801E5F  +
mov eax [ebx] +
mov [edi] eax +
mov [edi+4] ebx +
push 0  +
mov [eax+4] edi +
push edi  +
mov [ebx] edi +
call sub_180265D  +
jmp loc_180482A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_1803631  +
movzx eax word ptr [ebp+var_4] +
mov edi dword_180BB60[eax*4] +
cmp [edi] edi +
jnz loc_1803FE0  +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
xor eax eax +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx eax +
movzx eax word ptr [eax] +
xor ecx ecx +
test ax ax +
jz loc_180365A  +
movzx eax ax +
shl ecx 4 +
add ecx eax +
inc edx  +
inc edx  +
movzx eax word ptr [edx] +
movzx ecx cx +
test ax ax +
jnz loc_1803648  +
movzx eax cx +
cdq   +
mov ecx 0D3h +
idiv  ecx +
mov eax [ebp+arg_4] +
mov [eax] dx +
xor eax eax +
pop ebp  +
retn 8  +
***
push offset dword_1802008  +
call PrintMessage  +
pop ecx  +
mov eax [ebp+uID] +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+lpSource] 0 +
lea eax [ebp+arg_4] +
mov [ebp+Arguments] eax +
jz loc_1805324  +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+lpSource]  +
call sub_180372D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 400Ch +
call sub_1801BEC  +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+hInstance] +
mov esi 2000h +
push esi  +
lea eax [ebp+Source] +
push eax  +
push [ebp+uID]  +
push edi  +
call ds:LoadStringW  +
mov ebx eax +
test ebx ebx +
jz loc_1805329  +
lea eax [ebp+arg_8] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebp+Source] +
push eax  +
call sub_180372D  +
mov ebx eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn   +
***
mov ebx eax +
test ebx ebx +
jnz loc_18036F1  +
jmp loc_180370F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push [ebp+Arguments]  +
xor esi esi +
push esi  +
lea eax [ebp+lpWideCharStr] +
push eax  +
push esi  +
push esi  +
push [ebp+lpSource]  +
mov [ebp+lpWideCharStr] esi +
push 500h  +
call ds:FormatMessageW  +
mov edi eax +
cmp edi esi +
jz loc_18052CE  +
push [ebp+lpWideCharStr]  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call sub_1803788  +
cmp [ebp+lpWideCharStr] esi +
jz loc_180377B  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetConsoleOutputCP +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
call edi  +
mov ebx ds:WideCharToMultiByte +
push eax  +
call ebx  +
push eax  +
push esi  +
mov [ebp+cchMultiByte] eax +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jz loc_1803810  +
push esi  +
push esi  +
push [ebp+cchMultiByte]  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push esi  +
call edi  +
push eax  +
call ebx  +
mov ebx [ebp+cchMultiByte] +
mov edi ds:WriteFile +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
dec ebx  +
push ebx  +
push [ebp+lpMem]  +
push [ebp+hFile]  +
call edi  +
mov eax hObject +
cmp eax esi +
jnz loc_1805294  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
xor ecx ecx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ecx +
mov [ebp+var_4] ebx +
cmp edi ebx +
jz loc_180384A  +
mov eax [edi] +
cmp eax edi +
jz loc_180384A  +
mov eax [eax] +
inc ecx  +
cmp eax edi +
jnz loc_1803840  +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_10] +
mov edx [ebp+arg_4] +
mov [eax] ecx +
mov eax [edx] +
cmp eax edx +
jz loc_1803862  +
mov eax [eax] +
inc ecx  +
cmp eax edx +
jnz loc_1803858  +
mov [ebp+var_C] ecx +
cmp ecx ebx +
jz loc_1802A78  +
push esi  +
mov esi ecx +
shl esi 2 +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1804765  +
push esi  +
push 0  +
push eax  +
call memset  +
xor ebx ebx +
add esp 0Ch +
mov [ebp+arg_0] ebx +
cmp edi ebx +
jz loc_1802A24  +
mov esi [edi] +
cmp esi edi +
jz loc_1802A24  +
cmp ebx [ebp+var_C] +
jnb loc_1802A24  +
push dword ptr [esi+8]  +
lea eax [ebp+var_4] +
push ebx  +
push eax  +
call sub_18038D8  +
inc ebx  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1802A24  +
mov esi [esi] +
jmp loc_18038A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
push [ebp+arg_8]  +
mov edi ebx +
shl edi 2 +
add eax edi +
push eax  +
call sub_180295F  +
mov eax [esi] +
cmp dword ptr [eax+edi] 0 +
jz loc_1804753  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push eax  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+arg_8] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_180391F  +
sub eax ecx +
sar eax 1 +
lea esi [eax+1] +
lea eax [esi+esi] +
push eax  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [edi+8] eax +
test eax eax +
jz loc_180528C  +
push [ebp+arg_8]  +
push esi  +
push eax  +
call sub_1801E5F  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+var_4]  +
call sub_180396E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
xor eax eax +
mov [ebx] ax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [eax] +
push edi  +
mov edi ebx +
cmp esi eax +
jz loc_18039C7  +
cmp edi ebx +
jz loc_1803995  +
push 20h  +
pop eax  +
mov [edi] ax +
inc edi  +
inc edi  +
push dword ptr [esi+8]  +
mov ecx [ebp+arg_8] +
mov eax edi +
sub eax ebx +
sar eax 1 +
sub ecx eax +
push ecx  +
push edi  +
call sub_1801E5F  +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_18039AF  +
mov esi [esi] +
sub eax ecx +
sar eax 1 +
lea edi [edi+eax*2] +
cmp esi [ebp+arg_0] +
jnz loc_1803989  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1805432  +
call sub_18039F2  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov esi 11Ch +
push esi  +
xor edi edi +
lea eax [ebp+VersionInformation] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov dword ptr [ebp+VersionInformation] esi +
call ds:GetVersionExW  +
test eax eax +
jz loc_1803ACD  +
push dword ptr [ebp-114h]  +
movzx eax [ebp+var_8] +
push dword ptr [ebp-118h]  +
add esi 0FFFFFFE8h +
push dword ptr [ebp-11Ch]  +
mov dword_180B05C 12h +
push offset aD_D_D  +
push esi  +
push offset word_180B338  +
mov dword_180B060 eax +
call sub_1801843  +
push dword ptr [ebp-114h]  +
mov edi offset aD +
push edi  +
push esi  +
push offset word_180B748  +
call sub_1801843  +
movzx eax [ebp+var_C] +
push eax  +
push edi  +
push esi  +
push offset word_180B540  +
call sub_1801843  +
movzx eax [ebp+var_A] +
push eax  +
push edi  +
push esi  +
push offset word_180B950  +
call sub_1801843  +
xor eax eax +
inc eax  +
add esp 48h +
mov dword_180B068 eax +
mov dword_180B064 eax +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1801579  +
leave   +
retn   +
push edi  +
push edi  +
push edi  +
call sub_1808B89  +
jmp loc_1803ABF  +
***
mov edi edi +
push ebx  +
push esi  +
xor ebx ebx +
mov esi 0D3h +
push 8  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_180404F  +
mov [eax+4] eax +
mov [eax] eax +
mov dword_180BB60[ebx*4] eax +
inc ebx  +
cmp ebx esi +
jb loc_1803B06  +
cmp ebx esi +
jnz loc_1804063  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
mov eax dword_1817F08 +
push offset dword_1817F00  +
push dword_1817F04  +
mov dword_1817F00 eax +
push offset dword_1817EF4  +
push offset dword_1817EF8  +
push offset dword_1817EF0  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1817EFC eax +
retn   +
***
push offset loc_18093EF  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_180B044 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp esi [ebp+arg_4] +
jnb loc_1803C06  +
test eax eax +
jnz loc_1803C06  +
mov ecx [esi] +
test ecx ecx +
jz loc_1803C01  +
call ecx  +
add esi 4 +
jmp loc_1803BF0  +
pop esi  +
pop ebp  +
retn   +
***
mov eax 5A4Dh +
cmp word ptr ds:__ImageBase ax +
jz loc_18054E4  +
xor eax eax +
jmp loc_1803C47  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jnz loc_1805500  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1803C20  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1817EC4 eax +
call sub_1803F17  +
push eax  +
call ds:__set_app_type  +
or dword_180B084 0FFFFFFFFh +
or dword_180B088 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1817F10 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1817F0C +
mov [eax] ecx +
call near ptr dword_1803BD8+5  +
cmp dword_1817EEC 0 +
jz loc_1805526  +
call sub_1803CA5  +
xor eax eax +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
call sub_1803CCC  +
jmp sub_18015E8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_180B044 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jnz loc_180554D  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jnz loc_1805561  +
jmp loc_1803D4D  +
mov dword_180B044 esi +
not esi  +
mov dword_180B048 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
mov esi 0BB40E64Fh +
jmp loc_1803D3A  +
***
push 4  +
mov eax offset dword_1801774 +
mov esi ebx +
pop ecx  +
mov edi eax +
xor ebx ebx +
cmps   +
jnz loc_1803D83  +
push 4  +
mov edi eax +
pop ecx  +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1801BC3  +
jmp loc_1803D83  +
mov eax 3AAAh +
jmp loc_1801BCE  +
push 57h  +
pop eax  +
jmp loc_1801BCC  +
***
mov ebx hInstance +
mov ecx offset loc_1803DA0 +
jmp loc_18017DC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
mov ebx offset dword_1801774 +
mov esi ebx +
lea edi [ebp-1Ch] +
movs   +
movs   +
movs   +
lea eax [ebp-24h] +
push eax  +
movs   +
push ebx  +
mov dword ptr [ebp-24h] 1 +
call RegisterHelper  +
mov esi offset dword_1801BDC +
lea edi [ebp-1Ch] +
movs   +
movs   +
movs   +
lea eax [ebp-24h] +
push eax  +
movs   +
push ebx  +
mov dword ptr [ebp-24h] 1 +
mov dword ptr [ebp-0Ch] offset loc_180217B +
call RegisterHelper  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_1801579  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
xor ebx ebx +
push 20019h  +
push ebx  +
push offset SubKey  +
push 80000002h  +
mov [ebp+hKey] ebx +
mov [ebp+var_14] ebx +
mov [ebp+lpMem] ebx +
call ds:RegOpenKeyExW  +
mov esi ds:GetProcessHeap +
test eax eax +
jnz loc_1801C5C  +
push ebx  +
push ebx  +
lea eax [ebp+cbMaxValueLen] +
push eax  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jnz loc_1801C5C  +
cmp [ebp+cValues] ebx +
jz loc_1801C5C  +
mov eax [ebp+cbMaxValueNameLen] +
push edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
call esi  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_18043B2  +
mov eax [ebp+cbMaxValueLen] +
inc eax  +
push eax  +
push 8  +
call esi  +
push eax  +
call edi  +
mov edi eax +
mov [ebp+var_14] edi +
cmp edi ebx +
jz loc_18043A2  +
mov [ebp+dwIndex] ebx +
cmp [ebp+cValues] ebx +
ja loc_1801C17  +
jmp loc_1801C5B  +
***
cmp eax 103h +
jnz loc_1801C50  +
jmp loc_1801C5B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1803F4B  +
push eax  +
call sub_1803F55  +
test eax eax +
jz loc_1803F4B  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jz loc_1805548  +
cmp ax 3 +
jnz loc_1803F4B  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
call sub_1803B93  +
xor eax eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1803FA4  +
cmp ecx 0FFFFFFFFh +
jz loc_1803FA4  +
and [ebp-4] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1803F9D  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1803F9D  +
cmp edx 10000000h +
jnb loc_1803F9D  +
lea eax [edx+ecx] +
mov [ebp-1Ch] eax +
cmp dword ptr [eax] 4550h +
jnz loc_180553E  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_1803FCC  +
retn 4  +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
push esi  +
mov esi [edi] +
jmp loc_180401C  +
mov ecx [ebp+arg_0] +
mov eax [esi-8] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1804011  +
test dx dx +
jz loc_180400D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1804011  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1803FEB  +
xor eax eax +
jmp loc_1804016  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_180402C  +
mov esi [esi] +
cmp esi edi +
jnz loc_1803FE5  +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
pop esi  +
jmp loc_1803625  +
mov eax [esi-4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_1804026  +
***
mov eax [esi] +
lea ecx [eax-8] +
mov eax [eax] +
push ecx  +
mov [esi] eax +
push 0  +
mov [eax+4] esi +
call ebx  +
push eax  +
call edi  +
jmp loc_180174E  +
***
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
jmp loc_1803B30  +
jnb loc_1804076  +
push edi  +
mov ecx esi +
sub ecx ebx +
lea edi dword_180BB60[ebx*4] +
xor eax eax +
stos   +
pop edi  +
call sub_1801728  +
push 8  +
pop eax  +
jmp loc_1803B3A  +
***
mov [ecx] edi +
jmp loc_1802790  +
***
cmp edx ebx +
jbe loc_1804093  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_18040CD  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_18040B7  +
cmp [eax] cx +
jz loc_18040B3  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_18040A9  +
cmp esi ecx +
jnz loc_18040C0  +
mov [ebp+arg_4] 80070057h +
jmp loc_18040C4  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_180272C  +
xor ecx ecx +
jmp loc_180272C  +
***
push 57h  +
pop eax  +
jmp loc_18024FA  +
mov [ebp+arg_0] eax +
cmp [ebx+24h] eax +
ja loc_1802324  +
jmp loc_1804114  +
push 3Dh  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1802368  +
push dword ptr [esi]  +
push 0B5h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
jmp loc_1802368  +
xor eax eax +
mov [ebp+arg_0] eax +
cmp [ebx+2Ch] eax +
ja loc_18023E6  +
jmp loc_18024AE  +
push 3Dh  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1804148  +
push dword ptr [esi]  +
push 0B6h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
xor eax eax +
mov [ebp+var_8] eax +
cmp [esi+8] eax +
ja loc_180242A  +
jmp loc_180249B  +
push dword ptr [edi]  +
push 0B7h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
jmp loc_180246C  +
***
cmp dword_180B068 eax +
jz loc_18041A7  +
push eax  +
push eax  +
push offset word_180B950  +
push offset word_180B540  +
push offset word_180B748  +
push offset word_180B338  +
push dword_180B060  +
push dword_180B05C  +
call [ebp+arg_0]  +
jmp loc_1802172  +
xor eax eax +
jmp loc_1802172  +
***
push [ebp+arg_4]  +
call eax  +
cmp eax edi +
jz loc_1802C97  +
push eax  +
push edi  +
call PrintError  +
pop ecx  +
pop ecx  +
mov eax 3AA9h +
jmp loc_18030C0  +
push 1  +
push dword ptr [esi+8]  +
push 2000h  +
push [ebp+arg_18]  +
call sub_1802D90  +
mov eax 55AAh +
jmp loc_18030C0  +
mov eax [ebp+var_4] +
push dword ptr [eax+14h]  +
call sub_1802161  +
test eax eax +
jz loc_1802CD8  +
lea eax [ebp+var_8] +
push eax  +
push offset dword_1801BDC  +
call sub_1802111  +
lea eax [ebp+var_C] +
push eax  +
mov eax [ebp+var_8] +
push dword ptr [eax+30h]  +
call sub_1802140  +
imul edi edi +
add edi ebx +
push offset dword_180B094  +
push 0  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push 2  +
jmp loc_18030B1  +
mov eax [esi+28h] +
mov ecx [ebp+var_4] +
push dword ptr [ecx+eax+14h]  +
call sub_1802161  +
test eax eax +
jz loc_1802D1A  +
imul edi edi +
add edi [esi+28h] +
jmp loc_180421F  +
mov esi [esi+4] +
cmp esi ecx +
jz loc_1802FB9  +
push [ebp+arg_18]  +
add ebx 4 +
push ecx  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+arg_4]  +
push edi  +
call esi  +
jmp loc_18030C0  +
mov eax [eax] +
cmp eax ecx +
jz loc_1802FC1  +
push [ebp+arg_18]  +
add ebx 4 +
push ecx  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+arg_4]  +
call eax  +
jmp loc_18030C0  +
mov eax [esi+30h] +
imul ebx ebx +
push dword ptr [ebx+eax]  +
mov eax [ebp+arg_C] +
dec eax  +
push eax  +
push [ebp+arg_10]  +
push 1  +
push esi  +
call sub_1808693  +
jmp loc_18030C0  +
***
and [ebp+arg_4] eax +
mov eax [ebp+var_4] +
mov ecx [eax+38h] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_8] ecx +
test ecx ecx +
jbe loc_18042F1  +
mov ecx [eax+3Ch] +
mov eax [eax+40h] +
mov [ebp+var_4] ecx +
lea edx [ecx+0Ch] +
jmp loc_180312D  +
inc [ebp+arg_4]  +
mov ecx [ebp+arg_4] +
add [ebp+var_4] eax +
add edx eax +
cmp ecx [ebp+var_8] +
jb loc_180312D  +
mov eax 490h +
jmp loc_180310E  +
***
mov eax lpMem +
push dword ptr [edi+eax]  +
push 6Ah  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
mov eax 3AA9h +
jmp loc_1801828  +
push dword ptr [esi+eax]  +
push offset aInithelperdl_0  +
push 3EDh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 10h +
push ebx  +
call ds:__imp_FreeLibrary  +
mov eax lpMem +
and dword ptr [esi+eax+0Ch] 0 +
jmp loc_1804313  +
push eax  +
mov eax lpMem +
push dword ptr [esi+eax]  +
push offset aInithelperdl_0  +
push 88h  +
push hInstance  +
call PrintMessageFromModule  +
mov eax lpMem +
add esp 14h +
push 0  +
push dword ptr [esi+eax]  +
call sub_1806A9F  +
jmp loc_1801826  +
***
pop eax  +
jmp loc_1801E0D  +
***
push [ebp+lpMem]  +
push ebx  +
call esi  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] ebx +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
jmp loc_1801C5B  +
***
xor eax eax +
jmp loc_180222C  +
movzx eax word ptr [edi] +
cmp ax cx +
jz loc_18026EA  +
cmp ax 22h +
jz loc_18043E9  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
cmp ax cx +
jnz loc_18043D9  +
cmp [edi] cx +
jz loc_18026EA  +
inc edi  +
inc edi  +
jmp loc_18026EA  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov [esi+4] eax +
mov [esi] ecx +
mov [eax] esi +
mov eax [esi] +
mov [eax+4] esi +
movzx eax word ptr [edi] +
mov [ebp+var_14] eax +
xor eax eax +
mov [ebp+var_C] esi +
mov [edi] ax +
cmp [ebp+arg_4] eax +
jnz loc_18025A9  +
and [ebp+var_10] 0 +
jmp loc_18025D1  +
mov [ebp+var_4] eax +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1804430  +
sub eax edx +
sar eax 1 +
lea ebx [eax+1] +
jmp loc_18025E4  +
test si si +
jz loc_1804468  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_1802612  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_1802606  +
xor ecx ecx +
jmp loc_1802617  +
test si si +
jz loc_1804491  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_180262F  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_1802623  +
xor ecx ecx +
jmp loc_1802634  +
***
push 1  +
push esi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
test esi esi +
jz loc_18044B1  +
push esi  +
push 0  +
call PrintError  +
pop ecx  +
pop ecx  +
push dword_1817EDC  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword_1817EDC 0 +
jmp loc_180228A  +
***
push offset dword_1805594  +
push ebx  +
call sub_180295F  +
push dword ptr [esi]  +
push ebx  +
call sub_180295F  +
push offset dword_1805594  +
jmp loc_1802947  +
***
mov eax 3A9Ch +
jmp locret_1802C37  +
mov [ebp+dwBytes] esi +
mov [ebx] eax +
jmp loc_1802BB6  +
call [ebp+var_8]  +
jmp loc_1802C19  +
mov [ebx] eax +
jmp loc_1802C27  +
cmp [ebp+lpMem] 55AAh +
jnz loc_18045F1  +
test byte ptr [ebp+arg_C] 2 +
jnz loc_18045E2  +
mov eax [ebp+arg_4] +
push 4  +
pop ecx  +
inc eax  +
mov [ebp+var_8] eax +
mul  ecx +
mov [ebp+dwBytes] ecx +
lea ecx [ebp+dwBytes] +
push ecx  +
push edx  +
push eax  +
call sub_18072E4  +
test eax eax +
jge loc_180454F  +
movzx eax ax +
jmp loc_1802C34  +
push [ebp+dwBytes]  +
push 0  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_180456B  +
push 8  +
pop eax  +
jmp loc_1802C34  +
mov edi [ebp+arg_4] +
shl edi 2 +
push edi  +
push [ebp+arg_8]  +
push ebx  +
call memcpy  +
add esp 0Ch +
push 4  +
push 0  +
call esi  +
push eax  +
call ds:HeapAlloc  +
add edi ebx +
mov [edi] eax +
test eax eax +
jnz loc_180459C  +
mov [ebp+lpMem] 8 +
jmp loc_18045D1  +
push offset word_1801FCC  +
push 2  +
push eax  +
call sub_1801E5F  +
push [ebp+arg_10]  +
mov eax [ebp+var_8] +
push [ebp+arg_C]  +
mov dword_180B06C eax +
push ebx  +
push eax  +
push [ebp+arg_0]  +
call sub_1802B44  +
push dword ptr [edi]  +
mov [ebp+lpMem] eax +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
push ebx  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
jmp loc_1802C31  +
push edi  +
call sub_18073EE  +
and [ebp+lpMem] 0 +
jmp loc_1802C31  +
cmp [ebp+lpMem] 55ABh +
jnz loc_1802C31  +
push dword_1817EC0  +
push 3EBh  +
push hInstance  +
call PrintMessageFromModule  +
mov eax [ebp+arg_10] +
add esp 0Ch +
mov dword ptr [eax] 1 +
jmp loc_1802C31  +
***
push offset aHelp  +
push dword ptr [edi+esi*4]  +
call MatchToken  +
test eax eax +
jnz loc_180464B  +
push offset word_1801FCC  +
push dword ptr [edi+esi*4]  +
call MatchToken  +
test eax eax +
jz loc_1803274  +
mov esi [ebp+arg_4] +
jmp loc_180465A  +
push eax  +
push 0  +
call PrintError  +
pop ecx  +
pop ecx  +
mov [ebp+uID] 3AA5h +
jmp loc_180329F  +
sub eax 3AA5h +
push 2  +
pop edi  +
jz loc_180468C  +
sub eax edi +
jz loc_18032C8  +
sub eax edi +
jnz loc_18032B1  +
jmp loc_180473F  +
pop ecx  +
pop ecx  +
jmp loc_180473F  +
mov eax [ebp+arg_1C] +
cmp eax ebx +
jz loc_180472A  +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
cmp cx bx +
jnz loc_180469A  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax [esi] +
lea edx [eax+2] +
mov si [eax] +
add eax edi +
cmp si bx +
jnz loc_18046AF  +
mov edi ds:GetProcessHeap +
sub eax edx +
sar eax 1 +
lea esi [eax+ecx+2] +
lea eax [esi+esi] +
push eax  +
push ebx  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_18046E5  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push dword ptr [eax+0Ch]  +
jmp loc_180472F  +
push [ebp+arg_1C]  +
push esi  +
push ebx  +
call sub_1801E5F  +
push offset word_180200C  +
push esi  +
push ebx  +
call sub_180270E  +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push esi  +
push ebx  +
call sub_180270E  +
mov eax [ebp+arg_4] +
push ebx  +
push dword ptr [eax+0Ch]  +
push [ebp+hInstance]  +
call PrintMessageFromModule  +
add esp 0Ch +
push ebx  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
jmp loc_18032DB  +
push dword ptr [esi]  +
push dword ptr [esi+0Ch]  +
push [ebp+hInstance]  +
call PrintMessageFromModule  +
add esp 0Ch +
jmp loc_18032DB  +
cmp dword_180B040 ebx +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1803671  +
jmp loc_180367C  +
***
push eax  +
push ebx  +
call sub_1802236  +
and dword ptr [esi] 0 +
push 8  +
pop eax  +
jmp loc_1803906  +
***
mov [ebp+var_8] 8 +
jmp loc_1802A77  +
add eax 2 +
cmp [ebp+arg_0] 0 +
push eax  +
jz loc_1804798  +
lea eax [ebx-1] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_18038D8  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1802A77  +
and [ebp+arg_0] eax +
jmp loc_18047AE  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
call sub_18038D8  +
inc ebx  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1802A77  +
mov eax [ebp+var_4] +
mov ecx [eax+ebx*4-4] +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_18047BA  +
sub eax esi +
sar eax 1 +
cmp word ptr [ecx+eax*2-2] 22h +
jnz loc_1802A70  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_18047D9  +
sub eax esi +
sar eax 1 +
xor edx edx +
mov [ecx+eax*2-2] dx +
jmp loc_1802A70  +
***
mov [ebp+arg_4] 8 +
jmp loc_18022F3  +
push ebx  +
push eax  +
call esi  +
push eax  +
call ds:HeapFree  +
mov [ebp+arg_4] 8 +
jmp loc_1804882  +
push ebx  +
push eax  +
call esi  +
mov ebx ds:HeapFree +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
push eax  +
call ebx  +
jmp loc_180480A  +
mov [ebp+arg_4] eax +
test eax eax +
jz loc_18022F2  +
mov edi [ebx] +
mov [ebp+lpMem] edi +
cmp edi ebx +
jnz loc_1804843  +
jmp loc_1804876  +
mov edi [ebp+lpMem] +
mov eax [edi+8] +
test eax eax +
jz loc_1804856  +
push eax  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+lpMem] +
mov edi [edi] +
mov eax [ecx+4] +
push ecx  +
mov [eax] edi +
push 0  +
mov [edi+4] eax +
call esi  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] edi +
cmp edi ebx +
jnz loc_1804840  +
push ebx  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
xor ebx ebx +
jmp loc_18022F2  +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
jmp loc_1802304  +
***
push [ebp+arg_0]  +
push offset a1S  +
call PrintMessage  +
pop ecx  +
pop ecx  +
jmp loc_1803506  +
mov dword ptr [esi] 1 +
jmp loc_180321D  +
mov eax [ebp+lpMem] +
mov edi [eax] +
cmp edi eax +
jz loc_18048FB  +
mov eax [edi+8] +
cmp eax ebx +
jz loc_18048DB  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov esi [edi] +
mov eax [edi+4] +
push edi  +
mov [eax] esi +
push ebx  +
mov [esi+4] eax +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edi esi +
cmp esi [ebp+lpMem] +
jnz loc_18048C5  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_1804C36  +
mov eax [ecx] +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
mov [ebp+arg_4] eax +
cmp eax ecx +
jnz loc_180492B  +
jmp loc_180495B  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804939  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_4] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_4] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_4] +
mov [ebp+arg_4] eax +
cmp eax [ebp+var_8] +
jnz loc_1804928  +
push [ebp+var_8]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov ecx [ebp+lpMem] +
mov eax [ecx] +
cmp eax ecx +
jmp loc_180499B  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_180497E  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_4] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_4] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_4] +
cmp eax [ebp+lpMem] +
mov [ebp+arg_4] eax +
jnz loc_180496D  +
push [ebp+lpMem]  +
push ebx  +
call edi  +
push eax  +
call esi  +
xor eax eax +
jmp loc_180321C  +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_180314D  +
mov edi ds:GetProcessHeap +
mov ecx esi +
mov eax [ecx] +
mov esi ds:HeapFree +
mov [ebp+arg_0] eax +
cmp eax ecx +
jnz loc_18049D7  +
jmp loc_1804A07  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_18049E5  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_0] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
mov [ebp+arg_0] eax +
cmp eax [ebp+var_8] +
jnz loc_18049D4  +
push [ebp+var_8]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov ecx [ebp+lpMem] +
mov eax [ecx] +
cmp eax ecx +
jmp loc_1804A47  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804A2A  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_0] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
cmp eax [ebp+lpMem] +
mov [ebp+arg_0] eax +
jz loc_1804C2D  +
jmp loc_1804A19  +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_180317E  +
jmp loc_1804A80  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
mov edi ds:HeapFree +
mov esi ds:GetProcessHeap +
mov [ebp+arg_4] eax +
cmp eax ecx +
jnz loc_1804B1B  +
jmp loc_1804B4B  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
mov [ebp+arg_0] eax +
cmp eax ecx +
jnz loc_1804A9D  +
jmp loc_1804ACD  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804AAB  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_0] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
mov [ebp+arg_0] eax +
cmp eax [ebp+var_8] +
jnz loc_1804A9A  +
push [ebp+var_8]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov ecx [ebp+lpMem] +
mov eax [ecx] +
cmp eax ecx +
jmp loc_1804B0D  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804AF0  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_0] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
cmp eax [ebp+lpMem] +
mov [ebp+arg_0] eax +
jz loc_1804C2D  +
jmp loc_1804ADF  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804B29  +
push eax  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov edx [ebp+arg_4] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_4] eax +
mov [eax+4] ecx +
call esi  +
push eax  +
call edi  +
mov eax [ebp+arg_4] +
mov [ebp+arg_4] eax +
cmp eax [ebp+var_8] +
jnz loc_1804B18  +
push [ebp+var_8]  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov eax [ebp+lpMem] +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
cmp ecx eax +
jz loc_1804B93  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804B71  +
push eax  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov edx [ebp+arg_4] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_4] eax +
mov [eax+4] ecx +
call esi  +
push eax  +
call edi  +
mov eax [ebp+arg_4] +
mov [ebp+arg_4] eax +
cmp eax [ebp+lpMem] +
jnz loc_1804B60  +
mov [ebp+arg_4] ebx +
jmp loc_1803210  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
mov [ebp+arg_0] eax +
cmp eax ecx +
jnz loc_1804BB8  +
jmp loc_1804BE8  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804BC6  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_0] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
mov [ebp+arg_0] eax +
cmp eax [ebp+var_8] +
jnz loc_1804BB5  +
push [ebp+var_8]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov ecx [ebp+lpMem] +
mov eax [ecx] +
cmp eax ecx +
jmp loc_1804C28  +
mov eax [ebp+arg_0] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804C0B  +
push eax  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_0] eax +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_0] +
cmp eax [ebp+lpMem] +
mov [ebp+arg_0] eax +
jnz loc_1804BFA  +
push [ebp+lpMem]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 1 +
jmp loc_1804DBC  +
mov eax dword_180B050 +
or [ebp+var_10] 1 +
mov edi ds:HeapFree +
mov esi ds:GetProcessHeap +
mov [ebp+var_18] eax +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_8]  +
push [ebp+lpMem]  +
call sub_180381C  +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_1803189  +
push [ebp+arg_4]  +
mov eax [ebp+var_14] +
push [ebp+var_10]  +
mov ecx [ebp+var_20] +
push [ebp+var_1C]  +
mov dword_180B06C eax +
push eax  +
push [ebp+var_18]  +
mov dword_180B070 ecx +
call sub_1802B44  +
push [ebp+var_1C]  +
mov [ebp+var_C] eax +
push [ebp+var_14]  +
call sub_1802236  +
jmp loc_1803189  +
mov eax [eax+4] +
mov [ebp+var_C] eax +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804CC8  +
push eax  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov edx [ebp+var_C] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [eax+4] ecx +
call esi  +
push eax  +
call edi  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_18]  +
call sub_18066AE  +
and [ebp+var_10] 0FFFFFFFEh +
jmp loc_1804C5C  +
push dword_1817EC0  +
push 3EBh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
mov dword_180B094 1 +
jmp loc_18031E5  +
test byte ptr [ebp+var_10] 2 +
jnz loc_1804DC4  +
mov eax [ebp+var_14] +
shl eax 2 +
add eax 4 +
push eax  +
push ebx  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_0] eax +
cmp eax ebx +
jz loc_1804E14  +
mov eax [ebp+var_14] +
shl eax 2 +
push eax  +
push [ebp+var_1C]  +
push [ebp+arg_0]  +
call memcpy  +
add esp 0Ch +
push 4  +
push ebx  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov ecx [ebp+var_14] +
mov edx [ebp+arg_0] +
shl ecx 2 +
add ecx edx +
mov [ebp+var_20] ecx +
mov [ecx] eax +
cmp eax ebx +
jnz loc_1804D80  +
mov [ebp+var_C] 8 +
jmp loc_1804DB3  +
push offset word_1801FCC  +
push 2  +
push eax  +
call sub_1801E5F  +
push [ebp+arg_4]  +
mov eax [ebp+var_14] +
push [ebp+var_10]  +
inc eax  +
push [ebp+arg_0]  +
mov dword_180B06C eax +
push eax  +
call sub_1807419  +
mov [ebp+var_C] eax +
mov eax [ebp+var_20] +
push dword ptr [eax]  +
push ebx  +
call esi  +
push eax  +
call edi  +
push [ebp+arg_0]  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov eax [ebp+var_C] +
jmp loc_180321C  +
push offset aNetsh_0  +
call sub_18073EE  +
mov [ebp+var_C] ebx +
jmp loc_18031E5  +
cmp dword_180B040 ebx +
jnz loc_18031E5  +
push 2  +
push hInstance  +
call PrintMessageFromModule  +
jmp loc_1804E85  +
push [ebp+arg_0]  +
call ds:_wcsdup  +
pop ecx  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_1804E1C  +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
push 8  +
pop eax  +
jmp loc_180321C  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1804E22  +
sub eax edx +
sar eax 1 +
cmp eax 100h +
jbe loc_1804E50  +
add eax 0FFFFFF06h +
push offset a___  +
push eax  +
mov eax [ebp+arg_4] +
add eax 1F4h +
push eax  +
call sub_1801E5F  +
push [ebp+arg_4]  +
push 3A9Ch  +
push ebx  +
call PrintMessageFromModule  +
push [ebp+arg_4]  +
call ds:free  +
add esp 10h +
jmp loc_18031E5  +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 1 +
pop ecx  +
pop ecx  +
jmp loc_18031E5  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1804E9D  +
push eax  +
push ebx  +
call esi  +
push eax  +
call edi  +
mov edx [ebp+arg_4] +
mov eax [edx] +
mov ecx [edx+4] +
push edx  +
mov [ecx] eax +
push ebx  +
mov [ebp+arg_4] eax +
mov [eax+4] ecx +
call esi  +
push eax  +
call edi  +
mov eax [ebp+arg_4] +
mov [ebp+arg_4] eax +
cmp eax [ebp+var_8] +
jnz loc_1804E8C  +
jmp loc_18031F5  +
***
push offset aGetmodulehandl  +
push offset aS_0  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
mov eax edi +
jmp loc_1801504  +
xor eax eax +
jmp loc_1801504  +
mov dword_1817EE0 1 +
jmp loc_1805016  +
mov eax [ebp+var_841C] +
cmp eax [ebp+arg_0] +
jnb loc_18050A3  +
mov eax [edi+esi+4] +
mov [ebp+var_8434] eax +
jmp loc_180500A  +
mov eax [ebp+var_841C] +
cmp eax [ebp+arg_0] +
jnb loc_18050A3  +
push dword ptr [edi+esi+4]  +
lea eax [ebp+var_4414] +
push 2000h  +
push eax  +
call sub_1801E5F  +
jmp loc_180500A  +
mov eax [ebp+var_841C] +
cmp eax [ebp+arg_0] +
jnb loc_18050A3  +
mov eax [edi+esi+4] +
mov [ebp+var_842C] eax +
mov [ebp+var_8438] 1 +
jmp loc_180500A  +
mov eax [ebp+var_841C] +
cmp eax [ebp+arg_0] +
jnb loc_18050A3  +
mov edi [edi+esi+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1804F94  +
sub eax edx +
sar eax 1 +
jz loc_180500A  +
mov [ebp+var_8428] edi +
jmp loc_180500A  +
mov eax [ebp+var_841C] +
cmp eax [ebp+arg_0] +
jnb loc_18050A3  +
mov edi [edi+esi+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1804FC4  +
sub eax edx +
sar eax 1 +
jz loc_180500A  +
mov [ebp+nSize] edi +
jmp loc_180500A  +
mov eax [ebp+var_841C] +
cmp eax [ebp+arg_0] +
jnb loc_18050A3  +
mov edi [edi+esi+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1804FF4  +
sub eax edx +
sar eax 1 +
jz loc_180500A  +
mov [ebp+dwMode] edi +
inc [ebp+var_8418]  +
inc [ebp+var_841C]  +
inc [ebp+var_8418]  +
mov eax [ebp+var_8418] +
inc [ebp+var_841C]  +
cmp eax [ebp+arg_0] +
jnb loc_180146F  +
jmp loc_18012E8  +
mov esi [ebp+dwMode] +
test esi esi +
jz loc_1805126  +
push offset word_1805574  +
push esi  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1805126  +
push [ebp+var_8428]  +
and [ebp+dwMode] eax +
push 0A9h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
lea eax [ebp+dwMode] +
push eax  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1807A5D  +
test eax eax +
jz loc_1805120  +
mov esi 3A99h +
jmp loc_18014DC  +
push dword ptr [esi]  +
push 6Eh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
jmp loc_1805099  +
push offset dword_1805594  +
push edi  +
lea eax [ebp+var_8414] +
push eax  +
call sub_180270E  +
push ebx  +
push edi  +
lea eax [ebp+var_8414] +
push eax  +
call sub_180270E  +
push offset dword_1805594  +
jmp loc_1801451  +
xor eax eax +
push eax  +
push eax  +
push eax  +
call sub_18039D5  +
push dword ptr [esi]  +
push 6Eh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
lea eax [ebp+var_8430] +
push eax  +
push offset word_1801FCC  +
call ProcessCommand  +
call sub_18028A9  +
call sub_180158B  +
xor eax eax +
inc eax  +
jmp loc_1801504  +
lea esi [ebp+var_20C] +
push esi  +
push [ebp+nSize]  +
push [ebp+var_8428]  +
call sub_1807861  +
mov esi eax +
test esi esi +
jz loc_180147C  +
push esi  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
jmp loc_18014DC  +
mov eax dword_1817EC0 +
cmp eax ebx +
jnz loc_1805182  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+nSize] 104h +
call ds:GetComputerNameW  +
lea eax [ebp+Buffer] +
push eax  +
push 0B4h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
push esi  +
push ebx  +
call PrintError  +
pop ecx  +
pop ecx  +
jmp loc_1801498  +
push [ebp+var_8434]  +
call sub_18077CF  +
mov esi eax +
cmp esi ebx +
jz loc_18014A4  +
jmp loc_18014DC  +
lea eax [ebp+var_8430] +
push eax  +
lea eax [ebp+var_4414] +
push eax  +
mov dword_1817EE4 edi +
call ProcessCommand  +
mov esi eax +
mov dword_1817EE4 ebx +
cmp esi ebx +
jz loc_18014B4  +
jmp loc_18014DC  +
mov dword_1817EE4 edi +
cmp [ebp+var_842C] ebx +
jz loc_180520A  +
push [ebp+var_842C]  +
call sub_18077CF  +
jmp loc_18014DA  +
push edi  +
push ds:_iob  +
mov dword_180B040 ebx +
call sub_1807652  +
jmp loc_18014DA  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword_1817EC0 0 +
jmp loc_18014FD  +
***
mov eax [edi+8] +
mov ebx ds:GetProcessHeap +
test eax eax +
jnz loc_180390D  +
jmp loc_1803919  +
push 8  +
pop eax  +
jmp loc_1803962  +
***
push esi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push ebx  +
push [ebp+lpMem]  +
push eax  +
call edi  +
test eax eax +
jnz loc_18037FF  +
push hObject  +
call ds:CloseHandle  +
mov hObject esi +
call ds:__imp_GetLastError  +
push eax  +
push esi  +
call PrintError  +
pop ecx  +
pop ecx  +
jmp loc_18037FF  +
***
call ds:__imp_GetLastError  +
push eax  +
push offset aErrorDInFormat  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
jmp loc_180376D  +
***
push 57h  +
pop eax  +
leave   +
retn   +
***
push offset aGetresourcestr  +
push edi  +
call ds:__imp_GetProcAddress  +
test eax eax +
jz loc_180370F  +
push esi  +
lea ecx [ebp+Source] +
push ecx  +
push [ebp+uID]  +
call eax  +
jmp loc_1803720  +
***
mov eax [ebp+var_4] +
mov dword ptr [eax] 0FFFFFFFEh +
jmp loc_1803463  +
mov eax [ebp+var_4] +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_1803463  +
push [ebp+var_14]  +
mov edi 3AA1h +
push edi  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax edi +
jmp loc_180348F  +
test byte ptr [eax+4] 2 +
jnz loc_1803438  +
jmp loc_18053EB  +
xor eax eax +
cmp [ebp+arg_14] eax +
jbe loc_18053CC  +
mov edi [ebp+arg_10] +
lea edx [edi+8] +
cmp dword ptr [edx] 0 +
jz loc_1805415  +
inc eax  +
add edx 0Ch +
cmp eax [ebp+arg_14] +
jb loc_18053BE  +
or dword ptr [ecx] 0FFFFFFFFh +
jmp loc_1803487  +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
push 8  +
pop eax  +
jmp loc_180348F  +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
push [ebp+var_14]  +
mov esi 3AA0h +
push esi  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
mov eax esi +
jmp loc_180348F  +
mov [ecx] eax +
imul eax eax +
mov dword ptr [eax+edi+8] 1 +
jmp loc_1803487  +
***
xor eax eax +
mov [edi+esi*2] ax +
jmp loc_1801888  +
***
pop ebp  +
jmp sub_1808B89  +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1817EC8 eax +
xor ebx ebx +
cmp dword_1817EC4 ebx +
jnz loc_18054C4  +
push eax  +
call ds:_exit  +
***
cmp dword_1817F20 ebx +
jnz loc_18054D2  +
call ds:_cexit  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax dword_1817EC8 +
call sub_1803FCC  +
retn   +
***
mov eax ds:dword_180003C +
lea eax __ImageBase[eax] +
cmp dword ptr [eax] 4550h +
jz loc_1803C24  +
jmp loc_1803C20  +
***
cmp ecx 20Bh +
jnz loc_1803C20  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1803C20  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1803C42  +
***
push (offset dword_1803BD8+5)  +
call ds:__setusermatherr  +
pop ecx  +
jmp loc_1803C98  +
***
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
***
xor eax eax +
mov [ebp-1Ch] eax +
jmp loc_1803F9D  +
***
push 2  +
pop eax  +
pop ebp  +
retn   +
***
test eax ebx +
jz loc_1803CF5  +
not eax  +
mov dword_180B048 eax +
jmp loc_1803D49  +
test dword_180B044 ebx +
jz loc_1803D4D  +
jmp loc_1803D3A  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi offset dword_180BB60 +
mov ebx 0D3h +
mov eax [edi] +
mov esi [eax] +
cmp esi eax +
jz loc_1805649  +
push dword ptr [esi-4]  +
push dword ptr [esi-8]  +
push offset a1S2S  +
call PrintMessage  +
mov esi [esi] +
add esp 0Ch +
cmp esi [edi] +
jnz loc_1805630  +
add edi 4 +
dec ebx  +
jnz loc_1805628  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_1803631  +
movzx eax word ptr [ebp+var_4] +
mov edi dword_180BB60[eax*4] +
cmp [edi] edi +
jnz loc_18056A0  +
mov eax 0FF03h +
jmp loc_18056EA  +
mov ecx [edi] +
push ebx  +
push esi  +
jmp loc_18056DF  +
mov edx [ebp+arg_0] +
lea ebx [ecx-8] +
mov eax [ebx] +
mov si [edx] +
cmp si [eax] +
jnz loc_18056D4  +
test si si +
jz loc_18056D0  +
mov si [edx+2] +
cmp si [eax+2] +
jnz loc_18056D4  +
add edx 4 +
add eax 4 +
test si si +
jnz loc_18056AE  +
xor eax eax +
jmp loc_18056D9  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_18056EF  +
mov ecx [ecx] +
cmp ecx edi +
jnz loc_18056A6  +
mov eax 0FF03h +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 4  +
mov eax [ecx] +
mov ecx [ecx+4] +
mov esi ds:GetProcessHeap +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [ebx]  +
push 0  +
call esi  +
mov edi ds:HeapFree +
push eax  +
call edi  +
push dword ptr [ebx+4]  +
push 0  +
call esi  +
push eax  +
call edi  +
push ebx  +
push 0  +
call esi  +
push eax  +
call edi  +
xor eax eax +
jmp loc_18056E8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub esp 0Ch +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1805737  +
sub eax edx +
sar eax 1 +
inc eax  +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_180574F  +
push ebx  +
sub eax ecx +
push esi  +
sar eax 1 +
lea ebx [eax+1] +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_C] ebx +
call sub_1803631  +
movzx eax word ptr [ebp+var_4] +
lea eax dword_180BB60[eax*4] +
mov [ebp+var_4] eax +
mov eax [eax] +
mov esi [eax] +
jmp loc_18057BD  +
mov ecx [esi-8] +
mov edx [ebp+arg_0] +
mov di [edx] +
cmp di [ecx] +
jnz loc_18057B2  +
test di di +
jz loc_18057AE  +
mov di [edx+2] +
cmp di [ecx+2] +
jnz loc_18057B2  +
add edx 4 +
add ecx 4 +
test di di +
jnz loc_180578C  +
xor ecx ecx +
jmp loc_18057B7  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_18057FC  +
mov esi [esi] +
cmp esi eax +
jnz loc_1805786  +
mov edi ds:GetProcessHeap +
push 10h  +
push 0  +
call edi  +
mov ebx ds:HeapAlloc +
push eax  +
call ebx  +
mov esi eax +
test esi esi +
jz loc_1805826  +
mov eax [ebp+var_8] +
add eax eax +
push eax  +
push 0  +
call edi  +
push eax  +
call ebx  +
mov [esi] eax +
test eax eax +
jnz loc_1805846  +
push esi  +
push eax  +
call edi  +
push eax  +
call ds:HeapFree  +
jmp loc_1805826  +
push dword ptr [esi-4]  +
mov edi ds:GetProcessHeap +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
lea eax [ebx+ebx] +
push eax  +
push 0  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [esi-4] eax +
test eax eax +
jnz loc_180583A  +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
push 8  +
pop eax  +
jmp loc_18058A3  +
push [ebp+arg_4]  +
push ebx  +
push eax  +
call sub_1801E5F  +
jmp loc_18058A1  +
mov eax [ebp+var_C] +
add eax eax +
push eax  +
push 0  +
call edi  +
push eax  +
call ebx  +
mov [esi+4] eax +
test eax eax +
jnz loc_1805872  +
push dword ptr [esi]  +
push eax  +
call edi  +
mov ebx ds:HeapFree +
push eax  +
call ebx  +
push esi  +
push 0  +
call edi  +
push eax  +
call ebx  +
jmp loc_1805826  +
push [ebp+arg_0]  +
push [ebp+var_8]  +
push dword ptr [esi]  +
call sub_1801E5F  +
push [ebp+arg_4]  +
push [ebp+var_C]  +
push dword ptr [esi+4]  +
call sub_1801E5F  +
mov ecx [ebp+var_4] +
mov ecx [ecx] +
mov edx [ecx] +
lea eax [esi+8] +
mov [eax] edx +
mov [eax+4] ecx +
mov [edx+4] eax +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push 3  +
call sub_18068CA  +
cmp [ebp+var_4] 0 +
jnz loc_18058DE  +
lea eax [ebp+var_4] +
push eax  +
push 2  +
call sub_18068CA  +
mov eax [ebp+arg_18] +
mov dword ptr [eax] 1 +
xor eax eax +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
sub eax ecx +
dec eax  +
jz loc_1805909  +
mov eax 3A99h +
jmp loc_1805914  +
mov eax [ebp+0Ch] +
push dword ptr [eax+ecx*4]  +
call sub_18077CF  +
pop ebp  +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-4] +
push eax  +
push 4  +
call sub_18068CA  +
xor eax eax +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-4] +
push eax  +
push 1  +
call sub_18068CA  +
xor eax eax +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax [ebp+10h] +
push esi  +
mov esi [ebp+14h] +
push edi  +
xor edi edi +
sub esi eax +
mov dword ptr [ebp-38h] offset aName +
mov [ebp-34h] edi +
mov [ebp-30h] edi +
mov dword ptr [ebp-2Ch] offset aUser +
mov [ebp-28h] edi +
mov [ebp-24h] edi +
mov dword ptr [ebp-20h] offset aPwd +
mov [ebp-1Ch] edi +
mov [ebp-18h] edi +
mov [ebp-8] edi +
mov [ebp-0Ch] edi +
mov [ebp-4] edi +
mov [ebp-14h] edi +
cmp esi 1 +
jnb loc_18059AE  +
push edi  +
push edi  +
push edi  +
call sub_1807861  +
jmp loc_1805AB0  +
push ebx  +
cmp esi 3 +
ja loc_1805AAA  +
mov ecx [ebp+0Ch] +
lea ebx [ecx+eax*4] +
push offset aHelp  +
push dword ptr [ebx]  +
call MatchToken  +
test eax eax +
jnz loc_1805AAA  +
push offset word_1801FCC  +
push dword ptr [ebx]  +
call MatchToken  +
test eax eax +
jnz loc_1805AAA  +
mov ebx ds:GetProcessHeap +
mov eax esi +
shl eax 2 +
push eax  +
push edi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-10h] eax +
cmp eax edi +
jz loc_1805AFE  +
push eax  +
push 3  +
lea eax [ebp-38h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push hInstance  +
call MatchTagsInCmdLine  +
mov [ebp+14h] eax +
cmp eax edi +
jz loc_1805A46  +
push dword ptr [ebp-10h]  +
push edi  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+14h] +
cmp eax 3AA1h +
jz loc_1805B2A  +
jmp loc_1805AAF  +
xor eax eax +
cmp esi edi +
jbe loc_1805B34  +
mov ecx [ebp-10h] +
mov ecx [ecx+eax*4] +
sub ecx edi +
jz loc_1805A84  +
dec ecx  +
jz loc_1805A74  +
dec ecx  +
jz loc_1805A64  +
mov eax esi +
jmp loc_1805A92  +
mov ecx [ebp+10h] +
mov edx [ebp+0Ch] +
add ecx eax +
mov ecx [edx+ecx*4] +
mov [ebp-4] ecx +
jmp loc_1805A92  +
mov ecx [ebp+10h] +
mov edx [ebp+0Ch] +
add ecx eax +
mov ecx [edx+ecx*4] +
mov [ebp-0Ch] ecx +
jmp loc_1805A92  +
mov ecx [ebp+10h] +
mov edx [ebp+0Ch] +
add ecx eax +
mov ecx [edx+ecx*4] +
mov [ebp-8] ecx +
inc eax  +
cmp eax esi +
jb loc_1805A50  +
cmp [ebp-8] edi +
jnz loc_1805AB6  +
cmp [ebp-0Ch] edi +
jnz loc_1805AAA  +
cmp [ebp-4] edi +
jz loc_1805B34  +
mov eax 3AA5h +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 1Ch  +
***
cmp [ebp-4] edi +
jz loc_1805B34  +
push offset word_1805574  +
push dword ptr [ebp-4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1805B34  +
push dword ptr [ebp-8]  +
mov [ebp+10h] edi +
push 0A9h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
push 208h  +
push edi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-4] eax +
cmp eax edi +
jnz loc_1805B03  +
push 8  +
pop eax  +
jmp loc_1805AAF  +
***
lea ecx [ebp+10h] +
push ecx  +
push 104h  +
push eax  +
mov dword ptr [ebp-14h] 1 +
call sub_1807A5D  +
test eax eax +
jz loc_1805B34  +
push dword ptr [ebp-4]  +
push edi  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax 3A99h +
jmp loc_1805AAF  +
***
push dword ptr [ebp-4]  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-8]  +
call sub_1807861  +
mov esi ds:HeapFree +
mov [ebp+14h] eax +
cmp [ebp-14h] edi +
jz loc_1805B59  +
push dword ptr [ebp-4]  +
push edi  +
call ebx  +
push eax  +
call esi  +
push dword ptr [ebp-10h]  +
push edi  +
call ebx  +
push eax  +
call esi  +
mov eax [ebp+14h] +
cmp eax edi +
jz loc_1805B8B  +
mov esi 3AA0h +
cmp eax esi +
jnz loc_1805AAF  +
push esi  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
mov eax esi +
jmp loc_1805AAF  +
***
xor eax eax +
jmp loc_1805AAF  +
***
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax [ebp+10h] +
or dword ptr [ebp-10h] 0FFFFFFFFh +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+14h] +
sub edi eax +
mov dword ptr [ebp-2Ch] offset aMode +
mov dword ptr [ebp-28h] 1 +
mov [ebp-24h] ebx +
mov dword ptr [ebp-20h] offset aName +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov [ebp-4] ebx +
mov [ebp-8] edi +
jz loc_1805E7F  +
cmp edi 2 +
ja loc_1805E7F  +
mov ecx [ebp+0Ch] +
lea esi [ecx+eax*4] +
push offset aHelp  +
push dword ptr [esi]  +
call MatchToken  +
test eax eax +
jnz loc_1805E7F  +
push offset word_1801FCC  +
push dword ptr [esi]  +
call MatchToken  +
test eax eax +
jnz loc_1805E7F  +
mov esi ds:GetProcessHeap +
mov eax edi +
shl eax 2 +
push eax  +
push ebx  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-0Ch] eax +
cmp eax ebx +
jnz loc_1805C4A  +
push 8  +
pop eax  +
jmp loc_1805E84  +
push eax  +
push 2  +
lea eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push hInstance  +
call MatchTagsInCmdLine  +
mov [ebp+14h] eax +
cmp eax ebx +
jz loc_1805C8F  +
push dword ptr [ebp-0Ch]  +
push ebx  +
call esi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+14h] +
cmp eax 3AA1h +
jnz loc_1805E84  +
add eax 0FFFFFFF8h +
jmp loc_1805E84  +
xor esi esi +
cmp edi ebx +
jbe loc_1805D56  +
mov eax [ebp-0Ch] +
lea eax [eax+esi*4] +
mov [ebp-14h] eax +
mov eax [eax] +
sub eax ebx +
jz loc_1805CCC  +
dec eax  +
jz loc_1805CB9  +
mov esi edi +
mov dword ptr [ebp+14h] 3A99h +
jmp loc_1805D4D  +
mov eax [ebp+10h] +
mov ecx [ebp+0Ch] +
add eax esi +
mov eax [ecx+eax*4] +
mov [ebp-4] eax +
jmp loc_1805D4D  +
mov eax [ebp+10h] +
mov ecx [ebp+0Ch] +
add eax esi +
lea edi [ecx+eax*4] +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-44h] +
push eax  +
push 3  +
push dword ptr [edi]  +
mov dword ptr [ebp-44h] offset aOpen +
push hInstance  +
mov [ebp-40h] ebx +
mov dword ptr [ebp-3Ch] offset aAppend +
mov dword ptr [ebp-38h] 1 +
mov dword ptr [ebp-34h] offset aClose +
mov dword ptr [ebp-30h] 2 +
call MatchEnumTag  +
mov [ebp+14h] eax +
cmp eax ebx +
jz loc_1805D4A  +
mov eax [ebp-14h] +
mov eax [eax] +
imul eax eax +
push dword ptr [ebp+eax-2Ch]  +
push dword ptr [edi]  +
push 3AA6h  +
push hInstance  +
call PrintMessageFromModule  +
mov esi [ebp-8] +
add esp 10h +
mov dword ptr [ebp+14h] 3AA5h +
mov edi esi +
jmp loc_1805D4D  +
mov edi [ebp-8] +
inc esi  +
cmp esi edi +
jb loc_1805C99  +
push dword ptr [ebp-0Ch]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+14h] +
cmp eax ebx +
jz loc_1805D90  +
mov esi 3AA0h +
cmp eax esi +
jnz loc_1805E84  +
push esi  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
mov eax esi +
jmp loc_1805E84  +
mov eax [ebp-10h] +
sub eax ebx +
jz loc_1805E35  +
dec eax  +
jz loc_1805DCD  +
dec eax  +
jnz loc_1805E7B  +
cmp [ebp-4] ebx +
jnz loc_1805E7F  +
mov eax hObject +
cmp eax ebx +
jz loc_1805E7B  +
push eax  +
call ds:CloseHandle  +
mov hObject ebx +
jmp loc_1805E7B  +
cmp [ebp-4] ebx +
jz loc_1805E7F  +
mov eax hObject +
mov edi ds:CloseHandle +
cmp eax ebx +
jz loc_1805DEE  +
push eax  +
call edi  +
mov hObject ebx +
push ebx  +
push 80h  +
push 4  +
push ebx  +
push 1  +
push 40000000h  +
push dword ptr [ebp-4]  +
call ds:CreateFileW  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1805E6E  +
push 2  +
push ebx  +
push ebx  +
push esi  +
call ds:SetFilePointer  +
cmp eax 0FFFFFFFFh +
jnz loc_1805E2D  +
call ds:__imp_GetLastError  +
push esi  +
mov ebx eax +
call edi  +
mov eax ebx +
jmp loc_1805E84  +
mov hObject esi +
jmp loc_1805E7B  +
cmp [ebp-4] ebx +
jz loc_1805E7F  +
mov eax hObject +
cmp eax ebx +
jz loc_1805E50  +
push eax  +
call ds:CloseHandle  +
mov hObject ebx +
push ebx  +
push 80h  +
push 2  +
push ebx  +
push 1  +
push 40000000h  +
push dword ptr [ebp-4]  +
call ds:CreateFileW  +
cmp eax 0FFFFFFFFh +
jnz loc_1805E76  +
call ds:__imp_GetLastError  +
jmp loc_1805E84  +
mov hObject eax +
xor eax eax +
jmp loc_1805E84  +
mov eax 3AA5h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
push ebx  +
xor ebx ebx +
push esi  +
inc ebx  +
xor esi esi +
sub eax ecx +
push edi  +
mov dword ptr [ebp-1Ch] offset aMode +
mov [ebp-18h] ebx +
mov [ebp-14h] esi +
cmp eax ebx +
jnz loc_1806059  +
mov eax [ebp+0Ch] +
lea edi [eax+ecx*4] +
push offset aHelp  +
push dword ptr [edi]  +
call MatchToken  +
test eax eax +
jnz loc_1806059  +
push offset word_1801FCC  +
push dword ptr [edi]  +
call MatchToken  +
test eax eax +
jnz loc_1806059  +
mov edi ds:GetProcessHeap +
push 4  +
push esi  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp-4] eax +
cmp eax esi +
jnz loc_1805F33  +
push 8  +
pop eax  +
jmp loc_180605E  +
push eax  +
push ebx  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push hInstance  +
call MatchTagsInCmdLine  +
mov [ebp+14h] eax +
cmp eax esi +
jz loc_1805F77  +
push dword ptr [ebp-4]  +
push esi  +
call edi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+14h] +
cmp eax 3AA1h +
jnz loc_180605E  +
add eax 0FFFFFFF8h +
jmp loc_180605E  +
xor edi edi +
mov eax [ebp-4] +
lea eax [eax+edi*4] +
mov [ebp-8] eax +
cmp [eax] esi +
jz loc_1805F91  +
mov edi ebx +
mov dword ptr [ebp+14h] 3A99h +
jmp loc_1805FFA  +
mov eax [ebp+10h] +
mov ecx [ebp+0Ch] +
add eax edi +
mov [ebp-20h] esi +
lea esi [ecx+eax*4] +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push 2  +
push dword ptr [esi]  +
mov dword ptr [ebp-2Ch] offset aOnline +
push hInstance  +
mov [ebp-28h] ebx +
mov dword ptr [ebp-24h] offset aOffline +
call MatchEnumTag  +
mov [ebp+14h] eax +
test eax eax +
jz loc_1805FF8  +
mov eax [ebp-8] +
mov eax [eax] +
push dword ptr [esi]  +
imul eax eax +
push dword ptr [ebp+eax-1Ch]  +
push 3AA6h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 10h +
mov edi ebx +
mov dword ptr [ebp+14h] 57h +
xor esi esi +
inc edi  +
cmp edi ebx +
jb loc_1805F79  +
push dword ptr [ebp-4]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+14h] +
cmp eax esi +
jz loc_1806036  +
mov esi 3AA0h +
cmp eax esi +
jnz loc_180605E  +
push esi  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
mov eax esi +
jmp loc_180605E  +
mov eax [ebp-0Ch] +
sub eax esi +
jz loc_1806047  +
dec eax  +
jnz loc_1806054  +
lea eax [ebp-10h] +
push eax  +
push esi  +
jmp loc_180604C  +
lea eax [ebp-10h] +
push eax  +
push ebx  +
call sub_18068CA  +
mov [ebp+14h] eax +
mov eax [ebp+14h] +
jmp loc_180605E  +
mov eax 3AA5h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-4] +
push eax  +
push 0  +
call sub_18068CA  +
xor eax eax +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push 2  +
call sub_18068CA  +
xor eax eax +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
sub eax ecx +
dec eax  +
push edi  +
jz loc_18060BA  +
mov edi 3A99h +
jmp loc_18060E8  +
mov eax [ebp+0Ch] +
push esi  +
lea esi [eax+ecx*4] +
push dword ptr [esi]  +
call sub_1805677  +
mov edi eax +
test edi edi +
jnz loc_18060D5  +
mov edi 3AA7h +
jmp loc_18060E7  +
push dword ptr [esi]  +
push 64h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push dword_180B050  +
call sub_180679B  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
inc eax  +
cmp dword_1817EE4 0 +
jz loc_180612A  +
push 3  +
pop eax  +
mov ecx [ebp+arg_C] +
push 0  +
dec ecx  +
push ecx  +
push [ebp+arg_10]  +
push eax  +
push dword_180B050  +
call sub_1808693  +
pop ebp  +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-4] +
push eax  +
push 3  +
call sub_18068CA  +
cmp dword ptr [ebp-4] 0 +
jz loc_1806167  +
push offset aOnline  +
jmp loc_180616C  +
push offset aOffline  +
call PrintMessage  +
pop ecx  +
push offset dword_1802008  +
call PrintMessage  +
pop ecx  +
xor eax eax +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push offset aNetsh_1  +
lea eax [ebp+var_4] +
push eax  +
call sub_1803555  +
test eax eax +
jnz locret_1806244  +
mov eax [ebp+var_4] +
push ebx  +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi ds:GetProcessHeap +
cmp [eax] eax +
jz loc_18061E8  +
mov ecx [eax] +
cmp [ecx] eax +
jz loc_18061E8  +
mov ebx [eax+4] +
mov eax [ebx+8] +
test eax eax +
jz loc_18061D3  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
mov eax [ebx] +
mov ecx [ebx+4] +
push ebx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
call edi  +
push eax  +
call esi  +
mov eax [ebp+var_4] +
push 2000h  +
push offset aNetsh_1  +
push eax  +
call sub_180396E  +
mov eax [ebp+var_4] +
mov ebx [eax] +
mov [ebp+var_8] ebx +
cmp ebx eax +
jnz loc_1806209  +
jmp loc_1806235  +
mov ebx [ebp+var_8] +
mov eax [ebx+8] +
test eax eax +
jz loc_1806218  +
push eax  +
push 0  +
call edi  +
push eax  +
call esi  +
mov ecx [ebp+var_8] +
mov ebx [ebx] +
mov eax [ecx+4] +
push ecx  +
mov [eax] ebx +
push 0  +
mov [ebx+4] eax +
call edi  +
push eax  +
call esi  +
mov [ebp+var_8] ebx +
cmp ebx [ebp+var_4] +
jnz loc_1806206  +
push [ebp+var_4]  +
push 0  +
call edi  +
push eax  +
call esi  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 1Ch  +
***
cmp dword_1817F18 0 +
jnz locret_180626F  +
mov eax offset dword_1818D50 +
mov dword_1817F18 1 +
mov dword_1818D54 eax +
mov dword_1818D50 eax +
retn   +
***
push ebp  +
mov ebp esp +
mov eax 400Ch +
call sub_1801BEC  +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+14h] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+10h] +
xor ebx ebx +
sub eax edi +
sub eax ebx +
jz loc_18063A2  +
dec eax  +
jz loc_1806360  +
lea eax [esi+edi*4] +
push ebx  +
push dword ptr [eax]  +
mov [ebp-400Ch] eax +
call sub_1807217  +
test eax eax +
jz loc_18062D9  +
push 3EAh  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
jmp loc_18063A7  +
xor eax eax +
lea ebx [edi+1] +
mov [ebp-4004h] ax +
cmp ebx [ebp+14h] +
jnb loc_1806317  +
mov edi 2000h +
push dword ptr [esi+ebx*4]  +
lea eax [ebp-4004h] +
push edi  +
push eax  +
call sub_180270E  +
push offset word_180200C  +
push edi  +
lea eax [ebp-4004h] +
push eax  +
call sub_180270E  +
inc ebx  +
cmp ebx [ebp+14h] +
jb loc_18062EF  +
lea eax [ebp-4004h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1806320  +
sub eax edx +
sar eax 1 +
xor ecx ecx +
mov [ebp+eax*2-4006h] cx +
lea eax [ebp-4004h] +
push eax  +
mov eax [ebp-400Ch] +
push dword ptr [eax]  +
call sub_1805729  +
mov ebx eax +
test ebx ebx +
jnz loc_1806359  +
mov ebx 3AA7h +
jmp loc_18063A7  +
push 65h  +
jmp loc_18062C7  +
***
lea eax [ebp-4008h] +
push eax  +
lea esi [esi+edi*4] +
push dword ptr [esi]  +
call sub_18035F9  +
cmp [ebp-4008h] ebx +
jz loc_180638E  +
push dword ptr [ebp-4008h]  +
push offset a1S_0  +
call PrintMessage  +
jmp loc_18062D2  +
***
push dword ptr [esi]  +
push 64h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
jmp loc_18063A7  +
call sub_1805619  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
call sub_180624D  +
mov edi ds:GetProcessHeap +
push 4008h  +
push ebx  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_18063EE  +
push 8  +
pop eax  +
jmp loc_1806460  +
push offset aNetsh_1  +
push 2000h  +
lea eax [esi+8] +
push eax  +
call sub_1801E5F  +
mov eax dword_1818D50 +
mov ecx [ebp+10h] +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1818D50 +
mov [eax+4] esi +
mov eax [ebp+14h] +
mov dword_1818D50 esi +
cmp eax ecx +
jbe loc_180645E  +
lea edx [ebp+14h] +
push edx  +
mov edx [ebp+0Ch] +
lea edx [edx+ecx*4] +
push edx  +
sub eax ecx +
push eax  +
call sub_1802908  +
cmp [ebp+14h] ebx +
jz loc_18063E9  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+14h]  +
call ProcessCommand  +
mov ebx eax +
test ebx ebx +
jz loc_1806450  +
mov ebx 3AA9h +
push dword ptr [ebp+14h]  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov esi dword_1818D50 +
cmp esi offset dword_1818D50 +
jz loc_18064AF  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
lea eax [esi+8] +
push eax  +
push 2000h  +
push offset aNetsh_1  +
call sub_1801E5F  +
push esi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop esi  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 80000000h +
test [eax+1Ch] ecx +
jz loc_18064D1  +
mov eax [eax+20h] +
jmp loc_18064D4  +
push 64h  +
pop eax  +
mov edx [ebp+arg_4] +
test [edx+1Ch] ecx +
jz loc_18064E1  +
mov edx [edx+20h] +
jmp loc_18064E4  +
push 64h  +
pop edx  +
sub eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [esi+38h] +
imul edi [esi+40h] +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_180651F  +
push 8  +
pop eax  +
jmp loc_1806576  +
push edi  +
push dword ptr [esi+3Ch]  +
push ebx  +
call memcpy  +
push offset sub_18064BA  +
push dword ptr [esi+40h]  +
push dword ptr [esi+38h]  +
push ebx  +
call ds:qsort  +
xor edi edi +
add esp 1Ch +
cmp [esi+38h] edi +
jbe loc_1806563  +
mov eax [esi+40h] +
push [ebp+arg_4]  +
imul eax edi +
add eax ebx +
push eax  +
call sub_1806889  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1806563  +
inc edi  +
cmp edi [esi+38h] +
jb loc_1806545  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ax [ebp+arg_4] +
push [ebp+arg_8]  +
mov word ptr [ebp+var_8+2] ax +
mov word ptr [ebp+var_8] ax +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlGUIDFromString  +
neg eax  +
sbb eax eax +
and eax 57h +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp [edi+38h] ebx +
jbe loc_18065E8  +
mov esi [edi+40h] +
imul esi ebx +
add esi [edi+3Ch] +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
call MatchToken  +
test eax eax +
jnz loc_18065F4  +
inc ebx  +
cmp ebx [edi+38h] +
jb loc_18065CA  +
mov eax 490h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_8] +
mov [eax] esi +
xor eax eax +
jmp loc_18065ED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+38h] +
cmp [ebp+arg_4] eax +
jb loc_180661B  +
push 57h  +
pop eax  +
jmp loc_18066A4  +
push ebx  +
push edi  +
cmp eax 1 +
jb loc_180664E  +
mov edi [esi+40h] +
lea ecx [eax-1] +
or eax 0FFFFFFFFh +
xor edx edx +
div  edi +
cmp ecx eax +
ja loc_180664E  +
imul ecx edi +
mov edi ds:GetProcessHeap +
push ecx  +
push 0  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_1806653  +
push 8  +
pop eax  +
jmp loc_18066A2  +
mov eax [esi+40h] +
imul eax [ebp+arg_4] +
push eax  +
push dword ptr [esi+3Ch]  +
push ebx  +
call memcpy  +
mov ecx [ebp+arg_4] +
mov edx [esi+38h] +
mov eax [esi+40h] +
sub edx ecx +
dec edx  +
imul edx eax +
push edx  +
lea edx [ecx+1] +
imul edx eax +
imul eax ecx +
add edx [esi+3Ch] +
add eax ebx +
push edx  +
push eax  +
call memcpy  +
add esp 18h +
push dword ptr [esi+3Ch]  +
dec dword ptr [esi+38h]  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
mov [esi+3Ch] ebx +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_0] +
add eax 0Ch +
push eax  +
call sub_1802111  +
test eax eax +
jnz locret_180673A  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_0] +
add eax 20h +
push ecx  +
push eax  +
mov [ebp+var_8] eax +
call sub_1802111  +
test eax eax +
jnz locret_180673A  +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_0] +
add eax 20h +
push eax  +
call sub_1802111  +
test eax eax +
jnz locret_180673A  +
and [ebp+arg_0] eax +
mov eax [ebp+var_4] +
mov ecx [eax+38h] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_C] ecx +
test ecx ecx +
jbe loc_1806732  +
mov ecx [eax+3Ch] +
mov eax [eax+40h] +
mov [ebp+var_4] ecx +
lea edx [ecx+0Ch] +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi edx +
xor ebx ebx +
cmps   +
jz loc_180673E  +
inc [ebp+arg_0]  +
mov ecx [ebp+arg_0] +
add [ebp+var_4] eax +
add edx eax +
cmp ecx [ebp+var_C] +
jb loc_1806714  +
mov eax 490h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor eax eax +
jmp loc_1806737  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_18066AE  +
mov esi [ebp+arg_4] +
test eax eax +
jnz loc_1806777  +
push esi  +
push [ebp+arg_0]  +
call sub_180674F  +
test eax eax +
jnz loc_1806790  +
cmp dword ptr [esi] 0 +
jz loc_1806787  +
push offset word_180200C  +
push esi  +
call sub_180295F  +
push dword ptr [edi+8]  +
push esi  +
call sub_180295F  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+38h] +
test eax eax +
jz loc_18067C0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword_1817EC0  +
call eax  +
test eax eax +
jnz loc_18067E2  +
lea eax [ebp+arg_0] +
push eax  +
add esi 0Ch +
push esi  +
call sub_1802111  +
test eax eax +
jnz loc_18067E2  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_18067EE  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [esi+38h] +
imul edi [esi+40h] +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_1806820  +
push 8  +
pop eax  +
jmp loc_180687D  +
push edi  +
push dword ptr [esi+3Ch]  +
push ebx  +
call memcpy  +
push offset sub_18064BA  +
push dword ptr [esi+40h]  +
push dword ptr [esi+38h]  +
push ebx  +
call ds:qsort  +
xor edi edi +
add esp 1Ch +
cmp [esi+38h] edi +
jbe loc_180686A  +
mov eax [esi+40h] +
push [ebp+arg_C]  +
imul eax edi +
push [ebp+arg_8]  +
add eax ebx +
push [ebp+arg_4]  +
push eax  +
call sub_180679B  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_180686A  +
inc edi  +
cmp edi [esi+38h] +
jb loc_1806846  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+34h] +
test eax eax +
jz loc_18068A2  +
push [ebp+arg_4]  +
call eax  +
test eax eax +
jnz loc_18068BE  +
lea eax [ebp+arg_0] +
push eax  +
add esi 0Ch +
push esi  +
call sub_1802111  +
test eax eax +
jnz loc_18068BE  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_18064ED  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_18068F7  +
dec eax  +
jz loc_18068EE  +
dec eax  +
dec eax  +
jnz loc_1806901  +
mov eax [ebp+arg_4] +
mov ecx dword_1817ECC +
mov [eax] ecx +
xor eax eax +
jmp locret_180693C  +
and dword_1817ECC 0 +
jmp loc_1806901  +
mov dword_1817ECC 1 +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
call sub_18030F4  +
test eax eax +
jnz locret_180693C  +
push esi  +
push [ebp+arg_0]  +
mov esi [ebp+arg_4] +
push esi  +
call sub_1806889  +
test eax eax +
jz loc_180693B  +
push dword ptr [esi+8]  +
push 6Dh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
mov eax 3AA9h +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_1802111  +
test eax eax +
jnz locret_18069B4  +
lea eax [ebp+var_8] +
push eax  +
mov eax [ebp+var_4] +
add eax 20h +
push eax  +
call sub_1802111  +
test eax eax +
jnz locret_18069B4  +
and [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+var_8] +
cmp [ebx+38h] eax +
jbe loc_18069B1  +
push esi  +
push edi  +
mov eax [ebx+40h] +
imul eax [ebp+var_4] +
mov edx [ebx+3Ch] +
mov edi [ebp+arg_0] +
push 4  +
lea esi [eax+edx+0Ch] +
pop ecx  +
xor eax eax +
cmps   +
jnz loc_18069A4  +
push [ebp+var_4]  +
push ebx  +
call sub_1806602  +
dec [ebp+var_4]  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebx+38h] +
jb loc_180697E  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
cmp esi dword_180B054 +
jb loc_18069D7  +
push 57h  +
pop eax  +
jmp loc_1806A95  +
mov eax dword_180B080 +
imul esi esi +
mov eax [esi+eax+1Ch] +
test eax eax +
jz loc_18069EB  +
push 0  +
call eax  +
lea eax [ebp+var_4] +
push eax  +
mov eax dword_180B080 +
lea eax [esi+eax+20h] +
push eax  +
call sub_18018B0  +
test eax eax +
jnz loc_1806A11  +
mov eax dword_180B080 +
lea eax [esi+eax+8] +
push eax  +
call sub_1806945  +
mov eax dword_180B054 +
push ebx  +
push edi  +
cmp eax 1 +
jb loc_1806A40  +
dec eax  +
cmp eax 38E38E3h +
ja loc_1806A40  +
mov ebx ds:GetProcessHeap +
imul eax eax +
push eax  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_1806A45  +
push 8  +
pop eax  +
jmp loc_1806A93  +
push esi  +
push dword_180B080  +
push edi  +
call memcpy  +
mov eax dword_180B054 +
sub eax [ebp+arg_0] +
dec eax  +
imul eax eax +
push eax  +
mov eax dword_180B080 +
lea eax [esi+eax+48h] +
push eax  +
add esi edi +
push esi  +
call memcpy  +
add esp 18h +
push dword_180B080  +
dec dword_180B054  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov dword_180B080 edi +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp dword_180B058 edi +
jbe loc_1806AE0  +
xor esi esi +
push [ebp+arg_0]  +
mov eax lpMem +
push dword ptr [esi+eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1806AEA  +
inc ebx  +
add esi 14h +
mov [ebp+var_4] ebx +
cmp ebx dword_180B058 +
jb loc_1806ABA  +
mov eax 490h +
jmp loc_1806C7B  +
xor esi esi +
cmp dword_180B054 edi +
jbe loc_1806B17  +
mov eax dword_180B080 +
cmp [edi+eax+30h] ebx +
jnz loc_1806B09  +
push esi  +
call sub_18069BD  +
dec esi  +
sub edi 48h +
inc esi  +
add edi 48h +
cmp esi dword_180B054 +
jb loc_1806AF4  +
xor edi edi +
cmp [ebp+arg_4] edi +
jz loc_1806B80  +
lea eax [ebp+hKey] +
push eax  +
push 0F003Fh  +
push edi  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov esi eax +
cmp esi edi +
jnz loc_1806B63  +
mov ecx lpMem +
mov eax ebx +
imul eax eax +
push dword ptr [eax+ecx+4]  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
push [ebp+hKey]  +
mov esi eax +
call ds:RegCloseKey  +
cmp esi edi +
jz loc_1806B80  +
push [ebp+arg_0]  +
push 3E9h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
mov eax esi +
jmp loc_1806C7B  +
mov eax lpMem +
mov esi ebx +
imul esi esi +
push dword ptr [esi+eax]  +
push edi  +
mov edi ds:GetProcessHeap +
call edi  +
mov ebx ds:HeapFree +
push eax  +
call ebx  +
mov eax lpMem +
and dword ptr [esi+eax] 0 +
mov eax lpMem +
push dword ptr [esi+eax+4]  +
push 0  +
call edi  +
push eax  +
call ebx  +
mov eax lpMem +
and dword ptr [esi+eax+4] 0 +
mov eax dword_180B058 +
dec eax  +
imul eax eax +
push eax  +
push 0  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_1806BE6  +
push 8  +
pop eax  +
jmp loc_1806C7B  +
push esi  +
push lpMem  +
push eax  +
call memcpy  +
mov eax dword_180B058 +
sub eax [ebp+var_4] +
dec eax  +
imul eax eax +
push eax  +
mov eax lpMem +
lea eax [esi+eax+14h] +
push eax  +
mov eax [ebp+arg_4] +
add eax esi +
push eax  +
call memcpy  +
add esp 18h +
dec dword_180B058  +
xor ecx ecx +
mov [ebp+arg_0] ecx +
cmp dword_180B054 ecx +
jbe loc_1806C4E  +
mov eax dword_180B080 +
mov edx [ebp+var_4] +
lea eax [ecx+eax+30h] +
cmp [eax] edx +
jbe loc_1806C3D  +
dec dword ptr [eax]  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add ecx 48h +
cmp eax dword_180B054 +
jb loc_1806C2B  +
mov eax lpMem +
add esi eax +
cmp dword ptr [esi+8] 0 +
jz loc_1806C64  +
push dword ptr [esi+0Ch]  +
call ds:__imp_FreeLibrary  +
push lpMem  +
push 0  +
call edi  +
push eax  +
call ebx  +
mov eax [ebp+arg_4] +
mov lpMem eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+14h] +
mov eax [ebp+10h] +
sub ecx eax +
cmp ecx 1 +
jz loc_1806CA0  +
mov eax 3A99h +
jmp loc_1806CD0  +
mov ecx [ebp+0Ch] +
push esi  +
push 1  +
push dword ptr [ecx+eax*4]  +
call sub_1806A9F  +
mov esi eax +
cmp esi 8 +
jnz loc_1806CC4  +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_1806CCD  +
mov esi 3AA7h +
mov eax esi +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+9] +
push ecx  +
movzx ecx byte ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+4] +
push ecx  +
push dword ptr [eax]  +
push offset a08x04x04x02x02  +
push 28h  +
push [ebp+arg_4]  +
call sub_1801843  +
add esp 38h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor edi edi +
mov [ebp+var_A8] eax +
cmp dword_180B058 ebx +
jbe loc_1806DF4  +
xor esi esi +
push [ebp+var_A8]  +
mov eax lpMem +
push dword ptr [esi+eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1806EF5  +
inc edi  +
add esi 14h +
cmp edi dword_180B058 +
jb loc_1806DCA  +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push 0F003Fh  +
push ebx  +
push offset Class  +
push ebx  +
push offset SubKey  +
push 80000002h  +
call ds:RegCreateKeyExW  +
mov esi eax +
cmp esi ebx +
jnz loc_1806EDA  +
push [ebp+var_A8]  +
call ds:_wcsdup  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jnz loc_1806E4A  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push 8  +
pop eax  +
jmp loc_1806F10  +
mov esi ds:wcsrchr +
push 2Fh  +
push edi  +
mov ebx edi +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1806E68  +
push 5Ch  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1806E6B  +
lea ebx [eax+2] +
push ebx  +
push 50h  +
lea eax [ebp+ValueName] +
push eax  +
call sub_1801E5F  +
lea eax [ebp+ValueName] +
push 2Eh  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1806E90  +
xor ecx ecx +
mov [eax] cx +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1806E95  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push edi  +
push 1  +
push 0  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
push [ebp+hKey]  +
mov esi eax +
call ds:RegCloseKey  +
push edi  +
call ds:free  +
pop ecx  +
test esi esi +
jz loc_1806EF5  +
push [ebp+var_A8]  +
push 3E8h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
jmp loc_1806F0E  +
push [ebp+var_A8]  +
lea eax [ebp+ValueName] +
push eax  +
call sub_1801C9C  +
mov esi eax +
call sub_180256B  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
mov [ebp+var_68] eax +
cmp [edi+38h] eax +
jbe loc_1806FFF  +
mov esi [edi+40h] +
imul esi [ebp+var_68] +
add esi [edi+3Ch] +
lea eax [ebp+var_70] +
push eax  +
lea ebx [esi+0Ch] +
push ebx  +
call sub_1802111  +
test eax eax +
jnz loc_1806FFF  +
lea eax [ebp+var_64] +
push eax  +
push ebx  +
call ConvertGuidToString  +
mov eax [ebp+var_70] +
mov eax [eax+30h] +
mov ecx lpMem +
imul eax eax +
push dword ptr [eax+ecx]  +
lea eax [ebp+var_64] +
push eax  +
push 0C8h  +
push hInstance  +
call PrintMessageFromModule  +
mov ebx [ebp+arg_4] +
add esp 10h +
test ebx ebx +
jbe loc_1806FD0  +
mov [ebp+var_6C] ebx +
push 0C9h  +
push hInstance  +
call PrintMessageFromModule  +
dec [ebp+var_6C]  +
pop ecx  +
pop ecx  +
jnz loc_1806FB9  +
push dword ptr [esi+8]  +
push 0CAh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
inc ebx  +
push ebx  +
push [ebp+var_70]  +
call sub_1806F37  +
inc [ebp+var_68]  +
mov ecx [ebp+var_68] +
cmp ecx [edi+38h] +
jb loc_1806F5D  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 0CCh +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp-4] eax +
mov eax dword_180B04C +
mov [ebp-0C8h] eax +
push esi  +
lea eax [ebp-0C8h] +
push eax  +
lea eax [ebp-0CCh] +
push eax  +
call sub_18030F4  +
xor esi esi +
cmp eax esi +
jnz loc_1807162  +
push ebx  +
push edi  +
push 0CBh  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
push esi  +
push dword ptr [ebp-0C8h]  +
call sub_1806F37  +
xor edi edi +
xor ebx ebx +
cmp dword_180B058 esi +
jbe loc_18070C2  +
mov eax lpMem +
cmp dword ptr [esi+eax+8] 0 +
jnz loc_18070B6  +
test edi edi +
jnz loc_18070A2  +
push 0CCh  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
inc edi  +
mov eax lpMem +
push dword ptr [esi+eax]  +
push offset a1S_0  +
call PrintMessage  +
pop ecx  +
pop ecx  +
inc ebx  +
add esi 14h +
cmp ebx dword_180B058 +
jb loc_180707F  +
xor esi esi +
xor edi edi +
xor ebx ebx +
cmp dword_180B054 esi +
jbe loc_180715E  +
mov eax dword_180B080 +
add eax esi +
cmp dword ptr [eax+34h] 0 +
jnz loc_180714E  +
lea ecx [ebp-0C4h] +
push ecx  +
add eax 8 +
push eax  +
call ConvertGuidToString  +
lea eax [ebp-64h] +
push eax  +
mov eax dword_180B080 +
lea eax [esi+eax+20h] +
push eax  +
call ConvertGuidToString  +
test edi edi +
jnz loc_180711B  +
push 0CDh  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
inc edi  +
mov ecx lpMem +
lea eax [ebp-64h] +
push eax  +
mov eax dword_180B080 +
mov eax [esi+eax+30h] +
imul eax eax +
push dword ptr [eax+ecx]  +
lea eax [ebp-0C4h] +
push eax  +
push 0CEh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 14h +
inc ebx  +
add esi 48h +
cmp ebx dword_180B054 +
jb loc_18070D4  +
pop edi  +
xor eax eax +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_1801579  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_8] +
sub ecx eax +
push esi  +
cmp ecx 1 +
jnz loc_18071DA  +
mov ecx [ebp+arg_4] +
lea esi [ecx+eax*4] +
push offset aHelp  +
push dword ptr [esi]  +
call MatchToken  +
test eax eax +
jnz loc_18071DA  +
push offset word_1801FCC  +
push dword ptr [esi]  +
call MatchToken  +
test eax eax +
jnz loc_18071DA  +
push dword ptr [esi]  +
call sub_1806D9B  +
cmp eax 8 +
jnz loc_18071CF  +
push 68h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
mov eax 3AA9h +
test eax eax +
jnz loc_18071DF  +
mov eax 3AA7h +
jmp loc_18071DF  +
mov eax 3A99h +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 1 +
jnz loc_18071F8  +
xor eax eax +
jmp loc_180720E  +
mov eax [ebp+arg_4] +
mov ecx dword_180B070 +
add eax ecx +
sub eax dword_180B06C +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_18030F4  +
test eax eax +
jz loc_1807236  +
xor eax eax +
jmp locret_18072D6  +
push ebx  +
mov ebx ds:_wcsicmp +
push esi  +
push edi  +
xor edi edi +
cmp dword_1817ED4 edi +
jbe loc_180726F  +
mov esi offset off_180B200 +
mov eax [ebp+arg_4] +
test [esi+10h] eax +
jnz loc_1807263  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18072DA  +
inc edi  +
add esi 18h +
cmp edi dword_1817ED4 +
jb loc_180724E  +
xor edi edi +
cmp dword_1817ED8 edi +
jbe loc_180729F  +
mov esi offset off_180B1A0 +
mov eax [ebp+arg_4] +
test [esi+0Ch] eax +
jnz loc_1807293  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18072DA  +
inc edi  +
add esi 18h +
cmp edi dword_1817ED8 +
jb loc_180727E  +
mov ecx [ebp+var_4] +
xor esi esi +
cmp [ecx+38h] esi +
jbe loc_18072D1  +
mov eax [ecx+40h] +
mov edx [ebp+arg_4] +
imul eax esi +
add eax [ecx+3Ch] +
test [eax+1Ch] edx +
jnz loc_18072CB  +
push dword ptr [eax+8]  +
push [ebp+arg_0]  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18072DA  +
mov ecx [ebp+var_4] +
inc esi  +
cmp esi [ecx+38h] +
jb loc_18072A9  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor eax eax +
inc eax  +
jmp loc_18072D3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_1807302  +
mov eax [ebp+arg_0] +
jb loc_18072F9  +
cmp eax 0FFFFFFFFh +
ja loc_1807302  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_180730D  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_1807330  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_180733B  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
xor esi esi +
push dword ptr [edi]  +
mov [ebp+dwBytes] esi +
call sub_1807316  +
cmp eax esi +
jge loc_180736D  +
and eax 0FFFFh +
jmp loc_18073E3  +
push ebx  +
mov ebx [ebp+arg_4] +
lea eax [ebp+dwBytes] +
push eax  +
push 2  +
pop ecx  +
lea eax [ebx+1] +
mul  ecx +
push edx  +
push eax  +
call sub_18072E4  +
cmp eax esi +
jge loc_180738F  +
and eax 0FFFFh +
jmp loc_18073E2  +
mov eax [ebp+arg_8] +
mov eax [eax] +
push [ebp+dwBytes]  +
cmp eax esi +
jnz loc_18073AB  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
jmp loc_18073BA  +
push eax  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapReAlloc  +
mov esi eax +
test esi esi +
jnz loc_18073C5  +
push 8  +
pop eax  +
jmp loc_18073E2  +
mov eax [edi] +
push [ebp+arg_0]  +
mov ecx ebx +
sub ecx eax +
inc ecx  +
push ecx  +
lea eax [esi+eax*2] +
push eax  +
call sub_1801E5F  +
mov eax [ebp+arg_8] +
mov [eax] esi +
mov [edi] ebx +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi offset aNetsh_1 +
push 2000h  +
push esi  +
call sub_1801E5F  +
push esi  +
call ds:_wcslwr  +
pop ecx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
xor esi esi +
push eax  +
mov [ebp+lpMem] esi +
mov [ebp+var_10] esi +
call sub_18030F4  +
cmp eax esi +
jnz loc_1807648  +
push ebx  +
mov ebx [ebp+arg_4] +
lea eax [ebp+var_C] +
push eax  +
push dword ptr [ebx]  +
push [ebp+var_14]  +
call sub_18065B8  +
test eax eax +
jnz loc_1807462  +
mov ecx [ebp+arg_8] +
mov eax [ebp+var_C] +
not ecx  +
test [eax+1Ch] ecx +
jz loc_180746C  +
mov eax 3A9Ch +
jmp loc_1807647  +
cmp [eax+40h] esi +
jnz loc_1807476  +
mov [ebp+var_8] esi +
jmp loc_180747E  +
mov ecx [eax+40h] +
mov ecx [ecx] +
mov [ebp+var_8] ecx +
mov eax [eax+8] +
mov esi [ebx] +
mov edx eax +
mov ecx esi +
push edi  +
mov di [ecx] +
cmp di [edx] +
jnz loc_18074AE  +
test di di +
jz loc_18074AA  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_18074AE  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_1807488  +
xor ecx ecx +
jmp loc_18074B3  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_18074BC  +
mov [ebp+var_10] esi +
mov [ebx] eax +
mov edi [ebp+dwBytes] +
lea eax [ebp+lpMem] +
push eax  +
push ebx  +
push edi  +
call sub_1802908  +
cmp [ebp+lpMem] 0 +
mov esi ds:GetProcessHeap +
mov ebx offset aNetsh_0 +
jz loc_18074F7  +
push [ebp+lpMem]  +
push 2000h  +
push ebx  +
call sub_1801E5F  +
push [ebp+lpMem]  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
xor eax eax +
cmp [ebp+var_8] eax +
push ebx  +
push eax  +
push [ebp+arg_8]  +
lea eax [edi-1] +
push eax  +
mov eax [ebp+arg_4] +
jz loc_1807519  +
add eax 4 +
push eax  +
push dword_1817EC0  +
call [ebp+var_8]  +
jmp loc_180752B  +
add eax 4 +
push eax  +
push dword_1817EC0  +
push [ebp+var_C]  +
call GenericMonitor  +
mov [ebp+dwBytes] eax +
mov eax [ebp+var_10] +
test eax eax +
jz loc_180753A  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
cmp [ebp+dwBytes] 0 +
jz loc_1807643  +
cmp [ebp+dwBytes] 55AAh +
jnz loc_1807618  +
test byte ptr [ebp+arg_8] 2 +
jnz loc_180760C  +
push 4  +
pop ecx  +
lea eax [edi+1] +
mov [ebp+var_10] eax +
mul  ecx +
mov [ebp+dwBytes] ecx +
lea ecx [ebp+dwBytes] +
push ecx  +
push edx  +
push eax  +
call sub_18072E4  +
test eax eax +
jge loc_1807582  +
and eax 0FFFFh +
jmp loc_1807646  +
push [ebp+dwBytes]  +
push 0  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_180759E  +
push 8  +
pop eax  +
jmp loc_1807646  +
shl edi 2 +
push edi  +
push [ebp+arg_4]  +
push ebx  +
call memcpy  +
add esp 0Ch +
push 4  +
push 0  +
call esi  +
push eax  +
call ds:HeapAlloc  +
add edi ebx +
mov [edi] eax +
test eax eax +
jnz loc_18075CC  +
mov [ebp+dwBytes] 8 +
jmp loc_18075FE  +
push offset word_1801FCC  +
push 2  +
push eax  +
call sub_1801E5F  +
push [ebp+arg_C]  +
mov eax [ebp+var_10] +
push [ebp+arg_8]  +
mov dword_180B06C eax +
push ebx  +
push eax  +
call sub_1807419  +
push dword ptr [edi]  +
mov [ebp+dwBytes] eax +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
push ebx  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
jmp loc_1807643  +
push ebx  +
call sub_18073EE  +
and [ebp+dwBytes] 0 +
jmp loc_1807643  +
cmp [ebp+dwBytes] 55ABh +
jnz loc_1807643  +
push dword_1817EC0  +
push 3EBh  +
push hInstance  +
call PrintMessageFromModule  +
mov eax [ebp+arg_C] +
add esp 0Ch +
mov dword ptr [eax] 1 +
mov eax [ebp+dwBytes] +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx ds:HeapFree +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_10] esi +
mov [ebp+lpMem] esi +
mov [ebp+var_C] esi +
cmp [ebp+arg_4] esi +
jz loc_18076AF  +
mov eax dword_1817EC0 +
cmp eax esi +
jz loc_1807689  +
push eax  +
push offset a1S_1  +
call PrintMessage  +
pop ecx  +
pop ecx  +
cmp word ptr aNetsh_1 si +
jnz loc_180769E  +
push offset word_1813EC0  +
call PrintMessage  +
jmp loc_18076AE  +
push offset aNetsh_1  +
push offset a1S_2  +
call PrintMessage  +
pop ecx  +
pop ecx  +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
push eax  +
call sub_180823B  +
mov edi eax +
cmp edi esi +
jz loc_180779B  +
mov eax [ebp+var_8] +
lea esi [edi+eax*2-2] +
cmp eax 1 +
jnb loc_18076D3  +
mov esi edi +
cmp esi edi +
jbe loc_1807740  +
lea eax [esi-2] +
mov [ebp+var_14] eax +
movzx eax word ptr [eax] +
push 8  +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_18076FB  +
mov esi [ebp+var_14] +
xor eax eax +
mov [esi] ax +
cmp esi edi +
ja loc_18076D7  +
cmp esi edi +
jbe loc_1807740  +
lea eax [esi-2] +
cmp word ptr [eax] 5Ch +
jnz loc_1807740  +
xor ecx ecx +
mov [eax] cx +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+lpMem] +
sub eax edi +
push ecx  +
sar eax 1 +
push eax  +
push edi  +
call sub_1807344  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ebx  +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
push eax  +
call sub_180823B  +
mov edi eax +
test edi edi +
jz loc_180779B  +
jmp loc_18076C5  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
sub esi edi +
sar esi 1 +
push esi  +
push edi  +
call sub_1807344  +
mov esi ds:GetProcessHeap +
push edi  +
xor edi edi +
push edi  +
call esi  +
push eax  +
call ebx  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+lpMem]  +
call ProcessCommand  +
cmp [ebp+var_18] edi +
jnz loc_1807792  +
cmp dword_180B094 edi +
jnz loc_1807792  +
cmp eax edi +
jz loc_1807782  +
mov [ebp+var_10] eax +
push [ebp+lpMem]  +
push edi  +
call esi  +
push eax  +
call ebx  +
xor esi esi +
jmp loc_1807668  +
push [ebp+lpMem]  +
push edi  +
call esi  +
push eax  +
call ebx  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi dword_1817EE4 +
push edi  +
mov edi dword_180B040 +
push offset word_1807858  +
push [ebp+arg_0]  +
call ds:_wfopen  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1807814  +
push [ebp+arg_0]  +
push 6Ch  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
call ds:__imp_GetLastError  +
jmp loc_1807850  +
xor eax eax +
inc eax  +
push 0  +
push ebx  +
mov dword_1817EE4 eax +
mov dword_180B040 eax +
call sub_1807652  +
push ebx  +
mov [ebp+arg_0] eax +
mov dword_1817EE4 esi +
mov dword_180B040 edi +
call ds:fclose  +
cmp [ebp+arg_0] 0 +
pop ecx  +
jz loc_180784D  +
mov [ebp+arg_0] 3AA9h +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 238h +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+lpUserName] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov [ebp+lpPassword] eax +
mov eax dword_1817EC0 +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
cmp eax ebx +
jz loc_18078A8  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
call sub_180227A  +
cmp edi ebx +
jz loc_18078F4  +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_18078B6  +
sub eax ecx +
sar eax 1 +
lea esi [eax+1] +
lea eax [esi+esi] +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov dword_1817EC0 eax +
cmp eax ebx +
jnz loc_18078EA  +
push 8  +
pop eax  +
jmp loc_1807A30  +
push edi  +
push esi  +
push eax  +
call sub_1801E5F  +
jmp loc_18078FA  +
mov dword_1817EC0 ebx +
push offset aNetsh  +
call sub_18073EE  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword_1817EC0  +
call sub_18039D5  +
mov edi eax +
cmp edi ebx +
mov esi 104h +
jge loc_180796C  +
mov eax dword_1817EC0 +
cmp eax ebx +
jnz loc_180794F  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+nSize] esi +
call ds:GetComputerNameW  +
lea eax [ebp+Buffer] +
push eax  +
push 0B4h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
push edi  +
push ebx  +
call PrintError  +
pop ecx  +
pop ecx  +
mov eax dword_1817EC0 +
cmp eax ebx +
jz loc_1807A2E  +
cmp [ebp+lpUserName] ebx +
jnz loc_180798D  +
cmp [ebp+lpPassword] ebx +
jz loc_1807A2E  +
push eax  +
push offset aSIpc  +
lea eax [ebp+Buffer] +
push esi  +
push eax  +
call sub_1801843  +
add esp 10h +
push 8  +
pop ecx  +
xor eax eax +
push 808h  +
push [ebp+lpUserName]  +
lea edi [ebp+NetResource] +
push [ebp+lpPassword]  +
stos   +
lea eax [ebp+Buffer] +
mov [ebp+NetResource.lpRemoteName] eax +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpProvider] ebx +
call WNetAddConnection2W  +
cmp eax ebx +
jnz loc_1807A25  +
push 208h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov dword_1817EDC eax +
cmp eax ebx +
jnz loc_1807A15  +
push 0Eh  +
push ebx  +
call PrintMessageFromModule  +
jmp loc_1807A2C  +
lea ecx [ebp+Buffer] +
push ecx  +
push esi  +
push eax  +
call sub_1801E5F  +
jmp loc_1807A2E  +
push eax  +
push ebx  +
call PrintError  +
pop ecx  +
pop ecx  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
dec [ebp+arg_4]  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:GetStdHandle +
push edi  +
mov edi [ebp+dwMode] +
and dword ptr [edi] 0 +
lea eax [ebp+dwMode] +
push eax  +
push 0FFFFFFF6h  +
call esi  +
push eax  +
call ds:GetConsoleMode  +
test eax eax +
jnz loc_1807A94  +
push 1Fh  +
pop eax  +
mov [ebp+dwMode] eax +
jmp loc_1807A97  +
mov eax [ebp+dwMode] +
and eax 0FFFFFFF9h +
push eax  +
push 0FFFFFFF6h  +
call esi  +
push eax  +
call ds:SetConsoleMode  +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push 0FFFFFFF6h  +
call esi  +
push eax  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1807AC7  +
cmp [ebp+NumberOfCharsRead] 1 +
jz loc_1807AD1  +
mov eax 0FFFFh +
mov [ebp+Buffer] eax +
jmp loc_1807AD4  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1807B06  +
mov ecx 0FFFFh +
cmp ax cx +
jz loc_1807B06  +
cmp ax 8 +
jnz loc_1807AF5  +
cmp ebx [ebp+arg_0] +
jz loc_1807AA6  +
dec ebx  +
dec ebx  +
dec dword ptr [edi]  +
jmp loc_1807AA6  +
mov [ebx] ax +
mov eax [edi] +
cmp eax [ebp+arg_4] +
jnb loc_1807B01  +
inc ebx  +
inc ebx  +
inc eax  +
mov [edi] eax +
jmp loc_1807AA6  +
push [ebp+dwMode]  +
push 0FFFFFFF6h  +
call esi  +
push eax  +
call ds:SetConsoleMode  +
xor eax eax +
mov [ebx] ax +
mov eax ds:_iob +
add eax 20h +
push eax  +
push 0Ah  +
call ds:fputwc  +
mov eax [ebp+arg_4] +
cmp eax [edi] +
pop ecx  +
pop ecx  +
pop edi  +
sbb eax eax +
pop esi  +
and eax 7Ah +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor ecx ecx +
push esi  +
cmp [ebp+arg_8] ecx +
jbe loc_1807B65  +
mov edx [ebp+arg_C] +
lea eax [edx+4] +
mov esi [eax] +
cmp esi [ebp+arg_4] +
jz loc_1807B6C  +
inc ecx  +
add eax 8 +
cmp ecx [ebp+arg_8] +
jb loc_1807B55  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
mov eax [edx+ecx*8] +
jmp loc_1807B67  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
xor edi edi +
push 4000h  +
lea eax [ebp+arg_8] +
push edi  +
mov dword ptr [ebp+Buffer] edi +
mov [ebp+Arguments] eax +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx edi +
jz loc_1807BDE  +
push 2000h  +
push ebx  +
push [ebp+uID]  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
test eax eax +
jz loc_1807BD3  +
lea eax [ebp+Arguments] +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
push edi  +
push ebx  +
push 500h  +
call ds:FormatMessageW  +
push ebx  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
mov eax dword ptr [ebp+Buffer] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:LocalFree  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
push 44h  +
pop eax  +
xor ebx ebx +
push eax  +
push ebx  +
mov [ebp+var_8] eax +
mov [ebp+var_4] ebx +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jz loc_1807C6A  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
push ebx  +
push 1Ah  +
call ds:CreateWellKnownSid  +
test eax eax +
jz loc_1807C6A  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push ebx  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_1807C6D  +
mov [ebp+var_4] ebx +
cmp edi ebx +
jz loc_1807C7C  +
push edi  +
push ebx  +
call esi  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1807CC1  +
push esi  +
push offset Name  +
push 0  +
push 1F0003h  +
call ds:OpenEventW  +
mov esi eax +
test esi esi +
jz loc_1807CBB  +
push esi  +
call ds:SetEvent  +
push esi  +
call ds:CloseHandle  +
xor eax eax +
inc eax  +
pop esi  +
jmp loc_1807CC3  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
mov ebx [ebp+NumberOfAttrsWritten] +
xor eax eax +
push esi  +
push edi  +
mov edi ds:GetConsoleScreenBufferInfo +
mov [ebp+dwCursorPosition.X] ax +
mov [ebp+dwCursorPosition.Y] ax +
lea eax [ebp+ConsoleScreenBufferInfo] +
push eax  +
push ebx  +
call edi  +
movzx eax [ebp+ConsoleScreenBufferInfo.dwSize.X] +
movzx esi [ebp+ConsoleScreenBufferInfo.dwSize.Y] +
imul esi eax +
lea eax [ebp+NumberOfAttrsWritten] +
push eax  +
push dword ptr [ebp+dwCursorPosition.X]  +
push esi  +
push 20h  +
push ebx  +
call ds:FillConsoleOutputCharacterW  +
lea eax [ebp+ConsoleScreenBufferInfo] +
push eax  +
push ebx  +
call edi  +
lea eax [ebp+NumberOfAttrsWritten] +
push eax  +
mov eax dword ptr [ebp+ConsoleScreenBufferInfo.wAttributes] +
push dword ptr [ebp+dwCursorPosition.X]  +
shr eax 4 +
xor eax dword ptr [ebp+ConsoleScreenBufferInfo.wAttributes] +
push esi  +
and eax 0Fh +
xor eax dword ptr [ebp+ConsoleScreenBufferInfo.wAttributes] +
push eax  +
push ebx  +
call ds:FillConsoleOutputAttribute  +
push dword ptr [ebp+dwCursorPosition.X]  +
push ebx  +
call ds:SetConsoleCursorPosition  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov ebx eax +
mov [ebp+hConsoleOutput] ebx +
cmp ebx 0FFFFFFFFh +
jnz loc_1807D6B  +
xor eax eax +
jmp loc_1807E10  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
cmp [edi] esi +
jz loc_1807D8E  +
push offset Name  +
push esi  +
push 1  +
push esi  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax esi +
jnz loc_1807D9A  +
mov [edi] esi +
mov eax [ebp+arg_8] +
mov [eax] ebx +
mov eax [ebp+arg_4] +
mov [eax] esi +
jmp loc_1807E0B  +
mov edi [ebp+arg_4] +
push esi  +
push 1  +
push esi  +
push esi  +
push 0C0000000h  +
mov [edi] eax +
call ds:CreateConsoleScreenBuffer  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_1807DC7  +
mov eax [ebp+arg_0] +
mov ecx [ebp+hConsoleOutput] +
mov [eax] esi +
mov eax [ebp+arg_8] +
mov [eax] ecx +
mov [edi] esi +
jmp loc_1807E02  +
lea eax [ebp+dwSize] +
push eax  +
push [ebp+hConsoleOutput]  +
call ds:GetConsoleScreenBufferInfo  +
push 50h  +
pop eax  +
mov [ebp+dwSize.X] ax +
push dword ptr [ebp+dwSize.X]  +
push ebx  +
call ds:SetConsoleScreenBufferSize  +
push ebx  +
call ds:SetConsoleActiveScreenBuffer  +
push 1  +
push offset HandlerRoutine  +
call ds:SetConsoleCtrlHandler  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
cmp [edi] esi +
jnz loc_1807E0B  +
push [ebp+hObject]  +
call ds:CloseHandle  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
mov [ebp+dwCursorPosition.X] ax +
mov [ebp+dwCursorPosition.Y] ax +
cmp [ebp+dwMilliseconds] eax +
jz loc_1807E73  +
push dword ptr [ebp+dwCursorPosition.X]  +
push [ebp+NumberOfAttrsWritten]  +
call ds:SetConsoleCursorPosition  +
push [ebp+dwMilliseconds]  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_1807E79  +
push esi  +
push [ebp+hObject]  +
call ds:ResetEvent  +
push 0  +
push offset HandlerRoutine  +
call ds:SetConsoleCtrlHandler  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+NumberOfAttrsWritten]  +
call esi  +
pop esi  +
xor eax eax +
leave   +
retn 0Ch  +
push [ebp+NumberOfAttrsWritten]  +
call sub_1807CCC  +
xor eax eax +
inc eax  +
jmp locret_1807E75  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi dword_1817F1C +
xor eax eax +
test edi edi +
jbe loc_1807EE0  +
mov ebx offset dword_181826C +
mov ecx [ebx] +
mov edx [ebp+arg_0] +
mov si [edx] +
cmp si [ecx] +
jnz loc_1807ECF  +
test si si +
jz loc_1807ECB  +
mov si [edx+2] +
cmp si [ecx+2] +
jnz loc_1807ECF  +
add edx 4 +
add ecx 4 +
test si si +
jnz loc_1807EA9  +
xor ecx ecx +
jmp loc_1807ED4  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_1807EE3  +
inc eax  +
add ebx 1Ch +
cmp eax edi +
jb loc_1807EA4  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1817F1C +
mov ecx [ebp+arg_0] +
imul eax eax +
inc dword_1817F1C  +
mov dword_1818260[eax] ecx +
mov ecx [ebp+arg_4] +
mov dword_1818264[eax] ecx +
mov ecx [ebp+arg_8] +
mov dword_1818268[eax] ecx +
mov ecx [ebp+arg_C] +
mov dword_181826C[eax] ecx +
mov ecx [ebp+arg_10] +
mov dword_1818270[eax] ecx +
mov ecx [ebp+arg_14] +
mov dword_1818274[eax] ecx +
mov ecx [ebp+arg_18] +
mov dword_1818278[eax] ecx +
xor eax eax +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
mov eax [ebp+arg_0] +
push dword ptr [eax+0Ch]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1807F77  +
sub eax edx +
push esi  +
sar eax 1 +
lea esi [eax+3] +
push edi  +
lea eax [esi+esi] +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_1807FD2  +
push dword ptr [ebp+arg_0]  +
push offset aS_1  +
push esi  +
push edi  +
call sub_1801843  +
mov eax dword ptr [ebp+arg_0] +
add esp 10h +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1807FBB  +
sub eax edx +
sar eax 1 +
xor ecx ecx +
mov [edi+eax*2+4] cx +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 4014h +
call sub_1801BEC  +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hInstance] +
and [ebp+lpWideCharStr] 0 +
push ebx  +
mov ebx ds:LoadStringW +
push esi  +
mov esi ds:FormatMessageW +
lea ecx [ebp+arg_8] +
push edi  +
mov [ebp+Arguments] ecx +
mov edi 2000h +
test eax eax +
jz loc_1808093  +
push edi  +
lea ecx [ebp+WideCharStr] +
push ecx  +
push [ebp+uID]  +
push eax  +
call ebx  +
test eax eax +
jz loc_1808093  +
lea eax [ebp+Arguments] +
push eax  +
xor eax eax +
push eax  +
lea ecx [ebp+lpWideCharStr] +
push ecx  +
push eax  +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
push 500h  +
call esi  +
mov [ebp+var_4014] eax +
test eax eax +
jz loc_1808093  +
push [ebp+lpWideCharStr]  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call sub_1803788  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
mov eax [ebp+var_4014] +
jmp loc_1808220  +
cmp [ebp+uID] 5 +
jz loc_18080A2  +
cmp [ebp+uID] 2E4h +
jnz loc_18080F5  +
call sub_1807C1C  +
test eax eax +
jnz loc_18080F5  +
push edi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 3EEh  +
push hInstance  +
call ebx  +
test eax eax +
jz loc_18080F5  +
lea eax [ebp+WideCharStr] +
push eax  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call sub_1803788  +
lea eax [ebp+WideCharStr] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_18080E2  +
sub eax edx +
sar eax 1 +
jmp loc_1808220  +
mov eax [ebp+uID] +
lea ecx [eax-3A99h] +
cmp ecx 11h +
ja loc_1808166  +
push edi  +
lea ecx [ebp+WideCharStr] +
push ecx  +
push eax  +
push hInstance  +
call ebx  +
test eax eax +
jz loc_1808166  +
lea eax [ebp+Arguments] +
push eax  +
xor eax eax +
push eax  +
lea ecx [ebp+lpWideCharStr] +
push ecx  +
push eax  +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
push 500h  +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_1808166  +
push [ebp+lpWideCharStr]  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call sub_1803788  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
mov eax ebx +
jmp loc_1808220  +
push 1  +
lea eax [ebp+lpWideCharStr] +
push eax  +
push [ebp+uID]  +
call MprmsgGetErrorString  +
test eax eax +
jnz loc_18081DF  +
push [ebp+lpWideCharStr]  +
mov esi 2001h +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1801E5F  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
push offset asc_1808230  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_180270E  +
lea eax [ebp+WideCharStr] +
push eax  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call sub_1803788  +
lea eax [ebp+WideCharStr] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jz loc_18080EC  +
jmp loc_18081CF  +
lea eax [ebp+Arguments] +
push eax  +
push edi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 400h  +
push [ebp+uID]  +
push 0  +
push 1000h  +
call esi  +
mov esi eax +
test esi esi +
jz loc_180821E  +
lea eax [ebp+WideCharStr] +
push eax  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call sub_1803788  +
mov eax esi +
jmp loc_1808220  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2014h +
call sub_1801BEC  +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_2014] eax +
mov eax ds:_iob +
push esi  +
mov esi [ebp+arg_4] +
add eax 20h +
push eax  +
call ds:fflush  +
push esi  +
lea eax [ebp+MultiByteStr] +
push 2000h  +
push eax  +
call ds:fgets  +
add esp 10h +
test eax eax +
jz loc_180839B  +
push ebx  +
xor ebx ebx +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
lea eax [ebp+MultiByteStr] +
push eax  +
push ebx  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:MultiByteToWideChar  +
mov ecx eax +
mov eax hObject +
mov [ebp+cchWideChar] ecx +
cmp eax ebx +
jz loc_180834C  +
push edi  +
push ebx  +
lea edx [ebp+NumberOfBytesWritten] +
push edx  +
add ecx 0FFFFFFFEh +
mov esi offset loc_18083AC +
lea edi [ebp+var_200C] +
movs   +
push ecx  +
lea ecx [ebp+MultiByteStr] +
push ecx  +
movs   +
mov esi ds:WriteFile +
push eax  +
call esi  +
mov edi ds:CloseHandle +
test eax eax +
jnz loc_1808311  +
push hObject  +
call edi  +
mov hObject ebx +
call ds:__imp_GetLastError  +
push eax  +
push ebx  +
call PrintError  +
pop ecx  +
pop ecx  +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 2  +
lea eax [ebp+var_200C] +
push eax  +
push hObject  +
call esi  +
test eax eax +
jnz loc_180834B  +
push hObject  +
call edi  +
mov hObject ebx +
call ds:__imp_GetLastError  +
push eax  +
push ebx  +
call PrintError  +
pop ecx  +
pop ecx  +
pop edi  +
mov eax [ebp+cchWideChar] +
add eax eax +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_180838A  +
push [ebp+cchWideChar]  +
lea eax [ebp+MultiByteStr] +
push esi  +
push 2000h  +
push eax  +
push ebx  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:MultiByteToWideChar  +
mov eax [ebp+cchWideChar] +
mov ecx [ebp+var_2014] +
mov [ecx] eax +
mov eax esi +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1801579  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+lpWideCharStr] 0 +
push edi  +
lea eax [ebp+arg_8] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
push 0  +
lea eax [ebp+lpWideCharStr] +
push eax  +
push 0  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 900h  +
call ds:FormatMessageW  +
mov edi eax +
test edi edi +
jnz loc_18083F1  +
call ds:__imp_GetLastError  +
jmp loc_1808402  +
push [ebp+lpWideCharStr]  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call sub_1803788  +
cmp [ebp+lpWideCharStr] 0 +
jz loc_1808411  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:GetProcessHeap +
push edi  +
xor edi edi +
push 4000h  +
lea eax [ebp+arg_C] +
push edi  +
mov [ebp+var_8] edi +
mov [ebp+lpWideCharStr] edi +
mov [ebp+Arguments] eax +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx edi +
jz loc_18084A9  +
push 2000h  +
push ebx  +
push [ebp+uID]  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
test eax eax +
jz loc_180849E  +
lea eax [ebp+Arguments] +
push eax  +
push edi  +
lea eax [ebp+lpWideCharStr] +
push eax  +
push edi  +
push edi  +
push ebx  +
push 500h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_180849E  +
push [ebp+lpWideCharStr]  +
push [ebp+hFile]  +
call sub_1803788  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call ds:fflush  +
pop ecx  +
push ebx  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
cmp [ebp+lpWideCharStr] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_18084BA  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
mov eax [ebp+var_8] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push offset sub_1807F4C  +
push 1Ch  +
push dword_1817F1C  +
push offset dword_1818260  +
call ds:qsort  +
xor ebx ebx +
add esp 10h +
mov [ebp+var_4] ebx +
cmp dword_1817F1C ebx +
jbe loc_18085EE  +
push esi  +
push edi  +
mov esi offset dword_181826C +
cmp dword ptr [esi-4] 2 +
jnz loc_1808593  +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_1808593  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1808516  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax [esi] +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di bx +
jnz loc_180852B  +
sub eax edx +
sar eax 1 +
lea edi [eax+ecx+2] +
lea eax [edi+edi] +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1808593  +
push dword ptr [esi+0Ch]  +
push edi  +
push ebx  +
call sub_1801E5F  +
push offset word_180200C  +
push edi  +
push ebx  +
call sub_180270E  +
push dword ptr [esi]  +
push edi  +
push ebx  +
call sub_180270E  +
push ebx  +
push offset a114s  +
call PrintMessage  +
pop ecx  +
pop ecx  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_18085A1  +
push dword ptr [esi]  +
push offset a114s  +
call PrintMessage  +
pop ecx  +
pop ecx  +
mov eax [esi-8] +
xor ebx ebx +
mov ecx offset word_180200C +
cmp [eax] bx +
jnz loc_18085B5  +
mov ecx offset dword_1803AF4 +
push ecx  +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push dword ptr [esi-0Ch]  +
call PrintMessageFromModule  +
add esp 14h +
test eax eax +
jnz loc_18085D7  +
push offset dword_1802008  +
call PrintMessage  +
pop ecx  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add esi 1Ch +
cmp eax dword_1817F1C +
jb loc_18084FE  +
pop edi  +
pop esi  +
mov dword_1817F1C ebx +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_1808678  +
push 69h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
test ebx ebx +
jbe loc_180866D  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_C] +
not edi  +
add esi 44h +
test [esi-28h] edi +
jnz loc_1808665  +
push dword ptr [esi]  +
call sub_1802161  +
test eax eax +
jz loc_1808665  +
push dword ptr [esi-3Ch]  +
push offset a1S_3  +
call PrintMessage  +
pop ecx  +
pop ecx  +
add esi [ebp+arg_8] +
dec ebx  +
jnz loc_1808646  +
pop edi  +
pop esi  +
push offset dword_1802008  +
call PrintMessage  +
pop ecx  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+var_C] +
push eax  +
lea eax [edi+0Ch] +
xor esi esi +
push eax  +
mov [ebp+lpMem] esi +
call sub_1802111  +
cmp eax esi +
jnz loc_18089F4  +
lea eax [ebp+var_8] +
push eax  +
mov eax [ebp+var_C] +
push dword ptr [eax+30h]  +
call sub_1802140  +
cmp eax esi +
jnz loc_18089F4  +
push ebx  +
lea eax [ebp+lpMem] +
push eax  +
push edi  +
call sub_180674F  +
mov eax [ebp+var_C] +
mov ecx [eax+38h] +
mov ebx [ebp+arg_8] +
mov [ebp+var_18] ecx +
mov ecx [eax+40h] +
mov eax [eax+3Ch] +
mov [ebp+var_1C] ecx +
mov [ebp+var_14] eax +
test bl 2 +
jz loc_18086FD  +
or [ebp+arg_4] 2 +
test bl 10h +
jz loc_1808706  +
or [ebp+arg_4] 10h +
test bl 8 +
jz loc_180870F  +
or [ebp+arg_4] 8 +
push [ebp+arg_C]  +
push ebx  +
call sub_18071E9  +
test eax eax +
jz loc_180871F  +
or ebx 4 +
or [ebp+arg_4] 0FFFF0000h +
mov eax [ebp+arg_4] +
and eax 1 +
mov [ebp+arg_0] eax +
jz loc_1808743  +
push 87h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
cmp [ebp+arg_0] esi +
jz loc_180874D  +
test bl 4 +
jz loc_1808771  +
lea eax [ebp+arg_8] +
push eax  +
push edi  +
call sub_18066AE  +
test eax eax +
jnz loc_1808771  +
push [ebp+arg_10]  +
mov eax [ebp+arg_4] +
push [ebp+arg_C]  +
and eax 0FFFFFFFEh +
push ebx  +
push eax  +
push [ebp+arg_8]  +
call sub_1808693  +
xor ebx ebx +
cmp [ebp+arg_10] esi +
jnz loc_18087C3  +
cmp ebx [edi+24h] +
jnb loc_18087C1  +
mov eax [edi+28h] +
add eax esi +
cmp dword ptr [eax+0Ch] 1 +
jz loc_18087BB  +
mov ecx [ebp+arg_4] +
not ecx  +
test [eax+10h] ecx +
jnz loc_18087BB  +
push dword ptr [eax+14h]  +
call sub_1802161  +
test eax eax +
jz loc_18087BB  +
mov eax [edi+28h] +
xor ecx ecx +
push ecx  +
push ecx  +
add eax esi +
push dword ptr [eax+8]  +
push dword ptr [eax]  +
mov eax [ebp+var_8] +
push ecx  +
push [ebp+lpMem]  +
push dword ptr [eax+0Ch]  +
call sub_1807EEF  +
inc ebx  +
add esi 18h +
jmp loc_1808778  +
xor esi esi +
mov [ebp+arg_8] esi +
cmp [edi+2Ch] esi +
jbe loc_18088C6  +
mov eax [edi+30h] +
add eax esi +
cmp dword ptr [eax+4] 1 +
jz loc_18088B2  +
mov ecx [ebp+arg_4] +
not ecx  +
mov [ebp+var_10] ecx +
test [eax+0Ch] ecx +
jnz loc_18088B2  +
mov ecx [eax] +
xor ebx ebx +
cmp [ecx] bx +
jz loc_18088B2  +
cmp [ebp+arg_10] ebx +
jz loc_180888A  +
push ecx  +
push [ebp+arg_10]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_18088B2  +
mov eax [edi+30h] +
push dword ptr [esi+eax+14h]  +
call sub_1802161  +
test eax eax +
jz loc_18088B2  +
mov eax [edi+30h] +
mov [ebp+arg_C] ebx +
cmp [esi+eax+8] ebx +
jbe loc_18088B2  +
mov eax [esi+eax+10h] +
mov ecx [ebp+var_10] +
add eax ebx +
test [eax+10h] ecx +
jnz loc_1808876  +
push dword ptr [eax+14h]  +
call sub_1802161  +
test eax eax +
jz loc_1808876  +
push [ebp+arg_10]  +
mov eax [edi+30h] +
mov eax [esi+eax+10h] +
push 0  +
add eax ebx +
push dword ptr [eax+8]  +
push dword ptr [eax]  +
mov eax [ebp+var_8] +
push 2  +
push [ebp+lpMem]  +
push dword ptr [eax+0Ch]  +
call sub_1807EEF  +
inc [ebp+arg_C]  +
mov eax [edi+30h] +
mov ecx [ebp+arg_C] +
add ebx 18h +
cmp ecx [esi+eax+8] +
jnb loc_18088B2  +
jmp loc_1808839  +
push dword ptr [eax+14h]  +
call sub_1802161  +
test eax eax +
jz loc_18088B2  +
mov eax [edi+30h] +
push ebx  +
push ebx  +
add eax esi +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
mov eax [ebp+var_8] +
push 2  +
push [ebp+lpMem]  +
push dword ptr [eax+0Ch]  +
call sub_1807EEF  +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add esi 18h +
cmp eax [edi+2Ch] +
jb loc_18087CF  +
xor esi esi +
xor edi edi +
cmp [ebp+arg_10] esi +
jnz loc_1808911  +
mov esi [ebp+var_14] +
add esi 8 +
cmp edi [ebp+var_18] +
jnb loc_180890F  +
mov eax [ebp+arg_4] +
not eax  +
test [esi+14h] eax +
jnz loc_1808909  +
push dword ptr [esi+3Ch]  +
call sub_1802161  +
test eax eax +
jz loc_1808909  +
mov eax [esi] +
push 0  +
push eax  +
push 89h  +
push eax  +
push 1  +
push [ebp+lpMem]  +
push hInstance  +
call sub_1807EEF  +
inc edi  +
add esi [ebp+var_1C] +
jmp loc_18088D3  +
xor esi esi +
cmp [ebp+arg_0] esi +
jz loc_1808966  +
xor ebx ebx +
cmp [ebp+arg_10] esi +
jnz loc_1808966  +
mov esi offset unk_180B0D8 +
cmp ebx dword_1817ED0 +
jnb loc_1808964  +
cmp dword ptr [esi-4] 1 +
jz loc_180895E  +
mov eax [ebp+arg_4] +
not eax  +
test [esi] eax +
jnz loc_180895E  +
mov edi [esi-10h] +
push edi  +
call sub_1807E8B  +
cmp eax 0FFFFFFFFh +
jnz loc_180895E  +
xor eax eax +
push eax  +
push eax  +
push dword ptr [esi-8]  +
push edi  +
push eax  +
push [ebp+lpMem]  +
push hInstance  +
call sub_1807EEF  +
inc ebx  +
add esi 18h +
jmp loc_1808922  +
xor esi esi +
pop ebx  +
cmp dword_1817F1C esi +
jbe loc_18089A9  +
cmp [ebp+arg_0] esi +
jz loc_1808978  +
push 71h  +
jmp loc_1808997  +
mov eax dword_1818264 +
cmp [eax] si +
jz loc_1808995  +
push eax  +
push 70h  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
jmp loc_18089A4  +
push 6Fh  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
call sub_18084C4  +
cmp [ebp+arg_0] esi +
jz loc_18089DC  +
cmp [ebp+arg_10] esi +
jnz loc_18089DC  +
push [ebp+arg_4]  +
mov eax [ebp+var_C] +
push dword ptr [eax+40h]  +
push dword ptr [eax+3Ch]  +
push dword ptr [eax+38h]  +
call sub_1808619  +
push offset word_1801FCC  +
push 6Bh  +
push hInstance  +
call PrintMessageFromModule  +
add esp 0Ch +
cmp [ebp+lpMem] esi +
jz loc_18089F2  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
sub esi [ebp+arg_8] +
xor eax eax +
push edi  +
cmp [ebp+arg_4] eax +
jz loc_1808ADD  +
mov edi [ebp+arg_20] +
mov ebx [ebp+arg_14] +
cmp esi eax +
jbe loc_1808A3B  +
cmp edi eax +
jz loc_1808ADD  +
cmp [ebp+arg_10] eax +
jz loc_1808ADD  +
cmp ebx eax +
jz loc_1808ADD  +
cmp ebx eax +
jbe loc_1808A4F  +
mov ecx [ebp+arg_10] +
add ecx 8 +
mov edx ebx +
and [ecx] eax +
add ecx 0Ch +
dec edx  +
jnz loc_1808A47  +
cmp esi [ebp+arg_18] +
jb loc_1808A7E  +
cmp esi [ebp+arg_1C] +
ja loc_1808A7E  +
test esi esi +
jbe loc_1808A85  +
push edi  +
push ebx  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call MatchTagsInCmdLine  +
test eax eax +
jz loc_1808A85  +
cmp eax 3AA1h +
jnz loc_1808AE0  +
mov eax 3A99h +
jmp loc_1808AE0  +
xor ecx ecx +
test esi esi +
jbe loc_1808AA2  +
mov edx [edi+ecx*4] +
test edx edx +
jl loc_1808A9D  +
cmp edx ebx +
jnb loc_1808A9D  +
inc ecx  +
cmp ecx esi +
jnb loc_1808AA2  +
jmp loc_1808A8B  +
mov eax 3A99h +
test eax eax +
jnz loc_1808AE0  +
xor ecx ecx +
test ebx ebx +
jbe loc_1808AC5  +
mov eax [ebp+arg_10] +
add eax 8 +
test byte ptr [eax-4] 1 +
jz loc_1808ABD  +
cmp dword ptr [eax] 0 +
jz loc_1808AC9  +
inc ecx  +
add eax 0Ch +
cmp ecx ebx +
jb loc_1808AB2  +
xor eax eax +
jmp loc_1808AE0  +
push 3AA3h  +
push hInstance  +
call PrintMessageFromModule  +
pop ecx  +
pop ecx  +
jmp loc_1808A7E  +
push 57h  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
push 2  +
mov [ebp+var_14] eax +
pop esi  +
cmp eax edi +
jz loc_1808B1B  +
lea edx [eax+2] +
mov cx [eax] +
add eax esi +
cmp cx di +
jnz loc_1808B08  +
sub eax edx +
sar eax 1 +
mov [ebp+var_10] eax +
jmp loc_1808B1E  +
mov [ebp+var_10] edi +
mov eax [ebp+arg_C] +
mov [ebp+var_C] eax +
cmp eax edi +
jz loc_1808B3E  +
lea edx [eax+2] +
mov cx [eax] +
add eax esi +
cmp cx di +
jnz loc_1808B2B  +
sub eax edx +
sar eax 1 +
mov [ebp+var_8] eax +
jmp loc_1808B41  +
mov [ebp+var_8] edi +
mov eax [ebp+arg_8] +
mov [ebp+pAuthInfo] eax +
cmp eax edi +
jz loc_1808B61  +
lea edx [eax+2] +
mov cx [eax] +
add eax esi +
cmp cx di +
jnz loc_1808B4E  +
sub eax edx +
sar eax 1 +
mov [ebp+var_18] eax +
jmp loc_1808B64  +
mov [ebp+var_18] edi +
push edi  +
lea eax [ebp+pAuthInfo] +
push eax  +
push 3  +
push 4  +
push 0FFFFFFFFh  +
push edi  +
push 0FFFFFFFFh  +
push [ebp+pProxy]  +
mov [ebp+var_4] esi +
call ds:CoSetProxyBlanket  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6B0h +
mov eax dword_180B044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_624] eax +
mov eax [ebp+arg_8] +
xor edi edi +
xor ebx ebx +
push 6  +
inc edi  +
push ebx  +
mov [ebp+var_628] eax +
mov dword_180B064 edi +
mov dword_180B068 ebx +
call ds:CoInitializeEx  +
cmp eax ebx +
jge loc_1808BDF  +
cmp eax 80010106h +
jnz loc_1809114  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push edi  +
push ebx  +
push offset rclsid  +
mov [ebp+ppv] ebx +
call ds:CoCreateInstance  +
cmp eax ebx +
jl loc_1809114  +
mov [ebp+var_630] ebx +
mov [ebp+var_62C] ebx +
mov [ebp+var_638] ebx +
cmp esi ebx +
jnz loc_1808C21  +
mov esi offset a_ +
push esi  +
push offset aSRootCimv2  +
mov esi 104h +
lea eax [ebp+var_414] +
push esi  +
push eax  +
call sub_1801843  +
mov edi ds:SysAllocString +
add esp 10h +
lea eax [ebp+var_414] +
push eax  +
call edi  +
mov [ebp+var_63C] eax +
cmp eax ebx +
jz loc_1808CEF  +
cmp [ebp+var_624] ebx +
jz loc_1808CD5  +
push esi  +
lea eax [ebp+var_61C] +
push eax  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+var_624]  +
call ds:CredUIParseUserNameW  +
cmp eax ebx +
jle loc_1808C8B  +
and eax 0FFFFh +
or eax 80070000h +
cmp eax ebx +
mov [ebp+var_620] eax +
jl loc_1808CF9  +
lea eax [ebp+var_61C] +
push eax  +
call edi  +
mov [ebp+var_630] eax +
lea eax [ebp+var_20C] +
push eax  +
call edi  +
push [ebp+var_624]  +
mov [ebp+var_62C] eax +
call edi  +
mov [ebp+var_638] eax +
cmp [ebp+var_630] ebx +
jz loc_1808CEF  +
cmp [ebp+var_62C] ebx +
jz loc_1808CEF  +
cmp eax ebx +
jz loc_1808CEF  +
push [ebp+var_628]  +
call edi  +
mov [ebp+var_634] eax +
cmp [ebp+var_628] ebx +
jz loc_1808D2D  +
cmp eax ebx +
jnz loc_1808D2D  +
mov [ebp+var_620] 8007000Eh +
mov esi ds:SysFreeString +
push ebx  +
call esi  +
push [ebp+var_62C]  +
call esi  +
push [ebp+var_638]  +
call esi  +
push [ebp+var_630]  +
call esi  +
push [ebp+var_63C]  +
call esi  +
mov eax [ebp+var_620] +
jmp loc_1809114  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+pProxy] +
push edx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+var_634]  +
push [ebp+var_638]  +
push [ebp+var_63C]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1809079  +
push [ebp+var_634]  +
push [ebp+var_62C]  +
push [ebp+var_630]  +
push [ebp+pProxy]  +
call sub_1808AEC  +
mov esi eax +
cmp esi ebx +
jl loc_1809079  +
push offset aWql  +
mov [ebp+var_624] ebx +
call edi  +
push offset aSelectFromWin3  +
mov [ebp+var_64C] eax +
call edi  +
lea edx [ebp+var_624] +
push edx  +
push ebx  +
push 20h  +
mov [ebp+var_644] eax +
push [ebp+var_644]  +
mov eax [ebp+pProxy] +
push [ebp+var_64C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809055  +
push [ebp+var_634]  +
push [ebp+var_62C]  +
push [ebp+var_630]  +
push [ebp+var_624]  +
call sub_1808AEC  +
mov esi eax +
cmp esi ebx +
jl loc_1809055  +
mov eax [ebp+var_624] +
mov ecx [eax] +
lea edx [ebp+var_650] +
push edx  +
lea edx [ebp+var_620] +
push edx  +
xor edi edi +
inc edi  +
push edi  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809049  +
cmp [ebp+var_650] ebx +
jz loc_1809038  +
mov eax [ebp+var_620] +
push ebx  +
lea edx [ebp+var_628] +
push edx  +
lea edx [ebp+pvarSrc] +
push edx  +
push ebx  +
push offset aOstype  +
mov dword_180B068 edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
mov edi ds:VariantChangeType +
push 17h  +
push ebx  +
lea eax [ebp+pvarSrc] +
push eax  +
push eax  +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
mov eax dword ptr [ebp+pvarSrc.anonymous_0+8] +
push ebx  +
lea edx [ebp+var_628] +
push edx  +
lea edx [ebp+pvargDest] +
push edx  +
push ebx  +
mov dword_180B05C eax +
mov eax [ebp+var_620] +
mov ecx [eax] +
push offset aVersion  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push 8  +
push ebx  +
lea eax [ebp+pvargDest] +
push eax  +
push eax  +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push dword ptr [ebp+pvargDest.anonymous_0+8]  +
push 104h  +
push offset word_180B338  +
call sub_1801E5F  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_628] +
push edx  +
lea edx [ebp+var_660] +
push edx  +
push ebx  +
push offset aOsproductsuite  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
xor eax eax +
inc eax  +
cmp ax word ptr [ebp+var_660] +
jz loc_1808F39  +
push 17h  +
push ebx  +
lea eax [ebp+var_660] +
push eax  +
push eax  +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
mov eax [ebp+var_658] +
mov dword_180B060 eax +
mov eax [ebp+var_620] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_628] +
push edx  +
lea edx [ebp+var_690] +
push edx  +
push ebx  +
push offset aBuildnumber  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push 8  +
push ebx  +
lea eax [ebp+var_690] +
push eax  +
push eax  +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push [ebp+var_688]  +
push 104h  +
push offset word_180B748  +
call sub_1801E5F  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_628] +
push edx  +
lea edx [ebp+var_670] +
push edx  +
push ebx  +
push offset aServicepackmaj  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push 8  +
push ebx  +
lea eax [ebp+var_670] +
push eax  +
push eax  +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push [ebp+var_668]  +
push 104h  +
push offset word_180B540  +
call sub_1801E5F  +
mov eax [ebp+var_620] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_628] +
push edx  +
lea edx [ebp+var_6A0] +
push edx  +
push ebx  +
push offset aServicepackmin  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push 8  +
push ebx  +
lea eax [ebp+var_6A0] +
push eax  +
push eax  +
call edi  +
mov esi eax +
cmp esi ebx +
jl loc_1809030  +
push [ebp+var_698]  +
push 104h  +
push offset word_180B950  +
call sub_1801E5F  +
jmp loc_180903D  +
mov dword_180B068 ebx +
jmp loc_180903D  +
mov esi 8000FFFFh +
mov eax [ebp+var_620] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_624] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_644]  +
mov edi ds:SysFreeString +
call edi  +
push [ebp+var_64C]  +
call edi  +
mov eax [ebp+pProxy] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_180907F  +
mov edi ds:SysFreeString +
push [ebp+var_634]  +
call edi  +
push [ebp+var_62C]  +
call edi  +
push [ebp+var_638]  +
call edi  +
push [ebp+var_630]  +
call edi  +
push [ebp+var_63C]  +
call edi  +
call ds:CoUninitialize  +
cmp esi 80041002h +
jz loc_18090FC  +
cmp esi 80041003h +
jz loc_18090F5  +
cmp esi 80041004h +
jz loc_18090EE  +
cmp esi 80041005h +
jz loc_18090E0  +
mov eax 80041006h +
cmp esi eax +
jz loc_18090E7  +
jle loc_1809101  +
cmp esi 80041008h +
jg loc_1809101  +
mov esi 80070057h +
jmp loc_1809112  +
mov esi 8007000Eh +
jmp loc_1809112  +
mov esi 80004005h +
jmp loc_1809112  +
mov esi 80070005h +
jmp loc_1809112  +
mov esi 800704D0h +
cmp esi ebx +
jnz loc_1809112  +
mov eax 80004005h +
cmp dword_180B068 ebx +
jz loc_1809114  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1801579  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [eax+4] +
push esi  +
mov esi [eax+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi [eax+0Ch] +
mov eax [eax+10h] +
mov ecx offset __ImageBase +
sub edi ecx +
sar edi 2 +
add esi ecx +
mov edx [esi] +
lea eax __ImageBase[eax+edi*4] +
add ebx ecx +
mov ecx [eax] +
mov [ebp+8] edx +
lea eax (__ImageBase+2)[ecx] +
test ecx ecx +
jns loc_18092C3  +
movzx eax cx +
mov [ebp-8] eax +
test edx edx +
jnz loc_1809342  +
push edx  +
push edx  +
push ebx  +
call LoadLibraryExA  +
mov edi eax +
mov [ebp+8] edi +
test edi edi +
jz loc_1809320  +
push 0  +
push edi  +
push esi  +
call InterlockedCompareExchange  +
mov esi eax +
test esi esi +
jnz loc_1809315  +
push 8  +
pop ecx  +
lea edi [ebp-28h] +
stos   +
mov eax [ebp+8] +
mov [ebp-14h] eax +
mov eax ds:dword_18093A4 +
mov dword ptr [ebp-2Ch] 24h +
mov [ebp-20h] ebx +
test eax eax +
jz loc_1809342  +
lea ecx [ebp-2Ch] +
push ecx  +
push 5  +
call eax  +
jmp loc_1809342  +
push edi  +
call FreeLibrary  +
mov [ebp+8] esi +
jmp loc_1809342  +
call GetLastError  +
cmp eax 7Eh +
jz loc_1809331  +
cmp eax 0C1h +
jnz loc_1809384  +
push 0  +
push 0FFFFFFFFh  +
push esi  +
call InterlockedCompareExchange  +
test eax eax +
jz loc_1809348  +
mov [ebp+8] eax +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jnz loc_1809351  +
mov dword ptr [ebp-4] 1 +
jmp loc_1809384  +
cmp dword ptr [ebp+8] 0 +
jz loc_1809384  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+8]  +
call GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_1809379  +
call GetLastError  +
cmp eax 7Fh +
jz loc_1809379  +
cmp eax 0B6h +
jnz loc_1809380  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jnz loc_180938F  +
push dword ptr [ebp-8]  +
push ebx  +
call DelayLoadFailureHook  +
mov esi eax +
cmp dword ptr [ebp-4] 0 +
jz loc_180939A  +
mov eax [ebp+0Ch] +
mov [eax] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_180942C  +
cmp dword ptr [eax+10h] 3 +
jnz loc_180942C  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1809426  +
cmp eax 19930521h +
jz loc_1809426  +
cmp eax 19930522h +
jz loc_1809426  +
cmp eax 1994000h +
jnz loc_180942C  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1809458  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1809454  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_18094B9  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_18094B1  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_18094BB  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_18094A1  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_1803B93  +
and dword ptr [ebp-4] 0 +
mov esi offset __ImageBase +
push esi  +
call sub_1809442  +
pop ecx  +
test eax eax +
jz loc_1809522  +
mov eax [ebp+8] +
sub eax esi +
push eax  +
push esi  +
call sub_180947C  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1809522  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_180952B  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor eax eax +
call sub_1803FCC  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1801579  +
push offset dword_180B044  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1818028 eax +
mov dword_1818024 ecx +
mov dword_1818020 edx +
mov dword_181801C ebx +
mov dword_1818018 esi +
mov dword_1818014 edi +
mov word_1818040 ss +
mov word_1818034 cs +
mov word_1818010 ds +
mov word_181800C es +
mov word_1818008 fs +
mov word_1818004 gs +
pushf   +
pop dword_1818038  +
mov eax [ebp+0] +
mov dword_181802C eax +
mov eax [ebp+4] +
mov dword_1818030 eax +
lea eax [ebp+8] +
mov dword_181803C eax +
mov eax [ebp-320h] +
mov dword_1817F78 10001h +
mov eax dword_1818030 +
mov dword_1817F34 eax +
mov dword_1817F28 0C0000409h +
mov dword_1817F2C 1 +
mov eax dword_180B044 +
mov [ebp-328h] eax +
mov eax dword_180B048 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
