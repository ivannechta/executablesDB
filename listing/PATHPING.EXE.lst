mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40Ch +
mov eax dword_10030B8 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:getnameinfo +
push edi  +
mov [ebp+var_409] 0 +
mov edi 401h +
jz loc_100123D  +
push 4  +
push 0  +
push 0  +
push edi  +
lea eax [ebp+var_408] +
push eax  +
push [ebp+arg_4]  +
push ebx  +
call esi  +
test eax eax +
jnz loc_100123D  +
lea eax [ebp+var_408] +
push eax  +
push 273Ah  +
push 1  +
mov [ebp+var_409] 1 +
call sub_1002979  +
add esp 0Ch +
push 2  +
push 0  +
push 0  +
push edi  +
lea eax [ebp+var_408] +
push eax  +
push [ebp+arg_4]  +
push ebx  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_100126E  +
push 2724h  +
push 1  +
call sub_1002979  +
pop ecx  +
pop ecx  +
push 1  +
call ds:exit  +
cmp [ebp+var_409] 0 +
lea eax [ebp+var_408] +
push eax  +
jz loc_1001285  +
push 2710h  +
jmp loc_100128A  +
push 273Dh  +
push 1  +
call sub_1002979  +
mov ecx [ebp+var_4] +
xor ecx ebp +
add esp 0Ch +
call sub_10024F7  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_10030B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
push 2  +
pop eax  +
push [ebp+arg_4]  +
mov word ptr [ebp+var_14] ax +
mov eax [ebp+arg_0] +
mov [ebp+var_10] eax +
push 10h  +
lea eax [ebp+var_14] +
push eax  +
call sub_10011D5  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_10024F7  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_10030B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 7  +
pop ecx  +
xor eax eax +
push 17h  +
lea edi [ebp+var_20] +
stos   +
pop eax  +
push [ebp+arg_4]  +
mov word ptr [ebp+var_20] ax +
lea edi [ebp+var_18] +
movs   +
movs   +
movs   +
push 1Ch  +
lea eax [ebp+var_20] +
push eax  +
movs   +
call sub_10011D5  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10024F7  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
lea ecx [eax-1] +
mov eax [ebp+arg_C] +
cmp eax ecx +
mov ecx [ebp+arg_4] +
jnz loc_100136F  +
push dword ptr [ecx+eax*4]  +
push 2734h  +
push 1  +
call sub_1002979  +
add esp 0Ch +
xor al al +
jmp loc_10013AC  +
push esi  +
lea esi [ecx+eax*4] +
push 0  +
lea eax [ebp+arg_4] +
push eax  +
push dword ptr [esi+4]  +
call ds:strtoul  +
add esp 0Ch +
cmp eax [ebp+arg_10] +
jb loc_1001398  +
cmp eax [ebp+arg_14] +
ja loc_1001398  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov al 1 +
jmp loc_10013AB  +
push dword ptr [esi]  +
push 2735h  +
push 1  +
call sub_1002979  +
add esp 0Ch +
xor al al +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetTickCount +
push edi  +
call esi  +
mov edi eax +
mov eax [ebp+dwMilliseconds] +
add edi eax +
jmp loc_10013DE  +
push 1  +
push eax  +
call ds:SleepEx  +
call esi  +
mov ecx edi +
sub ecx eax +
mov eax ecx +
test eax eax +
jg loc_10013CD  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
inc dword_100316C  +
cmp vOutBuffer 2 +
push ebx  +
push esi  +
push edi  +
push uBytes  +
jnz loc_1001446  +
mov esi [ebp+8] +
push dword ptr [esi]  +
call IcmpParseReplies  +
xor ecx ecx +
test eax eax +
jbe loc_1001491  +
mov edx [esi] +
mov edi [esi+0Ch] +
mov ebx edx +
cmp edi [ebx] +
jz loc_1001431  +
inc ecx  +
add ebx 1Ch +
cmp ecx eax +
jb loc_1001423  +
jmp loc_1001491  +
inc dword ptr [esi+88h]  +
imul ecx ecx +
mov eax [ecx+edx+8] +
add [esi+90h] eax +
jmp loc_1001491  +
mov ebx [ebp+8] +
push dword ptr [ebx]  +
call Icmp6ParseReplies  +
xor edx edx +
mov [ebp-4] eax +
test eax eax +
jbe loc_1001491  +
mov eax [ebx] +
add eax 6 +
mov [ebp+8] eax +
mov edi [ebp+8] +
push 4  +
pop ecx  +
lea esi [ebx+10h] +
xor eax eax +
cmps   +
jz loc_100147C  +
add dword ptr [ebp+8] 24h +
inc edx  +
cmp edx [ebp-4] +
jb loc_1001461  +
jmp loc_1001491  +
inc dword ptr [ebx+88h]  +
imul edx edx +
mov eax [ebx] +
mov eax [edx+eax+20h] +
add [ebx+90h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
movzx esi byte ptr [eax] +
push edi  +
xor edi edi +
inc edi  +
mov [ebp+var_10] esi +
cmp esi edi +
jb loc_10014E0  +
mov ebx offset unk_1003738 +
push uBytes  +
push 0  +
call ds:LocalAlloc  +
mov [ebx] eax +
test eax eax +
jz loc_1001543  +
inc edi  +
add ebx 98h +
cmp edi esi +
jbe loc_10014C1  +
and [ebp+var_4] 0 +
cmp dword_1003008 0 +
jbe loc_10015F4  +
mov ebx offset unk_10034C0 +
mov edi offset loc_10013ED +
cmp esi 1 +
jb loc_10015CB  +
mov eax [ebp+var_10] +
mov esi offset unk_1003738 +
mov [ebp+var_C] eax +
lea eax [esi+8] +
movzx ecx word ptr [eax] +
cmp cx 2 +
jnz loc_100156B  +
push dword_1003000  +
push uBytes  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
push 40h  +
push ebx  +
push dword ptr [eax+4]  +
push esi  +
push edi  +
push 0  +
push dword_10030E0  +
call IcmpSendEcho2  +
jmp loc_100159A  +
cmp edi 1 +
jbe loc_1001644  +
mov eax edi +
imul eax eax +
lea esi dword_10036A0[eax] +
dec edi  +
push dword ptr [esi]  +
call ds:LocalFree  +
dec edi  +
jnz loc_100155B  +
jmp loc_1001644  +
cmp cx 17h +
jnz loc_10015B9  +
push dword_1003000  +
push uBytes  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
push 40h  +
push ebx  +
push eax  +
push offset vOutBuffer  +
push esi  +
push edi  +
push 0  +
push dword_10030E0  +
call Icmp6SendEcho2  +
test eax eax +
jnz loc_10015AE  +
call ds:GetLastError  +
cmp eax 3E5h +
jnz loc_10015AE  +
inc [ebp+var_8]  +
push dwMilliseconds  +
call sub_10013B5  +
add esi 98h +
dec [ebp+var_C]  +
jnz loc_100150F  +
mov esi [ebp+var_10] +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax dword_1003008 +
jb loc_10014FB  +
mov edi [ebp+var_8] +
jmp loc_10015EC  +
push 1  +
push 0FFFFFFFFh  +
call ds:SleepEx  +
cmp dword_100316C edi +
jb loc_10015E2  +
mov eax esi +
imul eax eax +
mov ecx dword_1003728[eax] +
mov dword_100372C[eax] ecx +
test esi esi +
jbe loc_100163A  +
dec esi  +
jz loc_100163A  +
mov eax esi +
imul eax eax +
add eax offset unk_10037C4 +
mov ecx [eax-9Ch] +
mov edx [eax] +
cmp ecx edx +
ja loc_100162A  +
mov ecx edx +
mov [eax-98h] ecx +
dec esi  +
sub eax 98h +
test esi esi +
ja loc_100161C  +
mov eax dword_1003008 +
mov dword_100372C eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
call ds:GetLastError  +
push eax  +
xor esi esi +
push 273Eh  +
inc esi  +
push esi  +
call sub_1002979  +
movzx eax byte_1003010 +
add esp 0Ch +
push eax  +
push dword_10030E4  +
push offset vOutBuffer  +
call sub_10011D5  +
push 273Ch  +
push esi  +
call sub_1002979  +
pop ecx  +
pop ecx  +
mov [ebp+var_4] esi +
cmp [ebp+arg_0] esi +
jb loc_1001797  +
push ebx  +
mov esi offset unk_10037C4 +
push edi  +
mov edx [esi-4] +
mov eax [esi] +
mov ecx [esi-98h] +
mov edi dword_1003008 +
sub ecx eax +
sub eax edx +
mov [ebp+var_C] eax +
mov eax ecx +
imul eax eax +
mov [ebp+var_8] edx +
mov ebx edi +
sub ebx edx +
cdq   +
idiv  edi +
push eax  +
push edi  +
push ecx  +
push 273Fh  +
push 1  +
call sub_1002979  +
add esp 14h +
cmp [ebp+var_8] 0 +
jz loc_1001705  +
mov eax [esi+4] +
xor edx edx +
div  [ebp+var_8] +
push eax  +
push [ebp+var_4]  +
push 2741h  +
push 1  +
call sub_1002979  +
add esp 10h +
jmp loc_1001717  +
push [ebp+var_4]  +
push 2742h  +
push 1  +
call sub_1002979  +
add esp 0Ch +
mov eax ebx +
imul eax eax +
cdq   +
idiv  edi +
push eax  +
push edi  +
push ebx  +
mov ebx 2740h +
push ebx  +
push 1  +
call sub_1002979  +
mov eax [ebp+var_C] +
imul eax eax +
cdq   +
idiv  edi +
push eax  +
push edi  +
push [ebp+var_C]  +
push ebx  +
push 1  +
call sub_1002979  +
lea eax [esi-84h] +
add esp 28h +
cmp word ptr [eax] 0 +
jnz loc_100175E  +
mov cx vOutBuffer +
mov [eax] cx +
movzx ecx byte_1003010 +
push ecx  +
push dword_10030E4  +
push eax  +
call sub_10011D5  +
push 273Ch  +
push 1  +
call sub_1002979  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
pop ecx  +
add esi 98h +
pop ecx  +
cmp eax [ebp+arg_0] +
jbe loc_10016A9  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov edx [ebp+arg_4] +
test eax eax +
jz loc_10017DC  +
cmp eax edx +
jz loc_10017DC  +
mov eax offset aIpv4 +
cmp edx 2 +
jz loc_10017C5  +
mov eax offset aIpv6 +
push eax  +
push [ebp+arg_8]  +
push 275Ch  +
push 1  +
call sub_1002979  +
add esp 10h +
xor al al +
jmp loc_10017E0  +
mov [ecx] edx +
mov al 1 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10017FF  +
cmp ecx 7FFFFFFFh +
jbe loc_1001804  +
mov eax 80070057h +
test eax eax +
jl loc_1001848  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_100183B  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1001836  +
mov cl [edx+eax] +
test cl cl +
jz loc_1001836  +
mov [eax] cl +
inc eax  +
dec esi  +
jnz loc_1001822  +
pop edi  +
test esi esi +
jnz loc_1001841  +
dec eax  +
mov ebx 8007007Ah +
mov byte ptr [eax] 0 +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi ds:getaddrinfo +
push edi  +
push 8  +
pop ecx  +
xor ebx ebx +
mov [eax] bl +
xor eax eax +
push 4  +
lea edi [ebp+var_20] +
stos   +
mov eax [ebp+arg_0] +
pop edi  +
mov [ebp+var_1C] eax +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
push [ebp+arg_4]  +
mov [ebp+var_20] edi +
call esi  +
test eax eax +
jnz loc_10018D7  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
push [ebp+arg_8]  +
call memcpy  +
add esp 0Ch +
cmp [ebp+arg_18] bl +
jz loc_10018CA  +
push edi  +
push ebx  +
push ebx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:getnameinfo  +
mov esi [ebp+arg_0] +
mov bl 1 +
push esi  +
call ds:freeaddrinfo  +
mov al bl +
jmp loc_1001931  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
push [ebp+arg_4]  +
mov [ebp+var_20] 2 +
call esi  +
test eax eax +
jnz loc_100192F  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
push [ebp+arg_8]  +
call memcpy  +
add esp 0Ch +
cmp [esi+14h] ebx +
jz loc_1001916  +
mov esi [esi+14h] +
jmp loc_1001919  +
mov esi [ebp+arg_4] +
push esi  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
call sub_10017E9  +
mov esi [ebp+arg_0] +
test eax eax +
setnl bl  +
jmp loc_10018CC  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 920h +
mov eax dword_10030B8 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 1  +
push edi  +
mov [ebp+var_910] esi +
mov [ebp+var_91C] edi +
mov [ebp+var_914] 1Eh +
mov [ebp+var_8F9] 0 +
mov [ebp+var_905] 0 +
mov [ebp+var_90C] edi +
call ds:HeapSetInformation  +
push edi  +
call ds:SetThreadUILanguage  +
push offset stru_1003500  +
push 101h  +
call ds:WSAStartup  +
cmp eax edi +
jz loc_10019C1  +
push eax  +
push 2732h  +
push 1  +
call sub_1002979  +
xor eax eax +
add esp 0Ch +
inc eax  +
jmp loc_1002153  +
push ebx  +
mov ebx 80h +
push ebx  +
lea eax [ebp+vInBuffer] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
cmp [ebp+arg_0] 2 +
lea eax [ebp+var_70] +
mov [ebp+var_920] ebx +
mov [ebp+var_904] 1 +
mov byte ptr [ebp-903h] 0 +
mov byte ptr [ebp-902h] 0 +
mov [ebp+var_901] 0 +
mov [ebp+var_900] eax +
jge loc_1001A1F  +
push dword ptr [esi]  +
push 2713h  +
push 1  +
call sub_1002979  +
add esp 0Ch +
jmp loc_1001E83  +
xor edi edi +
inc edi  +
cmp [ebp+arg_0] edi +
jle loc_1001C60  +
mov eax [esi+edi*4] +
mov cl [eax] +
cmp cl 2Dh +
jz loc_1001A81  +
cmp cl 2Fh +
jz loc_1001A81  +
movzx ecx byte_1003010 +
push ecx  +
push 401h  +
lea ecx [ebp+var_474] +
push ecx  +
lea ecx [ebp+var_920] +
push ecx  +
lea ecx [ebp+vInBuffer] +
push ecx  +
push eax  +
push [ebp+var_90C]  +
mov [ebp+var_905] 1 +
call sub_1001851  +
test al al +
jnz loc_1001C4D  +
push dword ptr [esi+edi*4]  +
push 2714h  +
jmp loc_1001A10  +
movsx ecx byte ptr [eax+1] +
cmp ecx 69h +
jg loc_1001BF0  +
jz loc_1001BD1  +
sub ecx 34h +
jz loc_1001BCC  +
dec ecx  +
dec ecx  +
jz loc_1001BB0  +
sub ecx 9 +
jz loc_1001A09  +
sub ecx 28h +
jz loc_1001AD2  +
dec ecx  +
jnz loc_1001CB0  +
push 0FFh  +
push 1  +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+var_914] +
push esi  +
push eax  +
jmp loc_1001C13  +
push eax  +
push 2  +
lea eax [ebp+var_90C] +
push eax  +
call sub_10017A1  +
test al al +
jz loc_1001E83  +
mov al [ebp+var_901] +
mov [ebp+var_8F9] al +
movzx eax al +
lea ecx [eax+7] +
cmp ecx 28h +
jg loc_1001C80  +
mov ebx [ebp+var_900] +
lea esi [eax+ebx] +
mov byte ptr [eax+ebx] 83h +
mov byte ptr [esi+1] 3 +
mov byte ptr [esi+2] 4 +
add [ebp+var_901] 3 +
jmp loc_1001B79  +
mov eax [ebp+var_910] +
mov eax [eax+edi*4+4] +
cmp byte ptr [eax] 2Dh +
jz loc_1001B83  +
movzx eax [ebp+var_901] +
add eax 4 +
cmp eax 28h +
jg loc_1001C80  +
mov eax [ebp+var_910] +
inc edi  +
mov eax [eax+edi*4] +
push eax  +
mov [ebp+cbBytesReturned] eax +
call ds:inet_addr  +
cmp eax 0FFFFFFFFh +
jz loc_1001C93  +
movzx ecx [ebp+var_901] +
mov [ecx+ebx] eax +
add byte ptr [esi+1] 4 +
add [ebp+var_901] 4 +
mov eax [ebp+arg_0] +
add eax 0FFFFFFFEh +
cmp edi eax +
jl loc_1001B22  +
mov al [esi+1] +
mov cl al +
add cl [ebp+var_8F9] +
add al 4 +
mov [esi+1] al +
add [ebp+var_901] 4 +
mov esi [ebp+var_910] +
mov [ebp+var_8F9] cl +
mov ebx 80h +
jmp loc_1001C4D  +
push eax  +
push 17h  +
lea eax [ebp+var_90C] +
push eax  +
call sub_10017A1  +
test al al +
jz loc_1001E83  +
jmp loc_1001C4D  +
push eax  +
push 2  +
jmp loc_1001BB3  +
mov eax [ebp+arg_0] +
dec eax  +
cmp edi eax +
jz loc_1001CA3  +
inc edi  +
mov eax [esi+edi*4] +
mov [ebp+var_91C] eax +
mov byte_1003168 1 +
jmp loc_1001C4D  +
sub ecx 6Eh +
jz loc_1001C46  +
dec ecx  +
dec ecx  +
jz loc_1001C36  +
dec ecx  +
jz loc_1001C23  +
sub ecx 6 +
jnz loc_1001CB0  +
push 0FFFFFFFFh  +
push 1  +
push edi  +
push [ebp+arg_0]  +
push esi  +
push offset dword_1003000  +
call sub_1001344  +
test al al +
jz loc_1001E83  +
inc edi  +
jmp loc_1001C4D  +
push 0FFh  +
push 1  +
push edi  +
push [ebp+arg_0]  +
push esi  +
push offset dword_1003008  +
jmp loc_1001C13  +
push 0FFFFFFFFh  +
push 1  +
push edi  +
push [ebp+arg_0]  +
push esi  +
push offset dwMilliseconds  +
jmp loc_1001C13  +
mov byte_1003010 0 +
inc edi  +
cmp edi [ebp+arg_0] +
jl loc_1001A2B  +
cmp [ebp+var_905] 0 +
jnz loc_1001CD1  +
push 2739h  +
push 1  +
call sub_1002979  +
push 2713h  +
push 1  +
call sub_1002979  +
add esp 10h +
jmp loc_1001E83  +
push 2737h  +
push 1  +
call sub_1002979  +
pop ecx  +
pop ecx  +
jmp loc_1001E83  +
push [ebp+cbBytesReturned]  +
push 2736h  +
jmp loc_1001A10  +
push dword ptr [esi+edi*4]  +
push 2734h  +
jmp loc_1001A10  +
push eax  +
push 2738h  +
push 1  +
call sub_1002979  +
push 2713h  +
push 1  +
call sub_1002979  +
add esp 14h +
jmp loc_1001E83  +
cmp [ebp+var_8F9] 0 +
jz loc_1001CF0  +
movzx eax [ebp+var_8F9] +
mov ecx [ebp+var_8F4] +
mov edx [ebp+var_900] +
mov [eax+edx] ecx +
movzx eax word ptr [ebp+vInBuffer] +
mov [ebp+var_90C] eax +
cmp eax 2 +
jnz loc_1001D09  +
call IcmpCreateFile  +
jmp loc_1001D0E  +
call Icmp6CreateFile  +
mov dword_10030E0 eax +
cmp eax 0FFFFFFFFh +
jnz loc_1001D29  +
call ds:GetLastError  +
push eax  +
push 2715h  +
jmp loc_1001A10  +
push 2  +
xor edi edi +
push edi  +
push edi  +
push 41h  +
lea eax [ebp+var_48] +
push eax  +
push [ebp+var_920]  +
lea eax [ebp+vInBuffer] +
push eax  +
call ds:getnameinfo  +
cmp byte ptr [ebp+var_474] 0 +
push [ebp+var_914]  +
lea eax [ebp+var_48] +
push eax  +
jz loc_1001D73  +
lea eax [ebp+var_474] +
push eax  +
push 2716h  +
push 1  +
call sub_1002979  +
add esp 14h +
jmp loc_1001D82  +
push 2733h  +
push 1  +
call sub_1002979  +
add esp 10h +
cmp byte_1003168 0 +
jnz loc_1001E0F  +
movzx eax word ptr [ebp+vInBuffer] +
push 11h  +
push 2  +
push eax  +
call ds:socket  +
push edi  +
push edi  +
mov esi eax +
lea eax [ebp+cbBytesReturned] +
push eax  +
push ebx  +
mov edi offset vOutBuffer +
push edi  +
push ebx  +
lea eax [ebp+vInBuffer] +
push eax  +
push 0C8000014h  +
push esi  +
call ds:WSAIoctl  +
mov eax [ebp+cbBytesReturned] +
push esi  +
mov dword_10030E4 eax +
call ds:closesocket  +
push 0  +
push 2717h  +
push 1  +
call sub_1002979  +
movzx eax byte_1003010 +
add esp 0Ch +
push eax  +
push dword_10030E4  +
push edi  +
call sub_10011D5  +
push 273Ch  +
push 1  +
call sub_1002979  +
jmp loc_10020C9  +
cmp [ebp+var_90C] 2 +
jnz loc_1001E33  +
push offset aIpv6  +
push offset aI  +
push 275Ch  +
push 1  +
call sub_1002979  +
add esp 10h +
jmp loc_1001E78  +
push edi  +
push 401h  +
lea eax [ebp+var_878] +
push eax  +
push offset dword_10030E4  +
push offset vOutBuffer  +
push [ebp+var_91C]  +
push [ebp+var_90C]  +
call sub_1001851  +
test al al +
jnz loc_10020CB  +
push [ebp+var_91C]  +
push 271Ch  +
push 1  +
call sub_1002979  +
add esp 0Ch +
push dword_10030E0  +
call IcmpCloseHandle  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
jmp loc_1002152  +
cmp [ebp+var_904] 0 +
jz loc_10020DE  +
push eax  +
push 2717h  +
push 1  +
call sub_1002979  +
add esp 0Ch +
and [ebp+var_910] 0 +
cmp [ebp+var_90C] 2 +
push dword_1003000  +
lea eax [ebp+var_904] +
push 70h  +
jnz loc_1001F83  +
mov esi offset unk_100CE20 +
push esi  +
push eax  +
push 40h  +
push offset unk_10034C0  +
push [ebp+var_8F4]  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword_10030E0  +
call IcmpSendEcho2  +
test eax eax +
jnz loc_1001F04  +
call ds:GetLastError  +
mov edi eax +
xor esi esi +
jmp loc_1001F0A  +
mov edi dword_100CE24 +
movzx eax [ebp+var_904] +
imul eax eax +
push 98h  +
add eax offset dword_10036A0 +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
test edi edi +
jz loc_1002161  +
cmp edi 2B05h +
jz loc_1002036  +
cmp edi 2B02h +
jnz loc_1001F5B  +
push 273Bh  +
push 1  +
call sub_1002979  +
pop ecx  +
pop ecx  +
jmp loc_1002021  +
cmp edi 2AF8h +
jb loc_1002011  +
test esi esi +
jz loc_1002213  +
movzx eax byte_1003010 +
push eax  +
push dword ptr [esi]  +
call sub_10012A7  +
jmp loc_1002205  +
push offset unk_100CE20  +
push eax  +
push 40h  +
push offset unk_10034C0  +
lea eax [ebp+vInBuffer] +
push eax  +
push offset vOutBuffer  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword_10030E0  +
call Icmp6SendEcho2  +
test eax eax +
jnz loc_1001FBC  +
call ds:GetLastError  +
mov edi eax +
xor ebx ebx +
jmp loc_1001FC7  +
mov edi dword_100CE3C +
mov ebx offset unk_100CE20 +
movzx eax [ebp+var_904] +
imul eax eax +
push 98h  +
add eax offset dword_10036A0 +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
test edi edi +
jz loc_10021A2  +
cmp edi 2B05h +
jz loc_1002057  +
cmp edi 2B02h +
jz loc_1001F48  +
cmp edi 2AF8h +
jnb loc_10021F0  +
push edi  +
push 271Ah  +
push 1  +
call sub_1002979  +
add esp 0Ch +
inc [ebp+var_910]  +
cmp [ebp+var_910] 3 +
jl loc_1001EB5  +
jmp loc_1002084  +
movzx eax [ebp+var_904] +
imul eax eax +
push 2  +
pop ecx  +
mov word_10036A8[eax] cx +
mov ecx [esi] +
mov dword_10036AC[eax] ecx +
jmp loc_1002084  +
movzx eax [ebp+var_904] +
imul eax eax +
push 17h  +
pop ecx  +
mov word_10036A8[eax] cx +
mov ecx [ebx+16h] +
lea esi [ebx+6] +
lea edi dword_10036B0[eax] +
movs   +
movs   +
movs   +
movs   +
mov dword_10036C0[eax] ecx +
cmp [ebp+var_910] 3 +
jz loc_1002244  +
movzx eax byte_1003010 +
push eax  +
movzx eax [ebp+var_904] +
push dword_10030E4  +
imul eax eax +
add eax offset word_10036A8 +
push eax  +
call sub_10011D5  +
push 273Ch  +
push 1  +
call sub_1002979  +
inc [ebp+var_904]  +
pop ecx  +
pop ecx  +
movzx eax [ebp+var_904] +
cmp eax [ebp+var_914] +
jbe loc_1001E91  +
mov al byte ptr [ebp+var_914] +
mov [ebp+var_904] al +
movzx eax [ebp+var_904] +
imul eax dword_1003008 +
imul eax dwMilliseconds +
xor edx edx +
mov ecx 3E8h +
div  ecx +
push eax  +
push 2743h  +
push 1  +
call sub_1002979  +
add esp 0Ch +
lea eax [ebp+var_904] +
push eax  +
call sub_100149D  +
movzx eax [ebp+var_904] +
push eax  +
call sub_1001650  +
push 271Bh  +
push 1  +
call sub_1002979  +
pop ecx  +
pop ecx  +
push dword_10030E0  +
call IcmpCloseHandle  +
call ds:WSACleanup  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10024F7  +
leave   +
retn   +
movzx eax byte_1003010 +
push eax  +
push dword ptr [esi]  +
call sub_10012A7  +
push 273Ch  +
push 1  +
call sub_1002979  +
movzx eax [ebp+var_904] +
imul eax eax +
pop ecx  +
pop ecx  +
push 2  +
pop ecx  +
mov word_10036A8[eax] cx +
mov ecx [esi] +
mov dword_10036AC[eax] ecx +
jmp loc_10020EA  +
movzx eax byte_1003010 +
push eax  +
lea esi [ebx+6] +
push esi  +
call sub_10012F2  +
push 273Ch  +
push 1  +
call sub_1002979  +
movzx eax [ebp+var_904] +
imul eax eax +
pop ecx  +
pop ecx  +
push 17h  +
pop ecx  +
mov word_10036A8[eax] cx +
mov ecx [ebx+16h] +
lea edi dword_10036B0[eax] +
movs   +
movs   +
movs   +
movs   +
mov dword_10036C0[eax] ecx +
jmp loc_10020EA  +
test ebx ebx +
jz loc_1002213  +
movzx eax byte_1003010 +
push eax  +
add ebx 6 +
push ebx  +
call sub_10012F2  +
push 2719h  +
push 1  +
call sub_1002979  +
pop ecx  +
pop ecx  +
mov eax dword_1003018 +
xor ecx ecx +
jmp loc_100222B  +
cmp eax 2B2Ah +
jz loc_100222F  +
mov eax dword_1003020[ecx*8] +
inc ecx  +
cmp eax edi +
jnz loc_100221C  +
push dwMessageId[ecx*8]  +
push 1  +
call sub_1002979  +
pop ecx  +
pop ecx  +
jmp loc_10020EA  +
dec [ebp+var_904]  +
jmp loc_10020EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1002270  +
test eax eax +
jnz loc_1002275  +
mov ecx [esi] +
test ecx ecx +
jz loc_100226D  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1002261  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1003194 +
push offset dword_1003184  +
push dword_1003190  +
mov dword_1003184 eax +
push offset dword_1003174  +
push offset dword_1003178  +
push offset dword_1003170  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1003180 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10022FD  +
cmp eax esi +
jnz loc_10022F0  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1002300  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10022D7  +
xor esi esi +
inc esi  +
mov eax dword_100CE98 +
cmp eax esi +
jnz loc_1002313  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_100234E  +
mov eax dword_100CE98 +
test eax eax +
jnz loc_1002348  +
mov dword_100CE98 esi +
push offset dword_100110C  +
push offset dword_1001100  +
call sub_1002254  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100234E  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1002418  +
mov dword_100318C esi +
mov eax dword_100CE98 +
cmp eax esi +
jnz loc_1002372  +
push offset dword_10010FC  +
push offset dword_10010F4  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100CE98 2 +
cmp [ebp+var_1C] ebx +
jnz loc_100237F  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100CEA0 ebx +
jz loc_10023A0  +
push offset dword_100CEA0  +
call sub_1002619  +
pop ecx  +
test eax eax +
jz loc_10023A0  +
push ebx  +
push 2  +
push ebx  +
call dword_100CEA0  +
push dword_1003174  +
push dword_1003178  +
push dword_1003170  +
call sub_100193D  +
add esp 0Ch +
mov dword_1003188 eax +
cmp dword_100317C ebx +
jnz loc_10023FE  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1003188 eax +
xor ebx ebx +
cmp dword_100317C ebx +
jnz loc_10023FE  +
push eax  +
call ds:_exit  +
cmp dword_100318C ebx +
jnz loc_100240C  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1003188 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1002435  +
xor eax eax +
jmp loc_1002482  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1002431  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_100246F  +
cmp ecx 20Bh +
jnz loc_1002431  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1002431  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_100247D  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1002431  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100317C eax +
call sub_10027B2  +
push eax  +
call ds:__set_app_type  +
or dword_100CE90 0FFFFFFFFh +
or dword_100CE94 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100319C +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1003198 +
mov [eax] ecx +
call sub_1002744  +
cmp dword_10030C8 0 +
jnz loc_10024DB  +
push offset sub_1002744  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100272C  +
xor eax eax +
retn   +
***
call sub_10027F1  +
jmp sub_10022B5  +
***
cmp ecx dword_10030B8 +
jnz loc_1002502  +
retn 0  +
jmp loc_1002887  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1002560  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1002560  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100255A  +
cmp eax 19930521h +
jz loc_100255A  +
cmp eax 19930522h +
jz loc_100255A  +
cmp eax 1994000h +
jnz loc_1002560  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1002520+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10025A6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10025A2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100260D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1002605  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100260F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10025F5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002590  +
pop ecx  +
test eax eax +
jz loc_1002676  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10025D0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002676  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100267F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10024F7  +
push offset dword_10030B8  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10027A5  +
cmp ecx 0FFFFFFFFh +
jz loc_10027A5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100279E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100279E  +
cmp edx 10000000h +
jnb loc_100279E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100279E  +
jmp loc_1002799  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10027E7  +
push eax  +
call sub_100274C  +
test eax eax +
jz loc_10027E7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10027DC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10027E7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_10030B8 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1002823  +
test eax ebx +
jz loc_1002823  +
not eax  +
mov dword_10030BC eax +
jmp loc_100287E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100286A  +
test dword_10030B8 ebx +
jnz loc_100286F  +
mov esi 0BB40E64Fh +
mov dword_10030B8 esi +
not esi  +
mov dword_10030BC esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10032A0 eax +
mov dword_100329C ecx +
mov dword_1003298 edx +
mov dword_1003294 ebx +
mov dword_1003290 esi +
mov dword_100328C edi +
mov word_10032B8 ss +
mov word_10032AC cs +
mov word_1003288 ds +
mov word_1003284 es +
mov word_1003280 fs +
mov word_100327C gs +
pushf   +
pop dword_10032B0  +
mov eax [ebp+0] +
mov dword_10032A4 eax +
mov eax [ebp+4] +
mov dword_10032A8 eax +
lea eax [ebp+8] +
mov dword_10032B4 eax +
mov eax [ebp-320h] +
mov dword_10031F0 10001h +
mov eax dword_10032A8 +
mov dword_10031AC eax +
mov dword_10031A0 0C0000409h +
mov dword_10031A4 1 +
mov eax dword_10030B8 +
mov [ebp-328h] eax +
mov eax dword_10030BC +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+arg_8] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
push 0  +
lea eax [ebp+hMem] +
push eax  +
push 0  +
push [ebp+dwMessageId]  +
push lpSource  +
push 900h  +
call ds:FormatMessageA  +
test eax eax +
jnz loc_10029AC  +
leave   +
retn   +
mov eax [ebp+hMem] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10029B2  +
push esi  +
push edi  +
sub eax ecx +
mov esi eax +
push esi  +
push [ebp+hMem]  +
push [ebp+hMem]  +
call ds:CharToOemBuffA  +
push 8000h  +
push [ebp+arg_0]  +
call _setmode  +
push esi  +
push [ebp+hMem]  +
mov edi eax +
push [ebp+arg_0]  +
call _write  +
push edi  +
push [ebp+arg_0]  +
mov esi eax +
call _setmode  +
add esp 1Ch +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
