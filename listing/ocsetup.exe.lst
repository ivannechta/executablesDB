mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_101814E  +
cmp word ptr [edx] 0 +
jnz loc_1018133  +
push 0Eh  +
jmp loc_1018150  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1018139  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1018151  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_1018162  +
cmp word ptr [edx] 0 +
jnz loc_1018167  +
mov edx offset aNull +
jmp loc_1018167  +
mov edx offset aNull_0 +
push 0  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_10181BB  +
cmp word ptr [edx] 0 +
jnz loc_10181A0  +
push 0Eh  +
jmp loc_10181BD  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10181A6  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_10181BE  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_10181CF  +
cmp word ptr [edx] 0 +
jnz loc_10181D4  +
mov edx offset aNull +
jmp loc_10181D4  +
mov edx offset aNull_0 +
push 0  +
push 4  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx ecx word ptr [eax] +
cmp cx 22h +
jnz loc_1018250  +
inc eax  +
inc eax  +
movzx ecx word ptr [eax] +
cmp cx 22h +
jz loc_101824C  +
test cx cx +
jnz loc_101823A  +
jmp loc_101825E  +
inc eax  +
inc eax  +
jmp loc_101825E  +
cmp cx 20h +
jbe loc_101825E  +
inc eax  +
inc eax  +
cmp word ptr [eax] 20h +
ja loc_1018256  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi [ebp+arg_0] +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
xor esi esi +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+pSid] ebx +
mov [ebp+var_14] ebx +
call ds:AllocateAndInitializeSid  +
test eax eax +
jnz loc_1018303  +
mov [ebp+pSid] ebx +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_10182DA  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_10182E1  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018368  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018368  +
push esi  +
push offset dword_1001270  +
push 25h  +
jmp loc_1018356  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+pSid]  +
push ebx  +
call ds:CheckTokenMembership  +
test eax eax +
jnz loc_1018363  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101832F  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_1018336  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018368  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018368  +
push esi  +
push offset dword_1001270  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1018368  +
mov eax [ebp+var_14] +
mov [edi] eax +
cmp [ebp+pSid] ebx +
jz loc_1018376  +
push [ebp+pSid]  +
call ds:FreeSid  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 5Ch  +
push [ebp+arg_0]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10183B0  +
cmp word ptr [eax+2] 0 +
jnz loc_10183B0  +
xor ecx ecx +
mov [eax] cx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp+var_4] 0 +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
mov esi ecx +
call sub_101D489  +
mov edi eax +
test edi edi +
jge loc_10183E0  +
push offset aFailedToDuplic  +
jmp loc_10183F6  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov edi eax +
test edi edi +
jge loc_1018408  +
push offset aFailedToAddThe  +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101840C  +
and dword ptr [ebp+var_4] 0 +
cmp dword ptr [ebp+var_4] 0 +
jz loc_101841A  +
push dword ptr [ebp+var_4]  +
call sub_101D0A4  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
xor esi esi +
call ds:GetProcessWindowStation  +
test eax eax +
jnz loc_1018483  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_1018456  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101845D  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_10184F3  +
test byte ptr [eax+1Ch] 1 +
jz loc_10184F3  +
push esi  +
push offset dword_1001270  +
push 0Ah  +
jmp loc_10184DB  +
lea ecx [ebp+nLengthNeeded] +
push ecx  +
push 0Ch  +
lea ecx [ebp+pvInfo] +
push ecx  +
push 1  +
push eax  +
call ds:GetUserObjectInformationW  +
test eax eax +
jnz loc_10184E8  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_10184B4  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_10184BB  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_10184F3  +
test byte ptr [eax+1Ch] 1 +
jz loc_10184F3  +
push esi  +
push offset dword_1001270  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_10184F3  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_0] +
and eax 1 +
mov [ecx] eax +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetFullPathNameW +
xor esi esi +
push esi  +
push esi  +
push esi  +
push [ebp+lpFileName]  +
mov [ebp+lpBuffer] esi +
call edi  +
mov ebx eax +
cmp ebx esi +
jnz loc_1018572  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101853B  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_1018542  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101861E  +
test byte ptr [eax+1Ch] 1 +
jz loc_101861E  +
push esi  +
push [ebp+lpFileName]  +
push offset dword_1001270  +
push 0Ch  +
jmp loc_1018605  +
push ebx  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_101D118  +
mov esi eax +
test esi esi +
jge loc_10185B1  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101861E  +
test byte ptr [eax+1Ch] 1 +
jz loc_101861E  +
push esi  +
push offset dword_1001270  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101861E  +
push [ebp+lpFilePart]  +
push [ebp+lpBuffer]  +
push ebx  +
push [ebp+lpFileName]  +
call edi  +
test eax eax +
jnz loc_1018612  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_10185DB  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_10185E2  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101861E  +
test byte ptr [eax+1Ch] 1 +
jz loc_101861E  +
push esi  +
push [ebp+lpFileName]  +
push offset dword_1001270  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101861E  +
mov eax [ebp+lpBuffer] +
mov ecx [ebp+arg_4] +
and [ebp+lpBuffer] 0 +
mov [ecx] eax +
cmp [ebp+lpBuffer] 0 +
jz loc_101862C  +
push [ebp+lpBuffer]  +
call sub_101D0A4  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ds:GetModuleHandleW +
push edi  +
xor eax eax +
lea ecx [ebp+arg_10] +
mov [ebp+Arguments] ecx +
lea ecx [ebp+Arguments] +
push ecx  +
push eax  +
lea ecx [ebp+lpText] +
push ecx  +
push eax  +
push [ebp+dwMessageId]  +
mov [ebp+var_4] eax +
push eax  +
mov [ebp+lpText] eax +
mov [ebp+hMem] eax +
call esi  +
mov edi ds:FormatMessageW +
push eax  +
mov ebx 900h +
push ebx  +
call edi  +
xor ecx ecx +
mov [ebp+Arguments] ecx +
cmp eax ecx +
jnz loc_10186DC  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
test eax eax +
jle loc_101869E  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_10186AB  +
mov [ebp+var_4] 80004005h +
push [ebp+var_4]  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_10187E9  +
test byte ptr [eax+1Ch] 1 +
jz loc_10187E9  +
push [ebp+var_4]  +
push [ebp+dwMessageId]  +
push offset dword_1001270  +
push 0Fh  +
jmp loc_1018747  +
push ecx  +
push ecx  +
lea eax [ebp+hMem] +
push eax  +
push ecx  +
push [ebp+arg_4]  +
push ecx  +
call esi  +
push eax  +
push ebx  +
call edi  +
test eax eax +
jnz loc_1018757  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
test eax eax +
jle loc_101870B  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1018718  +
mov [ebp+var_4] 80004005h +
push [ebp+var_4]  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_10187E9  +
test byte ptr [eax+1Ch] 1 +
jz loc_10187E9  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
push offset dword_1001270  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10180EB  +
jmp loc_10187E9  +
push 0Dh  +
push [ebp+hMem]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101876D  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+arg_8] +
or eax 10000h +
push eax  +
push [ebp+hMem]  +
push [ebp+lpText]  +
push 0  +
call ds:MessageBoxW  +
test eax eax +
jnz loc_10187E0  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
test eax eax +
jle loc_10187A2  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_10187AF  +
mov [ebp+var_4] 80004005h +
push [ebp+var_4]  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_10187E9  +
test byte ptr [eax+1Ch] 1 +
jz loc_10187E9  +
push [ebp+var_4]  +
push offset dword_1001270  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_10187E9  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_10187E9  +
mov [ecx] eax +
cmp [ebp+hMem] 0 +
mov esi ds:LocalFree +
jz loc_10187FA  +
push [ebp+hMem]  +
call esi  +
cmp [ebp+lpText] 0 +
jz loc_1018805  +
push [ebp+lpText]  +
call esi  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
push [ebp+dwMessageId]  +
xor esi esi +
push edi  +
push 1300h  +
mov [ebp+hMem] edi +
call ds:FormatMessageW  +
test eax eax +
jnz loc_101888C  +
call ds:GetLastError  +
mov esi eax +
cmp esi edi +
jle loc_1018855  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi edi +
jl loc_101885C  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_10188AD  +
test byte ptr [eax+1Ch] 1 +
jz loc_10188AD  +
push esi  +
push [ebp+dwMessageId]  +
push offset dword_1001270  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10180EB  +
jmp loc_10188AD  +
push 0Dh  +
push [ebp+hMem]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_10188A2  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+hMem] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov [ebp+hMem] edi +
cmp [ebp+hMem] edi +
jz loc_10188BB  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
push esi  +
xor ebx ebx +
mov eax hObj +
mov esi offset hObj +
cmp eax esi +
jz loc_10188FD  +
test byte ptr [eax+1Ch] 10h +
jz loc_10188FD  +
push [ebp+lpCommandLine]  +
push offset dword_1001270  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101811D  +
push edi  +
xor eax eax +
lea edi [ebp+hObject] +
stos   +
stos   +
stos   +
push 44h  +
stos   +
pop edi  +
push edi  +
lea eax [ebp+StartupInfo] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
mov [ebp+StartupInfo.cb] edi +
xor edi edi +
push edi  +
push edi  +
push 8000000h  +
push edi  +
push edi  +
push edi  +
push [ebp+lpCommandLine]  +
push edi  +
call ds:CreateProcessW  +
test eax eax +
jnz loc_1018997  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx edi +
jle loc_1018958  +
and ebx 0FFFFh +
or ebx 80070000h +
cmp ebx edi +
jl loc_101895F  +
mov ebx 80004005h +
push ebx  +
call sub_102A9E6  +
mov eax hObj +
cmp eax esi +
jz loc_1018A4B  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018A4B  +
push ebx  +
push [ebp+lpCommandLine]  +
push offset dword_1001270  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_1018A4B  +
push 0FFFFFFFFh  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
cmp eax 0FFFFFFFFh +
jnz loc_10189E7  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx edi +
jle loc_10189C1  +
and ebx 0FFFFh +
or ebx 80070000h +
cmp ebx edi +
jl loc_10189C8  +
mov ebx 80004005h +
push ebx  +
call sub_102A9E6  +
mov eax hObj +
cmp eax esi +
jz loc_1018A4B  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018A4B  +
push ebx  +
push offset dword_1001270  +
push 15h  +
jmp loc_1018A36  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hObject]  +
call ds:GetExitCodeProcess  +
test eax eax +
jnz loc_1018A43  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx edi +
jle loc_1018A12  +
and ebx 0FFFFh +
or ebx 80070000h +
cmp ebx edi +
jl loc_1018A19  +
mov ebx 80004005h +
push ebx  +
call sub_102A9E6  +
mov eax hObj +
cmp eax esi +
jz loc_1018A4B  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018A4B  +
push ebx  +
push offset dword_1001270  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1018A4B  +
mov eax [ebp+arg_4] +
mov ecx [ebp+ExitCode] +
mov [eax] ecx +
mov esi ds:CloseHandle +
cmp [ebp-10h] edi +
jz loc_1018A5B  +
push dword ptr [ebp-10h]  +
call esi  +
cmp [ebp+hObject] edi +
pop edi  +
jz loc_1018A66  +
push [ebp+hObject]  +
call esi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+lpFileName] +
lea eax [ebp+FindFileData] +
push eax  +
xor ebx ebx +
push edi  +
mov [ebp+var_258] ebx +
call ds:FindFirstFileW  +
cmp eax 0FFFFFFFFh +
jz loc_1018ACD  +
push eax  +
inc ebx  +
call ds:FindClose  +
mov [esi] ebx +
mov ecx [ebp+var_4] +
mov eax [ebp+var_258] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn 8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1018ADA  +
push 0Dh  +
pop eax  +
cmp eax 2 +
jz loc_1018AE4  +
cmp eax 3 +
jnz loc_1018AE6  +
xor eax eax +
test eax eax +
jz loc_1018AB4  +
jle loc_1018AF6  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
mov [ebp+var_258] eax +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018AB6  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018AB6  +
push [ebp+var_258]  +
push edi  +
push offset dword_1001270  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_1018AB6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_34] +
stos   +
stos   +
stos   +
push 10h  +
pop esi  +
stos   +
or [ebp+var_2C] 0FFFFFFFFh +
push 30h  +
pop edi  +
push edi  +
lea eax [ebp+ActionData] +
push 0  +
push eax  +
mov [ebp+var_24] ecx +
mov [ebp+var_34] esi +
mov [ebp+var_30] ecx +
call memset  +
and [ebp+var_54] 0 +
lea eax [ebp+var_34] +
add esp 0Ch +
mov [ebp+var_4C] eax +
lea eax [ebp+ActionData] +
push eax  +
mov [ebp+ActionData] edi +
xor ebx ebx +
push offset ActionID  +
inc ebx  +
xor edi edi +
push edi  +
mov [ebp+var_58] 2 +
mov [ebp+var_50] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_3C] esi +
call WinVerifyTrust  +
mov esi eax +
cmp esi edi +
mov [ebp+var_1C] esi +
jge loc_1018BE8  +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018D8B  +
test [eax+1Ch] bl +
jz loc_1018D8B  +
push esi  +
push [ebp+var_24]  +
push offset dword_1001270  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_1018D8B  +
push [ebp+var_44]  +
call WTHelperProvDataFromStateData  +
cmp eax edi +
jnz loc_1018C39  +
call ds:GetLastError  +
mov esi 80004005h +
push esi  +
mov [ebp+var_1C] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018D74  +
test [eax+1Ch] bl +
jz loc_1018D74  +
push esi  +
push offset dword_1001270  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1018D74  +
push edi  +
push edi  +
push edi  +
push eax  +
call WTHelperGetProvSignerFromChain  +
cmp eax edi +
jnz loc_1018C7D  +
call ds:GetLastError  +
mov esi 80004005h +
push esi  +
mov [ebp+var_1C] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018D74  +
test [eax+1Ch] bl +
jz loc_1018D74  +
push esi  +
push offset dword_1001270  +
push 1Ah  +
jmp loc_1018C29  +
mov ecx [eax+0Ch] +
dec ecx  +
push ecx  +
push eax  +
call WTHelperGetProvCertFromChain  +
mov ecx eax +
cmp ecx edi +
jnz loc_1018CC8  +
call ds:GetLastError  +
mov esi 80004005h +
push esi  +
mov [ebp+var_1C] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018D74  +
test [eax+1Ch] bl +
jz loc_1018D74  +
push esi  +
push offset dword_1001270  +
push 1Bh  +
jmp loc_1018C29  +
xor eax eax +
lea edi [ebp+pbComputedHash] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+pcbComputedHash] +
push eax  +
lea eax [ebp+pbComputedHash] +
push eax  +
mov [ebp+pcbComputedHash] 14h +
mov eax [ecx+4] +
mov eax [eax+0Ch] +
add eax 38h +
push eax  +
push ebx  +
xor esi esi +
push esi  +
push 8004h  +
push esi  +
call ds:CryptHashPublicKeyInfo  +
test eax eax +
jnz loc_1018D4D  +
call ds:GetLastError  +
cmp eax esi +
mov [ebp+var_1C] eax +
jle loc_1018D19  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_1C] eax +
cmp [ebp+var_1C] esi +
jl loc_1018D25  +
mov [ebp+var_1C] 80004005h +
push [ebp+var_1C]  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018D74  +
test [eax+1Ch] bl +
jz loc_1018D74  +
push [ebp+var_1C]  +
push offset dword_1001270  +
push 1Ch  +
jmp loc_1018C29  +
mov eax offset dword_10012A0 +
xor edx edx +
mov ecx [ebp+pcbComputedHash] +
mov edi eax +
lea esi [ebp+pbComputedHash] +
xor ebx ebx +
cmps   +
jz loc_1018D74  +
add edx 14h +
add eax 14h +
cmp edx 3Ch +
jb loc_1018D54  +
mov [ebp+var_1C] 800B0109h +
lea eax [ebp+ActionData] +
push eax  +
push offset ActionID  +
push 0  +
mov [ebp+var_48] 2 +
call WinVerifyTrust  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 22Ch +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+hObject] 0FFFFFFFFh +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push edi  +
lea eax [ebp+lpFileName] +
push eax  +
push esi  +
mov [ebp+lpFileName] edi +
mov [ebp+var_21C] edi +
mov [ebp+var_220] edi +
call sub_10184FF  +
cmp eax edi +
mov [ebp+var_214] eax +
jge loc_1018E1C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018F8F  +
push [ebp+var_214]  +
push esi  +
push offset dword_1001270  +
push 1Dh  +
jmp loc_1018EA9  +
push edi  +
push edi  +
push 3  +
push edi  +
push 1  +
push 80000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1018EB9  +
call ds:GetLastError  +
cmp eax edi +
mov [ebp+var_214] eax +
jle loc_1018E5F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_214] eax +
cmp [ebp+var_214] edi +
jl loc_1018E71  +
mov [ebp+var_214] 80004005h +
push [ebp+var_214]  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018F8F  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018F8F  +
push [ebp+var_214]  +
push [ebp+lpFileName]  +
push offset dword_1001270  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_1018F8F  +
mov edi ds:GetLastError +
mov [ebp+var_224] 14h +
push ebx  +
cmp [ebp+var_21C] 0 +
jz loc_1018EDF  +
push [ebp+var_21C]  +
call ??3@YAXPAX@Z  +
pop ecx  +
push [ebp+var_224]  +
call ??2@YAPAXI@Z  +
mov ebx eax +
pop ecx  +
mov [ebp+var_21C] ebx +
test ebx ebx +
jz loc_1018FF7  +
push 0  +
push ebx  +
lea eax [ebp+var_224] +
push eax  +
push [ebp+hObject]  +
call CryptCATAdminCalcHashFromFileHandle  +
mov esi offset dword_1001270 +
test eax eax +
jnz loc_101902C  +
call edi  +
cmp eax 7Ah +
jz loc_1018ECA  +
mov ecx hObj +
cmp ecx offset hObj +
jz loc_1018F4D  +
test byte ptr [ecx+1Ch] 1 +
jz loc_1018F4D  +
push eax  +
push [ebp+lpFileName]  +
push esi  +
push 20h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_101818A  +
mov ecx [ebp+lpFileName] +
call sub_1018B34  +
mov [ebp+var_214] eax +
test eax eax +
jge loc_1018F8E  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018F8E  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018F8E  +
push [ebp+var_214]  +
push [ebp+lpFileName]  +
push esi  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
pop ebx  +
xor esi esi +
cmp [ebp+var_220] esi +
jz loc_1018FA5  +
push esi  +
push [ebp+var_220]  +
call CryptCATAdminReleaseContext  +
cmp [ebp+var_21C] esi +
jz loc_1018FB9  +
push [ebp+var_21C]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_1018FCE  +
push [ebp+hObject]  +
call ds:CloseHandle  +
cmp [ebp+lpFileName] esi +
pop edi  +
pop esi  +
jz loc_1018FE3  +
push [ebp+lpFileName]  +
call sub_101D0A4  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_214] +
xor ecx ebp +
call sub_101CBEA  +
leave   +
retn 4  +
mov esi 8007000Eh +
push esi  +
mov [ebp+var_214] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018F8E  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018F8E  +
push esi  +
push offset dword_1001270  +
push 1Fh  +
jmp loc_10190A4  +
push 0  +
push offset nullsub_1  +
lea eax [ebp+var_220] +
push eax  +
call CryptCATAdminAcquireContext  +
test eax eax +
jnz loc_10190B4  +
call edi  +
mov [ebp+var_214] eax +
test eax eax +
jle loc_101905F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_214] eax +
cmp [ebp+var_214] 0 +
jl loc_1019072  +
mov [ebp+var_214] 80004005h +
push [ebp+var_214]  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1018F8E  +
test byte ptr [eax+1Ch] 1 +
jz loc_1018F8E  +
push [ebp+var_214]  +
push offset dword_1001270  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1018F8E  +
and [ebp+var_22C] 0 +
lea eax [ebp+var_22C] +
push eax  +
push 0  +
push [ebp+var_224]  +
push ebx  +
push [ebp+var_220]  +
call CryptCATAdminEnumCatalogFromHash  +
mov edi eax +
test edi edi +
jz loc_1018F4D  +
mov ebx 20Ch +
push ebx  +
lea eax [ebp+var_210] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 0  +
lea eax [ebp+var_210] +
push eax  +
push edi  +
mov [ebp+var_210] ebx +
call CryptCATCatalogInfoFromContext  +
test eax eax +
jnz loc_1019132  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019175  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019175  +
push esi  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10180C5  +
jmp loc_1019175  +
lea ecx [ebp+var_20C] +
call sub_1018B34  +
test eax eax +
jge loc_1018F8E  +
mov ecx hObj +
cmp ecx offset hObj +
jz loc_1019175  +
test byte ptr [ecx+1Ch] 10h +
jz loc_1019175  +
push eax  +
push [ebp+lpFileName]  +
lea eax [ebp+var_20C] +
push eax  +
push esi  +
push 23h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019F4C  +
lea eax [ebp+var_22C] +
push eax  +
push 0  +
push [ebp+var_224]  +
mov [ebp+var_22C] edi +
push [ebp+var_21C]  +
push [ebp+var_220]  +
call CryptCATAdminEnumCatalogFromHash  +
mov edi eax +
test edi edi +
jnz loc_10190E5  +
jmp loc_1018F4D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_101D489  +
mov ebx eax +
test ebx ebx +
jge loc_10191E4  +
push offset aFailedToAlloca  +
push 1  +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_1019237  +
mov esi [ebp+var_4] +
test esi esi +
jz loc_1019245  +
push edi  +
cmp word ptr [esi] 0 +
jz loc_1019236  +
push 3Bh  +
push esi  +
call ds:wcschr  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_101920A  +
xor eax eax +
mov [edi] ax +
inc edi  +
inc edi  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_10183B9  +
mov ebx eax +
test ebx ebx +
jl loc_1019221  +
mov esi edi +
test edi edi +
jnz loc_10191EC  +
jmp loc_1019236  +
push offset aFailedToAddAVa  +
push 1  +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
pop edi  +
cmp [ebp+var_4] 0 +
jz loc_1019245  +
push [ebp+var_4]  +
call sub_101D0A4  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov eax ecx +
xor ecx ecx +
mov [eax] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
mov [eax+20h] ecx +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1019287  +
push eax  +
call sub_101D0A4  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1019294  +
push eax  +
call sub_101D0A4  +
mov eax [esi+18h] +
test eax eax +
jz loc_10192A1  +
push eax  +
call sub_101D0A4  +
mov esi [esi+1Ch] +
test esi esi +
jz loc_10192AE  +
push esi  +
call sub_101D0A4  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+pNumArgs] +
push eax  +
push [ebp+lpCmdLine]  +
mov edi ecx +
call ds:CommandLineToArgvW  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_101931A  +
call ds:GetLastError  +
mov esi 80004005h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019775  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019775  +
push esi  +
push offset dword_1001384  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1019775  +
push ebx  +
push 2  +
pop ebx  +
cmp [ebp+pNumArgs] ebx +
jge loc_1019358  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
push esi  +
push offset dword_1001384  +
push 0Bh  +
jmp loc_1019757  +
mov esi ds:_wcsicmp +
push offset a?  +
push dword ptr [eax+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1019764  +
mov eax [ebp+hMem] +
push offset asc_1001428  +
push dword ptr [eax+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1019764  +
mov eax [ebp+hMem] +
push offset aHelp  +
push dword ptr [eax+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1019764  +
mov eax [ebp+hMem] +
push dword ptr [eax+4]  +
push edi  +
call sub_101D489  +
mov [ebp+lpCmdLine] eax +
test eax eax +
jge loc_10193DC  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
push [ebp+lpCmdLine]  +
push offset dword_1001384  +
push 0Ch  +
jmp loc_1019757  +
cmp [ebp+pNumArgs] ebx +
jle loc_1019554  +
mov eax [ebp+hMem] +
lea esi [eax+ebx*4] +
push offset aUninstall  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101940A  +
mov dword ptr [edi+4] 1 +
jmp loc_101954A  +
push offset aPassive  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101946A  +
push 0Eh  +
push offset aUnattendfile  +
push dword ptr [esi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1019476  +
mov esi [esi] +
lea eax [esi+1Ch] +
xor ecx ecx +
cmp [eax] cx +
jz loc_1019560  +
lea esi [edi+0Ch] +
cmp [esi] ecx +
jnz loc_101959B  +
push ecx  +
push esi  +
push eax  +
call sub_10184FF  +
mov [ebp+lpCmdLine] eax +
test eax eax +
jl loc_10196FF  +
push dword ptr [esi]  +
call ds:_wcslwr  +
pop ecx  +
mov dword ptr [edi+8] 1 +
jmp loc_101954A  +
push offset aQuiet  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1019495  +
inc eax  +
mov [edi+8] eax +
mov [edi+10h] eax +
jmp loc_101954A  +
push offset aNorestart  +
push dword ptr [esi]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10194B4  +
mov dword ptr [edi+14h] 1 +
jmp loc_101954A  +
push 5  +
push offset aLog  +
push dword ptr [esi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1019503  +
mov esi [esi] +
lea eax [esi+0Ah] +
xor ecx ecx +
cmp [eax] cx +
jz loc_10195D6  +
lea esi [edi+18h] +
cmp [esi] ecx +
jnz loc_1019611  +
push ecx  +
push esi  +
push eax  +
call sub_10184FF  +
mov [ebp+lpCmdLine] eax +
test eax eax +
jl loc_101971D  +
push dword ptr [esi]  +
call ds:_wcslwr  +
pop ecx  +
jmp loc_101954A  +
push 3  +
push offset asc_1001394  +
push dword ptr [esi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10196BC  +
mov esi [esi] +
lea eax [esi+6] +
cmp word ptr [eax] 0 +
jz loc_101964C  +
lea ecx [edi+1Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_1019684  +
push eax  +
push ecx  +
call sub_101D489  +
mov [ebp+lpCmdLine] eax +
test eax eax +
jl loc_101973B  +
inc ebx  +
cmp ebx [ebp+pNumArgs] +
jl loc_10193E5  +
mov dword ptr [edi+20h] 1 +
jmp loc_101976B  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
mov ecx [ebp+hMem] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001384  +
push 0Dh  +
jmp loc_10196F2  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
mov ecx [ebp+hMem] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001384  +
push 0Eh  +
jmp loc_10196F2  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
mov ecx [ebp+hMem] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001384  +
push 10h  +
jmp loc_10196F2  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
mov ecx [ebp+hMem] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001384  +
push 11h  +
jmp loc_10196F2  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
mov ecx [ebp+hMem] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001384  +
push 13h  +
jmp loc_10196F2  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
mov ecx [ebp+hMem] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001384  +
push 14h  +
jmp loc_10196F2  +
mov esi 80070057h +
push esi  +
mov [ebp+lpCmdLine] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
mov ecx [ebp+hMem] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001384  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101976B  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
push [ebp+lpCmdLine]  +
push offset dword_1001384  +
push 0Fh  +
jmp loc_1019757  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
push [ebp+lpCmdLine]  +
push offset dword_1001384  +
push 12h  +
jmp loc_1019757  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101976B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101976B  +
push [ebp+lpCmdLine]  +
push offset dword_1001384  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101976B  +
mov [ebp+lpCmdLine] 1 +
push [ebp+hMem]  +
call ds:LocalFree  +
pop ebx  +
mov eax [ebp+lpCmdLine] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi 1078h +
push esi  +
xor ebx ebx +
call ??2@YAPAXI@Z  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jnz loc_10197DD  +
mov esi 8007000Eh +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019896  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019896  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1019896  +
push esi  +
push ebx  +
push edi  +
call memset  +
add esp 0Ch +
push [ebp+arg_8]  +
mov [edi] esi +
push [ebp+arg_4]  +
mov dword ptr [edi+70h] 78h +
push [ebp+arg_0]  +
mov dword ptr [edi+6Ch] 878h +
push ebx  +
push ebx  +
push ebx  +
call ds:EnableTrace  +
cmp eax ebx +
jz loc_1019849  +
jle loc_101981A  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101988F  +
test byte ptr [eax+1Ch] 1 +
jz loc_101988F  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101988F  +
push 1  +
push edi  +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call ds:ControlTraceW  +
cmp eax ebx +
jz loc_101988D  +
jle loc_1019869  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101988F  +
test byte ptr [eax+1Ch] 1 +
jz loc_101988F  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 10h  +
jmp loc_101983C  +
mov esi ebx +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_10198BB  +
cmp ecx 7FFFFFFFh +
jbe loc_10198C0  +
mov eax 80070057h +
test eax eax +
jl loc_101990B  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_10198FB  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_10198F6  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_10198F6  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10198DE  +
pop edi  +
test esi esi +
jnz loc_1019902  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101992A  +
cmp ecx 7FFFFFFFh +
jbe loc_101992F  +
mov eax 80070057h +
test eax eax +
jl loc_101996C  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101995C  +
cmp eax esi +
ja loc_101995C  +
jnz loc_1019967  +
jmp loc_1019961  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test ecx ecx +
jz loc_10199BF  +
mov eax [ebp+arg_4] +
cmp eax 7FFFFFFFh +
ja loc_10199BF  +
push edi  +
xor edi edi +
mov edx eax +
test eax eax +
jz loc_10199A4  +
cmp [ecx] di +
jz loc_10199A0  +
inc ecx  +
inc ecx  +
dec edx  +
jnz loc_1019996  +
test edx edx +
jnz loc_10199A9  +
mov edi 80070057h +
test esi esi +
jz loc_10199BA  +
test edi edi +
jl loc_10199B7  +
sub eax edx +
mov [esi] eax +
jmp loc_10199BA  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
jmp loc_10199C4  +
mov eax 80070057h +
test eax eax +
jge loc_10199CF  +
test esi esi +
jz loc_10199CF  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_210] eax +
mov eax [ebp+arg_C] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_218] esi +
mov [ebp+var_21C] eax +
mov [ebp+var_20C] ebx +
mov [ebp+var_208] ebx +
call ds:GetCurrentProcessId  +
push eax  +
push edi  +
push offset aSU  +
lea eax [ebp+var_204] +
push 100h  +
push eax  +
call sub_1019914  +
mov edi eax +
add esp 14h +
test edi edi +
jge loc_1019A71  +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019C32  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019C32  +
push edi  +
push offset aUzlCdxbD6Ic  +
push 0Ah  +
jmp loc_1019BEC  +
lea eax [ebp+var_204] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1019A7A  +
sub eax edx +
sar eax 1 +
lea ecx [eax+eax+2] +
mov eax esi +
mov [ebp+var_220] ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1019A97  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
lea edi [eax+ecx+78h] +
push edi  +
mov [ebp+var_214] eax +
call ??2@YAPAXI@Z  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_1019AF4  +
mov esi 8007000Eh +
push esi  +
mov edi esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019C32  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019C32  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 0Bh  +
jmp loc_1019BEC  +
push edi  +
push 0  +
push ebx  +
call memset  +
mov esi [ebp+var_210] +
mov eax [ebp+var_220] +
mov [ebx] edi +
mov dword ptr [ebx+2Ch] 20000h +
mov dword ptr [ebx+28h] 1 +
lea edi [ebx+18h] +
movs   +
movs   +
movs   +
add esp 0Ch +
push [ebp+var_218]  +
movs   +
push [ebp+var_214]  +
add eax 78h +
mov [ebx+6Ch] eax +
add eax ebx +
xor esi esi +
push eax  +
mov [ebx+40h] esi +
mov dword ptr [ebx+70h] 78h +
call sub_10198A4  +
mov edi eax +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call ds:StartTraceW  +
cmp eax esi +
jz loc_1019B9C  +
jle loc_1019B70  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019C32  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019C32  +
push edi  +
push offset aUzlCdxbD6Ic  +
push 0Ch  +
jmp loc_1019BEC  +
push [ebp+var_208]  +
push [ebp+var_20C]  +
push [ebp+var_210]  +
push 5  +
push 1Fh  +
push 1  +
call ds:EnableTrace  +
cmp eax esi +
jz loc_1019BF9  +
jle loc_1019BCA  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019C32  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019C32  +
push edi  +
push offset aUzlCdxbD6Ic  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1019C32  +
push 3  +
push ebx  +
push esi  +
push [ebp+var_208]  +
push [ebp+var_20C]  +
call ds:ControlTraceW  +
mov ecx [ebp+var_20C] +
mov eax [ebp+var_21C] +
mov [eax] ecx +
mov ecx [ebp+var_208] +
mov [eax+4] ecx +
mov [ebp+var_20C] esi +
mov [ebp+var_208] esi +
mov eax [ebp+var_20C] +
or eax [ebp+var_208] +
jz loc_1019C54  +
push 1  +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
push 0  +
push 0  +
call ds:ControlTraceW  +
test ebx ebx +
jz loc_1019C5F  +
push ebx  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_41C] eax +
mov eax [ebp+arg_C] +
push edi  +
mov [ebp+var_428] eax +
xor eax eax +
push 208h  +
push eax  +
mov [ebp+var_418] eax +
mov [ebp+var_420] eax +
lea eax [ebp+var_20C] +
push eax  +
mov [ebp+var_424] esi +
call memset  +
add esp 0Ch +
mov edi 104h +
push edi  +
lea eax [ebp+var_414] +
push eax  +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jnz loc_1019D35  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_1019D01  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_1019D08  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019EA7  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019EA7  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 11h  +
jmp loc_1019E85  +
lea eax [ebp+var_414] +
push eax  +
call sub_101838E  +
lea eax [ebp+var_420] +
push eax  +
push edi  +
push esi  +
call sub_1019973  +
mov esi eax +
test esi esi +
jge loc_1019D7C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019EA7  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019EA7  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 12h  +
jmp loc_1019E85  +
cmp dword ptr [ebx+4] 0 +
mov edx offset aUninstall_0 +
jnz loc_1019D8C  +
mov edx offset aInstall +
cmp [ebp+var_41C] 0 +
mov ecx [ebp+var_41C] +
mov eax offset dword_10014D4 +
jnz loc_1019DA4  +
mov ecx eax +
jmp loc_1019DA9  +
mov eax offset a_ +
push dword ptr [ebx]  +
push edx  +
push ecx  +
push eax  +
push offset aOcsetup_0  +
lea eax [ebp+var_414] +
push eax  +
mov eax 100h +
sub eax [ebp+var_420] +
push offset aSSSS_S_S  +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1019914  +
mov esi eax +
add esp 24h +
cmp esi 8007007Ah +
jz loc_1019E0C  +
test esi esi +
jge loc_1019E0C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019EA7  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019EA7  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 13h  +
jmp loc_1019E85  +
push [ebp+var_424]  +
lea eax [ebp+var_20C] +
push eax  +
push offset aS_S  +
push edi  +
push eax  +
call sub_1019914  +
mov esi eax +
add esp 14h +
test esi esi +
jge loc_1019E4A  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019EA7  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019EA7  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 14h  +
jmp loc_1019E85  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_418] +
push offset aS  +
push eax  +
call sub_101D513  +
mov esi eax +
add esp 0Ch +
test esi esi +
jge loc_1019E92  +
mov eax hObj +
cmp eax offset hObj +
jz loc_1019EA7  +
test byte ptr [eax+1Ch] 1 +
jz loc_1019EA7  +
push esi  +
push offset aUzlCdxbD6Ic  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_1019EA7  +
mov eax [ebp+var_418] +
mov ecx [ebp+var_428] +
and [ebp+var_418] 0 +
mov [ecx] eax +
cmp [ebp+var_418] 0 +
jz loc_1019EBB  +
push [ebp+var_418]  +
call sub_101D0A4  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_1019F04  +
cmp word ptr [edx] 0 +
jnz loc_1019EE9  +
push 0Eh  +
jmp loc_1019F06  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1019EEF  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1019F07  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_1019F18  +
cmp word ptr [edx] 0 +
jnz loc_1019F1D  +
mov edx offset aNull +
jmp loc_1019F1D  +
mov edx offset aNull_0 +
push 0  +
push 4  +
lea ecx [ebp+arg_18] +
push ecx  +
push 4  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_1019F86  +
cmp word ptr [edx] 0 +
jnz loc_1019F6A  +
mov [ebp+arg_14] 0Eh +
jmp loc_1019F8D  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1019F6F  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_14] eax +
jmp loc_1019F8D  +
mov [ebp+arg_14] 0Ah +
mov ebx offset aNull_0 +
test edx edx +
jz loc_1019FA3  +
cmp word ptr [edx] 0 +
jnz loc_1019FA5  +
mov edx offset aNull +
jmp loc_1019FA5  +
mov edx ebx +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_1019FCF  +
cmp word ptr [edi] 0 +
jnz loc_1019FB6  +
push 0Eh  +
jmp loc_1019FD1  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1019FBB  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_1019FD2  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_1019FE7  +
cmp word ptr [edi] 0 +
jnz loc_1019FE3  +
mov eax offset aNull +
jmp loc_1019FE9  +
mov eax edi +
jmp loc_1019FE9  +
mov eax ebx +
push 0  +
push 4  +
lea esi [ebp+arg_18] +
push esi  +
push [ebp+arg_14]  +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 30h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi ds:GetModuleHandleW +
push edi  +
push dword ptr [ebp+uID]  +
xor ebx ebx +
push ebx  +
mov [ebp+lpCaption] ebx +
mov dword ptr [ebp+var_8] ebx +
mov [ebp+lpText] ebx +
mov [ebp+var_10] ebx +
call esi  +
push eax  +
lea eax [ebp+lpCaption] +
push eax  +
call sub_101D193  +
mov edi eax +
cmp edi ebx +
jge loc_101A055  +
push offset aFailedGettingC  +
jmp loc_101A09F  +
push [ebp+arg_4]  +
push ebx  +
call esi  +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_101D193  +
mov edi eax +
cmp edi ebx +
jge loc_101A072  +
push offset aFailedGettingM  +
jmp loc_101A09F  +
push dword ptr [ebp+var_8]  +
lea eax [ebp+lpText] +
push eax  +
call sub_101D489  +
mov edi eax +
cmp edi ebx +
jl loc_101A09A  +
lea eax [ebp+arg_10] +
push eax  +
push dword ptr [ebp+var_8]  +
lea eax [ebp+lpText] +
push eax  +
call sub_101D39E  +
mov edi eax +
cmp edi ebx +
jge loc_101A0B1  +
push offset aFailedAllocati  +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101A0CC  +
mov eax [ebp+arg_C] +
or eax 10000h +
push eax  +
push [ebp+lpCaption]  +
push [ebp+lpText]  +
push [ebp+hWnd]  +
call ds:MessageBoxW  +
mov [ebp+var_10] eax +
push [ebp+lpText]  +
call sub_101D0A4  +
push dword ptr [ebp+var_8]  +
call sub_101D0A4  +
push [ebp+lpCaption]  +
call sub_101D0A4  +
cmp edi ebx +
jge loc_101A0EB  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
push esi  +
mov esi [ebp+arg_4] +
mov [esi] eax +
jl loc_101A134  +
cmp [ebp+arg_0] 1 +
jz loc_101A134  +
push 1024h  +
push 65h  +
push 66h  +
push eax  +
call sub_101A019  +
add esp 10h +
cmp eax 6 +
jnz loc_101A12D  +
mov dword ptr [esi] 1 +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
push 1024h  +
push 65h  +
push 67h  +
jmp loc_101A119  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [edi] +
sub esp 10h +
push esi  +
mov esi 0BC2h +
test eax eax +
jz loc_101A162  +
cmp eax esi +
jz loc_101A162  +
and [ebp+var_8] 0 +
jmp loc_101A169  +
mov [ebp+var_8] 1 +
mov ecx 0BC9h +
cmp eax esi +
jz loc_101A17C  +
cmp eax ecx +
jz loc_101A17C  +
and [ebp+var_C] 0 +
jmp loc_101A183  +
mov [ebp+var_C] 1 +
mov edx 669h +
push ebx  +
mov ebx 0BCAh +
cmp eax edx +
jz loc_101A19C  +
cmp eax ebx +
jz loc_101A19C  +
and [ebp+var_10] 0 +
jmp loc_101A1A3  +
mov [ebp+var_10] 1 +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101A1B4  +
cmp eax esi +
jz loc_101A1B4  +
and [ebp+var_4] 0 +
jmp loc_101A1BB  +
mov [ebp+var_4] 1 +
cmp eax esi +
jz loc_101A1C7  +
cmp eax ecx +
jz loc_101A1C7  +
xor ecx ecx +
jmp loc_101A1CA  +
xor ecx ecx +
inc ecx  +
cmp eax edx +
jz loc_101A1D6  +
cmp eax ebx +
jz loc_101A1D6  +
xor eax eax +
jmp loc_101A1D9  +
xor eax eax +
inc eax  +
xor edx edx +
pop ebx  +
cmp [ebp+var_8] edx +
jz loc_101A1E7  +
cmp [ebp+var_4] edx +
jz loc_101A1E7  +
inc edx  +
cmp [ebp+var_C] 0 +
jnz loc_101A1F1  +
test ecx ecx +
jz loc_101A1F4  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_10] 0 +
jnz loc_101A1FE  +
test eax eax +
jz loc_101A201  +
xor eax eax +
inc eax  +
test edx edx +
jz loc_101A219  +
test eax eax +
jz loc_101A211  +
mov dword ptr [edi] 669h +
jmp loc_101A23C  +
test ecx ecx +
jz loc_101A237  +
mov [edi] esi +
jmp loc_101A23C  +
test eax eax +
jz loc_101A225  +
mov dword ptr [edi] 0BCAh +
jmp loc_101A23C  +
test ecx ecx +
jz loc_101A231  +
mov dword ptr [edi] 0BC9h +
jmp loc_101A23C  +
cmp [ebp+var_4] 0 +
jnz loc_101A23C  +
mov eax [ebp+arg_0] +
mov [edi] eax +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
and [ebp+ppv] esi +
push 2  +
push esi  +
call ds:CoInitializeEx  +
mov [ebp+var_8] eax +
test eax eax +
jge loc_101A28C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101A344  +
test byte ptr [eax+1Ch] 1 +
jz loc_101A344  +
push [ebp+var_8]  +
push offset dword_1001500  +
push 20h  +
jmp loc_101A339  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jge loc_101A2D0  +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101A344  +
test byte ptr [eax+1Ch] 1 +
jz loc_101A344  +
push esi  +
push offset dword_1001500  +
push 21h  +
jmp loc_101A339  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
jge loc_101A344  +
cmp esi 8024A000h +
jz loc_101A319  +
cmp esi 8024A004h +
jz loc_101A319  +
cmp esi 8024002Bh +
jz loc_101A319  +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101A344  +
test byte ptr [eax+1Ch] 1 +
jz loc_101A344  +
push esi  +
push offset dword_1001500  +
push 23h  +
jmp loc_101A339  +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101A344  +
test byte ptr [eax+1Ch] 1 +
jz loc_101A344  +
push esi  +
push offset dword_1001500  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
mov eax [ebp+ppv] +
test eax eax +
jz loc_101A351  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp [ebp+var_8] 0 +
jl loc_101A35D  +
call ds:CoUninitialize  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov eax 80004002h +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+10h] +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
push edi  +
test eax eax +
jnz loc_101A3AD  +
push offset aInvalidArgumen  +
mov eax 80070057h +
push 1  +
push eax  +
push 4000000h  +
mov [ebp-4] eax +
call sub_101D736  +
add esp 10h +
jmp loc_101A3EE  +
and dword ptr [eax] 0 +
mov edx [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi edx +
mov esi offset dword_100168C +
xor ebx ebx +
cmps   +
jz loc_101A3E3  +
push 4  +
pop ecx  +
mov edi edx +
mov esi offset dword_1018028 +
xor ebx ebx +
cmps   +
jz loc_101A3E3  +
push 4  +
pop ecx  +
mov edi edx +
mov esi offset dword_100167C +
xor ebx ebx +
cmps   +
jnz loc_101A3F3  +
mov ecx [ebp+8] +
mov [eax] ecx +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
mov eax [ebp-4] +
jmp loc_101A3FD  +
mov ecx [ebp+8] +
mov esi [ecx] +
push eax  +
push edx  +
call dword ptr [esi+18h]  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
add esi 4 +
push esi  +
call ds:InterlockedIncrement  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jg loc_101A456  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push dword ptr [esi+10h]  +
mov dword ptr [esi] offset off_10016B8 +
call ds:free  +
and dword ptr [esi+10h] 0 +
and dword ptr [esi+8] 0 +
pop ecx  +
mov dword ptr [esi] offset off_1001660 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
push esi  +
push dword ptr [ecx+8]  +
push [ebp+arg_0]  +
call dword ptr [eax+24h]  +
mov esi eax +
test esi esi +
jge loc_101A4B6  +
push offset aFailedAddingEl  +
push 1  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov eax [esi+0Ch] +
push edi  +
jnz loc_101A51C  +
test eax eax +
jz loc_101A4E6  +
cmp eax 0FFFFFFFh +
jbe loc_101A4ED  +
mov dword ptr [esi+0Ch] 8 +
mov eax [esi+0Ch] +
shl eax 2 +
push eax  +
call ds:malloc  +
pop ecx  +
mov [esi+10h] eax +
test eax eax +
jz loc_101A54C  +
mov ecx [esi+0Ch] +
shl ecx 2 +
test ecx ecx +
jz loc_101A5C4  +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_101A510  +
jmp loc_101A5C4  +
cmp [esi+8] eax +
jb loc_101A5A0  +
add eax eax +
mov [ebp+var_8] eax +
cmp eax 0FFFFFFFh +
jbe loc_101A539  +
mov eax 800288C5h +
push offset aArraySizeTooBi  +
jmp loc_101A556  +
mov edi eax +
shl edi 2 +
push edi  +
call ds:malloc  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_101A56B  +
mov eax 8007000Eh +
push offset aOnAllocatingCb  +
push 1  +
push eax  +
push 4000000h  +
mov [ebp+var_4] eax +
call sub_101D736  +
add esp 10h +
jmp loc_101A5D5  +
test edi edi +
jz loc_101A576  +
mov byte ptr [eax] 0 +
inc eax  +
dec edi  +
jnz loc_101A56F  +
mov eax [esi+10h] +
test eax eax +
jz loc_101A597  +
mov ecx [esi+0Ch] +
shl ecx 2 +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
push dword ptr [esi+10h]  +
call ds:free  +
add esp 10h +
mov eax [ebp+var_8] +
mov [esi+0Ch] eax +
mov [esi+10h] ebx +
mov eax [esi+8] +
mov edx [ebp+arg_4] +
cmp edx eax +
jnb loc_101A5C4  +
mov ecx [esi+10h] +
sub eax edx +
shl eax 2 +
lea ecx [ecx+edx*4] +
push eax  +
push ecx  +
add ecx 4 +
push ecx  +
call ds:memmove  +
add esp 0Ch +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
mov eax [esi+10h] +
mov edx [ebp+arg_4] +
mov [eax+edx*4] ecx +
inc dword ptr [esi+8]  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+8] +
push edi  +
xor edi edi +
cmp edx eax +
jnb loc_101A632  +
sub eax edx +
lea ecx [eax-1] +
test ecx ecx +
jz loc_101A61A  +
mov eax [esi+10h] +
shl ecx 2 +
lea eax [eax+edx*4] +
push ecx  +
lea ecx [eax+4] +
push ecx  +
push eax  +
call ds:memmove  +
add esp 0Ch +
dec dword ptr [esi+8]  +
mov eax [esi+8] +
mov edx [esi+10h] +
push 4  +
pop ecx  +
lea eax [edx+eax*4] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_101A629  +
jmp loc_101A64E  +
push offset aInvalidArrayIn  +
mov eax 80070057h +
push 1  +
push eax  +
push 4000000h  +
mov edi eax +
call sub_101D736  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001660 +
jz loc_101A676  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101A460  +
test byte ptr [ebp+8] 1 +
jz loc_101A69C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor eax eax +
xor ebx ebx +
mov [ebp+NewState.PrivilegeCount] ebx +
lea edi [ebp+NewState.Privileges] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+Luid.LowPart] ebx +
lea edi [ebp+Luid.HighPart] +
stos   +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
xor esi esi +
mov [ebp+hObject] ebx +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_101A712  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101A6FF  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101A706  +
mov esi 80004005h +
push offset aFailedOpeningT  +
push 1  +
jmp loc_101A7A8  +
lea eax [ebp+Luid] +
push eax  +
push [ebp+lpName]  +
push ebx  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_101A74C  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101A73E  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101A745  +
mov esi 80004005h +
push offset aFailedLookingU  +
jmp loc_101A70B  +
mov eax [ebp+Luid.LowPart] +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
mov eax [ebp+arg_4] +
xor edi edi +
inc edi  +
neg eax  +
push ebx  +
sbb eax eax +
push ebx  +
and eax 2 +
push 10h  +
mov [ebp+NewState.Privileges.Attributes] eax +
lea eax [ebp+NewState] +
push eax  +
push ebx  +
push [ebp+hObject]  +
mov [ebp+NewState.PrivilegeCount] edi +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_101A7B6  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101A79B  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101A7A2  +
mov esi 80004005h +
push offset aFailedAdjustin  +
push edi  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
cmp [ebp+hObject] ebx +
jz loc_101A7C4  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebx  +
push esi  +
push 1  +
mov esi offset aSeshutdownpriv +
push esi  +
call sub_101A6A8  +
mov ebx eax +
xor eax eax +
cmp ebx eax +
jge loc_101A802  +
push offset aFailedEnabling  +
push 1  +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101A862  +
push edi  +
push 80020003h  +
push 1  +
push eax  +
push eax  +
push eax  +
push eax  +
call ds:InitiateSystemShutdownExW  +
mov edi 4000000h +
test eax eax +
jnz loc_101A844  +
call ds:GetLastError  +
test eax eax +
jle loc_101A831  +
and eax 0FFFFh +
or eax 80070000h +
push offset aFailedRestartA  +
mov ebx eax +
push 1  +
push ebx  +
push edi  +
call sub_101D736  +
add esp 10h +
push 0  +
push esi  +
call sub_101A6A8  +
test eax eax +
jge loc_101A861  +
push offset aFailedDisablin  +
push 1  +
push eax  +
push edi  +
call sub_101D736  +
add esp 10h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
inc edi  +
mov [ebp+var_4] edi +
mov [ebx] esi +
cmp [ebp+arg_4] esi +
jnz loc_101A8F5  +
cmp [ebp+arg_8] esi +
jnz loc_101A8AB  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_101A0F8  +
mov esi eax +
test esi esi +
jge loc_101A8A5  +
push offset aFailedAskingUs  +
jmp loc_101A8E2  +
cmp [ebp+var_4] 0 +
jz loc_101A8F5  +
call sub_101A7D2  +
mov esi eax +
cmp esi 800704F7h +
jz loc_101A8C2  +
cmp esi 80070015h +
jnz loc_101A8CF  +
push 0BB8h  +
call ds:Sleep  +
jmp loc_101A8AB  +
cmp esi 8007045Bh +
jnz loc_101A8D9  +
xor esi esi +
test esi esi +
jge loc_101A8F3  +
push offset aFailedRestarti  +
push edi  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101A8F5  +
mov [ebx] edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
xor ebx ebx +
mov esi eax +
mov [ebp+var_8] ebx +
mov [ebp+lpCommandLine] ebx +
call sub_1018DA2  +
test eax eax +
jge loc_101A95B  +
mov esi 80070241h +
push esi  +
mov edi esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101AAC0  +
test byte ptr [eax+1Ch] 1 +
jz loc_101AAC0  +
push esi  +
push [ebp+arg_0]  +
push offset dword_1001500  +
push 0Ah  +
jmp loc_101AAAB  +
lea eax [ebp+var_8] +
push eax  +
push offset aLog_0  +
push (offset aUzlCdxbD6Ic+10h)  +
push esi  +
call sub_1019C77  +
mov edi eax +
cmp edi ebx +
jge loc_101A99C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101AAC0  +
test byte ptr [eax+1Ch] 1 +
jz loc_101AAC0  +
push edi  +
push offset dword_1001500  +
push 0Bh  +
jmp loc_101AA5C  +
mov ecx [esi+1Ch] +
mov eax offset dword_10014D4 +
mov [ebp+var_C] ecx +
cmp ecx ebx +
jnz loc_101AA69  +
mov [ebp+var_C] eax +
mov [ebp+var_10] eax +
mov [ebp+var_14] offset aNorestart_0 +
cmp [esi+14h] ebx +
jnz loc_101A9C4  +
mov [ebp+var_14] eax +
mov [ebp+var_18] offset aQuiet_0 +
cmp [esi+10h] ebx +
jnz loc_101A9D3  +
mov [ebp+var_18] eax +
mov ecx [esi+0Ch] +
mov [ebp+var_1C] offset asc_1001934 +
cmp ecx ebx +
jnz loc_101AA75  +
mov [ebp+var_1C] eax +
mov ebx eax +
mov edi offset aUnattendfile_0 +
test ecx ecx +
jnz loc_101A9F5  +
mov edi eax +
cmp dword ptr [esi+8] 0 +
mov edx offset aPassive_0 +
jnz loc_101AA02  +
mov edx eax +
cmp dword ptr [esi+4] 0 +
mov ecx offset aUninstall_1 +
jnz loc_101AA0F  +
mov ecx eax +
push [ebp+var_C]  +
mov eax [esi] +
push [ebp+var_10]  +
push [ebp+var_8]  +
push [ebp+var_14]  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
push ebx  +
push edi  +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+lpCommandLine] +
push offset aSSSSSSSSSLogSS  +
push eax  +
call sub_101D513  +
mov edi eax +
add esp 38h +
test edi edi +
jge loc_101AA7C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101AAC0  +
test byte ptr [eax+1Ch] 1 +
jz loc_101AAC0  +
push edi  +
push offset dword_1001500  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101AAC0  +
mov [ebp+var_10] offset String +
jmp loc_101A9B5  +
mov ebx ecx +
jmp loc_101A9EA  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+lpCommandLine]  +
call sub_10188C8  +
mov edi eax +
test edi edi +
jge loc_101AAB8  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101AAC0  +
test byte ptr [eax+1Ch] 1 +
jz loc_101AAC0  +
push edi  +
push [ebp+lpCommandLine]  +
push offset dword_1001500  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101AAC0  +
mov eax [ebp+var_20] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
cmp [ebp+lpCommandLine] 0 +
jz loc_101AACE  +
push [ebp+lpCommandLine]  +
call sub_101D0A4  +
cmp [ebp+var_8] 0 +
jz loc_101AADC  +
push [ebp+var_8]  +
call sub_101D0A4  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
call sub_1018DA2  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101AB38  +
mov esi 80070654h +
push esi  +
mov [ebp+var_4] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101AB96  +
test byte ptr [eax+1Ch] 1 +
jz loc_101AB96  +
push esi  +
push [ebp+arg_0]  +
push offset dword_1001500  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101AB96  +
push ebx  +
xor ebx ebx +
cmp [edi+8] ebx +
jbe loc_101AB95  +
mov eax [edi+10h] +
lea eax [eax+ebx*4] +
push dword ptr [eax]  +
call sub_1018DA2  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101AB5C  +
inc ebx  +
cmp ebx [edi+8] +
jb loc_101AB40  +
jmp loc_101AB95  +
mov esi 80070654h +
push esi  +
mov [ebp+var_4] esi +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101AB95  +
test byte ptr [eax+1Ch] 1 +
jz loc_101AB95  +
mov ecx [edi+10h] +
push esi  +
push dword ptr [ecx+ebx*4]  +
push offset dword_1001500  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
pop ebx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ecx ecx +
xor eax eax +
push edi  +
cmp esi ecx +
jz loc_101ABBE  +
cmp esi 7FFFFFFFh +
jbe loc_101ABC3  +
mov eax 80070057h +
cmp eax ecx +
mov edi [ebp+arg_0] +
jl loc_101ABEF  +
xor ebx ebx +
mov edx esi +
mov eax edi +
cmp esi ecx +
jz loc_101ABE2  +
cmp [eax] cx +
jz loc_101ABDE  +
inc eax  +
inc eax  +
dec edx  +
jnz loc_101ABD4  +
cmp edx ecx +
jnz loc_101ABE9  +
mov ebx 80070057h +
jmp loc_101ABED  +
mov ecx esi +
sub ecx edx +
mov eax ebx +
test eax eax +
jl loc_101AC39  +
mov edx esi +
sub edx ecx +
push 0  +
lea eax [edi+ecx*2] +
pop ebx  +
jz loc_101AC2B  +
mov edi edx +
sub edi esi +
mov esi [ebp+arg_8] +
lea edi [edi+ecx+7FFFFFFFh] +
sub esi eax +
test edi edi +
jz loc_101AC27  +
movzx ecx word ptr [esi+eax] +
test cx cx +
jz loc_101AC27  +
mov [eax] cx +
inc eax  +
inc eax  +
dec edx  +
dec edi  +
test edx edx +
jnz loc_101AC0F  +
test edx edx +
jnz loc_101AC32  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
mov dword ptr [esi] offset off_1001960 +
cmp [esi+8] edi +
jbe loc_101AC70  +
mov eax [esi+10h] +
lea eax [eax+edi*4] +
cmp dword ptr [eax] 0 +
jz loc_101AC6A  +
push dword ptr [eax]  +
call sub_101D0A4  +
inc edi  +
cmp edi [esi+8] +
jb loc_101AC58  +
pop edi  +
mov ecx esi +
pop esi  +
jmp sub_101A460  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+8] edi +
jbe loc_101ACA3  +
mov eax [esi+10h] +
lea eax [eax+edi*4] +
cmp dword ptr [eax] 0 +
jz loc_101AC9D  +
push dword ptr [eax]  +
call sub_101D0A4  +
inc edi  +
cmp edi [esi+8] +
jb loc_101AC8B  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
cmp eax [ecx+8] +
jb loc_101ACD7  +
push offset aInvalidArrayIn  +
mov eax 80070057h +
push 1  +
push eax  +
push 4000000h  +
mov edi eax +
call sub_101D736  +
add esp 10h +
jmp loc_101AD0C  +
mov edx [ecx+10h] +
push esi  +
mov esi [edx+eax*4] +
push eax  +
call sub_101A5E4  +
mov edi eax +
test edi edi +
jge loc_101AD01  +
push offset aFailedToRemove  +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101AD0B  +
test esi esi +
jz loc_101AD0B  +
push esi  +
call sub_101D0A4  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101AC45  +
test byte ptr [ebp+8] 1 +
jz loc_101AD32  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [esi+8] +
and [ebp+var_4] 0 +
push ebx  +
xor ebx ebx +
inc ebx  +
push edi  +
test eax eax +
jbe loc_101AD7A  +
mov ecx [esi+10h] +
mov [ebp+var_8] eax +
mov eax [ecx] +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101AD60  +
sub eax edi +
sar eax 1 +
add ecx 4 +
dec [ebp+var_8]  +
lea ebx [ebx+eax+1] +
jnz loc_101AD5B  +
push ebx  +
lea eax [ebp+var_4] +
push eax  +
call sub_101D118  +
mov [ebp+var_8] eax +
test eax eax +
jge loc_101ADB4  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101ADFB  +
test byte ptr [eax+1Ch] 1 +
jz loc_101ADFB  +
push [ebp+var_8]  +
push offset dword_1001500  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101ADFB  +
mov ecx [ebp+var_4] +
xor eax eax +
xor edi edi +
mov [ecx] ax +
cmp [esi+8] edi +
jbe loc_101ADEF  +
test edi edi +
jz loc_101ADD5  +
push offset asc_10019A8  +
push ebx  +
push [ebp+var_4]  +
call sub_101ABA3  +
mov eax [esi+10h] +
lea eax [eax+edi*4] +
push dword ptr [eax]  +
push ebx  +
push [ebp+var_4]  +
call sub_101ABA3  +
inc edi  +
mov [ebp+var_8] eax +
cmp edi [esi+8] +
jb loc_101ADC3  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
and [ebp+var_4] 0 +
mov [ecx] eax +
cmp [ebp+var_4] 0 +
pop edi  +
pop ebx  +
jz loc_101AE0B  +
push [ebp+var_4]  +
call sub_101D0A4  +
mov eax [ebp+var_8] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 23Ch +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_23C] ecx +
xor ecx ecx +
mov edi edx +
push eax  +
mov [ebp+var_21C] eax +
mov [ebp+var_214] ecx +
mov [ebp+lpCommandLine] ecx +
mov [ebp+var_218] ecx +
call sub_101AAEA  +
mov esi eax +
test esi esi +
jge loc_101AE97  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B20F  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B20F  +
push esi  +
push [ebp+var_21C]  +
push offset dword_1001500  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101B20F  +
lea eax [ebp+var_214] +
push eax  +
push offset aLog_1  +
push offset aMsi  +
push ebx  +
call sub_1019C77  +
mov esi eax +
test esi esi +
jge loc_101AEE6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B20F  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B20F  +
push esi  +
push offset dword_1001500  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101B20F  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jnz loc_101AF47  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101AF16  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101AF1D  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B20F  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B20F  +
push esi  +
push offset dword_1001500  +
push 1Ah  +
jmp loc_101AED6  +
lea eax [ebp+Buffer] +
push eax  +
call sub_101838E  +
xor edx edx +
cmp [ebx+4] edx +
jz loc_101AFFF  +
mov ecx [ebx+1Ch] +
mov eax offset dword_10014D4 +
mov esi ecx +
cmp ecx edx +
jnz loc_101AFF5  +
mov esi eax +
mov edi eax +
cmp [ebx+14h] edx +
mov edx offset aNorestart_0 +
jnz loc_101AF80  +
mov edx eax +
cmp dword ptr [ebx+10h] 0 +
mov ecx offset aQuiet_0 +
jnz loc_101AF8D  +
mov ecx eax +
cmp dword ptr [ebx+8] 0 +
jz loc_101AF98  +
mov eax offset aPassive_0 +
push esi  +
push edi  +
push [ebp+var_214]  +
push edx  +
push ecx  +
push eax  +
push [ebp+var_21C]  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+lpCommandLine] +
push offset aSMsiexec_exeUn  +
push eax  +
call sub_101D513  +
mov esi eax +
add esp 28h +
test esi esi +
jge loc_101B1A8  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B20F  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B20F  +
push esi  +
push offset dword_1001500  +
push 1Bh  +
jmp loc_101AED6  +
mov edi offset String +
jmp loc_101AF74  +
cmp [edi+8] edx +
jz loc_101B03F  +
lea eax [ebp+var_218] +
push eax  +
mov esi edi +
call sub_101AD3E  +
mov esi eax +
test esi esi +
jge loc_101B065  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B1FB  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B1FB  +
push esi  +
push offset dword_1001500  +
push 1Ch  +
jmp loc_101B181  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B065  +
test byte ptr [eax+1Ch] 10h +
jz loc_101B065  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101811D  +
mov ecx [ebx+1Ch] +
mov eax offset dword_10014D4 +
mov [ebp+var_228] ecx +
test ecx ecx +
jnz loc_101B18E  +
mov [ebp+var_228] eax +
mov [ebp+var_230] eax +
cmp dword ptr [ebx+14h] 0 +
mov [ebp+var_220] offset aNorestart_0 +
jnz loc_101B09D  +
mov [ebp+var_220] eax +
cmp dword ptr [ebx+10h] 0 +
mov [ebp+var_22C] offset aQuiet_0 +
jnz loc_101B0B3  +
mov [ebp+var_22C] eax +
mov ecx [ebx+0Ch] +
mov edx offset asc_1001934 +
mov [ebp+var_234] edx +
test ecx ecx +
jnz loc_101B19D  +
mov [ebp+var_234] eax +
mov [ebp+var_224] eax +
mov esi offset aUnattend +
test ecx ecx +
jnz loc_101B0E0  +
mov esi eax +
cmp dword ptr [ebx+8] 0 +
mov edi offset aPassive_0 +
jnz loc_101B0ED  +
mov edi eax +
mov ecx [ebp+var_218] +
test ecx ecx +
jnz loc_101B0FB  +
mov edx eax +
mov ecx eax +
cmp [ebp+var_218] 0 +
jz loc_101B109  +
mov eax offset aPatch +
push [ebp+var_228]  +
push [ebp+var_230]  +
push [ebp+var_214]  +
push [ebp+var_220]  +
push [ebp+var_22C]  +
push [ebp+var_234]  +
push [ebp+var_224]  +
push esi  +
push edi  +
push edx  +
push ecx  +
push eax  +
push [ebp+var_21C]  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+lpCommandLine] +
push offset aSMsiexec_exePa  +
push eax  +
call sub_101D513  +
mov esi eax +
add esp 40h +
test esi esi +
jge loc_101B1A8  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B1FB  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B1FB  +
push esi  +
push offset dword_1001500  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101B1FB  +
mov [ebp+var_230] offset String +
jmp loc_101B087  +
mov [ebp+var_224] ecx +
jmp loc_101B0D5  +
lea eax [ebp+var_238] +
push eax  +
push [ebp+lpCommandLine]  +
call sub_10188C8  +
mov esi eax +
test esi esi +
jge loc_101B1ED  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B1FB  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B1FB  +
push esi  +
push [ebp+lpCommandLine]  +
push offset dword_1001500  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101B1FB  +
mov eax [ebp+var_238] +
mov ecx [ebp+var_23C] +
mov [ecx] eax +
cmp [ebp+var_218] 0 +
jz loc_101B20F  +
push [ebp+var_218]  +
call sub_101D0A4  +
cmp [ebp+lpCommandLine] 0 +
jz loc_101B223  +
push [ebp+lpCommandLine]  +
call sub_101D0A4  +
cmp [ebp+var_214] 0 +
jz loc_101B237  +
push [ebp+var_214]  +
call sub_101D0A4  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_101CBEA  +
leave   +
retn 4  +
***
mov eax ecx +
xor ecx ecx +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] offset off_10016B8 +
mov [eax+8] ecx +
mov dword ptr [eax+0Ch] 8 +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 244h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
lea ecx [ebp+var_244] +
mov [ebp+var_220] esi +
mov ebx edx +
mov [ebp+var_22C] eax +
mov [ebp+var_214] edi +
mov [ebp+lpCommandLine] edi +
mov [ebp+var_21C] edi +
mov [ebp+var_228] edi +
mov [ebp+var_224] edi +
call sub_101B24E  +
lea eax [ebp+var_214] +
push eax  +
push offset aTxt  +
push offset aCbs  +
push esi  +
mov [ebp+var_244] offset off_1001960 +
mov [ebp+var_218] edi +
call sub_1019C77  +
mov esi eax +
test esi esi +
jge loc_101B32A  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B6A3  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B6A3  +
push esi  +
push offset dword_1001500  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101B6A3  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jnz loc_101B38B  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101B35A  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101B361  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B6A3  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B6A3  +
push esi  +
push offset dword_1001500  +
push 0Fh  +
jmp loc_101B31A  +
lea eax [ebp+Buffer] +
push eax  +
call sub_101838E  +
lea eax [ebp+var_244] +
push eax  +
push ebx  +
call sub_10191AF  +
mov esi eax +
test esi esi +
jge loc_101B3D1  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B6A3  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B6A3  +
push esi  +
push offset dword_1001500  +
push 10h  +
jmp loc_101B31A  +
cmp [ebp+var_23C] edi +
jbe loc_101B43D  +
test edi edi +
jbe loc_101B3F8  +
push offset String  +
lea eax [ebp+var_218] +
push eax  +
call sub_101D2C8  +
mov esi eax +
test esi esi +
jl loc_101B4C0  +
push offset aFeaturename  +
lea eax [ebp+var_218] +
push eax  +
call sub_101D2C8  +
mov esi eax +
test esi esi +
jl loc_101B4C0  +
mov eax [ebp+var_234] +
lea eax [eax+edi*4] +
push dword ptr [eax]  +
lea eax [ebp+var_218] +
push eax  +
call sub_101D2C8  +
mov esi eax +
test esi esi +
jl loc_101B4C0  +
inc edi  +
cmp edi [ebp+var_23C] +
jb loc_101B3D9  +
mov esi [ebp+var_220] +
mov eax [esi+1Ch] +
mov ebx offset dword_10014D4 +
mov edx eax +
test eax eax +
jnz loc_101B4DA  +
mov edx ebx +
mov ecx ebx +
cmp dword ptr [esi+4] 0 +
mov eax offset aDisableFeature +
jnz loc_101B469  +
mov eax offset aEnableFeature +
push edx  +
push ecx  +
push [ebp+var_218]  +
push eax  +
push [ebp+var_214]  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+lpCommandLine] +
push offset aSDism_exeOnlin  +
push eax  +
call sub_101D513  +
mov esi eax +
add esp 20h +
test esi esi +
jge loc_101B4E4  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B6A3  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B6A3  +
push esi  +
push offset dword_1001500  +
push 11h  +
jmp loc_101B31A  +
push offset aFailedToAllo_0  +
push 1  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101B6A3  +
mov ecx offset String +
jmp loc_101B459  +
lea eax [ebp+var_21C] +
push eax  +
push [ebp+lpCommandLine]  +
call sub_10188C8  +
mov esi eax +
test esi esi +
jge loc_101B534  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B6A3  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B6A3  +
push esi  +
push [ebp+lpCommandLine]  +
push offset dword_1001500  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101B6A3  +
mov eax [ebp+var_21C] +
mov edi 0BC2h +
cmp eax edi +
jz loc_101B558  +
cmp eax 669h +
jz loc_101B558  +
cmp eax 0BC9h +
jz loc_101B558  +
cmp eax 0BCAh +
jnz loc_101B562  +
mov [ebp+var_224] 1 +
test eax eax +
jz loc_101B56E  +
cmp eax edi +
jnz loc_101B673  +
mov eax [ebp+var_220] +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_101B673  +
mov eax [eax+1Ch] +
mov edx eax +
test eax eax +
jnz loc_101B5F2  +
mov edx ebx +
mov eax ebx +
push edx  +
push eax  +
push offset asc_1001934  +
push ecx  +
push offset aApplyUnattend  +
push [ebp+var_214]  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+lpCommandLine] +
push offset aSDism_exeOnl_0  +
push eax  +
call sub_101D513  +
mov esi eax +
add esp 24h +
test esi esi +
jge loc_101B5F9  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B673  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B673  +
push esi  +
push offset dword_1001500  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101B673  +
mov eax offset String +
jmp loc_101B58C  +
lea eax [ebp+var_228] +
push eax  +
push [ebp+lpCommandLine]  +
call sub_10188C8  +
mov esi eax +
test esi esi +
jge loc_101B63E  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B673  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B673  +
push esi  +
push [ebp+lpCommandLine]  +
push offset dword_1001500  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101B673  +
mov eax [ebp+var_228] +
cmp eax edi +
jz loc_101B65D  +
cmp eax 669h +
jz loc_101B65D  +
cmp eax 0BC9h +
jz loc_101B65D  +
cmp eax 0BCAh +
jnz loc_101B667  +
mov [ebp+var_224] 1 +
push eax  +
lea edi [ebp+var_21C] +
call sub_101A144  +
cmp [ebp+var_224] 0 +
jz loc_101B695  +
lea eax [ebp+var_220] +
push eax  +
mov eax [ebp+var_220] +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
push esi  +
call sub_101A86C  +
mov eax [ebp+var_22C] +
mov ecx [ebp+var_21C] +
mov [eax] ecx +
cmp [ebp+lpCommandLine] 0 +
jz loc_101B6B7  +
push [ebp+lpCommandLine]  +
call sub_101D0A4  +
cmp [ebp+var_214] 0 +
jz loc_101B6CB  +
push [ebp+var_214]  +
call sub_101D0A4  +
lea ecx [ebp+var_244] +
call sub_101AC45  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
mov esi ds:RegOpenKeyExW +
push edi  +
lea eax [ebp+hKey] +
push eax  +
xor ebx ebx +
mov edi 20019h +
push edi  +
push ebx  +
push offset SubKey  +
push 80000002h  +
mov [ebp+hKey] ebx +
mov [ebp+phkResult] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_10] ebx +
call esi  +
cmp eax ebx +
mov ebx [ebp+arg_0] +
jnz loc_101B73D  +
mov eax [ebx] +
lea ecx [ebp+phkResult] +
push ecx  +
push edi  +
xor edi edi +
push edi  +
push eax  +
push [ebp+hKey]  +
call esi  +
jmp loc_101B73F  +
xor edi edi +
cmp eax 2 +
jz loc_101B9F8  +
cmp eax 57h +
jz loc_101B9F8  +
cmp eax edi +
jz loc_101B79B  +
jle loc_101B761  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BAB4  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BAB4  +
push esi  +
push offset dword_1001500  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101BAB4  +
lea eax [ebp+var_8] +
push eax  +
push offset aCustomsetup  +
push edi  +
push edi  +
push [ebp+phkResult]  +
call sub_101D8AE  +
test eax eax +
jl loc_101B80A  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_8]  +
mov eax ebx +
call sub_101A903  +
mov esi eax +
cmp esi edi +
jge loc_101B7FD  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BAB4  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BAB4  +
push esi  +
push dword ptr [ebx]  +
push [ebp+var_8]  +
push offset dword_1001500  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019F4C  +
jmp loc_101BAB4  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
jmp loc_101BAB4  +
lea eax [ebp+var_10] +
push eax  +
push offset aComponent  +
push edi  +
push edi  +
push [ebp+phkResult]  +
call sub_101D8AE  +
mov esi eax +
cmp esi edi +
jge loc_101B84C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BAB4  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BAB4  +
push esi  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 27h  +
jmp loc_101BA2F  +
lea eax [ebp+var_14] +
push eax  +
push offset aType  +
push edi  +
push edi  +
push [ebp+phkResult]  +
call sub_101DCAD  +
mov esi eax +
cmp esi edi +
jge loc_101B88E  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BAB4  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BAB4  +
push esi  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 28h  +
jmp loc_101BA2F  +
mov eax [ebp+var_14] +
sub eax edi +
jz loc_101B9BE  +
dec eax  +
jz loc_101B8DE  +
mov esi 8007000Dh +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BAB2  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BAB2  +
push esi  +
push [ebp+var_14]  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019ED3  +
jmp loc_101BAB2  +
lea ecx [ebp+var_2C] +
call sub_101B24E  +
lea eax [ebp+var_2C] +
push eax  +
push offset ValueName  +
push edi  +
push edi  +
push [ebp+phkResult]  +
mov [ebp+var_2C] offset off_1001960 +
call sub_101DADF  +
mov esi eax +
and eax 0FFFFh +
cmp eax 2 +
jnz loc_101B90E  +
xor esi esi +
cmp esi edi +
jge loc_101B946  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B939  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B939  +
push esi  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
lea ecx [ebp+var_2C] +
call sub_101AC45  +
jmp loc_101BAB4  +
push [ebp+var_10]  +
lea ecx [ebp+arg_0] +
lea edx [ebp+var_2C] +
call sub_101AE17  +
mov esi eax +
cmp esi edi +
jge loc_101B978  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B939  +
test byte ptr [eax+1Ch] 1 +
jz loc_101B939  +
push esi  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 2Bh  +
jmp loc_101B92E  +
mov edi [ebp+arg_0] +
cmp edi 645h +
jnz loc_101B9B1  +
cmp dword ptr [ebx+4] 0 +
jz loc_101B9B1  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101B9AF  +
test byte ptr [eax+1Ch] 10h +
jz loc_101B9AF  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101811D  +
xor edi edi +
lea ecx [ebp+var_2C] +
call sub_101AC45  +
jmp loc_101BA3F  +
mov edx [ebp+var_10] +
lea eax [ebp+arg_0] +
push eax  +
mov ecx ebx +
call sub_101B275  +
mov esi eax +
cmp esi edi +
jge loc_101BA3C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BAB4  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BAB4  +
push esi  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 29h  +
jmp loc_101BA2F  +
mov edx [ebx] +
lea eax [ebp+arg_0] +
push eax  +
mov ecx ebx +
call sub_101B275  +
mov esi eax +
cmp esi edi +
jge loc_101BA3C  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BAB4  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BAB4  +
push esi  +
push dword ptr [ebx]  +
push offset dword_1001500  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101BAB4  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_101BA53  +
cmp edi 0BC2h +
jz loc_101BA53  +
cmp edi 669h +
jnz loc_101BAAD  +
cmp dword ptr [ebx+4] 0 +
jnz loc_101BAAD  +
mov eax hObj +
mov esi offset hObj +
cmp eax esi +
jz loc_101BA7F  +
test byte ptr [eax+1Ch] 10h +
jz loc_101BA7F  +
push offset dword_1001500  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10180C5  +
call sub_101A246  +
test eax eax +
jge loc_101BAAB  +
mov ecx hObj +
cmp ecx esi +
jz loc_101BAAB  +
test byte ptr [ecx+1Ch] 1 +
jz loc_101BAAB  +
push eax  +
push offset dword_1001500  +
push 2Fh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10181FD  +
xor esi esi +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor edi edi +
cmp [ebp+var_8] edi +
jz loc_101BAC1  +
push [ebp+var_8]  +
call sub_101D0A4  +
mov ebx ds:RegCloseKey +
cmp [ebp+phkResult] edi +
jz loc_101BAD1  +
push [ebp+phkResult]  +
call ebx  +
cmp [ebp+hKey] edi +
jz loc_101BADB  +
push [ebp+hKey]  +
call ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_101BB40  +
dec eax  +
jz loc_101BB37  +
push 57h  +
pop eax  +
jmp loc_101BBAE  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_101BB66  +
push dword ptr [ebp+14h]  +
call ds:GetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:GetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:GetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_101BB8F  +
cmp dword ptr [esi+10h] 0 +
jz loc_101BB8F  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_101BBAC  +
test cl 2 +
jz loc_101BB9D  +
mov esi [esi+10h] +
test esi esi +
jz loc_101BB9D  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi hObj +
push edi  +
mov edi offset dword_102C058 +
jmp loc_101BBF9  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_101BB11  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:RegisterTraceGuidsW  +
mov esi [esi] +
test esi esi +
jnz loc_101BBD0  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi hObj +
push edi  +
mov edi offset hObj +
cmp esi edi +
jz loc_101BC45  +
jmp loc_101BC3B  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov edx eax +
or edx ecx +
jz loc_101BC39  +
push ecx  +
push eax  +
call ds:UnregisterTraceGuids  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
mov esi [esi] +
test esi esi +
jnz loc_101BC1D  +
mov hObj edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea eax [ebp+var_214] +
xor edi edi +
push eax  +
mov [ebp+lpCommandLine] edi +
call ds:GetCurrentProcess  +
push eax  +
call ds:IsWow64Process  +
test eax eax +
jnz loc_101BCD2  +
call ds:GetLastError  +
mov esi eax +
cmp esi edi +
jle loc_101BC9E  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi edi +
jl loc_101BCA5  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BE03  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BE03  +
push esi  +
push offset dword_1001CFC  +
push 0Ah  +
jmp loc_101BD9C  +
cmp [ebp+var_214] edi +
jnz loc_101BCE2  +
xor esi esi +
inc esi  +
jmp loc_101BE03  +
push 104h  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jnz loc_101BD43  +
call ds:GetLastError  +
mov esi eax +
cmp esi edi +
jle loc_101BD12  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi edi +
jl loc_101BD19  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BE03  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BE03  +
push esi  +
push offset dword_1001CFC  +
push 0Bh  +
jmp loc_101BD9C  +
lea eax [ebp+Buffer] +
push eax  +
call sub_101838E  +
call ds:GetCommandLineW  +
push eax  +
call sub_1018229  +
push eax  +
push offset aOcsetup_exe  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+lpCommandLine] +
push offset aSSS  +
push eax  +
call sub_101D513  +
mov esi eax +
add esp 14h +
cmp esi edi +
jge loc_101BDA9  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BE03  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BE03  +
push esi  +
push offset dword_1001CFC  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101BE03  +
push edi  +
mov edi ds:Wow64EnableWow64FsRedirection +
call edi  +
lea eax [ebp+var_218] +
push eax  +
push [ebp+lpCommandLine]  +
call sub_10188C8  +
push 1  +
mov esi eax +
call edi  +
test esi esi +
jge loc_101BDFB  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BE03  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BE03  +
push esi  +
push [ebp+lpCommandLine]  +
push offset dword_1001CFC  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101BE03  +
mov eax [ebp+var_218] +
mov [ebx] eax +
cmp [ebp+lpCommandLine] 0 +
jz loc_101BE17  +
push [ebp+lpCommandLine]  +
call sub_101D0A4  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_101CBEA  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push 104h  +
lea eax [ebp+var_20C] +
xor ebx ebx +
push eax  +
mov [ebp+lpFileName] ebx +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jnz loc_101BEBA  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101BE7B  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101BE82  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BF86  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BF86  +
push esi  +
push offset dword_1001CFC  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101BF86  +
lea eax [ebp+var_20C] +
push eax  +
call sub_101838E  +
push offset aOcsetup_lock  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+lpFileName] +
push offset aSS  +
push eax  +
call sub_101D513  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jge loc_101BF10  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BF86  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BF86  +
push esi  +
push offset dword_1001CFC  +
push 0Fh  +
jmp loc_101BEAA  +
push ebx  +
push 4000102h  +
push 2  +
push ebx  +
push ebx  +
push 10000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
cmp eax 0FFFFFFFFh +
jnz loc_101BF84  +
call ds:GetLastError  +
mov esi eax +
cmp esi ebx +
jle loc_101BF4A  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jl loc_101BF51  +
mov esi 80004005h +
push esi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101BF86  +
test byte ptr [eax+1Ch] 1 +
jz loc_101BF86  +
push esi  +
push [ebp+lpFileName]  +
push offset dword_1001CFC  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101BF86  +
mov [edi] eax +
cmp [ebp+lpFileName] ebx +
jz loc_101BF99  +
push [ebp+lpFileName]  +
call sub_101D0A4  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
or [ebp+hObject] 0FFFFFFFFh +
push ebx  +
push esi  +
xor esi esi +
push edi  +
lea ecx [ebp+var_40] +
mov [ebp+var_4] esi +
call sub_1019252  +
mov [ebp+var_10] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_18] esi +
mov edi offset unk_102C038 +
push edi  +
call sub_101BAE9  +
push offset aMicrosoftOcset  +
mov dword_102C058 offset dword_1001260 +
mov hObj edi +
call sub_101BBBA  +
lea ebx [ebp+var_8] +
call sub_101BC4D  +
mov edi eax +
cmp edi esi +
mov ebx 0EA60h +
jge loc_101C03D  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push offset dword_1001CFC  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
jmp loc_101C46B  +
cmp edi 1 +
jz loc_101C04C  +
mov edi [ebp+var_8] +
cmp edi esi +
jmp loc_101C45D  +
lea eax [ebp+hMem] +
push eax  +
call sub_1018427  +
mov edi eax +
cmp edi esi +
jge loc_101C07F  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push offset dword_1001CFC  +
push 12h  +
jmp loc_101C02D  +
cmp [ebp+hMem] esi +
jz loc_101C08B  +
mov [ebp+var_4] 1 +
push esi  +
push esi  +
push offset Name  +
call ds:GetEnvironmentVariableW  +
test eax eax +
jz loc_101C09F  +
mov [ebp+var_4] esi +
lea eax [ebp+hMem] +
push eax  +
call sub_1018267  +
test eax eax +
jl loc_101C0B1  +
cmp [ebp+hMem] esi +
jnz loc_101C0FC  +
cmp [ebp+var_4] esi +
jz loc_101C0CA  +
push esi  +
push 10h  +
push ebx  +
push 0EA65h  +
call sub_101863A  +
add esp 10h +
mov [ebp+var_4] esi +
mov edi 80070005h +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push offset dword_1001CFC  +
push 13h  +
jmp loc_101C02D  +
call ds:GetCommandLineW  +
push eax  +
lea ecx [ebp+var_40] +
call sub_10192B5  +
mov edi eax +
cmp edi 1 +
jz loc_101C11A  +
cmp edi 80070057h +
jnz loc_101C133  +
cmp [ebp+var_4] esi +
jz loc_101C133  +
push esi  +
push 40h  +
push ebx  +
push 0EA61h  +
call sub_101863A  +
add esp 10h +
mov [ebp+var_4] esi +
cmp [ebp+var_38] esi +
jz loc_101C13B  +
mov [ebp+var_4] esi +
cmp edi esi +
jge loc_101C166  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push offset dword_1001CFC  +
push 14h  +
jmp loc_101C02D  +
cmp edi 1 +
jz loc_101C46B  +
lea edi [ebp+hObject] +
call sub_101BE2C  +
test eax eax +
jge loc_101C1AD  +
mov edi 80070652h +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push offset dword_1001CFC  +
push 15h  +
jmp loc_101C02D  +
mov edi [ebp+var_28] +
test edi edi +
jnz loc_101C1F7  +
lea eax [ebp+var_10] +
push eax  +
push offset aEtl  +
push edi  +
lea eax [ebp+var_40] +
push eax  +
call sub_1019C77  +
mov edi eax +
test edi edi +
jge loc_101C1F4  +
mov eax hObj +
cmp eax offset hObj +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push offset dword_1001CFC  +
push 16h  +
jmp loc_101C02D  +
mov edi [ebp+var_10] +
lea eax [ebp+var_1C] +
push eax  +
push offset dword_1001D0C  +
push offset aOcsetup  +
push edi  +
call sub_10199D9  +
mov ebx offset dword_1001CFC +
mov esi offset hObj +
test eax eax +
jge loc_101C239  +
mov ecx hObj +
cmp ecx esi +
jz loc_101C239  +
test byte ptr [ecx+1Ch] 1 +
jz loc_101C239  +
push eax  +
push edi  +
push ebx  +
push 17h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_101818A  +
cmp [ebp+lpFileName] 0 +
jz loc_101C2B0  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+lpFileName]  +
call sub_1018A73  +
mov edi eax +
test edi edi +
jge loc_101C27F  +
mov eax hObj +
cmp eax esi +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push [ebp+lpFileName]  +
push ebx  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101818A  +
jmp loc_101C46B  +
cmp [ebp+hMem] 0 +
jnz loc_101C2B0  +
mov edi 80070002h +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax esi +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push [ebp+lpFileName]  +
push ebx  +
push 19h  +
jmp loc_101C26F  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
call sub_101B6EE  +
mov edi eax +
test edi edi +
jge loc_101C2E3  +
mov eax hObj +
cmp eax esi +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push [ebp+var_40]  +
push ebx  +
push 1Ah  +
jmp loc_101C26F  +
mov eax [ebp+var_8] +
cmp eax 800F080Ch +
jnz loc_101C33D  +
xor edi edi +
cmp [ebp+var_4] edi +
jz loc_101C30F  +
push [ebp+var_40]  +
push edi  +
push 10h  +
push 0EA60h  +
push 0EA63h  +
call sub_101863A  +
add esp 14h +
mov [ebp+var_4] edi +
mov edi 80070490h +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax esi +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push [ebp+var_40]  +
push ebx  +
push 1Bh  +
jmp loc_101C26F  +
test eax eax +
jz loc_101C433  +
cmp eax 0BC2h +
jz loc_101C433  +
cmp eax 669h +
jz loc_101C433  +
lea ecx [ebp+hMem] +
push ecx  +
push eax  +
call sub_1018812  +
mov edi [ebp+var_40] +
test eax eax +
jl loc_101C3B6  +
call ds:GetCommandLineW  +
push eax  +
push [ebp+hMem]  +
push [ebp+var_8]  +
push edi  +
call sub_101C6F5  +
cmp [ebp+var_4] 0 +
jz loc_101C3A5  +
push [ebp+hMem]  +
push [ebp+var_8]  +
push 0  +
push 10h  +
push 0EA60h  +
push 0EA64h  +
call sub_101863A  +
add esp 18h +
and [ebp+var_4] 0 +
cmp [ebp+hMem] 0 +
jz loc_101C3F3  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_101C3F3  +
call ds:GetCommandLineW  +
push eax  +
push offset dword_10014D4  +
push [ebp+var_8]  +
push edi  +
call sub_101C6F5  +
cmp [ebp+var_4] 0 +
jz loc_101C3F3  +
push offset dword_10014D4  +
push [ebp+var_8]  +
push 0  +
push 10h  +
push 0EA60h  +
push 0EA64h  +
call sub_101863A  +
add esp 18h +
and [ebp+var_4] 0 +
mov edi [ebp+var_8] +
test edi edi +
jle loc_101C408  +
and edi 0FFFFh +
or edi 80070000h +
test edi edi +
jge loc_101C433  +
push edi  +
call sub_102A9E6  +
mov eax hObj +
cmp eax esi +
jz loc_101C46B  +
test byte ptr [eax+1Ch] 1 +
jz loc_101C46B  +
push edi  +
push [ebp+var_8]  +
push ebx  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10180EB  +
jmp loc_101C46B  +
cmp [ebp+var_3C] 0 +
mov edi [ebp+var_40] +
jz loc_101C44B  +
call ds:GetCommandLineW  +
push eax  +
push edi  +
call sub_101C633  +
jmp loc_101C458  +
call ds:GetCommandLineW  +
push eax  +
push edi  +
call sub_101C571  +
mov edi [ebp+var_8] +
test edi edi +
jle loc_101C46B  +
and edi 0FFFFh +
or edi 80070000h +
mov eax edi +
dec eax  +
neg eax  +
sbb eax eax +
and eax edi +
mov ecx eax +
and ecx 1FFF0000h +
movzx edi ax +
cmp ecx 70000h +
jz loc_101C489  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jz loc_101C522  +
cmp edi 0BC2h +
jz loc_101C522  +
cmp edi 669h +
jz loc_101C522  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call sub_1018812  +
test eax eax +
jl loc_101C4F3  +
call ds:GetCommandLineW  +
push eax  +
push [ebp+hMem]  +
push edi  +
call sub_101C7F0  +
cmp [ebp+var_4] ebx +
jz loc_101C4E3  +
push [ebp+hMem]  +
push edi  +
push ebx  +
push 10h  +
push 0EA60h  +
push 0EA62h  +
call sub_101863A  +
add esp 18h +
cmp [ebp+hMem] ebx +
jz loc_101C522  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_101C522  +
call ds:GetCommandLineW  +
push eax  +
mov esi offset dword_10014D4 +
push esi  +
push edi  +
call sub_101C7F0  +
cmp [ebp+var_4] ebx +
jz loc_101C522  +
push esi  +
push edi  +
push ebx  +
push 10h  +
push 0EA60h  +
push 0EA62h  +
call sub_101863A  +
add esp 18h +
mov eax [ebp+var_1C] +
or eax [ebp+var_18] +
jz loc_101C53A  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
push offset dword_1001D0C  +
call sub_1019783  +
cmp [ebp+var_10] ebx +
jz loc_101C547  +
push [ebp+var_10]  +
call sub_101D0A4  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_101C556  +
push [ebp+hObject]  +
call ds:CloseHandle  +
call sub_101BC08  +
lea ecx [ebp+var_40] +
call sub_1019276  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
xor esi esi +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push esi  +
push offset dword_100120C  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call ds:EventRegister  +
cmp eax esi +
jz loc_101C5AC  +
jg loc_101C5A0  +
mov esi eax +
jmp loc_101C627  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_101C599  +
mov ecx [ebp+arg_0] +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_101C5B5  +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_28] ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_20] eax +
mov eax ecx +
mov [ebp+var_24] esi +
mov [ebp+var_1C] esi +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di si +
jnz loc_101C5DB  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_10] eax +
lea eax [ebp+var_28] +
push eax  +
push 2  +
push offset dword_1001220  +
push [ebp+var_4]  +
mov [ebp+var_18] ecx +
push [ebp+var_8]  +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
call ds:EventWrite  +
mov esi eax +
mov eax [ebp+var_8] +
or eax [ebp+var_4] +
pop edi  +
jz loc_101C627  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ds:EventUnregister  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
xor esi esi +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push esi  +
push offset dword_100120C  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call ds:EventRegister  +
cmp eax esi +
jz loc_101C66E  +
jg loc_101C662  +
mov esi eax +
jmp loc_101C6E9  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_101C65B  +
mov ecx [ebp+arg_0] +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_101C677  +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_28] ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_20] eax +
mov eax ecx +
mov [ebp+var_24] esi +
mov [ebp+var_1C] esi +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di si +
jnz loc_101C69D  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_10] eax +
lea eax [ebp+var_28] +
push eax  +
push 2  +
push offset dword_1001230  +
push [ebp+var_4]  +
mov [ebp+var_18] ecx +
push [ebp+var_8]  +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
call ds:EventWrite  +
mov esi eax +
mov eax [ebp+var_8] +
or eax [ebp+var_4] +
pop edi  +
jz loc_101C6E9  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ds:EventUnregister  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push esi  +
xor esi esi +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push esi  +
push offset dword_100120C  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call ds:EventRegister  +
cmp eax esi +
jz loc_101C730  +
jg loc_101C724  +
mov esi eax +
jmp loc_101C7E4  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_101C71D  +
mov ecx [ebp+arg_0] +
push ebx  +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_101C73A  +
mov edx [ebp+arg_8] +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_40] eax +
lea eax [ebp+arg_4] +
push 4  +
mov [ebp+var_38] eax +
pop edi  +
mov eax edx +
mov [ebp+var_48] ecx +
mov [ebp+var_44] esi +
mov [ebp+var_3C] esi +
mov [ebp+var_34] esi +
mov [ebp+var_30] edi +
mov [ebp+var_2C] esi +
lea ecx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx si +
jnz loc_101C772  +
sub eax ecx +
mov ecx [ebp+arg_C] +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_20] eax +
mov eax ecx +
mov [ebp+var_28] edx +
mov [ebp+var_24] esi +
mov [ebp+var_1C] esi +
lea edx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
cmp bx si +
jnz loc_101C798  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_10] eax +
lea eax [ebp+var_48] +
push eax  +
push edi  +
push offset dword_1001240  +
push [ebp+var_4]  +
mov [ebp+var_18] ecx +
push [ebp+var_8]  +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
call ds:EventWrite  +
mov esi eax +
mov eax [ebp+var_8] +
or eax [ebp+var_4] +
pop edi  +
pop ebx  +
jz loc_101C7E4  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ds:EventUnregister  +
mov eax esi +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push esi  +
xor esi esi +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push esi  +
push offset dword_100120C  +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
call ds:EventRegister  +
cmp eax esi +
jz loc_101C82B  +
jg loc_101C81F  +
mov esi eax +
jmp loc_101C8B9  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_101C818  +
mov ecx [ebp+arg_4] +
lea eax [ebp+arg_0] +
mov [ebp+var_38] eax +
mov eax ecx +
push edi  +
mov [ebp+var_34] esi +
mov [ebp+var_30] 4 +
mov [ebp+var_2C] esi +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_101C847  +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_28] ecx +
mov ecx [ebp+arg_8] +
mov [ebp+var_20] eax +
mov eax ecx +
mov [ebp+var_24] esi +
mov [ebp+var_1C] esi +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di si +
jnz loc_101C86D  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+var_10] eax +
lea eax [ebp+var_38] +
push eax  +
push 3  +
push offset dword_1001250  +
push [ebp+var_4]  +
mov [ebp+var_18] ecx +
push [ebp+var_8]  +
mov [ebp+var_14] esi +
mov [ebp+var_C] esi +
call ds:EventWrite  +
mov esi eax +
mov eax [ebp+var_8] +
or eax [ebp+var_4] +
pop edi  +
jz loc_101C8B9  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call ds:EventUnregister  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_101C8ED  +
test eax eax +
jnz loc_101C8F2  +
mov ecx [esi] +
test ecx ecx +
jz loc_101C8EA  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_101C8DE  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_102C080 +
push offset dword_102C070  +
push dword_102C07C  +
mov dword_102C070 eax +
push offset unk_102C060  +
push offset unk_102C064  +
push offset unk_102C05C  +
call ds:__getmainargs  +
add esp 14h +
mov dword_102C06C eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoA  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov edi offset Destination +
push 0  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_101C992  +
cmp eax esi +
jnz loc_101C985  +
xor esi esi +
inc esi  +
mov ebx esi +
jmp loc_101C995  +
push 3E8h  +
call ds:Sleep  +
jmp loc_101C96C  +
xor esi esi +
inc esi  +
mov eax dword_102C504 +
cmp eax esi +
jnz loc_101C9A8  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_101C9D7  +
mov eax dword_102C504 +
test eax eax +
jnz loc_101C9D1  +
mov dword_102C504 esi +
push offset dword_10011E0  +
push offset dword_10011D4  +
call sub_101C8D1  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101C9D7  +
jmp loc_101CAFF  +
mov dword_102C078 esi +
mov eax dword_102C504 +
cmp eax esi +
jnz loc_101C9FB  +
push offset dword_10011D0  +
push offset dword_10011C8  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_102C504 2 +
test ebx ebx +
jnz loc_101CA07  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_102C50C 0 +
jz loc_101CA2B  +
push offset dword_102C50C  +
call sub_101CD29  +
pop ecx  +
test eax eax +
jz loc_101CA2B  +
push 0  +
push 2  +
push 0  +
call dword_102C50C  +
mov eax ds:_acmdln +
mov esi [eax] +
mov [ebp+var_20] esi +
mov al [esi] +
cmp al 20h +
ja $LN61  +
test al al +
jz loc_101CA45  +
cmp [ebp+var_1C] 0 +
jnz $LN61  +
mov al [esi] +
test al al +
jz loc_101CA55  +
cmp al 20h +
ja loc_101CA55  +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_101CA45  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_101CA61  +
movzx eax [ebp+StartupInfo.wShowWindow] +
jmp loc_101CA64  +
push 0Ah  +
pop eax  +
push eax  +
push esi  +
push 0  +
push 1000000h  +
call _WinMain@16  +
mov dword_102C074 eax +
cmp dword_102C068 0 +
jnz $LN62  +
push eax  +
call ds:exit  +
cmp al 22h +
jnz loc_101CA96  +
xor ecx ecx +
cmp [ebp+var_1C] ecx +
setz cl  +
mov [ebp+var_1C] ecx +
movzx eax al +
push eax  +
call ds:_ismbblead  +
pop ecx  +
test eax eax +
jz loc_101CAA9  +
inc esi  +
mov [ebp+var_20] esi +
inc esi  +
jmp loc_101CA32  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-24h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov dword_102C074 eax +
cmp dword_102C068 0 +
jnz $LN62  +
push eax  +
call ds:_exit  +
cmp dword_102C078 0 +
jnz loc_101CAEA  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_102C074 +
jmp loc_101CB0B  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_101CB28  +
xor eax eax +
jmp loc_101CB75  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_101CB24  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_101CB62  +
cmp ecx 20Bh +
jnz loc_101CB24  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_101CB24  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_101CB70  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_101CB24  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_102C068 eax +
call sub_101CEC2  +
push eax  +
call ds:__set_app_type  +
or dword_102C4FC 0FFFFFFFFh +
or dword_102C500 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_102C088 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_102C084 +
mov [eax] ecx +
call sub_101CE54  +
cmp dword_102C014 0 +
jnz loc_101CBCE  +
push offset sub_101CE54  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101CE3C  +
xor eax eax +
retn   +
***
call sub_101CF01  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_102C004 +
jnz loc_101CBF5  +
retn 0  +
jmp loc_101CF97  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101CC6C  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101CC6C  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101CC66  +
cmp eax 19930521h +
jz loc_101CC66  +
cmp eax 19930522h +
jz loc_101CC66  +
cmp eax 1994000h +
jnz loc_101CC6C  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_101CC2C+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101CCB6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101CCB2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101CD1D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_101CD15  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101CD1F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_101CD05  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_101CCA0  +
pop ecx  +
test eax eax +
jz loc_101CD86  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_101CCE0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101CD86  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101CD8F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_101CBEA  +
push offset dword_102C004  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101CEB5  +
cmp ecx 0FFFFFFFFh +
jz loc_101CEB5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_101CEAE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_101CEAE  +
cmp edx 10000000h +
jnb loc_101CEAE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_101CEAE  +
jmp loc_101CEA9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_101CEF7  +
push eax  +
call sub_101CE5C  +
test eax eax +
jz loc_101CEF7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101CEEC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_101CEF7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_102C004 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_101CF33  +
test eax ebx +
jz loc_101CF33  +
not eax  +
mov dword_102C008 eax +
jmp loc_101CF8E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101CF7A  +
test dword_102C004 ebx +
jnz loc_101CF7F  +
mov esi 0BB40E64Fh +
mov dword_102C004 esi +
not esi  +
mov dword_102C008 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_102C190 eax +
mov dword_102C18C ecx +
mov dword_102C188 edx +
mov dword_102C184 ebx +
mov dword_102C180 esi +
mov dword_102C17C edi +
mov word_102C1A8 ss +
mov word_102C19C cs +
mov word_102C178 ds +
mov word_102C174 es +
mov word_102C170 fs +
mov word_102C16C gs +
pushf   +
pop dword_102C1A0  +
mov eax [ebp+0] +
mov dword_102C194 eax +
mov eax [ebp+4] +
mov dword_102C198 eax +
lea eax [ebp+8] +
mov dword_102C1A4 eax +
mov eax [ebp-320h] +
mov dword_102C0E0 10001h +
mov eax dword_102C198 +
mov dword_102C09C eax +
mov dword_102C090 0C0000409h +
mov dword_102C094 1 +
mov eax dword_102C004 +
mov [ebp-328h] eax +
mov eax dword_102C008 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax-4] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 0FFFFFFFCh +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_101D0F6  +
cmp [ebp+arg_4] eax +
jz loc_101D0F2  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_101D0F2  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_101D0D5  +
test esi esi +
jnz loc_101D0FE  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101D10C  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
cmp eax ebx +
jz loc_101D14C  +
mov ecx [eax-4] +
cmp ecx edi +
jnb loc_101D13F  +
push eax  +
call sub_101D0A4  +
and [esi] ebx +
jmp loc_101D14C  +
cmp ecx ebx +
jbe loc_101D148  +
xor ecx ecx +
mov [eax] cx +
cmp [esi] ebx +
jnz loc_101D185  +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_101D179  +
push offset aFailedToAllo_1  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov ebx eax +
call sub_101D736  +
add esp 10h +
jmp loc_101D185  +
mov [eax] edi +
add eax 4 +
xor ecx ecx +
mov [esi] eax +
mov [eax] cx +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 40h  +
pop ebx  +
push ebx  +
push edi  +
call sub_101D118  +
mov esi eax +
test esi esi +
jl loc_101D1D0  +
push ebx  +
push dword ptr [edi]  +
push dword ptr [ebp+uID]  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
test eax eax +
jz loc_101D1E7  +
lea ecx [ebx-1] +
cmp eax ecx +
jl loc_101D1CC  +
add ebx ebx +
jmp loc_101D1A1  +
xor esi esi +
jmp loc_101D220  +
push offset aFailedToAllo_2  +
push 1  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101D220  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_101D201  +
and esi 0FFFFh +
or esi 80070000h +
test esi esi +
jl loc_101D208  +
mov esi 80004005h +
push dword ptr [ebp+uID]  +
push offset aFailedToLoadFr  +
push 1  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_101D244  +
cmp edx 7FFFFFFFh +
jbe loc_101D249  +
mov eax 80070057h +
test eax eax +
jl loc_101D25F  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_101D0C1  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101D27E  +
cmp ecx 7FFFFFFFh +
jbe loc_101D283  +
mov eax 80070057h +
test eax eax +
jl loc_101D2BF  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101D2AF  +
cmp eax esi +
ja loc_101D2AF  +
jnz loc_101D2BA  +
jmp loc_101D2B4  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:lstrlenW +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+var_8] edi +
cmp eax edi +
jz loc_101D2F2  +
mov edi [eax-4] +
push eax  +
call ebx  +
mov [ebp+var_4] eax +
push [ebp+lpString]  +
call ebx  +
mov ecx [ebp+var_4] +
lea eax [eax+ecx+1] +
cmp edi eax +
jnb loc_101D35C  +
mov edi eax +
lea eax [edi+edi+4] +
push eax  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jnz loc_101D331  +
push offset aFailedToAllo_1  +
mov eax 8007000Eh +
push 1  +
push eax  +
push 4000000h  +
mov esi eax +
call sub_101D736  +
add esp 10h +
jmp loc_101D390  +
mov [eax] edi +
lea ebx [eax+4] +
mov eax [esi] +
test eax eax +
jz loc_101D350  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_101D355  +
xor eax eax +
mov [ebx] ax +
mov eax [esi] +
mov [esi] ebx +
mov [ebp+var_8] eax +
push [ebp+lpString]  +
push edi  +
push dword ptr [esi]  +
call sub_101ABA3  +
mov esi eax +
test esi esi +
jge loc_101D382  +
push offset aFailedToConcat  +
push 1  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
cmp [ebp+var_8] 0 +
jz loc_101D390  +
push [ebp+var_8]  +
call sub_101D0A4  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
test eax eax +
jz loc_101D3CA  +
mov ebx [eax-4] +
push eax  +
call ds:lstrlenW  +
mov [ebp+var_8] eax +
test ebx ebx +
jnz loc_101D3F4  +
push 40h  +
pop ebx  +
push ebx  +
push esi  +
call sub_101D118  +
mov edi eax +
test edi edi +
jge loc_101D3F4  +
push dword ptr [ebp+arg_4]  +
push offset aFailedToAllo_3  +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
jmp loc_101D461  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
push ebx  +
push dword ptr [esi]  +
call sub_101D268  +
mov edi eax +
cmp edi 8007007Ah +
jnz loc_101D435  +
cmp [ebp+var_4] 0 +
jnz loc_101D423  +
mov eax [esi] +
and dword ptr [esi] 0 +
mov edx [ebp+var_8] +
xor ecx ecx +
mov [ebp+var_4] eax +
mov [eax+edx*2] cx +
add ebx ebx +
push ebx  +
push esi  +
call sub_101D118  +
mov edi eax +
test edi edi +
jl loc_101D46A  +
xor edi edi +
inc edi  +
cmp edi 1 +
jz loc_101D3F4  +
test edi edi +
jge loc_101D453  +
push offset aFailedToFormat  +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
cmp [ebp+var_4] 0 +
jz loc_101D461  +
push [ebp+var_4]  +
call sub_101D0A4  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push dword ptr [ebp+arg_4]  +
push offset aFailedToAllo_4  +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
jmp loc_101D453  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_4]  +
call sub_1019973  +
mov esi eax +
test esi esi +
jge loc_101D4C2  +
push offset aFailedToGetLen  +
push 1  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101D507  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi [ebp+var_4] +
inc edi  +
push edi  +
push ebx  +
call sub_101D118  +
mov esi eax +
test esi esi +
jge loc_101D4DF  +
push offset aFailedToAllo_5  +
jmp loc_101D4F5  +
push [ebp+arg_4]  +
push edi  +
push dword ptr [ebx]  +
call sub_101D22E  +
mov esi eax +
test esi esi +
jge loc_101D505  +
push offset aFailedToCopySo  +
push 1  +
push esi  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101D39E  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call sub_101DDD1  +
mov ebx offset aUnknownError +
push 0Eh  +
mov edi ebx +
mov esi eax +
pop ecx  +
xor edx edx +
cmps   +
jz loc_101D555  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_101D5BC  +
mov ecx [ebp+arg_0] +
mov eax ecx +
sar eax 10h +
and eax 1FFFh +
push ecx  +
cmp eax 7 +
jnz loc_101D573  +
call sub_101EE24  +
jmp loc_101D5BC  +
cmp eax 0Fh +
jnz loc_101D57F  +
call sub_101E49E  +
jmp loc_101D5BC  +
cmp eax 0E5Eh +
jnz loc_101D58D  +
call sub_1029061  +
jmp loc_101D5BC  +
call sub_1028228  +
push 0Eh  +
mov edi ebx +
mov esi eax +
pop ecx  +
xor edx edx +
cmps   +
jz loc_101D5A4  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jnz loc_101D5BC  +
mov eax [ebp+arg_0] +
or eax 10000000h +
cmp [ebp+arg_0] eax +
mov eax offset aNtstatusError +
jz loc_101D5BC  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword_102C3C0  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_101D610  +
cmp eax esi +
ja loc_101D610  +
jnz loc_101D61A  +
mov [esi+edi] bl +
jmp loc_101D618  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101D623  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_101D645  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_101D64A  +
mov eax 80070057h +
test eax eax +
jl loc_101D663  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_101D5E4  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_101D681  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_101D686  +
mov eax 80070057h +
test eax eax +
jl loc_101D6A0  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_101D5E4  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_8] +
push esi  +
push ecx  +
push eax  +
mov esi 400h +
push esi  +
lea eax [ebp+OutputString] +
push eax  +
call sub_101D630  +
test eax eax +
jl loc_101D722  +
cmp [ebp+arg_4] 0 +
jz loc_101D715  +
push [ebp+arg_0]  +
call sub_101D52E  +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+OutputString] +
push eax  +
push offset aSHresult0x08xS  +
lea eax [ebp+var_804] +
push esi  +
push eax  +
call sub_101D66C  +
add esp 18h +
test eax eax +
jl loc_101D722  +
lea eax [ebp+var_804] +
jmp loc_101D71B  +
lea eax [ebp+OutputString] +
push eax  +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CBEA  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_102C004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
cmp dword_102C3BC ebx +
jz loc_101D814  +
mov eax dword_102C3C0 +
cmp eax ebx +
jz loc_101D814  +
cmp dword_102C3C4 ebx +
jz loc_101D814  +
cmp [ebp+arg_8] bl +
jz loc_101D7D9  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call sub_101D630  +
test eax eax +
jl loc_101D826  +
push [ebp+arg_4]  +
call sub_101D52E  +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+var_404] +
push eax  +
push offset aSHresult0x08xS  +
push [ebp+arg_0]  +
call sub_101D5C8  +
add esp 14h +
push ebx  +
push ebx  +
push ebx  +
mov esi eax +
call dword_102C3C4  +
push eax  +
push offset aCbswdslog  +
push offset aDW7rtmBaseCbsU  +
push 39Eh  +
jmp loc_101D800  +
lea ecx [ebp+arg_10] +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
call eax  +
push ebx  +
push ebx  +
push ebx  +
mov esi eax +
call dword_102C3C4  +
push eax  +
push offset aCbswdslog  +
push offset aDW7rtmBaseCbsU  +
push 3A4h  +
push ebx  +
push offset aD  +
push 20000h  +
push esi  +
call dword_102C3BC  +
jmp loc_101D826  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_C]  +
push dword ptr [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101D6A7  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CBEA  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ecx +
mov edi esi +
cmp [ebp+arg_4] ebx +
jbe loc_101D8A0  +
mov [ebp+arg_0] ebx +
cmp word ptr [esi] 0 +
jnz loc_101D878  +
mov eax esi +
sub eax edi +
and eax 0FFFFFFFEh +
cmp eax 2 +
jle loc_101D875  +
mov ecx [ebp+var_4] +
push edi  +
call sub_10183B9  +
mov ebx eax +
test ebx ebx +
jl loc_101D88A  +
lea edi [esi+2] +
add [ebp+arg_0] 2 +
mov eax [ebp+arg_0] +
inc esi  +
sar eax 1 +
inc esi  +
cmp eax [ebp+arg_4] +
jb loc_101D854  +
jmp loc_101D8A0  +
push edi  +
push offset aFailedToAddStr  +
push 1  +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push edi  +
xor edi edi +
mov [ebp+phkResult] ebx +
mov [ebp+var_10] ebx +
mov [ebp+Type] ebx +
mov [ebp+cbData] ebx +
mov [ebp+var_14] ebx +
cmp dword ptr [ebp+lpSubKey] ebx +
jz loc_101D93A  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
push dword ptr [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test [ebp+arg_8] 1 +
jz loc_101D90B  +
cmp eax 2 +
jz loc_101D8F6  +
cmp eax 3 +
jnz loc_101D90B  +
cmp eax ebx +
jle loc_101D904  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_101DABF  +
cmp eax ebx +
jz loc_101D940  +
jle loc_101D91B  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpSubKey]  +
mov edi eax +
push offset aFailedToOpenTh  +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
jmp loc_101DABF  +
mov eax [ebp+hKey] +
mov [ebp+phkResult] eax +
push esi  +
mov esi [ebp+arg_10] +
mov eax [esi] +
cmp eax ebx +
jz loc_101D9F6  +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
call sub_101D089  +
mov edi eax +
cmp edi ebx +
jge loc_101D968  +
push offset aFailedToDeterm  +
push 1  +
push edi  +
jmp loc_101D9B7  +
mov eax [ebp+var_10] +
lea eax [eax+eax-4] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [esi]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push dword ptr [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jnz loc_101D9C9  +
mov [ebp+var_14] 1 +
cmp [ebp+Type] 1 +
jz loc_101DA3F  +
cmp [ebp+Type] 2 +
jz loc_101DA3F  +
push offset aRegistryValueI  +
mov eax 8007000Dh +
push 1  +
mov edi eax +
push eax  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101DABE  +
cmp eax 0EAh +
jz loc_101D994  +
test [ebp+arg_8] 1 +
jz loc_101D9DB  +
cmp eax 2 +
jz loc_101DA17  +
cmp eax ebx +
jle loc_101D9E9  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedInitialQ  +
jmp loc_101DA94  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push dword ptr [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test [ebp+arg_8] 1 +
jz loc_101DA21  +
cmp eax 2 +
jnz loc_101DA21  +
mov edi 80070002h +
jmp loc_101DABE  +
cmp eax ebx +
jz loc_101D994  +
jle loc_101DA35  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToQueryV  +
jmp loc_101DA94  +
cmp [ebp+var_14] ebx +
jnz loc_101DAA8  +
mov eax [ebp+cbData] +
shr eax 1 +
inc eax  +
inc eax  +
push eax  +
push esi  +
mov [ebp+var_10] eax +
call sub_101D118  +
mov edi eax +
cmp edi ebx +
jge loc_101DA65  +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToAllo_6  +
jmp loc_101DA96  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [esi]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push dword ptr [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jz loc_101DAA8  +
jle loc_101DA8C  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToQueryR  +
mov edi eax +
push 1  +
push edi  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
jmp loc_101DABE  +
mov eax [esi] +
mov edx [ebp+var_10] +
xor ecx ecx +
mov [eax+edx*2-4] cx +
mov eax [esi] +
mov edx [ebp+var_10] +
mov [eax+edx*2-2] cx +
pop esi  +
cmp dword ptr [ebp+lpSubKey] ebx +
jz loc_101DAD2  +
cmp [ebp+phkResult] ebx +
jz loc_101DAD2  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
mov [ebp+phkResult] esi +
mov dword ptr [ebp+lpData] esi +
mov [ebp+Type] esi +
mov [ebp+cbData] esi +
cmp dword ptr [ebp+lpSubKey] esi +
jz loc_101DB66  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push esi  +
push dword ptr [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test byte ptr [ebp+arg_8] 1 +
jz loc_101DB37  +
cmp eax 2 +
jz loc_101DB22  +
cmp eax 3 +
jnz loc_101DB37  +
cmp eax esi +
jle loc_101DB30  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_101DC7E  +
cmp eax esi +
jz loc_101DB6C  +
jle loc_101DB47  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpSubKey]  +
mov ebx eax +
push offset aFailedToOpenTh  +
push 1  +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
jmp loc_101DC7E  +
mov eax [ebp+hKey] +
mov [ebp+phkResult] eax +
push edi  +
mov edi ds:RegQueryValueExW +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call edi  +
mov ecx [ebp+arg_8] +
and ecx 1 +
mov [ebp+hKey] ecx +
jz loc_101DB99  +
cmp eax 2 +
jz loc_101DC1E  +
cmp eax esi +
jz loc_101DBB8  +
jle loc_101DBA9  +
and eax 0FFFFh +
or eax 80070000h +
push [ebp+lpValueName]  +
mov ebx eax +
push offset aFailedToQueryV  +
jmp loc_101DC6D  +
cmp [ebp+Type] 7 +
jz loc_101DBDD  +
push offset aRegistryValu_0  +
push 1  +
mov ebx 8007000Dh +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 10h +
jmp loc_101DC7D  +
mov esi [ebp+cbData] +
shr esi 1 +
inc esi  +
inc esi  +
push esi  +
lea eax [ebp+lpData] +
push eax  +
call sub_101D118  +
mov ebx eax +
test ebx ebx +
jge loc_101DBFE  +
push [ebp+lpValueName]  +
push offset aFailedToAllo_6  +
jmp loc_101DC6D  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [ebp+lpData]  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call edi  +
cmp [ebp+hKey] 0 +
jz loc_101DC25  +
cmp eax 2 +
jnz loc_101DC25  +
mov ebx 80070002h +
jmp loc_101DC7D  +
test eax eax +
jz loc_101DC41  +
jle loc_101DC35  +
and eax 0FFFFh +
or eax 80070000h +
push [ebp+lpValueName]  +
mov ebx eax +
push offset aFailedToQueryR  +
jmp loc_101DC6D  +
mov ecx dword ptr [ebp+lpData] +
xor eax eax +
mov [ecx+esi*2-4] ax +
mov ecx dword ptr [ebp+lpData] +
mov [ecx+esi*2-2] ax +
mov ecx [ebp+arg_10] +
push esi  +
push dword ptr [ebp+lpData]  +
call sub_101D839  +
mov ebx eax +
test ebx ebx +
jge loc_101DC7D  +
push dword ptr [ebp+lpData]  +
push offset aFailedToAddStr  +
push 1  +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
pop edi  +
xor esi esi +
cmp dword ptr [ebp+lpSubKey] esi +
jz loc_101DC93  +
cmp [ebp+phkResult] esi +
jz loc_101DC93  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
cmp dword ptr [ebp+lpData] esi +
jz loc_101DCA0  +
push dword ptr [ebp+lpData]  +
call sub_101D0A4  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+phkResult] edi +
mov [ebp+Type] edi +
mov [ebp+cbData] edi +
mov dword ptr [ebp+Data] edi +
cmp [ebp+lpSubKey] edi +
jz loc_101DD21  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push edi  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test [ebp+arg_8] 1 +
jz loc_101DD07  +
cmp eax 2 +
jz loc_101DCF2  +
cmp eax 3 +
jnz loc_101DD07  +
cmp eax edi +
jle loc_101DD00  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_101DDB1  +
cmp eax edi +
jz loc_101DD27  +
jle loc_101DD17  +
and eax 0FFFFh +
or eax 80070000h +
push [ebp+lpSubKey]  +
push offset aFailedToOpenTh  +
jmp loc_101DD71  +
mov eax [ebp+hKey] +
mov [ebp+phkResult] eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push dword ptr [ebp+lpValueName]  +
mov [ebp+cbData] 4 +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test [ebp+arg_8] 1 +
jz loc_101DD59  +
cmp eax 2 +
jnz loc_101DD59  +
mov ebx 80070002h +
jmp loc_101DDB1  +
cmp eax edi +
jz loc_101DD85  +
jle loc_101DD69  +
and eax 0FFFFh +
or eax 80070000h +
push dword ptr [ebp+lpValueName]  +
push offset aFailedToQueryR  +
mov ebx eax +
push 1  +
push ebx  +
push 4000000h  +
call sub_101D736  +
add esp 14h +
jmp loc_101DDB1  +
cmp [ebp+Type] 4 +
jz loc_101DDA9  +
push offset aRegistryValu_1  +
mov eax 8007000Dh +
push 1  +
push eax  +
push 4000000h  +
mov ebx eax +
call sub_101D736  +
add esp 10h +
jmp loc_101DDB1  +
mov eax [ebp+arg_10] +
mov ecx dword ptr [ebp+Data] +
mov [eax] ecx +
cmp [ebp+lpSubKey] edi +
jz loc_101DDC4  +
cmp [ebp+phkResult] edi +
jz loc_101DDC4  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 80092024h +
cmp eax ecx +
jg loc_101E098  +
jz loc_101E08E  +
mov ecx 80091011h +
cmp eax ecx +
jg loc_101DF89  +
jz loc_101DF7F  +
add ecx 0FFFFFFF3h +
cmp eax ecx +
jg loc_101DEF2  +
jz loc_101DEE8  +
mov ecx 80070006h +
cmp eax ecx +
jg loc_101DE8F  +
jz loc_101DE85  +
cmp eax 80004001h +
jz loc_101DE7B  +
cmp eax 80004002h +
jz loc_101DE71  +
cmp eax 80004003h +
jz loc_101DE67  +
cmp eax 80004004h +
jz loc_101DE5D  +
cmp eax 80004005h +
jz loc_101DE53  +
cmp eax 80070005h +
jnz loc_101E375  +
mov eax offset aE_accessdenied +
jmp loc_101E381  +
mov eax offset aE_fail +
jmp loc_101E381  +
mov eax offset aE_abort +
jmp loc_101E381  +
mov eax offset aE_pointer +
jmp loc_101E381  +
mov eax offset aE_nointerface +
jmp loc_101E381  +
mov eax offset aE_notimpl +
jmp loc_101E381  +
mov eax offset aE_handle +
jmp loc_101E381  +
cmp eax 8007000Eh +
jz loc_101DEDE  +
cmp eax 80070057h +
jz loc_101DED4  +
cmp eax 80091001h +
jz loc_101DECA  +
cmp eax 80091002h +
jz loc_101DEC0  +
cmp eax 80091003h +
jnz loc_101E375  +
mov eax offset aCrypt_e_oid_fo +
jmp loc_101E381  +
mov eax offset aCrypt_e_unknow +
jmp loc_101E381  +
mov eax offset aCrypt_e_msg_er +
jmp loc_101E381  +
mov eax offset aE_invalidarg +
jmp loc_101E381  +
mov eax offset aE_outofmemory +
jmp loc_101E381  +
mov eax offset aCrypt_e_invali +
jmp loc_101E381  +
add eax 7FF6EFFBh +
cmp eax 0Bh +
ja loc_101E375  +
jmp ds:off_101E385[eax*4]  +
mov eax offset aCrypt_e_unexpe +
jmp loc_101E381  +
mov eax offset aCrypt_e_auth_a +
jmp loc_101E381  +
mov eax offset aCrypt_e_hash_v +
jmp loc_101E381  +
mov eax offset aCrypt_e_inva_0 +
jmp loc_101E381  +
mov eax offset aCrypt_e_alread +
jmp loc_101E381  +
mov eax offset aCrypt_e_not_de +
jmp loc_101E381  +
mov eax offset aCrypt_e_recipi +
jmp loc_101E381  +
mov eax offset aCrypt_e_contro +
jmp loc_101E381  +
mov eax offset aCrypt_e_issuer +
jmp loc_101E381  +
mov eax offset aCrypt_e_signer +
jmp loc_101E381  +
mov eax offset aCrypt_e_attrib +
jmp loc_101E381  +
mov eax offset aCrypt_e_stream +
jmp loc_101E381  +
mov eax offset aCrypt_e_stre_0 +
jmp loc_101E381  +
add eax 7FF6DFFFh +
cmp eax 22h +
ja loc_101E375  +
jmp ds:off_101E3B5[eax*4]  +
mov eax offset aCrypt_e_bad_le +
jmp loc_101E381  +
mov eax offset aCrypt_e_bad_en +
jmp loc_101E381  +
mov eax offset aCrypt_e_file_e +
jmp loc_101E381  +
mov eax offset aCrypt_e_not_fo +
jmp loc_101E381  +
mov eax offset aCrypt_e_exists +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_pro +
jmp loc_101E381  +
mov eax offset aCrypt_e_self_s +
jmp loc_101E381  +
mov eax offset aCrypt_e_delete +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_mat +
jmp loc_101E381  +
mov eax offset aCrypt_e_unex_0 +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_key +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_dec +
jmp loc_101E381  +
mov eax offset aCrypt_e_bad_ms +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_sig +
jmp loc_101E381  +
mov eax offset aCrypt_e_pendin +
jmp loc_101E381  +
mov eax offset aCrypt_e_revoke +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_rev +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_r_0 +
jmp loc_101E381  +
mov eax offset aCrypt_e_revoca +
jmp loc_101E381  +
mov eax offset aCrypt_e_not_in +
jmp loc_101E381  +
mov eax offset aCrypt_e_inva_1 +
jmp loc_101E381  +
mov eax offset aCrypt_e_inva_2 +
jmp loc_101E381  +
mov eax offset aCrypt_e_inva_3 +
jmp loc_101E381  +
mov eax offset aCrypt_e_inva_4 +
jmp loc_101E381  +
mov eax offset aCrypt_e_not_ch +
jmp loc_101E381  +
mov ecx 80093133h +
cmp eax ecx +
jg loc_101E22B  +
jz loc_101E221  +
add ecx 0FFFFFFD0h +
cmp eax ecx +
jg loc_101E19E  +
jz loc_101E194  +
mov ecx 8009202Bh +
cmp eax ecx +
jg loc_101E13B  +
jz loc_101E131  +
cmp eax 80092025h +
jz loc_101E127  +
cmp eax 80092026h +
jz loc_101E11D  +
cmp eax 80092027h +
jz loc_101E113  +
cmp eax 80092028h +
jz loc_101E109  +
cmp eax 80092029h +
jz loc_101E0FF  +
cmp eax 8009202Ah +
jnz loc_101E375  +
mov eax offset aCrypt_e_not__0 +
jmp loc_101E381  +
mov eax offset aCrypt_e_verify +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_ver +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_v_0 +
jmp loc_101E381  +
mov eax offset aCrypt_e_securi +
jmp loc_101E381  +
mov eax offset aCrypt_e_filere +
jmp loc_101E381  +
mov eax offset aCrypt_e_no_tru +
jmp loc_101E381  +
cmp eax 8009202Ch +
jz loc_101E18A  +
cmp eax 80093000h +
jz loc_101E180  +
cmp eax 80093100h +
jz loc_101E176  +
cmp eax 80093101h +
jz loc_101E16C  +
cmp eax 80093102h +
jnz loc_101E375  +
mov eax offset aCrypt_e_asn1_e +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_i +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_0 +
jmp loc_101E381  +
mov eax offset aCrypt_e_oss_er +
jmp loc_101E381  +
mov eax offset aCrypt_e_missin +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_c +
jmp loc_101E381  +
add eax 7FF6CEFCh +
cmp eax 0Ah +
ja loc_101E375  +
jmp ds:off_101E441[eax*4]  +
mov eax offset aCrypt_e_asn1_l +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_1 +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_m +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_o +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_b +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_2 +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_3 +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_4 +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_5 +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_r +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_u +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_p +
jmp loc_101E381  +
mov ecx 800B0109h +
cmp eax ecx +
jg loc_101E315  +
jz loc_101E30E  +
add ecx 0FFFFFFFAh +
cmp eax ecx +
jg loc_101E2BB  +
jz loc_101E2B1  +
cmp eax 80093134h +
jz loc_101E2A7  +
cmp eax 80093201h +
jz loc_101E29D  +
cmp eax 80093202h +
jz loc_101E293  +
cmp eax 800B0100h +
jz loc_101E289  +
cmp eax 800B0101h +
jz loc_101E27F  +
cmp eax 800B0102h +
jnz loc_101E375  +
mov eax offset aCert_e_validit +
jmp loc_101E381  +
mov eax offset aCert_e_expired +
jmp loc_101E381  +
mov eax offset aTrust_e_nosign +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_n +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_6 +
jmp loc_101E381  +
mov eax offset aCrypt_e_asn1_7 +
jmp loc_101E381  +
mov eax offset aCert_e_role +
jmp loc_101E381  +
cmp eax 800B0104h +
jz loc_101E307  +
cmp eax 800B0105h +
jz loc_101E300  +
cmp eax 800B0106h +
jz loc_101E2F6  +
cmp eax 800B0107h +
jz loc_101E2EC  +
cmp eax 800B0108h +
jnz loc_101E375  +
mov eax offset aCert_e_malform +
jmp loc_101E381  +
mov eax offset aCert_e_issuerc +
jmp loc_101E381  +
mov eax offset aCert_e_purpose +
jmp loc_101E381  +
mov eax offset aCert_e_critica +
jmp loc_101E381  +
mov eax offset aCert_e_pathlen +
jmp loc_101E381  +
mov eax offset aCert_e_untrust +
jmp loc_101E381  +
test eax eax +
jg loc_101E372  +
jz loc_101E36B  +
add eax 7FF4FEF6h +
cmp eax 0Ah +
ja loc_101E375  +
jmp ds:off_101E46D[eax*4]  +
mov eax offset aCert_e_chainin +
jmp loc_101E381  +
mov eax offset aCert_e_revoked +
jmp loc_101E381  +
mov eax offset aCert_e_untru_0 +
jmp loc_101E381  +
mov eax offset aCert_e_revocat +
jmp loc_101E381  +
mov eax offset aCert_e_cn_no_m +
jmp loc_101E381  +
mov eax offset aCert_e_wrong_u +
jmp loc_101E381  +
mov eax offset aCert_e_untru_1 +
jmp loc_101E381  +
mov eax offset aCert_e_invalid +
jmp loc_101E381  +
mov eax offset aCert_e_inval_0 +
jmp loc_101E381  +
mov eax offset aS_ok +
jmp loc_101E381  +
dec eax  +
jz loc_101E37C  +
mov eax offset aUnknownError +
jmp loc_101E381  +
mov eax offset aS_false +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 800F0243h +
cmp eax ecx +
jg loc_101E870  +
jz loc_101E866  +
add ecx 0FFFFFFDAh +
cmp eax ecx +
jg loc_101E6DF  +
jz loc_101E6D5  +
mov ecx 800F020Ah +
cmp eax ecx +
jg loc_101E60C  +
jz loc_101E602  +
add ecx 0FFFFFFF7h +
cmp eax ecx +
jg loc_101E59D  +
jz loc_101E593  +
mov ecx 800F0100h +
cmp eax ecx +
jg loc_101E54B  +
jz loc_101E541  +
cmp eax 800F0000h +
jz loc_101E537  +
cmp eax 800F0001h +
jz loc_101E52D  +
cmp eax 800F0002h +
jz loc_101E523  +
cmp eax 800F0003h +
jnz loc_101EBB6  +
mov eax offset aSpapi_e_genera +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_sectio +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_bad_se +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_expect +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_wrong_ +
jmp loc_101EBD7  +
cmp eax 800F0101h +
jz loc_101E589  +
cmp eax 800F0102h +
jz loc_101E57F  +
cmp eax 800F0103h +
jz loc_101E575  +
cmp eax 800F0200h +
jnz loc_101EBB6  +
mov eax offset aSpapi_e_no_ass +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_bac +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_line_n +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_sect_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_class_ +
jmp loc_101EBD7  +
add eax 7FF0FDFEh +
cmp eax 7 +
ja loc_101EBB6  +
jmp ds:off_101EBDE[eax*4]  +
mov eax offset aSpapi_e_duplic +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_dri +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_key_do +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_invali +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devins +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devinf +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_1 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_inf +
jmp loc_101EBD7  +
add eax 7FF0FDF5h +
cmp eax 11h +
ja loc_101EBB6  +
jmp ds:off_101EBFE[eax*4]  +
mov eax offset aSpapi_e_no_suc +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_cant_l +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_2 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_di_do_ +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_di_nof +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_3 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_dev +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devi_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devi_1 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_di_bad +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_cla +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_filequ +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_bad__0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_c_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_a_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_def +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_device +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devi_2 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_bad_in +
jmp loc_101EBD7  +
add eax 7FF0FDE2h +
cmp eax 24h +
ja loc_101EBB6  +
jmp ds:off_101EC46[eax*4]  +
mov eax offset aSpapi_e_no_s_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_4 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_5 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_remote +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_machin +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_con +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_6 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_s_1 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_di_pos +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_7 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_com +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_d_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_8 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_di_don +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inva_9 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_non_wi +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_non__0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_cat +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devi_3 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_not_di +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_cant_r +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inv_10 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_driver +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_in_wow +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_set_sy +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_incorr +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_sce_di +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_unknow +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_pnp_re +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_remo_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_not_an +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_inf_in +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_di_fun +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_no_aut +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_authen +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_auth_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_auth_1 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_auth_2 +
jmp loc_101EBD7  +
mov ecx 800F0300h +
cmp eax ecx +
jg loc_101E8F4  +
jz loc_101E8EA  +
add eax 7FF0FDBCh +
cmp eax 8 +
ja loc_101EBB6  +
jmp ds:off_101ECDA[eax*4]  +
mov eax offset aSpapi_e_signat +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_only_v +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devi_4 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_driv_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_devi_5 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_driv_1 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_wron_0 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_file_h +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_driv_2 +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_unreco +
jmp loc_101EBD7  +
mov ecx 800F084Fh +
cmp eax ecx +
jg loc_101EB42  +
jz loc_101EB38  +
add eax 7FF0F800h +
cmp eax 43h +
ja loc_101EBB6  +
jmp ds:off_101ECFE[eax*4]  +
mov eax offset aCbs_e_internal +
jmp loc_101EBD7  +
mov eax offset aCbs_e_not_init +
jmp loc_101EBD7  +
mov eax offset aCbs_e_already_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_invalid_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_open_fai +
jmp loc_101EBD7  +
mov eax offset aCbs_e_invali_0 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_pending +
jmp loc_101EBD7  +
mov eax offset aCbs_e_not_inst +
jmp loc_101EBD7  +
mov eax offset aCbs_e_image_no +
jmp loc_101EBD7  +
mov eax offset aCbs_e_array_el +
jmp loc_101EBD7  +
mov eax offset aCbs_e_reestabl +
jmp loc_101EBD7  +
mov eax offset aCbs_e_property +
jmp loc_101EBD7  +
mov eax offset aCbs_e_unknown_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_manifest +
jmp loc_101EBD7  +
mov eax offset aCbs_e_manife_0 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_manife_1 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_manife_2 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_manife_3 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_manife_4 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_invali_1 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_invali_2 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_invali_3 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_dpx_job_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_package_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_identity +
jmp loc_101EBD7  +
mov eax offset aCbs_e_duplicat +
jmp loc_101EBD7  +
mov eax offset aCbs_e_invali_4 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_unexpect +
jmp loc_101EBD7  +
mov eax offset aCbs_e_excessiv +
jmp loc_101EBD7  +
mov eax offset aCbs_e_cycle_ev +
jmp loc_101EBD7  +
mov eax offset aCbs_e_not_appl +
jmp loc_101EBD7  +
mov eax offset aCbs_e_source_m +
jmp loc_101EBD7  +
mov eax offset aCbs_e_cancel +
jmp loc_101EBD7  +
mov eax offset aCbs_e_abort +
jmp loc_101EBD7  +
mov eax offset aCbs_e_illegal_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_new_serv +
jmp loc_101EBD7  +
mov eax offset aCbs_e_source_n +
jmp loc_101EBD7  +
mov eax offset aCbs_e_cannot_u +
jmp loc_101EBD7  +
mov eax offset aCbs_e_pending_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_stack_sh +
jmp loc_101EBD7  +
mov eax offset aCbs_e_insuffic +
jmp loc_101EBD7  +
mov eax offset aCbs_e_ac_power +
jmp loc_101EBD7  +
mov eax offset aCbs_e_stack_up +
jmp loc_101EBD7  +
mov eax offset aCbs_e_sqm_repo +
jmp loc_101EBD7  +
mov eax offset aCbs_e_dependen +
jmp loc_101EBD7  +
mov eax offset aCbs_e_pac_init +
jmp loc_101EBD7  +
mov eax offset aCbs_e_not_allo +
jmp loc_101EBD7  +
mov eax offset aCbs_e_exclusiv +
jmp loc_101EBD7  +
mov eax offset aCbs_e_image_un +
jmp loc_101EBD7  +
mov eax offset aCbs_e_session_ +
jmp loc_101EBD7  +
mov eax offset aCbs_e_sessio_0 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_sessio_1 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_sessio_2 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_unexpe_0 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_resolve_ +
jmp loc_101EBD7  +
mov ecx 800F0905h +
cmp eax ecx +
jg loc_101EB9A  +
jz loc_101EB93  +
cmp eax 800F0900h +
jz loc_101EB8C  +
cmp eax 800F0901h +
jz loc_101EB85  +
cmp eax 800F0902h +
jz loc_101EB7E  +
cmp eax 800F0903h +
jz loc_101EB77  +
cmp eax 800F0904h +
jnz loc_101EBB6  +
mov eax offset aCbs_e_more_tha +
jmp loc_101EBD7  +
mov eax offset aCbs_e_invali_5 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_busy +
jmp loc_101EBD7  +
mov eax offset aCbs_e_manife_5 +
jmp loc_101EBD7  +
mov eax offset aCbs_e_xml_pars +
jmp loc_101EBD7  +
mov eax offset aCbs_e_no_activ +
jmp loc_101EBD7  +
cmp eax 800F1000h +
jz loc_101EBD2  +
cmp eax 0F0801h +
jz loc_101EBCB  +
cmp eax 0F0802h +
jz loc_101EBC4  +
cmp eax 0F0803h +
jz loc_101EBBD  +
mov eax offset aUnknownError +
jmp loc_101EBD7  +
mov eax offset aCbs_s_stack_sh +
jmp loc_101EBD7  +
mov eax offset aCbs_s_already_ +
jmp loc_101EBD7  +
mov eax offset aCbs_s_busy +
jmp loc_101EBD7  +
mov eax offset aSpapi_e_error_ +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 800700F0h +
cmp eax ecx +
jg loc_101F568  +
jz loc_101F55E  +
add eax 7FF8FFFFh +
cmp eax 0E9h +
ja loc_1024AA3  +
jmp ds:off_1024AC8[eax*4]  +
mov eax offset aError_invalid_ +
jmp loc_1024AC4  +
mov eax offset aError_file_not +
jmp loc_1024AC4  +
mov eax offset aError_path_not +
jmp loc_1024AC4  +
mov eax offset aError_too_many +
jmp loc_1024AC4  +
mov eax offset aError_invali_0 +
jmp loc_1024AC4  +
mov eax offset aError_arena_tr +
jmp loc_1024AC4  +
mov eax offset aError_not_enou +
jmp loc_1024AC4  +
mov eax offset aError_invali_1 +
jmp loc_1024AC4  +
mov eax offset aError_bad_envi +
jmp loc_1024AC4  +
mov eax offset aError_bad_form +
jmp loc_1024AC4  +
mov eax offset aError_invali_2 +
jmp loc_1024AC4  +
mov eax offset aError_invali_3 +
jmp loc_1024AC4  +
mov eax offset aError_outofmem +
jmp loc_1024AC4  +
mov eax offset aError_invali_4 +
jmp loc_1024AC4  +
mov eax offset aError_current_ +
jmp loc_1024AC4  +
mov eax offset aError_not_same +
jmp loc_1024AC4  +
mov eax offset aError_no_more_ +
jmp loc_1024AC4  +
mov eax offset aError_write_pr +
jmp loc_1024AC4  +
mov eax offset aError_bad_unit +
jmp loc_1024AC4  +
mov eax offset aError_not_read +
jmp loc_1024AC4  +
mov eax offset aError_bad_comm +
jmp loc_1024AC4  +
mov eax offset aError_crc +
jmp loc_1024AC4  +
mov eax offset aError_bad_leng +
jmp loc_1024AC4  +
mov eax offset aError_seek +
jmp loc_1024AC4  +
mov eax offset aError_not_dos_ +
jmp loc_1024AC4  +
mov eax offset aError_sector_n +
jmp loc_1024AC4  +
mov eax offset aError_out_of_p +
jmp loc_1024AC4  +
mov eax offset aError_write_fa +
jmp loc_1024AC4  +
mov eax offset aError_read_fau +
jmp loc_1024AC4  +
mov eax offset aError_gen_fail +
jmp loc_1024AC4  +
mov eax offset aError_sharing_ +
jmp loc_1024AC4  +
mov eax offset aError_lock_vio +
jmp loc_1024AC4  +
mov eax offset aError_wrong_di +
jmp loc_1024AC4  +
mov eax offset aError_sharin_0 +
jmp loc_1024AC4  +
mov eax offset aError_handle_e +
jmp loc_1024AC4  +
mov eax offset aError_handle_d +
jmp loc_1024AC4  +
mov eax offset aError_not_supp +
jmp loc_1024AC4  +
mov eax offset aError_rem_not_ +
jmp loc_1024AC4  +
mov eax offset aError_dup_name +
jmp loc_1024AC4  +
mov eax offset aError_bad_netp +
jmp loc_1024AC4  +
mov eax offset aError_network_ +
jmp loc_1024AC4  +
mov eax offset aError_dev_not_ +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_0 +
jmp loc_1024AC4  +
mov eax offset aError_adap_hdw +
jmp loc_1024AC4  +
mov eax offset aError_bad_net_ +
jmp loc_1024AC4  +
mov eax offset aError_unexp_ne +
jmp loc_1024AC4  +
mov eax offset aError_bad_rem_ +
jmp loc_1024AC4  +
mov eax offset aError_printq_f +
jmp loc_1024AC4  +
mov eax offset aError_no_spool +
jmp loc_1024AC4  +
mov eax offset aError_print_ca +
jmp loc_1024AC4  +
mov eax offset aError_netname_ +
jmp loc_1024AC4  +
mov eax offset aError_networ_0 +
jmp loc_1024AC4  +
mov eax offset aError_bad_dev_ +
jmp loc_1024AC4  +
mov eax offset aError_bad_ne_0 +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_1 +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_2 +
jmp loc_1024AC4  +
mov eax offset aError_sharin_1 +
jmp loc_1024AC4  +
mov eax offset aError_req_not_ +
jmp loc_1024AC4  +
mov eax offset aError_redir_pa +
jmp loc_1024AC4  +
mov eax offset aError_file_exi +
jmp loc_1024AC4  +
mov eax offset aError_cannot_m +
jmp loc_1024AC4  +
mov eax offset aError_fail_i24 +
jmp loc_1024AC4  +
mov eax offset aError_out_of_s +
jmp loc_1024AC4  +
mov eax offset aError_already_ +
jmp loc_1024AC4  +
mov eax offset aError_invali_5 +
jmp loc_1024AC4  +
mov eax offset aError_invali_6 +
jmp loc_1024AC4  +
mov eax offset aError_net_writ +
jmp loc_1024AC4  +
mov eax offset aError_no_proc_ +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_3 +
jmp loc_1024AC4  +
mov eax offset aError_excl_sem +
jmp loc_1024AC4  +
mov eax offset aError_sem_is_s +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_4 +
jmp loc_1024AC4  +
mov eax offset aError_invali_7 +
jmp loc_1024AC4  +
mov eax offset aError_sem_owne +
jmp loc_1024AC4  +
mov eax offset aError_sem_user +
jmp loc_1024AC4  +
mov eax offset aError_disk_cha +
jmp loc_1024AC4  +
mov eax offset aError_drive_lo +
jmp loc_1024AC4  +
mov eax offset aError_broken_p +
jmp loc_1024AC4  +
mov eax offset aError_open_fai +
jmp loc_1024AC4  +
mov eax offset aError_buffer_o +
jmp loc_1024AC4  +
mov eax offset aError_disk_ful +
jmp loc_1024AC4  +
mov eax offset aError_no_mor_0 +
jmp loc_1024AC4  +
mov eax offset aError_invali_8 +
jmp loc_1024AC4  +
mov eax offset aError_invali_9 +
jmp loc_1024AC4  +
mov eax offset aError_inval_10 +
jmp loc_1024AC4  +
mov eax offset aError_bad_driv +
jmp loc_1024AC4  +
mov eax offset aError_call_not +
jmp loc_1024AC4  +
mov eax offset aError_sem_time +
jmp loc_1024AC4  +
mov eax offset aError_insuffic +
jmp loc_1024AC4  +
mov eax offset aError_inval_11 +
jmp loc_1024AC4  +
mov eax offset aError_inval_12 +
jmp loc_1024AC4  +
mov eax offset aError_no_volum +
jmp loc_1024AC4  +
mov eax offset aError_mod_not_ +
jmp loc_1024AC4  +
mov eax offset aError_proc_not +
jmp loc_1024AC4  +
mov eax offset aError_wait_no_ +
jmp loc_1024AC4  +
mov eax offset aError_child_no +
jmp loc_1024AC4  +
mov eax offset aError_direct_a +
jmp loc_1024AC4  +
mov eax offset aError_negative +
jmp loc_1024AC4  +
mov eax offset aError_seek_on_ +
jmp loc_1024AC4  +
mov eax offset aError_is_join_ +
jmp loc_1024AC4  +
mov eax offset aError_is_joine +
jmp loc_1024AC4  +
mov eax offset aError_is_subst +
jmp loc_1024AC4  +
mov eax offset aError_not_join +
jmp loc_1024AC4  +
mov eax offset aError_not_subs +
jmp loc_1024AC4  +
mov eax offset aError_join_to_ +
jmp loc_1024AC4  +
mov eax offset aError_subst_to +
jmp loc_1024AC4  +
mov eax offset aError_join_t_0 +
jmp loc_1024AC4  +
mov eax offset aError_subst__0 +
jmp loc_1024AC4  +
mov eax offset aError_busy_dri +
jmp loc_1024AC4  +
mov eax offset aError_same_dri +
jmp loc_1024AC4  +
mov eax offset aError_dir_not_ +
jmp loc_1024AC4  +
mov eax offset aError_dir_no_0 +
jmp loc_1024AC4  +
mov eax offset aError_is_sub_0 +
jmp loc_1024AC4  +
mov eax offset aError_is_joi_0 +
jmp loc_1024AC4  +
mov eax offset aError_path_bus +
jmp loc_1024AC4  +
mov eax offset aError_is_sub_1 +
jmp loc_1024AC4  +
mov eax offset aError_system_t +
jmp loc_1024AC4  +
mov eax offset aError_inval_13 +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_5 +
jmp loc_1024AC4  +
mov eax offset aError_inval_14 +
jmp loc_1024AC4  +
mov eax offset aError_label_to +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_6 +
jmp loc_1024AC4  +
mov eax offset aError_signal_r +
jmp loc_1024AC4  +
mov eax offset aError_discarde +
jmp loc_1024AC4  +
mov eax offset aError_not_lock +
jmp loc_1024AC4  +
mov eax offset aError_bad_thre +
jmp loc_1024AC4  +
mov eax offset aError_bad_argu +
jmp loc_1024AC4  +
mov eax offset aError_bad_path +
jmp loc_1024AC4  +
mov eax offset aError_signal_p +
jmp loc_1024AC4  +
mov eax offset aError_max_thrd +
jmp loc_1024AC4  +
mov eax offset aError_lock_fai +
jmp loc_1024AC4  +
mov eax offset aError_busy +
jmp loc_1024AC4  +
mov eax offset aError_cancel_v +
jmp loc_1024AC4  +
mov eax offset aError_atomic_l +
jmp loc_1024AC4  +
mov eax offset aError_inval_15 +
jmp loc_1024AC4  +
mov eax offset aError_inval_16 +
jmp loc_1024AC4  +
mov eax offset aError_alread_0 +
jmp loc_1024AC4  +
mov eax offset aError_inval_17 +
jmp loc_1024AC4  +
mov eax offset aError_sem_not_ +
jmp loc_1024AC4  +
mov eax offset aError_inval_18 +
jmp loc_1024AC4  +
mov eax offset aError_inval_19 +
jmp loc_1024AC4  +
mov eax offset aError_inval_20 +
jmp loc_1024AC4  +
mov eax offset aError_inval_21 +
jmp loc_1024AC4  +
mov eax offset aError_exe_mark +
jmp loc_1024AC4  +
mov eax offset aError_bad_exe_ +
jmp loc_1024AC4  +
mov eax offset aError_iterated +
jmp loc_1024AC4  +
mov eax offset aError_inval_22 +
jmp loc_1024AC4  +
mov eax offset aError_dynlink_ +
jmp loc_1024AC4  +
mov eax offset aError_iopl_not +
jmp loc_1024AC4  +
mov eax offset aError_inval_23 +
jmp loc_1024AC4  +
mov eax offset aError_autodata +
jmp loc_1024AC4  +
mov eax offset aError_ring2seg +
jmp loc_1024AC4  +
mov eax offset aError_reloc_ch +
jmp loc_1024AC4  +
mov eax offset aError_infloop_ +
jmp loc_1024AC4  +
mov eax offset aError_envvar_n +
jmp loc_1024AC4  +
mov eax offset aError_no_signa +
jmp loc_1024AC4  +
mov eax offset aError_filename +
jmp loc_1024AC4  +
mov eax offset aError_ring2_st +
jmp loc_1024AC4  +
mov eax offset aError_meta_exp +
jmp loc_1024AC4  +
mov eax offset aError_inval_24 +
jmp loc_1024AC4  +
mov eax offset aError_thread_1 +
jmp loc_1024AC4  +
mov eax offset aError_locked +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_7 +
jmp loc_1024AC4  +
mov eax offset aError_nesting_ +
jmp loc_1024AC4  +
mov eax offset aError_exe_mach +
jmp loc_1024AC4  +
mov eax offset aError_exe_cann +
jmp loc_1024AC4  +
mov eax offset aError_exe_ca_0 +
jmp loc_1024AC4  +
mov eax offset aError_file_che +
jmp loc_1024AC4  +
mov eax offset aError_checkout +
jmp loc_1024AC4  +
mov eax offset aError_bad_file +
jmp loc_1024AC4  +
mov eax offset aError_file_too +
jmp loc_1024AC4  +
mov eax offset aError_forms_au +
jmp loc_1024AC4  +
mov eax offset aError_virus_in +
jmp loc_1024AC4  +
mov eax offset aError_virus_de +
jmp loc_1024AC4  +
mov eax offset aError_pipe_loc +
jmp loc_1024AC4  +
mov eax offset aError_bad_pipe +
jmp loc_1024AC4  +
mov eax offset aError_pipe_bus +
jmp loc_1024AC4  +
mov eax offset aError_no_data +
jmp loc_1024AC4  +
mov eax offset aError_pipe_not +
jmp loc_1024AC4  +
mov eax offset aError_more_dat +
jmp loc_1024AC4  +
mov eax offset aError_vc_disco +
jmp loc_1024AC4  +
mov ecx 80071396h +
cmp eax ecx +
jg loc_10220CE  +
jz loc_10220C4  +
mov ecx 80070525h +
cmp eax ecx +
jg loc_10209E1  +
jz loc_10209D7  +
add eax 7FF8FF02h +
cmp eax 426h +
ja loc_1024AA3  +
jmp ds:off_1024E70[eax*4]  +
mov eax offset aError_inval_25 +
jmp loc_1024AC4  +
mov eax offset aError_ea_list_ +
jmp loc_1024AC4  +
mov eax offset aError_no_mor_1 +
jmp loc_1024AC4  +
mov eax offset aError_cannot_c +
jmp loc_1024AC4  +
mov eax offset aError_director +
jmp loc_1024AC4  +
mov eax offset aError_eas_didn +
jmp loc_1024AC4  +
mov eax offset aError_ea_file_ +
jmp loc_1024AC4  +
mov eax offset aError_ea_table +
jmp loc_1024AC4  +
mov eax offset aError_inval_26 +
jmp loc_1024AC4  +
mov eax offset aError_eas_not_ +
jmp loc_1024AC4  +
mov eax offset aError_not_owne +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_8 +
jmp loc_1024AC4  +
mov eax offset aError_partial_ +
jmp loc_1024AC4  +
mov eax offset aError_oplock_n +
jmp loc_1024AC4  +
mov eax offset aError_inval_27 +
jmp loc_1024AC4  +
mov eax offset aError_disk_too +
jmp loc_1024AC4  +
mov eax offset aError_delete_p +
jmp loc_1024AC4  +
mov eax offset aError_mr_mid_n +
jmp loc_1024AC4  +
mov eax offset aError_scope_no +
jmp loc_1024AC4  +
mov eax offset aError_fail_noa +
jmp loc_1024AC4  +
mov eax offset aError_fail_shu +
jmp loc_1024AC4  +
mov eax offset aError_fail_res +
jmp loc_1024AC4  +
mov eax offset aError_max_sess +
jmp loc_1024AC4  +
mov eax offset aError_thread_m +
jmp loc_1024AC4  +
mov eax offset aError_thread_0 +
jmp loc_1024AC4  +
mov eax offset aError_process_ +
jmp loc_1024AC4  +
mov eax offset aError_proces_0 +
jmp loc_1024AC4  +
mov eax offset aError_inval_28 +
jmp loc_1024AC4  +
mov eax offset aError_user_pro +
jmp loc_1024AC4  +
mov eax offset aError_arithmet +
jmp loc_1024AC4  +
mov eax offset aError_pipe_con +
jmp loc_1024AC4  +
mov eax offset aError_pipe_lis +
jmp loc_1024AC4  +
mov eax offset aError_verifier +
jmp loc_1024AC4  +
mov eax offset aError_abios_er +
jmp loc_1024AC4  +
mov eax offset aError_wx86_war +
jmp loc_1024AC4  +
mov eax offset aError_wx86_err +
jmp loc_1024AC4  +
mov eax offset aError_timer_no +
jmp loc_1024AC4  +
mov eax offset aError_unwind +
jmp loc_1024AC4  +
mov eax offset aError_bad_stac +
jmp loc_1024AC4  +
mov eax offset aError_inval_29 +
jmp loc_1024AC4  +
mov eax offset aError_inval_30 +
jmp loc_1024AC4  +
mov eax offset aError_port_mes +
jmp loc_1024AC4  +
mov eax offset aError_inval_31 +
jmp loc_1024AC4  +
mov eax offset aError_device_a +
jmp loc_1024AC4  +
mov eax offset aError_instruct +
jmp loc_1024AC4  +
mov eax offset aError_profilin +
jmp loc_1024AC4  +
mov eax offset aError_profil_0 +
jmp loc_1024AC4  +
mov eax offset aError_could_no +
jmp loc_1024AC4  +
mov eax offset aError_profil_1 +
jmp loc_1024AC4  +
mov eax offset aError_cant_wai +
jmp loc_1024AC4  +
mov eax offset aError_cant_ter +
jmp loc_1024AC4  +
mov eax offset aError_unexpect +
jmp loc_1024AC4  +
mov eax offset aError_unexpe_0 +
jmp loc_1024AC4  +
mov eax offset aError_unexpe_1 +
jmp loc_1024AC4  +
mov eax offset aError_bad_func +
jmp loc_1024AC4  +
mov eax offset aError_no_guid_ +
jmp loc_1024AC4  +
mov eax offset aError_inval_32 +
jmp loc_1024AC4  +
mov eax offset aError_inval_33 +
jmp loc_1024AC4  +
mov eax offset aError_inval_34 +
jmp loc_1024AC4  +
mov eax offset aError_too_ma_9 +
jmp loc_1024AC4  +
mov eax offset aError_thread_n +
jmp loc_1024AC4  +
mov eax offset aError_pagefile +
jmp loc_1024AC4  +
mov eax offset aError_logon_se +
jmp loc_1024AC4  +
mov eax offset aError_synchron +
jmp loc_1024AC4  +
mov eax offset aError_net_open +
jmp loc_1024AC4  +
mov eax offset aError_io_privi +
jmp loc_1024AC4  +
mov eax offset aError_control_ +
jmp loc_1024AC4  +
mov eax offset aError_missing_ +
jmp loc_1024AC4  +
mov eax offset aError_unhandle +
jmp loc_1024AC4  +
mov eax offset aError_app_init +
jmp loc_1024AC4  +
mov eax offset aError_pagefi_0 +
jmp loc_1024AC4  +
mov eax offset aError_inval_35 +
jmp loc_1024AC4  +
mov eax offset aError_no_pagef +
jmp loc_1024AC4  +
mov eax offset aError_illegal_ +
jmp loc_1024AC4  +
mov eax offset aError_no_event +
jmp loc_1024AC4  +
mov eax offset aError_domain_c +
jmp loc_1024AC4  +
mov eax offset aError_illega_0 +
jmp loc_1024AC4  +
mov eax offset aError_undefine +
jmp loc_1024AC4  +
mov eax offset aError_floppy_v +
jmp loc_1024AC4  +
mov eax offset aError_bios_fai +
jmp loc_1024AC4  +
mov eax offset aError_backup_c +
jmp loc_1024AC4  +
mov eax offset aError_mutant_l +
jmp loc_1024AC4  +
mov eax offset aError_fs_drive +
jmp loc_1024AC4  +
mov eax offset aError_cannot_l +
jmp loc_1024AC4  +
mov eax offset aError_debug_at +
jmp loc_1024AC4  +
mov eax offset aError_system_p +
jmp loc_1024AC4  +
mov eax offset aError_data_not +
jmp loc_1024AC4  +
mov eax offset aError_vdm_hard +
jmp loc_1024AC4  +
mov eax offset aError_driver_c +
jmp loc_1024AC4  +
mov eax offset aError_reply_me +
jmp loc_1024AC4  +
mov eax offset aError_lost_wri +
jmp loc_1024AC4  +
mov eax offset aError_client_s +
jmp loc_1024AC4  +
mov eax offset aError_not_tiny +
jmp loc_1024AC4  +
mov eax offset aError_stack_ov +
jmp loc_1024AC4  +
mov eax offset aError_convert_ +
jmp loc_1024AC4  +
mov eax offset aError_found_ou +
jmp loc_1024AC4  +
mov eax offset aError_allocate +
jmp loc_1024AC4  +
mov eax offset aError_marshall +
jmp loc_1024AC4  +
mov eax offset aError_inval_36 +
jmp loc_1024AC4  +
mov eax offset aError_bad_comp +
jmp loc_1024AC4  +
mov eax offset aError_audit_fa +
jmp loc_1024AC4  +
mov eax offset aError_timer_re +
jmp loc_1024AC4  +
mov eax offset aError_insuff_0 +
jmp loc_1024AC4  +
mov eax offset aError_bad_dll_ +
jmp loc_1024AC4  +
mov eax offset aError_bad_serv +
jmp loc_1024AC4  +
mov eax offset aError_ip_addre +
jmp loc_1024AC4  +
mov eax offset aError_ip_add_0 +
jmp loc_1024AC4  +
mov eax offset aError_registry +
jmp loc_1024AC4  +
mov eax offset aError_no_callb +
jmp loc_1024AC4  +
mov eax offset aError_pwd_too_ +
jmp loc_1024AC4  +
mov eax offset aError_pwd_to_0 +
jmp loc_1024AC4  +
mov eax offset aError_pwd_hist +
jmp loc_1024AC4  +
mov eax offset aError_unsuppor +
jmp loc_1024AC4  +
mov eax offset aError_inval_37 +
jmp loc_1024AC4  +
mov eax offset aError_inval_38 +
jmp loc_1024AC4  +
mov eax offset aError_quota_li +
jmp loc_1024AC4  +
mov eax offset aError_evaluati +
jmp loc_1024AC4  +
mov eax offset aError_illega_1 +
jmp loc_1024AC4  +
mov eax offset aError_dll_init +
jmp loc_1024AC4  +
mov eax offset aError_validate +
jmp loc_1024AC4  +
mov eax offset aError_no_mor_2 +
jmp loc_1024AC4  +
mov eax offset aError_range_li +
jmp loc_1024AC4  +
mov eax offset aError_server_s +
jmp loc_1024AC4  +
mov eax offset aError_cant_ena +
jmp loc_1024AC4  +
mov eax offset aError_float_mu +
jmp loc_1024AC4  +
mov eax offset aError_float__0 +
jmp loc_1024AC4  +
mov eax offset aError_nointerf +
jmp loc_1024AC4  +
mov eax offset aError_driver_f +
jmp loc_1024AC4  +
mov eax offset aError_corrupt_ +
jmp loc_1024AC4  +
mov eax offset aError_commitme +
jmp loc_1024AC4  +
mov eax offset aError_pnp_rest +
jmp loc_1024AC4  +
mov eax offset aError_system_i +
jmp loc_1024AC4  +
mov eax offset aError_pnp_rebo +
jmp loc_1024AC4  +
mov eax offset aError_insuff_1 +
jmp loc_1024AC4  +
mov eax offset aError_multiple +
jmp loc_1024AC4  +
mov eax offset aError_system_s +
jmp loc_1024AC4  +
mov eax offset aError_port_not +
jmp loc_1024AC4  +
mov eax offset aError_ds_versi +
jmp loc_1024AC4  +
mov eax offset aError_range_no +
jmp loc_1024AC4  +
mov eax offset aError_not_safe +
jmp loc_1024AC4  +
mov eax offset aError_failed_d +
jmp loc_1024AC4  +
mov eax offset aError_device_e +
jmp loc_1024AC4  +
mov eax offset aError_mount_po +
jmp loc_1024AC4  +
mov eax offset aError_inval_39 +
jmp loc_1024AC4  +
mov eax offset aError_mca_occu +
jmp loc_1024AC4  +
mov eax offset aError_driver_d +
jmp loc_1024AC4  +
mov eax offset aError_system_h +
jmp loc_1024AC4  +
mov eax offset aError_driver_0 +
jmp loc_1024AC4  +
mov eax offset aError_volsnap_ +
jmp loc_1024AC4  +
mov eax offset aError_hibernat +
jmp loc_1024AC4  +
mov eax offset aError_file_sys +
jmp loc_1024AC4  +
mov eax offset aError_assertio +
jmp loc_1024AC4  +
mov eax offset aError_acpi_err +
jmp loc_1024AC4  +
mov eax offset aError_wow_asse +
jmp loc_1024AC4  +
mov eax offset aError_pnp_bad_ +
jmp loc_1024AC4  +
mov eax offset aError_pnp_tran +
jmp loc_1024AC4  +
mov eax offset aError_pnp_irq_ +
jmp loc_1024AC4  +
mov eax offset aError_pnp_inva +
jmp loc_1024AC4  +
mov eax offset aError_wake_sys +
jmp loc_1024AC4  +
mov eax offset aError_handles_ +
jmp loc_1024AC4  +
mov eax offset aError_extraneo +
jmp loc_1024AC4  +
mov eax offset aError_rxact_co +
jmp loc_1024AC4  +
mov eax offset aError_media_ch +
jmp loc_1024AC4  +
mov eax offset aError_guid_sub +
jmp loc_1024AC4  +
mov eax offset aError_stopped_ +
jmp loc_1024AC4  +
mov eax offset aError_longjump +
jmp loc_1024AC4  +
mov eax offset aError_plugplay +
jmp loc_1024AC4  +
mov eax offset aError_unwind_c +
jmp loc_1024AC4  +
mov eax offset aError_regist_0 +
jmp loc_1024AC4  +
mov eax offset aError_dll_migh +
jmp loc_1024AC4  +
mov eax offset aError_dll_mi_0 +
jmp loc_1024AC4  +
mov eax offset aError_dbg_exce +
jmp loc_1024AC4  +
mov eax offset aError_dbg_repl +
jmp loc_1024AC4  +
mov eax offset aError_dbg_unab +
jmp loc_1024AC4  +
mov eax offset aError_dbg_term +
jmp loc_1024AC4  +
mov eax offset aError_dbg_te_0 +
jmp loc_1024AC4  +
mov eax offset aError_dbg_cont +
jmp loc_1024AC4  +
mov eax offset aError_dbg_prin +
jmp loc_1024AC4  +
mov eax offset aError_dbg_ripe +
jmp loc_1024AC4  +
mov eax offset aError_dbg_co_0 +
jmp loc_1024AC4  +
mov eax offset aError_dbg_comm +
jmp loc_1024AC4  +
mov eax offset aError_object_n +
jmp loc_1024AC4  +
mov eax offset aError_thread_w +
jmp loc_1024AC4  +
mov eax offset aError_image_no +
jmp loc_1024AC4  +
mov eax offset aError_rxact_st +
jmp loc_1024AC4  +
mov eax offset aError_segment_ +
jmp loc_1024AC4  +
mov eax offset aError_bad_curr +
jmp loc_1024AC4  +
mov eax offset aError_ft_read_ +
jmp loc_1024AC4  +
mov eax offset aError_ft_write +
jmp loc_1024AC4  +
mov eax offset aError_image_ma +
jmp loc_1024AC4  +
mov eax offset aError_receive_ +
jmp loc_1024AC4  +
mov eax offset aError_receiv_0 +
jmp loc_1024AC4  +
mov eax offset aError_receiv_1 +
jmp loc_1024AC4  +
mov eax offset aError_event_do +
jmp loc_1024AC4  +
mov eax offset aError_event_pe +
jmp loc_1024AC4  +
mov eax offset aError_checking +
jmp loc_1024AC4  +
mov eax offset aError_fatal_ap +
jmp loc_1024AC4  +
mov eax offset aError_predefin +
jmp loc_1024AC4  +
mov eax offset aError_was_unlo +
jmp loc_1024AC4  +
mov eax offset aError_service_ +
jmp loc_1024AC4  +
mov eax offset aError_was_lock +
jmp loc_1024AC4  +
mov eax offset aError_log_hard +
jmp loc_1024AC4  +
mov eax offset aError_alread_1 +
jmp loc_1024AC4  +
mov eax offset aError_image__0 +
jmp loc_1024AC4  +
mov eax offset aError_no_yield +
jmp loc_1024AC4  +
mov eax offset aError_timer__0 +
jmp loc_1024AC4  +
mov eax offset aError_arbitrat +
jmp loc_1024AC4  +
mov eax offset aError_cardbus_ +
jmp loc_1024AC4  +
mov eax offset aError_mp_proce +
jmp loc_1024AC4  +
mov eax offset aError_hibern_0 +
jmp loc_1024AC4  +
mov eax offset aError_resume_h +
jmp loc_1024AC4  +
mov eax offset aError_firmware +
jmp loc_1024AC4  +
mov eax offset aError_drivers_ +
jmp loc_1024AC4  +
mov eax offset aError_wake_s_0 +
jmp loc_1024AC4  +
mov eax offset aError_wait_1 +
jmp loc_1024AC4  +
mov eax offset aError_wait_2 +
jmp loc_1024AC4  +
mov eax offset aError_wait_3 +
jmp loc_1024AC4  +
mov eax offset aError_wait_63 +
jmp loc_1024AC4  +
mov eax offset aError_abandone +
jmp loc_1024AC4  +
mov eax offset aError_abando_0 +
jmp loc_1024AC4  +
mov eax offset aError_user_apc +
jmp loc_1024AC4  +
mov eax offset aError_kernel_a +
jmp loc_1024AC4  +
mov eax offset aError_alerted +
jmp loc_1024AC4  +
mov eax offset aError_elevatio +
jmp loc_1024AC4  +
mov eax offset aError_reparse +
jmp loc_1024AC4  +
mov eax offset aError_oplock_b +
jmp loc_1024AC4  +
mov eax offset aError_volume_m +
jmp loc_1024AC4  +
mov eax offset aError_rxact__0 +
jmp loc_1024AC4  +
mov eax offset aError_notify_c +
jmp loc_1024AC4  +
mov eax offset aError_primary_ +
jmp loc_1024AC4  +
mov eax offset aError_page_fau +
jmp loc_1024AC4  +
mov eax offset aError_page_f_0 +
jmp loc_1024AC4  +
mov eax offset aError_page_f_1 +
jmp loc_1024AC4  +
mov eax offset aError_page_f_2 +
jmp loc_1024AC4  +
mov eax offset aError_page_f_3 +
jmp loc_1024AC4  +
mov eax offset aError_cache_pa +
jmp loc_1024AC4  +
mov eax offset aError_crash_du +
jmp loc_1024AC4  +
mov eax offset aError_buffer_a +
jmp loc_1024AC4  +
mov eax offset aError_reparse_ +
jmp loc_1024AC4  +
mov eax offset aError_resource +
jmp loc_1024AC4  +
mov eax offset aError_translat +
jmp loc_1024AC4  +
mov eax offset aError_nothing_ +
jmp loc_1024AC4  +
mov eax offset aError_proces_1 +
jmp loc_1024AC4  +
mov eax offset aError_proces_2 +
jmp loc_1024AC4  +
mov eax offset aError_volsna_0 +
jmp loc_1024AC4  +
mov eax offset aError_fsfilter +
jmp loc_1024AC4  +
mov eax offset aError_interrup +
jmp loc_1024AC4  +
mov eax offset aError_interr_0 +
jmp loc_1024AC4  +
mov eax offset aError_wait_for +
jmp loc_1024AC4  +
mov eax offset aError_dbg_ex_0 +
jmp loc_1024AC4  +
mov eax offset aError_dbg_co_1 +
jmp loc_1024AC4  +
mov eax offset aError_callback +
jmp loc_1024AC4  +
mov eax offset aError_compress +
jmp loc_1024AC4  +
mov eax offset aError_cantfetc +
jmp loc_1024AC4  +
mov eax offset aError_cantscro +
jmp loc_1024AC4  +
mov eax offset aError_rowsnotr +
jmp loc_1024AC4  +
mov eax offset aError_bad_acce +
jmp loc_1024AC4  +
mov eax offset aError_errors_e +
jmp loc_1024AC4  +
mov eax offset aError_not_capa +
jmp loc_1024AC4  +
mov eax offset aError_request_ +
jmp loc_1024AC4  +
mov eax offset aError_version_ +
jmp loc_1024AC4  +
mov eax offset aError_badstart +
jmp loc_1024AC4  +
mov eax offset aError_memory_h +
jmp loc_1024AC4  +
mov eax offset aError_disk_rep +
jmp loc_1024AC4  +
mov eax offset aError_insuff_2 +
jmp loc_1024AC4  +
mov eax offset aError_system_0 +
jmp loc_1024AC4  +
mov eax offset aError_system_1 +
jmp loc_1024AC4  +
mov eax offset aError_mca_exce +
jmp loc_1024AC4  +
mov eax offset aError_access_a +
jmp loc_1024AC4  +
mov eax offset aError_access_d +
jmp loc_1024AC4  +
mov eax offset aError_abandon_ +
jmp loc_1024AC4  +
mov eax offset aError_lost_w_0 +
jmp loc_1024AC4  +
mov eax offset aError_lost_w_1 +
jmp loc_1024AC4  +
mov eax offset aError_lost_w_2 +
jmp loc_1024AC4  +
mov eax offset aError_bad_mcfg +
jmp loc_1024AC4  +
mov eax offset aError_ea_acces +
jmp loc_1024AC4  +
mov eax offset aError_operatio +
jmp loc_1024AC4  +
mov eax offset aError_io_incom +
jmp loc_1024AC4  +
mov eax offset aError_io_pendi +
jmp loc_1024AC4  +
mov eax offset aError_noaccess +
jmp loc_1024AC4  +
mov eax offset aError_swaperro +
jmp loc_1024AC4  +
mov eax offset aError_stack__0 +
jmp loc_1024AC4  +
mov eax offset aError_inval_40 +
jmp loc_1024AC4  +
mov eax offset aError_can_not_ +
jmp loc_1024AC4  +
mov eax offset aError_inval_41 +
jmp loc_1024AC4  +
mov eax offset aError_unrecogn +
jmp loc_1024AC4  +
mov eax offset aError_file_inv +
jmp loc_1024AC4  +
mov eax offset aError_fullscre +
jmp loc_1024AC4  +
mov eax offset aError_no_token +
jmp loc_1024AC4  +
mov eax offset aError_baddb +
jmp loc_1024AC4  +
mov eax offset aError_badkey +
jmp loc_1024AC4  +
mov eax offset aError_cantopen +
jmp loc_1024AC4  +
mov eax offset aError_cantread +
jmp loc_1024AC4  +
mov eax offset aError_cantwrit +
jmp loc_1024AC4  +
mov eax offset aError_regist_1 +
jmp loc_1024AC4  +
mov eax offset aError_regist_2 +
jmp loc_1024AC4  +
mov eax offset aError_regist_3 +
jmp loc_1024AC4  +
mov eax offset aError_not_regi +
jmp loc_1024AC4  +
mov eax offset aError_key_dele +
jmp loc_1024AC4  +
mov eax offset aError_no_log_s +
jmp loc_1024AC4  +
mov eax offset aError_key_has_ +
jmp loc_1024AC4  +
mov eax offset aError_child_mu +
jmp loc_1024AC4  +
mov eax offset aError_notify_e +
jmp loc_1024AC4  +
mov eax offset aError_dependen +
jmp loc_1024AC4  +
mov eax offset aError_inval_42 +
jmp loc_1024AC4  +
mov eax offset aError_servic_0 +
jmp loc_1024AC4  +
mov eax offset aError_servic_1 +
jmp loc_1024AC4  +
mov eax offset aError_servic_2 +
jmp loc_1024AC4  +
mov eax offset aError_servic_3 +
jmp loc_1024AC4  +
mov eax offset aError_inval_43 +
jmp loc_1024AC4  +
mov eax offset aError_servic_4 +
jmp loc_1024AC4  +
mov eax offset aError_circular +
jmp loc_1024AC4  +
mov eax offset aError_servic_5 +
jmp loc_1024AC4  +
mov eax offset aError_servic_6 +
jmp loc_1024AC4  +
mov eax offset aError_servic_7 +
jmp loc_1024AC4  +
mov eax offset aError_failed_s +
jmp loc_1024AC4  +
mov eax offset aError_exceptio +
jmp loc_1024AC4  +
mov eax offset aError_database +
jmp loc_1024AC4  +
mov eax offset aError_servic_8 +
jmp loc_1024AC4  +
mov eax offset aError_proces_3 +
jmp loc_1024AC4  +
mov eax offset aError_servic_9 +
jmp loc_1024AC4  +
mov eax offset aError_servi_10 +
jmp loc_1024AC4  +
mov eax offset aError_servi_11 +
jmp loc_1024AC4  +
mov eax offset aError_inval_44 +
jmp loc_1024AC4  +
mov eax offset aError_servi_12 +
jmp loc_1024AC4  +
mov eax offset aError_servi_13 +
jmp loc_1024AC4  +
mov eax offset aError_alread_2 +
jmp loc_1024AC4  +
mov eax offset aError_servi_14 +
jmp loc_1024AC4  +
mov eax offset aError_boot_alr +
jmp loc_1024AC4  +
mov eax offset aError_servi_15 +
jmp loc_1024AC4  +
mov eax offset aError_duplicat +
jmp loc_1024AC4  +
mov eax offset aError_differen +
jmp loc_1024AC4  +
mov eax offset aError_cannot_d +
jmp loc_1024AC4  +
mov eax offset aError_cannot_0 +
jmp loc_1024AC4  +
mov eax offset aError_no_recov +
jmp loc_1024AC4  +
mov eax offset aError_servi_16 +
jmp loc_1024AC4  +
mov eax offset aError_not_sa_0 +
jmp loc_1024AC4  +
mov eax offset aError_end_of_m +
jmp loc_1024AC4  +
mov eax offset aError_filemark +
jmp loc_1024AC4  +
mov eax offset aError_beginnin +
jmp loc_1024AC4  +
mov eax offset aError_setmark_ +
jmp loc_1024AC4  +
mov eax offset aError_no_data_ +
jmp loc_1024AC4  +
mov eax offset aError_partitio +
jmp loc_1024AC4  +
mov eax offset aError_inval_45 +
jmp loc_1024AC4  +
mov eax offset aError_device_n +
jmp loc_1024AC4  +
mov eax offset aError_unable_t +
jmp loc_1024AC4  +
mov eax offset aError_unable_0 +
jmp loc_1024AC4  +
mov eax offset aError_media__0 +
jmp loc_1024AC4  +
mov eax offset aError_bus_rese +
jmp loc_1024AC4  +
mov eax offset aError_no_media +
jmp loc_1024AC4  +
mov eax offset aError_no_unico +
jmp loc_1024AC4  +
mov eax offset aError_dll_in_0 +
jmp loc_1024AC4  +
mov eax offset aError_shutdown +
jmp loc_1024AC4  +
mov eax offset aError_no_shutd +
jmp loc_1024AC4  +
mov eax offset aError_io_devic +
jmp loc_1024AC4  +
mov eax offset aError_serial_n +
jmp loc_1024AC4  +
mov eax offset aError_irq_busy +
jmp loc_1024AC4  +
mov eax offset aError_more_wri +
jmp loc_1024AC4  +
mov eax offset aError_counter_ +
jmp loc_1024AC4  +
mov eax offset aError_floppy_i +
jmp loc_1024AC4  +
mov eax offset aError_floppy_w +
jmp loc_1024AC4  +
mov eax offset aError_floppy_u +
jmp loc_1024AC4  +
mov eax offset aError_floppy_b +
jmp loc_1024AC4  +
mov eax offset aError_disk_rec +
jmp loc_1024AC4  +
mov eax offset aError_disk_ope +
jmp loc_1024AC4  +
mov eax offset aError_disk_res +
jmp loc_1024AC4  +
mov eax offset aError_eom_over +
jmp loc_1024AC4  +
mov eax offset aError_not_en_0 +
jmp loc_1024AC4  +
mov eax offset aError_possible +
jmp loc_1024AC4  +
mov eax offset aError_mapped_a +
jmp loc_1024AC4  +
mov eax offset aError_set_powe +
jmp loc_1024AC4  +
mov eax offset aError_set_po_0 +
jmp loc_1024AC4  +
mov eax offset aError_too_m_10 +
jmp loc_1024AC4  +
mov eax offset aError_old_win_ +
jmp loc_1024AC4  +
mov eax offset aError_app_wron +
jmp loc_1024AC4  +
mov eax offset aError_single_i +
jmp loc_1024AC4  +
mov eax offset aError_rmode_ap +
jmp loc_1024AC4  +
mov eax offset aError_inval_46 +
jmp loc_1024AC4  +
mov eax offset aError_no_assoc +
jmp loc_1024AC4  +
mov eax offset aError_dde_fail +
jmp loc_1024AC4  +
mov eax offset aError_dll_not_ +
jmp loc_1024AC4  +
mov eax offset aError_no_mor_3 +
jmp loc_1024AC4  +
mov eax offset aError_message_ +
jmp loc_1024AC4  +
mov eax offset aError_source_e +
jmp loc_1024AC4  +
mov eax offset aError_destinat +
jmp loc_1024AC4  +
mov eax offset aError_illega_2 +
jmp loc_1024AC4  +
mov eax offset aError_magazine +
jmp loc_1024AC4  +
mov eax offset aError_device_r +
jmp loc_1024AC4  +
mov eax offset aError_device_0 +
jmp loc_1024AC4  +
mov eax offset aError_device_d +
jmp loc_1024AC4  +
mov eax offset aError_device_1 +
jmp loc_1024AC4  +
mov eax offset aError_not_foun +
jmp loc_1024AC4  +
mov eax offset aError_no_match +
jmp loc_1024AC4  +
mov eax offset aError_set_not_ +
jmp loc_1024AC4  +
mov eax offset aError_point_no +
jmp loc_1024AC4  +
mov eax offset aError_no_track +
jmp loc_1024AC4  +
mov eax offset aError_no_vol_0 +
jmp loc_1024AC4  +
mov eax offset aError_unable_1 +
jmp loc_1024AC4  +
mov eax offset aError_unable_2 +
jmp loc_1024AC4  +
mov eax offset aError_unable_3 +
jmp loc_1024AC4  +
mov eax offset aError_journal_ +
jmp loc_1024AC4  +
mov eax offset aError_journa_0 +
jmp loc_1024AC4  +
mov eax offset aError_potentia +
jmp loc_1024AC4  +
mov eax offset aError_journa_1 +
jmp loc_1024AC4  +
mov eax offset aError_shutdo_0 +
jmp loc_1024AC4  +
mov eax offset aError_shutdo_1 +
jmp loc_1024AC4  +
mov eax offset aError_bad_devi +
jmp loc_1024AC4  +
mov eax offset aError_connecti +
jmp loc_1024AC4  +
mov eax offset aError_device_2 +
jmp loc_1024AC4  +
mov eax offset aError_no_net_o +
jmp loc_1024AC4  +
mov eax offset aError_bad_prov +
jmp loc_1024AC4  +
mov eax offset aError_cannot_o +
jmp loc_1024AC4  +
mov eax offset aError_bad_prof +
jmp loc_1024AC4  +
mov eax offset aError_not_cont +
jmp loc_1024AC4  +
mov eax offset aError_extended +
jmp loc_1024AC4  +
mov eax offset aError_inval_47 +
jmp loc_1024AC4  +
mov eax offset aError_inval_48 +
jmp loc_1024AC4  +
mov eax offset aError_inval_49 +
jmp loc_1024AC4  +
mov eax offset aError_inval_50 +
jmp loc_1024AC4  +
mov eax offset aError_inval_51 +
jmp loc_1024AC4  +
mov eax offset aError_inval_52 +
jmp loc_1024AC4  +
mov eax offset aError_inval_53 +
jmp loc_1024AC4  +
mov eax offset aError_inval_54 +
jmp loc_1024AC4  +
mov eax offset aError_inval_55 +
jmp loc_1024AC4  +
mov eax offset aError_inval_56 +
jmp loc_1024AC4  +
mov eax offset aError_session_ +
jmp loc_1024AC4  +
mov eax offset aError_remote_s +
jmp loc_1024AC4  +
mov eax offset aError_dup_doma +
jmp loc_1024AC4  +
mov eax offset aError_no_netwo +
jmp loc_1024AC4  +
mov eax offset aError_cancelle +
jmp loc_1024AC4  +
mov eax offset aError_user_map +
jmp loc_1024AC4  +
mov eax offset aError_connec_0 +
jmp loc_1024AC4  +
mov eax offset aError_graceful +
jmp loc_1024AC4  +
mov eax offset aError_address_ +
jmp loc_1024AC4  +
mov eax offset aError_addres_0 +
jmp loc_1024AC4  +
mov eax offset aError_connec_1 +
jmp loc_1024AC4  +
mov eax offset aError_connec_2 +
jmp loc_1024AC4  +
mov eax offset aError_networ_1 +
jmp loc_1024AC4  +
mov eax offset aError_host_unr +
jmp loc_1024AC4  +
mov eax offset aError_protocol +
jmp loc_1024AC4  +
mov eax offset aError_port_unr +
jmp loc_1024AC4  +
mov eax offset aError_reques_0 +
jmp loc_1024AC4  +
mov eax offset aError_connec_3 +
jmp loc_1024AC4  +
mov eax offset aError_retry +
jmp loc_1024AC4  +
mov eax offset aError_connec_4 +
jmp loc_1024AC4  +
mov eax offset aError_login_ti +
jmp loc_1024AC4  +
mov eax offset aError_login_wk +
jmp loc_1024AC4  +
mov eax offset aError_incorrec +
jmp loc_1024AC4  +
mov eax offset aError_alread_3 +
jmp loc_1024AC4  +
mov eax offset aError_servi_17 +
jmp loc_1024AC4  +
mov eax offset aError_not_auth +
jmp loc_1024AC4  +
mov eax offset aError_not_logg +
jmp loc_1024AC4  +
mov eax offset aError_continue +
jmp loc_1024AC4  +
mov eax offset aError_alread_4 +
jmp loc_1024AC4  +
mov eax offset aError_no_mor_4 +
jmp loc_1024AC4  +
mov eax offset aError_no_such_ +
jmp loc_1024AC4  +
mov eax offset aError_domain_0 +
jmp loc_1024AC4  +
mov eax offset aError_only_if_ +
jmp loc_1024AC4  +
mov eax offset aError_override +
jmp loc_1024AC4  +
mov eax offset aError_bad_user +
jmp loc_1024AC4  +
mov eax offset aError_not_su_0 +
jmp loc_1024AC4  +
mov eax offset aError_server_0 +
jmp loc_1024AC4  +
mov eax offset aError_host_dow +
jmp loc_1024AC4  +
mov eax offset aError_non_acco +
jmp loc_1024AC4  +
mov eax offset aError_non_doma +
jmp loc_1024AC4  +
mov eax offset aError_apphelp_ +
jmp loc_1024AC4  +
mov eax offset aError_access_0 +
jmp loc_1024AC4  +
mov eax offset aError_reg_nat_ +
jmp loc_1024AC4  +
mov eax offset aError_cscshare +
jmp loc_1024AC4  +
mov eax offset aError_pkinit_f +
jmp loc_1024AC4  +
mov eax offset aError_smartcar +
jmp loc_1024AC4  +
mov eax offset aError_downgrad +
jmp loc_1024AC4  +
mov eax offset aError_machine_ +
jmp loc_1024AC4  +
mov eax offset aError_callba_0 +
jmp loc_1024AC4  +
mov eax offset aError_sync_for +
jmp loc_1024AC4  +
mov eax offset aError_driver_b +
jmp loc_1024AC4  +
mov eax offset aError_inval_57 +
jmp loc_1024AC4  +
mov eax offset aError_access_1 +
jmp loc_1024AC4  +
mov eax offset aError_access_2 +
jmp loc_1024AC4  +
mov eax offset aError_recovery +
jmp loc_1024AC4  +
mov eax offset aError_alread_5 +
jmp loc_1024AC4  +
mov eax offset aError_alread_6 +
jmp loc_1024AC4  +
mov eax offset aError_stack_bu +
jmp loc_1024AC4  +
mov eax offset aError_paramete +
jmp loc_1024AC4  +
mov eax offset aError_debugger +
jmp loc_1024AC4  +
mov eax offset aError_delay_lo +
jmp loc_1024AC4  +
mov eax offset aError_vdm_disa +
jmp loc_1024AC4  +
mov eax offset aError_unidenti +
jmp loc_1024AC4  +
mov eax offset aError_inval_58 +
jmp loc_1024AC4  +
mov eax offset aError_beyond_v +
jmp loc_1024AC4  +
mov eax offset aError_incompat +
jmp loc_1024AC4  +
mov eax offset aError_driver_p +
jmp loc_1024AC4  +
mov eax offset aError_implemen +
jmp loc_1024AC4  +
mov eax offset aError_proces_4 +
jmp loc_1024AC4  +
mov eax offset aError_servi_18 +
jmp loc_1024AC4  +
mov eax offset aError_disk_quo +
jmp loc_1024AC4  +
mov eax offset aError_content_ +
jmp loc_1024AC4  +
mov eax offset aError_incomp_0 +
jmp loc_1024AC4  +
mov eax offset aError_app_hang +
jmp loc_1024AC4  +
mov eax offset aError_inval_59 +
jmp loc_1024AC4  +
mov eax offset aError_not_all_ +
jmp loc_1024AC4  +
mov eax offset aError_some_not +
jmp loc_1024AC4  +
mov eax offset aError_no_quota +
jmp loc_1024AC4  +
mov eax offset aError_local_us +
jmp loc_1024AC4  +
mov eax offset aError_null_lm_ +
jmp loc_1024AC4  +
mov eax offset aError_unknown_ +
jmp loc_1024AC4  +
mov eax offset aError_revision +
jmp loc_1024AC4  +
mov eax offset aError_inval_60 +
jmp loc_1024AC4  +
mov eax offset aError_inval_61 +
jmp loc_1024AC4  +
mov eax offset aError_no_imper +
jmp loc_1024AC4  +
mov eax offset aError_cant_dis +
jmp loc_1024AC4  +
mov eax offset aError_no_logon +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_0 +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_1 +
jmp loc_1024AC4  +
mov eax offset aError_privileg +
jmp loc_1024AC4  +
mov eax offset aError_inval_62 +
jmp loc_1024AC4  +
mov eax offset aError_user_exi +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_2 +
jmp loc_1024AC4  +
mov ecx 800708CAh +
cmp eax ecx +
jg loc_1021997  +
jz loc_102198D  +
add eax 7FF8FADAh +
cmp eax 374h +
ja loc_1024AA3  +
jmp ds:off_1025F0C[eax*4]  +
mov eax offset aError_group_ex +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_3 +
jmp loc_1024AC4  +
mov eax offset aError_member_i +
jmp loc_1024AC4  +
mov eax offset aError_member_n +
jmp loc_1024AC4  +
mov eax offset aError_last_adm +
jmp loc_1024AC4  +
mov eax offset aError_wrong_pa +
jmp loc_1024AC4  +
mov eax offset aError_ill_form +
jmp loc_1024AC4  +
mov eax offset aError_password +
jmp loc_1024AC4  +
mov eax offset aError_logon_fa +
jmp loc_1024AC4  +
mov eax offset aError_account_ +
jmp loc_1024AC4  +
mov eax offset aError_inval_63 +
jmp loc_1024AC4  +
mov eax offset aError_inval_64 +
jmp loc_1024AC4  +
mov eax offset aError_passwo_0 +
jmp loc_1024AC4  +
mov eax offset aError_accoun_0 +
jmp loc_1024AC4  +
mov eax offset aError_none_map +
jmp loc_1024AC4  +
mov eax offset aError_too_m_11 +
jmp loc_1024AC4  +
mov eax offset aError_luids_ex +
jmp loc_1024AC4  +
mov eax offset aError_inval_65 +
jmp loc_1024AC4  +
mov eax offset aError_inval_66 +
jmp loc_1024AC4  +
mov eax offset aError_inval_67 +
jmp loc_1024AC4  +
mov eax offset aError_inval_68 +
jmp loc_1024AC4  +
mov eax offset aError_bad_inhe +
jmp loc_1024AC4  +
mov eax offset aError_server_d +
jmp loc_1024AC4  +
mov eax offset aError_server_n +
jmp loc_1024AC4  +
mov eax offset aError_inval_69 +
jmp loc_1024AC4  +
mov eax offset aError_allotted +
jmp loc_1024AC4  +
mov eax offset aError_inval_70 +
jmp loc_1024AC4  +
mov eax offset aError_bad_impe +
jmp loc_1024AC4  +
mov eax offset aError_cant_ope +
jmp loc_1024AC4  +
mov eax offset aError_bad_vali +
jmp loc_1024AC4  +
mov eax offset aError_bad_toke +
jmp loc_1024AC4  +
mov eax offset aError_no_secur +
jmp loc_1024AC4  +
mov eax offset aError_cant_acc +
jmp loc_1024AC4  +
mov eax offset aError_inval_71 +
jmp loc_1024AC4  +
mov eax offset aError_inval_72 +
jmp loc_1024AC4  +
mov eax offset aError_inval_73 +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_4 +
jmp loc_1024AC4  +
mov eax offset aError_domain_e +
jmp loc_1024AC4  +
mov eax offset aError_domain_l +
jmp loc_1024AC4  +
mov eax offset aError_internal +
jmp loc_1024AC4  +
mov eax offset aError_intern_0 +
jmp loc_1024AC4  +
mov eax offset aError_generic_ +
jmp loc_1024AC4  +
mov eax offset aError_bad_desc +
jmp loc_1024AC4  +
mov eax offset aError_not_logo +
jmp loc_1024AC4  +
mov eax offset aError_logon__0 +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_5 +
jmp loc_1024AC4  +
mov eax offset aError_bad_logo +
jmp loc_1024AC4  +
mov eax offset aError_logon__1 +
jmp loc_1024AC4  +
mov eax offset aError_inval_74 +
jmp loc_1024AC4  +
mov eax offset aError_cannot_i +
jmp loc_1024AC4  +
mov eax offset aError_rxact_in +
jmp loc_1024AC4  +
mov eax offset aError_rxact__1 +
jmp loc_1024AC4  +
mov eax offset aError_special_ +
jmp loc_1024AC4  +
mov eax offset aError_specia_0 +
jmp loc_1024AC4  +
mov eax offset aError_specia_1 +
jmp loc_1024AC4  +
mov eax offset aError_members_ +
jmp loc_1024AC4  +
mov eax offset aError_token_al +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_6 +
jmp loc_1024AC4  +
mov eax offset aError_member_0 +
jmp loc_1024AC4  +
mov eax offset aError_member_1 +
jmp loc_1024AC4  +
mov eax offset aError_alias_ex +
jmp loc_1024AC4  +
mov eax offset aError_logon_no +
jmp loc_1024AC4  +
mov eax offset aError_too_m_12 +
jmp loc_1024AC4  +
mov eax offset aError_secret_t +
jmp loc_1024AC4  +
mov eax offset aError_intern_1 +
jmp loc_1024AC4  +
mov eax offset aError_too_m_13 +
jmp loc_1024AC4  +
mov eax offset aError_logon_ty +
jmp loc_1024AC4  +
mov eax offset aError_nt_cross +
jmp loc_1024AC4  +
mov eax offset aError_no_suc_7 +
jmp loc_1024AC4  +
mov eax offset aError_inval_75 +
jmp loc_1024AC4  +
mov eax offset aError_too_m_14 +
jmp loc_1024AC4  +
mov eax offset aError_lm_cross +
jmp loc_1024AC4  +
mov eax offset aError_no_inher +
jmp loc_1024AC4  +
mov eax offset aError_file_cor +
jmp loc_1024AC4  +
mov eax offset aError_disk_cor +
jmp loc_1024AC4  +
mov eax offset aError_no_user_ +
jmp loc_1024AC4  +
mov eax offset aError_license_ +
jmp loc_1024AC4  +
mov eax offset aError_wrong_ta +
jmp loc_1024AC4  +
mov eax offset aError_mutual_a +
jmp loc_1024AC4  +
mov eax offset aError_time_ske +
jmp loc_1024AC4  +
mov eax offset aError_curren_0 +
jmp loc_1024AC4  +
mov eax offset aError_inval_76 +
jmp loc_1024AC4  +
mov eax offset aError_inval_77 +
jmp loc_1024AC4  +
mov eax offset aError_inval_78 +
jmp loc_1024AC4  +
mov eax offset aError_inval_79 +
jmp loc_1024AC4  +
mov eax offset aError_inval_80 +
jmp loc_1024AC4  +
mov eax offset aError_inval_81 +
jmp loc_1024AC4  +
mov eax offset aError_tlw_with +
jmp loc_1024AC4  +
mov eax offset aError_cannot_f +
jmp loc_1024AC4  +
mov eax offset aError_window_o +
jmp loc_1024AC4  +
mov eax offset aError_hotkey_a +
jmp loc_1024AC4  +
mov eax offset aError_class_al +
jmp loc_1024AC4  +
mov eax offset aError_class_do +
jmp loc_1024AC4  +
mov eax offset aError_class_ha +
jmp loc_1024AC4  +
mov eax offset aError_inval_82 +
jmp loc_1024AC4  +
mov eax offset aError_inval_83 +
jmp loc_1024AC4  +
mov eax offset aError_private_ +
jmp loc_1024AC4  +
mov eax offset aError_listbox_ +
jmp loc_1024AC4  +
mov eax offset aError_no_wildc +
jmp loc_1024AC4  +
mov eax offset aError_clipboar +
jmp loc_1024AC4  +
mov eax offset aError_hotkey_n +
jmp loc_1024AC4  +
mov eax offset aError_window_n +
jmp loc_1024AC4  +
mov eax offset aError_contro_0 +
jmp loc_1024AC4  +
mov eax offset aError_inval_84 +
jmp loc_1024AC4  +
mov eax offset aError_window_0 +
jmp loc_1024AC4  +
mov eax offset aError_inval_85 +
jmp loc_1024AC4  +
mov eax offset aError_dc_not_f +
jmp loc_1024AC4  +
mov eax offset aError_inval_86 +
jmp loc_1024AC4  +
mov eax offset aError_inval_87 +
jmp loc_1024AC4  +
mov eax offset aError_hook_nee +
jmp loc_1024AC4  +
mov eax offset aError_global_o +
jmp loc_1024AC4  +
mov eax offset aError_journa_2 +
jmp loc_1024AC4  +
mov eax offset aError_hook_not +
jmp loc_1024AC4  +
mov eax offset aError_inval_88 +
jmp loc_1024AC4  +
mov eax offset aError_setcount +
jmp loc_1024AC4  +
mov eax offset aError_lb_witho +
jmp loc_1024AC4  +
mov eax offset aError_destroy_ +
jmp loc_1024AC4  +
mov eax offset aError_child_wi +
jmp loc_1024AC4  +
mov eax offset aError_no_syste +
jmp loc_1024AC4  +
mov eax offset aError_inval_89 +
jmp loc_1024AC4  +
mov eax offset aError_inval_90 +
jmp loc_1024AC4  +
mov eax offset aError_screen_a +
jmp loc_1024AC4  +
mov eax offset aError_hwnds_ha +
jmp loc_1024AC4  +
mov eax offset aError_not_chil +
jmp loc_1024AC4  +
mov eax offset aError_inval_91 +
jmp loc_1024AC4  +
mov eax offset aError_inval_92 +
jmp loc_1024AC4  +
mov eax offset aError_non_mdic +
jmp loc_1024AC4  +
mov eax offset aError_popup_al +
jmp loc_1024AC4  +
mov eax offset aError_no_scrol +
jmp loc_1024AC4  +
mov eax offset aError_inval_93 +
jmp loc_1024AC4  +
mov eax offset aError_inval_94 +
jmp loc_1024AC4  +
mov eax offset aError_no_sys_0 +
jmp loc_1024AC4  +
mov eax offset aError_nonpaged +
jmp loc_1024AC4  +
mov eax offset aError_paged_sy +
jmp loc_1024AC4  +
mov eax offset aError_working_ +
jmp loc_1024AC4  +
mov eax offset aError_pagefi_1 +
jmp loc_1024AC4  +
mov eax offset aError_commit_0 +
jmp loc_1024AC4  +
mov eax offset aError_menu_ite +
jmp loc_1024AC4  +
mov eax offset aError_inval_95 +
jmp loc_1024AC4  +
mov eax offset aError_hook_typ +
jmp loc_1024AC4  +
mov eax offset aError_requires +
jmp loc_1024AC4  +
mov eax offset aError_timeout +
jmp loc_1024AC4  +
mov eax offset aError_inval_96 +
jmp loc_1024AC4  +
mov eax offset aError_incorr_0 +
jmp loc_1024AC4  +
mov eax offset aError_symlink_ +
jmp loc_1024AC4  +
mov eax offset aError_symlin_0 +
jmp loc_1024AC4  +
mov eax offset aError_xml_pars +
jmp loc_1024AC4  +
mov eax offset aError_xmldsig_ +
jmp loc_1024AC4  +
mov eax offset aError_restart_ +
jmp loc_1024AC4  +
mov eax offset aError_wrong_co +
jmp loc_1024AC4  +
mov eax offset aError_authip_f +
jmp loc_1024AC4  +
mov eax offset aError_eventlog +
jmp loc_1024AC4  +
mov eax offset aError_eventl_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_file +
jmp loc_1024AC4  +
mov eax offset aError_eventl_1 +
jmp loc_1024AC4  +
mov eax offset aError_inval_97 +
jmp loc_1024AC4  +
mov eax offset aError_inval_98 +
jmp loc_1024AC4  +
mov eax offset aError_thread_a +
jmp loc_1024AC4  +
mov eax offset aError_install_ +
jmp loc_1024AC4  +
mov eax offset aError_instal_0 +
jmp loc_1024AC4  +
mov eax offset aError_instal_1 +
jmp loc_1024AC4  +
mov eax offset aError_instal_2 +
jmp loc_1024AC4  +
mov eax offset aError_unknow_0 +
jmp loc_1024AC4  +
mov eax offset aError_unknow_1 +
jmp loc_1024AC4  +
mov eax offset aError_unknow_2 +
jmp loc_1024AC4  +
mov eax offset aError_unknow_3 +
jmp loc_1024AC4  +
mov eax offset asc_100E5AC +
jmp loc_1024AC4  +
mov eax offset aError_bad_conf +
jmp loc_1024AC4  +
mov eax offset aError_index_ab +
jmp loc_1024AC4  +
mov eax offset aError_instal_3 +
jmp loc_1024AC4  +
mov eax offset aError_instal_4 +
jmp loc_1024AC4  +
mov eax offset aError_product_ +
jmp loc_1024AC4  +
mov eax offset aError_bad_quer +
jmp loc_1024AC4  +
mov eax offset asc_100E4FC +
jmp loc_1024AC4  +
mov eax offset aError_device_3 +
jmp loc_1024AC4  +
mov eax offset aError_instal_5 +
jmp loc_1024AC4  +
mov eax offset aError_instal_6 +
jmp loc_1024AC4  +
mov eax offset aError_instal_7 +
jmp loc_1024AC4  +
mov eax offset aError_instal_8 +
jmp loc_1024AC4  +
mov eax offset aError_instal_9 +
jmp loc_1024AC4  +
mov eax offset aError_insta_10 +
jmp loc_1024AC4  +
mov eax offset aError_insta_11 +
jmp loc_1024AC4  +
mov eax offset aError_insta_12 +
jmp loc_1024AC4  +
mov eax offset aError_function +
jmp loc_1024AC4  +
mov eax offset aError_functi_0 +
jmp loc_1024AC4  +
mov eax offset asc_100E39C +
jmp loc_1024AC4  +
mov eax offset aError_datatype +
jmp loc_1024AC4  +
mov eax offset aError_unsupp_0 +
jmp loc_1024AC4  +
mov eax offset aError_create_f +
jmp loc_1024AC4  +
mov eax offset aError_insta_13 +
jmp loc_1024AC4  +
mov eax offset aError_insta_14 +
jmp loc_1024AC4  +
mov eax offset aError_insta_15 +
jmp loc_1024AC4  +
mov eax offset aError_patch_pa +
jmp loc_1024AC4  +
mov eax offset aError_patch__0 +
jmp loc_1024AC4  +
mov eax offset aError_patch__1 +
jmp loc_1024AC4  +
mov eax offset aError_produc_0 +
jmp loc_1024AC4  +
mov eax offset asc_100E26C +
jmp loc_1024AC4  +
mov eax offset aError_insta_16 +
jmp loc_1024AC4  +
mov eax offset aError_success_ +
jmp loc_1024AC4  +
mov eax offset aError_patch_ta +
jmp loc_1024AC4  +
mov eax offset aError_patch__2 +
jmp loc_1024AC4  +
mov eax offset aError_insta_17 +
jmp loc_1024AC4  +
mov eax offset aError_insta_18 +
jmp loc_1024AC4  +
mov eax offset aError_patch_re +
jmp loc_1024AC4  +
mov eax offset aError_unknow_4 +
jmp loc_1024AC4  +
mov eax offset aError_patch_no +
jmp loc_1024AC4  +
mov eax offset aError_patch__3 +
jmp loc_1024AC4  +
mov eax offset asc_100E124 +
jmp loc_1024AC4  +
mov eax offset aError_patch_ma +
jmp loc_1024AC4  +
mov eax offset aError_insta_19 +
jmp loc_1024AC4  +
mov eax offset asc_100E0C0 +
jmp loc_1024AC4  +
mov eax offset aError_unreco_0 +
jmp loc_1024AC4  +
mov eax offset aError_no_trust +
jmp loc_1024AC4  +
mov eax offset aError_no_tru_0 +
jmp loc_1024AC4  +
mov eax offset aError_trusted_ +
jmp loc_1024AC4  +
mov eax offset aError_truste_0 +
jmp loc_1024AC4  +
mov eax offset aError_trust_fa +
jmp loc_1024AC4  +
mov eax offset aError_netlogon +
jmp loc_1024AC4  +
mov eax offset aError_accoun_1 +
jmp loc_1024AC4  +
mov eax offset aError_redirect +
jmp loc_1024AC4  +
mov eax offset aError_printer_ +
jmp loc_1024AC4  +
mov eax offset aError_unknow_5 +
jmp loc_1024AC4  +
mov eax offset aError_unknow_6 +
jmp loc_1024AC4  +
mov eax offset aError_unknow_7 +
jmp loc_1024AC4  +
mov eax offset asc_100DF20 +
jmp loc_1024AC4  +
mov eax offset asc_100DF08 +
jmp loc_1024AC4  +
mov eax offset asc_100DEEC +
jmp loc_1024AC4  +
mov eax offset aError_printe_0 +
jmp loc_1024AC4  +
mov eax offset asc_100DEAC +
jmp loc_1024AC4  +
mov eax offset asc_100DE94 +
jmp loc_1024AC4  +
mov eax offset asc_100DE78 +
jmp loc_1024AC4  +
mov eax offset aError_nologon_ +
jmp loc_1024AC4  +
mov eax offset aError_nologo_0 +
jmp loc_1024AC4  +
mov eax offset aError_nologo_1 +
jmp loc_1024AC4  +
mov eax offset aError_domain_t +
jmp loc_1024AC4  +
mov eax offset aError_server_h +
jmp loc_1024AC4  +
mov eax offset aError_resour_0 +
jmp loc_1024AC4  +
mov eax offset aError_resour_1 +
jmp loc_1024AC4  +
mov eax offset aError_resour_2 +
jmp loc_1024AC4  +
mov eax offset aError_resour_3 +
jmp loc_1024AC4  +
mov eax offset aError_not_en_1 +
jmp loc_1024AC4  +
mov eax offset asc_100DD18 +
jmp loc_1024AC4  +
mov eax offset asc_100DD00 +
jmp loc_1024AC4  +
mov eax offset asc_100DCE8 +
jmp loc_1024AC4  +
mov eax offset aError_alread_7 +
jmp loc_1024AC4  +
mov eax offset aError_printe_1 +
jmp loc_1024AC4  +
mov eax offset asc_100DC9C +
jmp loc_1024AC4  +
mov eax offset aError_passwo_1 +
jmp loc_1024AC4  +
mov eax offset aError_domain_1 +
jmp loc_1024AC4  +
mov eax offset aError_accoun_2 +
jmp loc_1024AC4  +
mov eax offset aError_no_siten +
jmp loc_1024AC4  +
mov eax offset aError_cant_a_0 +
jmp loc_1024AC4  +
mov eax offset aError_cant_res +
jmp loc_1024AC4  +
mov eax offset aError_km_drive +
jmp loc_1024AC4  +
mov eax offset aError_context_ +
jmp loc_1024AC4  +
mov eax offset aError_per_user +
jmp loc_1024AC4  +
mov eax offset aError_all_user +
jmp loc_1024AC4  +
mov eax offset aError_user_del +
jmp loc_1024AC4  +
mov eax offset aError_authenti +
jmp loc_1024AC4  +
mov eax offset aError_remote_p +
jmp loc_1024AC4  +
mov eax offset aError_ntlm_blo +
jmp loc_1024AC4  +
mov eax offset asc_100DAD8 +
jmp loc_1024AC4  +
mov eax offset aError_bad_dr_0 +
jmp loc_1024AC4  +
mov eax offset asc_100DAA8 +
jmp loc_1024AC4  +
mov eax offset aError_metafile +
jmp loc_1024AC4  +
mov eax offset aError_transfor +
jmp loc_1024AC4  +
mov eax offset aError_clipping +
jmp loc_1024AC4  +
mov eax offset asc_100DA34 +
jmp loc_1024AC4  +
mov eax offset asc_100DA1C +
jmp loc_1024AC4  +
mov eax offset aError_tag_not_ +
jmp loc_1024AC4  +
mov eax offset aError_tag_no_0 +
jmp loc_1024AC4  +
mov eax offset aError_duplic_0 +
jmp loc_1024AC4  +
mov eax offset aError_profile_ +
jmp loc_1024AC4  +
mov eax offset aError_profil_2 +
jmp loc_1024AC4  +
mov eax offset asc_100D97C +
jmp loc_1024AC4  +
mov eax offset aError_icm_not_ +
jmp loc_1024AC4  +
mov eax offset aError_deleting +
jmp loc_1024AC4  +
mov eax offset asc_100D930 +
jmp loc_1024AC4  +
mov eax offset aError_colorspa +
jmp loc_1024AC4  +
mov eax offset asc_100D8F8 +
jmp loc_1024AC4  +
mov eax offset aError_profil_3 +
jmp loc_1024AC4  +
mov eax offset aError_connecte +
jmp loc_1024AC4  +
mov eax offset aError_connec_5 +
jmp loc_1024AC4  +
mov eax offset aError_bad_us_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invalid_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_wrong_ki +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_protseq_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_1 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_2 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_3 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_4 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_endpo +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_5 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_object_n +
jmp loc_1024AC4  +
mov eax offset aRpc_s_already_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_type_alr +
jmp loc_1024AC4  +
mov eax offset aRpc_s_alread_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_prots +
jmp loc_1024AC4  +
mov eax offset aRpc_s_not_list +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unknown_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unknow_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_bindi +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_pro_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_cant_cre +
jmp loc_1024AC4  +
mov eax offset aRpc_s_out_of_r +
jmp loc_1024AC4  +
mov eax offset aRpc_s_server_u +
jmp loc_1024AC4  +
mov eax offset aRpc_s_server_t +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_6 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_call_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_call_fai +
jmp loc_1024AC4  +
mov eax offset aRpc_s_call_f_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_protocol +
jmp loc_1024AC4  +
mov eax offset aRpc_s_proxy_ac +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unsuppor +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unsupp_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_7 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_8 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_entry +
jmp loc_1024AC4  +
mov eax offset aRpc_s_invali_9 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unsupp_1 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_uuid_no_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_duplicat +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unknow_1 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_max_call +
jmp loc_1024AC4  +
mov eax offset aRpc_s_string_t +
jmp loc_1024AC4  +
mov eax offset aRpc_s_protse_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_procnum_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_binding_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unknow_2 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unknow_3 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_inval_10 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unknow_4 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_nothing_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_incomple +
jmp loc_1024AC4  +
mov eax offset aRpc_s_inval_11 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_more_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_not_all_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_interfac +
jmp loc_1024AC4  +
mov eax offset aRpc_s_entry_al +
jmp loc_1024AC4  +
mov eax offset aRpc_s_entry_no +
jmp loc_1024AC4  +
mov eax offset aRpc_s_name_ser +
jmp loc_1024AC4  +
mov eax offset aRpc_s_inval_12 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_cannot_s +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_conte +
jmp loc_1024AC4  +
mov eax offset aRpc_s_internal +
jmp loc_1024AC4  +
mov eax offset aRpc_s_zero_div +
jmp loc_1024AC4  +
mov eax offset aRpc_s_address_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_fp_div_z +
jmp loc_1024AC4  +
mov eax offset aRpc_s_fp_under +
jmp loc_1024AC4  +
mov eax offset aRpc_s_fp_overf +
jmp loc_1024AC4  +
mov eax offset aRpc_x_no_more_ +
jmp loc_1024AC4  +
mov eax offset aRpc_x_ss_char_ +
jmp loc_1024AC4  +
mov eax offset aRpc_x_ss_cha_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_x_ss_in_nu +
jmp loc_1024AC4  +
mov eax offset aRpc_x_ss_conte +
jmp loc_1024AC4  +
mov eax offset aRpc_x_ss_handl +
jmp loc_1024AC4  +
mov eax offset aRpc_x_ss_canno +
jmp loc_1024AC4  +
mov eax offset aRpc_x_null_ref +
jmp loc_1024AC4  +
mov eax offset aRpc_x_enum_val +
jmp loc_1024AC4  +
mov eax offset aRpc_x_byte_cou +
jmp loc_1024AC4  +
mov eax offset aRpc_x_bad_stub +
jmp loc_1024AC4  +
mov eax offset aRpc_s_call_in_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_mor_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_inter +
jmp loc_1024AC4  +
mov eax offset aRpc_s_call_can +
jmp loc_1024AC4  +
mov eax offset aRpc_s_bindin_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_comm_fai +
jmp loc_1024AC4  +
mov eax offset aRpc_s_unsupp_2 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_no_princ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_not_rpc_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_uuid_loc +
jmp loc_1024AC4  +
mov eax offset aRpc_s_sec_pkg_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_not_canc +
jmp loc_1024AC4  +
mov eax offset aRpc_x_invalid_ +
jmp loc_1024AC4  +
mov eax offset aRpc_x_wrong_es +
jmp loc_1024AC4  +
mov eax offset aRpc_x_wrong_st +
jmp loc_1024AC4  +
mov eax offset aRpc_x_invali_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_x_wrong_pi +
jmp loc_1024AC4  +
mov eax offset aRpc_x_wrong__0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_cookie_a +
jmp loc_1024AC4  +
mov eax offset aRpc_s_group_me +
jmp loc_1024AC4  +
mov eax offset aRpc_s_inval_13 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_send_inc +
jmp loc_1024AC4  +
mov eax offset aRpc_s_inval_14 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_inval_15 +
jmp loc_1024AC4  +
mov eax offset aRpc_x_pipe_clo +
jmp loc_1024AC4  +
mov eax offset aRpc_x_pipe_dis +
jmp loc_1024AC4  +
mov eax offset aRpc_x_pipe_emp +
jmp loc_1024AC4  +
mov eax offset aRpc_s_entry_ty +
jmp loc_1024AC4  +
mov eax offset aRpc_s_not_al_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_interf_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_profile_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_prf_elt_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_prf_el_0 +
jmp loc_1024AC4  +
mov eax offset aRpc_s_grp_elt_ +
jmp loc_1024AC4  +
mov eax offset aRpc_s_grp_el_0 +
jmp loc_1024AC4  +
mov eax offset aError_not_conn +
jmp loc_1024AC4  +
mov ecx 800710D7h +
cmp eax ecx +
jg loc_1021DCD  +
jz loc_1021DC3  +
mov ecx 80070FA4h +
cmp eax ecx +
jg loc_1021BAC  +
jz loc_1021BA2  +
mov ecx 80070BC3h +
cmp eax ecx +
jg loc_1021AD6  +
jz loc_1021ACC  +
add ecx 0FFFFFFF9h +
cmp eax ecx +
jg loc_1021A62  +
jz loc_1021A58  +
cmp eax 80070961h +
jz loc_1021A4E  +
cmp eax 80070962h +
jz loc_1021A44  +
cmp eax 80070964h +
jz loc_1021A3A  +
cmp eax 80070BB8h +
jz loc_1021A30  +
cmp eax 80070BB9h +
jz loc_1021A26  +
cmp eax 80070BBAh +
jz loc_1021A1C  +
cmp eax 80070BBBh +
jnz loc_1024AA3  +
mov eax offset aError_spl_no_s +
jmp loc_1024AC4  +
mov eax offset aError_spool_fi +
jmp loc_1024AC4  +
mov eax offset aError_printe_2 +
jmp loc_1024AC4  +
mov eax offset aError_unknow_8 +
jmp loc_1024AC4  +
mov eax offset aError_device_i +
jmp loc_1024AC4  +
mov eax offset aError_active_c +
jmp loc_1024AC4  +
mov eax offset aError_open_fil +
jmp loc_1024AC4  +
mov eax offset aError_spl_no_a +
jmp loc_1024AC4  +
cmp eax 80070BBDh +
jz loc_1021AC2  +
cmp eax 80070BBEh +
jz loc_1021AB8  +
cmp eax 80070BBFh +
jz loc_1021AAE  +
cmp eax 80070BC0h +
jz loc_1021AA4  +
cmp eax 80070BC1h +
jz loc_1021A9A  +
cmp eax 80070BC2h +
jnz loc_1024AA3  +
mov eax offset aError_succes_0 +
jmp loc_1024AC4  +
mov eax offset aError_printe_3 +
jmp loc_1024AC4  +
mov eax offset aError_print_mo +
jmp loc_1024AC4  +
mov eax offset asc_100CBD4 +
jmp loc_1024AC4  +
mov eax offset aError_print__0 +
jmp loc_1024AC4  +
mov eax offset aError_print_pr +
jmp loc_1024AC4  +
mov eax offset aError_succes_1 +
jmp loc_1024AC4  +
mov ecx 80070F6Eh +
cmp eax ecx +
jg loc_1021B5A  +
jz loc_1021B50  +
add eax 7FF8F43Ch +
cmp eax 8 +
ja loc_1024AA3  +
jmp ds:off_1026CE0[eax*4]  +
mov eax offset aError_printe_4 +
jmp loc_1024AC4  +
mov eax offset aError_printe_5 +
jmp loc_1024AC4  +
mov eax offset aError_printe_6 +
jmp loc_1024AC4  +
mov eax offset aError_printe_7 +
jmp loc_1024AC4  +
mov eax offset aError_core_dri +
jmp loc_1024AC4  +
mov eax offset aError_fail_reb +
jmp loc_1024AC4  +
mov eax offset aError_fail_r_0 +
jmp loc_1024AC4  +
mov eax offset aError_printe_8 +
jmp loc_1024AC4  +
mov eax offset aError_print_jo +
jmp loc_1024AC4  +
mov eax offset aError_io_reiss +
jmp loc_1024AC4  +
cmp eax 80070FA0h +
jz loc_1021B98  +
cmp eax 80070FA1h +
jz loc_1021B8E  +
cmp eax 80070FA2h +
jz loc_1021B84  +
cmp eax 80070FA3h +
jnz loc_1024AA3  +
mov eax offset aError_inc_back +
jmp loc_1024AC4  +
mov eax offset aError_static_i +
jmp loc_1024AC4  +
mov eax offset aError_can_no_0 +
jmp loc_1024AC4  +
mov eax offset aError_wins_int +
jmp loc_1024AC4  +
mov eax offset aError_full_bac +
jmp loc_1024AC4  +
mov ecx 80071073h +
cmp eax ecx +
jg loc_1021CC5  +
jz loc_1021CBB  +
add ecx 0FFFFFFF9h +
cmp eax ecx +
jg loc_1021C51  +
jz loc_1021C47  +
cmp eax 80070FA5h +
jz loc_1021C3D  +
cmp eax 80070FA6h +
jz loc_1021C33  +
cmp eax 80071004h +
jz loc_1021C29  +
cmp eax 80071068h +
jz loc_1021C1F  +
cmp eax 80071069h +
jz loc_1021C15  +
cmp eax 8007106Ah +
jz loc_1021C0B  +
cmp eax 8007106Bh +
jnz loc_1024AA3  +
mov eax offset aError_wmi_try_ +
jmp loc_1024AC4  +
mov eax offset aError_wmi_item +
jmp loc_1024AC4  +
mov eax offset aError_wmi_inst +
jmp loc_1024AC4  +
mov eax offset aError_wmi_guid +
jmp loc_1024AC4  +
mov eax offset aError_dhcp_add +
jmp loc_1024AC4  +
mov eax offset aError_rpl_not_ +
jmp loc_1024AC4  +
mov eax offset aError_rec_non_ +
jmp loc_1024AC4  +
mov eax offset aError_wmi_dp_n +
jmp loc_1024AC4  +
cmp eax 8007106Dh +
jz loc_1021CB1  +
cmp eax 8007106Eh +
jz loc_1021CA7  +
cmp eax 8007106Fh +
jz loc_1021C9D  +
cmp eax 80071070h +
jz loc_1021C93  +
cmp eax 80071071h +
jz loc_1021C89  +
cmp eax 80071072h +
jnz loc_1024AA3  +
mov eax offset aError_wmi_inva +
jmp loc_1024AC4  +
mov eax offset aError_wmi_dp_f +
jmp loc_1024AC4  +
mov eax offset aError_wmi_serv +
jmp loc_1024AC4  +
mov eax offset aError_wmi_gu_0 +
jmp loc_1024AC4  +
mov eax offset aError_wmi_alre +
jmp loc_1024AC4  +
mov eax offset aError_wmi_unre +
jmp loc_1024AC4  +
mov eax offset aError_wmi_in_0 +
jmp loc_1024AC4  +
mov ecx 800710D0h +
cmp eax ecx +
jg loc_1021D59  +
jz loc_1021D4F  +
cmp eax 80071074h +
jz loc_1021D45  +
cmp eax 80071075h +
jz loc_1021D3B  +
cmp eax 80071076h +
jz loc_1021D31  +
cmp eax 800710CCh +
jz loc_1021D27  +
cmp eax 800710CDh +
jz loc_1021D1D  +
cmp eax 800710CEh +
jz loc_1021D13  +
cmp eax 800710CFh +
jnz loc_1024AA3  +
mov eax offset aError_drive_me +
jmp loc_1024AC4  +
mov eax offset asc_100C7EC +
jmp loc_1024AC4  +
mov eax offset asc_100C7D4 +
jmp loc_1024AC4  +
mov eax offset asc_100C7C0 +
jmp loc_1024AC4  +
mov eax offset aError_wmi_set_ +
jmp loc_1024AC4  +
mov eax offset aError_wmi_read +
jmp loc_1024AC4  +
mov eax offset aError_wmi_al_0 +
jmp loc_1024AC4  +
mov eax offset aError_media_of +
jmp loc_1024AC4  +
cmp eax 800710D1h +
jz loc_1021DB9  +
cmp eax 800710D2h +
jz loc_1021DAF  +
cmp eax 800710D3h +
jz loc_1021DA5  +
cmp eax 800710D4h +
jz loc_1021D9B  +
cmp eax 800710D5h +
jz loc_1021D91  +
cmp eax 800710D6h +
jnz loc_1024AA3  +
mov eax offset asc_100C74C +
jmp loc_1024AC4  +
mov eax offset aError_resour_4 +
jmp loc_1024AC4  +
mov eax offset aError_media_un +
jmp loc_1024AC4  +
mov eax offset aError_not_empt +
jmp loc_1024AC4  +
mov eax offset aError_empty +
jmp loc_1024AC4  +
mov eax offset aError_library_ +
jmp loc_1024AC4  +
mov eax offset aError_unable_4 +
jmp loc_1024AC4  +
mov ecx 80071194h +
cmp eax ecx +
jg loc_1021F82  +
jz loc_1021F78  +
add eax 7FF8EF28h +
cmp eax 52h +
ja loc_1024AA3  +
movzx eax ds:byte_1026DA0[eax] +
jmp ds:off_1026D04[eax*4]  +
mov eax offset aError_object_0 +
jmp loc_1024AC4  +
mov eax offset aError_databa_0 +
jmp loc_1024AC4  +
mov eax offset aError_databa_1 +
jmp loc_1024AC4  +
mov eax offset aError_media_in +
jmp loc_1024AC4  +
mov eax offset aError_resour_5 +
jmp loc_1024AC4  +
mov eax offset asc_100C63C +
jmp loc_1024AC4  +
mov eax offset aError_media_no +
jmp loc_1024AC4  +
mov eax offset aError_device_4 +
jmp loc_1024AC4  +
mov eax offset aError_reques_1 +
jmp loc_1024AC4  +
mov eax offset asc_100C5D0 +
jmp loc_1024AC4  +
mov eax offset aError_librar_0 +
jmp loc_1024AC4  +
mov eax offset aError_medium_n +
jmp loc_1024AC4  +
mov eax offset aError_unable_5 +
jmp loc_1024AC4  +
mov eax offset aError_unable_6 +
jmp loc_1024AC4  +
mov eax offset aError_unable_7 +
jmp loc_1024AC4  +
mov eax offset aError_unable_8 +
jmp loc_1024AC4  +
mov eax offset aError_transpor +
jmp loc_1024AC4  +
mov eax offset aError_controll +
jmp loc_1024AC4  +
mov eax offset aError_unable_9 +
jmp loc_1024AC4  +
mov eax offset aError_cleaner_ +
jmp loc_1024AC4  +
mov eax offset aError_cleane_0 +
jmp loc_1024AC4  +
mov eax offset aError_cleane_1 +
jmp loc_1024AC4  +
mov eax offset aError_unexpe_2 +
jmp loc_1024AC4  +
mov eax offset aError_cant_del +
jmp loc_1024AC4  +
mov eax offset aError_messag_0 +
jmp loc_1024AC4  +
mov eax offset aError_volume_c +
jmp loc_1024AC4  +
mov eax offset aError_indigeno +
jmp loc_1024AC4  +
mov eax offset aError_no_suppo +
jmp loc_1024AC4  +
mov eax offset aError_cleane_2 +
jmp loc_1024AC4  +
mov eax offset aError_ieport_f +
jmp loc_1024AC4  +
mov eax offset aError_file_off +
jmp loc_1024AC4  +
mov eax offset aError_remote_0 +
jmp loc_1024AC4  +
mov eax offset aError_remote_1 +
jmp loc_1024AC4  +
mov eax offset aError_not_a_re +
jmp loc_1024AC4  +
mov eax offset aError_repars_0 +
jmp loc_1024AC4  +
mov eax offset asc_100C2E0 +
jmp loc_1024AC4  +
mov eax offset aError_repars_1 +
jmp loc_1024AC4  +
mov eax offset aError_repars_2 +
jmp loc_1024AC4  +
mov eax offset aError_volume_n +
jmp loc_1024AC4  +
mov ecx 8007138Ch +
cmp eax ecx +
jg loc_1022055  +
jz loc_102204B  +
mov ecx 800711CBh +
cmp eax ecx +
jg loc_1022003  +
jz loc_1021FF9  +
cmp eax 800711C6h +
jz loc_1021FEF  +
cmp eax 800711C7h +
jz loc_1021FE5  +
cmp eax 800711C8h +
jz loc_1021FDB  +
cmp eax 800711C9h +
jz loc_1021FD1  +
cmp eax 800711CAh +
jnz loc_1024AA3  +
mov eax offset asc_100C268 +
jmp loc_1024AC4  +
mov eax offset aError_file_ver +
jmp loc_1024AC4  +
mov eax offset aError_file_v_0 +
jmp loc_1024AC4  +
mov eax offset aError_file_v_1 +
jmp loc_1024AC4  +
mov eax offset aError_file_v_2 +
jmp loc_1024AC4  +
mov eax offset asc_100C1B0 +
jmp loc_1024AC4  +
cmp eax 800711CCh +
jz loc_1022041  +
cmp eax 80071389h +
jz loc_1022037  +
cmp eax 8007138Ah +
jz loc_102202D  +
cmp eax 8007138Bh +
jnz loc_1024AA3  +
mov eax offset aError_depend_0 +
jmp loc_1024AC4  +
mov eax offset aError_depend_1 +
jmp loc_1024AC4  +
mov eax offset aError_depend_2 +
jmp loc_1024AC4  +
mov eax offset aError_file_v_3 +
jmp loc_1024AC4  +
mov eax offset aError_resour_6 +
jmp loc_1024AC4  +
add eax 7FF8EC73h +
cmp eax 8 +
ja loc_1024AA3  +
jmp ds:off_1026DF4[eax*4]  +
mov eax offset aError_host_nod +
jmp loc_1024AC4  +
mov eax offset aError_resour_7 +
jmp loc_1024AC4  +
mov eax offset aError_resour_8 +
jmp loc_1024AC4  +
mov eax offset aError_shutdo_2 +
jmp loc_1024AC4  +
mov eax offset aError_cant_evi +
jmp loc_1024AC4  +
mov eax offset aError_object_a +
jmp loc_1024AC4  +
mov eax offset aError_object_i +
jmp loc_1024AC4  +
mov eax offset aError_group_no +
jmp loc_1024AC4  +
mov eax offset aError_group__0 +
jmp loc_1024AC4  +
mov eax offset aError_group__1 +
jmp loc_1024AC4  +
mov ecx 80071702h +
cmp eax ecx +
jg loc_10223E4  +
jz loc_10223DA  +
add eax 7FF8EC69h +
cmp eax 4Ah +
ja loc_1024AA3  +
jmp ds:off_1026E18[eax*4]  +
mov eax offset aError_host_n_0 +
jmp loc_1024AC4  +
mov eax offset aError_host_n_1 +
jmp loc_1024AC4  +
mov eax offset aError_resmon_c +
jmp loc_1024AC4  +
mov eax offset aError_resmon_o +
jmp loc_1024AC4  +
mov eax offset aError_resour_9 +
jmp loc_1024AC4  +
mov eax offset aError_quorum_r +
jmp loc_1024AC4  +
mov eax offset aError_not_quor +
jmp loc_1024AC4  +
mov eax offset aError_cluster_ +
jmp loc_1024AC4  +
mov eax offset asc_100BF04 +
jmp loc_1024AC4  +
mov eax offset aError_resou_10 +
jmp loc_1024AC4  +
mov eax offset aError_not_qu_0 +
jmp loc_1024AC4  +
mov eax offset aError_core_res +
jmp loc_1024AC4  +
mov eax offset aError_quorum_0 +
jmp loc_1024AC4  +
mov eax offset aError_quorumlo +
jmp loc_1024AC4  +
mov eax offset aError_clusterl +
jmp loc_1024AC4  +
mov eax offset aError_cluste_0 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_1 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_2 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_3 +
jmp loc_1024AC4  +
mov eax offset aError_quorum_o +
jmp loc_1024AC4  +
mov eax offset aError_networ_2 +
jmp loc_1024AC4  +
mov eax offset aError_node_not +
jmp loc_1024AC4  +
mov eax offset aError_all_node +
jmp loc_1024AC4  +
mov eax offset aError_resou_11 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_4 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_5 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_6 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_7 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_8 +
jmp loc_1024AC4  +
mov eax offset aError_cluste_9 +
jmp loc_1024AC4  +
mov eax offset aError_clust_10 +
jmp loc_1024AC4  +
mov eax offset aError_clust_11 +
jmp loc_1024AC4  +
mov eax offset aError_clust_12 +
jmp loc_1024AC4  +
mov eax offset aError_clust_13 +
jmp loc_1024AC4  +
mov eax offset aError_clust_14 +
jmp loc_1024AC4  +
mov eax offset aError_clust_15 +
jmp loc_1024AC4  +
mov eax offset aError_clust_16 +
jmp loc_1024AC4  +
mov eax offset aError_clust_17 +
jmp loc_1024AC4  +
mov eax offset aError_clust_18 +
jmp loc_1024AC4  +
mov eax offset aError_clust_19 +
jmp loc_1024AC4  +
mov eax offset aError_clust_20 +
jmp loc_1024AC4  +
mov eax offset aError_clust_21 +
jmp loc_1024AC4  +
mov eax offset aError_clust_22 +
jmp loc_1024AC4  +
mov eax offset aError_clust_23 +
jmp loc_1024AC4  +
mov eax offset aError_clust_24 +
jmp loc_1024AC4  +
mov eax offset aError_clust_25 +
jmp loc_1024AC4  +
mov eax offset aError_clust_26 +
jmp loc_1024AC4  +
mov eax offset aError_clust_27 +
jmp loc_1024AC4  +
mov eax offset aError_clust_28 +
jmp loc_1024AC4  +
mov eax offset aError_clust_29 +
jmp loc_1024AC4  +
mov eax offset aError_clust_30 +
jmp loc_1024AC4  +
mov eax offset aError_clust_31 +
jmp loc_1024AC4  +
mov eax offset asc_100B96C +
jmp loc_1024AC4  +
mov eax offset aError_depend_3 +
jmp loc_1024AC4  +
mov eax offset aError_clust_32 +
jmp loc_1024AC4  +
mov eax offset aError_node_can +
jmp loc_1024AC4  +
mov eax offset aError_clust_33 +
jmp loc_1024AC4  +
mov eax offset aError_clust_34 +
jmp loc_1024AC4  +
mov eax offset aError_clust_35 +
jmp loc_1024AC4  +
mov eax offset aError_clust_36 +
jmp loc_1024AC4  +
mov eax offset aError_clust_37 +
jmp loc_1024AC4  +
mov eax offset aError_clust_38 +
jmp loc_1024AC4  +
mov eax offset aError_clust_39 +
jmp loc_1024AC4  +
mov eax offset aError_clust_40 +
jmp loc_1024AC4  +
mov eax offset aError_clust_41 +
jmp loc_1024AC4  +
mov eax offset aError_clust_42 +
jmp loc_1024AC4  +
mov eax offset aError_clust_43 +
jmp loc_1024AC4  +
mov eax offset aError_clust_44 +
jmp loc_1024AC4  +
mov eax offset aError_resmon_i +
jmp loc_1024AC4  +
mov eax offset aError_clust_45 +
jmp loc_1024AC4  +
mov eax offset aError_quorum_d +
jmp loc_1024AC4  +
mov eax offset aError_databa_2 +
jmp loc_1024AC4  +
mov eax offset aError_clust_46 +
jmp loc_1024AC4  +
mov eax offset aError_resou_12 +
jmp loc_1024AC4  +
mov eax offset aError_clust_47 +
jmp loc_1024AC4  +
mov ecx 800717E6h +
cmp eax ecx +
jg loc_102270D  +
jz loc_1022703  +
add eax 7FF8E8FDh +
cmp eax 82h +
ja loc_1024AA3  +
movzx eax ds:byte_1027074[eax] +
jmp ds:off_1026F44[eax*4]  +
mov eax offset aError_clust_48 +
jmp loc_1024AC4  +
mov eax offset aError_clust_49 +
jmp loc_1024AC4  +
mov eax offset aError_clust_50 +
jmp loc_1024AC4  +
mov eax offset aError_clust_51 +
jmp loc_1024AC4  +
mov eax offset aError_clust_52 +
jmp loc_1024AC4  +
mov eax offset aError_clust_53 +
jmp loc_1024AC4  +
mov eax offset aError_clust_54 +
jmp loc_1024AC4  +
mov eax offset aError_node_c_0 +
jmp loc_1024AC4  +
mov eax offset aError_clust_55 +
jmp loc_1024AC4  +
mov eax offset aError_clust_56 +
jmp loc_1024AC4  +
mov eax offset aError_cluscfg_ +
jmp loc_1024AC4  +
mov eax offset aError_cluscf_0 +
jmp loc_1024AC4  +
mov eax offset aError_cluscf_1 +
jmp loc_1024AC4  +
mov eax offset aError_clust_57 +
jmp loc_1024AC4  +
mov eax offset aError_clust_58 +
jmp loc_1024AC4  +
mov eax offset aError_clust_59 +
jmp loc_1024AC4  +
mov eax offset aError_clust_60 +
jmp loc_1024AC4  +
mov eax offset aError_clust_61 +
jmp loc_1024AC4  +
mov eax offset aError_clust_62 +
jmp loc_1024AC4  +
mov eax offset aError_resou_13 +
jmp loc_1024AC4  +
mov eax offset asc_100B388 +
jmp loc_1024AC4  +
mov eax offset aError_clust_63 +
jmp loc_1024AC4  +
mov eax offset aError_clust_64 +
jmp loc_1024AC4  +
mov eax offset aError_clust_65 +
jmp loc_1024AC4  +
mov eax offset aError_clust_66 +
jmp loc_1024AC4  +
mov eax offset aError_clust_67 +
jmp loc_1024AC4  +
mov eax offset aError_clust_68 +
jmp loc_1024AC4  +
mov eax offset aError_clust_69 +
jmp loc_1024AC4  +
mov eax offset aError_clust_70 +
jmp loc_1024AC4  +
mov eax offset aError_clust_71 +
jmp loc_1024AC4  +
mov eax offset aError_clust_72 +
jmp loc_1024AC4  +
mov eax offset aError_clust_73 +
jmp loc_1024AC4  +
mov eax offset aError_clust_74 +
jmp loc_1024AC4  +
mov eax offset aError_depend_4 +
jmp loc_1024AC4  +
mov eax offset aError_clust_75 +
jmp loc_1024AC4  +
mov eax offset aError_clust_76 +
jmp loc_1024AC4  +
mov eax offset aError_clust_77 +
jmp loc_1024AC4  +
mov eax offset aError_quorum_n +
jmp loc_1024AC4  +
mov eax offset aError_depend_5 +
jmp loc_1024AC4  +
mov eax offset aError_except_0 +
jmp loc_1024AC4  +
mov eax offset aError_clust_78 +
jmp loc_1024AC4  +
mov eax offset aError_clust_79 +
jmp loc_1024AC4  +
mov eax offset aError_clust_80 +
jmp loc_1024AC4  +
mov eax offset aError_clust_81 +
jmp loc_1024AC4  +
mov eax offset aError_clust_82 +
jmp loc_1024AC4  +
mov eax offset aError_clust_83 +
jmp loc_1024AC4  +
mov eax offset aError_noncore_ +
jmp loc_1024AC4  +
mov eax offset aError_file_sha +
jmp loc_1024AC4  +
mov eax offset aError_clust_84 +
jmp loc_1024AC4  +
mov eax offset aError_clust_85 +
jmp loc_1024AC4  +
mov eax offset aError_clust_86 +
jmp loc_1024AC4  +
mov eax offset aError_clust_87 +
jmp loc_1024AC4  +
mov eax offset aError_clust_88 +
jmp loc_1024AC4  +
mov eax offset aError_encrypti +
jmp loc_1024AC4  +
mov eax offset aError_decrypti +
jmp loc_1024AC4  +
mov eax offset aError_file_enc +
jmp loc_1024AC4  +
mov eax offset aError_no_rec_0 +
jmp loc_1024AC4  +
mov eax offset aError_no_efs +
jmp loc_1024AC4  +
mov eax offset aError_wrong_ef +
jmp loc_1024AC4  +
mov eax offset aError_no_use_0 +
jmp loc_1024AC4  +
mov eax offset aError_file_n_0 +
jmp loc_1024AC4  +
mov eax offset aError_not_expo +
jmp loc_1024AC4  +
mov eax offset aError_file_rea +
jmp loc_1024AC4  +
mov eax offset aError_dir_efs_ +
jmp loc_1024AC4  +
mov eax offset aError_efs_serv +
jmp loc_1024AC4  +
mov eax offset aError_bad_reco +
jmp loc_1024AC4  +
mov eax offset aError_efs_alg_ +
jmp loc_1024AC4  +
mov eax offset aError_volume_0 +
jmp loc_1024AC4  +
mov eax offset aError_efs_disa +
jmp loc_1024AC4  +
mov eax offset aError_efs_vers +
jmp loc_1024AC4  +
mov eax offset aError_cs_encry +
jmp loc_1024AC4  +
mov eax offset aError_cs_enc_0 +
jmp loc_1024AC4  +
mov eax offset aError_cs_enc_1 +
jmp loc_1024AC4  +
mov eax offset aError_cs_enc_2 +
jmp loc_1024AC4  +
mov eax offset aError_cs_enc_3 +
jmp loc_1024AC4  +
mov eax offset aError_no_brows +
jmp loc_1024AC4  +
mov ecx 80071B59h +
cmp eax ecx +
jg loc_1022C7A  +
jz loc_1022C70  +
add eax 7FF8E638h +
cmp eax 0FEh +
ja loc_1024AA3  +
movzx eax ds:byte_1027310[eax] +
jmp ds:off_10270F8[eax*4]  +
mov eax offset aError_log_sect +
jmp loc_1024AC4  +
mov eax offset aError_log_se_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_se_1 +
jmp loc_1024AC4  +
mov eax offset aError_log_bloc +
jmp loc_1024AC4  +
mov eax offset aError_log_inva +
jmp loc_1024AC4  +
mov eax offset aError_log_bl_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_read +
jmp loc_1024AC4  +
mov eax offset aError_log_rest +
jmp loc_1024AC4  +
mov eax offset aError_log_bl_1 +
jmp loc_1024AC4  +
mov eax offset aError_log_bl_2 +
jmp loc_1024AC4  +
mov eax offset aError_log_re_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_no_r +
jmp loc_1024AC4  +
mov eax offset aError_log_meta +
jmp loc_1024AC4  +
mov eax offset aError_log_me_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_me_1 +
jmp loc_1024AC4  +
mov eax offset aError_log_rese +
jmp loc_1024AC4  +
mov eax offset aError_log_cant +
jmp loc_1024AC4  +
mov eax offset aError_log_cont +
jmp loc_1024AC4  +
mov eax offset aError_log_star +
jmp loc_1024AC4  +
mov eax offset aError_log_poli +
jmp loc_1024AC4  +
mov eax offset aError_log_po_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_po_1 +
jmp loc_1024AC4  +
mov eax offset aError_log_po_2 +
jmp loc_1024AC4  +
mov eax offset aError_log_pinn +
jmp loc_1024AC4  +
mov eax offset aError_log_reco +
jmp loc_1024AC4  +
mov eax offset aError_log_re_1 +
jmp loc_1024AC4  +
mov eax offset aError_log_spac +
jmp loc_1024AC4  +
mov eax offset aError_log_tail +
jmp loc_1024AC4  +
mov eax offset aError_log_full +
jmp loc_1024AC4  +
mov eax offset aError_could__0 +
jmp loc_1024AC4  +
mov eax offset aError_log_mult +
jmp loc_1024AC4  +
mov eax offset aError_log_dedi +
jmp loc_1024AC4  +
mov eax offset aError_log_arch +
jmp loc_1024AC4  +
mov eax offset aError_log_ar_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_ephe +
jmp loc_1024AC4  +
mov eax offset aError_log_not_ +
jmp loc_1024AC4  +
mov eax offset aError_log_clie +
jmp loc_1024AC4  +
mov eax offset aError_log_cl_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_fu_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_co_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_co_1 +
jmp loc_1024AC4  +
mov eax offset aError_log_co_2 +
jmp loc_1024AC4  +
mov eax offset aError_log_co_3 +
jmp loc_1024AC4  +
mov eax offset aError_log_stat +
jmp loc_1024AC4  +
mov eax offset aError_log_pi_0 +
jmp loc_1024AC4  +
mov eax offset aError_log_me_2 +
jmp loc_1024AC4  +
mov eax offset aError_log_inco +
jmp loc_1024AC4  +
mov eax offset aError_log_appe +
jmp loc_1024AC4  +
mov eax offset aError_log_pi_1 +
jmp loc_1024AC4  +
mov eax offset asc_100A690 +
jmp loc_1024AC4  +
mov eax offset aError_transact +
jmp loc_1024AC4  +
mov eax offset aError_transa_0 +
jmp loc_1024AC4  +
mov eax offset aError_transa_1 +
jmp loc_1024AC4  +
mov eax offset aError_transa_2 +
jmp loc_1024AC4  +
mov eax offset aError_transa_3 +
jmp loc_1024AC4  +
mov eax offset aError_tm_initi +
jmp loc_1024AC4  +
mov eax offset aError_resou_14 +
jmp loc_1024AC4  +
mov eax offset aError_transa_4 +
jmp loc_1024AC4  +
mov eax offset aError_transa_5 +
jmp loc_1024AC4  +
mov eax offset aError_crm_prot +
jmp loc_1024AC4  +
mov eax offset aError_transa_6 +
jmp loc_1024AC4  +
mov eax offset aError_crm_pr_0 +
jmp loc_1024AC4  +
mov eax offset aError_transa_7 +
jmp loc_1024AC4  +
mov eax offset aError_curren_1 +
jmp loc_1024AC4  +
mov eax offset aError_transa_8 +
jmp loc_1024AC4  +
mov eax offset aError_resou_15 +
jmp loc_1024AC4  +
mov eax offset aError_enlistme +
jmp loc_1024AC4  +
mov eax offset aError_transa_9 +
jmp loc_1024AC4  +
mov eax offset aError_trans_10 +
jmp loc_1024AC4  +
mov eax offset aError_trans_11 +
jmp loc_1024AC4  +
mov eax offset aError_trans_12 +
jmp loc_1024AC4  +
mov eax offset aError_trans_13 +
jmp loc_1024AC4  +
mov eax offset aError_trans_14 +
jmp loc_1024AC4  +
mov eax offset aError_trans_15 +
jmp loc_1024AC4  +
mov eax offset aError_implicit +
jmp loc_1024AC4  +
mov eax offset aError_trans_16 +
jmp loc_1024AC4  +
mov eax offset aError_trans_17 +
jmp loc_1024AC4  +
mov eax offset aError_rm_canno +
jmp loc_1024AC4  +
mov eax offset aError_trans_18 +
jmp loc_1024AC4  +
mov eax offset aError_trans_19 +
jmp loc_1024AC4  +
mov eax offset aError_trans_20 +
jmp loc_1024AC4  +
mov eax offset aError_rm_not_a +
jmp loc_1024AC4  +
mov eax offset aError_rm_metad +
jmp loc_1024AC4  +
mov eax offset aError_direct_0 +
jmp loc_1024AC4  +
mov eax offset aError_trans_21 +
jmp loc_1024AC4  +
mov eax offset aError_log_resi +
jmp loc_1024AC4  +
mov eax offset aError_object_1 +
jmp loc_1024AC4  +
mov eax offset aError_stream_m +
jmp loc_1024AC4  +
mov eax offset aError_stream_0 +
jmp loc_1024AC4  +
mov eax offset aError_minivers +
jmp loc_1024AC4  +
mov eax offset aError_cant_o_0 +
jmp loc_1024AC4  +
mov eax offset aError_cant_cre +
jmp loc_1024AC4  +
mov eax offset aError_remote_f +
jmp loc_1024AC4  +
mov eax offset aError_handle_n +
jmp loc_1024AC4  +
mov eax offset aError_no_txf_m +
jmp loc_1024AC4  +
mov eax offset aError_log_corr +
jmp loc_1024AC4  +
mov eax offset aError_cant_rec +
jmp loc_1024AC4  +
mov eax offset aError_rm_disco +
jmp loc_1024AC4  +
mov eax offset aError_enlist_0 +
jmp loc_1024AC4  +
mov eax offset aError_recove_0 +
jmp loc_1024AC4  +
mov eax offset aError_rm_alrea +
jmp loc_1024AC4  +
mov eax offset aError_file_ide +
jmp loc_1024AC4  +
mov eax offset aError_cant_bre +
jmp loc_1024AC4  +
mov eax offset aError_cant_cro +
jmp loc_1024AC4  +
mov eax offset aError_txf_dir_ +
jmp loc_1024AC4  +
mov eax offset aError_indoubt_ +
jmp loc_1024AC4  +
mov eax offset aError_tm_volat +
jmp loc_1024AC4  +
mov eax offset aError_rollback +
jmp loc_1024AC4  +
mov eax offset aError_txf_attr +
jmp loc_1024AC4  +
mov eax offset aError_efs_not_ +
jmp loc_1024AC4  +
mov eax offset aError_trans_22 +
jmp loc_1024AC4  +
mov eax offset aError_log_grow +
jmp loc_1024AC4  +
mov eax offset aError_trans_23 +
jmp loc_1024AC4  +
mov eax offset aError_txf_meta +
jmp loc_1024AC4  +
mov eax offset aError_trans_24 +
jmp loc_1024AC4  +
mov eax offset aError_trans_25 +
jmp loc_1024AC4  +
mov eax offset aError_cannot_e +
jmp loc_1024AC4  +
mov eax offset aError_trans_26 +
jmp loc_1024AC4  +
mov eax offset aError_trans_27 +
jmp loc_1024AC4  +
mov eax offset aError_not_snap +
jmp loc_1024AC4  +
mov eax offset aError_no_savep +
jmp loc_1024AC4  +
mov eax offset aError_data_los +
jmp loc_1024AC4  +
mov eax offset aError_sparse_n +
jmp loc_1024AC4  +
mov eax offset aError_tm_ident +
jmp loc_1024AC4  +
mov eax offset aError_floated_ +
jmp loc_1024AC4  +
mov eax offset aError_cannot_a +
jmp loc_1024AC4  +
mov eax offset aError_cannot_1 +
jmp loc_1024AC4  +
mov eax offset aError_bad_clus +
jmp loc_1024AC4  +
mov eax offset aError_compre_0 +
jmp loc_1024AC4  +
mov eax offset aError_volume_d +
jmp loc_1024AC4  +
mov eax offset aError_no_link_ +
jmp loc_1024AC4  +
mov eax offset aError_operat_0 +
jmp loc_1024AC4  +
mov eax offset aError_expired_ +
jmp loc_1024AC4  +
mov eax offset aError_ctx_wins +
jmp loc_1024AC4  +
mov ecx 80072008h +
cmp eax ecx +
jg loc_1022E96  +
jz loc_1022E8C  +
add eax 7FF8E4A6h +
cmp eax 43h +
ja loc_1024AA3  +
jmp ds:off_1027410[eax*4]  +
mov eax offset aError_ctx_inva +
jmp loc_1024AC4  +
mov eax offset aError_ctx_pd_n +
jmp loc_1024AC4  +
mov eax offset aError_ctx_wd_n +
jmp loc_1024AC4  +
mov eax offset aError_ctx_cann +
jmp loc_1024AC4  +
mov eax offset aError_ctx_serv +
jmp loc_1024AC4  +
mov eax offset aError_ctx_clos +
jmp loc_1024AC4  +
mov eax offset aError_ctx_no_o +
jmp loc_1024AC4  +
mov eax offset aError_ctx_mode +
jmp loc_1024AC4  +
mov eax offset aError_ctx_in_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_mo_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_mo_1 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_mo_2 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_mo_3 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_mo_4 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_mo_5 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_td_e +
jmp loc_1024AC4  +
mov eax offset aError_ctx_wi_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_wi_1 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_wi_2 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_bad_ +
jmp loc_1024AC4  +
mov eax offset aError_ctx_grap +
jmp loc_1024AC4  +
mov eax offset aError_ctx_logo +
jmp loc_1024AC4  +
mov eax offset aError_ctx_not_ +
jmp loc_1024AC4  +
mov eax offset aError_ctx_clie +
jmp loc_1024AC4  +
mov eax offset aError_ctx_cons +
jmp loc_1024AC4  +
mov eax offset aError_ctx_co_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_shad +
jmp loc_1024AC4  +
mov eax offset aError_ctx_wi_3 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_in_1 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_sh_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_sh_1 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_cl_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_cl_1 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_lice +
jmp loc_1024AC4  +
mov eax offset aError_ctx_li_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_li_1 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_sh_2 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_sh_3 +
jmp loc_1024AC4  +
mov eax offset aError_activati +
jmp loc_1024AC4  +
mov eax offset aError_ctx_wi_4 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_encr +
jmp loc_1024AC4  +
mov eax offset aError_ctx_sess +
jmp loc_1024AC4  +
mov eax offset aError_ctx_no_f +
jmp loc_1024AC4  +
mov eax offset aError_ctx_acco +
jmp loc_1024AC4  +
mov eax offset aError_rdp_prot +
jmp loc_1024AC4  +
mov eax offset aError_ctx_cdm_ +
jmp loc_1024AC4  +
mov eax offset aError_ctx_cd_0 +
jmp loc_1024AC4  +
mov eax offset aError_ctx_secu +
jmp loc_1024AC4  +
mov eax offset aError_ts_incom +
jmp loc_1024AC4  +
mov eax offset aError_ds_not_i +
jmp loc_1024AC4  +
mov ecx 800732C8h +
cmp eax ecx +
jg loc_1023E24  +
jz loc_1023E1A  +
add eax 7FF8DFF7h +
cmp eax 1B0h +
ja loc_1024AA3  +
jmp ds:off_1027520[eax*4]  +
mov eax offset aError_ds_membe +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_at +
jmp loc_1024AC4  +
mov eax offset aError_ds_inval +
jmp loc_1024AC4  +
mov eax offset aError_ds_attri +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_busy +
jmp loc_1024AC4  +
mov eax offset aError_ds_unava +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_ri +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_mo +
jmp loc_1024AC4  +
mov eax offset aError_ds_incor +
jmp loc_1024AC4  +
mov eax offset aError_ds_ridmg +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_c +
jmp loc_1024AC4  +
mov eax offset aError_ds_cant_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_cross +
jmp loc_1024AC4  +
mov eax offset aError_ds_gc_no +
jmp loc_1024AC4  +
mov eax offset aError_shared_p +
jmp loc_1024AC4  +
mov eax offset aError_policy_o +
jmp loc_1024AC4  +
mov eax offset aError_policy_0 +
jmp loc_1024AC4  +
mov eax offset aError_promotio +
jmp loc_1024AC4  +
mov eax offset aError_no_promo +
jmp loc_1024AC4  +
mov eax offset aError_ds_opera +
jmp loc_1024AC4  +
mov eax offset aError_ds_proto +
jmp loc_1024AC4  +
mov eax offset aError_ds_timel +
jmp loc_1024AC4  +
mov eax offset aError_ds_sizel +
jmp loc_1024AC4  +
mov eax offset aError_ds_admin +
jmp loc_1024AC4  +
mov eax offset aError_ds_compa +
jmp loc_1024AC4  +
mov eax offset aError_ds_com_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_auth_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_stron +
jmp loc_1024AC4  +
mov eax offset aError_ds_inapp +
jmp loc_1024AC4  +
mov eax offset aError_ds_aut_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_refer +
jmp loc_1024AC4  +
mov eax offset aError_ds_una_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_confi +
jmp loc_1024AC4  +
mov eax offset aError_ds_ina_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_const +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_su +
jmp loc_1024AC4  +
mov eax offset aError_ds_alias +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_is_le +
jmp loc_1024AC4  +
mov eax offset aError_ds_ali_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_unwil +
jmp loc_1024AC4  +
mov eax offset aError_ds_loop_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_namin +
jmp loc_1024AC4  +
mov eax offset aError_ds_objec +
jmp loc_1024AC4  +
mov eax offset aError_ds_affec +
jmp loc_1024AC4  +
mov eax offset aError_ds_serve +
jmp loc_1024AC4  +
mov eax offset aError_ds_local +
jmp loc_1024AC4  +
mov eax offset aError_ds_encod +
jmp loc_1024AC4  +
mov eax offset aError_ds_decod +
jmp loc_1024AC4  +
mov eax offset aError_ds_filte +
jmp loc_1024AC4  +
mov eax offset aError_ds_param +
jmp loc_1024AC4  +
mov eax offset aError_ds_not_s +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_re +
jmp loc_1024AC4  +
mov eax offset aError_ds_contr +
jmp loc_1024AC4  +
mov eax offset aError_ds_clien +
jmp loc_1024AC4  +
mov eax offset aError_ds_ref_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sort_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_offse +
jmp loc_1024AC4  +
mov eax offset aError_ds_root_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_add_r +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_max_o +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_s +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_rd +
jmp loc_1024AC4  +
mov eax offset aError_ds_rdn_d +
jmp loc_1024AC4  +
mov eax offset aError_ds_no__0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_user_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_i +
jmp loc_1024AC4  +
mov eax offset aError_ds_illeg +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_t +
jmp loc_1024AC4  +
mov eax offset aError_ds_bad_i +
jmp loc_1024AC4  +
mov eax offset aError_ds_maste +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_missi +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_a +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_singl +
jmp loc_1024AC4  +
mov eax offset aError_ds_range +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_v +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_4 +
jmp loc_1024AC4  +
mov eax offset aError_ds_roo_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_ch +
jmp loc_1024AC4  +
mov eax offset aError_ds_no__1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_pa +
jmp loc_1024AC4  +
mov eax offset aError_ds_paren +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_5 +
jmp loc_1024AC4  +
mov eax offset aError_ds_child +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_ali_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_bad_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_ali_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_6 +
jmp loc_1024AC4  +
mov eax offset aError_ds_out_o +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_7 +
jmp loc_1024AC4  +
mov eax offset aError_ds_gener +
jmp loc_1024AC4  +
mov eax offset aError_ds_dsa_m +
jmp loc_1024AC4  +
mov eax offset aError_ds_class +
jmp loc_1024AC4  +
mov eax offset aError_ds_insuf +
jmp loc_1024AC4  +
mov eax offset aError_ds_ill_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_name_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_not_a +
jmp loc_1024AC4  +
mov eax offset aError_ds_sec_d +
jmp loc_1024AC4  +
mov eax offset aError_ds_sec_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_de +
jmp loc_1024AC4  +
mov eax offset aError_ds_subre +
jmp loc_1024AC4  +
mov eax offset aError_ds_ncnam +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_8 +
jmp loc_1024AC4  +
mov eax offset aError_ds_cla_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_g +
jmp loc_1024AC4  +
mov eax offset aError_ds_not_o +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_cr +
jmp loc_1024AC4  +
mov eax offset aError_ds_shutt +
jmp loc_1024AC4  +
mov eax offset aError_ds_unkno +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_could +
jmp loc_1024AC4  +
mov eax offset aError_ds_cro_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_can_9 +
jmp loc_1024AC4  +
mov eax offset aError_ds_repli +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_obj_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_4 +
jmp loc_1024AC4  +
mov eax offset aError_ds_cro_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_10 +
jmp loc_1024AC4  +
mov eax offset aError_ds_subtr +
jmp loc_1024AC4  +
mov eax offset aError_ds_notif +
jmp loc_1024AC4  +
mov eax offset aError_ds_dup_r +
jmp loc_1024AC4  +
mov eax offset aError_ds_dup_o +
jmp loc_1024AC4  +
mov eax offset aError_ds_dup_m +
jmp loc_1024AC4  +
mov eax offset aError_ds_dup_s +
jmp loc_1024AC4  +
mov eax offset aError_ds_dup_l +
jmp loc_1024AC4  +
mov eax offset aError_ds_seman +
jmp loc_1024AC4  +
mov eax offset aError_ds_synta +
jmp loc_1024AC4  +
mov eax offset aError_ds_exist +
jmp loc_1024AC4  +
mov eax offset aError_ds_exi_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nonex +
jmp loc_1024AC4  +
mov eax offset aError_ds_non_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_aux_c +
jmp loc_1024AC4  +
mov eax offset aError_ds_non_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sub_c +
jmp loc_1024AC4  +
mov eax offset aError_ds_bad_r +
jmp loc_1024AC4  +
mov eax offset aError_ds_exi_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_exi_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_exi_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_recal +
jmp loc_1024AC4  +
mov eax offset aError_ds_tree_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_11 +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_s +
jmp loc_1024AC4  +
mov eax offset aError_ds_bad_a +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_12 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_13 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_14 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_15 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_16 +
jmp loc_1024AC4  +
mov eax offset aError_ds_mis_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_17 +
jmp loc_1024AC4  +
mov eax offset aError_ds_code_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_datab +
jmp loc_1024AC4  +
mov eax offset aError_ds_gover +
jmp loc_1024AC4  +
mov eax offset aError_ds_mis_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ncn_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_secur +
jmp loc_1024AC4  +
mov eax offset aError_ds_schem +
jmp loc_1024AC4  +
mov eax offset aError_ds_sch_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_att_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_gcver +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_s +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_18 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_19 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_20 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_21 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sec_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_22 +
jmp loc_1024AC4  +
mov eax offset aError_ds_bad_h +
jmp loc_1024AC4  +
mov eax offset aError_ds_build +
jmp loc_1024AC4  +
mov eax offset aError_ds_con_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_count +
jmp loc_1024AC4  +
mov eax offset aError_ds_hiera +
jmp loc_1024AC4  +
mov eax offset aError_ds_inter +
jmp loc_1024AC4  +
mov eax offset aError_ds_unk_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_roo_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_refus +
jmp loc_1024AC4  +
mov eax offset aError_ds_mis_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_unabl +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_g +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_i +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_b +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_d +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_c +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_4 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_o +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_m +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_r +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_5 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_6 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_7 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_a +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_8 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_9 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_10 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_11 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_12 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_13 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_14 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_p +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_15 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_16 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_17 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_18 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dra_e +
jmp loc_1024AC4  +
mov eax offset aError_ds_insta +
jmp loc_1024AC4  +
mov eax offset aError_ds_dup_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_5 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_6 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_7 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_8 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nam_9 +
jmp loc_1024AC4  +
mov eax offset aError_ds_na_10 +
jmp loc_1024AC4  +
mov eax offset aError_ds_con_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_wrong +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_19 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ds_re +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_non_b +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_23 +
jmp loc_1024AC4  +
mov eax offset aError_ds_backl +
jmp loc_1024AC4  +
mov eax offset aError_ds_epoch +
jmp loc_1024AC4  +
mov eax offset aError_ds_src_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_src_a +
jmp loc_1024AC4  +
mov eax offset aError_ds_dst_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_not_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_src_g +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_24 +
jmp loc_1024AC4  +
mov eax offset aError_ds_pdc_o +
jmp loc_1024AC4  +
mov eax offset aError_ds_cro_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ill_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_25 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nc_mu +
jmp loc_1024AC4  +
mov eax offset aError_ds_cr_im +
jmp loc_1024AC4  +
mov eax offset aError_ds_dst_d +
jmp loc_1024AC4  +
mov eax offset aError_ds_mis_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_26 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_27 +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_4 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_tr +
jmp loc_1024AC4  +
mov eax offset aError_ds_cou_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_cou_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sam_i +
jmp loc_1024AC4  +
mov eax offset aError_ds_sensi +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_28 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ill_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nonsa +
jmp loc_1024AC4  +
mov eax offset aError_ds_sch_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_29 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ins_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ins_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_5 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_ne +
jmp loc_1024AC4  +
mov eax offset aError_ds_no__2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_globa +
jmp loc_1024AC4  +
mov eax offset aError_ds_glo_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_unive +
jmp loc_1024AC4  +
mov eax offset aError_ds_glo_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_loc_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_have_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_strin +
jmp loc_1024AC4  +
mov eax offset aError_ds_na_11 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dns_l +
jmp loc_1024AC4  +
mov eax offset aError_ds_cou_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_30 +
jmp loc_1024AC4  +
mov eax offset aError_ds_key_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_wro_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sam_n +
jmp loc_1024AC4  +
mov eax offset aError_ds_sam_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_31 +
jmp loc_1024AC4  +
mov eax offset aError_ds_init_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_pk +
jmp loc_1024AC4  +
mov eax offset aError_ds_sourc +
jmp loc_1024AC4  +
mov eax offset aError_ds_desti +
jmp loc_1024AC4  +
mov eax offset aError_ds_des_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_32 +
jmp loc_1024AC4  +
mov eax offset aError_ds_src_o +
jmp loc_1024AC4  +
mov eax offset aError_ds_src_s +
jmp loc_1024AC4  +
mov eax offset aError_ds_src_0 +
jmp loc_1024AC4  +
mov eax offset aError_sam_init +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_20 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_21 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_22 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_23 +
jmp loc_1024AC4  +
mov eax offset aError_ds_nc_st +
jmp loc_1024AC4  +
mov eax offset aError_ds_gc_re +
jmp loc_1024AC4  +
mov eax offset aError_ds_loc_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_fp +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_33 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no__3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sou_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_34 +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_6 +
jmp loc_1024AC4  +
mov eax offset aError_ds_fil_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_unico +
jmp loc_1024AC4  +
mov eax offset aError_ds_machi +
jmp loc_1024AC4  +
mov eax offset aError_ds_must_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_src_d +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_35 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ini_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sam_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_fores +
jmp loc_1024AC4  +
mov eax offset aError_ds_domai +
jmp loc_1024AC4  +
mov eax offset aError_ds_for_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dom_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_incom +
jmp loc_1024AC4  +
mov eax offset aError_ds_low_d +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_be +
jmp loc_1024AC4  +
mov eax offset aError_ds_not_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_na_12 +
jmp loc_1024AC4  +
mov eax offset aError_ds_mac_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_out_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_inc_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no__4 +
jmp loc_1024AC4  +
mov eax offset aError_ds_reser +
jmp loc_1024AC4  +
mov eax offset aError_ds_link_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_ag_ca +
jmp loc_1024AC4  +
mov eax offset aError_ds_modif +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_ob +
jmp loc_1024AC4  +
mov eax offset aError_ds_mod_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_mod_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_na_13 +
jmp loc_1024AC4  +
mov eax offset aError_not_su_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_36 +
jmp loc_1024AC4  +
mov eax offset aError_ds_cr__0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_threa +
jmp loc_1024AC4  +
mov eax offset aError_ds_not_c +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_37 +
jmp loc_1024AC4  +
mov eax offset aError_ds_sin_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ntdsc +
jmp loc_1024AC4  +
mov eax offset aError_ds_ntd_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_diffe +
jmp loc_1024AC4  +
mov eax offset aError_ds_drs_e +
jmp loc_1024AC4  +
mov eax offset aError_ds_rep_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_ms +
jmp loc_1024AC4  +
mov eax offset aError_ds_dup_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_exi_4 +
jmp loc_1024AC4  +
mov eax offset aError_ds_autho +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_7 +
jmp loc_1024AC4  +
mov eax offset aError_ds_remot +
jmp loc_1024AC4  +
mov eax offset aError_ds_cro_3 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_38 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_39 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dupli +
jmp loc_1024AC4  +
mov eax offset aError_ds_ins_2 +
jmp loc_1024AC4  +
mov eax offset aError_ds_group +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_40 +
jmp loc_1024AC4  +
mov eax offset aError_ds_ca_41 +
jmp loc_1024AC4  +
mov eax offset aError_ds_role_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_wko_c +
jmp loc_1024AC4  +
mov eax offset aError_ds_dom_1 +
jmp loc_1024AC4  +
mov eax offset aError_ds_exi_5 +
jmp loc_1024AC4  +
mov eax offset aError_ds_repl_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_disal +
jmp loc_1024AC4  +
mov eax offset aError_ds_ldap_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_24 +
jmp loc_1024AC4  +
mov eax offset aError_ds_polic +
jmp loc_1024AC4  +
mov eax offset aError_no_site_ +
jmp loc_1024AC4  +
mov eax offset aError_no_secre +
jmp loc_1024AC4  +
mov eax offset aError_no_writa +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_se +
jmp loc_1024AC4  +
mov eax offset aError_ds_no_nt +
jmp loc_1024AC4  +
mov eax offset aError_ds_non_a +
jmp loc_1024AC4  +
mov eax offset aError_ds_audit +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_8 +
jmp loc_1024AC4  +
mov eax offset aError_ds_inv_9 +
jmp loc_1024AC4  +
mov eax offset aError_ds_hie_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_25 +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_26 +
jmp loc_1024AC4  +
mov eax offset aError_ds_res_0 +
jmp loc_1024AC4  +
mov eax offset aError_ds_mapi_ +
jmp loc_1024AC4  +
mov eax offset aError_ds_dr_27 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_qm +
jmp loc_1024AC4  +
mov ecx 800735E8h +
cmp eax ecx +
jg loc_1023F3C  +
jz loc_1023F32  +
add eax 7FF8CD37h +
cmp eax 16h +
ja loc_1024AA3  +
jmp ds:off_1027BE4[eax*4]  +
mov eax offset aError_ipsec__0 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__1 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_mm +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__2 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__3 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__4 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__5 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_tr +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__6 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__7 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__8 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec__9 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_de +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_10 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_11 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_tu +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_12 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_13 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_14 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_15 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_16 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_17 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_18 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_ik +
jmp loc_1024AC4  +
mov ecx 80073A98h +
cmp eax ecx +
jg loc_10247F1  +
jz loc_10247E7  +
add eax 7FF8CA17h +
cmp eax 135h +
ja loc_1024AA3  +
movzx eax ds:byte_1027FA8[eax] +
jmp ds:off_1027C40[eax*4]  +
mov eax offset aError_ipsec_19 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_20 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_21 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_22 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_23 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_24 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_25 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_26 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_27 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_28 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_29 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_30 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_31 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_32 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_33 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_34 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_35 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_36 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_37 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_38 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_39 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_40 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_41 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_42 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_43 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_44 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_45 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_46 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_47 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_48 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_49 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_50 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_51 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_52 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_53 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_54 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_55 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_56 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_57 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_58 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_59 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_60 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_61 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_62 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_63 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_64 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_65 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_66 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_67 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_68 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_69 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_70 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_71 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_72 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_73 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_74 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_75 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_76 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_77 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_78 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_79 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_80 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_81 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_82 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_83 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_84 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_85 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_86 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_87 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_88 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_89 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_90 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_91 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_92 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_93 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_94 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_95 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_96 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_97 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_98 +
jmp loc_1024AC4  +
mov eax offset asc_100572C +
jmp loc_1024AC4  +
mov eax offset asc_1005710 +
jmp loc_1024AC4  +
mov eax offset asc_10056E8 +
jmp loc_1024AC4  +
mov eax offset asc_10056CC +
jmp loc_1024AC4  +
mov eax offset asc_10056B0 +
jmp loc_1024AC4  +
mov eax offset asc_1005688 +
jmp loc_1024AC4  +
mov eax offset asc_100565C +
jmp loc_1024AC4  +
mov eax offset asc_1005634 +
jmp loc_1024AC4  +
mov eax offset asc_100560C +
jmp loc_1024AC4  +
mov eax offset asc_10055EC +
jmp loc_1024AC4  +
mov eax offset asc_10055CC +
jmp loc_1024AC4  +
mov eax offset asc_10055AC +
jmp loc_1024AC4  +
mov eax offset asc_1005588 +
jmp loc_1024AC4  +
mov eax offset asc_1005564 +
jmp loc_1024AC4  +
mov eax offset asc_1005548 +
jmp loc_1024AC4  +
mov eax offset asc_1005524 +
jmp loc_1024AC4  +
mov eax offset asc_1005504 +
jmp loc_1024AC4  +
mov eax offset asc_10054DC +
jmp loc_1024AC4  +
mov eax offset asc_10054B4 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_ba +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_sa +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_wr +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_re +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_in +
jmp loc_1024AC4  +
mov eax offset asc_1005408 +
jmp loc_1024AC4  +
mov eax offset aError_ipsec_cl +
jmp loc_1024AC4  +
mov eax offset aError_sxs_sect +
jmp loc_1024AC4  +
mov eax offset aError_sxs_cant +
jmp loc_1024AC4  +
mov eax offset aError_sxs_inva +
jmp loc_1024AC4  +
mov eax offset aError_sxs_asse +
jmp loc_1024AC4  +
mov eax offset aError_sxs_mani +
jmp loc_1024AC4  +
mov eax offset aError_sxs_ma_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_acti +
jmp loc_1024AC4  +
mov eax offset aError_sxs_key_ +
jmp loc_1024AC4  +
mov eax offset aError_sxs_vers +
jmp loc_1024AC4  +
mov eax offset aError_sxs_wron +
jmp loc_1024AC4  +
mov eax offset aError_sxs_thre +
jmp loc_1024AC4  +
mov eax offset aError_sxs_proc +
jmp loc_1024AC4  +
mov eax offset aError_sxs_unkn +
jmp loc_1024AC4  +
mov eax offset aError_sxs_un_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_in_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_root +
jmp loc_1024AC4  +
mov eax offset aError_sxs_leaf +
jmp loc_1024AC4  +
mov eax offset aError_sxs_in_1 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_ma_1 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_ma_2 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_priv +
jmp loc_1024AC4  +
mov eax offset aError_sxs_dupl +
jmp loc_1024AC4  +
mov eax offset aError_sxs_du_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_du_1 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_du_2 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_du_3 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_du_4 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_du_5 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_file +
jmp loc_1024AC4  +
mov eax offset aError_sxs_poli +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xml_ +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_1 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_2 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_3 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_4 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_5 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_6 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_7 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_8 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_xm_9 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_10 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_11 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_12 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_13 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_14 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_15 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_16 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_17 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_18 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_19 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_20 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_21 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_22 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_23 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_24 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_25 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_26 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_27 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_28 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_29 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_30 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_31 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_32 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_33 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_34 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_35 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_36 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_37 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_38 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_39 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_40 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_41 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_x_42 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_prot +
jmp loc_1024AC4  +
mov eax offset aError_sxs_pr_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_pr_1 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_untr +
jmp loc_1024AC4  +
mov eax offset aError_sxs_pr_2 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_miss +
jmp loc_1024AC4  +
mov eax offset aError_sxs_in_2 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_as_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_corr +
jmp loc_1024AC4  +
mov eax offset aError_sxs_co_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_earl +
jmp loc_1024AC4  +
mov eax offset aError_sxs_in_3 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_mult +
jmp loc_1024AC4  +
mov eax offset aError_sxs_pr_3 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_rele +
jmp loc_1024AC4  +
mov eax offset aError_sxs_syst +
jmp loc_1024AC4  +
mov eax offset aError_sxs_in_4 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_in_5 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_iden +
jmp loc_1024AC4  +
mov eax offset aError_sxs_id_0 +
jmp loc_1024AC4  +
mov eax offset aError_malforme +
jmp loc_1024AC4  +
mov eax offset aError_sxs_inco +
jmp loc_1024AC4  +
mov eax offset aError_unmapped +
jmp loc_1024AC4  +
mov eax offset aError_sxs_as_1 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_comp +
jmp loc_1024AC4  +
mov eax offset aError_advanced +
jmp loc_1024AC4  +
mov eax offset aError_xml_enco +
jmp loc_1024AC4  +
mov eax offset aError_sxs_ma_3 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_id_1 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_as_2 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_fi_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_ma_4 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_sett +
jmp loc_1024AC4  +
mov eax offset aError_sxs_tran +
jmp loc_1024AC4  +
mov eax offset aError_smi_prim +
jmp loc_1024AC4  +
mov eax offset aError_generi_0 +
jmp loc_1024AC4  +
mov eax offset aError_sxs_fi_1 +
jmp loc_1024AC4  +
mov eax offset aError_evt_inva +
jmp loc_1024AC4  +
mov ecx 80073B60h +
cmp eax ecx +
jg loc_1024A32  +
jz loc_1024A28  +
add eax 7FF8C567h +
cmp eax 6Bh +
ja loc_1024AA3  +
movzx eax ds:byte_10281B4[eax] +
jmp ds:off_10280E0[eax*4]  +
mov eax offset aError_evt_in_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_publ +
jmp loc_1024AC4  +
mov eax offset aError_evt_even +
jmp loc_1024AC4  +
mov eax offset aError_evt_in_1 +
jmp loc_1024AC4  +
mov eax offset aError_evt_in_2 +
jmp loc_1024AC4  +
mov eax offset aError_evt_chan +
jmp loc_1024AC4  +
mov eax offset aError_evt_malf +
jmp loc_1024AC4  +
mov eax offset aError_evt_subs +
jmp loc_1024AC4  +
mov eax offset aError_evt_conf +
jmp loc_1024AC4  +
mov eax offset aError_evt_quer +
jmp loc_1024AC4  +
mov eax offset aError_evt_qu_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_non_ +
jmp loc_1024AC4  +
mov eax offset aError_evt_filt +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_1 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_2 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_3 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_4 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_5 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_6 +
jmp loc_1024AC4  +
mov eax offset aError_evt_in_3 +
jmp loc_1024AC4  +
mov eax offset aError_evt_in_4 +
jmp loc_1024AC4  +
mov eax offset aError_evt_in_5 +
jmp loc_1024AC4  +
mov eax offset aError_evt_ch_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_7 +
jmp loc_1024AC4  +
mov eax offset aError_evt_mess +
jmp loc_1024AC4  +
mov eax offset aError_evt_me_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_unre +
jmp loc_1024AC4  +
mov eax offset aError_evt_un_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_max_ +
jmp loc_1024AC4  +
mov eax offset aError_evt_ev_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_me_1 +
jmp loc_1024AC4  +
mov eax offset aError_evt_vers +
jmp loc_1024AC4  +
mov eax offset aError_evt_ve_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_cann +
jmp loc_1024AC4  +
mov eax offset aError_evt_pu_0 +
jmp loc_1024AC4  +
mov eax offset aError_evt_fi_8 +
jmp loc_1024AC4  +
mov eax offset aError_ec_subsc +
jmp loc_1024AC4  +
mov eax offset aError_ec_log_d +
jmp loc_1024AC4  +
mov eax offset aError_ec_circu +
jmp loc_1024AC4  +
mov eax offset aError_ec_creds +
jmp loc_1024AC4  +
mov eax offset aError_ec_cred_ +
jmp loc_1024AC4  +
mov eax offset aError_ec_no_ac +
jmp loc_1024AC4  +
mov eax offset aError_mui_file +
jmp loc_1024AC4  +
mov eax offset aError_mui_inva +
jmp loc_1024AC4  +
mov eax offset aError_mui_in_0 +
jmp loc_1024AC4  +
mov eax offset aError_mui_in_1 +
jmp loc_1024AC4  +
mov eax offset aError_mui_in_2 +
jmp loc_1024AC4  +
mov eax offset aError_mui_fi_0 +
jmp loc_1024AC4  +
mov eax offset aError_resou_16 +
jmp loc_1024AC4  +
mov eax offset aError_mui_intl +
jmp loc_1024AC4  +
mov eax offset aError_mui_in_3 +
jmp loc_1024AC4  +
mov eax offset aError_mca_inva +
jmp loc_1024AC4  +
mov ecx 80073B66h +
cmp eax ecx +
jg loc_1024A8A  +
jz loc_1024A83  +
cmp eax 80073B61h +
jz loc_1024A7C  +
cmp eax 80073B62h +
jz loc_1024A75  +
cmp eax 80073B63h +
jz loc_1024A6E  +
cmp eax 80073B64h +
jz loc_1024A67  +
cmp eax 80073B65h +
jnz loc_1024AA3  +
mov eax offset aError_mca_inte +
jmp loc_1024AC4  +
mov eax offset aError_mca_unsu +
jmp loc_1024AC4  +
mov eax offset aError_mca_mccs +
jmp loc_1024AC4  +
mov eax offset aError_mca_moni +
jmp loc_1024AC4  +
mov eax offset aError_mca_in_0 +
jmp loc_1024AC4  +
mov eax offset aError_mca_in_1 +
jmp loc_1024AC4  +
cmp eax 80073B67h +
jz loc_1024ABF  +
cmp eax 80073B92h +
jz loc_1024AB8  +
cmp eax 80073BC3h +
jz loc_1024AB1  +
test eax eax +
jz loc_1024AAA  +
mov eax offset aUnknownError +
jmp loc_1024AC4  +
mov eax offset aError_success +
jmp loc_1024AC4  +
mov eax offset aError_system_d +
jmp loc_1024AC4  +
mov eax offset aError_ambiguou +
jmp loc_1024AC4  +
mov eax offset aError_mca_un_0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 0C004B001h +
cmp eax ecx +
jg loc_10282D0  +
jz loc_10282C6  +
add eax 7FFB1EFFh +
cmp eax 0Ah +
ja loc_1028DA6  +
jmp ds:off_1028DB0[eax*4]  +
mov eax offset aSl_e_sfs_inval +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_inv_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_inv_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_bad_t +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_bad_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_dupli +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_token +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_inv_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_file_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_fil_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_sfs_inv_3 +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_inval +
jmp loc_1028DAB  +
mov ecx 0C004E01Ch +
cmp eax ecx +
jg loc_10288D4  +
jz loc_10288CA  +
mov ecx 0C004C756h +
cmp eax ecx +
jg loc_10285F6  +
jz loc_10285EC  +
mov ecx 0C004C00Fh +
cmp eax ecx +
jg loc_1028489  +
jz loc_102847F  +
add ecx 0FFFFFFF4h +
cmp eax ecx +
jg loc_10283FC  +
jz loc_10283F2  +
mov ecx 0C004B008h +
cmp eax ecx +
jg loc_1028399  +
jz loc_102838F  +
cmp eax 0C004B002h +
jz loc_1028385  +
cmp eax 0C004B003h +
jz loc_102837B  +
cmp eax 0C004B004h +
jz loc_1028371  +
cmp eax 0C004B005h +
jz loc_1028367  +
cmp eax 0C004B006h +
jz loc_102835D  +
cmp eax 0C004B007h +
jnz loc_1028DA6  +
mov eax offset aSl_e_srv_serve +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_inv_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_autho +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_inv_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_inv_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_inv_3 +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_inv_4 +
jmp loc_1028DAB  +
cmp eax 0C004B009h +
jz loc_10283E8  +
cmp eax 0C004B011h +
jz loc_10283DE  +
cmp eax 0C004B100h +
jz loc_10283D4  +
cmp eax 0C004C001h +
jz loc_10283CA  +
cmp eax 0C004C002h +
jnz loc_1028DA6  +
mov eax offset aSl_e_chpa_inva +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_prod +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_gener +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_clien +
jmp loc_1028DAB  +
mov eax offset aSl_e_srv_inv_5 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_pr_0 +
jmp loc_1028DAB  +
add eax 3FFB3FFCh +
cmp eax 0Ah +
ja loc_1028DA6  +
jmp ds:off_1028DDC[eax*4]  +
mov eax offset aSl_e_chpa_in_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_bind +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_bi_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_unsu +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_maxi +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_actc +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_in_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_in_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_syst +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_in_3 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_in_4 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_in_5 +
jmp loc_1028DAB  +
mov ecx 0C004C04Fh +
cmp eax ecx +
jg loc_1028558  +
jz loc_102854E  +
add eax 3FFB3FF0h +
cmp eax 23h +
ja loc_1028DA6  +
movzx eax ds:byte_1028E48[eax] +
jmp ds:off_1028E08[eax*4]  +
mov eax offset aSl_e_chpa_in_6 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_in_7 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_netw +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_data +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_in_8 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_dmak +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_dm_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_reis +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_over +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_oem_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_resp +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_time +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_ti_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_ti_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_ti_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_no_r +
jmp loc_1028DAB  +
mov ecx 0C004C750h +
cmp eax ecx +
jg loc_10285B5  +
jz loc_10285AB  +
cmp eax 0C004C050h +
jz loc_10285A1  +
cmp eax 0C004C401h +
jz loc_1028597  +
cmp eax 0C004C600h +
jz loc_102858D  +
cmp eax 0C004C700h +
jnz loc_1028DA6  +
mov eax offset aSl_e_chpa_busi +
jmp loc_1028DAB  +
mov eax offset aSl_e_vga_non_g +
jmp loc_1028DAB  +
mov eax offset aSl_e_vga_non_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_gene +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_null +
jmp loc_1028DAB  +
cmp eax 0C004C751h +
jz loc_10285E2  +
cmp eax 0C004C752h +
jz loc_10285D8  +
cmp eax 0C004C755h +
jnz loc_1028DA6  +
mov eax offset aSl_e_chpa_fail +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_unkn +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_un_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_0 +
jmp loc_1028DAB  +
mov ecx 0C004E004h +
cmp eax ecx +
jg loc_10287CF  +
jz loc_10287C5  +
mov ecx 0C004C804h +
cmp eax ecx +
jg loc_10286FE  +
jz loc_10286F4  +
mov ecx 0C004C770h +
cmp eax ecx +
jg loc_102869B  +
jz loc_1028691  +
cmp eax 0C004C757h +
jz loc_1028687  +
cmp eax 0C004C758h +
jz loc_102867D  +
cmp eax 0C004C75Ah +
jz loc_1028673  +
cmp eax 0C004C75Bh +
jz loc_1028669  +
cmp eax 0C004C75Ch +
jz loc_102865F  +
cmp eax 0C004C764h +
jnz loc_1028DA6  +
mov eax offset aSl_e_chpa_un_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_3 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_4 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_5 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_pr_1 +
jmp loc_1028DAB  +
cmp eax 0C004C780h +
jz loc_10286EA  +
cmp eax 0C004C781h +
jz loc_10286E0  +
cmp eax 0C004C801h +
jz loc_10286D6  +
cmp eax 0C004C802h +
jz loc_10286CC  +
cmp eax 0C004C803h +
jnz loc_1028DA6  +
mov eax offset aSl_e_chref_pro +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_exc +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_inv +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_6 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chpa_fa_7 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_i_0 +
jmp loc_1028DAB  +
mov ecx 0C004C814h +
cmp eax ecx +
jg loc_102876C  +
jz loc_1028762  +
cmp eax 0C004C805h +
jz loc_1028758  +
cmp eax 0C004C810h +
jz loc_102874E  +
cmp eax 0C004C811h +
jz loc_1028744  +
cmp eax 0C004C812h +
jz loc_102873A  +
cmp eax 0C004C813h +
jnz loc_1028DA6  +
mov eax offset aSl_e_chref_p_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_bin +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_can +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_i_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_i_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_p_1 +
jmp loc_1028DAB  +
cmp eax 0C004C815h +
jz loc_10287BB  +
cmp eax 0C004C816h +
jz loc_10287B1  +
cmp eax 0C004E001h +
jz loc_10287A7  +
cmp eax 0C004E002h +
jz loc_102879D  +
cmp eax 0C004E003h +
jnz loc_1028DA6  +
mov eax offset aSl_e_evaluatio +
jmp loc_1028DAB  +
mov eax offset aSl_e_token_sto +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_c +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_oem +
jmp loc_1028DAB  +
mov eax offset aSl_e_chref_p_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_not_evalu +
jmp loc_1028DAB  +
add eax 3FFB1FFBh +
cmp eax 16h +
ja loc_1028DA6  +
jmp ds:off_1028E6C[eax*4]  +
mov eax offset aSl_e_not_activ +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_g +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto_to +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto_no +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto_al +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto_ca +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__3 +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__4 +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto_pr +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto_in +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__5 +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__6 +
jmp loc_1028DAB  +
mov eax offset aSl_e_toksto__7 +
jmp loc_1028DAB  +
mov eax offset aSl_e_eul_consu +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_inva +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_in_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_in_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_inte +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_i +
jmp loc_1028DAB  +
mov eax offset aSl_e_hwid_erro +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_in_2 +
jmp loc_1028DAB  +
mov ecx 0C004F031h +
cmp eax ecx +
jg loc_1028B7D  +
jz loc_1028B73  +
add ecx 0FFFFFFE7h +
cmp eax ecx +
jg loc_1028A78  +
jz loc_1028A6E  +
mov ecx 0C004F00Ah +
cmp eax ecx +
jg loc_10289EB  +
jz loc_10289E1  +
add ecx 0FFFFFFFAh +
cmp eax ecx +
jg loc_1028988  +
jz loc_102897E  +
cmp eax 0C004E01Dh +
jz loc_1028974  +
cmp eax 0C004E01Eh +
jz loc_102896A  +
cmp eax 0C004E01Fh +
jz loc_1028960  +
cmp eax 0C004F001h +
jz loc_1028956  +
cmp eax 0C004F002h +
jz loc_102894C  +
cmp eax 0C004F003h +
jnz loc_1028DA6  +
mov eax offset aSl_e_use_licen +
jmp loc_1028DAB  +
mov eax offset aSl_e_right_not +
jmp loc_1028DAB  +
mov eax offset aSl_e_internal_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_in_3 +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_in_4 +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_in_5 +
jmp loc_1028DAB  +
mov eax offset aSl_e_mismatche +
jmp loc_1028DAB  +
cmp eax 0C004F005h +
jz loc_10289D7  +
cmp eax 0C004F006h +
jz loc_10289CD  +
cmp eax 0C004F007h +
jz loc_10289C3  +
cmp eax 0C004F008h +
jz loc_10289B9  +
cmp eax 0C004F009h +
jnz loc_1028DA6  +
mov eax offset aSl_e_grace_tim +
jmp loc_1028DAB  +
mov eax offset aSl_e_spc_not_a +
jmp loc_1028DAB  +
mov eax offset aSl_e_rac_not_a +
jmp loc_1028DAB  +
mov eax offset aSl_e_external_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_mismatc_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_mismatc_1 +
jmp loc_1028DAB  +
add eax 3FFB0FF5h +
cmp eax 0Ch +
ja loc_1028DA6  +
jmp ds:off_1028EC8[eax*4]  +
mov eax offset aSl_e_no_pid_co +
jmp loc_1028DAB  +
mov eax offset aSl_e_mismatc_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_out_of_to +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_p +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_f +
jmp loc_1028DAB  +
mov eax offset aSl_e_value_not +
jmp loc_1028DAB  +
mov eax offset aSl_e_right_n_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_not_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_product_s +
jmp loc_1028DAB  +
mov eax offset aSl_e_not_suppo +
jmp loc_1028DAB  +
mov eax offset aSl_e_publishin +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_s +
jmp loc_1028DAB  +
add eax 3FFB0FE7h +
cmp eax 17h +
ja loc_1028DA6  +
jmp ds:off_1028EFC[eax*4]  +
mov eax offset aSl_e_invalid_e +
jmp loc_1028DAB  +
mov eax offset aSl_e_event_not +
jmp loc_1028DAB  +
mov eax offset aSl_e_event_alr +
jmp loc_1028DAB  +
mov eax offset aSl_e_decryptio +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_datatype_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_l +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_validity_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_a +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_d +
jmp loc_1028DAB  +
mov eax offset aSl_e_windows_i +
jmp loc_1028DAB  +
mov eax offset aSl_e_lua_acces +
jmp loc_1028DAB  +
mov eax offset aSl_e_proxy_key +
jmp loc_1028DAB  +
mov eax offset aSl_e_tamper_de +
jmp loc_1028DAB  +
mov eax offset aSl_e_policy_ca +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_r +
jmp loc_1028DAB  +
mov eax offset aSl_e_slp_not_s +
jmp loc_1028DAB  +
mov eax offset aSl_e_cidiid_in +
jmp loc_1028DAB  +
mov eax offset aSl_e_cidiid__0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_cidiid_ve +
jmp loc_1028DAB  +
mov eax offset aSl_e_cidiid__1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_cidiid_no +
jmp loc_1028DAB  +
mov eax offset aSl_e_cidiid_mi +
jmp loc_1028DAB  +
mov ecx 0C004F063h +
cmp eax ecx +
jg loc_1028CA6  +
jz loc_1028C9C  +
add eax 3FFB0FCEh +
cmp eax 30h +
ja loc_1028DA6  +
movzx eax ds:byte_1028FC0[eax] +
jmp ds:off_1028F5C[eax*4]  +
mov eax offset aSl_e_invalid_b +
jmp loc_1028DAB  +
mov eax offset aSl_e_product_k +
jmp loc_1028DAB  +
mov eax offset aSl_e_eul_not_a +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_not_wi +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_not_en +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_bindin +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_key_ma +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_key__0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_proxy_pol +
jmp loc_1028DAB  +
mov eax offset aSl_e_cidiid__2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_m +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_blocked_p +
jmp loc_1028DAB  +
mov eax offset aSl_e_duplicate +
jmp loc_1028DAB  +
mov eax offset aSl_e_missing_o +
jmp loc_1028DAB  +
mov eax offset aSl_e_license_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_base_sku_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_machin +
jmp loc_1028DAB  +
mov eax offset aSl_e_slp_missi +
jmp loc_1028DAB  +
mov eax offset aSl_e_slp_mis_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_slp_bad_f +
jmp loc_1028DAB  +
mov eax offset aSl_e_invalid_2 +
jmp loc_1028DAB  +
mov eax offset aSl_e_pkey_in_6 +
jmp loc_1028DAB  +
mov eax offset aSl_e_issuance_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_slp_oem_c +
jmp loc_1028DAB  +
mov ecx 0C004FC05h +
cmp eax ecx +
jg loc_1028D44  +
jz loc_1028D3D  +
add eax 3FFB0F9Ch +
cmp eax 10h +
ja loc_1028DA6  +
jmp ds:off_1028FF4[eax*4]  +
mov eax offset aSl_e_nongenuin +
jmp loc_1028DAB  +
mov eax offset aSl_e_dependent +
jmp loc_1028DAB  +
mov eax offset aSl_e_nongenu_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_mismatc_3 +
jmp loc_1028DAB  +
mov eax offset aSl_e_operation +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_key__1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_invali +
jmp loc_1028DAB  +
mov eax offset aSl_e_plugin_al +
jmp loc_1028DAB  +
mov eax offset aSl_e_plugin_in +
jmp loc_1028DAB  +
mov eax offset aSl_e_applicati +
jmp loc_1028DAB  +
mov eax offset aSl_e_applica_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_bind_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_validit_0 +
jmp loc_1028DAB  +
mov ecx 4004F040h +
cmp eax ecx +
jg loc_1028DA6  +
jz loc_1028D9F  +
add eax 3FFB02FFh +
cmp eax 8 +
ja loc_1028DA6  +
jmp ds:off_1029038[eax*4]  +
mov eax offset aSl_e_cal_not_f +
jmp loc_1028DAB  +
mov eax offset aSl_e_free_cal_ +
jmp loc_1028DAB  +
mov eax offset aSl_e_cal_class +
jmp loc_1028DAB  +
mov eax offset aSl_e_cal_princ +
jmp loc_1028DAB  +
mov eax offset aSl_e_cal_pri_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_cal_store +
jmp loc_1028DAB  +
mov eax offset aSl_e_cal_sto_0 +
jmp loc_1028DAB  +
mov eax offset aSl_e_cal_pri_1 +
jmp loc_1028DAB  +
mov eax offset aSl_e_tamper_re +
jmp loc_1028DAB  +
mov eax offset aSl_e_vl_info_p +
jmp loc_1028DAB  +
mov eax offset aUnknownError +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx 8E5E045Ah +
cmp eax ecx +
jg loc_1029973  +
jz loc_1029969  +
mov ecx 8E5E0244h +
cmp eax ecx +
jg loc_1029505  +
jz loc_10294FB  +
add ecx 0FFFFFFCBh +
cmp eax ecx +
jg loc_1029324  +
jz loc_102931A  +
mov ecx 8E5E0198h +
cmp eax ecx +
jg loc_1029229  +
jz loc_102921F  +
add ecx 0FFFFFFABh +
cmp eax ecx +
jg loc_1029195  +
jz loc_102918B  +
mov ecx 8E5E0067h +
cmp eax ecx +
jg loc_1029132  +
jz loc_1029128  +
cmp eax 8007000Eh +
jz loc_102911E  +
cmp eax 8E5E0001h +
jz loc_1029114  +
cmp eax 8E5E0064h +
jz loc_102910A  +
cmp eax 8E5E0065h +
jz loc_1029100  +
cmp eax 8E5E0066h +
jnz loc_102A333  +
mov eax offset aJet_errfileclo +
jmp loc_102A354  +
mov eax offset aJet_errrfsnota +
jmp loc_102A354  +
mov eax offset aJet_errrfsfail +
jmp loc_102A354  +
mov eax offset aJet_wrnnyi +
jmp loc_102A354  +
mov eax offset aJet_erroutofme +
jmp loc_102A354  +
mov eax offset aJet_erroutofth +
jmp loc_102A354  +
cmp eax 8E5E0069h +
jz loc_1029181  +
cmp eax 8E5E006Ah +
jz loc_1029177  +
cmp eax 8E5E006Bh +
jz loc_102916D  +
cmp eax 8E5E00FFh +
jz loc_1029163  +
cmp eax 8E5E0142h +
jnz loc_102A333  +
mov eax offset aJet_errpreviou +
jmp loc_102A354  +
mov eax offset aJet_errdatabas +
jmp loc_102A354  +
mov eax offset aJet_errinterna +
jmp loc_102A354  +
mov eax offset aJet_errtaskdro +
jmp loc_102A354  +
mov eax offset aJet_errtoomany +
jmp loc_102A354  +
mov eax offset aJet_errpagebou +
jmp loc_102A354  +
add eax 71A1FEBCh +
cmp eax 16h +
ja loc_102A333  +
movzx eax ds:byte_102A389[eax] +
jmp ds:off_102A359[eax*4]  +
mov eax offset aJet_errkeyboun +
jmp loc_102A354  +
mov eax offset aJet_errbadpage +
jmp loc_102A354  +
mov eax offset aJet_errbadbook +
jmp loc_102A354  +
mov eax offset aJet_errntsyste +
jmp loc_102A354  +
mov eax offset aJet_errbadpare +
jmp loc_102A354  +
mov eax offset aJet_errspavail +
jmp loc_102A354  +
mov eax offset aJet_errspava_0 +
jmp loc_102A354  +
mov eax offset aJet_errspava_1 +
jmp loc_102A354  +
mov eax offset aJet_errspownex +
jmp loc_102A354  +
mov eax offset aJet_errdbtimec +
jmp loc_102A354  +
mov eax offset aJet_errkeytrun +
jmp loc_102A354  +
mov eax offset aJet_errkeytoob +
jmp loc_102A354  +
add eax 71A1FE0Ch +
cmp eax 1Ah +
ja loc_102A333  +
jmp ds:off_102A3A1[eax*4]  +
mov eax offset aJet_errinvalid +
jmp loc_102A354  +
mov eax offset aJet_errlogfile +
jmp loc_102A354  +
mov eax offset aJet_errnobacku +
jmp loc_102A354  +
mov eax offset aJet_errbackupd +
jmp loc_102A354  +
mov eax offset aJet_errbackupi +
jmp loc_102A354  +
mov eax offset aJet_errrestore +
jmp loc_102A354  +
mov eax offset aJet_errmissing +
jmp loc_102A354  +
mov eax offset aJet_errlogwrit +
jmp loc_102A354  +
mov eax offset aJet_errlogdisa +
jmp loc_102A354  +
mov eax offset aJet_errcannotl +
jmp loc_102A354  +
mov eax offset aJet_errloggene +
jmp loc_102A354  +
mov eax offset aJet_errbadlogv +
jmp loc_102A354  +
mov eax offset aJet_errinval_0 +
jmp loc_102A354  +
mov eax offset aJet_errlogging +
jmp loc_102A354  +
mov eax offset aJet_errlogbuff +
jmp loc_102A354  +
mov eax offset aJet_errlogsequ +
jmp loc_102A354  +
mov eax offset aJet_errnobac_0 +
jmp loc_102A354  +
mov eax offset aJet_errinval_1 +
jmp loc_102A354  +
mov eax offset aJet_errbackupn +
jmp loc_102A354  +
mov eax offset aJet_errdeleteb +
jmp loc_102A354  +
mov eax offset aJet_errmakebac +
jmp loc_102A354  +
mov eax offset aJet_errinval_2 +
jmp loc_102A354  +
mov eax offset aJet_errrecover +
jmp loc_102A354  +
add eax 71A1FDF0h +
cmp eax 33h +
ja loc_102A333  +
jmp ds:off_102A40D[eax*4]  +
mov eax offset aJet_errmissi_0 +
jmp loc_102A354  +
mov eax offset aJet_errlogdisk +
jmp loc_102A354  +
mov eax offset aJet_errbadlogs +
jmp loc_102A354  +
mov eax offset aJet_errbaddbsi +
jmp loc_102A354  +
mov eax offset aJet_errbadchec +
jmp loc_102A354  +
mov eax offset aJet_errcheckpo +
jmp loc_102A354  +
mov eax offset aJet_errmissi_1 +
jmp loc_102A354  +
mov eax offset aJet_errbadpatc +
jmp loc_102A354  +
mov eax offset aJet_errredoabr +
jmp loc_102A354  +
mov eax offset aJet_errbadslvs +
jmp loc_102A354  +
mov eax offset aJet_errpatchfi +
jmp loc_102A354  +
mov eax offset aJet_errdatab_0 +
jmp loc_102A354  +
mov eax offset aJet_errdatab_1 +
jmp loc_102A354  +
mov eax offset aJet_errlogfi_0 +
jmp loc_102A354  +
mov eax offset aJet_errcheck_0 +
jmp loc_102A354  +
mov eax offset aJet_errrequire +
jmp loc_102A354  +
mov eax offset aJet_errsoftrec +
jmp loc_102A354  +
mov eax offset aJet_errlogfi_1 +
jmp loc_102A354  +
mov eax offset aJet_errlogsect +
jmp loc_102A354  +
mov eax offset aJet_errlogse_0 +
jmp loc_102A354  +
mov eax offset aJet_errlogse_1 +
jmp loc_102A354  +
mov eax offset aJet_errstreami +
jmp loc_102A354  +
mov eax offset aJet_errdatab_2 +
jmp loc_102A354  +
mov eax offset aJet_errconsist +
jmp loc_102A354  +
mov eax offset aJet_errdatab_3 +
jmp loc_102A354  +
mov eax offset aJet_errendingr +
jmp loc_102A354  +
mov eax offset aJet_errstartin +
jmp loc_102A354  +
mov eax offset aJet_errgivenlo +
jmp loc_102A354  +
mov eax offset aJet_errgiven_0 +
jmp loc_102A354  +
mov eax offset aJet_errmissi_2 +
jmp loc_102A354  +
mov eax offset aJet_errmissi_3 +
jmp loc_102A354  +
mov eax offset aJet_errbadback +
jmp loc_102A354  +
mov eax offset aJet_errdatab_4 +
jmp loc_102A354  +
mov eax offset aJet_errdatab_5 +
jmp loc_102A354  +
mov eax offset aJet_errmissi_4 +
jmp loc_102A354  +
mov eax offset aJet_errdbtimet +
jmp loc_102A354  +
mov eax offset aJet_errdbtim_0 +
jmp loc_102A354  +
mov eax offset aJet_errmissi_5 +
jmp loc_102A354  +
mov eax offset aJet_errlogtorn +
jmp loc_102A354  +
mov eax offset aJet_errlogto_0 +
jmp loc_102A354  +
mov eax offset aJet_errlogcorr +
jmp loc_102A354  +
mov eax offset aJet_errlogco_0 +
jmp loc_102A354  +
mov eax offset aJet_errmustdis +
jmp loc_102A354  +
mov eax offset aJet_errbadrest +
jmp loc_102A354  +
mov eax offset aJet_errrecov_0 +
jmp loc_102A354  +
mov eax offset aJet_errdatab_6 +
jmp loc_102A354  +
mov ecx 8E5E0414h +
cmp eax ecx +
jg loc_102978B  +
jz loc_1029781  +
add ecx 0FFFFFFE0h +
cmp eax ecx +
jg loc_1029690  +
jz loc_1029686  +
mov ecx 8E5E0265h +
cmp eax ecx +
jg loc_10295D0  +
jz loc_10295C6  +
add eax 71A1FDBBh +
cmp eax 1Fh +
ja loc_102A333  +
movzx eax ds:byte_102A50D[eax] +
jmp ds:off_102A4DD[eax*4]  +
mov eax offset aJet_errsoftr_0 +
jmp loc_102A354  +
mov eax offset aJet_errcommitt +
jmp loc_102A354  +
mov eax offset aJet_errsectors +
jmp loc_102A354  +
mov eax offset aJet_errrecov_1 +
jmp loc_102A354  +
mov eax offset aJet_errcommi_0 +
jmp loc_102A354  +
mov eax offset aJet_errunicode +
jmp loc_102A354  +
mov eax offset aJet_errunico_0 +
jmp loc_102A354  +
mov eax offset aJet_errunico_1 +
jmp loc_102A354  +
mov eax offset aJet_errexistin +
jmp loc_102A354  +
mov eax offset aJet_errexist_0 +
jmp loc_102A354  +
mov eax offset aJet_errlogread +
jmp loc_102A354  +
mov eax offset aJet_errslvread +
jmp loc_102A354  +
mov ecx 8E5E03E9h +
cmp eax ecx +
jg loc_102963E  +
jz loc_1029634  +
cmp eax 8E5E0266h +
jz loc_102962A  +
cmp eax 8E5E0267h +
jz loc_1029620  +
cmp eax 8E5E0268h +
jz loc_1029616  +
cmp eax 8E5E0384h +
jz loc_102960C  +
cmp eax 8E5E03E8h +
jnz loc_102A333  +
mov eax offset aJet_errterminp +
jmp loc_102A354  +
mov eax offset aJet_errinval_3 +
jmp loc_102A354  +
mov eax offset aJet_errlogfi_2 +
jmp loc_102A354  +
mov eax offset aJet_errresto_0 +
jmp loc_102A354  +
mov eax offset aJet_errcheck_1 +
jmp loc_102A354  +
mov eax offset aJet_errfeature +
jmp loc_102A354  +
cmp eax 8E5E03EAh +
jz loc_102967C  +
cmp eax 8E5E03EBh +
jz loc_1029672  +
cmp eax 8E5E03F0h +
jz loc_1029668  +
cmp eax 8E5E03F2h +
jnz loc_102A333  +
mov eax offset aJet_errinval_4 +
jmp loc_102A354  +
mov eax offset aJet_errdatab_7 +
jmp loc_102A354  +
mov eax offset aJet_errinval_5 +
jmp loc_102A354  +
mov eax offset aJet_errinval_6 +
jmp loc_102A354  +
mov eax offset aJet_erroutofda +
jmp loc_102A354  +
add eax 71A1FC0Bh +
cmp eax 1Eh +
ja loc_102A333  +
jmp ds:off_102A52D[eax*4]  +
mov eax offset aJet_erroutofcu +
jmp loc_102A354  +
mov eax offset aJet_erroutofbu +
jmp loc_102A354  +
mov eax offset aJet_errtooma_0 +
jmp loc_102A354  +
mov eax offset aJet_errtooma_1 +
jmp loc_102A354  +
mov eax offset aJet_errrecordd +
jmp loc_102A354  +
mov eax offset aJet_errreadver +
jmp loc_102A354  +
mov eax offset aJet_errpagenot +
jmp loc_102A354  +
mov eax offset aJet_erroutoffi +
jmp loc_102A354  +
mov eax offset aJet_errdiskio +
jmp loc_102A354  +
mov eax offset aJet_errinval_7 +
jmp loc_102A354  +
mov eax offset aJet_errinval_8 +
jmp loc_102A354  +
mov eax offset aJet_errinval_9 +
jmp loc_102A354  +
mov eax offset aJet_errrecordt +
jmp loc_102A354  +
mov eax offset aJet_errtooma_2 +
jmp loc_102A354  +
mov eax offset aJet_errinva_10 +
jmp loc_102A354  +
mov eax offset aJet_errnotinit +
jmp loc_102A354  +
mov eax offset aJet_erralready +
jmp loc_102A354  +
mov eax offset aJet_errinitinp +
jmp loc_102A354  +
mov eax offset aJet_errfileacc +
jmp loc_102A354  +
mov eax offset aJet_errbuffert +
jmp loc_102A354  +
mov eax offset aJet_errtooma_3 +
jmp loc_102A354  +
mov eax offset aJet_errcontain +
jmp loc_102A354  +
mov eax offset aJet_errinva_11 +
jmp loc_102A354  +
add eax 71A1FBEBh +
cmp eax 44h +
ja loc_102A333  +
movzx eax ds:byte_102A661[eax] +
jmp ds:off_102A5A9[eax*4]  +
mov eax offset aJet_errinva_12 +
jmp loc_102A354  +
mov eax offset aJet_errcolumni +
jmp loc_102A354  +
mov eax offset aJet_errinva_13 +
jmp loc_102A354  +
mov eax offset aJet_errcolumnn +
jmp loc_102A354  +
mov eax offset aJet_errindexin +
jmp loc_102A354  +
mov eax offset aJet_errlinknot +
jmp loc_102A354  +
mov eax offset aJet_errnullkey +
jmp loc_102A354  +
mov eax offset aJet_errnotintr +
jmp loc_102A354  +
mov eax offset aJet_errtooma_4 +
jmp loc_102A354  +
mov eax offset aJet_errinva_14 +
jmp loc_102A354  +
mov eax offset aJet_errinva_15 +
jmp loc_102A354  +
mov eax offset aJet_errinva_16 +
jmp loc_102A354  +
mov eax offset aJet_errinva_17 +
jmp loc_102A354  +
mov eax offset aJet_errversion +
jmp loc_102A354  +
mov eax offset aJet_errversi_0 +
jmp loc_102A354  +
mov eax offset aJet_errversi_1 +
jmp loc_102A354  +
mov eax offset aJet_errcannoti +
jmp loc_102A354  +
mov eax offset aJet_errrecordn +
jmp loc_102A354  +
mov eax offset aJet_errtooma_5 +
jmp loc_102A354  +
mov eax offset aJet_erroutofob +
jmp loc_102A354  +
mov eax offset aJet_erroutoflo +
jmp loc_102A354  +
mov eax offset aJet_erroutofau +
jmp loc_102A354  +
mov eax offset aJet_erroutofdb +
jmp loc_102A354  +
mov eax offset aJet_erroutofse +
jmp loc_102A354  +
mov eax offset aJet_errrunning +
jmp loc_102A354  +
mov eax offset aJet_errrunni_0 +
jmp loc_102A354  +
mov eax offset aJet_errsystemp +
jmp loc_102A354  +
mov eax offset aJet_errsyste_0 +
jmp loc_102A354  +
mov eax offset aJet_errlogfi_3 +
jmp loc_102A354  +
mov eax offset aJet_errtemppat +
jmp loc_102A354  +
mov eax offset aJet_errinstanc +
jmp loc_102A354  +
mov eax offset aJet_errinsta_0 +
jmp loc_102A354  +
mov eax offset aJet_errdatab_8 +
jmp loc_102A354  +
mov eax offset aJet_errinsta_1 +
jmp loc_102A354  +
mov eax offset aJet_erroutof_0 +
jmp loc_102A354  +
mov eax offset aJet_errwriteco +
jmp loc_102A354  +
mov eax offset aJet_errtransto +
jmp loc_102A354  +
mov eax offset aJet_errinva_18 +
jmp loc_102A354  +
mov eax offset aJet_errwrite_0 +
jmp loc_102A354  +
mov eax offset aJet_errintrans +
jmp loc_102A354  +
mov eax offset aJet_errrollbac +
jmp loc_102A354  +
mov eax offset aJet_errtransre +
jmp loc_102A354  +
mov eax offset aJet_errsession +
jmp loc_102A354  +
mov eax offset aJet_errrecor_0 +
jmp loc_102A354  +
mov eax offset aJet_errcannotm +
jmp loc_102A354  +
mov eax offset aJet_errsesidta +
jmp loc_102A354  +
mov ecx 8E5E05F8h +
cmp eax ecx +
jg loc_1029D3C  +
jz loc_1029D32  +
add eax 71A1FBA5h +
cmp eax 19Bh +
ja loc_102A333  +
movzx eax ds:byte_102A819[eax] +
jmp ds:off_102A6A9[eax*4]  +
mov eax offset aJet_errinva_19 +
jmp loc_102A354  +
mov eax offset aJet_errdirtysh +
jmp loc_102A354  +
mov eax offset aJet_errdatab_9 +
jmp loc_102A354  +
mov eax offset aJet_errdata_10 +
jmp loc_102A354  +
mov eax offset aJet_errdata_11 +
jmp loc_102A354  +
mov eax offset aJet_errdata_12 +
jmp loc_102A354  +
mov eax offset aJet_errdata_13 +
jmp loc_102A354  +
mov eax offset aJet_errdata_14 +
jmp loc_102A354  +
mov eax offset aJet_errdata_15 +
jmp loc_102A354  +
mov eax offset aJet_errcannotd +
jmp loc_102A354  +
mov eax offset aJet_errinva_20 +
jmp loc_102A354  +
mov eax offset aJet_errdata_16 +
jmp loc_102A354  +
mov eax offset aJet_errdata_17 +
jmp loc_102A354  +
mov eax offset aJet_errdata_18 +
jmp loc_102A354  +
mov eax offset aJet_errpagesiz +
jmp loc_102A354  +
mov eax offset aJet_errtooma_6 +
jmp loc_102A354  +
mov eax offset aJet_errdata_19 +
jmp loc_102A354  +
mov eax offset aJet_errattache +
jmp loc_102A354  +
mov eax offset aJet_errdata_20 +
jmp loc_102A354  +
mov eax offset aJet_errdata_21 +
jmp loc_102A354  +
mov eax offset aJet_errforcede +
jmp loc_102A354  +
mov eax offset aJet_errcatalog +
jmp loc_102A354  +
mov eax offset aJet_errpartial +
jmp loc_102A354  +
mov eax offset aJet_errdata_22 +
jmp loc_102A354  +
mov eax offset aJet_errdata_23 +
jmp loc_102A354  +
mov eax offset aJet_errinva_21 +
jmp loc_102A354  +
mov eax offset aJet_errtablelo +
jmp loc_102A354  +
mov eax offset aJet_errtabledu +
jmp loc_102A354  +
mov eax offset aJet_errtablein +
jmp loc_102A354  +
mov eax offset aJet_errobjectn +
jmp loc_102A354  +
mov eax offset aJet_errdensity +
jmp loc_102A354  +
mov eax offset aJet_errtableno +
jmp loc_102A354  +
mov eax offset aJet_errinva_22 +
jmp loc_102A354  +
mov eax offset aJet_errtooma_7 +
jmp loc_102A354  +
mov eax offset aJet_errillegal +
jmp loc_102A354  +
mov eax offset aJet_errtooma_8 +
jmp loc_102A354  +
mov eax offset aJet_errobjectd +
jmp loc_102A354  +
mov eax offset aJet_errinva_23 +
jmp loc_102A354  +
mov eax offset aJet_errcanno_0 +
jmp loc_102A354  +
mov eax offset aJet_errcanno_1 +
jmp loc_102A354  +
mov eax offset aJet_errcanno_2 +
jmp loc_102A354  +
mov eax offset aJet_errexclusi +
jmp loc_102A354  +
mov eax offset aJet_errfixeddd +
jmp loc_102A354  +
mov eax offset aJet_errfixedin +
jmp loc_102A354  +
mov eax offset aJet_errcannotn +
jmp loc_102A354  +
mov eax offset aJet_errddlnoti +
jmp loc_102A354  +
mov eax offset aJet_errinva_24 +
jmp loc_102A354  +
mov eax offset aJet_errclientr +
jmp loc_102A354  +
mov eax offset aJet_errcannota +
jmp loc_102A354  +
mov eax offset aJet_errindexca +
jmp loc_102A354  +
mov eax offset aJet_errindexha +
jmp loc_102A354  +
mov eax offset aJet_errindexdu +
jmp loc_102A354  +
mov eax offset aJet_errindexno +
jmp loc_102A354  +
mov eax offset aJet_errindexmu +
jmp loc_102A354  +
mov eax offset aJet_errindex_0 +
jmp loc_102A354  +
mov eax offset aJet_errinva_25 +
jmp loc_102A354  +
mov eax offset aJet_errtooma_9 +
jmp loc_102A354  +
mov eax offset aJet_errmultiva +
jmp loc_102A354  +
mov eax offset aJet_errindexbu +
jmp loc_102A354  +
mov eax offset aJet_errprimary +
jmp loc_102A354  +
mov eax offset aJet_errseconda +
jmp loc_102A354  +
mov eax offset aJet_errinva_26 +
jmp loc_102A354  +
mov eax offset aJet_errindextu +
jmp loc_102A354  +
mov eax offset aJet_errindex_1 +
jmp loc_102A354  +
mov eax offset aJet_errindex_2 +
jmp loc_102A354  +
mov eax offset aJet_errindex_3 +
jmp loc_102A354  +
mov eax offset aJet_errindex_4 +
jmp loc_102A354  +
mov eax offset aJet_errindex_5 +
jmp loc_102A354  +
mov eax offset aJet_errindex_6 +
jmp loc_102A354  +
mov eax offset aJet_errindex_7 +
jmp loc_102A354  +
mov eax offset aJet_errcolumnl +
jmp loc_102A354  +
mov eax offset aJet_errcolum_0 +
jmp loc_102A354  +
mov eax offset aJet_errcolumnd +
jmp loc_102A354  +
mov eax offset aJet_errnullinv +
jmp loc_102A354  +
mov eax offset aJet_errcolum_1 +
jmp loc_102A354  +
mov eax offset aJet_errcolumnt +
jmp loc_102A354  +
mov eax offset aJet_errcolum_2 +
jmp loc_102A354  +
mov eax offset aJet_errcolum_3 +
jmp loc_102A354  +
mov eax offset aJet_errmulti_0 +
jmp loc_102A354  +
mov eax offset aJet_errcolumnr +
jmp loc_102A354  +
mov eax offset aJet_errinva_27 +
jmp loc_102A354  +
mov eax offset aJet_errtaggedn +
jmp loc_102A354  +
mov eax offset aJet_errnocurre +
jmp loc_102A354  +
mov eax offset aJet_errkeyisma +
jmp loc_102A354  +
mov eax offset aJet_errbadcolu +
jmp loc_102A354  +
mov eax offset aJet_errbaditag +
jmp loc_102A354  +
mov eax offset aJet_errcolum_4 +
jmp loc_102A354  +
mov eax offset aJet_errcannotb +
jmp loc_102A354  +
mov eax offset aJet_errdefault +
jmp loc_102A354  +
mov eax offset aJet_errmulti_1 +
jmp loc_102A354  +
mov eax offset aJet_errlvcorru +
jmp loc_102A354  +
mov eax offset aJet_errmulti_2 +
jmp loc_102A354  +
mov ecx 8E5E0FA2h +
cmp eax ecx +
jg loc_102A067  +
jz loc_102A05D  +
mov ecx 8E5E0772h +
cmp eax ecx +
jg loc_1029F04  +
jz loc_1029EFA  +
mov ecx 8E5E0653h +
cmp eax ecx +
jg loc_1029E44  +
jz loc_1029E3A  +
add ecx 0FFFFFFF1h +
cmp eax ecx +
jg loc_1029DE1  +
jz loc_1029DD7  +
cmp eax 8E5E05F9h +
jz loc_1029DCD  +
cmp eax 8E5E05FAh +
jz loc_1029DC3  +
cmp eax 8E5E0641h +
jz loc_1029DB9  +
cmp eax 8E5E0642h +
jz loc_1029DAF  +
cmp eax 8E5E0643h +
jnz loc_102A333  +
mov eax offset aJet_errnocur_0 +
jmp loc_102A354  +
mov eax offset aJet_errrecor_1 +
jmp loc_102A354  +
mov eax offset aJet_errrecor_2 +
jmp loc_102A354  +
mov eax offset aJet_errinva_28 +
jmp loc_102A354  +
mov eax offset aJet_errderived +
jmp loc_102A354  +
mov eax offset aJet_errrecordp +
jmp loc_102A354  +
cmp eax 8E5E0645h +
jz loc_1029E30  +
cmp eax 8E5E0647h +
jz loc_1029E26  +
cmp eax 8E5E0648h +
jz loc_1029E1C  +
cmp eax 8E5E0649h +
jz loc_1029E12  +
cmp eax 8E5E064Bh +
jnz loc_102A333  +
mov eax offset aJet_errdatahas +
jmp loc_102A354  +
mov eax offset aJet_errupdaten +
jmp loc_102A354  +
mov eax offset aJet_errkeynotm +
jmp loc_102A354  +
mov eax offset aJet_erralrea_0 +
jmp loc_102A354  +
mov eax offset aJet_errkeydupl +
jmp loc_102A354  +
mov eax offset aJet_errlanguag +
jmp loc_102A354  +
mov ecx 8E5E0711h +
cmp eax ecx +
jg loc_1029EB2  +
jz loc_1029EA8  +
cmp eax 8E5E06A5h +
jz loc_1029E9E  +
cmp eax 8E5E06A6h +
jz loc_1029E94  +
cmp eax 8E5E070Bh +
jz loc_1029E8A  +
cmp eax 8E5E070Dh +
jz loc_1029E80  +
cmp eax 8E5E0710h +
jnz loc_102A333  +
mov eax offset aJet_errdiskful +
jmp loc_102A354  +
mov eax offset aJet_errtoom_10 +
jmp loc_102A354  +
mov eax offset aJet_errtempfil +
jmp loc_102A354  +
mov eax offset aJet_errinva_29 +
jmp loc_102A354  +
mov eax offset aJet_errtoom_11 +
jmp loc_102A354  +
mov eax offset aJet_errpermiss +
jmp loc_102A354  +
cmp eax 8E5E0713h +
jz loc_1029EF0  +
cmp eax 8E5E0714h +
jz loc_1029EE6  +
cmp eax 8E5E073Ah +
jz loc_1029EDC  +
cmp eax 8E5E073Ch +
jnz loc_102A333  +
mov eax offset aJet_errlogco_1 +
jmp loc_102A354  +
mov eax offset aJet_errafterin +
jmp loc_102A354  +
mov eax offset aJet_errfileinv +
jmp loc_102A354  +
mov eax offset aJet_errfilenot +
jmp loc_102A354  +
mov eax offset aJet_errinva_30 +
jmp loc_102A354  +
mov ecx 8E5E0835h +
cmp eax ecx +
jg loc_1029F96  +
jz loc_1029F8C  +
add eax 71A1F88Dh +
cmp eax 0Ah +
ja loc_102A333  +
jmp ds:off_102A9B5[eax*4]  +
mov eax offset aJet_erraccessd +
jmp loc_102A354  +
mov eax offset aJet_errtoom_12 +
jmp loc_102A354  +
mov eax offset aJet_errsessi_0 +
jmp loc_102A354  +
mov eax offset aJet_errentrypo +
jmp loc_102A354  +
mov eax offset aJet_errsessi_1 +
jmp loc_102A354  +
mov eax offset aJet_errsessi_2 +
jmp loc_102A354  +
mov eax offset aJet_errsessi_3 +
jmp loc_102A354  +
mov eax offset aJet_errrecordf +
jmp loc_102A354  +
mov eax offset aJet_erronedata +
jmp loc_102A354  +
mov eax offset aJet_errrollb_0 +
jmp loc_102A354  +
mov eax offset aJet_errcallbac +
jmp loc_102A354  +
mov ecx 8E5E0964h +
cmp eax ecx +
jg loc_102A004  +
jz loc_1029FFA  +
cmp eax 8E5E0836h +
jz loc_1029FF0  +
cmp eax 8E5E0837h +
jz loc_1029FE6  +
cmp eax 8E5E0961h +
jz loc_1029FDC  +
cmp eax 8E5E0962h +
jz loc_1029FD2  +
cmp eax 8E5E0963h +
jnz loc_102A333  +
mov eax offset aJet_errossnaps +
jmp loc_102A354  +
mov eax offset aJet_errossna_0 +
jmp loc_102A354  +
mov eax offset aJet_errossna_1 +
jmp loc_102A354  +
mov eax offset aJet_errspacehi +
jmp loc_102A354  +
mov eax offset aJet_errcallb_0 +
jmp loc_102A354  +
mov eax offset aJet_errossna_2 +
jmp loc_102A354  +
cmp eax 8E5E0BB8h +
jz loc_102A053  +
cmp eax 8E5E0BB9h +
jz loc_102A049  +
cmp eax 8E5E0BBAh +
jz loc_102A03F  +
cmp eax 8E5E0FA0h +
jz loc_102A035  +
cmp eax 8E5E0FA1h +
jnz loc_102A333  +
mov eax offset aJet_errfileiob +
jmp loc_102A354  +
mov eax offset aJet_errfileios +
jmp loc_102A354  +
mov eax offset aJet_errlsnotse +
jmp loc_102A354  +
mov eax offset aJet_errlsalrea +
jmp loc_102A354  +
mov eax offset aJet_errlscallb +
jmp loc_102A354  +
mov eax offset aJet_errfileioa +
jmp loc_102A354  +
mov ecx 0E5E041Fh +
cmp eax ecx +
jg loc_102A205  +
jz loc_102A1FB  +
mov ecx 0E5E022Fh +
cmp eax ecx +
jg loc_102A157  +
jz loc_102A14D  +
mov ecx 0E5E005Ah +
cmp eax ecx +
jg loc_102A0F8  +
jz loc_102A0EE  +
cmp eax 8E5E0FA3h +
jz loc_102A0E4  +
cmp eax 8E5E0FA4h +
jz loc_102A0DA  +
cmp eax 8E5E0FA5h +
jz loc_102A0D0  +
test eax eax +
jz loc_102A0C6  +
cmp eax 0E5E0051h +
jnz loc_102A333  +
mov eax offset aJet_errdata_24 +
jmp loc_102A354  +
mov eax offset aJet_errsuccess +
jmp loc_102A354  +
mov eax offset aJet_errfilecom +
jmp loc_102A354  +
mov eax offset aJet_errfileiof +
jmp loc_102A354  +
mov eax offset aJet_errfileior +
jmp loc_102A354  +
mov eax offset aJet_errindex_8 +
jmp loc_102A354  +
sub eax 0E5E0063h +
jz loc_102A143  +
sub eax 0DEh +
jz loc_102A139  +
sub eax 18h +
jz loc_102A12F  +
sub eax 3Dh +
jz loc_102A125  +
sub eax 98h +
jnz loc_102A333  +
mov eax offset aJet_wrnexistin +
jmp loc_102A354  +
mov eax offset aJet_wrnseparat +
jmp loc_102A354  +
mov eax offset aJet_wrnuniquek +
jmp loc_102A354  +
mov eax offset aJet_wrnremaini +
jmp loc_102A354  +
mov eax offset aJet_errindex_9 +
jmp loc_102A354  +
mov eax offset aJet_wrnexist_0 +
jmp loc_102A354  +
mov ecx 0E5E03ECh +
cmp eax ecx +
jg loc_102A1BC  +
jz loc_102A1B2  +
sub eax 0E5E0234h +
jz loc_102A1A8  +
sub eax 0Eh +
jz loc_102A19E  +
sub eax 7 +
jz loc_102A194  +
dec eax  +
dec eax  +
jz loc_102A18A  +
sub eax 8 +
jnz loc_102A333  +
mov eax offset aJet_wrndatabas +
jmp loc_102A354  +
mov eax offset aJet_wrncommitt +
jmp loc_102A354  +
mov eax offset aJet_wrncommi_0 +
jmp loc_102A354  +
mov eax offset aJet_wrntargeti +
jmp loc_102A354  +
mov eax offset aJet_wrnskipthi +
jmp loc_102A354  +
mov eax offset aJet_wrncolumnn +
jmp loc_102A354  +
sub eax 0E5E03EEh +
jz loc_102A1F1  +
dec eax  +
jz loc_102A1E7  +
dec eax  +
dec eax  +
jz loc_102A1DD  +
sub eax 1Eh +
jnz loc_102A333  +
mov eax offset aJet_wrnseeknot +
jmp loc_102A354  +
mov eax offset aJet_wrnsortove +
jmp loc_102A354  +
mov eax offset aJet_wrndatab_0 +
jmp loc_102A354  +
mov eax offset aJet_wrnbuffert +
jmp loc_102A354  +
mov eax offset aJet_wrnnoerror +
jmp loc_102A354  +
mov ecx 0E5E05FEh +
cmp eax ecx +
jg loc_102A2D3  +
jz loc_102A2C9  +
add ecx 0FFFFFF89h +
cmp eax ecx +
jg loc_102A27C  +
jz loc_102A272  +
sub eax 0E5E0422h +
jz loc_102A268  +
sub eax 9 +
jz loc_102A25E  +
dec eax  +
jz loc_102A254  +
sub eax 0E9h +
jz loc_102A24A  +
sub eax 1Ah +
jnz loc_102A333  +
mov eax offset aJet_wrntablein +
jmp loc_102A354  +
mov eax offset aJet_wrntableem +
jmp loc_102A354  +
mov eax offset aJet_wrncolumns +
jmp loc_102A354  +
mov eax offset aJet_wrnnowrite +
jmp loc_102A354  +
mov eax offset aJet_wrnnoidlea +
jmp loc_102A354  +
mov eax offset aJet_wrncorrupt +
jmp loc_102A354  +
sub eax 0E5E05E8h +
jz loc_102A2BF  +
sub eax 8 +
jz loc_102A2B5  +
sub eax 0Bh +
jz loc_102A2AB  +
dec eax  +
jz loc_102A2A1  +
dec eax  +
jnz loc_102A333  +
mov eax offset aJet_wrncolumnm +
jmp loc_102A354  +
mov eax offset aJet_wrncolum_0 +
jmp loc_102A354  +
mov eax offset aJet_wrncolum_1 +
jmp loc_102A354  +
mov eax offset aJet_wrncopylon +
jmp loc_102A354  +
mov eax offset aJet_wrncolum_2 +
jmp loc_102A354  +
mov eax offset aJet_wrncolumnt +
jmp loc_102A354  +
mov ecx 0E5E0715h +
cmp eax ecx +
jg loc_102A31F  +
jz loc_102A318  +
sub eax 0E5E05FFh +
jz loc_102A311  +
dec eax  +
jz loc_102A30A  +
dec eax  +
jz loc_102A303  +
sub eax 49h +
jz loc_102A2FC  +
sub eax 8 +
jnz loc_102A333  +
mov eax offset aJet_wrnkeychan +
jmp loc_102A354  +
mov eax offset aJet_wrndatahas +
jmp loc_102A354  +
mov eax offset aJet_wrncolumnd +
jmp loc_102A354  +
mov eax offset aJet_wrncolum_3 +
jmp loc_102A354  +
mov eax offset aJet_wrncolumnp +
jmp loc_102A354  +
mov eax offset aJet_wrnfileope +
jmp loc_102A354  +
sub eax 0E5E0774h +
jz loc_102A34F  +
sub eax 5Ch +
jz loc_102A348  +
dec eax  +
jz loc_102A341  +
sub eax 63h +
jz loc_102A33A  +
mov eax offset aUnknownError +
jmp loc_102A354  +
mov eax offset aJet_wrncallbac +
jmp loc_102A354  +
mov eax offset aJet_wrndefragn +
jmp loc_102A354  +
mov eax offset aJet_wrndefraga +
jmp loc_102A354  +
mov eax offset aJet_wrnidleful +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax hObj +
cmp eax offset hObj +
jz loc_102AA12  +
test byte ptr [eax+1Ch] 2 +
jz loc_102AA12  +
push [ebp+arg_0]  +
push offset dword_1018018  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10181FD  +
pop ebp  +
retn 4  +
***
cmp cl 40h +
jnb loc_102AAAA  +
cmp cl 20h +
jnb loc_102AAA0  +
shld edx eax +
shl eax cl +
retn   +
***
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
***
xor eax eax +
xor edx edx +
retn   +
***
retf   +
***
